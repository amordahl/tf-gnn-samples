TranslationUnitDecl 0x563c31b7be18 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x563c31b7c6d8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x563c31b7c3b0 '__int128'
|-TypedefDecl 0x563c31b7c748 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x563c31b7c3d0 'unsigned __int128'
|-TypedefDecl 0x563c31b7ca50 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x563c31b7c820 'struct __NSConstantString_tag'
|   `-Record 0x563c31b7c7a0 '__NSConstantString_tag'
|-TypedefDecl 0x563c31b7caf8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x563c31b7cab0 'char *'
|   `-BuiltinType 0x563c31b7beb0 'char'
|-TypedefDecl 0x563c31bbb650 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'struct __va_list_tag [1]'
| `-ConstantArrayType 0x563c31b7cd90 'struct __va_list_tag [1]' 1 
|   `-RecordType 0x563c31b7cbd0 'struct __va_list_tag'
|     `-Record 0x563c31b7cb50 '__va_list_tag'
|-FunctionDecl 0x563c31bbb790 <./split_6/mix036_power.oepc_false-unreach-call.i:1:1, col:34> col:13 used __VERIFIER_assume 'void (int)' extern
| `-ParmVarDecl 0x563c31bbb6c0 <col:31> col:34 'int'
|-FunctionDecl 0x563c31bbb958 <line:2:1, col:45> col:15 used __VERIFIER_nondet_pointer 'void *(void)' extern
|-FunctionDecl 0x563c31bbba80 <line:3:1, col:61> col:13 used __VERIFIER_error 'void () __attribute__((noreturn))' extern
|-FunctionDecl 0x563c31bbbbc8 <line:4:1, col:99> col:6 used __VERIFIER_assert 'void (int)'
| |-ParmVarDecl 0x563c31bbbb38 <col:24, col:28> col:28 used expression 'int'
| `-CompoundStmt 0x563c31bbbdf8 <col:40, col:99>
|   |-IfStmt 0x563c31bbbdc8 <col:42, col:88>
|   | |-UnaryOperator 0x563c31bbbca8 <col:46, col:47> 'int' prefix '!' cannot overflow
|   | | `-ImplicitCastExpr 0x563c31bbbc90 <col:47> 'int' <LValueToRValue>
|   | |   `-DeclRefExpr 0x563c31bbbc70 <col:47> 'int' lvalue ParmVar 0x563c31bbbb38 'expression' 'int'
|   | `-CompoundStmt 0x563c31bbbdb0 <col:59, col:88>
|   |   `-LabelStmt 0x563c31bbbd98 <col:61, col:85> 'ERROR'
|   |     `-CallExpr 0x563c31bbbd28 <col:68, col:85> 'void'
|   |       `-ImplicitCastExpr 0x563c31bbbd10 <col:68> 'void (*)() __attribute__((noreturn))' <FunctionToPointerDecay>
|   |         `-DeclRefExpr 0x563c31bbbcc0 <col:68> 'void () __attribute__((noreturn))' Function 0x563c31bbba80 '__VERIFIER_error' 'void () __attribute__((noreturn))'
|   |-NullStmt 0x563c31bbbde0 <col:89>
|   `-ReturnStmt 0x563c31bbbde8 <col:91>
|-FunctionDecl 0x563c31bbbe40 <line:5:1, col:37> col:13 used __VERIFIER_atomic_begin 'void ()' extern
|-FunctionDecl 0x563c31bbbf00 <line:6:1, col:35> col:13 used __VERIFIER_atomic_end 'void ()' extern
|-FunctionDecl 0x563c31bbc280 <line:8:1, line:10:76> line:8:13 __assert_fail 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x563c31bbbfb8 <col:28, col:40> col:40 __assertion 'const char *'
| |-ParmVarDecl 0x563c31bbc038 <col:53, col:65> col:65 __file 'const char *'
| |-ParmVarDecl 0x563c31bbc0b8 <line:9:7, col:20> col:20 __line 'unsigned int'
| |-ParmVarDecl 0x563c31bbc138 <col:28, col:40> col:40 __function 'const char *'
| `-NoThrowAttr 0x563c31bbc340 <line:10:22>
|-FunctionDecl 0x563c31be2390 <line:11:1, line:13:76> line:11:13 __assert_perror_fail 'void (int, const char *, unsigned int, const char *) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x563c31bbc3b0 <col:35, col:39> col:39 __errnum 'int'
| |-ParmVarDecl 0x563c31bbc430 <col:49, col:61> col:61 __file 'const char *'
| |-ParmVarDecl 0x563c31bbc4b0 <line:12:7, col:20> col:20 __line 'unsigned int'
| |-ParmVarDecl 0x563c31bbc530 <col:28, col:40> col:40 __function 'const char *'
| `-NoThrowAttr 0x563c31be2450 <line:13:22>
|-FunctionDecl 0x563c31be2700 <line:14:1, line:15:76> line:14:13 __assert 'void (const char *, const char *, int) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x563c31be24c0 <col:23, col:35> col:35 __assertion 'const char *'
| |-ParmVarDecl 0x563c31be2540 <col:48, col:60> col:60 __file 'const char *'
| |-ParmVarDecl 0x563c31be25c0 <col:68, col:72> col:72 __line 'int'
| `-NoThrowAttr 0x563c31be27b8 <line:15:22>
|-TypedefDecl 0x563c31be2828 <line:17:1, col:23> col:23 __u_char 'unsigned char'
| `-BuiltinType 0x563c31b7bf70 'unsigned char'
|-TypedefDecl 0x563c31be2898 <line:18:1, col:28> col:28 __u_short 'unsigned short'
| `-BuiltinType 0x563c31b7bf90 'unsigned short'
|-TypedefDecl 0x563c31be2908 <line:19:1, col:22> col:22 __u_int 'unsigned int'
| `-BuiltinType 0x563c31b7bfb0 'unsigned int'
|-TypedefDecl 0x563c31be2978 <line:20:1, col:27> col:27 __u_long 'unsigned long'
| `-BuiltinType 0x563c31b7bfd0 'unsigned long'
|-TypedefDecl 0x563c31be29e8 <line:21:1, col:21> col:21 __int8_t 'signed char'
| `-BuiltinType 0x563c31b7bed0 'signed char'
|-TypedefDecl 0x563c31be2a58 <line:22:1, col:23> col:23 __uint8_t 'unsigned char'
| `-BuiltinType 0x563c31b7bf70 'unsigned char'
|-TypedefDecl 0x563c31be2ac8 <line:23:1, col:26> col:26 __int16_t 'short'
| `-BuiltinType 0x563c31b7bef0 'short'
|-TypedefDecl 0x563c31be2b38 <line:24:1, col:28> col:28 __uint16_t 'unsigned short'
| `-BuiltinType 0x563c31b7bf90 'unsigned short'
|-TypedefDecl 0x563c31be2ba8 <line:25:1, col:20> col:20 __int32_t 'int'
| `-BuiltinType 0x563c31b7bf10 'int'
|-TypedefDecl 0x563c31be2c18 <line:26:1, col:22> col:22 __uint32_t 'unsigned int'
| `-BuiltinType 0x563c31b7bfb0 'unsigned int'
|-TypedefDecl 0x563c31be2c88 <line:27:1, col:25> col:25 __int64_t 'long'
| `-BuiltinType 0x563c31b7bf30 'long'
|-TypedefDecl 0x563c31be2cf8 <line:28:1, col:27> col:27 referenced __uint64_t 'unsigned long'
| `-BuiltinType 0x563c31b7bfd0 'unsigned long'
|-TypedefDecl 0x563c31be2d68 <line:29:1, col:18> col:18 referenced __quad_t 'long'
| `-BuiltinType 0x563c31b7bf30 'long'
|-TypedefDecl 0x563c31be2dd8 <line:30:1, col:27> col:27 __u_quad_t 'unsigned long'
| `-BuiltinType 0x563c31b7bfd0 'unsigned long'
|-TypedefDecl 0x563c31be2e48 <line:31:1, col:27> col:27 __dev_t 'unsigned long'
| `-BuiltinType 0x563c31b7bfd0 'unsigned long'
|-TypedefDecl 0x563c31be2eb8 <line:32:1, col:22> col:22 __uid_t 'unsigned int'
| `-BuiltinType 0x563c31b7bfb0 'unsigned int'
|-TypedefDecl 0x563c31be2f28 <line:33:1, col:22> col:22 __gid_t 'unsigned int'
| `-BuiltinType 0x563c31b7bfb0 'unsigned int'
|-TypedefDecl 0x563c31be2f98 <line:34:1, col:27> col:27 __ino_t 'unsigned long'
| `-BuiltinType 0x563c31b7bfd0 'unsigned long'
|-TypedefDecl 0x563c31be3008 <line:35:1, col:27> col:27 __ino64_t 'unsigned long'
| `-BuiltinType 0x563c31b7bfd0 'unsigned long'
|-TypedefDecl 0x563c31be3078 <line:36:1, col:22> col:22 __mode_t 'unsigned int'
| `-BuiltinType 0x563c31b7bfb0 'unsigned int'
|-TypedefDecl 0x563c31be30e8 <line:37:1, col:27> col:27 __nlink_t 'unsigned long'
| `-BuiltinType 0x563c31b7bfd0 'unsigned long'
|-TypedefDecl 0x563c31be3158 <line:38:1, col:18> col:18 __off_t 'long'
| `-BuiltinType 0x563c31b7bf30 'long'
|-TypedefDecl 0x563c31be31c8 <line:39:1, col:18> col:18 referenced __off64_t 'long'
| `-BuiltinType 0x563c31b7bf30 'long'
|-TypedefDecl 0x563c31be3238 <line:40:1, col:13> col:13 referenced __pid_t 'int'
| `-BuiltinType 0x563c31b7bf10 'int'
|-RecordDecl 0x563c31be3290 <line:41:9, col:32> col:9 struct definition
| `-FieldDecl 0x563c31be3408 <col:18, col:29> col:22 __val 'int [2]'
|-TypedefDecl 0x563c31be34c0 <col:1, col:34> col:34 __fsid_t 'struct __fsid_t':'__fsid_t'
| `-ElaboratedType 0x563c31be3460 'struct __fsid_t' sugar
|   `-RecordType 0x563c31be3310 '__fsid_t'
|     `-Record 0x563c31be3290 ''
|-TypedefDecl 0x563c31be3548 <line:42:1, col:18> col:18 referenced __clock_t 'long'
| `-BuiltinType 0x563c31b7bf30 'long'
|-TypedefDecl 0x563c31be35b8 <line:43:1, col:27> col:27 __rlim_t 'unsigned long'
| `-BuiltinType 0x563c31b7bfd0 'unsigned long'
|-TypedefDecl 0x563c31be3628 <line:44:1, col:27> col:27 __rlim64_t 'unsigned long'
| `-BuiltinType 0x563c31b7bfd0 'unsigned long'
|-TypedefDecl 0x563c31be3698 <line:45:1, col:22> col:22 __id_t 'unsigned int'
| `-BuiltinType 0x563c31b7bfb0 'unsigned int'
|-TypedefDecl 0x563c31be3708 <line:46:1, col:18> col:18 referenced __time_t 'long'
| `-BuiltinType 0x563c31b7bf30 'long'
|-TypedefDecl 0x563c31be3778 <line:47:1, col:22> col:22 __useconds_t 'unsigned int'
| `-BuiltinType 0x563c31b7bfb0 'unsigned int'
|-TypedefDecl 0x563c31be37e8 <line:48:1, col:18> col:18 __suseconds_t 'long'
| `-BuiltinType 0x563c31b7bf30 'long'
|-TypedefDecl 0x563c31be3858 <line:49:1, col:13> col:13 __daddr_t 'int'
| `-BuiltinType 0x563c31b7bf10 'int'
|-TypedefDecl 0x563c31be38c8 <line:50:1, col:13> col:13 __key_t 'int'
| `-BuiltinType 0x563c31b7bf10 'int'
|-TypedefDecl 0x563c31be3938 <line:51:1, col:13> col:13 referenced __clockid_t 'int'
| `-BuiltinType 0x563c31b7bf10 'int'
|-TypedefDecl 0x563c31be39a8 <line:52:1, col:16> col:16 referenced __timer_t 'void *'
| `-PointerType 0x563c31b7c630 'void *'
|   `-BuiltinType 0x563c31b7be70 'void'
|-TypedefDecl 0x563c31be3a18 <line:53:1, col:18> col:18 __blksize_t 'long'
| `-BuiltinType 0x563c31b7bf30 'long'
|-TypedefDecl 0x563c31be3a88 <line:54:1, col:18> col:18 __blkcnt_t 'long'
| `-BuiltinType 0x563c31b7bf30 'long'
|-TypedefDecl 0x563c31be3af8 <line:55:1, col:18> col:18 __blkcnt64_t 'long'
| `-BuiltinType 0x563c31b7bf30 'long'
|-TypedefDecl 0x563c31be3b68 <line:56:1, col:27> col:27 __fsblkcnt_t 'unsigned long'
| `-BuiltinType 0x563c31b7bfd0 'unsigned long'
|-TypedefDecl 0x563c31be3bd8 <line:57:1, col:27> col:27 __fsblkcnt64_t 'unsigned long'
| `-BuiltinType 0x563c31b7bfd0 'unsigned long'
|-TypedefDecl 0x563c31be3c48 <line:58:1, col:27> col:27 __fsfilcnt_t 'unsigned long'
| `-BuiltinType 0x563c31b7bfd0 'unsigned long'
|-TypedefDecl 0x563c31be3cb8 <line:59:1, col:27> col:27 __fsfilcnt64_t 'unsigned long'
| `-BuiltinType 0x563c31b7bfd0 'unsigned long'
|-TypedefDecl 0x563c31be3d28 <line:60:1, col:18> col:18 __fsword_t 'long'
| `-BuiltinType 0x563c31b7bf30 'long'
|-TypedefDecl 0x563c31be3d98 <line:61:1, col:18> col:18 __ssize_t 'long'
| `-BuiltinType 0x563c31b7bf30 'long'
|-TypedefDecl 0x563c31be3e08 <line:62:1, col:18> col:18 referenced __syscall_slong_t 'long'
| `-BuiltinType 0x563c31b7bf30 'long'
|-TypedefDecl 0x563c31be3e78 <line:63:1, col:27> col:27 __syscall_ulong_t 'unsigned long'
| `-BuiltinType 0x563c31b7bfd0 'unsigned long'
|-TypedefDecl 0x563c31be3f08 <line:64:1, col:19> col:19 __loff_t '__off64_t':'long'
| `-TypedefType 0x563c31be3ed0 '__off64_t' sugar
|   |-Typedef 0x563c31be31c8 '__off64_t'
|   `-BuiltinType 0x563c31b7bf30 'long'
|-TypedefDecl 0x563c31be4000 <line:65:1, col:19> col:19 __qaddr_t '__quad_t *'
| `-PointerType 0x563c31be3fc0 '__quad_t *'
|   `-TypedefType 0x563c31be3f60 '__quad_t' sugar
|     |-Typedef 0x563c31be2d68 '__quad_t'
|     `-BuiltinType 0x563c31b7bf30 'long'
|-TypedefDecl 0x563c31be4070 <line:66:1, col:15> col:15 __caddr_t 'char *'
| `-PointerType 0x563c31b7cab0 'char *'
|   `-BuiltinType 0x563c31b7beb0 'char'
|-TypedefDecl 0x563c31be40e0 <line:67:1, col:18> col:18 __intptr_t 'long'
| `-BuiltinType 0x563c31b7bf30 'long'
|-TypedefDecl 0x563c31be4150 <line:68:1, col:22> col:22 __socklen_t 'unsigned int'
| `-BuiltinType 0x563c31b7bfb0 'unsigned int'
|-FunctionDecl 0x563c31be4298 <line:69:1, line:73:1> line:70:1 __bswap_32 'unsigned int (unsigned int)' static inline
| |-ParmVarDecl 0x563c31be41c0 <col:13, col:26> col:26 used __bsx 'unsigned int'
| `-CompoundStmt 0x563c31be55e8 <line:71:1, line:73:1>
|   `-ReturnStmt 0x563c31be55d8 <line:72:3, col:34>
|     `-CallExpr 0x563c31be5598 <col:10, col:34> 'unsigned int'
|       |-ImplicitCastExpr 0x563c31be5580 <col:10> 'unsigned int (*)(unsigned int)' <BuiltinFnToFnPtr>
|       | `-DeclRefExpr 0x563c31be5510 <col:10> '<builtin fn type>' Function 0x563c31be5380 '__builtin_bswap32' 'unsigned int (unsigned int)'
|       `-ImplicitCastExpr 0x563c31be55c0 <col:29> 'unsigned int' <LValueToRValue>
|         `-DeclRefExpr 0x563c31be5530 <col:29> 'unsigned int' lvalue ParmVar 0x563c31be41c0 '__bsx' 'unsigned int'
|-FunctionDecl 0x563c31be5380 <col:10> col:10 implicit used __builtin_bswap32 'unsigned int (unsigned int)' extern
| |-ParmVarDecl 0x563c31be5420 <<invalid sloc>> <invalid sloc> 'unsigned int'
| |-NoThrowAttr 0x563c31be5490 <col:10> Implicit
| `-ConstAttr 0x563c31be54e8 <col:10> Implicit
|-FunctionDecl 0x563c31be5740 <line:74:1, line:78:1> line:75:1 __bswap_64 '__uint64_t (__uint64_t)' static inline
| |-ParmVarDecl 0x563c31be5638 <col:13, col:24> col:24 used __bsx '__uint64_t':'unsigned long'
| `-CompoundStmt 0x563c31be5a58 <line:76:1, line:78:1>
|   `-ReturnStmt 0x563c31be5a48 <line:77:3, col:34>
|     `-CallExpr 0x563c31be5a08 <col:10, col:34> 'unsigned long'
|       |-ImplicitCastExpr 0x563c31be59f0 <col:10> 'unsigned long (*)(unsigned long)' <BuiltinFnToFnPtr>
|       | `-DeclRefExpr 0x563c31be5978 <col:10> '<builtin fn type>' Function 0x563c31be57e8 '__builtin_bswap64' 'unsigned long (unsigned long)'
|       `-ImplicitCastExpr 0x563c31be5a30 <col:29> '__uint64_t':'unsigned long' <LValueToRValue>
|         `-DeclRefExpr 0x563c31be5998 <col:29> '__uint64_t':'unsigned long' lvalue ParmVar 0x563c31be5638 '__bsx' '__uint64_t':'unsigned long'
|-FunctionDecl 0x563c31be57e8 <col:10> col:10 implicit used __builtin_bswap64 'unsigned long (unsigned long)' extern
| |-ParmVarDecl 0x563c31be5888 <<invalid sloc>> <invalid sloc> 'unsigned long'
| |-NoThrowAttr 0x563c31be58f8 <col:10> Implicit
| `-ConstAttr 0x563c31be5950 <col:10> Implicit
|-TypedefDecl 0x563c31be5a88 <line:79:1, col:27> col:27 referenced size_t 'unsigned long'
| `-BuiltinType 0x563c31b7bfd0 'unsigned long'
|-TypedefDecl 0x563c31be5b18 <line:81:1, col:18> col:18 referenced time_t '__time_t':'long'
| `-TypedefType 0x563c31be5ae0 '__time_t' sugar
|   |-Typedef 0x563c31be3708 '__time_t'
|   `-BuiltinType 0x563c31b7bf30 'long'
|-RecordDecl 0x563c31be5b70 <line:84:1, line:88:3> line:84:8 struct timespec definition
| |-FieldDecl 0x563c31be5c28 <line:86:5, col:14> col:14 tv_sec '__time_t':'long'
| `-FieldDecl 0x563c31be5cb8 <line:87:5, col:23> col:23 tv_nsec '__syscall_slong_t':'long'
|-TypedefDecl 0x563c31be5d48 <line:89:1, col:17> col:17 referenced pid_t '__pid_t':'int'
| `-TypedefType 0x563c31be5d10 '__pid_t' sugar
|   |-Typedef 0x563c31be3238 '__pid_t'
|   `-BuiltinType 0x563c31b7bf10 'int'
|-RecordDecl 0x563c31be5da0 <line:90:1, line:93:3> line:90:8 struct sched_param definition
| `-FieldDecl 0x563c31be5e60 <line:92:5, col:9> col:9 __sched_priority 'int'
|-RecordDecl 0x563c31be5eb0 <line:96:1, line:99:3> line:96:8 struct __sched_param definition
| `-FieldDecl 0x563c31be5f70 <line:98:5, col:9> col:9 __sched_priority 'int'
|-TypedefDecl 0x563c31be5fd8 <line:100:1, col:27> col:27 referenced __cpu_mask 'unsigned long'
| `-BuiltinType 0x563c31b7bfd0 'unsigned long'
|-RecordDecl 0x563c31be6030 <line:101:9, line:104:1> line:101:9 struct definition
| `-FieldDecl 0x563c31be62c0 <line:103:3, col:53> col:14 __bits '__cpu_mask [64]'
|-TypedefDecl 0x563c31be73a0 <line:101:1, line:104:3> col:3 referenced cpu_set_t 'struct cpu_set_t':'cpu_set_t'
| `-ElaboratedType 0x563c31be6310 'struct cpu_set_t' sugar
|   `-RecordType 0x563c31be60b0 'cpu_set_t'
|     `-Record 0x563c31be6030 ''
|-FunctionDecl 0x563c31be7678 <line:106:1, line:107:42> line:106:12 __sched_cpucount 'int (size_t, const cpu_set_t *)' extern
| |-ParmVarDecl 0x563c31be7448 <col:30, col:37> col:37 __setsize 'size_t':'unsigned long'
| |-ParmVarDecl 0x563c31be7550 <col:48, col:65> col:65 __setp 'const cpu_set_t *'
| `-NoThrowAttr 0x563c31be7728 <line:107:19>
|-FunctionDecl 0x563c31be7900 <line:108:1, col:92> col:19 __sched_cpualloc 'cpu_set_t *(size_t)' extern
| |-ParmVarDecl 0x563c31be7790 <col:37, col:44> col:44 __count 'size_t':'unsigned long'
| `-NoThrowAttr 0x563c31be79a8 <col:69>
|-FunctionDecl 0x563c31be7b20 <line:109:1, col:87> col:13 __sched_cpufree 'void (cpu_set_t *)' extern
| |-ParmVarDecl 0x563c31be7a10 <col:30, col:41> col:41 __set 'cpu_set_t *'
| `-NoThrowAttr 0x563c31be7bc8 <col:64>
|-FunctionDecl 0x563c31be7e88 <line:112:1, line:113:45> line:112:12 sched_setparam 'int (__pid_t, const struct sched_param *)' extern
| |-ParmVarDecl 0x563c31be7c30 <col:28, col:36> col:36 __pid '__pid_t':'int'
| |-ParmVarDecl 0x563c31be7d68 <col:43, col:69> col:69 __param 'const struct sched_param *'
| `-NoThrowAttr 0x563c31be7f38 <line:113:22>
|-FunctionDecl 0x563c31be81b8 <line:114:1, col:111> col:12 sched_getparam 'int (__pid_t, struct sched_param *)' extern
| |-ParmVarDecl 0x563c31be7fa0 <col:28, col:36> col:36 __pid '__pid_t':'int'
| |-ParmVarDecl 0x563c31be8098 <col:43, col:63> col:63 __param 'struct sched_param *'
| `-NoThrowAttr 0x563c31be8268 <col:88>
|-FunctionDecl 0x563c31be8588 <line:115:1, line:116:85> line:115:12 sched_setscheduler 'int (__pid_t, int, const struct sched_param *)' extern
| |-ParmVarDecl 0x563c31be82d0 <col:32, col:40> col:40 __pid '__pid_t':'int'
| |-ParmVarDecl 0x563c31be83b0 <col:47, col:51> col:51 __policy 'int'
| |-ParmVarDecl 0x563c31be8440 <line:116:11, col:37> col:37 __param 'const struct sched_param *'
| `-NoThrowAttr 0x563c31be8640 <col:62>
|-FunctionDecl 0x563c31be87b8 <line:117:1, col:86> col:12 sched_getscheduler 'int (__pid_t)' extern
| |-ParmVarDecl 0x563c31be86a8 <col:32, col:40> col:40 __pid '__pid_t':'int'
| `-NoThrowAttr 0x563c31be8860 <col:63>
|-FunctionDecl 0x563c31be8988 <line:118:1, col:70> col:12 sched_yield 'int (void)' extern
| `-NoThrowAttr 0x563c31be8a28 <col:47>
|-FunctionDecl 0x563c31be8b30 <line:119:1, col:92> col:12 sched_get_priority_max 'int (int)' extern
| |-ParmVarDecl 0x563c31be8a98 <col:36, col:40> col:40 __algorithm 'int'
| `-NoThrowAttr 0x563c31be8bd8 <col:69>
|-FunctionDecl 0x563c31be8ce0 <line:120:1, col:92> col:12 sched_get_priority_min 'int (int)' extern
| |-ParmVarDecl 0x563c31be8c48 <col:36, col:40> col:40 __algorithm 'int'
| `-NoThrowAttr 0x563c31be8d88 <col:69>
|-FunctionDecl 0x563c31be9048 <line:121:1, col:111> col:12 sched_rr_get_interval 'int (__pid_t, struct timespec *)' extern
| |-ParmVarDecl 0x563c31be8df0 <col:35, col:43> col:43 __pid '__pid_t':'int'
| |-ParmVarDecl 0x563c31be8f28 <col:50, col:67> col:67 __t 'struct timespec *'
| `-NoThrowAttr 0x563c31be90f8 <col:88>
|-TypedefDecl 0x563c31be9188 <line:125:1, col:19> col:19 referenced clock_t '__clock_t':'long'
| `-TypedefType 0x563c31be9150 '__clock_t' sugar
|   |-Typedef 0x563c31be3548 '__clock_t'
|   `-BuiltinType 0x563c31b7bf30 'long'
|-TypedefDecl 0x563c31be9218 <line:128:1, col:21> col:21 referenced clockid_t '__clockid_t':'int'
| `-TypedefType 0x563c31be91e0 '__clockid_t' sugar
|   |-Typedef 0x563c31be3938 '__clockid_t'
|   `-BuiltinType 0x563c31b7bf10 'int'
|-TypedefDecl 0x563c31be92a8 <line:129:1, col:19> col:19 referenced timer_t '__timer_t':'void *'
| `-TypedefType 0x563c31be9270 '__timer_t' sugar
|   |-Typedef 0x563c31be39a8 '__timer_t'
|   `-PointerType 0x563c31b7c630 'void *'
|     `-BuiltinType 0x563c31b7be70 'void'
|-RecordDecl 0x563c31be9300 <line:131:1, line:144:1> line:131:8 struct tm definition
| |-FieldDecl 0x563c31be93d8 <line:133:3, col:7> col:7 tm_sec 'int'
| |-FieldDecl 0x563c31be9440 <line:134:3, col:7> col:7 tm_min 'int'
| |-FieldDecl 0x563c31be94a8 <line:135:3, col:7> col:7 tm_hour 'int'
| |-FieldDecl 0x563c31be9510 <line:136:3, col:7> col:7 tm_mday 'int'
| |-FieldDecl 0x563c31be9578 <line:137:3, col:7> col:7 tm_mon 'int'
| |-FieldDecl 0x563c31be95e0 <line:138:3, col:7> col:7 tm_year 'int'
| |-FieldDecl 0x563c31be9648 <line:139:3, col:7> col:7 tm_wday 'int'
| |-FieldDecl 0x563c31be96b0 <line:140:3, col:7> col:7 tm_yday 'int'
| |-FieldDecl 0x563c31be9718 <line:141:3, col:7> col:7 tm_isdst 'int'
| |-FieldDecl 0x563c31be9780 <line:142:3, col:12> col:12 tm_gmtoff 'long'
| `-FieldDecl 0x563c31be97e8 <line:143:3, col:15> col:15 tm_zone 'const char *'
|-RecordDecl 0x563c31be9838 <line:147:1, line:151:3> line:147:8 struct itimerspec definition
| |-FieldDecl 0x563c31be9908 <line:149:5, col:21> col:21 it_interval 'struct timespec':'struct timespec'
| `-FieldDecl 0x563c31be9978 <line:150:5, col:21> col:21 it_value 'struct timespec':'struct timespec'
|-RecordDecl 0x563c31be9a20 <line:152:1, col:8> col:8 struct sigevent
|-FunctionDecl 0x563c31be9bf0 <line:154:1, col:68> col:16 clock 'clock_t (void)' extern
| `-NoThrowAttr 0x563c31be9c90 <col:45>
|-FunctionDecl 0x563c31be9e70 <line:155:1, col:77> col:15 time 'time_t (time_t *)' extern
| |-ParmVarDecl 0x563c31be9d60 <col:21, col:29> col:29 __timer 'time_t *'
| `-NoThrowAttr 0x563c31be9f18 <col:54>
|-FunctionDecl 0x563c31bea118 <line:156:1, line:157:73> line:156:15 difftime 'double (time_t, time_t)' extern
| |-ParmVarDecl 0x563c31be9f80 <col:25, col:32> col:32 __time1 'time_t':'long'
| |-ParmVarDecl 0x563c31be9ff8 <col:41, col:48> col:48 __time0 'time_t':'long'
| |-NoThrowAttr 0x563c31bea1c8 <line:157:22>
| `-ConstAttr 0x563c31bea220 <col:63>
|-FunctionDecl 0x563c31beb050 <line:158:1, col:79> col:15 mktime 'time_t (struct tm *)' extern
| |-ParmVarDecl 0x563c31bea318 <col:23, col:34> col:34 __tp 'struct tm *'
| `-NoThrowAttr 0x563c31beb0f8 <col:56>
|-FunctionDecl 0x563c31beb4a0 <line:159:1, line:161:77> line:159:15 strftime 'size_t (char *restrict, size_t, const char *restrict, const struct tm *restrict)' extern
| |-ParmVarDecl 0x563c31beb168 <col:25, col:42> col:42 __s 'char *restrict'
| |-ParmVarDecl 0x563c31beb1e0 <col:47, col:54> col:54 __maxsize 'size_t':'unsigned long'
| |-ParmVarDecl 0x563c31beb260 <line:160:4, col:27> col:27 __format 'const char *restrict'
| |-ParmVarDecl 0x563c31beb358 <line:161:4, col:32> col:32 __tp 'const struct tm *restrict'
| `-NoThrowAttr 0x563c31beb560 <col:54>
|-RecordDecl 0x563c31beb5b8 <line:163:9, line:170:1> line:163:16 struct __locale_struct definition
| |-RecordDecl 0x563c31beb668 parent 0x563c31b7be18 <line:165:3, col:10> col:10 struct __locale_data
| |-FieldDecl 0x563c31beb8c8 <col:3, col:37> col:25 __locales 'struct __locale_data *[13]'
| |-FieldDecl 0x563c31beb968 <line:166:3, col:29> col:29 __ctype_b 'const unsigned short *'
| |-FieldDecl 0x563c31beb9d0 <line:167:3, col:14> col:14 __ctype_tolower 'const int *'
| |-FieldDecl 0x563c31beba38 <line:168:3, col:14> col:14 __ctype_toupper 'const int *'
| `-FieldDecl 0x563c31bebb28 <line:169:3, col:25> col:15 __names 'const char *[13]'
|-TypedefDecl 0x563c31bebc48 <line:163:1, line:170:4> col:4 referenced __locale_t 'struct __locale_struct *'
| `-PointerType 0x563c31bebbf0 'struct __locale_struct *'
|   `-ElaboratedType 0x563c31bebb80 'struct __locale_struct' sugar
|     `-RecordType 0x563c31beb640 'struct __locale_struct'
|       `-Record 0x563c31beb5b8 '__locale_struct'
|-TypedefDecl 0x563c31bebcf8 <line:171:1, col:20> col:20 locale_t '__locale_t':'struct __locale_struct *'
| `-TypedefType 0x563c31bebcc0 '__locale_t' sugar
|   |-Typedef 0x563c31bebc48 '__locale_t'
|   `-PointerType 0x563c31bebbf0 'struct __locale_struct *'
|     `-ElaboratedType 0x563c31bebb80 'struct __locale_struct' sugar
|       `-RecordType 0x563c31beb640 'struct __locale_struct'
|         `-Record 0x563c31beb5b8 '__locale_struct'
|-FunctionDecl 0x563c31bed110 <line:172:1, line:175:63> line:172:15 strftime_l 'size_t (char *restrict, size_t, const char *restrict, const struct tm *restrict, __locale_t)' extern
| |-ParmVarDecl 0x563c31bebd68 <col:27, col:44> col:44 __s 'char *restrict'
| |-ParmVarDecl 0x563c31bebde0 <col:49, col:56> col:56 __maxsize 'size_t':'unsigned long'
| |-ParmVarDecl 0x563c31bebe60 <line:173:6, col:29> col:29 __format 'const char *restrict'
| |-ParmVarDecl 0x563c31bebef0 <line:174:6, col:34> col:34 __tp 'const struct tm *restrict'
| |-ParmVarDecl 0x563c31bebf68 <line:175:6, col:17> col:17 __loc '__locale_t':'struct __locale_struct *'
| `-NoThrowAttr 0x563c31bed1d8 <col:40>
|-FunctionDecl 0x563c31bed3c8 <line:177:1, col:89> col:19 gmtime 'struct tm *(const time_t *)' extern
| |-ParmVarDecl 0x563c31bed2a0 <col:27, col:41> col:41 __timer 'const time_t *'
| `-NoThrowAttr 0x563c31bed470 <col:66>
|-FunctionDecl 0x563c31bed580 <line:178:1, col:92> col:19 localtime 'struct tm *(const time_t *)' extern
| |-ParmVarDecl 0x563c31bed4d8 <col:30, col:44> col:44 __timer 'const time_t *'
| `-NoThrowAttr 0x563c31bed628 <col:69>
|-FunctionDecl 0x563c31bed858 <line:180:1, line:181:75> line:180:19 gmtime_r 'struct tm *(const time_t *restrict, struct tm *restrict)' extern
| |-ParmVarDecl 0x563c31bed690 <col:29, col:54> col:54 __timer 'const time_t *restrict'
| |-ParmVarDecl 0x563c31bed720 <line:181:8, col:30> col:30 __tp 'struct tm *restrict'
| `-NoThrowAttr 0x563c31bed908 <col:52>
|-FunctionDecl 0x563c31bedab0 <line:182:1, line:183:78> line:182:19 localtime_r 'struct tm *(const time_t *restrict, struct tm *restrict)' extern
| |-ParmVarDecl 0x563c31bed970 <col:32, col:57> col:57 __timer 'const time_t *restrict'
| |-ParmVarDecl 0x563c31beda00 <line:183:11, col:33> col:33 __tp 'struct tm *restrict'
| `-NoThrowAttr 0x563c31bedb60 <col:55>
|-FunctionDecl 0x563c31bedcf8 <line:185:1, col:85> col:14 asctime 'char *(const struct tm *)' extern
| |-ParmVarDecl 0x563c31bedbe0 <col:23, col:40> col:40 __tp 'const struct tm *'
| `-NoThrowAttr 0x563c31bedda0 <col:62>
|-FunctionDecl 0x563c31bedf18 <line:186:1, col:83> col:14 ctime 'char *(const time_t *)' extern
| |-ParmVarDecl 0x563c31bede08 <col:21, col:35> col:35 __timer 'const time_t *'
| `-NoThrowAttr 0x563c31bedfc0 <col:60>
|-FunctionDecl 0x563c31bee2b8 <line:188:1, line:189:67> line:188:14 asctime_r 'char *(const struct tm *restrict, char *restrict)' extern
| |-ParmVarDecl 0x563c31bee118 <col:25, col:53> col:53 __tp 'const struct tm *restrict'
| |-ParmVarDecl 0x563c31bee198 <line:189:4, col:21> col:21 __buf 'char *restrict'
| `-NoThrowAttr 0x563c31bee368 <col:44>
|-FunctionDecl 0x563c31bee578 <line:190:1, line:191:72> line:190:14 ctime_r 'char *(const time_t *restrict, char *restrict)' extern
| |-ParmVarDecl 0x563c31bee3d0 <col:23, col:48> col:48 __timer 'const time_t *restrict'
| |-ParmVarDecl 0x563c31bee450 <line:191:9, col:26> col:26 __buf 'char *restrict'
| `-NoThrowAttr 0x563c31bee628 <col:49>
|-VarDecl 0x563c31bee728 <line:192:1, col:24> col:14 __tzname 'char *[2]' extern
|-VarDecl 0x563c31bee7a8 <line:193:1, col:12> col:12 __daylight 'int' extern
|-VarDecl 0x563c31bee828 <line:194:1, col:17> col:17 __timezone 'long' extern
|-VarDecl 0x563c31bee8f0 <line:195:1, col:22> col:14 tzname 'char *[2]' extern
|-FunctionDecl 0x563c31beea20 <line:196:1, col:65> col:13 tzset 'void (void)' extern
| `-NoThrowAttr 0x563c31beeac0 <col:42>
|-VarDecl 0x563c31beeb30 <line:197:1, col:12> col:12 daylight 'int' extern
|-VarDecl 0x563c31beebb0 <line:198:1, col:17> col:17 timezone 'long' extern
|-FunctionDecl 0x563c31beed38 <line:199:1, col:80> col:12 stime 'int (const time_t *)' extern
| |-ParmVarDecl 0x563c31beec28 <col:19, col:33> col:33 __when 'const time_t *'
| `-NoThrowAttr 0x563c31beede0 <col:57>
|-FunctionDecl 0x563c31beeef0 <line:200:1, col:79> col:15 timegm 'time_t (struct tm *)' extern
| |-ParmVarDecl 0x563c31beee60 <col:23, col:34> col:34 __tp 'struct tm *'
| `-NoThrowAttr 0x563c31beef98 <col:56>
|-FunctionDecl 0x563c31bef0d0 <line:201:1, col:82> col:15 timelocal 'time_t (struct tm *)' extern
| |-ParmVarDecl 0x563c31bef018 <col:26, col:37> col:37 __tp 'struct tm *'
| `-NoThrowAttr 0x563c31bef178 <col:59>
|-FunctionDecl 0x563c31bef280 <line:202:1, col:99> col:12 dysize 'int (int)' extern
| |-ParmVarDecl 0x563c31bef1e8 <col:20, col:24> col:24 __year 'int'
| |-NoThrowAttr 0x563c31bef328 <col:48>
| `-ConstAttr 0x563c31bef380 <col:89>
|-FunctionDecl 0x563c31bef5e8 <line:203:1, line:204:37> line:203:12 nanosleep 'int (const struct timespec *, struct timespec *)' extern
| |-ParmVarDecl 0x563c31bef438 <col:23, col:46> col:46 __requested_time 'const struct timespec *'
| `-ParmVarDecl 0x563c31bef4c8 <line:204:9, col:26> col:26 __remaining 'struct timespec *'
|-FunctionDecl 0x563c31bef848 <line:205:1, col:111> col:12 clock_getres 'int (clockid_t, struct timespec *)' extern
| |-ParmVarDecl 0x563c31bef6d8 <col:26, col:36> col:36 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x563c31bef768 <col:48, col:65> col:65 __res 'struct timespec *'
| `-NoThrowAttr 0x563c31bef8f8 <col:88>
|-FunctionDecl 0x563c31befa90 <line:206:1, col:111> col:12 clock_gettime 'int (clockid_t, struct timespec *)' extern
| |-ParmVarDecl 0x563c31bef960 <col:27, col:37> col:37 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x563c31bef9f0 <col:49, col:66> col:66 __tp 'struct timespec *'
| `-NoThrowAttr 0x563c31befb40 <col:88>
|-FunctionDecl 0x563c31befd58 <line:207:1, line:208:45> line:207:12 clock_settime 'int (clockid_t, const struct timespec *)' extern
| |-ParmVarDecl 0x563c31befba8 <col:27, col:37> col:37 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x563c31befc38 <col:49, col:72> col:72 __tp 'const struct timespec *'
| `-NoThrowAttr 0x563c31befe08 <line:208:22>
|-FunctionDecl 0x563c31bf0178 <line:209:1, line:211:30> line:209:12 clock_nanosleep 'int (clockid_t, int, const struct timespec *, struct timespec *)' extern
| |-ParmVarDecl 0x563c31befe70 <col:29, col:39> col:39 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x563c31befef0 <col:51, col:55> col:55 __flags 'int'
| |-ParmVarDecl 0x563c31beff80 <line:210:8, col:31> col:31 __req 'const struct timespec *'
| `-ParmVarDecl 0x563c31bf0010 <line:211:8, col:25> col:25 __rem 'struct timespec *'
|-FunctionDecl 0x563c31bf0478 <line:212:1, col:108> col:12 clock_getcpuclockid 'int (pid_t, clockid_t *)' extern
| |-ParmVarDecl 0x563c31bf0278 <col:33, col:39> col:39 __pid 'pid_t':'int'
| |-ParmVarDecl 0x563c31bf0350 <col:46, col:57> col:57 __clock_id 'clockid_t *'
| `-NoThrowAttr 0x563c31bf0528 <col:85>
|-FunctionDecl 0x563c31bf0918 <line:213:1, line:215:75> line:213:12 timer_create 'int (clockid_t, struct sigevent *restrict, timer_t *restrict)' extern
| |-ParmVarDecl 0x563c31bf0590 <col:26, col:36> col:36 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x563c31bf06c8 <line:214:5, col:33> col:33 __evp 'struct sigevent *restrict'
| |-ParmVarDecl 0x563c31bf07d0 <line:215:5, col:25> col:25 __timerid 'timer_t *restrict'
| `-NoThrowAttr 0x563c31bf09d0 <col:52>
|-FunctionDecl 0x563c31bf0b48 <line:216:1, col:84> col:12 timer_delete 'int (timer_t)' extern
| |-ParmVarDecl 0x563c31bf0a38 <col:26, col:34> col:34 __timerid 'timer_t':'void *'
| `-NoThrowAttr 0x563c31bf0bf0 <col:61>
|-FunctionDecl 0x563c31bf10f0 <line:217:1, line:219:85> line:217:12 timer_settime 'int (timer_t, int, const struct itimerspec *restrict, struct itimerspec *restrict)' extern
| |-ParmVarDecl 0x563c31bf0c58 <col:27, col:35> col:35 __timerid 'timer_t':'void *'
| |-ParmVarDecl 0x563c31bf0cd8 <col:46, col:50> col:50 __flags 'int'
| |-ParmVarDecl 0x563c31bf0e08 <line:218:6, col:42> col:42 __value 'const struct itimerspec *restrict'
| |-ParmVarDecl 0x563c31bf0ef8 <line:219:6, col:36> col:36 __ovalue 'struct itimerspec *restrict'
| `-NoThrowAttr 0x563c31bf11b0 <col:62>
|-FunctionDecl 0x563c31bf13c8 <line:220:1, line:221:45> line:220:12 timer_gettime 'int (timer_t, struct itimerspec *)' extern
| |-ParmVarDecl 0x563c31bf1218 <col:27, col:35> col:35 __timerid 'timer_t':'void *'
| |-ParmVarDecl 0x563c31bf12a8 <col:46, col:65> col:65 __value 'struct itimerspec *'
| `-NoThrowAttr 0x563c31bf1478 <line:221:22>
|-FunctionDecl 0x563c31bf1578 <line:222:1, col:88> col:12 timer_getoverrun 'int (timer_t)' extern
| |-ParmVarDecl 0x563c31bf14e0 <col:30, col:38> col:38 __timerid 'timer_t':'void *'
| `-NoThrowAttr 0x563c31bf1620 <col:65>
|-TypedefDecl 0x563c31bf1690 <line:224:1, col:27> col:27 referenced pthread_t 'unsigned long'
| `-BuiltinType 0x563c31b7bfd0 'unsigned long'
|-RecordDecl 0x563c31bf16e8 <line:225:1, line:229:1> line:225:7 union pthread_attr_t definition
| |-FieldDecl 0x563c31bf1830 <line:227:3, col:17> col:8 __size 'char [56]'
| `-FieldDecl 0x563c31bf1898 <line:228:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x563c31bf1948 <line:230:1, col:30> col:30 referenced pthread_attr_t 'union pthread_attr_t':'union pthread_attr_t'
| `-ElaboratedType 0x563c31bf18f0 'union pthread_attr_t' sugar
|   `-RecordType 0x563c31bf1770 'union pthread_attr_t'
|     `-Record 0x563c31bf16e8 'pthread_attr_t'
|-RecordDecl 0x563c31bf19a0 <line:231:9, line:235:1> line:231:16 struct __pthread_internal_list definition
| |-FieldDecl 0x563c31bf1b18 <line:233:3, col:35> col:35 __prev 'struct __pthread_internal_list *'
| `-FieldDecl 0x563c31bf1b90 <line:234:3, col:35> col:35 __next 'struct __pthread_internal_list *'
|-TypedefDecl 0x563c31bf1c40 <line:231:1, line:235:3> col:3 referenced __pthread_list_t 'struct __pthread_internal_list':'struct __pthread_internal_list'
| `-ElaboratedType 0x563c31bf1be0 'struct __pthread_internal_list' sugar
|   `-RecordType 0x563c31bf1a20 'struct __pthread_internal_list'
|     `-Record 0x563c31bf19a0 '__pthread_internal_list'
|-RecordDecl 0x563c31bf1cb0 <line:236:9, line:250:1> line:236:9 union definition
| |-RecordDecl 0x563c31bf1d58 parent 0x563c31b7be18 <line:238:3, line:247:3> line:238:10 struct __pthread_mutex_s definition
| | |-FieldDecl 0x563c31bf1e30 <line:240:5, col:9> col:9 __lock 'int'
| | |-FieldDecl 0x563c31bf1e98 <line:241:5, col:18> col:18 __count 'unsigned int'
| | |-FieldDecl 0x563c31bf1f00 <line:242:5, col:9> col:9 __owner 'int'
| | |-FieldDecl 0x563c31bf1f68 <line:243:5, col:18> col:18 __nusers 'unsigned int'
| | |-FieldDecl 0x563c31bf1fd0 <line:244:5, col:9> col:9 __kind 'int'
| | |-FieldDecl 0x563c31bf2038 <line:245:5, col:9> col:9 __spins 'int'
| | `-FieldDecl 0x563c31bf6110 <line:246:5, col:22> col:22 __list '__pthread_list_t':'struct __pthread_internal_list'
| |-FieldDecl 0x563c31bf61c0 <line:238:3, line:247:5> col:5 __data 'struct __pthread_mutex_s':'struct __pthread_mutex_s'
| |-FieldDecl 0x563c31bf62b0 <line:248:3, col:17> col:8 __size 'char [40]'
| `-FieldDecl 0x563c31bf6318 <line:249:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x563c31bf64a0 <line:236:1, line:250:3> col:3 referenced pthread_mutex_t 'union pthread_mutex_t':'pthread_mutex_t'
| `-ElaboratedType 0x563c31bf6440 'union pthread_mutex_t' sugar
|   `-RecordType 0x563c31bf1d30 'pthread_mutex_t'
|     `-Record 0x563c31bf1cb0 ''
|-RecordDecl 0x563c31bf6510 <line:251:9, line:255:1> line:251:9 union definition
| |-FieldDecl 0x563c31bf6650 <line:253:3, col:16> col:8 __size 'char [4]'
| `-FieldDecl 0x563c31bf66b8 <line:254:3, col:7> col:7 __align 'int'
|-TypedefDecl 0x563c31bf6770 <line:251:1, line:255:3> col:3 referenced pthread_mutexattr_t 'union pthread_mutexattr_t':'pthread_mutexattr_t'
| `-ElaboratedType 0x563c31bf6710 'union pthread_mutexattr_t' sugar
|   `-RecordType 0x563c31bf6590 'pthread_mutexattr_t'
|     `-Record 0x563c31bf6510 ''
|-RecordDecl 0x563c31bf67e0 <line:256:9, line:271:1> line:256:9 union definition
| |-RecordDecl 0x563c31bf6888 <line:258:3, line:268:3> line:258:3 struct definition
| | |-FieldDecl 0x563c31bf6950 <line:260:5, col:9> col:9 __lock 'int'
| | |-FieldDecl 0x563c31bf69b8 <line:261:5, col:18> col:18 __futex 'unsigned int'
| | |-FieldDecl 0x563c31bf6a20 <line:262:19, col:42> col:42 __total_seq 'unsigned long long'
| | |-FieldDecl 0x563c31bf6a88 <line:263:19, col:42> col:42 __wakeup_seq 'unsigned long long'
| | |-FieldDecl 0x563c31bf6af0 <line:264:19, col:42> col:42 __woken_seq 'unsigned long long'
| | |-FieldDecl 0x563c31bf6b58 <line:265:5, col:11> col:11 __mutex 'void *'
| | |-FieldDecl 0x563c31bf6bc0 <line:266:5, col:18> col:18 __nwaiters 'unsigned int'
| | `-FieldDecl 0x563c31bf6c28 <line:267:5, col:18> col:18 __broadcast_seq 'unsigned int'
| |-FieldDecl 0x563c31bf6ce0 <line:258:3, line:268:5> col:5 __data 'struct (anonymous struct at ./split_6/mix036_power.oepc_false-unreach-call.i:258:3)':'struct pthread_cond_t::(anonymous at ./split_6/mix036_power.oepc_false-unreach-call.i:258:3)'
| |-FieldDecl 0x563c31bf6dd0 <line:269:3, col:17> col:8 __size 'char [48]'
| `-FieldDecl 0x563c31bf6e38 <line:270:17, col:31> col:31 __align 'long long'
|-TypedefDecl 0x563c31bf6f70 <line:256:1, line:271:3> col:3 referenced pthread_cond_t 'union pthread_cond_t':'pthread_cond_t'
| `-ElaboratedType 0x563c31bf6f10 'union pthread_cond_t' sugar
|   `-RecordType 0x563c31bf6860 'pthread_cond_t'
|     `-Record 0x563c31bf67e0 ''
|-RecordDecl 0x563c31bf6fe0 <line:272:9, line:276:1> line:272:9 union definition
| |-FieldDecl 0x563c31bf8130 <line:274:3, col:16> col:8 __size 'char [4]'
| `-FieldDecl 0x563c31bf8198 <line:275:3, col:7> col:7 __align 'int'
|-TypedefDecl 0x563c31bf8250 <line:272:1, line:276:3> col:3 referenced pthread_condattr_t 'union pthread_condattr_t':'pthread_condattr_t'
| `-ElaboratedType 0x563c31bf81f0 'union pthread_condattr_t' sugar
|   `-RecordType 0x563c31bf7060 'pthread_condattr_t'
|     `-Record 0x563c31bf6fe0 ''
|-TypedefDecl 0x563c31bf82d8 <line:277:1, col:22> col:22 referenced pthread_key_t 'unsigned int'
| `-BuiltinType 0x563c31b7bfb0 'unsigned int'
|-TypedefDecl 0x563c31bf8348 <line:278:1, col:13> col:13 referenced pthread_once_t 'int'
| `-BuiltinType 0x563c31b7bf10 'int'
|-RecordDecl 0x563c31bf83a0 <line:279:9, line:297:1> line:279:9 union definition
| |-RecordDecl 0x563c31bf8448 <line:281:3, line:294:3> line:281:3 struct definition
| | |-FieldDecl 0x563c31bf8510 <line:283:5, col:9> col:9 __lock 'int'
| | |-FieldDecl 0x563c31bf8578 <line:284:5, col:18> col:18 __nr_readers 'unsigned int'
| | |-FieldDecl 0x563c31bf85e0 <line:285:5, col:18> col:18 __readers_wakeup 'unsigned int'
| | |-FieldDecl 0x563c31bf8648 <line:286:5, col:18> col:18 __writer_wakeup 'unsigned int'
| | |-FieldDecl 0x563c31bf86b0 <line:287:5, col:18> col:18 __nr_readers_queued 'unsigned int'
| | |-FieldDecl 0x563c31bf8718 <line:288:5, col:18> col:18 __nr_writers_queued 'unsigned int'
| | |-FieldDecl 0x563c31bf8780 <line:289:5, col:9> col:9 __writer 'int'
| | |-FieldDecl 0x563c31bf87e8 <line:290:5, col:9> col:9 __shared 'int'
| | |-FieldDecl 0x563c31bf8850 <line:291:5, col:23> col:23 __pad1 'unsigned long'
| | |-FieldDecl 0x563c31bf88b8 <line:292:5, col:23> col:23 __pad2 'unsigned long'
| | `-FieldDecl 0x563c31bf8920 <line:293:5, col:18> col:18 __flags 'unsigned int'
| |-FieldDecl 0x563c31bf89d0 <line:281:3, line:294:5> col:5 __data 'struct (anonymous struct at ./split_6/mix036_power.oepc_false-unreach-call.i:281:3)':'struct pthread_rwlock_t::(anonymous at ./split_6/mix036_power.oepc_false-unreach-call.i:281:3)'
| |-FieldDecl 0x563c31bf8a78 <line:295:3, col:17> col:8 __size 'char [56]'
| `-FieldDecl 0x563c31bf8ae0 <line:296:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x563c31bf8c30 <line:279:1, line:297:3> col:3 referenced pthread_rwlock_t 'union pthread_rwlock_t':'pthread_rwlock_t'
| `-ElaboratedType 0x563c31bf8bd0 'union pthread_rwlock_t' sugar
|   `-RecordType 0x563c31bf8420 'pthread_rwlock_t'
|     `-Record 0x563c31bf83a0 ''
|-RecordDecl 0x563c31bf8ca0 <line:298:9, line:302:1> line:298:9 union definition
| |-FieldDecl 0x563c31bf8de0 <line:300:3, col:16> col:8 __size 'char [8]'
| `-FieldDecl 0x563c31bf8e48 <line:301:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x563c31bf8f00 <line:298:1, line:302:3> col:3 referenced pthread_rwlockattr_t 'union pthread_rwlockattr_t':'pthread_rwlockattr_t'
| `-ElaboratedType 0x563c31bf8ea0 'union pthread_rwlockattr_t' sugar
|   `-RecordType 0x563c31bf8d20 'pthread_rwlockattr_t'
|     `-Record 0x563c31bf8ca0 ''
|-TypedefDecl 0x563c31bf8f88 <line:303:1, col:22> col:22 referenced pthread_spinlock_t 'volatile int'
| `-QualType 0x563c31b7bf14 'volatile int' volatile
|   `-BuiltinType 0x563c31b7bf10 'int'
|-RecordDecl 0x563c31bf8fe0 <line:304:9, line:308:1> line:304:9 union definition
| |-FieldDecl 0x563c31bfa140 <line:306:3, col:17> col:8 __size 'char [32]'
| `-FieldDecl 0x563c31bfa1a8 <line:307:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x563c31bfa260 <line:304:1, line:308:3> col:3 referenced pthread_barrier_t 'union pthread_barrier_t':'pthread_barrier_t'
| `-ElaboratedType 0x563c31bfa200 'union pthread_barrier_t' sugar
|   `-RecordType 0x563c31bf9060 'pthread_barrier_t'
|     `-Record 0x563c31bf8fe0 ''
|-RecordDecl 0x563c31bfa2d0 <line:309:9, line:313:1> line:309:9 union definition
| |-FieldDecl 0x563c31bfa3d0 <line:311:3, col:16> col:8 __size 'char [4]'
| `-FieldDecl 0x563c31bfa438 <line:312:3, col:7> col:7 __align 'int'
|-TypedefDecl 0x563c31bfa4f0 <line:309:1, line:313:3> col:3 referenced pthread_barrierattr_t 'union pthread_barrierattr_t':'pthread_barrierattr_t'
| `-ElaboratedType 0x563c31bfa490 'union pthread_barrierattr_t' sugar
|   `-RecordType 0x563c31bfa350 'pthread_barrierattr_t'
|     `-Record 0x563c31bfa2d0 ''
|-TypedefDecl 0x563c31bfa608 <line:314:1, col:29> col:18 referenced __jmp_buf 'long [8]'
| `-ConstantArrayType 0x563c31bfa5a0 'long [8]' 8 
|   `-BuiltinType 0x563c31b7bf30 'long'
|-EnumDecl 0x563c31bfa660 <line:315:1, line:319:1> line:315:1
| |-EnumConstantDecl 0x563c31bfa728 <line:317:3> col:3 PTHREAD_CREATE_JOINABLE 'int'
| `-EnumConstantDecl 0x563c31bfa778 <line:318:3> col:3 PTHREAD_CREATE_DETACHED 'int'
|-EnumDecl 0x563c31bfa7c8 <line:320:1, line:331:1> line:320:1
| |-EnumConstantDecl 0x563c31bfa898 <line:322:3> col:3 referenced PTHREAD_MUTEX_TIMED_NP 'int'
| |-EnumConstantDecl 0x563c31bfa8e8 <line:323:3> col:3 referenced PTHREAD_MUTEX_RECURSIVE_NP 'int'
| |-EnumConstantDecl 0x563c31bfa938 <line:324:3> col:3 referenced PTHREAD_MUTEX_ERRORCHECK_NP 'int'
| |-EnumConstantDecl 0x563c31bfa988 <line:325:3> col:3 PTHREAD_MUTEX_ADAPTIVE_NP 'int'
| |-EnumConstantDecl 0x563c31bfaa10 <line:327:3, col:26> col:3 referenced PTHREAD_MUTEX_NORMAL 'int'
| | `-ConstantExpr 0x563c31bfa9f8 <col:26> 'int'
| |   `-DeclRefExpr 0x563c31bfa9d8 <col:26> 'int' EnumConstant 0x563c31bfa898 'PTHREAD_MUTEX_TIMED_NP' 'int'
| |-EnumConstantDecl 0x563c31bfaa98 <line:328:3, col:29> col:3 PTHREAD_MUTEX_RECURSIVE 'int'
| | `-ConstantExpr 0x563c31bfaa80 <col:29> 'int'
| |   `-DeclRefExpr 0x563c31bfaa60 <col:29> 'int' EnumConstant 0x563c31bfa8e8 'PTHREAD_MUTEX_RECURSIVE_NP' 'int'
| |-EnumConstantDecl 0x563c31bfab20 <line:329:3, col:30> col:3 PTHREAD_MUTEX_ERRORCHECK 'int'
| | `-ConstantExpr 0x563c31bfab08 <col:30> 'int'
| |   `-DeclRefExpr 0x563c31bfaae8 <col:30> 'int' EnumConstant 0x563c31bfa938 'PTHREAD_MUTEX_ERRORCHECK_NP' 'int'
| `-EnumConstantDecl 0x563c31bfaba8 <line:330:3, col:27> col:3 PTHREAD_MUTEX_DEFAULT 'int'
|   `-ConstantExpr 0x563c31bfab90 <col:27> 'int'
|     `-DeclRefExpr 0x563c31bfab70 <col:27> 'int' EnumConstant 0x563c31bfaa10 'PTHREAD_MUTEX_NORMAL' 'int'
|-EnumDecl 0x563c31bfabf8 <line:332:1, line:338:1> line:332:1
| |-EnumConstantDecl 0x563c31bfacc8 <line:334:3> col:3 referenced PTHREAD_MUTEX_STALLED 'int'
| |-EnumConstantDecl 0x563c31bfad50 <line:335:3, col:30> col:3 PTHREAD_MUTEX_STALLED_NP 'int'
| | `-ConstantExpr 0x563c31bfad38 <col:30> 'int'
| |   `-DeclRefExpr 0x563c31bfad18 <col:30> 'int' EnumConstant 0x563c31bfacc8 'PTHREAD_MUTEX_STALLED' 'int'
| |-EnumConstantDecl 0x563c31bfada0 <line:336:3> col:3 referenced PTHREAD_MUTEX_ROBUST 'int'
| `-EnumConstantDecl 0x563c31bfae28 <line:337:3, col:29> col:3 PTHREAD_MUTEX_ROBUST_NP 'int'
|   `-ConstantExpr 0x563c31bfae10 <col:29> 'int'
|     `-DeclRefExpr 0x563c31bfadf0 <col:29> 'int' EnumConstant 0x563c31bfada0 'PTHREAD_MUTEX_ROBUST' 'int'
|-EnumDecl 0x563c31bfae78 <line:339:1, line:344:1> line:339:1
| |-EnumConstantDecl 0x563c31bfaf48 <line:341:3> col:3 PTHREAD_PRIO_NONE 'int'
| |-EnumConstantDecl 0x563c31bfaf98 <line:342:3> col:3 PTHREAD_PRIO_INHERIT 'int'
| `-EnumConstantDecl 0x563c31bfafe8 <line:343:3> col:3 PTHREAD_PRIO_PROTECT 'int'
|-EnumDecl 0x563c31bfb038 <line:345:1, line:351:1> line:345:1
| |-EnumConstantDecl 0x563c31bfb150 <line:347:3> col:3 referenced PTHREAD_RWLOCK_PREFER_READER_NP 'int'
| |-EnumConstantDecl 0x563c31bfb1a0 <line:348:3> col:3 PTHREAD_RWLOCK_PREFER_WRITER_NP 'int'
| |-EnumConstantDecl 0x563c31bfb1f0 <line:349:3> col:3 PTHREAD_RWLOCK_PREFER_WRITER_NONRECURSIVE_NP 'int'
| `-EnumConstantDecl 0x563c31bfb278 <line:350:3, col:31> col:3 PTHREAD_RWLOCK_DEFAULT_NP 'int'
|   `-ConstantExpr 0x563c31bfb260 <col:31> 'int'
|     `-DeclRefExpr 0x563c31bfb240 <col:31> 'int' EnumConstant 0x563c31bfb150 'PTHREAD_RWLOCK_PREFER_READER_NP' 'int'
|-EnumDecl 0x563c31bfb2c8 <line:352:1, line:356:1> line:352:1
| |-EnumConstantDecl 0x563c31bfb398 <line:354:3> col:3 PTHREAD_INHERIT_SCHED 'int'
| `-EnumConstantDecl 0x563c31bfb3e8 <line:355:3> col:3 PTHREAD_EXPLICIT_SCHED 'int'
|-EnumDecl 0x563c31bfb438 <line:357:1, line:361:1> line:357:1
| |-EnumConstantDecl 0x563c31bfb508 <line:359:3> col:3 PTHREAD_SCOPE_SYSTEM 'int'
| `-EnumConstantDecl 0x563c31bfb558 <line:360:3> col:3 PTHREAD_SCOPE_PROCESS 'int'
|-EnumDecl 0x563c31bfb5a8 <line:362:1, line:366:1> line:362:1
| |-EnumConstantDecl 0x563c31bfb678 <line:364:3> col:3 PTHREAD_PROCESS_PRIVATE 'int'
| `-EnumConstantDecl 0x563c31bfb6c8 <line:365:3> col:3 PTHREAD_PROCESS_SHARED 'int'
|-RecordDecl 0x563c31bfb718 <line:367:1, line:373:1> line:367:8 struct _pthread_cleanup_buffer definition
| |-FieldDecl 0x563c31bfb958 <line:369:3, col:28> col:10 __routine 'void (*)(void *)'
| |-FieldDecl 0x563c31bfb9c0 <line:370:3, col:9> col:9 __arg 'void *'
| |-FieldDecl 0x563c31bfba28 <line:371:3, col:7> col:7 __canceltype 'int'
| `-FieldDecl 0x563c31bfbb48 <line:372:3, col:35> col:35 __prev 'struct _pthread_cleanup_buffer *'
|-EnumDecl 0x563c31bfbb98 <line:374:1, line:378:1> line:374:1
| |-EnumConstantDecl 0x563c31bfbc68 <line:376:3> col:3 PTHREAD_CANCEL_ENABLE 'int'
| `-EnumConstantDecl 0x563c31bfbcb8 <line:377:3> col:3 PTHREAD_CANCEL_DISABLE 'int'
|-EnumDecl 0x563c31bfbd08 <line:379:1, line:383:1> line:379:1
| |-EnumConstantDecl 0x563c31bfbdd8 <line:381:3> col:3 PTHREAD_CANCEL_DEFERRED 'int'
| `-EnumConstantDecl 0x563c31bfbe28 <line:382:3> col:3 PTHREAD_CANCEL_ASYNCHRONOUS 'int'
|-FunctionDecl 0x563c31bfc488 <line:385:1, line:388:96> line:385:12 used pthread_create 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' extern
| |-ParmVarDecl 0x563c31bfbf20 <col:28, col:50> col:50 __newthread 'pthread_t *restrict'
| |-ParmVarDecl 0x563c31bfc030 <line:386:7, col:40> col:40 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x563c31bfc270 <line:387:7, col:39> col:15 __start_routine 'void *(*)(void *)'
| |-ParmVarDecl 0x563c31bfc2f0 <line:388:7, col:24> col:24 __arg 'void *restrict'
| |-NoThrowAttr 0x563c31bfc548 <col:47>
| |-NonNullAttr 0x563c31bfc5a0 <col:77, col:94> 1 3
| `-CallbackAttr 0x563c31bfc5d8 <line:385:12> Implicit 2 3
|-FunctionDecl 0x563c31bfc700 <line:389:1, col:72> col:13 pthread_exit 'void (void *) __attribute__((noreturn))' extern
| `-ParmVarDecl 0x563c31bfc630 <col:27, col:33> col:33 __retval 'void *'
|-FunctionDecl 0x563c31bfc958 <line:390:1, col:64> col:12 pthread_join 'int (pthread_t, void **)' extern
| |-ParmVarDecl 0x563c31bfc7b8 <col:26, col:36> col:36 __th 'pthread_t':'unsigned long'
| `-ParmVarDecl 0x563c31bfc838 <col:42, col:49> col:49 __thread_return 'void **'
|-FunctionDecl 0x563c31bfcb28 <line:391:1, col:83> col:12 pthread_detach 'int (pthread_t)' extern
| |-ParmVarDecl 0x563c31bfca18 <col:28, col:38> col:38 __th 'pthread_t':'unsigned long'
| `-NoThrowAttr 0x563c31bfcbd0 <col:60>
|-FunctionDecl 0x563c31bfcd20 <line:392:1, col:105> col:18 pthread_self 'pthread_t (void)' extern
| |-NoThrowAttr 0x563c31bfcdc0 <col:54>
| `-ConstAttr 0x563c31bfce18 <col:95>
|-FunctionDecl 0x563c31bfcfe8 <line:393:1, line:394:70> line:393:12 pthread_equal 'int (pthread_t, pthread_t)' extern
| |-ParmVarDecl 0x563c31bfce50 <col:27, col:37> col:37 __thread1 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x563c31bfcec8 <col:48, col:58> col:58 __thread2 'pthread_t':'unsigned long'
| |-NoThrowAttr 0x563c31bfd098 <line:394:19>
| `-ConstAttr 0x563c31bfd0f0 <col:60>
|-FunctionDecl 0x563c31bfeb08 <line:395:1, col:128> col:12 pthread_attr_init 'int (pthread_attr_t *)' extern
| |-ParmVarDecl 0x563c31bfe9d0 <col:31, col:47> col:47 __attr 'pthread_attr_t *'
| |-NoThrowAttr 0x563c31bfebb0 <col:71>
| `-NonNullAttr 0x563c31bfec08 <col:112, col:126> 1
|-FunctionDecl 0x563c31bfed10 <line:396:1, line:397:79> line:396:12 pthread_attr_destroy 'int (pthread_attr_t *)' extern
| |-ParmVarDecl 0x563c31bfec58 <col:34, col:50> col:50 __attr 'pthread_attr_t *'
| |-NoThrowAttr 0x563c31bfedb8 <line:397:22>
| `-NonNullAttr 0x563c31bfee10 <col:63, col:77> 1
|-FunctionDecl 0x563c31bff038 <line:398:1, line:400:82> line:398:12 pthread_attr_getdetachstate 'int (const pthread_attr_t *, int *)' extern
| |-ParmVarDecl 0x563c31bfee58 <col:41, col:63> col:63 __attr 'const pthread_attr_t *'
| |-ParmVarDecl 0x563c31bfeed8 <line:399:6, col:11> col:11 __detachstate 'int *'
| |-NoThrowAttr 0x563c31bff0e8 <line:400:22>
| `-NonNullAttr 0x563c31bff140 <col:63, col:80> 1 2
|-FunctionDecl 0x563c31bff348 <line:401:1, line:403:79> line:401:12 pthread_attr_setdetachstate 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x563c31bff188 <col:41, col:57> col:57 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x563c31bff208 <line:402:6, col:10> col:10 __detachstate 'int'
| |-NoThrowAttr 0x563c31bff3f8 <line:403:22>
| `-NonNullAttr 0x563c31bff450 <col:63, col:77> 1
|-FunctionDecl 0x563c31bff6a8 <line:404:1, line:406:82> line:404:12 pthread_attr_getguardsize 'int (const pthread_attr_t *, size_t *)' extern
| |-ParmVarDecl 0x563c31bff498 <col:39, col:61> col:61 __attr 'const pthread_attr_t *'
| |-ParmVarDecl 0x563c31bff540 <line:405:11, col:19> col:19 __guardsize 'size_t *'
| |-NoThrowAttr 0x563c31bff758 <line:406:22>
| `-NonNullAttr 0x563c31bff7b0 <col:63, col:80> 1 2
|-FunctionDecl 0x563c31c009e8 <line:407:1, line:409:79> line:407:12 pthread_attr_setguardsize 'int (pthread_attr_t *, size_t)' extern
| |-ParmVarDecl 0x563c31bff7f8 <col:39, col:55> col:55 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x563c31bff870 <line:408:11, col:18> col:18 __guardsize 'size_t':'unsigned long'
| |-NoThrowAttr 0x563c31c00a98 <line:409:22>
| `-NonNullAttr 0x563c31c00af0 <col:63, col:77> 1
|-FunctionDecl 0x563c31c00d28 <line:410:1, line:412:82> line:410:12 pthread_attr_getschedparam 'int (const pthread_attr_t *restrict, struct sched_param *restrict)' extern
| |-ParmVarDecl 0x563c31c00b38 <col:40, col:73> col:73 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x563c31c00bc8 <line:411:12, col:43> col:43 __param 'struct sched_param *restrict'
| |-NoThrowAttr 0x563c31c00dd8 <line:412:22>
| `-NonNullAttr 0x563c31c00e30 <col:63, col:80> 1 2
|-FunctionDecl 0x563c31c01068 <line:413:1, line:415:97> line:413:12 pthread_attr_setschedparam 'int (pthread_attr_t *restrict, const struct sched_param *restrict)' extern
| |-ParmVarDecl 0x563c31c00e78 <col:40, col:67> col:67 __attr 'pthread_attr_t *restrict'
| |-ParmVarDecl 0x563c31c00f08 <line:414:12, line:415:12> col:12 __param 'const struct sched_param *restrict'
| |-NoThrowAttr 0x563c31c01118 <col:37>
| `-NonNullAttr 0x563c31c01170 <col:78, col:95> 1 2
|-FunctionDecl 0x563c31c01358 <line:416:1, line:418:82> line:416:12 pthread_attr_getschedpolicy 'int (const pthread_attr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x563c31c011b8 <col:41, line:417:6> col:6 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x563c31c01238 <col:14, col:30> col:30 __policy 'int *restrict'
| |-NoThrowAttr 0x563c31c01408 <line:418:22>
| `-NonNullAttr 0x563c31c01460 <col:63, col:80> 1 2
|-FunctionDecl 0x563c31c015e8 <line:419:1, line:420:79> line:419:12 pthread_attr_setschedpolicy 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x563c31c014a8 <col:41, col:57> col:57 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x563c31c01528 <col:65, col:69> col:69 __policy 'int'
| |-NoThrowAttr 0x563c31c01698 <line:420:22>
| `-NonNullAttr 0x563c31c016f0 <col:63, col:77> 1
|-FunctionDecl 0x563c31c01898 <line:421:1, line:423:82> line:421:12 pthread_attr_getinheritsched 'int (const pthread_attr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x563c31c01738 <col:42, line:422:7> col:7 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x563c31c017b8 <col:15, col:31> col:31 __inherit 'int *restrict'
| |-NoThrowAttr 0x563c31c01948 <line:423:22>
| `-NonNullAttr 0x563c31c019c0 <col:63, col:80> 1 2
|-FunctionDecl 0x563c31c01b48 <line:424:1, line:426:79> line:424:12 pthread_attr_setinheritsched 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x563c31c01a08 <col:42, col:58> col:58 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x563c31c01a88 <line:425:7, col:11> col:11 __inherit 'int'
| |-NoThrowAttr 0x563c31c01bf8 <line:426:22>
| `-NonNullAttr 0x563c31c01c50 <col:63, col:77> 1
|-FunctionDecl 0x563c31c01df8 <line:427:1, line:429:82> line:427:12 pthread_attr_getscope 'int (const pthread_attr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x563c31c01c98 <col:35, col:68> col:68 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x563c31c01d18 <line:428:7, col:23> col:23 __scope 'int *restrict'
| |-NoThrowAttr 0x563c31c01ea8 <line:429:22>
| `-NonNullAttr 0x563c31c01f00 <col:63, col:80> 1 2
|-FunctionDecl 0x563c31c02088 <line:430:1, line:431:79> line:430:12 pthread_attr_setscope 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x563c31c01f48 <col:35, col:51> col:51 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x563c31c01fc8 <col:59, col:63> col:63 __scope 'int'
| |-NoThrowAttr 0x563c31c02138 <line:431:22>
| `-NonNullAttr 0x563c31c02190 <col:63, col:77> 1
|-FunctionDecl 0x563c31c023b8 <line:432:1, line:434:115> line:432:12 pthread_attr_getstackaddr 'int (const pthread_attr_t *restrict, void **restrict)' extern
| |-ParmVarDecl 0x563c31c021d8 <col:39, line:433:11> col:11 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x563c31c02258 <col:19, col:37> col:37 __stackaddr 'void **restrict'
| |-NoThrowAttr 0x563c31c02468 <line:434:22>
| |-NonNullAttr 0x563c31c024c0 <col:63, col:80> 1 2
| `-DeprecatedAttr 0x563c31c024f8 <col:100> "" ""
|-FunctionDecl 0x563c31c02708 <line:435:1, line:437:112> line:435:12 pthread_attr_setstackaddr 'int (pthread_attr_t *, void *)' extern
| |-ParmVarDecl 0x563c31c02548 <col:39, col:55> col:55 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x563c31c025c8 <line:436:11, col:17> col:17 __stackaddr 'void *'
| |-NoThrowAttr 0x563c31c027b8 <line:437:22>
| |-NonNullAttr 0x563c31c02810 <col:63, col:77> 1
| `-DeprecatedAttr 0x563c31c02848 <col:97> "" ""
|-FunctionDecl 0x563c31c02a48 <line:438:1, line:440:82> line:438:12 pthread_attr_getstacksize 'int (const pthread_attr_t *restrict, size_t *restrict)' extern
| |-ParmVarDecl 0x563c31c02898 <col:39, line:439:11> col:11 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x563c31c02910 <col:19, col:38> col:38 __stacksize 'size_t *restrict'
| |-NoThrowAttr 0x563c31c02af8 <line:440:22>
| `-NonNullAttr 0x563c31c02b50 <col:63, col:80> 1 2
|-FunctionDecl 0x563c31c02cd0 <line:441:1, line:443:79> line:441:12 pthread_attr_setstacksize 'int (pthread_attr_t *, size_t)' extern
| |-ParmVarDecl 0x563c31c02b98 <col:39, col:55> col:55 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x563c31c02c10 <line:442:11, col:18> col:18 __stacksize 'size_t':'unsigned long'
| |-NoThrowAttr 0x563c31c02d80 <line:443:22>
| `-NonNullAttr 0x563c31c02dd8 <col:63, col:77> 1
|-FunctionDecl 0x563c31c030c8 <line:444:1, line:447:85> line:444:12 pthread_attr_getstack 'int (const pthread_attr_t *restrict, void **restrict, size_t *restrict)' extern
| |-ParmVarDecl 0x563c31c02e28 <col:35, col:68> col:68 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x563c31c02ea8 <line:445:7, col:25> col:25 __stackaddr 'void **restrict'
| |-ParmVarDecl 0x563c31c02f20 <line:446:7, col:26> col:26 __stacksize 'size_t *restrict'
| |-NoThrowAttr 0x563c31c03180 <line:447:22>
| `-NonNullAttr 0x563c31c031d8 <col:63, col:83> 1 2 3
|-FunctionDecl 0x563c31c03488 <line:448:1, line:449:100> line:448:12 pthread_attr_setstack 'int (pthread_attr_t *, void *, size_t)' extern
| |-ParmVarDecl 0x563c31c03230 <col:35, col:51> col:51 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x563c31c032b0 <col:59, col:65> col:65 __stackaddr 'void *'
| |-ParmVarDecl 0x563c31c03328 <line:449:7, col:14> col:14 __stacksize 'size_t':'unsigned long'
| |-NoThrowAttr 0x563c31c03540 <col:43>
| `-NonNullAttr 0x563c31c03598 <col:84, col:98> 1
|-FunctionDecl 0x563c31c03858 <line:450:1, line:452:79> line:450:12 pthread_setschedparam 'int (pthread_t, int, const struct sched_param *)' extern
| |-ParmVarDecl 0x563c31c035e8 <col:35, col:45> col:45 __target_thread 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x563c31c03668 <col:62, col:66> col:66 __policy 'int'
| |-ParmVarDecl 0x563c31c036f8 <line:451:7, col:33> col:33 __param 'const struct sched_param *'
| |-NoThrowAttr 0x563c31c03910 <line:452:22>
| `-NonNullAttr 0x563c31c03968 <col:63, col:77> 3
|-FunctionDecl 0x563c31c03c78 <line:453:1, line:456:82> line:453:12 pthread_getschedparam 'int (pthread_t, int *restrict, struct sched_param *restrict)' extern
| |-ParmVarDecl 0x563c31c039e0 <col:35, col:45> col:45 __target_thread 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x563c31c03a60 <line:454:7, col:23> col:23 __policy 'int *restrict'
| |-ParmVarDecl 0x563c31c03af0 <line:455:7, col:38> col:38 __param 'struct sched_param *restrict'
| |-NoThrowAttr 0x563c31c03d30 <line:456:22>
| `-NonNullAttr 0x563c31c03d88 <col:63, col:80> 2 3
|-FunctionDecl 0x563c31c03f78 <line:457:1, line:458:45> line:457:12 pthread_setschedprio 'int (pthread_t, int)' extern
| |-ParmVarDecl 0x563c31c03dd8 <col:34, col:44> col:44 __target_thread 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x563c31c03e58 <col:61, col:65> col:65 __prio 'int'
| `-NoThrowAttr 0x563c31c04028 <line:458:22>
|-FunctionDecl 0x563c31c043f8 <line:459:1, line:460:71> line:459:12 pthread_once 'int (pthread_once_t *, void (*)(void))' extern
| |-ParmVarDecl 0x563c31c040f0 <col:26, col:42> col:42 __once_control 'pthread_once_t *'
| |-ParmVarDecl 0x563c31c04290 <line:460:5, col:33> col:12 __init_routine 'void (*)(void)'
| `-NonNullAttr 0x563c31c044a8 <col:52, col:69> 1 2
|-FunctionDecl 0x563c31c04650 <line:461:1, col:64> col:12 pthread_setcancelstate 'int (int, int *)' extern
| |-ParmVarDecl 0x563c31c04530 <col:36, col:40> col:40 __state 'int'
| `-ParmVarDecl 0x563c31c045b0 <col:49, col:54> col:54 __oldstate 'int *'
|-FunctionDecl 0x563c31c04838 <line:462:1, col:61> col:12 pthread_setcanceltype 'int (int, int *)' extern
| |-ParmVarDecl 0x563c31c04718 <col:35, col:39> col:39 __type 'int'
| `-ParmVarDecl 0x563c31c04798 <col:47, col:52> col:52 __oldtype 'int *'
|-FunctionDecl 0x563c31c049f0 <line:463:1, col:42> col:12 pthread_cancel 'int (pthread_t)' extern
| `-ParmVarDecl 0x563c31c048f8 <col:28, col:38> col:38 __th 'pthread_t':'unsigned long'
|-FunctionDecl 0x563c31c04b30 <line:464:1, col:37> col:13 pthread_testcancel 'void (void)' extern
|-RecordDecl 0x563c31c04bd0 <line:465:9, line:473:1> line:465:9 struct definition
| |-RecordDecl 0x563c31c04c78 <line:467:3, line:471:3> line:467:3 struct definition
| | |-FieldDecl 0x563c31c04d68 <line:469:5, col:15> col:15 __cancel_jmp_buf '__jmp_buf':'long [8]'
| | `-FieldDecl 0x563c31c04dd0 <line:470:5, col:9> col:9 __mask_was_saved 'int'
| |-FieldDecl 0x563c31c04fa0 <line:467:3, line:471:23> col:5 __cancel_jmp_buf 'struct (anonymous struct at ./split_6/mix036_power.oepc_false-unreach-call.i:467:3) [1]'
| `-FieldDecl 0x563c31c05098 <line:472:3, col:16> col:9 __pad 'void *[4]'
|-TypedefDecl 0x563c31c05150 <line:465:1, line:473:3> col:3 referenced __pthread_unwind_buf_t 'struct __pthread_unwind_buf_t':'__pthread_unwind_buf_t'
| |-ElaboratedType 0x563c31c050f0 'struct __pthread_unwind_buf_t' sugar
| | `-RecordType 0x563c31c04c50 '__pthread_unwind_buf_t'
| |   `-Record 0x563c31c04bd0 ''
| `-AlignedAttr 0x563c31c051a8 <col:42> aligned
|   `-<<<NULL>>>
|-RecordDecl 0x563c31c05220 <line:474:1, line:480:1> line:474:8 struct __pthread_cleanup_frame definition
| |-FieldDecl 0x563c31c05380 <line:476:3, col:35> col:10 __cancel_routine 'void (*)(void *)'
| |-FieldDecl 0x563c31c053e8 <line:477:3, col:9> col:9 __cancel_arg 'void *'
| |-FieldDecl 0x563c31c05450 <line:478:3, col:7> col:7 __do_it 'int'
| `-FieldDecl 0x563c31c054b8 <line:479:3, col:7> col:7 __cancel_type 'int'
|-FunctionDecl 0x563c31c056c0 <line:481:1, col:69> col:13 __pthread_register_cancel 'void (__pthread_unwind_buf_t *)' extern
| `-ParmVarDecl 0x563c31c055b0 <col:40, col:64> col:64 __buf '__pthread_unwind_buf_t *'
|-FunctionDecl 0x563c31c05808 <line:483:1, col:71> col:13 __pthread_unregister_cancel 'void (__pthread_unwind_buf_t *)' extern
| `-ParmVarDecl 0x563c31c05778 <col:42, col:66> col:66 __buf '__pthread_unwind_buf_t *'
|-FunctionDecl 0x563c31c05a00 <line:485:1, line:487:31> line:485:13 __pthread_unwind_next 'void (__pthread_unwind_buf_t *) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x563c31c058c0 <col:36, col:60> col:60 __buf '__pthread_unwind_buf_t *'
| `-WeakAttr 0x563c31c05aa8 <line:487:22>
|-RecordDecl 0x563c31c05b00 <line:489:1, col:8> col:8 struct __jmp_buf_tag
|-FunctionDecl 0x563c31c05e18 <line:490:1, col:98> col:12 __sigsetjmp 'int (struct __jmp_buf_tag *, int)' extern
| |-ParmVarDecl 0x563c31c05c78 <col:25, col:47> col:47 __env 'struct __jmp_buf_tag *'
| |-ParmVarDecl 0x563c31c05cf8 <col:54, col:58> col:58 __savemask 'int'
| |-NoThrowAttr 0x563c31c05ec8 <col:86>
| `-ReturnsTwiceAttr 0x563c31c05f20 <col:12> Implicit
|-FunctionDecl 0x563c31c06248 <line:491:1, line:493:79> line:491:12 pthread_mutex_init 'int (pthread_mutex_t *, const pthread_mutexattr_t *)' extern
| |-ParmVarDecl 0x563c31c05ff0 <col:32, col:49> col:49 __mutex 'pthread_mutex_t *'
| |-ParmVarDecl 0x563c31c06100 <line:492:11, col:38> col:38 __mutexattr 'const pthread_mutexattr_t *'
| |-NoThrowAttr 0x563c31c062f8 <line:493:22>
| `-NonNullAttr 0x563c31c06350 <col:63, col:77> 1
|-FunctionDecl 0x563c31c064c8 <line:494:1, line:495:79> line:494:12 pthread_mutex_destroy 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x563c31c06398 <col:35, col:52> col:52 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x563c31c06570 <line:495:22>
| `-NonNullAttr 0x563c31c065c8 <col:63, col:77> 1
|-FunctionDecl 0x563c31c066d0 <line:496:1, line:497:68> line:496:12 pthread_mutex_trylock 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x563c31c06618 <col:35, col:52> col:52 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x563c31c06778 <line:497:22>
| `-NonNullAttr 0x563c31c067d0 <col:52, col:66> 1
|-FunctionDecl 0x563c31c068d0 <line:498:1, line:499:68> line:498:12 pthread_mutex_lock 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x563c31c06818 <col:32, col:49> col:49 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x563c31c06978 <line:499:22>
| `-NonNullAttr 0x563c31c069d0 <col:52, col:66> 1
|-FunctionDecl 0x563c31c07c28 <line:500:1, line:502:85> line:500:12 pthread_mutex_timedlock 'int (pthread_mutex_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x563c31c07a38 <col:37, col:65> col:65 __mutex 'pthread_mutex_t *restrict'
| |-ParmVarDecl 0x563c31c07ac8 <line:501:9, line:502:9> col:9 __abstime 'const struct timespec *restrict'
| |-NoThrowAttr 0x563c31c07cd8 <col:36>
| `-NonNullAttr 0x563c31c07d30 <col:66, col:83> 1 2
|-FunctionDecl 0x563c31c07e30 <line:503:1, line:504:68> line:503:12 pthread_mutex_unlock 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x563c31c07d78 <col:34, col:51> col:51 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x563c31c07ed8 <line:504:22>
| `-NonNullAttr 0x563c31c07f30 <col:52, col:66> 1
|-FunctionDecl 0x563c31c081c8 <line:505:1, line:508:82> line:505:12 pthread_mutex_getprioceiling 'int (const pthread_mutex_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x563c31c07fe0 <col:42, line:506:18> col:18 __mutex 'const pthread_mutex_t *restrict'
| |-ParmVarDecl 0x563c31c08060 <line:507:7, col:23> col:23 __prioceiling 'int *restrict'
| |-NoThrowAttr 0x563c31c08278 <line:508:22>
| `-NonNullAttr 0x563c31c082d0 <col:63, col:80> 1 2
|-FunctionDecl 0x563c31c08598 <line:509:1, line:512:82> line:509:12 pthread_mutex_setprioceiling 'int (pthread_mutex_t *restrict, int, int *restrict)' extern
| |-ParmVarDecl 0x563c31c08318 <col:42, col:70> col:70 __mutex 'pthread_mutex_t *restrict'
| |-ParmVarDecl 0x563c31c08398 <line:510:7, col:11> col:11 __prioceiling 'int'
| |-ParmVarDecl 0x563c31c08418 <line:511:7, col:23> col:23 __old_ceiling 'int *restrict'
| |-NoThrowAttr 0x563c31c08650 <line:512:22>
| `-NonNullAttr 0x563c31c086a8 <col:63, col:80> 1 3
|-FunctionDecl 0x563c31c087b0 <line:513:1, line:514:79> line:513:12 pthread_mutex_consistent 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x563c31c086f8 <col:38, col:55> col:55 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x563c31c08858 <line:514:22>
| `-NonNullAttr 0x563c31c088b0 <col:63, col:77> 1
|-FunctionDecl 0x563c31c08ad8 <line:515:1, line:516:79> line:515:12 pthread_mutexattr_init 'int (pthread_mutexattr_t *)' extern
| |-ParmVarDecl 0x563c31c08960 <col:36, col:57> col:57 __attr 'pthread_mutexattr_t *'
| |-NoThrowAttr 0x563c31c08b80 <line:516:22>
| `-NonNullAttr 0x563c31c08bd8 <col:63, col:77> 1
|-FunctionDecl 0x563c31c08ce0 <line:517:1, line:518:79> line:517:12 pthread_mutexattr_destroy 'int (pthread_mutexattr_t *)' extern
| |-ParmVarDecl 0x563c31c08c28 <col:39, col:60> col:60 __attr 'pthread_mutexattr_t *'
| |-NoThrowAttr 0x563c31c08d88 <line:518:22>
| `-NonNullAttr 0x563c31c08de0 <col:63, col:77> 1
|-FunctionDecl 0x563c31c09008 <line:519:1, line:522:82> line:519:12 pthread_mutexattr_getpshared 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x563c31c08e28 <col:42, line:520:18> col:18 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x563c31c08ea8 <line:521:7, col:23> col:23 __pshared 'int *restrict'
| |-NoThrowAttr 0x563c31c090b8 <line:522:22>
| `-NonNullAttr 0x563c31c09110 <col:63, col:80> 1 2
|-FunctionDecl 0x563c31c09318 <line:523:1, line:525:79> line:523:12 pthread_mutexattr_setpshared 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x563c31c09158 <col:42, col:63> col:63 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x563c31c091d8 <line:524:7, col:11> col:11 __pshared 'int'
| |-NoThrowAttr 0x563c31c093c8 <line:525:22>
| `-NonNullAttr 0x563c31c09420 <col:63, col:77> 1
|-FunctionDecl 0x563c31c095c8 <line:526:1, line:528:82> line:526:12 pthread_mutexattr_gettype 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x563c31c09468 <col:39, line:527:11> col:11 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x563c31c094e8 <col:19, col:35> col:35 __kind 'int *restrict'
| |-NoThrowAttr 0x563c31c09678 <line:528:22>
| `-NonNullAttr 0x563c31c096d0 <col:63, col:80> 1 2
|-FunctionDecl 0x563c31c09858 <line:529:1, line:530:79> line:529:12 pthread_mutexattr_settype 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x563c31c09718 <col:39, col:60> col:60 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x563c31c09798 <col:68, col:72> col:72 __kind 'int'
| |-NoThrowAttr 0x563c31c09908 <line:530:22>
| `-NonNullAttr 0x563c31c09960 <col:63, col:77> 1
|-FunctionDecl 0x563c31c09b20 <line:531:1, line:534:82> line:531:12 pthread_mutexattr_getprotocol 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x563c31c099a8 <col:43, line:532:19> col:19 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x563c31c09a40 <line:533:8, col:24> col:24 __protocol 'int *restrict'
| |-NoThrowAttr 0x563c31c09bd0 <line:534:22>
| `-NonNullAttr 0x563c31c09c28 <col:63, col:80> 1 2
|-FunctionDecl 0x563c31c09db8 <line:535:1, line:537:79> line:535:12 pthread_mutexattr_setprotocol 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x563c31c09c78 <col:43, col:64> col:64 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x563c31c09cf8 <line:536:8, col:12> col:12 __protocol 'int'
| |-NoThrowAttr 0x563c31c09e68 <line:537:22>
| `-NonNullAttr 0x563c31c09ec0 <col:63, col:77> 1
|-FunctionDecl 0x563c31c0a068 <line:538:1, line:541:82> line:538:12 pthread_mutexattr_getprioceiling 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x563c31c09f08 <col:46, line:539:22> col:22 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x563c31c09f88 <line:540:11, col:27> col:27 __prioceiling 'int *restrict'
| |-NoThrowAttr 0x563c31c0a118 <line:541:22>
| `-NonNullAttr 0x563c31c0a170 <col:63, col:80> 1 2
|-FunctionDecl 0x563c31c0a2f8 <line:542:1, line:544:79> line:542:12 pthread_mutexattr_setprioceiling 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x563c31c0a1b8 <col:46, col:67> col:67 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x563c31c0a238 <line:543:11, col:15> col:15 __prioceiling 'int'
| |-NoThrowAttr 0x563c31c0a3a8 <line:544:22>
| `-NonNullAttr 0x563c31c0a400 <col:63, col:77> 1
|-FunctionDecl 0x563c31c0a5e8 <line:545:1, line:547:82> line:545:12 pthread_mutexattr_getrobust 'int (const pthread_mutexattr_t *, int *)' extern
| |-ParmVarDecl 0x563c31c0a448 <col:41, col:68> col:68 __attr 'const pthread_mutexattr_t *'
| |-ParmVarDecl 0x563c31c0a4c8 <line:546:6, col:11> col:11 __robustness 'int *'
| |-NoThrowAttr 0x563c31c0a698 <line:547:22>
| `-NonNullAttr 0x563c31c0a6f0 <col:63, col:80> 1 2
|-FunctionDecl 0x563c31c0a878 <line:548:1, line:550:79> line:548:12 pthread_mutexattr_setrobust 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x563c31c0a738 <col:41, col:62> col:62 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x563c31c0a7b8 <line:549:6, col:10> col:10 __robustness 'int'
| |-NoThrowAttr 0x563c31c0a928 <line:550:22>
| `-NonNullAttr 0x563c31c0a980 <col:63, col:77> 1
|-FunctionDecl 0x563c31c0bcf8 <line:551:1, line:553:86> line:551:12 pthread_rwlock_init 'int (pthread_rwlock_t *restrict, const pthread_rwlockattr_t *restrict)' extern
| |-ParmVarDecl 0x563c31c0baa0 <col:33, col:62> col:62 __rwlock 'pthread_rwlock_t *restrict'
| |-ParmVarDecl 0x563c31c0bbb0 <line:552:5, line:553:5> col:5 __attr 'const pthread_rwlockattr_t *restrict'
| |-NoThrowAttr 0x563c31c0bda8 <col:29>
| `-NonNullAttr 0x563c31c0be00 <col:70, col:84> 1
|-FunctionDecl 0x563c31c0bf78 <line:554:1, line:555:79> line:554:12 pthread_rwlock_destroy 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x563c31c0be48 <col:36, col:54> col:54 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x563c31c0c020 <line:555:22>
| `-NonNullAttr 0x563c31c0c078 <col:63, col:77> 1
|-FunctionDecl 0x563c31c0c180 <line:556:1, line:557:68> line:556:12 pthread_rwlock_rdlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x563c31c0c0c8 <col:35, col:53> col:53 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x563c31c0c228 <line:557:22>
| `-NonNullAttr 0x563c31c0c280 <col:52, col:66> 1
|-FunctionDecl 0x563c31c0c380 <line:558:1, line:559:65> line:558:12 pthread_rwlock_tryrdlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x563c31c0c2c8 <col:38, col:56> col:56 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x563c31c0c428 <line:559:19>
| `-NonNullAttr 0x563c31c0c480 <col:49, col:63> 1
|-FunctionDecl 0x563c31c0c6b8 <line:560:1, line:562:88> line:560:12 pthread_rwlock_timedrdlock 'int (pthread_rwlock_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x563c31c0c4c8 <col:40, col:69> col:69 __rwlock 'pthread_rwlock_t *restrict'
| |-ParmVarDecl 0x563c31c0c558 <line:561:12, line:562:12> col:12 __abstime 'const struct timespec *restrict'
| |-NoThrowAttr 0x563c31c0c768 <col:39>
| `-NonNullAttr 0x563c31c0c7c0 <col:69, col:86> 1 2
|-FunctionDecl 0x563c31c0c8c0 <line:563:1, line:564:68> line:563:12 pthread_rwlock_wrlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x563c31c0c808 <col:35, col:53> col:53 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x563c31c0c968 <line:564:22>
| `-NonNullAttr 0x563c31c0c9c0 <col:52, col:66> 1
|-FunctionDecl 0x563c31c0cb28 <line:565:1, line:566:68> line:565:12 pthread_rwlock_trywrlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x563c31c0ca70 <col:38, col:56> col:56 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x563c31c0cbd0 <line:566:22>
| `-NonNullAttr 0x563c31c0cc28 <col:52, col:66> 1
|-FunctionDecl 0x563c31c0cde8 <line:567:1, line:569:88> line:567:12 pthread_rwlock_timedwrlock 'int (pthread_rwlock_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x563c31c0cc78 <col:40, col:69> col:69 __rwlock 'pthread_rwlock_t *restrict'
| |-ParmVarDecl 0x563c31c0cd08 <line:568:12, line:569:12> col:12 __abstime 'const struct timespec *restrict'
| |-NoThrowAttr 0x563c31c0ce98 <col:39>
| `-NonNullAttr 0x563c31c0cef0 <col:69, col:86> 1 2
|-FunctionDecl 0x563c31c0cff0 <line:570:1, line:571:68> line:570:12 pthread_rwlock_unlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x563c31c0cf38 <col:35, col:53> col:53 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x563c31c0d098 <line:571:22>
| `-NonNullAttr 0x563c31c0d0f0 <col:52, col:66> 1
|-FunctionDecl 0x563c31c0d2d8 <line:572:1, line:573:79> line:572:12 pthread_rwlockattr_init 'int (pthread_rwlockattr_t *)' extern
| |-ParmVarDecl 0x563c31c0d1a0 <col:37, col:59> col:59 __attr 'pthread_rwlockattr_t *'
| |-NoThrowAttr 0x563c31c0d380 <line:573:22>
| `-NonNullAttr 0x563c31c0d3d8 <col:63, col:77> 1
|-FunctionDecl 0x563c31c0d4e0 <line:574:1, line:575:79> line:574:12 pthread_rwlockattr_destroy 'int (pthread_rwlockattr_t *)' extern
| |-ParmVarDecl 0x563c31c0d428 <col:40, col:62> col:62 __attr 'pthread_rwlockattr_t *'
| |-NoThrowAttr 0x563c31c0d588 <line:575:22>
| `-NonNullAttr 0x563c31c0d5e0 <col:63, col:77> 1
|-FunctionDecl 0x563c31c0d808 <line:576:1, line:579:82> line:576:12 pthread_rwlockattr_getpshared 'int (const pthread_rwlockattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x563c31c0d628 <col:43, line:577:19> col:19 __attr 'const pthread_rwlockattr_t *restrict'
| |-ParmVarDecl 0x563c31c0d6a8 <line:578:8, col:24> col:24 __pshared 'int *restrict'
| |-NoThrowAttr 0x563c31c0d8b8 <line:579:22>
| `-NonNullAttr 0x563c31c0d910 <col:63, col:80> 1 2
|-FunctionDecl 0x563c31c0db38 <line:580:1, line:582:79> line:580:12 pthread_rwlockattr_setpshared 'int (pthread_rwlockattr_t *, int)' extern
| |-ParmVarDecl 0x563c31c0d958 <col:43, col:65> col:65 __attr 'pthread_rwlockattr_t *'
| |-ParmVarDecl 0x563c31c0d9d8 <line:581:8, col:12> col:12 __pshared 'int'
| |-NoThrowAttr 0x563c31c0dbe8 <line:582:22>
| `-NonNullAttr 0x563c31c0dc40 <col:63, col:77> 1
|-FunctionDecl 0x563c31c0dde8 <line:583:1, line:586:82> line:583:12 pthread_rwlockattr_getkind_np 'int (const pthread_rwlockattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x563c31c0dc88 <col:43, line:584:19> col:19 __attr 'const pthread_rwlockattr_t *restrict'
| |-ParmVarDecl 0x563c31c0dd08 <line:585:8, col:24> col:24 __pref 'int *restrict'
| |-NoThrowAttr 0x563c31c0de98 <line:586:22>
| `-NonNullAttr 0x563c31c0def0 <col:63, col:80> 1 2
|-FunctionDecl 0x563c31c0e078 <line:587:1, line:588:93> line:587:12 pthread_rwlockattr_setkind_np 'int (pthread_rwlockattr_t *, int)' extern
| |-ParmVarDecl 0x563c31c0df38 <col:43, col:65> col:65 __attr 'pthread_rwlockattr_t *'
| |-ParmVarDecl 0x563c31c0dfb8 <line:588:8, col:12> col:12 __pref 'int'
| |-NoThrowAttr 0x563c31c0e128 <col:36>
| `-NonNullAttr 0x563c31c0e180 <col:77, col:91> 1
|-FunctionDecl 0x563c31c0e4b8 <line:589:1, line:591:79> line:589:12 pthread_cond_init 'int (pthread_cond_t *restrict, const pthread_condattr_t *restrict)' extern
| |-ParmVarDecl 0x563c31c0e260 <col:31, col:58> col:58 __cond 'pthread_cond_t *restrict'
| |-ParmVarDecl 0x563c31c0e370 <line:590:10, col:47> col:47 __cond_attr 'const pthread_condattr_t *restrict'
| |-NoThrowAttr 0x563c31c0e568 <line:591:22>
| `-NonNullAttr 0x563c31c0e5c0 <col:63, col:77> 1
|-FunctionDecl 0x563c31c0e738 <line:592:1, line:593:79> line:592:12 pthread_cond_destroy 'int (pthread_cond_t *)' extern
| |-ParmVarDecl 0x563c31c0e608 <col:34, col:50> col:50 __cond 'pthread_cond_t *'
| |-NoThrowAttr 0x563c31c0e7e0 <line:593:22>
| `-NonNullAttr 0x563c31c0e838 <col:63, col:77> 1
|-FunctionDecl 0x563c31c0e940 <line:594:1, line:595:68> line:594:12 pthread_cond_signal 'int (pthread_cond_t *)' extern
| |-ParmVarDecl 0x563c31c0e888 <col:33, col:49> col:49 __cond 'pthread_cond_t *'
| |-NoThrowAttr 0x563c31c0e9e8 <line:595:22>
| `-NonNullAttr 0x563c31c0ea40 <col:52, col:66> 1
|-FunctionDecl 0x563c31c0eb58 <line:596:1, line:597:68> line:596:12 pthread_cond_broadcast 'int (pthread_cond_t *)' extern
| |-ParmVarDecl 0x563c31c0eaa0 <col:36, col:52> col:52 __cond 'pthread_cond_t *'
| |-NoThrowAttr 0x563c31c0ec00 <line:597:22>
| `-NonNullAttr 0x563c31c0ec58 <col:52, col:66> 1
|-FunctionDecl 0x563c31c0ee88 <line:598:1, line:600:41> line:598:12 pthread_cond_wait 'int (pthread_cond_t *restrict, pthread_mutex_t *restrict)' extern
| |-ParmVarDecl 0x563c31c0eca8 <col:31, col:58> col:58 __cond 'pthread_cond_t *restrict'
| |-ParmVarDecl 0x563c31c0ed20 <line:599:10, col:38> col:38 __mutex 'pthread_mutex_t *restrict'
| `-NonNullAttr 0x563c31c0ef38 <line:600:22, col:39> 1 2
|-FunctionDecl 0x563c31c0f268 <line:601:1, line:604:44> line:601:12 pthread_cond_timedwait 'int (pthread_cond_t *restrict, pthread_mutex_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x563c31c0efb8 <col:36, col:63> col:63 __cond 'pthread_cond_t *restrict'
| |-ParmVarDecl 0x563c31c0f030 <line:602:8, col:36> col:36 __mutex 'pthread_mutex_t *restrict'
| |-ParmVarDecl 0x563c31c0f0c0 <line:603:8, col:42> col:42 __abstime 'const struct timespec *restrict'
| `-NonNullAttr 0x563c31c0f320 <line:604:22, col:42> 1 2 3
|-FunctionDecl 0x563c31c0f538 <line:605:1, line:606:79> line:605:12 pthread_condattr_init 'int (pthread_condattr_t *)' extern
| |-ParmVarDecl 0x563c31c0f400 <col:35, col:55> col:55 __attr 'pthread_condattr_t *'
| |-NoThrowAttr 0x563c31c0f5e0 <line:606:22>
| `-NonNullAttr 0x563c31c0f638 <col:63, col:77> 1
|-FunctionDecl 0x563c31c0f740 <line:607:1, line:608:79> line:607:12 pthread_condattr_destroy 'int (pthread_condattr_t *)' extern
| |-ParmVarDecl 0x563c31c0f688 <col:38, col:58> col:58 __attr 'pthread_condattr_t *'
| |-NoThrowAttr 0x563c31c0f7e8 <line:608:22>
| `-NonNullAttr 0x563c31c0f840 <col:63, col:77> 1
|-FunctionDecl 0x563c31c0faa0 <line:609:1, line:612:82> line:609:12 pthread_condattr_getpshared 'int (const pthread_condattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x563c31c0f888 <col:41, line:610:17> col:17 __attr 'const pthread_condattr_t *restrict'
| |-ParmVarDecl 0x563c31c0f908 <line:611:6, col:22> col:22 __pshared 'int *restrict'
| |-NoThrowAttr 0x563c31c0fb50 <line:612:22>
| `-NonNullAttr 0x563c31c0fba8 <col:63, col:80> 1 2
|-FunctionDecl 0x563c31c0fdb8 <line:613:1, line:614:94> line:613:12 pthread_condattr_setpshared 'int (pthread_condattr_t *, int)' extern
| |-ParmVarDecl 0x563c31c0fbf8 <col:41, col:61> col:61 __attr 'pthread_condattr_t *'
| |-ParmVarDecl 0x563c31c0fc78 <line:614:6, col:10> col:10 __pshared 'int'
| |-NoThrowAttr 0x563c31c0fe68 <col:37>
| `-NonNullAttr 0x563c31c0fec0 <col:78, col:92> 1
|-FunctionDecl 0x563c31c100d8 <line:615:1, line:618:82> line:615:12 pthread_condattr_getclock 'int (const pthread_condattr_t *restrict, __clockid_t *restrict)' extern
| |-ParmVarDecl 0x563c31c0ff08 <col:39, line:616:22> col:22 __attr 'const pthread_condattr_t *restrict'
| |-ParmVarDecl 0x563c31c0ffb0 <line:617:11, col:35> col:35 __clock_id '__clockid_t *restrict'
| |-NoThrowAttr 0x563c31c10188 <line:618:22>
| `-NonNullAttr 0x563c31c101e0 <col:63, col:80> 1 2
|-FunctionDecl 0x563c31c103a8 <line:619:1, line:621:79> line:619:12 pthread_condattr_setclock 'int (pthread_condattr_t *, __clockid_t)' extern
| |-ParmVarDecl 0x563c31c10228 <col:39, col:59> col:59 __attr 'pthread_condattr_t *'
| |-ParmVarDecl 0x563c31c102a0 <line:620:11, col:23> col:23 __clock_id '__clockid_t':'int'
| |-NoThrowAttr 0x563c31c10458 <line:621:22>
| `-NonNullAttr 0x563c31c104b0 <col:63, col:77> 1
|-FunctionDecl 0x563c31c10758 <line:622:1, line:623:79> line:622:12 pthread_spin_init 'int (pthread_spinlock_t *, int)' extern
| |-ParmVarDecl 0x563c31c10590 <col:31, col:51> col:51 __lock 'pthread_spinlock_t *'
| |-ParmVarDecl 0x563c31c10610 <col:59, col:63> col:63 __pshared 'int'
| |-NoThrowAttr 0x563c31c10808 <line:623:22>
| `-NonNullAttr 0x563c31c10860 <col:63, col:77> 1
|-FunctionDecl 0x563c31c109d8 <line:624:1, line:625:79> line:624:12 pthread_spin_destroy 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x563c31c108a8 <col:34, col:54> col:54 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x563c31c10ab0 <line:625:22>
| `-NonNullAttr 0x563c31c10b08 <col:63, col:77> 1
|-FunctionDecl 0x563c31c10c10 <line:626:1, line:627:68> line:626:12 pthread_spin_lock 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x563c31c10b58 <col:31, col:51> col:51 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x563c31c10cb8 <line:627:22>
| `-NonNullAttr 0x563c31c10d10 <col:52, col:66> 1
|-FunctionDecl 0x563c31c10e10 <line:628:1, line:629:68> line:628:12 pthread_spin_trylock 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x563c31c10d58 <col:34, col:54> col:54 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x563c31c10eb8 <line:629:22>
| `-NonNullAttr 0x563c31c10f10 <col:52, col:66> 1
|-FunctionDecl 0x563c31c11010 <line:630:1, line:631:68> line:630:12 pthread_spin_unlock 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x563c31c10f58 <col:33, col:53> col:53 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x563c31c110b8 <line:631:22>
| `-NonNullAttr 0x563c31c11110 <col:52, col:66> 1
|-FunctionDecl 0x563c31c114e8 <line:632:1, line:635:79> line:632:12 pthread_barrier_init 'int (pthread_barrier_t *restrict, const pthread_barrierattr_t *restrict, unsigned int)' extern
| |-ParmVarDecl 0x563c31c111f0 <col:34, col:64> col:64 __barrier 'pthread_barrier_t *restrict'
| |-ParmVarDecl 0x563c31c11300 <line:633:6, line:634:6> col:6 __attr 'const pthread_barrierattr_t *restrict'
| |-ParmVarDecl 0x563c31c11380 <col:14, col:27> col:27 __count 'unsigned int'
| |-NoThrowAttr 0x563c31c115a0 <line:635:22>
| `-NonNullAttr 0x563c31c115f8 <col:63, col:77> 1
|-FunctionDecl 0x563c31c11778 <line:636:1, line:637:79> line:636:12 pthread_barrier_destroy 'int (pthread_barrier_t *)' extern
| |-ParmVarDecl 0x563c31c11648 <col:37, col:56> col:56 __barrier 'pthread_barrier_t *'
| |-NoThrowAttr 0x563c31c11820 <line:637:22>
| `-NonNullAttr 0x563c31c11878 <col:63, col:77> 1
|-FunctionDecl 0x563c31c11980 <line:638:1, line:639:68> line:638:12 pthread_barrier_wait 'int (pthread_barrier_t *)' extern
| |-ParmVarDecl 0x563c31c118c8 <col:34, col:53> col:53 __barrier 'pthread_barrier_t *'
| |-NoThrowAttr 0x563c31c11a28 <line:639:22>
| `-NonNullAttr 0x563c31c11a80 <col:52, col:66> 1
|-FunctionDecl 0x563c31c12c88 <line:640:1, line:641:79> line:640:12 pthread_barrierattr_init 'int (pthread_barrierattr_t *)' extern
| |-ParmVarDecl 0x563c31c12b50 <col:38, col:61> col:61 __attr 'pthread_barrierattr_t *'
| |-NoThrowAttr 0x563c31c12d30 <line:641:22>
| `-NonNullAttr 0x563c31c12d88 <col:63, col:77> 1
|-FunctionDecl 0x563c31c12e90 <line:642:1, line:643:79> line:642:12 pthread_barrierattr_destroy 'int (pthread_barrierattr_t *)' extern
| |-ParmVarDecl 0x563c31c12dd8 <col:41, col:64> col:64 __attr 'pthread_barrierattr_t *'
| |-NoThrowAttr 0x563c31c12f38 <line:643:22>
| `-NonNullAttr 0x563c31c12f90 <col:63, col:77> 1
|-FunctionDecl 0x563c31c131b8 <line:644:1, line:647:82> line:644:12 pthread_barrierattr_getpshared 'int (const pthread_barrierattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x563c31c12fd8 <col:44, line:645:20> col:20 __attr 'const pthread_barrierattr_t *restrict'
| |-ParmVarDecl 0x563c31c13058 <line:646:9, col:25> col:25 __pshared 'int *restrict'
| |-NoThrowAttr 0x563c31c13268 <line:647:22>
| `-NonNullAttr 0x563c31c132c0 <col:63, col:80> 1 2
|-FunctionDecl 0x563c31c134c8 <line:648:1, line:650:79> line:648:12 pthread_barrierattr_setpshared 'int (pthread_barrierattr_t *, int)' extern
| |-ParmVarDecl 0x563c31c13308 <col:44, col:67> col:67 __attr 'pthread_barrierattr_t *'
| |-ParmVarDecl 0x563c31c13388 <line:649:9, col:13> col:13 __pshared 'int'
| |-NoThrowAttr 0x563c31c13578 <line:650:22>
| `-NonNullAttr 0x563c31c135d0 <col:63, col:77> 1
|-FunctionDecl 0x563c31c13918 <line:651:1, line:653:79> line:651:12 pthread_key_create 'int (pthread_key_t *, void (*)(void *))' extern
| |-ParmVarDecl 0x563c31c136b0 <col:32, col:47> col:47 __key 'pthread_key_t *'
| |-ParmVarDecl 0x563c31c137d0 <line:652:11, col:43> col:18 __destr_function 'void (*)(void *)'
| |-NoThrowAttr 0x563c31c139c8 <line:653:22>
| `-NonNullAttr 0x563c31c13a20 <col:63, col:77> 1
|-FunctionDecl 0x563c31c13b88 <line:654:1, col:92> col:12 pthread_key_delete 'int (pthread_key_t)' extern
| |-ParmVarDecl 0x563c31c13a68 <col:32, col:46> col:46 __key 'pthread_key_t':'unsigned int'
| `-NoThrowAttr 0x563c31c13c30 <col:69>
|-FunctionDecl 0x563c31c13da8 <line:655:1, col:95> col:14 pthread_getspecific 'void *(pthread_key_t)' extern
| |-ParmVarDecl 0x563c31c13c98 <col:35, col:49> col:49 __key 'pthread_key_t':'unsigned int'
| `-NoThrowAttr 0x563c31c13e50 <col:72>
|-FunctionDecl 0x563c31c14088 <line:656:1, line:657:67> line:656:12 pthread_setspecific 'int (pthread_key_t, const void *)' extern
| |-ParmVarDecl 0x563c31c13eb8 <col:33, col:47> col:47 __key 'pthread_key_t':'unsigned int'
| |-ParmVarDecl 0x563c31c13f68 <line:657:5, col:17> col:17 __pointer 'const void *'
| `-NoThrowAttr 0x563c31c14138 <col:44>
|-FunctionDecl 0x563c31c14358 <line:658:1, line:660:79> line:658:12 pthread_getcpuclockid 'int (pthread_t, __clockid_t *)' extern
| |-ParmVarDecl 0x563c31c141a0 <col:35, col:45> col:45 __thread_id 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x563c31c14218 <line:659:7, col:20> col:20 __clock_id '__clockid_t *'
| |-NoThrowAttr 0x563c31c14408 <line:660:22>
| `-NonNullAttr 0x563c31c14460 <col:63, col:77> 2
|-FunctionDecl 0x563c31c148a8 <line:661:1, line:663:70> line:661:12 pthread_atfork 'int (void (*)(void), void (*)(void), void (*)(void))' extern
| |-ParmVarDecl 0x563c31c14540 <col:28, col:51> col:35 __prepare 'void (*)(void)'
| |-ParmVarDecl 0x563c31c14650 <line:662:7, col:29> col:14 __parent 'void (*)(void)'
| |-ParmVarDecl 0x563c31c14760 <line:663:7, col:28> col:14 __child 'void (*)(void)'
| `-NoThrowAttr 0x563c31c14960 <col:47>
|-FunctionDecl 0x563c31c14af0 <line:665:1, col:20> col:8 used P0 'void *(void *)'
| `-ParmVarDecl 0x563c31c149d0 <col:11, col:17> col:17 arg 'void *'
|-FunctionDecl 0x563c31c14c48 <line:666:1, col:20> col:8 used P1 'void *(void *)'
| `-ParmVarDecl 0x563c31c14bb0 <col:11, col:17> col:17 arg 'void *'
|-FunctionDecl 0x563c31c14da0 <line:667:1, col:20> col:8 used P2 'void *(void *)'
| `-ParmVarDecl 0x563c31c14d08 <col:11, col:17> col:17 arg 'void *'
|-FunctionDecl 0x563c31c14ef8 <line:668:1, col:20> col:8 used P3 'void *(void *)'
| `-ParmVarDecl 0x563c31c14e60 <col:11, col:17> col:17 arg 'void *'
|-FunctionDecl 0x563c31c14fc0 <line:669:1, col:12> col:6 fence 'void ()'
|-FunctionDecl 0x563c31c15080 <line:670:1, col:12> col:6 isync 'void ()'
|-FunctionDecl 0x563c31c15140 <line:671:1, col:14> col:6 lwfence 'void ()'
|-VarDecl 0x563c31c151f8 <line:672:1, col:5> col:5 used __unbuffered_cnt 'int'
|-VarDecl 0x563c31c15278 prev 0x563c31c151f8 <line:673:1, col:24> col:5 used __unbuffered_cnt 'int' cinit
| `-IntegerLiteral 0x563c31c152e0 <col:24> 'int' 0
|-VarDecl 0x563c31c15318 <line:674:1, col:5> col:5 used __unbuffered_p0_EAX 'int'
|-VarDecl 0x563c31c15398 prev 0x563c31c15318 <line:675:1, col:27> col:5 used __unbuffered_p0_EAX 'int' cinit
| `-IntegerLiteral 0x563c31c15400 <col:27> 'int' 0
|-VarDecl 0x563c31c15438 <line:676:1, col:5> col:5 used __unbuffered_p1_EAX 'int'
|-VarDecl 0x563c31c154b8 prev 0x563c31c15438 <line:677:1, col:27> col:5 used __unbuffered_p1_EAX 'int' cinit
| `-IntegerLiteral 0x563c31c15520 <col:27> 'int' 0
|-VarDecl 0x563c31c15558 <line:678:1, col:5> col:5 used __unbuffered_p2_EAX 'int'
|-VarDecl 0x563c31c155d8 prev 0x563c31c15558 <line:679:1, col:27> col:5 used __unbuffered_p2_EAX 'int' cinit
| `-IntegerLiteral 0x563c31c15640 <col:27> 'int' 0
|-VarDecl 0x563c31c15678 <line:680:1, col:5> col:5 used __unbuffered_p3_EAX 'int'
|-VarDecl 0x563c31c156f8 prev 0x563c31c15678 <line:681:1, col:27> col:5 used __unbuffered_p3_EAX 'int' cinit
| `-IntegerLiteral 0x563c31c15760 <col:27> 'int' 0
|-VarDecl 0x563c31c15798 <line:682:1, col:5> col:5 used __unbuffered_p3_EBX 'int'
|-VarDecl 0x563c31c15818 prev 0x563c31c15798 <line:683:1, col:27> col:5 used __unbuffered_p3_EBX 'int' cinit
| `-IntegerLiteral 0x563c31c15880 <col:27> 'int' 0
|-VarDecl 0x563c31c158b8 <line:684:1, col:5> col:5 used a 'int'
|-VarDecl 0x563c31c15938 prev 0x563c31c158b8 <line:685:1, col:9> col:5 used a 'int' cinit
| `-IntegerLiteral 0x563c31c159a0 <col:9> 'int' 0
|-VarDecl 0x563c31c159d8 <line:686:1, col:5> col:5 used b 'int'
|-VarDecl 0x563c31c15a58 prev 0x563c31c159d8 <line:687:1, col:9> col:5 used b 'int' cinit
| `-IntegerLiteral 0x563c31c15ac0 <col:9> 'int' 0
|-VarDecl 0x563c31c15b00 <line:688:1, col:7> col:7 used b$flush_delayed '_Bool'
|-VarDecl 0x563c31c15b80 <line:689:1, col:5> col:5 used b$mem_tmp 'int'
|-VarDecl 0x563c31c15bf8 <line:690:1, col:7> col:7 used b$r_buff0_thd0 '_Bool'
|-VarDecl 0x563c31c15c70 <line:691:1, col:7> col:7 used b$r_buff0_thd1 '_Bool'
|-VarDecl 0x563c31c15ce8 <line:692:1, col:7> col:7 used b$r_buff0_thd2 '_Bool'
|-VarDecl 0x563c31c15d60 <line:693:1, col:7> col:7 used b$r_buff0_thd3 '_Bool'
|-VarDecl 0x563c31c15dd8 <line:694:1, col:7> col:7 used b$r_buff0_thd4 '_Bool'
|-VarDecl 0x563c31c15e50 <line:695:1, col:7> col:7 used b$r_buff1_thd0 '_Bool'
|-VarDecl 0x563c31c15ec8 <line:696:1, col:7> col:7 used b$r_buff1_thd1 '_Bool'
|-VarDecl 0x563c31c15f40 <line:697:1, col:7> col:7 used b$r_buff1_thd2 '_Bool'
|-VarDecl 0x563c31c15fb8 <line:698:1, col:7> col:7 used b$r_buff1_thd3 '_Bool'
|-VarDecl 0x563c31c16030 <line:699:1, col:7> col:7 used b$r_buff1_thd4 '_Bool'
|-VarDecl 0x563c31c160a8 <line:700:1, col:7> col:7 b$read_delayed '_Bool'
|-VarDecl 0x563c31c16128 <line:701:1, col:6> col:6 b$read_delayed_var 'int *'
|-VarDecl 0x563c31c161a8 <line:702:1, col:5> col:5 used b$w_buff0 'int'
|-VarDecl 0x563c31c16220 <line:703:1, col:7> col:7 used b$w_buff0_used '_Bool'
|-VarDecl 0x563c31c162a0 <line:704:1, col:5> col:5 used b$w_buff1 'int'
|-VarDecl 0x563c31c16318 <line:705:1, col:7> col:7 used b$w_buff1_used '_Bool'
|-VarDecl 0x563c31c16390 <line:706:1, col:7> col:7 used main$tmp_guard0 '_Bool'
|-VarDecl 0x563c31c16408 <line:707:1, col:7> col:7 used main$tmp_guard1 '_Bool'
|-VarDecl 0x563c31c16488 <line:708:1, col:5> col:5 used x 'int'
|-VarDecl 0x563c31c16508 prev 0x563c31c16488 <line:709:1, col:9> col:5 used x 'int' cinit
| `-IntegerLiteral 0x563c31c16570 <col:9> 'int' 0
|-VarDecl 0x563c31c165a8 <line:710:1, col:5> col:5 used y 'int'
|-VarDecl 0x563c31c16628 prev 0x563c31c165a8 <line:711:1, col:9> col:5 used y 'int' cinit
| `-IntegerLiteral 0x563c31c16690 <col:9> 'int' 0
|-VarDecl 0x563c31c166c8 <line:712:1, col:5> col:5 used z 'int'
|-VarDecl 0x563c31c16748 prev 0x563c31c166c8 <line:713:1, col:9> col:5 used z 'int' cinit
| `-IntegerLiteral 0x563c31c167b0 <col:9> 'int' 0
|-VarDecl 0x563c31c167e0 <line:714:1, col:7> col:7 used weak$$choice0 '_Bool'
|-VarDecl 0x563c31c16858 <line:715:1, col:7> col:7 used weak$$choice2 '_Bool'
|-FunctionDecl 0x563c31c16970 prev 0x563c31c14af0 <line:716:1, line:745:1> line:716:8 used P0 'void *(void *)'
| |-ParmVarDecl 0x563c31c168d8 <col:11, col:17> col:17 arg 'void *'
| `-CompoundStmt 0x563c31c18228 <line:717:1, line:745:1>
|   |-CallExpr 0x563c31c16a88 <line:718:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x563c31c16a70 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x563c31c16a18 <col:3> 'void ()' Function 0x563c31bbbe40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x563c31c16b10 <line:719:3, col:15> 'int' '='
|   | |-DeclRefExpr 0x563c31c16aa8 <col:3> 'int' lvalue Var 0x563c31c162a0 'b$w_buff1' 'int'
|   | `-ImplicitCastExpr 0x563c31c16ae8 <col:15> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x563c31c16ac8 <col:15> 'int' lvalue Var 0x563c31c161a8 'b$w_buff0' 'int'
|   |-BinaryOperator 0x563c31c16b70 <line:720:3, col:15> 'int' '='
|   | |-DeclRefExpr 0x563c31c16b30 <col:3> 'int' lvalue Var 0x563c31c161a8 'b$w_buff0' 'int'
|   | `-IntegerLiteral 0x563c31c16b50 <col:15> 'int' 1
|   |-BinaryOperator 0x563c31c16be8 <line:721:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x563c31c16b90 <col:3> '_Bool' lvalue Var 0x563c31c16318 'b$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x563c31c16bd0 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x563c31c16bb0 <col:20> '_Bool' lvalue Var 0x563c31c16220 'b$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x563c31c16c80 <line:722:3, col:27> '_Bool' '='
|   | |-DeclRefExpr 0x563c31c16c08 <col:3> '_Bool' lvalue Var 0x563c31c16220 'b$w_buff0_used' '_Bool'
|   | `-CStyleCastExpr 0x563c31c16c58 <col:20, col:27> '_Bool' <IntegralToBoolean>
|   |   `-IntegerLiteral 0x563c31c16c28 <col:27> 'int' 1
|   |-CallExpr 0x563c31c16e08 <line:723:3, col:56> 'void'
|   | |-ImplicitCastExpr 0x563c31c16df0 <col:3> 'void (*)(int)' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x563c31c16ca0 <col:3> 'void (int)' Function 0x563c31bbbbc8 '__VERIFIER_assert' 'void (int)'
|   | `-UnaryOperator 0x563c31c16da0 <col:21, col:55> 'int' prefix '!' cannot overflow
|   |   `-ParenExpr 0x563c31c16d80 <col:22, col:55> 'int'
|   |     `-BinaryOperator 0x563c31c16d60 <col:23, col:41> 'int' '&&'
|   |       |-ImplicitCastExpr 0x563c31c16d18 <col:23> 'int' <IntegralCast>
|   |       | `-ImplicitCastExpr 0x563c31c16d00 <col:23> '_Bool' <LValueToRValue>
|   |       |   `-DeclRefExpr 0x563c31c16cc0 <col:23> '_Bool' lvalue Var 0x563c31c16318 'b$w_buff1_used' '_Bool'
|   |       `-ImplicitCastExpr 0x563c31c16d48 <col:41> 'int' <IntegralCast>
|   |         `-ImplicitCastExpr 0x563c31c16d30 <col:41> '_Bool' <LValueToRValue>
|   |           `-DeclRefExpr 0x563c31c16ce0 <col:41> '_Bool' lvalue Var 0x563c31c16220 'b$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x563c31c16e88 <line:724:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x563c31c16e30 <col:3> '_Bool' lvalue Var 0x563c31c15e50 'b$r_buff1_thd0' '_Bool'
|   | `-ImplicitCastExpr 0x563c31c16e70 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x563c31c16e50 <col:20> '_Bool' lvalue Var 0x563c31c15bf8 'b$r_buff0_thd0' '_Bool'
|   |-BinaryOperator 0x563c31c16f00 <line:725:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x563c31c16ea8 <col:3> '_Bool' lvalue Var 0x563c31c15ec8 'b$r_buff1_thd1' '_Bool'
|   | `-ImplicitCastExpr 0x563c31c16ee8 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x563c31c16ec8 <col:20> '_Bool' lvalue Var 0x563c31c15c70 'b$r_buff0_thd1' '_Bool'
|   |-BinaryOperator 0x563c31c16f78 <line:726:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x563c31c16f20 <col:3> '_Bool' lvalue Var 0x563c31c15f40 'b$r_buff1_thd2' '_Bool'
|   | `-ImplicitCastExpr 0x563c31c16f60 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x563c31c16f40 <col:20> '_Bool' lvalue Var 0x563c31c15ce8 'b$r_buff0_thd2' '_Bool'
|   |-BinaryOperator 0x563c31c16ff0 <line:727:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x563c31c16f98 <col:3> '_Bool' lvalue Var 0x563c31c15fb8 'b$r_buff1_thd3' '_Bool'
|   | `-ImplicitCastExpr 0x563c31c16fd8 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x563c31c16fb8 <col:20> '_Bool' lvalue Var 0x563c31c15d60 'b$r_buff0_thd3' '_Bool'
|   |-BinaryOperator 0x563c31c17068 <line:728:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x563c31c17010 <col:3> '_Bool' lvalue Var 0x563c31c16030 'b$r_buff1_thd4' '_Bool'
|   | `-ImplicitCastExpr 0x563c31c17050 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x563c31c17030 <col:20> '_Bool' lvalue Var 0x563c31c15dd8 'b$r_buff0_thd4' '_Bool'
|   |-BinaryOperator 0x563c31c17100 <line:729:3, col:27> '_Bool' '='
|   | |-DeclRefExpr 0x563c31c17088 <col:3> '_Bool' lvalue Var 0x563c31c15c70 'b$r_buff0_thd1' '_Bool'
|   | `-CStyleCastExpr 0x563c31c170d8 <col:20, col:27> '_Bool' <IntegralToBoolean>
|   |   `-IntegerLiteral 0x563c31c170a8 <col:27> 'int' 1
|   |-CallExpr 0x563c31c17158 <line:730:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x563c31c17140 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x563c31c17120 <col:3> 'void ()' Function 0x563c31bbbf00 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x563c31c171b0 <line:731:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x563c31c17198 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x563c31c17178 <col:3> 'void ()' Function 0x563c31bbbe40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x563c31c17228 <line:732:3, col:25> 'int' '='
|   | |-DeclRefExpr 0x563c31c171d0 <col:3> 'int' lvalue Var 0x563c31c15398 '__unbuffered_p0_EAX' 'int'
|   | `-ImplicitCastExpr 0x563c31c17210 <col:25> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x563c31c171f0 <col:25> 'int' lvalue Var 0x563c31c16508 'x' 'int'
|   |-CallExpr 0x563c31c17280 <line:733:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x563c31c17268 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x563c31c17248 <col:3> 'void ()' Function 0x563c31bbbf00 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x563c31c172d8 <line:734:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x563c31c172c0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x563c31c172a0 <col:3> 'void ()' Function 0x563c31bbbe40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x563c31c175c0 <line:735:3, col:103> 'int' '='
|   | |-DeclRefExpr 0x563c31c172f8 <col:3> 'int' lvalue Var 0x563c31c15a58 'b' 'int'
|   | `-ConditionalOperator 0x563c31c17590 <col:7, col:103> 'int'
|   |   |-BinaryOperator 0x563c31c173b8 <col:7, col:25> 'int' '&&'
|   |   | |-ImplicitCastExpr 0x563c31c17370 <col:7> 'int' <IntegralCast>
|   |   | | `-ImplicitCastExpr 0x563c31c17358 <col:7> '_Bool' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x563c31c17318 <col:7> '_Bool' lvalue Var 0x563c31c16220 'b$w_buff0_used' '_Bool'
|   |   | `-ImplicitCastExpr 0x563c31c173a0 <col:25> 'int' <IntegralCast>
|   |   |   `-ImplicitCastExpr 0x563c31c17388 <col:25> '_Bool' <LValueToRValue>
|   |   |     `-DeclRefExpr 0x563c31c17338 <col:25> '_Bool' lvalue Var 0x563c31c15c70 'b$r_buff0_thd1' '_Bool'
|   |   |-ImplicitCastExpr 0x563c31c17578 <col:42> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x563c31c173d8 <col:42> 'int' lvalue Var 0x563c31c161a8 'b$w_buff0' 'int'
|   |   `-ParenExpr 0x563c31c17558 <col:54, col:103> 'int'
|   |     `-ConditionalOperator 0x563c31c17528 <col:55, col:102> 'int'
|   |       |-BinaryOperator 0x563c31c17498 <col:55, col:73> 'int' '&&'
|   |       | |-ImplicitCastExpr 0x563c31c17450 <col:55> 'int' <IntegralCast>
|   |       | | `-ImplicitCastExpr 0x563c31c17438 <col:55> '_Bool' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x563c31c173f8 <col:55> '_Bool' lvalue Var 0x563c31c16318 'b$w_buff1_used' '_Bool'
|   |       | `-ImplicitCastExpr 0x563c31c17480 <col:73> 'int' <IntegralCast>
|   |       |   `-ImplicitCastExpr 0x563c31c17468 <col:73> '_Bool' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x563c31c17418 <col:73> '_Bool' lvalue Var 0x563c31c15ec8 'b$r_buff1_thd1' '_Bool'
|   |       |-ImplicitCastExpr 0x563c31c174f8 <col:90> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x563c31c174b8 <col:90> 'int' lvalue Var 0x563c31c162a0 'b$w_buff1' 'int'
|   |       `-ImplicitCastExpr 0x563c31c17510 <col:102> 'int' <LValueToRValue>
|   |         `-DeclRefExpr 0x563c31c174d8 <col:102> 'int' lvalue Var 0x563c31c15a58 'b' 'int'
|   |-BinaryOperator 0x563c31c177c8 <line:736:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x563c31c175e0 <col:3> '_Bool' lvalue Var 0x563c31c16220 'b$w_buff0_used' '_Bool'
|   | `-ImplicitCastExpr 0x563c31c177b0 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x563c31c17780 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x563c31c176a0 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x563c31c17658 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x563c31c17640 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x563c31c17600 <col:20> '_Bool' lvalue Var 0x563c31c16220 'b$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x563c31c17688 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x563c31c17670 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x563c31c17620 <col:38> '_Bool' lvalue Var 0x563c31c15c70 'b$r_buff0_thd1' '_Bool'
|   |     |-ImplicitCastExpr 0x563c31c17738 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x563c31c176f0 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x563c31c176c0 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x563c31c17768 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x563c31c17750 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x563c31c17718 <col:66> '_Bool' lvalue Var 0x563c31c16220 'b$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x563c31c17ab0 <line:737:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x563c31c177e8 <col:3> '_Bool' lvalue Var 0x563c31c16318 'b$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x563c31c17a98 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x563c31c17a68 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x563c31c17988 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x563c31c178a8 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x563c31c17860 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x563c31c17848 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x563c31c17808 <col:20> '_Bool' lvalue Var 0x563c31c16220 'b$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x563c31c17890 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x563c31c17878 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x563c31c17828 <col:38> '_Bool' lvalue Var 0x563c31c15c70 'b$r_buff0_thd1' '_Bool'
|   |     | `-BinaryOperator 0x563c31c17968 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x563c31c17920 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x563c31c17908 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x563c31c178c8 <col:56> '_Bool' lvalue Var 0x563c31c16318 'b$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x563c31c17950 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x563c31c17938 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x563c31c178e8 <col:74> '_Bool' lvalue Var 0x563c31c15ec8 'b$r_buff1_thd1' '_Bool'
|   |     |-ImplicitCastExpr 0x563c31c17a20 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x563c31c179d8 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x563c31c179a8 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x563c31c17a50 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x563c31c17a38 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x563c31c17a00 <col:102> '_Bool' lvalue Var 0x563c31c16318 'b$w_buff1_used' '_Bool'
|   |-BinaryOperator 0x563c31c17cc8 <line:738:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x563c31c17ad0 <col:3> '_Bool' lvalue Var 0x563c31c15c70 'b$r_buff0_thd1' '_Bool'
|   | `-ImplicitCastExpr 0x563c31c17cb0 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x563c31c17c80 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x563c31c17ba0 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x563c31c17b58 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x563c31c17b40 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x563c31c17af0 <col:20> '_Bool' lvalue Var 0x563c31c16220 'b$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x563c31c17b88 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x563c31c17b70 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x563c31c17b20 <col:38> '_Bool' lvalue Var 0x563c31c15c70 'b$r_buff0_thd1' '_Bool'
|   |     |-ImplicitCastExpr 0x563c31c17c38 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x563c31c17bf0 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x563c31c17bc0 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x563c31c17c68 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x563c31c17c50 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x563c31c17c18 <col:66> '_Bool' lvalue Var 0x563c31c15c70 'b$r_buff0_thd1' '_Bool'
|   |-BinaryOperator 0x563c31c17fb0 <line:739:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x563c31c17ce8 <col:3> '_Bool' lvalue Var 0x563c31c15ec8 'b$r_buff1_thd1' '_Bool'
|   | `-ImplicitCastExpr 0x563c31c17f98 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x563c31c17f68 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x563c31c17e88 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x563c31c17da8 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x563c31c17d60 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x563c31c17d48 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x563c31c17d08 <col:20> '_Bool' lvalue Var 0x563c31c16220 'b$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x563c31c17d90 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x563c31c17d78 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x563c31c17d28 <col:38> '_Bool' lvalue Var 0x563c31c15c70 'b$r_buff0_thd1' '_Bool'
|   |     | `-BinaryOperator 0x563c31c17e68 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x563c31c17e20 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x563c31c17e08 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x563c31c17dc8 <col:56> '_Bool' lvalue Var 0x563c31c16318 'b$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x563c31c17e50 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x563c31c17e38 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x563c31c17de8 <col:74> '_Bool' lvalue Var 0x563c31c15ec8 'b$r_buff1_thd1' '_Bool'
|   |     |-ImplicitCastExpr 0x563c31c17f20 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x563c31c17ed8 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x563c31c17ea8 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x563c31c17f50 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x563c31c17f38 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x563c31c17f00 <col:102> '_Bool' lvalue Var 0x563c31c15ec8 'b$r_buff1_thd1' '_Bool'
|   |-CallExpr 0x563c31c18008 <line:740:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x563c31c17ff0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x563c31c17fd0 <col:3> 'void ()' Function 0x563c31bbbf00 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x563c31c18060 <line:741:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x563c31c18048 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x563c31c18028 <col:3> 'void ()' Function 0x563c31bbbe40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x563c31c18118 <line:742:3, col:41> 'int' '='
|   | |-DeclRefExpr 0x563c31c18080 <col:3> 'int' lvalue Var 0x563c31c15278 '__unbuffered_cnt' 'int'
|   | `-BinaryOperator 0x563c31c180f8 <col:22, col:41> 'int' '+'
|   |   |-ImplicitCastExpr 0x563c31c180e0 <col:22> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x563c31c180a0 <col:22> 'int' lvalue Var 0x563c31c15278 '__unbuffered_cnt' 'int'
|   |   `-IntegerLiteral 0x563c31c180c0 <col:41> 'int' 1
|   |-CallExpr 0x563c31c18170 <line:743:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x563c31c18158 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x563c31c18138 <col:3> 'void ()' Function 0x563c31bbbf00 '__VERIFIER_atomic_end' 'void ()'
|   `-ReturnStmt 0x563c31c18218 <line:744:3, col:36>
|     `-CallExpr 0x563c31c181f8 <col:10, col:36> 'void *'
|       `-ImplicitCastExpr 0x563c31c181e0 <col:10> 'void *(*)(void)' <FunctionToPointerDecay>
|         `-DeclRefExpr 0x563c31c18190 <col:10> 'void *(void)' Function 0x563c31bbb958 '__VERIFIER_nondet_pointer' 'void *(void)'
|-FunctionDecl 0x563c31c183c0 prev 0x563c31c14c48 <line:746:1, line:765:1> line:746:8 used P1 'void *(void *)'
| |-ParmVarDecl 0x563c31c18328 <col:11, col:17> col:17 arg 'void *'
| `-CompoundStmt 0x563c31c19600 <line:747:1, line:765:1>
|   |-CallExpr 0x563c31c184a0 <line:748:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x563c31c18488 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x563c31c18468 <col:3> 'void ()' Function 0x563c31bbbe40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x563c31c18500 <line:749:3, col:7> 'int' '='
|   | |-DeclRefExpr 0x563c31c184c0 <col:3> 'int' lvalue Var 0x563c31c16508 'x' 'int'
|   | `-IntegerLiteral 0x563c31c184e0 <col:7> 'int' 1
|   |-CallExpr 0x563c31c18558 <line:750:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x563c31c18540 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x563c31c18520 <col:3> 'void ()' Function 0x563c31bbbf00 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x563c31c185b0 <line:751:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x563c31c18598 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x563c31c18578 <col:3> 'void ()' Function 0x563c31bbbe40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x563c31c18628 <line:752:3, col:25> 'int' '='
|   | |-DeclRefExpr 0x563c31c185d0 <col:3> 'int' lvalue Var 0x563c31c154b8 '__unbuffered_p1_EAX' 'int'
|   | `-ImplicitCastExpr 0x563c31c18610 <col:25> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x563c31c185f0 <col:25> 'int' lvalue Var 0x563c31c16628 'y' 'int'
|   |-CallExpr 0x563c31c18680 <line:753:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x563c31c18668 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x563c31c18648 <col:3> 'void ()' Function 0x563c31bbbf00 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x563c31c186d8 <line:754:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x563c31c186c0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x563c31c186a0 <col:3> 'void ()' Function 0x563c31bbbe40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x563c31c189c0 <line:755:3, col:103> 'int' '='
|   | |-DeclRefExpr 0x563c31c186f8 <col:3> 'int' lvalue Var 0x563c31c15a58 'b' 'int'
|   | `-ConditionalOperator 0x563c31c18990 <col:7, col:103> 'int'
|   |   |-BinaryOperator 0x563c31c187b8 <col:7, col:25> 'int' '&&'
|   |   | |-ImplicitCastExpr 0x563c31c18770 <col:7> 'int' <IntegralCast>
|   |   | | `-ImplicitCastExpr 0x563c31c18758 <col:7> '_Bool' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x563c31c18718 <col:7> '_Bool' lvalue Var 0x563c31c16220 'b$w_buff0_used' '_Bool'
|   |   | `-ImplicitCastExpr 0x563c31c187a0 <col:25> 'int' <IntegralCast>
|   |   |   `-ImplicitCastExpr 0x563c31c18788 <col:25> '_Bool' <LValueToRValue>
|   |   |     `-DeclRefExpr 0x563c31c18738 <col:25> '_Bool' lvalue Var 0x563c31c15ce8 'b$r_buff0_thd2' '_Bool'
|   |   |-ImplicitCastExpr 0x563c31c18978 <col:42> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x563c31c187d8 <col:42> 'int' lvalue Var 0x563c31c161a8 'b$w_buff0' 'int'
|   |   `-ParenExpr 0x563c31c18958 <col:54, col:103> 'int'
|   |     `-ConditionalOperator 0x563c31c18928 <col:55, col:102> 'int'
|   |       |-BinaryOperator 0x563c31c18898 <col:55, col:73> 'int' '&&'
|   |       | |-ImplicitCastExpr 0x563c31c18850 <col:55> 'int' <IntegralCast>
|   |       | | `-ImplicitCastExpr 0x563c31c18838 <col:55> '_Bool' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x563c31c187f8 <col:55> '_Bool' lvalue Var 0x563c31c16318 'b$w_buff1_used' '_Bool'
|   |       | `-ImplicitCastExpr 0x563c31c18880 <col:73> 'int' <IntegralCast>
|   |       |   `-ImplicitCastExpr 0x563c31c18868 <col:73> '_Bool' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x563c31c18818 <col:73> '_Bool' lvalue Var 0x563c31c15f40 'b$r_buff1_thd2' '_Bool'
|   |       |-ImplicitCastExpr 0x563c31c188f8 <col:90> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x563c31c188b8 <col:90> 'int' lvalue Var 0x563c31c162a0 'b$w_buff1' 'int'
|   |       `-ImplicitCastExpr 0x563c31c18910 <col:102> 'int' <LValueToRValue>
|   |         `-DeclRefExpr 0x563c31c188d8 <col:102> 'int' lvalue Var 0x563c31c15a58 'b' 'int'
|   |-BinaryOperator 0x563c31c18be0 <line:756:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x563c31c189e0 <col:3> '_Bool' lvalue Var 0x563c31c16220 'b$w_buff0_used' '_Bool'
|   | `-ImplicitCastExpr 0x563c31c18bc8 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x563c31c18b98 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x563c31c18aa0 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x563c31c18a58 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x563c31c18a40 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x563c31c18a00 <col:20> '_Bool' lvalue Var 0x563c31c16220 'b$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x563c31c18a88 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x563c31c18a70 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x563c31c18a20 <col:38> '_Bool' lvalue Var 0x563c31c15ce8 'b$r_buff0_thd2' '_Bool'
|   |     |-ImplicitCastExpr 0x563c31c18b50 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x563c31c18af0 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x563c31c18ac0 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x563c31c18b80 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x563c31c18b68 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x563c31c18b30 <col:66> '_Bool' lvalue Var 0x563c31c16220 'b$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x563c31c18ec8 <line:757:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x563c31c18c00 <col:3> '_Bool' lvalue Var 0x563c31c16318 'b$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x563c31c18eb0 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x563c31c18e80 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x563c31c18da0 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x563c31c18cc0 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x563c31c18c78 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x563c31c18c60 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x563c31c18c20 <col:20> '_Bool' lvalue Var 0x563c31c16220 'b$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x563c31c18ca8 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x563c31c18c90 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x563c31c18c40 <col:38> '_Bool' lvalue Var 0x563c31c15ce8 'b$r_buff0_thd2' '_Bool'
|   |     | `-BinaryOperator 0x563c31c18d80 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x563c31c18d38 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x563c31c18d20 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x563c31c18ce0 <col:56> '_Bool' lvalue Var 0x563c31c16318 'b$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x563c31c18d68 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x563c31c18d50 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x563c31c18d00 <col:74> '_Bool' lvalue Var 0x563c31c15f40 'b$r_buff1_thd2' '_Bool'
|   |     |-ImplicitCastExpr 0x563c31c18e38 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x563c31c18df0 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x563c31c18dc0 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x563c31c18e68 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x563c31c18e50 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x563c31c18e18 <col:102> '_Bool' lvalue Var 0x563c31c16318 'b$w_buff1_used' '_Bool'
|   |-BinaryOperator 0x563c31c190d0 <line:758:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x563c31c18ee8 <col:3> '_Bool' lvalue Var 0x563c31c15ce8 'b$r_buff0_thd2' '_Bool'
|   | `-ImplicitCastExpr 0x563c31c190b8 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x563c31c19088 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x563c31c18fa8 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x563c31c18f60 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x563c31c18f48 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x563c31c18f08 <col:20> '_Bool' lvalue Var 0x563c31c16220 'b$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x563c31c18f90 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x563c31c18f78 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x563c31c18f28 <col:38> '_Bool' lvalue Var 0x563c31c15ce8 'b$r_buff0_thd2' '_Bool'
|   |     |-ImplicitCastExpr 0x563c31c19040 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x563c31c18ff8 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x563c31c18fc8 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x563c31c19070 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x563c31c19058 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x563c31c19020 <col:66> '_Bool' lvalue Var 0x563c31c15ce8 'b$r_buff0_thd2' '_Bool'
|   |-BinaryOperator 0x563c31c193b8 <line:759:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x563c31c190f0 <col:3> '_Bool' lvalue Var 0x563c31c15f40 'b$r_buff1_thd2' '_Bool'
|   | `-ImplicitCastExpr 0x563c31c193a0 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x563c31c19370 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x563c31c19290 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x563c31c191b0 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x563c31c19168 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x563c31c19150 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x563c31c19110 <col:20> '_Bool' lvalue Var 0x563c31c16220 'b$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x563c31c19198 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x563c31c19180 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x563c31c19130 <col:38> '_Bool' lvalue Var 0x563c31c15ce8 'b$r_buff0_thd2' '_Bool'
|   |     | `-BinaryOperator 0x563c31c19270 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x563c31c19228 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x563c31c19210 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x563c31c191d0 <col:56> '_Bool' lvalue Var 0x563c31c16318 'b$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x563c31c19258 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x563c31c19240 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x563c31c191f0 <col:74> '_Bool' lvalue Var 0x563c31c15f40 'b$r_buff1_thd2' '_Bool'
|   |     |-ImplicitCastExpr 0x563c31c19328 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x563c31c192e0 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x563c31c192b0 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x563c31c19358 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x563c31c19340 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x563c31c19308 <col:102> '_Bool' lvalue Var 0x563c31c15f40 'b$r_buff1_thd2' '_Bool'
|   |-CallExpr 0x563c31c19410 <line:760:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x563c31c193f8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x563c31c193d8 <col:3> 'void ()' Function 0x563c31bbbf00 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x563c31c19468 <line:761:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x563c31c19450 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x563c31c19430 <col:3> 'void ()' Function 0x563c31bbbe40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x563c31c19520 <line:762:3, col:41> 'int' '='
|   | |-DeclRefExpr 0x563c31c19488 <col:3> 'int' lvalue Var 0x563c31c15278 '__unbuffered_cnt' 'int'
|   | `-BinaryOperator 0x563c31c19500 <col:22, col:41> 'int' '+'
|   |   |-ImplicitCastExpr 0x563c31c194e8 <col:22> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x563c31c194a8 <col:22> 'int' lvalue Var 0x563c31c15278 '__unbuffered_cnt' 'int'
|   |   `-IntegerLiteral 0x563c31c194c8 <col:41> 'int' 1
|   |-CallExpr 0x563c31c19578 <line:763:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x563c31c19560 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x563c31c19540 <col:3> 'void ()' Function 0x563c31bbbf00 '__VERIFIER_atomic_end' 'void ()'
|   `-ReturnStmt 0x563c31c195f0 <line:764:3, col:36>
|     `-CallExpr 0x563c31c195d0 <col:10, col:36> 'void *'
|       `-ImplicitCastExpr 0x563c31c195b8 <col:10> 'void *(*)(void)' <FunctionToPointerDecay>
|         `-DeclRefExpr 0x563c31c19598 <col:10> 'void *(void)' Function 0x563c31bbb958 '__VERIFIER_nondet_pointer' 'void *(void)'
|-FunctionDecl 0x563c31c19748 prev 0x563c31c14da0 <line:766:1, line:785:1> line:766:8 used P2 'void *(void *)'
| |-ParmVarDecl 0x563c31c196b0 <col:11, col:17> col:17 arg 'void *'
| `-CompoundStmt 0x563c31c1a988 <line:767:1, line:785:1>
|   |-CallExpr 0x563c31c19828 <line:768:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x563c31c19810 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x563c31c197f0 <col:3> 'void ()' Function 0x563c31bbbe40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x563c31c19888 <line:769:3, col:7> 'int' '='
|   | |-DeclRefExpr 0x563c31c19848 <col:3> 'int' lvalue Var 0x563c31c16628 'y' 'int'
|   | `-IntegerLiteral 0x563c31c19868 <col:7> 'int' 1
|   |-CallExpr 0x563c31c198e0 <line:770:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x563c31c198c8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x563c31c198a8 <col:3> 'void ()' Function 0x563c31bbbf00 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x563c31c19938 <line:771:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x563c31c19920 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x563c31c19900 <col:3> 'void ()' Function 0x563c31bbbe40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x563c31c199b0 <line:772:3, col:25> 'int' '='
|   | |-DeclRefExpr 0x563c31c19958 <col:3> 'int' lvalue Var 0x563c31c155d8 '__unbuffered_p2_EAX' 'int'
|   | `-ImplicitCastExpr 0x563c31c19998 <col:25> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x563c31c19978 <col:25> 'int' lvalue Var 0x563c31c16748 'z' 'int'
|   |-CallExpr 0x563c31c19a08 <line:773:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x563c31c199f0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x563c31c199d0 <col:3> 'void ()' Function 0x563c31bbbf00 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x563c31c19a60 <line:774:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x563c31c19a48 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x563c31c19a28 <col:3> 'void ()' Function 0x563c31bbbe40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x563c31c19d60 <line:775:3, col:103> 'int' '='
|   | |-DeclRefExpr 0x563c31c19a80 <col:3> 'int' lvalue Var 0x563c31c15a58 'b' 'int'
|   | `-ConditionalOperator 0x563c31c19d30 <col:7, col:103> 'int'
|   |   |-BinaryOperator 0x563c31c19b58 <col:7, col:25> 'int' '&&'
|   |   | |-ImplicitCastExpr 0x563c31c19af8 <col:7> 'int' <IntegralCast>
|   |   | | `-ImplicitCastExpr 0x563c31c19ae0 <col:7> '_Bool' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x563c31c19aa0 <col:7> '_Bool' lvalue Var 0x563c31c16220 'b$w_buff0_used' '_Bool'
|   |   | `-ImplicitCastExpr 0x563c31c19b40 <col:25> 'int' <IntegralCast>
|   |   |   `-ImplicitCastExpr 0x563c31c19b10 <col:25> '_Bool' <LValueToRValue>
|   |   |     `-DeclRefExpr 0x563c31c19ac0 <col:25> '_Bool' lvalue Var 0x563c31c15d60 'b$r_buff0_thd3' '_Bool'
|   |   |-ImplicitCastExpr 0x563c31c19d18 <col:42> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x563c31c19b78 <col:42> 'int' lvalue Var 0x563c31c161a8 'b$w_buff0' 'int'
|   |   `-ParenExpr 0x563c31c19cf8 <col:54, col:103> 'int'
|   |     `-ConditionalOperator 0x563c31c19cc8 <col:55, col:102> 'int'
|   |       |-BinaryOperator 0x563c31c19c38 <col:55, col:73> 'int' '&&'
|   |       | |-ImplicitCastExpr 0x563c31c19bf0 <col:55> 'int' <IntegralCast>
|   |       | | `-ImplicitCastExpr 0x563c31c19bd8 <col:55> '_Bool' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x563c31c19b98 <col:55> '_Bool' lvalue Var 0x563c31c16318 'b$w_buff1_used' '_Bool'
|   |       | `-ImplicitCastExpr 0x563c31c19c20 <col:73> 'int' <IntegralCast>
|   |       |   `-ImplicitCastExpr 0x563c31c19c08 <col:73> '_Bool' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x563c31c19bb8 <col:73> '_Bool' lvalue Var 0x563c31c15fb8 'b$r_buff1_thd3' '_Bool'
|   |       |-ImplicitCastExpr 0x563c31c19c98 <col:90> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x563c31c19c58 <col:90> 'int' lvalue Var 0x563c31c162a0 'b$w_buff1' 'int'
|   |       `-ImplicitCastExpr 0x563c31c19cb0 <col:102> 'int' <LValueToRValue>
|   |         `-DeclRefExpr 0x563c31c19c78 <col:102> 'int' lvalue Var 0x563c31c15a58 'b' 'int'
|   |-BinaryOperator 0x563c31c19f68 <line:776:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x563c31c19d80 <col:3> '_Bool' lvalue Var 0x563c31c16220 'b$w_buff0_used' '_Bool'
|   | `-ImplicitCastExpr 0x563c31c19f50 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x563c31c19f20 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x563c31c19e40 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x563c31c19df8 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x563c31c19de0 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x563c31c19da0 <col:20> '_Bool' lvalue Var 0x563c31c16220 'b$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x563c31c19e28 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x563c31c19e10 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x563c31c19dc0 <col:38> '_Bool' lvalue Var 0x563c31c15d60 'b$r_buff0_thd3' '_Bool'
|   |     |-ImplicitCastExpr 0x563c31c19ed8 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x563c31c19e90 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x563c31c19e60 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x563c31c19f08 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x563c31c19ef0 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x563c31c19eb8 <col:66> '_Bool' lvalue Var 0x563c31c16220 'b$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x563c31c1a250 <line:777:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x563c31c19f88 <col:3> '_Bool' lvalue Var 0x563c31c16318 'b$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x563c31c1a238 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x563c31c1a208 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x563c31c1a128 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x563c31c1a048 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x563c31c1a000 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x563c31c19fe8 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x563c31c19fa8 <col:20> '_Bool' lvalue Var 0x563c31c16220 'b$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x563c31c1a030 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x563c31c1a018 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x563c31c19fc8 <col:38> '_Bool' lvalue Var 0x563c31c15d60 'b$r_buff0_thd3' '_Bool'
|   |     | `-BinaryOperator 0x563c31c1a108 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x563c31c1a0c0 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x563c31c1a0a8 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x563c31c1a068 <col:56> '_Bool' lvalue Var 0x563c31c16318 'b$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x563c31c1a0f0 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x563c31c1a0d8 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x563c31c1a088 <col:74> '_Bool' lvalue Var 0x563c31c15fb8 'b$r_buff1_thd3' '_Bool'
|   |     |-ImplicitCastExpr 0x563c31c1a1c0 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x563c31c1a178 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x563c31c1a148 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x563c31c1a1f0 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x563c31c1a1d8 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x563c31c1a1a0 <col:102> '_Bool' lvalue Var 0x563c31c16318 'b$w_buff1_used' '_Bool'
|   |-BinaryOperator 0x563c31c1a458 <line:778:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x563c31c1a270 <col:3> '_Bool' lvalue Var 0x563c31c15d60 'b$r_buff0_thd3' '_Bool'
|   | `-ImplicitCastExpr 0x563c31c1a440 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x563c31c1a410 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x563c31c1a330 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x563c31c1a2e8 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x563c31c1a2d0 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x563c31c1a290 <col:20> '_Bool' lvalue Var 0x563c31c16220 'b$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x563c31c1a318 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x563c31c1a300 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x563c31c1a2b0 <col:38> '_Bool' lvalue Var 0x563c31c15d60 'b$r_buff0_thd3' '_Bool'
|   |     |-ImplicitCastExpr 0x563c31c1a3c8 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x563c31c1a380 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x563c31c1a350 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x563c31c1a3f8 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x563c31c1a3e0 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x563c31c1a3a8 <col:66> '_Bool' lvalue Var 0x563c31c15d60 'b$r_buff0_thd3' '_Bool'
|   |-BinaryOperator 0x563c31c1a740 <line:779:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x563c31c1a478 <col:3> '_Bool' lvalue Var 0x563c31c15fb8 'b$r_buff1_thd3' '_Bool'
|   | `-ImplicitCastExpr 0x563c31c1a728 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x563c31c1a6f8 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x563c31c1a618 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x563c31c1a538 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x563c31c1a4f0 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x563c31c1a4d8 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x563c31c1a498 <col:20> '_Bool' lvalue Var 0x563c31c16220 'b$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x563c31c1a520 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x563c31c1a508 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x563c31c1a4b8 <col:38> '_Bool' lvalue Var 0x563c31c15d60 'b$r_buff0_thd3' '_Bool'
|   |     | `-BinaryOperator 0x563c31c1a5f8 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x563c31c1a5b0 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x563c31c1a598 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x563c31c1a558 <col:56> '_Bool' lvalue Var 0x563c31c16318 'b$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x563c31c1a5e0 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x563c31c1a5c8 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x563c31c1a578 <col:74> '_Bool' lvalue Var 0x563c31c15fb8 'b$r_buff1_thd3' '_Bool'
|   |     |-ImplicitCastExpr 0x563c31c1a6b0 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x563c31c1a668 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x563c31c1a638 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x563c31c1a6e0 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x563c31c1a6c8 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x563c31c1a690 <col:102> '_Bool' lvalue Var 0x563c31c15fb8 'b$r_buff1_thd3' '_Bool'
|   |-CallExpr 0x563c31c1a798 <line:780:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x563c31c1a780 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x563c31c1a760 <col:3> 'void ()' Function 0x563c31bbbf00 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x563c31c1a7f0 <line:781:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x563c31c1a7d8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x563c31c1a7b8 <col:3> 'void ()' Function 0x563c31bbbe40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x563c31c1a8a8 <line:782:3, col:41> 'int' '='
|   | |-DeclRefExpr 0x563c31c1a810 <col:3> 'int' lvalue Var 0x563c31c15278 '__unbuffered_cnt' 'int'
|   | `-BinaryOperator 0x563c31c1a888 <col:22, col:41> 'int' '+'
|   |   |-ImplicitCastExpr 0x563c31c1a870 <col:22> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x563c31c1a830 <col:22> 'int' lvalue Var 0x563c31c15278 '__unbuffered_cnt' 'int'
|   |   `-IntegerLiteral 0x563c31c1a850 <col:41> 'int' 1
|   |-CallExpr 0x563c31c1a900 <line:783:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x563c31c1a8e8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x563c31c1a8c8 <col:3> 'void ()' Function 0x563c31bbbf00 '__VERIFIER_atomic_end' 'void ()'
|   `-ReturnStmt 0x563c31c1a978 <line:784:3, col:36>
|     `-CallExpr 0x563c31c1a958 <col:10, col:36> 'void *'
|       `-ImplicitCastExpr 0x563c31c1a940 <col:10> 'void *(*)(void)' <FunctionToPointerDecay>
|         `-DeclRefExpr 0x563c31c1a920 <col:10> 'void *(void)' Function 0x563c31bbb958 '__VERIFIER_nondet_pointer' 'void *(void)'
|-FunctionDecl 0x563c31c1ab50 prev 0x563c31c14ef8 <line:786:1, line:824:1> line:786:8 used P3 'void *(void *)'
| |-ParmVarDecl 0x563c31c1aa38 <col:11, col:17> col:17 arg 'void *'
| `-CompoundStmt 0x563c31c1e950 <line:787:1, line:824:1>
|   |-CallExpr 0x563c31c1ac30 <line:788:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x563c31c1ac18 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x563c31c1abf8 <col:3> 'void ()' Function 0x563c31bbbe40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x563c31c1ac90 <line:789:3, col:7> 'int' '='
|   | |-DeclRefExpr 0x563c31c1ac50 <col:3> 'int' lvalue Var 0x563c31c16748 'z' 'int'
|   | `-IntegerLiteral 0x563c31c1ac70 <col:7> 'int' 1
|   |-CallExpr 0x563c31c1ace8 <line:790:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x563c31c1acd0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x563c31c1acb0 <col:3> 'void ()' Function 0x563c31bbbf00 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x563c31c1ad40 <line:791:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x563c31c1ad28 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x563c31c1ad08 <col:3> 'void ()' Function 0x563c31bbbe40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x563c31c1ada0 <line:792:3, col:7> 'int' '='
|   | |-DeclRefExpr 0x563c31c1ad60 <col:3> 'int' lvalue Var 0x563c31c15938 'a' 'int'
|   | `-IntegerLiteral 0x563c31c1ad80 <col:7> 'int' 1
|   |-CallExpr 0x563c31c1adf8 <line:793:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x563c31c1ade0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x563c31c1adc0 <col:3> 'void ()' Function 0x563c31bbbf00 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x563c31c1ae50 <line:794:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x563c31c1ae38 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x563c31c1ae18 <col:3> 'void ()' Function 0x563c31bbbe40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x563c31c1aec8 <line:795:3, col:25> 'int' '='
|   | |-DeclRefExpr 0x563c31c1ae70 <col:3> 'int' lvalue Var 0x563c31c156f8 '__unbuffered_p3_EAX' 'int'
|   | `-ImplicitCastExpr 0x563c31c1aeb0 <col:25> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x563c31c1ae90 <col:25> 'int' lvalue Var 0x563c31c15938 'a' 'int'
|   |-CallExpr 0x563c31c1af20 <line:796:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x563c31c1af08 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x563c31c1aee8 <col:3> 'void ()' Function 0x563c31bbbf00 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x563c31c1af78 <line:797:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x563c31c1af60 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x563c31c1af40 <col:3> 'void ()' Function 0x563c31bbbe40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x563c31c1b028 <line:798:3, col:45> '_Bool' '='
|   | |-DeclRefExpr 0x563c31c1af98 <col:3> '_Bool' lvalue Var 0x563c31c167e0 'weak$$choice0' '_Bool'
|   | `-ImplicitCastExpr 0x563c31c1b010 <col:19, col:45> '_Bool' <PointerToBoolean>
|   |   `-CallExpr 0x563c31c1aff0 <col:19, col:45> 'void *'
|   |     `-ImplicitCastExpr 0x563c31c1afd8 <col:19> 'void *(*)(void)' <FunctionToPointerDecay>
|   |       `-DeclRefExpr 0x563c31c1afb8 <col:19> 'void *(void)' Function 0x563c31bbb958 '__VERIFIER_nondet_pointer' 'void *(void)'
|   |-BinaryOperator 0x563c31c1b0d8 <line:799:3, col:45> '_Bool' '='
|   | |-DeclRefExpr 0x563c31c1b048 <col:3> '_Bool' lvalue Var 0x563c31c16858 'weak$$choice2' '_Bool'
|   | `-ImplicitCastExpr 0x563c31c1b0c0 <col:19, col:45> '_Bool' <PointerToBoolean>
|   |   `-CallExpr 0x563c31c1b0a0 <col:19, col:45> 'void *'
|   |     `-ImplicitCastExpr 0x563c31c1b088 <col:19> 'void *(*)(void)' <FunctionToPointerDecay>
|   |       `-DeclRefExpr 0x563c31c1b068 <col:19> 'void *(void)' Function 0x563c31bbb958 '__VERIFIER_nondet_pointer' 'void *(void)'
|   |-BinaryOperator 0x563c31c1b150 <line:800:3, col:21> '_Bool' '='
|   | |-DeclRefExpr 0x563c31c1b0f8 <col:3> '_Bool' lvalue Var 0x563c31c15b00 'b$flush_delayed' '_Bool'
|   | `-ImplicitCastExpr 0x563c31c1b138 <col:21> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x563c31c1b118 <col:21> '_Bool' lvalue Var 0x563c31c16858 'weak$$choice2' '_Bool'
|   |-BinaryOperator 0x563c31c1b1c8 <line:801:3, col:15> 'int' '='
|   | |-DeclRefExpr 0x563c31c1b170 <col:3> 'int' lvalue Var 0x563c31c15b80 'b$mem_tmp' 'int'
|   | `-ImplicitCastExpr 0x563c31c1b1b0 <col:15> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x563c31c1b190 <col:15> 'int' lvalue Var 0x563c31c15a58 'b' 'int'
|   |-BinaryOperator 0x563c31c1b600 <line:802:3, col:162> 'int' '='
|   | |-DeclRefExpr 0x563c31c1b1e8 <col:3> 'int' lvalue Var 0x563c31c15a58 'b' 'int'
|   | `-ConditionalOperator 0x563c31c1b5d0 <col:7, col:162> 'int'
|   |   |-BinaryOperator 0x563c31c1b3f8 <col:7, col:84> 'int' '||'
|   |   | |-BinaryOperator 0x563c31c1b318 <col:7, col:46> 'int' '||'
|   |   | | |-UnaryOperator 0x563c31c1b240 <col:7, col:8> 'int' prefix '!' cannot overflow
|   |   | | | `-ImplicitCastExpr 0x563c31c1b228 <col:8> '_Bool' <LValueToRValue>
|   |   | | |   `-DeclRefExpr 0x563c31c1b208 <col:8> '_Bool' lvalue Var 0x563c31c16220 'b$w_buff0_used' '_Bool'
|   |   | | `-BinaryOperator 0x563c31c1b2f8 <col:26, col:46> 'int' '&&'
|   |   | |   |-UnaryOperator 0x563c31c1b290 <col:26, col:27> 'int' prefix '!' cannot overflow
|   |   | |   | `-ImplicitCastExpr 0x563c31c1b278 <col:27> '_Bool' <LValueToRValue>
|   |   | |   |   `-DeclRefExpr 0x563c31c1b258 <col:27> '_Bool' lvalue Var 0x563c31c15dd8 'b$r_buff0_thd4' '_Bool'
|   |   | |   `-UnaryOperator 0x563c31c1b2e0 <col:45, col:46> 'int' prefix '!' cannot overflow
|   |   | |     `-ImplicitCastExpr 0x563c31c1b2c8 <col:46> '_Bool' <LValueToRValue>
|   |   | |       `-DeclRefExpr 0x563c31c1b2a8 <col:46> '_Bool' lvalue Var 0x563c31c16318 'b$w_buff1_used' '_Bool'
|   |   | `-BinaryOperator 0x563c31c1b3d8 <col:64, col:84> 'int' '&&'
|   |   |   |-UnaryOperator 0x563c31c1b370 <col:64, col:65> 'int' prefix '!' cannot overflow
|   |   |   | `-ImplicitCastExpr 0x563c31c1b358 <col:65> '_Bool' <LValueToRValue>
|   |   |   |   `-DeclRefExpr 0x563c31c1b338 <col:65> '_Bool' lvalue Var 0x563c31c15dd8 'b$r_buff0_thd4' '_Bool'
|   |   |   `-UnaryOperator 0x563c31c1b3c0 <col:83, col:84> 'int' prefix '!' cannot overflow
|   |   |     `-ImplicitCastExpr 0x563c31c1b3a8 <col:84> '_Bool' <LValueToRValue>
|   |   |       `-DeclRefExpr 0x563c31c1b388 <col:84> '_Bool' lvalue Var 0x563c31c16030 'b$r_buff1_thd4' '_Bool'
|   |   |-ImplicitCastExpr 0x563c31c1b5b8 <col:101> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x563c31c1b418 <col:101> 'int' lvalue Var 0x563c31c15a58 'b' 'int'
|   |   `-ParenExpr 0x563c31c1b598 <col:105, col:162> 'int'
|   |     `-ConditionalOperator 0x563c31c1b568 <col:106, col:153> 'int'
|   |       |-BinaryOperator 0x563c31c1b4d8 <col:106, col:124> 'int' '&&'
|   |       | |-ImplicitCastExpr 0x563c31c1b490 <col:106> 'int' <IntegralCast>
|   |       | | `-ImplicitCastExpr 0x563c31c1b478 <col:106> '_Bool' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x563c31c1b438 <col:106> '_Bool' lvalue Var 0x563c31c16220 'b$w_buff0_used' '_Bool'
|   |       | `-ImplicitCastExpr 0x563c31c1b4c0 <col:124> 'int' <IntegralCast>
|   |       |   `-ImplicitCastExpr 0x563c31c1b4a8 <col:124> '_Bool' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x563c31c1b458 <col:124> '_Bool' lvalue Var 0x563c31c15dd8 'b$r_buff0_thd4' '_Bool'
|   |       |-ImplicitCastExpr 0x563c31c1b538 <col:141> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x563c31c1b4f8 <col:141> 'int' lvalue Var 0x563c31c161a8 'b$w_buff0' 'int'
|   |       `-ImplicitCastExpr 0x563c31c1b550 <col:153> 'int' <LValueToRValue>
|   |         `-DeclRefExpr 0x563c31c1b518 <col:153> 'int' lvalue Var 0x563c31c162a0 'b$w_buff1' 'int'
|   |-BinaryOperator 0x563c31c1bb10 <line:803:3, col:208> 'int' '='
|   | |-DeclRefExpr 0x563c31c1b620 <col:3> 'int' lvalue Var 0x563c31c161a8 'b$w_buff0' 'int'
|   | `-ConditionalOperator 0x563c31c1bae0 <col:15, col:208> 'int'
|   |   |-ImplicitCastExpr 0x563c31c1bab0 <col:15> 'int' <IntegralCast>
|   |   | `-ImplicitCastExpr 0x563c31c1ba98 <col:15> '_Bool' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x563c31c1b640 <col:15> '_Bool' lvalue Var 0x563c31c16858 'weak$$choice2' '_Bool'
|   |   |-ImplicitCastExpr 0x563c31c1bac8 <col:31> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x563c31c1b660 <col:31> 'int' lvalue Var 0x563c31c161a8 'b$w_buff0' 'int'
|   |   `-ParenExpr 0x563c31c1ba78 <col:43, col:208> 'int'
|   |     `-ConditionalOperator 0x563c31c1ba48 <col:44, col:207> 'int'
|   |       |-BinaryOperator 0x563c31c1b870 <col:44, col:121> 'int' '||'
|   |       | |-BinaryOperator 0x563c31c1b790 <col:44, col:83> 'int' '||'
|   |       | | |-UnaryOperator 0x563c31c1b6b8 <col:44, col:45> 'int' prefix '!' cannot overflow
|   |       | | | `-ImplicitCastExpr 0x563c31c1b6a0 <col:45> '_Bool' <LValueToRValue>
|   |       | | |   `-DeclRefExpr 0x563c31c1b680 <col:45> '_Bool' lvalue Var 0x563c31c16220 'b$w_buff0_used' '_Bool'
|   |       | | `-BinaryOperator 0x563c31c1b770 <col:63, col:83> 'int' '&&'
|   |       | |   |-UnaryOperator 0x563c31c1b708 <col:63, col:64> 'int' prefix '!' cannot overflow
|   |       | |   | `-ImplicitCastExpr 0x563c31c1b6f0 <col:64> '_Bool' <LValueToRValue>
|   |       | |   |   `-DeclRefExpr 0x563c31c1b6d0 <col:64> '_Bool' lvalue Var 0x563c31c15dd8 'b$r_buff0_thd4' '_Bool'
|   |       | |   `-UnaryOperator 0x563c31c1b758 <col:82, col:83> 'int' prefix '!' cannot overflow
|   |       | |     `-ImplicitCastExpr 0x563c31c1b740 <col:83> '_Bool' <LValueToRValue>
|   |       | |       `-DeclRefExpr 0x563c31c1b720 <col:83> '_Bool' lvalue Var 0x563c31c16318 'b$w_buff1_used' '_Bool'
|   |       | `-BinaryOperator 0x563c31c1b850 <col:101, col:121> 'int' '&&'
|   |       |   |-UnaryOperator 0x563c31c1b7e8 <col:101, col:102> 'int' prefix '!' cannot overflow
|   |       |   | `-ImplicitCastExpr 0x563c31c1b7d0 <col:102> '_Bool' <LValueToRValue>
|   |       |   |   `-DeclRefExpr 0x563c31c1b7b0 <col:102> '_Bool' lvalue Var 0x563c31c15dd8 'b$r_buff0_thd4' '_Bool'
|   |       |   `-UnaryOperator 0x563c31c1b838 <col:120, col:121> 'int' prefix '!' cannot overflow
|   |       |     `-ImplicitCastExpr 0x563c31c1b820 <col:121> '_Bool' <LValueToRValue>
|   |       |       `-DeclRefExpr 0x563c31c1b800 <col:121> '_Bool' lvalue Var 0x563c31c16030 'b$r_buff1_thd4' '_Bool'
|   |       |-ImplicitCastExpr 0x563c31c1ba30 <col:138> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x563c31c1b890 <col:138> 'int' lvalue Var 0x563c31c161a8 'b$w_buff0' 'int'
|   |       `-ParenExpr 0x563c31c1ba10 <col:150, col:207> 'int'
|   |         `-ConditionalOperator 0x563c31c1b9e0 <col:151, col:198> 'int'
|   |           |-BinaryOperator 0x563c31c1b950 <col:151, col:169> 'int' '&&'
|   |           | |-ImplicitCastExpr 0x563c31c1b908 <col:151> 'int' <IntegralCast>
|   |           | | `-ImplicitCastExpr 0x563c31c1b8f0 <col:151> '_Bool' <LValueToRValue>
|   |           | |   `-DeclRefExpr 0x563c31c1b8b0 <col:151> '_Bool' lvalue Var 0x563c31c16220 'b$w_buff0_used' '_Bool'
|   |           | `-ImplicitCastExpr 0x563c31c1b938 <col:169> 'int' <IntegralCast>
|   |           |   `-ImplicitCastExpr 0x563c31c1b920 <col:169> '_Bool' <LValueToRValue>
|   |           |     `-DeclRefExpr 0x563c31c1b8d0 <col:169> '_Bool' lvalue Var 0x563c31c15dd8 'b$r_buff0_thd4' '_Bool'
|   |           |-ImplicitCastExpr 0x563c31c1b9b0 <col:186> 'int' <LValueToRValue>
|   |           | `-DeclRefExpr 0x563c31c1b970 <col:186> 'int' lvalue Var 0x563c31c161a8 'b$w_buff0' 'int'
|   |           `-ImplicitCastExpr 0x563c31c1b9c8 <col:198> 'int' <LValueToRValue>
|   |             `-DeclRefExpr 0x563c31c1b990 <col:198> 'int' lvalue Var 0x563c31c161a8 'b$w_buff0' 'int'
|   |-BinaryOperator 0x563c31c1c030 <line:804:3, col:208> 'int' '='
|   | |-DeclRefExpr 0x563c31c1bb30 <col:3> 'int' lvalue Var 0x563c31c162a0 'b$w_buff1' 'int'
|   | `-ConditionalOperator 0x563c31c1c000 <col:15, col:208> 'int'
|   |   |-ImplicitCastExpr 0x563c31c1bfd0 <col:15> 'int' <IntegralCast>
|   |   | `-ImplicitCastExpr 0x563c31c1bfb8 <col:15> '_Bool' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x563c31c1bb60 <col:15> '_Bool' lvalue Var 0x563c31c16858 'weak$$choice2' '_Bool'
|   |   |-ImplicitCastExpr 0x563c31c1bfe8 <col:31> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x563c31c1bb80 <col:31> 'int' lvalue Var 0x563c31c162a0 'b$w_buff1' 'int'
|   |   `-ParenExpr 0x563c31c1bf98 <col:43, col:208> 'int'
|   |     `-ConditionalOperator 0x563c31c1bf68 <col:44, col:207> 'int'
|   |       |-BinaryOperator 0x563c31c1bd90 <col:44, col:121> 'int' '||'
|   |       | |-BinaryOperator 0x563c31c1bcb0 <col:44, col:83> 'int' '||'
|   |       | | |-UnaryOperator 0x563c31c1bbd8 <col:44, col:45> 'int' prefix '!' cannot overflow
|   |       | | | `-ImplicitCastExpr 0x563c31c1bbc0 <col:45> '_Bool' <LValueToRValue>
|   |       | | |   `-DeclRefExpr 0x563c31c1bba0 <col:45> '_Bool' lvalue Var 0x563c31c16220 'b$w_buff0_used' '_Bool'
|   |       | | `-BinaryOperator 0x563c31c1bc90 <col:63, col:83> 'int' '&&'
|   |       | |   |-UnaryOperator 0x563c31c1bc28 <col:63, col:64> 'int' prefix '!' cannot overflow
|   |       | |   | `-ImplicitCastExpr 0x563c31c1bc10 <col:64> '_Bool' <LValueToRValue>
|   |       | |   |   `-DeclRefExpr 0x563c31c1bbf0 <col:64> '_Bool' lvalue Var 0x563c31c15dd8 'b$r_buff0_thd4' '_Bool'
|   |       | |   `-UnaryOperator 0x563c31c1bc78 <col:82, col:83> 'int' prefix '!' cannot overflow
|   |       | |     `-ImplicitCastExpr 0x563c31c1bc60 <col:83> '_Bool' <LValueToRValue>
|   |       | |       `-DeclRefExpr 0x563c31c1bc40 <col:83> '_Bool' lvalue Var 0x563c31c16318 'b$w_buff1_used' '_Bool'
|   |       | `-BinaryOperator 0x563c31c1bd70 <col:101, col:121> 'int' '&&'
|   |       |   |-UnaryOperator 0x563c31c1bd08 <col:101, col:102> 'int' prefix '!' cannot overflow
|   |       |   | `-ImplicitCastExpr 0x563c31c1bcf0 <col:102> '_Bool' <LValueToRValue>
|   |       |   |   `-DeclRefExpr 0x563c31c1bcd0 <col:102> '_Bool' lvalue Var 0x563c31c15dd8 'b$r_buff0_thd4' '_Bool'
|   |       |   `-UnaryOperator 0x563c31c1bd58 <col:120, col:121> 'int' prefix '!' cannot overflow
|   |       |     `-ImplicitCastExpr 0x563c31c1bd40 <col:121> '_Bool' <LValueToRValue>
|   |       |       `-DeclRefExpr 0x563c31c1bd20 <col:121> '_Bool' lvalue Var 0x563c31c16030 'b$r_buff1_thd4' '_Bool'
|   |       |-ImplicitCastExpr 0x563c31c1bf50 <col:138> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x563c31c1bdb0 <col:138> 'int' lvalue Var 0x563c31c162a0 'b$w_buff1' 'int'
|   |       `-ParenExpr 0x563c31c1bf30 <col:150, col:207> 'int'
|   |         `-ConditionalOperator 0x563c31c1bf00 <col:151, col:198> 'int'
|   |           |-BinaryOperator 0x563c31c1be70 <col:151, col:169> 'int' '&&'
|   |           | |-ImplicitCastExpr 0x563c31c1be28 <col:151> 'int' <IntegralCast>
|   |           | | `-ImplicitCastExpr 0x563c31c1be10 <col:151> '_Bool' <LValueToRValue>
|   |           | |   `-DeclRefExpr 0x563c31c1bdd0 <col:151> '_Bool' lvalue Var 0x563c31c16220 'b$w_buff0_used' '_Bool'
|   |           | `-ImplicitCastExpr 0x563c31c1be58 <col:169> 'int' <IntegralCast>
|   |           |   `-ImplicitCastExpr 0x563c31c1be40 <col:169> '_Bool' <LValueToRValue>
|   |           |     `-DeclRefExpr 0x563c31c1bdf0 <col:169> '_Bool' lvalue Var 0x563c31c15dd8 'b$r_buff0_thd4' '_Bool'
|   |           |-ImplicitCastExpr 0x563c31c1bed0 <col:186> 'int' <LValueToRValue>
|   |           | `-DeclRefExpr 0x563c31c1be90 <col:186> 'int' lvalue Var 0x563c31c162a0 'b$w_buff1' 'int'
|   |           `-ImplicitCastExpr 0x563c31c1bee8 <col:198> 'int' <LValueToRValue>
|   |             `-DeclRefExpr 0x563c31c1beb0 <col:198> 'int' lvalue Var 0x563c31c162a0 'b$w_buff1' 'int'
|   |-BinaryOperator 0x563c31c1c5d8 <line:805:3, col:227> '_Bool' '='
|   | |-DeclRefExpr 0x563c31c1c050 <col:3> '_Bool' lvalue Var 0x563c31c16220 'b$w_buff0_used' '_Bool'
|   | `-ImplicitCastExpr 0x563c31c1c5c0 <col:20, col:227> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x563c31c1c590 <col:20, col:227> 'int'
|   |     |-ImplicitCastExpr 0x563c31c1c548 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x563c31c1c530 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x563c31c1c070 <col:20> '_Bool' lvalue Var 0x563c31c16858 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x563c31c1c578 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x563c31c1c560 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x563c31c1c090 <col:36> '_Bool' lvalue Var 0x563c31c16220 'b$w_buff0_used' '_Bool'
|   |     `-ParenExpr 0x563c31c1c510 <col:53, col:227> 'int'
|   |       `-ConditionalOperator 0x563c31c1c4e0 <col:54, col:226> 'int'
|   |         |-BinaryOperator 0x563c31c1c2a0 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x563c31c1c1c0 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x563c31c1c0e8 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x563c31c1c0d0 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x563c31c1c0b0 <col:55> '_Bool' lvalue Var 0x563c31c16220 'b$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x563c31c1c1a0 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x563c31c1c138 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x563c31c1c120 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x563c31c1c100 <col:74> '_Bool' lvalue Var 0x563c31c15dd8 'b$r_buff0_thd4' '_Bool'
|   |         | |   `-UnaryOperator 0x563c31c1c188 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x563c31c1c170 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x563c31c1c150 <col:93> '_Bool' lvalue Var 0x563c31c16318 'b$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x563c31c1c280 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x563c31c1c218 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x563c31c1c200 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x563c31c1c1e0 <col:112> '_Bool' lvalue Var 0x563c31c15dd8 'b$r_buff0_thd4' '_Bool'
|   |         |   `-UnaryOperator 0x563c31c1c268 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x563c31c1c250 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x563c31c1c230 <col:131> '_Bool' lvalue Var 0x563c31c16030 'b$r_buff1_thd4' '_Bool'
|   |         |-ImplicitCastExpr 0x563c31c1c4c8 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x563c31c1c4b0 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x563c31c1c2c0 <col:148> '_Bool' lvalue Var 0x563c31c16220 'b$w_buff0_used' '_Bool'
|   |         `-ParenExpr 0x563c31c1c490 <col:165, col:226> 'int'
|   |           `-ConditionalOperator 0x563c31c1c460 <col:166, col:212> 'int'
|   |             |-BinaryOperator 0x563c31c1c380 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x563c31c1c338 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x563c31c1c320 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x563c31c1c2e0 <col:166> '_Bool' lvalue Var 0x563c31c16220 'b$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x563c31c1c368 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x563c31c1c350 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x563c31c1c300 <col:184> '_Bool' lvalue Var 0x563c31c15dd8 'b$r_buff0_thd4' '_Bool'
|   |             |-ImplicitCastExpr 0x563c31c1c418 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x563c31c1c3d0 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x563c31c1c3a0 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x563c31c1c448 <col:212> 'int' <IntegralCast>
|   |               `-ImplicitCastExpr 0x563c31c1c430 <col:212> '_Bool' <LValueToRValue>
|   |                 `-DeclRefExpr 0x563c31c1c3f8 <col:212> '_Bool' lvalue Var 0x563c31c16220 'b$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x563c31c1cbb8 <line:806:3, col:221> '_Bool' '='
|   | |-DeclRefExpr 0x563c31c1c5f8 <col:3> '_Bool' lvalue Var 0x563c31c16318 'b$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x563c31c1cba0 <col:20, col:221> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x563c31c1cb70 <col:20, col:221> 'int'
|   |     |-ImplicitCastExpr 0x563c31c1cb10 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x563c31c1caf8 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x563c31c1c618 <col:20> '_Bool' lvalue Var 0x563c31c16858 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x563c31c1cb40 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x563c31c1cb28 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x563c31c1c638 <col:36> '_Bool' lvalue Var 0x563c31c16318 'b$w_buff1_used' '_Bool'
|   |     `-ParenExpr 0x563c31c1cad8 <col:53, col:221> 'int'
|   |       `-ConditionalOperator 0x563c31c1caa8 <col:54, col:220> 'int'
|   |         |-BinaryOperator 0x563c31c1c848 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x563c31c1c768 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x563c31c1c690 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x563c31c1c678 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x563c31c1c658 <col:55> '_Bool' lvalue Var 0x563c31c16220 'b$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x563c31c1c748 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x563c31c1c6e0 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x563c31c1c6c8 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x563c31c1c6a8 <col:74> '_Bool' lvalue Var 0x563c31c15dd8 'b$r_buff0_thd4' '_Bool'
|   |         | |   `-UnaryOperator 0x563c31c1c730 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x563c31c1c718 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x563c31c1c6f8 <col:93> '_Bool' lvalue Var 0x563c31c16318 'b$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x563c31c1c828 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x563c31c1c7c0 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x563c31c1c7a8 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x563c31c1c788 <col:112> '_Bool' lvalue Var 0x563c31c15dd8 'b$r_buff0_thd4' '_Bool'
|   |         |   `-UnaryOperator 0x563c31c1c810 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x563c31c1c7f8 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x563c31c1c7d8 <col:131> '_Bool' lvalue Var 0x563c31c16030 'b$r_buff1_thd4' '_Bool'
|   |         |-ImplicitCastExpr 0x563c31c1ca90 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x563c31c1ca78 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x563c31c1c868 <col:148> '_Bool' lvalue Var 0x563c31c16318 'b$w_buff1_used' '_Bool'
|   |         `-ParenExpr 0x563c31c1ca58 <col:165, col:220> 'int'
|   |           `-ConditionalOperator 0x563c31c1ca28 <col:166, col:219> 'int'
|   |             |-BinaryOperator 0x563c31c1c928 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x563c31c1c8e0 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x563c31c1c8c8 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x563c31c1c888 <col:166> '_Bool' lvalue Var 0x563c31c16220 'b$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x563c31c1c910 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x563c31c1c8f8 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x563c31c1c8a8 <col:184> '_Bool' lvalue Var 0x563c31c15dd8 'b$r_buff0_thd4' '_Bool'
|   |             |-ImplicitCastExpr 0x563c31c1c9f8 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x563c31c1c978 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x563c31c1c948 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x563c31c1ca10 <col:212, col:219> 'int' <IntegralCast>
|   |               `-CStyleCastExpr 0x563c31c1c9d0 <col:212, col:219> '_Bool' <IntegralToBoolean>
|   |                 `-IntegerLiteral 0x563c31c1c9a0 <col:219> 'int' 0
|   |-BinaryOperator 0x563c31c1d160 <line:807:3, col:227> '_Bool' '='
|   | |-DeclRefExpr 0x563c31c1cbd8 <col:3> '_Bool' lvalue Var 0x563c31c15dd8 'b$r_buff0_thd4' '_Bool'
|   | `-ImplicitCastExpr 0x563c31c1d148 <col:20, col:227> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x563c31c1d118 <col:20, col:227> 'int'
|   |     |-ImplicitCastExpr 0x563c31c1d0d0 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x563c31c1d0b8 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x563c31c1cbf8 <col:20> '_Bool' lvalue Var 0x563c31c16858 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x563c31c1d100 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x563c31c1d0e8 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x563c31c1cc18 <col:36> '_Bool' lvalue Var 0x563c31c15dd8 'b$r_buff0_thd4' '_Bool'
|   |     `-ParenExpr 0x563c31c1d098 <col:53, col:227> 'int'
|   |       `-ConditionalOperator 0x563c31c1d068 <col:54, col:226> 'int'
|   |         |-BinaryOperator 0x563c31c1ce28 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x563c31c1cd48 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x563c31c1cc70 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x563c31c1cc58 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x563c31c1cc38 <col:55> '_Bool' lvalue Var 0x563c31c16220 'b$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x563c31c1cd28 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x563c31c1ccc0 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x563c31c1cca8 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x563c31c1cc88 <col:74> '_Bool' lvalue Var 0x563c31c15dd8 'b$r_buff0_thd4' '_Bool'
|   |         | |   `-UnaryOperator 0x563c31c1cd10 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x563c31c1ccf8 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x563c31c1ccd8 <col:93> '_Bool' lvalue Var 0x563c31c16318 'b$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x563c31c1ce08 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x563c31c1cda0 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x563c31c1cd88 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x563c31c1cd68 <col:112> '_Bool' lvalue Var 0x563c31c15dd8 'b$r_buff0_thd4' '_Bool'
|   |         |   `-UnaryOperator 0x563c31c1cdf0 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x563c31c1cdd8 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x563c31c1cdb8 <col:131> '_Bool' lvalue Var 0x563c31c16030 'b$r_buff1_thd4' '_Bool'
|   |         |-ImplicitCastExpr 0x563c31c1d050 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x563c31c1d038 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x563c31c1ce48 <col:148> '_Bool' lvalue Var 0x563c31c15dd8 'b$r_buff0_thd4' '_Bool'
|   |         `-ParenExpr 0x563c31c1d018 <col:165, col:226> 'int'
|   |           `-ConditionalOperator 0x563c31c1cfe8 <col:166, col:212> 'int'
|   |             |-BinaryOperator 0x563c31c1cf08 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x563c31c1cec0 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x563c31c1cea8 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x563c31c1ce68 <col:166> '_Bool' lvalue Var 0x563c31c16220 'b$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x563c31c1cef0 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x563c31c1ced8 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x563c31c1ce88 <col:184> '_Bool' lvalue Var 0x563c31c15dd8 'b$r_buff0_thd4' '_Bool'
|   |             |-ImplicitCastExpr 0x563c31c1cfa0 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x563c31c1cf58 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x563c31c1cf28 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x563c31c1cfd0 <col:212> 'int' <IntegralCast>
|   |               `-ImplicitCastExpr 0x563c31c1cfb8 <col:212> '_Bool' <LValueToRValue>
|   |                 `-DeclRefExpr 0x563c31c1cf80 <col:212> '_Bool' lvalue Var 0x563c31c15dd8 'b$r_buff0_thd4' '_Bool'
|   |-BinaryOperator 0x563c31c1d728 <line:808:3, col:221> '_Bool' '='
|   | |-DeclRefExpr 0x563c31c1d180 <col:3> '_Bool' lvalue Var 0x563c31c16030 'b$r_buff1_thd4' '_Bool'
|   | `-ImplicitCastExpr 0x563c31c1d710 <col:20, col:221> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x563c31c1d6e0 <col:20, col:221> 'int'
|   |     |-ImplicitCastExpr 0x563c31c1d698 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x563c31c1d680 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x563c31c1d1a0 <col:20> '_Bool' lvalue Var 0x563c31c16858 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x563c31c1d6c8 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x563c31c1d6b0 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x563c31c1d1c0 <col:36> '_Bool' lvalue Var 0x563c31c16030 'b$r_buff1_thd4' '_Bool'
|   |     `-ParenExpr 0x563c31c1d660 <col:53, col:221> 'int'
|   |       `-ConditionalOperator 0x563c31c1d630 <col:54, col:220> 'int'
|   |         |-BinaryOperator 0x563c31c1d3d0 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x563c31c1d2f0 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x563c31c1d218 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x563c31c1d200 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x563c31c1d1e0 <col:55> '_Bool' lvalue Var 0x563c31c16220 'b$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x563c31c1d2d0 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x563c31c1d268 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x563c31c1d250 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x563c31c1d230 <col:74> '_Bool' lvalue Var 0x563c31c15dd8 'b$r_buff0_thd4' '_Bool'
|   |         | |   `-UnaryOperator 0x563c31c1d2b8 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x563c31c1d2a0 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x563c31c1d280 <col:93> '_Bool' lvalue Var 0x563c31c16318 'b$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x563c31c1d3b0 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x563c31c1d348 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x563c31c1d330 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x563c31c1d310 <col:112> '_Bool' lvalue Var 0x563c31c15dd8 'b$r_buff0_thd4' '_Bool'
|   |         |   `-UnaryOperator 0x563c31c1d398 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x563c31c1d380 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x563c31c1d360 <col:131> '_Bool' lvalue Var 0x563c31c16030 'b$r_buff1_thd4' '_Bool'
|   |         |-ImplicitCastExpr 0x563c31c1d618 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x563c31c1d600 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x563c31c1d3f0 <col:148> '_Bool' lvalue Var 0x563c31c16030 'b$r_buff1_thd4' '_Bool'
|   |         `-ParenExpr 0x563c31c1d5e0 <col:165, col:220> 'int'
|   |           `-ConditionalOperator 0x563c31c1d5b0 <col:166, col:219> 'int'
|   |             |-BinaryOperator 0x563c31c1d4b0 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x563c31c1d468 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x563c31c1d450 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x563c31c1d410 <col:166> '_Bool' lvalue Var 0x563c31c16220 'b$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x563c31c1d498 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x563c31c1d480 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x563c31c1d430 <col:184> '_Bool' lvalue Var 0x563c31c15dd8 'b$r_buff0_thd4' '_Bool'
|   |             |-ImplicitCastExpr 0x563c31c1d580 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x563c31c1d500 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x563c31c1d4d0 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x563c31c1d598 <col:212, col:219> 'int' <IntegralCast>
|   |               `-CStyleCastExpr 0x563c31c1d558 <col:212, col:219> '_Bool' <IntegralToBoolean>
|   |                 `-IntegerLiteral 0x563c31c1d528 <col:219> 'int' 0
|   |-BinaryOperator 0x563c31c1d7a0 <line:809:3, col:25> 'int' '='
|   | |-DeclRefExpr 0x563c31c1d748 <col:3> 'int' lvalue Var 0x563c31c15818 '__unbuffered_p3_EBX' 'int'
|   | `-ImplicitCastExpr 0x563c31c1d788 <col:25> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x563c31c1d768 <col:25> 'int' lvalue Var 0x563c31c15a58 'b' 'int'
|   |-BinaryOperator 0x563c31c1d8d0 <line:810:3, col:37> 'int' '='
|   | |-DeclRefExpr 0x563c31c1d7c0 <col:3> 'int' lvalue Var 0x563c31c15a58 'b' 'int'
|   | `-ConditionalOperator 0x563c31c1d8a0 <col:7, col:37> 'int'
|   |   |-ImplicitCastExpr 0x563c31c1d858 <col:7> 'int' <IntegralCast>
|   |   | `-ImplicitCastExpr 0x563c31c1d840 <col:7> '_Bool' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x563c31c1d7e0 <col:7> '_Bool' lvalue Var 0x563c31c15b00 'b$flush_delayed' '_Bool'
|   |   |-ImplicitCastExpr 0x563c31c1d870 <col:25> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x563c31c1d800 <col:25> 'int' lvalue Var 0x563c31c15b80 'b$mem_tmp' 'int'
|   |   `-ImplicitCastExpr 0x563c31c1d888 <col:37> 'int' <LValueToRValue>
|   |     `-DeclRefExpr 0x563c31c1d820 <col:37> 'int' lvalue Var 0x563c31c15a58 'b' 'int'
|   |-BinaryOperator 0x563c31c1d968 <line:811:3, col:28> '_Bool' '='
|   | |-DeclRefExpr 0x563c31c1d8f0 <col:3> '_Bool' lvalue Var 0x563c31c15b00 'b$flush_delayed' '_Bool'
|   | `-CStyleCastExpr 0x563c31c1d940 <col:21, col:28> '_Bool' <IntegralToBoolean>
|   |   `-IntegerLiteral 0x563c31c1d910 <col:28> 'int' 0
|   |-CallExpr 0x563c31c1d9c0 <line:812:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x563c31c1d9a8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x563c31c1d988 <col:3> 'void ()' Function 0x563c31bbbf00 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x563c31c1da18 <line:813:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x563c31c1da00 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x563c31c1d9e0 <col:3> 'void ()' Function 0x563c31bbbe40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x563c31c1dd28 <line:814:3, col:103> 'int' '='
|   | |-DeclRefExpr 0x563c31c1da38 <col:3> 'int' lvalue Var 0x563c31c15a58 'b' 'int'
|   | `-ConditionalOperator 0x563c31c1dcf8 <col:7, col:103> 'int'
|   |   |-BinaryOperator 0x563c31c1daf8 <col:7, col:25> 'int' '&&'
|   |   | |-ImplicitCastExpr 0x563c31c1dab0 <col:7> 'int' <IntegralCast>
|   |   | | `-ImplicitCastExpr 0x563c31c1da98 <col:7> '_Bool' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x563c31c1da58 <col:7> '_Bool' lvalue Var 0x563c31c16220 'b$w_buff0_used' '_Bool'
|   |   | `-ImplicitCastExpr 0x563c31c1dae0 <col:25> 'int' <IntegralCast>
|   |   |   `-ImplicitCastExpr 0x563c31c1dac8 <col:25> '_Bool' <LValueToRValue>
|   |   |     `-DeclRefExpr 0x563c31c1da78 <col:25> '_Bool' lvalue Var 0x563c31c15dd8 'b$r_buff0_thd4' '_Bool'
|   |   |-ImplicitCastExpr 0x563c31c1dce0 <col:42> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x563c31c1db18 <col:42> 'int' lvalue Var 0x563c31c161a8 'b$w_buff0' 'int'
|   |   `-ParenExpr 0x563c31c1dcc0 <col:54, col:103> 'int'
|   |     `-ConditionalOperator 0x563c31c1dc90 <col:55, col:102> 'int'
|   |       |-BinaryOperator 0x563c31c1dc00 <col:55, col:73> 'int' '&&'
|   |       | |-ImplicitCastExpr 0x563c31c1dbb8 <col:55> 'int' <IntegralCast>
|   |       | | `-ImplicitCastExpr 0x563c31c1dba0 <col:55> '_Bool' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x563c31c1db38 <col:55> '_Bool' lvalue Var 0x563c31c16318 'b$w_buff1_used' '_Bool'
|   |       | `-ImplicitCastExpr 0x563c31c1dbe8 <col:73> 'int' <IntegralCast>
|   |       |   `-ImplicitCastExpr 0x563c31c1dbd0 <col:73> '_Bool' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x563c31c1db80 <col:73> '_Bool' lvalue Var 0x563c31c16030 'b$r_buff1_thd4' '_Bool'
|   |       |-ImplicitCastExpr 0x563c31c1dc60 <col:90> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x563c31c1dc20 <col:90> 'int' lvalue Var 0x563c31c162a0 'b$w_buff1' 'int'
|   |       `-ImplicitCastExpr 0x563c31c1dc78 <col:102> 'int' <LValueToRValue>
|   |         `-DeclRefExpr 0x563c31c1dc40 <col:102> 'int' lvalue Var 0x563c31c15a58 'b' 'int'
|   |-BinaryOperator 0x563c31c1df30 <line:815:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x563c31c1dd48 <col:3> '_Bool' lvalue Var 0x563c31c16220 'b$w_buff0_used' '_Bool'
|   | `-ImplicitCastExpr 0x563c31c1df18 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x563c31c1dee8 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x563c31c1de08 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x563c31c1ddc0 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x563c31c1dda8 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x563c31c1dd68 <col:20> '_Bool' lvalue Var 0x563c31c16220 'b$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x563c31c1ddf0 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x563c31c1ddd8 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x563c31c1dd88 <col:38> '_Bool' lvalue Var 0x563c31c15dd8 'b$r_buff0_thd4' '_Bool'
|   |     |-ImplicitCastExpr 0x563c31c1dea0 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x563c31c1de58 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x563c31c1de28 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x563c31c1ded0 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x563c31c1deb8 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x563c31c1de80 <col:66> '_Bool' lvalue Var 0x563c31c16220 'b$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x563c31c1e218 <line:816:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x563c31c1df50 <col:3> '_Bool' lvalue Var 0x563c31c16318 'b$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x563c31c1e200 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x563c31c1e1d0 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x563c31c1e0f0 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x563c31c1e010 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x563c31c1dfc8 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x563c31c1dfb0 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x563c31c1df70 <col:20> '_Bool' lvalue Var 0x563c31c16220 'b$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x563c31c1dff8 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x563c31c1dfe0 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x563c31c1df90 <col:38> '_Bool' lvalue Var 0x563c31c15dd8 'b$r_buff0_thd4' '_Bool'
|   |     | `-BinaryOperator 0x563c31c1e0d0 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x563c31c1e088 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x563c31c1e070 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x563c31c1e030 <col:56> '_Bool' lvalue Var 0x563c31c16318 'b$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x563c31c1e0b8 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x563c31c1e0a0 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x563c31c1e050 <col:74> '_Bool' lvalue Var 0x563c31c16030 'b$r_buff1_thd4' '_Bool'
|   |     |-ImplicitCastExpr 0x563c31c1e188 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x563c31c1e140 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x563c31c1e110 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x563c31c1e1b8 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x563c31c1e1a0 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x563c31c1e168 <col:102> '_Bool' lvalue Var 0x563c31c16318 'b$w_buff1_used' '_Bool'
|   |-BinaryOperator 0x563c31c1e420 <line:817:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x563c31c1e238 <col:3> '_Bool' lvalue Var 0x563c31c15dd8 'b$r_buff0_thd4' '_Bool'
|   | `-ImplicitCastExpr 0x563c31c1e408 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x563c31c1e3d8 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x563c31c1e2f8 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x563c31c1e2b0 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x563c31c1e298 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x563c31c1e258 <col:20> '_Bool' lvalue Var 0x563c31c16220 'b$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x563c31c1e2e0 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x563c31c1e2c8 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x563c31c1e278 <col:38> '_Bool' lvalue Var 0x563c31c15dd8 'b$r_buff0_thd4' '_Bool'
|   |     |-ImplicitCastExpr 0x563c31c1e390 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x563c31c1e348 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x563c31c1e318 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x563c31c1e3c0 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x563c31c1e3a8 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x563c31c1e370 <col:66> '_Bool' lvalue Var 0x563c31c15dd8 'b$r_buff0_thd4' '_Bool'
|   |-BinaryOperator 0x563c31c1e708 <line:818:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x563c31c1e440 <col:3> '_Bool' lvalue Var 0x563c31c16030 'b$r_buff1_thd4' '_Bool'
|   | `-ImplicitCastExpr 0x563c31c1e6f0 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x563c31c1e6c0 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x563c31c1e5e0 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x563c31c1e500 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x563c31c1e4b8 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x563c31c1e4a0 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x563c31c1e460 <col:20> '_Bool' lvalue Var 0x563c31c16220 'b$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x563c31c1e4e8 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x563c31c1e4d0 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x563c31c1e480 <col:38> '_Bool' lvalue Var 0x563c31c15dd8 'b$r_buff0_thd4' '_Bool'
|   |     | `-BinaryOperator 0x563c31c1e5c0 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x563c31c1e578 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x563c31c1e560 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x563c31c1e520 <col:56> '_Bool' lvalue Var 0x563c31c16318 'b$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x563c31c1e5a8 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x563c31c1e590 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x563c31c1e540 <col:74> '_Bool' lvalue Var 0x563c31c16030 'b$r_buff1_thd4' '_Bool'
|   |     |-ImplicitCastExpr 0x563c31c1e678 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x563c31c1e630 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x563c31c1e600 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x563c31c1e6a8 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x563c31c1e690 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x563c31c1e658 <col:102> '_Bool' lvalue Var 0x563c31c16030 'b$r_buff1_thd4' '_Bool'
|   |-CallExpr 0x563c31c1e760 <line:819:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x563c31c1e748 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x563c31c1e728 <col:3> 'void ()' Function 0x563c31bbbf00 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x563c31c1e7b8 <line:820:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x563c31c1e7a0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x563c31c1e780 <col:3> 'void ()' Function 0x563c31bbbe40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x563c31c1e870 <line:821:3, col:41> 'int' '='
|   | |-DeclRefExpr 0x563c31c1e7d8 <col:3> 'int' lvalue Var 0x563c31c15278 '__unbuffered_cnt' 'int'
|   | `-BinaryOperator 0x563c31c1e850 <col:22, col:41> 'int' '+'
|   |   |-ImplicitCastExpr 0x563c31c1e838 <col:22> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x563c31c1e7f8 <col:22> 'int' lvalue Var 0x563c31c15278 '__unbuffered_cnt' 'int'
|   |   `-IntegerLiteral 0x563c31c1e818 <col:41> 'int' 1
|   |-CallExpr 0x563c31c1e8c8 <line:822:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x563c31c1e8b0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x563c31c1e890 <col:3> 'void ()' Function 0x563c31bbbf00 '__VERIFIER_atomic_end' 'void ()'
|   `-ReturnStmt 0x563c31c1e940 <line:823:3, col:36>
|     `-CallExpr 0x563c31c1e920 <col:10, col:36> 'void *'
|       `-ImplicitCastExpr 0x563c31c1e908 <col:10> 'void *(*)(void)' <FunctionToPointerDecay>
|         `-DeclRefExpr 0x563c31c1e8e8 <col:10> 'void *(void)' Function 0x563c31bbb958 '__VERIFIER_nondet_pointer' 'void *(void)'
|-FunctionDecl 0x563c31c1eaa0 prev 0x563c31c14fc0 <line:825:1, line:827:1> line:825:6 fence 'void ()'
| `-CompoundStmt 0x563c31c1eb40 <line:826:1, line:827:1>
|-FunctionDecl 0x563c31c1eb90 prev 0x563c31c15080 <line:828:1, line:830:1> line:828:6 isync 'void ()'
| `-CompoundStmt 0x563c31c1ec30 <line:829:1, line:830:1>
|-FunctionDecl 0x563c31c1ec60 prev 0x563c31c15140 <line:831:1, line:833:1> line:831:6 lwfence 'void ()'
| `-CompoundStmt 0x563c31c1ed00 <line:832:1, line:833:1>
`-FunctionDecl 0x563c31c1ed68 <line:834:1, line:860:1> line:834:5 main 'int ()'
  `-CompoundStmt 0x563c31c20d78 <line:835:1, line:860:1>
    |-DeclStmt 0x563c31c1ee80 <line:836:3, col:17>
    | `-VarDecl 0x563c31c1ee18 <col:3, col:13> col:13 used t939 'pthread_t':'unsigned long'
    |-CallExpr 0x563c31c1f088 <line:837:3, col:53> 'int'
    | |-ImplicitCastExpr 0x563c31c1f070 <col:3> 'int (*)(pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x563c31c1ee98 <col:3> 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' Function 0x563c31bfc488 'pthread_create' 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)'
    | |-UnaryOperator 0x563c31c1eed8 <col:18, col:19> 'pthread_t *' prefix '&' cannot overflow
    | | `-DeclRefExpr 0x563c31c1eeb8 <col:19> 'pthread_t':'unsigned long' lvalue Var 0x563c31c1ee18 't939' 'pthread_t':'unsigned long'
    | |-ImplicitCastExpr 0x563c31c1f0c8 <col:25, col:35> 'const pthread_attr_t *' <NullToPointer>
    | | `-ParenExpr 0x563c31c1ef50 <col:25, col:35> 'void *'
    | |   `-CStyleCastExpr 0x563c31c1ef28 <col:26, col:34> 'void *' <NullToPointer>
    | |     `-IntegerLiteral 0x563c31c1eef0 <col:34> 'int' 0
    | |-ImplicitCastExpr 0x563c31c1f0e0 <col:38> 'void *(*)(void *)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x563c31c1ef70 <col:38> 'void *(void *)' Function 0x563c31c16970 'P0' 'void *(void *)'
    | `-ParenExpr 0x563c31c1eff0 <col:42, col:52> 'void *'
    |   `-CStyleCastExpr 0x563c31c1efc8 <col:43, col:51> 'void *' <NullToPointer>
    |     `-IntegerLiteral 0x563c31c1ef90 <col:51> 'int' 0
    |-DeclStmt 0x563c31c1f170 <line:838:3, col:17>
    | `-VarDecl 0x563c31c1f108 <col:3, col:13> col:13 used t940 'pthread_t':'unsigned long'
    |-CallExpr 0x563c31c1f318 <line:839:3, col:53> 'int'
    | |-ImplicitCastExpr 0x563c31c1f300 <col:3> 'int (*)(pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x563c31c1f188 <col:3> 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' Function 0x563c31bfc488 'pthread_create' 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)'
    | |-UnaryOperator 0x563c31c1f1c8 <col:18, col:19> 'pthread_t *' prefix '&' cannot overflow
    | | `-DeclRefExpr 0x563c31c1f1a8 <col:19> 'pthread_t':'unsigned long' lvalue Var 0x563c31c1f108 't940' 'pthread_t':'unsigned long'
    | |-ImplicitCastExpr 0x563c31c1f358 <col:25, col:35> 'const pthread_attr_t *' <NullToPointer>
    | | `-ParenExpr 0x563c31c1f240 <col:25, col:35> 'void *'
    | |   `-CStyleCastExpr 0x563c31c1f218 <col:26, col:34> 'void *' <NullToPointer>
    | |     `-IntegerLiteral 0x563c31c1f1e0 <col:34> 'int' 0
    | |-ImplicitCastExpr 0x563c31c1f370 <col:38> 'void *(*)(void *)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x563c31c1f260 <col:38> 'void *(void *)' Function 0x563c31c183c0 'P1' 'void *(void *)'
    | `-ParenExpr 0x563c31c1f2e0 <col:42, col:52> 'void *'
    |   `-CStyleCastExpr 0x563c31c1f2b8 <col:43, col:51> 'void *' <NullToPointer>
    |     `-IntegerLiteral 0x563c31c1f280 <col:51> 'int' 0
    |-DeclStmt 0x563c31c1f400 <line:840:3, col:17>
    | `-VarDecl 0x563c31c1f398 <col:3, col:13> col:13 used t941 'pthread_t':'unsigned long'
    |-CallExpr 0x563c31c1f5a8 <line:841:3, col:53> 'int'
    | |-ImplicitCastExpr 0x563c31c1f590 <col:3> 'int (*)(pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x563c31c1f418 <col:3> 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' Function 0x563c31bfc488 'pthread_create' 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)'
    | |-UnaryOperator 0x563c31c1f458 <col:18, col:19> 'pthread_t *' prefix '&' cannot overflow
    | | `-DeclRefExpr 0x563c31c1f438 <col:19> 'pthread_t':'unsigned long' lvalue Var 0x563c31c1f398 't941' 'pthread_t':'unsigned long'
    | |-ImplicitCastExpr 0x563c31c1f5e8 <col:25, col:35> 'const pthread_attr_t *' <NullToPointer>
    | | `-ParenExpr 0x563c31c1f4d0 <col:25, col:35> 'void *'
    | |   `-CStyleCastExpr 0x563c31c1f4a8 <col:26, col:34> 'void *' <NullToPointer>
    | |     `-IntegerLiteral 0x563c31c1f470 <col:34> 'int' 0
    | |-ImplicitCastExpr 0x563c31c1f600 <col:38> 'void *(*)(void *)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x563c31c1f4f0 <col:38> 'void *(void *)' Function 0x563c31c19748 'P2' 'void *(void *)'
    | `-ParenExpr 0x563c31c1f570 <col:42, col:52> 'void *'
    |   `-CStyleCastExpr 0x563c31c1f548 <col:43, col:51> 'void *' <NullToPointer>
    |     `-IntegerLiteral 0x563c31c1f510 <col:51> 'int' 0
    |-DeclStmt 0x563c31c1f690 <line:842:3, col:17>
    | `-VarDecl 0x563c31c1f628 <col:3, col:13> col:13 used t942 'pthread_t':'unsigned long'
    |-CallExpr 0x563c31c1f838 <line:843:3, col:53> 'int'
    | |-ImplicitCastExpr 0x563c31c1f820 <col:3> 'int (*)(pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x563c31c1f6a8 <col:3> 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' Function 0x563c31bfc488 'pthread_create' 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)'
    | |-UnaryOperator 0x563c31c1f6e8 <col:18, col:19> 'pthread_t *' prefix '&' cannot overflow
    | | `-DeclRefExpr 0x563c31c1f6c8 <col:19> 'pthread_t':'unsigned long' lvalue Var 0x563c31c1f628 't942' 'pthread_t':'unsigned long'
    | |-ImplicitCastExpr 0x563c31c1f878 <col:25, col:35> 'const pthread_attr_t *' <NullToPointer>
    | | `-ParenExpr 0x563c31c1f760 <col:25, col:35> 'void *'
    | |   `-CStyleCastExpr 0x563c31c1f738 <col:26, col:34> 'void *' <NullToPointer>
    | |     `-IntegerLiteral 0x563c31c1f700 <col:34> 'int' 0
    | |-ImplicitCastExpr 0x563c31c1f890 <col:38> 'void *(*)(void *)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x563c31c1f780 <col:38> 'void *(void *)' Function 0x563c31c1ab50 'P3' 'void *(void *)'
    | `-ParenExpr 0x563c31c1f800 <col:42, col:52> 'void *'
    |   `-CStyleCastExpr 0x563c31c1f7d8 <col:43, col:51> 'void *' <NullToPointer>
    |     `-IntegerLiteral 0x563c31c1f7a0 <col:51> 'int' 0
    |-CallExpr 0x563c31c1f8e0 <line:844:3, col:27> 'void'
    | `-ImplicitCastExpr 0x563c31c1f8c8 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x563c31c1f8a8 <col:3> 'void ()' Function 0x563c31bbbe40 '__VERIFIER_atomic_begin' 'void ()'
    |-BinaryOperator 0x563c31c1f9b0 <line:845:3, col:41> '_Bool' '='
    | |-DeclRefExpr 0x563c31c1f900 <col:3> '_Bool' lvalue Var 0x563c31c16390 'main$tmp_guard0' '_Bool'
    | `-ImplicitCastExpr 0x563c31c1f998 <col:21, col:41> '_Bool' <IntegralToBoolean>
    |   `-BinaryOperator 0x563c31c1f978 <col:21, col:41> 'int' '=='
    |     |-ImplicitCastExpr 0x563c31c1f960 <col:21> 'int' <LValueToRValue>
    |     | `-DeclRefExpr 0x563c31c1f920 <col:21> 'int' lvalue Var 0x563c31c15278 '__unbuffered_cnt' 'int'
    |     `-IntegerLiteral 0x563c31c1f940 <col:41> 'int' 4
    |-CallExpr 0x563c31c1fa08 <line:846:3, col:25> 'void'
    | `-ImplicitCastExpr 0x563c31c1f9f0 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x563c31c1f9d0 <col:3> 'void ()' Function 0x563c31bbbf00 '__VERIFIER_atomic_end' 'void ()'
    |-CallExpr 0x563c31c1fa80 <line:847:3, col:36> 'void'
    | |-ImplicitCastExpr 0x563c31c1fa68 <col:3> 'void (*)(int)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x563c31c1fa28 <col:3> 'void (int)' Function 0x563c31bbb790 '__VERIFIER_assume' 'void (int)'
    | `-ImplicitCastExpr 0x563c31c1fac0 <col:21> 'int' <IntegralCast>
    |   `-ImplicitCastExpr 0x563c31c1faa8 <col:21> '_Bool' <LValueToRValue>
    |     `-DeclRefExpr 0x563c31c1fa48 <col:21> '_Bool' lvalue Var 0x563c31c16390 'main$tmp_guard0' '_Bool'
    |-CallExpr 0x563c31c1fb10 <line:848:3, col:27> 'void'
    | `-ImplicitCastExpr 0x563c31c1faf8 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x563c31c1fad8 <col:3> 'void ()' Function 0x563c31bbbe40 '__VERIFIER_atomic_begin' 'void ()'
    |-BinaryOperator 0x563c31c1fe08 <line:849:3, col:103> 'int' '='
    | |-DeclRefExpr 0x563c31c1fb30 <col:3> 'int' lvalue Var 0x563c31c15a58 'b' 'int'
    | `-ConditionalOperator 0x563c31c1fdd8 <col:7, col:103> 'int'
    |   |-BinaryOperator 0x563c31c1fc00 <col:7, col:25> 'int' '&&'
    |   | |-ImplicitCastExpr 0x563c31c1fbb8 <col:7> 'int' <IntegralCast>
    |   | | `-ImplicitCastExpr 0x563c31c1fba0 <col:7> '_Bool' <LValueToRValue>
    |   | |   `-DeclRefExpr 0x563c31c1fb50 <col:7> '_Bool' lvalue Var 0x563c31c16220 'b$w_buff0_used' '_Bool'
    |   | `-ImplicitCastExpr 0x563c31c1fbe8 <col:25> 'int' <IntegralCast>
    |   |   `-ImplicitCastExpr 0x563c31c1fbd0 <col:25> '_Bool' <LValueToRValue>
    |   |     `-DeclRefExpr 0x563c31c1fb70 <col:25> '_Bool' lvalue Var 0x563c31c15bf8 'b$r_buff0_thd0' '_Bool'
    |   |-ImplicitCastExpr 0x563c31c1fdc0 <col:42> 'int' <LValueToRValue>
    |   | `-DeclRefExpr 0x563c31c1fc20 <col:42> 'int' lvalue Var 0x563c31c161a8 'b$w_buff0' 'int'
    |   `-ParenExpr 0x563c31c1fda0 <col:54, col:103> 'int'
    |     `-ConditionalOperator 0x563c31c1fd70 <col:55, col:102> 'int'
    |       |-BinaryOperator 0x563c31c1fce0 <col:55, col:73> 'int' '&&'
    |       | |-ImplicitCastExpr 0x563c31c1fc98 <col:55> 'int' <IntegralCast>
    |       | | `-ImplicitCastExpr 0x563c31c1fc80 <col:55> '_Bool' <LValueToRValue>
    |       | |   `-DeclRefExpr 0x563c31c1fc40 <col:55> '_Bool' lvalue Var 0x563c31c16318 'b$w_buff1_used' '_Bool'
    |       | `-ImplicitCastExpr 0x563c31c1fcc8 <col:73> 'int' <IntegralCast>
    |       |   `-ImplicitCastExpr 0x563c31c1fcb0 <col:73> '_Bool' <LValueToRValue>
    |       |     `-DeclRefExpr 0x563c31c1fc60 <col:73> '_Bool' lvalue Var 0x563c31c15e50 'b$r_buff1_thd0' '_Bool'
    |       |-ImplicitCastExpr 0x563c31c1fd40 <col:90> 'int' <LValueToRValue>
    |       | `-DeclRefExpr 0x563c31c1fd00 <col:90> 'int' lvalue Var 0x563c31c162a0 'b$w_buff1' 'int'
    |       `-ImplicitCastExpr 0x563c31c1fd58 <col:102> 'int' <LValueToRValue>
    |         `-DeclRefExpr 0x563c31c1fd20 <col:102> 'int' lvalue Var 0x563c31c15a58 'b' 'int'
    |-BinaryOperator 0x563c31c20010 <line:850:3, col:66> '_Bool' '='
    | |-DeclRefExpr 0x563c31c1fe28 <col:3> '_Bool' lvalue Var 0x563c31c16220 'b$w_buff0_used' '_Bool'
    | `-ImplicitCastExpr 0x563c31c1fff8 <col:20, col:66> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x563c31c1ffc8 <col:20, col:66> 'int'
    |     |-BinaryOperator 0x563c31c1fee8 <col:20, col:38> 'int' '&&'
    |     | |-ImplicitCastExpr 0x563c31c1fea0 <col:20> 'int' <IntegralCast>
    |     | | `-ImplicitCastExpr 0x563c31c1fe88 <col:20> '_Bool' <LValueToRValue>
    |     | |   `-DeclRefExpr 0x563c31c1fe48 <col:20> '_Bool' lvalue Var 0x563c31c16220 'b$w_buff0_used' '_Bool'
    |     | `-ImplicitCastExpr 0x563c31c1fed0 <col:38> 'int' <IntegralCast>
    |     |   `-ImplicitCastExpr 0x563c31c1feb8 <col:38> '_Bool' <LValueToRValue>
    |     |     `-DeclRefExpr 0x563c31c1fe68 <col:38> '_Bool' lvalue Var 0x563c31c15bf8 'b$r_buff0_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x563c31c1ff80 <col:55, col:62> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x563c31c1ff38 <col:55, col:62> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x563c31c1ff08 <col:62> 'int' 0
    |     `-ImplicitCastExpr 0x563c31c1ffb0 <col:66> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x563c31c1ff98 <col:66> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x563c31c1ff60 <col:66> '_Bool' lvalue Var 0x563c31c16220 'b$w_buff0_used' '_Bool'
    |-BinaryOperator 0x563c31c202f8 <line:851:3, col:102> '_Bool' '='
    | |-DeclRefExpr 0x563c31c20030 <col:3> '_Bool' lvalue Var 0x563c31c16318 'b$w_buff1_used' '_Bool'
    | `-ImplicitCastExpr 0x563c31c202e0 <col:20, col:102> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x563c31c202b0 <col:20, col:102> 'int'
    |     |-BinaryOperator 0x563c31c201d0 <col:20, col:74> 'int' '||'
    |     | |-BinaryOperator 0x563c31c200f0 <col:20, col:38> 'int' '&&'
    |     | | |-ImplicitCastExpr 0x563c31c200a8 <col:20> 'int' <IntegralCast>
    |     | | | `-ImplicitCastExpr 0x563c31c20090 <col:20> '_Bool' <LValueToRValue>
    |     | | |   `-DeclRefExpr 0x563c31c20050 <col:20> '_Bool' lvalue Var 0x563c31c16220 'b$w_buff0_used' '_Bool'
    |     | | `-ImplicitCastExpr 0x563c31c200d8 <col:38> 'int' <IntegralCast>
    |     | |   `-ImplicitCastExpr 0x563c31c200c0 <col:38> '_Bool' <LValueToRValue>
    |     | |     `-DeclRefExpr 0x563c31c20070 <col:38> '_Bool' lvalue Var 0x563c31c15bf8 'b$r_buff0_thd0' '_Bool'
    |     | `-BinaryOperator 0x563c31c201b0 <col:56, col:74> 'int' '&&'
    |     |   |-ImplicitCastExpr 0x563c31c20168 <col:56> 'int' <IntegralCast>
    |     |   | `-ImplicitCastExpr 0x563c31c20150 <col:56> '_Bool' <LValueToRValue>
    |     |   |   `-DeclRefExpr 0x563c31c20110 <col:56> '_Bool' lvalue Var 0x563c31c16318 'b$w_buff1_used' '_Bool'
    |     |   `-ImplicitCastExpr 0x563c31c20198 <col:74> 'int' <IntegralCast>
    |     |     `-ImplicitCastExpr 0x563c31c20180 <col:74> '_Bool' <LValueToRValue>
    |     |       `-DeclRefExpr 0x563c31c20130 <col:74> '_Bool' lvalue Var 0x563c31c15e50 'b$r_buff1_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x563c31c20268 <col:91, col:98> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x563c31c20220 <col:91, col:98> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x563c31c201f0 <col:98> 'int' 0
    |     `-ImplicitCastExpr 0x563c31c20298 <col:102> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x563c31c20280 <col:102> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x563c31c20248 <col:102> '_Bool' lvalue Var 0x563c31c16318 'b$w_buff1_used' '_Bool'
    |-BinaryOperator 0x563c31c20500 <line:852:3, col:66> '_Bool' '='
    | |-DeclRefExpr 0x563c31c20318 <col:3> '_Bool' lvalue Var 0x563c31c15bf8 'b$r_buff0_thd0' '_Bool'
    | `-ImplicitCastExpr 0x563c31c204e8 <col:20, col:66> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x563c31c204b8 <col:20, col:66> 'int'
    |     |-BinaryOperator 0x563c31c203d8 <col:20, col:38> 'int' '&&'
    |     | |-ImplicitCastExpr 0x563c31c20390 <col:20> 'int' <IntegralCast>
    |     | | `-ImplicitCastExpr 0x563c31c20378 <col:20> '_Bool' <LValueToRValue>
    |     | |   `-DeclRefExpr 0x563c31c20338 <col:20> '_Bool' lvalue Var 0x563c31c16220 'b$w_buff0_used' '_Bool'
    |     | `-ImplicitCastExpr 0x563c31c203c0 <col:38> 'int' <IntegralCast>
    |     |   `-ImplicitCastExpr 0x563c31c203a8 <col:38> '_Bool' <LValueToRValue>
    |     |     `-DeclRefExpr 0x563c31c20358 <col:38> '_Bool' lvalue Var 0x563c31c15bf8 'b$r_buff0_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x563c31c20470 <col:55, col:62> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x563c31c20428 <col:55, col:62> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x563c31c203f8 <col:62> 'int' 0
    |     `-ImplicitCastExpr 0x563c31c204a0 <col:66> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x563c31c20488 <col:66> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x563c31c20450 <col:66> '_Bool' lvalue Var 0x563c31c15bf8 'b$r_buff0_thd0' '_Bool'
    |-BinaryOperator 0x563c31c207e8 <line:853:3, col:102> '_Bool' '='
    | |-DeclRefExpr 0x563c31c20520 <col:3> '_Bool' lvalue Var 0x563c31c15e50 'b$r_buff1_thd0' '_Bool'
    | `-ImplicitCastExpr 0x563c31c207d0 <col:20, col:102> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x563c31c207a0 <col:20, col:102> 'int'
    |     |-BinaryOperator 0x563c31c206c0 <col:20, col:74> 'int' '||'
    |     | |-BinaryOperator 0x563c31c205e0 <col:20, col:38> 'int' '&&'
    |     | | |-ImplicitCastExpr 0x563c31c20598 <col:20> 'int' <IntegralCast>
    |     | | | `-ImplicitCastExpr 0x563c31c20580 <col:20> '_Bool' <LValueToRValue>
    |     | | |   `-DeclRefExpr 0x563c31c20540 <col:20> '_Bool' lvalue Var 0x563c31c16220 'b$w_buff0_used' '_Bool'
    |     | | `-ImplicitCastExpr 0x563c31c205c8 <col:38> 'int' <IntegralCast>
    |     | |   `-ImplicitCastExpr 0x563c31c205b0 <col:38> '_Bool' <LValueToRValue>
    |     | |     `-DeclRefExpr 0x563c31c20560 <col:38> '_Bool' lvalue Var 0x563c31c15bf8 'b$r_buff0_thd0' '_Bool'
    |     | `-BinaryOperator 0x563c31c206a0 <col:56, col:74> 'int' '&&'
    |     |   |-ImplicitCastExpr 0x563c31c20658 <col:56> 'int' <IntegralCast>
    |     |   | `-ImplicitCastExpr 0x563c31c20640 <col:56> '_Bool' <LValueToRValue>
    |     |   |   `-DeclRefExpr 0x563c31c20600 <col:56> '_Bool' lvalue Var 0x563c31c16318 'b$w_buff1_used' '_Bool'
    |     |   `-ImplicitCastExpr 0x563c31c20688 <col:74> 'int' <IntegralCast>
    |     |     `-ImplicitCastExpr 0x563c31c20670 <col:74> '_Bool' <LValueToRValue>
    |     |       `-DeclRefExpr 0x563c31c20620 <col:74> '_Bool' lvalue Var 0x563c31c15e50 'b$r_buff1_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x563c31c20758 <col:91, col:98> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x563c31c20710 <col:91, col:98> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x563c31c206e0 <col:98> 'int' 0
    |     `-ImplicitCastExpr 0x563c31c20788 <col:102> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x563c31c20770 <col:102> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x563c31c20738 <col:102> '_Bool' lvalue Var 0x563c31c15e50 'b$r_buff1_thd0' '_Bool'
    |-CallExpr 0x563c31c20840 <line:854:3, col:25> 'void'
    | `-ImplicitCastExpr 0x563c31c20828 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x563c31c20808 <col:3> 'void ()' Function 0x563c31bbbf00 '__VERIFIER_atomic_end' 'void ()'
    |-CallExpr 0x563c31c20898 <line:855:3, col:27> 'void'
    | `-ImplicitCastExpr 0x563c31c20880 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x563c31c20860 <col:3> 'void ()' Function 0x563c31bbbe40 '__VERIFIER_atomic_begin' 'void ()'
    |-BinaryOperator 0x563c31c20c20 <line:856:3, col:159> '_Bool' '='
    | |-DeclRefExpr 0x563c31c208b8 <col:3> '_Bool' lvalue Var 0x563c31c16408 'main$tmp_guard1' '_Bool'
    | `-ImplicitCastExpr 0x563c31c20c08 <col:21, col:159> '_Bool' <IntegralToBoolean>
    |   `-UnaryOperator 0x563c31c20bf0 <col:21, col:159> 'int' prefix '!' cannot overflow
    |     `-ParenExpr 0x563c31c20bd0 <col:22, col:159> 'int'
    |       `-BinaryOperator 0x563c31c20bb0 <col:23, col:158> 'int' '&&'
    |         |-BinaryOperator 0x563c31c20af8 <col:23, col:130> 'int' '&&'
    |         | |-BinaryOperator 0x563c31c20a60 <col:23, col:102> 'int' '&&'
    |         | | |-BinaryOperator 0x563c31c209c8 <col:23, col:74> 'int' '&&'
    |         | | | |-BinaryOperator 0x563c31c20930 <col:23, col:46> 'int' '=='
    |         | | | | |-ImplicitCastExpr 0x563c31c20918 <col:23> 'int' <LValueToRValue>
    |         | | | | | `-DeclRefExpr 0x563c31c208d8 <col:23> 'int' lvalue Var 0x563c31c15398 '__unbuffered_p0_EAX' 'int'
    |         | | | | `-IntegerLiteral 0x563c31c208f8 <col:46> 'int' 0
    |         | | | `-BinaryOperator 0x563c31c209a8 <col:51, col:74> 'int' '=='
    |         | | |   |-ImplicitCastExpr 0x563c31c20990 <col:51> 'int' <LValueToRValue>
    |         | | |   | `-DeclRefExpr 0x563c31c20950 <col:51> 'int' lvalue Var 0x563c31c154b8 '__unbuffered_p1_EAX' 'int'
    |         | | |   `-IntegerLiteral 0x563c31c20970 <col:74> 'int' 0
    |         | | `-BinaryOperator 0x563c31c20a40 <col:79, col:102> 'int' '=='
    |         | |   |-ImplicitCastExpr 0x563c31c20a28 <col:79> 'int' <LValueToRValue>
    |         | |   | `-DeclRefExpr 0x563c31c209e8 <col:79> 'int' lvalue Var 0x563c31c155d8 '__unbuffered_p2_EAX' 'int'
    |         | |   `-IntegerLiteral 0x563c31c20a08 <col:102> 'int' 0
    |         | `-BinaryOperator 0x563c31c20ad8 <col:107, col:130> 'int' '=='
    |         |   |-ImplicitCastExpr 0x563c31c20ac0 <col:107> 'int' <LValueToRValue>
    |         |   | `-DeclRefExpr 0x563c31c20a80 <col:107> 'int' lvalue Var 0x563c31c156f8 '__unbuffered_p3_EAX' 'int'
    |         |   `-IntegerLiteral 0x563c31c20aa0 <col:130> 'int' 1
    |         `-BinaryOperator 0x563c31c20b70 <col:135, col:158> 'int' '=='
    |           |-ImplicitCastExpr 0x563c31c20b58 <col:135> 'int' <LValueToRValue>
    |           | `-DeclRefExpr 0x563c31c20b18 <col:135> 'int' lvalue Var 0x563c31c15818 '__unbuffered_p3_EBX' 'int'
    |           `-IntegerLiteral 0x563c31c20b38 <col:158> 'int' 0
    |-CallExpr 0x563c31c20c78 <line:857:3, col:25> 'void'
    | `-ImplicitCastExpr 0x563c31c20c60 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x563c31c20c40 <col:3> 'void ()' Function 0x563c31bbbf00 '__VERIFIER_atomic_end' 'void ()'
    |-CallExpr 0x563c31c20cf0 <line:858:3, col:36> 'void'
    | |-ImplicitCastExpr 0x563c31c20cd8 <col:3> 'void (*)(int)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x563c31c20c98 <col:3> 'void (int)' Function 0x563c31bbbbc8 '__VERIFIER_assert' 'void (int)'
    | `-ImplicitCastExpr 0x563c31c20d30 <col:21> 'int' <IntegralCast>
    |   `-ImplicitCastExpr 0x563c31c20d18 <col:21> '_Bool' <LValueToRValue>
    |     `-DeclRefExpr 0x563c31c20cb8 <col:21> '_Bool' lvalue Var 0x563c31c16408 'main$tmp_guard1' '_Bool'
    `-ReturnStmt 0x563c31c20d68 <line:859:3, col:10>
      `-IntegerLiteral 0x563c31c20d48 <col:10> 'int' 0
