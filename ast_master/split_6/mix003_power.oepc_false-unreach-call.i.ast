TranslationUnitDecl 0x5584ea55ce18 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x5584ea55d6d8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x5584ea55d3b0 '__int128'
|-TypedefDecl 0x5584ea55d748 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x5584ea55d3d0 'unsigned __int128'
|-TypedefDecl 0x5584ea55da50 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x5584ea55d820 'struct __NSConstantString_tag'
|   `-Record 0x5584ea55d7a0 '__NSConstantString_tag'
|-TypedefDecl 0x5584ea55daf8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x5584ea55dab0 'char *'
|   `-BuiltinType 0x5584ea55ceb0 'char'
|-TypedefDecl 0x5584ea59c650 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'struct __va_list_tag [1]'
| `-ConstantArrayType 0x5584ea55dd90 'struct __va_list_tag [1]' 1 
|   `-RecordType 0x5584ea55dbd0 'struct __va_list_tag'
|     `-Record 0x5584ea55db50 '__va_list_tag'
|-FunctionDecl 0x5584ea59c790 <./split_6/mix003_power.oepc_false-unreach-call.i:1:1, col:34> col:13 used __VERIFIER_assume 'void (int)' extern
| `-ParmVarDecl 0x5584ea59c6c0 <col:31> col:34 'int'
|-FunctionDecl 0x5584ea59c958 <line:2:1, col:45> col:15 used __VERIFIER_nondet_pointer 'void *(void)' extern
|-FunctionDecl 0x5584ea59ca80 <line:3:1, col:61> col:13 used __VERIFIER_error 'void () __attribute__((noreturn))' extern
|-FunctionDecl 0x5584ea59cbc8 <line:4:1, col:99> col:6 used __VERIFIER_assert 'void (int)'
| |-ParmVarDecl 0x5584ea59cb38 <col:24, col:28> col:28 used expression 'int'
| `-CompoundStmt 0x5584ea59cdf8 <col:40, col:99>
|   |-IfStmt 0x5584ea59cdc8 <col:42, col:88>
|   | |-UnaryOperator 0x5584ea59cca8 <col:46, col:47> 'int' prefix '!' cannot overflow
|   | | `-ImplicitCastExpr 0x5584ea59cc90 <col:47> 'int' <LValueToRValue>
|   | |   `-DeclRefExpr 0x5584ea59cc70 <col:47> 'int' lvalue ParmVar 0x5584ea59cb38 'expression' 'int'
|   | `-CompoundStmt 0x5584ea59cdb0 <col:59, col:88>
|   |   `-LabelStmt 0x5584ea59cd98 <col:61, col:85> 'ERROR'
|   |     `-CallExpr 0x5584ea59cd28 <col:68, col:85> 'void'
|   |       `-ImplicitCastExpr 0x5584ea59cd10 <col:68> 'void (*)() __attribute__((noreturn))' <FunctionToPointerDecay>
|   |         `-DeclRefExpr 0x5584ea59ccc0 <col:68> 'void () __attribute__((noreturn))' Function 0x5584ea59ca80 '__VERIFIER_error' 'void () __attribute__((noreturn))'
|   |-NullStmt 0x5584ea59cde0 <col:89>
|   `-ReturnStmt 0x5584ea59cde8 <col:91>
|-FunctionDecl 0x5584ea59ce40 <line:5:1, col:37> col:13 used __VERIFIER_atomic_begin 'void ()' extern
|-FunctionDecl 0x5584ea59cf00 <line:6:1, col:35> col:13 used __VERIFIER_atomic_end 'void ()' extern
|-FunctionDecl 0x5584ea59d280 <line:8:1, line:10:76> line:8:13 __assert_fail 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x5584ea59cfb8 <col:28, col:40> col:40 __assertion 'const char *'
| |-ParmVarDecl 0x5584ea59d038 <col:53, col:65> col:65 __file 'const char *'
| |-ParmVarDecl 0x5584ea59d0b8 <line:9:7, col:20> col:20 __line 'unsigned int'
| |-ParmVarDecl 0x5584ea59d138 <col:28, col:40> col:40 __function 'const char *'
| `-NoThrowAttr 0x5584ea59d340 <line:10:22>
|-FunctionDecl 0x5584ea5c3390 <line:11:1, line:13:76> line:11:13 __assert_perror_fail 'void (int, const char *, unsigned int, const char *) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x5584ea59d3b0 <col:35, col:39> col:39 __errnum 'int'
| |-ParmVarDecl 0x5584ea59d430 <col:49, col:61> col:61 __file 'const char *'
| |-ParmVarDecl 0x5584ea59d4b0 <line:12:7, col:20> col:20 __line 'unsigned int'
| |-ParmVarDecl 0x5584ea59d530 <col:28, col:40> col:40 __function 'const char *'
| `-NoThrowAttr 0x5584ea5c3450 <line:13:22>
|-FunctionDecl 0x5584ea5c3700 <line:14:1, line:15:76> line:14:13 __assert 'void (const char *, const char *, int) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x5584ea5c34c0 <col:23, col:35> col:35 __assertion 'const char *'
| |-ParmVarDecl 0x5584ea5c3540 <col:48, col:60> col:60 __file 'const char *'
| |-ParmVarDecl 0x5584ea5c35c0 <col:68, col:72> col:72 __line 'int'
| `-NoThrowAttr 0x5584ea5c37b8 <line:15:22>
|-TypedefDecl 0x5584ea5c3828 <line:17:1, col:23> col:23 __u_char 'unsigned char'
| `-BuiltinType 0x5584ea55cf70 'unsigned char'
|-TypedefDecl 0x5584ea5c3898 <line:18:1, col:28> col:28 __u_short 'unsigned short'
| `-BuiltinType 0x5584ea55cf90 'unsigned short'
|-TypedefDecl 0x5584ea5c3908 <line:19:1, col:22> col:22 __u_int 'unsigned int'
| `-BuiltinType 0x5584ea55cfb0 'unsigned int'
|-TypedefDecl 0x5584ea5c3978 <line:20:1, col:27> col:27 __u_long 'unsigned long'
| `-BuiltinType 0x5584ea55cfd0 'unsigned long'
|-TypedefDecl 0x5584ea5c39e8 <line:21:1, col:21> col:21 __int8_t 'signed char'
| `-BuiltinType 0x5584ea55ced0 'signed char'
|-TypedefDecl 0x5584ea5c3a58 <line:22:1, col:23> col:23 __uint8_t 'unsigned char'
| `-BuiltinType 0x5584ea55cf70 'unsigned char'
|-TypedefDecl 0x5584ea5c3ac8 <line:23:1, col:26> col:26 __int16_t 'short'
| `-BuiltinType 0x5584ea55cef0 'short'
|-TypedefDecl 0x5584ea5c3b38 <line:24:1, col:28> col:28 __uint16_t 'unsigned short'
| `-BuiltinType 0x5584ea55cf90 'unsigned short'
|-TypedefDecl 0x5584ea5c3ba8 <line:25:1, col:20> col:20 __int32_t 'int'
| `-BuiltinType 0x5584ea55cf10 'int'
|-TypedefDecl 0x5584ea5c3c18 <line:26:1, col:22> col:22 __uint32_t 'unsigned int'
| `-BuiltinType 0x5584ea55cfb0 'unsigned int'
|-TypedefDecl 0x5584ea5c3c88 <line:27:1, col:25> col:25 __int64_t 'long'
| `-BuiltinType 0x5584ea55cf30 'long'
|-TypedefDecl 0x5584ea5c3cf8 <line:28:1, col:27> col:27 referenced __uint64_t 'unsigned long'
| `-BuiltinType 0x5584ea55cfd0 'unsigned long'
|-TypedefDecl 0x5584ea5c3d68 <line:29:1, col:18> col:18 referenced __quad_t 'long'
| `-BuiltinType 0x5584ea55cf30 'long'
|-TypedefDecl 0x5584ea5c3dd8 <line:30:1, col:27> col:27 __u_quad_t 'unsigned long'
| `-BuiltinType 0x5584ea55cfd0 'unsigned long'
|-TypedefDecl 0x5584ea5c3e48 <line:31:1, col:27> col:27 __dev_t 'unsigned long'
| `-BuiltinType 0x5584ea55cfd0 'unsigned long'
|-TypedefDecl 0x5584ea5c3eb8 <line:32:1, col:22> col:22 __uid_t 'unsigned int'
| `-BuiltinType 0x5584ea55cfb0 'unsigned int'
|-TypedefDecl 0x5584ea5c3f28 <line:33:1, col:22> col:22 __gid_t 'unsigned int'
| `-BuiltinType 0x5584ea55cfb0 'unsigned int'
|-TypedefDecl 0x5584ea5c3f98 <line:34:1, col:27> col:27 __ino_t 'unsigned long'
| `-BuiltinType 0x5584ea55cfd0 'unsigned long'
|-TypedefDecl 0x5584ea5c4008 <line:35:1, col:27> col:27 __ino64_t 'unsigned long'
| `-BuiltinType 0x5584ea55cfd0 'unsigned long'
|-TypedefDecl 0x5584ea5c4078 <line:36:1, col:22> col:22 __mode_t 'unsigned int'
| `-BuiltinType 0x5584ea55cfb0 'unsigned int'
|-TypedefDecl 0x5584ea5c40e8 <line:37:1, col:27> col:27 __nlink_t 'unsigned long'
| `-BuiltinType 0x5584ea55cfd0 'unsigned long'
|-TypedefDecl 0x5584ea5c4158 <line:38:1, col:18> col:18 __off_t 'long'
| `-BuiltinType 0x5584ea55cf30 'long'
|-TypedefDecl 0x5584ea5c41c8 <line:39:1, col:18> col:18 referenced __off64_t 'long'
| `-BuiltinType 0x5584ea55cf30 'long'
|-TypedefDecl 0x5584ea5c4238 <line:40:1, col:13> col:13 referenced __pid_t 'int'
| `-BuiltinType 0x5584ea55cf10 'int'
|-RecordDecl 0x5584ea5c4290 <line:41:9, col:32> col:9 struct definition
| `-FieldDecl 0x5584ea5c4408 <col:18, col:29> col:22 __val 'int [2]'
|-TypedefDecl 0x5584ea5c44c0 <col:1, col:34> col:34 __fsid_t 'struct __fsid_t':'__fsid_t'
| `-ElaboratedType 0x5584ea5c4460 'struct __fsid_t' sugar
|   `-RecordType 0x5584ea5c4310 '__fsid_t'
|     `-Record 0x5584ea5c4290 ''
|-TypedefDecl 0x5584ea5c4548 <line:42:1, col:18> col:18 referenced __clock_t 'long'
| `-BuiltinType 0x5584ea55cf30 'long'
|-TypedefDecl 0x5584ea5c45b8 <line:43:1, col:27> col:27 __rlim_t 'unsigned long'
| `-BuiltinType 0x5584ea55cfd0 'unsigned long'
|-TypedefDecl 0x5584ea5c4628 <line:44:1, col:27> col:27 __rlim64_t 'unsigned long'
| `-BuiltinType 0x5584ea55cfd0 'unsigned long'
|-TypedefDecl 0x5584ea5c4698 <line:45:1, col:22> col:22 __id_t 'unsigned int'
| `-BuiltinType 0x5584ea55cfb0 'unsigned int'
|-TypedefDecl 0x5584ea5c4708 <line:46:1, col:18> col:18 referenced __time_t 'long'
| `-BuiltinType 0x5584ea55cf30 'long'
|-TypedefDecl 0x5584ea5c4778 <line:47:1, col:22> col:22 __useconds_t 'unsigned int'
| `-BuiltinType 0x5584ea55cfb0 'unsigned int'
|-TypedefDecl 0x5584ea5c47e8 <line:48:1, col:18> col:18 __suseconds_t 'long'
| `-BuiltinType 0x5584ea55cf30 'long'
|-TypedefDecl 0x5584ea5c4858 <line:49:1, col:13> col:13 __daddr_t 'int'
| `-BuiltinType 0x5584ea55cf10 'int'
|-TypedefDecl 0x5584ea5c48c8 <line:50:1, col:13> col:13 __key_t 'int'
| `-BuiltinType 0x5584ea55cf10 'int'
|-TypedefDecl 0x5584ea5c4938 <line:51:1, col:13> col:13 referenced __clockid_t 'int'
| `-BuiltinType 0x5584ea55cf10 'int'
|-TypedefDecl 0x5584ea5c49a8 <line:52:1, col:16> col:16 referenced __timer_t 'void *'
| `-PointerType 0x5584ea55d630 'void *'
|   `-BuiltinType 0x5584ea55ce70 'void'
|-TypedefDecl 0x5584ea5c4a18 <line:53:1, col:18> col:18 __blksize_t 'long'
| `-BuiltinType 0x5584ea55cf30 'long'
|-TypedefDecl 0x5584ea5c4a88 <line:54:1, col:18> col:18 __blkcnt_t 'long'
| `-BuiltinType 0x5584ea55cf30 'long'
|-TypedefDecl 0x5584ea5c4af8 <line:55:1, col:18> col:18 __blkcnt64_t 'long'
| `-BuiltinType 0x5584ea55cf30 'long'
|-TypedefDecl 0x5584ea5c4b68 <line:56:1, col:27> col:27 __fsblkcnt_t 'unsigned long'
| `-BuiltinType 0x5584ea55cfd0 'unsigned long'
|-TypedefDecl 0x5584ea5c4bd8 <line:57:1, col:27> col:27 __fsblkcnt64_t 'unsigned long'
| `-BuiltinType 0x5584ea55cfd0 'unsigned long'
|-TypedefDecl 0x5584ea5c4c48 <line:58:1, col:27> col:27 __fsfilcnt_t 'unsigned long'
| `-BuiltinType 0x5584ea55cfd0 'unsigned long'
|-TypedefDecl 0x5584ea5c4cb8 <line:59:1, col:27> col:27 __fsfilcnt64_t 'unsigned long'
| `-BuiltinType 0x5584ea55cfd0 'unsigned long'
|-TypedefDecl 0x5584ea5c4d28 <line:60:1, col:18> col:18 __fsword_t 'long'
| `-BuiltinType 0x5584ea55cf30 'long'
|-TypedefDecl 0x5584ea5c4d98 <line:61:1, col:18> col:18 __ssize_t 'long'
| `-BuiltinType 0x5584ea55cf30 'long'
|-TypedefDecl 0x5584ea5c4e08 <line:62:1, col:18> col:18 referenced __syscall_slong_t 'long'
| `-BuiltinType 0x5584ea55cf30 'long'
|-TypedefDecl 0x5584ea5c4e78 <line:63:1, col:27> col:27 __syscall_ulong_t 'unsigned long'
| `-BuiltinType 0x5584ea55cfd0 'unsigned long'
|-TypedefDecl 0x5584ea5c4f08 <line:64:1, col:19> col:19 __loff_t '__off64_t':'long'
| `-TypedefType 0x5584ea5c4ed0 '__off64_t' sugar
|   |-Typedef 0x5584ea5c41c8 '__off64_t'
|   `-BuiltinType 0x5584ea55cf30 'long'
|-TypedefDecl 0x5584ea5c5000 <line:65:1, col:19> col:19 __qaddr_t '__quad_t *'
| `-PointerType 0x5584ea5c4fc0 '__quad_t *'
|   `-TypedefType 0x5584ea5c4f60 '__quad_t' sugar
|     |-Typedef 0x5584ea5c3d68 '__quad_t'
|     `-BuiltinType 0x5584ea55cf30 'long'
|-TypedefDecl 0x5584ea5c5070 <line:66:1, col:15> col:15 __caddr_t 'char *'
| `-PointerType 0x5584ea55dab0 'char *'
|   `-BuiltinType 0x5584ea55ceb0 'char'
|-TypedefDecl 0x5584ea5c50e0 <line:67:1, col:18> col:18 __intptr_t 'long'
| `-BuiltinType 0x5584ea55cf30 'long'
|-TypedefDecl 0x5584ea5c5150 <line:68:1, col:22> col:22 __socklen_t 'unsigned int'
| `-BuiltinType 0x5584ea55cfb0 'unsigned int'
|-FunctionDecl 0x5584ea5c5298 <line:69:1, line:73:1> line:70:1 __bswap_32 'unsigned int (unsigned int)' static inline
| |-ParmVarDecl 0x5584ea5c51c0 <col:13, col:26> col:26 used __bsx 'unsigned int'
| `-CompoundStmt 0x5584ea5c65e8 <line:71:1, line:73:1>
|   `-ReturnStmt 0x5584ea5c65d8 <line:72:3, col:34>
|     `-CallExpr 0x5584ea5c6598 <col:10, col:34> 'unsigned int'
|       |-ImplicitCastExpr 0x5584ea5c6580 <col:10> 'unsigned int (*)(unsigned int)' <BuiltinFnToFnPtr>
|       | `-DeclRefExpr 0x5584ea5c6510 <col:10> '<builtin fn type>' Function 0x5584ea5c6380 '__builtin_bswap32' 'unsigned int (unsigned int)'
|       `-ImplicitCastExpr 0x5584ea5c65c0 <col:29> 'unsigned int' <LValueToRValue>
|         `-DeclRefExpr 0x5584ea5c6530 <col:29> 'unsigned int' lvalue ParmVar 0x5584ea5c51c0 '__bsx' 'unsigned int'
|-FunctionDecl 0x5584ea5c6380 <col:10> col:10 implicit used __builtin_bswap32 'unsigned int (unsigned int)' extern
| |-ParmVarDecl 0x5584ea5c6420 <<invalid sloc>> <invalid sloc> 'unsigned int'
| |-NoThrowAttr 0x5584ea5c6490 <col:10> Implicit
| `-ConstAttr 0x5584ea5c64e8 <col:10> Implicit
|-FunctionDecl 0x5584ea5c6740 <line:74:1, line:78:1> line:75:1 __bswap_64 '__uint64_t (__uint64_t)' static inline
| |-ParmVarDecl 0x5584ea5c6638 <col:13, col:24> col:24 used __bsx '__uint64_t':'unsigned long'
| `-CompoundStmt 0x5584ea5c6a58 <line:76:1, line:78:1>
|   `-ReturnStmt 0x5584ea5c6a48 <line:77:3, col:34>
|     `-CallExpr 0x5584ea5c6a08 <col:10, col:34> 'unsigned long'
|       |-ImplicitCastExpr 0x5584ea5c69f0 <col:10> 'unsigned long (*)(unsigned long)' <BuiltinFnToFnPtr>
|       | `-DeclRefExpr 0x5584ea5c6978 <col:10> '<builtin fn type>' Function 0x5584ea5c67e8 '__builtin_bswap64' 'unsigned long (unsigned long)'
|       `-ImplicitCastExpr 0x5584ea5c6a30 <col:29> '__uint64_t':'unsigned long' <LValueToRValue>
|         `-DeclRefExpr 0x5584ea5c6998 <col:29> '__uint64_t':'unsigned long' lvalue ParmVar 0x5584ea5c6638 '__bsx' '__uint64_t':'unsigned long'
|-FunctionDecl 0x5584ea5c67e8 <col:10> col:10 implicit used __builtin_bswap64 'unsigned long (unsigned long)' extern
| |-ParmVarDecl 0x5584ea5c6888 <<invalid sloc>> <invalid sloc> 'unsigned long'
| |-NoThrowAttr 0x5584ea5c68f8 <col:10> Implicit
| `-ConstAttr 0x5584ea5c6950 <col:10> Implicit
|-TypedefDecl 0x5584ea5c6a88 <line:79:1, col:27> col:27 referenced size_t 'unsigned long'
| `-BuiltinType 0x5584ea55cfd0 'unsigned long'
|-TypedefDecl 0x5584ea5c6b18 <line:81:1, col:18> col:18 referenced time_t '__time_t':'long'
| `-TypedefType 0x5584ea5c6ae0 '__time_t' sugar
|   |-Typedef 0x5584ea5c4708 '__time_t'
|   `-BuiltinType 0x5584ea55cf30 'long'
|-RecordDecl 0x5584ea5c6b70 <line:84:1, line:88:3> line:84:8 struct timespec definition
| |-FieldDecl 0x5584ea5c6c28 <line:86:5, col:14> col:14 tv_sec '__time_t':'long'
| `-FieldDecl 0x5584ea5c6cb8 <line:87:5, col:23> col:23 tv_nsec '__syscall_slong_t':'long'
|-TypedefDecl 0x5584ea5c6d48 <line:89:1, col:17> col:17 referenced pid_t '__pid_t':'int'
| `-TypedefType 0x5584ea5c6d10 '__pid_t' sugar
|   |-Typedef 0x5584ea5c4238 '__pid_t'
|   `-BuiltinType 0x5584ea55cf10 'int'
|-RecordDecl 0x5584ea5c6da0 <line:90:1, line:93:3> line:90:8 struct sched_param definition
| `-FieldDecl 0x5584ea5c6e60 <line:92:5, col:9> col:9 __sched_priority 'int'
|-RecordDecl 0x5584ea5c6eb0 <line:96:1, line:99:3> line:96:8 struct __sched_param definition
| `-FieldDecl 0x5584ea5c6f70 <line:98:5, col:9> col:9 __sched_priority 'int'
|-TypedefDecl 0x5584ea5c6fd8 <line:100:1, col:27> col:27 referenced __cpu_mask 'unsigned long'
| `-BuiltinType 0x5584ea55cfd0 'unsigned long'
|-RecordDecl 0x5584ea5c7030 <line:101:9, line:104:1> line:101:9 struct definition
| `-FieldDecl 0x5584ea5c72c0 <line:103:3, col:53> col:14 __bits '__cpu_mask [64]'
|-TypedefDecl 0x5584ea5c83a0 <line:101:1, line:104:3> col:3 referenced cpu_set_t 'struct cpu_set_t':'cpu_set_t'
| `-ElaboratedType 0x5584ea5c7310 'struct cpu_set_t' sugar
|   `-RecordType 0x5584ea5c70b0 'cpu_set_t'
|     `-Record 0x5584ea5c7030 ''
|-FunctionDecl 0x5584ea5c8678 <line:106:1, line:107:42> line:106:12 __sched_cpucount 'int (size_t, const cpu_set_t *)' extern
| |-ParmVarDecl 0x5584ea5c8448 <col:30, col:37> col:37 __setsize 'size_t':'unsigned long'
| |-ParmVarDecl 0x5584ea5c8550 <col:48, col:65> col:65 __setp 'const cpu_set_t *'
| `-NoThrowAttr 0x5584ea5c8728 <line:107:19>
|-FunctionDecl 0x5584ea5c8900 <line:108:1, col:92> col:19 __sched_cpualloc 'cpu_set_t *(size_t)' extern
| |-ParmVarDecl 0x5584ea5c8790 <col:37, col:44> col:44 __count 'size_t':'unsigned long'
| `-NoThrowAttr 0x5584ea5c89a8 <col:69>
|-FunctionDecl 0x5584ea5c8b20 <line:109:1, col:87> col:13 __sched_cpufree 'void (cpu_set_t *)' extern
| |-ParmVarDecl 0x5584ea5c8a10 <col:30, col:41> col:41 __set 'cpu_set_t *'
| `-NoThrowAttr 0x5584ea5c8bc8 <col:64>
|-FunctionDecl 0x5584ea5c8e88 <line:112:1, line:113:45> line:112:12 sched_setparam 'int (__pid_t, const struct sched_param *)' extern
| |-ParmVarDecl 0x5584ea5c8c30 <col:28, col:36> col:36 __pid '__pid_t':'int'
| |-ParmVarDecl 0x5584ea5c8d68 <col:43, col:69> col:69 __param 'const struct sched_param *'
| `-NoThrowAttr 0x5584ea5c8f38 <line:113:22>
|-FunctionDecl 0x5584ea5c91b8 <line:114:1, col:111> col:12 sched_getparam 'int (__pid_t, struct sched_param *)' extern
| |-ParmVarDecl 0x5584ea5c8fa0 <col:28, col:36> col:36 __pid '__pid_t':'int'
| |-ParmVarDecl 0x5584ea5c9098 <col:43, col:63> col:63 __param 'struct sched_param *'
| `-NoThrowAttr 0x5584ea5c9268 <col:88>
|-FunctionDecl 0x5584ea5c9588 <line:115:1, line:116:85> line:115:12 sched_setscheduler 'int (__pid_t, int, const struct sched_param *)' extern
| |-ParmVarDecl 0x5584ea5c92d0 <col:32, col:40> col:40 __pid '__pid_t':'int'
| |-ParmVarDecl 0x5584ea5c93b0 <col:47, col:51> col:51 __policy 'int'
| |-ParmVarDecl 0x5584ea5c9440 <line:116:11, col:37> col:37 __param 'const struct sched_param *'
| `-NoThrowAttr 0x5584ea5c9640 <col:62>
|-FunctionDecl 0x5584ea5c97b8 <line:117:1, col:86> col:12 sched_getscheduler 'int (__pid_t)' extern
| |-ParmVarDecl 0x5584ea5c96a8 <col:32, col:40> col:40 __pid '__pid_t':'int'
| `-NoThrowAttr 0x5584ea5c9860 <col:63>
|-FunctionDecl 0x5584ea5c9988 <line:118:1, col:70> col:12 sched_yield 'int (void)' extern
| `-NoThrowAttr 0x5584ea5c9a28 <col:47>
|-FunctionDecl 0x5584ea5c9b30 <line:119:1, col:92> col:12 sched_get_priority_max 'int (int)' extern
| |-ParmVarDecl 0x5584ea5c9a98 <col:36, col:40> col:40 __algorithm 'int'
| `-NoThrowAttr 0x5584ea5c9bd8 <col:69>
|-FunctionDecl 0x5584ea5c9ce0 <line:120:1, col:92> col:12 sched_get_priority_min 'int (int)' extern
| |-ParmVarDecl 0x5584ea5c9c48 <col:36, col:40> col:40 __algorithm 'int'
| `-NoThrowAttr 0x5584ea5c9d88 <col:69>
|-FunctionDecl 0x5584ea5ca048 <line:121:1, col:111> col:12 sched_rr_get_interval 'int (__pid_t, struct timespec *)' extern
| |-ParmVarDecl 0x5584ea5c9df0 <col:35, col:43> col:43 __pid '__pid_t':'int'
| |-ParmVarDecl 0x5584ea5c9f28 <col:50, col:67> col:67 __t 'struct timespec *'
| `-NoThrowAttr 0x5584ea5ca0f8 <col:88>
|-TypedefDecl 0x5584ea5ca188 <line:125:1, col:19> col:19 referenced clock_t '__clock_t':'long'
| `-TypedefType 0x5584ea5ca150 '__clock_t' sugar
|   |-Typedef 0x5584ea5c4548 '__clock_t'
|   `-BuiltinType 0x5584ea55cf30 'long'
|-TypedefDecl 0x5584ea5ca218 <line:128:1, col:21> col:21 referenced clockid_t '__clockid_t':'int'
| `-TypedefType 0x5584ea5ca1e0 '__clockid_t' sugar
|   |-Typedef 0x5584ea5c4938 '__clockid_t'
|   `-BuiltinType 0x5584ea55cf10 'int'
|-TypedefDecl 0x5584ea5ca2a8 <line:129:1, col:19> col:19 referenced timer_t '__timer_t':'void *'
| `-TypedefType 0x5584ea5ca270 '__timer_t' sugar
|   |-Typedef 0x5584ea5c49a8 '__timer_t'
|   `-PointerType 0x5584ea55d630 'void *'
|     `-BuiltinType 0x5584ea55ce70 'void'
|-RecordDecl 0x5584ea5ca300 <line:131:1, line:144:1> line:131:8 struct tm definition
| |-FieldDecl 0x5584ea5ca3d8 <line:133:3, col:7> col:7 tm_sec 'int'
| |-FieldDecl 0x5584ea5ca440 <line:134:3, col:7> col:7 tm_min 'int'
| |-FieldDecl 0x5584ea5ca4a8 <line:135:3, col:7> col:7 tm_hour 'int'
| |-FieldDecl 0x5584ea5ca510 <line:136:3, col:7> col:7 tm_mday 'int'
| |-FieldDecl 0x5584ea5ca578 <line:137:3, col:7> col:7 tm_mon 'int'
| |-FieldDecl 0x5584ea5ca5e0 <line:138:3, col:7> col:7 tm_year 'int'
| |-FieldDecl 0x5584ea5ca648 <line:139:3, col:7> col:7 tm_wday 'int'
| |-FieldDecl 0x5584ea5ca6b0 <line:140:3, col:7> col:7 tm_yday 'int'
| |-FieldDecl 0x5584ea5ca718 <line:141:3, col:7> col:7 tm_isdst 'int'
| |-FieldDecl 0x5584ea5ca780 <line:142:3, col:12> col:12 tm_gmtoff 'long'
| `-FieldDecl 0x5584ea5ca7e8 <line:143:3, col:15> col:15 tm_zone 'const char *'
|-RecordDecl 0x5584ea5ca838 <line:147:1, line:151:3> line:147:8 struct itimerspec definition
| |-FieldDecl 0x5584ea5ca908 <line:149:5, col:21> col:21 it_interval 'struct timespec':'struct timespec'
| `-FieldDecl 0x5584ea5ca978 <line:150:5, col:21> col:21 it_value 'struct timespec':'struct timespec'
|-RecordDecl 0x5584ea5caa20 <line:152:1, col:8> col:8 struct sigevent
|-FunctionDecl 0x5584ea5cabf0 <line:154:1, col:68> col:16 clock 'clock_t (void)' extern
| `-NoThrowAttr 0x5584ea5cac90 <col:45>
|-FunctionDecl 0x5584ea5cae70 <line:155:1, col:77> col:15 time 'time_t (time_t *)' extern
| |-ParmVarDecl 0x5584ea5cad60 <col:21, col:29> col:29 __timer 'time_t *'
| `-NoThrowAttr 0x5584ea5caf18 <col:54>
|-FunctionDecl 0x5584ea5cb118 <line:156:1, line:157:73> line:156:15 difftime 'double (time_t, time_t)' extern
| |-ParmVarDecl 0x5584ea5caf80 <col:25, col:32> col:32 __time1 'time_t':'long'
| |-ParmVarDecl 0x5584ea5caff8 <col:41, col:48> col:48 __time0 'time_t':'long'
| |-NoThrowAttr 0x5584ea5cb1c8 <line:157:22>
| `-ConstAttr 0x5584ea5cb220 <col:63>
|-FunctionDecl 0x5584ea5cc050 <line:158:1, col:79> col:15 mktime 'time_t (struct tm *)' extern
| |-ParmVarDecl 0x5584ea5cb318 <col:23, col:34> col:34 __tp 'struct tm *'
| `-NoThrowAttr 0x5584ea5cc0f8 <col:56>
|-FunctionDecl 0x5584ea5cc4a0 <line:159:1, line:161:77> line:159:15 strftime 'size_t (char *restrict, size_t, const char *restrict, const struct tm *restrict)' extern
| |-ParmVarDecl 0x5584ea5cc168 <col:25, col:42> col:42 __s 'char *restrict'
| |-ParmVarDecl 0x5584ea5cc1e0 <col:47, col:54> col:54 __maxsize 'size_t':'unsigned long'
| |-ParmVarDecl 0x5584ea5cc260 <line:160:4, col:27> col:27 __format 'const char *restrict'
| |-ParmVarDecl 0x5584ea5cc358 <line:161:4, col:32> col:32 __tp 'const struct tm *restrict'
| `-NoThrowAttr 0x5584ea5cc560 <col:54>
|-RecordDecl 0x5584ea5cc5b8 <line:163:9, line:170:1> line:163:16 struct __locale_struct definition
| |-RecordDecl 0x5584ea5cc668 parent 0x5584ea55ce18 <line:165:3, col:10> col:10 struct __locale_data
| |-FieldDecl 0x5584ea5cc8c8 <col:3, col:37> col:25 __locales 'struct __locale_data *[13]'
| |-FieldDecl 0x5584ea5cc968 <line:166:3, col:29> col:29 __ctype_b 'const unsigned short *'
| |-FieldDecl 0x5584ea5cc9d0 <line:167:3, col:14> col:14 __ctype_tolower 'const int *'
| |-FieldDecl 0x5584ea5cca38 <line:168:3, col:14> col:14 __ctype_toupper 'const int *'
| `-FieldDecl 0x5584ea5ccb28 <line:169:3, col:25> col:15 __names 'const char *[13]'
|-TypedefDecl 0x5584ea5ccc48 <line:163:1, line:170:4> col:4 referenced __locale_t 'struct __locale_struct *'
| `-PointerType 0x5584ea5ccbf0 'struct __locale_struct *'
|   `-ElaboratedType 0x5584ea5ccb80 'struct __locale_struct' sugar
|     `-RecordType 0x5584ea5cc640 'struct __locale_struct'
|       `-Record 0x5584ea5cc5b8 '__locale_struct'
|-TypedefDecl 0x5584ea5cccf8 <line:171:1, col:20> col:20 locale_t '__locale_t':'struct __locale_struct *'
| `-TypedefType 0x5584ea5cccc0 '__locale_t' sugar
|   |-Typedef 0x5584ea5ccc48 '__locale_t'
|   `-PointerType 0x5584ea5ccbf0 'struct __locale_struct *'
|     `-ElaboratedType 0x5584ea5ccb80 'struct __locale_struct' sugar
|       `-RecordType 0x5584ea5cc640 'struct __locale_struct'
|         `-Record 0x5584ea5cc5b8 '__locale_struct'
|-FunctionDecl 0x5584ea5ce110 <line:172:1, line:175:63> line:172:15 strftime_l 'size_t (char *restrict, size_t, const char *restrict, const struct tm *restrict, __locale_t)' extern
| |-ParmVarDecl 0x5584ea5ccd68 <col:27, col:44> col:44 __s 'char *restrict'
| |-ParmVarDecl 0x5584ea5ccde0 <col:49, col:56> col:56 __maxsize 'size_t':'unsigned long'
| |-ParmVarDecl 0x5584ea5cce60 <line:173:6, col:29> col:29 __format 'const char *restrict'
| |-ParmVarDecl 0x5584ea5ccef0 <line:174:6, col:34> col:34 __tp 'const struct tm *restrict'
| |-ParmVarDecl 0x5584ea5ccf68 <line:175:6, col:17> col:17 __loc '__locale_t':'struct __locale_struct *'
| `-NoThrowAttr 0x5584ea5ce1d8 <col:40>
|-FunctionDecl 0x5584ea5ce3c8 <line:177:1, col:89> col:19 gmtime 'struct tm *(const time_t *)' extern
| |-ParmVarDecl 0x5584ea5ce2a0 <col:27, col:41> col:41 __timer 'const time_t *'
| `-NoThrowAttr 0x5584ea5ce470 <col:66>
|-FunctionDecl 0x5584ea5ce580 <line:178:1, col:92> col:19 localtime 'struct tm *(const time_t *)' extern
| |-ParmVarDecl 0x5584ea5ce4d8 <col:30, col:44> col:44 __timer 'const time_t *'
| `-NoThrowAttr 0x5584ea5ce628 <col:69>
|-FunctionDecl 0x5584ea5ce858 <line:180:1, line:181:75> line:180:19 gmtime_r 'struct tm *(const time_t *restrict, struct tm *restrict)' extern
| |-ParmVarDecl 0x5584ea5ce690 <col:29, col:54> col:54 __timer 'const time_t *restrict'
| |-ParmVarDecl 0x5584ea5ce720 <line:181:8, col:30> col:30 __tp 'struct tm *restrict'
| `-NoThrowAttr 0x5584ea5ce908 <col:52>
|-FunctionDecl 0x5584ea5ceab0 <line:182:1, line:183:78> line:182:19 localtime_r 'struct tm *(const time_t *restrict, struct tm *restrict)' extern
| |-ParmVarDecl 0x5584ea5ce970 <col:32, col:57> col:57 __timer 'const time_t *restrict'
| |-ParmVarDecl 0x5584ea5cea00 <line:183:11, col:33> col:33 __tp 'struct tm *restrict'
| `-NoThrowAttr 0x5584ea5ceb60 <col:55>
|-FunctionDecl 0x5584ea5cecf8 <line:185:1, col:85> col:14 asctime 'char *(const struct tm *)' extern
| |-ParmVarDecl 0x5584ea5cebe0 <col:23, col:40> col:40 __tp 'const struct tm *'
| `-NoThrowAttr 0x5584ea5ceda0 <col:62>
|-FunctionDecl 0x5584ea5cef18 <line:186:1, col:83> col:14 ctime 'char *(const time_t *)' extern
| |-ParmVarDecl 0x5584ea5cee08 <col:21, col:35> col:35 __timer 'const time_t *'
| `-NoThrowAttr 0x5584ea5cefc0 <col:60>
|-FunctionDecl 0x5584ea5cf2b8 <line:188:1, line:189:67> line:188:14 asctime_r 'char *(const struct tm *restrict, char *restrict)' extern
| |-ParmVarDecl 0x5584ea5cf118 <col:25, col:53> col:53 __tp 'const struct tm *restrict'
| |-ParmVarDecl 0x5584ea5cf198 <line:189:4, col:21> col:21 __buf 'char *restrict'
| `-NoThrowAttr 0x5584ea5cf368 <col:44>
|-FunctionDecl 0x5584ea5cf578 <line:190:1, line:191:72> line:190:14 ctime_r 'char *(const time_t *restrict, char *restrict)' extern
| |-ParmVarDecl 0x5584ea5cf3d0 <col:23, col:48> col:48 __timer 'const time_t *restrict'
| |-ParmVarDecl 0x5584ea5cf450 <line:191:9, col:26> col:26 __buf 'char *restrict'
| `-NoThrowAttr 0x5584ea5cf628 <col:49>
|-VarDecl 0x5584ea5cf728 <line:192:1, col:24> col:14 __tzname 'char *[2]' extern
|-VarDecl 0x5584ea5cf7a8 <line:193:1, col:12> col:12 __daylight 'int' extern
|-VarDecl 0x5584ea5cf828 <line:194:1, col:17> col:17 __timezone 'long' extern
|-VarDecl 0x5584ea5cf8f0 <line:195:1, col:22> col:14 tzname 'char *[2]' extern
|-FunctionDecl 0x5584ea5cfa20 <line:196:1, col:65> col:13 tzset 'void (void)' extern
| `-NoThrowAttr 0x5584ea5cfac0 <col:42>
|-VarDecl 0x5584ea5cfb30 <line:197:1, col:12> col:12 daylight 'int' extern
|-VarDecl 0x5584ea5cfbb0 <line:198:1, col:17> col:17 timezone 'long' extern
|-FunctionDecl 0x5584ea5cfd38 <line:199:1, col:80> col:12 stime 'int (const time_t *)' extern
| |-ParmVarDecl 0x5584ea5cfc28 <col:19, col:33> col:33 __when 'const time_t *'
| `-NoThrowAttr 0x5584ea5cfde0 <col:57>
|-FunctionDecl 0x5584ea5cfef0 <line:200:1, col:79> col:15 timegm 'time_t (struct tm *)' extern
| |-ParmVarDecl 0x5584ea5cfe60 <col:23, col:34> col:34 __tp 'struct tm *'
| `-NoThrowAttr 0x5584ea5cff98 <col:56>
|-FunctionDecl 0x5584ea5d00d0 <line:201:1, col:82> col:15 timelocal 'time_t (struct tm *)' extern
| |-ParmVarDecl 0x5584ea5d0018 <col:26, col:37> col:37 __tp 'struct tm *'
| `-NoThrowAttr 0x5584ea5d0178 <col:59>
|-FunctionDecl 0x5584ea5d0280 <line:202:1, col:99> col:12 dysize 'int (int)' extern
| |-ParmVarDecl 0x5584ea5d01e8 <col:20, col:24> col:24 __year 'int'
| |-NoThrowAttr 0x5584ea5d0328 <col:48>
| `-ConstAttr 0x5584ea5d0380 <col:89>
|-FunctionDecl 0x5584ea5d05e8 <line:203:1, line:204:37> line:203:12 nanosleep 'int (const struct timespec *, struct timespec *)' extern
| |-ParmVarDecl 0x5584ea5d0438 <col:23, col:46> col:46 __requested_time 'const struct timespec *'
| `-ParmVarDecl 0x5584ea5d04c8 <line:204:9, col:26> col:26 __remaining 'struct timespec *'
|-FunctionDecl 0x5584ea5d0848 <line:205:1, col:111> col:12 clock_getres 'int (clockid_t, struct timespec *)' extern
| |-ParmVarDecl 0x5584ea5d06d8 <col:26, col:36> col:36 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x5584ea5d0768 <col:48, col:65> col:65 __res 'struct timespec *'
| `-NoThrowAttr 0x5584ea5d08f8 <col:88>
|-FunctionDecl 0x5584ea5d0a90 <line:206:1, col:111> col:12 clock_gettime 'int (clockid_t, struct timespec *)' extern
| |-ParmVarDecl 0x5584ea5d0960 <col:27, col:37> col:37 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x5584ea5d09f0 <col:49, col:66> col:66 __tp 'struct timespec *'
| `-NoThrowAttr 0x5584ea5d0b40 <col:88>
|-FunctionDecl 0x5584ea5d0d58 <line:207:1, line:208:45> line:207:12 clock_settime 'int (clockid_t, const struct timespec *)' extern
| |-ParmVarDecl 0x5584ea5d0ba8 <col:27, col:37> col:37 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x5584ea5d0c38 <col:49, col:72> col:72 __tp 'const struct timespec *'
| `-NoThrowAttr 0x5584ea5d0e08 <line:208:22>
|-FunctionDecl 0x5584ea5d1178 <line:209:1, line:211:30> line:209:12 clock_nanosleep 'int (clockid_t, int, const struct timespec *, struct timespec *)' extern
| |-ParmVarDecl 0x5584ea5d0e70 <col:29, col:39> col:39 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x5584ea5d0ef0 <col:51, col:55> col:55 __flags 'int'
| |-ParmVarDecl 0x5584ea5d0f80 <line:210:8, col:31> col:31 __req 'const struct timespec *'
| `-ParmVarDecl 0x5584ea5d1010 <line:211:8, col:25> col:25 __rem 'struct timespec *'
|-FunctionDecl 0x5584ea5d1478 <line:212:1, col:108> col:12 clock_getcpuclockid 'int (pid_t, clockid_t *)' extern
| |-ParmVarDecl 0x5584ea5d1278 <col:33, col:39> col:39 __pid 'pid_t':'int'
| |-ParmVarDecl 0x5584ea5d1350 <col:46, col:57> col:57 __clock_id 'clockid_t *'
| `-NoThrowAttr 0x5584ea5d1528 <col:85>
|-FunctionDecl 0x5584ea5d1918 <line:213:1, line:215:75> line:213:12 timer_create 'int (clockid_t, struct sigevent *restrict, timer_t *restrict)' extern
| |-ParmVarDecl 0x5584ea5d1590 <col:26, col:36> col:36 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x5584ea5d16c8 <line:214:5, col:33> col:33 __evp 'struct sigevent *restrict'
| |-ParmVarDecl 0x5584ea5d17d0 <line:215:5, col:25> col:25 __timerid 'timer_t *restrict'
| `-NoThrowAttr 0x5584ea5d19d0 <col:52>
|-FunctionDecl 0x5584ea5d1b48 <line:216:1, col:84> col:12 timer_delete 'int (timer_t)' extern
| |-ParmVarDecl 0x5584ea5d1a38 <col:26, col:34> col:34 __timerid 'timer_t':'void *'
| `-NoThrowAttr 0x5584ea5d1bf0 <col:61>
|-FunctionDecl 0x5584ea5d20f0 <line:217:1, line:219:85> line:217:12 timer_settime 'int (timer_t, int, const struct itimerspec *restrict, struct itimerspec *restrict)' extern
| |-ParmVarDecl 0x5584ea5d1c58 <col:27, col:35> col:35 __timerid 'timer_t':'void *'
| |-ParmVarDecl 0x5584ea5d1cd8 <col:46, col:50> col:50 __flags 'int'
| |-ParmVarDecl 0x5584ea5d1e08 <line:218:6, col:42> col:42 __value 'const struct itimerspec *restrict'
| |-ParmVarDecl 0x5584ea5d1ef8 <line:219:6, col:36> col:36 __ovalue 'struct itimerspec *restrict'
| `-NoThrowAttr 0x5584ea5d21b0 <col:62>
|-FunctionDecl 0x5584ea5d23c8 <line:220:1, line:221:45> line:220:12 timer_gettime 'int (timer_t, struct itimerspec *)' extern
| |-ParmVarDecl 0x5584ea5d2218 <col:27, col:35> col:35 __timerid 'timer_t':'void *'
| |-ParmVarDecl 0x5584ea5d22a8 <col:46, col:65> col:65 __value 'struct itimerspec *'
| `-NoThrowAttr 0x5584ea5d2478 <line:221:22>
|-FunctionDecl 0x5584ea5d2578 <line:222:1, col:88> col:12 timer_getoverrun 'int (timer_t)' extern
| |-ParmVarDecl 0x5584ea5d24e0 <col:30, col:38> col:38 __timerid 'timer_t':'void *'
| `-NoThrowAttr 0x5584ea5d2620 <col:65>
|-TypedefDecl 0x5584ea5d2690 <line:224:1, col:27> col:27 referenced pthread_t 'unsigned long'
| `-BuiltinType 0x5584ea55cfd0 'unsigned long'
|-RecordDecl 0x5584ea5d26e8 <line:225:1, line:229:1> line:225:7 union pthread_attr_t definition
| |-FieldDecl 0x5584ea5d2830 <line:227:3, col:17> col:8 __size 'char [56]'
| `-FieldDecl 0x5584ea5d2898 <line:228:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x5584ea5d2948 <line:230:1, col:30> col:30 referenced pthread_attr_t 'union pthread_attr_t':'union pthread_attr_t'
| `-ElaboratedType 0x5584ea5d28f0 'union pthread_attr_t' sugar
|   `-RecordType 0x5584ea5d2770 'union pthread_attr_t'
|     `-Record 0x5584ea5d26e8 'pthread_attr_t'
|-RecordDecl 0x5584ea5d29a0 <line:231:9, line:235:1> line:231:16 struct __pthread_internal_list definition
| |-FieldDecl 0x5584ea5d2b18 <line:233:3, col:35> col:35 __prev 'struct __pthread_internal_list *'
| `-FieldDecl 0x5584ea5d2b90 <line:234:3, col:35> col:35 __next 'struct __pthread_internal_list *'
|-TypedefDecl 0x5584ea5d2c40 <line:231:1, line:235:3> col:3 referenced __pthread_list_t 'struct __pthread_internal_list':'struct __pthread_internal_list'
| `-ElaboratedType 0x5584ea5d2be0 'struct __pthread_internal_list' sugar
|   `-RecordType 0x5584ea5d2a20 'struct __pthread_internal_list'
|     `-Record 0x5584ea5d29a0 '__pthread_internal_list'
|-RecordDecl 0x5584ea5d2cb0 <line:236:9, line:250:1> line:236:9 union definition
| |-RecordDecl 0x5584ea5d2d58 parent 0x5584ea55ce18 <line:238:3, line:247:3> line:238:10 struct __pthread_mutex_s definition
| | |-FieldDecl 0x5584ea5d2e30 <line:240:5, col:9> col:9 __lock 'int'
| | |-FieldDecl 0x5584ea5d2e98 <line:241:5, col:18> col:18 __count 'unsigned int'
| | |-FieldDecl 0x5584ea5d2f00 <line:242:5, col:9> col:9 __owner 'int'
| | |-FieldDecl 0x5584ea5d2f68 <line:243:5, col:18> col:18 __nusers 'unsigned int'
| | |-FieldDecl 0x5584ea5d2fd0 <line:244:5, col:9> col:9 __kind 'int'
| | |-FieldDecl 0x5584ea5d3038 <line:245:5, col:9> col:9 __spins 'int'
| | `-FieldDecl 0x5584ea5d7110 <line:246:5, col:22> col:22 __list '__pthread_list_t':'struct __pthread_internal_list'
| |-FieldDecl 0x5584ea5d71c0 <line:238:3, line:247:5> col:5 __data 'struct __pthread_mutex_s':'struct __pthread_mutex_s'
| |-FieldDecl 0x5584ea5d72b0 <line:248:3, col:17> col:8 __size 'char [40]'
| `-FieldDecl 0x5584ea5d7318 <line:249:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x5584ea5d74a0 <line:236:1, line:250:3> col:3 referenced pthread_mutex_t 'union pthread_mutex_t':'pthread_mutex_t'
| `-ElaboratedType 0x5584ea5d7440 'union pthread_mutex_t' sugar
|   `-RecordType 0x5584ea5d2d30 'pthread_mutex_t'
|     `-Record 0x5584ea5d2cb0 ''
|-RecordDecl 0x5584ea5d7510 <line:251:9, line:255:1> line:251:9 union definition
| |-FieldDecl 0x5584ea5d7650 <line:253:3, col:16> col:8 __size 'char [4]'
| `-FieldDecl 0x5584ea5d76b8 <line:254:3, col:7> col:7 __align 'int'
|-TypedefDecl 0x5584ea5d7770 <line:251:1, line:255:3> col:3 referenced pthread_mutexattr_t 'union pthread_mutexattr_t':'pthread_mutexattr_t'
| `-ElaboratedType 0x5584ea5d7710 'union pthread_mutexattr_t' sugar
|   `-RecordType 0x5584ea5d7590 'pthread_mutexattr_t'
|     `-Record 0x5584ea5d7510 ''
|-RecordDecl 0x5584ea5d77e0 <line:256:9, line:271:1> line:256:9 union definition
| |-RecordDecl 0x5584ea5d7888 <line:258:3, line:268:3> line:258:3 struct definition
| | |-FieldDecl 0x5584ea5d7950 <line:260:5, col:9> col:9 __lock 'int'
| | |-FieldDecl 0x5584ea5d79b8 <line:261:5, col:18> col:18 __futex 'unsigned int'
| | |-FieldDecl 0x5584ea5d7a20 <line:262:19, col:42> col:42 __total_seq 'unsigned long long'
| | |-FieldDecl 0x5584ea5d7a88 <line:263:19, col:42> col:42 __wakeup_seq 'unsigned long long'
| | |-FieldDecl 0x5584ea5d7af0 <line:264:19, col:42> col:42 __woken_seq 'unsigned long long'
| | |-FieldDecl 0x5584ea5d7b58 <line:265:5, col:11> col:11 __mutex 'void *'
| | |-FieldDecl 0x5584ea5d7bc0 <line:266:5, col:18> col:18 __nwaiters 'unsigned int'
| | `-FieldDecl 0x5584ea5d7c28 <line:267:5, col:18> col:18 __broadcast_seq 'unsigned int'
| |-FieldDecl 0x5584ea5d7ce0 <line:258:3, line:268:5> col:5 __data 'struct (anonymous struct at ./split_6/mix003_power.oepc_false-unreach-call.i:258:3)':'struct pthread_cond_t::(anonymous at ./split_6/mix003_power.oepc_false-unreach-call.i:258:3)'
| |-FieldDecl 0x5584ea5d7dd0 <line:269:3, col:17> col:8 __size 'char [48]'
| `-FieldDecl 0x5584ea5d7e38 <line:270:17, col:31> col:31 __align 'long long'
|-TypedefDecl 0x5584ea5d7f70 <line:256:1, line:271:3> col:3 referenced pthread_cond_t 'union pthread_cond_t':'pthread_cond_t'
| `-ElaboratedType 0x5584ea5d7f10 'union pthread_cond_t' sugar
|   `-RecordType 0x5584ea5d7860 'pthread_cond_t'
|     `-Record 0x5584ea5d77e0 ''
|-RecordDecl 0x5584ea5d7fe0 <line:272:9, line:276:1> line:272:9 union definition
| |-FieldDecl 0x5584ea5d9130 <line:274:3, col:16> col:8 __size 'char [4]'
| `-FieldDecl 0x5584ea5d9198 <line:275:3, col:7> col:7 __align 'int'
|-TypedefDecl 0x5584ea5d9250 <line:272:1, line:276:3> col:3 referenced pthread_condattr_t 'union pthread_condattr_t':'pthread_condattr_t'
| `-ElaboratedType 0x5584ea5d91f0 'union pthread_condattr_t' sugar
|   `-RecordType 0x5584ea5d8060 'pthread_condattr_t'
|     `-Record 0x5584ea5d7fe0 ''
|-TypedefDecl 0x5584ea5d92d8 <line:277:1, col:22> col:22 referenced pthread_key_t 'unsigned int'
| `-BuiltinType 0x5584ea55cfb0 'unsigned int'
|-TypedefDecl 0x5584ea5d9348 <line:278:1, col:13> col:13 referenced pthread_once_t 'int'
| `-BuiltinType 0x5584ea55cf10 'int'
|-RecordDecl 0x5584ea5d93a0 <line:279:9, line:297:1> line:279:9 union definition
| |-RecordDecl 0x5584ea5d9448 <line:281:3, line:294:3> line:281:3 struct definition
| | |-FieldDecl 0x5584ea5d9510 <line:283:5, col:9> col:9 __lock 'int'
| | |-FieldDecl 0x5584ea5d9578 <line:284:5, col:18> col:18 __nr_readers 'unsigned int'
| | |-FieldDecl 0x5584ea5d95e0 <line:285:5, col:18> col:18 __readers_wakeup 'unsigned int'
| | |-FieldDecl 0x5584ea5d9648 <line:286:5, col:18> col:18 __writer_wakeup 'unsigned int'
| | |-FieldDecl 0x5584ea5d96b0 <line:287:5, col:18> col:18 __nr_readers_queued 'unsigned int'
| | |-FieldDecl 0x5584ea5d9718 <line:288:5, col:18> col:18 __nr_writers_queued 'unsigned int'
| | |-FieldDecl 0x5584ea5d9780 <line:289:5, col:9> col:9 __writer 'int'
| | |-FieldDecl 0x5584ea5d97e8 <line:290:5, col:9> col:9 __shared 'int'
| | |-FieldDecl 0x5584ea5d9850 <line:291:5, col:23> col:23 __pad1 'unsigned long'
| | |-FieldDecl 0x5584ea5d98b8 <line:292:5, col:23> col:23 __pad2 'unsigned long'
| | `-FieldDecl 0x5584ea5d9920 <line:293:5, col:18> col:18 __flags 'unsigned int'
| |-FieldDecl 0x5584ea5d99d0 <line:281:3, line:294:5> col:5 __data 'struct (anonymous struct at ./split_6/mix003_power.oepc_false-unreach-call.i:281:3)':'struct pthread_rwlock_t::(anonymous at ./split_6/mix003_power.oepc_false-unreach-call.i:281:3)'
| |-FieldDecl 0x5584ea5d9a78 <line:295:3, col:17> col:8 __size 'char [56]'
| `-FieldDecl 0x5584ea5d9ae0 <line:296:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x5584ea5d9c30 <line:279:1, line:297:3> col:3 referenced pthread_rwlock_t 'union pthread_rwlock_t':'pthread_rwlock_t'
| `-ElaboratedType 0x5584ea5d9bd0 'union pthread_rwlock_t' sugar
|   `-RecordType 0x5584ea5d9420 'pthread_rwlock_t'
|     `-Record 0x5584ea5d93a0 ''
|-RecordDecl 0x5584ea5d9ca0 <line:298:9, line:302:1> line:298:9 union definition
| |-FieldDecl 0x5584ea5d9de0 <line:300:3, col:16> col:8 __size 'char [8]'
| `-FieldDecl 0x5584ea5d9e48 <line:301:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x5584ea5d9f00 <line:298:1, line:302:3> col:3 referenced pthread_rwlockattr_t 'union pthread_rwlockattr_t':'pthread_rwlockattr_t'
| `-ElaboratedType 0x5584ea5d9ea0 'union pthread_rwlockattr_t' sugar
|   `-RecordType 0x5584ea5d9d20 'pthread_rwlockattr_t'
|     `-Record 0x5584ea5d9ca0 ''
|-TypedefDecl 0x5584ea5d9f88 <line:303:1, col:22> col:22 referenced pthread_spinlock_t 'volatile int'
| `-QualType 0x5584ea55cf14 'volatile int' volatile
|   `-BuiltinType 0x5584ea55cf10 'int'
|-RecordDecl 0x5584ea5d9fe0 <line:304:9, line:308:1> line:304:9 union definition
| |-FieldDecl 0x5584ea5db140 <line:306:3, col:17> col:8 __size 'char [32]'
| `-FieldDecl 0x5584ea5db1a8 <line:307:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x5584ea5db260 <line:304:1, line:308:3> col:3 referenced pthread_barrier_t 'union pthread_barrier_t':'pthread_barrier_t'
| `-ElaboratedType 0x5584ea5db200 'union pthread_barrier_t' sugar
|   `-RecordType 0x5584ea5da060 'pthread_barrier_t'
|     `-Record 0x5584ea5d9fe0 ''
|-RecordDecl 0x5584ea5db2d0 <line:309:9, line:313:1> line:309:9 union definition
| |-FieldDecl 0x5584ea5db3d0 <line:311:3, col:16> col:8 __size 'char [4]'
| `-FieldDecl 0x5584ea5db438 <line:312:3, col:7> col:7 __align 'int'
|-TypedefDecl 0x5584ea5db4f0 <line:309:1, line:313:3> col:3 referenced pthread_barrierattr_t 'union pthread_barrierattr_t':'pthread_barrierattr_t'
| `-ElaboratedType 0x5584ea5db490 'union pthread_barrierattr_t' sugar
|   `-RecordType 0x5584ea5db350 'pthread_barrierattr_t'
|     `-Record 0x5584ea5db2d0 ''
|-TypedefDecl 0x5584ea5db608 <line:314:1, col:29> col:18 referenced __jmp_buf 'long [8]'
| `-ConstantArrayType 0x5584ea5db5a0 'long [8]' 8 
|   `-BuiltinType 0x5584ea55cf30 'long'
|-EnumDecl 0x5584ea5db660 <line:315:1, line:319:1> line:315:1
| |-EnumConstantDecl 0x5584ea5db728 <line:317:3> col:3 PTHREAD_CREATE_JOINABLE 'int'
| `-EnumConstantDecl 0x5584ea5db778 <line:318:3> col:3 PTHREAD_CREATE_DETACHED 'int'
|-EnumDecl 0x5584ea5db7c8 <line:320:1, line:331:1> line:320:1
| |-EnumConstantDecl 0x5584ea5db898 <line:322:3> col:3 referenced PTHREAD_MUTEX_TIMED_NP 'int'
| |-EnumConstantDecl 0x5584ea5db8e8 <line:323:3> col:3 referenced PTHREAD_MUTEX_RECURSIVE_NP 'int'
| |-EnumConstantDecl 0x5584ea5db938 <line:324:3> col:3 referenced PTHREAD_MUTEX_ERRORCHECK_NP 'int'
| |-EnumConstantDecl 0x5584ea5db988 <line:325:3> col:3 PTHREAD_MUTEX_ADAPTIVE_NP 'int'
| |-EnumConstantDecl 0x5584ea5dba10 <line:327:3, col:26> col:3 referenced PTHREAD_MUTEX_NORMAL 'int'
| | `-ConstantExpr 0x5584ea5db9f8 <col:26> 'int'
| |   `-DeclRefExpr 0x5584ea5db9d8 <col:26> 'int' EnumConstant 0x5584ea5db898 'PTHREAD_MUTEX_TIMED_NP' 'int'
| |-EnumConstantDecl 0x5584ea5dba98 <line:328:3, col:29> col:3 PTHREAD_MUTEX_RECURSIVE 'int'
| | `-ConstantExpr 0x5584ea5dba80 <col:29> 'int'
| |   `-DeclRefExpr 0x5584ea5dba60 <col:29> 'int' EnumConstant 0x5584ea5db8e8 'PTHREAD_MUTEX_RECURSIVE_NP' 'int'
| |-EnumConstantDecl 0x5584ea5dbb20 <line:329:3, col:30> col:3 PTHREAD_MUTEX_ERRORCHECK 'int'
| | `-ConstantExpr 0x5584ea5dbb08 <col:30> 'int'
| |   `-DeclRefExpr 0x5584ea5dbae8 <col:30> 'int' EnumConstant 0x5584ea5db938 'PTHREAD_MUTEX_ERRORCHECK_NP' 'int'
| `-EnumConstantDecl 0x5584ea5dbba8 <line:330:3, col:27> col:3 PTHREAD_MUTEX_DEFAULT 'int'
|   `-ConstantExpr 0x5584ea5dbb90 <col:27> 'int'
|     `-DeclRefExpr 0x5584ea5dbb70 <col:27> 'int' EnumConstant 0x5584ea5dba10 'PTHREAD_MUTEX_NORMAL' 'int'
|-EnumDecl 0x5584ea5dbbf8 <line:332:1, line:338:1> line:332:1
| |-EnumConstantDecl 0x5584ea5dbcc8 <line:334:3> col:3 referenced PTHREAD_MUTEX_STALLED 'int'
| |-EnumConstantDecl 0x5584ea5dbd50 <line:335:3, col:30> col:3 PTHREAD_MUTEX_STALLED_NP 'int'
| | `-ConstantExpr 0x5584ea5dbd38 <col:30> 'int'
| |   `-DeclRefExpr 0x5584ea5dbd18 <col:30> 'int' EnumConstant 0x5584ea5dbcc8 'PTHREAD_MUTEX_STALLED' 'int'
| |-EnumConstantDecl 0x5584ea5dbda0 <line:336:3> col:3 referenced PTHREAD_MUTEX_ROBUST 'int'
| `-EnumConstantDecl 0x5584ea5dbe28 <line:337:3, col:29> col:3 PTHREAD_MUTEX_ROBUST_NP 'int'
|   `-ConstantExpr 0x5584ea5dbe10 <col:29> 'int'
|     `-DeclRefExpr 0x5584ea5dbdf0 <col:29> 'int' EnumConstant 0x5584ea5dbda0 'PTHREAD_MUTEX_ROBUST' 'int'
|-EnumDecl 0x5584ea5dbe78 <line:339:1, line:344:1> line:339:1
| |-EnumConstantDecl 0x5584ea5dbf48 <line:341:3> col:3 PTHREAD_PRIO_NONE 'int'
| |-EnumConstantDecl 0x5584ea5dbf98 <line:342:3> col:3 PTHREAD_PRIO_INHERIT 'int'
| `-EnumConstantDecl 0x5584ea5dbfe8 <line:343:3> col:3 PTHREAD_PRIO_PROTECT 'int'
|-EnumDecl 0x5584ea5dc038 <line:345:1, line:351:1> line:345:1
| |-EnumConstantDecl 0x5584ea5dc150 <line:347:3> col:3 referenced PTHREAD_RWLOCK_PREFER_READER_NP 'int'
| |-EnumConstantDecl 0x5584ea5dc1a0 <line:348:3> col:3 PTHREAD_RWLOCK_PREFER_WRITER_NP 'int'
| |-EnumConstantDecl 0x5584ea5dc1f0 <line:349:3> col:3 PTHREAD_RWLOCK_PREFER_WRITER_NONRECURSIVE_NP 'int'
| `-EnumConstantDecl 0x5584ea5dc278 <line:350:3, col:31> col:3 PTHREAD_RWLOCK_DEFAULT_NP 'int'
|   `-ConstantExpr 0x5584ea5dc260 <col:31> 'int'
|     `-DeclRefExpr 0x5584ea5dc240 <col:31> 'int' EnumConstant 0x5584ea5dc150 'PTHREAD_RWLOCK_PREFER_READER_NP' 'int'
|-EnumDecl 0x5584ea5dc2c8 <line:352:1, line:356:1> line:352:1
| |-EnumConstantDecl 0x5584ea5dc398 <line:354:3> col:3 PTHREAD_INHERIT_SCHED 'int'
| `-EnumConstantDecl 0x5584ea5dc3e8 <line:355:3> col:3 PTHREAD_EXPLICIT_SCHED 'int'
|-EnumDecl 0x5584ea5dc438 <line:357:1, line:361:1> line:357:1
| |-EnumConstantDecl 0x5584ea5dc508 <line:359:3> col:3 PTHREAD_SCOPE_SYSTEM 'int'
| `-EnumConstantDecl 0x5584ea5dc558 <line:360:3> col:3 PTHREAD_SCOPE_PROCESS 'int'
|-EnumDecl 0x5584ea5dc5a8 <line:362:1, line:366:1> line:362:1
| |-EnumConstantDecl 0x5584ea5dc678 <line:364:3> col:3 PTHREAD_PROCESS_PRIVATE 'int'
| `-EnumConstantDecl 0x5584ea5dc6c8 <line:365:3> col:3 PTHREAD_PROCESS_SHARED 'int'
|-RecordDecl 0x5584ea5dc718 <line:367:1, line:373:1> line:367:8 struct _pthread_cleanup_buffer definition
| |-FieldDecl 0x5584ea5dc958 <line:369:3, col:28> col:10 __routine 'void (*)(void *)'
| |-FieldDecl 0x5584ea5dc9c0 <line:370:3, col:9> col:9 __arg 'void *'
| |-FieldDecl 0x5584ea5dca28 <line:371:3, col:7> col:7 __canceltype 'int'
| `-FieldDecl 0x5584ea5dcb48 <line:372:3, col:35> col:35 __prev 'struct _pthread_cleanup_buffer *'
|-EnumDecl 0x5584ea5dcb98 <line:374:1, line:378:1> line:374:1
| |-EnumConstantDecl 0x5584ea5dcc68 <line:376:3> col:3 PTHREAD_CANCEL_ENABLE 'int'
| `-EnumConstantDecl 0x5584ea5dccb8 <line:377:3> col:3 PTHREAD_CANCEL_DISABLE 'int'
|-EnumDecl 0x5584ea5dcd08 <line:379:1, line:383:1> line:379:1
| |-EnumConstantDecl 0x5584ea5dcdd8 <line:381:3> col:3 PTHREAD_CANCEL_DEFERRED 'int'
| `-EnumConstantDecl 0x5584ea5dce28 <line:382:3> col:3 PTHREAD_CANCEL_ASYNCHRONOUS 'int'
|-FunctionDecl 0x5584ea5dd488 <line:385:1, line:388:96> line:385:12 used pthread_create 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' extern
| |-ParmVarDecl 0x5584ea5dcf20 <col:28, col:50> col:50 __newthread 'pthread_t *restrict'
| |-ParmVarDecl 0x5584ea5dd030 <line:386:7, col:40> col:40 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x5584ea5dd270 <line:387:7, col:39> col:15 __start_routine 'void *(*)(void *)'
| |-ParmVarDecl 0x5584ea5dd2f0 <line:388:7, col:24> col:24 __arg 'void *restrict'
| |-NoThrowAttr 0x5584ea5dd548 <col:47>
| |-NonNullAttr 0x5584ea5dd5a0 <col:77, col:94> 1 3
| `-CallbackAttr 0x5584ea5dd5d8 <line:385:12> Implicit 2 3
|-FunctionDecl 0x5584ea5dd700 <line:389:1, col:72> col:13 pthread_exit 'void (void *) __attribute__((noreturn))' extern
| `-ParmVarDecl 0x5584ea5dd630 <col:27, col:33> col:33 __retval 'void *'
|-FunctionDecl 0x5584ea5dd958 <line:390:1, col:64> col:12 pthread_join 'int (pthread_t, void **)' extern
| |-ParmVarDecl 0x5584ea5dd7b8 <col:26, col:36> col:36 __th 'pthread_t':'unsigned long'
| `-ParmVarDecl 0x5584ea5dd838 <col:42, col:49> col:49 __thread_return 'void **'
|-FunctionDecl 0x5584ea5ddb28 <line:391:1, col:83> col:12 pthread_detach 'int (pthread_t)' extern
| |-ParmVarDecl 0x5584ea5dda18 <col:28, col:38> col:38 __th 'pthread_t':'unsigned long'
| `-NoThrowAttr 0x5584ea5ddbd0 <col:60>
|-FunctionDecl 0x5584ea5ddd20 <line:392:1, col:105> col:18 pthread_self 'pthread_t (void)' extern
| |-NoThrowAttr 0x5584ea5dddc0 <col:54>
| `-ConstAttr 0x5584ea5dde18 <col:95>
|-FunctionDecl 0x5584ea5ddfe8 <line:393:1, line:394:70> line:393:12 pthread_equal 'int (pthread_t, pthread_t)' extern
| |-ParmVarDecl 0x5584ea5dde50 <col:27, col:37> col:37 __thread1 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x5584ea5ddec8 <col:48, col:58> col:58 __thread2 'pthread_t':'unsigned long'
| |-NoThrowAttr 0x5584ea5de098 <line:394:19>
| `-ConstAttr 0x5584ea5de0f0 <col:60>
|-FunctionDecl 0x5584ea5dfb08 <line:395:1, col:128> col:12 pthread_attr_init 'int (pthread_attr_t *)' extern
| |-ParmVarDecl 0x5584ea5df9d0 <col:31, col:47> col:47 __attr 'pthread_attr_t *'
| |-NoThrowAttr 0x5584ea5dfbb0 <col:71>
| `-NonNullAttr 0x5584ea5dfc08 <col:112, col:126> 1
|-FunctionDecl 0x5584ea5dfd10 <line:396:1, line:397:79> line:396:12 pthread_attr_destroy 'int (pthread_attr_t *)' extern
| |-ParmVarDecl 0x5584ea5dfc58 <col:34, col:50> col:50 __attr 'pthread_attr_t *'
| |-NoThrowAttr 0x5584ea5dfdb8 <line:397:22>
| `-NonNullAttr 0x5584ea5dfe10 <col:63, col:77> 1
|-FunctionDecl 0x5584ea5e0038 <line:398:1, line:400:82> line:398:12 pthread_attr_getdetachstate 'int (const pthread_attr_t *, int *)' extern
| |-ParmVarDecl 0x5584ea5dfe58 <col:41, col:63> col:63 __attr 'const pthread_attr_t *'
| |-ParmVarDecl 0x5584ea5dfed8 <line:399:6, col:11> col:11 __detachstate 'int *'
| |-NoThrowAttr 0x5584ea5e00e8 <line:400:22>
| `-NonNullAttr 0x5584ea5e0140 <col:63, col:80> 1 2
|-FunctionDecl 0x5584ea5e0348 <line:401:1, line:403:79> line:401:12 pthread_attr_setdetachstate 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x5584ea5e0188 <col:41, col:57> col:57 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x5584ea5e0208 <line:402:6, col:10> col:10 __detachstate 'int'
| |-NoThrowAttr 0x5584ea5e03f8 <line:403:22>
| `-NonNullAttr 0x5584ea5e0450 <col:63, col:77> 1
|-FunctionDecl 0x5584ea5e06a8 <line:404:1, line:406:82> line:404:12 pthread_attr_getguardsize 'int (const pthread_attr_t *, size_t *)' extern
| |-ParmVarDecl 0x5584ea5e0498 <col:39, col:61> col:61 __attr 'const pthread_attr_t *'
| |-ParmVarDecl 0x5584ea5e0540 <line:405:11, col:19> col:19 __guardsize 'size_t *'
| |-NoThrowAttr 0x5584ea5e0758 <line:406:22>
| `-NonNullAttr 0x5584ea5e07b0 <col:63, col:80> 1 2
|-FunctionDecl 0x5584ea5e19e8 <line:407:1, line:409:79> line:407:12 pthread_attr_setguardsize 'int (pthread_attr_t *, size_t)' extern
| |-ParmVarDecl 0x5584ea5e07f8 <col:39, col:55> col:55 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x5584ea5e0870 <line:408:11, col:18> col:18 __guardsize 'size_t':'unsigned long'
| |-NoThrowAttr 0x5584ea5e1a98 <line:409:22>
| `-NonNullAttr 0x5584ea5e1af0 <col:63, col:77> 1
|-FunctionDecl 0x5584ea5e1d28 <line:410:1, line:412:82> line:410:12 pthread_attr_getschedparam 'int (const pthread_attr_t *restrict, struct sched_param *restrict)' extern
| |-ParmVarDecl 0x5584ea5e1b38 <col:40, col:73> col:73 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x5584ea5e1bc8 <line:411:12, col:43> col:43 __param 'struct sched_param *restrict'
| |-NoThrowAttr 0x5584ea5e1dd8 <line:412:22>
| `-NonNullAttr 0x5584ea5e1e30 <col:63, col:80> 1 2
|-FunctionDecl 0x5584ea5e2068 <line:413:1, line:415:97> line:413:12 pthread_attr_setschedparam 'int (pthread_attr_t *restrict, const struct sched_param *restrict)' extern
| |-ParmVarDecl 0x5584ea5e1e78 <col:40, col:67> col:67 __attr 'pthread_attr_t *restrict'
| |-ParmVarDecl 0x5584ea5e1f08 <line:414:12, line:415:12> col:12 __param 'const struct sched_param *restrict'
| |-NoThrowAttr 0x5584ea5e2118 <col:37>
| `-NonNullAttr 0x5584ea5e2170 <col:78, col:95> 1 2
|-FunctionDecl 0x5584ea5e2358 <line:416:1, line:418:82> line:416:12 pthread_attr_getschedpolicy 'int (const pthread_attr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x5584ea5e21b8 <col:41, line:417:6> col:6 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x5584ea5e2238 <col:14, col:30> col:30 __policy 'int *restrict'
| |-NoThrowAttr 0x5584ea5e2408 <line:418:22>
| `-NonNullAttr 0x5584ea5e2460 <col:63, col:80> 1 2
|-FunctionDecl 0x5584ea5e25e8 <line:419:1, line:420:79> line:419:12 pthread_attr_setschedpolicy 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x5584ea5e24a8 <col:41, col:57> col:57 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x5584ea5e2528 <col:65, col:69> col:69 __policy 'int'
| |-NoThrowAttr 0x5584ea5e2698 <line:420:22>
| `-NonNullAttr 0x5584ea5e26f0 <col:63, col:77> 1
|-FunctionDecl 0x5584ea5e2898 <line:421:1, line:423:82> line:421:12 pthread_attr_getinheritsched 'int (const pthread_attr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x5584ea5e2738 <col:42, line:422:7> col:7 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x5584ea5e27b8 <col:15, col:31> col:31 __inherit 'int *restrict'
| |-NoThrowAttr 0x5584ea5e2948 <line:423:22>
| `-NonNullAttr 0x5584ea5e29c0 <col:63, col:80> 1 2
|-FunctionDecl 0x5584ea5e2b48 <line:424:1, line:426:79> line:424:12 pthread_attr_setinheritsched 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x5584ea5e2a08 <col:42, col:58> col:58 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x5584ea5e2a88 <line:425:7, col:11> col:11 __inherit 'int'
| |-NoThrowAttr 0x5584ea5e2bf8 <line:426:22>
| `-NonNullAttr 0x5584ea5e2c50 <col:63, col:77> 1
|-FunctionDecl 0x5584ea5e2df8 <line:427:1, line:429:82> line:427:12 pthread_attr_getscope 'int (const pthread_attr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x5584ea5e2c98 <col:35, col:68> col:68 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x5584ea5e2d18 <line:428:7, col:23> col:23 __scope 'int *restrict'
| |-NoThrowAttr 0x5584ea5e2ea8 <line:429:22>
| `-NonNullAttr 0x5584ea5e2f00 <col:63, col:80> 1 2
|-FunctionDecl 0x5584ea5e3088 <line:430:1, line:431:79> line:430:12 pthread_attr_setscope 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x5584ea5e2f48 <col:35, col:51> col:51 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x5584ea5e2fc8 <col:59, col:63> col:63 __scope 'int'
| |-NoThrowAttr 0x5584ea5e3138 <line:431:22>
| `-NonNullAttr 0x5584ea5e3190 <col:63, col:77> 1
|-FunctionDecl 0x5584ea5e33b8 <line:432:1, line:434:115> line:432:12 pthread_attr_getstackaddr 'int (const pthread_attr_t *restrict, void **restrict)' extern
| |-ParmVarDecl 0x5584ea5e31d8 <col:39, line:433:11> col:11 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x5584ea5e3258 <col:19, col:37> col:37 __stackaddr 'void **restrict'
| |-NoThrowAttr 0x5584ea5e3468 <line:434:22>
| |-NonNullAttr 0x5584ea5e34c0 <col:63, col:80> 1 2
| `-DeprecatedAttr 0x5584ea5e34f8 <col:100> "" ""
|-FunctionDecl 0x5584ea5e3708 <line:435:1, line:437:112> line:435:12 pthread_attr_setstackaddr 'int (pthread_attr_t *, void *)' extern
| |-ParmVarDecl 0x5584ea5e3548 <col:39, col:55> col:55 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x5584ea5e35c8 <line:436:11, col:17> col:17 __stackaddr 'void *'
| |-NoThrowAttr 0x5584ea5e37b8 <line:437:22>
| |-NonNullAttr 0x5584ea5e3810 <col:63, col:77> 1
| `-DeprecatedAttr 0x5584ea5e3848 <col:97> "" ""
|-FunctionDecl 0x5584ea5e3a48 <line:438:1, line:440:82> line:438:12 pthread_attr_getstacksize 'int (const pthread_attr_t *restrict, size_t *restrict)' extern
| |-ParmVarDecl 0x5584ea5e3898 <col:39, line:439:11> col:11 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x5584ea5e3910 <col:19, col:38> col:38 __stacksize 'size_t *restrict'
| |-NoThrowAttr 0x5584ea5e3af8 <line:440:22>
| `-NonNullAttr 0x5584ea5e3b50 <col:63, col:80> 1 2
|-FunctionDecl 0x5584ea5e3cd0 <line:441:1, line:443:79> line:441:12 pthread_attr_setstacksize 'int (pthread_attr_t *, size_t)' extern
| |-ParmVarDecl 0x5584ea5e3b98 <col:39, col:55> col:55 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x5584ea5e3c10 <line:442:11, col:18> col:18 __stacksize 'size_t':'unsigned long'
| |-NoThrowAttr 0x5584ea5e3d80 <line:443:22>
| `-NonNullAttr 0x5584ea5e3dd8 <col:63, col:77> 1
|-FunctionDecl 0x5584ea5e40c8 <line:444:1, line:447:85> line:444:12 pthread_attr_getstack 'int (const pthread_attr_t *restrict, void **restrict, size_t *restrict)' extern
| |-ParmVarDecl 0x5584ea5e3e28 <col:35, col:68> col:68 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x5584ea5e3ea8 <line:445:7, col:25> col:25 __stackaddr 'void **restrict'
| |-ParmVarDecl 0x5584ea5e3f20 <line:446:7, col:26> col:26 __stacksize 'size_t *restrict'
| |-NoThrowAttr 0x5584ea5e4180 <line:447:22>
| `-NonNullAttr 0x5584ea5e41d8 <col:63, col:83> 1 2 3
|-FunctionDecl 0x5584ea5e4488 <line:448:1, line:449:100> line:448:12 pthread_attr_setstack 'int (pthread_attr_t *, void *, size_t)' extern
| |-ParmVarDecl 0x5584ea5e4230 <col:35, col:51> col:51 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x5584ea5e42b0 <col:59, col:65> col:65 __stackaddr 'void *'
| |-ParmVarDecl 0x5584ea5e4328 <line:449:7, col:14> col:14 __stacksize 'size_t':'unsigned long'
| |-NoThrowAttr 0x5584ea5e4540 <col:43>
| `-NonNullAttr 0x5584ea5e4598 <col:84, col:98> 1
|-FunctionDecl 0x5584ea5e4858 <line:450:1, line:452:79> line:450:12 pthread_setschedparam 'int (pthread_t, int, const struct sched_param *)' extern
| |-ParmVarDecl 0x5584ea5e45e8 <col:35, col:45> col:45 __target_thread 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x5584ea5e4668 <col:62, col:66> col:66 __policy 'int'
| |-ParmVarDecl 0x5584ea5e46f8 <line:451:7, col:33> col:33 __param 'const struct sched_param *'
| |-NoThrowAttr 0x5584ea5e4910 <line:452:22>
| `-NonNullAttr 0x5584ea5e4968 <col:63, col:77> 3
|-FunctionDecl 0x5584ea5e4c78 <line:453:1, line:456:82> line:453:12 pthread_getschedparam 'int (pthread_t, int *restrict, struct sched_param *restrict)' extern
| |-ParmVarDecl 0x5584ea5e49e0 <col:35, col:45> col:45 __target_thread 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x5584ea5e4a60 <line:454:7, col:23> col:23 __policy 'int *restrict'
| |-ParmVarDecl 0x5584ea5e4af0 <line:455:7, col:38> col:38 __param 'struct sched_param *restrict'
| |-NoThrowAttr 0x5584ea5e4d30 <line:456:22>
| `-NonNullAttr 0x5584ea5e4d88 <col:63, col:80> 2 3
|-FunctionDecl 0x5584ea5e4f78 <line:457:1, line:458:45> line:457:12 pthread_setschedprio 'int (pthread_t, int)' extern
| |-ParmVarDecl 0x5584ea5e4dd8 <col:34, col:44> col:44 __target_thread 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x5584ea5e4e58 <col:61, col:65> col:65 __prio 'int'
| `-NoThrowAttr 0x5584ea5e5028 <line:458:22>
|-FunctionDecl 0x5584ea5e53f8 <line:459:1, line:460:71> line:459:12 pthread_once 'int (pthread_once_t *, void (*)(void))' extern
| |-ParmVarDecl 0x5584ea5e50f0 <col:26, col:42> col:42 __once_control 'pthread_once_t *'
| |-ParmVarDecl 0x5584ea5e5290 <line:460:5, col:33> col:12 __init_routine 'void (*)(void)'
| `-NonNullAttr 0x5584ea5e54a8 <col:52, col:69> 1 2
|-FunctionDecl 0x5584ea5e5650 <line:461:1, col:64> col:12 pthread_setcancelstate 'int (int, int *)' extern
| |-ParmVarDecl 0x5584ea5e5530 <col:36, col:40> col:40 __state 'int'
| `-ParmVarDecl 0x5584ea5e55b0 <col:49, col:54> col:54 __oldstate 'int *'
|-FunctionDecl 0x5584ea5e5838 <line:462:1, col:61> col:12 pthread_setcanceltype 'int (int, int *)' extern
| |-ParmVarDecl 0x5584ea5e5718 <col:35, col:39> col:39 __type 'int'
| `-ParmVarDecl 0x5584ea5e5798 <col:47, col:52> col:52 __oldtype 'int *'
|-FunctionDecl 0x5584ea5e59f0 <line:463:1, col:42> col:12 pthread_cancel 'int (pthread_t)' extern
| `-ParmVarDecl 0x5584ea5e58f8 <col:28, col:38> col:38 __th 'pthread_t':'unsigned long'
|-FunctionDecl 0x5584ea5e5b30 <line:464:1, col:37> col:13 pthread_testcancel 'void (void)' extern
|-RecordDecl 0x5584ea5e5bd0 <line:465:9, line:473:1> line:465:9 struct definition
| |-RecordDecl 0x5584ea5e5c78 <line:467:3, line:471:3> line:467:3 struct definition
| | |-FieldDecl 0x5584ea5e5d68 <line:469:5, col:15> col:15 __cancel_jmp_buf '__jmp_buf':'long [8]'
| | `-FieldDecl 0x5584ea5e5dd0 <line:470:5, col:9> col:9 __mask_was_saved 'int'
| |-FieldDecl 0x5584ea5e5fa0 <line:467:3, line:471:23> col:5 __cancel_jmp_buf 'struct (anonymous struct at ./split_6/mix003_power.oepc_false-unreach-call.i:467:3) [1]'
| `-FieldDecl 0x5584ea5e6098 <line:472:3, col:16> col:9 __pad 'void *[4]'
|-TypedefDecl 0x5584ea5e6150 <line:465:1, line:473:3> col:3 referenced __pthread_unwind_buf_t 'struct __pthread_unwind_buf_t':'__pthread_unwind_buf_t'
| |-ElaboratedType 0x5584ea5e60f0 'struct __pthread_unwind_buf_t' sugar
| | `-RecordType 0x5584ea5e5c50 '__pthread_unwind_buf_t'
| |   `-Record 0x5584ea5e5bd0 ''
| `-AlignedAttr 0x5584ea5e61a8 <col:42> aligned
|   `-<<<NULL>>>
|-RecordDecl 0x5584ea5e6220 <line:474:1, line:480:1> line:474:8 struct __pthread_cleanup_frame definition
| |-FieldDecl 0x5584ea5e6380 <line:476:3, col:35> col:10 __cancel_routine 'void (*)(void *)'
| |-FieldDecl 0x5584ea5e63e8 <line:477:3, col:9> col:9 __cancel_arg 'void *'
| |-FieldDecl 0x5584ea5e6450 <line:478:3, col:7> col:7 __do_it 'int'
| `-FieldDecl 0x5584ea5e64b8 <line:479:3, col:7> col:7 __cancel_type 'int'
|-FunctionDecl 0x5584ea5e66c0 <line:481:1, col:69> col:13 __pthread_register_cancel 'void (__pthread_unwind_buf_t *)' extern
| `-ParmVarDecl 0x5584ea5e65b0 <col:40, col:64> col:64 __buf '__pthread_unwind_buf_t *'
|-FunctionDecl 0x5584ea5e6808 <line:483:1, col:71> col:13 __pthread_unregister_cancel 'void (__pthread_unwind_buf_t *)' extern
| `-ParmVarDecl 0x5584ea5e6778 <col:42, col:66> col:66 __buf '__pthread_unwind_buf_t *'
|-FunctionDecl 0x5584ea5e6a00 <line:485:1, line:487:31> line:485:13 __pthread_unwind_next 'void (__pthread_unwind_buf_t *) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x5584ea5e68c0 <col:36, col:60> col:60 __buf '__pthread_unwind_buf_t *'
| `-WeakAttr 0x5584ea5e6aa8 <line:487:22>
|-RecordDecl 0x5584ea5e6b00 <line:489:1, col:8> col:8 struct __jmp_buf_tag
|-FunctionDecl 0x5584ea5e6e18 <line:490:1, col:98> col:12 __sigsetjmp 'int (struct __jmp_buf_tag *, int)' extern
| |-ParmVarDecl 0x5584ea5e6c78 <col:25, col:47> col:47 __env 'struct __jmp_buf_tag *'
| |-ParmVarDecl 0x5584ea5e6cf8 <col:54, col:58> col:58 __savemask 'int'
| |-NoThrowAttr 0x5584ea5e6ec8 <col:86>
| `-ReturnsTwiceAttr 0x5584ea5e6f20 <col:12> Implicit
|-FunctionDecl 0x5584ea5e7248 <line:491:1, line:493:79> line:491:12 pthread_mutex_init 'int (pthread_mutex_t *, const pthread_mutexattr_t *)' extern
| |-ParmVarDecl 0x5584ea5e6ff0 <col:32, col:49> col:49 __mutex 'pthread_mutex_t *'
| |-ParmVarDecl 0x5584ea5e7100 <line:492:11, col:38> col:38 __mutexattr 'const pthread_mutexattr_t *'
| |-NoThrowAttr 0x5584ea5e72f8 <line:493:22>
| `-NonNullAttr 0x5584ea5e7350 <col:63, col:77> 1
|-FunctionDecl 0x5584ea5e74c8 <line:494:1, line:495:79> line:494:12 pthread_mutex_destroy 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x5584ea5e7398 <col:35, col:52> col:52 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x5584ea5e7570 <line:495:22>
| `-NonNullAttr 0x5584ea5e75c8 <col:63, col:77> 1
|-FunctionDecl 0x5584ea5e76d0 <line:496:1, line:497:68> line:496:12 pthread_mutex_trylock 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x5584ea5e7618 <col:35, col:52> col:52 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x5584ea5e7778 <line:497:22>
| `-NonNullAttr 0x5584ea5e77d0 <col:52, col:66> 1
|-FunctionDecl 0x5584ea5e78d0 <line:498:1, line:499:68> line:498:12 pthread_mutex_lock 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x5584ea5e7818 <col:32, col:49> col:49 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x5584ea5e7978 <line:499:22>
| `-NonNullAttr 0x5584ea5e79d0 <col:52, col:66> 1
|-FunctionDecl 0x5584ea5e8c28 <line:500:1, line:502:85> line:500:12 pthread_mutex_timedlock 'int (pthread_mutex_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x5584ea5e8a38 <col:37, col:65> col:65 __mutex 'pthread_mutex_t *restrict'
| |-ParmVarDecl 0x5584ea5e8ac8 <line:501:9, line:502:9> col:9 __abstime 'const struct timespec *restrict'
| |-NoThrowAttr 0x5584ea5e8cd8 <col:36>
| `-NonNullAttr 0x5584ea5e8d30 <col:66, col:83> 1 2
|-FunctionDecl 0x5584ea5e8e30 <line:503:1, line:504:68> line:503:12 pthread_mutex_unlock 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x5584ea5e8d78 <col:34, col:51> col:51 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x5584ea5e8ed8 <line:504:22>
| `-NonNullAttr 0x5584ea5e8f30 <col:52, col:66> 1
|-FunctionDecl 0x5584ea5e91c8 <line:505:1, line:508:82> line:505:12 pthread_mutex_getprioceiling 'int (const pthread_mutex_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x5584ea5e8fe0 <col:42, line:506:18> col:18 __mutex 'const pthread_mutex_t *restrict'
| |-ParmVarDecl 0x5584ea5e9060 <line:507:7, col:23> col:23 __prioceiling 'int *restrict'
| |-NoThrowAttr 0x5584ea5e9278 <line:508:22>
| `-NonNullAttr 0x5584ea5e92d0 <col:63, col:80> 1 2
|-FunctionDecl 0x5584ea5e9598 <line:509:1, line:512:82> line:509:12 pthread_mutex_setprioceiling 'int (pthread_mutex_t *restrict, int, int *restrict)' extern
| |-ParmVarDecl 0x5584ea5e9318 <col:42, col:70> col:70 __mutex 'pthread_mutex_t *restrict'
| |-ParmVarDecl 0x5584ea5e9398 <line:510:7, col:11> col:11 __prioceiling 'int'
| |-ParmVarDecl 0x5584ea5e9418 <line:511:7, col:23> col:23 __old_ceiling 'int *restrict'
| |-NoThrowAttr 0x5584ea5e9650 <line:512:22>
| `-NonNullAttr 0x5584ea5e96a8 <col:63, col:80> 1 3
|-FunctionDecl 0x5584ea5e97b0 <line:513:1, line:514:79> line:513:12 pthread_mutex_consistent 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x5584ea5e96f8 <col:38, col:55> col:55 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x5584ea5e9858 <line:514:22>
| `-NonNullAttr 0x5584ea5e98b0 <col:63, col:77> 1
|-FunctionDecl 0x5584ea5e9ad8 <line:515:1, line:516:79> line:515:12 pthread_mutexattr_init 'int (pthread_mutexattr_t *)' extern
| |-ParmVarDecl 0x5584ea5e9960 <col:36, col:57> col:57 __attr 'pthread_mutexattr_t *'
| |-NoThrowAttr 0x5584ea5e9b80 <line:516:22>
| `-NonNullAttr 0x5584ea5e9bd8 <col:63, col:77> 1
|-FunctionDecl 0x5584ea5e9ce0 <line:517:1, line:518:79> line:517:12 pthread_mutexattr_destroy 'int (pthread_mutexattr_t *)' extern
| |-ParmVarDecl 0x5584ea5e9c28 <col:39, col:60> col:60 __attr 'pthread_mutexattr_t *'
| |-NoThrowAttr 0x5584ea5e9d88 <line:518:22>
| `-NonNullAttr 0x5584ea5e9de0 <col:63, col:77> 1
|-FunctionDecl 0x5584ea5ea008 <line:519:1, line:522:82> line:519:12 pthread_mutexattr_getpshared 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x5584ea5e9e28 <col:42, line:520:18> col:18 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x5584ea5e9ea8 <line:521:7, col:23> col:23 __pshared 'int *restrict'
| |-NoThrowAttr 0x5584ea5ea0b8 <line:522:22>
| `-NonNullAttr 0x5584ea5ea110 <col:63, col:80> 1 2
|-FunctionDecl 0x5584ea5ea318 <line:523:1, line:525:79> line:523:12 pthread_mutexattr_setpshared 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x5584ea5ea158 <col:42, col:63> col:63 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x5584ea5ea1d8 <line:524:7, col:11> col:11 __pshared 'int'
| |-NoThrowAttr 0x5584ea5ea3c8 <line:525:22>
| `-NonNullAttr 0x5584ea5ea420 <col:63, col:77> 1
|-FunctionDecl 0x5584ea5ea5c8 <line:526:1, line:528:82> line:526:12 pthread_mutexattr_gettype 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x5584ea5ea468 <col:39, line:527:11> col:11 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x5584ea5ea4e8 <col:19, col:35> col:35 __kind 'int *restrict'
| |-NoThrowAttr 0x5584ea5ea678 <line:528:22>
| `-NonNullAttr 0x5584ea5ea6d0 <col:63, col:80> 1 2
|-FunctionDecl 0x5584ea5ea858 <line:529:1, line:530:79> line:529:12 pthread_mutexattr_settype 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x5584ea5ea718 <col:39, col:60> col:60 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x5584ea5ea798 <col:68, col:72> col:72 __kind 'int'
| |-NoThrowAttr 0x5584ea5ea908 <line:530:22>
| `-NonNullAttr 0x5584ea5ea960 <col:63, col:77> 1
|-FunctionDecl 0x5584ea5eab20 <line:531:1, line:534:82> line:531:12 pthread_mutexattr_getprotocol 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x5584ea5ea9a8 <col:43, line:532:19> col:19 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x5584ea5eaa40 <line:533:8, col:24> col:24 __protocol 'int *restrict'
| |-NoThrowAttr 0x5584ea5eabd0 <line:534:22>
| `-NonNullAttr 0x5584ea5eac28 <col:63, col:80> 1 2
|-FunctionDecl 0x5584ea5eadb8 <line:535:1, line:537:79> line:535:12 pthread_mutexattr_setprotocol 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x5584ea5eac78 <col:43, col:64> col:64 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x5584ea5eacf8 <line:536:8, col:12> col:12 __protocol 'int'
| |-NoThrowAttr 0x5584ea5eae68 <line:537:22>
| `-NonNullAttr 0x5584ea5eaec0 <col:63, col:77> 1
|-FunctionDecl 0x5584ea5eb068 <line:538:1, line:541:82> line:538:12 pthread_mutexattr_getprioceiling 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x5584ea5eaf08 <col:46, line:539:22> col:22 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x5584ea5eaf88 <line:540:11, col:27> col:27 __prioceiling 'int *restrict'
| |-NoThrowAttr 0x5584ea5eb118 <line:541:22>
| `-NonNullAttr 0x5584ea5eb170 <col:63, col:80> 1 2
|-FunctionDecl 0x5584ea5eb2f8 <line:542:1, line:544:79> line:542:12 pthread_mutexattr_setprioceiling 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x5584ea5eb1b8 <col:46, col:67> col:67 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x5584ea5eb238 <line:543:11, col:15> col:15 __prioceiling 'int'
| |-NoThrowAttr 0x5584ea5eb3a8 <line:544:22>
| `-NonNullAttr 0x5584ea5eb400 <col:63, col:77> 1
|-FunctionDecl 0x5584ea5eb5e8 <line:545:1, line:547:82> line:545:12 pthread_mutexattr_getrobust 'int (const pthread_mutexattr_t *, int *)' extern
| |-ParmVarDecl 0x5584ea5eb448 <col:41, col:68> col:68 __attr 'const pthread_mutexattr_t *'
| |-ParmVarDecl 0x5584ea5eb4c8 <line:546:6, col:11> col:11 __robustness 'int *'
| |-NoThrowAttr 0x5584ea5eb698 <line:547:22>
| `-NonNullAttr 0x5584ea5eb6f0 <col:63, col:80> 1 2
|-FunctionDecl 0x5584ea5eb878 <line:548:1, line:550:79> line:548:12 pthread_mutexattr_setrobust 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x5584ea5eb738 <col:41, col:62> col:62 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x5584ea5eb7b8 <line:549:6, col:10> col:10 __robustness 'int'
| |-NoThrowAttr 0x5584ea5eb928 <line:550:22>
| `-NonNullAttr 0x5584ea5eb980 <col:63, col:77> 1
|-FunctionDecl 0x5584ea5eccf8 <line:551:1, line:553:86> line:551:12 pthread_rwlock_init 'int (pthread_rwlock_t *restrict, const pthread_rwlockattr_t *restrict)' extern
| |-ParmVarDecl 0x5584ea5ecaa0 <col:33, col:62> col:62 __rwlock 'pthread_rwlock_t *restrict'
| |-ParmVarDecl 0x5584ea5ecbb0 <line:552:5, line:553:5> col:5 __attr 'const pthread_rwlockattr_t *restrict'
| |-NoThrowAttr 0x5584ea5ecda8 <col:29>
| `-NonNullAttr 0x5584ea5ece00 <col:70, col:84> 1
|-FunctionDecl 0x5584ea5ecf78 <line:554:1, line:555:79> line:554:12 pthread_rwlock_destroy 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x5584ea5ece48 <col:36, col:54> col:54 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x5584ea5ed020 <line:555:22>
| `-NonNullAttr 0x5584ea5ed078 <col:63, col:77> 1
|-FunctionDecl 0x5584ea5ed180 <line:556:1, line:557:68> line:556:12 pthread_rwlock_rdlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x5584ea5ed0c8 <col:35, col:53> col:53 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x5584ea5ed228 <line:557:22>
| `-NonNullAttr 0x5584ea5ed280 <col:52, col:66> 1
|-FunctionDecl 0x5584ea5ed380 <line:558:1, line:559:65> line:558:12 pthread_rwlock_tryrdlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x5584ea5ed2c8 <col:38, col:56> col:56 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x5584ea5ed428 <line:559:19>
| `-NonNullAttr 0x5584ea5ed480 <col:49, col:63> 1
|-FunctionDecl 0x5584ea5ed6b8 <line:560:1, line:562:88> line:560:12 pthread_rwlock_timedrdlock 'int (pthread_rwlock_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x5584ea5ed4c8 <col:40, col:69> col:69 __rwlock 'pthread_rwlock_t *restrict'
| |-ParmVarDecl 0x5584ea5ed558 <line:561:12, line:562:12> col:12 __abstime 'const struct timespec *restrict'
| |-NoThrowAttr 0x5584ea5ed768 <col:39>
| `-NonNullAttr 0x5584ea5ed7c0 <col:69, col:86> 1 2
|-FunctionDecl 0x5584ea5ed8c0 <line:563:1, line:564:68> line:563:12 pthread_rwlock_wrlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x5584ea5ed808 <col:35, col:53> col:53 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x5584ea5ed968 <line:564:22>
| `-NonNullAttr 0x5584ea5ed9c0 <col:52, col:66> 1
|-FunctionDecl 0x5584ea5edb28 <line:565:1, line:566:68> line:565:12 pthread_rwlock_trywrlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x5584ea5eda70 <col:38, col:56> col:56 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x5584ea5edbd0 <line:566:22>
| `-NonNullAttr 0x5584ea5edc28 <col:52, col:66> 1
|-FunctionDecl 0x5584ea5edde8 <line:567:1, line:569:88> line:567:12 pthread_rwlock_timedwrlock 'int (pthread_rwlock_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x5584ea5edc78 <col:40, col:69> col:69 __rwlock 'pthread_rwlock_t *restrict'
| |-ParmVarDecl 0x5584ea5edd08 <line:568:12, line:569:12> col:12 __abstime 'const struct timespec *restrict'
| |-NoThrowAttr 0x5584ea5ede98 <col:39>
| `-NonNullAttr 0x5584ea5edef0 <col:69, col:86> 1 2
|-FunctionDecl 0x5584ea5edff0 <line:570:1, line:571:68> line:570:12 pthread_rwlock_unlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x5584ea5edf38 <col:35, col:53> col:53 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x5584ea5ee098 <line:571:22>
| `-NonNullAttr 0x5584ea5ee0f0 <col:52, col:66> 1
|-FunctionDecl 0x5584ea5ee2d8 <line:572:1, line:573:79> line:572:12 pthread_rwlockattr_init 'int (pthread_rwlockattr_t *)' extern
| |-ParmVarDecl 0x5584ea5ee1a0 <col:37, col:59> col:59 __attr 'pthread_rwlockattr_t *'
| |-NoThrowAttr 0x5584ea5ee380 <line:573:22>
| `-NonNullAttr 0x5584ea5ee3d8 <col:63, col:77> 1
|-FunctionDecl 0x5584ea5ee4e0 <line:574:1, line:575:79> line:574:12 pthread_rwlockattr_destroy 'int (pthread_rwlockattr_t *)' extern
| |-ParmVarDecl 0x5584ea5ee428 <col:40, col:62> col:62 __attr 'pthread_rwlockattr_t *'
| |-NoThrowAttr 0x5584ea5ee588 <line:575:22>
| `-NonNullAttr 0x5584ea5ee5e0 <col:63, col:77> 1
|-FunctionDecl 0x5584ea5ee808 <line:576:1, line:579:82> line:576:12 pthread_rwlockattr_getpshared 'int (const pthread_rwlockattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x5584ea5ee628 <col:43, line:577:19> col:19 __attr 'const pthread_rwlockattr_t *restrict'
| |-ParmVarDecl 0x5584ea5ee6a8 <line:578:8, col:24> col:24 __pshared 'int *restrict'
| |-NoThrowAttr 0x5584ea5ee8b8 <line:579:22>
| `-NonNullAttr 0x5584ea5ee910 <col:63, col:80> 1 2
|-FunctionDecl 0x5584ea5eeb38 <line:580:1, line:582:79> line:580:12 pthread_rwlockattr_setpshared 'int (pthread_rwlockattr_t *, int)' extern
| |-ParmVarDecl 0x5584ea5ee958 <col:43, col:65> col:65 __attr 'pthread_rwlockattr_t *'
| |-ParmVarDecl 0x5584ea5ee9d8 <line:581:8, col:12> col:12 __pshared 'int'
| |-NoThrowAttr 0x5584ea5eebe8 <line:582:22>
| `-NonNullAttr 0x5584ea5eec40 <col:63, col:77> 1
|-FunctionDecl 0x5584ea5eede8 <line:583:1, line:586:82> line:583:12 pthread_rwlockattr_getkind_np 'int (const pthread_rwlockattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x5584ea5eec88 <col:43, line:584:19> col:19 __attr 'const pthread_rwlockattr_t *restrict'
| |-ParmVarDecl 0x5584ea5eed08 <line:585:8, col:24> col:24 __pref 'int *restrict'
| |-NoThrowAttr 0x5584ea5eee98 <line:586:22>
| `-NonNullAttr 0x5584ea5eeef0 <col:63, col:80> 1 2
|-FunctionDecl 0x5584ea5ef078 <line:587:1, line:588:93> line:587:12 pthread_rwlockattr_setkind_np 'int (pthread_rwlockattr_t *, int)' extern
| |-ParmVarDecl 0x5584ea5eef38 <col:43, col:65> col:65 __attr 'pthread_rwlockattr_t *'
| |-ParmVarDecl 0x5584ea5eefb8 <line:588:8, col:12> col:12 __pref 'int'
| |-NoThrowAttr 0x5584ea5ef128 <col:36>
| `-NonNullAttr 0x5584ea5ef180 <col:77, col:91> 1
|-FunctionDecl 0x5584ea5ef4b8 <line:589:1, line:591:79> line:589:12 pthread_cond_init 'int (pthread_cond_t *restrict, const pthread_condattr_t *restrict)' extern
| |-ParmVarDecl 0x5584ea5ef260 <col:31, col:58> col:58 __cond 'pthread_cond_t *restrict'
| |-ParmVarDecl 0x5584ea5ef370 <line:590:10, col:47> col:47 __cond_attr 'const pthread_condattr_t *restrict'
| |-NoThrowAttr 0x5584ea5ef568 <line:591:22>
| `-NonNullAttr 0x5584ea5ef5c0 <col:63, col:77> 1
|-FunctionDecl 0x5584ea5ef738 <line:592:1, line:593:79> line:592:12 pthread_cond_destroy 'int (pthread_cond_t *)' extern
| |-ParmVarDecl 0x5584ea5ef608 <col:34, col:50> col:50 __cond 'pthread_cond_t *'
| |-NoThrowAttr 0x5584ea5ef7e0 <line:593:22>
| `-NonNullAttr 0x5584ea5ef838 <col:63, col:77> 1
|-FunctionDecl 0x5584ea5ef940 <line:594:1, line:595:68> line:594:12 pthread_cond_signal 'int (pthread_cond_t *)' extern
| |-ParmVarDecl 0x5584ea5ef888 <col:33, col:49> col:49 __cond 'pthread_cond_t *'
| |-NoThrowAttr 0x5584ea5ef9e8 <line:595:22>
| `-NonNullAttr 0x5584ea5efa40 <col:52, col:66> 1
|-FunctionDecl 0x5584ea5efb58 <line:596:1, line:597:68> line:596:12 pthread_cond_broadcast 'int (pthread_cond_t *)' extern
| |-ParmVarDecl 0x5584ea5efaa0 <col:36, col:52> col:52 __cond 'pthread_cond_t *'
| |-NoThrowAttr 0x5584ea5efc00 <line:597:22>
| `-NonNullAttr 0x5584ea5efc58 <col:52, col:66> 1
|-FunctionDecl 0x5584ea5efe88 <line:598:1, line:600:41> line:598:12 pthread_cond_wait 'int (pthread_cond_t *restrict, pthread_mutex_t *restrict)' extern
| |-ParmVarDecl 0x5584ea5efca8 <col:31, col:58> col:58 __cond 'pthread_cond_t *restrict'
| |-ParmVarDecl 0x5584ea5efd20 <line:599:10, col:38> col:38 __mutex 'pthread_mutex_t *restrict'
| `-NonNullAttr 0x5584ea5eff38 <line:600:22, col:39> 1 2
|-FunctionDecl 0x5584ea5f0268 <line:601:1, line:604:44> line:601:12 pthread_cond_timedwait 'int (pthread_cond_t *restrict, pthread_mutex_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x5584ea5effb8 <col:36, col:63> col:63 __cond 'pthread_cond_t *restrict'
| |-ParmVarDecl 0x5584ea5f0030 <line:602:8, col:36> col:36 __mutex 'pthread_mutex_t *restrict'
| |-ParmVarDecl 0x5584ea5f00c0 <line:603:8, col:42> col:42 __abstime 'const struct timespec *restrict'
| `-NonNullAttr 0x5584ea5f0320 <line:604:22, col:42> 1 2 3
|-FunctionDecl 0x5584ea5f0538 <line:605:1, line:606:79> line:605:12 pthread_condattr_init 'int (pthread_condattr_t *)' extern
| |-ParmVarDecl 0x5584ea5f0400 <col:35, col:55> col:55 __attr 'pthread_condattr_t *'
| |-NoThrowAttr 0x5584ea5f05e0 <line:606:22>
| `-NonNullAttr 0x5584ea5f0638 <col:63, col:77> 1
|-FunctionDecl 0x5584ea5f0740 <line:607:1, line:608:79> line:607:12 pthread_condattr_destroy 'int (pthread_condattr_t *)' extern
| |-ParmVarDecl 0x5584ea5f0688 <col:38, col:58> col:58 __attr 'pthread_condattr_t *'
| |-NoThrowAttr 0x5584ea5f07e8 <line:608:22>
| `-NonNullAttr 0x5584ea5f0840 <col:63, col:77> 1
|-FunctionDecl 0x5584ea5f0aa0 <line:609:1, line:612:82> line:609:12 pthread_condattr_getpshared 'int (const pthread_condattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x5584ea5f0888 <col:41, line:610:17> col:17 __attr 'const pthread_condattr_t *restrict'
| |-ParmVarDecl 0x5584ea5f0908 <line:611:6, col:22> col:22 __pshared 'int *restrict'
| |-NoThrowAttr 0x5584ea5f0b50 <line:612:22>
| `-NonNullAttr 0x5584ea5f0ba8 <col:63, col:80> 1 2
|-FunctionDecl 0x5584ea5f0db8 <line:613:1, line:614:94> line:613:12 pthread_condattr_setpshared 'int (pthread_condattr_t *, int)' extern
| |-ParmVarDecl 0x5584ea5f0bf8 <col:41, col:61> col:61 __attr 'pthread_condattr_t *'
| |-ParmVarDecl 0x5584ea5f0c78 <line:614:6, col:10> col:10 __pshared 'int'
| |-NoThrowAttr 0x5584ea5f0e68 <col:37>
| `-NonNullAttr 0x5584ea5f0ec0 <col:78, col:92> 1
|-FunctionDecl 0x5584ea5f10d8 <line:615:1, line:618:82> line:615:12 pthread_condattr_getclock 'int (const pthread_condattr_t *restrict, __clockid_t *restrict)' extern
| |-ParmVarDecl 0x5584ea5f0f08 <col:39, line:616:22> col:22 __attr 'const pthread_condattr_t *restrict'
| |-ParmVarDecl 0x5584ea5f0fb0 <line:617:11, col:35> col:35 __clock_id '__clockid_t *restrict'
| |-NoThrowAttr 0x5584ea5f1188 <line:618:22>
| `-NonNullAttr 0x5584ea5f11e0 <col:63, col:80> 1 2
|-FunctionDecl 0x5584ea5f13a8 <line:619:1, line:621:79> line:619:12 pthread_condattr_setclock 'int (pthread_condattr_t *, __clockid_t)' extern
| |-ParmVarDecl 0x5584ea5f1228 <col:39, col:59> col:59 __attr 'pthread_condattr_t *'
| |-ParmVarDecl 0x5584ea5f12a0 <line:620:11, col:23> col:23 __clock_id '__clockid_t':'int'
| |-NoThrowAttr 0x5584ea5f1458 <line:621:22>
| `-NonNullAttr 0x5584ea5f14b0 <col:63, col:77> 1
|-FunctionDecl 0x5584ea5f1758 <line:622:1, line:623:79> line:622:12 pthread_spin_init 'int (pthread_spinlock_t *, int)' extern
| |-ParmVarDecl 0x5584ea5f1590 <col:31, col:51> col:51 __lock 'pthread_spinlock_t *'
| |-ParmVarDecl 0x5584ea5f1610 <col:59, col:63> col:63 __pshared 'int'
| |-NoThrowAttr 0x5584ea5f1808 <line:623:22>
| `-NonNullAttr 0x5584ea5f1860 <col:63, col:77> 1
|-FunctionDecl 0x5584ea5f19d8 <line:624:1, line:625:79> line:624:12 pthread_spin_destroy 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x5584ea5f18a8 <col:34, col:54> col:54 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x5584ea5f1ab0 <line:625:22>
| `-NonNullAttr 0x5584ea5f1b08 <col:63, col:77> 1
|-FunctionDecl 0x5584ea5f1c10 <line:626:1, line:627:68> line:626:12 pthread_spin_lock 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x5584ea5f1b58 <col:31, col:51> col:51 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x5584ea5f1cb8 <line:627:22>
| `-NonNullAttr 0x5584ea5f1d10 <col:52, col:66> 1
|-FunctionDecl 0x5584ea5f1e10 <line:628:1, line:629:68> line:628:12 pthread_spin_trylock 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x5584ea5f1d58 <col:34, col:54> col:54 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x5584ea5f1eb8 <line:629:22>
| `-NonNullAttr 0x5584ea5f1f10 <col:52, col:66> 1
|-FunctionDecl 0x5584ea5f2010 <line:630:1, line:631:68> line:630:12 pthread_spin_unlock 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x5584ea5f1f58 <col:33, col:53> col:53 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x5584ea5f20b8 <line:631:22>
| `-NonNullAttr 0x5584ea5f2110 <col:52, col:66> 1
|-FunctionDecl 0x5584ea5f24e8 <line:632:1, line:635:79> line:632:12 pthread_barrier_init 'int (pthread_barrier_t *restrict, const pthread_barrierattr_t *restrict, unsigned int)' extern
| |-ParmVarDecl 0x5584ea5f21f0 <col:34, col:64> col:64 __barrier 'pthread_barrier_t *restrict'
| |-ParmVarDecl 0x5584ea5f2300 <line:633:6, line:634:6> col:6 __attr 'const pthread_barrierattr_t *restrict'
| |-ParmVarDecl 0x5584ea5f2380 <col:14, col:27> col:27 __count 'unsigned int'
| |-NoThrowAttr 0x5584ea5f25a0 <line:635:22>
| `-NonNullAttr 0x5584ea5f25f8 <col:63, col:77> 1
|-FunctionDecl 0x5584ea5f2778 <line:636:1, line:637:79> line:636:12 pthread_barrier_destroy 'int (pthread_barrier_t *)' extern
| |-ParmVarDecl 0x5584ea5f2648 <col:37, col:56> col:56 __barrier 'pthread_barrier_t *'
| |-NoThrowAttr 0x5584ea5f2820 <line:637:22>
| `-NonNullAttr 0x5584ea5f2878 <col:63, col:77> 1
|-FunctionDecl 0x5584ea5f2980 <line:638:1, line:639:68> line:638:12 pthread_barrier_wait 'int (pthread_barrier_t *)' extern
| |-ParmVarDecl 0x5584ea5f28c8 <col:34, col:53> col:53 __barrier 'pthread_barrier_t *'
| |-NoThrowAttr 0x5584ea5f2a28 <line:639:22>
| `-NonNullAttr 0x5584ea5f2a80 <col:52, col:66> 1
|-FunctionDecl 0x5584ea5f3c88 <line:640:1, line:641:79> line:640:12 pthread_barrierattr_init 'int (pthread_barrierattr_t *)' extern
| |-ParmVarDecl 0x5584ea5f3b50 <col:38, col:61> col:61 __attr 'pthread_barrierattr_t *'
| |-NoThrowAttr 0x5584ea5f3d30 <line:641:22>
| `-NonNullAttr 0x5584ea5f3d88 <col:63, col:77> 1
|-FunctionDecl 0x5584ea5f3e90 <line:642:1, line:643:79> line:642:12 pthread_barrierattr_destroy 'int (pthread_barrierattr_t *)' extern
| |-ParmVarDecl 0x5584ea5f3dd8 <col:41, col:64> col:64 __attr 'pthread_barrierattr_t *'
| |-NoThrowAttr 0x5584ea5f3f38 <line:643:22>
| `-NonNullAttr 0x5584ea5f3f90 <col:63, col:77> 1
|-FunctionDecl 0x5584ea5f41b8 <line:644:1, line:647:82> line:644:12 pthread_barrierattr_getpshared 'int (const pthread_barrierattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x5584ea5f3fd8 <col:44, line:645:20> col:20 __attr 'const pthread_barrierattr_t *restrict'
| |-ParmVarDecl 0x5584ea5f4058 <line:646:9, col:25> col:25 __pshared 'int *restrict'
| |-NoThrowAttr 0x5584ea5f4268 <line:647:22>
| `-NonNullAttr 0x5584ea5f42c0 <col:63, col:80> 1 2
|-FunctionDecl 0x5584ea5f44c8 <line:648:1, line:650:79> line:648:12 pthread_barrierattr_setpshared 'int (pthread_barrierattr_t *, int)' extern
| |-ParmVarDecl 0x5584ea5f4308 <col:44, col:67> col:67 __attr 'pthread_barrierattr_t *'
| |-ParmVarDecl 0x5584ea5f4388 <line:649:9, col:13> col:13 __pshared 'int'
| |-NoThrowAttr 0x5584ea5f4578 <line:650:22>
| `-NonNullAttr 0x5584ea5f45d0 <col:63, col:77> 1
|-FunctionDecl 0x5584ea5f4918 <line:651:1, line:653:79> line:651:12 pthread_key_create 'int (pthread_key_t *, void (*)(void *))' extern
| |-ParmVarDecl 0x5584ea5f46b0 <col:32, col:47> col:47 __key 'pthread_key_t *'
| |-ParmVarDecl 0x5584ea5f47d0 <line:652:11, col:43> col:18 __destr_function 'void (*)(void *)'
| |-NoThrowAttr 0x5584ea5f49c8 <line:653:22>
| `-NonNullAttr 0x5584ea5f4a20 <col:63, col:77> 1
|-FunctionDecl 0x5584ea5f4b88 <line:654:1, col:92> col:12 pthread_key_delete 'int (pthread_key_t)' extern
| |-ParmVarDecl 0x5584ea5f4a68 <col:32, col:46> col:46 __key 'pthread_key_t':'unsigned int'
| `-NoThrowAttr 0x5584ea5f4c30 <col:69>
|-FunctionDecl 0x5584ea5f4da8 <line:655:1, col:95> col:14 pthread_getspecific 'void *(pthread_key_t)' extern
| |-ParmVarDecl 0x5584ea5f4c98 <col:35, col:49> col:49 __key 'pthread_key_t':'unsigned int'
| `-NoThrowAttr 0x5584ea5f4e50 <col:72>
|-FunctionDecl 0x5584ea5f5088 <line:656:1, line:657:67> line:656:12 pthread_setspecific 'int (pthread_key_t, const void *)' extern
| |-ParmVarDecl 0x5584ea5f4eb8 <col:33, col:47> col:47 __key 'pthread_key_t':'unsigned int'
| |-ParmVarDecl 0x5584ea5f4f68 <line:657:5, col:17> col:17 __pointer 'const void *'
| `-NoThrowAttr 0x5584ea5f5138 <col:44>
|-FunctionDecl 0x5584ea5f5358 <line:658:1, line:660:79> line:658:12 pthread_getcpuclockid 'int (pthread_t, __clockid_t *)' extern
| |-ParmVarDecl 0x5584ea5f51a0 <col:35, col:45> col:45 __thread_id 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x5584ea5f5218 <line:659:7, col:20> col:20 __clock_id '__clockid_t *'
| |-NoThrowAttr 0x5584ea5f5408 <line:660:22>
| `-NonNullAttr 0x5584ea5f5460 <col:63, col:77> 2
|-FunctionDecl 0x5584ea5f58a8 <line:661:1, line:663:70> line:661:12 pthread_atfork 'int (void (*)(void), void (*)(void), void (*)(void))' extern
| |-ParmVarDecl 0x5584ea5f5540 <col:28, col:51> col:35 __prepare 'void (*)(void)'
| |-ParmVarDecl 0x5584ea5f5650 <line:662:7, col:29> col:14 __parent 'void (*)(void)'
| |-ParmVarDecl 0x5584ea5f5760 <line:663:7, col:28> col:14 __child 'void (*)(void)'
| `-NoThrowAttr 0x5584ea5f5960 <col:47>
|-FunctionDecl 0x5584ea5f5af0 <line:665:1, col:20> col:8 used P0 'void *(void *)'
| `-ParmVarDecl 0x5584ea5f59d0 <col:11, col:17> col:17 arg 'void *'
|-FunctionDecl 0x5584ea5f5c48 <line:666:1, col:20> col:8 used P1 'void *(void *)'
| `-ParmVarDecl 0x5584ea5f5bb0 <col:11, col:17> col:17 arg 'void *'
|-FunctionDecl 0x5584ea5f5da0 <line:667:1, col:20> col:8 used P2 'void *(void *)'
| `-ParmVarDecl 0x5584ea5f5d08 <col:11, col:17> col:17 arg 'void *'
|-FunctionDecl 0x5584ea5f5e68 <line:668:1, col:12> col:6 fence 'void ()'
|-FunctionDecl 0x5584ea5f5f28 <line:669:1, col:12> col:6 isync 'void ()'
|-FunctionDecl 0x5584ea5f5fe8 <line:670:1, col:14> col:6 lwfence 'void ()'
|-VarDecl 0x5584ea5f60a0 <line:671:1, col:5> col:5 used __unbuffered_cnt 'int'
|-VarDecl 0x5584ea5f6120 prev 0x5584ea5f60a0 <line:672:1, col:24> col:5 used __unbuffered_cnt 'int' cinit
| `-IntegerLiteral 0x5584ea5f6188 <col:24> 'int' 0
|-VarDecl 0x5584ea5f61c0 <line:673:1, col:5> col:5 used __unbuffered_p0_EAX 'int'
|-VarDecl 0x5584ea5f6240 prev 0x5584ea5f61c0 <line:674:1, col:27> col:5 used __unbuffered_p0_EAX 'int' cinit
| `-IntegerLiteral 0x5584ea5f62a8 <col:27> 'int' 0
|-VarDecl 0x5584ea5f62e0 <line:675:1, col:5> col:5 used __unbuffered_p1_EAX 'int'
|-VarDecl 0x5584ea5f6360 prev 0x5584ea5f62e0 <line:676:1, col:27> col:5 used __unbuffered_p1_EAX 'int' cinit
| `-IntegerLiteral 0x5584ea5f63c8 <col:27> 'int' 0
|-VarDecl 0x5584ea5f6400 <line:677:1, col:5> col:5 used __unbuffered_p1_EBX 'int'
|-VarDecl 0x5584ea5f6480 prev 0x5584ea5f6400 <line:678:1, col:27> col:5 used __unbuffered_p1_EBX 'int' cinit
| `-IntegerLiteral 0x5584ea5f64e8 <col:27> 'int' 0
|-VarDecl 0x5584ea5f6520 <line:679:1, col:5> col:5 used __unbuffered_p2_EAX 'int'
|-VarDecl 0x5584ea5f65a0 prev 0x5584ea5f6520 <line:680:1, col:27> col:5 used __unbuffered_p2_EAX 'int' cinit
| `-IntegerLiteral 0x5584ea5f6608 <col:27> 'int' 0
|-VarDecl 0x5584ea5f6640 <line:681:1, col:5> col:5 used __unbuffered_p2_EBX 'int'
|-VarDecl 0x5584ea5f66c0 prev 0x5584ea5f6640 <line:682:1, col:27> col:5 used __unbuffered_p2_EBX 'int' cinit
| `-IntegerLiteral 0x5584ea5f6728 <col:27> 'int' 0
|-VarDecl 0x5584ea5f6758 <line:683:1, col:7> col:7 used main$tmp_guard0 '_Bool'
|-VarDecl 0x5584ea5f67d0 <line:684:1, col:7> col:7 used main$tmp_guard1 '_Bool'
|-VarDecl 0x5584ea5f6850 <line:685:1, col:5> col:5 used x 'int'
|-VarDecl 0x5584ea5f68d0 prev 0x5584ea5f6850 <line:686:1, col:9> col:5 used x 'int' cinit
| `-IntegerLiteral 0x5584ea5f6938 <col:9> 'int' 0
|-VarDecl 0x5584ea5f6970 <line:687:1, col:5> col:5 used y 'int'
|-VarDecl 0x5584ea5f69f0 prev 0x5584ea5f6970 <line:688:1, col:9> col:5 used y 'int' cinit
| `-IntegerLiteral 0x5584ea5f6a58 <col:9> 'int' 0
|-VarDecl 0x5584ea5f6b00 <line:689:1, col:5> col:5 used z 'int'
|-VarDecl 0x5584ea5f6b80 prev 0x5584ea5f6b00 <line:690:1, col:9> col:5 used z 'int' cinit
| `-IntegerLiteral 0x5584ea5f6be8 <col:9> 'int' 0
|-VarDecl 0x5584ea5f6c18 <line:691:1, col:7> col:7 used z$flush_delayed '_Bool'
|-VarDecl 0x5584ea5f6c98 <line:692:1, col:5> col:5 used z$mem_tmp 'int'
|-VarDecl 0x5584ea5f6d10 <line:693:1, col:7> col:7 used z$r_buff0_thd0 '_Bool'
|-VarDecl 0x5584ea5f6d88 <line:694:1, col:7> col:7 used z$r_buff0_thd1 '_Bool'
|-VarDecl 0x5584ea5f6e00 <line:695:1, col:7> col:7 used z$r_buff0_thd2 '_Bool'
|-VarDecl 0x5584ea5f6e78 <line:696:1, col:7> col:7 used z$r_buff0_thd3 '_Bool'
|-VarDecl 0x5584ea5f6ef0 <line:697:1, col:7> col:7 used z$r_buff1_thd0 '_Bool'
|-VarDecl 0x5584ea5f6f68 <line:698:1, col:7> col:7 used z$r_buff1_thd1 '_Bool'
|-VarDecl 0x5584ea5f6fe0 <line:699:1, col:7> col:7 used z$r_buff1_thd2 '_Bool'
|-VarDecl 0x5584ea5f7058 <line:700:1, col:7> col:7 used z$r_buff1_thd3 '_Bool'
|-VarDecl 0x5584ea5f70d0 <line:701:1, col:7> col:7 z$read_delayed '_Bool'
|-VarDecl 0x5584ea5f7150 <line:702:1, col:6> col:6 z$read_delayed_var 'int *'
|-VarDecl 0x5584ea5f71d0 <line:703:1, col:5> col:5 used z$w_buff0 'int'
|-VarDecl 0x5584ea5f7248 <line:704:1, col:7> col:7 used z$w_buff0_used '_Bool'
|-VarDecl 0x5584ea5f72c8 <line:705:1, col:5> col:5 used z$w_buff1 'int'
|-VarDecl 0x5584ea5f7340 <line:706:1, col:7> col:7 used z$w_buff1_used '_Bool'
|-VarDecl 0x5584ea5f73b8 <line:707:1, col:7> col:7 used weak$$choice0 '_Bool'
|-VarDecl 0x5584ea5f7430 <line:708:1, col:7> col:7 used weak$$choice2 '_Bool'
|-FunctionDecl 0x5584ea5f7548 prev 0x5584ea5f5af0 <line:709:1, line:737:1> line:709:8 used P0 'void *(void *)'
| |-ParmVarDecl 0x5584ea5f74b0 <col:11, col:17> col:17 arg 'void *'
| `-CompoundStmt 0x5584ea5f8d98 <line:710:1, line:737:1>
|   |-CallExpr 0x5584ea5f7658 <line:711:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x5584ea5f7640 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5584ea5f75f0 <col:3> 'void ()' Function 0x5584ea59ce40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x5584ea5f76d0 <line:712:3, col:15> 'int' '='
|   | |-DeclRefExpr 0x5584ea5f7678 <col:3> 'int' lvalue Var 0x5584ea5f72c8 'z$w_buff1' 'int'
|   | `-ImplicitCastExpr 0x5584ea5f76b8 <col:15> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x5584ea5f7698 <col:15> 'int' lvalue Var 0x5584ea5f71d0 'z$w_buff0' 'int'
|   |-BinaryOperator 0x5584ea5f7730 <line:713:3, col:15> 'int' '='
|   | |-DeclRefExpr 0x5584ea5f76f0 <col:3> 'int' lvalue Var 0x5584ea5f71d0 'z$w_buff0' 'int'
|   | `-IntegerLiteral 0x5584ea5f7710 <col:15> 'int' 1
|   |-BinaryOperator 0x5584ea5f77a8 <line:714:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x5584ea5f7750 <col:3> '_Bool' lvalue Var 0x5584ea5f7340 'z$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x5584ea5f7790 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x5584ea5f7770 <col:20> '_Bool' lvalue Var 0x5584ea5f7248 'z$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x5584ea5f7840 <line:715:3, col:27> '_Bool' '='
|   | |-DeclRefExpr 0x5584ea5f77c8 <col:3> '_Bool' lvalue Var 0x5584ea5f7248 'z$w_buff0_used' '_Bool'
|   | `-CStyleCastExpr 0x5584ea5f7818 <col:20, col:27> '_Bool' <IntegralToBoolean>
|   |   `-IntegerLiteral 0x5584ea5f77e8 <col:27> 'int' 1
|   |-CallExpr 0x5584ea5f79c8 <line:716:3, col:56> 'void'
|   | |-ImplicitCastExpr 0x5584ea5f79b0 <col:3> 'void (*)(int)' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x5584ea5f7860 <col:3> 'void (int)' Function 0x5584ea59cbc8 '__VERIFIER_assert' 'void (int)'
|   | `-UnaryOperator 0x5584ea5f7960 <col:21, col:55> 'int' prefix '!' cannot overflow
|   |   `-ParenExpr 0x5584ea5f7940 <col:22, col:55> 'int'
|   |     `-BinaryOperator 0x5584ea5f7920 <col:23, col:41> 'int' '&&'
|   |       |-ImplicitCastExpr 0x5584ea5f78d8 <col:23> 'int' <IntegralCast>
|   |       | `-ImplicitCastExpr 0x5584ea5f78c0 <col:23> '_Bool' <LValueToRValue>
|   |       |   `-DeclRefExpr 0x5584ea5f7880 <col:23> '_Bool' lvalue Var 0x5584ea5f7340 'z$w_buff1_used' '_Bool'
|   |       `-ImplicitCastExpr 0x5584ea5f7908 <col:41> 'int' <IntegralCast>
|   |         `-ImplicitCastExpr 0x5584ea5f78f0 <col:41> '_Bool' <LValueToRValue>
|   |           `-DeclRefExpr 0x5584ea5f78a0 <col:41> '_Bool' lvalue Var 0x5584ea5f7248 'z$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x5584ea5f7a48 <line:717:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x5584ea5f79f0 <col:3> '_Bool' lvalue Var 0x5584ea5f6ef0 'z$r_buff1_thd0' '_Bool'
|   | `-ImplicitCastExpr 0x5584ea5f7a30 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x5584ea5f7a10 <col:20> '_Bool' lvalue Var 0x5584ea5f6d10 'z$r_buff0_thd0' '_Bool'
|   |-BinaryOperator 0x5584ea5f7ac0 <line:718:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x5584ea5f7a68 <col:3> '_Bool' lvalue Var 0x5584ea5f6f68 'z$r_buff1_thd1' '_Bool'
|   | `-ImplicitCastExpr 0x5584ea5f7aa8 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x5584ea5f7a88 <col:20> '_Bool' lvalue Var 0x5584ea5f6d88 'z$r_buff0_thd1' '_Bool'
|   |-BinaryOperator 0x5584ea5f7b48 <line:719:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x5584ea5f7ae0 <col:3> '_Bool' lvalue Var 0x5584ea5f6fe0 'z$r_buff1_thd2' '_Bool'
|   | `-ImplicitCastExpr 0x5584ea5f7b30 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x5584ea5f7b10 <col:20> '_Bool' lvalue Var 0x5584ea5f6e00 'z$r_buff0_thd2' '_Bool'
|   |-BinaryOperator 0x5584ea5f7bc0 <line:720:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x5584ea5f7b68 <col:3> '_Bool' lvalue Var 0x5584ea5f7058 'z$r_buff1_thd3' '_Bool'
|   | `-ImplicitCastExpr 0x5584ea5f7ba8 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x5584ea5f7b88 <col:20> '_Bool' lvalue Var 0x5584ea5f6e78 'z$r_buff0_thd3' '_Bool'
|   |-BinaryOperator 0x5584ea5f7c58 <line:721:3, col:27> '_Bool' '='
|   | |-DeclRefExpr 0x5584ea5f7be0 <col:3> '_Bool' lvalue Var 0x5584ea5f6d88 'z$r_buff0_thd1' '_Bool'
|   | `-CStyleCastExpr 0x5584ea5f7c30 <col:20, col:27> '_Bool' <IntegralToBoolean>
|   |   `-IntegerLiteral 0x5584ea5f7c00 <col:27> 'int' 1
|   |-CallExpr 0x5584ea5f7cb0 <line:722:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x5584ea5f7c98 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5584ea5f7c78 <col:3> 'void ()' Function 0x5584ea59cf00 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x5584ea5f7d08 <line:723:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x5584ea5f7cf0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5584ea5f7cd0 <col:3> 'void ()' Function 0x5584ea59ce40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x5584ea5f7d80 <line:724:3, col:25> 'int' '='
|   | |-DeclRefExpr 0x5584ea5f7d28 <col:3> 'int' lvalue Var 0x5584ea5f6240 '__unbuffered_p0_EAX' 'int'
|   | `-ImplicitCastExpr 0x5584ea5f7d68 <col:25> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x5584ea5f7d48 <col:25> 'int' lvalue Var 0x5584ea5f68d0 'x' 'int'
|   |-CallExpr 0x5584ea5f7dd8 <line:725:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x5584ea5f7dc0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5584ea5f7da0 <col:3> 'void ()' Function 0x5584ea59cf00 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x5584ea5f7e30 <line:726:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x5584ea5f7e18 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5584ea5f7df8 <col:3> 'void ()' Function 0x5584ea59ce40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x5584ea5f8118 <line:727:3, col:103> 'int' '='
|   | |-DeclRefExpr 0x5584ea5f7e50 <col:3> 'int' lvalue Var 0x5584ea5f6b80 'z' 'int'
|   | `-ConditionalOperator 0x5584ea5f80e8 <col:7, col:103> 'int'
|   |   |-BinaryOperator 0x5584ea5f7f10 <col:7, col:25> 'int' '&&'
|   |   | |-ImplicitCastExpr 0x5584ea5f7ec8 <col:7> 'int' <IntegralCast>
|   |   | | `-ImplicitCastExpr 0x5584ea5f7eb0 <col:7> '_Bool' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x5584ea5f7e70 <col:7> '_Bool' lvalue Var 0x5584ea5f7248 'z$w_buff0_used' '_Bool'
|   |   | `-ImplicitCastExpr 0x5584ea5f7ef8 <col:25> 'int' <IntegralCast>
|   |   |   `-ImplicitCastExpr 0x5584ea5f7ee0 <col:25> '_Bool' <LValueToRValue>
|   |   |     `-DeclRefExpr 0x5584ea5f7e90 <col:25> '_Bool' lvalue Var 0x5584ea5f6d88 'z$r_buff0_thd1' '_Bool'
|   |   |-ImplicitCastExpr 0x5584ea5f80d0 <col:42> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x5584ea5f7f30 <col:42> 'int' lvalue Var 0x5584ea5f71d0 'z$w_buff0' 'int'
|   |   `-ParenExpr 0x5584ea5f80b0 <col:54, col:103> 'int'
|   |     `-ConditionalOperator 0x5584ea5f8080 <col:55, col:102> 'int'
|   |       |-BinaryOperator 0x5584ea5f7ff0 <col:55, col:73> 'int' '&&'
|   |       | |-ImplicitCastExpr 0x5584ea5f7fa8 <col:55> 'int' <IntegralCast>
|   |       | | `-ImplicitCastExpr 0x5584ea5f7f90 <col:55> '_Bool' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x5584ea5f7f50 <col:55> '_Bool' lvalue Var 0x5584ea5f7340 'z$w_buff1_used' '_Bool'
|   |       | `-ImplicitCastExpr 0x5584ea5f7fd8 <col:73> 'int' <IntegralCast>
|   |       |   `-ImplicitCastExpr 0x5584ea5f7fc0 <col:73> '_Bool' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x5584ea5f7f70 <col:73> '_Bool' lvalue Var 0x5584ea5f6f68 'z$r_buff1_thd1' '_Bool'
|   |       |-ImplicitCastExpr 0x5584ea5f8050 <col:90> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x5584ea5f8010 <col:90> 'int' lvalue Var 0x5584ea5f72c8 'z$w_buff1' 'int'
|   |       `-ImplicitCastExpr 0x5584ea5f8068 <col:102> 'int' <LValueToRValue>
|   |         `-DeclRefExpr 0x5584ea5f8030 <col:102> 'int' lvalue Var 0x5584ea5f6b80 'z' 'int'
|   |-BinaryOperator 0x5584ea5f8320 <line:728:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x5584ea5f8138 <col:3> '_Bool' lvalue Var 0x5584ea5f7248 'z$w_buff0_used' '_Bool'
|   | `-ImplicitCastExpr 0x5584ea5f8308 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x5584ea5f82d8 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x5584ea5f81f8 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x5584ea5f81b0 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x5584ea5f8198 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x5584ea5f8158 <col:20> '_Bool' lvalue Var 0x5584ea5f7248 'z$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x5584ea5f81e0 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x5584ea5f81c8 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x5584ea5f8178 <col:38> '_Bool' lvalue Var 0x5584ea5f6d88 'z$r_buff0_thd1' '_Bool'
|   |     |-ImplicitCastExpr 0x5584ea5f8290 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x5584ea5f8248 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x5584ea5f8218 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x5584ea5f82c0 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x5584ea5f82a8 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x5584ea5f8270 <col:66> '_Bool' lvalue Var 0x5584ea5f7248 'z$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x5584ea5f8608 <line:729:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x5584ea5f8340 <col:3> '_Bool' lvalue Var 0x5584ea5f7340 'z$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x5584ea5f85f0 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x5584ea5f85c0 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x5584ea5f84e0 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x5584ea5f8400 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x5584ea5f83b8 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x5584ea5f83a0 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x5584ea5f8360 <col:20> '_Bool' lvalue Var 0x5584ea5f7248 'z$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x5584ea5f83e8 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x5584ea5f83d0 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x5584ea5f8380 <col:38> '_Bool' lvalue Var 0x5584ea5f6d88 'z$r_buff0_thd1' '_Bool'
|   |     | `-BinaryOperator 0x5584ea5f84c0 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x5584ea5f8478 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x5584ea5f8460 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x5584ea5f8420 <col:56> '_Bool' lvalue Var 0x5584ea5f7340 'z$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x5584ea5f84a8 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x5584ea5f8490 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x5584ea5f8440 <col:74> '_Bool' lvalue Var 0x5584ea5f6f68 'z$r_buff1_thd1' '_Bool'
|   |     |-ImplicitCastExpr 0x5584ea5f8578 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x5584ea5f8530 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x5584ea5f8500 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x5584ea5f85a8 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x5584ea5f8590 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x5584ea5f8558 <col:102> '_Bool' lvalue Var 0x5584ea5f7340 'z$w_buff1_used' '_Bool'
|   |-BinaryOperator 0x5584ea5f8810 <line:730:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x5584ea5f8628 <col:3> '_Bool' lvalue Var 0x5584ea5f6d88 'z$r_buff0_thd1' '_Bool'
|   | `-ImplicitCastExpr 0x5584ea5f87f8 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x5584ea5f87c8 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x5584ea5f86e8 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x5584ea5f86a0 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x5584ea5f8688 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x5584ea5f8648 <col:20> '_Bool' lvalue Var 0x5584ea5f7248 'z$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x5584ea5f86d0 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x5584ea5f86b8 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x5584ea5f8668 <col:38> '_Bool' lvalue Var 0x5584ea5f6d88 'z$r_buff0_thd1' '_Bool'
|   |     |-ImplicitCastExpr 0x5584ea5f8780 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x5584ea5f8738 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x5584ea5f8708 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x5584ea5f87b0 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x5584ea5f8798 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x5584ea5f8760 <col:66> '_Bool' lvalue Var 0x5584ea5f6d88 'z$r_buff0_thd1' '_Bool'
|   |-BinaryOperator 0x5584ea5f8b20 <line:731:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x5584ea5f8830 <col:3> '_Bool' lvalue Var 0x5584ea5f6f68 'z$r_buff1_thd1' '_Bool'
|   | `-ImplicitCastExpr 0x5584ea5f8ae0 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x5584ea5f8ab0 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x5584ea5f89d0 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x5584ea5f88f0 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x5584ea5f88a8 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x5584ea5f8890 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x5584ea5f8850 <col:20> '_Bool' lvalue Var 0x5584ea5f7248 'z$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x5584ea5f88d8 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x5584ea5f88c0 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x5584ea5f8870 <col:38> '_Bool' lvalue Var 0x5584ea5f6d88 'z$r_buff0_thd1' '_Bool'
|   |     | `-BinaryOperator 0x5584ea5f89b0 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x5584ea5f8968 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x5584ea5f8950 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x5584ea5f8910 <col:56> '_Bool' lvalue Var 0x5584ea5f7340 'z$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x5584ea5f8998 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x5584ea5f8980 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x5584ea5f8930 <col:74> '_Bool' lvalue Var 0x5584ea5f6f68 'z$r_buff1_thd1' '_Bool'
|   |     |-ImplicitCastExpr 0x5584ea5f8a68 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x5584ea5f8a20 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x5584ea5f89f0 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x5584ea5f8a98 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x5584ea5f8a80 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x5584ea5f8a48 <col:102> '_Bool' lvalue Var 0x5584ea5f6f68 'z$r_buff1_thd1' '_Bool'
|   |-CallExpr 0x5584ea5f8b78 <line:732:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x5584ea5f8b60 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5584ea5f8b40 <col:3> 'void ()' Function 0x5584ea59cf00 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x5584ea5f8bd0 <line:733:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x5584ea5f8bb8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5584ea5f8b98 <col:3> 'void ()' Function 0x5584ea59ce40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x5584ea5f8c88 <line:734:3, col:41> 'int' '='
|   | |-DeclRefExpr 0x5584ea5f8bf0 <col:3> 'int' lvalue Var 0x5584ea5f6120 '__unbuffered_cnt' 'int'
|   | `-BinaryOperator 0x5584ea5f8c68 <col:22, col:41> 'int' '+'
|   |   |-ImplicitCastExpr 0x5584ea5f8c50 <col:22> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x5584ea5f8c10 <col:22> 'int' lvalue Var 0x5584ea5f6120 '__unbuffered_cnt' 'int'
|   |   `-IntegerLiteral 0x5584ea5f8c30 <col:41> 'int' 1
|   |-CallExpr 0x5584ea5f8ce0 <line:735:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x5584ea5f8cc8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5584ea5f8ca8 <col:3> 'void ()' Function 0x5584ea59cf00 '__VERIFIER_atomic_end' 'void ()'
|   `-ReturnStmt 0x5584ea5f8d88 <line:736:3, col:36>
|     `-CallExpr 0x5584ea5f8d68 <col:10, col:36> 'void *'
|       `-ImplicitCastExpr 0x5584ea5f8d50 <col:10> 'void *(*)(void)' <FunctionToPointerDecay>
|         `-DeclRefExpr 0x5584ea5f8d00 <col:10> 'void *(void)' Function 0x5584ea59c958 '__VERIFIER_nondet_pointer' 'void *(void)'
|-FunctionDecl 0x5584ea5f8f28 prev 0x5584ea5f5c48 <line:738:1, line:760:1> line:738:8 used P1 'void *(void *)'
| |-ParmVarDecl 0x5584ea5f8e90 <col:11, col:17> col:17 arg 'void *'
| `-CompoundStmt 0x5584ea5fa2b0 <line:739:1, line:760:1>
|   |-CallExpr 0x5584ea5f9008 <line:740:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x5584ea5f8ff0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5584ea5f8fd0 <col:3> 'void ()' Function 0x5584ea59ce40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x5584ea5f9068 <line:741:3, col:7> 'int' '='
|   | |-DeclRefExpr 0x5584ea5f9028 <col:3> 'int' lvalue Var 0x5584ea5f68d0 'x' 'int'
|   | `-IntegerLiteral 0x5584ea5f9048 <col:7> 'int' 1
|   |-CallExpr 0x5584ea5f90c0 <line:742:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x5584ea5f90a8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5584ea5f9088 <col:3> 'void ()' Function 0x5584ea59cf00 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x5584ea5f9118 <line:743:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x5584ea5f9100 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5584ea5f90e0 <col:3> 'void ()' Function 0x5584ea59ce40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x5584ea5f9190 <line:744:3, col:25> 'int' '='
|   | |-DeclRefExpr 0x5584ea5f9138 <col:3> 'int' lvalue Var 0x5584ea5f6360 '__unbuffered_p1_EAX' 'int'
|   | `-ImplicitCastExpr 0x5584ea5f9178 <col:25> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x5584ea5f9158 <col:25> 'int' lvalue Var 0x5584ea5f68d0 'x' 'int'
|   |-CallExpr 0x5584ea5f91e8 <line:745:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x5584ea5f91d0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5584ea5f91b0 <col:3> 'void ()' Function 0x5584ea59cf00 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x5584ea5f9240 <line:746:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x5584ea5f9228 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5584ea5f9208 <col:3> 'void ()' Function 0x5584ea59ce40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x5584ea5f92b8 <line:747:3, col:25> 'int' '='
|   | |-DeclRefExpr 0x5584ea5f9260 <col:3> 'int' lvalue Var 0x5584ea5f6480 '__unbuffered_p1_EBX' 'int'
|   | `-ImplicitCastExpr 0x5584ea5f92a0 <col:25> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x5584ea5f9280 <col:25> 'int' lvalue Var 0x5584ea5f69f0 'y' 'int'
|   |-CallExpr 0x5584ea5f9310 <line:748:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x5584ea5f92f8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5584ea5f92d8 <col:3> 'void ()' Function 0x5584ea59cf00 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x5584ea5f9368 <line:749:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x5584ea5f9350 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5584ea5f9330 <col:3> 'void ()' Function 0x5584ea59ce40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x5584ea5f9650 <line:750:3, col:103> 'int' '='
|   | |-DeclRefExpr 0x5584ea5f9388 <col:3> 'int' lvalue Var 0x5584ea5f6b80 'z' 'int'
|   | `-ConditionalOperator 0x5584ea5f9620 <col:7, col:103> 'int'
|   |   |-BinaryOperator 0x5584ea5f9448 <col:7, col:25> 'int' '&&'
|   |   | |-ImplicitCastExpr 0x5584ea5f9400 <col:7> 'int' <IntegralCast>
|   |   | | `-ImplicitCastExpr 0x5584ea5f93e8 <col:7> '_Bool' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x5584ea5f93a8 <col:7> '_Bool' lvalue Var 0x5584ea5f7248 'z$w_buff0_used' '_Bool'
|   |   | `-ImplicitCastExpr 0x5584ea5f9430 <col:25> 'int' <IntegralCast>
|   |   |   `-ImplicitCastExpr 0x5584ea5f9418 <col:25> '_Bool' <LValueToRValue>
|   |   |     `-DeclRefExpr 0x5584ea5f93c8 <col:25> '_Bool' lvalue Var 0x5584ea5f6e00 'z$r_buff0_thd2' '_Bool'
|   |   |-ImplicitCastExpr 0x5584ea5f9608 <col:42> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x5584ea5f9468 <col:42> 'int' lvalue Var 0x5584ea5f71d0 'z$w_buff0' 'int'
|   |   `-ParenExpr 0x5584ea5f95e8 <col:54, col:103> 'int'
|   |     `-ConditionalOperator 0x5584ea5f95b8 <col:55, col:102> 'int'
|   |       |-BinaryOperator 0x5584ea5f9528 <col:55, col:73> 'int' '&&'
|   |       | |-ImplicitCastExpr 0x5584ea5f94e0 <col:55> 'int' <IntegralCast>
|   |       | | `-ImplicitCastExpr 0x5584ea5f94c8 <col:55> '_Bool' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x5584ea5f9488 <col:55> '_Bool' lvalue Var 0x5584ea5f7340 'z$w_buff1_used' '_Bool'
|   |       | `-ImplicitCastExpr 0x5584ea5f9510 <col:73> 'int' <IntegralCast>
|   |       |   `-ImplicitCastExpr 0x5584ea5f94f8 <col:73> '_Bool' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x5584ea5f94a8 <col:73> '_Bool' lvalue Var 0x5584ea5f6fe0 'z$r_buff1_thd2' '_Bool'
|   |       |-ImplicitCastExpr 0x5584ea5f9588 <col:90> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x5584ea5f9548 <col:90> 'int' lvalue Var 0x5584ea5f72c8 'z$w_buff1' 'int'
|   |       `-ImplicitCastExpr 0x5584ea5f95a0 <col:102> 'int' <LValueToRValue>
|   |         `-DeclRefExpr 0x5584ea5f9568 <col:102> 'int' lvalue Var 0x5584ea5f6b80 'z' 'int'
|   |-BinaryOperator 0x5584ea5f9858 <line:751:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x5584ea5f9670 <col:3> '_Bool' lvalue Var 0x5584ea5f7248 'z$w_buff0_used' '_Bool'
|   | `-ImplicitCastExpr 0x5584ea5f9840 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x5584ea5f9810 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x5584ea5f9730 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x5584ea5f96e8 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x5584ea5f96d0 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x5584ea5f9690 <col:20> '_Bool' lvalue Var 0x5584ea5f7248 'z$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x5584ea5f9718 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x5584ea5f9700 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x5584ea5f96b0 <col:38> '_Bool' lvalue Var 0x5584ea5f6e00 'z$r_buff0_thd2' '_Bool'
|   |     |-ImplicitCastExpr 0x5584ea5f97c8 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x5584ea5f9780 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x5584ea5f9750 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x5584ea5f97f8 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x5584ea5f97e0 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x5584ea5f97a8 <col:66> '_Bool' lvalue Var 0x5584ea5f7248 'z$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x5584ea5f9b78 <line:752:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x5584ea5f9878 <col:3> '_Bool' lvalue Var 0x5584ea5f7340 'z$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x5584ea5f9b60 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x5584ea5f9b30 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x5584ea5f9a18 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x5584ea5f9938 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x5584ea5f98f0 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x5584ea5f98d8 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x5584ea5f9898 <col:20> '_Bool' lvalue Var 0x5584ea5f7248 'z$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x5584ea5f9920 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x5584ea5f9908 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x5584ea5f98b8 <col:38> '_Bool' lvalue Var 0x5584ea5f6e00 'z$r_buff0_thd2' '_Bool'
|   |     | `-BinaryOperator 0x5584ea5f99f8 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x5584ea5f99b0 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x5584ea5f9998 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x5584ea5f9958 <col:56> '_Bool' lvalue Var 0x5584ea5f7340 'z$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x5584ea5f99e0 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x5584ea5f99c8 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x5584ea5f9978 <col:74> '_Bool' lvalue Var 0x5584ea5f6fe0 'z$r_buff1_thd2' '_Bool'
|   |     |-ImplicitCastExpr 0x5584ea5f9ab0 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x5584ea5f9a68 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x5584ea5f9a38 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x5584ea5f9ae0 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x5584ea5f9ac8 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x5584ea5f9a90 <col:102> '_Bool' lvalue Var 0x5584ea5f7340 'z$w_buff1_used' '_Bool'
|   |-BinaryOperator 0x5584ea5f9d80 <line:753:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x5584ea5f9b98 <col:3> '_Bool' lvalue Var 0x5584ea5f6e00 'z$r_buff0_thd2' '_Bool'
|   | `-ImplicitCastExpr 0x5584ea5f9d68 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x5584ea5f9d38 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x5584ea5f9c58 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x5584ea5f9c10 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x5584ea5f9bf8 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x5584ea5f9bb8 <col:20> '_Bool' lvalue Var 0x5584ea5f7248 'z$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x5584ea5f9c40 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x5584ea5f9c28 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x5584ea5f9bd8 <col:38> '_Bool' lvalue Var 0x5584ea5f6e00 'z$r_buff0_thd2' '_Bool'
|   |     |-ImplicitCastExpr 0x5584ea5f9cf0 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x5584ea5f9ca8 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x5584ea5f9c78 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x5584ea5f9d20 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x5584ea5f9d08 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x5584ea5f9cd0 <col:66> '_Bool' lvalue Var 0x5584ea5f6e00 'z$r_buff0_thd2' '_Bool'
|   |-BinaryOperator 0x5584ea5fa068 <line:754:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x5584ea5f9da0 <col:3> '_Bool' lvalue Var 0x5584ea5f6fe0 'z$r_buff1_thd2' '_Bool'
|   | `-ImplicitCastExpr 0x5584ea5fa050 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x5584ea5fa020 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x5584ea5f9f40 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x5584ea5f9e60 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x5584ea5f9e18 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x5584ea5f9e00 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x5584ea5f9dc0 <col:20> '_Bool' lvalue Var 0x5584ea5f7248 'z$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x5584ea5f9e48 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x5584ea5f9e30 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x5584ea5f9de0 <col:38> '_Bool' lvalue Var 0x5584ea5f6e00 'z$r_buff0_thd2' '_Bool'
|   |     | `-BinaryOperator 0x5584ea5f9f20 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x5584ea5f9ed8 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x5584ea5f9ec0 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x5584ea5f9e80 <col:56> '_Bool' lvalue Var 0x5584ea5f7340 'z$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x5584ea5f9f08 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x5584ea5f9ef0 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x5584ea5f9ea0 <col:74> '_Bool' lvalue Var 0x5584ea5f6fe0 'z$r_buff1_thd2' '_Bool'
|   |     |-ImplicitCastExpr 0x5584ea5f9fd8 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x5584ea5f9f90 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x5584ea5f9f60 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x5584ea5fa008 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x5584ea5f9ff0 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x5584ea5f9fb8 <col:102> '_Bool' lvalue Var 0x5584ea5f6fe0 'z$r_buff1_thd2' '_Bool'
|   |-CallExpr 0x5584ea5fa0c0 <line:755:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x5584ea5fa0a8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5584ea5fa088 <col:3> 'void ()' Function 0x5584ea59cf00 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x5584ea5fa118 <line:756:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x5584ea5fa100 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5584ea5fa0e0 <col:3> 'void ()' Function 0x5584ea59ce40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x5584ea5fa1d0 <line:757:3, col:41> 'int' '='
|   | |-DeclRefExpr 0x5584ea5fa138 <col:3> 'int' lvalue Var 0x5584ea5f6120 '__unbuffered_cnt' 'int'
|   | `-BinaryOperator 0x5584ea5fa1b0 <col:22, col:41> 'int' '+'
|   |   |-ImplicitCastExpr 0x5584ea5fa198 <col:22> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x5584ea5fa158 <col:22> 'int' lvalue Var 0x5584ea5f6120 '__unbuffered_cnt' 'int'
|   |   `-IntegerLiteral 0x5584ea5fa178 <col:41> 'int' 1
|   |-CallExpr 0x5584ea5fa228 <line:758:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x5584ea5fa210 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5584ea5fa1f0 <col:3> 'void ()' Function 0x5584ea59cf00 '__VERIFIER_atomic_end' 'void ()'
|   `-ReturnStmt 0x5584ea5fa2a0 <line:759:3, col:36>
|     `-CallExpr 0x5584ea5fa280 <col:10, col:36> 'void *'
|       `-ImplicitCastExpr 0x5584ea5fa268 <col:10> 'void *(*)(void)' <FunctionToPointerDecay>
|         `-DeclRefExpr 0x5584ea5fa248 <col:10> 'void *(void)' Function 0x5584ea59c958 '__VERIFIER_nondet_pointer' 'void *(void)'
|-FunctionDecl 0x5584ea5fa410 prev 0x5584ea5f5da0 <line:761:1, line:796:1> line:761:8 used P2 'void *(void *)'
| |-ParmVarDecl 0x5584ea5fa378 <col:11, col:17> col:17 arg 'void *'
| `-CompoundStmt 0x5584ea5fe100 <line:762:1, line:796:1>
|   |-CallExpr 0x5584ea5fa4f0 <line:763:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x5584ea5fa4d8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5584ea5fa4b8 <col:3> 'void ()' Function 0x5584ea59ce40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x5584ea5fa550 <line:764:3, col:7> 'int' '='
|   | |-DeclRefExpr 0x5584ea5fa510 <col:3> 'int' lvalue Var 0x5584ea5f69f0 'y' 'int'
|   | `-IntegerLiteral 0x5584ea5fa530 <col:7> 'int' 1
|   |-CallExpr 0x5584ea5fa5a8 <line:765:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x5584ea5fa590 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5584ea5fa570 <col:3> 'void ()' Function 0x5584ea59cf00 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x5584ea5fa600 <line:766:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x5584ea5fa5e8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5584ea5fa5c8 <col:3> 'void ()' Function 0x5584ea59ce40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x5584ea5fa678 <line:767:3, col:25> 'int' '='
|   | |-DeclRefExpr 0x5584ea5fa620 <col:3> 'int' lvalue Var 0x5584ea5f65a0 '__unbuffered_p2_EAX' 'int'
|   | `-ImplicitCastExpr 0x5584ea5fa660 <col:25> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x5584ea5fa640 <col:25> 'int' lvalue Var 0x5584ea5f69f0 'y' 'int'
|   |-CallExpr 0x5584ea5fa6d0 <line:768:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x5584ea5fa6b8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5584ea5fa698 <col:3> 'void ()' Function 0x5584ea59cf00 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x5584ea5fa728 <line:769:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x5584ea5fa710 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5584ea5fa6f0 <col:3> 'void ()' Function 0x5584ea59ce40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x5584ea5fa7d8 <line:770:3, col:45> '_Bool' '='
|   | |-DeclRefExpr 0x5584ea5fa748 <col:3> '_Bool' lvalue Var 0x5584ea5f73b8 'weak$$choice0' '_Bool'
|   | `-ImplicitCastExpr 0x5584ea5fa7c0 <col:19, col:45> '_Bool' <PointerToBoolean>
|   |   `-CallExpr 0x5584ea5fa7a0 <col:19, col:45> 'void *'
|   |     `-ImplicitCastExpr 0x5584ea5fa788 <col:19> 'void *(*)(void)' <FunctionToPointerDecay>
|   |       `-DeclRefExpr 0x5584ea5fa768 <col:19> 'void *(void)' Function 0x5584ea59c958 '__VERIFIER_nondet_pointer' 'void *(void)'
|   |-BinaryOperator 0x5584ea5fa888 <line:771:3, col:45> '_Bool' '='
|   | |-DeclRefExpr 0x5584ea5fa7f8 <col:3> '_Bool' lvalue Var 0x5584ea5f7430 'weak$$choice2' '_Bool'
|   | `-ImplicitCastExpr 0x5584ea5fa870 <col:19, col:45> '_Bool' <PointerToBoolean>
|   |   `-CallExpr 0x5584ea5fa850 <col:19, col:45> 'void *'
|   |     `-ImplicitCastExpr 0x5584ea5fa838 <col:19> 'void *(*)(void)' <FunctionToPointerDecay>
|   |       `-DeclRefExpr 0x5584ea5fa818 <col:19> 'void *(void)' Function 0x5584ea59c958 '__VERIFIER_nondet_pointer' 'void *(void)'
|   |-BinaryOperator 0x5584ea5fa900 <line:772:3, col:21> '_Bool' '='
|   | |-DeclRefExpr 0x5584ea5fa8a8 <col:3> '_Bool' lvalue Var 0x5584ea5f6c18 'z$flush_delayed' '_Bool'
|   | `-ImplicitCastExpr 0x5584ea5fa8e8 <col:21> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x5584ea5fa8c8 <col:21> '_Bool' lvalue Var 0x5584ea5f7430 'weak$$choice2' '_Bool'
|   |-BinaryOperator 0x5584ea5fa978 <line:773:3, col:15> 'int' '='
|   | |-DeclRefExpr 0x5584ea5fa920 <col:3> 'int' lvalue Var 0x5584ea5f6c98 'z$mem_tmp' 'int'
|   | `-ImplicitCastExpr 0x5584ea5fa960 <col:15> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x5584ea5fa940 <col:15> 'int' lvalue Var 0x5584ea5f6b80 'z' 'int'
|   |-BinaryOperator 0x5584ea5fadd0 <line:774:3, col:162> 'int' '='
|   | |-DeclRefExpr 0x5584ea5fa998 <col:3> 'int' lvalue Var 0x5584ea5f6b80 'z' 'int'
|   | `-ConditionalOperator 0x5584ea5fada0 <col:7, col:162> 'int'
|   |   |-BinaryOperator 0x5584ea5fabc8 <col:7, col:84> 'int' '||'
|   |   | |-BinaryOperator 0x5584ea5faac8 <col:7, col:46> 'int' '||'
|   |   | | |-UnaryOperator 0x5584ea5fa9f0 <col:7, col:8> 'int' prefix '!' cannot overflow
|   |   | | | `-ImplicitCastExpr 0x5584ea5fa9d8 <col:8> '_Bool' <LValueToRValue>
|   |   | | |   `-DeclRefExpr 0x5584ea5fa9b8 <col:8> '_Bool' lvalue Var 0x5584ea5f7248 'z$w_buff0_used' '_Bool'
|   |   | | `-BinaryOperator 0x5584ea5faaa8 <col:26, col:46> 'int' '&&'
|   |   | |   |-UnaryOperator 0x5584ea5faa40 <col:26, col:27> 'int' prefix '!' cannot overflow
|   |   | |   | `-ImplicitCastExpr 0x5584ea5faa28 <col:27> '_Bool' <LValueToRValue>
|   |   | |   |   `-DeclRefExpr 0x5584ea5faa08 <col:27> '_Bool' lvalue Var 0x5584ea5f6e78 'z$r_buff0_thd3' '_Bool'
|   |   | |   `-UnaryOperator 0x5584ea5faa90 <col:45, col:46> 'int' prefix '!' cannot overflow
|   |   | |     `-ImplicitCastExpr 0x5584ea5faa78 <col:46> '_Bool' <LValueToRValue>
|   |   | |       `-DeclRefExpr 0x5584ea5faa58 <col:46> '_Bool' lvalue Var 0x5584ea5f7340 'z$w_buff1_used' '_Bool'
|   |   | `-BinaryOperator 0x5584ea5faba8 <col:64, col:84> 'int' '&&'
|   |   |   |-UnaryOperator 0x5584ea5fab40 <col:64, col:65> 'int' prefix '!' cannot overflow
|   |   |   | `-ImplicitCastExpr 0x5584ea5fab08 <col:65> '_Bool' <LValueToRValue>
|   |   |   |   `-DeclRefExpr 0x5584ea5faae8 <col:65> '_Bool' lvalue Var 0x5584ea5f6e78 'z$r_buff0_thd3' '_Bool'
|   |   |   `-UnaryOperator 0x5584ea5fab90 <col:83, col:84> 'int' prefix '!' cannot overflow
|   |   |     `-ImplicitCastExpr 0x5584ea5fab78 <col:84> '_Bool' <LValueToRValue>
|   |   |       `-DeclRefExpr 0x5584ea5fab58 <col:84> '_Bool' lvalue Var 0x5584ea5f7058 'z$r_buff1_thd3' '_Bool'
|   |   |-ImplicitCastExpr 0x5584ea5fad88 <col:101> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x5584ea5fabe8 <col:101> 'int' lvalue Var 0x5584ea5f6b80 'z' 'int'
|   |   `-ParenExpr 0x5584ea5fad68 <col:105, col:162> 'int'
|   |     `-ConditionalOperator 0x5584ea5fad38 <col:106, col:153> 'int'
|   |       |-BinaryOperator 0x5584ea5faca8 <col:106, col:124> 'int' '&&'
|   |       | |-ImplicitCastExpr 0x5584ea5fac60 <col:106> 'int' <IntegralCast>
|   |       | | `-ImplicitCastExpr 0x5584ea5fac48 <col:106> '_Bool' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x5584ea5fac08 <col:106> '_Bool' lvalue Var 0x5584ea5f7248 'z$w_buff0_used' '_Bool'
|   |       | `-ImplicitCastExpr 0x5584ea5fac90 <col:124> 'int' <IntegralCast>
|   |       |   `-ImplicitCastExpr 0x5584ea5fac78 <col:124> '_Bool' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x5584ea5fac28 <col:124> '_Bool' lvalue Var 0x5584ea5f6e78 'z$r_buff0_thd3' '_Bool'
|   |       |-ImplicitCastExpr 0x5584ea5fad08 <col:141> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x5584ea5facc8 <col:141> 'int' lvalue Var 0x5584ea5f71d0 'z$w_buff0' 'int'
|   |       `-ImplicitCastExpr 0x5584ea5fad20 <col:153> 'int' <LValueToRValue>
|   |         `-DeclRefExpr 0x5584ea5face8 <col:153> 'int' lvalue Var 0x5584ea5f72c8 'z$w_buff1' 'int'
|   |-BinaryOperator 0x5584ea5fb2e0 <line:775:3, col:208> 'int' '='
|   | |-DeclRefExpr 0x5584ea5fadf0 <col:3> 'int' lvalue Var 0x5584ea5f71d0 'z$w_buff0' 'int'
|   | `-ConditionalOperator 0x5584ea5fb2b0 <col:15, col:208> 'int'
|   |   |-ImplicitCastExpr 0x5584ea5fb280 <col:15> 'int' <IntegralCast>
|   |   | `-ImplicitCastExpr 0x5584ea5fb268 <col:15> '_Bool' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x5584ea5fae10 <col:15> '_Bool' lvalue Var 0x5584ea5f7430 'weak$$choice2' '_Bool'
|   |   |-ImplicitCastExpr 0x5584ea5fb298 <col:31> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x5584ea5fae30 <col:31> 'int' lvalue Var 0x5584ea5f71d0 'z$w_buff0' 'int'
|   |   `-ParenExpr 0x5584ea5fb248 <col:43, col:208> 'int'
|   |     `-ConditionalOperator 0x5584ea5fb218 <col:44, col:207> 'int'
|   |       |-BinaryOperator 0x5584ea5fb040 <col:44, col:121> 'int' '||'
|   |       | |-BinaryOperator 0x5584ea5faf60 <col:44, col:83> 'int' '||'
|   |       | | |-UnaryOperator 0x5584ea5fae88 <col:44, col:45> 'int' prefix '!' cannot overflow
|   |       | | | `-ImplicitCastExpr 0x5584ea5fae70 <col:45> '_Bool' <LValueToRValue>
|   |       | | |   `-DeclRefExpr 0x5584ea5fae50 <col:45> '_Bool' lvalue Var 0x5584ea5f7248 'z$w_buff0_used' '_Bool'
|   |       | | `-BinaryOperator 0x5584ea5faf40 <col:63, col:83> 'int' '&&'
|   |       | |   |-UnaryOperator 0x5584ea5faed8 <col:63, col:64> 'int' prefix '!' cannot overflow
|   |       | |   | `-ImplicitCastExpr 0x5584ea5faec0 <col:64> '_Bool' <LValueToRValue>
|   |       | |   |   `-DeclRefExpr 0x5584ea5faea0 <col:64> '_Bool' lvalue Var 0x5584ea5f6e78 'z$r_buff0_thd3' '_Bool'
|   |       | |   `-UnaryOperator 0x5584ea5faf28 <col:82, col:83> 'int' prefix '!' cannot overflow
|   |       | |     `-ImplicitCastExpr 0x5584ea5faf10 <col:83> '_Bool' <LValueToRValue>
|   |       | |       `-DeclRefExpr 0x5584ea5faef0 <col:83> '_Bool' lvalue Var 0x5584ea5f7340 'z$w_buff1_used' '_Bool'
|   |       | `-BinaryOperator 0x5584ea5fb020 <col:101, col:121> 'int' '&&'
|   |       |   |-UnaryOperator 0x5584ea5fafb8 <col:101, col:102> 'int' prefix '!' cannot overflow
|   |       |   | `-ImplicitCastExpr 0x5584ea5fafa0 <col:102> '_Bool' <LValueToRValue>
|   |       |   |   `-DeclRefExpr 0x5584ea5faf80 <col:102> '_Bool' lvalue Var 0x5584ea5f6e78 'z$r_buff0_thd3' '_Bool'
|   |       |   `-UnaryOperator 0x5584ea5fb008 <col:120, col:121> 'int' prefix '!' cannot overflow
|   |       |     `-ImplicitCastExpr 0x5584ea5faff0 <col:121> '_Bool' <LValueToRValue>
|   |       |       `-DeclRefExpr 0x5584ea5fafd0 <col:121> '_Bool' lvalue Var 0x5584ea5f7058 'z$r_buff1_thd3' '_Bool'
|   |       |-ImplicitCastExpr 0x5584ea5fb200 <col:138> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x5584ea5fb060 <col:138> 'int' lvalue Var 0x5584ea5f71d0 'z$w_buff0' 'int'
|   |       `-ParenExpr 0x5584ea5fb1e0 <col:150, col:207> 'int'
|   |         `-ConditionalOperator 0x5584ea5fb1b0 <col:151, col:198> 'int'
|   |           |-BinaryOperator 0x5584ea5fb120 <col:151, col:169> 'int' '&&'
|   |           | |-ImplicitCastExpr 0x5584ea5fb0d8 <col:151> 'int' <IntegralCast>
|   |           | | `-ImplicitCastExpr 0x5584ea5fb0c0 <col:151> '_Bool' <LValueToRValue>
|   |           | |   `-DeclRefExpr 0x5584ea5fb080 <col:151> '_Bool' lvalue Var 0x5584ea5f7248 'z$w_buff0_used' '_Bool'
|   |           | `-ImplicitCastExpr 0x5584ea5fb108 <col:169> 'int' <IntegralCast>
|   |           |   `-ImplicitCastExpr 0x5584ea5fb0f0 <col:169> '_Bool' <LValueToRValue>
|   |           |     `-DeclRefExpr 0x5584ea5fb0a0 <col:169> '_Bool' lvalue Var 0x5584ea5f6e78 'z$r_buff0_thd3' '_Bool'
|   |           |-ImplicitCastExpr 0x5584ea5fb180 <col:186> 'int' <LValueToRValue>
|   |           | `-DeclRefExpr 0x5584ea5fb140 <col:186> 'int' lvalue Var 0x5584ea5f71d0 'z$w_buff0' 'int'
|   |           `-ImplicitCastExpr 0x5584ea5fb198 <col:198> 'int' <LValueToRValue>
|   |             `-DeclRefExpr 0x5584ea5fb160 <col:198> 'int' lvalue Var 0x5584ea5f71d0 'z$w_buff0' 'int'
|   |-BinaryOperator 0x5584ea5fb7f0 <line:776:3, col:208> 'int' '='
|   | |-DeclRefExpr 0x5584ea5fb300 <col:3> 'int' lvalue Var 0x5584ea5f72c8 'z$w_buff1' 'int'
|   | `-ConditionalOperator 0x5584ea5fb7c0 <col:15, col:208> 'int'
|   |   |-ImplicitCastExpr 0x5584ea5fb790 <col:15> 'int' <IntegralCast>
|   |   | `-ImplicitCastExpr 0x5584ea5fb778 <col:15> '_Bool' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x5584ea5fb320 <col:15> '_Bool' lvalue Var 0x5584ea5f7430 'weak$$choice2' '_Bool'
|   |   |-ImplicitCastExpr 0x5584ea5fb7a8 <col:31> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x5584ea5fb340 <col:31> 'int' lvalue Var 0x5584ea5f72c8 'z$w_buff1' 'int'
|   |   `-ParenExpr 0x5584ea5fb758 <col:43, col:208> 'int'
|   |     `-ConditionalOperator 0x5584ea5fb728 <col:44, col:207> 'int'
|   |       |-BinaryOperator 0x5584ea5fb550 <col:44, col:121> 'int' '||'
|   |       | |-BinaryOperator 0x5584ea5fb470 <col:44, col:83> 'int' '||'
|   |       | | |-UnaryOperator 0x5584ea5fb398 <col:44, col:45> 'int' prefix '!' cannot overflow
|   |       | | | `-ImplicitCastExpr 0x5584ea5fb380 <col:45> '_Bool' <LValueToRValue>
|   |       | | |   `-DeclRefExpr 0x5584ea5fb360 <col:45> '_Bool' lvalue Var 0x5584ea5f7248 'z$w_buff0_used' '_Bool'
|   |       | | `-BinaryOperator 0x5584ea5fb450 <col:63, col:83> 'int' '&&'
|   |       | |   |-UnaryOperator 0x5584ea5fb3e8 <col:63, col:64> 'int' prefix '!' cannot overflow
|   |       | |   | `-ImplicitCastExpr 0x5584ea5fb3d0 <col:64> '_Bool' <LValueToRValue>
|   |       | |   |   `-DeclRefExpr 0x5584ea5fb3b0 <col:64> '_Bool' lvalue Var 0x5584ea5f6e78 'z$r_buff0_thd3' '_Bool'
|   |       | |   `-UnaryOperator 0x5584ea5fb438 <col:82, col:83> 'int' prefix '!' cannot overflow
|   |       | |     `-ImplicitCastExpr 0x5584ea5fb420 <col:83> '_Bool' <LValueToRValue>
|   |       | |       `-DeclRefExpr 0x5584ea5fb400 <col:83> '_Bool' lvalue Var 0x5584ea5f7340 'z$w_buff1_used' '_Bool'
|   |       | `-BinaryOperator 0x5584ea5fb530 <col:101, col:121> 'int' '&&'
|   |       |   |-UnaryOperator 0x5584ea5fb4c8 <col:101, col:102> 'int' prefix '!' cannot overflow
|   |       |   | `-ImplicitCastExpr 0x5584ea5fb4b0 <col:102> '_Bool' <LValueToRValue>
|   |       |   |   `-DeclRefExpr 0x5584ea5fb490 <col:102> '_Bool' lvalue Var 0x5584ea5f6e78 'z$r_buff0_thd3' '_Bool'
|   |       |   `-UnaryOperator 0x5584ea5fb518 <col:120, col:121> 'int' prefix '!' cannot overflow
|   |       |     `-ImplicitCastExpr 0x5584ea5fb500 <col:121> '_Bool' <LValueToRValue>
|   |       |       `-DeclRefExpr 0x5584ea5fb4e0 <col:121> '_Bool' lvalue Var 0x5584ea5f7058 'z$r_buff1_thd3' '_Bool'
|   |       |-ImplicitCastExpr 0x5584ea5fb710 <col:138> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x5584ea5fb570 <col:138> 'int' lvalue Var 0x5584ea5f72c8 'z$w_buff1' 'int'
|   |       `-ParenExpr 0x5584ea5fb6f0 <col:150, col:207> 'int'
|   |         `-ConditionalOperator 0x5584ea5fb6c0 <col:151, col:198> 'int'
|   |           |-BinaryOperator 0x5584ea5fb630 <col:151, col:169> 'int' '&&'
|   |           | |-ImplicitCastExpr 0x5584ea5fb5e8 <col:151> 'int' <IntegralCast>
|   |           | | `-ImplicitCastExpr 0x5584ea5fb5d0 <col:151> '_Bool' <LValueToRValue>
|   |           | |   `-DeclRefExpr 0x5584ea5fb590 <col:151> '_Bool' lvalue Var 0x5584ea5f7248 'z$w_buff0_used' '_Bool'
|   |           | `-ImplicitCastExpr 0x5584ea5fb618 <col:169> 'int' <IntegralCast>
|   |           |   `-ImplicitCastExpr 0x5584ea5fb600 <col:169> '_Bool' <LValueToRValue>
|   |           |     `-DeclRefExpr 0x5584ea5fb5b0 <col:169> '_Bool' lvalue Var 0x5584ea5f6e78 'z$r_buff0_thd3' '_Bool'
|   |           |-ImplicitCastExpr 0x5584ea5fb690 <col:186> 'int' <LValueToRValue>
|   |           | `-DeclRefExpr 0x5584ea5fb650 <col:186> 'int' lvalue Var 0x5584ea5f72c8 'z$w_buff1' 'int'
|   |           `-ImplicitCastExpr 0x5584ea5fb6a8 <col:198> 'int' <LValueToRValue>
|   |             `-DeclRefExpr 0x5584ea5fb670 <col:198> 'int' lvalue Var 0x5584ea5f72c8 'z$w_buff1' 'int'
|   |-BinaryOperator 0x5584ea5fbda8 <line:777:3, col:227> '_Bool' '='
|   | |-DeclRefExpr 0x5584ea5fb810 <col:3> '_Bool' lvalue Var 0x5584ea5f7248 'z$w_buff0_used' '_Bool'
|   | `-ImplicitCastExpr 0x5584ea5fbd90 <col:20, col:227> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x5584ea5fbd60 <col:20, col:227> 'int'
|   |     |-ImplicitCastExpr 0x5584ea5fbd18 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x5584ea5fbd00 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x5584ea5fb830 <col:20> '_Bool' lvalue Var 0x5584ea5f7430 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x5584ea5fbd48 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x5584ea5fbd30 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x5584ea5fb850 <col:36> '_Bool' lvalue Var 0x5584ea5f7248 'z$w_buff0_used' '_Bool'
|   |     `-ParenExpr 0x5584ea5fbce0 <col:53, col:227> 'int'
|   |       `-ConditionalOperator 0x5584ea5fbcb0 <col:54, col:226> 'int'
|   |         |-BinaryOperator 0x5584ea5fba60 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x5584ea5fb980 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x5584ea5fb8a8 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x5584ea5fb890 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x5584ea5fb870 <col:55> '_Bool' lvalue Var 0x5584ea5f7248 'z$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x5584ea5fb960 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x5584ea5fb8f8 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x5584ea5fb8e0 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x5584ea5fb8c0 <col:74> '_Bool' lvalue Var 0x5584ea5f6e78 'z$r_buff0_thd3' '_Bool'
|   |         | |   `-UnaryOperator 0x5584ea5fb948 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x5584ea5fb930 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x5584ea5fb910 <col:93> '_Bool' lvalue Var 0x5584ea5f7340 'z$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x5584ea5fba40 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x5584ea5fb9d8 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x5584ea5fb9c0 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x5584ea5fb9a0 <col:112> '_Bool' lvalue Var 0x5584ea5f6e78 'z$r_buff0_thd3' '_Bool'
|   |         |   `-UnaryOperator 0x5584ea5fba28 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x5584ea5fba10 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x5584ea5fb9f0 <col:131> '_Bool' lvalue Var 0x5584ea5f7058 'z$r_buff1_thd3' '_Bool'
|   |         |-ImplicitCastExpr 0x5584ea5fbc98 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x5584ea5fbc80 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x5584ea5fba80 <col:148> '_Bool' lvalue Var 0x5584ea5f7248 'z$w_buff0_used' '_Bool'
|   |         `-ParenExpr 0x5584ea5fbc60 <col:165, col:226> 'int'
|   |           `-ConditionalOperator 0x5584ea5fbc30 <col:166, col:212> 'int'
|   |             |-BinaryOperator 0x5584ea5fbb50 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x5584ea5fbaf8 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x5584ea5fbae0 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x5584ea5fbaa0 <col:166> '_Bool' lvalue Var 0x5584ea5f7248 'z$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x5584ea5fbb28 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x5584ea5fbb10 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x5584ea5fbac0 <col:184> '_Bool' lvalue Var 0x5584ea5f6e78 'z$r_buff0_thd3' '_Bool'
|   |             |-ImplicitCastExpr 0x5584ea5fbbe8 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x5584ea5fbba0 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x5584ea5fbb70 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x5584ea5fbc18 <col:212> 'int' <IntegralCast>
|   |               `-ImplicitCastExpr 0x5584ea5fbc00 <col:212> '_Bool' <LValueToRValue>
|   |                 `-DeclRefExpr 0x5584ea5fbbc8 <col:212> '_Bool' lvalue Var 0x5584ea5f7248 'z$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x5584ea5fc370 <line:778:3, col:221> '_Bool' '='
|   | |-DeclRefExpr 0x5584ea5fbdc8 <col:3> '_Bool' lvalue Var 0x5584ea5f7340 'z$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x5584ea5fc358 <col:20, col:221> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x5584ea5fc328 <col:20, col:221> 'int'
|   |     |-ImplicitCastExpr 0x5584ea5fc2e0 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x5584ea5fc2c8 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x5584ea5fbde8 <col:20> '_Bool' lvalue Var 0x5584ea5f7430 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x5584ea5fc310 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x5584ea5fc2f8 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x5584ea5fbe08 <col:36> '_Bool' lvalue Var 0x5584ea5f7340 'z$w_buff1_used' '_Bool'
|   |     `-ParenExpr 0x5584ea5fc2a8 <col:53, col:221> 'int'
|   |       `-ConditionalOperator 0x5584ea5fc278 <col:54, col:220> 'int'
|   |         |-BinaryOperator 0x5584ea5fc018 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x5584ea5fbf38 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x5584ea5fbe60 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x5584ea5fbe48 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x5584ea5fbe28 <col:55> '_Bool' lvalue Var 0x5584ea5f7248 'z$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x5584ea5fbf18 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x5584ea5fbeb0 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x5584ea5fbe98 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x5584ea5fbe78 <col:74> '_Bool' lvalue Var 0x5584ea5f6e78 'z$r_buff0_thd3' '_Bool'
|   |         | |   `-UnaryOperator 0x5584ea5fbf00 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x5584ea5fbee8 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x5584ea5fbec8 <col:93> '_Bool' lvalue Var 0x5584ea5f7340 'z$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x5584ea5fbff8 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x5584ea5fbf90 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x5584ea5fbf78 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x5584ea5fbf58 <col:112> '_Bool' lvalue Var 0x5584ea5f6e78 'z$r_buff0_thd3' '_Bool'
|   |         |   `-UnaryOperator 0x5584ea5fbfe0 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x5584ea5fbfc8 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x5584ea5fbfa8 <col:131> '_Bool' lvalue Var 0x5584ea5f7058 'z$r_buff1_thd3' '_Bool'
|   |         |-ImplicitCastExpr 0x5584ea5fc260 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x5584ea5fc248 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x5584ea5fc038 <col:148> '_Bool' lvalue Var 0x5584ea5f7340 'z$w_buff1_used' '_Bool'
|   |         `-ParenExpr 0x5584ea5fc228 <col:165, col:220> 'int'
|   |           `-ConditionalOperator 0x5584ea5fc1f8 <col:166, col:219> 'int'
|   |             |-BinaryOperator 0x5584ea5fc0f8 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x5584ea5fc0b0 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x5584ea5fc098 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x5584ea5fc058 <col:166> '_Bool' lvalue Var 0x5584ea5f7248 'z$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x5584ea5fc0e0 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x5584ea5fc0c8 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x5584ea5fc078 <col:184> '_Bool' lvalue Var 0x5584ea5f6e78 'z$r_buff0_thd3' '_Bool'
|   |             |-ImplicitCastExpr 0x5584ea5fc1c8 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x5584ea5fc148 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x5584ea5fc118 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x5584ea5fc1e0 <col:212, col:219> 'int' <IntegralCast>
|   |               `-CStyleCastExpr 0x5584ea5fc1a0 <col:212, col:219> '_Bool' <IntegralToBoolean>
|   |                 `-IntegerLiteral 0x5584ea5fc170 <col:219> 'int' 0
|   |-BinaryOperator 0x5584ea5fc918 <line:779:3, col:227> '_Bool' '='
|   | |-DeclRefExpr 0x5584ea5fc390 <col:3> '_Bool' lvalue Var 0x5584ea5f6e78 'z$r_buff0_thd3' '_Bool'
|   | `-ImplicitCastExpr 0x5584ea5fc900 <col:20, col:227> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x5584ea5fc8d0 <col:20, col:227> 'int'
|   |     |-ImplicitCastExpr 0x5584ea5fc888 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x5584ea5fc870 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x5584ea5fc3b0 <col:20> '_Bool' lvalue Var 0x5584ea5f7430 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x5584ea5fc8b8 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x5584ea5fc8a0 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x5584ea5fc3d0 <col:36> '_Bool' lvalue Var 0x5584ea5f6e78 'z$r_buff0_thd3' '_Bool'
|   |     `-ParenExpr 0x5584ea5fc850 <col:53, col:227> 'int'
|   |       `-ConditionalOperator 0x5584ea5fc820 <col:54, col:226> 'int'
|   |         |-BinaryOperator 0x5584ea5fc5e0 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x5584ea5fc500 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x5584ea5fc428 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x5584ea5fc410 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x5584ea5fc3f0 <col:55> '_Bool' lvalue Var 0x5584ea5f7248 'z$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x5584ea5fc4e0 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x5584ea5fc478 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x5584ea5fc460 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x5584ea5fc440 <col:74> '_Bool' lvalue Var 0x5584ea5f6e78 'z$r_buff0_thd3' '_Bool'
|   |         | |   `-UnaryOperator 0x5584ea5fc4c8 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x5584ea5fc4b0 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x5584ea5fc490 <col:93> '_Bool' lvalue Var 0x5584ea5f7340 'z$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x5584ea5fc5c0 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x5584ea5fc558 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x5584ea5fc540 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x5584ea5fc520 <col:112> '_Bool' lvalue Var 0x5584ea5f6e78 'z$r_buff0_thd3' '_Bool'
|   |         |   `-UnaryOperator 0x5584ea5fc5a8 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x5584ea5fc590 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x5584ea5fc570 <col:131> '_Bool' lvalue Var 0x5584ea5f7058 'z$r_buff1_thd3' '_Bool'
|   |         |-ImplicitCastExpr 0x5584ea5fc808 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x5584ea5fc7f0 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x5584ea5fc600 <col:148> '_Bool' lvalue Var 0x5584ea5f6e78 'z$r_buff0_thd3' '_Bool'
|   |         `-ParenExpr 0x5584ea5fc7d0 <col:165, col:226> 'int'
|   |           `-ConditionalOperator 0x5584ea5fc7a0 <col:166, col:212> 'int'
|   |             |-BinaryOperator 0x5584ea5fc6c0 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x5584ea5fc678 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x5584ea5fc660 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x5584ea5fc620 <col:166> '_Bool' lvalue Var 0x5584ea5f7248 'z$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x5584ea5fc6a8 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x5584ea5fc690 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x5584ea5fc640 <col:184> '_Bool' lvalue Var 0x5584ea5f6e78 'z$r_buff0_thd3' '_Bool'
|   |             |-ImplicitCastExpr 0x5584ea5fc758 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x5584ea5fc710 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x5584ea5fc6e0 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x5584ea5fc788 <col:212> 'int' <IntegralCast>
|   |               `-ImplicitCastExpr 0x5584ea5fc770 <col:212> '_Bool' <LValueToRValue>
|   |                 `-DeclRefExpr 0x5584ea5fc738 <col:212> '_Bool' lvalue Var 0x5584ea5f6e78 'z$r_buff0_thd3' '_Bool'
|   |-BinaryOperator 0x5584ea5fcef0 <line:780:3, col:221> '_Bool' '='
|   | |-DeclRefExpr 0x5584ea5fc938 <col:3> '_Bool' lvalue Var 0x5584ea5f7058 'z$r_buff1_thd3' '_Bool'
|   | `-ImplicitCastExpr 0x5584ea5fced8 <col:20, col:221> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x5584ea5fcea8 <col:20, col:221> 'int'
|   |     |-ImplicitCastExpr 0x5584ea5fce60 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x5584ea5fce48 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x5584ea5fc958 <col:20> '_Bool' lvalue Var 0x5584ea5f7430 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x5584ea5fce90 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x5584ea5fce78 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x5584ea5fc978 <col:36> '_Bool' lvalue Var 0x5584ea5f7058 'z$r_buff1_thd3' '_Bool'
|   |     `-ParenExpr 0x5584ea5fce28 <col:53, col:221> 'int'
|   |       `-ConditionalOperator 0x5584ea5fcdf8 <col:54, col:220> 'int'
|   |         |-BinaryOperator 0x5584ea5fcb98 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x5584ea5fcaa8 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x5584ea5fc9d0 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x5584ea5fc9b8 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x5584ea5fc998 <col:55> '_Bool' lvalue Var 0x5584ea5f7248 'z$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x5584ea5fca88 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x5584ea5fca20 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x5584ea5fca08 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x5584ea5fc9e8 <col:74> '_Bool' lvalue Var 0x5584ea5f6e78 'z$r_buff0_thd3' '_Bool'
|   |         | |   `-UnaryOperator 0x5584ea5fca70 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x5584ea5fca58 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x5584ea5fca38 <col:93> '_Bool' lvalue Var 0x5584ea5f7340 'z$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x5584ea5fcb78 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x5584ea5fcb00 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x5584ea5fcae8 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x5584ea5fcac8 <col:112> '_Bool' lvalue Var 0x5584ea5f6e78 'z$r_buff0_thd3' '_Bool'
|   |         |   `-UnaryOperator 0x5584ea5fcb60 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x5584ea5fcb38 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x5584ea5fcb18 <col:131> '_Bool' lvalue Var 0x5584ea5f7058 'z$r_buff1_thd3' '_Bool'
|   |         |-ImplicitCastExpr 0x5584ea5fcde0 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x5584ea5fcdc8 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x5584ea5fcbb8 <col:148> '_Bool' lvalue Var 0x5584ea5f7058 'z$r_buff1_thd3' '_Bool'
|   |         `-ParenExpr 0x5584ea5fcda8 <col:165, col:220> 'int'
|   |           `-ConditionalOperator 0x5584ea5fcd78 <col:166, col:219> 'int'
|   |             |-BinaryOperator 0x5584ea5fcc78 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x5584ea5fcc30 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x5584ea5fcc18 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x5584ea5fcbd8 <col:166> '_Bool' lvalue Var 0x5584ea5f7248 'z$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x5584ea5fcc60 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x5584ea5fcc48 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x5584ea5fcbf8 <col:184> '_Bool' lvalue Var 0x5584ea5f6e78 'z$r_buff0_thd3' '_Bool'
|   |             |-ImplicitCastExpr 0x5584ea5fcd48 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x5584ea5fccc8 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x5584ea5fcc98 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x5584ea5fcd60 <col:212, col:219> 'int' <IntegralCast>
|   |               `-CStyleCastExpr 0x5584ea5fcd20 <col:212, col:219> '_Bool' <IntegralToBoolean>
|   |                 `-IntegerLiteral 0x5584ea5fccf0 <col:219> 'int' 0
|   |-BinaryOperator 0x5584ea5fcf68 <line:781:3, col:25> 'int' '='
|   | |-DeclRefExpr 0x5584ea5fcf10 <col:3> 'int' lvalue Var 0x5584ea5f66c0 '__unbuffered_p2_EBX' 'int'
|   | `-ImplicitCastExpr 0x5584ea5fcf50 <col:25> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x5584ea5fcf30 <col:25> 'int' lvalue Var 0x5584ea5f6b80 'z' 'int'
|   |-BinaryOperator 0x5584ea5fd098 <line:782:3, col:37> 'int' '='
|   | |-DeclRefExpr 0x5584ea5fcf88 <col:3> 'int' lvalue Var 0x5584ea5f6b80 'z' 'int'
|   | `-ConditionalOperator 0x5584ea5fd068 <col:7, col:37> 'int'
|   |   |-ImplicitCastExpr 0x5584ea5fd020 <col:7> 'int' <IntegralCast>
|   |   | `-ImplicitCastExpr 0x5584ea5fd008 <col:7> '_Bool' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x5584ea5fcfa8 <col:7> '_Bool' lvalue Var 0x5584ea5f6c18 'z$flush_delayed' '_Bool'
|   |   |-ImplicitCastExpr 0x5584ea5fd038 <col:25> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x5584ea5fcfc8 <col:25> 'int' lvalue Var 0x5584ea5f6c98 'z$mem_tmp' 'int'
|   |   `-ImplicitCastExpr 0x5584ea5fd050 <col:37> 'int' <LValueToRValue>
|   |     `-DeclRefExpr 0x5584ea5fcfe8 <col:37> 'int' lvalue Var 0x5584ea5f6b80 'z' 'int'
|   |-BinaryOperator 0x5584ea5fd130 <line:783:3, col:28> '_Bool' '='
|   | |-DeclRefExpr 0x5584ea5fd0b8 <col:3> '_Bool' lvalue Var 0x5584ea5f6c18 'z$flush_delayed' '_Bool'
|   | `-CStyleCastExpr 0x5584ea5fd108 <col:21, col:28> '_Bool' <IntegralToBoolean>
|   |   `-IntegerLiteral 0x5584ea5fd0d8 <col:28> 'int' 0
|   |-CallExpr 0x5584ea5fd188 <line:784:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x5584ea5fd170 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5584ea5fd150 <col:3> 'void ()' Function 0x5584ea59cf00 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x5584ea5fd1e0 <line:785:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x5584ea5fd1c8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5584ea5fd1a8 <col:3> 'void ()' Function 0x5584ea59ce40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x5584ea5fd4c8 <line:786:3, col:103> 'int' '='
|   | |-DeclRefExpr 0x5584ea5fd200 <col:3> 'int' lvalue Var 0x5584ea5f6b80 'z' 'int'
|   | `-ConditionalOperator 0x5584ea5fd498 <col:7, col:103> 'int'
|   |   |-BinaryOperator 0x5584ea5fd2c0 <col:7, col:25> 'int' '&&'
|   |   | |-ImplicitCastExpr 0x5584ea5fd278 <col:7> 'int' <IntegralCast>
|   |   | | `-ImplicitCastExpr 0x5584ea5fd260 <col:7> '_Bool' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x5584ea5fd220 <col:7> '_Bool' lvalue Var 0x5584ea5f7248 'z$w_buff0_used' '_Bool'
|   |   | `-ImplicitCastExpr 0x5584ea5fd2a8 <col:25> 'int' <IntegralCast>
|   |   |   `-ImplicitCastExpr 0x5584ea5fd290 <col:25> '_Bool' <LValueToRValue>
|   |   |     `-DeclRefExpr 0x5584ea5fd240 <col:25> '_Bool' lvalue Var 0x5584ea5f6e78 'z$r_buff0_thd3' '_Bool'
|   |   |-ImplicitCastExpr 0x5584ea5fd480 <col:42> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x5584ea5fd2e0 <col:42> 'int' lvalue Var 0x5584ea5f71d0 'z$w_buff0' 'int'
|   |   `-ParenExpr 0x5584ea5fd460 <col:54, col:103> 'int'
|   |     `-ConditionalOperator 0x5584ea5fd430 <col:55, col:102> 'int'
|   |       |-BinaryOperator 0x5584ea5fd3a0 <col:55, col:73> 'int' '&&'
|   |       | |-ImplicitCastExpr 0x5584ea5fd358 <col:55> 'int' <IntegralCast>
|   |       | | `-ImplicitCastExpr 0x5584ea5fd340 <col:55> '_Bool' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x5584ea5fd300 <col:55> '_Bool' lvalue Var 0x5584ea5f7340 'z$w_buff1_used' '_Bool'
|   |       | `-ImplicitCastExpr 0x5584ea5fd388 <col:73> 'int' <IntegralCast>
|   |       |   `-ImplicitCastExpr 0x5584ea5fd370 <col:73> '_Bool' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x5584ea5fd320 <col:73> '_Bool' lvalue Var 0x5584ea5f7058 'z$r_buff1_thd3' '_Bool'
|   |       |-ImplicitCastExpr 0x5584ea5fd400 <col:90> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x5584ea5fd3c0 <col:90> 'int' lvalue Var 0x5584ea5f72c8 'z$w_buff1' 'int'
|   |       `-ImplicitCastExpr 0x5584ea5fd418 <col:102> 'int' <LValueToRValue>
|   |         `-DeclRefExpr 0x5584ea5fd3e0 <col:102> 'int' lvalue Var 0x5584ea5f6b80 'z' 'int'
|   |-BinaryOperator 0x5584ea5fd6d0 <line:787:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x5584ea5fd4e8 <col:3> '_Bool' lvalue Var 0x5584ea5f7248 'z$w_buff0_used' '_Bool'
|   | `-ImplicitCastExpr 0x5584ea5fd6b8 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x5584ea5fd688 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x5584ea5fd5a8 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x5584ea5fd560 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x5584ea5fd548 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x5584ea5fd508 <col:20> '_Bool' lvalue Var 0x5584ea5f7248 'z$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x5584ea5fd590 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x5584ea5fd578 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x5584ea5fd528 <col:38> '_Bool' lvalue Var 0x5584ea5f6e78 'z$r_buff0_thd3' '_Bool'
|   |     |-ImplicitCastExpr 0x5584ea5fd640 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x5584ea5fd5f8 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x5584ea5fd5c8 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x5584ea5fd670 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x5584ea5fd658 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x5584ea5fd620 <col:66> '_Bool' lvalue Var 0x5584ea5f7248 'z$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x5584ea5fd9b8 <line:788:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x5584ea5fd6f0 <col:3> '_Bool' lvalue Var 0x5584ea5f7340 'z$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x5584ea5fd9a0 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x5584ea5fd970 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x5584ea5fd890 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x5584ea5fd7b0 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x5584ea5fd768 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x5584ea5fd750 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x5584ea5fd710 <col:20> '_Bool' lvalue Var 0x5584ea5f7248 'z$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x5584ea5fd798 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x5584ea5fd780 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x5584ea5fd730 <col:38> '_Bool' lvalue Var 0x5584ea5f6e78 'z$r_buff0_thd3' '_Bool'
|   |     | `-BinaryOperator 0x5584ea5fd870 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x5584ea5fd828 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x5584ea5fd810 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x5584ea5fd7d0 <col:56> '_Bool' lvalue Var 0x5584ea5f7340 'z$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x5584ea5fd858 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x5584ea5fd840 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x5584ea5fd7f0 <col:74> '_Bool' lvalue Var 0x5584ea5f7058 'z$r_buff1_thd3' '_Bool'
|   |     |-ImplicitCastExpr 0x5584ea5fd928 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x5584ea5fd8e0 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x5584ea5fd8b0 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x5584ea5fd958 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x5584ea5fd940 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x5584ea5fd908 <col:102> '_Bool' lvalue Var 0x5584ea5f7340 'z$w_buff1_used' '_Bool'
|   |-BinaryOperator 0x5584ea5fdbd0 <line:789:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x5584ea5fd9d8 <col:3> '_Bool' lvalue Var 0x5584ea5f6e78 'z$r_buff0_thd3' '_Bool'
|   | `-ImplicitCastExpr 0x5584ea5fdbb8 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x5584ea5fdb88 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x5584ea5fda98 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x5584ea5fda50 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x5584ea5fda38 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x5584ea5fd9f8 <col:20> '_Bool' lvalue Var 0x5584ea5f7248 'z$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x5584ea5fda80 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x5584ea5fda68 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x5584ea5fda18 <col:38> '_Bool' lvalue Var 0x5584ea5f6e78 'z$r_buff0_thd3' '_Bool'
|   |     |-ImplicitCastExpr 0x5584ea5fdb30 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x5584ea5fdae8 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x5584ea5fdab8 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x5584ea5fdb70 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x5584ea5fdb48 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x5584ea5fdb10 <col:66> '_Bool' lvalue Var 0x5584ea5f6e78 'z$r_buff0_thd3' '_Bool'
|   |-BinaryOperator 0x5584ea5fdeb8 <line:790:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x5584ea5fdbf0 <col:3> '_Bool' lvalue Var 0x5584ea5f7058 'z$r_buff1_thd3' '_Bool'
|   | `-ImplicitCastExpr 0x5584ea5fdea0 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x5584ea5fde70 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x5584ea5fdd90 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x5584ea5fdcb0 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x5584ea5fdc68 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x5584ea5fdc50 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x5584ea5fdc10 <col:20> '_Bool' lvalue Var 0x5584ea5f7248 'z$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x5584ea5fdc98 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x5584ea5fdc80 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x5584ea5fdc30 <col:38> '_Bool' lvalue Var 0x5584ea5f6e78 'z$r_buff0_thd3' '_Bool'
|   |     | `-BinaryOperator 0x5584ea5fdd70 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x5584ea5fdd28 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x5584ea5fdd10 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x5584ea5fdcd0 <col:56> '_Bool' lvalue Var 0x5584ea5f7340 'z$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x5584ea5fdd58 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x5584ea5fdd40 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x5584ea5fdcf0 <col:74> '_Bool' lvalue Var 0x5584ea5f7058 'z$r_buff1_thd3' '_Bool'
|   |     |-ImplicitCastExpr 0x5584ea5fde28 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x5584ea5fdde0 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x5584ea5fddb0 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x5584ea5fde58 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x5584ea5fde40 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x5584ea5fde08 <col:102> '_Bool' lvalue Var 0x5584ea5f7058 'z$r_buff1_thd3' '_Bool'
|   |-CallExpr 0x5584ea5fdf10 <line:791:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x5584ea5fdef8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5584ea5fded8 <col:3> 'void ()' Function 0x5584ea59cf00 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x5584ea5fdf68 <line:792:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x5584ea5fdf50 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5584ea5fdf30 <col:3> 'void ()' Function 0x5584ea59ce40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x5584ea5fe020 <line:793:3, col:41> 'int' '='
|   | |-DeclRefExpr 0x5584ea5fdf88 <col:3> 'int' lvalue Var 0x5584ea5f6120 '__unbuffered_cnt' 'int'
|   | `-BinaryOperator 0x5584ea5fe000 <col:22, col:41> 'int' '+'
|   |   |-ImplicitCastExpr 0x5584ea5fdfe8 <col:22> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x5584ea5fdfa8 <col:22> 'int' lvalue Var 0x5584ea5f6120 '__unbuffered_cnt' 'int'
|   |   `-IntegerLiteral 0x5584ea5fdfc8 <col:41> 'int' 1
|   |-CallExpr 0x5584ea5fe078 <line:794:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x5584ea5fe060 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5584ea5fe040 <col:3> 'void ()' Function 0x5584ea59cf00 '__VERIFIER_atomic_end' 'void ()'
|   `-ReturnStmt 0x5584ea5fe0f0 <line:795:3, col:36>
|     `-CallExpr 0x5584ea5fe0d0 <col:10, col:36> 'void *'
|       `-ImplicitCastExpr 0x5584ea5fe0b8 <col:10> 'void *(*)(void)' <FunctionToPointerDecay>
|         `-DeclRefExpr 0x5584ea5fe098 <col:10> 'void *(void)' Function 0x5584ea59c958 '__VERIFIER_nondet_pointer' 'void *(void)'
|-FunctionDecl 0x5584ea5fe238 prev 0x5584ea5f5e68 <line:797:1, line:799:1> line:797:6 fence 'void ()'
| `-CompoundStmt 0x5584ea5fe2d8 <line:798:1, line:799:1>
|-FunctionDecl 0x5584ea5fe308 prev 0x5584ea5f5f28 <line:800:1, line:802:1> line:800:6 isync 'void ()'
| `-CompoundStmt 0x5584ea5fe3a8 <line:801:1, line:802:1>
|-FunctionDecl 0x5584ea5fe3d8 prev 0x5584ea5f5fe8 <line:803:1, line:805:1> line:803:6 lwfence 'void ()'
| `-CompoundStmt 0x5584ea5fe478 <line:804:1, line:805:1>
`-FunctionDecl 0x5584ea5fe4e8 <line:806:1, line:830:1> line:806:5 main 'int ()'
  `-CompoundStmt 0x5584ea6002c8 <line:807:1, line:830:1>
    |-DeclStmt 0x5584ea5fe600 <line:808:3, col:16>
    | `-VarDecl 0x5584ea5fe598 <col:3, col:13> col:13 used t64 'pthread_t':'unsigned long'
    |-CallExpr 0x5584ea5fe808 <line:809:3, col:52> 'int'
    | |-ImplicitCastExpr 0x5584ea5fe7f0 <col:3> 'int (*)(pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x5584ea5fe618 <col:3> 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' Function 0x5584ea5dd488 'pthread_create' 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)'
    | |-UnaryOperator 0x5584ea5fe658 <col:18, col:19> 'pthread_t *' prefix '&' cannot overflow
    | | `-DeclRefExpr 0x5584ea5fe638 <col:19> 'pthread_t':'unsigned long' lvalue Var 0x5584ea5fe598 't64' 'pthread_t':'unsigned long'
    | |-ImplicitCastExpr 0x5584ea5fe848 <col:24, col:34> 'const pthread_attr_t *' <NullToPointer>
    | | `-ParenExpr 0x5584ea5fe6d0 <col:24, col:34> 'void *'
    | |   `-CStyleCastExpr 0x5584ea5fe6a8 <col:25, col:33> 'void *' <NullToPointer>
    | |     `-IntegerLiteral 0x5584ea5fe670 <col:33> 'int' 0
    | |-ImplicitCastExpr 0x5584ea5fe860 <col:37> 'void *(*)(void *)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x5584ea5fe6f0 <col:37> 'void *(void *)' Function 0x5584ea5f7548 'P0' 'void *(void *)'
    | `-ParenExpr 0x5584ea5fe770 <col:41, col:51> 'void *'
    |   `-CStyleCastExpr 0x5584ea5fe748 <col:42, col:50> 'void *' <NullToPointer>
    |     `-IntegerLiteral 0x5584ea5fe710 <col:50> 'int' 0
    |-DeclStmt 0x5584ea5fe8f0 <line:810:3, col:16>
    | `-VarDecl 0x5584ea5fe888 <col:3, col:13> col:13 used t65 'pthread_t':'unsigned long'
    |-CallExpr 0x5584ea5fea98 <line:811:3, col:52> 'int'
    | |-ImplicitCastExpr 0x5584ea5fea80 <col:3> 'int (*)(pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x5584ea5fe908 <col:3> 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' Function 0x5584ea5dd488 'pthread_create' 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)'
    | |-UnaryOperator 0x5584ea5fe948 <col:18, col:19> 'pthread_t *' prefix '&' cannot overflow
    | | `-DeclRefExpr 0x5584ea5fe928 <col:19> 'pthread_t':'unsigned long' lvalue Var 0x5584ea5fe888 't65' 'pthread_t':'unsigned long'
    | |-ImplicitCastExpr 0x5584ea5fead8 <col:24, col:34> 'const pthread_attr_t *' <NullToPointer>
    | | `-ParenExpr 0x5584ea5fe9c0 <col:24, col:34> 'void *'
    | |   `-CStyleCastExpr 0x5584ea5fe998 <col:25, col:33> 'void *' <NullToPointer>
    | |     `-IntegerLiteral 0x5584ea5fe960 <col:33> 'int' 0
    | |-ImplicitCastExpr 0x5584ea5feaf0 <col:37> 'void *(*)(void *)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x5584ea5fe9e0 <col:37> 'void *(void *)' Function 0x5584ea5f8f28 'P1' 'void *(void *)'
    | `-ParenExpr 0x5584ea5fea60 <col:41, col:51> 'void *'
    |   `-CStyleCastExpr 0x5584ea5fea38 <col:42, col:50> 'void *' <NullToPointer>
    |     `-IntegerLiteral 0x5584ea5fea00 <col:50> 'int' 0
    |-DeclStmt 0x5584ea5febe8 <line:812:3, col:16>
    | `-VarDecl 0x5584ea5feb80 <col:3, col:13> col:13 used t66 'pthread_t':'unsigned long'
    |-CallExpr 0x5584ea5fed90 <line:813:3, col:52> 'int'
    | |-ImplicitCastExpr 0x5584ea5fed78 <col:3> 'int (*)(pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x5584ea5fec00 <col:3> 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' Function 0x5584ea5dd488 'pthread_create' 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)'
    | |-UnaryOperator 0x5584ea5fec40 <col:18, col:19> 'pthread_t *' prefix '&' cannot overflow
    | | `-DeclRefExpr 0x5584ea5fec20 <col:19> 'pthread_t':'unsigned long' lvalue Var 0x5584ea5feb80 't66' 'pthread_t':'unsigned long'
    | |-ImplicitCastExpr 0x5584ea5fedd0 <col:24, col:34> 'const pthread_attr_t *' <NullToPointer>
    | | `-ParenExpr 0x5584ea5fecb8 <col:24, col:34> 'void *'
    | |   `-CStyleCastExpr 0x5584ea5fec90 <col:25, col:33> 'void *' <NullToPointer>
    | |     `-IntegerLiteral 0x5584ea5fec58 <col:33> 'int' 0
    | |-ImplicitCastExpr 0x5584ea5fede8 <col:37> 'void *(*)(void *)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x5584ea5fecd8 <col:37> 'void *(void *)' Function 0x5584ea5fa410 'P2' 'void *(void *)'
    | `-ParenExpr 0x5584ea5fed58 <col:41, col:51> 'void *'
    |   `-CStyleCastExpr 0x5584ea5fed30 <col:42, col:50> 'void *' <NullToPointer>
    |     `-IntegerLiteral 0x5584ea5fecf8 <col:50> 'int' 0
    |-CallExpr 0x5584ea5fee38 <line:814:3, col:27> 'void'
    | `-ImplicitCastExpr 0x5584ea5fee20 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x5584ea5fee00 <col:3> 'void ()' Function 0x5584ea59ce40 '__VERIFIER_atomic_begin' 'void ()'
    |-BinaryOperator 0x5584ea5fef08 <line:815:3, col:41> '_Bool' '='
    | |-DeclRefExpr 0x5584ea5fee58 <col:3> '_Bool' lvalue Var 0x5584ea5f6758 'main$tmp_guard0' '_Bool'
    | `-ImplicitCastExpr 0x5584ea5feef0 <col:21, col:41> '_Bool' <IntegralToBoolean>
    |   `-BinaryOperator 0x5584ea5feed0 <col:21, col:41> 'int' '=='
    |     |-ImplicitCastExpr 0x5584ea5feeb8 <col:21> 'int' <LValueToRValue>
    |     | `-DeclRefExpr 0x5584ea5fee78 <col:21> 'int' lvalue Var 0x5584ea5f6120 '__unbuffered_cnt' 'int'
    |     `-IntegerLiteral 0x5584ea5fee98 <col:41> 'int' 3
    |-CallExpr 0x5584ea5fef60 <line:816:3, col:25> 'void'
    | `-ImplicitCastExpr 0x5584ea5fef48 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x5584ea5fef28 <col:3> 'void ()' Function 0x5584ea59cf00 '__VERIFIER_atomic_end' 'void ()'
    |-CallExpr 0x5584ea5fefd8 <line:817:3, col:36> 'void'
    | |-ImplicitCastExpr 0x5584ea5fefc0 <col:3> 'void (*)(int)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x5584ea5fef80 <col:3> 'void (int)' Function 0x5584ea59c790 '__VERIFIER_assume' 'void (int)'
    | `-ImplicitCastExpr 0x5584ea5ff018 <col:21> 'int' <IntegralCast>
    |   `-ImplicitCastExpr 0x5584ea5ff000 <col:21> '_Bool' <LValueToRValue>
    |     `-DeclRefExpr 0x5584ea5fefa0 <col:21> '_Bool' lvalue Var 0x5584ea5f6758 'main$tmp_guard0' '_Bool'
    |-CallExpr 0x5584ea5ff068 <line:818:3, col:27> 'void'
    | `-ImplicitCastExpr 0x5584ea5ff050 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x5584ea5ff030 <col:3> 'void ()' Function 0x5584ea59ce40 '__VERIFIER_atomic_begin' 'void ()'
    |-BinaryOperator 0x5584ea5ff350 <line:819:3, col:103> 'int' '='
    | |-DeclRefExpr 0x5584ea5ff088 <col:3> 'int' lvalue Var 0x5584ea5f6b80 'z' 'int'
    | `-ConditionalOperator 0x5584ea5ff320 <col:7, col:103> 'int'
    |   |-BinaryOperator 0x5584ea5ff148 <col:7, col:25> 'int' '&&'
    |   | |-ImplicitCastExpr 0x5584ea5ff100 <col:7> 'int' <IntegralCast>
    |   | | `-ImplicitCastExpr 0x5584ea5ff0e8 <col:7> '_Bool' <LValueToRValue>
    |   | |   `-DeclRefExpr 0x5584ea5ff0a8 <col:7> '_Bool' lvalue Var 0x5584ea5f7248 'z$w_buff0_used' '_Bool'
    |   | `-ImplicitCastExpr 0x5584ea5ff130 <col:25> 'int' <IntegralCast>
    |   |   `-ImplicitCastExpr 0x5584ea5ff118 <col:25> '_Bool' <LValueToRValue>
    |   |     `-DeclRefExpr 0x5584ea5ff0c8 <col:25> '_Bool' lvalue Var 0x5584ea5f6d10 'z$r_buff0_thd0' '_Bool'
    |   |-ImplicitCastExpr 0x5584ea5ff308 <col:42> 'int' <LValueToRValue>
    |   | `-DeclRefExpr 0x5584ea5ff168 <col:42> 'int' lvalue Var 0x5584ea5f71d0 'z$w_buff0' 'int'
    |   `-ParenExpr 0x5584ea5ff2e8 <col:54, col:103> 'int'
    |     `-ConditionalOperator 0x5584ea5ff2b8 <col:55, col:102> 'int'
    |       |-BinaryOperator 0x5584ea5ff228 <col:55, col:73> 'int' '&&'
    |       | |-ImplicitCastExpr 0x5584ea5ff1e0 <col:55> 'int' <IntegralCast>
    |       | | `-ImplicitCastExpr 0x5584ea5ff1c8 <col:55> '_Bool' <LValueToRValue>
    |       | |   `-DeclRefExpr 0x5584ea5ff188 <col:55> '_Bool' lvalue Var 0x5584ea5f7340 'z$w_buff1_used' '_Bool'
    |       | `-ImplicitCastExpr 0x5584ea5ff210 <col:73> 'int' <IntegralCast>
    |       |   `-ImplicitCastExpr 0x5584ea5ff1f8 <col:73> '_Bool' <LValueToRValue>
    |       |     `-DeclRefExpr 0x5584ea5ff1a8 <col:73> '_Bool' lvalue Var 0x5584ea5f6ef0 'z$r_buff1_thd0' '_Bool'
    |       |-ImplicitCastExpr 0x5584ea5ff288 <col:90> 'int' <LValueToRValue>
    |       | `-DeclRefExpr 0x5584ea5ff248 <col:90> 'int' lvalue Var 0x5584ea5f72c8 'z$w_buff1' 'int'
    |       `-ImplicitCastExpr 0x5584ea5ff2a0 <col:102> 'int' <LValueToRValue>
    |         `-DeclRefExpr 0x5584ea5ff268 <col:102> 'int' lvalue Var 0x5584ea5f6b80 'z' 'int'
    |-BinaryOperator 0x5584ea5ff558 <line:820:3, col:66> '_Bool' '='
    | |-DeclRefExpr 0x5584ea5ff370 <col:3> '_Bool' lvalue Var 0x5584ea5f7248 'z$w_buff0_used' '_Bool'
    | `-ImplicitCastExpr 0x5584ea5ff540 <col:20, col:66> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x5584ea5ff510 <col:20, col:66> 'int'
    |     |-BinaryOperator 0x5584ea5ff430 <col:20, col:38> 'int' '&&'
    |     | |-ImplicitCastExpr 0x5584ea5ff3e8 <col:20> 'int' <IntegralCast>
    |     | | `-ImplicitCastExpr 0x5584ea5ff3d0 <col:20> '_Bool' <LValueToRValue>
    |     | |   `-DeclRefExpr 0x5584ea5ff390 <col:20> '_Bool' lvalue Var 0x5584ea5f7248 'z$w_buff0_used' '_Bool'
    |     | `-ImplicitCastExpr 0x5584ea5ff418 <col:38> 'int' <IntegralCast>
    |     |   `-ImplicitCastExpr 0x5584ea5ff400 <col:38> '_Bool' <LValueToRValue>
    |     |     `-DeclRefExpr 0x5584ea5ff3b0 <col:38> '_Bool' lvalue Var 0x5584ea5f6d10 'z$r_buff0_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x5584ea5ff4c8 <col:55, col:62> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x5584ea5ff480 <col:55, col:62> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x5584ea5ff450 <col:62> 'int' 0
    |     `-ImplicitCastExpr 0x5584ea5ff4f8 <col:66> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x5584ea5ff4e0 <col:66> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x5584ea5ff4a8 <col:66> '_Bool' lvalue Var 0x5584ea5f7248 'z$w_buff0_used' '_Bool'
    |-BinaryOperator 0x5584ea5ff840 <line:821:3, col:102> '_Bool' '='
    | |-DeclRefExpr 0x5584ea5ff578 <col:3> '_Bool' lvalue Var 0x5584ea5f7340 'z$w_buff1_used' '_Bool'
    | `-ImplicitCastExpr 0x5584ea5ff828 <col:20, col:102> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x5584ea5ff7f8 <col:20, col:102> 'int'
    |     |-BinaryOperator 0x5584ea5ff718 <col:20, col:74> 'int' '||'
    |     | |-BinaryOperator 0x5584ea5ff638 <col:20, col:38> 'int' '&&'
    |     | | |-ImplicitCastExpr 0x5584ea5ff5f0 <col:20> 'int' <IntegralCast>
    |     | | | `-ImplicitCastExpr 0x5584ea5ff5d8 <col:20> '_Bool' <LValueToRValue>
    |     | | |   `-DeclRefExpr 0x5584ea5ff598 <col:20> '_Bool' lvalue Var 0x5584ea5f7248 'z$w_buff0_used' '_Bool'
    |     | | `-ImplicitCastExpr 0x5584ea5ff620 <col:38> 'int' <IntegralCast>
    |     | |   `-ImplicitCastExpr 0x5584ea5ff608 <col:38> '_Bool' <LValueToRValue>
    |     | |     `-DeclRefExpr 0x5584ea5ff5b8 <col:38> '_Bool' lvalue Var 0x5584ea5f6d10 'z$r_buff0_thd0' '_Bool'
    |     | `-BinaryOperator 0x5584ea5ff6f8 <col:56, col:74> 'int' '&&'
    |     |   |-ImplicitCastExpr 0x5584ea5ff6b0 <col:56> 'int' <IntegralCast>
    |     |   | `-ImplicitCastExpr 0x5584ea5ff698 <col:56> '_Bool' <LValueToRValue>
    |     |   |   `-DeclRefExpr 0x5584ea5ff658 <col:56> '_Bool' lvalue Var 0x5584ea5f7340 'z$w_buff1_used' '_Bool'
    |     |   `-ImplicitCastExpr 0x5584ea5ff6e0 <col:74> 'int' <IntegralCast>
    |     |     `-ImplicitCastExpr 0x5584ea5ff6c8 <col:74> '_Bool' <LValueToRValue>
    |     |       `-DeclRefExpr 0x5584ea5ff678 <col:74> '_Bool' lvalue Var 0x5584ea5f6ef0 'z$r_buff1_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x5584ea5ff7b0 <col:91, col:98> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x5584ea5ff768 <col:91, col:98> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x5584ea5ff738 <col:98> 'int' 0
    |     `-ImplicitCastExpr 0x5584ea5ff7e0 <col:102> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x5584ea5ff7c8 <col:102> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x5584ea5ff790 <col:102> '_Bool' lvalue Var 0x5584ea5f7340 'z$w_buff1_used' '_Bool'
    |-BinaryOperator 0x5584ea5ffa48 <line:822:3, col:66> '_Bool' '='
    | |-DeclRefExpr 0x5584ea5ff860 <col:3> '_Bool' lvalue Var 0x5584ea5f6d10 'z$r_buff0_thd0' '_Bool'
    | `-ImplicitCastExpr 0x5584ea5ffa30 <col:20, col:66> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x5584ea5ffa00 <col:20, col:66> 'int'
    |     |-BinaryOperator 0x5584ea5ff920 <col:20, col:38> 'int' '&&'
    |     | |-ImplicitCastExpr 0x5584ea5ff8d8 <col:20> 'int' <IntegralCast>
    |     | | `-ImplicitCastExpr 0x5584ea5ff8c0 <col:20> '_Bool' <LValueToRValue>
    |     | |   `-DeclRefExpr 0x5584ea5ff880 <col:20> '_Bool' lvalue Var 0x5584ea5f7248 'z$w_buff0_used' '_Bool'
    |     | `-ImplicitCastExpr 0x5584ea5ff908 <col:38> 'int' <IntegralCast>
    |     |   `-ImplicitCastExpr 0x5584ea5ff8f0 <col:38> '_Bool' <LValueToRValue>
    |     |     `-DeclRefExpr 0x5584ea5ff8a0 <col:38> '_Bool' lvalue Var 0x5584ea5f6d10 'z$r_buff0_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x5584ea5ff9b8 <col:55, col:62> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x5584ea5ff970 <col:55, col:62> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x5584ea5ff940 <col:62> 'int' 0
    |     `-ImplicitCastExpr 0x5584ea5ff9e8 <col:66> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x5584ea5ff9d0 <col:66> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x5584ea5ff998 <col:66> '_Bool' lvalue Var 0x5584ea5f6d10 'z$r_buff0_thd0' '_Bool'
    |-BinaryOperator 0x5584ea5ffd58 <line:823:3, col:102> '_Bool' '='
    | |-DeclRefExpr 0x5584ea5ffa68 <col:3> '_Bool' lvalue Var 0x5584ea5f6ef0 'z$r_buff1_thd0' '_Bool'
    | `-ImplicitCastExpr 0x5584ea5ffd40 <col:20, col:102> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x5584ea5ffd10 <col:20, col:102> 'int'
    |     |-BinaryOperator 0x5584ea5ffc30 <col:20, col:74> 'int' '||'
    |     | |-BinaryOperator 0x5584ea5ffb28 <col:20, col:38> 'int' '&&'
    |     | | |-ImplicitCastExpr 0x5584ea5ffae0 <col:20> 'int' <IntegralCast>
    |     | | | `-ImplicitCastExpr 0x5584ea5ffac8 <col:20> '_Bool' <LValueToRValue>
    |     | | |   `-DeclRefExpr 0x5584ea5ffa88 <col:20> '_Bool' lvalue Var 0x5584ea5f7248 'z$w_buff0_used' '_Bool'
    |     | | `-ImplicitCastExpr 0x5584ea5ffb10 <col:38> 'int' <IntegralCast>
    |     | |   `-ImplicitCastExpr 0x5584ea5ffaf8 <col:38> '_Bool' <LValueToRValue>
    |     | |     `-DeclRefExpr 0x5584ea5ffaa8 <col:38> '_Bool' lvalue Var 0x5584ea5f6d10 'z$r_buff0_thd0' '_Bool'
    |     | `-BinaryOperator 0x5584ea5ffc10 <col:56, col:74> 'int' '&&'
    |     |   |-ImplicitCastExpr 0x5584ea5ffbc8 <col:56> 'int' <IntegralCast>
    |     |   | `-ImplicitCastExpr 0x5584ea5ffbb0 <col:56> '_Bool' <LValueToRValue>
    |     |   |   `-DeclRefExpr 0x5584ea5ffb48 <col:56> '_Bool' lvalue Var 0x5584ea5f7340 'z$w_buff1_used' '_Bool'
    |     |   `-ImplicitCastExpr 0x5584ea5ffbf8 <col:74> 'int' <IntegralCast>
    |     |     `-ImplicitCastExpr 0x5584ea5ffbe0 <col:74> '_Bool' <LValueToRValue>
    |     |       `-DeclRefExpr 0x5584ea5ffb90 <col:74> '_Bool' lvalue Var 0x5584ea5f6ef0 'z$r_buff1_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x5584ea5ffcc8 <col:91, col:98> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x5584ea5ffc80 <col:91, col:98> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x5584ea5ffc50 <col:98> 'int' 0
    |     `-ImplicitCastExpr 0x5584ea5ffcf8 <col:102> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x5584ea5ffce0 <col:102> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x5584ea5ffca8 <col:102> '_Bool' lvalue Var 0x5584ea5f6ef0 'z$r_buff1_thd0' '_Bool'
    |-CallExpr 0x5584ea5ffdb0 <line:824:3, col:25> 'void'
    | `-ImplicitCastExpr 0x5584ea5ffd98 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x5584ea5ffd78 <col:3> 'void ()' Function 0x5584ea59cf00 '__VERIFIER_atomic_end' 'void ()'
    |-CallExpr 0x5584ea5ffe08 <line:825:3, col:27> 'void'
    | `-ImplicitCastExpr 0x5584ea5ffdf0 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x5584ea5ffdd0 <col:3> 'void ()' Function 0x5584ea59ce40 '__VERIFIER_atomic_begin' 'void ()'
    |-BinaryOperator 0x5584ea600170 <line:826:3, col:159> '_Bool' '='
    | |-DeclRefExpr 0x5584ea5ffe28 <col:3> '_Bool' lvalue Var 0x5584ea5f67d0 'main$tmp_guard1' '_Bool'
    | `-ImplicitCastExpr 0x5584ea600158 <col:21, col:159> '_Bool' <IntegralToBoolean>
    |   `-UnaryOperator 0x5584ea600140 <col:21, col:159> 'int' prefix '!' cannot overflow
    |     `-ParenExpr 0x5584ea600120 <col:22, col:159> 'int'
    |       `-BinaryOperator 0x5584ea600100 <col:23, col:158> 'int' '&&'
    |         |-BinaryOperator 0x5584ea600068 <col:23, col:130> 'int' '&&'
    |         | |-BinaryOperator 0x5584ea5fffd0 <col:23, col:102> 'int' '&&'
    |         | | |-BinaryOperator 0x5584ea5fff38 <col:23, col:74> 'int' '&&'
    |         | | | |-BinaryOperator 0x5584ea5ffea0 <col:23, col:46> 'int' '=='
    |         | | | | |-ImplicitCastExpr 0x5584ea5ffe88 <col:23> 'int' <LValueToRValue>
    |         | | | | | `-DeclRefExpr 0x5584ea5ffe48 <col:23> 'int' lvalue Var 0x5584ea5f6240 '__unbuffered_p0_EAX' 'int'
    |         | | | | `-IntegerLiteral 0x5584ea5ffe68 <col:46> 'int' 0
    |         | | | `-BinaryOperator 0x5584ea5fff18 <col:51, col:74> 'int' '=='
    |         | | |   |-ImplicitCastExpr 0x5584ea5fff00 <col:51> 'int' <LValueToRValue>
    |         | | |   | `-DeclRefExpr 0x5584ea5ffec0 <col:51> 'int' lvalue Var 0x5584ea5f6360 '__unbuffered_p1_EAX' 'int'
    |         | | |   `-IntegerLiteral 0x5584ea5ffee0 <col:74> 'int' 1
    |         | | `-BinaryOperator 0x5584ea5fffb0 <col:79, col:102> 'int' '=='
    |         | |   |-ImplicitCastExpr 0x5584ea5fff98 <col:79> 'int' <LValueToRValue>
    |         | |   | `-DeclRefExpr 0x5584ea5fff58 <col:79> 'int' lvalue Var 0x5584ea5f6480 '__unbuffered_p1_EBX' 'int'
    |         | |   `-IntegerLiteral 0x5584ea5fff78 <col:102> 'int' 0
    |         | `-BinaryOperator 0x5584ea600048 <col:107, col:130> 'int' '=='
    |         |   |-ImplicitCastExpr 0x5584ea600030 <col:107> 'int' <LValueToRValue>
    |         |   | `-DeclRefExpr 0x5584ea5ffff0 <col:107> 'int' lvalue Var 0x5584ea5f65a0 '__unbuffered_p2_EAX' 'int'
    |         |   `-IntegerLiteral 0x5584ea600010 <col:130> 'int' 1
    |         `-BinaryOperator 0x5584ea6000e0 <col:135, col:158> 'int' '=='
    |           |-ImplicitCastExpr 0x5584ea6000c8 <col:135> 'int' <LValueToRValue>
    |           | `-DeclRefExpr 0x5584ea600088 <col:135> 'int' lvalue Var 0x5584ea5f66c0 '__unbuffered_p2_EBX' 'int'
    |           `-IntegerLiteral 0x5584ea6000a8 <col:158> 'int' 0
    |-CallExpr 0x5584ea6001c8 <line:827:3, col:25> 'void'
    | `-ImplicitCastExpr 0x5584ea6001b0 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x5584ea600190 <col:3> 'void ()' Function 0x5584ea59cf00 '__VERIFIER_atomic_end' 'void ()'
    |-CallExpr 0x5584ea600240 <line:828:3, col:36> 'void'
    | |-ImplicitCastExpr 0x5584ea600228 <col:3> 'void (*)(int)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x5584ea6001e8 <col:3> 'void (int)' Function 0x5584ea59cbc8 '__VERIFIER_assert' 'void (int)'
    | `-ImplicitCastExpr 0x5584ea600280 <col:21> 'int' <IntegralCast>
    |   `-ImplicitCastExpr 0x5584ea600268 <col:21> '_Bool' <LValueToRValue>
    |     `-DeclRefExpr 0x5584ea600208 <col:21> '_Bool' lvalue Var 0x5584ea5f67d0 'main$tmp_guard1' '_Bool'
    `-ReturnStmt 0x5584ea6002b8 <line:829:3, col:10>
      `-IntegerLiteral 0x5584ea600298 <col:10> 'int' 0
