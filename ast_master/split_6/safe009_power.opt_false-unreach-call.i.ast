TranslationUnitDecl 0x5625ffabee18 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x5625ffabf6d8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x5625ffabf3b0 '__int128'
|-TypedefDecl 0x5625ffabf748 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x5625ffabf3d0 'unsigned __int128'
|-TypedefDecl 0x5625ffabfa50 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x5625ffabf820 'struct __NSConstantString_tag'
|   `-Record 0x5625ffabf7a0 '__NSConstantString_tag'
|-TypedefDecl 0x5625ffabfaf8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x5625ffabfab0 'char *'
|   `-BuiltinType 0x5625ffabeeb0 'char'
|-TypedefDecl 0x5625ffafe650 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'struct __va_list_tag [1]'
| `-ConstantArrayType 0x5625ffabfd90 'struct __va_list_tag [1]' 1 
|   `-RecordType 0x5625ffabfbd0 'struct __va_list_tag'
|     `-Record 0x5625ffabfb50 '__va_list_tag'
|-FunctionDecl 0x5625ffafe790 <./split_6/safe009_power.opt_false-unreach-call.i:1:1, col:34> col:13 used __VERIFIER_assume 'void (int)' extern
| `-ParmVarDecl 0x5625ffafe6c0 <col:31> col:34 'int'
|-FunctionDecl 0x5625ffafe958 <line:2:1, col:45> col:15 used __VERIFIER_nondet_pointer 'void *(void)' extern
|-FunctionDecl 0x5625ffafea80 <line:3:1, col:61> col:13 used __VERIFIER_error 'void () __attribute__((noreturn))' extern
|-FunctionDecl 0x5625ffafebc8 <line:4:1, col:99> col:6 used __VERIFIER_assert 'void (int)'
| |-ParmVarDecl 0x5625ffafeb38 <col:24, col:28> col:28 used expression 'int'
| `-CompoundStmt 0x5625ffafedf8 <col:40, col:99>
|   |-IfStmt 0x5625ffafedc8 <col:42, col:88>
|   | |-UnaryOperator 0x5625ffafeca8 <col:46, col:47> 'int' prefix '!' cannot overflow
|   | | `-ImplicitCastExpr 0x5625ffafec90 <col:47> 'int' <LValueToRValue>
|   | |   `-DeclRefExpr 0x5625ffafec70 <col:47> 'int' lvalue ParmVar 0x5625ffafeb38 'expression' 'int'
|   | `-CompoundStmt 0x5625ffafedb0 <col:59, col:88>
|   |   `-LabelStmt 0x5625ffafed98 <col:61, col:85> 'ERROR'
|   |     `-CallExpr 0x5625ffafed28 <col:68, col:85> 'void'
|   |       `-ImplicitCastExpr 0x5625ffafed10 <col:68> 'void (*)() __attribute__((noreturn))' <FunctionToPointerDecay>
|   |         `-DeclRefExpr 0x5625ffafecc0 <col:68> 'void () __attribute__((noreturn))' Function 0x5625ffafea80 '__VERIFIER_error' 'void () __attribute__((noreturn))'
|   |-NullStmt 0x5625ffafede0 <col:89>
|   `-ReturnStmt 0x5625ffafede8 <col:91>
|-FunctionDecl 0x5625ffafee40 <line:5:1, col:37> col:13 used __VERIFIER_atomic_begin 'void ()' extern
|-FunctionDecl 0x5625ffafef00 <line:6:1, col:35> col:13 used __VERIFIER_atomic_end 'void ()' extern
|-FunctionDecl 0x5625ffaff280 <line:8:1, line:10:76> line:8:13 __assert_fail 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x5625ffafefb8 <col:28, col:40> col:40 __assertion 'const char *'
| |-ParmVarDecl 0x5625ffaff038 <col:53, col:65> col:65 __file 'const char *'
| |-ParmVarDecl 0x5625ffaff0b8 <line:9:7, col:20> col:20 __line 'unsigned int'
| |-ParmVarDecl 0x5625ffaff138 <col:28, col:40> col:40 __function 'const char *'
| `-NoThrowAttr 0x5625ffaff340 <line:10:22>
|-FunctionDecl 0x5625ffb25390 <line:11:1, line:13:76> line:11:13 __assert_perror_fail 'void (int, const char *, unsigned int, const char *) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x5625ffaff3b0 <col:35, col:39> col:39 __errnum 'int'
| |-ParmVarDecl 0x5625ffaff430 <col:49, col:61> col:61 __file 'const char *'
| |-ParmVarDecl 0x5625ffaff4b0 <line:12:7, col:20> col:20 __line 'unsigned int'
| |-ParmVarDecl 0x5625ffaff530 <col:28, col:40> col:40 __function 'const char *'
| `-NoThrowAttr 0x5625ffb25450 <line:13:22>
|-FunctionDecl 0x5625ffb25700 <line:14:1, line:15:76> line:14:13 __assert 'void (const char *, const char *, int) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x5625ffb254c0 <col:23, col:35> col:35 __assertion 'const char *'
| |-ParmVarDecl 0x5625ffb25540 <col:48, col:60> col:60 __file 'const char *'
| |-ParmVarDecl 0x5625ffb255c0 <col:68, col:72> col:72 __line 'int'
| `-NoThrowAttr 0x5625ffb257b8 <line:15:22>
|-TypedefDecl 0x5625ffb25828 <line:17:1, col:23> col:23 __u_char 'unsigned char'
| `-BuiltinType 0x5625ffabef70 'unsigned char'
|-TypedefDecl 0x5625ffb25898 <line:18:1, col:28> col:28 __u_short 'unsigned short'
| `-BuiltinType 0x5625ffabef90 'unsigned short'
|-TypedefDecl 0x5625ffb25908 <line:19:1, col:22> col:22 __u_int 'unsigned int'
| `-BuiltinType 0x5625ffabefb0 'unsigned int'
|-TypedefDecl 0x5625ffb25978 <line:20:1, col:27> col:27 __u_long 'unsigned long'
| `-BuiltinType 0x5625ffabefd0 'unsigned long'
|-TypedefDecl 0x5625ffb259e8 <line:21:1, col:21> col:21 __int8_t 'signed char'
| `-BuiltinType 0x5625ffabeed0 'signed char'
|-TypedefDecl 0x5625ffb25a58 <line:22:1, col:23> col:23 __uint8_t 'unsigned char'
| `-BuiltinType 0x5625ffabef70 'unsigned char'
|-TypedefDecl 0x5625ffb25ac8 <line:23:1, col:26> col:26 __int16_t 'short'
| `-BuiltinType 0x5625ffabeef0 'short'
|-TypedefDecl 0x5625ffb25b38 <line:24:1, col:28> col:28 __uint16_t 'unsigned short'
| `-BuiltinType 0x5625ffabef90 'unsigned short'
|-TypedefDecl 0x5625ffb25ba8 <line:25:1, col:20> col:20 __int32_t 'int'
| `-BuiltinType 0x5625ffabef10 'int'
|-TypedefDecl 0x5625ffb25c18 <line:26:1, col:22> col:22 __uint32_t 'unsigned int'
| `-BuiltinType 0x5625ffabefb0 'unsigned int'
|-TypedefDecl 0x5625ffb25c88 <line:27:1, col:25> col:25 __int64_t 'long'
| `-BuiltinType 0x5625ffabef30 'long'
|-TypedefDecl 0x5625ffb25cf8 <line:28:1, col:27> col:27 referenced __uint64_t 'unsigned long'
| `-BuiltinType 0x5625ffabefd0 'unsigned long'
|-TypedefDecl 0x5625ffb25d68 <line:29:1, col:18> col:18 referenced __quad_t 'long'
| `-BuiltinType 0x5625ffabef30 'long'
|-TypedefDecl 0x5625ffb25dd8 <line:30:1, col:27> col:27 __u_quad_t 'unsigned long'
| `-BuiltinType 0x5625ffabefd0 'unsigned long'
|-TypedefDecl 0x5625ffb25e48 <line:31:1, col:27> col:27 __dev_t 'unsigned long'
| `-BuiltinType 0x5625ffabefd0 'unsigned long'
|-TypedefDecl 0x5625ffb25eb8 <line:32:1, col:22> col:22 __uid_t 'unsigned int'
| `-BuiltinType 0x5625ffabefb0 'unsigned int'
|-TypedefDecl 0x5625ffb25f28 <line:33:1, col:22> col:22 __gid_t 'unsigned int'
| `-BuiltinType 0x5625ffabefb0 'unsigned int'
|-TypedefDecl 0x5625ffb25f98 <line:34:1, col:27> col:27 __ino_t 'unsigned long'
| `-BuiltinType 0x5625ffabefd0 'unsigned long'
|-TypedefDecl 0x5625ffb26008 <line:35:1, col:27> col:27 __ino64_t 'unsigned long'
| `-BuiltinType 0x5625ffabefd0 'unsigned long'
|-TypedefDecl 0x5625ffb26078 <line:36:1, col:22> col:22 __mode_t 'unsigned int'
| `-BuiltinType 0x5625ffabefb0 'unsigned int'
|-TypedefDecl 0x5625ffb260e8 <line:37:1, col:27> col:27 __nlink_t 'unsigned long'
| `-BuiltinType 0x5625ffabefd0 'unsigned long'
|-TypedefDecl 0x5625ffb26158 <line:38:1, col:18> col:18 __off_t 'long'
| `-BuiltinType 0x5625ffabef30 'long'
|-TypedefDecl 0x5625ffb261c8 <line:39:1, col:18> col:18 referenced __off64_t 'long'
| `-BuiltinType 0x5625ffabef30 'long'
|-TypedefDecl 0x5625ffb26238 <line:40:1, col:13> col:13 referenced __pid_t 'int'
| `-BuiltinType 0x5625ffabef10 'int'
|-RecordDecl 0x5625ffb26290 <line:41:9, col:32> col:9 struct definition
| `-FieldDecl 0x5625ffb26408 <col:18, col:29> col:22 __val 'int [2]'
|-TypedefDecl 0x5625ffb264c0 <col:1, col:34> col:34 __fsid_t 'struct __fsid_t':'__fsid_t'
| `-ElaboratedType 0x5625ffb26460 'struct __fsid_t' sugar
|   `-RecordType 0x5625ffb26310 '__fsid_t'
|     `-Record 0x5625ffb26290 ''
|-TypedefDecl 0x5625ffb26548 <line:42:1, col:18> col:18 referenced __clock_t 'long'
| `-BuiltinType 0x5625ffabef30 'long'
|-TypedefDecl 0x5625ffb265b8 <line:43:1, col:27> col:27 __rlim_t 'unsigned long'
| `-BuiltinType 0x5625ffabefd0 'unsigned long'
|-TypedefDecl 0x5625ffb26628 <line:44:1, col:27> col:27 __rlim64_t 'unsigned long'
| `-BuiltinType 0x5625ffabefd0 'unsigned long'
|-TypedefDecl 0x5625ffb26698 <line:45:1, col:22> col:22 __id_t 'unsigned int'
| `-BuiltinType 0x5625ffabefb0 'unsigned int'
|-TypedefDecl 0x5625ffb26708 <line:46:1, col:18> col:18 referenced __time_t 'long'
| `-BuiltinType 0x5625ffabef30 'long'
|-TypedefDecl 0x5625ffb26778 <line:47:1, col:22> col:22 __useconds_t 'unsigned int'
| `-BuiltinType 0x5625ffabefb0 'unsigned int'
|-TypedefDecl 0x5625ffb267e8 <line:48:1, col:18> col:18 __suseconds_t 'long'
| `-BuiltinType 0x5625ffabef30 'long'
|-TypedefDecl 0x5625ffb26858 <line:49:1, col:13> col:13 __daddr_t 'int'
| `-BuiltinType 0x5625ffabef10 'int'
|-TypedefDecl 0x5625ffb268c8 <line:50:1, col:13> col:13 __key_t 'int'
| `-BuiltinType 0x5625ffabef10 'int'
|-TypedefDecl 0x5625ffb26938 <line:51:1, col:13> col:13 referenced __clockid_t 'int'
| `-BuiltinType 0x5625ffabef10 'int'
|-TypedefDecl 0x5625ffb269a8 <line:52:1, col:16> col:16 referenced __timer_t 'void *'
| `-PointerType 0x5625ffabf630 'void *'
|   `-BuiltinType 0x5625ffabee70 'void'
|-TypedefDecl 0x5625ffb26a18 <line:53:1, col:18> col:18 __blksize_t 'long'
| `-BuiltinType 0x5625ffabef30 'long'
|-TypedefDecl 0x5625ffb26a88 <line:54:1, col:18> col:18 __blkcnt_t 'long'
| `-BuiltinType 0x5625ffabef30 'long'
|-TypedefDecl 0x5625ffb26af8 <line:55:1, col:18> col:18 __blkcnt64_t 'long'
| `-BuiltinType 0x5625ffabef30 'long'
|-TypedefDecl 0x5625ffb26b68 <line:56:1, col:27> col:27 __fsblkcnt_t 'unsigned long'
| `-BuiltinType 0x5625ffabefd0 'unsigned long'
|-TypedefDecl 0x5625ffb26bd8 <line:57:1, col:27> col:27 __fsblkcnt64_t 'unsigned long'
| `-BuiltinType 0x5625ffabefd0 'unsigned long'
|-TypedefDecl 0x5625ffb26c48 <line:58:1, col:27> col:27 __fsfilcnt_t 'unsigned long'
| `-BuiltinType 0x5625ffabefd0 'unsigned long'
|-TypedefDecl 0x5625ffb26cb8 <line:59:1, col:27> col:27 __fsfilcnt64_t 'unsigned long'
| `-BuiltinType 0x5625ffabefd0 'unsigned long'
|-TypedefDecl 0x5625ffb26d28 <line:60:1, col:18> col:18 __fsword_t 'long'
| `-BuiltinType 0x5625ffabef30 'long'
|-TypedefDecl 0x5625ffb26d98 <line:61:1, col:18> col:18 __ssize_t 'long'
| `-BuiltinType 0x5625ffabef30 'long'
|-TypedefDecl 0x5625ffb26e08 <line:62:1, col:18> col:18 referenced __syscall_slong_t 'long'
| `-BuiltinType 0x5625ffabef30 'long'
|-TypedefDecl 0x5625ffb26e78 <line:63:1, col:27> col:27 __syscall_ulong_t 'unsigned long'
| `-BuiltinType 0x5625ffabefd0 'unsigned long'
|-TypedefDecl 0x5625ffb26f08 <line:64:1, col:19> col:19 __loff_t '__off64_t':'long'
| `-TypedefType 0x5625ffb26ed0 '__off64_t' sugar
|   |-Typedef 0x5625ffb261c8 '__off64_t'
|   `-BuiltinType 0x5625ffabef30 'long'
|-TypedefDecl 0x5625ffb27000 <line:65:1, col:19> col:19 __qaddr_t '__quad_t *'
| `-PointerType 0x5625ffb26fc0 '__quad_t *'
|   `-TypedefType 0x5625ffb26f60 '__quad_t' sugar
|     |-Typedef 0x5625ffb25d68 '__quad_t'
|     `-BuiltinType 0x5625ffabef30 'long'
|-TypedefDecl 0x5625ffb27070 <line:66:1, col:15> col:15 __caddr_t 'char *'
| `-PointerType 0x5625ffabfab0 'char *'
|   `-BuiltinType 0x5625ffabeeb0 'char'
|-TypedefDecl 0x5625ffb270e0 <line:67:1, col:18> col:18 __intptr_t 'long'
| `-BuiltinType 0x5625ffabef30 'long'
|-TypedefDecl 0x5625ffb27150 <line:68:1, col:22> col:22 __socklen_t 'unsigned int'
| `-BuiltinType 0x5625ffabefb0 'unsigned int'
|-FunctionDecl 0x5625ffb27298 <line:69:1, line:73:1> line:70:1 __bswap_32 'unsigned int (unsigned int)' static inline
| |-ParmVarDecl 0x5625ffb271c0 <col:13, col:26> col:26 used __bsx 'unsigned int'
| `-CompoundStmt 0x5625ffb285e8 <line:71:1, line:73:1>
|   `-ReturnStmt 0x5625ffb285d8 <line:72:3, col:34>
|     `-CallExpr 0x5625ffb28598 <col:10, col:34> 'unsigned int'
|       |-ImplicitCastExpr 0x5625ffb28580 <col:10> 'unsigned int (*)(unsigned int)' <BuiltinFnToFnPtr>
|       | `-DeclRefExpr 0x5625ffb28510 <col:10> '<builtin fn type>' Function 0x5625ffb28380 '__builtin_bswap32' 'unsigned int (unsigned int)'
|       `-ImplicitCastExpr 0x5625ffb285c0 <col:29> 'unsigned int' <LValueToRValue>
|         `-DeclRefExpr 0x5625ffb28530 <col:29> 'unsigned int' lvalue ParmVar 0x5625ffb271c0 '__bsx' 'unsigned int'
|-FunctionDecl 0x5625ffb28380 <col:10> col:10 implicit used __builtin_bswap32 'unsigned int (unsigned int)' extern
| |-ParmVarDecl 0x5625ffb28420 <<invalid sloc>> <invalid sloc> 'unsigned int'
| |-NoThrowAttr 0x5625ffb28490 <col:10> Implicit
| `-ConstAttr 0x5625ffb284e8 <col:10> Implicit
|-FunctionDecl 0x5625ffb28740 <line:74:1, line:78:1> line:75:1 __bswap_64 '__uint64_t (__uint64_t)' static inline
| |-ParmVarDecl 0x5625ffb28638 <col:13, col:24> col:24 used __bsx '__uint64_t':'unsigned long'
| `-CompoundStmt 0x5625ffb28a58 <line:76:1, line:78:1>
|   `-ReturnStmt 0x5625ffb28a48 <line:77:3, col:34>
|     `-CallExpr 0x5625ffb28a08 <col:10, col:34> 'unsigned long'
|       |-ImplicitCastExpr 0x5625ffb289f0 <col:10> 'unsigned long (*)(unsigned long)' <BuiltinFnToFnPtr>
|       | `-DeclRefExpr 0x5625ffb28978 <col:10> '<builtin fn type>' Function 0x5625ffb287e8 '__builtin_bswap64' 'unsigned long (unsigned long)'
|       `-ImplicitCastExpr 0x5625ffb28a30 <col:29> '__uint64_t':'unsigned long' <LValueToRValue>
|         `-DeclRefExpr 0x5625ffb28998 <col:29> '__uint64_t':'unsigned long' lvalue ParmVar 0x5625ffb28638 '__bsx' '__uint64_t':'unsigned long'
|-FunctionDecl 0x5625ffb287e8 <col:10> col:10 implicit used __builtin_bswap64 'unsigned long (unsigned long)' extern
| |-ParmVarDecl 0x5625ffb28888 <<invalid sloc>> <invalid sloc> 'unsigned long'
| |-NoThrowAttr 0x5625ffb288f8 <col:10> Implicit
| `-ConstAttr 0x5625ffb28950 <col:10> Implicit
|-TypedefDecl 0x5625ffb28a88 <line:79:1, col:27> col:27 referenced size_t 'unsigned long'
| `-BuiltinType 0x5625ffabefd0 'unsigned long'
|-TypedefDecl 0x5625ffb28b18 <line:81:1, col:18> col:18 referenced time_t '__time_t':'long'
| `-TypedefType 0x5625ffb28ae0 '__time_t' sugar
|   |-Typedef 0x5625ffb26708 '__time_t'
|   `-BuiltinType 0x5625ffabef30 'long'
|-RecordDecl 0x5625ffb28b70 <line:84:1, line:88:3> line:84:8 struct timespec definition
| |-FieldDecl 0x5625ffb28c28 <line:86:5, col:14> col:14 tv_sec '__time_t':'long'
| `-FieldDecl 0x5625ffb28cb8 <line:87:5, col:23> col:23 tv_nsec '__syscall_slong_t':'long'
|-TypedefDecl 0x5625ffb28d48 <line:89:1, col:17> col:17 referenced pid_t '__pid_t':'int'
| `-TypedefType 0x5625ffb28d10 '__pid_t' sugar
|   |-Typedef 0x5625ffb26238 '__pid_t'
|   `-BuiltinType 0x5625ffabef10 'int'
|-RecordDecl 0x5625ffb28da0 <line:90:1, line:93:3> line:90:8 struct sched_param definition
| `-FieldDecl 0x5625ffb28e60 <line:92:5, col:9> col:9 __sched_priority 'int'
|-RecordDecl 0x5625ffb28eb0 <line:96:1, line:99:3> line:96:8 struct __sched_param definition
| `-FieldDecl 0x5625ffb28f70 <line:98:5, col:9> col:9 __sched_priority 'int'
|-TypedefDecl 0x5625ffb28fd8 <line:100:1, col:27> col:27 referenced __cpu_mask 'unsigned long'
| `-BuiltinType 0x5625ffabefd0 'unsigned long'
|-RecordDecl 0x5625ffb29030 <line:101:9, line:104:1> line:101:9 struct definition
| `-FieldDecl 0x5625ffb292c0 <line:103:3, col:53> col:14 __bits '__cpu_mask [64]'
|-TypedefDecl 0x5625ffb2a3a0 <line:101:1, line:104:3> col:3 referenced cpu_set_t 'struct cpu_set_t':'cpu_set_t'
| `-ElaboratedType 0x5625ffb29310 'struct cpu_set_t' sugar
|   `-RecordType 0x5625ffb290b0 'cpu_set_t'
|     `-Record 0x5625ffb29030 ''
|-FunctionDecl 0x5625ffb2a678 <line:106:1, line:107:42> line:106:12 __sched_cpucount 'int (size_t, const cpu_set_t *)' extern
| |-ParmVarDecl 0x5625ffb2a448 <col:30, col:37> col:37 __setsize 'size_t':'unsigned long'
| |-ParmVarDecl 0x5625ffb2a550 <col:48, col:65> col:65 __setp 'const cpu_set_t *'
| `-NoThrowAttr 0x5625ffb2a728 <line:107:19>
|-FunctionDecl 0x5625ffb2a900 <line:108:1, col:92> col:19 __sched_cpualloc 'cpu_set_t *(size_t)' extern
| |-ParmVarDecl 0x5625ffb2a790 <col:37, col:44> col:44 __count 'size_t':'unsigned long'
| `-NoThrowAttr 0x5625ffb2a9a8 <col:69>
|-FunctionDecl 0x5625ffb2ab20 <line:109:1, col:87> col:13 __sched_cpufree 'void (cpu_set_t *)' extern
| |-ParmVarDecl 0x5625ffb2aa10 <col:30, col:41> col:41 __set 'cpu_set_t *'
| `-NoThrowAttr 0x5625ffb2abc8 <col:64>
|-FunctionDecl 0x5625ffb2ae88 <line:112:1, line:113:45> line:112:12 sched_setparam 'int (__pid_t, const struct sched_param *)' extern
| |-ParmVarDecl 0x5625ffb2ac30 <col:28, col:36> col:36 __pid '__pid_t':'int'
| |-ParmVarDecl 0x5625ffb2ad68 <col:43, col:69> col:69 __param 'const struct sched_param *'
| `-NoThrowAttr 0x5625ffb2af38 <line:113:22>
|-FunctionDecl 0x5625ffb2b1b8 <line:114:1, col:111> col:12 sched_getparam 'int (__pid_t, struct sched_param *)' extern
| |-ParmVarDecl 0x5625ffb2afa0 <col:28, col:36> col:36 __pid '__pid_t':'int'
| |-ParmVarDecl 0x5625ffb2b098 <col:43, col:63> col:63 __param 'struct sched_param *'
| `-NoThrowAttr 0x5625ffb2b268 <col:88>
|-FunctionDecl 0x5625ffb2b588 <line:115:1, line:116:85> line:115:12 sched_setscheduler 'int (__pid_t, int, const struct sched_param *)' extern
| |-ParmVarDecl 0x5625ffb2b2d0 <col:32, col:40> col:40 __pid '__pid_t':'int'
| |-ParmVarDecl 0x5625ffb2b3b0 <col:47, col:51> col:51 __policy 'int'
| |-ParmVarDecl 0x5625ffb2b440 <line:116:11, col:37> col:37 __param 'const struct sched_param *'
| `-NoThrowAttr 0x5625ffb2b640 <col:62>
|-FunctionDecl 0x5625ffb2b7b8 <line:117:1, col:86> col:12 sched_getscheduler 'int (__pid_t)' extern
| |-ParmVarDecl 0x5625ffb2b6a8 <col:32, col:40> col:40 __pid '__pid_t':'int'
| `-NoThrowAttr 0x5625ffb2b860 <col:63>
|-FunctionDecl 0x5625ffb2b988 <line:118:1, col:70> col:12 sched_yield 'int (void)' extern
| `-NoThrowAttr 0x5625ffb2ba28 <col:47>
|-FunctionDecl 0x5625ffb2bb30 <line:119:1, col:92> col:12 sched_get_priority_max 'int (int)' extern
| |-ParmVarDecl 0x5625ffb2ba98 <col:36, col:40> col:40 __algorithm 'int'
| `-NoThrowAttr 0x5625ffb2bbd8 <col:69>
|-FunctionDecl 0x5625ffb2bce0 <line:120:1, col:92> col:12 sched_get_priority_min 'int (int)' extern
| |-ParmVarDecl 0x5625ffb2bc48 <col:36, col:40> col:40 __algorithm 'int'
| `-NoThrowAttr 0x5625ffb2bd88 <col:69>
|-FunctionDecl 0x5625ffb2c048 <line:121:1, col:111> col:12 sched_rr_get_interval 'int (__pid_t, struct timespec *)' extern
| |-ParmVarDecl 0x5625ffb2bdf0 <col:35, col:43> col:43 __pid '__pid_t':'int'
| |-ParmVarDecl 0x5625ffb2bf28 <col:50, col:67> col:67 __t 'struct timespec *'
| `-NoThrowAttr 0x5625ffb2c0f8 <col:88>
|-TypedefDecl 0x5625ffb2c188 <line:125:1, col:19> col:19 referenced clock_t '__clock_t':'long'
| `-TypedefType 0x5625ffb2c150 '__clock_t' sugar
|   |-Typedef 0x5625ffb26548 '__clock_t'
|   `-BuiltinType 0x5625ffabef30 'long'
|-TypedefDecl 0x5625ffb2c218 <line:128:1, col:21> col:21 referenced clockid_t '__clockid_t':'int'
| `-TypedefType 0x5625ffb2c1e0 '__clockid_t' sugar
|   |-Typedef 0x5625ffb26938 '__clockid_t'
|   `-BuiltinType 0x5625ffabef10 'int'
|-TypedefDecl 0x5625ffb2c2a8 <line:129:1, col:19> col:19 referenced timer_t '__timer_t':'void *'
| `-TypedefType 0x5625ffb2c270 '__timer_t' sugar
|   |-Typedef 0x5625ffb269a8 '__timer_t'
|   `-PointerType 0x5625ffabf630 'void *'
|     `-BuiltinType 0x5625ffabee70 'void'
|-RecordDecl 0x5625ffb2c300 <line:131:1, line:144:1> line:131:8 struct tm definition
| |-FieldDecl 0x5625ffb2c3d8 <line:133:3, col:7> col:7 tm_sec 'int'
| |-FieldDecl 0x5625ffb2c440 <line:134:3, col:7> col:7 tm_min 'int'
| |-FieldDecl 0x5625ffb2c4a8 <line:135:3, col:7> col:7 tm_hour 'int'
| |-FieldDecl 0x5625ffb2c510 <line:136:3, col:7> col:7 tm_mday 'int'
| |-FieldDecl 0x5625ffb2c578 <line:137:3, col:7> col:7 tm_mon 'int'
| |-FieldDecl 0x5625ffb2c5e0 <line:138:3, col:7> col:7 tm_year 'int'
| |-FieldDecl 0x5625ffb2c648 <line:139:3, col:7> col:7 tm_wday 'int'
| |-FieldDecl 0x5625ffb2c6b0 <line:140:3, col:7> col:7 tm_yday 'int'
| |-FieldDecl 0x5625ffb2c718 <line:141:3, col:7> col:7 tm_isdst 'int'
| |-FieldDecl 0x5625ffb2c780 <line:142:3, col:12> col:12 tm_gmtoff 'long'
| `-FieldDecl 0x5625ffb2c7e8 <line:143:3, col:15> col:15 tm_zone 'const char *'
|-RecordDecl 0x5625ffb2c838 <line:147:1, line:151:3> line:147:8 struct itimerspec definition
| |-FieldDecl 0x5625ffb2c908 <line:149:5, col:21> col:21 it_interval 'struct timespec':'struct timespec'
| `-FieldDecl 0x5625ffb2c978 <line:150:5, col:21> col:21 it_value 'struct timespec':'struct timespec'
|-RecordDecl 0x5625ffb2ca20 <line:152:1, col:8> col:8 struct sigevent
|-FunctionDecl 0x5625ffb2cbf0 <line:154:1, col:68> col:16 clock 'clock_t (void)' extern
| `-NoThrowAttr 0x5625ffb2cc90 <col:45>
|-FunctionDecl 0x5625ffb2ce70 <line:155:1, col:77> col:15 time 'time_t (time_t *)' extern
| |-ParmVarDecl 0x5625ffb2cd60 <col:21, col:29> col:29 __timer 'time_t *'
| `-NoThrowAttr 0x5625ffb2cf18 <col:54>
|-FunctionDecl 0x5625ffb2d118 <line:156:1, line:157:73> line:156:15 difftime 'double (time_t, time_t)' extern
| |-ParmVarDecl 0x5625ffb2cf80 <col:25, col:32> col:32 __time1 'time_t':'long'
| |-ParmVarDecl 0x5625ffb2cff8 <col:41, col:48> col:48 __time0 'time_t':'long'
| |-NoThrowAttr 0x5625ffb2d1c8 <line:157:22>
| `-ConstAttr 0x5625ffb2d220 <col:63>
|-FunctionDecl 0x5625ffb2e050 <line:158:1, col:79> col:15 mktime 'time_t (struct tm *)' extern
| |-ParmVarDecl 0x5625ffb2d318 <col:23, col:34> col:34 __tp 'struct tm *'
| `-NoThrowAttr 0x5625ffb2e0f8 <col:56>
|-FunctionDecl 0x5625ffb2e4a0 <line:159:1, line:161:77> line:159:15 strftime 'size_t (char *restrict, size_t, const char *restrict, const struct tm *restrict)' extern
| |-ParmVarDecl 0x5625ffb2e168 <col:25, col:42> col:42 __s 'char *restrict'
| |-ParmVarDecl 0x5625ffb2e1e0 <col:47, col:54> col:54 __maxsize 'size_t':'unsigned long'
| |-ParmVarDecl 0x5625ffb2e260 <line:160:4, col:27> col:27 __format 'const char *restrict'
| |-ParmVarDecl 0x5625ffb2e358 <line:161:4, col:32> col:32 __tp 'const struct tm *restrict'
| `-NoThrowAttr 0x5625ffb2e560 <col:54>
|-RecordDecl 0x5625ffb2e5b8 <line:163:9, line:170:1> line:163:16 struct __locale_struct definition
| |-RecordDecl 0x5625ffb2e668 parent 0x5625ffabee18 <line:165:3, col:10> col:10 struct __locale_data
| |-FieldDecl 0x5625ffb2e8c8 <col:3, col:37> col:25 __locales 'struct __locale_data *[13]'
| |-FieldDecl 0x5625ffb2e968 <line:166:3, col:29> col:29 __ctype_b 'const unsigned short *'
| |-FieldDecl 0x5625ffb2e9d0 <line:167:3, col:14> col:14 __ctype_tolower 'const int *'
| |-FieldDecl 0x5625ffb2ea38 <line:168:3, col:14> col:14 __ctype_toupper 'const int *'
| `-FieldDecl 0x5625ffb2eb28 <line:169:3, col:25> col:15 __names 'const char *[13]'
|-TypedefDecl 0x5625ffb2ec48 <line:163:1, line:170:4> col:4 referenced __locale_t 'struct __locale_struct *'
| `-PointerType 0x5625ffb2ebf0 'struct __locale_struct *'
|   `-ElaboratedType 0x5625ffb2eb80 'struct __locale_struct' sugar
|     `-RecordType 0x5625ffb2e640 'struct __locale_struct'
|       `-Record 0x5625ffb2e5b8 '__locale_struct'
|-TypedefDecl 0x5625ffb2ecf8 <line:171:1, col:20> col:20 locale_t '__locale_t':'struct __locale_struct *'
| `-TypedefType 0x5625ffb2ecc0 '__locale_t' sugar
|   |-Typedef 0x5625ffb2ec48 '__locale_t'
|   `-PointerType 0x5625ffb2ebf0 'struct __locale_struct *'
|     `-ElaboratedType 0x5625ffb2eb80 'struct __locale_struct' sugar
|       `-RecordType 0x5625ffb2e640 'struct __locale_struct'
|         `-Record 0x5625ffb2e5b8 '__locale_struct'
|-FunctionDecl 0x5625ffb30110 <line:172:1, line:175:63> line:172:15 strftime_l 'size_t (char *restrict, size_t, const char *restrict, const struct tm *restrict, __locale_t)' extern
| |-ParmVarDecl 0x5625ffb2ed68 <col:27, col:44> col:44 __s 'char *restrict'
| |-ParmVarDecl 0x5625ffb2ede0 <col:49, col:56> col:56 __maxsize 'size_t':'unsigned long'
| |-ParmVarDecl 0x5625ffb2ee60 <line:173:6, col:29> col:29 __format 'const char *restrict'
| |-ParmVarDecl 0x5625ffb2eef0 <line:174:6, col:34> col:34 __tp 'const struct tm *restrict'
| |-ParmVarDecl 0x5625ffb2ef68 <line:175:6, col:17> col:17 __loc '__locale_t':'struct __locale_struct *'
| `-NoThrowAttr 0x5625ffb301d8 <col:40>
|-FunctionDecl 0x5625ffb303c8 <line:177:1, col:89> col:19 gmtime 'struct tm *(const time_t *)' extern
| |-ParmVarDecl 0x5625ffb302a0 <col:27, col:41> col:41 __timer 'const time_t *'
| `-NoThrowAttr 0x5625ffb30470 <col:66>
|-FunctionDecl 0x5625ffb30580 <line:178:1, col:92> col:19 localtime 'struct tm *(const time_t *)' extern
| |-ParmVarDecl 0x5625ffb304d8 <col:30, col:44> col:44 __timer 'const time_t *'
| `-NoThrowAttr 0x5625ffb30628 <col:69>
|-FunctionDecl 0x5625ffb30858 <line:180:1, line:181:75> line:180:19 gmtime_r 'struct tm *(const time_t *restrict, struct tm *restrict)' extern
| |-ParmVarDecl 0x5625ffb30690 <col:29, col:54> col:54 __timer 'const time_t *restrict'
| |-ParmVarDecl 0x5625ffb30720 <line:181:8, col:30> col:30 __tp 'struct tm *restrict'
| `-NoThrowAttr 0x5625ffb30908 <col:52>
|-FunctionDecl 0x5625ffb30ab0 <line:182:1, line:183:78> line:182:19 localtime_r 'struct tm *(const time_t *restrict, struct tm *restrict)' extern
| |-ParmVarDecl 0x5625ffb30970 <col:32, col:57> col:57 __timer 'const time_t *restrict'
| |-ParmVarDecl 0x5625ffb30a00 <line:183:11, col:33> col:33 __tp 'struct tm *restrict'
| `-NoThrowAttr 0x5625ffb30b60 <col:55>
|-FunctionDecl 0x5625ffb30cf8 <line:185:1, col:85> col:14 asctime 'char *(const struct tm *)' extern
| |-ParmVarDecl 0x5625ffb30be0 <col:23, col:40> col:40 __tp 'const struct tm *'
| `-NoThrowAttr 0x5625ffb30da0 <col:62>
|-FunctionDecl 0x5625ffb30f18 <line:186:1, col:83> col:14 ctime 'char *(const time_t *)' extern
| |-ParmVarDecl 0x5625ffb30e08 <col:21, col:35> col:35 __timer 'const time_t *'
| `-NoThrowAttr 0x5625ffb30fc0 <col:60>
|-FunctionDecl 0x5625ffb312b8 <line:188:1, line:189:67> line:188:14 asctime_r 'char *(const struct tm *restrict, char *restrict)' extern
| |-ParmVarDecl 0x5625ffb31118 <col:25, col:53> col:53 __tp 'const struct tm *restrict'
| |-ParmVarDecl 0x5625ffb31198 <line:189:4, col:21> col:21 __buf 'char *restrict'
| `-NoThrowAttr 0x5625ffb31368 <col:44>
|-FunctionDecl 0x5625ffb31578 <line:190:1, line:191:72> line:190:14 ctime_r 'char *(const time_t *restrict, char *restrict)' extern
| |-ParmVarDecl 0x5625ffb313d0 <col:23, col:48> col:48 __timer 'const time_t *restrict'
| |-ParmVarDecl 0x5625ffb31450 <line:191:9, col:26> col:26 __buf 'char *restrict'
| `-NoThrowAttr 0x5625ffb31628 <col:49>
|-VarDecl 0x5625ffb31728 <line:192:1, col:24> col:14 __tzname 'char *[2]' extern
|-VarDecl 0x5625ffb317a8 <line:193:1, col:12> col:12 __daylight 'int' extern
|-VarDecl 0x5625ffb31828 <line:194:1, col:17> col:17 __timezone 'long' extern
|-VarDecl 0x5625ffb318f0 <line:195:1, col:22> col:14 tzname 'char *[2]' extern
|-FunctionDecl 0x5625ffb31a20 <line:196:1, col:65> col:13 tzset 'void (void)' extern
| `-NoThrowAttr 0x5625ffb31ac0 <col:42>
|-VarDecl 0x5625ffb31b30 <line:197:1, col:12> col:12 daylight 'int' extern
|-VarDecl 0x5625ffb31bb0 <line:198:1, col:17> col:17 timezone 'long' extern
|-FunctionDecl 0x5625ffb31d38 <line:199:1, col:80> col:12 stime 'int (const time_t *)' extern
| |-ParmVarDecl 0x5625ffb31c28 <col:19, col:33> col:33 __when 'const time_t *'
| `-NoThrowAttr 0x5625ffb31de0 <col:57>
|-FunctionDecl 0x5625ffb31ef0 <line:200:1, col:79> col:15 timegm 'time_t (struct tm *)' extern
| |-ParmVarDecl 0x5625ffb31e60 <col:23, col:34> col:34 __tp 'struct tm *'
| `-NoThrowAttr 0x5625ffb31f98 <col:56>
|-FunctionDecl 0x5625ffb320d0 <line:201:1, col:82> col:15 timelocal 'time_t (struct tm *)' extern
| |-ParmVarDecl 0x5625ffb32018 <col:26, col:37> col:37 __tp 'struct tm *'
| `-NoThrowAttr 0x5625ffb32178 <col:59>
|-FunctionDecl 0x5625ffb32280 <line:202:1, col:99> col:12 dysize 'int (int)' extern
| |-ParmVarDecl 0x5625ffb321e8 <col:20, col:24> col:24 __year 'int'
| |-NoThrowAttr 0x5625ffb32328 <col:48>
| `-ConstAttr 0x5625ffb32380 <col:89>
|-FunctionDecl 0x5625ffb325e8 <line:203:1, line:204:37> line:203:12 nanosleep 'int (const struct timespec *, struct timespec *)' extern
| |-ParmVarDecl 0x5625ffb32438 <col:23, col:46> col:46 __requested_time 'const struct timespec *'
| `-ParmVarDecl 0x5625ffb324c8 <line:204:9, col:26> col:26 __remaining 'struct timespec *'
|-FunctionDecl 0x5625ffb32848 <line:205:1, col:111> col:12 clock_getres 'int (clockid_t, struct timespec *)' extern
| |-ParmVarDecl 0x5625ffb326d8 <col:26, col:36> col:36 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x5625ffb32768 <col:48, col:65> col:65 __res 'struct timespec *'
| `-NoThrowAttr 0x5625ffb328f8 <col:88>
|-FunctionDecl 0x5625ffb32a90 <line:206:1, col:111> col:12 clock_gettime 'int (clockid_t, struct timespec *)' extern
| |-ParmVarDecl 0x5625ffb32960 <col:27, col:37> col:37 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x5625ffb329f0 <col:49, col:66> col:66 __tp 'struct timespec *'
| `-NoThrowAttr 0x5625ffb32b40 <col:88>
|-FunctionDecl 0x5625ffb32d58 <line:207:1, line:208:45> line:207:12 clock_settime 'int (clockid_t, const struct timespec *)' extern
| |-ParmVarDecl 0x5625ffb32ba8 <col:27, col:37> col:37 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x5625ffb32c38 <col:49, col:72> col:72 __tp 'const struct timespec *'
| `-NoThrowAttr 0x5625ffb32e08 <line:208:22>
|-FunctionDecl 0x5625ffb33178 <line:209:1, line:211:30> line:209:12 clock_nanosleep 'int (clockid_t, int, const struct timespec *, struct timespec *)' extern
| |-ParmVarDecl 0x5625ffb32e70 <col:29, col:39> col:39 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x5625ffb32ef0 <col:51, col:55> col:55 __flags 'int'
| |-ParmVarDecl 0x5625ffb32f80 <line:210:8, col:31> col:31 __req 'const struct timespec *'
| `-ParmVarDecl 0x5625ffb33010 <line:211:8, col:25> col:25 __rem 'struct timespec *'
|-FunctionDecl 0x5625ffb33478 <line:212:1, col:108> col:12 clock_getcpuclockid 'int (pid_t, clockid_t *)' extern
| |-ParmVarDecl 0x5625ffb33278 <col:33, col:39> col:39 __pid 'pid_t':'int'
| |-ParmVarDecl 0x5625ffb33350 <col:46, col:57> col:57 __clock_id 'clockid_t *'
| `-NoThrowAttr 0x5625ffb33528 <col:85>
|-FunctionDecl 0x5625ffb33918 <line:213:1, line:215:75> line:213:12 timer_create 'int (clockid_t, struct sigevent *restrict, timer_t *restrict)' extern
| |-ParmVarDecl 0x5625ffb33590 <col:26, col:36> col:36 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x5625ffb336c8 <line:214:5, col:33> col:33 __evp 'struct sigevent *restrict'
| |-ParmVarDecl 0x5625ffb337d0 <line:215:5, col:25> col:25 __timerid 'timer_t *restrict'
| `-NoThrowAttr 0x5625ffb339d0 <col:52>
|-FunctionDecl 0x5625ffb33b48 <line:216:1, col:84> col:12 timer_delete 'int (timer_t)' extern
| |-ParmVarDecl 0x5625ffb33a38 <col:26, col:34> col:34 __timerid 'timer_t':'void *'
| `-NoThrowAttr 0x5625ffb33bf0 <col:61>
|-FunctionDecl 0x5625ffb340f0 <line:217:1, line:219:85> line:217:12 timer_settime 'int (timer_t, int, const struct itimerspec *restrict, struct itimerspec *restrict)' extern
| |-ParmVarDecl 0x5625ffb33c58 <col:27, col:35> col:35 __timerid 'timer_t':'void *'
| |-ParmVarDecl 0x5625ffb33cd8 <col:46, col:50> col:50 __flags 'int'
| |-ParmVarDecl 0x5625ffb33e08 <line:218:6, col:42> col:42 __value 'const struct itimerspec *restrict'
| |-ParmVarDecl 0x5625ffb33ef8 <line:219:6, col:36> col:36 __ovalue 'struct itimerspec *restrict'
| `-NoThrowAttr 0x5625ffb341b0 <col:62>
|-FunctionDecl 0x5625ffb343c8 <line:220:1, line:221:45> line:220:12 timer_gettime 'int (timer_t, struct itimerspec *)' extern
| |-ParmVarDecl 0x5625ffb34218 <col:27, col:35> col:35 __timerid 'timer_t':'void *'
| |-ParmVarDecl 0x5625ffb342a8 <col:46, col:65> col:65 __value 'struct itimerspec *'
| `-NoThrowAttr 0x5625ffb34478 <line:221:22>
|-FunctionDecl 0x5625ffb34578 <line:222:1, col:88> col:12 timer_getoverrun 'int (timer_t)' extern
| |-ParmVarDecl 0x5625ffb344e0 <col:30, col:38> col:38 __timerid 'timer_t':'void *'
| `-NoThrowAttr 0x5625ffb34620 <col:65>
|-TypedefDecl 0x5625ffb34690 <line:224:1, col:27> col:27 referenced pthread_t 'unsigned long'
| `-BuiltinType 0x5625ffabefd0 'unsigned long'
|-RecordDecl 0x5625ffb346e8 <line:225:1, line:229:1> line:225:7 union pthread_attr_t definition
| |-FieldDecl 0x5625ffb34830 <line:227:3, col:17> col:8 __size 'char [56]'
| `-FieldDecl 0x5625ffb34898 <line:228:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x5625ffb34948 <line:230:1, col:30> col:30 referenced pthread_attr_t 'union pthread_attr_t':'union pthread_attr_t'
| `-ElaboratedType 0x5625ffb348f0 'union pthread_attr_t' sugar
|   `-RecordType 0x5625ffb34770 'union pthread_attr_t'
|     `-Record 0x5625ffb346e8 'pthread_attr_t'
|-RecordDecl 0x5625ffb349a0 <line:231:9, line:235:1> line:231:16 struct __pthread_internal_list definition
| |-FieldDecl 0x5625ffb34b18 <line:233:3, col:35> col:35 __prev 'struct __pthread_internal_list *'
| `-FieldDecl 0x5625ffb34b90 <line:234:3, col:35> col:35 __next 'struct __pthread_internal_list *'
|-TypedefDecl 0x5625ffb34c40 <line:231:1, line:235:3> col:3 referenced __pthread_list_t 'struct __pthread_internal_list':'struct __pthread_internal_list'
| `-ElaboratedType 0x5625ffb34be0 'struct __pthread_internal_list' sugar
|   `-RecordType 0x5625ffb34a20 'struct __pthread_internal_list'
|     `-Record 0x5625ffb349a0 '__pthread_internal_list'
|-RecordDecl 0x5625ffb34cb0 <line:236:9, line:250:1> line:236:9 union definition
| |-RecordDecl 0x5625ffb34d58 parent 0x5625ffabee18 <line:238:3, line:247:3> line:238:10 struct __pthread_mutex_s definition
| | |-FieldDecl 0x5625ffb34e30 <line:240:5, col:9> col:9 __lock 'int'
| | |-FieldDecl 0x5625ffb34e98 <line:241:5, col:18> col:18 __count 'unsigned int'
| | |-FieldDecl 0x5625ffb34f00 <line:242:5, col:9> col:9 __owner 'int'
| | |-FieldDecl 0x5625ffb34f68 <line:243:5, col:18> col:18 __nusers 'unsigned int'
| | |-FieldDecl 0x5625ffb34fd0 <line:244:5, col:9> col:9 __kind 'int'
| | |-FieldDecl 0x5625ffb35038 <line:245:5, col:9> col:9 __spins 'int'
| | `-FieldDecl 0x5625ffb39110 <line:246:5, col:22> col:22 __list '__pthread_list_t':'struct __pthread_internal_list'
| |-FieldDecl 0x5625ffb391c0 <line:238:3, line:247:5> col:5 __data 'struct __pthread_mutex_s':'struct __pthread_mutex_s'
| |-FieldDecl 0x5625ffb392b0 <line:248:3, col:17> col:8 __size 'char [40]'
| `-FieldDecl 0x5625ffb39318 <line:249:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x5625ffb394a0 <line:236:1, line:250:3> col:3 referenced pthread_mutex_t 'union pthread_mutex_t':'pthread_mutex_t'
| `-ElaboratedType 0x5625ffb39440 'union pthread_mutex_t' sugar
|   `-RecordType 0x5625ffb34d30 'pthread_mutex_t'
|     `-Record 0x5625ffb34cb0 ''
|-RecordDecl 0x5625ffb39510 <line:251:9, line:255:1> line:251:9 union definition
| |-FieldDecl 0x5625ffb39650 <line:253:3, col:16> col:8 __size 'char [4]'
| `-FieldDecl 0x5625ffb396b8 <line:254:3, col:7> col:7 __align 'int'
|-TypedefDecl 0x5625ffb39770 <line:251:1, line:255:3> col:3 referenced pthread_mutexattr_t 'union pthread_mutexattr_t':'pthread_mutexattr_t'
| `-ElaboratedType 0x5625ffb39710 'union pthread_mutexattr_t' sugar
|   `-RecordType 0x5625ffb39590 'pthread_mutexattr_t'
|     `-Record 0x5625ffb39510 ''
|-RecordDecl 0x5625ffb397e0 <line:256:9, line:271:1> line:256:9 union definition
| |-RecordDecl 0x5625ffb39888 <line:258:3, line:268:3> line:258:3 struct definition
| | |-FieldDecl 0x5625ffb39950 <line:260:5, col:9> col:9 __lock 'int'
| | |-FieldDecl 0x5625ffb399b8 <line:261:5, col:18> col:18 __futex 'unsigned int'
| | |-FieldDecl 0x5625ffb39a20 <line:262:19, col:42> col:42 __total_seq 'unsigned long long'
| | |-FieldDecl 0x5625ffb39a88 <line:263:19, col:42> col:42 __wakeup_seq 'unsigned long long'
| | |-FieldDecl 0x5625ffb39af0 <line:264:19, col:42> col:42 __woken_seq 'unsigned long long'
| | |-FieldDecl 0x5625ffb39b58 <line:265:5, col:11> col:11 __mutex 'void *'
| | |-FieldDecl 0x5625ffb39bc0 <line:266:5, col:18> col:18 __nwaiters 'unsigned int'
| | `-FieldDecl 0x5625ffb39c28 <line:267:5, col:18> col:18 __broadcast_seq 'unsigned int'
| |-FieldDecl 0x5625ffb39ce0 <line:258:3, line:268:5> col:5 __data 'struct (anonymous struct at ./split_6/safe009_power.opt_false-unreach-call.i:258:3)':'struct pthread_cond_t::(anonymous at ./split_6/safe009_power.opt_false-unreach-call.i:258:3)'
| |-FieldDecl 0x5625ffb39dd0 <line:269:3, col:17> col:8 __size 'char [48]'
| `-FieldDecl 0x5625ffb39e38 <line:270:17, col:31> col:31 __align 'long long'
|-TypedefDecl 0x5625ffb39f70 <line:256:1, line:271:3> col:3 referenced pthread_cond_t 'union pthread_cond_t':'pthread_cond_t'
| `-ElaboratedType 0x5625ffb39f10 'union pthread_cond_t' sugar
|   `-RecordType 0x5625ffb39860 'pthread_cond_t'
|     `-Record 0x5625ffb397e0 ''
|-RecordDecl 0x5625ffb39fe0 <line:272:9, line:276:1> line:272:9 union definition
| |-FieldDecl 0x5625ffb3b130 <line:274:3, col:16> col:8 __size 'char [4]'
| `-FieldDecl 0x5625ffb3b198 <line:275:3, col:7> col:7 __align 'int'
|-TypedefDecl 0x5625ffb3b250 <line:272:1, line:276:3> col:3 referenced pthread_condattr_t 'union pthread_condattr_t':'pthread_condattr_t'
| `-ElaboratedType 0x5625ffb3b1f0 'union pthread_condattr_t' sugar
|   `-RecordType 0x5625ffb3a060 'pthread_condattr_t'
|     `-Record 0x5625ffb39fe0 ''
|-TypedefDecl 0x5625ffb3b2d8 <line:277:1, col:22> col:22 referenced pthread_key_t 'unsigned int'
| `-BuiltinType 0x5625ffabefb0 'unsigned int'
|-TypedefDecl 0x5625ffb3b348 <line:278:1, col:13> col:13 referenced pthread_once_t 'int'
| `-BuiltinType 0x5625ffabef10 'int'
|-RecordDecl 0x5625ffb3b3a0 <line:279:9, line:297:1> line:279:9 union definition
| |-RecordDecl 0x5625ffb3b448 <line:281:3, line:294:3> line:281:3 struct definition
| | |-FieldDecl 0x5625ffb3b510 <line:283:5, col:9> col:9 __lock 'int'
| | |-FieldDecl 0x5625ffb3b578 <line:284:5, col:18> col:18 __nr_readers 'unsigned int'
| | |-FieldDecl 0x5625ffb3b5e0 <line:285:5, col:18> col:18 __readers_wakeup 'unsigned int'
| | |-FieldDecl 0x5625ffb3b648 <line:286:5, col:18> col:18 __writer_wakeup 'unsigned int'
| | |-FieldDecl 0x5625ffb3b6b0 <line:287:5, col:18> col:18 __nr_readers_queued 'unsigned int'
| | |-FieldDecl 0x5625ffb3b718 <line:288:5, col:18> col:18 __nr_writers_queued 'unsigned int'
| | |-FieldDecl 0x5625ffb3b780 <line:289:5, col:9> col:9 __writer 'int'
| | |-FieldDecl 0x5625ffb3b7e8 <line:290:5, col:9> col:9 __shared 'int'
| | |-FieldDecl 0x5625ffb3b850 <line:291:5, col:23> col:23 __pad1 'unsigned long'
| | |-FieldDecl 0x5625ffb3b8b8 <line:292:5, col:23> col:23 __pad2 'unsigned long'
| | `-FieldDecl 0x5625ffb3b920 <line:293:5, col:18> col:18 __flags 'unsigned int'
| |-FieldDecl 0x5625ffb3b9d0 <line:281:3, line:294:5> col:5 __data 'struct (anonymous struct at ./split_6/safe009_power.opt_false-unreach-call.i:281:3)':'struct pthread_rwlock_t::(anonymous at ./split_6/safe009_power.opt_false-unreach-call.i:281:3)'
| |-FieldDecl 0x5625ffb3ba78 <line:295:3, col:17> col:8 __size 'char [56]'
| `-FieldDecl 0x5625ffb3bae0 <line:296:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x5625ffb3bc30 <line:279:1, line:297:3> col:3 referenced pthread_rwlock_t 'union pthread_rwlock_t':'pthread_rwlock_t'
| `-ElaboratedType 0x5625ffb3bbd0 'union pthread_rwlock_t' sugar
|   `-RecordType 0x5625ffb3b420 'pthread_rwlock_t'
|     `-Record 0x5625ffb3b3a0 ''
|-RecordDecl 0x5625ffb3bca0 <line:298:9, line:302:1> line:298:9 union definition
| |-FieldDecl 0x5625ffb3bde0 <line:300:3, col:16> col:8 __size 'char [8]'
| `-FieldDecl 0x5625ffb3be48 <line:301:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x5625ffb3bf00 <line:298:1, line:302:3> col:3 referenced pthread_rwlockattr_t 'union pthread_rwlockattr_t':'pthread_rwlockattr_t'
| `-ElaboratedType 0x5625ffb3bea0 'union pthread_rwlockattr_t' sugar
|   `-RecordType 0x5625ffb3bd20 'pthread_rwlockattr_t'
|     `-Record 0x5625ffb3bca0 ''
|-TypedefDecl 0x5625ffb3bf88 <line:303:1, col:22> col:22 referenced pthread_spinlock_t 'volatile int'
| `-QualType 0x5625ffabef14 'volatile int' volatile
|   `-BuiltinType 0x5625ffabef10 'int'
|-RecordDecl 0x5625ffb3bfe0 <line:304:9, line:308:1> line:304:9 union definition
| |-FieldDecl 0x5625ffb3d140 <line:306:3, col:17> col:8 __size 'char [32]'
| `-FieldDecl 0x5625ffb3d1a8 <line:307:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x5625ffb3d260 <line:304:1, line:308:3> col:3 referenced pthread_barrier_t 'union pthread_barrier_t':'pthread_barrier_t'
| `-ElaboratedType 0x5625ffb3d200 'union pthread_barrier_t' sugar
|   `-RecordType 0x5625ffb3c060 'pthread_barrier_t'
|     `-Record 0x5625ffb3bfe0 ''
|-RecordDecl 0x5625ffb3d2d0 <line:309:9, line:313:1> line:309:9 union definition
| |-FieldDecl 0x5625ffb3d3d0 <line:311:3, col:16> col:8 __size 'char [4]'
| `-FieldDecl 0x5625ffb3d438 <line:312:3, col:7> col:7 __align 'int'
|-TypedefDecl 0x5625ffb3d4f0 <line:309:1, line:313:3> col:3 referenced pthread_barrierattr_t 'union pthread_barrierattr_t':'pthread_barrierattr_t'
| `-ElaboratedType 0x5625ffb3d490 'union pthread_barrierattr_t' sugar
|   `-RecordType 0x5625ffb3d350 'pthread_barrierattr_t'
|     `-Record 0x5625ffb3d2d0 ''
|-TypedefDecl 0x5625ffb3d608 <line:314:1, col:29> col:18 referenced __jmp_buf 'long [8]'
| `-ConstantArrayType 0x5625ffb3d5a0 'long [8]' 8 
|   `-BuiltinType 0x5625ffabef30 'long'
|-EnumDecl 0x5625ffb3d660 <line:315:1, line:319:1> line:315:1
| |-EnumConstantDecl 0x5625ffb3d728 <line:317:3> col:3 PTHREAD_CREATE_JOINABLE 'int'
| `-EnumConstantDecl 0x5625ffb3d778 <line:318:3> col:3 PTHREAD_CREATE_DETACHED 'int'
|-EnumDecl 0x5625ffb3d7c8 <line:320:1, line:331:1> line:320:1
| |-EnumConstantDecl 0x5625ffb3d898 <line:322:3> col:3 referenced PTHREAD_MUTEX_TIMED_NP 'int'
| |-EnumConstantDecl 0x5625ffb3d8e8 <line:323:3> col:3 referenced PTHREAD_MUTEX_RECURSIVE_NP 'int'
| |-EnumConstantDecl 0x5625ffb3d938 <line:324:3> col:3 referenced PTHREAD_MUTEX_ERRORCHECK_NP 'int'
| |-EnumConstantDecl 0x5625ffb3d988 <line:325:3> col:3 PTHREAD_MUTEX_ADAPTIVE_NP 'int'
| |-EnumConstantDecl 0x5625ffb3da10 <line:327:3, col:26> col:3 referenced PTHREAD_MUTEX_NORMAL 'int'
| | `-ConstantExpr 0x5625ffb3d9f8 <col:26> 'int'
| |   `-DeclRefExpr 0x5625ffb3d9d8 <col:26> 'int' EnumConstant 0x5625ffb3d898 'PTHREAD_MUTEX_TIMED_NP' 'int'
| |-EnumConstantDecl 0x5625ffb3da98 <line:328:3, col:29> col:3 PTHREAD_MUTEX_RECURSIVE 'int'
| | `-ConstantExpr 0x5625ffb3da80 <col:29> 'int'
| |   `-DeclRefExpr 0x5625ffb3da60 <col:29> 'int' EnumConstant 0x5625ffb3d8e8 'PTHREAD_MUTEX_RECURSIVE_NP' 'int'
| |-EnumConstantDecl 0x5625ffb3db20 <line:329:3, col:30> col:3 PTHREAD_MUTEX_ERRORCHECK 'int'
| | `-ConstantExpr 0x5625ffb3db08 <col:30> 'int'
| |   `-DeclRefExpr 0x5625ffb3dae8 <col:30> 'int' EnumConstant 0x5625ffb3d938 'PTHREAD_MUTEX_ERRORCHECK_NP' 'int'
| `-EnumConstantDecl 0x5625ffb3dba8 <line:330:3, col:27> col:3 PTHREAD_MUTEX_DEFAULT 'int'
|   `-ConstantExpr 0x5625ffb3db90 <col:27> 'int'
|     `-DeclRefExpr 0x5625ffb3db70 <col:27> 'int' EnumConstant 0x5625ffb3da10 'PTHREAD_MUTEX_NORMAL' 'int'
|-EnumDecl 0x5625ffb3dbf8 <line:332:1, line:338:1> line:332:1
| |-EnumConstantDecl 0x5625ffb3dcc8 <line:334:3> col:3 referenced PTHREAD_MUTEX_STALLED 'int'
| |-EnumConstantDecl 0x5625ffb3dd50 <line:335:3, col:30> col:3 PTHREAD_MUTEX_STALLED_NP 'int'
| | `-ConstantExpr 0x5625ffb3dd38 <col:30> 'int'
| |   `-DeclRefExpr 0x5625ffb3dd18 <col:30> 'int' EnumConstant 0x5625ffb3dcc8 'PTHREAD_MUTEX_STALLED' 'int'
| |-EnumConstantDecl 0x5625ffb3dda0 <line:336:3> col:3 referenced PTHREAD_MUTEX_ROBUST 'int'
| `-EnumConstantDecl 0x5625ffb3de28 <line:337:3, col:29> col:3 PTHREAD_MUTEX_ROBUST_NP 'int'
|   `-ConstantExpr 0x5625ffb3de10 <col:29> 'int'
|     `-DeclRefExpr 0x5625ffb3ddf0 <col:29> 'int' EnumConstant 0x5625ffb3dda0 'PTHREAD_MUTEX_ROBUST' 'int'
|-EnumDecl 0x5625ffb3de78 <line:339:1, line:344:1> line:339:1
| |-EnumConstantDecl 0x5625ffb3df48 <line:341:3> col:3 PTHREAD_PRIO_NONE 'int'
| |-EnumConstantDecl 0x5625ffb3df98 <line:342:3> col:3 PTHREAD_PRIO_INHERIT 'int'
| `-EnumConstantDecl 0x5625ffb3dfe8 <line:343:3> col:3 PTHREAD_PRIO_PROTECT 'int'
|-EnumDecl 0x5625ffb3e038 <line:345:1, line:351:1> line:345:1
| |-EnumConstantDecl 0x5625ffb3e150 <line:347:3> col:3 referenced PTHREAD_RWLOCK_PREFER_READER_NP 'int'
| |-EnumConstantDecl 0x5625ffb3e1a0 <line:348:3> col:3 PTHREAD_RWLOCK_PREFER_WRITER_NP 'int'
| |-EnumConstantDecl 0x5625ffb3e1f0 <line:349:3> col:3 PTHREAD_RWLOCK_PREFER_WRITER_NONRECURSIVE_NP 'int'
| `-EnumConstantDecl 0x5625ffb3e278 <line:350:3, col:31> col:3 PTHREAD_RWLOCK_DEFAULT_NP 'int'
|   `-ConstantExpr 0x5625ffb3e260 <col:31> 'int'
|     `-DeclRefExpr 0x5625ffb3e240 <col:31> 'int' EnumConstant 0x5625ffb3e150 'PTHREAD_RWLOCK_PREFER_READER_NP' 'int'
|-EnumDecl 0x5625ffb3e2c8 <line:352:1, line:356:1> line:352:1
| |-EnumConstantDecl 0x5625ffb3e398 <line:354:3> col:3 PTHREAD_INHERIT_SCHED 'int'
| `-EnumConstantDecl 0x5625ffb3e3e8 <line:355:3> col:3 PTHREAD_EXPLICIT_SCHED 'int'
|-EnumDecl 0x5625ffb3e438 <line:357:1, line:361:1> line:357:1
| |-EnumConstantDecl 0x5625ffb3e508 <line:359:3> col:3 PTHREAD_SCOPE_SYSTEM 'int'
| `-EnumConstantDecl 0x5625ffb3e558 <line:360:3> col:3 PTHREAD_SCOPE_PROCESS 'int'
|-EnumDecl 0x5625ffb3e5a8 <line:362:1, line:366:1> line:362:1
| |-EnumConstantDecl 0x5625ffb3e678 <line:364:3> col:3 PTHREAD_PROCESS_PRIVATE 'int'
| `-EnumConstantDecl 0x5625ffb3e6c8 <line:365:3> col:3 PTHREAD_PROCESS_SHARED 'int'
|-RecordDecl 0x5625ffb3e718 <line:367:1, line:373:1> line:367:8 struct _pthread_cleanup_buffer definition
| |-FieldDecl 0x5625ffb3e958 <line:369:3, col:28> col:10 __routine 'void (*)(void *)'
| |-FieldDecl 0x5625ffb3e9c0 <line:370:3, col:9> col:9 __arg 'void *'
| |-FieldDecl 0x5625ffb3ea28 <line:371:3, col:7> col:7 __canceltype 'int'
| `-FieldDecl 0x5625ffb3eb48 <line:372:3, col:35> col:35 __prev 'struct _pthread_cleanup_buffer *'
|-EnumDecl 0x5625ffb3eb98 <line:374:1, line:378:1> line:374:1
| |-EnumConstantDecl 0x5625ffb3ec68 <line:376:3> col:3 PTHREAD_CANCEL_ENABLE 'int'
| `-EnumConstantDecl 0x5625ffb3ecb8 <line:377:3> col:3 PTHREAD_CANCEL_DISABLE 'int'
|-EnumDecl 0x5625ffb3ed08 <line:379:1, line:383:1> line:379:1
| |-EnumConstantDecl 0x5625ffb3edd8 <line:381:3> col:3 PTHREAD_CANCEL_DEFERRED 'int'
| `-EnumConstantDecl 0x5625ffb3ee28 <line:382:3> col:3 PTHREAD_CANCEL_ASYNCHRONOUS 'int'
|-FunctionDecl 0x5625ffb3f488 <line:385:1, line:388:96> line:385:12 used pthread_create 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' extern
| |-ParmVarDecl 0x5625ffb3ef20 <col:28, col:50> col:50 __newthread 'pthread_t *restrict'
| |-ParmVarDecl 0x5625ffb3f030 <line:386:7, col:40> col:40 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x5625ffb3f270 <line:387:7, col:39> col:15 __start_routine 'void *(*)(void *)'
| |-ParmVarDecl 0x5625ffb3f2f0 <line:388:7, col:24> col:24 __arg 'void *restrict'
| |-NoThrowAttr 0x5625ffb3f548 <col:47>
| |-NonNullAttr 0x5625ffb3f5a0 <col:77, col:94> 1 3
| `-CallbackAttr 0x5625ffb3f5d8 <line:385:12> Implicit 2 3
|-FunctionDecl 0x5625ffb3f700 <line:389:1, col:72> col:13 pthread_exit 'void (void *) __attribute__((noreturn))' extern
| `-ParmVarDecl 0x5625ffb3f630 <col:27, col:33> col:33 __retval 'void *'
|-FunctionDecl 0x5625ffb3f958 <line:390:1, col:64> col:12 pthread_join 'int (pthread_t, void **)' extern
| |-ParmVarDecl 0x5625ffb3f7b8 <col:26, col:36> col:36 __th 'pthread_t':'unsigned long'
| `-ParmVarDecl 0x5625ffb3f838 <col:42, col:49> col:49 __thread_return 'void **'
|-FunctionDecl 0x5625ffb3fb28 <line:391:1, col:83> col:12 pthread_detach 'int (pthread_t)' extern
| |-ParmVarDecl 0x5625ffb3fa18 <col:28, col:38> col:38 __th 'pthread_t':'unsigned long'
| `-NoThrowAttr 0x5625ffb3fbd0 <col:60>
|-FunctionDecl 0x5625ffb3fd20 <line:392:1, col:105> col:18 pthread_self 'pthread_t (void)' extern
| |-NoThrowAttr 0x5625ffb3fdc0 <col:54>
| `-ConstAttr 0x5625ffb3fe18 <col:95>
|-FunctionDecl 0x5625ffb3ffe8 <line:393:1, line:394:70> line:393:12 pthread_equal 'int (pthread_t, pthread_t)' extern
| |-ParmVarDecl 0x5625ffb3fe50 <col:27, col:37> col:37 __thread1 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x5625ffb3fec8 <col:48, col:58> col:58 __thread2 'pthread_t':'unsigned long'
| |-NoThrowAttr 0x5625ffb40098 <line:394:19>
| `-ConstAttr 0x5625ffb400f0 <col:60>
|-FunctionDecl 0x5625ffb41b08 <line:395:1, col:128> col:12 pthread_attr_init 'int (pthread_attr_t *)' extern
| |-ParmVarDecl 0x5625ffb419d0 <col:31, col:47> col:47 __attr 'pthread_attr_t *'
| |-NoThrowAttr 0x5625ffb41bb0 <col:71>
| `-NonNullAttr 0x5625ffb41c08 <col:112, col:126> 1
|-FunctionDecl 0x5625ffb41d10 <line:396:1, line:397:79> line:396:12 pthread_attr_destroy 'int (pthread_attr_t *)' extern
| |-ParmVarDecl 0x5625ffb41c58 <col:34, col:50> col:50 __attr 'pthread_attr_t *'
| |-NoThrowAttr 0x5625ffb41db8 <line:397:22>
| `-NonNullAttr 0x5625ffb41e10 <col:63, col:77> 1
|-FunctionDecl 0x5625ffb42038 <line:398:1, line:400:82> line:398:12 pthread_attr_getdetachstate 'int (const pthread_attr_t *, int *)' extern
| |-ParmVarDecl 0x5625ffb41e58 <col:41, col:63> col:63 __attr 'const pthread_attr_t *'
| |-ParmVarDecl 0x5625ffb41ed8 <line:399:6, col:11> col:11 __detachstate 'int *'
| |-NoThrowAttr 0x5625ffb420e8 <line:400:22>
| `-NonNullAttr 0x5625ffb42140 <col:63, col:80> 1 2
|-FunctionDecl 0x5625ffb42348 <line:401:1, line:403:79> line:401:12 pthread_attr_setdetachstate 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x5625ffb42188 <col:41, col:57> col:57 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x5625ffb42208 <line:402:6, col:10> col:10 __detachstate 'int'
| |-NoThrowAttr 0x5625ffb423f8 <line:403:22>
| `-NonNullAttr 0x5625ffb42450 <col:63, col:77> 1
|-FunctionDecl 0x5625ffb426a8 <line:404:1, line:406:82> line:404:12 pthread_attr_getguardsize 'int (const pthread_attr_t *, size_t *)' extern
| |-ParmVarDecl 0x5625ffb42498 <col:39, col:61> col:61 __attr 'const pthread_attr_t *'
| |-ParmVarDecl 0x5625ffb42540 <line:405:11, col:19> col:19 __guardsize 'size_t *'
| |-NoThrowAttr 0x5625ffb42758 <line:406:22>
| `-NonNullAttr 0x5625ffb427b0 <col:63, col:80> 1 2
|-FunctionDecl 0x5625ffb439e8 <line:407:1, line:409:79> line:407:12 pthread_attr_setguardsize 'int (pthread_attr_t *, size_t)' extern
| |-ParmVarDecl 0x5625ffb427f8 <col:39, col:55> col:55 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x5625ffb42870 <line:408:11, col:18> col:18 __guardsize 'size_t':'unsigned long'
| |-NoThrowAttr 0x5625ffb43a98 <line:409:22>
| `-NonNullAttr 0x5625ffb43af0 <col:63, col:77> 1
|-FunctionDecl 0x5625ffb43d28 <line:410:1, line:412:82> line:410:12 pthread_attr_getschedparam 'int (const pthread_attr_t *restrict, struct sched_param *restrict)' extern
| |-ParmVarDecl 0x5625ffb43b38 <col:40, col:73> col:73 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x5625ffb43bc8 <line:411:12, col:43> col:43 __param 'struct sched_param *restrict'
| |-NoThrowAttr 0x5625ffb43dd8 <line:412:22>
| `-NonNullAttr 0x5625ffb43e30 <col:63, col:80> 1 2
|-FunctionDecl 0x5625ffb44068 <line:413:1, line:415:97> line:413:12 pthread_attr_setschedparam 'int (pthread_attr_t *restrict, const struct sched_param *restrict)' extern
| |-ParmVarDecl 0x5625ffb43e78 <col:40, col:67> col:67 __attr 'pthread_attr_t *restrict'
| |-ParmVarDecl 0x5625ffb43f08 <line:414:12, line:415:12> col:12 __param 'const struct sched_param *restrict'
| |-NoThrowAttr 0x5625ffb44118 <col:37>
| `-NonNullAttr 0x5625ffb44170 <col:78, col:95> 1 2
|-FunctionDecl 0x5625ffb44358 <line:416:1, line:418:82> line:416:12 pthread_attr_getschedpolicy 'int (const pthread_attr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x5625ffb441b8 <col:41, line:417:6> col:6 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x5625ffb44238 <col:14, col:30> col:30 __policy 'int *restrict'
| |-NoThrowAttr 0x5625ffb44408 <line:418:22>
| `-NonNullAttr 0x5625ffb44460 <col:63, col:80> 1 2
|-FunctionDecl 0x5625ffb445e8 <line:419:1, line:420:79> line:419:12 pthread_attr_setschedpolicy 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x5625ffb444a8 <col:41, col:57> col:57 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x5625ffb44528 <col:65, col:69> col:69 __policy 'int'
| |-NoThrowAttr 0x5625ffb44698 <line:420:22>
| `-NonNullAttr 0x5625ffb446f0 <col:63, col:77> 1
|-FunctionDecl 0x5625ffb44898 <line:421:1, line:423:82> line:421:12 pthread_attr_getinheritsched 'int (const pthread_attr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x5625ffb44738 <col:42, line:422:7> col:7 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x5625ffb447b8 <col:15, col:31> col:31 __inherit 'int *restrict'
| |-NoThrowAttr 0x5625ffb44948 <line:423:22>
| `-NonNullAttr 0x5625ffb449c0 <col:63, col:80> 1 2
|-FunctionDecl 0x5625ffb44b48 <line:424:1, line:426:79> line:424:12 pthread_attr_setinheritsched 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x5625ffb44a08 <col:42, col:58> col:58 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x5625ffb44a88 <line:425:7, col:11> col:11 __inherit 'int'
| |-NoThrowAttr 0x5625ffb44bf8 <line:426:22>
| `-NonNullAttr 0x5625ffb44c50 <col:63, col:77> 1
|-FunctionDecl 0x5625ffb44df8 <line:427:1, line:429:82> line:427:12 pthread_attr_getscope 'int (const pthread_attr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x5625ffb44c98 <col:35, col:68> col:68 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x5625ffb44d18 <line:428:7, col:23> col:23 __scope 'int *restrict'
| |-NoThrowAttr 0x5625ffb44ea8 <line:429:22>
| `-NonNullAttr 0x5625ffb44f00 <col:63, col:80> 1 2
|-FunctionDecl 0x5625ffb45088 <line:430:1, line:431:79> line:430:12 pthread_attr_setscope 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x5625ffb44f48 <col:35, col:51> col:51 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x5625ffb44fc8 <col:59, col:63> col:63 __scope 'int'
| |-NoThrowAttr 0x5625ffb45138 <line:431:22>
| `-NonNullAttr 0x5625ffb45190 <col:63, col:77> 1
|-FunctionDecl 0x5625ffb453b8 <line:432:1, line:434:115> line:432:12 pthread_attr_getstackaddr 'int (const pthread_attr_t *restrict, void **restrict)' extern
| |-ParmVarDecl 0x5625ffb451d8 <col:39, line:433:11> col:11 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x5625ffb45258 <col:19, col:37> col:37 __stackaddr 'void **restrict'
| |-NoThrowAttr 0x5625ffb45468 <line:434:22>
| |-NonNullAttr 0x5625ffb454c0 <col:63, col:80> 1 2
| `-DeprecatedAttr 0x5625ffb454f8 <col:100> "" ""
|-FunctionDecl 0x5625ffb45708 <line:435:1, line:437:112> line:435:12 pthread_attr_setstackaddr 'int (pthread_attr_t *, void *)' extern
| |-ParmVarDecl 0x5625ffb45548 <col:39, col:55> col:55 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x5625ffb455c8 <line:436:11, col:17> col:17 __stackaddr 'void *'
| |-NoThrowAttr 0x5625ffb457b8 <line:437:22>
| |-NonNullAttr 0x5625ffb45810 <col:63, col:77> 1
| `-DeprecatedAttr 0x5625ffb45848 <col:97> "" ""
|-FunctionDecl 0x5625ffb45a48 <line:438:1, line:440:82> line:438:12 pthread_attr_getstacksize 'int (const pthread_attr_t *restrict, size_t *restrict)' extern
| |-ParmVarDecl 0x5625ffb45898 <col:39, line:439:11> col:11 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x5625ffb45910 <col:19, col:38> col:38 __stacksize 'size_t *restrict'
| |-NoThrowAttr 0x5625ffb45af8 <line:440:22>
| `-NonNullAttr 0x5625ffb45b50 <col:63, col:80> 1 2
|-FunctionDecl 0x5625ffb45cd0 <line:441:1, line:443:79> line:441:12 pthread_attr_setstacksize 'int (pthread_attr_t *, size_t)' extern
| |-ParmVarDecl 0x5625ffb45b98 <col:39, col:55> col:55 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x5625ffb45c10 <line:442:11, col:18> col:18 __stacksize 'size_t':'unsigned long'
| |-NoThrowAttr 0x5625ffb45d80 <line:443:22>
| `-NonNullAttr 0x5625ffb45dd8 <col:63, col:77> 1
|-FunctionDecl 0x5625ffb460c8 <line:444:1, line:447:85> line:444:12 pthread_attr_getstack 'int (const pthread_attr_t *restrict, void **restrict, size_t *restrict)' extern
| |-ParmVarDecl 0x5625ffb45e28 <col:35, col:68> col:68 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x5625ffb45ea8 <line:445:7, col:25> col:25 __stackaddr 'void **restrict'
| |-ParmVarDecl 0x5625ffb45f20 <line:446:7, col:26> col:26 __stacksize 'size_t *restrict'
| |-NoThrowAttr 0x5625ffb46180 <line:447:22>
| `-NonNullAttr 0x5625ffb461d8 <col:63, col:83> 1 2 3
|-FunctionDecl 0x5625ffb46488 <line:448:1, line:449:100> line:448:12 pthread_attr_setstack 'int (pthread_attr_t *, void *, size_t)' extern
| |-ParmVarDecl 0x5625ffb46230 <col:35, col:51> col:51 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x5625ffb462b0 <col:59, col:65> col:65 __stackaddr 'void *'
| |-ParmVarDecl 0x5625ffb46328 <line:449:7, col:14> col:14 __stacksize 'size_t':'unsigned long'
| |-NoThrowAttr 0x5625ffb46540 <col:43>
| `-NonNullAttr 0x5625ffb46598 <col:84, col:98> 1
|-FunctionDecl 0x5625ffb46858 <line:450:1, line:452:79> line:450:12 pthread_setschedparam 'int (pthread_t, int, const struct sched_param *)' extern
| |-ParmVarDecl 0x5625ffb465e8 <col:35, col:45> col:45 __target_thread 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x5625ffb46668 <col:62, col:66> col:66 __policy 'int'
| |-ParmVarDecl 0x5625ffb466f8 <line:451:7, col:33> col:33 __param 'const struct sched_param *'
| |-NoThrowAttr 0x5625ffb46910 <line:452:22>
| `-NonNullAttr 0x5625ffb46968 <col:63, col:77> 3
|-FunctionDecl 0x5625ffb46c78 <line:453:1, line:456:82> line:453:12 pthread_getschedparam 'int (pthread_t, int *restrict, struct sched_param *restrict)' extern
| |-ParmVarDecl 0x5625ffb469e0 <col:35, col:45> col:45 __target_thread 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x5625ffb46a60 <line:454:7, col:23> col:23 __policy 'int *restrict'
| |-ParmVarDecl 0x5625ffb46af0 <line:455:7, col:38> col:38 __param 'struct sched_param *restrict'
| |-NoThrowAttr 0x5625ffb46d30 <line:456:22>
| `-NonNullAttr 0x5625ffb46d88 <col:63, col:80> 2 3
|-FunctionDecl 0x5625ffb46f78 <line:457:1, line:458:45> line:457:12 pthread_setschedprio 'int (pthread_t, int)' extern
| |-ParmVarDecl 0x5625ffb46dd8 <col:34, col:44> col:44 __target_thread 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x5625ffb46e58 <col:61, col:65> col:65 __prio 'int'
| `-NoThrowAttr 0x5625ffb47028 <line:458:22>
|-FunctionDecl 0x5625ffb473f8 <line:459:1, line:460:71> line:459:12 pthread_once 'int (pthread_once_t *, void (*)(void))' extern
| |-ParmVarDecl 0x5625ffb470f0 <col:26, col:42> col:42 __once_control 'pthread_once_t *'
| |-ParmVarDecl 0x5625ffb47290 <line:460:5, col:33> col:12 __init_routine 'void (*)(void)'
| `-NonNullAttr 0x5625ffb474a8 <col:52, col:69> 1 2
|-FunctionDecl 0x5625ffb47650 <line:461:1, col:64> col:12 pthread_setcancelstate 'int (int, int *)' extern
| |-ParmVarDecl 0x5625ffb47530 <col:36, col:40> col:40 __state 'int'
| `-ParmVarDecl 0x5625ffb475b0 <col:49, col:54> col:54 __oldstate 'int *'
|-FunctionDecl 0x5625ffb47838 <line:462:1, col:61> col:12 pthread_setcanceltype 'int (int, int *)' extern
| |-ParmVarDecl 0x5625ffb47718 <col:35, col:39> col:39 __type 'int'
| `-ParmVarDecl 0x5625ffb47798 <col:47, col:52> col:52 __oldtype 'int *'
|-FunctionDecl 0x5625ffb479f0 <line:463:1, col:42> col:12 pthread_cancel 'int (pthread_t)' extern
| `-ParmVarDecl 0x5625ffb478f8 <col:28, col:38> col:38 __th 'pthread_t':'unsigned long'
|-FunctionDecl 0x5625ffb47b30 <line:464:1, col:37> col:13 pthread_testcancel 'void (void)' extern
|-RecordDecl 0x5625ffb47bd0 <line:465:9, line:473:1> line:465:9 struct definition
| |-RecordDecl 0x5625ffb47c78 <line:467:3, line:471:3> line:467:3 struct definition
| | |-FieldDecl 0x5625ffb47d68 <line:469:5, col:15> col:15 __cancel_jmp_buf '__jmp_buf':'long [8]'
| | `-FieldDecl 0x5625ffb47dd0 <line:470:5, col:9> col:9 __mask_was_saved 'int'
| |-FieldDecl 0x5625ffb47fa0 <line:467:3, line:471:23> col:5 __cancel_jmp_buf 'struct (anonymous struct at ./split_6/safe009_power.opt_false-unreach-call.i:467:3) [1]'
| `-FieldDecl 0x5625ffb48098 <line:472:3, col:16> col:9 __pad 'void *[4]'
|-TypedefDecl 0x5625ffb48150 <line:465:1, line:473:3> col:3 referenced __pthread_unwind_buf_t 'struct __pthread_unwind_buf_t':'__pthread_unwind_buf_t'
| |-ElaboratedType 0x5625ffb480f0 'struct __pthread_unwind_buf_t' sugar
| | `-RecordType 0x5625ffb47c50 '__pthread_unwind_buf_t'
| |   `-Record 0x5625ffb47bd0 ''
| `-AlignedAttr 0x5625ffb481a8 <col:42> aligned
|   `-<<<NULL>>>
|-RecordDecl 0x5625ffb48220 <line:474:1, line:480:1> line:474:8 struct __pthread_cleanup_frame definition
| |-FieldDecl 0x5625ffb48380 <line:476:3, col:35> col:10 __cancel_routine 'void (*)(void *)'
| |-FieldDecl 0x5625ffb483e8 <line:477:3, col:9> col:9 __cancel_arg 'void *'
| |-FieldDecl 0x5625ffb48450 <line:478:3, col:7> col:7 __do_it 'int'
| `-FieldDecl 0x5625ffb484b8 <line:479:3, col:7> col:7 __cancel_type 'int'
|-FunctionDecl 0x5625ffb486c0 <line:481:1, col:69> col:13 __pthread_register_cancel 'void (__pthread_unwind_buf_t *)' extern
| `-ParmVarDecl 0x5625ffb485b0 <col:40, col:64> col:64 __buf '__pthread_unwind_buf_t *'
|-FunctionDecl 0x5625ffb48808 <line:483:1, col:71> col:13 __pthread_unregister_cancel 'void (__pthread_unwind_buf_t *)' extern
| `-ParmVarDecl 0x5625ffb48778 <col:42, col:66> col:66 __buf '__pthread_unwind_buf_t *'
|-FunctionDecl 0x5625ffb48a00 <line:485:1, line:487:31> line:485:13 __pthread_unwind_next 'void (__pthread_unwind_buf_t *) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x5625ffb488c0 <col:36, col:60> col:60 __buf '__pthread_unwind_buf_t *'
| `-WeakAttr 0x5625ffb48aa8 <line:487:22>
|-RecordDecl 0x5625ffb48b00 <line:489:1, col:8> col:8 struct __jmp_buf_tag
|-FunctionDecl 0x5625ffb48e18 <line:490:1, col:98> col:12 __sigsetjmp 'int (struct __jmp_buf_tag *, int)' extern
| |-ParmVarDecl 0x5625ffb48c78 <col:25, col:47> col:47 __env 'struct __jmp_buf_tag *'
| |-ParmVarDecl 0x5625ffb48cf8 <col:54, col:58> col:58 __savemask 'int'
| |-NoThrowAttr 0x5625ffb48ec8 <col:86>
| `-ReturnsTwiceAttr 0x5625ffb48f20 <col:12> Implicit
|-FunctionDecl 0x5625ffb49248 <line:491:1, line:493:79> line:491:12 pthread_mutex_init 'int (pthread_mutex_t *, const pthread_mutexattr_t *)' extern
| |-ParmVarDecl 0x5625ffb48ff0 <col:32, col:49> col:49 __mutex 'pthread_mutex_t *'
| |-ParmVarDecl 0x5625ffb49100 <line:492:11, col:38> col:38 __mutexattr 'const pthread_mutexattr_t *'
| |-NoThrowAttr 0x5625ffb492f8 <line:493:22>
| `-NonNullAttr 0x5625ffb49350 <col:63, col:77> 1
|-FunctionDecl 0x5625ffb494c8 <line:494:1, line:495:79> line:494:12 pthread_mutex_destroy 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x5625ffb49398 <col:35, col:52> col:52 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x5625ffb49570 <line:495:22>
| `-NonNullAttr 0x5625ffb495c8 <col:63, col:77> 1
|-FunctionDecl 0x5625ffb496d0 <line:496:1, line:497:68> line:496:12 pthread_mutex_trylock 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x5625ffb49618 <col:35, col:52> col:52 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x5625ffb49778 <line:497:22>
| `-NonNullAttr 0x5625ffb497d0 <col:52, col:66> 1
|-FunctionDecl 0x5625ffb498d0 <line:498:1, line:499:68> line:498:12 pthread_mutex_lock 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x5625ffb49818 <col:32, col:49> col:49 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x5625ffb49978 <line:499:22>
| `-NonNullAttr 0x5625ffb499d0 <col:52, col:66> 1
|-FunctionDecl 0x5625ffb4ac28 <line:500:1, line:502:85> line:500:12 pthread_mutex_timedlock 'int (pthread_mutex_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x5625ffb4aa38 <col:37, col:65> col:65 __mutex 'pthread_mutex_t *restrict'
| |-ParmVarDecl 0x5625ffb4aac8 <line:501:9, line:502:9> col:9 __abstime 'const struct timespec *restrict'
| |-NoThrowAttr 0x5625ffb4acd8 <col:36>
| `-NonNullAttr 0x5625ffb4ad30 <col:66, col:83> 1 2
|-FunctionDecl 0x5625ffb4ae30 <line:503:1, line:504:68> line:503:12 pthread_mutex_unlock 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x5625ffb4ad78 <col:34, col:51> col:51 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x5625ffb4aed8 <line:504:22>
| `-NonNullAttr 0x5625ffb4af30 <col:52, col:66> 1
|-FunctionDecl 0x5625ffb4b1c8 <line:505:1, line:508:82> line:505:12 pthread_mutex_getprioceiling 'int (const pthread_mutex_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x5625ffb4afe0 <col:42, line:506:18> col:18 __mutex 'const pthread_mutex_t *restrict'
| |-ParmVarDecl 0x5625ffb4b060 <line:507:7, col:23> col:23 __prioceiling 'int *restrict'
| |-NoThrowAttr 0x5625ffb4b278 <line:508:22>
| `-NonNullAttr 0x5625ffb4b2d0 <col:63, col:80> 1 2
|-FunctionDecl 0x5625ffb4b598 <line:509:1, line:512:82> line:509:12 pthread_mutex_setprioceiling 'int (pthread_mutex_t *restrict, int, int *restrict)' extern
| |-ParmVarDecl 0x5625ffb4b318 <col:42, col:70> col:70 __mutex 'pthread_mutex_t *restrict'
| |-ParmVarDecl 0x5625ffb4b398 <line:510:7, col:11> col:11 __prioceiling 'int'
| |-ParmVarDecl 0x5625ffb4b418 <line:511:7, col:23> col:23 __old_ceiling 'int *restrict'
| |-NoThrowAttr 0x5625ffb4b650 <line:512:22>
| `-NonNullAttr 0x5625ffb4b6a8 <col:63, col:80> 1 3
|-FunctionDecl 0x5625ffb4b7b0 <line:513:1, line:514:79> line:513:12 pthread_mutex_consistent 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x5625ffb4b6f8 <col:38, col:55> col:55 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x5625ffb4b858 <line:514:22>
| `-NonNullAttr 0x5625ffb4b8b0 <col:63, col:77> 1
|-FunctionDecl 0x5625ffb4bad8 <line:515:1, line:516:79> line:515:12 pthread_mutexattr_init 'int (pthread_mutexattr_t *)' extern
| |-ParmVarDecl 0x5625ffb4b960 <col:36, col:57> col:57 __attr 'pthread_mutexattr_t *'
| |-NoThrowAttr 0x5625ffb4bb80 <line:516:22>
| `-NonNullAttr 0x5625ffb4bbd8 <col:63, col:77> 1
|-FunctionDecl 0x5625ffb4bce0 <line:517:1, line:518:79> line:517:12 pthread_mutexattr_destroy 'int (pthread_mutexattr_t *)' extern
| |-ParmVarDecl 0x5625ffb4bc28 <col:39, col:60> col:60 __attr 'pthread_mutexattr_t *'
| |-NoThrowAttr 0x5625ffb4bd88 <line:518:22>
| `-NonNullAttr 0x5625ffb4bde0 <col:63, col:77> 1
|-FunctionDecl 0x5625ffb4c008 <line:519:1, line:522:82> line:519:12 pthread_mutexattr_getpshared 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x5625ffb4be28 <col:42, line:520:18> col:18 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x5625ffb4bea8 <line:521:7, col:23> col:23 __pshared 'int *restrict'
| |-NoThrowAttr 0x5625ffb4c0b8 <line:522:22>
| `-NonNullAttr 0x5625ffb4c110 <col:63, col:80> 1 2
|-FunctionDecl 0x5625ffb4c318 <line:523:1, line:525:79> line:523:12 pthread_mutexattr_setpshared 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x5625ffb4c158 <col:42, col:63> col:63 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x5625ffb4c1d8 <line:524:7, col:11> col:11 __pshared 'int'
| |-NoThrowAttr 0x5625ffb4c3c8 <line:525:22>
| `-NonNullAttr 0x5625ffb4c420 <col:63, col:77> 1
|-FunctionDecl 0x5625ffb4c5c8 <line:526:1, line:528:82> line:526:12 pthread_mutexattr_gettype 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x5625ffb4c468 <col:39, line:527:11> col:11 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x5625ffb4c4e8 <col:19, col:35> col:35 __kind 'int *restrict'
| |-NoThrowAttr 0x5625ffb4c678 <line:528:22>
| `-NonNullAttr 0x5625ffb4c6d0 <col:63, col:80> 1 2
|-FunctionDecl 0x5625ffb4c858 <line:529:1, line:530:79> line:529:12 pthread_mutexattr_settype 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x5625ffb4c718 <col:39, col:60> col:60 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x5625ffb4c798 <col:68, col:72> col:72 __kind 'int'
| |-NoThrowAttr 0x5625ffb4c908 <line:530:22>
| `-NonNullAttr 0x5625ffb4c960 <col:63, col:77> 1
|-FunctionDecl 0x5625ffb4cb20 <line:531:1, line:534:82> line:531:12 pthread_mutexattr_getprotocol 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x5625ffb4c9a8 <col:43, line:532:19> col:19 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x5625ffb4ca40 <line:533:8, col:24> col:24 __protocol 'int *restrict'
| |-NoThrowAttr 0x5625ffb4cbd0 <line:534:22>
| `-NonNullAttr 0x5625ffb4cc28 <col:63, col:80> 1 2
|-FunctionDecl 0x5625ffb4cdb8 <line:535:1, line:537:79> line:535:12 pthread_mutexattr_setprotocol 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x5625ffb4cc78 <col:43, col:64> col:64 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x5625ffb4ccf8 <line:536:8, col:12> col:12 __protocol 'int'
| |-NoThrowAttr 0x5625ffb4ce68 <line:537:22>
| `-NonNullAttr 0x5625ffb4cec0 <col:63, col:77> 1
|-FunctionDecl 0x5625ffb4d068 <line:538:1, line:541:82> line:538:12 pthread_mutexattr_getprioceiling 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x5625ffb4cf08 <col:46, line:539:22> col:22 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x5625ffb4cf88 <line:540:11, col:27> col:27 __prioceiling 'int *restrict'
| |-NoThrowAttr 0x5625ffb4d118 <line:541:22>
| `-NonNullAttr 0x5625ffb4d170 <col:63, col:80> 1 2
|-FunctionDecl 0x5625ffb4d2f8 <line:542:1, line:544:79> line:542:12 pthread_mutexattr_setprioceiling 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x5625ffb4d1b8 <col:46, col:67> col:67 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x5625ffb4d238 <line:543:11, col:15> col:15 __prioceiling 'int'
| |-NoThrowAttr 0x5625ffb4d3a8 <line:544:22>
| `-NonNullAttr 0x5625ffb4d400 <col:63, col:77> 1
|-FunctionDecl 0x5625ffb4d5e8 <line:545:1, line:547:82> line:545:12 pthread_mutexattr_getrobust 'int (const pthread_mutexattr_t *, int *)' extern
| |-ParmVarDecl 0x5625ffb4d448 <col:41, col:68> col:68 __attr 'const pthread_mutexattr_t *'
| |-ParmVarDecl 0x5625ffb4d4c8 <line:546:6, col:11> col:11 __robustness 'int *'
| |-NoThrowAttr 0x5625ffb4d698 <line:547:22>
| `-NonNullAttr 0x5625ffb4d6f0 <col:63, col:80> 1 2
|-FunctionDecl 0x5625ffb4d878 <line:548:1, line:550:79> line:548:12 pthread_mutexattr_setrobust 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x5625ffb4d738 <col:41, col:62> col:62 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x5625ffb4d7b8 <line:549:6, col:10> col:10 __robustness 'int'
| |-NoThrowAttr 0x5625ffb4d928 <line:550:22>
| `-NonNullAttr 0x5625ffb4d980 <col:63, col:77> 1
|-FunctionDecl 0x5625ffb4ecf8 <line:551:1, line:553:86> line:551:12 pthread_rwlock_init 'int (pthread_rwlock_t *restrict, const pthread_rwlockattr_t *restrict)' extern
| |-ParmVarDecl 0x5625ffb4eaa0 <col:33, col:62> col:62 __rwlock 'pthread_rwlock_t *restrict'
| |-ParmVarDecl 0x5625ffb4ebb0 <line:552:5, line:553:5> col:5 __attr 'const pthread_rwlockattr_t *restrict'
| |-NoThrowAttr 0x5625ffb4eda8 <col:29>
| `-NonNullAttr 0x5625ffb4ee00 <col:70, col:84> 1
|-FunctionDecl 0x5625ffb4ef78 <line:554:1, line:555:79> line:554:12 pthread_rwlock_destroy 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x5625ffb4ee48 <col:36, col:54> col:54 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x5625ffb4f020 <line:555:22>
| `-NonNullAttr 0x5625ffb4f078 <col:63, col:77> 1
|-FunctionDecl 0x5625ffb4f180 <line:556:1, line:557:68> line:556:12 pthread_rwlock_rdlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x5625ffb4f0c8 <col:35, col:53> col:53 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x5625ffb4f228 <line:557:22>
| `-NonNullAttr 0x5625ffb4f280 <col:52, col:66> 1
|-FunctionDecl 0x5625ffb4f380 <line:558:1, line:559:65> line:558:12 pthread_rwlock_tryrdlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x5625ffb4f2c8 <col:38, col:56> col:56 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x5625ffb4f428 <line:559:19>
| `-NonNullAttr 0x5625ffb4f480 <col:49, col:63> 1
|-FunctionDecl 0x5625ffb4f6b8 <line:560:1, line:562:88> line:560:12 pthread_rwlock_timedrdlock 'int (pthread_rwlock_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x5625ffb4f4c8 <col:40, col:69> col:69 __rwlock 'pthread_rwlock_t *restrict'
| |-ParmVarDecl 0x5625ffb4f558 <line:561:12, line:562:12> col:12 __abstime 'const struct timespec *restrict'
| |-NoThrowAttr 0x5625ffb4f768 <col:39>
| `-NonNullAttr 0x5625ffb4f7c0 <col:69, col:86> 1 2
|-FunctionDecl 0x5625ffb4f8c0 <line:563:1, line:564:68> line:563:12 pthread_rwlock_wrlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x5625ffb4f808 <col:35, col:53> col:53 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x5625ffb4f968 <line:564:22>
| `-NonNullAttr 0x5625ffb4f9c0 <col:52, col:66> 1
|-FunctionDecl 0x5625ffb4fb28 <line:565:1, line:566:68> line:565:12 pthread_rwlock_trywrlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x5625ffb4fa70 <col:38, col:56> col:56 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x5625ffb4fbd0 <line:566:22>
| `-NonNullAttr 0x5625ffb4fc28 <col:52, col:66> 1
|-FunctionDecl 0x5625ffb4fde8 <line:567:1, line:569:88> line:567:12 pthread_rwlock_timedwrlock 'int (pthread_rwlock_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x5625ffb4fc78 <col:40, col:69> col:69 __rwlock 'pthread_rwlock_t *restrict'
| |-ParmVarDecl 0x5625ffb4fd08 <line:568:12, line:569:12> col:12 __abstime 'const struct timespec *restrict'
| |-NoThrowAttr 0x5625ffb4fe98 <col:39>
| `-NonNullAttr 0x5625ffb4fef0 <col:69, col:86> 1 2
|-FunctionDecl 0x5625ffb4fff0 <line:570:1, line:571:68> line:570:12 pthread_rwlock_unlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x5625ffb4ff38 <col:35, col:53> col:53 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x5625ffb50098 <line:571:22>
| `-NonNullAttr 0x5625ffb500f0 <col:52, col:66> 1
|-FunctionDecl 0x5625ffb502d8 <line:572:1, line:573:79> line:572:12 pthread_rwlockattr_init 'int (pthread_rwlockattr_t *)' extern
| |-ParmVarDecl 0x5625ffb501a0 <col:37, col:59> col:59 __attr 'pthread_rwlockattr_t *'
| |-NoThrowAttr 0x5625ffb50380 <line:573:22>
| `-NonNullAttr 0x5625ffb503d8 <col:63, col:77> 1
|-FunctionDecl 0x5625ffb504e0 <line:574:1, line:575:79> line:574:12 pthread_rwlockattr_destroy 'int (pthread_rwlockattr_t *)' extern
| |-ParmVarDecl 0x5625ffb50428 <col:40, col:62> col:62 __attr 'pthread_rwlockattr_t *'
| |-NoThrowAttr 0x5625ffb50588 <line:575:22>
| `-NonNullAttr 0x5625ffb505e0 <col:63, col:77> 1
|-FunctionDecl 0x5625ffb50808 <line:576:1, line:579:82> line:576:12 pthread_rwlockattr_getpshared 'int (const pthread_rwlockattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x5625ffb50628 <col:43, line:577:19> col:19 __attr 'const pthread_rwlockattr_t *restrict'
| |-ParmVarDecl 0x5625ffb506a8 <line:578:8, col:24> col:24 __pshared 'int *restrict'
| |-NoThrowAttr 0x5625ffb508b8 <line:579:22>
| `-NonNullAttr 0x5625ffb50910 <col:63, col:80> 1 2
|-FunctionDecl 0x5625ffb50b38 <line:580:1, line:582:79> line:580:12 pthread_rwlockattr_setpshared 'int (pthread_rwlockattr_t *, int)' extern
| |-ParmVarDecl 0x5625ffb50958 <col:43, col:65> col:65 __attr 'pthread_rwlockattr_t *'
| |-ParmVarDecl 0x5625ffb509d8 <line:581:8, col:12> col:12 __pshared 'int'
| |-NoThrowAttr 0x5625ffb50be8 <line:582:22>
| `-NonNullAttr 0x5625ffb50c40 <col:63, col:77> 1
|-FunctionDecl 0x5625ffb50de8 <line:583:1, line:586:82> line:583:12 pthread_rwlockattr_getkind_np 'int (const pthread_rwlockattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x5625ffb50c88 <col:43, line:584:19> col:19 __attr 'const pthread_rwlockattr_t *restrict'
| |-ParmVarDecl 0x5625ffb50d08 <line:585:8, col:24> col:24 __pref 'int *restrict'
| |-NoThrowAttr 0x5625ffb50e98 <line:586:22>
| `-NonNullAttr 0x5625ffb50ef0 <col:63, col:80> 1 2
|-FunctionDecl 0x5625ffb51078 <line:587:1, line:588:93> line:587:12 pthread_rwlockattr_setkind_np 'int (pthread_rwlockattr_t *, int)' extern
| |-ParmVarDecl 0x5625ffb50f38 <col:43, col:65> col:65 __attr 'pthread_rwlockattr_t *'
| |-ParmVarDecl 0x5625ffb50fb8 <line:588:8, col:12> col:12 __pref 'int'
| |-NoThrowAttr 0x5625ffb51128 <col:36>
| `-NonNullAttr 0x5625ffb51180 <col:77, col:91> 1
|-FunctionDecl 0x5625ffb514b8 <line:589:1, line:591:79> line:589:12 pthread_cond_init 'int (pthread_cond_t *restrict, const pthread_condattr_t *restrict)' extern
| |-ParmVarDecl 0x5625ffb51260 <col:31, col:58> col:58 __cond 'pthread_cond_t *restrict'
| |-ParmVarDecl 0x5625ffb51370 <line:590:10, col:47> col:47 __cond_attr 'const pthread_condattr_t *restrict'
| |-NoThrowAttr 0x5625ffb51568 <line:591:22>
| `-NonNullAttr 0x5625ffb515c0 <col:63, col:77> 1
|-FunctionDecl 0x5625ffb51738 <line:592:1, line:593:79> line:592:12 pthread_cond_destroy 'int (pthread_cond_t *)' extern
| |-ParmVarDecl 0x5625ffb51608 <col:34, col:50> col:50 __cond 'pthread_cond_t *'
| |-NoThrowAttr 0x5625ffb517e0 <line:593:22>
| `-NonNullAttr 0x5625ffb51838 <col:63, col:77> 1
|-FunctionDecl 0x5625ffb51940 <line:594:1, line:595:68> line:594:12 pthread_cond_signal 'int (pthread_cond_t *)' extern
| |-ParmVarDecl 0x5625ffb51888 <col:33, col:49> col:49 __cond 'pthread_cond_t *'
| |-NoThrowAttr 0x5625ffb519e8 <line:595:22>
| `-NonNullAttr 0x5625ffb51a40 <col:52, col:66> 1
|-FunctionDecl 0x5625ffb51b58 <line:596:1, line:597:68> line:596:12 pthread_cond_broadcast 'int (pthread_cond_t *)' extern
| |-ParmVarDecl 0x5625ffb51aa0 <col:36, col:52> col:52 __cond 'pthread_cond_t *'
| |-NoThrowAttr 0x5625ffb51c00 <line:597:22>
| `-NonNullAttr 0x5625ffb51c58 <col:52, col:66> 1
|-FunctionDecl 0x5625ffb51e88 <line:598:1, line:600:41> line:598:12 pthread_cond_wait 'int (pthread_cond_t *restrict, pthread_mutex_t *restrict)' extern
| |-ParmVarDecl 0x5625ffb51ca8 <col:31, col:58> col:58 __cond 'pthread_cond_t *restrict'
| |-ParmVarDecl 0x5625ffb51d20 <line:599:10, col:38> col:38 __mutex 'pthread_mutex_t *restrict'
| `-NonNullAttr 0x5625ffb51f38 <line:600:22, col:39> 1 2
|-FunctionDecl 0x5625ffb52268 <line:601:1, line:604:44> line:601:12 pthread_cond_timedwait 'int (pthread_cond_t *restrict, pthread_mutex_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x5625ffb51fb8 <col:36, col:63> col:63 __cond 'pthread_cond_t *restrict'
| |-ParmVarDecl 0x5625ffb52030 <line:602:8, col:36> col:36 __mutex 'pthread_mutex_t *restrict'
| |-ParmVarDecl 0x5625ffb520c0 <line:603:8, col:42> col:42 __abstime 'const struct timespec *restrict'
| `-NonNullAttr 0x5625ffb52320 <line:604:22, col:42> 1 2 3
|-FunctionDecl 0x5625ffb52538 <line:605:1, line:606:79> line:605:12 pthread_condattr_init 'int (pthread_condattr_t *)' extern
| |-ParmVarDecl 0x5625ffb52400 <col:35, col:55> col:55 __attr 'pthread_condattr_t *'
| |-NoThrowAttr 0x5625ffb525e0 <line:606:22>
| `-NonNullAttr 0x5625ffb52638 <col:63, col:77> 1
|-FunctionDecl 0x5625ffb52740 <line:607:1, line:608:79> line:607:12 pthread_condattr_destroy 'int (pthread_condattr_t *)' extern
| |-ParmVarDecl 0x5625ffb52688 <col:38, col:58> col:58 __attr 'pthread_condattr_t *'
| |-NoThrowAttr 0x5625ffb527e8 <line:608:22>
| `-NonNullAttr 0x5625ffb52840 <col:63, col:77> 1
|-FunctionDecl 0x5625ffb52aa0 <line:609:1, line:612:82> line:609:12 pthread_condattr_getpshared 'int (const pthread_condattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x5625ffb52888 <col:41, line:610:17> col:17 __attr 'const pthread_condattr_t *restrict'
| |-ParmVarDecl 0x5625ffb52908 <line:611:6, col:22> col:22 __pshared 'int *restrict'
| |-NoThrowAttr 0x5625ffb52b50 <line:612:22>
| `-NonNullAttr 0x5625ffb52ba8 <col:63, col:80> 1 2
|-FunctionDecl 0x5625ffb52db8 <line:613:1, line:614:94> line:613:12 pthread_condattr_setpshared 'int (pthread_condattr_t *, int)' extern
| |-ParmVarDecl 0x5625ffb52bf8 <col:41, col:61> col:61 __attr 'pthread_condattr_t *'
| |-ParmVarDecl 0x5625ffb52c78 <line:614:6, col:10> col:10 __pshared 'int'
| |-NoThrowAttr 0x5625ffb52e68 <col:37>
| `-NonNullAttr 0x5625ffb52ec0 <col:78, col:92> 1
|-FunctionDecl 0x5625ffb530d8 <line:615:1, line:618:82> line:615:12 pthread_condattr_getclock 'int (const pthread_condattr_t *restrict, __clockid_t *restrict)' extern
| |-ParmVarDecl 0x5625ffb52f08 <col:39, line:616:22> col:22 __attr 'const pthread_condattr_t *restrict'
| |-ParmVarDecl 0x5625ffb52fb0 <line:617:11, col:35> col:35 __clock_id '__clockid_t *restrict'
| |-NoThrowAttr 0x5625ffb53188 <line:618:22>
| `-NonNullAttr 0x5625ffb531e0 <col:63, col:80> 1 2
|-FunctionDecl 0x5625ffb533a8 <line:619:1, line:621:79> line:619:12 pthread_condattr_setclock 'int (pthread_condattr_t *, __clockid_t)' extern
| |-ParmVarDecl 0x5625ffb53228 <col:39, col:59> col:59 __attr 'pthread_condattr_t *'
| |-ParmVarDecl 0x5625ffb532a0 <line:620:11, col:23> col:23 __clock_id '__clockid_t':'int'
| |-NoThrowAttr 0x5625ffb53458 <line:621:22>
| `-NonNullAttr 0x5625ffb534b0 <col:63, col:77> 1
|-FunctionDecl 0x5625ffb53758 <line:622:1, line:623:79> line:622:12 pthread_spin_init 'int (pthread_spinlock_t *, int)' extern
| |-ParmVarDecl 0x5625ffb53590 <col:31, col:51> col:51 __lock 'pthread_spinlock_t *'
| |-ParmVarDecl 0x5625ffb53610 <col:59, col:63> col:63 __pshared 'int'
| |-NoThrowAttr 0x5625ffb53808 <line:623:22>
| `-NonNullAttr 0x5625ffb53860 <col:63, col:77> 1
|-FunctionDecl 0x5625ffb539d8 <line:624:1, line:625:79> line:624:12 pthread_spin_destroy 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x5625ffb538a8 <col:34, col:54> col:54 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x5625ffb53ab0 <line:625:22>
| `-NonNullAttr 0x5625ffb53b08 <col:63, col:77> 1
|-FunctionDecl 0x5625ffb53c10 <line:626:1, line:627:68> line:626:12 pthread_spin_lock 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x5625ffb53b58 <col:31, col:51> col:51 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x5625ffb53cb8 <line:627:22>
| `-NonNullAttr 0x5625ffb53d10 <col:52, col:66> 1
|-FunctionDecl 0x5625ffb53e10 <line:628:1, line:629:68> line:628:12 pthread_spin_trylock 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x5625ffb53d58 <col:34, col:54> col:54 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x5625ffb53eb8 <line:629:22>
| `-NonNullAttr 0x5625ffb53f10 <col:52, col:66> 1
|-FunctionDecl 0x5625ffb54010 <line:630:1, line:631:68> line:630:12 pthread_spin_unlock 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x5625ffb53f58 <col:33, col:53> col:53 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x5625ffb540b8 <line:631:22>
| `-NonNullAttr 0x5625ffb54110 <col:52, col:66> 1
|-FunctionDecl 0x5625ffb544e8 <line:632:1, line:635:79> line:632:12 pthread_barrier_init 'int (pthread_barrier_t *restrict, const pthread_barrierattr_t *restrict, unsigned int)' extern
| |-ParmVarDecl 0x5625ffb541f0 <col:34, col:64> col:64 __barrier 'pthread_barrier_t *restrict'
| |-ParmVarDecl 0x5625ffb54300 <line:633:6, line:634:6> col:6 __attr 'const pthread_barrierattr_t *restrict'
| |-ParmVarDecl 0x5625ffb54380 <col:14, col:27> col:27 __count 'unsigned int'
| |-NoThrowAttr 0x5625ffb545a0 <line:635:22>
| `-NonNullAttr 0x5625ffb545f8 <col:63, col:77> 1
|-FunctionDecl 0x5625ffb54778 <line:636:1, line:637:79> line:636:12 pthread_barrier_destroy 'int (pthread_barrier_t *)' extern
| |-ParmVarDecl 0x5625ffb54648 <col:37, col:56> col:56 __barrier 'pthread_barrier_t *'
| |-NoThrowAttr 0x5625ffb54820 <line:637:22>
| `-NonNullAttr 0x5625ffb54878 <col:63, col:77> 1
|-FunctionDecl 0x5625ffb54980 <line:638:1, line:639:68> line:638:12 pthread_barrier_wait 'int (pthread_barrier_t *)' extern
| |-ParmVarDecl 0x5625ffb548c8 <col:34, col:53> col:53 __barrier 'pthread_barrier_t *'
| |-NoThrowAttr 0x5625ffb54a28 <line:639:22>
| `-NonNullAttr 0x5625ffb54a80 <col:52, col:66> 1
|-FunctionDecl 0x5625ffb55c88 <line:640:1, line:641:79> line:640:12 pthread_barrierattr_init 'int (pthread_barrierattr_t *)' extern
| |-ParmVarDecl 0x5625ffb55b50 <col:38, col:61> col:61 __attr 'pthread_barrierattr_t *'
| |-NoThrowAttr 0x5625ffb55d30 <line:641:22>
| `-NonNullAttr 0x5625ffb55d88 <col:63, col:77> 1
|-FunctionDecl 0x5625ffb55e90 <line:642:1, line:643:79> line:642:12 pthread_barrierattr_destroy 'int (pthread_barrierattr_t *)' extern
| |-ParmVarDecl 0x5625ffb55dd8 <col:41, col:64> col:64 __attr 'pthread_barrierattr_t *'
| |-NoThrowAttr 0x5625ffb55f38 <line:643:22>
| `-NonNullAttr 0x5625ffb55f90 <col:63, col:77> 1
|-FunctionDecl 0x5625ffb561b8 <line:644:1, line:647:82> line:644:12 pthread_barrierattr_getpshared 'int (const pthread_barrierattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x5625ffb55fd8 <col:44, line:645:20> col:20 __attr 'const pthread_barrierattr_t *restrict'
| |-ParmVarDecl 0x5625ffb56058 <line:646:9, col:25> col:25 __pshared 'int *restrict'
| |-NoThrowAttr 0x5625ffb56268 <line:647:22>
| `-NonNullAttr 0x5625ffb562c0 <col:63, col:80> 1 2
|-FunctionDecl 0x5625ffb564c8 <line:648:1, line:650:79> line:648:12 pthread_barrierattr_setpshared 'int (pthread_barrierattr_t *, int)' extern
| |-ParmVarDecl 0x5625ffb56308 <col:44, col:67> col:67 __attr 'pthread_barrierattr_t *'
| |-ParmVarDecl 0x5625ffb56388 <line:649:9, col:13> col:13 __pshared 'int'
| |-NoThrowAttr 0x5625ffb56578 <line:650:22>
| `-NonNullAttr 0x5625ffb565d0 <col:63, col:77> 1
|-FunctionDecl 0x5625ffb56918 <line:651:1, line:653:79> line:651:12 pthread_key_create 'int (pthread_key_t *, void (*)(void *))' extern
| |-ParmVarDecl 0x5625ffb566b0 <col:32, col:47> col:47 __key 'pthread_key_t *'
| |-ParmVarDecl 0x5625ffb567d0 <line:652:11, col:43> col:18 __destr_function 'void (*)(void *)'
| |-NoThrowAttr 0x5625ffb569c8 <line:653:22>
| `-NonNullAttr 0x5625ffb56a20 <col:63, col:77> 1
|-FunctionDecl 0x5625ffb56b88 <line:654:1, col:92> col:12 pthread_key_delete 'int (pthread_key_t)' extern
| |-ParmVarDecl 0x5625ffb56a68 <col:32, col:46> col:46 __key 'pthread_key_t':'unsigned int'
| `-NoThrowAttr 0x5625ffb56c30 <col:69>
|-FunctionDecl 0x5625ffb56da8 <line:655:1, col:95> col:14 pthread_getspecific 'void *(pthread_key_t)' extern
| |-ParmVarDecl 0x5625ffb56c98 <col:35, col:49> col:49 __key 'pthread_key_t':'unsigned int'
| `-NoThrowAttr 0x5625ffb56e50 <col:72>
|-FunctionDecl 0x5625ffb57088 <line:656:1, line:657:67> line:656:12 pthread_setspecific 'int (pthread_key_t, const void *)' extern
| |-ParmVarDecl 0x5625ffb56eb8 <col:33, col:47> col:47 __key 'pthread_key_t':'unsigned int'
| |-ParmVarDecl 0x5625ffb56f68 <line:657:5, col:17> col:17 __pointer 'const void *'
| `-NoThrowAttr 0x5625ffb57138 <col:44>
|-FunctionDecl 0x5625ffb57358 <line:658:1, line:660:79> line:658:12 pthread_getcpuclockid 'int (pthread_t, __clockid_t *)' extern
| |-ParmVarDecl 0x5625ffb571a0 <col:35, col:45> col:45 __thread_id 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x5625ffb57218 <line:659:7, col:20> col:20 __clock_id '__clockid_t *'
| |-NoThrowAttr 0x5625ffb57408 <line:660:22>
| `-NonNullAttr 0x5625ffb57460 <col:63, col:77> 2
|-FunctionDecl 0x5625ffb578a8 <line:661:1, line:663:70> line:661:12 pthread_atfork 'int (void (*)(void), void (*)(void), void (*)(void))' extern
| |-ParmVarDecl 0x5625ffb57540 <col:28, col:51> col:35 __prepare 'void (*)(void)'
| |-ParmVarDecl 0x5625ffb57650 <line:662:7, col:29> col:14 __parent 'void (*)(void)'
| |-ParmVarDecl 0x5625ffb57760 <line:663:7, col:28> col:14 __child 'void (*)(void)'
| `-NoThrowAttr 0x5625ffb57960 <col:47>
|-FunctionDecl 0x5625ffb57af0 <line:665:1, col:20> col:8 used P0 'void *(void *)'
| `-ParmVarDecl 0x5625ffb579d0 <col:11, col:17> col:17 arg 'void *'
|-FunctionDecl 0x5625ffb57c48 <line:666:1, col:20> col:8 used P1 'void *(void *)'
| `-ParmVarDecl 0x5625ffb57bb0 <col:11, col:17> col:17 arg 'void *'
|-FunctionDecl 0x5625ffb57da0 <line:667:1, col:20> col:8 used P2 'void *(void *)'
| `-ParmVarDecl 0x5625ffb57d08 <col:11, col:17> col:17 arg 'void *'
|-FunctionDecl 0x5625ffb57e68 <line:668:1, col:12> col:6 fence 'void ()'
|-FunctionDecl 0x5625ffb57f28 <line:669:1, col:12> col:6 isync 'void ()'
|-FunctionDecl 0x5625ffb57fe8 <line:670:1, col:14> col:6 lwfence 'void ()'
|-VarDecl 0x5625ffb580a0 <line:671:1, col:5> col:5 used __unbuffered_cnt 'int'
|-VarDecl 0x5625ffb58120 prev 0x5625ffb580a0 <line:672:1, col:24> col:5 used __unbuffered_cnt 'int' cinit
| `-IntegerLiteral 0x5625ffb58188 <col:24> 'int' 0
|-VarDecl 0x5625ffb581c0 <line:673:1, col:5> col:5 used __unbuffered_p0_EAX 'int'
|-VarDecl 0x5625ffb58240 prev 0x5625ffb581c0 <line:674:1, col:27> col:5 used __unbuffered_p0_EAX 'int' cinit
| `-IntegerLiteral 0x5625ffb582a8 <col:27> 'int' 0
|-VarDecl 0x5625ffb582e0 <line:675:1, col:5> col:5 used __unbuffered_p1_EAX 'int'
|-VarDecl 0x5625ffb58360 prev 0x5625ffb582e0 <line:676:1, col:27> col:5 used __unbuffered_p1_EAX 'int' cinit
| `-IntegerLiteral 0x5625ffb583c8 <col:27> 'int' 0
|-VarDecl 0x5625ffb583f8 <line:677:1, col:7> col:7 __unbuffered_p1_EAX$flush_delayed '_Bool'
|-VarDecl 0x5625ffb58478 <line:678:1, col:5> col:5 __unbuffered_p1_EAX$mem_tmp 'int'
|-VarDecl 0x5625ffb584f0 <line:679:1, col:7> col:7 __unbuffered_p1_EAX$r_buff0_thd0 '_Bool'
|-VarDecl 0x5625ffb58568 <line:680:1, col:7> col:7 __unbuffered_p1_EAX$r_buff0_thd1 '_Bool'
|-VarDecl 0x5625ffb585e0 <line:681:1, col:7> col:7 __unbuffered_p1_EAX$r_buff0_thd2 '_Bool'
|-VarDecl 0x5625ffb58658 <line:682:1, col:7> col:7 __unbuffered_p1_EAX$r_buff0_thd3 '_Bool'
|-VarDecl 0x5625ffb586d0 <line:683:1, col:7> col:7 __unbuffered_p1_EAX$r_buff1_thd0 '_Bool'
|-VarDecl 0x5625ffb58748 <line:684:1, col:7> col:7 __unbuffered_p1_EAX$r_buff1_thd1 '_Bool'
|-VarDecl 0x5625ffb587c0 <line:685:1, col:7> col:7 __unbuffered_p1_EAX$r_buff1_thd2 '_Bool'
|-VarDecl 0x5625ffb58838 <line:686:1, col:7> col:7 __unbuffered_p1_EAX$r_buff1_thd3 '_Bool'
|-VarDecl 0x5625ffb588b0 <line:687:1, col:7> col:7 used __unbuffered_p1_EAX$read_delayed '_Bool'
|-VarDecl 0x5625ffb58930 <line:688:1, col:6> col:6 used __unbuffered_p1_EAX$read_delayed_var 'int *'
|-VarDecl 0x5625ffb589b0 <line:689:1, col:5> col:5 __unbuffered_p1_EAX$w_buff0 'int'
|-VarDecl 0x5625ffb58a28 <line:690:1, col:7> col:7 __unbuffered_p1_EAX$w_buff0_used '_Bool'
|-VarDecl 0x5625ffb58b00 <line:691:1, col:5> col:5 __unbuffered_p1_EAX$w_buff1 'int'
|-VarDecl 0x5625ffb58b78 <line:692:1, col:7> col:7 __unbuffered_p1_EAX$w_buff1_used '_Bool'
|-VarDecl 0x5625ffb58bf0 <line:693:1, col:7> col:7 used main$tmp_guard0 '_Bool'
|-VarDecl 0x5625ffb58c68 <line:694:1, col:7> col:7 used main$tmp_guard1 '_Bool'
|-VarDecl 0x5625ffb58ce8 <line:695:1, col:5> col:5 used x 'int'
|-VarDecl 0x5625ffb58d68 prev 0x5625ffb58ce8 <line:696:1, col:9> col:5 used x 'int' cinit
| `-IntegerLiteral 0x5625ffb58dd0 <col:9> 'int' 0
|-VarDecl 0x5625ffb58e00 <line:697:1, col:7> col:7 used x$flush_delayed '_Bool'
|-VarDecl 0x5625ffb58e80 <line:698:1, col:5> col:5 used x$mem_tmp 'int'
|-VarDecl 0x5625ffb58ef8 <line:699:1, col:7> col:7 used x$r_buff0_thd0 '_Bool'
|-VarDecl 0x5625ffb58f70 <line:700:1, col:7> col:7 used x$r_buff0_thd1 '_Bool'
|-VarDecl 0x5625ffb58fe8 <line:701:1, col:7> col:7 used x$r_buff0_thd2 '_Bool'
|-VarDecl 0x5625ffb59060 <line:702:1, col:7> col:7 used x$r_buff0_thd3 '_Bool'
|-VarDecl 0x5625ffb590d8 <line:703:1, col:7> col:7 used x$r_buff1_thd0 '_Bool'
|-VarDecl 0x5625ffb59150 <line:704:1, col:7> col:7 used x$r_buff1_thd1 '_Bool'
|-VarDecl 0x5625ffb591c8 <line:705:1, col:7> col:7 used x$r_buff1_thd2 '_Bool'
|-VarDecl 0x5625ffb59240 <line:706:1, col:7> col:7 used x$r_buff1_thd3 '_Bool'
|-VarDecl 0x5625ffb592b8 <line:707:1, col:7> col:7 x$read_delayed '_Bool'
|-VarDecl 0x5625ffb59338 <line:708:1, col:6> col:6 x$read_delayed_var 'int *'
|-VarDecl 0x5625ffb593b8 <line:709:1, col:5> col:5 used x$w_buff0 'int'
|-VarDecl 0x5625ffb59430 <line:710:1, col:7> col:7 used x$w_buff0_used '_Bool'
|-VarDecl 0x5625ffb594b0 <line:711:1, col:5> col:5 used x$w_buff1 'int'
|-VarDecl 0x5625ffb59528 <line:712:1, col:7> col:7 used x$w_buff1_used '_Bool'
|-VarDecl 0x5625ffb595a8 <line:713:1, col:5> col:5 used y 'int'
|-VarDecl 0x5625ffb59628 prev 0x5625ffb595a8 <line:714:1, col:9> col:5 used y 'int' cinit
| `-IntegerLiteral 0x5625ffb59690 <col:9> 'int' 0
|-VarDecl 0x5625ffb596c0 <line:715:1, col:7> col:7 used weak$$choice0 '_Bool'
|-VarDecl 0x5625ffb59738 <line:716:1, col:7> col:7 used weak$$choice1 '_Bool'
|-VarDecl 0x5625ffb597b0 <line:717:1, col:7> col:7 used weak$$choice2 '_Bool'
|-FunctionDecl 0x5625ffb598c8 prev 0x5625ffb57af0 <line:718:1, line:746:1> line:718:8 used P0 'void *(void *)'
| |-ParmVarDecl 0x5625ffb59830 <col:11, col:17> col:17 arg 'void *'
| `-CompoundStmt 0x5625ffb5c108 <line:719:1, line:746:1>
|   |-CallExpr 0x5625ffb599d8 <line:720:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x5625ffb599c0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5625ffb59970 <col:3> 'void ()' Function 0x5625ffafee40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x5625ffb59a50 <line:721:3, col:25> 'int' '='
|   | |-DeclRefExpr 0x5625ffb599f8 <col:3> 'int' lvalue Var 0x5625ffb58240 '__unbuffered_p0_EAX' 'int'
|   | `-ImplicitCastExpr 0x5625ffb59a38 <col:25> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x5625ffb59a18 <col:25> 'int' lvalue Var 0x5625ffb59628 'y' 'int'
|   |-CallExpr 0x5625ffb59aa8 <line:722:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x5625ffb59a90 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5625ffb59a70 <col:3> 'void ()' Function 0x5625ffafef00 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x5625ffb5ab20 <line:723:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x5625ffb59ae8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5625ffb59ac8 <col:3> 'void ()' Function 0x5625ffafee40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x5625ffb5ab98 <line:724:3, col:15> 'int' '='
|   | |-DeclRefExpr 0x5625ffb5ab40 <col:3> 'int' lvalue Var 0x5625ffb594b0 'x$w_buff1' 'int'
|   | `-ImplicitCastExpr 0x5625ffb5ab80 <col:15> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x5625ffb5ab60 <col:15> 'int' lvalue Var 0x5625ffb593b8 'x$w_buff0' 'int'
|   |-BinaryOperator 0x5625ffb5abf8 <line:725:3, col:15> 'int' '='
|   | |-DeclRefExpr 0x5625ffb5abb8 <col:3> 'int' lvalue Var 0x5625ffb593b8 'x$w_buff0' 'int'
|   | `-IntegerLiteral 0x5625ffb5abd8 <col:15> 'int' 1
|   |-BinaryOperator 0x5625ffb5ac70 <line:726:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x5625ffb5ac18 <col:3> '_Bool' lvalue Var 0x5625ffb59528 'x$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x5625ffb5ac58 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x5625ffb5ac38 <col:20> '_Bool' lvalue Var 0x5625ffb59430 'x$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x5625ffb5ad08 <line:727:3, col:27> '_Bool' '='
|   | |-DeclRefExpr 0x5625ffb5ac90 <col:3> '_Bool' lvalue Var 0x5625ffb59430 'x$w_buff0_used' '_Bool'
|   | `-CStyleCastExpr 0x5625ffb5ace0 <col:20, col:27> '_Bool' <IntegralToBoolean>
|   |   `-IntegerLiteral 0x5625ffb5acb0 <col:27> 'int' 1
|   |-CallExpr 0x5625ffb5ae88 <line:728:3, col:56> 'void'
|   | |-ImplicitCastExpr 0x5625ffb5ae70 <col:3> 'void (*)(int)' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x5625ffb5ad28 <col:3> 'void (int)' Function 0x5625ffafebc8 '__VERIFIER_assert' 'void (int)'
|   | `-UnaryOperator 0x5625ffb5ae28 <col:21, col:55> 'int' prefix '!' cannot overflow
|   |   `-ParenExpr 0x5625ffb5ae08 <col:22, col:55> 'int'
|   |     `-BinaryOperator 0x5625ffb5ade8 <col:23, col:41> 'int' '&&'
|   |       |-ImplicitCastExpr 0x5625ffb5ada0 <col:23> 'int' <IntegralCast>
|   |       | `-ImplicitCastExpr 0x5625ffb5ad88 <col:23> '_Bool' <LValueToRValue>
|   |       |   `-DeclRefExpr 0x5625ffb5ad48 <col:23> '_Bool' lvalue Var 0x5625ffb59528 'x$w_buff1_used' '_Bool'
|   |       `-ImplicitCastExpr 0x5625ffb5add0 <col:41> 'int' <IntegralCast>
|   |         `-ImplicitCastExpr 0x5625ffb5adb8 <col:41> '_Bool' <LValueToRValue>
|   |           `-DeclRefExpr 0x5625ffb5ad68 <col:41> '_Bool' lvalue Var 0x5625ffb59430 'x$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x5625ffb5af08 <line:729:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x5625ffb5aeb0 <col:3> '_Bool' lvalue Var 0x5625ffb590d8 'x$r_buff1_thd0' '_Bool'
|   | `-ImplicitCastExpr 0x5625ffb5aef0 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x5625ffb5aed0 <col:20> '_Bool' lvalue Var 0x5625ffb58ef8 'x$r_buff0_thd0' '_Bool'
|   |-BinaryOperator 0x5625ffb5af80 <line:730:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x5625ffb5af28 <col:3> '_Bool' lvalue Var 0x5625ffb59150 'x$r_buff1_thd1' '_Bool'
|   | `-ImplicitCastExpr 0x5625ffb5af68 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x5625ffb5af48 <col:20> '_Bool' lvalue Var 0x5625ffb58f70 'x$r_buff0_thd1' '_Bool'
|   |-BinaryOperator 0x5625ffb5aff8 <line:731:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x5625ffb5afa0 <col:3> '_Bool' lvalue Var 0x5625ffb591c8 'x$r_buff1_thd2' '_Bool'
|   | `-ImplicitCastExpr 0x5625ffb5afe0 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x5625ffb5afc0 <col:20> '_Bool' lvalue Var 0x5625ffb58fe8 'x$r_buff0_thd2' '_Bool'
|   |-BinaryOperator 0x5625ffb5b070 <line:732:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x5625ffb5b018 <col:3> '_Bool' lvalue Var 0x5625ffb59240 'x$r_buff1_thd3' '_Bool'
|   | `-ImplicitCastExpr 0x5625ffb5b058 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x5625ffb5b038 <col:20> '_Bool' lvalue Var 0x5625ffb59060 'x$r_buff0_thd3' '_Bool'
|   |-BinaryOperator 0x5625ffb5b108 <line:733:3, col:27> '_Bool' '='
|   | |-DeclRefExpr 0x5625ffb5b090 <col:3> '_Bool' lvalue Var 0x5625ffb58f70 'x$r_buff0_thd1' '_Bool'
|   | `-CStyleCastExpr 0x5625ffb5b0e0 <col:20, col:27> '_Bool' <IntegralToBoolean>
|   |   `-IntegerLiteral 0x5625ffb5b0b0 <col:27> 'int' 1
|   |-CallExpr 0x5625ffb5b160 <line:734:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x5625ffb5b148 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5625ffb5b128 <col:3> 'void ()' Function 0x5625ffafef00 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x5625ffb5b1b8 <line:735:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x5625ffb5b1a0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5625ffb5b180 <col:3> 'void ()' Function 0x5625ffafee40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x5625ffb5b4a0 <line:736:3, col:103> 'int' '='
|   | |-DeclRefExpr 0x5625ffb5b1d8 <col:3> 'int' lvalue Var 0x5625ffb58d68 'x' 'int'
|   | `-ConditionalOperator 0x5625ffb5b470 <col:7, col:103> 'int'
|   |   |-BinaryOperator 0x5625ffb5b298 <col:7, col:25> 'int' '&&'
|   |   | |-ImplicitCastExpr 0x5625ffb5b250 <col:7> 'int' <IntegralCast>
|   |   | | `-ImplicitCastExpr 0x5625ffb5b238 <col:7> '_Bool' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x5625ffb5b1f8 <col:7> '_Bool' lvalue Var 0x5625ffb59430 'x$w_buff0_used' '_Bool'
|   |   | `-ImplicitCastExpr 0x5625ffb5b280 <col:25> 'int' <IntegralCast>
|   |   |   `-ImplicitCastExpr 0x5625ffb5b268 <col:25> '_Bool' <LValueToRValue>
|   |   |     `-DeclRefExpr 0x5625ffb5b218 <col:25> '_Bool' lvalue Var 0x5625ffb58f70 'x$r_buff0_thd1' '_Bool'
|   |   |-ImplicitCastExpr 0x5625ffb5b458 <col:42> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x5625ffb5b2b8 <col:42> 'int' lvalue Var 0x5625ffb593b8 'x$w_buff0' 'int'
|   |   `-ParenExpr 0x5625ffb5b438 <col:54, col:103> 'int'
|   |     `-ConditionalOperator 0x5625ffb5b408 <col:55, col:102> 'int'
|   |       |-BinaryOperator 0x5625ffb5b378 <col:55, col:73> 'int' '&&'
|   |       | |-ImplicitCastExpr 0x5625ffb5b330 <col:55> 'int' <IntegralCast>
|   |       | | `-ImplicitCastExpr 0x5625ffb5b318 <col:55> '_Bool' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x5625ffb5b2d8 <col:55> '_Bool' lvalue Var 0x5625ffb59528 'x$w_buff1_used' '_Bool'
|   |       | `-ImplicitCastExpr 0x5625ffb5b360 <col:73> 'int' <IntegralCast>
|   |       |   `-ImplicitCastExpr 0x5625ffb5b348 <col:73> '_Bool' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x5625ffb5b2f8 <col:73> '_Bool' lvalue Var 0x5625ffb59150 'x$r_buff1_thd1' '_Bool'
|   |       |-ImplicitCastExpr 0x5625ffb5b3d8 <col:90> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x5625ffb5b398 <col:90> 'int' lvalue Var 0x5625ffb594b0 'x$w_buff1' 'int'
|   |       `-ImplicitCastExpr 0x5625ffb5b3f0 <col:102> 'int' <LValueToRValue>
|   |         `-DeclRefExpr 0x5625ffb5b3b8 <col:102> 'int' lvalue Var 0x5625ffb58d68 'x' 'int'
|   |-BinaryOperator 0x5625ffb5b6a8 <line:737:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x5625ffb5b4c0 <col:3> '_Bool' lvalue Var 0x5625ffb59430 'x$w_buff0_used' '_Bool'
|   | `-ImplicitCastExpr 0x5625ffb5b690 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x5625ffb5b660 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x5625ffb5b580 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x5625ffb5b538 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x5625ffb5b520 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x5625ffb5b4e0 <col:20> '_Bool' lvalue Var 0x5625ffb59430 'x$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x5625ffb5b568 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x5625ffb5b550 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x5625ffb5b500 <col:38> '_Bool' lvalue Var 0x5625ffb58f70 'x$r_buff0_thd1' '_Bool'
|   |     |-ImplicitCastExpr 0x5625ffb5b618 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x5625ffb5b5d0 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x5625ffb5b5a0 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x5625ffb5b648 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x5625ffb5b630 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x5625ffb5b5f8 <col:66> '_Bool' lvalue Var 0x5625ffb59430 'x$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x5625ffb5b990 <line:738:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x5625ffb5b6c8 <col:3> '_Bool' lvalue Var 0x5625ffb59528 'x$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x5625ffb5b978 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x5625ffb5b948 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x5625ffb5b868 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x5625ffb5b788 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x5625ffb5b740 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x5625ffb5b728 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x5625ffb5b6e8 <col:20> '_Bool' lvalue Var 0x5625ffb59430 'x$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x5625ffb5b770 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x5625ffb5b758 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x5625ffb5b708 <col:38> '_Bool' lvalue Var 0x5625ffb58f70 'x$r_buff0_thd1' '_Bool'
|   |     | `-BinaryOperator 0x5625ffb5b848 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x5625ffb5b800 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x5625ffb5b7e8 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x5625ffb5b7a8 <col:56> '_Bool' lvalue Var 0x5625ffb59528 'x$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x5625ffb5b830 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x5625ffb5b818 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x5625ffb5b7c8 <col:74> '_Bool' lvalue Var 0x5625ffb59150 'x$r_buff1_thd1' '_Bool'
|   |     |-ImplicitCastExpr 0x5625ffb5b900 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x5625ffb5b8b8 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x5625ffb5b888 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x5625ffb5b930 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x5625ffb5b918 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x5625ffb5b8e0 <col:102> '_Bool' lvalue Var 0x5625ffb59528 'x$w_buff1_used' '_Bool'
|   |-BinaryOperator 0x5625ffb5bba8 <line:739:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x5625ffb5b9b0 <col:3> '_Bool' lvalue Var 0x5625ffb58f70 'x$r_buff0_thd1' '_Bool'
|   | `-ImplicitCastExpr 0x5625ffb5bb90 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x5625ffb5bb60 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x5625ffb5ba70 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x5625ffb5ba28 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x5625ffb5ba10 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x5625ffb5b9d0 <col:20> '_Bool' lvalue Var 0x5625ffb59430 'x$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x5625ffb5ba58 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x5625ffb5ba40 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x5625ffb5b9f0 <col:38> '_Bool' lvalue Var 0x5625ffb58f70 'x$r_buff0_thd1' '_Bool'
|   |     |-ImplicitCastExpr 0x5625ffb5bb08 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x5625ffb5bac0 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x5625ffb5ba90 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x5625ffb5bb48 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x5625ffb5bb30 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x5625ffb5bae8 <col:66> '_Bool' lvalue Var 0x5625ffb58f70 'x$r_buff0_thd1' '_Bool'
|   |-BinaryOperator 0x5625ffb5be90 <line:740:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x5625ffb5bbc8 <col:3> '_Bool' lvalue Var 0x5625ffb59150 'x$r_buff1_thd1' '_Bool'
|   | `-ImplicitCastExpr 0x5625ffb5be78 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x5625ffb5be48 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x5625ffb5bd68 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x5625ffb5bc88 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x5625ffb5bc40 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x5625ffb5bc28 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x5625ffb5bbe8 <col:20> '_Bool' lvalue Var 0x5625ffb59430 'x$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x5625ffb5bc70 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x5625ffb5bc58 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x5625ffb5bc08 <col:38> '_Bool' lvalue Var 0x5625ffb58f70 'x$r_buff0_thd1' '_Bool'
|   |     | `-BinaryOperator 0x5625ffb5bd48 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x5625ffb5bd00 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x5625ffb5bce8 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x5625ffb5bca8 <col:56> '_Bool' lvalue Var 0x5625ffb59528 'x$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x5625ffb5bd30 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x5625ffb5bd18 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x5625ffb5bcc8 <col:74> '_Bool' lvalue Var 0x5625ffb59150 'x$r_buff1_thd1' '_Bool'
|   |     |-ImplicitCastExpr 0x5625ffb5be00 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x5625ffb5bdb8 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x5625ffb5bd88 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x5625ffb5be30 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x5625ffb5be18 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x5625ffb5bde0 <col:102> '_Bool' lvalue Var 0x5625ffb59150 'x$r_buff1_thd1' '_Bool'
|   |-CallExpr 0x5625ffb5bee8 <line:741:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x5625ffb5bed0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5625ffb5beb0 <col:3> 'void ()' Function 0x5625ffafef00 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x5625ffb5bf40 <line:742:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x5625ffb5bf28 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5625ffb5bf08 <col:3> 'void ()' Function 0x5625ffafee40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x5625ffb5bff8 <line:743:3, col:41> 'int' '='
|   | |-DeclRefExpr 0x5625ffb5bf60 <col:3> 'int' lvalue Var 0x5625ffb58120 '__unbuffered_cnt' 'int'
|   | `-BinaryOperator 0x5625ffb5bfd8 <col:22, col:41> 'int' '+'
|   |   |-ImplicitCastExpr 0x5625ffb5bfc0 <col:22> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x5625ffb5bf80 <col:22> 'int' lvalue Var 0x5625ffb58120 '__unbuffered_cnt' 'int'
|   |   `-IntegerLiteral 0x5625ffb5bfa0 <col:41> 'int' 1
|   |-CallExpr 0x5625ffb5c050 <line:744:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x5625ffb5c038 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5625ffb5c018 <col:3> 'void ()' Function 0x5625ffafef00 '__VERIFIER_atomic_end' 'void ()'
|   `-ReturnStmt 0x5625ffb5c0f8 <line:745:3, col:36>
|     `-CallExpr 0x5625ffb5c0d8 <col:10, col:36> 'void *'
|       `-ImplicitCastExpr 0x5625ffb5c0c0 <col:10> 'void *(*)(void)' <FunctionToPointerDecay>
|         `-DeclRefExpr 0x5625ffb5c070 <col:10> 'void *(void)' Function 0x5625ffafe958 '__VERIFIER_nondet_pointer' 'void *(void)'
|-FunctionDecl 0x5625ffb5c298 prev 0x5625ffb57c48 <line:747:1, line:782:1> line:747:8 used P1 'void *(void *)'
| |-ParmVarDecl 0x5625ffb5c200 <col:11, col:17> col:17 arg 'void *'
| `-CompoundStmt 0x5625ffb61858 <line:748:1, line:782:1>
|   |-CallExpr 0x5625ffb5c378 <line:749:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x5625ffb5c360 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5625ffb5c340 <col:3> 'void ()' Function 0x5625ffafee40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x5625ffb5c428 <line:750:3, col:45> '_Bool' '='
|   | |-DeclRefExpr 0x5625ffb5c398 <col:3> '_Bool' lvalue Var 0x5625ffb596c0 'weak$$choice0' '_Bool'
|   | `-ImplicitCastExpr 0x5625ffb5c410 <col:19, col:45> '_Bool' <PointerToBoolean>
|   |   `-CallExpr 0x5625ffb5c3f0 <col:19, col:45> 'void *'
|   |     `-ImplicitCastExpr 0x5625ffb5c3d8 <col:19> 'void *(*)(void)' <FunctionToPointerDecay>
|   |       `-DeclRefExpr 0x5625ffb5c3b8 <col:19> 'void *(void)' Function 0x5625ffafe958 '__VERIFIER_nondet_pointer' 'void *(void)'
|   |-BinaryOperator 0x5625ffb5c4d8 <line:751:3, col:45> '_Bool' '='
|   | |-DeclRefExpr 0x5625ffb5c448 <col:3> '_Bool' lvalue Var 0x5625ffb597b0 'weak$$choice2' '_Bool'
|   | `-ImplicitCastExpr 0x5625ffb5c4c0 <col:19, col:45> '_Bool' <PointerToBoolean>
|   |   `-CallExpr 0x5625ffb5c4a0 <col:19, col:45> 'void *'
|   |     `-ImplicitCastExpr 0x5625ffb5c488 <col:19> 'void *(*)(void)' <FunctionToPointerDecay>
|   |       `-DeclRefExpr 0x5625ffb5c468 <col:19> 'void *(void)' Function 0x5625ffafe958 '__VERIFIER_nondet_pointer' 'void *(void)'
|   |-BinaryOperator 0x5625ffb5c550 <line:752:3, col:21> '_Bool' '='
|   | |-DeclRefExpr 0x5625ffb5c4f8 <col:3> '_Bool' lvalue Var 0x5625ffb58e00 'x$flush_delayed' '_Bool'
|   | `-ImplicitCastExpr 0x5625ffb5c538 <col:21> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x5625ffb5c518 <col:21> '_Bool' lvalue Var 0x5625ffb597b0 'weak$$choice2' '_Bool'
|   |-BinaryOperator 0x5625ffb5c5c8 <line:753:3, col:15> 'int' '='
|   | |-DeclRefExpr 0x5625ffb5c570 <col:3> 'int' lvalue Var 0x5625ffb58e80 'x$mem_tmp' 'int'
|   | `-ImplicitCastExpr 0x5625ffb5c5b0 <col:15> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x5625ffb5c590 <col:15> 'int' lvalue Var 0x5625ffb58d68 'x' 'int'
|   |-BinaryOperator 0x5625ffb5c678 <line:754:3, col:45> '_Bool' '='
|   | |-DeclRefExpr 0x5625ffb5c5e8 <col:3> '_Bool' lvalue Var 0x5625ffb59738 'weak$$choice1' '_Bool'
|   | `-ImplicitCastExpr 0x5625ffb5c660 <col:19, col:45> '_Bool' <PointerToBoolean>
|   |   `-CallExpr 0x5625ffb5c640 <col:19, col:45> 'void *'
|   |     `-ImplicitCastExpr 0x5625ffb5c628 <col:19> 'void *(*)(void)' <FunctionToPointerDecay>
|   |       `-DeclRefExpr 0x5625ffb5c608 <col:19> 'void *(void)' Function 0x5625ffafe958 '__VERIFIER_nondet_pointer' 'void *(void)'
|   |-BinaryOperator 0x5625ffb5d0b8 <line:755:3, col:363> 'int' '='
|   | |-DeclRefExpr 0x5625ffb5c698 <col:3> 'int' lvalue Var 0x5625ffb58d68 'x' 'int'
|   | `-ConditionalOperator 0x5625ffb5d088 <col:7, col:363> 'int'
|   |   |-UnaryOperator 0x5625ffb5c6f0 <col:7, col:8> 'int' prefix '!' cannot overflow
|   |   | `-ImplicitCastExpr 0x5625ffb5c6d8 <col:8> '_Bool' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x5625ffb5c6b8 <col:8> '_Bool' lvalue Var 0x5625ffb59430 'x$w_buff0_used' '_Bool'
|   |   |-ImplicitCastExpr 0x5625ffb5d070 <col:25> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x5625ffb5c708 <col:25> 'int' lvalue Var 0x5625ffb58d68 'x' 'int'
|   |   `-ParenExpr 0x5625ffb5d050 <col:29, col:363> 'int'
|   |     `-ConditionalOperator 0x5625ffb5d020 <col:30, col:362> 'int'
|   |       |-BinaryOperator 0x5625ffb5c7c8 <col:30, col:48> 'int' '&&'
|   |       | |-ImplicitCastExpr 0x5625ffb5c780 <col:30> 'int' <IntegralCast>
|   |       | | `-ImplicitCastExpr 0x5625ffb5c768 <col:30> '_Bool' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x5625ffb5c728 <col:30> '_Bool' lvalue Var 0x5625ffb59430 'x$w_buff0_used' '_Bool'
|   |       | `-ImplicitCastExpr 0x5625ffb5c7b0 <col:48> 'int' <IntegralCast>
|   |       |   `-ImplicitCastExpr 0x5625ffb5c798 <col:48> '_Bool' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x5625ffb5c748 <col:48> '_Bool' lvalue Var 0x5625ffb58fe8 'x$r_buff0_thd2' '_Bool'
|   |       |-ImplicitCastExpr 0x5625ffb5d008 <col:65> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x5625ffb5c7e8 <col:65> 'int' lvalue Var 0x5625ffb593b8 'x$w_buff0' 'int'
|   |       `-ParenExpr 0x5625ffb5cfe8 <col:77, col:362> 'int'
|   |         `-ConditionalOperator 0x5625ffb5cfb8 <col:78, col:361> 'int'
|   |           |-BinaryOperator 0x5625ffb5c988 <col:78, col:134> 'int' '&&'
|   |           | |-BinaryOperator 0x5625ffb5c918 <col:78, col:115> 'int' '&&'
|   |           | | |-BinaryOperator 0x5625ffb5c8a8 <col:78, col:97> 'int' '&&'
|   |           | | | |-ImplicitCastExpr 0x5625ffb5c890 <col:78> 'int' <IntegralCast>
|   |           | | | | `-ImplicitCastExpr 0x5625ffb5c878 <col:78> '_Bool' <LValueToRValue>
|   |           | | | |   `-DeclRefExpr 0x5625ffb5c808 <col:78> '_Bool' lvalue Var 0x5625ffb59430 'x$w_buff0_used' '_Bool'
|   |           | | | `-UnaryOperator 0x5625ffb5c860 <col:96, col:97> 'int' prefix '!' cannot overflow
|   |           | | |   `-ImplicitCastExpr 0x5625ffb5c848 <col:97> '_Bool' <LValueToRValue>
|   |           | | |     `-DeclRefExpr 0x5625ffb5c828 <col:97> '_Bool' lvalue Var 0x5625ffb591c8 'x$r_buff1_thd2' '_Bool'
|   |           | | `-ImplicitCastExpr 0x5625ffb5c900 <col:115> 'int' <IntegralCast>
|   |           | |   `-ImplicitCastExpr 0x5625ffb5c8e8 <col:115> '_Bool' <LValueToRValue>
|   |           | |     `-DeclRefExpr 0x5625ffb5c8c8 <col:115> '_Bool' lvalue Var 0x5625ffb59528 'x$w_buff1_used' '_Bool'
|   |           | `-UnaryOperator 0x5625ffb5c970 <col:133, col:134> 'int' prefix '!' cannot overflow
|   |           |   `-ImplicitCastExpr 0x5625ffb5c958 <col:134> '_Bool' <LValueToRValue>
|   |           |     `-DeclRefExpr 0x5625ffb5c938 <col:134> '_Bool' lvalue Var 0x5625ffb58fe8 'x$r_buff0_thd2' '_Bool'
|   |           |-ParenExpr 0x5625ffb5cb88 <col:151, col:211> 'int'
|   |           | `-ConditionalOperator 0x5625ffb5cb58 <col:152, col:210> 'int'
|   |           |   |-ImplicitCastExpr 0x5625ffb5cb10 <col:152> 'int' <IntegralCast>
|   |           |   | `-ImplicitCastExpr 0x5625ffb5caf8 <col:152> '_Bool' <LValueToRValue>
|   |           |   |   `-DeclRefExpr 0x5625ffb5c9a8 <col:152> '_Bool' lvalue Var 0x5625ffb596c0 'weak$$choice0' '_Bool'
|   |           |   |-ImplicitCastExpr 0x5625ffb5cb40 <col:168> 'int' <LValueToRValue>
|   |           |   | `-DeclRefExpr 0x5625ffb5c9c8 <col:168> 'int' lvalue Var 0x5625ffb58d68 'x' 'int'
|   |           |   `-ParenExpr 0x5625ffb5cad8 <col:172, col:210> 'int'
|   |           |     `-ConditionalOperator 0x5625ffb5caa8 <col:173, col:201> 'int'
|   |           |       |-ImplicitCastExpr 0x5625ffb5ca60 <col:173> 'int' <IntegralCast>
|   |           |       | `-ImplicitCastExpr 0x5625ffb5ca48 <col:173> '_Bool' <LValueToRValue>
|   |           |       |   `-DeclRefExpr 0x5625ffb5c9e8 <col:173> '_Bool' lvalue Var 0x5625ffb59738 'weak$$choice1' '_Bool'
|   |           |       |-ImplicitCastExpr 0x5625ffb5ca78 <col:189> 'int' <LValueToRValue>
|   |           |       | `-DeclRefExpr 0x5625ffb5ca08 <col:189> 'int' lvalue Var 0x5625ffb593b8 'x$w_buff0' 'int'
|   |           |       `-ImplicitCastExpr 0x5625ffb5ca90 <col:201> 'int' <LValueToRValue>
|   |           |         `-DeclRefExpr 0x5625ffb5ca28 <col:201> 'int' lvalue Var 0x5625ffb594b0 'x$w_buff1' 'int'
|   |           `-ParenExpr 0x5625ffb5cf98 <col:215, col:361> 'int'
|   |             `-ConditionalOperator 0x5625ffb5cf68 <col:216, col:360> 'int'
|   |               |-BinaryOperator 0x5625ffb5cd28 <col:216, col:271> 'int' '&&'
|   |               | |-BinaryOperator 0x5625ffb5ccb8 <col:216, col:252> 'int' '&&'
|   |               | | |-BinaryOperator 0x5625ffb5cc48 <col:216, col:234> 'int' '&&'
|   |               | | | |-ImplicitCastExpr 0x5625ffb5cc00 <col:216> 'int' <IntegralCast>
|   |               | | | | `-ImplicitCastExpr 0x5625ffb5cbe8 <col:216> '_Bool' <LValueToRValue>
|   |               | | | |   `-DeclRefExpr 0x5625ffb5cba8 <col:216> '_Bool' lvalue Var 0x5625ffb59430 'x$w_buff0_used' '_Bool'
|   |               | | | `-ImplicitCastExpr 0x5625ffb5cc30 <col:234> 'int' <IntegralCast>
|   |               | | |   `-ImplicitCastExpr 0x5625ffb5cc18 <col:234> '_Bool' <LValueToRValue>
|   |               | | |     `-DeclRefExpr 0x5625ffb5cbc8 <col:234> '_Bool' lvalue Var 0x5625ffb591c8 'x$r_buff1_thd2' '_Bool'
|   |               | | `-ImplicitCastExpr 0x5625ffb5cca0 <col:252> 'int' <IntegralCast>
|   |               | |   `-ImplicitCastExpr 0x5625ffb5cc88 <col:252> '_Bool' <LValueToRValue>
|   |               | |     `-DeclRefExpr 0x5625ffb5cc68 <col:252> '_Bool' lvalue Var 0x5625ffb59528 'x$w_buff1_used' '_Bool'
|   |               | `-UnaryOperator 0x5625ffb5cd10 <col:270, col:271> 'int' prefix '!' cannot overflow
|   |               |   `-ImplicitCastExpr 0x5625ffb5ccf8 <col:271> '_Bool' <LValueToRValue>
|   |               |     `-DeclRefExpr 0x5625ffb5ccd8 <col:271> '_Bool' lvalue Var 0x5625ffb58fe8 'x$r_buff0_thd2' '_Bool'
|   |               |-ParenExpr 0x5625ffb5ce38 <col:288, col:326> 'int'
|   |               | `-ConditionalOperator 0x5625ffb5ce08 <col:289, col:317> 'int'
|   |               |   |-ImplicitCastExpr 0x5625ffb5cdc0 <col:289> 'int' <IntegralCast>
|   |               |   | `-ImplicitCastExpr 0x5625ffb5cda8 <col:289> '_Bool' <LValueToRValue>
|   |               |   |   `-DeclRefExpr 0x5625ffb5cd48 <col:289> '_Bool' lvalue Var 0x5625ffb596c0 'weak$$choice0' '_Bool'
|   |               |   |-ImplicitCastExpr 0x5625ffb5cdd8 <col:305> 'int' <LValueToRValue>
|   |               |   | `-DeclRefExpr 0x5625ffb5cd68 <col:305> 'int' lvalue Var 0x5625ffb594b0 'x$w_buff1' 'int'
|   |               |   `-ImplicitCastExpr 0x5625ffb5cdf0 <col:317> 'int' <LValueToRValue>
|   |               |     `-DeclRefExpr 0x5625ffb5cd88 <col:317> 'int' lvalue Var 0x5625ffb593b8 'x$w_buff0' 'int'
|   |               `-ParenExpr 0x5625ffb5cf48 <col:330, col:360> 'int'
|   |                 `-ConditionalOperator 0x5625ffb5cf18 <col:331, col:359> 'int'
|   |                   |-ImplicitCastExpr 0x5625ffb5ced0 <col:331> 'int' <IntegralCast>
|   |                   | `-ImplicitCastExpr 0x5625ffb5ceb8 <col:331> '_Bool' <LValueToRValue>
|   |                   |   `-DeclRefExpr 0x5625ffb5ce58 <col:331> '_Bool' lvalue Var 0x5625ffb596c0 'weak$$choice0' '_Bool'
|   |                   |-ImplicitCastExpr 0x5625ffb5cee8 <col:347> 'int' <LValueToRValue>
|   |                   | `-DeclRefExpr 0x5625ffb5ce78 <col:347> 'int' lvalue Var 0x5625ffb593b8 'x$w_buff0' 'int'
|   |                   `-ImplicitCastExpr 0x5625ffb5cf00 <col:359> 'int' <LValueToRValue>
|   |                     `-DeclRefExpr 0x5625ffb5ce98 <col:359> 'int' lvalue Var 0x5625ffb58d68 'x' 'int'
|   |-BinaryOperator 0x5625ffb5d858 <line:756:3, col:305> 'int' '='
|   | |-DeclRefExpr 0x5625ffb5d0d8 <col:3> 'int' lvalue Var 0x5625ffb593b8 'x$w_buff0' 'int'
|   | `-ConditionalOperator 0x5625ffb5d828 <col:15, col:305> 'int'
|   |   |-ImplicitCastExpr 0x5625ffb5d7f8 <col:15> 'int' <IntegralCast>
|   |   | `-ImplicitCastExpr 0x5625ffb5d7e0 <col:15> '_Bool' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x5625ffb5d0f8 <col:15> '_Bool' lvalue Var 0x5625ffb597b0 'weak$$choice2' '_Bool'
|   |   |-ImplicitCastExpr 0x5625ffb5d810 <col:31> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x5625ffb5d118 <col:31> 'int' lvalue Var 0x5625ffb593b8 'x$w_buff0' 'int'
|   |   `-ParenExpr 0x5625ffb5d7c0 <col:43, col:305> 'int'
|   |     `-ConditionalOperator 0x5625ffb5d790 <col:44, col:304> 'int'
|   |       |-UnaryOperator 0x5625ffb5d170 <col:44, col:45> 'int' prefix '!' cannot overflow
|   |       | `-ImplicitCastExpr 0x5625ffb5d158 <col:45> '_Bool' <LValueToRValue>
|   |       |   `-DeclRefExpr 0x5625ffb5d138 <col:45> '_Bool' lvalue Var 0x5625ffb59430 'x$w_buff0_used' '_Bool'
|   |       |-ImplicitCastExpr 0x5625ffb5d778 <col:62> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x5625ffb5d188 <col:62> 'int' lvalue Var 0x5625ffb593b8 'x$w_buff0' 'int'
|   |       `-ParenExpr 0x5625ffb5d758 <col:74, col:304> 'int'
|   |         `-ConditionalOperator 0x5625ffb5d728 <col:75, col:303> 'int'
|   |           |-BinaryOperator 0x5625ffb5d248 <col:75, col:93> 'int' '&&'
|   |           | |-ImplicitCastExpr 0x5625ffb5d200 <col:75> 'int' <IntegralCast>
|   |           | | `-ImplicitCastExpr 0x5625ffb5d1e8 <col:75> '_Bool' <LValueToRValue>
|   |           | |   `-DeclRefExpr 0x5625ffb5d1a8 <col:75> '_Bool' lvalue Var 0x5625ffb59430 'x$w_buff0_used' '_Bool'
|   |           | `-ImplicitCastExpr 0x5625ffb5d230 <col:93> 'int' <IntegralCast>
|   |           |   `-ImplicitCastExpr 0x5625ffb5d218 <col:93> '_Bool' <LValueToRValue>
|   |           |     `-DeclRefExpr 0x5625ffb5d1c8 <col:93> '_Bool' lvalue Var 0x5625ffb58fe8 'x$r_buff0_thd2' '_Bool'
|   |           |-ImplicitCastExpr 0x5625ffb5d710 <col:110> 'int' <LValueToRValue>
|   |           | `-DeclRefExpr 0x5625ffb5d268 <col:110> 'int' lvalue Var 0x5625ffb593b8 'x$w_buff0' 'int'
|   |           `-ParenExpr 0x5625ffb5d6f0 <col:122, col:303> 'int'
|   |             `-ConditionalOperator 0x5625ffb5d6c0 <col:123, col:302> 'int'
|   |               |-BinaryOperator 0x5625ffb5d408 <col:123, col:179> 'int' '&&'
|   |               | |-BinaryOperator 0x5625ffb5d398 <col:123, col:160> 'int' '&&'
|   |               | | |-BinaryOperator 0x5625ffb5d328 <col:123, col:142> 'int' '&&'
|   |               | | | |-ImplicitCastExpr 0x5625ffb5d310 <col:123> 'int' <IntegralCast>
|   |               | | | | `-ImplicitCastExpr 0x5625ffb5d2f8 <col:123> '_Bool' <LValueToRValue>
|   |               | | | |   `-DeclRefExpr 0x5625ffb5d288 <col:123> '_Bool' lvalue Var 0x5625ffb59430 'x$w_buff0_used' '_Bool'
|   |               | | | `-UnaryOperator 0x5625ffb5d2e0 <col:141, col:142> 'int' prefix '!' cannot overflow
|   |               | | |   `-ImplicitCastExpr 0x5625ffb5d2c8 <col:142> '_Bool' <LValueToRValue>
|   |               | | |     `-DeclRefExpr 0x5625ffb5d2a8 <col:142> '_Bool' lvalue Var 0x5625ffb591c8 'x$r_buff1_thd2' '_Bool'
|   |               | | `-ImplicitCastExpr 0x5625ffb5d380 <col:160> 'int' <IntegralCast>
|   |               | |   `-ImplicitCastExpr 0x5625ffb5d368 <col:160> '_Bool' <LValueToRValue>
|   |               | |     `-DeclRefExpr 0x5625ffb5d348 <col:160> '_Bool' lvalue Var 0x5625ffb59528 'x$w_buff1_used' '_Bool'
|   |               | `-UnaryOperator 0x5625ffb5d3f0 <col:178, col:179> 'int' prefix '!' cannot overflow
|   |               |   `-ImplicitCastExpr 0x5625ffb5d3d8 <col:179> '_Bool' <LValueToRValue>
|   |               |     `-DeclRefExpr 0x5625ffb5d3b8 <col:179> '_Bool' lvalue Var 0x5625ffb58fe8 'x$r_buff0_thd2' '_Bool'
|   |               |-ImplicitCastExpr 0x5625ffb5d6a8 <col:196> 'int' <LValueToRValue>
|   |               | `-DeclRefExpr 0x5625ffb5d428 <col:196> 'int' lvalue Var 0x5625ffb593b8 'x$w_buff0' 'int'
|   |               `-ParenExpr 0x5625ffb5d688 <col:208, col:302> 'int'
|   |                 `-ConditionalOperator 0x5625ffb5d658 <col:209, col:293> 'int'
|   |                   |-BinaryOperator 0x5625ffb5d5c8 <col:209, col:264> 'int' '&&'
|   |                   | |-BinaryOperator 0x5625ffb5d558 <col:209, col:245> 'int' '&&'
|   |                   | | |-BinaryOperator 0x5625ffb5d4e8 <col:209, col:227> 'int' '&&'
|   |                   | | | |-ImplicitCastExpr 0x5625ffb5d4a0 <col:209> 'int' <IntegralCast>
|   |                   | | | | `-ImplicitCastExpr 0x5625ffb5d488 <col:209> '_Bool' <LValueToRValue>
|   |                   | | | |   `-DeclRefExpr 0x5625ffb5d448 <col:209> '_Bool' lvalue Var 0x5625ffb59430 'x$w_buff0_used' '_Bool'
|   |                   | | | `-ImplicitCastExpr 0x5625ffb5d4d0 <col:227> 'int' <IntegralCast>
|   |                   | | |   `-ImplicitCastExpr 0x5625ffb5d4b8 <col:227> '_Bool' <LValueToRValue>
|   |                   | | |     `-DeclRefExpr 0x5625ffb5d468 <col:227> '_Bool' lvalue Var 0x5625ffb591c8 'x$r_buff1_thd2' '_Bool'
|   |                   | | `-ImplicitCastExpr 0x5625ffb5d540 <col:245> 'int' <IntegralCast>
|   |                   | |   `-ImplicitCastExpr 0x5625ffb5d528 <col:245> '_Bool' <LValueToRValue>
|   |                   | |     `-DeclRefExpr 0x5625ffb5d508 <col:245> '_Bool' lvalue Var 0x5625ffb59528 'x$w_buff1_used' '_Bool'
|   |                   | `-UnaryOperator 0x5625ffb5d5b0 <col:263, col:264> 'int' prefix '!' cannot overflow
|   |                   |   `-ImplicitCastExpr 0x5625ffb5d598 <col:264> '_Bool' <LValueToRValue>
|   |                   |     `-DeclRefExpr 0x5625ffb5d578 <col:264> '_Bool' lvalue Var 0x5625ffb58fe8 'x$r_buff0_thd2' '_Bool'
|   |                   |-ImplicitCastExpr 0x5625ffb5d628 <col:281> 'int' <LValueToRValue>
|   |                   | `-DeclRefExpr 0x5625ffb5d5e8 <col:281> 'int' lvalue Var 0x5625ffb593b8 'x$w_buff0' 'int'
|   |                   `-ImplicitCastExpr 0x5625ffb5d640 <col:293> 'int' <LValueToRValue>
|   |                     `-DeclRefExpr 0x5625ffb5d608 <col:293> 'int' lvalue Var 0x5625ffb593b8 'x$w_buff0' 'int'
|   |-BinaryOperator 0x5625ffb5e010 <line:757:3, col:305> 'int' '='
|   | |-DeclRefExpr 0x5625ffb5d878 <col:3> 'int' lvalue Var 0x5625ffb594b0 'x$w_buff1' 'int'
|   | `-ConditionalOperator 0x5625ffb5dfe0 <col:15, col:305> 'int'
|   |   |-ImplicitCastExpr 0x5625ffb5dfb0 <col:15> 'int' <IntegralCast>
|   |   | `-ImplicitCastExpr 0x5625ffb5df98 <col:15> '_Bool' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x5625ffb5d898 <col:15> '_Bool' lvalue Var 0x5625ffb597b0 'weak$$choice2' '_Bool'
|   |   |-ImplicitCastExpr 0x5625ffb5dfc8 <col:31> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x5625ffb5d8b8 <col:31> 'int' lvalue Var 0x5625ffb594b0 'x$w_buff1' 'int'
|   |   `-ParenExpr 0x5625ffb5df78 <col:43, col:305> 'int'
|   |     `-ConditionalOperator 0x5625ffb5df48 <col:44, col:304> 'int'
|   |       |-UnaryOperator 0x5625ffb5d910 <col:44, col:45> 'int' prefix '!' cannot overflow
|   |       | `-ImplicitCastExpr 0x5625ffb5d8f8 <col:45> '_Bool' <LValueToRValue>
|   |       |   `-DeclRefExpr 0x5625ffb5d8d8 <col:45> '_Bool' lvalue Var 0x5625ffb59430 'x$w_buff0_used' '_Bool'
|   |       |-ImplicitCastExpr 0x5625ffb5df30 <col:62> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x5625ffb5d928 <col:62> 'int' lvalue Var 0x5625ffb594b0 'x$w_buff1' 'int'
|   |       `-ParenExpr 0x5625ffb5df10 <col:74, col:304> 'int'
|   |         `-ConditionalOperator 0x5625ffb5dee0 <col:75, col:303> 'int'
|   |           |-BinaryOperator 0x5625ffb5d9e8 <col:75, col:93> 'int' '&&'
|   |           | |-ImplicitCastExpr 0x5625ffb5d9a0 <col:75> 'int' <IntegralCast>
|   |           | | `-ImplicitCastExpr 0x5625ffb5d988 <col:75> '_Bool' <LValueToRValue>
|   |           | |   `-DeclRefExpr 0x5625ffb5d948 <col:75> '_Bool' lvalue Var 0x5625ffb59430 'x$w_buff0_used' '_Bool'
|   |           | `-ImplicitCastExpr 0x5625ffb5d9d0 <col:93> 'int' <IntegralCast>
|   |           |   `-ImplicitCastExpr 0x5625ffb5d9b8 <col:93> '_Bool' <LValueToRValue>
|   |           |     `-DeclRefExpr 0x5625ffb5d968 <col:93> '_Bool' lvalue Var 0x5625ffb58fe8 'x$r_buff0_thd2' '_Bool'
|   |           |-ImplicitCastExpr 0x5625ffb5dec8 <col:110> 'int' <LValueToRValue>
|   |           | `-DeclRefExpr 0x5625ffb5da08 <col:110> 'int' lvalue Var 0x5625ffb594b0 'x$w_buff1' 'int'
|   |           `-ParenExpr 0x5625ffb5dea8 <col:122, col:303> 'int'
|   |             `-ConditionalOperator 0x5625ffb5de78 <col:123, col:302> 'int'
|   |               |-BinaryOperator 0x5625ffb5dbc0 <col:123, col:179> 'int' '&&'
|   |               | |-BinaryOperator 0x5625ffb5db50 <col:123, col:160> 'int' '&&'
|   |               | | |-BinaryOperator 0x5625ffb5dac8 <col:123, col:142> 'int' '&&'
|   |               | | | |-ImplicitCastExpr 0x5625ffb5dab0 <col:123> 'int' <IntegralCast>
|   |               | | | | `-ImplicitCastExpr 0x5625ffb5da98 <col:123> '_Bool' <LValueToRValue>
|   |               | | | |   `-DeclRefExpr 0x5625ffb5da28 <col:123> '_Bool' lvalue Var 0x5625ffb59430 'x$w_buff0_used' '_Bool'
|   |               | | | `-UnaryOperator 0x5625ffb5da80 <col:141, col:142> 'int' prefix '!' cannot overflow
|   |               | | |   `-ImplicitCastExpr 0x5625ffb5da68 <col:142> '_Bool' <LValueToRValue>
|   |               | | |     `-DeclRefExpr 0x5625ffb5da48 <col:142> '_Bool' lvalue Var 0x5625ffb591c8 'x$r_buff1_thd2' '_Bool'
|   |               | | `-ImplicitCastExpr 0x5625ffb5db20 <col:160> 'int' <IntegralCast>
|   |               | |   `-ImplicitCastExpr 0x5625ffb5db08 <col:160> '_Bool' <LValueToRValue>
|   |               | |     `-DeclRefExpr 0x5625ffb5dae8 <col:160> '_Bool' lvalue Var 0x5625ffb59528 'x$w_buff1_used' '_Bool'
|   |               | `-UnaryOperator 0x5625ffb5dba8 <col:178, col:179> 'int' prefix '!' cannot overflow
|   |               |   `-ImplicitCastExpr 0x5625ffb5db90 <col:179> '_Bool' <LValueToRValue>
|   |               |     `-DeclRefExpr 0x5625ffb5db70 <col:179> '_Bool' lvalue Var 0x5625ffb58fe8 'x$r_buff0_thd2' '_Bool'
|   |               |-ImplicitCastExpr 0x5625ffb5de60 <col:196> 'int' <LValueToRValue>
|   |               | `-DeclRefExpr 0x5625ffb5dbe0 <col:196> 'int' lvalue Var 0x5625ffb594b0 'x$w_buff1' 'int'
|   |               `-ParenExpr 0x5625ffb5de40 <col:208, col:302> 'int'
|   |                 `-ConditionalOperator 0x5625ffb5de10 <col:209, col:293> 'int'
|   |                   |-BinaryOperator 0x5625ffb5dd80 <col:209, col:264> 'int' '&&'
|   |                   | |-BinaryOperator 0x5625ffb5dd10 <col:209, col:245> 'int' '&&'
|   |                   | | |-BinaryOperator 0x5625ffb5dca0 <col:209, col:227> 'int' '&&'
|   |                   | | | |-ImplicitCastExpr 0x5625ffb5dc58 <col:209> 'int' <IntegralCast>
|   |                   | | | | `-ImplicitCastExpr 0x5625ffb5dc40 <col:209> '_Bool' <LValueToRValue>
|   |                   | | | |   `-DeclRefExpr 0x5625ffb5dc00 <col:209> '_Bool' lvalue Var 0x5625ffb59430 'x$w_buff0_used' '_Bool'
|   |                   | | | `-ImplicitCastExpr 0x5625ffb5dc88 <col:227> 'int' <IntegralCast>
|   |                   | | |   `-ImplicitCastExpr 0x5625ffb5dc70 <col:227> '_Bool' <LValueToRValue>
|   |                   | | |     `-DeclRefExpr 0x5625ffb5dc20 <col:227> '_Bool' lvalue Var 0x5625ffb591c8 'x$r_buff1_thd2' '_Bool'
|   |                   | | `-ImplicitCastExpr 0x5625ffb5dcf8 <col:245> 'int' <IntegralCast>
|   |                   | |   `-ImplicitCastExpr 0x5625ffb5dce0 <col:245> '_Bool' <LValueToRValue>
|   |                   | |     `-DeclRefExpr 0x5625ffb5dcc0 <col:245> '_Bool' lvalue Var 0x5625ffb59528 'x$w_buff1_used' '_Bool'
|   |                   | `-UnaryOperator 0x5625ffb5dd68 <col:263, col:264> 'int' prefix '!' cannot overflow
|   |                   |   `-ImplicitCastExpr 0x5625ffb5dd50 <col:264> '_Bool' <LValueToRValue>
|   |                   |     `-DeclRefExpr 0x5625ffb5dd30 <col:264> '_Bool' lvalue Var 0x5625ffb58fe8 'x$r_buff0_thd2' '_Bool'
|   |                   |-ImplicitCastExpr 0x5625ffb5dde0 <col:281> 'int' <LValueToRValue>
|   |                   | `-DeclRefExpr 0x5625ffb5dda0 <col:281> 'int' lvalue Var 0x5625ffb594b0 'x$w_buff1' 'int'
|   |                   `-ImplicitCastExpr 0x5625ffb5ddf8 <col:293> 'int' <LValueToRValue>
|   |                     `-DeclRefExpr 0x5625ffb5ddc0 <col:293> 'int' lvalue Var 0x5625ffb594b0 'x$w_buff1' 'int'
|   |-BinaryOperator 0x5625ffb5e8e8 <line:758:3, col:349> '_Bool' '='
|   | |-DeclRefExpr 0x5625ffb5e030 <col:3> '_Bool' lvalue Var 0x5625ffb59430 'x$w_buff0_used' '_Bool'
|   | `-ImplicitCastExpr 0x5625ffb5e8d0 <col:20, col:349> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x5625ffb5e8a0 <col:20, col:349> 'int'
|   |     |-ImplicitCastExpr 0x5625ffb5e858 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x5625ffb5e840 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x5625ffb5e050 <col:20> '_Bool' lvalue Var 0x5625ffb597b0 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x5625ffb5e888 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x5625ffb5e870 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x5625ffb5e070 <col:36> '_Bool' lvalue Var 0x5625ffb59430 'x$w_buff0_used' '_Bool'
|   |     `-ParenExpr 0x5625ffb5e820 <col:53, col:349> 'int'
|   |       `-ConditionalOperator 0x5625ffb5e7f0 <col:54, col:348> 'int'
|   |         |-UnaryOperator 0x5625ffb5e0c8 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | `-ImplicitCastExpr 0x5625ffb5e0b0 <col:55> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x5625ffb5e090 <col:55> '_Bool' lvalue Var 0x5625ffb59430 'x$w_buff0_used' '_Bool'
|   |         |-ImplicitCastExpr 0x5625ffb5e7d8 <col:72> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x5625ffb5e7c0 <col:72> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x5625ffb5e0e0 <col:72> '_Bool' lvalue Var 0x5625ffb59430 'x$w_buff0_used' '_Bool'
|   |         `-ParenExpr 0x5625ffb5e7a0 <col:89, col:348> 'int'
|   |           `-ConditionalOperator 0x5625ffb5e770 <col:90, col:347> 'int'
|   |             |-BinaryOperator 0x5625ffb5e1a0 <col:90, col:108> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x5625ffb5e158 <col:90> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x5625ffb5e140 <col:90> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x5625ffb5e100 <col:90> '_Bool' lvalue Var 0x5625ffb59430 'x$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x5625ffb5e188 <col:108> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x5625ffb5e170 <col:108> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x5625ffb5e120 <col:108> '_Bool' lvalue Var 0x5625ffb58fe8 'x$r_buff0_thd2' '_Bool'
|   |             |-ImplicitCastExpr 0x5625ffb5e758 <col:125, col:132> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x5625ffb5e1f0 <col:125, col:132> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x5625ffb5e1c0 <col:132> 'int' 0
|   |             `-ParenExpr 0x5625ffb5e738 <col:136, col:347> 'int'
|   |               `-ConditionalOperator 0x5625ffb5e708 <col:137, col:346> 'int'
|   |                 |-BinaryOperator 0x5625ffb5e398 <col:137, col:193> 'int' '&&'
|   |                 | |-BinaryOperator 0x5625ffb5e328 <col:137, col:174> 'int' '&&'
|   |                 | | |-BinaryOperator 0x5625ffb5e2b8 <col:137, col:156> 'int' '&&'
|   |                 | | | |-ImplicitCastExpr 0x5625ffb5e2a0 <col:137> 'int' <IntegralCast>
|   |                 | | | | `-ImplicitCastExpr 0x5625ffb5e288 <col:137> '_Bool' <LValueToRValue>
|   |                 | | | |   `-DeclRefExpr 0x5625ffb5e218 <col:137> '_Bool' lvalue Var 0x5625ffb59430 'x$w_buff0_used' '_Bool'
|   |                 | | | `-UnaryOperator 0x5625ffb5e270 <col:155, col:156> 'int' prefix '!' cannot overflow
|   |                 | | |   `-ImplicitCastExpr 0x5625ffb5e258 <col:156> '_Bool' <LValueToRValue>
|   |                 | | |     `-DeclRefExpr 0x5625ffb5e238 <col:156> '_Bool' lvalue Var 0x5625ffb591c8 'x$r_buff1_thd2' '_Bool'
|   |                 | | `-ImplicitCastExpr 0x5625ffb5e310 <col:174> 'int' <IntegralCast>
|   |                 | |   `-ImplicitCastExpr 0x5625ffb5e2f8 <col:174> '_Bool' <LValueToRValue>
|   |                 | |     `-DeclRefExpr 0x5625ffb5e2d8 <col:174> '_Bool' lvalue Var 0x5625ffb59528 'x$w_buff1_used' '_Bool'
|   |                 | `-UnaryOperator 0x5625ffb5e380 <col:192, col:193> 'int' prefix '!' cannot overflow
|   |                 |   `-ImplicitCastExpr 0x5625ffb5e368 <col:193> '_Bool' <LValueToRValue>
|   |                 |     `-DeclRefExpr 0x5625ffb5e348 <col:193> '_Bool' lvalue Var 0x5625ffb58fe8 'x$r_buff0_thd2' '_Bool'
|   |                 |-BinaryOperator 0x5625ffb5e458 <col:210, col:228> 'int' '||'
|   |                 | |-ImplicitCastExpr 0x5625ffb5e440 <col:210> 'int' <IntegralCast>
|   |                 | | `-ImplicitCastExpr 0x5625ffb5e428 <col:210> '_Bool' <LValueToRValue>
|   |                 | |   `-DeclRefExpr 0x5625ffb5e3b8 <col:210> '_Bool' lvalue Var 0x5625ffb596c0 'weak$$choice0' '_Bool'
|   |                 | `-UnaryOperator 0x5625ffb5e410 <col:227, col:228> 'int' prefix '!' cannot overflow
|   |                 |   `-ImplicitCastExpr 0x5625ffb5e3f8 <col:228> '_Bool' <LValueToRValue>
|   |                 |     `-DeclRefExpr 0x5625ffb5e3d8 <col:228> '_Bool' lvalue Var 0x5625ffb59738 'weak$$choice1' '_Bool'
|   |                 `-ParenExpr 0x5625ffb5e6e8 <col:244, col:346> 'int'
|   |                   `-ConditionalOperator 0x5625ffb5e6b8 <col:245, col:333> 'int'
|   |                     |-BinaryOperator 0x5625ffb5e5f8 <col:245, col:300> 'int' '&&'
|   |                     | |-BinaryOperator 0x5625ffb5e588 <col:245, col:281> 'int' '&&'
|   |                     | | |-BinaryOperator 0x5625ffb5e518 <col:245, col:263> 'int' '&&'
|   |                     | | | |-ImplicitCastExpr 0x5625ffb5e4d0 <col:245> 'int' <IntegralCast>
|   |                     | | | | `-ImplicitCastExpr 0x5625ffb5e4b8 <col:245> '_Bool' <LValueToRValue>
|   |                     | | | |   `-DeclRefExpr 0x5625ffb5e478 <col:245> '_Bool' lvalue Var 0x5625ffb59430 'x$w_buff0_used' '_Bool'
|   |                     | | | `-ImplicitCastExpr 0x5625ffb5e500 <col:263> 'int' <IntegralCast>
|   |                     | | |   `-ImplicitCastExpr 0x5625ffb5e4e8 <col:263> '_Bool' <LValueToRValue>
|   |                     | | |     `-DeclRefExpr 0x5625ffb5e498 <col:263> '_Bool' lvalue Var 0x5625ffb591c8 'x$r_buff1_thd2' '_Bool'
|   |                     | | `-ImplicitCastExpr 0x5625ffb5e570 <col:281> 'int' <IntegralCast>
|   |                     | |   `-ImplicitCastExpr 0x5625ffb5e558 <col:281> '_Bool' <LValueToRValue>
|   |                     | |     `-DeclRefExpr 0x5625ffb5e538 <col:281> '_Bool' lvalue Var 0x5625ffb59528 'x$w_buff1_used' '_Bool'
|   |                     | `-UnaryOperator 0x5625ffb5e5e0 <col:299, col:300> 'int' prefix '!' cannot overflow
|   |                     |   `-ImplicitCastExpr 0x5625ffb5e5c8 <col:300> '_Bool' <LValueToRValue>
|   |                     |     `-DeclRefExpr 0x5625ffb5e5a8 <col:300> '_Bool' lvalue Var 0x5625ffb58fe8 'x$r_buff0_thd2' '_Bool'
|   |                     |-ImplicitCastExpr 0x5625ffb5e670 <col:317> 'int' <IntegralCast>
|   |                     | `-ImplicitCastExpr 0x5625ffb5e658 <col:317> '_Bool' <LValueToRValue>
|   |                     |   `-DeclRefExpr 0x5625ffb5e618 <col:317> '_Bool' lvalue Var 0x5625ffb596c0 'weak$$choice0' '_Bool'
|   |                     `-ImplicitCastExpr 0x5625ffb5e6a0 <col:333> 'int' <IntegralCast>
|   |                       `-ImplicitCastExpr 0x5625ffb5e688 <col:333> '_Bool' <LValueToRValue>
|   |                         `-DeclRefExpr 0x5625ffb5e638 <col:333> '_Bool' lvalue Var 0x5625ffb596c0 'weak$$choice0' '_Bool'
|   |-BinaryOperator 0x5625ffb5f1a8 <line:759:3, col:321> '_Bool' '='
|   | |-DeclRefExpr 0x5625ffb5e908 <col:3> '_Bool' lvalue Var 0x5625ffb59528 'x$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x5625ffb5f190 <col:20, col:321> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x5625ffb5f160 <col:20, col:321> 'int'
|   |     |-ImplicitCastExpr 0x5625ffb5f118 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x5625ffb5f100 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x5625ffb5e928 <col:20> '_Bool' lvalue Var 0x5625ffb597b0 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x5625ffb5f148 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x5625ffb5f130 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x5625ffb5e948 <col:36> '_Bool' lvalue Var 0x5625ffb59528 'x$w_buff1_used' '_Bool'
|   |     `-ParenExpr 0x5625ffb5f0e0 <col:53, col:321> 'int'
|   |       `-ConditionalOperator 0x5625ffb5f0b0 <col:54, col:320> 'int'
|   |         |-UnaryOperator 0x5625ffb5e9a0 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | `-ImplicitCastExpr 0x5625ffb5e988 <col:55> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x5625ffb5e968 <col:55> '_Bool' lvalue Var 0x5625ffb59430 'x$w_buff0_used' '_Bool'
|   |         |-ImplicitCastExpr 0x5625ffb5f098 <col:72> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x5625ffb5f080 <col:72> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x5625ffb5e9b8 <col:72> '_Bool' lvalue Var 0x5625ffb59528 'x$w_buff1_used' '_Bool'
|   |         `-ParenExpr 0x5625ffb5f060 <col:89, col:320> 'int'
|   |           `-ConditionalOperator 0x5625ffb5f030 <col:90, col:319> 'int'
|   |             |-BinaryOperator 0x5625ffb5ea78 <col:90, col:108> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x5625ffb5ea30 <col:90> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x5625ffb5ea18 <col:90> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x5625ffb5e9d8 <col:90> '_Bool' lvalue Var 0x5625ffb59430 'x$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x5625ffb5ea60 <col:108> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x5625ffb5ea48 <col:108> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x5625ffb5e9f8 <col:108> '_Bool' lvalue Var 0x5625ffb58fe8 'x$r_buff0_thd2' '_Bool'
|   |             |-ImplicitCastExpr 0x5625ffb5f018 <col:125, col:132> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x5625ffb5eac8 <col:125, col:132> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x5625ffb5ea98 <col:132> 'int' 0
|   |             `-ParenExpr 0x5625ffb5eff8 <col:136, col:319> 'int'
|   |               `-ConditionalOperator 0x5625ffb5efc8 <col:137, col:318> 'int'
|   |                 |-BinaryOperator 0x5625ffb5ec88 <col:137, col:193> 'int' '&&'
|   |                 | |-BinaryOperator 0x5625ffb5ec18 <col:137, col:174> 'int' '&&'
|   |                 | | |-BinaryOperator 0x5625ffb5eba8 <col:137, col:156> 'int' '&&'
|   |                 | | | |-ImplicitCastExpr 0x5625ffb5eb90 <col:137> 'int' <IntegralCast>
|   |                 | | | | `-ImplicitCastExpr 0x5625ffb5eb78 <col:137> '_Bool' <LValueToRValue>
|   |                 | | | |   `-DeclRefExpr 0x5625ffb5eaf0 <col:137> '_Bool' lvalue Var 0x5625ffb59430 'x$w_buff0_used' '_Bool'
|   |                 | | | `-UnaryOperator 0x5625ffb5eb60 <col:155, col:156> 'int' prefix '!' cannot overflow
|   |                 | | |   `-ImplicitCastExpr 0x5625ffb5eb30 <col:156> '_Bool' <LValueToRValue>
|   |                 | | |     `-DeclRefExpr 0x5625ffb5eb10 <col:156> '_Bool' lvalue Var 0x5625ffb591c8 'x$r_buff1_thd2' '_Bool'
|   |                 | | `-ImplicitCastExpr 0x5625ffb5ec00 <col:174> 'int' <IntegralCast>
|   |                 | |   `-ImplicitCastExpr 0x5625ffb5ebe8 <col:174> '_Bool' <LValueToRValue>
|   |                 | |     `-DeclRefExpr 0x5625ffb5ebc8 <col:174> '_Bool' lvalue Var 0x5625ffb59528 'x$w_buff1_used' '_Bool'
|   |                 | `-UnaryOperator 0x5625ffb5ec70 <col:192, col:193> 'int' prefix '!' cannot overflow
|   |                 |   `-ImplicitCastExpr 0x5625ffb5ec58 <col:193> '_Bool' <LValueToRValue>
|   |                 |     `-DeclRefExpr 0x5625ffb5ec38 <col:193> '_Bool' lvalue Var 0x5625ffb58fe8 'x$r_buff0_thd2' '_Bool'
|   |                 |-ImplicitCastExpr 0x5625ffb5efb0 <col:210> 'int' <IntegralCast>
|   |                 | `-ImplicitCastExpr 0x5625ffb5ef98 <col:210> '_Bool' <LValueToRValue>
|   |                 |   `-DeclRefExpr 0x5625ffb5eca8 <col:210> '_Bool' lvalue Var 0x5625ffb596c0 'weak$$choice0' '_Bool'
|   |                 `-ParenExpr 0x5625ffb5ef78 <col:226, col:318> 'int'
|   |                   `-ConditionalOperator 0x5625ffb5ef48 <col:227, col:317> 'int'
|   |                     |-BinaryOperator 0x5625ffb5ee48 <col:227, col:282> 'int' '&&'
|   |                     | |-BinaryOperator 0x5625ffb5edd8 <col:227, col:263> 'int' '&&'
|   |                     | | |-BinaryOperator 0x5625ffb5ed68 <col:227, col:245> 'int' '&&'
|   |                     | | | |-ImplicitCastExpr 0x5625ffb5ed20 <col:227> 'int' <IntegralCast>
|   |                     | | | | `-ImplicitCastExpr 0x5625ffb5ed08 <col:227> '_Bool' <LValueToRValue>
|   |                     | | | |   `-DeclRefExpr 0x5625ffb5ecc8 <col:227> '_Bool' lvalue Var 0x5625ffb59430 'x$w_buff0_used' '_Bool'
|   |                     | | | `-ImplicitCastExpr 0x5625ffb5ed50 <col:245> 'int' <IntegralCast>
|   |                     | | |   `-ImplicitCastExpr 0x5625ffb5ed38 <col:245> '_Bool' <LValueToRValue>
|   |                     | | |     `-DeclRefExpr 0x5625ffb5ece8 <col:245> '_Bool' lvalue Var 0x5625ffb591c8 'x$r_buff1_thd2' '_Bool'
|   |                     | | `-ImplicitCastExpr 0x5625ffb5edc0 <col:263> 'int' <IntegralCast>
|   |                     | |   `-ImplicitCastExpr 0x5625ffb5eda8 <col:263> '_Bool' <LValueToRValue>
|   |                     | |     `-DeclRefExpr 0x5625ffb5ed88 <col:263> '_Bool' lvalue Var 0x5625ffb59528 'x$w_buff1_used' '_Bool'
|   |                     | `-UnaryOperator 0x5625ffb5ee30 <col:281, col:282> 'int' prefix '!' cannot overflow
|   |                     |   `-ImplicitCastExpr 0x5625ffb5ee18 <col:282> '_Bool' <LValueToRValue>
|   |                     |     `-DeclRefExpr 0x5625ffb5edf8 <col:282> '_Bool' lvalue Var 0x5625ffb58fe8 'x$r_buff0_thd2' '_Bool'
|   |                     |-ImplicitCastExpr 0x5625ffb5ef18 <col:299, col:306> 'int' <IntegralCast>
|   |                     | `-CStyleCastExpr 0x5625ffb5ee98 <col:299, col:306> '_Bool' <IntegralToBoolean>
|   |                     |   `-IntegerLiteral 0x5625ffb5ee68 <col:306> 'int' 0
|   |                     `-ImplicitCastExpr 0x5625ffb5ef30 <col:310, col:317> 'int' <IntegralCast>
|   |                       `-CStyleCastExpr 0x5625ffb5eef0 <col:310, col:317> '_Bool' <IntegralToBoolean>
|   |                         `-IntegerLiteral 0x5625ffb5eec0 <col:317> 'int' 0
|   |-BinaryOperator 0x5625ffb5fa50 <line:760:3, col:322> '_Bool' '='
|   | |-DeclRefExpr 0x5625ffb5f1c8 <col:3> '_Bool' lvalue Var 0x5625ffb58fe8 'x$r_buff0_thd2' '_Bool'
|   | `-ImplicitCastExpr 0x5625ffb5fa38 <col:20, col:322> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x5625ffb5fa08 <col:20, col:322> 'int'
|   |     |-ImplicitCastExpr 0x5625ffb5f9c0 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x5625ffb5f9a8 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x5625ffb5f1e8 <col:20> '_Bool' lvalue Var 0x5625ffb597b0 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x5625ffb5f9f0 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x5625ffb5f9d8 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x5625ffb5f208 <col:36> '_Bool' lvalue Var 0x5625ffb58fe8 'x$r_buff0_thd2' '_Bool'
|   |     `-ParenExpr 0x5625ffb5f988 <col:53, col:322> 'int'
|   |       `-ConditionalOperator 0x5625ffb5f958 <col:54, col:321> 'int'
|   |         |-UnaryOperator 0x5625ffb5f260 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | `-ImplicitCastExpr 0x5625ffb5f248 <col:55> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x5625ffb5f228 <col:55> '_Bool' lvalue Var 0x5625ffb59430 'x$w_buff0_used' '_Bool'
|   |         |-ImplicitCastExpr 0x5625ffb5f940 <col:72> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x5625ffb5f928 <col:72> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x5625ffb5f278 <col:72> '_Bool' lvalue Var 0x5625ffb58fe8 'x$r_buff0_thd2' '_Bool'
|   |         `-ParenExpr 0x5625ffb5f908 <col:89, col:321> 'int'
|   |           `-ConditionalOperator 0x5625ffb5f8d8 <col:90, col:320> 'int'
|   |             |-BinaryOperator 0x5625ffb5f338 <col:90, col:108> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x5625ffb5f2f0 <col:90> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x5625ffb5f2d8 <col:90> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x5625ffb5f298 <col:90> '_Bool' lvalue Var 0x5625ffb59430 'x$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x5625ffb5f320 <col:108> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x5625ffb5f308 <col:108> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x5625ffb5f2b8 <col:108> '_Bool' lvalue Var 0x5625ffb58fe8 'x$r_buff0_thd2' '_Bool'
|   |             |-ImplicitCastExpr 0x5625ffb5f8c0 <col:125, col:132> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x5625ffb5f388 <col:125, col:132> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x5625ffb5f358 <col:132> 'int' 0
|   |             `-ParenExpr 0x5625ffb5f8a0 <col:136, col:320> 'int'
|   |               `-ConditionalOperator 0x5625ffb5f870 <col:137, col:319> 'int'
|   |                 |-BinaryOperator 0x5625ffb5f530 <col:137, col:193> 'int' '&&'
|   |                 | |-BinaryOperator 0x5625ffb5f4c0 <col:137, col:174> 'int' '&&'
|   |                 | | |-BinaryOperator 0x5625ffb5f450 <col:137, col:156> 'int' '&&'
|   |                 | | | |-ImplicitCastExpr 0x5625ffb5f438 <col:137> 'int' <IntegralCast>
|   |                 | | | | `-ImplicitCastExpr 0x5625ffb5f420 <col:137> '_Bool' <LValueToRValue>
|   |                 | | | |   `-DeclRefExpr 0x5625ffb5f3b0 <col:137> '_Bool' lvalue Var 0x5625ffb59430 'x$w_buff0_used' '_Bool'
|   |                 | | | `-UnaryOperator 0x5625ffb5f408 <col:155, col:156> 'int' prefix '!' cannot overflow
|   |                 | | |   `-ImplicitCastExpr 0x5625ffb5f3f0 <col:156> '_Bool' <LValueToRValue>
|   |                 | | |     `-DeclRefExpr 0x5625ffb5f3d0 <col:156> '_Bool' lvalue Var 0x5625ffb591c8 'x$r_buff1_thd2' '_Bool'
|   |                 | | `-ImplicitCastExpr 0x5625ffb5f4a8 <col:174> 'int' <IntegralCast>
|   |                 | |   `-ImplicitCastExpr 0x5625ffb5f490 <col:174> '_Bool' <LValueToRValue>
|   |                 | |     `-DeclRefExpr 0x5625ffb5f470 <col:174> '_Bool' lvalue Var 0x5625ffb59528 'x$w_buff1_used' '_Bool'
|   |                 | `-UnaryOperator 0x5625ffb5f518 <col:192, col:193> 'int' prefix '!' cannot overflow
|   |                 |   `-ImplicitCastExpr 0x5625ffb5f500 <col:193> '_Bool' <LValueToRValue>
|   |                 |     `-DeclRefExpr 0x5625ffb5f4e0 <col:193> '_Bool' lvalue Var 0x5625ffb58fe8 'x$r_buff0_thd2' '_Bool'
|   |                 |-ImplicitCastExpr 0x5625ffb5f858 <col:210> 'int' <IntegralCast>
|   |                 | `-ImplicitCastExpr 0x5625ffb5f840 <col:210> '_Bool' <LValueToRValue>
|   |                 |   `-DeclRefExpr 0x5625ffb5f550 <col:210> '_Bool' lvalue Var 0x5625ffb58fe8 'x$r_buff0_thd2' '_Bool'
|   |                 `-ParenExpr 0x5625ffb5f820 <col:227, col:319> 'int'
|   |                   `-ConditionalOperator 0x5625ffb5f7f0 <col:228, col:318> 'int'
|   |                     |-BinaryOperator 0x5625ffb5f6f0 <col:228, col:283> 'int' '&&'
|   |                     | |-BinaryOperator 0x5625ffb5f680 <col:228, col:264> 'int' '&&'
|   |                     | | |-BinaryOperator 0x5625ffb5f610 <col:228, col:246> 'int' '&&'
|   |                     | | | |-ImplicitCastExpr 0x5625ffb5f5c8 <col:228> 'int' <IntegralCast>
|   |                     | | | | `-ImplicitCastExpr 0x5625ffb5f5b0 <col:228> '_Bool' <LValueToRValue>
|   |                     | | | |   `-DeclRefExpr 0x5625ffb5f570 <col:228> '_Bool' lvalue Var 0x5625ffb59430 'x$w_buff0_used' '_Bool'
|   |                     | | | `-ImplicitCastExpr 0x5625ffb5f5f8 <col:246> 'int' <IntegralCast>
|   |                     | | |   `-ImplicitCastExpr 0x5625ffb5f5e0 <col:246> '_Bool' <LValueToRValue>
|   |                     | | |     `-DeclRefExpr 0x5625ffb5f590 <col:246> '_Bool' lvalue Var 0x5625ffb591c8 'x$r_buff1_thd2' '_Bool'
|   |                     | | `-ImplicitCastExpr 0x5625ffb5f668 <col:264> 'int' <IntegralCast>
|   |                     | |   `-ImplicitCastExpr 0x5625ffb5f650 <col:264> '_Bool' <LValueToRValue>
|   |                     | |     `-DeclRefExpr 0x5625ffb5f630 <col:264> '_Bool' lvalue Var 0x5625ffb59528 'x$w_buff1_used' '_Bool'
|   |                     | `-UnaryOperator 0x5625ffb5f6d8 <col:282, col:283> 'int' prefix '!' cannot overflow
|   |                     |   `-ImplicitCastExpr 0x5625ffb5f6c0 <col:283> '_Bool' <LValueToRValue>
|   |                     |     `-DeclRefExpr 0x5625ffb5f6a0 <col:283> '_Bool' lvalue Var 0x5625ffb58fe8 'x$r_buff0_thd2' '_Bool'
|   |                     |-ImplicitCastExpr 0x5625ffb5f7c0 <col:300, col:307> 'int' <IntegralCast>
|   |                     | `-CStyleCastExpr 0x5625ffb5f740 <col:300, col:307> '_Bool' <IntegralToBoolean>
|   |                     |   `-IntegerLiteral 0x5625ffb5f710 <col:307> 'int' 0
|   |                     `-ImplicitCastExpr 0x5625ffb5f7d8 <col:311, col:318> 'int' <IntegralCast>
|   |                       `-CStyleCastExpr 0x5625ffb5f798 <col:311, col:318> '_Bool' <IntegralToBoolean>
|   |                         `-IntegerLiteral 0x5625ffb5f768 <col:318> 'int' 0
|   |-BinaryOperator 0x5625ffb60418 <line:761:3, col:351> '_Bool' '='
|   | |-DeclRefExpr 0x5625ffb5fa70 <col:3> '_Bool' lvalue Var 0x5625ffb591c8 'x$r_buff1_thd2' '_Bool'
|   | `-ImplicitCastExpr 0x5625ffb60400 <col:20, col:351> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x5625ffb603d0 <col:20, col:351> 'int'
|   |     |-ImplicitCastExpr 0x5625ffb60388 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x5625ffb60370 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x5625ffb5fa90 <col:20> '_Bool' lvalue Var 0x5625ffb597b0 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x5625ffb603b8 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x5625ffb603a0 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x5625ffb5fab0 <col:36> '_Bool' lvalue Var 0x5625ffb591c8 'x$r_buff1_thd2' '_Bool'
|   |     `-ParenExpr 0x5625ffb60350 <col:53, col:351> 'int'
|   |       `-ConditionalOperator 0x5625ffb60320 <col:54, col:350> 'int'
|   |         |-UnaryOperator 0x5625ffb5fb08 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | `-ImplicitCastExpr 0x5625ffb5faf0 <col:55> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x5625ffb5fad0 <col:55> '_Bool' lvalue Var 0x5625ffb59430 'x$w_buff0_used' '_Bool'
|   |         |-ImplicitCastExpr 0x5625ffb60308 <col:72> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x5625ffb602f0 <col:72> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x5625ffb5fb20 <col:72> '_Bool' lvalue Var 0x5625ffb591c8 'x$r_buff1_thd2' '_Bool'
|   |         `-ParenExpr 0x5625ffb602d0 <col:89, col:350> 'int'
|   |           `-ConditionalOperator 0x5625ffb602a0 <col:90, col:349> 'int'
|   |             |-BinaryOperator 0x5625ffb5fbf0 <col:90, col:108> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x5625ffb5fba8 <col:90> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x5625ffb5fb90 <col:90> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x5625ffb5fb40 <col:90> '_Bool' lvalue Var 0x5625ffb59430 'x$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x5625ffb5fbd8 <col:108> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x5625ffb5fbc0 <col:108> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x5625ffb5fb70 <col:108> '_Bool' lvalue Var 0x5625ffb58fe8 'x$r_buff0_thd2' '_Bool'
|   |             |-ImplicitCastExpr 0x5625ffb60288 <col:125, col:132> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x5625ffb5fc40 <col:125, col:132> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x5625ffb5fc10 <col:132> 'int' 0
|   |             `-ParenExpr 0x5625ffb60268 <col:136, col:349> 'int'
|   |               `-ConditionalOperator 0x5625ffb60238 <col:137, col:348> 'int'
|   |                 |-BinaryOperator 0x5625ffb5fde8 <col:137, col:193> 'int' '&&'
|   |                 | |-BinaryOperator 0x5625ffb5fd78 <col:137, col:174> 'int' '&&'
|   |                 | | |-BinaryOperator 0x5625ffb5fd08 <col:137, col:156> 'int' '&&'
|   |                 | | | |-ImplicitCastExpr 0x5625ffb5fcf0 <col:137> 'int' <IntegralCast>
|   |                 | | | | `-ImplicitCastExpr 0x5625ffb5fcd8 <col:137> '_Bool' <LValueToRValue>
|   |                 | | | |   `-DeclRefExpr 0x5625ffb5fc68 <col:137> '_Bool' lvalue Var 0x5625ffb59430 'x$w_buff0_used' '_Bool'
|   |                 | | | `-UnaryOperator 0x5625ffb5fcc0 <col:155, col:156> 'int' prefix '!' cannot overflow
|   |                 | | |   `-ImplicitCastExpr 0x5625ffb5fca8 <col:156> '_Bool' <LValueToRValue>
|   |                 | | |     `-DeclRefExpr 0x5625ffb5fc88 <col:156> '_Bool' lvalue Var 0x5625ffb591c8 'x$r_buff1_thd2' '_Bool'
|   |                 | | `-ImplicitCastExpr 0x5625ffb5fd60 <col:174> 'int' <IntegralCast>
|   |                 | |   `-ImplicitCastExpr 0x5625ffb5fd48 <col:174> '_Bool' <LValueToRValue>
|   |                 | |     `-DeclRefExpr 0x5625ffb5fd28 <col:174> '_Bool' lvalue Var 0x5625ffb59528 'x$w_buff1_used' '_Bool'
|   |                 | `-UnaryOperator 0x5625ffb5fdd0 <col:192, col:193> 'int' prefix '!' cannot overflow
|   |                 |   `-ImplicitCastExpr 0x5625ffb5fdb8 <col:193> '_Bool' <LValueToRValue>
|   |                 |     `-DeclRefExpr 0x5625ffb5fd98 <col:193> '_Bool' lvalue Var 0x5625ffb58fe8 'x$r_buff0_thd2' '_Bool'
|   |                 |-ParenExpr 0x5625ffb5ff48 <col:210, col:252> 'int'
|   |                 | `-ConditionalOperator 0x5625ffb5ff18 <col:211, col:251> 'int'
|   |                 |   |-ImplicitCastExpr 0x5625ffb5feb8 <col:211> 'int' <IntegralCast>
|   |                 |   | `-ImplicitCastExpr 0x5625ffb5fea0 <col:211> '_Bool' <LValueToRValue>
|   |                 |   |   `-DeclRefExpr 0x5625ffb5fe08 <col:211> '_Bool' lvalue Var 0x5625ffb596c0 'weak$$choice0' '_Bool'
|   |                 |   |-ImplicitCastExpr 0x5625ffb5fee8 <col:227> 'int' <IntegralCast>
|   |                 |   | `-ImplicitCastExpr 0x5625ffb5fed0 <col:227> '_Bool' <LValueToRValue>
|   |                 |   |   `-DeclRefExpr 0x5625ffb5fe28 <col:227> '_Bool' lvalue Var 0x5625ffb591c8 'x$r_buff1_thd2' '_Bool'
|   |                 |   `-ImplicitCastExpr 0x5625ffb5ff00 <col:244, col:251> 'int' <IntegralCast>
|   |                 |     `-CStyleCastExpr 0x5625ffb5fe78 <col:244, col:251> '_Bool' <IntegralToBoolean>
|   |                 |       `-IntegerLiteral 0x5625ffb5fe48 <col:251> 'int' 0
|   |                 `-ParenExpr 0x5625ffb60218 <col:256, col:348> 'int'
|   |                   `-ConditionalOperator 0x5625ffb601e8 <col:257, col:347> 'int'
|   |                     |-BinaryOperator 0x5625ffb600e8 <col:257, col:312> 'int' '&&'
|   |                     | |-BinaryOperator 0x5625ffb60078 <col:257, col:293> 'int' '&&'
|   |                     | | |-BinaryOperator 0x5625ffb60008 <col:257, col:275> 'int' '&&'
|   |                     | | | |-ImplicitCastExpr 0x5625ffb5ffc0 <col:257> 'int' <IntegralCast>
|   |                     | | | | `-ImplicitCastExpr 0x5625ffb5ffa8 <col:257> '_Bool' <LValueToRValue>
|   |                     | | | |   `-DeclRefExpr 0x5625ffb5ff68 <col:257> '_Bool' lvalue Var 0x5625ffb59430 'x$w_buff0_used' '_Bool'
|   |                     | | | `-ImplicitCastExpr 0x5625ffb5fff0 <col:275> 'int' <IntegralCast>
|   |                     | | |   `-ImplicitCastExpr 0x5625ffb5ffd8 <col:275> '_Bool' <LValueToRValue>
|   |                     | | |     `-DeclRefExpr 0x5625ffb5ff88 <col:275> '_Bool' lvalue Var 0x5625ffb591c8 'x$r_buff1_thd2' '_Bool'
|   |                     | | `-ImplicitCastExpr 0x5625ffb60060 <col:293> 'int' <IntegralCast>
|   |                     | |   `-ImplicitCastExpr 0x5625ffb60048 <col:293> '_Bool' <LValueToRValue>
|   |                     | |     `-DeclRefExpr 0x5625ffb60028 <col:293> '_Bool' lvalue Var 0x5625ffb59528 'x$w_buff1_used' '_Bool'
|   |                     | `-UnaryOperator 0x5625ffb600d0 <col:311, col:312> 'int' prefix '!' cannot overflow
|   |                     |   `-ImplicitCastExpr 0x5625ffb600b8 <col:312> '_Bool' <LValueToRValue>
|   |                     |     `-DeclRefExpr 0x5625ffb60098 <col:312> '_Bool' lvalue Var 0x5625ffb58fe8 'x$r_buff0_thd2' '_Bool'
|   |                     |-ImplicitCastExpr 0x5625ffb601b8 <col:329, col:336> 'int' <IntegralCast>
|   |                     | `-CStyleCastExpr 0x5625ffb60138 <col:329, col:336> '_Bool' <IntegralToBoolean>
|   |                     |   `-IntegerLiteral 0x5625ffb60108 <col:336> 'int' 0
|   |                     `-ImplicitCastExpr 0x5625ffb601d0 <col:340, col:347> 'int' <IntegralCast>
|   |                       `-CStyleCastExpr 0x5625ffb60190 <col:340, col:347> '_Bool' <IntegralToBoolean>
|   |                         `-IntegerLiteral 0x5625ffb60160 <col:347> 'int' 0
|   |-BinaryOperator 0x5625ffb604b0 <line:762:3, col:45> '_Bool' '='
|   | |-DeclRefExpr 0x5625ffb60438 <col:3> '_Bool' lvalue Var 0x5625ffb588b0 '__unbuffered_p1_EAX$read_delayed' '_Bool'
|   | `-CStyleCastExpr 0x5625ffb60488 <col:38, col:45> '_Bool' <IntegralToBoolean>
|   |   `-IntegerLiteral 0x5625ffb60458 <col:45> 'int' 1
|   |-BinaryOperator 0x5625ffb60528 <line:763:3, col:43> 'int *' '='
|   | |-DeclRefExpr 0x5625ffb604d0 <col:3> 'int *' lvalue Var 0x5625ffb58930 '__unbuffered_p1_EAX$read_delayed_var' 'int *'
|   | `-UnaryOperator 0x5625ffb60510 <col:42, col:43> 'int *' prefix '&' cannot overflow
|   |   `-DeclRefExpr 0x5625ffb604f0 <col:43> 'int' lvalue Var 0x5625ffb58d68 'x' 'int'
|   |-BinaryOperator 0x5625ffb605a0 <line:764:3, col:25> 'int' '='
|   | |-DeclRefExpr 0x5625ffb60548 <col:3> 'int' lvalue Var 0x5625ffb58360 '__unbuffered_p1_EAX' 'int'
|   | `-ImplicitCastExpr 0x5625ffb60588 <col:25> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x5625ffb60568 <col:25> 'int' lvalue Var 0x5625ffb58d68 'x' 'int'
|   |-BinaryOperator 0x5625ffb606d0 <line:765:3, col:37> 'int' '='
|   | |-DeclRefExpr 0x5625ffb605c0 <col:3> 'int' lvalue Var 0x5625ffb58d68 'x' 'int'
|   | `-ConditionalOperator 0x5625ffb606a0 <col:7, col:37> 'int'
|   |   |-ImplicitCastExpr 0x5625ffb60658 <col:7> 'int' <IntegralCast>
|   |   | `-ImplicitCastExpr 0x5625ffb60640 <col:7> '_Bool' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x5625ffb605e0 <col:7> '_Bool' lvalue Var 0x5625ffb58e00 'x$flush_delayed' '_Bool'
|   |   |-ImplicitCastExpr 0x5625ffb60670 <col:25> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x5625ffb60600 <col:25> 'int' lvalue Var 0x5625ffb58e80 'x$mem_tmp' 'int'
|   |   `-ImplicitCastExpr 0x5625ffb60688 <col:37> 'int' <LValueToRValue>
|   |     `-DeclRefExpr 0x5625ffb60620 <col:37> 'int' lvalue Var 0x5625ffb58d68 'x' 'int'
|   |-BinaryOperator 0x5625ffb60768 <line:766:3, col:28> '_Bool' '='
|   | |-DeclRefExpr 0x5625ffb606f0 <col:3> '_Bool' lvalue Var 0x5625ffb58e00 'x$flush_delayed' '_Bool'
|   | `-CStyleCastExpr 0x5625ffb60740 <col:21, col:28> '_Bool' <IntegralToBoolean>
|   |   `-IntegerLiteral 0x5625ffb60710 <col:28> 'int' 0
|   |-CallExpr 0x5625ffb607c0 <line:767:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x5625ffb607a8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5625ffb60788 <col:3> 'void ()' Function 0x5625ffafef00 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x5625ffb60818 <line:768:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x5625ffb60800 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5625ffb607e0 <col:3> 'void ()' Function 0x5625ffafee40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x5625ffb60878 <line:769:3, col:7> 'int' '='
|   | |-DeclRefExpr 0x5625ffb60838 <col:3> 'int' lvalue Var 0x5625ffb59628 'y' 'int'
|   | `-IntegerLiteral 0x5625ffb60858 <col:7> 'int' 1
|   |-CallExpr 0x5625ffb608d0 <line:770:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x5625ffb608b8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5625ffb60898 <col:3> 'void ()' Function 0x5625ffafef00 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x5625ffb60928 <line:771:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x5625ffb60910 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5625ffb608f0 <col:3> 'void ()' Function 0x5625ffafee40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x5625ffb60c30 <line:772:3, col:103> 'int' '='
|   | |-DeclRefExpr 0x5625ffb60948 <col:3> 'int' lvalue Var 0x5625ffb58d68 'x' 'int'
|   | `-ConditionalOperator 0x5625ffb60c00 <col:7, col:103> 'int'
|   |   |-BinaryOperator 0x5625ffb60a08 <col:7, col:25> 'int' '&&'
|   |   | |-ImplicitCastExpr 0x5625ffb609c0 <col:7> 'int' <IntegralCast>
|   |   | | `-ImplicitCastExpr 0x5625ffb609a8 <col:7> '_Bool' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x5625ffb60968 <col:7> '_Bool' lvalue Var 0x5625ffb59430 'x$w_buff0_used' '_Bool'
|   |   | `-ImplicitCastExpr 0x5625ffb609f0 <col:25> 'int' <IntegralCast>
|   |   |   `-ImplicitCastExpr 0x5625ffb609d8 <col:25> '_Bool' <LValueToRValue>
|   |   |     `-DeclRefExpr 0x5625ffb60988 <col:25> '_Bool' lvalue Var 0x5625ffb58fe8 'x$r_buff0_thd2' '_Bool'
|   |   |-ImplicitCastExpr 0x5625ffb60be8 <col:42> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x5625ffb60a28 <col:42> 'int' lvalue Var 0x5625ffb593b8 'x$w_buff0' 'int'
|   |   `-ParenExpr 0x5625ffb60bc8 <col:54, col:103> 'int'
|   |     `-ConditionalOperator 0x5625ffb60b98 <col:55, col:102> 'int'
|   |       |-BinaryOperator 0x5625ffb60ae8 <col:55, col:73> 'int' '&&'
|   |       | |-ImplicitCastExpr 0x5625ffb60aa0 <col:55> 'int' <IntegralCast>
|   |       | | `-ImplicitCastExpr 0x5625ffb60a88 <col:55> '_Bool' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x5625ffb60a48 <col:55> '_Bool' lvalue Var 0x5625ffb59528 'x$w_buff1_used' '_Bool'
|   |       | `-ImplicitCastExpr 0x5625ffb60ad0 <col:73> 'int' <IntegralCast>
|   |       |   `-ImplicitCastExpr 0x5625ffb60ab8 <col:73> '_Bool' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x5625ffb60a68 <col:73> '_Bool' lvalue Var 0x5625ffb591c8 'x$r_buff1_thd2' '_Bool'
|   |       |-ImplicitCastExpr 0x5625ffb60b48 <col:90> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x5625ffb60b08 <col:90> 'int' lvalue Var 0x5625ffb594b0 'x$w_buff1' 'int'
|   |       `-ImplicitCastExpr 0x5625ffb60b80 <col:102> 'int' <LValueToRValue>
|   |         `-DeclRefExpr 0x5625ffb60b28 <col:102> 'int' lvalue Var 0x5625ffb58d68 'x' 'int'
|   |-BinaryOperator 0x5625ffb60e38 <line:773:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x5625ffb60c50 <col:3> '_Bool' lvalue Var 0x5625ffb59430 'x$w_buff0_used' '_Bool'
|   | `-ImplicitCastExpr 0x5625ffb60e20 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x5625ffb60df0 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x5625ffb60d10 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x5625ffb60cc8 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x5625ffb60cb0 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x5625ffb60c70 <col:20> '_Bool' lvalue Var 0x5625ffb59430 'x$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x5625ffb60cf8 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x5625ffb60ce0 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x5625ffb60c90 <col:38> '_Bool' lvalue Var 0x5625ffb58fe8 'x$r_buff0_thd2' '_Bool'
|   |     |-ImplicitCastExpr 0x5625ffb60da8 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x5625ffb60d60 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x5625ffb60d30 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x5625ffb60dd8 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x5625ffb60dc0 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x5625ffb60d88 <col:66> '_Bool' lvalue Var 0x5625ffb59430 'x$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x5625ffb61120 <line:774:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x5625ffb60e58 <col:3> '_Bool' lvalue Var 0x5625ffb59528 'x$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x5625ffb61108 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x5625ffb610d8 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x5625ffb60ff8 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x5625ffb60f18 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x5625ffb60ed0 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x5625ffb60eb8 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x5625ffb60e78 <col:20> '_Bool' lvalue Var 0x5625ffb59430 'x$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x5625ffb60f00 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x5625ffb60ee8 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x5625ffb60e98 <col:38> '_Bool' lvalue Var 0x5625ffb58fe8 'x$r_buff0_thd2' '_Bool'
|   |     | `-BinaryOperator 0x5625ffb60fd8 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x5625ffb60f90 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x5625ffb60f78 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x5625ffb60f38 <col:56> '_Bool' lvalue Var 0x5625ffb59528 'x$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x5625ffb60fc0 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x5625ffb60fa8 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x5625ffb60f58 <col:74> '_Bool' lvalue Var 0x5625ffb591c8 'x$r_buff1_thd2' '_Bool'
|   |     |-ImplicitCastExpr 0x5625ffb61090 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x5625ffb61048 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x5625ffb61018 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x5625ffb610c0 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x5625ffb610a8 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x5625ffb61070 <col:102> '_Bool' lvalue Var 0x5625ffb59528 'x$w_buff1_used' '_Bool'
|   |-BinaryOperator 0x5625ffb61328 <line:775:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x5625ffb61140 <col:3> '_Bool' lvalue Var 0x5625ffb58fe8 'x$r_buff0_thd2' '_Bool'
|   | `-ImplicitCastExpr 0x5625ffb61310 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x5625ffb612e0 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x5625ffb61200 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x5625ffb611b8 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x5625ffb611a0 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x5625ffb61160 <col:20> '_Bool' lvalue Var 0x5625ffb59430 'x$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x5625ffb611e8 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x5625ffb611d0 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x5625ffb61180 <col:38> '_Bool' lvalue Var 0x5625ffb58fe8 'x$r_buff0_thd2' '_Bool'
|   |     |-ImplicitCastExpr 0x5625ffb61298 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x5625ffb61250 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x5625ffb61220 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x5625ffb612c8 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x5625ffb612b0 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x5625ffb61278 <col:66> '_Bool' lvalue Var 0x5625ffb58fe8 'x$r_buff0_thd2' '_Bool'
|   |-BinaryOperator 0x5625ffb61610 <line:776:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x5625ffb61348 <col:3> '_Bool' lvalue Var 0x5625ffb591c8 'x$r_buff1_thd2' '_Bool'
|   | `-ImplicitCastExpr 0x5625ffb615f8 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x5625ffb615c8 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x5625ffb614e8 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x5625ffb61408 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x5625ffb613c0 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x5625ffb613a8 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x5625ffb61368 <col:20> '_Bool' lvalue Var 0x5625ffb59430 'x$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x5625ffb613f0 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x5625ffb613d8 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x5625ffb61388 <col:38> '_Bool' lvalue Var 0x5625ffb58fe8 'x$r_buff0_thd2' '_Bool'
|   |     | `-BinaryOperator 0x5625ffb614c8 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x5625ffb61480 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x5625ffb61468 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x5625ffb61428 <col:56> '_Bool' lvalue Var 0x5625ffb59528 'x$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x5625ffb614b0 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x5625ffb61498 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x5625ffb61448 <col:74> '_Bool' lvalue Var 0x5625ffb591c8 'x$r_buff1_thd2' '_Bool'
|   |     |-ImplicitCastExpr 0x5625ffb61580 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x5625ffb61538 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x5625ffb61508 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x5625ffb615b0 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x5625ffb61598 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x5625ffb61560 <col:102> '_Bool' lvalue Var 0x5625ffb591c8 'x$r_buff1_thd2' '_Bool'
|   |-CallExpr 0x5625ffb61668 <line:777:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x5625ffb61650 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5625ffb61630 <col:3> 'void ()' Function 0x5625ffafef00 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x5625ffb616c0 <line:778:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x5625ffb616a8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5625ffb61688 <col:3> 'void ()' Function 0x5625ffafee40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x5625ffb61778 <line:779:3, col:41> 'int' '='
|   | |-DeclRefExpr 0x5625ffb616e0 <col:3> 'int' lvalue Var 0x5625ffb58120 '__unbuffered_cnt' 'int'
|   | `-BinaryOperator 0x5625ffb61758 <col:22, col:41> 'int' '+'
|   |   |-ImplicitCastExpr 0x5625ffb61740 <col:22> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x5625ffb61700 <col:22> 'int' lvalue Var 0x5625ffb58120 '__unbuffered_cnt' 'int'
|   |   `-IntegerLiteral 0x5625ffb61720 <col:41> 'int' 1
|   |-CallExpr 0x5625ffb617d0 <line:780:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x5625ffb617b8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5625ffb61798 <col:3> 'void ()' Function 0x5625ffafef00 '__VERIFIER_atomic_end' 'void ()'
|   `-ReturnStmt 0x5625ffb61848 <line:781:3, col:36>
|     `-CallExpr 0x5625ffb61828 <col:10, col:36> 'void *'
|       `-ImplicitCastExpr 0x5625ffb61810 <col:10> 'void *(*)(void)' <FunctionToPointerDecay>
|         `-DeclRefExpr 0x5625ffb617f0 <col:10> 'void *(void)' Function 0x5625ffafe958 '__VERIFIER_nondet_pointer' 'void *(void)'
|-FunctionDecl 0x5625ffb61a20 prev 0x5625ffb57da0 <line:783:1, line:799:1> line:783:8 used P2 'void *(void *)'
| |-ParmVarDecl 0x5625ffb61988 <col:11, col:17> col:17 arg 'void *'
| `-CompoundStmt 0x5625ffb62ba0 <line:784:1, line:799:1>
|   |-CallExpr 0x5625ffb61b00 <line:785:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x5625ffb61ae8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5625ffb61ac8 <col:3> 'void ()' Function 0x5625ffafee40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x5625ffb61b60 <line:786:3, col:7> 'int' '='
|   | |-DeclRefExpr 0x5625ffb61b20 <col:3> 'int' lvalue Var 0x5625ffb59628 'y' 'int'
|   | `-IntegerLiteral 0x5625ffb61b40 <col:7> 'int' 2
|   |-CallExpr 0x5625ffb61bc8 <line:787:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x5625ffb61bb0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5625ffb61b90 <col:3> 'void ()' Function 0x5625ffafef00 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x5625ffb61c20 <line:788:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x5625ffb61c08 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5625ffb61be8 <col:3> 'void ()' Function 0x5625ffafee40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x5625ffb61f08 <line:789:3, col:103> 'int' '='
|   | |-DeclRefExpr 0x5625ffb61c40 <col:3> 'int' lvalue Var 0x5625ffb58d68 'x' 'int'
|   | `-ConditionalOperator 0x5625ffb61ed8 <col:7, col:103> 'int'
|   |   |-BinaryOperator 0x5625ffb61d00 <col:7, col:25> 'int' '&&'
|   |   | |-ImplicitCastExpr 0x5625ffb61cb8 <col:7> 'int' <IntegralCast>
|   |   | | `-ImplicitCastExpr 0x5625ffb61ca0 <col:7> '_Bool' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x5625ffb61c60 <col:7> '_Bool' lvalue Var 0x5625ffb59430 'x$w_buff0_used' '_Bool'
|   |   | `-ImplicitCastExpr 0x5625ffb61ce8 <col:25> 'int' <IntegralCast>
|   |   |   `-ImplicitCastExpr 0x5625ffb61cd0 <col:25> '_Bool' <LValueToRValue>
|   |   |     `-DeclRefExpr 0x5625ffb61c80 <col:25> '_Bool' lvalue Var 0x5625ffb59060 'x$r_buff0_thd3' '_Bool'
|   |   |-ImplicitCastExpr 0x5625ffb61ec0 <col:42> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x5625ffb61d20 <col:42> 'int' lvalue Var 0x5625ffb593b8 'x$w_buff0' 'int'
|   |   `-ParenExpr 0x5625ffb61ea0 <col:54, col:103> 'int'
|   |     `-ConditionalOperator 0x5625ffb61e70 <col:55, col:102> 'int'
|   |       |-BinaryOperator 0x5625ffb61de0 <col:55, col:73> 'int' '&&'
|   |       | |-ImplicitCastExpr 0x5625ffb61d98 <col:55> 'int' <IntegralCast>
|   |       | | `-ImplicitCastExpr 0x5625ffb61d80 <col:55> '_Bool' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x5625ffb61d40 <col:55> '_Bool' lvalue Var 0x5625ffb59528 'x$w_buff1_used' '_Bool'
|   |       | `-ImplicitCastExpr 0x5625ffb61dc8 <col:73> 'int' <IntegralCast>
|   |       |   `-ImplicitCastExpr 0x5625ffb61db0 <col:73> '_Bool' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x5625ffb61d60 <col:73> '_Bool' lvalue Var 0x5625ffb59240 'x$r_buff1_thd3' '_Bool'
|   |       |-ImplicitCastExpr 0x5625ffb61e40 <col:90> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x5625ffb61e00 <col:90> 'int' lvalue Var 0x5625ffb594b0 'x$w_buff1' 'int'
|   |       `-ImplicitCastExpr 0x5625ffb61e58 <col:102> 'int' <LValueToRValue>
|   |         `-DeclRefExpr 0x5625ffb61e20 <col:102> 'int' lvalue Var 0x5625ffb58d68 'x' 'int'
|   |-BinaryOperator 0x5625ffb62110 <line:790:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x5625ffb61f28 <col:3> '_Bool' lvalue Var 0x5625ffb59430 'x$w_buff0_used' '_Bool'
|   | `-ImplicitCastExpr 0x5625ffb620f8 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x5625ffb620c8 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x5625ffb61fe8 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x5625ffb61fa0 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x5625ffb61f88 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x5625ffb61f48 <col:20> '_Bool' lvalue Var 0x5625ffb59430 'x$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x5625ffb61fd0 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x5625ffb61fb8 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x5625ffb61f68 <col:38> '_Bool' lvalue Var 0x5625ffb59060 'x$r_buff0_thd3' '_Bool'
|   |     |-ImplicitCastExpr 0x5625ffb62080 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x5625ffb62038 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x5625ffb62008 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x5625ffb620b0 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x5625ffb62098 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x5625ffb62060 <col:66> '_Bool' lvalue Var 0x5625ffb59430 'x$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x5625ffb623f8 <line:791:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x5625ffb62130 <col:3> '_Bool' lvalue Var 0x5625ffb59528 'x$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x5625ffb623e0 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x5625ffb623b0 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x5625ffb622d0 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x5625ffb621f0 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x5625ffb621a8 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x5625ffb62190 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x5625ffb62150 <col:20> '_Bool' lvalue Var 0x5625ffb59430 'x$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x5625ffb621d8 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x5625ffb621c0 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x5625ffb62170 <col:38> '_Bool' lvalue Var 0x5625ffb59060 'x$r_buff0_thd3' '_Bool'
|   |     | `-BinaryOperator 0x5625ffb622b0 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x5625ffb62268 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x5625ffb62250 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x5625ffb62210 <col:56> '_Bool' lvalue Var 0x5625ffb59528 'x$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x5625ffb62298 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x5625ffb62280 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x5625ffb62230 <col:74> '_Bool' lvalue Var 0x5625ffb59240 'x$r_buff1_thd3' '_Bool'
|   |     |-ImplicitCastExpr 0x5625ffb62368 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x5625ffb62320 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x5625ffb622f0 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x5625ffb62398 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x5625ffb62380 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x5625ffb62348 <col:102> '_Bool' lvalue Var 0x5625ffb59528 'x$w_buff1_used' '_Bool'
|   |-BinaryOperator 0x5625ffb62600 <line:792:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x5625ffb62418 <col:3> '_Bool' lvalue Var 0x5625ffb59060 'x$r_buff0_thd3' '_Bool'
|   | `-ImplicitCastExpr 0x5625ffb625e8 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x5625ffb625b8 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x5625ffb624d8 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x5625ffb62490 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x5625ffb62478 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x5625ffb62438 <col:20> '_Bool' lvalue Var 0x5625ffb59430 'x$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x5625ffb624c0 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x5625ffb624a8 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x5625ffb62458 <col:38> '_Bool' lvalue Var 0x5625ffb59060 'x$r_buff0_thd3' '_Bool'
|   |     |-ImplicitCastExpr 0x5625ffb62570 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x5625ffb62528 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x5625ffb624f8 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x5625ffb625a0 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x5625ffb62588 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x5625ffb62550 <col:66> '_Bool' lvalue Var 0x5625ffb59060 'x$r_buff0_thd3' '_Bool'
|   |-BinaryOperator 0x5625ffb628e8 <line:793:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x5625ffb62620 <col:3> '_Bool' lvalue Var 0x5625ffb59240 'x$r_buff1_thd3' '_Bool'
|   | `-ImplicitCastExpr 0x5625ffb628d0 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x5625ffb628a0 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x5625ffb627c0 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x5625ffb626e0 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x5625ffb62698 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x5625ffb62680 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x5625ffb62640 <col:20> '_Bool' lvalue Var 0x5625ffb59430 'x$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x5625ffb626c8 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x5625ffb626b0 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x5625ffb62660 <col:38> '_Bool' lvalue Var 0x5625ffb59060 'x$r_buff0_thd3' '_Bool'
|   |     | `-BinaryOperator 0x5625ffb627a0 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x5625ffb62758 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x5625ffb62740 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x5625ffb62700 <col:56> '_Bool' lvalue Var 0x5625ffb59528 'x$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x5625ffb62788 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x5625ffb62770 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x5625ffb62720 <col:74> '_Bool' lvalue Var 0x5625ffb59240 'x$r_buff1_thd3' '_Bool'
|   |     |-ImplicitCastExpr 0x5625ffb62858 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x5625ffb62810 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x5625ffb627e0 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x5625ffb62888 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x5625ffb62870 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x5625ffb62838 <col:102> '_Bool' lvalue Var 0x5625ffb59240 'x$r_buff1_thd3' '_Bool'
|   |-CallExpr 0x5625ffb62940 <line:794:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x5625ffb62928 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5625ffb62908 <col:3> 'void ()' Function 0x5625ffafef00 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x5625ffb62998 <line:795:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x5625ffb62980 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5625ffb62960 <col:3> 'void ()' Function 0x5625ffafee40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x5625ffb62a50 <line:796:3, col:41> 'int' '='
|   | |-DeclRefExpr 0x5625ffb629b8 <col:3> 'int' lvalue Var 0x5625ffb58120 '__unbuffered_cnt' 'int'
|   | `-BinaryOperator 0x5625ffb62a30 <col:22, col:41> 'int' '+'
|   |   |-ImplicitCastExpr 0x5625ffb62a18 <col:22> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x5625ffb629d8 <col:22> 'int' lvalue Var 0x5625ffb58120 '__unbuffered_cnt' 'int'
|   |   `-IntegerLiteral 0x5625ffb629f8 <col:41> 'int' 1
|   |-CallExpr 0x5625ffb62aa8 <line:797:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x5625ffb62a90 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5625ffb62a70 <col:3> 'void ()' Function 0x5625ffafef00 '__VERIFIER_atomic_end' 'void ()'
|   `-ReturnStmt 0x5625ffb62b20 <line:798:3, col:36>
|     `-CallExpr 0x5625ffb62b00 <col:10, col:36> 'void *'
|       `-ImplicitCastExpr 0x5625ffb62ae8 <col:10> 'void *(*)(void)' <FunctionToPointerDecay>
|         `-DeclRefExpr 0x5625ffb62ac8 <col:10> 'void *(void)' Function 0x5625ffafe958 '__VERIFIER_nondet_pointer' 'void *(void)'
|-FunctionDecl 0x5625ffb62c40 prev 0x5625ffb57e68 <line:800:1, line:802:1> line:800:6 fence 'void ()'
| `-CompoundStmt 0x5625ffb62ce0 <line:801:1, line:802:1>
|-FunctionDecl 0x5625ffb62d10 prev 0x5625ffb57f28 <line:803:1, line:805:1> line:803:6 isync 'void ()'
| `-CompoundStmt 0x5625ffb62db0 <line:804:1, line:805:1>
|-FunctionDecl 0x5625ffb62de0 prev 0x5625ffb57fe8 <line:806:1, line:808:1> line:806:6 lwfence 'void ()'
| `-CompoundStmt 0x5625ffb62e80 <line:807:1, line:808:1>
`-FunctionDecl 0x5625ffb62ee8 <line:809:1, line:835:1> line:809:5 main 'int ()'
  `-CompoundStmt 0x5625ffb64e20 <line:810:1, line:835:1>
    |-DeclStmt 0x5625ffb63000 <line:811:3, col:18>
    | `-VarDecl 0x5625ffb62f98 <col:3, col:13> col:13 used t1990 'pthread_t':'unsigned long'
    |-CallExpr 0x5625ffb63208 <line:812:3, col:54> 'int'
    | |-ImplicitCastExpr 0x5625ffb631f0 <col:3> 'int (*)(pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x5625ffb63018 <col:3> 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' Function 0x5625ffb3f488 'pthread_create' 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)'
    | |-UnaryOperator 0x5625ffb63058 <col:18, col:19> 'pthread_t *' prefix '&' cannot overflow
    | | `-DeclRefExpr 0x5625ffb63038 <col:19> 'pthread_t':'unsigned long' lvalue Var 0x5625ffb62f98 't1990' 'pthread_t':'unsigned long'
    | |-ImplicitCastExpr 0x5625ffb63248 <col:26, col:36> 'const pthread_attr_t *' <NullToPointer>
    | | `-ParenExpr 0x5625ffb630d0 <col:26, col:36> 'void *'
    | |   `-CStyleCastExpr 0x5625ffb630a8 <col:27, col:35> 'void *' <NullToPointer>
    | |     `-IntegerLiteral 0x5625ffb63070 <col:35> 'int' 0
    | |-ImplicitCastExpr 0x5625ffb63260 <col:39> 'void *(*)(void *)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x5625ffb630f0 <col:39> 'void *(void *)' Function 0x5625ffb598c8 'P0' 'void *(void *)'
    | `-ParenExpr 0x5625ffb63170 <col:43, col:53> 'void *'
    |   `-CStyleCastExpr 0x5625ffb63148 <col:44, col:52> 'void *' <NullToPointer>
    |     `-IntegerLiteral 0x5625ffb63110 <col:52> 'int' 0
    |-DeclStmt 0x5625ffb632f0 <line:813:3, col:18>
    | `-VarDecl 0x5625ffb63288 <col:3, col:13> col:13 used t1991 'pthread_t':'unsigned long'
    |-CallExpr 0x5625ffb63498 <line:814:3, col:54> 'int'
    | |-ImplicitCastExpr 0x5625ffb63480 <col:3> 'int (*)(pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x5625ffb63308 <col:3> 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' Function 0x5625ffb3f488 'pthread_create' 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)'
    | |-UnaryOperator 0x5625ffb63348 <col:18, col:19> 'pthread_t *' prefix '&' cannot overflow
    | | `-DeclRefExpr 0x5625ffb63328 <col:19> 'pthread_t':'unsigned long' lvalue Var 0x5625ffb63288 't1991' 'pthread_t':'unsigned long'
    | |-ImplicitCastExpr 0x5625ffb634d8 <col:26, col:36> 'const pthread_attr_t *' <NullToPointer>
    | | `-ParenExpr 0x5625ffb633c0 <col:26, col:36> 'void *'
    | |   `-CStyleCastExpr 0x5625ffb63398 <col:27, col:35> 'void *' <NullToPointer>
    | |     `-IntegerLiteral 0x5625ffb63360 <col:35> 'int' 0
    | |-ImplicitCastExpr 0x5625ffb634f0 <col:39> 'void *(*)(void *)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x5625ffb633e0 <col:39> 'void *(void *)' Function 0x5625ffb5c298 'P1' 'void *(void *)'
    | `-ParenExpr 0x5625ffb63460 <col:43, col:53> 'void *'
    |   `-CStyleCastExpr 0x5625ffb63438 <col:44, col:52> 'void *' <NullToPointer>
    |     `-IntegerLiteral 0x5625ffb63400 <col:52> 'int' 0
    |-DeclStmt 0x5625ffb63580 <line:815:3, col:18>
    | `-VarDecl 0x5625ffb63518 <col:3, col:13> col:13 used t1992 'pthread_t':'unsigned long'
    |-CallExpr 0x5625ffb63728 <line:816:3, col:54> 'int'
    | |-ImplicitCastExpr 0x5625ffb63710 <col:3> 'int (*)(pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x5625ffb63598 <col:3> 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' Function 0x5625ffb3f488 'pthread_create' 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)'
    | |-UnaryOperator 0x5625ffb635d8 <col:18, col:19> 'pthread_t *' prefix '&' cannot overflow
    | | `-DeclRefExpr 0x5625ffb635b8 <col:19> 'pthread_t':'unsigned long' lvalue Var 0x5625ffb63518 't1992' 'pthread_t':'unsigned long'
    | |-ImplicitCastExpr 0x5625ffb63768 <col:26, col:36> 'const pthread_attr_t *' <NullToPointer>
    | | `-ParenExpr 0x5625ffb63650 <col:26, col:36> 'void *'
    | |   `-CStyleCastExpr 0x5625ffb63628 <col:27, col:35> 'void *' <NullToPointer>
    | |     `-IntegerLiteral 0x5625ffb635f0 <col:35> 'int' 0
    | |-ImplicitCastExpr 0x5625ffb63780 <col:39> 'void *(*)(void *)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x5625ffb63670 <col:39> 'void *(void *)' Function 0x5625ffb61a20 'P2' 'void *(void *)'
    | `-ParenExpr 0x5625ffb636f0 <col:43, col:53> 'void *'
    |   `-CStyleCastExpr 0x5625ffb636c8 <col:44, col:52> 'void *' <NullToPointer>
    |     `-IntegerLiteral 0x5625ffb63690 <col:52> 'int' 0
    |-CallExpr 0x5625ffb637d0 <line:817:3, col:27> 'void'
    | `-ImplicitCastExpr 0x5625ffb637b8 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x5625ffb63798 <col:3> 'void ()' Function 0x5625ffafee40 '__VERIFIER_atomic_begin' 'void ()'
    |-BinaryOperator 0x5625ffb638a0 <line:818:3, col:41> '_Bool' '='
    | |-DeclRefExpr 0x5625ffb637f0 <col:3> '_Bool' lvalue Var 0x5625ffb58bf0 'main$tmp_guard0' '_Bool'
    | `-ImplicitCastExpr 0x5625ffb63888 <col:21, col:41> '_Bool' <IntegralToBoolean>
    |   `-BinaryOperator 0x5625ffb63868 <col:21, col:41> 'int' '=='
    |     |-ImplicitCastExpr 0x5625ffb63850 <col:21> 'int' <LValueToRValue>
    |     | `-DeclRefExpr 0x5625ffb63810 <col:21> 'int' lvalue Var 0x5625ffb58120 '__unbuffered_cnt' 'int'
    |     `-IntegerLiteral 0x5625ffb63830 <col:41> 'int' 3
    |-CallExpr 0x5625ffb638f8 <line:819:3, col:25> 'void'
    | `-ImplicitCastExpr 0x5625ffb638e0 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x5625ffb638c0 <col:3> 'void ()' Function 0x5625ffafef00 '__VERIFIER_atomic_end' 'void ()'
    |-CallExpr 0x5625ffb63970 <line:820:3, col:36> 'void'
    | |-ImplicitCastExpr 0x5625ffb63958 <col:3> 'void (*)(int)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x5625ffb63918 <col:3> 'void (int)' Function 0x5625ffafe790 '__VERIFIER_assume' 'void (int)'
    | `-ImplicitCastExpr 0x5625ffb639b0 <col:21> 'int' <IntegralCast>
    |   `-ImplicitCastExpr 0x5625ffb63998 <col:21> '_Bool' <LValueToRValue>
    |     `-DeclRefExpr 0x5625ffb63938 <col:21> '_Bool' lvalue Var 0x5625ffb58bf0 'main$tmp_guard0' '_Bool'
    |-CallExpr 0x5625ffb63a00 <line:821:3, col:27> 'void'
    | `-ImplicitCastExpr 0x5625ffb639e8 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x5625ffb639c8 <col:3> 'void ()' Function 0x5625ffafee40 '__VERIFIER_atomic_begin' 'void ()'
    |-BinaryOperator 0x5625ffb63d08 <line:822:3, col:103> 'int' '='
    | |-DeclRefExpr 0x5625ffb63a20 <col:3> 'int' lvalue Var 0x5625ffb58d68 'x' 'int'
    | `-ConditionalOperator 0x5625ffb63cd8 <col:7, col:103> 'int'
    |   |-BinaryOperator 0x5625ffb63ae0 <col:7, col:25> 'int' '&&'
    |   | |-ImplicitCastExpr 0x5625ffb63a98 <col:7> 'int' <IntegralCast>
    |   | | `-ImplicitCastExpr 0x5625ffb63a80 <col:7> '_Bool' <LValueToRValue>
    |   | |   `-DeclRefExpr 0x5625ffb63a40 <col:7> '_Bool' lvalue Var 0x5625ffb59430 'x$w_buff0_used' '_Bool'
    |   | `-ImplicitCastExpr 0x5625ffb63ac8 <col:25> 'int' <IntegralCast>
    |   |   `-ImplicitCastExpr 0x5625ffb63ab0 <col:25> '_Bool' <LValueToRValue>
    |   |     `-DeclRefExpr 0x5625ffb63a60 <col:25> '_Bool' lvalue Var 0x5625ffb58ef8 'x$r_buff0_thd0' '_Bool'
    |   |-ImplicitCastExpr 0x5625ffb63cc0 <col:42> 'int' <LValueToRValue>
    |   | `-DeclRefExpr 0x5625ffb63b00 <col:42> 'int' lvalue Var 0x5625ffb593b8 'x$w_buff0' 'int'
    |   `-ParenExpr 0x5625ffb63ca0 <col:54, col:103> 'int'
    |     `-ConditionalOperator 0x5625ffb63c70 <col:55, col:102> 'int'
    |       |-BinaryOperator 0x5625ffb63be0 <col:55, col:73> 'int' '&&'
    |       | |-ImplicitCastExpr 0x5625ffb63b78 <col:55> 'int' <IntegralCast>
    |       | | `-ImplicitCastExpr 0x5625ffb63b60 <col:55> '_Bool' <LValueToRValue>
    |       | |   `-DeclRefExpr 0x5625ffb63b20 <col:55> '_Bool' lvalue Var 0x5625ffb59528 'x$w_buff1_used' '_Bool'
    |       | `-ImplicitCastExpr 0x5625ffb63bc8 <col:73> 'int' <IntegralCast>
    |       |   `-ImplicitCastExpr 0x5625ffb63bb0 <col:73> '_Bool' <LValueToRValue>
    |       |     `-DeclRefExpr 0x5625ffb63b40 <col:73> '_Bool' lvalue Var 0x5625ffb590d8 'x$r_buff1_thd0' '_Bool'
    |       |-ImplicitCastExpr 0x5625ffb63c40 <col:90> 'int' <LValueToRValue>
    |       | `-DeclRefExpr 0x5625ffb63c00 <col:90> 'int' lvalue Var 0x5625ffb594b0 'x$w_buff1' 'int'
    |       `-ImplicitCastExpr 0x5625ffb63c58 <col:102> 'int' <LValueToRValue>
    |         `-DeclRefExpr 0x5625ffb63c20 <col:102> 'int' lvalue Var 0x5625ffb58d68 'x' 'int'
    |-BinaryOperator 0x5625ffb63f10 <line:823:3, col:66> '_Bool' '='
    | |-DeclRefExpr 0x5625ffb63d28 <col:3> '_Bool' lvalue Var 0x5625ffb59430 'x$w_buff0_used' '_Bool'
    | `-ImplicitCastExpr 0x5625ffb63ef8 <col:20, col:66> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x5625ffb63ec8 <col:20, col:66> 'int'
    |     |-BinaryOperator 0x5625ffb63de8 <col:20, col:38> 'int' '&&'
    |     | |-ImplicitCastExpr 0x5625ffb63da0 <col:20> 'int' <IntegralCast>
    |     | | `-ImplicitCastExpr 0x5625ffb63d88 <col:20> '_Bool' <LValueToRValue>
    |     | |   `-DeclRefExpr 0x5625ffb63d48 <col:20> '_Bool' lvalue Var 0x5625ffb59430 'x$w_buff0_used' '_Bool'
    |     | `-ImplicitCastExpr 0x5625ffb63dd0 <col:38> 'int' <IntegralCast>
    |     |   `-ImplicitCastExpr 0x5625ffb63db8 <col:38> '_Bool' <LValueToRValue>
    |     |     `-DeclRefExpr 0x5625ffb63d68 <col:38> '_Bool' lvalue Var 0x5625ffb58ef8 'x$r_buff0_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x5625ffb63e80 <col:55, col:62> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x5625ffb63e38 <col:55, col:62> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x5625ffb63e08 <col:62> 'int' 0
    |     `-ImplicitCastExpr 0x5625ffb63eb0 <col:66> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x5625ffb63e98 <col:66> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x5625ffb63e60 <col:66> '_Bool' lvalue Var 0x5625ffb59430 'x$w_buff0_used' '_Bool'
    |-BinaryOperator 0x5625ffb641f8 <line:824:3, col:102> '_Bool' '='
    | |-DeclRefExpr 0x5625ffb63f30 <col:3> '_Bool' lvalue Var 0x5625ffb59528 'x$w_buff1_used' '_Bool'
    | `-ImplicitCastExpr 0x5625ffb641e0 <col:20, col:102> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x5625ffb641b0 <col:20, col:102> 'int'
    |     |-BinaryOperator 0x5625ffb640d0 <col:20, col:74> 'int' '||'
    |     | |-BinaryOperator 0x5625ffb63ff0 <col:20, col:38> 'int' '&&'
    |     | | |-ImplicitCastExpr 0x5625ffb63fa8 <col:20> 'int' <IntegralCast>
    |     | | | `-ImplicitCastExpr 0x5625ffb63f90 <col:20> '_Bool' <LValueToRValue>
    |     | | |   `-DeclRefExpr 0x5625ffb63f50 <col:20> '_Bool' lvalue Var 0x5625ffb59430 'x$w_buff0_used' '_Bool'
    |     | | `-ImplicitCastExpr 0x5625ffb63fd8 <col:38> 'int' <IntegralCast>
    |     | |   `-ImplicitCastExpr 0x5625ffb63fc0 <col:38> '_Bool' <LValueToRValue>
    |     | |     `-DeclRefExpr 0x5625ffb63f70 <col:38> '_Bool' lvalue Var 0x5625ffb58ef8 'x$r_buff0_thd0' '_Bool'
    |     | `-BinaryOperator 0x5625ffb640b0 <col:56, col:74> 'int' '&&'
    |     |   |-ImplicitCastExpr 0x5625ffb64068 <col:56> 'int' <IntegralCast>
    |     |   | `-ImplicitCastExpr 0x5625ffb64050 <col:56> '_Bool' <LValueToRValue>
    |     |   |   `-DeclRefExpr 0x5625ffb64010 <col:56> '_Bool' lvalue Var 0x5625ffb59528 'x$w_buff1_used' '_Bool'
    |     |   `-ImplicitCastExpr 0x5625ffb64098 <col:74> 'int' <IntegralCast>
    |     |     `-ImplicitCastExpr 0x5625ffb64080 <col:74> '_Bool' <LValueToRValue>
    |     |       `-DeclRefExpr 0x5625ffb64030 <col:74> '_Bool' lvalue Var 0x5625ffb590d8 'x$r_buff1_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x5625ffb64168 <col:91, col:98> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x5625ffb64120 <col:91, col:98> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x5625ffb640f0 <col:98> 'int' 0
    |     `-ImplicitCastExpr 0x5625ffb64198 <col:102> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x5625ffb64180 <col:102> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x5625ffb64148 <col:102> '_Bool' lvalue Var 0x5625ffb59528 'x$w_buff1_used' '_Bool'
    |-BinaryOperator 0x5625ffb64400 <line:825:3, col:66> '_Bool' '='
    | |-DeclRefExpr 0x5625ffb64218 <col:3> '_Bool' lvalue Var 0x5625ffb58ef8 'x$r_buff0_thd0' '_Bool'
    | `-ImplicitCastExpr 0x5625ffb643e8 <col:20, col:66> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x5625ffb643b8 <col:20, col:66> 'int'
    |     |-BinaryOperator 0x5625ffb642d8 <col:20, col:38> 'int' '&&'
    |     | |-ImplicitCastExpr 0x5625ffb64290 <col:20> 'int' <IntegralCast>
    |     | | `-ImplicitCastExpr 0x5625ffb64278 <col:20> '_Bool' <LValueToRValue>
    |     | |   `-DeclRefExpr 0x5625ffb64238 <col:20> '_Bool' lvalue Var 0x5625ffb59430 'x$w_buff0_used' '_Bool'
    |     | `-ImplicitCastExpr 0x5625ffb642c0 <col:38> 'int' <IntegralCast>
    |     |   `-ImplicitCastExpr 0x5625ffb642a8 <col:38> '_Bool' <LValueToRValue>
    |     |     `-DeclRefExpr 0x5625ffb64258 <col:38> '_Bool' lvalue Var 0x5625ffb58ef8 'x$r_buff0_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x5625ffb64370 <col:55, col:62> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x5625ffb64328 <col:55, col:62> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x5625ffb642f8 <col:62> 'int' 0
    |     `-ImplicitCastExpr 0x5625ffb643a0 <col:66> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x5625ffb64388 <col:66> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x5625ffb64350 <col:66> '_Bool' lvalue Var 0x5625ffb58ef8 'x$r_buff0_thd0' '_Bool'
    |-BinaryOperator 0x5625ffb646e8 <line:826:3, col:102> '_Bool' '='
    | |-DeclRefExpr 0x5625ffb64420 <col:3> '_Bool' lvalue Var 0x5625ffb590d8 'x$r_buff1_thd0' '_Bool'
    | `-ImplicitCastExpr 0x5625ffb646d0 <col:20, col:102> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x5625ffb646a0 <col:20, col:102> 'int'
    |     |-BinaryOperator 0x5625ffb645c0 <col:20, col:74> 'int' '||'
    |     | |-BinaryOperator 0x5625ffb644e0 <col:20, col:38> 'int' '&&'
    |     | | |-ImplicitCastExpr 0x5625ffb64498 <col:20> 'int' <IntegralCast>
    |     | | | `-ImplicitCastExpr 0x5625ffb64480 <col:20> '_Bool' <LValueToRValue>
    |     | | |   `-DeclRefExpr 0x5625ffb64440 <col:20> '_Bool' lvalue Var 0x5625ffb59430 'x$w_buff0_used' '_Bool'
    |     | | `-ImplicitCastExpr 0x5625ffb644c8 <col:38> 'int' <IntegralCast>
    |     | |   `-ImplicitCastExpr 0x5625ffb644b0 <col:38> '_Bool' <LValueToRValue>
    |     | |     `-DeclRefExpr 0x5625ffb64460 <col:38> '_Bool' lvalue Var 0x5625ffb58ef8 'x$r_buff0_thd0' '_Bool'
    |     | `-BinaryOperator 0x5625ffb645a0 <col:56, col:74> 'int' '&&'
    |     |   |-ImplicitCastExpr 0x5625ffb64558 <col:56> 'int' <IntegralCast>
    |     |   | `-ImplicitCastExpr 0x5625ffb64540 <col:56> '_Bool' <LValueToRValue>
    |     |   |   `-DeclRefExpr 0x5625ffb64500 <col:56> '_Bool' lvalue Var 0x5625ffb59528 'x$w_buff1_used' '_Bool'
    |     |   `-ImplicitCastExpr 0x5625ffb64588 <col:74> 'int' <IntegralCast>
    |     |     `-ImplicitCastExpr 0x5625ffb64570 <col:74> '_Bool' <LValueToRValue>
    |     |       `-DeclRefExpr 0x5625ffb64520 <col:74> '_Bool' lvalue Var 0x5625ffb590d8 'x$r_buff1_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x5625ffb64658 <col:91, col:98> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x5625ffb64610 <col:91, col:98> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x5625ffb645e0 <col:98> 'int' 0
    |     `-ImplicitCastExpr 0x5625ffb64688 <col:102> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x5625ffb64670 <col:102> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x5625ffb64638 <col:102> '_Bool' lvalue Var 0x5625ffb590d8 'x$r_buff1_thd0' '_Bool'
    |-CallExpr 0x5625ffb64740 <line:827:3, col:25> 'void'
    | `-ImplicitCastExpr 0x5625ffb64728 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x5625ffb64708 <col:3> 'void ()' Function 0x5625ffafef00 '__VERIFIER_atomic_end' 'void ()'
    |-CallExpr 0x5625ffb64798 <line:828:3, col:27> 'void'
    | `-ImplicitCastExpr 0x5625ffb64780 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x5625ffb64760 <col:3> 'void ()' Function 0x5625ffafee40 '__VERIFIER_atomic_begin' 'void ()'
    |-BinaryOperator 0x5625ffb64848 <line:829:3, col:45> '_Bool' '='
    | |-DeclRefExpr 0x5625ffb647b8 <col:3> '_Bool' lvalue Var 0x5625ffb59738 'weak$$choice1' '_Bool'
    | `-ImplicitCastExpr 0x5625ffb64830 <col:19, col:45> '_Bool' <PointerToBoolean>
    |   `-CallExpr 0x5625ffb64810 <col:19, col:45> 'void *'
    |     `-ImplicitCastExpr 0x5625ffb647f8 <col:19> 'void *(*)(void)' <FunctionToPointerDecay>
    |       `-DeclRefExpr 0x5625ffb647d8 <col:19> 'void *(void)' Function 0x5625ffafe958 '__VERIFIER_nondet_pointer' 'void *(void)'
    |-BinaryOperator 0x5625ffb64a80 <line:830:3, col:140> 'int' '='
    | |-DeclRefExpr 0x5625ffb64868 <col:3> 'int' lvalue Var 0x5625ffb58360 '__unbuffered_p1_EAX' 'int'
    | `-ConditionalOperator 0x5625ffb64a50 <col:25, col:140> 'int'
    |   |-ImplicitCastExpr 0x5625ffb64a20 <col:25> 'int' <IntegralCast>
    |   | `-ImplicitCastExpr 0x5625ffb64a08 <col:25> '_Bool' <LValueToRValue>
    |   |   `-DeclRefExpr 0x5625ffb64888 <col:25> '_Bool' lvalue Var 0x5625ffb588b0 '__unbuffered_p1_EAX$read_delayed' '_Bool'
    |   |-ParenExpr 0x5625ffb649c8 <col:60, col:136> 'int'
    |   | `-ConditionalOperator 0x5625ffb64998 <col:61, col:117> 'int'
    |   |   |-ImplicitCastExpr 0x5625ffb64950 <col:61> 'int' <IntegralCast>
    |   |   | `-ImplicitCastExpr 0x5625ffb64938 <col:61> '_Bool' <LValueToRValue>
    |   |   |   `-DeclRefExpr 0x5625ffb648a8 <col:61> '_Bool' lvalue Var 0x5625ffb59738 'weak$$choice1' '_Bool'
    |   |   |-ImplicitCastExpr 0x5625ffb64968 <col:77, col:78> 'int' <LValueToRValue>
    |   |   | `-UnaryOperator 0x5625ffb64900 <col:77, col:78> 'int' lvalue prefix '*' cannot overflow
    |   |   |   `-ImplicitCastExpr 0x5625ffb648e8 <col:78> 'int *' <LValueToRValue>
    |   |   |     `-DeclRefExpr 0x5625ffb648c8 <col:78> 'int *' lvalue Var 0x5625ffb58930 '__unbuffered_p1_EAX$read_delayed_var' 'int *'
    |   |   `-ImplicitCastExpr 0x5625ffb64980 <col:117> 'int' <LValueToRValue>
    |   |     `-DeclRefExpr 0x5625ffb64918 <col:117> 'int' lvalue Var 0x5625ffb58360 '__unbuffered_p1_EAX' 'int'
    |   `-ImplicitCastExpr 0x5625ffb64a38 <col:140> 'int' <LValueToRValue>
    |     `-DeclRefExpr 0x5625ffb649e8 <col:140> 'int' lvalue Var 0x5625ffb58360 '__unbuffered_p1_EAX' 'int'
    |-BinaryOperator 0x5625ffb64cc8 <line:831:3, col:85> '_Bool' '='
    | |-DeclRefExpr 0x5625ffb64aa0 <col:3> '_Bool' lvalue Var 0x5625ffb58c68 'main$tmp_guard1' '_Bool'
    | `-ImplicitCastExpr 0x5625ffb64cb0 <col:21, col:85> '_Bool' <IntegralToBoolean>
    |   `-UnaryOperator 0x5625ffb64c98 <col:21, col:85> 'int' prefix '!' cannot overflow
    |     `-ParenExpr 0x5625ffb64c78 <col:22, col:85> 'int'
    |       `-BinaryOperator 0x5625ffb64c58 <col:23, col:84> 'int' '&&'
    |         |-BinaryOperator 0x5625ffb64bc0 <col:23, col:56> 'int' '&&'
    |         | |-BinaryOperator 0x5625ffb64b18 <col:23, col:28> 'int' '=='
    |         | | |-ImplicitCastExpr 0x5625ffb64b00 <col:23> 'int' <LValueToRValue>
    |         | | | `-DeclRefExpr 0x5625ffb64ac0 <col:23> 'int' lvalue Var 0x5625ffb59628 'y' 'int'
    |         | | `-IntegerLiteral 0x5625ffb64ae0 <col:28> 'int' 2
    |         | `-BinaryOperator 0x5625ffb64b90 <col:33, col:56> 'int' '=='
    |         |   |-ImplicitCastExpr 0x5625ffb64b78 <col:33> 'int' <LValueToRValue>
    |         |   | `-DeclRefExpr 0x5625ffb64b38 <col:33> 'int' lvalue Var 0x5625ffb58240 '__unbuffered_p0_EAX' 'int'
    |         |   `-IntegerLiteral 0x5625ffb64b58 <col:56> 'int' 2
    |         `-BinaryOperator 0x5625ffb64c38 <col:61, col:84> 'int' '=='
    |           |-ImplicitCastExpr 0x5625ffb64c20 <col:61> 'int' <LValueToRValue>
    |           | `-DeclRefExpr 0x5625ffb64be0 <col:61> 'int' lvalue Var 0x5625ffb58360 '__unbuffered_p1_EAX' 'int'
    |           `-IntegerLiteral 0x5625ffb64c00 <col:84> 'int' 1
    |-CallExpr 0x5625ffb64d20 <line:832:3, col:25> 'void'
    | `-ImplicitCastExpr 0x5625ffb64d08 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x5625ffb64ce8 <col:3> 'void ()' Function 0x5625ffafef00 '__VERIFIER_atomic_end' 'void ()'
    |-CallExpr 0x5625ffb64d98 <line:833:3, col:36> 'void'
    | |-ImplicitCastExpr 0x5625ffb64d80 <col:3> 'void (*)(int)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x5625ffb64d40 <col:3> 'void (int)' Function 0x5625ffafebc8 '__VERIFIER_assert' 'void (int)'
    | `-ImplicitCastExpr 0x5625ffb64dd8 <col:21> 'int' <IntegralCast>
    |   `-ImplicitCastExpr 0x5625ffb64dc0 <col:21> '_Bool' <LValueToRValue>
    |     `-DeclRefExpr 0x5625ffb64d60 <col:21> '_Bool' lvalue Var 0x5625ffb58c68 'main$tmp_guard1' '_Bool'
    `-ReturnStmt 0x5625ffb64e10 <line:834:3, col:10>
      `-IntegerLiteral 0x5625ffb64df0 <col:10> 'int' 0
