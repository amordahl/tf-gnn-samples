TranslationUnitDecl 0x562bf74b2e18 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x562bf74b36d8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x562bf74b33b0 '__int128'
|-TypedefDecl 0x562bf74b3748 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x562bf74b33d0 'unsigned __int128'
|-TypedefDecl 0x562bf74b3a50 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x562bf74b3820 'struct __NSConstantString_tag'
|   `-Record 0x562bf74b37a0 '__NSConstantString_tag'
|-TypedefDecl 0x562bf74b3af8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x562bf74b3ab0 'char *'
|   `-BuiltinType 0x562bf74b2eb0 'char'
|-TypedefDecl 0x562bf74f2650 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'struct __va_list_tag [1]'
| `-ConstantArrayType 0x562bf74b3d90 'struct __va_list_tag [1]' 1 
|   `-RecordType 0x562bf74b3bd0 'struct __va_list_tag'
|     `-Record 0x562bf74b3b50 '__va_list_tag'
|-FunctionDecl 0x562bf74f2790 <./split_6/mix056_power.opt_false-unreach-call.i:1:1, col:34> col:13 used __VERIFIER_assume 'void (int)' extern
| `-ParmVarDecl 0x562bf74f26c0 <col:31> col:34 'int'
|-FunctionDecl 0x562bf74f2958 <line:2:1, col:45> col:15 used __VERIFIER_nondet_pointer 'void *(void)' extern
|-FunctionDecl 0x562bf74f2a80 <line:3:1, col:61> col:13 used __VERIFIER_error 'void () __attribute__((noreturn))' extern
|-FunctionDecl 0x562bf74f2bc8 <line:4:1, col:99> col:6 used __VERIFIER_assert 'void (int)'
| |-ParmVarDecl 0x562bf74f2b38 <col:24, col:28> col:28 used expression 'int'
| `-CompoundStmt 0x562bf74f2df8 <col:40, col:99>
|   |-IfStmt 0x562bf74f2dc8 <col:42, col:88>
|   | |-UnaryOperator 0x562bf74f2ca8 <col:46, col:47> 'int' prefix '!' cannot overflow
|   | | `-ImplicitCastExpr 0x562bf74f2c90 <col:47> 'int' <LValueToRValue>
|   | |   `-DeclRefExpr 0x562bf74f2c70 <col:47> 'int' lvalue ParmVar 0x562bf74f2b38 'expression' 'int'
|   | `-CompoundStmt 0x562bf74f2db0 <col:59, col:88>
|   |   `-LabelStmt 0x562bf74f2d98 <col:61, col:85> 'ERROR'
|   |     `-CallExpr 0x562bf74f2d28 <col:68, col:85> 'void'
|   |       `-ImplicitCastExpr 0x562bf74f2d10 <col:68> 'void (*)() __attribute__((noreturn))' <FunctionToPointerDecay>
|   |         `-DeclRefExpr 0x562bf74f2cc0 <col:68> 'void () __attribute__((noreturn))' Function 0x562bf74f2a80 '__VERIFIER_error' 'void () __attribute__((noreturn))'
|   |-NullStmt 0x562bf74f2de0 <col:89>
|   `-ReturnStmt 0x562bf74f2de8 <col:91>
|-FunctionDecl 0x562bf74f2e40 <line:5:1, col:37> col:13 used __VERIFIER_atomic_begin 'void ()' extern
|-FunctionDecl 0x562bf74f2f00 <line:6:1, col:35> col:13 used __VERIFIER_atomic_end 'void ()' extern
|-FunctionDecl 0x562bf74f3280 <line:8:1, line:10:76> line:8:13 __assert_fail 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x562bf74f2fb8 <col:28, col:40> col:40 __assertion 'const char *'
| |-ParmVarDecl 0x562bf74f3038 <col:53, col:65> col:65 __file 'const char *'
| |-ParmVarDecl 0x562bf74f30b8 <line:9:7, col:20> col:20 __line 'unsigned int'
| |-ParmVarDecl 0x562bf74f3138 <col:28, col:40> col:40 __function 'const char *'
| `-NoThrowAttr 0x562bf74f3340 <line:10:22>
|-FunctionDecl 0x562bf7519390 <line:11:1, line:13:76> line:11:13 __assert_perror_fail 'void (int, const char *, unsigned int, const char *) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x562bf74f33b0 <col:35, col:39> col:39 __errnum 'int'
| |-ParmVarDecl 0x562bf74f3430 <col:49, col:61> col:61 __file 'const char *'
| |-ParmVarDecl 0x562bf74f34b0 <line:12:7, col:20> col:20 __line 'unsigned int'
| |-ParmVarDecl 0x562bf74f3530 <col:28, col:40> col:40 __function 'const char *'
| `-NoThrowAttr 0x562bf7519450 <line:13:22>
|-FunctionDecl 0x562bf7519700 <line:14:1, line:15:76> line:14:13 __assert 'void (const char *, const char *, int) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x562bf75194c0 <col:23, col:35> col:35 __assertion 'const char *'
| |-ParmVarDecl 0x562bf7519540 <col:48, col:60> col:60 __file 'const char *'
| |-ParmVarDecl 0x562bf75195c0 <col:68, col:72> col:72 __line 'int'
| `-NoThrowAttr 0x562bf75197b8 <line:15:22>
|-TypedefDecl 0x562bf7519828 <line:17:1, col:23> col:23 __u_char 'unsigned char'
| `-BuiltinType 0x562bf74b2f70 'unsigned char'
|-TypedefDecl 0x562bf7519898 <line:18:1, col:28> col:28 __u_short 'unsigned short'
| `-BuiltinType 0x562bf74b2f90 'unsigned short'
|-TypedefDecl 0x562bf7519908 <line:19:1, col:22> col:22 __u_int 'unsigned int'
| `-BuiltinType 0x562bf74b2fb0 'unsigned int'
|-TypedefDecl 0x562bf7519978 <line:20:1, col:27> col:27 __u_long 'unsigned long'
| `-BuiltinType 0x562bf74b2fd0 'unsigned long'
|-TypedefDecl 0x562bf75199e8 <line:21:1, col:21> col:21 __int8_t 'signed char'
| `-BuiltinType 0x562bf74b2ed0 'signed char'
|-TypedefDecl 0x562bf7519a58 <line:22:1, col:23> col:23 __uint8_t 'unsigned char'
| `-BuiltinType 0x562bf74b2f70 'unsigned char'
|-TypedefDecl 0x562bf7519ac8 <line:23:1, col:26> col:26 __int16_t 'short'
| `-BuiltinType 0x562bf74b2ef0 'short'
|-TypedefDecl 0x562bf7519b38 <line:24:1, col:28> col:28 __uint16_t 'unsigned short'
| `-BuiltinType 0x562bf74b2f90 'unsigned short'
|-TypedefDecl 0x562bf7519ba8 <line:25:1, col:20> col:20 __int32_t 'int'
| `-BuiltinType 0x562bf74b2f10 'int'
|-TypedefDecl 0x562bf7519c18 <line:26:1, col:22> col:22 __uint32_t 'unsigned int'
| `-BuiltinType 0x562bf74b2fb0 'unsigned int'
|-TypedefDecl 0x562bf7519c88 <line:27:1, col:25> col:25 __int64_t 'long'
| `-BuiltinType 0x562bf74b2f30 'long'
|-TypedefDecl 0x562bf7519cf8 <line:28:1, col:27> col:27 referenced __uint64_t 'unsigned long'
| `-BuiltinType 0x562bf74b2fd0 'unsigned long'
|-TypedefDecl 0x562bf7519d68 <line:29:1, col:18> col:18 referenced __quad_t 'long'
| `-BuiltinType 0x562bf74b2f30 'long'
|-TypedefDecl 0x562bf7519dd8 <line:30:1, col:27> col:27 __u_quad_t 'unsigned long'
| `-BuiltinType 0x562bf74b2fd0 'unsigned long'
|-TypedefDecl 0x562bf7519e48 <line:31:1, col:27> col:27 __dev_t 'unsigned long'
| `-BuiltinType 0x562bf74b2fd0 'unsigned long'
|-TypedefDecl 0x562bf7519eb8 <line:32:1, col:22> col:22 __uid_t 'unsigned int'
| `-BuiltinType 0x562bf74b2fb0 'unsigned int'
|-TypedefDecl 0x562bf7519f28 <line:33:1, col:22> col:22 __gid_t 'unsigned int'
| `-BuiltinType 0x562bf74b2fb0 'unsigned int'
|-TypedefDecl 0x562bf7519f98 <line:34:1, col:27> col:27 __ino_t 'unsigned long'
| `-BuiltinType 0x562bf74b2fd0 'unsigned long'
|-TypedefDecl 0x562bf751a008 <line:35:1, col:27> col:27 __ino64_t 'unsigned long'
| `-BuiltinType 0x562bf74b2fd0 'unsigned long'
|-TypedefDecl 0x562bf751a078 <line:36:1, col:22> col:22 __mode_t 'unsigned int'
| `-BuiltinType 0x562bf74b2fb0 'unsigned int'
|-TypedefDecl 0x562bf751a0e8 <line:37:1, col:27> col:27 __nlink_t 'unsigned long'
| `-BuiltinType 0x562bf74b2fd0 'unsigned long'
|-TypedefDecl 0x562bf751a158 <line:38:1, col:18> col:18 __off_t 'long'
| `-BuiltinType 0x562bf74b2f30 'long'
|-TypedefDecl 0x562bf751a1c8 <line:39:1, col:18> col:18 referenced __off64_t 'long'
| `-BuiltinType 0x562bf74b2f30 'long'
|-TypedefDecl 0x562bf751a238 <line:40:1, col:13> col:13 referenced __pid_t 'int'
| `-BuiltinType 0x562bf74b2f10 'int'
|-RecordDecl 0x562bf751a290 <line:41:9, col:32> col:9 struct definition
| `-FieldDecl 0x562bf751a408 <col:18, col:29> col:22 __val 'int [2]'
|-TypedefDecl 0x562bf751a4c0 <col:1, col:34> col:34 __fsid_t 'struct __fsid_t':'__fsid_t'
| `-ElaboratedType 0x562bf751a460 'struct __fsid_t' sugar
|   `-RecordType 0x562bf751a310 '__fsid_t'
|     `-Record 0x562bf751a290 ''
|-TypedefDecl 0x562bf751a548 <line:42:1, col:18> col:18 referenced __clock_t 'long'
| `-BuiltinType 0x562bf74b2f30 'long'
|-TypedefDecl 0x562bf751a5b8 <line:43:1, col:27> col:27 __rlim_t 'unsigned long'
| `-BuiltinType 0x562bf74b2fd0 'unsigned long'
|-TypedefDecl 0x562bf751a628 <line:44:1, col:27> col:27 __rlim64_t 'unsigned long'
| `-BuiltinType 0x562bf74b2fd0 'unsigned long'
|-TypedefDecl 0x562bf751a698 <line:45:1, col:22> col:22 __id_t 'unsigned int'
| `-BuiltinType 0x562bf74b2fb0 'unsigned int'
|-TypedefDecl 0x562bf751a708 <line:46:1, col:18> col:18 referenced __time_t 'long'
| `-BuiltinType 0x562bf74b2f30 'long'
|-TypedefDecl 0x562bf751a778 <line:47:1, col:22> col:22 __useconds_t 'unsigned int'
| `-BuiltinType 0x562bf74b2fb0 'unsigned int'
|-TypedefDecl 0x562bf751a7e8 <line:48:1, col:18> col:18 __suseconds_t 'long'
| `-BuiltinType 0x562bf74b2f30 'long'
|-TypedefDecl 0x562bf751a858 <line:49:1, col:13> col:13 __daddr_t 'int'
| `-BuiltinType 0x562bf74b2f10 'int'
|-TypedefDecl 0x562bf751a8c8 <line:50:1, col:13> col:13 __key_t 'int'
| `-BuiltinType 0x562bf74b2f10 'int'
|-TypedefDecl 0x562bf751a938 <line:51:1, col:13> col:13 referenced __clockid_t 'int'
| `-BuiltinType 0x562bf74b2f10 'int'
|-TypedefDecl 0x562bf751a9a8 <line:52:1, col:16> col:16 referenced __timer_t 'void *'
| `-PointerType 0x562bf74b3630 'void *'
|   `-BuiltinType 0x562bf74b2e70 'void'
|-TypedefDecl 0x562bf751aa18 <line:53:1, col:18> col:18 __blksize_t 'long'
| `-BuiltinType 0x562bf74b2f30 'long'
|-TypedefDecl 0x562bf751aa88 <line:54:1, col:18> col:18 __blkcnt_t 'long'
| `-BuiltinType 0x562bf74b2f30 'long'
|-TypedefDecl 0x562bf751aaf8 <line:55:1, col:18> col:18 __blkcnt64_t 'long'
| `-BuiltinType 0x562bf74b2f30 'long'
|-TypedefDecl 0x562bf751ab68 <line:56:1, col:27> col:27 __fsblkcnt_t 'unsigned long'
| `-BuiltinType 0x562bf74b2fd0 'unsigned long'
|-TypedefDecl 0x562bf751abd8 <line:57:1, col:27> col:27 __fsblkcnt64_t 'unsigned long'
| `-BuiltinType 0x562bf74b2fd0 'unsigned long'
|-TypedefDecl 0x562bf751ac48 <line:58:1, col:27> col:27 __fsfilcnt_t 'unsigned long'
| `-BuiltinType 0x562bf74b2fd0 'unsigned long'
|-TypedefDecl 0x562bf751acb8 <line:59:1, col:27> col:27 __fsfilcnt64_t 'unsigned long'
| `-BuiltinType 0x562bf74b2fd0 'unsigned long'
|-TypedefDecl 0x562bf751ad28 <line:60:1, col:18> col:18 __fsword_t 'long'
| `-BuiltinType 0x562bf74b2f30 'long'
|-TypedefDecl 0x562bf751ad98 <line:61:1, col:18> col:18 __ssize_t 'long'
| `-BuiltinType 0x562bf74b2f30 'long'
|-TypedefDecl 0x562bf751ae08 <line:62:1, col:18> col:18 referenced __syscall_slong_t 'long'
| `-BuiltinType 0x562bf74b2f30 'long'
|-TypedefDecl 0x562bf751ae78 <line:63:1, col:27> col:27 __syscall_ulong_t 'unsigned long'
| `-BuiltinType 0x562bf74b2fd0 'unsigned long'
|-TypedefDecl 0x562bf751af08 <line:64:1, col:19> col:19 __loff_t '__off64_t':'long'
| `-TypedefType 0x562bf751aed0 '__off64_t' sugar
|   |-Typedef 0x562bf751a1c8 '__off64_t'
|   `-BuiltinType 0x562bf74b2f30 'long'
|-TypedefDecl 0x562bf751b000 <line:65:1, col:19> col:19 __qaddr_t '__quad_t *'
| `-PointerType 0x562bf751afc0 '__quad_t *'
|   `-TypedefType 0x562bf751af60 '__quad_t' sugar
|     |-Typedef 0x562bf7519d68 '__quad_t'
|     `-BuiltinType 0x562bf74b2f30 'long'
|-TypedefDecl 0x562bf751b070 <line:66:1, col:15> col:15 __caddr_t 'char *'
| `-PointerType 0x562bf74b3ab0 'char *'
|   `-BuiltinType 0x562bf74b2eb0 'char'
|-TypedefDecl 0x562bf751b0e0 <line:67:1, col:18> col:18 __intptr_t 'long'
| `-BuiltinType 0x562bf74b2f30 'long'
|-TypedefDecl 0x562bf751b150 <line:68:1, col:22> col:22 __socklen_t 'unsigned int'
| `-BuiltinType 0x562bf74b2fb0 'unsigned int'
|-FunctionDecl 0x562bf751b298 <line:69:1, line:73:1> line:70:1 __bswap_32 'unsigned int (unsigned int)' static inline
| |-ParmVarDecl 0x562bf751b1c0 <col:13, col:26> col:26 used __bsx 'unsigned int'
| `-CompoundStmt 0x562bf751c5e8 <line:71:1, line:73:1>
|   `-ReturnStmt 0x562bf751c5d8 <line:72:3, col:34>
|     `-CallExpr 0x562bf751c598 <col:10, col:34> 'unsigned int'
|       |-ImplicitCastExpr 0x562bf751c580 <col:10> 'unsigned int (*)(unsigned int)' <BuiltinFnToFnPtr>
|       | `-DeclRefExpr 0x562bf751c510 <col:10> '<builtin fn type>' Function 0x562bf751c380 '__builtin_bswap32' 'unsigned int (unsigned int)'
|       `-ImplicitCastExpr 0x562bf751c5c0 <col:29> 'unsigned int' <LValueToRValue>
|         `-DeclRefExpr 0x562bf751c530 <col:29> 'unsigned int' lvalue ParmVar 0x562bf751b1c0 '__bsx' 'unsigned int'
|-FunctionDecl 0x562bf751c380 <col:10> col:10 implicit used __builtin_bswap32 'unsigned int (unsigned int)' extern
| |-ParmVarDecl 0x562bf751c420 <<invalid sloc>> <invalid sloc> 'unsigned int'
| |-NoThrowAttr 0x562bf751c490 <col:10> Implicit
| `-ConstAttr 0x562bf751c4e8 <col:10> Implicit
|-FunctionDecl 0x562bf751c740 <line:74:1, line:78:1> line:75:1 __bswap_64 '__uint64_t (__uint64_t)' static inline
| |-ParmVarDecl 0x562bf751c638 <col:13, col:24> col:24 used __bsx '__uint64_t':'unsigned long'
| `-CompoundStmt 0x562bf751ca58 <line:76:1, line:78:1>
|   `-ReturnStmt 0x562bf751ca48 <line:77:3, col:34>
|     `-CallExpr 0x562bf751ca08 <col:10, col:34> 'unsigned long'
|       |-ImplicitCastExpr 0x562bf751c9f0 <col:10> 'unsigned long (*)(unsigned long)' <BuiltinFnToFnPtr>
|       | `-DeclRefExpr 0x562bf751c978 <col:10> '<builtin fn type>' Function 0x562bf751c7e8 '__builtin_bswap64' 'unsigned long (unsigned long)'
|       `-ImplicitCastExpr 0x562bf751ca30 <col:29> '__uint64_t':'unsigned long' <LValueToRValue>
|         `-DeclRefExpr 0x562bf751c998 <col:29> '__uint64_t':'unsigned long' lvalue ParmVar 0x562bf751c638 '__bsx' '__uint64_t':'unsigned long'
|-FunctionDecl 0x562bf751c7e8 <col:10> col:10 implicit used __builtin_bswap64 'unsigned long (unsigned long)' extern
| |-ParmVarDecl 0x562bf751c888 <<invalid sloc>> <invalid sloc> 'unsigned long'
| |-NoThrowAttr 0x562bf751c8f8 <col:10> Implicit
| `-ConstAttr 0x562bf751c950 <col:10> Implicit
|-TypedefDecl 0x562bf751ca88 <line:79:1, col:27> col:27 referenced size_t 'unsigned long'
| `-BuiltinType 0x562bf74b2fd0 'unsigned long'
|-TypedefDecl 0x562bf751cb18 <line:81:1, col:18> col:18 referenced time_t '__time_t':'long'
| `-TypedefType 0x562bf751cae0 '__time_t' sugar
|   |-Typedef 0x562bf751a708 '__time_t'
|   `-BuiltinType 0x562bf74b2f30 'long'
|-RecordDecl 0x562bf751cb70 <line:84:1, line:88:3> line:84:8 struct timespec definition
| |-FieldDecl 0x562bf751cc28 <line:86:5, col:14> col:14 tv_sec '__time_t':'long'
| `-FieldDecl 0x562bf751ccb8 <line:87:5, col:23> col:23 tv_nsec '__syscall_slong_t':'long'
|-TypedefDecl 0x562bf751cd48 <line:89:1, col:17> col:17 referenced pid_t '__pid_t':'int'
| `-TypedefType 0x562bf751cd10 '__pid_t' sugar
|   |-Typedef 0x562bf751a238 '__pid_t'
|   `-BuiltinType 0x562bf74b2f10 'int'
|-RecordDecl 0x562bf751cda0 <line:90:1, line:93:3> line:90:8 struct sched_param definition
| `-FieldDecl 0x562bf751ce60 <line:92:5, col:9> col:9 __sched_priority 'int'
|-RecordDecl 0x562bf751ceb0 <line:96:1, line:99:3> line:96:8 struct __sched_param definition
| `-FieldDecl 0x562bf751cf70 <line:98:5, col:9> col:9 __sched_priority 'int'
|-TypedefDecl 0x562bf751cfd8 <line:100:1, col:27> col:27 referenced __cpu_mask 'unsigned long'
| `-BuiltinType 0x562bf74b2fd0 'unsigned long'
|-RecordDecl 0x562bf751d030 <line:101:9, line:104:1> line:101:9 struct definition
| `-FieldDecl 0x562bf751d2c0 <line:103:3, col:53> col:14 __bits '__cpu_mask [64]'
|-TypedefDecl 0x562bf751e3a0 <line:101:1, line:104:3> col:3 referenced cpu_set_t 'struct cpu_set_t':'cpu_set_t'
| `-ElaboratedType 0x562bf751d310 'struct cpu_set_t' sugar
|   `-RecordType 0x562bf751d0b0 'cpu_set_t'
|     `-Record 0x562bf751d030 ''
|-FunctionDecl 0x562bf751e678 <line:106:1, line:107:42> line:106:12 __sched_cpucount 'int (size_t, const cpu_set_t *)' extern
| |-ParmVarDecl 0x562bf751e448 <col:30, col:37> col:37 __setsize 'size_t':'unsigned long'
| |-ParmVarDecl 0x562bf751e550 <col:48, col:65> col:65 __setp 'const cpu_set_t *'
| `-NoThrowAttr 0x562bf751e728 <line:107:19>
|-FunctionDecl 0x562bf751e900 <line:108:1, col:92> col:19 __sched_cpualloc 'cpu_set_t *(size_t)' extern
| |-ParmVarDecl 0x562bf751e790 <col:37, col:44> col:44 __count 'size_t':'unsigned long'
| `-NoThrowAttr 0x562bf751e9a8 <col:69>
|-FunctionDecl 0x562bf751eb20 <line:109:1, col:87> col:13 __sched_cpufree 'void (cpu_set_t *)' extern
| |-ParmVarDecl 0x562bf751ea10 <col:30, col:41> col:41 __set 'cpu_set_t *'
| `-NoThrowAttr 0x562bf751ebc8 <col:64>
|-FunctionDecl 0x562bf751ee88 <line:112:1, line:113:45> line:112:12 sched_setparam 'int (__pid_t, const struct sched_param *)' extern
| |-ParmVarDecl 0x562bf751ec30 <col:28, col:36> col:36 __pid '__pid_t':'int'
| |-ParmVarDecl 0x562bf751ed68 <col:43, col:69> col:69 __param 'const struct sched_param *'
| `-NoThrowAttr 0x562bf751ef38 <line:113:22>
|-FunctionDecl 0x562bf751f1b8 <line:114:1, col:111> col:12 sched_getparam 'int (__pid_t, struct sched_param *)' extern
| |-ParmVarDecl 0x562bf751efa0 <col:28, col:36> col:36 __pid '__pid_t':'int'
| |-ParmVarDecl 0x562bf751f098 <col:43, col:63> col:63 __param 'struct sched_param *'
| `-NoThrowAttr 0x562bf751f268 <col:88>
|-FunctionDecl 0x562bf751f588 <line:115:1, line:116:85> line:115:12 sched_setscheduler 'int (__pid_t, int, const struct sched_param *)' extern
| |-ParmVarDecl 0x562bf751f2d0 <col:32, col:40> col:40 __pid '__pid_t':'int'
| |-ParmVarDecl 0x562bf751f3b0 <col:47, col:51> col:51 __policy 'int'
| |-ParmVarDecl 0x562bf751f440 <line:116:11, col:37> col:37 __param 'const struct sched_param *'
| `-NoThrowAttr 0x562bf751f640 <col:62>
|-FunctionDecl 0x562bf751f7b8 <line:117:1, col:86> col:12 sched_getscheduler 'int (__pid_t)' extern
| |-ParmVarDecl 0x562bf751f6a8 <col:32, col:40> col:40 __pid '__pid_t':'int'
| `-NoThrowAttr 0x562bf751f860 <col:63>
|-FunctionDecl 0x562bf751f988 <line:118:1, col:70> col:12 sched_yield 'int (void)' extern
| `-NoThrowAttr 0x562bf751fa28 <col:47>
|-FunctionDecl 0x562bf751fb30 <line:119:1, col:92> col:12 sched_get_priority_max 'int (int)' extern
| |-ParmVarDecl 0x562bf751fa98 <col:36, col:40> col:40 __algorithm 'int'
| `-NoThrowAttr 0x562bf751fbd8 <col:69>
|-FunctionDecl 0x562bf751fce0 <line:120:1, col:92> col:12 sched_get_priority_min 'int (int)' extern
| |-ParmVarDecl 0x562bf751fc48 <col:36, col:40> col:40 __algorithm 'int'
| `-NoThrowAttr 0x562bf751fd88 <col:69>
|-FunctionDecl 0x562bf7520048 <line:121:1, col:111> col:12 sched_rr_get_interval 'int (__pid_t, struct timespec *)' extern
| |-ParmVarDecl 0x562bf751fdf0 <col:35, col:43> col:43 __pid '__pid_t':'int'
| |-ParmVarDecl 0x562bf751ff28 <col:50, col:67> col:67 __t 'struct timespec *'
| `-NoThrowAttr 0x562bf75200f8 <col:88>
|-TypedefDecl 0x562bf7520188 <line:125:1, col:19> col:19 referenced clock_t '__clock_t':'long'
| `-TypedefType 0x562bf7520150 '__clock_t' sugar
|   |-Typedef 0x562bf751a548 '__clock_t'
|   `-BuiltinType 0x562bf74b2f30 'long'
|-TypedefDecl 0x562bf7520218 <line:128:1, col:21> col:21 referenced clockid_t '__clockid_t':'int'
| `-TypedefType 0x562bf75201e0 '__clockid_t' sugar
|   |-Typedef 0x562bf751a938 '__clockid_t'
|   `-BuiltinType 0x562bf74b2f10 'int'
|-TypedefDecl 0x562bf75202a8 <line:129:1, col:19> col:19 referenced timer_t '__timer_t':'void *'
| `-TypedefType 0x562bf7520270 '__timer_t' sugar
|   |-Typedef 0x562bf751a9a8 '__timer_t'
|   `-PointerType 0x562bf74b3630 'void *'
|     `-BuiltinType 0x562bf74b2e70 'void'
|-RecordDecl 0x562bf7520300 <line:131:1, line:144:1> line:131:8 struct tm definition
| |-FieldDecl 0x562bf75203d8 <line:133:3, col:7> col:7 tm_sec 'int'
| |-FieldDecl 0x562bf7520440 <line:134:3, col:7> col:7 tm_min 'int'
| |-FieldDecl 0x562bf75204a8 <line:135:3, col:7> col:7 tm_hour 'int'
| |-FieldDecl 0x562bf7520510 <line:136:3, col:7> col:7 tm_mday 'int'
| |-FieldDecl 0x562bf7520578 <line:137:3, col:7> col:7 tm_mon 'int'
| |-FieldDecl 0x562bf75205e0 <line:138:3, col:7> col:7 tm_year 'int'
| |-FieldDecl 0x562bf7520648 <line:139:3, col:7> col:7 tm_wday 'int'
| |-FieldDecl 0x562bf75206b0 <line:140:3, col:7> col:7 tm_yday 'int'
| |-FieldDecl 0x562bf7520718 <line:141:3, col:7> col:7 tm_isdst 'int'
| |-FieldDecl 0x562bf7520780 <line:142:3, col:12> col:12 tm_gmtoff 'long'
| `-FieldDecl 0x562bf75207e8 <line:143:3, col:15> col:15 tm_zone 'const char *'
|-RecordDecl 0x562bf7520838 <line:147:1, line:151:3> line:147:8 struct itimerspec definition
| |-FieldDecl 0x562bf7520908 <line:149:5, col:21> col:21 it_interval 'struct timespec':'struct timespec'
| `-FieldDecl 0x562bf7520978 <line:150:5, col:21> col:21 it_value 'struct timespec':'struct timespec'
|-RecordDecl 0x562bf7520a20 <line:152:1, col:8> col:8 struct sigevent
|-FunctionDecl 0x562bf7520bf0 <line:154:1, col:68> col:16 clock 'clock_t (void)' extern
| `-NoThrowAttr 0x562bf7520c90 <col:45>
|-FunctionDecl 0x562bf7520e70 <line:155:1, col:77> col:15 time 'time_t (time_t *)' extern
| |-ParmVarDecl 0x562bf7520d60 <col:21, col:29> col:29 __timer 'time_t *'
| `-NoThrowAttr 0x562bf7520f18 <col:54>
|-FunctionDecl 0x562bf7521118 <line:156:1, line:157:73> line:156:15 difftime 'double (time_t, time_t)' extern
| |-ParmVarDecl 0x562bf7520f80 <col:25, col:32> col:32 __time1 'time_t':'long'
| |-ParmVarDecl 0x562bf7520ff8 <col:41, col:48> col:48 __time0 'time_t':'long'
| |-NoThrowAttr 0x562bf75211c8 <line:157:22>
| `-ConstAttr 0x562bf7521220 <col:63>
|-FunctionDecl 0x562bf7522050 <line:158:1, col:79> col:15 mktime 'time_t (struct tm *)' extern
| |-ParmVarDecl 0x562bf7521318 <col:23, col:34> col:34 __tp 'struct tm *'
| `-NoThrowAttr 0x562bf75220f8 <col:56>
|-FunctionDecl 0x562bf75224a0 <line:159:1, line:161:77> line:159:15 strftime 'size_t (char *restrict, size_t, const char *restrict, const struct tm *restrict)' extern
| |-ParmVarDecl 0x562bf7522168 <col:25, col:42> col:42 __s 'char *restrict'
| |-ParmVarDecl 0x562bf75221e0 <col:47, col:54> col:54 __maxsize 'size_t':'unsigned long'
| |-ParmVarDecl 0x562bf7522260 <line:160:4, col:27> col:27 __format 'const char *restrict'
| |-ParmVarDecl 0x562bf7522358 <line:161:4, col:32> col:32 __tp 'const struct tm *restrict'
| `-NoThrowAttr 0x562bf7522560 <col:54>
|-RecordDecl 0x562bf75225b8 <line:163:9, line:170:1> line:163:16 struct __locale_struct definition
| |-RecordDecl 0x562bf7522668 parent 0x562bf74b2e18 <line:165:3, col:10> col:10 struct __locale_data
| |-FieldDecl 0x562bf75228c8 <col:3, col:37> col:25 __locales 'struct __locale_data *[13]'
| |-FieldDecl 0x562bf7522968 <line:166:3, col:29> col:29 __ctype_b 'const unsigned short *'
| |-FieldDecl 0x562bf75229d0 <line:167:3, col:14> col:14 __ctype_tolower 'const int *'
| |-FieldDecl 0x562bf7522a38 <line:168:3, col:14> col:14 __ctype_toupper 'const int *'
| `-FieldDecl 0x562bf7522b28 <line:169:3, col:25> col:15 __names 'const char *[13]'
|-TypedefDecl 0x562bf7522c48 <line:163:1, line:170:4> col:4 referenced __locale_t 'struct __locale_struct *'
| `-PointerType 0x562bf7522bf0 'struct __locale_struct *'
|   `-ElaboratedType 0x562bf7522b80 'struct __locale_struct' sugar
|     `-RecordType 0x562bf7522640 'struct __locale_struct'
|       `-Record 0x562bf75225b8 '__locale_struct'
|-TypedefDecl 0x562bf7522cf8 <line:171:1, col:20> col:20 locale_t '__locale_t':'struct __locale_struct *'
| `-TypedefType 0x562bf7522cc0 '__locale_t' sugar
|   |-Typedef 0x562bf7522c48 '__locale_t'
|   `-PointerType 0x562bf7522bf0 'struct __locale_struct *'
|     `-ElaboratedType 0x562bf7522b80 'struct __locale_struct' sugar
|       `-RecordType 0x562bf7522640 'struct __locale_struct'
|         `-Record 0x562bf75225b8 '__locale_struct'
|-FunctionDecl 0x562bf7524110 <line:172:1, line:175:63> line:172:15 strftime_l 'size_t (char *restrict, size_t, const char *restrict, const struct tm *restrict, __locale_t)' extern
| |-ParmVarDecl 0x562bf7522d68 <col:27, col:44> col:44 __s 'char *restrict'
| |-ParmVarDecl 0x562bf7522de0 <col:49, col:56> col:56 __maxsize 'size_t':'unsigned long'
| |-ParmVarDecl 0x562bf7522e60 <line:173:6, col:29> col:29 __format 'const char *restrict'
| |-ParmVarDecl 0x562bf7522ef0 <line:174:6, col:34> col:34 __tp 'const struct tm *restrict'
| |-ParmVarDecl 0x562bf7522f68 <line:175:6, col:17> col:17 __loc '__locale_t':'struct __locale_struct *'
| `-NoThrowAttr 0x562bf75241d8 <col:40>
|-FunctionDecl 0x562bf75243c8 <line:177:1, col:89> col:19 gmtime 'struct tm *(const time_t *)' extern
| |-ParmVarDecl 0x562bf75242a0 <col:27, col:41> col:41 __timer 'const time_t *'
| `-NoThrowAttr 0x562bf7524470 <col:66>
|-FunctionDecl 0x562bf7524580 <line:178:1, col:92> col:19 localtime 'struct tm *(const time_t *)' extern
| |-ParmVarDecl 0x562bf75244d8 <col:30, col:44> col:44 __timer 'const time_t *'
| `-NoThrowAttr 0x562bf7524628 <col:69>
|-FunctionDecl 0x562bf7524858 <line:180:1, line:181:75> line:180:19 gmtime_r 'struct tm *(const time_t *restrict, struct tm *restrict)' extern
| |-ParmVarDecl 0x562bf7524690 <col:29, col:54> col:54 __timer 'const time_t *restrict'
| |-ParmVarDecl 0x562bf7524720 <line:181:8, col:30> col:30 __tp 'struct tm *restrict'
| `-NoThrowAttr 0x562bf7524908 <col:52>
|-FunctionDecl 0x562bf7524ab0 <line:182:1, line:183:78> line:182:19 localtime_r 'struct tm *(const time_t *restrict, struct tm *restrict)' extern
| |-ParmVarDecl 0x562bf7524970 <col:32, col:57> col:57 __timer 'const time_t *restrict'
| |-ParmVarDecl 0x562bf7524a00 <line:183:11, col:33> col:33 __tp 'struct tm *restrict'
| `-NoThrowAttr 0x562bf7524b60 <col:55>
|-FunctionDecl 0x562bf7524cf8 <line:185:1, col:85> col:14 asctime 'char *(const struct tm *)' extern
| |-ParmVarDecl 0x562bf7524be0 <col:23, col:40> col:40 __tp 'const struct tm *'
| `-NoThrowAttr 0x562bf7524da0 <col:62>
|-FunctionDecl 0x562bf7524f18 <line:186:1, col:83> col:14 ctime 'char *(const time_t *)' extern
| |-ParmVarDecl 0x562bf7524e08 <col:21, col:35> col:35 __timer 'const time_t *'
| `-NoThrowAttr 0x562bf7524fc0 <col:60>
|-FunctionDecl 0x562bf75252b8 <line:188:1, line:189:67> line:188:14 asctime_r 'char *(const struct tm *restrict, char *restrict)' extern
| |-ParmVarDecl 0x562bf7525118 <col:25, col:53> col:53 __tp 'const struct tm *restrict'
| |-ParmVarDecl 0x562bf7525198 <line:189:4, col:21> col:21 __buf 'char *restrict'
| `-NoThrowAttr 0x562bf7525368 <col:44>
|-FunctionDecl 0x562bf7525578 <line:190:1, line:191:72> line:190:14 ctime_r 'char *(const time_t *restrict, char *restrict)' extern
| |-ParmVarDecl 0x562bf75253d0 <col:23, col:48> col:48 __timer 'const time_t *restrict'
| |-ParmVarDecl 0x562bf7525450 <line:191:9, col:26> col:26 __buf 'char *restrict'
| `-NoThrowAttr 0x562bf7525628 <col:49>
|-VarDecl 0x562bf7525728 <line:192:1, col:24> col:14 __tzname 'char *[2]' extern
|-VarDecl 0x562bf75257a8 <line:193:1, col:12> col:12 __daylight 'int' extern
|-VarDecl 0x562bf7525828 <line:194:1, col:17> col:17 __timezone 'long' extern
|-VarDecl 0x562bf75258f0 <line:195:1, col:22> col:14 tzname 'char *[2]' extern
|-FunctionDecl 0x562bf7525a20 <line:196:1, col:65> col:13 tzset 'void (void)' extern
| `-NoThrowAttr 0x562bf7525ac0 <col:42>
|-VarDecl 0x562bf7525b30 <line:197:1, col:12> col:12 daylight 'int' extern
|-VarDecl 0x562bf7525bb0 <line:198:1, col:17> col:17 timezone 'long' extern
|-FunctionDecl 0x562bf7525d38 <line:199:1, col:80> col:12 stime 'int (const time_t *)' extern
| |-ParmVarDecl 0x562bf7525c28 <col:19, col:33> col:33 __when 'const time_t *'
| `-NoThrowAttr 0x562bf7525de0 <col:57>
|-FunctionDecl 0x562bf7525ef0 <line:200:1, col:79> col:15 timegm 'time_t (struct tm *)' extern
| |-ParmVarDecl 0x562bf7525e60 <col:23, col:34> col:34 __tp 'struct tm *'
| `-NoThrowAttr 0x562bf7525f98 <col:56>
|-FunctionDecl 0x562bf75260d0 <line:201:1, col:82> col:15 timelocal 'time_t (struct tm *)' extern
| |-ParmVarDecl 0x562bf7526018 <col:26, col:37> col:37 __tp 'struct tm *'
| `-NoThrowAttr 0x562bf7526178 <col:59>
|-FunctionDecl 0x562bf7526280 <line:202:1, col:99> col:12 dysize 'int (int)' extern
| |-ParmVarDecl 0x562bf75261e8 <col:20, col:24> col:24 __year 'int'
| |-NoThrowAttr 0x562bf7526328 <col:48>
| `-ConstAttr 0x562bf7526380 <col:89>
|-FunctionDecl 0x562bf75265e8 <line:203:1, line:204:37> line:203:12 nanosleep 'int (const struct timespec *, struct timespec *)' extern
| |-ParmVarDecl 0x562bf7526438 <col:23, col:46> col:46 __requested_time 'const struct timespec *'
| `-ParmVarDecl 0x562bf75264c8 <line:204:9, col:26> col:26 __remaining 'struct timespec *'
|-FunctionDecl 0x562bf7526848 <line:205:1, col:111> col:12 clock_getres 'int (clockid_t, struct timespec *)' extern
| |-ParmVarDecl 0x562bf75266d8 <col:26, col:36> col:36 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x562bf7526768 <col:48, col:65> col:65 __res 'struct timespec *'
| `-NoThrowAttr 0x562bf75268f8 <col:88>
|-FunctionDecl 0x562bf7526a90 <line:206:1, col:111> col:12 clock_gettime 'int (clockid_t, struct timespec *)' extern
| |-ParmVarDecl 0x562bf7526960 <col:27, col:37> col:37 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x562bf75269f0 <col:49, col:66> col:66 __tp 'struct timespec *'
| `-NoThrowAttr 0x562bf7526b40 <col:88>
|-FunctionDecl 0x562bf7526d58 <line:207:1, line:208:45> line:207:12 clock_settime 'int (clockid_t, const struct timespec *)' extern
| |-ParmVarDecl 0x562bf7526ba8 <col:27, col:37> col:37 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x562bf7526c38 <col:49, col:72> col:72 __tp 'const struct timespec *'
| `-NoThrowAttr 0x562bf7526e08 <line:208:22>
|-FunctionDecl 0x562bf7527178 <line:209:1, line:211:30> line:209:12 clock_nanosleep 'int (clockid_t, int, const struct timespec *, struct timespec *)' extern
| |-ParmVarDecl 0x562bf7526e70 <col:29, col:39> col:39 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x562bf7526ef0 <col:51, col:55> col:55 __flags 'int'
| |-ParmVarDecl 0x562bf7526f80 <line:210:8, col:31> col:31 __req 'const struct timespec *'
| `-ParmVarDecl 0x562bf7527010 <line:211:8, col:25> col:25 __rem 'struct timespec *'
|-FunctionDecl 0x562bf7527478 <line:212:1, col:108> col:12 clock_getcpuclockid 'int (pid_t, clockid_t *)' extern
| |-ParmVarDecl 0x562bf7527278 <col:33, col:39> col:39 __pid 'pid_t':'int'
| |-ParmVarDecl 0x562bf7527350 <col:46, col:57> col:57 __clock_id 'clockid_t *'
| `-NoThrowAttr 0x562bf7527528 <col:85>
|-FunctionDecl 0x562bf7527918 <line:213:1, line:215:75> line:213:12 timer_create 'int (clockid_t, struct sigevent *restrict, timer_t *restrict)' extern
| |-ParmVarDecl 0x562bf7527590 <col:26, col:36> col:36 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x562bf75276c8 <line:214:5, col:33> col:33 __evp 'struct sigevent *restrict'
| |-ParmVarDecl 0x562bf75277d0 <line:215:5, col:25> col:25 __timerid 'timer_t *restrict'
| `-NoThrowAttr 0x562bf75279d0 <col:52>
|-FunctionDecl 0x562bf7527b48 <line:216:1, col:84> col:12 timer_delete 'int (timer_t)' extern
| |-ParmVarDecl 0x562bf7527a38 <col:26, col:34> col:34 __timerid 'timer_t':'void *'
| `-NoThrowAttr 0x562bf7527bf0 <col:61>
|-FunctionDecl 0x562bf75280f0 <line:217:1, line:219:85> line:217:12 timer_settime 'int (timer_t, int, const struct itimerspec *restrict, struct itimerspec *restrict)' extern
| |-ParmVarDecl 0x562bf7527c58 <col:27, col:35> col:35 __timerid 'timer_t':'void *'
| |-ParmVarDecl 0x562bf7527cd8 <col:46, col:50> col:50 __flags 'int'
| |-ParmVarDecl 0x562bf7527e08 <line:218:6, col:42> col:42 __value 'const struct itimerspec *restrict'
| |-ParmVarDecl 0x562bf7527ef8 <line:219:6, col:36> col:36 __ovalue 'struct itimerspec *restrict'
| `-NoThrowAttr 0x562bf75281b0 <col:62>
|-FunctionDecl 0x562bf75283c8 <line:220:1, line:221:45> line:220:12 timer_gettime 'int (timer_t, struct itimerspec *)' extern
| |-ParmVarDecl 0x562bf7528218 <col:27, col:35> col:35 __timerid 'timer_t':'void *'
| |-ParmVarDecl 0x562bf75282a8 <col:46, col:65> col:65 __value 'struct itimerspec *'
| `-NoThrowAttr 0x562bf7528478 <line:221:22>
|-FunctionDecl 0x562bf7528578 <line:222:1, col:88> col:12 timer_getoverrun 'int (timer_t)' extern
| |-ParmVarDecl 0x562bf75284e0 <col:30, col:38> col:38 __timerid 'timer_t':'void *'
| `-NoThrowAttr 0x562bf7528620 <col:65>
|-TypedefDecl 0x562bf7528690 <line:224:1, col:27> col:27 referenced pthread_t 'unsigned long'
| `-BuiltinType 0x562bf74b2fd0 'unsigned long'
|-RecordDecl 0x562bf75286e8 <line:225:1, line:229:1> line:225:7 union pthread_attr_t definition
| |-FieldDecl 0x562bf7528830 <line:227:3, col:17> col:8 __size 'char [56]'
| `-FieldDecl 0x562bf7528898 <line:228:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x562bf7528948 <line:230:1, col:30> col:30 referenced pthread_attr_t 'union pthread_attr_t':'union pthread_attr_t'
| `-ElaboratedType 0x562bf75288f0 'union pthread_attr_t' sugar
|   `-RecordType 0x562bf7528770 'union pthread_attr_t'
|     `-Record 0x562bf75286e8 'pthread_attr_t'
|-RecordDecl 0x562bf75289a0 <line:231:9, line:235:1> line:231:16 struct __pthread_internal_list definition
| |-FieldDecl 0x562bf7528b18 <line:233:3, col:35> col:35 __prev 'struct __pthread_internal_list *'
| `-FieldDecl 0x562bf7528b90 <line:234:3, col:35> col:35 __next 'struct __pthread_internal_list *'
|-TypedefDecl 0x562bf7528c40 <line:231:1, line:235:3> col:3 referenced __pthread_list_t 'struct __pthread_internal_list':'struct __pthread_internal_list'
| `-ElaboratedType 0x562bf7528be0 'struct __pthread_internal_list' sugar
|   `-RecordType 0x562bf7528a20 'struct __pthread_internal_list'
|     `-Record 0x562bf75289a0 '__pthread_internal_list'
|-RecordDecl 0x562bf7528cb0 <line:236:9, line:250:1> line:236:9 union definition
| |-RecordDecl 0x562bf7528d58 parent 0x562bf74b2e18 <line:238:3, line:247:3> line:238:10 struct __pthread_mutex_s definition
| | |-FieldDecl 0x562bf7528e30 <line:240:5, col:9> col:9 __lock 'int'
| | |-FieldDecl 0x562bf7528e98 <line:241:5, col:18> col:18 __count 'unsigned int'
| | |-FieldDecl 0x562bf7528f00 <line:242:5, col:9> col:9 __owner 'int'
| | |-FieldDecl 0x562bf7528f68 <line:243:5, col:18> col:18 __nusers 'unsigned int'
| | |-FieldDecl 0x562bf7528fd0 <line:244:5, col:9> col:9 __kind 'int'
| | |-FieldDecl 0x562bf7529038 <line:245:5, col:9> col:9 __spins 'int'
| | `-FieldDecl 0x562bf752d110 <line:246:5, col:22> col:22 __list '__pthread_list_t':'struct __pthread_internal_list'
| |-FieldDecl 0x562bf752d1c0 <line:238:3, line:247:5> col:5 __data 'struct __pthread_mutex_s':'struct __pthread_mutex_s'
| |-FieldDecl 0x562bf752d2b0 <line:248:3, col:17> col:8 __size 'char [40]'
| `-FieldDecl 0x562bf752d318 <line:249:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x562bf752d4a0 <line:236:1, line:250:3> col:3 referenced pthread_mutex_t 'union pthread_mutex_t':'pthread_mutex_t'
| `-ElaboratedType 0x562bf752d440 'union pthread_mutex_t' sugar
|   `-RecordType 0x562bf7528d30 'pthread_mutex_t'
|     `-Record 0x562bf7528cb0 ''
|-RecordDecl 0x562bf752d510 <line:251:9, line:255:1> line:251:9 union definition
| |-FieldDecl 0x562bf752d650 <line:253:3, col:16> col:8 __size 'char [4]'
| `-FieldDecl 0x562bf752d6b8 <line:254:3, col:7> col:7 __align 'int'
|-TypedefDecl 0x562bf752d770 <line:251:1, line:255:3> col:3 referenced pthread_mutexattr_t 'union pthread_mutexattr_t':'pthread_mutexattr_t'
| `-ElaboratedType 0x562bf752d710 'union pthread_mutexattr_t' sugar
|   `-RecordType 0x562bf752d590 'pthread_mutexattr_t'
|     `-Record 0x562bf752d510 ''
|-RecordDecl 0x562bf752d7e0 <line:256:9, line:271:1> line:256:9 union definition
| |-RecordDecl 0x562bf752d888 <line:258:3, line:268:3> line:258:3 struct definition
| | |-FieldDecl 0x562bf752d950 <line:260:5, col:9> col:9 __lock 'int'
| | |-FieldDecl 0x562bf752d9b8 <line:261:5, col:18> col:18 __futex 'unsigned int'
| | |-FieldDecl 0x562bf752da20 <line:262:19, col:42> col:42 __total_seq 'unsigned long long'
| | |-FieldDecl 0x562bf752da88 <line:263:19, col:42> col:42 __wakeup_seq 'unsigned long long'
| | |-FieldDecl 0x562bf752daf0 <line:264:19, col:42> col:42 __woken_seq 'unsigned long long'
| | |-FieldDecl 0x562bf752db58 <line:265:5, col:11> col:11 __mutex 'void *'
| | |-FieldDecl 0x562bf752dbc0 <line:266:5, col:18> col:18 __nwaiters 'unsigned int'
| | `-FieldDecl 0x562bf752dc28 <line:267:5, col:18> col:18 __broadcast_seq 'unsigned int'
| |-FieldDecl 0x562bf752dce0 <line:258:3, line:268:5> col:5 __data 'struct (anonymous struct at ./split_6/mix056_power.opt_false-unreach-call.i:258:3)':'struct pthread_cond_t::(anonymous at ./split_6/mix056_power.opt_false-unreach-call.i:258:3)'
| |-FieldDecl 0x562bf752ddd0 <line:269:3, col:17> col:8 __size 'char [48]'
| `-FieldDecl 0x562bf752de38 <line:270:17, col:31> col:31 __align 'long long'
|-TypedefDecl 0x562bf752df70 <line:256:1, line:271:3> col:3 referenced pthread_cond_t 'union pthread_cond_t':'pthread_cond_t'
| `-ElaboratedType 0x562bf752df10 'union pthread_cond_t' sugar
|   `-RecordType 0x562bf752d860 'pthread_cond_t'
|     `-Record 0x562bf752d7e0 ''
|-RecordDecl 0x562bf752dfe0 <line:272:9, line:276:1> line:272:9 union definition
| |-FieldDecl 0x562bf752f130 <line:274:3, col:16> col:8 __size 'char [4]'
| `-FieldDecl 0x562bf752f198 <line:275:3, col:7> col:7 __align 'int'
|-TypedefDecl 0x562bf752f250 <line:272:1, line:276:3> col:3 referenced pthread_condattr_t 'union pthread_condattr_t':'pthread_condattr_t'
| `-ElaboratedType 0x562bf752f1f0 'union pthread_condattr_t' sugar
|   `-RecordType 0x562bf752e060 'pthread_condattr_t'
|     `-Record 0x562bf752dfe0 ''
|-TypedefDecl 0x562bf752f2d8 <line:277:1, col:22> col:22 referenced pthread_key_t 'unsigned int'
| `-BuiltinType 0x562bf74b2fb0 'unsigned int'
|-TypedefDecl 0x562bf752f348 <line:278:1, col:13> col:13 referenced pthread_once_t 'int'
| `-BuiltinType 0x562bf74b2f10 'int'
|-RecordDecl 0x562bf752f3a0 <line:279:9, line:297:1> line:279:9 union definition
| |-RecordDecl 0x562bf752f448 <line:281:3, line:294:3> line:281:3 struct definition
| | |-FieldDecl 0x562bf752f510 <line:283:5, col:9> col:9 __lock 'int'
| | |-FieldDecl 0x562bf752f578 <line:284:5, col:18> col:18 __nr_readers 'unsigned int'
| | |-FieldDecl 0x562bf752f5e0 <line:285:5, col:18> col:18 __readers_wakeup 'unsigned int'
| | |-FieldDecl 0x562bf752f648 <line:286:5, col:18> col:18 __writer_wakeup 'unsigned int'
| | |-FieldDecl 0x562bf752f6b0 <line:287:5, col:18> col:18 __nr_readers_queued 'unsigned int'
| | |-FieldDecl 0x562bf752f718 <line:288:5, col:18> col:18 __nr_writers_queued 'unsigned int'
| | |-FieldDecl 0x562bf752f780 <line:289:5, col:9> col:9 __writer 'int'
| | |-FieldDecl 0x562bf752f7e8 <line:290:5, col:9> col:9 __shared 'int'
| | |-FieldDecl 0x562bf752f850 <line:291:5, col:23> col:23 __pad1 'unsigned long'
| | |-FieldDecl 0x562bf752f8b8 <line:292:5, col:23> col:23 __pad2 'unsigned long'
| | `-FieldDecl 0x562bf752f920 <line:293:5, col:18> col:18 __flags 'unsigned int'
| |-FieldDecl 0x562bf752f9d0 <line:281:3, line:294:5> col:5 __data 'struct (anonymous struct at ./split_6/mix056_power.opt_false-unreach-call.i:281:3)':'struct pthread_rwlock_t::(anonymous at ./split_6/mix056_power.opt_false-unreach-call.i:281:3)'
| |-FieldDecl 0x562bf752fa78 <line:295:3, col:17> col:8 __size 'char [56]'
| `-FieldDecl 0x562bf752fae0 <line:296:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x562bf752fc30 <line:279:1, line:297:3> col:3 referenced pthread_rwlock_t 'union pthread_rwlock_t':'pthread_rwlock_t'
| `-ElaboratedType 0x562bf752fbd0 'union pthread_rwlock_t' sugar
|   `-RecordType 0x562bf752f420 'pthread_rwlock_t'
|     `-Record 0x562bf752f3a0 ''
|-RecordDecl 0x562bf752fca0 <line:298:9, line:302:1> line:298:9 union definition
| |-FieldDecl 0x562bf752fde0 <line:300:3, col:16> col:8 __size 'char [8]'
| `-FieldDecl 0x562bf752fe48 <line:301:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x562bf752ff00 <line:298:1, line:302:3> col:3 referenced pthread_rwlockattr_t 'union pthread_rwlockattr_t':'pthread_rwlockattr_t'
| `-ElaboratedType 0x562bf752fea0 'union pthread_rwlockattr_t' sugar
|   `-RecordType 0x562bf752fd20 'pthread_rwlockattr_t'
|     `-Record 0x562bf752fca0 ''
|-TypedefDecl 0x562bf752ff88 <line:303:1, col:22> col:22 referenced pthread_spinlock_t 'volatile int'
| `-QualType 0x562bf74b2f14 'volatile int' volatile
|   `-BuiltinType 0x562bf74b2f10 'int'
|-RecordDecl 0x562bf752ffe0 <line:304:9, line:308:1> line:304:9 union definition
| |-FieldDecl 0x562bf7531140 <line:306:3, col:17> col:8 __size 'char [32]'
| `-FieldDecl 0x562bf75311a8 <line:307:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x562bf7531260 <line:304:1, line:308:3> col:3 referenced pthread_barrier_t 'union pthread_barrier_t':'pthread_barrier_t'
| `-ElaboratedType 0x562bf7531200 'union pthread_barrier_t' sugar
|   `-RecordType 0x562bf7530060 'pthread_barrier_t'
|     `-Record 0x562bf752ffe0 ''
|-RecordDecl 0x562bf75312d0 <line:309:9, line:313:1> line:309:9 union definition
| |-FieldDecl 0x562bf75313d0 <line:311:3, col:16> col:8 __size 'char [4]'
| `-FieldDecl 0x562bf7531438 <line:312:3, col:7> col:7 __align 'int'
|-TypedefDecl 0x562bf75314f0 <line:309:1, line:313:3> col:3 referenced pthread_barrierattr_t 'union pthread_barrierattr_t':'pthread_barrierattr_t'
| `-ElaboratedType 0x562bf7531490 'union pthread_barrierattr_t' sugar
|   `-RecordType 0x562bf7531350 'pthread_barrierattr_t'
|     `-Record 0x562bf75312d0 ''
|-TypedefDecl 0x562bf7531608 <line:314:1, col:29> col:18 referenced __jmp_buf 'long [8]'
| `-ConstantArrayType 0x562bf75315a0 'long [8]' 8 
|   `-BuiltinType 0x562bf74b2f30 'long'
|-EnumDecl 0x562bf7531660 <line:315:1, line:319:1> line:315:1
| |-EnumConstantDecl 0x562bf7531728 <line:317:3> col:3 PTHREAD_CREATE_JOINABLE 'int'
| `-EnumConstantDecl 0x562bf7531778 <line:318:3> col:3 PTHREAD_CREATE_DETACHED 'int'
|-EnumDecl 0x562bf75317c8 <line:320:1, line:331:1> line:320:1
| |-EnumConstantDecl 0x562bf7531898 <line:322:3> col:3 referenced PTHREAD_MUTEX_TIMED_NP 'int'
| |-EnumConstantDecl 0x562bf75318e8 <line:323:3> col:3 referenced PTHREAD_MUTEX_RECURSIVE_NP 'int'
| |-EnumConstantDecl 0x562bf7531938 <line:324:3> col:3 referenced PTHREAD_MUTEX_ERRORCHECK_NP 'int'
| |-EnumConstantDecl 0x562bf7531988 <line:325:3> col:3 PTHREAD_MUTEX_ADAPTIVE_NP 'int'
| |-EnumConstantDecl 0x562bf7531a10 <line:327:3, col:26> col:3 referenced PTHREAD_MUTEX_NORMAL 'int'
| | `-ConstantExpr 0x562bf75319f8 <col:26> 'int'
| |   `-DeclRefExpr 0x562bf75319d8 <col:26> 'int' EnumConstant 0x562bf7531898 'PTHREAD_MUTEX_TIMED_NP' 'int'
| |-EnumConstantDecl 0x562bf7531a98 <line:328:3, col:29> col:3 PTHREAD_MUTEX_RECURSIVE 'int'
| | `-ConstantExpr 0x562bf7531a80 <col:29> 'int'
| |   `-DeclRefExpr 0x562bf7531a60 <col:29> 'int' EnumConstant 0x562bf75318e8 'PTHREAD_MUTEX_RECURSIVE_NP' 'int'
| |-EnumConstantDecl 0x562bf7531b20 <line:329:3, col:30> col:3 PTHREAD_MUTEX_ERRORCHECK 'int'
| | `-ConstantExpr 0x562bf7531b08 <col:30> 'int'
| |   `-DeclRefExpr 0x562bf7531ae8 <col:30> 'int' EnumConstant 0x562bf7531938 'PTHREAD_MUTEX_ERRORCHECK_NP' 'int'
| `-EnumConstantDecl 0x562bf7531ba8 <line:330:3, col:27> col:3 PTHREAD_MUTEX_DEFAULT 'int'
|   `-ConstantExpr 0x562bf7531b90 <col:27> 'int'
|     `-DeclRefExpr 0x562bf7531b70 <col:27> 'int' EnumConstant 0x562bf7531a10 'PTHREAD_MUTEX_NORMAL' 'int'
|-EnumDecl 0x562bf7531bf8 <line:332:1, line:338:1> line:332:1
| |-EnumConstantDecl 0x562bf7531cc8 <line:334:3> col:3 referenced PTHREAD_MUTEX_STALLED 'int'
| |-EnumConstantDecl 0x562bf7531d50 <line:335:3, col:30> col:3 PTHREAD_MUTEX_STALLED_NP 'int'
| | `-ConstantExpr 0x562bf7531d38 <col:30> 'int'
| |   `-DeclRefExpr 0x562bf7531d18 <col:30> 'int' EnumConstant 0x562bf7531cc8 'PTHREAD_MUTEX_STALLED' 'int'
| |-EnumConstantDecl 0x562bf7531da0 <line:336:3> col:3 referenced PTHREAD_MUTEX_ROBUST 'int'
| `-EnumConstantDecl 0x562bf7531e28 <line:337:3, col:29> col:3 PTHREAD_MUTEX_ROBUST_NP 'int'
|   `-ConstantExpr 0x562bf7531e10 <col:29> 'int'
|     `-DeclRefExpr 0x562bf7531df0 <col:29> 'int' EnumConstant 0x562bf7531da0 'PTHREAD_MUTEX_ROBUST' 'int'
|-EnumDecl 0x562bf7531e78 <line:339:1, line:344:1> line:339:1
| |-EnumConstantDecl 0x562bf7531f48 <line:341:3> col:3 PTHREAD_PRIO_NONE 'int'
| |-EnumConstantDecl 0x562bf7531f98 <line:342:3> col:3 PTHREAD_PRIO_INHERIT 'int'
| `-EnumConstantDecl 0x562bf7531fe8 <line:343:3> col:3 PTHREAD_PRIO_PROTECT 'int'
|-EnumDecl 0x562bf7532038 <line:345:1, line:351:1> line:345:1
| |-EnumConstantDecl 0x562bf7532150 <line:347:3> col:3 referenced PTHREAD_RWLOCK_PREFER_READER_NP 'int'
| |-EnumConstantDecl 0x562bf75321a0 <line:348:3> col:3 PTHREAD_RWLOCK_PREFER_WRITER_NP 'int'
| |-EnumConstantDecl 0x562bf75321f0 <line:349:3> col:3 PTHREAD_RWLOCK_PREFER_WRITER_NONRECURSIVE_NP 'int'
| `-EnumConstantDecl 0x562bf7532278 <line:350:3, col:31> col:3 PTHREAD_RWLOCK_DEFAULT_NP 'int'
|   `-ConstantExpr 0x562bf7532260 <col:31> 'int'
|     `-DeclRefExpr 0x562bf7532240 <col:31> 'int' EnumConstant 0x562bf7532150 'PTHREAD_RWLOCK_PREFER_READER_NP' 'int'
|-EnumDecl 0x562bf75322c8 <line:352:1, line:356:1> line:352:1
| |-EnumConstantDecl 0x562bf7532398 <line:354:3> col:3 PTHREAD_INHERIT_SCHED 'int'
| `-EnumConstantDecl 0x562bf75323e8 <line:355:3> col:3 PTHREAD_EXPLICIT_SCHED 'int'
|-EnumDecl 0x562bf7532438 <line:357:1, line:361:1> line:357:1
| |-EnumConstantDecl 0x562bf7532508 <line:359:3> col:3 PTHREAD_SCOPE_SYSTEM 'int'
| `-EnumConstantDecl 0x562bf7532558 <line:360:3> col:3 PTHREAD_SCOPE_PROCESS 'int'
|-EnumDecl 0x562bf75325a8 <line:362:1, line:366:1> line:362:1
| |-EnumConstantDecl 0x562bf7532678 <line:364:3> col:3 PTHREAD_PROCESS_PRIVATE 'int'
| `-EnumConstantDecl 0x562bf75326c8 <line:365:3> col:3 PTHREAD_PROCESS_SHARED 'int'
|-RecordDecl 0x562bf7532718 <line:367:1, line:373:1> line:367:8 struct _pthread_cleanup_buffer definition
| |-FieldDecl 0x562bf7532958 <line:369:3, col:28> col:10 __routine 'void (*)(void *)'
| |-FieldDecl 0x562bf75329c0 <line:370:3, col:9> col:9 __arg 'void *'
| |-FieldDecl 0x562bf7532a28 <line:371:3, col:7> col:7 __canceltype 'int'
| `-FieldDecl 0x562bf7532b48 <line:372:3, col:35> col:35 __prev 'struct _pthread_cleanup_buffer *'
|-EnumDecl 0x562bf7532b98 <line:374:1, line:378:1> line:374:1
| |-EnumConstantDecl 0x562bf7532c68 <line:376:3> col:3 PTHREAD_CANCEL_ENABLE 'int'
| `-EnumConstantDecl 0x562bf7532cb8 <line:377:3> col:3 PTHREAD_CANCEL_DISABLE 'int'
|-EnumDecl 0x562bf7532d08 <line:379:1, line:383:1> line:379:1
| |-EnumConstantDecl 0x562bf7532dd8 <line:381:3> col:3 PTHREAD_CANCEL_DEFERRED 'int'
| `-EnumConstantDecl 0x562bf7532e28 <line:382:3> col:3 PTHREAD_CANCEL_ASYNCHRONOUS 'int'
|-FunctionDecl 0x562bf7533488 <line:385:1, line:388:96> line:385:12 used pthread_create 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' extern
| |-ParmVarDecl 0x562bf7532f20 <col:28, col:50> col:50 __newthread 'pthread_t *restrict'
| |-ParmVarDecl 0x562bf7533030 <line:386:7, col:40> col:40 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x562bf7533270 <line:387:7, col:39> col:15 __start_routine 'void *(*)(void *)'
| |-ParmVarDecl 0x562bf75332f0 <line:388:7, col:24> col:24 __arg 'void *restrict'
| |-NoThrowAttr 0x562bf7533548 <col:47>
| |-NonNullAttr 0x562bf75335a0 <col:77, col:94> 1 3
| `-CallbackAttr 0x562bf75335d8 <line:385:12> Implicit 2 3
|-FunctionDecl 0x562bf7533700 <line:389:1, col:72> col:13 pthread_exit 'void (void *) __attribute__((noreturn))' extern
| `-ParmVarDecl 0x562bf7533630 <col:27, col:33> col:33 __retval 'void *'
|-FunctionDecl 0x562bf7533958 <line:390:1, col:64> col:12 pthread_join 'int (pthread_t, void **)' extern
| |-ParmVarDecl 0x562bf75337b8 <col:26, col:36> col:36 __th 'pthread_t':'unsigned long'
| `-ParmVarDecl 0x562bf7533838 <col:42, col:49> col:49 __thread_return 'void **'
|-FunctionDecl 0x562bf7533b28 <line:391:1, col:83> col:12 pthread_detach 'int (pthread_t)' extern
| |-ParmVarDecl 0x562bf7533a18 <col:28, col:38> col:38 __th 'pthread_t':'unsigned long'
| `-NoThrowAttr 0x562bf7533bd0 <col:60>
|-FunctionDecl 0x562bf7533d20 <line:392:1, col:105> col:18 pthread_self 'pthread_t (void)' extern
| |-NoThrowAttr 0x562bf7533dc0 <col:54>
| `-ConstAttr 0x562bf7533e18 <col:95>
|-FunctionDecl 0x562bf7533fe8 <line:393:1, line:394:70> line:393:12 pthread_equal 'int (pthread_t, pthread_t)' extern
| |-ParmVarDecl 0x562bf7533e50 <col:27, col:37> col:37 __thread1 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x562bf7533ec8 <col:48, col:58> col:58 __thread2 'pthread_t':'unsigned long'
| |-NoThrowAttr 0x562bf7534098 <line:394:19>
| `-ConstAttr 0x562bf75340f0 <col:60>
|-FunctionDecl 0x562bf7535b08 <line:395:1, col:128> col:12 pthread_attr_init 'int (pthread_attr_t *)' extern
| |-ParmVarDecl 0x562bf75359d0 <col:31, col:47> col:47 __attr 'pthread_attr_t *'
| |-NoThrowAttr 0x562bf7535bb0 <col:71>
| `-NonNullAttr 0x562bf7535c08 <col:112, col:126> 1
|-FunctionDecl 0x562bf7535d10 <line:396:1, line:397:79> line:396:12 pthread_attr_destroy 'int (pthread_attr_t *)' extern
| |-ParmVarDecl 0x562bf7535c58 <col:34, col:50> col:50 __attr 'pthread_attr_t *'
| |-NoThrowAttr 0x562bf7535db8 <line:397:22>
| `-NonNullAttr 0x562bf7535e10 <col:63, col:77> 1
|-FunctionDecl 0x562bf7536038 <line:398:1, line:400:82> line:398:12 pthread_attr_getdetachstate 'int (const pthread_attr_t *, int *)' extern
| |-ParmVarDecl 0x562bf7535e58 <col:41, col:63> col:63 __attr 'const pthread_attr_t *'
| |-ParmVarDecl 0x562bf7535ed8 <line:399:6, col:11> col:11 __detachstate 'int *'
| |-NoThrowAttr 0x562bf75360e8 <line:400:22>
| `-NonNullAttr 0x562bf7536140 <col:63, col:80> 1 2
|-FunctionDecl 0x562bf7536348 <line:401:1, line:403:79> line:401:12 pthread_attr_setdetachstate 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x562bf7536188 <col:41, col:57> col:57 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x562bf7536208 <line:402:6, col:10> col:10 __detachstate 'int'
| |-NoThrowAttr 0x562bf75363f8 <line:403:22>
| `-NonNullAttr 0x562bf7536450 <col:63, col:77> 1
|-FunctionDecl 0x562bf75366a8 <line:404:1, line:406:82> line:404:12 pthread_attr_getguardsize 'int (const pthread_attr_t *, size_t *)' extern
| |-ParmVarDecl 0x562bf7536498 <col:39, col:61> col:61 __attr 'const pthread_attr_t *'
| |-ParmVarDecl 0x562bf7536540 <line:405:11, col:19> col:19 __guardsize 'size_t *'
| |-NoThrowAttr 0x562bf7536758 <line:406:22>
| `-NonNullAttr 0x562bf75367b0 <col:63, col:80> 1 2
|-FunctionDecl 0x562bf75379e8 <line:407:1, line:409:79> line:407:12 pthread_attr_setguardsize 'int (pthread_attr_t *, size_t)' extern
| |-ParmVarDecl 0x562bf75367f8 <col:39, col:55> col:55 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x562bf7536870 <line:408:11, col:18> col:18 __guardsize 'size_t':'unsigned long'
| |-NoThrowAttr 0x562bf7537a98 <line:409:22>
| `-NonNullAttr 0x562bf7537af0 <col:63, col:77> 1
|-FunctionDecl 0x562bf7537d28 <line:410:1, line:412:82> line:410:12 pthread_attr_getschedparam 'int (const pthread_attr_t *restrict, struct sched_param *restrict)' extern
| |-ParmVarDecl 0x562bf7537b38 <col:40, col:73> col:73 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x562bf7537bc8 <line:411:12, col:43> col:43 __param 'struct sched_param *restrict'
| |-NoThrowAttr 0x562bf7537dd8 <line:412:22>
| `-NonNullAttr 0x562bf7537e30 <col:63, col:80> 1 2
|-FunctionDecl 0x562bf7538068 <line:413:1, line:415:97> line:413:12 pthread_attr_setschedparam 'int (pthread_attr_t *restrict, const struct sched_param *restrict)' extern
| |-ParmVarDecl 0x562bf7537e78 <col:40, col:67> col:67 __attr 'pthread_attr_t *restrict'
| |-ParmVarDecl 0x562bf7537f08 <line:414:12, line:415:12> col:12 __param 'const struct sched_param *restrict'
| |-NoThrowAttr 0x562bf7538118 <col:37>
| `-NonNullAttr 0x562bf7538170 <col:78, col:95> 1 2
|-FunctionDecl 0x562bf7538358 <line:416:1, line:418:82> line:416:12 pthread_attr_getschedpolicy 'int (const pthread_attr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x562bf75381b8 <col:41, line:417:6> col:6 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x562bf7538238 <col:14, col:30> col:30 __policy 'int *restrict'
| |-NoThrowAttr 0x562bf7538408 <line:418:22>
| `-NonNullAttr 0x562bf7538460 <col:63, col:80> 1 2
|-FunctionDecl 0x562bf75385e8 <line:419:1, line:420:79> line:419:12 pthread_attr_setschedpolicy 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x562bf75384a8 <col:41, col:57> col:57 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x562bf7538528 <col:65, col:69> col:69 __policy 'int'
| |-NoThrowAttr 0x562bf7538698 <line:420:22>
| `-NonNullAttr 0x562bf75386f0 <col:63, col:77> 1
|-FunctionDecl 0x562bf7538898 <line:421:1, line:423:82> line:421:12 pthread_attr_getinheritsched 'int (const pthread_attr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x562bf7538738 <col:42, line:422:7> col:7 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x562bf75387b8 <col:15, col:31> col:31 __inherit 'int *restrict'
| |-NoThrowAttr 0x562bf7538948 <line:423:22>
| `-NonNullAttr 0x562bf75389c0 <col:63, col:80> 1 2
|-FunctionDecl 0x562bf7538b48 <line:424:1, line:426:79> line:424:12 pthread_attr_setinheritsched 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x562bf7538a08 <col:42, col:58> col:58 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x562bf7538a88 <line:425:7, col:11> col:11 __inherit 'int'
| |-NoThrowAttr 0x562bf7538bf8 <line:426:22>
| `-NonNullAttr 0x562bf7538c50 <col:63, col:77> 1
|-FunctionDecl 0x562bf7538df8 <line:427:1, line:429:82> line:427:12 pthread_attr_getscope 'int (const pthread_attr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x562bf7538c98 <col:35, col:68> col:68 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x562bf7538d18 <line:428:7, col:23> col:23 __scope 'int *restrict'
| |-NoThrowAttr 0x562bf7538ea8 <line:429:22>
| `-NonNullAttr 0x562bf7538f00 <col:63, col:80> 1 2
|-FunctionDecl 0x562bf7539088 <line:430:1, line:431:79> line:430:12 pthread_attr_setscope 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x562bf7538f48 <col:35, col:51> col:51 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x562bf7538fc8 <col:59, col:63> col:63 __scope 'int'
| |-NoThrowAttr 0x562bf7539138 <line:431:22>
| `-NonNullAttr 0x562bf7539190 <col:63, col:77> 1
|-FunctionDecl 0x562bf75393b8 <line:432:1, line:434:115> line:432:12 pthread_attr_getstackaddr 'int (const pthread_attr_t *restrict, void **restrict)' extern
| |-ParmVarDecl 0x562bf75391d8 <col:39, line:433:11> col:11 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x562bf7539258 <col:19, col:37> col:37 __stackaddr 'void **restrict'
| |-NoThrowAttr 0x562bf7539468 <line:434:22>
| |-NonNullAttr 0x562bf75394c0 <col:63, col:80> 1 2
| `-DeprecatedAttr 0x562bf75394f8 <col:100> "" ""
|-FunctionDecl 0x562bf7539708 <line:435:1, line:437:112> line:435:12 pthread_attr_setstackaddr 'int (pthread_attr_t *, void *)' extern
| |-ParmVarDecl 0x562bf7539548 <col:39, col:55> col:55 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x562bf75395c8 <line:436:11, col:17> col:17 __stackaddr 'void *'
| |-NoThrowAttr 0x562bf75397b8 <line:437:22>
| |-NonNullAttr 0x562bf7539810 <col:63, col:77> 1
| `-DeprecatedAttr 0x562bf7539848 <col:97> "" ""
|-FunctionDecl 0x562bf7539a48 <line:438:1, line:440:82> line:438:12 pthread_attr_getstacksize 'int (const pthread_attr_t *restrict, size_t *restrict)' extern
| |-ParmVarDecl 0x562bf7539898 <col:39, line:439:11> col:11 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x562bf7539910 <col:19, col:38> col:38 __stacksize 'size_t *restrict'
| |-NoThrowAttr 0x562bf7539af8 <line:440:22>
| `-NonNullAttr 0x562bf7539b50 <col:63, col:80> 1 2
|-FunctionDecl 0x562bf7539cd0 <line:441:1, line:443:79> line:441:12 pthread_attr_setstacksize 'int (pthread_attr_t *, size_t)' extern
| |-ParmVarDecl 0x562bf7539b98 <col:39, col:55> col:55 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x562bf7539c10 <line:442:11, col:18> col:18 __stacksize 'size_t':'unsigned long'
| |-NoThrowAttr 0x562bf7539d80 <line:443:22>
| `-NonNullAttr 0x562bf7539dd8 <col:63, col:77> 1
|-FunctionDecl 0x562bf753a0c8 <line:444:1, line:447:85> line:444:12 pthread_attr_getstack 'int (const pthread_attr_t *restrict, void **restrict, size_t *restrict)' extern
| |-ParmVarDecl 0x562bf7539e28 <col:35, col:68> col:68 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x562bf7539ea8 <line:445:7, col:25> col:25 __stackaddr 'void **restrict'
| |-ParmVarDecl 0x562bf7539f20 <line:446:7, col:26> col:26 __stacksize 'size_t *restrict'
| |-NoThrowAttr 0x562bf753a180 <line:447:22>
| `-NonNullAttr 0x562bf753a1d8 <col:63, col:83> 1 2 3
|-FunctionDecl 0x562bf753a488 <line:448:1, line:449:100> line:448:12 pthread_attr_setstack 'int (pthread_attr_t *, void *, size_t)' extern
| |-ParmVarDecl 0x562bf753a230 <col:35, col:51> col:51 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x562bf753a2b0 <col:59, col:65> col:65 __stackaddr 'void *'
| |-ParmVarDecl 0x562bf753a328 <line:449:7, col:14> col:14 __stacksize 'size_t':'unsigned long'
| |-NoThrowAttr 0x562bf753a540 <col:43>
| `-NonNullAttr 0x562bf753a598 <col:84, col:98> 1
|-FunctionDecl 0x562bf753a858 <line:450:1, line:452:79> line:450:12 pthread_setschedparam 'int (pthread_t, int, const struct sched_param *)' extern
| |-ParmVarDecl 0x562bf753a5e8 <col:35, col:45> col:45 __target_thread 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x562bf753a668 <col:62, col:66> col:66 __policy 'int'
| |-ParmVarDecl 0x562bf753a6f8 <line:451:7, col:33> col:33 __param 'const struct sched_param *'
| |-NoThrowAttr 0x562bf753a910 <line:452:22>
| `-NonNullAttr 0x562bf753a968 <col:63, col:77> 3
|-FunctionDecl 0x562bf753ac78 <line:453:1, line:456:82> line:453:12 pthread_getschedparam 'int (pthread_t, int *restrict, struct sched_param *restrict)' extern
| |-ParmVarDecl 0x562bf753a9e0 <col:35, col:45> col:45 __target_thread 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x562bf753aa60 <line:454:7, col:23> col:23 __policy 'int *restrict'
| |-ParmVarDecl 0x562bf753aaf0 <line:455:7, col:38> col:38 __param 'struct sched_param *restrict'
| |-NoThrowAttr 0x562bf753ad30 <line:456:22>
| `-NonNullAttr 0x562bf753ad88 <col:63, col:80> 2 3
|-FunctionDecl 0x562bf753af78 <line:457:1, line:458:45> line:457:12 pthread_setschedprio 'int (pthread_t, int)' extern
| |-ParmVarDecl 0x562bf753add8 <col:34, col:44> col:44 __target_thread 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x562bf753ae58 <col:61, col:65> col:65 __prio 'int'
| `-NoThrowAttr 0x562bf753b028 <line:458:22>
|-FunctionDecl 0x562bf753b3f8 <line:459:1, line:460:71> line:459:12 pthread_once 'int (pthread_once_t *, void (*)(void))' extern
| |-ParmVarDecl 0x562bf753b0f0 <col:26, col:42> col:42 __once_control 'pthread_once_t *'
| |-ParmVarDecl 0x562bf753b290 <line:460:5, col:33> col:12 __init_routine 'void (*)(void)'
| `-NonNullAttr 0x562bf753b4a8 <col:52, col:69> 1 2
|-FunctionDecl 0x562bf753b650 <line:461:1, col:64> col:12 pthread_setcancelstate 'int (int, int *)' extern
| |-ParmVarDecl 0x562bf753b530 <col:36, col:40> col:40 __state 'int'
| `-ParmVarDecl 0x562bf753b5b0 <col:49, col:54> col:54 __oldstate 'int *'
|-FunctionDecl 0x562bf753b838 <line:462:1, col:61> col:12 pthread_setcanceltype 'int (int, int *)' extern
| |-ParmVarDecl 0x562bf753b718 <col:35, col:39> col:39 __type 'int'
| `-ParmVarDecl 0x562bf753b798 <col:47, col:52> col:52 __oldtype 'int *'
|-FunctionDecl 0x562bf753b9f0 <line:463:1, col:42> col:12 pthread_cancel 'int (pthread_t)' extern
| `-ParmVarDecl 0x562bf753b8f8 <col:28, col:38> col:38 __th 'pthread_t':'unsigned long'
|-FunctionDecl 0x562bf753bb30 <line:464:1, col:37> col:13 pthread_testcancel 'void (void)' extern
|-RecordDecl 0x562bf753bbd0 <line:465:9, line:473:1> line:465:9 struct definition
| |-RecordDecl 0x562bf753bc78 <line:467:3, line:471:3> line:467:3 struct definition
| | |-FieldDecl 0x562bf753bd68 <line:469:5, col:15> col:15 __cancel_jmp_buf '__jmp_buf':'long [8]'
| | `-FieldDecl 0x562bf753bdd0 <line:470:5, col:9> col:9 __mask_was_saved 'int'
| |-FieldDecl 0x562bf753bfa0 <line:467:3, line:471:23> col:5 __cancel_jmp_buf 'struct (anonymous struct at ./split_6/mix056_power.opt_false-unreach-call.i:467:3) [1]'
| `-FieldDecl 0x562bf753c098 <line:472:3, col:16> col:9 __pad 'void *[4]'
|-TypedefDecl 0x562bf753c150 <line:465:1, line:473:3> col:3 referenced __pthread_unwind_buf_t 'struct __pthread_unwind_buf_t':'__pthread_unwind_buf_t'
| |-ElaboratedType 0x562bf753c0f0 'struct __pthread_unwind_buf_t' sugar
| | `-RecordType 0x562bf753bc50 '__pthread_unwind_buf_t'
| |   `-Record 0x562bf753bbd0 ''
| `-AlignedAttr 0x562bf753c1a8 <col:42> aligned
|   `-<<<NULL>>>
|-RecordDecl 0x562bf753c220 <line:474:1, line:480:1> line:474:8 struct __pthread_cleanup_frame definition
| |-FieldDecl 0x562bf753c380 <line:476:3, col:35> col:10 __cancel_routine 'void (*)(void *)'
| |-FieldDecl 0x562bf753c3e8 <line:477:3, col:9> col:9 __cancel_arg 'void *'
| |-FieldDecl 0x562bf753c450 <line:478:3, col:7> col:7 __do_it 'int'
| `-FieldDecl 0x562bf753c4b8 <line:479:3, col:7> col:7 __cancel_type 'int'
|-FunctionDecl 0x562bf753c6c0 <line:481:1, col:69> col:13 __pthread_register_cancel 'void (__pthread_unwind_buf_t *)' extern
| `-ParmVarDecl 0x562bf753c5b0 <col:40, col:64> col:64 __buf '__pthread_unwind_buf_t *'
|-FunctionDecl 0x562bf753c808 <line:483:1, col:71> col:13 __pthread_unregister_cancel 'void (__pthread_unwind_buf_t *)' extern
| `-ParmVarDecl 0x562bf753c778 <col:42, col:66> col:66 __buf '__pthread_unwind_buf_t *'
|-FunctionDecl 0x562bf753ca00 <line:485:1, line:487:31> line:485:13 __pthread_unwind_next 'void (__pthread_unwind_buf_t *) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x562bf753c8c0 <col:36, col:60> col:60 __buf '__pthread_unwind_buf_t *'
| `-WeakAttr 0x562bf753caa8 <line:487:22>
|-RecordDecl 0x562bf753cb00 <line:489:1, col:8> col:8 struct __jmp_buf_tag
|-FunctionDecl 0x562bf753ce18 <line:490:1, col:98> col:12 __sigsetjmp 'int (struct __jmp_buf_tag *, int)' extern
| |-ParmVarDecl 0x562bf753cc78 <col:25, col:47> col:47 __env 'struct __jmp_buf_tag *'
| |-ParmVarDecl 0x562bf753ccf8 <col:54, col:58> col:58 __savemask 'int'
| |-NoThrowAttr 0x562bf753cec8 <col:86>
| `-ReturnsTwiceAttr 0x562bf753cf20 <col:12> Implicit
|-FunctionDecl 0x562bf753d248 <line:491:1, line:493:79> line:491:12 pthread_mutex_init 'int (pthread_mutex_t *, const pthread_mutexattr_t *)' extern
| |-ParmVarDecl 0x562bf753cff0 <col:32, col:49> col:49 __mutex 'pthread_mutex_t *'
| |-ParmVarDecl 0x562bf753d100 <line:492:11, col:38> col:38 __mutexattr 'const pthread_mutexattr_t *'
| |-NoThrowAttr 0x562bf753d2f8 <line:493:22>
| `-NonNullAttr 0x562bf753d350 <col:63, col:77> 1
|-FunctionDecl 0x562bf753d4c8 <line:494:1, line:495:79> line:494:12 pthread_mutex_destroy 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x562bf753d398 <col:35, col:52> col:52 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x562bf753d570 <line:495:22>
| `-NonNullAttr 0x562bf753d5c8 <col:63, col:77> 1
|-FunctionDecl 0x562bf753d6d0 <line:496:1, line:497:68> line:496:12 pthread_mutex_trylock 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x562bf753d618 <col:35, col:52> col:52 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x562bf753d778 <line:497:22>
| `-NonNullAttr 0x562bf753d7d0 <col:52, col:66> 1
|-FunctionDecl 0x562bf753d8d0 <line:498:1, line:499:68> line:498:12 pthread_mutex_lock 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x562bf753d818 <col:32, col:49> col:49 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x562bf753d978 <line:499:22>
| `-NonNullAttr 0x562bf753d9d0 <col:52, col:66> 1
|-FunctionDecl 0x562bf753ec28 <line:500:1, line:502:85> line:500:12 pthread_mutex_timedlock 'int (pthread_mutex_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x562bf753ea38 <col:37, col:65> col:65 __mutex 'pthread_mutex_t *restrict'
| |-ParmVarDecl 0x562bf753eac8 <line:501:9, line:502:9> col:9 __abstime 'const struct timespec *restrict'
| |-NoThrowAttr 0x562bf753ecd8 <col:36>
| `-NonNullAttr 0x562bf753ed30 <col:66, col:83> 1 2
|-FunctionDecl 0x562bf753ee30 <line:503:1, line:504:68> line:503:12 pthread_mutex_unlock 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x562bf753ed78 <col:34, col:51> col:51 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x562bf753eed8 <line:504:22>
| `-NonNullAttr 0x562bf753ef30 <col:52, col:66> 1
|-FunctionDecl 0x562bf753f1c8 <line:505:1, line:508:82> line:505:12 pthread_mutex_getprioceiling 'int (const pthread_mutex_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x562bf753efe0 <col:42, line:506:18> col:18 __mutex 'const pthread_mutex_t *restrict'
| |-ParmVarDecl 0x562bf753f060 <line:507:7, col:23> col:23 __prioceiling 'int *restrict'
| |-NoThrowAttr 0x562bf753f278 <line:508:22>
| `-NonNullAttr 0x562bf753f2d0 <col:63, col:80> 1 2
|-FunctionDecl 0x562bf753f598 <line:509:1, line:512:82> line:509:12 pthread_mutex_setprioceiling 'int (pthread_mutex_t *restrict, int, int *restrict)' extern
| |-ParmVarDecl 0x562bf753f318 <col:42, col:70> col:70 __mutex 'pthread_mutex_t *restrict'
| |-ParmVarDecl 0x562bf753f398 <line:510:7, col:11> col:11 __prioceiling 'int'
| |-ParmVarDecl 0x562bf753f418 <line:511:7, col:23> col:23 __old_ceiling 'int *restrict'
| |-NoThrowAttr 0x562bf753f650 <line:512:22>
| `-NonNullAttr 0x562bf753f6a8 <col:63, col:80> 1 3
|-FunctionDecl 0x562bf753f7b0 <line:513:1, line:514:79> line:513:12 pthread_mutex_consistent 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x562bf753f6f8 <col:38, col:55> col:55 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x562bf753f858 <line:514:22>
| `-NonNullAttr 0x562bf753f8b0 <col:63, col:77> 1
|-FunctionDecl 0x562bf753fad8 <line:515:1, line:516:79> line:515:12 pthread_mutexattr_init 'int (pthread_mutexattr_t *)' extern
| |-ParmVarDecl 0x562bf753f960 <col:36, col:57> col:57 __attr 'pthread_mutexattr_t *'
| |-NoThrowAttr 0x562bf753fb80 <line:516:22>
| `-NonNullAttr 0x562bf753fbd8 <col:63, col:77> 1
|-FunctionDecl 0x562bf753fce0 <line:517:1, line:518:79> line:517:12 pthread_mutexattr_destroy 'int (pthread_mutexattr_t *)' extern
| |-ParmVarDecl 0x562bf753fc28 <col:39, col:60> col:60 __attr 'pthread_mutexattr_t *'
| |-NoThrowAttr 0x562bf753fd88 <line:518:22>
| `-NonNullAttr 0x562bf753fde0 <col:63, col:77> 1
|-FunctionDecl 0x562bf7540008 <line:519:1, line:522:82> line:519:12 pthread_mutexattr_getpshared 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x562bf753fe28 <col:42, line:520:18> col:18 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x562bf753fea8 <line:521:7, col:23> col:23 __pshared 'int *restrict'
| |-NoThrowAttr 0x562bf75400b8 <line:522:22>
| `-NonNullAttr 0x562bf7540110 <col:63, col:80> 1 2
|-FunctionDecl 0x562bf7540318 <line:523:1, line:525:79> line:523:12 pthread_mutexattr_setpshared 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x562bf7540158 <col:42, col:63> col:63 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x562bf75401d8 <line:524:7, col:11> col:11 __pshared 'int'
| |-NoThrowAttr 0x562bf75403c8 <line:525:22>
| `-NonNullAttr 0x562bf7540420 <col:63, col:77> 1
|-FunctionDecl 0x562bf75405c8 <line:526:1, line:528:82> line:526:12 pthread_mutexattr_gettype 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x562bf7540468 <col:39, line:527:11> col:11 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x562bf75404e8 <col:19, col:35> col:35 __kind 'int *restrict'
| |-NoThrowAttr 0x562bf7540678 <line:528:22>
| `-NonNullAttr 0x562bf75406d0 <col:63, col:80> 1 2
|-FunctionDecl 0x562bf7540858 <line:529:1, line:530:79> line:529:12 pthread_mutexattr_settype 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x562bf7540718 <col:39, col:60> col:60 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x562bf7540798 <col:68, col:72> col:72 __kind 'int'
| |-NoThrowAttr 0x562bf7540908 <line:530:22>
| `-NonNullAttr 0x562bf7540960 <col:63, col:77> 1
|-FunctionDecl 0x562bf7540b20 <line:531:1, line:534:82> line:531:12 pthread_mutexattr_getprotocol 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x562bf75409a8 <col:43, line:532:19> col:19 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x562bf7540a40 <line:533:8, col:24> col:24 __protocol 'int *restrict'
| |-NoThrowAttr 0x562bf7540bd0 <line:534:22>
| `-NonNullAttr 0x562bf7540c28 <col:63, col:80> 1 2
|-FunctionDecl 0x562bf7540db8 <line:535:1, line:537:79> line:535:12 pthread_mutexattr_setprotocol 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x562bf7540c78 <col:43, col:64> col:64 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x562bf7540cf8 <line:536:8, col:12> col:12 __protocol 'int'
| |-NoThrowAttr 0x562bf7540e68 <line:537:22>
| `-NonNullAttr 0x562bf7540ec0 <col:63, col:77> 1
|-FunctionDecl 0x562bf7541068 <line:538:1, line:541:82> line:538:12 pthread_mutexattr_getprioceiling 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x562bf7540f08 <col:46, line:539:22> col:22 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x562bf7540f88 <line:540:11, col:27> col:27 __prioceiling 'int *restrict'
| |-NoThrowAttr 0x562bf7541118 <line:541:22>
| `-NonNullAttr 0x562bf7541170 <col:63, col:80> 1 2
|-FunctionDecl 0x562bf75412f8 <line:542:1, line:544:79> line:542:12 pthread_mutexattr_setprioceiling 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x562bf75411b8 <col:46, col:67> col:67 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x562bf7541238 <line:543:11, col:15> col:15 __prioceiling 'int'
| |-NoThrowAttr 0x562bf75413a8 <line:544:22>
| `-NonNullAttr 0x562bf7541400 <col:63, col:77> 1
|-FunctionDecl 0x562bf75415e8 <line:545:1, line:547:82> line:545:12 pthread_mutexattr_getrobust 'int (const pthread_mutexattr_t *, int *)' extern
| |-ParmVarDecl 0x562bf7541448 <col:41, col:68> col:68 __attr 'const pthread_mutexattr_t *'
| |-ParmVarDecl 0x562bf75414c8 <line:546:6, col:11> col:11 __robustness 'int *'
| |-NoThrowAttr 0x562bf7541698 <line:547:22>
| `-NonNullAttr 0x562bf75416f0 <col:63, col:80> 1 2
|-FunctionDecl 0x562bf7541878 <line:548:1, line:550:79> line:548:12 pthread_mutexattr_setrobust 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x562bf7541738 <col:41, col:62> col:62 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x562bf75417b8 <line:549:6, col:10> col:10 __robustness 'int'
| |-NoThrowAttr 0x562bf7541928 <line:550:22>
| `-NonNullAttr 0x562bf7541980 <col:63, col:77> 1
|-FunctionDecl 0x562bf7542cf8 <line:551:1, line:553:86> line:551:12 pthread_rwlock_init 'int (pthread_rwlock_t *restrict, const pthread_rwlockattr_t *restrict)' extern
| |-ParmVarDecl 0x562bf7542aa0 <col:33, col:62> col:62 __rwlock 'pthread_rwlock_t *restrict'
| |-ParmVarDecl 0x562bf7542bb0 <line:552:5, line:553:5> col:5 __attr 'const pthread_rwlockattr_t *restrict'
| |-NoThrowAttr 0x562bf7542da8 <col:29>
| `-NonNullAttr 0x562bf7542e00 <col:70, col:84> 1
|-FunctionDecl 0x562bf7542f78 <line:554:1, line:555:79> line:554:12 pthread_rwlock_destroy 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x562bf7542e48 <col:36, col:54> col:54 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x562bf7543020 <line:555:22>
| `-NonNullAttr 0x562bf7543078 <col:63, col:77> 1
|-FunctionDecl 0x562bf7543180 <line:556:1, line:557:68> line:556:12 pthread_rwlock_rdlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x562bf75430c8 <col:35, col:53> col:53 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x562bf7543228 <line:557:22>
| `-NonNullAttr 0x562bf7543280 <col:52, col:66> 1
|-FunctionDecl 0x562bf7543380 <line:558:1, line:559:65> line:558:12 pthread_rwlock_tryrdlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x562bf75432c8 <col:38, col:56> col:56 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x562bf7543428 <line:559:19>
| `-NonNullAttr 0x562bf7543480 <col:49, col:63> 1
|-FunctionDecl 0x562bf75436b8 <line:560:1, line:562:88> line:560:12 pthread_rwlock_timedrdlock 'int (pthread_rwlock_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x562bf75434c8 <col:40, col:69> col:69 __rwlock 'pthread_rwlock_t *restrict'
| |-ParmVarDecl 0x562bf7543558 <line:561:12, line:562:12> col:12 __abstime 'const struct timespec *restrict'
| |-NoThrowAttr 0x562bf7543768 <col:39>
| `-NonNullAttr 0x562bf75437c0 <col:69, col:86> 1 2
|-FunctionDecl 0x562bf75438c0 <line:563:1, line:564:68> line:563:12 pthread_rwlock_wrlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x562bf7543808 <col:35, col:53> col:53 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x562bf7543968 <line:564:22>
| `-NonNullAttr 0x562bf75439c0 <col:52, col:66> 1
|-FunctionDecl 0x562bf7543b28 <line:565:1, line:566:68> line:565:12 pthread_rwlock_trywrlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x562bf7543a70 <col:38, col:56> col:56 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x562bf7543bd0 <line:566:22>
| `-NonNullAttr 0x562bf7543c28 <col:52, col:66> 1
|-FunctionDecl 0x562bf7543de8 <line:567:1, line:569:88> line:567:12 pthread_rwlock_timedwrlock 'int (pthread_rwlock_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x562bf7543c78 <col:40, col:69> col:69 __rwlock 'pthread_rwlock_t *restrict'
| |-ParmVarDecl 0x562bf7543d08 <line:568:12, line:569:12> col:12 __abstime 'const struct timespec *restrict'
| |-NoThrowAttr 0x562bf7543e98 <col:39>
| `-NonNullAttr 0x562bf7543ef0 <col:69, col:86> 1 2
|-FunctionDecl 0x562bf7543ff0 <line:570:1, line:571:68> line:570:12 pthread_rwlock_unlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x562bf7543f38 <col:35, col:53> col:53 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x562bf7544098 <line:571:22>
| `-NonNullAttr 0x562bf75440f0 <col:52, col:66> 1
|-FunctionDecl 0x562bf75442d8 <line:572:1, line:573:79> line:572:12 pthread_rwlockattr_init 'int (pthread_rwlockattr_t *)' extern
| |-ParmVarDecl 0x562bf75441a0 <col:37, col:59> col:59 __attr 'pthread_rwlockattr_t *'
| |-NoThrowAttr 0x562bf7544380 <line:573:22>
| `-NonNullAttr 0x562bf75443d8 <col:63, col:77> 1
|-FunctionDecl 0x562bf75444e0 <line:574:1, line:575:79> line:574:12 pthread_rwlockattr_destroy 'int (pthread_rwlockattr_t *)' extern
| |-ParmVarDecl 0x562bf7544428 <col:40, col:62> col:62 __attr 'pthread_rwlockattr_t *'
| |-NoThrowAttr 0x562bf7544588 <line:575:22>
| `-NonNullAttr 0x562bf75445e0 <col:63, col:77> 1
|-FunctionDecl 0x562bf7544808 <line:576:1, line:579:82> line:576:12 pthread_rwlockattr_getpshared 'int (const pthread_rwlockattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x562bf7544628 <col:43, line:577:19> col:19 __attr 'const pthread_rwlockattr_t *restrict'
| |-ParmVarDecl 0x562bf75446a8 <line:578:8, col:24> col:24 __pshared 'int *restrict'
| |-NoThrowAttr 0x562bf75448b8 <line:579:22>
| `-NonNullAttr 0x562bf7544910 <col:63, col:80> 1 2
|-FunctionDecl 0x562bf7544b38 <line:580:1, line:582:79> line:580:12 pthread_rwlockattr_setpshared 'int (pthread_rwlockattr_t *, int)' extern
| |-ParmVarDecl 0x562bf7544958 <col:43, col:65> col:65 __attr 'pthread_rwlockattr_t *'
| |-ParmVarDecl 0x562bf75449d8 <line:581:8, col:12> col:12 __pshared 'int'
| |-NoThrowAttr 0x562bf7544be8 <line:582:22>
| `-NonNullAttr 0x562bf7544c40 <col:63, col:77> 1
|-FunctionDecl 0x562bf7544de8 <line:583:1, line:586:82> line:583:12 pthread_rwlockattr_getkind_np 'int (const pthread_rwlockattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x562bf7544c88 <col:43, line:584:19> col:19 __attr 'const pthread_rwlockattr_t *restrict'
| |-ParmVarDecl 0x562bf7544d08 <line:585:8, col:24> col:24 __pref 'int *restrict'
| |-NoThrowAttr 0x562bf7544e98 <line:586:22>
| `-NonNullAttr 0x562bf7544ef0 <col:63, col:80> 1 2
|-FunctionDecl 0x562bf7545078 <line:587:1, line:588:93> line:587:12 pthread_rwlockattr_setkind_np 'int (pthread_rwlockattr_t *, int)' extern
| |-ParmVarDecl 0x562bf7544f38 <col:43, col:65> col:65 __attr 'pthread_rwlockattr_t *'
| |-ParmVarDecl 0x562bf7544fb8 <line:588:8, col:12> col:12 __pref 'int'
| |-NoThrowAttr 0x562bf7545128 <col:36>
| `-NonNullAttr 0x562bf7545180 <col:77, col:91> 1
|-FunctionDecl 0x562bf75454b8 <line:589:1, line:591:79> line:589:12 pthread_cond_init 'int (pthread_cond_t *restrict, const pthread_condattr_t *restrict)' extern
| |-ParmVarDecl 0x562bf7545260 <col:31, col:58> col:58 __cond 'pthread_cond_t *restrict'
| |-ParmVarDecl 0x562bf7545370 <line:590:10, col:47> col:47 __cond_attr 'const pthread_condattr_t *restrict'
| |-NoThrowAttr 0x562bf7545568 <line:591:22>
| `-NonNullAttr 0x562bf75455c0 <col:63, col:77> 1
|-FunctionDecl 0x562bf7545738 <line:592:1, line:593:79> line:592:12 pthread_cond_destroy 'int (pthread_cond_t *)' extern
| |-ParmVarDecl 0x562bf7545608 <col:34, col:50> col:50 __cond 'pthread_cond_t *'
| |-NoThrowAttr 0x562bf75457e0 <line:593:22>
| `-NonNullAttr 0x562bf7545838 <col:63, col:77> 1
|-FunctionDecl 0x562bf7545940 <line:594:1, line:595:68> line:594:12 pthread_cond_signal 'int (pthread_cond_t *)' extern
| |-ParmVarDecl 0x562bf7545888 <col:33, col:49> col:49 __cond 'pthread_cond_t *'
| |-NoThrowAttr 0x562bf75459e8 <line:595:22>
| `-NonNullAttr 0x562bf7545a40 <col:52, col:66> 1
|-FunctionDecl 0x562bf7545b58 <line:596:1, line:597:68> line:596:12 pthread_cond_broadcast 'int (pthread_cond_t *)' extern
| |-ParmVarDecl 0x562bf7545aa0 <col:36, col:52> col:52 __cond 'pthread_cond_t *'
| |-NoThrowAttr 0x562bf7545c00 <line:597:22>
| `-NonNullAttr 0x562bf7545c58 <col:52, col:66> 1
|-FunctionDecl 0x562bf7545e88 <line:598:1, line:600:41> line:598:12 pthread_cond_wait 'int (pthread_cond_t *restrict, pthread_mutex_t *restrict)' extern
| |-ParmVarDecl 0x562bf7545ca8 <col:31, col:58> col:58 __cond 'pthread_cond_t *restrict'
| |-ParmVarDecl 0x562bf7545d20 <line:599:10, col:38> col:38 __mutex 'pthread_mutex_t *restrict'
| `-NonNullAttr 0x562bf7545f38 <line:600:22, col:39> 1 2
|-FunctionDecl 0x562bf7546268 <line:601:1, line:604:44> line:601:12 pthread_cond_timedwait 'int (pthread_cond_t *restrict, pthread_mutex_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x562bf7545fb8 <col:36, col:63> col:63 __cond 'pthread_cond_t *restrict'
| |-ParmVarDecl 0x562bf7546030 <line:602:8, col:36> col:36 __mutex 'pthread_mutex_t *restrict'
| |-ParmVarDecl 0x562bf75460c0 <line:603:8, col:42> col:42 __abstime 'const struct timespec *restrict'
| `-NonNullAttr 0x562bf7546320 <line:604:22, col:42> 1 2 3
|-FunctionDecl 0x562bf7546538 <line:605:1, line:606:79> line:605:12 pthread_condattr_init 'int (pthread_condattr_t *)' extern
| |-ParmVarDecl 0x562bf7546400 <col:35, col:55> col:55 __attr 'pthread_condattr_t *'
| |-NoThrowAttr 0x562bf75465e0 <line:606:22>
| `-NonNullAttr 0x562bf7546638 <col:63, col:77> 1
|-FunctionDecl 0x562bf7546740 <line:607:1, line:608:79> line:607:12 pthread_condattr_destroy 'int (pthread_condattr_t *)' extern
| |-ParmVarDecl 0x562bf7546688 <col:38, col:58> col:58 __attr 'pthread_condattr_t *'
| |-NoThrowAttr 0x562bf75467e8 <line:608:22>
| `-NonNullAttr 0x562bf7546840 <col:63, col:77> 1
|-FunctionDecl 0x562bf7546aa0 <line:609:1, line:612:82> line:609:12 pthread_condattr_getpshared 'int (const pthread_condattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x562bf7546888 <col:41, line:610:17> col:17 __attr 'const pthread_condattr_t *restrict'
| |-ParmVarDecl 0x562bf7546908 <line:611:6, col:22> col:22 __pshared 'int *restrict'
| |-NoThrowAttr 0x562bf7546b50 <line:612:22>
| `-NonNullAttr 0x562bf7546ba8 <col:63, col:80> 1 2
|-FunctionDecl 0x562bf7546db8 <line:613:1, line:614:94> line:613:12 pthread_condattr_setpshared 'int (pthread_condattr_t *, int)' extern
| |-ParmVarDecl 0x562bf7546bf8 <col:41, col:61> col:61 __attr 'pthread_condattr_t *'
| |-ParmVarDecl 0x562bf7546c78 <line:614:6, col:10> col:10 __pshared 'int'
| |-NoThrowAttr 0x562bf7546e68 <col:37>
| `-NonNullAttr 0x562bf7546ec0 <col:78, col:92> 1
|-FunctionDecl 0x562bf75470d8 <line:615:1, line:618:82> line:615:12 pthread_condattr_getclock 'int (const pthread_condattr_t *restrict, __clockid_t *restrict)' extern
| |-ParmVarDecl 0x562bf7546f08 <col:39, line:616:22> col:22 __attr 'const pthread_condattr_t *restrict'
| |-ParmVarDecl 0x562bf7546fb0 <line:617:11, col:35> col:35 __clock_id '__clockid_t *restrict'
| |-NoThrowAttr 0x562bf7547188 <line:618:22>
| `-NonNullAttr 0x562bf75471e0 <col:63, col:80> 1 2
|-FunctionDecl 0x562bf75473a8 <line:619:1, line:621:79> line:619:12 pthread_condattr_setclock 'int (pthread_condattr_t *, __clockid_t)' extern
| |-ParmVarDecl 0x562bf7547228 <col:39, col:59> col:59 __attr 'pthread_condattr_t *'
| |-ParmVarDecl 0x562bf75472a0 <line:620:11, col:23> col:23 __clock_id '__clockid_t':'int'
| |-NoThrowAttr 0x562bf7547458 <line:621:22>
| `-NonNullAttr 0x562bf75474b0 <col:63, col:77> 1
|-FunctionDecl 0x562bf7547758 <line:622:1, line:623:79> line:622:12 pthread_spin_init 'int (pthread_spinlock_t *, int)' extern
| |-ParmVarDecl 0x562bf7547590 <col:31, col:51> col:51 __lock 'pthread_spinlock_t *'
| |-ParmVarDecl 0x562bf7547610 <col:59, col:63> col:63 __pshared 'int'
| |-NoThrowAttr 0x562bf7547808 <line:623:22>
| `-NonNullAttr 0x562bf7547860 <col:63, col:77> 1
|-FunctionDecl 0x562bf75479d8 <line:624:1, line:625:79> line:624:12 pthread_spin_destroy 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x562bf75478a8 <col:34, col:54> col:54 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x562bf7547ab0 <line:625:22>
| `-NonNullAttr 0x562bf7547b08 <col:63, col:77> 1
|-FunctionDecl 0x562bf7547c10 <line:626:1, line:627:68> line:626:12 pthread_spin_lock 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x562bf7547b58 <col:31, col:51> col:51 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x562bf7547cb8 <line:627:22>
| `-NonNullAttr 0x562bf7547d10 <col:52, col:66> 1
|-FunctionDecl 0x562bf7547e10 <line:628:1, line:629:68> line:628:12 pthread_spin_trylock 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x562bf7547d58 <col:34, col:54> col:54 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x562bf7547eb8 <line:629:22>
| `-NonNullAttr 0x562bf7547f10 <col:52, col:66> 1
|-FunctionDecl 0x562bf7548010 <line:630:1, line:631:68> line:630:12 pthread_spin_unlock 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x562bf7547f58 <col:33, col:53> col:53 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x562bf75480b8 <line:631:22>
| `-NonNullAttr 0x562bf7548110 <col:52, col:66> 1
|-FunctionDecl 0x562bf75484e8 <line:632:1, line:635:79> line:632:12 pthread_barrier_init 'int (pthread_barrier_t *restrict, const pthread_barrierattr_t *restrict, unsigned int)' extern
| |-ParmVarDecl 0x562bf75481f0 <col:34, col:64> col:64 __barrier 'pthread_barrier_t *restrict'
| |-ParmVarDecl 0x562bf7548300 <line:633:6, line:634:6> col:6 __attr 'const pthread_barrierattr_t *restrict'
| |-ParmVarDecl 0x562bf7548380 <col:14, col:27> col:27 __count 'unsigned int'
| |-NoThrowAttr 0x562bf75485a0 <line:635:22>
| `-NonNullAttr 0x562bf75485f8 <col:63, col:77> 1
|-FunctionDecl 0x562bf7548778 <line:636:1, line:637:79> line:636:12 pthread_barrier_destroy 'int (pthread_barrier_t *)' extern
| |-ParmVarDecl 0x562bf7548648 <col:37, col:56> col:56 __barrier 'pthread_barrier_t *'
| |-NoThrowAttr 0x562bf7548820 <line:637:22>
| `-NonNullAttr 0x562bf7548878 <col:63, col:77> 1
|-FunctionDecl 0x562bf7548980 <line:638:1, line:639:68> line:638:12 pthread_barrier_wait 'int (pthread_barrier_t *)' extern
| |-ParmVarDecl 0x562bf75488c8 <col:34, col:53> col:53 __barrier 'pthread_barrier_t *'
| |-NoThrowAttr 0x562bf7548a28 <line:639:22>
| `-NonNullAttr 0x562bf7548a80 <col:52, col:66> 1
|-FunctionDecl 0x562bf7549c88 <line:640:1, line:641:79> line:640:12 pthread_barrierattr_init 'int (pthread_barrierattr_t *)' extern
| |-ParmVarDecl 0x562bf7549b50 <col:38, col:61> col:61 __attr 'pthread_barrierattr_t *'
| |-NoThrowAttr 0x562bf7549d30 <line:641:22>
| `-NonNullAttr 0x562bf7549d88 <col:63, col:77> 1
|-FunctionDecl 0x562bf7549e90 <line:642:1, line:643:79> line:642:12 pthread_barrierattr_destroy 'int (pthread_barrierattr_t *)' extern
| |-ParmVarDecl 0x562bf7549dd8 <col:41, col:64> col:64 __attr 'pthread_barrierattr_t *'
| |-NoThrowAttr 0x562bf7549f38 <line:643:22>
| `-NonNullAttr 0x562bf7549f90 <col:63, col:77> 1
|-FunctionDecl 0x562bf754a1b8 <line:644:1, line:647:82> line:644:12 pthread_barrierattr_getpshared 'int (const pthread_barrierattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x562bf7549fd8 <col:44, line:645:20> col:20 __attr 'const pthread_barrierattr_t *restrict'
| |-ParmVarDecl 0x562bf754a058 <line:646:9, col:25> col:25 __pshared 'int *restrict'
| |-NoThrowAttr 0x562bf754a268 <line:647:22>
| `-NonNullAttr 0x562bf754a2c0 <col:63, col:80> 1 2
|-FunctionDecl 0x562bf754a4c8 <line:648:1, line:650:79> line:648:12 pthread_barrierattr_setpshared 'int (pthread_barrierattr_t *, int)' extern
| |-ParmVarDecl 0x562bf754a308 <col:44, col:67> col:67 __attr 'pthread_barrierattr_t *'
| |-ParmVarDecl 0x562bf754a388 <line:649:9, col:13> col:13 __pshared 'int'
| |-NoThrowAttr 0x562bf754a578 <line:650:22>
| `-NonNullAttr 0x562bf754a5d0 <col:63, col:77> 1
|-FunctionDecl 0x562bf754a918 <line:651:1, line:653:79> line:651:12 pthread_key_create 'int (pthread_key_t *, void (*)(void *))' extern
| |-ParmVarDecl 0x562bf754a6b0 <col:32, col:47> col:47 __key 'pthread_key_t *'
| |-ParmVarDecl 0x562bf754a7d0 <line:652:11, col:43> col:18 __destr_function 'void (*)(void *)'
| |-NoThrowAttr 0x562bf754a9c8 <line:653:22>
| `-NonNullAttr 0x562bf754aa20 <col:63, col:77> 1
|-FunctionDecl 0x562bf754ab88 <line:654:1, col:92> col:12 pthread_key_delete 'int (pthread_key_t)' extern
| |-ParmVarDecl 0x562bf754aa68 <col:32, col:46> col:46 __key 'pthread_key_t':'unsigned int'
| `-NoThrowAttr 0x562bf754ac30 <col:69>
|-FunctionDecl 0x562bf754ada8 <line:655:1, col:95> col:14 pthread_getspecific 'void *(pthread_key_t)' extern
| |-ParmVarDecl 0x562bf754ac98 <col:35, col:49> col:49 __key 'pthread_key_t':'unsigned int'
| `-NoThrowAttr 0x562bf754ae50 <col:72>
|-FunctionDecl 0x562bf754b088 <line:656:1, line:657:67> line:656:12 pthread_setspecific 'int (pthread_key_t, const void *)' extern
| |-ParmVarDecl 0x562bf754aeb8 <col:33, col:47> col:47 __key 'pthread_key_t':'unsigned int'
| |-ParmVarDecl 0x562bf754af68 <line:657:5, col:17> col:17 __pointer 'const void *'
| `-NoThrowAttr 0x562bf754b138 <col:44>
|-FunctionDecl 0x562bf754b358 <line:658:1, line:660:79> line:658:12 pthread_getcpuclockid 'int (pthread_t, __clockid_t *)' extern
| |-ParmVarDecl 0x562bf754b1a0 <col:35, col:45> col:45 __thread_id 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x562bf754b218 <line:659:7, col:20> col:20 __clock_id '__clockid_t *'
| |-NoThrowAttr 0x562bf754b408 <line:660:22>
| `-NonNullAttr 0x562bf754b460 <col:63, col:77> 2
|-FunctionDecl 0x562bf754b8a8 <line:661:1, line:663:70> line:661:12 pthread_atfork 'int (void (*)(void), void (*)(void), void (*)(void))' extern
| |-ParmVarDecl 0x562bf754b540 <col:28, col:51> col:35 __prepare 'void (*)(void)'
| |-ParmVarDecl 0x562bf754b650 <line:662:7, col:29> col:14 __parent 'void (*)(void)'
| |-ParmVarDecl 0x562bf754b760 <line:663:7, col:28> col:14 __child 'void (*)(void)'
| `-NoThrowAttr 0x562bf754b960 <col:47>
|-FunctionDecl 0x562bf754baf0 <line:665:1, col:20> col:8 used P0 'void *(void *)'
| `-ParmVarDecl 0x562bf754b9d0 <col:11, col:17> col:17 arg 'void *'
|-FunctionDecl 0x562bf754bc48 <line:666:1, col:20> col:8 used P1 'void *(void *)'
| `-ParmVarDecl 0x562bf754bbb0 <col:11, col:17> col:17 arg 'void *'
|-FunctionDecl 0x562bf754bda0 <line:667:1, col:20> col:8 used P2 'void *(void *)'
| `-ParmVarDecl 0x562bf754bd08 <col:11, col:17> col:17 arg 'void *'
|-FunctionDecl 0x562bf754be68 <line:668:1, col:12> col:6 fence 'void ()'
|-FunctionDecl 0x562bf754bf28 <line:669:1, col:12> col:6 isync 'void ()'
|-FunctionDecl 0x562bf754bfe8 <line:670:1, col:14> col:6 lwfence 'void ()'
|-VarDecl 0x562bf754c0a0 <line:671:1, col:5> col:5 used __unbuffered_cnt 'int'
|-VarDecl 0x562bf754c120 prev 0x562bf754c0a0 <line:672:1, col:24> col:5 used __unbuffered_cnt 'int' cinit
| `-IntegerLiteral 0x562bf754c188 <col:24> 'int' 0
|-VarDecl 0x562bf754c1c0 <line:673:1, col:5> col:5 used __unbuffered_p2_EAX 'int'
|-VarDecl 0x562bf754c240 prev 0x562bf754c1c0 <line:674:1, col:27> col:5 used __unbuffered_p2_EAX 'int' cinit
| `-IntegerLiteral 0x562bf754c2a8 <col:27> 'int' 0
|-VarDecl 0x562bf754c2d8 <line:675:1, col:7> col:7 used main$tmp_guard0 '_Bool'
|-VarDecl 0x562bf754c350 <line:676:1, col:7> col:7 used main$tmp_guard1 '_Bool'
|-VarDecl 0x562bf754c3d0 <line:677:1, col:5> col:5 used x 'int'
|-VarDecl 0x562bf754c450 prev 0x562bf754c3d0 <line:678:1, col:9> col:5 used x 'int' cinit
| `-IntegerLiteral 0x562bf754c4b8 <col:9> 'int' 0
|-VarDecl 0x562bf754c4f0 <line:679:1, col:5> col:5 used y 'int'
|-VarDecl 0x562bf754c570 prev 0x562bf754c4f0 <line:680:1, col:9> col:5 used y 'int' cinit
| `-IntegerLiteral 0x562bf754c5d8 <col:9> 'int' 0
|-VarDecl 0x562bf754c608 <line:681:1, col:7> col:7 used y$flush_delayed '_Bool'
|-VarDecl 0x562bf754c688 <line:682:1, col:5> col:5 used y$mem_tmp 'int'
|-VarDecl 0x562bf754c700 <line:683:1, col:7> col:7 used y$r_buff0_thd0 '_Bool'
|-VarDecl 0x562bf754c778 <line:684:1, col:7> col:7 used y$r_buff0_thd1 '_Bool'
|-VarDecl 0x562bf754c7f0 <line:685:1, col:7> col:7 used y$r_buff0_thd2 '_Bool'
|-VarDecl 0x562bf754c868 <line:686:1, col:7> col:7 used y$r_buff0_thd3 '_Bool'
|-VarDecl 0x562bf754c8e0 <line:687:1, col:7> col:7 used y$r_buff1_thd0 '_Bool'
|-VarDecl 0x562bf754c958 <line:688:1, col:7> col:7 used y$r_buff1_thd1 '_Bool'
|-VarDecl 0x562bf754c9d0 <line:689:1, col:7> col:7 used y$r_buff1_thd2 '_Bool'
|-VarDecl 0x562bf754ca48 <line:690:1, col:7> col:7 used y$r_buff1_thd3 '_Bool'
|-VarDecl 0x562bf754cb00 <line:691:1, col:7> col:7 y$read_delayed '_Bool'
|-VarDecl 0x562bf754cb80 <line:692:1, col:6> col:6 y$read_delayed_var 'int *'
|-VarDecl 0x562bf754cc00 <line:693:1, col:5> col:5 used y$w_buff0 'int'
|-VarDecl 0x562bf754cc78 <line:694:1, col:7> col:7 used y$w_buff0_used '_Bool'
|-VarDecl 0x562bf754ccf8 <line:695:1, col:5> col:5 used y$w_buff1 'int'
|-VarDecl 0x562bf754cd70 <line:696:1, col:7> col:7 used y$w_buff1_used '_Bool'
|-VarDecl 0x562bf754cdf0 <line:697:1, col:5> col:5 used z 'int'
|-VarDecl 0x562bf754ce70 prev 0x562bf754cdf0 <line:698:1, col:9> col:5 used z 'int' cinit
| `-IntegerLiteral 0x562bf754ced8 <col:9> 'int' 0
|-VarDecl 0x562bf754cf08 <line:699:1, col:7> col:7 used weak$$choice0 '_Bool'
|-VarDecl 0x562bf754cf80 <line:700:1, col:7> col:7 used weak$$choice2 '_Bool'
|-FunctionDecl 0x562bf754d098 prev 0x562bf754baf0 <line:701:1, line:715:1> line:701:8 used P0 'void *(void *)'
| |-ParmVarDecl 0x562bf754d000 <col:11, col:17> col:17 arg 'void *'
| `-CompoundStmt 0x562bf754d648 <line:702:1, line:715:1>
|   |-CallExpr 0x562bf754d1a8 <line:703:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x562bf754d190 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x562bf754d140 <col:3> 'void ()' Function 0x562bf74f2e40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x562bf754d208 <line:704:3, col:7> 'int' '='
|   | |-DeclRefExpr 0x562bf754d1c8 <col:3> 'int' lvalue Var 0x562bf754ce70 'z' 'int'
|   | `-IntegerLiteral 0x562bf754d1e8 <col:7> 'int' 1
|   |-CallExpr 0x562bf754d260 <line:705:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x562bf754d248 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x562bf754d228 <col:3> 'void ()' Function 0x562bf74f2f00 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x562bf754d2b8 <line:706:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x562bf754d2a0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x562bf754d280 <col:3> 'void ()' Function 0x562bf74f2e40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x562bf754d318 <line:707:3, col:7> 'int' '='
|   | |-DeclRefExpr 0x562bf754d2d8 <col:3> 'int' lvalue Var 0x562bf754c450 'x' 'int'
|   | `-IntegerLiteral 0x562bf754d2f8 <col:7> 'int' 1
|   |-CallExpr 0x562bf754d370 <line:708:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x562bf754d358 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x562bf754d338 <col:3> 'void ()' Function 0x562bf74f2f00 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x562bf754d3c8 <line:709:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x562bf754d3b0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x562bf754d390 <col:3> 'void ()' Function 0x562bf74f2e40 '__VERIFIER_atomic_begin' 'void ()'
|   |-CallExpr 0x562bf754d420 <line:710:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x562bf754d408 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x562bf754d3e8 <col:3> 'void ()' Function 0x562bf74f2f00 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x562bf754d478 <line:711:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x562bf754d460 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x562bf754d440 <col:3> 'void ()' Function 0x562bf74f2e40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x562bf754d530 <line:712:3, col:41> 'int' '='
|   | |-DeclRefExpr 0x562bf754d498 <col:3> 'int' lvalue Var 0x562bf754c120 '__unbuffered_cnt' 'int'
|   | `-BinaryOperator 0x562bf754d510 <col:22, col:41> 'int' '+'
|   |   |-ImplicitCastExpr 0x562bf754d4f8 <col:22> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x562bf754d4b8 <col:22> 'int' lvalue Var 0x562bf754c120 '__unbuffered_cnt' 'int'
|   |   `-IntegerLiteral 0x562bf754d4d8 <col:41> 'int' 1
|   |-CallExpr 0x562bf754d588 <line:713:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x562bf754d570 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x562bf754d550 <col:3> 'void ()' Function 0x562bf74f2f00 '__VERIFIER_atomic_end' 'void ()'
|   `-ReturnStmt 0x562bf754d638 <line:714:3, col:36>
|     `-CallExpr 0x562bf754d618 <col:10, col:36> 'void *'
|       `-ImplicitCastExpr 0x562bf754d600 <col:10> 'void *(*)(void)' <FunctionToPointerDecay>
|         `-DeclRefExpr 0x562bf754d5a8 <col:10> 'void *(void)' Function 0x562bf74f2958 '__VERIFIER_nondet_pointer' 'void *(void)'
|-FunctionDecl 0x562bf754d768 prev 0x562bf754bc48 <line:716:1, line:735:1> line:716:8 used P1 'void *(void *)'
| |-ParmVarDecl 0x562bf754d6d0 <col:11, col:17> col:17 arg 'void *'
| `-CompoundStmt 0x562bf754e988 <line:717:1, line:735:1>
|   |-CallExpr 0x562bf754d848 <line:718:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x562bf754d830 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x562bf754d810 <col:3> 'void ()' Function 0x562bf74f2e40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x562bf754d8a8 <line:719:3, col:7> 'int' '='
|   | |-DeclRefExpr 0x562bf754d868 <col:3> 'int' lvalue Var 0x562bf754c450 'x' 'int'
|   | `-IntegerLiteral 0x562bf754d888 <col:7> 'int' 2
|   |-CallExpr 0x562bf754d900 <line:720:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x562bf754d8e8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x562bf754d8c8 <col:3> 'void ()' Function 0x562bf74f2f00 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x562bf754d958 <line:721:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x562bf754d940 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x562bf754d920 <col:3> 'void ()' Function 0x562bf74f2e40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x562bf754d9b8 <line:722:3, col:7> 'int' '='
|   | |-DeclRefExpr 0x562bf754d978 <col:3> 'int' lvalue Var 0x562bf754c570 'y' 'int'
|   | `-IntegerLiteral 0x562bf754d998 <col:7> 'int' 1
|   |-CallExpr 0x562bf754da10 <line:723:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x562bf754d9f8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x562bf754d9d8 <col:3> 'void ()' Function 0x562bf74f2f00 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x562bf754da68 <line:724:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x562bf754da50 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x562bf754da30 <col:3> 'void ()' Function 0x562bf74f2e40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x562bf754dd60 <line:725:3, col:103> 'int' '='
|   | |-DeclRefExpr 0x562bf754da88 <col:3> 'int' lvalue Var 0x562bf754c570 'y' 'int'
|   | `-ConditionalOperator 0x562bf754dd30 <col:7, col:103> 'int'
|   |   |-BinaryOperator 0x562bf754db58 <col:7, col:25> 'int' '&&'
|   |   | |-ImplicitCastExpr 0x562bf754db10 <col:7> 'int' <IntegralCast>
|   |   | | `-ImplicitCastExpr 0x562bf754dae8 <col:7> '_Bool' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x562bf754daa8 <col:7> '_Bool' lvalue Var 0x562bf754cc78 'y$w_buff0_used' '_Bool'
|   |   | `-ImplicitCastExpr 0x562bf754db40 <col:25> 'int' <IntegralCast>
|   |   |   `-ImplicitCastExpr 0x562bf754db28 <col:25> '_Bool' <LValueToRValue>
|   |   |     `-DeclRefExpr 0x562bf754dac8 <col:25> '_Bool' lvalue Var 0x562bf754c7f0 'y$r_buff0_thd2' '_Bool'
|   |   |-ImplicitCastExpr 0x562bf754dd18 <col:42> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x562bf754db78 <col:42> 'int' lvalue Var 0x562bf754cc00 'y$w_buff0' 'int'
|   |   `-ParenExpr 0x562bf754dcf8 <col:54, col:103> 'int'
|   |     `-ConditionalOperator 0x562bf754dcc8 <col:55, col:102> 'int'
|   |       |-BinaryOperator 0x562bf754dc38 <col:55, col:73> 'int' '&&'
|   |       | |-ImplicitCastExpr 0x562bf754dbf0 <col:55> 'int' <IntegralCast>
|   |       | | `-ImplicitCastExpr 0x562bf754dbd8 <col:55> '_Bool' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x562bf754db98 <col:55> '_Bool' lvalue Var 0x562bf754cd70 'y$w_buff1_used' '_Bool'
|   |       | `-ImplicitCastExpr 0x562bf754dc20 <col:73> 'int' <IntegralCast>
|   |       |   `-ImplicitCastExpr 0x562bf754dc08 <col:73> '_Bool' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x562bf754dbb8 <col:73> '_Bool' lvalue Var 0x562bf754c9d0 'y$r_buff1_thd2' '_Bool'
|   |       |-ImplicitCastExpr 0x562bf754dc98 <col:90> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x562bf754dc58 <col:90> 'int' lvalue Var 0x562bf754ccf8 'y$w_buff1' 'int'
|   |       `-ImplicitCastExpr 0x562bf754dcb0 <col:102> 'int' <LValueToRValue>
|   |         `-DeclRefExpr 0x562bf754dc78 <col:102> 'int' lvalue Var 0x562bf754c570 'y' 'int'
|   |-BinaryOperator 0x562bf754df68 <line:726:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x562bf754dd80 <col:3> '_Bool' lvalue Var 0x562bf754cc78 'y$w_buff0_used' '_Bool'
|   | `-ImplicitCastExpr 0x562bf754df50 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x562bf754df20 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x562bf754de40 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x562bf754ddf8 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x562bf754dde0 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x562bf754dda0 <col:20> '_Bool' lvalue Var 0x562bf754cc78 'y$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x562bf754de28 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x562bf754de10 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x562bf754ddc0 <col:38> '_Bool' lvalue Var 0x562bf754c7f0 'y$r_buff0_thd2' '_Bool'
|   |     |-ImplicitCastExpr 0x562bf754ded8 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x562bf754de90 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x562bf754de60 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x562bf754df08 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x562bf754def0 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x562bf754deb8 <col:66> '_Bool' lvalue Var 0x562bf754cc78 'y$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x562bf754e250 <line:727:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x562bf754df88 <col:3> '_Bool' lvalue Var 0x562bf754cd70 'y$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x562bf754e238 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x562bf754e208 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x562bf754e128 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x562bf754e048 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x562bf754e000 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x562bf754dfe8 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x562bf754dfa8 <col:20> '_Bool' lvalue Var 0x562bf754cc78 'y$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x562bf754e030 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x562bf754e018 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x562bf754dfc8 <col:38> '_Bool' lvalue Var 0x562bf754c7f0 'y$r_buff0_thd2' '_Bool'
|   |     | `-BinaryOperator 0x562bf754e108 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x562bf754e0c0 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x562bf754e0a8 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x562bf754e068 <col:56> '_Bool' lvalue Var 0x562bf754cd70 'y$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x562bf754e0f0 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x562bf754e0d8 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x562bf754e088 <col:74> '_Bool' lvalue Var 0x562bf754c9d0 'y$r_buff1_thd2' '_Bool'
|   |     |-ImplicitCastExpr 0x562bf754e1c0 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x562bf754e178 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x562bf754e148 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x562bf754e1f0 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x562bf754e1d8 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x562bf754e1a0 <col:102> '_Bool' lvalue Var 0x562bf754cd70 'y$w_buff1_used' '_Bool'
|   |-BinaryOperator 0x562bf754e458 <line:728:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x562bf754e270 <col:3> '_Bool' lvalue Var 0x562bf754c7f0 'y$r_buff0_thd2' '_Bool'
|   | `-ImplicitCastExpr 0x562bf754e440 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x562bf754e410 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x562bf754e330 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x562bf754e2e8 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x562bf754e2d0 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x562bf754e290 <col:20> '_Bool' lvalue Var 0x562bf754cc78 'y$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x562bf754e318 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x562bf754e300 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x562bf754e2b0 <col:38> '_Bool' lvalue Var 0x562bf754c7f0 'y$r_buff0_thd2' '_Bool'
|   |     |-ImplicitCastExpr 0x562bf754e3c8 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x562bf754e380 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x562bf754e350 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x562bf754e3f8 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x562bf754e3e0 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x562bf754e3a8 <col:66> '_Bool' lvalue Var 0x562bf754c7f0 'y$r_buff0_thd2' '_Bool'
|   |-BinaryOperator 0x562bf754e740 <line:729:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x562bf754e478 <col:3> '_Bool' lvalue Var 0x562bf754c9d0 'y$r_buff1_thd2' '_Bool'
|   | `-ImplicitCastExpr 0x562bf754e728 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x562bf754e6f8 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x562bf754e618 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x562bf754e538 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x562bf754e4f0 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x562bf754e4d8 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x562bf754e498 <col:20> '_Bool' lvalue Var 0x562bf754cc78 'y$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x562bf754e520 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x562bf754e508 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x562bf754e4b8 <col:38> '_Bool' lvalue Var 0x562bf754c7f0 'y$r_buff0_thd2' '_Bool'
|   |     | `-BinaryOperator 0x562bf754e5f8 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x562bf754e5b0 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x562bf754e598 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x562bf754e558 <col:56> '_Bool' lvalue Var 0x562bf754cd70 'y$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x562bf754e5e0 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x562bf754e5c8 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x562bf754e578 <col:74> '_Bool' lvalue Var 0x562bf754c9d0 'y$r_buff1_thd2' '_Bool'
|   |     |-ImplicitCastExpr 0x562bf754e6b0 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x562bf754e668 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x562bf754e638 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x562bf754e6e0 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x562bf754e6c8 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x562bf754e690 <col:102> '_Bool' lvalue Var 0x562bf754c9d0 'y$r_buff1_thd2' '_Bool'
|   |-CallExpr 0x562bf754e798 <line:730:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x562bf754e780 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x562bf754e760 <col:3> 'void ()' Function 0x562bf74f2f00 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x562bf754e7f0 <line:731:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x562bf754e7d8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x562bf754e7b8 <col:3> 'void ()' Function 0x562bf74f2e40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x562bf754e8a8 <line:732:3, col:41> 'int' '='
|   | |-DeclRefExpr 0x562bf754e810 <col:3> 'int' lvalue Var 0x562bf754c120 '__unbuffered_cnt' 'int'
|   | `-BinaryOperator 0x562bf754e888 <col:22, col:41> 'int' '+'
|   |   |-ImplicitCastExpr 0x562bf754e870 <col:22> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x562bf754e830 <col:22> 'int' lvalue Var 0x562bf754c120 '__unbuffered_cnt' 'int'
|   |   `-IntegerLiteral 0x562bf754e850 <col:41> 'int' 1
|   |-CallExpr 0x562bf754e900 <line:733:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x562bf754e8e8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x562bf754e8c8 <col:3> 'void ()' Function 0x562bf74f2f00 '__VERIFIER_atomic_end' 'void ()'
|   `-ReturnStmt 0x562bf754e978 <line:734:3, col:36>
|     `-CallExpr 0x562bf754e958 <col:10, col:36> 'void *'
|       `-ImplicitCastExpr 0x562bf754e940 <col:10> 'void *(*)(void)' <FunctionToPointerDecay>
|         `-DeclRefExpr 0x562bf754e920 <col:10> 'void *(void)' Function 0x562bf74f2958 '__VERIFIER_nondet_pointer' 'void *(void)'
|-FunctionDecl 0x562bf754eb20 prev 0x562bf754bda0 <line:736:1, line:764:1> line:736:8 used P2 'void *(void *)'
| |-ParmVarDecl 0x562bf754ea38 <col:11, col:17> col:17 arg 'void *'
| `-CompoundStmt 0x562bf75502e0 <line:737:1, line:764:1>
|   |-CallExpr 0x562bf754ec00 <line:738:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x562bf754ebe8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x562bf754ebc8 <col:3> 'void ()' Function 0x562bf74f2e40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x562bf754ec78 <line:739:3, col:15> 'int' '='
|   | |-DeclRefExpr 0x562bf754ec20 <col:3> 'int' lvalue Var 0x562bf754ccf8 'y$w_buff1' 'int'
|   | `-ImplicitCastExpr 0x562bf754ec60 <col:15> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x562bf754ec40 <col:15> 'int' lvalue Var 0x562bf754cc00 'y$w_buff0' 'int'
|   |-BinaryOperator 0x562bf754ecd8 <line:740:3, col:15> 'int' '='
|   | |-DeclRefExpr 0x562bf754ec98 <col:3> 'int' lvalue Var 0x562bf754cc00 'y$w_buff0' 'int'
|   | `-IntegerLiteral 0x562bf754ecb8 <col:15> 'int' 2
|   |-BinaryOperator 0x562bf754ed50 <line:741:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x562bf754ecf8 <col:3> '_Bool' lvalue Var 0x562bf754cd70 'y$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x562bf754ed38 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x562bf754ed18 <col:20> '_Bool' lvalue Var 0x562bf754cc78 'y$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x562bf754ede8 <line:742:3, col:27> '_Bool' '='
|   | |-DeclRefExpr 0x562bf754ed70 <col:3> '_Bool' lvalue Var 0x562bf754cc78 'y$w_buff0_used' '_Bool'
|   | `-CStyleCastExpr 0x562bf754edc0 <col:20, col:27> '_Bool' <IntegralToBoolean>
|   |   `-IntegerLiteral 0x562bf754ed90 <col:27> 'int' 1
|   |-CallExpr 0x562bf754ef68 <line:743:3, col:56> 'void'
|   | |-ImplicitCastExpr 0x562bf754ef50 <col:3> 'void (*)(int)' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x562bf754ee08 <col:3> 'void (int)' Function 0x562bf74f2bc8 '__VERIFIER_assert' 'void (int)'
|   | `-UnaryOperator 0x562bf754ef08 <col:21, col:55> 'int' prefix '!' cannot overflow
|   |   `-ParenExpr 0x562bf754eee8 <col:22, col:55> 'int'
|   |     `-BinaryOperator 0x562bf754eec8 <col:23, col:41> 'int' '&&'
|   |       |-ImplicitCastExpr 0x562bf754ee80 <col:23> 'int' <IntegralCast>
|   |       | `-ImplicitCastExpr 0x562bf754ee68 <col:23> '_Bool' <LValueToRValue>
|   |       |   `-DeclRefExpr 0x562bf754ee28 <col:23> '_Bool' lvalue Var 0x562bf754cd70 'y$w_buff1_used' '_Bool'
|   |       `-ImplicitCastExpr 0x562bf754eeb0 <col:41> 'int' <IntegralCast>
|   |         `-ImplicitCastExpr 0x562bf754ee98 <col:41> '_Bool' <LValueToRValue>
|   |           `-DeclRefExpr 0x562bf754ee48 <col:41> '_Bool' lvalue Var 0x562bf754cc78 'y$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x562bf754efe8 <line:744:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x562bf754ef90 <col:3> '_Bool' lvalue Var 0x562bf754c8e0 'y$r_buff1_thd0' '_Bool'
|   | `-ImplicitCastExpr 0x562bf754efd0 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x562bf754efb0 <col:20> '_Bool' lvalue Var 0x562bf754c700 'y$r_buff0_thd0' '_Bool'
|   |-BinaryOperator 0x562bf754f060 <line:745:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x562bf754f008 <col:3> '_Bool' lvalue Var 0x562bf754c958 'y$r_buff1_thd1' '_Bool'
|   | `-ImplicitCastExpr 0x562bf754f048 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x562bf754f028 <col:20> '_Bool' lvalue Var 0x562bf754c778 'y$r_buff0_thd1' '_Bool'
|   |-BinaryOperator 0x562bf754f0d8 <line:746:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x562bf754f080 <col:3> '_Bool' lvalue Var 0x562bf754c9d0 'y$r_buff1_thd2' '_Bool'
|   | `-ImplicitCastExpr 0x562bf754f0c0 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x562bf754f0a0 <col:20> '_Bool' lvalue Var 0x562bf754c7f0 'y$r_buff0_thd2' '_Bool'
|   |-BinaryOperator 0x562bf754f150 <line:747:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x562bf754f0f8 <col:3> '_Bool' lvalue Var 0x562bf754ca48 'y$r_buff1_thd3' '_Bool'
|   | `-ImplicitCastExpr 0x562bf754f138 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x562bf754f118 <col:20> '_Bool' lvalue Var 0x562bf754c868 'y$r_buff0_thd3' '_Bool'
|   |-BinaryOperator 0x562bf754f1e8 <line:748:3, col:27> '_Bool' '='
|   | |-DeclRefExpr 0x562bf754f170 <col:3> '_Bool' lvalue Var 0x562bf754c868 'y$r_buff0_thd3' '_Bool'
|   | `-CStyleCastExpr 0x562bf754f1c0 <col:20, col:27> '_Bool' <IntegralToBoolean>
|   |   `-IntegerLiteral 0x562bf754f190 <col:27> 'int' 1
|   |-CallExpr 0x562bf754f240 <line:749:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x562bf754f228 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x562bf754f208 <col:3> 'void ()' Function 0x562bf74f2f00 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x562bf754f298 <line:750:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x562bf754f280 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x562bf754f260 <col:3> 'void ()' Function 0x562bf74f2e40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x562bf754f310 <line:751:3, col:25> 'int' '='
|   | |-DeclRefExpr 0x562bf754f2b8 <col:3> 'int' lvalue Var 0x562bf754c240 '__unbuffered_p2_EAX' 'int'
|   | `-ImplicitCastExpr 0x562bf754f2f8 <col:25> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x562bf754f2d8 <col:25> 'int' lvalue Var 0x562bf754ce70 'z' 'int'
|   |-CallExpr 0x562bf754f368 <line:752:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x562bf754f350 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x562bf754f330 <col:3> 'void ()' Function 0x562bf74f2f00 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x562bf754f3c0 <line:753:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x562bf754f3a8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x562bf754f388 <col:3> 'void ()' Function 0x562bf74f2e40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x562bf754f6a8 <line:754:3, col:103> 'int' '='
|   | |-DeclRefExpr 0x562bf754f3e0 <col:3> 'int' lvalue Var 0x562bf754c570 'y' 'int'
|   | `-ConditionalOperator 0x562bf754f678 <col:7, col:103> 'int'
|   |   |-BinaryOperator 0x562bf754f4a0 <col:7, col:25> 'int' '&&'
|   |   | |-ImplicitCastExpr 0x562bf754f458 <col:7> 'int' <IntegralCast>
|   |   | | `-ImplicitCastExpr 0x562bf754f440 <col:7> '_Bool' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x562bf754f400 <col:7> '_Bool' lvalue Var 0x562bf754cc78 'y$w_buff0_used' '_Bool'
|   |   | `-ImplicitCastExpr 0x562bf754f488 <col:25> 'int' <IntegralCast>
|   |   |   `-ImplicitCastExpr 0x562bf754f470 <col:25> '_Bool' <LValueToRValue>
|   |   |     `-DeclRefExpr 0x562bf754f420 <col:25> '_Bool' lvalue Var 0x562bf754c868 'y$r_buff0_thd3' '_Bool'
|   |   |-ImplicitCastExpr 0x562bf754f660 <col:42> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x562bf754f4c0 <col:42> 'int' lvalue Var 0x562bf754cc00 'y$w_buff0' 'int'
|   |   `-ParenExpr 0x562bf754f640 <col:54, col:103> 'int'
|   |     `-ConditionalOperator 0x562bf754f610 <col:55, col:102> 'int'
|   |       |-BinaryOperator 0x562bf754f580 <col:55, col:73> 'int' '&&'
|   |       | |-ImplicitCastExpr 0x562bf754f538 <col:55> 'int' <IntegralCast>
|   |       | | `-ImplicitCastExpr 0x562bf754f520 <col:55> '_Bool' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x562bf754f4e0 <col:55> '_Bool' lvalue Var 0x562bf754cd70 'y$w_buff1_used' '_Bool'
|   |       | `-ImplicitCastExpr 0x562bf754f568 <col:73> 'int' <IntegralCast>
|   |       |   `-ImplicitCastExpr 0x562bf754f550 <col:73> '_Bool' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x562bf754f500 <col:73> '_Bool' lvalue Var 0x562bf754ca48 'y$r_buff1_thd3' '_Bool'
|   |       |-ImplicitCastExpr 0x562bf754f5e0 <col:90> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x562bf754f5a0 <col:90> 'int' lvalue Var 0x562bf754ccf8 'y$w_buff1' 'int'
|   |       `-ImplicitCastExpr 0x562bf754f5f8 <col:102> 'int' <LValueToRValue>
|   |         `-DeclRefExpr 0x562bf754f5c0 <col:102> 'int' lvalue Var 0x562bf754c570 'y' 'int'
|   |-BinaryOperator 0x562bf754f8b0 <line:755:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x562bf754f6c8 <col:3> '_Bool' lvalue Var 0x562bf754cc78 'y$w_buff0_used' '_Bool'
|   | `-ImplicitCastExpr 0x562bf754f898 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x562bf754f868 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x562bf754f788 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x562bf754f740 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x562bf754f728 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x562bf754f6e8 <col:20> '_Bool' lvalue Var 0x562bf754cc78 'y$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x562bf754f770 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x562bf754f758 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x562bf754f708 <col:38> '_Bool' lvalue Var 0x562bf754c868 'y$r_buff0_thd3' '_Bool'
|   |     |-ImplicitCastExpr 0x562bf754f820 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x562bf754f7d8 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x562bf754f7a8 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x562bf754f850 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x562bf754f838 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x562bf754f800 <col:66> '_Bool' lvalue Var 0x562bf754cc78 'y$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x562bf754fba8 <line:756:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x562bf754f8d0 <col:3> '_Bool' lvalue Var 0x562bf754cd70 'y$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x562bf754fb90 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x562bf754fb60 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x562bf754fa70 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x562bf754f990 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x562bf754f948 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x562bf754f930 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x562bf754f8f0 <col:20> '_Bool' lvalue Var 0x562bf754cc78 'y$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x562bf754f978 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x562bf754f960 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x562bf754f910 <col:38> '_Bool' lvalue Var 0x562bf754c868 'y$r_buff0_thd3' '_Bool'
|   |     | `-BinaryOperator 0x562bf754fa50 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x562bf754fa08 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x562bf754f9f0 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x562bf754f9b0 <col:56> '_Bool' lvalue Var 0x562bf754cd70 'y$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x562bf754fa38 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x562bf754fa20 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x562bf754f9d0 <col:74> '_Bool' lvalue Var 0x562bf754ca48 'y$r_buff1_thd3' '_Bool'
|   |     |-ImplicitCastExpr 0x562bf754fb08 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x562bf754fac0 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x562bf754fa90 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x562bf754fb48 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x562bf754fb30 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x562bf754fae8 <col:102> '_Bool' lvalue Var 0x562bf754cd70 'y$w_buff1_used' '_Bool'
|   |-BinaryOperator 0x562bf754fdb0 <line:757:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x562bf754fbc8 <col:3> '_Bool' lvalue Var 0x562bf754c868 'y$r_buff0_thd3' '_Bool'
|   | `-ImplicitCastExpr 0x562bf754fd98 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x562bf754fd68 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x562bf754fc88 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x562bf754fc40 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x562bf754fc28 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x562bf754fbe8 <col:20> '_Bool' lvalue Var 0x562bf754cc78 'y$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x562bf754fc70 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x562bf754fc58 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x562bf754fc08 <col:38> '_Bool' lvalue Var 0x562bf754c868 'y$r_buff0_thd3' '_Bool'
|   |     |-ImplicitCastExpr 0x562bf754fd20 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x562bf754fcd8 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x562bf754fca8 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x562bf754fd50 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x562bf754fd38 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x562bf754fd00 <col:66> '_Bool' lvalue Var 0x562bf754c868 'y$r_buff0_thd3' '_Bool'
|   |-BinaryOperator 0x562bf7550098 <line:758:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x562bf754fdd0 <col:3> '_Bool' lvalue Var 0x562bf754ca48 'y$r_buff1_thd3' '_Bool'
|   | `-ImplicitCastExpr 0x562bf7550080 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x562bf7550050 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x562bf754ff70 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x562bf754fe90 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x562bf754fe48 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x562bf754fe30 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x562bf754fdf0 <col:20> '_Bool' lvalue Var 0x562bf754cc78 'y$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x562bf754fe78 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x562bf754fe60 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x562bf754fe10 <col:38> '_Bool' lvalue Var 0x562bf754c868 'y$r_buff0_thd3' '_Bool'
|   |     | `-BinaryOperator 0x562bf754ff50 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x562bf754ff08 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x562bf754fef0 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x562bf754feb0 <col:56> '_Bool' lvalue Var 0x562bf754cd70 'y$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x562bf754ff38 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x562bf754ff20 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x562bf754fed0 <col:74> '_Bool' lvalue Var 0x562bf754ca48 'y$r_buff1_thd3' '_Bool'
|   |     |-ImplicitCastExpr 0x562bf7550008 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x562bf754ffc0 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x562bf754ff90 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x562bf7550038 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x562bf7550020 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x562bf754ffe8 <col:102> '_Bool' lvalue Var 0x562bf754ca48 'y$r_buff1_thd3' '_Bool'
|   |-CallExpr 0x562bf75500f0 <line:759:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x562bf75500d8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x562bf75500b8 <col:3> 'void ()' Function 0x562bf74f2f00 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x562bf7550148 <line:760:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x562bf7550130 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x562bf7550110 <col:3> 'void ()' Function 0x562bf74f2e40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x562bf7550200 <line:761:3, col:41> 'int' '='
|   | |-DeclRefExpr 0x562bf7550168 <col:3> 'int' lvalue Var 0x562bf754c120 '__unbuffered_cnt' 'int'
|   | `-BinaryOperator 0x562bf75501e0 <col:22, col:41> 'int' '+'
|   |   |-ImplicitCastExpr 0x562bf75501c8 <col:22> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x562bf7550188 <col:22> 'int' lvalue Var 0x562bf754c120 '__unbuffered_cnt' 'int'
|   |   `-IntegerLiteral 0x562bf75501a8 <col:41> 'int' 1
|   |-CallExpr 0x562bf7550258 <line:762:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x562bf7550240 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x562bf7550220 <col:3> 'void ()' Function 0x562bf74f2f00 '__VERIFIER_atomic_end' 'void ()'
|   `-ReturnStmt 0x562bf75502d0 <line:763:3, col:36>
|     `-CallExpr 0x562bf75502b0 <col:10, col:36> 'void *'
|       `-ImplicitCastExpr 0x562bf7550298 <col:10> 'void *(*)(void)' <FunctionToPointerDecay>
|         `-DeclRefExpr 0x562bf7550278 <col:10> 'void *(void)' Function 0x562bf74f2958 '__VERIFIER_nondet_pointer' 'void *(void)'
|-FunctionDecl 0x562bf75503e0 prev 0x562bf754be68 <line:765:1, line:767:1> line:765:6 fence 'void ()'
| `-CompoundStmt 0x562bf7550480 <line:766:1, line:767:1>
|-FunctionDecl 0x562bf75504b0 prev 0x562bf754bf28 <line:768:1, line:770:1> line:768:6 isync 'void ()'
| `-CompoundStmt 0x562bf7550550 <line:769:1, line:770:1>
|-FunctionDecl 0x562bf7550580 prev 0x562bf754bfe8 <line:771:1, line:773:1> line:771:6 lwfence 'void ()'
| `-CompoundStmt 0x562bf7550620 <line:772:1, line:773:1>
`-FunctionDecl 0x562bf7550688 <line:774:1, line:811:1> line:774:5 main 'int ()'
  `-CompoundStmt 0x562bf7554c98 <line:775:1, line:811:1>
    |-DeclStmt 0x562bf75507a0 <line:776:3, col:18>
    | `-VarDecl 0x562bf7550738 <col:3, col:13> col:13 used t1494 'pthread_t':'unsigned long'
    |-CallExpr 0x562bf75509a8 <line:777:3, col:54> 'int'
    | |-ImplicitCastExpr 0x562bf7550990 <col:3> 'int (*)(pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x562bf75507b8 <col:3> 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' Function 0x562bf7533488 'pthread_create' 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)'
    | |-UnaryOperator 0x562bf75507f8 <col:18, col:19> 'pthread_t *' prefix '&' cannot overflow
    | | `-DeclRefExpr 0x562bf75507d8 <col:19> 'pthread_t':'unsigned long' lvalue Var 0x562bf7550738 't1494' 'pthread_t':'unsigned long'
    | |-ImplicitCastExpr 0x562bf75509e8 <col:26, col:36> 'const pthread_attr_t *' <NullToPointer>
    | | `-ParenExpr 0x562bf7550870 <col:26, col:36> 'void *'
    | |   `-CStyleCastExpr 0x562bf7550848 <col:27, col:35> 'void *' <NullToPointer>
    | |     `-IntegerLiteral 0x562bf7550810 <col:35> 'int' 0
    | |-ImplicitCastExpr 0x562bf7550a00 <col:39> 'void *(*)(void *)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x562bf7550890 <col:39> 'void *(void *)' Function 0x562bf754d098 'P0' 'void *(void *)'
    | `-ParenExpr 0x562bf7550910 <col:43, col:53> 'void *'
    |   `-CStyleCastExpr 0x562bf75508e8 <col:44, col:52> 'void *' <NullToPointer>
    |     `-IntegerLiteral 0x562bf75508b0 <col:52> 'int' 0
    |-DeclStmt 0x562bf7550a90 <line:778:3, col:18>
    | `-VarDecl 0x562bf7550a28 <col:3, col:13> col:13 used t1495 'pthread_t':'unsigned long'
    |-CallExpr 0x562bf7550c58 <line:779:3, col:54> 'int'
    | |-ImplicitCastExpr 0x562bf7550c40 <col:3> 'int (*)(pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x562bf7550aa8 <col:3> 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' Function 0x562bf7533488 'pthread_create' 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)'
    | |-UnaryOperator 0x562bf7550ae8 <col:18, col:19> 'pthread_t *' prefix '&' cannot overflow
    | | `-DeclRefExpr 0x562bf7550ac8 <col:19> 'pthread_t':'unsigned long' lvalue Var 0x562bf7550a28 't1495' 'pthread_t':'unsigned long'
    | |-ImplicitCastExpr 0x562bf7550c98 <col:26, col:36> 'const pthread_attr_t *' <NullToPointer>
    | | `-ParenExpr 0x562bf7550b80 <col:26, col:36> 'void *'
    | |   `-CStyleCastExpr 0x562bf7550b58 <col:27, col:35> 'void *' <NullToPointer>
    | |     `-IntegerLiteral 0x562bf7550b00 <col:35> 'int' 0
    | |-ImplicitCastExpr 0x562bf7550cb0 <col:39> 'void *(*)(void *)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x562bf7550ba0 <col:39> 'void *(void *)' Function 0x562bf754d768 'P1' 'void *(void *)'
    | `-ParenExpr 0x562bf7550c20 <col:43, col:53> 'void *'
    |   `-CStyleCastExpr 0x562bf7550bf8 <col:44, col:52> 'void *' <NullToPointer>
    |     `-IntegerLiteral 0x562bf7550bc0 <col:52> 'int' 0
    |-DeclStmt 0x562bf7550d40 <line:780:3, col:18>
    | `-VarDecl 0x562bf7550cd8 <col:3, col:13> col:13 used t1496 'pthread_t':'unsigned long'
    |-CallExpr 0x562bf7550ee8 <line:781:3, col:54> 'int'
    | |-ImplicitCastExpr 0x562bf7550ed0 <col:3> 'int (*)(pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x562bf7550d58 <col:3> 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' Function 0x562bf7533488 'pthread_create' 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)'
    | |-UnaryOperator 0x562bf7550d98 <col:18, col:19> 'pthread_t *' prefix '&' cannot overflow
    | | `-DeclRefExpr 0x562bf7550d78 <col:19> 'pthread_t':'unsigned long' lvalue Var 0x562bf7550cd8 't1496' 'pthread_t':'unsigned long'
    | |-ImplicitCastExpr 0x562bf7550f28 <col:26, col:36> 'const pthread_attr_t *' <NullToPointer>
    | | `-ParenExpr 0x562bf7550e10 <col:26, col:36> 'void *'
    | |   `-CStyleCastExpr 0x562bf7550de8 <col:27, col:35> 'void *' <NullToPointer>
    | |     `-IntegerLiteral 0x562bf7550db0 <col:35> 'int' 0
    | |-ImplicitCastExpr 0x562bf7550f40 <col:39> 'void *(*)(void *)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x562bf7550e30 <col:39> 'void *(void *)' Function 0x562bf754eb20 'P2' 'void *(void *)'
    | `-ParenExpr 0x562bf7550eb0 <col:43, col:53> 'void *'
    |   `-CStyleCastExpr 0x562bf7550e88 <col:44, col:52> 'void *' <NullToPointer>
    |     `-IntegerLiteral 0x562bf7550e50 <col:52> 'int' 0
    |-CallExpr 0x562bf7550f90 <line:782:3, col:27> 'void'
    | `-ImplicitCastExpr 0x562bf7550f78 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x562bf7550f58 <col:3> 'void ()' Function 0x562bf74f2e40 '__VERIFIER_atomic_begin' 'void ()'
    |-BinaryOperator 0x562bf7551060 <line:783:3, col:41> '_Bool' '='
    | |-DeclRefExpr 0x562bf7550fb0 <col:3> '_Bool' lvalue Var 0x562bf754c2d8 'main$tmp_guard0' '_Bool'
    | `-ImplicitCastExpr 0x562bf7551048 <col:21, col:41> '_Bool' <IntegralToBoolean>
    |   `-BinaryOperator 0x562bf7551028 <col:21, col:41> 'int' '=='
    |     |-ImplicitCastExpr 0x562bf7551010 <col:21> 'int' <LValueToRValue>
    |     | `-DeclRefExpr 0x562bf7550fd0 <col:21> 'int' lvalue Var 0x562bf754c120 '__unbuffered_cnt' 'int'
    |     `-IntegerLiteral 0x562bf7550ff0 <col:41> 'int' 3
    |-CallExpr 0x562bf75510b8 <line:784:3, col:25> 'void'
    | `-ImplicitCastExpr 0x562bf75510a0 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x562bf7551080 <col:3> 'void ()' Function 0x562bf74f2f00 '__VERIFIER_atomic_end' 'void ()'
    |-CallExpr 0x562bf7551130 <line:785:3, col:36> 'void'
    | |-ImplicitCastExpr 0x562bf7551118 <col:3> 'void (*)(int)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x562bf75510d8 <col:3> 'void (int)' Function 0x562bf74f2790 '__VERIFIER_assume' 'void (int)'
    | `-ImplicitCastExpr 0x562bf7551170 <col:21> 'int' <IntegralCast>
    |   `-ImplicitCastExpr 0x562bf7551158 <col:21> '_Bool' <LValueToRValue>
    |     `-DeclRefExpr 0x562bf75510f8 <col:21> '_Bool' lvalue Var 0x562bf754c2d8 'main$tmp_guard0' '_Bool'
    |-CallExpr 0x562bf75511c0 <line:786:3, col:27> 'void'
    | `-ImplicitCastExpr 0x562bf75511a8 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x562bf7551188 <col:3> 'void ()' Function 0x562bf74f2e40 '__VERIFIER_atomic_begin' 'void ()'
    |-BinaryOperator 0x562bf75514a8 <line:787:3, col:103> 'int' '='
    | |-DeclRefExpr 0x562bf75511e0 <col:3> 'int' lvalue Var 0x562bf754c570 'y' 'int'
    | `-ConditionalOperator 0x562bf7551478 <col:7, col:103> 'int'
    |   |-BinaryOperator 0x562bf75512a0 <col:7, col:25> 'int' '&&'
    |   | |-ImplicitCastExpr 0x562bf7551258 <col:7> 'int' <IntegralCast>
    |   | | `-ImplicitCastExpr 0x562bf7551240 <col:7> '_Bool' <LValueToRValue>
    |   | |   `-DeclRefExpr 0x562bf7551200 <col:7> '_Bool' lvalue Var 0x562bf754cc78 'y$w_buff0_used' '_Bool'
    |   | `-ImplicitCastExpr 0x562bf7551288 <col:25> 'int' <IntegralCast>
    |   |   `-ImplicitCastExpr 0x562bf7551270 <col:25> '_Bool' <LValueToRValue>
    |   |     `-DeclRefExpr 0x562bf7551220 <col:25> '_Bool' lvalue Var 0x562bf754c700 'y$r_buff0_thd0' '_Bool'
    |   |-ImplicitCastExpr 0x562bf7551460 <col:42> 'int' <LValueToRValue>
    |   | `-DeclRefExpr 0x562bf75512c0 <col:42> 'int' lvalue Var 0x562bf754cc00 'y$w_buff0' 'int'
    |   `-ParenExpr 0x562bf7551440 <col:54, col:103> 'int'
    |     `-ConditionalOperator 0x562bf7551410 <col:55, col:102> 'int'
    |       |-BinaryOperator 0x562bf7551380 <col:55, col:73> 'int' '&&'
    |       | |-ImplicitCastExpr 0x562bf7551338 <col:55> 'int' <IntegralCast>
    |       | | `-ImplicitCastExpr 0x562bf7551320 <col:55> '_Bool' <LValueToRValue>
    |       | |   `-DeclRefExpr 0x562bf75512e0 <col:55> '_Bool' lvalue Var 0x562bf754cd70 'y$w_buff1_used' '_Bool'
    |       | `-ImplicitCastExpr 0x562bf7551368 <col:73> 'int' <IntegralCast>
    |       |   `-ImplicitCastExpr 0x562bf7551350 <col:73> '_Bool' <LValueToRValue>
    |       |     `-DeclRefExpr 0x562bf7551300 <col:73> '_Bool' lvalue Var 0x562bf754c8e0 'y$r_buff1_thd0' '_Bool'
    |       |-ImplicitCastExpr 0x562bf75513e0 <col:90> 'int' <LValueToRValue>
    |       | `-DeclRefExpr 0x562bf75513a0 <col:90> 'int' lvalue Var 0x562bf754ccf8 'y$w_buff1' 'int'
    |       `-ImplicitCastExpr 0x562bf75513f8 <col:102> 'int' <LValueToRValue>
    |         `-DeclRefExpr 0x562bf75513c0 <col:102> 'int' lvalue Var 0x562bf754c570 'y' 'int'
    |-BinaryOperator 0x562bf75516b0 <line:788:3, col:66> '_Bool' '='
    | |-DeclRefExpr 0x562bf75514c8 <col:3> '_Bool' lvalue Var 0x562bf754cc78 'y$w_buff0_used' '_Bool'
    | `-ImplicitCastExpr 0x562bf7551698 <col:20, col:66> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x562bf7551668 <col:20, col:66> 'int'
    |     |-BinaryOperator 0x562bf7551588 <col:20, col:38> 'int' '&&'
    |     | |-ImplicitCastExpr 0x562bf7551540 <col:20> 'int' <IntegralCast>
    |     | | `-ImplicitCastExpr 0x562bf7551528 <col:20> '_Bool' <LValueToRValue>
    |     | |   `-DeclRefExpr 0x562bf75514e8 <col:20> '_Bool' lvalue Var 0x562bf754cc78 'y$w_buff0_used' '_Bool'
    |     | `-ImplicitCastExpr 0x562bf7551570 <col:38> 'int' <IntegralCast>
    |     |   `-ImplicitCastExpr 0x562bf7551558 <col:38> '_Bool' <LValueToRValue>
    |     |     `-DeclRefExpr 0x562bf7551508 <col:38> '_Bool' lvalue Var 0x562bf754c700 'y$r_buff0_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x562bf7551620 <col:55, col:62> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x562bf75515d8 <col:55, col:62> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x562bf75515a8 <col:62> 'int' 0
    |     `-ImplicitCastExpr 0x562bf7551650 <col:66> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x562bf7551638 <col:66> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x562bf7551600 <col:66> '_Bool' lvalue Var 0x562bf754cc78 'y$w_buff0_used' '_Bool'
    |-BinaryOperator 0x562bf7551998 <line:789:3, col:102> '_Bool' '='
    | |-DeclRefExpr 0x562bf75516d0 <col:3> '_Bool' lvalue Var 0x562bf754cd70 'y$w_buff1_used' '_Bool'
    | `-ImplicitCastExpr 0x562bf7551980 <col:20, col:102> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x562bf7551950 <col:20, col:102> 'int'
    |     |-BinaryOperator 0x562bf7551870 <col:20, col:74> 'int' '||'
    |     | |-BinaryOperator 0x562bf7551790 <col:20, col:38> 'int' '&&'
    |     | | |-ImplicitCastExpr 0x562bf7551748 <col:20> 'int' <IntegralCast>
    |     | | | `-ImplicitCastExpr 0x562bf7551730 <col:20> '_Bool' <LValueToRValue>
    |     | | |   `-DeclRefExpr 0x562bf75516f0 <col:20> '_Bool' lvalue Var 0x562bf754cc78 'y$w_buff0_used' '_Bool'
    |     | | `-ImplicitCastExpr 0x562bf7551778 <col:38> 'int' <IntegralCast>
    |     | |   `-ImplicitCastExpr 0x562bf7551760 <col:38> '_Bool' <LValueToRValue>
    |     | |     `-DeclRefExpr 0x562bf7551710 <col:38> '_Bool' lvalue Var 0x562bf754c700 'y$r_buff0_thd0' '_Bool'
    |     | `-BinaryOperator 0x562bf7551850 <col:56, col:74> 'int' '&&'
    |     |   |-ImplicitCastExpr 0x562bf7551808 <col:56> 'int' <IntegralCast>
    |     |   | `-ImplicitCastExpr 0x562bf75517f0 <col:56> '_Bool' <LValueToRValue>
    |     |   |   `-DeclRefExpr 0x562bf75517b0 <col:56> '_Bool' lvalue Var 0x562bf754cd70 'y$w_buff1_used' '_Bool'
    |     |   `-ImplicitCastExpr 0x562bf7551838 <col:74> 'int' <IntegralCast>
    |     |     `-ImplicitCastExpr 0x562bf7551820 <col:74> '_Bool' <LValueToRValue>
    |     |       `-DeclRefExpr 0x562bf75517d0 <col:74> '_Bool' lvalue Var 0x562bf754c8e0 'y$r_buff1_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x562bf7551908 <col:91, col:98> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x562bf75518c0 <col:91, col:98> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x562bf7551890 <col:98> 'int' 0
    |     `-ImplicitCastExpr 0x562bf7551938 <col:102> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x562bf7551920 <col:102> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x562bf75518e8 <col:102> '_Bool' lvalue Var 0x562bf754cd70 'y$w_buff1_used' '_Bool'
    |-BinaryOperator 0x562bf7551bb0 <line:790:3, col:66> '_Bool' '='
    | |-DeclRefExpr 0x562bf75519b8 <col:3> '_Bool' lvalue Var 0x562bf754c700 'y$r_buff0_thd0' '_Bool'
    | `-ImplicitCastExpr 0x562bf7551b98 <col:20, col:66> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x562bf7551b68 <col:20, col:66> 'int'
    |     |-BinaryOperator 0x562bf7551a78 <col:20, col:38> 'int' '&&'
    |     | |-ImplicitCastExpr 0x562bf7551a30 <col:20> 'int' <IntegralCast>
    |     | | `-ImplicitCastExpr 0x562bf7551a18 <col:20> '_Bool' <LValueToRValue>
    |     | |   `-DeclRefExpr 0x562bf75519d8 <col:20> '_Bool' lvalue Var 0x562bf754cc78 'y$w_buff0_used' '_Bool'
    |     | `-ImplicitCastExpr 0x562bf7551a60 <col:38> 'int' <IntegralCast>
    |     |   `-ImplicitCastExpr 0x562bf7551a48 <col:38> '_Bool' <LValueToRValue>
    |     |     `-DeclRefExpr 0x562bf75519f8 <col:38> '_Bool' lvalue Var 0x562bf754c700 'y$r_buff0_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x562bf7551b10 <col:55, col:62> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x562bf7551ac8 <col:55, col:62> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x562bf7551a98 <col:62> 'int' 0
    |     `-ImplicitCastExpr 0x562bf7551b50 <col:66> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x562bf7551b28 <col:66> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x562bf7551af0 <col:66> '_Bool' lvalue Var 0x562bf754c700 'y$r_buff0_thd0' '_Bool'
    |-BinaryOperator 0x562bf7551e98 <line:791:3, col:102> '_Bool' '='
    | |-DeclRefExpr 0x562bf7551bd0 <col:3> '_Bool' lvalue Var 0x562bf754c8e0 'y$r_buff1_thd0' '_Bool'
    | `-ImplicitCastExpr 0x562bf7551e80 <col:20, col:102> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x562bf7551e50 <col:20, col:102> 'int'
    |     |-BinaryOperator 0x562bf7551d70 <col:20, col:74> 'int' '||'
    |     | |-BinaryOperator 0x562bf7551c90 <col:20, col:38> 'int' '&&'
    |     | | |-ImplicitCastExpr 0x562bf7551c48 <col:20> 'int' <IntegralCast>
    |     | | | `-ImplicitCastExpr 0x562bf7551c30 <col:20> '_Bool' <LValueToRValue>
    |     | | |   `-DeclRefExpr 0x562bf7551bf0 <col:20> '_Bool' lvalue Var 0x562bf754cc78 'y$w_buff0_used' '_Bool'
    |     | | `-ImplicitCastExpr 0x562bf7551c78 <col:38> 'int' <IntegralCast>
    |     | |   `-ImplicitCastExpr 0x562bf7551c60 <col:38> '_Bool' <LValueToRValue>
    |     | |     `-DeclRefExpr 0x562bf7551c10 <col:38> '_Bool' lvalue Var 0x562bf754c700 'y$r_buff0_thd0' '_Bool'
    |     | `-BinaryOperator 0x562bf7551d50 <col:56, col:74> 'int' '&&'
    |     |   |-ImplicitCastExpr 0x562bf7551d08 <col:56> 'int' <IntegralCast>
    |     |   | `-ImplicitCastExpr 0x562bf7551cf0 <col:56> '_Bool' <LValueToRValue>
    |     |   |   `-DeclRefExpr 0x562bf7551cb0 <col:56> '_Bool' lvalue Var 0x562bf754cd70 'y$w_buff1_used' '_Bool'
    |     |   `-ImplicitCastExpr 0x562bf7551d38 <col:74> 'int' <IntegralCast>
    |     |     `-ImplicitCastExpr 0x562bf7551d20 <col:74> '_Bool' <LValueToRValue>
    |     |       `-DeclRefExpr 0x562bf7551cd0 <col:74> '_Bool' lvalue Var 0x562bf754c8e0 'y$r_buff1_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x562bf7551e08 <col:91, col:98> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x562bf7551dc0 <col:91, col:98> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x562bf7551d90 <col:98> 'int' 0
    |     `-ImplicitCastExpr 0x562bf7551e38 <col:102> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x562bf7551e20 <col:102> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x562bf7551de8 <col:102> '_Bool' lvalue Var 0x562bf754c8e0 'y$r_buff1_thd0' '_Bool'
    |-CallExpr 0x562bf7551ef0 <line:792:3, col:25> 'void'
    | `-ImplicitCastExpr 0x562bf7551ed8 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x562bf7551eb8 <col:3> 'void ()' Function 0x562bf74f2f00 '__VERIFIER_atomic_end' 'void ()'
    |-CallExpr 0x562bf7551f48 <line:793:3, col:27> 'void'
    | `-ImplicitCastExpr 0x562bf7551f30 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x562bf7551f10 <col:3> 'void ()' Function 0x562bf74f2e40 '__VERIFIER_atomic_begin' 'void ()'
    |-BinaryOperator 0x562bf7551ff8 <line:794:3, col:45> '_Bool' '='
    | |-DeclRefExpr 0x562bf7551f68 <col:3> '_Bool' lvalue Var 0x562bf754cf08 'weak$$choice0' '_Bool'
    | `-ImplicitCastExpr 0x562bf7551fe0 <col:19, col:45> '_Bool' <PointerToBoolean>
    |   `-CallExpr 0x562bf7551fc0 <col:19, col:45> 'void *'
    |     `-ImplicitCastExpr 0x562bf7551fa8 <col:19> 'void *(*)(void)' <FunctionToPointerDecay>
    |       `-DeclRefExpr 0x562bf7551f88 <col:19> 'void *(void)' Function 0x562bf74f2958 '__VERIFIER_nondet_pointer' 'void *(void)'
    |-BinaryOperator 0x562bf75520a8 <line:795:3, col:45> '_Bool' '='
    | |-DeclRefExpr 0x562bf7552018 <col:3> '_Bool' lvalue Var 0x562bf754cf80 'weak$$choice2' '_Bool'
    | `-ImplicitCastExpr 0x562bf7552090 <col:19, col:45> '_Bool' <PointerToBoolean>
    |   `-CallExpr 0x562bf7552070 <col:19, col:45> 'void *'
    |     `-ImplicitCastExpr 0x562bf7552058 <col:19> 'void *(*)(void)' <FunctionToPointerDecay>
    |       `-DeclRefExpr 0x562bf7552038 <col:19> 'void *(void)' Function 0x562bf74f2958 '__VERIFIER_nondet_pointer' 'void *(void)'
    |-BinaryOperator 0x562bf7552120 <line:796:3, col:21> '_Bool' '='
    | |-DeclRefExpr 0x562bf75520c8 <col:3> '_Bool' lvalue Var 0x562bf754c608 'y$flush_delayed' '_Bool'
    | `-ImplicitCastExpr 0x562bf7552108 <col:21> '_Bool' <LValueToRValue>
    |   `-DeclRefExpr 0x562bf75520e8 <col:21> '_Bool' lvalue Var 0x562bf754cf80 'weak$$choice2' '_Bool'
    |-BinaryOperator 0x562bf7552198 <line:797:3, col:15> 'int' '='
    | |-DeclRefExpr 0x562bf7552140 <col:3> 'int' lvalue Var 0x562bf754c688 'y$mem_tmp' 'int'
    | `-ImplicitCastExpr 0x562bf7552180 <col:15> 'int' <LValueToRValue>
    |   `-DeclRefExpr 0x562bf7552160 <col:15> 'int' lvalue Var 0x562bf754c570 'y' 'int'
    |-BinaryOperator 0x562bf75525d0 <line:798:3, col:162> 'int' '='
    | |-DeclRefExpr 0x562bf75521b8 <col:3> 'int' lvalue Var 0x562bf754c570 'y' 'int'
    | `-ConditionalOperator 0x562bf75525a0 <col:7, col:162> 'int'
    |   |-BinaryOperator 0x562bf75523c8 <col:7, col:84> 'int' '||'
    |   | |-BinaryOperator 0x562bf75522e8 <col:7, col:46> 'int' '||'
    |   | | |-UnaryOperator 0x562bf7552210 <col:7, col:8> 'int' prefix '!' cannot overflow
    |   | | | `-ImplicitCastExpr 0x562bf75521f8 <col:8> '_Bool' <LValueToRValue>
    |   | | |   `-DeclRefExpr 0x562bf75521d8 <col:8> '_Bool' lvalue Var 0x562bf754cc78 'y$w_buff0_used' '_Bool'
    |   | | `-BinaryOperator 0x562bf75522c8 <col:26, col:46> 'int' '&&'
    |   | |   |-UnaryOperator 0x562bf7552260 <col:26, col:27> 'int' prefix '!' cannot overflow
    |   | |   | `-ImplicitCastExpr 0x562bf7552248 <col:27> '_Bool' <LValueToRValue>
    |   | |   |   `-DeclRefExpr 0x562bf7552228 <col:27> '_Bool' lvalue Var 0x562bf754c700 'y$r_buff0_thd0' '_Bool'
    |   | |   `-UnaryOperator 0x562bf75522b0 <col:45, col:46> 'int' prefix '!' cannot overflow
    |   | |     `-ImplicitCastExpr 0x562bf7552298 <col:46> '_Bool' <LValueToRValue>
    |   | |       `-DeclRefExpr 0x562bf7552278 <col:46> '_Bool' lvalue Var 0x562bf754cd70 'y$w_buff1_used' '_Bool'
    |   | `-BinaryOperator 0x562bf75523a8 <col:64, col:84> 'int' '&&'
    |   |   |-UnaryOperator 0x562bf7552340 <col:64, col:65> 'int' prefix '!' cannot overflow
    |   |   | `-ImplicitCastExpr 0x562bf7552328 <col:65> '_Bool' <LValueToRValue>
    |   |   |   `-DeclRefExpr 0x562bf7552308 <col:65> '_Bool' lvalue Var 0x562bf754c700 'y$r_buff0_thd0' '_Bool'
    |   |   `-UnaryOperator 0x562bf7552390 <col:83, col:84> 'int' prefix '!' cannot overflow
    |   |     `-ImplicitCastExpr 0x562bf7552378 <col:84> '_Bool' <LValueToRValue>
    |   |       `-DeclRefExpr 0x562bf7552358 <col:84> '_Bool' lvalue Var 0x562bf754c8e0 'y$r_buff1_thd0' '_Bool'
    |   |-ImplicitCastExpr 0x562bf7552588 <col:101> 'int' <LValueToRValue>
    |   | `-DeclRefExpr 0x562bf75523e8 <col:101> 'int' lvalue Var 0x562bf754c570 'y' 'int'
    |   `-ParenExpr 0x562bf7552568 <col:105, col:162> 'int'
    |     `-ConditionalOperator 0x562bf7552538 <col:106, col:153> 'int'
    |       |-BinaryOperator 0x562bf75524a8 <col:106, col:124> 'int' '&&'
    |       | |-ImplicitCastExpr 0x562bf7552460 <col:106> 'int' <IntegralCast>
    |       | | `-ImplicitCastExpr 0x562bf7552448 <col:106> '_Bool' <LValueToRValue>
    |       | |   `-DeclRefExpr 0x562bf7552408 <col:106> '_Bool' lvalue Var 0x562bf754cc78 'y$w_buff0_used' '_Bool'
    |       | `-ImplicitCastExpr 0x562bf7552490 <col:124> 'int' <IntegralCast>
    |       |   `-ImplicitCastExpr 0x562bf7552478 <col:124> '_Bool' <LValueToRValue>
    |       |     `-DeclRefExpr 0x562bf7552428 <col:124> '_Bool' lvalue Var 0x562bf754c700 'y$r_buff0_thd0' '_Bool'
    |       |-ImplicitCastExpr 0x562bf7552508 <col:141> 'int' <LValueToRValue>
    |       | `-DeclRefExpr 0x562bf75524c8 <col:141> 'int' lvalue Var 0x562bf754cc00 'y$w_buff0' 'int'
    |       `-ImplicitCastExpr 0x562bf7552520 <col:153> 'int' <LValueToRValue>
    |         `-DeclRefExpr 0x562bf75524e8 <col:153> 'int' lvalue Var 0x562bf754ccf8 'y$w_buff1' 'int'
    |-BinaryOperator 0x562bf7552ae0 <line:799:3, col:208> 'int' '='
    | |-DeclRefExpr 0x562bf75525f0 <col:3> 'int' lvalue Var 0x562bf754cc00 'y$w_buff0' 'int'
    | `-ConditionalOperator 0x562bf7552ab0 <col:15, col:208> 'int'
    |   |-ImplicitCastExpr 0x562bf7552a80 <col:15> 'int' <IntegralCast>
    |   | `-ImplicitCastExpr 0x562bf7552a68 <col:15> '_Bool' <LValueToRValue>
    |   |   `-DeclRefExpr 0x562bf7552610 <col:15> '_Bool' lvalue Var 0x562bf754cf80 'weak$$choice2' '_Bool'
    |   |-ImplicitCastExpr 0x562bf7552a98 <col:31> 'int' <LValueToRValue>
    |   | `-DeclRefExpr 0x562bf7552630 <col:31> 'int' lvalue Var 0x562bf754cc00 'y$w_buff0' 'int'
    |   `-ParenExpr 0x562bf7552a48 <col:43, col:208> 'int'
    |     `-ConditionalOperator 0x562bf7552a18 <col:44, col:207> 'int'
    |       |-BinaryOperator 0x562bf7552840 <col:44, col:121> 'int' '||'
    |       | |-BinaryOperator 0x562bf7552760 <col:44, col:83> 'int' '||'
    |       | | |-UnaryOperator 0x562bf7552688 <col:44, col:45> 'int' prefix '!' cannot overflow
    |       | | | `-ImplicitCastExpr 0x562bf7552670 <col:45> '_Bool' <LValueToRValue>
    |       | | |   `-DeclRefExpr 0x562bf7552650 <col:45> '_Bool' lvalue Var 0x562bf754cc78 'y$w_buff0_used' '_Bool'
    |       | | `-BinaryOperator 0x562bf7552740 <col:63, col:83> 'int' '&&'
    |       | |   |-UnaryOperator 0x562bf75526d8 <col:63, col:64> 'int' prefix '!' cannot overflow
    |       | |   | `-ImplicitCastExpr 0x562bf75526c0 <col:64> '_Bool' <LValueToRValue>
    |       | |   |   `-DeclRefExpr 0x562bf75526a0 <col:64> '_Bool' lvalue Var 0x562bf754c700 'y$r_buff0_thd0' '_Bool'
    |       | |   `-UnaryOperator 0x562bf7552728 <col:82, col:83> 'int' prefix '!' cannot overflow
    |       | |     `-ImplicitCastExpr 0x562bf7552710 <col:83> '_Bool' <LValueToRValue>
    |       | |       `-DeclRefExpr 0x562bf75526f0 <col:83> '_Bool' lvalue Var 0x562bf754cd70 'y$w_buff1_used' '_Bool'
    |       | `-BinaryOperator 0x562bf7552820 <col:101, col:121> 'int' '&&'
    |       |   |-UnaryOperator 0x562bf75527b8 <col:101, col:102> 'int' prefix '!' cannot overflow
    |       |   | `-ImplicitCastExpr 0x562bf75527a0 <col:102> '_Bool' <LValueToRValue>
    |       |   |   `-DeclRefExpr 0x562bf7552780 <col:102> '_Bool' lvalue Var 0x562bf754c700 'y$r_buff0_thd0' '_Bool'
    |       |   `-UnaryOperator 0x562bf7552808 <col:120, col:121> 'int' prefix '!' cannot overflow
    |       |     `-ImplicitCastExpr 0x562bf75527f0 <col:121> '_Bool' <LValueToRValue>
    |       |       `-DeclRefExpr 0x562bf75527d0 <col:121> '_Bool' lvalue Var 0x562bf754c8e0 'y$r_buff1_thd0' '_Bool'
    |       |-ImplicitCastExpr 0x562bf7552a00 <col:138> 'int' <LValueToRValue>
    |       | `-DeclRefExpr 0x562bf7552860 <col:138> 'int' lvalue Var 0x562bf754cc00 'y$w_buff0' 'int'
    |       `-ParenExpr 0x562bf75529e0 <col:150, col:207> 'int'
    |         `-ConditionalOperator 0x562bf75529b0 <col:151, col:198> 'int'
    |           |-BinaryOperator 0x562bf7552920 <col:151, col:169> 'int' '&&'
    |           | |-ImplicitCastExpr 0x562bf75528d8 <col:151> 'int' <IntegralCast>
    |           | | `-ImplicitCastExpr 0x562bf75528c0 <col:151> '_Bool' <LValueToRValue>
    |           | |   `-DeclRefExpr 0x562bf7552880 <col:151> '_Bool' lvalue Var 0x562bf754cc78 'y$w_buff0_used' '_Bool'
    |           | `-ImplicitCastExpr 0x562bf7552908 <col:169> 'int' <IntegralCast>
    |           |   `-ImplicitCastExpr 0x562bf75528f0 <col:169> '_Bool' <LValueToRValue>
    |           |     `-DeclRefExpr 0x562bf75528a0 <col:169> '_Bool' lvalue Var 0x562bf754c700 'y$r_buff0_thd0' '_Bool'
    |           |-ImplicitCastExpr 0x562bf7552980 <col:186> 'int' <LValueToRValue>
    |           | `-DeclRefExpr 0x562bf7552940 <col:186> 'int' lvalue Var 0x562bf754cc00 'y$w_buff0' 'int'
    |           `-ImplicitCastExpr 0x562bf7552998 <col:198> 'int' <LValueToRValue>
    |             `-DeclRefExpr 0x562bf7552960 <col:198> 'int' lvalue Var 0x562bf754cc00 'y$w_buff0' 'int'
    |-BinaryOperator 0x562bf7553010 <line:800:3, col:208> 'int' '='
    | |-DeclRefExpr 0x562bf7552b00 <col:3> 'int' lvalue Var 0x562bf754ccf8 'y$w_buff1' 'int'
    | `-ConditionalOperator 0x562bf7552fe0 <col:15, col:208> 'int'
    |   |-ImplicitCastExpr 0x562bf7552fb0 <col:15> 'int' <IntegralCast>
    |   | `-ImplicitCastExpr 0x562bf7552f98 <col:15> '_Bool' <LValueToRValue>
    |   |   `-DeclRefExpr 0x562bf7552b20 <col:15> '_Bool' lvalue Var 0x562bf754cf80 'weak$$choice2' '_Bool'
    |   |-ImplicitCastExpr 0x562bf7552fc8 <col:31> 'int' <LValueToRValue>
    |   | `-DeclRefExpr 0x562bf7552b60 <col:31> 'int' lvalue Var 0x562bf754ccf8 'y$w_buff1' 'int'
    |   `-ParenExpr 0x562bf7552f78 <col:43, col:208> 'int'
    |     `-ConditionalOperator 0x562bf7552f48 <col:44, col:207> 'int'
    |       |-BinaryOperator 0x562bf7552d70 <col:44, col:121> 'int' '||'
    |       | |-BinaryOperator 0x562bf7552c90 <col:44, col:83> 'int' '||'
    |       | | |-UnaryOperator 0x562bf7552bb8 <col:44, col:45> 'int' prefix '!' cannot overflow
    |       | | | `-ImplicitCastExpr 0x562bf7552ba0 <col:45> '_Bool' <LValueToRValue>
    |       | | |   `-DeclRefExpr 0x562bf7552b80 <col:45> '_Bool' lvalue Var 0x562bf754cc78 'y$w_buff0_used' '_Bool'
    |       | | `-BinaryOperator 0x562bf7552c70 <col:63, col:83> 'int' '&&'
    |       | |   |-UnaryOperator 0x562bf7552c08 <col:63, col:64> 'int' prefix '!' cannot overflow
    |       | |   | `-ImplicitCastExpr 0x562bf7552bf0 <col:64> '_Bool' <LValueToRValue>
    |       | |   |   `-DeclRefExpr 0x562bf7552bd0 <col:64> '_Bool' lvalue Var 0x562bf754c700 'y$r_buff0_thd0' '_Bool'
    |       | |   `-UnaryOperator 0x562bf7552c58 <col:82, col:83> 'int' prefix '!' cannot overflow
    |       | |     `-ImplicitCastExpr 0x562bf7552c40 <col:83> '_Bool' <LValueToRValue>
    |       | |       `-DeclRefExpr 0x562bf7552c20 <col:83> '_Bool' lvalue Var 0x562bf754cd70 'y$w_buff1_used' '_Bool'
    |       | `-BinaryOperator 0x562bf7552d50 <col:101, col:121> 'int' '&&'
    |       |   |-UnaryOperator 0x562bf7552ce8 <col:101, col:102> 'int' prefix '!' cannot overflow
    |       |   | `-ImplicitCastExpr 0x562bf7552cd0 <col:102> '_Bool' <LValueToRValue>
    |       |   |   `-DeclRefExpr 0x562bf7552cb0 <col:102> '_Bool' lvalue Var 0x562bf754c700 'y$r_buff0_thd0' '_Bool'
    |       |   `-UnaryOperator 0x562bf7552d38 <col:120, col:121> 'int' prefix '!' cannot overflow
    |       |     `-ImplicitCastExpr 0x562bf7552d20 <col:121> '_Bool' <LValueToRValue>
    |       |       `-DeclRefExpr 0x562bf7552d00 <col:121> '_Bool' lvalue Var 0x562bf754c8e0 'y$r_buff1_thd0' '_Bool'
    |       |-ImplicitCastExpr 0x562bf7552f30 <col:138> 'int' <LValueToRValue>
    |       | `-DeclRefExpr 0x562bf7552d90 <col:138> 'int' lvalue Var 0x562bf754ccf8 'y$w_buff1' 'int'
    |       `-ParenExpr 0x562bf7552f10 <col:150, col:207> 'int'
    |         `-ConditionalOperator 0x562bf7552ee0 <col:151, col:198> 'int'
    |           |-BinaryOperator 0x562bf7552e50 <col:151, col:169> 'int' '&&'
    |           | |-ImplicitCastExpr 0x562bf7552e08 <col:151> 'int' <IntegralCast>
    |           | | `-ImplicitCastExpr 0x562bf7552df0 <col:151> '_Bool' <LValueToRValue>
    |           | |   `-DeclRefExpr 0x562bf7552db0 <col:151> '_Bool' lvalue Var 0x562bf754cc78 'y$w_buff0_used' '_Bool'
    |           | `-ImplicitCastExpr 0x562bf7552e38 <col:169> 'int' <IntegralCast>
    |           |   `-ImplicitCastExpr 0x562bf7552e20 <col:169> '_Bool' <LValueToRValue>
    |           |     `-DeclRefExpr 0x562bf7552dd0 <col:169> '_Bool' lvalue Var 0x562bf754c700 'y$r_buff0_thd0' '_Bool'
    |           |-ImplicitCastExpr 0x562bf7552eb0 <col:186> 'int' <LValueToRValue>
    |           | `-DeclRefExpr 0x562bf7552e70 <col:186> 'int' lvalue Var 0x562bf754ccf8 'y$w_buff1' 'int'
    |           `-ImplicitCastExpr 0x562bf7552ec8 <col:198> 'int' <LValueToRValue>
    |             `-DeclRefExpr 0x562bf7552e90 <col:198> 'int' lvalue Var 0x562bf754ccf8 'y$w_buff1' 'int'
    |-BinaryOperator 0x562bf75535b8 <line:801:3, col:227> '_Bool' '='
    | |-DeclRefExpr 0x562bf7553030 <col:3> '_Bool' lvalue Var 0x562bf754cc78 'y$w_buff0_used' '_Bool'
    | `-ImplicitCastExpr 0x562bf75535a0 <col:20, col:227> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x562bf7553570 <col:20, col:227> 'int'
    |     |-ImplicitCastExpr 0x562bf7553528 <col:20> 'int' <IntegralCast>
    |     | `-ImplicitCastExpr 0x562bf7553510 <col:20> '_Bool' <LValueToRValue>
    |     |   `-DeclRefExpr 0x562bf7553050 <col:20> '_Bool' lvalue Var 0x562bf754cf80 'weak$$choice2' '_Bool'
    |     |-ImplicitCastExpr 0x562bf7553558 <col:36> 'int' <IntegralCast>
    |     | `-ImplicitCastExpr 0x562bf7553540 <col:36> '_Bool' <LValueToRValue>
    |     |   `-DeclRefExpr 0x562bf7553070 <col:36> '_Bool' lvalue Var 0x562bf754cc78 'y$w_buff0_used' '_Bool'
    |     `-ParenExpr 0x562bf75534f0 <col:53, col:227> 'int'
    |       `-ConditionalOperator 0x562bf75534c0 <col:54, col:226> 'int'
    |         |-BinaryOperator 0x562bf7553280 <col:54, col:131> 'int' '||'
    |         | |-BinaryOperator 0x562bf75531a0 <col:54, col:93> 'int' '||'
    |         | | |-UnaryOperator 0x562bf75530c8 <col:54, col:55> 'int' prefix '!' cannot overflow
    |         | | | `-ImplicitCastExpr 0x562bf75530b0 <col:55> '_Bool' <LValueToRValue>
    |         | | |   `-DeclRefExpr 0x562bf7553090 <col:55> '_Bool' lvalue Var 0x562bf754cc78 'y$w_buff0_used' '_Bool'
    |         | | `-BinaryOperator 0x562bf7553180 <col:73, col:93> 'int' '&&'
    |         | |   |-UnaryOperator 0x562bf7553118 <col:73, col:74> 'int' prefix '!' cannot overflow
    |         | |   | `-ImplicitCastExpr 0x562bf7553100 <col:74> '_Bool' <LValueToRValue>
    |         | |   |   `-DeclRefExpr 0x562bf75530e0 <col:74> '_Bool' lvalue Var 0x562bf754c700 'y$r_buff0_thd0' '_Bool'
    |         | |   `-UnaryOperator 0x562bf7553168 <col:92, col:93> 'int' prefix '!' cannot overflow
    |         | |     `-ImplicitCastExpr 0x562bf7553150 <col:93> '_Bool' <LValueToRValue>
    |         | |       `-DeclRefExpr 0x562bf7553130 <col:93> '_Bool' lvalue Var 0x562bf754cd70 'y$w_buff1_used' '_Bool'
    |         | `-BinaryOperator 0x562bf7553260 <col:111, col:131> 'int' '&&'
    |         |   |-UnaryOperator 0x562bf75531f8 <col:111, col:112> 'int' prefix '!' cannot overflow
    |         |   | `-ImplicitCastExpr 0x562bf75531e0 <col:112> '_Bool' <LValueToRValue>
    |         |   |   `-DeclRefExpr 0x562bf75531c0 <col:112> '_Bool' lvalue Var 0x562bf754c700 'y$r_buff0_thd0' '_Bool'
    |         |   `-UnaryOperator 0x562bf7553248 <col:130, col:131> 'int' prefix '!' cannot overflow
    |         |     `-ImplicitCastExpr 0x562bf7553230 <col:131> '_Bool' <LValueToRValue>
    |         |       `-DeclRefExpr 0x562bf7553210 <col:131> '_Bool' lvalue Var 0x562bf754c8e0 'y$r_buff1_thd0' '_Bool'
    |         |-ImplicitCastExpr 0x562bf75534a8 <col:148> 'int' <IntegralCast>
    |         | `-ImplicitCastExpr 0x562bf7553490 <col:148> '_Bool' <LValueToRValue>
    |         |   `-DeclRefExpr 0x562bf75532a0 <col:148> '_Bool' lvalue Var 0x562bf754cc78 'y$w_buff0_used' '_Bool'
    |         `-ParenExpr 0x562bf7553470 <col:165, col:226> 'int'
    |           `-ConditionalOperator 0x562bf7553440 <col:166, col:212> 'int'
    |             |-BinaryOperator 0x562bf7553360 <col:166, col:184> 'int' '&&'
    |             | |-ImplicitCastExpr 0x562bf7553318 <col:166> 'int' <IntegralCast>
    |             | | `-ImplicitCastExpr 0x562bf7553300 <col:166> '_Bool' <LValueToRValue>
    |             | |   `-DeclRefExpr 0x562bf75532c0 <col:166> '_Bool' lvalue Var 0x562bf754cc78 'y$w_buff0_used' '_Bool'
    |             | `-ImplicitCastExpr 0x562bf7553348 <col:184> 'int' <IntegralCast>
    |             |   `-ImplicitCastExpr 0x562bf7553330 <col:184> '_Bool' <LValueToRValue>
    |             |     `-DeclRefExpr 0x562bf75532e0 <col:184> '_Bool' lvalue Var 0x562bf754c700 'y$r_buff0_thd0' '_Bool'
    |             |-ImplicitCastExpr 0x562bf75533f8 <col:201, col:208> 'int' <IntegralCast>
    |             | `-CStyleCastExpr 0x562bf75533b0 <col:201, col:208> '_Bool' <IntegralToBoolean>
    |             |   `-IntegerLiteral 0x562bf7553380 <col:208> 'int' 0
    |             `-ImplicitCastExpr 0x562bf7553428 <col:212> 'int' <IntegralCast>
    |               `-ImplicitCastExpr 0x562bf7553410 <col:212> '_Bool' <LValueToRValue>
    |                 `-DeclRefExpr 0x562bf75533d8 <col:212> '_Bool' lvalue Var 0x562bf754cc78 'y$w_buff0_used' '_Bool'
    |-BinaryOperator 0x562bf7553bb8 <line:802:3, col:221> '_Bool' '='
    | |-DeclRefExpr 0x562bf75535d8 <col:3> '_Bool' lvalue Var 0x562bf754cd70 'y$w_buff1_used' '_Bool'
    | `-ImplicitCastExpr 0x562bf7553ba0 <col:20, col:221> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x562bf7553b70 <col:20, col:221> 'int'
    |     |-ImplicitCastExpr 0x562bf7553af0 <col:20> 'int' <IntegralCast>
    |     | `-ImplicitCastExpr 0x562bf7553ad8 <col:20> '_Bool' <LValueToRValue>
    |     |   `-DeclRefExpr 0x562bf75535f8 <col:20> '_Bool' lvalue Var 0x562bf754cf80 'weak$$choice2' '_Bool'
    |     |-ImplicitCastExpr 0x562bf7553b20 <col:36> 'int' <IntegralCast>
    |     | `-ImplicitCastExpr 0x562bf7553b08 <col:36> '_Bool' <LValueToRValue>
    |     |   `-DeclRefExpr 0x562bf7553618 <col:36> '_Bool' lvalue Var 0x562bf754cd70 'y$w_buff1_used' '_Bool'
    |     `-ParenExpr 0x562bf7553ab8 <col:53, col:221> 'int'
    |       `-ConditionalOperator 0x562bf7553a88 <col:54, col:220> 'int'
    |         |-BinaryOperator 0x562bf7553828 <col:54, col:131> 'int' '||'
    |         | |-BinaryOperator 0x562bf7553748 <col:54, col:93> 'int' '||'
    |         | | |-UnaryOperator 0x562bf7553670 <col:54, col:55> 'int' prefix '!' cannot overflow
    |         | | | `-ImplicitCastExpr 0x562bf7553658 <col:55> '_Bool' <LValueToRValue>
    |         | | |   `-DeclRefExpr 0x562bf7553638 <col:55> '_Bool' lvalue Var 0x562bf754cc78 'y$w_buff0_used' '_Bool'
    |         | | `-BinaryOperator 0x562bf7553728 <col:73, col:93> 'int' '&&'
    |         | |   |-UnaryOperator 0x562bf75536c0 <col:73, col:74> 'int' prefix '!' cannot overflow
    |         | |   | `-ImplicitCastExpr 0x562bf75536a8 <col:74> '_Bool' <LValueToRValue>
    |         | |   |   `-DeclRefExpr 0x562bf7553688 <col:74> '_Bool' lvalue Var 0x562bf754c700 'y$r_buff0_thd0' '_Bool'
    |         | |   `-UnaryOperator 0x562bf7553710 <col:92, col:93> 'int' prefix '!' cannot overflow
    |         | |     `-ImplicitCastExpr 0x562bf75536f8 <col:93> '_Bool' <LValueToRValue>
    |         | |       `-DeclRefExpr 0x562bf75536d8 <col:93> '_Bool' lvalue Var 0x562bf754cd70 'y$w_buff1_used' '_Bool'
    |         | `-BinaryOperator 0x562bf7553808 <col:111, col:131> 'int' '&&'
    |         |   |-UnaryOperator 0x562bf75537a0 <col:111, col:112> 'int' prefix '!' cannot overflow
    |         |   | `-ImplicitCastExpr 0x562bf7553788 <col:112> '_Bool' <LValueToRValue>
    |         |   |   `-DeclRefExpr 0x562bf7553768 <col:112> '_Bool' lvalue Var 0x562bf754c700 'y$r_buff0_thd0' '_Bool'
    |         |   `-UnaryOperator 0x562bf75537f0 <col:130, col:131> 'int' prefix '!' cannot overflow
    |         |     `-ImplicitCastExpr 0x562bf75537d8 <col:131> '_Bool' <LValueToRValue>
    |         |       `-DeclRefExpr 0x562bf75537b8 <col:131> '_Bool' lvalue Var 0x562bf754c8e0 'y$r_buff1_thd0' '_Bool'
    |         |-ImplicitCastExpr 0x562bf7553a70 <col:148> 'int' <IntegralCast>
    |         | `-ImplicitCastExpr 0x562bf7553a58 <col:148> '_Bool' <LValueToRValue>
    |         |   `-DeclRefExpr 0x562bf7553848 <col:148> '_Bool' lvalue Var 0x562bf754cd70 'y$w_buff1_used' '_Bool'
    |         `-ParenExpr 0x562bf7553a38 <col:165, col:220> 'int'
    |           `-ConditionalOperator 0x562bf7553a08 <col:166, col:219> 'int'
    |             |-BinaryOperator 0x562bf7553908 <col:166, col:184> 'int' '&&'
    |             | |-ImplicitCastExpr 0x562bf75538c0 <col:166> 'int' <IntegralCast>
    |             | | `-ImplicitCastExpr 0x562bf75538a8 <col:166> '_Bool' <LValueToRValue>
    |             | |   `-DeclRefExpr 0x562bf7553868 <col:166> '_Bool' lvalue Var 0x562bf754cc78 'y$w_buff0_used' '_Bool'
    |             | `-ImplicitCastExpr 0x562bf75538f0 <col:184> 'int' <IntegralCast>
    |             |   `-ImplicitCastExpr 0x562bf75538d8 <col:184> '_Bool' <LValueToRValue>
    |             |     `-DeclRefExpr 0x562bf7553888 <col:184> '_Bool' lvalue Var 0x562bf754c700 'y$r_buff0_thd0' '_Bool'
    |             |-ImplicitCastExpr 0x562bf75539d8 <col:201, col:208> 'int' <IntegralCast>
    |             | `-CStyleCastExpr 0x562bf7553958 <col:201, col:208> '_Bool' <IntegralToBoolean>
    |             |   `-IntegerLiteral 0x562bf7553928 <col:208> 'int' 0
    |             `-ImplicitCastExpr 0x562bf75539f0 <col:212, col:219> 'int' <IntegralCast>
    |               `-CStyleCastExpr 0x562bf75539b0 <col:212, col:219> '_Bool' <IntegralToBoolean>
    |                 `-IntegerLiteral 0x562bf7553980 <col:219> 'int' 0
    |-BinaryOperator 0x562bf7554160 <line:803:3, col:227> '_Bool' '='
    | |-DeclRefExpr 0x562bf7553bd8 <col:3> '_Bool' lvalue Var 0x562bf754c700 'y$r_buff0_thd0' '_Bool'
    | `-ImplicitCastExpr 0x562bf7554148 <col:20, col:227> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x562bf7554118 <col:20, col:227> 'int'
    |     |-ImplicitCastExpr 0x562bf75540d0 <col:20> 'int' <IntegralCast>
    |     | `-ImplicitCastExpr 0x562bf75540b8 <col:20> '_Bool' <LValueToRValue>
    |     |   `-DeclRefExpr 0x562bf7553bf8 <col:20> '_Bool' lvalue Var 0x562bf754cf80 'weak$$choice2' '_Bool'
    |     |-ImplicitCastExpr 0x562bf7554100 <col:36> 'int' <IntegralCast>
    |     | `-ImplicitCastExpr 0x562bf75540e8 <col:36> '_Bool' <LValueToRValue>
    |     |   `-DeclRefExpr 0x562bf7553c18 <col:36> '_Bool' lvalue Var 0x562bf754c700 'y$r_buff0_thd0' '_Bool'
    |     `-ParenExpr 0x562bf7554098 <col:53, col:227> 'int'
    |       `-ConditionalOperator 0x562bf7554068 <col:54, col:226> 'int'
    |         |-BinaryOperator 0x562bf7553e28 <col:54, col:131> 'int' '||'
    |         | |-BinaryOperator 0x562bf7553d48 <col:54, col:93> 'int' '||'
    |         | | |-UnaryOperator 0x562bf7553c70 <col:54, col:55> 'int' prefix '!' cannot overflow
    |         | | | `-ImplicitCastExpr 0x562bf7553c58 <col:55> '_Bool' <LValueToRValue>
    |         | | |   `-DeclRefExpr 0x562bf7553c38 <col:55> '_Bool' lvalue Var 0x562bf754cc78 'y$w_buff0_used' '_Bool'
    |         | | `-BinaryOperator 0x562bf7553d28 <col:73, col:93> 'int' '&&'
    |         | |   |-UnaryOperator 0x562bf7553cc0 <col:73, col:74> 'int' prefix '!' cannot overflow
    |         | |   | `-ImplicitCastExpr 0x562bf7553ca8 <col:74> '_Bool' <LValueToRValue>
    |         | |   |   `-DeclRefExpr 0x562bf7553c88 <col:74> '_Bool' lvalue Var 0x562bf754c700 'y$r_buff0_thd0' '_Bool'
    |         | |   `-UnaryOperator 0x562bf7553d10 <col:92, col:93> 'int' prefix '!' cannot overflow
    |         | |     `-ImplicitCastExpr 0x562bf7553cf8 <col:93> '_Bool' <LValueToRValue>
    |         | |       `-DeclRefExpr 0x562bf7553cd8 <col:93> '_Bool' lvalue Var 0x562bf754cd70 'y$w_buff1_used' '_Bool'
    |         | `-BinaryOperator 0x562bf7553e08 <col:111, col:131> 'int' '&&'
    |         |   |-UnaryOperator 0x562bf7553da0 <col:111, col:112> 'int' prefix '!' cannot overflow
    |         |   | `-ImplicitCastExpr 0x562bf7553d88 <col:112> '_Bool' <LValueToRValue>
    |         |   |   `-DeclRefExpr 0x562bf7553d68 <col:112> '_Bool' lvalue Var 0x562bf754c700 'y$r_buff0_thd0' '_Bool'
    |         |   `-UnaryOperator 0x562bf7553df0 <col:130, col:131> 'int' prefix '!' cannot overflow
    |         |     `-ImplicitCastExpr 0x562bf7553dd8 <col:131> '_Bool' <LValueToRValue>
    |         |       `-DeclRefExpr 0x562bf7553db8 <col:131> '_Bool' lvalue Var 0x562bf754c8e0 'y$r_buff1_thd0' '_Bool'
    |         |-ImplicitCastExpr 0x562bf7554050 <col:148> 'int' <IntegralCast>
    |         | `-ImplicitCastExpr 0x562bf7554038 <col:148> '_Bool' <LValueToRValue>
    |         |   `-DeclRefExpr 0x562bf7553e48 <col:148> '_Bool' lvalue Var 0x562bf754c700 'y$r_buff0_thd0' '_Bool'
    |         `-ParenExpr 0x562bf7554018 <col:165, col:226> 'int'
    |           `-ConditionalOperator 0x562bf7553fe8 <col:166, col:212> 'int'
    |             |-BinaryOperator 0x562bf7553f08 <col:166, col:184> 'int' '&&'
    |             | |-ImplicitCastExpr 0x562bf7553ec0 <col:166> 'int' <IntegralCast>
    |             | | `-ImplicitCastExpr 0x562bf7553ea8 <col:166> '_Bool' <LValueToRValue>
    |             | |   `-DeclRefExpr 0x562bf7553e68 <col:166> '_Bool' lvalue Var 0x562bf754cc78 'y$w_buff0_used' '_Bool'
    |             | `-ImplicitCastExpr 0x562bf7553ef0 <col:184> 'int' <IntegralCast>
    |             |   `-ImplicitCastExpr 0x562bf7553ed8 <col:184> '_Bool' <LValueToRValue>
    |             |     `-DeclRefExpr 0x562bf7553e88 <col:184> '_Bool' lvalue Var 0x562bf754c700 'y$r_buff0_thd0' '_Bool'
    |             |-ImplicitCastExpr 0x562bf7553fa0 <col:201, col:208> 'int' <IntegralCast>
    |             | `-CStyleCastExpr 0x562bf7553f58 <col:201, col:208> '_Bool' <IntegralToBoolean>
    |             |   `-IntegerLiteral 0x562bf7553f28 <col:208> 'int' 0
    |             `-ImplicitCastExpr 0x562bf7553fd0 <col:212> 'int' <IntegralCast>
    |               `-ImplicitCastExpr 0x562bf7553fb8 <col:212> '_Bool' <LValueToRValue>
    |                 `-DeclRefExpr 0x562bf7553f80 <col:212> '_Bool' lvalue Var 0x562bf754c700 'y$r_buff0_thd0' '_Bool'
    |-BinaryOperator 0x562bf7554728 <line:804:3, col:221> '_Bool' '='
    | |-DeclRefExpr 0x562bf7554180 <col:3> '_Bool' lvalue Var 0x562bf754c8e0 'y$r_buff1_thd0' '_Bool'
    | `-ImplicitCastExpr 0x562bf7554710 <col:20, col:221> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x562bf75546e0 <col:20, col:221> 'int'
    |     |-ImplicitCastExpr 0x562bf7554698 <col:20> 'int' <IntegralCast>
    |     | `-ImplicitCastExpr 0x562bf7554680 <col:20> '_Bool' <LValueToRValue>
    |     |   `-DeclRefExpr 0x562bf75541a0 <col:20> '_Bool' lvalue Var 0x562bf754cf80 'weak$$choice2' '_Bool'
    |     |-ImplicitCastExpr 0x562bf75546c8 <col:36> 'int' <IntegralCast>
    |     | `-ImplicitCastExpr 0x562bf75546b0 <col:36> '_Bool' <LValueToRValue>
    |     |   `-DeclRefExpr 0x562bf75541c0 <col:36> '_Bool' lvalue Var 0x562bf754c8e0 'y$r_buff1_thd0' '_Bool'
    |     `-ParenExpr 0x562bf7554660 <col:53, col:221> 'int'
    |       `-ConditionalOperator 0x562bf7554630 <col:54, col:220> 'int'
    |         |-BinaryOperator 0x562bf75543d0 <col:54, col:131> 'int' '||'
    |         | |-BinaryOperator 0x562bf75542f0 <col:54, col:93> 'int' '||'
    |         | | |-UnaryOperator 0x562bf7554218 <col:54, col:55> 'int' prefix '!' cannot overflow
    |         | | | `-ImplicitCastExpr 0x562bf7554200 <col:55> '_Bool' <LValueToRValue>
    |         | | |   `-DeclRefExpr 0x562bf75541e0 <col:55> '_Bool' lvalue Var 0x562bf754cc78 'y$w_buff0_used' '_Bool'
    |         | | `-BinaryOperator 0x562bf75542d0 <col:73, col:93> 'int' '&&'
    |         | |   |-UnaryOperator 0x562bf7554268 <col:73, col:74> 'int' prefix '!' cannot overflow
    |         | |   | `-ImplicitCastExpr 0x562bf7554250 <col:74> '_Bool' <LValueToRValue>
    |         | |   |   `-DeclRefExpr 0x562bf7554230 <col:74> '_Bool' lvalue Var 0x562bf754c700 'y$r_buff0_thd0' '_Bool'
    |         | |   `-UnaryOperator 0x562bf75542b8 <col:92, col:93> 'int' prefix '!' cannot overflow
    |         | |     `-ImplicitCastExpr 0x562bf75542a0 <col:93> '_Bool' <LValueToRValue>
    |         | |       `-DeclRefExpr 0x562bf7554280 <col:93> '_Bool' lvalue Var 0x562bf754cd70 'y$w_buff1_used' '_Bool'
    |         | `-BinaryOperator 0x562bf75543b0 <col:111, col:131> 'int' '&&'
    |         |   |-UnaryOperator 0x562bf7554348 <col:111, col:112> 'int' prefix '!' cannot overflow
    |         |   | `-ImplicitCastExpr 0x562bf7554330 <col:112> '_Bool' <LValueToRValue>
    |         |   |   `-DeclRefExpr 0x562bf7554310 <col:112> '_Bool' lvalue Var 0x562bf754c700 'y$r_buff0_thd0' '_Bool'
    |         |   `-UnaryOperator 0x562bf7554398 <col:130, col:131> 'int' prefix '!' cannot overflow
    |         |     `-ImplicitCastExpr 0x562bf7554380 <col:131> '_Bool' <LValueToRValue>
    |         |       `-DeclRefExpr 0x562bf7554360 <col:131> '_Bool' lvalue Var 0x562bf754c8e0 'y$r_buff1_thd0' '_Bool'
    |         |-ImplicitCastExpr 0x562bf7554618 <col:148> 'int' <IntegralCast>
    |         | `-ImplicitCastExpr 0x562bf7554600 <col:148> '_Bool' <LValueToRValue>
    |         |   `-DeclRefExpr 0x562bf75543f0 <col:148> '_Bool' lvalue Var 0x562bf754c8e0 'y$r_buff1_thd0' '_Bool'
    |         `-ParenExpr 0x562bf75545e0 <col:165, col:220> 'int'
    |           `-ConditionalOperator 0x562bf75545b0 <col:166, col:219> 'int'
    |             |-BinaryOperator 0x562bf75544b0 <col:166, col:184> 'int' '&&'
    |             | |-ImplicitCastExpr 0x562bf7554468 <col:166> 'int' <IntegralCast>
    |             | | `-ImplicitCastExpr 0x562bf7554450 <col:166> '_Bool' <LValueToRValue>
    |             | |   `-DeclRefExpr 0x562bf7554410 <col:166> '_Bool' lvalue Var 0x562bf754cc78 'y$w_buff0_used' '_Bool'
    |             | `-ImplicitCastExpr 0x562bf7554498 <col:184> 'int' <IntegralCast>
    |             |   `-ImplicitCastExpr 0x562bf7554480 <col:184> '_Bool' <LValueToRValue>
    |             |     `-DeclRefExpr 0x562bf7554430 <col:184> '_Bool' lvalue Var 0x562bf754c700 'y$r_buff0_thd0' '_Bool'
    |             |-ImplicitCastExpr 0x562bf7554580 <col:201, col:208> 'int' <IntegralCast>
    |             | `-CStyleCastExpr 0x562bf7554500 <col:201, col:208> '_Bool' <IntegralToBoolean>
    |             |   `-IntegerLiteral 0x562bf75544d0 <col:208> 'int' 0
    |             `-ImplicitCastExpr 0x562bf7554598 <col:212, col:219> 'int' <IntegralCast>
    |               `-CStyleCastExpr 0x562bf7554558 <col:212, col:219> '_Bool' <IntegralToBoolean>
    |                 `-IntegerLiteral 0x562bf7554528 <col:219> 'int' 0
    |-BinaryOperator 0x562bf7554960 <line:805:3, col:67> '_Bool' '='
    | |-DeclRefExpr 0x562bf7554748 <col:3> '_Bool' lvalue Var 0x562bf754c350 'main$tmp_guard1' '_Bool'
    | `-ImplicitCastExpr 0x562bf7554948 <col:21, col:67> '_Bool' <IntegralToBoolean>
    |   `-UnaryOperator 0x562bf7554930 <col:21, col:67> 'int' prefix '!' cannot overflow
    |     `-ParenExpr 0x562bf7554910 <col:22, col:67> 'int'
    |       `-BinaryOperator 0x562bf75548f0 <col:23, col:66> 'int' '&&'
    |         |-BinaryOperator 0x562bf7554858 <col:23, col:38> 'int' '&&'
    |         | |-BinaryOperator 0x562bf75547c0 <col:23, col:28> 'int' '=='
    |         | | |-ImplicitCastExpr 0x562bf75547a8 <col:23> 'int' <LValueToRValue>
    |         | | | `-DeclRefExpr 0x562bf7554768 <col:23> 'int' lvalue Var 0x562bf754c450 'x' 'int'
    |         | | `-IntegerLiteral 0x562bf7554788 <col:28> 'int' 2
    |         | `-BinaryOperator 0x562bf7554838 <col:33, col:38> 'int' '=='
    |         |   |-ImplicitCastExpr 0x562bf7554820 <col:33> 'int' <LValueToRValue>
    |         |   | `-DeclRefExpr 0x562bf75547e0 <col:33> 'int' lvalue Var 0x562bf754c570 'y' 'int'
    |         |   `-IntegerLiteral 0x562bf7554800 <col:38> 'int' 2
    |         `-BinaryOperator 0x562bf75548d0 <col:43, col:66> 'int' '=='
    |           |-ImplicitCastExpr 0x562bf75548b8 <col:43> 'int' <LValueToRValue>
    |           | `-DeclRefExpr 0x562bf7554878 <col:43> 'int' lvalue Var 0x562bf754c240 '__unbuffered_p2_EAX' 'int'
    |           `-IntegerLiteral 0x562bf7554898 <col:66> 'int' 0
    |-BinaryOperator 0x562bf7554a90 <line:806:3, col:37> 'int' '='
    | |-DeclRefExpr 0x562bf7554980 <col:3> 'int' lvalue Var 0x562bf754c570 'y' 'int'
    | `-ConditionalOperator 0x562bf7554a60 <col:7, col:37> 'int'
    |   |-ImplicitCastExpr 0x562bf7554a18 <col:7> 'int' <IntegralCast>
    |   | `-ImplicitCastExpr 0x562bf7554a00 <col:7> '_Bool' <LValueToRValue>
    |   |   `-DeclRefExpr 0x562bf75549a0 <col:7> '_Bool' lvalue Var 0x562bf754c608 'y$flush_delayed' '_Bool'
    |   |-ImplicitCastExpr 0x562bf7554a30 <col:25> 'int' <LValueToRValue>
    |   | `-DeclRefExpr 0x562bf75549c0 <col:25> 'int' lvalue Var 0x562bf754c688 'y$mem_tmp' 'int'
    |   `-ImplicitCastExpr 0x562bf7554a48 <col:37> 'int' <LValueToRValue>
    |     `-DeclRefExpr 0x562bf75549e0 <col:37> 'int' lvalue Var 0x562bf754c570 'y' 'int'
    |-BinaryOperator 0x562bf7554b28 <line:807:3, col:28> '_Bool' '='
    | |-DeclRefExpr 0x562bf7554ab0 <col:3> '_Bool' lvalue Var 0x562bf754c608 'y$flush_delayed' '_Bool'
    | `-CStyleCastExpr 0x562bf7554b00 <col:21, col:28> '_Bool' <IntegralToBoolean>
    |   `-IntegerLiteral 0x562bf7554ad0 <col:28> 'int' 0
    |-CallExpr 0x562bf7554b98 <line:808:3, col:25> 'void'
    | `-ImplicitCastExpr 0x562bf7554b80 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x562bf7554b48 <col:3> 'void ()' Function 0x562bf74f2f00 '__VERIFIER_atomic_end' 'void ()'
    |-CallExpr 0x562bf7554c10 <line:809:3, col:36> 'void'
    | |-ImplicitCastExpr 0x562bf7554bf8 <col:3> 'void (*)(int)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x562bf7554bb8 <col:3> 'void (int)' Function 0x562bf74f2bc8 '__VERIFIER_assert' 'void (int)'
    | `-ImplicitCastExpr 0x562bf7554c50 <col:21> 'int' <IntegralCast>
    |   `-ImplicitCastExpr 0x562bf7554c38 <col:21> '_Bool' <LValueToRValue>
    |     `-DeclRefExpr 0x562bf7554bd8 <col:21> '_Bool' lvalue Var 0x562bf754c350 'main$tmp_guard1' '_Bool'
    `-ReturnStmt 0x562bf7554c88 <line:810:3, col:10>
      `-IntegerLiteral 0x562bf7554c68 <col:10> 'int' 0
