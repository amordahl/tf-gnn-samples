TranslationUnitDecl 0x55be7e47ee18 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x55be7e47f6d8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x55be7e47f3b0 '__int128'
|-TypedefDecl 0x55be7e47f748 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x55be7e47f3d0 'unsigned __int128'
|-TypedefDecl 0x55be7e47fa50 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x55be7e47f820 'struct __NSConstantString_tag'
|   `-Record 0x55be7e47f7a0 '__NSConstantString_tag'
|-TypedefDecl 0x55be7e47faf8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x55be7e47fab0 'char *'
|   `-BuiltinType 0x55be7e47eeb0 'char'
|-TypedefDecl 0x55be7e4be650 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'struct __va_list_tag [1]'
| `-ConstantArrayType 0x55be7e47fd90 'struct __va_list_tag [1]' 1 
|   `-RecordType 0x55be7e47fbd0 'struct __va_list_tag'
|     `-Record 0x55be7e47fb50 '__va_list_tag'
|-FunctionDecl 0x55be7e4be790 <./split_6/mix019_pso.oepc_false-unreach-call.i:1:1, col:34> col:13 used __VERIFIER_assume 'void (int)' extern
| `-ParmVarDecl 0x55be7e4be6c0 <col:31> col:34 'int'
|-FunctionDecl 0x55be7e4be958 <line:2:1, col:45> col:15 used __VERIFIER_nondet_pointer 'void *(void)' extern
|-FunctionDecl 0x55be7e4bea80 <line:3:1, col:61> col:13 used __VERIFIER_error 'void () __attribute__((noreturn))' extern
|-FunctionDecl 0x55be7e4bebc8 <line:4:1, col:99> col:6 used __VERIFIER_assert 'void (int)'
| |-ParmVarDecl 0x55be7e4beb38 <col:24, col:28> col:28 used expression 'int'
| `-CompoundStmt 0x55be7e4bedf8 <col:40, col:99>
|   |-IfStmt 0x55be7e4bedc8 <col:42, col:88>
|   | |-UnaryOperator 0x55be7e4beca8 <col:46, col:47> 'int' prefix '!' cannot overflow
|   | | `-ImplicitCastExpr 0x55be7e4bec90 <col:47> 'int' <LValueToRValue>
|   | |   `-DeclRefExpr 0x55be7e4bec70 <col:47> 'int' lvalue ParmVar 0x55be7e4beb38 'expression' 'int'
|   | `-CompoundStmt 0x55be7e4bedb0 <col:59, col:88>
|   |   `-LabelStmt 0x55be7e4bed98 <col:61, col:85> 'ERROR'
|   |     `-CallExpr 0x55be7e4bed28 <col:68, col:85> 'void'
|   |       `-ImplicitCastExpr 0x55be7e4bed10 <col:68> 'void (*)() __attribute__((noreturn))' <FunctionToPointerDecay>
|   |         `-DeclRefExpr 0x55be7e4becc0 <col:68> 'void () __attribute__((noreturn))' Function 0x55be7e4bea80 '__VERIFIER_error' 'void () __attribute__((noreturn))'
|   |-NullStmt 0x55be7e4bede0 <col:89>
|   `-ReturnStmt 0x55be7e4bede8 <col:91>
|-FunctionDecl 0x55be7e4bee40 <line:5:1, col:37> col:13 used __VERIFIER_atomic_begin 'void ()' extern
|-FunctionDecl 0x55be7e4bef00 <line:6:1, col:35> col:13 used __VERIFIER_atomic_end 'void ()' extern
|-FunctionDecl 0x55be7e4bf280 <line:8:1, line:10:76> line:8:13 __assert_fail 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x55be7e4befb8 <col:28, col:40> col:40 __assertion 'const char *'
| |-ParmVarDecl 0x55be7e4bf038 <col:53, col:65> col:65 __file 'const char *'
| |-ParmVarDecl 0x55be7e4bf0b8 <line:9:7, col:20> col:20 __line 'unsigned int'
| |-ParmVarDecl 0x55be7e4bf138 <col:28, col:40> col:40 __function 'const char *'
| `-NoThrowAttr 0x55be7e4bf340 <line:10:22>
|-FunctionDecl 0x55be7e4e5390 <line:11:1, line:13:76> line:11:13 __assert_perror_fail 'void (int, const char *, unsigned int, const char *) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x55be7e4bf3b0 <col:35, col:39> col:39 __errnum 'int'
| |-ParmVarDecl 0x55be7e4bf430 <col:49, col:61> col:61 __file 'const char *'
| |-ParmVarDecl 0x55be7e4bf4b0 <line:12:7, col:20> col:20 __line 'unsigned int'
| |-ParmVarDecl 0x55be7e4bf530 <col:28, col:40> col:40 __function 'const char *'
| `-NoThrowAttr 0x55be7e4e5450 <line:13:22>
|-FunctionDecl 0x55be7e4e5700 <line:14:1, line:15:76> line:14:13 __assert 'void (const char *, const char *, int) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x55be7e4e54c0 <col:23, col:35> col:35 __assertion 'const char *'
| |-ParmVarDecl 0x55be7e4e5540 <col:48, col:60> col:60 __file 'const char *'
| |-ParmVarDecl 0x55be7e4e55c0 <col:68, col:72> col:72 __line 'int'
| `-NoThrowAttr 0x55be7e4e57b8 <line:15:22>
|-TypedefDecl 0x55be7e4e5828 <line:17:1, col:23> col:23 __u_char 'unsigned char'
| `-BuiltinType 0x55be7e47ef70 'unsigned char'
|-TypedefDecl 0x55be7e4e5898 <line:18:1, col:28> col:28 __u_short 'unsigned short'
| `-BuiltinType 0x55be7e47ef90 'unsigned short'
|-TypedefDecl 0x55be7e4e5908 <line:19:1, col:22> col:22 __u_int 'unsigned int'
| `-BuiltinType 0x55be7e47efb0 'unsigned int'
|-TypedefDecl 0x55be7e4e5978 <line:20:1, col:27> col:27 __u_long 'unsigned long'
| `-BuiltinType 0x55be7e47efd0 'unsigned long'
|-TypedefDecl 0x55be7e4e59e8 <line:21:1, col:21> col:21 __int8_t 'signed char'
| `-BuiltinType 0x55be7e47eed0 'signed char'
|-TypedefDecl 0x55be7e4e5a58 <line:22:1, col:23> col:23 __uint8_t 'unsigned char'
| `-BuiltinType 0x55be7e47ef70 'unsigned char'
|-TypedefDecl 0x55be7e4e5ac8 <line:23:1, col:26> col:26 __int16_t 'short'
| `-BuiltinType 0x55be7e47eef0 'short'
|-TypedefDecl 0x55be7e4e5b38 <line:24:1, col:28> col:28 __uint16_t 'unsigned short'
| `-BuiltinType 0x55be7e47ef90 'unsigned short'
|-TypedefDecl 0x55be7e4e5ba8 <line:25:1, col:20> col:20 __int32_t 'int'
| `-BuiltinType 0x55be7e47ef10 'int'
|-TypedefDecl 0x55be7e4e5c18 <line:26:1, col:22> col:22 __uint32_t 'unsigned int'
| `-BuiltinType 0x55be7e47efb0 'unsigned int'
|-TypedefDecl 0x55be7e4e5c88 <line:27:1, col:25> col:25 __int64_t 'long'
| `-BuiltinType 0x55be7e47ef30 'long'
|-TypedefDecl 0x55be7e4e5cf8 <line:28:1, col:27> col:27 referenced __uint64_t 'unsigned long'
| `-BuiltinType 0x55be7e47efd0 'unsigned long'
|-TypedefDecl 0x55be7e4e5d68 <line:29:1, col:18> col:18 referenced __quad_t 'long'
| `-BuiltinType 0x55be7e47ef30 'long'
|-TypedefDecl 0x55be7e4e5dd8 <line:30:1, col:27> col:27 __u_quad_t 'unsigned long'
| `-BuiltinType 0x55be7e47efd0 'unsigned long'
|-TypedefDecl 0x55be7e4e5e48 <line:31:1, col:27> col:27 __dev_t 'unsigned long'
| `-BuiltinType 0x55be7e47efd0 'unsigned long'
|-TypedefDecl 0x55be7e4e5eb8 <line:32:1, col:22> col:22 __uid_t 'unsigned int'
| `-BuiltinType 0x55be7e47efb0 'unsigned int'
|-TypedefDecl 0x55be7e4e5f28 <line:33:1, col:22> col:22 __gid_t 'unsigned int'
| `-BuiltinType 0x55be7e47efb0 'unsigned int'
|-TypedefDecl 0x55be7e4e5f98 <line:34:1, col:27> col:27 __ino_t 'unsigned long'
| `-BuiltinType 0x55be7e47efd0 'unsigned long'
|-TypedefDecl 0x55be7e4e6008 <line:35:1, col:27> col:27 __ino64_t 'unsigned long'
| `-BuiltinType 0x55be7e47efd0 'unsigned long'
|-TypedefDecl 0x55be7e4e6078 <line:36:1, col:22> col:22 __mode_t 'unsigned int'
| `-BuiltinType 0x55be7e47efb0 'unsigned int'
|-TypedefDecl 0x55be7e4e60e8 <line:37:1, col:27> col:27 __nlink_t 'unsigned long'
| `-BuiltinType 0x55be7e47efd0 'unsigned long'
|-TypedefDecl 0x55be7e4e6158 <line:38:1, col:18> col:18 __off_t 'long'
| `-BuiltinType 0x55be7e47ef30 'long'
|-TypedefDecl 0x55be7e4e61c8 <line:39:1, col:18> col:18 referenced __off64_t 'long'
| `-BuiltinType 0x55be7e47ef30 'long'
|-TypedefDecl 0x55be7e4e6238 <line:40:1, col:13> col:13 referenced __pid_t 'int'
| `-BuiltinType 0x55be7e47ef10 'int'
|-RecordDecl 0x55be7e4e6290 <line:41:9, col:32> col:9 struct definition
| `-FieldDecl 0x55be7e4e6408 <col:18, col:29> col:22 __val 'int [2]'
|-TypedefDecl 0x55be7e4e64c0 <col:1, col:34> col:34 __fsid_t 'struct __fsid_t':'__fsid_t'
| `-ElaboratedType 0x55be7e4e6460 'struct __fsid_t' sugar
|   `-RecordType 0x55be7e4e6310 '__fsid_t'
|     `-Record 0x55be7e4e6290 ''
|-TypedefDecl 0x55be7e4e6548 <line:42:1, col:18> col:18 referenced __clock_t 'long'
| `-BuiltinType 0x55be7e47ef30 'long'
|-TypedefDecl 0x55be7e4e65b8 <line:43:1, col:27> col:27 __rlim_t 'unsigned long'
| `-BuiltinType 0x55be7e47efd0 'unsigned long'
|-TypedefDecl 0x55be7e4e6628 <line:44:1, col:27> col:27 __rlim64_t 'unsigned long'
| `-BuiltinType 0x55be7e47efd0 'unsigned long'
|-TypedefDecl 0x55be7e4e6698 <line:45:1, col:22> col:22 __id_t 'unsigned int'
| `-BuiltinType 0x55be7e47efb0 'unsigned int'
|-TypedefDecl 0x55be7e4e6708 <line:46:1, col:18> col:18 referenced __time_t 'long'
| `-BuiltinType 0x55be7e47ef30 'long'
|-TypedefDecl 0x55be7e4e6778 <line:47:1, col:22> col:22 __useconds_t 'unsigned int'
| `-BuiltinType 0x55be7e47efb0 'unsigned int'
|-TypedefDecl 0x55be7e4e67e8 <line:48:1, col:18> col:18 __suseconds_t 'long'
| `-BuiltinType 0x55be7e47ef30 'long'
|-TypedefDecl 0x55be7e4e6858 <line:49:1, col:13> col:13 __daddr_t 'int'
| `-BuiltinType 0x55be7e47ef10 'int'
|-TypedefDecl 0x55be7e4e68c8 <line:50:1, col:13> col:13 __key_t 'int'
| `-BuiltinType 0x55be7e47ef10 'int'
|-TypedefDecl 0x55be7e4e6938 <line:51:1, col:13> col:13 referenced __clockid_t 'int'
| `-BuiltinType 0x55be7e47ef10 'int'
|-TypedefDecl 0x55be7e4e69a8 <line:52:1, col:16> col:16 referenced __timer_t 'void *'
| `-PointerType 0x55be7e47f630 'void *'
|   `-BuiltinType 0x55be7e47ee70 'void'
|-TypedefDecl 0x55be7e4e6a18 <line:53:1, col:18> col:18 __blksize_t 'long'
| `-BuiltinType 0x55be7e47ef30 'long'
|-TypedefDecl 0x55be7e4e6a88 <line:54:1, col:18> col:18 __blkcnt_t 'long'
| `-BuiltinType 0x55be7e47ef30 'long'
|-TypedefDecl 0x55be7e4e6af8 <line:55:1, col:18> col:18 __blkcnt64_t 'long'
| `-BuiltinType 0x55be7e47ef30 'long'
|-TypedefDecl 0x55be7e4e6b68 <line:56:1, col:27> col:27 __fsblkcnt_t 'unsigned long'
| `-BuiltinType 0x55be7e47efd0 'unsigned long'
|-TypedefDecl 0x55be7e4e6bd8 <line:57:1, col:27> col:27 __fsblkcnt64_t 'unsigned long'
| `-BuiltinType 0x55be7e47efd0 'unsigned long'
|-TypedefDecl 0x55be7e4e6c48 <line:58:1, col:27> col:27 __fsfilcnt_t 'unsigned long'
| `-BuiltinType 0x55be7e47efd0 'unsigned long'
|-TypedefDecl 0x55be7e4e6cb8 <line:59:1, col:27> col:27 __fsfilcnt64_t 'unsigned long'
| `-BuiltinType 0x55be7e47efd0 'unsigned long'
|-TypedefDecl 0x55be7e4e6d28 <line:60:1, col:18> col:18 __fsword_t 'long'
| `-BuiltinType 0x55be7e47ef30 'long'
|-TypedefDecl 0x55be7e4e6d98 <line:61:1, col:18> col:18 __ssize_t 'long'
| `-BuiltinType 0x55be7e47ef30 'long'
|-TypedefDecl 0x55be7e4e6e08 <line:62:1, col:18> col:18 referenced __syscall_slong_t 'long'
| `-BuiltinType 0x55be7e47ef30 'long'
|-TypedefDecl 0x55be7e4e6e78 <line:63:1, col:27> col:27 __syscall_ulong_t 'unsigned long'
| `-BuiltinType 0x55be7e47efd0 'unsigned long'
|-TypedefDecl 0x55be7e4e6f08 <line:64:1, col:19> col:19 __loff_t '__off64_t':'long'
| `-TypedefType 0x55be7e4e6ed0 '__off64_t' sugar
|   |-Typedef 0x55be7e4e61c8 '__off64_t'
|   `-BuiltinType 0x55be7e47ef30 'long'
|-TypedefDecl 0x55be7e4e7000 <line:65:1, col:19> col:19 __qaddr_t '__quad_t *'
| `-PointerType 0x55be7e4e6fc0 '__quad_t *'
|   `-TypedefType 0x55be7e4e6f60 '__quad_t' sugar
|     |-Typedef 0x55be7e4e5d68 '__quad_t'
|     `-BuiltinType 0x55be7e47ef30 'long'
|-TypedefDecl 0x55be7e4e7070 <line:66:1, col:15> col:15 __caddr_t 'char *'
| `-PointerType 0x55be7e47fab0 'char *'
|   `-BuiltinType 0x55be7e47eeb0 'char'
|-TypedefDecl 0x55be7e4e70e0 <line:67:1, col:18> col:18 __intptr_t 'long'
| `-BuiltinType 0x55be7e47ef30 'long'
|-TypedefDecl 0x55be7e4e7150 <line:68:1, col:22> col:22 __socklen_t 'unsigned int'
| `-BuiltinType 0x55be7e47efb0 'unsigned int'
|-FunctionDecl 0x55be7e4e7298 <line:69:1, line:73:1> line:70:1 __bswap_32 'unsigned int (unsigned int)' static inline
| |-ParmVarDecl 0x55be7e4e71c0 <col:13, col:26> col:26 used __bsx 'unsigned int'
| `-CompoundStmt 0x55be7e4e85e8 <line:71:1, line:73:1>
|   `-ReturnStmt 0x55be7e4e85d8 <line:72:3, col:34>
|     `-CallExpr 0x55be7e4e8598 <col:10, col:34> 'unsigned int'
|       |-ImplicitCastExpr 0x55be7e4e8580 <col:10> 'unsigned int (*)(unsigned int)' <BuiltinFnToFnPtr>
|       | `-DeclRefExpr 0x55be7e4e8510 <col:10> '<builtin fn type>' Function 0x55be7e4e8380 '__builtin_bswap32' 'unsigned int (unsigned int)'
|       `-ImplicitCastExpr 0x55be7e4e85c0 <col:29> 'unsigned int' <LValueToRValue>
|         `-DeclRefExpr 0x55be7e4e8530 <col:29> 'unsigned int' lvalue ParmVar 0x55be7e4e71c0 '__bsx' 'unsigned int'
|-FunctionDecl 0x55be7e4e8380 <col:10> col:10 implicit used __builtin_bswap32 'unsigned int (unsigned int)' extern
| |-ParmVarDecl 0x55be7e4e8420 <<invalid sloc>> <invalid sloc> 'unsigned int'
| |-NoThrowAttr 0x55be7e4e8490 <col:10> Implicit
| `-ConstAttr 0x55be7e4e84e8 <col:10> Implicit
|-FunctionDecl 0x55be7e4e8740 <line:74:1, line:78:1> line:75:1 __bswap_64 '__uint64_t (__uint64_t)' static inline
| |-ParmVarDecl 0x55be7e4e8638 <col:13, col:24> col:24 used __bsx '__uint64_t':'unsigned long'
| `-CompoundStmt 0x55be7e4e8a58 <line:76:1, line:78:1>
|   `-ReturnStmt 0x55be7e4e8a48 <line:77:3, col:34>
|     `-CallExpr 0x55be7e4e8a08 <col:10, col:34> 'unsigned long'
|       |-ImplicitCastExpr 0x55be7e4e89f0 <col:10> 'unsigned long (*)(unsigned long)' <BuiltinFnToFnPtr>
|       | `-DeclRefExpr 0x55be7e4e8978 <col:10> '<builtin fn type>' Function 0x55be7e4e87e8 '__builtin_bswap64' 'unsigned long (unsigned long)'
|       `-ImplicitCastExpr 0x55be7e4e8a30 <col:29> '__uint64_t':'unsigned long' <LValueToRValue>
|         `-DeclRefExpr 0x55be7e4e8998 <col:29> '__uint64_t':'unsigned long' lvalue ParmVar 0x55be7e4e8638 '__bsx' '__uint64_t':'unsigned long'
|-FunctionDecl 0x55be7e4e87e8 <col:10> col:10 implicit used __builtin_bswap64 'unsigned long (unsigned long)' extern
| |-ParmVarDecl 0x55be7e4e8888 <<invalid sloc>> <invalid sloc> 'unsigned long'
| |-NoThrowAttr 0x55be7e4e88f8 <col:10> Implicit
| `-ConstAttr 0x55be7e4e8950 <col:10> Implicit
|-TypedefDecl 0x55be7e4e8a88 <line:79:1, col:27> col:27 referenced size_t 'unsigned long'
| `-BuiltinType 0x55be7e47efd0 'unsigned long'
|-TypedefDecl 0x55be7e4e8b18 <line:81:1, col:18> col:18 referenced time_t '__time_t':'long'
| `-TypedefType 0x55be7e4e8ae0 '__time_t' sugar
|   |-Typedef 0x55be7e4e6708 '__time_t'
|   `-BuiltinType 0x55be7e47ef30 'long'
|-RecordDecl 0x55be7e4e8b70 <line:84:1, line:88:3> line:84:8 struct timespec definition
| |-FieldDecl 0x55be7e4e8c28 <line:86:5, col:14> col:14 tv_sec '__time_t':'long'
| `-FieldDecl 0x55be7e4e8cb8 <line:87:5, col:23> col:23 tv_nsec '__syscall_slong_t':'long'
|-TypedefDecl 0x55be7e4e8d48 <line:89:1, col:17> col:17 referenced pid_t '__pid_t':'int'
| `-TypedefType 0x55be7e4e8d10 '__pid_t' sugar
|   |-Typedef 0x55be7e4e6238 '__pid_t'
|   `-BuiltinType 0x55be7e47ef10 'int'
|-RecordDecl 0x55be7e4e8da0 <line:90:1, line:93:3> line:90:8 struct sched_param definition
| `-FieldDecl 0x55be7e4e8e60 <line:92:5, col:9> col:9 __sched_priority 'int'
|-RecordDecl 0x55be7e4e8eb0 <line:96:1, line:99:3> line:96:8 struct __sched_param definition
| `-FieldDecl 0x55be7e4e8f70 <line:98:5, col:9> col:9 __sched_priority 'int'
|-TypedefDecl 0x55be7e4e8fd8 <line:100:1, col:27> col:27 referenced __cpu_mask 'unsigned long'
| `-BuiltinType 0x55be7e47efd0 'unsigned long'
|-RecordDecl 0x55be7e4e9030 <line:101:9, line:104:1> line:101:9 struct definition
| `-FieldDecl 0x55be7e4e92c0 <line:103:3, col:53> col:14 __bits '__cpu_mask [64]'
|-TypedefDecl 0x55be7e4ea3a0 <line:101:1, line:104:3> col:3 referenced cpu_set_t 'struct cpu_set_t':'cpu_set_t'
| `-ElaboratedType 0x55be7e4e9310 'struct cpu_set_t' sugar
|   `-RecordType 0x55be7e4e90b0 'cpu_set_t'
|     `-Record 0x55be7e4e9030 ''
|-FunctionDecl 0x55be7e4ea678 <line:106:1, line:107:42> line:106:12 __sched_cpucount 'int (size_t, const cpu_set_t *)' extern
| |-ParmVarDecl 0x55be7e4ea448 <col:30, col:37> col:37 __setsize 'size_t':'unsigned long'
| |-ParmVarDecl 0x55be7e4ea550 <col:48, col:65> col:65 __setp 'const cpu_set_t *'
| `-NoThrowAttr 0x55be7e4ea728 <line:107:19>
|-FunctionDecl 0x55be7e4ea900 <line:108:1, col:92> col:19 __sched_cpualloc 'cpu_set_t *(size_t)' extern
| |-ParmVarDecl 0x55be7e4ea790 <col:37, col:44> col:44 __count 'size_t':'unsigned long'
| `-NoThrowAttr 0x55be7e4ea9a8 <col:69>
|-FunctionDecl 0x55be7e4eab20 <line:109:1, col:87> col:13 __sched_cpufree 'void (cpu_set_t *)' extern
| |-ParmVarDecl 0x55be7e4eaa10 <col:30, col:41> col:41 __set 'cpu_set_t *'
| `-NoThrowAttr 0x55be7e4eabc8 <col:64>
|-FunctionDecl 0x55be7e4eae88 <line:112:1, line:113:45> line:112:12 sched_setparam 'int (__pid_t, const struct sched_param *)' extern
| |-ParmVarDecl 0x55be7e4eac30 <col:28, col:36> col:36 __pid '__pid_t':'int'
| |-ParmVarDecl 0x55be7e4ead68 <col:43, col:69> col:69 __param 'const struct sched_param *'
| `-NoThrowAttr 0x55be7e4eaf38 <line:113:22>
|-FunctionDecl 0x55be7e4eb1b8 <line:114:1, col:111> col:12 sched_getparam 'int (__pid_t, struct sched_param *)' extern
| |-ParmVarDecl 0x55be7e4eafa0 <col:28, col:36> col:36 __pid '__pid_t':'int'
| |-ParmVarDecl 0x55be7e4eb098 <col:43, col:63> col:63 __param 'struct sched_param *'
| `-NoThrowAttr 0x55be7e4eb268 <col:88>
|-FunctionDecl 0x55be7e4eb588 <line:115:1, line:116:85> line:115:12 sched_setscheduler 'int (__pid_t, int, const struct sched_param *)' extern
| |-ParmVarDecl 0x55be7e4eb2d0 <col:32, col:40> col:40 __pid '__pid_t':'int'
| |-ParmVarDecl 0x55be7e4eb3b0 <col:47, col:51> col:51 __policy 'int'
| |-ParmVarDecl 0x55be7e4eb440 <line:116:11, col:37> col:37 __param 'const struct sched_param *'
| `-NoThrowAttr 0x55be7e4eb640 <col:62>
|-FunctionDecl 0x55be7e4eb7b8 <line:117:1, col:86> col:12 sched_getscheduler 'int (__pid_t)' extern
| |-ParmVarDecl 0x55be7e4eb6a8 <col:32, col:40> col:40 __pid '__pid_t':'int'
| `-NoThrowAttr 0x55be7e4eb860 <col:63>
|-FunctionDecl 0x55be7e4eb988 <line:118:1, col:70> col:12 sched_yield 'int (void)' extern
| `-NoThrowAttr 0x55be7e4eba28 <col:47>
|-FunctionDecl 0x55be7e4ebb30 <line:119:1, col:92> col:12 sched_get_priority_max 'int (int)' extern
| |-ParmVarDecl 0x55be7e4eba98 <col:36, col:40> col:40 __algorithm 'int'
| `-NoThrowAttr 0x55be7e4ebbd8 <col:69>
|-FunctionDecl 0x55be7e4ebce0 <line:120:1, col:92> col:12 sched_get_priority_min 'int (int)' extern
| |-ParmVarDecl 0x55be7e4ebc48 <col:36, col:40> col:40 __algorithm 'int'
| `-NoThrowAttr 0x55be7e4ebd88 <col:69>
|-FunctionDecl 0x55be7e4ec048 <line:121:1, col:111> col:12 sched_rr_get_interval 'int (__pid_t, struct timespec *)' extern
| |-ParmVarDecl 0x55be7e4ebdf0 <col:35, col:43> col:43 __pid '__pid_t':'int'
| |-ParmVarDecl 0x55be7e4ebf28 <col:50, col:67> col:67 __t 'struct timespec *'
| `-NoThrowAttr 0x55be7e4ec0f8 <col:88>
|-TypedefDecl 0x55be7e4ec188 <line:125:1, col:19> col:19 referenced clock_t '__clock_t':'long'
| `-TypedefType 0x55be7e4ec150 '__clock_t' sugar
|   |-Typedef 0x55be7e4e6548 '__clock_t'
|   `-BuiltinType 0x55be7e47ef30 'long'
|-TypedefDecl 0x55be7e4ec218 <line:128:1, col:21> col:21 referenced clockid_t '__clockid_t':'int'
| `-TypedefType 0x55be7e4ec1e0 '__clockid_t' sugar
|   |-Typedef 0x55be7e4e6938 '__clockid_t'
|   `-BuiltinType 0x55be7e47ef10 'int'
|-TypedefDecl 0x55be7e4ec2a8 <line:129:1, col:19> col:19 referenced timer_t '__timer_t':'void *'
| `-TypedefType 0x55be7e4ec270 '__timer_t' sugar
|   |-Typedef 0x55be7e4e69a8 '__timer_t'
|   `-PointerType 0x55be7e47f630 'void *'
|     `-BuiltinType 0x55be7e47ee70 'void'
|-RecordDecl 0x55be7e4ec300 <line:131:1, line:144:1> line:131:8 struct tm definition
| |-FieldDecl 0x55be7e4ec3d8 <line:133:3, col:7> col:7 tm_sec 'int'
| |-FieldDecl 0x55be7e4ec440 <line:134:3, col:7> col:7 tm_min 'int'
| |-FieldDecl 0x55be7e4ec4a8 <line:135:3, col:7> col:7 tm_hour 'int'
| |-FieldDecl 0x55be7e4ec510 <line:136:3, col:7> col:7 tm_mday 'int'
| |-FieldDecl 0x55be7e4ec578 <line:137:3, col:7> col:7 tm_mon 'int'
| |-FieldDecl 0x55be7e4ec5e0 <line:138:3, col:7> col:7 tm_year 'int'
| |-FieldDecl 0x55be7e4ec648 <line:139:3, col:7> col:7 tm_wday 'int'
| |-FieldDecl 0x55be7e4ec6b0 <line:140:3, col:7> col:7 tm_yday 'int'
| |-FieldDecl 0x55be7e4ec718 <line:141:3, col:7> col:7 tm_isdst 'int'
| |-FieldDecl 0x55be7e4ec780 <line:142:3, col:12> col:12 tm_gmtoff 'long'
| `-FieldDecl 0x55be7e4ec7e8 <line:143:3, col:15> col:15 tm_zone 'const char *'
|-RecordDecl 0x55be7e4ec838 <line:147:1, line:151:3> line:147:8 struct itimerspec definition
| |-FieldDecl 0x55be7e4ec908 <line:149:5, col:21> col:21 it_interval 'struct timespec':'struct timespec'
| `-FieldDecl 0x55be7e4ec978 <line:150:5, col:21> col:21 it_value 'struct timespec':'struct timespec'
|-RecordDecl 0x55be7e4eca20 <line:152:1, col:8> col:8 struct sigevent
|-FunctionDecl 0x55be7e4ecbf0 <line:154:1, col:68> col:16 clock 'clock_t (void)' extern
| `-NoThrowAttr 0x55be7e4ecc90 <col:45>
|-FunctionDecl 0x55be7e4ece70 <line:155:1, col:77> col:15 time 'time_t (time_t *)' extern
| |-ParmVarDecl 0x55be7e4ecd60 <col:21, col:29> col:29 __timer 'time_t *'
| `-NoThrowAttr 0x55be7e4ecf18 <col:54>
|-FunctionDecl 0x55be7e4ed118 <line:156:1, line:157:73> line:156:15 difftime 'double (time_t, time_t)' extern
| |-ParmVarDecl 0x55be7e4ecf80 <col:25, col:32> col:32 __time1 'time_t':'long'
| |-ParmVarDecl 0x55be7e4ecff8 <col:41, col:48> col:48 __time0 'time_t':'long'
| |-NoThrowAttr 0x55be7e4ed1c8 <line:157:22>
| `-ConstAttr 0x55be7e4ed220 <col:63>
|-FunctionDecl 0x55be7e4ee050 <line:158:1, col:79> col:15 mktime 'time_t (struct tm *)' extern
| |-ParmVarDecl 0x55be7e4ed318 <col:23, col:34> col:34 __tp 'struct tm *'
| `-NoThrowAttr 0x55be7e4ee0f8 <col:56>
|-FunctionDecl 0x55be7e4ee4a0 <line:159:1, line:161:77> line:159:15 strftime 'size_t (char *restrict, size_t, const char *restrict, const struct tm *restrict)' extern
| |-ParmVarDecl 0x55be7e4ee168 <col:25, col:42> col:42 __s 'char *restrict'
| |-ParmVarDecl 0x55be7e4ee1e0 <col:47, col:54> col:54 __maxsize 'size_t':'unsigned long'
| |-ParmVarDecl 0x55be7e4ee260 <line:160:4, col:27> col:27 __format 'const char *restrict'
| |-ParmVarDecl 0x55be7e4ee358 <line:161:4, col:32> col:32 __tp 'const struct tm *restrict'
| `-NoThrowAttr 0x55be7e4ee560 <col:54>
|-RecordDecl 0x55be7e4ee5b8 <line:163:9, line:170:1> line:163:16 struct __locale_struct definition
| |-RecordDecl 0x55be7e4ee668 parent 0x55be7e47ee18 <line:165:3, col:10> col:10 struct __locale_data
| |-FieldDecl 0x55be7e4ee8c8 <col:3, col:37> col:25 __locales 'struct __locale_data *[13]'
| |-FieldDecl 0x55be7e4ee968 <line:166:3, col:29> col:29 __ctype_b 'const unsigned short *'
| |-FieldDecl 0x55be7e4ee9d0 <line:167:3, col:14> col:14 __ctype_tolower 'const int *'
| |-FieldDecl 0x55be7e4eea38 <line:168:3, col:14> col:14 __ctype_toupper 'const int *'
| `-FieldDecl 0x55be7e4eeb28 <line:169:3, col:25> col:15 __names 'const char *[13]'
|-TypedefDecl 0x55be7e4eec48 <line:163:1, line:170:4> col:4 referenced __locale_t 'struct __locale_struct *'
| `-PointerType 0x55be7e4eebf0 'struct __locale_struct *'
|   `-ElaboratedType 0x55be7e4eeb80 'struct __locale_struct' sugar
|     `-RecordType 0x55be7e4ee640 'struct __locale_struct'
|       `-Record 0x55be7e4ee5b8 '__locale_struct'
|-TypedefDecl 0x55be7e4eecf8 <line:171:1, col:20> col:20 locale_t '__locale_t':'struct __locale_struct *'
| `-TypedefType 0x55be7e4eecc0 '__locale_t' sugar
|   |-Typedef 0x55be7e4eec48 '__locale_t'
|   `-PointerType 0x55be7e4eebf0 'struct __locale_struct *'
|     `-ElaboratedType 0x55be7e4eeb80 'struct __locale_struct' sugar
|       `-RecordType 0x55be7e4ee640 'struct __locale_struct'
|         `-Record 0x55be7e4ee5b8 '__locale_struct'
|-FunctionDecl 0x55be7e4f0110 <line:172:1, line:175:63> line:172:15 strftime_l 'size_t (char *restrict, size_t, const char *restrict, const struct tm *restrict, __locale_t)' extern
| |-ParmVarDecl 0x55be7e4eed68 <col:27, col:44> col:44 __s 'char *restrict'
| |-ParmVarDecl 0x55be7e4eede0 <col:49, col:56> col:56 __maxsize 'size_t':'unsigned long'
| |-ParmVarDecl 0x55be7e4eee60 <line:173:6, col:29> col:29 __format 'const char *restrict'
| |-ParmVarDecl 0x55be7e4eeef0 <line:174:6, col:34> col:34 __tp 'const struct tm *restrict'
| |-ParmVarDecl 0x55be7e4eef68 <line:175:6, col:17> col:17 __loc '__locale_t':'struct __locale_struct *'
| `-NoThrowAttr 0x55be7e4f01d8 <col:40>
|-FunctionDecl 0x55be7e4f03c8 <line:177:1, col:89> col:19 gmtime 'struct tm *(const time_t *)' extern
| |-ParmVarDecl 0x55be7e4f02a0 <col:27, col:41> col:41 __timer 'const time_t *'
| `-NoThrowAttr 0x55be7e4f0470 <col:66>
|-FunctionDecl 0x55be7e4f0580 <line:178:1, col:92> col:19 localtime 'struct tm *(const time_t *)' extern
| |-ParmVarDecl 0x55be7e4f04d8 <col:30, col:44> col:44 __timer 'const time_t *'
| `-NoThrowAttr 0x55be7e4f0628 <col:69>
|-FunctionDecl 0x55be7e4f0858 <line:180:1, line:181:75> line:180:19 gmtime_r 'struct tm *(const time_t *restrict, struct tm *restrict)' extern
| |-ParmVarDecl 0x55be7e4f0690 <col:29, col:54> col:54 __timer 'const time_t *restrict'
| |-ParmVarDecl 0x55be7e4f0720 <line:181:8, col:30> col:30 __tp 'struct tm *restrict'
| `-NoThrowAttr 0x55be7e4f0908 <col:52>
|-FunctionDecl 0x55be7e4f0ab0 <line:182:1, line:183:78> line:182:19 localtime_r 'struct tm *(const time_t *restrict, struct tm *restrict)' extern
| |-ParmVarDecl 0x55be7e4f0970 <col:32, col:57> col:57 __timer 'const time_t *restrict'
| |-ParmVarDecl 0x55be7e4f0a00 <line:183:11, col:33> col:33 __tp 'struct tm *restrict'
| `-NoThrowAttr 0x55be7e4f0b60 <col:55>
|-FunctionDecl 0x55be7e4f0cf8 <line:185:1, col:85> col:14 asctime 'char *(const struct tm *)' extern
| |-ParmVarDecl 0x55be7e4f0be0 <col:23, col:40> col:40 __tp 'const struct tm *'
| `-NoThrowAttr 0x55be7e4f0da0 <col:62>
|-FunctionDecl 0x55be7e4f0f18 <line:186:1, col:83> col:14 ctime 'char *(const time_t *)' extern
| |-ParmVarDecl 0x55be7e4f0e08 <col:21, col:35> col:35 __timer 'const time_t *'
| `-NoThrowAttr 0x55be7e4f0fc0 <col:60>
|-FunctionDecl 0x55be7e4f12b8 <line:188:1, line:189:67> line:188:14 asctime_r 'char *(const struct tm *restrict, char *restrict)' extern
| |-ParmVarDecl 0x55be7e4f1118 <col:25, col:53> col:53 __tp 'const struct tm *restrict'
| |-ParmVarDecl 0x55be7e4f1198 <line:189:4, col:21> col:21 __buf 'char *restrict'
| `-NoThrowAttr 0x55be7e4f1368 <col:44>
|-FunctionDecl 0x55be7e4f1578 <line:190:1, line:191:72> line:190:14 ctime_r 'char *(const time_t *restrict, char *restrict)' extern
| |-ParmVarDecl 0x55be7e4f13d0 <col:23, col:48> col:48 __timer 'const time_t *restrict'
| |-ParmVarDecl 0x55be7e4f1450 <line:191:9, col:26> col:26 __buf 'char *restrict'
| `-NoThrowAttr 0x55be7e4f1628 <col:49>
|-VarDecl 0x55be7e4f1728 <line:192:1, col:24> col:14 __tzname 'char *[2]' extern
|-VarDecl 0x55be7e4f17a8 <line:193:1, col:12> col:12 __daylight 'int' extern
|-VarDecl 0x55be7e4f1828 <line:194:1, col:17> col:17 __timezone 'long' extern
|-VarDecl 0x55be7e4f18f0 <line:195:1, col:22> col:14 tzname 'char *[2]' extern
|-FunctionDecl 0x55be7e4f1a20 <line:196:1, col:65> col:13 tzset 'void (void)' extern
| `-NoThrowAttr 0x55be7e4f1ac0 <col:42>
|-VarDecl 0x55be7e4f1b30 <line:197:1, col:12> col:12 daylight 'int' extern
|-VarDecl 0x55be7e4f1bb0 <line:198:1, col:17> col:17 timezone 'long' extern
|-FunctionDecl 0x55be7e4f1d38 <line:199:1, col:80> col:12 stime 'int (const time_t *)' extern
| |-ParmVarDecl 0x55be7e4f1c28 <col:19, col:33> col:33 __when 'const time_t *'
| `-NoThrowAttr 0x55be7e4f1de0 <col:57>
|-FunctionDecl 0x55be7e4f1ef0 <line:200:1, col:79> col:15 timegm 'time_t (struct tm *)' extern
| |-ParmVarDecl 0x55be7e4f1e60 <col:23, col:34> col:34 __tp 'struct tm *'
| `-NoThrowAttr 0x55be7e4f1f98 <col:56>
|-FunctionDecl 0x55be7e4f20d0 <line:201:1, col:82> col:15 timelocal 'time_t (struct tm *)' extern
| |-ParmVarDecl 0x55be7e4f2018 <col:26, col:37> col:37 __tp 'struct tm *'
| `-NoThrowAttr 0x55be7e4f2178 <col:59>
|-FunctionDecl 0x55be7e4f2280 <line:202:1, col:99> col:12 dysize 'int (int)' extern
| |-ParmVarDecl 0x55be7e4f21e8 <col:20, col:24> col:24 __year 'int'
| |-NoThrowAttr 0x55be7e4f2328 <col:48>
| `-ConstAttr 0x55be7e4f2380 <col:89>
|-FunctionDecl 0x55be7e4f25e8 <line:203:1, line:204:37> line:203:12 nanosleep 'int (const struct timespec *, struct timespec *)' extern
| |-ParmVarDecl 0x55be7e4f2438 <col:23, col:46> col:46 __requested_time 'const struct timespec *'
| `-ParmVarDecl 0x55be7e4f24c8 <line:204:9, col:26> col:26 __remaining 'struct timespec *'
|-FunctionDecl 0x55be7e4f2848 <line:205:1, col:111> col:12 clock_getres 'int (clockid_t, struct timespec *)' extern
| |-ParmVarDecl 0x55be7e4f26d8 <col:26, col:36> col:36 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x55be7e4f2768 <col:48, col:65> col:65 __res 'struct timespec *'
| `-NoThrowAttr 0x55be7e4f28f8 <col:88>
|-FunctionDecl 0x55be7e4f2a90 <line:206:1, col:111> col:12 clock_gettime 'int (clockid_t, struct timespec *)' extern
| |-ParmVarDecl 0x55be7e4f2960 <col:27, col:37> col:37 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x55be7e4f29f0 <col:49, col:66> col:66 __tp 'struct timespec *'
| `-NoThrowAttr 0x55be7e4f2b40 <col:88>
|-FunctionDecl 0x55be7e4f2d58 <line:207:1, line:208:45> line:207:12 clock_settime 'int (clockid_t, const struct timespec *)' extern
| |-ParmVarDecl 0x55be7e4f2ba8 <col:27, col:37> col:37 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x55be7e4f2c38 <col:49, col:72> col:72 __tp 'const struct timespec *'
| `-NoThrowAttr 0x55be7e4f2e08 <line:208:22>
|-FunctionDecl 0x55be7e4f3178 <line:209:1, line:211:30> line:209:12 clock_nanosleep 'int (clockid_t, int, const struct timespec *, struct timespec *)' extern
| |-ParmVarDecl 0x55be7e4f2e70 <col:29, col:39> col:39 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x55be7e4f2ef0 <col:51, col:55> col:55 __flags 'int'
| |-ParmVarDecl 0x55be7e4f2f80 <line:210:8, col:31> col:31 __req 'const struct timespec *'
| `-ParmVarDecl 0x55be7e4f3010 <line:211:8, col:25> col:25 __rem 'struct timespec *'
|-FunctionDecl 0x55be7e4f3478 <line:212:1, col:108> col:12 clock_getcpuclockid 'int (pid_t, clockid_t *)' extern
| |-ParmVarDecl 0x55be7e4f3278 <col:33, col:39> col:39 __pid 'pid_t':'int'
| |-ParmVarDecl 0x55be7e4f3350 <col:46, col:57> col:57 __clock_id 'clockid_t *'
| `-NoThrowAttr 0x55be7e4f3528 <col:85>
|-FunctionDecl 0x55be7e4f3918 <line:213:1, line:215:75> line:213:12 timer_create 'int (clockid_t, struct sigevent *restrict, timer_t *restrict)' extern
| |-ParmVarDecl 0x55be7e4f3590 <col:26, col:36> col:36 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x55be7e4f36c8 <line:214:5, col:33> col:33 __evp 'struct sigevent *restrict'
| |-ParmVarDecl 0x55be7e4f37d0 <line:215:5, col:25> col:25 __timerid 'timer_t *restrict'
| `-NoThrowAttr 0x55be7e4f39d0 <col:52>
|-FunctionDecl 0x55be7e4f3b48 <line:216:1, col:84> col:12 timer_delete 'int (timer_t)' extern
| |-ParmVarDecl 0x55be7e4f3a38 <col:26, col:34> col:34 __timerid 'timer_t':'void *'
| `-NoThrowAttr 0x55be7e4f3bf0 <col:61>
|-FunctionDecl 0x55be7e4f40f0 <line:217:1, line:219:85> line:217:12 timer_settime 'int (timer_t, int, const struct itimerspec *restrict, struct itimerspec *restrict)' extern
| |-ParmVarDecl 0x55be7e4f3c58 <col:27, col:35> col:35 __timerid 'timer_t':'void *'
| |-ParmVarDecl 0x55be7e4f3cd8 <col:46, col:50> col:50 __flags 'int'
| |-ParmVarDecl 0x55be7e4f3e08 <line:218:6, col:42> col:42 __value 'const struct itimerspec *restrict'
| |-ParmVarDecl 0x55be7e4f3ef8 <line:219:6, col:36> col:36 __ovalue 'struct itimerspec *restrict'
| `-NoThrowAttr 0x55be7e4f41b0 <col:62>
|-FunctionDecl 0x55be7e4f43c8 <line:220:1, line:221:45> line:220:12 timer_gettime 'int (timer_t, struct itimerspec *)' extern
| |-ParmVarDecl 0x55be7e4f4218 <col:27, col:35> col:35 __timerid 'timer_t':'void *'
| |-ParmVarDecl 0x55be7e4f42a8 <col:46, col:65> col:65 __value 'struct itimerspec *'
| `-NoThrowAttr 0x55be7e4f4478 <line:221:22>
|-FunctionDecl 0x55be7e4f4578 <line:222:1, col:88> col:12 timer_getoverrun 'int (timer_t)' extern
| |-ParmVarDecl 0x55be7e4f44e0 <col:30, col:38> col:38 __timerid 'timer_t':'void *'
| `-NoThrowAttr 0x55be7e4f4620 <col:65>
|-TypedefDecl 0x55be7e4f4690 <line:224:1, col:27> col:27 referenced pthread_t 'unsigned long'
| `-BuiltinType 0x55be7e47efd0 'unsigned long'
|-RecordDecl 0x55be7e4f46e8 <line:225:1, line:229:1> line:225:7 union pthread_attr_t definition
| |-FieldDecl 0x55be7e4f4830 <line:227:3, col:17> col:8 __size 'char [56]'
| `-FieldDecl 0x55be7e4f4898 <line:228:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x55be7e4f4948 <line:230:1, col:30> col:30 referenced pthread_attr_t 'union pthread_attr_t':'union pthread_attr_t'
| `-ElaboratedType 0x55be7e4f48f0 'union pthread_attr_t' sugar
|   `-RecordType 0x55be7e4f4770 'union pthread_attr_t'
|     `-Record 0x55be7e4f46e8 'pthread_attr_t'
|-RecordDecl 0x55be7e4f49a0 <line:231:9, line:235:1> line:231:16 struct __pthread_internal_list definition
| |-FieldDecl 0x55be7e4f4b18 <line:233:3, col:35> col:35 __prev 'struct __pthread_internal_list *'
| `-FieldDecl 0x55be7e4f4b90 <line:234:3, col:35> col:35 __next 'struct __pthread_internal_list *'
|-TypedefDecl 0x55be7e4f4c40 <line:231:1, line:235:3> col:3 referenced __pthread_list_t 'struct __pthread_internal_list':'struct __pthread_internal_list'
| `-ElaboratedType 0x55be7e4f4be0 'struct __pthread_internal_list' sugar
|   `-RecordType 0x55be7e4f4a20 'struct __pthread_internal_list'
|     `-Record 0x55be7e4f49a0 '__pthread_internal_list'
|-RecordDecl 0x55be7e4f4cb0 <line:236:9, line:250:1> line:236:9 union definition
| |-RecordDecl 0x55be7e4f4d58 parent 0x55be7e47ee18 <line:238:3, line:247:3> line:238:10 struct __pthread_mutex_s definition
| | |-FieldDecl 0x55be7e4f4e30 <line:240:5, col:9> col:9 __lock 'int'
| | |-FieldDecl 0x55be7e4f4e98 <line:241:5, col:18> col:18 __count 'unsigned int'
| | |-FieldDecl 0x55be7e4f4f00 <line:242:5, col:9> col:9 __owner 'int'
| | |-FieldDecl 0x55be7e4f4f68 <line:243:5, col:18> col:18 __nusers 'unsigned int'
| | |-FieldDecl 0x55be7e4f4fd0 <line:244:5, col:9> col:9 __kind 'int'
| | |-FieldDecl 0x55be7e4f5038 <line:245:5, col:9> col:9 __spins 'int'
| | `-FieldDecl 0x55be7e4f9110 <line:246:5, col:22> col:22 __list '__pthread_list_t':'struct __pthread_internal_list'
| |-FieldDecl 0x55be7e4f91c0 <line:238:3, line:247:5> col:5 __data 'struct __pthread_mutex_s':'struct __pthread_mutex_s'
| |-FieldDecl 0x55be7e4f92b0 <line:248:3, col:17> col:8 __size 'char [40]'
| `-FieldDecl 0x55be7e4f9318 <line:249:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x55be7e4f94a0 <line:236:1, line:250:3> col:3 referenced pthread_mutex_t 'union pthread_mutex_t':'pthread_mutex_t'
| `-ElaboratedType 0x55be7e4f9440 'union pthread_mutex_t' sugar
|   `-RecordType 0x55be7e4f4d30 'pthread_mutex_t'
|     `-Record 0x55be7e4f4cb0 ''
|-RecordDecl 0x55be7e4f9510 <line:251:9, line:255:1> line:251:9 union definition
| |-FieldDecl 0x55be7e4f9650 <line:253:3, col:16> col:8 __size 'char [4]'
| `-FieldDecl 0x55be7e4f96b8 <line:254:3, col:7> col:7 __align 'int'
|-TypedefDecl 0x55be7e4f9770 <line:251:1, line:255:3> col:3 referenced pthread_mutexattr_t 'union pthread_mutexattr_t':'pthread_mutexattr_t'
| `-ElaboratedType 0x55be7e4f9710 'union pthread_mutexattr_t' sugar
|   `-RecordType 0x55be7e4f9590 'pthread_mutexattr_t'
|     `-Record 0x55be7e4f9510 ''
|-RecordDecl 0x55be7e4f97e0 <line:256:9, line:271:1> line:256:9 union definition
| |-RecordDecl 0x55be7e4f9888 <line:258:3, line:268:3> line:258:3 struct definition
| | |-FieldDecl 0x55be7e4f9950 <line:260:5, col:9> col:9 __lock 'int'
| | |-FieldDecl 0x55be7e4f99b8 <line:261:5, col:18> col:18 __futex 'unsigned int'
| | |-FieldDecl 0x55be7e4f9a20 <line:262:19, col:42> col:42 __total_seq 'unsigned long long'
| | |-FieldDecl 0x55be7e4f9a88 <line:263:19, col:42> col:42 __wakeup_seq 'unsigned long long'
| | |-FieldDecl 0x55be7e4f9af0 <line:264:19, col:42> col:42 __woken_seq 'unsigned long long'
| | |-FieldDecl 0x55be7e4f9b58 <line:265:5, col:11> col:11 __mutex 'void *'
| | |-FieldDecl 0x55be7e4f9bc0 <line:266:5, col:18> col:18 __nwaiters 'unsigned int'
| | `-FieldDecl 0x55be7e4f9c28 <line:267:5, col:18> col:18 __broadcast_seq 'unsigned int'
| |-FieldDecl 0x55be7e4f9ce0 <line:258:3, line:268:5> col:5 __data 'struct (anonymous struct at ./split_6/mix019_pso.oepc_false-unreach-call.i:258:3)':'struct pthread_cond_t::(anonymous at ./split_6/mix019_pso.oepc_false-unreach-call.i:258:3)'
| |-FieldDecl 0x55be7e4f9dd0 <line:269:3, col:17> col:8 __size 'char [48]'
| `-FieldDecl 0x55be7e4f9e38 <line:270:17, col:31> col:31 __align 'long long'
|-TypedefDecl 0x55be7e4f9f70 <line:256:1, line:271:3> col:3 referenced pthread_cond_t 'union pthread_cond_t':'pthread_cond_t'
| `-ElaboratedType 0x55be7e4f9f10 'union pthread_cond_t' sugar
|   `-RecordType 0x55be7e4f9860 'pthread_cond_t'
|     `-Record 0x55be7e4f97e0 ''
|-RecordDecl 0x55be7e4f9fe0 <line:272:9, line:276:1> line:272:9 union definition
| |-FieldDecl 0x55be7e4fb130 <line:274:3, col:16> col:8 __size 'char [4]'
| `-FieldDecl 0x55be7e4fb198 <line:275:3, col:7> col:7 __align 'int'
|-TypedefDecl 0x55be7e4fb250 <line:272:1, line:276:3> col:3 referenced pthread_condattr_t 'union pthread_condattr_t':'pthread_condattr_t'
| `-ElaboratedType 0x55be7e4fb1f0 'union pthread_condattr_t' sugar
|   `-RecordType 0x55be7e4fa060 'pthread_condattr_t'
|     `-Record 0x55be7e4f9fe0 ''
|-TypedefDecl 0x55be7e4fb2d8 <line:277:1, col:22> col:22 referenced pthread_key_t 'unsigned int'
| `-BuiltinType 0x55be7e47efb0 'unsigned int'
|-TypedefDecl 0x55be7e4fb348 <line:278:1, col:13> col:13 referenced pthread_once_t 'int'
| `-BuiltinType 0x55be7e47ef10 'int'
|-RecordDecl 0x55be7e4fb3a0 <line:279:9, line:297:1> line:279:9 union definition
| |-RecordDecl 0x55be7e4fb448 <line:281:3, line:294:3> line:281:3 struct definition
| | |-FieldDecl 0x55be7e4fb510 <line:283:5, col:9> col:9 __lock 'int'
| | |-FieldDecl 0x55be7e4fb578 <line:284:5, col:18> col:18 __nr_readers 'unsigned int'
| | |-FieldDecl 0x55be7e4fb5e0 <line:285:5, col:18> col:18 __readers_wakeup 'unsigned int'
| | |-FieldDecl 0x55be7e4fb648 <line:286:5, col:18> col:18 __writer_wakeup 'unsigned int'
| | |-FieldDecl 0x55be7e4fb6b0 <line:287:5, col:18> col:18 __nr_readers_queued 'unsigned int'
| | |-FieldDecl 0x55be7e4fb718 <line:288:5, col:18> col:18 __nr_writers_queued 'unsigned int'
| | |-FieldDecl 0x55be7e4fb780 <line:289:5, col:9> col:9 __writer 'int'
| | |-FieldDecl 0x55be7e4fb7e8 <line:290:5, col:9> col:9 __shared 'int'
| | |-FieldDecl 0x55be7e4fb850 <line:291:5, col:23> col:23 __pad1 'unsigned long'
| | |-FieldDecl 0x55be7e4fb8b8 <line:292:5, col:23> col:23 __pad2 'unsigned long'
| | `-FieldDecl 0x55be7e4fb920 <line:293:5, col:18> col:18 __flags 'unsigned int'
| |-FieldDecl 0x55be7e4fb9d0 <line:281:3, line:294:5> col:5 __data 'struct (anonymous struct at ./split_6/mix019_pso.oepc_false-unreach-call.i:281:3)':'struct pthread_rwlock_t::(anonymous at ./split_6/mix019_pso.oepc_false-unreach-call.i:281:3)'
| |-FieldDecl 0x55be7e4fba78 <line:295:3, col:17> col:8 __size 'char [56]'
| `-FieldDecl 0x55be7e4fbae0 <line:296:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x55be7e4fbc30 <line:279:1, line:297:3> col:3 referenced pthread_rwlock_t 'union pthread_rwlock_t':'pthread_rwlock_t'
| `-ElaboratedType 0x55be7e4fbbd0 'union pthread_rwlock_t' sugar
|   `-RecordType 0x55be7e4fb420 'pthread_rwlock_t'
|     `-Record 0x55be7e4fb3a0 ''
|-RecordDecl 0x55be7e4fbca0 <line:298:9, line:302:1> line:298:9 union definition
| |-FieldDecl 0x55be7e4fbde0 <line:300:3, col:16> col:8 __size 'char [8]'
| `-FieldDecl 0x55be7e4fbe48 <line:301:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x55be7e4fbf00 <line:298:1, line:302:3> col:3 referenced pthread_rwlockattr_t 'union pthread_rwlockattr_t':'pthread_rwlockattr_t'
| `-ElaboratedType 0x55be7e4fbea0 'union pthread_rwlockattr_t' sugar
|   `-RecordType 0x55be7e4fbd20 'pthread_rwlockattr_t'
|     `-Record 0x55be7e4fbca0 ''
|-TypedefDecl 0x55be7e4fbf88 <line:303:1, col:22> col:22 referenced pthread_spinlock_t 'volatile int'
| `-QualType 0x55be7e47ef14 'volatile int' volatile
|   `-BuiltinType 0x55be7e47ef10 'int'
|-RecordDecl 0x55be7e4fbfe0 <line:304:9, line:308:1> line:304:9 union definition
| |-FieldDecl 0x55be7e4fd140 <line:306:3, col:17> col:8 __size 'char [32]'
| `-FieldDecl 0x55be7e4fd1a8 <line:307:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x55be7e4fd260 <line:304:1, line:308:3> col:3 referenced pthread_barrier_t 'union pthread_barrier_t':'pthread_barrier_t'
| `-ElaboratedType 0x55be7e4fd200 'union pthread_barrier_t' sugar
|   `-RecordType 0x55be7e4fc060 'pthread_barrier_t'
|     `-Record 0x55be7e4fbfe0 ''
|-RecordDecl 0x55be7e4fd2d0 <line:309:9, line:313:1> line:309:9 union definition
| |-FieldDecl 0x55be7e4fd3d0 <line:311:3, col:16> col:8 __size 'char [4]'
| `-FieldDecl 0x55be7e4fd438 <line:312:3, col:7> col:7 __align 'int'
|-TypedefDecl 0x55be7e4fd4f0 <line:309:1, line:313:3> col:3 referenced pthread_barrierattr_t 'union pthread_barrierattr_t':'pthread_barrierattr_t'
| `-ElaboratedType 0x55be7e4fd490 'union pthread_barrierattr_t' sugar
|   `-RecordType 0x55be7e4fd350 'pthread_barrierattr_t'
|     `-Record 0x55be7e4fd2d0 ''
|-TypedefDecl 0x55be7e4fd608 <line:314:1, col:29> col:18 referenced __jmp_buf 'long [8]'
| `-ConstantArrayType 0x55be7e4fd5a0 'long [8]' 8 
|   `-BuiltinType 0x55be7e47ef30 'long'
|-EnumDecl 0x55be7e4fd660 <line:315:1, line:319:1> line:315:1
| |-EnumConstantDecl 0x55be7e4fd728 <line:317:3> col:3 PTHREAD_CREATE_JOINABLE 'int'
| `-EnumConstantDecl 0x55be7e4fd778 <line:318:3> col:3 PTHREAD_CREATE_DETACHED 'int'
|-EnumDecl 0x55be7e4fd7c8 <line:320:1, line:331:1> line:320:1
| |-EnumConstantDecl 0x55be7e4fd898 <line:322:3> col:3 referenced PTHREAD_MUTEX_TIMED_NP 'int'
| |-EnumConstantDecl 0x55be7e4fd8e8 <line:323:3> col:3 referenced PTHREAD_MUTEX_RECURSIVE_NP 'int'
| |-EnumConstantDecl 0x55be7e4fd938 <line:324:3> col:3 referenced PTHREAD_MUTEX_ERRORCHECK_NP 'int'
| |-EnumConstantDecl 0x55be7e4fd988 <line:325:3> col:3 PTHREAD_MUTEX_ADAPTIVE_NP 'int'
| |-EnumConstantDecl 0x55be7e4fda10 <line:327:3, col:26> col:3 referenced PTHREAD_MUTEX_NORMAL 'int'
| | `-ConstantExpr 0x55be7e4fd9f8 <col:26> 'int'
| |   `-DeclRefExpr 0x55be7e4fd9d8 <col:26> 'int' EnumConstant 0x55be7e4fd898 'PTHREAD_MUTEX_TIMED_NP' 'int'
| |-EnumConstantDecl 0x55be7e4fda98 <line:328:3, col:29> col:3 PTHREAD_MUTEX_RECURSIVE 'int'
| | `-ConstantExpr 0x55be7e4fda80 <col:29> 'int'
| |   `-DeclRefExpr 0x55be7e4fda60 <col:29> 'int' EnumConstant 0x55be7e4fd8e8 'PTHREAD_MUTEX_RECURSIVE_NP' 'int'
| |-EnumConstantDecl 0x55be7e4fdb20 <line:329:3, col:30> col:3 PTHREAD_MUTEX_ERRORCHECK 'int'
| | `-ConstantExpr 0x55be7e4fdb08 <col:30> 'int'
| |   `-DeclRefExpr 0x55be7e4fdae8 <col:30> 'int' EnumConstant 0x55be7e4fd938 'PTHREAD_MUTEX_ERRORCHECK_NP' 'int'
| `-EnumConstantDecl 0x55be7e4fdba8 <line:330:3, col:27> col:3 PTHREAD_MUTEX_DEFAULT 'int'
|   `-ConstantExpr 0x55be7e4fdb90 <col:27> 'int'
|     `-DeclRefExpr 0x55be7e4fdb70 <col:27> 'int' EnumConstant 0x55be7e4fda10 'PTHREAD_MUTEX_NORMAL' 'int'
|-EnumDecl 0x55be7e4fdbf8 <line:332:1, line:338:1> line:332:1
| |-EnumConstantDecl 0x55be7e4fdcc8 <line:334:3> col:3 referenced PTHREAD_MUTEX_STALLED 'int'
| |-EnumConstantDecl 0x55be7e4fdd50 <line:335:3, col:30> col:3 PTHREAD_MUTEX_STALLED_NP 'int'
| | `-ConstantExpr 0x55be7e4fdd38 <col:30> 'int'
| |   `-DeclRefExpr 0x55be7e4fdd18 <col:30> 'int' EnumConstant 0x55be7e4fdcc8 'PTHREAD_MUTEX_STALLED' 'int'
| |-EnumConstantDecl 0x55be7e4fdda0 <line:336:3> col:3 referenced PTHREAD_MUTEX_ROBUST 'int'
| `-EnumConstantDecl 0x55be7e4fde28 <line:337:3, col:29> col:3 PTHREAD_MUTEX_ROBUST_NP 'int'
|   `-ConstantExpr 0x55be7e4fde10 <col:29> 'int'
|     `-DeclRefExpr 0x55be7e4fddf0 <col:29> 'int' EnumConstant 0x55be7e4fdda0 'PTHREAD_MUTEX_ROBUST' 'int'
|-EnumDecl 0x55be7e4fde78 <line:339:1, line:344:1> line:339:1
| |-EnumConstantDecl 0x55be7e4fdf48 <line:341:3> col:3 PTHREAD_PRIO_NONE 'int'
| |-EnumConstantDecl 0x55be7e4fdf98 <line:342:3> col:3 PTHREAD_PRIO_INHERIT 'int'
| `-EnumConstantDecl 0x55be7e4fdfe8 <line:343:3> col:3 PTHREAD_PRIO_PROTECT 'int'
|-EnumDecl 0x55be7e4fe038 <line:345:1, line:351:1> line:345:1
| |-EnumConstantDecl 0x55be7e4fe150 <line:347:3> col:3 referenced PTHREAD_RWLOCK_PREFER_READER_NP 'int'
| |-EnumConstantDecl 0x55be7e4fe1a0 <line:348:3> col:3 PTHREAD_RWLOCK_PREFER_WRITER_NP 'int'
| |-EnumConstantDecl 0x55be7e4fe1f0 <line:349:3> col:3 PTHREAD_RWLOCK_PREFER_WRITER_NONRECURSIVE_NP 'int'
| `-EnumConstantDecl 0x55be7e4fe278 <line:350:3, col:31> col:3 PTHREAD_RWLOCK_DEFAULT_NP 'int'
|   `-ConstantExpr 0x55be7e4fe260 <col:31> 'int'
|     `-DeclRefExpr 0x55be7e4fe240 <col:31> 'int' EnumConstant 0x55be7e4fe150 'PTHREAD_RWLOCK_PREFER_READER_NP' 'int'
|-EnumDecl 0x55be7e4fe2c8 <line:352:1, line:356:1> line:352:1
| |-EnumConstantDecl 0x55be7e4fe398 <line:354:3> col:3 PTHREAD_INHERIT_SCHED 'int'
| `-EnumConstantDecl 0x55be7e4fe3e8 <line:355:3> col:3 PTHREAD_EXPLICIT_SCHED 'int'
|-EnumDecl 0x55be7e4fe438 <line:357:1, line:361:1> line:357:1
| |-EnumConstantDecl 0x55be7e4fe508 <line:359:3> col:3 PTHREAD_SCOPE_SYSTEM 'int'
| `-EnumConstantDecl 0x55be7e4fe558 <line:360:3> col:3 PTHREAD_SCOPE_PROCESS 'int'
|-EnumDecl 0x55be7e4fe5a8 <line:362:1, line:366:1> line:362:1
| |-EnumConstantDecl 0x55be7e4fe678 <line:364:3> col:3 PTHREAD_PROCESS_PRIVATE 'int'
| `-EnumConstantDecl 0x55be7e4fe6c8 <line:365:3> col:3 PTHREAD_PROCESS_SHARED 'int'
|-RecordDecl 0x55be7e4fe718 <line:367:1, line:373:1> line:367:8 struct _pthread_cleanup_buffer definition
| |-FieldDecl 0x55be7e4fe958 <line:369:3, col:28> col:10 __routine 'void (*)(void *)'
| |-FieldDecl 0x55be7e4fe9c0 <line:370:3, col:9> col:9 __arg 'void *'
| |-FieldDecl 0x55be7e4fea28 <line:371:3, col:7> col:7 __canceltype 'int'
| `-FieldDecl 0x55be7e4feb48 <line:372:3, col:35> col:35 __prev 'struct _pthread_cleanup_buffer *'
|-EnumDecl 0x55be7e4feb98 <line:374:1, line:378:1> line:374:1
| |-EnumConstantDecl 0x55be7e4fec68 <line:376:3> col:3 PTHREAD_CANCEL_ENABLE 'int'
| `-EnumConstantDecl 0x55be7e4fecb8 <line:377:3> col:3 PTHREAD_CANCEL_DISABLE 'int'
|-EnumDecl 0x55be7e4fed08 <line:379:1, line:383:1> line:379:1
| |-EnumConstantDecl 0x55be7e4fedd8 <line:381:3> col:3 PTHREAD_CANCEL_DEFERRED 'int'
| `-EnumConstantDecl 0x55be7e4fee28 <line:382:3> col:3 PTHREAD_CANCEL_ASYNCHRONOUS 'int'
|-FunctionDecl 0x55be7e4ff488 <line:385:1, line:388:96> line:385:12 used pthread_create 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' extern
| |-ParmVarDecl 0x55be7e4fef20 <col:28, col:50> col:50 __newthread 'pthread_t *restrict'
| |-ParmVarDecl 0x55be7e4ff030 <line:386:7, col:40> col:40 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x55be7e4ff270 <line:387:7, col:39> col:15 __start_routine 'void *(*)(void *)'
| |-ParmVarDecl 0x55be7e4ff2f0 <line:388:7, col:24> col:24 __arg 'void *restrict'
| |-NoThrowAttr 0x55be7e4ff548 <col:47>
| |-NonNullAttr 0x55be7e4ff5a0 <col:77, col:94> 1 3
| `-CallbackAttr 0x55be7e4ff5d8 <line:385:12> Implicit 2 3
|-FunctionDecl 0x55be7e4ff700 <line:389:1, col:72> col:13 pthread_exit 'void (void *) __attribute__((noreturn))' extern
| `-ParmVarDecl 0x55be7e4ff630 <col:27, col:33> col:33 __retval 'void *'
|-FunctionDecl 0x55be7e4ff958 <line:390:1, col:64> col:12 pthread_join 'int (pthread_t, void **)' extern
| |-ParmVarDecl 0x55be7e4ff7b8 <col:26, col:36> col:36 __th 'pthread_t':'unsigned long'
| `-ParmVarDecl 0x55be7e4ff838 <col:42, col:49> col:49 __thread_return 'void **'
|-FunctionDecl 0x55be7e4ffb28 <line:391:1, col:83> col:12 pthread_detach 'int (pthread_t)' extern
| |-ParmVarDecl 0x55be7e4ffa18 <col:28, col:38> col:38 __th 'pthread_t':'unsigned long'
| `-NoThrowAttr 0x55be7e4ffbd0 <col:60>
|-FunctionDecl 0x55be7e4ffd20 <line:392:1, col:105> col:18 pthread_self 'pthread_t (void)' extern
| |-NoThrowAttr 0x55be7e4ffdc0 <col:54>
| `-ConstAttr 0x55be7e4ffe18 <col:95>
|-FunctionDecl 0x55be7e4fffe8 <line:393:1, line:394:70> line:393:12 pthread_equal 'int (pthread_t, pthread_t)' extern
| |-ParmVarDecl 0x55be7e4ffe50 <col:27, col:37> col:37 __thread1 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x55be7e4ffec8 <col:48, col:58> col:58 __thread2 'pthread_t':'unsigned long'
| |-NoThrowAttr 0x55be7e500098 <line:394:19>
| `-ConstAttr 0x55be7e5000f0 <col:60>
|-FunctionDecl 0x55be7e501b08 <line:395:1, col:128> col:12 pthread_attr_init 'int (pthread_attr_t *)' extern
| |-ParmVarDecl 0x55be7e5019d0 <col:31, col:47> col:47 __attr 'pthread_attr_t *'
| |-NoThrowAttr 0x55be7e501bb0 <col:71>
| `-NonNullAttr 0x55be7e501c08 <col:112, col:126> 1
|-FunctionDecl 0x55be7e501d10 <line:396:1, line:397:79> line:396:12 pthread_attr_destroy 'int (pthread_attr_t *)' extern
| |-ParmVarDecl 0x55be7e501c58 <col:34, col:50> col:50 __attr 'pthread_attr_t *'
| |-NoThrowAttr 0x55be7e501db8 <line:397:22>
| `-NonNullAttr 0x55be7e501e10 <col:63, col:77> 1
|-FunctionDecl 0x55be7e502038 <line:398:1, line:400:82> line:398:12 pthread_attr_getdetachstate 'int (const pthread_attr_t *, int *)' extern
| |-ParmVarDecl 0x55be7e501e58 <col:41, col:63> col:63 __attr 'const pthread_attr_t *'
| |-ParmVarDecl 0x55be7e501ed8 <line:399:6, col:11> col:11 __detachstate 'int *'
| |-NoThrowAttr 0x55be7e5020e8 <line:400:22>
| `-NonNullAttr 0x55be7e502140 <col:63, col:80> 1 2
|-FunctionDecl 0x55be7e502348 <line:401:1, line:403:79> line:401:12 pthread_attr_setdetachstate 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x55be7e502188 <col:41, col:57> col:57 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x55be7e502208 <line:402:6, col:10> col:10 __detachstate 'int'
| |-NoThrowAttr 0x55be7e5023f8 <line:403:22>
| `-NonNullAttr 0x55be7e502450 <col:63, col:77> 1
|-FunctionDecl 0x55be7e5026a8 <line:404:1, line:406:82> line:404:12 pthread_attr_getguardsize 'int (const pthread_attr_t *, size_t *)' extern
| |-ParmVarDecl 0x55be7e502498 <col:39, col:61> col:61 __attr 'const pthread_attr_t *'
| |-ParmVarDecl 0x55be7e502540 <line:405:11, col:19> col:19 __guardsize 'size_t *'
| |-NoThrowAttr 0x55be7e502758 <line:406:22>
| `-NonNullAttr 0x55be7e5027b0 <col:63, col:80> 1 2
|-FunctionDecl 0x55be7e5039e8 <line:407:1, line:409:79> line:407:12 pthread_attr_setguardsize 'int (pthread_attr_t *, size_t)' extern
| |-ParmVarDecl 0x55be7e5027f8 <col:39, col:55> col:55 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x55be7e502870 <line:408:11, col:18> col:18 __guardsize 'size_t':'unsigned long'
| |-NoThrowAttr 0x55be7e503a98 <line:409:22>
| `-NonNullAttr 0x55be7e503af0 <col:63, col:77> 1
|-FunctionDecl 0x55be7e503d28 <line:410:1, line:412:82> line:410:12 pthread_attr_getschedparam 'int (const pthread_attr_t *restrict, struct sched_param *restrict)' extern
| |-ParmVarDecl 0x55be7e503b38 <col:40, col:73> col:73 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x55be7e503bc8 <line:411:12, col:43> col:43 __param 'struct sched_param *restrict'
| |-NoThrowAttr 0x55be7e503dd8 <line:412:22>
| `-NonNullAttr 0x55be7e503e30 <col:63, col:80> 1 2
|-FunctionDecl 0x55be7e504068 <line:413:1, line:415:97> line:413:12 pthread_attr_setschedparam 'int (pthread_attr_t *restrict, const struct sched_param *restrict)' extern
| |-ParmVarDecl 0x55be7e503e78 <col:40, col:67> col:67 __attr 'pthread_attr_t *restrict'
| |-ParmVarDecl 0x55be7e503f08 <line:414:12, line:415:12> col:12 __param 'const struct sched_param *restrict'
| |-NoThrowAttr 0x55be7e504118 <col:37>
| `-NonNullAttr 0x55be7e504170 <col:78, col:95> 1 2
|-FunctionDecl 0x55be7e504358 <line:416:1, line:418:82> line:416:12 pthread_attr_getschedpolicy 'int (const pthread_attr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x55be7e5041b8 <col:41, line:417:6> col:6 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x55be7e504238 <col:14, col:30> col:30 __policy 'int *restrict'
| |-NoThrowAttr 0x55be7e504408 <line:418:22>
| `-NonNullAttr 0x55be7e504460 <col:63, col:80> 1 2
|-FunctionDecl 0x55be7e5045e8 <line:419:1, line:420:79> line:419:12 pthread_attr_setschedpolicy 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x55be7e5044a8 <col:41, col:57> col:57 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x55be7e504528 <col:65, col:69> col:69 __policy 'int'
| |-NoThrowAttr 0x55be7e504698 <line:420:22>
| `-NonNullAttr 0x55be7e5046f0 <col:63, col:77> 1
|-FunctionDecl 0x55be7e504898 <line:421:1, line:423:82> line:421:12 pthread_attr_getinheritsched 'int (const pthread_attr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x55be7e504738 <col:42, line:422:7> col:7 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x55be7e5047b8 <col:15, col:31> col:31 __inherit 'int *restrict'
| |-NoThrowAttr 0x55be7e504948 <line:423:22>
| `-NonNullAttr 0x55be7e5049c0 <col:63, col:80> 1 2
|-FunctionDecl 0x55be7e504b48 <line:424:1, line:426:79> line:424:12 pthread_attr_setinheritsched 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x55be7e504a08 <col:42, col:58> col:58 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x55be7e504a88 <line:425:7, col:11> col:11 __inherit 'int'
| |-NoThrowAttr 0x55be7e504bf8 <line:426:22>
| `-NonNullAttr 0x55be7e504c50 <col:63, col:77> 1
|-FunctionDecl 0x55be7e504df8 <line:427:1, line:429:82> line:427:12 pthread_attr_getscope 'int (const pthread_attr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x55be7e504c98 <col:35, col:68> col:68 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x55be7e504d18 <line:428:7, col:23> col:23 __scope 'int *restrict'
| |-NoThrowAttr 0x55be7e504ea8 <line:429:22>
| `-NonNullAttr 0x55be7e504f00 <col:63, col:80> 1 2
|-FunctionDecl 0x55be7e505088 <line:430:1, line:431:79> line:430:12 pthread_attr_setscope 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x55be7e504f48 <col:35, col:51> col:51 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x55be7e504fc8 <col:59, col:63> col:63 __scope 'int'
| |-NoThrowAttr 0x55be7e505138 <line:431:22>
| `-NonNullAttr 0x55be7e505190 <col:63, col:77> 1
|-FunctionDecl 0x55be7e5053b8 <line:432:1, line:434:115> line:432:12 pthread_attr_getstackaddr 'int (const pthread_attr_t *restrict, void **restrict)' extern
| |-ParmVarDecl 0x55be7e5051d8 <col:39, line:433:11> col:11 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x55be7e505258 <col:19, col:37> col:37 __stackaddr 'void **restrict'
| |-NoThrowAttr 0x55be7e505468 <line:434:22>
| |-NonNullAttr 0x55be7e5054c0 <col:63, col:80> 1 2
| `-DeprecatedAttr 0x55be7e5054f8 <col:100> "" ""
|-FunctionDecl 0x55be7e505708 <line:435:1, line:437:112> line:435:12 pthread_attr_setstackaddr 'int (pthread_attr_t *, void *)' extern
| |-ParmVarDecl 0x55be7e505548 <col:39, col:55> col:55 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x55be7e5055c8 <line:436:11, col:17> col:17 __stackaddr 'void *'
| |-NoThrowAttr 0x55be7e5057b8 <line:437:22>
| |-NonNullAttr 0x55be7e505810 <col:63, col:77> 1
| `-DeprecatedAttr 0x55be7e505848 <col:97> "" ""
|-FunctionDecl 0x55be7e505a48 <line:438:1, line:440:82> line:438:12 pthread_attr_getstacksize 'int (const pthread_attr_t *restrict, size_t *restrict)' extern
| |-ParmVarDecl 0x55be7e505898 <col:39, line:439:11> col:11 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x55be7e505910 <col:19, col:38> col:38 __stacksize 'size_t *restrict'
| |-NoThrowAttr 0x55be7e505af8 <line:440:22>
| `-NonNullAttr 0x55be7e505b50 <col:63, col:80> 1 2
|-FunctionDecl 0x55be7e505cd0 <line:441:1, line:443:79> line:441:12 pthread_attr_setstacksize 'int (pthread_attr_t *, size_t)' extern
| |-ParmVarDecl 0x55be7e505b98 <col:39, col:55> col:55 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x55be7e505c10 <line:442:11, col:18> col:18 __stacksize 'size_t':'unsigned long'
| |-NoThrowAttr 0x55be7e505d80 <line:443:22>
| `-NonNullAttr 0x55be7e505dd8 <col:63, col:77> 1
|-FunctionDecl 0x55be7e5060c8 <line:444:1, line:447:85> line:444:12 pthread_attr_getstack 'int (const pthread_attr_t *restrict, void **restrict, size_t *restrict)' extern
| |-ParmVarDecl 0x55be7e505e28 <col:35, col:68> col:68 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x55be7e505ea8 <line:445:7, col:25> col:25 __stackaddr 'void **restrict'
| |-ParmVarDecl 0x55be7e505f20 <line:446:7, col:26> col:26 __stacksize 'size_t *restrict'
| |-NoThrowAttr 0x55be7e506180 <line:447:22>
| `-NonNullAttr 0x55be7e5061d8 <col:63, col:83> 1 2 3
|-FunctionDecl 0x55be7e506488 <line:448:1, line:449:100> line:448:12 pthread_attr_setstack 'int (pthread_attr_t *, void *, size_t)' extern
| |-ParmVarDecl 0x55be7e506230 <col:35, col:51> col:51 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x55be7e5062b0 <col:59, col:65> col:65 __stackaddr 'void *'
| |-ParmVarDecl 0x55be7e506328 <line:449:7, col:14> col:14 __stacksize 'size_t':'unsigned long'
| |-NoThrowAttr 0x55be7e506540 <col:43>
| `-NonNullAttr 0x55be7e506598 <col:84, col:98> 1
|-FunctionDecl 0x55be7e506858 <line:450:1, line:452:79> line:450:12 pthread_setschedparam 'int (pthread_t, int, const struct sched_param *)' extern
| |-ParmVarDecl 0x55be7e5065e8 <col:35, col:45> col:45 __target_thread 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x55be7e506668 <col:62, col:66> col:66 __policy 'int'
| |-ParmVarDecl 0x55be7e5066f8 <line:451:7, col:33> col:33 __param 'const struct sched_param *'
| |-NoThrowAttr 0x55be7e506910 <line:452:22>
| `-NonNullAttr 0x55be7e506968 <col:63, col:77> 3
|-FunctionDecl 0x55be7e506c78 <line:453:1, line:456:82> line:453:12 pthread_getschedparam 'int (pthread_t, int *restrict, struct sched_param *restrict)' extern
| |-ParmVarDecl 0x55be7e5069e0 <col:35, col:45> col:45 __target_thread 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x55be7e506a60 <line:454:7, col:23> col:23 __policy 'int *restrict'
| |-ParmVarDecl 0x55be7e506af0 <line:455:7, col:38> col:38 __param 'struct sched_param *restrict'
| |-NoThrowAttr 0x55be7e506d30 <line:456:22>
| `-NonNullAttr 0x55be7e506d88 <col:63, col:80> 2 3
|-FunctionDecl 0x55be7e506f78 <line:457:1, line:458:45> line:457:12 pthread_setschedprio 'int (pthread_t, int)' extern
| |-ParmVarDecl 0x55be7e506dd8 <col:34, col:44> col:44 __target_thread 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x55be7e506e58 <col:61, col:65> col:65 __prio 'int'
| `-NoThrowAttr 0x55be7e507028 <line:458:22>
|-FunctionDecl 0x55be7e5073f8 <line:459:1, line:460:71> line:459:12 pthread_once 'int (pthread_once_t *, void (*)(void))' extern
| |-ParmVarDecl 0x55be7e5070f0 <col:26, col:42> col:42 __once_control 'pthread_once_t *'
| |-ParmVarDecl 0x55be7e507290 <line:460:5, col:33> col:12 __init_routine 'void (*)(void)'
| `-NonNullAttr 0x55be7e5074a8 <col:52, col:69> 1 2
|-FunctionDecl 0x55be7e507650 <line:461:1, col:64> col:12 pthread_setcancelstate 'int (int, int *)' extern
| |-ParmVarDecl 0x55be7e507530 <col:36, col:40> col:40 __state 'int'
| `-ParmVarDecl 0x55be7e5075b0 <col:49, col:54> col:54 __oldstate 'int *'
|-FunctionDecl 0x55be7e507838 <line:462:1, col:61> col:12 pthread_setcanceltype 'int (int, int *)' extern
| |-ParmVarDecl 0x55be7e507718 <col:35, col:39> col:39 __type 'int'
| `-ParmVarDecl 0x55be7e507798 <col:47, col:52> col:52 __oldtype 'int *'
|-FunctionDecl 0x55be7e5079f0 <line:463:1, col:42> col:12 pthread_cancel 'int (pthread_t)' extern
| `-ParmVarDecl 0x55be7e5078f8 <col:28, col:38> col:38 __th 'pthread_t':'unsigned long'
|-FunctionDecl 0x55be7e507b30 <line:464:1, col:37> col:13 pthread_testcancel 'void (void)' extern
|-RecordDecl 0x55be7e507bd0 <line:465:9, line:473:1> line:465:9 struct definition
| |-RecordDecl 0x55be7e507c78 <line:467:3, line:471:3> line:467:3 struct definition
| | |-FieldDecl 0x55be7e507d68 <line:469:5, col:15> col:15 __cancel_jmp_buf '__jmp_buf':'long [8]'
| | `-FieldDecl 0x55be7e507dd0 <line:470:5, col:9> col:9 __mask_was_saved 'int'
| |-FieldDecl 0x55be7e507fa0 <line:467:3, line:471:23> col:5 __cancel_jmp_buf 'struct (anonymous struct at ./split_6/mix019_pso.oepc_false-unreach-call.i:467:3) [1]'
| `-FieldDecl 0x55be7e508098 <line:472:3, col:16> col:9 __pad 'void *[4]'
|-TypedefDecl 0x55be7e508150 <line:465:1, line:473:3> col:3 referenced __pthread_unwind_buf_t 'struct __pthread_unwind_buf_t':'__pthread_unwind_buf_t'
| |-ElaboratedType 0x55be7e5080f0 'struct __pthread_unwind_buf_t' sugar
| | `-RecordType 0x55be7e507c50 '__pthread_unwind_buf_t'
| |   `-Record 0x55be7e507bd0 ''
| `-AlignedAttr 0x55be7e5081a8 <col:42> aligned
|   `-<<<NULL>>>
|-RecordDecl 0x55be7e508220 <line:474:1, line:480:1> line:474:8 struct __pthread_cleanup_frame definition
| |-FieldDecl 0x55be7e508380 <line:476:3, col:35> col:10 __cancel_routine 'void (*)(void *)'
| |-FieldDecl 0x55be7e5083e8 <line:477:3, col:9> col:9 __cancel_arg 'void *'
| |-FieldDecl 0x55be7e508450 <line:478:3, col:7> col:7 __do_it 'int'
| `-FieldDecl 0x55be7e5084b8 <line:479:3, col:7> col:7 __cancel_type 'int'
|-FunctionDecl 0x55be7e5086c0 <line:481:1, col:69> col:13 __pthread_register_cancel 'void (__pthread_unwind_buf_t *)' extern
| `-ParmVarDecl 0x55be7e5085b0 <col:40, col:64> col:64 __buf '__pthread_unwind_buf_t *'
|-FunctionDecl 0x55be7e508808 <line:483:1, col:71> col:13 __pthread_unregister_cancel 'void (__pthread_unwind_buf_t *)' extern
| `-ParmVarDecl 0x55be7e508778 <col:42, col:66> col:66 __buf '__pthread_unwind_buf_t *'
|-FunctionDecl 0x55be7e508a00 <line:485:1, line:487:31> line:485:13 __pthread_unwind_next 'void (__pthread_unwind_buf_t *) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x55be7e5088c0 <col:36, col:60> col:60 __buf '__pthread_unwind_buf_t *'
| `-WeakAttr 0x55be7e508aa8 <line:487:22>
|-RecordDecl 0x55be7e508b00 <line:489:1, col:8> col:8 struct __jmp_buf_tag
|-FunctionDecl 0x55be7e508e18 <line:490:1, col:98> col:12 __sigsetjmp 'int (struct __jmp_buf_tag *, int)' extern
| |-ParmVarDecl 0x55be7e508c78 <col:25, col:47> col:47 __env 'struct __jmp_buf_tag *'
| |-ParmVarDecl 0x55be7e508cf8 <col:54, col:58> col:58 __savemask 'int'
| |-NoThrowAttr 0x55be7e508ec8 <col:86>
| `-ReturnsTwiceAttr 0x55be7e508f20 <col:12> Implicit
|-FunctionDecl 0x55be7e509248 <line:491:1, line:493:79> line:491:12 pthread_mutex_init 'int (pthread_mutex_t *, const pthread_mutexattr_t *)' extern
| |-ParmVarDecl 0x55be7e508ff0 <col:32, col:49> col:49 __mutex 'pthread_mutex_t *'
| |-ParmVarDecl 0x55be7e509100 <line:492:11, col:38> col:38 __mutexattr 'const pthread_mutexattr_t *'
| |-NoThrowAttr 0x55be7e5092f8 <line:493:22>
| `-NonNullAttr 0x55be7e509350 <col:63, col:77> 1
|-FunctionDecl 0x55be7e5094c8 <line:494:1, line:495:79> line:494:12 pthread_mutex_destroy 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x55be7e509398 <col:35, col:52> col:52 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x55be7e509570 <line:495:22>
| `-NonNullAttr 0x55be7e5095c8 <col:63, col:77> 1
|-FunctionDecl 0x55be7e5096d0 <line:496:1, line:497:68> line:496:12 pthread_mutex_trylock 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x55be7e509618 <col:35, col:52> col:52 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x55be7e509778 <line:497:22>
| `-NonNullAttr 0x55be7e5097d0 <col:52, col:66> 1
|-FunctionDecl 0x55be7e5098d0 <line:498:1, line:499:68> line:498:12 pthread_mutex_lock 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x55be7e509818 <col:32, col:49> col:49 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x55be7e509978 <line:499:22>
| `-NonNullAttr 0x55be7e5099d0 <col:52, col:66> 1
|-FunctionDecl 0x55be7e50ac28 <line:500:1, line:502:85> line:500:12 pthread_mutex_timedlock 'int (pthread_mutex_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x55be7e50aa38 <col:37, col:65> col:65 __mutex 'pthread_mutex_t *restrict'
| |-ParmVarDecl 0x55be7e50aac8 <line:501:9, line:502:9> col:9 __abstime 'const struct timespec *restrict'
| |-NoThrowAttr 0x55be7e50acd8 <col:36>
| `-NonNullAttr 0x55be7e50ad30 <col:66, col:83> 1 2
|-FunctionDecl 0x55be7e50ae30 <line:503:1, line:504:68> line:503:12 pthread_mutex_unlock 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x55be7e50ad78 <col:34, col:51> col:51 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x55be7e50aed8 <line:504:22>
| `-NonNullAttr 0x55be7e50af30 <col:52, col:66> 1
|-FunctionDecl 0x55be7e50b1c8 <line:505:1, line:508:82> line:505:12 pthread_mutex_getprioceiling 'int (const pthread_mutex_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x55be7e50afe0 <col:42, line:506:18> col:18 __mutex 'const pthread_mutex_t *restrict'
| |-ParmVarDecl 0x55be7e50b060 <line:507:7, col:23> col:23 __prioceiling 'int *restrict'
| |-NoThrowAttr 0x55be7e50b278 <line:508:22>
| `-NonNullAttr 0x55be7e50b2d0 <col:63, col:80> 1 2
|-FunctionDecl 0x55be7e50b598 <line:509:1, line:512:82> line:509:12 pthread_mutex_setprioceiling 'int (pthread_mutex_t *restrict, int, int *restrict)' extern
| |-ParmVarDecl 0x55be7e50b318 <col:42, col:70> col:70 __mutex 'pthread_mutex_t *restrict'
| |-ParmVarDecl 0x55be7e50b398 <line:510:7, col:11> col:11 __prioceiling 'int'
| |-ParmVarDecl 0x55be7e50b418 <line:511:7, col:23> col:23 __old_ceiling 'int *restrict'
| |-NoThrowAttr 0x55be7e50b650 <line:512:22>
| `-NonNullAttr 0x55be7e50b6a8 <col:63, col:80> 1 3
|-FunctionDecl 0x55be7e50b7b0 <line:513:1, line:514:79> line:513:12 pthread_mutex_consistent 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x55be7e50b6f8 <col:38, col:55> col:55 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x55be7e50b858 <line:514:22>
| `-NonNullAttr 0x55be7e50b8b0 <col:63, col:77> 1
|-FunctionDecl 0x55be7e50bad8 <line:515:1, line:516:79> line:515:12 pthread_mutexattr_init 'int (pthread_mutexattr_t *)' extern
| |-ParmVarDecl 0x55be7e50b960 <col:36, col:57> col:57 __attr 'pthread_mutexattr_t *'
| |-NoThrowAttr 0x55be7e50bb80 <line:516:22>
| `-NonNullAttr 0x55be7e50bbd8 <col:63, col:77> 1
|-FunctionDecl 0x55be7e50bce0 <line:517:1, line:518:79> line:517:12 pthread_mutexattr_destroy 'int (pthread_mutexattr_t *)' extern
| |-ParmVarDecl 0x55be7e50bc28 <col:39, col:60> col:60 __attr 'pthread_mutexattr_t *'
| |-NoThrowAttr 0x55be7e50bd88 <line:518:22>
| `-NonNullAttr 0x55be7e50bde0 <col:63, col:77> 1
|-FunctionDecl 0x55be7e50c008 <line:519:1, line:522:82> line:519:12 pthread_mutexattr_getpshared 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x55be7e50be28 <col:42, line:520:18> col:18 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x55be7e50bea8 <line:521:7, col:23> col:23 __pshared 'int *restrict'
| |-NoThrowAttr 0x55be7e50c0b8 <line:522:22>
| `-NonNullAttr 0x55be7e50c110 <col:63, col:80> 1 2
|-FunctionDecl 0x55be7e50c318 <line:523:1, line:525:79> line:523:12 pthread_mutexattr_setpshared 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x55be7e50c158 <col:42, col:63> col:63 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x55be7e50c1d8 <line:524:7, col:11> col:11 __pshared 'int'
| |-NoThrowAttr 0x55be7e50c3c8 <line:525:22>
| `-NonNullAttr 0x55be7e50c420 <col:63, col:77> 1
|-FunctionDecl 0x55be7e50c5c8 <line:526:1, line:528:82> line:526:12 pthread_mutexattr_gettype 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x55be7e50c468 <col:39, line:527:11> col:11 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x55be7e50c4e8 <col:19, col:35> col:35 __kind 'int *restrict'
| |-NoThrowAttr 0x55be7e50c678 <line:528:22>
| `-NonNullAttr 0x55be7e50c6d0 <col:63, col:80> 1 2
|-FunctionDecl 0x55be7e50c858 <line:529:1, line:530:79> line:529:12 pthread_mutexattr_settype 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x55be7e50c718 <col:39, col:60> col:60 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x55be7e50c798 <col:68, col:72> col:72 __kind 'int'
| |-NoThrowAttr 0x55be7e50c908 <line:530:22>
| `-NonNullAttr 0x55be7e50c960 <col:63, col:77> 1
|-FunctionDecl 0x55be7e50cb20 <line:531:1, line:534:82> line:531:12 pthread_mutexattr_getprotocol 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x55be7e50c9a8 <col:43, line:532:19> col:19 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x55be7e50ca40 <line:533:8, col:24> col:24 __protocol 'int *restrict'
| |-NoThrowAttr 0x55be7e50cbd0 <line:534:22>
| `-NonNullAttr 0x55be7e50cc28 <col:63, col:80> 1 2
|-FunctionDecl 0x55be7e50cdb8 <line:535:1, line:537:79> line:535:12 pthread_mutexattr_setprotocol 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x55be7e50cc78 <col:43, col:64> col:64 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x55be7e50ccf8 <line:536:8, col:12> col:12 __protocol 'int'
| |-NoThrowAttr 0x55be7e50ce68 <line:537:22>
| `-NonNullAttr 0x55be7e50cec0 <col:63, col:77> 1
|-FunctionDecl 0x55be7e50d068 <line:538:1, line:541:82> line:538:12 pthread_mutexattr_getprioceiling 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x55be7e50cf08 <col:46, line:539:22> col:22 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x55be7e50cf88 <line:540:11, col:27> col:27 __prioceiling 'int *restrict'
| |-NoThrowAttr 0x55be7e50d118 <line:541:22>
| `-NonNullAttr 0x55be7e50d170 <col:63, col:80> 1 2
|-FunctionDecl 0x55be7e50d2f8 <line:542:1, line:544:79> line:542:12 pthread_mutexattr_setprioceiling 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x55be7e50d1b8 <col:46, col:67> col:67 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x55be7e50d238 <line:543:11, col:15> col:15 __prioceiling 'int'
| |-NoThrowAttr 0x55be7e50d3a8 <line:544:22>
| `-NonNullAttr 0x55be7e50d400 <col:63, col:77> 1
|-FunctionDecl 0x55be7e50d5e8 <line:545:1, line:547:82> line:545:12 pthread_mutexattr_getrobust 'int (const pthread_mutexattr_t *, int *)' extern
| |-ParmVarDecl 0x55be7e50d448 <col:41, col:68> col:68 __attr 'const pthread_mutexattr_t *'
| |-ParmVarDecl 0x55be7e50d4c8 <line:546:6, col:11> col:11 __robustness 'int *'
| |-NoThrowAttr 0x55be7e50d698 <line:547:22>
| `-NonNullAttr 0x55be7e50d6f0 <col:63, col:80> 1 2
|-FunctionDecl 0x55be7e50d878 <line:548:1, line:550:79> line:548:12 pthread_mutexattr_setrobust 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x55be7e50d738 <col:41, col:62> col:62 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x55be7e50d7b8 <line:549:6, col:10> col:10 __robustness 'int'
| |-NoThrowAttr 0x55be7e50d928 <line:550:22>
| `-NonNullAttr 0x55be7e50d980 <col:63, col:77> 1
|-FunctionDecl 0x55be7e50ecf8 <line:551:1, line:553:86> line:551:12 pthread_rwlock_init 'int (pthread_rwlock_t *restrict, const pthread_rwlockattr_t *restrict)' extern
| |-ParmVarDecl 0x55be7e50eaa0 <col:33, col:62> col:62 __rwlock 'pthread_rwlock_t *restrict'
| |-ParmVarDecl 0x55be7e50ebb0 <line:552:5, line:553:5> col:5 __attr 'const pthread_rwlockattr_t *restrict'
| |-NoThrowAttr 0x55be7e50eda8 <col:29>
| `-NonNullAttr 0x55be7e50ee00 <col:70, col:84> 1
|-FunctionDecl 0x55be7e50ef78 <line:554:1, line:555:79> line:554:12 pthread_rwlock_destroy 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x55be7e50ee48 <col:36, col:54> col:54 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x55be7e50f020 <line:555:22>
| `-NonNullAttr 0x55be7e50f078 <col:63, col:77> 1
|-FunctionDecl 0x55be7e50f180 <line:556:1, line:557:68> line:556:12 pthread_rwlock_rdlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x55be7e50f0c8 <col:35, col:53> col:53 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x55be7e50f228 <line:557:22>
| `-NonNullAttr 0x55be7e50f280 <col:52, col:66> 1
|-FunctionDecl 0x55be7e50f380 <line:558:1, line:559:65> line:558:12 pthread_rwlock_tryrdlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x55be7e50f2c8 <col:38, col:56> col:56 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x55be7e50f428 <line:559:19>
| `-NonNullAttr 0x55be7e50f480 <col:49, col:63> 1
|-FunctionDecl 0x55be7e50f6b8 <line:560:1, line:562:88> line:560:12 pthread_rwlock_timedrdlock 'int (pthread_rwlock_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x55be7e50f4c8 <col:40, col:69> col:69 __rwlock 'pthread_rwlock_t *restrict'
| |-ParmVarDecl 0x55be7e50f558 <line:561:12, line:562:12> col:12 __abstime 'const struct timespec *restrict'
| |-NoThrowAttr 0x55be7e50f768 <col:39>
| `-NonNullAttr 0x55be7e50f7c0 <col:69, col:86> 1 2
|-FunctionDecl 0x55be7e50f8c0 <line:563:1, line:564:68> line:563:12 pthread_rwlock_wrlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x55be7e50f808 <col:35, col:53> col:53 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x55be7e50f968 <line:564:22>
| `-NonNullAttr 0x55be7e50f9c0 <col:52, col:66> 1
|-FunctionDecl 0x55be7e50fb28 <line:565:1, line:566:68> line:565:12 pthread_rwlock_trywrlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x55be7e50fa70 <col:38, col:56> col:56 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x55be7e50fbd0 <line:566:22>
| `-NonNullAttr 0x55be7e50fc28 <col:52, col:66> 1
|-FunctionDecl 0x55be7e50fde8 <line:567:1, line:569:88> line:567:12 pthread_rwlock_timedwrlock 'int (pthread_rwlock_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x55be7e50fc78 <col:40, col:69> col:69 __rwlock 'pthread_rwlock_t *restrict'
| |-ParmVarDecl 0x55be7e50fd08 <line:568:12, line:569:12> col:12 __abstime 'const struct timespec *restrict'
| |-NoThrowAttr 0x55be7e50fe98 <col:39>
| `-NonNullAttr 0x55be7e50fef0 <col:69, col:86> 1 2
|-FunctionDecl 0x55be7e50fff0 <line:570:1, line:571:68> line:570:12 pthread_rwlock_unlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x55be7e50ff38 <col:35, col:53> col:53 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x55be7e510098 <line:571:22>
| `-NonNullAttr 0x55be7e5100f0 <col:52, col:66> 1
|-FunctionDecl 0x55be7e5102d8 <line:572:1, line:573:79> line:572:12 pthread_rwlockattr_init 'int (pthread_rwlockattr_t *)' extern
| |-ParmVarDecl 0x55be7e5101a0 <col:37, col:59> col:59 __attr 'pthread_rwlockattr_t *'
| |-NoThrowAttr 0x55be7e510380 <line:573:22>
| `-NonNullAttr 0x55be7e5103d8 <col:63, col:77> 1
|-FunctionDecl 0x55be7e5104e0 <line:574:1, line:575:79> line:574:12 pthread_rwlockattr_destroy 'int (pthread_rwlockattr_t *)' extern
| |-ParmVarDecl 0x55be7e510428 <col:40, col:62> col:62 __attr 'pthread_rwlockattr_t *'
| |-NoThrowAttr 0x55be7e510588 <line:575:22>
| `-NonNullAttr 0x55be7e5105e0 <col:63, col:77> 1
|-FunctionDecl 0x55be7e510808 <line:576:1, line:579:82> line:576:12 pthread_rwlockattr_getpshared 'int (const pthread_rwlockattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x55be7e510628 <col:43, line:577:19> col:19 __attr 'const pthread_rwlockattr_t *restrict'
| |-ParmVarDecl 0x55be7e5106a8 <line:578:8, col:24> col:24 __pshared 'int *restrict'
| |-NoThrowAttr 0x55be7e5108b8 <line:579:22>
| `-NonNullAttr 0x55be7e510910 <col:63, col:80> 1 2
|-FunctionDecl 0x55be7e510b38 <line:580:1, line:582:79> line:580:12 pthread_rwlockattr_setpshared 'int (pthread_rwlockattr_t *, int)' extern
| |-ParmVarDecl 0x55be7e510958 <col:43, col:65> col:65 __attr 'pthread_rwlockattr_t *'
| |-ParmVarDecl 0x55be7e5109d8 <line:581:8, col:12> col:12 __pshared 'int'
| |-NoThrowAttr 0x55be7e510be8 <line:582:22>
| `-NonNullAttr 0x55be7e510c40 <col:63, col:77> 1
|-FunctionDecl 0x55be7e510de8 <line:583:1, line:586:82> line:583:12 pthread_rwlockattr_getkind_np 'int (const pthread_rwlockattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x55be7e510c88 <col:43, line:584:19> col:19 __attr 'const pthread_rwlockattr_t *restrict'
| |-ParmVarDecl 0x55be7e510d08 <line:585:8, col:24> col:24 __pref 'int *restrict'
| |-NoThrowAttr 0x55be7e510e98 <line:586:22>
| `-NonNullAttr 0x55be7e510ef0 <col:63, col:80> 1 2
|-FunctionDecl 0x55be7e511078 <line:587:1, line:588:93> line:587:12 pthread_rwlockattr_setkind_np 'int (pthread_rwlockattr_t *, int)' extern
| |-ParmVarDecl 0x55be7e510f38 <col:43, col:65> col:65 __attr 'pthread_rwlockattr_t *'
| |-ParmVarDecl 0x55be7e510fb8 <line:588:8, col:12> col:12 __pref 'int'
| |-NoThrowAttr 0x55be7e511128 <col:36>
| `-NonNullAttr 0x55be7e511180 <col:77, col:91> 1
|-FunctionDecl 0x55be7e5114b8 <line:589:1, line:591:79> line:589:12 pthread_cond_init 'int (pthread_cond_t *restrict, const pthread_condattr_t *restrict)' extern
| |-ParmVarDecl 0x55be7e511260 <col:31, col:58> col:58 __cond 'pthread_cond_t *restrict'
| |-ParmVarDecl 0x55be7e511370 <line:590:10, col:47> col:47 __cond_attr 'const pthread_condattr_t *restrict'
| |-NoThrowAttr 0x55be7e511568 <line:591:22>
| `-NonNullAttr 0x55be7e5115c0 <col:63, col:77> 1
|-FunctionDecl 0x55be7e511738 <line:592:1, line:593:79> line:592:12 pthread_cond_destroy 'int (pthread_cond_t *)' extern
| |-ParmVarDecl 0x55be7e511608 <col:34, col:50> col:50 __cond 'pthread_cond_t *'
| |-NoThrowAttr 0x55be7e5117e0 <line:593:22>
| `-NonNullAttr 0x55be7e511838 <col:63, col:77> 1
|-FunctionDecl 0x55be7e511940 <line:594:1, line:595:68> line:594:12 pthread_cond_signal 'int (pthread_cond_t *)' extern
| |-ParmVarDecl 0x55be7e511888 <col:33, col:49> col:49 __cond 'pthread_cond_t *'
| |-NoThrowAttr 0x55be7e5119e8 <line:595:22>
| `-NonNullAttr 0x55be7e511a40 <col:52, col:66> 1
|-FunctionDecl 0x55be7e511b58 <line:596:1, line:597:68> line:596:12 pthread_cond_broadcast 'int (pthread_cond_t *)' extern
| |-ParmVarDecl 0x55be7e511aa0 <col:36, col:52> col:52 __cond 'pthread_cond_t *'
| |-NoThrowAttr 0x55be7e511c00 <line:597:22>
| `-NonNullAttr 0x55be7e511c58 <col:52, col:66> 1
|-FunctionDecl 0x55be7e511e88 <line:598:1, line:600:41> line:598:12 pthread_cond_wait 'int (pthread_cond_t *restrict, pthread_mutex_t *restrict)' extern
| |-ParmVarDecl 0x55be7e511ca8 <col:31, col:58> col:58 __cond 'pthread_cond_t *restrict'
| |-ParmVarDecl 0x55be7e511d20 <line:599:10, col:38> col:38 __mutex 'pthread_mutex_t *restrict'
| `-NonNullAttr 0x55be7e511f38 <line:600:22, col:39> 1 2
|-FunctionDecl 0x55be7e512268 <line:601:1, line:604:44> line:601:12 pthread_cond_timedwait 'int (pthread_cond_t *restrict, pthread_mutex_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x55be7e511fb8 <col:36, col:63> col:63 __cond 'pthread_cond_t *restrict'
| |-ParmVarDecl 0x55be7e512030 <line:602:8, col:36> col:36 __mutex 'pthread_mutex_t *restrict'
| |-ParmVarDecl 0x55be7e5120c0 <line:603:8, col:42> col:42 __abstime 'const struct timespec *restrict'
| `-NonNullAttr 0x55be7e512320 <line:604:22, col:42> 1 2 3
|-FunctionDecl 0x55be7e512538 <line:605:1, line:606:79> line:605:12 pthread_condattr_init 'int (pthread_condattr_t *)' extern
| |-ParmVarDecl 0x55be7e512400 <col:35, col:55> col:55 __attr 'pthread_condattr_t *'
| |-NoThrowAttr 0x55be7e5125e0 <line:606:22>
| `-NonNullAttr 0x55be7e512638 <col:63, col:77> 1
|-FunctionDecl 0x55be7e512740 <line:607:1, line:608:79> line:607:12 pthread_condattr_destroy 'int (pthread_condattr_t *)' extern
| |-ParmVarDecl 0x55be7e512688 <col:38, col:58> col:58 __attr 'pthread_condattr_t *'
| |-NoThrowAttr 0x55be7e5127e8 <line:608:22>
| `-NonNullAttr 0x55be7e512840 <col:63, col:77> 1
|-FunctionDecl 0x55be7e512aa0 <line:609:1, line:612:82> line:609:12 pthread_condattr_getpshared 'int (const pthread_condattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x55be7e512888 <col:41, line:610:17> col:17 __attr 'const pthread_condattr_t *restrict'
| |-ParmVarDecl 0x55be7e512908 <line:611:6, col:22> col:22 __pshared 'int *restrict'
| |-NoThrowAttr 0x55be7e512b50 <line:612:22>
| `-NonNullAttr 0x55be7e512ba8 <col:63, col:80> 1 2
|-FunctionDecl 0x55be7e512db8 <line:613:1, line:614:94> line:613:12 pthread_condattr_setpshared 'int (pthread_condattr_t *, int)' extern
| |-ParmVarDecl 0x55be7e512bf8 <col:41, col:61> col:61 __attr 'pthread_condattr_t *'
| |-ParmVarDecl 0x55be7e512c78 <line:614:6, col:10> col:10 __pshared 'int'
| |-NoThrowAttr 0x55be7e512e68 <col:37>
| `-NonNullAttr 0x55be7e512ec0 <col:78, col:92> 1
|-FunctionDecl 0x55be7e5130d8 <line:615:1, line:618:82> line:615:12 pthread_condattr_getclock 'int (const pthread_condattr_t *restrict, __clockid_t *restrict)' extern
| |-ParmVarDecl 0x55be7e512f08 <col:39, line:616:22> col:22 __attr 'const pthread_condattr_t *restrict'
| |-ParmVarDecl 0x55be7e512fb0 <line:617:11, col:35> col:35 __clock_id '__clockid_t *restrict'
| |-NoThrowAttr 0x55be7e513188 <line:618:22>
| `-NonNullAttr 0x55be7e5131e0 <col:63, col:80> 1 2
|-FunctionDecl 0x55be7e5133a8 <line:619:1, line:621:79> line:619:12 pthread_condattr_setclock 'int (pthread_condattr_t *, __clockid_t)' extern
| |-ParmVarDecl 0x55be7e513228 <col:39, col:59> col:59 __attr 'pthread_condattr_t *'
| |-ParmVarDecl 0x55be7e5132a0 <line:620:11, col:23> col:23 __clock_id '__clockid_t':'int'
| |-NoThrowAttr 0x55be7e513458 <line:621:22>
| `-NonNullAttr 0x55be7e5134b0 <col:63, col:77> 1
|-FunctionDecl 0x55be7e513758 <line:622:1, line:623:79> line:622:12 pthread_spin_init 'int (pthread_spinlock_t *, int)' extern
| |-ParmVarDecl 0x55be7e513590 <col:31, col:51> col:51 __lock 'pthread_spinlock_t *'
| |-ParmVarDecl 0x55be7e513610 <col:59, col:63> col:63 __pshared 'int'
| |-NoThrowAttr 0x55be7e513808 <line:623:22>
| `-NonNullAttr 0x55be7e513860 <col:63, col:77> 1
|-FunctionDecl 0x55be7e5139d8 <line:624:1, line:625:79> line:624:12 pthread_spin_destroy 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x55be7e5138a8 <col:34, col:54> col:54 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x55be7e513ab0 <line:625:22>
| `-NonNullAttr 0x55be7e513b08 <col:63, col:77> 1
|-FunctionDecl 0x55be7e513c10 <line:626:1, line:627:68> line:626:12 pthread_spin_lock 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x55be7e513b58 <col:31, col:51> col:51 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x55be7e513cb8 <line:627:22>
| `-NonNullAttr 0x55be7e513d10 <col:52, col:66> 1
|-FunctionDecl 0x55be7e513e10 <line:628:1, line:629:68> line:628:12 pthread_spin_trylock 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x55be7e513d58 <col:34, col:54> col:54 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x55be7e513eb8 <line:629:22>
| `-NonNullAttr 0x55be7e513f10 <col:52, col:66> 1
|-FunctionDecl 0x55be7e514010 <line:630:1, line:631:68> line:630:12 pthread_spin_unlock 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x55be7e513f58 <col:33, col:53> col:53 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x55be7e5140b8 <line:631:22>
| `-NonNullAttr 0x55be7e514110 <col:52, col:66> 1
|-FunctionDecl 0x55be7e5144e8 <line:632:1, line:635:79> line:632:12 pthread_barrier_init 'int (pthread_barrier_t *restrict, const pthread_barrierattr_t *restrict, unsigned int)' extern
| |-ParmVarDecl 0x55be7e5141f0 <col:34, col:64> col:64 __barrier 'pthread_barrier_t *restrict'
| |-ParmVarDecl 0x55be7e514300 <line:633:6, line:634:6> col:6 __attr 'const pthread_barrierattr_t *restrict'
| |-ParmVarDecl 0x55be7e514380 <col:14, col:27> col:27 __count 'unsigned int'
| |-NoThrowAttr 0x55be7e5145a0 <line:635:22>
| `-NonNullAttr 0x55be7e5145f8 <col:63, col:77> 1
|-FunctionDecl 0x55be7e514778 <line:636:1, line:637:79> line:636:12 pthread_barrier_destroy 'int (pthread_barrier_t *)' extern
| |-ParmVarDecl 0x55be7e514648 <col:37, col:56> col:56 __barrier 'pthread_barrier_t *'
| |-NoThrowAttr 0x55be7e514820 <line:637:22>
| `-NonNullAttr 0x55be7e514878 <col:63, col:77> 1
|-FunctionDecl 0x55be7e514980 <line:638:1, line:639:68> line:638:12 pthread_barrier_wait 'int (pthread_barrier_t *)' extern
| |-ParmVarDecl 0x55be7e5148c8 <col:34, col:53> col:53 __barrier 'pthread_barrier_t *'
| |-NoThrowAttr 0x55be7e514a28 <line:639:22>
| `-NonNullAttr 0x55be7e514a80 <col:52, col:66> 1
|-FunctionDecl 0x55be7e515c88 <line:640:1, line:641:79> line:640:12 pthread_barrierattr_init 'int (pthread_barrierattr_t *)' extern
| |-ParmVarDecl 0x55be7e515b50 <col:38, col:61> col:61 __attr 'pthread_barrierattr_t *'
| |-NoThrowAttr 0x55be7e515d30 <line:641:22>
| `-NonNullAttr 0x55be7e515d88 <col:63, col:77> 1
|-FunctionDecl 0x55be7e515e90 <line:642:1, line:643:79> line:642:12 pthread_barrierattr_destroy 'int (pthread_barrierattr_t *)' extern
| |-ParmVarDecl 0x55be7e515dd8 <col:41, col:64> col:64 __attr 'pthread_barrierattr_t *'
| |-NoThrowAttr 0x55be7e515f38 <line:643:22>
| `-NonNullAttr 0x55be7e515f90 <col:63, col:77> 1
|-FunctionDecl 0x55be7e5161b8 <line:644:1, line:647:82> line:644:12 pthread_barrierattr_getpshared 'int (const pthread_barrierattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x55be7e515fd8 <col:44, line:645:20> col:20 __attr 'const pthread_barrierattr_t *restrict'
| |-ParmVarDecl 0x55be7e516058 <line:646:9, col:25> col:25 __pshared 'int *restrict'
| |-NoThrowAttr 0x55be7e516268 <line:647:22>
| `-NonNullAttr 0x55be7e5162c0 <col:63, col:80> 1 2
|-FunctionDecl 0x55be7e5164c8 <line:648:1, line:650:79> line:648:12 pthread_barrierattr_setpshared 'int (pthread_barrierattr_t *, int)' extern
| |-ParmVarDecl 0x55be7e516308 <col:44, col:67> col:67 __attr 'pthread_barrierattr_t *'
| |-ParmVarDecl 0x55be7e516388 <line:649:9, col:13> col:13 __pshared 'int'
| |-NoThrowAttr 0x55be7e516578 <line:650:22>
| `-NonNullAttr 0x55be7e5165d0 <col:63, col:77> 1
|-FunctionDecl 0x55be7e516918 <line:651:1, line:653:79> line:651:12 pthread_key_create 'int (pthread_key_t *, void (*)(void *))' extern
| |-ParmVarDecl 0x55be7e5166b0 <col:32, col:47> col:47 __key 'pthread_key_t *'
| |-ParmVarDecl 0x55be7e5167d0 <line:652:11, col:43> col:18 __destr_function 'void (*)(void *)'
| |-NoThrowAttr 0x55be7e5169c8 <line:653:22>
| `-NonNullAttr 0x55be7e516a20 <col:63, col:77> 1
|-FunctionDecl 0x55be7e516b88 <line:654:1, col:92> col:12 pthread_key_delete 'int (pthread_key_t)' extern
| |-ParmVarDecl 0x55be7e516a68 <col:32, col:46> col:46 __key 'pthread_key_t':'unsigned int'
| `-NoThrowAttr 0x55be7e516c30 <col:69>
|-FunctionDecl 0x55be7e516da8 <line:655:1, col:95> col:14 pthread_getspecific 'void *(pthread_key_t)' extern
| |-ParmVarDecl 0x55be7e516c98 <col:35, col:49> col:49 __key 'pthread_key_t':'unsigned int'
| `-NoThrowAttr 0x55be7e516e50 <col:72>
|-FunctionDecl 0x55be7e517088 <line:656:1, line:657:67> line:656:12 pthread_setspecific 'int (pthread_key_t, const void *)' extern
| |-ParmVarDecl 0x55be7e516eb8 <col:33, col:47> col:47 __key 'pthread_key_t':'unsigned int'
| |-ParmVarDecl 0x55be7e516f68 <line:657:5, col:17> col:17 __pointer 'const void *'
| `-NoThrowAttr 0x55be7e517138 <col:44>
|-FunctionDecl 0x55be7e517358 <line:658:1, line:660:79> line:658:12 pthread_getcpuclockid 'int (pthread_t, __clockid_t *)' extern
| |-ParmVarDecl 0x55be7e5171a0 <col:35, col:45> col:45 __thread_id 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x55be7e517218 <line:659:7, col:20> col:20 __clock_id '__clockid_t *'
| |-NoThrowAttr 0x55be7e517408 <line:660:22>
| `-NonNullAttr 0x55be7e517460 <col:63, col:77> 2
|-FunctionDecl 0x55be7e5178a8 <line:661:1, line:663:70> line:661:12 pthread_atfork 'int (void (*)(void), void (*)(void), void (*)(void))' extern
| |-ParmVarDecl 0x55be7e517540 <col:28, col:51> col:35 __prepare 'void (*)(void)'
| |-ParmVarDecl 0x55be7e517650 <line:662:7, col:29> col:14 __parent 'void (*)(void)'
| |-ParmVarDecl 0x55be7e517760 <line:663:7, col:28> col:14 __child 'void (*)(void)'
| `-NoThrowAttr 0x55be7e517960 <col:47>
|-FunctionDecl 0x55be7e517af0 <line:665:1, col:20> col:8 used P0 'void *(void *)'
| `-ParmVarDecl 0x55be7e5179d0 <col:11, col:17> col:17 arg 'void *'
|-FunctionDecl 0x55be7e517c48 <line:666:1, col:20> col:8 used P1 'void *(void *)'
| `-ParmVarDecl 0x55be7e517bb0 <col:11, col:17> col:17 arg 'void *'
|-FunctionDecl 0x55be7e517da0 <line:667:1, col:20> col:8 used P2 'void *(void *)'
| `-ParmVarDecl 0x55be7e517d08 <col:11, col:17> col:17 arg 'void *'
|-FunctionDecl 0x55be7e517e68 <line:668:1, col:12> col:6 fence 'void ()'
|-FunctionDecl 0x55be7e517f28 <line:669:1, col:12> col:6 isync 'void ()'
|-FunctionDecl 0x55be7e517fe8 <line:670:1, col:14> col:6 lwfence 'void ()'
|-VarDecl 0x55be7e5180a0 <line:671:1, col:5> col:5 used __unbuffered_cnt 'int'
|-VarDecl 0x55be7e518120 prev 0x55be7e5180a0 <line:672:1, col:24> col:5 used __unbuffered_cnt 'int' cinit
| `-IntegerLiteral 0x55be7e518188 <col:24> 'int' 0
|-VarDecl 0x55be7e5181c0 <line:673:1, col:5> col:5 used __unbuffered_p1_EAX 'int'
|-VarDecl 0x55be7e518240 prev 0x55be7e5181c0 <line:674:1, col:27> col:5 used __unbuffered_p1_EAX 'int' cinit
| `-IntegerLiteral 0x55be7e5182a8 <col:27> 'int' 0
|-VarDecl 0x55be7e5182e0 <line:675:1, col:5> col:5 used __unbuffered_p2_EAX 'int'
|-VarDecl 0x55be7e518360 prev 0x55be7e5182e0 <line:676:1, col:27> col:5 used __unbuffered_p2_EAX 'int' cinit
| `-IntegerLiteral 0x55be7e5183c8 <col:27> 'int' 0
|-VarDecl 0x55be7e518400 <line:677:1, col:5> col:5 used __unbuffered_p2_EBX 'int'
|-VarDecl 0x55be7e518480 prev 0x55be7e518400 <line:678:1, col:27> col:5 used __unbuffered_p2_EBX 'int' cinit
| `-IntegerLiteral 0x55be7e5184e8 <col:27> 'int' 0
|-VarDecl 0x55be7e518518 <line:679:1, col:7> col:7 used main$tmp_guard0 '_Bool'
|-VarDecl 0x55be7e518590 <line:680:1, col:7> col:7 used main$tmp_guard1 '_Bool'
|-VarDecl 0x55be7e518610 <line:681:1, col:5> col:5 used x 'int'
|-VarDecl 0x55be7e518690 prev 0x55be7e518610 <line:682:1, col:9> col:5 used x 'int' cinit
| `-IntegerLiteral 0x55be7e5186f8 <col:9> 'int' 0
|-VarDecl 0x55be7e518730 <line:683:1, col:5> col:5 used y 'int'
|-VarDecl 0x55be7e5187b0 prev 0x55be7e518730 <line:684:1, col:9> col:5 used y 'int' cinit
| `-IntegerLiteral 0x55be7e518818 <col:9> 'int' 0
|-VarDecl 0x55be7e518850 <line:685:1, col:5> col:5 used z 'int'
|-VarDecl 0x55be7e5188d0 prev 0x55be7e518850 <line:686:1, col:9> col:5 used z 'int' cinit
| `-IntegerLiteral 0x55be7e518938 <col:9> 'int' 0
|-VarDecl 0x55be7e518968 <line:687:1, col:7> col:7 used z$flush_delayed '_Bool'
|-VarDecl 0x55be7e5189e8 <line:688:1, col:5> col:5 used z$mem_tmp 'int'
|-VarDecl 0x55be7e518a60 <line:689:1, col:7> col:7 used z$r_buff0_thd0 '_Bool'
|-VarDecl 0x55be7e518b00 <line:690:1, col:7> col:7 used z$r_buff0_thd1 '_Bool'
|-VarDecl 0x55be7e518b78 <line:691:1, col:7> col:7 used z$r_buff0_thd2 '_Bool'
|-VarDecl 0x55be7e518bf0 <line:692:1, col:7> col:7 used z$r_buff0_thd3 '_Bool'
|-VarDecl 0x55be7e518c68 <line:693:1, col:7> col:7 used z$r_buff1_thd0 '_Bool'
|-VarDecl 0x55be7e518ce0 <line:694:1, col:7> col:7 used z$r_buff1_thd1 '_Bool'
|-VarDecl 0x55be7e518d58 <line:695:1, col:7> col:7 used z$r_buff1_thd2 '_Bool'
|-VarDecl 0x55be7e518dd0 <line:696:1, col:7> col:7 used z$r_buff1_thd3 '_Bool'
|-VarDecl 0x55be7e518e48 <line:697:1, col:7> col:7 z$read_delayed '_Bool'
|-VarDecl 0x55be7e518ec8 <line:698:1, col:6> col:6 z$read_delayed_var 'int *'
|-VarDecl 0x55be7e518f48 <line:699:1, col:5> col:5 used z$w_buff0 'int'
|-VarDecl 0x55be7e518fc0 <line:700:1, col:7> col:7 used z$w_buff0_used '_Bool'
|-VarDecl 0x55be7e519040 <line:701:1, col:5> col:5 used z$w_buff1 'int'
|-VarDecl 0x55be7e5190b8 <line:702:1, col:7> col:7 used z$w_buff1_used '_Bool'
|-VarDecl 0x55be7e519130 <line:703:1, col:7> col:7 used weak$$choice0 '_Bool'
|-VarDecl 0x55be7e5191a8 <line:704:1, col:7> col:7 used weak$$choice2 '_Bool'
|-FunctionDecl 0x55be7e5192c0 prev 0x55be7e517af0 <line:705:1, line:733:1> line:705:8 used P0 'void *(void *)'
| |-ParmVarDecl 0x55be7e519228 <col:11, col:17> col:17 arg 'void *'
| `-CompoundStmt 0x55be7e51ab20 <line:706:1, line:733:1>
|   |-CallExpr 0x55be7e5193d8 <line:707:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x55be7e5193c0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55be7e519368 <col:3> 'void ()' Function 0x55be7e4bee40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x55be7e519450 <line:708:3, col:15> 'int' '='
|   | |-DeclRefExpr 0x55be7e5193f8 <col:3> 'int' lvalue Var 0x55be7e519040 'z$w_buff1' 'int'
|   | `-ImplicitCastExpr 0x55be7e519438 <col:15> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x55be7e519418 <col:15> 'int' lvalue Var 0x55be7e518f48 'z$w_buff0' 'int'
|   |-BinaryOperator 0x55be7e5194b0 <line:709:3, col:15> 'int' '='
|   | |-DeclRefExpr 0x55be7e519470 <col:3> 'int' lvalue Var 0x55be7e518f48 'z$w_buff0' 'int'
|   | `-IntegerLiteral 0x55be7e519490 <col:15> 'int' 1
|   |-BinaryOperator 0x55be7e519528 <line:710:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x55be7e5194d0 <col:3> '_Bool' lvalue Var 0x55be7e5190b8 'z$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x55be7e519510 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x55be7e5194f0 <col:20> '_Bool' lvalue Var 0x55be7e518fc0 'z$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x55be7e5195c0 <line:711:3, col:27> '_Bool' '='
|   | |-DeclRefExpr 0x55be7e519548 <col:3> '_Bool' lvalue Var 0x55be7e518fc0 'z$w_buff0_used' '_Bool'
|   | `-CStyleCastExpr 0x55be7e519598 <col:20, col:27> '_Bool' <IntegralToBoolean>
|   |   `-IntegerLiteral 0x55be7e519568 <col:27> 'int' 1
|   |-CallExpr 0x55be7e519748 <line:712:3, col:56> 'void'
|   | |-ImplicitCastExpr 0x55be7e519730 <col:3> 'void (*)(int)' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x55be7e5195e0 <col:3> 'void (int)' Function 0x55be7e4bebc8 '__VERIFIER_assert' 'void (int)'
|   | `-UnaryOperator 0x55be7e5196e0 <col:21, col:55> 'int' prefix '!' cannot overflow
|   |   `-ParenExpr 0x55be7e5196c0 <col:22, col:55> 'int'
|   |     `-BinaryOperator 0x55be7e5196a0 <col:23, col:41> 'int' '&&'
|   |       |-ImplicitCastExpr 0x55be7e519658 <col:23> 'int' <IntegralCast>
|   |       | `-ImplicitCastExpr 0x55be7e519640 <col:23> '_Bool' <LValueToRValue>
|   |       |   `-DeclRefExpr 0x55be7e519600 <col:23> '_Bool' lvalue Var 0x55be7e5190b8 'z$w_buff1_used' '_Bool'
|   |       `-ImplicitCastExpr 0x55be7e519688 <col:41> 'int' <IntegralCast>
|   |         `-ImplicitCastExpr 0x55be7e519670 <col:41> '_Bool' <LValueToRValue>
|   |           `-DeclRefExpr 0x55be7e519620 <col:41> '_Bool' lvalue Var 0x55be7e518fc0 'z$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x55be7e5197c8 <line:713:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x55be7e519770 <col:3> '_Bool' lvalue Var 0x55be7e518c68 'z$r_buff1_thd0' '_Bool'
|   | `-ImplicitCastExpr 0x55be7e5197b0 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x55be7e519790 <col:20> '_Bool' lvalue Var 0x55be7e518a60 'z$r_buff0_thd0' '_Bool'
|   |-BinaryOperator 0x55be7e519840 <line:714:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x55be7e5197e8 <col:3> '_Bool' lvalue Var 0x55be7e518ce0 'z$r_buff1_thd1' '_Bool'
|   | `-ImplicitCastExpr 0x55be7e519828 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x55be7e519808 <col:20> '_Bool' lvalue Var 0x55be7e518b00 'z$r_buff0_thd1' '_Bool'
|   |-BinaryOperator 0x55be7e5198b8 <line:715:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x55be7e519860 <col:3> '_Bool' lvalue Var 0x55be7e518d58 'z$r_buff1_thd2' '_Bool'
|   | `-ImplicitCastExpr 0x55be7e5198a0 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x55be7e519880 <col:20> '_Bool' lvalue Var 0x55be7e518b78 'z$r_buff0_thd2' '_Bool'
|   |-BinaryOperator 0x55be7e519930 <line:716:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x55be7e5198d8 <col:3> '_Bool' lvalue Var 0x55be7e518dd0 'z$r_buff1_thd3' '_Bool'
|   | `-ImplicitCastExpr 0x55be7e519918 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x55be7e5198f8 <col:20> '_Bool' lvalue Var 0x55be7e518bf0 'z$r_buff0_thd3' '_Bool'
|   |-BinaryOperator 0x55be7e5199c8 <line:717:3, col:27> '_Bool' '='
|   | |-DeclRefExpr 0x55be7e519950 <col:3> '_Bool' lvalue Var 0x55be7e518b00 'z$r_buff0_thd1' '_Bool'
|   | `-CStyleCastExpr 0x55be7e5199a0 <col:20, col:27> '_Bool' <IntegralToBoolean>
|   |   `-IntegerLiteral 0x55be7e519970 <col:27> 'int' 1
|   |-CallExpr 0x55be7e519a20 <line:718:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x55be7e519a08 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55be7e5199e8 <col:3> 'void ()' Function 0x55be7e4bef00 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x55be7e519a78 <line:719:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x55be7e519a60 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55be7e519a40 <col:3> 'void ()' Function 0x55be7e4bee40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x55be7e519ad8 <line:720:3, col:7> 'int' '='
|   | |-DeclRefExpr 0x55be7e519a98 <col:3> 'int' lvalue Var 0x55be7e518690 'x' 'int'
|   | `-IntegerLiteral 0x55be7e519ab8 <col:7> 'int' 1
|   |-CallExpr 0x55be7e519b48 <line:721:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x55be7e519b30 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55be7e519b10 <col:3> 'void ()' Function 0x55be7e4bef00 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x55be7e519ba0 <line:722:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x55be7e519b88 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55be7e519b68 <col:3> 'void ()' Function 0x55be7e4bee40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x55be7e519e88 <line:723:3, col:103> 'int' '='
|   | |-DeclRefExpr 0x55be7e519bc0 <col:3> 'int' lvalue Var 0x55be7e5188d0 'z' 'int'
|   | `-ConditionalOperator 0x55be7e519e58 <col:7, col:103> 'int'
|   |   |-BinaryOperator 0x55be7e519c80 <col:7, col:25> 'int' '&&'
|   |   | |-ImplicitCastExpr 0x55be7e519c38 <col:7> 'int' <IntegralCast>
|   |   | | `-ImplicitCastExpr 0x55be7e519c20 <col:7> '_Bool' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x55be7e519be0 <col:7> '_Bool' lvalue Var 0x55be7e518fc0 'z$w_buff0_used' '_Bool'
|   |   | `-ImplicitCastExpr 0x55be7e519c68 <col:25> 'int' <IntegralCast>
|   |   |   `-ImplicitCastExpr 0x55be7e519c50 <col:25> '_Bool' <LValueToRValue>
|   |   |     `-DeclRefExpr 0x55be7e519c00 <col:25> '_Bool' lvalue Var 0x55be7e518b00 'z$r_buff0_thd1' '_Bool'
|   |   |-ImplicitCastExpr 0x55be7e519e40 <col:42> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x55be7e519ca0 <col:42> 'int' lvalue Var 0x55be7e518f48 'z$w_buff0' 'int'
|   |   `-ParenExpr 0x55be7e519e20 <col:54, col:103> 'int'
|   |     `-ConditionalOperator 0x55be7e519df0 <col:55, col:102> 'int'
|   |       |-BinaryOperator 0x55be7e519d60 <col:55, col:73> 'int' '&&'
|   |       | |-ImplicitCastExpr 0x55be7e519d18 <col:55> 'int' <IntegralCast>
|   |       | | `-ImplicitCastExpr 0x55be7e519d00 <col:55> '_Bool' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x55be7e519cc0 <col:55> '_Bool' lvalue Var 0x55be7e5190b8 'z$w_buff1_used' '_Bool'
|   |       | `-ImplicitCastExpr 0x55be7e519d48 <col:73> 'int' <IntegralCast>
|   |       |   `-ImplicitCastExpr 0x55be7e519d30 <col:73> '_Bool' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x55be7e519ce0 <col:73> '_Bool' lvalue Var 0x55be7e518ce0 'z$r_buff1_thd1' '_Bool'
|   |       |-ImplicitCastExpr 0x55be7e519dc0 <col:90> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x55be7e519d80 <col:90> 'int' lvalue Var 0x55be7e519040 'z$w_buff1' 'int'
|   |       `-ImplicitCastExpr 0x55be7e519dd8 <col:102> 'int' <LValueToRValue>
|   |         `-DeclRefExpr 0x55be7e519da0 <col:102> 'int' lvalue Var 0x55be7e5188d0 'z' 'int'
|   |-BinaryOperator 0x55be7e51a090 <line:724:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x55be7e519ea8 <col:3> '_Bool' lvalue Var 0x55be7e518fc0 'z$w_buff0_used' '_Bool'
|   | `-ImplicitCastExpr 0x55be7e51a078 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55be7e51a048 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x55be7e519f68 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x55be7e519f20 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x55be7e519f08 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x55be7e519ec8 <col:20> '_Bool' lvalue Var 0x55be7e518fc0 'z$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x55be7e519f50 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x55be7e519f38 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x55be7e519ee8 <col:38> '_Bool' lvalue Var 0x55be7e518b00 'z$r_buff0_thd1' '_Bool'
|   |     |-ImplicitCastExpr 0x55be7e51a000 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x55be7e519fb8 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x55be7e519f88 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x55be7e51a030 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x55be7e51a018 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x55be7e519fe0 <col:66> '_Bool' lvalue Var 0x55be7e518fc0 'z$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x55be7e51a378 <line:725:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x55be7e51a0b0 <col:3> '_Bool' lvalue Var 0x55be7e5190b8 'z$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x55be7e51a360 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55be7e51a330 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x55be7e51a250 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x55be7e51a170 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x55be7e51a128 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x55be7e51a110 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x55be7e51a0d0 <col:20> '_Bool' lvalue Var 0x55be7e518fc0 'z$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x55be7e51a158 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x55be7e51a140 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x55be7e51a0f0 <col:38> '_Bool' lvalue Var 0x55be7e518b00 'z$r_buff0_thd1' '_Bool'
|   |     | `-BinaryOperator 0x55be7e51a230 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x55be7e51a1e8 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x55be7e51a1d0 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x55be7e51a190 <col:56> '_Bool' lvalue Var 0x55be7e5190b8 'z$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x55be7e51a218 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x55be7e51a200 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x55be7e51a1b0 <col:74> '_Bool' lvalue Var 0x55be7e518ce0 'z$r_buff1_thd1' '_Bool'
|   |     |-ImplicitCastExpr 0x55be7e51a2e8 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x55be7e51a2a0 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x55be7e51a270 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x55be7e51a318 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x55be7e51a300 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x55be7e51a2c8 <col:102> '_Bool' lvalue Var 0x55be7e5190b8 'z$w_buff1_used' '_Bool'
|   |-BinaryOperator 0x55be7e51a580 <line:726:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x55be7e51a398 <col:3> '_Bool' lvalue Var 0x55be7e518b00 'z$r_buff0_thd1' '_Bool'
|   | `-ImplicitCastExpr 0x55be7e51a568 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55be7e51a538 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x55be7e51a458 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x55be7e51a410 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x55be7e51a3f8 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x55be7e51a3b8 <col:20> '_Bool' lvalue Var 0x55be7e518fc0 'z$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x55be7e51a440 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x55be7e51a428 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x55be7e51a3d8 <col:38> '_Bool' lvalue Var 0x55be7e518b00 'z$r_buff0_thd1' '_Bool'
|   |     |-ImplicitCastExpr 0x55be7e51a4f0 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x55be7e51a4a8 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x55be7e51a478 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x55be7e51a520 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x55be7e51a508 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x55be7e51a4d0 <col:66> '_Bool' lvalue Var 0x55be7e518b00 'z$r_buff0_thd1' '_Bool'
|   |-BinaryOperator 0x55be7e51a868 <line:727:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x55be7e51a5a0 <col:3> '_Bool' lvalue Var 0x55be7e518ce0 'z$r_buff1_thd1' '_Bool'
|   | `-ImplicitCastExpr 0x55be7e51a850 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55be7e51a820 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x55be7e51a740 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x55be7e51a660 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x55be7e51a618 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x55be7e51a600 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x55be7e51a5c0 <col:20> '_Bool' lvalue Var 0x55be7e518fc0 'z$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x55be7e51a648 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x55be7e51a630 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x55be7e51a5e0 <col:38> '_Bool' lvalue Var 0x55be7e518b00 'z$r_buff0_thd1' '_Bool'
|   |     | `-BinaryOperator 0x55be7e51a720 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x55be7e51a6d8 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x55be7e51a6c0 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x55be7e51a680 <col:56> '_Bool' lvalue Var 0x55be7e5190b8 'z$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x55be7e51a708 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x55be7e51a6f0 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x55be7e51a6a0 <col:74> '_Bool' lvalue Var 0x55be7e518ce0 'z$r_buff1_thd1' '_Bool'
|   |     |-ImplicitCastExpr 0x55be7e51a7d8 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x55be7e51a790 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x55be7e51a760 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x55be7e51a808 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x55be7e51a7f0 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x55be7e51a7b8 <col:102> '_Bool' lvalue Var 0x55be7e518ce0 'z$r_buff1_thd1' '_Bool'
|   |-CallExpr 0x55be7e51a8c0 <line:728:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x55be7e51a8a8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55be7e51a888 <col:3> 'void ()' Function 0x55be7e4bef00 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x55be7e51a918 <line:729:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x55be7e51a900 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55be7e51a8e0 <col:3> 'void ()' Function 0x55be7e4bee40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x55be7e51a9d0 <line:730:3, col:41> 'int' '='
|   | |-DeclRefExpr 0x55be7e51a938 <col:3> 'int' lvalue Var 0x55be7e518120 '__unbuffered_cnt' 'int'
|   | `-BinaryOperator 0x55be7e51a9b0 <col:22, col:41> 'int' '+'
|   |   |-ImplicitCastExpr 0x55be7e51a998 <col:22> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x55be7e51a958 <col:22> 'int' lvalue Var 0x55be7e518120 '__unbuffered_cnt' 'int'
|   |   `-IntegerLiteral 0x55be7e51a978 <col:41> 'int' 1
|   |-CallExpr 0x55be7e51aa28 <line:731:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x55be7e51aa10 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55be7e51a9f0 <col:3> 'void ()' Function 0x55be7e4bef00 '__VERIFIER_atomic_end' 'void ()'
|   `-ReturnStmt 0x55be7e51aad8 <line:732:3, col:36>
|     `-CallExpr 0x55be7e51aab8 <col:10, col:36> 'void *'
|       `-ImplicitCastExpr 0x55be7e51aaa0 <col:10> 'void *(*)(void)' <FunctionToPointerDecay>
|         `-DeclRefExpr 0x55be7e51aa48 <col:10> 'void *(void)' Function 0x55be7e4be958 '__VERIFIER_nondet_pointer' 'void *(void)'
|-FunctionDecl 0x55be7e51acb0 prev 0x55be7e517c48 <line:734:1, line:753:1> line:734:8 used P1 'void *(void *)'
| |-ParmVarDecl 0x55be7e51ac18 <col:11, col:17> col:17 arg 'void *'
| `-CompoundStmt 0x55be7e51bef0 <line:735:1, line:753:1>
|   |-CallExpr 0x55be7e51ad90 <line:736:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x55be7e51ad78 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55be7e51ad58 <col:3> 'void ()' Function 0x55be7e4bee40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x55be7e51adf0 <line:737:3, col:7> 'int' '='
|   | |-DeclRefExpr 0x55be7e51adb0 <col:3> 'int' lvalue Var 0x55be7e518690 'x' 'int'
|   | `-IntegerLiteral 0x55be7e51add0 <col:7> 'int' 2
|   |-CallExpr 0x55be7e51ae48 <line:738:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x55be7e51ae30 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55be7e51ae10 <col:3> 'void ()' Function 0x55be7e4bef00 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x55be7e51aea0 <line:739:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x55be7e51ae88 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55be7e51ae68 <col:3> 'void ()' Function 0x55be7e4bee40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x55be7e51af18 <line:740:3, col:25> 'int' '='
|   | |-DeclRefExpr 0x55be7e51aec0 <col:3> 'int' lvalue Var 0x55be7e518240 '__unbuffered_p1_EAX' 'int'
|   | `-ImplicitCastExpr 0x55be7e51af00 <col:25> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x55be7e51aee0 <col:25> 'int' lvalue Var 0x55be7e5187b0 'y' 'int'
|   |-CallExpr 0x55be7e51af70 <line:741:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x55be7e51af58 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55be7e51af38 <col:3> 'void ()' Function 0x55be7e4bef00 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x55be7e51afc8 <line:742:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x55be7e51afb0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55be7e51af90 <col:3> 'void ()' Function 0x55be7e4bee40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x55be7e51b2b0 <line:743:3, col:103> 'int' '='
|   | |-DeclRefExpr 0x55be7e51afe8 <col:3> 'int' lvalue Var 0x55be7e5188d0 'z' 'int'
|   | `-ConditionalOperator 0x55be7e51b280 <col:7, col:103> 'int'
|   |   |-BinaryOperator 0x55be7e51b0a8 <col:7, col:25> 'int' '&&'
|   |   | |-ImplicitCastExpr 0x55be7e51b060 <col:7> 'int' <IntegralCast>
|   |   | | `-ImplicitCastExpr 0x55be7e51b048 <col:7> '_Bool' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x55be7e51b008 <col:7> '_Bool' lvalue Var 0x55be7e518fc0 'z$w_buff0_used' '_Bool'
|   |   | `-ImplicitCastExpr 0x55be7e51b090 <col:25> 'int' <IntegralCast>
|   |   |   `-ImplicitCastExpr 0x55be7e51b078 <col:25> '_Bool' <LValueToRValue>
|   |   |     `-DeclRefExpr 0x55be7e51b028 <col:25> '_Bool' lvalue Var 0x55be7e518b78 'z$r_buff0_thd2' '_Bool'
|   |   |-ImplicitCastExpr 0x55be7e51b268 <col:42> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x55be7e51b0c8 <col:42> 'int' lvalue Var 0x55be7e518f48 'z$w_buff0' 'int'
|   |   `-ParenExpr 0x55be7e51b248 <col:54, col:103> 'int'
|   |     `-ConditionalOperator 0x55be7e51b218 <col:55, col:102> 'int'
|   |       |-BinaryOperator 0x55be7e51b188 <col:55, col:73> 'int' '&&'
|   |       | |-ImplicitCastExpr 0x55be7e51b140 <col:55> 'int' <IntegralCast>
|   |       | | `-ImplicitCastExpr 0x55be7e51b128 <col:55> '_Bool' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x55be7e51b0e8 <col:55> '_Bool' lvalue Var 0x55be7e5190b8 'z$w_buff1_used' '_Bool'
|   |       | `-ImplicitCastExpr 0x55be7e51b170 <col:73> 'int' <IntegralCast>
|   |       |   `-ImplicitCastExpr 0x55be7e51b158 <col:73> '_Bool' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x55be7e51b108 <col:73> '_Bool' lvalue Var 0x55be7e518d58 'z$r_buff1_thd2' '_Bool'
|   |       |-ImplicitCastExpr 0x55be7e51b1e8 <col:90> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x55be7e51b1a8 <col:90> 'int' lvalue Var 0x55be7e519040 'z$w_buff1' 'int'
|   |       `-ImplicitCastExpr 0x55be7e51b200 <col:102> 'int' <LValueToRValue>
|   |         `-DeclRefExpr 0x55be7e51b1c8 <col:102> 'int' lvalue Var 0x55be7e5188d0 'z' 'int'
|   |-BinaryOperator 0x55be7e51b4b8 <line:744:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x55be7e51b2d0 <col:3> '_Bool' lvalue Var 0x55be7e518fc0 'z$w_buff0_used' '_Bool'
|   | `-ImplicitCastExpr 0x55be7e51b4a0 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55be7e51b470 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x55be7e51b390 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x55be7e51b348 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x55be7e51b330 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x55be7e51b2f0 <col:20> '_Bool' lvalue Var 0x55be7e518fc0 'z$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x55be7e51b378 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x55be7e51b360 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x55be7e51b310 <col:38> '_Bool' lvalue Var 0x55be7e518b78 'z$r_buff0_thd2' '_Bool'
|   |     |-ImplicitCastExpr 0x55be7e51b428 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x55be7e51b3e0 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x55be7e51b3b0 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x55be7e51b458 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x55be7e51b440 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x55be7e51b408 <col:66> '_Bool' lvalue Var 0x55be7e518fc0 'z$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x55be7e51b7a0 <line:745:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x55be7e51b4d8 <col:3> '_Bool' lvalue Var 0x55be7e5190b8 'z$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x55be7e51b788 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55be7e51b758 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x55be7e51b678 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x55be7e51b598 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x55be7e51b550 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x55be7e51b538 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x55be7e51b4f8 <col:20> '_Bool' lvalue Var 0x55be7e518fc0 'z$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x55be7e51b580 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x55be7e51b568 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x55be7e51b518 <col:38> '_Bool' lvalue Var 0x55be7e518b78 'z$r_buff0_thd2' '_Bool'
|   |     | `-BinaryOperator 0x55be7e51b658 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x55be7e51b610 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x55be7e51b5f8 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x55be7e51b5b8 <col:56> '_Bool' lvalue Var 0x55be7e5190b8 'z$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x55be7e51b640 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x55be7e51b628 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x55be7e51b5d8 <col:74> '_Bool' lvalue Var 0x55be7e518d58 'z$r_buff1_thd2' '_Bool'
|   |     |-ImplicitCastExpr 0x55be7e51b710 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x55be7e51b6c8 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x55be7e51b698 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x55be7e51b740 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x55be7e51b728 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x55be7e51b6f0 <col:102> '_Bool' lvalue Var 0x55be7e5190b8 'z$w_buff1_used' '_Bool'
|   |-BinaryOperator 0x55be7e51b9a8 <line:746:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x55be7e51b7c0 <col:3> '_Bool' lvalue Var 0x55be7e518b78 'z$r_buff0_thd2' '_Bool'
|   | `-ImplicitCastExpr 0x55be7e51b990 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55be7e51b960 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x55be7e51b880 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x55be7e51b838 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x55be7e51b820 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x55be7e51b7e0 <col:20> '_Bool' lvalue Var 0x55be7e518fc0 'z$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x55be7e51b868 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x55be7e51b850 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x55be7e51b800 <col:38> '_Bool' lvalue Var 0x55be7e518b78 'z$r_buff0_thd2' '_Bool'
|   |     |-ImplicitCastExpr 0x55be7e51b918 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x55be7e51b8d0 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x55be7e51b8a0 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x55be7e51b948 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x55be7e51b930 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x55be7e51b8f8 <col:66> '_Bool' lvalue Var 0x55be7e518b78 'z$r_buff0_thd2' '_Bool'
|   |-BinaryOperator 0x55be7e51bca8 <line:747:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x55be7e51b9c8 <col:3> '_Bool' lvalue Var 0x55be7e518d58 'z$r_buff1_thd2' '_Bool'
|   | `-ImplicitCastExpr 0x55be7e51bc90 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55be7e51bc60 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x55be7e51bb80 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x55be7e51ba88 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x55be7e51ba40 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x55be7e51ba28 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x55be7e51b9e8 <col:20> '_Bool' lvalue Var 0x55be7e518fc0 'z$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x55be7e51ba70 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x55be7e51ba58 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x55be7e51ba08 <col:38> '_Bool' lvalue Var 0x55be7e518b78 'z$r_buff0_thd2' '_Bool'
|   |     | `-BinaryOperator 0x55be7e51bb60 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x55be7e51bb00 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x55be7e51bae8 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x55be7e51baa8 <col:56> '_Bool' lvalue Var 0x55be7e5190b8 'z$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x55be7e51bb48 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x55be7e51bb30 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x55be7e51bac8 <col:74> '_Bool' lvalue Var 0x55be7e518d58 'z$r_buff1_thd2' '_Bool'
|   |     |-ImplicitCastExpr 0x55be7e51bc18 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x55be7e51bbd0 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x55be7e51bba0 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x55be7e51bc48 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x55be7e51bc30 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x55be7e51bbf8 <col:102> '_Bool' lvalue Var 0x55be7e518d58 'z$r_buff1_thd2' '_Bool'
|   |-CallExpr 0x55be7e51bd00 <line:748:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x55be7e51bce8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55be7e51bcc8 <col:3> 'void ()' Function 0x55be7e4bef00 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x55be7e51bd58 <line:749:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x55be7e51bd40 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55be7e51bd20 <col:3> 'void ()' Function 0x55be7e4bee40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x55be7e51be10 <line:750:3, col:41> 'int' '='
|   | |-DeclRefExpr 0x55be7e51bd78 <col:3> 'int' lvalue Var 0x55be7e518120 '__unbuffered_cnt' 'int'
|   | `-BinaryOperator 0x55be7e51bdf0 <col:22, col:41> 'int' '+'
|   |   |-ImplicitCastExpr 0x55be7e51bdd8 <col:22> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x55be7e51bd98 <col:22> 'int' lvalue Var 0x55be7e518120 '__unbuffered_cnt' 'int'
|   |   `-IntegerLiteral 0x55be7e51bdb8 <col:41> 'int' 1
|   |-CallExpr 0x55be7e51be68 <line:751:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x55be7e51be50 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55be7e51be30 <col:3> 'void ()' Function 0x55be7e4bef00 '__VERIFIER_atomic_end' 'void ()'
|   `-ReturnStmt 0x55be7e51bee0 <line:752:3, col:36>
|     `-CallExpr 0x55be7e51bec0 <col:10, col:36> 'void *'
|       `-ImplicitCastExpr 0x55be7e51bea8 <col:10> 'void *(*)(void)' <FunctionToPointerDecay>
|         `-DeclRefExpr 0x55be7e51be88 <col:10> 'void *(void)' Function 0x55be7e4be958 '__VERIFIER_nondet_pointer' 'void *(void)'
|-FunctionDecl 0x55be7e51c038 prev 0x55be7e517da0 <line:754:1, line:789:1> line:754:8 used P2 'void *(void *)'
| |-ParmVarDecl 0x55be7e51bfa0 <col:11, col:17> col:17 arg 'void *'
| `-CompoundStmt 0x55be7e51fd40 <line:755:1, line:789:1>
|   |-CallExpr 0x55be7e51c118 <line:756:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x55be7e51c100 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55be7e51c0e0 <col:3> 'void ()' Function 0x55be7e4bee40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x55be7e51c178 <line:757:3, col:7> 'int' '='
|   | |-DeclRefExpr 0x55be7e51c138 <col:3> 'int' lvalue Var 0x55be7e5187b0 'y' 'int'
|   | `-IntegerLiteral 0x55be7e51c158 <col:7> 'int' 1
|   |-CallExpr 0x55be7e51c1d0 <line:758:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x55be7e51c1b8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55be7e51c198 <col:3> 'void ()' Function 0x55be7e4bef00 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x55be7e51c228 <line:759:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x55be7e51c210 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55be7e51c1f0 <col:3> 'void ()' Function 0x55be7e4bee40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x55be7e51c2a0 <line:760:3, col:25> 'int' '='
|   | |-DeclRefExpr 0x55be7e51c248 <col:3> 'int' lvalue Var 0x55be7e518360 '__unbuffered_p2_EAX' 'int'
|   | `-ImplicitCastExpr 0x55be7e51c288 <col:25> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x55be7e51c268 <col:25> 'int' lvalue Var 0x55be7e5187b0 'y' 'int'
|   |-CallExpr 0x55be7e51c2f8 <line:761:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x55be7e51c2e0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55be7e51c2c0 <col:3> 'void ()' Function 0x55be7e4bef00 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x55be7e51c350 <line:762:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x55be7e51c338 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55be7e51c318 <col:3> 'void ()' Function 0x55be7e4bee40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x55be7e51c400 <line:763:3, col:45> '_Bool' '='
|   | |-DeclRefExpr 0x55be7e51c370 <col:3> '_Bool' lvalue Var 0x55be7e519130 'weak$$choice0' '_Bool'
|   | `-ImplicitCastExpr 0x55be7e51c3e8 <col:19, col:45> '_Bool' <PointerToBoolean>
|   |   `-CallExpr 0x55be7e51c3c8 <col:19, col:45> 'void *'
|   |     `-ImplicitCastExpr 0x55be7e51c3b0 <col:19> 'void *(*)(void)' <FunctionToPointerDecay>
|   |       `-DeclRefExpr 0x55be7e51c390 <col:19> 'void *(void)' Function 0x55be7e4be958 '__VERIFIER_nondet_pointer' 'void *(void)'
|   |-BinaryOperator 0x55be7e51c4b0 <line:764:3, col:45> '_Bool' '='
|   | |-DeclRefExpr 0x55be7e51c420 <col:3> '_Bool' lvalue Var 0x55be7e5191a8 'weak$$choice2' '_Bool'
|   | `-ImplicitCastExpr 0x55be7e51c498 <col:19, col:45> '_Bool' <PointerToBoolean>
|   |   `-CallExpr 0x55be7e51c478 <col:19, col:45> 'void *'
|   |     `-ImplicitCastExpr 0x55be7e51c460 <col:19> 'void *(*)(void)' <FunctionToPointerDecay>
|   |       `-DeclRefExpr 0x55be7e51c440 <col:19> 'void *(void)' Function 0x55be7e4be958 '__VERIFIER_nondet_pointer' 'void *(void)'
|   |-BinaryOperator 0x55be7e51c528 <line:765:3, col:21> '_Bool' '='
|   | |-DeclRefExpr 0x55be7e51c4d0 <col:3> '_Bool' lvalue Var 0x55be7e518968 'z$flush_delayed' '_Bool'
|   | `-ImplicitCastExpr 0x55be7e51c510 <col:21> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x55be7e51c4f0 <col:21> '_Bool' lvalue Var 0x55be7e5191a8 'weak$$choice2' '_Bool'
|   |-BinaryOperator 0x55be7e51c5a0 <line:766:3, col:15> 'int' '='
|   | |-DeclRefExpr 0x55be7e51c548 <col:3> 'int' lvalue Var 0x55be7e5189e8 'z$mem_tmp' 'int'
|   | `-ImplicitCastExpr 0x55be7e51c588 <col:15> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x55be7e51c568 <col:15> 'int' lvalue Var 0x55be7e5188d0 'z' 'int'
|   |-BinaryOperator 0x55be7e51c9d8 <line:767:3, col:162> 'int' '='
|   | |-DeclRefExpr 0x55be7e51c5c0 <col:3> 'int' lvalue Var 0x55be7e5188d0 'z' 'int'
|   | `-ConditionalOperator 0x55be7e51c9a8 <col:7, col:162> 'int'
|   |   |-BinaryOperator 0x55be7e51c7d0 <col:7, col:84> 'int' '||'
|   |   | |-BinaryOperator 0x55be7e51c6f0 <col:7, col:46> 'int' '||'
|   |   | | |-UnaryOperator 0x55be7e51c618 <col:7, col:8> 'int' prefix '!' cannot overflow
|   |   | | | `-ImplicitCastExpr 0x55be7e51c600 <col:8> '_Bool' <LValueToRValue>
|   |   | | |   `-DeclRefExpr 0x55be7e51c5e0 <col:8> '_Bool' lvalue Var 0x55be7e518fc0 'z$w_buff0_used' '_Bool'
|   |   | | `-BinaryOperator 0x55be7e51c6d0 <col:26, col:46> 'int' '&&'
|   |   | |   |-UnaryOperator 0x55be7e51c668 <col:26, col:27> 'int' prefix '!' cannot overflow
|   |   | |   | `-ImplicitCastExpr 0x55be7e51c650 <col:27> '_Bool' <LValueToRValue>
|   |   | |   |   `-DeclRefExpr 0x55be7e51c630 <col:27> '_Bool' lvalue Var 0x55be7e518bf0 'z$r_buff0_thd3' '_Bool'
|   |   | |   `-UnaryOperator 0x55be7e51c6b8 <col:45, col:46> 'int' prefix '!' cannot overflow
|   |   | |     `-ImplicitCastExpr 0x55be7e51c6a0 <col:46> '_Bool' <LValueToRValue>
|   |   | |       `-DeclRefExpr 0x55be7e51c680 <col:46> '_Bool' lvalue Var 0x55be7e5190b8 'z$w_buff1_used' '_Bool'
|   |   | `-BinaryOperator 0x55be7e51c7b0 <col:64, col:84> 'int' '&&'
|   |   |   |-UnaryOperator 0x55be7e51c748 <col:64, col:65> 'int' prefix '!' cannot overflow
|   |   |   | `-ImplicitCastExpr 0x55be7e51c730 <col:65> '_Bool' <LValueToRValue>
|   |   |   |   `-DeclRefExpr 0x55be7e51c710 <col:65> '_Bool' lvalue Var 0x55be7e518bf0 'z$r_buff0_thd3' '_Bool'
|   |   |   `-UnaryOperator 0x55be7e51c798 <col:83, col:84> 'int' prefix '!' cannot overflow
|   |   |     `-ImplicitCastExpr 0x55be7e51c780 <col:84> '_Bool' <LValueToRValue>
|   |   |       `-DeclRefExpr 0x55be7e51c760 <col:84> '_Bool' lvalue Var 0x55be7e518dd0 'z$r_buff1_thd3' '_Bool'
|   |   |-ImplicitCastExpr 0x55be7e51c990 <col:101> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x55be7e51c7f0 <col:101> 'int' lvalue Var 0x55be7e5188d0 'z' 'int'
|   |   `-ParenExpr 0x55be7e51c970 <col:105, col:162> 'int'
|   |     `-ConditionalOperator 0x55be7e51c940 <col:106, col:153> 'int'
|   |       |-BinaryOperator 0x55be7e51c8b0 <col:106, col:124> 'int' '&&'
|   |       | |-ImplicitCastExpr 0x55be7e51c868 <col:106> 'int' <IntegralCast>
|   |       | | `-ImplicitCastExpr 0x55be7e51c850 <col:106> '_Bool' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x55be7e51c810 <col:106> '_Bool' lvalue Var 0x55be7e518fc0 'z$w_buff0_used' '_Bool'
|   |       | `-ImplicitCastExpr 0x55be7e51c898 <col:124> 'int' <IntegralCast>
|   |       |   `-ImplicitCastExpr 0x55be7e51c880 <col:124> '_Bool' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x55be7e51c830 <col:124> '_Bool' lvalue Var 0x55be7e518bf0 'z$r_buff0_thd3' '_Bool'
|   |       |-ImplicitCastExpr 0x55be7e51c910 <col:141> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x55be7e51c8d0 <col:141> 'int' lvalue Var 0x55be7e518f48 'z$w_buff0' 'int'
|   |       `-ImplicitCastExpr 0x55be7e51c928 <col:153> 'int' <LValueToRValue>
|   |         `-DeclRefExpr 0x55be7e51c8f0 <col:153> 'int' lvalue Var 0x55be7e519040 'z$w_buff1' 'int'
|   |-BinaryOperator 0x55be7e51cef8 <line:768:3, col:208> 'int' '='
|   | |-DeclRefExpr 0x55be7e51c9f8 <col:3> 'int' lvalue Var 0x55be7e518f48 'z$w_buff0' 'int'
|   | `-ConditionalOperator 0x55be7e51cec8 <col:15, col:208> 'int'
|   |   |-ImplicitCastExpr 0x55be7e51ce98 <col:15> 'int' <IntegralCast>
|   |   | `-ImplicitCastExpr 0x55be7e51ce80 <col:15> '_Bool' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x55be7e51ca18 <col:15> '_Bool' lvalue Var 0x55be7e5191a8 'weak$$choice2' '_Bool'
|   |   |-ImplicitCastExpr 0x55be7e51ceb0 <col:31> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x55be7e51ca38 <col:31> 'int' lvalue Var 0x55be7e518f48 'z$w_buff0' 'int'
|   |   `-ParenExpr 0x55be7e51ce60 <col:43, col:208> 'int'
|   |     `-ConditionalOperator 0x55be7e51ce30 <col:44, col:207> 'int'
|   |       |-BinaryOperator 0x55be7e51cc58 <col:44, col:121> 'int' '||'
|   |       | |-BinaryOperator 0x55be7e51cb78 <col:44, col:83> 'int' '||'
|   |       | | |-UnaryOperator 0x55be7e51ca90 <col:44, col:45> 'int' prefix '!' cannot overflow
|   |       | | | `-ImplicitCastExpr 0x55be7e51ca78 <col:45> '_Bool' <LValueToRValue>
|   |       | | |   `-DeclRefExpr 0x55be7e51ca58 <col:45> '_Bool' lvalue Var 0x55be7e518fc0 'z$w_buff0_used' '_Bool'
|   |       | | `-BinaryOperator 0x55be7e51cb58 <col:63, col:83> 'int' '&&'
|   |       | |   |-UnaryOperator 0x55be7e51cae0 <col:63, col:64> 'int' prefix '!' cannot overflow
|   |       | |   | `-ImplicitCastExpr 0x55be7e51cac8 <col:64> '_Bool' <LValueToRValue>
|   |       | |   |   `-DeclRefExpr 0x55be7e51caa8 <col:64> '_Bool' lvalue Var 0x55be7e518bf0 'z$r_buff0_thd3' '_Bool'
|   |       | |   `-UnaryOperator 0x55be7e51cb40 <col:82, col:83> 'int' prefix '!' cannot overflow
|   |       | |     `-ImplicitCastExpr 0x55be7e51cb18 <col:83> '_Bool' <LValueToRValue>
|   |       | |       `-DeclRefExpr 0x55be7e51caf8 <col:83> '_Bool' lvalue Var 0x55be7e5190b8 'z$w_buff1_used' '_Bool'
|   |       | `-BinaryOperator 0x55be7e51cc38 <col:101, col:121> 'int' '&&'
|   |       |   |-UnaryOperator 0x55be7e51cbd0 <col:101, col:102> 'int' prefix '!' cannot overflow
|   |       |   | `-ImplicitCastExpr 0x55be7e51cbb8 <col:102> '_Bool' <LValueToRValue>
|   |       |   |   `-DeclRefExpr 0x55be7e51cb98 <col:102> '_Bool' lvalue Var 0x55be7e518bf0 'z$r_buff0_thd3' '_Bool'
|   |       |   `-UnaryOperator 0x55be7e51cc20 <col:120, col:121> 'int' prefix '!' cannot overflow
|   |       |     `-ImplicitCastExpr 0x55be7e51cc08 <col:121> '_Bool' <LValueToRValue>
|   |       |       `-DeclRefExpr 0x55be7e51cbe8 <col:121> '_Bool' lvalue Var 0x55be7e518dd0 'z$r_buff1_thd3' '_Bool'
|   |       |-ImplicitCastExpr 0x55be7e51ce18 <col:138> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x55be7e51cc78 <col:138> 'int' lvalue Var 0x55be7e518f48 'z$w_buff0' 'int'
|   |       `-ParenExpr 0x55be7e51cdf8 <col:150, col:207> 'int'
|   |         `-ConditionalOperator 0x55be7e51cdc8 <col:151, col:198> 'int'
|   |           |-BinaryOperator 0x55be7e51cd38 <col:151, col:169> 'int' '&&'
|   |           | |-ImplicitCastExpr 0x55be7e51ccf0 <col:151> 'int' <IntegralCast>
|   |           | | `-ImplicitCastExpr 0x55be7e51ccd8 <col:151> '_Bool' <LValueToRValue>
|   |           | |   `-DeclRefExpr 0x55be7e51cc98 <col:151> '_Bool' lvalue Var 0x55be7e518fc0 'z$w_buff0_used' '_Bool'
|   |           | `-ImplicitCastExpr 0x55be7e51cd20 <col:169> 'int' <IntegralCast>
|   |           |   `-ImplicitCastExpr 0x55be7e51cd08 <col:169> '_Bool' <LValueToRValue>
|   |           |     `-DeclRefExpr 0x55be7e51ccb8 <col:169> '_Bool' lvalue Var 0x55be7e518bf0 'z$r_buff0_thd3' '_Bool'
|   |           |-ImplicitCastExpr 0x55be7e51cd98 <col:186> 'int' <LValueToRValue>
|   |           | `-DeclRefExpr 0x55be7e51cd58 <col:186> 'int' lvalue Var 0x55be7e518f48 'z$w_buff0' 'int'
|   |           `-ImplicitCastExpr 0x55be7e51cdb0 <col:198> 'int' <LValueToRValue>
|   |             `-DeclRefExpr 0x55be7e51cd78 <col:198> 'int' lvalue Var 0x55be7e518f48 'z$w_buff0' 'int'
|   |-BinaryOperator 0x55be7e51d408 <line:769:3, col:208> 'int' '='
|   | |-DeclRefExpr 0x55be7e51cf18 <col:3> 'int' lvalue Var 0x55be7e519040 'z$w_buff1' 'int'
|   | `-ConditionalOperator 0x55be7e51d3d8 <col:15, col:208> 'int'
|   |   |-ImplicitCastExpr 0x55be7e51d3a8 <col:15> 'int' <IntegralCast>
|   |   | `-ImplicitCastExpr 0x55be7e51d390 <col:15> '_Bool' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x55be7e51cf38 <col:15> '_Bool' lvalue Var 0x55be7e5191a8 'weak$$choice2' '_Bool'
|   |   |-ImplicitCastExpr 0x55be7e51d3c0 <col:31> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x55be7e51cf58 <col:31> 'int' lvalue Var 0x55be7e519040 'z$w_buff1' 'int'
|   |   `-ParenExpr 0x55be7e51d370 <col:43, col:208> 'int'
|   |     `-ConditionalOperator 0x55be7e51d340 <col:44, col:207> 'int'
|   |       |-BinaryOperator 0x55be7e51d168 <col:44, col:121> 'int' '||'
|   |       | |-BinaryOperator 0x55be7e51d088 <col:44, col:83> 'int' '||'
|   |       | | |-UnaryOperator 0x55be7e51cfb0 <col:44, col:45> 'int' prefix '!' cannot overflow
|   |       | | | `-ImplicitCastExpr 0x55be7e51cf98 <col:45> '_Bool' <LValueToRValue>
|   |       | | |   `-DeclRefExpr 0x55be7e51cf78 <col:45> '_Bool' lvalue Var 0x55be7e518fc0 'z$w_buff0_used' '_Bool'
|   |       | | `-BinaryOperator 0x55be7e51d068 <col:63, col:83> 'int' '&&'
|   |       | |   |-UnaryOperator 0x55be7e51d000 <col:63, col:64> 'int' prefix '!' cannot overflow
|   |       | |   | `-ImplicitCastExpr 0x55be7e51cfe8 <col:64> '_Bool' <LValueToRValue>
|   |       | |   |   `-DeclRefExpr 0x55be7e51cfc8 <col:64> '_Bool' lvalue Var 0x55be7e518bf0 'z$r_buff0_thd3' '_Bool'
|   |       | |   `-UnaryOperator 0x55be7e51d050 <col:82, col:83> 'int' prefix '!' cannot overflow
|   |       | |     `-ImplicitCastExpr 0x55be7e51d038 <col:83> '_Bool' <LValueToRValue>
|   |       | |       `-DeclRefExpr 0x55be7e51d018 <col:83> '_Bool' lvalue Var 0x55be7e5190b8 'z$w_buff1_used' '_Bool'
|   |       | `-BinaryOperator 0x55be7e51d148 <col:101, col:121> 'int' '&&'
|   |       |   |-UnaryOperator 0x55be7e51d0e0 <col:101, col:102> 'int' prefix '!' cannot overflow
|   |       |   | `-ImplicitCastExpr 0x55be7e51d0c8 <col:102> '_Bool' <LValueToRValue>
|   |       |   |   `-DeclRefExpr 0x55be7e51d0a8 <col:102> '_Bool' lvalue Var 0x55be7e518bf0 'z$r_buff0_thd3' '_Bool'
|   |       |   `-UnaryOperator 0x55be7e51d130 <col:120, col:121> 'int' prefix '!' cannot overflow
|   |       |     `-ImplicitCastExpr 0x55be7e51d118 <col:121> '_Bool' <LValueToRValue>
|   |       |       `-DeclRefExpr 0x55be7e51d0f8 <col:121> '_Bool' lvalue Var 0x55be7e518dd0 'z$r_buff1_thd3' '_Bool'
|   |       |-ImplicitCastExpr 0x55be7e51d328 <col:138> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x55be7e51d188 <col:138> 'int' lvalue Var 0x55be7e519040 'z$w_buff1' 'int'
|   |       `-ParenExpr 0x55be7e51d308 <col:150, col:207> 'int'
|   |         `-ConditionalOperator 0x55be7e51d2d8 <col:151, col:198> 'int'
|   |           |-BinaryOperator 0x55be7e51d248 <col:151, col:169> 'int' '&&'
|   |           | |-ImplicitCastExpr 0x55be7e51d200 <col:151> 'int' <IntegralCast>
|   |           | | `-ImplicitCastExpr 0x55be7e51d1e8 <col:151> '_Bool' <LValueToRValue>
|   |           | |   `-DeclRefExpr 0x55be7e51d1a8 <col:151> '_Bool' lvalue Var 0x55be7e518fc0 'z$w_buff0_used' '_Bool'
|   |           | `-ImplicitCastExpr 0x55be7e51d230 <col:169> 'int' <IntegralCast>
|   |           |   `-ImplicitCastExpr 0x55be7e51d218 <col:169> '_Bool' <LValueToRValue>
|   |           |     `-DeclRefExpr 0x55be7e51d1c8 <col:169> '_Bool' lvalue Var 0x55be7e518bf0 'z$r_buff0_thd3' '_Bool'
|   |           |-ImplicitCastExpr 0x55be7e51d2a8 <col:186> 'int' <LValueToRValue>
|   |           | `-DeclRefExpr 0x55be7e51d268 <col:186> 'int' lvalue Var 0x55be7e519040 'z$w_buff1' 'int'
|   |           `-ImplicitCastExpr 0x55be7e51d2c0 <col:198> 'int' <LValueToRValue>
|   |             `-DeclRefExpr 0x55be7e51d288 <col:198> 'int' lvalue Var 0x55be7e519040 'z$w_buff1' 'int'
|   |-BinaryOperator 0x55be7e51d9b0 <line:770:3, col:227> '_Bool' '='
|   | |-DeclRefExpr 0x55be7e51d428 <col:3> '_Bool' lvalue Var 0x55be7e518fc0 'z$w_buff0_used' '_Bool'
|   | `-ImplicitCastExpr 0x55be7e51d998 <col:20, col:227> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55be7e51d968 <col:20, col:227> 'int'
|   |     |-ImplicitCastExpr 0x55be7e51d920 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x55be7e51d908 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x55be7e51d448 <col:20> '_Bool' lvalue Var 0x55be7e5191a8 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x55be7e51d950 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x55be7e51d938 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x55be7e51d468 <col:36> '_Bool' lvalue Var 0x55be7e518fc0 'z$w_buff0_used' '_Bool'
|   |     `-ParenExpr 0x55be7e51d8e8 <col:53, col:227> 'int'
|   |       `-ConditionalOperator 0x55be7e51d8b8 <col:54, col:226> 'int'
|   |         |-BinaryOperator 0x55be7e51d678 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x55be7e51d598 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x55be7e51d4c0 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x55be7e51d4a8 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x55be7e51d488 <col:55> '_Bool' lvalue Var 0x55be7e518fc0 'z$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x55be7e51d578 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x55be7e51d510 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x55be7e51d4f8 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x55be7e51d4d8 <col:74> '_Bool' lvalue Var 0x55be7e518bf0 'z$r_buff0_thd3' '_Bool'
|   |         | |   `-UnaryOperator 0x55be7e51d560 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x55be7e51d548 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x55be7e51d528 <col:93> '_Bool' lvalue Var 0x55be7e5190b8 'z$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x55be7e51d658 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x55be7e51d5f0 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x55be7e51d5d8 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x55be7e51d5b8 <col:112> '_Bool' lvalue Var 0x55be7e518bf0 'z$r_buff0_thd3' '_Bool'
|   |         |   `-UnaryOperator 0x55be7e51d640 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x55be7e51d628 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x55be7e51d608 <col:131> '_Bool' lvalue Var 0x55be7e518dd0 'z$r_buff1_thd3' '_Bool'
|   |         |-ImplicitCastExpr 0x55be7e51d8a0 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x55be7e51d888 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x55be7e51d698 <col:148> '_Bool' lvalue Var 0x55be7e518fc0 'z$w_buff0_used' '_Bool'
|   |         `-ParenExpr 0x55be7e51d868 <col:165, col:226> 'int'
|   |           `-ConditionalOperator 0x55be7e51d838 <col:166, col:212> 'int'
|   |             |-BinaryOperator 0x55be7e51d758 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x55be7e51d710 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x55be7e51d6f8 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x55be7e51d6b8 <col:166> '_Bool' lvalue Var 0x55be7e518fc0 'z$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x55be7e51d740 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x55be7e51d728 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x55be7e51d6d8 <col:184> '_Bool' lvalue Var 0x55be7e518bf0 'z$r_buff0_thd3' '_Bool'
|   |             |-ImplicitCastExpr 0x55be7e51d7f0 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x55be7e51d7a8 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x55be7e51d778 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x55be7e51d820 <col:212> 'int' <IntegralCast>
|   |               `-ImplicitCastExpr 0x55be7e51d808 <col:212> '_Bool' <LValueToRValue>
|   |                 `-DeclRefExpr 0x55be7e51d7d0 <col:212> '_Bool' lvalue Var 0x55be7e518fc0 'z$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x55be7e51df88 <line:771:3, col:221> '_Bool' '='
|   | |-DeclRefExpr 0x55be7e51d9d0 <col:3> '_Bool' lvalue Var 0x55be7e5190b8 'z$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x55be7e51df70 <col:20, col:221> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55be7e51df40 <col:20, col:221> 'int'
|   |     |-ImplicitCastExpr 0x55be7e51def8 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x55be7e51dee0 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x55be7e51d9f0 <col:20> '_Bool' lvalue Var 0x55be7e5191a8 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x55be7e51df28 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x55be7e51df10 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x55be7e51da10 <col:36> '_Bool' lvalue Var 0x55be7e5190b8 'z$w_buff1_used' '_Bool'
|   |     `-ParenExpr 0x55be7e51dec0 <col:53, col:221> 'int'
|   |       `-ConditionalOperator 0x55be7e51de90 <col:54, col:220> 'int'
|   |         |-BinaryOperator 0x55be7e51dc30 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x55be7e51db50 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x55be7e51da68 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x55be7e51da50 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x55be7e51da30 <col:55> '_Bool' lvalue Var 0x55be7e518fc0 'z$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x55be7e51db20 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x55be7e51dab8 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x55be7e51daa0 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x55be7e51da80 <col:74> '_Bool' lvalue Var 0x55be7e518bf0 'z$r_buff0_thd3' '_Bool'
|   |         | |   `-UnaryOperator 0x55be7e51db08 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x55be7e51daf0 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x55be7e51dad0 <col:93> '_Bool' lvalue Var 0x55be7e5190b8 'z$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x55be7e51dc10 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x55be7e51dba8 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x55be7e51db90 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x55be7e51db70 <col:112> '_Bool' lvalue Var 0x55be7e518bf0 'z$r_buff0_thd3' '_Bool'
|   |         |   `-UnaryOperator 0x55be7e51dbf8 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x55be7e51dbe0 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x55be7e51dbc0 <col:131> '_Bool' lvalue Var 0x55be7e518dd0 'z$r_buff1_thd3' '_Bool'
|   |         |-ImplicitCastExpr 0x55be7e51de78 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x55be7e51de60 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x55be7e51dc50 <col:148> '_Bool' lvalue Var 0x55be7e5190b8 'z$w_buff1_used' '_Bool'
|   |         `-ParenExpr 0x55be7e51de40 <col:165, col:220> 'int'
|   |           `-ConditionalOperator 0x55be7e51de10 <col:166, col:219> 'int'
|   |             |-BinaryOperator 0x55be7e51dd10 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x55be7e51dcc8 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x55be7e51dcb0 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x55be7e51dc70 <col:166> '_Bool' lvalue Var 0x55be7e518fc0 'z$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x55be7e51dcf8 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x55be7e51dce0 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x55be7e51dc90 <col:184> '_Bool' lvalue Var 0x55be7e518bf0 'z$r_buff0_thd3' '_Bool'
|   |             |-ImplicitCastExpr 0x55be7e51dde0 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x55be7e51dd60 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x55be7e51dd30 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x55be7e51ddf8 <col:212, col:219> 'int' <IntegralCast>
|   |               `-CStyleCastExpr 0x55be7e51ddb8 <col:212, col:219> '_Bool' <IntegralToBoolean>
|   |                 `-IntegerLiteral 0x55be7e51dd88 <col:219> 'int' 0
|   |-BinaryOperator 0x55be7e51e530 <line:772:3, col:227> '_Bool' '='
|   | |-DeclRefExpr 0x55be7e51dfa8 <col:3> '_Bool' lvalue Var 0x55be7e518bf0 'z$r_buff0_thd3' '_Bool'
|   | `-ImplicitCastExpr 0x55be7e51e518 <col:20, col:227> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55be7e51e4e8 <col:20, col:227> 'int'
|   |     |-ImplicitCastExpr 0x55be7e51e4a0 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x55be7e51e488 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x55be7e51dfc8 <col:20> '_Bool' lvalue Var 0x55be7e5191a8 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x55be7e51e4d0 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x55be7e51e4b8 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x55be7e51dfe8 <col:36> '_Bool' lvalue Var 0x55be7e518bf0 'z$r_buff0_thd3' '_Bool'
|   |     `-ParenExpr 0x55be7e51e468 <col:53, col:227> 'int'
|   |       `-ConditionalOperator 0x55be7e51e438 <col:54, col:226> 'int'
|   |         |-BinaryOperator 0x55be7e51e1f8 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x55be7e51e118 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x55be7e51e040 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x55be7e51e028 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x55be7e51e008 <col:55> '_Bool' lvalue Var 0x55be7e518fc0 'z$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x55be7e51e0f8 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x55be7e51e090 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x55be7e51e078 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x55be7e51e058 <col:74> '_Bool' lvalue Var 0x55be7e518bf0 'z$r_buff0_thd3' '_Bool'
|   |         | |   `-UnaryOperator 0x55be7e51e0e0 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x55be7e51e0c8 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x55be7e51e0a8 <col:93> '_Bool' lvalue Var 0x55be7e5190b8 'z$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x55be7e51e1d8 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x55be7e51e170 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x55be7e51e158 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x55be7e51e138 <col:112> '_Bool' lvalue Var 0x55be7e518bf0 'z$r_buff0_thd3' '_Bool'
|   |         |   `-UnaryOperator 0x55be7e51e1c0 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x55be7e51e1a8 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x55be7e51e188 <col:131> '_Bool' lvalue Var 0x55be7e518dd0 'z$r_buff1_thd3' '_Bool'
|   |         |-ImplicitCastExpr 0x55be7e51e420 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x55be7e51e408 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x55be7e51e218 <col:148> '_Bool' lvalue Var 0x55be7e518bf0 'z$r_buff0_thd3' '_Bool'
|   |         `-ParenExpr 0x55be7e51e3e8 <col:165, col:226> 'int'
|   |           `-ConditionalOperator 0x55be7e51e3b8 <col:166, col:212> 'int'
|   |             |-BinaryOperator 0x55be7e51e2d8 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x55be7e51e290 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x55be7e51e278 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x55be7e51e238 <col:166> '_Bool' lvalue Var 0x55be7e518fc0 'z$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x55be7e51e2c0 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x55be7e51e2a8 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x55be7e51e258 <col:184> '_Bool' lvalue Var 0x55be7e518bf0 'z$r_buff0_thd3' '_Bool'
|   |             |-ImplicitCastExpr 0x55be7e51e370 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x55be7e51e328 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x55be7e51e2f8 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x55be7e51e3a0 <col:212> 'int' <IntegralCast>
|   |               `-ImplicitCastExpr 0x55be7e51e388 <col:212> '_Bool' <LValueToRValue>
|   |                 `-DeclRefExpr 0x55be7e51e350 <col:212> '_Bool' lvalue Var 0x55be7e518bf0 'z$r_buff0_thd3' '_Bool'
|   |-BinaryOperator 0x55be7e51eaf8 <line:773:3, col:221> '_Bool' '='
|   | |-DeclRefExpr 0x55be7e51e550 <col:3> '_Bool' lvalue Var 0x55be7e518dd0 'z$r_buff1_thd3' '_Bool'
|   | `-ImplicitCastExpr 0x55be7e51eae0 <col:20, col:221> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55be7e51eab0 <col:20, col:221> 'int'
|   |     |-ImplicitCastExpr 0x55be7e51ea68 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x55be7e51ea50 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x55be7e51e570 <col:20> '_Bool' lvalue Var 0x55be7e5191a8 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x55be7e51ea98 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x55be7e51ea80 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x55be7e51e590 <col:36> '_Bool' lvalue Var 0x55be7e518dd0 'z$r_buff1_thd3' '_Bool'
|   |     `-ParenExpr 0x55be7e51ea30 <col:53, col:221> 'int'
|   |       `-ConditionalOperator 0x55be7e51ea00 <col:54, col:220> 'int'
|   |         |-BinaryOperator 0x55be7e51e7a0 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x55be7e51e6c0 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x55be7e51e5e8 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x55be7e51e5d0 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x55be7e51e5b0 <col:55> '_Bool' lvalue Var 0x55be7e518fc0 'z$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x55be7e51e6a0 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x55be7e51e638 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x55be7e51e620 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x55be7e51e600 <col:74> '_Bool' lvalue Var 0x55be7e518bf0 'z$r_buff0_thd3' '_Bool'
|   |         | |   `-UnaryOperator 0x55be7e51e688 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x55be7e51e670 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x55be7e51e650 <col:93> '_Bool' lvalue Var 0x55be7e5190b8 'z$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x55be7e51e780 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x55be7e51e718 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x55be7e51e700 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x55be7e51e6e0 <col:112> '_Bool' lvalue Var 0x55be7e518bf0 'z$r_buff0_thd3' '_Bool'
|   |         |   `-UnaryOperator 0x55be7e51e768 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x55be7e51e750 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x55be7e51e730 <col:131> '_Bool' lvalue Var 0x55be7e518dd0 'z$r_buff1_thd3' '_Bool'
|   |         |-ImplicitCastExpr 0x55be7e51e9e8 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x55be7e51e9d0 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x55be7e51e7c0 <col:148> '_Bool' lvalue Var 0x55be7e518dd0 'z$r_buff1_thd3' '_Bool'
|   |         `-ParenExpr 0x55be7e51e9b0 <col:165, col:220> 'int'
|   |           `-ConditionalOperator 0x55be7e51e980 <col:166, col:219> 'int'
|   |             |-BinaryOperator 0x55be7e51e880 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x55be7e51e838 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x55be7e51e820 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x55be7e51e7e0 <col:166> '_Bool' lvalue Var 0x55be7e518fc0 'z$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x55be7e51e868 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x55be7e51e850 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x55be7e51e800 <col:184> '_Bool' lvalue Var 0x55be7e518bf0 'z$r_buff0_thd3' '_Bool'
|   |             |-ImplicitCastExpr 0x55be7e51e950 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x55be7e51e8d0 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x55be7e51e8a0 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x55be7e51e968 <col:212, col:219> 'int' <IntegralCast>
|   |               `-CStyleCastExpr 0x55be7e51e928 <col:212, col:219> '_Bool' <IntegralToBoolean>
|   |                 `-IntegerLiteral 0x55be7e51e8f8 <col:219> 'int' 0
|   |-BinaryOperator 0x55be7e51eb98 <line:774:3, col:25> 'int' '='
|   | |-DeclRefExpr 0x55be7e51eb18 <col:3> 'int' lvalue Var 0x55be7e518480 '__unbuffered_p2_EBX' 'int'
|   | `-ImplicitCastExpr 0x55be7e51eb80 <col:25> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x55be7e51eb60 <col:25> 'int' lvalue Var 0x55be7e5188d0 'z' 'int'
|   |-BinaryOperator 0x55be7e51ecc8 <line:775:3, col:37> 'int' '='
|   | |-DeclRefExpr 0x55be7e51ebb8 <col:3> 'int' lvalue Var 0x55be7e5188d0 'z' 'int'
|   | `-ConditionalOperator 0x55be7e51ec98 <col:7, col:37> 'int'
|   |   |-ImplicitCastExpr 0x55be7e51ec50 <col:7> 'int' <IntegralCast>
|   |   | `-ImplicitCastExpr 0x55be7e51ec38 <col:7> '_Bool' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x55be7e51ebd8 <col:7> '_Bool' lvalue Var 0x55be7e518968 'z$flush_delayed' '_Bool'
|   |   |-ImplicitCastExpr 0x55be7e51ec68 <col:25> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x55be7e51ebf8 <col:25> 'int' lvalue Var 0x55be7e5189e8 'z$mem_tmp' 'int'
|   |   `-ImplicitCastExpr 0x55be7e51ec80 <col:37> 'int' <LValueToRValue>
|   |     `-DeclRefExpr 0x55be7e51ec18 <col:37> 'int' lvalue Var 0x55be7e5188d0 'z' 'int'
|   |-BinaryOperator 0x55be7e51ed60 <line:776:3, col:28> '_Bool' '='
|   | |-DeclRefExpr 0x55be7e51ece8 <col:3> '_Bool' lvalue Var 0x55be7e518968 'z$flush_delayed' '_Bool'
|   | `-CStyleCastExpr 0x55be7e51ed38 <col:21, col:28> '_Bool' <IntegralToBoolean>
|   |   `-IntegerLiteral 0x55be7e51ed08 <col:28> 'int' 0
|   |-CallExpr 0x55be7e51edb8 <line:777:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x55be7e51eda0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55be7e51ed80 <col:3> 'void ()' Function 0x55be7e4bef00 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x55be7e51ee10 <line:778:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x55be7e51edf8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55be7e51edd8 <col:3> 'void ()' Function 0x55be7e4bee40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x55be7e51f0f8 <line:779:3, col:103> 'int' '='
|   | |-DeclRefExpr 0x55be7e51ee30 <col:3> 'int' lvalue Var 0x55be7e5188d0 'z' 'int'
|   | `-ConditionalOperator 0x55be7e51f0c8 <col:7, col:103> 'int'
|   |   |-BinaryOperator 0x55be7e51eef0 <col:7, col:25> 'int' '&&'
|   |   | |-ImplicitCastExpr 0x55be7e51eea8 <col:7> 'int' <IntegralCast>
|   |   | | `-ImplicitCastExpr 0x55be7e51ee90 <col:7> '_Bool' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x55be7e51ee50 <col:7> '_Bool' lvalue Var 0x55be7e518fc0 'z$w_buff0_used' '_Bool'
|   |   | `-ImplicitCastExpr 0x55be7e51eed8 <col:25> 'int' <IntegralCast>
|   |   |   `-ImplicitCastExpr 0x55be7e51eec0 <col:25> '_Bool' <LValueToRValue>
|   |   |     `-DeclRefExpr 0x55be7e51ee70 <col:25> '_Bool' lvalue Var 0x55be7e518bf0 'z$r_buff0_thd3' '_Bool'
|   |   |-ImplicitCastExpr 0x55be7e51f0b0 <col:42> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x55be7e51ef10 <col:42> 'int' lvalue Var 0x55be7e518f48 'z$w_buff0' 'int'
|   |   `-ParenExpr 0x55be7e51f090 <col:54, col:103> 'int'
|   |     `-ConditionalOperator 0x55be7e51f060 <col:55, col:102> 'int'
|   |       |-BinaryOperator 0x55be7e51efd0 <col:55, col:73> 'int' '&&'
|   |       | |-ImplicitCastExpr 0x55be7e51ef88 <col:55> 'int' <IntegralCast>
|   |       | | `-ImplicitCastExpr 0x55be7e51ef70 <col:55> '_Bool' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x55be7e51ef30 <col:55> '_Bool' lvalue Var 0x55be7e5190b8 'z$w_buff1_used' '_Bool'
|   |       | `-ImplicitCastExpr 0x55be7e51efb8 <col:73> 'int' <IntegralCast>
|   |       |   `-ImplicitCastExpr 0x55be7e51efa0 <col:73> '_Bool' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x55be7e51ef50 <col:73> '_Bool' lvalue Var 0x55be7e518dd0 'z$r_buff1_thd3' '_Bool'
|   |       |-ImplicitCastExpr 0x55be7e51f030 <col:90> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x55be7e51eff0 <col:90> 'int' lvalue Var 0x55be7e519040 'z$w_buff1' 'int'
|   |       `-ImplicitCastExpr 0x55be7e51f048 <col:102> 'int' <LValueToRValue>
|   |         `-DeclRefExpr 0x55be7e51f010 <col:102> 'int' lvalue Var 0x55be7e5188d0 'z' 'int'
|   |-BinaryOperator 0x55be7e51f300 <line:780:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x55be7e51f118 <col:3> '_Bool' lvalue Var 0x55be7e518fc0 'z$w_buff0_used' '_Bool'
|   | `-ImplicitCastExpr 0x55be7e51f2e8 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55be7e51f2b8 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x55be7e51f1d8 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x55be7e51f190 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x55be7e51f178 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x55be7e51f138 <col:20> '_Bool' lvalue Var 0x55be7e518fc0 'z$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x55be7e51f1c0 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x55be7e51f1a8 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x55be7e51f158 <col:38> '_Bool' lvalue Var 0x55be7e518bf0 'z$r_buff0_thd3' '_Bool'
|   |     |-ImplicitCastExpr 0x55be7e51f270 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x55be7e51f228 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x55be7e51f1f8 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x55be7e51f2a0 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x55be7e51f288 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x55be7e51f250 <col:66> '_Bool' lvalue Var 0x55be7e518fc0 'z$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x55be7e51f5e8 <line:781:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x55be7e51f320 <col:3> '_Bool' lvalue Var 0x55be7e5190b8 'z$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x55be7e51f5d0 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55be7e51f5a0 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x55be7e51f4c0 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x55be7e51f3e0 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x55be7e51f398 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x55be7e51f380 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x55be7e51f340 <col:20> '_Bool' lvalue Var 0x55be7e518fc0 'z$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x55be7e51f3c8 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x55be7e51f3b0 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x55be7e51f360 <col:38> '_Bool' lvalue Var 0x55be7e518bf0 'z$r_buff0_thd3' '_Bool'
|   |     | `-BinaryOperator 0x55be7e51f4a0 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x55be7e51f458 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x55be7e51f440 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x55be7e51f400 <col:56> '_Bool' lvalue Var 0x55be7e5190b8 'z$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x55be7e51f488 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x55be7e51f470 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x55be7e51f420 <col:74> '_Bool' lvalue Var 0x55be7e518dd0 'z$r_buff1_thd3' '_Bool'
|   |     |-ImplicitCastExpr 0x55be7e51f558 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x55be7e51f510 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x55be7e51f4e0 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x55be7e51f588 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x55be7e51f570 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x55be7e51f538 <col:102> '_Bool' lvalue Var 0x55be7e5190b8 'z$w_buff1_used' '_Bool'
|   |-BinaryOperator 0x55be7e51f7f0 <line:782:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x55be7e51f608 <col:3> '_Bool' lvalue Var 0x55be7e518bf0 'z$r_buff0_thd3' '_Bool'
|   | `-ImplicitCastExpr 0x55be7e51f7d8 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55be7e51f7a8 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x55be7e51f6c8 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x55be7e51f680 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x55be7e51f668 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x55be7e51f628 <col:20> '_Bool' lvalue Var 0x55be7e518fc0 'z$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x55be7e51f6b0 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x55be7e51f698 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x55be7e51f648 <col:38> '_Bool' lvalue Var 0x55be7e518bf0 'z$r_buff0_thd3' '_Bool'
|   |     |-ImplicitCastExpr 0x55be7e51f760 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x55be7e51f718 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x55be7e51f6e8 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x55be7e51f790 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x55be7e51f778 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x55be7e51f740 <col:66> '_Bool' lvalue Var 0x55be7e518bf0 'z$r_buff0_thd3' '_Bool'
|   |-BinaryOperator 0x55be7e51fad8 <line:783:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x55be7e51f810 <col:3> '_Bool' lvalue Var 0x55be7e518dd0 'z$r_buff1_thd3' '_Bool'
|   | `-ImplicitCastExpr 0x55be7e51fac0 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55be7e51fa90 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x55be7e51f9b0 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x55be7e51f8d0 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x55be7e51f888 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x55be7e51f870 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x55be7e51f830 <col:20> '_Bool' lvalue Var 0x55be7e518fc0 'z$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x55be7e51f8b8 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x55be7e51f8a0 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x55be7e51f850 <col:38> '_Bool' lvalue Var 0x55be7e518bf0 'z$r_buff0_thd3' '_Bool'
|   |     | `-BinaryOperator 0x55be7e51f990 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x55be7e51f948 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x55be7e51f930 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x55be7e51f8f0 <col:56> '_Bool' lvalue Var 0x55be7e5190b8 'z$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x55be7e51f978 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x55be7e51f960 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x55be7e51f910 <col:74> '_Bool' lvalue Var 0x55be7e518dd0 'z$r_buff1_thd3' '_Bool'
|   |     |-ImplicitCastExpr 0x55be7e51fa48 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x55be7e51fa00 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x55be7e51f9d0 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x55be7e51fa78 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x55be7e51fa60 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x55be7e51fa28 <col:102> '_Bool' lvalue Var 0x55be7e518dd0 'z$r_buff1_thd3' '_Bool'
|   |-CallExpr 0x55be7e51fb30 <line:784:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x55be7e51fb18 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55be7e51faf8 <col:3> 'void ()' Function 0x55be7e4bef00 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x55be7e51fba8 <line:785:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x55be7e51fb90 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55be7e51fb70 <col:3> 'void ()' Function 0x55be7e4bee40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x55be7e51fc60 <line:786:3, col:41> 'int' '='
|   | |-DeclRefExpr 0x55be7e51fbc8 <col:3> 'int' lvalue Var 0x55be7e518120 '__unbuffered_cnt' 'int'
|   | `-BinaryOperator 0x55be7e51fc40 <col:22, col:41> 'int' '+'
|   |   |-ImplicitCastExpr 0x55be7e51fc28 <col:22> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x55be7e51fbe8 <col:22> 'int' lvalue Var 0x55be7e518120 '__unbuffered_cnt' 'int'
|   |   `-IntegerLiteral 0x55be7e51fc08 <col:41> 'int' 1
|   |-CallExpr 0x55be7e51fcb8 <line:787:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x55be7e51fca0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55be7e51fc80 <col:3> 'void ()' Function 0x55be7e4bef00 '__VERIFIER_atomic_end' 'void ()'
|   `-ReturnStmt 0x55be7e51fd30 <line:788:3, col:36>
|     `-CallExpr 0x55be7e51fd10 <col:10, col:36> 'void *'
|       `-ImplicitCastExpr 0x55be7e51fcf8 <col:10> 'void *(*)(void)' <FunctionToPointerDecay>
|         `-DeclRefExpr 0x55be7e51fcd8 <col:10> 'void *(void)' Function 0x55be7e4be958 '__VERIFIER_nondet_pointer' 'void *(void)'
|-FunctionDecl 0x55be7e51fe78 prev 0x55be7e517e68 <line:790:1, line:792:1> line:790:6 fence 'void ()'
| `-CompoundStmt 0x55be7e51ff18 <line:791:1, line:792:1>
|-FunctionDecl 0x55be7e51ff48 prev 0x55be7e517f28 <line:793:1, line:795:1> line:793:6 isync 'void ()'
| `-CompoundStmt 0x55be7e51ffe8 <line:794:1, line:795:1>
|-FunctionDecl 0x55be7e520018 prev 0x55be7e517fe8 <line:796:1, line:798:1> line:796:6 lwfence 'void ()'
| `-CompoundStmt 0x55be7e5200b8 <line:797:1, line:798:1>
`-FunctionDecl 0x55be7e520128 <line:799:1, line:823:1> line:799:5 main 'int ()'
  `-CompoundStmt 0x55be7e521e28 <line:800:1, line:823:1>
    |-DeclStmt 0x55be7e520240 <line:801:3, col:17>
    | `-VarDecl 0x55be7e5201d8 <col:3, col:13> col:13 used t505 'pthread_t':'unsigned long'
    |-CallExpr 0x55be7e520448 <line:802:3, col:53> 'int'
    | |-ImplicitCastExpr 0x55be7e520430 <col:3> 'int (*)(pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x55be7e520258 <col:3> 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' Function 0x55be7e4ff488 'pthread_create' 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)'
    | |-UnaryOperator 0x55be7e520298 <col:18, col:19> 'pthread_t *' prefix '&' cannot overflow
    | | `-DeclRefExpr 0x55be7e520278 <col:19> 'pthread_t':'unsigned long' lvalue Var 0x55be7e5201d8 't505' 'pthread_t':'unsigned long'
    | |-ImplicitCastExpr 0x55be7e520488 <col:25, col:35> 'const pthread_attr_t *' <NullToPointer>
    | | `-ParenExpr 0x55be7e520310 <col:25, col:35> 'void *'
    | |   `-CStyleCastExpr 0x55be7e5202e8 <col:26, col:34> 'void *' <NullToPointer>
    | |     `-IntegerLiteral 0x55be7e5202b0 <col:34> 'int' 0
    | |-ImplicitCastExpr 0x55be7e5204a0 <col:38> 'void *(*)(void *)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x55be7e520330 <col:38> 'void *(void *)' Function 0x55be7e5192c0 'P0' 'void *(void *)'
    | `-ParenExpr 0x55be7e5203b0 <col:42, col:52> 'void *'
    |   `-CStyleCastExpr 0x55be7e520388 <col:43, col:51> 'void *' <NullToPointer>
    |     `-IntegerLiteral 0x55be7e520350 <col:51> 'int' 0
    |-DeclStmt 0x55be7e520530 <line:803:3, col:17>
    | `-VarDecl 0x55be7e5204c8 <col:3, col:13> col:13 used t506 'pthread_t':'unsigned long'
    |-CallExpr 0x55be7e5206d8 <line:804:3, col:53> 'int'
    | |-ImplicitCastExpr 0x55be7e5206c0 <col:3> 'int (*)(pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x55be7e520548 <col:3> 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' Function 0x55be7e4ff488 'pthread_create' 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)'
    | |-UnaryOperator 0x55be7e520588 <col:18, col:19> 'pthread_t *' prefix '&' cannot overflow
    | | `-DeclRefExpr 0x55be7e520568 <col:19> 'pthread_t':'unsigned long' lvalue Var 0x55be7e5204c8 't506' 'pthread_t':'unsigned long'
    | |-ImplicitCastExpr 0x55be7e520718 <col:25, col:35> 'const pthread_attr_t *' <NullToPointer>
    | | `-ParenExpr 0x55be7e520600 <col:25, col:35> 'void *'
    | |   `-CStyleCastExpr 0x55be7e5205d8 <col:26, col:34> 'void *' <NullToPointer>
    | |     `-IntegerLiteral 0x55be7e5205a0 <col:34> 'int' 0
    | |-ImplicitCastExpr 0x55be7e520730 <col:38> 'void *(*)(void *)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x55be7e520620 <col:38> 'void *(void *)' Function 0x55be7e51acb0 'P1' 'void *(void *)'
    | `-ParenExpr 0x55be7e5206a0 <col:42, col:52> 'void *'
    |   `-CStyleCastExpr 0x55be7e520678 <col:43, col:51> 'void *' <NullToPointer>
    |     `-IntegerLiteral 0x55be7e520640 <col:51> 'int' 0
    |-DeclStmt 0x55be7e5207c0 <line:805:3, col:17>
    | `-VarDecl 0x55be7e520758 <col:3, col:13> col:13 used t507 'pthread_t':'unsigned long'
    |-CallExpr 0x55be7e520968 <line:806:3, col:53> 'int'
    | |-ImplicitCastExpr 0x55be7e520950 <col:3> 'int (*)(pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x55be7e5207d8 <col:3> 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' Function 0x55be7e4ff488 'pthread_create' 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)'
    | |-UnaryOperator 0x55be7e520818 <col:18, col:19> 'pthread_t *' prefix '&' cannot overflow
    | | `-DeclRefExpr 0x55be7e5207f8 <col:19> 'pthread_t':'unsigned long' lvalue Var 0x55be7e520758 't507' 'pthread_t':'unsigned long'
    | |-ImplicitCastExpr 0x55be7e5209a8 <col:25, col:35> 'const pthread_attr_t *' <NullToPointer>
    | | `-ParenExpr 0x55be7e520890 <col:25, col:35> 'void *'
    | |   `-CStyleCastExpr 0x55be7e520868 <col:26, col:34> 'void *' <NullToPointer>
    | |     `-IntegerLiteral 0x55be7e520830 <col:34> 'int' 0
    | |-ImplicitCastExpr 0x55be7e5209c0 <col:38> 'void *(*)(void *)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x55be7e5208b0 <col:38> 'void *(void *)' Function 0x55be7e51c038 'P2' 'void *(void *)'
    | `-ParenExpr 0x55be7e520930 <col:42, col:52> 'void *'
    |   `-CStyleCastExpr 0x55be7e520908 <col:43, col:51> 'void *' <NullToPointer>
    |     `-IntegerLiteral 0x55be7e5208d0 <col:51> 'int' 0
    |-CallExpr 0x55be7e520a10 <line:807:3, col:27> 'void'
    | `-ImplicitCastExpr 0x55be7e5209f8 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x55be7e5209d8 <col:3> 'void ()' Function 0x55be7e4bee40 '__VERIFIER_atomic_begin' 'void ()'
    |-BinaryOperator 0x55be7e520ae0 <line:808:3, col:41> '_Bool' '='
    | |-DeclRefExpr 0x55be7e520a30 <col:3> '_Bool' lvalue Var 0x55be7e518518 'main$tmp_guard0' '_Bool'
    | `-ImplicitCastExpr 0x55be7e520ac8 <col:21, col:41> '_Bool' <IntegralToBoolean>
    |   `-BinaryOperator 0x55be7e520aa8 <col:21, col:41> 'int' '=='
    |     |-ImplicitCastExpr 0x55be7e520a90 <col:21> 'int' <LValueToRValue>
    |     | `-DeclRefExpr 0x55be7e520a50 <col:21> 'int' lvalue Var 0x55be7e518120 '__unbuffered_cnt' 'int'
    |     `-IntegerLiteral 0x55be7e520a70 <col:41> 'int' 3
    |-CallExpr 0x55be7e520b38 <line:809:3, col:25> 'void'
    | `-ImplicitCastExpr 0x55be7e520b20 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x55be7e520b00 <col:3> 'void ()' Function 0x55be7e4bef00 '__VERIFIER_atomic_end' 'void ()'
    |-CallExpr 0x55be7e520bd8 <line:810:3, col:36> 'void'
    | |-ImplicitCastExpr 0x55be7e520bc0 <col:3> 'void (*)(int)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x55be7e520b80 <col:3> 'void (int)' Function 0x55be7e4be790 '__VERIFIER_assume' 'void (int)'
    | `-ImplicitCastExpr 0x55be7e520c18 <col:21> 'int' <IntegralCast>
    |   `-ImplicitCastExpr 0x55be7e520c00 <col:21> '_Bool' <LValueToRValue>
    |     `-DeclRefExpr 0x55be7e520ba0 <col:21> '_Bool' lvalue Var 0x55be7e518518 'main$tmp_guard0' '_Bool'
    |-CallExpr 0x55be7e520c68 <line:811:3, col:27> 'void'
    | `-ImplicitCastExpr 0x55be7e520c50 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x55be7e520c30 <col:3> 'void ()' Function 0x55be7e4bee40 '__VERIFIER_atomic_begin' 'void ()'
    |-BinaryOperator 0x55be7e520f50 <line:812:3, col:103> 'int' '='
    | |-DeclRefExpr 0x55be7e520c88 <col:3> 'int' lvalue Var 0x55be7e5188d0 'z' 'int'
    | `-ConditionalOperator 0x55be7e520f20 <col:7, col:103> 'int'
    |   |-BinaryOperator 0x55be7e520d48 <col:7, col:25> 'int' '&&'
    |   | |-ImplicitCastExpr 0x55be7e520d00 <col:7> 'int' <IntegralCast>
    |   | | `-ImplicitCastExpr 0x55be7e520ce8 <col:7> '_Bool' <LValueToRValue>
    |   | |   `-DeclRefExpr 0x55be7e520ca8 <col:7> '_Bool' lvalue Var 0x55be7e518fc0 'z$w_buff0_used' '_Bool'
    |   | `-ImplicitCastExpr 0x55be7e520d30 <col:25> 'int' <IntegralCast>
    |   |   `-ImplicitCastExpr 0x55be7e520d18 <col:25> '_Bool' <LValueToRValue>
    |   |     `-DeclRefExpr 0x55be7e520cc8 <col:25> '_Bool' lvalue Var 0x55be7e518a60 'z$r_buff0_thd0' '_Bool'
    |   |-ImplicitCastExpr 0x55be7e520f08 <col:42> 'int' <LValueToRValue>
    |   | `-DeclRefExpr 0x55be7e520d68 <col:42> 'int' lvalue Var 0x55be7e518f48 'z$w_buff0' 'int'
    |   `-ParenExpr 0x55be7e520ee8 <col:54, col:103> 'int'
    |     `-ConditionalOperator 0x55be7e520eb8 <col:55, col:102> 'int'
    |       |-BinaryOperator 0x55be7e520e28 <col:55, col:73> 'int' '&&'
    |       | |-ImplicitCastExpr 0x55be7e520de0 <col:55> 'int' <IntegralCast>
    |       | | `-ImplicitCastExpr 0x55be7e520dc8 <col:55> '_Bool' <LValueToRValue>
    |       | |   `-DeclRefExpr 0x55be7e520d88 <col:55> '_Bool' lvalue Var 0x55be7e5190b8 'z$w_buff1_used' '_Bool'
    |       | `-ImplicitCastExpr 0x55be7e520e10 <col:73> 'int' <IntegralCast>
    |       |   `-ImplicitCastExpr 0x55be7e520df8 <col:73> '_Bool' <LValueToRValue>
    |       |     `-DeclRefExpr 0x55be7e520da8 <col:73> '_Bool' lvalue Var 0x55be7e518c68 'z$r_buff1_thd0' '_Bool'
    |       |-ImplicitCastExpr 0x55be7e520e88 <col:90> 'int' <LValueToRValue>
    |       | `-DeclRefExpr 0x55be7e520e48 <col:90> 'int' lvalue Var 0x55be7e519040 'z$w_buff1' 'int'
    |       `-ImplicitCastExpr 0x55be7e520ea0 <col:102> 'int' <LValueToRValue>
    |         `-DeclRefExpr 0x55be7e520e68 <col:102> 'int' lvalue Var 0x55be7e5188d0 'z' 'int'
    |-BinaryOperator 0x55be7e521158 <line:813:3, col:66> '_Bool' '='
    | |-DeclRefExpr 0x55be7e520f70 <col:3> '_Bool' lvalue Var 0x55be7e518fc0 'z$w_buff0_used' '_Bool'
    | `-ImplicitCastExpr 0x55be7e521140 <col:20, col:66> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x55be7e521110 <col:20, col:66> 'int'
    |     |-BinaryOperator 0x55be7e521030 <col:20, col:38> 'int' '&&'
    |     | |-ImplicitCastExpr 0x55be7e520fe8 <col:20> 'int' <IntegralCast>
    |     | | `-ImplicitCastExpr 0x55be7e520fd0 <col:20> '_Bool' <LValueToRValue>
    |     | |   `-DeclRefExpr 0x55be7e520f90 <col:20> '_Bool' lvalue Var 0x55be7e518fc0 'z$w_buff0_used' '_Bool'
    |     | `-ImplicitCastExpr 0x55be7e521018 <col:38> 'int' <IntegralCast>
    |     |   `-ImplicitCastExpr 0x55be7e521000 <col:38> '_Bool' <LValueToRValue>
    |     |     `-DeclRefExpr 0x55be7e520fb0 <col:38> '_Bool' lvalue Var 0x55be7e518a60 'z$r_buff0_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x55be7e5210c8 <col:55, col:62> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x55be7e521080 <col:55, col:62> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x55be7e521050 <col:62> 'int' 0
    |     `-ImplicitCastExpr 0x55be7e5210f8 <col:66> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x55be7e5210e0 <col:66> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x55be7e5210a8 <col:66> '_Bool' lvalue Var 0x55be7e518fc0 'z$w_buff0_used' '_Bool'
    |-BinaryOperator 0x55be7e521440 <line:814:3, col:102> '_Bool' '='
    | |-DeclRefExpr 0x55be7e521178 <col:3> '_Bool' lvalue Var 0x55be7e5190b8 'z$w_buff1_used' '_Bool'
    | `-ImplicitCastExpr 0x55be7e521428 <col:20, col:102> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x55be7e5213f8 <col:20, col:102> 'int'
    |     |-BinaryOperator 0x55be7e521318 <col:20, col:74> 'int' '||'
    |     | |-BinaryOperator 0x55be7e521238 <col:20, col:38> 'int' '&&'
    |     | | |-ImplicitCastExpr 0x55be7e5211f0 <col:20> 'int' <IntegralCast>
    |     | | | `-ImplicitCastExpr 0x55be7e5211d8 <col:20> '_Bool' <LValueToRValue>
    |     | | |   `-DeclRefExpr 0x55be7e521198 <col:20> '_Bool' lvalue Var 0x55be7e518fc0 'z$w_buff0_used' '_Bool'
    |     | | `-ImplicitCastExpr 0x55be7e521220 <col:38> 'int' <IntegralCast>
    |     | |   `-ImplicitCastExpr 0x55be7e521208 <col:38> '_Bool' <LValueToRValue>
    |     | |     `-DeclRefExpr 0x55be7e5211b8 <col:38> '_Bool' lvalue Var 0x55be7e518a60 'z$r_buff0_thd0' '_Bool'
    |     | `-BinaryOperator 0x55be7e5212f8 <col:56, col:74> 'int' '&&'
    |     |   |-ImplicitCastExpr 0x55be7e5212b0 <col:56> 'int' <IntegralCast>
    |     |   | `-ImplicitCastExpr 0x55be7e521298 <col:56> '_Bool' <LValueToRValue>
    |     |   |   `-DeclRefExpr 0x55be7e521258 <col:56> '_Bool' lvalue Var 0x55be7e5190b8 'z$w_buff1_used' '_Bool'
    |     |   `-ImplicitCastExpr 0x55be7e5212e0 <col:74> 'int' <IntegralCast>
    |     |     `-ImplicitCastExpr 0x55be7e5212c8 <col:74> '_Bool' <LValueToRValue>
    |     |       `-DeclRefExpr 0x55be7e521278 <col:74> '_Bool' lvalue Var 0x55be7e518c68 'z$r_buff1_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x55be7e5213b0 <col:91, col:98> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x55be7e521368 <col:91, col:98> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x55be7e521338 <col:98> 'int' 0
    |     `-ImplicitCastExpr 0x55be7e5213e0 <col:102> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x55be7e5213c8 <col:102> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x55be7e521390 <col:102> '_Bool' lvalue Var 0x55be7e5190b8 'z$w_buff1_used' '_Bool'
    |-BinaryOperator 0x55be7e521648 <line:815:3, col:66> '_Bool' '='
    | |-DeclRefExpr 0x55be7e521460 <col:3> '_Bool' lvalue Var 0x55be7e518a60 'z$r_buff0_thd0' '_Bool'
    | `-ImplicitCastExpr 0x55be7e521630 <col:20, col:66> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x55be7e521600 <col:20, col:66> 'int'
    |     |-BinaryOperator 0x55be7e521520 <col:20, col:38> 'int' '&&'
    |     | |-ImplicitCastExpr 0x55be7e5214d8 <col:20> 'int' <IntegralCast>
    |     | | `-ImplicitCastExpr 0x55be7e5214c0 <col:20> '_Bool' <LValueToRValue>
    |     | |   `-DeclRefExpr 0x55be7e521480 <col:20> '_Bool' lvalue Var 0x55be7e518fc0 'z$w_buff0_used' '_Bool'
    |     | `-ImplicitCastExpr 0x55be7e521508 <col:38> 'int' <IntegralCast>
    |     |   `-ImplicitCastExpr 0x55be7e5214f0 <col:38> '_Bool' <LValueToRValue>
    |     |     `-DeclRefExpr 0x55be7e5214a0 <col:38> '_Bool' lvalue Var 0x55be7e518a60 'z$r_buff0_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x55be7e5215b8 <col:55, col:62> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x55be7e521570 <col:55, col:62> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x55be7e521540 <col:62> 'int' 0
    |     `-ImplicitCastExpr 0x55be7e5215e8 <col:66> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x55be7e5215d0 <col:66> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x55be7e521598 <col:66> '_Bool' lvalue Var 0x55be7e518a60 'z$r_buff0_thd0' '_Bool'
    |-BinaryOperator 0x55be7e521930 <line:816:3, col:102> '_Bool' '='
    | |-DeclRefExpr 0x55be7e521668 <col:3> '_Bool' lvalue Var 0x55be7e518c68 'z$r_buff1_thd0' '_Bool'
    | `-ImplicitCastExpr 0x55be7e521918 <col:20, col:102> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x55be7e5218e8 <col:20, col:102> 'int'
    |     |-BinaryOperator 0x55be7e521808 <col:20, col:74> 'int' '||'
    |     | |-BinaryOperator 0x55be7e521728 <col:20, col:38> 'int' '&&'
    |     | | |-ImplicitCastExpr 0x55be7e5216e0 <col:20> 'int' <IntegralCast>
    |     | | | `-ImplicitCastExpr 0x55be7e5216c8 <col:20> '_Bool' <LValueToRValue>
    |     | | |   `-DeclRefExpr 0x55be7e521688 <col:20> '_Bool' lvalue Var 0x55be7e518fc0 'z$w_buff0_used' '_Bool'
    |     | | `-ImplicitCastExpr 0x55be7e521710 <col:38> 'int' <IntegralCast>
    |     | |   `-ImplicitCastExpr 0x55be7e5216f8 <col:38> '_Bool' <LValueToRValue>
    |     | |     `-DeclRefExpr 0x55be7e5216a8 <col:38> '_Bool' lvalue Var 0x55be7e518a60 'z$r_buff0_thd0' '_Bool'
    |     | `-BinaryOperator 0x55be7e5217e8 <col:56, col:74> 'int' '&&'
    |     |   |-ImplicitCastExpr 0x55be7e5217a0 <col:56> 'int' <IntegralCast>
    |     |   | `-ImplicitCastExpr 0x55be7e521788 <col:56> '_Bool' <LValueToRValue>
    |     |   |   `-DeclRefExpr 0x55be7e521748 <col:56> '_Bool' lvalue Var 0x55be7e5190b8 'z$w_buff1_used' '_Bool'
    |     |   `-ImplicitCastExpr 0x55be7e5217d0 <col:74> 'int' <IntegralCast>
    |     |     `-ImplicitCastExpr 0x55be7e5217b8 <col:74> '_Bool' <LValueToRValue>
    |     |       `-DeclRefExpr 0x55be7e521768 <col:74> '_Bool' lvalue Var 0x55be7e518c68 'z$r_buff1_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x55be7e5218a0 <col:91, col:98> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x55be7e521858 <col:91, col:98> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x55be7e521828 <col:98> 'int' 0
    |     `-ImplicitCastExpr 0x55be7e5218d0 <col:102> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x55be7e5218b8 <col:102> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x55be7e521880 <col:102> '_Bool' lvalue Var 0x55be7e518c68 'z$r_buff1_thd0' '_Bool'
    |-CallExpr 0x55be7e521988 <line:817:3, col:25> 'void'
    | `-ImplicitCastExpr 0x55be7e521970 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x55be7e521950 <col:3> 'void ()' Function 0x55be7e4bef00 '__VERIFIER_atomic_end' 'void ()'
    |-CallExpr 0x55be7e5219e0 <line:818:3, col:27> 'void'
    | `-ImplicitCastExpr 0x55be7e5219c8 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x55be7e5219a8 <col:3> 'void ()' Function 0x55be7e4bee40 '__VERIFIER_atomic_begin' 'void ()'
    |-BinaryOperator 0x55be7e521cd0 <line:819:3, col:113> '_Bool' '='
    | |-DeclRefExpr 0x55be7e521a00 <col:3> '_Bool' lvalue Var 0x55be7e518590 'main$tmp_guard1' '_Bool'
    | `-ImplicitCastExpr 0x55be7e521cb8 <col:21, col:113> '_Bool' <IntegralToBoolean>
    |   `-UnaryOperator 0x55be7e521ca0 <col:21, col:113> 'int' prefix '!' cannot overflow
    |     `-ParenExpr 0x55be7e521c80 <col:22, col:113> 'int'
    |       `-BinaryOperator 0x55be7e521c60 <col:23, col:112> 'int' '&&'
    |         |-BinaryOperator 0x55be7e521bc8 <col:23, col:84> 'int' '&&'
    |         | |-BinaryOperator 0x55be7e521b10 <col:23, col:56> 'int' '&&'
    |         | | |-BinaryOperator 0x55be7e521a78 <col:23, col:28> 'int' '=='
    |         | | | |-ImplicitCastExpr 0x55be7e521a60 <col:23> 'int' <LValueToRValue>
    |         | | | | `-DeclRefExpr 0x55be7e521a20 <col:23> 'int' lvalue Var 0x55be7e518690 'x' 'int'
    |         | | | `-IntegerLiteral 0x55be7e521a40 <col:28> 'int' 2
    |         | | `-BinaryOperator 0x55be7e521af0 <col:33, col:56> 'int' '=='
    |         | |   |-ImplicitCastExpr 0x55be7e521ad8 <col:33> 'int' <LValueToRValue>
    |         | |   | `-DeclRefExpr 0x55be7e521a98 <col:33> 'int' lvalue Var 0x55be7e518240 '__unbuffered_p1_EAX' 'int'
    |         | |   `-IntegerLiteral 0x55be7e521ab8 <col:56> 'int' 0
    |         | `-BinaryOperator 0x55be7e521ba8 <col:61, col:84> 'int' '=='
    |         |   |-ImplicitCastExpr 0x55be7e521b90 <col:61> 'int' <LValueToRValue>
    |         |   | `-DeclRefExpr 0x55be7e521b30 <col:61> 'int' lvalue Var 0x55be7e518360 '__unbuffered_p2_EAX' 'int'
    |         |   `-IntegerLiteral 0x55be7e521b50 <col:84> 'int' 1
    |         `-BinaryOperator 0x55be7e521c40 <col:89, col:112> 'int' '=='
    |           |-ImplicitCastExpr 0x55be7e521c28 <col:89> 'int' <LValueToRValue>
    |           | `-DeclRefExpr 0x55be7e521be8 <col:89> 'int' lvalue Var 0x55be7e518480 '__unbuffered_p2_EBX' 'int'
    |           `-IntegerLiteral 0x55be7e521c08 <col:112> 'int' 0
    |-CallExpr 0x55be7e521d28 <line:820:3, col:25> 'void'
    | `-ImplicitCastExpr 0x55be7e521d10 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x55be7e521cf0 <col:3> 'void ()' Function 0x55be7e4bef00 '__VERIFIER_atomic_end' 'void ()'
    |-CallExpr 0x55be7e521da0 <line:821:3, col:36> 'void'
    | |-ImplicitCastExpr 0x55be7e521d88 <col:3> 'void (*)(int)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x55be7e521d48 <col:3> 'void (int)' Function 0x55be7e4bebc8 '__VERIFIER_assert' 'void (int)'
    | `-ImplicitCastExpr 0x55be7e521de0 <col:21> 'int' <IntegralCast>
    |   `-ImplicitCastExpr 0x55be7e521dc8 <col:21> '_Bool' <LValueToRValue>
    |     `-DeclRefExpr 0x55be7e521d68 <col:21> '_Bool' lvalue Var 0x55be7e518590 'main$tmp_guard1' '_Bool'
    `-ReturnStmt 0x55be7e521e18 <line:822:3, col:10>
      `-IntegerLiteral 0x55be7e521df8 <col:10> 'int' 0
