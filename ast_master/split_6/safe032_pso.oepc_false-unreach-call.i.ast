TranslationUnitDecl 0x55cb87a5fe18 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x55cb87a606d8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x55cb87a603b0 '__int128'
|-TypedefDecl 0x55cb87a60748 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x55cb87a603d0 'unsigned __int128'
|-TypedefDecl 0x55cb87a60a50 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x55cb87a60820 'struct __NSConstantString_tag'
|   `-Record 0x55cb87a607a0 '__NSConstantString_tag'
|-TypedefDecl 0x55cb87a60af8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x55cb87a60ab0 'char *'
|   `-BuiltinType 0x55cb87a5feb0 'char'
|-TypedefDecl 0x55cb87a9f650 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'struct __va_list_tag [1]'
| `-ConstantArrayType 0x55cb87a60d90 'struct __va_list_tag [1]' 1 
|   `-RecordType 0x55cb87a60bd0 'struct __va_list_tag'
|     `-Record 0x55cb87a60b50 '__va_list_tag'
|-FunctionDecl 0x55cb87a9f770 <./split_6/safe032_pso.oepc_false-unreach-call.i:1:1, col:41> col:14 used __VERIFIER_nondet_bool '_Bool (void)' extern
|-FunctionDecl 0x55cb87a9f940 <line:2:1, col:34> col:13 used __VERIFIER_assume 'void (int)' extern
| `-ParmVarDecl 0x55cb87a9f870 <col:31> col:34 'int'
|-FunctionDecl 0x55cb87a9fab8 <line:3:1, col:45> col:15 used __VERIFIER_nondet_pointer 'void *(void)' extern
|-FunctionDecl 0x55cb87a9fbe0 <line:4:1, col:61> col:13 used __VERIFIER_error 'void () __attribute__((noreturn))' extern
|-FunctionDecl 0x55cb87a9fd28 <line:5:1, col:99> col:6 used __VERIFIER_assert 'void (int)'
| |-ParmVarDecl 0x55cb87a9fc98 <col:24, col:28> col:28 used expression 'int'
| `-CompoundStmt 0x55cb87a9ff58 <col:40, col:99>
|   |-IfStmt 0x55cb87a9ff28 <col:42, col:88>
|   | |-UnaryOperator 0x55cb87a9fe08 <col:46, col:47> 'int' prefix '!' cannot overflow
|   | | `-ImplicitCastExpr 0x55cb87a9fdf0 <col:47> 'int' <LValueToRValue>
|   | |   `-DeclRefExpr 0x55cb87a9fdd0 <col:47> 'int' lvalue ParmVar 0x55cb87a9fc98 'expression' 'int'
|   | `-CompoundStmt 0x55cb87a9ff10 <col:59, col:88>
|   |   `-LabelStmt 0x55cb87a9fef8 <col:61, col:85> 'ERROR'
|   |     `-CallExpr 0x55cb87a9fe88 <col:68, col:85> 'void'
|   |       `-ImplicitCastExpr 0x55cb87a9fe70 <col:68> 'void (*)() __attribute__((noreturn))' <FunctionToPointerDecay>
|   |         `-DeclRefExpr 0x55cb87a9fe20 <col:68> 'void () __attribute__((noreturn))' Function 0x55cb87a9fbe0 '__VERIFIER_error' 'void () __attribute__((noreturn))'
|   |-NullStmt 0x55cb87a9ff40 <col:89>
|   `-ReturnStmt 0x55cb87a9ff48 <col:91>
|-FunctionDecl 0x55cb87a9ffa0 <line:6:1, col:37> col:13 used __VERIFIER_atomic_begin 'void ()' extern
|-FunctionDecl 0x55cb87aa0060 <line:7:1, col:35> col:13 used __VERIFIER_atomic_end 'void ()' extern
|-FunctionDecl 0x55cb87aa03e0 <line:9:1, line:11:76> line:9:13 __assert_fail 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x55cb87aa0118 <col:28, col:40> col:40 __assertion 'const char *'
| |-ParmVarDecl 0x55cb87aa0198 <col:53, col:65> col:65 __file 'const char *'
| |-ParmVarDecl 0x55cb87aa0218 <line:10:7, col:20> col:20 __line 'unsigned int'
| |-ParmVarDecl 0x55cb87aa0298 <col:28, col:40> col:40 __function 'const char *'
| `-NoThrowAttr 0x55cb87aa04a0 <line:11:22>
|-FunctionDecl 0x55cb87ac6520 <line:12:1, line:14:76> line:12:13 __assert_perror_fail 'void (int, const char *, unsigned int, const char *) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x55cb87aa0510 <col:35, col:39> col:39 __errnum 'int'
| |-ParmVarDecl 0x55cb87aa0590 <col:49, col:61> col:61 __file 'const char *'
| |-ParmVarDecl 0x55cb87ac6350 <line:13:7, col:20> col:20 __line 'unsigned int'
| |-ParmVarDecl 0x55cb87ac63d0 <col:28, col:40> col:40 __function 'const char *'
| `-NoThrowAttr 0x55cb87ac65e0 <line:14:22>
|-FunctionDecl 0x55cb87ac6890 <line:15:1, line:16:76> line:15:13 __assert 'void (const char *, const char *, int) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x55cb87ac6650 <col:23, col:35> col:35 __assertion 'const char *'
| |-ParmVarDecl 0x55cb87ac66d0 <col:48, col:60> col:60 __file 'const char *'
| |-ParmVarDecl 0x55cb87ac6750 <col:68, col:72> col:72 __line 'int'
| `-NoThrowAttr 0x55cb87ac6948 <line:16:22>
|-TypedefDecl 0x55cb87ac69b8 <line:18:1, col:23> col:23 __u_char 'unsigned char'
| `-BuiltinType 0x55cb87a5ff70 'unsigned char'
|-TypedefDecl 0x55cb87ac6a28 <line:19:1, col:28> col:28 __u_short 'unsigned short'
| `-BuiltinType 0x55cb87a5ff90 'unsigned short'
|-TypedefDecl 0x55cb87ac6a98 <line:20:1, col:22> col:22 __u_int 'unsigned int'
| `-BuiltinType 0x55cb87a5ffb0 'unsigned int'
|-TypedefDecl 0x55cb87ac6b08 <line:21:1, col:27> col:27 __u_long 'unsigned long'
| `-BuiltinType 0x55cb87a5ffd0 'unsigned long'
|-TypedefDecl 0x55cb87ac6b78 <line:22:1, col:21> col:21 __int8_t 'signed char'
| `-BuiltinType 0x55cb87a5fed0 'signed char'
|-TypedefDecl 0x55cb87ac6be8 <line:23:1, col:23> col:23 __uint8_t 'unsigned char'
| `-BuiltinType 0x55cb87a5ff70 'unsigned char'
|-TypedefDecl 0x55cb87ac6c58 <line:24:1, col:26> col:26 __int16_t 'short'
| `-BuiltinType 0x55cb87a5fef0 'short'
|-TypedefDecl 0x55cb87ac6cc8 <line:25:1, col:28> col:28 __uint16_t 'unsigned short'
| `-BuiltinType 0x55cb87a5ff90 'unsigned short'
|-TypedefDecl 0x55cb87ac6d38 <line:26:1, col:20> col:20 __int32_t 'int'
| `-BuiltinType 0x55cb87a5ff10 'int'
|-TypedefDecl 0x55cb87ac6da8 <line:27:1, col:22> col:22 __uint32_t 'unsigned int'
| `-BuiltinType 0x55cb87a5ffb0 'unsigned int'
|-TypedefDecl 0x55cb87ac6e18 <line:28:1, col:25> col:25 __int64_t 'long'
| `-BuiltinType 0x55cb87a5ff30 'long'
|-TypedefDecl 0x55cb87ac6e88 <line:29:1, col:27> col:27 referenced __uint64_t 'unsigned long'
| `-BuiltinType 0x55cb87a5ffd0 'unsigned long'
|-TypedefDecl 0x55cb87ac6ef8 <line:30:1, col:18> col:18 referenced __quad_t 'long'
| `-BuiltinType 0x55cb87a5ff30 'long'
|-TypedefDecl 0x55cb87ac6f68 <line:31:1, col:27> col:27 __u_quad_t 'unsigned long'
| `-BuiltinType 0x55cb87a5ffd0 'unsigned long'
|-TypedefDecl 0x55cb87ac6fd8 <line:32:1, col:27> col:27 __dev_t 'unsigned long'
| `-BuiltinType 0x55cb87a5ffd0 'unsigned long'
|-TypedefDecl 0x55cb87ac7048 <line:33:1, col:22> col:22 __uid_t 'unsigned int'
| `-BuiltinType 0x55cb87a5ffb0 'unsigned int'
|-TypedefDecl 0x55cb87ac70b8 <line:34:1, col:22> col:22 __gid_t 'unsigned int'
| `-BuiltinType 0x55cb87a5ffb0 'unsigned int'
|-TypedefDecl 0x55cb87ac7128 <line:35:1, col:27> col:27 __ino_t 'unsigned long'
| `-BuiltinType 0x55cb87a5ffd0 'unsigned long'
|-TypedefDecl 0x55cb87ac7198 <line:36:1, col:27> col:27 __ino64_t 'unsigned long'
| `-BuiltinType 0x55cb87a5ffd0 'unsigned long'
|-TypedefDecl 0x55cb87ac7208 <line:37:1, col:22> col:22 __mode_t 'unsigned int'
| `-BuiltinType 0x55cb87a5ffb0 'unsigned int'
|-TypedefDecl 0x55cb87ac7278 <line:38:1, col:27> col:27 __nlink_t 'unsigned long'
| `-BuiltinType 0x55cb87a5ffd0 'unsigned long'
|-TypedefDecl 0x55cb87ac72e8 <line:39:1, col:18> col:18 __off_t 'long'
| `-BuiltinType 0x55cb87a5ff30 'long'
|-TypedefDecl 0x55cb87ac7378 <line:40:1, col:18> col:18 referenced __off64_t 'long'
| `-BuiltinType 0x55cb87a5ff30 'long'
|-TypedefDecl 0x55cb87ac73e8 <line:41:1, col:13> col:13 referenced __pid_t 'int'
| `-BuiltinType 0x55cb87a5ff10 'int'
|-RecordDecl 0x55cb87ac7440 <line:42:9, col:32> col:9 struct definition
| `-FieldDecl 0x55cb87ac7588 <col:18, col:29> col:22 __val 'int [2]'
|-TypedefDecl 0x55cb87ac7640 <col:1, col:34> col:34 __fsid_t 'struct __fsid_t':'__fsid_t'
| `-ElaboratedType 0x55cb87ac75e0 'struct __fsid_t' sugar
|   `-RecordType 0x55cb87ac74c0 '__fsid_t'
|     `-Record 0x55cb87ac7440 ''
|-TypedefDecl 0x55cb87ac76c8 <line:43:1, col:18> col:18 referenced __clock_t 'long'
| `-BuiltinType 0x55cb87a5ff30 'long'
|-TypedefDecl 0x55cb87ac7738 <line:44:1, col:27> col:27 __rlim_t 'unsigned long'
| `-BuiltinType 0x55cb87a5ffd0 'unsigned long'
|-TypedefDecl 0x55cb87ac77a8 <line:45:1, col:27> col:27 __rlim64_t 'unsigned long'
| `-BuiltinType 0x55cb87a5ffd0 'unsigned long'
|-TypedefDecl 0x55cb87ac7818 <line:46:1, col:22> col:22 __id_t 'unsigned int'
| `-BuiltinType 0x55cb87a5ffb0 'unsigned int'
|-TypedefDecl 0x55cb87ac7888 <line:47:1, col:18> col:18 referenced __time_t 'long'
| `-BuiltinType 0x55cb87a5ff30 'long'
|-TypedefDecl 0x55cb87ac78f8 <line:48:1, col:22> col:22 __useconds_t 'unsigned int'
| `-BuiltinType 0x55cb87a5ffb0 'unsigned int'
|-TypedefDecl 0x55cb87ac7968 <line:49:1, col:18> col:18 __suseconds_t 'long'
| `-BuiltinType 0x55cb87a5ff30 'long'
|-TypedefDecl 0x55cb87ac79d8 <line:50:1, col:13> col:13 __daddr_t 'int'
| `-BuiltinType 0x55cb87a5ff10 'int'
|-TypedefDecl 0x55cb87ac7a48 <line:51:1, col:13> col:13 __key_t 'int'
| `-BuiltinType 0x55cb87a5ff10 'int'
|-TypedefDecl 0x55cb87ac7ab8 <line:52:1, col:13> col:13 referenced __clockid_t 'int'
| `-BuiltinType 0x55cb87a5ff10 'int'
|-TypedefDecl 0x55cb87ac7b28 <line:53:1, col:16> col:16 referenced __timer_t 'void *'
| `-PointerType 0x55cb87a60630 'void *'
|   `-BuiltinType 0x55cb87a5fe70 'void'
|-TypedefDecl 0x55cb87ac7b98 <line:54:1, col:18> col:18 __blksize_t 'long'
| `-BuiltinType 0x55cb87a5ff30 'long'
|-TypedefDecl 0x55cb87ac7c08 <line:55:1, col:18> col:18 __blkcnt_t 'long'
| `-BuiltinType 0x55cb87a5ff30 'long'
|-TypedefDecl 0x55cb87ac7c78 <line:56:1, col:18> col:18 __blkcnt64_t 'long'
| `-BuiltinType 0x55cb87a5ff30 'long'
|-TypedefDecl 0x55cb87ac7ce8 <line:57:1, col:27> col:27 __fsblkcnt_t 'unsigned long'
| `-BuiltinType 0x55cb87a5ffd0 'unsigned long'
|-TypedefDecl 0x55cb87ac7d58 <line:58:1, col:27> col:27 __fsblkcnt64_t 'unsigned long'
| `-BuiltinType 0x55cb87a5ffd0 'unsigned long'
|-TypedefDecl 0x55cb87ac7dc8 <line:59:1, col:27> col:27 __fsfilcnt_t 'unsigned long'
| `-BuiltinType 0x55cb87a5ffd0 'unsigned long'
|-TypedefDecl 0x55cb87ac7e38 <line:60:1, col:27> col:27 __fsfilcnt64_t 'unsigned long'
| `-BuiltinType 0x55cb87a5ffd0 'unsigned long'
|-TypedefDecl 0x55cb87ac7ea8 <line:61:1, col:18> col:18 __fsword_t 'long'
| `-BuiltinType 0x55cb87a5ff30 'long'
|-TypedefDecl 0x55cb87ac7f18 <line:62:1, col:18> col:18 __ssize_t 'long'
| `-BuiltinType 0x55cb87a5ff30 'long'
|-TypedefDecl 0x55cb87ac7f88 <line:63:1, col:18> col:18 referenced __syscall_slong_t 'long'
| `-BuiltinType 0x55cb87a5ff30 'long'
|-TypedefDecl 0x55cb87ac7ff8 <line:64:1, col:27> col:27 __syscall_ulong_t 'unsigned long'
| `-BuiltinType 0x55cb87a5ffd0 'unsigned long'
|-TypedefDecl 0x55cb87ac8088 <line:65:1, col:19> col:19 __loff_t '__off64_t':'long'
| `-TypedefType 0x55cb87ac8050 '__off64_t' sugar
|   |-Typedef 0x55cb87ac7378 '__off64_t'
|   `-BuiltinType 0x55cb87a5ff30 'long'
|-TypedefDecl 0x55cb87ac8180 <line:66:1, col:19> col:19 __qaddr_t '__quad_t *'
| `-PointerType 0x55cb87ac8140 '__quad_t *'
|   `-TypedefType 0x55cb87ac80e0 '__quad_t' sugar
|     |-Typedef 0x55cb87ac6ef8 '__quad_t'
|     `-BuiltinType 0x55cb87a5ff30 'long'
|-TypedefDecl 0x55cb87ac81f0 <line:67:1, col:15> col:15 __caddr_t 'char *'
| `-PointerType 0x55cb87a60ab0 'char *'
|   `-BuiltinType 0x55cb87a5feb0 'char'
|-TypedefDecl 0x55cb87ac8260 <line:68:1, col:18> col:18 __intptr_t 'long'
| `-BuiltinType 0x55cb87a5ff30 'long'
|-TypedefDecl 0x55cb87ac82d0 <line:69:1, col:22> col:22 __socklen_t 'unsigned int'
| `-BuiltinType 0x55cb87a5ffb0 'unsigned int'
|-FunctionDecl 0x55cb87ac9458 <line:70:1, line:74:1> line:71:1 __bswap_32 'unsigned int (unsigned int)' static inline
| |-ParmVarDecl 0x55cb87ac9380 <col:13, col:26> col:26 used __bsx 'unsigned int'
| `-CompoundStmt 0x55cb87ac9768 <line:72:1, line:74:1>
|   `-ReturnStmt 0x55cb87ac9758 <line:73:3, col:34>
|     `-CallExpr 0x55cb87ac9718 <col:10, col:34> 'unsigned int'
|       |-ImplicitCastExpr 0x55cb87ac9700 <col:10> 'unsigned int (*)(unsigned int)' <BuiltinFnToFnPtr>
|       | `-DeclRefExpr 0x55cb87ac9690 <col:10> '<builtin fn type>' Function 0x55cb87ac9500 '__builtin_bswap32' 'unsigned int (unsigned int)'
|       `-ImplicitCastExpr 0x55cb87ac9740 <col:29> 'unsigned int' <LValueToRValue>
|         `-DeclRefExpr 0x55cb87ac96b0 <col:29> 'unsigned int' lvalue ParmVar 0x55cb87ac9380 '__bsx' 'unsigned int'
|-FunctionDecl 0x55cb87ac9500 <col:10> col:10 implicit used __builtin_bswap32 'unsigned int (unsigned int)' extern
| |-ParmVarDecl 0x55cb87ac95a0 <<invalid sloc>> <invalid sloc> 'unsigned int'
| |-NoThrowAttr 0x55cb87ac9610 <col:10> Implicit
| `-ConstAttr 0x55cb87ac9668 <col:10> Implicit
|-FunctionDecl 0x55cb87ac98c0 <line:75:1, line:79:1> line:76:1 __bswap_64 '__uint64_t (__uint64_t)' static inline
| |-ParmVarDecl 0x55cb87ac97b8 <col:13, col:24> col:24 used __bsx '__uint64_t':'unsigned long'
| `-CompoundStmt 0x55cb87ac9bd8 <line:77:1, line:79:1>
|   `-ReturnStmt 0x55cb87ac9bc8 <line:78:3, col:34>
|     `-CallExpr 0x55cb87ac9b88 <col:10, col:34> 'unsigned long'
|       |-ImplicitCastExpr 0x55cb87ac9b70 <col:10> 'unsigned long (*)(unsigned long)' <BuiltinFnToFnPtr>
|       | `-DeclRefExpr 0x55cb87ac9af8 <col:10> '<builtin fn type>' Function 0x55cb87ac9968 '__builtin_bswap64' 'unsigned long (unsigned long)'
|       `-ImplicitCastExpr 0x55cb87ac9bb0 <col:29> '__uint64_t':'unsigned long' <LValueToRValue>
|         `-DeclRefExpr 0x55cb87ac9b18 <col:29> '__uint64_t':'unsigned long' lvalue ParmVar 0x55cb87ac97b8 '__bsx' '__uint64_t':'unsigned long'
|-FunctionDecl 0x55cb87ac9968 <col:10> col:10 implicit used __builtin_bswap64 'unsigned long (unsigned long)' extern
| |-ParmVarDecl 0x55cb87ac9a08 <<invalid sloc>> <invalid sloc> 'unsigned long'
| |-NoThrowAttr 0x55cb87ac9a78 <col:10> Implicit
| `-ConstAttr 0x55cb87ac9ad0 <col:10> Implicit
|-TypedefDecl 0x55cb87ac9c08 <line:80:1, col:27> col:27 referenced size_t 'unsigned long'
| `-BuiltinType 0x55cb87a5ffd0 'unsigned long'
|-TypedefDecl 0x55cb87ac9c98 <line:82:1, col:18> col:18 referenced time_t '__time_t':'long'
| `-TypedefType 0x55cb87ac9c60 '__time_t' sugar
|   |-Typedef 0x55cb87ac7888 '__time_t'
|   `-BuiltinType 0x55cb87a5ff30 'long'
|-RecordDecl 0x55cb87ac9cf0 <line:85:1, line:89:3> line:85:8 struct timespec definition
| |-FieldDecl 0x55cb87ac9da8 <line:87:5, col:14> col:14 tv_sec '__time_t':'long'
| `-FieldDecl 0x55cb87ac9e38 <line:88:5, col:23> col:23 tv_nsec '__syscall_slong_t':'long'
|-TypedefDecl 0x55cb87ac9ec8 <line:90:1, col:17> col:17 referenced pid_t '__pid_t':'int'
| `-TypedefType 0x55cb87ac9e90 '__pid_t' sugar
|   |-Typedef 0x55cb87ac73e8 '__pid_t'
|   `-BuiltinType 0x55cb87a5ff10 'int'
|-RecordDecl 0x55cb87ac9f20 <line:91:1, line:94:3> line:91:8 struct sched_param definition
| `-FieldDecl 0x55cb87ac9fe0 <line:93:5, col:9> col:9 __sched_priority 'int'
|-RecordDecl 0x55cb87aca030 <line:97:1, line:100:3> line:97:8 struct __sched_param definition
| `-FieldDecl 0x55cb87aca0f0 <line:99:5, col:9> col:9 __sched_priority 'int'
|-TypedefDecl 0x55cb87aca158 <line:101:1, col:27> col:27 referenced __cpu_mask 'unsigned long'
| `-BuiltinType 0x55cb87a5ffd0 'unsigned long'
|-RecordDecl 0x55cb87aca1b0 <line:102:9, line:105:1> line:102:9 struct definition
| `-FieldDecl 0x55cb87acb480 <line:104:3, col:53> col:14 __bits '__cpu_mask [64]'
|-TypedefDecl 0x55cb87acb530 <line:102:1, line:105:3> col:3 referenced cpu_set_t 'struct cpu_set_t':'cpu_set_t'
| `-ElaboratedType 0x55cb87acb4d0 'struct cpu_set_t' sugar
|   `-RecordType 0x55cb87aca230 'cpu_set_t'
|     `-Record 0x55cb87aca1b0 ''
|-FunctionDecl 0x55cb87acb808 <line:107:1, line:108:42> line:107:12 __sched_cpucount 'int (size_t, const cpu_set_t *)' extern
| |-ParmVarDecl 0x55cb87acb5d8 <col:30, col:37> col:37 __setsize 'size_t':'unsigned long'
| |-ParmVarDecl 0x55cb87acb6e0 <col:48, col:65> col:65 __setp 'const cpu_set_t *'
| `-NoThrowAttr 0x55cb87acb8b8 <line:108:19>
|-FunctionDecl 0x55cb87acba90 <line:109:1, col:92> col:19 __sched_cpualloc 'cpu_set_t *(size_t)' extern
| |-ParmVarDecl 0x55cb87acb920 <col:37, col:44> col:44 __count 'size_t':'unsigned long'
| `-NoThrowAttr 0x55cb87acbb38 <col:69>
|-FunctionDecl 0x55cb87acbcb0 <line:110:1, col:87> col:13 __sched_cpufree 'void (cpu_set_t *)' extern
| |-ParmVarDecl 0x55cb87acbba0 <col:30, col:41> col:41 __set 'cpu_set_t *'
| `-NoThrowAttr 0x55cb87acbd58 <col:64>
|-FunctionDecl 0x55cb87acc018 <line:113:1, line:114:45> line:113:12 sched_setparam 'int (__pid_t, const struct sched_param *)' extern
| |-ParmVarDecl 0x55cb87acbdc0 <col:28, col:36> col:36 __pid '__pid_t':'int'
| |-ParmVarDecl 0x55cb87acbef8 <col:43, col:69> col:69 __param 'const struct sched_param *'
| `-NoThrowAttr 0x55cb87acc0c8 <line:114:22>
|-FunctionDecl 0x55cb87acc3b0 <line:115:1, col:111> col:12 sched_getparam 'int (__pid_t, struct sched_param *)' extern
| |-ParmVarDecl 0x55cb87acc130 <col:28, col:36> col:36 __pid '__pid_t':'int'
| |-ParmVarDecl 0x55cb87acc228 <col:43, col:63> col:63 __param 'struct sched_param *'
| `-NoThrowAttr 0x55cb87acc460 <col:88>
|-FunctionDecl 0x55cb87acc718 <line:116:1, line:117:85> line:116:12 sched_setscheduler 'int (__pid_t, int, const struct sched_param *)' extern
| |-ParmVarDecl 0x55cb87acc4c8 <col:32, col:40> col:40 __pid '__pid_t':'int'
| |-ParmVarDecl 0x55cb87acc548 <col:47, col:51> col:51 __policy 'int'
| |-ParmVarDecl 0x55cb87acc5d8 <line:117:11, col:37> col:37 __param 'const struct sched_param *'
| `-NoThrowAttr 0x55cb87acc7d0 <col:62>
|-FunctionDecl 0x55cb87acc948 <line:118:1, col:86> col:12 sched_getscheduler 'int (__pid_t)' extern
| |-ParmVarDecl 0x55cb87acc838 <col:32, col:40> col:40 __pid '__pid_t':'int'
| `-NoThrowAttr 0x55cb87acc9f0 <col:63>
|-FunctionDecl 0x55cb87accb18 <line:119:1, col:70> col:12 sched_yield 'int (void)' extern
| `-NoThrowAttr 0x55cb87accbb8 <col:47>
|-FunctionDecl 0x55cb87acccc0 <line:120:1, col:92> col:12 sched_get_priority_max 'int (int)' extern
| |-ParmVarDecl 0x55cb87accc28 <col:36, col:40> col:40 __algorithm 'int'
| `-NoThrowAttr 0x55cb87accd68 <col:69>
|-FunctionDecl 0x55cb87acce70 <line:121:1, col:92> col:12 sched_get_priority_min 'int (int)' extern
| |-ParmVarDecl 0x55cb87accdd8 <col:36, col:40> col:40 __algorithm 'int'
| `-NoThrowAttr 0x55cb87accf18 <col:69>
|-FunctionDecl 0x55cb87acd1d8 <line:122:1, col:111> col:12 sched_rr_get_interval 'int (__pid_t, struct timespec *)' extern
| |-ParmVarDecl 0x55cb87accf80 <col:35, col:43> col:43 __pid '__pid_t':'int'
| |-ParmVarDecl 0x55cb87acd0b8 <col:50, col:67> col:67 __t 'struct timespec *'
| `-NoThrowAttr 0x55cb87acd288 <col:88>
|-TypedefDecl 0x55cb87acd318 <line:126:1, col:19> col:19 referenced clock_t '__clock_t':'long'
| `-TypedefType 0x55cb87acd2e0 '__clock_t' sugar
|   |-Typedef 0x55cb87ac76c8 '__clock_t'
|   `-BuiltinType 0x55cb87a5ff30 'long'
|-TypedefDecl 0x55cb87acd3c0 <line:129:1, col:21> col:21 referenced clockid_t '__clockid_t':'int'
| `-TypedefType 0x55cb87acd370 '__clockid_t' sugar
|   |-Typedef 0x55cb87ac7ab8 '__clockid_t'
|   `-BuiltinType 0x55cb87a5ff10 'int'
|-TypedefDecl 0x55cb87acd458 <line:130:1, col:19> col:19 referenced timer_t '__timer_t':'void *'
| `-TypedefType 0x55cb87acd420 '__timer_t' sugar
|   |-Typedef 0x55cb87ac7b28 '__timer_t'
|   `-PointerType 0x55cb87a60630 'void *'
|     `-BuiltinType 0x55cb87a5fe70 'void'
|-RecordDecl 0x55cb87acd4b0 <line:132:1, line:145:1> line:132:8 struct tm definition
| |-FieldDecl 0x55cb87acd570 <line:134:3, col:7> col:7 tm_sec 'int'
| |-FieldDecl 0x55cb87acd5d8 <line:135:3, col:7> col:7 tm_min 'int'
| |-FieldDecl 0x55cb87acd640 <line:136:3, col:7> col:7 tm_hour 'int'
| |-FieldDecl 0x55cb87acd6a8 <line:137:3, col:7> col:7 tm_mday 'int'
| |-FieldDecl 0x55cb87acd710 <line:138:3, col:7> col:7 tm_mon 'int'
| |-FieldDecl 0x55cb87acd778 <line:139:3, col:7> col:7 tm_year 'int'
| |-FieldDecl 0x55cb87acd7e0 <line:140:3, col:7> col:7 tm_wday 'int'
| |-FieldDecl 0x55cb87acd848 <line:141:3, col:7> col:7 tm_yday 'int'
| |-FieldDecl 0x55cb87acd8b0 <line:142:3, col:7> col:7 tm_isdst 'int'
| |-FieldDecl 0x55cb87acd918 <line:143:3, col:12> col:12 tm_gmtoff 'long'
| `-FieldDecl 0x55cb87acd980 <line:144:3, col:15> col:15 tm_zone 'const char *'
|-RecordDecl 0x55cb87acd9d0 <line:148:1, line:152:3> line:148:8 struct itimerspec definition
| |-FieldDecl 0x55cb87acda98 <line:150:5, col:21> col:21 it_interval 'struct timespec':'struct timespec'
| `-FieldDecl 0x55cb87acdb08 <line:151:5, col:21> col:21 it_value 'struct timespec':'struct timespec'
|-RecordDecl 0x55cb87acdbb0 <line:153:1, col:8> col:8 struct sigevent
|-FunctionDecl 0x55cb87acdd80 <line:155:1, col:68> col:16 clock 'clock_t (void)' extern
| `-NoThrowAttr 0x55cb87acde20 <col:45>
|-FunctionDecl 0x55cb87ace000 <line:156:1, col:77> col:15 time 'time_t (time_t *)' extern
| |-ParmVarDecl 0x55cb87acdef0 <col:21, col:29> col:29 __timer 'time_t *'
| `-NoThrowAttr 0x55cb87ace0a8 <col:54>
|-FunctionDecl 0x55cb87ace2a8 <line:157:1, line:158:73> line:157:15 difftime 'double (time_t, time_t)' extern
| |-ParmVarDecl 0x55cb87ace110 <col:25, col:32> col:32 __time1 'time_t':'long'
| |-ParmVarDecl 0x55cb87ace188 <col:41, col:48> col:48 __time0 'time_t':'long'
| |-NoThrowAttr 0x55cb87ace358 <line:158:22>
| `-ConstAttr 0x55cb87aceff0 <col:63>
|-FunctionDecl 0x55cb87acf1f0 <line:159:1, col:79> col:15 mktime 'time_t (struct tm *)' extern
| |-ParmVarDecl 0x55cb87acf0e8 <col:23, col:34> col:34 __tp 'struct tm *'
| `-NoThrowAttr 0x55cb87acf298 <col:56>
|-FunctionDecl 0x55cb87acf640 <line:160:1, line:162:77> line:160:15 strftime 'size_t (char *restrict, size_t, const char *restrict, const struct tm *restrict)' extern
| |-ParmVarDecl 0x55cb87acf308 <col:25, col:42> col:42 __s 'char *restrict'
| |-ParmVarDecl 0x55cb87acf380 <col:47, col:54> col:54 __maxsize 'size_t':'unsigned long'
| |-ParmVarDecl 0x55cb87acf400 <line:161:4, col:27> col:27 __format 'const char *restrict'
| |-ParmVarDecl 0x55cb87acf4f8 <line:162:4, col:32> col:32 __tp 'const struct tm *restrict'
| `-NoThrowAttr 0x55cb87acf700 <col:54>
|-RecordDecl 0x55cb87acf758 <line:164:9, line:171:1> line:164:16 struct __locale_struct definition
| |-RecordDecl 0x55cb87acf808 parent 0x55cb87a5fe18 <line:166:3, col:10> col:10 struct __locale_data
| |-FieldDecl 0x55cb87acfa68 <col:3, col:37> col:25 __locales 'struct __locale_data *[13]'
| |-FieldDecl 0x55cb87acfb08 <line:167:3, col:29> col:29 __ctype_b 'const unsigned short *'
| |-FieldDecl 0x55cb87acfb70 <line:168:3, col:14> col:14 __ctype_tolower 'const int *'
| |-FieldDecl 0x55cb87acfbd8 <line:169:3, col:14> col:14 __ctype_toupper 'const int *'
| `-FieldDecl 0x55cb87acfcc8 <line:170:3, col:25> col:15 __names 'const char *[13]'
|-TypedefDecl 0x55cb87acfde8 <line:164:1, line:171:4> col:4 referenced __locale_t 'struct __locale_struct *'
| `-PointerType 0x55cb87acfd90 'struct __locale_struct *'
|   `-ElaboratedType 0x55cb87acfd20 'struct __locale_struct' sugar
|     `-RecordType 0x55cb87acf7e0 'struct __locale_struct'
|       `-Record 0x55cb87acf758 '__locale_struct'
|-TypedefDecl 0x55cb87acfe98 <line:172:1, col:20> col:20 locale_t '__locale_t':'struct __locale_struct *'
| `-TypedefType 0x55cb87acfe60 '__locale_t' sugar
|   |-Typedef 0x55cb87acfde8 '__locale_t'
|   `-PointerType 0x55cb87acfd90 'struct __locale_struct *'
|     `-ElaboratedType 0x55cb87acfd20 'struct __locale_struct' sugar
|       `-RecordType 0x55cb87acf7e0 'struct __locale_struct'
|         `-Record 0x55cb87acf758 '__locale_struct'
|-FunctionDecl 0x55cb87ad12a0 <line:173:1, line:176:63> line:173:15 strftime_l 'size_t (char *restrict, size_t, const char *restrict, const struct tm *restrict, __locale_t)' extern
| |-ParmVarDecl 0x55cb87acff08 <col:27, col:44> col:44 __s 'char *restrict'
| |-ParmVarDecl 0x55cb87acff80 <col:49, col:56> col:56 __maxsize 'size_t':'unsigned long'
| |-ParmVarDecl 0x55cb87ad1028 <line:174:6, col:29> col:29 __format 'const char *restrict'
| |-ParmVarDecl 0x55cb87ad10b8 <line:175:6, col:34> col:34 __tp 'const struct tm *restrict'
| |-ParmVarDecl 0x55cb87ad1130 <line:176:6, col:17> col:17 __loc '__locale_t':'struct __locale_struct *'
| `-NoThrowAttr 0x55cb87ad1368 <col:40>
|-FunctionDecl 0x55cb87ad1558 <line:178:1, col:89> col:19 gmtime 'struct tm *(const time_t *)' extern
| |-ParmVarDecl 0x55cb87ad1430 <col:27, col:41> col:41 __timer 'const time_t *'
| `-NoThrowAttr 0x55cb87ad1600 <col:66>
|-FunctionDecl 0x55cb87ad1710 <line:179:1, col:92> col:19 localtime 'struct tm *(const time_t *)' extern
| |-ParmVarDecl 0x55cb87ad1668 <col:30, col:44> col:44 __timer 'const time_t *'
| `-NoThrowAttr 0x55cb87ad17b8 <col:69>
|-FunctionDecl 0x55cb87ad19e8 <line:181:1, line:182:75> line:181:19 gmtime_r 'struct tm *(const time_t *restrict, struct tm *restrict)' extern
| |-ParmVarDecl 0x55cb87ad1820 <col:29, col:54> col:54 __timer 'const time_t *restrict'
| |-ParmVarDecl 0x55cb87ad18b0 <line:182:8, col:30> col:30 __tp 'struct tm *restrict'
| `-NoThrowAttr 0x55cb87ad1a98 <col:52>
|-FunctionDecl 0x55cb87ad1c40 <line:183:1, line:184:78> line:183:19 localtime_r 'struct tm *(const time_t *restrict, struct tm *restrict)' extern
| |-ParmVarDecl 0x55cb87ad1b00 <col:32, col:57> col:57 __timer 'const time_t *restrict'
| |-ParmVarDecl 0x55cb87ad1b90 <line:184:11, col:33> col:33 __tp 'struct tm *restrict'
| `-NoThrowAttr 0x55cb87ad1cf0 <col:55>
|-FunctionDecl 0x55cb87ad1e88 <line:186:1, col:85> col:14 asctime 'char *(const struct tm *)' extern
| |-ParmVarDecl 0x55cb87ad1d70 <col:23, col:40> col:40 __tp 'const struct tm *'
| `-NoThrowAttr 0x55cb87ad1f30 <col:62>
|-FunctionDecl 0x55cb87ad2168 <line:187:1, col:83> col:14 ctime 'char *(const time_t *)' extern
| |-ParmVarDecl 0x55cb87ad1f98 <col:21, col:35> col:35 __timer 'const time_t *'
| `-NoThrowAttr 0x55cb87ad2210 <col:60>
|-FunctionDecl 0x55cb87ad2438 <line:189:1, line:190:67> line:189:14 asctime_r 'char *(const struct tm *restrict, char *restrict)' extern
| |-ParmVarDecl 0x55cb87ad2290 <col:25, col:53> col:53 __tp 'const struct tm *restrict'
| |-ParmVarDecl 0x55cb87ad2310 <line:190:4, col:21> col:21 __buf 'char *restrict'
| `-NoThrowAttr 0x55cb87ad24e8 <col:44>
|-FunctionDecl 0x55cb87ad26f8 <line:191:1, line:192:72> line:191:14 ctime_r 'char *(const time_t *restrict, char *restrict)' extern
| |-ParmVarDecl 0x55cb87ad2550 <col:23, col:48> col:48 __timer 'const time_t *restrict'
| |-ParmVarDecl 0x55cb87ad25d0 <line:192:9, col:26> col:26 __buf 'char *restrict'
| `-NoThrowAttr 0x55cb87ad27a8 <col:49>
|-VarDecl 0x55cb87ad28a8 <line:193:1, col:24> col:14 __tzname 'char *[2]' extern
|-VarDecl 0x55cb87ad2928 <line:194:1, col:12> col:12 __daylight 'int' extern
|-VarDecl 0x55cb87ad29a8 <line:195:1, col:17> col:17 __timezone 'long' extern
|-VarDecl 0x55cb87ad2a70 <line:196:1, col:22> col:14 tzname 'char *[2]' extern
|-FunctionDecl 0x55cb87ad2ba0 <line:197:1, col:65> col:13 tzset 'void (void)' extern
| `-NoThrowAttr 0x55cb87ad2c40 <col:42>
|-VarDecl 0x55cb87ad2cb0 <line:198:1, col:12> col:12 daylight 'int' extern
|-VarDecl 0x55cb87ad2d30 <line:199:1, col:17> col:17 timezone 'long' extern
|-FunctionDecl 0x55cb87ad2eb8 <line:200:1, col:80> col:12 stime 'int (const time_t *)' extern
| |-ParmVarDecl 0x55cb87ad2da8 <col:19, col:33> col:33 __when 'const time_t *'
| `-NoThrowAttr 0x55cb87ad2f60 <col:57>
|-FunctionDecl 0x55cb87ad30d0 <line:201:1, col:79> col:15 timegm 'time_t (struct tm *)' extern
| |-ParmVarDecl 0x55cb87ad2fe0 <col:23, col:34> col:34 __tp 'struct tm *'
| `-NoThrowAttr 0x55cb87ad3178 <col:56>
|-FunctionDecl 0x55cb87ad3288 <line:202:1, col:82> col:15 timelocal 'time_t (struct tm *)' extern
| |-ParmVarDecl 0x55cb87ad31f8 <col:26, col:37> col:37 __tp 'struct tm *'
| `-NoThrowAttr 0x55cb87ad3330 <col:59>
|-FunctionDecl 0x55cb87ad3438 <line:203:1, col:99> col:12 dysize 'int (int)' extern
| |-ParmVarDecl 0x55cb87ad33a0 <col:20, col:24> col:24 __year 'int'
| |-NoThrowAttr 0x55cb87ad34e0 <col:48>
| `-ConstAttr 0x55cb87ad3538 <col:89>
|-FunctionDecl 0x55cb87ad3798 <line:204:1, line:205:37> line:204:12 nanosleep 'int (const struct timespec *, struct timespec *)' extern
| |-ParmVarDecl 0x55cb87ad35e8 <col:23, col:46> col:46 __requested_time 'const struct timespec *'
| `-ParmVarDecl 0x55cb87ad3678 <line:205:9, col:26> col:26 __remaining 'struct timespec *'
|-FunctionDecl 0x55cb87ad39f8 <line:206:1, col:111> col:12 clock_getres 'int (clockid_t, struct timespec *)' extern
| |-ParmVarDecl 0x55cb87ad3888 <col:26, col:36> col:36 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x55cb87ad3918 <col:48, col:65> col:65 __res 'struct timespec *'
| `-NoThrowAttr 0x55cb87ad3aa8 <col:88>
|-FunctionDecl 0x55cb87ad3c40 <line:207:1, col:111> col:12 clock_gettime 'int (clockid_t, struct timespec *)' extern
| |-ParmVarDecl 0x55cb87ad3b10 <col:27, col:37> col:37 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x55cb87ad3ba0 <col:49, col:66> col:66 __tp 'struct timespec *'
| `-NoThrowAttr 0x55cb87ad3cf0 <col:88>
|-FunctionDecl 0x55cb87ad3f08 <line:208:1, line:209:45> line:208:12 clock_settime 'int (clockid_t, const struct timespec *)' extern
| |-ParmVarDecl 0x55cb87ad3d58 <col:27, col:37> col:37 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x55cb87ad3de8 <col:49, col:72> col:72 __tp 'const struct timespec *'
| `-NoThrowAttr 0x55cb87ad3fb8 <line:209:22>
|-FunctionDecl 0x55cb87ad4358 <line:210:1, line:212:30> line:210:12 clock_nanosleep 'int (clockid_t, int, const struct timespec *, struct timespec *)' extern
| |-ParmVarDecl 0x55cb87ad4020 <col:29, col:39> col:39 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x55cb87ad40e0 <col:51, col:55> col:55 __flags 'int'
| |-ParmVarDecl 0x55cb87ad4170 <line:211:8, col:31> col:31 __req 'const struct timespec *'
| `-ParmVarDecl 0x55cb87ad4200 <line:212:8, col:25> col:25 __rem 'struct timespec *'
|-FunctionDecl 0x55cb87ad4658 <line:213:1, col:108> col:12 clock_getcpuclockid 'int (pid_t, clockid_t *)' extern
| |-ParmVarDecl 0x55cb87ad4458 <col:33, col:39> col:39 __pid 'pid_t':'int'
| |-ParmVarDecl 0x55cb87ad4530 <col:46, col:57> col:57 __clock_id 'clockid_t *'
| `-NoThrowAttr 0x55cb87ad4708 <col:85>
|-FunctionDecl 0x55cb87ad4af8 <line:214:1, line:216:75> line:214:12 timer_create 'int (clockid_t, struct sigevent *restrict, timer_t *restrict)' extern
| |-ParmVarDecl 0x55cb87ad4770 <col:26, col:36> col:36 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x55cb87ad48a8 <line:215:5, col:33> col:33 __evp 'struct sigevent *restrict'
| |-ParmVarDecl 0x55cb87ad49b0 <line:216:5, col:25> col:25 __timerid 'timer_t *restrict'
| `-NoThrowAttr 0x55cb87ad4bb0 <col:52>
|-FunctionDecl 0x55cb87ad4d28 <line:217:1, col:84> col:12 timer_delete 'int (timer_t)' extern
| |-ParmVarDecl 0x55cb87ad4c18 <col:26, col:34> col:34 __timerid 'timer_t':'void *'
| `-NoThrowAttr 0x55cb87ad4dd0 <col:61>
|-FunctionDecl 0x55cb87ad5248 <line:218:1, line:220:85> line:218:12 timer_settime 'int (timer_t, int, const struct itimerspec *restrict, struct itimerspec *restrict)' extern
| |-ParmVarDecl 0x55cb87ad4e38 <col:27, col:35> col:35 __timerid 'timer_t':'void *'
| |-ParmVarDecl 0x55cb87ad4eb8 <col:46, col:50> col:50 __flags 'int'
| |-ParmVarDecl 0x55cb87ad4fe8 <line:219:6, col:42> col:42 __value 'const struct itimerspec *restrict'
| |-ParmVarDecl 0x55cb87ad50f0 <line:220:6, col:36> col:36 __ovalue 'struct itimerspec *restrict'
| `-NoThrowAttr 0x55cb87ad5308 <col:62>
|-FunctionDecl 0x55cb87ad5528 <line:221:1, line:222:45> line:221:12 timer_gettime 'int (timer_t, struct itimerspec *)' extern
| |-ParmVarDecl 0x55cb87ad5370 <col:27, col:35> col:35 __timerid 'timer_t':'void *'
| |-ParmVarDecl 0x55cb87ad5400 <col:46, col:65> col:65 __value 'struct itimerspec *'
| `-NoThrowAttr 0x55cb87ad55d8 <line:222:22>
|-FunctionDecl 0x55cb87ad56d8 <line:223:1, col:88> col:12 timer_getoverrun 'int (timer_t)' extern
| |-ParmVarDecl 0x55cb87ad5640 <col:30, col:38> col:38 __timerid 'timer_t':'void *'
| `-NoThrowAttr 0x55cb87ad5780 <col:65>
|-TypedefDecl 0x55cb87ad57f0 <line:225:1, col:27> col:27 referenced pthread_t 'unsigned long'
| `-BuiltinType 0x55cb87a5ffd0 'unsigned long'
|-RecordDecl 0x55cb87ad5848 <line:226:1, line:230:1> line:226:7 union pthread_attr_t definition
| |-FieldDecl 0x55cb87ad5990 <line:228:3, col:17> col:8 __size 'char [56]'
| `-FieldDecl 0x55cb87ad59f8 <line:229:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x55cb87ad5aa8 <line:231:1, col:30> col:30 referenced pthread_attr_t 'union pthread_attr_t':'union pthread_attr_t'
| `-ElaboratedType 0x55cb87ad5a50 'union pthread_attr_t' sugar
|   `-RecordType 0x55cb87ad58d0 'union pthread_attr_t'
|     `-Record 0x55cb87ad5848 'pthread_attr_t'
|-RecordDecl 0x55cb87ad5b00 <line:232:9, line:236:1> line:232:16 struct __pthread_internal_list definition
| |-FieldDecl 0x55cb87ad5c78 <line:234:3, col:35> col:35 __prev 'struct __pthread_internal_list *'
| `-FieldDecl 0x55cb87ad5cf0 <line:235:3, col:35> col:35 __next 'struct __pthread_internal_list *'
|-TypedefDecl 0x55cb87ad5da0 <line:232:1, line:236:3> col:3 referenced __pthread_list_t 'struct __pthread_internal_list':'struct __pthread_internal_list'
| `-ElaboratedType 0x55cb87ad5d40 'struct __pthread_internal_list' sugar
|   `-RecordType 0x55cb87ad5b80 'struct __pthread_internal_list'
|     `-Record 0x55cb87ad5b00 '__pthread_internal_list'
|-RecordDecl 0x55cb87ad5e10 <line:237:9, line:251:1> line:237:9 union definition
| |-RecordDecl 0x55cb87ad5eb8 parent 0x55cb87a5fe18 <line:239:3, line:248:3> line:239:10 struct __pthread_mutex_s definition
| | |-FieldDecl 0x55cb87ad5f90 <line:241:5, col:9> col:9 __lock 'int'
| | |-FieldDecl 0x55cb87ad5ff8 <line:242:5, col:18> col:18 __count 'unsigned int'
| | |-FieldDecl 0x55cb87ad6060 <line:243:5, col:9> col:9 __owner 'int'
| | |-FieldDecl 0x55cb87ada110 <line:244:5, col:18> col:18 __nusers 'unsigned int'
| | |-FieldDecl 0x55cb87ada178 <line:245:5, col:9> col:9 __kind 'int'
| | |-FieldDecl 0x55cb87ada1e0 <line:246:5, col:9> col:9 __spins 'int'
| | `-FieldDecl 0x55cb87ada268 <line:247:5, col:22> col:22 __list '__pthread_list_t':'struct __pthread_internal_list'
| |-FieldDecl 0x55cb87ada320 <line:239:3, line:248:5> col:5 __data 'struct __pthread_mutex_s':'struct __pthread_mutex_s'
| |-FieldDecl 0x55cb87ada410 <line:249:3, col:17> col:8 __size 'char [40]'
| `-FieldDecl 0x55cb87ada478 <line:250:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x55cb87ada600 <line:237:1, line:251:3> col:3 referenced pthread_mutex_t 'union pthread_mutex_t':'pthread_mutex_t'
| `-ElaboratedType 0x55cb87ada5a0 'union pthread_mutex_t' sugar
|   `-RecordType 0x55cb87ad5e90 'pthread_mutex_t'
|     `-Record 0x55cb87ad5e10 ''
|-RecordDecl 0x55cb87ada670 <line:252:9, line:256:1> line:252:9 union definition
| |-FieldDecl 0x55cb87ada7b0 <line:254:3, col:16> col:8 __size 'char [4]'
| `-FieldDecl 0x55cb87ada818 <line:255:3, col:7> col:7 __align 'int'
|-TypedefDecl 0x55cb87ada8d0 <line:252:1, line:256:3> col:3 referenced pthread_mutexattr_t 'union pthread_mutexattr_t':'pthread_mutexattr_t'
| `-ElaboratedType 0x55cb87ada870 'union pthread_mutexattr_t' sugar
|   `-RecordType 0x55cb87ada6f0 'pthread_mutexattr_t'
|     `-Record 0x55cb87ada670 ''
|-RecordDecl 0x55cb87ada940 <line:257:9, line:272:1> line:257:9 union definition
| |-RecordDecl 0x55cb87ada9e8 <line:259:3, line:269:3> line:259:3 struct definition
| | |-FieldDecl 0x55cb87adaab0 <line:261:5, col:9> col:9 __lock 'int'
| | |-FieldDecl 0x55cb87adab18 <line:262:5, col:18> col:18 __futex 'unsigned int'
| | |-FieldDecl 0x55cb87adab80 <line:263:19, col:42> col:42 __total_seq 'unsigned long long'
| | |-FieldDecl 0x55cb87adabe8 <line:264:19, col:42> col:42 __wakeup_seq 'unsigned long long'
| | |-FieldDecl 0x55cb87adac50 <line:265:19, col:42> col:42 __woken_seq 'unsigned long long'
| | |-FieldDecl 0x55cb87adacb8 <line:266:5, col:11> col:11 __mutex 'void *'
| | |-FieldDecl 0x55cb87adad20 <line:267:5, col:18> col:18 __nwaiters 'unsigned int'
| | `-FieldDecl 0x55cb87adad88 <line:268:5, col:18> col:18 __broadcast_seq 'unsigned int'
| |-FieldDecl 0x55cb87adae40 <line:259:3, line:269:5> col:5 __data 'struct (anonymous struct at ./split_6/safe032_pso.oepc_false-unreach-call.i:259:3)':'struct pthread_cond_t::(anonymous at ./split_6/safe032_pso.oepc_false-unreach-call.i:259:3)'
| |-FieldDecl 0x55cb87adaf30 <line:270:3, col:17> col:8 __size 'char [48]'
| `-FieldDecl 0x55cb87adaf98 <line:271:17, col:31> col:31 __align 'long long'
|-TypedefDecl 0x55cb87adc130 <line:257:1, line:272:3> col:3 referenced pthread_cond_t 'union pthread_cond_t':'pthread_cond_t'
| `-ElaboratedType 0x55cb87adb070 'union pthread_cond_t' sugar
|   `-RecordType 0x55cb87ada9c0 'pthread_cond_t'
|     `-Record 0x55cb87ada940 ''
|-RecordDecl 0x55cb87adc1a0 <line:273:9, line:277:1> line:273:9 union definition
| |-FieldDecl 0x55cb87adc2a0 <line:275:3, col:16> col:8 __size 'char [4]'
| `-FieldDecl 0x55cb87adc308 <line:276:3, col:7> col:7 __align 'int'
|-TypedefDecl 0x55cb87adc3c0 <line:273:1, line:277:3> col:3 referenced pthread_condattr_t 'union pthread_condattr_t':'pthread_condattr_t'
| `-ElaboratedType 0x55cb87adc360 'union pthread_condattr_t' sugar
|   `-RecordType 0x55cb87adc220 'pthread_condattr_t'
|     `-Record 0x55cb87adc1a0 ''
|-TypedefDecl 0x55cb87adc448 <line:278:1, col:22> col:22 referenced pthread_key_t 'unsigned int'
| `-BuiltinType 0x55cb87a5ffb0 'unsigned int'
|-TypedefDecl 0x55cb87adc4b8 <line:279:1, col:13> col:13 referenced pthread_once_t 'int'
| `-BuiltinType 0x55cb87a5ff10 'int'
|-RecordDecl 0x55cb87adc510 <line:280:9, line:298:1> line:280:9 union definition
| |-RecordDecl 0x55cb87adc5b8 <line:282:3, line:295:3> line:282:3 struct definition
| | |-FieldDecl 0x55cb87adc680 <line:284:5, col:9> col:9 __lock 'int'
| | |-FieldDecl 0x55cb87adc6e8 <line:285:5, col:18> col:18 __nr_readers 'unsigned int'
| | |-FieldDecl 0x55cb87adc750 <line:286:5, col:18> col:18 __readers_wakeup 'unsigned int'
| | |-FieldDecl 0x55cb87adc7b8 <line:287:5, col:18> col:18 __writer_wakeup 'unsigned int'
| | |-FieldDecl 0x55cb87adc820 <line:288:5, col:18> col:18 __nr_readers_queued 'unsigned int'
| | |-FieldDecl 0x55cb87adc888 <line:289:5, col:18> col:18 __nr_writers_queued 'unsigned int'
| | |-FieldDecl 0x55cb87adc8f0 <line:290:5, col:9> col:9 __writer 'int'
| | |-FieldDecl 0x55cb87adc958 <line:291:5, col:9> col:9 __shared 'int'
| | |-FieldDecl 0x55cb87adc9c0 <line:292:5, col:23> col:23 __pad1 'unsigned long'
| | |-FieldDecl 0x55cb87adca28 <line:293:5, col:23> col:23 __pad2 'unsigned long'
| | `-FieldDecl 0x55cb87adca90 <line:294:5, col:18> col:18 __flags 'unsigned int'
| |-FieldDecl 0x55cb87adcb40 <line:282:3, line:295:5> col:5 __data 'struct (anonymous struct at ./split_6/safe032_pso.oepc_false-unreach-call.i:282:3)':'struct pthread_rwlock_t::(anonymous at ./split_6/safe032_pso.oepc_false-unreach-call.i:282:3)'
| |-FieldDecl 0x55cb87adcbe8 <line:296:3, col:17> col:8 __size 'char [56]'
| `-FieldDecl 0x55cb87adcc50 <line:297:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x55cb87adcda0 <line:280:1, line:298:3> col:3 referenced pthread_rwlock_t 'union pthread_rwlock_t':'pthread_rwlock_t'
| `-ElaboratedType 0x55cb87adcd40 'union pthread_rwlock_t' sugar
|   `-RecordType 0x55cb87adc590 'pthread_rwlock_t'
|     `-Record 0x55cb87adc510 ''
|-RecordDecl 0x55cb87adce10 <line:299:9, line:303:1> line:299:9 union definition
| |-FieldDecl 0x55cb87adcf50 <line:301:3, col:16> col:8 __size 'char [8]'
| `-FieldDecl 0x55cb87adcfb8 <line:302:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x55cb87add070 <line:299:1, line:303:3> col:3 referenced pthread_rwlockattr_t 'union pthread_rwlockattr_t':'pthread_rwlockattr_t'
| `-ElaboratedType 0x55cb87add010 'union pthread_rwlockattr_t' sugar
|   `-RecordType 0x55cb87adce90 'pthread_rwlockattr_t'
|     `-Record 0x55cb87adce10 ''
|-TypedefDecl 0x55cb87ade140 <line:304:1, col:22> col:22 referenced pthread_spinlock_t 'volatile int'
| `-QualType 0x55cb87a5ff14 'volatile int' volatile
|   `-BuiltinType 0x55cb87a5ff10 'int'
|-RecordDecl 0x55cb87ade198 <line:305:9, line:309:1> line:305:9 union definition
| |-FieldDecl 0x55cb87ade2e0 <line:307:3, col:17> col:8 __size 'char [32]'
| `-FieldDecl 0x55cb87ade348 <line:308:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x55cb87ade400 <line:305:1, line:309:3> col:3 referenced pthread_barrier_t 'union pthread_barrier_t':'pthread_barrier_t'
| `-ElaboratedType 0x55cb87ade3a0 'union pthread_barrier_t' sugar
|   `-RecordType 0x55cb87ade220 'pthread_barrier_t'
|     `-Record 0x55cb87ade198 ''
|-RecordDecl 0x55cb87ade470 <line:310:9, line:314:1> line:310:9 union definition
| |-FieldDecl 0x55cb87ade570 <line:312:3, col:16> col:8 __size 'char [4]'
| `-FieldDecl 0x55cb87ade5d8 <line:313:3, col:7> col:7 __align 'int'
|-TypedefDecl 0x55cb87ade690 <line:310:1, line:314:3> col:3 referenced pthread_barrierattr_t 'union pthread_barrierattr_t':'pthread_barrierattr_t'
| `-ElaboratedType 0x55cb87ade630 'union pthread_barrierattr_t' sugar
|   `-RecordType 0x55cb87ade4f0 'pthread_barrierattr_t'
|     `-Record 0x55cb87ade470 ''
|-TypedefDecl 0x55cb87ade7a8 <line:315:1, col:29> col:18 referenced __jmp_buf 'long [8]'
| `-ConstantArrayType 0x55cb87ade740 'long [8]' 8 
|   `-BuiltinType 0x55cb87a5ff30 'long'
|-EnumDecl 0x55cb87ade800 <line:316:1, line:320:1> line:316:1
| |-EnumConstantDecl 0x55cb87ade8c8 <line:318:3> col:3 PTHREAD_CREATE_JOINABLE 'int'
| `-EnumConstantDecl 0x55cb87ade918 <line:319:3> col:3 PTHREAD_CREATE_DETACHED 'int'
|-EnumDecl 0x55cb87ade968 <line:321:1, line:332:1> line:321:1
| |-EnumConstantDecl 0x55cb87adea38 <line:323:3> col:3 referenced PTHREAD_MUTEX_TIMED_NP 'int'
| |-EnumConstantDecl 0x55cb87adea88 <line:324:3> col:3 referenced PTHREAD_MUTEX_RECURSIVE_NP 'int'
| |-EnumConstantDecl 0x55cb87adead8 <line:325:3> col:3 referenced PTHREAD_MUTEX_ERRORCHECK_NP 'int'
| |-EnumConstantDecl 0x55cb87adeb28 <line:326:3> col:3 PTHREAD_MUTEX_ADAPTIVE_NP 'int'
| |-EnumConstantDecl 0x55cb87adebb0 <line:328:3, col:26> col:3 referenced PTHREAD_MUTEX_NORMAL 'int'
| | `-ConstantExpr 0x55cb87adeb98 <col:26> 'int'
| |   `-DeclRefExpr 0x55cb87adeb78 <col:26> 'int' EnumConstant 0x55cb87adea38 'PTHREAD_MUTEX_TIMED_NP' 'int'
| |-EnumConstantDecl 0x55cb87adec38 <line:329:3, col:29> col:3 PTHREAD_MUTEX_RECURSIVE 'int'
| | `-ConstantExpr 0x55cb87adec20 <col:29> 'int'
| |   `-DeclRefExpr 0x55cb87adec00 <col:29> 'int' EnumConstant 0x55cb87adea88 'PTHREAD_MUTEX_RECURSIVE_NP' 'int'
| |-EnumConstantDecl 0x55cb87adecc0 <line:330:3, col:30> col:3 PTHREAD_MUTEX_ERRORCHECK 'int'
| | `-ConstantExpr 0x55cb87adeca8 <col:30> 'int'
| |   `-DeclRefExpr 0x55cb87adec88 <col:30> 'int' EnumConstant 0x55cb87adead8 'PTHREAD_MUTEX_ERRORCHECK_NP' 'int'
| `-EnumConstantDecl 0x55cb87aded48 <line:331:3, col:27> col:3 PTHREAD_MUTEX_DEFAULT 'int'
|   `-ConstantExpr 0x55cb87aded30 <col:27> 'int'
|     `-DeclRefExpr 0x55cb87aded10 <col:27> 'int' EnumConstant 0x55cb87adebb0 'PTHREAD_MUTEX_NORMAL' 'int'
|-EnumDecl 0x55cb87aded98 <line:333:1, line:339:1> line:333:1
| |-EnumConstantDecl 0x55cb87adee68 <line:335:3> col:3 referenced PTHREAD_MUTEX_STALLED 'int'
| |-EnumConstantDecl 0x55cb87adeef0 <line:336:3, col:30> col:3 PTHREAD_MUTEX_STALLED_NP 'int'
| | `-ConstantExpr 0x55cb87adeed8 <col:30> 'int'
| |   `-DeclRefExpr 0x55cb87adeeb8 <col:30> 'int' EnumConstant 0x55cb87adee68 'PTHREAD_MUTEX_STALLED' 'int'
| |-EnumConstantDecl 0x55cb87adef40 <line:337:3> col:3 referenced PTHREAD_MUTEX_ROBUST 'int'
| `-EnumConstantDecl 0x55cb87adefc8 <line:338:3, col:29> col:3 PTHREAD_MUTEX_ROBUST_NP 'int'
|   `-ConstantExpr 0x55cb87adefb0 <col:29> 'int'
|     `-DeclRefExpr 0x55cb87adef90 <col:29> 'int' EnumConstant 0x55cb87adef40 'PTHREAD_MUTEX_ROBUST' 'int'
|-EnumDecl 0x55cb87adf018 <line:340:1, line:345:1> line:340:1
| |-EnumConstantDecl 0x55cb87adf0e8 <line:342:3> col:3 PTHREAD_PRIO_NONE 'int'
| |-EnumConstantDecl 0x55cb87adf150 <line:343:3> col:3 PTHREAD_PRIO_INHERIT 'int'
| `-EnumConstantDecl 0x55cb87adf1a0 <line:344:3> col:3 PTHREAD_PRIO_PROTECT 'int'
|-EnumDecl 0x55cb87adf1f0 <line:346:1, line:352:1> line:346:1
| |-EnumConstantDecl 0x55cb87adf2b8 <line:348:3> col:3 referenced PTHREAD_RWLOCK_PREFER_READER_NP 'int'
| |-EnumConstantDecl 0x55cb87adf308 <line:349:3> col:3 PTHREAD_RWLOCK_PREFER_WRITER_NP 'int'
| |-EnumConstantDecl 0x55cb87adf358 <line:350:3> col:3 PTHREAD_RWLOCK_PREFER_WRITER_NONRECURSIVE_NP 'int'
| `-EnumConstantDecl 0x55cb87adf3e0 <line:351:3, col:31> col:3 PTHREAD_RWLOCK_DEFAULT_NP 'int'
|   `-ConstantExpr 0x55cb87adf3c8 <col:31> 'int'
|     `-DeclRefExpr 0x55cb87adf3a8 <col:31> 'int' EnumConstant 0x55cb87adf2b8 'PTHREAD_RWLOCK_PREFER_READER_NP' 'int'
|-EnumDecl 0x55cb87adf430 <line:353:1, line:357:1> line:353:1
| |-EnumConstantDecl 0x55cb87adf4f8 <line:355:3> col:3 PTHREAD_INHERIT_SCHED 'int'
| `-EnumConstantDecl 0x55cb87adf548 <line:356:3> col:3 PTHREAD_EXPLICIT_SCHED 'int'
|-EnumDecl 0x55cb87adf598 <line:358:1, line:362:1> line:358:1
| |-EnumConstantDecl 0x55cb87adf668 <line:360:3> col:3 PTHREAD_SCOPE_SYSTEM 'int'
| `-EnumConstantDecl 0x55cb87adf6b8 <line:361:3> col:3 PTHREAD_SCOPE_PROCESS 'int'
|-EnumDecl 0x55cb87adf708 <line:363:1, line:367:1> line:363:1
| |-EnumConstantDecl 0x55cb87adf7d8 <line:365:3> col:3 PTHREAD_PROCESS_PRIVATE 'int'
| `-EnumConstantDecl 0x55cb87adf828 <line:366:3> col:3 PTHREAD_PROCESS_SHARED 'int'
|-RecordDecl 0x55cb87adf878 <line:368:1, line:374:1> line:368:8 struct _pthread_cleanup_buffer definition
| |-FieldDecl 0x55cb87adfab8 <line:370:3, col:28> col:10 __routine 'void (*)(void *)'
| |-FieldDecl 0x55cb87adfb20 <line:371:3, col:9> col:9 __arg 'void *'
| |-FieldDecl 0x55cb87adfb88 <line:372:3, col:7> col:7 __canceltype 'int'
| `-FieldDecl 0x55cb87adfca8 <line:373:3, col:35> col:35 __prev 'struct _pthread_cleanup_buffer *'
|-EnumDecl 0x55cb87adfcf8 <line:375:1, line:379:1> line:375:1
| |-EnumConstantDecl 0x55cb87adfdc8 <line:377:3> col:3 PTHREAD_CANCEL_ENABLE 'int'
| `-EnumConstantDecl 0x55cb87adfe18 <line:378:3> col:3 PTHREAD_CANCEL_DISABLE 'int'
|-EnumDecl 0x55cb87adfe68 <line:380:1, line:384:1> line:380:1
| |-EnumConstantDecl 0x55cb87adff38 <line:382:3> col:3 PTHREAD_CANCEL_DEFERRED 'int'
| `-EnumConstantDecl 0x55cb87adff88 <line:383:3> col:3 PTHREAD_CANCEL_ASYNCHRONOUS 'int'
|-FunctionDecl 0x55cb87ae05b8 <line:386:1, line:389:96> line:386:12 used pthread_create 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' extern
| |-ParmVarDecl 0x55cb87ae0080 <col:28, col:50> col:50 __newthread 'pthread_t *restrict'
| |-ParmVarDecl 0x55cb87ae01a0 <line:387:7, col:40> col:40 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x55cb87ae03a0 <line:388:7, col:39> col:15 __start_routine 'void *(*)(void *)'
| |-ParmVarDecl 0x55cb87ae0420 <line:389:7, col:24> col:24 __arg 'void *restrict'
| |-NoThrowAttr 0x55cb87ae0678 <col:47>
| |-NonNullAttr 0x55cb87ae06d0 <col:77, col:94> 1 3
| `-CallbackAttr 0x55cb87ae0708 <line:386:12> Implicit 2 3
|-FunctionDecl 0x55cb87ae0830 <line:390:1, col:72> col:13 pthread_exit 'void (void *) __attribute__((noreturn))' extern
| `-ParmVarDecl 0x55cb87ae0760 <col:27, col:33> col:33 __retval 'void *'
|-FunctionDecl 0x55cb87ae0a88 <line:391:1, col:64> col:12 pthread_join 'int (pthread_t, void **)' extern
| |-ParmVarDecl 0x55cb87ae08e8 <col:26, col:36> col:36 __th 'pthread_t':'unsigned long'
| `-ParmVarDecl 0x55cb87ae0968 <col:42, col:49> col:49 __thread_return 'void **'
|-FunctionDecl 0x55cb87ae0c58 <line:392:1, col:83> col:12 pthread_detach 'int (pthread_t)' extern
| |-ParmVarDecl 0x55cb87ae0b48 <col:28, col:38> col:38 __th 'pthread_t':'unsigned long'
| `-NoThrowAttr 0x55cb87ae0d00 <col:60>
|-FunctionDecl 0x55cb87ae0e50 <line:393:1, col:105> col:18 pthread_self 'pthread_t (void)' extern
| |-NoThrowAttr 0x55cb87ae0ef0 <col:54>
| `-ConstAttr 0x55cb87ae0f48 <col:95>
|-FunctionDecl 0x55cb87ae2990 <line:394:1, line:395:70> line:394:12 pthread_equal 'int (pthread_t, pthread_t)' extern
| |-ParmVarDecl 0x55cb87ae0f80 <col:27, col:37> col:37 __thread1 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x55cb87ae0ff8 <col:48, col:58> col:58 __thread2 'pthread_t':'unsigned long'
| |-NoThrowAttr 0x55cb87ae2a40 <line:395:19>
| `-ConstAttr 0x55cb87ae2a98 <col:60>
|-FunctionDecl 0x55cb87ae2c68 <line:396:1, col:128> col:12 pthread_attr_init 'int (pthread_attr_t *)' extern
| |-ParmVarDecl 0x55cb87ae2b30 <col:31, col:47> col:47 __attr 'pthread_attr_t *'
| |-NoThrowAttr 0x55cb87ae2d10 <col:71>
| `-NonNullAttr 0x55cb87ae2d68 <col:112, col:126> 1
|-FunctionDecl 0x55cb87ae2e70 <line:397:1, line:398:79> line:397:12 pthread_attr_destroy 'int (pthread_attr_t *)' extern
| |-ParmVarDecl 0x55cb87ae2db8 <col:34, col:50> col:50 __attr 'pthread_attr_t *'
| |-NoThrowAttr 0x55cb87ae2f18 <line:398:22>
| `-NonNullAttr 0x55cb87ae2f70 <col:63, col:77> 1
|-FunctionDecl 0x55cb87ae3198 <line:399:1, line:401:82> line:399:12 pthread_attr_getdetachstate 'int (const pthread_attr_t *, int *)' extern
| |-ParmVarDecl 0x55cb87ae2fb8 <col:41, col:63> col:63 __attr 'const pthread_attr_t *'
| |-ParmVarDecl 0x55cb87ae3038 <line:400:6, col:11> col:11 __detachstate 'int *'
| |-NoThrowAttr 0x55cb87ae3248 <line:401:22>
| `-NonNullAttr 0x55cb87ae32a0 <col:63, col:80> 1 2
|-FunctionDecl 0x55cb87ae34a8 <line:402:1, line:404:79> line:402:12 pthread_attr_setdetachstate 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x55cb87ae32e8 <col:41, col:57> col:57 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x55cb87ae3368 <line:403:6, col:10> col:10 __detachstate 'int'
| |-NoThrowAttr 0x55cb87ae3558 <line:404:22>
| `-NonNullAttr 0x55cb87ae35b0 <col:63, col:77> 1
|-FunctionDecl 0x55cb87ae3808 <line:405:1, line:407:82> line:405:12 pthread_attr_getguardsize 'int (const pthread_attr_t *, size_t *)' extern
| |-ParmVarDecl 0x55cb87ae35f8 <col:39, col:61> col:61 __attr 'const pthread_attr_t *'
| |-ParmVarDecl 0x55cb87ae36a0 <line:406:11, col:19> col:19 __guardsize 'size_t *'
| |-NoThrowAttr 0x55cb87ae38b8 <line:407:22>
| `-NonNullAttr 0x55cb87ae3910 <col:63, col:80> 1 2
|-FunctionDecl 0x55cb87ae4b68 <line:408:1, line:410:79> line:408:12 pthread_attr_setguardsize 'int (pthread_attr_t *, size_t)' extern
| |-ParmVarDecl 0x55cb87ae49b0 <col:39, col:55> col:55 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x55cb87ae4a28 <line:409:11, col:18> col:18 __guardsize 'size_t':'unsigned long'
| |-NoThrowAttr 0x55cb87ae4c18 <line:410:22>
| `-NonNullAttr 0x55cb87ae4c70 <col:63, col:77> 1
|-FunctionDecl 0x55cb87ae4ea8 <line:411:1, line:413:82> line:411:12 pthread_attr_getschedparam 'int (const pthread_attr_t *restrict, struct sched_param *restrict)' extern
| |-ParmVarDecl 0x55cb87ae4cb8 <col:40, col:73> col:73 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x55cb87ae4d48 <line:412:12, col:43> col:43 __param 'struct sched_param *restrict'
| |-NoThrowAttr 0x55cb87ae4f58 <line:413:22>
| `-NonNullAttr 0x55cb87ae4fb0 <col:63, col:80> 1 2
|-FunctionDecl 0x55cb87ae51e8 <line:414:1, line:416:97> line:414:12 pthread_attr_setschedparam 'int (pthread_attr_t *restrict, const struct sched_param *restrict)' extern
| |-ParmVarDecl 0x55cb87ae4ff8 <col:40, col:67> col:67 __attr 'pthread_attr_t *restrict'
| |-ParmVarDecl 0x55cb87ae5088 <line:415:12, line:416:12> col:12 __param 'const struct sched_param *restrict'
| |-NoThrowAttr 0x55cb87ae5298 <col:37>
| `-NonNullAttr 0x55cb87ae52f0 <col:78, col:95> 1 2
|-FunctionDecl 0x55cb87ae54d8 <line:417:1, line:419:82> line:417:12 pthread_attr_getschedpolicy 'int (const pthread_attr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x55cb87ae5338 <col:41, line:418:6> col:6 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x55cb87ae53b8 <col:14, col:30> col:30 __policy 'int *restrict'
| |-NoThrowAttr 0x55cb87ae5588 <line:419:22>
| `-NonNullAttr 0x55cb87ae55e0 <col:63, col:80> 1 2
|-FunctionDecl 0x55cb87ae5768 <line:420:1, line:421:79> line:420:12 pthread_attr_setschedpolicy 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x55cb87ae5628 <col:41, col:57> col:57 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x55cb87ae56a8 <col:65, col:69> col:69 __policy 'int'
| |-NoThrowAttr 0x55cb87ae5818 <line:421:22>
| `-NonNullAttr 0x55cb87ae5870 <col:63, col:77> 1
|-FunctionDecl 0x55cb87ae5a38 <line:422:1, line:424:82> line:422:12 pthread_attr_getinheritsched 'int (const pthread_attr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x55cb87ae58b8 <col:42, line:423:7> col:7 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x55cb87ae5938 <col:15, col:31> col:31 __inherit 'int *restrict'
| |-NoThrowAttr 0x55cb87ae5ae8 <line:424:22>
| `-NonNullAttr 0x55cb87ae5b40 <col:63, col:80> 1 2
|-FunctionDecl 0x55cb87ae5cc8 <line:425:1, line:427:79> line:425:12 pthread_attr_setinheritsched 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x55cb87ae5b88 <col:42, col:58> col:58 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x55cb87ae5c08 <line:426:7, col:11> col:11 __inherit 'int'
| |-NoThrowAttr 0x55cb87ae5d78 <line:427:22>
| `-NonNullAttr 0x55cb87ae5dd0 <col:63, col:77> 1
|-FunctionDecl 0x55cb87ae5f78 <line:428:1, line:430:82> line:428:12 pthread_attr_getscope 'int (const pthread_attr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x55cb87ae5e18 <col:35, col:68> col:68 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x55cb87ae5e98 <line:429:7, col:23> col:23 __scope 'int *restrict'
| |-NoThrowAttr 0x55cb87ae6028 <line:430:22>
| `-NonNullAttr 0x55cb87ae6080 <col:63, col:80> 1 2
|-FunctionDecl 0x55cb87ae6208 <line:431:1, line:432:79> line:431:12 pthread_attr_setscope 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x55cb87ae60c8 <col:35, col:51> col:51 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x55cb87ae6148 <col:59, col:63> col:63 __scope 'int'
| |-NoThrowAttr 0x55cb87ae62b8 <line:432:22>
| `-NonNullAttr 0x55cb87ae6310 <col:63, col:77> 1
|-FunctionDecl 0x55cb87ae6538 <line:433:1, line:435:115> line:433:12 pthread_attr_getstackaddr 'int (const pthread_attr_t *restrict, void **restrict)' extern
| |-ParmVarDecl 0x55cb87ae6358 <col:39, line:434:11> col:11 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x55cb87ae63d8 <col:19, col:37> col:37 __stackaddr 'void **restrict'
| |-NoThrowAttr 0x55cb87ae65e8 <line:435:22>
| |-NonNullAttr 0x55cb87ae6640 <col:63, col:80> 1 2
| `-DeprecatedAttr 0x55cb87ae6678 <col:100> "" ""
|-FunctionDecl 0x55cb87ae6888 <line:436:1, line:438:112> line:436:12 pthread_attr_setstackaddr 'int (pthread_attr_t *, void *)' extern
| |-ParmVarDecl 0x55cb87ae66c8 <col:39, col:55> col:55 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x55cb87ae6748 <line:437:11, col:17> col:17 __stackaddr 'void *'
| |-NoThrowAttr 0x55cb87ae6938 <line:438:22>
| |-NonNullAttr 0x55cb87ae6990 <col:63, col:77> 1
| `-DeprecatedAttr 0x55cb87ae69d8 <col:97> "" ""
|-FunctionDecl 0x55cb87ae6bc8 <line:439:1, line:441:82> line:439:12 pthread_attr_getstacksize 'int (const pthread_attr_t *restrict, size_t *restrict)' extern
| |-ParmVarDecl 0x55cb87ae6a28 <col:39, line:440:11> col:11 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x55cb87ae6aa0 <col:19, col:38> col:38 __stacksize 'size_t *restrict'
| |-NoThrowAttr 0x55cb87ae6c78 <line:441:22>
| `-NonNullAttr 0x55cb87ae6cd0 <col:63, col:80> 1 2
|-FunctionDecl 0x55cb87ae6e50 <line:442:1, line:444:79> line:442:12 pthread_attr_setstacksize 'int (pthread_attr_t *, size_t)' extern
| |-ParmVarDecl 0x55cb87ae6d18 <col:39, col:55> col:55 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x55cb87ae6d90 <line:443:11, col:18> col:18 __stacksize 'size_t':'unsigned long'
| |-NoThrowAttr 0x55cb87ae6f00 <line:444:22>
| `-NonNullAttr 0x55cb87ae6f58 <col:63, col:77> 1
|-FunctionDecl 0x55cb87ae7248 <line:445:1, line:448:85> line:445:12 pthread_attr_getstack 'int (const pthread_attr_t *restrict, void **restrict, size_t *restrict)' extern
| |-ParmVarDecl 0x55cb87ae6fa8 <col:35, col:68> col:68 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x55cb87ae7028 <line:446:7, col:25> col:25 __stackaddr 'void **restrict'
| |-ParmVarDecl 0x55cb87ae70a0 <line:447:7, col:26> col:26 __stacksize 'size_t *restrict'
| |-NoThrowAttr 0x55cb87ae7300 <line:448:22>
| `-NonNullAttr 0x55cb87ae7358 <col:63, col:83> 1 2 3
|-FunctionDecl 0x55cb87ae7608 <line:449:1, line:450:100> line:449:12 pthread_attr_setstack 'int (pthread_attr_t *, void *, size_t)' extern
| |-ParmVarDecl 0x55cb87ae73b0 <col:35, col:51> col:51 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x55cb87ae7430 <col:59, col:65> col:65 __stackaddr 'void *'
| |-ParmVarDecl 0x55cb87ae74a8 <line:450:7, col:14> col:14 __stacksize 'size_t':'unsigned long'
| |-NoThrowAttr 0x55cb87ae76c0 <col:43>
| `-NonNullAttr 0x55cb87ae7718 <col:84, col:98> 1
|-FunctionDecl 0x55cb87ae7a20 <line:451:1, line:453:79> line:451:12 pthread_setschedparam 'int (pthread_t, int, const struct sched_param *)' extern
| |-ParmVarDecl 0x55cb87ae7768 <col:35, col:45> col:45 __target_thread 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x55cb87ae77e8 <col:62, col:66> col:66 __policy 'int'
| |-ParmVarDecl 0x55cb87ae7878 <line:452:7, col:33> col:33 __param 'const struct sched_param *'
| |-NoThrowAttr 0x55cb87ae7ad8 <line:453:22>
| `-NonNullAttr 0x55cb87ae7b30 <col:63, col:77> 3
|-FunctionDecl 0x55cb87ae7e08 <line:454:1, line:457:82> line:454:12 pthread_getschedparam 'int (pthread_t, int *restrict, struct sched_param *restrict)' extern
| |-ParmVarDecl 0x55cb87ae7b78 <col:35, col:45> col:45 __target_thread 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x55cb87ae7bf8 <line:455:7, col:23> col:23 __policy 'int *restrict'
| |-ParmVarDecl 0x55cb87ae7c88 <line:456:7, col:38> col:38 __param 'struct sched_param *restrict'
| |-NoThrowAttr 0x55cb87ae7ec0 <line:457:22>
| `-NonNullAttr 0x55cb87ae7f18 <col:63, col:80> 2 3
|-FunctionDecl 0x55cb87ae8108 <line:458:1, line:459:45> line:458:12 pthread_setschedprio 'int (pthread_t, int)' extern
| |-ParmVarDecl 0x55cb87ae7f68 <col:34, col:44> col:44 __target_thread 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x55cb87ae7fe8 <col:61, col:65> col:65 __prio 'int'
| `-NoThrowAttr 0x55cb87ae81b8 <line:459:22>
|-FunctionDecl 0x55cb87ae8588 <line:460:1, line:461:71> line:460:12 pthread_once 'int (pthread_once_t *, void (*)(void))' extern
| |-ParmVarDecl 0x55cb87ae8280 <col:26, col:42> col:42 __once_control 'pthread_once_t *'
| |-ParmVarDecl 0x55cb87ae8420 <line:461:5, col:33> col:12 __init_routine 'void (*)(void)'
| `-NonNullAttr 0x55cb87ae8638 <col:52, col:69> 1 2
|-FunctionDecl 0x55cb87ae87e0 <line:462:1, col:64> col:12 pthread_setcancelstate 'int (int, int *)' extern
| |-ParmVarDecl 0x55cb87ae86c0 <col:36, col:40> col:40 __state 'int'
| `-ParmVarDecl 0x55cb87ae8740 <col:49, col:54> col:54 __oldstate 'int *'
|-FunctionDecl 0x55cb87ae89f0 <line:463:1, col:61> col:12 pthread_setcanceltype 'int (int, int *)' extern
| |-ParmVarDecl 0x55cb87ae88a8 <col:35, col:39> col:39 __type 'int'
| `-ParmVarDecl 0x55cb87ae8928 <col:47, col:52> col:52 __oldtype 'int *'
|-FunctionDecl 0x55cb87ae8b48 <line:464:1, col:42> col:12 pthread_cancel 'int (pthread_t)' extern
| `-ParmVarDecl 0x55cb87ae8ab0 <col:28, col:38> col:38 __th 'pthread_t':'unsigned long'
|-FunctionDecl 0x55cb87ae8c88 <line:465:1, col:37> col:13 pthread_testcancel 'void (void)' extern
|-RecordDecl 0x55cb87ae8d28 <line:466:9, line:474:1> line:466:9 struct definition
| |-RecordDecl 0x55cb87ae8dd8 <line:468:3, line:472:3> line:468:3 struct definition
| | |-FieldDecl 0x55cb87ae8ec8 <line:470:5, col:15> col:15 __cancel_jmp_buf '__jmp_buf':'long [8]'
| | `-FieldDecl 0x55cb87ae8f30 <line:471:5, col:9> col:9 __mask_was_saved 'int'
| |-FieldDecl 0x55cb87ae9100 <line:468:3, line:472:23> col:5 __cancel_jmp_buf 'struct (anonymous struct at ./split_6/safe032_pso.oepc_false-unreach-call.i:468:3) [1]'
| `-FieldDecl 0x55cb87ae91f8 <line:473:3, col:16> col:9 __pad 'void *[4]'
|-TypedefDecl 0x55cb87ae92b0 <line:466:1, line:474:3> col:3 referenced __pthread_unwind_buf_t 'struct __pthread_unwind_buf_t':'__pthread_unwind_buf_t'
| |-ElaboratedType 0x55cb87ae9250 'struct __pthread_unwind_buf_t' sugar
| | `-RecordType 0x55cb87ae8db0 '__pthread_unwind_buf_t'
| |   `-Record 0x55cb87ae8d28 ''
| `-AlignedAttr 0x55cb87ae9308 <col:42> aligned
|   `-<<<NULL>>>
|-RecordDecl 0x55cb87ae9380 <line:475:1, line:481:1> line:475:8 struct __pthread_cleanup_frame definition
| |-FieldDecl 0x55cb87ae94e0 <line:477:3, col:35> col:10 __cancel_routine 'void (*)(void *)'
| |-FieldDecl 0x55cb87ae9548 <line:478:3, col:9> col:9 __cancel_arg 'void *'
| |-FieldDecl 0x55cb87ae95b0 <line:479:3, col:7> col:7 __do_it 'int'
| `-FieldDecl 0x55cb87ae9618 <line:480:3, col:7> col:7 __cancel_type 'int'
|-FunctionDecl 0x55cb87ae9820 <line:482:1, col:69> col:13 __pthread_register_cancel 'void (__pthread_unwind_buf_t *)' extern
| `-ParmVarDecl 0x55cb87ae9710 <col:40, col:64> col:64 __buf '__pthread_unwind_buf_t *'
|-FunctionDecl 0x55cb87ae9a00 <line:484:1, col:71> col:13 __pthread_unregister_cancel 'void (__pthread_unwind_buf_t *)' extern
| `-ParmVarDecl 0x55cb87ae98d8 <col:42, col:66> col:66 __buf '__pthread_unwind_buf_t *'
|-FunctionDecl 0x55cb87ae9bc0 <line:486:1, line:488:31> line:486:13 __pthread_unwind_next 'void (__pthread_unwind_buf_t *) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x55cb87ae9ab8 <col:36, col:60> col:60 __buf '__pthread_unwind_buf_t *'
| `-WeakAttr 0x55cb87ae9c68 <line:488:22>
|-RecordDecl 0x55cb87ae9cc0 <line:490:1, col:8> col:8 struct __jmp_buf_tag
|-FunctionDecl 0x55cb87ae9fd8 <line:491:1, col:98> col:12 __sigsetjmp 'int (struct __jmp_buf_tag *, int)' extern
| |-ParmVarDecl 0x55cb87ae9e38 <col:25, col:47> col:47 __env 'struct __jmp_buf_tag *'
| |-ParmVarDecl 0x55cb87ae9eb8 <col:54, col:58> col:58 __savemask 'int'
| |-NoThrowAttr 0x55cb87aea088 <col:86>
| `-ReturnsTwiceAttr 0x55cb87aea0e0 <col:12> Implicit
|-FunctionDecl 0x55cb87aea408 <line:492:1, line:494:79> line:492:12 pthread_mutex_init 'int (pthread_mutex_t *, const pthread_mutexattr_t *)' extern
| |-ParmVarDecl 0x55cb87aea1b0 <col:32, col:49> col:49 __mutex 'pthread_mutex_t *'
| |-ParmVarDecl 0x55cb87aea2c0 <line:493:11, col:38> col:38 __mutexattr 'const pthread_mutexattr_t *'
| |-NoThrowAttr 0x55cb87aea4b8 <line:494:22>
| `-NonNullAttr 0x55cb87aea510 <col:63, col:77> 1
|-FunctionDecl 0x55cb87aea688 <line:495:1, line:496:79> line:495:12 pthread_mutex_destroy 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x55cb87aea558 <col:35, col:52> col:52 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x55cb87aea730 <line:496:22>
| `-NonNullAttr 0x55cb87aea788 <col:63, col:77> 1
|-FunctionDecl 0x55cb87aea890 <line:497:1, line:498:68> line:497:12 pthread_mutex_trylock 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x55cb87aea7d8 <col:35, col:52> col:52 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x55cb87aea938 <line:498:22>
| `-NonNullAttr 0x55cb87aea990 <col:52, col:66> 1
|-FunctionDecl 0x55cb87aebad8 <line:499:1, line:500:68> line:499:12 pthread_mutex_lock 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x55cb87aeba20 <col:32, col:49> col:49 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x55cb87aebb80 <line:500:22>
| `-NonNullAttr 0x55cb87aebbd8 <col:52, col:66> 1
|-FunctionDecl 0x55cb87aebe18 <line:501:1, line:503:85> line:501:12 pthread_mutex_timedlock 'int (pthread_mutex_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x55cb87aebc28 <col:37, col:65> col:65 __mutex 'pthread_mutex_t *restrict'
| |-ParmVarDecl 0x55cb87aebcb8 <line:502:9, line:503:9> col:9 __abstime 'const struct timespec *restrict'
| |-NoThrowAttr 0x55cb87aebec8 <col:36>
| `-NonNullAttr 0x55cb87aebf20 <col:66, col:83> 1 2
|-FunctionDecl 0x55cb87aec020 <line:504:1, line:505:68> line:504:12 pthread_mutex_unlock 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x55cb87aebf68 <col:34, col:51> col:51 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x55cb87aec0c8 <line:505:22>
| `-NonNullAttr 0x55cb87aec120 <col:52, col:66> 1
|-FunctionDecl 0x55cb87aec3b8 <line:506:1, line:509:82> line:506:12 pthread_mutex_getprioceiling 'int (const pthread_mutex_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x55cb87aec1d0 <col:42, line:507:18> col:18 __mutex 'const pthread_mutex_t *restrict'
| |-ParmVarDecl 0x55cb87aec250 <line:508:7, col:23> col:23 __prioceiling 'int *restrict'
| |-NoThrowAttr 0x55cb87aec468 <line:509:22>
| `-NonNullAttr 0x55cb87aec4c0 <col:63, col:80> 1 2
|-FunctionDecl 0x55cb87aec788 <line:510:1, line:513:82> line:510:12 pthread_mutex_setprioceiling 'int (pthread_mutex_t *restrict, int, int *restrict)' extern
| |-ParmVarDecl 0x55cb87aec508 <col:42, col:70> col:70 __mutex 'pthread_mutex_t *restrict'
| |-ParmVarDecl 0x55cb87aec588 <line:511:7, col:11> col:11 __prioceiling 'int'
| |-ParmVarDecl 0x55cb87aec608 <line:512:7, col:23> col:23 __old_ceiling 'int *restrict'
| |-NoThrowAttr 0x55cb87aec840 <line:513:22>
| `-NonNullAttr 0x55cb87aec898 <col:63, col:80> 1 3
|-FunctionDecl 0x55cb87aeca30 <line:514:1, line:515:79> line:514:12 pthread_mutex_consistent 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x55cb87aec8e8 <col:38, col:55> col:55 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x55cb87aecad8 <line:515:22>
| `-NonNullAttr 0x55cb87aecb30 <col:63, col:77> 1
|-FunctionDecl 0x55cb87aecd18 <line:516:1, line:517:79> line:516:12 pthread_mutexattr_init 'int (pthread_mutexattr_t *)' extern
| |-ParmVarDecl 0x55cb87aecbe0 <col:36, col:57> col:57 __attr 'pthread_mutexattr_t *'
| |-NoThrowAttr 0x55cb87aecdc0 <line:517:22>
| `-NonNullAttr 0x55cb87aece18 <col:63, col:77> 1
|-FunctionDecl 0x55cb87aecf20 <line:518:1, line:519:79> line:518:12 pthread_mutexattr_destroy 'int (pthread_mutexattr_t *)' extern
| |-ParmVarDecl 0x55cb87aece68 <col:39, col:60> col:60 __attr 'pthread_mutexattr_t *'
| |-NoThrowAttr 0x55cb87aecfc8 <line:519:22>
| `-NonNullAttr 0x55cb87aed020 <col:63, col:77> 1
|-FunctionDecl 0x55cb87aed248 <line:520:1, line:523:82> line:520:12 pthread_mutexattr_getpshared 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x55cb87aed068 <col:42, line:521:18> col:18 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x55cb87aed0e8 <line:522:7, col:23> col:23 __pshared 'int *restrict'
| |-NoThrowAttr 0x55cb87aed2f8 <line:523:22>
| `-NonNullAttr 0x55cb87aed350 <col:63, col:80> 1 2
|-FunctionDecl 0x55cb87aed558 <line:524:1, line:526:79> line:524:12 pthread_mutexattr_setpshared 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x55cb87aed398 <col:42, col:63> col:63 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x55cb87aed418 <line:525:7, col:11> col:11 __pshared 'int'
| |-NoThrowAttr 0x55cb87aed608 <line:526:22>
| `-NonNullAttr 0x55cb87aed660 <col:63, col:77> 1
|-FunctionDecl 0x55cb87aed808 <line:527:1, line:529:82> line:527:12 pthread_mutexattr_gettype 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x55cb87aed6a8 <col:39, line:528:11> col:11 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x55cb87aed728 <col:19, col:35> col:35 __kind 'int *restrict'
| |-NoThrowAttr 0x55cb87aed8b8 <line:529:22>
| `-NonNullAttr 0x55cb87aed910 <col:63, col:80> 1 2
|-FunctionDecl 0x55cb87aedb00 <line:530:1, line:531:79> line:530:12 pthread_mutexattr_settype 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x55cb87aed958 <col:39, col:60> col:60 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x55cb87aeda40 <col:68, col:72> col:72 __kind 'int'
| |-NoThrowAttr 0x55cb87aedbb0 <line:531:22>
| `-NonNullAttr 0x55cb87aedc08 <col:63, col:77> 1
|-FunctionDecl 0x55cb87aeddb8 <line:532:1, line:535:82> line:532:12 pthread_mutexattr_getprotocol 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x55cb87aedc58 <col:43, line:533:19> col:19 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x55cb87aedcd8 <line:534:8, col:24> col:24 __protocol 'int *restrict'
| |-NoThrowAttr 0x55cb87aede68 <line:535:22>
| `-NonNullAttr 0x55cb87aedec0 <col:63, col:80> 1 2
|-FunctionDecl 0x55cb87aee048 <line:536:1, line:538:79> line:536:12 pthread_mutexattr_setprotocol 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x55cb87aedf08 <col:43, col:64> col:64 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x55cb87aedf88 <line:537:8, col:12> col:12 __protocol 'int'
| |-NoThrowAttr 0x55cb87aee0f8 <line:538:22>
| `-NonNullAttr 0x55cb87aee150 <col:63, col:77> 1
|-FunctionDecl 0x55cb87aee2f8 <line:539:1, line:542:82> line:539:12 pthread_mutexattr_getprioceiling 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x55cb87aee198 <col:46, line:540:22> col:22 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x55cb87aee218 <line:541:11, col:27> col:27 __prioceiling 'int *restrict'
| |-NoThrowAttr 0x55cb87aee3a8 <line:542:22>
| `-NonNullAttr 0x55cb87aee400 <col:63, col:80> 1 2
|-FunctionDecl 0x55cb87aee588 <line:543:1, line:545:79> line:543:12 pthread_mutexattr_setprioceiling 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x55cb87aee448 <col:46, col:67> col:67 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x55cb87aee4c8 <line:544:11, col:15> col:15 __prioceiling 'int'
| |-NoThrowAttr 0x55cb87aee638 <line:545:22>
| `-NonNullAttr 0x55cb87aee690 <col:63, col:77> 1
|-FunctionDecl 0x55cb87aee878 <line:546:1, line:548:82> line:546:12 pthread_mutexattr_getrobust 'int (const pthread_mutexattr_t *, int *)' extern
| |-ParmVarDecl 0x55cb87aee6d8 <col:41, col:68> col:68 __attr 'const pthread_mutexattr_t *'
| |-ParmVarDecl 0x55cb87aee758 <line:547:6, col:11> col:11 __robustness 'int *'
| |-NoThrowAttr 0x55cb87aee928 <line:548:22>
| `-NonNullAttr 0x55cb87aee980 <col:63, col:80> 1 2
|-FunctionDecl 0x55cb87aefb38 <line:549:1, line:551:79> line:549:12 pthread_mutexattr_setrobust 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x55cb87aee9c8 <col:41, col:62> col:62 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x55cb87aefa78 <line:550:6, col:10> col:10 __robustness 'int'
| |-NoThrowAttr 0x55cb87aefbe8 <line:551:22>
| `-NonNullAttr 0x55cb87aefc40 <col:63, col:77> 1
|-FunctionDecl 0x55cb87aeff78 <line:552:1, line:554:86> line:552:12 pthread_rwlock_init 'int (pthread_rwlock_t *restrict, const pthread_rwlockattr_t *restrict)' extern
| |-ParmVarDecl 0x55cb87aefd20 <col:33, col:62> col:62 __rwlock 'pthread_rwlock_t *restrict'
| |-ParmVarDecl 0x55cb87aefe30 <line:553:5, line:554:5> col:5 __attr 'const pthread_rwlockattr_t *restrict'
| |-NoThrowAttr 0x55cb87af0028 <col:29>
| `-NonNullAttr 0x55cb87af0080 <col:70, col:84> 1
|-FunctionDecl 0x55cb87af01f8 <line:555:1, line:556:79> line:555:12 pthread_rwlock_destroy 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x55cb87af00c8 <col:36, col:54> col:54 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x55cb87af02a0 <line:556:22>
| `-NonNullAttr 0x55cb87af02f8 <col:63, col:77> 1
|-FunctionDecl 0x55cb87af0400 <line:557:1, line:558:68> line:557:12 pthread_rwlock_rdlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x55cb87af0348 <col:35, col:53> col:53 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x55cb87af04a8 <line:558:22>
| `-NonNullAttr 0x55cb87af0500 <col:52, col:66> 1
|-FunctionDecl 0x55cb87af0600 <line:559:1, line:560:65> line:559:12 pthread_rwlock_tryrdlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x55cb87af0548 <col:38, col:56> col:56 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x55cb87af06a8 <line:560:19>
| `-NonNullAttr 0x55cb87af0700 <col:49, col:63> 1
|-FunctionDecl 0x55cb87af0938 <line:561:1, line:563:88> line:561:12 pthread_rwlock_timedrdlock 'int (pthread_rwlock_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x55cb87af0748 <col:40, col:69> col:69 __rwlock 'pthread_rwlock_t *restrict'
| |-ParmVarDecl 0x55cb87af07d8 <line:562:12, line:563:12> col:12 __abstime 'const struct timespec *restrict'
| |-NoThrowAttr 0x55cb87af09e8 <col:39>
| `-NonNullAttr 0x55cb87af0a70 <col:69, col:86> 1 2
|-FunctionDecl 0x55cb87af0b70 <line:564:1, line:565:68> line:564:12 pthread_rwlock_wrlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x55cb87af0ab8 <col:35, col:53> col:53 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x55cb87af0c18 <line:565:22>
| `-NonNullAttr 0x55cb87af0c70 <col:52, col:66> 1
|-FunctionDecl 0x55cb87af0d70 <line:566:1, line:567:68> line:566:12 pthread_rwlock_trywrlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x55cb87af0cb8 <col:38, col:56> col:56 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x55cb87af0e18 <line:567:22>
| `-NonNullAttr 0x55cb87af0e70 <col:52, col:66> 1
|-FunctionDecl 0x55cb87af1028 <line:568:1, line:570:88> line:568:12 pthread_rwlock_timedwrlock 'int (pthread_rwlock_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x55cb87af0eb8 <col:40, col:69> col:69 __rwlock 'pthread_rwlock_t *restrict'
| |-ParmVarDecl 0x55cb87af0f48 <line:569:12, line:570:12> col:12 __abstime 'const struct timespec *restrict'
| |-NoThrowAttr 0x55cb87af10d8 <col:39>
| `-NonNullAttr 0x55cb87af1130 <col:69, col:86> 1 2
|-FunctionDecl 0x55cb87af1230 <line:571:1, line:572:68> line:571:12 pthread_rwlock_unlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x55cb87af1178 <col:35, col:53> col:53 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x55cb87af12d8 <line:572:22>
| `-NonNullAttr 0x55cb87af1330 <col:52, col:66> 1
|-FunctionDecl 0x55cb87af1518 <line:573:1, line:574:79> line:573:12 pthread_rwlockattr_init 'int (pthread_rwlockattr_t *)' extern
| |-ParmVarDecl 0x55cb87af13e0 <col:37, col:59> col:59 __attr 'pthread_rwlockattr_t *'
| |-NoThrowAttr 0x55cb87af15c0 <line:574:22>
| `-NonNullAttr 0x55cb87af1618 <col:63, col:77> 1
|-FunctionDecl 0x55cb87af1720 <line:575:1, line:576:79> line:575:12 pthread_rwlockattr_destroy 'int (pthread_rwlockattr_t *)' extern
| |-ParmVarDecl 0x55cb87af1668 <col:40, col:62> col:62 __attr 'pthread_rwlockattr_t *'
| |-NoThrowAttr 0x55cb87af17c8 <line:576:22>
| `-NonNullAttr 0x55cb87af1820 <col:63, col:77> 1
|-FunctionDecl 0x55cb87af1a80 <line:577:1, line:580:82> line:577:12 pthread_rwlockattr_getpshared 'int (const pthread_rwlockattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x55cb87af1868 <col:43, line:578:19> col:19 __attr 'const pthread_rwlockattr_t *restrict'
| |-ParmVarDecl 0x55cb87af18e8 <line:579:8, col:24> col:24 __pshared 'int *restrict'
| |-NoThrowAttr 0x55cb87af1b30 <line:580:22>
| `-NonNullAttr 0x55cb87af1b88 <col:63, col:80> 1 2
|-FunctionDecl 0x55cb87af1d98 <line:581:1, line:583:79> line:581:12 pthread_rwlockattr_setpshared 'int (pthread_rwlockattr_t *, int)' extern
| |-ParmVarDecl 0x55cb87af1bd8 <col:43, col:65> col:65 __attr 'pthread_rwlockattr_t *'
| |-ParmVarDecl 0x55cb87af1c58 <line:582:8, col:12> col:12 __pshared 'int'
| |-NoThrowAttr 0x55cb87af1e48 <line:583:22>
| `-NonNullAttr 0x55cb87af1ea0 <col:63, col:77> 1
|-FunctionDecl 0x55cb87af2048 <line:584:1, line:587:82> line:584:12 pthread_rwlockattr_getkind_np 'int (const pthread_rwlockattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x55cb87af1ee8 <col:43, line:585:19> col:19 __attr 'const pthread_rwlockattr_t *restrict'
| |-ParmVarDecl 0x55cb87af1f68 <line:586:8, col:24> col:24 __pref 'int *restrict'
| |-NoThrowAttr 0x55cb87af20f8 <line:587:22>
| `-NonNullAttr 0x55cb87af2150 <col:63, col:80> 1 2
|-FunctionDecl 0x55cb87af22d8 <line:588:1, line:589:93> line:588:12 pthread_rwlockattr_setkind_np 'int (pthread_rwlockattr_t *, int)' extern
| |-ParmVarDecl 0x55cb87af2198 <col:43, col:65> col:65 __attr 'pthread_rwlockattr_t *'
| |-ParmVarDecl 0x55cb87af2218 <line:589:8, col:12> col:12 __pref 'int'
| |-NoThrowAttr 0x55cb87af2388 <col:36>
| `-NonNullAttr 0x55cb87af23e0 <col:77, col:91> 1
|-FunctionDecl 0x55cb87af2718 <line:590:1, line:592:79> line:590:12 pthread_cond_init 'int (pthread_cond_t *restrict, const pthread_condattr_t *restrict)' extern
| |-ParmVarDecl 0x55cb87af24c0 <col:31, col:58> col:58 __cond 'pthread_cond_t *restrict'
| |-ParmVarDecl 0x55cb87af25d0 <line:591:10, col:47> col:47 __cond_attr 'const pthread_condattr_t *restrict'
| |-NoThrowAttr 0x55cb87af27c8 <line:592:22>
| `-NonNullAttr 0x55cb87af2820 <col:63, col:77> 1
|-FunctionDecl 0x55cb87af2998 <line:593:1, line:594:79> line:593:12 pthread_cond_destroy 'int (pthread_cond_t *)' extern
| |-ParmVarDecl 0x55cb87af2868 <col:34, col:50> col:50 __cond 'pthread_cond_t *'
| |-NoThrowAttr 0x55cb87af2a40 <line:594:22>
| `-NonNullAttr 0x55cb87af2ac0 <col:63, col:77> 1
|-FunctionDecl 0x55cb87af2bc0 <line:595:1, line:596:68> line:595:12 pthread_cond_signal 'int (pthread_cond_t *)' extern
| |-ParmVarDecl 0x55cb87af2b08 <col:33, col:49> col:49 __cond 'pthread_cond_t *'
| |-NoThrowAttr 0x55cb87af2c68 <line:596:22>
| `-NonNullAttr 0x55cb87af2cc0 <col:52, col:66> 1
|-FunctionDecl 0x55cb87af2dc0 <line:597:1, line:598:68> line:597:12 pthread_cond_broadcast 'int (pthread_cond_t *)' extern
| |-ParmVarDecl 0x55cb87af2d08 <col:36, col:52> col:52 __cond 'pthread_cond_t *'
| |-NoThrowAttr 0x55cb87af2e68 <line:598:22>
| `-NonNullAttr 0x55cb87af2ec0 <col:52, col:66> 1
|-FunctionDecl 0x55cb87af30e8 <line:599:1, line:601:41> line:599:12 pthread_cond_wait 'int (pthread_cond_t *restrict, pthread_mutex_t *restrict)' extern
| |-ParmVarDecl 0x55cb87af2f08 <col:31, col:58> col:58 __cond 'pthread_cond_t *restrict'
| |-ParmVarDecl 0x55cb87af2f80 <line:600:10, col:38> col:38 __mutex 'pthread_mutex_t *restrict'
| `-NonNullAttr 0x55cb87af3198 <line:601:22, col:39> 1 2
|-FunctionDecl 0x55cb87af34c8 <line:602:1, line:605:44> line:602:12 pthread_cond_timedwait 'int (pthread_cond_t *restrict, pthread_mutex_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x55cb87af3218 <col:36, col:63> col:63 __cond 'pthread_cond_t *restrict'
| |-ParmVarDecl 0x55cb87af3290 <line:603:8, col:36> col:36 __mutex 'pthread_mutex_t *restrict'
| |-ParmVarDecl 0x55cb87af3320 <line:604:8, col:42> col:42 __abstime 'const struct timespec *restrict'
| `-NonNullAttr 0x55cb87af3580 <line:605:22, col:42> 1 2 3
|-FunctionDecl 0x55cb87af3798 <line:606:1, line:607:79> line:606:12 pthread_condattr_init 'int (pthread_condattr_t *)' extern
| |-ParmVarDecl 0x55cb87af3660 <col:35, col:55> col:55 __attr 'pthread_condattr_t *'
| |-NoThrowAttr 0x55cb87af3840 <line:607:22>
| `-NonNullAttr 0x55cb87af3898 <col:63, col:77> 1
|-FunctionDecl 0x55cb87af39a0 <line:608:1, line:609:79> line:608:12 pthread_condattr_destroy 'int (pthread_condattr_t *)' extern
| |-ParmVarDecl 0x55cb87af38e8 <col:38, col:58> col:58 __attr 'pthread_condattr_t *'
| |-NoThrowAttr 0x55cb87af3a48 <line:609:22>
| `-NonNullAttr 0x55cb87af3ad0 <col:63, col:77> 1
|-FunctionDecl 0x55cb87af3cf8 <line:610:1, line:613:82> line:610:12 pthread_condattr_getpshared 'int (const pthread_condattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x55cb87af3b18 <col:41, line:611:17> col:17 __attr 'const pthread_condattr_t *restrict'
| |-ParmVarDecl 0x55cb87af3b98 <line:612:6, col:22> col:22 __pshared 'int *restrict'
| |-NoThrowAttr 0x55cb87af3da8 <line:613:22>
| `-NonNullAttr 0x55cb87af3e00 <col:63, col:80> 1 2
|-FunctionDecl 0x55cb87af4008 <line:614:1, line:615:94> line:614:12 pthread_condattr_setpshared 'int (pthread_condattr_t *, int)' extern
| |-ParmVarDecl 0x55cb87af3e48 <col:41, col:61> col:61 __attr 'pthread_condattr_t *'
| |-ParmVarDecl 0x55cb87af3ec8 <line:615:6, col:10> col:10 __pshared 'int'
| |-NoThrowAttr 0x55cb87af40b8 <col:37>
| `-NonNullAttr 0x55cb87af4110 <col:78, col:92> 1
|-FunctionDecl 0x55cb87af4328 <line:616:1, line:619:82> line:616:12 pthread_condattr_getclock 'int (const pthread_condattr_t *restrict, __clockid_t *restrict)' extern
| |-ParmVarDecl 0x55cb87af4158 <col:39, line:617:22> col:22 __attr 'const pthread_condattr_t *restrict'
| |-ParmVarDecl 0x55cb87af4200 <line:618:11, col:35> col:35 __clock_id '__clockid_t *restrict'
| |-NoThrowAttr 0x55cb87af43d8 <line:619:22>
| `-NonNullAttr 0x55cb87af4430 <col:63, col:80> 1 2
|-FunctionDecl 0x55cb87af45f8 <line:620:1, line:622:79> line:620:12 pthread_condattr_setclock 'int (pthread_condattr_t *, __clockid_t)' extern
| |-ParmVarDecl 0x55cb87af4478 <col:39, col:59> col:59 __attr 'pthread_condattr_t *'
| |-ParmVarDecl 0x55cb87af44f0 <line:621:11, col:23> col:23 __clock_id '__clockid_t':'int'
| |-NoThrowAttr 0x55cb87af46a8 <line:622:22>
| `-NonNullAttr 0x55cb87af4700 <col:63, col:77> 1
|-FunctionDecl 0x55cb87af49a8 <line:623:1, line:624:79> line:623:12 pthread_spin_init 'int (pthread_spinlock_t *, int)' extern
| |-ParmVarDecl 0x55cb87af47e0 <col:31, col:51> col:51 __lock 'pthread_spinlock_t *'
| |-ParmVarDecl 0x55cb87af4860 <col:59, col:63> col:63 __pshared 'int'
| |-NoThrowAttr 0x55cb87af4a58 <line:624:22>
| `-NonNullAttr 0x55cb87af4ae0 <col:63, col:77> 1
|-FunctionDecl 0x55cb87af4c58 <line:625:1, line:626:79> line:625:12 pthread_spin_destroy 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x55cb87af4b28 <col:34, col:54> col:54 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x55cb87af4d00 <line:626:22>
| `-NonNullAttr 0x55cb87af4d58 <col:63, col:77> 1
|-FunctionDecl 0x55cb87af4e60 <line:627:1, line:628:68> line:627:12 pthread_spin_lock 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x55cb87af4da8 <col:31, col:51> col:51 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x55cb87af4f08 <line:628:22>
| `-NonNullAttr 0x55cb87af4f60 <col:52, col:66> 1
|-FunctionDecl 0x55cb87af5060 <line:629:1, line:630:68> line:629:12 pthread_spin_trylock 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x55cb87af4fa8 <col:34, col:54> col:54 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x55cb87af5108 <line:630:22>
| `-NonNullAttr 0x55cb87af5160 <col:52, col:66> 1
|-FunctionDecl 0x55cb87af5260 <line:631:1, line:632:68> line:631:12 pthread_spin_unlock 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x55cb87af51a8 <col:33, col:53> col:53 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x55cb87af5308 <line:632:22>
| `-NonNullAttr 0x55cb87af5360 <col:52, col:66> 1
|-FunctionDecl 0x55cb87af5738 <line:633:1, line:636:79> line:633:12 pthread_barrier_init 'int (pthread_barrier_t *restrict, const pthread_barrierattr_t *restrict, unsigned int)' extern
| |-ParmVarDecl 0x55cb87af5440 <col:34, col:64> col:64 __barrier 'pthread_barrier_t *restrict'
| |-ParmVarDecl 0x55cb87af5550 <line:634:6, line:635:6> col:6 __attr 'const pthread_barrierattr_t *restrict'
| |-ParmVarDecl 0x55cb87af55d0 <col:14, col:27> col:27 __count 'unsigned int'
| |-NoThrowAttr 0x55cb87af57f0 <line:636:22>
| `-NonNullAttr 0x55cb87af5848 <col:63, col:77> 1
|-FunctionDecl 0x55cb87af59c8 <line:637:1, line:638:79> line:637:12 pthread_barrier_destroy 'int (pthread_barrier_t *)' extern
| |-ParmVarDecl 0x55cb87af5898 <col:37, col:56> col:56 __barrier 'pthread_barrier_t *'
| |-NoThrowAttr 0x55cb87af5a70 <line:638:22>
| `-NonNullAttr 0x55cb87af6b00 <col:63, col:77> 1
|-FunctionDecl 0x55cb87af6c00 <line:639:1, line:640:68> line:639:12 pthread_barrier_wait 'int (pthread_barrier_t *)' extern
| |-ParmVarDecl 0x55cb87af6b48 <col:34, col:53> col:53 __barrier 'pthread_barrier_t *'
| |-NoThrowAttr 0x55cb87af6ca8 <line:640:22>
| `-NonNullAttr 0x55cb87af6d00 <col:52, col:66> 1
|-FunctionDecl 0x55cb87af6ee8 <line:641:1, line:642:79> line:641:12 pthread_barrierattr_init 'int (pthread_barrierattr_t *)' extern
| |-ParmVarDecl 0x55cb87af6db0 <col:38, col:61> col:61 __attr 'pthread_barrierattr_t *'
| |-NoThrowAttr 0x55cb87af6f90 <line:642:22>
| `-NonNullAttr 0x55cb87af6fe8 <col:63, col:77> 1
|-FunctionDecl 0x55cb87af70f0 <line:643:1, line:644:79> line:643:12 pthread_barrierattr_destroy 'int (pthread_barrierattr_t *)' extern
| |-ParmVarDecl 0x55cb87af7038 <col:41, col:64> col:64 __attr 'pthread_barrierattr_t *'
| |-NoThrowAttr 0x55cb87af7198 <line:644:22>
| `-NonNullAttr 0x55cb87af71f0 <col:63, col:77> 1
|-FunctionDecl 0x55cb87af7418 <line:645:1, line:648:82> line:645:12 pthread_barrierattr_getpshared 'int (const pthread_barrierattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x55cb87af7238 <col:44, line:646:20> col:20 __attr 'const pthread_barrierattr_t *restrict'
| |-ParmVarDecl 0x55cb87af72b8 <line:647:9, col:25> col:25 __pshared 'int *restrict'
| |-NoThrowAttr 0x55cb87af74c8 <line:648:22>
| `-NonNullAttr 0x55cb87af7520 <col:63, col:80> 1 2
|-FunctionDecl 0x55cb87af7728 <line:649:1, line:651:79> line:649:12 pthread_barrierattr_setpshared 'int (pthread_barrierattr_t *, int)' extern
| |-ParmVarDecl 0x55cb87af7568 <col:44, col:67> col:67 __attr 'pthread_barrierattr_t *'
| |-ParmVarDecl 0x55cb87af75e8 <line:650:9, col:13> col:13 __pshared 'int'
| |-NoThrowAttr 0x55cb87af77d8 <line:651:22>
| `-NonNullAttr 0x55cb87af7830 <col:63, col:77> 1
|-FunctionDecl 0x55cb87af7b98 <line:652:1, line:654:79> line:652:12 pthread_key_create 'int (pthread_key_t *, void (*)(void *))' extern
| |-ParmVarDecl 0x55cb87af7910 <col:32, col:47> col:47 __key 'pthread_key_t *'
| |-ParmVarDecl 0x55cb87af7a30 <line:653:11, col:43> col:18 __destr_function 'void (*)(void *)'
| |-NoThrowAttr 0x55cb87af7c48 <line:654:22>
| `-NonNullAttr 0x55cb87af7ca0 <col:63, col:77> 1
|-FunctionDecl 0x55cb87af7df8 <line:655:1, col:92> col:12 pthread_key_delete 'int (pthread_key_t)' extern
| |-ParmVarDecl 0x55cb87af7ce8 <col:32, col:46> col:46 __key 'pthread_key_t':'unsigned int'
| `-NoThrowAttr 0x55cb87af7ea0 <col:69>
|-FunctionDecl 0x55cb87af8018 <line:656:1, col:95> col:14 pthread_getspecific 'void *(pthread_key_t)' extern
| |-ParmVarDecl 0x55cb87af7f08 <col:35, col:49> col:49 __key 'pthread_key_t':'unsigned int'
| `-NoThrowAttr 0x55cb87af80c0 <col:72>
|-FunctionDecl 0x55cb87af82f8 <line:657:1, line:658:67> line:657:12 pthread_setspecific 'int (pthread_key_t, const void *)' extern
| |-ParmVarDecl 0x55cb87af8128 <col:33, col:47> col:47 __key 'pthread_key_t':'unsigned int'
| |-ParmVarDecl 0x55cb87af81d8 <line:658:5, col:17> col:17 __pointer 'const void *'
| `-NoThrowAttr 0x55cb87af83a8 <col:44>
|-FunctionDecl 0x55cb87af85c8 <line:659:1, line:661:79> line:659:12 pthread_getcpuclockid 'int (pthread_t, __clockid_t *)' extern
| |-ParmVarDecl 0x55cb87af8410 <col:35, col:45> col:45 __thread_id 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x55cb87af8488 <line:660:7, col:20> col:20 __clock_id '__clockid_t *'
| |-NoThrowAttr 0x55cb87af8678 <line:661:22>
| `-NonNullAttr 0x55cb87af86d0 <col:63, col:77> 2
|-FunctionDecl 0x55cb87af8b30 <line:662:1, line:664:70> line:662:12 pthread_atfork 'int (void (*)(void), void (*)(void), void (*)(void))' extern
| |-ParmVarDecl 0x55cb87af87b0 <col:28, col:51> col:35 __prepare 'void (*)(void)'
| |-ParmVarDecl 0x55cb87af88c0 <line:663:7, col:29> col:14 __parent 'void (*)(void)'
| |-ParmVarDecl 0x55cb87af89d0 <line:664:7, col:28> col:14 __child 'void (*)(void)'
| `-NoThrowAttr 0x55cb87af8be8 <col:47>
|-FunctionDecl 0x55cb87af8cf0 <line:666:1, col:20> col:8 used P0 'void *(void *)'
| `-ParmVarDecl 0x55cb87af8c58 <col:11, col:17> col:17 arg 'void *'
|-FunctionDecl 0x55cb87af8e48 <line:667:1, col:20> col:8 used P1 'void *(void *)'
| `-ParmVarDecl 0x55cb87af8db0 <col:11, col:17> col:17 arg 'void *'
|-FunctionDecl 0x55cb87af8fa0 <line:668:1, col:20> col:8 used P2 'void *(void *)'
| `-ParmVarDecl 0x55cb87af8f08 <col:11, col:17> col:17 arg 'void *'
|-FunctionDecl 0x55cb87af9068 <line:669:1, col:12> col:6 fence 'void ()'
|-FunctionDecl 0x55cb87af9128 <line:670:1, col:12> col:6 isync 'void ()'
|-FunctionDecl 0x55cb87af91e8 <line:671:1, col:14> col:6 lwfence 'void ()'
|-VarDecl 0x55cb87af92a0 <line:672:1, col:5> col:5 used __unbuffered_cnt 'int'
|-VarDecl 0x55cb87af9320 prev 0x55cb87af92a0 <line:673:1, col:24> col:5 used __unbuffered_cnt 'int' cinit
| `-IntegerLiteral 0x55cb87af9388 <col:24> 'int' 0
|-VarDecl 0x55cb87af93c0 <line:674:1, col:5> col:5 used __unbuffered_p0_EAX 'int'
|-VarDecl 0x55cb87af9440 prev 0x55cb87af93c0 <line:675:1, col:27> col:5 used __unbuffered_p0_EAX 'int' cinit
| `-IntegerLiteral 0x55cb87af94a8 <col:27> 'int' 0
|-VarDecl 0x55cb87af94e0 <line:676:1, col:5> col:5 used __unbuffered_p1_EAX 'int'
|-VarDecl 0x55cb87af9560 prev 0x55cb87af94e0 <line:677:1, col:27> col:5 used __unbuffered_p1_EAX 'int' cinit
| `-IntegerLiteral 0x55cb87af95c8 <col:27> 'int' 0
|-VarDecl 0x55cb87af95f8 <line:678:1, col:7> col:7 used main$tmp_guard0 '_Bool'
|-VarDecl 0x55cb87af9670 <line:679:1, col:7> col:7 used main$tmp_guard1 '_Bool'
|-VarDecl 0x55cb87af96f0 <line:680:1, col:5> col:5 used x 'int'
|-VarDecl 0x55cb87af9770 prev 0x55cb87af96f0 <line:681:1, col:9> col:5 used x 'int' cinit
| `-IntegerLiteral 0x55cb87af97d8 <col:9> 'int' 0
|-VarDecl 0x55cb87af9808 <line:682:1, col:7> col:7 used x$flush_delayed '_Bool'
|-VarDecl 0x55cb87af9888 <line:683:1, col:5> col:5 used x$mem_tmp 'int'
|-VarDecl 0x55cb87af9900 <line:684:1, col:7> col:7 used x$r_buff0_thd0 '_Bool'
|-VarDecl 0x55cb87af9978 <line:685:1, col:7> col:7 used x$r_buff0_thd1 '_Bool'
|-VarDecl 0x55cb87af99f0 <line:686:1, col:7> col:7 used x$r_buff0_thd2 '_Bool'
|-VarDecl 0x55cb87af9a68 <line:687:1, col:7> col:7 used x$r_buff0_thd3 '_Bool'
|-VarDecl 0x55cb87af9b00 <line:688:1, col:7> col:7 used x$r_buff1_thd0 '_Bool'
|-VarDecl 0x55cb87af9b78 <line:689:1, col:7> col:7 used x$r_buff1_thd1 '_Bool'
|-VarDecl 0x55cb87af9bf0 <line:690:1, col:7> col:7 used x$r_buff1_thd2 '_Bool'
|-VarDecl 0x55cb87af9c68 <line:691:1, col:7> col:7 used x$r_buff1_thd3 '_Bool'
|-VarDecl 0x55cb87af9ce0 <line:692:1, col:7> col:7 x$read_delayed '_Bool'
|-VarDecl 0x55cb87af9d60 <line:693:1, col:6> col:6 x$read_delayed_var 'int *'
|-VarDecl 0x55cb87af9de0 <line:694:1, col:5> col:5 used x$w_buff0 'int'
|-VarDecl 0x55cb87af9e58 <line:695:1, col:7> col:7 used x$w_buff0_used '_Bool'
|-VarDecl 0x55cb87af9ed8 <line:696:1, col:5> col:5 used x$w_buff1 'int'
|-VarDecl 0x55cb87af9f50 <line:697:1, col:7> col:7 used x$w_buff1_used '_Bool'
|-VarDecl 0x55cb87af9fd0 <line:698:1, col:5> col:5 used y 'int'
|-VarDecl 0x55cb87afa050 prev 0x55cb87af9fd0 <line:699:1, col:9> col:5 used y 'int' cinit
| `-IntegerLiteral 0x55cb87afa0b8 <col:9> 'int' 0
|-VarDecl 0x55cb87afa0e8 <line:700:1, col:7> col:7 used weak$$choice0 '_Bool'
|-VarDecl 0x55cb87afa160 <line:701:1, col:7> col:7 used weak$$choice2 '_Bool'
|-FunctionDecl 0x55cb87afa278 prev 0x55cb87af8cf0 <line:702:1, line:731:1> line:702:8 used P0 'void *(void *)'
| |-ParmVarDecl 0x55cb87afa1e0 <col:11, col:17> col:17 arg 'void *'
| `-CompoundStmt 0x55cb87afd298 <line:703:1, line:731:1>
|   |-CallExpr 0x55cb87afa388 <line:704:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x55cb87afa370 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55cb87afa320 <col:3> 'void ()' Function 0x55cb87a9ffa0 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x55cb87afa3e8 <line:705:3, col:7> 'int' '='
|   | |-DeclRefExpr 0x55cb87afa3a8 <col:3> 'int' lvalue Var 0x55cb87afa050 'y' 'int'
|   | `-IntegerLiteral 0x55cb87afa3c8 <col:7> 'int' 2
|   |-CallExpr 0x55cb87afa440 <line:706:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x55cb87afa428 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55cb87afa408 <col:3> 'void ()' Function 0x55cb87aa0060 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x55cb87afa498 <line:707:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x55cb87afa480 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55cb87afa460 <col:3> 'void ()' Function 0x55cb87a9ffa0 '__VERIFIER_atomic_begin' 'void ()'
|   |-CallExpr 0x55cb87afa4f0 <line:708:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x55cb87afa4d8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55cb87afa4b8 <col:3> 'void ()' Function 0x55cb87aa0060 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x55cb87afa548 <line:709:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x55cb87afa530 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55cb87afa510 <col:3> 'void ()' Function 0x55cb87a9ffa0 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x55cb87afa618 <line:710:3, col:42> '_Bool' '='
|   | |-DeclRefExpr 0x55cb87afa568 <col:3> '_Bool' lvalue Var 0x55cb87afa0e8 'weak$$choice0' '_Bool'
|   | `-CallExpr 0x55cb87afa5f8 <col:19, col:42> '_Bool'
|   |   `-ImplicitCastExpr 0x55cb87afa5e0 <col:19> '_Bool (*)(void)' <FunctionToPointerDecay>
|   |     `-DeclRefExpr 0x55cb87afa588 <col:19> '_Bool (void)' Function 0x55cb87a9f770 '__VERIFIER_nondet_bool' '_Bool (void)'
|   |-BinaryOperator 0x55cb87afa6b0 <line:711:3, col:42> '_Bool' '='
|   | |-DeclRefExpr 0x55cb87afa638 <col:3> '_Bool' lvalue Var 0x55cb87afa160 'weak$$choice2' '_Bool'
|   | `-CallExpr 0x55cb87afa690 <col:19, col:42> '_Bool'
|   |   `-ImplicitCastExpr 0x55cb87afa678 <col:19> '_Bool (*)(void)' <FunctionToPointerDecay>
|   |     `-DeclRefExpr 0x55cb87afa658 <col:19> '_Bool (void)' Function 0x55cb87a9f770 '__VERIFIER_nondet_bool' '_Bool (void)'
|   |-BinaryOperator 0x55cb87afa728 <line:712:3, col:21> '_Bool' '='
|   | |-DeclRefExpr 0x55cb87afa6d0 <col:3> '_Bool' lvalue Var 0x55cb87af9808 'x$flush_delayed' '_Bool'
|   | `-ImplicitCastExpr 0x55cb87afa710 <col:21> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x55cb87afa6f0 <col:21> '_Bool' lvalue Var 0x55cb87afa160 'weak$$choice2' '_Bool'
|   |-BinaryOperator 0x55cb87afa7a0 <line:713:3, col:15> 'int' '='
|   | |-DeclRefExpr 0x55cb87afa748 <col:3> 'int' lvalue Var 0x55cb87af9888 'x$mem_tmp' 'int'
|   | `-ImplicitCastExpr 0x55cb87afa788 <col:15> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x55cb87afa768 <col:15> 'int' lvalue Var 0x55cb87af9770 'x' 'int'
|   |-BinaryOperator 0x55cb87afabf8 <line:714:3, col:162> 'int' '='
|   | |-DeclRefExpr 0x55cb87afa7c0 <col:3> 'int' lvalue Var 0x55cb87af9770 'x' 'int'
|   | `-ConditionalOperator 0x55cb87afabc8 <col:7, col:162> 'int'
|   |   |-BinaryOperator 0x55cb87afa9d0 <col:7, col:84> 'int' '||'
|   |   | |-BinaryOperator 0x55cb87afa8f0 <col:7, col:46> 'int' '||'
|   |   | | |-UnaryOperator 0x55cb87afa818 <col:7, col:8> 'int' prefix '!' cannot overflow
|   |   | | | `-ImplicitCastExpr 0x55cb87afa800 <col:8> '_Bool' <LValueToRValue>
|   |   | | |   `-DeclRefExpr 0x55cb87afa7e0 <col:8> '_Bool' lvalue Var 0x55cb87af9e58 'x$w_buff0_used' '_Bool'
|   |   | | `-BinaryOperator 0x55cb87afa8d0 <col:26, col:46> 'int' '&&'
|   |   | |   |-UnaryOperator 0x55cb87afa868 <col:26, col:27> 'int' prefix '!' cannot overflow
|   |   | |   | `-ImplicitCastExpr 0x55cb87afa850 <col:27> '_Bool' <LValueToRValue>
|   |   | |   |   `-DeclRefExpr 0x55cb87afa830 <col:27> '_Bool' lvalue Var 0x55cb87af9978 'x$r_buff0_thd1' '_Bool'
|   |   | |   `-UnaryOperator 0x55cb87afa8b8 <col:45, col:46> 'int' prefix '!' cannot overflow
|   |   | |     `-ImplicitCastExpr 0x55cb87afa8a0 <col:46> '_Bool' <LValueToRValue>
|   |   | |       `-DeclRefExpr 0x55cb87afa880 <col:46> '_Bool' lvalue Var 0x55cb87af9f50 'x$w_buff1_used' '_Bool'
|   |   | `-BinaryOperator 0x55cb87afa9b0 <col:64, col:84> 'int' '&&'
|   |   |   |-UnaryOperator 0x55cb87afa948 <col:64, col:65> 'int' prefix '!' cannot overflow
|   |   |   | `-ImplicitCastExpr 0x55cb87afa930 <col:65> '_Bool' <LValueToRValue>
|   |   |   |   `-DeclRefExpr 0x55cb87afa910 <col:65> '_Bool' lvalue Var 0x55cb87af9978 'x$r_buff0_thd1' '_Bool'
|   |   |   `-UnaryOperator 0x55cb87afa998 <col:83, col:84> 'int' prefix '!' cannot overflow
|   |   |     `-ImplicitCastExpr 0x55cb87afa980 <col:84> '_Bool' <LValueToRValue>
|   |   |       `-DeclRefExpr 0x55cb87afa960 <col:84> '_Bool' lvalue Var 0x55cb87af9b78 'x$r_buff1_thd1' '_Bool'
|   |   |-ImplicitCastExpr 0x55cb87afabb0 <col:101> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x55cb87afa9f0 <col:101> 'int' lvalue Var 0x55cb87af9770 'x' 'int'
|   |   `-ParenExpr 0x55cb87afab90 <col:105, col:162> 'int'
|   |     `-ConditionalOperator 0x55cb87afab60 <col:106, col:153> 'int'
|   |       |-BinaryOperator 0x55cb87afaab0 <col:106, col:124> 'int' '&&'
|   |       | |-ImplicitCastExpr 0x55cb87afaa68 <col:106> 'int' <IntegralCast>
|   |       | | `-ImplicitCastExpr 0x55cb87afaa50 <col:106> '_Bool' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x55cb87afaa10 <col:106> '_Bool' lvalue Var 0x55cb87af9e58 'x$w_buff0_used' '_Bool'
|   |       | `-ImplicitCastExpr 0x55cb87afaa98 <col:124> 'int' <IntegralCast>
|   |       |   `-ImplicitCastExpr 0x55cb87afaa80 <col:124> '_Bool' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x55cb87afaa30 <col:124> '_Bool' lvalue Var 0x55cb87af9978 'x$r_buff0_thd1' '_Bool'
|   |       |-ImplicitCastExpr 0x55cb87afab30 <col:141> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x55cb87afaad0 <col:141> 'int' lvalue Var 0x55cb87af9de0 'x$w_buff0' 'int'
|   |       `-ImplicitCastExpr 0x55cb87afab48 <col:153> 'int' <LValueToRValue>
|   |         `-DeclRefExpr 0x55cb87afab10 <col:153> 'int' lvalue Var 0x55cb87af9ed8 'x$w_buff1' 'int'
|   |-BinaryOperator 0x55cb87afb108 <line:715:3, col:208> 'int' '='
|   | |-DeclRefExpr 0x55cb87afac18 <col:3> 'int' lvalue Var 0x55cb87af9de0 'x$w_buff0' 'int'
|   | `-ConditionalOperator 0x55cb87afb0d8 <col:15, col:208> 'int'
|   |   |-ImplicitCastExpr 0x55cb87afb0a8 <col:15> 'int' <IntegralCast>
|   |   | `-ImplicitCastExpr 0x55cb87afb090 <col:15> '_Bool' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x55cb87afac38 <col:15> '_Bool' lvalue Var 0x55cb87afa160 'weak$$choice2' '_Bool'
|   |   |-ImplicitCastExpr 0x55cb87afb0c0 <col:31> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x55cb87afac58 <col:31> 'int' lvalue Var 0x55cb87af9de0 'x$w_buff0' 'int'
|   |   `-ParenExpr 0x55cb87afb070 <col:43, col:208> 'int'
|   |     `-ConditionalOperator 0x55cb87afb040 <col:44, col:207> 'int'
|   |       |-BinaryOperator 0x55cb87afae68 <col:44, col:121> 'int' '||'
|   |       | |-BinaryOperator 0x55cb87afad88 <col:44, col:83> 'int' '||'
|   |       | | |-UnaryOperator 0x55cb87afacb0 <col:44, col:45> 'int' prefix '!' cannot overflow
|   |       | | | `-ImplicitCastExpr 0x55cb87afac98 <col:45> '_Bool' <LValueToRValue>
|   |       | | |   `-DeclRefExpr 0x55cb87afac78 <col:45> '_Bool' lvalue Var 0x55cb87af9e58 'x$w_buff0_used' '_Bool'
|   |       | | `-BinaryOperator 0x55cb87afad68 <col:63, col:83> 'int' '&&'
|   |       | |   |-UnaryOperator 0x55cb87afad00 <col:63, col:64> 'int' prefix '!' cannot overflow
|   |       | |   | `-ImplicitCastExpr 0x55cb87aface8 <col:64> '_Bool' <LValueToRValue>
|   |       | |   |   `-DeclRefExpr 0x55cb87afacc8 <col:64> '_Bool' lvalue Var 0x55cb87af9978 'x$r_buff0_thd1' '_Bool'
|   |       | |   `-UnaryOperator 0x55cb87afad50 <col:82, col:83> 'int' prefix '!' cannot overflow
|   |       | |     `-ImplicitCastExpr 0x55cb87afad38 <col:83> '_Bool' <LValueToRValue>
|   |       | |       `-DeclRefExpr 0x55cb87afad18 <col:83> '_Bool' lvalue Var 0x55cb87af9f50 'x$w_buff1_used' '_Bool'
|   |       | `-BinaryOperator 0x55cb87afae48 <col:101, col:121> 'int' '&&'
|   |       |   |-UnaryOperator 0x55cb87afade0 <col:101, col:102> 'int' prefix '!' cannot overflow
|   |       |   | `-ImplicitCastExpr 0x55cb87afadc8 <col:102> '_Bool' <LValueToRValue>
|   |       |   |   `-DeclRefExpr 0x55cb87afada8 <col:102> '_Bool' lvalue Var 0x55cb87af9978 'x$r_buff0_thd1' '_Bool'
|   |       |   `-UnaryOperator 0x55cb87afae30 <col:120, col:121> 'int' prefix '!' cannot overflow
|   |       |     `-ImplicitCastExpr 0x55cb87afae18 <col:121> '_Bool' <LValueToRValue>
|   |       |       `-DeclRefExpr 0x55cb87afadf8 <col:121> '_Bool' lvalue Var 0x55cb87af9b78 'x$r_buff1_thd1' '_Bool'
|   |       |-ImplicitCastExpr 0x55cb87afb028 <col:138> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x55cb87afae88 <col:138> 'int' lvalue Var 0x55cb87af9de0 'x$w_buff0' 'int'
|   |       `-ParenExpr 0x55cb87afb008 <col:150, col:207> 'int'
|   |         `-ConditionalOperator 0x55cb87afafd8 <col:151, col:198> 'int'
|   |           |-BinaryOperator 0x55cb87afaf48 <col:151, col:169> 'int' '&&'
|   |           | |-ImplicitCastExpr 0x55cb87afaf00 <col:151> 'int' <IntegralCast>
|   |           | | `-ImplicitCastExpr 0x55cb87afaee8 <col:151> '_Bool' <LValueToRValue>
|   |           | |   `-DeclRefExpr 0x55cb87afaea8 <col:151> '_Bool' lvalue Var 0x55cb87af9e58 'x$w_buff0_used' '_Bool'
|   |           | `-ImplicitCastExpr 0x55cb87afaf30 <col:169> 'int' <IntegralCast>
|   |           |   `-ImplicitCastExpr 0x55cb87afaf18 <col:169> '_Bool' <LValueToRValue>
|   |           |     `-DeclRefExpr 0x55cb87afaec8 <col:169> '_Bool' lvalue Var 0x55cb87af9978 'x$r_buff0_thd1' '_Bool'
|   |           |-ImplicitCastExpr 0x55cb87afafa8 <col:186> 'int' <LValueToRValue>
|   |           | `-DeclRefExpr 0x55cb87afaf68 <col:186> 'int' lvalue Var 0x55cb87af9de0 'x$w_buff0' 'int'
|   |           `-ImplicitCastExpr 0x55cb87afafc0 <col:198> 'int' <LValueToRValue>
|   |             `-DeclRefExpr 0x55cb87afaf88 <col:198> 'int' lvalue Var 0x55cb87af9de0 'x$w_buff0' 'int'
|   |-BinaryOperator 0x55cb87afb618 <line:716:3, col:208> 'int' '='
|   | |-DeclRefExpr 0x55cb87afb128 <col:3> 'int' lvalue Var 0x55cb87af9ed8 'x$w_buff1' 'int'
|   | `-ConditionalOperator 0x55cb87afb5e8 <col:15, col:208> 'int'
|   |   |-ImplicitCastExpr 0x55cb87afb5b8 <col:15> 'int' <IntegralCast>
|   |   | `-ImplicitCastExpr 0x55cb87afb5a0 <col:15> '_Bool' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x55cb87afb148 <col:15> '_Bool' lvalue Var 0x55cb87afa160 'weak$$choice2' '_Bool'
|   |   |-ImplicitCastExpr 0x55cb87afb5d0 <col:31> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x55cb87afb168 <col:31> 'int' lvalue Var 0x55cb87af9ed8 'x$w_buff1' 'int'
|   |   `-ParenExpr 0x55cb87afb580 <col:43, col:208> 'int'
|   |     `-ConditionalOperator 0x55cb87afb550 <col:44, col:207> 'int'
|   |       |-BinaryOperator 0x55cb87afb378 <col:44, col:121> 'int' '||'
|   |       | |-BinaryOperator 0x55cb87afb298 <col:44, col:83> 'int' '||'
|   |       | | |-UnaryOperator 0x55cb87afb1c0 <col:44, col:45> 'int' prefix '!' cannot overflow
|   |       | | | `-ImplicitCastExpr 0x55cb87afb1a8 <col:45> '_Bool' <LValueToRValue>
|   |       | | |   `-DeclRefExpr 0x55cb87afb188 <col:45> '_Bool' lvalue Var 0x55cb87af9e58 'x$w_buff0_used' '_Bool'
|   |       | | `-BinaryOperator 0x55cb87afb278 <col:63, col:83> 'int' '&&'
|   |       | |   |-UnaryOperator 0x55cb87afb210 <col:63, col:64> 'int' prefix '!' cannot overflow
|   |       | |   | `-ImplicitCastExpr 0x55cb87afb1f8 <col:64> '_Bool' <LValueToRValue>
|   |       | |   |   `-DeclRefExpr 0x55cb87afb1d8 <col:64> '_Bool' lvalue Var 0x55cb87af9978 'x$r_buff0_thd1' '_Bool'
|   |       | |   `-UnaryOperator 0x55cb87afb260 <col:82, col:83> 'int' prefix '!' cannot overflow
|   |       | |     `-ImplicitCastExpr 0x55cb87afb248 <col:83> '_Bool' <LValueToRValue>
|   |       | |       `-DeclRefExpr 0x55cb87afb228 <col:83> '_Bool' lvalue Var 0x55cb87af9f50 'x$w_buff1_used' '_Bool'
|   |       | `-BinaryOperator 0x55cb87afb358 <col:101, col:121> 'int' '&&'
|   |       |   |-UnaryOperator 0x55cb87afb2f0 <col:101, col:102> 'int' prefix '!' cannot overflow
|   |       |   | `-ImplicitCastExpr 0x55cb87afb2d8 <col:102> '_Bool' <LValueToRValue>
|   |       |   |   `-DeclRefExpr 0x55cb87afb2b8 <col:102> '_Bool' lvalue Var 0x55cb87af9978 'x$r_buff0_thd1' '_Bool'
|   |       |   `-UnaryOperator 0x55cb87afb340 <col:120, col:121> 'int' prefix '!' cannot overflow
|   |       |     `-ImplicitCastExpr 0x55cb87afb328 <col:121> '_Bool' <LValueToRValue>
|   |       |       `-DeclRefExpr 0x55cb87afb308 <col:121> '_Bool' lvalue Var 0x55cb87af9b78 'x$r_buff1_thd1' '_Bool'
|   |       |-ImplicitCastExpr 0x55cb87afb538 <col:138> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x55cb87afb398 <col:138> 'int' lvalue Var 0x55cb87af9ed8 'x$w_buff1' 'int'
|   |       `-ParenExpr 0x55cb87afb518 <col:150, col:207> 'int'
|   |         `-ConditionalOperator 0x55cb87afb4e8 <col:151, col:198> 'int'
|   |           |-BinaryOperator 0x55cb87afb458 <col:151, col:169> 'int' '&&'
|   |           | |-ImplicitCastExpr 0x55cb87afb410 <col:151> 'int' <IntegralCast>
|   |           | | `-ImplicitCastExpr 0x55cb87afb3f8 <col:151> '_Bool' <LValueToRValue>
|   |           | |   `-DeclRefExpr 0x55cb87afb3b8 <col:151> '_Bool' lvalue Var 0x55cb87af9e58 'x$w_buff0_used' '_Bool'
|   |           | `-ImplicitCastExpr 0x55cb87afb440 <col:169> 'int' <IntegralCast>
|   |           |   `-ImplicitCastExpr 0x55cb87afb428 <col:169> '_Bool' <LValueToRValue>
|   |           |     `-DeclRefExpr 0x55cb87afb3d8 <col:169> '_Bool' lvalue Var 0x55cb87af9978 'x$r_buff0_thd1' '_Bool'
|   |           |-ImplicitCastExpr 0x55cb87afb4b8 <col:186> 'int' <LValueToRValue>
|   |           | `-DeclRefExpr 0x55cb87afb478 <col:186> 'int' lvalue Var 0x55cb87af9ed8 'x$w_buff1' 'int'
|   |           `-ImplicitCastExpr 0x55cb87afb4d0 <col:198> 'int' <LValueToRValue>
|   |             `-DeclRefExpr 0x55cb87afb498 <col:198> 'int' lvalue Var 0x55cb87af9ed8 'x$w_buff1' 'int'
|   |-BinaryOperator 0x55cb87afbbe8 <line:717:3, col:227> '_Bool' '='
|   | |-DeclRefExpr 0x55cb87afb638 <col:3> '_Bool' lvalue Var 0x55cb87af9e58 'x$w_buff0_used' '_Bool'
|   | `-ImplicitCastExpr 0x55cb87afbbd0 <col:20, col:227> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55cb87afbba0 <col:20, col:227> 'int'
|   |     |-ImplicitCastExpr 0x55cb87afbb58 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x55cb87afbb40 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x55cb87afb658 <col:20> '_Bool' lvalue Var 0x55cb87afa160 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x55cb87afbb88 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x55cb87afbb70 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x55cb87afb678 <col:36> '_Bool' lvalue Var 0x55cb87af9e58 'x$w_buff0_used' '_Bool'
|   |     `-ParenExpr 0x55cb87afbb20 <col:53, col:227> 'int'
|   |       `-ConditionalOperator 0x55cb87afbac8 <col:54, col:226> 'int'
|   |         |-BinaryOperator 0x55cb87afb888 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x55cb87afb7a8 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x55cb87afb6d0 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x55cb87afb6b8 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x55cb87afb698 <col:55> '_Bool' lvalue Var 0x55cb87af9e58 'x$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x55cb87afb788 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x55cb87afb720 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x55cb87afb708 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x55cb87afb6e8 <col:74> '_Bool' lvalue Var 0x55cb87af9978 'x$r_buff0_thd1' '_Bool'
|   |         | |   `-UnaryOperator 0x55cb87afb770 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x55cb87afb758 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x55cb87afb738 <col:93> '_Bool' lvalue Var 0x55cb87af9f50 'x$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x55cb87afb868 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x55cb87afb800 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x55cb87afb7e8 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x55cb87afb7c8 <col:112> '_Bool' lvalue Var 0x55cb87af9978 'x$r_buff0_thd1' '_Bool'
|   |         |   `-UnaryOperator 0x55cb87afb850 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x55cb87afb838 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x55cb87afb818 <col:131> '_Bool' lvalue Var 0x55cb87af9b78 'x$r_buff1_thd1' '_Bool'
|   |         |-ImplicitCastExpr 0x55cb87afbab0 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x55cb87afba98 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x55cb87afb8a8 <col:148> '_Bool' lvalue Var 0x55cb87af9e58 'x$w_buff0_used' '_Bool'
|   |         `-ParenExpr 0x55cb87afba78 <col:165, col:226> 'int'
|   |           `-ConditionalOperator 0x55cb87afba48 <col:166, col:212> 'int'
|   |             |-BinaryOperator 0x55cb87afb968 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x55cb87afb920 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x55cb87afb908 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x55cb87afb8c8 <col:166> '_Bool' lvalue Var 0x55cb87af9e58 'x$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x55cb87afb950 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x55cb87afb938 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x55cb87afb8e8 <col:184> '_Bool' lvalue Var 0x55cb87af9978 'x$r_buff0_thd1' '_Bool'
|   |             |-ImplicitCastExpr 0x55cb87afba00 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x55cb87afb9b8 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x55cb87afb988 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x55cb87afba30 <col:212> 'int' <IntegralCast>
|   |               `-ImplicitCastExpr 0x55cb87afba18 <col:212> '_Bool' <LValueToRValue>
|   |                 `-DeclRefExpr 0x55cb87afb9e0 <col:212> '_Bool' lvalue Var 0x55cb87af9e58 'x$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x55cb87afc1b0 <line:718:3, col:221> '_Bool' '='
|   | |-DeclRefExpr 0x55cb87afbc08 <col:3> '_Bool' lvalue Var 0x55cb87af9f50 'x$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x55cb87afc198 <col:20, col:221> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55cb87afc168 <col:20, col:221> 'int'
|   |     |-ImplicitCastExpr 0x55cb87afc120 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x55cb87afc108 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x55cb87afbc28 <col:20> '_Bool' lvalue Var 0x55cb87afa160 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x55cb87afc150 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x55cb87afc138 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x55cb87afbc48 <col:36> '_Bool' lvalue Var 0x55cb87af9f50 'x$w_buff1_used' '_Bool'
|   |     `-ParenExpr 0x55cb87afc0e8 <col:53, col:221> 'int'
|   |       `-ConditionalOperator 0x55cb87afc0b8 <col:54, col:220> 'int'
|   |         |-BinaryOperator 0x55cb87afbe58 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x55cb87afbd78 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x55cb87afbca0 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x55cb87afbc88 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x55cb87afbc68 <col:55> '_Bool' lvalue Var 0x55cb87af9e58 'x$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x55cb87afbd58 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x55cb87afbcf0 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x55cb87afbcd8 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x55cb87afbcb8 <col:74> '_Bool' lvalue Var 0x55cb87af9978 'x$r_buff0_thd1' '_Bool'
|   |         | |   `-UnaryOperator 0x55cb87afbd40 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x55cb87afbd28 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x55cb87afbd08 <col:93> '_Bool' lvalue Var 0x55cb87af9f50 'x$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x55cb87afbe38 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x55cb87afbdd0 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x55cb87afbdb8 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x55cb87afbd98 <col:112> '_Bool' lvalue Var 0x55cb87af9978 'x$r_buff0_thd1' '_Bool'
|   |         |   `-UnaryOperator 0x55cb87afbe20 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x55cb87afbe08 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x55cb87afbde8 <col:131> '_Bool' lvalue Var 0x55cb87af9b78 'x$r_buff1_thd1' '_Bool'
|   |         |-ImplicitCastExpr 0x55cb87afc0a0 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x55cb87afc088 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x55cb87afbe78 <col:148> '_Bool' lvalue Var 0x55cb87af9f50 'x$w_buff1_used' '_Bool'
|   |         `-ParenExpr 0x55cb87afc068 <col:165, col:220> 'int'
|   |           `-ConditionalOperator 0x55cb87afc038 <col:166, col:219> 'int'
|   |             |-BinaryOperator 0x55cb87afbf38 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x55cb87afbef0 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x55cb87afbed8 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x55cb87afbe98 <col:166> '_Bool' lvalue Var 0x55cb87af9e58 'x$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x55cb87afbf20 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x55cb87afbf08 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x55cb87afbeb8 <col:184> '_Bool' lvalue Var 0x55cb87af9978 'x$r_buff0_thd1' '_Bool'
|   |             |-ImplicitCastExpr 0x55cb87afc008 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x55cb87afbf88 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x55cb87afbf58 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x55cb87afc020 <col:212, col:219> 'int' <IntegralCast>
|   |               `-CStyleCastExpr 0x55cb87afbfe0 <col:212, col:219> '_Bool' <IntegralToBoolean>
|   |                 `-IntegerLiteral 0x55cb87afbfb0 <col:219> 'int' 0
|   |-BinaryOperator 0x55cb87afc758 <line:719:3, col:227> '_Bool' '='
|   | |-DeclRefExpr 0x55cb87afc1d0 <col:3> '_Bool' lvalue Var 0x55cb87af9978 'x$r_buff0_thd1' '_Bool'
|   | `-ImplicitCastExpr 0x55cb87afc740 <col:20, col:227> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55cb87afc710 <col:20, col:227> 'int'
|   |     |-ImplicitCastExpr 0x55cb87afc6c8 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x55cb87afc6b0 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x55cb87afc1f0 <col:20> '_Bool' lvalue Var 0x55cb87afa160 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x55cb87afc6f8 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x55cb87afc6e0 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x55cb87afc210 <col:36> '_Bool' lvalue Var 0x55cb87af9978 'x$r_buff0_thd1' '_Bool'
|   |     `-ParenExpr 0x55cb87afc690 <col:53, col:227> 'int'
|   |       `-ConditionalOperator 0x55cb87afc660 <col:54, col:226> 'int'
|   |         |-BinaryOperator 0x55cb87afc420 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x55cb87afc340 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x55cb87afc268 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x55cb87afc250 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x55cb87afc230 <col:55> '_Bool' lvalue Var 0x55cb87af9e58 'x$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x55cb87afc320 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x55cb87afc2b8 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x55cb87afc2a0 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x55cb87afc280 <col:74> '_Bool' lvalue Var 0x55cb87af9978 'x$r_buff0_thd1' '_Bool'
|   |         | |   `-UnaryOperator 0x55cb87afc308 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x55cb87afc2f0 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x55cb87afc2d0 <col:93> '_Bool' lvalue Var 0x55cb87af9f50 'x$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x55cb87afc400 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x55cb87afc398 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x55cb87afc380 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x55cb87afc360 <col:112> '_Bool' lvalue Var 0x55cb87af9978 'x$r_buff0_thd1' '_Bool'
|   |         |   `-UnaryOperator 0x55cb87afc3e8 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x55cb87afc3d0 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x55cb87afc3b0 <col:131> '_Bool' lvalue Var 0x55cb87af9b78 'x$r_buff1_thd1' '_Bool'
|   |         |-ImplicitCastExpr 0x55cb87afc648 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x55cb87afc630 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x55cb87afc440 <col:148> '_Bool' lvalue Var 0x55cb87af9978 'x$r_buff0_thd1' '_Bool'
|   |         `-ParenExpr 0x55cb87afc610 <col:165, col:226> 'int'
|   |           `-ConditionalOperator 0x55cb87afc5e0 <col:166, col:212> 'int'
|   |             |-BinaryOperator 0x55cb87afc500 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x55cb87afc4b8 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x55cb87afc4a0 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x55cb87afc460 <col:166> '_Bool' lvalue Var 0x55cb87af9e58 'x$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x55cb87afc4e8 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x55cb87afc4d0 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x55cb87afc480 <col:184> '_Bool' lvalue Var 0x55cb87af9978 'x$r_buff0_thd1' '_Bool'
|   |             |-ImplicitCastExpr 0x55cb87afc598 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x55cb87afc550 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x55cb87afc520 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x55cb87afc5c8 <col:212> 'int' <IntegralCast>
|   |               `-ImplicitCastExpr 0x55cb87afc5b0 <col:212> '_Bool' <LValueToRValue>
|   |                 `-DeclRefExpr 0x55cb87afc578 <col:212> '_Bool' lvalue Var 0x55cb87af9978 'x$r_buff0_thd1' '_Bool'
|   |-BinaryOperator 0x55cb87afcd30 <line:720:3, col:221> '_Bool' '='
|   | |-DeclRefExpr 0x55cb87afc778 <col:3> '_Bool' lvalue Var 0x55cb87af9b78 'x$r_buff1_thd1' '_Bool'
|   | `-ImplicitCastExpr 0x55cb87afcd18 <col:20, col:221> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55cb87afcce8 <col:20, col:221> 'int'
|   |     |-ImplicitCastExpr 0x55cb87afcca0 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x55cb87afcc88 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x55cb87afc798 <col:20> '_Bool' lvalue Var 0x55cb87afa160 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x55cb87afccd0 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x55cb87afccb8 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x55cb87afc7b8 <col:36> '_Bool' lvalue Var 0x55cb87af9b78 'x$r_buff1_thd1' '_Bool'
|   |     `-ParenExpr 0x55cb87afcc68 <col:53, col:221> 'int'
|   |       `-ConditionalOperator 0x55cb87afcc38 <col:54, col:220> 'int'
|   |         |-BinaryOperator 0x55cb87afc9c8 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x55cb87afc8e8 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x55cb87afc810 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x55cb87afc7f8 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x55cb87afc7d8 <col:55> '_Bool' lvalue Var 0x55cb87af9e58 'x$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x55cb87afc8c8 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x55cb87afc860 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x55cb87afc848 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x55cb87afc828 <col:74> '_Bool' lvalue Var 0x55cb87af9978 'x$r_buff0_thd1' '_Bool'
|   |         | |   `-UnaryOperator 0x55cb87afc8b0 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x55cb87afc898 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x55cb87afc878 <col:93> '_Bool' lvalue Var 0x55cb87af9f50 'x$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x55cb87afc9a8 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x55cb87afc940 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x55cb87afc928 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x55cb87afc908 <col:112> '_Bool' lvalue Var 0x55cb87af9978 'x$r_buff0_thd1' '_Bool'
|   |         |   `-UnaryOperator 0x55cb87afc990 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x55cb87afc978 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x55cb87afc958 <col:131> '_Bool' lvalue Var 0x55cb87af9b78 'x$r_buff1_thd1' '_Bool'
|   |         |-ImplicitCastExpr 0x55cb87afcc20 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x55cb87afcc08 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x55cb87afc9e8 <col:148> '_Bool' lvalue Var 0x55cb87af9b78 'x$r_buff1_thd1' '_Bool'
|   |         `-ParenExpr 0x55cb87afcbe8 <col:165, col:220> 'int'
|   |           `-ConditionalOperator 0x55cb87afcbb8 <col:166, col:219> 'int'
|   |             |-BinaryOperator 0x55cb87afcaa8 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x55cb87afca60 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x55cb87afca48 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x55cb87afca08 <col:166> '_Bool' lvalue Var 0x55cb87af9e58 'x$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x55cb87afca90 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x55cb87afca78 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x55cb87afca28 <col:184> '_Bool' lvalue Var 0x55cb87af9978 'x$r_buff0_thd1' '_Bool'
|   |             |-ImplicitCastExpr 0x55cb87afcb88 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x55cb87afcaf8 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x55cb87afcac8 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x55cb87afcba0 <col:212, col:219> 'int' <IntegralCast>
|   |               `-CStyleCastExpr 0x55cb87afcb60 <col:212, col:219> '_Bool' <IntegralToBoolean>
|   |                 `-IntegerLiteral 0x55cb87afcb30 <col:219> 'int' 0
|   |-BinaryOperator 0x55cb87afcda8 <line:721:3, col:25> 'int' '='
|   | |-DeclRefExpr 0x55cb87afcd50 <col:3> 'int' lvalue Var 0x55cb87af9440 '__unbuffered_p0_EAX' 'int'
|   | `-ImplicitCastExpr 0x55cb87afcd90 <col:25> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x55cb87afcd70 <col:25> 'int' lvalue Var 0x55cb87af9770 'x' 'int'
|   |-BinaryOperator 0x55cb87afced8 <line:722:3, col:37> 'int' '='
|   | |-DeclRefExpr 0x55cb87afcdc8 <col:3> 'int' lvalue Var 0x55cb87af9770 'x' 'int'
|   | `-ConditionalOperator 0x55cb87afcea8 <col:7, col:37> 'int'
|   |   |-ImplicitCastExpr 0x55cb87afce60 <col:7> 'int' <IntegralCast>
|   |   | `-ImplicitCastExpr 0x55cb87afce48 <col:7> '_Bool' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x55cb87afcde8 <col:7> '_Bool' lvalue Var 0x55cb87af9808 'x$flush_delayed' '_Bool'
|   |   |-ImplicitCastExpr 0x55cb87afce78 <col:25> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x55cb87afce08 <col:25> 'int' lvalue Var 0x55cb87af9888 'x$mem_tmp' 'int'
|   |   `-ImplicitCastExpr 0x55cb87afce90 <col:37> 'int' <LValueToRValue>
|   |     `-DeclRefExpr 0x55cb87afce28 <col:37> 'int' lvalue Var 0x55cb87af9770 'x' 'int'
|   |-BinaryOperator 0x55cb87afcf70 <line:723:3, col:28> '_Bool' '='
|   | |-DeclRefExpr 0x55cb87afcef8 <col:3> '_Bool' lvalue Var 0x55cb87af9808 'x$flush_delayed' '_Bool'
|   | `-CStyleCastExpr 0x55cb87afcf48 <col:21, col:28> '_Bool' <IntegralToBoolean>
|   |   `-IntegerLiteral 0x55cb87afcf18 <col:28> 'int' 0
|   |-CallExpr 0x55cb87afcfc8 <line:724:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x55cb87afcfb0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55cb87afcf90 <col:3> 'void ()' Function 0x55cb87aa0060 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x55cb87afd020 <line:725:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x55cb87afd008 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55cb87afcfe8 <col:3> 'void ()' Function 0x55cb87a9ffa0 '__VERIFIER_atomic_begin' 'void ()'
|   |-CallExpr 0x55cb87afd078 <line:726:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x55cb87afd060 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55cb87afd040 <col:3> 'void ()' Function 0x55cb87aa0060 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x55cb87afd0d0 <line:727:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x55cb87afd0b8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55cb87afd098 <col:3> 'void ()' Function 0x55cb87a9ffa0 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x55cb87afd188 <line:728:3, col:41> 'int' '='
|   | |-DeclRefExpr 0x55cb87afd0f0 <col:3> 'int' lvalue Var 0x55cb87af9320 '__unbuffered_cnt' 'int'
|   | `-BinaryOperator 0x55cb87afd168 <col:22, col:41> 'int' '+'
|   |   |-ImplicitCastExpr 0x55cb87afd150 <col:22> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x55cb87afd110 <col:22> 'int' lvalue Var 0x55cb87af9320 '__unbuffered_cnt' 'int'
|   |   `-IntegerLiteral 0x55cb87afd130 <col:41> 'int' 1
|   |-CallExpr 0x55cb87afd1e0 <line:729:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x55cb87afd1c8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55cb87afd1a8 <col:3> 'void ()' Function 0x55cb87aa0060 '__VERIFIER_atomic_end' 'void ()'
|   `-ReturnStmt 0x55cb87afd288 <line:730:3, col:36>
|     `-CallExpr 0x55cb87afd268 <col:10, col:36> 'void *'
|       `-ImplicitCastExpr 0x55cb87afd250 <col:10> 'void *(*)(void)' <FunctionToPointerDecay>
|         `-DeclRefExpr 0x55cb87afd200 <col:10> 'void *(void)' Function 0x55cb87a9fab8 '__VERIFIER_nondet_pointer' 'void *(void)'
|-FunctionDecl 0x55cb87afd430 prev 0x55cb87af8e48 <line:732:1, line:771:1> line:732:8 used P1 'void *(void *)'
| |-ParmVarDecl 0x55cb87afd398 <col:11, col:17> col:17 arg 'void *'
| `-CompoundStmt 0x55cb87b01d70 <line:733:1, line:771:1>
|   |-CallExpr 0x55cb87afd510 <line:734:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x55cb87afd4f8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55cb87afd4d8 <col:3> 'void ()' Function 0x55cb87a9ffa0 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x55cb87afd570 <line:735:3, col:7> 'int' '='
|   | |-DeclRefExpr 0x55cb87afd530 <col:3> 'int' lvalue Var 0x55cb87af9770 'x' 'int'
|   | `-IntegerLiteral 0x55cb87afd550 <col:7> 'int' 1
|   |-CallExpr 0x55cb87afd5c8 <line:736:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x55cb87afd5b0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55cb87afd590 <col:3> 'void ()' Function 0x55cb87aa0060 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x55cb87afd620 <line:737:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x55cb87afd608 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55cb87afd5e8 <col:3> 'void ()' Function 0x55cb87a9ffa0 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x55cb87afd908 <line:738:3, col:103> 'int' '='
|   | |-DeclRefExpr 0x55cb87afd640 <col:3> 'int' lvalue Var 0x55cb87af9770 'x' 'int'
|   | `-ConditionalOperator 0x55cb87afd8d8 <col:7, col:103> 'int'
|   |   |-BinaryOperator 0x55cb87afd700 <col:7, col:25> 'int' '&&'
|   |   | |-ImplicitCastExpr 0x55cb87afd6b8 <col:7> 'int' <IntegralCast>
|   |   | | `-ImplicitCastExpr 0x55cb87afd6a0 <col:7> '_Bool' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x55cb87afd660 <col:7> '_Bool' lvalue Var 0x55cb87af9e58 'x$w_buff0_used' '_Bool'
|   |   | `-ImplicitCastExpr 0x55cb87afd6e8 <col:25> 'int' <IntegralCast>
|   |   |   `-ImplicitCastExpr 0x55cb87afd6d0 <col:25> '_Bool' <LValueToRValue>
|   |   |     `-DeclRefExpr 0x55cb87afd680 <col:25> '_Bool' lvalue Var 0x55cb87af99f0 'x$r_buff0_thd2' '_Bool'
|   |   |-ImplicitCastExpr 0x55cb87afd8c0 <col:42> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x55cb87afd720 <col:42> 'int' lvalue Var 0x55cb87af9de0 'x$w_buff0' 'int'
|   |   `-ParenExpr 0x55cb87afd8a0 <col:54, col:103> 'int'
|   |     `-ConditionalOperator 0x55cb87afd870 <col:55, col:102> 'int'
|   |       |-BinaryOperator 0x55cb87afd7e0 <col:55, col:73> 'int' '&&'
|   |       | |-ImplicitCastExpr 0x55cb87afd798 <col:55> 'int' <IntegralCast>
|   |       | | `-ImplicitCastExpr 0x55cb87afd780 <col:55> '_Bool' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x55cb87afd740 <col:55> '_Bool' lvalue Var 0x55cb87af9f50 'x$w_buff1_used' '_Bool'
|   |       | `-ImplicitCastExpr 0x55cb87afd7c8 <col:73> 'int' <IntegralCast>
|   |       |   `-ImplicitCastExpr 0x55cb87afd7b0 <col:73> '_Bool' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x55cb87afd760 <col:73> '_Bool' lvalue Var 0x55cb87af9bf0 'x$r_buff1_thd2' '_Bool'
|   |       |-ImplicitCastExpr 0x55cb87afd840 <col:90> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x55cb87afd800 <col:90> 'int' lvalue Var 0x55cb87af9ed8 'x$w_buff1' 'int'
|   |       `-ImplicitCastExpr 0x55cb87afd858 <col:102> 'int' <LValueToRValue>
|   |         `-DeclRefExpr 0x55cb87afd820 <col:102> 'int' lvalue Var 0x55cb87af9770 'x' 'int'
|   |-BinaryOperator 0x55cb87afdb10 <line:739:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x55cb87afd928 <col:3> '_Bool' lvalue Var 0x55cb87af9e58 'x$w_buff0_used' '_Bool'
|   | `-ImplicitCastExpr 0x55cb87afdaf8 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55cb87afdac8 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x55cb87afd9e8 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x55cb87afd9a0 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x55cb87afd988 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x55cb87afd948 <col:20> '_Bool' lvalue Var 0x55cb87af9e58 'x$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x55cb87afd9d0 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x55cb87afd9b8 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x55cb87afd968 <col:38> '_Bool' lvalue Var 0x55cb87af99f0 'x$r_buff0_thd2' '_Bool'
|   |     |-ImplicitCastExpr 0x55cb87afda80 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x55cb87afda38 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x55cb87afda08 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x55cb87afdab0 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x55cb87afda98 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x55cb87afda60 <col:66> '_Bool' lvalue Var 0x55cb87af9e58 'x$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x55cb87afde08 <line:740:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x55cb87afdb40 <col:3> '_Bool' lvalue Var 0x55cb87af9f50 'x$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x55cb87afddf0 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55cb87afddc0 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x55cb87afdce0 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x55cb87afdc00 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x55cb87afdbb8 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x55cb87afdba0 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x55cb87afdb60 <col:20> '_Bool' lvalue Var 0x55cb87af9e58 'x$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x55cb87afdbe8 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x55cb87afdbd0 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x55cb87afdb80 <col:38> '_Bool' lvalue Var 0x55cb87af99f0 'x$r_buff0_thd2' '_Bool'
|   |     | `-BinaryOperator 0x55cb87afdcc0 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x55cb87afdc78 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x55cb87afdc60 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x55cb87afdc20 <col:56> '_Bool' lvalue Var 0x55cb87af9f50 'x$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x55cb87afdca8 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x55cb87afdc90 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x55cb87afdc40 <col:74> '_Bool' lvalue Var 0x55cb87af9bf0 'x$r_buff1_thd2' '_Bool'
|   |     |-ImplicitCastExpr 0x55cb87afdd78 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x55cb87afdd30 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x55cb87afdd00 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x55cb87afdda8 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x55cb87afdd90 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x55cb87afdd58 <col:102> '_Bool' lvalue Var 0x55cb87af9f50 'x$w_buff1_used' '_Bool'
|   |-BinaryOperator 0x55cb87afe010 <line:741:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x55cb87afde28 <col:3> '_Bool' lvalue Var 0x55cb87af99f0 'x$r_buff0_thd2' '_Bool'
|   | `-ImplicitCastExpr 0x55cb87afdff8 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55cb87afdfc8 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x55cb87afdee8 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x55cb87afdea0 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x55cb87afde88 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x55cb87afde48 <col:20> '_Bool' lvalue Var 0x55cb87af9e58 'x$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x55cb87afded0 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x55cb87afdeb8 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x55cb87afde68 <col:38> '_Bool' lvalue Var 0x55cb87af99f0 'x$r_buff0_thd2' '_Bool'
|   |     |-ImplicitCastExpr 0x55cb87afdf80 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x55cb87afdf38 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x55cb87afdf08 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x55cb87afdfb0 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x55cb87afdf98 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x55cb87afdf60 <col:66> '_Bool' lvalue Var 0x55cb87af99f0 'x$r_buff0_thd2' '_Bool'
|   |-BinaryOperator 0x55cb87afe2f8 <line:742:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x55cb87afe030 <col:3> '_Bool' lvalue Var 0x55cb87af9bf0 'x$r_buff1_thd2' '_Bool'
|   | `-ImplicitCastExpr 0x55cb87afe2e0 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55cb87afe2b0 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x55cb87afe1d0 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x55cb87afe0f0 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x55cb87afe0a8 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x55cb87afe090 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x55cb87afe050 <col:20> '_Bool' lvalue Var 0x55cb87af9e58 'x$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x55cb87afe0d8 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x55cb87afe0c0 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x55cb87afe070 <col:38> '_Bool' lvalue Var 0x55cb87af99f0 'x$r_buff0_thd2' '_Bool'
|   |     | `-BinaryOperator 0x55cb87afe1b0 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x55cb87afe168 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x55cb87afe150 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x55cb87afe110 <col:56> '_Bool' lvalue Var 0x55cb87af9f50 'x$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x55cb87afe198 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x55cb87afe180 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x55cb87afe130 <col:74> '_Bool' lvalue Var 0x55cb87af9bf0 'x$r_buff1_thd2' '_Bool'
|   |     |-ImplicitCastExpr 0x55cb87afe268 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x55cb87afe220 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x55cb87afe1f0 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x55cb87afe298 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x55cb87afe280 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x55cb87afe248 <col:102> '_Bool' lvalue Var 0x55cb87af9bf0 'x$r_buff1_thd2' '_Bool'
|   |-CallExpr 0x55cb87afe350 <line:743:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x55cb87afe338 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55cb87afe318 <col:3> 'void ()' Function 0x55cb87aa0060 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x55cb87afe3a8 <line:744:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x55cb87afe390 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55cb87afe370 <col:3> 'void ()' Function 0x55cb87a9ffa0 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x55cb87afe440 <line:745:3, col:42> '_Bool' '='
|   | |-DeclRefExpr 0x55cb87afe3c8 <col:3> '_Bool' lvalue Var 0x55cb87afa0e8 'weak$$choice0' '_Bool'
|   | `-CallExpr 0x55cb87afe420 <col:19, col:42> '_Bool'
|   |   `-ImplicitCastExpr 0x55cb87afe408 <col:19> '_Bool (*)(void)' <FunctionToPointerDecay>
|   |     `-DeclRefExpr 0x55cb87afe3e8 <col:19> '_Bool (void)' Function 0x55cb87a9f770 '__VERIFIER_nondet_bool' '_Bool (void)'
|   |-BinaryOperator 0x55cb87afe4d8 <line:746:3, col:42> '_Bool' '='
|   | |-DeclRefExpr 0x55cb87afe460 <col:3> '_Bool' lvalue Var 0x55cb87afa160 'weak$$choice2' '_Bool'
|   | `-CallExpr 0x55cb87afe4b8 <col:19, col:42> '_Bool'
|   |   `-ImplicitCastExpr 0x55cb87afe4a0 <col:19> '_Bool (*)(void)' <FunctionToPointerDecay>
|   |     `-DeclRefExpr 0x55cb87afe480 <col:19> '_Bool (void)' Function 0x55cb87a9f770 '__VERIFIER_nondet_bool' '_Bool (void)'
|   |-BinaryOperator 0x55cb87afe550 <line:747:3, col:21> '_Bool' '='
|   | |-DeclRefExpr 0x55cb87afe4f8 <col:3> '_Bool' lvalue Var 0x55cb87af9808 'x$flush_delayed' '_Bool'
|   | `-ImplicitCastExpr 0x55cb87afe538 <col:21> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x55cb87afe518 <col:21> '_Bool' lvalue Var 0x55cb87afa160 'weak$$choice2' '_Bool'
|   |-BinaryOperator 0x55cb87afe5c8 <line:748:3, col:15> 'int' '='
|   | |-DeclRefExpr 0x55cb87afe570 <col:3> 'int' lvalue Var 0x55cb87af9888 'x$mem_tmp' 'int'
|   | `-ImplicitCastExpr 0x55cb87afe5b0 <col:15> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x55cb87afe590 <col:15> 'int' lvalue Var 0x55cb87af9770 'x' 'int'
|   |-BinaryOperator 0x55cb87afea00 <line:749:3, col:162> 'int' '='
|   | |-DeclRefExpr 0x55cb87afe5e8 <col:3> 'int' lvalue Var 0x55cb87af9770 'x' 'int'
|   | `-ConditionalOperator 0x55cb87afe9d0 <col:7, col:162> 'int'
|   |   |-BinaryOperator 0x55cb87afe7f8 <col:7, col:84> 'int' '||'
|   |   | |-BinaryOperator 0x55cb87afe718 <col:7, col:46> 'int' '||'
|   |   | | |-UnaryOperator 0x55cb87afe640 <col:7, col:8> 'int' prefix '!' cannot overflow
|   |   | | | `-ImplicitCastExpr 0x55cb87afe628 <col:8> '_Bool' <LValueToRValue>
|   |   | | |   `-DeclRefExpr 0x55cb87afe608 <col:8> '_Bool' lvalue Var 0x55cb87af9e58 'x$w_buff0_used' '_Bool'
|   |   | | `-BinaryOperator 0x55cb87afe6f8 <col:26, col:46> 'int' '&&'
|   |   | |   |-UnaryOperator 0x55cb87afe690 <col:26, col:27> 'int' prefix '!' cannot overflow
|   |   | |   | `-ImplicitCastExpr 0x55cb87afe678 <col:27> '_Bool' <LValueToRValue>
|   |   | |   |   `-DeclRefExpr 0x55cb87afe658 <col:27> '_Bool' lvalue Var 0x55cb87af99f0 'x$r_buff0_thd2' '_Bool'
|   |   | |   `-UnaryOperator 0x55cb87afe6e0 <col:45, col:46> 'int' prefix '!' cannot overflow
|   |   | |     `-ImplicitCastExpr 0x55cb87afe6c8 <col:46> '_Bool' <LValueToRValue>
|   |   | |       `-DeclRefExpr 0x55cb87afe6a8 <col:46> '_Bool' lvalue Var 0x55cb87af9f50 'x$w_buff1_used' '_Bool'
|   |   | `-BinaryOperator 0x55cb87afe7d8 <col:64, col:84> 'int' '&&'
|   |   |   |-UnaryOperator 0x55cb87afe770 <col:64, col:65> 'int' prefix '!' cannot overflow
|   |   |   | `-ImplicitCastExpr 0x55cb87afe758 <col:65> '_Bool' <LValueToRValue>
|   |   |   |   `-DeclRefExpr 0x55cb87afe738 <col:65> '_Bool' lvalue Var 0x55cb87af99f0 'x$r_buff0_thd2' '_Bool'
|   |   |   `-UnaryOperator 0x55cb87afe7c0 <col:83, col:84> 'int' prefix '!' cannot overflow
|   |   |     `-ImplicitCastExpr 0x55cb87afe7a8 <col:84> '_Bool' <LValueToRValue>
|   |   |       `-DeclRefExpr 0x55cb87afe788 <col:84> '_Bool' lvalue Var 0x55cb87af9bf0 'x$r_buff1_thd2' '_Bool'
|   |   |-ImplicitCastExpr 0x55cb87afe9b8 <col:101> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x55cb87afe818 <col:101> 'int' lvalue Var 0x55cb87af9770 'x' 'int'
|   |   `-ParenExpr 0x55cb87afe998 <col:105, col:162> 'int'
|   |     `-ConditionalOperator 0x55cb87afe968 <col:106, col:153> 'int'
|   |       |-BinaryOperator 0x55cb87afe8d8 <col:106, col:124> 'int' '&&'
|   |       | |-ImplicitCastExpr 0x55cb87afe890 <col:106> 'int' <IntegralCast>
|   |       | | `-ImplicitCastExpr 0x55cb87afe878 <col:106> '_Bool' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x55cb87afe838 <col:106> '_Bool' lvalue Var 0x55cb87af9e58 'x$w_buff0_used' '_Bool'
|   |       | `-ImplicitCastExpr 0x55cb87afe8c0 <col:124> 'int' <IntegralCast>
|   |       |   `-ImplicitCastExpr 0x55cb87afe8a8 <col:124> '_Bool' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x55cb87afe858 <col:124> '_Bool' lvalue Var 0x55cb87af99f0 'x$r_buff0_thd2' '_Bool'
|   |       |-ImplicitCastExpr 0x55cb87afe938 <col:141> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x55cb87afe8f8 <col:141> 'int' lvalue Var 0x55cb87af9de0 'x$w_buff0' 'int'
|   |       `-ImplicitCastExpr 0x55cb87afe950 <col:153> 'int' <LValueToRValue>
|   |         `-DeclRefExpr 0x55cb87afe918 <col:153> 'int' lvalue Var 0x55cb87af9ed8 'x$w_buff1' 'int'
|   |-BinaryOperator 0x55cb87afef20 <line:750:3, col:208> 'int' '='
|   | |-DeclRefExpr 0x55cb87afea20 <col:3> 'int' lvalue Var 0x55cb87af9de0 'x$w_buff0' 'int'
|   | `-ConditionalOperator 0x55cb87afeef0 <col:15, col:208> 'int'
|   |   |-ImplicitCastExpr 0x55cb87afeec0 <col:15> 'int' <IntegralCast>
|   |   | `-ImplicitCastExpr 0x55cb87afeea8 <col:15> '_Bool' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x55cb87afea40 <col:15> '_Bool' lvalue Var 0x55cb87afa160 'weak$$choice2' '_Bool'
|   |   |-ImplicitCastExpr 0x55cb87afeed8 <col:31> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x55cb87afea60 <col:31> 'int' lvalue Var 0x55cb87af9de0 'x$w_buff0' 'int'
|   |   `-ParenExpr 0x55cb87afee88 <col:43, col:208> 'int'
|   |     `-ConditionalOperator 0x55cb87afee58 <col:44, col:207> 'int'
|   |       |-BinaryOperator 0x55cb87afec80 <col:44, col:121> 'int' '||'
|   |       | |-BinaryOperator 0x55cb87afeba0 <col:44, col:83> 'int' '||'
|   |       | | |-UnaryOperator 0x55cb87afeab8 <col:44, col:45> 'int' prefix '!' cannot overflow
|   |       | | | `-ImplicitCastExpr 0x55cb87afeaa0 <col:45> '_Bool' <LValueToRValue>
|   |       | | |   `-DeclRefExpr 0x55cb87afea80 <col:45> '_Bool' lvalue Var 0x55cb87af9e58 'x$w_buff0_used' '_Bool'
|   |       | | `-BinaryOperator 0x55cb87afeb80 <col:63, col:83> 'int' '&&'
|   |       | |   |-UnaryOperator 0x55cb87afeb08 <col:63, col:64> 'int' prefix '!' cannot overflow
|   |       | |   | `-ImplicitCastExpr 0x55cb87afeaf0 <col:64> '_Bool' <LValueToRValue>
|   |       | |   |   `-DeclRefExpr 0x55cb87afead0 <col:64> '_Bool' lvalue Var 0x55cb87af99f0 'x$r_buff0_thd2' '_Bool'
|   |       | |   `-UnaryOperator 0x55cb87afeb68 <col:82, col:83> 'int' prefix '!' cannot overflow
|   |       | |     `-ImplicitCastExpr 0x55cb87afeb50 <col:83> '_Bool' <LValueToRValue>
|   |       | |       `-DeclRefExpr 0x55cb87afeb20 <col:83> '_Bool' lvalue Var 0x55cb87af9f50 'x$w_buff1_used' '_Bool'
|   |       | `-BinaryOperator 0x55cb87afec60 <col:101, col:121> 'int' '&&'
|   |       |   |-UnaryOperator 0x55cb87afebf8 <col:101, col:102> 'int' prefix '!' cannot overflow
|   |       |   | `-ImplicitCastExpr 0x55cb87afebe0 <col:102> '_Bool' <LValueToRValue>
|   |       |   |   `-DeclRefExpr 0x55cb87afebc0 <col:102> '_Bool' lvalue Var 0x55cb87af99f0 'x$r_buff0_thd2' '_Bool'
|   |       |   `-UnaryOperator 0x55cb87afec48 <col:120, col:121> 'int' prefix '!' cannot overflow
|   |       |     `-ImplicitCastExpr 0x55cb87afec30 <col:121> '_Bool' <LValueToRValue>
|   |       |       `-DeclRefExpr 0x55cb87afec10 <col:121> '_Bool' lvalue Var 0x55cb87af9bf0 'x$r_buff1_thd2' '_Bool'
|   |       |-ImplicitCastExpr 0x55cb87afee40 <col:138> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x55cb87afeca0 <col:138> 'int' lvalue Var 0x55cb87af9de0 'x$w_buff0' 'int'
|   |       `-ParenExpr 0x55cb87afee20 <col:150, col:207> 'int'
|   |         `-ConditionalOperator 0x55cb87afedf0 <col:151, col:198> 'int'
|   |           |-BinaryOperator 0x55cb87afed60 <col:151, col:169> 'int' '&&'
|   |           | |-ImplicitCastExpr 0x55cb87afed18 <col:151> 'int' <IntegralCast>
|   |           | | `-ImplicitCastExpr 0x55cb87afed00 <col:151> '_Bool' <LValueToRValue>
|   |           | |   `-DeclRefExpr 0x55cb87afecc0 <col:151> '_Bool' lvalue Var 0x55cb87af9e58 'x$w_buff0_used' '_Bool'
|   |           | `-ImplicitCastExpr 0x55cb87afed48 <col:169> 'int' <IntegralCast>
|   |           |   `-ImplicitCastExpr 0x55cb87afed30 <col:169> '_Bool' <LValueToRValue>
|   |           |     `-DeclRefExpr 0x55cb87afece0 <col:169> '_Bool' lvalue Var 0x55cb87af99f0 'x$r_buff0_thd2' '_Bool'
|   |           |-ImplicitCastExpr 0x55cb87afedc0 <col:186> 'int' <LValueToRValue>
|   |           | `-DeclRefExpr 0x55cb87afed80 <col:186> 'int' lvalue Var 0x55cb87af9de0 'x$w_buff0' 'int'
|   |           `-ImplicitCastExpr 0x55cb87afedd8 <col:198> 'int' <LValueToRValue>
|   |             `-DeclRefExpr 0x55cb87afeda0 <col:198> 'int' lvalue Var 0x55cb87af9de0 'x$w_buff0' 'int'
|   |-BinaryOperator 0x55cb87aff430 <line:751:3, col:208> 'int' '='
|   | |-DeclRefExpr 0x55cb87afef40 <col:3> 'int' lvalue Var 0x55cb87af9ed8 'x$w_buff1' 'int'
|   | `-ConditionalOperator 0x55cb87aff400 <col:15, col:208> 'int'
|   |   |-ImplicitCastExpr 0x55cb87aff3d0 <col:15> 'int' <IntegralCast>
|   |   | `-ImplicitCastExpr 0x55cb87aff3b8 <col:15> '_Bool' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x55cb87afef60 <col:15> '_Bool' lvalue Var 0x55cb87afa160 'weak$$choice2' '_Bool'
|   |   |-ImplicitCastExpr 0x55cb87aff3e8 <col:31> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x55cb87afef80 <col:31> 'int' lvalue Var 0x55cb87af9ed8 'x$w_buff1' 'int'
|   |   `-ParenExpr 0x55cb87aff398 <col:43, col:208> 'int'
|   |     `-ConditionalOperator 0x55cb87aff368 <col:44, col:207> 'int'
|   |       |-BinaryOperator 0x55cb87aff190 <col:44, col:121> 'int' '||'
|   |       | |-BinaryOperator 0x55cb87aff0b0 <col:44, col:83> 'int' '||'
|   |       | | |-UnaryOperator 0x55cb87afefd8 <col:44, col:45> 'int' prefix '!' cannot overflow
|   |       | | | `-ImplicitCastExpr 0x55cb87afefc0 <col:45> '_Bool' <LValueToRValue>
|   |       | | |   `-DeclRefExpr 0x55cb87afefa0 <col:45> '_Bool' lvalue Var 0x55cb87af9e58 'x$w_buff0_used' '_Bool'
|   |       | | `-BinaryOperator 0x55cb87aff090 <col:63, col:83> 'int' '&&'
|   |       | |   |-UnaryOperator 0x55cb87aff028 <col:63, col:64> 'int' prefix '!' cannot overflow
|   |       | |   | `-ImplicitCastExpr 0x55cb87aff010 <col:64> '_Bool' <LValueToRValue>
|   |       | |   |   `-DeclRefExpr 0x55cb87afeff0 <col:64> '_Bool' lvalue Var 0x55cb87af99f0 'x$r_buff0_thd2' '_Bool'
|   |       | |   `-UnaryOperator 0x55cb87aff078 <col:82, col:83> 'int' prefix '!' cannot overflow
|   |       | |     `-ImplicitCastExpr 0x55cb87aff060 <col:83> '_Bool' <LValueToRValue>
|   |       | |       `-DeclRefExpr 0x55cb87aff040 <col:83> '_Bool' lvalue Var 0x55cb87af9f50 'x$w_buff1_used' '_Bool'
|   |       | `-BinaryOperator 0x55cb87aff170 <col:101, col:121> 'int' '&&'
|   |       |   |-UnaryOperator 0x55cb87aff108 <col:101, col:102> 'int' prefix '!' cannot overflow
|   |       |   | `-ImplicitCastExpr 0x55cb87aff0f0 <col:102> '_Bool' <LValueToRValue>
|   |       |   |   `-DeclRefExpr 0x55cb87aff0d0 <col:102> '_Bool' lvalue Var 0x55cb87af99f0 'x$r_buff0_thd2' '_Bool'
|   |       |   `-UnaryOperator 0x55cb87aff158 <col:120, col:121> 'int' prefix '!' cannot overflow
|   |       |     `-ImplicitCastExpr 0x55cb87aff140 <col:121> '_Bool' <LValueToRValue>
|   |       |       `-DeclRefExpr 0x55cb87aff120 <col:121> '_Bool' lvalue Var 0x55cb87af9bf0 'x$r_buff1_thd2' '_Bool'
|   |       |-ImplicitCastExpr 0x55cb87aff350 <col:138> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x55cb87aff1b0 <col:138> 'int' lvalue Var 0x55cb87af9ed8 'x$w_buff1' 'int'
|   |       `-ParenExpr 0x55cb87aff330 <col:150, col:207> 'int'
|   |         `-ConditionalOperator 0x55cb87aff300 <col:151, col:198> 'int'
|   |           |-BinaryOperator 0x55cb87aff270 <col:151, col:169> 'int' '&&'
|   |           | |-ImplicitCastExpr 0x55cb87aff228 <col:151> 'int' <IntegralCast>
|   |           | | `-ImplicitCastExpr 0x55cb87aff210 <col:151> '_Bool' <LValueToRValue>
|   |           | |   `-DeclRefExpr 0x55cb87aff1d0 <col:151> '_Bool' lvalue Var 0x55cb87af9e58 'x$w_buff0_used' '_Bool'
|   |           | `-ImplicitCastExpr 0x55cb87aff258 <col:169> 'int' <IntegralCast>
|   |           |   `-ImplicitCastExpr 0x55cb87aff240 <col:169> '_Bool' <LValueToRValue>
|   |           |     `-DeclRefExpr 0x55cb87aff1f0 <col:169> '_Bool' lvalue Var 0x55cb87af99f0 'x$r_buff0_thd2' '_Bool'
|   |           |-ImplicitCastExpr 0x55cb87aff2d0 <col:186> 'int' <LValueToRValue>
|   |           | `-DeclRefExpr 0x55cb87aff290 <col:186> 'int' lvalue Var 0x55cb87af9ed8 'x$w_buff1' 'int'
|   |           `-ImplicitCastExpr 0x55cb87aff2e8 <col:198> 'int' <LValueToRValue>
|   |             `-DeclRefExpr 0x55cb87aff2b0 <col:198> 'int' lvalue Var 0x55cb87af9ed8 'x$w_buff1' 'int'
|   |-BinaryOperator 0x55cb87aff9d8 <line:752:3, col:227> '_Bool' '='
|   | |-DeclRefExpr 0x55cb87aff450 <col:3> '_Bool' lvalue Var 0x55cb87af9e58 'x$w_buff0_used' '_Bool'
|   | `-ImplicitCastExpr 0x55cb87aff9c0 <col:20, col:227> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55cb87aff990 <col:20, col:227> 'int'
|   |     |-ImplicitCastExpr 0x55cb87aff948 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x55cb87aff930 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x55cb87aff470 <col:20> '_Bool' lvalue Var 0x55cb87afa160 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x55cb87aff978 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x55cb87aff960 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x55cb87aff490 <col:36> '_Bool' lvalue Var 0x55cb87af9e58 'x$w_buff0_used' '_Bool'
|   |     `-ParenExpr 0x55cb87aff910 <col:53, col:227> 'int'
|   |       `-ConditionalOperator 0x55cb87aff8e0 <col:54, col:226> 'int'
|   |         |-BinaryOperator 0x55cb87aff6a0 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x55cb87aff5c0 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x55cb87aff4e8 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x55cb87aff4d0 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x55cb87aff4b0 <col:55> '_Bool' lvalue Var 0x55cb87af9e58 'x$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x55cb87aff5a0 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x55cb87aff538 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x55cb87aff520 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x55cb87aff500 <col:74> '_Bool' lvalue Var 0x55cb87af99f0 'x$r_buff0_thd2' '_Bool'
|   |         | |   `-UnaryOperator 0x55cb87aff588 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x55cb87aff570 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x55cb87aff550 <col:93> '_Bool' lvalue Var 0x55cb87af9f50 'x$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x55cb87aff680 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x55cb87aff618 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x55cb87aff600 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x55cb87aff5e0 <col:112> '_Bool' lvalue Var 0x55cb87af99f0 'x$r_buff0_thd2' '_Bool'
|   |         |   `-UnaryOperator 0x55cb87aff668 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x55cb87aff650 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x55cb87aff630 <col:131> '_Bool' lvalue Var 0x55cb87af9bf0 'x$r_buff1_thd2' '_Bool'
|   |         |-ImplicitCastExpr 0x55cb87aff8c8 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x55cb87aff8b0 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x55cb87aff6c0 <col:148> '_Bool' lvalue Var 0x55cb87af9e58 'x$w_buff0_used' '_Bool'
|   |         `-ParenExpr 0x55cb87aff890 <col:165, col:226> 'int'
|   |           `-ConditionalOperator 0x55cb87aff860 <col:166, col:212> 'int'
|   |             |-BinaryOperator 0x55cb87aff780 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x55cb87aff738 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x55cb87aff720 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x55cb87aff6e0 <col:166> '_Bool' lvalue Var 0x55cb87af9e58 'x$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x55cb87aff768 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x55cb87aff750 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x55cb87aff700 <col:184> '_Bool' lvalue Var 0x55cb87af99f0 'x$r_buff0_thd2' '_Bool'
|   |             |-ImplicitCastExpr 0x55cb87aff818 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x55cb87aff7d0 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x55cb87aff7a0 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x55cb87aff848 <col:212> 'int' <IntegralCast>
|   |               `-ImplicitCastExpr 0x55cb87aff830 <col:212> '_Bool' <LValueToRValue>
|   |                 `-DeclRefExpr 0x55cb87aff7f8 <col:212> '_Bool' lvalue Var 0x55cb87af9e58 'x$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x55cb87afffb8 <line:753:3, col:221> '_Bool' '='
|   | |-DeclRefExpr 0x55cb87aff9f8 <col:3> '_Bool' lvalue Var 0x55cb87af9f50 'x$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x55cb87afffa0 <col:20, col:221> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55cb87afff70 <col:20, col:221> 'int'
|   |     |-ImplicitCastExpr 0x55cb87afff28 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x55cb87afff10 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x55cb87affa18 <col:20> '_Bool' lvalue Var 0x55cb87afa160 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x55cb87afff58 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x55cb87afff40 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x55cb87affa38 <col:36> '_Bool' lvalue Var 0x55cb87af9f50 'x$w_buff1_used' '_Bool'
|   |     `-ParenExpr 0x55cb87affef0 <col:53, col:221> 'int'
|   |       `-ConditionalOperator 0x55cb87affec0 <col:54, col:220> 'int'
|   |         |-BinaryOperator 0x55cb87affc60 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x55cb87affb80 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x55cb87affa90 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x55cb87affa78 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x55cb87affa58 <col:55> '_Bool' lvalue Var 0x55cb87af9e58 'x$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x55cb87affb60 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x55cb87affae0 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x55cb87affac8 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x55cb87affaa8 <col:74> '_Bool' lvalue Var 0x55cb87af99f0 'x$r_buff0_thd2' '_Bool'
|   |         | |   `-UnaryOperator 0x55cb87affb30 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x55cb87affb18 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x55cb87affaf8 <col:93> '_Bool' lvalue Var 0x55cb87af9f50 'x$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x55cb87affc40 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x55cb87affbd8 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x55cb87affbc0 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x55cb87affba0 <col:112> '_Bool' lvalue Var 0x55cb87af99f0 'x$r_buff0_thd2' '_Bool'
|   |         |   `-UnaryOperator 0x55cb87affc28 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x55cb87affc10 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x55cb87affbf0 <col:131> '_Bool' lvalue Var 0x55cb87af9bf0 'x$r_buff1_thd2' '_Bool'
|   |         |-ImplicitCastExpr 0x55cb87affea8 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x55cb87affe90 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x55cb87affc80 <col:148> '_Bool' lvalue Var 0x55cb87af9f50 'x$w_buff1_used' '_Bool'
|   |         `-ParenExpr 0x55cb87affe70 <col:165, col:220> 'int'
|   |           `-ConditionalOperator 0x55cb87affe40 <col:166, col:219> 'int'
|   |             |-BinaryOperator 0x55cb87affd40 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x55cb87affcf8 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x55cb87affce0 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x55cb87affca0 <col:166> '_Bool' lvalue Var 0x55cb87af9e58 'x$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x55cb87affd28 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x55cb87affd10 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x55cb87affcc0 <col:184> '_Bool' lvalue Var 0x55cb87af99f0 'x$r_buff0_thd2' '_Bool'
|   |             |-ImplicitCastExpr 0x55cb87affe10 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x55cb87affd90 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x55cb87affd60 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x55cb87affe28 <col:212, col:219> 'int' <IntegralCast>
|   |               `-CStyleCastExpr 0x55cb87affde8 <col:212, col:219> '_Bool' <IntegralToBoolean>
|   |                 `-IntegerLiteral 0x55cb87affdb8 <col:219> 'int' 0
|   |-BinaryOperator 0x55cb87b00560 <line:754:3, col:227> '_Bool' '='
|   | |-DeclRefExpr 0x55cb87afffd8 <col:3> '_Bool' lvalue Var 0x55cb87af99f0 'x$r_buff0_thd2' '_Bool'
|   | `-ImplicitCastExpr 0x55cb87b00548 <col:20, col:227> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55cb87b00518 <col:20, col:227> 'int'
|   |     |-ImplicitCastExpr 0x55cb87b004d0 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x55cb87b004b8 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x55cb87affff8 <col:20> '_Bool' lvalue Var 0x55cb87afa160 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x55cb87b00500 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x55cb87b004e8 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x55cb87b00018 <col:36> '_Bool' lvalue Var 0x55cb87af99f0 'x$r_buff0_thd2' '_Bool'
|   |     `-ParenExpr 0x55cb87b00498 <col:53, col:227> 'int'
|   |       `-ConditionalOperator 0x55cb87b00468 <col:54, col:226> 'int'
|   |         |-BinaryOperator 0x55cb87b00228 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x55cb87b00148 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x55cb87b00070 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x55cb87b00058 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x55cb87b00038 <col:55> '_Bool' lvalue Var 0x55cb87af9e58 'x$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x55cb87b00128 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x55cb87b000c0 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x55cb87b000a8 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x55cb87b00088 <col:74> '_Bool' lvalue Var 0x55cb87af99f0 'x$r_buff0_thd2' '_Bool'
|   |         | |   `-UnaryOperator 0x55cb87b00110 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x55cb87b000f8 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x55cb87b000d8 <col:93> '_Bool' lvalue Var 0x55cb87af9f50 'x$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x55cb87b00208 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x55cb87b001a0 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x55cb87b00188 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x55cb87b00168 <col:112> '_Bool' lvalue Var 0x55cb87af99f0 'x$r_buff0_thd2' '_Bool'
|   |         |   `-UnaryOperator 0x55cb87b001f0 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x55cb87b001d8 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x55cb87b001b8 <col:131> '_Bool' lvalue Var 0x55cb87af9bf0 'x$r_buff1_thd2' '_Bool'
|   |         |-ImplicitCastExpr 0x55cb87b00450 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x55cb87b00438 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x55cb87b00248 <col:148> '_Bool' lvalue Var 0x55cb87af99f0 'x$r_buff0_thd2' '_Bool'
|   |         `-ParenExpr 0x55cb87b00418 <col:165, col:226> 'int'
|   |           `-ConditionalOperator 0x55cb87b003e8 <col:166, col:212> 'int'
|   |             |-BinaryOperator 0x55cb87b00308 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x55cb87b002c0 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x55cb87b002a8 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x55cb87b00268 <col:166> '_Bool' lvalue Var 0x55cb87af9e58 'x$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x55cb87b002f0 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x55cb87b002d8 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x55cb87b00288 <col:184> '_Bool' lvalue Var 0x55cb87af99f0 'x$r_buff0_thd2' '_Bool'
|   |             |-ImplicitCastExpr 0x55cb87b003a0 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x55cb87b00358 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x55cb87b00328 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x55cb87b003d0 <col:212> 'int' <IntegralCast>
|   |               `-ImplicitCastExpr 0x55cb87b003b8 <col:212> '_Bool' <LValueToRValue>
|   |                 `-DeclRefExpr 0x55cb87b00380 <col:212> '_Bool' lvalue Var 0x55cb87af99f0 'x$r_buff0_thd2' '_Bool'
|   |-BinaryOperator 0x55cb87b00b28 <line:755:3, col:221> '_Bool' '='
|   | |-DeclRefExpr 0x55cb87b00580 <col:3> '_Bool' lvalue Var 0x55cb87af9bf0 'x$r_buff1_thd2' '_Bool'
|   | `-ImplicitCastExpr 0x55cb87b00b10 <col:20, col:221> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55cb87b00ae0 <col:20, col:221> 'int'
|   |     |-ImplicitCastExpr 0x55cb87b00a98 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x55cb87b00a80 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x55cb87b005a0 <col:20> '_Bool' lvalue Var 0x55cb87afa160 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x55cb87b00ac8 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x55cb87b00ab0 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x55cb87b005c0 <col:36> '_Bool' lvalue Var 0x55cb87af9bf0 'x$r_buff1_thd2' '_Bool'
|   |     `-ParenExpr 0x55cb87b00a60 <col:53, col:221> 'int'
|   |       `-ConditionalOperator 0x55cb87b00a30 <col:54, col:220> 'int'
|   |         |-BinaryOperator 0x55cb87b007d0 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x55cb87b006f0 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x55cb87b00618 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x55cb87b00600 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x55cb87b005e0 <col:55> '_Bool' lvalue Var 0x55cb87af9e58 'x$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x55cb87b006d0 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x55cb87b00668 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x55cb87b00650 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x55cb87b00630 <col:74> '_Bool' lvalue Var 0x55cb87af99f0 'x$r_buff0_thd2' '_Bool'
|   |         | |   `-UnaryOperator 0x55cb87b006b8 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x55cb87b006a0 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x55cb87b00680 <col:93> '_Bool' lvalue Var 0x55cb87af9f50 'x$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x55cb87b007b0 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x55cb87b00748 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x55cb87b00730 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x55cb87b00710 <col:112> '_Bool' lvalue Var 0x55cb87af99f0 'x$r_buff0_thd2' '_Bool'
|   |         |   `-UnaryOperator 0x55cb87b00798 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x55cb87b00780 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x55cb87b00760 <col:131> '_Bool' lvalue Var 0x55cb87af9bf0 'x$r_buff1_thd2' '_Bool'
|   |         |-ImplicitCastExpr 0x55cb87b00a18 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x55cb87b00a00 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x55cb87b007f0 <col:148> '_Bool' lvalue Var 0x55cb87af9bf0 'x$r_buff1_thd2' '_Bool'
|   |         `-ParenExpr 0x55cb87b009e0 <col:165, col:220> 'int'
|   |           `-ConditionalOperator 0x55cb87b009b0 <col:166, col:219> 'int'
|   |             |-BinaryOperator 0x55cb87b008b0 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x55cb87b00868 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x55cb87b00850 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x55cb87b00810 <col:166> '_Bool' lvalue Var 0x55cb87af9e58 'x$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x55cb87b00898 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x55cb87b00880 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x55cb87b00830 <col:184> '_Bool' lvalue Var 0x55cb87af99f0 'x$r_buff0_thd2' '_Bool'
|   |             |-ImplicitCastExpr 0x55cb87b00980 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x55cb87b00900 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x55cb87b008d0 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x55cb87b00998 <col:212, col:219> 'int' <IntegralCast>
|   |               `-CStyleCastExpr 0x55cb87b00958 <col:212, col:219> '_Bool' <IntegralToBoolean>
|   |                 `-IntegerLiteral 0x55cb87b00928 <col:219> 'int' 0
|   |-BinaryOperator 0x55cb87b00bc8 <line:756:3, col:25> 'int' '='
|   | |-DeclRefExpr 0x55cb87b00b70 <col:3> 'int' lvalue Var 0x55cb87af9560 '__unbuffered_p1_EAX' 'int'
|   | `-ImplicitCastExpr 0x55cb87b00bb0 <col:25> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x55cb87b00b90 <col:25> 'int' lvalue Var 0x55cb87af9770 'x' 'int'
|   |-BinaryOperator 0x55cb87b00cf8 <line:757:3, col:37> 'int' '='
|   | |-DeclRefExpr 0x55cb87b00be8 <col:3> 'int' lvalue Var 0x55cb87af9770 'x' 'int'
|   | `-ConditionalOperator 0x55cb87b00cc8 <col:7, col:37> 'int'
|   |   |-ImplicitCastExpr 0x55cb87b00c80 <col:7> 'int' <IntegralCast>
|   |   | `-ImplicitCastExpr 0x55cb87b00c68 <col:7> '_Bool' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x55cb87b00c08 <col:7> '_Bool' lvalue Var 0x55cb87af9808 'x$flush_delayed' '_Bool'
|   |   |-ImplicitCastExpr 0x55cb87b00c98 <col:25> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x55cb87b00c28 <col:25> 'int' lvalue Var 0x55cb87af9888 'x$mem_tmp' 'int'
|   |   `-ImplicitCastExpr 0x55cb87b00cb0 <col:37> 'int' <LValueToRValue>
|   |     `-DeclRefExpr 0x55cb87b00c48 <col:37> 'int' lvalue Var 0x55cb87af9770 'x' 'int'
|   |-BinaryOperator 0x55cb87b00d90 <line:758:3, col:28> '_Bool' '='
|   | |-DeclRefExpr 0x55cb87b00d18 <col:3> '_Bool' lvalue Var 0x55cb87af9808 'x$flush_delayed' '_Bool'
|   | `-CStyleCastExpr 0x55cb87b00d68 <col:21, col:28> '_Bool' <IntegralToBoolean>
|   |   `-IntegerLiteral 0x55cb87b00d38 <col:28> 'int' 0
|   |-CallExpr 0x55cb87b00de8 <line:759:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x55cb87b00dd0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55cb87b00db0 <col:3> 'void ()' Function 0x55cb87aa0060 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x55cb87b00e40 <line:760:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x55cb87b00e28 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55cb87b00e08 <col:3> 'void ()' Function 0x55cb87a9ffa0 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x55cb87b01128 <line:761:3, col:103> 'int' '='
|   | |-DeclRefExpr 0x55cb87b00e60 <col:3> 'int' lvalue Var 0x55cb87af9770 'x' 'int'
|   | `-ConditionalOperator 0x55cb87b010f8 <col:7, col:103> 'int'
|   |   |-BinaryOperator 0x55cb87b00f20 <col:7, col:25> 'int' '&&'
|   |   | |-ImplicitCastExpr 0x55cb87b00ed8 <col:7> 'int' <IntegralCast>
|   |   | | `-ImplicitCastExpr 0x55cb87b00ec0 <col:7> '_Bool' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x55cb87b00e80 <col:7> '_Bool' lvalue Var 0x55cb87af9e58 'x$w_buff0_used' '_Bool'
|   |   | `-ImplicitCastExpr 0x55cb87b00f08 <col:25> 'int' <IntegralCast>
|   |   |   `-ImplicitCastExpr 0x55cb87b00ef0 <col:25> '_Bool' <LValueToRValue>
|   |   |     `-DeclRefExpr 0x55cb87b00ea0 <col:25> '_Bool' lvalue Var 0x55cb87af99f0 'x$r_buff0_thd2' '_Bool'
|   |   |-ImplicitCastExpr 0x55cb87b010e0 <col:42> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x55cb87b00f40 <col:42> 'int' lvalue Var 0x55cb87af9de0 'x$w_buff0' 'int'
|   |   `-ParenExpr 0x55cb87b010c0 <col:54, col:103> 'int'
|   |     `-ConditionalOperator 0x55cb87b01090 <col:55, col:102> 'int'
|   |       |-BinaryOperator 0x55cb87b01000 <col:55, col:73> 'int' '&&'
|   |       | |-ImplicitCastExpr 0x55cb87b00fb8 <col:55> 'int' <IntegralCast>
|   |       | | `-ImplicitCastExpr 0x55cb87b00fa0 <col:55> '_Bool' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x55cb87b00f60 <col:55> '_Bool' lvalue Var 0x55cb87af9f50 'x$w_buff1_used' '_Bool'
|   |       | `-ImplicitCastExpr 0x55cb87b00fe8 <col:73> 'int' <IntegralCast>
|   |       |   `-ImplicitCastExpr 0x55cb87b00fd0 <col:73> '_Bool' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x55cb87b00f80 <col:73> '_Bool' lvalue Var 0x55cb87af9bf0 'x$r_buff1_thd2' '_Bool'
|   |       |-ImplicitCastExpr 0x55cb87b01060 <col:90> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x55cb87b01020 <col:90> 'int' lvalue Var 0x55cb87af9ed8 'x$w_buff1' 'int'
|   |       `-ImplicitCastExpr 0x55cb87b01078 <col:102> 'int' <LValueToRValue>
|   |         `-DeclRefExpr 0x55cb87b01040 <col:102> 'int' lvalue Var 0x55cb87af9770 'x' 'int'
|   |-BinaryOperator 0x55cb87b01330 <line:762:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x55cb87b01148 <col:3> '_Bool' lvalue Var 0x55cb87af9e58 'x$w_buff0_used' '_Bool'
|   | `-ImplicitCastExpr 0x55cb87b01318 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55cb87b012e8 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x55cb87b01208 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x55cb87b011c0 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x55cb87b011a8 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x55cb87b01168 <col:20> '_Bool' lvalue Var 0x55cb87af9e58 'x$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x55cb87b011f0 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x55cb87b011d8 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x55cb87b01188 <col:38> '_Bool' lvalue Var 0x55cb87af99f0 'x$r_buff0_thd2' '_Bool'
|   |     |-ImplicitCastExpr 0x55cb87b012a0 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x55cb87b01258 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x55cb87b01228 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x55cb87b012d0 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x55cb87b012b8 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x55cb87b01280 <col:66> '_Bool' lvalue Var 0x55cb87af9e58 'x$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x55cb87b01618 <line:763:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x55cb87b01350 <col:3> '_Bool' lvalue Var 0x55cb87af9f50 'x$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x55cb87b01600 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55cb87b015d0 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x55cb87b014f0 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x55cb87b01410 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x55cb87b013c8 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x55cb87b013b0 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x55cb87b01370 <col:20> '_Bool' lvalue Var 0x55cb87af9e58 'x$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x55cb87b013f8 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x55cb87b013e0 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x55cb87b01390 <col:38> '_Bool' lvalue Var 0x55cb87af99f0 'x$r_buff0_thd2' '_Bool'
|   |     | `-BinaryOperator 0x55cb87b014d0 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x55cb87b01488 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x55cb87b01470 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x55cb87b01430 <col:56> '_Bool' lvalue Var 0x55cb87af9f50 'x$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x55cb87b014b8 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x55cb87b014a0 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x55cb87b01450 <col:74> '_Bool' lvalue Var 0x55cb87af9bf0 'x$r_buff1_thd2' '_Bool'
|   |     |-ImplicitCastExpr 0x55cb87b01588 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x55cb87b01540 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x55cb87b01510 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x55cb87b015b8 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x55cb87b015a0 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x55cb87b01568 <col:102> '_Bool' lvalue Var 0x55cb87af9f50 'x$w_buff1_used' '_Bool'
|   |-BinaryOperator 0x55cb87b01820 <line:764:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x55cb87b01638 <col:3> '_Bool' lvalue Var 0x55cb87af99f0 'x$r_buff0_thd2' '_Bool'
|   | `-ImplicitCastExpr 0x55cb87b01808 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55cb87b017d8 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x55cb87b016f8 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x55cb87b016b0 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x55cb87b01698 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x55cb87b01658 <col:20> '_Bool' lvalue Var 0x55cb87af9e58 'x$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x55cb87b016e0 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x55cb87b016c8 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x55cb87b01678 <col:38> '_Bool' lvalue Var 0x55cb87af99f0 'x$r_buff0_thd2' '_Bool'
|   |     |-ImplicitCastExpr 0x55cb87b01790 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x55cb87b01748 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x55cb87b01718 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x55cb87b017c0 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x55cb87b017a8 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x55cb87b01770 <col:66> '_Bool' lvalue Var 0x55cb87af99f0 'x$r_buff0_thd2' '_Bool'
|   |-BinaryOperator 0x55cb87b01b08 <line:765:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x55cb87b01840 <col:3> '_Bool' lvalue Var 0x55cb87af9bf0 'x$r_buff1_thd2' '_Bool'
|   | `-ImplicitCastExpr 0x55cb87b01af0 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55cb87b01ac0 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x55cb87b019e0 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x55cb87b01900 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x55cb87b018b8 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x55cb87b018a0 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x55cb87b01860 <col:20> '_Bool' lvalue Var 0x55cb87af9e58 'x$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x55cb87b018e8 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x55cb87b018d0 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x55cb87b01880 <col:38> '_Bool' lvalue Var 0x55cb87af99f0 'x$r_buff0_thd2' '_Bool'
|   |     | `-BinaryOperator 0x55cb87b019c0 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x55cb87b01978 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x55cb87b01960 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x55cb87b01920 <col:56> '_Bool' lvalue Var 0x55cb87af9f50 'x$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x55cb87b019a8 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x55cb87b01990 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x55cb87b01940 <col:74> '_Bool' lvalue Var 0x55cb87af9bf0 'x$r_buff1_thd2' '_Bool'
|   |     |-ImplicitCastExpr 0x55cb87b01a78 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x55cb87b01a30 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x55cb87b01a00 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x55cb87b01aa8 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x55cb87b01a90 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x55cb87b01a58 <col:102> '_Bool' lvalue Var 0x55cb87af9bf0 'x$r_buff1_thd2' '_Bool'
|   |-CallExpr 0x55cb87b01b80 <line:766:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x55cb87b01b48 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55cb87b01b28 <col:3> 'void ()' Function 0x55cb87aa0060 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x55cb87b01bd8 <line:767:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x55cb87b01bc0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55cb87b01ba0 <col:3> 'void ()' Function 0x55cb87a9ffa0 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x55cb87b01c90 <line:768:3, col:41> 'int' '='
|   | |-DeclRefExpr 0x55cb87b01bf8 <col:3> 'int' lvalue Var 0x55cb87af9320 '__unbuffered_cnt' 'int'
|   | `-BinaryOperator 0x55cb87b01c70 <col:22, col:41> 'int' '+'
|   |   |-ImplicitCastExpr 0x55cb87b01c58 <col:22> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x55cb87b01c18 <col:22> 'int' lvalue Var 0x55cb87af9320 '__unbuffered_cnt' 'int'
|   |   `-IntegerLiteral 0x55cb87b01c38 <col:41> 'int' 1
|   |-CallExpr 0x55cb87b01ce8 <line:769:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x55cb87b01cd0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55cb87b01cb0 <col:3> 'void ()' Function 0x55cb87aa0060 '__VERIFIER_atomic_end' 'void ()'
|   `-ReturnStmt 0x55cb87b01d60 <line:770:3, col:36>
|     `-CallExpr 0x55cb87b01d40 <col:10, col:36> 'void *'
|       `-ImplicitCastExpr 0x55cb87b01d28 <col:10> 'void *(*)(void)' <FunctionToPointerDecay>
|         `-DeclRefExpr 0x55cb87b01d08 <col:10> 'void *(void)' Function 0x55cb87a9fab8 '__VERIFIER_nondet_pointer' 'void *(void)'
|-FunctionDecl 0x55cb87b01f58 prev 0x55cb87af8fa0 <line:772:1, line:800:1> line:772:8 used P2 'void *(void *)'
| |-ParmVarDecl 0x55cb87b01ec0 <col:11, col:17> col:17 arg 'void *'
| `-CompoundStmt 0x55cb87b03708 <line:773:1, line:800:1>
|   |-CallExpr 0x55cb87b02038 <line:774:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x55cb87b02020 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55cb87b02000 <col:3> 'void ()' Function 0x55cb87a9ffa0 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x55cb87b020b0 <line:775:3, col:15> 'int' '='
|   | |-DeclRefExpr 0x55cb87b02058 <col:3> 'int' lvalue Var 0x55cb87af9ed8 'x$w_buff1' 'int'
|   | `-ImplicitCastExpr 0x55cb87b02098 <col:15> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x55cb87b02078 <col:15> 'int' lvalue Var 0x55cb87af9de0 'x$w_buff0' 'int'
|   |-BinaryOperator 0x55cb87b02110 <line:776:3, col:15> 'int' '='
|   | |-DeclRefExpr 0x55cb87b020d0 <col:3> 'int' lvalue Var 0x55cb87af9de0 'x$w_buff0' 'int'
|   | `-IntegerLiteral 0x55cb87b020f0 <col:15> 'int' 2
|   |-BinaryOperator 0x55cb87b02188 <line:777:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x55cb87b02130 <col:3> '_Bool' lvalue Var 0x55cb87af9f50 'x$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x55cb87b02170 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x55cb87b02150 <col:20> '_Bool' lvalue Var 0x55cb87af9e58 'x$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x55cb87b02220 <line:778:3, col:27> '_Bool' '='
|   | |-DeclRefExpr 0x55cb87b021a8 <col:3> '_Bool' lvalue Var 0x55cb87af9e58 'x$w_buff0_used' '_Bool'
|   | `-CStyleCastExpr 0x55cb87b021f8 <col:20, col:27> '_Bool' <IntegralToBoolean>
|   |   `-IntegerLiteral 0x55cb87b021c8 <col:27> 'int' 1
|   |-CallExpr 0x55cb87b023a8 <line:779:3, col:56> 'void'
|   | |-ImplicitCastExpr 0x55cb87b02390 <col:3> 'void (*)(int)' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x55cb87b02240 <col:3> 'void (int)' Function 0x55cb87a9fd28 '__VERIFIER_assert' 'void (int)'
|   | `-UnaryOperator 0x55cb87b02340 <col:21, col:55> 'int' prefix '!' cannot overflow
|   |   `-ParenExpr 0x55cb87b02320 <col:22, col:55> 'int'
|   |     `-BinaryOperator 0x55cb87b02300 <col:23, col:41> 'int' '&&'
|   |       |-ImplicitCastExpr 0x55cb87b022b8 <col:23> 'int' <IntegralCast>
|   |       | `-ImplicitCastExpr 0x55cb87b022a0 <col:23> '_Bool' <LValueToRValue>
|   |       |   `-DeclRefExpr 0x55cb87b02260 <col:23> '_Bool' lvalue Var 0x55cb87af9f50 'x$w_buff1_used' '_Bool'
|   |       `-ImplicitCastExpr 0x55cb87b022e8 <col:41> 'int' <IntegralCast>
|   |         `-ImplicitCastExpr 0x55cb87b022d0 <col:41> '_Bool' <LValueToRValue>
|   |           `-DeclRefExpr 0x55cb87b02280 <col:41> '_Bool' lvalue Var 0x55cb87af9e58 'x$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x55cb87b02428 <line:780:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x55cb87b023d0 <col:3> '_Bool' lvalue Var 0x55cb87af9b00 'x$r_buff1_thd0' '_Bool'
|   | `-ImplicitCastExpr 0x55cb87b02410 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x55cb87b023f0 <col:20> '_Bool' lvalue Var 0x55cb87af9900 'x$r_buff0_thd0' '_Bool'
|   |-BinaryOperator 0x55cb87b024a0 <line:781:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x55cb87b02448 <col:3> '_Bool' lvalue Var 0x55cb87af9b78 'x$r_buff1_thd1' '_Bool'
|   | `-ImplicitCastExpr 0x55cb87b02488 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x55cb87b02468 <col:20> '_Bool' lvalue Var 0x55cb87af9978 'x$r_buff0_thd1' '_Bool'
|   |-BinaryOperator 0x55cb87b02518 <line:782:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x55cb87b024c0 <col:3> '_Bool' lvalue Var 0x55cb87af9bf0 'x$r_buff1_thd2' '_Bool'
|   | `-ImplicitCastExpr 0x55cb87b02500 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x55cb87b024e0 <col:20> '_Bool' lvalue Var 0x55cb87af99f0 'x$r_buff0_thd2' '_Bool'
|   |-BinaryOperator 0x55cb87b02590 <line:783:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x55cb87b02538 <col:3> '_Bool' lvalue Var 0x55cb87af9c68 'x$r_buff1_thd3' '_Bool'
|   | `-ImplicitCastExpr 0x55cb87b02578 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x55cb87b02558 <col:20> '_Bool' lvalue Var 0x55cb87af9a68 'x$r_buff0_thd3' '_Bool'
|   |-BinaryOperator 0x55cb87b02628 <line:784:3, col:27> '_Bool' '='
|   | |-DeclRefExpr 0x55cb87b025b0 <col:3> '_Bool' lvalue Var 0x55cb87af9a68 'x$r_buff0_thd3' '_Bool'
|   | `-CStyleCastExpr 0x55cb87b02600 <col:20, col:27> '_Bool' <IntegralToBoolean>
|   |   `-IntegerLiteral 0x55cb87b025d0 <col:27> 'int' 1
|   |-CallExpr 0x55cb87b02680 <line:785:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x55cb87b02668 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55cb87b02648 <col:3> 'void ()' Function 0x55cb87aa0060 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x55cb87b026d8 <line:786:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x55cb87b026c0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55cb87b026a0 <col:3> 'void ()' Function 0x55cb87a9ffa0 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x55cb87b02738 <line:787:3, col:7> 'int' '='
|   | |-DeclRefExpr 0x55cb87b026f8 <col:3> 'int' lvalue Var 0x55cb87afa050 'y' 'int'
|   | `-IntegerLiteral 0x55cb87b02718 <col:7> 'int' 1
|   |-CallExpr 0x55cb87b02790 <line:788:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x55cb87b02778 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55cb87b02758 <col:3> 'void ()' Function 0x55cb87aa0060 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x55cb87b027e8 <line:789:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x55cb87b027d0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55cb87b027b0 <col:3> 'void ()' Function 0x55cb87a9ffa0 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x55cb87b02ad0 <line:790:3, col:103> 'int' '='
|   | |-DeclRefExpr 0x55cb87b02808 <col:3> 'int' lvalue Var 0x55cb87af9770 'x' 'int'
|   | `-ConditionalOperator 0x55cb87b02aa0 <col:7, col:103> 'int'
|   |   |-BinaryOperator 0x55cb87b028c8 <col:7, col:25> 'int' '&&'
|   |   | |-ImplicitCastExpr 0x55cb87b02880 <col:7> 'int' <IntegralCast>
|   |   | | `-ImplicitCastExpr 0x55cb87b02868 <col:7> '_Bool' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x55cb87b02828 <col:7> '_Bool' lvalue Var 0x55cb87af9e58 'x$w_buff0_used' '_Bool'
|   |   | `-ImplicitCastExpr 0x55cb87b028b0 <col:25> 'int' <IntegralCast>
|   |   |   `-ImplicitCastExpr 0x55cb87b02898 <col:25> '_Bool' <LValueToRValue>
|   |   |     `-DeclRefExpr 0x55cb87b02848 <col:25> '_Bool' lvalue Var 0x55cb87af9a68 'x$r_buff0_thd3' '_Bool'
|   |   |-ImplicitCastExpr 0x55cb87b02a88 <col:42> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x55cb87b028e8 <col:42> 'int' lvalue Var 0x55cb87af9de0 'x$w_buff0' 'int'
|   |   `-ParenExpr 0x55cb87b02a68 <col:54, col:103> 'int'
|   |     `-ConditionalOperator 0x55cb87b02a38 <col:55, col:102> 'int'
|   |       |-BinaryOperator 0x55cb87b029a8 <col:55, col:73> 'int' '&&'
|   |       | |-ImplicitCastExpr 0x55cb87b02960 <col:55> 'int' <IntegralCast>
|   |       | | `-ImplicitCastExpr 0x55cb87b02948 <col:55> '_Bool' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x55cb87b02908 <col:55> '_Bool' lvalue Var 0x55cb87af9f50 'x$w_buff1_used' '_Bool'
|   |       | `-ImplicitCastExpr 0x55cb87b02990 <col:73> 'int' <IntegralCast>
|   |       |   `-ImplicitCastExpr 0x55cb87b02978 <col:73> '_Bool' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x55cb87b02928 <col:73> '_Bool' lvalue Var 0x55cb87af9c68 'x$r_buff1_thd3' '_Bool'
|   |       |-ImplicitCastExpr 0x55cb87b02a08 <col:90> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x55cb87b029c8 <col:90> 'int' lvalue Var 0x55cb87af9ed8 'x$w_buff1' 'int'
|   |       `-ImplicitCastExpr 0x55cb87b02a20 <col:102> 'int' <LValueToRValue>
|   |         `-DeclRefExpr 0x55cb87b029e8 <col:102> 'int' lvalue Var 0x55cb87af9770 'x' 'int'
|   |-BinaryOperator 0x55cb87b02ce8 <line:791:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x55cb87b02af0 <col:3> '_Bool' lvalue Var 0x55cb87af9e58 'x$w_buff0_used' '_Bool'
|   | `-ImplicitCastExpr 0x55cb87b02cd0 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55cb87b02ca0 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x55cb87b02bc0 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x55cb87b02b68 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x55cb87b02b50 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x55cb87b02b10 <col:20> '_Bool' lvalue Var 0x55cb87af9e58 'x$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x55cb87b02ba8 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x55cb87b02b90 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x55cb87b02b30 <col:38> '_Bool' lvalue Var 0x55cb87af9a68 'x$r_buff0_thd3' '_Bool'
|   |     |-ImplicitCastExpr 0x55cb87b02c58 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x55cb87b02c10 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x55cb87b02be0 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x55cb87b02c88 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x55cb87b02c70 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x55cb87b02c38 <col:66> '_Bool' lvalue Var 0x55cb87af9e58 'x$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x55cb87b02fd0 <line:792:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x55cb87b02d08 <col:3> '_Bool' lvalue Var 0x55cb87af9f50 'x$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x55cb87b02fb8 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55cb87b02f88 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x55cb87b02ea8 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x55cb87b02dc8 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x55cb87b02d80 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x55cb87b02d68 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x55cb87b02d28 <col:20> '_Bool' lvalue Var 0x55cb87af9e58 'x$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x55cb87b02db0 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x55cb87b02d98 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x55cb87b02d48 <col:38> '_Bool' lvalue Var 0x55cb87af9a68 'x$r_buff0_thd3' '_Bool'
|   |     | `-BinaryOperator 0x55cb87b02e88 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x55cb87b02e40 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x55cb87b02e28 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x55cb87b02de8 <col:56> '_Bool' lvalue Var 0x55cb87af9f50 'x$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x55cb87b02e70 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x55cb87b02e58 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x55cb87b02e08 <col:74> '_Bool' lvalue Var 0x55cb87af9c68 'x$r_buff1_thd3' '_Bool'
|   |     |-ImplicitCastExpr 0x55cb87b02f40 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x55cb87b02ef8 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x55cb87b02ec8 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x55cb87b02f70 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x55cb87b02f58 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x55cb87b02f20 <col:102> '_Bool' lvalue Var 0x55cb87af9f50 'x$w_buff1_used' '_Bool'
|   |-BinaryOperator 0x55cb87b031d8 <line:793:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x55cb87b02ff0 <col:3> '_Bool' lvalue Var 0x55cb87af9a68 'x$r_buff0_thd3' '_Bool'
|   | `-ImplicitCastExpr 0x55cb87b031c0 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55cb87b03190 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x55cb87b030b0 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x55cb87b03068 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x55cb87b03050 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x55cb87b03010 <col:20> '_Bool' lvalue Var 0x55cb87af9e58 'x$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x55cb87b03098 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x55cb87b03080 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x55cb87b03030 <col:38> '_Bool' lvalue Var 0x55cb87af9a68 'x$r_buff0_thd3' '_Bool'
|   |     |-ImplicitCastExpr 0x55cb87b03148 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x55cb87b03100 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x55cb87b030d0 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x55cb87b03178 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x55cb87b03160 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x55cb87b03128 <col:66> '_Bool' lvalue Var 0x55cb87af9a68 'x$r_buff0_thd3' '_Bool'
|   |-BinaryOperator 0x55cb87b034c0 <line:794:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x55cb87b031f8 <col:3> '_Bool' lvalue Var 0x55cb87af9c68 'x$r_buff1_thd3' '_Bool'
|   | `-ImplicitCastExpr 0x55cb87b034a8 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55cb87b03478 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x55cb87b03398 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x55cb87b032b8 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x55cb87b03270 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x55cb87b03258 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x55cb87b03218 <col:20> '_Bool' lvalue Var 0x55cb87af9e58 'x$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x55cb87b032a0 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x55cb87b03288 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x55cb87b03238 <col:38> '_Bool' lvalue Var 0x55cb87af9a68 'x$r_buff0_thd3' '_Bool'
|   |     | `-BinaryOperator 0x55cb87b03378 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x55cb87b03330 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x55cb87b03318 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x55cb87b032d8 <col:56> '_Bool' lvalue Var 0x55cb87af9f50 'x$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x55cb87b03360 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x55cb87b03348 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x55cb87b032f8 <col:74> '_Bool' lvalue Var 0x55cb87af9c68 'x$r_buff1_thd3' '_Bool'
|   |     |-ImplicitCastExpr 0x55cb87b03430 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x55cb87b033e8 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x55cb87b033b8 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x55cb87b03460 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x55cb87b03448 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x55cb87b03410 <col:102> '_Bool' lvalue Var 0x55cb87af9c68 'x$r_buff1_thd3' '_Bool'
|   |-CallExpr 0x55cb87b03518 <line:795:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x55cb87b03500 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55cb87b034e0 <col:3> 'void ()' Function 0x55cb87aa0060 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x55cb87b03570 <line:796:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x55cb87b03558 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55cb87b03538 <col:3> 'void ()' Function 0x55cb87a9ffa0 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x55cb87b03628 <line:797:3, col:41> 'int' '='
|   | |-DeclRefExpr 0x55cb87b03590 <col:3> 'int' lvalue Var 0x55cb87af9320 '__unbuffered_cnt' 'int'
|   | `-BinaryOperator 0x55cb87b03608 <col:22, col:41> 'int' '+'
|   |   |-ImplicitCastExpr 0x55cb87b035f0 <col:22> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x55cb87b035b0 <col:22> 'int' lvalue Var 0x55cb87af9320 '__unbuffered_cnt' 'int'
|   |   `-IntegerLiteral 0x55cb87b035d0 <col:41> 'int' 1
|   |-CallExpr 0x55cb87b03680 <line:798:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x55cb87b03668 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55cb87b03648 <col:3> 'void ()' Function 0x55cb87aa0060 '__VERIFIER_atomic_end' 'void ()'
|   `-ReturnStmt 0x55cb87b036f8 <line:799:3, col:36>
|     `-CallExpr 0x55cb87b036d8 <col:10, col:36> 'void *'
|       `-ImplicitCastExpr 0x55cb87b036c0 <col:10> 'void *(*)(void)' <FunctionToPointerDecay>
|         `-DeclRefExpr 0x55cb87b036a0 <col:10> 'void *(void)' Function 0x55cb87a9fab8 '__VERIFIER_nondet_pointer' 'void *(void)'
|-FunctionDecl 0x55cb87b03808 prev 0x55cb87af9068 <line:801:1, line:803:1> line:801:6 fence 'void ()'
| `-CompoundStmt 0x55cb87b038a8 <line:802:1, line:803:1>
|-FunctionDecl 0x55cb87b038d8 prev 0x55cb87af9128 <line:804:1, line:806:1> line:804:6 isync 'void ()'
| `-CompoundStmt 0x55cb87b03978 <line:805:1, line:806:1>
|-FunctionDecl 0x55cb87b039a8 prev 0x55cb87af91e8 <line:807:1, line:809:1> line:807:6 lwfence 'void ()'
| `-CompoundStmt 0x55cb87b03a48 <line:808:1, line:809:1>
`-FunctionDecl 0x55cb87b03ab8 <line:810:1, line:847:1> line:810:5 main 'int ()'
  `-CompoundStmt 0x55cb87b08138 <line:811:1, line:847:1>
    |-DeclStmt 0x55cb87b03c08 <line:812:3, col:18>
    | `-VarDecl 0x55cb87b03ba0 <col:3, col:13> col:13 used t2545 'pthread_t':'unsigned long'
    |-CallExpr 0x55cb87b03e18 <line:813:3, col:54> 'int'
    | |-ImplicitCastExpr 0x55cb87b03e00 <col:3> 'int (*)(pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x55cb87b03c20 <col:3> 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' Function 0x55cb87ae05b8 'pthread_create' 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)'
    | |-UnaryOperator 0x55cb87b03c60 <col:18, col:19> 'pthread_t *' prefix '&' cannot overflow
    | | `-DeclRefExpr 0x55cb87b03c40 <col:19> 'pthread_t':'unsigned long' lvalue Var 0x55cb87b03ba0 't2545' 'pthread_t':'unsigned long'
    | |-ImplicitCastExpr 0x55cb87b03e58 <col:26, col:36> 'const pthread_attr_t *' <NullToPointer>
    | | `-ParenExpr 0x55cb87b03cd8 <col:26, col:36> 'void *'
    | |   `-CStyleCastExpr 0x55cb87b03cb0 <col:27, col:35> 'void *' <NullToPointer>
    | |     `-IntegerLiteral 0x55cb87b03c78 <col:35> 'int' 0
    | |-ImplicitCastExpr 0x55cb87b03e70 <col:39> 'void *(*)(void *)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x55cb87b03cf8 <col:39> 'void *(void *)' Function 0x55cb87afa278 'P0' 'void *(void *)'
    | `-ParenExpr 0x55cb87b03d78 <col:43, col:53> 'void *'
    |   `-CStyleCastExpr 0x55cb87b03d50 <col:44, col:52> 'void *' <NullToPointer>
    |     `-IntegerLiteral 0x55cb87b03d18 <col:52> 'int' 0
    |-DeclStmt 0x55cb87b03f00 <line:814:3, col:18>
    | `-VarDecl 0x55cb87b03e98 <col:3, col:13> col:13 used t2546 'pthread_t':'unsigned long'
    |-CallExpr 0x55cb87b040a8 <line:815:3, col:54> 'int'
    | |-ImplicitCastExpr 0x55cb87b04090 <col:3> 'int (*)(pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x55cb87b03f18 <col:3> 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' Function 0x55cb87ae05b8 'pthread_create' 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)'
    | |-UnaryOperator 0x55cb87b03f58 <col:18, col:19> 'pthread_t *' prefix '&' cannot overflow
    | | `-DeclRefExpr 0x55cb87b03f38 <col:19> 'pthread_t':'unsigned long' lvalue Var 0x55cb87b03e98 't2546' 'pthread_t':'unsigned long'
    | |-ImplicitCastExpr 0x55cb87b040e8 <col:26, col:36> 'const pthread_attr_t *' <NullToPointer>
    | | `-ParenExpr 0x55cb87b03fd0 <col:26, col:36> 'void *'
    | |   `-CStyleCastExpr 0x55cb87b03fa8 <col:27, col:35> 'void *' <NullToPointer>
    | |     `-IntegerLiteral 0x55cb87b03f70 <col:35> 'int' 0
    | |-ImplicitCastExpr 0x55cb87b04100 <col:39> 'void *(*)(void *)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x55cb87b03ff0 <col:39> 'void *(void *)' Function 0x55cb87afd430 'P1' 'void *(void *)'
    | `-ParenExpr 0x55cb87b04070 <col:43, col:53> 'void *'
    |   `-CStyleCastExpr 0x55cb87b04048 <col:44, col:52> 'void *' <NullToPointer>
    |     `-IntegerLiteral 0x55cb87b04010 <col:52> 'int' 0
    |-DeclStmt 0x55cb87b04190 <line:816:3, col:18>
    | `-VarDecl 0x55cb87b04128 <col:3, col:13> col:13 used t2547 'pthread_t':'unsigned long'
    |-CallExpr 0x55cb87b04338 <line:817:3, col:54> 'int'
    | |-ImplicitCastExpr 0x55cb87b04320 <col:3> 'int (*)(pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x55cb87b041a8 <col:3> 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' Function 0x55cb87ae05b8 'pthread_create' 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)'
    | |-UnaryOperator 0x55cb87b041e8 <col:18, col:19> 'pthread_t *' prefix '&' cannot overflow
    | | `-DeclRefExpr 0x55cb87b041c8 <col:19> 'pthread_t':'unsigned long' lvalue Var 0x55cb87b04128 't2547' 'pthread_t':'unsigned long'
    | |-ImplicitCastExpr 0x55cb87b04378 <col:26, col:36> 'const pthread_attr_t *' <NullToPointer>
    | | `-ParenExpr 0x55cb87b04260 <col:26, col:36> 'void *'
    | |   `-CStyleCastExpr 0x55cb87b04238 <col:27, col:35> 'void *' <NullToPointer>
    | |     `-IntegerLiteral 0x55cb87b04200 <col:35> 'int' 0
    | |-ImplicitCastExpr 0x55cb87b04390 <col:39> 'void *(*)(void *)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x55cb87b04280 <col:39> 'void *(void *)' Function 0x55cb87b01f58 'P2' 'void *(void *)'
    | `-ParenExpr 0x55cb87b04300 <col:43, col:53> 'void *'
    |   `-CStyleCastExpr 0x55cb87b042d8 <col:44, col:52> 'void *' <NullToPointer>
    |     `-IntegerLiteral 0x55cb87b042a0 <col:52> 'int' 0
    |-CallExpr 0x55cb87b043e0 <line:818:3, col:27> 'void'
    | `-ImplicitCastExpr 0x55cb87b043c8 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x55cb87b043a8 <col:3> 'void ()' Function 0x55cb87a9ffa0 '__VERIFIER_atomic_begin' 'void ()'
    |-BinaryOperator 0x55cb87b044b0 <line:819:3, col:41> '_Bool' '='
    | |-DeclRefExpr 0x55cb87b04400 <col:3> '_Bool' lvalue Var 0x55cb87af95f8 'main$tmp_guard0' '_Bool'
    | `-ImplicitCastExpr 0x55cb87b04498 <col:21, col:41> '_Bool' <IntegralToBoolean>
    |   `-BinaryOperator 0x55cb87b04478 <col:21, col:41> 'int' '=='
    |     |-ImplicitCastExpr 0x55cb87b04460 <col:21> 'int' <LValueToRValue>
    |     | `-DeclRefExpr 0x55cb87b04420 <col:21> 'int' lvalue Var 0x55cb87af9320 '__unbuffered_cnt' 'int'
    |     `-IntegerLiteral 0x55cb87b04440 <col:41> 'int' 3
    |-CallExpr 0x55cb87b04508 <line:820:3, col:25> 'void'
    | `-ImplicitCastExpr 0x55cb87b044f0 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x55cb87b044d0 <col:3> 'void ()' Function 0x55cb87aa0060 '__VERIFIER_atomic_end' 'void ()'
    |-CallExpr 0x55cb87b04580 <line:821:3, col:36> 'void'
    | |-ImplicitCastExpr 0x55cb87b04568 <col:3> 'void (*)(int)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x55cb87b04528 <col:3> 'void (int)' Function 0x55cb87a9f940 '__VERIFIER_assume' 'void (int)'
    | `-ImplicitCastExpr 0x55cb87b045c0 <col:21> 'int' <IntegralCast>
    |   `-ImplicitCastExpr 0x55cb87b045a8 <col:21> '_Bool' <LValueToRValue>
    |     `-DeclRefExpr 0x55cb87b04548 <col:21> '_Bool' lvalue Var 0x55cb87af95f8 'main$tmp_guard0' '_Bool'
    |-CallExpr 0x55cb87b04610 <line:822:3, col:27> 'void'
    | `-ImplicitCastExpr 0x55cb87b045f8 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x55cb87b045d8 <col:3> 'void ()' Function 0x55cb87a9ffa0 '__VERIFIER_atomic_begin' 'void ()'
    |-BinaryOperator 0x55cb87b048f8 <line:823:3, col:103> 'int' '='
    | |-DeclRefExpr 0x55cb87b04630 <col:3> 'int' lvalue Var 0x55cb87af9770 'x' 'int'
    | `-ConditionalOperator 0x55cb87b048c8 <col:7, col:103> 'int'
    |   |-BinaryOperator 0x55cb87b046f0 <col:7, col:25> 'int' '&&'
    |   | |-ImplicitCastExpr 0x55cb87b046a8 <col:7> 'int' <IntegralCast>
    |   | | `-ImplicitCastExpr 0x55cb87b04690 <col:7> '_Bool' <LValueToRValue>
    |   | |   `-DeclRefExpr 0x55cb87b04650 <col:7> '_Bool' lvalue Var 0x55cb87af9e58 'x$w_buff0_used' '_Bool'
    |   | `-ImplicitCastExpr 0x55cb87b046d8 <col:25> 'int' <IntegralCast>
    |   |   `-ImplicitCastExpr 0x55cb87b046c0 <col:25> '_Bool' <LValueToRValue>
    |   |     `-DeclRefExpr 0x55cb87b04670 <col:25> '_Bool' lvalue Var 0x55cb87af9900 'x$r_buff0_thd0' '_Bool'
    |   |-ImplicitCastExpr 0x55cb87b048b0 <col:42> 'int' <LValueToRValue>
    |   | `-DeclRefExpr 0x55cb87b04710 <col:42> 'int' lvalue Var 0x55cb87af9de0 'x$w_buff0' 'int'
    |   `-ParenExpr 0x55cb87b04890 <col:54, col:103> 'int'
    |     `-ConditionalOperator 0x55cb87b04860 <col:55, col:102> 'int'
    |       |-BinaryOperator 0x55cb87b047d0 <col:55, col:73> 'int' '&&'
    |       | |-ImplicitCastExpr 0x55cb87b04788 <col:55> 'int' <IntegralCast>
    |       | | `-ImplicitCastExpr 0x55cb87b04770 <col:55> '_Bool' <LValueToRValue>
    |       | |   `-DeclRefExpr 0x55cb87b04730 <col:55> '_Bool' lvalue Var 0x55cb87af9f50 'x$w_buff1_used' '_Bool'
    |       | `-ImplicitCastExpr 0x55cb87b047b8 <col:73> 'int' <IntegralCast>
    |       |   `-ImplicitCastExpr 0x55cb87b047a0 <col:73> '_Bool' <LValueToRValue>
    |       |     `-DeclRefExpr 0x55cb87b04750 <col:73> '_Bool' lvalue Var 0x55cb87af9b00 'x$r_buff1_thd0' '_Bool'
    |       |-ImplicitCastExpr 0x55cb87b04830 <col:90> 'int' <LValueToRValue>
    |       | `-DeclRefExpr 0x55cb87b047f0 <col:90> 'int' lvalue Var 0x55cb87af9ed8 'x$w_buff1' 'int'
    |       `-ImplicitCastExpr 0x55cb87b04848 <col:102> 'int' <LValueToRValue>
    |         `-DeclRefExpr 0x55cb87b04810 <col:102> 'int' lvalue Var 0x55cb87af9770 'x' 'int'
    |-BinaryOperator 0x55cb87b04b00 <line:824:3, col:66> '_Bool' '='
    | |-DeclRefExpr 0x55cb87b04918 <col:3> '_Bool' lvalue Var 0x55cb87af9e58 'x$w_buff0_used' '_Bool'
    | `-ImplicitCastExpr 0x55cb87b04ae8 <col:20, col:66> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x55cb87b04ab8 <col:20, col:66> 'int'
    |     |-BinaryOperator 0x55cb87b049d8 <col:20, col:38> 'int' '&&'
    |     | |-ImplicitCastExpr 0x55cb87b04990 <col:20> 'int' <IntegralCast>
    |     | | `-ImplicitCastExpr 0x55cb87b04978 <col:20> '_Bool' <LValueToRValue>
    |     | |   `-DeclRefExpr 0x55cb87b04938 <col:20> '_Bool' lvalue Var 0x55cb87af9e58 'x$w_buff0_used' '_Bool'
    |     | `-ImplicitCastExpr 0x55cb87b049c0 <col:38> 'int' <IntegralCast>
    |     |   `-ImplicitCastExpr 0x55cb87b049a8 <col:38> '_Bool' <LValueToRValue>
    |     |     `-DeclRefExpr 0x55cb87b04958 <col:38> '_Bool' lvalue Var 0x55cb87af9900 'x$r_buff0_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x55cb87b04a70 <col:55, col:62> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x55cb87b04a28 <col:55, col:62> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x55cb87b049f8 <col:62> 'int' 0
    |     `-ImplicitCastExpr 0x55cb87b04aa0 <col:66> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x55cb87b04a88 <col:66> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x55cb87b04a50 <col:66> '_Bool' lvalue Var 0x55cb87af9e58 'x$w_buff0_used' '_Bool'
    |-BinaryOperator 0x55cb87b04e00 <line:825:3, col:102> '_Bool' '='
    | |-DeclRefExpr 0x55cb87b04b20 <col:3> '_Bool' lvalue Var 0x55cb87af9f50 'x$w_buff1_used' '_Bool'
    | `-ImplicitCastExpr 0x55cb87b04de8 <col:20, col:102> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x55cb87b04db8 <col:20, col:102> 'int'
    |     |-BinaryOperator 0x55cb87b04cd8 <col:20, col:74> 'int' '||'
    |     | |-BinaryOperator 0x55cb87b04bf8 <col:20, col:38> 'int' '&&'
    |     | | |-ImplicitCastExpr 0x55cb87b04bb0 <col:20> 'int' <IntegralCast>
    |     | | | `-ImplicitCastExpr 0x55cb87b04b80 <col:20> '_Bool' <LValueToRValue>
    |     | | |   `-DeclRefExpr 0x55cb87b04b40 <col:20> '_Bool' lvalue Var 0x55cb87af9e58 'x$w_buff0_used' '_Bool'
    |     | | `-ImplicitCastExpr 0x55cb87b04be0 <col:38> 'int' <IntegralCast>
    |     | |   `-ImplicitCastExpr 0x55cb87b04bc8 <col:38> '_Bool' <LValueToRValue>
    |     | |     `-DeclRefExpr 0x55cb87b04b60 <col:38> '_Bool' lvalue Var 0x55cb87af9900 'x$r_buff0_thd0' '_Bool'
    |     | `-BinaryOperator 0x55cb87b04cb8 <col:56, col:74> 'int' '&&'
    |     |   |-ImplicitCastExpr 0x55cb87b04c70 <col:56> 'int' <IntegralCast>
    |     |   | `-ImplicitCastExpr 0x55cb87b04c58 <col:56> '_Bool' <LValueToRValue>
    |     |   |   `-DeclRefExpr 0x55cb87b04c18 <col:56> '_Bool' lvalue Var 0x55cb87af9f50 'x$w_buff1_used' '_Bool'
    |     |   `-ImplicitCastExpr 0x55cb87b04ca0 <col:74> 'int' <IntegralCast>
    |     |     `-ImplicitCastExpr 0x55cb87b04c88 <col:74> '_Bool' <LValueToRValue>
    |     |       `-DeclRefExpr 0x55cb87b04c38 <col:74> '_Bool' lvalue Var 0x55cb87af9b00 'x$r_buff1_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x55cb87b04d70 <col:91, col:98> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x55cb87b04d28 <col:91, col:98> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x55cb87b04cf8 <col:98> 'int' 0
    |     `-ImplicitCastExpr 0x55cb87b04da0 <col:102> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x55cb87b04d88 <col:102> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x55cb87b04d50 <col:102> '_Bool' lvalue Var 0x55cb87af9f50 'x$w_buff1_used' '_Bool'
    |-BinaryOperator 0x55cb87b05008 <line:826:3, col:66> '_Bool' '='
    | |-DeclRefExpr 0x55cb87b04e20 <col:3> '_Bool' lvalue Var 0x55cb87af9900 'x$r_buff0_thd0' '_Bool'
    | `-ImplicitCastExpr 0x55cb87b04ff0 <col:20, col:66> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x55cb87b04fc0 <col:20, col:66> 'int'
    |     |-BinaryOperator 0x55cb87b04ee0 <col:20, col:38> 'int' '&&'
    |     | |-ImplicitCastExpr 0x55cb87b04e98 <col:20> 'int' <IntegralCast>
    |     | | `-ImplicitCastExpr 0x55cb87b04e80 <col:20> '_Bool' <LValueToRValue>
    |     | |   `-DeclRefExpr 0x55cb87b04e40 <col:20> '_Bool' lvalue Var 0x55cb87af9e58 'x$w_buff0_used' '_Bool'
    |     | `-ImplicitCastExpr 0x55cb87b04ec8 <col:38> 'int' <IntegralCast>
    |     |   `-ImplicitCastExpr 0x55cb87b04eb0 <col:38> '_Bool' <LValueToRValue>
    |     |     `-DeclRefExpr 0x55cb87b04e60 <col:38> '_Bool' lvalue Var 0x55cb87af9900 'x$r_buff0_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x55cb87b04f78 <col:55, col:62> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x55cb87b04f30 <col:55, col:62> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x55cb87b04f00 <col:62> 'int' 0
    |     `-ImplicitCastExpr 0x55cb87b04fa8 <col:66> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x55cb87b04f90 <col:66> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x55cb87b04f58 <col:66> '_Bool' lvalue Var 0x55cb87af9900 'x$r_buff0_thd0' '_Bool'
    |-BinaryOperator 0x55cb87b052f0 <line:827:3, col:102> '_Bool' '='
    | |-DeclRefExpr 0x55cb87b05028 <col:3> '_Bool' lvalue Var 0x55cb87af9b00 'x$r_buff1_thd0' '_Bool'
    | `-ImplicitCastExpr 0x55cb87b052d8 <col:20, col:102> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x55cb87b052a8 <col:20, col:102> 'int'
    |     |-BinaryOperator 0x55cb87b051c8 <col:20, col:74> 'int' '||'
    |     | |-BinaryOperator 0x55cb87b050e8 <col:20, col:38> 'int' '&&'
    |     | | |-ImplicitCastExpr 0x55cb87b050a0 <col:20> 'int' <IntegralCast>
    |     | | | `-ImplicitCastExpr 0x55cb87b05088 <col:20> '_Bool' <LValueToRValue>
    |     | | |   `-DeclRefExpr 0x55cb87b05048 <col:20> '_Bool' lvalue Var 0x55cb87af9e58 'x$w_buff0_used' '_Bool'
    |     | | `-ImplicitCastExpr 0x55cb87b050d0 <col:38> 'int' <IntegralCast>
    |     | |   `-ImplicitCastExpr 0x55cb87b050b8 <col:38> '_Bool' <LValueToRValue>
    |     | |     `-DeclRefExpr 0x55cb87b05068 <col:38> '_Bool' lvalue Var 0x55cb87af9900 'x$r_buff0_thd0' '_Bool'
    |     | `-BinaryOperator 0x55cb87b051a8 <col:56, col:74> 'int' '&&'
    |     |   |-ImplicitCastExpr 0x55cb87b05160 <col:56> 'int' <IntegralCast>
    |     |   | `-ImplicitCastExpr 0x55cb87b05148 <col:56> '_Bool' <LValueToRValue>
    |     |   |   `-DeclRefExpr 0x55cb87b05108 <col:56> '_Bool' lvalue Var 0x55cb87af9f50 'x$w_buff1_used' '_Bool'
    |     |   `-ImplicitCastExpr 0x55cb87b05190 <col:74> 'int' <IntegralCast>
    |     |     `-ImplicitCastExpr 0x55cb87b05178 <col:74> '_Bool' <LValueToRValue>
    |     |       `-DeclRefExpr 0x55cb87b05128 <col:74> '_Bool' lvalue Var 0x55cb87af9b00 'x$r_buff1_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x55cb87b05260 <col:91, col:98> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x55cb87b05218 <col:91, col:98> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x55cb87b051e8 <col:98> 'int' 0
    |     `-ImplicitCastExpr 0x55cb87b05290 <col:102> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x55cb87b05278 <col:102> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x55cb87b05240 <col:102> '_Bool' lvalue Var 0x55cb87af9b00 'x$r_buff1_thd0' '_Bool'
    |-CallExpr 0x55cb87b05348 <line:828:3, col:25> 'void'
    | `-ImplicitCastExpr 0x55cb87b05330 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x55cb87b05310 <col:3> 'void ()' Function 0x55cb87aa0060 '__VERIFIER_atomic_end' 'void ()'
    |-CallExpr 0x55cb87b053a0 <line:829:3, col:27> 'void'
    | `-ImplicitCastExpr 0x55cb87b05388 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x55cb87b05368 <col:3> 'void ()' Function 0x55cb87a9ffa0 '__VERIFIER_atomic_begin' 'void ()'
    |-BinaryOperator 0x55cb87b05438 <line:830:3, col:42> '_Bool' '='
    | |-DeclRefExpr 0x55cb87b053c0 <col:3> '_Bool' lvalue Var 0x55cb87afa0e8 'weak$$choice0' '_Bool'
    | `-CallExpr 0x55cb87b05418 <col:19, col:42> '_Bool'
    |   `-ImplicitCastExpr 0x55cb87b05400 <col:19> '_Bool (*)(void)' <FunctionToPointerDecay>
    |     `-DeclRefExpr 0x55cb87b053e0 <col:19> '_Bool (void)' Function 0x55cb87a9f770 '__VERIFIER_nondet_bool' '_Bool (void)'
    |-BinaryOperator 0x55cb87b054d0 <line:831:3, col:42> '_Bool' '='
    | |-DeclRefExpr 0x55cb87b05458 <col:3> '_Bool' lvalue Var 0x55cb87afa160 'weak$$choice2' '_Bool'
    | `-CallExpr 0x55cb87b054b0 <col:19, col:42> '_Bool'
    |   `-ImplicitCastExpr 0x55cb87b05498 <col:19> '_Bool (*)(void)' <FunctionToPointerDecay>
    |     `-DeclRefExpr 0x55cb87b05478 <col:19> '_Bool (void)' Function 0x55cb87a9f770 '__VERIFIER_nondet_bool' '_Bool (void)'
    |-BinaryOperator 0x55cb87b05548 <line:832:3, col:21> '_Bool' '='
    | |-DeclRefExpr 0x55cb87b054f0 <col:3> '_Bool' lvalue Var 0x55cb87af9808 'x$flush_delayed' '_Bool'
    | `-ImplicitCastExpr 0x55cb87b05530 <col:21> '_Bool' <LValueToRValue>
    |   `-DeclRefExpr 0x55cb87b05510 <col:21> '_Bool' lvalue Var 0x55cb87afa160 'weak$$choice2' '_Bool'
    |-BinaryOperator 0x55cb87b055c0 <line:833:3, col:15> 'int' '='
    | |-DeclRefExpr 0x55cb87b05568 <col:3> 'int' lvalue Var 0x55cb87af9888 'x$mem_tmp' 'int'
    | `-ImplicitCastExpr 0x55cb87b055a8 <col:15> 'int' <LValueToRValue>
    |   `-DeclRefExpr 0x55cb87b05588 <col:15> 'int' lvalue Var 0x55cb87af9770 'x' 'int'
    |-BinaryOperator 0x55cb87b059f8 <line:834:3, col:162> 'int' '='
    | |-DeclRefExpr 0x55cb87b055e0 <col:3> 'int' lvalue Var 0x55cb87af9770 'x' 'int'
    | `-ConditionalOperator 0x55cb87b059c8 <col:7, col:162> 'int'
    |   |-BinaryOperator 0x55cb87b057f0 <col:7, col:84> 'int' '||'
    |   | |-BinaryOperator 0x55cb87b05710 <col:7, col:46> 'int' '||'
    |   | | |-UnaryOperator 0x55cb87b05638 <col:7, col:8> 'int' prefix '!' cannot overflow
    |   | | | `-ImplicitCastExpr 0x55cb87b05620 <col:8> '_Bool' <LValueToRValue>
    |   | | |   `-DeclRefExpr 0x55cb87b05600 <col:8> '_Bool' lvalue Var 0x55cb87af9e58 'x$w_buff0_used' '_Bool'
    |   | | `-BinaryOperator 0x55cb87b056f0 <col:26, col:46> 'int' '&&'
    |   | |   |-UnaryOperator 0x55cb87b05688 <col:26, col:27> 'int' prefix '!' cannot overflow
    |   | |   | `-ImplicitCastExpr 0x55cb87b05670 <col:27> '_Bool' <LValueToRValue>
    |   | |   |   `-DeclRefExpr 0x55cb87b05650 <col:27> '_Bool' lvalue Var 0x55cb87af9900 'x$r_buff0_thd0' '_Bool'
    |   | |   `-UnaryOperator 0x55cb87b056d8 <col:45, col:46> 'int' prefix '!' cannot overflow
    |   | |     `-ImplicitCastExpr 0x55cb87b056c0 <col:46> '_Bool' <LValueToRValue>
    |   | |       `-DeclRefExpr 0x55cb87b056a0 <col:46> '_Bool' lvalue Var 0x55cb87af9f50 'x$w_buff1_used' '_Bool'
    |   | `-BinaryOperator 0x55cb87b057d0 <col:64, col:84> 'int' '&&'
    |   |   |-UnaryOperator 0x55cb87b05768 <col:64, col:65> 'int' prefix '!' cannot overflow
    |   |   | `-ImplicitCastExpr 0x55cb87b05750 <col:65> '_Bool' <LValueToRValue>
    |   |   |   `-DeclRefExpr 0x55cb87b05730 <col:65> '_Bool' lvalue Var 0x55cb87af9900 'x$r_buff0_thd0' '_Bool'
    |   |   `-UnaryOperator 0x55cb87b057b8 <col:83, col:84> 'int' prefix '!' cannot overflow
    |   |     `-ImplicitCastExpr 0x55cb87b057a0 <col:84> '_Bool' <LValueToRValue>
    |   |       `-DeclRefExpr 0x55cb87b05780 <col:84> '_Bool' lvalue Var 0x55cb87af9b00 'x$r_buff1_thd0' '_Bool'
    |   |-ImplicitCastExpr 0x55cb87b059b0 <col:101> 'int' <LValueToRValue>
    |   | `-DeclRefExpr 0x55cb87b05810 <col:101> 'int' lvalue Var 0x55cb87af9770 'x' 'int'
    |   `-ParenExpr 0x55cb87b05990 <col:105, col:162> 'int'
    |     `-ConditionalOperator 0x55cb87b05960 <col:106, col:153> 'int'
    |       |-BinaryOperator 0x55cb87b058d0 <col:106, col:124> 'int' '&&'
    |       | |-ImplicitCastExpr 0x55cb87b05888 <col:106> 'int' <IntegralCast>
    |       | | `-ImplicitCastExpr 0x55cb87b05870 <col:106> '_Bool' <LValueToRValue>
    |       | |   `-DeclRefExpr 0x55cb87b05830 <col:106> '_Bool' lvalue Var 0x55cb87af9e58 'x$w_buff0_used' '_Bool'
    |       | `-ImplicitCastExpr 0x55cb87b058b8 <col:124> 'int' <IntegralCast>
    |       |   `-ImplicitCastExpr 0x55cb87b058a0 <col:124> '_Bool' <LValueToRValue>
    |       |     `-DeclRefExpr 0x55cb87b05850 <col:124> '_Bool' lvalue Var 0x55cb87af9900 'x$r_buff0_thd0' '_Bool'
    |       |-ImplicitCastExpr 0x55cb87b05930 <col:141> 'int' <LValueToRValue>
    |       | `-DeclRefExpr 0x55cb87b058f0 <col:141> 'int' lvalue Var 0x55cb87af9de0 'x$w_buff0' 'int'
    |       `-ImplicitCastExpr 0x55cb87b05948 <col:153> 'int' <LValueToRValue>
    |         `-DeclRefExpr 0x55cb87b05910 <col:153> 'int' lvalue Var 0x55cb87af9ed8 'x$w_buff1' 'int'
    |-BinaryOperator 0x55cb87b05f20 <line:835:3, col:208> 'int' '='
    | |-DeclRefExpr 0x55cb87b05a18 <col:3> 'int' lvalue Var 0x55cb87af9de0 'x$w_buff0' 'int'
    | `-ConditionalOperator 0x55cb87b05ef0 <col:15, col:208> 'int'
    |   |-ImplicitCastExpr 0x55cb87b05ec0 <col:15> 'int' <IntegralCast>
    |   | `-ImplicitCastExpr 0x55cb87b05ea8 <col:15> '_Bool' <LValueToRValue>
    |   |   `-DeclRefExpr 0x55cb87b05a38 <col:15> '_Bool' lvalue Var 0x55cb87afa160 'weak$$choice2' '_Bool'
    |   |-ImplicitCastExpr 0x55cb87b05ed8 <col:31> 'int' <LValueToRValue>
    |   | `-DeclRefExpr 0x55cb87b05a58 <col:31> 'int' lvalue Var 0x55cb87af9de0 'x$w_buff0' 'int'
    |   `-ParenExpr 0x55cb87b05e88 <col:43, col:208> 'int'
    |     `-ConditionalOperator 0x55cb87b05e58 <col:44, col:207> 'int'
    |       |-BinaryOperator 0x55cb87b05c80 <col:44, col:121> 'int' '||'
    |       | |-BinaryOperator 0x55cb87b05b88 <col:44, col:83> 'int' '||'
    |       | | |-UnaryOperator 0x55cb87b05ab0 <col:44, col:45> 'int' prefix '!' cannot overflow
    |       | | | `-ImplicitCastExpr 0x55cb87b05a98 <col:45> '_Bool' <LValueToRValue>
    |       | | |   `-DeclRefExpr 0x55cb87b05a78 <col:45> '_Bool' lvalue Var 0x55cb87af9e58 'x$w_buff0_used' '_Bool'
    |       | | `-BinaryOperator 0x55cb87b05b68 <col:63, col:83> 'int' '&&'
    |       | |   |-UnaryOperator 0x55cb87b05b00 <col:63, col:64> 'int' prefix '!' cannot overflow
    |       | |   | `-ImplicitCastExpr 0x55cb87b05ae8 <col:64> '_Bool' <LValueToRValue>
    |       | |   |   `-DeclRefExpr 0x55cb87b05ac8 <col:64> '_Bool' lvalue Var 0x55cb87af9900 'x$r_buff0_thd0' '_Bool'
    |       | |   `-UnaryOperator 0x55cb87b05b50 <col:82, col:83> 'int' prefix '!' cannot overflow
    |       | |     `-ImplicitCastExpr 0x55cb87b05b38 <col:83> '_Bool' <LValueToRValue>
    |       | |       `-DeclRefExpr 0x55cb87b05b18 <col:83> '_Bool' lvalue Var 0x55cb87af9f50 'x$w_buff1_used' '_Bool'
    |       | `-BinaryOperator 0x55cb87b05c60 <col:101, col:121> 'int' '&&'
    |       |   |-UnaryOperator 0x55cb87b05bf8 <col:101, col:102> 'int' prefix '!' cannot overflow
    |       |   | `-ImplicitCastExpr 0x55cb87b05be0 <col:102> '_Bool' <LValueToRValue>
    |       |   |   `-DeclRefExpr 0x55cb87b05bc0 <col:102> '_Bool' lvalue Var 0x55cb87af9900 'x$r_buff0_thd0' '_Bool'
    |       |   `-UnaryOperator 0x55cb87b05c48 <col:120, col:121> 'int' prefix '!' cannot overflow
    |       |     `-ImplicitCastExpr 0x55cb87b05c30 <col:121> '_Bool' <LValueToRValue>
    |       |       `-DeclRefExpr 0x55cb87b05c10 <col:121> '_Bool' lvalue Var 0x55cb87af9b00 'x$r_buff1_thd0' '_Bool'
    |       |-ImplicitCastExpr 0x55cb87b05e40 <col:138> 'int' <LValueToRValue>
    |       | `-DeclRefExpr 0x55cb87b05ca0 <col:138> 'int' lvalue Var 0x55cb87af9de0 'x$w_buff0' 'int'
    |       `-ParenExpr 0x55cb87b05e20 <col:150, col:207> 'int'
    |         `-ConditionalOperator 0x55cb87b05df0 <col:151, col:198> 'int'
    |           |-BinaryOperator 0x55cb87b05d60 <col:151, col:169> 'int' '&&'
    |           | |-ImplicitCastExpr 0x55cb87b05d18 <col:151> 'int' <IntegralCast>
    |           | | `-ImplicitCastExpr 0x55cb87b05d00 <col:151> '_Bool' <LValueToRValue>
    |           | |   `-DeclRefExpr 0x55cb87b05cc0 <col:151> '_Bool' lvalue Var 0x55cb87af9e58 'x$w_buff0_used' '_Bool'
    |           | `-ImplicitCastExpr 0x55cb87b05d48 <col:169> 'int' <IntegralCast>
    |           |   `-ImplicitCastExpr 0x55cb87b05d30 <col:169> '_Bool' <LValueToRValue>
    |           |     `-DeclRefExpr 0x55cb87b05ce0 <col:169> '_Bool' lvalue Var 0x55cb87af9900 'x$r_buff0_thd0' '_Bool'
    |           |-ImplicitCastExpr 0x55cb87b05dc0 <col:186> 'int' <LValueToRValue>
    |           | `-DeclRefExpr 0x55cb87b05d80 <col:186> 'int' lvalue Var 0x55cb87af9de0 'x$w_buff0' 'int'
    |           `-ImplicitCastExpr 0x55cb87b05dd8 <col:198> 'int' <LValueToRValue>
    |             `-DeclRefExpr 0x55cb87b05da0 <col:198> 'int' lvalue Var 0x55cb87af9de0 'x$w_buff0' 'int'
    |-BinaryOperator 0x55cb87b06430 <line:836:3, col:208> 'int' '='
    | |-DeclRefExpr 0x55cb87b05f40 <col:3> 'int' lvalue Var 0x55cb87af9ed8 'x$w_buff1' 'int'
    | `-ConditionalOperator 0x55cb87b06400 <col:15, col:208> 'int'
    |   |-ImplicitCastExpr 0x55cb87b063d0 <col:15> 'int' <IntegralCast>
    |   | `-ImplicitCastExpr 0x55cb87b063b8 <col:15> '_Bool' <LValueToRValue>
    |   |   `-DeclRefExpr 0x55cb87b05f60 <col:15> '_Bool' lvalue Var 0x55cb87afa160 'weak$$choice2' '_Bool'
    |   |-ImplicitCastExpr 0x55cb87b063e8 <col:31> 'int' <LValueToRValue>
    |   | `-DeclRefExpr 0x55cb87b05f80 <col:31> 'int' lvalue Var 0x55cb87af9ed8 'x$w_buff1' 'int'
    |   `-ParenExpr 0x55cb87b06398 <col:43, col:208> 'int'
    |     `-ConditionalOperator 0x55cb87b06368 <col:44, col:207> 'int'
    |       |-BinaryOperator 0x55cb87b06190 <col:44, col:121> 'int' '||'
    |       | |-BinaryOperator 0x55cb87b060b0 <col:44, col:83> 'int' '||'
    |       | | |-UnaryOperator 0x55cb87b05fd8 <col:44, col:45> 'int' prefix '!' cannot overflow
    |       | | | `-ImplicitCastExpr 0x55cb87b05fc0 <col:45> '_Bool' <LValueToRValue>
    |       | | |   `-DeclRefExpr 0x55cb87b05fa0 <col:45> '_Bool' lvalue Var 0x55cb87af9e58 'x$w_buff0_used' '_Bool'
    |       | | `-BinaryOperator 0x55cb87b06090 <col:63, col:83> 'int' '&&'
    |       | |   |-UnaryOperator 0x55cb87b06028 <col:63, col:64> 'int' prefix '!' cannot overflow
    |       | |   | `-ImplicitCastExpr 0x55cb87b06010 <col:64> '_Bool' <LValueToRValue>
    |       | |   |   `-DeclRefExpr 0x55cb87b05ff0 <col:64> '_Bool' lvalue Var 0x55cb87af9900 'x$r_buff0_thd0' '_Bool'
    |       | |   `-UnaryOperator 0x55cb87b06078 <col:82, col:83> 'int' prefix '!' cannot overflow
    |       | |     `-ImplicitCastExpr 0x55cb87b06060 <col:83> '_Bool' <LValueToRValue>
    |       | |       `-DeclRefExpr 0x55cb87b06040 <col:83> '_Bool' lvalue Var 0x55cb87af9f50 'x$w_buff1_used' '_Bool'
    |       | `-BinaryOperator 0x55cb87b06170 <col:101, col:121> 'int' '&&'
    |       |   |-UnaryOperator 0x55cb87b06108 <col:101, col:102> 'int' prefix '!' cannot overflow
    |       |   | `-ImplicitCastExpr 0x55cb87b060f0 <col:102> '_Bool' <LValueToRValue>
    |       |   |   `-DeclRefExpr 0x55cb87b060d0 <col:102> '_Bool' lvalue Var 0x55cb87af9900 'x$r_buff0_thd0' '_Bool'
    |       |   `-UnaryOperator 0x55cb87b06158 <col:120, col:121> 'int' prefix '!' cannot overflow
    |       |     `-ImplicitCastExpr 0x55cb87b06140 <col:121> '_Bool' <LValueToRValue>
    |       |       `-DeclRefExpr 0x55cb87b06120 <col:121> '_Bool' lvalue Var 0x55cb87af9b00 'x$r_buff1_thd0' '_Bool'
    |       |-ImplicitCastExpr 0x55cb87b06350 <col:138> 'int' <LValueToRValue>
    |       | `-DeclRefExpr 0x55cb87b061b0 <col:138> 'int' lvalue Var 0x55cb87af9ed8 'x$w_buff1' 'int'
    |       `-ParenExpr 0x55cb87b06330 <col:150, col:207> 'int'
    |         `-ConditionalOperator 0x55cb87b06300 <col:151, col:198> 'int'
    |           |-BinaryOperator 0x55cb87b06270 <col:151, col:169> 'int' '&&'
    |           | |-ImplicitCastExpr 0x55cb87b06228 <col:151> 'int' <IntegralCast>
    |           | | `-ImplicitCastExpr 0x55cb87b06210 <col:151> '_Bool' <LValueToRValue>
    |           | |   `-DeclRefExpr 0x55cb87b061d0 <col:151> '_Bool' lvalue Var 0x55cb87af9e58 'x$w_buff0_used' '_Bool'
    |           | `-ImplicitCastExpr 0x55cb87b06258 <col:169> 'int' <IntegralCast>
    |           |   `-ImplicitCastExpr 0x55cb87b06240 <col:169> '_Bool' <LValueToRValue>
    |           |     `-DeclRefExpr 0x55cb87b061f0 <col:169> '_Bool' lvalue Var 0x55cb87af9900 'x$r_buff0_thd0' '_Bool'
    |           |-ImplicitCastExpr 0x55cb87b062d0 <col:186> 'int' <LValueToRValue>
    |           | `-DeclRefExpr 0x55cb87b06290 <col:186> 'int' lvalue Var 0x55cb87af9ed8 'x$w_buff1' 'int'
    |           `-ImplicitCastExpr 0x55cb87b062e8 <col:198> 'int' <LValueToRValue>
    |             `-DeclRefExpr 0x55cb87b062b0 <col:198> 'int' lvalue Var 0x55cb87af9ed8 'x$w_buff1' 'int'
    |-BinaryOperator 0x55cb87b069d8 <line:837:3, col:227> '_Bool' '='
    | |-DeclRefExpr 0x55cb87b06450 <col:3> '_Bool' lvalue Var 0x55cb87af9e58 'x$w_buff0_used' '_Bool'
    | `-ImplicitCastExpr 0x55cb87b069c0 <col:20, col:227> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x55cb87b06990 <col:20, col:227> 'int'
    |     |-ImplicitCastExpr 0x55cb87b06948 <col:20> 'int' <IntegralCast>
    |     | `-ImplicitCastExpr 0x55cb87b06930 <col:20> '_Bool' <LValueToRValue>
    |     |   `-DeclRefExpr 0x55cb87b06470 <col:20> '_Bool' lvalue Var 0x55cb87afa160 'weak$$choice2' '_Bool'
    |     |-ImplicitCastExpr 0x55cb87b06978 <col:36> 'int' <IntegralCast>
    |     | `-ImplicitCastExpr 0x55cb87b06960 <col:36> '_Bool' <LValueToRValue>
    |     |   `-DeclRefExpr 0x55cb87b06490 <col:36> '_Bool' lvalue Var 0x55cb87af9e58 'x$w_buff0_used' '_Bool'
    |     `-ParenExpr 0x55cb87b06910 <col:53, col:227> 'int'
    |       `-ConditionalOperator 0x55cb87b068e0 <col:54, col:226> 'int'
    |         |-BinaryOperator 0x55cb87b066a0 <col:54, col:131> 'int' '||'
    |         | |-BinaryOperator 0x55cb87b065c0 <col:54, col:93> 'int' '||'
    |         | | |-UnaryOperator 0x55cb87b064e8 <col:54, col:55> 'int' prefix '!' cannot overflow
    |         | | | `-ImplicitCastExpr 0x55cb87b064d0 <col:55> '_Bool' <LValueToRValue>
    |         | | |   `-DeclRefExpr 0x55cb87b064b0 <col:55> '_Bool' lvalue Var 0x55cb87af9e58 'x$w_buff0_used' '_Bool'
    |         | | `-BinaryOperator 0x55cb87b065a0 <col:73, col:93> 'int' '&&'
    |         | |   |-UnaryOperator 0x55cb87b06538 <col:73, col:74> 'int' prefix '!' cannot overflow
    |         | |   | `-ImplicitCastExpr 0x55cb87b06520 <col:74> '_Bool' <LValueToRValue>
    |         | |   |   `-DeclRefExpr 0x55cb87b06500 <col:74> '_Bool' lvalue Var 0x55cb87af9900 'x$r_buff0_thd0' '_Bool'
    |         | |   `-UnaryOperator 0x55cb87b06588 <col:92, col:93> 'int' prefix '!' cannot overflow
    |         | |     `-ImplicitCastExpr 0x55cb87b06570 <col:93> '_Bool' <LValueToRValue>
    |         | |       `-DeclRefExpr 0x55cb87b06550 <col:93> '_Bool' lvalue Var 0x55cb87af9f50 'x$w_buff1_used' '_Bool'
    |         | `-BinaryOperator 0x55cb87b06680 <col:111, col:131> 'int' '&&'
    |         |   |-UnaryOperator 0x55cb87b06618 <col:111, col:112> 'int' prefix '!' cannot overflow
    |         |   | `-ImplicitCastExpr 0x55cb87b06600 <col:112> '_Bool' <LValueToRValue>
    |         |   |   `-DeclRefExpr 0x55cb87b065e0 <col:112> '_Bool' lvalue Var 0x55cb87af9900 'x$r_buff0_thd0' '_Bool'
    |         |   `-UnaryOperator 0x55cb87b06668 <col:130, col:131> 'int' prefix '!' cannot overflow
    |         |     `-ImplicitCastExpr 0x55cb87b06650 <col:131> '_Bool' <LValueToRValue>
    |         |       `-DeclRefExpr 0x55cb87b06630 <col:131> '_Bool' lvalue Var 0x55cb87af9b00 'x$r_buff1_thd0' '_Bool'
    |         |-ImplicitCastExpr 0x55cb87b068c8 <col:148> 'int' <IntegralCast>
    |         | `-ImplicitCastExpr 0x55cb87b068b0 <col:148> '_Bool' <LValueToRValue>
    |         |   `-DeclRefExpr 0x55cb87b066c0 <col:148> '_Bool' lvalue Var 0x55cb87af9e58 'x$w_buff0_used' '_Bool'
    |         `-ParenExpr 0x55cb87b06890 <col:165, col:226> 'int'
    |           `-ConditionalOperator 0x55cb87b06860 <col:166, col:212> 'int'
    |             |-BinaryOperator 0x55cb87b06780 <col:166, col:184> 'int' '&&'
    |             | |-ImplicitCastExpr 0x55cb87b06738 <col:166> 'int' <IntegralCast>
    |             | | `-ImplicitCastExpr 0x55cb87b06720 <col:166> '_Bool' <LValueToRValue>
    |             | |   `-DeclRefExpr 0x55cb87b066e0 <col:166> '_Bool' lvalue Var 0x55cb87af9e58 'x$w_buff0_used' '_Bool'
    |             | `-ImplicitCastExpr 0x55cb87b06768 <col:184> 'int' <IntegralCast>
    |             |   `-ImplicitCastExpr 0x55cb87b06750 <col:184> '_Bool' <LValueToRValue>
    |             |     `-DeclRefExpr 0x55cb87b06700 <col:184> '_Bool' lvalue Var 0x55cb87af9900 'x$r_buff0_thd0' '_Bool'
    |             |-ImplicitCastExpr 0x55cb87b06818 <col:201, col:208> 'int' <IntegralCast>
    |             | `-CStyleCastExpr 0x55cb87b067d0 <col:201, col:208> '_Bool' <IntegralToBoolean>
    |             |   `-IntegerLiteral 0x55cb87b067a0 <col:208> 'int' 0
    |             `-ImplicitCastExpr 0x55cb87b06848 <col:212> 'int' <IntegralCast>
    |               `-ImplicitCastExpr 0x55cb87b06830 <col:212> '_Bool' <LValueToRValue>
    |                 `-DeclRefExpr 0x55cb87b067f8 <col:212> '_Bool' lvalue Var 0x55cb87af9e58 'x$w_buff0_used' '_Bool'
    |-BinaryOperator 0x55cb87b06fb0 <line:838:3, col:221> '_Bool' '='
    | |-DeclRefExpr 0x55cb87b069f8 <col:3> '_Bool' lvalue Var 0x55cb87af9f50 'x$w_buff1_used' '_Bool'
    | `-ImplicitCastExpr 0x55cb87b06f98 <col:20, col:221> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x55cb87b06f68 <col:20, col:221> 'int'
    |     |-ImplicitCastExpr 0x55cb87b06f20 <col:20> 'int' <IntegralCast>
    |     | `-ImplicitCastExpr 0x55cb87b06f08 <col:20> '_Bool' <LValueToRValue>
    |     |   `-DeclRefExpr 0x55cb87b06a18 <col:20> '_Bool' lvalue Var 0x55cb87afa160 'weak$$choice2' '_Bool'
    |     |-ImplicitCastExpr 0x55cb87b06f50 <col:36> 'int' <IntegralCast>
    |     | `-ImplicitCastExpr 0x55cb87b06f38 <col:36> '_Bool' <LValueToRValue>
    |     |   `-DeclRefExpr 0x55cb87b06a38 <col:36> '_Bool' lvalue Var 0x55cb87af9f50 'x$w_buff1_used' '_Bool'
    |     `-ParenExpr 0x55cb87b06ee8 <col:53, col:221> 'int'
    |       `-ConditionalOperator 0x55cb87b06eb8 <col:54, col:220> 'int'
    |         |-BinaryOperator 0x55cb87b06c58 <col:54, col:131> 'int' '||'
    |         | |-BinaryOperator 0x55cb87b06b68 <col:54, col:93> 'int' '||'
    |         | | |-UnaryOperator 0x55cb87b06a90 <col:54, col:55> 'int' prefix '!' cannot overflow
    |         | | | `-ImplicitCastExpr 0x55cb87b06a78 <col:55> '_Bool' <LValueToRValue>
    |         | | |   `-DeclRefExpr 0x55cb87b06a58 <col:55> '_Bool' lvalue Var 0x55cb87af9e58 'x$w_buff0_used' '_Bool'
    |         | | `-BinaryOperator 0x55cb87b06b48 <col:73, col:93> 'int' '&&'
    |         | |   |-UnaryOperator 0x55cb87b06ae0 <col:73, col:74> 'int' prefix '!' cannot overflow
    |         | |   | `-ImplicitCastExpr 0x55cb87b06ac8 <col:74> '_Bool' <LValueToRValue>
    |         | |   |   `-DeclRefExpr 0x55cb87b06aa8 <col:74> '_Bool' lvalue Var 0x55cb87af9900 'x$r_buff0_thd0' '_Bool'
    |         | |   `-UnaryOperator 0x55cb87b06b30 <col:92, col:93> 'int' prefix '!' cannot overflow
    |         | |     `-ImplicitCastExpr 0x55cb87b06b18 <col:93> '_Bool' <LValueToRValue>
    |         | |       `-DeclRefExpr 0x55cb87b06af8 <col:93> '_Bool' lvalue Var 0x55cb87af9f50 'x$w_buff1_used' '_Bool'
    |         | `-BinaryOperator 0x55cb87b06c38 <col:111, col:131> 'int' '&&'
    |         |   |-UnaryOperator 0x55cb87b06bd0 <col:111, col:112> 'int' prefix '!' cannot overflow
    |         |   | `-ImplicitCastExpr 0x55cb87b06ba8 <col:112> '_Bool' <LValueToRValue>
    |         |   |   `-DeclRefExpr 0x55cb87b06b88 <col:112> '_Bool' lvalue Var 0x55cb87af9900 'x$r_buff0_thd0' '_Bool'
    |         |   `-UnaryOperator 0x55cb87b06c20 <col:130, col:131> 'int' prefix '!' cannot overflow
    |         |     `-ImplicitCastExpr 0x55cb87b06c08 <col:131> '_Bool' <LValueToRValue>
    |         |       `-DeclRefExpr 0x55cb87b06be8 <col:131> '_Bool' lvalue Var 0x55cb87af9b00 'x$r_buff1_thd0' '_Bool'
    |         |-ImplicitCastExpr 0x55cb87b06ea0 <col:148> 'int' <IntegralCast>
    |         | `-ImplicitCastExpr 0x55cb87b06e88 <col:148> '_Bool' <LValueToRValue>
    |         |   `-DeclRefExpr 0x55cb87b06c78 <col:148> '_Bool' lvalue Var 0x55cb87af9f50 'x$w_buff1_used' '_Bool'
    |         `-ParenExpr 0x55cb87b06e68 <col:165, col:220> 'int'
    |           `-ConditionalOperator 0x55cb87b06e38 <col:166, col:219> 'int'
    |             |-BinaryOperator 0x55cb87b06d38 <col:166, col:184> 'int' '&&'
    |             | |-ImplicitCastExpr 0x55cb87b06cf0 <col:166> 'int' <IntegralCast>
    |             | | `-ImplicitCastExpr 0x55cb87b06cd8 <col:166> '_Bool' <LValueToRValue>
    |             | |   `-DeclRefExpr 0x55cb87b06c98 <col:166> '_Bool' lvalue Var 0x55cb87af9e58 'x$w_buff0_used' '_Bool'
    |             | `-ImplicitCastExpr 0x55cb87b06d20 <col:184> 'int' <IntegralCast>
    |             |   `-ImplicitCastExpr 0x55cb87b06d08 <col:184> '_Bool' <LValueToRValue>
    |             |     `-DeclRefExpr 0x55cb87b06cb8 <col:184> '_Bool' lvalue Var 0x55cb87af9900 'x$r_buff0_thd0' '_Bool'
    |             |-ImplicitCastExpr 0x55cb87b06e08 <col:201, col:208> 'int' <IntegralCast>
    |             | `-CStyleCastExpr 0x55cb87b06d88 <col:201, col:208> '_Bool' <IntegralToBoolean>
    |             |   `-IntegerLiteral 0x55cb87b06d58 <col:208> 'int' 0
    |             `-ImplicitCastExpr 0x55cb87b06e20 <col:212, col:219> 'int' <IntegralCast>
    |               `-CStyleCastExpr 0x55cb87b06de0 <col:212, col:219> '_Bool' <IntegralToBoolean>
    |                 `-IntegerLiteral 0x55cb87b06db0 <col:219> 'int' 0
    |-BinaryOperator 0x55cb87b07558 <line:839:3, col:227> '_Bool' '='
    | |-DeclRefExpr 0x55cb87b06fd0 <col:3> '_Bool' lvalue Var 0x55cb87af9900 'x$r_buff0_thd0' '_Bool'
    | `-ImplicitCastExpr 0x55cb87b07540 <col:20, col:227> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x55cb87b07510 <col:20, col:227> 'int'
    |     |-ImplicitCastExpr 0x55cb87b074c8 <col:20> 'int' <IntegralCast>
    |     | `-ImplicitCastExpr 0x55cb87b074b0 <col:20> '_Bool' <LValueToRValue>
    |     |   `-DeclRefExpr 0x55cb87b06ff0 <col:20> '_Bool' lvalue Var 0x55cb87afa160 'weak$$choice2' '_Bool'
    |     |-ImplicitCastExpr 0x55cb87b074f8 <col:36> 'int' <IntegralCast>
    |     | `-ImplicitCastExpr 0x55cb87b074e0 <col:36> '_Bool' <LValueToRValue>
    |     |   `-DeclRefExpr 0x55cb87b07010 <col:36> '_Bool' lvalue Var 0x55cb87af9900 'x$r_buff0_thd0' '_Bool'
    |     `-ParenExpr 0x55cb87b07490 <col:53, col:227> 'int'
    |       `-ConditionalOperator 0x55cb87b07460 <col:54, col:226> 'int'
    |         |-BinaryOperator 0x55cb87b07220 <col:54, col:131> 'int' '||'
    |         | |-BinaryOperator 0x55cb87b07140 <col:54, col:93> 'int' '||'
    |         | | |-UnaryOperator 0x55cb87b07068 <col:54, col:55> 'int' prefix '!' cannot overflow
    |         | | | `-ImplicitCastExpr 0x55cb87b07050 <col:55> '_Bool' <LValueToRValue>
    |         | | |   `-DeclRefExpr 0x55cb87b07030 <col:55> '_Bool' lvalue Var 0x55cb87af9e58 'x$w_buff0_used' '_Bool'
    |         | | `-BinaryOperator 0x55cb87b07120 <col:73, col:93> 'int' '&&'
    |         | |   |-UnaryOperator 0x55cb87b070b8 <col:73, col:74> 'int' prefix '!' cannot overflow
    |         | |   | `-ImplicitCastExpr 0x55cb87b070a0 <col:74> '_Bool' <LValueToRValue>
    |         | |   |   `-DeclRefExpr 0x55cb87b07080 <col:74> '_Bool' lvalue Var 0x55cb87af9900 'x$r_buff0_thd0' '_Bool'
    |         | |   `-UnaryOperator 0x55cb87b07108 <col:92, col:93> 'int' prefix '!' cannot overflow
    |         | |     `-ImplicitCastExpr 0x55cb87b070f0 <col:93> '_Bool' <LValueToRValue>
    |         | |       `-DeclRefExpr 0x55cb87b070d0 <col:93> '_Bool' lvalue Var 0x55cb87af9f50 'x$w_buff1_used' '_Bool'
    |         | `-BinaryOperator 0x55cb87b07200 <col:111, col:131> 'int' '&&'
    |         |   |-UnaryOperator 0x55cb87b07198 <col:111, col:112> 'int' prefix '!' cannot overflow
    |         |   | `-ImplicitCastExpr 0x55cb87b07180 <col:112> '_Bool' <LValueToRValue>
    |         |   |   `-DeclRefExpr 0x55cb87b07160 <col:112> '_Bool' lvalue Var 0x55cb87af9900 'x$r_buff0_thd0' '_Bool'
    |         |   `-UnaryOperator 0x55cb87b071e8 <col:130, col:131> 'int' prefix '!' cannot overflow
    |         |     `-ImplicitCastExpr 0x55cb87b071d0 <col:131> '_Bool' <LValueToRValue>
    |         |       `-DeclRefExpr 0x55cb87b071b0 <col:131> '_Bool' lvalue Var 0x55cb87af9b00 'x$r_buff1_thd0' '_Bool'
    |         |-ImplicitCastExpr 0x55cb87b07448 <col:148> 'int' <IntegralCast>
    |         | `-ImplicitCastExpr 0x55cb87b07430 <col:148> '_Bool' <LValueToRValue>
    |         |   `-DeclRefExpr 0x55cb87b07240 <col:148> '_Bool' lvalue Var 0x55cb87af9900 'x$r_buff0_thd0' '_Bool'
    |         `-ParenExpr 0x55cb87b07410 <col:165, col:226> 'int'
    |           `-ConditionalOperator 0x55cb87b073e0 <col:166, col:212> 'int'
    |             |-BinaryOperator 0x55cb87b07300 <col:166, col:184> 'int' '&&'
    |             | |-ImplicitCastExpr 0x55cb87b072b8 <col:166> 'int' <IntegralCast>
    |             | | `-ImplicitCastExpr 0x55cb87b072a0 <col:166> '_Bool' <LValueToRValue>
    |             | |   `-DeclRefExpr 0x55cb87b07260 <col:166> '_Bool' lvalue Var 0x55cb87af9e58 'x$w_buff0_used' '_Bool'
    |             | `-ImplicitCastExpr 0x55cb87b072e8 <col:184> 'int' <IntegralCast>
    |             |   `-ImplicitCastExpr 0x55cb87b072d0 <col:184> '_Bool' <LValueToRValue>
    |             |     `-DeclRefExpr 0x55cb87b07280 <col:184> '_Bool' lvalue Var 0x55cb87af9900 'x$r_buff0_thd0' '_Bool'
    |             |-ImplicitCastExpr 0x55cb87b07398 <col:201, col:208> 'int' <IntegralCast>
    |             | `-CStyleCastExpr 0x55cb87b07350 <col:201, col:208> '_Bool' <IntegralToBoolean>
    |             |   `-IntegerLiteral 0x55cb87b07320 <col:208> 'int' 0
    |             `-ImplicitCastExpr 0x55cb87b073c8 <col:212> 'int' <IntegralCast>
    |               `-ImplicitCastExpr 0x55cb87b073b0 <col:212> '_Bool' <LValueToRValue>
    |                 `-DeclRefExpr 0x55cb87b07378 <col:212> '_Bool' lvalue Var 0x55cb87af9900 'x$r_buff0_thd0' '_Bool'
    |-BinaryOperator 0x55cb87b07b20 <line:840:3, col:221> '_Bool' '='
    | |-DeclRefExpr 0x55cb87b07578 <col:3> '_Bool' lvalue Var 0x55cb87af9b00 'x$r_buff1_thd0' '_Bool'
    | `-ImplicitCastExpr 0x55cb87b07b08 <col:20, col:221> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x55cb87b07ad8 <col:20, col:221> 'int'
    |     |-ImplicitCastExpr 0x55cb87b07a90 <col:20> 'int' <IntegralCast>
    |     | `-ImplicitCastExpr 0x55cb87b07a78 <col:20> '_Bool' <LValueToRValue>
    |     |   `-DeclRefExpr 0x55cb87b07598 <col:20> '_Bool' lvalue Var 0x55cb87afa160 'weak$$choice2' '_Bool'
    |     |-ImplicitCastExpr 0x55cb87b07ac0 <col:36> 'int' <IntegralCast>
    |     | `-ImplicitCastExpr 0x55cb87b07aa8 <col:36> '_Bool' <LValueToRValue>
    |     |   `-DeclRefExpr 0x55cb87b075b8 <col:36> '_Bool' lvalue Var 0x55cb87af9b00 'x$r_buff1_thd0' '_Bool'
    |     `-ParenExpr 0x55cb87b07a58 <col:53, col:221> 'int'
    |       `-ConditionalOperator 0x55cb87b07a28 <col:54, col:220> 'int'
    |         |-BinaryOperator 0x55cb87b077c8 <col:54, col:131> 'int' '||'
    |         | |-BinaryOperator 0x55cb87b076e8 <col:54, col:93> 'int' '||'
    |         | | |-UnaryOperator 0x55cb87b07610 <col:54, col:55> 'int' prefix '!' cannot overflow
    |         | | | `-ImplicitCastExpr 0x55cb87b075f8 <col:55> '_Bool' <LValueToRValue>
    |         | | |   `-DeclRefExpr 0x55cb87b075d8 <col:55> '_Bool' lvalue Var 0x55cb87af9e58 'x$w_buff0_used' '_Bool'
    |         | | `-BinaryOperator 0x55cb87b076c8 <col:73, col:93> 'int' '&&'
    |         | |   |-UnaryOperator 0x55cb87b07660 <col:73, col:74> 'int' prefix '!' cannot overflow
    |         | |   | `-ImplicitCastExpr 0x55cb87b07648 <col:74> '_Bool' <LValueToRValue>
    |         | |   |   `-DeclRefExpr 0x55cb87b07628 <col:74> '_Bool' lvalue Var 0x55cb87af9900 'x$r_buff0_thd0' '_Bool'
    |         | |   `-UnaryOperator 0x55cb87b076b0 <col:92, col:93> 'int' prefix '!' cannot overflow
    |         | |     `-ImplicitCastExpr 0x55cb87b07698 <col:93> '_Bool' <LValueToRValue>
    |         | |       `-DeclRefExpr 0x55cb87b07678 <col:93> '_Bool' lvalue Var 0x55cb87af9f50 'x$w_buff1_used' '_Bool'
    |         | `-BinaryOperator 0x55cb87b077a8 <col:111, col:131> 'int' '&&'
    |         |   |-UnaryOperator 0x55cb87b07740 <col:111, col:112> 'int' prefix '!' cannot overflow
    |         |   | `-ImplicitCastExpr 0x55cb87b07728 <col:112> '_Bool' <LValueToRValue>
    |         |   |   `-DeclRefExpr 0x55cb87b07708 <col:112> '_Bool' lvalue Var 0x55cb87af9900 'x$r_buff0_thd0' '_Bool'
    |         |   `-UnaryOperator 0x55cb87b07790 <col:130, col:131> 'int' prefix '!' cannot overflow
    |         |     `-ImplicitCastExpr 0x55cb87b07778 <col:131> '_Bool' <LValueToRValue>
    |         |       `-DeclRefExpr 0x55cb87b07758 <col:131> '_Bool' lvalue Var 0x55cb87af9b00 'x$r_buff1_thd0' '_Bool'
    |         |-ImplicitCastExpr 0x55cb87b07a10 <col:148> 'int' <IntegralCast>
    |         | `-ImplicitCastExpr 0x55cb87b079f8 <col:148> '_Bool' <LValueToRValue>
    |         |   `-DeclRefExpr 0x55cb87b077e8 <col:148> '_Bool' lvalue Var 0x55cb87af9b00 'x$r_buff1_thd0' '_Bool'
    |         `-ParenExpr 0x55cb87b079d8 <col:165, col:220> 'int'
    |           `-ConditionalOperator 0x55cb87b079a8 <col:166, col:219> 'int'
    |             |-BinaryOperator 0x55cb87b078a8 <col:166, col:184> 'int' '&&'
    |             | |-ImplicitCastExpr 0x55cb87b07860 <col:166> 'int' <IntegralCast>
    |             | | `-ImplicitCastExpr 0x55cb87b07848 <col:166> '_Bool' <LValueToRValue>
    |             | |   `-DeclRefExpr 0x55cb87b07808 <col:166> '_Bool' lvalue Var 0x55cb87af9e58 'x$w_buff0_used' '_Bool'
    |             | `-ImplicitCastExpr 0x55cb87b07890 <col:184> 'int' <IntegralCast>
    |             |   `-ImplicitCastExpr 0x55cb87b07878 <col:184> '_Bool' <LValueToRValue>
    |             |     `-DeclRefExpr 0x55cb87b07828 <col:184> '_Bool' lvalue Var 0x55cb87af9900 'x$r_buff0_thd0' '_Bool'
    |             |-ImplicitCastExpr 0x55cb87b07978 <col:201, col:208> 'int' <IntegralCast>
    |             | `-CStyleCastExpr 0x55cb87b078f8 <col:201, col:208> '_Bool' <IntegralToBoolean>
    |             |   `-IntegerLiteral 0x55cb87b078c8 <col:208> 'int' 0
    |             `-ImplicitCastExpr 0x55cb87b07990 <col:212, col:219> 'int' <IntegralCast>
    |               `-CStyleCastExpr 0x55cb87b07950 <col:212, col:219> '_Bool' <IntegralToBoolean>
    |                 `-IntegerLiteral 0x55cb87b07920 <col:219> 'int' 0
    |-BinaryOperator 0x55cb87b07e18 <line:841:3, col:95> '_Bool' '='
    | |-DeclRefExpr 0x55cb87b07b40 <col:3> '_Bool' lvalue Var 0x55cb87af9670 'main$tmp_guard1' '_Bool'
    | `-ImplicitCastExpr 0x55cb87b07e00 <col:21, col:95> '_Bool' <IntegralToBoolean>
    |   `-UnaryOperator 0x55cb87b07de8 <col:21, col:95> 'int' prefix '!' cannot overflow
    |     `-ParenExpr 0x55cb87b07dc8 <col:22, col:95> 'int'
    |       `-BinaryOperator 0x55cb87b07da8 <col:23, col:94> 'int' '&&'
    |         |-BinaryOperator 0x55cb87b07d10 <col:23, col:66> 'int' '&&'
    |         | |-BinaryOperator 0x55cb87b07c78 <col:23, col:38> 'int' '&&'
    |         | | |-BinaryOperator 0x55cb87b07be0 <col:23, col:28> 'int' '=='
    |         | | | |-ImplicitCastExpr 0x55cb87b07ba0 <col:23> 'int' <LValueToRValue>
    |         | | | | `-DeclRefExpr 0x55cb87b07b60 <col:23> 'int' lvalue Var 0x55cb87af9770 'x' 'int'
    |         | | | `-IntegerLiteral 0x55cb87b07b80 <col:28> 'int' 2
    |         | | `-BinaryOperator 0x55cb87b07c58 <col:33, col:38> 'int' '=='
    |         | |   |-ImplicitCastExpr 0x55cb87b07c40 <col:33> 'int' <LValueToRValue>
    |         | |   | `-DeclRefExpr 0x55cb87b07c00 <col:33> 'int' lvalue Var 0x55cb87afa050 'y' 'int'
    |         | |   `-IntegerLiteral 0x55cb87b07c20 <col:38> 'int' 2
    |         | `-BinaryOperator 0x55cb87b07cf0 <col:43, col:66> 'int' '=='
    |         |   |-ImplicitCastExpr 0x55cb87b07cd8 <col:43> 'int' <LValueToRValue>
    |         |   | `-DeclRefExpr 0x55cb87b07c98 <col:43> 'int' lvalue Var 0x55cb87af9440 '__unbuffered_p0_EAX' 'int'
    |         |   `-IntegerLiteral 0x55cb87b07cb8 <col:66> 'int' 0
    |         `-BinaryOperator 0x55cb87b07d88 <col:71, col:94> 'int' '=='
    |           |-ImplicitCastExpr 0x55cb87b07d70 <col:71> 'int' <LValueToRValue>
    |           | `-DeclRefExpr 0x55cb87b07d30 <col:71> 'int' lvalue Var 0x55cb87af9560 '__unbuffered_p1_EAX' 'int'
    |           `-IntegerLiteral 0x55cb87b07d50 <col:94> 'int' 1
    |-BinaryOperator 0x55cb87b07f48 <line:842:3, col:37> 'int' '='
    | |-DeclRefExpr 0x55cb87b07e38 <col:3> 'int' lvalue Var 0x55cb87af9770 'x' 'int'
    | `-ConditionalOperator 0x55cb87b07f18 <col:7, col:37> 'int'
    |   |-ImplicitCastExpr 0x55cb87b07ed0 <col:7> 'int' <IntegralCast>
    |   | `-ImplicitCastExpr 0x55cb87b07eb8 <col:7> '_Bool' <LValueToRValue>
    |   |   `-DeclRefExpr 0x55cb87b07e58 <col:7> '_Bool' lvalue Var 0x55cb87af9808 'x$flush_delayed' '_Bool'
    |   |-ImplicitCastExpr 0x55cb87b07ee8 <col:25> 'int' <LValueToRValue>
    |   | `-DeclRefExpr 0x55cb87b07e78 <col:25> 'int' lvalue Var 0x55cb87af9888 'x$mem_tmp' 'int'
    |   `-ImplicitCastExpr 0x55cb87b07f00 <col:37> 'int' <LValueToRValue>
    |     `-DeclRefExpr 0x55cb87b07e98 <col:37> 'int' lvalue Var 0x55cb87af9770 'x' 'int'
    |-BinaryOperator 0x55cb87b07fe0 <line:843:3, col:28> '_Bool' '='
    | |-DeclRefExpr 0x55cb87b07f68 <col:3> '_Bool' lvalue Var 0x55cb87af9808 'x$flush_delayed' '_Bool'
    | `-CStyleCastExpr 0x55cb87b07fb8 <col:21, col:28> '_Bool' <IntegralToBoolean>
    |   `-IntegerLiteral 0x55cb87b07f88 <col:28> 'int' 0
    |-CallExpr 0x55cb87b08038 <line:844:3, col:25> 'void'
    | `-ImplicitCastExpr 0x55cb87b08020 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x55cb87b08000 <col:3> 'void ()' Function 0x55cb87aa0060 '__VERIFIER_atomic_end' 'void ()'
    |-CallExpr 0x55cb87b080b0 <line:845:3, col:36> 'void'
    | |-ImplicitCastExpr 0x55cb87b08098 <col:3> 'void (*)(int)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x55cb87b08058 <col:3> 'void (int)' Function 0x55cb87a9fd28 '__VERIFIER_assert' 'void (int)'
    | `-ImplicitCastExpr 0x55cb87b080f0 <col:21> 'int' <IntegralCast>
    |   `-ImplicitCastExpr 0x55cb87b080d8 <col:21> '_Bool' <LValueToRValue>
    |     `-DeclRefExpr 0x55cb87b08078 <col:21> '_Bool' lvalue Var 0x55cb87af9670 'main$tmp_guard1' '_Bool'
    `-ReturnStmt 0x55cb87b08128 <line:846:3, col:10>
      `-IntegerLiteral 0x55cb87b08108 <col:10> 'int' 0
