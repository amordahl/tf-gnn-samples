TranslationUnitDecl 0x5565ca5f6e18 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x5565ca5f76d8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x5565ca5f73b0 '__int128'
|-TypedefDecl 0x5565ca5f7748 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x5565ca5f73d0 'unsigned __int128'
|-TypedefDecl 0x5565ca5f7a50 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x5565ca5f7820 'struct __NSConstantString_tag'
|   `-Record 0x5565ca5f77a0 '__NSConstantString_tag'
|-TypedefDecl 0x5565ca5f7af8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x5565ca5f7ab0 'char *'
|   `-BuiltinType 0x5565ca5f6eb0 'char'
|-TypedefDecl 0x5565ca636650 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'struct __va_list_tag [1]'
| `-ConstantArrayType 0x5565ca5f7d90 'struct __va_list_tag [1]' 1 
|   `-RecordType 0x5565ca5f7bd0 'struct __va_list_tag'
|     `-Record 0x5565ca5f7b50 '__va_list_tag'
|-FunctionDecl 0x5565ca636770 <./split_6/mix009_pso.opt_false-unreach-call.i:1:1, col:41> col:14 used __VERIFIER_nondet_bool '_Bool (void)' extern
|-FunctionDecl 0x5565ca636940 <line:2:1, col:34> col:13 used __VERIFIER_assume 'void (int)' extern
| `-ParmVarDecl 0x5565ca636870 <col:31> col:34 'int'
|-FunctionDecl 0x5565ca636ab8 <line:3:1, col:45> col:15 used __VERIFIER_nondet_pointer 'void *(void)' extern
|-FunctionDecl 0x5565ca636be0 <line:4:1, col:61> col:13 used __VERIFIER_error 'void () __attribute__((noreturn))' extern
|-FunctionDecl 0x5565ca636d28 <line:5:1, col:99> col:6 used __VERIFIER_assert 'void (int)'
| |-ParmVarDecl 0x5565ca636c98 <col:24, col:28> col:28 used expression 'int'
| `-CompoundStmt 0x5565ca636f58 <col:40, col:99>
|   |-IfStmt 0x5565ca636f28 <col:42, col:88>
|   | |-UnaryOperator 0x5565ca636e08 <col:46, col:47> 'int' prefix '!' cannot overflow
|   | | `-ImplicitCastExpr 0x5565ca636df0 <col:47> 'int' <LValueToRValue>
|   | |   `-DeclRefExpr 0x5565ca636dd0 <col:47> 'int' lvalue ParmVar 0x5565ca636c98 'expression' 'int'
|   | `-CompoundStmt 0x5565ca636f10 <col:59, col:88>
|   |   `-LabelStmt 0x5565ca636ef8 <col:61, col:85> 'ERROR'
|   |     `-CallExpr 0x5565ca636e88 <col:68, col:85> 'void'
|   |       `-ImplicitCastExpr 0x5565ca636e70 <col:68> 'void (*)() __attribute__((noreturn))' <FunctionToPointerDecay>
|   |         `-DeclRefExpr 0x5565ca636e20 <col:68> 'void () __attribute__((noreturn))' Function 0x5565ca636be0 '__VERIFIER_error' 'void () __attribute__((noreturn))'
|   |-NullStmt 0x5565ca636f40 <col:89>
|   `-ReturnStmt 0x5565ca636f48 <col:91>
|-FunctionDecl 0x5565ca636fa0 <line:6:1, col:37> col:13 used __VERIFIER_atomic_begin 'void ()' extern
|-FunctionDecl 0x5565ca637060 <line:7:1, col:35> col:13 used __VERIFIER_atomic_end 'void ()' extern
|-FunctionDecl 0x5565ca6373e0 <line:9:1, line:11:76> line:9:13 __assert_fail 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x5565ca637118 <col:28, col:40> col:40 __assertion 'const char *'
| |-ParmVarDecl 0x5565ca637198 <col:53, col:65> col:65 __file 'const char *'
| |-ParmVarDecl 0x5565ca637218 <line:10:7, col:20> col:20 __line 'unsigned int'
| |-ParmVarDecl 0x5565ca637298 <col:28, col:40> col:40 __function 'const char *'
| `-NoThrowAttr 0x5565ca6374a0 <line:11:22>
|-FunctionDecl 0x5565ca65d520 <line:12:1, line:14:76> line:12:13 __assert_perror_fail 'void (int, const char *, unsigned int, const char *) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x5565ca637510 <col:35, col:39> col:39 __errnum 'int'
| |-ParmVarDecl 0x5565ca637590 <col:49, col:61> col:61 __file 'const char *'
| |-ParmVarDecl 0x5565ca65d350 <line:13:7, col:20> col:20 __line 'unsigned int'
| |-ParmVarDecl 0x5565ca65d3d0 <col:28, col:40> col:40 __function 'const char *'
| `-NoThrowAttr 0x5565ca65d5e0 <line:14:22>
|-FunctionDecl 0x5565ca65d890 <line:15:1, line:16:76> line:15:13 __assert 'void (const char *, const char *, int) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x5565ca65d650 <col:23, col:35> col:35 __assertion 'const char *'
| |-ParmVarDecl 0x5565ca65d6d0 <col:48, col:60> col:60 __file 'const char *'
| |-ParmVarDecl 0x5565ca65d750 <col:68, col:72> col:72 __line 'int'
| `-NoThrowAttr 0x5565ca65d948 <line:16:22>
|-TypedefDecl 0x5565ca65d9b8 <line:18:1, col:23> col:23 __u_char 'unsigned char'
| `-BuiltinType 0x5565ca5f6f70 'unsigned char'
|-TypedefDecl 0x5565ca65da28 <line:19:1, col:28> col:28 __u_short 'unsigned short'
| `-BuiltinType 0x5565ca5f6f90 'unsigned short'
|-TypedefDecl 0x5565ca65da98 <line:20:1, col:22> col:22 __u_int 'unsigned int'
| `-BuiltinType 0x5565ca5f6fb0 'unsigned int'
|-TypedefDecl 0x5565ca65db08 <line:21:1, col:27> col:27 __u_long 'unsigned long'
| `-BuiltinType 0x5565ca5f6fd0 'unsigned long'
|-TypedefDecl 0x5565ca65db78 <line:22:1, col:21> col:21 __int8_t 'signed char'
| `-BuiltinType 0x5565ca5f6ed0 'signed char'
|-TypedefDecl 0x5565ca65dbe8 <line:23:1, col:23> col:23 __uint8_t 'unsigned char'
| `-BuiltinType 0x5565ca5f6f70 'unsigned char'
|-TypedefDecl 0x5565ca65dc58 <line:24:1, col:26> col:26 __int16_t 'short'
| `-BuiltinType 0x5565ca5f6ef0 'short'
|-TypedefDecl 0x5565ca65dcc8 <line:25:1, col:28> col:28 __uint16_t 'unsigned short'
| `-BuiltinType 0x5565ca5f6f90 'unsigned short'
|-TypedefDecl 0x5565ca65dd38 <line:26:1, col:20> col:20 __int32_t 'int'
| `-BuiltinType 0x5565ca5f6f10 'int'
|-TypedefDecl 0x5565ca65dda8 <line:27:1, col:22> col:22 __uint32_t 'unsigned int'
| `-BuiltinType 0x5565ca5f6fb0 'unsigned int'
|-TypedefDecl 0x5565ca65de18 <line:28:1, col:25> col:25 __int64_t 'long'
| `-BuiltinType 0x5565ca5f6f30 'long'
|-TypedefDecl 0x5565ca65de88 <line:29:1, col:27> col:27 referenced __uint64_t 'unsigned long'
| `-BuiltinType 0x5565ca5f6fd0 'unsigned long'
|-TypedefDecl 0x5565ca65def8 <line:30:1, col:18> col:18 referenced __quad_t 'long'
| `-BuiltinType 0x5565ca5f6f30 'long'
|-TypedefDecl 0x5565ca65df68 <line:31:1, col:27> col:27 __u_quad_t 'unsigned long'
| `-BuiltinType 0x5565ca5f6fd0 'unsigned long'
|-TypedefDecl 0x5565ca65dfd8 <line:32:1, col:27> col:27 __dev_t 'unsigned long'
| `-BuiltinType 0x5565ca5f6fd0 'unsigned long'
|-TypedefDecl 0x5565ca65e048 <line:33:1, col:22> col:22 __uid_t 'unsigned int'
| `-BuiltinType 0x5565ca5f6fb0 'unsigned int'
|-TypedefDecl 0x5565ca65e0b8 <line:34:1, col:22> col:22 __gid_t 'unsigned int'
| `-BuiltinType 0x5565ca5f6fb0 'unsigned int'
|-TypedefDecl 0x5565ca65e128 <line:35:1, col:27> col:27 __ino_t 'unsigned long'
| `-BuiltinType 0x5565ca5f6fd0 'unsigned long'
|-TypedefDecl 0x5565ca65e198 <line:36:1, col:27> col:27 __ino64_t 'unsigned long'
| `-BuiltinType 0x5565ca5f6fd0 'unsigned long'
|-TypedefDecl 0x5565ca65e208 <line:37:1, col:22> col:22 __mode_t 'unsigned int'
| `-BuiltinType 0x5565ca5f6fb0 'unsigned int'
|-TypedefDecl 0x5565ca65e278 <line:38:1, col:27> col:27 __nlink_t 'unsigned long'
| `-BuiltinType 0x5565ca5f6fd0 'unsigned long'
|-TypedefDecl 0x5565ca65e2e8 <line:39:1, col:18> col:18 __off_t 'long'
| `-BuiltinType 0x5565ca5f6f30 'long'
|-TypedefDecl 0x5565ca65e378 <line:40:1, col:18> col:18 referenced __off64_t 'long'
| `-BuiltinType 0x5565ca5f6f30 'long'
|-TypedefDecl 0x5565ca65e3e8 <line:41:1, col:13> col:13 referenced __pid_t 'int'
| `-BuiltinType 0x5565ca5f6f10 'int'
|-RecordDecl 0x5565ca65e440 <line:42:9, col:32> col:9 struct definition
| `-FieldDecl 0x5565ca65e588 <col:18, col:29> col:22 __val 'int [2]'
|-TypedefDecl 0x5565ca65e640 <col:1, col:34> col:34 __fsid_t 'struct __fsid_t':'__fsid_t'
| `-ElaboratedType 0x5565ca65e5e0 'struct __fsid_t' sugar
|   `-RecordType 0x5565ca65e4c0 '__fsid_t'
|     `-Record 0x5565ca65e440 ''
|-TypedefDecl 0x5565ca65e6c8 <line:43:1, col:18> col:18 referenced __clock_t 'long'
| `-BuiltinType 0x5565ca5f6f30 'long'
|-TypedefDecl 0x5565ca65e738 <line:44:1, col:27> col:27 __rlim_t 'unsigned long'
| `-BuiltinType 0x5565ca5f6fd0 'unsigned long'
|-TypedefDecl 0x5565ca65e7a8 <line:45:1, col:27> col:27 __rlim64_t 'unsigned long'
| `-BuiltinType 0x5565ca5f6fd0 'unsigned long'
|-TypedefDecl 0x5565ca65e818 <line:46:1, col:22> col:22 __id_t 'unsigned int'
| `-BuiltinType 0x5565ca5f6fb0 'unsigned int'
|-TypedefDecl 0x5565ca65e888 <line:47:1, col:18> col:18 referenced __time_t 'long'
| `-BuiltinType 0x5565ca5f6f30 'long'
|-TypedefDecl 0x5565ca65e8f8 <line:48:1, col:22> col:22 __useconds_t 'unsigned int'
| `-BuiltinType 0x5565ca5f6fb0 'unsigned int'
|-TypedefDecl 0x5565ca65e968 <line:49:1, col:18> col:18 __suseconds_t 'long'
| `-BuiltinType 0x5565ca5f6f30 'long'
|-TypedefDecl 0x5565ca65e9d8 <line:50:1, col:13> col:13 __daddr_t 'int'
| `-BuiltinType 0x5565ca5f6f10 'int'
|-TypedefDecl 0x5565ca65ea48 <line:51:1, col:13> col:13 __key_t 'int'
| `-BuiltinType 0x5565ca5f6f10 'int'
|-TypedefDecl 0x5565ca65eab8 <line:52:1, col:13> col:13 referenced __clockid_t 'int'
| `-BuiltinType 0x5565ca5f6f10 'int'
|-TypedefDecl 0x5565ca65eb28 <line:53:1, col:16> col:16 referenced __timer_t 'void *'
| `-PointerType 0x5565ca5f7630 'void *'
|   `-BuiltinType 0x5565ca5f6e70 'void'
|-TypedefDecl 0x5565ca65eb98 <line:54:1, col:18> col:18 __blksize_t 'long'
| `-BuiltinType 0x5565ca5f6f30 'long'
|-TypedefDecl 0x5565ca65ec08 <line:55:1, col:18> col:18 __blkcnt_t 'long'
| `-BuiltinType 0x5565ca5f6f30 'long'
|-TypedefDecl 0x5565ca65ec78 <line:56:1, col:18> col:18 __blkcnt64_t 'long'
| `-BuiltinType 0x5565ca5f6f30 'long'
|-TypedefDecl 0x5565ca65ece8 <line:57:1, col:27> col:27 __fsblkcnt_t 'unsigned long'
| `-BuiltinType 0x5565ca5f6fd0 'unsigned long'
|-TypedefDecl 0x5565ca65ed58 <line:58:1, col:27> col:27 __fsblkcnt64_t 'unsigned long'
| `-BuiltinType 0x5565ca5f6fd0 'unsigned long'
|-TypedefDecl 0x5565ca65edc8 <line:59:1, col:27> col:27 __fsfilcnt_t 'unsigned long'
| `-BuiltinType 0x5565ca5f6fd0 'unsigned long'
|-TypedefDecl 0x5565ca65ee38 <line:60:1, col:27> col:27 __fsfilcnt64_t 'unsigned long'
| `-BuiltinType 0x5565ca5f6fd0 'unsigned long'
|-TypedefDecl 0x5565ca65eea8 <line:61:1, col:18> col:18 __fsword_t 'long'
| `-BuiltinType 0x5565ca5f6f30 'long'
|-TypedefDecl 0x5565ca65ef18 <line:62:1, col:18> col:18 __ssize_t 'long'
| `-BuiltinType 0x5565ca5f6f30 'long'
|-TypedefDecl 0x5565ca65ef88 <line:63:1, col:18> col:18 referenced __syscall_slong_t 'long'
| `-BuiltinType 0x5565ca5f6f30 'long'
|-TypedefDecl 0x5565ca65eff8 <line:64:1, col:27> col:27 __syscall_ulong_t 'unsigned long'
| `-BuiltinType 0x5565ca5f6fd0 'unsigned long'
|-TypedefDecl 0x5565ca65f088 <line:65:1, col:19> col:19 __loff_t '__off64_t':'long'
| `-TypedefType 0x5565ca65f050 '__off64_t' sugar
|   |-Typedef 0x5565ca65e378 '__off64_t'
|   `-BuiltinType 0x5565ca5f6f30 'long'
|-TypedefDecl 0x5565ca65f180 <line:66:1, col:19> col:19 __qaddr_t '__quad_t *'
| `-PointerType 0x5565ca65f140 '__quad_t *'
|   `-TypedefType 0x5565ca65f0e0 '__quad_t' sugar
|     |-Typedef 0x5565ca65def8 '__quad_t'
|     `-BuiltinType 0x5565ca5f6f30 'long'
|-TypedefDecl 0x5565ca65f1f0 <line:67:1, col:15> col:15 __caddr_t 'char *'
| `-PointerType 0x5565ca5f7ab0 'char *'
|   `-BuiltinType 0x5565ca5f6eb0 'char'
|-TypedefDecl 0x5565ca65f260 <line:68:1, col:18> col:18 __intptr_t 'long'
| `-BuiltinType 0x5565ca5f6f30 'long'
|-TypedefDecl 0x5565ca65f2d0 <line:69:1, col:22> col:22 __socklen_t 'unsigned int'
| `-BuiltinType 0x5565ca5f6fb0 'unsigned int'
|-FunctionDecl 0x5565ca660458 <line:70:1, line:74:1> line:71:1 __bswap_32 'unsigned int (unsigned int)' static inline
| |-ParmVarDecl 0x5565ca660380 <col:13, col:26> col:26 used __bsx 'unsigned int'
| `-CompoundStmt 0x5565ca660768 <line:72:1, line:74:1>
|   `-ReturnStmt 0x5565ca660758 <line:73:3, col:34>
|     `-CallExpr 0x5565ca660718 <col:10, col:34> 'unsigned int'
|       |-ImplicitCastExpr 0x5565ca660700 <col:10> 'unsigned int (*)(unsigned int)' <BuiltinFnToFnPtr>
|       | `-DeclRefExpr 0x5565ca660690 <col:10> '<builtin fn type>' Function 0x5565ca660500 '__builtin_bswap32' 'unsigned int (unsigned int)'
|       `-ImplicitCastExpr 0x5565ca660740 <col:29> 'unsigned int' <LValueToRValue>
|         `-DeclRefExpr 0x5565ca6606b0 <col:29> 'unsigned int' lvalue ParmVar 0x5565ca660380 '__bsx' 'unsigned int'
|-FunctionDecl 0x5565ca660500 <col:10> col:10 implicit used __builtin_bswap32 'unsigned int (unsigned int)' extern
| |-ParmVarDecl 0x5565ca6605a0 <<invalid sloc>> <invalid sloc> 'unsigned int'
| |-NoThrowAttr 0x5565ca660610 <col:10> Implicit
| `-ConstAttr 0x5565ca660668 <col:10> Implicit
|-FunctionDecl 0x5565ca6608c0 <line:75:1, line:79:1> line:76:1 __bswap_64 '__uint64_t (__uint64_t)' static inline
| |-ParmVarDecl 0x5565ca6607b8 <col:13, col:24> col:24 used __bsx '__uint64_t':'unsigned long'
| `-CompoundStmt 0x5565ca660bd8 <line:77:1, line:79:1>
|   `-ReturnStmt 0x5565ca660bc8 <line:78:3, col:34>
|     `-CallExpr 0x5565ca660b88 <col:10, col:34> 'unsigned long'
|       |-ImplicitCastExpr 0x5565ca660b70 <col:10> 'unsigned long (*)(unsigned long)' <BuiltinFnToFnPtr>
|       | `-DeclRefExpr 0x5565ca660af8 <col:10> '<builtin fn type>' Function 0x5565ca660968 '__builtin_bswap64' 'unsigned long (unsigned long)'
|       `-ImplicitCastExpr 0x5565ca660bb0 <col:29> '__uint64_t':'unsigned long' <LValueToRValue>
|         `-DeclRefExpr 0x5565ca660b18 <col:29> '__uint64_t':'unsigned long' lvalue ParmVar 0x5565ca6607b8 '__bsx' '__uint64_t':'unsigned long'
|-FunctionDecl 0x5565ca660968 <col:10> col:10 implicit used __builtin_bswap64 'unsigned long (unsigned long)' extern
| |-ParmVarDecl 0x5565ca660a08 <<invalid sloc>> <invalid sloc> 'unsigned long'
| |-NoThrowAttr 0x5565ca660a78 <col:10> Implicit
| `-ConstAttr 0x5565ca660ad0 <col:10> Implicit
|-TypedefDecl 0x5565ca660c08 <line:80:1, col:27> col:27 referenced size_t 'unsigned long'
| `-BuiltinType 0x5565ca5f6fd0 'unsigned long'
|-TypedefDecl 0x5565ca660c98 <line:82:1, col:18> col:18 referenced time_t '__time_t':'long'
| `-TypedefType 0x5565ca660c60 '__time_t' sugar
|   |-Typedef 0x5565ca65e888 '__time_t'
|   `-BuiltinType 0x5565ca5f6f30 'long'
|-RecordDecl 0x5565ca660cf0 <line:85:1, line:89:3> line:85:8 struct timespec definition
| |-FieldDecl 0x5565ca660da8 <line:87:5, col:14> col:14 tv_sec '__time_t':'long'
| `-FieldDecl 0x5565ca660e38 <line:88:5, col:23> col:23 tv_nsec '__syscall_slong_t':'long'
|-TypedefDecl 0x5565ca660ec8 <line:90:1, col:17> col:17 referenced pid_t '__pid_t':'int'
| `-TypedefType 0x5565ca660e90 '__pid_t' sugar
|   |-Typedef 0x5565ca65e3e8 '__pid_t'
|   `-BuiltinType 0x5565ca5f6f10 'int'
|-RecordDecl 0x5565ca660f20 <line:91:1, line:94:3> line:91:8 struct sched_param definition
| `-FieldDecl 0x5565ca660fe0 <line:93:5, col:9> col:9 __sched_priority 'int'
|-RecordDecl 0x5565ca661030 <line:97:1, line:100:3> line:97:8 struct __sched_param definition
| `-FieldDecl 0x5565ca6610f0 <line:99:5, col:9> col:9 __sched_priority 'int'
|-TypedefDecl 0x5565ca661158 <line:101:1, col:27> col:27 referenced __cpu_mask 'unsigned long'
| `-BuiltinType 0x5565ca5f6fd0 'unsigned long'
|-RecordDecl 0x5565ca6611b0 <line:102:9, line:105:1> line:102:9 struct definition
| `-FieldDecl 0x5565ca662480 <line:104:3, col:53> col:14 __bits '__cpu_mask [64]'
|-TypedefDecl 0x5565ca662530 <line:102:1, line:105:3> col:3 referenced cpu_set_t 'struct cpu_set_t':'cpu_set_t'
| `-ElaboratedType 0x5565ca6624d0 'struct cpu_set_t' sugar
|   `-RecordType 0x5565ca661230 'cpu_set_t'
|     `-Record 0x5565ca6611b0 ''
|-FunctionDecl 0x5565ca662808 <line:107:1, line:108:42> line:107:12 __sched_cpucount 'int (size_t, const cpu_set_t *)' extern
| |-ParmVarDecl 0x5565ca6625d8 <col:30, col:37> col:37 __setsize 'size_t':'unsigned long'
| |-ParmVarDecl 0x5565ca6626e0 <col:48, col:65> col:65 __setp 'const cpu_set_t *'
| `-NoThrowAttr 0x5565ca6628b8 <line:108:19>
|-FunctionDecl 0x5565ca662a90 <line:109:1, col:92> col:19 __sched_cpualloc 'cpu_set_t *(size_t)' extern
| |-ParmVarDecl 0x5565ca662920 <col:37, col:44> col:44 __count 'size_t':'unsigned long'
| `-NoThrowAttr 0x5565ca662b38 <col:69>
|-FunctionDecl 0x5565ca662cb0 <line:110:1, col:87> col:13 __sched_cpufree 'void (cpu_set_t *)' extern
| |-ParmVarDecl 0x5565ca662ba0 <col:30, col:41> col:41 __set 'cpu_set_t *'
| `-NoThrowAttr 0x5565ca662d58 <col:64>
|-FunctionDecl 0x5565ca663018 <line:113:1, line:114:45> line:113:12 sched_setparam 'int (__pid_t, const struct sched_param *)' extern
| |-ParmVarDecl 0x5565ca662dc0 <col:28, col:36> col:36 __pid '__pid_t':'int'
| |-ParmVarDecl 0x5565ca662ef8 <col:43, col:69> col:69 __param 'const struct sched_param *'
| `-NoThrowAttr 0x5565ca6630c8 <line:114:22>
|-FunctionDecl 0x5565ca6633b0 <line:115:1, col:111> col:12 sched_getparam 'int (__pid_t, struct sched_param *)' extern
| |-ParmVarDecl 0x5565ca663130 <col:28, col:36> col:36 __pid '__pid_t':'int'
| |-ParmVarDecl 0x5565ca663228 <col:43, col:63> col:63 __param 'struct sched_param *'
| `-NoThrowAttr 0x5565ca663460 <col:88>
|-FunctionDecl 0x5565ca663718 <line:116:1, line:117:85> line:116:12 sched_setscheduler 'int (__pid_t, int, const struct sched_param *)' extern
| |-ParmVarDecl 0x5565ca6634c8 <col:32, col:40> col:40 __pid '__pid_t':'int'
| |-ParmVarDecl 0x5565ca663548 <col:47, col:51> col:51 __policy 'int'
| |-ParmVarDecl 0x5565ca6635d8 <line:117:11, col:37> col:37 __param 'const struct sched_param *'
| `-NoThrowAttr 0x5565ca6637d0 <col:62>
|-FunctionDecl 0x5565ca663948 <line:118:1, col:86> col:12 sched_getscheduler 'int (__pid_t)' extern
| |-ParmVarDecl 0x5565ca663838 <col:32, col:40> col:40 __pid '__pid_t':'int'
| `-NoThrowAttr 0x5565ca6639f0 <col:63>
|-FunctionDecl 0x5565ca663b18 <line:119:1, col:70> col:12 sched_yield 'int (void)' extern
| `-NoThrowAttr 0x5565ca663bb8 <col:47>
|-FunctionDecl 0x5565ca663cc0 <line:120:1, col:92> col:12 sched_get_priority_max 'int (int)' extern
| |-ParmVarDecl 0x5565ca663c28 <col:36, col:40> col:40 __algorithm 'int'
| `-NoThrowAttr 0x5565ca663d68 <col:69>
|-FunctionDecl 0x5565ca663e70 <line:121:1, col:92> col:12 sched_get_priority_min 'int (int)' extern
| |-ParmVarDecl 0x5565ca663dd8 <col:36, col:40> col:40 __algorithm 'int'
| `-NoThrowAttr 0x5565ca663f18 <col:69>
|-FunctionDecl 0x5565ca6641d8 <line:122:1, col:111> col:12 sched_rr_get_interval 'int (__pid_t, struct timespec *)' extern
| |-ParmVarDecl 0x5565ca663f80 <col:35, col:43> col:43 __pid '__pid_t':'int'
| |-ParmVarDecl 0x5565ca6640b8 <col:50, col:67> col:67 __t 'struct timespec *'
| `-NoThrowAttr 0x5565ca664288 <col:88>
|-TypedefDecl 0x5565ca664318 <line:126:1, col:19> col:19 referenced clock_t '__clock_t':'long'
| `-TypedefType 0x5565ca6642e0 '__clock_t' sugar
|   |-Typedef 0x5565ca65e6c8 '__clock_t'
|   `-BuiltinType 0x5565ca5f6f30 'long'
|-TypedefDecl 0x5565ca6643c0 <line:129:1, col:21> col:21 referenced clockid_t '__clockid_t':'int'
| `-TypedefType 0x5565ca664370 '__clockid_t' sugar
|   |-Typedef 0x5565ca65eab8 '__clockid_t'
|   `-BuiltinType 0x5565ca5f6f10 'int'
|-TypedefDecl 0x5565ca664458 <line:130:1, col:19> col:19 referenced timer_t '__timer_t':'void *'
| `-TypedefType 0x5565ca664420 '__timer_t' sugar
|   |-Typedef 0x5565ca65eb28 '__timer_t'
|   `-PointerType 0x5565ca5f7630 'void *'
|     `-BuiltinType 0x5565ca5f6e70 'void'
|-RecordDecl 0x5565ca6644b0 <line:132:1, line:145:1> line:132:8 struct tm definition
| |-FieldDecl 0x5565ca664570 <line:134:3, col:7> col:7 tm_sec 'int'
| |-FieldDecl 0x5565ca6645d8 <line:135:3, col:7> col:7 tm_min 'int'
| |-FieldDecl 0x5565ca664640 <line:136:3, col:7> col:7 tm_hour 'int'
| |-FieldDecl 0x5565ca6646a8 <line:137:3, col:7> col:7 tm_mday 'int'
| |-FieldDecl 0x5565ca664710 <line:138:3, col:7> col:7 tm_mon 'int'
| |-FieldDecl 0x5565ca664778 <line:139:3, col:7> col:7 tm_year 'int'
| |-FieldDecl 0x5565ca6647e0 <line:140:3, col:7> col:7 tm_wday 'int'
| |-FieldDecl 0x5565ca664848 <line:141:3, col:7> col:7 tm_yday 'int'
| |-FieldDecl 0x5565ca6648b0 <line:142:3, col:7> col:7 tm_isdst 'int'
| |-FieldDecl 0x5565ca664918 <line:143:3, col:12> col:12 tm_gmtoff 'long'
| `-FieldDecl 0x5565ca664980 <line:144:3, col:15> col:15 tm_zone 'const char *'
|-RecordDecl 0x5565ca6649d0 <line:148:1, line:152:3> line:148:8 struct itimerspec definition
| |-FieldDecl 0x5565ca664a98 <line:150:5, col:21> col:21 it_interval 'struct timespec':'struct timespec'
| `-FieldDecl 0x5565ca664b08 <line:151:5, col:21> col:21 it_value 'struct timespec':'struct timespec'
|-RecordDecl 0x5565ca664bb0 <line:153:1, col:8> col:8 struct sigevent
|-FunctionDecl 0x5565ca664d80 <line:155:1, col:68> col:16 clock 'clock_t (void)' extern
| `-NoThrowAttr 0x5565ca664e20 <col:45>
|-FunctionDecl 0x5565ca665000 <line:156:1, col:77> col:15 time 'time_t (time_t *)' extern
| |-ParmVarDecl 0x5565ca664ef0 <col:21, col:29> col:29 __timer 'time_t *'
| `-NoThrowAttr 0x5565ca6650a8 <col:54>
|-FunctionDecl 0x5565ca6652a8 <line:157:1, line:158:73> line:157:15 difftime 'double (time_t, time_t)' extern
| |-ParmVarDecl 0x5565ca665110 <col:25, col:32> col:32 __time1 'time_t':'long'
| |-ParmVarDecl 0x5565ca665188 <col:41, col:48> col:48 __time0 'time_t':'long'
| |-NoThrowAttr 0x5565ca665358 <line:158:22>
| `-ConstAttr 0x5565ca665ff0 <col:63>
|-FunctionDecl 0x5565ca6661f0 <line:159:1, col:79> col:15 mktime 'time_t (struct tm *)' extern
| |-ParmVarDecl 0x5565ca6660e8 <col:23, col:34> col:34 __tp 'struct tm *'
| `-NoThrowAttr 0x5565ca666298 <col:56>
|-FunctionDecl 0x5565ca666640 <line:160:1, line:162:77> line:160:15 strftime 'size_t (char *restrict, size_t, const char *restrict, const struct tm *restrict)' extern
| |-ParmVarDecl 0x5565ca666308 <col:25, col:42> col:42 __s 'char *restrict'
| |-ParmVarDecl 0x5565ca666380 <col:47, col:54> col:54 __maxsize 'size_t':'unsigned long'
| |-ParmVarDecl 0x5565ca666400 <line:161:4, col:27> col:27 __format 'const char *restrict'
| |-ParmVarDecl 0x5565ca6664f8 <line:162:4, col:32> col:32 __tp 'const struct tm *restrict'
| `-NoThrowAttr 0x5565ca666700 <col:54>
|-RecordDecl 0x5565ca666758 <line:164:9, line:171:1> line:164:16 struct __locale_struct definition
| |-RecordDecl 0x5565ca666808 parent 0x5565ca5f6e18 <line:166:3, col:10> col:10 struct __locale_data
| |-FieldDecl 0x5565ca666a68 <col:3, col:37> col:25 __locales 'struct __locale_data *[13]'
| |-FieldDecl 0x5565ca666b08 <line:167:3, col:29> col:29 __ctype_b 'const unsigned short *'
| |-FieldDecl 0x5565ca666b70 <line:168:3, col:14> col:14 __ctype_tolower 'const int *'
| |-FieldDecl 0x5565ca666bd8 <line:169:3, col:14> col:14 __ctype_toupper 'const int *'
| `-FieldDecl 0x5565ca666cc8 <line:170:3, col:25> col:15 __names 'const char *[13]'
|-TypedefDecl 0x5565ca666de8 <line:164:1, line:171:4> col:4 referenced __locale_t 'struct __locale_struct *'
| `-PointerType 0x5565ca666d90 'struct __locale_struct *'
|   `-ElaboratedType 0x5565ca666d20 'struct __locale_struct' sugar
|     `-RecordType 0x5565ca6667e0 'struct __locale_struct'
|       `-Record 0x5565ca666758 '__locale_struct'
|-TypedefDecl 0x5565ca666e98 <line:172:1, col:20> col:20 locale_t '__locale_t':'struct __locale_struct *'
| `-TypedefType 0x5565ca666e60 '__locale_t' sugar
|   |-Typedef 0x5565ca666de8 '__locale_t'
|   `-PointerType 0x5565ca666d90 'struct __locale_struct *'
|     `-ElaboratedType 0x5565ca666d20 'struct __locale_struct' sugar
|       `-RecordType 0x5565ca6667e0 'struct __locale_struct'
|         `-Record 0x5565ca666758 '__locale_struct'
|-FunctionDecl 0x5565ca6682a0 <line:173:1, line:176:63> line:173:15 strftime_l 'size_t (char *restrict, size_t, const char *restrict, const struct tm *restrict, __locale_t)' extern
| |-ParmVarDecl 0x5565ca666f08 <col:27, col:44> col:44 __s 'char *restrict'
| |-ParmVarDecl 0x5565ca666f80 <col:49, col:56> col:56 __maxsize 'size_t':'unsigned long'
| |-ParmVarDecl 0x5565ca668028 <line:174:6, col:29> col:29 __format 'const char *restrict'
| |-ParmVarDecl 0x5565ca6680b8 <line:175:6, col:34> col:34 __tp 'const struct tm *restrict'
| |-ParmVarDecl 0x5565ca668130 <line:176:6, col:17> col:17 __loc '__locale_t':'struct __locale_struct *'
| `-NoThrowAttr 0x5565ca668368 <col:40>
|-FunctionDecl 0x5565ca668558 <line:178:1, col:89> col:19 gmtime 'struct tm *(const time_t *)' extern
| |-ParmVarDecl 0x5565ca668430 <col:27, col:41> col:41 __timer 'const time_t *'
| `-NoThrowAttr 0x5565ca668600 <col:66>
|-FunctionDecl 0x5565ca668710 <line:179:1, col:92> col:19 localtime 'struct tm *(const time_t *)' extern
| |-ParmVarDecl 0x5565ca668668 <col:30, col:44> col:44 __timer 'const time_t *'
| `-NoThrowAttr 0x5565ca6687b8 <col:69>
|-FunctionDecl 0x5565ca6689e8 <line:181:1, line:182:75> line:181:19 gmtime_r 'struct tm *(const time_t *restrict, struct tm *restrict)' extern
| |-ParmVarDecl 0x5565ca668820 <col:29, col:54> col:54 __timer 'const time_t *restrict'
| |-ParmVarDecl 0x5565ca6688b0 <line:182:8, col:30> col:30 __tp 'struct tm *restrict'
| `-NoThrowAttr 0x5565ca668a98 <col:52>
|-FunctionDecl 0x5565ca668c40 <line:183:1, line:184:78> line:183:19 localtime_r 'struct tm *(const time_t *restrict, struct tm *restrict)' extern
| |-ParmVarDecl 0x5565ca668b00 <col:32, col:57> col:57 __timer 'const time_t *restrict'
| |-ParmVarDecl 0x5565ca668b90 <line:184:11, col:33> col:33 __tp 'struct tm *restrict'
| `-NoThrowAttr 0x5565ca668cf0 <col:55>
|-FunctionDecl 0x5565ca668e88 <line:186:1, col:85> col:14 asctime 'char *(const struct tm *)' extern
| |-ParmVarDecl 0x5565ca668d70 <col:23, col:40> col:40 __tp 'const struct tm *'
| `-NoThrowAttr 0x5565ca668f30 <col:62>
|-FunctionDecl 0x5565ca669168 <line:187:1, col:83> col:14 ctime 'char *(const time_t *)' extern
| |-ParmVarDecl 0x5565ca668f98 <col:21, col:35> col:35 __timer 'const time_t *'
| `-NoThrowAttr 0x5565ca669210 <col:60>
|-FunctionDecl 0x5565ca669438 <line:189:1, line:190:67> line:189:14 asctime_r 'char *(const struct tm *restrict, char *restrict)' extern
| |-ParmVarDecl 0x5565ca669290 <col:25, col:53> col:53 __tp 'const struct tm *restrict'
| |-ParmVarDecl 0x5565ca669310 <line:190:4, col:21> col:21 __buf 'char *restrict'
| `-NoThrowAttr 0x5565ca6694e8 <col:44>
|-FunctionDecl 0x5565ca6696f8 <line:191:1, line:192:72> line:191:14 ctime_r 'char *(const time_t *restrict, char *restrict)' extern
| |-ParmVarDecl 0x5565ca669550 <col:23, col:48> col:48 __timer 'const time_t *restrict'
| |-ParmVarDecl 0x5565ca6695d0 <line:192:9, col:26> col:26 __buf 'char *restrict'
| `-NoThrowAttr 0x5565ca6697a8 <col:49>
|-VarDecl 0x5565ca6698a8 <line:193:1, col:24> col:14 __tzname 'char *[2]' extern
|-VarDecl 0x5565ca669928 <line:194:1, col:12> col:12 __daylight 'int' extern
|-VarDecl 0x5565ca6699a8 <line:195:1, col:17> col:17 __timezone 'long' extern
|-VarDecl 0x5565ca669a70 <line:196:1, col:22> col:14 tzname 'char *[2]' extern
|-FunctionDecl 0x5565ca669ba0 <line:197:1, col:65> col:13 tzset 'void (void)' extern
| `-NoThrowAttr 0x5565ca669c40 <col:42>
|-VarDecl 0x5565ca669cb0 <line:198:1, col:12> col:12 daylight 'int' extern
|-VarDecl 0x5565ca669d30 <line:199:1, col:17> col:17 timezone 'long' extern
|-FunctionDecl 0x5565ca669eb8 <line:200:1, col:80> col:12 stime 'int (const time_t *)' extern
| |-ParmVarDecl 0x5565ca669da8 <col:19, col:33> col:33 __when 'const time_t *'
| `-NoThrowAttr 0x5565ca669f60 <col:57>
|-FunctionDecl 0x5565ca66a0d0 <line:201:1, col:79> col:15 timegm 'time_t (struct tm *)' extern
| |-ParmVarDecl 0x5565ca669fe0 <col:23, col:34> col:34 __tp 'struct tm *'
| `-NoThrowAttr 0x5565ca66a178 <col:56>
|-FunctionDecl 0x5565ca66a288 <line:202:1, col:82> col:15 timelocal 'time_t (struct tm *)' extern
| |-ParmVarDecl 0x5565ca66a1f8 <col:26, col:37> col:37 __tp 'struct tm *'
| `-NoThrowAttr 0x5565ca66a330 <col:59>
|-FunctionDecl 0x5565ca66a438 <line:203:1, col:99> col:12 dysize 'int (int)' extern
| |-ParmVarDecl 0x5565ca66a3a0 <col:20, col:24> col:24 __year 'int'
| |-NoThrowAttr 0x5565ca66a4e0 <col:48>
| `-ConstAttr 0x5565ca66a538 <col:89>
|-FunctionDecl 0x5565ca66a798 <line:204:1, line:205:37> line:204:12 nanosleep 'int (const struct timespec *, struct timespec *)' extern
| |-ParmVarDecl 0x5565ca66a5e8 <col:23, col:46> col:46 __requested_time 'const struct timespec *'
| `-ParmVarDecl 0x5565ca66a678 <line:205:9, col:26> col:26 __remaining 'struct timespec *'
|-FunctionDecl 0x5565ca66a9f8 <line:206:1, col:111> col:12 clock_getres 'int (clockid_t, struct timespec *)' extern
| |-ParmVarDecl 0x5565ca66a888 <col:26, col:36> col:36 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x5565ca66a918 <col:48, col:65> col:65 __res 'struct timespec *'
| `-NoThrowAttr 0x5565ca66aaa8 <col:88>
|-FunctionDecl 0x5565ca66ac40 <line:207:1, col:111> col:12 clock_gettime 'int (clockid_t, struct timespec *)' extern
| |-ParmVarDecl 0x5565ca66ab10 <col:27, col:37> col:37 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x5565ca66aba0 <col:49, col:66> col:66 __tp 'struct timespec *'
| `-NoThrowAttr 0x5565ca66acf0 <col:88>
|-FunctionDecl 0x5565ca66af08 <line:208:1, line:209:45> line:208:12 clock_settime 'int (clockid_t, const struct timespec *)' extern
| |-ParmVarDecl 0x5565ca66ad58 <col:27, col:37> col:37 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x5565ca66ade8 <col:49, col:72> col:72 __tp 'const struct timespec *'
| `-NoThrowAttr 0x5565ca66afb8 <line:209:22>
|-FunctionDecl 0x5565ca66b358 <line:210:1, line:212:30> line:210:12 clock_nanosleep 'int (clockid_t, int, const struct timespec *, struct timespec *)' extern
| |-ParmVarDecl 0x5565ca66b020 <col:29, col:39> col:39 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x5565ca66b0e0 <col:51, col:55> col:55 __flags 'int'
| |-ParmVarDecl 0x5565ca66b170 <line:211:8, col:31> col:31 __req 'const struct timespec *'
| `-ParmVarDecl 0x5565ca66b200 <line:212:8, col:25> col:25 __rem 'struct timespec *'
|-FunctionDecl 0x5565ca66b658 <line:213:1, col:108> col:12 clock_getcpuclockid 'int (pid_t, clockid_t *)' extern
| |-ParmVarDecl 0x5565ca66b458 <col:33, col:39> col:39 __pid 'pid_t':'int'
| |-ParmVarDecl 0x5565ca66b530 <col:46, col:57> col:57 __clock_id 'clockid_t *'
| `-NoThrowAttr 0x5565ca66b708 <col:85>
|-FunctionDecl 0x5565ca66baf8 <line:214:1, line:216:75> line:214:12 timer_create 'int (clockid_t, struct sigevent *restrict, timer_t *restrict)' extern
| |-ParmVarDecl 0x5565ca66b770 <col:26, col:36> col:36 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x5565ca66b8a8 <line:215:5, col:33> col:33 __evp 'struct sigevent *restrict'
| |-ParmVarDecl 0x5565ca66b9b0 <line:216:5, col:25> col:25 __timerid 'timer_t *restrict'
| `-NoThrowAttr 0x5565ca66bbb0 <col:52>
|-FunctionDecl 0x5565ca66bd28 <line:217:1, col:84> col:12 timer_delete 'int (timer_t)' extern
| |-ParmVarDecl 0x5565ca66bc18 <col:26, col:34> col:34 __timerid 'timer_t':'void *'
| `-NoThrowAttr 0x5565ca66bdd0 <col:61>
|-FunctionDecl 0x5565ca66c248 <line:218:1, line:220:85> line:218:12 timer_settime 'int (timer_t, int, const struct itimerspec *restrict, struct itimerspec *restrict)' extern
| |-ParmVarDecl 0x5565ca66be38 <col:27, col:35> col:35 __timerid 'timer_t':'void *'
| |-ParmVarDecl 0x5565ca66beb8 <col:46, col:50> col:50 __flags 'int'
| |-ParmVarDecl 0x5565ca66bfe8 <line:219:6, col:42> col:42 __value 'const struct itimerspec *restrict'
| |-ParmVarDecl 0x5565ca66c0f0 <line:220:6, col:36> col:36 __ovalue 'struct itimerspec *restrict'
| `-NoThrowAttr 0x5565ca66c308 <col:62>
|-FunctionDecl 0x5565ca66c528 <line:221:1, line:222:45> line:221:12 timer_gettime 'int (timer_t, struct itimerspec *)' extern
| |-ParmVarDecl 0x5565ca66c370 <col:27, col:35> col:35 __timerid 'timer_t':'void *'
| |-ParmVarDecl 0x5565ca66c400 <col:46, col:65> col:65 __value 'struct itimerspec *'
| `-NoThrowAttr 0x5565ca66c5d8 <line:222:22>
|-FunctionDecl 0x5565ca66c6d8 <line:223:1, col:88> col:12 timer_getoverrun 'int (timer_t)' extern
| |-ParmVarDecl 0x5565ca66c640 <col:30, col:38> col:38 __timerid 'timer_t':'void *'
| `-NoThrowAttr 0x5565ca66c780 <col:65>
|-TypedefDecl 0x5565ca66c7f0 <line:225:1, col:27> col:27 referenced pthread_t 'unsigned long'
| `-BuiltinType 0x5565ca5f6fd0 'unsigned long'
|-RecordDecl 0x5565ca66c848 <line:226:1, line:230:1> line:226:7 union pthread_attr_t definition
| |-FieldDecl 0x5565ca66c990 <line:228:3, col:17> col:8 __size 'char [56]'
| `-FieldDecl 0x5565ca66c9f8 <line:229:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x5565ca66caa8 <line:231:1, col:30> col:30 referenced pthread_attr_t 'union pthread_attr_t':'union pthread_attr_t'
| `-ElaboratedType 0x5565ca66ca50 'union pthread_attr_t' sugar
|   `-RecordType 0x5565ca66c8d0 'union pthread_attr_t'
|     `-Record 0x5565ca66c848 'pthread_attr_t'
|-RecordDecl 0x5565ca66cb00 <line:232:9, line:236:1> line:232:16 struct __pthread_internal_list definition
| |-FieldDecl 0x5565ca66cc78 <line:234:3, col:35> col:35 __prev 'struct __pthread_internal_list *'
| `-FieldDecl 0x5565ca66ccf0 <line:235:3, col:35> col:35 __next 'struct __pthread_internal_list *'
|-TypedefDecl 0x5565ca66cda0 <line:232:1, line:236:3> col:3 referenced __pthread_list_t 'struct __pthread_internal_list':'struct __pthread_internal_list'
| `-ElaboratedType 0x5565ca66cd40 'struct __pthread_internal_list' sugar
|   `-RecordType 0x5565ca66cb80 'struct __pthread_internal_list'
|     `-Record 0x5565ca66cb00 '__pthread_internal_list'
|-RecordDecl 0x5565ca66ce10 <line:237:9, line:251:1> line:237:9 union definition
| |-RecordDecl 0x5565ca66ceb8 parent 0x5565ca5f6e18 <line:239:3, line:248:3> line:239:10 struct __pthread_mutex_s definition
| | |-FieldDecl 0x5565ca66cf90 <line:241:5, col:9> col:9 __lock 'int'
| | |-FieldDecl 0x5565ca66cff8 <line:242:5, col:18> col:18 __count 'unsigned int'
| | |-FieldDecl 0x5565ca66d060 <line:243:5, col:9> col:9 __owner 'int'
| | |-FieldDecl 0x5565ca671110 <line:244:5, col:18> col:18 __nusers 'unsigned int'
| | |-FieldDecl 0x5565ca671178 <line:245:5, col:9> col:9 __kind 'int'
| | |-FieldDecl 0x5565ca6711e0 <line:246:5, col:9> col:9 __spins 'int'
| | `-FieldDecl 0x5565ca671268 <line:247:5, col:22> col:22 __list '__pthread_list_t':'struct __pthread_internal_list'
| |-FieldDecl 0x5565ca671320 <line:239:3, line:248:5> col:5 __data 'struct __pthread_mutex_s':'struct __pthread_mutex_s'
| |-FieldDecl 0x5565ca671410 <line:249:3, col:17> col:8 __size 'char [40]'
| `-FieldDecl 0x5565ca671478 <line:250:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x5565ca671600 <line:237:1, line:251:3> col:3 referenced pthread_mutex_t 'union pthread_mutex_t':'pthread_mutex_t'
| `-ElaboratedType 0x5565ca6715a0 'union pthread_mutex_t' sugar
|   `-RecordType 0x5565ca66ce90 'pthread_mutex_t'
|     `-Record 0x5565ca66ce10 ''
|-RecordDecl 0x5565ca671670 <line:252:9, line:256:1> line:252:9 union definition
| |-FieldDecl 0x5565ca6717b0 <line:254:3, col:16> col:8 __size 'char [4]'
| `-FieldDecl 0x5565ca671818 <line:255:3, col:7> col:7 __align 'int'
|-TypedefDecl 0x5565ca6718d0 <line:252:1, line:256:3> col:3 referenced pthread_mutexattr_t 'union pthread_mutexattr_t':'pthread_mutexattr_t'
| `-ElaboratedType 0x5565ca671870 'union pthread_mutexattr_t' sugar
|   `-RecordType 0x5565ca6716f0 'pthread_mutexattr_t'
|     `-Record 0x5565ca671670 ''
|-RecordDecl 0x5565ca671940 <line:257:9, line:272:1> line:257:9 union definition
| |-RecordDecl 0x5565ca6719e8 <line:259:3, line:269:3> line:259:3 struct definition
| | |-FieldDecl 0x5565ca671ab0 <line:261:5, col:9> col:9 __lock 'int'
| | |-FieldDecl 0x5565ca671b18 <line:262:5, col:18> col:18 __futex 'unsigned int'
| | |-FieldDecl 0x5565ca671b80 <line:263:19, col:42> col:42 __total_seq 'unsigned long long'
| | |-FieldDecl 0x5565ca671be8 <line:264:19, col:42> col:42 __wakeup_seq 'unsigned long long'
| | |-FieldDecl 0x5565ca671c50 <line:265:19, col:42> col:42 __woken_seq 'unsigned long long'
| | |-FieldDecl 0x5565ca671cb8 <line:266:5, col:11> col:11 __mutex 'void *'
| | |-FieldDecl 0x5565ca671d20 <line:267:5, col:18> col:18 __nwaiters 'unsigned int'
| | `-FieldDecl 0x5565ca671d88 <line:268:5, col:18> col:18 __broadcast_seq 'unsigned int'
| |-FieldDecl 0x5565ca671e40 <line:259:3, line:269:5> col:5 __data 'struct (anonymous struct at ./split_6/mix009_pso.opt_false-unreach-call.i:259:3)':'struct pthread_cond_t::(anonymous at ./split_6/mix009_pso.opt_false-unreach-call.i:259:3)'
| |-FieldDecl 0x5565ca671f30 <line:270:3, col:17> col:8 __size 'char [48]'
| `-FieldDecl 0x5565ca671f98 <line:271:17, col:31> col:31 __align 'long long'
|-TypedefDecl 0x5565ca673130 <line:257:1, line:272:3> col:3 referenced pthread_cond_t 'union pthread_cond_t':'pthread_cond_t'
| `-ElaboratedType 0x5565ca672070 'union pthread_cond_t' sugar
|   `-RecordType 0x5565ca6719c0 'pthread_cond_t'
|     `-Record 0x5565ca671940 ''
|-RecordDecl 0x5565ca6731a0 <line:273:9, line:277:1> line:273:9 union definition
| |-FieldDecl 0x5565ca6732a0 <line:275:3, col:16> col:8 __size 'char [4]'
| `-FieldDecl 0x5565ca673308 <line:276:3, col:7> col:7 __align 'int'
|-TypedefDecl 0x5565ca6733c0 <line:273:1, line:277:3> col:3 referenced pthread_condattr_t 'union pthread_condattr_t':'pthread_condattr_t'
| `-ElaboratedType 0x5565ca673360 'union pthread_condattr_t' sugar
|   `-RecordType 0x5565ca673220 'pthread_condattr_t'
|     `-Record 0x5565ca6731a0 ''
|-TypedefDecl 0x5565ca673448 <line:278:1, col:22> col:22 referenced pthread_key_t 'unsigned int'
| `-BuiltinType 0x5565ca5f6fb0 'unsigned int'
|-TypedefDecl 0x5565ca6734b8 <line:279:1, col:13> col:13 referenced pthread_once_t 'int'
| `-BuiltinType 0x5565ca5f6f10 'int'
|-RecordDecl 0x5565ca673510 <line:280:9, line:298:1> line:280:9 union definition
| |-RecordDecl 0x5565ca6735b8 <line:282:3, line:295:3> line:282:3 struct definition
| | |-FieldDecl 0x5565ca673680 <line:284:5, col:9> col:9 __lock 'int'
| | |-FieldDecl 0x5565ca6736e8 <line:285:5, col:18> col:18 __nr_readers 'unsigned int'
| | |-FieldDecl 0x5565ca673750 <line:286:5, col:18> col:18 __readers_wakeup 'unsigned int'
| | |-FieldDecl 0x5565ca6737b8 <line:287:5, col:18> col:18 __writer_wakeup 'unsigned int'
| | |-FieldDecl 0x5565ca673820 <line:288:5, col:18> col:18 __nr_readers_queued 'unsigned int'
| | |-FieldDecl 0x5565ca673888 <line:289:5, col:18> col:18 __nr_writers_queued 'unsigned int'
| | |-FieldDecl 0x5565ca6738f0 <line:290:5, col:9> col:9 __writer 'int'
| | |-FieldDecl 0x5565ca673958 <line:291:5, col:9> col:9 __shared 'int'
| | |-FieldDecl 0x5565ca6739c0 <line:292:5, col:23> col:23 __pad1 'unsigned long'
| | |-FieldDecl 0x5565ca673a28 <line:293:5, col:23> col:23 __pad2 'unsigned long'
| | `-FieldDecl 0x5565ca673a90 <line:294:5, col:18> col:18 __flags 'unsigned int'
| |-FieldDecl 0x5565ca673b40 <line:282:3, line:295:5> col:5 __data 'struct (anonymous struct at ./split_6/mix009_pso.opt_false-unreach-call.i:282:3)':'struct pthread_rwlock_t::(anonymous at ./split_6/mix009_pso.opt_false-unreach-call.i:282:3)'
| |-FieldDecl 0x5565ca673be8 <line:296:3, col:17> col:8 __size 'char [56]'
| `-FieldDecl 0x5565ca673c50 <line:297:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x5565ca673da0 <line:280:1, line:298:3> col:3 referenced pthread_rwlock_t 'union pthread_rwlock_t':'pthread_rwlock_t'
| `-ElaboratedType 0x5565ca673d40 'union pthread_rwlock_t' sugar
|   `-RecordType 0x5565ca673590 'pthread_rwlock_t'
|     `-Record 0x5565ca673510 ''
|-RecordDecl 0x5565ca673e10 <line:299:9, line:303:1> line:299:9 union definition
| |-FieldDecl 0x5565ca673f50 <line:301:3, col:16> col:8 __size 'char [8]'
| `-FieldDecl 0x5565ca673fb8 <line:302:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x5565ca674070 <line:299:1, line:303:3> col:3 referenced pthread_rwlockattr_t 'union pthread_rwlockattr_t':'pthread_rwlockattr_t'
| `-ElaboratedType 0x5565ca674010 'union pthread_rwlockattr_t' sugar
|   `-RecordType 0x5565ca673e90 'pthread_rwlockattr_t'
|     `-Record 0x5565ca673e10 ''
|-TypedefDecl 0x5565ca675140 <line:304:1, col:22> col:22 referenced pthread_spinlock_t 'volatile int'
| `-QualType 0x5565ca5f6f14 'volatile int' volatile
|   `-BuiltinType 0x5565ca5f6f10 'int'
|-RecordDecl 0x5565ca675198 <line:305:9, line:309:1> line:305:9 union definition
| |-FieldDecl 0x5565ca6752e0 <line:307:3, col:17> col:8 __size 'char [32]'
| `-FieldDecl 0x5565ca675348 <line:308:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x5565ca675400 <line:305:1, line:309:3> col:3 referenced pthread_barrier_t 'union pthread_barrier_t':'pthread_barrier_t'
| `-ElaboratedType 0x5565ca6753a0 'union pthread_barrier_t' sugar
|   `-RecordType 0x5565ca675220 'pthread_barrier_t'
|     `-Record 0x5565ca675198 ''
|-RecordDecl 0x5565ca675470 <line:310:9, line:314:1> line:310:9 union definition
| |-FieldDecl 0x5565ca675570 <line:312:3, col:16> col:8 __size 'char [4]'
| `-FieldDecl 0x5565ca6755d8 <line:313:3, col:7> col:7 __align 'int'
|-TypedefDecl 0x5565ca675690 <line:310:1, line:314:3> col:3 referenced pthread_barrierattr_t 'union pthread_barrierattr_t':'pthread_barrierattr_t'
| `-ElaboratedType 0x5565ca675630 'union pthread_barrierattr_t' sugar
|   `-RecordType 0x5565ca6754f0 'pthread_barrierattr_t'
|     `-Record 0x5565ca675470 ''
|-TypedefDecl 0x5565ca6757a8 <line:315:1, col:29> col:18 referenced __jmp_buf 'long [8]'
| `-ConstantArrayType 0x5565ca675740 'long [8]' 8 
|   `-BuiltinType 0x5565ca5f6f30 'long'
|-EnumDecl 0x5565ca675800 <line:316:1, line:320:1> line:316:1
| |-EnumConstantDecl 0x5565ca6758c8 <line:318:3> col:3 PTHREAD_CREATE_JOINABLE 'int'
| `-EnumConstantDecl 0x5565ca675918 <line:319:3> col:3 PTHREAD_CREATE_DETACHED 'int'
|-EnumDecl 0x5565ca675968 <line:321:1, line:332:1> line:321:1
| |-EnumConstantDecl 0x5565ca675a38 <line:323:3> col:3 referenced PTHREAD_MUTEX_TIMED_NP 'int'
| |-EnumConstantDecl 0x5565ca675a88 <line:324:3> col:3 referenced PTHREAD_MUTEX_RECURSIVE_NP 'int'
| |-EnumConstantDecl 0x5565ca675ad8 <line:325:3> col:3 referenced PTHREAD_MUTEX_ERRORCHECK_NP 'int'
| |-EnumConstantDecl 0x5565ca675b28 <line:326:3> col:3 PTHREAD_MUTEX_ADAPTIVE_NP 'int'
| |-EnumConstantDecl 0x5565ca675bb0 <line:328:3, col:26> col:3 referenced PTHREAD_MUTEX_NORMAL 'int'
| | `-ConstantExpr 0x5565ca675b98 <col:26> 'int'
| |   `-DeclRefExpr 0x5565ca675b78 <col:26> 'int' EnumConstant 0x5565ca675a38 'PTHREAD_MUTEX_TIMED_NP' 'int'
| |-EnumConstantDecl 0x5565ca675c38 <line:329:3, col:29> col:3 PTHREAD_MUTEX_RECURSIVE 'int'
| | `-ConstantExpr 0x5565ca675c20 <col:29> 'int'
| |   `-DeclRefExpr 0x5565ca675c00 <col:29> 'int' EnumConstant 0x5565ca675a88 'PTHREAD_MUTEX_RECURSIVE_NP' 'int'
| |-EnumConstantDecl 0x5565ca675cc0 <line:330:3, col:30> col:3 PTHREAD_MUTEX_ERRORCHECK 'int'
| | `-ConstantExpr 0x5565ca675ca8 <col:30> 'int'
| |   `-DeclRefExpr 0x5565ca675c88 <col:30> 'int' EnumConstant 0x5565ca675ad8 'PTHREAD_MUTEX_ERRORCHECK_NP' 'int'
| `-EnumConstantDecl 0x5565ca675d48 <line:331:3, col:27> col:3 PTHREAD_MUTEX_DEFAULT 'int'
|   `-ConstantExpr 0x5565ca675d30 <col:27> 'int'
|     `-DeclRefExpr 0x5565ca675d10 <col:27> 'int' EnumConstant 0x5565ca675bb0 'PTHREAD_MUTEX_NORMAL' 'int'
|-EnumDecl 0x5565ca675d98 <line:333:1, line:339:1> line:333:1
| |-EnumConstantDecl 0x5565ca675e68 <line:335:3> col:3 referenced PTHREAD_MUTEX_STALLED 'int'
| |-EnumConstantDecl 0x5565ca675ef0 <line:336:3, col:30> col:3 PTHREAD_MUTEX_STALLED_NP 'int'
| | `-ConstantExpr 0x5565ca675ed8 <col:30> 'int'
| |   `-DeclRefExpr 0x5565ca675eb8 <col:30> 'int' EnumConstant 0x5565ca675e68 'PTHREAD_MUTEX_STALLED' 'int'
| |-EnumConstantDecl 0x5565ca675f40 <line:337:3> col:3 referenced PTHREAD_MUTEX_ROBUST 'int'
| `-EnumConstantDecl 0x5565ca675fc8 <line:338:3, col:29> col:3 PTHREAD_MUTEX_ROBUST_NP 'int'
|   `-ConstantExpr 0x5565ca675fb0 <col:29> 'int'
|     `-DeclRefExpr 0x5565ca675f90 <col:29> 'int' EnumConstant 0x5565ca675f40 'PTHREAD_MUTEX_ROBUST' 'int'
|-EnumDecl 0x5565ca676018 <line:340:1, line:345:1> line:340:1
| |-EnumConstantDecl 0x5565ca6760e8 <line:342:3> col:3 PTHREAD_PRIO_NONE 'int'
| |-EnumConstantDecl 0x5565ca676150 <line:343:3> col:3 PTHREAD_PRIO_INHERIT 'int'
| `-EnumConstantDecl 0x5565ca6761a0 <line:344:3> col:3 PTHREAD_PRIO_PROTECT 'int'
|-EnumDecl 0x5565ca6761f0 <line:346:1, line:352:1> line:346:1
| |-EnumConstantDecl 0x5565ca6762b8 <line:348:3> col:3 referenced PTHREAD_RWLOCK_PREFER_READER_NP 'int'
| |-EnumConstantDecl 0x5565ca676308 <line:349:3> col:3 PTHREAD_RWLOCK_PREFER_WRITER_NP 'int'
| |-EnumConstantDecl 0x5565ca676358 <line:350:3> col:3 PTHREAD_RWLOCK_PREFER_WRITER_NONRECURSIVE_NP 'int'
| `-EnumConstantDecl 0x5565ca6763e0 <line:351:3, col:31> col:3 PTHREAD_RWLOCK_DEFAULT_NP 'int'
|   `-ConstantExpr 0x5565ca6763c8 <col:31> 'int'
|     `-DeclRefExpr 0x5565ca6763a8 <col:31> 'int' EnumConstant 0x5565ca6762b8 'PTHREAD_RWLOCK_PREFER_READER_NP' 'int'
|-EnumDecl 0x5565ca676430 <line:353:1, line:357:1> line:353:1
| |-EnumConstantDecl 0x5565ca6764f8 <line:355:3> col:3 PTHREAD_INHERIT_SCHED 'int'
| `-EnumConstantDecl 0x5565ca676548 <line:356:3> col:3 PTHREAD_EXPLICIT_SCHED 'int'
|-EnumDecl 0x5565ca676598 <line:358:1, line:362:1> line:358:1
| |-EnumConstantDecl 0x5565ca676668 <line:360:3> col:3 PTHREAD_SCOPE_SYSTEM 'int'
| `-EnumConstantDecl 0x5565ca6766b8 <line:361:3> col:3 PTHREAD_SCOPE_PROCESS 'int'
|-EnumDecl 0x5565ca676708 <line:363:1, line:367:1> line:363:1
| |-EnumConstantDecl 0x5565ca6767d8 <line:365:3> col:3 PTHREAD_PROCESS_PRIVATE 'int'
| `-EnumConstantDecl 0x5565ca676828 <line:366:3> col:3 PTHREAD_PROCESS_SHARED 'int'
|-RecordDecl 0x5565ca676878 <line:368:1, line:374:1> line:368:8 struct _pthread_cleanup_buffer definition
| |-FieldDecl 0x5565ca676ab8 <line:370:3, col:28> col:10 __routine 'void (*)(void *)'
| |-FieldDecl 0x5565ca676b20 <line:371:3, col:9> col:9 __arg 'void *'
| |-FieldDecl 0x5565ca676b88 <line:372:3, col:7> col:7 __canceltype 'int'
| `-FieldDecl 0x5565ca676ca8 <line:373:3, col:35> col:35 __prev 'struct _pthread_cleanup_buffer *'
|-EnumDecl 0x5565ca676cf8 <line:375:1, line:379:1> line:375:1
| |-EnumConstantDecl 0x5565ca676dc8 <line:377:3> col:3 PTHREAD_CANCEL_ENABLE 'int'
| `-EnumConstantDecl 0x5565ca676e18 <line:378:3> col:3 PTHREAD_CANCEL_DISABLE 'int'
|-EnumDecl 0x5565ca676e68 <line:380:1, line:384:1> line:380:1
| |-EnumConstantDecl 0x5565ca676f38 <line:382:3> col:3 PTHREAD_CANCEL_DEFERRED 'int'
| `-EnumConstantDecl 0x5565ca676f88 <line:383:3> col:3 PTHREAD_CANCEL_ASYNCHRONOUS 'int'
|-FunctionDecl 0x5565ca6775b8 <line:386:1, line:389:96> line:386:12 used pthread_create 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' extern
| |-ParmVarDecl 0x5565ca677080 <col:28, col:50> col:50 __newthread 'pthread_t *restrict'
| |-ParmVarDecl 0x5565ca6771a0 <line:387:7, col:40> col:40 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x5565ca6773a0 <line:388:7, col:39> col:15 __start_routine 'void *(*)(void *)'
| |-ParmVarDecl 0x5565ca677420 <line:389:7, col:24> col:24 __arg 'void *restrict'
| |-NoThrowAttr 0x5565ca677678 <col:47>
| |-NonNullAttr 0x5565ca6776d0 <col:77, col:94> 1 3
| `-CallbackAttr 0x5565ca677708 <line:386:12> Implicit 2 3
|-FunctionDecl 0x5565ca677830 <line:390:1, col:72> col:13 pthread_exit 'void (void *) __attribute__((noreturn))' extern
| `-ParmVarDecl 0x5565ca677760 <col:27, col:33> col:33 __retval 'void *'
|-FunctionDecl 0x5565ca677a88 <line:391:1, col:64> col:12 pthread_join 'int (pthread_t, void **)' extern
| |-ParmVarDecl 0x5565ca6778e8 <col:26, col:36> col:36 __th 'pthread_t':'unsigned long'
| `-ParmVarDecl 0x5565ca677968 <col:42, col:49> col:49 __thread_return 'void **'
|-FunctionDecl 0x5565ca677c58 <line:392:1, col:83> col:12 pthread_detach 'int (pthread_t)' extern
| |-ParmVarDecl 0x5565ca677b48 <col:28, col:38> col:38 __th 'pthread_t':'unsigned long'
| `-NoThrowAttr 0x5565ca677d00 <col:60>
|-FunctionDecl 0x5565ca677e50 <line:393:1, col:105> col:18 pthread_self 'pthread_t (void)' extern
| |-NoThrowAttr 0x5565ca677ef0 <col:54>
| `-ConstAttr 0x5565ca677f48 <col:95>
|-FunctionDecl 0x5565ca679990 <line:394:1, line:395:70> line:394:12 pthread_equal 'int (pthread_t, pthread_t)' extern
| |-ParmVarDecl 0x5565ca677f80 <col:27, col:37> col:37 __thread1 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x5565ca677ff8 <col:48, col:58> col:58 __thread2 'pthread_t':'unsigned long'
| |-NoThrowAttr 0x5565ca679a40 <line:395:19>
| `-ConstAttr 0x5565ca679a98 <col:60>
|-FunctionDecl 0x5565ca679c68 <line:396:1, col:128> col:12 pthread_attr_init 'int (pthread_attr_t *)' extern
| |-ParmVarDecl 0x5565ca679b30 <col:31, col:47> col:47 __attr 'pthread_attr_t *'
| |-NoThrowAttr 0x5565ca679d10 <col:71>
| `-NonNullAttr 0x5565ca679d68 <col:112, col:126> 1
|-FunctionDecl 0x5565ca679e70 <line:397:1, line:398:79> line:397:12 pthread_attr_destroy 'int (pthread_attr_t *)' extern
| |-ParmVarDecl 0x5565ca679db8 <col:34, col:50> col:50 __attr 'pthread_attr_t *'
| |-NoThrowAttr 0x5565ca679f18 <line:398:22>
| `-NonNullAttr 0x5565ca679f70 <col:63, col:77> 1
|-FunctionDecl 0x5565ca67a198 <line:399:1, line:401:82> line:399:12 pthread_attr_getdetachstate 'int (const pthread_attr_t *, int *)' extern
| |-ParmVarDecl 0x5565ca679fb8 <col:41, col:63> col:63 __attr 'const pthread_attr_t *'
| |-ParmVarDecl 0x5565ca67a038 <line:400:6, col:11> col:11 __detachstate 'int *'
| |-NoThrowAttr 0x5565ca67a248 <line:401:22>
| `-NonNullAttr 0x5565ca67a2a0 <col:63, col:80> 1 2
|-FunctionDecl 0x5565ca67a4a8 <line:402:1, line:404:79> line:402:12 pthread_attr_setdetachstate 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x5565ca67a2e8 <col:41, col:57> col:57 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x5565ca67a368 <line:403:6, col:10> col:10 __detachstate 'int'
| |-NoThrowAttr 0x5565ca67a558 <line:404:22>
| `-NonNullAttr 0x5565ca67a5b0 <col:63, col:77> 1
|-FunctionDecl 0x5565ca67a808 <line:405:1, line:407:82> line:405:12 pthread_attr_getguardsize 'int (const pthread_attr_t *, size_t *)' extern
| |-ParmVarDecl 0x5565ca67a5f8 <col:39, col:61> col:61 __attr 'const pthread_attr_t *'
| |-ParmVarDecl 0x5565ca67a6a0 <line:406:11, col:19> col:19 __guardsize 'size_t *'
| |-NoThrowAttr 0x5565ca67a8b8 <line:407:22>
| `-NonNullAttr 0x5565ca67a910 <col:63, col:80> 1 2
|-FunctionDecl 0x5565ca67bb68 <line:408:1, line:410:79> line:408:12 pthread_attr_setguardsize 'int (pthread_attr_t *, size_t)' extern
| |-ParmVarDecl 0x5565ca67b9b0 <col:39, col:55> col:55 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x5565ca67ba28 <line:409:11, col:18> col:18 __guardsize 'size_t':'unsigned long'
| |-NoThrowAttr 0x5565ca67bc18 <line:410:22>
| `-NonNullAttr 0x5565ca67bc70 <col:63, col:77> 1
|-FunctionDecl 0x5565ca67bea8 <line:411:1, line:413:82> line:411:12 pthread_attr_getschedparam 'int (const pthread_attr_t *restrict, struct sched_param *restrict)' extern
| |-ParmVarDecl 0x5565ca67bcb8 <col:40, col:73> col:73 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x5565ca67bd48 <line:412:12, col:43> col:43 __param 'struct sched_param *restrict'
| |-NoThrowAttr 0x5565ca67bf58 <line:413:22>
| `-NonNullAttr 0x5565ca67bfb0 <col:63, col:80> 1 2
|-FunctionDecl 0x5565ca67c1e8 <line:414:1, line:416:97> line:414:12 pthread_attr_setschedparam 'int (pthread_attr_t *restrict, const struct sched_param *restrict)' extern
| |-ParmVarDecl 0x5565ca67bff8 <col:40, col:67> col:67 __attr 'pthread_attr_t *restrict'
| |-ParmVarDecl 0x5565ca67c088 <line:415:12, line:416:12> col:12 __param 'const struct sched_param *restrict'
| |-NoThrowAttr 0x5565ca67c298 <col:37>
| `-NonNullAttr 0x5565ca67c2f0 <col:78, col:95> 1 2
|-FunctionDecl 0x5565ca67c4d8 <line:417:1, line:419:82> line:417:12 pthread_attr_getschedpolicy 'int (const pthread_attr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x5565ca67c338 <col:41, line:418:6> col:6 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x5565ca67c3b8 <col:14, col:30> col:30 __policy 'int *restrict'
| |-NoThrowAttr 0x5565ca67c588 <line:419:22>
| `-NonNullAttr 0x5565ca67c5e0 <col:63, col:80> 1 2
|-FunctionDecl 0x5565ca67c768 <line:420:1, line:421:79> line:420:12 pthread_attr_setschedpolicy 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x5565ca67c628 <col:41, col:57> col:57 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x5565ca67c6a8 <col:65, col:69> col:69 __policy 'int'
| |-NoThrowAttr 0x5565ca67c818 <line:421:22>
| `-NonNullAttr 0x5565ca67c870 <col:63, col:77> 1
|-FunctionDecl 0x5565ca67ca38 <line:422:1, line:424:82> line:422:12 pthread_attr_getinheritsched 'int (const pthread_attr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x5565ca67c8b8 <col:42, line:423:7> col:7 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x5565ca67c938 <col:15, col:31> col:31 __inherit 'int *restrict'
| |-NoThrowAttr 0x5565ca67cae8 <line:424:22>
| `-NonNullAttr 0x5565ca67cb40 <col:63, col:80> 1 2
|-FunctionDecl 0x5565ca67ccc8 <line:425:1, line:427:79> line:425:12 pthread_attr_setinheritsched 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x5565ca67cb88 <col:42, col:58> col:58 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x5565ca67cc08 <line:426:7, col:11> col:11 __inherit 'int'
| |-NoThrowAttr 0x5565ca67cd78 <line:427:22>
| `-NonNullAttr 0x5565ca67cdd0 <col:63, col:77> 1
|-FunctionDecl 0x5565ca67cf78 <line:428:1, line:430:82> line:428:12 pthread_attr_getscope 'int (const pthread_attr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x5565ca67ce18 <col:35, col:68> col:68 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x5565ca67ce98 <line:429:7, col:23> col:23 __scope 'int *restrict'
| |-NoThrowAttr 0x5565ca67d028 <line:430:22>
| `-NonNullAttr 0x5565ca67d080 <col:63, col:80> 1 2
|-FunctionDecl 0x5565ca67d208 <line:431:1, line:432:79> line:431:12 pthread_attr_setscope 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x5565ca67d0c8 <col:35, col:51> col:51 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x5565ca67d148 <col:59, col:63> col:63 __scope 'int'
| |-NoThrowAttr 0x5565ca67d2b8 <line:432:22>
| `-NonNullAttr 0x5565ca67d310 <col:63, col:77> 1
|-FunctionDecl 0x5565ca67d538 <line:433:1, line:435:115> line:433:12 pthread_attr_getstackaddr 'int (const pthread_attr_t *restrict, void **restrict)' extern
| |-ParmVarDecl 0x5565ca67d358 <col:39, line:434:11> col:11 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x5565ca67d3d8 <col:19, col:37> col:37 __stackaddr 'void **restrict'
| |-NoThrowAttr 0x5565ca67d5e8 <line:435:22>
| |-NonNullAttr 0x5565ca67d640 <col:63, col:80> 1 2
| `-DeprecatedAttr 0x5565ca67d678 <col:100> "" ""
|-FunctionDecl 0x5565ca67d888 <line:436:1, line:438:112> line:436:12 pthread_attr_setstackaddr 'int (pthread_attr_t *, void *)' extern
| |-ParmVarDecl 0x5565ca67d6c8 <col:39, col:55> col:55 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x5565ca67d748 <line:437:11, col:17> col:17 __stackaddr 'void *'
| |-NoThrowAttr 0x5565ca67d938 <line:438:22>
| |-NonNullAttr 0x5565ca67d990 <col:63, col:77> 1
| `-DeprecatedAttr 0x5565ca67d9d8 <col:97> "" ""
|-FunctionDecl 0x5565ca67dbc8 <line:439:1, line:441:82> line:439:12 pthread_attr_getstacksize 'int (const pthread_attr_t *restrict, size_t *restrict)' extern
| |-ParmVarDecl 0x5565ca67da28 <col:39, line:440:11> col:11 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x5565ca67daa0 <col:19, col:38> col:38 __stacksize 'size_t *restrict'
| |-NoThrowAttr 0x5565ca67dc78 <line:441:22>
| `-NonNullAttr 0x5565ca67dcd0 <col:63, col:80> 1 2
|-FunctionDecl 0x5565ca67de50 <line:442:1, line:444:79> line:442:12 pthread_attr_setstacksize 'int (pthread_attr_t *, size_t)' extern
| |-ParmVarDecl 0x5565ca67dd18 <col:39, col:55> col:55 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x5565ca67dd90 <line:443:11, col:18> col:18 __stacksize 'size_t':'unsigned long'
| |-NoThrowAttr 0x5565ca67df00 <line:444:22>
| `-NonNullAttr 0x5565ca67df58 <col:63, col:77> 1
|-FunctionDecl 0x5565ca67e248 <line:445:1, line:448:85> line:445:12 pthread_attr_getstack 'int (const pthread_attr_t *restrict, void **restrict, size_t *restrict)' extern
| |-ParmVarDecl 0x5565ca67dfa8 <col:35, col:68> col:68 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x5565ca67e028 <line:446:7, col:25> col:25 __stackaddr 'void **restrict'
| |-ParmVarDecl 0x5565ca67e0a0 <line:447:7, col:26> col:26 __stacksize 'size_t *restrict'
| |-NoThrowAttr 0x5565ca67e300 <line:448:22>
| `-NonNullAttr 0x5565ca67e358 <col:63, col:83> 1 2 3
|-FunctionDecl 0x5565ca67e608 <line:449:1, line:450:100> line:449:12 pthread_attr_setstack 'int (pthread_attr_t *, void *, size_t)' extern
| |-ParmVarDecl 0x5565ca67e3b0 <col:35, col:51> col:51 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x5565ca67e430 <col:59, col:65> col:65 __stackaddr 'void *'
| |-ParmVarDecl 0x5565ca67e4a8 <line:450:7, col:14> col:14 __stacksize 'size_t':'unsigned long'
| |-NoThrowAttr 0x5565ca67e6c0 <col:43>
| `-NonNullAttr 0x5565ca67e718 <col:84, col:98> 1
|-FunctionDecl 0x5565ca67ea20 <line:451:1, line:453:79> line:451:12 pthread_setschedparam 'int (pthread_t, int, const struct sched_param *)' extern
| |-ParmVarDecl 0x5565ca67e768 <col:35, col:45> col:45 __target_thread 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x5565ca67e7e8 <col:62, col:66> col:66 __policy 'int'
| |-ParmVarDecl 0x5565ca67e878 <line:452:7, col:33> col:33 __param 'const struct sched_param *'
| |-NoThrowAttr 0x5565ca67ead8 <line:453:22>
| `-NonNullAttr 0x5565ca67eb30 <col:63, col:77> 3
|-FunctionDecl 0x5565ca67ee08 <line:454:1, line:457:82> line:454:12 pthread_getschedparam 'int (pthread_t, int *restrict, struct sched_param *restrict)' extern
| |-ParmVarDecl 0x5565ca67eb78 <col:35, col:45> col:45 __target_thread 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x5565ca67ebf8 <line:455:7, col:23> col:23 __policy 'int *restrict'
| |-ParmVarDecl 0x5565ca67ec88 <line:456:7, col:38> col:38 __param 'struct sched_param *restrict'
| |-NoThrowAttr 0x5565ca67eec0 <line:457:22>
| `-NonNullAttr 0x5565ca67ef18 <col:63, col:80> 2 3
|-FunctionDecl 0x5565ca67f108 <line:458:1, line:459:45> line:458:12 pthread_setschedprio 'int (pthread_t, int)' extern
| |-ParmVarDecl 0x5565ca67ef68 <col:34, col:44> col:44 __target_thread 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x5565ca67efe8 <col:61, col:65> col:65 __prio 'int'
| `-NoThrowAttr 0x5565ca67f1b8 <line:459:22>
|-FunctionDecl 0x5565ca67f588 <line:460:1, line:461:71> line:460:12 pthread_once 'int (pthread_once_t *, void (*)(void))' extern
| |-ParmVarDecl 0x5565ca67f280 <col:26, col:42> col:42 __once_control 'pthread_once_t *'
| |-ParmVarDecl 0x5565ca67f420 <line:461:5, col:33> col:12 __init_routine 'void (*)(void)'
| `-NonNullAttr 0x5565ca67f638 <col:52, col:69> 1 2
|-FunctionDecl 0x5565ca67f7e0 <line:462:1, col:64> col:12 pthread_setcancelstate 'int (int, int *)' extern
| |-ParmVarDecl 0x5565ca67f6c0 <col:36, col:40> col:40 __state 'int'
| `-ParmVarDecl 0x5565ca67f740 <col:49, col:54> col:54 __oldstate 'int *'
|-FunctionDecl 0x5565ca67f9f0 <line:463:1, col:61> col:12 pthread_setcanceltype 'int (int, int *)' extern
| |-ParmVarDecl 0x5565ca67f8a8 <col:35, col:39> col:39 __type 'int'
| `-ParmVarDecl 0x5565ca67f928 <col:47, col:52> col:52 __oldtype 'int *'
|-FunctionDecl 0x5565ca67fb48 <line:464:1, col:42> col:12 pthread_cancel 'int (pthread_t)' extern
| `-ParmVarDecl 0x5565ca67fab0 <col:28, col:38> col:38 __th 'pthread_t':'unsigned long'
|-FunctionDecl 0x5565ca67fc88 <line:465:1, col:37> col:13 pthread_testcancel 'void (void)' extern
|-RecordDecl 0x5565ca67fd28 <line:466:9, line:474:1> line:466:9 struct definition
| |-RecordDecl 0x5565ca67fdd8 <line:468:3, line:472:3> line:468:3 struct definition
| | |-FieldDecl 0x5565ca67fec8 <line:470:5, col:15> col:15 __cancel_jmp_buf '__jmp_buf':'long [8]'
| | `-FieldDecl 0x5565ca67ff30 <line:471:5, col:9> col:9 __mask_was_saved 'int'
| |-FieldDecl 0x5565ca680100 <line:468:3, line:472:23> col:5 __cancel_jmp_buf 'struct (anonymous struct at ./split_6/mix009_pso.opt_false-unreach-call.i:468:3) [1]'
| `-FieldDecl 0x5565ca6801f8 <line:473:3, col:16> col:9 __pad 'void *[4]'
|-TypedefDecl 0x5565ca6802b0 <line:466:1, line:474:3> col:3 referenced __pthread_unwind_buf_t 'struct __pthread_unwind_buf_t':'__pthread_unwind_buf_t'
| |-ElaboratedType 0x5565ca680250 'struct __pthread_unwind_buf_t' sugar
| | `-RecordType 0x5565ca67fdb0 '__pthread_unwind_buf_t'
| |   `-Record 0x5565ca67fd28 ''
| `-AlignedAttr 0x5565ca680308 <col:42> aligned
|   `-<<<NULL>>>
|-RecordDecl 0x5565ca680380 <line:475:1, line:481:1> line:475:8 struct __pthread_cleanup_frame definition
| |-FieldDecl 0x5565ca6804e0 <line:477:3, col:35> col:10 __cancel_routine 'void (*)(void *)'
| |-FieldDecl 0x5565ca680548 <line:478:3, col:9> col:9 __cancel_arg 'void *'
| |-FieldDecl 0x5565ca6805b0 <line:479:3, col:7> col:7 __do_it 'int'
| `-FieldDecl 0x5565ca680618 <line:480:3, col:7> col:7 __cancel_type 'int'
|-FunctionDecl 0x5565ca680820 <line:482:1, col:69> col:13 __pthread_register_cancel 'void (__pthread_unwind_buf_t *)' extern
| `-ParmVarDecl 0x5565ca680710 <col:40, col:64> col:64 __buf '__pthread_unwind_buf_t *'
|-FunctionDecl 0x5565ca680a00 <line:484:1, col:71> col:13 __pthread_unregister_cancel 'void (__pthread_unwind_buf_t *)' extern
| `-ParmVarDecl 0x5565ca6808d8 <col:42, col:66> col:66 __buf '__pthread_unwind_buf_t *'
|-FunctionDecl 0x5565ca680bc0 <line:486:1, line:488:31> line:486:13 __pthread_unwind_next 'void (__pthread_unwind_buf_t *) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x5565ca680ab8 <col:36, col:60> col:60 __buf '__pthread_unwind_buf_t *'
| `-WeakAttr 0x5565ca680c68 <line:488:22>
|-RecordDecl 0x5565ca680cc0 <line:490:1, col:8> col:8 struct __jmp_buf_tag
|-FunctionDecl 0x5565ca680fd8 <line:491:1, col:98> col:12 __sigsetjmp 'int (struct __jmp_buf_tag *, int)' extern
| |-ParmVarDecl 0x5565ca680e38 <col:25, col:47> col:47 __env 'struct __jmp_buf_tag *'
| |-ParmVarDecl 0x5565ca680eb8 <col:54, col:58> col:58 __savemask 'int'
| |-NoThrowAttr 0x5565ca681088 <col:86>
| `-ReturnsTwiceAttr 0x5565ca6810e0 <col:12> Implicit
|-FunctionDecl 0x5565ca681408 <line:492:1, line:494:79> line:492:12 pthread_mutex_init 'int (pthread_mutex_t *, const pthread_mutexattr_t *)' extern
| |-ParmVarDecl 0x5565ca6811b0 <col:32, col:49> col:49 __mutex 'pthread_mutex_t *'
| |-ParmVarDecl 0x5565ca6812c0 <line:493:11, col:38> col:38 __mutexattr 'const pthread_mutexattr_t *'
| |-NoThrowAttr 0x5565ca6814b8 <line:494:22>
| `-NonNullAttr 0x5565ca681510 <col:63, col:77> 1
|-FunctionDecl 0x5565ca681688 <line:495:1, line:496:79> line:495:12 pthread_mutex_destroy 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x5565ca681558 <col:35, col:52> col:52 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x5565ca681730 <line:496:22>
| `-NonNullAttr 0x5565ca681788 <col:63, col:77> 1
|-FunctionDecl 0x5565ca681890 <line:497:1, line:498:68> line:497:12 pthread_mutex_trylock 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x5565ca6817d8 <col:35, col:52> col:52 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x5565ca681938 <line:498:22>
| `-NonNullAttr 0x5565ca681990 <col:52, col:66> 1
|-FunctionDecl 0x5565ca682ad8 <line:499:1, line:500:68> line:499:12 pthread_mutex_lock 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x5565ca682a20 <col:32, col:49> col:49 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x5565ca682b80 <line:500:22>
| `-NonNullAttr 0x5565ca682bd8 <col:52, col:66> 1
|-FunctionDecl 0x5565ca682e18 <line:501:1, line:503:85> line:501:12 pthread_mutex_timedlock 'int (pthread_mutex_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x5565ca682c28 <col:37, col:65> col:65 __mutex 'pthread_mutex_t *restrict'
| |-ParmVarDecl 0x5565ca682cb8 <line:502:9, line:503:9> col:9 __abstime 'const struct timespec *restrict'
| |-NoThrowAttr 0x5565ca682ec8 <col:36>
| `-NonNullAttr 0x5565ca682f20 <col:66, col:83> 1 2
|-FunctionDecl 0x5565ca683020 <line:504:1, line:505:68> line:504:12 pthread_mutex_unlock 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x5565ca682f68 <col:34, col:51> col:51 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x5565ca6830c8 <line:505:22>
| `-NonNullAttr 0x5565ca683120 <col:52, col:66> 1
|-FunctionDecl 0x5565ca6833b8 <line:506:1, line:509:82> line:506:12 pthread_mutex_getprioceiling 'int (const pthread_mutex_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x5565ca6831d0 <col:42, line:507:18> col:18 __mutex 'const pthread_mutex_t *restrict'
| |-ParmVarDecl 0x5565ca683250 <line:508:7, col:23> col:23 __prioceiling 'int *restrict'
| |-NoThrowAttr 0x5565ca683468 <line:509:22>
| `-NonNullAttr 0x5565ca6834c0 <col:63, col:80> 1 2
|-FunctionDecl 0x5565ca683788 <line:510:1, line:513:82> line:510:12 pthread_mutex_setprioceiling 'int (pthread_mutex_t *restrict, int, int *restrict)' extern
| |-ParmVarDecl 0x5565ca683508 <col:42, col:70> col:70 __mutex 'pthread_mutex_t *restrict'
| |-ParmVarDecl 0x5565ca683588 <line:511:7, col:11> col:11 __prioceiling 'int'
| |-ParmVarDecl 0x5565ca683608 <line:512:7, col:23> col:23 __old_ceiling 'int *restrict'
| |-NoThrowAttr 0x5565ca683840 <line:513:22>
| `-NonNullAttr 0x5565ca683898 <col:63, col:80> 1 3
|-FunctionDecl 0x5565ca683a30 <line:514:1, line:515:79> line:514:12 pthread_mutex_consistent 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x5565ca6838e8 <col:38, col:55> col:55 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x5565ca683ad8 <line:515:22>
| `-NonNullAttr 0x5565ca683b30 <col:63, col:77> 1
|-FunctionDecl 0x5565ca683d18 <line:516:1, line:517:79> line:516:12 pthread_mutexattr_init 'int (pthread_mutexattr_t *)' extern
| |-ParmVarDecl 0x5565ca683be0 <col:36, col:57> col:57 __attr 'pthread_mutexattr_t *'
| |-NoThrowAttr 0x5565ca683dc0 <line:517:22>
| `-NonNullAttr 0x5565ca683e18 <col:63, col:77> 1
|-FunctionDecl 0x5565ca683f20 <line:518:1, line:519:79> line:518:12 pthread_mutexattr_destroy 'int (pthread_mutexattr_t *)' extern
| |-ParmVarDecl 0x5565ca683e68 <col:39, col:60> col:60 __attr 'pthread_mutexattr_t *'
| |-NoThrowAttr 0x5565ca683fc8 <line:519:22>
| `-NonNullAttr 0x5565ca684020 <col:63, col:77> 1
|-FunctionDecl 0x5565ca684248 <line:520:1, line:523:82> line:520:12 pthread_mutexattr_getpshared 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x5565ca684068 <col:42, line:521:18> col:18 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x5565ca6840e8 <line:522:7, col:23> col:23 __pshared 'int *restrict'
| |-NoThrowAttr 0x5565ca6842f8 <line:523:22>
| `-NonNullAttr 0x5565ca684350 <col:63, col:80> 1 2
|-FunctionDecl 0x5565ca684558 <line:524:1, line:526:79> line:524:12 pthread_mutexattr_setpshared 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x5565ca684398 <col:42, col:63> col:63 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x5565ca684418 <line:525:7, col:11> col:11 __pshared 'int'
| |-NoThrowAttr 0x5565ca684608 <line:526:22>
| `-NonNullAttr 0x5565ca684660 <col:63, col:77> 1
|-FunctionDecl 0x5565ca684808 <line:527:1, line:529:82> line:527:12 pthread_mutexattr_gettype 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x5565ca6846a8 <col:39, line:528:11> col:11 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x5565ca684728 <col:19, col:35> col:35 __kind 'int *restrict'
| |-NoThrowAttr 0x5565ca6848b8 <line:529:22>
| `-NonNullAttr 0x5565ca684910 <col:63, col:80> 1 2
|-FunctionDecl 0x5565ca684b00 <line:530:1, line:531:79> line:530:12 pthread_mutexattr_settype 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x5565ca684958 <col:39, col:60> col:60 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x5565ca684a40 <col:68, col:72> col:72 __kind 'int'
| |-NoThrowAttr 0x5565ca684bb0 <line:531:22>
| `-NonNullAttr 0x5565ca684c08 <col:63, col:77> 1
|-FunctionDecl 0x5565ca684db8 <line:532:1, line:535:82> line:532:12 pthread_mutexattr_getprotocol 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x5565ca684c58 <col:43, line:533:19> col:19 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x5565ca684cd8 <line:534:8, col:24> col:24 __protocol 'int *restrict'
| |-NoThrowAttr 0x5565ca684e68 <line:535:22>
| `-NonNullAttr 0x5565ca684ec0 <col:63, col:80> 1 2
|-FunctionDecl 0x5565ca685048 <line:536:1, line:538:79> line:536:12 pthread_mutexattr_setprotocol 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x5565ca684f08 <col:43, col:64> col:64 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x5565ca684f88 <line:537:8, col:12> col:12 __protocol 'int'
| |-NoThrowAttr 0x5565ca6850f8 <line:538:22>
| `-NonNullAttr 0x5565ca685150 <col:63, col:77> 1
|-FunctionDecl 0x5565ca6852f8 <line:539:1, line:542:82> line:539:12 pthread_mutexattr_getprioceiling 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x5565ca685198 <col:46, line:540:22> col:22 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x5565ca685218 <line:541:11, col:27> col:27 __prioceiling 'int *restrict'
| |-NoThrowAttr 0x5565ca6853a8 <line:542:22>
| `-NonNullAttr 0x5565ca685400 <col:63, col:80> 1 2
|-FunctionDecl 0x5565ca685588 <line:543:1, line:545:79> line:543:12 pthread_mutexattr_setprioceiling 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x5565ca685448 <col:46, col:67> col:67 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x5565ca6854c8 <line:544:11, col:15> col:15 __prioceiling 'int'
| |-NoThrowAttr 0x5565ca685638 <line:545:22>
| `-NonNullAttr 0x5565ca685690 <col:63, col:77> 1
|-FunctionDecl 0x5565ca685878 <line:546:1, line:548:82> line:546:12 pthread_mutexattr_getrobust 'int (const pthread_mutexattr_t *, int *)' extern
| |-ParmVarDecl 0x5565ca6856d8 <col:41, col:68> col:68 __attr 'const pthread_mutexattr_t *'
| |-ParmVarDecl 0x5565ca685758 <line:547:6, col:11> col:11 __robustness 'int *'
| |-NoThrowAttr 0x5565ca685928 <line:548:22>
| `-NonNullAttr 0x5565ca685980 <col:63, col:80> 1 2
|-FunctionDecl 0x5565ca686b38 <line:549:1, line:551:79> line:549:12 pthread_mutexattr_setrobust 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x5565ca6859c8 <col:41, col:62> col:62 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x5565ca686a78 <line:550:6, col:10> col:10 __robustness 'int'
| |-NoThrowAttr 0x5565ca686be8 <line:551:22>
| `-NonNullAttr 0x5565ca686c40 <col:63, col:77> 1
|-FunctionDecl 0x5565ca686f78 <line:552:1, line:554:86> line:552:12 pthread_rwlock_init 'int (pthread_rwlock_t *restrict, const pthread_rwlockattr_t *restrict)' extern
| |-ParmVarDecl 0x5565ca686d20 <col:33, col:62> col:62 __rwlock 'pthread_rwlock_t *restrict'
| |-ParmVarDecl 0x5565ca686e30 <line:553:5, line:554:5> col:5 __attr 'const pthread_rwlockattr_t *restrict'
| |-NoThrowAttr 0x5565ca687028 <col:29>
| `-NonNullAttr 0x5565ca687080 <col:70, col:84> 1
|-FunctionDecl 0x5565ca6871f8 <line:555:1, line:556:79> line:555:12 pthread_rwlock_destroy 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x5565ca6870c8 <col:36, col:54> col:54 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x5565ca6872a0 <line:556:22>
| `-NonNullAttr 0x5565ca6872f8 <col:63, col:77> 1
|-FunctionDecl 0x5565ca687400 <line:557:1, line:558:68> line:557:12 pthread_rwlock_rdlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x5565ca687348 <col:35, col:53> col:53 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x5565ca6874a8 <line:558:22>
| `-NonNullAttr 0x5565ca687500 <col:52, col:66> 1
|-FunctionDecl 0x5565ca687600 <line:559:1, line:560:65> line:559:12 pthread_rwlock_tryrdlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x5565ca687548 <col:38, col:56> col:56 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x5565ca6876a8 <line:560:19>
| `-NonNullAttr 0x5565ca687700 <col:49, col:63> 1
|-FunctionDecl 0x5565ca687938 <line:561:1, line:563:88> line:561:12 pthread_rwlock_timedrdlock 'int (pthread_rwlock_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x5565ca687748 <col:40, col:69> col:69 __rwlock 'pthread_rwlock_t *restrict'
| |-ParmVarDecl 0x5565ca6877d8 <line:562:12, line:563:12> col:12 __abstime 'const struct timespec *restrict'
| |-NoThrowAttr 0x5565ca6879e8 <col:39>
| `-NonNullAttr 0x5565ca687a70 <col:69, col:86> 1 2
|-FunctionDecl 0x5565ca687b70 <line:564:1, line:565:68> line:564:12 pthread_rwlock_wrlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x5565ca687ab8 <col:35, col:53> col:53 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x5565ca687c18 <line:565:22>
| `-NonNullAttr 0x5565ca687c70 <col:52, col:66> 1
|-FunctionDecl 0x5565ca687d70 <line:566:1, line:567:68> line:566:12 pthread_rwlock_trywrlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x5565ca687cb8 <col:38, col:56> col:56 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x5565ca687e18 <line:567:22>
| `-NonNullAttr 0x5565ca687e70 <col:52, col:66> 1
|-FunctionDecl 0x5565ca688028 <line:568:1, line:570:88> line:568:12 pthread_rwlock_timedwrlock 'int (pthread_rwlock_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x5565ca687eb8 <col:40, col:69> col:69 __rwlock 'pthread_rwlock_t *restrict'
| |-ParmVarDecl 0x5565ca687f48 <line:569:12, line:570:12> col:12 __abstime 'const struct timespec *restrict'
| |-NoThrowAttr 0x5565ca6880d8 <col:39>
| `-NonNullAttr 0x5565ca688130 <col:69, col:86> 1 2
|-FunctionDecl 0x5565ca688230 <line:571:1, line:572:68> line:571:12 pthread_rwlock_unlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x5565ca688178 <col:35, col:53> col:53 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x5565ca6882d8 <line:572:22>
| `-NonNullAttr 0x5565ca688330 <col:52, col:66> 1
|-FunctionDecl 0x5565ca688518 <line:573:1, line:574:79> line:573:12 pthread_rwlockattr_init 'int (pthread_rwlockattr_t *)' extern
| |-ParmVarDecl 0x5565ca6883e0 <col:37, col:59> col:59 __attr 'pthread_rwlockattr_t *'
| |-NoThrowAttr 0x5565ca6885c0 <line:574:22>
| `-NonNullAttr 0x5565ca688618 <col:63, col:77> 1
|-FunctionDecl 0x5565ca688720 <line:575:1, line:576:79> line:575:12 pthread_rwlockattr_destroy 'int (pthread_rwlockattr_t *)' extern
| |-ParmVarDecl 0x5565ca688668 <col:40, col:62> col:62 __attr 'pthread_rwlockattr_t *'
| |-NoThrowAttr 0x5565ca6887c8 <line:576:22>
| `-NonNullAttr 0x5565ca688820 <col:63, col:77> 1
|-FunctionDecl 0x5565ca688a80 <line:577:1, line:580:82> line:577:12 pthread_rwlockattr_getpshared 'int (const pthread_rwlockattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x5565ca688868 <col:43, line:578:19> col:19 __attr 'const pthread_rwlockattr_t *restrict'
| |-ParmVarDecl 0x5565ca6888e8 <line:579:8, col:24> col:24 __pshared 'int *restrict'
| |-NoThrowAttr 0x5565ca688b30 <line:580:22>
| `-NonNullAttr 0x5565ca688b88 <col:63, col:80> 1 2
|-FunctionDecl 0x5565ca688d98 <line:581:1, line:583:79> line:581:12 pthread_rwlockattr_setpshared 'int (pthread_rwlockattr_t *, int)' extern
| |-ParmVarDecl 0x5565ca688bd8 <col:43, col:65> col:65 __attr 'pthread_rwlockattr_t *'
| |-ParmVarDecl 0x5565ca688c58 <line:582:8, col:12> col:12 __pshared 'int'
| |-NoThrowAttr 0x5565ca688e48 <line:583:22>
| `-NonNullAttr 0x5565ca688ea0 <col:63, col:77> 1
|-FunctionDecl 0x5565ca689048 <line:584:1, line:587:82> line:584:12 pthread_rwlockattr_getkind_np 'int (const pthread_rwlockattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x5565ca688ee8 <col:43, line:585:19> col:19 __attr 'const pthread_rwlockattr_t *restrict'
| |-ParmVarDecl 0x5565ca688f68 <line:586:8, col:24> col:24 __pref 'int *restrict'
| |-NoThrowAttr 0x5565ca6890f8 <line:587:22>
| `-NonNullAttr 0x5565ca689150 <col:63, col:80> 1 2
|-FunctionDecl 0x5565ca6892d8 <line:588:1, line:589:93> line:588:12 pthread_rwlockattr_setkind_np 'int (pthread_rwlockattr_t *, int)' extern
| |-ParmVarDecl 0x5565ca689198 <col:43, col:65> col:65 __attr 'pthread_rwlockattr_t *'
| |-ParmVarDecl 0x5565ca689218 <line:589:8, col:12> col:12 __pref 'int'
| |-NoThrowAttr 0x5565ca689388 <col:36>
| `-NonNullAttr 0x5565ca6893e0 <col:77, col:91> 1
|-FunctionDecl 0x5565ca689718 <line:590:1, line:592:79> line:590:12 pthread_cond_init 'int (pthread_cond_t *restrict, const pthread_condattr_t *restrict)' extern
| |-ParmVarDecl 0x5565ca6894c0 <col:31, col:58> col:58 __cond 'pthread_cond_t *restrict'
| |-ParmVarDecl 0x5565ca6895d0 <line:591:10, col:47> col:47 __cond_attr 'const pthread_condattr_t *restrict'
| |-NoThrowAttr 0x5565ca6897c8 <line:592:22>
| `-NonNullAttr 0x5565ca689820 <col:63, col:77> 1
|-FunctionDecl 0x5565ca689998 <line:593:1, line:594:79> line:593:12 pthread_cond_destroy 'int (pthread_cond_t *)' extern
| |-ParmVarDecl 0x5565ca689868 <col:34, col:50> col:50 __cond 'pthread_cond_t *'
| |-NoThrowAttr 0x5565ca689a40 <line:594:22>
| `-NonNullAttr 0x5565ca689ac0 <col:63, col:77> 1
|-FunctionDecl 0x5565ca689bc0 <line:595:1, line:596:68> line:595:12 pthread_cond_signal 'int (pthread_cond_t *)' extern
| |-ParmVarDecl 0x5565ca689b08 <col:33, col:49> col:49 __cond 'pthread_cond_t *'
| |-NoThrowAttr 0x5565ca689c68 <line:596:22>
| `-NonNullAttr 0x5565ca689cc0 <col:52, col:66> 1
|-FunctionDecl 0x5565ca689dc0 <line:597:1, line:598:68> line:597:12 pthread_cond_broadcast 'int (pthread_cond_t *)' extern
| |-ParmVarDecl 0x5565ca689d08 <col:36, col:52> col:52 __cond 'pthread_cond_t *'
| |-NoThrowAttr 0x5565ca689e68 <line:598:22>
| `-NonNullAttr 0x5565ca689ec0 <col:52, col:66> 1
|-FunctionDecl 0x5565ca68a0e8 <line:599:1, line:601:41> line:599:12 pthread_cond_wait 'int (pthread_cond_t *restrict, pthread_mutex_t *restrict)' extern
| |-ParmVarDecl 0x5565ca689f08 <col:31, col:58> col:58 __cond 'pthread_cond_t *restrict'
| |-ParmVarDecl 0x5565ca689f80 <line:600:10, col:38> col:38 __mutex 'pthread_mutex_t *restrict'
| `-NonNullAttr 0x5565ca68a198 <line:601:22, col:39> 1 2
|-FunctionDecl 0x5565ca68a4c8 <line:602:1, line:605:44> line:602:12 pthread_cond_timedwait 'int (pthread_cond_t *restrict, pthread_mutex_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x5565ca68a218 <col:36, col:63> col:63 __cond 'pthread_cond_t *restrict'
| |-ParmVarDecl 0x5565ca68a290 <line:603:8, col:36> col:36 __mutex 'pthread_mutex_t *restrict'
| |-ParmVarDecl 0x5565ca68a320 <line:604:8, col:42> col:42 __abstime 'const struct timespec *restrict'
| `-NonNullAttr 0x5565ca68a580 <line:605:22, col:42> 1 2 3
|-FunctionDecl 0x5565ca68a798 <line:606:1, line:607:79> line:606:12 pthread_condattr_init 'int (pthread_condattr_t *)' extern
| |-ParmVarDecl 0x5565ca68a660 <col:35, col:55> col:55 __attr 'pthread_condattr_t *'
| |-NoThrowAttr 0x5565ca68a840 <line:607:22>
| `-NonNullAttr 0x5565ca68a898 <col:63, col:77> 1
|-FunctionDecl 0x5565ca68a9a0 <line:608:1, line:609:79> line:608:12 pthread_condattr_destroy 'int (pthread_condattr_t *)' extern
| |-ParmVarDecl 0x5565ca68a8e8 <col:38, col:58> col:58 __attr 'pthread_condattr_t *'
| |-NoThrowAttr 0x5565ca68aa48 <line:609:22>
| `-NonNullAttr 0x5565ca68aad0 <col:63, col:77> 1
|-FunctionDecl 0x5565ca68acf8 <line:610:1, line:613:82> line:610:12 pthread_condattr_getpshared 'int (const pthread_condattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x5565ca68ab18 <col:41, line:611:17> col:17 __attr 'const pthread_condattr_t *restrict'
| |-ParmVarDecl 0x5565ca68ab98 <line:612:6, col:22> col:22 __pshared 'int *restrict'
| |-NoThrowAttr 0x5565ca68ada8 <line:613:22>
| `-NonNullAttr 0x5565ca68ae00 <col:63, col:80> 1 2
|-FunctionDecl 0x5565ca68b008 <line:614:1, line:615:94> line:614:12 pthread_condattr_setpshared 'int (pthread_condattr_t *, int)' extern
| |-ParmVarDecl 0x5565ca68ae48 <col:41, col:61> col:61 __attr 'pthread_condattr_t *'
| |-ParmVarDecl 0x5565ca68aec8 <line:615:6, col:10> col:10 __pshared 'int'
| |-NoThrowAttr 0x5565ca68b0b8 <col:37>
| `-NonNullAttr 0x5565ca68b110 <col:78, col:92> 1
|-FunctionDecl 0x5565ca68b328 <line:616:1, line:619:82> line:616:12 pthread_condattr_getclock 'int (const pthread_condattr_t *restrict, __clockid_t *restrict)' extern
| |-ParmVarDecl 0x5565ca68b158 <col:39, line:617:22> col:22 __attr 'const pthread_condattr_t *restrict'
| |-ParmVarDecl 0x5565ca68b200 <line:618:11, col:35> col:35 __clock_id '__clockid_t *restrict'
| |-NoThrowAttr 0x5565ca68b3d8 <line:619:22>
| `-NonNullAttr 0x5565ca68b430 <col:63, col:80> 1 2
|-FunctionDecl 0x5565ca68b5f8 <line:620:1, line:622:79> line:620:12 pthread_condattr_setclock 'int (pthread_condattr_t *, __clockid_t)' extern
| |-ParmVarDecl 0x5565ca68b478 <col:39, col:59> col:59 __attr 'pthread_condattr_t *'
| |-ParmVarDecl 0x5565ca68b4f0 <line:621:11, col:23> col:23 __clock_id '__clockid_t':'int'
| |-NoThrowAttr 0x5565ca68b6a8 <line:622:22>
| `-NonNullAttr 0x5565ca68b700 <col:63, col:77> 1
|-FunctionDecl 0x5565ca68b9a8 <line:623:1, line:624:79> line:623:12 pthread_spin_init 'int (pthread_spinlock_t *, int)' extern
| |-ParmVarDecl 0x5565ca68b7e0 <col:31, col:51> col:51 __lock 'pthread_spinlock_t *'
| |-ParmVarDecl 0x5565ca68b860 <col:59, col:63> col:63 __pshared 'int'
| |-NoThrowAttr 0x5565ca68ba58 <line:624:22>
| `-NonNullAttr 0x5565ca68bae0 <col:63, col:77> 1
|-FunctionDecl 0x5565ca68bc58 <line:625:1, line:626:79> line:625:12 pthread_spin_destroy 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x5565ca68bb28 <col:34, col:54> col:54 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x5565ca68bd00 <line:626:22>
| `-NonNullAttr 0x5565ca68bd58 <col:63, col:77> 1
|-FunctionDecl 0x5565ca68be60 <line:627:1, line:628:68> line:627:12 pthread_spin_lock 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x5565ca68bda8 <col:31, col:51> col:51 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x5565ca68bf08 <line:628:22>
| `-NonNullAttr 0x5565ca68bf60 <col:52, col:66> 1
|-FunctionDecl 0x5565ca68c060 <line:629:1, line:630:68> line:629:12 pthread_spin_trylock 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x5565ca68bfa8 <col:34, col:54> col:54 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x5565ca68c108 <line:630:22>
| `-NonNullAttr 0x5565ca68c160 <col:52, col:66> 1
|-FunctionDecl 0x5565ca68c260 <line:631:1, line:632:68> line:631:12 pthread_spin_unlock 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x5565ca68c1a8 <col:33, col:53> col:53 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x5565ca68c308 <line:632:22>
| `-NonNullAttr 0x5565ca68c360 <col:52, col:66> 1
|-FunctionDecl 0x5565ca68c738 <line:633:1, line:636:79> line:633:12 pthread_barrier_init 'int (pthread_barrier_t *restrict, const pthread_barrierattr_t *restrict, unsigned int)' extern
| |-ParmVarDecl 0x5565ca68c440 <col:34, col:64> col:64 __barrier 'pthread_barrier_t *restrict'
| |-ParmVarDecl 0x5565ca68c550 <line:634:6, line:635:6> col:6 __attr 'const pthread_barrierattr_t *restrict'
| |-ParmVarDecl 0x5565ca68c5d0 <col:14, col:27> col:27 __count 'unsigned int'
| |-NoThrowAttr 0x5565ca68c7f0 <line:636:22>
| `-NonNullAttr 0x5565ca68c848 <col:63, col:77> 1
|-FunctionDecl 0x5565ca68c9c8 <line:637:1, line:638:79> line:637:12 pthread_barrier_destroy 'int (pthread_barrier_t *)' extern
| |-ParmVarDecl 0x5565ca68c898 <col:37, col:56> col:56 __barrier 'pthread_barrier_t *'
| |-NoThrowAttr 0x5565ca68ca70 <line:638:22>
| `-NonNullAttr 0x5565ca68db00 <col:63, col:77> 1
|-FunctionDecl 0x5565ca68dc00 <line:639:1, line:640:68> line:639:12 pthread_barrier_wait 'int (pthread_barrier_t *)' extern
| |-ParmVarDecl 0x5565ca68db48 <col:34, col:53> col:53 __barrier 'pthread_barrier_t *'
| |-NoThrowAttr 0x5565ca68dca8 <line:640:22>
| `-NonNullAttr 0x5565ca68dd00 <col:52, col:66> 1
|-FunctionDecl 0x5565ca68dee8 <line:641:1, line:642:79> line:641:12 pthread_barrierattr_init 'int (pthread_barrierattr_t *)' extern
| |-ParmVarDecl 0x5565ca68ddb0 <col:38, col:61> col:61 __attr 'pthread_barrierattr_t *'
| |-NoThrowAttr 0x5565ca68df90 <line:642:22>
| `-NonNullAttr 0x5565ca68dfe8 <col:63, col:77> 1
|-FunctionDecl 0x5565ca68e0f0 <line:643:1, line:644:79> line:643:12 pthread_barrierattr_destroy 'int (pthread_barrierattr_t *)' extern
| |-ParmVarDecl 0x5565ca68e038 <col:41, col:64> col:64 __attr 'pthread_barrierattr_t *'
| |-NoThrowAttr 0x5565ca68e198 <line:644:22>
| `-NonNullAttr 0x5565ca68e1f0 <col:63, col:77> 1
|-FunctionDecl 0x5565ca68e418 <line:645:1, line:648:82> line:645:12 pthread_barrierattr_getpshared 'int (const pthread_barrierattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x5565ca68e238 <col:44, line:646:20> col:20 __attr 'const pthread_barrierattr_t *restrict'
| |-ParmVarDecl 0x5565ca68e2b8 <line:647:9, col:25> col:25 __pshared 'int *restrict'
| |-NoThrowAttr 0x5565ca68e4c8 <line:648:22>
| `-NonNullAttr 0x5565ca68e520 <col:63, col:80> 1 2
|-FunctionDecl 0x5565ca68e728 <line:649:1, line:651:79> line:649:12 pthread_barrierattr_setpshared 'int (pthread_barrierattr_t *, int)' extern
| |-ParmVarDecl 0x5565ca68e568 <col:44, col:67> col:67 __attr 'pthread_barrierattr_t *'
| |-ParmVarDecl 0x5565ca68e5e8 <line:650:9, col:13> col:13 __pshared 'int'
| |-NoThrowAttr 0x5565ca68e7d8 <line:651:22>
| `-NonNullAttr 0x5565ca68e830 <col:63, col:77> 1
|-FunctionDecl 0x5565ca68eb98 <line:652:1, line:654:79> line:652:12 pthread_key_create 'int (pthread_key_t *, void (*)(void *))' extern
| |-ParmVarDecl 0x5565ca68e910 <col:32, col:47> col:47 __key 'pthread_key_t *'
| |-ParmVarDecl 0x5565ca68ea30 <line:653:11, col:43> col:18 __destr_function 'void (*)(void *)'
| |-NoThrowAttr 0x5565ca68ec48 <line:654:22>
| `-NonNullAttr 0x5565ca68eca0 <col:63, col:77> 1
|-FunctionDecl 0x5565ca68edf8 <line:655:1, col:92> col:12 pthread_key_delete 'int (pthread_key_t)' extern
| |-ParmVarDecl 0x5565ca68ece8 <col:32, col:46> col:46 __key 'pthread_key_t':'unsigned int'
| `-NoThrowAttr 0x5565ca68eea0 <col:69>
|-FunctionDecl 0x5565ca68f018 <line:656:1, col:95> col:14 pthread_getspecific 'void *(pthread_key_t)' extern
| |-ParmVarDecl 0x5565ca68ef08 <col:35, col:49> col:49 __key 'pthread_key_t':'unsigned int'
| `-NoThrowAttr 0x5565ca68f0c0 <col:72>
|-FunctionDecl 0x5565ca68f2f8 <line:657:1, line:658:67> line:657:12 pthread_setspecific 'int (pthread_key_t, const void *)' extern
| |-ParmVarDecl 0x5565ca68f128 <col:33, col:47> col:47 __key 'pthread_key_t':'unsigned int'
| |-ParmVarDecl 0x5565ca68f1d8 <line:658:5, col:17> col:17 __pointer 'const void *'
| `-NoThrowAttr 0x5565ca68f3a8 <col:44>
|-FunctionDecl 0x5565ca68f5c8 <line:659:1, line:661:79> line:659:12 pthread_getcpuclockid 'int (pthread_t, __clockid_t *)' extern
| |-ParmVarDecl 0x5565ca68f410 <col:35, col:45> col:45 __thread_id 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x5565ca68f488 <line:660:7, col:20> col:20 __clock_id '__clockid_t *'
| |-NoThrowAttr 0x5565ca68f678 <line:661:22>
| `-NonNullAttr 0x5565ca68f6d0 <col:63, col:77> 2
|-FunctionDecl 0x5565ca68fb30 <line:662:1, line:664:70> line:662:12 pthread_atfork 'int (void (*)(void), void (*)(void), void (*)(void))' extern
| |-ParmVarDecl 0x5565ca68f7b0 <col:28, col:51> col:35 __prepare 'void (*)(void)'
| |-ParmVarDecl 0x5565ca68f8c0 <line:663:7, col:29> col:14 __parent 'void (*)(void)'
| |-ParmVarDecl 0x5565ca68f9d0 <line:664:7, col:28> col:14 __child 'void (*)(void)'
| `-NoThrowAttr 0x5565ca68fbe8 <col:47>
|-FunctionDecl 0x5565ca68fcf0 <line:666:1, col:20> col:8 used P0 'void *(void *)'
| `-ParmVarDecl 0x5565ca68fc58 <col:11, col:17> col:17 arg 'void *'
|-FunctionDecl 0x5565ca68fe48 <line:667:1, col:20> col:8 used P1 'void *(void *)'
| `-ParmVarDecl 0x5565ca68fdb0 <col:11, col:17> col:17 arg 'void *'
|-FunctionDecl 0x5565ca68ff10 <line:668:1, col:12> col:6 fence 'void ()'
|-FunctionDecl 0x5565ca68ffd0 <line:669:1, col:12> col:6 isync 'void ()'
|-FunctionDecl 0x5565ca690090 <line:670:1, col:14> col:6 lwfence 'void ()'
|-VarDecl 0x5565ca690148 <line:671:1, col:5> col:5 used __unbuffered_cnt 'int'
|-VarDecl 0x5565ca6901c8 prev 0x5565ca690148 <line:672:1, col:24> col:5 used __unbuffered_cnt 'int' cinit
| `-IntegerLiteral 0x5565ca690230 <col:24> 'int' 0
|-VarDecl 0x5565ca690268 <line:673:1, col:5> col:5 used __unbuffered_p0_EAX 'int'
|-VarDecl 0x5565ca6902e8 prev 0x5565ca690268 <line:674:1, col:27> col:5 used __unbuffered_p0_EAX 'int' cinit
| `-IntegerLiteral 0x5565ca690350 <col:27> 'int' 0
|-VarDecl 0x5565ca690388 <line:675:1, col:5> col:5 used __unbuffered_p0_EBX 'int'
|-VarDecl 0x5565ca690408 prev 0x5565ca690388 <line:676:1, col:27> col:5 used __unbuffered_p0_EBX 'int' cinit
| `-IntegerLiteral 0x5565ca690470 <col:27> 'int' 0
|-VarDecl 0x5565ca6904a8 <line:677:1, col:5> col:5 used __unbuffered_p1_EAX 'int'
|-VarDecl 0x5565ca690528 prev 0x5565ca6904a8 <line:678:1, col:27> col:5 used __unbuffered_p1_EAX 'int' cinit
| `-IntegerLiteral 0x5565ca690590 <col:27> 'int' 0
|-VarDecl 0x5565ca6905c8 <line:679:1, col:5> col:5 used __unbuffered_p1_EBX 'int'
|-VarDecl 0x5565ca690648 prev 0x5565ca6905c8 <line:680:1, col:27> col:5 used __unbuffered_p1_EBX 'int' cinit
| `-IntegerLiteral 0x5565ca6906b0 <col:27> 'int' 0
|-VarDecl 0x5565ca6906e0 <line:681:1, col:7> col:7 used main$tmp_guard0 '_Bool'
|-VarDecl 0x5565ca690758 <line:682:1, col:7> col:7 used main$tmp_guard1 '_Bool'
|-VarDecl 0x5565ca6907d8 <line:683:1, col:5> col:5 used x 'int'
|-VarDecl 0x5565ca690858 prev 0x5565ca6907d8 <line:684:1, col:9> col:5 used x 'int' cinit
| `-IntegerLiteral 0x5565ca6908c0 <col:9> 'int' 0
|-VarDecl 0x5565ca6908f8 <line:685:1, col:5> col:5 used y 'int'
|-VarDecl 0x5565ca690978 prev 0x5565ca6908f8 <line:686:1, col:9> col:5 used y 'int' cinit
| `-IntegerLiteral 0x5565ca6909e0 <col:9> 'int' 0
|-VarDecl 0x5565ca690a10 <line:687:1, col:7> col:7 used y$flush_delayed '_Bool'
|-VarDecl 0x5565ca690b00 <line:688:1, col:5> col:5 used y$mem_tmp 'int'
|-VarDecl 0x5565ca690b78 <line:689:1, col:7> col:7 used y$r_buff0_thd0 '_Bool'
|-VarDecl 0x5565ca690bf0 <line:690:1, col:7> col:7 used y$r_buff0_thd1 '_Bool'
|-VarDecl 0x5565ca690c68 <line:691:1, col:7> col:7 used y$r_buff0_thd2 '_Bool'
|-VarDecl 0x5565ca690ce0 <line:692:1, col:7> col:7 used y$r_buff1_thd0 '_Bool'
|-VarDecl 0x5565ca690d58 <line:693:1, col:7> col:7 used y$r_buff1_thd1 '_Bool'
|-VarDecl 0x5565ca690dd0 <line:694:1, col:7> col:7 used y$r_buff1_thd2 '_Bool'
|-VarDecl 0x5565ca690e48 <line:695:1, col:7> col:7 y$read_delayed '_Bool'
|-VarDecl 0x5565ca690ec8 <line:696:1, col:6> col:6 y$read_delayed_var 'int *'
|-VarDecl 0x5565ca690f48 <line:697:1, col:5> col:5 used y$w_buff0 'int'
|-VarDecl 0x5565ca690fc0 <line:698:1, col:7> col:7 used y$w_buff0_used '_Bool'
|-VarDecl 0x5565ca691040 <line:699:1, col:5> col:5 used y$w_buff1 'int'
|-VarDecl 0x5565ca6910b8 <line:700:1, col:7> col:7 used y$w_buff1_used '_Bool'
|-VarDecl 0x5565ca691138 <line:701:1, col:5> col:5 used z 'int'
|-VarDecl 0x5565ca6911b8 prev 0x5565ca691138 <line:702:1, col:9> col:5 used z 'int' cinit
| `-IntegerLiteral 0x5565ca691220 <col:9> 'int' 0
|-VarDecl 0x5565ca691250 <line:703:1, col:7> col:7 used weak$$choice0 '_Bool'
|-VarDecl 0x5565ca6912c8 <line:704:1, col:7> col:7 used weak$$choice2 '_Bool'
|-FunctionDecl 0x5565ca6913e0 prev 0x5565ca68fcf0 <line:705:1, line:738:1> line:705:8 used P0 'void *(void *)'
| |-ParmVarDecl 0x5565ca691348 <col:11, col:17> col:17 arg 'void *'
| `-CompoundStmt 0x5565ca694598 <line:706:1, line:738:1>
|   |-CallExpr 0x5565ca6914f8 <line:707:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x5565ca6914e0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5565ca691488 <col:3> 'void ()' Function 0x5565ca636fa0 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x5565ca691558 <line:708:3, col:7> 'int' '='
|   | |-DeclRefExpr 0x5565ca691518 <col:3> 'int' lvalue Var 0x5565ca6911b8 'z' 'int'
|   | `-IntegerLiteral 0x5565ca691538 <col:7> 'int' 1
|   |-CallExpr 0x5565ca6915b0 <line:709:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x5565ca691598 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5565ca691578 <col:3> 'void ()' Function 0x5565ca637060 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x5565ca691608 <line:710:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x5565ca6915f0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5565ca6915d0 <col:3> 'void ()' Function 0x5565ca636fa0 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x5565ca691668 <line:711:3, col:7> 'int' '='
|   | |-DeclRefExpr 0x5565ca691628 <col:3> 'int' lvalue Var 0x5565ca690858 'x' 'int'
|   | `-IntegerLiteral 0x5565ca691648 <col:7> 'int' 1
|   |-CallExpr 0x5565ca6916c0 <line:712:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x5565ca6916a8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5565ca691688 <col:3> 'void ()' Function 0x5565ca637060 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x5565ca691718 <line:713:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x5565ca691700 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5565ca6916e0 <col:3> 'void ()' Function 0x5565ca636fa0 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x5565ca691790 <line:714:3, col:25> 'int' '='
|   | |-DeclRefExpr 0x5565ca691738 <col:3> 'int' lvalue Var 0x5565ca6902e8 '__unbuffered_p0_EAX' 'int'
|   | `-ImplicitCastExpr 0x5565ca691778 <col:25> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x5565ca691758 <col:25> 'int' lvalue Var 0x5565ca690858 'x' 'int'
|   |-CallExpr 0x5565ca6917e8 <line:715:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x5565ca6917d0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5565ca6917b0 <col:3> 'void ()' Function 0x5565ca637060 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x5565ca691840 <line:716:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x5565ca691828 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5565ca691808 <col:3> 'void ()' Function 0x5565ca636fa0 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x5565ca691908 <line:717:3, col:42> '_Bool' '='
|   | |-DeclRefExpr 0x5565ca691860 <col:3> '_Bool' lvalue Var 0x5565ca691250 'weak$$choice0' '_Bool'
|   | `-CallExpr 0x5565ca6918e8 <col:19, col:42> '_Bool'
|   |   `-ImplicitCastExpr 0x5565ca6918d0 <col:19> '_Bool (*)(void)' <FunctionToPointerDecay>
|   |     `-DeclRefExpr 0x5565ca691880 <col:19> '_Bool (void)' Function 0x5565ca636770 '__VERIFIER_nondet_bool' '_Bool (void)'
|   |-BinaryOperator 0x5565ca6919a0 <line:718:3, col:42> '_Bool' '='
|   | |-DeclRefExpr 0x5565ca691928 <col:3> '_Bool' lvalue Var 0x5565ca6912c8 'weak$$choice2' '_Bool'
|   | `-CallExpr 0x5565ca691980 <col:19, col:42> '_Bool'
|   |   `-ImplicitCastExpr 0x5565ca691968 <col:19> '_Bool (*)(void)' <FunctionToPointerDecay>
|   |     `-DeclRefExpr 0x5565ca691948 <col:19> '_Bool (void)' Function 0x5565ca636770 '__VERIFIER_nondet_bool' '_Bool (void)'
|   |-BinaryOperator 0x5565ca691a18 <line:719:3, col:21> '_Bool' '='
|   | |-DeclRefExpr 0x5565ca6919c0 <col:3> '_Bool' lvalue Var 0x5565ca690a10 'y$flush_delayed' '_Bool'
|   | `-ImplicitCastExpr 0x5565ca691a00 <col:21> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x5565ca6919e0 <col:21> '_Bool' lvalue Var 0x5565ca6912c8 'weak$$choice2' '_Bool'
|   |-BinaryOperator 0x5565ca691a90 <line:720:3, col:15> 'int' '='
|   | |-DeclRefExpr 0x5565ca691a38 <col:3> 'int' lvalue Var 0x5565ca690b00 'y$mem_tmp' 'int'
|   | `-ImplicitCastExpr 0x5565ca691a78 <col:15> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x5565ca691a58 <col:15> 'int' lvalue Var 0x5565ca690978 'y' 'int'
|   |-BinaryOperator 0x5565ca691ee8 <line:721:3, col:162> 'int' '='
|   | |-DeclRefExpr 0x5565ca691ab0 <col:3> 'int' lvalue Var 0x5565ca690978 'y' 'int'
|   | `-ConditionalOperator 0x5565ca691eb8 <col:7, col:162> 'int'
|   |   |-BinaryOperator 0x5565ca691ce0 <col:7, col:84> 'int' '||'
|   |   | |-BinaryOperator 0x5565ca691c00 <col:7, col:46> 'int' '||'
|   |   | | |-UnaryOperator 0x5565ca691b28 <col:7, col:8> 'int' prefix '!' cannot overflow
|   |   | | | `-ImplicitCastExpr 0x5565ca691b10 <col:8> '_Bool' <LValueToRValue>
|   |   | | |   `-DeclRefExpr 0x5565ca691ad0 <col:8> '_Bool' lvalue Var 0x5565ca690fc0 'y$w_buff0_used' '_Bool'
|   |   | | `-BinaryOperator 0x5565ca691be0 <col:26, col:46> 'int' '&&'
|   |   | |   |-UnaryOperator 0x5565ca691b78 <col:26, col:27> 'int' prefix '!' cannot overflow
|   |   | |   | `-ImplicitCastExpr 0x5565ca691b60 <col:27> '_Bool' <LValueToRValue>
|   |   | |   |   `-DeclRefExpr 0x5565ca691b40 <col:27> '_Bool' lvalue Var 0x5565ca690bf0 'y$r_buff0_thd1' '_Bool'
|   |   | |   `-UnaryOperator 0x5565ca691bc8 <col:45, col:46> 'int' prefix '!' cannot overflow
|   |   | |     `-ImplicitCastExpr 0x5565ca691bb0 <col:46> '_Bool' <LValueToRValue>
|   |   | |       `-DeclRefExpr 0x5565ca691b90 <col:46> '_Bool' lvalue Var 0x5565ca6910b8 'y$w_buff1_used' '_Bool'
|   |   | `-BinaryOperator 0x5565ca691cc0 <col:64, col:84> 'int' '&&'
|   |   |   |-UnaryOperator 0x5565ca691c58 <col:64, col:65> 'int' prefix '!' cannot overflow
|   |   |   | `-ImplicitCastExpr 0x5565ca691c40 <col:65> '_Bool' <LValueToRValue>
|   |   |   |   `-DeclRefExpr 0x5565ca691c20 <col:65> '_Bool' lvalue Var 0x5565ca690bf0 'y$r_buff0_thd1' '_Bool'
|   |   |   `-UnaryOperator 0x5565ca691ca8 <col:83, col:84> 'int' prefix '!' cannot overflow
|   |   |     `-ImplicitCastExpr 0x5565ca691c90 <col:84> '_Bool' <LValueToRValue>
|   |   |       `-DeclRefExpr 0x5565ca691c70 <col:84> '_Bool' lvalue Var 0x5565ca690d58 'y$r_buff1_thd1' '_Bool'
|   |   |-ImplicitCastExpr 0x5565ca691ea0 <col:101> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x5565ca691d00 <col:101> 'int' lvalue Var 0x5565ca690978 'y' 'int'
|   |   `-ParenExpr 0x5565ca691e80 <col:105, col:162> 'int'
|   |     `-ConditionalOperator 0x5565ca691e50 <col:106, col:153> 'int'
|   |       |-BinaryOperator 0x5565ca691dc0 <col:106, col:124> 'int' '&&'
|   |       | |-ImplicitCastExpr 0x5565ca691d78 <col:106> 'int' <IntegralCast>
|   |       | | `-ImplicitCastExpr 0x5565ca691d60 <col:106> '_Bool' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x5565ca691d20 <col:106> '_Bool' lvalue Var 0x5565ca690fc0 'y$w_buff0_used' '_Bool'
|   |       | `-ImplicitCastExpr 0x5565ca691da8 <col:124> 'int' <IntegralCast>
|   |       |   `-ImplicitCastExpr 0x5565ca691d90 <col:124> '_Bool' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x5565ca691d40 <col:124> '_Bool' lvalue Var 0x5565ca690bf0 'y$r_buff0_thd1' '_Bool'
|   |       |-ImplicitCastExpr 0x5565ca691e20 <col:141> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x5565ca691de0 <col:141> 'int' lvalue Var 0x5565ca690f48 'y$w_buff0' 'int'
|   |       `-ImplicitCastExpr 0x5565ca691e38 <col:153> 'int' <LValueToRValue>
|   |         `-DeclRefExpr 0x5565ca691e00 <col:153> 'int' lvalue Var 0x5565ca691040 'y$w_buff1' 'int'
|   |-BinaryOperator 0x5565ca6923f8 <line:722:3, col:208> 'int' '='
|   | |-DeclRefExpr 0x5565ca691f08 <col:3> 'int' lvalue Var 0x5565ca690f48 'y$w_buff0' 'int'
|   | `-ConditionalOperator 0x5565ca6923c8 <col:15, col:208> 'int'
|   |   |-ImplicitCastExpr 0x5565ca692398 <col:15> 'int' <IntegralCast>
|   |   | `-ImplicitCastExpr 0x5565ca692380 <col:15> '_Bool' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x5565ca691f28 <col:15> '_Bool' lvalue Var 0x5565ca6912c8 'weak$$choice2' '_Bool'
|   |   |-ImplicitCastExpr 0x5565ca6923b0 <col:31> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x5565ca691f48 <col:31> 'int' lvalue Var 0x5565ca690f48 'y$w_buff0' 'int'
|   |   `-ParenExpr 0x5565ca692360 <col:43, col:208> 'int'
|   |     `-ConditionalOperator 0x5565ca692330 <col:44, col:207> 'int'
|   |       |-BinaryOperator 0x5565ca692158 <col:44, col:121> 'int' '||'
|   |       | |-BinaryOperator 0x5565ca692078 <col:44, col:83> 'int' '||'
|   |       | | |-UnaryOperator 0x5565ca691fa0 <col:44, col:45> 'int' prefix '!' cannot overflow
|   |       | | | `-ImplicitCastExpr 0x5565ca691f88 <col:45> '_Bool' <LValueToRValue>
|   |       | | |   `-DeclRefExpr 0x5565ca691f68 <col:45> '_Bool' lvalue Var 0x5565ca690fc0 'y$w_buff0_used' '_Bool'
|   |       | | `-BinaryOperator 0x5565ca692058 <col:63, col:83> 'int' '&&'
|   |       | |   |-UnaryOperator 0x5565ca691ff0 <col:63, col:64> 'int' prefix '!' cannot overflow
|   |       | |   | `-ImplicitCastExpr 0x5565ca691fd8 <col:64> '_Bool' <LValueToRValue>
|   |       | |   |   `-DeclRefExpr 0x5565ca691fb8 <col:64> '_Bool' lvalue Var 0x5565ca690bf0 'y$r_buff0_thd1' '_Bool'
|   |       | |   `-UnaryOperator 0x5565ca692040 <col:82, col:83> 'int' prefix '!' cannot overflow
|   |       | |     `-ImplicitCastExpr 0x5565ca692028 <col:83> '_Bool' <LValueToRValue>
|   |       | |       `-DeclRefExpr 0x5565ca692008 <col:83> '_Bool' lvalue Var 0x5565ca6910b8 'y$w_buff1_used' '_Bool'
|   |       | `-BinaryOperator 0x5565ca692138 <col:101, col:121> 'int' '&&'
|   |       |   |-UnaryOperator 0x5565ca6920d0 <col:101, col:102> 'int' prefix '!' cannot overflow
|   |       |   | `-ImplicitCastExpr 0x5565ca6920b8 <col:102> '_Bool' <LValueToRValue>
|   |       |   |   `-DeclRefExpr 0x5565ca692098 <col:102> '_Bool' lvalue Var 0x5565ca690bf0 'y$r_buff0_thd1' '_Bool'
|   |       |   `-UnaryOperator 0x5565ca692120 <col:120, col:121> 'int' prefix '!' cannot overflow
|   |       |     `-ImplicitCastExpr 0x5565ca692108 <col:121> '_Bool' <LValueToRValue>
|   |       |       `-DeclRefExpr 0x5565ca6920e8 <col:121> '_Bool' lvalue Var 0x5565ca690d58 'y$r_buff1_thd1' '_Bool'
|   |       |-ImplicitCastExpr 0x5565ca692318 <col:138> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x5565ca692178 <col:138> 'int' lvalue Var 0x5565ca690f48 'y$w_buff0' 'int'
|   |       `-ParenExpr 0x5565ca6922f8 <col:150, col:207> 'int'
|   |         `-ConditionalOperator 0x5565ca6922c8 <col:151, col:198> 'int'
|   |           |-BinaryOperator 0x5565ca692238 <col:151, col:169> 'int' '&&'
|   |           | |-ImplicitCastExpr 0x5565ca6921f0 <col:151> 'int' <IntegralCast>
|   |           | | `-ImplicitCastExpr 0x5565ca6921d8 <col:151> '_Bool' <LValueToRValue>
|   |           | |   `-DeclRefExpr 0x5565ca692198 <col:151> '_Bool' lvalue Var 0x5565ca690fc0 'y$w_buff0_used' '_Bool'
|   |           | `-ImplicitCastExpr 0x5565ca692220 <col:169> 'int' <IntegralCast>
|   |           |   `-ImplicitCastExpr 0x5565ca692208 <col:169> '_Bool' <LValueToRValue>
|   |           |     `-DeclRefExpr 0x5565ca6921b8 <col:169> '_Bool' lvalue Var 0x5565ca690bf0 'y$r_buff0_thd1' '_Bool'
|   |           |-ImplicitCastExpr 0x5565ca692298 <col:186> 'int' <LValueToRValue>
|   |           | `-DeclRefExpr 0x5565ca692258 <col:186> 'int' lvalue Var 0x5565ca690f48 'y$w_buff0' 'int'
|   |           `-ImplicitCastExpr 0x5565ca6922b0 <col:198> 'int' <LValueToRValue>
|   |             `-DeclRefExpr 0x5565ca692278 <col:198> 'int' lvalue Var 0x5565ca690f48 'y$w_buff0' 'int'
|   |-BinaryOperator 0x5565ca692908 <line:723:3, col:208> 'int' '='
|   | |-DeclRefExpr 0x5565ca692418 <col:3> 'int' lvalue Var 0x5565ca691040 'y$w_buff1' 'int'
|   | `-ConditionalOperator 0x5565ca6928d8 <col:15, col:208> 'int'
|   |   |-ImplicitCastExpr 0x5565ca6928a8 <col:15> 'int' <IntegralCast>
|   |   | `-ImplicitCastExpr 0x5565ca692890 <col:15> '_Bool' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x5565ca692438 <col:15> '_Bool' lvalue Var 0x5565ca6912c8 'weak$$choice2' '_Bool'
|   |   |-ImplicitCastExpr 0x5565ca6928c0 <col:31> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x5565ca692458 <col:31> 'int' lvalue Var 0x5565ca691040 'y$w_buff1' 'int'
|   |   `-ParenExpr 0x5565ca692870 <col:43, col:208> 'int'
|   |     `-ConditionalOperator 0x5565ca692840 <col:44, col:207> 'int'
|   |       |-BinaryOperator 0x5565ca692668 <col:44, col:121> 'int' '||'
|   |       | |-BinaryOperator 0x5565ca692588 <col:44, col:83> 'int' '||'
|   |       | | |-UnaryOperator 0x5565ca6924b0 <col:44, col:45> 'int' prefix '!' cannot overflow
|   |       | | | `-ImplicitCastExpr 0x5565ca692498 <col:45> '_Bool' <LValueToRValue>
|   |       | | |   `-DeclRefExpr 0x5565ca692478 <col:45> '_Bool' lvalue Var 0x5565ca690fc0 'y$w_buff0_used' '_Bool'
|   |       | | `-BinaryOperator 0x5565ca692568 <col:63, col:83> 'int' '&&'
|   |       | |   |-UnaryOperator 0x5565ca692500 <col:63, col:64> 'int' prefix '!' cannot overflow
|   |       | |   | `-ImplicitCastExpr 0x5565ca6924e8 <col:64> '_Bool' <LValueToRValue>
|   |       | |   |   `-DeclRefExpr 0x5565ca6924c8 <col:64> '_Bool' lvalue Var 0x5565ca690bf0 'y$r_buff0_thd1' '_Bool'
|   |       | |   `-UnaryOperator 0x5565ca692550 <col:82, col:83> 'int' prefix '!' cannot overflow
|   |       | |     `-ImplicitCastExpr 0x5565ca692538 <col:83> '_Bool' <LValueToRValue>
|   |       | |       `-DeclRefExpr 0x5565ca692518 <col:83> '_Bool' lvalue Var 0x5565ca6910b8 'y$w_buff1_used' '_Bool'
|   |       | `-BinaryOperator 0x5565ca692648 <col:101, col:121> 'int' '&&'
|   |       |   |-UnaryOperator 0x5565ca6925e0 <col:101, col:102> 'int' prefix '!' cannot overflow
|   |       |   | `-ImplicitCastExpr 0x5565ca6925c8 <col:102> '_Bool' <LValueToRValue>
|   |       |   |   `-DeclRefExpr 0x5565ca6925a8 <col:102> '_Bool' lvalue Var 0x5565ca690bf0 'y$r_buff0_thd1' '_Bool'
|   |       |   `-UnaryOperator 0x5565ca692630 <col:120, col:121> 'int' prefix '!' cannot overflow
|   |       |     `-ImplicitCastExpr 0x5565ca692618 <col:121> '_Bool' <LValueToRValue>
|   |       |       `-DeclRefExpr 0x5565ca6925f8 <col:121> '_Bool' lvalue Var 0x5565ca690d58 'y$r_buff1_thd1' '_Bool'
|   |       |-ImplicitCastExpr 0x5565ca692828 <col:138> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x5565ca692688 <col:138> 'int' lvalue Var 0x5565ca691040 'y$w_buff1' 'int'
|   |       `-ParenExpr 0x5565ca692808 <col:150, col:207> 'int'
|   |         `-ConditionalOperator 0x5565ca6927d8 <col:151, col:198> 'int'
|   |           |-BinaryOperator 0x5565ca692748 <col:151, col:169> 'int' '&&'
|   |           | |-ImplicitCastExpr 0x5565ca692700 <col:151> 'int' <IntegralCast>
|   |           | | `-ImplicitCastExpr 0x5565ca6926e8 <col:151> '_Bool' <LValueToRValue>
|   |           | |   `-DeclRefExpr 0x5565ca6926a8 <col:151> '_Bool' lvalue Var 0x5565ca690fc0 'y$w_buff0_used' '_Bool'
|   |           | `-ImplicitCastExpr 0x5565ca692730 <col:169> 'int' <IntegralCast>
|   |           |   `-ImplicitCastExpr 0x5565ca692718 <col:169> '_Bool' <LValueToRValue>
|   |           |     `-DeclRefExpr 0x5565ca6926c8 <col:169> '_Bool' lvalue Var 0x5565ca690bf0 'y$r_buff0_thd1' '_Bool'
|   |           |-ImplicitCastExpr 0x5565ca6927a8 <col:186> 'int' <LValueToRValue>
|   |           | `-DeclRefExpr 0x5565ca692768 <col:186> 'int' lvalue Var 0x5565ca691040 'y$w_buff1' 'int'
|   |           `-ImplicitCastExpr 0x5565ca6927c0 <col:198> 'int' <LValueToRValue>
|   |             `-DeclRefExpr 0x5565ca692788 <col:198> 'int' lvalue Var 0x5565ca691040 'y$w_buff1' 'int'
|   |-BinaryOperator 0x5565ca692ec8 <line:724:3, col:227> '_Bool' '='
|   | |-DeclRefExpr 0x5565ca692928 <col:3> '_Bool' lvalue Var 0x5565ca690fc0 'y$w_buff0_used' '_Bool'
|   | `-ImplicitCastExpr 0x5565ca692eb0 <col:20, col:227> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x5565ca692e80 <col:20, col:227> 'int'
|   |     |-ImplicitCastExpr 0x5565ca692e38 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x5565ca692e20 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x5565ca692948 <col:20> '_Bool' lvalue Var 0x5565ca6912c8 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x5565ca692e68 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x5565ca692e50 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x5565ca692968 <col:36> '_Bool' lvalue Var 0x5565ca690fc0 'y$w_buff0_used' '_Bool'
|   |     `-ParenExpr 0x5565ca692e00 <col:53, col:227> 'int'
|   |       `-ConditionalOperator 0x5565ca692dd0 <col:54, col:226> 'int'
|   |         |-BinaryOperator 0x5565ca692b90 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x5565ca692a98 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x5565ca6929c0 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x5565ca6929a8 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x5565ca692988 <col:55> '_Bool' lvalue Var 0x5565ca690fc0 'y$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x5565ca692a78 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x5565ca692a10 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x5565ca6929f8 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x5565ca6929d8 <col:74> '_Bool' lvalue Var 0x5565ca690bf0 'y$r_buff0_thd1' '_Bool'
|   |         | |   `-UnaryOperator 0x5565ca692a60 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x5565ca692a48 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x5565ca692a28 <col:93> '_Bool' lvalue Var 0x5565ca6910b8 'y$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x5565ca692b70 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x5565ca692af0 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x5565ca692ad8 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x5565ca692ab8 <col:112> '_Bool' lvalue Var 0x5565ca690bf0 'y$r_buff0_thd1' '_Bool'
|   |         |   `-UnaryOperator 0x5565ca692b58 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x5565ca692b40 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x5565ca692b20 <col:131> '_Bool' lvalue Var 0x5565ca690d58 'y$r_buff1_thd1' '_Bool'
|   |         |-ImplicitCastExpr 0x5565ca692db8 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x5565ca692da0 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x5565ca692bb0 <col:148> '_Bool' lvalue Var 0x5565ca690fc0 'y$w_buff0_used' '_Bool'
|   |         `-ParenExpr 0x5565ca692d80 <col:165, col:226> 'int'
|   |           `-ConditionalOperator 0x5565ca692d50 <col:166, col:212> 'int'
|   |             |-BinaryOperator 0x5565ca692c70 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x5565ca692c28 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x5565ca692c10 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x5565ca692bd0 <col:166> '_Bool' lvalue Var 0x5565ca690fc0 'y$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x5565ca692c58 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x5565ca692c40 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x5565ca692bf0 <col:184> '_Bool' lvalue Var 0x5565ca690bf0 'y$r_buff0_thd1' '_Bool'
|   |             |-ImplicitCastExpr 0x5565ca692d08 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x5565ca692cc0 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x5565ca692c90 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x5565ca692d38 <col:212> 'int' <IntegralCast>
|   |               `-ImplicitCastExpr 0x5565ca692d20 <col:212> '_Bool' <LValueToRValue>
|   |                 `-DeclRefExpr 0x5565ca692ce8 <col:212> '_Bool' lvalue Var 0x5565ca690fc0 'y$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x5565ca693490 <line:725:3, col:221> '_Bool' '='
|   | |-DeclRefExpr 0x5565ca692ee8 <col:3> '_Bool' lvalue Var 0x5565ca6910b8 'y$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x5565ca693478 <col:20, col:221> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x5565ca693448 <col:20, col:221> 'int'
|   |     |-ImplicitCastExpr 0x5565ca693400 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x5565ca6933e8 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x5565ca692f08 <col:20> '_Bool' lvalue Var 0x5565ca6912c8 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x5565ca693430 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x5565ca693418 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x5565ca692f28 <col:36> '_Bool' lvalue Var 0x5565ca6910b8 'y$w_buff1_used' '_Bool'
|   |     `-ParenExpr 0x5565ca6933c8 <col:53, col:221> 'int'
|   |       `-ConditionalOperator 0x5565ca693398 <col:54, col:220> 'int'
|   |         |-BinaryOperator 0x5565ca693138 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x5565ca693058 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x5565ca692f80 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x5565ca692f68 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x5565ca692f48 <col:55> '_Bool' lvalue Var 0x5565ca690fc0 'y$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x5565ca693038 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x5565ca692fd0 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x5565ca692fb8 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x5565ca692f98 <col:74> '_Bool' lvalue Var 0x5565ca690bf0 'y$r_buff0_thd1' '_Bool'
|   |         | |   `-UnaryOperator 0x5565ca693020 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x5565ca693008 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x5565ca692fe8 <col:93> '_Bool' lvalue Var 0x5565ca6910b8 'y$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x5565ca693118 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x5565ca6930b0 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x5565ca693098 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x5565ca693078 <col:112> '_Bool' lvalue Var 0x5565ca690bf0 'y$r_buff0_thd1' '_Bool'
|   |         |   `-UnaryOperator 0x5565ca693100 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x5565ca6930e8 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x5565ca6930c8 <col:131> '_Bool' lvalue Var 0x5565ca690d58 'y$r_buff1_thd1' '_Bool'
|   |         |-ImplicitCastExpr 0x5565ca693380 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x5565ca693368 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x5565ca693158 <col:148> '_Bool' lvalue Var 0x5565ca6910b8 'y$w_buff1_used' '_Bool'
|   |         `-ParenExpr 0x5565ca693348 <col:165, col:220> 'int'
|   |           `-ConditionalOperator 0x5565ca693318 <col:166, col:219> 'int'
|   |             |-BinaryOperator 0x5565ca693218 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x5565ca6931d0 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x5565ca6931b8 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x5565ca693178 <col:166> '_Bool' lvalue Var 0x5565ca690fc0 'y$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x5565ca693200 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x5565ca6931e8 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x5565ca693198 <col:184> '_Bool' lvalue Var 0x5565ca690bf0 'y$r_buff0_thd1' '_Bool'
|   |             |-ImplicitCastExpr 0x5565ca6932e8 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x5565ca693268 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x5565ca693238 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x5565ca693300 <col:212, col:219> 'int' <IntegralCast>
|   |               `-CStyleCastExpr 0x5565ca6932c0 <col:212, col:219> '_Bool' <IntegralToBoolean>
|   |                 `-IntegerLiteral 0x5565ca693290 <col:219> 'int' 0
|   |-BinaryOperator 0x5565ca693a38 <line:726:3, col:227> '_Bool' '='
|   | |-DeclRefExpr 0x5565ca6934b0 <col:3> '_Bool' lvalue Var 0x5565ca690bf0 'y$r_buff0_thd1' '_Bool'
|   | `-ImplicitCastExpr 0x5565ca693a20 <col:20, col:227> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x5565ca6939f0 <col:20, col:227> 'int'
|   |     |-ImplicitCastExpr 0x5565ca6939a8 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x5565ca693990 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x5565ca6934d0 <col:20> '_Bool' lvalue Var 0x5565ca6912c8 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x5565ca6939d8 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x5565ca6939c0 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x5565ca6934f0 <col:36> '_Bool' lvalue Var 0x5565ca690bf0 'y$r_buff0_thd1' '_Bool'
|   |     `-ParenExpr 0x5565ca693970 <col:53, col:227> 'int'
|   |       `-ConditionalOperator 0x5565ca693940 <col:54, col:226> 'int'
|   |         |-BinaryOperator 0x5565ca693700 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x5565ca693620 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x5565ca693548 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x5565ca693530 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x5565ca693510 <col:55> '_Bool' lvalue Var 0x5565ca690fc0 'y$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x5565ca693600 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x5565ca693598 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x5565ca693580 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x5565ca693560 <col:74> '_Bool' lvalue Var 0x5565ca690bf0 'y$r_buff0_thd1' '_Bool'
|   |         | |   `-UnaryOperator 0x5565ca6935e8 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x5565ca6935d0 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x5565ca6935b0 <col:93> '_Bool' lvalue Var 0x5565ca6910b8 'y$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x5565ca6936e0 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x5565ca693678 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x5565ca693660 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x5565ca693640 <col:112> '_Bool' lvalue Var 0x5565ca690bf0 'y$r_buff0_thd1' '_Bool'
|   |         |   `-UnaryOperator 0x5565ca6936c8 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x5565ca6936b0 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x5565ca693690 <col:131> '_Bool' lvalue Var 0x5565ca690d58 'y$r_buff1_thd1' '_Bool'
|   |         |-ImplicitCastExpr 0x5565ca693928 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x5565ca693910 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x5565ca693720 <col:148> '_Bool' lvalue Var 0x5565ca690bf0 'y$r_buff0_thd1' '_Bool'
|   |         `-ParenExpr 0x5565ca6938f0 <col:165, col:226> 'int'
|   |           `-ConditionalOperator 0x5565ca6938c0 <col:166, col:212> 'int'
|   |             |-BinaryOperator 0x5565ca6937e0 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x5565ca693798 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x5565ca693780 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x5565ca693740 <col:166> '_Bool' lvalue Var 0x5565ca690fc0 'y$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x5565ca6937c8 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x5565ca6937b0 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x5565ca693760 <col:184> '_Bool' lvalue Var 0x5565ca690bf0 'y$r_buff0_thd1' '_Bool'
|   |             |-ImplicitCastExpr 0x5565ca693878 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x5565ca693830 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x5565ca693800 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x5565ca6938a8 <col:212> 'int' <IntegralCast>
|   |               `-ImplicitCastExpr 0x5565ca693890 <col:212> '_Bool' <LValueToRValue>
|   |                 `-DeclRefExpr 0x5565ca693858 <col:212> '_Bool' lvalue Var 0x5565ca690bf0 'y$r_buff0_thd1' '_Bool'
|   |-BinaryOperator 0x5565ca694028 <line:727:3, col:221> '_Bool' '='
|   | |-DeclRefExpr 0x5565ca693a58 <col:3> '_Bool' lvalue Var 0x5565ca690d58 'y$r_buff1_thd1' '_Bool'
|   | `-ImplicitCastExpr 0x5565ca694010 <col:20, col:221> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x5565ca693fe0 <col:20, col:221> 'int'
|   |     |-ImplicitCastExpr 0x5565ca693f98 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x5565ca693f80 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x5565ca693a78 <col:20> '_Bool' lvalue Var 0x5565ca6912c8 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x5565ca693fc8 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x5565ca693fb0 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x5565ca693a98 <col:36> '_Bool' lvalue Var 0x5565ca690d58 'y$r_buff1_thd1' '_Bool'
|   |     `-ParenExpr 0x5565ca693f60 <col:53, col:221> 'int'
|   |       `-ConditionalOperator 0x5565ca693f30 <col:54, col:220> 'int'
|   |         |-BinaryOperator 0x5565ca693cd0 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x5565ca693bf0 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x5565ca693af0 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x5565ca693ad8 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x5565ca693ab8 <col:55> '_Bool' lvalue Var 0x5565ca690fc0 'y$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x5565ca693bd0 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x5565ca693b68 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x5565ca693b50 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x5565ca693b30 <col:74> '_Bool' lvalue Var 0x5565ca690bf0 'y$r_buff0_thd1' '_Bool'
|   |         | |   `-UnaryOperator 0x5565ca693bb8 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x5565ca693ba0 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x5565ca693b80 <col:93> '_Bool' lvalue Var 0x5565ca6910b8 'y$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x5565ca693cb0 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x5565ca693c48 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x5565ca693c30 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x5565ca693c10 <col:112> '_Bool' lvalue Var 0x5565ca690bf0 'y$r_buff0_thd1' '_Bool'
|   |         |   `-UnaryOperator 0x5565ca693c98 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x5565ca693c80 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x5565ca693c60 <col:131> '_Bool' lvalue Var 0x5565ca690d58 'y$r_buff1_thd1' '_Bool'
|   |         |-ImplicitCastExpr 0x5565ca693f18 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x5565ca693f00 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x5565ca693cf0 <col:148> '_Bool' lvalue Var 0x5565ca690d58 'y$r_buff1_thd1' '_Bool'
|   |         `-ParenExpr 0x5565ca693ee0 <col:165, col:220> 'int'
|   |           `-ConditionalOperator 0x5565ca693eb0 <col:166, col:219> 'int'
|   |             |-BinaryOperator 0x5565ca693db0 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x5565ca693d68 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x5565ca693d50 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x5565ca693d10 <col:166> '_Bool' lvalue Var 0x5565ca690fc0 'y$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x5565ca693d98 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x5565ca693d80 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x5565ca693d30 <col:184> '_Bool' lvalue Var 0x5565ca690bf0 'y$r_buff0_thd1' '_Bool'
|   |             |-ImplicitCastExpr 0x5565ca693e80 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x5565ca693e00 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x5565ca693dd0 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x5565ca693e98 <col:212, col:219> 'int' <IntegralCast>
|   |               `-CStyleCastExpr 0x5565ca693e58 <col:212, col:219> '_Bool' <IntegralToBoolean>
|   |                 `-IntegerLiteral 0x5565ca693e28 <col:219> 'int' 0
|   |-BinaryOperator 0x5565ca6940a0 <line:728:3, col:25> 'int' '='
|   | |-DeclRefExpr 0x5565ca694048 <col:3> 'int' lvalue Var 0x5565ca690408 '__unbuffered_p0_EBX' 'int'
|   | `-ImplicitCastExpr 0x5565ca694088 <col:25> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x5565ca694068 <col:25> 'int' lvalue Var 0x5565ca690978 'y' 'int'
|   |-BinaryOperator 0x5565ca6941d0 <line:729:3, col:37> 'int' '='
|   | |-DeclRefExpr 0x5565ca6940c0 <col:3> 'int' lvalue Var 0x5565ca690978 'y' 'int'
|   | `-ConditionalOperator 0x5565ca6941a0 <col:7, col:37> 'int'
|   |   |-ImplicitCastExpr 0x5565ca694158 <col:7> 'int' <IntegralCast>
|   |   | `-ImplicitCastExpr 0x5565ca694140 <col:7> '_Bool' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x5565ca6940e0 <col:7> '_Bool' lvalue Var 0x5565ca690a10 'y$flush_delayed' '_Bool'
|   |   |-ImplicitCastExpr 0x5565ca694170 <col:25> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x5565ca694100 <col:25> 'int' lvalue Var 0x5565ca690b00 'y$mem_tmp' 'int'
|   |   `-ImplicitCastExpr 0x5565ca694188 <col:37> 'int' <LValueToRValue>
|   |     `-DeclRefExpr 0x5565ca694120 <col:37> 'int' lvalue Var 0x5565ca690978 'y' 'int'
|   |-BinaryOperator 0x5565ca694268 <line:730:3, col:28> '_Bool' '='
|   | |-DeclRefExpr 0x5565ca6941f0 <col:3> '_Bool' lvalue Var 0x5565ca690a10 'y$flush_delayed' '_Bool'
|   | `-CStyleCastExpr 0x5565ca694240 <col:21, col:28> '_Bool' <IntegralToBoolean>
|   |   `-IntegerLiteral 0x5565ca694210 <col:28> 'int' 0
|   |-CallExpr 0x5565ca6942c0 <line:731:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x5565ca6942a8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5565ca694288 <col:3> 'void ()' Function 0x5565ca637060 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x5565ca694318 <line:732:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x5565ca694300 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5565ca6942e0 <col:3> 'void ()' Function 0x5565ca636fa0 '__VERIFIER_atomic_begin' 'void ()'
|   |-CallExpr 0x5565ca694370 <line:733:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x5565ca694358 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5565ca694338 <col:3> 'void ()' Function 0x5565ca637060 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x5565ca6943c8 <line:734:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x5565ca6943b0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5565ca694390 <col:3> 'void ()' Function 0x5565ca636fa0 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x5565ca694480 <line:735:3, col:41> 'int' '='
|   | |-DeclRefExpr 0x5565ca6943e8 <col:3> 'int' lvalue Var 0x5565ca6901c8 '__unbuffered_cnt' 'int'
|   | `-BinaryOperator 0x5565ca694460 <col:22, col:41> 'int' '+'
|   |   |-ImplicitCastExpr 0x5565ca694448 <col:22> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x5565ca694408 <col:22> 'int' lvalue Var 0x5565ca6901c8 '__unbuffered_cnt' 'int'
|   |   `-IntegerLiteral 0x5565ca694428 <col:41> 'int' 1
|   |-CallExpr 0x5565ca6944d8 <line:736:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x5565ca6944c0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5565ca6944a0 <col:3> 'void ()' Function 0x5565ca637060 '__VERIFIER_atomic_end' 'void ()'
|   `-ReturnStmt 0x5565ca694588 <line:737:3, col:36>
|     `-CallExpr 0x5565ca694568 <col:10, col:36> 'void *'
|       `-ImplicitCastExpr 0x5565ca694550 <col:10> 'void *(*)(void)' <FunctionToPointerDecay>
|         `-DeclRefExpr 0x5565ca6944f8 <col:10> 'void *(void)' Function 0x5565ca636ab8 '__VERIFIER_nondet_pointer' 'void *(void)'
|-FunctionDecl 0x5565ca694750 prev 0x5565ca68fe48 <line:739:1, line:782:1> line:739:8 used P1 'void *(void *)'
| |-ParmVarDecl 0x5565ca6946b8 <col:11, col:17> col:17 arg 'void *'
| `-CompoundStmt 0x5565ca698940 <line:740:1, line:782:1>
|   |-CallExpr 0x5565ca694830 <line:741:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x5565ca694818 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5565ca6947f8 <col:3> 'void ()' Function 0x5565ca636fa0 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x5565ca6948a8 <line:742:3, col:15> 'int' '='
|   | |-DeclRefExpr 0x5565ca694850 <col:3> 'int' lvalue Var 0x5565ca691040 'y$w_buff1' 'int'
|   | `-ImplicitCastExpr 0x5565ca694890 <col:15> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x5565ca694870 <col:15> 'int' lvalue Var 0x5565ca690f48 'y$w_buff0' 'int'
|   |-BinaryOperator 0x5565ca694908 <line:743:3, col:15> 'int' '='
|   | |-DeclRefExpr 0x5565ca6948c8 <col:3> 'int' lvalue Var 0x5565ca690f48 'y$w_buff0' 'int'
|   | `-IntegerLiteral 0x5565ca6948e8 <col:15> 'int' 1
|   |-BinaryOperator 0x5565ca694980 <line:744:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x5565ca694928 <col:3> '_Bool' lvalue Var 0x5565ca6910b8 'y$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x5565ca694968 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x5565ca694948 <col:20> '_Bool' lvalue Var 0x5565ca690fc0 'y$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x5565ca694a18 <line:745:3, col:27> '_Bool' '='
|   | |-DeclRefExpr 0x5565ca6949a0 <col:3> '_Bool' lvalue Var 0x5565ca690fc0 'y$w_buff0_used' '_Bool'
|   | `-CStyleCastExpr 0x5565ca6949f0 <col:20, col:27> '_Bool' <IntegralToBoolean>
|   |   `-IntegerLiteral 0x5565ca6949c0 <col:27> 'int' 1
|   |-CallExpr 0x5565ca694bc8 <line:746:3, col:56> 'void'
|   | |-ImplicitCastExpr 0x5565ca694bb0 <col:3> 'void (*)(int)' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x5565ca694a38 <col:3> 'void (int)' Function 0x5565ca636d28 '__VERIFIER_assert' 'void (int)'
|   | `-UnaryOperator 0x5565ca694b60 <col:21, col:55> 'int' prefix '!' cannot overflow
|   |   `-ParenExpr 0x5565ca694b40 <col:22, col:55> 'int'
|   |     `-BinaryOperator 0x5565ca694af8 <col:23, col:41> 'int' '&&'
|   |       |-ImplicitCastExpr 0x5565ca694ab0 <col:23> 'int' <IntegralCast>
|   |       | `-ImplicitCastExpr 0x5565ca694a98 <col:23> '_Bool' <LValueToRValue>
|   |       |   `-DeclRefExpr 0x5565ca694a58 <col:23> '_Bool' lvalue Var 0x5565ca6910b8 'y$w_buff1_used' '_Bool'
|   |       `-ImplicitCastExpr 0x5565ca694ae0 <col:41> 'int' <IntegralCast>
|   |         `-ImplicitCastExpr 0x5565ca694ac8 <col:41> '_Bool' <LValueToRValue>
|   |           `-DeclRefExpr 0x5565ca694a78 <col:41> '_Bool' lvalue Var 0x5565ca690fc0 'y$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x5565ca694c48 <line:747:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x5565ca694bf0 <col:3> '_Bool' lvalue Var 0x5565ca690ce0 'y$r_buff1_thd0' '_Bool'
|   | `-ImplicitCastExpr 0x5565ca694c30 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x5565ca694c10 <col:20> '_Bool' lvalue Var 0x5565ca690b78 'y$r_buff0_thd0' '_Bool'
|   |-BinaryOperator 0x5565ca694cc0 <line:748:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x5565ca694c68 <col:3> '_Bool' lvalue Var 0x5565ca690d58 'y$r_buff1_thd1' '_Bool'
|   | `-ImplicitCastExpr 0x5565ca694ca8 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x5565ca694c88 <col:20> '_Bool' lvalue Var 0x5565ca690bf0 'y$r_buff0_thd1' '_Bool'
|   |-BinaryOperator 0x5565ca694d38 <line:749:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x5565ca694ce0 <col:3> '_Bool' lvalue Var 0x5565ca690dd0 'y$r_buff1_thd2' '_Bool'
|   | `-ImplicitCastExpr 0x5565ca694d20 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x5565ca694d00 <col:20> '_Bool' lvalue Var 0x5565ca690c68 'y$r_buff0_thd2' '_Bool'
|   |-BinaryOperator 0x5565ca694dd0 <line:750:3, col:27> '_Bool' '='
|   | |-DeclRefExpr 0x5565ca694d58 <col:3> '_Bool' lvalue Var 0x5565ca690c68 'y$r_buff0_thd2' '_Bool'
|   | `-CStyleCastExpr 0x5565ca694da8 <col:20, col:27> '_Bool' <IntegralToBoolean>
|   |   `-IntegerLiteral 0x5565ca694d78 <col:27> 'int' 1
|   |-CallExpr 0x5565ca694e28 <line:751:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x5565ca694e10 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5565ca694df0 <col:3> 'void ()' Function 0x5565ca637060 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x5565ca694e80 <line:752:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x5565ca694e68 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5565ca694e48 <col:3> 'void ()' Function 0x5565ca636fa0 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x5565ca694f18 <line:753:3, col:42> '_Bool' '='
|   | |-DeclRefExpr 0x5565ca694ea0 <col:3> '_Bool' lvalue Var 0x5565ca691250 'weak$$choice0' '_Bool'
|   | `-CallExpr 0x5565ca694ef8 <col:19, col:42> '_Bool'
|   |   `-ImplicitCastExpr 0x5565ca694ee0 <col:19> '_Bool (*)(void)' <FunctionToPointerDecay>
|   |     `-DeclRefExpr 0x5565ca694ec0 <col:19> '_Bool (void)' Function 0x5565ca636770 '__VERIFIER_nondet_bool' '_Bool (void)'
|   |-BinaryOperator 0x5565ca694fb0 <line:754:3, col:42> '_Bool' '='
|   | |-DeclRefExpr 0x5565ca694f38 <col:3> '_Bool' lvalue Var 0x5565ca6912c8 'weak$$choice2' '_Bool'
|   | `-CallExpr 0x5565ca694f90 <col:19, col:42> '_Bool'
|   |   `-ImplicitCastExpr 0x5565ca694f78 <col:19> '_Bool (*)(void)' <FunctionToPointerDecay>
|   |     `-DeclRefExpr 0x5565ca694f58 <col:19> '_Bool (void)' Function 0x5565ca636770 '__VERIFIER_nondet_bool' '_Bool (void)'
|   |-BinaryOperator 0x5565ca695028 <line:755:3, col:21> '_Bool' '='
|   | |-DeclRefExpr 0x5565ca694fd0 <col:3> '_Bool' lvalue Var 0x5565ca690a10 'y$flush_delayed' '_Bool'
|   | `-ImplicitCastExpr 0x5565ca695010 <col:21> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x5565ca694ff0 <col:21> '_Bool' lvalue Var 0x5565ca6912c8 'weak$$choice2' '_Bool'
|   |-BinaryOperator 0x5565ca6950a0 <line:756:3, col:15> 'int' '='
|   | |-DeclRefExpr 0x5565ca695048 <col:3> 'int' lvalue Var 0x5565ca690b00 'y$mem_tmp' 'int'
|   | `-ImplicitCastExpr 0x5565ca695088 <col:15> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x5565ca695068 <col:15> 'int' lvalue Var 0x5565ca690978 'y' 'int'
|   |-BinaryOperator 0x5565ca6954d8 <line:757:3, col:162> 'int' '='
|   | |-DeclRefExpr 0x5565ca6950c0 <col:3> 'int' lvalue Var 0x5565ca690978 'y' 'int'
|   | `-ConditionalOperator 0x5565ca6954a8 <col:7, col:162> 'int'
|   |   |-BinaryOperator 0x5565ca6952d0 <col:7, col:84> 'int' '||'
|   |   | |-BinaryOperator 0x5565ca6951f0 <col:7, col:46> 'int' '||'
|   |   | | |-UnaryOperator 0x5565ca695118 <col:7, col:8> 'int' prefix '!' cannot overflow
|   |   | | | `-ImplicitCastExpr 0x5565ca695100 <col:8> '_Bool' <LValueToRValue>
|   |   | | |   `-DeclRefExpr 0x5565ca6950e0 <col:8> '_Bool' lvalue Var 0x5565ca690fc0 'y$w_buff0_used' '_Bool'
|   |   | | `-BinaryOperator 0x5565ca6951d0 <col:26, col:46> 'int' '&&'
|   |   | |   |-UnaryOperator 0x5565ca695168 <col:26, col:27> 'int' prefix '!' cannot overflow
|   |   | |   | `-ImplicitCastExpr 0x5565ca695150 <col:27> '_Bool' <LValueToRValue>
|   |   | |   |   `-DeclRefExpr 0x5565ca695130 <col:27> '_Bool' lvalue Var 0x5565ca690c68 'y$r_buff0_thd2' '_Bool'
|   |   | |   `-UnaryOperator 0x5565ca6951b8 <col:45, col:46> 'int' prefix '!' cannot overflow
|   |   | |     `-ImplicitCastExpr 0x5565ca6951a0 <col:46> '_Bool' <LValueToRValue>
|   |   | |       `-DeclRefExpr 0x5565ca695180 <col:46> '_Bool' lvalue Var 0x5565ca6910b8 'y$w_buff1_used' '_Bool'
|   |   | `-BinaryOperator 0x5565ca6952b0 <col:64, col:84> 'int' '&&'
|   |   |   |-UnaryOperator 0x5565ca695248 <col:64, col:65> 'int' prefix '!' cannot overflow
|   |   |   | `-ImplicitCastExpr 0x5565ca695230 <col:65> '_Bool' <LValueToRValue>
|   |   |   |   `-DeclRefExpr 0x5565ca695210 <col:65> '_Bool' lvalue Var 0x5565ca690c68 'y$r_buff0_thd2' '_Bool'
|   |   |   `-UnaryOperator 0x5565ca695298 <col:83, col:84> 'int' prefix '!' cannot overflow
|   |   |     `-ImplicitCastExpr 0x5565ca695280 <col:84> '_Bool' <LValueToRValue>
|   |   |       `-DeclRefExpr 0x5565ca695260 <col:84> '_Bool' lvalue Var 0x5565ca690dd0 'y$r_buff1_thd2' '_Bool'
|   |   |-ImplicitCastExpr 0x5565ca695490 <col:101> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x5565ca6952f0 <col:101> 'int' lvalue Var 0x5565ca690978 'y' 'int'
|   |   `-ParenExpr 0x5565ca695470 <col:105, col:162> 'int'
|   |     `-ConditionalOperator 0x5565ca695440 <col:106, col:153> 'int'
|   |       |-BinaryOperator 0x5565ca6953b0 <col:106, col:124> 'int' '&&'
|   |       | |-ImplicitCastExpr 0x5565ca695368 <col:106> 'int' <IntegralCast>
|   |       | | `-ImplicitCastExpr 0x5565ca695350 <col:106> '_Bool' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x5565ca695310 <col:106> '_Bool' lvalue Var 0x5565ca690fc0 'y$w_buff0_used' '_Bool'
|   |       | `-ImplicitCastExpr 0x5565ca695398 <col:124> 'int' <IntegralCast>
|   |       |   `-ImplicitCastExpr 0x5565ca695380 <col:124> '_Bool' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x5565ca695330 <col:124> '_Bool' lvalue Var 0x5565ca690c68 'y$r_buff0_thd2' '_Bool'
|   |       |-ImplicitCastExpr 0x5565ca695410 <col:141> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x5565ca6953d0 <col:141> 'int' lvalue Var 0x5565ca690f48 'y$w_buff0' 'int'
|   |       `-ImplicitCastExpr 0x5565ca695428 <col:153> 'int' <LValueToRValue>
|   |         `-DeclRefExpr 0x5565ca6953f0 <col:153> 'int' lvalue Var 0x5565ca691040 'y$w_buff1' 'int'
|   |-BinaryOperator 0x5565ca6959e8 <line:758:3, col:208> 'int' '='
|   | |-DeclRefExpr 0x5565ca6954f8 <col:3> 'int' lvalue Var 0x5565ca690f48 'y$w_buff0' 'int'
|   | `-ConditionalOperator 0x5565ca6959b8 <col:15, col:208> 'int'
|   |   |-ImplicitCastExpr 0x5565ca695988 <col:15> 'int' <IntegralCast>
|   |   | `-ImplicitCastExpr 0x5565ca695970 <col:15> '_Bool' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x5565ca695518 <col:15> '_Bool' lvalue Var 0x5565ca6912c8 'weak$$choice2' '_Bool'
|   |   |-ImplicitCastExpr 0x5565ca6959a0 <col:31> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x5565ca695538 <col:31> 'int' lvalue Var 0x5565ca690f48 'y$w_buff0' 'int'
|   |   `-ParenExpr 0x5565ca695950 <col:43, col:208> 'int'
|   |     `-ConditionalOperator 0x5565ca695920 <col:44, col:207> 'int'
|   |       |-BinaryOperator 0x5565ca695748 <col:44, col:121> 'int' '||'
|   |       | |-BinaryOperator 0x5565ca695668 <col:44, col:83> 'int' '||'
|   |       | | |-UnaryOperator 0x5565ca695590 <col:44, col:45> 'int' prefix '!' cannot overflow
|   |       | | | `-ImplicitCastExpr 0x5565ca695578 <col:45> '_Bool' <LValueToRValue>
|   |       | | |   `-DeclRefExpr 0x5565ca695558 <col:45> '_Bool' lvalue Var 0x5565ca690fc0 'y$w_buff0_used' '_Bool'
|   |       | | `-BinaryOperator 0x5565ca695648 <col:63, col:83> 'int' '&&'
|   |       | |   |-UnaryOperator 0x5565ca6955e0 <col:63, col:64> 'int' prefix '!' cannot overflow
|   |       | |   | `-ImplicitCastExpr 0x5565ca6955c8 <col:64> '_Bool' <LValueToRValue>
|   |       | |   |   `-DeclRefExpr 0x5565ca6955a8 <col:64> '_Bool' lvalue Var 0x5565ca690c68 'y$r_buff0_thd2' '_Bool'
|   |       | |   `-UnaryOperator 0x5565ca695630 <col:82, col:83> 'int' prefix '!' cannot overflow
|   |       | |     `-ImplicitCastExpr 0x5565ca695618 <col:83> '_Bool' <LValueToRValue>
|   |       | |       `-DeclRefExpr 0x5565ca6955f8 <col:83> '_Bool' lvalue Var 0x5565ca6910b8 'y$w_buff1_used' '_Bool'
|   |       | `-BinaryOperator 0x5565ca695728 <col:101, col:121> 'int' '&&'
|   |       |   |-UnaryOperator 0x5565ca6956c0 <col:101, col:102> 'int' prefix '!' cannot overflow
|   |       |   | `-ImplicitCastExpr 0x5565ca6956a8 <col:102> '_Bool' <LValueToRValue>
|   |       |   |   `-DeclRefExpr 0x5565ca695688 <col:102> '_Bool' lvalue Var 0x5565ca690c68 'y$r_buff0_thd2' '_Bool'
|   |       |   `-UnaryOperator 0x5565ca695710 <col:120, col:121> 'int' prefix '!' cannot overflow
|   |       |     `-ImplicitCastExpr 0x5565ca6956f8 <col:121> '_Bool' <LValueToRValue>
|   |       |       `-DeclRefExpr 0x5565ca6956d8 <col:121> '_Bool' lvalue Var 0x5565ca690dd0 'y$r_buff1_thd2' '_Bool'
|   |       |-ImplicitCastExpr 0x5565ca695908 <col:138> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x5565ca695768 <col:138> 'int' lvalue Var 0x5565ca690f48 'y$w_buff0' 'int'
|   |       `-ParenExpr 0x5565ca6958e8 <col:150, col:207> 'int'
|   |         `-ConditionalOperator 0x5565ca6958b8 <col:151, col:198> 'int'
|   |           |-BinaryOperator 0x5565ca695828 <col:151, col:169> 'int' '&&'
|   |           | |-ImplicitCastExpr 0x5565ca6957e0 <col:151> 'int' <IntegralCast>
|   |           | | `-ImplicitCastExpr 0x5565ca6957c8 <col:151> '_Bool' <LValueToRValue>
|   |           | |   `-DeclRefExpr 0x5565ca695788 <col:151> '_Bool' lvalue Var 0x5565ca690fc0 'y$w_buff0_used' '_Bool'
|   |           | `-ImplicitCastExpr 0x5565ca695810 <col:169> 'int' <IntegralCast>
|   |           |   `-ImplicitCastExpr 0x5565ca6957f8 <col:169> '_Bool' <LValueToRValue>
|   |           |     `-DeclRefExpr 0x5565ca6957a8 <col:169> '_Bool' lvalue Var 0x5565ca690c68 'y$r_buff0_thd2' '_Bool'
|   |           |-ImplicitCastExpr 0x5565ca695888 <col:186> 'int' <LValueToRValue>
|   |           | `-DeclRefExpr 0x5565ca695848 <col:186> 'int' lvalue Var 0x5565ca690f48 'y$w_buff0' 'int'
|   |           `-ImplicitCastExpr 0x5565ca6958a0 <col:198> 'int' <LValueToRValue>
|   |             `-DeclRefExpr 0x5565ca695868 <col:198> 'int' lvalue Var 0x5565ca690f48 'y$w_buff0' 'int'
|   |-BinaryOperator 0x5565ca695f08 <line:759:3, col:208> 'int' '='
|   | |-DeclRefExpr 0x5565ca695a08 <col:3> 'int' lvalue Var 0x5565ca691040 'y$w_buff1' 'int'
|   | `-ConditionalOperator 0x5565ca695ed8 <col:15, col:208> 'int'
|   |   |-ImplicitCastExpr 0x5565ca695ea8 <col:15> 'int' <IntegralCast>
|   |   | `-ImplicitCastExpr 0x5565ca695e90 <col:15> '_Bool' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x5565ca695a28 <col:15> '_Bool' lvalue Var 0x5565ca6912c8 'weak$$choice2' '_Bool'
|   |   |-ImplicitCastExpr 0x5565ca695ec0 <col:31> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x5565ca695a48 <col:31> 'int' lvalue Var 0x5565ca691040 'y$w_buff1' 'int'
|   |   `-ParenExpr 0x5565ca695e70 <col:43, col:208> 'int'
|   |     `-ConditionalOperator 0x5565ca695e40 <col:44, col:207> 'int'
|   |       |-BinaryOperator 0x5565ca695c68 <col:44, col:121> 'int' '||'
|   |       | |-BinaryOperator 0x5565ca695b88 <col:44, col:83> 'int' '||'
|   |       | | |-UnaryOperator 0x5565ca695aa0 <col:44, col:45> 'int' prefix '!' cannot overflow
|   |       | | | `-ImplicitCastExpr 0x5565ca695a88 <col:45> '_Bool' <LValueToRValue>
|   |       | | |   `-DeclRefExpr 0x5565ca695a68 <col:45> '_Bool' lvalue Var 0x5565ca690fc0 'y$w_buff0_used' '_Bool'
|   |       | | `-BinaryOperator 0x5565ca695b68 <col:63, col:83> 'int' '&&'
|   |       | |   |-UnaryOperator 0x5565ca695af0 <col:63, col:64> 'int' prefix '!' cannot overflow
|   |       | |   | `-ImplicitCastExpr 0x5565ca695ad8 <col:64> '_Bool' <LValueToRValue>
|   |       | |   |   `-DeclRefExpr 0x5565ca695ab8 <col:64> '_Bool' lvalue Var 0x5565ca690c68 'y$r_buff0_thd2' '_Bool'
|   |       | |   `-UnaryOperator 0x5565ca695b50 <col:82, col:83> 'int' prefix '!' cannot overflow
|   |       | |     `-ImplicitCastExpr 0x5565ca695b28 <col:83> '_Bool' <LValueToRValue>
|   |       | |       `-DeclRefExpr 0x5565ca695b08 <col:83> '_Bool' lvalue Var 0x5565ca6910b8 'y$w_buff1_used' '_Bool'
|   |       | `-BinaryOperator 0x5565ca695c48 <col:101, col:121> 'int' '&&'
|   |       |   |-UnaryOperator 0x5565ca695be0 <col:101, col:102> 'int' prefix '!' cannot overflow
|   |       |   | `-ImplicitCastExpr 0x5565ca695bc8 <col:102> '_Bool' <LValueToRValue>
|   |       |   |   `-DeclRefExpr 0x5565ca695ba8 <col:102> '_Bool' lvalue Var 0x5565ca690c68 'y$r_buff0_thd2' '_Bool'
|   |       |   `-UnaryOperator 0x5565ca695c30 <col:120, col:121> 'int' prefix '!' cannot overflow
|   |       |     `-ImplicitCastExpr 0x5565ca695c18 <col:121> '_Bool' <LValueToRValue>
|   |       |       `-DeclRefExpr 0x5565ca695bf8 <col:121> '_Bool' lvalue Var 0x5565ca690dd0 'y$r_buff1_thd2' '_Bool'
|   |       |-ImplicitCastExpr 0x5565ca695e28 <col:138> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x5565ca695c88 <col:138> 'int' lvalue Var 0x5565ca691040 'y$w_buff1' 'int'
|   |       `-ParenExpr 0x5565ca695e08 <col:150, col:207> 'int'
|   |         `-ConditionalOperator 0x5565ca695dd8 <col:151, col:198> 'int'
|   |           |-BinaryOperator 0x5565ca695d48 <col:151, col:169> 'int' '&&'
|   |           | |-ImplicitCastExpr 0x5565ca695d00 <col:151> 'int' <IntegralCast>
|   |           | | `-ImplicitCastExpr 0x5565ca695ce8 <col:151> '_Bool' <LValueToRValue>
|   |           | |   `-DeclRefExpr 0x5565ca695ca8 <col:151> '_Bool' lvalue Var 0x5565ca690fc0 'y$w_buff0_used' '_Bool'
|   |           | `-ImplicitCastExpr 0x5565ca695d30 <col:169> 'int' <IntegralCast>
|   |           |   `-ImplicitCastExpr 0x5565ca695d18 <col:169> '_Bool' <LValueToRValue>
|   |           |     `-DeclRefExpr 0x5565ca695cc8 <col:169> '_Bool' lvalue Var 0x5565ca690c68 'y$r_buff0_thd2' '_Bool'
|   |           |-ImplicitCastExpr 0x5565ca695da8 <col:186> 'int' <LValueToRValue>
|   |           | `-DeclRefExpr 0x5565ca695d68 <col:186> 'int' lvalue Var 0x5565ca691040 'y$w_buff1' 'int'
|   |           `-ImplicitCastExpr 0x5565ca695dc0 <col:198> 'int' <LValueToRValue>
|   |             `-DeclRefExpr 0x5565ca695d88 <col:198> 'int' lvalue Var 0x5565ca691040 'y$w_buff1' 'int'
|   |-BinaryOperator 0x5565ca6964b0 <line:760:3, col:227> '_Bool' '='
|   | |-DeclRefExpr 0x5565ca695f28 <col:3> '_Bool' lvalue Var 0x5565ca690fc0 'y$w_buff0_used' '_Bool'
|   | `-ImplicitCastExpr 0x5565ca696498 <col:20, col:227> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x5565ca696468 <col:20, col:227> 'int'
|   |     |-ImplicitCastExpr 0x5565ca696420 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x5565ca696408 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x5565ca695f48 <col:20> '_Bool' lvalue Var 0x5565ca6912c8 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x5565ca696450 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x5565ca696438 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x5565ca695f68 <col:36> '_Bool' lvalue Var 0x5565ca690fc0 'y$w_buff0_used' '_Bool'
|   |     `-ParenExpr 0x5565ca6963e8 <col:53, col:227> 'int'
|   |       `-ConditionalOperator 0x5565ca6963b8 <col:54, col:226> 'int'
|   |         |-BinaryOperator 0x5565ca696178 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x5565ca696098 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x5565ca695fc0 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x5565ca695fa8 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x5565ca695f88 <col:55> '_Bool' lvalue Var 0x5565ca690fc0 'y$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x5565ca696078 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x5565ca696010 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x5565ca695ff8 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x5565ca695fd8 <col:74> '_Bool' lvalue Var 0x5565ca690c68 'y$r_buff0_thd2' '_Bool'
|   |         | |   `-UnaryOperator 0x5565ca696060 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x5565ca696048 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x5565ca696028 <col:93> '_Bool' lvalue Var 0x5565ca6910b8 'y$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x5565ca696158 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x5565ca6960f0 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x5565ca6960d8 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x5565ca6960b8 <col:112> '_Bool' lvalue Var 0x5565ca690c68 'y$r_buff0_thd2' '_Bool'
|   |         |   `-UnaryOperator 0x5565ca696140 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x5565ca696128 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x5565ca696108 <col:131> '_Bool' lvalue Var 0x5565ca690dd0 'y$r_buff1_thd2' '_Bool'
|   |         |-ImplicitCastExpr 0x5565ca6963a0 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x5565ca696388 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x5565ca696198 <col:148> '_Bool' lvalue Var 0x5565ca690fc0 'y$w_buff0_used' '_Bool'
|   |         `-ParenExpr 0x5565ca696368 <col:165, col:226> 'int'
|   |           `-ConditionalOperator 0x5565ca696338 <col:166, col:212> 'int'
|   |             |-BinaryOperator 0x5565ca696258 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x5565ca696210 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x5565ca6961f8 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x5565ca6961b8 <col:166> '_Bool' lvalue Var 0x5565ca690fc0 'y$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x5565ca696240 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x5565ca696228 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x5565ca6961d8 <col:184> '_Bool' lvalue Var 0x5565ca690c68 'y$r_buff0_thd2' '_Bool'
|   |             |-ImplicitCastExpr 0x5565ca6962f0 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x5565ca6962a8 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x5565ca696278 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x5565ca696320 <col:212> 'int' <IntegralCast>
|   |               `-ImplicitCastExpr 0x5565ca696308 <col:212> '_Bool' <LValueToRValue>
|   |                 `-DeclRefExpr 0x5565ca6962d0 <col:212> '_Bool' lvalue Var 0x5565ca690fc0 'y$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x5565ca696a78 <line:761:3, col:221> '_Bool' '='
|   | |-DeclRefExpr 0x5565ca6964d0 <col:3> '_Bool' lvalue Var 0x5565ca6910b8 'y$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x5565ca696a60 <col:20, col:221> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x5565ca696a30 <col:20, col:221> 'int'
|   |     |-ImplicitCastExpr 0x5565ca6969e8 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x5565ca6969d0 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x5565ca6964f0 <col:20> '_Bool' lvalue Var 0x5565ca6912c8 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x5565ca696a18 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x5565ca696a00 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x5565ca696510 <col:36> '_Bool' lvalue Var 0x5565ca6910b8 'y$w_buff1_used' '_Bool'
|   |     `-ParenExpr 0x5565ca6969b0 <col:53, col:221> 'int'
|   |       `-ConditionalOperator 0x5565ca696980 <col:54, col:220> 'int'
|   |         |-BinaryOperator 0x5565ca696720 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x5565ca696640 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x5565ca696568 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x5565ca696550 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x5565ca696530 <col:55> '_Bool' lvalue Var 0x5565ca690fc0 'y$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x5565ca696620 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x5565ca6965b8 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x5565ca6965a0 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x5565ca696580 <col:74> '_Bool' lvalue Var 0x5565ca690c68 'y$r_buff0_thd2' '_Bool'
|   |         | |   `-UnaryOperator 0x5565ca696608 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x5565ca6965f0 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x5565ca6965d0 <col:93> '_Bool' lvalue Var 0x5565ca6910b8 'y$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x5565ca696700 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x5565ca696698 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x5565ca696680 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x5565ca696660 <col:112> '_Bool' lvalue Var 0x5565ca690c68 'y$r_buff0_thd2' '_Bool'
|   |         |   `-UnaryOperator 0x5565ca6966e8 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x5565ca6966d0 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x5565ca6966b0 <col:131> '_Bool' lvalue Var 0x5565ca690dd0 'y$r_buff1_thd2' '_Bool'
|   |         |-ImplicitCastExpr 0x5565ca696968 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x5565ca696950 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x5565ca696740 <col:148> '_Bool' lvalue Var 0x5565ca6910b8 'y$w_buff1_used' '_Bool'
|   |         `-ParenExpr 0x5565ca696930 <col:165, col:220> 'int'
|   |           `-ConditionalOperator 0x5565ca696900 <col:166, col:219> 'int'
|   |             |-BinaryOperator 0x5565ca696800 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x5565ca6967b8 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x5565ca6967a0 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x5565ca696760 <col:166> '_Bool' lvalue Var 0x5565ca690fc0 'y$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x5565ca6967e8 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x5565ca6967d0 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x5565ca696780 <col:184> '_Bool' lvalue Var 0x5565ca690c68 'y$r_buff0_thd2' '_Bool'
|   |             |-ImplicitCastExpr 0x5565ca6968d0 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x5565ca696850 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x5565ca696820 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x5565ca6968e8 <col:212, col:219> 'int' <IntegralCast>
|   |               `-CStyleCastExpr 0x5565ca6968a8 <col:212, col:219> '_Bool' <IntegralToBoolean>
|   |                 `-IntegerLiteral 0x5565ca696878 <col:219> 'int' 0
|   |-BinaryOperator 0x5565ca697038 <line:762:3, col:227> '_Bool' '='
|   | |-DeclRefExpr 0x5565ca696a98 <col:3> '_Bool' lvalue Var 0x5565ca690c68 'y$r_buff0_thd2' '_Bool'
|   | `-ImplicitCastExpr 0x5565ca697020 <col:20, col:227> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x5565ca696ff0 <col:20, col:227> 'int'
|   |     |-ImplicitCastExpr 0x5565ca696fa8 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x5565ca696f90 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x5565ca696ab8 <col:20> '_Bool' lvalue Var 0x5565ca6912c8 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x5565ca696fd8 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x5565ca696fc0 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x5565ca696ad8 <col:36> '_Bool' lvalue Var 0x5565ca690c68 'y$r_buff0_thd2' '_Bool'
|   |     `-ParenExpr 0x5565ca696f70 <col:53, col:227> 'int'
|   |       `-ConditionalOperator 0x5565ca696f40 <col:54, col:226> 'int'
|   |         |-BinaryOperator 0x5565ca696d00 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x5565ca696c20 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x5565ca696b30 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x5565ca696b18 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x5565ca696af8 <col:55> '_Bool' lvalue Var 0x5565ca690fc0 'y$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x5565ca696c00 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x5565ca696b98 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x5565ca696b80 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x5565ca696b60 <col:74> '_Bool' lvalue Var 0x5565ca690c68 'y$r_buff0_thd2' '_Bool'
|   |         | |   `-UnaryOperator 0x5565ca696be8 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x5565ca696bd0 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x5565ca696bb0 <col:93> '_Bool' lvalue Var 0x5565ca6910b8 'y$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x5565ca696ce0 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x5565ca696c78 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x5565ca696c60 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x5565ca696c40 <col:112> '_Bool' lvalue Var 0x5565ca690c68 'y$r_buff0_thd2' '_Bool'
|   |         |   `-UnaryOperator 0x5565ca696cc8 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x5565ca696cb0 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x5565ca696c90 <col:131> '_Bool' lvalue Var 0x5565ca690dd0 'y$r_buff1_thd2' '_Bool'
|   |         |-ImplicitCastExpr 0x5565ca696f28 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x5565ca696f10 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x5565ca696d20 <col:148> '_Bool' lvalue Var 0x5565ca690c68 'y$r_buff0_thd2' '_Bool'
|   |         `-ParenExpr 0x5565ca696ef0 <col:165, col:226> 'int'
|   |           `-ConditionalOperator 0x5565ca696ec0 <col:166, col:212> 'int'
|   |             |-BinaryOperator 0x5565ca696de0 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x5565ca696d98 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x5565ca696d80 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x5565ca696d40 <col:166> '_Bool' lvalue Var 0x5565ca690fc0 'y$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x5565ca696dc8 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x5565ca696db0 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x5565ca696d60 <col:184> '_Bool' lvalue Var 0x5565ca690c68 'y$r_buff0_thd2' '_Bool'
|   |             |-ImplicitCastExpr 0x5565ca696e78 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x5565ca696e30 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x5565ca696e00 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x5565ca696ea8 <col:212> 'int' <IntegralCast>
|   |               `-ImplicitCastExpr 0x5565ca696e90 <col:212> '_Bool' <LValueToRValue>
|   |                 `-DeclRefExpr 0x5565ca696e58 <col:212> '_Bool' lvalue Var 0x5565ca690c68 'y$r_buff0_thd2' '_Bool'
|   |-BinaryOperator 0x5565ca697600 <line:763:3, col:221> '_Bool' '='
|   | |-DeclRefExpr 0x5565ca697058 <col:3> '_Bool' lvalue Var 0x5565ca690dd0 'y$r_buff1_thd2' '_Bool'
|   | `-ImplicitCastExpr 0x5565ca6975e8 <col:20, col:221> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x5565ca6975b8 <col:20, col:221> 'int'
|   |     |-ImplicitCastExpr 0x5565ca697570 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x5565ca697558 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x5565ca697078 <col:20> '_Bool' lvalue Var 0x5565ca6912c8 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x5565ca6975a0 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x5565ca697588 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x5565ca697098 <col:36> '_Bool' lvalue Var 0x5565ca690dd0 'y$r_buff1_thd2' '_Bool'
|   |     `-ParenExpr 0x5565ca697538 <col:53, col:221> 'int'
|   |       `-ConditionalOperator 0x5565ca697508 <col:54, col:220> 'int'
|   |         |-BinaryOperator 0x5565ca6972a8 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x5565ca6971c8 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x5565ca6970f0 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x5565ca6970d8 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x5565ca6970b8 <col:55> '_Bool' lvalue Var 0x5565ca690fc0 'y$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x5565ca6971a8 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x5565ca697140 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x5565ca697128 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x5565ca697108 <col:74> '_Bool' lvalue Var 0x5565ca690c68 'y$r_buff0_thd2' '_Bool'
|   |         | |   `-UnaryOperator 0x5565ca697190 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x5565ca697178 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x5565ca697158 <col:93> '_Bool' lvalue Var 0x5565ca6910b8 'y$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x5565ca697288 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x5565ca697220 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x5565ca697208 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x5565ca6971e8 <col:112> '_Bool' lvalue Var 0x5565ca690c68 'y$r_buff0_thd2' '_Bool'
|   |         |   `-UnaryOperator 0x5565ca697270 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x5565ca697258 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x5565ca697238 <col:131> '_Bool' lvalue Var 0x5565ca690dd0 'y$r_buff1_thd2' '_Bool'
|   |         |-ImplicitCastExpr 0x5565ca6974f0 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x5565ca6974d8 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x5565ca6972c8 <col:148> '_Bool' lvalue Var 0x5565ca690dd0 'y$r_buff1_thd2' '_Bool'
|   |         `-ParenExpr 0x5565ca6974b8 <col:165, col:220> 'int'
|   |           `-ConditionalOperator 0x5565ca697488 <col:166, col:219> 'int'
|   |             |-BinaryOperator 0x5565ca697388 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x5565ca697340 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x5565ca697328 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x5565ca6972e8 <col:166> '_Bool' lvalue Var 0x5565ca690fc0 'y$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x5565ca697370 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x5565ca697358 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x5565ca697308 <col:184> '_Bool' lvalue Var 0x5565ca690c68 'y$r_buff0_thd2' '_Bool'
|   |             |-ImplicitCastExpr 0x5565ca697458 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x5565ca6973d8 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x5565ca6973a8 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x5565ca697470 <col:212, col:219> 'int' <IntegralCast>
|   |               `-CStyleCastExpr 0x5565ca697430 <col:212, col:219> '_Bool' <IntegralToBoolean>
|   |                 `-IntegerLiteral 0x5565ca697400 <col:219> 'int' 0
|   |-BinaryOperator 0x5565ca697678 <line:764:3, col:25> 'int' '='
|   | |-DeclRefExpr 0x5565ca697620 <col:3> 'int' lvalue Var 0x5565ca690528 '__unbuffered_p1_EAX' 'int'
|   | `-ImplicitCastExpr 0x5565ca697660 <col:25> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x5565ca697640 <col:25> 'int' lvalue Var 0x5565ca690978 'y' 'int'
|   |-BinaryOperator 0x5565ca6977a8 <line:765:3, col:37> 'int' '='
|   | |-DeclRefExpr 0x5565ca697698 <col:3> 'int' lvalue Var 0x5565ca690978 'y' 'int'
|   | `-ConditionalOperator 0x5565ca697778 <col:7, col:37> 'int'
|   |   |-ImplicitCastExpr 0x5565ca697730 <col:7> 'int' <IntegralCast>
|   |   | `-ImplicitCastExpr 0x5565ca697718 <col:7> '_Bool' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x5565ca6976b8 <col:7> '_Bool' lvalue Var 0x5565ca690a10 'y$flush_delayed' '_Bool'
|   |   |-ImplicitCastExpr 0x5565ca697748 <col:25> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x5565ca6976d8 <col:25> 'int' lvalue Var 0x5565ca690b00 'y$mem_tmp' 'int'
|   |   `-ImplicitCastExpr 0x5565ca697760 <col:37> 'int' <LValueToRValue>
|   |     `-DeclRefExpr 0x5565ca6976f8 <col:37> 'int' lvalue Var 0x5565ca690978 'y' 'int'
|   |-BinaryOperator 0x5565ca697840 <line:766:3, col:28> '_Bool' '='
|   | |-DeclRefExpr 0x5565ca6977c8 <col:3> '_Bool' lvalue Var 0x5565ca690a10 'y$flush_delayed' '_Bool'
|   | `-CStyleCastExpr 0x5565ca697818 <col:21, col:28> '_Bool' <IntegralToBoolean>
|   |   `-IntegerLiteral 0x5565ca6977e8 <col:28> 'int' 0
|   |-CallExpr 0x5565ca697898 <line:767:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x5565ca697880 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5565ca697860 <col:3> 'void ()' Function 0x5565ca637060 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x5565ca6978f0 <line:768:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x5565ca6978d8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5565ca6978b8 <col:3> 'void ()' Function 0x5565ca636fa0 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x5565ca697968 <line:769:3, col:25> 'int' '='
|   | |-DeclRefExpr 0x5565ca697910 <col:3> 'int' lvalue Var 0x5565ca690648 '__unbuffered_p1_EBX' 'int'
|   | `-ImplicitCastExpr 0x5565ca697950 <col:25> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x5565ca697930 <col:25> 'int' lvalue Var 0x5565ca6911b8 'z' 'int'
|   |-CallExpr 0x5565ca6979c0 <line:770:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x5565ca6979a8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5565ca697988 <col:3> 'void ()' Function 0x5565ca637060 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x5565ca697a18 <line:771:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x5565ca697a00 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5565ca6979e0 <col:3> 'void ()' Function 0x5565ca636fa0 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x5565ca697d18 <line:772:3, col:103> 'int' '='
|   | |-DeclRefExpr 0x5565ca697a38 <col:3> 'int' lvalue Var 0x5565ca690978 'y' 'int'
|   | `-ConditionalOperator 0x5565ca697ce8 <col:7, col:103> 'int'
|   |   |-BinaryOperator 0x5565ca697af8 <col:7, col:25> 'int' '&&'
|   |   | |-ImplicitCastExpr 0x5565ca697ab0 <col:7> 'int' <IntegralCast>
|   |   | | `-ImplicitCastExpr 0x5565ca697a98 <col:7> '_Bool' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x5565ca697a58 <col:7> '_Bool' lvalue Var 0x5565ca690fc0 'y$w_buff0_used' '_Bool'
|   |   | `-ImplicitCastExpr 0x5565ca697ae0 <col:25> 'int' <IntegralCast>
|   |   |   `-ImplicitCastExpr 0x5565ca697ac8 <col:25> '_Bool' <LValueToRValue>
|   |   |     `-DeclRefExpr 0x5565ca697a78 <col:25> '_Bool' lvalue Var 0x5565ca690c68 'y$r_buff0_thd2' '_Bool'
|   |   |-ImplicitCastExpr 0x5565ca697cd0 <col:42> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x5565ca697b18 <col:42> 'int' lvalue Var 0x5565ca690f48 'y$w_buff0' 'int'
|   |   `-ParenExpr 0x5565ca697cb0 <col:54, col:103> 'int'
|   |     `-ConditionalOperator 0x5565ca697c80 <col:55, col:102> 'int'
|   |       |-BinaryOperator 0x5565ca697bf0 <col:55, col:73> 'int' '&&'
|   |       | |-ImplicitCastExpr 0x5565ca697ba8 <col:55> 'int' <IntegralCast>
|   |       | | `-ImplicitCastExpr 0x5565ca697b90 <col:55> '_Bool' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x5565ca697b38 <col:55> '_Bool' lvalue Var 0x5565ca6910b8 'y$w_buff1_used' '_Bool'
|   |       | `-ImplicitCastExpr 0x5565ca697bd8 <col:73> 'int' <IntegralCast>
|   |       |   `-ImplicitCastExpr 0x5565ca697bc0 <col:73> '_Bool' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x5565ca697b70 <col:73> '_Bool' lvalue Var 0x5565ca690dd0 'y$r_buff1_thd2' '_Bool'
|   |       |-ImplicitCastExpr 0x5565ca697c50 <col:90> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x5565ca697c10 <col:90> 'int' lvalue Var 0x5565ca691040 'y$w_buff1' 'int'
|   |       `-ImplicitCastExpr 0x5565ca697c68 <col:102> 'int' <LValueToRValue>
|   |         `-DeclRefExpr 0x5565ca697c30 <col:102> 'int' lvalue Var 0x5565ca690978 'y' 'int'
|   |-BinaryOperator 0x5565ca697f20 <line:773:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x5565ca697d38 <col:3> '_Bool' lvalue Var 0x5565ca690fc0 'y$w_buff0_used' '_Bool'
|   | `-ImplicitCastExpr 0x5565ca697f08 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x5565ca697ed8 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x5565ca697df8 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x5565ca697db0 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x5565ca697d98 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x5565ca697d58 <col:20> '_Bool' lvalue Var 0x5565ca690fc0 'y$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x5565ca697de0 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x5565ca697dc8 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x5565ca697d78 <col:38> '_Bool' lvalue Var 0x5565ca690c68 'y$r_buff0_thd2' '_Bool'
|   |     |-ImplicitCastExpr 0x5565ca697e90 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x5565ca697e48 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x5565ca697e18 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x5565ca697ec0 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x5565ca697ea8 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x5565ca697e70 <col:66> '_Bool' lvalue Var 0x5565ca690fc0 'y$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x5565ca698208 <line:774:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x5565ca697f40 <col:3> '_Bool' lvalue Var 0x5565ca6910b8 'y$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x5565ca6981f0 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x5565ca6981c0 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x5565ca6980e0 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x5565ca698000 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x5565ca697fb8 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x5565ca697fa0 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x5565ca697f60 <col:20> '_Bool' lvalue Var 0x5565ca690fc0 'y$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x5565ca697fe8 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x5565ca697fd0 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x5565ca697f80 <col:38> '_Bool' lvalue Var 0x5565ca690c68 'y$r_buff0_thd2' '_Bool'
|   |     | `-BinaryOperator 0x5565ca6980c0 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x5565ca698078 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x5565ca698060 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x5565ca698020 <col:56> '_Bool' lvalue Var 0x5565ca6910b8 'y$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x5565ca6980a8 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x5565ca698090 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x5565ca698040 <col:74> '_Bool' lvalue Var 0x5565ca690dd0 'y$r_buff1_thd2' '_Bool'
|   |     |-ImplicitCastExpr 0x5565ca698178 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x5565ca698130 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x5565ca698100 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x5565ca6981a8 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x5565ca698190 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x5565ca698158 <col:102> '_Bool' lvalue Var 0x5565ca6910b8 'y$w_buff1_used' '_Bool'
|   |-BinaryOperator 0x5565ca698410 <line:775:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x5565ca698228 <col:3> '_Bool' lvalue Var 0x5565ca690c68 'y$r_buff0_thd2' '_Bool'
|   | `-ImplicitCastExpr 0x5565ca6983f8 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x5565ca6983c8 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x5565ca6982e8 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x5565ca6982a0 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x5565ca698288 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x5565ca698248 <col:20> '_Bool' lvalue Var 0x5565ca690fc0 'y$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x5565ca6982d0 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x5565ca6982b8 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x5565ca698268 <col:38> '_Bool' lvalue Var 0x5565ca690c68 'y$r_buff0_thd2' '_Bool'
|   |     |-ImplicitCastExpr 0x5565ca698380 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x5565ca698338 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x5565ca698308 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x5565ca6983b0 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x5565ca698398 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x5565ca698360 <col:66> '_Bool' lvalue Var 0x5565ca690c68 'y$r_buff0_thd2' '_Bool'
|   |-BinaryOperator 0x5565ca6986f8 <line:776:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x5565ca698430 <col:3> '_Bool' lvalue Var 0x5565ca690dd0 'y$r_buff1_thd2' '_Bool'
|   | `-ImplicitCastExpr 0x5565ca6986e0 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x5565ca6986b0 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x5565ca6985d0 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x5565ca6984f0 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x5565ca6984a8 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x5565ca698490 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x5565ca698450 <col:20> '_Bool' lvalue Var 0x5565ca690fc0 'y$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x5565ca6984d8 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x5565ca6984c0 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x5565ca698470 <col:38> '_Bool' lvalue Var 0x5565ca690c68 'y$r_buff0_thd2' '_Bool'
|   |     | `-BinaryOperator 0x5565ca6985b0 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x5565ca698568 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x5565ca698550 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x5565ca698510 <col:56> '_Bool' lvalue Var 0x5565ca6910b8 'y$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x5565ca698598 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x5565ca698580 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x5565ca698530 <col:74> '_Bool' lvalue Var 0x5565ca690dd0 'y$r_buff1_thd2' '_Bool'
|   |     |-ImplicitCastExpr 0x5565ca698668 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x5565ca698620 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x5565ca6985f0 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x5565ca698698 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x5565ca698680 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x5565ca698648 <col:102> '_Bool' lvalue Var 0x5565ca690dd0 'y$r_buff1_thd2' '_Bool'
|   |-CallExpr 0x5565ca698750 <line:777:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x5565ca698738 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5565ca698718 <col:3> 'void ()' Function 0x5565ca637060 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x5565ca6987a8 <line:778:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x5565ca698790 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5565ca698770 <col:3> 'void ()' Function 0x5565ca636fa0 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x5565ca698860 <line:779:3, col:41> 'int' '='
|   | |-DeclRefExpr 0x5565ca6987c8 <col:3> 'int' lvalue Var 0x5565ca6901c8 '__unbuffered_cnt' 'int'
|   | `-BinaryOperator 0x5565ca698840 <col:22, col:41> 'int' '+'
|   |   |-ImplicitCastExpr 0x5565ca698828 <col:22> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x5565ca6987e8 <col:22> 'int' lvalue Var 0x5565ca6901c8 '__unbuffered_cnt' 'int'
|   |   `-IntegerLiteral 0x5565ca698808 <col:41> 'int' 1
|   |-CallExpr 0x5565ca6988b8 <line:780:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x5565ca6988a0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5565ca698880 <col:3> 'void ()' Function 0x5565ca637060 '__VERIFIER_atomic_end' 'void ()'
|   `-ReturnStmt 0x5565ca698930 <line:781:3, col:36>
|     `-CallExpr 0x5565ca698910 <col:10, col:36> 'void *'
|       `-ImplicitCastExpr 0x5565ca6988f8 <col:10> 'void *(*)(void)' <FunctionToPointerDecay>
|         `-DeclRefExpr 0x5565ca6988d8 <col:10> 'void *(void)' Function 0x5565ca636ab8 '__VERIFIER_nondet_pointer' 'void *(void)'
|-FunctionDecl 0x5565ca698ab8 prev 0x5565ca68ff10 <line:783:1, line:785:1> line:783:6 fence 'void ()'
| `-CompoundStmt 0x5565ca698b58 <line:784:1, line:785:1>
|-FunctionDecl 0x5565ca698ba0 prev 0x5565ca68ffd0 <line:786:1, line:788:1> line:786:6 isync 'void ()'
| `-CompoundStmt 0x5565ca698c40 <line:787:1, line:788:1>
|-FunctionDecl 0x5565ca698c70 prev 0x5565ca690090 <line:789:1, line:791:1> line:789:6 lwfence 'void ()'
| `-CompoundStmt 0x5565ca698d10 <line:790:1, line:791:1>
`-FunctionDecl 0x5565ca698d78 <line:792:1, line:814:1> line:792:5 main 'int ()'
  `-CompoundStmt 0x5565ca69a7c0 <line:793:1, line:814:1>
    |-DeclStmt 0x5565ca698e90 <line:794:3, col:17>
    | `-VarDecl 0x5565ca698e28 <col:3, col:13> col:13 used t249 'pthread_t':'unsigned long'
    |-CallExpr 0x5565ca699098 <line:795:3, col:53> 'int'
    | |-ImplicitCastExpr 0x5565ca699080 <col:3> 'int (*)(pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x5565ca698ea8 <col:3> 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' Function 0x5565ca6775b8 'pthread_create' 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)'
    | |-UnaryOperator 0x5565ca698ee8 <col:18, col:19> 'pthread_t *' prefix '&' cannot overflow
    | | `-DeclRefExpr 0x5565ca698ec8 <col:19> 'pthread_t':'unsigned long' lvalue Var 0x5565ca698e28 't249' 'pthread_t':'unsigned long'
    | |-ImplicitCastExpr 0x5565ca6990d8 <col:25, col:35> 'const pthread_attr_t *' <NullToPointer>
    | | `-ParenExpr 0x5565ca698f60 <col:25, col:35> 'void *'
    | |   `-CStyleCastExpr 0x5565ca698f38 <col:26, col:34> 'void *' <NullToPointer>
    | |     `-IntegerLiteral 0x5565ca698f00 <col:34> 'int' 0
    | |-ImplicitCastExpr 0x5565ca6990f0 <col:38> 'void *(*)(void *)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x5565ca698f80 <col:38> 'void *(void *)' Function 0x5565ca6913e0 'P0' 'void *(void *)'
    | `-ParenExpr 0x5565ca699000 <col:42, col:52> 'void *'
    |   `-CStyleCastExpr 0x5565ca698fd8 <col:43, col:51> 'void *' <NullToPointer>
    |     `-IntegerLiteral 0x5565ca698fa0 <col:51> 'int' 0
    |-DeclStmt 0x5565ca699180 <line:796:3, col:17>
    | `-VarDecl 0x5565ca699118 <col:3, col:13> col:13 used t250 'pthread_t':'unsigned long'
    |-CallExpr 0x5565ca699328 <line:797:3, col:53> 'int'
    | |-ImplicitCastExpr 0x5565ca699310 <col:3> 'int (*)(pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x5565ca699198 <col:3> 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' Function 0x5565ca6775b8 'pthread_create' 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)'
    | |-UnaryOperator 0x5565ca6991d8 <col:18, col:19> 'pthread_t *' prefix '&' cannot overflow
    | | `-DeclRefExpr 0x5565ca6991b8 <col:19> 'pthread_t':'unsigned long' lvalue Var 0x5565ca699118 't250' 'pthread_t':'unsigned long'
    | |-ImplicitCastExpr 0x5565ca699368 <col:25, col:35> 'const pthread_attr_t *' <NullToPointer>
    | | `-ParenExpr 0x5565ca699250 <col:25, col:35> 'void *'
    | |   `-CStyleCastExpr 0x5565ca699228 <col:26, col:34> 'void *' <NullToPointer>
    | |     `-IntegerLiteral 0x5565ca6991f0 <col:34> 'int' 0
    | |-ImplicitCastExpr 0x5565ca699380 <col:38> 'void *(*)(void *)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x5565ca699270 <col:38> 'void *(void *)' Function 0x5565ca694750 'P1' 'void *(void *)'
    | `-ParenExpr 0x5565ca6992f0 <col:42, col:52> 'void *'
    |   `-CStyleCastExpr 0x5565ca6992c8 <col:43, col:51> 'void *' <NullToPointer>
    |     `-IntegerLiteral 0x5565ca699290 <col:51> 'int' 0
    |-CallExpr 0x5565ca6993d0 <line:798:3, col:27> 'void'
    | `-ImplicitCastExpr 0x5565ca6993b8 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x5565ca699398 <col:3> 'void ()' Function 0x5565ca636fa0 '__VERIFIER_atomic_begin' 'void ()'
    |-BinaryOperator 0x5565ca6994a0 <line:799:3, col:41> '_Bool' '='
    | |-DeclRefExpr 0x5565ca6993f0 <col:3> '_Bool' lvalue Var 0x5565ca6906e0 'main$tmp_guard0' '_Bool'
    | `-ImplicitCastExpr 0x5565ca699488 <col:21, col:41> '_Bool' <IntegralToBoolean>
    |   `-BinaryOperator 0x5565ca699468 <col:21, col:41> 'int' '=='
    |     |-ImplicitCastExpr 0x5565ca699450 <col:21> 'int' <LValueToRValue>
    |     | `-DeclRefExpr 0x5565ca699410 <col:21> 'int' lvalue Var 0x5565ca6901c8 '__unbuffered_cnt' 'int'
    |     `-IntegerLiteral 0x5565ca699430 <col:41> 'int' 2
    |-CallExpr 0x5565ca6994f8 <line:800:3, col:25> 'void'
    | `-ImplicitCastExpr 0x5565ca6994e0 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x5565ca6994c0 <col:3> 'void ()' Function 0x5565ca637060 '__VERIFIER_atomic_end' 'void ()'
    |-CallExpr 0x5565ca699570 <line:801:3, col:36> 'void'
    | |-ImplicitCastExpr 0x5565ca699558 <col:3> 'void (*)(int)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x5565ca699518 <col:3> 'void (int)' Function 0x5565ca636940 '__VERIFIER_assume' 'void (int)'
    | `-ImplicitCastExpr 0x5565ca6995b0 <col:21> 'int' <IntegralCast>
    |   `-ImplicitCastExpr 0x5565ca699598 <col:21> '_Bool' <LValueToRValue>
    |     `-DeclRefExpr 0x5565ca699538 <col:21> '_Bool' lvalue Var 0x5565ca6906e0 'main$tmp_guard0' '_Bool'
    |-CallExpr 0x5565ca699600 <line:802:3, col:27> 'void'
    | `-ImplicitCastExpr 0x5565ca6995e8 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x5565ca6995c8 <col:3> 'void ()' Function 0x5565ca636fa0 '__VERIFIER_atomic_begin' 'void ()'
    |-BinaryOperator 0x5565ca6998e8 <line:803:3, col:103> 'int' '='
    | |-DeclRefExpr 0x5565ca699620 <col:3> 'int' lvalue Var 0x5565ca690978 'y' 'int'
    | `-ConditionalOperator 0x5565ca6998b8 <col:7, col:103> 'int'
    |   |-BinaryOperator 0x5565ca6996e0 <col:7, col:25> 'int' '&&'
    |   | |-ImplicitCastExpr 0x5565ca699698 <col:7> 'int' <IntegralCast>
    |   | | `-ImplicitCastExpr 0x5565ca699680 <col:7> '_Bool' <LValueToRValue>
    |   | |   `-DeclRefExpr 0x5565ca699640 <col:7> '_Bool' lvalue Var 0x5565ca690fc0 'y$w_buff0_used' '_Bool'
    |   | `-ImplicitCastExpr 0x5565ca6996c8 <col:25> 'int' <IntegralCast>
    |   |   `-ImplicitCastExpr 0x5565ca6996b0 <col:25> '_Bool' <LValueToRValue>
    |   |     `-DeclRefExpr 0x5565ca699660 <col:25> '_Bool' lvalue Var 0x5565ca690b78 'y$r_buff0_thd0' '_Bool'
    |   |-ImplicitCastExpr 0x5565ca6998a0 <col:42> 'int' <LValueToRValue>
    |   | `-DeclRefExpr 0x5565ca699700 <col:42> 'int' lvalue Var 0x5565ca690f48 'y$w_buff0' 'int'
    |   `-ParenExpr 0x5565ca699880 <col:54, col:103> 'int'
    |     `-ConditionalOperator 0x5565ca699850 <col:55, col:102> 'int'
    |       |-BinaryOperator 0x5565ca6997c0 <col:55, col:73> 'int' '&&'
    |       | |-ImplicitCastExpr 0x5565ca699778 <col:55> 'int' <IntegralCast>
    |       | | `-ImplicitCastExpr 0x5565ca699760 <col:55> '_Bool' <LValueToRValue>
    |       | |   `-DeclRefExpr 0x5565ca699720 <col:55> '_Bool' lvalue Var 0x5565ca6910b8 'y$w_buff1_used' '_Bool'
    |       | `-ImplicitCastExpr 0x5565ca6997a8 <col:73> 'int' <IntegralCast>
    |       |   `-ImplicitCastExpr 0x5565ca699790 <col:73> '_Bool' <LValueToRValue>
    |       |     `-DeclRefExpr 0x5565ca699740 <col:73> '_Bool' lvalue Var 0x5565ca690ce0 'y$r_buff1_thd0' '_Bool'
    |       |-ImplicitCastExpr 0x5565ca699820 <col:90> 'int' <LValueToRValue>
    |       | `-DeclRefExpr 0x5565ca6997e0 <col:90> 'int' lvalue Var 0x5565ca691040 'y$w_buff1' 'int'
    |       `-ImplicitCastExpr 0x5565ca699838 <col:102> 'int' <LValueToRValue>
    |         `-DeclRefExpr 0x5565ca699800 <col:102> 'int' lvalue Var 0x5565ca690978 'y' 'int'
    |-BinaryOperator 0x5565ca699af0 <line:804:3, col:66> '_Bool' '='
    | |-DeclRefExpr 0x5565ca699908 <col:3> '_Bool' lvalue Var 0x5565ca690fc0 'y$w_buff0_used' '_Bool'
    | `-ImplicitCastExpr 0x5565ca699ad8 <col:20, col:66> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x5565ca699aa8 <col:20, col:66> 'int'
    |     |-BinaryOperator 0x5565ca6999c8 <col:20, col:38> 'int' '&&'
    |     | |-ImplicitCastExpr 0x5565ca699980 <col:20> 'int' <IntegralCast>
    |     | | `-ImplicitCastExpr 0x5565ca699968 <col:20> '_Bool' <LValueToRValue>
    |     | |   `-DeclRefExpr 0x5565ca699928 <col:20> '_Bool' lvalue Var 0x5565ca690fc0 'y$w_buff0_used' '_Bool'
    |     | `-ImplicitCastExpr 0x5565ca6999b0 <col:38> 'int' <IntegralCast>
    |     |   `-ImplicitCastExpr 0x5565ca699998 <col:38> '_Bool' <LValueToRValue>
    |     |     `-DeclRefExpr 0x5565ca699948 <col:38> '_Bool' lvalue Var 0x5565ca690b78 'y$r_buff0_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x5565ca699a60 <col:55, col:62> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x5565ca699a18 <col:55, col:62> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x5565ca6999e8 <col:62> 'int' 0
    |     `-ImplicitCastExpr 0x5565ca699a90 <col:66> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x5565ca699a78 <col:66> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x5565ca699a40 <col:66> '_Bool' lvalue Var 0x5565ca690fc0 'y$w_buff0_used' '_Bool'
    |-BinaryOperator 0x5565ca699df8 <line:805:3, col:102> '_Bool' '='
    | |-DeclRefExpr 0x5565ca699b10 <col:3> '_Bool' lvalue Var 0x5565ca6910b8 'y$w_buff1_used' '_Bool'
    | `-ImplicitCastExpr 0x5565ca699de0 <col:20, col:102> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x5565ca699db0 <col:20, col:102> 'int'
    |     |-BinaryOperator 0x5565ca699cd0 <col:20, col:74> 'int' '||'
    |     | |-BinaryOperator 0x5565ca699bf0 <col:20, col:38> 'int' '&&'
    |     | | |-ImplicitCastExpr 0x5565ca699ba8 <col:20> 'int' <IntegralCast>
    |     | | | `-ImplicitCastExpr 0x5565ca699b90 <col:20> '_Bool' <LValueToRValue>
    |     | | |   `-DeclRefExpr 0x5565ca699b30 <col:20> '_Bool' lvalue Var 0x5565ca690fc0 'y$w_buff0_used' '_Bool'
    |     | | `-ImplicitCastExpr 0x5565ca699bd8 <col:38> 'int' <IntegralCast>
    |     | |   `-ImplicitCastExpr 0x5565ca699bc0 <col:38> '_Bool' <LValueToRValue>
    |     | |     `-DeclRefExpr 0x5565ca699b50 <col:38> '_Bool' lvalue Var 0x5565ca690b78 'y$r_buff0_thd0' '_Bool'
    |     | `-BinaryOperator 0x5565ca699cb0 <col:56, col:74> 'int' '&&'
    |     |   |-ImplicitCastExpr 0x5565ca699c68 <col:56> 'int' <IntegralCast>
    |     |   | `-ImplicitCastExpr 0x5565ca699c50 <col:56> '_Bool' <LValueToRValue>
    |     |   |   `-DeclRefExpr 0x5565ca699c10 <col:56> '_Bool' lvalue Var 0x5565ca6910b8 'y$w_buff1_used' '_Bool'
    |     |   `-ImplicitCastExpr 0x5565ca699c98 <col:74> 'int' <IntegralCast>
    |     |     `-ImplicitCastExpr 0x5565ca699c80 <col:74> '_Bool' <LValueToRValue>
    |     |       `-DeclRefExpr 0x5565ca699c30 <col:74> '_Bool' lvalue Var 0x5565ca690ce0 'y$r_buff1_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x5565ca699d68 <col:91, col:98> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x5565ca699d20 <col:91, col:98> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x5565ca699cf0 <col:98> 'int' 0
    |     `-ImplicitCastExpr 0x5565ca699d98 <col:102> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x5565ca699d80 <col:102> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x5565ca699d48 <col:102> '_Bool' lvalue Var 0x5565ca6910b8 'y$w_buff1_used' '_Bool'
    |-BinaryOperator 0x5565ca69a000 <line:806:3, col:66> '_Bool' '='
    | |-DeclRefExpr 0x5565ca699e18 <col:3> '_Bool' lvalue Var 0x5565ca690b78 'y$r_buff0_thd0' '_Bool'
    | `-ImplicitCastExpr 0x5565ca699fe8 <col:20, col:66> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x5565ca699fb8 <col:20, col:66> 'int'
    |     |-BinaryOperator 0x5565ca699ed8 <col:20, col:38> 'int' '&&'
    |     | |-ImplicitCastExpr 0x5565ca699e90 <col:20> 'int' <IntegralCast>
    |     | | `-ImplicitCastExpr 0x5565ca699e78 <col:20> '_Bool' <LValueToRValue>
    |     | |   `-DeclRefExpr 0x5565ca699e38 <col:20> '_Bool' lvalue Var 0x5565ca690fc0 'y$w_buff0_used' '_Bool'
    |     | `-ImplicitCastExpr 0x5565ca699ec0 <col:38> 'int' <IntegralCast>
    |     |   `-ImplicitCastExpr 0x5565ca699ea8 <col:38> '_Bool' <LValueToRValue>
    |     |     `-DeclRefExpr 0x5565ca699e58 <col:38> '_Bool' lvalue Var 0x5565ca690b78 'y$r_buff0_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x5565ca699f70 <col:55, col:62> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x5565ca699f28 <col:55, col:62> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x5565ca699ef8 <col:62> 'int' 0
    |     `-ImplicitCastExpr 0x5565ca699fa0 <col:66> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x5565ca699f88 <col:66> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x5565ca699f50 <col:66> '_Bool' lvalue Var 0x5565ca690b78 'y$r_buff0_thd0' '_Bool'
    |-BinaryOperator 0x5565ca69a2e8 <line:807:3, col:102> '_Bool' '='
    | |-DeclRefExpr 0x5565ca69a020 <col:3> '_Bool' lvalue Var 0x5565ca690ce0 'y$r_buff1_thd0' '_Bool'
    | `-ImplicitCastExpr 0x5565ca69a2d0 <col:20, col:102> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x5565ca69a2a0 <col:20, col:102> 'int'
    |     |-BinaryOperator 0x5565ca69a1c0 <col:20, col:74> 'int' '||'
    |     | |-BinaryOperator 0x5565ca69a0e0 <col:20, col:38> 'int' '&&'
    |     | | |-ImplicitCastExpr 0x5565ca69a098 <col:20> 'int' <IntegralCast>
    |     | | | `-ImplicitCastExpr 0x5565ca69a080 <col:20> '_Bool' <LValueToRValue>
    |     | | |   `-DeclRefExpr 0x5565ca69a040 <col:20> '_Bool' lvalue Var 0x5565ca690fc0 'y$w_buff0_used' '_Bool'
    |     | | `-ImplicitCastExpr 0x5565ca69a0c8 <col:38> 'int' <IntegralCast>
    |     | |   `-ImplicitCastExpr 0x5565ca69a0b0 <col:38> '_Bool' <LValueToRValue>
    |     | |     `-DeclRefExpr 0x5565ca69a060 <col:38> '_Bool' lvalue Var 0x5565ca690b78 'y$r_buff0_thd0' '_Bool'
    |     | `-BinaryOperator 0x5565ca69a1a0 <col:56, col:74> 'int' '&&'
    |     |   |-ImplicitCastExpr 0x5565ca69a158 <col:56> 'int' <IntegralCast>
    |     |   | `-ImplicitCastExpr 0x5565ca69a140 <col:56> '_Bool' <LValueToRValue>
    |     |   |   `-DeclRefExpr 0x5565ca69a100 <col:56> '_Bool' lvalue Var 0x5565ca6910b8 'y$w_buff1_used' '_Bool'
    |     |   `-ImplicitCastExpr 0x5565ca69a188 <col:74> 'int' <IntegralCast>
    |     |     `-ImplicitCastExpr 0x5565ca69a170 <col:74> '_Bool' <LValueToRValue>
    |     |       `-DeclRefExpr 0x5565ca69a120 <col:74> '_Bool' lvalue Var 0x5565ca690ce0 'y$r_buff1_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x5565ca69a258 <col:91, col:98> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x5565ca69a210 <col:91, col:98> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x5565ca69a1e0 <col:98> 'int' 0
    |     `-ImplicitCastExpr 0x5565ca69a288 <col:102> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x5565ca69a270 <col:102> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x5565ca69a238 <col:102> '_Bool' lvalue Var 0x5565ca690ce0 'y$r_buff1_thd0' '_Bool'
    |-CallExpr 0x5565ca69a340 <line:808:3, col:25> 'void'
    | `-ImplicitCastExpr 0x5565ca69a328 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x5565ca69a308 <col:3> 'void ()' Function 0x5565ca637060 '__VERIFIER_atomic_end' 'void ()'
    |-CallExpr 0x5565ca69a398 <line:809:3, col:27> 'void'
    | `-ImplicitCastExpr 0x5565ca69a380 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x5565ca69a360 <col:3> 'void ()' Function 0x5565ca636fa0 '__VERIFIER_atomic_begin' 'void ()'
    |-BinaryOperator 0x5565ca69a668 <line:810:3, col:131> '_Bool' '='
    | |-DeclRefExpr 0x5565ca69a3b8 <col:3> '_Bool' lvalue Var 0x5565ca690758 'main$tmp_guard1' '_Bool'
    | `-ImplicitCastExpr 0x5565ca69a650 <col:21, col:131> '_Bool' <IntegralToBoolean>
    |   `-UnaryOperator 0x5565ca69a638 <col:21, col:131> 'int' prefix '!' cannot overflow
    |     `-ParenExpr 0x5565ca69a618 <col:22, col:131> 'int'
    |       `-BinaryOperator 0x5565ca69a5f8 <col:23, col:130> 'int' '&&'
    |         |-BinaryOperator 0x5565ca69a560 <col:23, col:102> 'int' '&&'
    |         | |-BinaryOperator 0x5565ca69a4c8 <col:23, col:74> 'int' '&&'
    |         | | |-BinaryOperator 0x5565ca69a430 <col:23, col:46> 'int' '=='
    |         | | | |-ImplicitCastExpr 0x5565ca69a418 <col:23> 'int' <LValueToRValue>
    |         | | | | `-DeclRefExpr 0x5565ca69a3d8 <col:23> 'int' lvalue Var 0x5565ca6902e8 '__unbuffered_p0_EAX' 'int'
    |         | | | `-IntegerLiteral 0x5565ca69a3f8 <col:46> 'int' 1
    |         | | `-BinaryOperator 0x5565ca69a4a8 <col:51, col:74> 'int' '=='
    |         | |   |-ImplicitCastExpr 0x5565ca69a490 <col:51> 'int' <LValueToRValue>
    |         | |   | `-DeclRefExpr 0x5565ca69a450 <col:51> 'int' lvalue Var 0x5565ca690408 '__unbuffered_p0_EBX' 'int'
    |         | |   `-IntegerLiteral 0x5565ca69a470 <col:74> 'int' 0
    |         | `-BinaryOperator 0x5565ca69a540 <col:79, col:102> 'int' '=='
    |         |   |-ImplicitCastExpr 0x5565ca69a528 <col:79> 'int' <LValueToRValue>
    |         |   | `-DeclRefExpr 0x5565ca69a4e8 <col:79> 'int' lvalue Var 0x5565ca690528 '__unbuffered_p1_EAX' 'int'
    |         |   `-IntegerLiteral 0x5565ca69a508 <col:102> 'int' 1
    |         `-BinaryOperator 0x5565ca69a5d8 <col:107, col:130> 'int' '=='
    |           |-ImplicitCastExpr 0x5565ca69a5c0 <col:107> 'int' <LValueToRValue>
    |           | `-DeclRefExpr 0x5565ca69a580 <col:107> 'int' lvalue Var 0x5565ca690648 '__unbuffered_p1_EBX' 'int'
    |           `-IntegerLiteral 0x5565ca69a5a0 <col:130> 'int' 0
    |-CallExpr 0x5565ca69a6c0 <line:811:3, col:25> 'void'
    | `-ImplicitCastExpr 0x5565ca69a6a8 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x5565ca69a688 <col:3> 'void ()' Function 0x5565ca637060 '__VERIFIER_atomic_end' 'void ()'
    |-CallExpr 0x5565ca69a738 <line:812:3, col:36> 'void'
    | |-ImplicitCastExpr 0x5565ca69a720 <col:3> 'void (*)(int)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x5565ca69a6e0 <col:3> 'void (int)' Function 0x5565ca636d28 '__VERIFIER_assert' 'void (int)'
    | `-ImplicitCastExpr 0x5565ca69a778 <col:21> 'int' <IntegralCast>
    |   `-ImplicitCastExpr 0x5565ca69a760 <col:21> '_Bool' <LValueToRValue>
    |     `-DeclRefExpr 0x5565ca69a700 <col:21> '_Bool' lvalue Var 0x5565ca690758 'main$tmp_guard1' '_Bool'
    `-ReturnStmt 0x5565ca69a7b0 <line:813:3, col:10>
      `-IntegerLiteral 0x5565ca69a790 <col:10> 'int' 0
