TranslationUnitDecl 0x556389de2e18 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x556389de36d8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x556389de33b0 '__int128'
|-TypedefDecl 0x556389de3748 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x556389de33d0 'unsigned __int128'
|-TypedefDecl 0x556389de3a50 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x556389de3820 'struct __NSConstantString_tag'
|   `-Record 0x556389de37a0 '__NSConstantString_tag'
|-TypedefDecl 0x556389de3af8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x556389de3ab0 'char *'
|   `-BuiltinType 0x556389de2eb0 'char'
|-TypedefDecl 0x556389e22650 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'struct __va_list_tag [1]'
| `-ConstantArrayType 0x556389de3d90 'struct __va_list_tag [1]' 1 
|   `-RecordType 0x556389de3bd0 'struct __va_list_tag'
|     `-Record 0x556389de3b50 '__va_list_tag'
|-FunctionDecl 0x556389e22790 <./split_6/mix049_power.oepc_false-unreach-call.i:1:1, col:34> col:13 used __VERIFIER_assume 'void (int)' extern
| `-ParmVarDecl 0x556389e226c0 <col:31> col:34 'int'
|-FunctionDecl 0x556389e22958 <line:2:1, col:45> col:15 used __VERIFIER_nondet_pointer 'void *(void)' extern
|-FunctionDecl 0x556389e22a80 <line:3:1, col:61> col:13 used __VERIFIER_error 'void () __attribute__((noreturn))' extern
|-FunctionDecl 0x556389e22bc8 <line:4:1, col:99> col:6 used __VERIFIER_assert 'void (int)'
| |-ParmVarDecl 0x556389e22b38 <col:24, col:28> col:28 used expression 'int'
| `-CompoundStmt 0x556389e22df8 <col:40, col:99>
|   |-IfStmt 0x556389e22dc8 <col:42, col:88>
|   | |-UnaryOperator 0x556389e22ca8 <col:46, col:47> 'int' prefix '!' cannot overflow
|   | | `-ImplicitCastExpr 0x556389e22c90 <col:47> 'int' <LValueToRValue>
|   | |   `-DeclRefExpr 0x556389e22c70 <col:47> 'int' lvalue ParmVar 0x556389e22b38 'expression' 'int'
|   | `-CompoundStmt 0x556389e22db0 <col:59, col:88>
|   |   `-LabelStmt 0x556389e22d98 <col:61, col:85> 'ERROR'
|   |     `-CallExpr 0x556389e22d28 <col:68, col:85> 'void'
|   |       `-ImplicitCastExpr 0x556389e22d10 <col:68> 'void (*)() __attribute__((noreturn))' <FunctionToPointerDecay>
|   |         `-DeclRefExpr 0x556389e22cc0 <col:68> 'void () __attribute__((noreturn))' Function 0x556389e22a80 '__VERIFIER_error' 'void () __attribute__((noreturn))'
|   |-NullStmt 0x556389e22de0 <col:89>
|   `-ReturnStmt 0x556389e22de8 <col:91>
|-FunctionDecl 0x556389e22e40 <line:5:1, col:37> col:13 used __VERIFIER_atomic_begin 'void ()' extern
|-FunctionDecl 0x556389e22f00 <line:6:1, col:35> col:13 used __VERIFIER_atomic_end 'void ()' extern
|-FunctionDecl 0x556389e23280 <line:8:1, line:10:76> line:8:13 __assert_fail 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x556389e22fb8 <col:28, col:40> col:40 __assertion 'const char *'
| |-ParmVarDecl 0x556389e23038 <col:53, col:65> col:65 __file 'const char *'
| |-ParmVarDecl 0x556389e230b8 <line:9:7, col:20> col:20 __line 'unsigned int'
| |-ParmVarDecl 0x556389e23138 <col:28, col:40> col:40 __function 'const char *'
| `-NoThrowAttr 0x556389e23340 <line:10:22>
|-FunctionDecl 0x556389e49390 <line:11:1, line:13:76> line:11:13 __assert_perror_fail 'void (int, const char *, unsigned int, const char *) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x556389e233b0 <col:35, col:39> col:39 __errnum 'int'
| |-ParmVarDecl 0x556389e23430 <col:49, col:61> col:61 __file 'const char *'
| |-ParmVarDecl 0x556389e234b0 <line:12:7, col:20> col:20 __line 'unsigned int'
| |-ParmVarDecl 0x556389e23530 <col:28, col:40> col:40 __function 'const char *'
| `-NoThrowAttr 0x556389e49450 <line:13:22>
|-FunctionDecl 0x556389e49700 <line:14:1, line:15:76> line:14:13 __assert 'void (const char *, const char *, int) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x556389e494c0 <col:23, col:35> col:35 __assertion 'const char *'
| |-ParmVarDecl 0x556389e49540 <col:48, col:60> col:60 __file 'const char *'
| |-ParmVarDecl 0x556389e495c0 <col:68, col:72> col:72 __line 'int'
| `-NoThrowAttr 0x556389e497b8 <line:15:22>
|-TypedefDecl 0x556389e49828 <line:17:1, col:23> col:23 __u_char 'unsigned char'
| `-BuiltinType 0x556389de2f70 'unsigned char'
|-TypedefDecl 0x556389e49898 <line:18:1, col:28> col:28 __u_short 'unsigned short'
| `-BuiltinType 0x556389de2f90 'unsigned short'
|-TypedefDecl 0x556389e49908 <line:19:1, col:22> col:22 __u_int 'unsigned int'
| `-BuiltinType 0x556389de2fb0 'unsigned int'
|-TypedefDecl 0x556389e49978 <line:20:1, col:27> col:27 __u_long 'unsigned long'
| `-BuiltinType 0x556389de2fd0 'unsigned long'
|-TypedefDecl 0x556389e499e8 <line:21:1, col:21> col:21 __int8_t 'signed char'
| `-BuiltinType 0x556389de2ed0 'signed char'
|-TypedefDecl 0x556389e49a58 <line:22:1, col:23> col:23 __uint8_t 'unsigned char'
| `-BuiltinType 0x556389de2f70 'unsigned char'
|-TypedefDecl 0x556389e49ac8 <line:23:1, col:26> col:26 __int16_t 'short'
| `-BuiltinType 0x556389de2ef0 'short'
|-TypedefDecl 0x556389e49b38 <line:24:1, col:28> col:28 __uint16_t 'unsigned short'
| `-BuiltinType 0x556389de2f90 'unsigned short'
|-TypedefDecl 0x556389e49ba8 <line:25:1, col:20> col:20 __int32_t 'int'
| `-BuiltinType 0x556389de2f10 'int'
|-TypedefDecl 0x556389e49c18 <line:26:1, col:22> col:22 __uint32_t 'unsigned int'
| `-BuiltinType 0x556389de2fb0 'unsigned int'
|-TypedefDecl 0x556389e49c88 <line:27:1, col:25> col:25 __int64_t 'long'
| `-BuiltinType 0x556389de2f30 'long'
|-TypedefDecl 0x556389e49cf8 <line:28:1, col:27> col:27 referenced __uint64_t 'unsigned long'
| `-BuiltinType 0x556389de2fd0 'unsigned long'
|-TypedefDecl 0x556389e49d68 <line:29:1, col:18> col:18 referenced __quad_t 'long'
| `-BuiltinType 0x556389de2f30 'long'
|-TypedefDecl 0x556389e49dd8 <line:30:1, col:27> col:27 __u_quad_t 'unsigned long'
| `-BuiltinType 0x556389de2fd0 'unsigned long'
|-TypedefDecl 0x556389e49e48 <line:31:1, col:27> col:27 __dev_t 'unsigned long'
| `-BuiltinType 0x556389de2fd0 'unsigned long'
|-TypedefDecl 0x556389e49eb8 <line:32:1, col:22> col:22 __uid_t 'unsigned int'
| `-BuiltinType 0x556389de2fb0 'unsigned int'
|-TypedefDecl 0x556389e49f28 <line:33:1, col:22> col:22 __gid_t 'unsigned int'
| `-BuiltinType 0x556389de2fb0 'unsigned int'
|-TypedefDecl 0x556389e49f98 <line:34:1, col:27> col:27 __ino_t 'unsigned long'
| `-BuiltinType 0x556389de2fd0 'unsigned long'
|-TypedefDecl 0x556389e4a008 <line:35:1, col:27> col:27 __ino64_t 'unsigned long'
| `-BuiltinType 0x556389de2fd0 'unsigned long'
|-TypedefDecl 0x556389e4a078 <line:36:1, col:22> col:22 __mode_t 'unsigned int'
| `-BuiltinType 0x556389de2fb0 'unsigned int'
|-TypedefDecl 0x556389e4a0e8 <line:37:1, col:27> col:27 __nlink_t 'unsigned long'
| `-BuiltinType 0x556389de2fd0 'unsigned long'
|-TypedefDecl 0x556389e4a158 <line:38:1, col:18> col:18 __off_t 'long'
| `-BuiltinType 0x556389de2f30 'long'
|-TypedefDecl 0x556389e4a1c8 <line:39:1, col:18> col:18 referenced __off64_t 'long'
| `-BuiltinType 0x556389de2f30 'long'
|-TypedefDecl 0x556389e4a238 <line:40:1, col:13> col:13 referenced __pid_t 'int'
| `-BuiltinType 0x556389de2f10 'int'
|-RecordDecl 0x556389e4a290 <line:41:9, col:32> col:9 struct definition
| `-FieldDecl 0x556389e4a408 <col:18, col:29> col:22 __val 'int [2]'
|-TypedefDecl 0x556389e4a4c0 <col:1, col:34> col:34 __fsid_t 'struct __fsid_t':'__fsid_t'
| `-ElaboratedType 0x556389e4a460 'struct __fsid_t' sugar
|   `-RecordType 0x556389e4a310 '__fsid_t'
|     `-Record 0x556389e4a290 ''
|-TypedefDecl 0x556389e4a548 <line:42:1, col:18> col:18 referenced __clock_t 'long'
| `-BuiltinType 0x556389de2f30 'long'
|-TypedefDecl 0x556389e4a5b8 <line:43:1, col:27> col:27 __rlim_t 'unsigned long'
| `-BuiltinType 0x556389de2fd0 'unsigned long'
|-TypedefDecl 0x556389e4a628 <line:44:1, col:27> col:27 __rlim64_t 'unsigned long'
| `-BuiltinType 0x556389de2fd0 'unsigned long'
|-TypedefDecl 0x556389e4a698 <line:45:1, col:22> col:22 __id_t 'unsigned int'
| `-BuiltinType 0x556389de2fb0 'unsigned int'
|-TypedefDecl 0x556389e4a708 <line:46:1, col:18> col:18 referenced __time_t 'long'
| `-BuiltinType 0x556389de2f30 'long'
|-TypedefDecl 0x556389e4a778 <line:47:1, col:22> col:22 __useconds_t 'unsigned int'
| `-BuiltinType 0x556389de2fb0 'unsigned int'
|-TypedefDecl 0x556389e4a7e8 <line:48:1, col:18> col:18 __suseconds_t 'long'
| `-BuiltinType 0x556389de2f30 'long'
|-TypedefDecl 0x556389e4a858 <line:49:1, col:13> col:13 __daddr_t 'int'
| `-BuiltinType 0x556389de2f10 'int'
|-TypedefDecl 0x556389e4a8c8 <line:50:1, col:13> col:13 __key_t 'int'
| `-BuiltinType 0x556389de2f10 'int'
|-TypedefDecl 0x556389e4a938 <line:51:1, col:13> col:13 referenced __clockid_t 'int'
| `-BuiltinType 0x556389de2f10 'int'
|-TypedefDecl 0x556389e4a9a8 <line:52:1, col:16> col:16 referenced __timer_t 'void *'
| `-PointerType 0x556389de3630 'void *'
|   `-BuiltinType 0x556389de2e70 'void'
|-TypedefDecl 0x556389e4aa18 <line:53:1, col:18> col:18 __blksize_t 'long'
| `-BuiltinType 0x556389de2f30 'long'
|-TypedefDecl 0x556389e4aa88 <line:54:1, col:18> col:18 __blkcnt_t 'long'
| `-BuiltinType 0x556389de2f30 'long'
|-TypedefDecl 0x556389e4aaf8 <line:55:1, col:18> col:18 __blkcnt64_t 'long'
| `-BuiltinType 0x556389de2f30 'long'
|-TypedefDecl 0x556389e4ab68 <line:56:1, col:27> col:27 __fsblkcnt_t 'unsigned long'
| `-BuiltinType 0x556389de2fd0 'unsigned long'
|-TypedefDecl 0x556389e4abd8 <line:57:1, col:27> col:27 __fsblkcnt64_t 'unsigned long'
| `-BuiltinType 0x556389de2fd0 'unsigned long'
|-TypedefDecl 0x556389e4ac48 <line:58:1, col:27> col:27 __fsfilcnt_t 'unsigned long'
| `-BuiltinType 0x556389de2fd0 'unsigned long'
|-TypedefDecl 0x556389e4acb8 <line:59:1, col:27> col:27 __fsfilcnt64_t 'unsigned long'
| `-BuiltinType 0x556389de2fd0 'unsigned long'
|-TypedefDecl 0x556389e4ad28 <line:60:1, col:18> col:18 __fsword_t 'long'
| `-BuiltinType 0x556389de2f30 'long'
|-TypedefDecl 0x556389e4ad98 <line:61:1, col:18> col:18 __ssize_t 'long'
| `-BuiltinType 0x556389de2f30 'long'
|-TypedefDecl 0x556389e4ae08 <line:62:1, col:18> col:18 referenced __syscall_slong_t 'long'
| `-BuiltinType 0x556389de2f30 'long'
|-TypedefDecl 0x556389e4ae78 <line:63:1, col:27> col:27 __syscall_ulong_t 'unsigned long'
| `-BuiltinType 0x556389de2fd0 'unsigned long'
|-TypedefDecl 0x556389e4af08 <line:64:1, col:19> col:19 __loff_t '__off64_t':'long'
| `-TypedefType 0x556389e4aed0 '__off64_t' sugar
|   |-Typedef 0x556389e4a1c8 '__off64_t'
|   `-BuiltinType 0x556389de2f30 'long'
|-TypedefDecl 0x556389e4b000 <line:65:1, col:19> col:19 __qaddr_t '__quad_t *'
| `-PointerType 0x556389e4afc0 '__quad_t *'
|   `-TypedefType 0x556389e4af60 '__quad_t' sugar
|     |-Typedef 0x556389e49d68 '__quad_t'
|     `-BuiltinType 0x556389de2f30 'long'
|-TypedefDecl 0x556389e4b070 <line:66:1, col:15> col:15 __caddr_t 'char *'
| `-PointerType 0x556389de3ab0 'char *'
|   `-BuiltinType 0x556389de2eb0 'char'
|-TypedefDecl 0x556389e4b0e0 <line:67:1, col:18> col:18 __intptr_t 'long'
| `-BuiltinType 0x556389de2f30 'long'
|-TypedefDecl 0x556389e4b150 <line:68:1, col:22> col:22 __socklen_t 'unsigned int'
| `-BuiltinType 0x556389de2fb0 'unsigned int'
|-FunctionDecl 0x556389e4b298 <line:69:1, line:73:1> line:70:1 __bswap_32 'unsigned int (unsigned int)' static inline
| |-ParmVarDecl 0x556389e4b1c0 <col:13, col:26> col:26 used __bsx 'unsigned int'
| `-CompoundStmt 0x556389e4c5e8 <line:71:1, line:73:1>
|   `-ReturnStmt 0x556389e4c5d8 <line:72:3, col:34>
|     `-CallExpr 0x556389e4c598 <col:10, col:34> 'unsigned int'
|       |-ImplicitCastExpr 0x556389e4c580 <col:10> 'unsigned int (*)(unsigned int)' <BuiltinFnToFnPtr>
|       | `-DeclRefExpr 0x556389e4c510 <col:10> '<builtin fn type>' Function 0x556389e4c380 '__builtin_bswap32' 'unsigned int (unsigned int)'
|       `-ImplicitCastExpr 0x556389e4c5c0 <col:29> 'unsigned int' <LValueToRValue>
|         `-DeclRefExpr 0x556389e4c530 <col:29> 'unsigned int' lvalue ParmVar 0x556389e4b1c0 '__bsx' 'unsigned int'
|-FunctionDecl 0x556389e4c380 <col:10> col:10 implicit used __builtin_bswap32 'unsigned int (unsigned int)' extern
| |-ParmVarDecl 0x556389e4c420 <<invalid sloc>> <invalid sloc> 'unsigned int'
| |-NoThrowAttr 0x556389e4c490 <col:10> Implicit
| `-ConstAttr 0x556389e4c4e8 <col:10> Implicit
|-FunctionDecl 0x556389e4c740 <line:74:1, line:78:1> line:75:1 __bswap_64 '__uint64_t (__uint64_t)' static inline
| |-ParmVarDecl 0x556389e4c638 <col:13, col:24> col:24 used __bsx '__uint64_t':'unsigned long'
| `-CompoundStmt 0x556389e4ca58 <line:76:1, line:78:1>
|   `-ReturnStmt 0x556389e4ca48 <line:77:3, col:34>
|     `-CallExpr 0x556389e4ca08 <col:10, col:34> 'unsigned long'
|       |-ImplicitCastExpr 0x556389e4c9f0 <col:10> 'unsigned long (*)(unsigned long)' <BuiltinFnToFnPtr>
|       | `-DeclRefExpr 0x556389e4c978 <col:10> '<builtin fn type>' Function 0x556389e4c7e8 '__builtin_bswap64' 'unsigned long (unsigned long)'
|       `-ImplicitCastExpr 0x556389e4ca30 <col:29> '__uint64_t':'unsigned long' <LValueToRValue>
|         `-DeclRefExpr 0x556389e4c998 <col:29> '__uint64_t':'unsigned long' lvalue ParmVar 0x556389e4c638 '__bsx' '__uint64_t':'unsigned long'
|-FunctionDecl 0x556389e4c7e8 <col:10> col:10 implicit used __builtin_bswap64 'unsigned long (unsigned long)' extern
| |-ParmVarDecl 0x556389e4c888 <<invalid sloc>> <invalid sloc> 'unsigned long'
| |-NoThrowAttr 0x556389e4c8f8 <col:10> Implicit
| `-ConstAttr 0x556389e4c950 <col:10> Implicit
|-TypedefDecl 0x556389e4ca88 <line:79:1, col:27> col:27 referenced size_t 'unsigned long'
| `-BuiltinType 0x556389de2fd0 'unsigned long'
|-TypedefDecl 0x556389e4cb18 <line:81:1, col:18> col:18 referenced time_t '__time_t':'long'
| `-TypedefType 0x556389e4cae0 '__time_t' sugar
|   |-Typedef 0x556389e4a708 '__time_t'
|   `-BuiltinType 0x556389de2f30 'long'
|-RecordDecl 0x556389e4cb70 <line:84:1, line:88:3> line:84:8 struct timespec definition
| |-FieldDecl 0x556389e4cc28 <line:86:5, col:14> col:14 tv_sec '__time_t':'long'
| `-FieldDecl 0x556389e4ccb8 <line:87:5, col:23> col:23 tv_nsec '__syscall_slong_t':'long'
|-TypedefDecl 0x556389e4cd48 <line:89:1, col:17> col:17 referenced pid_t '__pid_t':'int'
| `-TypedefType 0x556389e4cd10 '__pid_t' sugar
|   |-Typedef 0x556389e4a238 '__pid_t'
|   `-BuiltinType 0x556389de2f10 'int'
|-RecordDecl 0x556389e4cda0 <line:90:1, line:93:3> line:90:8 struct sched_param definition
| `-FieldDecl 0x556389e4ce60 <line:92:5, col:9> col:9 __sched_priority 'int'
|-RecordDecl 0x556389e4ceb0 <line:96:1, line:99:3> line:96:8 struct __sched_param definition
| `-FieldDecl 0x556389e4cf70 <line:98:5, col:9> col:9 __sched_priority 'int'
|-TypedefDecl 0x556389e4cfd8 <line:100:1, col:27> col:27 referenced __cpu_mask 'unsigned long'
| `-BuiltinType 0x556389de2fd0 'unsigned long'
|-RecordDecl 0x556389e4d030 <line:101:9, line:104:1> line:101:9 struct definition
| `-FieldDecl 0x556389e4d2c0 <line:103:3, col:53> col:14 __bits '__cpu_mask [64]'
|-TypedefDecl 0x556389e4e3a0 <line:101:1, line:104:3> col:3 referenced cpu_set_t 'struct cpu_set_t':'cpu_set_t'
| `-ElaboratedType 0x556389e4d310 'struct cpu_set_t' sugar
|   `-RecordType 0x556389e4d0b0 'cpu_set_t'
|     `-Record 0x556389e4d030 ''
|-FunctionDecl 0x556389e4e678 <line:106:1, line:107:42> line:106:12 __sched_cpucount 'int (size_t, const cpu_set_t *)' extern
| |-ParmVarDecl 0x556389e4e448 <col:30, col:37> col:37 __setsize 'size_t':'unsigned long'
| |-ParmVarDecl 0x556389e4e550 <col:48, col:65> col:65 __setp 'const cpu_set_t *'
| `-NoThrowAttr 0x556389e4e728 <line:107:19>
|-FunctionDecl 0x556389e4e900 <line:108:1, col:92> col:19 __sched_cpualloc 'cpu_set_t *(size_t)' extern
| |-ParmVarDecl 0x556389e4e790 <col:37, col:44> col:44 __count 'size_t':'unsigned long'
| `-NoThrowAttr 0x556389e4e9a8 <col:69>
|-FunctionDecl 0x556389e4eb20 <line:109:1, col:87> col:13 __sched_cpufree 'void (cpu_set_t *)' extern
| |-ParmVarDecl 0x556389e4ea10 <col:30, col:41> col:41 __set 'cpu_set_t *'
| `-NoThrowAttr 0x556389e4ebc8 <col:64>
|-FunctionDecl 0x556389e4ee88 <line:112:1, line:113:45> line:112:12 sched_setparam 'int (__pid_t, const struct sched_param *)' extern
| |-ParmVarDecl 0x556389e4ec30 <col:28, col:36> col:36 __pid '__pid_t':'int'
| |-ParmVarDecl 0x556389e4ed68 <col:43, col:69> col:69 __param 'const struct sched_param *'
| `-NoThrowAttr 0x556389e4ef38 <line:113:22>
|-FunctionDecl 0x556389e4f1b8 <line:114:1, col:111> col:12 sched_getparam 'int (__pid_t, struct sched_param *)' extern
| |-ParmVarDecl 0x556389e4efa0 <col:28, col:36> col:36 __pid '__pid_t':'int'
| |-ParmVarDecl 0x556389e4f098 <col:43, col:63> col:63 __param 'struct sched_param *'
| `-NoThrowAttr 0x556389e4f268 <col:88>
|-FunctionDecl 0x556389e4f588 <line:115:1, line:116:85> line:115:12 sched_setscheduler 'int (__pid_t, int, const struct sched_param *)' extern
| |-ParmVarDecl 0x556389e4f2d0 <col:32, col:40> col:40 __pid '__pid_t':'int'
| |-ParmVarDecl 0x556389e4f3b0 <col:47, col:51> col:51 __policy 'int'
| |-ParmVarDecl 0x556389e4f440 <line:116:11, col:37> col:37 __param 'const struct sched_param *'
| `-NoThrowAttr 0x556389e4f640 <col:62>
|-FunctionDecl 0x556389e4f7b8 <line:117:1, col:86> col:12 sched_getscheduler 'int (__pid_t)' extern
| |-ParmVarDecl 0x556389e4f6a8 <col:32, col:40> col:40 __pid '__pid_t':'int'
| `-NoThrowAttr 0x556389e4f860 <col:63>
|-FunctionDecl 0x556389e4f988 <line:118:1, col:70> col:12 sched_yield 'int (void)' extern
| `-NoThrowAttr 0x556389e4fa28 <col:47>
|-FunctionDecl 0x556389e4fb30 <line:119:1, col:92> col:12 sched_get_priority_max 'int (int)' extern
| |-ParmVarDecl 0x556389e4fa98 <col:36, col:40> col:40 __algorithm 'int'
| `-NoThrowAttr 0x556389e4fbd8 <col:69>
|-FunctionDecl 0x556389e4fce0 <line:120:1, col:92> col:12 sched_get_priority_min 'int (int)' extern
| |-ParmVarDecl 0x556389e4fc48 <col:36, col:40> col:40 __algorithm 'int'
| `-NoThrowAttr 0x556389e4fd88 <col:69>
|-FunctionDecl 0x556389e50048 <line:121:1, col:111> col:12 sched_rr_get_interval 'int (__pid_t, struct timespec *)' extern
| |-ParmVarDecl 0x556389e4fdf0 <col:35, col:43> col:43 __pid '__pid_t':'int'
| |-ParmVarDecl 0x556389e4ff28 <col:50, col:67> col:67 __t 'struct timespec *'
| `-NoThrowAttr 0x556389e500f8 <col:88>
|-TypedefDecl 0x556389e50188 <line:125:1, col:19> col:19 referenced clock_t '__clock_t':'long'
| `-TypedefType 0x556389e50150 '__clock_t' sugar
|   |-Typedef 0x556389e4a548 '__clock_t'
|   `-BuiltinType 0x556389de2f30 'long'
|-TypedefDecl 0x556389e50218 <line:128:1, col:21> col:21 referenced clockid_t '__clockid_t':'int'
| `-TypedefType 0x556389e501e0 '__clockid_t' sugar
|   |-Typedef 0x556389e4a938 '__clockid_t'
|   `-BuiltinType 0x556389de2f10 'int'
|-TypedefDecl 0x556389e502a8 <line:129:1, col:19> col:19 referenced timer_t '__timer_t':'void *'
| `-TypedefType 0x556389e50270 '__timer_t' sugar
|   |-Typedef 0x556389e4a9a8 '__timer_t'
|   `-PointerType 0x556389de3630 'void *'
|     `-BuiltinType 0x556389de2e70 'void'
|-RecordDecl 0x556389e50300 <line:131:1, line:144:1> line:131:8 struct tm definition
| |-FieldDecl 0x556389e503d8 <line:133:3, col:7> col:7 tm_sec 'int'
| |-FieldDecl 0x556389e50440 <line:134:3, col:7> col:7 tm_min 'int'
| |-FieldDecl 0x556389e504a8 <line:135:3, col:7> col:7 tm_hour 'int'
| |-FieldDecl 0x556389e50510 <line:136:3, col:7> col:7 tm_mday 'int'
| |-FieldDecl 0x556389e50578 <line:137:3, col:7> col:7 tm_mon 'int'
| |-FieldDecl 0x556389e505e0 <line:138:3, col:7> col:7 tm_year 'int'
| |-FieldDecl 0x556389e50648 <line:139:3, col:7> col:7 tm_wday 'int'
| |-FieldDecl 0x556389e506b0 <line:140:3, col:7> col:7 tm_yday 'int'
| |-FieldDecl 0x556389e50718 <line:141:3, col:7> col:7 tm_isdst 'int'
| |-FieldDecl 0x556389e50780 <line:142:3, col:12> col:12 tm_gmtoff 'long'
| `-FieldDecl 0x556389e507e8 <line:143:3, col:15> col:15 tm_zone 'const char *'
|-RecordDecl 0x556389e50838 <line:147:1, line:151:3> line:147:8 struct itimerspec definition
| |-FieldDecl 0x556389e50908 <line:149:5, col:21> col:21 it_interval 'struct timespec':'struct timespec'
| `-FieldDecl 0x556389e50978 <line:150:5, col:21> col:21 it_value 'struct timespec':'struct timespec'
|-RecordDecl 0x556389e50a20 <line:152:1, col:8> col:8 struct sigevent
|-FunctionDecl 0x556389e50bf0 <line:154:1, col:68> col:16 clock 'clock_t (void)' extern
| `-NoThrowAttr 0x556389e50c90 <col:45>
|-FunctionDecl 0x556389e50e70 <line:155:1, col:77> col:15 time 'time_t (time_t *)' extern
| |-ParmVarDecl 0x556389e50d60 <col:21, col:29> col:29 __timer 'time_t *'
| `-NoThrowAttr 0x556389e50f18 <col:54>
|-FunctionDecl 0x556389e51118 <line:156:1, line:157:73> line:156:15 difftime 'double (time_t, time_t)' extern
| |-ParmVarDecl 0x556389e50f80 <col:25, col:32> col:32 __time1 'time_t':'long'
| |-ParmVarDecl 0x556389e50ff8 <col:41, col:48> col:48 __time0 'time_t':'long'
| |-NoThrowAttr 0x556389e511c8 <line:157:22>
| `-ConstAttr 0x556389e51220 <col:63>
|-FunctionDecl 0x556389e52050 <line:158:1, col:79> col:15 mktime 'time_t (struct tm *)' extern
| |-ParmVarDecl 0x556389e51318 <col:23, col:34> col:34 __tp 'struct tm *'
| `-NoThrowAttr 0x556389e520f8 <col:56>
|-FunctionDecl 0x556389e524a0 <line:159:1, line:161:77> line:159:15 strftime 'size_t (char *restrict, size_t, const char *restrict, const struct tm *restrict)' extern
| |-ParmVarDecl 0x556389e52168 <col:25, col:42> col:42 __s 'char *restrict'
| |-ParmVarDecl 0x556389e521e0 <col:47, col:54> col:54 __maxsize 'size_t':'unsigned long'
| |-ParmVarDecl 0x556389e52260 <line:160:4, col:27> col:27 __format 'const char *restrict'
| |-ParmVarDecl 0x556389e52358 <line:161:4, col:32> col:32 __tp 'const struct tm *restrict'
| `-NoThrowAttr 0x556389e52560 <col:54>
|-RecordDecl 0x556389e525b8 <line:163:9, line:170:1> line:163:16 struct __locale_struct definition
| |-RecordDecl 0x556389e52668 parent 0x556389de2e18 <line:165:3, col:10> col:10 struct __locale_data
| |-FieldDecl 0x556389e528c8 <col:3, col:37> col:25 __locales 'struct __locale_data *[13]'
| |-FieldDecl 0x556389e52968 <line:166:3, col:29> col:29 __ctype_b 'const unsigned short *'
| |-FieldDecl 0x556389e529d0 <line:167:3, col:14> col:14 __ctype_tolower 'const int *'
| |-FieldDecl 0x556389e52a38 <line:168:3, col:14> col:14 __ctype_toupper 'const int *'
| `-FieldDecl 0x556389e52b28 <line:169:3, col:25> col:15 __names 'const char *[13]'
|-TypedefDecl 0x556389e52c48 <line:163:1, line:170:4> col:4 referenced __locale_t 'struct __locale_struct *'
| `-PointerType 0x556389e52bf0 'struct __locale_struct *'
|   `-ElaboratedType 0x556389e52b80 'struct __locale_struct' sugar
|     `-RecordType 0x556389e52640 'struct __locale_struct'
|       `-Record 0x556389e525b8 '__locale_struct'
|-TypedefDecl 0x556389e52cf8 <line:171:1, col:20> col:20 locale_t '__locale_t':'struct __locale_struct *'
| `-TypedefType 0x556389e52cc0 '__locale_t' sugar
|   |-Typedef 0x556389e52c48 '__locale_t'
|   `-PointerType 0x556389e52bf0 'struct __locale_struct *'
|     `-ElaboratedType 0x556389e52b80 'struct __locale_struct' sugar
|       `-RecordType 0x556389e52640 'struct __locale_struct'
|         `-Record 0x556389e525b8 '__locale_struct'
|-FunctionDecl 0x556389e54110 <line:172:1, line:175:63> line:172:15 strftime_l 'size_t (char *restrict, size_t, const char *restrict, const struct tm *restrict, __locale_t)' extern
| |-ParmVarDecl 0x556389e52d68 <col:27, col:44> col:44 __s 'char *restrict'
| |-ParmVarDecl 0x556389e52de0 <col:49, col:56> col:56 __maxsize 'size_t':'unsigned long'
| |-ParmVarDecl 0x556389e52e60 <line:173:6, col:29> col:29 __format 'const char *restrict'
| |-ParmVarDecl 0x556389e52ef0 <line:174:6, col:34> col:34 __tp 'const struct tm *restrict'
| |-ParmVarDecl 0x556389e52f68 <line:175:6, col:17> col:17 __loc '__locale_t':'struct __locale_struct *'
| `-NoThrowAttr 0x556389e541d8 <col:40>
|-FunctionDecl 0x556389e543c8 <line:177:1, col:89> col:19 gmtime 'struct tm *(const time_t *)' extern
| |-ParmVarDecl 0x556389e542a0 <col:27, col:41> col:41 __timer 'const time_t *'
| `-NoThrowAttr 0x556389e54470 <col:66>
|-FunctionDecl 0x556389e54580 <line:178:1, col:92> col:19 localtime 'struct tm *(const time_t *)' extern
| |-ParmVarDecl 0x556389e544d8 <col:30, col:44> col:44 __timer 'const time_t *'
| `-NoThrowAttr 0x556389e54628 <col:69>
|-FunctionDecl 0x556389e54858 <line:180:1, line:181:75> line:180:19 gmtime_r 'struct tm *(const time_t *restrict, struct tm *restrict)' extern
| |-ParmVarDecl 0x556389e54690 <col:29, col:54> col:54 __timer 'const time_t *restrict'
| |-ParmVarDecl 0x556389e54720 <line:181:8, col:30> col:30 __tp 'struct tm *restrict'
| `-NoThrowAttr 0x556389e54908 <col:52>
|-FunctionDecl 0x556389e54ab0 <line:182:1, line:183:78> line:182:19 localtime_r 'struct tm *(const time_t *restrict, struct tm *restrict)' extern
| |-ParmVarDecl 0x556389e54970 <col:32, col:57> col:57 __timer 'const time_t *restrict'
| |-ParmVarDecl 0x556389e54a00 <line:183:11, col:33> col:33 __tp 'struct tm *restrict'
| `-NoThrowAttr 0x556389e54b60 <col:55>
|-FunctionDecl 0x556389e54cf8 <line:185:1, col:85> col:14 asctime 'char *(const struct tm *)' extern
| |-ParmVarDecl 0x556389e54be0 <col:23, col:40> col:40 __tp 'const struct tm *'
| `-NoThrowAttr 0x556389e54da0 <col:62>
|-FunctionDecl 0x556389e54f18 <line:186:1, col:83> col:14 ctime 'char *(const time_t *)' extern
| |-ParmVarDecl 0x556389e54e08 <col:21, col:35> col:35 __timer 'const time_t *'
| `-NoThrowAttr 0x556389e54fc0 <col:60>
|-FunctionDecl 0x556389e552b8 <line:188:1, line:189:67> line:188:14 asctime_r 'char *(const struct tm *restrict, char *restrict)' extern
| |-ParmVarDecl 0x556389e55118 <col:25, col:53> col:53 __tp 'const struct tm *restrict'
| |-ParmVarDecl 0x556389e55198 <line:189:4, col:21> col:21 __buf 'char *restrict'
| `-NoThrowAttr 0x556389e55368 <col:44>
|-FunctionDecl 0x556389e55578 <line:190:1, line:191:72> line:190:14 ctime_r 'char *(const time_t *restrict, char *restrict)' extern
| |-ParmVarDecl 0x556389e553d0 <col:23, col:48> col:48 __timer 'const time_t *restrict'
| |-ParmVarDecl 0x556389e55450 <line:191:9, col:26> col:26 __buf 'char *restrict'
| `-NoThrowAttr 0x556389e55628 <col:49>
|-VarDecl 0x556389e55728 <line:192:1, col:24> col:14 __tzname 'char *[2]' extern
|-VarDecl 0x556389e557a8 <line:193:1, col:12> col:12 __daylight 'int' extern
|-VarDecl 0x556389e55828 <line:194:1, col:17> col:17 __timezone 'long' extern
|-VarDecl 0x556389e558f0 <line:195:1, col:22> col:14 tzname 'char *[2]' extern
|-FunctionDecl 0x556389e55a20 <line:196:1, col:65> col:13 tzset 'void (void)' extern
| `-NoThrowAttr 0x556389e55ac0 <col:42>
|-VarDecl 0x556389e55b30 <line:197:1, col:12> col:12 daylight 'int' extern
|-VarDecl 0x556389e55bb0 <line:198:1, col:17> col:17 timezone 'long' extern
|-FunctionDecl 0x556389e55d38 <line:199:1, col:80> col:12 stime 'int (const time_t *)' extern
| |-ParmVarDecl 0x556389e55c28 <col:19, col:33> col:33 __when 'const time_t *'
| `-NoThrowAttr 0x556389e55de0 <col:57>
|-FunctionDecl 0x556389e55ef0 <line:200:1, col:79> col:15 timegm 'time_t (struct tm *)' extern
| |-ParmVarDecl 0x556389e55e60 <col:23, col:34> col:34 __tp 'struct tm *'
| `-NoThrowAttr 0x556389e55f98 <col:56>
|-FunctionDecl 0x556389e560d0 <line:201:1, col:82> col:15 timelocal 'time_t (struct tm *)' extern
| |-ParmVarDecl 0x556389e56018 <col:26, col:37> col:37 __tp 'struct tm *'
| `-NoThrowAttr 0x556389e56178 <col:59>
|-FunctionDecl 0x556389e56280 <line:202:1, col:99> col:12 dysize 'int (int)' extern
| |-ParmVarDecl 0x556389e561e8 <col:20, col:24> col:24 __year 'int'
| |-NoThrowAttr 0x556389e56328 <col:48>
| `-ConstAttr 0x556389e56380 <col:89>
|-FunctionDecl 0x556389e565e8 <line:203:1, line:204:37> line:203:12 nanosleep 'int (const struct timespec *, struct timespec *)' extern
| |-ParmVarDecl 0x556389e56438 <col:23, col:46> col:46 __requested_time 'const struct timespec *'
| `-ParmVarDecl 0x556389e564c8 <line:204:9, col:26> col:26 __remaining 'struct timespec *'
|-FunctionDecl 0x556389e56848 <line:205:1, col:111> col:12 clock_getres 'int (clockid_t, struct timespec *)' extern
| |-ParmVarDecl 0x556389e566d8 <col:26, col:36> col:36 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x556389e56768 <col:48, col:65> col:65 __res 'struct timespec *'
| `-NoThrowAttr 0x556389e568f8 <col:88>
|-FunctionDecl 0x556389e56a90 <line:206:1, col:111> col:12 clock_gettime 'int (clockid_t, struct timespec *)' extern
| |-ParmVarDecl 0x556389e56960 <col:27, col:37> col:37 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x556389e569f0 <col:49, col:66> col:66 __tp 'struct timespec *'
| `-NoThrowAttr 0x556389e56b40 <col:88>
|-FunctionDecl 0x556389e56d58 <line:207:1, line:208:45> line:207:12 clock_settime 'int (clockid_t, const struct timespec *)' extern
| |-ParmVarDecl 0x556389e56ba8 <col:27, col:37> col:37 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x556389e56c38 <col:49, col:72> col:72 __tp 'const struct timespec *'
| `-NoThrowAttr 0x556389e56e08 <line:208:22>
|-FunctionDecl 0x556389e57178 <line:209:1, line:211:30> line:209:12 clock_nanosleep 'int (clockid_t, int, const struct timespec *, struct timespec *)' extern
| |-ParmVarDecl 0x556389e56e70 <col:29, col:39> col:39 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x556389e56ef0 <col:51, col:55> col:55 __flags 'int'
| |-ParmVarDecl 0x556389e56f80 <line:210:8, col:31> col:31 __req 'const struct timespec *'
| `-ParmVarDecl 0x556389e57010 <line:211:8, col:25> col:25 __rem 'struct timespec *'
|-FunctionDecl 0x556389e57478 <line:212:1, col:108> col:12 clock_getcpuclockid 'int (pid_t, clockid_t *)' extern
| |-ParmVarDecl 0x556389e57278 <col:33, col:39> col:39 __pid 'pid_t':'int'
| |-ParmVarDecl 0x556389e57350 <col:46, col:57> col:57 __clock_id 'clockid_t *'
| `-NoThrowAttr 0x556389e57528 <col:85>
|-FunctionDecl 0x556389e57918 <line:213:1, line:215:75> line:213:12 timer_create 'int (clockid_t, struct sigevent *restrict, timer_t *restrict)' extern
| |-ParmVarDecl 0x556389e57590 <col:26, col:36> col:36 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x556389e576c8 <line:214:5, col:33> col:33 __evp 'struct sigevent *restrict'
| |-ParmVarDecl 0x556389e577d0 <line:215:5, col:25> col:25 __timerid 'timer_t *restrict'
| `-NoThrowAttr 0x556389e579d0 <col:52>
|-FunctionDecl 0x556389e57b48 <line:216:1, col:84> col:12 timer_delete 'int (timer_t)' extern
| |-ParmVarDecl 0x556389e57a38 <col:26, col:34> col:34 __timerid 'timer_t':'void *'
| `-NoThrowAttr 0x556389e57bf0 <col:61>
|-FunctionDecl 0x556389e580f0 <line:217:1, line:219:85> line:217:12 timer_settime 'int (timer_t, int, const struct itimerspec *restrict, struct itimerspec *restrict)' extern
| |-ParmVarDecl 0x556389e57c58 <col:27, col:35> col:35 __timerid 'timer_t':'void *'
| |-ParmVarDecl 0x556389e57cd8 <col:46, col:50> col:50 __flags 'int'
| |-ParmVarDecl 0x556389e57e08 <line:218:6, col:42> col:42 __value 'const struct itimerspec *restrict'
| |-ParmVarDecl 0x556389e57ef8 <line:219:6, col:36> col:36 __ovalue 'struct itimerspec *restrict'
| `-NoThrowAttr 0x556389e581b0 <col:62>
|-FunctionDecl 0x556389e583c8 <line:220:1, line:221:45> line:220:12 timer_gettime 'int (timer_t, struct itimerspec *)' extern
| |-ParmVarDecl 0x556389e58218 <col:27, col:35> col:35 __timerid 'timer_t':'void *'
| |-ParmVarDecl 0x556389e582a8 <col:46, col:65> col:65 __value 'struct itimerspec *'
| `-NoThrowAttr 0x556389e58478 <line:221:22>
|-FunctionDecl 0x556389e58578 <line:222:1, col:88> col:12 timer_getoverrun 'int (timer_t)' extern
| |-ParmVarDecl 0x556389e584e0 <col:30, col:38> col:38 __timerid 'timer_t':'void *'
| `-NoThrowAttr 0x556389e58620 <col:65>
|-TypedefDecl 0x556389e58690 <line:224:1, col:27> col:27 referenced pthread_t 'unsigned long'
| `-BuiltinType 0x556389de2fd0 'unsigned long'
|-RecordDecl 0x556389e586e8 <line:225:1, line:229:1> line:225:7 union pthread_attr_t definition
| |-FieldDecl 0x556389e58830 <line:227:3, col:17> col:8 __size 'char [56]'
| `-FieldDecl 0x556389e58898 <line:228:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x556389e58948 <line:230:1, col:30> col:30 referenced pthread_attr_t 'union pthread_attr_t':'union pthread_attr_t'
| `-ElaboratedType 0x556389e588f0 'union pthread_attr_t' sugar
|   `-RecordType 0x556389e58770 'union pthread_attr_t'
|     `-Record 0x556389e586e8 'pthread_attr_t'
|-RecordDecl 0x556389e589a0 <line:231:9, line:235:1> line:231:16 struct __pthread_internal_list definition
| |-FieldDecl 0x556389e58b18 <line:233:3, col:35> col:35 __prev 'struct __pthread_internal_list *'
| `-FieldDecl 0x556389e58b90 <line:234:3, col:35> col:35 __next 'struct __pthread_internal_list *'
|-TypedefDecl 0x556389e58c40 <line:231:1, line:235:3> col:3 referenced __pthread_list_t 'struct __pthread_internal_list':'struct __pthread_internal_list'
| `-ElaboratedType 0x556389e58be0 'struct __pthread_internal_list' sugar
|   `-RecordType 0x556389e58a20 'struct __pthread_internal_list'
|     `-Record 0x556389e589a0 '__pthread_internal_list'
|-RecordDecl 0x556389e58cb0 <line:236:9, line:250:1> line:236:9 union definition
| |-RecordDecl 0x556389e58d58 parent 0x556389de2e18 <line:238:3, line:247:3> line:238:10 struct __pthread_mutex_s definition
| | |-FieldDecl 0x556389e58e30 <line:240:5, col:9> col:9 __lock 'int'
| | |-FieldDecl 0x556389e58e98 <line:241:5, col:18> col:18 __count 'unsigned int'
| | |-FieldDecl 0x556389e58f00 <line:242:5, col:9> col:9 __owner 'int'
| | |-FieldDecl 0x556389e58f68 <line:243:5, col:18> col:18 __nusers 'unsigned int'
| | |-FieldDecl 0x556389e58fd0 <line:244:5, col:9> col:9 __kind 'int'
| | |-FieldDecl 0x556389e59038 <line:245:5, col:9> col:9 __spins 'int'
| | `-FieldDecl 0x556389e5d110 <line:246:5, col:22> col:22 __list '__pthread_list_t':'struct __pthread_internal_list'
| |-FieldDecl 0x556389e5d1c0 <line:238:3, line:247:5> col:5 __data 'struct __pthread_mutex_s':'struct __pthread_mutex_s'
| |-FieldDecl 0x556389e5d2b0 <line:248:3, col:17> col:8 __size 'char [40]'
| `-FieldDecl 0x556389e5d318 <line:249:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x556389e5d4a0 <line:236:1, line:250:3> col:3 referenced pthread_mutex_t 'union pthread_mutex_t':'pthread_mutex_t'
| `-ElaboratedType 0x556389e5d440 'union pthread_mutex_t' sugar
|   `-RecordType 0x556389e58d30 'pthread_mutex_t'
|     `-Record 0x556389e58cb0 ''
|-RecordDecl 0x556389e5d510 <line:251:9, line:255:1> line:251:9 union definition
| |-FieldDecl 0x556389e5d650 <line:253:3, col:16> col:8 __size 'char [4]'
| `-FieldDecl 0x556389e5d6b8 <line:254:3, col:7> col:7 __align 'int'
|-TypedefDecl 0x556389e5d770 <line:251:1, line:255:3> col:3 referenced pthread_mutexattr_t 'union pthread_mutexattr_t':'pthread_mutexattr_t'
| `-ElaboratedType 0x556389e5d710 'union pthread_mutexattr_t' sugar
|   `-RecordType 0x556389e5d590 'pthread_mutexattr_t'
|     `-Record 0x556389e5d510 ''
|-RecordDecl 0x556389e5d7e0 <line:256:9, line:271:1> line:256:9 union definition
| |-RecordDecl 0x556389e5d888 <line:258:3, line:268:3> line:258:3 struct definition
| | |-FieldDecl 0x556389e5d950 <line:260:5, col:9> col:9 __lock 'int'
| | |-FieldDecl 0x556389e5d9b8 <line:261:5, col:18> col:18 __futex 'unsigned int'
| | |-FieldDecl 0x556389e5da20 <line:262:19, col:42> col:42 __total_seq 'unsigned long long'
| | |-FieldDecl 0x556389e5da88 <line:263:19, col:42> col:42 __wakeup_seq 'unsigned long long'
| | |-FieldDecl 0x556389e5daf0 <line:264:19, col:42> col:42 __woken_seq 'unsigned long long'
| | |-FieldDecl 0x556389e5db58 <line:265:5, col:11> col:11 __mutex 'void *'
| | |-FieldDecl 0x556389e5dbc0 <line:266:5, col:18> col:18 __nwaiters 'unsigned int'
| | `-FieldDecl 0x556389e5dc28 <line:267:5, col:18> col:18 __broadcast_seq 'unsigned int'
| |-FieldDecl 0x556389e5dce0 <line:258:3, line:268:5> col:5 __data 'struct (anonymous struct at ./split_6/mix049_power.oepc_false-unreach-call.i:258:3)':'struct pthread_cond_t::(anonymous at ./split_6/mix049_power.oepc_false-unreach-call.i:258:3)'
| |-FieldDecl 0x556389e5ddd0 <line:269:3, col:17> col:8 __size 'char [48]'
| `-FieldDecl 0x556389e5de38 <line:270:17, col:31> col:31 __align 'long long'
|-TypedefDecl 0x556389e5df70 <line:256:1, line:271:3> col:3 referenced pthread_cond_t 'union pthread_cond_t':'pthread_cond_t'
| `-ElaboratedType 0x556389e5df10 'union pthread_cond_t' sugar
|   `-RecordType 0x556389e5d860 'pthread_cond_t'
|     `-Record 0x556389e5d7e0 ''
|-RecordDecl 0x556389e5dfe0 <line:272:9, line:276:1> line:272:9 union definition
| |-FieldDecl 0x556389e5f130 <line:274:3, col:16> col:8 __size 'char [4]'
| `-FieldDecl 0x556389e5f198 <line:275:3, col:7> col:7 __align 'int'
|-TypedefDecl 0x556389e5f250 <line:272:1, line:276:3> col:3 referenced pthread_condattr_t 'union pthread_condattr_t':'pthread_condattr_t'
| `-ElaboratedType 0x556389e5f1f0 'union pthread_condattr_t' sugar
|   `-RecordType 0x556389e5e060 'pthread_condattr_t'
|     `-Record 0x556389e5dfe0 ''
|-TypedefDecl 0x556389e5f2d8 <line:277:1, col:22> col:22 referenced pthread_key_t 'unsigned int'
| `-BuiltinType 0x556389de2fb0 'unsigned int'
|-TypedefDecl 0x556389e5f348 <line:278:1, col:13> col:13 referenced pthread_once_t 'int'
| `-BuiltinType 0x556389de2f10 'int'
|-RecordDecl 0x556389e5f3a0 <line:279:9, line:297:1> line:279:9 union definition
| |-RecordDecl 0x556389e5f448 <line:281:3, line:294:3> line:281:3 struct definition
| | |-FieldDecl 0x556389e5f510 <line:283:5, col:9> col:9 __lock 'int'
| | |-FieldDecl 0x556389e5f578 <line:284:5, col:18> col:18 __nr_readers 'unsigned int'
| | |-FieldDecl 0x556389e5f5e0 <line:285:5, col:18> col:18 __readers_wakeup 'unsigned int'
| | |-FieldDecl 0x556389e5f648 <line:286:5, col:18> col:18 __writer_wakeup 'unsigned int'
| | |-FieldDecl 0x556389e5f6b0 <line:287:5, col:18> col:18 __nr_readers_queued 'unsigned int'
| | |-FieldDecl 0x556389e5f718 <line:288:5, col:18> col:18 __nr_writers_queued 'unsigned int'
| | |-FieldDecl 0x556389e5f780 <line:289:5, col:9> col:9 __writer 'int'
| | |-FieldDecl 0x556389e5f7e8 <line:290:5, col:9> col:9 __shared 'int'
| | |-FieldDecl 0x556389e5f850 <line:291:5, col:23> col:23 __pad1 'unsigned long'
| | |-FieldDecl 0x556389e5f8b8 <line:292:5, col:23> col:23 __pad2 'unsigned long'
| | `-FieldDecl 0x556389e5f920 <line:293:5, col:18> col:18 __flags 'unsigned int'
| |-FieldDecl 0x556389e5f9d0 <line:281:3, line:294:5> col:5 __data 'struct (anonymous struct at ./split_6/mix049_power.oepc_false-unreach-call.i:281:3)':'struct pthread_rwlock_t::(anonymous at ./split_6/mix049_power.oepc_false-unreach-call.i:281:3)'
| |-FieldDecl 0x556389e5fa78 <line:295:3, col:17> col:8 __size 'char [56]'
| `-FieldDecl 0x556389e5fae0 <line:296:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x556389e5fc30 <line:279:1, line:297:3> col:3 referenced pthread_rwlock_t 'union pthread_rwlock_t':'pthread_rwlock_t'
| `-ElaboratedType 0x556389e5fbd0 'union pthread_rwlock_t' sugar
|   `-RecordType 0x556389e5f420 'pthread_rwlock_t'
|     `-Record 0x556389e5f3a0 ''
|-RecordDecl 0x556389e5fca0 <line:298:9, line:302:1> line:298:9 union definition
| |-FieldDecl 0x556389e5fde0 <line:300:3, col:16> col:8 __size 'char [8]'
| `-FieldDecl 0x556389e5fe48 <line:301:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x556389e5ff00 <line:298:1, line:302:3> col:3 referenced pthread_rwlockattr_t 'union pthread_rwlockattr_t':'pthread_rwlockattr_t'
| `-ElaboratedType 0x556389e5fea0 'union pthread_rwlockattr_t' sugar
|   `-RecordType 0x556389e5fd20 'pthread_rwlockattr_t'
|     `-Record 0x556389e5fca0 ''
|-TypedefDecl 0x556389e5ff88 <line:303:1, col:22> col:22 referenced pthread_spinlock_t 'volatile int'
| `-QualType 0x556389de2f14 'volatile int' volatile
|   `-BuiltinType 0x556389de2f10 'int'
|-RecordDecl 0x556389e5ffe0 <line:304:9, line:308:1> line:304:9 union definition
| |-FieldDecl 0x556389e61140 <line:306:3, col:17> col:8 __size 'char [32]'
| `-FieldDecl 0x556389e611a8 <line:307:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x556389e61260 <line:304:1, line:308:3> col:3 referenced pthread_barrier_t 'union pthread_barrier_t':'pthread_barrier_t'
| `-ElaboratedType 0x556389e61200 'union pthread_barrier_t' sugar
|   `-RecordType 0x556389e60060 'pthread_barrier_t'
|     `-Record 0x556389e5ffe0 ''
|-RecordDecl 0x556389e612d0 <line:309:9, line:313:1> line:309:9 union definition
| |-FieldDecl 0x556389e613d0 <line:311:3, col:16> col:8 __size 'char [4]'
| `-FieldDecl 0x556389e61438 <line:312:3, col:7> col:7 __align 'int'
|-TypedefDecl 0x556389e614f0 <line:309:1, line:313:3> col:3 referenced pthread_barrierattr_t 'union pthread_barrierattr_t':'pthread_barrierattr_t'
| `-ElaboratedType 0x556389e61490 'union pthread_barrierattr_t' sugar
|   `-RecordType 0x556389e61350 'pthread_barrierattr_t'
|     `-Record 0x556389e612d0 ''
|-TypedefDecl 0x556389e61608 <line:314:1, col:29> col:18 referenced __jmp_buf 'long [8]'
| `-ConstantArrayType 0x556389e615a0 'long [8]' 8 
|   `-BuiltinType 0x556389de2f30 'long'
|-EnumDecl 0x556389e61660 <line:315:1, line:319:1> line:315:1
| |-EnumConstantDecl 0x556389e61728 <line:317:3> col:3 PTHREAD_CREATE_JOINABLE 'int'
| `-EnumConstantDecl 0x556389e61778 <line:318:3> col:3 PTHREAD_CREATE_DETACHED 'int'
|-EnumDecl 0x556389e617c8 <line:320:1, line:331:1> line:320:1
| |-EnumConstantDecl 0x556389e61898 <line:322:3> col:3 referenced PTHREAD_MUTEX_TIMED_NP 'int'
| |-EnumConstantDecl 0x556389e618e8 <line:323:3> col:3 referenced PTHREAD_MUTEX_RECURSIVE_NP 'int'
| |-EnumConstantDecl 0x556389e61938 <line:324:3> col:3 referenced PTHREAD_MUTEX_ERRORCHECK_NP 'int'
| |-EnumConstantDecl 0x556389e61988 <line:325:3> col:3 PTHREAD_MUTEX_ADAPTIVE_NP 'int'
| |-EnumConstantDecl 0x556389e61a10 <line:327:3, col:26> col:3 referenced PTHREAD_MUTEX_NORMAL 'int'
| | `-ConstantExpr 0x556389e619f8 <col:26> 'int'
| |   `-DeclRefExpr 0x556389e619d8 <col:26> 'int' EnumConstant 0x556389e61898 'PTHREAD_MUTEX_TIMED_NP' 'int'
| |-EnumConstantDecl 0x556389e61a98 <line:328:3, col:29> col:3 PTHREAD_MUTEX_RECURSIVE 'int'
| | `-ConstantExpr 0x556389e61a80 <col:29> 'int'
| |   `-DeclRefExpr 0x556389e61a60 <col:29> 'int' EnumConstant 0x556389e618e8 'PTHREAD_MUTEX_RECURSIVE_NP' 'int'
| |-EnumConstantDecl 0x556389e61b20 <line:329:3, col:30> col:3 PTHREAD_MUTEX_ERRORCHECK 'int'
| | `-ConstantExpr 0x556389e61b08 <col:30> 'int'
| |   `-DeclRefExpr 0x556389e61ae8 <col:30> 'int' EnumConstant 0x556389e61938 'PTHREAD_MUTEX_ERRORCHECK_NP' 'int'
| `-EnumConstantDecl 0x556389e61ba8 <line:330:3, col:27> col:3 PTHREAD_MUTEX_DEFAULT 'int'
|   `-ConstantExpr 0x556389e61b90 <col:27> 'int'
|     `-DeclRefExpr 0x556389e61b70 <col:27> 'int' EnumConstant 0x556389e61a10 'PTHREAD_MUTEX_NORMAL' 'int'
|-EnumDecl 0x556389e61bf8 <line:332:1, line:338:1> line:332:1
| |-EnumConstantDecl 0x556389e61cc8 <line:334:3> col:3 referenced PTHREAD_MUTEX_STALLED 'int'
| |-EnumConstantDecl 0x556389e61d50 <line:335:3, col:30> col:3 PTHREAD_MUTEX_STALLED_NP 'int'
| | `-ConstantExpr 0x556389e61d38 <col:30> 'int'
| |   `-DeclRefExpr 0x556389e61d18 <col:30> 'int' EnumConstant 0x556389e61cc8 'PTHREAD_MUTEX_STALLED' 'int'
| |-EnumConstantDecl 0x556389e61da0 <line:336:3> col:3 referenced PTHREAD_MUTEX_ROBUST 'int'
| `-EnumConstantDecl 0x556389e61e28 <line:337:3, col:29> col:3 PTHREAD_MUTEX_ROBUST_NP 'int'
|   `-ConstantExpr 0x556389e61e10 <col:29> 'int'
|     `-DeclRefExpr 0x556389e61df0 <col:29> 'int' EnumConstant 0x556389e61da0 'PTHREAD_MUTEX_ROBUST' 'int'
|-EnumDecl 0x556389e61e78 <line:339:1, line:344:1> line:339:1
| |-EnumConstantDecl 0x556389e61f48 <line:341:3> col:3 PTHREAD_PRIO_NONE 'int'
| |-EnumConstantDecl 0x556389e61f98 <line:342:3> col:3 PTHREAD_PRIO_INHERIT 'int'
| `-EnumConstantDecl 0x556389e61fe8 <line:343:3> col:3 PTHREAD_PRIO_PROTECT 'int'
|-EnumDecl 0x556389e62038 <line:345:1, line:351:1> line:345:1
| |-EnumConstantDecl 0x556389e62150 <line:347:3> col:3 referenced PTHREAD_RWLOCK_PREFER_READER_NP 'int'
| |-EnumConstantDecl 0x556389e621a0 <line:348:3> col:3 PTHREAD_RWLOCK_PREFER_WRITER_NP 'int'
| |-EnumConstantDecl 0x556389e621f0 <line:349:3> col:3 PTHREAD_RWLOCK_PREFER_WRITER_NONRECURSIVE_NP 'int'
| `-EnumConstantDecl 0x556389e62278 <line:350:3, col:31> col:3 PTHREAD_RWLOCK_DEFAULT_NP 'int'
|   `-ConstantExpr 0x556389e62260 <col:31> 'int'
|     `-DeclRefExpr 0x556389e62240 <col:31> 'int' EnumConstant 0x556389e62150 'PTHREAD_RWLOCK_PREFER_READER_NP' 'int'
|-EnumDecl 0x556389e622c8 <line:352:1, line:356:1> line:352:1
| |-EnumConstantDecl 0x556389e62398 <line:354:3> col:3 PTHREAD_INHERIT_SCHED 'int'
| `-EnumConstantDecl 0x556389e623e8 <line:355:3> col:3 PTHREAD_EXPLICIT_SCHED 'int'
|-EnumDecl 0x556389e62438 <line:357:1, line:361:1> line:357:1
| |-EnumConstantDecl 0x556389e62508 <line:359:3> col:3 PTHREAD_SCOPE_SYSTEM 'int'
| `-EnumConstantDecl 0x556389e62558 <line:360:3> col:3 PTHREAD_SCOPE_PROCESS 'int'
|-EnumDecl 0x556389e625a8 <line:362:1, line:366:1> line:362:1
| |-EnumConstantDecl 0x556389e62678 <line:364:3> col:3 PTHREAD_PROCESS_PRIVATE 'int'
| `-EnumConstantDecl 0x556389e626c8 <line:365:3> col:3 PTHREAD_PROCESS_SHARED 'int'
|-RecordDecl 0x556389e62718 <line:367:1, line:373:1> line:367:8 struct _pthread_cleanup_buffer definition
| |-FieldDecl 0x556389e62958 <line:369:3, col:28> col:10 __routine 'void (*)(void *)'
| |-FieldDecl 0x556389e629c0 <line:370:3, col:9> col:9 __arg 'void *'
| |-FieldDecl 0x556389e62a28 <line:371:3, col:7> col:7 __canceltype 'int'
| `-FieldDecl 0x556389e62b48 <line:372:3, col:35> col:35 __prev 'struct _pthread_cleanup_buffer *'
|-EnumDecl 0x556389e62b98 <line:374:1, line:378:1> line:374:1
| |-EnumConstantDecl 0x556389e62c68 <line:376:3> col:3 PTHREAD_CANCEL_ENABLE 'int'
| `-EnumConstantDecl 0x556389e62cb8 <line:377:3> col:3 PTHREAD_CANCEL_DISABLE 'int'
|-EnumDecl 0x556389e62d08 <line:379:1, line:383:1> line:379:1
| |-EnumConstantDecl 0x556389e62dd8 <line:381:3> col:3 PTHREAD_CANCEL_DEFERRED 'int'
| `-EnumConstantDecl 0x556389e62e28 <line:382:3> col:3 PTHREAD_CANCEL_ASYNCHRONOUS 'int'
|-FunctionDecl 0x556389e63488 <line:385:1, line:388:96> line:385:12 used pthread_create 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' extern
| |-ParmVarDecl 0x556389e62f20 <col:28, col:50> col:50 __newthread 'pthread_t *restrict'
| |-ParmVarDecl 0x556389e63030 <line:386:7, col:40> col:40 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x556389e63270 <line:387:7, col:39> col:15 __start_routine 'void *(*)(void *)'
| |-ParmVarDecl 0x556389e632f0 <line:388:7, col:24> col:24 __arg 'void *restrict'
| |-NoThrowAttr 0x556389e63548 <col:47>
| |-NonNullAttr 0x556389e635a0 <col:77, col:94> 1 3
| `-CallbackAttr 0x556389e635d8 <line:385:12> Implicit 2 3
|-FunctionDecl 0x556389e63700 <line:389:1, col:72> col:13 pthread_exit 'void (void *) __attribute__((noreturn))' extern
| `-ParmVarDecl 0x556389e63630 <col:27, col:33> col:33 __retval 'void *'
|-FunctionDecl 0x556389e63958 <line:390:1, col:64> col:12 pthread_join 'int (pthread_t, void **)' extern
| |-ParmVarDecl 0x556389e637b8 <col:26, col:36> col:36 __th 'pthread_t':'unsigned long'
| `-ParmVarDecl 0x556389e63838 <col:42, col:49> col:49 __thread_return 'void **'
|-FunctionDecl 0x556389e63b28 <line:391:1, col:83> col:12 pthread_detach 'int (pthread_t)' extern
| |-ParmVarDecl 0x556389e63a18 <col:28, col:38> col:38 __th 'pthread_t':'unsigned long'
| `-NoThrowAttr 0x556389e63bd0 <col:60>
|-FunctionDecl 0x556389e63d20 <line:392:1, col:105> col:18 pthread_self 'pthread_t (void)' extern
| |-NoThrowAttr 0x556389e63dc0 <col:54>
| `-ConstAttr 0x556389e63e18 <col:95>
|-FunctionDecl 0x556389e63fe8 <line:393:1, line:394:70> line:393:12 pthread_equal 'int (pthread_t, pthread_t)' extern
| |-ParmVarDecl 0x556389e63e50 <col:27, col:37> col:37 __thread1 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x556389e63ec8 <col:48, col:58> col:58 __thread2 'pthread_t':'unsigned long'
| |-NoThrowAttr 0x556389e64098 <line:394:19>
| `-ConstAttr 0x556389e640f0 <col:60>
|-FunctionDecl 0x556389e65b08 <line:395:1, col:128> col:12 pthread_attr_init 'int (pthread_attr_t *)' extern
| |-ParmVarDecl 0x556389e659d0 <col:31, col:47> col:47 __attr 'pthread_attr_t *'
| |-NoThrowAttr 0x556389e65bb0 <col:71>
| `-NonNullAttr 0x556389e65c08 <col:112, col:126> 1
|-FunctionDecl 0x556389e65d10 <line:396:1, line:397:79> line:396:12 pthread_attr_destroy 'int (pthread_attr_t *)' extern
| |-ParmVarDecl 0x556389e65c58 <col:34, col:50> col:50 __attr 'pthread_attr_t *'
| |-NoThrowAttr 0x556389e65db8 <line:397:22>
| `-NonNullAttr 0x556389e65e10 <col:63, col:77> 1
|-FunctionDecl 0x556389e66038 <line:398:1, line:400:82> line:398:12 pthread_attr_getdetachstate 'int (const pthread_attr_t *, int *)' extern
| |-ParmVarDecl 0x556389e65e58 <col:41, col:63> col:63 __attr 'const pthread_attr_t *'
| |-ParmVarDecl 0x556389e65ed8 <line:399:6, col:11> col:11 __detachstate 'int *'
| |-NoThrowAttr 0x556389e660e8 <line:400:22>
| `-NonNullAttr 0x556389e66140 <col:63, col:80> 1 2
|-FunctionDecl 0x556389e66348 <line:401:1, line:403:79> line:401:12 pthread_attr_setdetachstate 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x556389e66188 <col:41, col:57> col:57 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x556389e66208 <line:402:6, col:10> col:10 __detachstate 'int'
| |-NoThrowAttr 0x556389e663f8 <line:403:22>
| `-NonNullAttr 0x556389e66450 <col:63, col:77> 1
|-FunctionDecl 0x556389e666a8 <line:404:1, line:406:82> line:404:12 pthread_attr_getguardsize 'int (const pthread_attr_t *, size_t *)' extern
| |-ParmVarDecl 0x556389e66498 <col:39, col:61> col:61 __attr 'const pthread_attr_t *'
| |-ParmVarDecl 0x556389e66540 <line:405:11, col:19> col:19 __guardsize 'size_t *'
| |-NoThrowAttr 0x556389e66758 <line:406:22>
| `-NonNullAttr 0x556389e667b0 <col:63, col:80> 1 2
|-FunctionDecl 0x556389e679e8 <line:407:1, line:409:79> line:407:12 pthread_attr_setguardsize 'int (pthread_attr_t *, size_t)' extern
| |-ParmVarDecl 0x556389e667f8 <col:39, col:55> col:55 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x556389e66870 <line:408:11, col:18> col:18 __guardsize 'size_t':'unsigned long'
| |-NoThrowAttr 0x556389e67a98 <line:409:22>
| `-NonNullAttr 0x556389e67af0 <col:63, col:77> 1
|-FunctionDecl 0x556389e67d28 <line:410:1, line:412:82> line:410:12 pthread_attr_getschedparam 'int (const pthread_attr_t *restrict, struct sched_param *restrict)' extern
| |-ParmVarDecl 0x556389e67b38 <col:40, col:73> col:73 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x556389e67bc8 <line:411:12, col:43> col:43 __param 'struct sched_param *restrict'
| |-NoThrowAttr 0x556389e67dd8 <line:412:22>
| `-NonNullAttr 0x556389e67e30 <col:63, col:80> 1 2
|-FunctionDecl 0x556389e68068 <line:413:1, line:415:97> line:413:12 pthread_attr_setschedparam 'int (pthread_attr_t *restrict, const struct sched_param *restrict)' extern
| |-ParmVarDecl 0x556389e67e78 <col:40, col:67> col:67 __attr 'pthread_attr_t *restrict'
| |-ParmVarDecl 0x556389e67f08 <line:414:12, line:415:12> col:12 __param 'const struct sched_param *restrict'
| |-NoThrowAttr 0x556389e68118 <col:37>
| `-NonNullAttr 0x556389e68170 <col:78, col:95> 1 2
|-FunctionDecl 0x556389e68358 <line:416:1, line:418:82> line:416:12 pthread_attr_getschedpolicy 'int (const pthread_attr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x556389e681b8 <col:41, line:417:6> col:6 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x556389e68238 <col:14, col:30> col:30 __policy 'int *restrict'
| |-NoThrowAttr 0x556389e68408 <line:418:22>
| `-NonNullAttr 0x556389e68460 <col:63, col:80> 1 2
|-FunctionDecl 0x556389e685e8 <line:419:1, line:420:79> line:419:12 pthread_attr_setschedpolicy 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x556389e684a8 <col:41, col:57> col:57 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x556389e68528 <col:65, col:69> col:69 __policy 'int'
| |-NoThrowAttr 0x556389e68698 <line:420:22>
| `-NonNullAttr 0x556389e686f0 <col:63, col:77> 1
|-FunctionDecl 0x556389e68898 <line:421:1, line:423:82> line:421:12 pthread_attr_getinheritsched 'int (const pthread_attr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x556389e68738 <col:42, line:422:7> col:7 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x556389e687b8 <col:15, col:31> col:31 __inherit 'int *restrict'
| |-NoThrowAttr 0x556389e68948 <line:423:22>
| `-NonNullAttr 0x556389e689c0 <col:63, col:80> 1 2
|-FunctionDecl 0x556389e68b48 <line:424:1, line:426:79> line:424:12 pthread_attr_setinheritsched 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x556389e68a08 <col:42, col:58> col:58 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x556389e68a88 <line:425:7, col:11> col:11 __inherit 'int'
| |-NoThrowAttr 0x556389e68bf8 <line:426:22>
| `-NonNullAttr 0x556389e68c50 <col:63, col:77> 1
|-FunctionDecl 0x556389e68df8 <line:427:1, line:429:82> line:427:12 pthread_attr_getscope 'int (const pthread_attr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x556389e68c98 <col:35, col:68> col:68 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x556389e68d18 <line:428:7, col:23> col:23 __scope 'int *restrict'
| |-NoThrowAttr 0x556389e68ea8 <line:429:22>
| `-NonNullAttr 0x556389e68f00 <col:63, col:80> 1 2
|-FunctionDecl 0x556389e69088 <line:430:1, line:431:79> line:430:12 pthread_attr_setscope 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x556389e68f48 <col:35, col:51> col:51 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x556389e68fc8 <col:59, col:63> col:63 __scope 'int'
| |-NoThrowAttr 0x556389e69138 <line:431:22>
| `-NonNullAttr 0x556389e69190 <col:63, col:77> 1
|-FunctionDecl 0x556389e693b8 <line:432:1, line:434:115> line:432:12 pthread_attr_getstackaddr 'int (const pthread_attr_t *restrict, void **restrict)' extern
| |-ParmVarDecl 0x556389e691d8 <col:39, line:433:11> col:11 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x556389e69258 <col:19, col:37> col:37 __stackaddr 'void **restrict'
| |-NoThrowAttr 0x556389e69468 <line:434:22>
| |-NonNullAttr 0x556389e694c0 <col:63, col:80> 1 2
| `-DeprecatedAttr 0x556389e694f8 <col:100> "" ""
|-FunctionDecl 0x556389e69708 <line:435:1, line:437:112> line:435:12 pthread_attr_setstackaddr 'int (pthread_attr_t *, void *)' extern
| |-ParmVarDecl 0x556389e69548 <col:39, col:55> col:55 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x556389e695c8 <line:436:11, col:17> col:17 __stackaddr 'void *'
| |-NoThrowAttr 0x556389e697b8 <line:437:22>
| |-NonNullAttr 0x556389e69810 <col:63, col:77> 1
| `-DeprecatedAttr 0x556389e69848 <col:97> "" ""
|-FunctionDecl 0x556389e69a48 <line:438:1, line:440:82> line:438:12 pthread_attr_getstacksize 'int (const pthread_attr_t *restrict, size_t *restrict)' extern
| |-ParmVarDecl 0x556389e69898 <col:39, line:439:11> col:11 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x556389e69910 <col:19, col:38> col:38 __stacksize 'size_t *restrict'
| |-NoThrowAttr 0x556389e69af8 <line:440:22>
| `-NonNullAttr 0x556389e69b50 <col:63, col:80> 1 2
|-FunctionDecl 0x556389e69cd0 <line:441:1, line:443:79> line:441:12 pthread_attr_setstacksize 'int (pthread_attr_t *, size_t)' extern
| |-ParmVarDecl 0x556389e69b98 <col:39, col:55> col:55 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x556389e69c10 <line:442:11, col:18> col:18 __stacksize 'size_t':'unsigned long'
| |-NoThrowAttr 0x556389e69d80 <line:443:22>
| `-NonNullAttr 0x556389e69dd8 <col:63, col:77> 1
|-FunctionDecl 0x556389e6a0c8 <line:444:1, line:447:85> line:444:12 pthread_attr_getstack 'int (const pthread_attr_t *restrict, void **restrict, size_t *restrict)' extern
| |-ParmVarDecl 0x556389e69e28 <col:35, col:68> col:68 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x556389e69ea8 <line:445:7, col:25> col:25 __stackaddr 'void **restrict'
| |-ParmVarDecl 0x556389e69f20 <line:446:7, col:26> col:26 __stacksize 'size_t *restrict'
| |-NoThrowAttr 0x556389e6a180 <line:447:22>
| `-NonNullAttr 0x556389e6a1d8 <col:63, col:83> 1 2 3
|-FunctionDecl 0x556389e6a488 <line:448:1, line:449:100> line:448:12 pthread_attr_setstack 'int (pthread_attr_t *, void *, size_t)' extern
| |-ParmVarDecl 0x556389e6a230 <col:35, col:51> col:51 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x556389e6a2b0 <col:59, col:65> col:65 __stackaddr 'void *'
| |-ParmVarDecl 0x556389e6a328 <line:449:7, col:14> col:14 __stacksize 'size_t':'unsigned long'
| |-NoThrowAttr 0x556389e6a540 <col:43>
| `-NonNullAttr 0x556389e6a598 <col:84, col:98> 1
|-FunctionDecl 0x556389e6a858 <line:450:1, line:452:79> line:450:12 pthread_setschedparam 'int (pthread_t, int, const struct sched_param *)' extern
| |-ParmVarDecl 0x556389e6a5e8 <col:35, col:45> col:45 __target_thread 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x556389e6a668 <col:62, col:66> col:66 __policy 'int'
| |-ParmVarDecl 0x556389e6a6f8 <line:451:7, col:33> col:33 __param 'const struct sched_param *'
| |-NoThrowAttr 0x556389e6a910 <line:452:22>
| `-NonNullAttr 0x556389e6a968 <col:63, col:77> 3
|-FunctionDecl 0x556389e6ac78 <line:453:1, line:456:82> line:453:12 pthread_getschedparam 'int (pthread_t, int *restrict, struct sched_param *restrict)' extern
| |-ParmVarDecl 0x556389e6a9e0 <col:35, col:45> col:45 __target_thread 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x556389e6aa60 <line:454:7, col:23> col:23 __policy 'int *restrict'
| |-ParmVarDecl 0x556389e6aaf0 <line:455:7, col:38> col:38 __param 'struct sched_param *restrict'
| |-NoThrowAttr 0x556389e6ad30 <line:456:22>
| `-NonNullAttr 0x556389e6ad88 <col:63, col:80> 2 3
|-FunctionDecl 0x556389e6af78 <line:457:1, line:458:45> line:457:12 pthread_setschedprio 'int (pthread_t, int)' extern
| |-ParmVarDecl 0x556389e6add8 <col:34, col:44> col:44 __target_thread 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x556389e6ae58 <col:61, col:65> col:65 __prio 'int'
| `-NoThrowAttr 0x556389e6b028 <line:458:22>
|-FunctionDecl 0x556389e6b3f8 <line:459:1, line:460:71> line:459:12 pthread_once 'int (pthread_once_t *, void (*)(void))' extern
| |-ParmVarDecl 0x556389e6b0f0 <col:26, col:42> col:42 __once_control 'pthread_once_t *'
| |-ParmVarDecl 0x556389e6b290 <line:460:5, col:33> col:12 __init_routine 'void (*)(void)'
| `-NonNullAttr 0x556389e6b4a8 <col:52, col:69> 1 2
|-FunctionDecl 0x556389e6b650 <line:461:1, col:64> col:12 pthread_setcancelstate 'int (int, int *)' extern
| |-ParmVarDecl 0x556389e6b530 <col:36, col:40> col:40 __state 'int'
| `-ParmVarDecl 0x556389e6b5b0 <col:49, col:54> col:54 __oldstate 'int *'
|-FunctionDecl 0x556389e6b838 <line:462:1, col:61> col:12 pthread_setcanceltype 'int (int, int *)' extern
| |-ParmVarDecl 0x556389e6b718 <col:35, col:39> col:39 __type 'int'
| `-ParmVarDecl 0x556389e6b798 <col:47, col:52> col:52 __oldtype 'int *'
|-FunctionDecl 0x556389e6b9f0 <line:463:1, col:42> col:12 pthread_cancel 'int (pthread_t)' extern
| `-ParmVarDecl 0x556389e6b8f8 <col:28, col:38> col:38 __th 'pthread_t':'unsigned long'
|-FunctionDecl 0x556389e6bb30 <line:464:1, col:37> col:13 pthread_testcancel 'void (void)' extern
|-RecordDecl 0x556389e6bbd0 <line:465:9, line:473:1> line:465:9 struct definition
| |-RecordDecl 0x556389e6bc78 <line:467:3, line:471:3> line:467:3 struct definition
| | |-FieldDecl 0x556389e6bd68 <line:469:5, col:15> col:15 __cancel_jmp_buf '__jmp_buf':'long [8]'
| | `-FieldDecl 0x556389e6bdd0 <line:470:5, col:9> col:9 __mask_was_saved 'int'
| |-FieldDecl 0x556389e6bfa0 <line:467:3, line:471:23> col:5 __cancel_jmp_buf 'struct (anonymous struct at ./split_6/mix049_power.oepc_false-unreach-call.i:467:3) [1]'
| `-FieldDecl 0x556389e6c098 <line:472:3, col:16> col:9 __pad 'void *[4]'
|-TypedefDecl 0x556389e6c150 <line:465:1, line:473:3> col:3 referenced __pthread_unwind_buf_t 'struct __pthread_unwind_buf_t':'__pthread_unwind_buf_t'
| |-ElaboratedType 0x556389e6c0f0 'struct __pthread_unwind_buf_t' sugar
| | `-RecordType 0x556389e6bc50 '__pthread_unwind_buf_t'
| |   `-Record 0x556389e6bbd0 ''
| `-AlignedAttr 0x556389e6c1a8 <col:42> aligned
|   `-<<<NULL>>>
|-RecordDecl 0x556389e6c220 <line:474:1, line:480:1> line:474:8 struct __pthread_cleanup_frame definition
| |-FieldDecl 0x556389e6c380 <line:476:3, col:35> col:10 __cancel_routine 'void (*)(void *)'
| |-FieldDecl 0x556389e6c3e8 <line:477:3, col:9> col:9 __cancel_arg 'void *'
| |-FieldDecl 0x556389e6c450 <line:478:3, col:7> col:7 __do_it 'int'
| `-FieldDecl 0x556389e6c4b8 <line:479:3, col:7> col:7 __cancel_type 'int'
|-FunctionDecl 0x556389e6c6c0 <line:481:1, col:69> col:13 __pthread_register_cancel 'void (__pthread_unwind_buf_t *)' extern
| `-ParmVarDecl 0x556389e6c5b0 <col:40, col:64> col:64 __buf '__pthread_unwind_buf_t *'
|-FunctionDecl 0x556389e6c808 <line:483:1, col:71> col:13 __pthread_unregister_cancel 'void (__pthread_unwind_buf_t *)' extern
| `-ParmVarDecl 0x556389e6c778 <col:42, col:66> col:66 __buf '__pthread_unwind_buf_t *'
|-FunctionDecl 0x556389e6ca00 <line:485:1, line:487:31> line:485:13 __pthread_unwind_next 'void (__pthread_unwind_buf_t *) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x556389e6c8c0 <col:36, col:60> col:60 __buf '__pthread_unwind_buf_t *'
| `-WeakAttr 0x556389e6caa8 <line:487:22>
|-RecordDecl 0x556389e6cb00 <line:489:1, col:8> col:8 struct __jmp_buf_tag
|-FunctionDecl 0x556389e6ce18 <line:490:1, col:98> col:12 __sigsetjmp 'int (struct __jmp_buf_tag *, int)' extern
| |-ParmVarDecl 0x556389e6cc78 <col:25, col:47> col:47 __env 'struct __jmp_buf_tag *'
| |-ParmVarDecl 0x556389e6ccf8 <col:54, col:58> col:58 __savemask 'int'
| |-NoThrowAttr 0x556389e6cec8 <col:86>
| `-ReturnsTwiceAttr 0x556389e6cf20 <col:12> Implicit
|-FunctionDecl 0x556389e6d248 <line:491:1, line:493:79> line:491:12 pthread_mutex_init 'int (pthread_mutex_t *, const pthread_mutexattr_t *)' extern
| |-ParmVarDecl 0x556389e6cff0 <col:32, col:49> col:49 __mutex 'pthread_mutex_t *'
| |-ParmVarDecl 0x556389e6d100 <line:492:11, col:38> col:38 __mutexattr 'const pthread_mutexattr_t *'
| |-NoThrowAttr 0x556389e6d2f8 <line:493:22>
| `-NonNullAttr 0x556389e6d350 <col:63, col:77> 1
|-FunctionDecl 0x556389e6d4c8 <line:494:1, line:495:79> line:494:12 pthread_mutex_destroy 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x556389e6d398 <col:35, col:52> col:52 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x556389e6d570 <line:495:22>
| `-NonNullAttr 0x556389e6d5c8 <col:63, col:77> 1
|-FunctionDecl 0x556389e6d6d0 <line:496:1, line:497:68> line:496:12 pthread_mutex_trylock 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x556389e6d618 <col:35, col:52> col:52 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x556389e6d778 <line:497:22>
| `-NonNullAttr 0x556389e6d7d0 <col:52, col:66> 1
|-FunctionDecl 0x556389e6d8d0 <line:498:1, line:499:68> line:498:12 pthread_mutex_lock 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x556389e6d818 <col:32, col:49> col:49 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x556389e6d978 <line:499:22>
| `-NonNullAttr 0x556389e6d9d0 <col:52, col:66> 1
|-FunctionDecl 0x556389e6ec28 <line:500:1, line:502:85> line:500:12 pthread_mutex_timedlock 'int (pthread_mutex_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x556389e6ea38 <col:37, col:65> col:65 __mutex 'pthread_mutex_t *restrict'
| |-ParmVarDecl 0x556389e6eac8 <line:501:9, line:502:9> col:9 __abstime 'const struct timespec *restrict'
| |-NoThrowAttr 0x556389e6ecd8 <col:36>
| `-NonNullAttr 0x556389e6ed30 <col:66, col:83> 1 2
|-FunctionDecl 0x556389e6ee30 <line:503:1, line:504:68> line:503:12 pthread_mutex_unlock 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x556389e6ed78 <col:34, col:51> col:51 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x556389e6eed8 <line:504:22>
| `-NonNullAttr 0x556389e6ef30 <col:52, col:66> 1
|-FunctionDecl 0x556389e6f1c8 <line:505:1, line:508:82> line:505:12 pthread_mutex_getprioceiling 'int (const pthread_mutex_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x556389e6efe0 <col:42, line:506:18> col:18 __mutex 'const pthread_mutex_t *restrict'
| |-ParmVarDecl 0x556389e6f060 <line:507:7, col:23> col:23 __prioceiling 'int *restrict'
| |-NoThrowAttr 0x556389e6f278 <line:508:22>
| `-NonNullAttr 0x556389e6f2d0 <col:63, col:80> 1 2
|-FunctionDecl 0x556389e6f598 <line:509:1, line:512:82> line:509:12 pthread_mutex_setprioceiling 'int (pthread_mutex_t *restrict, int, int *restrict)' extern
| |-ParmVarDecl 0x556389e6f318 <col:42, col:70> col:70 __mutex 'pthread_mutex_t *restrict'
| |-ParmVarDecl 0x556389e6f398 <line:510:7, col:11> col:11 __prioceiling 'int'
| |-ParmVarDecl 0x556389e6f418 <line:511:7, col:23> col:23 __old_ceiling 'int *restrict'
| |-NoThrowAttr 0x556389e6f650 <line:512:22>
| `-NonNullAttr 0x556389e6f6a8 <col:63, col:80> 1 3
|-FunctionDecl 0x556389e6f7b0 <line:513:1, line:514:79> line:513:12 pthread_mutex_consistent 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x556389e6f6f8 <col:38, col:55> col:55 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x556389e6f858 <line:514:22>
| `-NonNullAttr 0x556389e6f8b0 <col:63, col:77> 1
|-FunctionDecl 0x556389e6fad8 <line:515:1, line:516:79> line:515:12 pthread_mutexattr_init 'int (pthread_mutexattr_t *)' extern
| |-ParmVarDecl 0x556389e6f960 <col:36, col:57> col:57 __attr 'pthread_mutexattr_t *'
| |-NoThrowAttr 0x556389e6fb80 <line:516:22>
| `-NonNullAttr 0x556389e6fbd8 <col:63, col:77> 1
|-FunctionDecl 0x556389e6fce0 <line:517:1, line:518:79> line:517:12 pthread_mutexattr_destroy 'int (pthread_mutexattr_t *)' extern
| |-ParmVarDecl 0x556389e6fc28 <col:39, col:60> col:60 __attr 'pthread_mutexattr_t *'
| |-NoThrowAttr 0x556389e6fd88 <line:518:22>
| `-NonNullAttr 0x556389e6fde0 <col:63, col:77> 1
|-FunctionDecl 0x556389e70008 <line:519:1, line:522:82> line:519:12 pthread_mutexattr_getpshared 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x556389e6fe28 <col:42, line:520:18> col:18 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x556389e6fea8 <line:521:7, col:23> col:23 __pshared 'int *restrict'
| |-NoThrowAttr 0x556389e700b8 <line:522:22>
| `-NonNullAttr 0x556389e70110 <col:63, col:80> 1 2
|-FunctionDecl 0x556389e70318 <line:523:1, line:525:79> line:523:12 pthread_mutexattr_setpshared 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x556389e70158 <col:42, col:63> col:63 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x556389e701d8 <line:524:7, col:11> col:11 __pshared 'int'
| |-NoThrowAttr 0x556389e703c8 <line:525:22>
| `-NonNullAttr 0x556389e70420 <col:63, col:77> 1
|-FunctionDecl 0x556389e705c8 <line:526:1, line:528:82> line:526:12 pthread_mutexattr_gettype 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x556389e70468 <col:39, line:527:11> col:11 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x556389e704e8 <col:19, col:35> col:35 __kind 'int *restrict'
| |-NoThrowAttr 0x556389e70678 <line:528:22>
| `-NonNullAttr 0x556389e706d0 <col:63, col:80> 1 2
|-FunctionDecl 0x556389e70858 <line:529:1, line:530:79> line:529:12 pthread_mutexattr_settype 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x556389e70718 <col:39, col:60> col:60 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x556389e70798 <col:68, col:72> col:72 __kind 'int'
| |-NoThrowAttr 0x556389e70908 <line:530:22>
| `-NonNullAttr 0x556389e70960 <col:63, col:77> 1
|-FunctionDecl 0x556389e70b20 <line:531:1, line:534:82> line:531:12 pthread_mutexattr_getprotocol 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x556389e709a8 <col:43, line:532:19> col:19 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x556389e70a40 <line:533:8, col:24> col:24 __protocol 'int *restrict'
| |-NoThrowAttr 0x556389e70bd0 <line:534:22>
| `-NonNullAttr 0x556389e70c28 <col:63, col:80> 1 2
|-FunctionDecl 0x556389e70db8 <line:535:1, line:537:79> line:535:12 pthread_mutexattr_setprotocol 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x556389e70c78 <col:43, col:64> col:64 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x556389e70cf8 <line:536:8, col:12> col:12 __protocol 'int'
| |-NoThrowAttr 0x556389e70e68 <line:537:22>
| `-NonNullAttr 0x556389e70ec0 <col:63, col:77> 1
|-FunctionDecl 0x556389e71068 <line:538:1, line:541:82> line:538:12 pthread_mutexattr_getprioceiling 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x556389e70f08 <col:46, line:539:22> col:22 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x556389e70f88 <line:540:11, col:27> col:27 __prioceiling 'int *restrict'
| |-NoThrowAttr 0x556389e71118 <line:541:22>
| `-NonNullAttr 0x556389e71170 <col:63, col:80> 1 2
|-FunctionDecl 0x556389e712f8 <line:542:1, line:544:79> line:542:12 pthread_mutexattr_setprioceiling 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x556389e711b8 <col:46, col:67> col:67 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x556389e71238 <line:543:11, col:15> col:15 __prioceiling 'int'
| |-NoThrowAttr 0x556389e713a8 <line:544:22>
| `-NonNullAttr 0x556389e71400 <col:63, col:77> 1
|-FunctionDecl 0x556389e715e8 <line:545:1, line:547:82> line:545:12 pthread_mutexattr_getrobust 'int (const pthread_mutexattr_t *, int *)' extern
| |-ParmVarDecl 0x556389e71448 <col:41, col:68> col:68 __attr 'const pthread_mutexattr_t *'
| |-ParmVarDecl 0x556389e714c8 <line:546:6, col:11> col:11 __robustness 'int *'
| |-NoThrowAttr 0x556389e71698 <line:547:22>
| `-NonNullAttr 0x556389e716f0 <col:63, col:80> 1 2
|-FunctionDecl 0x556389e71878 <line:548:1, line:550:79> line:548:12 pthread_mutexattr_setrobust 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x556389e71738 <col:41, col:62> col:62 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x556389e717b8 <line:549:6, col:10> col:10 __robustness 'int'
| |-NoThrowAttr 0x556389e71928 <line:550:22>
| `-NonNullAttr 0x556389e71980 <col:63, col:77> 1
|-FunctionDecl 0x556389e72cf8 <line:551:1, line:553:86> line:551:12 pthread_rwlock_init 'int (pthread_rwlock_t *restrict, const pthread_rwlockattr_t *restrict)' extern
| |-ParmVarDecl 0x556389e72aa0 <col:33, col:62> col:62 __rwlock 'pthread_rwlock_t *restrict'
| |-ParmVarDecl 0x556389e72bb0 <line:552:5, line:553:5> col:5 __attr 'const pthread_rwlockattr_t *restrict'
| |-NoThrowAttr 0x556389e72da8 <col:29>
| `-NonNullAttr 0x556389e72e00 <col:70, col:84> 1
|-FunctionDecl 0x556389e72f78 <line:554:1, line:555:79> line:554:12 pthread_rwlock_destroy 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x556389e72e48 <col:36, col:54> col:54 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x556389e73020 <line:555:22>
| `-NonNullAttr 0x556389e73078 <col:63, col:77> 1
|-FunctionDecl 0x556389e73180 <line:556:1, line:557:68> line:556:12 pthread_rwlock_rdlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x556389e730c8 <col:35, col:53> col:53 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x556389e73228 <line:557:22>
| `-NonNullAttr 0x556389e73280 <col:52, col:66> 1
|-FunctionDecl 0x556389e73380 <line:558:1, line:559:65> line:558:12 pthread_rwlock_tryrdlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x556389e732c8 <col:38, col:56> col:56 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x556389e73428 <line:559:19>
| `-NonNullAttr 0x556389e73480 <col:49, col:63> 1
|-FunctionDecl 0x556389e736b8 <line:560:1, line:562:88> line:560:12 pthread_rwlock_timedrdlock 'int (pthread_rwlock_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x556389e734c8 <col:40, col:69> col:69 __rwlock 'pthread_rwlock_t *restrict'
| |-ParmVarDecl 0x556389e73558 <line:561:12, line:562:12> col:12 __abstime 'const struct timespec *restrict'
| |-NoThrowAttr 0x556389e73768 <col:39>
| `-NonNullAttr 0x556389e737c0 <col:69, col:86> 1 2
|-FunctionDecl 0x556389e738c0 <line:563:1, line:564:68> line:563:12 pthread_rwlock_wrlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x556389e73808 <col:35, col:53> col:53 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x556389e73968 <line:564:22>
| `-NonNullAttr 0x556389e739c0 <col:52, col:66> 1
|-FunctionDecl 0x556389e73b28 <line:565:1, line:566:68> line:565:12 pthread_rwlock_trywrlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x556389e73a70 <col:38, col:56> col:56 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x556389e73bd0 <line:566:22>
| `-NonNullAttr 0x556389e73c28 <col:52, col:66> 1
|-FunctionDecl 0x556389e73de8 <line:567:1, line:569:88> line:567:12 pthread_rwlock_timedwrlock 'int (pthread_rwlock_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x556389e73c78 <col:40, col:69> col:69 __rwlock 'pthread_rwlock_t *restrict'
| |-ParmVarDecl 0x556389e73d08 <line:568:12, line:569:12> col:12 __abstime 'const struct timespec *restrict'
| |-NoThrowAttr 0x556389e73e98 <col:39>
| `-NonNullAttr 0x556389e73ef0 <col:69, col:86> 1 2
|-FunctionDecl 0x556389e73ff0 <line:570:1, line:571:68> line:570:12 pthread_rwlock_unlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x556389e73f38 <col:35, col:53> col:53 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x556389e74098 <line:571:22>
| `-NonNullAttr 0x556389e740f0 <col:52, col:66> 1
|-FunctionDecl 0x556389e742d8 <line:572:1, line:573:79> line:572:12 pthread_rwlockattr_init 'int (pthread_rwlockattr_t *)' extern
| |-ParmVarDecl 0x556389e741a0 <col:37, col:59> col:59 __attr 'pthread_rwlockattr_t *'
| |-NoThrowAttr 0x556389e74380 <line:573:22>
| `-NonNullAttr 0x556389e743d8 <col:63, col:77> 1
|-FunctionDecl 0x556389e744e0 <line:574:1, line:575:79> line:574:12 pthread_rwlockattr_destroy 'int (pthread_rwlockattr_t *)' extern
| |-ParmVarDecl 0x556389e74428 <col:40, col:62> col:62 __attr 'pthread_rwlockattr_t *'
| |-NoThrowAttr 0x556389e74588 <line:575:22>
| `-NonNullAttr 0x556389e745e0 <col:63, col:77> 1
|-FunctionDecl 0x556389e74808 <line:576:1, line:579:82> line:576:12 pthread_rwlockattr_getpshared 'int (const pthread_rwlockattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x556389e74628 <col:43, line:577:19> col:19 __attr 'const pthread_rwlockattr_t *restrict'
| |-ParmVarDecl 0x556389e746a8 <line:578:8, col:24> col:24 __pshared 'int *restrict'
| |-NoThrowAttr 0x556389e748b8 <line:579:22>
| `-NonNullAttr 0x556389e74910 <col:63, col:80> 1 2
|-FunctionDecl 0x556389e74b38 <line:580:1, line:582:79> line:580:12 pthread_rwlockattr_setpshared 'int (pthread_rwlockattr_t *, int)' extern
| |-ParmVarDecl 0x556389e74958 <col:43, col:65> col:65 __attr 'pthread_rwlockattr_t *'
| |-ParmVarDecl 0x556389e749d8 <line:581:8, col:12> col:12 __pshared 'int'
| |-NoThrowAttr 0x556389e74be8 <line:582:22>
| `-NonNullAttr 0x556389e74c40 <col:63, col:77> 1
|-FunctionDecl 0x556389e74de8 <line:583:1, line:586:82> line:583:12 pthread_rwlockattr_getkind_np 'int (const pthread_rwlockattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x556389e74c88 <col:43, line:584:19> col:19 __attr 'const pthread_rwlockattr_t *restrict'
| |-ParmVarDecl 0x556389e74d08 <line:585:8, col:24> col:24 __pref 'int *restrict'
| |-NoThrowAttr 0x556389e74e98 <line:586:22>
| `-NonNullAttr 0x556389e74ef0 <col:63, col:80> 1 2
|-FunctionDecl 0x556389e75078 <line:587:1, line:588:93> line:587:12 pthread_rwlockattr_setkind_np 'int (pthread_rwlockattr_t *, int)' extern
| |-ParmVarDecl 0x556389e74f38 <col:43, col:65> col:65 __attr 'pthread_rwlockattr_t *'
| |-ParmVarDecl 0x556389e74fb8 <line:588:8, col:12> col:12 __pref 'int'
| |-NoThrowAttr 0x556389e75128 <col:36>
| `-NonNullAttr 0x556389e75180 <col:77, col:91> 1
|-FunctionDecl 0x556389e754b8 <line:589:1, line:591:79> line:589:12 pthread_cond_init 'int (pthread_cond_t *restrict, const pthread_condattr_t *restrict)' extern
| |-ParmVarDecl 0x556389e75260 <col:31, col:58> col:58 __cond 'pthread_cond_t *restrict'
| |-ParmVarDecl 0x556389e75370 <line:590:10, col:47> col:47 __cond_attr 'const pthread_condattr_t *restrict'
| |-NoThrowAttr 0x556389e75568 <line:591:22>
| `-NonNullAttr 0x556389e755c0 <col:63, col:77> 1
|-FunctionDecl 0x556389e75738 <line:592:1, line:593:79> line:592:12 pthread_cond_destroy 'int (pthread_cond_t *)' extern
| |-ParmVarDecl 0x556389e75608 <col:34, col:50> col:50 __cond 'pthread_cond_t *'
| |-NoThrowAttr 0x556389e757e0 <line:593:22>
| `-NonNullAttr 0x556389e75838 <col:63, col:77> 1
|-FunctionDecl 0x556389e75940 <line:594:1, line:595:68> line:594:12 pthread_cond_signal 'int (pthread_cond_t *)' extern
| |-ParmVarDecl 0x556389e75888 <col:33, col:49> col:49 __cond 'pthread_cond_t *'
| |-NoThrowAttr 0x556389e759e8 <line:595:22>
| `-NonNullAttr 0x556389e75a40 <col:52, col:66> 1
|-FunctionDecl 0x556389e75b58 <line:596:1, line:597:68> line:596:12 pthread_cond_broadcast 'int (pthread_cond_t *)' extern
| |-ParmVarDecl 0x556389e75aa0 <col:36, col:52> col:52 __cond 'pthread_cond_t *'
| |-NoThrowAttr 0x556389e75c00 <line:597:22>
| `-NonNullAttr 0x556389e75c58 <col:52, col:66> 1
|-FunctionDecl 0x556389e75e88 <line:598:1, line:600:41> line:598:12 pthread_cond_wait 'int (pthread_cond_t *restrict, pthread_mutex_t *restrict)' extern
| |-ParmVarDecl 0x556389e75ca8 <col:31, col:58> col:58 __cond 'pthread_cond_t *restrict'
| |-ParmVarDecl 0x556389e75d20 <line:599:10, col:38> col:38 __mutex 'pthread_mutex_t *restrict'
| `-NonNullAttr 0x556389e75f38 <line:600:22, col:39> 1 2
|-FunctionDecl 0x556389e76268 <line:601:1, line:604:44> line:601:12 pthread_cond_timedwait 'int (pthread_cond_t *restrict, pthread_mutex_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x556389e75fb8 <col:36, col:63> col:63 __cond 'pthread_cond_t *restrict'
| |-ParmVarDecl 0x556389e76030 <line:602:8, col:36> col:36 __mutex 'pthread_mutex_t *restrict'
| |-ParmVarDecl 0x556389e760c0 <line:603:8, col:42> col:42 __abstime 'const struct timespec *restrict'
| `-NonNullAttr 0x556389e76320 <line:604:22, col:42> 1 2 3
|-FunctionDecl 0x556389e76538 <line:605:1, line:606:79> line:605:12 pthread_condattr_init 'int (pthread_condattr_t *)' extern
| |-ParmVarDecl 0x556389e76400 <col:35, col:55> col:55 __attr 'pthread_condattr_t *'
| |-NoThrowAttr 0x556389e765e0 <line:606:22>
| `-NonNullAttr 0x556389e76638 <col:63, col:77> 1
|-FunctionDecl 0x556389e76740 <line:607:1, line:608:79> line:607:12 pthread_condattr_destroy 'int (pthread_condattr_t *)' extern
| |-ParmVarDecl 0x556389e76688 <col:38, col:58> col:58 __attr 'pthread_condattr_t *'
| |-NoThrowAttr 0x556389e767e8 <line:608:22>
| `-NonNullAttr 0x556389e76840 <col:63, col:77> 1
|-FunctionDecl 0x556389e76aa0 <line:609:1, line:612:82> line:609:12 pthread_condattr_getpshared 'int (const pthread_condattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x556389e76888 <col:41, line:610:17> col:17 __attr 'const pthread_condattr_t *restrict'
| |-ParmVarDecl 0x556389e76908 <line:611:6, col:22> col:22 __pshared 'int *restrict'
| |-NoThrowAttr 0x556389e76b50 <line:612:22>
| `-NonNullAttr 0x556389e76ba8 <col:63, col:80> 1 2
|-FunctionDecl 0x556389e76db8 <line:613:1, line:614:94> line:613:12 pthread_condattr_setpshared 'int (pthread_condattr_t *, int)' extern
| |-ParmVarDecl 0x556389e76bf8 <col:41, col:61> col:61 __attr 'pthread_condattr_t *'
| |-ParmVarDecl 0x556389e76c78 <line:614:6, col:10> col:10 __pshared 'int'
| |-NoThrowAttr 0x556389e76e68 <col:37>
| `-NonNullAttr 0x556389e76ec0 <col:78, col:92> 1
|-FunctionDecl 0x556389e770d8 <line:615:1, line:618:82> line:615:12 pthread_condattr_getclock 'int (const pthread_condattr_t *restrict, __clockid_t *restrict)' extern
| |-ParmVarDecl 0x556389e76f08 <col:39, line:616:22> col:22 __attr 'const pthread_condattr_t *restrict'
| |-ParmVarDecl 0x556389e76fb0 <line:617:11, col:35> col:35 __clock_id '__clockid_t *restrict'
| |-NoThrowAttr 0x556389e77188 <line:618:22>
| `-NonNullAttr 0x556389e771e0 <col:63, col:80> 1 2
|-FunctionDecl 0x556389e773a8 <line:619:1, line:621:79> line:619:12 pthread_condattr_setclock 'int (pthread_condattr_t *, __clockid_t)' extern
| |-ParmVarDecl 0x556389e77228 <col:39, col:59> col:59 __attr 'pthread_condattr_t *'
| |-ParmVarDecl 0x556389e772a0 <line:620:11, col:23> col:23 __clock_id '__clockid_t':'int'
| |-NoThrowAttr 0x556389e77458 <line:621:22>
| `-NonNullAttr 0x556389e774b0 <col:63, col:77> 1
|-FunctionDecl 0x556389e77758 <line:622:1, line:623:79> line:622:12 pthread_spin_init 'int (pthread_spinlock_t *, int)' extern
| |-ParmVarDecl 0x556389e77590 <col:31, col:51> col:51 __lock 'pthread_spinlock_t *'
| |-ParmVarDecl 0x556389e77610 <col:59, col:63> col:63 __pshared 'int'
| |-NoThrowAttr 0x556389e77808 <line:623:22>
| `-NonNullAttr 0x556389e77860 <col:63, col:77> 1
|-FunctionDecl 0x556389e779d8 <line:624:1, line:625:79> line:624:12 pthread_spin_destroy 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x556389e778a8 <col:34, col:54> col:54 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x556389e77ab0 <line:625:22>
| `-NonNullAttr 0x556389e77b08 <col:63, col:77> 1
|-FunctionDecl 0x556389e77c10 <line:626:1, line:627:68> line:626:12 pthread_spin_lock 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x556389e77b58 <col:31, col:51> col:51 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x556389e77cb8 <line:627:22>
| `-NonNullAttr 0x556389e77d10 <col:52, col:66> 1
|-FunctionDecl 0x556389e77e10 <line:628:1, line:629:68> line:628:12 pthread_spin_trylock 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x556389e77d58 <col:34, col:54> col:54 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x556389e77eb8 <line:629:22>
| `-NonNullAttr 0x556389e77f10 <col:52, col:66> 1
|-FunctionDecl 0x556389e78010 <line:630:1, line:631:68> line:630:12 pthread_spin_unlock 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x556389e77f58 <col:33, col:53> col:53 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x556389e780b8 <line:631:22>
| `-NonNullAttr 0x556389e78110 <col:52, col:66> 1
|-FunctionDecl 0x556389e784e8 <line:632:1, line:635:79> line:632:12 pthread_barrier_init 'int (pthread_barrier_t *restrict, const pthread_barrierattr_t *restrict, unsigned int)' extern
| |-ParmVarDecl 0x556389e781f0 <col:34, col:64> col:64 __barrier 'pthread_barrier_t *restrict'
| |-ParmVarDecl 0x556389e78300 <line:633:6, line:634:6> col:6 __attr 'const pthread_barrierattr_t *restrict'
| |-ParmVarDecl 0x556389e78380 <col:14, col:27> col:27 __count 'unsigned int'
| |-NoThrowAttr 0x556389e785a0 <line:635:22>
| `-NonNullAttr 0x556389e785f8 <col:63, col:77> 1
|-FunctionDecl 0x556389e78778 <line:636:1, line:637:79> line:636:12 pthread_barrier_destroy 'int (pthread_barrier_t *)' extern
| |-ParmVarDecl 0x556389e78648 <col:37, col:56> col:56 __barrier 'pthread_barrier_t *'
| |-NoThrowAttr 0x556389e78820 <line:637:22>
| `-NonNullAttr 0x556389e78878 <col:63, col:77> 1
|-FunctionDecl 0x556389e78980 <line:638:1, line:639:68> line:638:12 pthread_barrier_wait 'int (pthread_barrier_t *)' extern
| |-ParmVarDecl 0x556389e788c8 <col:34, col:53> col:53 __barrier 'pthread_barrier_t *'
| |-NoThrowAttr 0x556389e78a28 <line:639:22>
| `-NonNullAttr 0x556389e78a80 <col:52, col:66> 1
|-FunctionDecl 0x556389e79c88 <line:640:1, line:641:79> line:640:12 pthread_barrierattr_init 'int (pthread_barrierattr_t *)' extern
| |-ParmVarDecl 0x556389e79b50 <col:38, col:61> col:61 __attr 'pthread_barrierattr_t *'
| |-NoThrowAttr 0x556389e79d30 <line:641:22>
| `-NonNullAttr 0x556389e79d88 <col:63, col:77> 1
|-FunctionDecl 0x556389e79e90 <line:642:1, line:643:79> line:642:12 pthread_barrierattr_destroy 'int (pthread_barrierattr_t *)' extern
| |-ParmVarDecl 0x556389e79dd8 <col:41, col:64> col:64 __attr 'pthread_barrierattr_t *'
| |-NoThrowAttr 0x556389e79f38 <line:643:22>
| `-NonNullAttr 0x556389e79f90 <col:63, col:77> 1
|-FunctionDecl 0x556389e7a1b8 <line:644:1, line:647:82> line:644:12 pthread_barrierattr_getpshared 'int (const pthread_barrierattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x556389e79fd8 <col:44, line:645:20> col:20 __attr 'const pthread_barrierattr_t *restrict'
| |-ParmVarDecl 0x556389e7a058 <line:646:9, col:25> col:25 __pshared 'int *restrict'
| |-NoThrowAttr 0x556389e7a268 <line:647:22>
| `-NonNullAttr 0x556389e7a2c0 <col:63, col:80> 1 2
|-FunctionDecl 0x556389e7a4c8 <line:648:1, line:650:79> line:648:12 pthread_barrierattr_setpshared 'int (pthread_barrierattr_t *, int)' extern
| |-ParmVarDecl 0x556389e7a308 <col:44, col:67> col:67 __attr 'pthread_barrierattr_t *'
| |-ParmVarDecl 0x556389e7a388 <line:649:9, col:13> col:13 __pshared 'int'
| |-NoThrowAttr 0x556389e7a578 <line:650:22>
| `-NonNullAttr 0x556389e7a5d0 <col:63, col:77> 1
|-FunctionDecl 0x556389e7a918 <line:651:1, line:653:79> line:651:12 pthread_key_create 'int (pthread_key_t *, void (*)(void *))' extern
| |-ParmVarDecl 0x556389e7a6b0 <col:32, col:47> col:47 __key 'pthread_key_t *'
| |-ParmVarDecl 0x556389e7a7d0 <line:652:11, col:43> col:18 __destr_function 'void (*)(void *)'
| |-NoThrowAttr 0x556389e7a9c8 <line:653:22>
| `-NonNullAttr 0x556389e7aa20 <col:63, col:77> 1
|-FunctionDecl 0x556389e7ab88 <line:654:1, col:92> col:12 pthread_key_delete 'int (pthread_key_t)' extern
| |-ParmVarDecl 0x556389e7aa68 <col:32, col:46> col:46 __key 'pthread_key_t':'unsigned int'
| `-NoThrowAttr 0x556389e7ac30 <col:69>
|-FunctionDecl 0x556389e7ada8 <line:655:1, col:95> col:14 pthread_getspecific 'void *(pthread_key_t)' extern
| |-ParmVarDecl 0x556389e7ac98 <col:35, col:49> col:49 __key 'pthread_key_t':'unsigned int'
| `-NoThrowAttr 0x556389e7ae50 <col:72>
|-FunctionDecl 0x556389e7b088 <line:656:1, line:657:67> line:656:12 pthread_setspecific 'int (pthread_key_t, const void *)' extern
| |-ParmVarDecl 0x556389e7aeb8 <col:33, col:47> col:47 __key 'pthread_key_t':'unsigned int'
| |-ParmVarDecl 0x556389e7af68 <line:657:5, col:17> col:17 __pointer 'const void *'
| `-NoThrowAttr 0x556389e7b138 <col:44>
|-FunctionDecl 0x556389e7b358 <line:658:1, line:660:79> line:658:12 pthread_getcpuclockid 'int (pthread_t, __clockid_t *)' extern
| |-ParmVarDecl 0x556389e7b1a0 <col:35, col:45> col:45 __thread_id 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x556389e7b218 <line:659:7, col:20> col:20 __clock_id '__clockid_t *'
| |-NoThrowAttr 0x556389e7b408 <line:660:22>
| `-NonNullAttr 0x556389e7b460 <col:63, col:77> 2
|-FunctionDecl 0x556389e7b8a8 <line:661:1, line:663:70> line:661:12 pthread_atfork 'int (void (*)(void), void (*)(void), void (*)(void))' extern
| |-ParmVarDecl 0x556389e7b540 <col:28, col:51> col:35 __prepare 'void (*)(void)'
| |-ParmVarDecl 0x556389e7b650 <line:662:7, col:29> col:14 __parent 'void (*)(void)'
| |-ParmVarDecl 0x556389e7b760 <line:663:7, col:28> col:14 __child 'void (*)(void)'
| `-NoThrowAttr 0x556389e7b960 <col:47>
|-FunctionDecl 0x556389e7baf0 <line:665:1, col:20> col:8 used P0 'void *(void *)'
| `-ParmVarDecl 0x556389e7b9d0 <col:11, col:17> col:17 arg 'void *'
|-FunctionDecl 0x556389e7bc48 <line:666:1, col:20> col:8 used P1 'void *(void *)'
| `-ParmVarDecl 0x556389e7bbb0 <col:11, col:17> col:17 arg 'void *'
|-FunctionDecl 0x556389e7bda0 <line:667:1, col:20> col:8 used P2 'void *(void *)'
| `-ParmVarDecl 0x556389e7bd08 <col:11, col:17> col:17 arg 'void *'
|-FunctionDecl 0x556389e7be68 <line:668:1, col:12> col:6 fence 'void ()'
|-FunctionDecl 0x556389e7bf28 <line:669:1, col:12> col:6 isync 'void ()'
|-FunctionDecl 0x556389e7bfe8 <line:670:1, col:14> col:6 lwfence 'void ()'
|-VarDecl 0x556389e7c0a0 <line:671:1, col:5> col:5 used __unbuffered_cnt 'int'
|-VarDecl 0x556389e7c120 prev 0x556389e7c0a0 <line:672:1, col:24> col:5 used __unbuffered_cnt 'int' cinit
| `-IntegerLiteral 0x556389e7c188 <col:24> 'int' 0
|-VarDecl 0x556389e7c1c0 <line:673:1, col:5> col:5 used __unbuffered_p0_EAX 'int'
|-VarDecl 0x556389e7c240 prev 0x556389e7c1c0 <line:674:1, col:27> col:5 used __unbuffered_p0_EAX 'int' cinit
| `-IntegerLiteral 0x556389e7c2a8 <col:27> 'int' 0
|-VarDecl 0x556389e7c2e0 <line:675:1, col:5> col:5 used __unbuffered_p1_EAX 'int'
|-VarDecl 0x556389e7c360 prev 0x556389e7c2e0 <line:676:1, col:27> col:5 used __unbuffered_p1_EAX 'int' cinit
| `-IntegerLiteral 0x556389e7c3c8 <col:27> 'int' 0
|-VarDecl 0x556389e7c400 <line:677:1, col:5> col:5 used __unbuffered_p2_EAX 'int'
|-VarDecl 0x556389e7c480 prev 0x556389e7c400 <line:678:1, col:27> col:5 used __unbuffered_p2_EAX 'int' cinit
| `-IntegerLiteral 0x556389e7c4e8 <col:27> 'int' 0
|-VarDecl 0x556389e7c518 <line:679:1, col:7> col:7 used main$tmp_guard0 '_Bool'
|-VarDecl 0x556389e7c590 <line:680:1, col:7> col:7 used main$tmp_guard1 '_Bool'
|-VarDecl 0x556389e7c610 <line:681:1, col:5> col:5 used x 'int'
|-VarDecl 0x556389e7c690 prev 0x556389e7c610 <line:682:1, col:9> col:5 used x 'int' cinit
| `-IntegerLiteral 0x556389e7c6f8 <col:9> 'int' 0
|-VarDecl 0x556389e7c730 <line:683:1, col:5> col:5 used y 'int'
|-VarDecl 0x556389e7c7b0 prev 0x556389e7c730 <line:684:1, col:9> col:5 used y 'int' cinit
| `-IntegerLiteral 0x556389e7c818 <col:9> 'int' 0
|-VarDecl 0x556389e7c850 <line:685:1, col:5> col:5 used z 'int'
|-VarDecl 0x556389e7c8d0 prev 0x556389e7c850 <line:686:1, col:9> col:5 used z 'int' cinit
| `-IntegerLiteral 0x556389e7c938 <col:9> 'int' 0
|-VarDecl 0x556389e7c968 <line:687:1, col:7> col:7 used z$flush_delayed '_Bool'
|-VarDecl 0x556389e7c9e8 <line:688:1, col:5> col:5 used z$mem_tmp 'int'
|-VarDecl 0x556389e7ca60 <line:689:1, col:7> col:7 used z$r_buff0_thd0 '_Bool'
|-VarDecl 0x556389e7cb00 <line:690:1, col:7> col:7 used z$r_buff0_thd1 '_Bool'
|-VarDecl 0x556389e7cb78 <line:691:1, col:7> col:7 used z$r_buff0_thd2 '_Bool'
|-VarDecl 0x556389e7cbf0 <line:692:1, col:7> col:7 used z$r_buff0_thd3 '_Bool'
|-VarDecl 0x556389e7cc68 <line:693:1, col:7> col:7 used z$r_buff1_thd0 '_Bool'
|-VarDecl 0x556389e7cce0 <line:694:1, col:7> col:7 used z$r_buff1_thd1 '_Bool'
|-VarDecl 0x556389e7cd58 <line:695:1, col:7> col:7 used z$r_buff1_thd2 '_Bool'
|-VarDecl 0x556389e7cdd0 <line:696:1, col:7> col:7 used z$r_buff1_thd3 '_Bool'
|-VarDecl 0x556389e7ce48 <line:697:1, col:7> col:7 z$read_delayed '_Bool'
|-VarDecl 0x556389e7cec8 <line:698:1, col:6> col:6 z$read_delayed_var 'int *'
|-VarDecl 0x556389e7cf48 <line:699:1, col:5> col:5 used z$w_buff0 'int'
|-VarDecl 0x556389e7cfc0 <line:700:1, col:7> col:7 used z$w_buff0_used '_Bool'
|-VarDecl 0x556389e7d040 <line:701:1, col:5> col:5 used z$w_buff1 'int'
|-VarDecl 0x556389e7d0b8 <line:702:1, col:7> col:7 used z$w_buff1_used '_Bool'
|-VarDecl 0x556389e7d130 <line:703:1, col:7> col:7 used weak$$choice0 '_Bool'
|-VarDecl 0x556389e7d1a8 <line:704:1, col:7> col:7 used weak$$choice2 '_Bool'
|-FunctionDecl 0x556389e7d2c0 prev 0x556389e7baf0 <line:705:1, line:733:1> line:705:8 used P0 'void *(void *)'
| |-ParmVarDecl 0x556389e7d228 <col:11, col:17> col:17 arg 'void *'
| `-CompoundStmt 0x556389e7eb20 <line:706:1, line:733:1>
|   |-CallExpr 0x556389e7d3d8 <line:707:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x556389e7d3c0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x556389e7d368 <col:3> 'void ()' Function 0x556389e22e40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x556389e7d450 <line:708:3, col:15> 'int' '='
|   | |-DeclRefExpr 0x556389e7d3f8 <col:3> 'int' lvalue Var 0x556389e7d040 'z$w_buff1' 'int'
|   | `-ImplicitCastExpr 0x556389e7d438 <col:15> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x556389e7d418 <col:15> 'int' lvalue Var 0x556389e7cf48 'z$w_buff0' 'int'
|   |-BinaryOperator 0x556389e7d4b0 <line:709:3, col:15> 'int' '='
|   | |-DeclRefExpr 0x556389e7d470 <col:3> 'int' lvalue Var 0x556389e7cf48 'z$w_buff0' 'int'
|   | `-IntegerLiteral 0x556389e7d490 <col:15> 'int' 1
|   |-BinaryOperator 0x556389e7d528 <line:710:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x556389e7d4d0 <col:3> '_Bool' lvalue Var 0x556389e7d0b8 'z$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x556389e7d510 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x556389e7d4f0 <col:20> '_Bool' lvalue Var 0x556389e7cfc0 'z$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x556389e7d5c0 <line:711:3, col:27> '_Bool' '='
|   | |-DeclRefExpr 0x556389e7d548 <col:3> '_Bool' lvalue Var 0x556389e7cfc0 'z$w_buff0_used' '_Bool'
|   | `-CStyleCastExpr 0x556389e7d598 <col:20, col:27> '_Bool' <IntegralToBoolean>
|   |   `-IntegerLiteral 0x556389e7d568 <col:27> 'int' 1
|   |-CallExpr 0x556389e7d748 <line:712:3, col:56> 'void'
|   | |-ImplicitCastExpr 0x556389e7d730 <col:3> 'void (*)(int)' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x556389e7d5e0 <col:3> 'void (int)' Function 0x556389e22bc8 '__VERIFIER_assert' 'void (int)'
|   | `-UnaryOperator 0x556389e7d6e0 <col:21, col:55> 'int' prefix '!' cannot overflow
|   |   `-ParenExpr 0x556389e7d6c0 <col:22, col:55> 'int'
|   |     `-BinaryOperator 0x556389e7d6a0 <col:23, col:41> 'int' '&&'
|   |       |-ImplicitCastExpr 0x556389e7d658 <col:23> 'int' <IntegralCast>
|   |       | `-ImplicitCastExpr 0x556389e7d640 <col:23> '_Bool' <LValueToRValue>
|   |       |   `-DeclRefExpr 0x556389e7d600 <col:23> '_Bool' lvalue Var 0x556389e7d0b8 'z$w_buff1_used' '_Bool'
|   |       `-ImplicitCastExpr 0x556389e7d688 <col:41> 'int' <IntegralCast>
|   |         `-ImplicitCastExpr 0x556389e7d670 <col:41> '_Bool' <LValueToRValue>
|   |           `-DeclRefExpr 0x556389e7d620 <col:41> '_Bool' lvalue Var 0x556389e7cfc0 'z$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x556389e7d7c8 <line:713:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x556389e7d770 <col:3> '_Bool' lvalue Var 0x556389e7cc68 'z$r_buff1_thd0' '_Bool'
|   | `-ImplicitCastExpr 0x556389e7d7b0 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x556389e7d790 <col:20> '_Bool' lvalue Var 0x556389e7ca60 'z$r_buff0_thd0' '_Bool'
|   |-BinaryOperator 0x556389e7d840 <line:714:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x556389e7d7e8 <col:3> '_Bool' lvalue Var 0x556389e7cce0 'z$r_buff1_thd1' '_Bool'
|   | `-ImplicitCastExpr 0x556389e7d828 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x556389e7d808 <col:20> '_Bool' lvalue Var 0x556389e7cb00 'z$r_buff0_thd1' '_Bool'
|   |-BinaryOperator 0x556389e7d8b8 <line:715:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x556389e7d860 <col:3> '_Bool' lvalue Var 0x556389e7cd58 'z$r_buff1_thd2' '_Bool'
|   | `-ImplicitCastExpr 0x556389e7d8a0 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x556389e7d880 <col:20> '_Bool' lvalue Var 0x556389e7cb78 'z$r_buff0_thd2' '_Bool'
|   |-BinaryOperator 0x556389e7d930 <line:716:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x556389e7d8d8 <col:3> '_Bool' lvalue Var 0x556389e7cdd0 'z$r_buff1_thd3' '_Bool'
|   | `-ImplicitCastExpr 0x556389e7d918 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x556389e7d8f8 <col:20> '_Bool' lvalue Var 0x556389e7cbf0 'z$r_buff0_thd3' '_Bool'
|   |-BinaryOperator 0x556389e7d9c8 <line:717:3, col:27> '_Bool' '='
|   | |-DeclRefExpr 0x556389e7d950 <col:3> '_Bool' lvalue Var 0x556389e7cb00 'z$r_buff0_thd1' '_Bool'
|   | `-CStyleCastExpr 0x556389e7d9a0 <col:20, col:27> '_Bool' <IntegralToBoolean>
|   |   `-IntegerLiteral 0x556389e7d970 <col:27> 'int' 1
|   |-CallExpr 0x556389e7da20 <line:718:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x556389e7da08 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x556389e7d9e8 <col:3> 'void ()' Function 0x556389e22f00 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x556389e7da78 <line:719:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x556389e7da60 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x556389e7da40 <col:3> 'void ()' Function 0x556389e22e40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x556389e7db10 <line:720:3, col:25> 'int' '='
|   | |-DeclRefExpr 0x556389e7da98 <col:3> 'int' lvalue Var 0x556389e7c240 '__unbuffered_p0_EAX' 'int'
|   | `-ImplicitCastExpr 0x556389e7dad8 <col:25> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x556389e7dab8 <col:25> 'int' lvalue Var 0x556389e7c690 'x' 'int'
|   |-CallExpr 0x556389e7db68 <line:721:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x556389e7db50 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x556389e7db30 <col:3> 'void ()' Function 0x556389e22f00 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x556389e7dbc0 <line:722:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x556389e7dba8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x556389e7db88 <col:3> 'void ()' Function 0x556389e22e40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x556389e7dea8 <line:723:3, col:103> 'int' '='
|   | |-DeclRefExpr 0x556389e7dbe0 <col:3> 'int' lvalue Var 0x556389e7c8d0 'z' 'int'
|   | `-ConditionalOperator 0x556389e7de78 <col:7, col:103> 'int'
|   |   |-BinaryOperator 0x556389e7dca0 <col:7, col:25> 'int' '&&'
|   |   | |-ImplicitCastExpr 0x556389e7dc58 <col:7> 'int' <IntegralCast>
|   |   | | `-ImplicitCastExpr 0x556389e7dc40 <col:7> '_Bool' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x556389e7dc00 <col:7> '_Bool' lvalue Var 0x556389e7cfc0 'z$w_buff0_used' '_Bool'
|   |   | `-ImplicitCastExpr 0x556389e7dc88 <col:25> 'int' <IntegralCast>
|   |   |   `-ImplicitCastExpr 0x556389e7dc70 <col:25> '_Bool' <LValueToRValue>
|   |   |     `-DeclRefExpr 0x556389e7dc20 <col:25> '_Bool' lvalue Var 0x556389e7cb00 'z$r_buff0_thd1' '_Bool'
|   |   |-ImplicitCastExpr 0x556389e7de60 <col:42> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x556389e7dcc0 <col:42> 'int' lvalue Var 0x556389e7cf48 'z$w_buff0' 'int'
|   |   `-ParenExpr 0x556389e7de40 <col:54, col:103> 'int'
|   |     `-ConditionalOperator 0x556389e7de10 <col:55, col:102> 'int'
|   |       |-BinaryOperator 0x556389e7dd80 <col:55, col:73> 'int' '&&'
|   |       | |-ImplicitCastExpr 0x556389e7dd38 <col:55> 'int' <IntegralCast>
|   |       | | `-ImplicitCastExpr 0x556389e7dd20 <col:55> '_Bool' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x556389e7dce0 <col:55> '_Bool' lvalue Var 0x556389e7d0b8 'z$w_buff1_used' '_Bool'
|   |       | `-ImplicitCastExpr 0x556389e7dd68 <col:73> 'int' <IntegralCast>
|   |       |   `-ImplicitCastExpr 0x556389e7dd50 <col:73> '_Bool' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x556389e7dd00 <col:73> '_Bool' lvalue Var 0x556389e7cce0 'z$r_buff1_thd1' '_Bool'
|   |       |-ImplicitCastExpr 0x556389e7dde0 <col:90> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x556389e7dda0 <col:90> 'int' lvalue Var 0x556389e7d040 'z$w_buff1' 'int'
|   |       `-ImplicitCastExpr 0x556389e7ddf8 <col:102> 'int' <LValueToRValue>
|   |         `-DeclRefExpr 0x556389e7ddc0 <col:102> 'int' lvalue Var 0x556389e7c8d0 'z' 'int'
|   |-BinaryOperator 0x556389e7e0b0 <line:724:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x556389e7dec8 <col:3> '_Bool' lvalue Var 0x556389e7cfc0 'z$w_buff0_used' '_Bool'
|   | `-ImplicitCastExpr 0x556389e7e098 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x556389e7e068 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x556389e7df88 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x556389e7df40 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x556389e7df28 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x556389e7dee8 <col:20> '_Bool' lvalue Var 0x556389e7cfc0 'z$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x556389e7df70 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x556389e7df58 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x556389e7df08 <col:38> '_Bool' lvalue Var 0x556389e7cb00 'z$r_buff0_thd1' '_Bool'
|   |     |-ImplicitCastExpr 0x556389e7e020 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x556389e7dfd8 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x556389e7dfa8 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x556389e7e050 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x556389e7e038 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x556389e7e000 <col:66> '_Bool' lvalue Var 0x556389e7cfc0 'z$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x556389e7e398 <line:725:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x556389e7e0d0 <col:3> '_Bool' lvalue Var 0x556389e7d0b8 'z$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x556389e7e380 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x556389e7e350 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x556389e7e270 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x556389e7e190 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x556389e7e148 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x556389e7e130 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x556389e7e0f0 <col:20> '_Bool' lvalue Var 0x556389e7cfc0 'z$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x556389e7e178 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x556389e7e160 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x556389e7e110 <col:38> '_Bool' lvalue Var 0x556389e7cb00 'z$r_buff0_thd1' '_Bool'
|   |     | `-BinaryOperator 0x556389e7e250 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x556389e7e208 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x556389e7e1f0 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x556389e7e1b0 <col:56> '_Bool' lvalue Var 0x556389e7d0b8 'z$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x556389e7e238 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x556389e7e220 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x556389e7e1d0 <col:74> '_Bool' lvalue Var 0x556389e7cce0 'z$r_buff1_thd1' '_Bool'
|   |     |-ImplicitCastExpr 0x556389e7e308 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x556389e7e2c0 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x556389e7e290 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x556389e7e338 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x556389e7e320 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x556389e7e2e8 <col:102> '_Bool' lvalue Var 0x556389e7d0b8 'z$w_buff1_used' '_Bool'
|   |-BinaryOperator 0x556389e7e5a0 <line:726:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x556389e7e3b8 <col:3> '_Bool' lvalue Var 0x556389e7cb00 'z$r_buff0_thd1' '_Bool'
|   | `-ImplicitCastExpr 0x556389e7e588 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x556389e7e558 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x556389e7e478 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x556389e7e430 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x556389e7e418 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x556389e7e3d8 <col:20> '_Bool' lvalue Var 0x556389e7cfc0 'z$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x556389e7e460 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x556389e7e448 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x556389e7e3f8 <col:38> '_Bool' lvalue Var 0x556389e7cb00 'z$r_buff0_thd1' '_Bool'
|   |     |-ImplicitCastExpr 0x556389e7e510 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x556389e7e4c8 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x556389e7e498 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x556389e7e540 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x556389e7e528 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x556389e7e4f0 <col:66> '_Bool' lvalue Var 0x556389e7cb00 'z$r_buff0_thd1' '_Bool'
|   |-BinaryOperator 0x556389e7e888 <line:727:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x556389e7e5c0 <col:3> '_Bool' lvalue Var 0x556389e7cce0 'z$r_buff1_thd1' '_Bool'
|   | `-ImplicitCastExpr 0x556389e7e870 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x556389e7e840 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x556389e7e760 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x556389e7e680 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x556389e7e638 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x556389e7e620 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x556389e7e5e0 <col:20> '_Bool' lvalue Var 0x556389e7cfc0 'z$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x556389e7e668 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x556389e7e650 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x556389e7e600 <col:38> '_Bool' lvalue Var 0x556389e7cb00 'z$r_buff0_thd1' '_Bool'
|   |     | `-BinaryOperator 0x556389e7e740 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x556389e7e6f8 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x556389e7e6e0 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x556389e7e6a0 <col:56> '_Bool' lvalue Var 0x556389e7d0b8 'z$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x556389e7e728 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x556389e7e710 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x556389e7e6c0 <col:74> '_Bool' lvalue Var 0x556389e7cce0 'z$r_buff1_thd1' '_Bool'
|   |     |-ImplicitCastExpr 0x556389e7e7f8 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x556389e7e7b0 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x556389e7e780 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x556389e7e828 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x556389e7e810 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x556389e7e7d8 <col:102> '_Bool' lvalue Var 0x556389e7cce0 'z$r_buff1_thd1' '_Bool'
|   |-CallExpr 0x556389e7e8e0 <line:728:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x556389e7e8c8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x556389e7e8a8 <col:3> 'void ()' Function 0x556389e22f00 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x556389e7e938 <line:729:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x556389e7e920 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x556389e7e900 <col:3> 'void ()' Function 0x556389e22e40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x556389e7e9f0 <line:730:3, col:41> 'int' '='
|   | |-DeclRefExpr 0x556389e7e958 <col:3> 'int' lvalue Var 0x556389e7c120 '__unbuffered_cnt' 'int'
|   | `-BinaryOperator 0x556389e7e9d0 <col:22, col:41> 'int' '+'
|   |   |-ImplicitCastExpr 0x556389e7e9b8 <col:22> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x556389e7e978 <col:22> 'int' lvalue Var 0x556389e7c120 '__unbuffered_cnt' 'int'
|   |   `-IntegerLiteral 0x556389e7e998 <col:41> 'int' 1
|   |-CallExpr 0x556389e7ea48 <line:731:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x556389e7ea30 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x556389e7ea10 <col:3> 'void ()' Function 0x556389e22f00 '__VERIFIER_atomic_end' 'void ()'
|   `-ReturnStmt 0x556389e7eaf8 <line:732:3, col:36>
|     `-CallExpr 0x556389e7ead8 <col:10, col:36> 'void *'
|       `-ImplicitCastExpr 0x556389e7eac0 <col:10> 'void *(*)(void)' <FunctionToPointerDecay>
|         `-DeclRefExpr 0x556389e7ea68 <col:10> 'void *(void)' Function 0x556389e22958 '__VERIFIER_nondet_pointer' 'void *(void)'
|-FunctionDecl 0x556389e7ecb0 prev 0x556389e7bc48 <line:734:1, line:753:1> line:734:8 used P1 'void *(void *)'
| |-ParmVarDecl 0x556389e7ec18 <col:11, col:17> col:17 arg 'void *'
| `-CompoundStmt 0x556389e7fef0 <line:735:1, line:753:1>
|   |-CallExpr 0x556389e7ed90 <line:736:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x556389e7ed78 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x556389e7ed58 <col:3> 'void ()' Function 0x556389e22e40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x556389e7edf0 <line:737:3, col:7> 'int' '='
|   | |-DeclRefExpr 0x556389e7edb0 <col:3> 'int' lvalue Var 0x556389e7c690 'x' 'int'
|   | `-IntegerLiteral 0x556389e7edd0 <col:7> 'int' 1
|   |-CallExpr 0x556389e7ee48 <line:738:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x556389e7ee30 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x556389e7ee10 <col:3> 'void ()' Function 0x556389e22f00 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x556389e7eea0 <line:739:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x556389e7ee88 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x556389e7ee68 <col:3> 'void ()' Function 0x556389e22e40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x556389e7ef18 <line:740:3, col:25> 'int' '='
|   | |-DeclRefExpr 0x556389e7eec0 <col:3> 'int' lvalue Var 0x556389e7c360 '__unbuffered_p1_EAX' 'int'
|   | `-ImplicitCastExpr 0x556389e7ef00 <col:25> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x556389e7eee0 <col:25> 'int' lvalue Var 0x556389e7c7b0 'y' 'int'
|   |-CallExpr 0x556389e7ef70 <line:741:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x556389e7ef58 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x556389e7ef38 <col:3> 'void ()' Function 0x556389e22f00 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x556389e7efc8 <line:742:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x556389e7efb0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x556389e7ef90 <col:3> 'void ()' Function 0x556389e22e40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x556389e7f2b0 <line:743:3, col:103> 'int' '='
|   | |-DeclRefExpr 0x556389e7efe8 <col:3> 'int' lvalue Var 0x556389e7c8d0 'z' 'int'
|   | `-ConditionalOperator 0x556389e7f280 <col:7, col:103> 'int'
|   |   |-BinaryOperator 0x556389e7f0a8 <col:7, col:25> 'int' '&&'
|   |   | |-ImplicitCastExpr 0x556389e7f060 <col:7> 'int' <IntegralCast>
|   |   | | `-ImplicitCastExpr 0x556389e7f048 <col:7> '_Bool' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x556389e7f008 <col:7> '_Bool' lvalue Var 0x556389e7cfc0 'z$w_buff0_used' '_Bool'
|   |   | `-ImplicitCastExpr 0x556389e7f090 <col:25> 'int' <IntegralCast>
|   |   |   `-ImplicitCastExpr 0x556389e7f078 <col:25> '_Bool' <LValueToRValue>
|   |   |     `-DeclRefExpr 0x556389e7f028 <col:25> '_Bool' lvalue Var 0x556389e7cb78 'z$r_buff0_thd2' '_Bool'
|   |   |-ImplicitCastExpr 0x556389e7f268 <col:42> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x556389e7f0c8 <col:42> 'int' lvalue Var 0x556389e7cf48 'z$w_buff0' 'int'
|   |   `-ParenExpr 0x556389e7f248 <col:54, col:103> 'int'
|   |     `-ConditionalOperator 0x556389e7f218 <col:55, col:102> 'int'
|   |       |-BinaryOperator 0x556389e7f188 <col:55, col:73> 'int' '&&'
|   |       | |-ImplicitCastExpr 0x556389e7f140 <col:55> 'int' <IntegralCast>
|   |       | | `-ImplicitCastExpr 0x556389e7f128 <col:55> '_Bool' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x556389e7f0e8 <col:55> '_Bool' lvalue Var 0x556389e7d0b8 'z$w_buff1_used' '_Bool'
|   |       | `-ImplicitCastExpr 0x556389e7f170 <col:73> 'int' <IntegralCast>
|   |       |   `-ImplicitCastExpr 0x556389e7f158 <col:73> '_Bool' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x556389e7f108 <col:73> '_Bool' lvalue Var 0x556389e7cd58 'z$r_buff1_thd2' '_Bool'
|   |       |-ImplicitCastExpr 0x556389e7f1e8 <col:90> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x556389e7f1a8 <col:90> 'int' lvalue Var 0x556389e7d040 'z$w_buff1' 'int'
|   |       `-ImplicitCastExpr 0x556389e7f200 <col:102> 'int' <LValueToRValue>
|   |         `-DeclRefExpr 0x556389e7f1c8 <col:102> 'int' lvalue Var 0x556389e7c8d0 'z' 'int'
|   |-BinaryOperator 0x556389e7f4b8 <line:744:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x556389e7f2d0 <col:3> '_Bool' lvalue Var 0x556389e7cfc0 'z$w_buff0_used' '_Bool'
|   | `-ImplicitCastExpr 0x556389e7f4a0 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x556389e7f470 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x556389e7f390 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x556389e7f348 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x556389e7f330 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x556389e7f2f0 <col:20> '_Bool' lvalue Var 0x556389e7cfc0 'z$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x556389e7f378 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x556389e7f360 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x556389e7f310 <col:38> '_Bool' lvalue Var 0x556389e7cb78 'z$r_buff0_thd2' '_Bool'
|   |     |-ImplicitCastExpr 0x556389e7f428 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x556389e7f3e0 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x556389e7f3b0 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x556389e7f458 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x556389e7f440 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x556389e7f408 <col:66> '_Bool' lvalue Var 0x556389e7cfc0 'z$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x556389e7f7a0 <line:745:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x556389e7f4d8 <col:3> '_Bool' lvalue Var 0x556389e7d0b8 'z$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x556389e7f788 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x556389e7f758 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x556389e7f678 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x556389e7f598 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x556389e7f550 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x556389e7f538 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x556389e7f4f8 <col:20> '_Bool' lvalue Var 0x556389e7cfc0 'z$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x556389e7f580 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x556389e7f568 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x556389e7f518 <col:38> '_Bool' lvalue Var 0x556389e7cb78 'z$r_buff0_thd2' '_Bool'
|   |     | `-BinaryOperator 0x556389e7f658 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x556389e7f610 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x556389e7f5f8 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x556389e7f5b8 <col:56> '_Bool' lvalue Var 0x556389e7d0b8 'z$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x556389e7f640 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x556389e7f628 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x556389e7f5d8 <col:74> '_Bool' lvalue Var 0x556389e7cd58 'z$r_buff1_thd2' '_Bool'
|   |     |-ImplicitCastExpr 0x556389e7f710 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x556389e7f6c8 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x556389e7f698 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x556389e7f740 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x556389e7f728 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x556389e7f6f0 <col:102> '_Bool' lvalue Var 0x556389e7d0b8 'z$w_buff1_used' '_Bool'
|   |-BinaryOperator 0x556389e7f9a8 <line:746:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x556389e7f7c0 <col:3> '_Bool' lvalue Var 0x556389e7cb78 'z$r_buff0_thd2' '_Bool'
|   | `-ImplicitCastExpr 0x556389e7f990 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x556389e7f960 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x556389e7f880 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x556389e7f838 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x556389e7f820 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x556389e7f7e0 <col:20> '_Bool' lvalue Var 0x556389e7cfc0 'z$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x556389e7f868 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x556389e7f850 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x556389e7f800 <col:38> '_Bool' lvalue Var 0x556389e7cb78 'z$r_buff0_thd2' '_Bool'
|   |     |-ImplicitCastExpr 0x556389e7f918 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x556389e7f8d0 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x556389e7f8a0 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x556389e7f948 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x556389e7f930 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x556389e7f8f8 <col:66> '_Bool' lvalue Var 0x556389e7cb78 'z$r_buff0_thd2' '_Bool'
|   |-BinaryOperator 0x556389e7fca8 <line:747:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x556389e7f9c8 <col:3> '_Bool' lvalue Var 0x556389e7cd58 'z$r_buff1_thd2' '_Bool'
|   | `-ImplicitCastExpr 0x556389e7fc90 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x556389e7fc60 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x556389e7fb80 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x556389e7fa88 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x556389e7fa40 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x556389e7fa28 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x556389e7f9e8 <col:20> '_Bool' lvalue Var 0x556389e7cfc0 'z$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x556389e7fa70 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x556389e7fa58 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x556389e7fa08 <col:38> '_Bool' lvalue Var 0x556389e7cb78 'z$r_buff0_thd2' '_Bool'
|   |     | `-BinaryOperator 0x556389e7fb60 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x556389e7fb00 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x556389e7fae8 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x556389e7faa8 <col:56> '_Bool' lvalue Var 0x556389e7d0b8 'z$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x556389e7fb48 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x556389e7fb30 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x556389e7fac8 <col:74> '_Bool' lvalue Var 0x556389e7cd58 'z$r_buff1_thd2' '_Bool'
|   |     |-ImplicitCastExpr 0x556389e7fc18 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x556389e7fbd0 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x556389e7fba0 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x556389e7fc48 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x556389e7fc30 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x556389e7fbf8 <col:102> '_Bool' lvalue Var 0x556389e7cd58 'z$r_buff1_thd2' '_Bool'
|   |-CallExpr 0x556389e7fd00 <line:748:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x556389e7fce8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x556389e7fcc8 <col:3> 'void ()' Function 0x556389e22f00 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x556389e7fd58 <line:749:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x556389e7fd40 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x556389e7fd20 <col:3> 'void ()' Function 0x556389e22e40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x556389e7fe10 <line:750:3, col:41> 'int' '='
|   | |-DeclRefExpr 0x556389e7fd78 <col:3> 'int' lvalue Var 0x556389e7c120 '__unbuffered_cnt' 'int'
|   | `-BinaryOperator 0x556389e7fdf0 <col:22, col:41> 'int' '+'
|   |   |-ImplicitCastExpr 0x556389e7fdd8 <col:22> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x556389e7fd98 <col:22> 'int' lvalue Var 0x556389e7c120 '__unbuffered_cnt' 'int'
|   |   `-IntegerLiteral 0x556389e7fdb8 <col:41> 'int' 1
|   |-CallExpr 0x556389e7fe68 <line:751:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x556389e7fe50 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x556389e7fe30 <col:3> 'void ()' Function 0x556389e22f00 '__VERIFIER_atomic_end' 'void ()'
|   `-ReturnStmt 0x556389e7fee0 <line:752:3, col:36>
|     `-CallExpr 0x556389e7fec0 <col:10, col:36> 'void *'
|       `-ImplicitCastExpr 0x556389e7fea8 <col:10> 'void *(*)(void)' <FunctionToPointerDecay>
|         `-DeclRefExpr 0x556389e7fe88 <col:10> 'void *(void)' Function 0x556389e22958 '__VERIFIER_nondet_pointer' 'void *(void)'
|-FunctionDecl 0x556389e80038 prev 0x556389e7bda0 <line:754:1, line:786:1> line:754:8 used P2 'void *(void *)'
| |-ParmVarDecl 0x556389e7ffa0 <col:11, col:17> col:17 arg 'void *'
| `-CompoundStmt 0x556389e83c30 <line:755:1, line:786:1>
|   |-CallExpr 0x556389e80118 <line:756:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x556389e80100 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x556389e800e0 <col:3> 'void ()' Function 0x556389e22e40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x556389e80178 <line:757:3, col:7> 'int' '='
|   | |-DeclRefExpr 0x556389e80138 <col:3> 'int' lvalue Var 0x556389e7c7b0 'y' 'int'
|   | `-IntegerLiteral 0x556389e80158 <col:7> 'int' 1
|   |-CallExpr 0x556389e801d0 <line:758:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x556389e801b8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x556389e80198 <col:3> 'void ()' Function 0x556389e22f00 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x556389e80228 <line:759:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x556389e80210 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x556389e801f0 <col:3> 'void ()' Function 0x556389e22e40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x556389e802d8 <line:760:3, col:45> '_Bool' '='
|   | |-DeclRefExpr 0x556389e80248 <col:3> '_Bool' lvalue Var 0x556389e7d130 'weak$$choice0' '_Bool'
|   | `-ImplicitCastExpr 0x556389e802c0 <col:19, col:45> '_Bool' <PointerToBoolean>
|   |   `-CallExpr 0x556389e802a0 <col:19, col:45> 'void *'
|   |     `-ImplicitCastExpr 0x556389e80288 <col:19> 'void *(*)(void)' <FunctionToPointerDecay>
|   |       `-DeclRefExpr 0x556389e80268 <col:19> 'void *(void)' Function 0x556389e22958 '__VERIFIER_nondet_pointer' 'void *(void)'
|   |-BinaryOperator 0x556389e80388 <line:761:3, col:45> '_Bool' '='
|   | |-DeclRefExpr 0x556389e802f8 <col:3> '_Bool' lvalue Var 0x556389e7d1a8 'weak$$choice2' '_Bool'
|   | `-ImplicitCastExpr 0x556389e80370 <col:19, col:45> '_Bool' <PointerToBoolean>
|   |   `-CallExpr 0x556389e80350 <col:19, col:45> 'void *'
|   |     `-ImplicitCastExpr 0x556389e80338 <col:19> 'void *(*)(void)' <FunctionToPointerDecay>
|   |       `-DeclRefExpr 0x556389e80318 <col:19> 'void *(void)' Function 0x556389e22958 '__VERIFIER_nondet_pointer' 'void *(void)'
|   |-BinaryOperator 0x556389e80400 <line:762:3, col:21> '_Bool' '='
|   | |-DeclRefExpr 0x556389e803a8 <col:3> '_Bool' lvalue Var 0x556389e7c968 'z$flush_delayed' '_Bool'
|   | `-ImplicitCastExpr 0x556389e803e8 <col:21> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x556389e803c8 <col:21> '_Bool' lvalue Var 0x556389e7d1a8 'weak$$choice2' '_Bool'
|   |-BinaryOperator 0x556389e80478 <line:763:3, col:15> 'int' '='
|   | |-DeclRefExpr 0x556389e80420 <col:3> 'int' lvalue Var 0x556389e7c9e8 'z$mem_tmp' 'int'
|   | `-ImplicitCastExpr 0x556389e80460 <col:15> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x556389e80440 <col:15> 'int' lvalue Var 0x556389e7c8d0 'z' 'int'
|   |-BinaryOperator 0x556389e808b0 <line:764:3, col:162> 'int' '='
|   | |-DeclRefExpr 0x556389e80498 <col:3> 'int' lvalue Var 0x556389e7c8d0 'z' 'int'
|   | `-ConditionalOperator 0x556389e80880 <col:7, col:162> 'int'
|   |   |-BinaryOperator 0x556389e806a8 <col:7, col:84> 'int' '||'
|   |   | |-BinaryOperator 0x556389e805c8 <col:7, col:46> 'int' '||'
|   |   | | |-UnaryOperator 0x556389e804f0 <col:7, col:8> 'int' prefix '!' cannot overflow
|   |   | | | `-ImplicitCastExpr 0x556389e804d8 <col:8> '_Bool' <LValueToRValue>
|   |   | | |   `-DeclRefExpr 0x556389e804b8 <col:8> '_Bool' lvalue Var 0x556389e7cfc0 'z$w_buff0_used' '_Bool'
|   |   | | `-BinaryOperator 0x556389e805a8 <col:26, col:46> 'int' '&&'
|   |   | |   |-UnaryOperator 0x556389e80540 <col:26, col:27> 'int' prefix '!' cannot overflow
|   |   | |   | `-ImplicitCastExpr 0x556389e80528 <col:27> '_Bool' <LValueToRValue>
|   |   | |   |   `-DeclRefExpr 0x556389e80508 <col:27> '_Bool' lvalue Var 0x556389e7cbf0 'z$r_buff0_thd3' '_Bool'
|   |   | |   `-UnaryOperator 0x556389e80590 <col:45, col:46> 'int' prefix '!' cannot overflow
|   |   | |     `-ImplicitCastExpr 0x556389e80578 <col:46> '_Bool' <LValueToRValue>
|   |   | |       `-DeclRefExpr 0x556389e80558 <col:46> '_Bool' lvalue Var 0x556389e7d0b8 'z$w_buff1_used' '_Bool'
|   |   | `-BinaryOperator 0x556389e80688 <col:64, col:84> 'int' '&&'
|   |   |   |-UnaryOperator 0x556389e80620 <col:64, col:65> 'int' prefix '!' cannot overflow
|   |   |   | `-ImplicitCastExpr 0x556389e80608 <col:65> '_Bool' <LValueToRValue>
|   |   |   |   `-DeclRefExpr 0x556389e805e8 <col:65> '_Bool' lvalue Var 0x556389e7cbf0 'z$r_buff0_thd3' '_Bool'
|   |   |   `-UnaryOperator 0x556389e80670 <col:83, col:84> 'int' prefix '!' cannot overflow
|   |   |     `-ImplicitCastExpr 0x556389e80658 <col:84> '_Bool' <LValueToRValue>
|   |   |       `-DeclRefExpr 0x556389e80638 <col:84> '_Bool' lvalue Var 0x556389e7cdd0 'z$r_buff1_thd3' '_Bool'
|   |   |-ImplicitCastExpr 0x556389e80868 <col:101> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x556389e806c8 <col:101> 'int' lvalue Var 0x556389e7c8d0 'z' 'int'
|   |   `-ParenExpr 0x556389e80848 <col:105, col:162> 'int'
|   |     `-ConditionalOperator 0x556389e80818 <col:106, col:153> 'int'
|   |       |-BinaryOperator 0x556389e80788 <col:106, col:124> 'int' '&&'
|   |       | |-ImplicitCastExpr 0x556389e80740 <col:106> 'int' <IntegralCast>
|   |       | | `-ImplicitCastExpr 0x556389e80728 <col:106> '_Bool' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x556389e806e8 <col:106> '_Bool' lvalue Var 0x556389e7cfc0 'z$w_buff0_used' '_Bool'
|   |       | `-ImplicitCastExpr 0x556389e80770 <col:124> 'int' <IntegralCast>
|   |       |   `-ImplicitCastExpr 0x556389e80758 <col:124> '_Bool' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x556389e80708 <col:124> '_Bool' lvalue Var 0x556389e7cbf0 'z$r_buff0_thd3' '_Bool'
|   |       |-ImplicitCastExpr 0x556389e807e8 <col:141> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x556389e807a8 <col:141> 'int' lvalue Var 0x556389e7cf48 'z$w_buff0' 'int'
|   |       `-ImplicitCastExpr 0x556389e80800 <col:153> 'int' <LValueToRValue>
|   |         `-DeclRefExpr 0x556389e807c8 <col:153> 'int' lvalue Var 0x556389e7d040 'z$w_buff1' 'int'
|   |-BinaryOperator 0x556389e80de0 <line:765:3, col:208> 'int' '='
|   | |-DeclRefExpr 0x556389e808d0 <col:3> 'int' lvalue Var 0x556389e7cf48 'z$w_buff0' 'int'
|   | `-ConditionalOperator 0x556389e80db0 <col:15, col:208> 'int'
|   |   |-ImplicitCastExpr 0x556389e80d80 <col:15> 'int' <IntegralCast>
|   |   | `-ImplicitCastExpr 0x556389e80d68 <col:15> '_Bool' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x556389e808f0 <col:15> '_Bool' lvalue Var 0x556389e7d1a8 'weak$$choice2' '_Bool'
|   |   |-ImplicitCastExpr 0x556389e80d98 <col:31> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x556389e80910 <col:31> 'int' lvalue Var 0x556389e7cf48 'z$w_buff0' 'int'
|   |   `-ParenExpr 0x556389e80d48 <col:43, col:208> 'int'
|   |     `-ConditionalOperator 0x556389e80d18 <col:44, col:207> 'int'
|   |       |-BinaryOperator 0x556389e80b40 <col:44, col:121> 'int' '||'
|   |       | |-BinaryOperator 0x556389e80a40 <col:44, col:83> 'int' '||'
|   |       | | |-UnaryOperator 0x556389e80968 <col:44, col:45> 'int' prefix '!' cannot overflow
|   |       | | | `-ImplicitCastExpr 0x556389e80950 <col:45> '_Bool' <LValueToRValue>
|   |       | | |   `-DeclRefExpr 0x556389e80930 <col:45> '_Bool' lvalue Var 0x556389e7cfc0 'z$w_buff0_used' '_Bool'
|   |       | | `-BinaryOperator 0x556389e80a20 <col:63, col:83> 'int' '&&'
|   |       | |   |-UnaryOperator 0x556389e809b8 <col:63, col:64> 'int' prefix '!' cannot overflow
|   |       | |   | `-ImplicitCastExpr 0x556389e809a0 <col:64> '_Bool' <LValueToRValue>
|   |       | |   |   `-DeclRefExpr 0x556389e80980 <col:64> '_Bool' lvalue Var 0x556389e7cbf0 'z$r_buff0_thd3' '_Bool'
|   |       | |   `-UnaryOperator 0x556389e80a08 <col:82, col:83> 'int' prefix '!' cannot overflow
|   |       | |     `-ImplicitCastExpr 0x556389e809f0 <col:83> '_Bool' <LValueToRValue>
|   |       | |       `-DeclRefExpr 0x556389e809d0 <col:83> '_Bool' lvalue Var 0x556389e7d0b8 'z$w_buff1_used' '_Bool'
|   |       | `-BinaryOperator 0x556389e80b00 <col:101, col:121> 'int' '&&'
|   |       |   |-UnaryOperator 0x556389e80a98 <col:101, col:102> 'int' prefix '!' cannot overflow
|   |       |   | `-ImplicitCastExpr 0x556389e80a80 <col:102> '_Bool' <LValueToRValue>
|   |       |   |   `-DeclRefExpr 0x556389e80a60 <col:102> '_Bool' lvalue Var 0x556389e7cbf0 'z$r_buff0_thd3' '_Bool'
|   |       |   `-UnaryOperator 0x556389e80ae8 <col:120, col:121> 'int' prefix '!' cannot overflow
|   |       |     `-ImplicitCastExpr 0x556389e80ad0 <col:121> '_Bool' <LValueToRValue>
|   |       |       `-DeclRefExpr 0x556389e80ab0 <col:121> '_Bool' lvalue Var 0x556389e7cdd0 'z$r_buff1_thd3' '_Bool'
|   |       |-ImplicitCastExpr 0x556389e80d00 <col:138> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x556389e80b60 <col:138> 'int' lvalue Var 0x556389e7cf48 'z$w_buff0' 'int'
|   |       `-ParenExpr 0x556389e80ce0 <col:150, col:207> 'int'
|   |         `-ConditionalOperator 0x556389e80cb0 <col:151, col:198> 'int'
|   |           |-BinaryOperator 0x556389e80c20 <col:151, col:169> 'int' '&&'
|   |           | |-ImplicitCastExpr 0x556389e80bd8 <col:151> 'int' <IntegralCast>
|   |           | | `-ImplicitCastExpr 0x556389e80bc0 <col:151> '_Bool' <LValueToRValue>
|   |           | |   `-DeclRefExpr 0x556389e80b80 <col:151> '_Bool' lvalue Var 0x556389e7cfc0 'z$w_buff0_used' '_Bool'
|   |           | `-ImplicitCastExpr 0x556389e80c08 <col:169> 'int' <IntegralCast>
|   |           |   `-ImplicitCastExpr 0x556389e80bf0 <col:169> '_Bool' <LValueToRValue>
|   |           |     `-DeclRefExpr 0x556389e80ba0 <col:169> '_Bool' lvalue Var 0x556389e7cbf0 'z$r_buff0_thd3' '_Bool'
|   |           |-ImplicitCastExpr 0x556389e80c80 <col:186> 'int' <LValueToRValue>
|   |           | `-DeclRefExpr 0x556389e80c40 <col:186> 'int' lvalue Var 0x556389e7cf48 'z$w_buff0' 'int'
|   |           `-ImplicitCastExpr 0x556389e80c98 <col:198> 'int' <LValueToRValue>
|   |             `-DeclRefExpr 0x556389e80c60 <col:198> 'int' lvalue Var 0x556389e7cf48 'z$w_buff0' 'int'
|   |-BinaryOperator 0x556389e812f0 <line:766:3, col:208> 'int' '='
|   | |-DeclRefExpr 0x556389e80e00 <col:3> 'int' lvalue Var 0x556389e7d040 'z$w_buff1' 'int'
|   | `-ConditionalOperator 0x556389e812c0 <col:15, col:208> 'int'
|   |   |-ImplicitCastExpr 0x556389e81290 <col:15> 'int' <IntegralCast>
|   |   | `-ImplicitCastExpr 0x556389e81278 <col:15> '_Bool' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x556389e80e20 <col:15> '_Bool' lvalue Var 0x556389e7d1a8 'weak$$choice2' '_Bool'
|   |   |-ImplicitCastExpr 0x556389e812a8 <col:31> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x556389e80e40 <col:31> 'int' lvalue Var 0x556389e7d040 'z$w_buff1' 'int'
|   |   `-ParenExpr 0x556389e81258 <col:43, col:208> 'int'
|   |     `-ConditionalOperator 0x556389e81228 <col:44, col:207> 'int'
|   |       |-BinaryOperator 0x556389e81050 <col:44, col:121> 'int' '||'
|   |       | |-BinaryOperator 0x556389e80f70 <col:44, col:83> 'int' '||'
|   |       | | |-UnaryOperator 0x556389e80e98 <col:44, col:45> 'int' prefix '!' cannot overflow
|   |       | | | `-ImplicitCastExpr 0x556389e80e80 <col:45> '_Bool' <LValueToRValue>
|   |       | | |   `-DeclRefExpr 0x556389e80e60 <col:45> '_Bool' lvalue Var 0x556389e7cfc0 'z$w_buff0_used' '_Bool'
|   |       | | `-BinaryOperator 0x556389e80f50 <col:63, col:83> 'int' '&&'
|   |       | |   |-UnaryOperator 0x556389e80ee8 <col:63, col:64> 'int' prefix '!' cannot overflow
|   |       | |   | `-ImplicitCastExpr 0x556389e80ed0 <col:64> '_Bool' <LValueToRValue>
|   |       | |   |   `-DeclRefExpr 0x556389e80eb0 <col:64> '_Bool' lvalue Var 0x556389e7cbf0 'z$r_buff0_thd3' '_Bool'
|   |       | |   `-UnaryOperator 0x556389e80f38 <col:82, col:83> 'int' prefix '!' cannot overflow
|   |       | |     `-ImplicitCastExpr 0x556389e80f20 <col:83> '_Bool' <LValueToRValue>
|   |       | |       `-DeclRefExpr 0x556389e80f00 <col:83> '_Bool' lvalue Var 0x556389e7d0b8 'z$w_buff1_used' '_Bool'
|   |       | `-BinaryOperator 0x556389e81030 <col:101, col:121> 'int' '&&'
|   |       |   |-UnaryOperator 0x556389e80fc8 <col:101, col:102> 'int' prefix '!' cannot overflow
|   |       |   | `-ImplicitCastExpr 0x556389e80fb0 <col:102> '_Bool' <LValueToRValue>
|   |       |   |   `-DeclRefExpr 0x556389e80f90 <col:102> '_Bool' lvalue Var 0x556389e7cbf0 'z$r_buff0_thd3' '_Bool'
|   |       |   `-UnaryOperator 0x556389e81018 <col:120, col:121> 'int' prefix '!' cannot overflow
|   |       |     `-ImplicitCastExpr 0x556389e81000 <col:121> '_Bool' <LValueToRValue>
|   |       |       `-DeclRefExpr 0x556389e80fe0 <col:121> '_Bool' lvalue Var 0x556389e7cdd0 'z$r_buff1_thd3' '_Bool'
|   |       |-ImplicitCastExpr 0x556389e81210 <col:138> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x556389e81070 <col:138> 'int' lvalue Var 0x556389e7d040 'z$w_buff1' 'int'
|   |       `-ParenExpr 0x556389e811f0 <col:150, col:207> 'int'
|   |         `-ConditionalOperator 0x556389e811c0 <col:151, col:198> 'int'
|   |           |-BinaryOperator 0x556389e81130 <col:151, col:169> 'int' '&&'
|   |           | |-ImplicitCastExpr 0x556389e810e8 <col:151> 'int' <IntegralCast>
|   |           | | `-ImplicitCastExpr 0x556389e810d0 <col:151> '_Bool' <LValueToRValue>
|   |           | |   `-DeclRefExpr 0x556389e81090 <col:151> '_Bool' lvalue Var 0x556389e7cfc0 'z$w_buff0_used' '_Bool'
|   |           | `-ImplicitCastExpr 0x556389e81118 <col:169> 'int' <IntegralCast>
|   |           |   `-ImplicitCastExpr 0x556389e81100 <col:169> '_Bool' <LValueToRValue>
|   |           |     `-DeclRefExpr 0x556389e810b0 <col:169> '_Bool' lvalue Var 0x556389e7cbf0 'z$r_buff0_thd3' '_Bool'
|   |           |-ImplicitCastExpr 0x556389e81190 <col:186> 'int' <LValueToRValue>
|   |           | `-DeclRefExpr 0x556389e81150 <col:186> 'int' lvalue Var 0x556389e7d040 'z$w_buff1' 'int'
|   |           `-ImplicitCastExpr 0x556389e811a8 <col:198> 'int' <LValueToRValue>
|   |             `-DeclRefExpr 0x556389e81170 <col:198> 'int' lvalue Var 0x556389e7d040 'z$w_buff1' 'int'
|   |-BinaryOperator 0x556389e81898 <line:767:3, col:227> '_Bool' '='
|   | |-DeclRefExpr 0x556389e81310 <col:3> '_Bool' lvalue Var 0x556389e7cfc0 'z$w_buff0_used' '_Bool'
|   | `-ImplicitCastExpr 0x556389e81880 <col:20, col:227> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x556389e81850 <col:20, col:227> 'int'
|   |     |-ImplicitCastExpr 0x556389e81808 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x556389e817f0 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x556389e81330 <col:20> '_Bool' lvalue Var 0x556389e7d1a8 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x556389e81838 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x556389e81820 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x556389e81350 <col:36> '_Bool' lvalue Var 0x556389e7cfc0 'z$w_buff0_used' '_Bool'
|   |     `-ParenExpr 0x556389e817d0 <col:53, col:227> 'int'
|   |       `-ConditionalOperator 0x556389e817a0 <col:54, col:226> 'int'
|   |         |-BinaryOperator 0x556389e81560 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x556389e81480 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x556389e813a8 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x556389e81390 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x556389e81370 <col:55> '_Bool' lvalue Var 0x556389e7cfc0 'z$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x556389e81460 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x556389e813f8 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x556389e813e0 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x556389e813c0 <col:74> '_Bool' lvalue Var 0x556389e7cbf0 'z$r_buff0_thd3' '_Bool'
|   |         | |   `-UnaryOperator 0x556389e81448 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x556389e81430 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x556389e81410 <col:93> '_Bool' lvalue Var 0x556389e7d0b8 'z$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x556389e81540 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x556389e814d8 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x556389e814c0 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x556389e814a0 <col:112> '_Bool' lvalue Var 0x556389e7cbf0 'z$r_buff0_thd3' '_Bool'
|   |         |   `-UnaryOperator 0x556389e81528 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x556389e81510 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x556389e814f0 <col:131> '_Bool' lvalue Var 0x556389e7cdd0 'z$r_buff1_thd3' '_Bool'
|   |         |-ImplicitCastExpr 0x556389e81788 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x556389e81770 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x556389e81580 <col:148> '_Bool' lvalue Var 0x556389e7cfc0 'z$w_buff0_used' '_Bool'
|   |         `-ParenExpr 0x556389e81750 <col:165, col:226> 'int'
|   |           `-ConditionalOperator 0x556389e81720 <col:166, col:212> 'int'
|   |             |-BinaryOperator 0x556389e81640 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x556389e815f8 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x556389e815e0 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x556389e815a0 <col:166> '_Bool' lvalue Var 0x556389e7cfc0 'z$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x556389e81628 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x556389e81610 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x556389e815c0 <col:184> '_Bool' lvalue Var 0x556389e7cbf0 'z$r_buff0_thd3' '_Bool'
|   |             |-ImplicitCastExpr 0x556389e816d8 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x556389e81690 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x556389e81660 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x556389e81708 <col:212> 'int' <IntegralCast>
|   |               `-ImplicitCastExpr 0x556389e816f0 <col:212> '_Bool' <LValueToRValue>
|   |                 `-DeclRefExpr 0x556389e816b8 <col:212> '_Bool' lvalue Var 0x556389e7cfc0 'z$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x556389e81e88 <line:768:3, col:221> '_Bool' '='
|   | |-DeclRefExpr 0x556389e818b8 <col:3> '_Bool' lvalue Var 0x556389e7d0b8 'z$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x556389e81e70 <col:20, col:221> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x556389e81e40 <col:20, col:221> 'int'
|   |     |-ImplicitCastExpr 0x556389e81df8 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x556389e81de0 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x556389e818d8 <col:20> '_Bool' lvalue Var 0x556389e7d1a8 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x556389e81e28 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x556389e81e10 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x556389e818f8 <col:36> '_Bool' lvalue Var 0x556389e7d0b8 'z$w_buff1_used' '_Bool'
|   |     `-ParenExpr 0x556389e81dc0 <col:53, col:221> 'int'
|   |       `-ConditionalOperator 0x556389e81d90 <col:54, col:220> 'int'
|   |         |-BinaryOperator 0x556389e81b08 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x556389e81a28 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x556389e81950 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x556389e81938 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x556389e81918 <col:55> '_Bool' lvalue Var 0x556389e7cfc0 'z$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x556389e81a08 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x556389e819a0 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x556389e81988 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x556389e81968 <col:74> '_Bool' lvalue Var 0x556389e7cbf0 'z$r_buff0_thd3' '_Bool'
|   |         | |   `-UnaryOperator 0x556389e819f0 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x556389e819d8 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x556389e819b8 <col:93> '_Bool' lvalue Var 0x556389e7d0b8 'z$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x556389e81ae8 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x556389e81a80 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x556389e81a68 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x556389e81a48 <col:112> '_Bool' lvalue Var 0x556389e7cbf0 'z$r_buff0_thd3' '_Bool'
|   |         |   `-UnaryOperator 0x556389e81ad0 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x556389e81ab8 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x556389e81a98 <col:131> '_Bool' lvalue Var 0x556389e7cdd0 'z$r_buff1_thd3' '_Bool'
|   |         |-ImplicitCastExpr 0x556389e81d78 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x556389e81d60 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x556389e81b50 <col:148> '_Bool' lvalue Var 0x556389e7d0b8 'z$w_buff1_used' '_Bool'
|   |         `-ParenExpr 0x556389e81d40 <col:165, col:220> 'int'
|   |           `-ConditionalOperator 0x556389e81d10 <col:166, col:219> 'int'
|   |             |-BinaryOperator 0x556389e81c10 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x556389e81bc8 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x556389e81bb0 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x556389e81b70 <col:166> '_Bool' lvalue Var 0x556389e7cfc0 'z$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x556389e81bf8 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x556389e81be0 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x556389e81b90 <col:184> '_Bool' lvalue Var 0x556389e7cbf0 'z$r_buff0_thd3' '_Bool'
|   |             |-ImplicitCastExpr 0x556389e81ce0 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x556389e81c60 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x556389e81c30 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x556389e81cf8 <col:212, col:219> 'int' <IntegralCast>
|   |               `-CStyleCastExpr 0x556389e81cb8 <col:212, col:219> '_Bool' <IntegralToBoolean>
|   |                 `-IntegerLiteral 0x556389e81c88 <col:219> 'int' 0
|   |-BinaryOperator 0x556389e82430 <line:769:3, col:227> '_Bool' '='
|   | |-DeclRefExpr 0x556389e81ea8 <col:3> '_Bool' lvalue Var 0x556389e7cbf0 'z$r_buff0_thd3' '_Bool'
|   | `-ImplicitCastExpr 0x556389e82418 <col:20, col:227> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x556389e823e8 <col:20, col:227> 'int'
|   |     |-ImplicitCastExpr 0x556389e823a0 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x556389e82388 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x556389e81ec8 <col:20> '_Bool' lvalue Var 0x556389e7d1a8 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x556389e823d0 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x556389e823b8 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x556389e81ee8 <col:36> '_Bool' lvalue Var 0x556389e7cbf0 'z$r_buff0_thd3' '_Bool'
|   |     `-ParenExpr 0x556389e82368 <col:53, col:227> 'int'
|   |       `-ConditionalOperator 0x556389e82338 <col:54, col:226> 'int'
|   |         |-BinaryOperator 0x556389e820f8 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x556389e82018 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x556389e81f40 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x556389e81f28 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x556389e81f08 <col:55> '_Bool' lvalue Var 0x556389e7cfc0 'z$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x556389e81ff8 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x556389e81f90 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x556389e81f78 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x556389e81f58 <col:74> '_Bool' lvalue Var 0x556389e7cbf0 'z$r_buff0_thd3' '_Bool'
|   |         | |   `-UnaryOperator 0x556389e81fe0 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x556389e81fc8 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x556389e81fa8 <col:93> '_Bool' lvalue Var 0x556389e7d0b8 'z$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x556389e820d8 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x556389e82070 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x556389e82058 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x556389e82038 <col:112> '_Bool' lvalue Var 0x556389e7cbf0 'z$r_buff0_thd3' '_Bool'
|   |         |   `-UnaryOperator 0x556389e820c0 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x556389e820a8 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x556389e82088 <col:131> '_Bool' lvalue Var 0x556389e7cdd0 'z$r_buff1_thd3' '_Bool'
|   |         |-ImplicitCastExpr 0x556389e82320 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x556389e82308 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x556389e82118 <col:148> '_Bool' lvalue Var 0x556389e7cbf0 'z$r_buff0_thd3' '_Bool'
|   |         `-ParenExpr 0x556389e822e8 <col:165, col:226> 'int'
|   |           `-ConditionalOperator 0x556389e822b8 <col:166, col:212> 'int'
|   |             |-BinaryOperator 0x556389e821d8 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x556389e82190 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x556389e82178 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x556389e82138 <col:166> '_Bool' lvalue Var 0x556389e7cfc0 'z$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x556389e821c0 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x556389e821a8 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x556389e82158 <col:184> '_Bool' lvalue Var 0x556389e7cbf0 'z$r_buff0_thd3' '_Bool'
|   |             |-ImplicitCastExpr 0x556389e82270 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x556389e82228 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x556389e821f8 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x556389e822a0 <col:212> 'int' <IntegralCast>
|   |               `-ImplicitCastExpr 0x556389e82288 <col:212> '_Bool' <LValueToRValue>
|   |                 `-DeclRefExpr 0x556389e82250 <col:212> '_Bool' lvalue Var 0x556389e7cbf0 'z$r_buff0_thd3' '_Bool'
|   |-BinaryOperator 0x556389e829f8 <line:770:3, col:221> '_Bool' '='
|   | |-DeclRefExpr 0x556389e82450 <col:3> '_Bool' lvalue Var 0x556389e7cdd0 'z$r_buff1_thd3' '_Bool'
|   | `-ImplicitCastExpr 0x556389e829e0 <col:20, col:221> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x556389e829b0 <col:20, col:221> 'int'
|   |     |-ImplicitCastExpr 0x556389e82968 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x556389e82950 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x556389e82470 <col:20> '_Bool' lvalue Var 0x556389e7d1a8 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x556389e82998 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x556389e82980 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x556389e82490 <col:36> '_Bool' lvalue Var 0x556389e7cdd0 'z$r_buff1_thd3' '_Bool'
|   |     `-ParenExpr 0x556389e82930 <col:53, col:221> 'int'
|   |       `-ConditionalOperator 0x556389e82900 <col:54, col:220> 'int'
|   |         |-BinaryOperator 0x556389e826a0 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x556389e825c0 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x556389e824e8 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x556389e824d0 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x556389e824b0 <col:55> '_Bool' lvalue Var 0x556389e7cfc0 'z$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x556389e825a0 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x556389e82538 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x556389e82520 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x556389e82500 <col:74> '_Bool' lvalue Var 0x556389e7cbf0 'z$r_buff0_thd3' '_Bool'
|   |         | |   `-UnaryOperator 0x556389e82588 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x556389e82570 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x556389e82550 <col:93> '_Bool' lvalue Var 0x556389e7d0b8 'z$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x556389e82680 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x556389e82618 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x556389e82600 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x556389e825e0 <col:112> '_Bool' lvalue Var 0x556389e7cbf0 'z$r_buff0_thd3' '_Bool'
|   |         |   `-UnaryOperator 0x556389e82668 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x556389e82650 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x556389e82630 <col:131> '_Bool' lvalue Var 0x556389e7cdd0 'z$r_buff1_thd3' '_Bool'
|   |         |-ImplicitCastExpr 0x556389e828e8 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x556389e828d0 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x556389e826c0 <col:148> '_Bool' lvalue Var 0x556389e7cdd0 'z$r_buff1_thd3' '_Bool'
|   |         `-ParenExpr 0x556389e828b0 <col:165, col:220> 'int'
|   |           `-ConditionalOperator 0x556389e82880 <col:166, col:219> 'int'
|   |             |-BinaryOperator 0x556389e82780 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x556389e82738 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x556389e82720 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x556389e826e0 <col:166> '_Bool' lvalue Var 0x556389e7cfc0 'z$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x556389e82768 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x556389e82750 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x556389e82700 <col:184> '_Bool' lvalue Var 0x556389e7cbf0 'z$r_buff0_thd3' '_Bool'
|   |             |-ImplicitCastExpr 0x556389e82850 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x556389e827d0 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x556389e827a0 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x556389e82868 <col:212, col:219> 'int' <IntegralCast>
|   |               `-CStyleCastExpr 0x556389e82828 <col:212, col:219> '_Bool' <IntegralToBoolean>
|   |                 `-IntegerLiteral 0x556389e827f8 <col:219> 'int' 0
|   |-BinaryOperator 0x556389e82a70 <line:771:3, col:25> 'int' '='
|   | |-DeclRefExpr 0x556389e82a18 <col:3> 'int' lvalue Var 0x556389e7c480 '__unbuffered_p2_EAX' 'int'
|   | `-ImplicitCastExpr 0x556389e82a58 <col:25> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x556389e82a38 <col:25> 'int' lvalue Var 0x556389e7c8d0 'z' 'int'
|   |-BinaryOperator 0x556389e82bc0 <line:772:3, col:37> 'int' '='
|   | |-DeclRefExpr 0x556389e82a90 <col:3> 'int' lvalue Var 0x556389e7c8d0 'z' 'int'
|   | `-ConditionalOperator 0x556389e82b90 <col:7, col:37> 'int'
|   |   |-ImplicitCastExpr 0x556389e82b28 <col:7> 'int' <IntegralCast>
|   |   | `-ImplicitCastExpr 0x556389e82b10 <col:7> '_Bool' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x556389e82ab0 <col:7> '_Bool' lvalue Var 0x556389e7c968 'z$flush_delayed' '_Bool'
|   |   |-ImplicitCastExpr 0x556389e82b60 <col:25> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x556389e82ad0 <col:25> 'int' lvalue Var 0x556389e7c9e8 'z$mem_tmp' 'int'
|   |   `-ImplicitCastExpr 0x556389e82b78 <col:37> 'int' <LValueToRValue>
|   |     `-DeclRefExpr 0x556389e82af0 <col:37> 'int' lvalue Var 0x556389e7c8d0 'z' 'int'
|   |-BinaryOperator 0x556389e82c58 <line:773:3, col:28> '_Bool' '='
|   | |-DeclRefExpr 0x556389e82be0 <col:3> '_Bool' lvalue Var 0x556389e7c968 'z$flush_delayed' '_Bool'
|   | `-CStyleCastExpr 0x556389e82c30 <col:21, col:28> '_Bool' <IntegralToBoolean>
|   |   `-IntegerLiteral 0x556389e82c00 <col:28> 'int' 0
|   |-CallExpr 0x556389e82cb0 <line:774:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x556389e82c98 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x556389e82c78 <col:3> 'void ()' Function 0x556389e22f00 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x556389e82d08 <line:775:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x556389e82cf0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x556389e82cd0 <col:3> 'void ()' Function 0x556389e22e40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x556389e82ff0 <line:776:3, col:103> 'int' '='
|   | |-DeclRefExpr 0x556389e82d28 <col:3> 'int' lvalue Var 0x556389e7c8d0 'z' 'int'
|   | `-ConditionalOperator 0x556389e82fc0 <col:7, col:103> 'int'
|   |   |-BinaryOperator 0x556389e82de8 <col:7, col:25> 'int' '&&'
|   |   | |-ImplicitCastExpr 0x556389e82da0 <col:7> 'int' <IntegralCast>
|   |   | | `-ImplicitCastExpr 0x556389e82d88 <col:7> '_Bool' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x556389e82d48 <col:7> '_Bool' lvalue Var 0x556389e7cfc0 'z$w_buff0_used' '_Bool'
|   |   | `-ImplicitCastExpr 0x556389e82dd0 <col:25> 'int' <IntegralCast>
|   |   |   `-ImplicitCastExpr 0x556389e82db8 <col:25> '_Bool' <LValueToRValue>
|   |   |     `-DeclRefExpr 0x556389e82d68 <col:25> '_Bool' lvalue Var 0x556389e7cbf0 'z$r_buff0_thd3' '_Bool'
|   |   |-ImplicitCastExpr 0x556389e82fa8 <col:42> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x556389e82e08 <col:42> 'int' lvalue Var 0x556389e7cf48 'z$w_buff0' 'int'
|   |   `-ParenExpr 0x556389e82f88 <col:54, col:103> 'int'
|   |     `-ConditionalOperator 0x556389e82f58 <col:55, col:102> 'int'
|   |       |-BinaryOperator 0x556389e82ec8 <col:55, col:73> 'int' '&&'
|   |       | |-ImplicitCastExpr 0x556389e82e80 <col:55> 'int' <IntegralCast>
|   |       | | `-ImplicitCastExpr 0x556389e82e68 <col:55> '_Bool' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x556389e82e28 <col:55> '_Bool' lvalue Var 0x556389e7d0b8 'z$w_buff1_used' '_Bool'
|   |       | `-ImplicitCastExpr 0x556389e82eb0 <col:73> 'int' <IntegralCast>
|   |       |   `-ImplicitCastExpr 0x556389e82e98 <col:73> '_Bool' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x556389e82e48 <col:73> '_Bool' lvalue Var 0x556389e7cdd0 'z$r_buff1_thd3' '_Bool'
|   |       |-ImplicitCastExpr 0x556389e82f28 <col:90> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x556389e82ee8 <col:90> 'int' lvalue Var 0x556389e7d040 'z$w_buff1' 'int'
|   |       `-ImplicitCastExpr 0x556389e82f40 <col:102> 'int' <LValueToRValue>
|   |         `-DeclRefExpr 0x556389e82f08 <col:102> 'int' lvalue Var 0x556389e7c8d0 'z' 'int'
|   |-BinaryOperator 0x556389e831f8 <line:777:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x556389e83010 <col:3> '_Bool' lvalue Var 0x556389e7cfc0 'z$w_buff0_used' '_Bool'
|   | `-ImplicitCastExpr 0x556389e831e0 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x556389e831b0 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x556389e830d0 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x556389e83088 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x556389e83070 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x556389e83030 <col:20> '_Bool' lvalue Var 0x556389e7cfc0 'z$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x556389e830b8 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x556389e830a0 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x556389e83050 <col:38> '_Bool' lvalue Var 0x556389e7cbf0 'z$r_buff0_thd3' '_Bool'
|   |     |-ImplicitCastExpr 0x556389e83168 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x556389e83120 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x556389e830f0 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x556389e83198 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x556389e83180 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x556389e83148 <col:66> '_Bool' lvalue Var 0x556389e7cfc0 'z$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x556389e834e0 <line:778:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x556389e83218 <col:3> '_Bool' lvalue Var 0x556389e7d0b8 'z$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x556389e834c8 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x556389e83498 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x556389e833b8 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x556389e832d8 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x556389e83290 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x556389e83278 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x556389e83238 <col:20> '_Bool' lvalue Var 0x556389e7cfc0 'z$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x556389e832c0 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x556389e832a8 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x556389e83258 <col:38> '_Bool' lvalue Var 0x556389e7cbf0 'z$r_buff0_thd3' '_Bool'
|   |     | `-BinaryOperator 0x556389e83398 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x556389e83350 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x556389e83338 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x556389e832f8 <col:56> '_Bool' lvalue Var 0x556389e7d0b8 'z$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x556389e83380 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x556389e83368 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x556389e83318 <col:74> '_Bool' lvalue Var 0x556389e7cdd0 'z$r_buff1_thd3' '_Bool'
|   |     |-ImplicitCastExpr 0x556389e83450 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x556389e83408 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x556389e833d8 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x556389e83480 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x556389e83468 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x556389e83430 <col:102> '_Bool' lvalue Var 0x556389e7d0b8 'z$w_buff1_used' '_Bool'
|   |-BinaryOperator 0x556389e836e8 <line:779:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x556389e83500 <col:3> '_Bool' lvalue Var 0x556389e7cbf0 'z$r_buff0_thd3' '_Bool'
|   | `-ImplicitCastExpr 0x556389e836d0 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x556389e836a0 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x556389e835c0 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x556389e83578 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x556389e83560 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x556389e83520 <col:20> '_Bool' lvalue Var 0x556389e7cfc0 'z$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x556389e835a8 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x556389e83590 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x556389e83540 <col:38> '_Bool' lvalue Var 0x556389e7cbf0 'z$r_buff0_thd3' '_Bool'
|   |     |-ImplicitCastExpr 0x556389e83658 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x556389e83610 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x556389e835e0 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x556389e83688 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x556389e83670 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x556389e83638 <col:66> '_Bool' lvalue Var 0x556389e7cbf0 'z$r_buff0_thd3' '_Bool'
|   |-BinaryOperator 0x556389e839d0 <line:780:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x556389e83708 <col:3> '_Bool' lvalue Var 0x556389e7cdd0 'z$r_buff1_thd3' '_Bool'
|   | `-ImplicitCastExpr 0x556389e839b8 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x556389e83988 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x556389e838a8 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x556389e837c8 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x556389e83780 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x556389e83768 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x556389e83728 <col:20> '_Bool' lvalue Var 0x556389e7cfc0 'z$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x556389e837b0 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x556389e83798 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x556389e83748 <col:38> '_Bool' lvalue Var 0x556389e7cbf0 'z$r_buff0_thd3' '_Bool'
|   |     | `-BinaryOperator 0x556389e83888 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x556389e83840 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x556389e83828 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x556389e837e8 <col:56> '_Bool' lvalue Var 0x556389e7d0b8 'z$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x556389e83870 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x556389e83858 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x556389e83808 <col:74> '_Bool' lvalue Var 0x556389e7cdd0 'z$r_buff1_thd3' '_Bool'
|   |     |-ImplicitCastExpr 0x556389e83940 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x556389e838f8 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x556389e838c8 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x556389e83970 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x556389e83958 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x556389e83920 <col:102> '_Bool' lvalue Var 0x556389e7cdd0 'z$r_buff1_thd3' '_Bool'
|   |-CallExpr 0x556389e83a28 <line:781:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x556389e83a10 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x556389e839f0 <col:3> 'void ()' Function 0x556389e22f00 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x556389e83a80 <line:782:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x556389e83a68 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x556389e83a48 <col:3> 'void ()' Function 0x556389e22e40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x556389e83b38 <line:783:3, col:41> 'int' '='
|   | |-DeclRefExpr 0x556389e83aa0 <col:3> 'int' lvalue Var 0x556389e7c120 '__unbuffered_cnt' 'int'
|   | `-BinaryOperator 0x556389e83b18 <col:22, col:41> 'int' '+'
|   |   |-ImplicitCastExpr 0x556389e83b00 <col:22> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x556389e83ac0 <col:22> 'int' lvalue Var 0x556389e7c120 '__unbuffered_cnt' 'int'
|   |   `-IntegerLiteral 0x556389e83ae0 <col:41> 'int' 1
|   |-CallExpr 0x556389e83ba8 <line:784:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x556389e83b90 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x556389e83b70 <col:3> 'void ()' Function 0x556389e22f00 '__VERIFIER_atomic_end' 'void ()'
|   `-ReturnStmt 0x556389e83c20 <line:785:3, col:36>
|     `-CallExpr 0x556389e83c00 <col:10, col:36> 'void *'
|       `-ImplicitCastExpr 0x556389e83be8 <col:10> 'void *(*)(void)' <FunctionToPointerDecay>
|         `-DeclRefExpr 0x556389e83bc8 <col:10> 'void *(void)' Function 0x556389e22958 '__VERIFIER_nondet_pointer' 'void *(void)'
|-FunctionDecl 0x556389e83d50 prev 0x556389e7be68 <line:787:1, line:789:1> line:787:6 fence 'void ()'
| `-CompoundStmt 0x556389e83df0 <line:788:1, line:789:1>
|-FunctionDecl 0x556389e83e20 prev 0x556389e7bf28 <line:790:1, line:792:1> line:790:6 isync 'void ()'
| `-CompoundStmt 0x556389e83ec0 <line:791:1, line:792:1>
|-FunctionDecl 0x556389e83ef0 prev 0x556389e7bfe8 <line:793:1, line:795:1> line:793:6 lwfence 'void ()'
| `-CompoundStmt 0x556389e83f90 <line:794:1, line:795:1>
`-FunctionDecl 0x556389e83ff8 <line:796:1, line:820:1> line:796:5 main 'int ()'
  `-CompoundStmt 0x556389e85c50 <line:797:1, line:820:1>
    |-DeclStmt 0x556389e84110 <line:798:3, col:18>
    | `-VarDecl 0x556389e840a8 <col:3, col:13> col:13 used t1299 'pthread_t':'unsigned long'
    |-CallExpr 0x556389e84318 <line:799:3, col:54> 'int'
    | |-ImplicitCastExpr 0x556389e84300 <col:3> 'int (*)(pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x556389e84128 <col:3> 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' Function 0x556389e63488 'pthread_create' 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)'
    | |-UnaryOperator 0x556389e84168 <col:18, col:19> 'pthread_t *' prefix '&' cannot overflow
    | | `-DeclRefExpr 0x556389e84148 <col:19> 'pthread_t':'unsigned long' lvalue Var 0x556389e840a8 't1299' 'pthread_t':'unsigned long'
    | |-ImplicitCastExpr 0x556389e84358 <col:26, col:36> 'const pthread_attr_t *' <NullToPointer>
    | | `-ParenExpr 0x556389e841e0 <col:26, col:36> 'void *'
    | |   `-CStyleCastExpr 0x556389e841b8 <col:27, col:35> 'void *' <NullToPointer>
    | |     `-IntegerLiteral 0x556389e84180 <col:35> 'int' 0
    | |-ImplicitCastExpr 0x556389e84370 <col:39> 'void *(*)(void *)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x556389e84200 <col:39> 'void *(void *)' Function 0x556389e7d2c0 'P0' 'void *(void *)'
    | `-ParenExpr 0x556389e84280 <col:43, col:53> 'void *'
    |   `-CStyleCastExpr 0x556389e84258 <col:44, col:52> 'void *' <NullToPointer>
    |     `-IntegerLiteral 0x556389e84220 <col:52> 'int' 0
    |-DeclStmt 0x556389e84400 <line:800:3, col:18>
    | `-VarDecl 0x556389e84398 <col:3, col:13> col:13 used t1300 'pthread_t':'unsigned long'
    |-CallExpr 0x556389e845a8 <line:801:3, col:54> 'int'
    | |-ImplicitCastExpr 0x556389e84590 <col:3> 'int (*)(pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x556389e84418 <col:3> 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' Function 0x556389e63488 'pthread_create' 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)'
    | |-UnaryOperator 0x556389e84458 <col:18, col:19> 'pthread_t *' prefix '&' cannot overflow
    | | `-DeclRefExpr 0x556389e84438 <col:19> 'pthread_t':'unsigned long' lvalue Var 0x556389e84398 't1300' 'pthread_t':'unsigned long'
    | |-ImplicitCastExpr 0x556389e845e8 <col:26, col:36> 'const pthread_attr_t *' <NullToPointer>
    | | `-ParenExpr 0x556389e844d0 <col:26, col:36> 'void *'
    | |   `-CStyleCastExpr 0x556389e844a8 <col:27, col:35> 'void *' <NullToPointer>
    | |     `-IntegerLiteral 0x556389e84470 <col:35> 'int' 0
    | |-ImplicitCastExpr 0x556389e84600 <col:39> 'void *(*)(void *)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x556389e844f0 <col:39> 'void *(void *)' Function 0x556389e7ecb0 'P1' 'void *(void *)'
    | `-ParenExpr 0x556389e84570 <col:43, col:53> 'void *'
    |   `-CStyleCastExpr 0x556389e84548 <col:44, col:52> 'void *' <NullToPointer>
    |     `-IntegerLiteral 0x556389e84510 <col:52> 'int' 0
    |-DeclStmt 0x556389e84690 <line:802:3, col:18>
    | `-VarDecl 0x556389e84628 <col:3, col:13> col:13 used t1301 'pthread_t':'unsigned long'
    |-CallExpr 0x556389e84838 <line:803:3, col:54> 'int'
    | |-ImplicitCastExpr 0x556389e84820 <col:3> 'int (*)(pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x556389e846a8 <col:3> 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' Function 0x556389e63488 'pthread_create' 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)'
    | |-UnaryOperator 0x556389e846e8 <col:18, col:19> 'pthread_t *' prefix '&' cannot overflow
    | | `-DeclRefExpr 0x556389e846c8 <col:19> 'pthread_t':'unsigned long' lvalue Var 0x556389e84628 't1301' 'pthread_t':'unsigned long'
    | |-ImplicitCastExpr 0x556389e84878 <col:26, col:36> 'const pthread_attr_t *' <NullToPointer>
    | | `-ParenExpr 0x556389e84760 <col:26, col:36> 'void *'
    | |   `-CStyleCastExpr 0x556389e84738 <col:27, col:35> 'void *' <NullToPointer>
    | |     `-IntegerLiteral 0x556389e84700 <col:35> 'int' 0
    | |-ImplicitCastExpr 0x556389e84890 <col:39> 'void *(*)(void *)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x556389e84780 <col:39> 'void *(void *)' Function 0x556389e80038 'P2' 'void *(void *)'
    | `-ParenExpr 0x556389e84800 <col:43, col:53> 'void *'
    |   `-CStyleCastExpr 0x556389e847d8 <col:44, col:52> 'void *' <NullToPointer>
    |     `-IntegerLiteral 0x556389e847a0 <col:52> 'int' 0
    |-CallExpr 0x556389e848e0 <line:804:3, col:27> 'void'
    | `-ImplicitCastExpr 0x556389e848c8 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x556389e848a8 <col:3> 'void ()' Function 0x556389e22e40 '__VERIFIER_atomic_begin' 'void ()'
    |-BinaryOperator 0x556389e849b0 <line:805:3, col:41> '_Bool' '='
    | |-DeclRefExpr 0x556389e84900 <col:3> '_Bool' lvalue Var 0x556389e7c518 'main$tmp_guard0' '_Bool'
    | `-ImplicitCastExpr 0x556389e84998 <col:21, col:41> '_Bool' <IntegralToBoolean>
    |   `-BinaryOperator 0x556389e84978 <col:21, col:41> 'int' '=='
    |     |-ImplicitCastExpr 0x556389e84960 <col:21> 'int' <LValueToRValue>
    |     | `-DeclRefExpr 0x556389e84920 <col:21> 'int' lvalue Var 0x556389e7c120 '__unbuffered_cnt' 'int'
    |     `-IntegerLiteral 0x556389e84940 <col:41> 'int' 3
    |-CallExpr 0x556389e84a08 <line:806:3, col:25> 'void'
    | `-ImplicitCastExpr 0x556389e849f0 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x556389e849d0 <col:3> 'void ()' Function 0x556389e22f00 '__VERIFIER_atomic_end' 'void ()'
    |-CallExpr 0x556389e84a80 <line:807:3, col:36> 'void'
    | |-ImplicitCastExpr 0x556389e84a68 <col:3> 'void (*)(int)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x556389e84a28 <col:3> 'void (int)' Function 0x556389e22790 '__VERIFIER_assume' 'void (int)'
    | `-ImplicitCastExpr 0x556389e84ac0 <col:21> 'int' <IntegralCast>
    |   `-ImplicitCastExpr 0x556389e84aa8 <col:21> '_Bool' <LValueToRValue>
    |     `-DeclRefExpr 0x556389e84a48 <col:21> '_Bool' lvalue Var 0x556389e7c518 'main$tmp_guard0' '_Bool'
    |-CallExpr 0x556389e84b10 <line:808:3, col:27> 'void'
    | `-ImplicitCastExpr 0x556389e84af8 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x556389e84ad8 <col:3> 'void ()' Function 0x556389e22e40 '__VERIFIER_atomic_begin' 'void ()'
    |-BinaryOperator 0x556389e84e08 <line:809:3, col:103> 'int' '='
    | |-DeclRefExpr 0x556389e84b30 <col:3> 'int' lvalue Var 0x556389e7c8d0 'z' 'int'
    | `-ConditionalOperator 0x556389e84dd8 <col:7, col:103> 'int'
    |   |-BinaryOperator 0x556389e84c00 <col:7, col:25> 'int' '&&'
    |   | |-ImplicitCastExpr 0x556389e84bb8 <col:7> 'int' <IntegralCast>
    |   | | `-ImplicitCastExpr 0x556389e84ba0 <col:7> '_Bool' <LValueToRValue>
    |   | |   `-DeclRefExpr 0x556389e84b50 <col:7> '_Bool' lvalue Var 0x556389e7cfc0 'z$w_buff0_used' '_Bool'
    |   | `-ImplicitCastExpr 0x556389e84be8 <col:25> 'int' <IntegralCast>
    |   |   `-ImplicitCastExpr 0x556389e84bd0 <col:25> '_Bool' <LValueToRValue>
    |   |     `-DeclRefExpr 0x556389e84b80 <col:25> '_Bool' lvalue Var 0x556389e7ca60 'z$r_buff0_thd0' '_Bool'
    |   |-ImplicitCastExpr 0x556389e84dc0 <col:42> 'int' <LValueToRValue>
    |   | `-DeclRefExpr 0x556389e84c20 <col:42> 'int' lvalue Var 0x556389e7cf48 'z$w_buff0' 'int'
    |   `-ParenExpr 0x556389e84da0 <col:54, col:103> 'int'
    |     `-ConditionalOperator 0x556389e84d70 <col:55, col:102> 'int'
    |       |-BinaryOperator 0x556389e84ce0 <col:55, col:73> 'int' '&&'
    |       | |-ImplicitCastExpr 0x556389e84c98 <col:55> 'int' <IntegralCast>
    |       | | `-ImplicitCastExpr 0x556389e84c80 <col:55> '_Bool' <LValueToRValue>
    |       | |   `-DeclRefExpr 0x556389e84c40 <col:55> '_Bool' lvalue Var 0x556389e7d0b8 'z$w_buff1_used' '_Bool'
    |       | `-ImplicitCastExpr 0x556389e84cc8 <col:73> 'int' <IntegralCast>
    |       |   `-ImplicitCastExpr 0x556389e84cb0 <col:73> '_Bool' <LValueToRValue>
    |       |     `-DeclRefExpr 0x556389e84c60 <col:73> '_Bool' lvalue Var 0x556389e7cc68 'z$r_buff1_thd0' '_Bool'
    |       |-ImplicitCastExpr 0x556389e84d40 <col:90> 'int' <LValueToRValue>
    |       | `-DeclRefExpr 0x556389e84d00 <col:90> 'int' lvalue Var 0x556389e7d040 'z$w_buff1' 'int'
    |       `-ImplicitCastExpr 0x556389e84d58 <col:102> 'int' <LValueToRValue>
    |         `-DeclRefExpr 0x556389e84d20 <col:102> 'int' lvalue Var 0x556389e7c8d0 'z' 'int'
    |-BinaryOperator 0x556389e85010 <line:810:3, col:66> '_Bool' '='
    | |-DeclRefExpr 0x556389e84e28 <col:3> '_Bool' lvalue Var 0x556389e7cfc0 'z$w_buff0_used' '_Bool'
    | `-ImplicitCastExpr 0x556389e84ff8 <col:20, col:66> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x556389e84fc8 <col:20, col:66> 'int'
    |     |-BinaryOperator 0x556389e84ee8 <col:20, col:38> 'int' '&&'
    |     | |-ImplicitCastExpr 0x556389e84ea0 <col:20> 'int' <IntegralCast>
    |     | | `-ImplicitCastExpr 0x556389e84e88 <col:20> '_Bool' <LValueToRValue>
    |     | |   `-DeclRefExpr 0x556389e84e48 <col:20> '_Bool' lvalue Var 0x556389e7cfc0 'z$w_buff0_used' '_Bool'
    |     | `-ImplicitCastExpr 0x556389e84ed0 <col:38> 'int' <IntegralCast>
    |     |   `-ImplicitCastExpr 0x556389e84eb8 <col:38> '_Bool' <LValueToRValue>
    |     |     `-DeclRefExpr 0x556389e84e68 <col:38> '_Bool' lvalue Var 0x556389e7ca60 'z$r_buff0_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x556389e84f80 <col:55, col:62> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x556389e84f38 <col:55, col:62> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x556389e84f08 <col:62> 'int' 0
    |     `-ImplicitCastExpr 0x556389e84fb0 <col:66> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x556389e84f98 <col:66> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x556389e84f60 <col:66> '_Bool' lvalue Var 0x556389e7cfc0 'z$w_buff0_used' '_Bool'
    |-BinaryOperator 0x556389e852f8 <line:811:3, col:102> '_Bool' '='
    | |-DeclRefExpr 0x556389e85030 <col:3> '_Bool' lvalue Var 0x556389e7d0b8 'z$w_buff1_used' '_Bool'
    | `-ImplicitCastExpr 0x556389e852e0 <col:20, col:102> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x556389e852b0 <col:20, col:102> 'int'
    |     |-BinaryOperator 0x556389e851d0 <col:20, col:74> 'int' '||'
    |     | |-BinaryOperator 0x556389e850f0 <col:20, col:38> 'int' '&&'
    |     | | |-ImplicitCastExpr 0x556389e850a8 <col:20> 'int' <IntegralCast>
    |     | | | `-ImplicitCastExpr 0x556389e85090 <col:20> '_Bool' <LValueToRValue>
    |     | | |   `-DeclRefExpr 0x556389e85050 <col:20> '_Bool' lvalue Var 0x556389e7cfc0 'z$w_buff0_used' '_Bool'
    |     | | `-ImplicitCastExpr 0x556389e850d8 <col:38> 'int' <IntegralCast>
    |     | |   `-ImplicitCastExpr 0x556389e850c0 <col:38> '_Bool' <LValueToRValue>
    |     | |     `-DeclRefExpr 0x556389e85070 <col:38> '_Bool' lvalue Var 0x556389e7ca60 'z$r_buff0_thd0' '_Bool'
    |     | `-BinaryOperator 0x556389e851b0 <col:56, col:74> 'int' '&&'
    |     |   |-ImplicitCastExpr 0x556389e85168 <col:56> 'int' <IntegralCast>
    |     |   | `-ImplicitCastExpr 0x556389e85150 <col:56> '_Bool' <LValueToRValue>
    |     |   |   `-DeclRefExpr 0x556389e85110 <col:56> '_Bool' lvalue Var 0x556389e7d0b8 'z$w_buff1_used' '_Bool'
    |     |   `-ImplicitCastExpr 0x556389e85198 <col:74> 'int' <IntegralCast>
    |     |     `-ImplicitCastExpr 0x556389e85180 <col:74> '_Bool' <LValueToRValue>
    |     |       `-DeclRefExpr 0x556389e85130 <col:74> '_Bool' lvalue Var 0x556389e7cc68 'z$r_buff1_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x556389e85268 <col:91, col:98> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x556389e85220 <col:91, col:98> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x556389e851f0 <col:98> 'int' 0
    |     `-ImplicitCastExpr 0x556389e85298 <col:102> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x556389e85280 <col:102> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x556389e85248 <col:102> '_Bool' lvalue Var 0x556389e7d0b8 'z$w_buff1_used' '_Bool'
    |-BinaryOperator 0x556389e85500 <line:812:3, col:66> '_Bool' '='
    | |-DeclRefExpr 0x556389e85318 <col:3> '_Bool' lvalue Var 0x556389e7ca60 'z$r_buff0_thd0' '_Bool'
    | `-ImplicitCastExpr 0x556389e854e8 <col:20, col:66> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x556389e854b8 <col:20, col:66> 'int'
    |     |-BinaryOperator 0x556389e853d8 <col:20, col:38> 'int' '&&'
    |     | |-ImplicitCastExpr 0x556389e85390 <col:20> 'int' <IntegralCast>
    |     | | `-ImplicitCastExpr 0x556389e85378 <col:20> '_Bool' <LValueToRValue>
    |     | |   `-DeclRefExpr 0x556389e85338 <col:20> '_Bool' lvalue Var 0x556389e7cfc0 'z$w_buff0_used' '_Bool'
    |     | `-ImplicitCastExpr 0x556389e853c0 <col:38> 'int' <IntegralCast>
    |     |   `-ImplicitCastExpr 0x556389e853a8 <col:38> '_Bool' <LValueToRValue>
    |     |     `-DeclRefExpr 0x556389e85358 <col:38> '_Bool' lvalue Var 0x556389e7ca60 'z$r_buff0_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x556389e85470 <col:55, col:62> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x556389e85428 <col:55, col:62> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x556389e853f8 <col:62> 'int' 0
    |     `-ImplicitCastExpr 0x556389e854a0 <col:66> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x556389e85488 <col:66> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x556389e85450 <col:66> '_Bool' lvalue Var 0x556389e7ca60 'z$r_buff0_thd0' '_Bool'
    |-BinaryOperator 0x556389e857e8 <line:813:3, col:102> '_Bool' '='
    | |-DeclRefExpr 0x556389e85520 <col:3> '_Bool' lvalue Var 0x556389e7cc68 'z$r_buff1_thd0' '_Bool'
    | `-ImplicitCastExpr 0x556389e857d0 <col:20, col:102> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x556389e857a0 <col:20, col:102> 'int'
    |     |-BinaryOperator 0x556389e856c0 <col:20, col:74> 'int' '||'
    |     | |-BinaryOperator 0x556389e855e0 <col:20, col:38> 'int' '&&'
    |     | | |-ImplicitCastExpr 0x556389e85598 <col:20> 'int' <IntegralCast>
    |     | | | `-ImplicitCastExpr 0x556389e85580 <col:20> '_Bool' <LValueToRValue>
    |     | | |   `-DeclRefExpr 0x556389e85540 <col:20> '_Bool' lvalue Var 0x556389e7cfc0 'z$w_buff0_used' '_Bool'
    |     | | `-ImplicitCastExpr 0x556389e855c8 <col:38> 'int' <IntegralCast>
    |     | |   `-ImplicitCastExpr 0x556389e855b0 <col:38> '_Bool' <LValueToRValue>
    |     | |     `-DeclRefExpr 0x556389e85560 <col:38> '_Bool' lvalue Var 0x556389e7ca60 'z$r_buff0_thd0' '_Bool'
    |     | `-BinaryOperator 0x556389e856a0 <col:56, col:74> 'int' '&&'
    |     |   |-ImplicitCastExpr 0x556389e85658 <col:56> 'int' <IntegralCast>
    |     |   | `-ImplicitCastExpr 0x556389e85640 <col:56> '_Bool' <LValueToRValue>
    |     |   |   `-DeclRefExpr 0x556389e85600 <col:56> '_Bool' lvalue Var 0x556389e7d0b8 'z$w_buff1_used' '_Bool'
    |     |   `-ImplicitCastExpr 0x556389e85688 <col:74> 'int' <IntegralCast>
    |     |     `-ImplicitCastExpr 0x556389e85670 <col:74> '_Bool' <LValueToRValue>
    |     |       `-DeclRefExpr 0x556389e85620 <col:74> '_Bool' lvalue Var 0x556389e7cc68 'z$r_buff1_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x556389e85758 <col:91, col:98> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x556389e85710 <col:91, col:98> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x556389e856e0 <col:98> 'int' 0
    |     `-ImplicitCastExpr 0x556389e85788 <col:102> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x556389e85770 <col:102> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x556389e85738 <col:102> '_Bool' lvalue Var 0x556389e7cc68 'z$r_buff1_thd0' '_Bool'
    |-CallExpr 0x556389e85840 <line:814:3, col:25> 'void'
    | `-ImplicitCastExpr 0x556389e85828 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x556389e85808 <col:3> 'void ()' Function 0x556389e22f00 '__VERIFIER_atomic_end' 'void ()'
    |-CallExpr 0x556389e85898 <line:815:3, col:27> 'void'
    | `-ImplicitCastExpr 0x556389e85880 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x556389e85860 <col:3> 'void ()' Function 0x556389e22e40 '__VERIFIER_atomic_begin' 'void ()'
    |-BinaryOperator 0x556389e85ad0 <line:816:3, col:103> '_Bool' '='
    | |-DeclRefExpr 0x556389e858b8 <col:3> '_Bool' lvalue Var 0x556389e7c590 'main$tmp_guard1' '_Bool'
    | `-ImplicitCastExpr 0x556389e85ab8 <col:21, col:103> '_Bool' <IntegralToBoolean>
    |   `-UnaryOperator 0x556389e85aa0 <col:21, col:103> 'int' prefix '!' cannot overflow
    |     `-ParenExpr 0x556389e85a80 <col:22, col:103> 'int'
    |       `-BinaryOperator 0x556389e85a60 <col:23, col:102> 'int' '&&'
    |         |-BinaryOperator 0x556389e859c8 <col:23, col:74> 'int' '&&'
    |         | |-BinaryOperator 0x556389e85930 <col:23, col:46> 'int' '=='
    |         | | |-ImplicitCastExpr 0x556389e85918 <col:23> 'int' <LValueToRValue>
    |         | | | `-DeclRefExpr 0x556389e858d8 <col:23> 'int' lvalue Var 0x556389e7c240 '__unbuffered_p0_EAX' 'int'
    |         | | `-IntegerLiteral 0x556389e858f8 <col:46> 'int' 0
    |         | `-BinaryOperator 0x556389e859a8 <col:51, col:74> 'int' '=='
    |         |   |-ImplicitCastExpr 0x556389e85990 <col:51> 'int' <LValueToRValue>
    |         |   | `-DeclRefExpr 0x556389e85950 <col:51> 'int' lvalue Var 0x556389e7c360 '__unbuffered_p1_EAX' 'int'
    |         |   `-IntegerLiteral 0x556389e85970 <col:74> 'int' 0
    |         `-BinaryOperator 0x556389e85a40 <col:79, col:102> 'int' '=='
    |           |-ImplicitCastExpr 0x556389e85a28 <col:79> 'int' <LValueToRValue>
    |           | `-DeclRefExpr 0x556389e859e8 <col:79> 'int' lvalue Var 0x556389e7c480 '__unbuffered_p2_EAX' 'int'
    |           `-IntegerLiteral 0x556389e85a08 <col:102> 'int' 0
    |-CallExpr 0x556389e85b28 <line:817:3, col:25> 'void'
    | `-ImplicitCastExpr 0x556389e85b10 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x556389e85af0 <col:3> 'void ()' Function 0x556389e22f00 '__VERIFIER_atomic_end' 'void ()'
    |-CallExpr 0x556389e85bc8 <line:818:3, col:36> 'void'
    | |-ImplicitCastExpr 0x556389e85bb0 <col:3> 'void (*)(int)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x556389e85b48 <col:3> 'void (int)' Function 0x556389e22bc8 '__VERIFIER_assert' 'void (int)'
    | `-ImplicitCastExpr 0x556389e85c08 <col:21> 'int' <IntegralCast>
    |   `-ImplicitCastExpr 0x556389e85bf0 <col:21> '_Bool' <LValueToRValue>
    |     `-DeclRefExpr 0x556389e85b90 <col:21> '_Bool' lvalue Var 0x556389e7c590 'main$tmp_guard1' '_Bool'
    `-ReturnStmt 0x556389e85c40 <line:819:3, col:10>
      `-IntegerLiteral 0x556389e85c20 <col:10> 'int' 0
