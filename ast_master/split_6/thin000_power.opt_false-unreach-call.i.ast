TranslationUnitDecl 0x5570ae166e18 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x5570ae1676d8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x5570ae1673b0 '__int128'
|-TypedefDecl 0x5570ae167748 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x5570ae1673d0 'unsigned __int128'
|-TypedefDecl 0x5570ae167a50 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x5570ae167820 'struct __NSConstantString_tag'
|   `-Record 0x5570ae1677a0 '__NSConstantString_tag'
|-TypedefDecl 0x5570ae167af8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x5570ae167ab0 'char *'
|   `-BuiltinType 0x5570ae166eb0 'char'
|-TypedefDecl 0x5570ae1a6650 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'struct __va_list_tag [1]'
| `-ConstantArrayType 0x5570ae167d90 'struct __va_list_tag [1]' 1 
|   `-RecordType 0x5570ae167bd0 'struct __va_list_tag'
|     `-Record 0x5570ae167b50 '__va_list_tag'
|-FunctionDecl 0x5570ae1a6790 <./split_6/thin000_power.opt_false-unreach-call.i:1:1, col:34> col:13 used __VERIFIER_assume 'void (int)' extern
| `-ParmVarDecl 0x5570ae1a66c0 <col:31> col:34 'int'
|-FunctionDecl 0x5570ae1a6958 <line:2:1, col:45> col:15 used __VERIFIER_nondet_pointer 'void *(void)' extern
|-FunctionDecl 0x5570ae1a6a80 <line:3:1, col:61> col:13 used __VERIFIER_error 'void () __attribute__((noreturn))' extern
|-FunctionDecl 0x5570ae1a6bc8 <line:4:1, col:99> col:6 used __VERIFIER_assert 'void (int)'
| |-ParmVarDecl 0x5570ae1a6b38 <col:24, col:28> col:28 used expression 'int'
| `-CompoundStmt 0x5570ae1a6df8 <col:40, col:99>
|   |-IfStmt 0x5570ae1a6dc8 <col:42, col:88>
|   | |-UnaryOperator 0x5570ae1a6ca8 <col:46, col:47> 'int' prefix '!' cannot overflow
|   | | `-ImplicitCastExpr 0x5570ae1a6c90 <col:47> 'int' <LValueToRValue>
|   | |   `-DeclRefExpr 0x5570ae1a6c70 <col:47> 'int' lvalue ParmVar 0x5570ae1a6b38 'expression' 'int'
|   | `-CompoundStmt 0x5570ae1a6db0 <col:59, col:88>
|   |   `-LabelStmt 0x5570ae1a6d98 <col:61, col:85> 'ERROR'
|   |     `-CallExpr 0x5570ae1a6d28 <col:68, col:85> 'void'
|   |       `-ImplicitCastExpr 0x5570ae1a6d10 <col:68> 'void (*)() __attribute__((noreturn))' <FunctionToPointerDecay>
|   |         `-DeclRefExpr 0x5570ae1a6cc0 <col:68> 'void () __attribute__((noreturn))' Function 0x5570ae1a6a80 '__VERIFIER_error' 'void () __attribute__((noreturn))'
|   |-NullStmt 0x5570ae1a6de0 <col:89>
|   `-ReturnStmt 0x5570ae1a6de8 <col:91>
|-FunctionDecl 0x5570ae1a6e40 <line:5:1, col:37> col:13 used __VERIFIER_atomic_begin 'void ()' extern
|-FunctionDecl 0x5570ae1a6f00 <line:6:1, col:35> col:13 used __VERIFIER_atomic_end 'void ()' extern
|-FunctionDecl 0x5570ae1a7280 <line:8:1, line:10:76> line:8:13 __assert_fail 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x5570ae1a6fb8 <col:28, col:40> col:40 __assertion 'const char *'
| |-ParmVarDecl 0x5570ae1a7038 <col:53, col:65> col:65 __file 'const char *'
| |-ParmVarDecl 0x5570ae1a70b8 <line:9:7, col:20> col:20 __line 'unsigned int'
| |-ParmVarDecl 0x5570ae1a7138 <col:28, col:40> col:40 __function 'const char *'
| `-NoThrowAttr 0x5570ae1a7340 <line:10:22>
|-FunctionDecl 0x5570ae1cd390 <line:11:1, line:13:76> line:11:13 __assert_perror_fail 'void (int, const char *, unsigned int, const char *) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x5570ae1a73b0 <col:35, col:39> col:39 __errnum 'int'
| |-ParmVarDecl 0x5570ae1a7430 <col:49, col:61> col:61 __file 'const char *'
| |-ParmVarDecl 0x5570ae1a74b0 <line:12:7, col:20> col:20 __line 'unsigned int'
| |-ParmVarDecl 0x5570ae1a7530 <col:28, col:40> col:40 __function 'const char *'
| `-NoThrowAttr 0x5570ae1cd450 <line:13:22>
|-FunctionDecl 0x5570ae1cd700 <line:14:1, line:15:76> line:14:13 __assert 'void (const char *, const char *, int) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x5570ae1cd4c0 <col:23, col:35> col:35 __assertion 'const char *'
| |-ParmVarDecl 0x5570ae1cd540 <col:48, col:60> col:60 __file 'const char *'
| |-ParmVarDecl 0x5570ae1cd5c0 <col:68, col:72> col:72 __line 'int'
| `-NoThrowAttr 0x5570ae1cd7b8 <line:15:22>
|-TypedefDecl 0x5570ae1cd828 <line:17:1, col:23> col:23 __u_char 'unsigned char'
| `-BuiltinType 0x5570ae166f70 'unsigned char'
|-TypedefDecl 0x5570ae1cd898 <line:18:1, col:28> col:28 __u_short 'unsigned short'
| `-BuiltinType 0x5570ae166f90 'unsigned short'
|-TypedefDecl 0x5570ae1cd908 <line:19:1, col:22> col:22 __u_int 'unsigned int'
| `-BuiltinType 0x5570ae166fb0 'unsigned int'
|-TypedefDecl 0x5570ae1cd978 <line:20:1, col:27> col:27 __u_long 'unsigned long'
| `-BuiltinType 0x5570ae166fd0 'unsigned long'
|-TypedefDecl 0x5570ae1cd9e8 <line:21:1, col:21> col:21 __int8_t 'signed char'
| `-BuiltinType 0x5570ae166ed0 'signed char'
|-TypedefDecl 0x5570ae1cda58 <line:22:1, col:23> col:23 __uint8_t 'unsigned char'
| `-BuiltinType 0x5570ae166f70 'unsigned char'
|-TypedefDecl 0x5570ae1cdac8 <line:23:1, col:26> col:26 __int16_t 'short'
| `-BuiltinType 0x5570ae166ef0 'short'
|-TypedefDecl 0x5570ae1cdb38 <line:24:1, col:28> col:28 __uint16_t 'unsigned short'
| `-BuiltinType 0x5570ae166f90 'unsigned short'
|-TypedefDecl 0x5570ae1cdba8 <line:25:1, col:20> col:20 __int32_t 'int'
| `-BuiltinType 0x5570ae166f10 'int'
|-TypedefDecl 0x5570ae1cdc18 <line:26:1, col:22> col:22 __uint32_t 'unsigned int'
| `-BuiltinType 0x5570ae166fb0 'unsigned int'
|-TypedefDecl 0x5570ae1cdc88 <line:27:1, col:25> col:25 __int64_t 'long'
| `-BuiltinType 0x5570ae166f30 'long'
|-TypedefDecl 0x5570ae1cdcf8 <line:28:1, col:27> col:27 referenced __uint64_t 'unsigned long'
| `-BuiltinType 0x5570ae166fd0 'unsigned long'
|-TypedefDecl 0x5570ae1cdd68 <line:29:1, col:18> col:18 referenced __quad_t 'long'
| `-BuiltinType 0x5570ae166f30 'long'
|-TypedefDecl 0x5570ae1cddd8 <line:30:1, col:27> col:27 __u_quad_t 'unsigned long'
| `-BuiltinType 0x5570ae166fd0 'unsigned long'
|-TypedefDecl 0x5570ae1cde48 <line:31:1, col:27> col:27 __dev_t 'unsigned long'
| `-BuiltinType 0x5570ae166fd0 'unsigned long'
|-TypedefDecl 0x5570ae1cdeb8 <line:32:1, col:22> col:22 __uid_t 'unsigned int'
| `-BuiltinType 0x5570ae166fb0 'unsigned int'
|-TypedefDecl 0x5570ae1cdf28 <line:33:1, col:22> col:22 __gid_t 'unsigned int'
| `-BuiltinType 0x5570ae166fb0 'unsigned int'
|-TypedefDecl 0x5570ae1cdf98 <line:34:1, col:27> col:27 __ino_t 'unsigned long'
| `-BuiltinType 0x5570ae166fd0 'unsigned long'
|-TypedefDecl 0x5570ae1ce008 <line:35:1, col:27> col:27 __ino64_t 'unsigned long'
| `-BuiltinType 0x5570ae166fd0 'unsigned long'
|-TypedefDecl 0x5570ae1ce078 <line:36:1, col:22> col:22 __mode_t 'unsigned int'
| `-BuiltinType 0x5570ae166fb0 'unsigned int'
|-TypedefDecl 0x5570ae1ce0e8 <line:37:1, col:27> col:27 __nlink_t 'unsigned long'
| `-BuiltinType 0x5570ae166fd0 'unsigned long'
|-TypedefDecl 0x5570ae1ce158 <line:38:1, col:18> col:18 __off_t 'long'
| `-BuiltinType 0x5570ae166f30 'long'
|-TypedefDecl 0x5570ae1ce1c8 <line:39:1, col:18> col:18 referenced __off64_t 'long'
| `-BuiltinType 0x5570ae166f30 'long'
|-TypedefDecl 0x5570ae1ce238 <line:40:1, col:13> col:13 referenced __pid_t 'int'
| `-BuiltinType 0x5570ae166f10 'int'
|-RecordDecl 0x5570ae1ce290 <line:41:9, col:32> col:9 struct definition
| `-FieldDecl 0x5570ae1ce408 <col:18, col:29> col:22 __val 'int [2]'
|-TypedefDecl 0x5570ae1ce4c0 <col:1, col:34> col:34 __fsid_t 'struct __fsid_t':'__fsid_t'
| `-ElaboratedType 0x5570ae1ce460 'struct __fsid_t' sugar
|   `-RecordType 0x5570ae1ce310 '__fsid_t'
|     `-Record 0x5570ae1ce290 ''
|-TypedefDecl 0x5570ae1ce548 <line:42:1, col:18> col:18 referenced __clock_t 'long'
| `-BuiltinType 0x5570ae166f30 'long'
|-TypedefDecl 0x5570ae1ce5b8 <line:43:1, col:27> col:27 __rlim_t 'unsigned long'
| `-BuiltinType 0x5570ae166fd0 'unsigned long'
|-TypedefDecl 0x5570ae1ce628 <line:44:1, col:27> col:27 __rlim64_t 'unsigned long'
| `-BuiltinType 0x5570ae166fd0 'unsigned long'
|-TypedefDecl 0x5570ae1ce698 <line:45:1, col:22> col:22 __id_t 'unsigned int'
| `-BuiltinType 0x5570ae166fb0 'unsigned int'
|-TypedefDecl 0x5570ae1ce708 <line:46:1, col:18> col:18 referenced __time_t 'long'
| `-BuiltinType 0x5570ae166f30 'long'
|-TypedefDecl 0x5570ae1ce778 <line:47:1, col:22> col:22 __useconds_t 'unsigned int'
| `-BuiltinType 0x5570ae166fb0 'unsigned int'
|-TypedefDecl 0x5570ae1ce7e8 <line:48:1, col:18> col:18 __suseconds_t 'long'
| `-BuiltinType 0x5570ae166f30 'long'
|-TypedefDecl 0x5570ae1ce858 <line:49:1, col:13> col:13 __daddr_t 'int'
| `-BuiltinType 0x5570ae166f10 'int'
|-TypedefDecl 0x5570ae1ce8c8 <line:50:1, col:13> col:13 __key_t 'int'
| `-BuiltinType 0x5570ae166f10 'int'
|-TypedefDecl 0x5570ae1ce938 <line:51:1, col:13> col:13 referenced __clockid_t 'int'
| `-BuiltinType 0x5570ae166f10 'int'
|-TypedefDecl 0x5570ae1ce9a8 <line:52:1, col:16> col:16 referenced __timer_t 'void *'
| `-PointerType 0x5570ae167630 'void *'
|   `-BuiltinType 0x5570ae166e70 'void'
|-TypedefDecl 0x5570ae1cea18 <line:53:1, col:18> col:18 __blksize_t 'long'
| `-BuiltinType 0x5570ae166f30 'long'
|-TypedefDecl 0x5570ae1cea88 <line:54:1, col:18> col:18 __blkcnt_t 'long'
| `-BuiltinType 0x5570ae166f30 'long'
|-TypedefDecl 0x5570ae1ceaf8 <line:55:1, col:18> col:18 __blkcnt64_t 'long'
| `-BuiltinType 0x5570ae166f30 'long'
|-TypedefDecl 0x5570ae1ceb68 <line:56:1, col:27> col:27 __fsblkcnt_t 'unsigned long'
| `-BuiltinType 0x5570ae166fd0 'unsigned long'
|-TypedefDecl 0x5570ae1cebd8 <line:57:1, col:27> col:27 __fsblkcnt64_t 'unsigned long'
| `-BuiltinType 0x5570ae166fd0 'unsigned long'
|-TypedefDecl 0x5570ae1cec48 <line:58:1, col:27> col:27 __fsfilcnt_t 'unsigned long'
| `-BuiltinType 0x5570ae166fd0 'unsigned long'
|-TypedefDecl 0x5570ae1cecb8 <line:59:1, col:27> col:27 __fsfilcnt64_t 'unsigned long'
| `-BuiltinType 0x5570ae166fd0 'unsigned long'
|-TypedefDecl 0x5570ae1ced28 <line:60:1, col:18> col:18 __fsword_t 'long'
| `-BuiltinType 0x5570ae166f30 'long'
|-TypedefDecl 0x5570ae1ced98 <line:61:1, col:18> col:18 __ssize_t 'long'
| `-BuiltinType 0x5570ae166f30 'long'
|-TypedefDecl 0x5570ae1cee08 <line:62:1, col:18> col:18 referenced __syscall_slong_t 'long'
| `-BuiltinType 0x5570ae166f30 'long'
|-TypedefDecl 0x5570ae1cee78 <line:63:1, col:27> col:27 __syscall_ulong_t 'unsigned long'
| `-BuiltinType 0x5570ae166fd0 'unsigned long'
|-TypedefDecl 0x5570ae1cef08 <line:64:1, col:19> col:19 __loff_t '__off64_t':'long'
| `-TypedefType 0x5570ae1ceed0 '__off64_t' sugar
|   |-Typedef 0x5570ae1ce1c8 '__off64_t'
|   `-BuiltinType 0x5570ae166f30 'long'
|-TypedefDecl 0x5570ae1cf000 <line:65:1, col:19> col:19 __qaddr_t '__quad_t *'
| `-PointerType 0x5570ae1cefc0 '__quad_t *'
|   `-TypedefType 0x5570ae1cef60 '__quad_t' sugar
|     |-Typedef 0x5570ae1cdd68 '__quad_t'
|     `-BuiltinType 0x5570ae166f30 'long'
|-TypedefDecl 0x5570ae1cf070 <line:66:1, col:15> col:15 __caddr_t 'char *'
| `-PointerType 0x5570ae167ab0 'char *'
|   `-BuiltinType 0x5570ae166eb0 'char'
|-TypedefDecl 0x5570ae1cf0e0 <line:67:1, col:18> col:18 __intptr_t 'long'
| `-BuiltinType 0x5570ae166f30 'long'
|-TypedefDecl 0x5570ae1cf150 <line:68:1, col:22> col:22 __socklen_t 'unsigned int'
| `-BuiltinType 0x5570ae166fb0 'unsigned int'
|-FunctionDecl 0x5570ae1cf298 <line:69:1, line:73:1> line:70:1 __bswap_32 'unsigned int (unsigned int)' static inline
| |-ParmVarDecl 0x5570ae1cf1c0 <col:13, col:26> col:26 used __bsx 'unsigned int'
| `-CompoundStmt 0x5570ae1d05e8 <line:71:1, line:73:1>
|   `-ReturnStmt 0x5570ae1d05d8 <line:72:3, col:34>
|     `-CallExpr 0x5570ae1d0598 <col:10, col:34> 'unsigned int'
|       |-ImplicitCastExpr 0x5570ae1d0580 <col:10> 'unsigned int (*)(unsigned int)' <BuiltinFnToFnPtr>
|       | `-DeclRefExpr 0x5570ae1d0510 <col:10> '<builtin fn type>' Function 0x5570ae1d0380 '__builtin_bswap32' 'unsigned int (unsigned int)'
|       `-ImplicitCastExpr 0x5570ae1d05c0 <col:29> 'unsigned int' <LValueToRValue>
|         `-DeclRefExpr 0x5570ae1d0530 <col:29> 'unsigned int' lvalue ParmVar 0x5570ae1cf1c0 '__bsx' 'unsigned int'
|-FunctionDecl 0x5570ae1d0380 <col:10> col:10 implicit used __builtin_bswap32 'unsigned int (unsigned int)' extern
| |-ParmVarDecl 0x5570ae1d0420 <<invalid sloc>> <invalid sloc> 'unsigned int'
| |-NoThrowAttr 0x5570ae1d0490 <col:10> Implicit
| `-ConstAttr 0x5570ae1d04e8 <col:10> Implicit
|-FunctionDecl 0x5570ae1d0740 <line:74:1, line:78:1> line:75:1 __bswap_64 '__uint64_t (__uint64_t)' static inline
| |-ParmVarDecl 0x5570ae1d0638 <col:13, col:24> col:24 used __bsx '__uint64_t':'unsigned long'
| `-CompoundStmt 0x5570ae1d0a58 <line:76:1, line:78:1>
|   `-ReturnStmt 0x5570ae1d0a48 <line:77:3, col:34>
|     `-CallExpr 0x5570ae1d0a08 <col:10, col:34> 'unsigned long'
|       |-ImplicitCastExpr 0x5570ae1d09f0 <col:10> 'unsigned long (*)(unsigned long)' <BuiltinFnToFnPtr>
|       | `-DeclRefExpr 0x5570ae1d0978 <col:10> '<builtin fn type>' Function 0x5570ae1d07e8 '__builtin_bswap64' 'unsigned long (unsigned long)'
|       `-ImplicitCastExpr 0x5570ae1d0a30 <col:29> '__uint64_t':'unsigned long' <LValueToRValue>
|         `-DeclRefExpr 0x5570ae1d0998 <col:29> '__uint64_t':'unsigned long' lvalue ParmVar 0x5570ae1d0638 '__bsx' '__uint64_t':'unsigned long'
|-FunctionDecl 0x5570ae1d07e8 <col:10> col:10 implicit used __builtin_bswap64 'unsigned long (unsigned long)' extern
| |-ParmVarDecl 0x5570ae1d0888 <<invalid sloc>> <invalid sloc> 'unsigned long'
| |-NoThrowAttr 0x5570ae1d08f8 <col:10> Implicit
| `-ConstAttr 0x5570ae1d0950 <col:10> Implicit
|-TypedefDecl 0x5570ae1d0a88 <line:79:1, col:27> col:27 referenced size_t 'unsigned long'
| `-BuiltinType 0x5570ae166fd0 'unsigned long'
|-TypedefDecl 0x5570ae1d0b18 <line:81:1, col:18> col:18 referenced time_t '__time_t':'long'
| `-TypedefType 0x5570ae1d0ae0 '__time_t' sugar
|   |-Typedef 0x5570ae1ce708 '__time_t'
|   `-BuiltinType 0x5570ae166f30 'long'
|-RecordDecl 0x5570ae1d0b70 <line:84:1, line:88:3> line:84:8 struct timespec definition
| |-FieldDecl 0x5570ae1d0c28 <line:86:5, col:14> col:14 tv_sec '__time_t':'long'
| `-FieldDecl 0x5570ae1d0cb8 <line:87:5, col:23> col:23 tv_nsec '__syscall_slong_t':'long'
|-TypedefDecl 0x5570ae1d0d48 <line:89:1, col:17> col:17 referenced pid_t '__pid_t':'int'
| `-TypedefType 0x5570ae1d0d10 '__pid_t' sugar
|   |-Typedef 0x5570ae1ce238 '__pid_t'
|   `-BuiltinType 0x5570ae166f10 'int'
|-RecordDecl 0x5570ae1d0da0 <line:90:1, line:93:3> line:90:8 struct sched_param definition
| `-FieldDecl 0x5570ae1d0e60 <line:92:5, col:9> col:9 __sched_priority 'int'
|-RecordDecl 0x5570ae1d0eb0 <line:96:1, line:99:3> line:96:8 struct __sched_param definition
| `-FieldDecl 0x5570ae1d0f70 <line:98:5, col:9> col:9 __sched_priority 'int'
|-TypedefDecl 0x5570ae1d0fd8 <line:100:1, col:27> col:27 referenced __cpu_mask 'unsigned long'
| `-BuiltinType 0x5570ae166fd0 'unsigned long'
|-RecordDecl 0x5570ae1d1030 <line:101:9, line:104:1> line:101:9 struct definition
| `-FieldDecl 0x5570ae1d12c0 <line:103:3, col:53> col:14 __bits '__cpu_mask [64]'
|-TypedefDecl 0x5570ae1d23a0 <line:101:1, line:104:3> col:3 referenced cpu_set_t 'struct cpu_set_t':'cpu_set_t'
| `-ElaboratedType 0x5570ae1d1310 'struct cpu_set_t' sugar
|   `-RecordType 0x5570ae1d10b0 'cpu_set_t'
|     `-Record 0x5570ae1d1030 ''
|-FunctionDecl 0x5570ae1d2678 <line:106:1, line:107:42> line:106:12 __sched_cpucount 'int (size_t, const cpu_set_t *)' extern
| |-ParmVarDecl 0x5570ae1d2448 <col:30, col:37> col:37 __setsize 'size_t':'unsigned long'
| |-ParmVarDecl 0x5570ae1d2550 <col:48, col:65> col:65 __setp 'const cpu_set_t *'
| `-NoThrowAttr 0x5570ae1d2728 <line:107:19>
|-FunctionDecl 0x5570ae1d2900 <line:108:1, col:92> col:19 __sched_cpualloc 'cpu_set_t *(size_t)' extern
| |-ParmVarDecl 0x5570ae1d2790 <col:37, col:44> col:44 __count 'size_t':'unsigned long'
| `-NoThrowAttr 0x5570ae1d29a8 <col:69>
|-FunctionDecl 0x5570ae1d2b20 <line:109:1, col:87> col:13 __sched_cpufree 'void (cpu_set_t *)' extern
| |-ParmVarDecl 0x5570ae1d2a10 <col:30, col:41> col:41 __set 'cpu_set_t *'
| `-NoThrowAttr 0x5570ae1d2bc8 <col:64>
|-FunctionDecl 0x5570ae1d2e88 <line:112:1, line:113:45> line:112:12 sched_setparam 'int (__pid_t, const struct sched_param *)' extern
| |-ParmVarDecl 0x5570ae1d2c30 <col:28, col:36> col:36 __pid '__pid_t':'int'
| |-ParmVarDecl 0x5570ae1d2d68 <col:43, col:69> col:69 __param 'const struct sched_param *'
| `-NoThrowAttr 0x5570ae1d2f38 <line:113:22>
|-FunctionDecl 0x5570ae1d31b8 <line:114:1, col:111> col:12 sched_getparam 'int (__pid_t, struct sched_param *)' extern
| |-ParmVarDecl 0x5570ae1d2fa0 <col:28, col:36> col:36 __pid '__pid_t':'int'
| |-ParmVarDecl 0x5570ae1d3098 <col:43, col:63> col:63 __param 'struct sched_param *'
| `-NoThrowAttr 0x5570ae1d3268 <col:88>
|-FunctionDecl 0x5570ae1d3588 <line:115:1, line:116:85> line:115:12 sched_setscheduler 'int (__pid_t, int, const struct sched_param *)' extern
| |-ParmVarDecl 0x5570ae1d32d0 <col:32, col:40> col:40 __pid '__pid_t':'int'
| |-ParmVarDecl 0x5570ae1d33b0 <col:47, col:51> col:51 __policy 'int'
| |-ParmVarDecl 0x5570ae1d3440 <line:116:11, col:37> col:37 __param 'const struct sched_param *'
| `-NoThrowAttr 0x5570ae1d3640 <col:62>
|-FunctionDecl 0x5570ae1d37b8 <line:117:1, col:86> col:12 sched_getscheduler 'int (__pid_t)' extern
| |-ParmVarDecl 0x5570ae1d36a8 <col:32, col:40> col:40 __pid '__pid_t':'int'
| `-NoThrowAttr 0x5570ae1d3860 <col:63>
|-FunctionDecl 0x5570ae1d3988 <line:118:1, col:70> col:12 sched_yield 'int (void)' extern
| `-NoThrowAttr 0x5570ae1d3a28 <col:47>
|-FunctionDecl 0x5570ae1d3b30 <line:119:1, col:92> col:12 sched_get_priority_max 'int (int)' extern
| |-ParmVarDecl 0x5570ae1d3a98 <col:36, col:40> col:40 __algorithm 'int'
| `-NoThrowAttr 0x5570ae1d3bd8 <col:69>
|-FunctionDecl 0x5570ae1d3ce0 <line:120:1, col:92> col:12 sched_get_priority_min 'int (int)' extern
| |-ParmVarDecl 0x5570ae1d3c48 <col:36, col:40> col:40 __algorithm 'int'
| `-NoThrowAttr 0x5570ae1d3d88 <col:69>
|-FunctionDecl 0x5570ae1d4048 <line:121:1, col:111> col:12 sched_rr_get_interval 'int (__pid_t, struct timespec *)' extern
| |-ParmVarDecl 0x5570ae1d3df0 <col:35, col:43> col:43 __pid '__pid_t':'int'
| |-ParmVarDecl 0x5570ae1d3f28 <col:50, col:67> col:67 __t 'struct timespec *'
| `-NoThrowAttr 0x5570ae1d40f8 <col:88>
|-TypedefDecl 0x5570ae1d4188 <line:125:1, col:19> col:19 referenced clock_t '__clock_t':'long'
| `-TypedefType 0x5570ae1d4150 '__clock_t' sugar
|   |-Typedef 0x5570ae1ce548 '__clock_t'
|   `-BuiltinType 0x5570ae166f30 'long'
|-TypedefDecl 0x5570ae1d4218 <line:128:1, col:21> col:21 referenced clockid_t '__clockid_t':'int'
| `-TypedefType 0x5570ae1d41e0 '__clockid_t' sugar
|   |-Typedef 0x5570ae1ce938 '__clockid_t'
|   `-BuiltinType 0x5570ae166f10 'int'
|-TypedefDecl 0x5570ae1d42a8 <line:129:1, col:19> col:19 referenced timer_t '__timer_t':'void *'
| `-TypedefType 0x5570ae1d4270 '__timer_t' sugar
|   |-Typedef 0x5570ae1ce9a8 '__timer_t'
|   `-PointerType 0x5570ae167630 'void *'
|     `-BuiltinType 0x5570ae166e70 'void'
|-RecordDecl 0x5570ae1d4300 <line:131:1, line:144:1> line:131:8 struct tm definition
| |-FieldDecl 0x5570ae1d43d8 <line:133:3, col:7> col:7 tm_sec 'int'
| |-FieldDecl 0x5570ae1d4440 <line:134:3, col:7> col:7 tm_min 'int'
| |-FieldDecl 0x5570ae1d44a8 <line:135:3, col:7> col:7 tm_hour 'int'
| |-FieldDecl 0x5570ae1d4510 <line:136:3, col:7> col:7 tm_mday 'int'
| |-FieldDecl 0x5570ae1d4578 <line:137:3, col:7> col:7 tm_mon 'int'
| |-FieldDecl 0x5570ae1d45e0 <line:138:3, col:7> col:7 tm_year 'int'
| |-FieldDecl 0x5570ae1d4648 <line:139:3, col:7> col:7 tm_wday 'int'
| |-FieldDecl 0x5570ae1d46b0 <line:140:3, col:7> col:7 tm_yday 'int'
| |-FieldDecl 0x5570ae1d4718 <line:141:3, col:7> col:7 tm_isdst 'int'
| |-FieldDecl 0x5570ae1d4780 <line:142:3, col:12> col:12 tm_gmtoff 'long'
| `-FieldDecl 0x5570ae1d47e8 <line:143:3, col:15> col:15 tm_zone 'const char *'
|-RecordDecl 0x5570ae1d4838 <line:147:1, line:151:3> line:147:8 struct itimerspec definition
| |-FieldDecl 0x5570ae1d4908 <line:149:5, col:21> col:21 it_interval 'struct timespec':'struct timespec'
| `-FieldDecl 0x5570ae1d4978 <line:150:5, col:21> col:21 it_value 'struct timespec':'struct timespec'
|-RecordDecl 0x5570ae1d4a20 <line:152:1, col:8> col:8 struct sigevent
|-FunctionDecl 0x5570ae1d4bf0 <line:154:1, col:68> col:16 clock 'clock_t (void)' extern
| `-NoThrowAttr 0x5570ae1d4c90 <col:45>
|-FunctionDecl 0x5570ae1d4e70 <line:155:1, col:77> col:15 time 'time_t (time_t *)' extern
| |-ParmVarDecl 0x5570ae1d4d60 <col:21, col:29> col:29 __timer 'time_t *'
| `-NoThrowAttr 0x5570ae1d4f18 <col:54>
|-FunctionDecl 0x5570ae1d5118 <line:156:1, line:157:73> line:156:15 difftime 'double (time_t, time_t)' extern
| |-ParmVarDecl 0x5570ae1d4f80 <col:25, col:32> col:32 __time1 'time_t':'long'
| |-ParmVarDecl 0x5570ae1d4ff8 <col:41, col:48> col:48 __time0 'time_t':'long'
| |-NoThrowAttr 0x5570ae1d51c8 <line:157:22>
| `-ConstAttr 0x5570ae1d5220 <col:63>
|-FunctionDecl 0x5570ae1d6050 <line:158:1, col:79> col:15 mktime 'time_t (struct tm *)' extern
| |-ParmVarDecl 0x5570ae1d5318 <col:23, col:34> col:34 __tp 'struct tm *'
| `-NoThrowAttr 0x5570ae1d60f8 <col:56>
|-FunctionDecl 0x5570ae1d64a0 <line:159:1, line:161:77> line:159:15 strftime 'size_t (char *restrict, size_t, const char *restrict, const struct tm *restrict)' extern
| |-ParmVarDecl 0x5570ae1d6168 <col:25, col:42> col:42 __s 'char *restrict'
| |-ParmVarDecl 0x5570ae1d61e0 <col:47, col:54> col:54 __maxsize 'size_t':'unsigned long'
| |-ParmVarDecl 0x5570ae1d6260 <line:160:4, col:27> col:27 __format 'const char *restrict'
| |-ParmVarDecl 0x5570ae1d6358 <line:161:4, col:32> col:32 __tp 'const struct tm *restrict'
| `-NoThrowAttr 0x5570ae1d6560 <col:54>
|-RecordDecl 0x5570ae1d65b8 <line:163:9, line:170:1> line:163:16 struct __locale_struct definition
| |-RecordDecl 0x5570ae1d6668 parent 0x5570ae166e18 <line:165:3, col:10> col:10 struct __locale_data
| |-FieldDecl 0x5570ae1d68c8 <col:3, col:37> col:25 __locales 'struct __locale_data *[13]'
| |-FieldDecl 0x5570ae1d6968 <line:166:3, col:29> col:29 __ctype_b 'const unsigned short *'
| |-FieldDecl 0x5570ae1d69d0 <line:167:3, col:14> col:14 __ctype_tolower 'const int *'
| |-FieldDecl 0x5570ae1d6a38 <line:168:3, col:14> col:14 __ctype_toupper 'const int *'
| `-FieldDecl 0x5570ae1d6b28 <line:169:3, col:25> col:15 __names 'const char *[13]'
|-TypedefDecl 0x5570ae1d6c48 <line:163:1, line:170:4> col:4 referenced __locale_t 'struct __locale_struct *'
| `-PointerType 0x5570ae1d6bf0 'struct __locale_struct *'
|   `-ElaboratedType 0x5570ae1d6b80 'struct __locale_struct' sugar
|     `-RecordType 0x5570ae1d6640 'struct __locale_struct'
|       `-Record 0x5570ae1d65b8 '__locale_struct'
|-TypedefDecl 0x5570ae1d6cf8 <line:171:1, col:20> col:20 locale_t '__locale_t':'struct __locale_struct *'
| `-TypedefType 0x5570ae1d6cc0 '__locale_t' sugar
|   |-Typedef 0x5570ae1d6c48 '__locale_t'
|   `-PointerType 0x5570ae1d6bf0 'struct __locale_struct *'
|     `-ElaboratedType 0x5570ae1d6b80 'struct __locale_struct' sugar
|       `-RecordType 0x5570ae1d6640 'struct __locale_struct'
|         `-Record 0x5570ae1d65b8 '__locale_struct'
|-FunctionDecl 0x5570ae1d8110 <line:172:1, line:175:63> line:172:15 strftime_l 'size_t (char *restrict, size_t, const char *restrict, const struct tm *restrict, __locale_t)' extern
| |-ParmVarDecl 0x5570ae1d6d68 <col:27, col:44> col:44 __s 'char *restrict'
| |-ParmVarDecl 0x5570ae1d6de0 <col:49, col:56> col:56 __maxsize 'size_t':'unsigned long'
| |-ParmVarDecl 0x5570ae1d6e60 <line:173:6, col:29> col:29 __format 'const char *restrict'
| |-ParmVarDecl 0x5570ae1d6ef0 <line:174:6, col:34> col:34 __tp 'const struct tm *restrict'
| |-ParmVarDecl 0x5570ae1d6f68 <line:175:6, col:17> col:17 __loc '__locale_t':'struct __locale_struct *'
| `-NoThrowAttr 0x5570ae1d81d8 <col:40>
|-FunctionDecl 0x5570ae1d83c8 <line:177:1, col:89> col:19 gmtime 'struct tm *(const time_t *)' extern
| |-ParmVarDecl 0x5570ae1d82a0 <col:27, col:41> col:41 __timer 'const time_t *'
| `-NoThrowAttr 0x5570ae1d8470 <col:66>
|-FunctionDecl 0x5570ae1d8580 <line:178:1, col:92> col:19 localtime 'struct tm *(const time_t *)' extern
| |-ParmVarDecl 0x5570ae1d84d8 <col:30, col:44> col:44 __timer 'const time_t *'
| `-NoThrowAttr 0x5570ae1d8628 <col:69>
|-FunctionDecl 0x5570ae1d8858 <line:180:1, line:181:75> line:180:19 gmtime_r 'struct tm *(const time_t *restrict, struct tm *restrict)' extern
| |-ParmVarDecl 0x5570ae1d8690 <col:29, col:54> col:54 __timer 'const time_t *restrict'
| |-ParmVarDecl 0x5570ae1d8720 <line:181:8, col:30> col:30 __tp 'struct tm *restrict'
| `-NoThrowAttr 0x5570ae1d8908 <col:52>
|-FunctionDecl 0x5570ae1d8ab0 <line:182:1, line:183:78> line:182:19 localtime_r 'struct tm *(const time_t *restrict, struct tm *restrict)' extern
| |-ParmVarDecl 0x5570ae1d8970 <col:32, col:57> col:57 __timer 'const time_t *restrict'
| |-ParmVarDecl 0x5570ae1d8a00 <line:183:11, col:33> col:33 __tp 'struct tm *restrict'
| `-NoThrowAttr 0x5570ae1d8b60 <col:55>
|-FunctionDecl 0x5570ae1d8cf8 <line:185:1, col:85> col:14 asctime 'char *(const struct tm *)' extern
| |-ParmVarDecl 0x5570ae1d8be0 <col:23, col:40> col:40 __tp 'const struct tm *'
| `-NoThrowAttr 0x5570ae1d8da0 <col:62>
|-FunctionDecl 0x5570ae1d8f18 <line:186:1, col:83> col:14 ctime 'char *(const time_t *)' extern
| |-ParmVarDecl 0x5570ae1d8e08 <col:21, col:35> col:35 __timer 'const time_t *'
| `-NoThrowAttr 0x5570ae1d8fc0 <col:60>
|-FunctionDecl 0x5570ae1d92b8 <line:188:1, line:189:67> line:188:14 asctime_r 'char *(const struct tm *restrict, char *restrict)' extern
| |-ParmVarDecl 0x5570ae1d9118 <col:25, col:53> col:53 __tp 'const struct tm *restrict'
| |-ParmVarDecl 0x5570ae1d9198 <line:189:4, col:21> col:21 __buf 'char *restrict'
| `-NoThrowAttr 0x5570ae1d9368 <col:44>
|-FunctionDecl 0x5570ae1d9578 <line:190:1, line:191:72> line:190:14 ctime_r 'char *(const time_t *restrict, char *restrict)' extern
| |-ParmVarDecl 0x5570ae1d93d0 <col:23, col:48> col:48 __timer 'const time_t *restrict'
| |-ParmVarDecl 0x5570ae1d9450 <line:191:9, col:26> col:26 __buf 'char *restrict'
| `-NoThrowAttr 0x5570ae1d9628 <col:49>
|-VarDecl 0x5570ae1d9728 <line:192:1, col:24> col:14 __tzname 'char *[2]' extern
|-VarDecl 0x5570ae1d97a8 <line:193:1, col:12> col:12 __daylight 'int' extern
|-VarDecl 0x5570ae1d9828 <line:194:1, col:17> col:17 __timezone 'long' extern
|-VarDecl 0x5570ae1d98f0 <line:195:1, col:22> col:14 tzname 'char *[2]' extern
|-FunctionDecl 0x5570ae1d9a20 <line:196:1, col:65> col:13 tzset 'void (void)' extern
| `-NoThrowAttr 0x5570ae1d9ac0 <col:42>
|-VarDecl 0x5570ae1d9b30 <line:197:1, col:12> col:12 daylight 'int' extern
|-VarDecl 0x5570ae1d9bb0 <line:198:1, col:17> col:17 timezone 'long' extern
|-FunctionDecl 0x5570ae1d9d38 <line:199:1, col:80> col:12 stime 'int (const time_t *)' extern
| |-ParmVarDecl 0x5570ae1d9c28 <col:19, col:33> col:33 __when 'const time_t *'
| `-NoThrowAttr 0x5570ae1d9de0 <col:57>
|-FunctionDecl 0x5570ae1d9ef0 <line:200:1, col:79> col:15 timegm 'time_t (struct tm *)' extern
| |-ParmVarDecl 0x5570ae1d9e60 <col:23, col:34> col:34 __tp 'struct tm *'
| `-NoThrowAttr 0x5570ae1d9f98 <col:56>
|-FunctionDecl 0x5570ae1da0d0 <line:201:1, col:82> col:15 timelocal 'time_t (struct tm *)' extern
| |-ParmVarDecl 0x5570ae1da018 <col:26, col:37> col:37 __tp 'struct tm *'
| `-NoThrowAttr 0x5570ae1da178 <col:59>
|-FunctionDecl 0x5570ae1da280 <line:202:1, col:99> col:12 dysize 'int (int)' extern
| |-ParmVarDecl 0x5570ae1da1e8 <col:20, col:24> col:24 __year 'int'
| |-NoThrowAttr 0x5570ae1da328 <col:48>
| `-ConstAttr 0x5570ae1da380 <col:89>
|-FunctionDecl 0x5570ae1da5e8 <line:203:1, line:204:37> line:203:12 nanosleep 'int (const struct timespec *, struct timespec *)' extern
| |-ParmVarDecl 0x5570ae1da438 <col:23, col:46> col:46 __requested_time 'const struct timespec *'
| `-ParmVarDecl 0x5570ae1da4c8 <line:204:9, col:26> col:26 __remaining 'struct timespec *'
|-FunctionDecl 0x5570ae1da848 <line:205:1, col:111> col:12 clock_getres 'int (clockid_t, struct timespec *)' extern
| |-ParmVarDecl 0x5570ae1da6d8 <col:26, col:36> col:36 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x5570ae1da768 <col:48, col:65> col:65 __res 'struct timespec *'
| `-NoThrowAttr 0x5570ae1da8f8 <col:88>
|-FunctionDecl 0x5570ae1daa90 <line:206:1, col:111> col:12 clock_gettime 'int (clockid_t, struct timespec *)' extern
| |-ParmVarDecl 0x5570ae1da960 <col:27, col:37> col:37 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x5570ae1da9f0 <col:49, col:66> col:66 __tp 'struct timespec *'
| `-NoThrowAttr 0x5570ae1dab40 <col:88>
|-FunctionDecl 0x5570ae1dad58 <line:207:1, line:208:45> line:207:12 clock_settime 'int (clockid_t, const struct timespec *)' extern
| |-ParmVarDecl 0x5570ae1daba8 <col:27, col:37> col:37 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x5570ae1dac38 <col:49, col:72> col:72 __tp 'const struct timespec *'
| `-NoThrowAttr 0x5570ae1dae08 <line:208:22>
|-FunctionDecl 0x5570ae1db178 <line:209:1, line:211:30> line:209:12 clock_nanosleep 'int (clockid_t, int, const struct timespec *, struct timespec *)' extern
| |-ParmVarDecl 0x5570ae1dae70 <col:29, col:39> col:39 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x5570ae1daef0 <col:51, col:55> col:55 __flags 'int'
| |-ParmVarDecl 0x5570ae1daf80 <line:210:8, col:31> col:31 __req 'const struct timespec *'
| `-ParmVarDecl 0x5570ae1db010 <line:211:8, col:25> col:25 __rem 'struct timespec *'
|-FunctionDecl 0x5570ae1db478 <line:212:1, col:108> col:12 clock_getcpuclockid 'int (pid_t, clockid_t *)' extern
| |-ParmVarDecl 0x5570ae1db278 <col:33, col:39> col:39 __pid 'pid_t':'int'
| |-ParmVarDecl 0x5570ae1db350 <col:46, col:57> col:57 __clock_id 'clockid_t *'
| `-NoThrowAttr 0x5570ae1db528 <col:85>
|-FunctionDecl 0x5570ae1db918 <line:213:1, line:215:75> line:213:12 timer_create 'int (clockid_t, struct sigevent *restrict, timer_t *restrict)' extern
| |-ParmVarDecl 0x5570ae1db590 <col:26, col:36> col:36 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x5570ae1db6c8 <line:214:5, col:33> col:33 __evp 'struct sigevent *restrict'
| |-ParmVarDecl 0x5570ae1db7d0 <line:215:5, col:25> col:25 __timerid 'timer_t *restrict'
| `-NoThrowAttr 0x5570ae1db9d0 <col:52>
|-FunctionDecl 0x5570ae1dbb48 <line:216:1, col:84> col:12 timer_delete 'int (timer_t)' extern
| |-ParmVarDecl 0x5570ae1dba38 <col:26, col:34> col:34 __timerid 'timer_t':'void *'
| `-NoThrowAttr 0x5570ae1dbbf0 <col:61>
|-FunctionDecl 0x5570ae1dc0f0 <line:217:1, line:219:85> line:217:12 timer_settime 'int (timer_t, int, const struct itimerspec *restrict, struct itimerspec *restrict)' extern
| |-ParmVarDecl 0x5570ae1dbc58 <col:27, col:35> col:35 __timerid 'timer_t':'void *'
| |-ParmVarDecl 0x5570ae1dbcd8 <col:46, col:50> col:50 __flags 'int'
| |-ParmVarDecl 0x5570ae1dbe08 <line:218:6, col:42> col:42 __value 'const struct itimerspec *restrict'
| |-ParmVarDecl 0x5570ae1dbef8 <line:219:6, col:36> col:36 __ovalue 'struct itimerspec *restrict'
| `-NoThrowAttr 0x5570ae1dc1b0 <col:62>
|-FunctionDecl 0x5570ae1dc3c8 <line:220:1, line:221:45> line:220:12 timer_gettime 'int (timer_t, struct itimerspec *)' extern
| |-ParmVarDecl 0x5570ae1dc218 <col:27, col:35> col:35 __timerid 'timer_t':'void *'
| |-ParmVarDecl 0x5570ae1dc2a8 <col:46, col:65> col:65 __value 'struct itimerspec *'
| `-NoThrowAttr 0x5570ae1dc478 <line:221:22>
|-FunctionDecl 0x5570ae1dc578 <line:222:1, col:88> col:12 timer_getoverrun 'int (timer_t)' extern
| |-ParmVarDecl 0x5570ae1dc4e0 <col:30, col:38> col:38 __timerid 'timer_t':'void *'
| `-NoThrowAttr 0x5570ae1dc620 <col:65>
|-TypedefDecl 0x5570ae1dc690 <line:224:1, col:27> col:27 referenced pthread_t 'unsigned long'
| `-BuiltinType 0x5570ae166fd0 'unsigned long'
|-RecordDecl 0x5570ae1dc6e8 <line:225:1, line:229:1> line:225:7 union pthread_attr_t definition
| |-FieldDecl 0x5570ae1dc830 <line:227:3, col:17> col:8 __size 'char [56]'
| `-FieldDecl 0x5570ae1dc898 <line:228:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x5570ae1dc948 <line:230:1, col:30> col:30 referenced pthread_attr_t 'union pthread_attr_t':'union pthread_attr_t'
| `-ElaboratedType 0x5570ae1dc8f0 'union pthread_attr_t' sugar
|   `-RecordType 0x5570ae1dc770 'union pthread_attr_t'
|     `-Record 0x5570ae1dc6e8 'pthread_attr_t'
|-RecordDecl 0x5570ae1dc9a0 <line:231:9, line:235:1> line:231:16 struct __pthread_internal_list definition
| |-FieldDecl 0x5570ae1dcb18 <line:233:3, col:35> col:35 __prev 'struct __pthread_internal_list *'
| `-FieldDecl 0x5570ae1dcb90 <line:234:3, col:35> col:35 __next 'struct __pthread_internal_list *'
|-TypedefDecl 0x5570ae1dcc40 <line:231:1, line:235:3> col:3 referenced __pthread_list_t 'struct __pthread_internal_list':'struct __pthread_internal_list'
| `-ElaboratedType 0x5570ae1dcbe0 'struct __pthread_internal_list' sugar
|   `-RecordType 0x5570ae1dca20 'struct __pthread_internal_list'
|     `-Record 0x5570ae1dc9a0 '__pthread_internal_list'
|-RecordDecl 0x5570ae1dccb0 <line:236:9, line:250:1> line:236:9 union definition
| |-RecordDecl 0x5570ae1dcd58 parent 0x5570ae166e18 <line:238:3, line:247:3> line:238:10 struct __pthread_mutex_s definition
| | |-FieldDecl 0x5570ae1dce30 <line:240:5, col:9> col:9 __lock 'int'
| | |-FieldDecl 0x5570ae1dce98 <line:241:5, col:18> col:18 __count 'unsigned int'
| | |-FieldDecl 0x5570ae1dcf00 <line:242:5, col:9> col:9 __owner 'int'
| | |-FieldDecl 0x5570ae1dcf68 <line:243:5, col:18> col:18 __nusers 'unsigned int'
| | |-FieldDecl 0x5570ae1dcfd0 <line:244:5, col:9> col:9 __kind 'int'
| | |-FieldDecl 0x5570ae1dd038 <line:245:5, col:9> col:9 __spins 'int'
| | `-FieldDecl 0x5570ae1e1110 <line:246:5, col:22> col:22 __list '__pthread_list_t':'struct __pthread_internal_list'
| |-FieldDecl 0x5570ae1e11c0 <line:238:3, line:247:5> col:5 __data 'struct __pthread_mutex_s':'struct __pthread_mutex_s'
| |-FieldDecl 0x5570ae1e12b0 <line:248:3, col:17> col:8 __size 'char [40]'
| `-FieldDecl 0x5570ae1e1318 <line:249:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x5570ae1e14a0 <line:236:1, line:250:3> col:3 referenced pthread_mutex_t 'union pthread_mutex_t':'pthread_mutex_t'
| `-ElaboratedType 0x5570ae1e1440 'union pthread_mutex_t' sugar
|   `-RecordType 0x5570ae1dcd30 'pthread_mutex_t'
|     `-Record 0x5570ae1dccb0 ''
|-RecordDecl 0x5570ae1e1510 <line:251:9, line:255:1> line:251:9 union definition
| |-FieldDecl 0x5570ae1e1650 <line:253:3, col:16> col:8 __size 'char [4]'
| `-FieldDecl 0x5570ae1e16b8 <line:254:3, col:7> col:7 __align 'int'
|-TypedefDecl 0x5570ae1e1770 <line:251:1, line:255:3> col:3 referenced pthread_mutexattr_t 'union pthread_mutexattr_t':'pthread_mutexattr_t'
| `-ElaboratedType 0x5570ae1e1710 'union pthread_mutexattr_t' sugar
|   `-RecordType 0x5570ae1e1590 'pthread_mutexattr_t'
|     `-Record 0x5570ae1e1510 ''
|-RecordDecl 0x5570ae1e17e0 <line:256:9, line:271:1> line:256:9 union definition
| |-RecordDecl 0x5570ae1e1888 <line:258:3, line:268:3> line:258:3 struct definition
| | |-FieldDecl 0x5570ae1e1950 <line:260:5, col:9> col:9 __lock 'int'
| | |-FieldDecl 0x5570ae1e19b8 <line:261:5, col:18> col:18 __futex 'unsigned int'
| | |-FieldDecl 0x5570ae1e1a20 <line:262:19, col:42> col:42 __total_seq 'unsigned long long'
| | |-FieldDecl 0x5570ae1e1a88 <line:263:19, col:42> col:42 __wakeup_seq 'unsigned long long'
| | |-FieldDecl 0x5570ae1e1af0 <line:264:19, col:42> col:42 __woken_seq 'unsigned long long'
| | |-FieldDecl 0x5570ae1e1b58 <line:265:5, col:11> col:11 __mutex 'void *'
| | |-FieldDecl 0x5570ae1e1bc0 <line:266:5, col:18> col:18 __nwaiters 'unsigned int'
| | `-FieldDecl 0x5570ae1e1c28 <line:267:5, col:18> col:18 __broadcast_seq 'unsigned int'
| |-FieldDecl 0x5570ae1e1ce0 <line:258:3, line:268:5> col:5 __data 'struct (anonymous struct at ./split_6/thin000_power.opt_false-unreach-call.i:258:3)':'struct pthread_cond_t::(anonymous at ./split_6/thin000_power.opt_false-unreach-call.i:258:3)'
| |-FieldDecl 0x5570ae1e1dd0 <line:269:3, col:17> col:8 __size 'char [48]'
| `-FieldDecl 0x5570ae1e1e38 <line:270:17, col:31> col:31 __align 'long long'
|-TypedefDecl 0x5570ae1e1f70 <line:256:1, line:271:3> col:3 referenced pthread_cond_t 'union pthread_cond_t':'pthread_cond_t'
| `-ElaboratedType 0x5570ae1e1f10 'union pthread_cond_t' sugar
|   `-RecordType 0x5570ae1e1860 'pthread_cond_t'
|     `-Record 0x5570ae1e17e0 ''
|-RecordDecl 0x5570ae1e1fe0 <line:272:9, line:276:1> line:272:9 union definition
| |-FieldDecl 0x5570ae1e3130 <line:274:3, col:16> col:8 __size 'char [4]'
| `-FieldDecl 0x5570ae1e3198 <line:275:3, col:7> col:7 __align 'int'
|-TypedefDecl 0x5570ae1e3250 <line:272:1, line:276:3> col:3 referenced pthread_condattr_t 'union pthread_condattr_t':'pthread_condattr_t'
| `-ElaboratedType 0x5570ae1e31f0 'union pthread_condattr_t' sugar
|   `-RecordType 0x5570ae1e2060 'pthread_condattr_t'
|     `-Record 0x5570ae1e1fe0 ''
|-TypedefDecl 0x5570ae1e32d8 <line:277:1, col:22> col:22 referenced pthread_key_t 'unsigned int'
| `-BuiltinType 0x5570ae166fb0 'unsigned int'
|-TypedefDecl 0x5570ae1e3348 <line:278:1, col:13> col:13 referenced pthread_once_t 'int'
| `-BuiltinType 0x5570ae166f10 'int'
|-RecordDecl 0x5570ae1e33a0 <line:279:9, line:297:1> line:279:9 union definition
| |-RecordDecl 0x5570ae1e3448 <line:281:3, line:294:3> line:281:3 struct definition
| | |-FieldDecl 0x5570ae1e3510 <line:283:5, col:9> col:9 __lock 'int'
| | |-FieldDecl 0x5570ae1e3578 <line:284:5, col:18> col:18 __nr_readers 'unsigned int'
| | |-FieldDecl 0x5570ae1e35e0 <line:285:5, col:18> col:18 __readers_wakeup 'unsigned int'
| | |-FieldDecl 0x5570ae1e3648 <line:286:5, col:18> col:18 __writer_wakeup 'unsigned int'
| | |-FieldDecl 0x5570ae1e36b0 <line:287:5, col:18> col:18 __nr_readers_queued 'unsigned int'
| | |-FieldDecl 0x5570ae1e3718 <line:288:5, col:18> col:18 __nr_writers_queued 'unsigned int'
| | |-FieldDecl 0x5570ae1e3780 <line:289:5, col:9> col:9 __writer 'int'
| | |-FieldDecl 0x5570ae1e37e8 <line:290:5, col:9> col:9 __shared 'int'
| | |-FieldDecl 0x5570ae1e3850 <line:291:5, col:23> col:23 __pad1 'unsigned long'
| | |-FieldDecl 0x5570ae1e38b8 <line:292:5, col:23> col:23 __pad2 'unsigned long'
| | `-FieldDecl 0x5570ae1e3920 <line:293:5, col:18> col:18 __flags 'unsigned int'
| |-FieldDecl 0x5570ae1e39d0 <line:281:3, line:294:5> col:5 __data 'struct (anonymous struct at ./split_6/thin000_power.opt_false-unreach-call.i:281:3)':'struct pthread_rwlock_t::(anonymous at ./split_6/thin000_power.opt_false-unreach-call.i:281:3)'
| |-FieldDecl 0x5570ae1e3a78 <line:295:3, col:17> col:8 __size 'char [56]'
| `-FieldDecl 0x5570ae1e3ae0 <line:296:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x5570ae1e3c30 <line:279:1, line:297:3> col:3 referenced pthread_rwlock_t 'union pthread_rwlock_t':'pthread_rwlock_t'
| `-ElaboratedType 0x5570ae1e3bd0 'union pthread_rwlock_t' sugar
|   `-RecordType 0x5570ae1e3420 'pthread_rwlock_t'
|     `-Record 0x5570ae1e33a0 ''
|-RecordDecl 0x5570ae1e3ca0 <line:298:9, line:302:1> line:298:9 union definition
| |-FieldDecl 0x5570ae1e3de0 <line:300:3, col:16> col:8 __size 'char [8]'
| `-FieldDecl 0x5570ae1e3e48 <line:301:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x5570ae1e3f00 <line:298:1, line:302:3> col:3 referenced pthread_rwlockattr_t 'union pthread_rwlockattr_t':'pthread_rwlockattr_t'
| `-ElaboratedType 0x5570ae1e3ea0 'union pthread_rwlockattr_t' sugar
|   `-RecordType 0x5570ae1e3d20 'pthread_rwlockattr_t'
|     `-Record 0x5570ae1e3ca0 ''
|-TypedefDecl 0x5570ae1e3f88 <line:303:1, col:22> col:22 referenced pthread_spinlock_t 'volatile int'
| `-QualType 0x5570ae166f14 'volatile int' volatile
|   `-BuiltinType 0x5570ae166f10 'int'
|-RecordDecl 0x5570ae1e3fe0 <line:304:9, line:308:1> line:304:9 union definition
| |-FieldDecl 0x5570ae1e5140 <line:306:3, col:17> col:8 __size 'char [32]'
| `-FieldDecl 0x5570ae1e51a8 <line:307:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x5570ae1e5260 <line:304:1, line:308:3> col:3 referenced pthread_barrier_t 'union pthread_barrier_t':'pthread_barrier_t'
| `-ElaboratedType 0x5570ae1e5200 'union pthread_barrier_t' sugar
|   `-RecordType 0x5570ae1e4060 'pthread_barrier_t'
|     `-Record 0x5570ae1e3fe0 ''
|-RecordDecl 0x5570ae1e52d0 <line:309:9, line:313:1> line:309:9 union definition
| |-FieldDecl 0x5570ae1e53d0 <line:311:3, col:16> col:8 __size 'char [4]'
| `-FieldDecl 0x5570ae1e5438 <line:312:3, col:7> col:7 __align 'int'
|-TypedefDecl 0x5570ae1e54f0 <line:309:1, line:313:3> col:3 referenced pthread_barrierattr_t 'union pthread_barrierattr_t':'pthread_barrierattr_t'
| `-ElaboratedType 0x5570ae1e5490 'union pthread_barrierattr_t' sugar
|   `-RecordType 0x5570ae1e5350 'pthread_barrierattr_t'
|     `-Record 0x5570ae1e52d0 ''
|-TypedefDecl 0x5570ae1e5608 <line:314:1, col:29> col:18 referenced __jmp_buf 'long [8]'
| `-ConstantArrayType 0x5570ae1e55a0 'long [8]' 8 
|   `-BuiltinType 0x5570ae166f30 'long'
|-EnumDecl 0x5570ae1e5660 <line:315:1, line:319:1> line:315:1
| |-EnumConstantDecl 0x5570ae1e5728 <line:317:3> col:3 PTHREAD_CREATE_JOINABLE 'int'
| `-EnumConstantDecl 0x5570ae1e5778 <line:318:3> col:3 PTHREAD_CREATE_DETACHED 'int'
|-EnumDecl 0x5570ae1e57c8 <line:320:1, line:331:1> line:320:1
| |-EnumConstantDecl 0x5570ae1e5898 <line:322:3> col:3 referenced PTHREAD_MUTEX_TIMED_NP 'int'
| |-EnumConstantDecl 0x5570ae1e58e8 <line:323:3> col:3 referenced PTHREAD_MUTEX_RECURSIVE_NP 'int'
| |-EnumConstantDecl 0x5570ae1e5938 <line:324:3> col:3 referenced PTHREAD_MUTEX_ERRORCHECK_NP 'int'
| |-EnumConstantDecl 0x5570ae1e5988 <line:325:3> col:3 PTHREAD_MUTEX_ADAPTIVE_NP 'int'
| |-EnumConstantDecl 0x5570ae1e5a10 <line:327:3, col:26> col:3 referenced PTHREAD_MUTEX_NORMAL 'int'
| | `-ConstantExpr 0x5570ae1e59f8 <col:26> 'int'
| |   `-DeclRefExpr 0x5570ae1e59d8 <col:26> 'int' EnumConstant 0x5570ae1e5898 'PTHREAD_MUTEX_TIMED_NP' 'int'
| |-EnumConstantDecl 0x5570ae1e5a98 <line:328:3, col:29> col:3 PTHREAD_MUTEX_RECURSIVE 'int'
| | `-ConstantExpr 0x5570ae1e5a80 <col:29> 'int'
| |   `-DeclRefExpr 0x5570ae1e5a60 <col:29> 'int' EnumConstant 0x5570ae1e58e8 'PTHREAD_MUTEX_RECURSIVE_NP' 'int'
| |-EnumConstantDecl 0x5570ae1e5b20 <line:329:3, col:30> col:3 PTHREAD_MUTEX_ERRORCHECK 'int'
| | `-ConstantExpr 0x5570ae1e5b08 <col:30> 'int'
| |   `-DeclRefExpr 0x5570ae1e5ae8 <col:30> 'int' EnumConstant 0x5570ae1e5938 'PTHREAD_MUTEX_ERRORCHECK_NP' 'int'
| `-EnumConstantDecl 0x5570ae1e5ba8 <line:330:3, col:27> col:3 PTHREAD_MUTEX_DEFAULT 'int'
|   `-ConstantExpr 0x5570ae1e5b90 <col:27> 'int'
|     `-DeclRefExpr 0x5570ae1e5b70 <col:27> 'int' EnumConstant 0x5570ae1e5a10 'PTHREAD_MUTEX_NORMAL' 'int'
|-EnumDecl 0x5570ae1e5bf8 <line:332:1, line:338:1> line:332:1
| |-EnumConstantDecl 0x5570ae1e5cc8 <line:334:3> col:3 referenced PTHREAD_MUTEX_STALLED 'int'
| |-EnumConstantDecl 0x5570ae1e5d50 <line:335:3, col:30> col:3 PTHREAD_MUTEX_STALLED_NP 'int'
| | `-ConstantExpr 0x5570ae1e5d38 <col:30> 'int'
| |   `-DeclRefExpr 0x5570ae1e5d18 <col:30> 'int' EnumConstant 0x5570ae1e5cc8 'PTHREAD_MUTEX_STALLED' 'int'
| |-EnumConstantDecl 0x5570ae1e5da0 <line:336:3> col:3 referenced PTHREAD_MUTEX_ROBUST 'int'
| `-EnumConstantDecl 0x5570ae1e5e28 <line:337:3, col:29> col:3 PTHREAD_MUTEX_ROBUST_NP 'int'
|   `-ConstantExpr 0x5570ae1e5e10 <col:29> 'int'
|     `-DeclRefExpr 0x5570ae1e5df0 <col:29> 'int' EnumConstant 0x5570ae1e5da0 'PTHREAD_MUTEX_ROBUST' 'int'
|-EnumDecl 0x5570ae1e5e78 <line:339:1, line:344:1> line:339:1
| |-EnumConstantDecl 0x5570ae1e5f48 <line:341:3> col:3 PTHREAD_PRIO_NONE 'int'
| |-EnumConstantDecl 0x5570ae1e5f98 <line:342:3> col:3 PTHREAD_PRIO_INHERIT 'int'
| `-EnumConstantDecl 0x5570ae1e5fe8 <line:343:3> col:3 PTHREAD_PRIO_PROTECT 'int'
|-EnumDecl 0x5570ae1e6038 <line:345:1, line:351:1> line:345:1
| |-EnumConstantDecl 0x5570ae1e6150 <line:347:3> col:3 referenced PTHREAD_RWLOCK_PREFER_READER_NP 'int'
| |-EnumConstantDecl 0x5570ae1e61a0 <line:348:3> col:3 PTHREAD_RWLOCK_PREFER_WRITER_NP 'int'
| |-EnumConstantDecl 0x5570ae1e61f0 <line:349:3> col:3 PTHREAD_RWLOCK_PREFER_WRITER_NONRECURSIVE_NP 'int'
| `-EnumConstantDecl 0x5570ae1e6278 <line:350:3, col:31> col:3 PTHREAD_RWLOCK_DEFAULT_NP 'int'
|   `-ConstantExpr 0x5570ae1e6260 <col:31> 'int'
|     `-DeclRefExpr 0x5570ae1e6240 <col:31> 'int' EnumConstant 0x5570ae1e6150 'PTHREAD_RWLOCK_PREFER_READER_NP' 'int'
|-EnumDecl 0x5570ae1e62c8 <line:352:1, line:356:1> line:352:1
| |-EnumConstantDecl 0x5570ae1e6398 <line:354:3> col:3 PTHREAD_INHERIT_SCHED 'int'
| `-EnumConstantDecl 0x5570ae1e63e8 <line:355:3> col:3 PTHREAD_EXPLICIT_SCHED 'int'
|-EnumDecl 0x5570ae1e6438 <line:357:1, line:361:1> line:357:1
| |-EnumConstantDecl 0x5570ae1e6508 <line:359:3> col:3 PTHREAD_SCOPE_SYSTEM 'int'
| `-EnumConstantDecl 0x5570ae1e6558 <line:360:3> col:3 PTHREAD_SCOPE_PROCESS 'int'
|-EnumDecl 0x5570ae1e65a8 <line:362:1, line:366:1> line:362:1
| |-EnumConstantDecl 0x5570ae1e6678 <line:364:3> col:3 PTHREAD_PROCESS_PRIVATE 'int'
| `-EnumConstantDecl 0x5570ae1e66c8 <line:365:3> col:3 PTHREAD_PROCESS_SHARED 'int'
|-RecordDecl 0x5570ae1e6718 <line:367:1, line:373:1> line:367:8 struct _pthread_cleanup_buffer definition
| |-FieldDecl 0x5570ae1e6958 <line:369:3, col:28> col:10 __routine 'void (*)(void *)'
| |-FieldDecl 0x5570ae1e69c0 <line:370:3, col:9> col:9 __arg 'void *'
| |-FieldDecl 0x5570ae1e6a28 <line:371:3, col:7> col:7 __canceltype 'int'
| `-FieldDecl 0x5570ae1e6b48 <line:372:3, col:35> col:35 __prev 'struct _pthread_cleanup_buffer *'
|-EnumDecl 0x5570ae1e6b98 <line:374:1, line:378:1> line:374:1
| |-EnumConstantDecl 0x5570ae1e6c68 <line:376:3> col:3 PTHREAD_CANCEL_ENABLE 'int'
| `-EnumConstantDecl 0x5570ae1e6cb8 <line:377:3> col:3 PTHREAD_CANCEL_DISABLE 'int'
|-EnumDecl 0x5570ae1e6d08 <line:379:1, line:383:1> line:379:1
| |-EnumConstantDecl 0x5570ae1e6dd8 <line:381:3> col:3 PTHREAD_CANCEL_DEFERRED 'int'
| `-EnumConstantDecl 0x5570ae1e6e28 <line:382:3> col:3 PTHREAD_CANCEL_ASYNCHRONOUS 'int'
|-FunctionDecl 0x5570ae1e7488 <line:385:1, line:388:96> line:385:12 used pthread_create 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' extern
| |-ParmVarDecl 0x5570ae1e6f20 <col:28, col:50> col:50 __newthread 'pthread_t *restrict'
| |-ParmVarDecl 0x5570ae1e7030 <line:386:7, col:40> col:40 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x5570ae1e7270 <line:387:7, col:39> col:15 __start_routine 'void *(*)(void *)'
| |-ParmVarDecl 0x5570ae1e72f0 <line:388:7, col:24> col:24 __arg 'void *restrict'
| |-NoThrowAttr 0x5570ae1e7548 <col:47>
| |-NonNullAttr 0x5570ae1e75a0 <col:77, col:94> 1 3
| `-CallbackAttr 0x5570ae1e75d8 <line:385:12> Implicit 2 3
|-FunctionDecl 0x5570ae1e7700 <line:389:1, col:72> col:13 pthread_exit 'void (void *) __attribute__((noreturn))' extern
| `-ParmVarDecl 0x5570ae1e7630 <col:27, col:33> col:33 __retval 'void *'
|-FunctionDecl 0x5570ae1e7958 <line:390:1, col:64> col:12 pthread_join 'int (pthread_t, void **)' extern
| |-ParmVarDecl 0x5570ae1e77b8 <col:26, col:36> col:36 __th 'pthread_t':'unsigned long'
| `-ParmVarDecl 0x5570ae1e7838 <col:42, col:49> col:49 __thread_return 'void **'
|-FunctionDecl 0x5570ae1e7b28 <line:391:1, col:83> col:12 pthread_detach 'int (pthread_t)' extern
| |-ParmVarDecl 0x5570ae1e7a18 <col:28, col:38> col:38 __th 'pthread_t':'unsigned long'
| `-NoThrowAttr 0x5570ae1e7bd0 <col:60>
|-FunctionDecl 0x5570ae1e7d20 <line:392:1, col:105> col:18 pthread_self 'pthread_t (void)' extern
| |-NoThrowAttr 0x5570ae1e7dc0 <col:54>
| `-ConstAttr 0x5570ae1e7e18 <col:95>
|-FunctionDecl 0x5570ae1e7fe8 <line:393:1, line:394:70> line:393:12 pthread_equal 'int (pthread_t, pthread_t)' extern
| |-ParmVarDecl 0x5570ae1e7e50 <col:27, col:37> col:37 __thread1 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x5570ae1e7ec8 <col:48, col:58> col:58 __thread2 'pthread_t':'unsigned long'
| |-NoThrowAttr 0x5570ae1e8098 <line:394:19>
| `-ConstAttr 0x5570ae1e80f0 <col:60>
|-FunctionDecl 0x5570ae1e9b08 <line:395:1, col:128> col:12 pthread_attr_init 'int (pthread_attr_t *)' extern
| |-ParmVarDecl 0x5570ae1e99d0 <col:31, col:47> col:47 __attr 'pthread_attr_t *'
| |-NoThrowAttr 0x5570ae1e9bb0 <col:71>
| `-NonNullAttr 0x5570ae1e9c08 <col:112, col:126> 1
|-FunctionDecl 0x5570ae1e9d10 <line:396:1, line:397:79> line:396:12 pthread_attr_destroy 'int (pthread_attr_t *)' extern
| |-ParmVarDecl 0x5570ae1e9c58 <col:34, col:50> col:50 __attr 'pthread_attr_t *'
| |-NoThrowAttr 0x5570ae1e9db8 <line:397:22>
| `-NonNullAttr 0x5570ae1e9e10 <col:63, col:77> 1
|-FunctionDecl 0x5570ae1ea038 <line:398:1, line:400:82> line:398:12 pthread_attr_getdetachstate 'int (const pthread_attr_t *, int *)' extern
| |-ParmVarDecl 0x5570ae1e9e58 <col:41, col:63> col:63 __attr 'const pthread_attr_t *'
| |-ParmVarDecl 0x5570ae1e9ed8 <line:399:6, col:11> col:11 __detachstate 'int *'
| |-NoThrowAttr 0x5570ae1ea0e8 <line:400:22>
| `-NonNullAttr 0x5570ae1ea140 <col:63, col:80> 1 2
|-FunctionDecl 0x5570ae1ea348 <line:401:1, line:403:79> line:401:12 pthread_attr_setdetachstate 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x5570ae1ea188 <col:41, col:57> col:57 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x5570ae1ea208 <line:402:6, col:10> col:10 __detachstate 'int'
| |-NoThrowAttr 0x5570ae1ea3f8 <line:403:22>
| `-NonNullAttr 0x5570ae1ea450 <col:63, col:77> 1
|-FunctionDecl 0x5570ae1ea6a8 <line:404:1, line:406:82> line:404:12 pthread_attr_getguardsize 'int (const pthread_attr_t *, size_t *)' extern
| |-ParmVarDecl 0x5570ae1ea498 <col:39, col:61> col:61 __attr 'const pthread_attr_t *'
| |-ParmVarDecl 0x5570ae1ea540 <line:405:11, col:19> col:19 __guardsize 'size_t *'
| |-NoThrowAttr 0x5570ae1ea758 <line:406:22>
| `-NonNullAttr 0x5570ae1ea7b0 <col:63, col:80> 1 2
|-FunctionDecl 0x5570ae1eb9e8 <line:407:1, line:409:79> line:407:12 pthread_attr_setguardsize 'int (pthread_attr_t *, size_t)' extern
| |-ParmVarDecl 0x5570ae1ea7f8 <col:39, col:55> col:55 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x5570ae1ea870 <line:408:11, col:18> col:18 __guardsize 'size_t':'unsigned long'
| |-NoThrowAttr 0x5570ae1eba98 <line:409:22>
| `-NonNullAttr 0x5570ae1ebaf0 <col:63, col:77> 1
|-FunctionDecl 0x5570ae1ebd28 <line:410:1, line:412:82> line:410:12 pthread_attr_getschedparam 'int (const pthread_attr_t *restrict, struct sched_param *restrict)' extern
| |-ParmVarDecl 0x5570ae1ebb38 <col:40, col:73> col:73 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x5570ae1ebbc8 <line:411:12, col:43> col:43 __param 'struct sched_param *restrict'
| |-NoThrowAttr 0x5570ae1ebdd8 <line:412:22>
| `-NonNullAttr 0x5570ae1ebe30 <col:63, col:80> 1 2
|-FunctionDecl 0x5570ae1ec068 <line:413:1, line:415:97> line:413:12 pthread_attr_setschedparam 'int (pthread_attr_t *restrict, const struct sched_param *restrict)' extern
| |-ParmVarDecl 0x5570ae1ebe78 <col:40, col:67> col:67 __attr 'pthread_attr_t *restrict'
| |-ParmVarDecl 0x5570ae1ebf08 <line:414:12, line:415:12> col:12 __param 'const struct sched_param *restrict'
| |-NoThrowAttr 0x5570ae1ec118 <col:37>
| `-NonNullAttr 0x5570ae1ec170 <col:78, col:95> 1 2
|-FunctionDecl 0x5570ae1ec358 <line:416:1, line:418:82> line:416:12 pthread_attr_getschedpolicy 'int (const pthread_attr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x5570ae1ec1b8 <col:41, line:417:6> col:6 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x5570ae1ec238 <col:14, col:30> col:30 __policy 'int *restrict'
| |-NoThrowAttr 0x5570ae1ec408 <line:418:22>
| `-NonNullAttr 0x5570ae1ec460 <col:63, col:80> 1 2
|-FunctionDecl 0x5570ae1ec5e8 <line:419:1, line:420:79> line:419:12 pthread_attr_setschedpolicy 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x5570ae1ec4a8 <col:41, col:57> col:57 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x5570ae1ec528 <col:65, col:69> col:69 __policy 'int'
| |-NoThrowAttr 0x5570ae1ec698 <line:420:22>
| `-NonNullAttr 0x5570ae1ec6f0 <col:63, col:77> 1
|-FunctionDecl 0x5570ae1ec898 <line:421:1, line:423:82> line:421:12 pthread_attr_getinheritsched 'int (const pthread_attr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x5570ae1ec738 <col:42, line:422:7> col:7 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x5570ae1ec7b8 <col:15, col:31> col:31 __inherit 'int *restrict'
| |-NoThrowAttr 0x5570ae1ec948 <line:423:22>
| `-NonNullAttr 0x5570ae1ec9c0 <col:63, col:80> 1 2
|-FunctionDecl 0x5570ae1ecb48 <line:424:1, line:426:79> line:424:12 pthread_attr_setinheritsched 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x5570ae1eca08 <col:42, col:58> col:58 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x5570ae1eca88 <line:425:7, col:11> col:11 __inherit 'int'
| |-NoThrowAttr 0x5570ae1ecbf8 <line:426:22>
| `-NonNullAttr 0x5570ae1ecc50 <col:63, col:77> 1
|-FunctionDecl 0x5570ae1ecdf8 <line:427:1, line:429:82> line:427:12 pthread_attr_getscope 'int (const pthread_attr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x5570ae1ecc98 <col:35, col:68> col:68 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x5570ae1ecd18 <line:428:7, col:23> col:23 __scope 'int *restrict'
| |-NoThrowAttr 0x5570ae1ecea8 <line:429:22>
| `-NonNullAttr 0x5570ae1ecf00 <col:63, col:80> 1 2
|-FunctionDecl 0x5570ae1ed088 <line:430:1, line:431:79> line:430:12 pthread_attr_setscope 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x5570ae1ecf48 <col:35, col:51> col:51 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x5570ae1ecfc8 <col:59, col:63> col:63 __scope 'int'
| |-NoThrowAttr 0x5570ae1ed138 <line:431:22>
| `-NonNullAttr 0x5570ae1ed190 <col:63, col:77> 1
|-FunctionDecl 0x5570ae1ed3b8 <line:432:1, line:434:115> line:432:12 pthread_attr_getstackaddr 'int (const pthread_attr_t *restrict, void **restrict)' extern
| |-ParmVarDecl 0x5570ae1ed1d8 <col:39, line:433:11> col:11 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x5570ae1ed258 <col:19, col:37> col:37 __stackaddr 'void **restrict'
| |-NoThrowAttr 0x5570ae1ed468 <line:434:22>
| |-NonNullAttr 0x5570ae1ed4c0 <col:63, col:80> 1 2
| `-DeprecatedAttr 0x5570ae1ed4f8 <col:100> "" ""
|-FunctionDecl 0x5570ae1ed708 <line:435:1, line:437:112> line:435:12 pthread_attr_setstackaddr 'int (pthread_attr_t *, void *)' extern
| |-ParmVarDecl 0x5570ae1ed548 <col:39, col:55> col:55 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x5570ae1ed5c8 <line:436:11, col:17> col:17 __stackaddr 'void *'
| |-NoThrowAttr 0x5570ae1ed7b8 <line:437:22>
| |-NonNullAttr 0x5570ae1ed810 <col:63, col:77> 1
| `-DeprecatedAttr 0x5570ae1ed848 <col:97> "" ""
|-FunctionDecl 0x5570ae1eda48 <line:438:1, line:440:82> line:438:12 pthread_attr_getstacksize 'int (const pthread_attr_t *restrict, size_t *restrict)' extern
| |-ParmVarDecl 0x5570ae1ed898 <col:39, line:439:11> col:11 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x5570ae1ed910 <col:19, col:38> col:38 __stacksize 'size_t *restrict'
| |-NoThrowAttr 0x5570ae1edaf8 <line:440:22>
| `-NonNullAttr 0x5570ae1edb50 <col:63, col:80> 1 2
|-FunctionDecl 0x5570ae1edcd0 <line:441:1, line:443:79> line:441:12 pthread_attr_setstacksize 'int (pthread_attr_t *, size_t)' extern
| |-ParmVarDecl 0x5570ae1edb98 <col:39, col:55> col:55 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x5570ae1edc10 <line:442:11, col:18> col:18 __stacksize 'size_t':'unsigned long'
| |-NoThrowAttr 0x5570ae1edd80 <line:443:22>
| `-NonNullAttr 0x5570ae1eddd8 <col:63, col:77> 1
|-FunctionDecl 0x5570ae1ee0c8 <line:444:1, line:447:85> line:444:12 pthread_attr_getstack 'int (const pthread_attr_t *restrict, void **restrict, size_t *restrict)' extern
| |-ParmVarDecl 0x5570ae1ede28 <col:35, col:68> col:68 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x5570ae1edea8 <line:445:7, col:25> col:25 __stackaddr 'void **restrict'
| |-ParmVarDecl 0x5570ae1edf20 <line:446:7, col:26> col:26 __stacksize 'size_t *restrict'
| |-NoThrowAttr 0x5570ae1ee180 <line:447:22>
| `-NonNullAttr 0x5570ae1ee1d8 <col:63, col:83> 1 2 3
|-FunctionDecl 0x5570ae1ee488 <line:448:1, line:449:100> line:448:12 pthread_attr_setstack 'int (pthread_attr_t *, void *, size_t)' extern
| |-ParmVarDecl 0x5570ae1ee230 <col:35, col:51> col:51 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x5570ae1ee2b0 <col:59, col:65> col:65 __stackaddr 'void *'
| |-ParmVarDecl 0x5570ae1ee328 <line:449:7, col:14> col:14 __stacksize 'size_t':'unsigned long'
| |-NoThrowAttr 0x5570ae1ee540 <col:43>
| `-NonNullAttr 0x5570ae1ee598 <col:84, col:98> 1
|-FunctionDecl 0x5570ae1ee858 <line:450:1, line:452:79> line:450:12 pthread_setschedparam 'int (pthread_t, int, const struct sched_param *)' extern
| |-ParmVarDecl 0x5570ae1ee5e8 <col:35, col:45> col:45 __target_thread 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x5570ae1ee668 <col:62, col:66> col:66 __policy 'int'
| |-ParmVarDecl 0x5570ae1ee6f8 <line:451:7, col:33> col:33 __param 'const struct sched_param *'
| |-NoThrowAttr 0x5570ae1ee910 <line:452:22>
| `-NonNullAttr 0x5570ae1ee968 <col:63, col:77> 3
|-FunctionDecl 0x5570ae1eec78 <line:453:1, line:456:82> line:453:12 pthread_getschedparam 'int (pthread_t, int *restrict, struct sched_param *restrict)' extern
| |-ParmVarDecl 0x5570ae1ee9e0 <col:35, col:45> col:45 __target_thread 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x5570ae1eea60 <line:454:7, col:23> col:23 __policy 'int *restrict'
| |-ParmVarDecl 0x5570ae1eeaf0 <line:455:7, col:38> col:38 __param 'struct sched_param *restrict'
| |-NoThrowAttr 0x5570ae1eed30 <line:456:22>
| `-NonNullAttr 0x5570ae1eed88 <col:63, col:80> 2 3
|-FunctionDecl 0x5570ae1eef78 <line:457:1, line:458:45> line:457:12 pthread_setschedprio 'int (pthread_t, int)' extern
| |-ParmVarDecl 0x5570ae1eedd8 <col:34, col:44> col:44 __target_thread 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x5570ae1eee58 <col:61, col:65> col:65 __prio 'int'
| `-NoThrowAttr 0x5570ae1ef028 <line:458:22>
|-FunctionDecl 0x5570ae1ef3f8 <line:459:1, line:460:71> line:459:12 pthread_once 'int (pthread_once_t *, void (*)(void))' extern
| |-ParmVarDecl 0x5570ae1ef0f0 <col:26, col:42> col:42 __once_control 'pthread_once_t *'
| |-ParmVarDecl 0x5570ae1ef290 <line:460:5, col:33> col:12 __init_routine 'void (*)(void)'
| `-NonNullAttr 0x5570ae1ef4a8 <col:52, col:69> 1 2
|-FunctionDecl 0x5570ae1ef650 <line:461:1, col:64> col:12 pthread_setcancelstate 'int (int, int *)' extern
| |-ParmVarDecl 0x5570ae1ef530 <col:36, col:40> col:40 __state 'int'
| `-ParmVarDecl 0x5570ae1ef5b0 <col:49, col:54> col:54 __oldstate 'int *'
|-FunctionDecl 0x5570ae1ef838 <line:462:1, col:61> col:12 pthread_setcanceltype 'int (int, int *)' extern
| |-ParmVarDecl 0x5570ae1ef718 <col:35, col:39> col:39 __type 'int'
| `-ParmVarDecl 0x5570ae1ef798 <col:47, col:52> col:52 __oldtype 'int *'
|-FunctionDecl 0x5570ae1ef9f0 <line:463:1, col:42> col:12 pthread_cancel 'int (pthread_t)' extern
| `-ParmVarDecl 0x5570ae1ef8f8 <col:28, col:38> col:38 __th 'pthread_t':'unsigned long'
|-FunctionDecl 0x5570ae1efb30 <line:464:1, col:37> col:13 pthread_testcancel 'void (void)' extern
|-RecordDecl 0x5570ae1efbd0 <line:465:9, line:473:1> line:465:9 struct definition
| |-RecordDecl 0x5570ae1efc78 <line:467:3, line:471:3> line:467:3 struct definition
| | |-FieldDecl 0x5570ae1efd68 <line:469:5, col:15> col:15 __cancel_jmp_buf '__jmp_buf':'long [8]'
| | `-FieldDecl 0x5570ae1efdd0 <line:470:5, col:9> col:9 __mask_was_saved 'int'
| |-FieldDecl 0x5570ae1effa0 <line:467:3, line:471:23> col:5 __cancel_jmp_buf 'struct (anonymous struct at ./split_6/thin000_power.opt_false-unreach-call.i:467:3) [1]'
| `-FieldDecl 0x5570ae1f0098 <line:472:3, col:16> col:9 __pad 'void *[4]'
|-TypedefDecl 0x5570ae1f0150 <line:465:1, line:473:3> col:3 referenced __pthread_unwind_buf_t 'struct __pthread_unwind_buf_t':'__pthread_unwind_buf_t'
| |-ElaboratedType 0x5570ae1f00f0 'struct __pthread_unwind_buf_t' sugar
| | `-RecordType 0x5570ae1efc50 '__pthread_unwind_buf_t'
| |   `-Record 0x5570ae1efbd0 ''
| `-AlignedAttr 0x5570ae1f01a8 <col:42> aligned
|   `-<<<NULL>>>
|-RecordDecl 0x5570ae1f0220 <line:474:1, line:480:1> line:474:8 struct __pthread_cleanup_frame definition
| |-FieldDecl 0x5570ae1f0380 <line:476:3, col:35> col:10 __cancel_routine 'void (*)(void *)'
| |-FieldDecl 0x5570ae1f03e8 <line:477:3, col:9> col:9 __cancel_arg 'void *'
| |-FieldDecl 0x5570ae1f0450 <line:478:3, col:7> col:7 __do_it 'int'
| `-FieldDecl 0x5570ae1f04b8 <line:479:3, col:7> col:7 __cancel_type 'int'
|-FunctionDecl 0x5570ae1f06c0 <line:481:1, col:69> col:13 __pthread_register_cancel 'void (__pthread_unwind_buf_t *)' extern
| `-ParmVarDecl 0x5570ae1f05b0 <col:40, col:64> col:64 __buf '__pthread_unwind_buf_t *'
|-FunctionDecl 0x5570ae1f0808 <line:483:1, col:71> col:13 __pthread_unregister_cancel 'void (__pthread_unwind_buf_t *)' extern
| `-ParmVarDecl 0x5570ae1f0778 <col:42, col:66> col:66 __buf '__pthread_unwind_buf_t *'
|-FunctionDecl 0x5570ae1f0a00 <line:485:1, line:487:31> line:485:13 __pthread_unwind_next 'void (__pthread_unwind_buf_t *) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x5570ae1f08c0 <col:36, col:60> col:60 __buf '__pthread_unwind_buf_t *'
| `-WeakAttr 0x5570ae1f0aa8 <line:487:22>
|-RecordDecl 0x5570ae1f0b00 <line:489:1, col:8> col:8 struct __jmp_buf_tag
|-FunctionDecl 0x5570ae1f0e18 <line:490:1, col:98> col:12 __sigsetjmp 'int (struct __jmp_buf_tag *, int)' extern
| |-ParmVarDecl 0x5570ae1f0c78 <col:25, col:47> col:47 __env 'struct __jmp_buf_tag *'
| |-ParmVarDecl 0x5570ae1f0cf8 <col:54, col:58> col:58 __savemask 'int'
| |-NoThrowAttr 0x5570ae1f0ec8 <col:86>
| `-ReturnsTwiceAttr 0x5570ae1f0f20 <col:12> Implicit
|-FunctionDecl 0x5570ae1f1248 <line:491:1, line:493:79> line:491:12 pthread_mutex_init 'int (pthread_mutex_t *, const pthread_mutexattr_t *)' extern
| |-ParmVarDecl 0x5570ae1f0ff0 <col:32, col:49> col:49 __mutex 'pthread_mutex_t *'
| |-ParmVarDecl 0x5570ae1f1100 <line:492:11, col:38> col:38 __mutexattr 'const pthread_mutexattr_t *'
| |-NoThrowAttr 0x5570ae1f12f8 <line:493:22>
| `-NonNullAttr 0x5570ae1f1350 <col:63, col:77> 1
|-FunctionDecl 0x5570ae1f14c8 <line:494:1, line:495:79> line:494:12 pthread_mutex_destroy 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x5570ae1f1398 <col:35, col:52> col:52 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x5570ae1f1570 <line:495:22>
| `-NonNullAttr 0x5570ae1f15c8 <col:63, col:77> 1
|-FunctionDecl 0x5570ae1f16d0 <line:496:1, line:497:68> line:496:12 pthread_mutex_trylock 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x5570ae1f1618 <col:35, col:52> col:52 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x5570ae1f1778 <line:497:22>
| `-NonNullAttr 0x5570ae1f17d0 <col:52, col:66> 1
|-FunctionDecl 0x5570ae1f18d0 <line:498:1, line:499:68> line:498:12 pthread_mutex_lock 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x5570ae1f1818 <col:32, col:49> col:49 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x5570ae1f1978 <line:499:22>
| `-NonNullAttr 0x5570ae1f19d0 <col:52, col:66> 1
|-FunctionDecl 0x5570ae1f2c28 <line:500:1, line:502:85> line:500:12 pthread_mutex_timedlock 'int (pthread_mutex_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x5570ae1f2a38 <col:37, col:65> col:65 __mutex 'pthread_mutex_t *restrict'
| |-ParmVarDecl 0x5570ae1f2ac8 <line:501:9, line:502:9> col:9 __abstime 'const struct timespec *restrict'
| |-NoThrowAttr 0x5570ae1f2cd8 <col:36>
| `-NonNullAttr 0x5570ae1f2d30 <col:66, col:83> 1 2
|-FunctionDecl 0x5570ae1f2e30 <line:503:1, line:504:68> line:503:12 pthread_mutex_unlock 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x5570ae1f2d78 <col:34, col:51> col:51 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x5570ae1f2ed8 <line:504:22>
| `-NonNullAttr 0x5570ae1f2f30 <col:52, col:66> 1
|-FunctionDecl 0x5570ae1f31c8 <line:505:1, line:508:82> line:505:12 pthread_mutex_getprioceiling 'int (const pthread_mutex_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x5570ae1f2fe0 <col:42, line:506:18> col:18 __mutex 'const pthread_mutex_t *restrict'
| |-ParmVarDecl 0x5570ae1f3060 <line:507:7, col:23> col:23 __prioceiling 'int *restrict'
| |-NoThrowAttr 0x5570ae1f3278 <line:508:22>
| `-NonNullAttr 0x5570ae1f32d0 <col:63, col:80> 1 2
|-FunctionDecl 0x5570ae1f3598 <line:509:1, line:512:82> line:509:12 pthread_mutex_setprioceiling 'int (pthread_mutex_t *restrict, int, int *restrict)' extern
| |-ParmVarDecl 0x5570ae1f3318 <col:42, col:70> col:70 __mutex 'pthread_mutex_t *restrict'
| |-ParmVarDecl 0x5570ae1f3398 <line:510:7, col:11> col:11 __prioceiling 'int'
| |-ParmVarDecl 0x5570ae1f3418 <line:511:7, col:23> col:23 __old_ceiling 'int *restrict'
| |-NoThrowAttr 0x5570ae1f3650 <line:512:22>
| `-NonNullAttr 0x5570ae1f36a8 <col:63, col:80> 1 3
|-FunctionDecl 0x5570ae1f37b0 <line:513:1, line:514:79> line:513:12 pthread_mutex_consistent 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x5570ae1f36f8 <col:38, col:55> col:55 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x5570ae1f3858 <line:514:22>
| `-NonNullAttr 0x5570ae1f38b0 <col:63, col:77> 1
|-FunctionDecl 0x5570ae1f3ad8 <line:515:1, line:516:79> line:515:12 pthread_mutexattr_init 'int (pthread_mutexattr_t *)' extern
| |-ParmVarDecl 0x5570ae1f3960 <col:36, col:57> col:57 __attr 'pthread_mutexattr_t *'
| |-NoThrowAttr 0x5570ae1f3b80 <line:516:22>
| `-NonNullAttr 0x5570ae1f3bd8 <col:63, col:77> 1
|-FunctionDecl 0x5570ae1f3ce0 <line:517:1, line:518:79> line:517:12 pthread_mutexattr_destroy 'int (pthread_mutexattr_t *)' extern
| |-ParmVarDecl 0x5570ae1f3c28 <col:39, col:60> col:60 __attr 'pthread_mutexattr_t *'
| |-NoThrowAttr 0x5570ae1f3d88 <line:518:22>
| `-NonNullAttr 0x5570ae1f3de0 <col:63, col:77> 1
|-FunctionDecl 0x5570ae1f4008 <line:519:1, line:522:82> line:519:12 pthread_mutexattr_getpshared 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x5570ae1f3e28 <col:42, line:520:18> col:18 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x5570ae1f3ea8 <line:521:7, col:23> col:23 __pshared 'int *restrict'
| |-NoThrowAttr 0x5570ae1f40b8 <line:522:22>
| `-NonNullAttr 0x5570ae1f4110 <col:63, col:80> 1 2
|-FunctionDecl 0x5570ae1f4318 <line:523:1, line:525:79> line:523:12 pthread_mutexattr_setpshared 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x5570ae1f4158 <col:42, col:63> col:63 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x5570ae1f41d8 <line:524:7, col:11> col:11 __pshared 'int'
| |-NoThrowAttr 0x5570ae1f43c8 <line:525:22>
| `-NonNullAttr 0x5570ae1f4420 <col:63, col:77> 1
|-FunctionDecl 0x5570ae1f45c8 <line:526:1, line:528:82> line:526:12 pthread_mutexattr_gettype 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x5570ae1f4468 <col:39, line:527:11> col:11 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x5570ae1f44e8 <col:19, col:35> col:35 __kind 'int *restrict'
| |-NoThrowAttr 0x5570ae1f4678 <line:528:22>
| `-NonNullAttr 0x5570ae1f46d0 <col:63, col:80> 1 2
|-FunctionDecl 0x5570ae1f4858 <line:529:1, line:530:79> line:529:12 pthread_mutexattr_settype 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x5570ae1f4718 <col:39, col:60> col:60 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x5570ae1f4798 <col:68, col:72> col:72 __kind 'int'
| |-NoThrowAttr 0x5570ae1f4908 <line:530:22>
| `-NonNullAttr 0x5570ae1f4960 <col:63, col:77> 1
|-FunctionDecl 0x5570ae1f4b20 <line:531:1, line:534:82> line:531:12 pthread_mutexattr_getprotocol 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x5570ae1f49a8 <col:43, line:532:19> col:19 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x5570ae1f4a40 <line:533:8, col:24> col:24 __protocol 'int *restrict'
| |-NoThrowAttr 0x5570ae1f4bd0 <line:534:22>
| `-NonNullAttr 0x5570ae1f4c28 <col:63, col:80> 1 2
|-FunctionDecl 0x5570ae1f4db8 <line:535:1, line:537:79> line:535:12 pthread_mutexattr_setprotocol 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x5570ae1f4c78 <col:43, col:64> col:64 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x5570ae1f4cf8 <line:536:8, col:12> col:12 __protocol 'int'
| |-NoThrowAttr 0x5570ae1f4e68 <line:537:22>
| `-NonNullAttr 0x5570ae1f4ec0 <col:63, col:77> 1
|-FunctionDecl 0x5570ae1f5068 <line:538:1, line:541:82> line:538:12 pthread_mutexattr_getprioceiling 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x5570ae1f4f08 <col:46, line:539:22> col:22 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x5570ae1f4f88 <line:540:11, col:27> col:27 __prioceiling 'int *restrict'
| |-NoThrowAttr 0x5570ae1f5118 <line:541:22>
| `-NonNullAttr 0x5570ae1f5170 <col:63, col:80> 1 2
|-FunctionDecl 0x5570ae1f52f8 <line:542:1, line:544:79> line:542:12 pthread_mutexattr_setprioceiling 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x5570ae1f51b8 <col:46, col:67> col:67 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x5570ae1f5238 <line:543:11, col:15> col:15 __prioceiling 'int'
| |-NoThrowAttr 0x5570ae1f53a8 <line:544:22>
| `-NonNullAttr 0x5570ae1f5400 <col:63, col:77> 1
|-FunctionDecl 0x5570ae1f55e8 <line:545:1, line:547:82> line:545:12 pthread_mutexattr_getrobust 'int (const pthread_mutexattr_t *, int *)' extern
| |-ParmVarDecl 0x5570ae1f5448 <col:41, col:68> col:68 __attr 'const pthread_mutexattr_t *'
| |-ParmVarDecl 0x5570ae1f54c8 <line:546:6, col:11> col:11 __robustness 'int *'
| |-NoThrowAttr 0x5570ae1f5698 <line:547:22>
| `-NonNullAttr 0x5570ae1f56f0 <col:63, col:80> 1 2
|-FunctionDecl 0x5570ae1f5878 <line:548:1, line:550:79> line:548:12 pthread_mutexattr_setrobust 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x5570ae1f5738 <col:41, col:62> col:62 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x5570ae1f57b8 <line:549:6, col:10> col:10 __robustness 'int'
| |-NoThrowAttr 0x5570ae1f5928 <line:550:22>
| `-NonNullAttr 0x5570ae1f5980 <col:63, col:77> 1
|-FunctionDecl 0x5570ae1f6cf8 <line:551:1, line:553:86> line:551:12 pthread_rwlock_init 'int (pthread_rwlock_t *restrict, const pthread_rwlockattr_t *restrict)' extern
| |-ParmVarDecl 0x5570ae1f6aa0 <col:33, col:62> col:62 __rwlock 'pthread_rwlock_t *restrict'
| |-ParmVarDecl 0x5570ae1f6bb0 <line:552:5, line:553:5> col:5 __attr 'const pthread_rwlockattr_t *restrict'
| |-NoThrowAttr 0x5570ae1f6da8 <col:29>
| `-NonNullAttr 0x5570ae1f6e00 <col:70, col:84> 1
|-FunctionDecl 0x5570ae1f6f78 <line:554:1, line:555:79> line:554:12 pthread_rwlock_destroy 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x5570ae1f6e48 <col:36, col:54> col:54 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x5570ae1f7020 <line:555:22>
| `-NonNullAttr 0x5570ae1f7078 <col:63, col:77> 1
|-FunctionDecl 0x5570ae1f7180 <line:556:1, line:557:68> line:556:12 pthread_rwlock_rdlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x5570ae1f70c8 <col:35, col:53> col:53 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x5570ae1f7228 <line:557:22>
| `-NonNullAttr 0x5570ae1f7280 <col:52, col:66> 1
|-FunctionDecl 0x5570ae1f7380 <line:558:1, line:559:65> line:558:12 pthread_rwlock_tryrdlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x5570ae1f72c8 <col:38, col:56> col:56 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x5570ae1f7428 <line:559:19>
| `-NonNullAttr 0x5570ae1f7480 <col:49, col:63> 1
|-FunctionDecl 0x5570ae1f76b8 <line:560:1, line:562:88> line:560:12 pthread_rwlock_timedrdlock 'int (pthread_rwlock_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x5570ae1f74c8 <col:40, col:69> col:69 __rwlock 'pthread_rwlock_t *restrict'
| |-ParmVarDecl 0x5570ae1f7558 <line:561:12, line:562:12> col:12 __abstime 'const struct timespec *restrict'
| |-NoThrowAttr 0x5570ae1f7768 <col:39>
| `-NonNullAttr 0x5570ae1f77c0 <col:69, col:86> 1 2
|-FunctionDecl 0x5570ae1f78c0 <line:563:1, line:564:68> line:563:12 pthread_rwlock_wrlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x5570ae1f7808 <col:35, col:53> col:53 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x5570ae1f7968 <line:564:22>
| `-NonNullAttr 0x5570ae1f79c0 <col:52, col:66> 1
|-FunctionDecl 0x5570ae1f7b28 <line:565:1, line:566:68> line:565:12 pthread_rwlock_trywrlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x5570ae1f7a70 <col:38, col:56> col:56 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x5570ae1f7bd0 <line:566:22>
| `-NonNullAttr 0x5570ae1f7c28 <col:52, col:66> 1
|-FunctionDecl 0x5570ae1f7de8 <line:567:1, line:569:88> line:567:12 pthread_rwlock_timedwrlock 'int (pthread_rwlock_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x5570ae1f7c78 <col:40, col:69> col:69 __rwlock 'pthread_rwlock_t *restrict'
| |-ParmVarDecl 0x5570ae1f7d08 <line:568:12, line:569:12> col:12 __abstime 'const struct timespec *restrict'
| |-NoThrowAttr 0x5570ae1f7e98 <col:39>
| `-NonNullAttr 0x5570ae1f7ef0 <col:69, col:86> 1 2
|-FunctionDecl 0x5570ae1f7ff0 <line:570:1, line:571:68> line:570:12 pthread_rwlock_unlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x5570ae1f7f38 <col:35, col:53> col:53 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x5570ae1f8098 <line:571:22>
| `-NonNullAttr 0x5570ae1f80f0 <col:52, col:66> 1
|-FunctionDecl 0x5570ae1f82d8 <line:572:1, line:573:79> line:572:12 pthread_rwlockattr_init 'int (pthread_rwlockattr_t *)' extern
| |-ParmVarDecl 0x5570ae1f81a0 <col:37, col:59> col:59 __attr 'pthread_rwlockattr_t *'
| |-NoThrowAttr 0x5570ae1f8380 <line:573:22>
| `-NonNullAttr 0x5570ae1f83d8 <col:63, col:77> 1
|-FunctionDecl 0x5570ae1f84e0 <line:574:1, line:575:79> line:574:12 pthread_rwlockattr_destroy 'int (pthread_rwlockattr_t *)' extern
| |-ParmVarDecl 0x5570ae1f8428 <col:40, col:62> col:62 __attr 'pthread_rwlockattr_t *'
| |-NoThrowAttr 0x5570ae1f8588 <line:575:22>
| `-NonNullAttr 0x5570ae1f85e0 <col:63, col:77> 1
|-FunctionDecl 0x5570ae1f8808 <line:576:1, line:579:82> line:576:12 pthread_rwlockattr_getpshared 'int (const pthread_rwlockattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x5570ae1f8628 <col:43, line:577:19> col:19 __attr 'const pthread_rwlockattr_t *restrict'
| |-ParmVarDecl 0x5570ae1f86a8 <line:578:8, col:24> col:24 __pshared 'int *restrict'
| |-NoThrowAttr 0x5570ae1f88b8 <line:579:22>
| `-NonNullAttr 0x5570ae1f8910 <col:63, col:80> 1 2
|-FunctionDecl 0x5570ae1f8b38 <line:580:1, line:582:79> line:580:12 pthread_rwlockattr_setpshared 'int (pthread_rwlockattr_t *, int)' extern
| |-ParmVarDecl 0x5570ae1f8958 <col:43, col:65> col:65 __attr 'pthread_rwlockattr_t *'
| |-ParmVarDecl 0x5570ae1f89d8 <line:581:8, col:12> col:12 __pshared 'int'
| |-NoThrowAttr 0x5570ae1f8be8 <line:582:22>
| `-NonNullAttr 0x5570ae1f8c40 <col:63, col:77> 1
|-FunctionDecl 0x5570ae1f8de8 <line:583:1, line:586:82> line:583:12 pthread_rwlockattr_getkind_np 'int (const pthread_rwlockattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x5570ae1f8c88 <col:43, line:584:19> col:19 __attr 'const pthread_rwlockattr_t *restrict'
| |-ParmVarDecl 0x5570ae1f8d08 <line:585:8, col:24> col:24 __pref 'int *restrict'
| |-NoThrowAttr 0x5570ae1f8e98 <line:586:22>
| `-NonNullAttr 0x5570ae1f8ef0 <col:63, col:80> 1 2
|-FunctionDecl 0x5570ae1f9078 <line:587:1, line:588:93> line:587:12 pthread_rwlockattr_setkind_np 'int (pthread_rwlockattr_t *, int)' extern
| |-ParmVarDecl 0x5570ae1f8f38 <col:43, col:65> col:65 __attr 'pthread_rwlockattr_t *'
| |-ParmVarDecl 0x5570ae1f8fb8 <line:588:8, col:12> col:12 __pref 'int'
| |-NoThrowAttr 0x5570ae1f9128 <col:36>
| `-NonNullAttr 0x5570ae1f9180 <col:77, col:91> 1
|-FunctionDecl 0x5570ae1f94b8 <line:589:1, line:591:79> line:589:12 pthread_cond_init 'int (pthread_cond_t *restrict, const pthread_condattr_t *restrict)' extern
| |-ParmVarDecl 0x5570ae1f9260 <col:31, col:58> col:58 __cond 'pthread_cond_t *restrict'
| |-ParmVarDecl 0x5570ae1f9370 <line:590:10, col:47> col:47 __cond_attr 'const pthread_condattr_t *restrict'
| |-NoThrowAttr 0x5570ae1f9568 <line:591:22>
| `-NonNullAttr 0x5570ae1f95c0 <col:63, col:77> 1
|-FunctionDecl 0x5570ae1f9738 <line:592:1, line:593:79> line:592:12 pthread_cond_destroy 'int (pthread_cond_t *)' extern
| |-ParmVarDecl 0x5570ae1f9608 <col:34, col:50> col:50 __cond 'pthread_cond_t *'
| |-NoThrowAttr 0x5570ae1f97e0 <line:593:22>
| `-NonNullAttr 0x5570ae1f9838 <col:63, col:77> 1
|-FunctionDecl 0x5570ae1f9940 <line:594:1, line:595:68> line:594:12 pthread_cond_signal 'int (pthread_cond_t *)' extern
| |-ParmVarDecl 0x5570ae1f9888 <col:33, col:49> col:49 __cond 'pthread_cond_t *'
| |-NoThrowAttr 0x5570ae1f99e8 <line:595:22>
| `-NonNullAttr 0x5570ae1f9a40 <col:52, col:66> 1
|-FunctionDecl 0x5570ae1f9b58 <line:596:1, line:597:68> line:596:12 pthread_cond_broadcast 'int (pthread_cond_t *)' extern
| |-ParmVarDecl 0x5570ae1f9aa0 <col:36, col:52> col:52 __cond 'pthread_cond_t *'
| |-NoThrowAttr 0x5570ae1f9c00 <line:597:22>
| `-NonNullAttr 0x5570ae1f9c58 <col:52, col:66> 1
|-FunctionDecl 0x5570ae1f9e88 <line:598:1, line:600:41> line:598:12 pthread_cond_wait 'int (pthread_cond_t *restrict, pthread_mutex_t *restrict)' extern
| |-ParmVarDecl 0x5570ae1f9ca8 <col:31, col:58> col:58 __cond 'pthread_cond_t *restrict'
| |-ParmVarDecl 0x5570ae1f9d20 <line:599:10, col:38> col:38 __mutex 'pthread_mutex_t *restrict'
| `-NonNullAttr 0x5570ae1f9f38 <line:600:22, col:39> 1 2
|-FunctionDecl 0x5570ae1fa268 <line:601:1, line:604:44> line:601:12 pthread_cond_timedwait 'int (pthread_cond_t *restrict, pthread_mutex_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x5570ae1f9fb8 <col:36, col:63> col:63 __cond 'pthread_cond_t *restrict'
| |-ParmVarDecl 0x5570ae1fa030 <line:602:8, col:36> col:36 __mutex 'pthread_mutex_t *restrict'
| |-ParmVarDecl 0x5570ae1fa0c0 <line:603:8, col:42> col:42 __abstime 'const struct timespec *restrict'
| `-NonNullAttr 0x5570ae1fa320 <line:604:22, col:42> 1 2 3
|-FunctionDecl 0x5570ae1fa538 <line:605:1, line:606:79> line:605:12 pthread_condattr_init 'int (pthread_condattr_t *)' extern
| |-ParmVarDecl 0x5570ae1fa400 <col:35, col:55> col:55 __attr 'pthread_condattr_t *'
| |-NoThrowAttr 0x5570ae1fa5e0 <line:606:22>
| `-NonNullAttr 0x5570ae1fa638 <col:63, col:77> 1
|-FunctionDecl 0x5570ae1fa740 <line:607:1, line:608:79> line:607:12 pthread_condattr_destroy 'int (pthread_condattr_t *)' extern
| |-ParmVarDecl 0x5570ae1fa688 <col:38, col:58> col:58 __attr 'pthread_condattr_t *'
| |-NoThrowAttr 0x5570ae1fa7e8 <line:608:22>
| `-NonNullAttr 0x5570ae1fa840 <col:63, col:77> 1
|-FunctionDecl 0x5570ae1faaa0 <line:609:1, line:612:82> line:609:12 pthread_condattr_getpshared 'int (const pthread_condattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x5570ae1fa888 <col:41, line:610:17> col:17 __attr 'const pthread_condattr_t *restrict'
| |-ParmVarDecl 0x5570ae1fa908 <line:611:6, col:22> col:22 __pshared 'int *restrict'
| |-NoThrowAttr 0x5570ae1fab50 <line:612:22>
| `-NonNullAttr 0x5570ae1faba8 <col:63, col:80> 1 2
|-FunctionDecl 0x5570ae1fadb8 <line:613:1, line:614:94> line:613:12 pthread_condattr_setpshared 'int (pthread_condattr_t *, int)' extern
| |-ParmVarDecl 0x5570ae1fabf8 <col:41, col:61> col:61 __attr 'pthread_condattr_t *'
| |-ParmVarDecl 0x5570ae1fac78 <line:614:6, col:10> col:10 __pshared 'int'
| |-NoThrowAttr 0x5570ae1fae68 <col:37>
| `-NonNullAttr 0x5570ae1faec0 <col:78, col:92> 1
|-FunctionDecl 0x5570ae1fb0d8 <line:615:1, line:618:82> line:615:12 pthread_condattr_getclock 'int (const pthread_condattr_t *restrict, __clockid_t *restrict)' extern
| |-ParmVarDecl 0x5570ae1faf08 <col:39, line:616:22> col:22 __attr 'const pthread_condattr_t *restrict'
| |-ParmVarDecl 0x5570ae1fafb0 <line:617:11, col:35> col:35 __clock_id '__clockid_t *restrict'
| |-NoThrowAttr 0x5570ae1fb188 <line:618:22>
| `-NonNullAttr 0x5570ae1fb1e0 <col:63, col:80> 1 2
|-FunctionDecl 0x5570ae1fb3a8 <line:619:1, line:621:79> line:619:12 pthread_condattr_setclock 'int (pthread_condattr_t *, __clockid_t)' extern
| |-ParmVarDecl 0x5570ae1fb228 <col:39, col:59> col:59 __attr 'pthread_condattr_t *'
| |-ParmVarDecl 0x5570ae1fb2a0 <line:620:11, col:23> col:23 __clock_id '__clockid_t':'int'
| |-NoThrowAttr 0x5570ae1fb458 <line:621:22>
| `-NonNullAttr 0x5570ae1fb4b0 <col:63, col:77> 1
|-FunctionDecl 0x5570ae1fb758 <line:622:1, line:623:79> line:622:12 pthread_spin_init 'int (pthread_spinlock_t *, int)' extern
| |-ParmVarDecl 0x5570ae1fb590 <col:31, col:51> col:51 __lock 'pthread_spinlock_t *'
| |-ParmVarDecl 0x5570ae1fb610 <col:59, col:63> col:63 __pshared 'int'
| |-NoThrowAttr 0x5570ae1fb808 <line:623:22>
| `-NonNullAttr 0x5570ae1fb860 <col:63, col:77> 1
|-FunctionDecl 0x5570ae1fb9d8 <line:624:1, line:625:79> line:624:12 pthread_spin_destroy 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x5570ae1fb8a8 <col:34, col:54> col:54 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x5570ae1fbab0 <line:625:22>
| `-NonNullAttr 0x5570ae1fbb08 <col:63, col:77> 1
|-FunctionDecl 0x5570ae1fbc10 <line:626:1, line:627:68> line:626:12 pthread_spin_lock 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x5570ae1fbb58 <col:31, col:51> col:51 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x5570ae1fbcb8 <line:627:22>
| `-NonNullAttr 0x5570ae1fbd10 <col:52, col:66> 1
|-FunctionDecl 0x5570ae1fbe10 <line:628:1, line:629:68> line:628:12 pthread_spin_trylock 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x5570ae1fbd58 <col:34, col:54> col:54 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x5570ae1fbeb8 <line:629:22>
| `-NonNullAttr 0x5570ae1fbf10 <col:52, col:66> 1
|-FunctionDecl 0x5570ae1fc010 <line:630:1, line:631:68> line:630:12 pthread_spin_unlock 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x5570ae1fbf58 <col:33, col:53> col:53 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x5570ae1fc0b8 <line:631:22>
| `-NonNullAttr 0x5570ae1fc110 <col:52, col:66> 1
|-FunctionDecl 0x5570ae1fc4e8 <line:632:1, line:635:79> line:632:12 pthread_barrier_init 'int (pthread_barrier_t *restrict, const pthread_barrierattr_t *restrict, unsigned int)' extern
| |-ParmVarDecl 0x5570ae1fc1f0 <col:34, col:64> col:64 __barrier 'pthread_barrier_t *restrict'
| |-ParmVarDecl 0x5570ae1fc300 <line:633:6, line:634:6> col:6 __attr 'const pthread_barrierattr_t *restrict'
| |-ParmVarDecl 0x5570ae1fc380 <col:14, col:27> col:27 __count 'unsigned int'
| |-NoThrowAttr 0x5570ae1fc5a0 <line:635:22>
| `-NonNullAttr 0x5570ae1fc5f8 <col:63, col:77> 1
|-FunctionDecl 0x5570ae1fc778 <line:636:1, line:637:79> line:636:12 pthread_barrier_destroy 'int (pthread_barrier_t *)' extern
| |-ParmVarDecl 0x5570ae1fc648 <col:37, col:56> col:56 __barrier 'pthread_barrier_t *'
| |-NoThrowAttr 0x5570ae1fc820 <line:637:22>
| `-NonNullAttr 0x5570ae1fc878 <col:63, col:77> 1
|-FunctionDecl 0x5570ae1fc980 <line:638:1, line:639:68> line:638:12 pthread_barrier_wait 'int (pthread_barrier_t *)' extern
| |-ParmVarDecl 0x5570ae1fc8c8 <col:34, col:53> col:53 __barrier 'pthread_barrier_t *'
| |-NoThrowAttr 0x5570ae1fca28 <line:639:22>
| `-NonNullAttr 0x5570ae1fca80 <col:52, col:66> 1
|-FunctionDecl 0x5570ae1fdc88 <line:640:1, line:641:79> line:640:12 pthread_barrierattr_init 'int (pthread_barrierattr_t *)' extern
| |-ParmVarDecl 0x5570ae1fdb50 <col:38, col:61> col:61 __attr 'pthread_barrierattr_t *'
| |-NoThrowAttr 0x5570ae1fdd30 <line:641:22>
| `-NonNullAttr 0x5570ae1fdd88 <col:63, col:77> 1
|-FunctionDecl 0x5570ae1fde90 <line:642:1, line:643:79> line:642:12 pthread_barrierattr_destroy 'int (pthread_barrierattr_t *)' extern
| |-ParmVarDecl 0x5570ae1fddd8 <col:41, col:64> col:64 __attr 'pthread_barrierattr_t *'
| |-NoThrowAttr 0x5570ae1fdf38 <line:643:22>
| `-NonNullAttr 0x5570ae1fdf90 <col:63, col:77> 1
|-FunctionDecl 0x5570ae1fe1b8 <line:644:1, line:647:82> line:644:12 pthread_barrierattr_getpshared 'int (const pthread_barrierattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x5570ae1fdfd8 <col:44, line:645:20> col:20 __attr 'const pthread_barrierattr_t *restrict'
| |-ParmVarDecl 0x5570ae1fe058 <line:646:9, col:25> col:25 __pshared 'int *restrict'
| |-NoThrowAttr 0x5570ae1fe268 <line:647:22>
| `-NonNullAttr 0x5570ae1fe2c0 <col:63, col:80> 1 2
|-FunctionDecl 0x5570ae1fe4c8 <line:648:1, line:650:79> line:648:12 pthread_barrierattr_setpshared 'int (pthread_barrierattr_t *, int)' extern
| |-ParmVarDecl 0x5570ae1fe308 <col:44, col:67> col:67 __attr 'pthread_barrierattr_t *'
| |-ParmVarDecl 0x5570ae1fe388 <line:649:9, col:13> col:13 __pshared 'int'
| |-NoThrowAttr 0x5570ae1fe578 <line:650:22>
| `-NonNullAttr 0x5570ae1fe5d0 <col:63, col:77> 1
|-FunctionDecl 0x5570ae1fe918 <line:651:1, line:653:79> line:651:12 pthread_key_create 'int (pthread_key_t *, void (*)(void *))' extern
| |-ParmVarDecl 0x5570ae1fe6b0 <col:32, col:47> col:47 __key 'pthread_key_t *'
| |-ParmVarDecl 0x5570ae1fe7d0 <line:652:11, col:43> col:18 __destr_function 'void (*)(void *)'
| |-NoThrowAttr 0x5570ae1fe9c8 <line:653:22>
| `-NonNullAttr 0x5570ae1fea20 <col:63, col:77> 1
|-FunctionDecl 0x5570ae1feb88 <line:654:1, col:92> col:12 pthread_key_delete 'int (pthread_key_t)' extern
| |-ParmVarDecl 0x5570ae1fea68 <col:32, col:46> col:46 __key 'pthread_key_t':'unsigned int'
| `-NoThrowAttr 0x5570ae1fec30 <col:69>
|-FunctionDecl 0x5570ae1feda8 <line:655:1, col:95> col:14 pthread_getspecific 'void *(pthread_key_t)' extern
| |-ParmVarDecl 0x5570ae1fec98 <col:35, col:49> col:49 __key 'pthread_key_t':'unsigned int'
| `-NoThrowAttr 0x5570ae1fee50 <col:72>
|-FunctionDecl 0x5570ae1ff088 <line:656:1, line:657:67> line:656:12 pthread_setspecific 'int (pthread_key_t, const void *)' extern
| |-ParmVarDecl 0x5570ae1feeb8 <col:33, col:47> col:47 __key 'pthread_key_t':'unsigned int'
| |-ParmVarDecl 0x5570ae1fef68 <line:657:5, col:17> col:17 __pointer 'const void *'
| `-NoThrowAttr 0x5570ae1ff138 <col:44>
|-FunctionDecl 0x5570ae1ff358 <line:658:1, line:660:79> line:658:12 pthread_getcpuclockid 'int (pthread_t, __clockid_t *)' extern
| |-ParmVarDecl 0x5570ae1ff1a0 <col:35, col:45> col:45 __thread_id 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x5570ae1ff218 <line:659:7, col:20> col:20 __clock_id '__clockid_t *'
| |-NoThrowAttr 0x5570ae1ff408 <line:660:22>
| `-NonNullAttr 0x5570ae1ff460 <col:63, col:77> 2
|-FunctionDecl 0x5570ae1ff8a8 <line:661:1, line:663:70> line:661:12 pthread_atfork 'int (void (*)(void), void (*)(void), void (*)(void))' extern
| |-ParmVarDecl 0x5570ae1ff540 <col:28, col:51> col:35 __prepare 'void (*)(void)'
| |-ParmVarDecl 0x5570ae1ff650 <line:662:7, col:29> col:14 __parent 'void (*)(void)'
| |-ParmVarDecl 0x5570ae1ff760 <line:663:7, col:28> col:14 __child 'void (*)(void)'
| `-NoThrowAttr 0x5570ae1ff960 <col:47>
|-FunctionDecl 0x5570ae1ffaf0 <line:665:1, col:20> col:8 used P0 'void *(void *)'
| `-ParmVarDecl 0x5570ae1ff9d0 <col:11, col:17> col:17 arg 'void *'
|-FunctionDecl 0x5570ae1ffc48 <line:666:1, col:20> col:8 used P1 'void *(void *)'
| `-ParmVarDecl 0x5570ae1ffbb0 <col:11, col:17> col:17 arg 'void *'
|-FunctionDecl 0x5570ae1ffd10 <line:667:1, col:12> col:6 fence 'void ()'
|-FunctionDecl 0x5570ae1ffdd0 <line:668:1, col:12> col:6 isync 'void ()'
|-FunctionDecl 0x5570ae1ffe90 <line:669:1, col:14> col:6 lwfence 'void ()'
|-VarDecl 0x5570ae1fff48 <line:670:1, col:5> col:5 used __unbuffered_cnt 'int'
|-VarDecl 0x5570ae1fffc8 prev 0x5570ae1fff48 <line:671:1, col:24> col:5 used __unbuffered_cnt 'int' cinit
| `-IntegerLiteral 0x5570ae200030 <col:24> 'int' 0
|-VarDecl 0x5570ae200068 <line:672:1, col:5> col:5 used __unbuffered_p0_EAX 'int'
|-VarDecl 0x5570ae2000e8 prev 0x5570ae200068 <line:673:1, col:27> col:5 used __unbuffered_p0_EAX 'int' cinit
| `-IntegerLiteral 0x5570ae200150 <col:27> 'int' 0
|-VarDecl 0x5570ae200188 <line:674:1, col:5> col:5 used __unbuffered_p1_EAX 'int'
|-VarDecl 0x5570ae200208 prev 0x5570ae200188 <line:675:1, col:27> col:5 used __unbuffered_p1_EAX 'int' cinit
| `-IntegerLiteral 0x5570ae200270 <col:27> 'int' 0
|-VarDecl 0x5570ae2002a0 <line:676:1, col:7> col:7 __unbuffered_p1_EAX$flush_delayed '_Bool'
|-VarDecl 0x5570ae200320 <line:677:1, col:5> col:5 __unbuffered_p1_EAX$mem_tmp 'int'
|-VarDecl 0x5570ae200398 <line:678:1, col:7> col:7 __unbuffered_p1_EAX$r_buff0_thd0 '_Bool'
|-VarDecl 0x5570ae200410 <line:679:1, col:7> col:7 __unbuffered_p1_EAX$r_buff0_thd1 '_Bool'
|-VarDecl 0x5570ae200488 <line:680:1, col:7> col:7 __unbuffered_p1_EAX$r_buff0_thd2 '_Bool'
|-VarDecl 0x5570ae200500 <line:681:1, col:7> col:7 __unbuffered_p1_EAX$r_buff1_thd0 '_Bool'
|-VarDecl 0x5570ae200578 <line:682:1, col:7> col:7 __unbuffered_p1_EAX$r_buff1_thd1 '_Bool'
|-VarDecl 0x5570ae2005f0 <line:683:1, col:7> col:7 __unbuffered_p1_EAX$r_buff1_thd2 '_Bool'
|-VarDecl 0x5570ae200668 <line:684:1, col:7> col:7 used __unbuffered_p1_EAX$read_delayed '_Bool'
|-VarDecl 0x5570ae2006e8 <line:685:1, col:6> col:6 used __unbuffered_p1_EAX$read_delayed_var 'int *'
|-VarDecl 0x5570ae200768 <line:686:1, col:5> col:5 __unbuffered_p1_EAX$w_buff0 'int'
|-VarDecl 0x5570ae2007e0 <line:687:1, col:7> col:7 __unbuffered_p1_EAX$w_buff0_used '_Bool'
|-VarDecl 0x5570ae200860 <line:688:1, col:5> col:5 __unbuffered_p1_EAX$w_buff1 'int'
|-VarDecl 0x5570ae2008d8 <line:689:1, col:7> col:7 __unbuffered_p1_EAX$w_buff1_used '_Bool'
|-VarDecl 0x5570ae200950 <line:690:1, col:7> col:7 used main$tmp_guard0 '_Bool'
|-VarDecl 0x5570ae2009c8 <line:691:1, col:7> col:7 used main$tmp_guard1 '_Bool'
|-VarDecl 0x5570ae200a48 <line:692:1, col:5> col:5 used x 'int'
|-VarDecl 0x5570ae200b00 prev 0x5570ae200a48 <line:693:1, col:9> col:5 used x 'int' cinit
| `-IntegerLiteral 0x5570ae200b68 <col:9> 'int' 0
|-VarDecl 0x5570ae200b98 <line:694:1, col:7> col:7 used x$flush_delayed '_Bool'
|-VarDecl 0x5570ae200c18 <line:695:1, col:5> col:5 used x$mem_tmp 'int'
|-VarDecl 0x5570ae200c90 <line:696:1, col:7> col:7 used x$r_buff0_thd0 '_Bool'
|-VarDecl 0x5570ae200d08 <line:697:1, col:7> col:7 used x$r_buff0_thd1 '_Bool'
|-VarDecl 0x5570ae200d80 <line:698:1, col:7> col:7 used x$r_buff0_thd2 '_Bool'
|-VarDecl 0x5570ae200df8 <line:699:1, col:7> col:7 used x$r_buff1_thd0 '_Bool'
|-VarDecl 0x5570ae200e70 <line:700:1, col:7> col:7 used x$r_buff1_thd1 '_Bool'
|-VarDecl 0x5570ae200ee8 <line:701:1, col:7> col:7 used x$r_buff1_thd2 '_Bool'
|-VarDecl 0x5570ae200f60 <line:702:1, col:7> col:7 x$read_delayed '_Bool'
|-VarDecl 0x5570ae200fe0 <line:703:1, col:6> col:6 x$read_delayed_var 'int *'
|-VarDecl 0x5570ae201060 <line:704:1, col:5> col:5 used x$w_buff0 'int'
|-VarDecl 0x5570ae2010d8 <line:705:1, col:7> col:7 used x$w_buff0_used '_Bool'
|-VarDecl 0x5570ae201158 <line:706:1, col:5> col:5 used x$w_buff1 'int'
|-VarDecl 0x5570ae2011d0 <line:707:1, col:7> col:7 used x$w_buff1_used '_Bool'
|-VarDecl 0x5570ae201250 <line:708:1, col:5> col:5 used y 'int'
|-VarDecl 0x5570ae2012d0 prev 0x5570ae201250 <line:709:1, col:9> col:5 used y 'int' cinit
| `-IntegerLiteral 0x5570ae201338 <col:9> 'int' 0
|-VarDecl 0x5570ae201368 <line:710:1, col:7> col:7 used weak$$choice0 '_Bool'
|-VarDecl 0x5570ae2013e0 <line:711:1, col:7> col:7 used weak$$choice1 '_Bool'
|-VarDecl 0x5570ae201458 <line:712:1, col:7> col:7 used weak$$choice2 '_Bool'
|-FunctionDecl 0x5570ae201570 prev 0x5570ae1ffaf0 <line:713:1, line:740:1> line:713:8 used P0 'void *(void *)'
| |-ParmVarDecl 0x5570ae2014d8 <col:11, col:17> col:17 arg 'void *'
| `-CompoundStmt 0x5570ae202d48 <line:714:1, line:740:1>
|   |-CallExpr 0x5570ae201688 <line:715:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x5570ae201670 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5570ae201618 <col:3> 'void ()' Function 0x5570ae1a6e40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x5570ae201700 <line:716:3, col:25> 'int' '='
|   | |-DeclRefExpr 0x5570ae2016a8 <col:3> 'int' lvalue Var 0x5570ae2000e8 '__unbuffered_p0_EAX' 'int'
|   | `-ImplicitCastExpr 0x5570ae2016e8 <col:25> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x5570ae2016c8 <col:25> 'int' lvalue Var 0x5570ae2012d0 'y' 'int'
|   |-CallExpr 0x5570ae201758 <line:717:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x5570ae201740 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5570ae201720 <col:3> 'void ()' Function 0x5570ae1a6f00 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x5570ae2017b0 <line:718:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x5570ae201798 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5570ae201778 <col:3> 'void ()' Function 0x5570ae1a6e40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x5570ae201828 <line:719:3, col:15> 'int' '='
|   | |-DeclRefExpr 0x5570ae2017d0 <col:3> 'int' lvalue Var 0x5570ae201158 'x$w_buff1' 'int'
|   | `-ImplicitCastExpr 0x5570ae201810 <col:15> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x5570ae2017f0 <col:15> 'int' lvalue Var 0x5570ae201060 'x$w_buff0' 'int'
|   |-BinaryOperator 0x5570ae201888 <line:720:3, col:15> 'int' '='
|   | |-DeclRefExpr 0x5570ae201848 <col:3> 'int' lvalue Var 0x5570ae201060 'x$w_buff0' 'int'
|   | `-IntegerLiteral 0x5570ae201868 <col:15> 'int' 1
|   |-BinaryOperator 0x5570ae201900 <line:721:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x5570ae2018a8 <col:3> '_Bool' lvalue Var 0x5570ae2011d0 'x$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x5570ae2018e8 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x5570ae2018c8 <col:20> '_Bool' lvalue Var 0x5570ae2010d8 'x$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x5570ae201998 <line:722:3, col:27> '_Bool' '='
|   | |-DeclRefExpr 0x5570ae201920 <col:3> '_Bool' lvalue Var 0x5570ae2010d8 'x$w_buff0_used' '_Bool'
|   | `-CStyleCastExpr 0x5570ae201970 <col:20, col:27> '_Bool' <IntegralToBoolean>
|   |   `-IntegerLiteral 0x5570ae201940 <col:27> 'int' 1
|   |-CallExpr 0x5570ae201b28 <line:723:3, col:56> 'void'
|   | |-ImplicitCastExpr 0x5570ae201b10 <col:3> 'void (*)(int)' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x5570ae2019b8 <col:3> 'void (int)' Function 0x5570ae1a6bc8 '__VERIFIER_assert' 'void (int)'
|   | `-UnaryOperator 0x5570ae201ab8 <col:21, col:55> 'int' prefix '!' cannot overflow
|   |   `-ParenExpr 0x5570ae201a98 <col:22, col:55> 'int'
|   |     `-BinaryOperator 0x5570ae201a78 <col:23, col:41> 'int' '&&'
|   |       |-ImplicitCastExpr 0x5570ae201a30 <col:23> 'int' <IntegralCast>
|   |       | `-ImplicitCastExpr 0x5570ae201a18 <col:23> '_Bool' <LValueToRValue>
|   |       |   `-DeclRefExpr 0x5570ae2019d8 <col:23> '_Bool' lvalue Var 0x5570ae2011d0 'x$w_buff1_used' '_Bool'
|   |       `-ImplicitCastExpr 0x5570ae201a60 <col:41> 'int' <IntegralCast>
|   |         `-ImplicitCastExpr 0x5570ae201a48 <col:41> '_Bool' <LValueToRValue>
|   |           `-DeclRefExpr 0x5570ae2019f8 <col:41> '_Bool' lvalue Var 0x5570ae2010d8 'x$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x5570ae201ba8 <line:724:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x5570ae201b50 <col:3> '_Bool' lvalue Var 0x5570ae200df8 'x$r_buff1_thd0' '_Bool'
|   | `-ImplicitCastExpr 0x5570ae201b90 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x5570ae201b70 <col:20> '_Bool' lvalue Var 0x5570ae200c90 'x$r_buff0_thd0' '_Bool'
|   |-BinaryOperator 0x5570ae201c20 <line:725:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x5570ae201bc8 <col:3> '_Bool' lvalue Var 0x5570ae200e70 'x$r_buff1_thd1' '_Bool'
|   | `-ImplicitCastExpr 0x5570ae201c08 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x5570ae201be8 <col:20> '_Bool' lvalue Var 0x5570ae200d08 'x$r_buff0_thd1' '_Bool'
|   |-BinaryOperator 0x5570ae201c98 <line:726:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x5570ae201c40 <col:3> '_Bool' lvalue Var 0x5570ae200ee8 'x$r_buff1_thd2' '_Bool'
|   | `-ImplicitCastExpr 0x5570ae201c80 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x5570ae201c60 <col:20> '_Bool' lvalue Var 0x5570ae200d80 'x$r_buff0_thd2' '_Bool'
|   |-BinaryOperator 0x5570ae201d30 <line:727:3, col:27> '_Bool' '='
|   | |-DeclRefExpr 0x5570ae201cb8 <col:3> '_Bool' lvalue Var 0x5570ae200d08 'x$r_buff0_thd1' '_Bool'
|   | `-CStyleCastExpr 0x5570ae201d08 <col:20, col:27> '_Bool' <IntegralToBoolean>
|   |   `-IntegerLiteral 0x5570ae201cd8 <col:27> 'int' 1
|   |-CallExpr 0x5570ae201d88 <line:728:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x5570ae201d70 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5570ae201d50 <col:3> 'void ()' Function 0x5570ae1a6f00 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x5570ae201de0 <line:729:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x5570ae201dc8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5570ae201da8 <col:3> 'void ()' Function 0x5570ae1a6e40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x5570ae2020c8 <line:730:3, col:103> 'int' '='
|   | |-DeclRefExpr 0x5570ae201e00 <col:3> 'int' lvalue Var 0x5570ae200b00 'x' 'int'
|   | `-ConditionalOperator 0x5570ae202098 <col:7, col:103> 'int'
|   |   |-BinaryOperator 0x5570ae201ec0 <col:7, col:25> 'int' '&&'
|   |   | |-ImplicitCastExpr 0x5570ae201e78 <col:7> 'int' <IntegralCast>
|   |   | | `-ImplicitCastExpr 0x5570ae201e60 <col:7> '_Bool' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x5570ae201e20 <col:7> '_Bool' lvalue Var 0x5570ae2010d8 'x$w_buff0_used' '_Bool'
|   |   | `-ImplicitCastExpr 0x5570ae201ea8 <col:25> 'int' <IntegralCast>
|   |   |   `-ImplicitCastExpr 0x5570ae201e90 <col:25> '_Bool' <LValueToRValue>
|   |   |     `-DeclRefExpr 0x5570ae201e40 <col:25> '_Bool' lvalue Var 0x5570ae200d08 'x$r_buff0_thd1' '_Bool'
|   |   |-ImplicitCastExpr 0x5570ae202080 <col:42> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x5570ae201ee0 <col:42> 'int' lvalue Var 0x5570ae201060 'x$w_buff0' 'int'
|   |   `-ParenExpr 0x5570ae202060 <col:54, col:103> 'int'
|   |     `-ConditionalOperator 0x5570ae202030 <col:55, col:102> 'int'
|   |       |-BinaryOperator 0x5570ae201fa0 <col:55, col:73> 'int' '&&'
|   |       | |-ImplicitCastExpr 0x5570ae201f58 <col:55> 'int' <IntegralCast>
|   |       | | `-ImplicitCastExpr 0x5570ae201f40 <col:55> '_Bool' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x5570ae201f00 <col:55> '_Bool' lvalue Var 0x5570ae2011d0 'x$w_buff1_used' '_Bool'
|   |       | `-ImplicitCastExpr 0x5570ae201f88 <col:73> 'int' <IntegralCast>
|   |       |   `-ImplicitCastExpr 0x5570ae201f70 <col:73> '_Bool' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x5570ae201f20 <col:73> '_Bool' lvalue Var 0x5570ae200e70 'x$r_buff1_thd1' '_Bool'
|   |       |-ImplicitCastExpr 0x5570ae202000 <col:90> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x5570ae201fc0 <col:90> 'int' lvalue Var 0x5570ae201158 'x$w_buff1' 'int'
|   |       `-ImplicitCastExpr 0x5570ae202018 <col:102> 'int' <LValueToRValue>
|   |         `-DeclRefExpr 0x5570ae201fe0 <col:102> 'int' lvalue Var 0x5570ae200b00 'x' 'int'
|   |-BinaryOperator 0x5570ae2022d0 <line:731:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x5570ae2020e8 <col:3> '_Bool' lvalue Var 0x5570ae2010d8 'x$w_buff0_used' '_Bool'
|   | `-ImplicitCastExpr 0x5570ae2022b8 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x5570ae202288 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x5570ae2021a8 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x5570ae202160 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x5570ae202148 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x5570ae202108 <col:20> '_Bool' lvalue Var 0x5570ae2010d8 'x$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x5570ae202190 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x5570ae202178 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x5570ae202128 <col:38> '_Bool' lvalue Var 0x5570ae200d08 'x$r_buff0_thd1' '_Bool'
|   |     |-ImplicitCastExpr 0x5570ae202240 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x5570ae2021f8 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x5570ae2021c8 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x5570ae202270 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x5570ae202258 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x5570ae202220 <col:66> '_Bool' lvalue Var 0x5570ae2010d8 'x$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x5570ae2025b8 <line:732:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x5570ae2022f0 <col:3> '_Bool' lvalue Var 0x5570ae2011d0 'x$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x5570ae2025a0 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x5570ae202570 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x5570ae202490 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x5570ae2023b0 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x5570ae202368 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x5570ae202350 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x5570ae202310 <col:20> '_Bool' lvalue Var 0x5570ae2010d8 'x$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x5570ae202398 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x5570ae202380 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x5570ae202330 <col:38> '_Bool' lvalue Var 0x5570ae200d08 'x$r_buff0_thd1' '_Bool'
|   |     | `-BinaryOperator 0x5570ae202470 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x5570ae202428 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x5570ae202410 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x5570ae2023d0 <col:56> '_Bool' lvalue Var 0x5570ae2011d0 'x$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x5570ae202458 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x5570ae202440 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x5570ae2023f0 <col:74> '_Bool' lvalue Var 0x5570ae200e70 'x$r_buff1_thd1' '_Bool'
|   |     |-ImplicitCastExpr 0x5570ae202528 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x5570ae2024e0 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x5570ae2024b0 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x5570ae202558 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x5570ae202540 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x5570ae202508 <col:102> '_Bool' lvalue Var 0x5570ae2011d0 'x$w_buff1_used' '_Bool'
|   |-BinaryOperator 0x5570ae2027c0 <line:733:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x5570ae2025d8 <col:3> '_Bool' lvalue Var 0x5570ae200d08 'x$r_buff0_thd1' '_Bool'
|   | `-ImplicitCastExpr 0x5570ae2027a8 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x5570ae202778 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x5570ae202698 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x5570ae202650 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x5570ae202638 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x5570ae2025f8 <col:20> '_Bool' lvalue Var 0x5570ae2010d8 'x$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x5570ae202680 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x5570ae202668 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x5570ae202618 <col:38> '_Bool' lvalue Var 0x5570ae200d08 'x$r_buff0_thd1' '_Bool'
|   |     |-ImplicitCastExpr 0x5570ae202730 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x5570ae2026e8 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x5570ae2026b8 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x5570ae202760 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x5570ae202748 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x5570ae202710 <col:66> '_Bool' lvalue Var 0x5570ae200d08 'x$r_buff0_thd1' '_Bool'
|   |-BinaryOperator 0x5570ae202aa8 <line:734:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x5570ae2027e0 <col:3> '_Bool' lvalue Var 0x5570ae200e70 'x$r_buff1_thd1' '_Bool'
|   | `-ImplicitCastExpr 0x5570ae202a90 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x5570ae202a60 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x5570ae202980 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x5570ae2028a0 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x5570ae202858 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x5570ae202840 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x5570ae202800 <col:20> '_Bool' lvalue Var 0x5570ae2010d8 'x$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x5570ae202888 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x5570ae202870 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x5570ae202820 <col:38> '_Bool' lvalue Var 0x5570ae200d08 'x$r_buff0_thd1' '_Bool'
|   |     | `-BinaryOperator 0x5570ae202960 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x5570ae202918 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x5570ae202900 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x5570ae2028c0 <col:56> '_Bool' lvalue Var 0x5570ae2011d0 'x$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x5570ae202948 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x5570ae202930 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x5570ae2028e0 <col:74> '_Bool' lvalue Var 0x5570ae200e70 'x$r_buff1_thd1' '_Bool'
|   |     |-ImplicitCastExpr 0x5570ae202a18 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x5570ae2029d0 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x5570ae2029a0 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x5570ae202a48 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x5570ae202a30 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x5570ae2029f8 <col:102> '_Bool' lvalue Var 0x5570ae200e70 'x$r_buff1_thd1' '_Bool'
|   |-CallExpr 0x5570ae202b20 <line:735:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x5570ae202ae8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5570ae202ac8 <col:3> 'void ()' Function 0x5570ae1a6f00 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x5570ae202b78 <line:736:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x5570ae202b60 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5570ae202b40 <col:3> 'void ()' Function 0x5570ae1a6e40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x5570ae202c30 <line:737:3, col:41> 'int' '='
|   | |-DeclRefExpr 0x5570ae202b98 <col:3> 'int' lvalue Var 0x5570ae1fffc8 '__unbuffered_cnt' 'int'
|   | `-BinaryOperator 0x5570ae202c10 <col:22, col:41> 'int' '+'
|   |   |-ImplicitCastExpr 0x5570ae202bf8 <col:22> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x5570ae202bb8 <col:22> 'int' lvalue Var 0x5570ae1fffc8 '__unbuffered_cnt' 'int'
|   |   `-IntegerLiteral 0x5570ae202bd8 <col:41> 'int' 1
|   |-CallExpr 0x5570ae202c88 <line:738:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x5570ae202c70 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5570ae202c50 <col:3> 'void ()' Function 0x5570ae1a6f00 '__VERIFIER_atomic_end' 'void ()'
|   `-ReturnStmt 0x5570ae202d38 <line:739:3, col:36>
|     `-CallExpr 0x5570ae202d18 <col:10, col:36> 'void *'
|       `-ImplicitCastExpr 0x5570ae202d00 <col:10> 'void *(*)(void)' <FunctionToPointerDecay>
|         `-DeclRefExpr 0x5570ae202ca8 <col:10> 'void *(void)' Function 0x5570ae1a6958 '__VERIFIER_nondet_pointer' 'void *(void)'
|-FunctionDecl 0x5570ae202ed0 prev 0x5570ae1ffc48 <line:741:1, line:776:1> line:741:8 used P1 'void *(void *)'
| |-ParmVarDecl 0x5570ae202e38 <col:11, col:17> col:17 arg 'void *'
| `-CompoundStmt 0x5570ae208490 <line:742:1, line:776:1>
|   |-CallExpr 0x5570ae202fb0 <line:743:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x5570ae202f98 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5570ae202f78 <col:3> 'void ()' Function 0x5570ae1a6e40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x5570ae203060 <line:744:3, col:45> '_Bool' '='
|   | |-DeclRefExpr 0x5570ae202fd0 <col:3> '_Bool' lvalue Var 0x5570ae201368 'weak$$choice0' '_Bool'
|   | `-ImplicitCastExpr 0x5570ae203048 <col:19, col:45> '_Bool' <PointerToBoolean>
|   |   `-CallExpr 0x5570ae203028 <col:19, col:45> 'void *'
|   |     `-ImplicitCastExpr 0x5570ae203010 <col:19> 'void *(*)(void)' <FunctionToPointerDecay>
|   |       `-DeclRefExpr 0x5570ae202ff0 <col:19> 'void *(void)' Function 0x5570ae1a6958 '__VERIFIER_nondet_pointer' 'void *(void)'
|   |-BinaryOperator 0x5570ae203110 <line:745:3, col:45> '_Bool' '='
|   | |-DeclRefExpr 0x5570ae203080 <col:3> '_Bool' lvalue Var 0x5570ae201458 'weak$$choice2' '_Bool'
|   | `-ImplicitCastExpr 0x5570ae2030f8 <col:19, col:45> '_Bool' <PointerToBoolean>
|   |   `-CallExpr 0x5570ae2030d8 <col:19, col:45> 'void *'
|   |     `-ImplicitCastExpr 0x5570ae2030c0 <col:19> 'void *(*)(void)' <FunctionToPointerDecay>
|   |       `-DeclRefExpr 0x5570ae2030a0 <col:19> 'void *(void)' Function 0x5570ae1a6958 '__VERIFIER_nondet_pointer' 'void *(void)'
|   |-BinaryOperator 0x5570ae203188 <line:746:3, col:21> '_Bool' '='
|   | |-DeclRefExpr 0x5570ae203130 <col:3> '_Bool' lvalue Var 0x5570ae200b98 'x$flush_delayed' '_Bool'
|   | `-ImplicitCastExpr 0x5570ae203170 <col:21> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x5570ae203150 <col:21> '_Bool' lvalue Var 0x5570ae201458 'weak$$choice2' '_Bool'
|   |-BinaryOperator 0x5570ae203200 <line:747:3, col:15> 'int' '='
|   | |-DeclRefExpr 0x5570ae2031a8 <col:3> 'int' lvalue Var 0x5570ae200c18 'x$mem_tmp' 'int'
|   | `-ImplicitCastExpr 0x5570ae2031e8 <col:15> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x5570ae2031c8 <col:15> 'int' lvalue Var 0x5570ae200b00 'x' 'int'
|   |-BinaryOperator 0x5570ae2032b0 <line:748:3, col:45> '_Bool' '='
|   | |-DeclRefExpr 0x5570ae203220 <col:3> '_Bool' lvalue Var 0x5570ae2013e0 'weak$$choice1' '_Bool'
|   | `-ImplicitCastExpr 0x5570ae203298 <col:19, col:45> '_Bool' <PointerToBoolean>
|   |   `-CallExpr 0x5570ae203278 <col:19, col:45> 'void *'
|   |     `-ImplicitCastExpr 0x5570ae203260 <col:19> 'void *(*)(void)' <FunctionToPointerDecay>
|   |       `-DeclRefExpr 0x5570ae203240 <col:19> 'void *(void)' Function 0x5570ae1a6958 '__VERIFIER_nondet_pointer' 'void *(void)'
|   |-BinaryOperator 0x5570ae203ce8 <line:749:3, col:363> 'int' '='
|   | |-DeclRefExpr 0x5570ae2032d0 <col:3> 'int' lvalue Var 0x5570ae200b00 'x' 'int'
|   | `-ConditionalOperator 0x5570ae203cb8 <col:7, col:363> 'int'
|   |   |-UnaryOperator 0x5570ae203328 <col:7, col:8> 'int' prefix '!' cannot overflow
|   |   | `-ImplicitCastExpr 0x5570ae203310 <col:8> '_Bool' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x5570ae2032f0 <col:8> '_Bool' lvalue Var 0x5570ae2010d8 'x$w_buff0_used' '_Bool'
|   |   |-ImplicitCastExpr 0x5570ae203ca0 <col:25> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x5570ae203340 <col:25> 'int' lvalue Var 0x5570ae200b00 'x' 'int'
|   |   `-ParenExpr 0x5570ae203c80 <col:29, col:363> 'int'
|   |     `-ConditionalOperator 0x5570ae203c50 <col:30, col:362> 'int'
|   |       |-BinaryOperator 0x5570ae203400 <col:30, col:48> 'int' '&&'
|   |       | |-ImplicitCastExpr 0x5570ae2033b8 <col:30> 'int' <IntegralCast>
|   |       | | `-ImplicitCastExpr 0x5570ae2033a0 <col:30> '_Bool' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x5570ae203360 <col:30> '_Bool' lvalue Var 0x5570ae2010d8 'x$w_buff0_used' '_Bool'
|   |       | `-ImplicitCastExpr 0x5570ae2033e8 <col:48> 'int' <IntegralCast>
|   |       |   `-ImplicitCastExpr 0x5570ae2033d0 <col:48> '_Bool' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x5570ae203380 <col:48> '_Bool' lvalue Var 0x5570ae200d80 'x$r_buff0_thd2' '_Bool'
|   |       |-ImplicitCastExpr 0x5570ae203c38 <col:65> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x5570ae203420 <col:65> 'int' lvalue Var 0x5570ae201060 'x$w_buff0' 'int'
|   |       `-ParenExpr 0x5570ae203c18 <col:77, col:362> 'int'
|   |         `-ConditionalOperator 0x5570ae203be8 <col:78, col:361> 'int'
|   |           |-BinaryOperator 0x5570ae2035c0 <col:78, col:134> 'int' '&&'
|   |           | |-BinaryOperator 0x5570ae203550 <col:78, col:115> 'int' '&&'
|   |           | | |-BinaryOperator 0x5570ae2034e0 <col:78, col:97> 'int' '&&'
|   |           | | | |-ImplicitCastExpr 0x5570ae2034c8 <col:78> 'int' <IntegralCast>
|   |           | | | | `-ImplicitCastExpr 0x5570ae2034b0 <col:78> '_Bool' <LValueToRValue>
|   |           | | | |   `-DeclRefExpr 0x5570ae203440 <col:78> '_Bool' lvalue Var 0x5570ae2010d8 'x$w_buff0_used' '_Bool'
|   |           | | | `-UnaryOperator 0x5570ae203498 <col:96, col:97> 'int' prefix '!' cannot overflow
|   |           | | |   `-ImplicitCastExpr 0x5570ae203480 <col:97> '_Bool' <LValueToRValue>
|   |           | | |     `-DeclRefExpr 0x5570ae203460 <col:97> '_Bool' lvalue Var 0x5570ae200ee8 'x$r_buff1_thd2' '_Bool'
|   |           | | `-ImplicitCastExpr 0x5570ae203538 <col:115> 'int' <IntegralCast>
|   |           | |   `-ImplicitCastExpr 0x5570ae203520 <col:115> '_Bool' <LValueToRValue>
|   |           | |     `-DeclRefExpr 0x5570ae203500 <col:115> '_Bool' lvalue Var 0x5570ae2011d0 'x$w_buff1_used' '_Bool'
|   |           | `-UnaryOperator 0x5570ae2035a8 <col:133, col:134> 'int' prefix '!' cannot overflow
|   |           |   `-ImplicitCastExpr 0x5570ae203590 <col:134> '_Bool' <LValueToRValue>
|   |           |     `-DeclRefExpr 0x5570ae203570 <col:134> '_Bool' lvalue Var 0x5570ae200d80 'x$r_buff0_thd2' '_Bool'
|   |           |-ParenExpr 0x5570ae2037a8 <col:151, col:211> 'int'
|   |           | `-ConditionalOperator 0x5570ae203778 <col:152, col:210> 'int'
|   |           |   |-ImplicitCastExpr 0x5570ae203748 <col:152> 'int' <IntegralCast>
|   |           |   | `-ImplicitCastExpr 0x5570ae203730 <col:152> '_Bool' <LValueToRValue>
|   |           |   |   `-DeclRefExpr 0x5570ae2035e0 <col:152> '_Bool' lvalue Var 0x5570ae201368 'weak$$choice0' '_Bool'
|   |           |   |-ImplicitCastExpr 0x5570ae203760 <col:168> 'int' <LValueToRValue>
|   |           |   | `-DeclRefExpr 0x5570ae203600 <col:168> 'int' lvalue Var 0x5570ae200b00 'x' 'int'
|   |           |   `-ParenExpr 0x5570ae203710 <col:172, col:210> 'int'
|   |           |     `-ConditionalOperator 0x5570ae2036e0 <col:173, col:201> 'int'
|   |           |       |-ImplicitCastExpr 0x5570ae203698 <col:173> 'int' <IntegralCast>
|   |           |       | `-ImplicitCastExpr 0x5570ae203680 <col:173> '_Bool' <LValueToRValue>
|   |           |       |   `-DeclRefExpr 0x5570ae203620 <col:173> '_Bool' lvalue Var 0x5570ae2013e0 'weak$$choice1' '_Bool'
|   |           |       |-ImplicitCastExpr 0x5570ae2036b0 <col:189> 'int' <LValueToRValue>
|   |           |       | `-DeclRefExpr 0x5570ae203640 <col:189> 'int' lvalue Var 0x5570ae201060 'x$w_buff0' 'int'
|   |           |       `-ImplicitCastExpr 0x5570ae2036c8 <col:201> 'int' <LValueToRValue>
|   |           |         `-DeclRefExpr 0x5570ae203660 <col:201> 'int' lvalue Var 0x5570ae201158 'x$w_buff1' 'int'
|   |           `-ParenExpr 0x5570ae203bc8 <col:215, col:361> 'int'
|   |             `-ConditionalOperator 0x5570ae203b98 <col:216, col:360> 'int'
|   |               |-BinaryOperator 0x5570ae203948 <col:216, col:271> 'int' '&&'
|   |               | |-BinaryOperator 0x5570ae2038d8 <col:216, col:252> 'int' '&&'
|   |               | | |-BinaryOperator 0x5570ae203868 <col:216, col:234> 'int' '&&'
|   |               | | | |-ImplicitCastExpr 0x5570ae203820 <col:216> 'int' <IntegralCast>
|   |               | | | | `-ImplicitCastExpr 0x5570ae203808 <col:216> '_Bool' <LValueToRValue>
|   |               | | | |   `-DeclRefExpr 0x5570ae2037c8 <col:216> '_Bool' lvalue Var 0x5570ae2010d8 'x$w_buff0_used' '_Bool'
|   |               | | | `-ImplicitCastExpr 0x5570ae203850 <col:234> 'int' <IntegralCast>
|   |               | | |   `-ImplicitCastExpr 0x5570ae203838 <col:234> '_Bool' <LValueToRValue>
|   |               | | |     `-DeclRefExpr 0x5570ae2037e8 <col:234> '_Bool' lvalue Var 0x5570ae200ee8 'x$r_buff1_thd2' '_Bool'
|   |               | | `-ImplicitCastExpr 0x5570ae2038c0 <col:252> 'int' <IntegralCast>
|   |               | |   `-ImplicitCastExpr 0x5570ae2038a8 <col:252> '_Bool' <LValueToRValue>
|   |               | |     `-DeclRefExpr 0x5570ae203888 <col:252> '_Bool' lvalue Var 0x5570ae2011d0 'x$w_buff1_used' '_Bool'
|   |               | `-UnaryOperator 0x5570ae203930 <col:270, col:271> 'int' prefix '!' cannot overflow
|   |               |   `-ImplicitCastExpr 0x5570ae203918 <col:271> '_Bool' <LValueToRValue>
|   |               |     `-DeclRefExpr 0x5570ae2038f8 <col:271> '_Bool' lvalue Var 0x5570ae200d80 'x$r_buff0_thd2' '_Bool'
|   |               |-ParenExpr 0x5570ae203a58 <col:288, col:326> 'int'
|   |               | `-ConditionalOperator 0x5570ae203a28 <col:289, col:317> 'int'
|   |               |   |-ImplicitCastExpr 0x5570ae2039e0 <col:289> 'int' <IntegralCast>
|   |               |   | `-ImplicitCastExpr 0x5570ae2039c8 <col:289> '_Bool' <LValueToRValue>
|   |               |   |   `-DeclRefExpr 0x5570ae203968 <col:289> '_Bool' lvalue Var 0x5570ae201368 'weak$$choice0' '_Bool'
|   |               |   |-ImplicitCastExpr 0x5570ae2039f8 <col:305> 'int' <LValueToRValue>
|   |               |   | `-DeclRefExpr 0x5570ae203988 <col:305> 'int' lvalue Var 0x5570ae201158 'x$w_buff1' 'int'
|   |               |   `-ImplicitCastExpr 0x5570ae203a10 <col:317> 'int' <LValueToRValue>
|   |               |     `-DeclRefExpr 0x5570ae2039a8 <col:317> 'int' lvalue Var 0x5570ae201060 'x$w_buff0' 'int'
|   |               `-ParenExpr 0x5570ae203b78 <col:330, col:360> 'int'
|   |                 `-ConditionalOperator 0x5570ae203b48 <col:331, col:359> 'int'
|   |                   |-ImplicitCastExpr 0x5570ae203af0 <col:331> 'int' <IntegralCast>
|   |                   | `-ImplicitCastExpr 0x5570ae203ad8 <col:331> '_Bool' <LValueToRValue>
|   |                   |   `-DeclRefExpr 0x5570ae203a78 <col:331> '_Bool' lvalue Var 0x5570ae201368 'weak$$choice0' '_Bool'
|   |                   |-ImplicitCastExpr 0x5570ae203b08 <col:347> 'int' <LValueToRValue>
|   |                   | `-DeclRefExpr 0x5570ae203a98 <col:347> 'int' lvalue Var 0x5570ae201060 'x$w_buff0' 'int'
|   |                   `-ImplicitCastExpr 0x5570ae203b30 <col:359> 'int' <LValueToRValue>
|   |                     `-DeclRefExpr 0x5570ae203ab8 <col:359> 'int' lvalue Var 0x5570ae200b00 'x' 'int'
|   |-BinaryOperator 0x5570ae204488 <line:750:3, col:305> 'int' '='
|   | |-DeclRefExpr 0x5570ae203d08 <col:3> 'int' lvalue Var 0x5570ae201060 'x$w_buff0' 'int'
|   | `-ConditionalOperator 0x5570ae204458 <col:15, col:305> 'int'
|   |   |-ImplicitCastExpr 0x5570ae204428 <col:15> 'int' <IntegralCast>
|   |   | `-ImplicitCastExpr 0x5570ae204410 <col:15> '_Bool' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x5570ae203d28 <col:15> '_Bool' lvalue Var 0x5570ae201458 'weak$$choice2' '_Bool'
|   |   |-ImplicitCastExpr 0x5570ae204440 <col:31> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x5570ae203d48 <col:31> 'int' lvalue Var 0x5570ae201060 'x$w_buff0' 'int'
|   |   `-ParenExpr 0x5570ae2043f0 <col:43, col:305> 'int'
|   |     `-ConditionalOperator 0x5570ae2043c0 <col:44, col:304> 'int'
|   |       |-UnaryOperator 0x5570ae203da0 <col:44, col:45> 'int' prefix '!' cannot overflow
|   |       | `-ImplicitCastExpr 0x5570ae203d88 <col:45> '_Bool' <LValueToRValue>
|   |       |   `-DeclRefExpr 0x5570ae203d68 <col:45> '_Bool' lvalue Var 0x5570ae2010d8 'x$w_buff0_used' '_Bool'
|   |       |-ImplicitCastExpr 0x5570ae2043a8 <col:62> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x5570ae203db8 <col:62> 'int' lvalue Var 0x5570ae201060 'x$w_buff0' 'int'
|   |       `-ParenExpr 0x5570ae204388 <col:74, col:304> 'int'
|   |         `-ConditionalOperator 0x5570ae204358 <col:75, col:303> 'int'
|   |           |-BinaryOperator 0x5570ae203e78 <col:75, col:93> 'int' '&&'
|   |           | |-ImplicitCastExpr 0x5570ae203e30 <col:75> 'int' <IntegralCast>
|   |           | | `-ImplicitCastExpr 0x5570ae203e18 <col:75> '_Bool' <LValueToRValue>
|   |           | |   `-DeclRefExpr 0x5570ae203dd8 <col:75> '_Bool' lvalue Var 0x5570ae2010d8 'x$w_buff0_used' '_Bool'
|   |           | `-ImplicitCastExpr 0x5570ae203e60 <col:93> 'int' <IntegralCast>
|   |           |   `-ImplicitCastExpr 0x5570ae203e48 <col:93> '_Bool' <LValueToRValue>
|   |           |     `-DeclRefExpr 0x5570ae203df8 <col:93> '_Bool' lvalue Var 0x5570ae200d80 'x$r_buff0_thd2' '_Bool'
|   |           |-ImplicitCastExpr 0x5570ae204340 <col:110> 'int' <LValueToRValue>
|   |           | `-DeclRefExpr 0x5570ae203e98 <col:110> 'int' lvalue Var 0x5570ae201060 'x$w_buff0' 'int'
|   |           `-ParenExpr 0x5570ae204320 <col:122, col:303> 'int'
|   |             `-ConditionalOperator 0x5570ae2042f0 <col:123, col:302> 'int'
|   |               |-BinaryOperator 0x5570ae204038 <col:123, col:179> 'int' '&&'
|   |               | |-BinaryOperator 0x5570ae203fc8 <col:123, col:160> 'int' '&&'
|   |               | | |-BinaryOperator 0x5570ae203f58 <col:123, col:142> 'int' '&&'
|   |               | | | |-ImplicitCastExpr 0x5570ae203f40 <col:123> 'int' <IntegralCast>
|   |               | | | | `-ImplicitCastExpr 0x5570ae203f28 <col:123> '_Bool' <LValueToRValue>
|   |               | | | |   `-DeclRefExpr 0x5570ae203eb8 <col:123> '_Bool' lvalue Var 0x5570ae2010d8 'x$w_buff0_used' '_Bool'
|   |               | | | `-UnaryOperator 0x5570ae203f10 <col:141, col:142> 'int' prefix '!' cannot overflow
|   |               | | |   `-ImplicitCastExpr 0x5570ae203ef8 <col:142> '_Bool' <LValueToRValue>
|   |               | | |     `-DeclRefExpr 0x5570ae203ed8 <col:142> '_Bool' lvalue Var 0x5570ae200ee8 'x$r_buff1_thd2' '_Bool'
|   |               | | `-ImplicitCastExpr 0x5570ae203fb0 <col:160> 'int' <IntegralCast>
|   |               | |   `-ImplicitCastExpr 0x5570ae203f98 <col:160> '_Bool' <LValueToRValue>
|   |               | |     `-DeclRefExpr 0x5570ae203f78 <col:160> '_Bool' lvalue Var 0x5570ae2011d0 'x$w_buff1_used' '_Bool'
|   |               | `-UnaryOperator 0x5570ae204020 <col:178, col:179> 'int' prefix '!' cannot overflow
|   |               |   `-ImplicitCastExpr 0x5570ae204008 <col:179> '_Bool' <LValueToRValue>
|   |               |     `-DeclRefExpr 0x5570ae203fe8 <col:179> '_Bool' lvalue Var 0x5570ae200d80 'x$r_buff0_thd2' '_Bool'
|   |               |-ImplicitCastExpr 0x5570ae2042d8 <col:196> 'int' <LValueToRValue>
|   |               | `-DeclRefExpr 0x5570ae204058 <col:196> 'int' lvalue Var 0x5570ae201060 'x$w_buff0' 'int'
|   |               `-ParenExpr 0x5570ae2042b8 <col:208, col:302> 'int'
|   |                 `-ConditionalOperator 0x5570ae204288 <col:209, col:293> 'int'
|   |                   |-BinaryOperator 0x5570ae2041f8 <col:209, col:264> 'int' '&&'
|   |                   | |-BinaryOperator 0x5570ae204188 <col:209, col:245> 'int' '&&'
|   |                   | | |-BinaryOperator 0x5570ae204118 <col:209, col:227> 'int' '&&'
|   |                   | | | |-ImplicitCastExpr 0x5570ae2040d0 <col:209> 'int' <IntegralCast>
|   |                   | | | | `-ImplicitCastExpr 0x5570ae2040b8 <col:209> '_Bool' <LValueToRValue>
|   |                   | | | |   `-DeclRefExpr 0x5570ae204078 <col:209> '_Bool' lvalue Var 0x5570ae2010d8 'x$w_buff0_used' '_Bool'
|   |                   | | | `-ImplicitCastExpr 0x5570ae204100 <col:227> 'int' <IntegralCast>
|   |                   | | |   `-ImplicitCastExpr 0x5570ae2040e8 <col:227> '_Bool' <LValueToRValue>
|   |                   | | |     `-DeclRefExpr 0x5570ae204098 <col:227> '_Bool' lvalue Var 0x5570ae200ee8 'x$r_buff1_thd2' '_Bool'
|   |                   | | `-ImplicitCastExpr 0x5570ae204170 <col:245> 'int' <IntegralCast>
|   |                   | |   `-ImplicitCastExpr 0x5570ae204158 <col:245> '_Bool' <LValueToRValue>
|   |                   | |     `-DeclRefExpr 0x5570ae204138 <col:245> '_Bool' lvalue Var 0x5570ae2011d0 'x$w_buff1_used' '_Bool'
|   |                   | `-UnaryOperator 0x5570ae2041e0 <col:263, col:264> 'int' prefix '!' cannot overflow
|   |                   |   `-ImplicitCastExpr 0x5570ae2041c8 <col:264> '_Bool' <LValueToRValue>
|   |                   |     `-DeclRefExpr 0x5570ae2041a8 <col:264> '_Bool' lvalue Var 0x5570ae200d80 'x$r_buff0_thd2' '_Bool'
|   |                   |-ImplicitCastExpr 0x5570ae204258 <col:281> 'int' <LValueToRValue>
|   |                   | `-DeclRefExpr 0x5570ae204218 <col:281> 'int' lvalue Var 0x5570ae201060 'x$w_buff0' 'int'
|   |                   `-ImplicitCastExpr 0x5570ae204270 <col:293> 'int' <LValueToRValue>
|   |                     `-DeclRefExpr 0x5570ae204238 <col:293> 'int' lvalue Var 0x5570ae201060 'x$w_buff0' 'int'
|   |-BinaryOperator 0x5570ae204c40 <line:751:3, col:305> 'int' '='
|   | |-DeclRefExpr 0x5570ae2044a8 <col:3> 'int' lvalue Var 0x5570ae201158 'x$w_buff1' 'int'
|   | `-ConditionalOperator 0x5570ae204c10 <col:15, col:305> 'int'
|   |   |-ImplicitCastExpr 0x5570ae204be0 <col:15> 'int' <IntegralCast>
|   |   | `-ImplicitCastExpr 0x5570ae204bc8 <col:15> '_Bool' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x5570ae2044c8 <col:15> '_Bool' lvalue Var 0x5570ae201458 'weak$$choice2' '_Bool'
|   |   |-ImplicitCastExpr 0x5570ae204bf8 <col:31> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x5570ae2044e8 <col:31> 'int' lvalue Var 0x5570ae201158 'x$w_buff1' 'int'
|   |   `-ParenExpr 0x5570ae204ba8 <col:43, col:305> 'int'
|   |     `-ConditionalOperator 0x5570ae204b78 <col:44, col:304> 'int'
|   |       |-UnaryOperator 0x5570ae204540 <col:44, col:45> 'int' prefix '!' cannot overflow
|   |       | `-ImplicitCastExpr 0x5570ae204528 <col:45> '_Bool' <LValueToRValue>
|   |       |   `-DeclRefExpr 0x5570ae204508 <col:45> '_Bool' lvalue Var 0x5570ae2010d8 'x$w_buff0_used' '_Bool'
|   |       |-ImplicitCastExpr 0x5570ae204b60 <col:62> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x5570ae204558 <col:62> 'int' lvalue Var 0x5570ae201158 'x$w_buff1' 'int'
|   |       `-ParenExpr 0x5570ae204b40 <col:74, col:304> 'int'
|   |         `-ConditionalOperator 0x5570ae204af8 <col:75, col:303> 'int'
|   |           |-BinaryOperator 0x5570ae204618 <col:75, col:93> 'int' '&&'
|   |           | |-ImplicitCastExpr 0x5570ae2045d0 <col:75> 'int' <IntegralCast>
|   |           | | `-ImplicitCastExpr 0x5570ae2045b8 <col:75> '_Bool' <LValueToRValue>
|   |           | |   `-DeclRefExpr 0x5570ae204578 <col:75> '_Bool' lvalue Var 0x5570ae2010d8 'x$w_buff0_used' '_Bool'
|   |           | `-ImplicitCastExpr 0x5570ae204600 <col:93> 'int' <IntegralCast>
|   |           |   `-ImplicitCastExpr 0x5570ae2045e8 <col:93> '_Bool' <LValueToRValue>
|   |           |     `-DeclRefExpr 0x5570ae204598 <col:93> '_Bool' lvalue Var 0x5570ae200d80 'x$r_buff0_thd2' '_Bool'
|   |           |-ImplicitCastExpr 0x5570ae204ae0 <col:110> 'int' <LValueToRValue>
|   |           | `-DeclRefExpr 0x5570ae204638 <col:110> 'int' lvalue Var 0x5570ae201158 'x$w_buff1' 'int'
|   |           `-ParenExpr 0x5570ae204ac0 <col:122, col:303> 'int'
|   |             `-ConditionalOperator 0x5570ae204a90 <col:123, col:302> 'int'
|   |               |-BinaryOperator 0x5570ae2047d8 <col:123, col:179> 'int' '&&'
|   |               | |-BinaryOperator 0x5570ae204768 <col:123, col:160> 'int' '&&'
|   |               | | |-BinaryOperator 0x5570ae2046f8 <col:123, col:142> 'int' '&&'
|   |               | | | |-ImplicitCastExpr 0x5570ae2046e0 <col:123> 'int' <IntegralCast>
|   |               | | | | `-ImplicitCastExpr 0x5570ae2046c8 <col:123> '_Bool' <LValueToRValue>
|   |               | | | |   `-DeclRefExpr 0x5570ae204658 <col:123> '_Bool' lvalue Var 0x5570ae2010d8 'x$w_buff0_used' '_Bool'
|   |               | | | `-UnaryOperator 0x5570ae2046b0 <col:141, col:142> 'int' prefix '!' cannot overflow
|   |               | | |   `-ImplicitCastExpr 0x5570ae204698 <col:142> '_Bool' <LValueToRValue>
|   |               | | |     `-DeclRefExpr 0x5570ae204678 <col:142> '_Bool' lvalue Var 0x5570ae200ee8 'x$r_buff1_thd2' '_Bool'
|   |               | | `-ImplicitCastExpr 0x5570ae204750 <col:160> 'int' <IntegralCast>
|   |               | |   `-ImplicitCastExpr 0x5570ae204738 <col:160> '_Bool' <LValueToRValue>
|   |               | |     `-DeclRefExpr 0x5570ae204718 <col:160> '_Bool' lvalue Var 0x5570ae2011d0 'x$w_buff1_used' '_Bool'
|   |               | `-UnaryOperator 0x5570ae2047c0 <col:178, col:179> 'int' prefix '!' cannot overflow
|   |               |   `-ImplicitCastExpr 0x5570ae2047a8 <col:179> '_Bool' <LValueToRValue>
|   |               |     `-DeclRefExpr 0x5570ae204788 <col:179> '_Bool' lvalue Var 0x5570ae200d80 'x$r_buff0_thd2' '_Bool'
|   |               |-ImplicitCastExpr 0x5570ae204a78 <col:196> 'int' <LValueToRValue>
|   |               | `-DeclRefExpr 0x5570ae2047f8 <col:196> 'int' lvalue Var 0x5570ae201158 'x$w_buff1' 'int'
|   |               `-ParenExpr 0x5570ae204a58 <col:208, col:302> 'int'
|   |                 `-ConditionalOperator 0x5570ae204a28 <col:209, col:293> 'int'
|   |                   |-BinaryOperator 0x5570ae204998 <col:209, col:264> 'int' '&&'
|   |                   | |-BinaryOperator 0x5570ae204928 <col:209, col:245> 'int' '&&'
|   |                   | | |-BinaryOperator 0x5570ae2048b8 <col:209, col:227> 'int' '&&'
|   |                   | | | |-ImplicitCastExpr 0x5570ae204870 <col:209> 'int' <IntegralCast>
|   |                   | | | | `-ImplicitCastExpr 0x5570ae204858 <col:209> '_Bool' <LValueToRValue>
|   |                   | | | |   `-DeclRefExpr 0x5570ae204818 <col:209> '_Bool' lvalue Var 0x5570ae2010d8 'x$w_buff0_used' '_Bool'
|   |                   | | | `-ImplicitCastExpr 0x5570ae2048a0 <col:227> 'int' <IntegralCast>
|   |                   | | |   `-ImplicitCastExpr 0x5570ae204888 <col:227> '_Bool' <LValueToRValue>
|   |                   | | |     `-DeclRefExpr 0x5570ae204838 <col:227> '_Bool' lvalue Var 0x5570ae200ee8 'x$r_buff1_thd2' '_Bool'
|   |                   | | `-ImplicitCastExpr 0x5570ae204910 <col:245> 'int' <IntegralCast>
|   |                   | |   `-ImplicitCastExpr 0x5570ae2048f8 <col:245> '_Bool' <LValueToRValue>
|   |                   | |     `-DeclRefExpr 0x5570ae2048d8 <col:245> '_Bool' lvalue Var 0x5570ae2011d0 'x$w_buff1_used' '_Bool'
|   |                   | `-UnaryOperator 0x5570ae204980 <col:263, col:264> 'int' prefix '!' cannot overflow
|   |                   |   `-ImplicitCastExpr 0x5570ae204968 <col:264> '_Bool' <LValueToRValue>
|   |                   |     `-DeclRefExpr 0x5570ae204948 <col:264> '_Bool' lvalue Var 0x5570ae200d80 'x$r_buff0_thd2' '_Bool'
|   |                   |-ImplicitCastExpr 0x5570ae2049f8 <col:281> 'int' <LValueToRValue>
|   |                   | `-DeclRefExpr 0x5570ae2049b8 <col:281> 'int' lvalue Var 0x5570ae201158 'x$w_buff1' 'int'
|   |                   `-ImplicitCastExpr 0x5570ae204a10 <col:293> 'int' <LValueToRValue>
|   |                     `-DeclRefExpr 0x5570ae2049d8 <col:293> 'int' lvalue Var 0x5570ae201158 'x$w_buff1' 'int'
|   |-BinaryOperator 0x5570ae205518 <line:752:3, col:349> '_Bool' '='
|   | |-DeclRefExpr 0x5570ae204c60 <col:3> '_Bool' lvalue Var 0x5570ae2010d8 'x$w_buff0_used' '_Bool'
|   | `-ImplicitCastExpr 0x5570ae205500 <col:20, col:349> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x5570ae2054d0 <col:20, col:349> 'int'
|   |     |-ImplicitCastExpr 0x5570ae205488 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x5570ae205470 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x5570ae204c80 <col:20> '_Bool' lvalue Var 0x5570ae201458 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x5570ae2054b8 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x5570ae2054a0 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x5570ae204ca0 <col:36> '_Bool' lvalue Var 0x5570ae2010d8 'x$w_buff0_used' '_Bool'
|   |     `-ParenExpr 0x5570ae205450 <col:53, col:349> 'int'
|   |       `-ConditionalOperator 0x5570ae205420 <col:54, col:348> 'int'
|   |         |-UnaryOperator 0x5570ae204cf8 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | `-ImplicitCastExpr 0x5570ae204ce0 <col:55> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x5570ae204cc0 <col:55> '_Bool' lvalue Var 0x5570ae2010d8 'x$w_buff0_used' '_Bool'
|   |         |-ImplicitCastExpr 0x5570ae205408 <col:72> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x5570ae2053f0 <col:72> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x5570ae204d10 <col:72> '_Bool' lvalue Var 0x5570ae2010d8 'x$w_buff0_used' '_Bool'
|   |         `-ParenExpr 0x5570ae2053d0 <col:89, col:348> 'int'
|   |           `-ConditionalOperator 0x5570ae2053a0 <col:90, col:347> 'int'
|   |             |-BinaryOperator 0x5570ae204dd0 <col:90, col:108> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x5570ae204d88 <col:90> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x5570ae204d70 <col:90> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x5570ae204d30 <col:90> '_Bool' lvalue Var 0x5570ae2010d8 'x$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x5570ae204db8 <col:108> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x5570ae204da0 <col:108> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x5570ae204d50 <col:108> '_Bool' lvalue Var 0x5570ae200d80 'x$r_buff0_thd2' '_Bool'
|   |             |-ImplicitCastExpr 0x5570ae205388 <col:125, col:132> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x5570ae204e20 <col:125, col:132> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x5570ae204df0 <col:132> 'int' 0
|   |             `-ParenExpr 0x5570ae205368 <col:136, col:347> 'int'
|   |               `-ConditionalOperator 0x5570ae205338 <col:137, col:346> 'int'
|   |                 |-BinaryOperator 0x5570ae204fc8 <col:137, col:193> 'int' '&&'
|   |                 | |-BinaryOperator 0x5570ae204f58 <col:137, col:174> 'int' '&&'
|   |                 | | |-BinaryOperator 0x5570ae204ee8 <col:137, col:156> 'int' '&&'
|   |                 | | | |-ImplicitCastExpr 0x5570ae204ed0 <col:137> 'int' <IntegralCast>
|   |                 | | | | `-ImplicitCastExpr 0x5570ae204eb8 <col:137> '_Bool' <LValueToRValue>
|   |                 | | | |   `-DeclRefExpr 0x5570ae204e48 <col:137> '_Bool' lvalue Var 0x5570ae2010d8 'x$w_buff0_used' '_Bool'
|   |                 | | | `-UnaryOperator 0x5570ae204ea0 <col:155, col:156> 'int' prefix '!' cannot overflow
|   |                 | | |   `-ImplicitCastExpr 0x5570ae204e88 <col:156> '_Bool' <LValueToRValue>
|   |                 | | |     `-DeclRefExpr 0x5570ae204e68 <col:156> '_Bool' lvalue Var 0x5570ae200ee8 'x$r_buff1_thd2' '_Bool'
|   |                 | | `-ImplicitCastExpr 0x5570ae204f40 <col:174> 'int' <IntegralCast>
|   |                 | |   `-ImplicitCastExpr 0x5570ae204f28 <col:174> '_Bool' <LValueToRValue>
|   |                 | |     `-DeclRefExpr 0x5570ae204f08 <col:174> '_Bool' lvalue Var 0x5570ae2011d0 'x$w_buff1_used' '_Bool'
|   |                 | `-UnaryOperator 0x5570ae204fb0 <col:192, col:193> 'int' prefix '!' cannot overflow
|   |                 |   `-ImplicitCastExpr 0x5570ae204f98 <col:193> '_Bool' <LValueToRValue>
|   |                 |     `-DeclRefExpr 0x5570ae204f78 <col:193> '_Bool' lvalue Var 0x5570ae200d80 'x$r_buff0_thd2' '_Bool'
|   |                 |-BinaryOperator 0x5570ae205088 <col:210, col:228> 'int' '||'
|   |                 | |-ImplicitCastExpr 0x5570ae205070 <col:210> 'int' <IntegralCast>
|   |                 | | `-ImplicitCastExpr 0x5570ae205058 <col:210> '_Bool' <LValueToRValue>
|   |                 | |   `-DeclRefExpr 0x5570ae204fe8 <col:210> '_Bool' lvalue Var 0x5570ae201368 'weak$$choice0' '_Bool'
|   |                 | `-UnaryOperator 0x5570ae205040 <col:227, col:228> 'int' prefix '!' cannot overflow
|   |                 |   `-ImplicitCastExpr 0x5570ae205028 <col:228> '_Bool' <LValueToRValue>
|   |                 |     `-DeclRefExpr 0x5570ae205008 <col:228> '_Bool' lvalue Var 0x5570ae2013e0 'weak$$choice1' '_Bool'
|   |                 `-ParenExpr 0x5570ae205318 <col:244, col:346> 'int'
|   |                   `-ConditionalOperator 0x5570ae2052e8 <col:245, col:333> 'int'
|   |                     |-BinaryOperator 0x5570ae205228 <col:245, col:300> 'int' '&&'
|   |                     | |-BinaryOperator 0x5570ae2051b8 <col:245, col:281> 'int' '&&'
|   |                     | | |-BinaryOperator 0x5570ae205148 <col:245, col:263> 'int' '&&'
|   |                     | | | |-ImplicitCastExpr 0x5570ae205100 <col:245> 'int' <IntegralCast>
|   |                     | | | | `-ImplicitCastExpr 0x5570ae2050e8 <col:245> '_Bool' <LValueToRValue>
|   |                     | | | |   `-DeclRefExpr 0x5570ae2050a8 <col:245> '_Bool' lvalue Var 0x5570ae2010d8 'x$w_buff0_used' '_Bool'
|   |                     | | | `-ImplicitCastExpr 0x5570ae205130 <col:263> 'int' <IntegralCast>
|   |                     | | |   `-ImplicitCastExpr 0x5570ae205118 <col:263> '_Bool' <LValueToRValue>
|   |                     | | |     `-DeclRefExpr 0x5570ae2050c8 <col:263> '_Bool' lvalue Var 0x5570ae200ee8 'x$r_buff1_thd2' '_Bool'
|   |                     | | `-ImplicitCastExpr 0x5570ae2051a0 <col:281> 'int' <IntegralCast>
|   |                     | |   `-ImplicitCastExpr 0x5570ae205188 <col:281> '_Bool' <LValueToRValue>
|   |                     | |     `-DeclRefExpr 0x5570ae205168 <col:281> '_Bool' lvalue Var 0x5570ae2011d0 'x$w_buff1_used' '_Bool'
|   |                     | `-UnaryOperator 0x5570ae205210 <col:299, col:300> 'int' prefix '!' cannot overflow
|   |                     |   `-ImplicitCastExpr 0x5570ae2051f8 <col:300> '_Bool' <LValueToRValue>
|   |                     |     `-DeclRefExpr 0x5570ae2051d8 <col:300> '_Bool' lvalue Var 0x5570ae200d80 'x$r_buff0_thd2' '_Bool'
|   |                     |-ImplicitCastExpr 0x5570ae2052a0 <col:317> 'int' <IntegralCast>
|   |                     | `-ImplicitCastExpr 0x5570ae205288 <col:317> '_Bool' <LValueToRValue>
|   |                     |   `-DeclRefExpr 0x5570ae205248 <col:317> '_Bool' lvalue Var 0x5570ae201368 'weak$$choice0' '_Bool'
|   |                     `-ImplicitCastExpr 0x5570ae2052d0 <col:333> 'int' <IntegralCast>
|   |                       `-ImplicitCastExpr 0x5570ae2052b8 <col:333> '_Bool' <LValueToRValue>
|   |                         `-DeclRefExpr 0x5570ae205268 <col:333> '_Bool' lvalue Var 0x5570ae201368 'weak$$choice0' '_Bool'
|   |-BinaryOperator 0x5570ae205de0 <line:753:3, col:321> '_Bool' '='
|   | |-DeclRefExpr 0x5570ae205538 <col:3> '_Bool' lvalue Var 0x5570ae2011d0 'x$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x5570ae205dc8 <col:20, col:321> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x5570ae205d98 <col:20, col:321> 'int'
|   |     |-ImplicitCastExpr 0x5570ae205d50 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x5570ae205d38 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x5570ae205558 <col:20> '_Bool' lvalue Var 0x5570ae201458 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x5570ae205d80 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x5570ae205d68 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x5570ae205578 <col:36> '_Bool' lvalue Var 0x5570ae2011d0 'x$w_buff1_used' '_Bool'
|   |     `-ParenExpr 0x5570ae205d18 <col:53, col:321> 'int'
|   |       `-ConditionalOperator 0x5570ae205ce8 <col:54, col:320> 'int'
|   |         |-UnaryOperator 0x5570ae2055d0 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | `-ImplicitCastExpr 0x5570ae2055b8 <col:55> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x5570ae205598 <col:55> '_Bool' lvalue Var 0x5570ae2010d8 'x$w_buff0_used' '_Bool'
|   |         |-ImplicitCastExpr 0x5570ae205cd0 <col:72> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x5570ae205cb8 <col:72> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x5570ae2055e8 <col:72> '_Bool' lvalue Var 0x5570ae2011d0 'x$w_buff1_used' '_Bool'
|   |         `-ParenExpr 0x5570ae205c98 <col:89, col:320> 'int'
|   |           `-ConditionalOperator 0x5570ae205c68 <col:90, col:319> 'int'
|   |             |-BinaryOperator 0x5570ae2056a8 <col:90, col:108> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x5570ae205660 <col:90> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x5570ae205648 <col:90> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x5570ae205608 <col:90> '_Bool' lvalue Var 0x5570ae2010d8 'x$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x5570ae205690 <col:108> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x5570ae205678 <col:108> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x5570ae205628 <col:108> '_Bool' lvalue Var 0x5570ae200d80 'x$r_buff0_thd2' '_Bool'
|   |             |-ImplicitCastExpr 0x5570ae205c50 <col:125, col:132> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x5570ae2056f8 <col:125, col:132> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x5570ae2056c8 <col:132> 'int' 0
|   |             `-ParenExpr 0x5570ae205c30 <col:136, col:319> 'int'
|   |               `-ConditionalOperator 0x5570ae205c00 <col:137, col:318> 'int'
|   |                 |-BinaryOperator 0x5570ae2058a0 <col:137, col:193> 'int' '&&'
|   |                 | |-BinaryOperator 0x5570ae205830 <col:137, col:174> 'int' '&&'
|   |                 | | |-BinaryOperator 0x5570ae2057c0 <col:137, col:156> 'int' '&&'
|   |                 | | | |-ImplicitCastExpr 0x5570ae2057a8 <col:137> 'int' <IntegralCast>
|   |                 | | | | `-ImplicitCastExpr 0x5570ae205790 <col:137> '_Bool' <LValueToRValue>
|   |                 | | | |   `-DeclRefExpr 0x5570ae205720 <col:137> '_Bool' lvalue Var 0x5570ae2010d8 'x$w_buff0_used' '_Bool'
|   |                 | | | `-UnaryOperator 0x5570ae205778 <col:155, col:156> 'int' prefix '!' cannot overflow
|   |                 | | |   `-ImplicitCastExpr 0x5570ae205760 <col:156> '_Bool' <LValueToRValue>
|   |                 | | |     `-DeclRefExpr 0x5570ae205740 <col:156> '_Bool' lvalue Var 0x5570ae200ee8 'x$r_buff1_thd2' '_Bool'
|   |                 | | `-ImplicitCastExpr 0x5570ae205818 <col:174> 'int' <IntegralCast>
|   |                 | |   `-ImplicitCastExpr 0x5570ae205800 <col:174> '_Bool' <LValueToRValue>
|   |                 | |     `-DeclRefExpr 0x5570ae2057e0 <col:174> '_Bool' lvalue Var 0x5570ae2011d0 'x$w_buff1_used' '_Bool'
|   |                 | `-UnaryOperator 0x5570ae205888 <col:192, col:193> 'int' prefix '!' cannot overflow
|   |                 |   `-ImplicitCastExpr 0x5570ae205870 <col:193> '_Bool' <LValueToRValue>
|   |                 |     `-DeclRefExpr 0x5570ae205850 <col:193> '_Bool' lvalue Var 0x5570ae200d80 'x$r_buff0_thd2' '_Bool'
|   |                 |-ImplicitCastExpr 0x5570ae205be8 <col:210> 'int' <IntegralCast>
|   |                 | `-ImplicitCastExpr 0x5570ae205bd0 <col:210> '_Bool' <LValueToRValue>
|   |                 |   `-DeclRefExpr 0x5570ae2058c0 <col:210> '_Bool' lvalue Var 0x5570ae201368 'weak$$choice0' '_Bool'
|   |                 `-ParenExpr 0x5570ae205bb0 <col:226, col:318> 'int'
|   |                   `-ConditionalOperator 0x5570ae205b80 <col:227, col:317> 'int'
|   |                     |-BinaryOperator 0x5570ae205a60 <col:227, col:282> 'int' '&&'
|   |                     | |-BinaryOperator 0x5570ae2059f0 <col:227, col:263> 'int' '&&'
|   |                     | | |-BinaryOperator 0x5570ae205980 <col:227, col:245> 'int' '&&'
|   |                     | | | |-ImplicitCastExpr 0x5570ae205938 <col:227> 'int' <IntegralCast>
|   |                     | | | | `-ImplicitCastExpr 0x5570ae205920 <col:227> '_Bool' <LValueToRValue>
|   |                     | | | |   `-DeclRefExpr 0x5570ae2058e0 <col:227> '_Bool' lvalue Var 0x5570ae2010d8 'x$w_buff0_used' '_Bool'
|   |                     | | | `-ImplicitCastExpr 0x5570ae205968 <col:245> 'int' <IntegralCast>
|   |                     | | |   `-ImplicitCastExpr 0x5570ae205950 <col:245> '_Bool' <LValueToRValue>
|   |                     | | |     `-DeclRefExpr 0x5570ae205900 <col:245> '_Bool' lvalue Var 0x5570ae200ee8 'x$r_buff1_thd2' '_Bool'
|   |                     | | `-ImplicitCastExpr 0x5570ae2059d8 <col:263> 'int' <IntegralCast>
|   |                     | |   `-ImplicitCastExpr 0x5570ae2059c0 <col:263> '_Bool' <LValueToRValue>
|   |                     | |     `-DeclRefExpr 0x5570ae2059a0 <col:263> '_Bool' lvalue Var 0x5570ae2011d0 'x$w_buff1_used' '_Bool'
|   |                     | `-UnaryOperator 0x5570ae205a48 <col:281, col:282> 'int' prefix '!' cannot overflow
|   |                     |   `-ImplicitCastExpr 0x5570ae205a30 <col:282> '_Bool' <LValueToRValue>
|   |                     |     `-DeclRefExpr 0x5570ae205a10 <col:282> '_Bool' lvalue Var 0x5570ae200d80 'x$r_buff0_thd2' '_Bool'
|   |                     |-ImplicitCastExpr 0x5570ae205b50 <col:299, col:306> 'int' <IntegralCast>
|   |                     | `-CStyleCastExpr 0x5570ae205ab0 <col:299, col:306> '_Bool' <IntegralToBoolean>
|   |                     |   `-IntegerLiteral 0x5570ae205a80 <col:306> 'int' 0
|   |                     `-ImplicitCastExpr 0x5570ae205b68 <col:310, col:317> 'int' <IntegralCast>
|   |                       `-CStyleCastExpr 0x5570ae205b08 <col:310, col:317> '_Bool' <IntegralToBoolean>
|   |                         `-IntegerLiteral 0x5570ae205ad8 <col:317> 'int' 0
|   |-BinaryOperator 0x5570ae206688 <line:754:3, col:322> '_Bool' '='
|   | |-DeclRefExpr 0x5570ae205e00 <col:3> '_Bool' lvalue Var 0x5570ae200d80 'x$r_buff0_thd2' '_Bool'
|   | `-ImplicitCastExpr 0x5570ae206670 <col:20, col:322> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x5570ae206640 <col:20, col:322> 'int'
|   |     |-ImplicitCastExpr 0x5570ae2065f8 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x5570ae2065e0 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x5570ae205e20 <col:20> '_Bool' lvalue Var 0x5570ae201458 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x5570ae206628 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x5570ae206610 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x5570ae205e40 <col:36> '_Bool' lvalue Var 0x5570ae200d80 'x$r_buff0_thd2' '_Bool'
|   |     `-ParenExpr 0x5570ae2065c0 <col:53, col:322> 'int'
|   |       `-ConditionalOperator 0x5570ae206590 <col:54, col:321> 'int'
|   |         |-UnaryOperator 0x5570ae205e98 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | `-ImplicitCastExpr 0x5570ae205e80 <col:55> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x5570ae205e60 <col:55> '_Bool' lvalue Var 0x5570ae2010d8 'x$w_buff0_used' '_Bool'
|   |         |-ImplicitCastExpr 0x5570ae206578 <col:72> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x5570ae206560 <col:72> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x5570ae205eb0 <col:72> '_Bool' lvalue Var 0x5570ae200d80 'x$r_buff0_thd2' '_Bool'
|   |         `-ParenExpr 0x5570ae206540 <col:89, col:321> 'int'
|   |           `-ConditionalOperator 0x5570ae206510 <col:90, col:320> 'int'
|   |             |-BinaryOperator 0x5570ae205f70 <col:90, col:108> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x5570ae205f28 <col:90> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x5570ae205f10 <col:90> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x5570ae205ed0 <col:90> '_Bool' lvalue Var 0x5570ae2010d8 'x$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x5570ae205f58 <col:108> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x5570ae205f40 <col:108> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x5570ae205ef0 <col:108> '_Bool' lvalue Var 0x5570ae200d80 'x$r_buff0_thd2' '_Bool'
|   |             |-ImplicitCastExpr 0x5570ae2064f8 <col:125, col:132> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x5570ae205fc0 <col:125, col:132> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x5570ae205f90 <col:132> 'int' 0
|   |             `-ParenExpr 0x5570ae2064d8 <col:136, col:320> 'int'
|   |               `-ConditionalOperator 0x5570ae2064a8 <col:137, col:319> 'int'
|   |                 |-BinaryOperator 0x5570ae206168 <col:137, col:193> 'int' '&&'
|   |                 | |-BinaryOperator 0x5570ae2060f8 <col:137, col:174> 'int' '&&'
|   |                 | | |-BinaryOperator 0x5570ae206088 <col:137, col:156> 'int' '&&'
|   |                 | | | |-ImplicitCastExpr 0x5570ae206070 <col:137> 'int' <IntegralCast>
|   |                 | | | | `-ImplicitCastExpr 0x5570ae206058 <col:137> '_Bool' <LValueToRValue>
|   |                 | | | |   `-DeclRefExpr 0x5570ae205fe8 <col:137> '_Bool' lvalue Var 0x5570ae2010d8 'x$w_buff0_used' '_Bool'
|   |                 | | | `-UnaryOperator 0x5570ae206040 <col:155, col:156> 'int' prefix '!' cannot overflow
|   |                 | | |   `-ImplicitCastExpr 0x5570ae206028 <col:156> '_Bool' <LValueToRValue>
|   |                 | | |     `-DeclRefExpr 0x5570ae206008 <col:156> '_Bool' lvalue Var 0x5570ae200ee8 'x$r_buff1_thd2' '_Bool'
|   |                 | | `-ImplicitCastExpr 0x5570ae2060e0 <col:174> 'int' <IntegralCast>
|   |                 | |   `-ImplicitCastExpr 0x5570ae2060c8 <col:174> '_Bool' <LValueToRValue>
|   |                 | |     `-DeclRefExpr 0x5570ae2060a8 <col:174> '_Bool' lvalue Var 0x5570ae2011d0 'x$w_buff1_used' '_Bool'
|   |                 | `-UnaryOperator 0x5570ae206150 <col:192, col:193> 'int' prefix '!' cannot overflow
|   |                 |   `-ImplicitCastExpr 0x5570ae206138 <col:193> '_Bool' <LValueToRValue>
|   |                 |     `-DeclRefExpr 0x5570ae206118 <col:193> '_Bool' lvalue Var 0x5570ae200d80 'x$r_buff0_thd2' '_Bool'
|   |                 |-ImplicitCastExpr 0x5570ae206490 <col:210> 'int' <IntegralCast>
|   |                 | `-ImplicitCastExpr 0x5570ae206478 <col:210> '_Bool' <LValueToRValue>
|   |                 |   `-DeclRefExpr 0x5570ae206188 <col:210> '_Bool' lvalue Var 0x5570ae200d80 'x$r_buff0_thd2' '_Bool'
|   |                 `-ParenExpr 0x5570ae206458 <col:227, col:319> 'int'
|   |                   `-ConditionalOperator 0x5570ae206428 <col:228, col:318> 'int'
|   |                     |-BinaryOperator 0x5570ae206328 <col:228, col:283> 'int' '&&'
|   |                     | |-BinaryOperator 0x5570ae2062b8 <col:228, col:264> 'int' '&&'
|   |                     | | |-BinaryOperator 0x5570ae206248 <col:228, col:246> 'int' '&&'
|   |                     | | | |-ImplicitCastExpr 0x5570ae206200 <col:228> 'int' <IntegralCast>
|   |                     | | | | `-ImplicitCastExpr 0x5570ae2061e8 <col:228> '_Bool' <LValueToRValue>
|   |                     | | | |   `-DeclRefExpr 0x5570ae2061a8 <col:228> '_Bool' lvalue Var 0x5570ae2010d8 'x$w_buff0_used' '_Bool'
|   |                     | | | `-ImplicitCastExpr 0x5570ae206230 <col:246> 'int' <IntegralCast>
|   |                     | | |   `-ImplicitCastExpr 0x5570ae206218 <col:246> '_Bool' <LValueToRValue>
|   |                     | | |     `-DeclRefExpr 0x5570ae2061c8 <col:246> '_Bool' lvalue Var 0x5570ae200ee8 'x$r_buff1_thd2' '_Bool'
|   |                     | | `-ImplicitCastExpr 0x5570ae2062a0 <col:264> 'int' <IntegralCast>
|   |                     | |   `-ImplicitCastExpr 0x5570ae206288 <col:264> '_Bool' <LValueToRValue>
|   |                     | |     `-DeclRefExpr 0x5570ae206268 <col:264> '_Bool' lvalue Var 0x5570ae2011d0 'x$w_buff1_used' '_Bool'
|   |                     | `-UnaryOperator 0x5570ae206310 <col:282, col:283> 'int' prefix '!' cannot overflow
|   |                     |   `-ImplicitCastExpr 0x5570ae2062f8 <col:283> '_Bool' <LValueToRValue>
|   |                     |     `-DeclRefExpr 0x5570ae2062d8 <col:283> '_Bool' lvalue Var 0x5570ae200d80 'x$r_buff0_thd2' '_Bool'
|   |                     |-ImplicitCastExpr 0x5570ae2063f8 <col:300, col:307> 'int' <IntegralCast>
|   |                     | `-CStyleCastExpr 0x5570ae206378 <col:300, col:307> '_Bool' <IntegralToBoolean>
|   |                     |   `-IntegerLiteral 0x5570ae206348 <col:307> 'int' 0
|   |                     `-ImplicitCastExpr 0x5570ae206410 <col:311, col:318> 'int' <IntegralCast>
|   |                       `-CStyleCastExpr 0x5570ae2063d0 <col:311, col:318> '_Bool' <IntegralToBoolean>
|   |                         `-IntegerLiteral 0x5570ae2063a0 <col:318> 'int' 0
|   |-BinaryOperator 0x5570ae207060 <line:755:3, col:351> '_Bool' '='
|   | |-DeclRefExpr 0x5570ae2066a8 <col:3> '_Bool' lvalue Var 0x5570ae200ee8 'x$r_buff1_thd2' '_Bool'
|   | `-ImplicitCastExpr 0x5570ae207048 <col:20, col:351> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x5570ae207018 <col:20, col:351> 'int'
|   |     |-ImplicitCastExpr 0x5570ae206fd0 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x5570ae206fb8 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x5570ae2066c8 <col:20> '_Bool' lvalue Var 0x5570ae201458 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x5570ae207000 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x5570ae206fe8 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x5570ae2066e8 <col:36> '_Bool' lvalue Var 0x5570ae200ee8 'x$r_buff1_thd2' '_Bool'
|   |     `-ParenExpr 0x5570ae206f98 <col:53, col:351> 'int'
|   |       `-ConditionalOperator 0x5570ae206f68 <col:54, col:350> 'int'
|   |         |-UnaryOperator 0x5570ae206740 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | `-ImplicitCastExpr 0x5570ae206728 <col:55> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x5570ae206708 <col:55> '_Bool' lvalue Var 0x5570ae2010d8 'x$w_buff0_used' '_Bool'
|   |         |-ImplicitCastExpr 0x5570ae206f50 <col:72> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x5570ae206f38 <col:72> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x5570ae206758 <col:72> '_Bool' lvalue Var 0x5570ae200ee8 'x$r_buff1_thd2' '_Bool'
|   |         `-ParenExpr 0x5570ae206f18 <col:89, col:350> 'int'
|   |           `-ConditionalOperator 0x5570ae206ee8 <col:90, col:349> 'int'
|   |             |-BinaryOperator 0x5570ae206818 <col:90, col:108> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x5570ae2067d0 <col:90> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x5570ae2067b8 <col:90> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x5570ae206778 <col:90> '_Bool' lvalue Var 0x5570ae2010d8 'x$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x5570ae206800 <col:108> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x5570ae2067e8 <col:108> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x5570ae206798 <col:108> '_Bool' lvalue Var 0x5570ae200d80 'x$r_buff0_thd2' '_Bool'
|   |             |-ImplicitCastExpr 0x5570ae206ed0 <col:125, col:132> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x5570ae206868 <col:125, col:132> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x5570ae206838 <col:132> 'int' 0
|   |             `-ParenExpr 0x5570ae206eb0 <col:136, col:349> 'int'
|   |               `-ConditionalOperator 0x5570ae206e80 <col:137, col:348> 'int'
|   |                 |-BinaryOperator 0x5570ae206a10 <col:137, col:193> 'int' '&&'
|   |                 | |-BinaryOperator 0x5570ae2069a0 <col:137, col:174> 'int' '&&'
|   |                 | | |-BinaryOperator 0x5570ae206930 <col:137, col:156> 'int' '&&'
|   |                 | | | |-ImplicitCastExpr 0x5570ae206918 <col:137> 'int' <IntegralCast>
|   |                 | | | | `-ImplicitCastExpr 0x5570ae206900 <col:137> '_Bool' <LValueToRValue>
|   |                 | | | |   `-DeclRefExpr 0x5570ae206890 <col:137> '_Bool' lvalue Var 0x5570ae2010d8 'x$w_buff0_used' '_Bool'
|   |                 | | | `-UnaryOperator 0x5570ae2068e8 <col:155, col:156> 'int' prefix '!' cannot overflow
|   |                 | | |   `-ImplicitCastExpr 0x5570ae2068d0 <col:156> '_Bool' <LValueToRValue>
|   |                 | | |     `-DeclRefExpr 0x5570ae2068b0 <col:156> '_Bool' lvalue Var 0x5570ae200ee8 'x$r_buff1_thd2' '_Bool'
|   |                 | | `-ImplicitCastExpr 0x5570ae206988 <col:174> 'int' <IntegralCast>
|   |                 | |   `-ImplicitCastExpr 0x5570ae206970 <col:174> '_Bool' <LValueToRValue>
|   |                 | |     `-DeclRefExpr 0x5570ae206950 <col:174> '_Bool' lvalue Var 0x5570ae2011d0 'x$w_buff1_used' '_Bool'
|   |                 | `-UnaryOperator 0x5570ae2069f8 <col:192, col:193> 'int' prefix '!' cannot overflow
|   |                 |   `-ImplicitCastExpr 0x5570ae2069e0 <col:193> '_Bool' <LValueToRValue>
|   |                 |     `-DeclRefExpr 0x5570ae2069c0 <col:193> '_Bool' lvalue Var 0x5570ae200d80 'x$r_buff0_thd2' '_Bool'
|   |                 |-ParenExpr 0x5570ae206b90 <col:210, col:252> 'int'
|   |                 | `-ConditionalOperator 0x5570ae206b60 <col:211, col:251> 'int'
|   |                 |   |-ImplicitCastExpr 0x5570ae206ae0 <col:211> 'int' <IntegralCast>
|   |                 |   | `-ImplicitCastExpr 0x5570ae206ac8 <col:211> '_Bool' <LValueToRValue>
|   |                 |   |   `-DeclRefExpr 0x5570ae206a30 <col:211> '_Bool' lvalue Var 0x5570ae201368 'weak$$choice0' '_Bool'
|   |                 |   |-ImplicitCastExpr 0x5570ae206b10 <col:227> 'int' <IntegralCast>
|   |                 |   | `-ImplicitCastExpr 0x5570ae206af8 <col:227> '_Bool' <LValueToRValue>
|   |                 |   |   `-DeclRefExpr 0x5570ae206a50 <col:227> '_Bool' lvalue Var 0x5570ae200ee8 'x$r_buff1_thd2' '_Bool'
|   |                 |   `-ImplicitCastExpr 0x5570ae206b28 <col:244, col:251> 'int' <IntegralCast>
|   |                 |     `-CStyleCastExpr 0x5570ae206aa0 <col:244, col:251> '_Bool' <IntegralToBoolean>
|   |                 |       `-IntegerLiteral 0x5570ae206a70 <col:251> 'int' 0
|   |                 `-ParenExpr 0x5570ae206e60 <col:256, col:348> 'int'
|   |                   `-ConditionalOperator 0x5570ae206e30 <col:257, col:347> 'int'
|   |                     |-BinaryOperator 0x5570ae206d30 <col:257, col:312> 'int' '&&'
|   |                     | |-BinaryOperator 0x5570ae206cc0 <col:257, col:293> 'int' '&&'
|   |                     | | |-BinaryOperator 0x5570ae206c50 <col:257, col:275> 'int' '&&'
|   |                     | | | |-ImplicitCastExpr 0x5570ae206c08 <col:257> 'int' <IntegralCast>
|   |                     | | | | `-ImplicitCastExpr 0x5570ae206bf0 <col:257> '_Bool' <LValueToRValue>
|   |                     | | | |   `-DeclRefExpr 0x5570ae206bb0 <col:257> '_Bool' lvalue Var 0x5570ae2010d8 'x$w_buff0_used' '_Bool'
|   |                     | | | `-ImplicitCastExpr 0x5570ae206c38 <col:275> 'int' <IntegralCast>
|   |                     | | |   `-ImplicitCastExpr 0x5570ae206c20 <col:275> '_Bool' <LValueToRValue>
|   |                     | | |     `-DeclRefExpr 0x5570ae206bd0 <col:275> '_Bool' lvalue Var 0x5570ae200ee8 'x$r_buff1_thd2' '_Bool'
|   |                     | | `-ImplicitCastExpr 0x5570ae206ca8 <col:293> 'int' <IntegralCast>
|   |                     | |   `-ImplicitCastExpr 0x5570ae206c90 <col:293> '_Bool' <LValueToRValue>
|   |                     | |     `-DeclRefExpr 0x5570ae206c70 <col:293> '_Bool' lvalue Var 0x5570ae2011d0 'x$w_buff1_used' '_Bool'
|   |                     | `-UnaryOperator 0x5570ae206d18 <col:311, col:312> 'int' prefix '!' cannot overflow
|   |                     |   `-ImplicitCastExpr 0x5570ae206d00 <col:312> '_Bool' <LValueToRValue>
|   |                     |     `-DeclRefExpr 0x5570ae206ce0 <col:312> '_Bool' lvalue Var 0x5570ae200d80 'x$r_buff0_thd2' '_Bool'
|   |                     |-ImplicitCastExpr 0x5570ae206e00 <col:329, col:336> 'int' <IntegralCast>
|   |                     | `-CStyleCastExpr 0x5570ae206d80 <col:329, col:336> '_Bool' <IntegralToBoolean>
|   |                     |   `-IntegerLiteral 0x5570ae206d50 <col:336> 'int' 0
|   |                     `-ImplicitCastExpr 0x5570ae206e18 <col:340, col:347> 'int' <IntegralCast>
|   |                       `-CStyleCastExpr 0x5570ae206dd8 <col:340, col:347> '_Bool' <IntegralToBoolean>
|   |                         `-IntegerLiteral 0x5570ae206da8 <col:347> 'int' 0
|   |-BinaryOperator 0x5570ae2070f8 <line:756:3, col:45> '_Bool' '='
|   | |-DeclRefExpr 0x5570ae207080 <col:3> '_Bool' lvalue Var 0x5570ae200668 '__unbuffered_p1_EAX$read_delayed' '_Bool'
|   | `-CStyleCastExpr 0x5570ae2070d0 <col:38, col:45> '_Bool' <IntegralToBoolean>
|   |   `-IntegerLiteral 0x5570ae2070a0 <col:45> 'int' 1
|   |-BinaryOperator 0x5570ae207170 <line:757:3, col:43> 'int *' '='
|   | |-DeclRefExpr 0x5570ae207118 <col:3> 'int *' lvalue Var 0x5570ae2006e8 '__unbuffered_p1_EAX$read_delayed_var' 'int *'
|   | `-UnaryOperator 0x5570ae207158 <col:42, col:43> 'int *' prefix '&' cannot overflow
|   |   `-DeclRefExpr 0x5570ae207138 <col:43> 'int' lvalue Var 0x5570ae200b00 'x' 'int'
|   |-BinaryOperator 0x5570ae2071e8 <line:758:3, col:25> 'int' '='
|   | |-DeclRefExpr 0x5570ae207190 <col:3> 'int' lvalue Var 0x5570ae200208 '__unbuffered_p1_EAX' 'int'
|   | `-ImplicitCastExpr 0x5570ae2071d0 <col:25> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x5570ae2071b0 <col:25> 'int' lvalue Var 0x5570ae200b00 'x' 'int'
|   |-BinaryOperator 0x5570ae207318 <line:759:3, col:37> 'int' '='
|   | |-DeclRefExpr 0x5570ae207208 <col:3> 'int' lvalue Var 0x5570ae200b00 'x' 'int'
|   | `-ConditionalOperator 0x5570ae2072e8 <col:7, col:37> 'int'
|   |   |-ImplicitCastExpr 0x5570ae2072a0 <col:7> 'int' <IntegralCast>
|   |   | `-ImplicitCastExpr 0x5570ae207288 <col:7> '_Bool' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x5570ae207228 <col:7> '_Bool' lvalue Var 0x5570ae200b98 'x$flush_delayed' '_Bool'
|   |   |-ImplicitCastExpr 0x5570ae2072b8 <col:25> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x5570ae207248 <col:25> 'int' lvalue Var 0x5570ae200c18 'x$mem_tmp' 'int'
|   |   `-ImplicitCastExpr 0x5570ae2072d0 <col:37> 'int' <LValueToRValue>
|   |     `-DeclRefExpr 0x5570ae207268 <col:37> 'int' lvalue Var 0x5570ae200b00 'x' 'int'
|   |-BinaryOperator 0x5570ae2073b0 <line:760:3, col:28> '_Bool' '='
|   | |-DeclRefExpr 0x5570ae207338 <col:3> '_Bool' lvalue Var 0x5570ae200b98 'x$flush_delayed' '_Bool'
|   | `-CStyleCastExpr 0x5570ae207388 <col:21, col:28> '_Bool' <IntegralToBoolean>
|   |   `-IntegerLiteral 0x5570ae207358 <col:28> 'int' 0
|   |-CallExpr 0x5570ae207408 <line:761:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x5570ae2073f0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5570ae2073d0 <col:3> 'void ()' Function 0x5570ae1a6f00 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x5570ae207460 <line:762:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x5570ae207448 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5570ae207428 <col:3> 'void ()' Function 0x5570ae1a6e40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x5570ae2074c0 <line:763:3, col:7> 'int' '='
|   | |-DeclRefExpr 0x5570ae207480 <col:3> 'int' lvalue Var 0x5570ae2012d0 'y' 'int'
|   | `-IntegerLiteral 0x5570ae2074a0 <col:7> 'int' 1
|   |-CallExpr 0x5570ae207518 <line:764:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x5570ae207500 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5570ae2074e0 <col:3> 'void ()' Function 0x5570ae1a6f00 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x5570ae207570 <line:765:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x5570ae207558 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5570ae207538 <col:3> 'void ()' Function 0x5570ae1a6e40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x5570ae207858 <line:766:3, col:103> 'int' '='
|   | |-DeclRefExpr 0x5570ae207590 <col:3> 'int' lvalue Var 0x5570ae200b00 'x' 'int'
|   | `-ConditionalOperator 0x5570ae207828 <col:7, col:103> 'int'
|   |   |-BinaryOperator 0x5570ae207650 <col:7, col:25> 'int' '&&'
|   |   | |-ImplicitCastExpr 0x5570ae207608 <col:7> 'int' <IntegralCast>
|   |   | | `-ImplicitCastExpr 0x5570ae2075f0 <col:7> '_Bool' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x5570ae2075b0 <col:7> '_Bool' lvalue Var 0x5570ae2010d8 'x$w_buff0_used' '_Bool'
|   |   | `-ImplicitCastExpr 0x5570ae207638 <col:25> 'int' <IntegralCast>
|   |   |   `-ImplicitCastExpr 0x5570ae207620 <col:25> '_Bool' <LValueToRValue>
|   |   |     `-DeclRefExpr 0x5570ae2075d0 <col:25> '_Bool' lvalue Var 0x5570ae200d80 'x$r_buff0_thd2' '_Bool'
|   |   |-ImplicitCastExpr 0x5570ae207810 <col:42> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x5570ae207670 <col:42> 'int' lvalue Var 0x5570ae201060 'x$w_buff0' 'int'
|   |   `-ParenExpr 0x5570ae2077f0 <col:54, col:103> 'int'
|   |     `-ConditionalOperator 0x5570ae2077c0 <col:55, col:102> 'int'
|   |       |-BinaryOperator 0x5570ae207730 <col:55, col:73> 'int' '&&'
|   |       | |-ImplicitCastExpr 0x5570ae2076e8 <col:55> 'int' <IntegralCast>
|   |       | | `-ImplicitCastExpr 0x5570ae2076d0 <col:55> '_Bool' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x5570ae207690 <col:55> '_Bool' lvalue Var 0x5570ae2011d0 'x$w_buff1_used' '_Bool'
|   |       | `-ImplicitCastExpr 0x5570ae207718 <col:73> 'int' <IntegralCast>
|   |       |   `-ImplicitCastExpr 0x5570ae207700 <col:73> '_Bool' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x5570ae2076b0 <col:73> '_Bool' lvalue Var 0x5570ae200ee8 'x$r_buff1_thd2' '_Bool'
|   |       |-ImplicitCastExpr 0x5570ae207790 <col:90> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x5570ae207750 <col:90> 'int' lvalue Var 0x5570ae201158 'x$w_buff1' 'int'
|   |       `-ImplicitCastExpr 0x5570ae2077a8 <col:102> 'int' <LValueToRValue>
|   |         `-DeclRefExpr 0x5570ae207770 <col:102> 'int' lvalue Var 0x5570ae200b00 'x' 'int'
|   |-BinaryOperator 0x5570ae207a60 <line:767:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x5570ae207878 <col:3> '_Bool' lvalue Var 0x5570ae2010d8 'x$w_buff0_used' '_Bool'
|   | `-ImplicitCastExpr 0x5570ae207a48 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x5570ae207a18 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x5570ae207938 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x5570ae2078f0 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x5570ae2078d8 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x5570ae207898 <col:20> '_Bool' lvalue Var 0x5570ae2010d8 'x$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x5570ae207920 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x5570ae207908 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x5570ae2078b8 <col:38> '_Bool' lvalue Var 0x5570ae200d80 'x$r_buff0_thd2' '_Bool'
|   |     |-ImplicitCastExpr 0x5570ae2079d0 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x5570ae207988 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x5570ae207958 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x5570ae207a00 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x5570ae2079e8 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x5570ae2079b0 <col:66> '_Bool' lvalue Var 0x5570ae2010d8 'x$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x5570ae207d58 <line:768:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x5570ae207a80 <col:3> '_Bool' lvalue Var 0x5570ae2011d0 'x$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x5570ae207d40 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x5570ae207d10 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x5570ae207c30 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x5570ae207b40 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x5570ae207af8 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x5570ae207ae0 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x5570ae207aa0 <col:20> '_Bool' lvalue Var 0x5570ae2010d8 'x$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x5570ae207b28 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x5570ae207b10 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x5570ae207ac0 <col:38> '_Bool' lvalue Var 0x5570ae200d80 'x$r_buff0_thd2' '_Bool'
|   |     | `-BinaryOperator 0x5570ae207c10 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x5570ae207bc8 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x5570ae207bb0 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x5570ae207b70 <col:56> '_Bool' lvalue Var 0x5570ae2011d0 'x$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x5570ae207bf8 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x5570ae207be0 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x5570ae207b90 <col:74> '_Bool' lvalue Var 0x5570ae200ee8 'x$r_buff1_thd2' '_Bool'
|   |     |-ImplicitCastExpr 0x5570ae207cc8 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x5570ae207c80 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x5570ae207c50 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x5570ae207cf8 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x5570ae207ce0 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x5570ae207ca8 <col:102> '_Bool' lvalue Var 0x5570ae2011d0 'x$w_buff1_used' '_Bool'
|   |-BinaryOperator 0x5570ae207f60 <line:769:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x5570ae207d78 <col:3> '_Bool' lvalue Var 0x5570ae200d80 'x$r_buff0_thd2' '_Bool'
|   | `-ImplicitCastExpr 0x5570ae207f48 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x5570ae207f18 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x5570ae207e38 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x5570ae207df0 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x5570ae207dd8 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x5570ae207d98 <col:20> '_Bool' lvalue Var 0x5570ae2010d8 'x$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x5570ae207e20 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x5570ae207e08 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x5570ae207db8 <col:38> '_Bool' lvalue Var 0x5570ae200d80 'x$r_buff0_thd2' '_Bool'
|   |     |-ImplicitCastExpr 0x5570ae207ed0 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x5570ae207e88 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x5570ae207e58 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x5570ae207f00 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x5570ae207ee8 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x5570ae207eb0 <col:66> '_Bool' lvalue Var 0x5570ae200d80 'x$r_buff0_thd2' '_Bool'
|   |-BinaryOperator 0x5570ae208248 <line:770:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x5570ae207f80 <col:3> '_Bool' lvalue Var 0x5570ae200ee8 'x$r_buff1_thd2' '_Bool'
|   | `-ImplicitCastExpr 0x5570ae208230 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x5570ae208200 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x5570ae208120 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x5570ae208040 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x5570ae207ff8 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x5570ae207fe0 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x5570ae207fa0 <col:20> '_Bool' lvalue Var 0x5570ae2010d8 'x$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x5570ae208028 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x5570ae208010 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x5570ae207fc0 <col:38> '_Bool' lvalue Var 0x5570ae200d80 'x$r_buff0_thd2' '_Bool'
|   |     | `-BinaryOperator 0x5570ae208100 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x5570ae2080b8 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x5570ae2080a0 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x5570ae208060 <col:56> '_Bool' lvalue Var 0x5570ae2011d0 'x$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x5570ae2080e8 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x5570ae2080d0 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x5570ae208080 <col:74> '_Bool' lvalue Var 0x5570ae200ee8 'x$r_buff1_thd2' '_Bool'
|   |     |-ImplicitCastExpr 0x5570ae2081b8 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x5570ae208170 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x5570ae208140 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x5570ae2081e8 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x5570ae2081d0 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x5570ae208198 <col:102> '_Bool' lvalue Var 0x5570ae200ee8 'x$r_buff1_thd2' '_Bool'
|   |-CallExpr 0x5570ae2082a0 <line:771:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x5570ae208288 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5570ae208268 <col:3> 'void ()' Function 0x5570ae1a6f00 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x5570ae2082f8 <line:772:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x5570ae2082e0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5570ae2082c0 <col:3> 'void ()' Function 0x5570ae1a6e40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x5570ae2083b0 <line:773:3, col:41> 'int' '='
|   | |-DeclRefExpr 0x5570ae208318 <col:3> 'int' lvalue Var 0x5570ae1fffc8 '__unbuffered_cnt' 'int'
|   | `-BinaryOperator 0x5570ae208390 <col:22, col:41> 'int' '+'
|   |   |-ImplicitCastExpr 0x5570ae208378 <col:22> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x5570ae208338 <col:22> 'int' lvalue Var 0x5570ae1fffc8 '__unbuffered_cnt' 'int'
|   |   `-IntegerLiteral 0x5570ae208358 <col:41> 'int' 1
|   |-CallExpr 0x5570ae208408 <line:774:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x5570ae2083f0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5570ae2083d0 <col:3> 'void ()' Function 0x5570ae1a6f00 '__VERIFIER_atomic_end' 'void ()'
|   `-ReturnStmt 0x5570ae208480 <line:775:3, col:36>
|     `-CallExpr 0x5570ae208460 <col:10, col:36> 'void *'
|       `-ImplicitCastExpr 0x5570ae208448 <col:10> 'void *(*)(void)' <FunctionToPointerDecay>
|         `-DeclRefExpr 0x5570ae208428 <col:10> 'void *(void)' Function 0x5570ae1a6958 '__VERIFIER_nondet_pointer' 'void *(void)'
|-FunctionDecl 0x5570ae2085c8 prev 0x5570ae1ffd10 <line:777:1, line:779:1> line:777:6 fence 'void ()'
| `-CompoundStmt 0x5570ae208668 <line:778:1, line:779:1>
|-FunctionDecl 0x5570ae208698 prev 0x5570ae1ffdd0 <line:780:1, line:782:1> line:780:6 isync 'void ()'
| `-CompoundStmt 0x5570ae208738 <line:781:1, line:782:1>
|-FunctionDecl 0x5570ae208768 prev 0x5570ae1ffe90 <line:783:1, line:785:1> line:783:6 lwfence 'void ()'
| `-CompoundStmt 0x5570ae208808 <line:784:1, line:785:1>
`-FunctionDecl 0x5570ae208878 <line:786:1, line:810:1> line:786:5 main 'int ()'
  `-CompoundStmt 0x5570ae20b4b8 <line:787:1, line:810:1>
    |-DeclStmt 0x5570ae208990 <line:788:3, col:18>
    | `-VarDecl 0x5570ae208928 <col:3, col:13> col:13 used t2669 'pthread_t':'unsigned long'
    |-CallExpr 0x5570ae208bc8 <line:789:3, col:54> 'int'
    | |-ImplicitCastExpr 0x5570ae208bb0 <col:3> 'int (*)(pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x5570ae2089a8 <col:3> 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' Function 0x5570ae1e7488 'pthread_create' 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)'
    | |-UnaryOperator 0x5570ae2089e8 <col:18, col:19> 'pthread_t *' prefix '&' cannot overflow
    | | `-DeclRefExpr 0x5570ae2089c8 <col:19> 'pthread_t':'unsigned long' lvalue Var 0x5570ae208928 't2669' 'pthread_t':'unsigned long'
    | |-ImplicitCastExpr 0x5570ae208c08 <col:26, col:36> 'const pthread_attr_t *' <NullToPointer>
    | | `-ParenExpr 0x5570ae208a60 <col:26, col:36> 'void *'
    | |   `-CStyleCastExpr 0x5570ae208a38 <col:27, col:35> 'void *' <NullToPointer>
    | |     `-IntegerLiteral 0x5570ae208a00 <col:35> 'int' 0
    | |-ImplicitCastExpr 0x5570ae208c20 <col:39> 'void *(*)(void *)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x5570ae208a80 <col:39> 'void *(void *)' Function 0x5570ae201570 'P0' 'void *(void *)'
    | `-ParenExpr 0x5570ae208b00 <col:43, col:53> 'void *'
    |   `-CStyleCastExpr 0x5570ae208ad8 <col:44, col:52> 'void *' <NullToPointer>
    |     `-IntegerLiteral 0x5570ae208aa0 <col:52> 'int' 0
    |-DeclStmt 0x5570ae208cb0 <line:790:3, col:18>
    | `-VarDecl 0x5570ae208c48 <col:3, col:13> col:13 used t2670 'pthread_t':'unsigned long'
    |-CallExpr 0x5570ae208e58 <line:791:3, col:54> 'int'
    | |-ImplicitCastExpr 0x5570ae208e40 <col:3> 'int (*)(pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x5570ae208cc8 <col:3> 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' Function 0x5570ae1e7488 'pthread_create' 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)'
    | |-UnaryOperator 0x5570ae208d08 <col:18, col:19> 'pthread_t *' prefix '&' cannot overflow
    | | `-DeclRefExpr 0x5570ae208ce8 <col:19> 'pthread_t':'unsigned long' lvalue Var 0x5570ae208c48 't2670' 'pthread_t':'unsigned long'
    | |-ImplicitCastExpr 0x5570ae208e98 <col:26, col:36> 'const pthread_attr_t *' <NullToPointer>
    | | `-ParenExpr 0x5570ae208d80 <col:26, col:36> 'void *'
    | |   `-CStyleCastExpr 0x5570ae208d58 <col:27, col:35> 'void *' <NullToPointer>
    | |     `-IntegerLiteral 0x5570ae208d20 <col:35> 'int' 0
    | |-ImplicitCastExpr 0x5570ae208eb0 <col:39> 'void *(*)(void *)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x5570ae208da0 <col:39> 'void *(void *)' Function 0x5570ae202ed0 'P1' 'void *(void *)'
    | `-ParenExpr 0x5570ae208e20 <col:43, col:53> 'void *'
    |   `-CStyleCastExpr 0x5570ae208df8 <col:44, col:52> 'void *' <NullToPointer>
    |     `-IntegerLiteral 0x5570ae208dc0 <col:52> 'int' 0
    |-CallExpr 0x5570ae208f00 <line:792:3, col:27> 'void'
    | `-ImplicitCastExpr 0x5570ae208ee8 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x5570ae208ec8 <col:3> 'void ()' Function 0x5570ae1a6e40 '__VERIFIER_atomic_begin' 'void ()'
    |-BinaryOperator 0x5570ae208fd0 <line:793:3, col:41> '_Bool' '='
    | |-DeclRefExpr 0x5570ae208f20 <col:3> '_Bool' lvalue Var 0x5570ae200950 'main$tmp_guard0' '_Bool'
    | `-ImplicitCastExpr 0x5570ae208fb8 <col:21, col:41> '_Bool' <IntegralToBoolean>
    |   `-BinaryOperator 0x5570ae208f98 <col:21, col:41> 'int' '=='
    |     |-ImplicitCastExpr 0x5570ae208f80 <col:21> 'int' <LValueToRValue>
    |     | `-DeclRefExpr 0x5570ae208f40 <col:21> 'int' lvalue Var 0x5570ae1fffc8 '__unbuffered_cnt' 'int'
    |     `-IntegerLiteral 0x5570ae208f60 <col:41> 'int' 2
    |-CallExpr 0x5570ae209028 <line:794:3, col:25> 'void'
    | `-ImplicitCastExpr 0x5570ae209010 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x5570ae208ff0 <col:3> 'void ()' Function 0x5570ae1a6f00 '__VERIFIER_atomic_end' 'void ()'
    |-CallExpr 0x5570ae2090a0 <line:795:3, col:36> 'void'
    | |-ImplicitCastExpr 0x5570ae209088 <col:3> 'void (*)(int)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x5570ae209048 <col:3> 'void (int)' Function 0x5570ae1a6790 '__VERIFIER_assume' 'void (int)'
    | `-ImplicitCastExpr 0x5570ae2090e0 <col:21> 'int' <IntegralCast>
    |   `-ImplicitCastExpr 0x5570ae2090c8 <col:21> '_Bool' <LValueToRValue>
    |     `-DeclRefExpr 0x5570ae209068 <col:21> '_Bool' lvalue Var 0x5570ae200950 'main$tmp_guard0' '_Bool'
    |-CallExpr 0x5570ae209130 <line:796:3, col:27> 'void'
    | `-ImplicitCastExpr 0x5570ae209118 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x5570ae2090f8 <col:3> 'void ()' Function 0x5570ae1a6e40 '__VERIFIER_atomic_begin' 'void ()'
    |-BinaryOperator 0x5570ae209418 <line:797:3, col:103> 'int' '='
    | |-DeclRefExpr 0x5570ae209150 <col:3> 'int' lvalue Var 0x5570ae200b00 'x' 'int'
    | `-ConditionalOperator 0x5570ae2093e8 <col:7, col:103> 'int'
    |   |-BinaryOperator 0x5570ae209210 <col:7, col:25> 'int' '&&'
    |   | |-ImplicitCastExpr 0x5570ae2091c8 <col:7> 'int' <IntegralCast>
    |   | | `-ImplicitCastExpr 0x5570ae2091b0 <col:7> '_Bool' <LValueToRValue>
    |   | |   `-DeclRefExpr 0x5570ae209170 <col:7> '_Bool' lvalue Var 0x5570ae2010d8 'x$w_buff0_used' '_Bool'
    |   | `-ImplicitCastExpr 0x5570ae2091f8 <col:25> 'int' <IntegralCast>
    |   |   `-ImplicitCastExpr 0x5570ae2091e0 <col:25> '_Bool' <LValueToRValue>
    |   |     `-DeclRefExpr 0x5570ae209190 <col:25> '_Bool' lvalue Var 0x5570ae200c90 'x$r_buff0_thd0' '_Bool'
    |   |-ImplicitCastExpr 0x5570ae2093d0 <col:42> 'int' <LValueToRValue>
    |   | `-DeclRefExpr 0x5570ae209230 <col:42> 'int' lvalue Var 0x5570ae201060 'x$w_buff0' 'int'
    |   `-ParenExpr 0x5570ae2093b0 <col:54, col:103> 'int'
    |     `-ConditionalOperator 0x5570ae209380 <col:55, col:102> 'int'
    |       |-BinaryOperator 0x5570ae2092f0 <col:55, col:73> 'int' '&&'
    |       | |-ImplicitCastExpr 0x5570ae2092a8 <col:55> 'int' <IntegralCast>
    |       | | `-ImplicitCastExpr 0x5570ae209290 <col:55> '_Bool' <LValueToRValue>
    |       | |   `-DeclRefExpr 0x5570ae209250 <col:55> '_Bool' lvalue Var 0x5570ae2011d0 'x$w_buff1_used' '_Bool'
    |       | `-ImplicitCastExpr 0x5570ae2092d8 <col:73> 'int' <IntegralCast>
    |       |   `-ImplicitCastExpr 0x5570ae2092c0 <col:73> '_Bool' <LValueToRValue>
    |       |     `-DeclRefExpr 0x5570ae209270 <col:73> '_Bool' lvalue Var 0x5570ae200df8 'x$r_buff1_thd0' '_Bool'
    |       |-ImplicitCastExpr 0x5570ae209350 <col:90> 'int' <LValueToRValue>
    |       | `-DeclRefExpr 0x5570ae209310 <col:90> 'int' lvalue Var 0x5570ae201158 'x$w_buff1' 'int'
    |       `-ImplicitCastExpr 0x5570ae209368 <col:102> 'int' <LValueToRValue>
    |         `-DeclRefExpr 0x5570ae209330 <col:102> 'int' lvalue Var 0x5570ae200b00 'x' 'int'
    |-BinaryOperator 0x5570ae209620 <line:798:3, col:66> '_Bool' '='
    | |-DeclRefExpr 0x5570ae209438 <col:3> '_Bool' lvalue Var 0x5570ae2010d8 'x$w_buff0_used' '_Bool'
    | `-ImplicitCastExpr 0x5570ae209608 <col:20, col:66> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x5570ae2095d8 <col:20, col:66> 'int'
    |     |-BinaryOperator 0x5570ae2094f8 <col:20, col:38> 'int' '&&'
    |     | |-ImplicitCastExpr 0x5570ae2094b0 <col:20> 'int' <IntegralCast>
    |     | | `-ImplicitCastExpr 0x5570ae209498 <col:20> '_Bool' <LValueToRValue>
    |     | |   `-DeclRefExpr 0x5570ae209458 <col:20> '_Bool' lvalue Var 0x5570ae2010d8 'x$w_buff0_used' '_Bool'
    |     | `-ImplicitCastExpr 0x5570ae2094e0 <col:38> 'int' <IntegralCast>
    |     |   `-ImplicitCastExpr 0x5570ae2094c8 <col:38> '_Bool' <LValueToRValue>
    |     |     `-DeclRefExpr 0x5570ae209478 <col:38> '_Bool' lvalue Var 0x5570ae200c90 'x$r_buff0_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x5570ae209590 <col:55, col:62> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x5570ae209548 <col:55, col:62> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x5570ae209518 <col:62> 'int' 0
    |     `-ImplicitCastExpr 0x5570ae2095c0 <col:66> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x5570ae2095a8 <col:66> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x5570ae209570 <col:66> '_Bool' lvalue Var 0x5570ae2010d8 'x$w_buff0_used' '_Bool'
    |-BinaryOperator 0x5570ae209908 <line:799:3, col:102> '_Bool' '='
    | |-DeclRefExpr 0x5570ae209640 <col:3> '_Bool' lvalue Var 0x5570ae2011d0 'x$w_buff1_used' '_Bool'
    | `-ImplicitCastExpr 0x5570ae2098f0 <col:20, col:102> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x5570ae2098c0 <col:20, col:102> 'int'
    |     |-BinaryOperator 0x5570ae2097e0 <col:20, col:74> 'int' '||'
    |     | |-BinaryOperator 0x5570ae209700 <col:20, col:38> 'int' '&&'
    |     | | |-ImplicitCastExpr 0x5570ae2096b8 <col:20> 'int' <IntegralCast>
    |     | | | `-ImplicitCastExpr 0x5570ae2096a0 <col:20> '_Bool' <LValueToRValue>
    |     | | |   `-DeclRefExpr 0x5570ae209660 <col:20> '_Bool' lvalue Var 0x5570ae2010d8 'x$w_buff0_used' '_Bool'
    |     | | `-ImplicitCastExpr 0x5570ae2096e8 <col:38> 'int' <IntegralCast>
    |     | |   `-ImplicitCastExpr 0x5570ae2096d0 <col:38> '_Bool' <LValueToRValue>
    |     | |     `-DeclRefExpr 0x5570ae209680 <col:38> '_Bool' lvalue Var 0x5570ae200c90 'x$r_buff0_thd0' '_Bool'
    |     | `-BinaryOperator 0x5570ae2097c0 <col:56, col:74> 'int' '&&'
    |     |   |-ImplicitCastExpr 0x5570ae209778 <col:56> 'int' <IntegralCast>
    |     |   | `-ImplicitCastExpr 0x5570ae209760 <col:56> '_Bool' <LValueToRValue>
    |     |   |   `-DeclRefExpr 0x5570ae209720 <col:56> '_Bool' lvalue Var 0x5570ae2011d0 'x$w_buff1_used' '_Bool'
    |     |   `-ImplicitCastExpr 0x5570ae2097a8 <col:74> 'int' <IntegralCast>
    |     |     `-ImplicitCastExpr 0x5570ae209790 <col:74> '_Bool' <LValueToRValue>
    |     |       `-DeclRefExpr 0x5570ae209740 <col:74> '_Bool' lvalue Var 0x5570ae200df8 'x$r_buff1_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x5570ae209878 <col:91, col:98> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x5570ae209830 <col:91, col:98> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x5570ae209800 <col:98> 'int' 0
    |     `-ImplicitCastExpr 0x5570ae2098a8 <col:102> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x5570ae209890 <col:102> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x5570ae209858 <col:102> '_Bool' lvalue Var 0x5570ae2011d0 'x$w_buff1_used' '_Bool'
    |-BinaryOperator 0x5570ae209b10 <line:800:3, col:66> '_Bool' '='
    | |-DeclRefExpr 0x5570ae209928 <col:3> '_Bool' lvalue Var 0x5570ae200c90 'x$r_buff0_thd0' '_Bool'
    | `-ImplicitCastExpr 0x5570ae209af8 <col:20, col:66> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x5570ae209ac8 <col:20, col:66> 'int'
    |     |-BinaryOperator 0x5570ae2099e8 <col:20, col:38> 'int' '&&'
    |     | |-ImplicitCastExpr 0x5570ae2099a0 <col:20> 'int' <IntegralCast>
    |     | | `-ImplicitCastExpr 0x5570ae209988 <col:20> '_Bool' <LValueToRValue>
    |     | |   `-DeclRefExpr 0x5570ae209948 <col:20> '_Bool' lvalue Var 0x5570ae2010d8 'x$w_buff0_used' '_Bool'
    |     | `-ImplicitCastExpr 0x5570ae2099d0 <col:38> 'int' <IntegralCast>
    |     |   `-ImplicitCastExpr 0x5570ae2099b8 <col:38> '_Bool' <LValueToRValue>
    |     |     `-DeclRefExpr 0x5570ae209968 <col:38> '_Bool' lvalue Var 0x5570ae200c90 'x$r_buff0_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x5570ae209a80 <col:55, col:62> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x5570ae209a38 <col:55, col:62> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x5570ae209a08 <col:62> 'int' 0
    |     `-ImplicitCastExpr 0x5570ae209ab0 <col:66> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x5570ae209a98 <col:66> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x5570ae209a60 <col:66> '_Bool' lvalue Var 0x5570ae200c90 'x$r_buff0_thd0' '_Bool'
    |-BinaryOperator 0x5570ae20ae28 <line:801:3, col:102> '_Bool' '='
    | |-DeclRefExpr 0x5570ae209b30 <col:3> '_Bool' lvalue Var 0x5570ae200df8 'x$r_buff1_thd0' '_Bool'
    | `-ImplicitCastExpr 0x5570ae20ae10 <col:20, col:102> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x5570ae20ade0 <col:20, col:102> 'int'
    |     |-BinaryOperator 0x5570ae20ad00 <col:20, col:74> 'int' '||'
    |     | |-BinaryOperator 0x5570ae20ac20 <col:20, col:38> 'int' '&&'
    |     | | |-ImplicitCastExpr 0x5570ae20abd8 <col:20> 'int' <IntegralCast>
    |     | | | `-ImplicitCastExpr 0x5570ae20abc0 <col:20> '_Bool' <LValueToRValue>
    |     | | |   `-DeclRefExpr 0x5570ae209b50 <col:20> '_Bool' lvalue Var 0x5570ae2010d8 'x$w_buff0_used' '_Bool'
    |     | | `-ImplicitCastExpr 0x5570ae20ac08 <col:38> 'int' <IntegralCast>
    |     | |   `-ImplicitCastExpr 0x5570ae20abf0 <col:38> '_Bool' <LValueToRValue>
    |     | |     `-DeclRefExpr 0x5570ae20aba0 <col:38> '_Bool' lvalue Var 0x5570ae200c90 'x$r_buff0_thd0' '_Bool'
    |     | `-BinaryOperator 0x5570ae20ace0 <col:56, col:74> 'int' '&&'
    |     |   |-ImplicitCastExpr 0x5570ae20ac98 <col:56> 'int' <IntegralCast>
    |     |   | `-ImplicitCastExpr 0x5570ae20ac80 <col:56> '_Bool' <LValueToRValue>
    |     |   |   `-DeclRefExpr 0x5570ae20ac40 <col:56> '_Bool' lvalue Var 0x5570ae2011d0 'x$w_buff1_used' '_Bool'
    |     |   `-ImplicitCastExpr 0x5570ae20acc8 <col:74> 'int' <IntegralCast>
    |     |     `-ImplicitCastExpr 0x5570ae20acb0 <col:74> '_Bool' <LValueToRValue>
    |     |       `-DeclRefExpr 0x5570ae20ac60 <col:74> '_Bool' lvalue Var 0x5570ae200df8 'x$r_buff1_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x5570ae20ad98 <col:91, col:98> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x5570ae20ad50 <col:91, col:98> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x5570ae20ad20 <col:98> 'int' 0
    |     `-ImplicitCastExpr 0x5570ae20adc8 <col:102> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x5570ae20adb0 <col:102> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x5570ae20ad78 <col:102> '_Bool' lvalue Var 0x5570ae200df8 'x$r_buff1_thd0' '_Bool'
    |-CallExpr 0x5570ae20ae80 <line:802:3, col:25> 'void'
    | `-ImplicitCastExpr 0x5570ae20ae68 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x5570ae20ae48 <col:3> 'void ()' Function 0x5570ae1a6f00 '__VERIFIER_atomic_end' 'void ()'
    |-CallExpr 0x5570ae20aed8 <line:803:3, col:27> 'void'
    | `-ImplicitCastExpr 0x5570ae20aec0 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x5570ae20aea0 <col:3> 'void ()' Function 0x5570ae1a6e40 '__VERIFIER_atomic_begin' 'void ()'
    |-BinaryOperator 0x5570ae20af88 <line:804:3, col:45> '_Bool' '='
    | |-DeclRefExpr 0x5570ae20aef8 <col:3> '_Bool' lvalue Var 0x5570ae2013e0 'weak$$choice1' '_Bool'
    | `-ImplicitCastExpr 0x5570ae20af70 <col:19, col:45> '_Bool' <PointerToBoolean>
    |   `-CallExpr 0x5570ae20af50 <col:19, col:45> 'void *'
    |     `-ImplicitCastExpr 0x5570ae20af38 <col:19> 'void *(*)(void)' <FunctionToPointerDecay>
    |       `-DeclRefExpr 0x5570ae20af18 <col:19> 'void *(void)' Function 0x5570ae1a6958 '__VERIFIER_nondet_pointer' 'void *(void)'
    |-BinaryOperator 0x5570ae20b1c0 <line:805:3, col:140> 'int' '='
    | |-DeclRefExpr 0x5570ae20afa8 <col:3> 'int' lvalue Var 0x5570ae200208 '__unbuffered_p1_EAX' 'int'
    | `-ConditionalOperator 0x5570ae20b190 <col:25, col:140> 'int'
    |   |-ImplicitCastExpr 0x5570ae20b160 <col:25> 'int' <IntegralCast>
    |   | `-ImplicitCastExpr 0x5570ae20b148 <col:25> '_Bool' <LValueToRValue>
    |   |   `-DeclRefExpr 0x5570ae20afc8 <col:25> '_Bool' lvalue Var 0x5570ae200668 '__unbuffered_p1_EAX$read_delayed' '_Bool'
    |   |-ParenExpr 0x5570ae20b108 <col:60, col:136> 'int'
    |   | `-ConditionalOperator 0x5570ae20b0d8 <col:61, col:117> 'int'
    |   |   |-ImplicitCastExpr 0x5570ae20b090 <col:61> 'int' <IntegralCast>
    |   |   | `-ImplicitCastExpr 0x5570ae20b078 <col:61> '_Bool' <LValueToRValue>
    |   |   |   `-DeclRefExpr 0x5570ae20afe8 <col:61> '_Bool' lvalue Var 0x5570ae2013e0 'weak$$choice1' '_Bool'
    |   |   |-ImplicitCastExpr 0x5570ae20b0a8 <col:77, col:78> 'int' <LValueToRValue>
    |   |   | `-UnaryOperator 0x5570ae20b040 <col:77, col:78> 'int' lvalue prefix '*' cannot overflow
    |   |   |   `-ImplicitCastExpr 0x5570ae20b028 <col:78> 'int *' <LValueToRValue>
    |   |   |     `-DeclRefExpr 0x5570ae20b008 <col:78> 'int *' lvalue Var 0x5570ae2006e8 '__unbuffered_p1_EAX$read_delayed_var' 'int *'
    |   |   `-ImplicitCastExpr 0x5570ae20b0c0 <col:117> 'int' <LValueToRValue>
    |   |     `-DeclRefExpr 0x5570ae20b058 <col:117> 'int' lvalue Var 0x5570ae200208 '__unbuffered_p1_EAX' 'int'
    |   `-ImplicitCastExpr 0x5570ae20b178 <col:140> 'int' <LValueToRValue>
    |     `-DeclRefExpr 0x5570ae20b128 <col:140> 'int' lvalue Var 0x5570ae200208 '__unbuffered_p1_EAX' 'int'
    |-BinaryOperator 0x5570ae20b360 <line:806:3, col:75> '_Bool' '='
    | |-DeclRefExpr 0x5570ae20b1e0 <col:3> '_Bool' lvalue Var 0x5570ae2009c8 'main$tmp_guard1' '_Bool'
    | `-ImplicitCastExpr 0x5570ae20b348 <col:21, col:75> '_Bool' <IntegralToBoolean>
    |   `-UnaryOperator 0x5570ae20b330 <col:21, col:75> 'int' prefix '!' cannot overflow
    |     `-ParenExpr 0x5570ae20b310 <col:22, col:75> 'int'
    |       `-BinaryOperator 0x5570ae20b2f0 <col:23, col:74> 'int' '&&'
    |         |-BinaryOperator 0x5570ae20b258 <col:23, col:46> 'int' '=='
    |         | |-ImplicitCastExpr 0x5570ae20b240 <col:23> 'int' <LValueToRValue>
    |         | | `-DeclRefExpr 0x5570ae20b200 <col:23> 'int' lvalue Var 0x5570ae2000e8 '__unbuffered_p0_EAX' 'int'
    |         | `-IntegerLiteral 0x5570ae20b220 <col:46> 'int' 1
    |         `-BinaryOperator 0x5570ae20b2d0 <col:51, col:74> 'int' '=='
    |           |-ImplicitCastExpr 0x5570ae20b2b8 <col:51> 'int' <LValueToRValue>
    |           | `-DeclRefExpr 0x5570ae20b278 <col:51> 'int' lvalue Var 0x5570ae200208 '__unbuffered_p1_EAX' 'int'
    |           `-IntegerLiteral 0x5570ae20b298 <col:74> 'int' 1
    |-CallExpr 0x5570ae20b3b8 <line:807:3, col:25> 'void'
    | `-ImplicitCastExpr 0x5570ae20b3a0 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x5570ae20b380 <col:3> 'void ()' Function 0x5570ae1a6f00 '__VERIFIER_atomic_end' 'void ()'
    |-CallExpr 0x5570ae20b430 <line:808:3, col:36> 'void'
    | |-ImplicitCastExpr 0x5570ae20b418 <col:3> 'void (*)(int)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x5570ae20b3d8 <col:3> 'void (int)' Function 0x5570ae1a6bc8 '__VERIFIER_assert' 'void (int)'
    | `-ImplicitCastExpr 0x5570ae20b470 <col:21> 'int' <IntegralCast>
    |   `-ImplicitCastExpr 0x5570ae20b458 <col:21> '_Bool' <LValueToRValue>
    |     `-DeclRefExpr 0x5570ae20b3f8 <col:21> '_Bool' lvalue Var 0x5570ae2009c8 'main$tmp_guard1' '_Bool'
    `-ReturnStmt 0x5570ae20b4a8 <line:809:3, col:10>
      `-IntegerLiteral 0x5570ae20b488 <col:10> 'int' 0
