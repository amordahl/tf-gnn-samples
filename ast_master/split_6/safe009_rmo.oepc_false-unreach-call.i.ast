TranslationUnitDecl 0x55a54b46ae18 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x55a54b46b6d8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x55a54b46b3b0 '__int128'
|-TypedefDecl 0x55a54b46b748 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x55a54b46b3d0 'unsigned __int128'
|-TypedefDecl 0x55a54b46ba50 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x55a54b46b820 'struct __NSConstantString_tag'
|   `-Record 0x55a54b46b7a0 '__NSConstantString_tag'
|-TypedefDecl 0x55a54b46baf8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x55a54b46bab0 'char *'
|   `-BuiltinType 0x55a54b46aeb0 'char'
|-TypedefDecl 0x55a54b4aa650 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'struct __va_list_tag [1]'
| `-ConstantArrayType 0x55a54b46bd90 'struct __va_list_tag [1]' 1 
|   `-RecordType 0x55a54b46bbd0 'struct __va_list_tag'
|     `-Record 0x55a54b46bb50 '__va_list_tag'
|-FunctionDecl 0x55a54b4aa770 <./split_6/safe009_rmo.oepc_false-unreach-call.i:1:1, col:41> col:14 used __VERIFIER_nondet_bool '_Bool (void)' extern
|-FunctionDecl 0x55a54b4aa940 <line:2:1, col:34> col:13 used __VERIFIER_assume 'void (int)' extern
| `-ParmVarDecl 0x55a54b4aa870 <col:31> col:34 'int'
|-FunctionDecl 0x55a54b4aaab8 <line:3:1, col:45> col:15 used __VERIFIER_nondet_pointer 'void *(void)' extern
|-FunctionDecl 0x55a54b4aabe0 <line:4:1, col:61> col:13 used __VERIFIER_error 'void () __attribute__((noreturn))' extern
|-FunctionDecl 0x55a54b4aad28 <line:5:1, col:99> col:6 used __VERIFIER_assert 'void (int)'
| |-ParmVarDecl 0x55a54b4aac98 <col:24, col:28> col:28 used expression 'int'
| `-CompoundStmt 0x55a54b4aaf58 <col:40, col:99>
|   |-IfStmt 0x55a54b4aaf28 <col:42, col:88>
|   | |-UnaryOperator 0x55a54b4aae08 <col:46, col:47> 'int' prefix '!' cannot overflow
|   | | `-ImplicitCastExpr 0x55a54b4aadf0 <col:47> 'int' <LValueToRValue>
|   | |   `-DeclRefExpr 0x55a54b4aadd0 <col:47> 'int' lvalue ParmVar 0x55a54b4aac98 'expression' 'int'
|   | `-CompoundStmt 0x55a54b4aaf10 <col:59, col:88>
|   |   `-LabelStmt 0x55a54b4aaef8 <col:61, col:85> 'ERROR'
|   |     `-CallExpr 0x55a54b4aae88 <col:68, col:85> 'void'
|   |       `-ImplicitCastExpr 0x55a54b4aae70 <col:68> 'void (*)() __attribute__((noreturn))' <FunctionToPointerDecay>
|   |         `-DeclRefExpr 0x55a54b4aae20 <col:68> 'void () __attribute__((noreturn))' Function 0x55a54b4aabe0 '__VERIFIER_error' 'void () __attribute__((noreturn))'
|   |-NullStmt 0x55a54b4aaf40 <col:89>
|   `-ReturnStmt 0x55a54b4aaf48 <col:91>
|-FunctionDecl 0x55a54b4aafa0 <line:6:1, col:37> col:13 used __VERIFIER_atomic_begin 'void ()' extern
|-FunctionDecl 0x55a54b4ab060 <line:7:1, col:35> col:13 used __VERIFIER_atomic_end 'void ()' extern
|-FunctionDecl 0x55a54b4ab3e0 <line:9:1, line:11:76> line:9:13 __assert_fail 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x55a54b4ab118 <col:28, col:40> col:40 __assertion 'const char *'
| |-ParmVarDecl 0x55a54b4ab198 <col:53, col:65> col:65 __file 'const char *'
| |-ParmVarDecl 0x55a54b4ab218 <line:10:7, col:20> col:20 __line 'unsigned int'
| |-ParmVarDecl 0x55a54b4ab298 <col:28, col:40> col:40 __function 'const char *'
| `-NoThrowAttr 0x55a54b4ab4a0 <line:11:22>
|-FunctionDecl 0x55a54b4d1520 <line:12:1, line:14:76> line:12:13 __assert_perror_fail 'void (int, const char *, unsigned int, const char *) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x55a54b4ab510 <col:35, col:39> col:39 __errnum 'int'
| |-ParmVarDecl 0x55a54b4ab590 <col:49, col:61> col:61 __file 'const char *'
| |-ParmVarDecl 0x55a54b4d1350 <line:13:7, col:20> col:20 __line 'unsigned int'
| |-ParmVarDecl 0x55a54b4d13d0 <col:28, col:40> col:40 __function 'const char *'
| `-NoThrowAttr 0x55a54b4d15e0 <line:14:22>
|-FunctionDecl 0x55a54b4d1890 <line:15:1, line:16:76> line:15:13 __assert 'void (const char *, const char *, int) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x55a54b4d1650 <col:23, col:35> col:35 __assertion 'const char *'
| |-ParmVarDecl 0x55a54b4d16d0 <col:48, col:60> col:60 __file 'const char *'
| |-ParmVarDecl 0x55a54b4d1750 <col:68, col:72> col:72 __line 'int'
| `-NoThrowAttr 0x55a54b4d1948 <line:16:22>
|-TypedefDecl 0x55a54b4d19b8 <line:18:1, col:23> col:23 __u_char 'unsigned char'
| `-BuiltinType 0x55a54b46af70 'unsigned char'
|-TypedefDecl 0x55a54b4d1a28 <line:19:1, col:28> col:28 __u_short 'unsigned short'
| `-BuiltinType 0x55a54b46af90 'unsigned short'
|-TypedefDecl 0x55a54b4d1a98 <line:20:1, col:22> col:22 __u_int 'unsigned int'
| `-BuiltinType 0x55a54b46afb0 'unsigned int'
|-TypedefDecl 0x55a54b4d1b08 <line:21:1, col:27> col:27 __u_long 'unsigned long'
| `-BuiltinType 0x55a54b46afd0 'unsigned long'
|-TypedefDecl 0x55a54b4d1b78 <line:22:1, col:21> col:21 __int8_t 'signed char'
| `-BuiltinType 0x55a54b46aed0 'signed char'
|-TypedefDecl 0x55a54b4d1be8 <line:23:1, col:23> col:23 __uint8_t 'unsigned char'
| `-BuiltinType 0x55a54b46af70 'unsigned char'
|-TypedefDecl 0x55a54b4d1c58 <line:24:1, col:26> col:26 __int16_t 'short'
| `-BuiltinType 0x55a54b46aef0 'short'
|-TypedefDecl 0x55a54b4d1cc8 <line:25:1, col:28> col:28 __uint16_t 'unsigned short'
| `-BuiltinType 0x55a54b46af90 'unsigned short'
|-TypedefDecl 0x55a54b4d1d38 <line:26:1, col:20> col:20 __int32_t 'int'
| `-BuiltinType 0x55a54b46af10 'int'
|-TypedefDecl 0x55a54b4d1da8 <line:27:1, col:22> col:22 __uint32_t 'unsigned int'
| `-BuiltinType 0x55a54b46afb0 'unsigned int'
|-TypedefDecl 0x55a54b4d1e18 <line:28:1, col:25> col:25 __int64_t 'long'
| `-BuiltinType 0x55a54b46af30 'long'
|-TypedefDecl 0x55a54b4d1e88 <line:29:1, col:27> col:27 referenced __uint64_t 'unsigned long'
| `-BuiltinType 0x55a54b46afd0 'unsigned long'
|-TypedefDecl 0x55a54b4d1ef8 <line:30:1, col:18> col:18 referenced __quad_t 'long'
| `-BuiltinType 0x55a54b46af30 'long'
|-TypedefDecl 0x55a54b4d1f68 <line:31:1, col:27> col:27 __u_quad_t 'unsigned long'
| `-BuiltinType 0x55a54b46afd0 'unsigned long'
|-TypedefDecl 0x55a54b4d1fd8 <line:32:1, col:27> col:27 __dev_t 'unsigned long'
| `-BuiltinType 0x55a54b46afd0 'unsigned long'
|-TypedefDecl 0x55a54b4d2048 <line:33:1, col:22> col:22 __uid_t 'unsigned int'
| `-BuiltinType 0x55a54b46afb0 'unsigned int'
|-TypedefDecl 0x55a54b4d20b8 <line:34:1, col:22> col:22 __gid_t 'unsigned int'
| `-BuiltinType 0x55a54b46afb0 'unsigned int'
|-TypedefDecl 0x55a54b4d2128 <line:35:1, col:27> col:27 __ino_t 'unsigned long'
| `-BuiltinType 0x55a54b46afd0 'unsigned long'
|-TypedefDecl 0x55a54b4d2198 <line:36:1, col:27> col:27 __ino64_t 'unsigned long'
| `-BuiltinType 0x55a54b46afd0 'unsigned long'
|-TypedefDecl 0x55a54b4d2208 <line:37:1, col:22> col:22 __mode_t 'unsigned int'
| `-BuiltinType 0x55a54b46afb0 'unsigned int'
|-TypedefDecl 0x55a54b4d2278 <line:38:1, col:27> col:27 __nlink_t 'unsigned long'
| `-BuiltinType 0x55a54b46afd0 'unsigned long'
|-TypedefDecl 0x55a54b4d22e8 <line:39:1, col:18> col:18 __off_t 'long'
| `-BuiltinType 0x55a54b46af30 'long'
|-TypedefDecl 0x55a54b4d2378 <line:40:1, col:18> col:18 referenced __off64_t 'long'
| `-BuiltinType 0x55a54b46af30 'long'
|-TypedefDecl 0x55a54b4d23e8 <line:41:1, col:13> col:13 referenced __pid_t 'int'
| `-BuiltinType 0x55a54b46af10 'int'
|-RecordDecl 0x55a54b4d2440 <line:42:9, col:32> col:9 struct definition
| `-FieldDecl 0x55a54b4d2588 <col:18, col:29> col:22 __val 'int [2]'
|-TypedefDecl 0x55a54b4d2640 <col:1, col:34> col:34 __fsid_t 'struct __fsid_t':'__fsid_t'
| `-ElaboratedType 0x55a54b4d25e0 'struct __fsid_t' sugar
|   `-RecordType 0x55a54b4d24c0 '__fsid_t'
|     `-Record 0x55a54b4d2440 ''
|-TypedefDecl 0x55a54b4d26c8 <line:43:1, col:18> col:18 referenced __clock_t 'long'
| `-BuiltinType 0x55a54b46af30 'long'
|-TypedefDecl 0x55a54b4d2738 <line:44:1, col:27> col:27 __rlim_t 'unsigned long'
| `-BuiltinType 0x55a54b46afd0 'unsigned long'
|-TypedefDecl 0x55a54b4d27a8 <line:45:1, col:27> col:27 __rlim64_t 'unsigned long'
| `-BuiltinType 0x55a54b46afd0 'unsigned long'
|-TypedefDecl 0x55a54b4d2818 <line:46:1, col:22> col:22 __id_t 'unsigned int'
| `-BuiltinType 0x55a54b46afb0 'unsigned int'
|-TypedefDecl 0x55a54b4d2888 <line:47:1, col:18> col:18 referenced __time_t 'long'
| `-BuiltinType 0x55a54b46af30 'long'
|-TypedefDecl 0x55a54b4d28f8 <line:48:1, col:22> col:22 __useconds_t 'unsigned int'
| `-BuiltinType 0x55a54b46afb0 'unsigned int'
|-TypedefDecl 0x55a54b4d2968 <line:49:1, col:18> col:18 __suseconds_t 'long'
| `-BuiltinType 0x55a54b46af30 'long'
|-TypedefDecl 0x55a54b4d29d8 <line:50:1, col:13> col:13 __daddr_t 'int'
| `-BuiltinType 0x55a54b46af10 'int'
|-TypedefDecl 0x55a54b4d2a48 <line:51:1, col:13> col:13 __key_t 'int'
| `-BuiltinType 0x55a54b46af10 'int'
|-TypedefDecl 0x55a54b4d2ab8 <line:52:1, col:13> col:13 referenced __clockid_t 'int'
| `-BuiltinType 0x55a54b46af10 'int'
|-TypedefDecl 0x55a54b4d2b28 <line:53:1, col:16> col:16 referenced __timer_t 'void *'
| `-PointerType 0x55a54b46b630 'void *'
|   `-BuiltinType 0x55a54b46ae70 'void'
|-TypedefDecl 0x55a54b4d2b98 <line:54:1, col:18> col:18 __blksize_t 'long'
| `-BuiltinType 0x55a54b46af30 'long'
|-TypedefDecl 0x55a54b4d2c08 <line:55:1, col:18> col:18 __blkcnt_t 'long'
| `-BuiltinType 0x55a54b46af30 'long'
|-TypedefDecl 0x55a54b4d2c78 <line:56:1, col:18> col:18 __blkcnt64_t 'long'
| `-BuiltinType 0x55a54b46af30 'long'
|-TypedefDecl 0x55a54b4d2ce8 <line:57:1, col:27> col:27 __fsblkcnt_t 'unsigned long'
| `-BuiltinType 0x55a54b46afd0 'unsigned long'
|-TypedefDecl 0x55a54b4d2d58 <line:58:1, col:27> col:27 __fsblkcnt64_t 'unsigned long'
| `-BuiltinType 0x55a54b46afd0 'unsigned long'
|-TypedefDecl 0x55a54b4d2dc8 <line:59:1, col:27> col:27 __fsfilcnt_t 'unsigned long'
| `-BuiltinType 0x55a54b46afd0 'unsigned long'
|-TypedefDecl 0x55a54b4d2e38 <line:60:1, col:27> col:27 __fsfilcnt64_t 'unsigned long'
| `-BuiltinType 0x55a54b46afd0 'unsigned long'
|-TypedefDecl 0x55a54b4d2ea8 <line:61:1, col:18> col:18 __fsword_t 'long'
| `-BuiltinType 0x55a54b46af30 'long'
|-TypedefDecl 0x55a54b4d2f18 <line:62:1, col:18> col:18 __ssize_t 'long'
| `-BuiltinType 0x55a54b46af30 'long'
|-TypedefDecl 0x55a54b4d2f88 <line:63:1, col:18> col:18 referenced __syscall_slong_t 'long'
| `-BuiltinType 0x55a54b46af30 'long'
|-TypedefDecl 0x55a54b4d2ff8 <line:64:1, col:27> col:27 __syscall_ulong_t 'unsigned long'
| `-BuiltinType 0x55a54b46afd0 'unsigned long'
|-TypedefDecl 0x55a54b4d3088 <line:65:1, col:19> col:19 __loff_t '__off64_t':'long'
| `-TypedefType 0x55a54b4d3050 '__off64_t' sugar
|   |-Typedef 0x55a54b4d2378 '__off64_t'
|   `-BuiltinType 0x55a54b46af30 'long'
|-TypedefDecl 0x55a54b4d3180 <line:66:1, col:19> col:19 __qaddr_t '__quad_t *'
| `-PointerType 0x55a54b4d3140 '__quad_t *'
|   `-TypedefType 0x55a54b4d30e0 '__quad_t' sugar
|     |-Typedef 0x55a54b4d1ef8 '__quad_t'
|     `-BuiltinType 0x55a54b46af30 'long'
|-TypedefDecl 0x55a54b4d31f0 <line:67:1, col:15> col:15 __caddr_t 'char *'
| `-PointerType 0x55a54b46bab0 'char *'
|   `-BuiltinType 0x55a54b46aeb0 'char'
|-TypedefDecl 0x55a54b4d3260 <line:68:1, col:18> col:18 __intptr_t 'long'
| `-BuiltinType 0x55a54b46af30 'long'
|-TypedefDecl 0x55a54b4d32d0 <line:69:1, col:22> col:22 __socklen_t 'unsigned int'
| `-BuiltinType 0x55a54b46afb0 'unsigned int'
|-FunctionDecl 0x55a54b4d4458 <line:70:1, line:74:1> line:71:1 __bswap_32 'unsigned int (unsigned int)' static inline
| |-ParmVarDecl 0x55a54b4d4380 <col:13, col:26> col:26 used __bsx 'unsigned int'
| `-CompoundStmt 0x55a54b4d4768 <line:72:1, line:74:1>
|   `-ReturnStmt 0x55a54b4d4758 <line:73:3, col:34>
|     `-CallExpr 0x55a54b4d4718 <col:10, col:34> 'unsigned int'
|       |-ImplicitCastExpr 0x55a54b4d4700 <col:10> 'unsigned int (*)(unsigned int)' <BuiltinFnToFnPtr>
|       | `-DeclRefExpr 0x55a54b4d4690 <col:10> '<builtin fn type>' Function 0x55a54b4d4500 '__builtin_bswap32' 'unsigned int (unsigned int)'
|       `-ImplicitCastExpr 0x55a54b4d4740 <col:29> 'unsigned int' <LValueToRValue>
|         `-DeclRefExpr 0x55a54b4d46b0 <col:29> 'unsigned int' lvalue ParmVar 0x55a54b4d4380 '__bsx' 'unsigned int'
|-FunctionDecl 0x55a54b4d4500 <col:10> col:10 implicit used __builtin_bswap32 'unsigned int (unsigned int)' extern
| |-ParmVarDecl 0x55a54b4d45a0 <<invalid sloc>> <invalid sloc> 'unsigned int'
| |-NoThrowAttr 0x55a54b4d4610 <col:10> Implicit
| `-ConstAttr 0x55a54b4d4668 <col:10> Implicit
|-FunctionDecl 0x55a54b4d48c0 <line:75:1, line:79:1> line:76:1 __bswap_64 '__uint64_t (__uint64_t)' static inline
| |-ParmVarDecl 0x55a54b4d47b8 <col:13, col:24> col:24 used __bsx '__uint64_t':'unsigned long'
| `-CompoundStmt 0x55a54b4d4bd8 <line:77:1, line:79:1>
|   `-ReturnStmt 0x55a54b4d4bc8 <line:78:3, col:34>
|     `-CallExpr 0x55a54b4d4b88 <col:10, col:34> 'unsigned long'
|       |-ImplicitCastExpr 0x55a54b4d4b70 <col:10> 'unsigned long (*)(unsigned long)' <BuiltinFnToFnPtr>
|       | `-DeclRefExpr 0x55a54b4d4af8 <col:10> '<builtin fn type>' Function 0x55a54b4d4968 '__builtin_bswap64' 'unsigned long (unsigned long)'
|       `-ImplicitCastExpr 0x55a54b4d4bb0 <col:29> '__uint64_t':'unsigned long' <LValueToRValue>
|         `-DeclRefExpr 0x55a54b4d4b18 <col:29> '__uint64_t':'unsigned long' lvalue ParmVar 0x55a54b4d47b8 '__bsx' '__uint64_t':'unsigned long'
|-FunctionDecl 0x55a54b4d4968 <col:10> col:10 implicit used __builtin_bswap64 'unsigned long (unsigned long)' extern
| |-ParmVarDecl 0x55a54b4d4a08 <<invalid sloc>> <invalid sloc> 'unsigned long'
| |-NoThrowAttr 0x55a54b4d4a78 <col:10> Implicit
| `-ConstAttr 0x55a54b4d4ad0 <col:10> Implicit
|-TypedefDecl 0x55a54b4d4c08 <line:80:1, col:27> col:27 referenced size_t 'unsigned long'
| `-BuiltinType 0x55a54b46afd0 'unsigned long'
|-TypedefDecl 0x55a54b4d4c98 <line:82:1, col:18> col:18 referenced time_t '__time_t':'long'
| `-TypedefType 0x55a54b4d4c60 '__time_t' sugar
|   |-Typedef 0x55a54b4d2888 '__time_t'
|   `-BuiltinType 0x55a54b46af30 'long'
|-RecordDecl 0x55a54b4d4cf0 <line:85:1, line:89:3> line:85:8 struct timespec definition
| |-FieldDecl 0x55a54b4d4da8 <line:87:5, col:14> col:14 tv_sec '__time_t':'long'
| `-FieldDecl 0x55a54b4d4e38 <line:88:5, col:23> col:23 tv_nsec '__syscall_slong_t':'long'
|-TypedefDecl 0x55a54b4d4ec8 <line:90:1, col:17> col:17 referenced pid_t '__pid_t':'int'
| `-TypedefType 0x55a54b4d4e90 '__pid_t' sugar
|   |-Typedef 0x55a54b4d23e8 '__pid_t'
|   `-BuiltinType 0x55a54b46af10 'int'
|-RecordDecl 0x55a54b4d4f20 <line:91:1, line:94:3> line:91:8 struct sched_param definition
| `-FieldDecl 0x55a54b4d4fe0 <line:93:5, col:9> col:9 __sched_priority 'int'
|-RecordDecl 0x55a54b4d5030 <line:97:1, line:100:3> line:97:8 struct __sched_param definition
| `-FieldDecl 0x55a54b4d50f0 <line:99:5, col:9> col:9 __sched_priority 'int'
|-TypedefDecl 0x55a54b4d5158 <line:101:1, col:27> col:27 referenced __cpu_mask 'unsigned long'
| `-BuiltinType 0x55a54b46afd0 'unsigned long'
|-RecordDecl 0x55a54b4d51b0 <line:102:9, line:105:1> line:102:9 struct definition
| `-FieldDecl 0x55a54b4d6480 <line:104:3, col:53> col:14 __bits '__cpu_mask [64]'
|-TypedefDecl 0x55a54b4d6530 <line:102:1, line:105:3> col:3 referenced cpu_set_t 'struct cpu_set_t':'cpu_set_t'
| `-ElaboratedType 0x55a54b4d64d0 'struct cpu_set_t' sugar
|   `-RecordType 0x55a54b4d5230 'cpu_set_t'
|     `-Record 0x55a54b4d51b0 ''
|-FunctionDecl 0x55a54b4d6808 <line:107:1, line:108:42> line:107:12 __sched_cpucount 'int (size_t, const cpu_set_t *)' extern
| |-ParmVarDecl 0x55a54b4d65d8 <col:30, col:37> col:37 __setsize 'size_t':'unsigned long'
| |-ParmVarDecl 0x55a54b4d66e0 <col:48, col:65> col:65 __setp 'const cpu_set_t *'
| `-NoThrowAttr 0x55a54b4d68b8 <line:108:19>
|-FunctionDecl 0x55a54b4d6a90 <line:109:1, col:92> col:19 __sched_cpualloc 'cpu_set_t *(size_t)' extern
| |-ParmVarDecl 0x55a54b4d6920 <col:37, col:44> col:44 __count 'size_t':'unsigned long'
| `-NoThrowAttr 0x55a54b4d6b38 <col:69>
|-FunctionDecl 0x55a54b4d6cb0 <line:110:1, col:87> col:13 __sched_cpufree 'void (cpu_set_t *)' extern
| |-ParmVarDecl 0x55a54b4d6ba0 <col:30, col:41> col:41 __set 'cpu_set_t *'
| `-NoThrowAttr 0x55a54b4d6d58 <col:64>
|-FunctionDecl 0x55a54b4d7018 <line:113:1, line:114:45> line:113:12 sched_setparam 'int (__pid_t, const struct sched_param *)' extern
| |-ParmVarDecl 0x55a54b4d6dc0 <col:28, col:36> col:36 __pid '__pid_t':'int'
| |-ParmVarDecl 0x55a54b4d6ef8 <col:43, col:69> col:69 __param 'const struct sched_param *'
| `-NoThrowAttr 0x55a54b4d70c8 <line:114:22>
|-FunctionDecl 0x55a54b4d73b0 <line:115:1, col:111> col:12 sched_getparam 'int (__pid_t, struct sched_param *)' extern
| |-ParmVarDecl 0x55a54b4d7130 <col:28, col:36> col:36 __pid '__pid_t':'int'
| |-ParmVarDecl 0x55a54b4d7228 <col:43, col:63> col:63 __param 'struct sched_param *'
| `-NoThrowAttr 0x55a54b4d7460 <col:88>
|-FunctionDecl 0x55a54b4d7718 <line:116:1, line:117:85> line:116:12 sched_setscheduler 'int (__pid_t, int, const struct sched_param *)' extern
| |-ParmVarDecl 0x55a54b4d74c8 <col:32, col:40> col:40 __pid '__pid_t':'int'
| |-ParmVarDecl 0x55a54b4d7548 <col:47, col:51> col:51 __policy 'int'
| |-ParmVarDecl 0x55a54b4d75d8 <line:117:11, col:37> col:37 __param 'const struct sched_param *'
| `-NoThrowAttr 0x55a54b4d77d0 <col:62>
|-FunctionDecl 0x55a54b4d7948 <line:118:1, col:86> col:12 sched_getscheduler 'int (__pid_t)' extern
| |-ParmVarDecl 0x55a54b4d7838 <col:32, col:40> col:40 __pid '__pid_t':'int'
| `-NoThrowAttr 0x55a54b4d79f0 <col:63>
|-FunctionDecl 0x55a54b4d7b18 <line:119:1, col:70> col:12 sched_yield 'int (void)' extern
| `-NoThrowAttr 0x55a54b4d7bb8 <col:47>
|-FunctionDecl 0x55a54b4d7cc0 <line:120:1, col:92> col:12 sched_get_priority_max 'int (int)' extern
| |-ParmVarDecl 0x55a54b4d7c28 <col:36, col:40> col:40 __algorithm 'int'
| `-NoThrowAttr 0x55a54b4d7d68 <col:69>
|-FunctionDecl 0x55a54b4d7e70 <line:121:1, col:92> col:12 sched_get_priority_min 'int (int)' extern
| |-ParmVarDecl 0x55a54b4d7dd8 <col:36, col:40> col:40 __algorithm 'int'
| `-NoThrowAttr 0x55a54b4d7f18 <col:69>
|-FunctionDecl 0x55a54b4d81d8 <line:122:1, col:111> col:12 sched_rr_get_interval 'int (__pid_t, struct timespec *)' extern
| |-ParmVarDecl 0x55a54b4d7f80 <col:35, col:43> col:43 __pid '__pid_t':'int'
| |-ParmVarDecl 0x55a54b4d80b8 <col:50, col:67> col:67 __t 'struct timespec *'
| `-NoThrowAttr 0x55a54b4d8288 <col:88>
|-TypedefDecl 0x55a54b4d8318 <line:126:1, col:19> col:19 referenced clock_t '__clock_t':'long'
| `-TypedefType 0x55a54b4d82e0 '__clock_t' sugar
|   |-Typedef 0x55a54b4d26c8 '__clock_t'
|   `-BuiltinType 0x55a54b46af30 'long'
|-TypedefDecl 0x55a54b4d83c0 <line:129:1, col:21> col:21 referenced clockid_t '__clockid_t':'int'
| `-TypedefType 0x55a54b4d8370 '__clockid_t' sugar
|   |-Typedef 0x55a54b4d2ab8 '__clockid_t'
|   `-BuiltinType 0x55a54b46af10 'int'
|-TypedefDecl 0x55a54b4d8458 <line:130:1, col:19> col:19 referenced timer_t '__timer_t':'void *'
| `-TypedefType 0x55a54b4d8420 '__timer_t' sugar
|   |-Typedef 0x55a54b4d2b28 '__timer_t'
|   `-PointerType 0x55a54b46b630 'void *'
|     `-BuiltinType 0x55a54b46ae70 'void'
|-RecordDecl 0x55a54b4d84b0 <line:132:1, line:145:1> line:132:8 struct tm definition
| |-FieldDecl 0x55a54b4d8570 <line:134:3, col:7> col:7 tm_sec 'int'
| |-FieldDecl 0x55a54b4d85d8 <line:135:3, col:7> col:7 tm_min 'int'
| |-FieldDecl 0x55a54b4d8640 <line:136:3, col:7> col:7 tm_hour 'int'
| |-FieldDecl 0x55a54b4d86a8 <line:137:3, col:7> col:7 tm_mday 'int'
| |-FieldDecl 0x55a54b4d8710 <line:138:3, col:7> col:7 tm_mon 'int'
| |-FieldDecl 0x55a54b4d8778 <line:139:3, col:7> col:7 tm_year 'int'
| |-FieldDecl 0x55a54b4d87e0 <line:140:3, col:7> col:7 tm_wday 'int'
| |-FieldDecl 0x55a54b4d8848 <line:141:3, col:7> col:7 tm_yday 'int'
| |-FieldDecl 0x55a54b4d88b0 <line:142:3, col:7> col:7 tm_isdst 'int'
| |-FieldDecl 0x55a54b4d8918 <line:143:3, col:12> col:12 tm_gmtoff 'long'
| `-FieldDecl 0x55a54b4d8980 <line:144:3, col:15> col:15 tm_zone 'const char *'
|-RecordDecl 0x55a54b4d89d0 <line:148:1, line:152:3> line:148:8 struct itimerspec definition
| |-FieldDecl 0x55a54b4d8a98 <line:150:5, col:21> col:21 it_interval 'struct timespec':'struct timespec'
| `-FieldDecl 0x55a54b4d8b08 <line:151:5, col:21> col:21 it_value 'struct timespec':'struct timespec'
|-RecordDecl 0x55a54b4d8bb0 <line:153:1, col:8> col:8 struct sigevent
|-FunctionDecl 0x55a54b4d8d80 <line:155:1, col:68> col:16 clock 'clock_t (void)' extern
| `-NoThrowAttr 0x55a54b4d8e20 <col:45>
|-FunctionDecl 0x55a54b4d9000 <line:156:1, col:77> col:15 time 'time_t (time_t *)' extern
| |-ParmVarDecl 0x55a54b4d8ef0 <col:21, col:29> col:29 __timer 'time_t *'
| `-NoThrowAttr 0x55a54b4d90a8 <col:54>
|-FunctionDecl 0x55a54b4d92a8 <line:157:1, line:158:73> line:157:15 difftime 'double (time_t, time_t)' extern
| |-ParmVarDecl 0x55a54b4d9110 <col:25, col:32> col:32 __time1 'time_t':'long'
| |-ParmVarDecl 0x55a54b4d9188 <col:41, col:48> col:48 __time0 'time_t':'long'
| |-NoThrowAttr 0x55a54b4d9358 <line:158:22>
| `-ConstAttr 0x55a54b4d9ff0 <col:63>
|-FunctionDecl 0x55a54b4da1f0 <line:159:1, col:79> col:15 mktime 'time_t (struct tm *)' extern
| |-ParmVarDecl 0x55a54b4da0e8 <col:23, col:34> col:34 __tp 'struct tm *'
| `-NoThrowAttr 0x55a54b4da298 <col:56>
|-FunctionDecl 0x55a54b4da640 <line:160:1, line:162:77> line:160:15 strftime 'size_t (char *restrict, size_t, const char *restrict, const struct tm *restrict)' extern
| |-ParmVarDecl 0x55a54b4da308 <col:25, col:42> col:42 __s 'char *restrict'
| |-ParmVarDecl 0x55a54b4da380 <col:47, col:54> col:54 __maxsize 'size_t':'unsigned long'
| |-ParmVarDecl 0x55a54b4da400 <line:161:4, col:27> col:27 __format 'const char *restrict'
| |-ParmVarDecl 0x55a54b4da4f8 <line:162:4, col:32> col:32 __tp 'const struct tm *restrict'
| `-NoThrowAttr 0x55a54b4da700 <col:54>
|-RecordDecl 0x55a54b4da758 <line:164:9, line:171:1> line:164:16 struct __locale_struct definition
| |-RecordDecl 0x55a54b4da808 parent 0x55a54b46ae18 <line:166:3, col:10> col:10 struct __locale_data
| |-FieldDecl 0x55a54b4daa68 <col:3, col:37> col:25 __locales 'struct __locale_data *[13]'
| |-FieldDecl 0x55a54b4dab08 <line:167:3, col:29> col:29 __ctype_b 'const unsigned short *'
| |-FieldDecl 0x55a54b4dab70 <line:168:3, col:14> col:14 __ctype_tolower 'const int *'
| |-FieldDecl 0x55a54b4dabd8 <line:169:3, col:14> col:14 __ctype_toupper 'const int *'
| `-FieldDecl 0x55a54b4dacc8 <line:170:3, col:25> col:15 __names 'const char *[13]'
|-TypedefDecl 0x55a54b4dade8 <line:164:1, line:171:4> col:4 referenced __locale_t 'struct __locale_struct *'
| `-PointerType 0x55a54b4dad90 'struct __locale_struct *'
|   `-ElaboratedType 0x55a54b4dad20 'struct __locale_struct' sugar
|     `-RecordType 0x55a54b4da7e0 'struct __locale_struct'
|       `-Record 0x55a54b4da758 '__locale_struct'
|-TypedefDecl 0x55a54b4dae98 <line:172:1, col:20> col:20 locale_t '__locale_t':'struct __locale_struct *'
| `-TypedefType 0x55a54b4dae60 '__locale_t' sugar
|   |-Typedef 0x55a54b4dade8 '__locale_t'
|   `-PointerType 0x55a54b4dad90 'struct __locale_struct *'
|     `-ElaboratedType 0x55a54b4dad20 'struct __locale_struct' sugar
|       `-RecordType 0x55a54b4da7e0 'struct __locale_struct'
|         `-Record 0x55a54b4da758 '__locale_struct'
|-FunctionDecl 0x55a54b4dc2a0 <line:173:1, line:176:63> line:173:15 strftime_l 'size_t (char *restrict, size_t, const char *restrict, const struct tm *restrict, __locale_t)' extern
| |-ParmVarDecl 0x55a54b4daf08 <col:27, col:44> col:44 __s 'char *restrict'
| |-ParmVarDecl 0x55a54b4daf80 <col:49, col:56> col:56 __maxsize 'size_t':'unsigned long'
| |-ParmVarDecl 0x55a54b4dc028 <line:174:6, col:29> col:29 __format 'const char *restrict'
| |-ParmVarDecl 0x55a54b4dc0b8 <line:175:6, col:34> col:34 __tp 'const struct tm *restrict'
| |-ParmVarDecl 0x55a54b4dc130 <line:176:6, col:17> col:17 __loc '__locale_t':'struct __locale_struct *'
| `-NoThrowAttr 0x55a54b4dc368 <col:40>
|-FunctionDecl 0x55a54b4dc558 <line:178:1, col:89> col:19 gmtime 'struct tm *(const time_t *)' extern
| |-ParmVarDecl 0x55a54b4dc430 <col:27, col:41> col:41 __timer 'const time_t *'
| `-NoThrowAttr 0x55a54b4dc600 <col:66>
|-FunctionDecl 0x55a54b4dc710 <line:179:1, col:92> col:19 localtime 'struct tm *(const time_t *)' extern
| |-ParmVarDecl 0x55a54b4dc668 <col:30, col:44> col:44 __timer 'const time_t *'
| `-NoThrowAttr 0x55a54b4dc7b8 <col:69>
|-FunctionDecl 0x55a54b4dc9e8 <line:181:1, line:182:75> line:181:19 gmtime_r 'struct tm *(const time_t *restrict, struct tm *restrict)' extern
| |-ParmVarDecl 0x55a54b4dc820 <col:29, col:54> col:54 __timer 'const time_t *restrict'
| |-ParmVarDecl 0x55a54b4dc8b0 <line:182:8, col:30> col:30 __tp 'struct tm *restrict'
| `-NoThrowAttr 0x55a54b4dca98 <col:52>
|-FunctionDecl 0x55a54b4dcc40 <line:183:1, line:184:78> line:183:19 localtime_r 'struct tm *(const time_t *restrict, struct tm *restrict)' extern
| |-ParmVarDecl 0x55a54b4dcb00 <col:32, col:57> col:57 __timer 'const time_t *restrict'
| |-ParmVarDecl 0x55a54b4dcb90 <line:184:11, col:33> col:33 __tp 'struct tm *restrict'
| `-NoThrowAttr 0x55a54b4dccf0 <col:55>
|-FunctionDecl 0x55a54b4dce88 <line:186:1, col:85> col:14 asctime 'char *(const struct tm *)' extern
| |-ParmVarDecl 0x55a54b4dcd70 <col:23, col:40> col:40 __tp 'const struct tm *'
| `-NoThrowAttr 0x55a54b4dcf30 <col:62>
|-FunctionDecl 0x55a54b4dd168 <line:187:1, col:83> col:14 ctime 'char *(const time_t *)' extern
| |-ParmVarDecl 0x55a54b4dcf98 <col:21, col:35> col:35 __timer 'const time_t *'
| `-NoThrowAttr 0x55a54b4dd210 <col:60>
|-FunctionDecl 0x55a54b4dd438 <line:189:1, line:190:67> line:189:14 asctime_r 'char *(const struct tm *restrict, char *restrict)' extern
| |-ParmVarDecl 0x55a54b4dd290 <col:25, col:53> col:53 __tp 'const struct tm *restrict'
| |-ParmVarDecl 0x55a54b4dd310 <line:190:4, col:21> col:21 __buf 'char *restrict'
| `-NoThrowAttr 0x55a54b4dd4e8 <col:44>
|-FunctionDecl 0x55a54b4dd6f8 <line:191:1, line:192:72> line:191:14 ctime_r 'char *(const time_t *restrict, char *restrict)' extern
| |-ParmVarDecl 0x55a54b4dd550 <col:23, col:48> col:48 __timer 'const time_t *restrict'
| |-ParmVarDecl 0x55a54b4dd5d0 <line:192:9, col:26> col:26 __buf 'char *restrict'
| `-NoThrowAttr 0x55a54b4dd7a8 <col:49>
|-VarDecl 0x55a54b4dd8a8 <line:193:1, col:24> col:14 __tzname 'char *[2]' extern
|-VarDecl 0x55a54b4dd928 <line:194:1, col:12> col:12 __daylight 'int' extern
|-VarDecl 0x55a54b4dd9a8 <line:195:1, col:17> col:17 __timezone 'long' extern
|-VarDecl 0x55a54b4dda70 <line:196:1, col:22> col:14 tzname 'char *[2]' extern
|-FunctionDecl 0x55a54b4ddba0 <line:197:1, col:65> col:13 tzset 'void (void)' extern
| `-NoThrowAttr 0x55a54b4ddc40 <col:42>
|-VarDecl 0x55a54b4ddcb0 <line:198:1, col:12> col:12 daylight 'int' extern
|-VarDecl 0x55a54b4ddd30 <line:199:1, col:17> col:17 timezone 'long' extern
|-FunctionDecl 0x55a54b4ddeb8 <line:200:1, col:80> col:12 stime 'int (const time_t *)' extern
| |-ParmVarDecl 0x55a54b4ddda8 <col:19, col:33> col:33 __when 'const time_t *'
| `-NoThrowAttr 0x55a54b4ddf60 <col:57>
|-FunctionDecl 0x55a54b4de0d0 <line:201:1, col:79> col:15 timegm 'time_t (struct tm *)' extern
| |-ParmVarDecl 0x55a54b4ddfe0 <col:23, col:34> col:34 __tp 'struct tm *'
| `-NoThrowAttr 0x55a54b4de178 <col:56>
|-FunctionDecl 0x55a54b4de288 <line:202:1, col:82> col:15 timelocal 'time_t (struct tm *)' extern
| |-ParmVarDecl 0x55a54b4de1f8 <col:26, col:37> col:37 __tp 'struct tm *'
| `-NoThrowAttr 0x55a54b4de330 <col:59>
|-FunctionDecl 0x55a54b4de438 <line:203:1, col:99> col:12 dysize 'int (int)' extern
| |-ParmVarDecl 0x55a54b4de3a0 <col:20, col:24> col:24 __year 'int'
| |-NoThrowAttr 0x55a54b4de4e0 <col:48>
| `-ConstAttr 0x55a54b4de538 <col:89>
|-FunctionDecl 0x55a54b4de798 <line:204:1, line:205:37> line:204:12 nanosleep 'int (const struct timespec *, struct timespec *)' extern
| |-ParmVarDecl 0x55a54b4de5e8 <col:23, col:46> col:46 __requested_time 'const struct timespec *'
| `-ParmVarDecl 0x55a54b4de678 <line:205:9, col:26> col:26 __remaining 'struct timespec *'
|-FunctionDecl 0x55a54b4de9f8 <line:206:1, col:111> col:12 clock_getres 'int (clockid_t, struct timespec *)' extern
| |-ParmVarDecl 0x55a54b4de888 <col:26, col:36> col:36 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x55a54b4de918 <col:48, col:65> col:65 __res 'struct timespec *'
| `-NoThrowAttr 0x55a54b4deaa8 <col:88>
|-FunctionDecl 0x55a54b4dec40 <line:207:1, col:111> col:12 clock_gettime 'int (clockid_t, struct timespec *)' extern
| |-ParmVarDecl 0x55a54b4deb10 <col:27, col:37> col:37 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x55a54b4deba0 <col:49, col:66> col:66 __tp 'struct timespec *'
| `-NoThrowAttr 0x55a54b4decf0 <col:88>
|-FunctionDecl 0x55a54b4def08 <line:208:1, line:209:45> line:208:12 clock_settime 'int (clockid_t, const struct timespec *)' extern
| |-ParmVarDecl 0x55a54b4ded58 <col:27, col:37> col:37 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x55a54b4dede8 <col:49, col:72> col:72 __tp 'const struct timespec *'
| `-NoThrowAttr 0x55a54b4defb8 <line:209:22>
|-FunctionDecl 0x55a54b4df358 <line:210:1, line:212:30> line:210:12 clock_nanosleep 'int (clockid_t, int, const struct timespec *, struct timespec *)' extern
| |-ParmVarDecl 0x55a54b4df020 <col:29, col:39> col:39 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x55a54b4df0e0 <col:51, col:55> col:55 __flags 'int'
| |-ParmVarDecl 0x55a54b4df170 <line:211:8, col:31> col:31 __req 'const struct timespec *'
| `-ParmVarDecl 0x55a54b4df200 <line:212:8, col:25> col:25 __rem 'struct timespec *'
|-FunctionDecl 0x55a54b4df658 <line:213:1, col:108> col:12 clock_getcpuclockid 'int (pid_t, clockid_t *)' extern
| |-ParmVarDecl 0x55a54b4df458 <col:33, col:39> col:39 __pid 'pid_t':'int'
| |-ParmVarDecl 0x55a54b4df530 <col:46, col:57> col:57 __clock_id 'clockid_t *'
| `-NoThrowAttr 0x55a54b4df708 <col:85>
|-FunctionDecl 0x55a54b4dfaf8 <line:214:1, line:216:75> line:214:12 timer_create 'int (clockid_t, struct sigevent *restrict, timer_t *restrict)' extern
| |-ParmVarDecl 0x55a54b4df770 <col:26, col:36> col:36 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x55a54b4df8a8 <line:215:5, col:33> col:33 __evp 'struct sigevent *restrict'
| |-ParmVarDecl 0x55a54b4df9b0 <line:216:5, col:25> col:25 __timerid 'timer_t *restrict'
| `-NoThrowAttr 0x55a54b4dfbb0 <col:52>
|-FunctionDecl 0x55a54b4dfd28 <line:217:1, col:84> col:12 timer_delete 'int (timer_t)' extern
| |-ParmVarDecl 0x55a54b4dfc18 <col:26, col:34> col:34 __timerid 'timer_t':'void *'
| `-NoThrowAttr 0x55a54b4dfdd0 <col:61>
|-FunctionDecl 0x55a54b4e0248 <line:218:1, line:220:85> line:218:12 timer_settime 'int (timer_t, int, const struct itimerspec *restrict, struct itimerspec *restrict)' extern
| |-ParmVarDecl 0x55a54b4dfe38 <col:27, col:35> col:35 __timerid 'timer_t':'void *'
| |-ParmVarDecl 0x55a54b4dfeb8 <col:46, col:50> col:50 __flags 'int'
| |-ParmVarDecl 0x55a54b4dffe8 <line:219:6, col:42> col:42 __value 'const struct itimerspec *restrict'
| |-ParmVarDecl 0x55a54b4e00f0 <line:220:6, col:36> col:36 __ovalue 'struct itimerspec *restrict'
| `-NoThrowAttr 0x55a54b4e0308 <col:62>
|-FunctionDecl 0x55a54b4e0528 <line:221:1, line:222:45> line:221:12 timer_gettime 'int (timer_t, struct itimerspec *)' extern
| |-ParmVarDecl 0x55a54b4e0370 <col:27, col:35> col:35 __timerid 'timer_t':'void *'
| |-ParmVarDecl 0x55a54b4e0400 <col:46, col:65> col:65 __value 'struct itimerspec *'
| `-NoThrowAttr 0x55a54b4e05d8 <line:222:22>
|-FunctionDecl 0x55a54b4e06d8 <line:223:1, col:88> col:12 timer_getoverrun 'int (timer_t)' extern
| |-ParmVarDecl 0x55a54b4e0640 <col:30, col:38> col:38 __timerid 'timer_t':'void *'
| `-NoThrowAttr 0x55a54b4e0780 <col:65>
|-TypedefDecl 0x55a54b4e07f0 <line:225:1, col:27> col:27 referenced pthread_t 'unsigned long'
| `-BuiltinType 0x55a54b46afd0 'unsigned long'
|-RecordDecl 0x55a54b4e0848 <line:226:1, line:230:1> line:226:7 union pthread_attr_t definition
| |-FieldDecl 0x55a54b4e0990 <line:228:3, col:17> col:8 __size 'char [56]'
| `-FieldDecl 0x55a54b4e09f8 <line:229:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x55a54b4e0aa8 <line:231:1, col:30> col:30 referenced pthread_attr_t 'union pthread_attr_t':'union pthread_attr_t'
| `-ElaboratedType 0x55a54b4e0a50 'union pthread_attr_t' sugar
|   `-RecordType 0x55a54b4e08d0 'union pthread_attr_t'
|     `-Record 0x55a54b4e0848 'pthread_attr_t'
|-RecordDecl 0x55a54b4e0b00 <line:232:9, line:236:1> line:232:16 struct __pthread_internal_list definition
| |-FieldDecl 0x55a54b4e0c78 <line:234:3, col:35> col:35 __prev 'struct __pthread_internal_list *'
| `-FieldDecl 0x55a54b4e0cf0 <line:235:3, col:35> col:35 __next 'struct __pthread_internal_list *'
|-TypedefDecl 0x55a54b4e0da0 <line:232:1, line:236:3> col:3 referenced __pthread_list_t 'struct __pthread_internal_list':'struct __pthread_internal_list'
| `-ElaboratedType 0x55a54b4e0d40 'struct __pthread_internal_list' sugar
|   `-RecordType 0x55a54b4e0b80 'struct __pthread_internal_list'
|     `-Record 0x55a54b4e0b00 '__pthread_internal_list'
|-RecordDecl 0x55a54b4e0e10 <line:237:9, line:251:1> line:237:9 union definition
| |-RecordDecl 0x55a54b4e0eb8 parent 0x55a54b46ae18 <line:239:3, line:248:3> line:239:10 struct __pthread_mutex_s definition
| | |-FieldDecl 0x55a54b4e0f90 <line:241:5, col:9> col:9 __lock 'int'
| | |-FieldDecl 0x55a54b4e0ff8 <line:242:5, col:18> col:18 __count 'unsigned int'
| | |-FieldDecl 0x55a54b4e1060 <line:243:5, col:9> col:9 __owner 'int'
| | |-FieldDecl 0x55a54b4e5110 <line:244:5, col:18> col:18 __nusers 'unsigned int'
| | |-FieldDecl 0x55a54b4e5178 <line:245:5, col:9> col:9 __kind 'int'
| | |-FieldDecl 0x55a54b4e51e0 <line:246:5, col:9> col:9 __spins 'int'
| | `-FieldDecl 0x55a54b4e5268 <line:247:5, col:22> col:22 __list '__pthread_list_t':'struct __pthread_internal_list'
| |-FieldDecl 0x55a54b4e5320 <line:239:3, line:248:5> col:5 __data 'struct __pthread_mutex_s':'struct __pthread_mutex_s'
| |-FieldDecl 0x55a54b4e5410 <line:249:3, col:17> col:8 __size 'char [40]'
| `-FieldDecl 0x55a54b4e5478 <line:250:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x55a54b4e5600 <line:237:1, line:251:3> col:3 referenced pthread_mutex_t 'union pthread_mutex_t':'pthread_mutex_t'
| `-ElaboratedType 0x55a54b4e55a0 'union pthread_mutex_t' sugar
|   `-RecordType 0x55a54b4e0e90 'pthread_mutex_t'
|     `-Record 0x55a54b4e0e10 ''
|-RecordDecl 0x55a54b4e5670 <line:252:9, line:256:1> line:252:9 union definition
| |-FieldDecl 0x55a54b4e57b0 <line:254:3, col:16> col:8 __size 'char [4]'
| `-FieldDecl 0x55a54b4e5818 <line:255:3, col:7> col:7 __align 'int'
|-TypedefDecl 0x55a54b4e58d0 <line:252:1, line:256:3> col:3 referenced pthread_mutexattr_t 'union pthread_mutexattr_t':'pthread_mutexattr_t'
| `-ElaboratedType 0x55a54b4e5870 'union pthread_mutexattr_t' sugar
|   `-RecordType 0x55a54b4e56f0 'pthread_mutexattr_t'
|     `-Record 0x55a54b4e5670 ''
|-RecordDecl 0x55a54b4e5940 <line:257:9, line:272:1> line:257:9 union definition
| |-RecordDecl 0x55a54b4e59e8 <line:259:3, line:269:3> line:259:3 struct definition
| | |-FieldDecl 0x55a54b4e5ab0 <line:261:5, col:9> col:9 __lock 'int'
| | |-FieldDecl 0x55a54b4e5b18 <line:262:5, col:18> col:18 __futex 'unsigned int'
| | |-FieldDecl 0x55a54b4e5b80 <line:263:19, col:42> col:42 __total_seq 'unsigned long long'
| | |-FieldDecl 0x55a54b4e5be8 <line:264:19, col:42> col:42 __wakeup_seq 'unsigned long long'
| | |-FieldDecl 0x55a54b4e5c50 <line:265:19, col:42> col:42 __woken_seq 'unsigned long long'
| | |-FieldDecl 0x55a54b4e5cb8 <line:266:5, col:11> col:11 __mutex 'void *'
| | |-FieldDecl 0x55a54b4e5d20 <line:267:5, col:18> col:18 __nwaiters 'unsigned int'
| | `-FieldDecl 0x55a54b4e5d88 <line:268:5, col:18> col:18 __broadcast_seq 'unsigned int'
| |-FieldDecl 0x55a54b4e5e40 <line:259:3, line:269:5> col:5 __data 'struct (anonymous struct at ./split_6/safe009_rmo.oepc_false-unreach-call.i:259:3)':'struct pthread_cond_t::(anonymous at ./split_6/safe009_rmo.oepc_false-unreach-call.i:259:3)'
| |-FieldDecl 0x55a54b4e5f30 <line:270:3, col:17> col:8 __size 'char [48]'
| `-FieldDecl 0x55a54b4e5f98 <line:271:17, col:31> col:31 __align 'long long'
|-TypedefDecl 0x55a54b4e7130 <line:257:1, line:272:3> col:3 referenced pthread_cond_t 'union pthread_cond_t':'pthread_cond_t'
| `-ElaboratedType 0x55a54b4e6070 'union pthread_cond_t' sugar
|   `-RecordType 0x55a54b4e59c0 'pthread_cond_t'
|     `-Record 0x55a54b4e5940 ''
|-RecordDecl 0x55a54b4e71a0 <line:273:9, line:277:1> line:273:9 union definition
| |-FieldDecl 0x55a54b4e72a0 <line:275:3, col:16> col:8 __size 'char [4]'
| `-FieldDecl 0x55a54b4e7308 <line:276:3, col:7> col:7 __align 'int'
|-TypedefDecl 0x55a54b4e73c0 <line:273:1, line:277:3> col:3 referenced pthread_condattr_t 'union pthread_condattr_t':'pthread_condattr_t'
| `-ElaboratedType 0x55a54b4e7360 'union pthread_condattr_t' sugar
|   `-RecordType 0x55a54b4e7220 'pthread_condattr_t'
|     `-Record 0x55a54b4e71a0 ''
|-TypedefDecl 0x55a54b4e7448 <line:278:1, col:22> col:22 referenced pthread_key_t 'unsigned int'
| `-BuiltinType 0x55a54b46afb0 'unsigned int'
|-TypedefDecl 0x55a54b4e74b8 <line:279:1, col:13> col:13 referenced pthread_once_t 'int'
| `-BuiltinType 0x55a54b46af10 'int'
|-RecordDecl 0x55a54b4e7510 <line:280:9, line:298:1> line:280:9 union definition
| |-RecordDecl 0x55a54b4e75b8 <line:282:3, line:295:3> line:282:3 struct definition
| | |-FieldDecl 0x55a54b4e7680 <line:284:5, col:9> col:9 __lock 'int'
| | |-FieldDecl 0x55a54b4e76e8 <line:285:5, col:18> col:18 __nr_readers 'unsigned int'
| | |-FieldDecl 0x55a54b4e7750 <line:286:5, col:18> col:18 __readers_wakeup 'unsigned int'
| | |-FieldDecl 0x55a54b4e77b8 <line:287:5, col:18> col:18 __writer_wakeup 'unsigned int'
| | |-FieldDecl 0x55a54b4e7820 <line:288:5, col:18> col:18 __nr_readers_queued 'unsigned int'
| | |-FieldDecl 0x55a54b4e7888 <line:289:5, col:18> col:18 __nr_writers_queued 'unsigned int'
| | |-FieldDecl 0x55a54b4e78f0 <line:290:5, col:9> col:9 __writer 'int'
| | |-FieldDecl 0x55a54b4e7958 <line:291:5, col:9> col:9 __shared 'int'
| | |-FieldDecl 0x55a54b4e79c0 <line:292:5, col:23> col:23 __pad1 'unsigned long'
| | |-FieldDecl 0x55a54b4e7a28 <line:293:5, col:23> col:23 __pad2 'unsigned long'
| | `-FieldDecl 0x55a54b4e7a90 <line:294:5, col:18> col:18 __flags 'unsigned int'
| |-FieldDecl 0x55a54b4e7b40 <line:282:3, line:295:5> col:5 __data 'struct (anonymous struct at ./split_6/safe009_rmo.oepc_false-unreach-call.i:282:3)':'struct pthread_rwlock_t::(anonymous at ./split_6/safe009_rmo.oepc_false-unreach-call.i:282:3)'
| |-FieldDecl 0x55a54b4e7be8 <line:296:3, col:17> col:8 __size 'char [56]'
| `-FieldDecl 0x55a54b4e7c50 <line:297:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x55a54b4e7da0 <line:280:1, line:298:3> col:3 referenced pthread_rwlock_t 'union pthread_rwlock_t':'pthread_rwlock_t'
| `-ElaboratedType 0x55a54b4e7d40 'union pthread_rwlock_t' sugar
|   `-RecordType 0x55a54b4e7590 'pthread_rwlock_t'
|     `-Record 0x55a54b4e7510 ''
|-RecordDecl 0x55a54b4e7e10 <line:299:9, line:303:1> line:299:9 union definition
| |-FieldDecl 0x55a54b4e7f50 <line:301:3, col:16> col:8 __size 'char [8]'
| `-FieldDecl 0x55a54b4e7fb8 <line:302:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x55a54b4e8070 <line:299:1, line:303:3> col:3 referenced pthread_rwlockattr_t 'union pthread_rwlockattr_t':'pthread_rwlockattr_t'
| `-ElaboratedType 0x55a54b4e8010 'union pthread_rwlockattr_t' sugar
|   `-RecordType 0x55a54b4e7e90 'pthread_rwlockattr_t'
|     `-Record 0x55a54b4e7e10 ''
|-TypedefDecl 0x55a54b4e9140 <line:304:1, col:22> col:22 referenced pthread_spinlock_t 'volatile int'
| `-QualType 0x55a54b46af14 'volatile int' volatile
|   `-BuiltinType 0x55a54b46af10 'int'
|-RecordDecl 0x55a54b4e9198 <line:305:9, line:309:1> line:305:9 union definition
| |-FieldDecl 0x55a54b4e92e0 <line:307:3, col:17> col:8 __size 'char [32]'
| `-FieldDecl 0x55a54b4e9348 <line:308:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x55a54b4e9400 <line:305:1, line:309:3> col:3 referenced pthread_barrier_t 'union pthread_barrier_t':'pthread_barrier_t'
| `-ElaboratedType 0x55a54b4e93a0 'union pthread_barrier_t' sugar
|   `-RecordType 0x55a54b4e9220 'pthread_barrier_t'
|     `-Record 0x55a54b4e9198 ''
|-RecordDecl 0x55a54b4e9470 <line:310:9, line:314:1> line:310:9 union definition
| |-FieldDecl 0x55a54b4e9570 <line:312:3, col:16> col:8 __size 'char [4]'
| `-FieldDecl 0x55a54b4e95d8 <line:313:3, col:7> col:7 __align 'int'
|-TypedefDecl 0x55a54b4e9690 <line:310:1, line:314:3> col:3 referenced pthread_barrierattr_t 'union pthread_barrierattr_t':'pthread_barrierattr_t'
| `-ElaboratedType 0x55a54b4e9630 'union pthread_barrierattr_t' sugar
|   `-RecordType 0x55a54b4e94f0 'pthread_barrierattr_t'
|     `-Record 0x55a54b4e9470 ''
|-TypedefDecl 0x55a54b4e97a8 <line:315:1, col:29> col:18 referenced __jmp_buf 'long [8]'
| `-ConstantArrayType 0x55a54b4e9740 'long [8]' 8 
|   `-BuiltinType 0x55a54b46af30 'long'
|-EnumDecl 0x55a54b4e9800 <line:316:1, line:320:1> line:316:1
| |-EnumConstantDecl 0x55a54b4e98c8 <line:318:3> col:3 PTHREAD_CREATE_JOINABLE 'int'
| `-EnumConstantDecl 0x55a54b4e9918 <line:319:3> col:3 PTHREAD_CREATE_DETACHED 'int'
|-EnumDecl 0x55a54b4e9968 <line:321:1, line:332:1> line:321:1
| |-EnumConstantDecl 0x55a54b4e9a38 <line:323:3> col:3 referenced PTHREAD_MUTEX_TIMED_NP 'int'
| |-EnumConstantDecl 0x55a54b4e9a88 <line:324:3> col:3 referenced PTHREAD_MUTEX_RECURSIVE_NP 'int'
| |-EnumConstantDecl 0x55a54b4e9ad8 <line:325:3> col:3 referenced PTHREAD_MUTEX_ERRORCHECK_NP 'int'
| |-EnumConstantDecl 0x55a54b4e9b28 <line:326:3> col:3 PTHREAD_MUTEX_ADAPTIVE_NP 'int'
| |-EnumConstantDecl 0x55a54b4e9bb0 <line:328:3, col:26> col:3 referenced PTHREAD_MUTEX_NORMAL 'int'
| | `-ConstantExpr 0x55a54b4e9b98 <col:26> 'int'
| |   `-DeclRefExpr 0x55a54b4e9b78 <col:26> 'int' EnumConstant 0x55a54b4e9a38 'PTHREAD_MUTEX_TIMED_NP' 'int'
| |-EnumConstantDecl 0x55a54b4e9c38 <line:329:3, col:29> col:3 PTHREAD_MUTEX_RECURSIVE 'int'
| | `-ConstantExpr 0x55a54b4e9c20 <col:29> 'int'
| |   `-DeclRefExpr 0x55a54b4e9c00 <col:29> 'int' EnumConstant 0x55a54b4e9a88 'PTHREAD_MUTEX_RECURSIVE_NP' 'int'
| |-EnumConstantDecl 0x55a54b4e9cc0 <line:330:3, col:30> col:3 PTHREAD_MUTEX_ERRORCHECK 'int'
| | `-ConstantExpr 0x55a54b4e9ca8 <col:30> 'int'
| |   `-DeclRefExpr 0x55a54b4e9c88 <col:30> 'int' EnumConstant 0x55a54b4e9ad8 'PTHREAD_MUTEX_ERRORCHECK_NP' 'int'
| `-EnumConstantDecl 0x55a54b4e9d48 <line:331:3, col:27> col:3 PTHREAD_MUTEX_DEFAULT 'int'
|   `-ConstantExpr 0x55a54b4e9d30 <col:27> 'int'
|     `-DeclRefExpr 0x55a54b4e9d10 <col:27> 'int' EnumConstant 0x55a54b4e9bb0 'PTHREAD_MUTEX_NORMAL' 'int'
|-EnumDecl 0x55a54b4e9d98 <line:333:1, line:339:1> line:333:1
| |-EnumConstantDecl 0x55a54b4e9e68 <line:335:3> col:3 referenced PTHREAD_MUTEX_STALLED 'int'
| |-EnumConstantDecl 0x55a54b4e9ef0 <line:336:3, col:30> col:3 PTHREAD_MUTEX_STALLED_NP 'int'
| | `-ConstantExpr 0x55a54b4e9ed8 <col:30> 'int'
| |   `-DeclRefExpr 0x55a54b4e9eb8 <col:30> 'int' EnumConstant 0x55a54b4e9e68 'PTHREAD_MUTEX_STALLED' 'int'
| |-EnumConstantDecl 0x55a54b4e9f40 <line:337:3> col:3 referenced PTHREAD_MUTEX_ROBUST 'int'
| `-EnumConstantDecl 0x55a54b4e9fc8 <line:338:3, col:29> col:3 PTHREAD_MUTEX_ROBUST_NP 'int'
|   `-ConstantExpr 0x55a54b4e9fb0 <col:29> 'int'
|     `-DeclRefExpr 0x55a54b4e9f90 <col:29> 'int' EnumConstant 0x55a54b4e9f40 'PTHREAD_MUTEX_ROBUST' 'int'
|-EnumDecl 0x55a54b4ea018 <line:340:1, line:345:1> line:340:1
| |-EnumConstantDecl 0x55a54b4ea0e8 <line:342:3> col:3 PTHREAD_PRIO_NONE 'int'
| |-EnumConstantDecl 0x55a54b4ea150 <line:343:3> col:3 PTHREAD_PRIO_INHERIT 'int'
| `-EnumConstantDecl 0x55a54b4ea1a0 <line:344:3> col:3 PTHREAD_PRIO_PROTECT 'int'
|-EnumDecl 0x55a54b4ea1f0 <line:346:1, line:352:1> line:346:1
| |-EnumConstantDecl 0x55a54b4ea2b8 <line:348:3> col:3 referenced PTHREAD_RWLOCK_PREFER_READER_NP 'int'
| |-EnumConstantDecl 0x55a54b4ea308 <line:349:3> col:3 PTHREAD_RWLOCK_PREFER_WRITER_NP 'int'
| |-EnumConstantDecl 0x55a54b4ea358 <line:350:3> col:3 PTHREAD_RWLOCK_PREFER_WRITER_NONRECURSIVE_NP 'int'
| `-EnumConstantDecl 0x55a54b4ea3e0 <line:351:3, col:31> col:3 PTHREAD_RWLOCK_DEFAULT_NP 'int'
|   `-ConstantExpr 0x55a54b4ea3c8 <col:31> 'int'
|     `-DeclRefExpr 0x55a54b4ea3a8 <col:31> 'int' EnumConstant 0x55a54b4ea2b8 'PTHREAD_RWLOCK_PREFER_READER_NP' 'int'
|-EnumDecl 0x55a54b4ea430 <line:353:1, line:357:1> line:353:1
| |-EnumConstantDecl 0x55a54b4ea4f8 <line:355:3> col:3 PTHREAD_INHERIT_SCHED 'int'
| `-EnumConstantDecl 0x55a54b4ea548 <line:356:3> col:3 PTHREAD_EXPLICIT_SCHED 'int'
|-EnumDecl 0x55a54b4ea598 <line:358:1, line:362:1> line:358:1
| |-EnumConstantDecl 0x55a54b4ea668 <line:360:3> col:3 PTHREAD_SCOPE_SYSTEM 'int'
| `-EnumConstantDecl 0x55a54b4ea6b8 <line:361:3> col:3 PTHREAD_SCOPE_PROCESS 'int'
|-EnumDecl 0x55a54b4ea708 <line:363:1, line:367:1> line:363:1
| |-EnumConstantDecl 0x55a54b4ea7d8 <line:365:3> col:3 PTHREAD_PROCESS_PRIVATE 'int'
| `-EnumConstantDecl 0x55a54b4ea828 <line:366:3> col:3 PTHREAD_PROCESS_SHARED 'int'
|-RecordDecl 0x55a54b4ea878 <line:368:1, line:374:1> line:368:8 struct _pthread_cleanup_buffer definition
| |-FieldDecl 0x55a54b4eaab8 <line:370:3, col:28> col:10 __routine 'void (*)(void *)'
| |-FieldDecl 0x55a54b4eab20 <line:371:3, col:9> col:9 __arg 'void *'
| |-FieldDecl 0x55a54b4eab88 <line:372:3, col:7> col:7 __canceltype 'int'
| `-FieldDecl 0x55a54b4eaca8 <line:373:3, col:35> col:35 __prev 'struct _pthread_cleanup_buffer *'
|-EnumDecl 0x55a54b4eacf8 <line:375:1, line:379:1> line:375:1
| |-EnumConstantDecl 0x55a54b4eadc8 <line:377:3> col:3 PTHREAD_CANCEL_ENABLE 'int'
| `-EnumConstantDecl 0x55a54b4eae18 <line:378:3> col:3 PTHREAD_CANCEL_DISABLE 'int'
|-EnumDecl 0x55a54b4eae68 <line:380:1, line:384:1> line:380:1
| |-EnumConstantDecl 0x55a54b4eaf38 <line:382:3> col:3 PTHREAD_CANCEL_DEFERRED 'int'
| `-EnumConstantDecl 0x55a54b4eaf88 <line:383:3> col:3 PTHREAD_CANCEL_ASYNCHRONOUS 'int'
|-FunctionDecl 0x55a54b4eb5b8 <line:386:1, line:389:96> line:386:12 used pthread_create 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' extern
| |-ParmVarDecl 0x55a54b4eb080 <col:28, col:50> col:50 __newthread 'pthread_t *restrict'
| |-ParmVarDecl 0x55a54b4eb1a0 <line:387:7, col:40> col:40 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x55a54b4eb3a0 <line:388:7, col:39> col:15 __start_routine 'void *(*)(void *)'
| |-ParmVarDecl 0x55a54b4eb420 <line:389:7, col:24> col:24 __arg 'void *restrict'
| |-NoThrowAttr 0x55a54b4eb678 <col:47>
| |-NonNullAttr 0x55a54b4eb6d0 <col:77, col:94> 1 3
| `-CallbackAttr 0x55a54b4eb708 <line:386:12> Implicit 2 3
|-FunctionDecl 0x55a54b4eb830 <line:390:1, col:72> col:13 pthread_exit 'void (void *) __attribute__((noreturn))' extern
| `-ParmVarDecl 0x55a54b4eb760 <col:27, col:33> col:33 __retval 'void *'
|-FunctionDecl 0x55a54b4eba88 <line:391:1, col:64> col:12 pthread_join 'int (pthread_t, void **)' extern
| |-ParmVarDecl 0x55a54b4eb8e8 <col:26, col:36> col:36 __th 'pthread_t':'unsigned long'
| `-ParmVarDecl 0x55a54b4eb968 <col:42, col:49> col:49 __thread_return 'void **'
|-FunctionDecl 0x55a54b4ebc58 <line:392:1, col:83> col:12 pthread_detach 'int (pthread_t)' extern
| |-ParmVarDecl 0x55a54b4ebb48 <col:28, col:38> col:38 __th 'pthread_t':'unsigned long'
| `-NoThrowAttr 0x55a54b4ebd00 <col:60>
|-FunctionDecl 0x55a54b4ebe50 <line:393:1, col:105> col:18 pthread_self 'pthread_t (void)' extern
| |-NoThrowAttr 0x55a54b4ebef0 <col:54>
| `-ConstAttr 0x55a54b4ebf48 <col:95>
|-FunctionDecl 0x55a54b4ed990 <line:394:1, line:395:70> line:394:12 pthread_equal 'int (pthread_t, pthread_t)' extern
| |-ParmVarDecl 0x55a54b4ebf80 <col:27, col:37> col:37 __thread1 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x55a54b4ebff8 <col:48, col:58> col:58 __thread2 'pthread_t':'unsigned long'
| |-NoThrowAttr 0x55a54b4eda40 <line:395:19>
| `-ConstAttr 0x55a54b4eda98 <col:60>
|-FunctionDecl 0x55a54b4edc68 <line:396:1, col:128> col:12 pthread_attr_init 'int (pthread_attr_t *)' extern
| |-ParmVarDecl 0x55a54b4edb30 <col:31, col:47> col:47 __attr 'pthread_attr_t *'
| |-NoThrowAttr 0x55a54b4edd10 <col:71>
| `-NonNullAttr 0x55a54b4edd68 <col:112, col:126> 1
|-FunctionDecl 0x55a54b4ede70 <line:397:1, line:398:79> line:397:12 pthread_attr_destroy 'int (pthread_attr_t *)' extern
| |-ParmVarDecl 0x55a54b4eddb8 <col:34, col:50> col:50 __attr 'pthread_attr_t *'
| |-NoThrowAttr 0x55a54b4edf18 <line:398:22>
| `-NonNullAttr 0x55a54b4edf70 <col:63, col:77> 1
|-FunctionDecl 0x55a54b4ee198 <line:399:1, line:401:82> line:399:12 pthread_attr_getdetachstate 'int (const pthread_attr_t *, int *)' extern
| |-ParmVarDecl 0x55a54b4edfb8 <col:41, col:63> col:63 __attr 'const pthread_attr_t *'
| |-ParmVarDecl 0x55a54b4ee038 <line:400:6, col:11> col:11 __detachstate 'int *'
| |-NoThrowAttr 0x55a54b4ee248 <line:401:22>
| `-NonNullAttr 0x55a54b4ee2a0 <col:63, col:80> 1 2
|-FunctionDecl 0x55a54b4ee4a8 <line:402:1, line:404:79> line:402:12 pthread_attr_setdetachstate 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x55a54b4ee2e8 <col:41, col:57> col:57 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x55a54b4ee368 <line:403:6, col:10> col:10 __detachstate 'int'
| |-NoThrowAttr 0x55a54b4ee558 <line:404:22>
| `-NonNullAttr 0x55a54b4ee5b0 <col:63, col:77> 1
|-FunctionDecl 0x55a54b4ee808 <line:405:1, line:407:82> line:405:12 pthread_attr_getguardsize 'int (const pthread_attr_t *, size_t *)' extern
| |-ParmVarDecl 0x55a54b4ee5f8 <col:39, col:61> col:61 __attr 'const pthread_attr_t *'
| |-ParmVarDecl 0x55a54b4ee6a0 <line:406:11, col:19> col:19 __guardsize 'size_t *'
| |-NoThrowAttr 0x55a54b4ee8b8 <line:407:22>
| `-NonNullAttr 0x55a54b4ee910 <col:63, col:80> 1 2
|-FunctionDecl 0x55a54b4efb68 <line:408:1, line:410:79> line:408:12 pthread_attr_setguardsize 'int (pthread_attr_t *, size_t)' extern
| |-ParmVarDecl 0x55a54b4ef9b0 <col:39, col:55> col:55 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x55a54b4efa28 <line:409:11, col:18> col:18 __guardsize 'size_t':'unsigned long'
| |-NoThrowAttr 0x55a54b4efc18 <line:410:22>
| `-NonNullAttr 0x55a54b4efc70 <col:63, col:77> 1
|-FunctionDecl 0x55a54b4efea8 <line:411:1, line:413:82> line:411:12 pthread_attr_getschedparam 'int (const pthread_attr_t *restrict, struct sched_param *restrict)' extern
| |-ParmVarDecl 0x55a54b4efcb8 <col:40, col:73> col:73 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x55a54b4efd48 <line:412:12, col:43> col:43 __param 'struct sched_param *restrict'
| |-NoThrowAttr 0x55a54b4eff58 <line:413:22>
| `-NonNullAttr 0x55a54b4effb0 <col:63, col:80> 1 2
|-FunctionDecl 0x55a54b4f01e8 <line:414:1, line:416:97> line:414:12 pthread_attr_setschedparam 'int (pthread_attr_t *restrict, const struct sched_param *restrict)' extern
| |-ParmVarDecl 0x55a54b4efff8 <col:40, col:67> col:67 __attr 'pthread_attr_t *restrict'
| |-ParmVarDecl 0x55a54b4f0088 <line:415:12, line:416:12> col:12 __param 'const struct sched_param *restrict'
| |-NoThrowAttr 0x55a54b4f0298 <col:37>
| `-NonNullAttr 0x55a54b4f02f0 <col:78, col:95> 1 2
|-FunctionDecl 0x55a54b4f04d8 <line:417:1, line:419:82> line:417:12 pthread_attr_getschedpolicy 'int (const pthread_attr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x55a54b4f0338 <col:41, line:418:6> col:6 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x55a54b4f03b8 <col:14, col:30> col:30 __policy 'int *restrict'
| |-NoThrowAttr 0x55a54b4f0588 <line:419:22>
| `-NonNullAttr 0x55a54b4f05e0 <col:63, col:80> 1 2
|-FunctionDecl 0x55a54b4f0768 <line:420:1, line:421:79> line:420:12 pthread_attr_setschedpolicy 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x55a54b4f0628 <col:41, col:57> col:57 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x55a54b4f06a8 <col:65, col:69> col:69 __policy 'int'
| |-NoThrowAttr 0x55a54b4f0818 <line:421:22>
| `-NonNullAttr 0x55a54b4f0870 <col:63, col:77> 1
|-FunctionDecl 0x55a54b4f0a38 <line:422:1, line:424:82> line:422:12 pthread_attr_getinheritsched 'int (const pthread_attr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x55a54b4f08b8 <col:42, line:423:7> col:7 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x55a54b4f0938 <col:15, col:31> col:31 __inherit 'int *restrict'
| |-NoThrowAttr 0x55a54b4f0ae8 <line:424:22>
| `-NonNullAttr 0x55a54b4f0b40 <col:63, col:80> 1 2
|-FunctionDecl 0x55a54b4f0cc8 <line:425:1, line:427:79> line:425:12 pthread_attr_setinheritsched 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x55a54b4f0b88 <col:42, col:58> col:58 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x55a54b4f0c08 <line:426:7, col:11> col:11 __inherit 'int'
| |-NoThrowAttr 0x55a54b4f0d78 <line:427:22>
| `-NonNullAttr 0x55a54b4f0dd0 <col:63, col:77> 1
|-FunctionDecl 0x55a54b4f0f78 <line:428:1, line:430:82> line:428:12 pthread_attr_getscope 'int (const pthread_attr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x55a54b4f0e18 <col:35, col:68> col:68 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x55a54b4f0e98 <line:429:7, col:23> col:23 __scope 'int *restrict'
| |-NoThrowAttr 0x55a54b4f1028 <line:430:22>
| `-NonNullAttr 0x55a54b4f1080 <col:63, col:80> 1 2
|-FunctionDecl 0x55a54b4f1208 <line:431:1, line:432:79> line:431:12 pthread_attr_setscope 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x55a54b4f10c8 <col:35, col:51> col:51 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x55a54b4f1148 <col:59, col:63> col:63 __scope 'int'
| |-NoThrowAttr 0x55a54b4f12b8 <line:432:22>
| `-NonNullAttr 0x55a54b4f1310 <col:63, col:77> 1
|-FunctionDecl 0x55a54b4f1538 <line:433:1, line:435:115> line:433:12 pthread_attr_getstackaddr 'int (const pthread_attr_t *restrict, void **restrict)' extern
| |-ParmVarDecl 0x55a54b4f1358 <col:39, line:434:11> col:11 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x55a54b4f13d8 <col:19, col:37> col:37 __stackaddr 'void **restrict'
| |-NoThrowAttr 0x55a54b4f15e8 <line:435:22>
| |-NonNullAttr 0x55a54b4f1640 <col:63, col:80> 1 2
| `-DeprecatedAttr 0x55a54b4f1678 <col:100> "" ""
|-FunctionDecl 0x55a54b4f1888 <line:436:1, line:438:112> line:436:12 pthread_attr_setstackaddr 'int (pthread_attr_t *, void *)' extern
| |-ParmVarDecl 0x55a54b4f16c8 <col:39, col:55> col:55 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x55a54b4f1748 <line:437:11, col:17> col:17 __stackaddr 'void *'
| |-NoThrowAttr 0x55a54b4f1938 <line:438:22>
| |-NonNullAttr 0x55a54b4f1990 <col:63, col:77> 1
| `-DeprecatedAttr 0x55a54b4f19d8 <col:97> "" ""
|-FunctionDecl 0x55a54b4f1bc8 <line:439:1, line:441:82> line:439:12 pthread_attr_getstacksize 'int (const pthread_attr_t *restrict, size_t *restrict)' extern
| |-ParmVarDecl 0x55a54b4f1a28 <col:39, line:440:11> col:11 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x55a54b4f1aa0 <col:19, col:38> col:38 __stacksize 'size_t *restrict'
| |-NoThrowAttr 0x55a54b4f1c78 <line:441:22>
| `-NonNullAttr 0x55a54b4f1cd0 <col:63, col:80> 1 2
|-FunctionDecl 0x55a54b4f1e50 <line:442:1, line:444:79> line:442:12 pthread_attr_setstacksize 'int (pthread_attr_t *, size_t)' extern
| |-ParmVarDecl 0x55a54b4f1d18 <col:39, col:55> col:55 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x55a54b4f1d90 <line:443:11, col:18> col:18 __stacksize 'size_t':'unsigned long'
| |-NoThrowAttr 0x55a54b4f1f00 <line:444:22>
| `-NonNullAttr 0x55a54b4f1f58 <col:63, col:77> 1
|-FunctionDecl 0x55a54b4f2248 <line:445:1, line:448:85> line:445:12 pthread_attr_getstack 'int (const pthread_attr_t *restrict, void **restrict, size_t *restrict)' extern
| |-ParmVarDecl 0x55a54b4f1fa8 <col:35, col:68> col:68 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x55a54b4f2028 <line:446:7, col:25> col:25 __stackaddr 'void **restrict'
| |-ParmVarDecl 0x55a54b4f20a0 <line:447:7, col:26> col:26 __stacksize 'size_t *restrict'
| |-NoThrowAttr 0x55a54b4f2300 <line:448:22>
| `-NonNullAttr 0x55a54b4f2358 <col:63, col:83> 1 2 3
|-FunctionDecl 0x55a54b4f2608 <line:449:1, line:450:100> line:449:12 pthread_attr_setstack 'int (pthread_attr_t *, void *, size_t)' extern
| |-ParmVarDecl 0x55a54b4f23b0 <col:35, col:51> col:51 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x55a54b4f2430 <col:59, col:65> col:65 __stackaddr 'void *'
| |-ParmVarDecl 0x55a54b4f24a8 <line:450:7, col:14> col:14 __stacksize 'size_t':'unsigned long'
| |-NoThrowAttr 0x55a54b4f26c0 <col:43>
| `-NonNullAttr 0x55a54b4f2718 <col:84, col:98> 1
|-FunctionDecl 0x55a54b4f2a20 <line:451:1, line:453:79> line:451:12 pthread_setschedparam 'int (pthread_t, int, const struct sched_param *)' extern
| |-ParmVarDecl 0x55a54b4f2768 <col:35, col:45> col:45 __target_thread 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x55a54b4f27e8 <col:62, col:66> col:66 __policy 'int'
| |-ParmVarDecl 0x55a54b4f2878 <line:452:7, col:33> col:33 __param 'const struct sched_param *'
| |-NoThrowAttr 0x55a54b4f2ad8 <line:453:22>
| `-NonNullAttr 0x55a54b4f2b30 <col:63, col:77> 3
|-FunctionDecl 0x55a54b4f2e08 <line:454:1, line:457:82> line:454:12 pthread_getschedparam 'int (pthread_t, int *restrict, struct sched_param *restrict)' extern
| |-ParmVarDecl 0x55a54b4f2b78 <col:35, col:45> col:45 __target_thread 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x55a54b4f2bf8 <line:455:7, col:23> col:23 __policy 'int *restrict'
| |-ParmVarDecl 0x55a54b4f2c88 <line:456:7, col:38> col:38 __param 'struct sched_param *restrict'
| |-NoThrowAttr 0x55a54b4f2ec0 <line:457:22>
| `-NonNullAttr 0x55a54b4f2f18 <col:63, col:80> 2 3
|-FunctionDecl 0x55a54b4f3108 <line:458:1, line:459:45> line:458:12 pthread_setschedprio 'int (pthread_t, int)' extern
| |-ParmVarDecl 0x55a54b4f2f68 <col:34, col:44> col:44 __target_thread 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x55a54b4f2fe8 <col:61, col:65> col:65 __prio 'int'
| `-NoThrowAttr 0x55a54b4f31b8 <line:459:22>
|-FunctionDecl 0x55a54b4f3588 <line:460:1, line:461:71> line:460:12 pthread_once 'int (pthread_once_t *, void (*)(void))' extern
| |-ParmVarDecl 0x55a54b4f3280 <col:26, col:42> col:42 __once_control 'pthread_once_t *'
| |-ParmVarDecl 0x55a54b4f3420 <line:461:5, col:33> col:12 __init_routine 'void (*)(void)'
| `-NonNullAttr 0x55a54b4f3638 <col:52, col:69> 1 2
|-FunctionDecl 0x55a54b4f37e0 <line:462:1, col:64> col:12 pthread_setcancelstate 'int (int, int *)' extern
| |-ParmVarDecl 0x55a54b4f36c0 <col:36, col:40> col:40 __state 'int'
| `-ParmVarDecl 0x55a54b4f3740 <col:49, col:54> col:54 __oldstate 'int *'
|-FunctionDecl 0x55a54b4f39f0 <line:463:1, col:61> col:12 pthread_setcanceltype 'int (int, int *)' extern
| |-ParmVarDecl 0x55a54b4f38a8 <col:35, col:39> col:39 __type 'int'
| `-ParmVarDecl 0x55a54b4f3928 <col:47, col:52> col:52 __oldtype 'int *'
|-FunctionDecl 0x55a54b4f3b48 <line:464:1, col:42> col:12 pthread_cancel 'int (pthread_t)' extern
| `-ParmVarDecl 0x55a54b4f3ab0 <col:28, col:38> col:38 __th 'pthread_t':'unsigned long'
|-FunctionDecl 0x55a54b4f3c88 <line:465:1, col:37> col:13 pthread_testcancel 'void (void)' extern
|-RecordDecl 0x55a54b4f3d28 <line:466:9, line:474:1> line:466:9 struct definition
| |-RecordDecl 0x55a54b4f3dd8 <line:468:3, line:472:3> line:468:3 struct definition
| | |-FieldDecl 0x55a54b4f3ec8 <line:470:5, col:15> col:15 __cancel_jmp_buf '__jmp_buf':'long [8]'
| | `-FieldDecl 0x55a54b4f3f30 <line:471:5, col:9> col:9 __mask_was_saved 'int'
| |-FieldDecl 0x55a54b4f4100 <line:468:3, line:472:23> col:5 __cancel_jmp_buf 'struct (anonymous struct at ./split_6/safe009_rmo.oepc_false-unreach-call.i:468:3) [1]'
| `-FieldDecl 0x55a54b4f41f8 <line:473:3, col:16> col:9 __pad 'void *[4]'
|-TypedefDecl 0x55a54b4f42b0 <line:466:1, line:474:3> col:3 referenced __pthread_unwind_buf_t 'struct __pthread_unwind_buf_t':'__pthread_unwind_buf_t'
| |-ElaboratedType 0x55a54b4f4250 'struct __pthread_unwind_buf_t' sugar
| | `-RecordType 0x55a54b4f3db0 '__pthread_unwind_buf_t'
| |   `-Record 0x55a54b4f3d28 ''
| `-AlignedAttr 0x55a54b4f4308 <col:42> aligned
|   `-<<<NULL>>>
|-RecordDecl 0x55a54b4f4380 <line:475:1, line:481:1> line:475:8 struct __pthread_cleanup_frame definition
| |-FieldDecl 0x55a54b4f44e0 <line:477:3, col:35> col:10 __cancel_routine 'void (*)(void *)'
| |-FieldDecl 0x55a54b4f4548 <line:478:3, col:9> col:9 __cancel_arg 'void *'
| |-FieldDecl 0x55a54b4f45b0 <line:479:3, col:7> col:7 __do_it 'int'
| `-FieldDecl 0x55a54b4f4618 <line:480:3, col:7> col:7 __cancel_type 'int'
|-FunctionDecl 0x55a54b4f4820 <line:482:1, col:69> col:13 __pthread_register_cancel 'void (__pthread_unwind_buf_t *)' extern
| `-ParmVarDecl 0x55a54b4f4710 <col:40, col:64> col:64 __buf '__pthread_unwind_buf_t *'
|-FunctionDecl 0x55a54b4f4a00 <line:484:1, col:71> col:13 __pthread_unregister_cancel 'void (__pthread_unwind_buf_t *)' extern
| `-ParmVarDecl 0x55a54b4f48d8 <col:42, col:66> col:66 __buf '__pthread_unwind_buf_t *'
|-FunctionDecl 0x55a54b4f4bc0 <line:486:1, line:488:31> line:486:13 __pthread_unwind_next 'void (__pthread_unwind_buf_t *) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x55a54b4f4ab8 <col:36, col:60> col:60 __buf '__pthread_unwind_buf_t *'
| `-WeakAttr 0x55a54b4f4c68 <line:488:22>
|-RecordDecl 0x55a54b4f4cc0 <line:490:1, col:8> col:8 struct __jmp_buf_tag
|-FunctionDecl 0x55a54b4f4fd8 <line:491:1, col:98> col:12 __sigsetjmp 'int (struct __jmp_buf_tag *, int)' extern
| |-ParmVarDecl 0x55a54b4f4e38 <col:25, col:47> col:47 __env 'struct __jmp_buf_tag *'
| |-ParmVarDecl 0x55a54b4f4eb8 <col:54, col:58> col:58 __savemask 'int'
| |-NoThrowAttr 0x55a54b4f5088 <col:86>
| `-ReturnsTwiceAttr 0x55a54b4f50e0 <col:12> Implicit
|-FunctionDecl 0x55a54b4f5408 <line:492:1, line:494:79> line:492:12 pthread_mutex_init 'int (pthread_mutex_t *, const pthread_mutexattr_t *)' extern
| |-ParmVarDecl 0x55a54b4f51b0 <col:32, col:49> col:49 __mutex 'pthread_mutex_t *'
| |-ParmVarDecl 0x55a54b4f52c0 <line:493:11, col:38> col:38 __mutexattr 'const pthread_mutexattr_t *'
| |-NoThrowAttr 0x55a54b4f54b8 <line:494:22>
| `-NonNullAttr 0x55a54b4f5510 <col:63, col:77> 1
|-FunctionDecl 0x55a54b4f5688 <line:495:1, line:496:79> line:495:12 pthread_mutex_destroy 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x55a54b4f5558 <col:35, col:52> col:52 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x55a54b4f5730 <line:496:22>
| `-NonNullAttr 0x55a54b4f5788 <col:63, col:77> 1
|-FunctionDecl 0x55a54b4f5890 <line:497:1, line:498:68> line:497:12 pthread_mutex_trylock 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x55a54b4f57d8 <col:35, col:52> col:52 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x55a54b4f5938 <line:498:22>
| `-NonNullAttr 0x55a54b4f5990 <col:52, col:66> 1
|-FunctionDecl 0x55a54b4f6ad8 <line:499:1, line:500:68> line:499:12 pthread_mutex_lock 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x55a54b4f6a20 <col:32, col:49> col:49 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x55a54b4f6b80 <line:500:22>
| `-NonNullAttr 0x55a54b4f6bd8 <col:52, col:66> 1
|-FunctionDecl 0x55a54b4f6e18 <line:501:1, line:503:85> line:501:12 pthread_mutex_timedlock 'int (pthread_mutex_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x55a54b4f6c28 <col:37, col:65> col:65 __mutex 'pthread_mutex_t *restrict'
| |-ParmVarDecl 0x55a54b4f6cb8 <line:502:9, line:503:9> col:9 __abstime 'const struct timespec *restrict'
| |-NoThrowAttr 0x55a54b4f6ec8 <col:36>
| `-NonNullAttr 0x55a54b4f6f20 <col:66, col:83> 1 2
|-FunctionDecl 0x55a54b4f7020 <line:504:1, line:505:68> line:504:12 pthread_mutex_unlock 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x55a54b4f6f68 <col:34, col:51> col:51 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x55a54b4f70c8 <line:505:22>
| `-NonNullAttr 0x55a54b4f7120 <col:52, col:66> 1
|-FunctionDecl 0x55a54b4f73b8 <line:506:1, line:509:82> line:506:12 pthread_mutex_getprioceiling 'int (const pthread_mutex_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x55a54b4f71d0 <col:42, line:507:18> col:18 __mutex 'const pthread_mutex_t *restrict'
| |-ParmVarDecl 0x55a54b4f7250 <line:508:7, col:23> col:23 __prioceiling 'int *restrict'
| |-NoThrowAttr 0x55a54b4f7468 <line:509:22>
| `-NonNullAttr 0x55a54b4f74c0 <col:63, col:80> 1 2
|-FunctionDecl 0x55a54b4f7788 <line:510:1, line:513:82> line:510:12 pthread_mutex_setprioceiling 'int (pthread_mutex_t *restrict, int, int *restrict)' extern
| |-ParmVarDecl 0x55a54b4f7508 <col:42, col:70> col:70 __mutex 'pthread_mutex_t *restrict'
| |-ParmVarDecl 0x55a54b4f7588 <line:511:7, col:11> col:11 __prioceiling 'int'
| |-ParmVarDecl 0x55a54b4f7608 <line:512:7, col:23> col:23 __old_ceiling 'int *restrict'
| |-NoThrowAttr 0x55a54b4f7840 <line:513:22>
| `-NonNullAttr 0x55a54b4f7898 <col:63, col:80> 1 3
|-FunctionDecl 0x55a54b4f7a30 <line:514:1, line:515:79> line:514:12 pthread_mutex_consistent 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x55a54b4f78e8 <col:38, col:55> col:55 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x55a54b4f7ad8 <line:515:22>
| `-NonNullAttr 0x55a54b4f7b30 <col:63, col:77> 1
|-FunctionDecl 0x55a54b4f7d18 <line:516:1, line:517:79> line:516:12 pthread_mutexattr_init 'int (pthread_mutexattr_t *)' extern
| |-ParmVarDecl 0x55a54b4f7be0 <col:36, col:57> col:57 __attr 'pthread_mutexattr_t *'
| |-NoThrowAttr 0x55a54b4f7dc0 <line:517:22>
| `-NonNullAttr 0x55a54b4f7e18 <col:63, col:77> 1
|-FunctionDecl 0x55a54b4f7f20 <line:518:1, line:519:79> line:518:12 pthread_mutexattr_destroy 'int (pthread_mutexattr_t *)' extern
| |-ParmVarDecl 0x55a54b4f7e68 <col:39, col:60> col:60 __attr 'pthread_mutexattr_t *'
| |-NoThrowAttr 0x55a54b4f7fc8 <line:519:22>
| `-NonNullAttr 0x55a54b4f8020 <col:63, col:77> 1
|-FunctionDecl 0x55a54b4f8248 <line:520:1, line:523:82> line:520:12 pthread_mutexattr_getpshared 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x55a54b4f8068 <col:42, line:521:18> col:18 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x55a54b4f80e8 <line:522:7, col:23> col:23 __pshared 'int *restrict'
| |-NoThrowAttr 0x55a54b4f82f8 <line:523:22>
| `-NonNullAttr 0x55a54b4f8350 <col:63, col:80> 1 2
|-FunctionDecl 0x55a54b4f8558 <line:524:1, line:526:79> line:524:12 pthread_mutexattr_setpshared 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x55a54b4f8398 <col:42, col:63> col:63 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x55a54b4f8418 <line:525:7, col:11> col:11 __pshared 'int'
| |-NoThrowAttr 0x55a54b4f8608 <line:526:22>
| `-NonNullAttr 0x55a54b4f8660 <col:63, col:77> 1
|-FunctionDecl 0x55a54b4f8808 <line:527:1, line:529:82> line:527:12 pthread_mutexattr_gettype 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x55a54b4f86a8 <col:39, line:528:11> col:11 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x55a54b4f8728 <col:19, col:35> col:35 __kind 'int *restrict'
| |-NoThrowAttr 0x55a54b4f88b8 <line:529:22>
| `-NonNullAttr 0x55a54b4f8910 <col:63, col:80> 1 2
|-FunctionDecl 0x55a54b4f8b00 <line:530:1, line:531:79> line:530:12 pthread_mutexattr_settype 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x55a54b4f8958 <col:39, col:60> col:60 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x55a54b4f8a40 <col:68, col:72> col:72 __kind 'int'
| |-NoThrowAttr 0x55a54b4f8bb0 <line:531:22>
| `-NonNullAttr 0x55a54b4f8c08 <col:63, col:77> 1
|-FunctionDecl 0x55a54b4f8db8 <line:532:1, line:535:82> line:532:12 pthread_mutexattr_getprotocol 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x55a54b4f8c58 <col:43, line:533:19> col:19 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x55a54b4f8cd8 <line:534:8, col:24> col:24 __protocol 'int *restrict'
| |-NoThrowAttr 0x55a54b4f8e68 <line:535:22>
| `-NonNullAttr 0x55a54b4f8ec0 <col:63, col:80> 1 2
|-FunctionDecl 0x55a54b4f9048 <line:536:1, line:538:79> line:536:12 pthread_mutexattr_setprotocol 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x55a54b4f8f08 <col:43, col:64> col:64 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x55a54b4f8f88 <line:537:8, col:12> col:12 __protocol 'int'
| |-NoThrowAttr 0x55a54b4f90f8 <line:538:22>
| `-NonNullAttr 0x55a54b4f9150 <col:63, col:77> 1
|-FunctionDecl 0x55a54b4f92f8 <line:539:1, line:542:82> line:539:12 pthread_mutexattr_getprioceiling 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x55a54b4f9198 <col:46, line:540:22> col:22 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x55a54b4f9218 <line:541:11, col:27> col:27 __prioceiling 'int *restrict'
| |-NoThrowAttr 0x55a54b4f93a8 <line:542:22>
| `-NonNullAttr 0x55a54b4f9400 <col:63, col:80> 1 2
|-FunctionDecl 0x55a54b4f9588 <line:543:1, line:545:79> line:543:12 pthread_mutexattr_setprioceiling 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x55a54b4f9448 <col:46, col:67> col:67 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x55a54b4f94c8 <line:544:11, col:15> col:15 __prioceiling 'int'
| |-NoThrowAttr 0x55a54b4f9638 <line:545:22>
| `-NonNullAttr 0x55a54b4f9690 <col:63, col:77> 1
|-FunctionDecl 0x55a54b4f9878 <line:546:1, line:548:82> line:546:12 pthread_mutexattr_getrobust 'int (const pthread_mutexattr_t *, int *)' extern
| |-ParmVarDecl 0x55a54b4f96d8 <col:41, col:68> col:68 __attr 'const pthread_mutexattr_t *'
| |-ParmVarDecl 0x55a54b4f9758 <line:547:6, col:11> col:11 __robustness 'int *'
| |-NoThrowAttr 0x55a54b4f9928 <line:548:22>
| `-NonNullAttr 0x55a54b4f9980 <col:63, col:80> 1 2
|-FunctionDecl 0x55a54b4fab38 <line:549:1, line:551:79> line:549:12 pthread_mutexattr_setrobust 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x55a54b4f99c8 <col:41, col:62> col:62 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x55a54b4faa78 <line:550:6, col:10> col:10 __robustness 'int'
| |-NoThrowAttr 0x55a54b4fabe8 <line:551:22>
| `-NonNullAttr 0x55a54b4fac40 <col:63, col:77> 1
|-FunctionDecl 0x55a54b4faf78 <line:552:1, line:554:86> line:552:12 pthread_rwlock_init 'int (pthread_rwlock_t *restrict, const pthread_rwlockattr_t *restrict)' extern
| |-ParmVarDecl 0x55a54b4fad20 <col:33, col:62> col:62 __rwlock 'pthread_rwlock_t *restrict'
| |-ParmVarDecl 0x55a54b4fae30 <line:553:5, line:554:5> col:5 __attr 'const pthread_rwlockattr_t *restrict'
| |-NoThrowAttr 0x55a54b4fb028 <col:29>
| `-NonNullAttr 0x55a54b4fb080 <col:70, col:84> 1
|-FunctionDecl 0x55a54b4fb1f8 <line:555:1, line:556:79> line:555:12 pthread_rwlock_destroy 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x55a54b4fb0c8 <col:36, col:54> col:54 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x55a54b4fb2a0 <line:556:22>
| `-NonNullAttr 0x55a54b4fb2f8 <col:63, col:77> 1
|-FunctionDecl 0x55a54b4fb400 <line:557:1, line:558:68> line:557:12 pthread_rwlock_rdlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x55a54b4fb348 <col:35, col:53> col:53 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x55a54b4fb4a8 <line:558:22>
| `-NonNullAttr 0x55a54b4fb500 <col:52, col:66> 1
|-FunctionDecl 0x55a54b4fb600 <line:559:1, line:560:65> line:559:12 pthread_rwlock_tryrdlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x55a54b4fb548 <col:38, col:56> col:56 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x55a54b4fb6a8 <line:560:19>
| `-NonNullAttr 0x55a54b4fb700 <col:49, col:63> 1
|-FunctionDecl 0x55a54b4fb938 <line:561:1, line:563:88> line:561:12 pthread_rwlock_timedrdlock 'int (pthread_rwlock_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x55a54b4fb748 <col:40, col:69> col:69 __rwlock 'pthread_rwlock_t *restrict'
| |-ParmVarDecl 0x55a54b4fb7d8 <line:562:12, line:563:12> col:12 __abstime 'const struct timespec *restrict'
| |-NoThrowAttr 0x55a54b4fb9e8 <col:39>
| `-NonNullAttr 0x55a54b4fba70 <col:69, col:86> 1 2
|-FunctionDecl 0x55a54b4fbb70 <line:564:1, line:565:68> line:564:12 pthread_rwlock_wrlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x55a54b4fbab8 <col:35, col:53> col:53 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x55a54b4fbc18 <line:565:22>
| `-NonNullAttr 0x55a54b4fbc70 <col:52, col:66> 1
|-FunctionDecl 0x55a54b4fbd70 <line:566:1, line:567:68> line:566:12 pthread_rwlock_trywrlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x55a54b4fbcb8 <col:38, col:56> col:56 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x55a54b4fbe18 <line:567:22>
| `-NonNullAttr 0x55a54b4fbe70 <col:52, col:66> 1
|-FunctionDecl 0x55a54b4fc028 <line:568:1, line:570:88> line:568:12 pthread_rwlock_timedwrlock 'int (pthread_rwlock_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x55a54b4fbeb8 <col:40, col:69> col:69 __rwlock 'pthread_rwlock_t *restrict'
| |-ParmVarDecl 0x55a54b4fbf48 <line:569:12, line:570:12> col:12 __abstime 'const struct timespec *restrict'
| |-NoThrowAttr 0x55a54b4fc0d8 <col:39>
| `-NonNullAttr 0x55a54b4fc130 <col:69, col:86> 1 2
|-FunctionDecl 0x55a54b4fc230 <line:571:1, line:572:68> line:571:12 pthread_rwlock_unlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x55a54b4fc178 <col:35, col:53> col:53 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x55a54b4fc2d8 <line:572:22>
| `-NonNullAttr 0x55a54b4fc330 <col:52, col:66> 1
|-FunctionDecl 0x55a54b4fc518 <line:573:1, line:574:79> line:573:12 pthread_rwlockattr_init 'int (pthread_rwlockattr_t *)' extern
| |-ParmVarDecl 0x55a54b4fc3e0 <col:37, col:59> col:59 __attr 'pthread_rwlockattr_t *'
| |-NoThrowAttr 0x55a54b4fc5c0 <line:574:22>
| `-NonNullAttr 0x55a54b4fc618 <col:63, col:77> 1
|-FunctionDecl 0x55a54b4fc720 <line:575:1, line:576:79> line:575:12 pthread_rwlockattr_destroy 'int (pthread_rwlockattr_t *)' extern
| |-ParmVarDecl 0x55a54b4fc668 <col:40, col:62> col:62 __attr 'pthread_rwlockattr_t *'
| |-NoThrowAttr 0x55a54b4fc7c8 <line:576:22>
| `-NonNullAttr 0x55a54b4fc820 <col:63, col:77> 1
|-FunctionDecl 0x55a54b4fca80 <line:577:1, line:580:82> line:577:12 pthread_rwlockattr_getpshared 'int (const pthread_rwlockattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x55a54b4fc868 <col:43, line:578:19> col:19 __attr 'const pthread_rwlockattr_t *restrict'
| |-ParmVarDecl 0x55a54b4fc8e8 <line:579:8, col:24> col:24 __pshared 'int *restrict'
| |-NoThrowAttr 0x55a54b4fcb30 <line:580:22>
| `-NonNullAttr 0x55a54b4fcb88 <col:63, col:80> 1 2
|-FunctionDecl 0x55a54b4fcd98 <line:581:1, line:583:79> line:581:12 pthread_rwlockattr_setpshared 'int (pthread_rwlockattr_t *, int)' extern
| |-ParmVarDecl 0x55a54b4fcbd8 <col:43, col:65> col:65 __attr 'pthread_rwlockattr_t *'
| |-ParmVarDecl 0x55a54b4fcc58 <line:582:8, col:12> col:12 __pshared 'int'
| |-NoThrowAttr 0x55a54b4fce48 <line:583:22>
| `-NonNullAttr 0x55a54b4fcea0 <col:63, col:77> 1
|-FunctionDecl 0x55a54b4fd048 <line:584:1, line:587:82> line:584:12 pthread_rwlockattr_getkind_np 'int (const pthread_rwlockattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x55a54b4fcee8 <col:43, line:585:19> col:19 __attr 'const pthread_rwlockattr_t *restrict'
| |-ParmVarDecl 0x55a54b4fcf68 <line:586:8, col:24> col:24 __pref 'int *restrict'
| |-NoThrowAttr 0x55a54b4fd0f8 <line:587:22>
| `-NonNullAttr 0x55a54b4fd150 <col:63, col:80> 1 2
|-FunctionDecl 0x55a54b4fd2d8 <line:588:1, line:589:93> line:588:12 pthread_rwlockattr_setkind_np 'int (pthread_rwlockattr_t *, int)' extern
| |-ParmVarDecl 0x55a54b4fd198 <col:43, col:65> col:65 __attr 'pthread_rwlockattr_t *'
| |-ParmVarDecl 0x55a54b4fd218 <line:589:8, col:12> col:12 __pref 'int'
| |-NoThrowAttr 0x55a54b4fd388 <col:36>
| `-NonNullAttr 0x55a54b4fd3e0 <col:77, col:91> 1
|-FunctionDecl 0x55a54b4fd718 <line:590:1, line:592:79> line:590:12 pthread_cond_init 'int (pthread_cond_t *restrict, const pthread_condattr_t *restrict)' extern
| |-ParmVarDecl 0x55a54b4fd4c0 <col:31, col:58> col:58 __cond 'pthread_cond_t *restrict'
| |-ParmVarDecl 0x55a54b4fd5d0 <line:591:10, col:47> col:47 __cond_attr 'const pthread_condattr_t *restrict'
| |-NoThrowAttr 0x55a54b4fd7c8 <line:592:22>
| `-NonNullAttr 0x55a54b4fd820 <col:63, col:77> 1
|-FunctionDecl 0x55a54b4fd998 <line:593:1, line:594:79> line:593:12 pthread_cond_destroy 'int (pthread_cond_t *)' extern
| |-ParmVarDecl 0x55a54b4fd868 <col:34, col:50> col:50 __cond 'pthread_cond_t *'
| |-NoThrowAttr 0x55a54b4fda40 <line:594:22>
| `-NonNullAttr 0x55a54b4fdac0 <col:63, col:77> 1
|-FunctionDecl 0x55a54b4fdbc0 <line:595:1, line:596:68> line:595:12 pthread_cond_signal 'int (pthread_cond_t *)' extern
| |-ParmVarDecl 0x55a54b4fdb08 <col:33, col:49> col:49 __cond 'pthread_cond_t *'
| |-NoThrowAttr 0x55a54b4fdc68 <line:596:22>
| `-NonNullAttr 0x55a54b4fdcc0 <col:52, col:66> 1
|-FunctionDecl 0x55a54b4fddc0 <line:597:1, line:598:68> line:597:12 pthread_cond_broadcast 'int (pthread_cond_t *)' extern
| |-ParmVarDecl 0x55a54b4fdd08 <col:36, col:52> col:52 __cond 'pthread_cond_t *'
| |-NoThrowAttr 0x55a54b4fde68 <line:598:22>
| `-NonNullAttr 0x55a54b4fdec0 <col:52, col:66> 1
|-FunctionDecl 0x55a54b4fe0e8 <line:599:1, line:601:41> line:599:12 pthread_cond_wait 'int (pthread_cond_t *restrict, pthread_mutex_t *restrict)' extern
| |-ParmVarDecl 0x55a54b4fdf08 <col:31, col:58> col:58 __cond 'pthread_cond_t *restrict'
| |-ParmVarDecl 0x55a54b4fdf80 <line:600:10, col:38> col:38 __mutex 'pthread_mutex_t *restrict'
| `-NonNullAttr 0x55a54b4fe198 <line:601:22, col:39> 1 2
|-FunctionDecl 0x55a54b4fe4c8 <line:602:1, line:605:44> line:602:12 pthread_cond_timedwait 'int (pthread_cond_t *restrict, pthread_mutex_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x55a54b4fe218 <col:36, col:63> col:63 __cond 'pthread_cond_t *restrict'
| |-ParmVarDecl 0x55a54b4fe290 <line:603:8, col:36> col:36 __mutex 'pthread_mutex_t *restrict'
| |-ParmVarDecl 0x55a54b4fe320 <line:604:8, col:42> col:42 __abstime 'const struct timespec *restrict'
| `-NonNullAttr 0x55a54b4fe580 <line:605:22, col:42> 1 2 3
|-FunctionDecl 0x55a54b4fe798 <line:606:1, line:607:79> line:606:12 pthread_condattr_init 'int (pthread_condattr_t *)' extern
| |-ParmVarDecl 0x55a54b4fe660 <col:35, col:55> col:55 __attr 'pthread_condattr_t *'
| |-NoThrowAttr 0x55a54b4fe840 <line:607:22>
| `-NonNullAttr 0x55a54b4fe898 <col:63, col:77> 1
|-FunctionDecl 0x55a54b4fe9a0 <line:608:1, line:609:79> line:608:12 pthread_condattr_destroy 'int (pthread_condattr_t *)' extern
| |-ParmVarDecl 0x55a54b4fe8e8 <col:38, col:58> col:58 __attr 'pthread_condattr_t *'
| |-NoThrowAttr 0x55a54b4fea48 <line:609:22>
| `-NonNullAttr 0x55a54b4fead0 <col:63, col:77> 1
|-FunctionDecl 0x55a54b4fecf8 <line:610:1, line:613:82> line:610:12 pthread_condattr_getpshared 'int (const pthread_condattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x55a54b4feb18 <col:41, line:611:17> col:17 __attr 'const pthread_condattr_t *restrict'
| |-ParmVarDecl 0x55a54b4feb98 <line:612:6, col:22> col:22 __pshared 'int *restrict'
| |-NoThrowAttr 0x55a54b4feda8 <line:613:22>
| `-NonNullAttr 0x55a54b4fee00 <col:63, col:80> 1 2
|-FunctionDecl 0x55a54b4ff008 <line:614:1, line:615:94> line:614:12 pthread_condattr_setpshared 'int (pthread_condattr_t *, int)' extern
| |-ParmVarDecl 0x55a54b4fee48 <col:41, col:61> col:61 __attr 'pthread_condattr_t *'
| |-ParmVarDecl 0x55a54b4feec8 <line:615:6, col:10> col:10 __pshared 'int'
| |-NoThrowAttr 0x55a54b4ff0b8 <col:37>
| `-NonNullAttr 0x55a54b4ff110 <col:78, col:92> 1
|-FunctionDecl 0x55a54b4ff328 <line:616:1, line:619:82> line:616:12 pthread_condattr_getclock 'int (const pthread_condattr_t *restrict, __clockid_t *restrict)' extern
| |-ParmVarDecl 0x55a54b4ff158 <col:39, line:617:22> col:22 __attr 'const pthread_condattr_t *restrict'
| |-ParmVarDecl 0x55a54b4ff200 <line:618:11, col:35> col:35 __clock_id '__clockid_t *restrict'
| |-NoThrowAttr 0x55a54b4ff3d8 <line:619:22>
| `-NonNullAttr 0x55a54b4ff430 <col:63, col:80> 1 2
|-FunctionDecl 0x55a54b4ff5f8 <line:620:1, line:622:79> line:620:12 pthread_condattr_setclock 'int (pthread_condattr_t *, __clockid_t)' extern
| |-ParmVarDecl 0x55a54b4ff478 <col:39, col:59> col:59 __attr 'pthread_condattr_t *'
| |-ParmVarDecl 0x55a54b4ff4f0 <line:621:11, col:23> col:23 __clock_id '__clockid_t':'int'
| |-NoThrowAttr 0x55a54b4ff6a8 <line:622:22>
| `-NonNullAttr 0x55a54b4ff700 <col:63, col:77> 1
|-FunctionDecl 0x55a54b4ff9a8 <line:623:1, line:624:79> line:623:12 pthread_spin_init 'int (pthread_spinlock_t *, int)' extern
| |-ParmVarDecl 0x55a54b4ff7e0 <col:31, col:51> col:51 __lock 'pthread_spinlock_t *'
| |-ParmVarDecl 0x55a54b4ff860 <col:59, col:63> col:63 __pshared 'int'
| |-NoThrowAttr 0x55a54b4ffa58 <line:624:22>
| `-NonNullAttr 0x55a54b4ffae0 <col:63, col:77> 1
|-FunctionDecl 0x55a54b4ffc58 <line:625:1, line:626:79> line:625:12 pthread_spin_destroy 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x55a54b4ffb28 <col:34, col:54> col:54 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x55a54b4ffd00 <line:626:22>
| `-NonNullAttr 0x55a54b4ffd58 <col:63, col:77> 1
|-FunctionDecl 0x55a54b4ffe60 <line:627:1, line:628:68> line:627:12 pthread_spin_lock 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x55a54b4ffda8 <col:31, col:51> col:51 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x55a54b4fff08 <line:628:22>
| `-NonNullAttr 0x55a54b4fff60 <col:52, col:66> 1
|-FunctionDecl 0x55a54b500060 <line:629:1, line:630:68> line:629:12 pthread_spin_trylock 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x55a54b4fffa8 <col:34, col:54> col:54 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x55a54b500108 <line:630:22>
| `-NonNullAttr 0x55a54b500160 <col:52, col:66> 1
|-FunctionDecl 0x55a54b500260 <line:631:1, line:632:68> line:631:12 pthread_spin_unlock 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x55a54b5001a8 <col:33, col:53> col:53 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x55a54b500308 <line:632:22>
| `-NonNullAttr 0x55a54b500360 <col:52, col:66> 1
|-FunctionDecl 0x55a54b500738 <line:633:1, line:636:79> line:633:12 pthread_barrier_init 'int (pthread_barrier_t *restrict, const pthread_barrierattr_t *restrict, unsigned int)' extern
| |-ParmVarDecl 0x55a54b500440 <col:34, col:64> col:64 __barrier 'pthread_barrier_t *restrict'
| |-ParmVarDecl 0x55a54b500550 <line:634:6, line:635:6> col:6 __attr 'const pthread_barrierattr_t *restrict'
| |-ParmVarDecl 0x55a54b5005d0 <col:14, col:27> col:27 __count 'unsigned int'
| |-NoThrowAttr 0x55a54b5007f0 <line:636:22>
| `-NonNullAttr 0x55a54b500848 <col:63, col:77> 1
|-FunctionDecl 0x55a54b5009c8 <line:637:1, line:638:79> line:637:12 pthread_barrier_destroy 'int (pthread_barrier_t *)' extern
| |-ParmVarDecl 0x55a54b500898 <col:37, col:56> col:56 __barrier 'pthread_barrier_t *'
| |-NoThrowAttr 0x55a54b500a70 <line:638:22>
| `-NonNullAttr 0x55a54b501b00 <col:63, col:77> 1
|-FunctionDecl 0x55a54b501c00 <line:639:1, line:640:68> line:639:12 pthread_barrier_wait 'int (pthread_barrier_t *)' extern
| |-ParmVarDecl 0x55a54b501b48 <col:34, col:53> col:53 __barrier 'pthread_barrier_t *'
| |-NoThrowAttr 0x55a54b501ca8 <line:640:22>
| `-NonNullAttr 0x55a54b501d00 <col:52, col:66> 1
|-FunctionDecl 0x55a54b501ee8 <line:641:1, line:642:79> line:641:12 pthread_barrierattr_init 'int (pthread_barrierattr_t *)' extern
| |-ParmVarDecl 0x55a54b501db0 <col:38, col:61> col:61 __attr 'pthread_barrierattr_t *'
| |-NoThrowAttr 0x55a54b501f90 <line:642:22>
| `-NonNullAttr 0x55a54b501fe8 <col:63, col:77> 1
|-FunctionDecl 0x55a54b5020f0 <line:643:1, line:644:79> line:643:12 pthread_barrierattr_destroy 'int (pthread_barrierattr_t *)' extern
| |-ParmVarDecl 0x55a54b502038 <col:41, col:64> col:64 __attr 'pthread_barrierattr_t *'
| |-NoThrowAttr 0x55a54b502198 <line:644:22>
| `-NonNullAttr 0x55a54b5021f0 <col:63, col:77> 1
|-FunctionDecl 0x55a54b502418 <line:645:1, line:648:82> line:645:12 pthread_barrierattr_getpshared 'int (const pthread_barrierattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x55a54b502238 <col:44, line:646:20> col:20 __attr 'const pthread_barrierattr_t *restrict'
| |-ParmVarDecl 0x55a54b5022b8 <line:647:9, col:25> col:25 __pshared 'int *restrict'
| |-NoThrowAttr 0x55a54b5024c8 <line:648:22>
| `-NonNullAttr 0x55a54b502520 <col:63, col:80> 1 2
|-FunctionDecl 0x55a54b502728 <line:649:1, line:651:79> line:649:12 pthread_barrierattr_setpshared 'int (pthread_barrierattr_t *, int)' extern
| |-ParmVarDecl 0x55a54b502568 <col:44, col:67> col:67 __attr 'pthread_barrierattr_t *'
| |-ParmVarDecl 0x55a54b5025e8 <line:650:9, col:13> col:13 __pshared 'int'
| |-NoThrowAttr 0x55a54b5027d8 <line:651:22>
| `-NonNullAttr 0x55a54b502830 <col:63, col:77> 1
|-FunctionDecl 0x55a54b502b98 <line:652:1, line:654:79> line:652:12 pthread_key_create 'int (pthread_key_t *, void (*)(void *))' extern
| |-ParmVarDecl 0x55a54b502910 <col:32, col:47> col:47 __key 'pthread_key_t *'
| |-ParmVarDecl 0x55a54b502a30 <line:653:11, col:43> col:18 __destr_function 'void (*)(void *)'
| |-NoThrowAttr 0x55a54b502c48 <line:654:22>
| `-NonNullAttr 0x55a54b502ca0 <col:63, col:77> 1
|-FunctionDecl 0x55a54b502df8 <line:655:1, col:92> col:12 pthread_key_delete 'int (pthread_key_t)' extern
| |-ParmVarDecl 0x55a54b502ce8 <col:32, col:46> col:46 __key 'pthread_key_t':'unsigned int'
| `-NoThrowAttr 0x55a54b502ea0 <col:69>
|-FunctionDecl 0x55a54b503018 <line:656:1, col:95> col:14 pthread_getspecific 'void *(pthread_key_t)' extern
| |-ParmVarDecl 0x55a54b502f08 <col:35, col:49> col:49 __key 'pthread_key_t':'unsigned int'
| `-NoThrowAttr 0x55a54b5030c0 <col:72>
|-FunctionDecl 0x55a54b5032f8 <line:657:1, line:658:67> line:657:12 pthread_setspecific 'int (pthread_key_t, const void *)' extern
| |-ParmVarDecl 0x55a54b503128 <col:33, col:47> col:47 __key 'pthread_key_t':'unsigned int'
| |-ParmVarDecl 0x55a54b5031d8 <line:658:5, col:17> col:17 __pointer 'const void *'
| `-NoThrowAttr 0x55a54b5033a8 <col:44>
|-FunctionDecl 0x55a54b5035c8 <line:659:1, line:661:79> line:659:12 pthread_getcpuclockid 'int (pthread_t, __clockid_t *)' extern
| |-ParmVarDecl 0x55a54b503410 <col:35, col:45> col:45 __thread_id 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x55a54b503488 <line:660:7, col:20> col:20 __clock_id '__clockid_t *'
| |-NoThrowAttr 0x55a54b503678 <line:661:22>
| `-NonNullAttr 0x55a54b5036d0 <col:63, col:77> 2
|-FunctionDecl 0x55a54b503b30 <line:662:1, line:664:70> line:662:12 pthread_atfork 'int (void (*)(void), void (*)(void), void (*)(void))' extern
| |-ParmVarDecl 0x55a54b5037b0 <col:28, col:51> col:35 __prepare 'void (*)(void)'
| |-ParmVarDecl 0x55a54b5038c0 <line:663:7, col:29> col:14 __parent 'void (*)(void)'
| |-ParmVarDecl 0x55a54b5039d0 <line:664:7, col:28> col:14 __child 'void (*)(void)'
| `-NoThrowAttr 0x55a54b503be8 <col:47>
|-FunctionDecl 0x55a54b503cf0 <line:666:1, col:20> col:8 used P0 'void *(void *)'
| `-ParmVarDecl 0x55a54b503c58 <col:11, col:17> col:17 arg 'void *'
|-FunctionDecl 0x55a54b503e48 <line:667:1, col:20> col:8 used P1 'void *(void *)'
| `-ParmVarDecl 0x55a54b503db0 <col:11, col:17> col:17 arg 'void *'
|-FunctionDecl 0x55a54b503fa0 <line:668:1, col:20> col:8 used P2 'void *(void *)'
| `-ParmVarDecl 0x55a54b503f08 <col:11, col:17> col:17 arg 'void *'
|-FunctionDecl 0x55a54b504068 <line:669:1, col:12> col:6 fence 'void ()'
|-FunctionDecl 0x55a54b504128 <line:670:1, col:12> col:6 isync 'void ()'
|-FunctionDecl 0x55a54b5041e8 <line:671:1, col:14> col:6 lwfence 'void ()'
|-VarDecl 0x55a54b5042a0 <line:672:1, col:5> col:5 used __unbuffered_cnt 'int'
|-VarDecl 0x55a54b504320 prev 0x55a54b5042a0 <line:673:1, col:24> col:5 used __unbuffered_cnt 'int' cinit
| `-IntegerLiteral 0x55a54b504388 <col:24> 'int' 0
|-VarDecl 0x55a54b5043c0 <line:674:1, col:5> col:5 used __unbuffered_p0_EAX 'int'
|-VarDecl 0x55a54b504440 prev 0x55a54b5043c0 <line:675:1, col:27> col:5 used __unbuffered_p0_EAX 'int' cinit
| `-IntegerLiteral 0x55a54b5044a8 <col:27> 'int' 0
|-VarDecl 0x55a54b5044d8 <line:676:1, col:7> col:7 __unbuffered_p0_EAX$flush_delayed '_Bool'
|-VarDecl 0x55a54b504558 <line:677:1, col:5> col:5 __unbuffered_p0_EAX$mem_tmp 'int'
|-VarDecl 0x55a54b5045d0 <line:678:1, col:7> col:7 __unbuffered_p0_EAX$r_buff0_thd0 '_Bool'
|-VarDecl 0x55a54b504648 <line:679:1, col:7> col:7 __unbuffered_p0_EAX$r_buff0_thd1 '_Bool'
|-VarDecl 0x55a54b5046c0 <line:680:1, col:7> col:7 __unbuffered_p0_EAX$r_buff0_thd2 '_Bool'
|-VarDecl 0x55a54b504738 <line:681:1, col:7> col:7 __unbuffered_p0_EAX$r_buff0_thd3 '_Bool'
|-VarDecl 0x55a54b5047b0 <line:682:1, col:7> col:7 __unbuffered_p0_EAX$r_buff1_thd0 '_Bool'
|-VarDecl 0x55a54b504828 <line:683:1, col:7> col:7 __unbuffered_p0_EAX$r_buff1_thd1 '_Bool'
|-VarDecl 0x55a54b5048a0 <line:684:1, col:7> col:7 __unbuffered_p0_EAX$r_buff1_thd2 '_Bool'
|-VarDecl 0x55a54b504918 <line:685:1, col:7> col:7 __unbuffered_p0_EAX$r_buff1_thd3 '_Bool'
|-VarDecl 0x55a54b504990 <line:686:1, col:7> col:7 used __unbuffered_p0_EAX$read_delayed '_Bool'
|-VarDecl 0x55a54b504a10 <line:687:1, col:6> col:6 used __unbuffered_p0_EAX$read_delayed_var 'int *'
|-VarDecl 0x55a54b504b00 <line:688:1, col:5> col:5 __unbuffered_p0_EAX$w_buff0 'int'
|-VarDecl 0x55a54b504b78 <line:689:1, col:7> col:7 __unbuffered_p0_EAX$w_buff0_used '_Bool'
|-VarDecl 0x55a54b504bf8 <line:690:1, col:5> col:5 __unbuffered_p0_EAX$w_buff1 'int'
|-VarDecl 0x55a54b504c70 <line:691:1, col:7> col:7 __unbuffered_p0_EAX$w_buff1_used '_Bool'
|-VarDecl 0x55a54b504cf0 <line:692:1, col:5> col:5 used __unbuffered_p1_EAX 'int'
|-VarDecl 0x55a54b504d70 prev 0x55a54b504cf0 <line:693:1, col:27> col:5 used __unbuffered_p1_EAX 'int' cinit
| `-IntegerLiteral 0x55a54b504dd8 <col:27> 'int' 0
|-VarDecl 0x55a54b504e08 <line:694:1, col:7> col:7 used main$tmp_guard0 '_Bool'
|-VarDecl 0x55a54b504e80 <line:695:1, col:7> col:7 used main$tmp_guard1 '_Bool'
|-VarDecl 0x55a54b504f00 <line:696:1, col:5> col:5 used x 'int'
|-VarDecl 0x55a54b504f80 prev 0x55a54b504f00 <line:697:1, col:9> col:5 used x 'int' cinit
| `-IntegerLiteral 0x55a54b504fe8 <col:9> 'int' 0
|-VarDecl 0x55a54b505020 <line:698:1, col:5> col:5 used y 'int'
|-VarDecl 0x55a54b5050a0 prev 0x55a54b505020 <line:699:1, col:9> col:5 used y 'int' cinit
| `-IntegerLiteral 0x55a54b505108 <col:9> 'int' 0
|-VarDecl 0x55a54b505138 <line:700:1, col:7> col:7 used y$flush_delayed '_Bool'
|-VarDecl 0x55a54b5051b8 <line:701:1, col:5> col:5 used y$mem_tmp 'int'
|-VarDecl 0x55a54b505230 <line:702:1, col:7> col:7 used y$r_buff0_thd0 '_Bool'
|-VarDecl 0x55a54b5052a8 <line:703:1, col:7> col:7 used y$r_buff0_thd1 '_Bool'
|-VarDecl 0x55a54b505320 <line:704:1, col:7> col:7 used y$r_buff0_thd2 '_Bool'
|-VarDecl 0x55a54b505398 <line:705:1, col:7> col:7 used y$r_buff0_thd3 '_Bool'
|-VarDecl 0x55a54b505410 <line:706:1, col:7> col:7 used y$r_buff1_thd0 '_Bool'
|-VarDecl 0x55a54b505488 <line:707:1, col:7> col:7 used y$r_buff1_thd1 '_Bool'
|-VarDecl 0x55a54b505500 <line:708:1, col:7> col:7 used y$r_buff1_thd2 '_Bool'
|-VarDecl 0x55a54b505578 <line:709:1, col:7> col:7 used y$r_buff1_thd3 '_Bool'
|-VarDecl 0x55a54b5055f0 <line:710:1, col:7> col:7 y$read_delayed '_Bool'
|-VarDecl 0x55a54b505670 <line:711:1, col:6> col:6 y$read_delayed_var 'int *'
|-VarDecl 0x55a54b5056f0 <line:712:1, col:5> col:5 used y$w_buff0 'int'
|-VarDecl 0x55a54b505768 <line:713:1, col:7> col:7 used y$w_buff0_used '_Bool'
|-VarDecl 0x55a54b5057e8 <line:714:1, col:5> col:5 used y$w_buff1 'int'
|-VarDecl 0x55a54b505860 <line:715:1, col:7> col:7 used y$w_buff1_used '_Bool'
|-VarDecl 0x55a54b5058d8 <line:716:1, col:7> col:7 used weak$$choice0 '_Bool'
|-VarDecl 0x55a54b505950 <line:717:1, col:7> col:7 used weak$$choice1 '_Bool'
|-VarDecl 0x55a54b5059c8 <line:718:1, col:7> col:7 used weak$$choice2 '_Bool'
|-FunctionDecl 0x55a54b506b20 prev 0x55a54b503cf0 <line:719:1, line:748:1> line:719:8 used P0 'void *(void *)'
| |-ParmVarDecl 0x55a54b505a48 <col:11, col:17> col:17 arg 'void *'
| `-CompoundStmt 0x55a54b509b98 <line:720:1, line:748:1>
|   |-CallExpr 0x55a54b506c38 <line:721:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x55a54b506c20 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55a54b506bc8 <col:3> 'void ()' Function 0x55a54b4aafa0 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x55a54b506d08 <line:722:3, col:42> '_Bool' '='
|   | |-DeclRefExpr 0x55a54b506c58 <col:3> '_Bool' lvalue Var 0x55a54b5058d8 'weak$$choice0' '_Bool'
|   | `-CallExpr 0x55a54b506ce8 <col:19, col:42> '_Bool'
|   |   `-ImplicitCastExpr 0x55a54b506cd0 <col:19> '_Bool (*)(void)' <FunctionToPointerDecay>
|   |     `-DeclRefExpr 0x55a54b506c78 <col:19> '_Bool (void)' Function 0x55a54b4aa770 '__VERIFIER_nondet_bool' '_Bool (void)'
|   |-BinaryOperator 0x55a54b506da0 <line:723:3, col:42> '_Bool' '='
|   | |-DeclRefExpr 0x55a54b506d28 <col:3> '_Bool' lvalue Var 0x55a54b5059c8 'weak$$choice2' '_Bool'
|   | `-CallExpr 0x55a54b506d80 <col:19, col:42> '_Bool'
|   |   `-ImplicitCastExpr 0x55a54b506d68 <col:19> '_Bool (*)(void)' <FunctionToPointerDecay>
|   |     `-DeclRefExpr 0x55a54b506d48 <col:19> '_Bool (void)' Function 0x55a54b4aa770 '__VERIFIER_nondet_bool' '_Bool (void)'
|   |-BinaryOperator 0x55a54b506e18 <line:724:3, col:21> '_Bool' '='
|   | |-DeclRefExpr 0x55a54b506dc0 <col:3> '_Bool' lvalue Var 0x55a54b505138 'y$flush_delayed' '_Bool'
|   | `-ImplicitCastExpr 0x55a54b506e00 <col:21> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x55a54b506de0 <col:21> '_Bool' lvalue Var 0x55a54b5059c8 'weak$$choice2' '_Bool'
|   |-BinaryOperator 0x55a54b506e90 <line:725:3, col:15> 'int' '='
|   | |-DeclRefExpr 0x55a54b506e38 <col:3> 'int' lvalue Var 0x55a54b5051b8 'y$mem_tmp' 'int'
|   | `-ImplicitCastExpr 0x55a54b506e78 <col:15> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x55a54b506e58 <col:15> 'int' lvalue Var 0x55a54b5050a0 'y' 'int'
|   |-BinaryOperator 0x55a54b5072c8 <line:726:3, col:162> 'int' '='
|   | |-DeclRefExpr 0x55a54b506eb0 <col:3> 'int' lvalue Var 0x55a54b5050a0 'y' 'int'
|   | `-ConditionalOperator 0x55a54b507298 <col:7, col:162> 'int'
|   |   |-BinaryOperator 0x55a54b5070c0 <col:7, col:84> 'int' '||'
|   |   | |-BinaryOperator 0x55a54b506fe0 <col:7, col:46> 'int' '||'
|   |   | | |-UnaryOperator 0x55a54b506f08 <col:7, col:8> 'int' prefix '!' cannot overflow
|   |   | | | `-ImplicitCastExpr 0x55a54b506ef0 <col:8> '_Bool' <LValueToRValue>
|   |   | | |   `-DeclRefExpr 0x55a54b506ed0 <col:8> '_Bool' lvalue Var 0x55a54b505768 'y$w_buff0_used' '_Bool'
|   |   | | `-BinaryOperator 0x55a54b506fc0 <col:26, col:46> 'int' '&&'
|   |   | |   |-UnaryOperator 0x55a54b506f58 <col:26, col:27> 'int' prefix '!' cannot overflow
|   |   | |   | `-ImplicitCastExpr 0x55a54b506f40 <col:27> '_Bool' <LValueToRValue>
|   |   | |   |   `-DeclRefExpr 0x55a54b506f20 <col:27> '_Bool' lvalue Var 0x55a54b5052a8 'y$r_buff0_thd1' '_Bool'
|   |   | |   `-UnaryOperator 0x55a54b506fa8 <col:45, col:46> 'int' prefix '!' cannot overflow
|   |   | |     `-ImplicitCastExpr 0x55a54b506f90 <col:46> '_Bool' <LValueToRValue>
|   |   | |       `-DeclRefExpr 0x55a54b506f70 <col:46> '_Bool' lvalue Var 0x55a54b505860 'y$w_buff1_used' '_Bool'
|   |   | `-BinaryOperator 0x55a54b5070a0 <col:64, col:84> 'int' '&&'
|   |   |   |-UnaryOperator 0x55a54b507038 <col:64, col:65> 'int' prefix '!' cannot overflow
|   |   |   | `-ImplicitCastExpr 0x55a54b507020 <col:65> '_Bool' <LValueToRValue>
|   |   |   |   `-DeclRefExpr 0x55a54b507000 <col:65> '_Bool' lvalue Var 0x55a54b5052a8 'y$r_buff0_thd1' '_Bool'
|   |   |   `-UnaryOperator 0x55a54b507088 <col:83, col:84> 'int' prefix '!' cannot overflow
|   |   |     `-ImplicitCastExpr 0x55a54b507070 <col:84> '_Bool' <LValueToRValue>
|   |   |       `-DeclRefExpr 0x55a54b507050 <col:84> '_Bool' lvalue Var 0x55a54b505488 'y$r_buff1_thd1' '_Bool'
|   |   |-ImplicitCastExpr 0x55a54b507280 <col:101> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x55a54b5070e0 <col:101> 'int' lvalue Var 0x55a54b5050a0 'y' 'int'
|   |   `-ParenExpr 0x55a54b507260 <col:105, col:162> 'int'
|   |     `-ConditionalOperator 0x55a54b507230 <col:106, col:153> 'int'
|   |       |-BinaryOperator 0x55a54b5071a0 <col:106, col:124> 'int' '&&'
|   |       | |-ImplicitCastExpr 0x55a54b507158 <col:106> 'int' <IntegralCast>
|   |       | | `-ImplicitCastExpr 0x55a54b507140 <col:106> '_Bool' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x55a54b507100 <col:106> '_Bool' lvalue Var 0x55a54b505768 'y$w_buff0_used' '_Bool'
|   |       | `-ImplicitCastExpr 0x55a54b507188 <col:124> 'int' <IntegralCast>
|   |       |   `-ImplicitCastExpr 0x55a54b507170 <col:124> '_Bool' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x55a54b507120 <col:124> '_Bool' lvalue Var 0x55a54b5052a8 'y$r_buff0_thd1' '_Bool'
|   |       |-ImplicitCastExpr 0x55a54b507200 <col:141> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x55a54b5071c0 <col:141> 'int' lvalue Var 0x55a54b5056f0 'y$w_buff0' 'int'
|   |       `-ImplicitCastExpr 0x55a54b507218 <col:153> 'int' <LValueToRValue>
|   |         `-DeclRefExpr 0x55a54b5071e0 <col:153> 'int' lvalue Var 0x55a54b5057e8 'y$w_buff1' 'int'
|   |-BinaryOperator 0x55a54b5077d8 <line:727:3, col:208> 'int' '='
|   | |-DeclRefExpr 0x55a54b5072e8 <col:3> 'int' lvalue Var 0x55a54b5056f0 'y$w_buff0' 'int'
|   | `-ConditionalOperator 0x55a54b5077a8 <col:15, col:208> 'int'
|   |   |-ImplicitCastExpr 0x55a54b507778 <col:15> 'int' <IntegralCast>
|   |   | `-ImplicitCastExpr 0x55a54b507760 <col:15> '_Bool' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x55a54b507308 <col:15> '_Bool' lvalue Var 0x55a54b5059c8 'weak$$choice2' '_Bool'
|   |   |-ImplicitCastExpr 0x55a54b507790 <col:31> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x55a54b507328 <col:31> 'int' lvalue Var 0x55a54b5056f0 'y$w_buff0' 'int'
|   |   `-ParenExpr 0x55a54b507740 <col:43, col:208> 'int'
|   |     `-ConditionalOperator 0x55a54b507710 <col:44, col:207> 'int'
|   |       |-BinaryOperator 0x55a54b507538 <col:44, col:121> 'int' '||'
|   |       | |-BinaryOperator 0x55a54b507458 <col:44, col:83> 'int' '||'
|   |       | | |-UnaryOperator 0x55a54b507380 <col:44, col:45> 'int' prefix '!' cannot overflow
|   |       | | | `-ImplicitCastExpr 0x55a54b507368 <col:45> '_Bool' <LValueToRValue>
|   |       | | |   `-DeclRefExpr 0x55a54b507348 <col:45> '_Bool' lvalue Var 0x55a54b505768 'y$w_buff0_used' '_Bool'
|   |       | | `-BinaryOperator 0x55a54b507438 <col:63, col:83> 'int' '&&'
|   |       | |   |-UnaryOperator 0x55a54b5073d0 <col:63, col:64> 'int' prefix '!' cannot overflow
|   |       | |   | `-ImplicitCastExpr 0x55a54b5073b8 <col:64> '_Bool' <LValueToRValue>
|   |       | |   |   `-DeclRefExpr 0x55a54b507398 <col:64> '_Bool' lvalue Var 0x55a54b5052a8 'y$r_buff0_thd1' '_Bool'
|   |       | |   `-UnaryOperator 0x55a54b507420 <col:82, col:83> 'int' prefix '!' cannot overflow
|   |       | |     `-ImplicitCastExpr 0x55a54b507408 <col:83> '_Bool' <LValueToRValue>
|   |       | |       `-DeclRefExpr 0x55a54b5073e8 <col:83> '_Bool' lvalue Var 0x55a54b505860 'y$w_buff1_used' '_Bool'
|   |       | `-BinaryOperator 0x55a54b507518 <col:101, col:121> 'int' '&&'
|   |       |   |-UnaryOperator 0x55a54b5074b0 <col:101, col:102> 'int' prefix '!' cannot overflow
|   |       |   | `-ImplicitCastExpr 0x55a54b507498 <col:102> '_Bool' <LValueToRValue>
|   |       |   |   `-DeclRefExpr 0x55a54b507478 <col:102> '_Bool' lvalue Var 0x55a54b5052a8 'y$r_buff0_thd1' '_Bool'
|   |       |   `-UnaryOperator 0x55a54b507500 <col:120, col:121> 'int' prefix '!' cannot overflow
|   |       |     `-ImplicitCastExpr 0x55a54b5074e8 <col:121> '_Bool' <LValueToRValue>
|   |       |       `-DeclRefExpr 0x55a54b5074c8 <col:121> '_Bool' lvalue Var 0x55a54b505488 'y$r_buff1_thd1' '_Bool'
|   |       |-ImplicitCastExpr 0x55a54b5076f8 <col:138> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x55a54b507558 <col:138> 'int' lvalue Var 0x55a54b5056f0 'y$w_buff0' 'int'
|   |       `-ParenExpr 0x55a54b5076d8 <col:150, col:207> 'int'
|   |         `-ConditionalOperator 0x55a54b5076a8 <col:151, col:198> 'int'
|   |           |-BinaryOperator 0x55a54b507618 <col:151, col:169> 'int' '&&'
|   |           | |-ImplicitCastExpr 0x55a54b5075d0 <col:151> 'int' <IntegralCast>
|   |           | | `-ImplicitCastExpr 0x55a54b5075b8 <col:151> '_Bool' <LValueToRValue>
|   |           | |   `-DeclRefExpr 0x55a54b507578 <col:151> '_Bool' lvalue Var 0x55a54b505768 'y$w_buff0_used' '_Bool'
|   |           | `-ImplicitCastExpr 0x55a54b507600 <col:169> 'int' <IntegralCast>
|   |           |   `-ImplicitCastExpr 0x55a54b5075e8 <col:169> '_Bool' <LValueToRValue>
|   |           |     `-DeclRefExpr 0x55a54b507598 <col:169> '_Bool' lvalue Var 0x55a54b5052a8 'y$r_buff0_thd1' '_Bool'
|   |           |-ImplicitCastExpr 0x55a54b507678 <col:186> 'int' <LValueToRValue>
|   |           | `-DeclRefExpr 0x55a54b507638 <col:186> 'int' lvalue Var 0x55a54b5056f0 'y$w_buff0' 'int'
|   |           `-ImplicitCastExpr 0x55a54b507690 <col:198> 'int' <LValueToRValue>
|   |             `-DeclRefExpr 0x55a54b507658 <col:198> 'int' lvalue Var 0x55a54b5056f0 'y$w_buff0' 'int'
|   |-BinaryOperator 0x55a54b507d08 <line:728:3, col:208> 'int' '='
|   | |-DeclRefExpr 0x55a54b5077f8 <col:3> 'int' lvalue Var 0x55a54b5057e8 'y$w_buff1' 'int'
|   | `-ConditionalOperator 0x55a54b507cd8 <col:15, col:208> 'int'
|   |   |-ImplicitCastExpr 0x55a54b507ca8 <col:15> 'int' <IntegralCast>
|   |   | `-ImplicitCastExpr 0x55a54b507c90 <col:15> '_Bool' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x55a54b507818 <col:15> '_Bool' lvalue Var 0x55a54b5059c8 'weak$$choice2' '_Bool'
|   |   |-ImplicitCastExpr 0x55a54b507cc0 <col:31> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x55a54b507838 <col:31> 'int' lvalue Var 0x55a54b5057e8 'y$w_buff1' 'int'
|   |   `-ParenExpr 0x55a54b507c70 <col:43, col:208> 'int'
|   |     `-ConditionalOperator 0x55a54b507c40 <col:44, col:207> 'int'
|   |       |-BinaryOperator 0x55a54b507a48 <col:44, col:121> 'int' '||'
|   |       | |-BinaryOperator 0x55a54b507968 <col:44, col:83> 'int' '||'
|   |       | | |-UnaryOperator 0x55a54b507890 <col:44, col:45> 'int' prefix '!' cannot overflow
|   |       | | | `-ImplicitCastExpr 0x55a54b507878 <col:45> '_Bool' <LValueToRValue>
|   |       | | |   `-DeclRefExpr 0x55a54b507858 <col:45> '_Bool' lvalue Var 0x55a54b505768 'y$w_buff0_used' '_Bool'
|   |       | | `-BinaryOperator 0x55a54b507948 <col:63, col:83> 'int' '&&'
|   |       | |   |-UnaryOperator 0x55a54b5078e0 <col:63, col:64> 'int' prefix '!' cannot overflow
|   |       | |   | `-ImplicitCastExpr 0x55a54b5078c8 <col:64> '_Bool' <LValueToRValue>
|   |       | |   |   `-DeclRefExpr 0x55a54b5078a8 <col:64> '_Bool' lvalue Var 0x55a54b5052a8 'y$r_buff0_thd1' '_Bool'
|   |       | |   `-UnaryOperator 0x55a54b507930 <col:82, col:83> 'int' prefix '!' cannot overflow
|   |       | |     `-ImplicitCastExpr 0x55a54b507918 <col:83> '_Bool' <LValueToRValue>
|   |       | |       `-DeclRefExpr 0x55a54b5078f8 <col:83> '_Bool' lvalue Var 0x55a54b505860 'y$w_buff1_used' '_Bool'
|   |       | `-BinaryOperator 0x55a54b507a28 <col:101, col:121> 'int' '&&'
|   |       |   |-UnaryOperator 0x55a54b5079c0 <col:101, col:102> 'int' prefix '!' cannot overflow
|   |       |   | `-ImplicitCastExpr 0x55a54b5079a8 <col:102> '_Bool' <LValueToRValue>
|   |       |   |   `-DeclRefExpr 0x55a54b507988 <col:102> '_Bool' lvalue Var 0x55a54b5052a8 'y$r_buff0_thd1' '_Bool'
|   |       |   `-UnaryOperator 0x55a54b507a10 <col:120, col:121> 'int' prefix '!' cannot overflow
|   |       |     `-ImplicitCastExpr 0x55a54b5079f8 <col:121> '_Bool' <LValueToRValue>
|   |       |       `-DeclRefExpr 0x55a54b5079d8 <col:121> '_Bool' lvalue Var 0x55a54b505488 'y$r_buff1_thd1' '_Bool'
|   |       |-ImplicitCastExpr 0x55a54b507c28 <col:138> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x55a54b507a68 <col:138> 'int' lvalue Var 0x55a54b5057e8 'y$w_buff1' 'int'
|   |       `-ParenExpr 0x55a54b507c08 <col:150, col:207> 'int'
|   |         `-ConditionalOperator 0x55a54b507bd8 <col:151, col:198> 'int'
|   |           |-BinaryOperator 0x55a54b507b48 <col:151, col:169> 'int' '&&'
|   |           | |-ImplicitCastExpr 0x55a54b507ae0 <col:151> 'int' <IntegralCast>
|   |           | | `-ImplicitCastExpr 0x55a54b507ac8 <col:151> '_Bool' <LValueToRValue>
|   |           | |   `-DeclRefExpr 0x55a54b507a88 <col:151> '_Bool' lvalue Var 0x55a54b505768 'y$w_buff0_used' '_Bool'
|   |           | `-ImplicitCastExpr 0x55a54b507b30 <col:169> 'int' <IntegralCast>
|   |           |   `-ImplicitCastExpr 0x55a54b507af8 <col:169> '_Bool' <LValueToRValue>
|   |           |     `-DeclRefExpr 0x55a54b507aa8 <col:169> '_Bool' lvalue Var 0x55a54b5052a8 'y$r_buff0_thd1' '_Bool'
|   |           |-ImplicitCastExpr 0x55a54b507ba8 <col:186> 'int' <LValueToRValue>
|   |           | `-DeclRefExpr 0x55a54b507b68 <col:186> 'int' lvalue Var 0x55a54b5057e8 'y$w_buff1' 'int'
|   |           `-ImplicitCastExpr 0x55a54b507bc0 <col:198> 'int' <LValueToRValue>
|   |             `-DeclRefExpr 0x55a54b507b88 <col:198> 'int' lvalue Var 0x55a54b5057e8 'y$w_buff1' 'int'
|   |-BinaryOperator 0x55a54b5082b0 <line:729:3, col:227> '_Bool' '='
|   | |-DeclRefExpr 0x55a54b507d28 <col:3> '_Bool' lvalue Var 0x55a54b505768 'y$w_buff0_used' '_Bool'
|   | `-ImplicitCastExpr 0x55a54b508298 <col:20, col:227> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55a54b508268 <col:20, col:227> 'int'
|   |     |-ImplicitCastExpr 0x55a54b508220 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x55a54b508208 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x55a54b507d48 <col:20> '_Bool' lvalue Var 0x55a54b5059c8 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x55a54b508250 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x55a54b508238 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x55a54b507d68 <col:36> '_Bool' lvalue Var 0x55a54b505768 'y$w_buff0_used' '_Bool'
|   |     `-ParenExpr 0x55a54b5081e8 <col:53, col:227> 'int'
|   |       `-ConditionalOperator 0x55a54b5081b8 <col:54, col:226> 'int'
|   |         |-BinaryOperator 0x55a54b507f78 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x55a54b507e98 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x55a54b507dc0 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x55a54b507da8 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x55a54b507d88 <col:55> '_Bool' lvalue Var 0x55a54b505768 'y$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x55a54b507e78 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x55a54b507e10 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x55a54b507df8 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x55a54b507dd8 <col:74> '_Bool' lvalue Var 0x55a54b5052a8 'y$r_buff0_thd1' '_Bool'
|   |         | |   `-UnaryOperator 0x55a54b507e60 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x55a54b507e48 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x55a54b507e28 <col:93> '_Bool' lvalue Var 0x55a54b505860 'y$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x55a54b507f58 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x55a54b507ef0 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x55a54b507ed8 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x55a54b507eb8 <col:112> '_Bool' lvalue Var 0x55a54b5052a8 'y$r_buff0_thd1' '_Bool'
|   |         |   `-UnaryOperator 0x55a54b507f40 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x55a54b507f28 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x55a54b507f08 <col:131> '_Bool' lvalue Var 0x55a54b505488 'y$r_buff1_thd1' '_Bool'
|   |         |-ImplicitCastExpr 0x55a54b5081a0 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x55a54b508188 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x55a54b507f98 <col:148> '_Bool' lvalue Var 0x55a54b505768 'y$w_buff0_used' '_Bool'
|   |         `-ParenExpr 0x55a54b508168 <col:165, col:226> 'int'
|   |           `-ConditionalOperator 0x55a54b508138 <col:166, col:212> 'int'
|   |             |-BinaryOperator 0x55a54b508058 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x55a54b508010 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x55a54b507ff8 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x55a54b507fb8 <col:166> '_Bool' lvalue Var 0x55a54b505768 'y$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x55a54b508040 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x55a54b508028 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x55a54b507fd8 <col:184> '_Bool' lvalue Var 0x55a54b5052a8 'y$r_buff0_thd1' '_Bool'
|   |             |-ImplicitCastExpr 0x55a54b5080f0 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x55a54b5080a8 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x55a54b508078 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x55a54b508120 <col:212> 'int' <IntegralCast>
|   |               `-ImplicitCastExpr 0x55a54b508108 <col:212> '_Bool' <LValueToRValue>
|   |                 `-DeclRefExpr 0x55a54b5080d0 <col:212> '_Bool' lvalue Var 0x55a54b505768 'y$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x55a54b508878 <line:730:3, col:221> '_Bool' '='
|   | |-DeclRefExpr 0x55a54b5082d0 <col:3> '_Bool' lvalue Var 0x55a54b505860 'y$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x55a54b508860 <col:20, col:221> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55a54b508830 <col:20, col:221> 'int'
|   |     |-ImplicitCastExpr 0x55a54b5087e8 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x55a54b5087d0 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x55a54b5082f0 <col:20> '_Bool' lvalue Var 0x55a54b5059c8 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x55a54b508818 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x55a54b508800 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x55a54b508310 <col:36> '_Bool' lvalue Var 0x55a54b505860 'y$w_buff1_used' '_Bool'
|   |     `-ParenExpr 0x55a54b5087b0 <col:53, col:221> 'int'
|   |       `-ConditionalOperator 0x55a54b508780 <col:54, col:220> 'int'
|   |         |-BinaryOperator 0x55a54b508520 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x55a54b508440 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x55a54b508368 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x55a54b508350 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x55a54b508330 <col:55> '_Bool' lvalue Var 0x55a54b505768 'y$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x55a54b508420 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x55a54b5083b8 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x55a54b5083a0 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x55a54b508380 <col:74> '_Bool' lvalue Var 0x55a54b5052a8 'y$r_buff0_thd1' '_Bool'
|   |         | |   `-UnaryOperator 0x55a54b508408 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x55a54b5083f0 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x55a54b5083d0 <col:93> '_Bool' lvalue Var 0x55a54b505860 'y$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x55a54b508500 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x55a54b508498 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x55a54b508480 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x55a54b508460 <col:112> '_Bool' lvalue Var 0x55a54b5052a8 'y$r_buff0_thd1' '_Bool'
|   |         |   `-UnaryOperator 0x55a54b5084e8 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x55a54b5084d0 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x55a54b5084b0 <col:131> '_Bool' lvalue Var 0x55a54b505488 'y$r_buff1_thd1' '_Bool'
|   |         |-ImplicitCastExpr 0x55a54b508768 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x55a54b508750 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x55a54b508540 <col:148> '_Bool' lvalue Var 0x55a54b505860 'y$w_buff1_used' '_Bool'
|   |         `-ParenExpr 0x55a54b508730 <col:165, col:220> 'int'
|   |           `-ConditionalOperator 0x55a54b508700 <col:166, col:219> 'int'
|   |             |-BinaryOperator 0x55a54b508600 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x55a54b5085b8 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x55a54b5085a0 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x55a54b508560 <col:166> '_Bool' lvalue Var 0x55a54b505768 'y$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x55a54b5085e8 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x55a54b5085d0 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x55a54b508580 <col:184> '_Bool' lvalue Var 0x55a54b5052a8 'y$r_buff0_thd1' '_Bool'
|   |             |-ImplicitCastExpr 0x55a54b5086d0 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x55a54b508650 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x55a54b508620 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x55a54b5086e8 <col:212, col:219> 'int' <IntegralCast>
|   |               `-CStyleCastExpr 0x55a54b5086a8 <col:212, col:219> '_Bool' <IntegralToBoolean>
|   |                 `-IntegerLiteral 0x55a54b508678 <col:219> 'int' 0
|   |-BinaryOperator 0x55a54b508e38 <line:731:3, col:227> '_Bool' '='
|   | |-DeclRefExpr 0x55a54b508898 <col:3> '_Bool' lvalue Var 0x55a54b5052a8 'y$r_buff0_thd1' '_Bool'
|   | `-ImplicitCastExpr 0x55a54b508e20 <col:20, col:227> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55a54b508df0 <col:20, col:227> 'int'
|   |     |-ImplicitCastExpr 0x55a54b508da8 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x55a54b508d90 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x55a54b5088b8 <col:20> '_Bool' lvalue Var 0x55a54b5059c8 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x55a54b508dd8 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x55a54b508dc0 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x55a54b5088d8 <col:36> '_Bool' lvalue Var 0x55a54b5052a8 'y$r_buff0_thd1' '_Bool'
|   |     `-ParenExpr 0x55a54b508d70 <col:53, col:227> 'int'
|   |       `-ConditionalOperator 0x55a54b508d40 <col:54, col:226> 'int'
|   |         |-BinaryOperator 0x55a54b508ae8 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x55a54b508a08 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x55a54b508930 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x55a54b508918 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x55a54b5088f8 <col:55> '_Bool' lvalue Var 0x55a54b505768 'y$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x55a54b5089e8 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x55a54b508980 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x55a54b508968 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x55a54b508948 <col:74> '_Bool' lvalue Var 0x55a54b5052a8 'y$r_buff0_thd1' '_Bool'
|   |         | |   `-UnaryOperator 0x55a54b5089d0 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x55a54b5089b8 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x55a54b508998 <col:93> '_Bool' lvalue Var 0x55a54b505860 'y$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x55a54b508ac8 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x55a54b508a60 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x55a54b508a48 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x55a54b508a28 <col:112> '_Bool' lvalue Var 0x55a54b5052a8 'y$r_buff0_thd1' '_Bool'
|   |         |   `-UnaryOperator 0x55a54b508ab0 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x55a54b508a98 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x55a54b508a78 <col:131> '_Bool' lvalue Var 0x55a54b505488 'y$r_buff1_thd1' '_Bool'
|   |         |-ImplicitCastExpr 0x55a54b508d28 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x55a54b508d10 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x55a54b508b08 <col:148> '_Bool' lvalue Var 0x55a54b5052a8 'y$r_buff0_thd1' '_Bool'
|   |         `-ParenExpr 0x55a54b508cf0 <col:165, col:226> 'int'
|   |           `-ConditionalOperator 0x55a54b508cc0 <col:166, col:212> 'int'
|   |             |-BinaryOperator 0x55a54b508be0 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x55a54b508b98 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x55a54b508b80 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x55a54b508b40 <col:166> '_Bool' lvalue Var 0x55a54b505768 'y$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x55a54b508bc8 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x55a54b508bb0 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x55a54b508b60 <col:184> '_Bool' lvalue Var 0x55a54b5052a8 'y$r_buff0_thd1' '_Bool'
|   |             |-ImplicitCastExpr 0x55a54b508c78 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x55a54b508c30 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x55a54b508c00 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x55a54b508ca8 <col:212> 'int' <IntegralCast>
|   |               `-ImplicitCastExpr 0x55a54b508c90 <col:212> '_Bool' <LValueToRValue>
|   |                 `-DeclRefExpr 0x55a54b508c58 <col:212> '_Bool' lvalue Var 0x55a54b5052a8 'y$r_buff0_thd1' '_Bool'
|   |-BinaryOperator 0x55a54b509400 <line:732:3, col:221> '_Bool' '='
|   | |-DeclRefExpr 0x55a54b508e58 <col:3> '_Bool' lvalue Var 0x55a54b505488 'y$r_buff1_thd1' '_Bool'
|   | `-ImplicitCastExpr 0x55a54b5093e8 <col:20, col:221> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55a54b5093b8 <col:20, col:221> 'int'
|   |     |-ImplicitCastExpr 0x55a54b509370 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x55a54b509358 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x55a54b508e78 <col:20> '_Bool' lvalue Var 0x55a54b5059c8 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x55a54b5093a0 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x55a54b509388 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x55a54b508e98 <col:36> '_Bool' lvalue Var 0x55a54b505488 'y$r_buff1_thd1' '_Bool'
|   |     `-ParenExpr 0x55a54b509338 <col:53, col:221> 'int'
|   |       `-ConditionalOperator 0x55a54b509308 <col:54, col:220> 'int'
|   |         |-BinaryOperator 0x55a54b5090a8 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x55a54b508fc8 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x55a54b508ef0 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x55a54b508ed8 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x55a54b508eb8 <col:55> '_Bool' lvalue Var 0x55a54b505768 'y$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x55a54b508fa8 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x55a54b508f40 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x55a54b508f28 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x55a54b508f08 <col:74> '_Bool' lvalue Var 0x55a54b5052a8 'y$r_buff0_thd1' '_Bool'
|   |         | |   `-UnaryOperator 0x55a54b508f90 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x55a54b508f78 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x55a54b508f58 <col:93> '_Bool' lvalue Var 0x55a54b505860 'y$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x55a54b509088 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x55a54b509020 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x55a54b509008 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x55a54b508fe8 <col:112> '_Bool' lvalue Var 0x55a54b5052a8 'y$r_buff0_thd1' '_Bool'
|   |         |   `-UnaryOperator 0x55a54b509070 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x55a54b509058 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x55a54b509038 <col:131> '_Bool' lvalue Var 0x55a54b505488 'y$r_buff1_thd1' '_Bool'
|   |         |-ImplicitCastExpr 0x55a54b5092f0 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x55a54b5092d8 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x55a54b5090c8 <col:148> '_Bool' lvalue Var 0x55a54b505488 'y$r_buff1_thd1' '_Bool'
|   |         `-ParenExpr 0x55a54b5092b8 <col:165, col:220> 'int'
|   |           `-ConditionalOperator 0x55a54b509288 <col:166, col:219> 'int'
|   |             |-BinaryOperator 0x55a54b509188 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x55a54b509140 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x55a54b509128 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x55a54b5090e8 <col:166> '_Bool' lvalue Var 0x55a54b505768 'y$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x55a54b509170 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x55a54b509158 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x55a54b509108 <col:184> '_Bool' lvalue Var 0x55a54b5052a8 'y$r_buff0_thd1' '_Bool'
|   |             |-ImplicitCastExpr 0x55a54b509258 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x55a54b5091d8 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x55a54b5091a8 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x55a54b509270 <col:212, col:219> 'int' <IntegralCast>
|   |               `-CStyleCastExpr 0x55a54b509230 <col:212, col:219> '_Bool' <IntegralToBoolean>
|   |                 `-IntegerLiteral 0x55a54b509200 <col:219> 'int' 0
|   |-BinaryOperator 0x55a54b509498 <line:733:3, col:45> '_Bool' '='
|   | |-DeclRefExpr 0x55a54b509420 <col:3> '_Bool' lvalue Var 0x55a54b504990 '__unbuffered_p0_EAX$read_delayed' '_Bool'
|   | `-CStyleCastExpr 0x55a54b509470 <col:38, col:45> '_Bool' <IntegralToBoolean>
|   |   `-IntegerLiteral 0x55a54b509440 <col:45> 'int' 1
|   |-BinaryOperator 0x55a54b509510 <line:734:3, col:43> 'int *' '='
|   | |-DeclRefExpr 0x55a54b5094b8 <col:3> 'int *' lvalue Var 0x55a54b504a10 '__unbuffered_p0_EAX$read_delayed_var' 'int *'
|   | `-UnaryOperator 0x55a54b5094f8 <col:42, col:43> 'int *' prefix '&' cannot overflow
|   |   `-DeclRefExpr 0x55a54b5094d8 <col:43> 'int' lvalue Var 0x55a54b5050a0 'y' 'int'
|   |-BinaryOperator 0x55a54b509588 <line:735:3, col:25> 'int' '='
|   | |-DeclRefExpr 0x55a54b509530 <col:3> 'int' lvalue Var 0x55a54b504440 '__unbuffered_p0_EAX' 'int'
|   | `-ImplicitCastExpr 0x55a54b509570 <col:25> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x55a54b509550 <col:25> 'int' lvalue Var 0x55a54b5050a0 'y' 'int'
|   |-BinaryOperator 0x55a54b5096b8 <line:736:3, col:37> 'int' '='
|   | |-DeclRefExpr 0x55a54b5095a8 <col:3> 'int' lvalue Var 0x55a54b5050a0 'y' 'int'
|   | `-ConditionalOperator 0x55a54b509688 <col:7, col:37> 'int'
|   |   |-ImplicitCastExpr 0x55a54b509640 <col:7> 'int' <IntegralCast>
|   |   | `-ImplicitCastExpr 0x55a54b509628 <col:7> '_Bool' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x55a54b5095c8 <col:7> '_Bool' lvalue Var 0x55a54b505138 'y$flush_delayed' '_Bool'
|   |   |-ImplicitCastExpr 0x55a54b509658 <col:25> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x55a54b5095e8 <col:25> 'int' lvalue Var 0x55a54b5051b8 'y$mem_tmp' 'int'
|   |   `-ImplicitCastExpr 0x55a54b509670 <col:37> 'int' <LValueToRValue>
|   |     `-DeclRefExpr 0x55a54b509608 <col:37> 'int' lvalue Var 0x55a54b5050a0 'y' 'int'
|   |-BinaryOperator 0x55a54b509750 <line:737:3, col:28> '_Bool' '='
|   | |-DeclRefExpr 0x55a54b5096d8 <col:3> '_Bool' lvalue Var 0x55a54b505138 'y$flush_delayed' '_Bool'
|   | `-CStyleCastExpr 0x55a54b509728 <col:21, col:28> '_Bool' <IntegralToBoolean>
|   |   `-IntegerLiteral 0x55a54b5096f8 <col:28> 'int' 0
|   |-CallExpr 0x55a54b5097a8 <line:738:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x55a54b509790 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55a54b509770 <col:3> 'void ()' Function 0x55a54b4ab060 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x55a54b509800 <line:739:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x55a54b5097e8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55a54b5097c8 <col:3> 'void ()' Function 0x55a54b4aafa0 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x55a54b509860 <line:740:3, col:7> 'int' '='
|   | |-DeclRefExpr 0x55a54b509820 <col:3> 'int' lvalue Var 0x55a54b504f80 'x' 'int'
|   | `-IntegerLiteral 0x55a54b509840 <col:7> 'int' 1
|   |-CallExpr 0x55a54b5098b8 <line:741:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x55a54b5098a0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55a54b509880 <col:3> 'void ()' Function 0x55a54b4ab060 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x55a54b509910 <line:742:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x55a54b5098f8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55a54b5098d8 <col:3> 'void ()' Function 0x55a54b4aafa0 '__VERIFIER_atomic_begin' 'void ()'
|   |-CallExpr 0x55a54b509968 <line:743:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x55a54b509950 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55a54b509930 <col:3> 'void ()' Function 0x55a54b4ab060 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x55a54b5099c0 <line:744:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x55a54b5099a8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55a54b509988 <col:3> 'void ()' Function 0x55a54b4aafa0 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x55a54b509a78 <line:745:3, col:41> 'int' '='
|   | |-DeclRefExpr 0x55a54b5099e0 <col:3> 'int' lvalue Var 0x55a54b504320 '__unbuffered_cnt' 'int'
|   | `-BinaryOperator 0x55a54b509a58 <col:22, col:41> 'int' '+'
|   |   |-ImplicitCastExpr 0x55a54b509a40 <col:22> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x55a54b509a00 <col:22> 'int' lvalue Var 0x55a54b504320 '__unbuffered_cnt' 'int'
|   |   `-IntegerLiteral 0x55a54b509a20 <col:41> 'int' 1
|   |-CallExpr 0x55a54b509ad0 <line:746:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x55a54b509ab8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55a54b509a98 <col:3> 'void ()' Function 0x55a54b4ab060 '__VERIFIER_atomic_end' 'void ()'
|   `-ReturnStmt 0x55a54b509b88 <line:747:3, col:36>
|     `-CallExpr 0x55a54b509b68 <col:10, col:36> 'void *'
|       `-ImplicitCastExpr 0x55a54b509b50 <col:10> 'void *(*)(void)' <FunctionToPointerDecay>
|         `-DeclRefExpr 0x55a54b509af0 <col:10> 'void *(void)' Function 0x55a54b4aaab8 '__VERIFIER_nondet_pointer' 'void *(void)'
|-FunctionDecl 0x55a54b509d30 prev 0x55a54b503e48 <line:749:1, line:768:1> line:749:8 used P1 'void *(void *)'
| |-ParmVarDecl 0x55a54b509c98 <col:11, col:17> col:17 arg 'void *'
| `-CompoundStmt 0x55a54b50af70 <line:750:1, line:768:1>
|   |-CallExpr 0x55a54b509e10 <line:751:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x55a54b509df8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55a54b509dd8 <col:3> 'void ()' Function 0x55a54b4aafa0 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x55a54b509e88 <line:752:3, col:25> 'int' '='
|   | |-DeclRefExpr 0x55a54b509e30 <col:3> 'int' lvalue Var 0x55a54b504d70 '__unbuffered_p1_EAX' 'int'
|   | `-ImplicitCastExpr 0x55a54b509e70 <col:25> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x55a54b509e50 <col:25> 'int' lvalue Var 0x55a54b504f80 'x' 'int'
|   |-CallExpr 0x55a54b509ee0 <line:753:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x55a54b509ec8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55a54b509ea8 <col:3> 'void ()' Function 0x55a54b4ab060 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x55a54b509f38 <line:754:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x55a54b509f20 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55a54b509f00 <col:3> 'void ()' Function 0x55a54b4aafa0 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x55a54b509f98 <line:755:3, col:7> 'int' '='
|   | |-DeclRefExpr 0x55a54b509f58 <col:3> 'int' lvalue Var 0x55a54b5050a0 'y' 'int'
|   | `-IntegerLiteral 0x55a54b509f78 <col:7> 'int' 1
|   |-CallExpr 0x55a54b509ff0 <line:756:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x55a54b509fd8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55a54b509fb8 <col:3> 'void ()' Function 0x55a54b4ab060 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x55a54b50a048 <line:757:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x55a54b50a030 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55a54b50a010 <col:3> 'void ()' Function 0x55a54b4aafa0 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x55a54b50a330 <line:758:3, col:103> 'int' '='
|   | |-DeclRefExpr 0x55a54b50a068 <col:3> 'int' lvalue Var 0x55a54b5050a0 'y' 'int'
|   | `-ConditionalOperator 0x55a54b50a300 <col:7, col:103> 'int'
|   |   |-BinaryOperator 0x55a54b50a128 <col:7, col:25> 'int' '&&'
|   |   | |-ImplicitCastExpr 0x55a54b50a0e0 <col:7> 'int' <IntegralCast>
|   |   | | `-ImplicitCastExpr 0x55a54b50a0c8 <col:7> '_Bool' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x55a54b50a088 <col:7> '_Bool' lvalue Var 0x55a54b505768 'y$w_buff0_used' '_Bool'
|   |   | `-ImplicitCastExpr 0x55a54b50a110 <col:25> 'int' <IntegralCast>
|   |   |   `-ImplicitCastExpr 0x55a54b50a0f8 <col:25> '_Bool' <LValueToRValue>
|   |   |     `-DeclRefExpr 0x55a54b50a0a8 <col:25> '_Bool' lvalue Var 0x55a54b505320 'y$r_buff0_thd2' '_Bool'
|   |   |-ImplicitCastExpr 0x55a54b50a2e8 <col:42> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x55a54b50a148 <col:42> 'int' lvalue Var 0x55a54b5056f0 'y$w_buff0' 'int'
|   |   `-ParenExpr 0x55a54b50a2c8 <col:54, col:103> 'int'
|   |     `-ConditionalOperator 0x55a54b50a298 <col:55, col:102> 'int'
|   |       |-BinaryOperator 0x55a54b50a208 <col:55, col:73> 'int' '&&'
|   |       | |-ImplicitCastExpr 0x55a54b50a1c0 <col:55> 'int' <IntegralCast>
|   |       | | `-ImplicitCastExpr 0x55a54b50a1a8 <col:55> '_Bool' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x55a54b50a168 <col:55> '_Bool' lvalue Var 0x55a54b505860 'y$w_buff1_used' '_Bool'
|   |       | `-ImplicitCastExpr 0x55a54b50a1f0 <col:73> 'int' <IntegralCast>
|   |       |   `-ImplicitCastExpr 0x55a54b50a1d8 <col:73> '_Bool' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x55a54b50a188 <col:73> '_Bool' lvalue Var 0x55a54b505500 'y$r_buff1_thd2' '_Bool'
|   |       |-ImplicitCastExpr 0x55a54b50a268 <col:90> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x55a54b50a228 <col:90> 'int' lvalue Var 0x55a54b5057e8 'y$w_buff1' 'int'
|   |       `-ImplicitCastExpr 0x55a54b50a280 <col:102> 'int' <LValueToRValue>
|   |         `-DeclRefExpr 0x55a54b50a248 <col:102> 'int' lvalue Var 0x55a54b5050a0 'y' 'int'
|   |-BinaryOperator 0x55a54b50a538 <line:759:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x55a54b50a350 <col:3> '_Bool' lvalue Var 0x55a54b505768 'y$w_buff0_used' '_Bool'
|   | `-ImplicitCastExpr 0x55a54b50a520 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55a54b50a4f0 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x55a54b50a410 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x55a54b50a3c8 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x55a54b50a3b0 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x55a54b50a370 <col:20> '_Bool' lvalue Var 0x55a54b505768 'y$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x55a54b50a3f8 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x55a54b50a3e0 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x55a54b50a390 <col:38> '_Bool' lvalue Var 0x55a54b505320 'y$r_buff0_thd2' '_Bool'
|   |     |-ImplicitCastExpr 0x55a54b50a4a8 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x55a54b50a460 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x55a54b50a430 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x55a54b50a4d8 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x55a54b50a4c0 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x55a54b50a488 <col:66> '_Bool' lvalue Var 0x55a54b505768 'y$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x55a54b50a820 <line:760:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x55a54b50a558 <col:3> '_Bool' lvalue Var 0x55a54b505860 'y$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x55a54b50a808 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55a54b50a7d8 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x55a54b50a6f8 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x55a54b50a618 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x55a54b50a5d0 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x55a54b50a5b8 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x55a54b50a578 <col:20> '_Bool' lvalue Var 0x55a54b505768 'y$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x55a54b50a600 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x55a54b50a5e8 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x55a54b50a598 <col:38> '_Bool' lvalue Var 0x55a54b505320 'y$r_buff0_thd2' '_Bool'
|   |     | `-BinaryOperator 0x55a54b50a6d8 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x55a54b50a690 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x55a54b50a678 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x55a54b50a638 <col:56> '_Bool' lvalue Var 0x55a54b505860 'y$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x55a54b50a6c0 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x55a54b50a6a8 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x55a54b50a658 <col:74> '_Bool' lvalue Var 0x55a54b505500 'y$r_buff1_thd2' '_Bool'
|   |     |-ImplicitCastExpr 0x55a54b50a790 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x55a54b50a748 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x55a54b50a718 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x55a54b50a7c0 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x55a54b50a7a8 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x55a54b50a770 <col:102> '_Bool' lvalue Var 0x55a54b505860 'y$w_buff1_used' '_Bool'
|   |-BinaryOperator 0x55a54b50aa28 <line:761:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x55a54b50a840 <col:3> '_Bool' lvalue Var 0x55a54b505320 'y$r_buff0_thd2' '_Bool'
|   | `-ImplicitCastExpr 0x55a54b50aa10 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55a54b50a9e0 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x55a54b50a900 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x55a54b50a8b8 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x55a54b50a8a0 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x55a54b50a860 <col:20> '_Bool' lvalue Var 0x55a54b505768 'y$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x55a54b50a8e8 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x55a54b50a8d0 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x55a54b50a880 <col:38> '_Bool' lvalue Var 0x55a54b505320 'y$r_buff0_thd2' '_Bool'
|   |     |-ImplicitCastExpr 0x55a54b50a998 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x55a54b50a950 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x55a54b50a920 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x55a54b50a9c8 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x55a54b50a9b0 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x55a54b50a978 <col:66> '_Bool' lvalue Var 0x55a54b505320 'y$r_buff0_thd2' '_Bool'
|   |-BinaryOperator 0x55a54b50ad28 <line:762:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x55a54b50aa48 <col:3> '_Bool' lvalue Var 0x55a54b505500 'y$r_buff1_thd2' '_Bool'
|   | `-ImplicitCastExpr 0x55a54b50ad10 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55a54b50ace0 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x55a54b50ac00 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x55a54b50ab08 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x55a54b50aac0 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x55a54b50aaa8 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x55a54b50aa68 <col:20> '_Bool' lvalue Var 0x55a54b505768 'y$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x55a54b50aaf0 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x55a54b50aad8 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x55a54b50aa88 <col:38> '_Bool' lvalue Var 0x55a54b505320 'y$r_buff0_thd2' '_Bool'
|   |     | `-BinaryOperator 0x55a54b50abe0 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x55a54b50ab98 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x55a54b50ab80 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x55a54b50ab28 <col:56> '_Bool' lvalue Var 0x55a54b505860 'y$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x55a54b50abc8 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x55a54b50abb0 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x55a54b50ab60 <col:74> '_Bool' lvalue Var 0x55a54b505500 'y$r_buff1_thd2' '_Bool'
|   |     |-ImplicitCastExpr 0x55a54b50ac98 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x55a54b50ac50 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x55a54b50ac20 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x55a54b50acc8 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x55a54b50acb0 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x55a54b50ac78 <col:102> '_Bool' lvalue Var 0x55a54b505500 'y$r_buff1_thd2' '_Bool'
|   |-CallExpr 0x55a54b50ad80 <line:763:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x55a54b50ad68 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55a54b50ad48 <col:3> 'void ()' Function 0x55a54b4ab060 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x55a54b50add8 <line:764:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x55a54b50adc0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55a54b50ada0 <col:3> 'void ()' Function 0x55a54b4aafa0 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x55a54b50ae90 <line:765:3, col:41> 'int' '='
|   | |-DeclRefExpr 0x55a54b50adf8 <col:3> 'int' lvalue Var 0x55a54b504320 '__unbuffered_cnt' 'int'
|   | `-BinaryOperator 0x55a54b50ae70 <col:22, col:41> 'int' '+'
|   |   |-ImplicitCastExpr 0x55a54b50ae58 <col:22> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x55a54b50ae18 <col:22> 'int' lvalue Var 0x55a54b504320 '__unbuffered_cnt' 'int'
|   |   `-IntegerLiteral 0x55a54b50ae38 <col:41> 'int' 1
|   |-CallExpr 0x55a54b50aee8 <line:766:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x55a54b50aed0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55a54b50aeb0 <col:3> 'void ()' Function 0x55a54b4ab060 '__VERIFIER_atomic_end' 'void ()'
|   `-ReturnStmt 0x55a54b50af60 <line:767:3, col:36>
|     `-CallExpr 0x55a54b50af40 <col:10, col:36> 'void *'
|       `-ImplicitCastExpr 0x55a54b50af28 <col:10> 'void *(*)(void)' <FunctionToPointerDecay>
|         `-DeclRefExpr 0x55a54b50af08 <col:10> 'void *(void)' Function 0x55a54b4aaab8 '__VERIFIER_nondet_pointer' 'void *(void)'
|-FunctionDecl 0x55a54b50b0b8 prev 0x55a54b503fa0 <line:769:1, line:785:1> line:769:8 used P2 'void *(void *)'
| |-ParmVarDecl 0x55a54b50b020 <col:11, col:17> col:17 arg 'void *'
| `-CompoundStmt 0x55a54b50c1c8 <line:770:1, line:785:1>
|   |-CallExpr 0x55a54b50b198 <line:771:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x55a54b50b180 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55a54b50b160 <col:3> 'void ()' Function 0x55a54b4aafa0 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x55a54b50b1f8 <line:772:3, col:7> 'int' '='
|   | |-DeclRefExpr 0x55a54b50b1b8 <col:3> 'int' lvalue Var 0x55a54b5050a0 'y' 'int'
|   | `-IntegerLiteral 0x55a54b50b1d8 <col:7> 'int' 2
|   |-CallExpr 0x55a54b50b250 <line:773:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x55a54b50b238 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55a54b50b218 <col:3> 'void ()' Function 0x55a54b4ab060 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x55a54b50b2a8 <line:774:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x55a54b50b290 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55a54b50b270 <col:3> 'void ()' Function 0x55a54b4aafa0 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x55a54b50b590 <line:775:3, col:103> 'int' '='
|   | |-DeclRefExpr 0x55a54b50b2c8 <col:3> 'int' lvalue Var 0x55a54b5050a0 'y' 'int'
|   | `-ConditionalOperator 0x55a54b50b560 <col:7, col:103> 'int'
|   |   |-BinaryOperator 0x55a54b50b388 <col:7, col:25> 'int' '&&'
|   |   | |-ImplicitCastExpr 0x55a54b50b340 <col:7> 'int' <IntegralCast>
|   |   | | `-ImplicitCastExpr 0x55a54b50b328 <col:7> '_Bool' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x55a54b50b2e8 <col:7> '_Bool' lvalue Var 0x55a54b505768 'y$w_buff0_used' '_Bool'
|   |   | `-ImplicitCastExpr 0x55a54b50b370 <col:25> 'int' <IntegralCast>
|   |   |   `-ImplicitCastExpr 0x55a54b50b358 <col:25> '_Bool' <LValueToRValue>
|   |   |     `-DeclRefExpr 0x55a54b50b308 <col:25> '_Bool' lvalue Var 0x55a54b505398 'y$r_buff0_thd3' '_Bool'
|   |   |-ImplicitCastExpr 0x55a54b50b548 <col:42> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x55a54b50b3a8 <col:42> 'int' lvalue Var 0x55a54b5056f0 'y$w_buff0' 'int'
|   |   `-ParenExpr 0x55a54b50b528 <col:54, col:103> 'int'
|   |     `-ConditionalOperator 0x55a54b50b4f8 <col:55, col:102> 'int'
|   |       |-BinaryOperator 0x55a54b50b468 <col:55, col:73> 'int' '&&'
|   |       | |-ImplicitCastExpr 0x55a54b50b420 <col:55> 'int' <IntegralCast>
|   |       | | `-ImplicitCastExpr 0x55a54b50b408 <col:55> '_Bool' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x55a54b50b3c8 <col:55> '_Bool' lvalue Var 0x55a54b505860 'y$w_buff1_used' '_Bool'
|   |       | `-ImplicitCastExpr 0x55a54b50b450 <col:73> 'int' <IntegralCast>
|   |       |   `-ImplicitCastExpr 0x55a54b50b438 <col:73> '_Bool' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x55a54b50b3e8 <col:73> '_Bool' lvalue Var 0x55a54b505578 'y$r_buff1_thd3' '_Bool'
|   |       |-ImplicitCastExpr 0x55a54b50b4c8 <col:90> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x55a54b50b488 <col:90> 'int' lvalue Var 0x55a54b5057e8 'y$w_buff1' 'int'
|   |       `-ImplicitCastExpr 0x55a54b50b4e0 <col:102> 'int' <LValueToRValue>
|   |         `-DeclRefExpr 0x55a54b50b4a8 <col:102> 'int' lvalue Var 0x55a54b5050a0 'y' 'int'
|   |-BinaryOperator 0x55a54b50b798 <line:776:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x55a54b50b5b0 <col:3> '_Bool' lvalue Var 0x55a54b505768 'y$w_buff0_used' '_Bool'
|   | `-ImplicitCastExpr 0x55a54b50b780 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55a54b50b750 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x55a54b50b670 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x55a54b50b628 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x55a54b50b610 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x55a54b50b5d0 <col:20> '_Bool' lvalue Var 0x55a54b505768 'y$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x55a54b50b658 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x55a54b50b640 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x55a54b50b5f0 <col:38> '_Bool' lvalue Var 0x55a54b505398 'y$r_buff0_thd3' '_Bool'
|   |     |-ImplicitCastExpr 0x55a54b50b708 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x55a54b50b6c0 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x55a54b50b690 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x55a54b50b738 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x55a54b50b720 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x55a54b50b6e8 <col:66> '_Bool' lvalue Var 0x55a54b505768 'y$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x55a54b50ba80 <line:777:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x55a54b50b7b8 <col:3> '_Bool' lvalue Var 0x55a54b505860 'y$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x55a54b50ba68 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55a54b50ba38 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x55a54b50b958 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x55a54b50b878 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x55a54b50b830 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x55a54b50b818 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x55a54b50b7d8 <col:20> '_Bool' lvalue Var 0x55a54b505768 'y$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x55a54b50b860 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x55a54b50b848 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x55a54b50b7f8 <col:38> '_Bool' lvalue Var 0x55a54b505398 'y$r_buff0_thd3' '_Bool'
|   |     | `-BinaryOperator 0x55a54b50b938 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x55a54b50b8f0 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x55a54b50b8d8 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x55a54b50b898 <col:56> '_Bool' lvalue Var 0x55a54b505860 'y$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x55a54b50b920 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x55a54b50b908 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x55a54b50b8b8 <col:74> '_Bool' lvalue Var 0x55a54b505578 'y$r_buff1_thd3' '_Bool'
|   |     |-ImplicitCastExpr 0x55a54b50b9f0 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x55a54b50b9a8 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x55a54b50b978 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x55a54b50ba20 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x55a54b50ba08 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x55a54b50b9d0 <col:102> '_Bool' lvalue Var 0x55a54b505860 'y$w_buff1_used' '_Bool'
|   |-BinaryOperator 0x55a54b50bc98 <line:778:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x55a54b50baa0 <col:3> '_Bool' lvalue Var 0x55a54b505398 'y$r_buff0_thd3' '_Bool'
|   | `-ImplicitCastExpr 0x55a54b50bc80 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55a54b50bc50 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x55a54b50bb70 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x55a54b50bb18 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x55a54b50bb00 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x55a54b50bac0 <col:20> '_Bool' lvalue Var 0x55a54b505768 'y$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x55a54b50bb48 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x55a54b50bb30 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x55a54b50bae0 <col:38> '_Bool' lvalue Var 0x55a54b505398 'y$r_buff0_thd3' '_Bool'
|   |     |-ImplicitCastExpr 0x55a54b50bc08 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x55a54b50bbc0 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x55a54b50bb90 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x55a54b50bc38 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x55a54b50bc20 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x55a54b50bbe8 <col:66> '_Bool' lvalue Var 0x55a54b505398 'y$r_buff0_thd3' '_Bool'
|   |-BinaryOperator 0x55a54b50bf80 <line:779:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x55a54b50bcb8 <col:3> '_Bool' lvalue Var 0x55a54b505578 'y$r_buff1_thd3' '_Bool'
|   | `-ImplicitCastExpr 0x55a54b50bf68 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55a54b50bf38 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x55a54b50be58 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x55a54b50bd78 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x55a54b50bd30 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x55a54b50bd18 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x55a54b50bcd8 <col:20> '_Bool' lvalue Var 0x55a54b505768 'y$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x55a54b50bd60 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x55a54b50bd48 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x55a54b50bcf8 <col:38> '_Bool' lvalue Var 0x55a54b505398 'y$r_buff0_thd3' '_Bool'
|   |     | `-BinaryOperator 0x55a54b50be38 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x55a54b50bdf0 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x55a54b50bdd8 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x55a54b50bd98 <col:56> '_Bool' lvalue Var 0x55a54b505860 'y$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x55a54b50be20 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x55a54b50be08 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x55a54b50bdb8 <col:74> '_Bool' lvalue Var 0x55a54b505578 'y$r_buff1_thd3' '_Bool'
|   |     |-ImplicitCastExpr 0x55a54b50bef0 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x55a54b50bea8 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x55a54b50be78 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x55a54b50bf20 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x55a54b50bf08 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x55a54b50bed0 <col:102> '_Bool' lvalue Var 0x55a54b505578 'y$r_buff1_thd3' '_Bool'
|   |-CallExpr 0x55a54b50bfd8 <line:780:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x55a54b50bfc0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55a54b50bfa0 <col:3> 'void ()' Function 0x55a54b4ab060 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x55a54b50c030 <line:781:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x55a54b50c018 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55a54b50bff8 <col:3> 'void ()' Function 0x55a54b4aafa0 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x55a54b50c0e8 <line:782:3, col:41> 'int' '='
|   | |-DeclRefExpr 0x55a54b50c050 <col:3> 'int' lvalue Var 0x55a54b504320 '__unbuffered_cnt' 'int'
|   | `-BinaryOperator 0x55a54b50c0c8 <col:22, col:41> 'int' '+'
|   |   |-ImplicitCastExpr 0x55a54b50c0b0 <col:22> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x55a54b50c070 <col:22> 'int' lvalue Var 0x55a54b504320 '__unbuffered_cnt' 'int'
|   |   `-IntegerLiteral 0x55a54b50c090 <col:41> 'int' 1
|   |-CallExpr 0x55a54b50c140 <line:783:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x55a54b50c128 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55a54b50c108 <col:3> 'void ()' Function 0x55a54b4ab060 '__VERIFIER_atomic_end' 'void ()'
|   `-ReturnStmt 0x55a54b50c1b8 <line:784:3, col:36>
|     `-CallExpr 0x55a54b50c198 <col:10, col:36> 'void *'
|       `-ImplicitCastExpr 0x55a54b50c180 <col:10> 'void *(*)(void)' <FunctionToPointerDecay>
|         `-DeclRefExpr 0x55a54b50c160 <col:10> 'void *(void)' Function 0x55a54b4aaab8 '__VERIFIER_nondet_pointer' 'void *(void)'
|-FunctionDecl 0x55a54b50c268 prev 0x55a54b504068 <line:786:1, line:788:1> line:786:6 fence 'void ()'
| `-CompoundStmt 0x55a54b50c308 <line:787:1, line:788:1>
|-FunctionDecl 0x55a54b50c338 prev 0x55a54b504128 <line:789:1, line:791:1> line:789:6 isync 'void ()'
| `-CompoundStmt 0x55a54b50c3d8 <line:790:1, line:791:1>
|-FunctionDecl 0x55a54b50c408 prev 0x55a54b5041e8 <line:792:1, line:794:1> line:792:6 lwfence 'void ()'
| `-CompoundStmt 0x55a54b50c4a8 <line:793:1, line:794:1>
`-FunctionDecl 0x55a54b50c518 <line:795:1, line:834:1> line:795:5 main 'int ()'
  `-CompoundStmt 0x55a54b510df8 <line:796:1, line:834:1>
    |-DeclStmt 0x55a54b50c630 <line:797:3, col:18>
    | `-VarDecl 0x55a54b50c5c8 <col:3, col:13> col:13 used t1999 'pthread_t':'unsigned long'
    |-CallExpr 0x55a54b50c838 <line:798:3, col:54> 'int'
    | |-ImplicitCastExpr 0x55a54b50c820 <col:3> 'int (*)(pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x55a54b50c648 <col:3> 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' Function 0x55a54b4eb5b8 'pthread_create' 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)'
    | |-UnaryOperator 0x55a54b50c688 <col:18, col:19> 'pthread_t *' prefix '&' cannot overflow
    | | `-DeclRefExpr 0x55a54b50c668 <col:19> 'pthread_t':'unsigned long' lvalue Var 0x55a54b50c5c8 't1999' 'pthread_t':'unsigned long'
    | |-ImplicitCastExpr 0x55a54b50c878 <col:26, col:36> 'const pthread_attr_t *' <NullToPointer>
    | | `-ParenExpr 0x55a54b50c700 <col:26, col:36> 'void *'
    | |   `-CStyleCastExpr 0x55a54b50c6d8 <col:27, col:35> 'void *' <NullToPointer>
    | |     `-IntegerLiteral 0x55a54b50c6a0 <col:35> 'int' 0
    | |-ImplicitCastExpr 0x55a54b50c890 <col:39> 'void *(*)(void *)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x55a54b50c720 <col:39> 'void *(void *)' Function 0x55a54b506b20 'P0' 'void *(void *)'
    | `-ParenExpr 0x55a54b50c7a0 <col:43, col:53> 'void *'
    |   `-CStyleCastExpr 0x55a54b50c778 <col:44, col:52> 'void *' <NullToPointer>
    |     `-IntegerLiteral 0x55a54b50c740 <col:52> 'int' 0
    |-DeclStmt 0x55a54b50c920 <line:799:3, col:18>
    | `-VarDecl 0x55a54b50c8b8 <col:3, col:13> col:13 used t2000 'pthread_t':'unsigned long'
    |-CallExpr 0x55a54b50cac8 <line:800:3, col:54> 'int'
    | |-ImplicitCastExpr 0x55a54b50cab0 <col:3> 'int (*)(pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x55a54b50c938 <col:3> 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' Function 0x55a54b4eb5b8 'pthread_create' 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)'
    | |-UnaryOperator 0x55a54b50c978 <col:18, col:19> 'pthread_t *' prefix '&' cannot overflow
    | | `-DeclRefExpr 0x55a54b50c958 <col:19> 'pthread_t':'unsigned long' lvalue Var 0x55a54b50c8b8 't2000' 'pthread_t':'unsigned long'
    | |-ImplicitCastExpr 0x55a54b50cb08 <col:26, col:36> 'const pthread_attr_t *' <NullToPointer>
    | | `-ParenExpr 0x55a54b50c9f0 <col:26, col:36> 'void *'
    | |   `-CStyleCastExpr 0x55a54b50c9c8 <col:27, col:35> 'void *' <NullToPointer>
    | |     `-IntegerLiteral 0x55a54b50c990 <col:35> 'int' 0
    | |-ImplicitCastExpr 0x55a54b50cb20 <col:39> 'void *(*)(void *)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x55a54b50ca10 <col:39> 'void *(void *)' Function 0x55a54b509d30 'P1' 'void *(void *)'
    | `-ParenExpr 0x55a54b50ca90 <col:43, col:53> 'void *'
    |   `-CStyleCastExpr 0x55a54b50ca68 <col:44, col:52> 'void *' <NullToPointer>
    |     `-IntegerLiteral 0x55a54b50ca30 <col:52> 'int' 0
    |-DeclStmt 0x55a54b50cbe8 <line:801:3, col:18>
    | `-VarDecl 0x55a54b50cb80 <col:3, col:13> col:13 used t2001 'pthread_t':'unsigned long'
    |-CallExpr 0x55a54b50cd90 <line:802:3, col:54> 'int'
    | |-ImplicitCastExpr 0x55a54b50cd78 <col:3> 'int (*)(pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x55a54b50cc00 <col:3> 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' Function 0x55a54b4eb5b8 'pthread_create' 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)'
    | |-UnaryOperator 0x55a54b50cc40 <col:18, col:19> 'pthread_t *' prefix '&' cannot overflow
    | | `-DeclRefExpr 0x55a54b50cc20 <col:19> 'pthread_t':'unsigned long' lvalue Var 0x55a54b50cb80 't2001' 'pthread_t':'unsigned long'
    | |-ImplicitCastExpr 0x55a54b50cdd0 <col:26, col:36> 'const pthread_attr_t *' <NullToPointer>
    | | `-ParenExpr 0x55a54b50ccb8 <col:26, col:36> 'void *'
    | |   `-CStyleCastExpr 0x55a54b50cc90 <col:27, col:35> 'void *' <NullToPointer>
    | |     `-IntegerLiteral 0x55a54b50cc58 <col:35> 'int' 0
    | |-ImplicitCastExpr 0x55a54b50cde8 <col:39> 'void *(*)(void *)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x55a54b50ccd8 <col:39> 'void *(void *)' Function 0x55a54b50b0b8 'P2' 'void *(void *)'
    | `-ParenExpr 0x55a54b50cd58 <col:43, col:53> 'void *'
    |   `-CStyleCastExpr 0x55a54b50cd30 <col:44, col:52> 'void *' <NullToPointer>
    |     `-IntegerLiteral 0x55a54b50ccf8 <col:52> 'int' 0
    |-CallExpr 0x55a54b50ce38 <line:803:3, col:27> 'void'
    | `-ImplicitCastExpr 0x55a54b50ce20 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x55a54b50ce00 <col:3> 'void ()' Function 0x55a54b4aafa0 '__VERIFIER_atomic_begin' 'void ()'
    |-BinaryOperator 0x55a54b50cf08 <line:804:3, col:41> '_Bool' '='
    | |-DeclRefExpr 0x55a54b50ce58 <col:3> '_Bool' lvalue Var 0x55a54b504e08 'main$tmp_guard0' '_Bool'
    | `-ImplicitCastExpr 0x55a54b50cef0 <col:21, col:41> '_Bool' <IntegralToBoolean>
    |   `-BinaryOperator 0x55a54b50ced0 <col:21, col:41> 'int' '=='
    |     |-ImplicitCastExpr 0x55a54b50ceb8 <col:21> 'int' <LValueToRValue>
    |     | `-DeclRefExpr 0x55a54b50ce78 <col:21> 'int' lvalue Var 0x55a54b504320 '__unbuffered_cnt' 'int'
    |     `-IntegerLiteral 0x55a54b50ce98 <col:41> 'int' 3
    |-CallExpr 0x55a54b50cf60 <line:805:3, col:25> 'void'
    | `-ImplicitCastExpr 0x55a54b50cf48 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x55a54b50cf28 <col:3> 'void ()' Function 0x55a54b4ab060 '__VERIFIER_atomic_end' 'void ()'
    |-CallExpr 0x55a54b50d008 <line:806:3, col:36> 'void'
    | |-ImplicitCastExpr 0x55a54b50cff0 <col:3> 'void (*)(int)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x55a54b50cf80 <col:3> 'void (int)' Function 0x55a54b4aa940 '__VERIFIER_assume' 'void (int)'
    | `-ImplicitCastExpr 0x55a54b50d048 <col:21> 'int' <IntegralCast>
    |   `-ImplicitCastExpr 0x55a54b50d030 <col:21> '_Bool' <LValueToRValue>
    |     `-DeclRefExpr 0x55a54b50cfa0 <col:21> '_Bool' lvalue Var 0x55a54b504e08 'main$tmp_guard0' '_Bool'
    |-CallExpr 0x55a54b50d098 <line:807:3, col:27> 'void'
    | `-ImplicitCastExpr 0x55a54b50d080 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x55a54b50d060 <col:3> 'void ()' Function 0x55a54b4aafa0 '__VERIFIER_atomic_begin' 'void ()'
    |-BinaryOperator 0x55a54b50d380 <line:808:3, col:103> 'int' '='
    | |-DeclRefExpr 0x55a54b50d0b8 <col:3> 'int' lvalue Var 0x55a54b5050a0 'y' 'int'
    | `-ConditionalOperator 0x55a54b50d350 <col:7, col:103> 'int'
    |   |-BinaryOperator 0x55a54b50d178 <col:7, col:25> 'int' '&&'
    |   | |-ImplicitCastExpr 0x55a54b50d130 <col:7> 'int' <IntegralCast>
    |   | | `-ImplicitCastExpr 0x55a54b50d118 <col:7> '_Bool' <LValueToRValue>
    |   | |   `-DeclRefExpr 0x55a54b50d0d8 <col:7> '_Bool' lvalue Var 0x55a54b505768 'y$w_buff0_used' '_Bool'
    |   | `-ImplicitCastExpr 0x55a54b50d160 <col:25> 'int' <IntegralCast>
    |   |   `-ImplicitCastExpr 0x55a54b50d148 <col:25> '_Bool' <LValueToRValue>
    |   |     `-DeclRefExpr 0x55a54b50d0f8 <col:25> '_Bool' lvalue Var 0x55a54b505230 'y$r_buff0_thd0' '_Bool'
    |   |-ImplicitCastExpr 0x55a54b50d338 <col:42> 'int' <LValueToRValue>
    |   | `-DeclRefExpr 0x55a54b50d198 <col:42> 'int' lvalue Var 0x55a54b5056f0 'y$w_buff0' 'int'
    |   `-ParenExpr 0x55a54b50d318 <col:54, col:103> 'int'
    |     `-ConditionalOperator 0x55a54b50d2e8 <col:55, col:102> 'int'
    |       |-BinaryOperator 0x55a54b50d258 <col:55, col:73> 'int' '&&'
    |       | |-ImplicitCastExpr 0x55a54b50d210 <col:55> 'int' <IntegralCast>
    |       | | `-ImplicitCastExpr 0x55a54b50d1f8 <col:55> '_Bool' <LValueToRValue>
    |       | |   `-DeclRefExpr 0x55a54b50d1b8 <col:55> '_Bool' lvalue Var 0x55a54b505860 'y$w_buff1_used' '_Bool'
    |       | `-ImplicitCastExpr 0x55a54b50d240 <col:73> 'int' <IntegralCast>
    |       |   `-ImplicitCastExpr 0x55a54b50d228 <col:73> '_Bool' <LValueToRValue>
    |       |     `-DeclRefExpr 0x55a54b50d1d8 <col:73> '_Bool' lvalue Var 0x55a54b505410 'y$r_buff1_thd0' '_Bool'
    |       |-ImplicitCastExpr 0x55a54b50d2b8 <col:90> 'int' <LValueToRValue>
    |       | `-DeclRefExpr 0x55a54b50d278 <col:90> 'int' lvalue Var 0x55a54b5057e8 'y$w_buff1' 'int'
    |       `-ImplicitCastExpr 0x55a54b50d2d0 <col:102> 'int' <LValueToRValue>
    |         `-DeclRefExpr 0x55a54b50d298 <col:102> 'int' lvalue Var 0x55a54b5050a0 'y' 'int'
    |-BinaryOperator 0x55a54b50d588 <line:809:3, col:66> '_Bool' '='
    | |-DeclRefExpr 0x55a54b50d3a0 <col:3> '_Bool' lvalue Var 0x55a54b505768 'y$w_buff0_used' '_Bool'
    | `-ImplicitCastExpr 0x55a54b50d570 <col:20, col:66> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x55a54b50d540 <col:20, col:66> 'int'
    |     |-BinaryOperator 0x55a54b50d460 <col:20, col:38> 'int' '&&'
    |     | |-ImplicitCastExpr 0x55a54b50d418 <col:20> 'int' <IntegralCast>
    |     | | `-ImplicitCastExpr 0x55a54b50d400 <col:20> '_Bool' <LValueToRValue>
    |     | |   `-DeclRefExpr 0x55a54b50d3c0 <col:20> '_Bool' lvalue Var 0x55a54b505768 'y$w_buff0_used' '_Bool'
    |     | `-ImplicitCastExpr 0x55a54b50d448 <col:38> 'int' <IntegralCast>
    |     |   `-ImplicitCastExpr 0x55a54b50d430 <col:38> '_Bool' <LValueToRValue>
    |     |     `-DeclRefExpr 0x55a54b50d3e0 <col:38> '_Bool' lvalue Var 0x55a54b505230 'y$r_buff0_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x55a54b50d4f8 <col:55, col:62> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x55a54b50d4b0 <col:55, col:62> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x55a54b50d480 <col:62> 'int' 0
    |     `-ImplicitCastExpr 0x55a54b50d528 <col:66> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x55a54b50d510 <col:66> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x55a54b50d4d8 <col:66> '_Bool' lvalue Var 0x55a54b505768 'y$w_buff0_used' '_Bool'
    |-BinaryOperator 0x55a54b50d870 <line:810:3, col:102> '_Bool' '='
    | |-DeclRefExpr 0x55a54b50d5a8 <col:3> '_Bool' lvalue Var 0x55a54b505860 'y$w_buff1_used' '_Bool'
    | `-ImplicitCastExpr 0x55a54b50d858 <col:20, col:102> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x55a54b50d828 <col:20, col:102> 'int'
    |     |-BinaryOperator 0x55a54b50d748 <col:20, col:74> 'int' '||'
    |     | |-BinaryOperator 0x55a54b50d668 <col:20, col:38> 'int' '&&'
    |     | | |-ImplicitCastExpr 0x55a54b50d620 <col:20> 'int' <IntegralCast>
    |     | | | `-ImplicitCastExpr 0x55a54b50d608 <col:20> '_Bool' <LValueToRValue>
    |     | | |   `-DeclRefExpr 0x55a54b50d5c8 <col:20> '_Bool' lvalue Var 0x55a54b505768 'y$w_buff0_used' '_Bool'
    |     | | `-ImplicitCastExpr 0x55a54b50d650 <col:38> 'int' <IntegralCast>
    |     | |   `-ImplicitCastExpr 0x55a54b50d638 <col:38> '_Bool' <LValueToRValue>
    |     | |     `-DeclRefExpr 0x55a54b50d5e8 <col:38> '_Bool' lvalue Var 0x55a54b505230 'y$r_buff0_thd0' '_Bool'
    |     | `-BinaryOperator 0x55a54b50d728 <col:56, col:74> 'int' '&&'
    |     |   |-ImplicitCastExpr 0x55a54b50d6e0 <col:56> 'int' <IntegralCast>
    |     |   | `-ImplicitCastExpr 0x55a54b50d6c8 <col:56> '_Bool' <LValueToRValue>
    |     |   |   `-DeclRefExpr 0x55a54b50d688 <col:56> '_Bool' lvalue Var 0x55a54b505860 'y$w_buff1_used' '_Bool'
    |     |   `-ImplicitCastExpr 0x55a54b50d710 <col:74> 'int' <IntegralCast>
    |     |     `-ImplicitCastExpr 0x55a54b50d6f8 <col:74> '_Bool' <LValueToRValue>
    |     |       `-DeclRefExpr 0x55a54b50d6a8 <col:74> '_Bool' lvalue Var 0x55a54b505410 'y$r_buff1_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x55a54b50d7e0 <col:91, col:98> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x55a54b50d798 <col:91, col:98> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x55a54b50d768 <col:98> 'int' 0
    |     `-ImplicitCastExpr 0x55a54b50d810 <col:102> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x55a54b50d7f8 <col:102> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x55a54b50d7c0 <col:102> '_Bool' lvalue Var 0x55a54b505860 'y$w_buff1_used' '_Bool'
    |-BinaryOperator 0x55a54b50da78 <line:811:3, col:66> '_Bool' '='
    | |-DeclRefExpr 0x55a54b50d890 <col:3> '_Bool' lvalue Var 0x55a54b505230 'y$r_buff0_thd0' '_Bool'
    | `-ImplicitCastExpr 0x55a54b50da60 <col:20, col:66> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x55a54b50da30 <col:20, col:66> 'int'
    |     |-BinaryOperator 0x55a54b50d950 <col:20, col:38> 'int' '&&'
    |     | |-ImplicitCastExpr 0x55a54b50d908 <col:20> 'int' <IntegralCast>
    |     | | `-ImplicitCastExpr 0x55a54b50d8f0 <col:20> '_Bool' <LValueToRValue>
    |     | |   `-DeclRefExpr 0x55a54b50d8b0 <col:20> '_Bool' lvalue Var 0x55a54b505768 'y$w_buff0_used' '_Bool'
    |     | `-ImplicitCastExpr 0x55a54b50d938 <col:38> 'int' <IntegralCast>
    |     |   `-ImplicitCastExpr 0x55a54b50d920 <col:38> '_Bool' <LValueToRValue>
    |     |     `-DeclRefExpr 0x55a54b50d8d0 <col:38> '_Bool' lvalue Var 0x55a54b505230 'y$r_buff0_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x55a54b50d9e8 <col:55, col:62> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x55a54b50d9a0 <col:55, col:62> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x55a54b50d970 <col:62> 'int' 0
    |     `-ImplicitCastExpr 0x55a54b50da18 <col:66> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x55a54b50da00 <col:66> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x55a54b50d9c8 <col:66> '_Bool' lvalue Var 0x55a54b505230 'y$r_buff0_thd0' '_Bool'
    |-BinaryOperator 0x55a54b50dd78 <line:812:3, col:102> '_Bool' '='
    | |-DeclRefExpr 0x55a54b50da98 <col:3> '_Bool' lvalue Var 0x55a54b505410 'y$r_buff1_thd0' '_Bool'
    | `-ImplicitCastExpr 0x55a54b50dd60 <col:20, col:102> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x55a54b50dd30 <col:20, col:102> 'int'
    |     |-BinaryOperator 0x55a54b50dc50 <col:20, col:74> 'int' '||'
    |     | |-BinaryOperator 0x55a54b50db58 <col:20, col:38> 'int' '&&'
    |     | | |-ImplicitCastExpr 0x55a54b50db10 <col:20> 'int' <IntegralCast>
    |     | | | `-ImplicitCastExpr 0x55a54b50daf8 <col:20> '_Bool' <LValueToRValue>
    |     | | |   `-DeclRefExpr 0x55a54b50dab8 <col:20> '_Bool' lvalue Var 0x55a54b505768 'y$w_buff0_used' '_Bool'
    |     | | `-ImplicitCastExpr 0x55a54b50db40 <col:38> 'int' <IntegralCast>
    |     | |   `-ImplicitCastExpr 0x55a54b50db28 <col:38> '_Bool' <LValueToRValue>
    |     | |     `-DeclRefExpr 0x55a54b50dad8 <col:38> '_Bool' lvalue Var 0x55a54b505230 'y$r_buff0_thd0' '_Bool'
    |     | `-BinaryOperator 0x55a54b50dc30 <col:56, col:74> 'int' '&&'
    |     |   |-ImplicitCastExpr 0x55a54b50dbe8 <col:56> 'int' <IntegralCast>
    |     |   | `-ImplicitCastExpr 0x55a54b50dbd0 <col:56> '_Bool' <LValueToRValue>
    |     |   |   `-DeclRefExpr 0x55a54b50db90 <col:56> '_Bool' lvalue Var 0x55a54b505860 'y$w_buff1_used' '_Bool'
    |     |   `-ImplicitCastExpr 0x55a54b50dc18 <col:74> 'int' <IntegralCast>
    |     |     `-ImplicitCastExpr 0x55a54b50dc00 <col:74> '_Bool' <LValueToRValue>
    |     |       `-DeclRefExpr 0x55a54b50dbb0 <col:74> '_Bool' lvalue Var 0x55a54b505410 'y$r_buff1_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x55a54b50dce8 <col:91, col:98> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x55a54b50dca0 <col:91, col:98> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x55a54b50dc70 <col:98> 'int' 0
    |     `-ImplicitCastExpr 0x55a54b50dd18 <col:102> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x55a54b50dd00 <col:102> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x55a54b50dcc8 <col:102> '_Bool' lvalue Var 0x55a54b505410 'y$r_buff1_thd0' '_Bool'
    |-CallExpr 0x55a54b50ddd0 <line:813:3, col:25> 'void'
    | `-ImplicitCastExpr 0x55a54b50ddb8 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x55a54b50dd98 <col:3> 'void ()' Function 0x55a54b4ab060 '__VERIFIER_atomic_end' 'void ()'
    |-CallExpr 0x55a54b50de28 <line:814:3, col:27> 'void'
    | `-ImplicitCastExpr 0x55a54b50de10 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x55a54b50ddf0 <col:3> 'void ()' Function 0x55a54b4aafa0 '__VERIFIER_atomic_begin' 'void ()'
    |-BinaryOperator 0x55a54b50dec0 <line:815:3, col:42> '_Bool' '='
    | |-DeclRefExpr 0x55a54b50de48 <col:3> '_Bool' lvalue Var 0x55a54b5058d8 'weak$$choice0' '_Bool'
    | `-CallExpr 0x55a54b50dea0 <col:19, col:42> '_Bool'
    |   `-ImplicitCastExpr 0x55a54b50de88 <col:19> '_Bool (*)(void)' <FunctionToPointerDecay>
    |     `-DeclRefExpr 0x55a54b50de68 <col:19> '_Bool (void)' Function 0x55a54b4aa770 '__VERIFIER_nondet_bool' '_Bool (void)'
    |-BinaryOperator 0x55a54b50df58 <line:816:3, col:42> '_Bool' '='
    | |-DeclRefExpr 0x55a54b50dee0 <col:3> '_Bool' lvalue Var 0x55a54b5059c8 'weak$$choice2' '_Bool'
    | `-CallExpr 0x55a54b50df38 <col:19, col:42> '_Bool'
    |   `-ImplicitCastExpr 0x55a54b50df20 <col:19> '_Bool (*)(void)' <FunctionToPointerDecay>
    |     `-DeclRefExpr 0x55a54b50df00 <col:19> '_Bool (void)' Function 0x55a54b4aa770 '__VERIFIER_nondet_bool' '_Bool (void)'
    |-BinaryOperator 0x55a54b50dfd0 <line:817:3, col:21> '_Bool' '='
    | |-DeclRefExpr 0x55a54b50df78 <col:3> '_Bool' lvalue Var 0x55a54b505138 'y$flush_delayed' '_Bool'
    | `-ImplicitCastExpr 0x55a54b50dfb8 <col:21> '_Bool' <LValueToRValue>
    |   `-DeclRefExpr 0x55a54b50df98 <col:21> '_Bool' lvalue Var 0x55a54b5059c8 'weak$$choice2' '_Bool'
    |-BinaryOperator 0x55a54b50e048 <line:818:3, col:15> 'int' '='
    | |-DeclRefExpr 0x55a54b50dff0 <col:3> 'int' lvalue Var 0x55a54b5051b8 'y$mem_tmp' 'int'
    | `-ImplicitCastExpr 0x55a54b50e030 <col:15> 'int' <LValueToRValue>
    |   `-DeclRefExpr 0x55a54b50e010 <col:15> 'int' lvalue Var 0x55a54b5050a0 'y' 'int'
    |-BinaryOperator 0x55a54b50e480 <line:819:3, col:162> 'int' '='
    | |-DeclRefExpr 0x55a54b50e068 <col:3> 'int' lvalue Var 0x55a54b5050a0 'y' 'int'
    | `-ConditionalOperator 0x55a54b50e450 <col:7, col:162> 'int'
    |   |-BinaryOperator 0x55a54b50e278 <col:7, col:84> 'int' '||'
    |   | |-BinaryOperator 0x55a54b50e198 <col:7, col:46> 'int' '||'
    |   | | |-UnaryOperator 0x55a54b50e0c0 <col:7, col:8> 'int' prefix '!' cannot overflow
    |   | | | `-ImplicitCastExpr 0x55a54b50e0a8 <col:8> '_Bool' <LValueToRValue>
    |   | | |   `-DeclRefExpr 0x55a54b50e088 <col:8> '_Bool' lvalue Var 0x55a54b505768 'y$w_buff0_used' '_Bool'
    |   | | `-BinaryOperator 0x55a54b50e178 <col:26, col:46> 'int' '&&'
    |   | |   |-UnaryOperator 0x55a54b50e110 <col:26, col:27> 'int' prefix '!' cannot overflow
    |   | |   | `-ImplicitCastExpr 0x55a54b50e0f8 <col:27> '_Bool' <LValueToRValue>
    |   | |   |   `-DeclRefExpr 0x55a54b50e0d8 <col:27> '_Bool' lvalue Var 0x55a54b505230 'y$r_buff0_thd0' '_Bool'
    |   | |   `-UnaryOperator 0x55a54b50e160 <col:45, col:46> 'int' prefix '!' cannot overflow
    |   | |     `-ImplicitCastExpr 0x55a54b50e148 <col:46> '_Bool' <LValueToRValue>
    |   | |       `-DeclRefExpr 0x55a54b50e128 <col:46> '_Bool' lvalue Var 0x55a54b505860 'y$w_buff1_used' '_Bool'
    |   | `-BinaryOperator 0x55a54b50e258 <col:64, col:84> 'int' '&&'
    |   |   |-UnaryOperator 0x55a54b50e1f0 <col:64, col:65> 'int' prefix '!' cannot overflow
    |   |   | `-ImplicitCastExpr 0x55a54b50e1d8 <col:65> '_Bool' <LValueToRValue>
    |   |   |   `-DeclRefExpr 0x55a54b50e1b8 <col:65> '_Bool' lvalue Var 0x55a54b505230 'y$r_buff0_thd0' '_Bool'
    |   |   `-UnaryOperator 0x55a54b50e240 <col:83, col:84> 'int' prefix '!' cannot overflow
    |   |     `-ImplicitCastExpr 0x55a54b50e228 <col:84> '_Bool' <LValueToRValue>
    |   |       `-DeclRefExpr 0x55a54b50e208 <col:84> '_Bool' lvalue Var 0x55a54b505410 'y$r_buff1_thd0' '_Bool'
    |   |-ImplicitCastExpr 0x55a54b50e438 <col:101> 'int' <LValueToRValue>
    |   | `-DeclRefExpr 0x55a54b50e298 <col:101> 'int' lvalue Var 0x55a54b5050a0 'y' 'int'
    |   `-ParenExpr 0x55a54b50e418 <col:105, col:162> 'int'
    |     `-ConditionalOperator 0x55a54b50e3e8 <col:106, col:153> 'int'
    |       |-BinaryOperator 0x55a54b50e358 <col:106, col:124> 'int' '&&'
    |       | |-ImplicitCastExpr 0x55a54b50e310 <col:106> 'int' <IntegralCast>
    |       | | `-ImplicitCastExpr 0x55a54b50e2f8 <col:106> '_Bool' <LValueToRValue>
    |       | |   `-DeclRefExpr 0x55a54b50e2b8 <col:106> '_Bool' lvalue Var 0x55a54b505768 'y$w_buff0_used' '_Bool'
    |       | `-ImplicitCastExpr 0x55a54b50e340 <col:124> 'int' <IntegralCast>
    |       |   `-ImplicitCastExpr 0x55a54b50e328 <col:124> '_Bool' <LValueToRValue>
    |       |     `-DeclRefExpr 0x55a54b50e2d8 <col:124> '_Bool' lvalue Var 0x55a54b505230 'y$r_buff0_thd0' '_Bool'
    |       |-ImplicitCastExpr 0x55a54b50e3b8 <col:141> 'int' <LValueToRValue>
    |       | `-DeclRefExpr 0x55a54b50e378 <col:141> 'int' lvalue Var 0x55a54b5056f0 'y$w_buff0' 'int'
    |       `-ImplicitCastExpr 0x55a54b50e3d0 <col:153> 'int' <LValueToRValue>
    |         `-DeclRefExpr 0x55a54b50e398 <col:153> 'int' lvalue Var 0x55a54b5057e8 'y$w_buff1' 'int'
    |-BinaryOperator 0x55a54b50e990 <line:820:3, col:208> 'int' '='
    | |-DeclRefExpr 0x55a54b50e4a0 <col:3> 'int' lvalue Var 0x55a54b5056f0 'y$w_buff0' 'int'
    | `-ConditionalOperator 0x55a54b50e960 <col:15, col:208> 'int'
    |   |-ImplicitCastExpr 0x55a54b50e930 <col:15> 'int' <IntegralCast>
    |   | `-ImplicitCastExpr 0x55a54b50e918 <col:15> '_Bool' <LValueToRValue>
    |   |   `-DeclRefExpr 0x55a54b50e4c0 <col:15> '_Bool' lvalue Var 0x55a54b5059c8 'weak$$choice2' '_Bool'
    |   |-ImplicitCastExpr 0x55a54b50e948 <col:31> 'int' <LValueToRValue>
    |   | `-DeclRefExpr 0x55a54b50e4e0 <col:31> 'int' lvalue Var 0x55a54b5056f0 'y$w_buff0' 'int'
    |   `-ParenExpr 0x55a54b50e8f8 <col:43, col:208> 'int'
    |     `-ConditionalOperator 0x55a54b50e8c8 <col:44, col:207> 'int'
    |       |-BinaryOperator 0x55a54b50e6f0 <col:44, col:121> 'int' '||'
    |       | |-BinaryOperator 0x55a54b50e610 <col:44, col:83> 'int' '||'
    |       | | |-UnaryOperator 0x55a54b50e538 <col:44, col:45> 'int' prefix '!' cannot overflow
    |       | | | `-ImplicitCastExpr 0x55a54b50e520 <col:45> '_Bool' <LValueToRValue>
    |       | | |   `-DeclRefExpr 0x55a54b50e500 <col:45> '_Bool' lvalue Var 0x55a54b505768 'y$w_buff0_used' '_Bool'
    |       | | `-BinaryOperator 0x55a54b50e5f0 <col:63, col:83> 'int' '&&'
    |       | |   |-UnaryOperator 0x55a54b50e588 <col:63, col:64> 'int' prefix '!' cannot overflow
    |       | |   | `-ImplicitCastExpr 0x55a54b50e570 <col:64> '_Bool' <LValueToRValue>
    |       | |   |   `-DeclRefExpr 0x55a54b50e550 <col:64> '_Bool' lvalue Var 0x55a54b505230 'y$r_buff0_thd0' '_Bool'
    |       | |   `-UnaryOperator 0x55a54b50e5d8 <col:82, col:83> 'int' prefix '!' cannot overflow
    |       | |     `-ImplicitCastExpr 0x55a54b50e5c0 <col:83> '_Bool' <LValueToRValue>
    |       | |       `-DeclRefExpr 0x55a54b50e5a0 <col:83> '_Bool' lvalue Var 0x55a54b505860 'y$w_buff1_used' '_Bool'
    |       | `-BinaryOperator 0x55a54b50e6d0 <col:101, col:121> 'int' '&&'
    |       |   |-UnaryOperator 0x55a54b50e668 <col:101, col:102> 'int' prefix '!' cannot overflow
    |       |   | `-ImplicitCastExpr 0x55a54b50e650 <col:102> '_Bool' <LValueToRValue>
    |       |   |   `-DeclRefExpr 0x55a54b50e630 <col:102> '_Bool' lvalue Var 0x55a54b505230 'y$r_buff0_thd0' '_Bool'
    |       |   `-UnaryOperator 0x55a54b50e6b8 <col:120, col:121> 'int' prefix '!' cannot overflow
    |       |     `-ImplicitCastExpr 0x55a54b50e6a0 <col:121> '_Bool' <LValueToRValue>
    |       |       `-DeclRefExpr 0x55a54b50e680 <col:121> '_Bool' lvalue Var 0x55a54b505410 'y$r_buff1_thd0' '_Bool'
    |       |-ImplicitCastExpr 0x55a54b50e8b0 <col:138> 'int' <LValueToRValue>
    |       | `-DeclRefExpr 0x55a54b50e710 <col:138> 'int' lvalue Var 0x55a54b5056f0 'y$w_buff0' 'int'
    |       `-ParenExpr 0x55a54b50e890 <col:150, col:207> 'int'
    |         `-ConditionalOperator 0x55a54b50e860 <col:151, col:198> 'int'
    |           |-BinaryOperator 0x55a54b50e7d0 <col:151, col:169> 'int' '&&'
    |           | |-ImplicitCastExpr 0x55a54b50e788 <col:151> 'int' <IntegralCast>
    |           | | `-ImplicitCastExpr 0x55a54b50e770 <col:151> '_Bool' <LValueToRValue>
    |           | |   `-DeclRefExpr 0x55a54b50e730 <col:151> '_Bool' lvalue Var 0x55a54b505768 'y$w_buff0_used' '_Bool'
    |           | `-ImplicitCastExpr 0x55a54b50e7b8 <col:169> 'int' <IntegralCast>
    |           |   `-ImplicitCastExpr 0x55a54b50e7a0 <col:169> '_Bool' <LValueToRValue>
    |           |     `-DeclRefExpr 0x55a54b50e750 <col:169> '_Bool' lvalue Var 0x55a54b505230 'y$r_buff0_thd0' '_Bool'
    |           |-ImplicitCastExpr 0x55a54b50e830 <col:186> 'int' <LValueToRValue>
    |           | `-DeclRefExpr 0x55a54b50e7f0 <col:186> 'int' lvalue Var 0x55a54b5056f0 'y$w_buff0' 'int'
    |           `-ImplicitCastExpr 0x55a54b50e848 <col:198> 'int' <LValueToRValue>
    |             `-DeclRefExpr 0x55a54b50e810 <col:198> 'int' lvalue Var 0x55a54b5056f0 'y$w_buff0' 'int'
    |-BinaryOperator 0x55a54b50eeb0 <line:821:3, col:208> 'int' '='
    | |-DeclRefExpr 0x55a54b50e9b0 <col:3> 'int' lvalue Var 0x55a54b5057e8 'y$w_buff1' 'int'
    | `-ConditionalOperator 0x55a54b50ee80 <col:15, col:208> 'int'
    |   |-ImplicitCastExpr 0x55a54b50ee50 <col:15> 'int' <IntegralCast>
    |   | `-ImplicitCastExpr 0x55a54b50ee38 <col:15> '_Bool' <LValueToRValue>
    |   |   `-DeclRefExpr 0x55a54b50e9d0 <col:15> '_Bool' lvalue Var 0x55a54b5059c8 'weak$$choice2' '_Bool'
    |   |-ImplicitCastExpr 0x55a54b50ee68 <col:31> 'int' <LValueToRValue>
    |   | `-DeclRefExpr 0x55a54b50e9f0 <col:31> 'int' lvalue Var 0x55a54b5057e8 'y$w_buff1' 'int'
    |   `-ParenExpr 0x55a54b50ee18 <col:43, col:208> 'int'
    |     `-ConditionalOperator 0x55a54b50ede8 <col:44, col:207> 'int'
    |       |-BinaryOperator 0x55a54b50ec10 <col:44, col:121> 'int' '||'
    |       | |-BinaryOperator 0x55a54b50eb20 <col:44, col:83> 'int' '||'
    |       | | |-UnaryOperator 0x55a54b50ea48 <col:44, col:45> 'int' prefix '!' cannot overflow
    |       | | | `-ImplicitCastExpr 0x55a54b50ea30 <col:45> '_Bool' <LValueToRValue>
    |       | | |   `-DeclRefExpr 0x55a54b50ea10 <col:45> '_Bool' lvalue Var 0x55a54b505768 'y$w_buff0_used' '_Bool'
    |       | | `-BinaryOperator 0x55a54b50eb00 <col:63, col:83> 'int' '&&'
    |       | |   |-UnaryOperator 0x55a54b50ea98 <col:63, col:64> 'int' prefix '!' cannot overflow
    |       | |   | `-ImplicitCastExpr 0x55a54b50ea80 <col:64> '_Bool' <LValueToRValue>
    |       | |   |   `-DeclRefExpr 0x55a54b50ea60 <col:64> '_Bool' lvalue Var 0x55a54b505230 'y$r_buff0_thd0' '_Bool'
    |       | |   `-UnaryOperator 0x55a54b50eae8 <col:82, col:83> 'int' prefix '!' cannot overflow
    |       | |     `-ImplicitCastExpr 0x55a54b50ead0 <col:83> '_Bool' <LValueToRValue>
    |       | |       `-DeclRefExpr 0x55a54b50eab0 <col:83> '_Bool' lvalue Var 0x55a54b505860 'y$w_buff1_used' '_Bool'
    |       | `-BinaryOperator 0x55a54b50ebf0 <col:101, col:121> 'int' '&&'
    |       |   |-UnaryOperator 0x55a54b50eb78 <col:101, col:102> 'int' prefix '!' cannot overflow
    |       |   | `-ImplicitCastExpr 0x55a54b50eb60 <col:102> '_Bool' <LValueToRValue>
    |       |   |   `-DeclRefExpr 0x55a54b50eb40 <col:102> '_Bool' lvalue Var 0x55a54b505230 'y$r_buff0_thd0' '_Bool'
    |       |   `-UnaryOperator 0x55a54b50ebd8 <col:120, col:121> 'int' prefix '!' cannot overflow
    |       |     `-ImplicitCastExpr 0x55a54b50ebc0 <col:121> '_Bool' <LValueToRValue>
    |       |       `-DeclRefExpr 0x55a54b50eba0 <col:121> '_Bool' lvalue Var 0x55a54b505410 'y$r_buff1_thd0' '_Bool'
    |       |-ImplicitCastExpr 0x55a54b50edd0 <col:138> 'int' <LValueToRValue>
    |       | `-DeclRefExpr 0x55a54b50ec30 <col:138> 'int' lvalue Var 0x55a54b5057e8 'y$w_buff1' 'int'
    |       `-ParenExpr 0x55a54b50edb0 <col:150, col:207> 'int'
    |         `-ConditionalOperator 0x55a54b50ed80 <col:151, col:198> 'int'
    |           |-BinaryOperator 0x55a54b50ecf0 <col:151, col:169> 'int' '&&'
    |           | |-ImplicitCastExpr 0x55a54b50eca8 <col:151> 'int' <IntegralCast>
    |           | | `-ImplicitCastExpr 0x55a54b50ec90 <col:151> '_Bool' <LValueToRValue>
    |           | |   `-DeclRefExpr 0x55a54b50ec50 <col:151> '_Bool' lvalue Var 0x55a54b505768 'y$w_buff0_used' '_Bool'
    |           | `-ImplicitCastExpr 0x55a54b50ecd8 <col:169> 'int' <IntegralCast>
    |           |   `-ImplicitCastExpr 0x55a54b50ecc0 <col:169> '_Bool' <LValueToRValue>
    |           |     `-DeclRefExpr 0x55a54b50ec70 <col:169> '_Bool' lvalue Var 0x55a54b505230 'y$r_buff0_thd0' '_Bool'
    |           |-ImplicitCastExpr 0x55a54b50ed50 <col:186> 'int' <LValueToRValue>
    |           | `-DeclRefExpr 0x55a54b50ed10 <col:186> 'int' lvalue Var 0x55a54b5057e8 'y$w_buff1' 'int'
    |           `-ImplicitCastExpr 0x55a54b50ed68 <col:198> 'int' <LValueToRValue>
    |             `-DeclRefExpr 0x55a54b50ed30 <col:198> 'int' lvalue Var 0x55a54b5057e8 'y$w_buff1' 'int'
    |-BinaryOperator 0x55a54b50f458 <line:822:3, col:227> '_Bool' '='
    | |-DeclRefExpr 0x55a54b50eed0 <col:3> '_Bool' lvalue Var 0x55a54b505768 'y$w_buff0_used' '_Bool'
    | `-ImplicitCastExpr 0x55a54b50f440 <col:20, col:227> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x55a54b50f410 <col:20, col:227> 'int'
    |     |-ImplicitCastExpr 0x55a54b50f3c8 <col:20> 'int' <IntegralCast>
    |     | `-ImplicitCastExpr 0x55a54b50f3b0 <col:20> '_Bool' <LValueToRValue>
    |     |   `-DeclRefExpr 0x55a54b50eef0 <col:20> '_Bool' lvalue Var 0x55a54b5059c8 'weak$$choice2' '_Bool'
    |     |-ImplicitCastExpr 0x55a54b50f3f8 <col:36> 'int' <IntegralCast>
    |     | `-ImplicitCastExpr 0x55a54b50f3e0 <col:36> '_Bool' <LValueToRValue>
    |     |   `-DeclRefExpr 0x55a54b50ef10 <col:36> '_Bool' lvalue Var 0x55a54b505768 'y$w_buff0_used' '_Bool'
    |     `-ParenExpr 0x55a54b50f390 <col:53, col:227> 'int'
    |       `-ConditionalOperator 0x55a54b50f360 <col:54, col:226> 'int'
    |         |-BinaryOperator 0x55a54b50f120 <col:54, col:131> 'int' '||'
    |         | |-BinaryOperator 0x55a54b50f040 <col:54, col:93> 'int' '||'
    |         | | |-UnaryOperator 0x55a54b50ef68 <col:54, col:55> 'int' prefix '!' cannot overflow
    |         | | | `-ImplicitCastExpr 0x55a54b50ef50 <col:55> '_Bool' <LValueToRValue>
    |         | | |   `-DeclRefExpr 0x55a54b50ef30 <col:55> '_Bool' lvalue Var 0x55a54b505768 'y$w_buff0_used' '_Bool'
    |         | | `-BinaryOperator 0x55a54b50f020 <col:73, col:93> 'int' '&&'
    |         | |   |-UnaryOperator 0x55a54b50efb8 <col:73, col:74> 'int' prefix '!' cannot overflow
    |         | |   | `-ImplicitCastExpr 0x55a54b50efa0 <col:74> '_Bool' <LValueToRValue>
    |         | |   |   `-DeclRefExpr 0x55a54b50ef80 <col:74> '_Bool' lvalue Var 0x55a54b505230 'y$r_buff0_thd0' '_Bool'
    |         | |   `-UnaryOperator 0x55a54b50f008 <col:92, col:93> 'int' prefix '!' cannot overflow
    |         | |     `-ImplicitCastExpr 0x55a54b50eff0 <col:93> '_Bool' <LValueToRValue>
    |         | |       `-DeclRefExpr 0x55a54b50efd0 <col:93> '_Bool' lvalue Var 0x55a54b505860 'y$w_buff1_used' '_Bool'
    |         | `-BinaryOperator 0x55a54b50f100 <col:111, col:131> 'int' '&&'
    |         |   |-UnaryOperator 0x55a54b50f098 <col:111, col:112> 'int' prefix '!' cannot overflow
    |         |   | `-ImplicitCastExpr 0x55a54b50f080 <col:112> '_Bool' <LValueToRValue>
    |         |   |   `-DeclRefExpr 0x55a54b50f060 <col:112> '_Bool' lvalue Var 0x55a54b505230 'y$r_buff0_thd0' '_Bool'
    |         |   `-UnaryOperator 0x55a54b50f0e8 <col:130, col:131> 'int' prefix '!' cannot overflow
    |         |     `-ImplicitCastExpr 0x55a54b50f0d0 <col:131> '_Bool' <LValueToRValue>
    |         |       `-DeclRefExpr 0x55a54b50f0b0 <col:131> '_Bool' lvalue Var 0x55a54b505410 'y$r_buff1_thd0' '_Bool'
    |         |-ImplicitCastExpr 0x55a54b50f348 <col:148> 'int' <IntegralCast>
    |         | `-ImplicitCastExpr 0x55a54b50f330 <col:148> '_Bool' <LValueToRValue>
    |         |   `-DeclRefExpr 0x55a54b50f140 <col:148> '_Bool' lvalue Var 0x55a54b505768 'y$w_buff0_used' '_Bool'
    |         `-ParenExpr 0x55a54b50f310 <col:165, col:226> 'int'
    |           `-ConditionalOperator 0x55a54b50f2e0 <col:166, col:212> 'int'
    |             |-BinaryOperator 0x55a54b50f200 <col:166, col:184> 'int' '&&'
    |             | |-ImplicitCastExpr 0x55a54b50f1b8 <col:166> 'int' <IntegralCast>
    |             | | `-ImplicitCastExpr 0x55a54b50f1a0 <col:166> '_Bool' <LValueToRValue>
    |             | |   `-DeclRefExpr 0x55a54b50f160 <col:166> '_Bool' lvalue Var 0x55a54b505768 'y$w_buff0_used' '_Bool'
    |             | `-ImplicitCastExpr 0x55a54b50f1e8 <col:184> 'int' <IntegralCast>
    |             |   `-ImplicitCastExpr 0x55a54b50f1d0 <col:184> '_Bool' <LValueToRValue>
    |             |     `-DeclRefExpr 0x55a54b50f180 <col:184> '_Bool' lvalue Var 0x55a54b505230 'y$r_buff0_thd0' '_Bool'
    |             |-ImplicitCastExpr 0x55a54b50f298 <col:201, col:208> 'int' <IntegralCast>
    |             | `-CStyleCastExpr 0x55a54b50f250 <col:201, col:208> '_Bool' <IntegralToBoolean>
    |             |   `-IntegerLiteral 0x55a54b50f220 <col:208> 'int' 0
    |             `-ImplicitCastExpr 0x55a54b50f2c8 <col:212> 'int' <IntegralCast>
    |               `-ImplicitCastExpr 0x55a54b50f2b0 <col:212> '_Bool' <LValueToRValue>
    |                 `-DeclRefExpr 0x55a54b50f278 <col:212> '_Bool' lvalue Var 0x55a54b505768 'y$w_buff0_used' '_Bool'
    |-BinaryOperator 0x55a54b50fa20 <line:823:3, col:221> '_Bool' '='
    | |-DeclRefExpr 0x55a54b50f478 <col:3> '_Bool' lvalue Var 0x55a54b505860 'y$w_buff1_used' '_Bool'
    | `-ImplicitCastExpr 0x55a54b50fa08 <col:20, col:221> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x55a54b50f9d8 <col:20, col:221> 'int'
    |     |-ImplicitCastExpr 0x55a54b50f990 <col:20> 'int' <IntegralCast>
    |     | `-ImplicitCastExpr 0x55a54b50f978 <col:20> '_Bool' <LValueToRValue>
    |     |   `-DeclRefExpr 0x55a54b50f498 <col:20> '_Bool' lvalue Var 0x55a54b5059c8 'weak$$choice2' '_Bool'
    |     |-ImplicitCastExpr 0x55a54b50f9c0 <col:36> 'int' <IntegralCast>
    |     | `-ImplicitCastExpr 0x55a54b50f9a8 <col:36> '_Bool' <LValueToRValue>
    |     |   `-DeclRefExpr 0x55a54b50f4b8 <col:36> '_Bool' lvalue Var 0x55a54b505860 'y$w_buff1_used' '_Bool'
    |     `-ParenExpr 0x55a54b50f958 <col:53, col:221> 'int'
    |       `-ConditionalOperator 0x55a54b50f928 <col:54, col:220> 'int'
    |         |-BinaryOperator 0x55a54b50f6c8 <col:54, col:131> 'int' '||'
    |         | |-BinaryOperator 0x55a54b50f5e8 <col:54, col:93> 'int' '||'
    |         | | |-UnaryOperator 0x55a54b50f510 <col:54, col:55> 'int' prefix '!' cannot overflow
    |         | | | `-ImplicitCastExpr 0x55a54b50f4f8 <col:55> '_Bool' <LValueToRValue>
    |         | | |   `-DeclRefExpr 0x55a54b50f4d8 <col:55> '_Bool' lvalue Var 0x55a54b505768 'y$w_buff0_used' '_Bool'
    |         | | `-BinaryOperator 0x55a54b50f5c8 <col:73, col:93> 'int' '&&'
    |         | |   |-UnaryOperator 0x55a54b50f560 <col:73, col:74> 'int' prefix '!' cannot overflow
    |         | |   | `-ImplicitCastExpr 0x55a54b50f548 <col:74> '_Bool' <LValueToRValue>
    |         | |   |   `-DeclRefExpr 0x55a54b50f528 <col:74> '_Bool' lvalue Var 0x55a54b505230 'y$r_buff0_thd0' '_Bool'
    |         | |   `-UnaryOperator 0x55a54b50f5b0 <col:92, col:93> 'int' prefix '!' cannot overflow
    |         | |     `-ImplicitCastExpr 0x55a54b50f598 <col:93> '_Bool' <LValueToRValue>
    |         | |       `-DeclRefExpr 0x55a54b50f578 <col:93> '_Bool' lvalue Var 0x55a54b505860 'y$w_buff1_used' '_Bool'
    |         | `-BinaryOperator 0x55a54b50f6a8 <col:111, col:131> 'int' '&&'
    |         |   |-UnaryOperator 0x55a54b50f640 <col:111, col:112> 'int' prefix '!' cannot overflow
    |         |   | `-ImplicitCastExpr 0x55a54b50f628 <col:112> '_Bool' <LValueToRValue>
    |         |   |   `-DeclRefExpr 0x55a54b50f608 <col:112> '_Bool' lvalue Var 0x55a54b505230 'y$r_buff0_thd0' '_Bool'
    |         |   `-UnaryOperator 0x55a54b50f690 <col:130, col:131> 'int' prefix '!' cannot overflow
    |         |     `-ImplicitCastExpr 0x55a54b50f678 <col:131> '_Bool' <LValueToRValue>
    |         |       `-DeclRefExpr 0x55a54b50f658 <col:131> '_Bool' lvalue Var 0x55a54b505410 'y$r_buff1_thd0' '_Bool'
    |         |-ImplicitCastExpr 0x55a54b50f910 <col:148> 'int' <IntegralCast>
    |         | `-ImplicitCastExpr 0x55a54b50f8f8 <col:148> '_Bool' <LValueToRValue>
    |         |   `-DeclRefExpr 0x55a54b50f6e8 <col:148> '_Bool' lvalue Var 0x55a54b505860 'y$w_buff1_used' '_Bool'
    |         `-ParenExpr 0x55a54b50f8d8 <col:165, col:220> 'int'
    |           `-ConditionalOperator 0x55a54b50f8a8 <col:166, col:219> 'int'
    |             |-BinaryOperator 0x55a54b50f7a8 <col:166, col:184> 'int' '&&'
    |             | |-ImplicitCastExpr 0x55a54b50f760 <col:166> 'int' <IntegralCast>
    |             | | `-ImplicitCastExpr 0x55a54b50f748 <col:166> '_Bool' <LValueToRValue>
    |             | |   `-DeclRefExpr 0x55a54b50f708 <col:166> '_Bool' lvalue Var 0x55a54b505768 'y$w_buff0_used' '_Bool'
    |             | `-ImplicitCastExpr 0x55a54b50f790 <col:184> 'int' <IntegralCast>
    |             |   `-ImplicitCastExpr 0x55a54b50f778 <col:184> '_Bool' <LValueToRValue>
    |             |     `-DeclRefExpr 0x55a54b50f728 <col:184> '_Bool' lvalue Var 0x55a54b505230 'y$r_buff0_thd0' '_Bool'
    |             |-ImplicitCastExpr 0x55a54b50f878 <col:201, col:208> 'int' <IntegralCast>
    |             | `-CStyleCastExpr 0x55a54b50f7f8 <col:201, col:208> '_Bool' <IntegralToBoolean>
    |             |   `-IntegerLiteral 0x55a54b50f7c8 <col:208> 'int' 0
    |             `-ImplicitCastExpr 0x55a54b50f890 <col:212, col:219> 'int' <IntegralCast>
    |               `-CStyleCastExpr 0x55a54b50f850 <col:212, col:219> '_Bool' <IntegralToBoolean>
    |                 `-IntegerLiteral 0x55a54b50f820 <col:219> 'int' 0
    |-BinaryOperator 0x55a54b50ffe8 <line:824:3, col:227> '_Bool' '='
    | |-DeclRefExpr 0x55a54b50fa40 <col:3> '_Bool' lvalue Var 0x55a54b505230 'y$r_buff0_thd0' '_Bool'
    | `-ImplicitCastExpr 0x55a54b50ffd0 <col:20, col:227> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x55a54b50ffa0 <col:20, col:227> 'int'
    |     |-ImplicitCastExpr 0x55a54b50ff58 <col:20> 'int' <IntegralCast>
    |     | `-ImplicitCastExpr 0x55a54b50ff40 <col:20> '_Bool' <LValueToRValue>
    |     |   `-DeclRefExpr 0x55a54b50fa60 <col:20> '_Bool' lvalue Var 0x55a54b5059c8 'weak$$choice2' '_Bool'
    |     |-ImplicitCastExpr 0x55a54b50ff88 <col:36> 'int' <IntegralCast>
    |     | `-ImplicitCastExpr 0x55a54b50ff70 <col:36> '_Bool' <LValueToRValue>
    |     |   `-DeclRefExpr 0x55a54b50fa80 <col:36> '_Bool' lvalue Var 0x55a54b505230 'y$r_buff0_thd0' '_Bool'
    |     `-ParenExpr 0x55a54b50ff20 <col:53, col:227> 'int'
    |       `-ConditionalOperator 0x55a54b50fef0 <col:54, col:226> 'int'
    |         |-BinaryOperator 0x55a54b50fcb0 <col:54, col:131> 'int' '||'
    |         | |-BinaryOperator 0x55a54b50fbd0 <col:54, col:93> 'int' '||'
    |         | | |-UnaryOperator 0x55a54b50fad8 <col:54, col:55> 'int' prefix '!' cannot overflow
    |         | | | `-ImplicitCastExpr 0x55a54b50fac0 <col:55> '_Bool' <LValueToRValue>
    |         | | |   `-DeclRefExpr 0x55a54b50faa0 <col:55> '_Bool' lvalue Var 0x55a54b505768 'y$w_buff0_used' '_Bool'
    |         | | `-BinaryOperator 0x55a54b50fbb0 <col:73, col:93> 'int' '&&'
    |         | |   |-UnaryOperator 0x55a54b50fb28 <col:73, col:74> 'int' prefix '!' cannot overflow
    |         | |   | `-ImplicitCastExpr 0x55a54b50fb10 <col:74> '_Bool' <LValueToRValue>
    |         | |   |   `-DeclRefExpr 0x55a54b50faf0 <col:74> '_Bool' lvalue Var 0x55a54b505230 'y$r_buff0_thd0' '_Bool'
    |         | |   `-UnaryOperator 0x55a54b50fb78 <col:92, col:93> 'int' prefix '!' cannot overflow
    |         | |     `-ImplicitCastExpr 0x55a54b50fb60 <col:93> '_Bool' <LValueToRValue>
    |         | |       `-DeclRefExpr 0x55a54b50fb40 <col:93> '_Bool' lvalue Var 0x55a54b505860 'y$w_buff1_used' '_Bool'
    |         | `-BinaryOperator 0x55a54b50fc90 <col:111, col:131> 'int' '&&'
    |         |   |-UnaryOperator 0x55a54b50fc28 <col:111, col:112> 'int' prefix '!' cannot overflow
    |         |   | `-ImplicitCastExpr 0x55a54b50fc10 <col:112> '_Bool' <LValueToRValue>
    |         |   |   `-DeclRefExpr 0x55a54b50fbf0 <col:112> '_Bool' lvalue Var 0x55a54b505230 'y$r_buff0_thd0' '_Bool'
    |         |   `-UnaryOperator 0x55a54b50fc78 <col:130, col:131> 'int' prefix '!' cannot overflow
    |         |     `-ImplicitCastExpr 0x55a54b50fc60 <col:131> '_Bool' <LValueToRValue>
    |         |       `-DeclRefExpr 0x55a54b50fc40 <col:131> '_Bool' lvalue Var 0x55a54b505410 'y$r_buff1_thd0' '_Bool'
    |         |-ImplicitCastExpr 0x55a54b50fed8 <col:148> 'int' <IntegralCast>
    |         | `-ImplicitCastExpr 0x55a54b50fec0 <col:148> '_Bool' <LValueToRValue>
    |         |   `-DeclRefExpr 0x55a54b50fcd0 <col:148> '_Bool' lvalue Var 0x55a54b505230 'y$r_buff0_thd0' '_Bool'
    |         `-ParenExpr 0x55a54b50fea0 <col:165, col:226> 'int'
    |           `-ConditionalOperator 0x55a54b50fe70 <col:166, col:212> 'int'
    |             |-BinaryOperator 0x55a54b50fd90 <col:166, col:184> 'int' '&&'
    |             | |-ImplicitCastExpr 0x55a54b50fd48 <col:166> 'int' <IntegralCast>
    |             | | `-ImplicitCastExpr 0x55a54b50fd30 <col:166> '_Bool' <LValueToRValue>
    |             | |   `-DeclRefExpr 0x55a54b50fcf0 <col:166> '_Bool' lvalue Var 0x55a54b505768 'y$w_buff0_used' '_Bool'
    |             | `-ImplicitCastExpr 0x55a54b50fd78 <col:184> 'int' <IntegralCast>
    |             |   `-ImplicitCastExpr 0x55a54b50fd60 <col:184> '_Bool' <LValueToRValue>
    |             |     `-DeclRefExpr 0x55a54b50fd10 <col:184> '_Bool' lvalue Var 0x55a54b505230 'y$r_buff0_thd0' '_Bool'
    |             |-ImplicitCastExpr 0x55a54b50fe28 <col:201, col:208> 'int' <IntegralCast>
    |             | `-CStyleCastExpr 0x55a54b50fde0 <col:201, col:208> '_Bool' <IntegralToBoolean>
    |             |   `-IntegerLiteral 0x55a54b50fdb0 <col:208> 'int' 0
    |             `-ImplicitCastExpr 0x55a54b50fe58 <col:212> 'int' <IntegralCast>
    |               `-ImplicitCastExpr 0x55a54b50fe40 <col:212> '_Bool' <LValueToRValue>
    |                 `-DeclRefExpr 0x55a54b50fe08 <col:212> '_Bool' lvalue Var 0x55a54b505230 'y$r_buff0_thd0' '_Bool'
    |-BinaryOperator 0x55a54b5105b0 <line:825:3, col:221> '_Bool' '='
    | |-DeclRefExpr 0x55a54b510008 <col:3> '_Bool' lvalue Var 0x55a54b505410 'y$r_buff1_thd0' '_Bool'
    | `-ImplicitCastExpr 0x55a54b510598 <col:20, col:221> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x55a54b510568 <col:20, col:221> 'int'
    |     |-ImplicitCastExpr 0x55a54b510520 <col:20> 'int' <IntegralCast>
    |     | `-ImplicitCastExpr 0x55a54b510508 <col:20> '_Bool' <LValueToRValue>
    |     |   `-DeclRefExpr 0x55a54b510028 <col:20> '_Bool' lvalue Var 0x55a54b5059c8 'weak$$choice2' '_Bool'
    |     |-ImplicitCastExpr 0x55a54b510550 <col:36> 'int' <IntegralCast>
    |     | `-ImplicitCastExpr 0x55a54b510538 <col:36> '_Bool' <LValueToRValue>
    |     |   `-DeclRefExpr 0x55a54b510048 <col:36> '_Bool' lvalue Var 0x55a54b505410 'y$r_buff1_thd0' '_Bool'
    |     `-ParenExpr 0x55a54b5104e8 <col:53, col:221> 'int'
    |       `-ConditionalOperator 0x55a54b5104b8 <col:54, col:220> 'int'
    |         |-BinaryOperator 0x55a54b510258 <col:54, col:131> 'int' '||'
    |         | |-BinaryOperator 0x55a54b510178 <col:54, col:93> 'int' '||'
    |         | | |-UnaryOperator 0x55a54b5100a0 <col:54, col:55> 'int' prefix '!' cannot overflow
    |         | | | `-ImplicitCastExpr 0x55a54b510088 <col:55> '_Bool' <LValueToRValue>
    |         | | |   `-DeclRefExpr 0x55a54b510068 <col:55> '_Bool' lvalue Var 0x55a54b505768 'y$w_buff0_used' '_Bool'
    |         | | `-BinaryOperator 0x55a54b510158 <col:73, col:93> 'int' '&&'
    |         | |   |-UnaryOperator 0x55a54b5100f0 <col:73, col:74> 'int' prefix '!' cannot overflow
    |         | |   | `-ImplicitCastExpr 0x55a54b5100d8 <col:74> '_Bool' <LValueToRValue>
    |         | |   |   `-DeclRefExpr 0x55a54b5100b8 <col:74> '_Bool' lvalue Var 0x55a54b505230 'y$r_buff0_thd0' '_Bool'
    |         | |   `-UnaryOperator 0x55a54b510140 <col:92, col:93> 'int' prefix '!' cannot overflow
    |         | |     `-ImplicitCastExpr 0x55a54b510128 <col:93> '_Bool' <LValueToRValue>
    |         | |       `-DeclRefExpr 0x55a54b510108 <col:93> '_Bool' lvalue Var 0x55a54b505860 'y$w_buff1_used' '_Bool'
    |         | `-BinaryOperator 0x55a54b510238 <col:111, col:131> 'int' '&&'
    |         |   |-UnaryOperator 0x55a54b5101d0 <col:111, col:112> 'int' prefix '!' cannot overflow
    |         |   | `-ImplicitCastExpr 0x55a54b5101b8 <col:112> '_Bool' <LValueToRValue>
    |         |   |   `-DeclRefExpr 0x55a54b510198 <col:112> '_Bool' lvalue Var 0x55a54b505230 'y$r_buff0_thd0' '_Bool'
    |         |   `-UnaryOperator 0x55a54b510220 <col:130, col:131> 'int' prefix '!' cannot overflow
    |         |     `-ImplicitCastExpr 0x55a54b510208 <col:131> '_Bool' <LValueToRValue>
    |         |       `-DeclRefExpr 0x55a54b5101e8 <col:131> '_Bool' lvalue Var 0x55a54b505410 'y$r_buff1_thd0' '_Bool'
    |         |-ImplicitCastExpr 0x55a54b5104a0 <col:148> 'int' <IntegralCast>
    |         | `-ImplicitCastExpr 0x55a54b510488 <col:148> '_Bool' <LValueToRValue>
    |         |   `-DeclRefExpr 0x55a54b510278 <col:148> '_Bool' lvalue Var 0x55a54b505410 'y$r_buff1_thd0' '_Bool'
    |         `-ParenExpr 0x55a54b510468 <col:165, col:220> 'int'
    |           `-ConditionalOperator 0x55a54b510438 <col:166, col:219> 'int'
    |             |-BinaryOperator 0x55a54b510338 <col:166, col:184> 'int' '&&'
    |             | |-ImplicitCastExpr 0x55a54b5102f0 <col:166> 'int' <IntegralCast>
    |             | | `-ImplicitCastExpr 0x55a54b5102d8 <col:166> '_Bool' <LValueToRValue>
    |             | |   `-DeclRefExpr 0x55a54b510298 <col:166> '_Bool' lvalue Var 0x55a54b505768 'y$w_buff0_used' '_Bool'
    |             | `-ImplicitCastExpr 0x55a54b510320 <col:184> 'int' <IntegralCast>
    |             |   `-ImplicitCastExpr 0x55a54b510308 <col:184> '_Bool' <LValueToRValue>
    |             |     `-DeclRefExpr 0x55a54b5102b8 <col:184> '_Bool' lvalue Var 0x55a54b505230 'y$r_buff0_thd0' '_Bool'
    |             |-ImplicitCastExpr 0x55a54b510408 <col:201, col:208> 'int' <IntegralCast>
    |             | `-CStyleCastExpr 0x55a54b510388 <col:201, col:208> '_Bool' <IntegralToBoolean>
    |             |   `-IntegerLiteral 0x55a54b510358 <col:208> 'int' 0
    |             `-ImplicitCastExpr 0x55a54b510420 <col:212, col:219> 'int' <IntegralCast>
    |               `-CStyleCastExpr 0x55a54b5103e0 <col:212, col:219> '_Bool' <IntegralToBoolean>
    |                 `-IntegerLiteral 0x55a54b5103b0 <col:219> 'int' 0
    |-BinaryOperator 0x55a54b510648 <line:826:3, col:42> '_Bool' '='
    | |-DeclRefExpr 0x55a54b5105d0 <col:3> '_Bool' lvalue Var 0x55a54b505950 'weak$$choice1' '_Bool'
    | `-CallExpr 0x55a54b510628 <col:19, col:42> '_Bool'
    |   `-ImplicitCastExpr 0x55a54b510610 <col:19> '_Bool (*)(void)' <FunctionToPointerDecay>
    |     `-DeclRefExpr 0x55a54b5105f0 <col:19> '_Bool (void)' Function 0x55a54b4aa770 '__VERIFIER_nondet_bool' '_Bool (void)'
    |-BinaryOperator 0x55a54b510880 <line:827:3, col:140> 'int' '='
    | |-DeclRefExpr 0x55a54b510668 <col:3> 'int' lvalue Var 0x55a54b504440 '__unbuffered_p0_EAX' 'int'
    | `-ConditionalOperator 0x55a54b510850 <col:25, col:140> 'int'
    |   |-ImplicitCastExpr 0x55a54b510820 <col:25> 'int' <IntegralCast>
    |   | `-ImplicitCastExpr 0x55a54b510808 <col:25> '_Bool' <LValueToRValue>
    |   |   `-DeclRefExpr 0x55a54b510688 <col:25> '_Bool' lvalue Var 0x55a54b504990 '__unbuffered_p0_EAX$read_delayed' '_Bool'
    |   |-ParenExpr 0x55a54b5107c8 <col:60, col:136> 'int'
    |   | `-ConditionalOperator 0x55a54b510798 <col:61, col:117> 'int'
    |   |   |-ImplicitCastExpr 0x55a54b510750 <col:61> 'int' <IntegralCast>
    |   |   | `-ImplicitCastExpr 0x55a54b510738 <col:61> '_Bool' <LValueToRValue>
    |   |   |   `-DeclRefExpr 0x55a54b5106a8 <col:61> '_Bool' lvalue Var 0x55a54b505950 'weak$$choice1' '_Bool'
    |   |   |-ImplicitCastExpr 0x55a54b510768 <col:77, col:78> 'int' <LValueToRValue>
    |   |   | `-UnaryOperator 0x55a54b510700 <col:77, col:78> 'int' lvalue prefix '*' cannot overflow
    |   |   |   `-ImplicitCastExpr 0x55a54b5106e8 <col:78> 'int *' <LValueToRValue>
    |   |   |     `-DeclRefExpr 0x55a54b5106c8 <col:78> 'int *' lvalue Var 0x55a54b504a10 '__unbuffered_p0_EAX$read_delayed_var' 'int *'
    |   |   `-ImplicitCastExpr 0x55a54b510780 <col:117> 'int' <LValueToRValue>
    |   |     `-DeclRefExpr 0x55a54b510718 <col:117> 'int' lvalue Var 0x55a54b504440 '__unbuffered_p0_EAX' 'int'
    |   `-ImplicitCastExpr 0x55a54b510838 <col:140> 'int' <LValueToRValue>
    |     `-DeclRefExpr 0x55a54b5107e8 <col:140> 'int' lvalue Var 0x55a54b504440 '__unbuffered_p0_EAX' 'int'
    |-BinaryOperator 0x55a54b510ab8 <line:828:3, col:85> '_Bool' '='
    | |-DeclRefExpr 0x55a54b5108a0 <col:3> '_Bool' lvalue Var 0x55a54b504e80 'main$tmp_guard1' '_Bool'
    | `-ImplicitCastExpr 0x55a54b510aa0 <col:21, col:85> '_Bool' <IntegralToBoolean>
    |   `-UnaryOperator 0x55a54b510a88 <col:21, col:85> 'int' prefix '!' cannot overflow
    |     `-ParenExpr 0x55a54b510a68 <col:22, col:85> 'int'
    |       `-BinaryOperator 0x55a54b510a48 <col:23, col:84> 'int' '&&'
    |         |-BinaryOperator 0x55a54b5109b0 <col:23, col:56> 'int' '&&'
    |         | |-BinaryOperator 0x55a54b510918 <col:23, col:28> 'int' '=='
    |         | | |-ImplicitCastExpr 0x55a54b510900 <col:23> 'int' <LValueToRValue>
    |         | | | `-DeclRefExpr 0x55a54b5108c0 <col:23> 'int' lvalue Var 0x55a54b5050a0 'y' 'int'
    |         | | `-IntegerLiteral 0x55a54b5108e0 <col:28> 'int' 2
    |         | `-BinaryOperator 0x55a54b510990 <col:33, col:56> 'int' '=='
    |         |   |-ImplicitCastExpr 0x55a54b510978 <col:33> 'int' <LValueToRValue>
    |         |   | `-DeclRefExpr 0x55a54b510938 <col:33> 'int' lvalue Var 0x55a54b504440 '__unbuffered_p0_EAX' 'int'
    |         |   `-IntegerLiteral 0x55a54b510958 <col:56> 'int' 2
    |         `-BinaryOperator 0x55a54b510a28 <col:61, col:84> 'int' '=='
    |           |-ImplicitCastExpr 0x55a54b510a10 <col:61> 'int' <LValueToRValue>
    |           | `-DeclRefExpr 0x55a54b5109d0 <col:61> 'int' lvalue Var 0x55a54b504d70 '__unbuffered_p1_EAX' 'int'
    |           `-IntegerLiteral 0x55a54b5109f0 <col:84> 'int' 1
    |-BinaryOperator 0x55a54b510c08 <line:829:3, col:37> 'int' '='
    | |-DeclRefExpr 0x55a54b510ad8 <col:3> 'int' lvalue Var 0x55a54b5050a0 'y' 'int'
    | `-ConditionalOperator 0x55a54b510bd8 <col:7, col:37> 'int'
    |   |-ImplicitCastExpr 0x55a54b510b70 <col:7> 'int' <IntegralCast>
    |   | `-ImplicitCastExpr 0x55a54b510b58 <col:7> '_Bool' <LValueToRValue>
    |   |   `-DeclRefExpr 0x55a54b510af8 <col:7> '_Bool' lvalue Var 0x55a54b505138 'y$flush_delayed' '_Bool'
    |   |-ImplicitCastExpr 0x55a54b510b88 <col:25> 'int' <LValueToRValue>
    |   | `-DeclRefExpr 0x55a54b510b18 <col:25> 'int' lvalue Var 0x55a54b5051b8 'y$mem_tmp' 'int'
    |   `-ImplicitCastExpr 0x55a54b510bc0 <col:37> 'int' <LValueToRValue>
    |     `-DeclRefExpr 0x55a54b510b38 <col:37> 'int' lvalue Var 0x55a54b5050a0 'y' 'int'
    |-BinaryOperator 0x55a54b510ca0 <line:830:3, col:28> '_Bool' '='
    | |-DeclRefExpr 0x55a54b510c28 <col:3> '_Bool' lvalue Var 0x55a54b505138 'y$flush_delayed' '_Bool'
    | `-CStyleCastExpr 0x55a54b510c78 <col:21, col:28> '_Bool' <IntegralToBoolean>
    |   `-IntegerLiteral 0x55a54b510c48 <col:28> 'int' 0
    |-CallExpr 0x55a54b510cf8 <line:831:3, col:25> 'void'
    | `-ImplicitCastExpr 0x55a54b510ce0 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x55a54b510cc0 <col:3> 'void ()' Function 0x55a54b4ab060 '__VERIFIER_atomic_end' 'void ()'
    |-CallExpr 0x55a54b510d70 <line:832:3, col:36> 'void'
    | |-ImplicitCastExpr 0x55a54b510d58 <col:3> 'void (*)(int)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x55a54b510d18 <col:3> 'void (int)' Function 0x55a54b4aad28 '__VERIFIER_assert' 'void (int)'
    | `-ImplicitCastExpr 0x55a54b510db0 <col:21> 'int' <IntegralCast>
    |   `-ImplicitCastExpr 0x55a54b510d98 <col:21> '_Bool' <LValueToRValue>
    |     `-DeclRefExpr 0x55a54b510d38 <col:21> '_Bool' lvalue Var 0x55a54b504e80 'main$tmp_guard1' '_Bool'
    `-ReturnStmt 0x55a54b510de8 <line:833:3, col:10>
      `-IntegerLiteral 0x55a54b510dc8 <col:10> 'int' 0
