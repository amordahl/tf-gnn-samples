TranslationUnitDecl 0x557079b55e18 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x557079b566d8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x557079b563b0 '__int128'
|-TypedefDecl 0x557079b56748 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x557079b563d0 'unsigned __int128'
|-TypedefDecl 0x557079b56a50 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x557079b56820 'struct __NSConstantString_tag'
|   `-Record 0x557079b567a0 '__NSConstantString_tag'
|-TypedefDecl 0x557079b56af8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x557079b56ab0 'char *'
|   `-BuiltinType 0x557079b55eb0 'char'
|-TypedefDecl 0x557079b95650 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'struct __va_list_tag [1]'
| `-ConstantArrayType 0x557079b56d90 'struct __va_list_tag [1]' 1 
|   `-RecordType 0x557079b56bd0 'struct __va_list_tag'
|     `-Record 0x557079b56b50 '__va_list_tag'
|-FunctionDecl 0x557079b95770 <./split_2/mix009_rmo.opt_false-unreach-call.i:1:1, col:41> col:14 used __VERIFIER_nondet_bool '_Bool (void)' extern
|-FunctionDecl 0x557079b95940 <line:2:1, col:34> col:13 used __VERIFIER_assume 'void (int)' extern
| `-ParmVarDecl 0x557079b95870 <col:31> col:34 'int'
|-FunctionDecl 0x557079b95ab8 <line:3:1, col:45> col:15 used __VERIFIER_nondet_pointer 'void *(void)' extern
|-FunctionDecl 0x557079b95be0 <line:4:1, col:61> col:13 used __VERIFIER_error 'void () __attribute__((noreturn))' extern
|-FunctionDecl 0x557079b95d28 <line:5:1, col:99> col:6 used __VERIFIER_assert 'void (int)'
| |-ParmVarDecl 0x557079b95c98 <col:24, col:28> col:28 used expression 'int'
| `-CompoundStmt 0x557079b95f58 <col:40, col:99>
|   |-IfStmt 0x557079b95f28 <col:42, col:88>
|   | |-UnaryOperator 0x557079b95e08 <col:46, col:47> 'int' prefix '!' cannot overflow
|   | | `-ImplicitCastExpr 0x557079b95df0 <col:47> 'int' <LValueToRValue>
|   | |   `-DeclRefExpr 0x557079b95dd0 <col:47> 'int' lvalue ParmVar 0x557079b95c98 'expression' 'int'
|   | `-CompoundStmt 0x557079b95f10 <col:59, col:88>
|   |   `-LabelStmt 0x557079b95ef8 <col:61, col:85> 'ERROR'
|   |     `-CallExpr 0x557079b95e88 <col:68, col:85> 'void'
|   |       `-ImplicitCastExpr 0x557079b95e70 <col:68> 'void (*)() __attribute__((noreturn))' <FunctionToPointerDecay>
|   |         `-DeclRefExpr 0x557079b95e20 <col:68> 'void () __attribute__((noreturn))' Function 0x557079b95be0 '__VERIFIER_error' 'void () __attribute__((noreturn))'
|   |-NullStmt 0x557079b95f40 <col:89>
|   `-ReturnStmt 0x557079b95f48 <col:91>
|-FunctionDecl 0x557079b95fa0 <line:6:1, col:37> col:13 used __VERIFIER_atomic_begin 'void ()' extern
|-FunctionDecl 0x557079b96060 <line:7:1, col:35> col:13 used __VERIFIER_atomic_end 'void ()' extern
|-FunctionDecl 0x557079b963e0 <line:9:1, line:11:76> line:9:13 __assert_fail 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x557079b96118 <col:28, col:40> col:40 __assertion 'const char *'
| |-ParmVarDecl 0x557079b96198 <col:53, col:65> col:65 __file 'const char *'
| |-ParmVarDecl 0x557079b96218 <line:10:7, col:20> col:20 __line 'unsigned int'
| |-ParmVarDecl 0x557079b96298 <col:28, col:40> col:40 __function 'const char *'
| `-NoThrowAttr 0x557079b964a0 <line:11:22>
|-FunctionDecl 0x557079bbc520 <line:12:1, line:14:76> line:12:13 __assert_perror_fail 'void (int, const char *, unsigned int, const char *) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x557079b96510 <col:35, col:39> col:39 __errnum 'int'
| |-ParmVarDecl 0x557079b96590 <col:49, col:61> col:61 __file 'const char *'
| |-ParmVarDecl 0x557079bbc350 <line:13:7, col:20> col:20 __line 'unsigned int'
| |-ParmVarDecl 0x557079bbc3d0 <col:28, col:40> col:40 __function 'const char *'
| `-NoThrowAttr 0x557079bbc5e0 <line:14:22>
|-FunctionDecl 0x557079bbc890 <line:15:1, line:16:76> line:15:13 __assert 'void (const char *, const char *, int) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x557079bbc650 <col:23, col:35> col:35 __assertion 'const char *'
| |-ParmVarDecl 0x557079bbc6d0 <col:48, col:60> col:60 __file 'const char *'
| |-ParmVarDecl 0x557079bbc750 <col:68, col:72> col:72 __line 'int'
| `-NoThrowAttr 0x557079bbc948 <line:16:22>
|-TypedefDecl 0x557079bbc9b8 <line:18:1, col:23> col:23 __u_char 'unsigned char'
| `-BuiltinType 0x557079b55f70 'unsigned char'
|-TypedefDecl 0x557079bbca28 <line:19:1, col:28> col:28 __u_short 'unsigned short'
| `-BuiltinType 0x557079b55f90 'unsigned short'
|-TypedefDecl 0x557079bbca98 <line:20:1, col:22> col:22 __u_int 'unsigned int'
| `-BuiltinType 0x557079b55fb0 'unsigned int'
|-TypedefDecl 0x557079bbcb08 <line:21:1, col:27> col:27 __u_long 'unsigned long'
| `-BuiltinType 0x557079b55fd0 'unsigned long'
|-TypedefDecl 0x557079bbcb78 <line:22:1, col:21> col:21 __int8_t 'signed char'
| `-BuiltinType 0x557079b55ed0 'signed char'
|-TypedefDecl 0x557079bbcbe8 <line:23:1, col:23> col:23 __uint8_t 'unsigned char'
| `-BuiltinType 0x557079b55f70 'unsigned char'
|-TypedefDecl 0x557079bbcc58 <line:24:1, col:26> col:26 __int16_t 'short'
| `-BuiltinType 0x557079b55ef0 'short'
|-TypedefDecl 0x557079bbccc8 <line:25:1, col:28> col:28 __uint16_t 'unsigned short'
| `-BuiltinType 0x557079b55f90 'unsigned short'
|-TypedefDecl 0x557079bbcd38 <line:26:1, col:20> col:20 __int32_t 'int'
| `-BuiltinType 0x557079b55f10 'int'
|-TypedefDecl 0x557079bbcda8 <line:27:1, col:22> col:22 __uint32_t 'unsigned int'
| `-BuiltinType 0x557079b55fb0 'unsigned int'
|-TypedefDecl 0x557079bbce18 <line:28:1, col:25> col:25 __int64_t 'long'
| `-BuiltinType 0x557079b55f30 'long'
|-TypedefDecl 0x557079bbce88 <line:29:1, col:27> col:27 referenced __uint64_t 'unsigned long'
| `-BuiltinType 0x557079b55fd0 'unsigned long'
|-TypedefDecl 0x557079bbcef8 <line:30:1, col:18> col:18 referenced __quad_t 'long'
| `-BuiltinType 0x557079b55f30 'long'
|-TypedefDecl 0x557079bbcf68 <line:31:1, col:27> col:27 __u_quad_t 'unsigned long'
| `-BuiltinType 0x557079b55fd0 'unsigned long'
|-TypedefDecl 0x557079bbcfd8 <line:32:1, col:27> col:27 __dev_t 'unsigned long'
| `-BuiltinType 0x557079b55fd0 'unsigned long'
|-TypedefDecl 0x557079bbd048 <line:33:1, col:22> col:22 __uid_t 'unsigned int'
| `-BuiltinType 0x557079b55fb0 'unsigned int'
|-TypedefDecl 0x557079bbd0b8 <line:34:1, col:22> col:22 __gid_t 'unsigned int'
| `-BuiltinType 0x557079b55fb0 'unsigned int'
|-TypedefDecl 0x557079bbd128 <line:35:1, col:27> col:27 __ino_t 'unsigned long'
| `-BuiltinType 0x557079b55fd0 'unsigned long'
|-TypedefDecl 0x557079bbd198 <line:36:1, col:27> col:27 __ino64_t 'unsigned long'
| `-BuiltinType 0x557079b55fd0 'unsigned long'
|-TypedefDecl 0x557079bbd208 <line:37:1, col:22> col:22 __mode_t 'unsigned int'
| `-BuiltinType 0x557079b55fb0 'unsigned int'
|-TypedefDecl 0x557079bbd278 <line:38:1, col:27> col:27 __nlink_t 'unsigned long'
| `-BuiltinType 0x557079b55fd0 'unsigned long'
|-TypedefDecl 0x557079bbd2e8 <line:39:1, col:18> col:18 __off_t 'long'
| `-BuiltinType 0x557079b55f30 'long'
|-TypedefDecl 0x557079bbd378 <line:40:1, col:18> col:18 referenced __off64_t 'long'
| `-BuiltinType 0x557079b55f30 'long'
|-TypedefDecl 0x557079bbd3e8 <line:41:1, col:13> col:13 referenced __pid_t 'int'
| `-BuiltinType 0x557079b55f10 'int'
|-RecordDecl 0x557079bbd440 <line:42:9, col:32> col:9 struct definition
| `-FieldDecl 0x557079bbd588 <col:18, col:29> col:22 __val 'int [2]'
|-TypedefDecl 0x557079bbd640 <col:1, col:34> col:34 __fsid_t 'struct __fsid_t':'__fsid_t'
| `-ElaboratedType 0x557079bbd5e0 'struct __fsid_t' sugar
|   `-RecordType 0x557079bbd4c0 '__fsid_t'
|     `-Record 0x557079bbd440 ''
|-TypedefDecl 0x557079bbd6c8 <line:43:1, col:18> col:18 referenced __clock_t 'long'
| `-BuiltinType 0x557079b55f30 'long'
|-TypedefDecl 0x557079bbd738 <line:44:1, col:27> col:27 __rlim_t 'unsigned long'
| `-BuiltinType 0x557079b55fd0 'unsigned long'
|-TypedefDecl 0x557079bbd7a8 <line:45:1, col:27> col:27 __rlim64_t 'unsigned long'
| `-BuiltinType 0x557079b55fd0 'unsigned long'
|-TypedefDecl 0x557079bbd818 <line:46:1, col:22> col:22 __id_t 'unsigned int'
| `-BuiltinType 0x557079b55fb0 'unsigned int'
|-TypedefDecl 0x557079bbd888 <line:47:1, col:18> col:18 referenced __time_t 'long'
| `-BuiltinType 0x557079b55f30 'long'
|-TypedefDecl 0x557079bbd8f8 <line:48:1, col:22> col:22 __useconds_t 'unsigned int'
| `-BuiltinType 0x557079b55fb0 'unsigned int'
|-TypedefDecl 0x557079bbd968 <line:49:1, col:18> col:18 __suseconds_t 'long'
| `-BuiltinType 0x557079b55f30 'long'
|-TypedefDecl 0x557079bbd9d8 <line:50:1, col:13> col:13 __daddr_t 'int'
| `-BuiltinType 0x557079b55f10 'int'
|-TypedefDecl 0x557079bbda48 <line:51:1, col:13> col:13 __key_t 'int'
| `-BuiltinType 0x557079b55f10 'int'
|-TypedefDecl 0x557079bbdab8 <line:52:1, col:13> col:13 referenced __clockid_t 'int'
| `-BuiltinType 0x557079b55f10 'int'
|-TypedefDecl 0x557079bbdb28 <line:53:1, col:16> col:16 referenced __timer_t 'void *'
| `-PointerType 0x557079b56630 'void *'
|   `-BuiltinType 0x557079b55e70 'void'
|-TypedefDecl 0x557079bbdb98 <line:54:1, col:18> col:18 __blksize_t 'long'
| `-BuiltinType 0x557079b55f30 'long'
|-TypedefDecl 0x557079bbdc08 <line:55:1, col:18> col:18 __blkcnt_t 'long'
| `-BuiltinType 0x557079b55f30 'long'
|-TypedefDecl 0x557079bbdc78 <line:56:1, col:18> col:18 __blkcnt64_t 'long'
| `-BuiltinType 0x557079b55f30 'long'
|-TypedefDecl 0x557079bbdce8 <line:57:1, col:27> col:27 __fsblkcnt_t 'unsigned long'
| `-BuiltinType 0x557079b55fd0 'unsigned long'
|-TypedefDecl 0x557079bbdd58 <line:58:1, col:27> col:27 __fsblkcnt64_t 'unsigned long'
| `-BuiltinType 0x557079b55fd0 'unsigned long'
|-TypedefDecl 0x557079bbddc8 <line:59:1, col:27> col:27 __fsfilcnt_t 'unsigned long'
| `-BuiltinType 0x557079b55fd0 'unsigned long'
|-TypedefDecl 0x557079bbde38 <line:60:1, col:27> col:27 __fsfilcnt64_t 'unsigned long'
| `-BuiltinType 0x557079b55fd0 'unsigned long'
|-TypedefDecl 0x557079bbdea8 <line:61:1, col:18> col:18 __fsword_t 'long'
| `-BuiltinType 0x557079b55f30 'long'
|-TypedefDecl 0x557079bbdf18 <line:62:1, col:18> col:18 __ssize_t 'long'
| `-BuiltinType 0x557079b55f30 'long'
|-TypedefDecl 0x557079bbdf88 <line:63:1, col:18> col:18 referenced __syscall_slong_t 'long'
| `-BuiltinType 0x557079b55f30 'long'
|-TypedefDecl 0x557079bbdff8 <line:64:1, col:27> col:27 __syscall_ulong_t 'unsigned long'
| `-BuiltinType 0x557079b55fd0 'unsigned long'
|-TypedefDecl 0x557079bbe088 <line:65:1, col:19> col:19 __loff_t '__off64_t':'long'
| `-TypedefType 0x557079bbe050 '__off64_t' sugar
|   |-Typedef 0x557079bbd378 '__off64_t'
|   `-BuiltinType 0x557079b55f30 'long'
|-TypedefDecl 0x557079bbe180 <line:66:1, col:19> col:19 __qaddr_t '__quad_t *'
| `-PointerType 0x557079bbe140 '__quad_t *'
|   `-TypedefType 0x557079bbe0e0 '__quad_t' sugar
|     |-Typedef 0x557079bbcef8 '__quad_t'
|     `-BuiltinType 0x557079b55f30 'long'
|-TypedefDecl 0x557079bbe1f0 <line:67:1, col:15> col:15 __caddr_t 'char *'
| `-PointerType 0x557079b56ab0 'char *'
|   `-BuiltinType 0x557079b55eb0 'char'
|-TypedefDecl 0x557079bbe260 <line:68:1, col:18> col:18 __intptr_t 'long'
| `-BuiltinType 0x557079b55f30 'long'
|-TypedefDecl 0x557079bbe2d0 <line:69:1, col:22> col:22 __socklen_t 'unsigned int'
| `-BuiltinType 0x557079b55fb0 'unsigned int'
|-FunctionDecl 0x557079bbf458 <line:70:1, line:74:1> line:71:1 __bswap_32 'unsigned int (unsigned int)' static inline
| |-ParmVarDecl 0x557079bbf380 <col:13, col:26> col:26 used __bsx 'unsigned int'
| `-CompoundStmt 0x557079bbf768 <line:72:1, line:74:1>
|   `-ReturnStmt 0x557079bbf758 <line:73:3, col:34>
|     `-CallExpr 0x557079bbf718 <col:10, col:34> 'unsigned int'
|       |-ImplicitCastExpr 0x557079bbf700 <col:10> 'unsigned int (*)(unsigned int)' <BuiltinFnToFnPtr>
|       | `-DeclRefExpr 0x557079bbf690 <col:10> '<builtin fn type>' Function 0x557079bbf500 '__builtin_bswap32' 'unsigned int (unsigned int)'
|       `-ImplicitCastExpr 0x557079bbf740 <col:29> 'unsigned int' <LValueToRValue>
|         `-DeclRefExpr 0x557079bbf6b0 <col:29> 'unsigned int' lvalue ParmVar 0x557079bbf380 '__bsx' 'unsigned int'
|-FunctionDecl 0x557079bbf500 <col:10> col:10 implicit used __builtin_bswap32 'unsigned int (unsigned int)' extern
| |-ParmVarDecl 0x557079bbf5a0 <<invalid sloc>> <invalid sloc> 'unsigned int'
| |-NoThrowAttr 0x557079bbf610 <col:10> Implicit
| `-ConstAttr 0x557079bbf668 <col:10> Implicit
|-FunctionDecl 0x557079bbf8c0 <line:75:1, line:79:1> line:76:1 __bswap_64 '__uint64_t (__uint64_t)' static inline
| |-ParmVarDecl 0x557079bbf7b8 <col:13, col:24> col:24 used __bsx '__uint64_t':'unsigned long'
| `-CompoundStmt 0x557079bbfbd8 <line:77:1, line:79:1>
|   `-ReturnStmt 0x557079bbfbc8 <line:78:3, col:34>
|     `-CallExpr 0x557079bbfb88 <col:10, col:34> 'unsigned long'
|       |-ImplicitCastExpr 0x557079bbfb70 <col:10> 'unsigned long (*)(unsigned long)' <BuiltinFnToFnPtr>
|       | `-DeclRefExpr 0x557079bbfaf8 <col:10> '<builtin fn type>' Function 0x557079bbf968 '__builtin_bswap64' 'unsigned long (unsigned long)'
|       `-ImplicitCastExpr 0x557079bbfbb0 <col:29> '__uint64_t':'unsigned long' <LValueToRValue>
|         `-DeclRefExpr 0x557079bbfb18 <col:29> '__uint64_t':'unsigned long' lvalue ParmVar 0x557079bbf7b8 '__bsx' '__uint64_t':'unsigned long'
|-FunctionDecl 0x557079bbf968 <col:10> col:10 implicit used __builtin_bswap64 'unsigned long (unsigned long)' extern
| |-ParmVarDecl 0x557079bbfa08 <<invalid sloc>> <invalid sloc> 'unsigned long'
| |-NoThrowAttr 0x557079bbfa78 <col:10> Implicit
| `-ConstAttr 0x557079bbfad0 <col:10> Implicit
|-TypedefDecl 0x557079bbfc08 <line:80:1, col:27> col:27 referenced size_t 'unsigned long'
| `-BuiltinType 0x557079b55fd0 'unsigned long'
|-TypedefDecl 0x557079bbfc98 <line:82:1, col:18> col:18 referenced time_t '__time_t':'long'
| `-TypedefType 0x557079bbfc60 '__time_t' sugar
|   |-Typedef 0x557079bbd888 '__time_t'
|   `-BuiltinType 0x557079b55f30 'long'
|-RecordDecl 0x557079bbfcf0 <line:85:1, line:89:3> line:85:8 struct timespec definition
| |-FieldDecl 0x557079bbfda8 <line:87:5, col:14> col:14 tv_sec '__time_t':'long'
| `-FieldDecl 0x557079bbfe38 <line:88:5, col:23> col:23 tv_nsec '__syscall_slong_t':'long'
|-TypedefDecl 0x557079bbfec8 <line:90:1, col:17> col:17 referenced pid_t '__pid_t':'int'
| `-TypedefType 0x557079bbfe90 '__pid_t' sugar
|   |-Typedef 0x557079bbd3e8 '__pid_t'
|   `-BuiltinType 0x557079b55f10 'int'
|-RecordDecl 0x557079bbff20 <line:91:1, line:94:3> line:91:8 struct sched_param definition
| `-FieldDecl 0x557079bbffe0 <line:93:5, col:9> col:9 __sched_priority 'int'
|-RecordDecl 0x557079bc0030 <line:97:1, line:100:3> line:97:8 struct __sched_param definition
| `-FieldDecl 0x557079bc00f0 <line:99:5, col:9> col:9 __sched_priority 'int'
|-TypedefDecl 0x557079bc0158 <line:101:1, col:27> col:27 referenced __cpu_mask 'unsigned long'
| `-BuiltinType 0x557079b55fd0 'unsigned long'
|-RecordDecl 0x557079bc01b0 <line:102:9, line:105:1> line:102:9 struct definition
| `-FieldDecl 0x557079bc1480 <line:104:3, col:53> col:14 __bits '__cpu_mask [64]'
|-TypedefDecl 0x557079bc1530 <line:102:1, line:105:3> col:3 referenced cpu_set_t 'struct cpu_set_t':'cpu_set_t'
| `-ElaboratedType 0x557079bc14d0 'struct cpu_set_t' sugar
|   `-RecordType 0x557079bc0230 'cpu_set_t'
|     `-Record 0x557079bc01b0 ''
|-FunctionDecl 0x557079bc1808 <line:107:1, line:108:42> line:107:12 __sched_cpucount 'int (size_t, const cpu_set_t *)' extern
| |-ParmVarDecl 0x557079bc15d8 <col:30, col:37> col:37 __setsize 'size_t':'unsigned long'
| |-ParmVarDecl 0x557079bc16e0 <col:48, col:65> col:65 __setp 'const cpu_set_t *'
| `-NoThrowAttr 0x557079bc18b8 <line:108:19>
|-FunctionDecl 0x557079bc1a90 <line:109:1, col:92> col:19 __sched_cpualloc 'cpu_set_t *(size_t)' extern
| |-ParmVarDecl 0x557079bc1920 <col:37, col:44> col:44 __count 'size_t':'unsigned long'
| `-NoThrowAttr 0x557079bc1b38 <col:69>
|-FunctionDecl 0x557079bc1cb0 <line:110:1, col:87> col:13 __sched_cpufree 'void (cpu_set_t *)' extern
| |-ParmVarDecl 0x557079bc1ba0 <col:30, col:41> col:41 __set 'cpu_set_t *'
| `-NoThrowAttr 0x557079bc1d58 <col:64>
|-FunctionDecl 0x557079bc2018 <line:113:1, line:114:45> line:113:12 sched_setparam 'int (__pid_t, const struct sched_param *)' extern
| |-ParmVarDecl 0x557079bc1dc0 <col:28, col:36> col:36 __pid '__pid_t':'int'
| |-ParmVarDecl 0x557079bc1ef8 <col:43, col:69> col:69 __param 'const struct sched_param *'
| `-NoThrowAttr 0x557079bc20c8 <line:114:22>
|-FunctionDecl 0x557079bc23b0 <line:115:1, col:111> col:12 sched_getparam 'int (__pid_t, struct sched_param *)' extern
| |-ParmVarDecl 0x557079bc2130 <col:28, col:36> col:36 __pid '__pid_t':'int'
| |-ParmVarDecl 0x557079bc2228 <col:43, col:63> col:63 __param 'struct sched_param *'
| `-NoThrowAttr 0x557079bc2460 <col:88>
|-FunctionDecl 0x557079bc2718 <line:116:1, line:117:85> line:116:12 sched_setscheduler 'int (__pid_t, int, const struct sched_param *)' extern
| |-ParmVarDecl 0x557079bc24c8 <col:32, col:40> col:40 __pid '__pid_t':'int'
| |-ParmVarDecl 0x557079bc2548 <col:47, col:51> col:51 __policy 'int'
| |-ParmVarDecl 0x557079bc25d8 <line:117:11, col:37> col:37 __param 'const struct sched_param *'
| `-NoThrowAttr 0x557079bc27d0 <col:62>
|-FunctionDecl 0x557079bc2948 <line:118:1, col:86> col:12 sched_getscheduler 'int (__pid_t)' extern
| |-ParmVarDecl 0x557079bc2838 <col:32, col:40> col:40 __pid '__pid_t':'int'
| `-NoThrowAttr 0x557079bc29f0 <col:63>
|-FunctionDecl 0x557079bc2b18 <line:119:1, col:70> col:12 sched_yield 'int (void)' extern
| `-NoThrowAttr 0x557079bc2bb8 <col:47>
|-FunctionDecl 0x557079bc2cc0 <line:120:1, col:92> col:12 sched_get_priority_max 'int (int)' extern
| |-ParmVarDecl 0x557079bc2c28 <col:36, col:40> col:40 __algorithm 'int'
| `-NoThrowAttr 0x557079bc2d68 <col:69>
|-FunctionDecl 0x557079bc2e70 <line:121:1, col:92> col:12 sched_get_priority_min 'int (int)' extern
| |-ParmVarDecl 0x557079bc2dd8 <col:36, col:40> col:40 __algorithm 'int'
| `-NoThrowAttr 0x557079bc2f18 <col:69>
|-FunctionDecl 0x557079bc31d8 <line:122:1, col:111> col:12 sched_rr_get_interval 'int (__pid_t, struct timespec *)' extern
| |-ParmVarDecl 0x557079bc2f80 <col:35, col:43> col:43 __pid '__pid_t':'int'
| |-ParmVarDecl 0x557079bc30b8 <col:50, col:67> col:67 __t 'struct timespec *'
| `-NoThrowAttr 0x557079bc3288 <col:88>
|-TypedefDecl 0x557079bc3318 <line:126:1, col:19> col:19 referenced clock_t '__clock_t':'long'
| `-TypedefType 0x557079bc32e0 '__clock_t' sugar
|   |-Typedef 0x557079bbd6c8 '__clock_t'
|   `-BuiltinType 0x557079b55f30 'long'
|-TypedefDecl 0x557079bc33c0 <line:129:1, col:21> col:21 referenced clockid_t '__clockid_t':'int'
| `-TypedefType 0x557079bc3370 '__clockid_t' sugar
|   |-Typedef 0x557079bbdab8 '__clockid_t'
|   `-BuiltinType 0x557079b55f10 'int'
|-TypedefDecl 0x557079bc3458 <line:130:1, col:19> col:19 referenced timer_t '__timer_t':'void *'
| `-TypedefType 0x557079bc3420 '__timer_t' sugar
|   |-Typedef 0x557079bbdb28 '__timer_t'
|   `-PointerType 0x557079b56630 'void *'
|     `-BuiltinType 0x557079b55e70 'void'
|-RecordDecl 0x557079bc34b0 <line:132:1, line:145:1> line:132:8 struct tm definition
| |-FieldDecl 0x557079bc3570 <line:134:3, col:7> col:7 tm_sec 'int'
| |-FieldDecl 0x557079bc35d8 <line:135:3, col:7> col:7 tm_min 'int'
| |-FieldDecl 0x557079bc3640 <line:136:3, col:7> col:7 tm_hour 'int'
| |-FieldDecl 0x557079bc36a8 <line:137:3, col:7> col:7 tm_mday 'int'
| |-FieldDecl 0x557079bc3710 <line:138:3, col:7> col:7 tm_mon 'int'
| |-FieldDecl 0x557079bc3778 <line:139:3, col:7> col:7 tm_year 'int'
| |-FieldDecl 0x557079bc37e0 <line:140:3, col:7> col:7 tm_wday 'int'
| |-FieldDecl 0x557079bc3848 <line:141:3, col:7> col:7 tm_yday 'int'
| |-FieldDecl 0x557079bc38b0 <line:142:3, col:7> col:7 tm_isdst 'int'
| |-FieldDecl 0x557079bc3918 <line:143:3, col:12> col:12 tm_gmtoff 'long'
| `-FieldDecl 0x557079bc3980 <line:144:3, col:15> col:15 tm_zone 'const char *'
|-RecordDecl 0x557079bc39d0 <line:148:1, line:152:3> line:148:8 struct itimerspec definition
| |-FieldDecl 0x557079bc3a98 <line:150:5, col:21> col:21 it_interval 'struct timespec':'struct timespec'
| `-FieldDecl 0x557079bc3b08 <line:151:5, col:21> col:21 it_value 'struct timespec':'struct timespec'
|-RecordDecl 0x557079bc3bb0 <line:153:1, col:8> col:8 struct sigevent
|-FunctionDecl 0x557079bc3d80 <line:155:1, col:68> col:16 clock 'clock_t (void)' extern
| `-NoThrowAttr 0x557079bc3e20 <col:45>
|-FunctionDecl 0x557079bc4000 <line:156:1, col:77> col:15 time 'time_t (time_t *)' extern
| |-ParmVarDecl 0x557079bc3ef0 <col:21, col:29> col:29 __timer 'time_t *'
| `-NoThrowAttr 0x557079bc40a8 <col:54>
|-FunctionDecl 0x557079bc42a8 <line:157:1, line:158:73> line:157:15 difftime 'double (time_t, time_t)' extern
| |-ParmVarDecl 0x557079bc4110 <col:25, col:32> col:32 __time1 'time_t':'long'
| |-ParmVarDecl 0x557079bc4188 <col:41, col:48> col:48 __time0 'time_t':'long'
| |-NoThrowAttr 0x557079bc4358 <line:158:22>
| `-ConstAttr 0x557079bc4ff0 <col:63>
|-FunctionDecl 0x557079bc51f0 <line:159:1, col:79> col:15 mktime 'time_t (struct tm *)' extern
| |-ParmVarDecl 0x557079bc50e8 <col:23, col:34> col:34 __tp 'struct tm *'
| `-NoThrowAttr 0x557079bc5298 <col:56>
|-FunctionDecl 0x557079bc5640 <line:160:1, line:162:77> line:160:15 strftime 'size_t (char *restrict, size_t, const char *restrict, const struct tm *restrict)' extern
| |-ParmVarDecl 0x557079bc5308 <col:25, col:42> col:42 __s 'char *restrict'
| |-ParmVarDecl 0x557079bc5380 <col:47, col:54> col:54 __maxsize 'size_t':'unsigned long'
| |-ParmVarDecl 0x557079bc5400 <line:161:4, col:27> col:27 __format 'const char *restrict'
| |-ParmVarDecl 0x557079bc54f8 <line:162:4, col:32> col:32 __tp 'const struct tm *restrict'
| `-NoThrowAttr 0x557079bc5700 <col:54>
|-RecordDecl 0x557079bc5758 <line:164:9, line:171:1> line:164:16 struct __locale_struct definition
| |-RecordDecl 0x557079bc5808 parent 0x557079b55e18 <line:166:3, col:10> col:10 struct __locale_data
| |-FieldDecl 0x557079bc5a68 <col:3, col:37> col:25 __locales 'struct __locale_data *[13]'
| |-FieldDecl 0x557079bc5b08 <line:167:3, col:29> col:29 __ctype_b 'const unsigned short *'
| |-FieldDecl 0x557079bc5b70 <line:168:3, col:14> col:14 __ctype_tolower 'const int *'
| |-FieldDecl 0x557079bc5bd8 <line:169:3, col:14> col:14 __ctype_toupper 'const int *'
| `-FieldDecl 0x557079bc5cc8 <line:170:3, col:25> col:15 __names 'const char *[13]'
|-TypedefDecl 0x557079bc5de8 <line:164:1, line:171:4> col:4 referenced __locale_t 'struct __locale_struct *'
| `-PointerType 0x557079bc5d90 'struct __locale_struct *'
|   `-ElaboratedType 0x557079bc5d20 'struct __locale_struct' sugar
|     `-RecordType 0x557079bc57e0 'struct __locale_struct'
|       `-Record 0x557079bc5758 '__locale_struct'
|-TypedefDecl 0x557079bc5e98 <line:172:1, col:20> col:20 locale_t '__locale_t':'struct __locale_struct *'
| `-TypedefType 0x557079bc5e60 '__locale_t' sugar
|   |-Typedef 0x557079bc5de8 '__locale_t'
|   `-PointerType 0x557079bc5d90 'struct __locale_struct *'
|     `-ElaboratedType 0x557079bc5d20 'struct __locale_struct' sugar
|       `-RecordType 0x557079bc57e0 'struct __locale_struct'
|         `-Record 0x557079bc5758 '__locale_struct'
|-FunctionDecl 0x557079bc72a0 <line:173:1, line:176:63> line:173:15 strftime_l 'size_t (char *restrict, size_t, const char *restrict, const struct tm *restrict, __locale_t)' extern
| |-ParmVarDecl 0x557079bc5f08 <col:27, col:44> col:44 __s 'char *restrict'
| |-ParmVarDecl 0x557079bc5f80 <col:49, col:56> col:56 __maxsize 'size_t':'unsigned long'
| |-ParmVarDecl 0x557079bc7028 <line:174:6, col:29> col:29 __format 'const char *restrict'
| |-ParmVarDecl 0x557079bc70b8 <line:175:6, col:34> col:34 __tp 'const struct tm *restrict'
| |-ParmVarDecl 0x557079bc7130 <line:176:6, col:17> col:17 __loc '__locale_t':'struct __locale_struct *'
| `-NoThrowAttr 0x557079bc7368 <col:40>
|-FunctionDecl 0x557079bc7558 <line:178:1, col:89> col:19 gmtime 'struct tm *(const time_t *)' extern
| |-ParmVarDecl 0x557079bc7430 <col:27, col:41> col:41 __timer 'const time_t *'
| `-NoThrowAttr 0x557079bc7600 <col:66>
|-FunctionDecl 0x557079bc7710 <line:179:1, col:92> col:19 localtime 'struct tm *(const time_t *)' extern
| |-ParmVarDecl 0x557079bc7668 <col:30, col:44> col:44 __timer 'const time_t *'
| `-NoThrowAttr 0x557079bc77b8 <col:69>
|-FunctionDecl 0x557079bc79e8 <line:181:1, line:182:75> line:181:19 gmtime_r 'struct tm *(const time_t *restrict, struct tm *restrict)' extern
| |-ParmVarDecl 0x557079bc7820 <col:29, col:54> col:54 __timer 'const time_t *restrict'
| |-ParmVarDecl 0x557079bc78b0 <line:182:8, col:30> col:30 __tp 'struct tm *restrict'
| `-NoThrowAttr 0x557079bc7a98 <col:52>
|-FunctionDecl 0x557079bc7c40 <line:183:1, line:184:78> line:183:19 localtime_r 'struct tm *(const time_t *restrict, struct tm *restrict)' extern
| |-ParmVarDecl 0x557079bc7b00 <col:32, col:57> col:57 __timer 'const time_t *restrict'
| |-ParmVarDecl 0x557079bc7b90 <line:184:11, col:33> col:33 __tp 'struct tm *restrict'
| `-NoThrowAttr 0x557079bc7cf0 <col:55>
|-FunctionDecl 0x557079bc7e88 <line:186:1, col:85> col:14 asctime 'char *(const struct tm *)' extern
| |-ParmVarDecl 0x557079bc7d70 <col:23, col:40> col:40 __tp 'const struct tm *'
| `-NoThrowAttr 0x557079bc7f30 <col:62>
|-FunctionDecl 0x557079bc8168 <line:187:1, col:83> col:14 ctime 'char *(const time_t *)' extern
| |-ParmVarDecl 0x557079bc7f98 <col:21, col:35> col:35 __timer 'const time_t *'
| `-NoThrowAttr 0x557079bc8210 <col:60>
|-FunctionDecl 0x557079bc8438 <line:189:1, line:190:67> line:189:14 asctime_r 'char *(const struct tm *restrict, char *restrict)' extern
| |-ParmVarDecl 0x557079bc8290 <col:25, col:53> col:53 __tp 'const struct tm *restrict'
| |-ParmVarDecl 0x557079bc8310 <line:190:4, col:21> col:21 __buf 'char *restrict'
| `-NoThrowAttr 0x557079bc84e8 <col:44>
|-FunctionDecl 0x557079bc86f8 <line:191:1, line:192:72> line:191:14 ctime_r 'char *(const time_t *restrict, char *restrict)' extern
| |-ParmVarDecl 0x557079bc8550 <col:23, col:48> col:48 __timer 'const time_t *restrict'
| |-ParmVarDecl 0x557079bc85d0 <line:192:9, col:26> col:26 __buf 'char *restrict'
| `-NoThrowAttr 0x557079bc87a8 <col:49>
|-VarDecl 0x557079bc88a8 <line:193:1, col:24> col:14 __tzname 'char *[2]' extern
|-VarDecl 0x557079bc8928 <line:194:1, col:12> col:12 __daylight 'int' extern
|-VarDecl 0x557079bc89a8 <line:195:1, col:17> col:17 __timezone 'long' extern
|-VarDecl 0x557079bc8a70 <line:196:1, col:22> col:14 tzname 'char *[2]' extern
|-FunctionDecl 0x557079bc8ba0 <line:197:1, col:65> col:13 tzset 'void (void)' extern
| `-NoThrowAttr 0x557079bc8c40 <col:42>
|-VarDecl 0x557079bc8cb0 <line:198:1, col:12> col:12 daylight 'int' extern
|-VarDecl 0x557079bc8d30 <line:199:1, col:17> col:17 timezone 'long' extern
|-FunctionDecl 0x557079bc8eb8 <line:200:1, col:80> col:12 stime 'int (const time_t *)' extern
| |-ParmVarDecl 0x557079bc8da8 <col:19, col:33> col:33 __when 'const time_t *'
| `-NoThrowAttr 0x557079bc8f60 <col:57>
|-FunctionDecl 0x557079bc90d0 <line:201:1, col:79> col:15 timegm 'time_t (struct tm *)' extern
| |-ParmVarDecl 0x557079bc8fe0 <col:23, col:34> col:34 __tp 'struct tm *'
| `-NoThrowAttr 0x557079bc9178 <col:56>
|-FunctionDecl 0x557079bc9288 <line:202:1, col:82> col:15 timelocal 'time_t (struct tm *)' extern
| |-ParmVarDecl 0x557079bc91f8 <col:26, col:37> col:37 __tp 'struct tm *'
| `-NoThrowAttr 0x557079bc9330 <col:59>
|-FunctionDecl 0x557079bc9438 <line:203:1, col:99> col:12 dysize 'int (int)' extern
| |-ParmVarDecl 0x557079bc93a0 <col:20, col:24> col:24 __year 'int'
| |-NoThrowAttr 0x557079bc94e0 <col:48>
| `-ConstAttr 0x557079bc9538 <col:89>
|-FunctionDecl 0x557079bc9798 <line:204:1, line:205:37> line:204:12 nanosleep 'int (const struct timespec *, struct timespec *)' extern
| |-ParmVarDecl 0x557079bc95e8 <col:23, col:46> col:46 __requested_time 'const struct timespec *'
| `-ParmVarDecl 0x557079bc9678 <line:205:9, col:26> col:26 __remaining 'struct timespec *'
|-FunctionDecl 0x557079bc99f8 <line:206:1, col:111> col:12 clock_getres 'int (clockid_t, struct timespec *)' extern
| |-ParmVarDecl 0x557079bc9888 <col:26, col:36> col:36 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x557079bc9918 <col:48, col:65> col:65 __res 'struct timespec *'
| `-NoThrowAttr 0x557079bc9aa8 <col:88>
|-FunctionDecl 0x557079bc9c40 <line:207:1, col:111> col:12 clock_gettime 'int (clockid_t, struct timespec *)' extern
| |-ParmVarDecl 0x557079bc9b10 <col:27, col:37> col:37 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x557079bc9ba0 <col:49, col:66> col:66 __tp 'struct timespec *'
| `-NoThrowAttr 0x557079bc9cf0 <col:88>
|-FunctionDecl 0x557079bc9f08 <line:208:1, line:209:45> line:208:12 clock_settime 'int (clockid_t, const struct timespec *)' extern
| |-ParmVarDecl 0x557079bc9d58 <col:27, col:37> col:37 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x557079bc9de8 <col:49, col:72> col:72 __tp 'const struct timespec *'
| `-NoThrowAttr 0x557079bc9fb8 <line:209:22>
|-FunctionDecl 0x557079bca358 <line:210:1, line:212:30> line:210:12 clock_nanosleep 'int (clockid_t, int, const struct timespec *, struct timespec *)' extern
| |-ParmVarDecl 0x557079bca020 <col:29, col:39> col:39 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x557079bca0e0 <col:51, col:55> col:55 __flags 'int'
| |-ParmVarDecl 0x557079bca170 <line:211:8, col:31> col:31 __req 'const struct timespec *'
| `-ParmVarDecl 0x557079bca200 <line:212:8, col:25> col:25 __rem 'struct timespec *'
|-FunctionDecl 0x557079bca658 <line:213:1, col:108> col:12 clock_getcpuclockid 'int (pid_t, clockid_t *)' extern
| |-ParmVarDecl 0x557079bca458 <col:33, col:39> col:39 __pid 'pid_t':'int'
| |-ParmVarDecl 0x557079bca530 <col:46, col:57> col:57 __clock_id 'clockid_t *'
| `-NoThrowAttr 0x557079bca708 <col:85>
|-FunctionDecl 0x557079bcaaf8 <line:214:1, line:216:75> line:214:12 timer_create 'int (clockid_t, struct sigevent *restrict, timer_t *restrict)' extern
| |-ParmVarDecl 0x557079bca770 <col:26, col:36> col:36 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x557079bca8a8 <line:215:5, col:33> col:33 __evp 'struct sigevent *restrict'
| |-ParmVarDecl 0x557079bca9b0 <line:216:5, col:25> col:25 __timerid 'timer_t *restrict'
| `-NoThrowAttr 0x557079bcabb0 <col:52>
|-FunctionDecl 0x557079bcad28 <line:217:1, col:84> col:12 timer_delete 'int (timer_t)' extern
| |-ParmVarDecl 0x557079bcac18 <col:26, col:34> col:34 __timerid 'timer_t':'void *'
| `-NoThrowAttr 0x557079bcadd0 <col:61>
|-FunctionDecl 0x557079bcb248 <line:218:1, line:220:85> line:218:12 timer_settime 'int (timer_t, int, const struct itimerspec *restrict, struct itimerspec *restrict)' extern
| |-ParmVarDecl 0x557079bcae38 <col:27, col:35> col:35 __timerid 'timer_t':'void *'
| |-ParmVarDecl 0x557079bcaeb8 <col:46, col:50> col:50 __flags 'int'
| |-ParmVarDecl 0x557079bcafe8 <line:219:6, col:42> col:42 __value 'const struct itimerspec *restrict'
| |-ParmVarDecl 0x557079bcb0f0 <line:220:6, col:36> col:36 __ovalue 'struct itimerspec *restrict'
| `-NoThrowAttr 0x557079bcb308 <col:62>
|-FunctionDecl 0x557079bcb528 <line:221:1, line:222:45> line:221:12 timer_gettime 'int (timer_t, struct itimerspec *)' extern
| |-ParmVarDecl 0x557079bcb370 <col:27, col:35> col:35 __timerid 'timer_t':'void *'
| |-ParmVarDecl 0x557079bcb400 <col:46, col:65> col:65 __value 'struct itimerspec *'
| `-NoThrowAttr 0x557079bcb5d8 <line:222:22>
|-FunctionDecl 0x557079bcb6d8 <line:223:1, col:88> col:12 timer_getoverrun 'int (timer_t)' extern
| |-ParmVarDecl 0x557079bcb640 <col:30, col:38> col:38 __timerid 'timer_t':'void *'
| `-NoThrowAttr 0x557079bcb780 <col:65>
|-TypedefDecl 0x557079bcb7f0 <line:225:1, col:27> col:27 referenced pthread_t 'unsigned long'
| `-BuiltinType 0x557079b55fd0 'unsigned long'
|-RecordDecl 0x557079bcb848 <line:226:1, line:230:1> line:226:7 union pthread_attr_t definition
| |-FieldDecl 0x557079bcb990 <line:228:3, col:17> col:8 __size 'char [56]'
| `-FieldDecl 0x557079bcb9f8 <line:229:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x557079bcbaa8 <line:231:1, col:30> col:30 referenced pthread_attr_t 'union pthread_attr_t':'union pthread_attr_t'
| `-ElaboratedType 0x557079bcba50 'union pthread_attr_t' sugar
|   `-RecordType 0x557079bcb8d0 'union pthread_attr_t'
|     `-Record 0x557079bcb848 'pthread_attr_t'
|-RecordDecl 0x557079bcbb00 <line:232:9, line:236:1> line:232:16 struct __pthread_internal_list definition
| |-FieldDecl 0x557079bcbc78 <line:234:3, col:35> col:35 __prev 'struct __pthread_internal_list *'
| `-FieldDecl 0x557079bcbcf0 <line:235:3, col:35> col:35 __next 'struct __pthread_internal_list *'
|-TypedefDecl 0x557079bcbda0 <line:232:1, line:236:3> col:3 referenced __pthread_list_t 'struct __pthread_internal_list':'struct __pthread_internal_list'
| `-ElaboratedType 0x557079bcbd40 'struct __pthread_internal_list' sugar
|   `-RecordType 0x557079bcbb80 'struct __pthread_internal_list'
|     `-Record 0x557079bcbb00 '__pthread_internal_list'
|-RecordDecl 0x557079bcbe10 <line:237:9, line:251:1> line:237:9 union definition
| |-RecordDecl 0x557079bcbeb8 parent 0x557079b55e18 <line:239:3, line:248:3> line:239:10 struct __pthread_mutex_s definition
| | |-FieldDecl 0x557079bcbf90 <line:241:5, col:9> col:9 __lock 'int'
| | |-FieldDecl 0x557079bcbff8 <line:242:5, col:18> col:18 __count 'unsigned int'
| | |-FieldDecl 0x557079bcc060 <line:243:5, col:9> col:9 __owner 'int'
| | |-FieldDecl 0x557079bd0110 <line:244:5, col:18> col:18 __nusers 'unsigned int'
| | |-FieldDecl 0x557079bd0178 <line:245:5, col:9> col:9 __kind 'int'
| | |-FieldDecl 0x557079bd01e0 <line:246:5, col:9> col:9 __spins 'int'
| | `-FieldDecl 0x557079bd0268 <line:247:5, col:22> col:22 __list '__pthread_list_t':'struct __pthread_internal_list'
| |-FieldDecl 0x557079bd0320 <line:239:3, line:248:5> col:5 __data 'struct __pthread_mutex_s':'struct __pthread_mutex_s'
| |-FieldDecl 0x557079bd0410 <line:249:3, col:17> col:8 __size 'char [40]'
| `-FieldDecl 0x557079bd0478 <line:250:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x557079bd0600 <line:237:1, line:251:3> col:3 referenced pthread_mutex_t 'union pthread_mutex_t':'pthread_mutex_t'
| `-ElaboratedType 0x557079bd05a0 'union pthread_mutex_t' sugar
|   `-RecordType 0x557079bcbe90 'pthread_mutex_t'
|     `-Record 0x557079bcbe10 ''
|-RecordDecl 0x557079bd0670 <line:252:9, line:256:1> line:252:9 union definition
| |-FieldDecl 0x557079bd07b0 <line:254:3, col:16> col:8 __size 'char [4]'
| `-FieldDecl 0x557079bd0818 <line:255:3, col:7> col:7 __align 'int'
|-TypedefDecl 0x557079bd08d0 <line:252:1, line:256:3> col:3 referenced pthread_mutexattr_t 'union pthread_mutexattr_t':'pthread_mutexattr_t'
| `-ElaboratedType 0x557079bd0870 'union pthread_mutexattr_t' sugar
|   `-RecordType 0x557079bd06f0 'pthread_mutexattr_t'
|     `-Record 0x557079bd0670 ''
|-RecordDecl 0x557079bd0940 <line:257:9, line:272:1> line:257:9 union definition
| |-RecordDecl 0x557079bd09e8 <line:259:3, line:269:3> line:259:3 struct definition
| | |-FieldDecl 0x557079bd0ab0 <line:261:5, col:9> col:9 __lock 'int'
| | |-FieldDecl 0x557079bd0b18 <line:262:5, col:18> col:18 __futex 'unsigned int'
| | |-FieldDecl 0x557079bd0b80 <line:263:19, col:42> col:42 __total_seq 'unsigned long long'
| | |-FieldDecl 0x557079bd0be8 <line:264:19, col:42> col:42 __wakeup_seq 'unsigned long long'
| | |-FieldDecl 0x557079bd0c50 <line:265:19, col:42> col:42 __woken_seq 'unsigned long long'
| | |-FieldDecl 0x557079bd0cb8 <line:266:5, col:11> col:11 __mutex 'void *'
| | |-FieldDecl 0x557079bd0d20 <line:267:5, col:18> col:18 __nwaiters 'unsigned int'
| | `-FieldDecl 0x557079bd0d88 <line:268:5, col:18> col:18 __broadcast_seq 'unsigned int'
| |-FieldDecl 0x557079bd0e40 <line:259:3, line:269:5> col:5 __data 'struct (anonymous struct at ./split_2/mix009_rmo.opt_false-unreach-call.i:259:3)':'struct pthread_cond_t::(anonymous at ./split_2/mix009_rmo.opt_false-unreach-call.i:259:3)'
| |-FieldDecl 0x557079bd0f30 <line:270:3, col:17> col:8 __size 'char [48]'
| `-FieldDecl 0x557079bd0f98 <line:271:17, col:31> col:31 __align 'long long'
|-TypedefDecl 0x557079bd2130 <line:257:1, line:272:3> col:3 referenced pthread_cond_t 'union pthread_cond_t':'pthread_cond_t'
| `-ElaboratedType 0x557079bd1070 'union pthread_cond_t' sugar
|   `-RecordType 0x557079bd09c0 'pthread_cond_t'
|     `-Record 0x557079bd0940 ''
|-RecordDecl 0x557079bd21a0 <line:273:9, line:277:1> line:273:9 union definition
| |-FieldDecl 0x557079bd22a0 <line:275:3, col:16> col:8 __size 'char [4]'
| `-FieldDecl 0x557079bd2308 <line:276:3, col:7> col:7 __align 'int'
|-TypedefDecl 0x557079bd23c0 <line:273:1, line:277:3> col:3 referenced pthread_condattr_t 'union pthread_condattr_t':'pthread_condattr_t'
| `-ElaboratedType 0x557079bd2360 'union pthread_condattr_t' sugar
|   `-RecordType 0x557079bd2220 'pthread_condattr_t'
|     `-Record 0x557079bd21a0 ''
|-TypedefDecl 0x557079bd2448 <line:278:1, col:22> col:22 referenced pthread_key_t 'unsigned int'
| `-BuiltinType 0x557079b55fb0 'unsigned int'
|-TypedefDecl 0x557079bd24b8 <line:279:1, col:13> col:13 referenced pthread_once_t 'int'
| `-BuiltinType 0x557079b55f10 'int'
|-RecordDecl 0x557079bd2510 <line:280:9, line:298:1> line:280:9 union definition
| |-RecordDecl 0x557079bd25b8 <line:282:3, line:295:3> line:282:3 struct definition
| | |-FieldDecl 0x557079bd2680 <line:284:5, col:9> col:9 __lock 'int'
| | |-FieldDecl 0x557079bd26e8 <line:285:5, col:18> col:18 __nr_readers 'unsigned int'
| | |-FieldDecl 0x557079bd2750 <line:286:5, col:18> col:18 __readers_wakeup 'unsigned int'
| | |-FieldDecl 0x557079bd27b8 <line:287:5, col:18> col:18 __writer_wakeup 'unsigned int'
| | |-FieldDecl 0x557079bd2820 <line:288:5, col:18> col:18 __nr_readers_queued 'unsigned int'
| | |-FieldDecl 0x557079bd2888 <line:289:5, col:18> col:18 __nr_writers_queued 'unsigned int'
| | |-FieldDecl 0x557079bd28f0 <line:290:5, col:9> col:9 __writer 'int'
| | |-FieldDecl 0x557079bd2958 <line:291:5, col:9> col:9 __shared 'int'
| | |-FieldDecl 0x557079bd29c0 <line:292:5, col:23> col:23 __pad1 'unsigned long'
| | |-FieldDecl 0x557079bd2a28 <line:293:5, col:23> col:23 __pad2 'unsigned long'
| | `-FieldDecl 0x557079bd2a90 <line:294:5, col:18> col:18 __flags 'unsigned int'
| |-FieldDecl 0x557079bd2b40 <line:282:3, line:295:5> col:5 __data 'struct (anonymous struct at ./split_2/mix009_rmo.opt_false-unreach-call.i:282:3)':'struct pthread_rwlock_t::(anonymous at ./split_2/mix009_rmo.opt_false-unreach-call.i:282:3)'
| |-FieldDecl 0x557079bd2be8 <line:296:3, col:17> col:8 __size 'char [56]'
| `-FieldDecl 0x557079bd2c50 <line:297:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x557079bd2da0 <line:280:1, line:298:3> col:3 referenced pthread_rwlock_t 'union pthread_rwlock_t':'pthread_rwlock_t'
| `-ElaboratedType 0x557079bd2d40 'union pthread_rwlock_t' sugar
|   `-RecordType 0x557079bd2590 'pthread_rwlock_t'
|     `-Record 0x557079bd2510 ''
|-RecordDecl 0x557079bd2e10 <line:299:9, line:303:1> line:299:9 union definition
| |-FieldDecl 0x557079bd2f50 <line:301:3, col:16> col:8 __size 'char [8]'
| `-FieldDecl 0x557079bd2fb8 <line:302:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x557079bd3070 <line:299:1, line:303:3> col:3 referenced pthread_rwlockattr_t 'union pthread_rwlockattr_t':'pthread_rwlockattr_t'
| `-ElaboratedType 0x557079bd3010 'union pthread_rwlockattr_t' sugar
|   `-RecordType 0x557079bd2e90 'pthread_rwlockattr_t'
|     `-Record 0x557079bd2e10 ''
|-TypedefDecl 0x557079bd4140 <line:304:1, col:22> col:22 referenced pthread_spinlock_t 'volatile int'
| `-QualType 0x557079b55f14 'volatile int' volatile
|   `-BuiltinType 0x557079b55f10 'int'
|-RecordDecl 0x557079bd4198 <line:305:9, line:309:1> line:305:9 union definition
| |-FieldDecl 0x557079bd42e0 <line:307:3, col:17> col:8 __size 'char [32]'
| `-FieldDecl 0x557079bd4348 <line:308:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x557079bd4400 <line:305:1, line:309:3> col:3 referenced pthread_barrier_t 'union pthread_barrier_t':'pthread_barrier_t'
| `-ElaboratedType 0x557079bd43a0 'union pthread_barrier_t' sugar
|   `-RecordType 0x557079bd4220 'pthread_barrier_t'
|     `-Record 0x557079bd4198 ''
|-RecordDecl 0x557079bd4470 <line:310:9, line:314:1> line:310:9 union definition
| |-FieldDecl 0x557079bd4570 <line:312:3, col:16> col:8 __size 'char [4]'
| `-FieldDecl 0x557079bd45d8 <line:313:3, col:7> col:7 __align 'int'
|-TypedefDecl 0x557079bd4690 <line:310:1, line:314:3> col:3 referenced pthread_barrierattr_t 'union pthread_barrierattr_t':'pthread_barrierattr_t'
| `-ElaboratedType 0x557079bd4630 'union pthread_barrierattr_t' sugar
|   `-RecordType 0x557079bd44f0 'pthread_barrierattr_t'
|     `-Record 0x557079bd4470 ''
|-TypedefDecl 0x557079bd47a8 <line:315:1, col:29> col:18 referenced __jmp_buf 'long [8]'
| `-ConstantArrayType 0x557079bd4740 'long [8]' 8 
|   `-BuiltinType 0x557079b55f30 'long'
|-EnumDecl 0x557079bd4800 <line:316:1, line:320:1> line:316:1
| |-EnumConstantDecl 0x557079bd48c8 <line:318:3> col:3 PTHREAD_CREATE_JOINABLE 'int'
| `-EnumConstantDecl 0x557079bd4918 <line:319:3> col:3 PTHREAD_CREATE_DETACHED 'int'
|-EnumDecl 0x557079bd4968 <line:321:1, line:332:1> line:321:1
| |-EnumConstantDecl 0x557079bd4a38 <line:323:3> col:3 referenced PTHREAD_MUTEX_TIMED_NP 'int'
| |-EnumConstantDecl 0x557079bd4a88 <line:324:3> col:3 referenced PTHREAD_MUTEX_RECURSIVE_NP 'int'
| |-EnumConstantDecl 0x557079bd4ad8 <line:325:3> col:3 referenced PTHREAD_MUTEX_ERRORCHECK_NP 'int'
| |-EnumConstantDecl 0x557079bd4b28 <line:326:3> col:3 PTHREAD_MUTEX_ADAPTIVE_NP 'int'
| |-EnumConstantDecl 0x557079bd4bb0 <line:328:3, col:26> col:3 referenced PTHREAD_MUTEX_NORMAL 'int'
| | `-ConstantExpr 0x557079bd4b98 <col:26> 'int'
| |   `-DeclRefExpr 0x557079bd4b78 <col:26> 'int' EnumConstant 0x557079bd4a38 'PTHREAD_MUTEX_TIMED_NP' 'int'
| |-EnumConstantDecl 0x557079bd4c38 <line:329:3, col:29> col:3 PTHREAD_MUTEX_RECURSIVE 'int'
| | `-ConstantExpr 0x557079bd4c20 <col:29> 'int'
| |   `-DeclRefExpr 0x557079bd4c00 <col:29> 'int' EnumConstant 0x557079bd4a88 'PTHREAD_MUTEX_RECURSIVE_NP' 'int'
| |-EnumConstantDecl 0x557079bd4cc0 <line:330:3, col:30> col:3 PTHREAD_MUTEX_ERRORCHECK 'int'
| | `-ConstantExpr 0x557079bd4ca8 <col:30> 'int'
| |   `-DeclRefExpr 0x557079bd4c88 <col:30> 'int' EnumConstant 0x557079bd4ad8 'PTHREAD_MUTEX_ERRORCHECK_NP' 'int'
| `-EnumConstantDecl 0x557079bd4d48 <line:331:3, col:27> col:3 PTHREAD_MUTEX_DEFAULT 'int'
|   `-ConstantExpr 0x557079bd4d30 <col:27> 'int'
|     `-DeclRefExpr 0x557079bd4d10 <col:27> 'int' EnumConstant 0x557079bd4bb0 'PTHREAD_MUTEX_NORMAL' 'int'
|-EnumDecl 0x557079bd4d98 <line:333:1, line:339:1> line:333:1
| |-EnumConstantDecl 0x557079bd4e68 <line:335:3> col:3 referenced PTHREAD_MUTEX_STALLED 'int'
| |-EnumConstantDecl 0x557079bd4ef0 <line:336:3, col:30> col:3 PTHREAD_MUTEX_STALLED_NP 'int'
| | `-ConstantExpr 0x557079bd4ed8 <col:30> 'int'
| |   `-DeclRefExpr 0x557079bd4eb8 <col:30> 'int' EnumConstant 0x557079bd4e68 'PTHREAD_MUTEX_STALLED' 'int'
| |-EnumConstantDecl 0x557079bd4f40 <line:337:3> col:3 referenced PTHREAD_MUTEX_ROBUST 'int'
| `-EnumConstantDecl 0x557079bd4fc8 <line:338:3, col:29> col:3 PTHREAD_MUTEX_ROBUST_NP 'int'
|   `-ConstantExpr 0x557079bd4fb0 <col:29> 'int'
|     `-DeclRefExpr 0x557079bd4f90 <col:29> 'int' EnumConstant 0x557079bd4f40 'PTHREAD_MUTEX_ROBUST' 'int'
|-EnumDecl 0x557079bd5018 <line:340:1, line:345:1> line:340:1
| |-EnumConstantDecl 0x557079bd50e8 <line:342:3> col:3 PTHREAD_PRIO_NONE 'int'
| |-EnumConstantDecl 0x557079bd5150 <line:343:3> col:3 PTHREAD_PRIO_INHERIT 'int'
| `-EnumConstantDecl 0x557079bd51a0 <line:344:3> col:3 PTHREAD_PRIO_PROTECT 'int'
|-EnumDecl 0x557079bd51f0 <line:346:1, line:352:1> line:346:1
| |-EnumConstantDecl 0x557079bd52b8 <line:348:3> col:3 referenced PTHREAD_RWLOCK_PREFER_READER_NP 'int'
| |-EnumConstantDecl 0x557079bd5308 <line:349:3> col:3 PTHREAD_RWLOCK_PREFER_WRITER_NP 'int'
| |-EnumConstantDecl 0x557079bd5358 <line:350:3> col:3 PTHREAD_RWLOCK_PREFER_WRITER_NONRECURSIVE_NP 'int'
| `-EnumConstantDecl 0x557079bd53e0 <line:351:3, col:31> col:3 PTHREAD_RWLOCK_DEFAULT_NP 'int'
|   `-ConstantExpr 0x557079bd53c8 <col:31> 'int'
|     `-DeclRefExpr 0x557079bd53a8 <col:31> 'int' EnumConstant 0x557079bd52b8 'PTHREAD_RWLOCK_PREFER_READER_NP' 'int'
|-EnumDecl 0x557079bd5430 <line:353:1, line:357:1> line:353:1
| |-EnumConstantDecl 0x557079bd54f8 <line:355:3> col:3 PTHREAD_INHERIT_SCHED 'int'
| `-EnumConstantDecl 0x557079bd5548 <line:356:3> col:3 PTHREAD_EXPLICIT_SCHED 'int'
|-EnumDecl 0x557079bd5598 <line:358:1, line:362:1> line:358:1
| |-EnumConstantDecl 0x557079bd5668 <line:360:3> col:3 PTHREAD_SCOPE_SYSTEM 'int'
| `-EnumConstantDecl 0x557079bd56b8 <line:361:3> col:3 PTHREAD_SCOPE_PROCESS 'int'
|-EnumDecl 0x557079bd5708 <line:363:1, line:367:1> line:363:1
| |-EnumConstantDecl 0x557079bd57d8 <line:365:3> col:3 PTHREAD_PROCESS_PRIVATE 'int'
| `-EnumConstantDecl 0x557079bd5828 <line:366:3> col:3 PTHREAD_PROCESS_SHARED 'int'
|-RecordDecl 0x557079bd5878 <line:368:1, line:374:1> line:368:8 struct _pthread_cleanup_buffer definition
| |-FieldDecl 0x557079bd5ab8 <line:370:3, col:28> col:10 __routine 'void (*)(void *)'
| |-FieldDecl 0x557079bd5b20 <line:371:3, col:9> col:9 __arg 'void *'
| |-FieldDecl 0x557079bd5b88 <line:372:3, col:7> col:7 __canceltype 'int'
| `-FieldDecl 0x557079bd5ca8 <line:373:3, col:35> col:35 __prev 'struct _pthread_cleanup_buffer *'
|-EnumDecl 0x557079bd5cf8 <line:375:1, line:379:1> line:375:1
| |-EnumConstantDecl 0x557079bd5dc8 <line:377:3> col:3 PTHREAD_CANCEL_ENABLE 'int'
| `-EnumConstantDecl 0x557079bd5e18 <line:378:3> col:3 PTHREAD_CANCEL_DISABLE 'int'
|-EnumDecl 0x557079bd5e68 <line:380:1, line:384:1> line:380:1
| |-EnumConstantDecl 0x557079bd5f38 <line:382:3> col:3 PTHREAD_CANCEL_DEFERRED 'int'
| `-EnumConstantDecl 0x557079bd5f88 <line:383:3> col:3 PTHREAD_CANCEL_ASYNCHRONOUS 'int'
|-FunctionDecl 0x557079bd65b8 <line:386:1, line:389:96> line:386:12 used pthread_create 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' extern
| |-ParmVarDecl 0x557079bd6080 <col:28, col:50> col:50 __newthread 'pthread_t *restrict'
| |-ParmVarDecl 0x557079bd61a0 <line:387:7, col:40> col:40 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x557079bd63a0 <line:388:7, col:39> col:15 __start_routine 'void *(*)(void *)'
| |-ParmVarDecl 0x557079bd6420 <line:389:7, col:24> col:24 __arg 'void *restrict'
| |-NoThrowAttr 0x557079bd6678 <col:47>
| |-NonNullAttr 0x557079bd66d0 <col:77, col:94> 1 3
| `-CallbackAttr 0x557079bd6708 <line:386:12> Implicit 2 3
|-FunctionDecl 0x557079bd6830 <line:390:1, col:72> col:13 pthread_exit 'void (void *) __attribute__((noreturn))' extern
| `-ParmVarDecl 0x557079bd6760 <col:27, col:33> col:33 __retval 'void *'
|-FunctionDecl 0x557079bd6a88 <line:391:1, col:64> col:12 pthread_join 'int (pthread_t, void **)' extern
| |-ParmVarDecl 0x557079bd68e8 <col:26, col:36> col:36 __th 'pthread_t':'unsigned long'
| `-ParmVarDecl 0x557079bd6968 <col:42, col:49> col:49 __thread_return 'void **'
|-FunctionDecl 0x557079bd6c58 <line:392:1, col:83> col:12 pthread_detach 'int (pthread_t)' extern
| |-ParmVarDecl 0x557079bd6b48 <col:28, col:38> col:38 __th 'pthread_t':'unsigned long'
| `-NoThrowAttr 0x557079bd6d00 <col:60>
|-FunctionDecl 0x557079bd6e50 <line:393:1, col:105> col:18 pthread_self 'pthread_t (void)' extern
| |-NoThrowAttr 0x557079bd6ef0 <col:54>
| `-ConstAttr 0x557079bd6f48 <col:95>
|-FunctionDecl 0x557079bd8990 <line:394:1, line:395:70> line:394:12 pthread_equal 'int (pthread_t, pthread_t)' extern
| |-ParmVarDecl 0x557079bd6f80 <col:27, col:37> col:37 __thread1 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x557079bd6ff8 <col:48, col:58> col:58 __thread2 'pthread_t':'unsigned long'
| |-NoThrowAttr 0x557079bd8a40 <line:395:19>
| `-ConstAttr 0x557079bd8a98 <col:60>
|-FunctionDecl 0x557079bd8c68 <line:396:1, col:128> col:12 pthread_attr_init 'int (pthread_attr_t *)' extern
| |-ParmVarDecl 0x557079bd8b30 <col:31, col:47> col:47 __attr 'pthread_attr_t *'
| |-NoThrowAttr 0x557079bd8d10 <col:71>
| `-NonNullAttr 0x557079bd8d68 <col:112, col:126> 1
|-FunctionDecl 0x557079bd8e70 <line:397:1, line:398:79> line:397:12 pthread_attr_destroy 'int (pthread_attr_t *)' extern
| |-ParmVarDecl 0x557079bd8db8 <col:34, col:50> col:50 __attr 'pthread_attr_t *'
| |-NoThrowAttr 0x557079bd8f18 <line:398:22>
| `-NonNullAttr 0x557079bd8f70 <col:63, col:77> 1
|-FunctionDecl 0x557079bd9198 <line:399:1, line:401:82> line:399:12 pthread_attr_getdetachstate 'int (const pthread_attr_t *, int *)' extern
| |-ParmVarDecl 0x557079bd8fb8 <col:41, col:63> col:63 __attr 'const pthread_attr_t *'
| |-ParmVarDecl 0x557079bd9038 <line:400:6, col:11> col:11 __detachstate 'int *'
| |-NoThrowAttr 0x557079bd9248 <line:401:22>
| `-NonNullAttr 0x557079bd92a0 <col:63, col:80> 1 2
|-FunctionDecl 0x557079bd94a8 <line:402:1, line:404:79> line:402:12 pthread_attr_setdetachstate 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x557079bd92e8 <col:41, col:57> col:57 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x557079bd9368 <line:403:6, col:10> col:10 __detachstate 'int'
| |-NoThrowAttr 0x557079bd9558 <line:404:22>
| `-NonNullAttr 0x557079bd95b0 <col:63, col:77> 1
|-FunctionDecl 0x557079bd9808 <line:405:1, line:407:82> line:405:12 pthread_attr_getguardsize 'int (const pthread_attr_t *, size_t *)' extern
| |-ParmVarDecl 0x557079bd95f8 <col:39, col:61> col:61 __attr 'const pthread_attr_t *'
| |-ParmVarDecl 0x557079bd96a0 <line:406:11, col:19> col:19 __guardsize 'size_t *'
| |-NoThrowAttr 0x557079bd98b8 <line:407:22>
| `-NonNullAttr 0x557079bd9910 <col:63, col:80> 1 2
|-FunctionDecl 0x557079bdab68 <line:408:1, line:410:79> line:408:12 pthread_attr_setguardsize 'int (pthread_attr_t *, size_t)' extern
| |-ParmVarDecl 0x557079bda9b0 <col:39, col:55> col:55 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x557079bdaa28 <line:409:11, col:18> col:18 __guardsize 'size_t':'unsigned long'
| |-NoThrowAttr 0x557079bdac18 <line:410:22>
| `-NonNullAttr 0x557079bdac70 <col:63, col:77> 1
|-FunctionDecl 0x557079bdaea8 <line:411:1, line:413:82> line:411:12 pthread_attr_getschedparam 'int (const pthread_attr_t *restrict, struct sched_param *restrict)' extern
| |-ParmVarDecl 0x557079bdacb8 <col:40, col:73> col:73 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x557079bdad48 <line:412:12, col:43> col:43 __param 'struct sched_param *restrict'
| |-NoThrowAttr 0x557079bdaf58 <line:413:22>
| `-NonNullAttr 0x557079bdafb0 <col:63, col:80> 1 2
|-FunctionDecl 0x557079bdb1e8 <line:414:1, line:416:97> line:414:12 pthread_attr_setschedparam 'int (pthread_attr_t *restrict, const struct sched_param *restrict)' extern
| |-ParmVarDecl 0x557079bdaff8 <col:40, col:67> col:67 __attr 'pthread_attr_t *restrict'
| |-ParmVarDecl 0x557079bdb088 <line:415:12, line:416:12> col:12 __param 'const struct sched_param *restrict'
| |-NoThrowAttr 0x557079bdb298 <col:37>
| `-NonNullAttr 0x557079bdb2f0 <col:78, col:95> 1 2
|-FunctionDecl 0x557079bdb4d8 <line:417:1, line:419:82> line:417:12 pthread_attr_getschedpolicy 'int (const pthread_attr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x557079bdb338 <col:41, line:418:6> col:6 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x557079bdb3b8 <col:14, col:30> col:30 __policy 'int *restrict'
| |-NoThrowAttr 0x557079bdb588 <line:419:22>
| `-NonNullAttr 0x557079bdb5e0 <col:63, col:80> 1 2
|-FunctionDecl 0x557079bdb768 <line:420:1, line:421:79> line:420:12 pthread_attr_setschedpolicy 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x557079bdb628 <col:41, col:57> col:57 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x557079bdb6a8 <col:65, col:69> col:69 __policy 'int'
| |-NoThrowAttr 0x557079bdb818 <line:421:22>
| `-NonNullAttr 0x557079bdb870 <col:63, col:77> 1
|-FunctionDecl 0x557079bdba38 <line:422:1, line:424:82> line:422:12 pthread_attr_getinheritsched 'int (const pthread_attr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x557079bdb8b8 <col:42, line:423:7> col:7 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x557079bdb938 <col:15, col:31> col:31 __inherit 'int *restrict'
| |-NoThrowAttr 0x557079bdbae8 <line:424:22>
| `-NonNullAttr 0x557079bdbb40 <col:63, col:80> 1 2
|-FunctionDecl 0x557079bdbcc8 <line:425:1, line:427:79> line:425:12 pthread_attr_setinheritsched 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x557079bdbb88 <col:42, col:58> col:58 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x557079bdbc08 <line:426:7, col:11> col:11 __inherit 'int'
| |-NoThrowAttr 0x557079bdbd78 <line:427:22>
| `-NonNullAttr 0x557079bdbdd0 <col:63, col:77> 1
|-FunctionDecl 0x557079bdbf78 <line:428:1, line:430:82> line:428:12 pthread_attr_getscope 'int (const pthread_attr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x557079bdbe18 <col:35, col:68> col:68 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x557079bdbe98 <line:429:7, col:23> col:23 __scope 'int *restrict'
| |-NoThrowAttr 0x557079bdc028 <line:430:22>
| `-NonNullAttr 0x557079bdc080 <col:63, col:80> 1 2
|-FunctionDecl 0x557079bdc208 <line:431:1, line:432:79> line:431:12 pthread_attr_setscope 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x557079bdc0c8 <col:35, col:51> col:51 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x557079bdc148 <col:59, col:63> col:63 __scope 'int'
| |-NoThrowAttr 0x557079bdc2b8 <line:432:22>
| `-NonNullAttr 0x557079bdc310 <col:63, col:77> 1
|-FunctionDecl 0x557079bdc538 <line:433:1, line:435:115> line:433:12 pthread_attr_getstackaddr 'int (const pthread_attr_t *restrict, void **restrict)' extern
| |-ParmVarDecl 0x557079bdc358 <col:39, line:434:11> col:11 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x557079bdc3d8 <col:19, col:37> col:37 __stackaddr 'void **restrict'
| |-NoThrowAttr 0x557079bdc5e8 <line:435:22>
| |-NonNullAttr 0x557079bdc640 <col:63, col:80> 1 2
| `-DeprecatedAttr 0x557079bdc678 <col:100> "" ""
|-FunctionDecl 0x557079bdc888 <line:436:1, line:438:112> line:436:12 pthread_attr_setstackaddr 'int (pthread_attr_t *, void *)' extern
| |-ParmVarDecl 0x557079bdc6c8 <col:39, col:55> col:55 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x557079bdc748 <line:437:11, col:17> col:17 __stackaddr 'void *'
| |-NoThrowAttr 0x557079bdc938 <line:438:22>
| |-NonNullAttr 0x557079bdc990 <col:63, col:77> 1
| `-DeprecatedAttr 0x557079bdc9d8 <col:97> "" ""
|-FunctionDecl 0x557079bdcbc8 <line:439:1, line:441:82> line:439:12 pthread_attr_getstacksize 'int (const pthread_attr_t *restrict, size_t *restrict)' extern
| |-ParmVarDecl 0x557079bdca28 <col:39, line:440:11> col:11 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x557079bdcaa0 <col:19, col:38> col:38 __stacksize 'size_t *restrict'
| |-NoThrowAttr 0x557079bdcc78 <line:441:22>
| `-NonNullAttr 0x557079bdccd0 <col:63, col:80> 1 2
|-FunctionDecl 0x557079bdce50 <line:442:1, line:444:79> line:442:12 pthread_attr_setstacksize 'int (pthread_attr_t *, size_t)' extern
| |-ParmVarDecl 0x557079bdcd18 <col:39, col:55> col:55 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x557079bdcd90 <line:443:11, col:18> col:18 __stacksize 'size_t':'unsigned long'
| |-NoThrowAttr 0x557079bdcf00 <line:444:22>
| `-NonNullAttr 0x557079bdcf58 <col:63, col:77> 1
|-FunctionDecl 0x557079bdd248 <line:445:1, line:448:85> line:445:12 pthread_attr_getstack 'int (const pthread_attr_t *restrict, void **restrict, size_t *restrict)' extern
| |-ParmVarDecl 0x557079bdcfa8 <col:35, col:68> col:68 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x557079bdd028 <line:446:7, col:25> col:25 __stackaddr 'void **restrict'
| |-ParmVarDecl 0x557079bdd0a0 <line:447:7, col:26> col:26 __stacksize 'size_t *restrict'
| |-NoThrowAttr 0x557079bdd300 <line:448:22>
| `-NonNullAttr 0x557079bdd358 <col:63, col:83> 1 2 3
|-FunctionDecl 0x557079bdd608 <line:449:1, line:450:100> line:449:12 pthread_attr_setstack 'int (pthread_attr_t *, void *, size_t)' extern
| |-ParmVarDecl 0x557079bdd3b0 <col:35, col:51> col:51 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x557079bdd430 <col:59, col:65> col:65 __stackaddr 'void *'
| |-ParmVarDecl 0x557079bdd4a8 <line:450:7, col:14> col:14 __stacksize 'size_t':'unsigned long'
| |-NoThrowAttr 0x557079bdd6c0 <col:43>
| `-NonNullAttr 0x557079bdd718 <col:84, col:98> 1
|-FunctionDecl 0x557079bdda20 <line:451:1, line:453:79> line:451:12 pthread_setschedparam 'int (pthread_t, int, const struct sched_param *)' extern
| |-ParmVarDecl 0x557079bdd768 <col:35, col:45> col:45 __target_thread 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x557079bdd7e8 <col:62, col:66> col:66 __policy 'int'
| |-ParmVarDecl 0x557079bdd878 <line:452:7, col:33> col:33 __param 'const struct sched_param *'
| |-NoThrowAttr 0x557079bddad8 <line:453:22>
| `-NonNullAttr 0x557079bddb30 <col:63, col:77> 3
|-FunctionDecl 0x557079bdde08 <line:454:1, line:457:82> line:454:12 pthread_getschedparam 'int (pthread_t, int *restrict, struct sched_param *restrict)' extern
| |-ParmVarDecl 0x557079bddb78 <col:35, col:45> col:45 __target_thread 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x557079bddbf8 <line:455:7, col:23> col:23 __policy 'int *restrict'
| |-ParmVarDecl 0x557079bddc88 <line:456:7, col:38> col:38 __param 'struct sched_param *restrict'
| |-NoThrowAttr 0x557079bddec0 <line:457:22>
| `-NonNullAttr 0x557079bddf18 <col:63, col:80> 2 3
|-FunctionDecl 0x557079bde108 <line:458:1, line:459:45> line:458:12 pthread_setschedprio 'int (pthread_t, int)' extern
| |-ParmVarDecl 0x557079bddf68 <col:34, col:44> col:44 __target_thread 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x557079bddfe8 <col:61, col:65> col:65 __prio 'int'
| `-NoThrowAttr 0x557079bde1b8 <line:459:22>
|-FunctionDecl 0x557079bde588 <line:460:1, line:461:71> line:460:12 pthread_once 'int (pthread_once_t *, void (*)(void))' extern
| |-ParmVarDecl 0x557079bde280 <col:26, col:42> col:42 __once_control 'pthread_once_t *'
| |-ParmVarDecl 0x557079bde420 <line:461:5, col:33> col:12 __init_routine 'void (*)(void)'
| `-NonNullAttr 0x557079bde638 <col:52, col:69> 1 2
|-FunctionDecl 0x557079bde7e0 <line:462:1, col:64> col:12 pthread_setcancelstate 'int (int, int *)' extern
| |-ParmVarDecl 0x557079bde6c0 <col:36, col:40> col:40 __state 'int'
| `-ParmVarDecl 0x557079bde740 <col:49, col:54> col:54 __oldstate 'int *'
|-FunctionDecl 0x557079bde9f0 <line:463:1, col:61> col:12 pthread_setcanceltype 'int (int, int *)' extern
| |-ParmVarDecl 0x557079bde8a8 <col:35, col:39> col:39 __type 'int'
| `-ParmVarDecl 0x557079bde928 <col:47, col:52> col:52 __oldtype 'int *'
|-FunctionDecl 0x557079bdeb48 <line:464:1, col:42> col:12 pthread_cancel 'int (pthread_t)' extern
| `-ParmVarDecl 0x557079bdeab0 <col:28, col:38> col:38 __th 'pthread_t':'unsigned long'
|-FunctionDecl 0x557079bdec88 <line:465:1, col:37> col:13 pthread_testcancel 'void (void)' extern
|-RecordDecl 0x557079bded28 <line:466:9, line:474:1> line:466:9 struct definition
| |-RecordDecl 0x557079bdedd8 <line:468:3, line:472:3> line:468:3 struct definition
| | |-FieldDecl 0x557079bdeec8 <line:470:5, col:15> col:15 __cancel_jmp_buf '__jmp_buf':'long [8]'
| | `-FieldDecl 0x557079bdef30 <line:471:5, col:9> col:9 __mask_was_saved 'int'
| |-FieldDecl 0x557079bdf100 <line:468:3, line:472:23> col:5 __cancel_jmp_buf 'struct (anonymous struct at ./split_2/mix009_rmo.opt_false-unreach-call.i:468:3) [1]'
| `-FieldDecl 0x557079bdf1f8 <line:473:3, col:16> col:9 __pad 'void *[4]'
|-TypedefDecl 0x557079bdf2b0 <line:466:1, line:474:3> col:3 referenced __pthread_unwind_buf_t 'struct __pthread_unwind_buf_t':'__pthread_unwind_buf_t'
| |-ElaboratedType 0x557079bdf250 'struct __pthread_unwind_buf_t' sugar
| | `-RecordType 0x557079bdedb0 '__pthread_unwind_buf_t'
| |   `-Record 0x557079bded28 ''
| `-AlignedAttr 0x557079bdf308 <col:42> aligned
|   `-<<<NULL>>>
|-RecordDecl 0x557079bdf380 <line:475:1, line:481:1> line:475:8 struct __pthread_cleanup_frame definition
| |-FieldDecl 0x557079bdf4e0 <line:477:3, col:35> col:10 __cancel_routine 'void (*)(void *)'
| |-FieldDecl 0x557079bdf548 <line:478:3, col:9> col:9 __cancel_arg 'void *'
| |-FieldDecl 0x557079bdf5b0 <line:479:3, col:7> col:7 __do_it 'int'
| `-FieldDecl 0x557079bdf618 <line:480:3, col:7> col:7 __cancel_type 'int'
|-FunctionDecl 0x557079bdf820 <line:482:1, col:69> col:13 __pthread_register_cancel 'void (__pthread_unwind_buf_t *)' extern
| `-ParmVarDecl 0x557079bdf710 <col:40, col:64> col:64 __buf '__pthread_unwind_buf_t *'
|-FunctionDecl 0x557079bdfa00 <line:484:1, col:71> col:13 __pthread_unregister_cancel 'void (__pthread_unwind_buf_t *)' extern
| `-ParmVarDecl 0x557079bdf8d8 <col:42, col:66> col:66 __buf '__pthread_unwind_buf_t *'
|-FunctionDecl 0x557079bdfbc0 <line:486:1, line:488:31> line:486:13 __pthread_unwind_next 'void (__pthread_unwind_buf_t *) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x557079bdfab8 <col:36, col:60> col:60 __buf '__pthread_unwind_buf_t *'
| `-WeakAttr 0x557079bdfc68 <line:488:22>
|-RecordDecl 0x557079bdfcc0 <line:490:1, col:8> col:8 struct __jmp_buf_tag
|-FunctionDecl 0x557079bdffd8 <line:491:1, col:98> col:12 __sigsetjmp 'int (struct __jmp_buf_tag *, int)' extern
| |-ParmVarDecl 0x557079bdfe38 <col:25, col:47> col:47 __env 'struct __jmp_buf_tag *'
| |-ParmVarDecl 0x557079bdfeb8 <col:54, col:58> col:58 __savemask 'int'
| |-NoThrowAttr 0x557079be0088 <col:86>
| `-ReturnsTwiceAttr 0x557079be00e0 <col:12> Implicit
|-FunctionDecl 0x557079be0408 <line:492:1, line:494:79> line:492:12 pthread_mutex_init 'int (pthread_mutex_t *, const pthread_mutexattr_t *)' extern
| |-ParmVarDecl 0x557079be01b0 <col:32, col:49> col:49 __mutex 'pthread_mutex_t *'
| |-ParmVarDecl 0x557079be02c0 <line:493:11, col:38> col:38 __mutexattr 'const pthread_mutexattr_t *'
| |-NoThrowAttr 0x557079be04b8 <line:494:22>
| `-NonNullAttr 0x557079be0510 <col:63, col:77> 1
|-FunctionDecl 0x557079be0688 <line:495:1, line:496:79> line:495:12 pthread_mutex_destroy 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x557079be0558 <col:35, col:52> col:52 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x557079be0730 <line:496:22>
| `-NonNullAttr 0x557079be0788 <col:63, col:77> 1
|-FunctionDecl 0x557079be0890 <line:497:1, line:498:68> line:497:12 pthread_mutex_trylock 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x557079be07d8 <col:35, col:52> col:52 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x557079be0938 <line:498:22>
| `-NonNullAttr 0x557079be0990 <col:52, col:66> 1
|-FunctionDecl 0x557079be1ad8 <line:499:1, line:500:68> line:499:12 pthread_mutex_lock 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x557079be1a20 <col:32, col:49> col:49 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x557079be1b80 <line:500:22>
| `-NonNullAttr 0x557079be1bd8 <col:52, col:66> 1
|-FunctionDecl 0x557079be1e18 <line:501:1, line:503:85> line:501:12 pthread_mutex_timedlock 'int (pthread_mutex_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x557079be1c28 <col:37, col:65> col:65 __mutex 'pthread_mutex_t *restrict'
| |-ParmVarDecl 0x557079be1cb8 <line:502:9, line:503:9> col:9 __abstime 'const struct timespec *restrict'
| |-NoThrowAttr 0x557079be1ec8 <col:36>
| `-NonNullAttr 0x557079be1f20 <col:66, col:83> 1 2
|-FunctionDecl 0x557079be2020 <line:504:1, line:505:68> line:504:12 pthread_mutex_unlock 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x557079be1f68 <col:34, col:51> col:51 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x557079be20c8 <line:505:22>
| `-NonNullAttr 0x557079be2120 <col:52, col:66> 1
|-FunctionDecl 0x557079be23b8 <line:506:1, line:509:82> line:506:12 pthread_mutex_getprioceiling 'int (const pthread_mutex_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x557079be21d0 <col:42, line:507:18> col:18 __mutex 'const pthread_mutex_t *restrict'
| |-ParmVarDecl 0x557079be2250 <line:508:7, col:23> col:23 __prioceiling 'int *restrict'
| |-NoThrowAttr 0x557079be2468 <line:509:22>
| `-NonNullAttr 0x557079be24c0 <col:63, col:80> 1 2
|-FunctionDecl 0x557079be2788 <line:510:1, line:513:82> line:510:12 pthread_mutex_setprioceiling 'int (pthread_mutex_t *restrict, int, int *restrict)' extern
| |-ParmVarDecl 0x557079be2508 <col:42, col:70> col:70 __mutex 'pthread_mutex_t *restrict'
| |-ParmVarDecl 0x557079be2588 <line:511:7, col:11> col:11 __prioceiling 'int'
| |-ParmVarDecl 0x557079be2608 <line:512:7, col:23> col:23 __old_ceiling 'int *restrict'
| |-NoThrowAttr 0x557079be2840 <line:513:22>
| `-NonNullAttr 0x557079be2898 <col:63, col:80> 1 3
|-FunctionDecl 0x557079be2a30 <line:514:1, line:515:79> line:514:12 pthread_mutex_consistent 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x557079be28e8 <col:38, col:55> col:55 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x557079be2ad8 <line:515:22>
| `-NonNullAttr 0x557079be2b30 <col:63, col:77> 1
|-FunctionDecl 0x557079be2d18 <line:516:1, line:517:79> line:516:12 pthread_mutexattr_init 'int (pthread_mutexattr_t *)' extern
| |-ParmVarDecl 0x557079be2be0 <col:36, col:57> col:57 __attr 'pthread_mutexattr_t *'
| |-NoThrowAttr 0x557079be2dc0 <line:517:22>
| `-NonNullAttr 0x557079be2e18 <col:63, col:77> 1
|-FunctionDecl 0x557079be2f20 <line:518:1, line:519:79> line:518:12 pthread_mutexattr_destroy 'int (pthread_mutexattr_t *)' extern
| |-ParmVarDecl 0x557079be2e68 <col:39, col:60> col:60 __attr 'pthread_mutexattr_t *'
| |-NoThrowAttr 0x557079be2fc8 <line:519:22>
| `-NonNullAttr 0x557079be3020 <col:63, col:77> 1
|-FunctionDecl 0x557079be3248 <line:520:1, line:523:82> line:520:12 pthread_mutexattr_getpshared 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x557079be3068 <col:42, line:521:18> col:18 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x557079be30e8 <line:522:7, col:23> col:23 __pshared 'int *restrict'
| |-NoThrowAttr 0x557079be32f8 <line:523:22>
| `-NonNullAttr 0x557079be3350 <col:63, col:80> 1 2
|-FunctionDecl 0x557079be3558 <line:524:1, line:526:79> line:524:12 pthread_mutexattr_setpshared 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x557079be3398 <col:42, col:63> col:63 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x557079be3418 <line:525:7, col:11> col:11 __pshared 'int'
| |-NoThrowAttr 0x557079be3608 <line:526:22>
| `-NonNullAttr 0x557079be3660 <col:63, col:77> 1
|-FunctionDecl 0x557079be3808 <line:527:1, line:529:82> line:527:12 pthread_mutexattr_gettype 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x557079be36a8 <col:39, line:528:11> col:11 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x557079be3728 <col:19, col:35> col:35 __kind 'int *restrict'
| |-NoThrowAttr 0x557079be38b8 <line:529:22>
| `-NonNullAttr 0x557079be3910 <col:63, col:80> 1 2
|-FunctionDecl 0x557079be3b00 <line:530:1, line:531:79> line:530:12 pthread_mutexattr_settype 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x557079be3958 <col:39, col:60> col:60 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x557079be3a40 <col:68, col:72> col:72 __kind 'int'
| |-NoThrowAttr 0x557079be3bb0 <line:531:22>
| `-NonNullAttr 0x557079be3c08 <col:63, col:77> 1
|-FunctionDecl 0x557079be3db8 <line:532:1, line:535:82> line:532:12 pthread_mutexattr_getprotocol 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x557079be3c58 <col:43, line:533:19> col:19 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x557079be3cd8 <line:534:8, col:24> col:24 __protocol 'int *restrict'
| |-NoThrowAttr 0x557079be3e68 <line:535:22>
| `-NonNullAttr 0x557079be3ec0 <col:63, col:80> 1 2
|-FunctionDecl 0x557079be4048 <line:536:1, line:538:79> line:536:12 pthread_mutexattr_setprotocol 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x557079be3f08 <col:43, col:64> col:64 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x557079be3f88 <line:537:8, col:12> col:12 __protocol 'int'
| |-NoThrowAttr 0x557079be40f8 <line:538:22>
| `-NonNullAttr 0x557079be4150 <col:63, col:77> 1
|-FunctionDecl 0x557079be42f8 <line:539:1, line:542:82> line:539:12 pthread_mutexattr_getprioceiling 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x557079be4198 <col:46, line:540:22> col:22 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x557079be4218 <line:541:11, col:27> col:27 __prioceiling 'int *restrict'
| |-NoThrowAttr 0x557079be43a8 <line:542:22>
| `-NonNullAttr 0x557079be4400 <col:63, col:80> 1 2
|-FunctionDecl 0x557079be4588 <line:543:1, line:545:79> line:543:12 pthread_mutexattr_setprioceiling 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x557079be4448 <col:46, col:67> col:67 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x557079be44c8 <line:544:11, col:15> col:15 __prioceiling 'int'
| |-NoThrowAttr 0x557079be4638 <line:545:22>
| `-NonNullAttr 0x557079be4690 <col:63, col:77> 1
|-FunctionDecl 0x557079be4878 <line:546:1, line:548:82> line:546:12 pthread_mutexattr_getrobust 'int (const pthread_mutexattr_t *, int *)' extern
| |-ParmVarDecl 0x557079be46d8 <col:41, col:68> col:68 __attr 'const pthread_mutexattr_t *'
| |-ParmVarDecl 0x557079be4758 <line:547:6, col:11> col:11 __robustness 'int *'
| |-NoThrowAttr 0x557079be4928 <line:548:22>
| `-NonNullAttr 0x557079be4980 <col:63, col:80> 1 2
|-FunctionDecl 0x557079be5b38 <line:549:1, line:551:79> line:549:12 pthread_mutexattr_setrobust 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x557079be49c8 <col:41, col:62> col:62 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x557079be5a78 <line:550:6, col:10> col:10 __robustness 'int'
| |-NoThrowAttr 0x557079be5be8 <line:551:22>
| `-NonNullAttr 0x557079be5c40 <col:63, col:77> 1
|-FunctionDecl 0x557079be5f78 <line:552:1, line:554:86> line:552:12 pthread_rwlock_init 'int (pthread_rwlock_t *restrict, const pthread_rwlockattr_t *restrict)' extern
| |-ParmVarDecl 0x557079be5d20 <col:33, col:62> col:62 __rwlock 'pthread_rwlock_t *restrict'
| |-ParmVarDecl 0x557079be5e30 <line:553:5, line:554:5> col:5 __attr 'const pthread_rwlockattr_t *restrict'
| |-NoThrowAttr 0x557079be6028 <col:29>
| `-NonNullAttr 0x557079be6080 <col:70, col:84> 1
|-FunctionDecl 0x557079be61f8 <line:555:1, line:556:79> line:555:12 pthread_rwlock_destroy 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x557079be60c8 <col:36, col:54> col:54 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x557079be62a0 <line:556:22>
| `-NonNullAttr 0x557079be62f8 <col:63, col:77> 1
|-FunctionDecl 0x557079be6400 <line:557:1, line:558:68> line:557:12 pthread_rwlock_rdlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x557079be6348 <col:35, col:53> col:53 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x557079be64a8 <line:558:22>
| `-NonNullAttr 0x557079be6500 <col:52, col:66> 1
|-FunctionDecl 0x557079be6600 <line:559:1, line:560:65> line:559:12 pthread_rwlock_tryrdlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x557079be6548 <col:38, col:56> col:56 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x557079be66a8 <line:560:19>
| `-NonNullAttr 0x557079be6700 <col:49, col:63> 1
|-FunctionDecl 0x557079be6938 <line:561:1, line:563:88> line:561:12 pthread_rwlock_timedrdlock 'int (pthread_rwlock_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x557079be6748 <col:40, col:69> col:69 __rwlock 'pthread_rwlock_t *restrict'
| |-ParmVarDecl 0x557079be67d8 <line:562:12, line:563:12> col:12 __abstime 'const struct timespec *restrict'
| |-NoThrowAttr 0x557079be69e8 <col:39>
| `-NonNullAttr 0x557079be6a70 <col:69, col:86> 1 2
|-FunctionDecl 0x557079be6b70 <line:564:1, line:565:68> line:564:12 pthread_rwlock_wrlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x557079be6ab8 <col:35, col:53> col:53 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x557079be6c18 <line:565:22>
| `-NonNullAttr 0x557079be6c70 <col:52, col:66> 1
|-FunctionDecl 0x557079be6d70 <line:566:1, line:567:68> line:566:12 pthread_rwlock_trywrlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x557079be6cb8 <col:38, col:56> col:56 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x557079be6e18 <line:567:22>
| `-NonNullAttr 0x557079be6e70 <col:52, col:66> 1
|-FunctionDecl 0x557079be7028 <line:568:1, line:570:88> line:568:12 pthread_rwlock_timedwrlock 'int (pthread_rwlock_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x557079be6eb8 <col:40, col:69> col:69 __rwlock 'pthread_rwlock_t *restrict'
| |-ParmVarDecl 0x557079be6f48 <line:569:12, line:570:12> col:12 __abstime 'const struct timespec *restrict'
| |-NoThrowAttr 0x557079be70d8 <col:39>
| `-NonNullAttr 0x557079be7130 <col:69, col:86> 1 2
|-FunctionDecl 0x557079be7230 <line:571:1, line:572:68> line:571:12 pthread_rwlock_unlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x557079be7178 <col:35, col:53> col:53 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x557079be72d8 <line:572:22>
| `-NonNullAttr 0x557079be7330 <col:52, col:66> 1
|-FunctionDecl 0x557079be7518 <line:573:1, line:574:79> line:573:12 pthread_rwlockattr_init 'int (pthread_rwlockattr_t *)' extern
| |-ParmVarDecl 0x557079be73e0 <col:37, col:59> col:59 __attr 'pthread_rwlockattr_t *'
| |-NoThrowAttr 0x557079be75c0 <line:574:22>
| `-NonNullAttr 0x557079be7618 <col:63, col:77> 1
|-FunctionDecl 0x557079be7720 <line:575:1, line:576:79> line:575:12 pthread_rwlockattr_destroy 'int (pthread_rwlockattr_t *)' extern
| |-ParmVarDecl 0x557079be7668 <col:40, col:62> col:62 __attr 'pthread_rwlockattr_t *'
| |-NoThrowAttr 0x557079be77c8 <line:576:22>
| `-NonNullAttr 0x557079be7820 <col:63, col:77> 1
|-FunctionDecl 0x557079be7a80 <line:577:1, line:580:82> line:577:12 pthread_rwlockattr_getpshared 'int (const pthread_rwlockattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x557079be7868 <col:43, line:578:19> col:19 __attr 'const pthread_rwlockattr_t *restrict'
| |-ParmVarDecl 0x557079be78e8 <line:579:8, col:24> col:24 __pshared 'int *restrict'
| |-NoThrowAttr 0x557079be7b30 <line:580:22>
| `-NonNullAttr 0x557079be7b88 <col:63, col:80> 1 2
|-FunctionDecl 0x557079be7d98 <line:581:1, line:583:79> line:581:12 pthread_rwlockattr_setpshared 'int (pthread_rwlockattr_t *, int)' extern
| |-ParmVarDecl 0x557079be7bd8 <col:43, col:65> col:65 __attr 'pthread_rwlockattr_t *'
| |-ParmVarDecl 0x557079be7c58 <line:582:8, col:12> col:12 __pshared 'int'
| |-NoThrowAttr 0x557079be7e48 <line:583:22>
| `-NonNullAttr 0x557079be7ea0 <col:63, col:77> 1
|-FunctionDecl 0x557079be8048 <line:584:1, line:587:82> line:584:12 pthread_rwlockattr_getkind_np 'int (const pthread_rwlockattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x557079be7ee8 <col:43, line:585:19> col:19 __attr 'const pthread_rwlockattr_t *restrict'
| |-ParmVarDecl 0x557079be7f68 <line:586:8, col:24> col:24 __pref 'int *restrict'
| |-NoThrowAttr 0x557079be80f8 <line:587:22>
| `-NonNullAttr 0x557079be8150 <col:63, col:80> 1 2
|-FunctionDecl 0x557079be82d8 <line:588:1, line:589:93> line:588:12 pthread_rwlockattr_setkind_np 'int (pthread_rwlockattr_t *, int)' extern
| |-ParmVarDecl 0x557079be8198 <col:43, col:65> col:65 __attr 'pthread_rwlockattr_t *'
| |-ParmVarDecl 0x557079be8218 <line:589:8, col:12> col:12 __pref 'int'
| |-NoThrowAttr 0x557079be8388 <col:36>
| `-NonNullAttr 0x557079be83e0 <col:77, col:91> 1
|-FunctionDecl 0x557079be8718 <line:590:1, line:592:79> line:590:12 pthread_cond_init 'int (pthread_cond_t *restrict, const pthread_condattr_t *restrict)' extern
| |-ParmVarDecl 0x557079be84c0 <col:31, col:58> col:58 __cond 'pthread_cond_t *restrict'
| |-ParmVarDecl 0x557079be85d0 <line:591:10, col:47> col:47 __cond_attr 'const pthread_condattr_t *restrict'
| |-NoThrowAttr 0x557079be87c8 <line:592:22>
| `-NonNullAttr 0x557079be8820 <col:63, col:77> 1
|-FunctionDecl 0x557079be8998 <line:593:1, line:594:79> line:593:12 pthread_cond_destroy 'int (pthread_cond_t *)' extern
| |-ParmVarDecl 0x557079be8868 <col:34, col:50> col:50 __cond 'pthread_cond_t *'
| |-NoThrowAttr 0x557079be8a40 <line:594:22>
| `-NonNullAttr 0x557079be8ac0 <col:63, col:77> 1
|-FunctionDecl 0x557079be8bc0 <line:595:1, line:596:68> line:595:12 pthread_cond_signal 'int (pthread_cond_t *)' extern
| |-ParmVarDecl 0x557079be8b08 <col:33, col:49> col:49 __cond 'pthread_cond_t *'
| |-NoThrowAttr 0x557079be8c68 <line:596:22>
| `-NonNullAttr 0x557079be8cc0 <col:52, col:66> 1
|-FunctionDecl 0x557079be8dc0 <line:597:1, line:598:68> line:597:12 pthread_cond_broadcast 'int (pthread_cond_t *)' extern
| |-ParmVarDecl 0x557079be8d08 <col:36, col:52> col:52 __cond 'pthread_cond_t *'
| |-NoThrowAttr 0x557079be8e68 <line:598:22>
| `-NonNullAttr 0x557079be8ec0 <col:52, col:66> 1
|-FunctionDecl 0x557079be90e8 <line:599:1, line:601:41> line:599:12 pthread_cond_wait 'int (pthread_cond_t *restrict, pthread_mutex_t *restrict)' extern
| |-ParmVarDecl 0x557079be8f08 <col:31, col:58> col:58 __cond 'pthread_cond_t *restrict'
| |-ParmVarDecl 0x557079be8f80 <line:600:10, col:38> col:38 __mutex 'pthread_mutex_t *restrict'
| `-NonNullAttr 0x557079be9198 <line:601:22, col:39> 1 2
|-FunctionDecl 0x557079be94c8 <line:602:1, line:605:44> line:602:12 pthread_cond_timedwait 'int (pthread_cond_t *restrict, pthread_mutex_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x557079be9218 <col:36, col:63> col:63 __cond 'pthread_cond_t *restrict'
| |-ParmVarDecl 0x557079be9290 <line:603:8, col:36> col:36 __mutex 'pthread_mutex_t *restrict'
| |-ParmVarDecl 0x557079be9320 <line:604:8, col:42> col:42 __abstime 'const struct timespec *restrict'
| `-NonNullAttr 0x557079be9580 <line:605:22, col:42> 1 2 3
|-FunctionDecl 0x557079be9798 <line:606:1, line:607:79> line:606:12 pthread_condattr_init 'int (pthread_condattr_t *)' extern
| |-ParmVarDecl 0x557079be9660 <col:35, col:55> col:55 __attr 'pthread_condattr_t *'
| |-NoThrowAttr 0x557079be9840 <line:607:22>
| `-NonNullAttr 0x557079be9898 <col:63, col:77> 1
|-FunctionDecl 0x557079be99a0 <line:608:1, line:609:79> line:608:12 pthread_condattr_destroy 'int (pthread_condattr_t *)' extern
| |-ParmVarDecl 0x557079be98e8 <col:38, col:58> col:58 __attr 'pthread_condattr_t *'
| |-NoThrowAttr 0x557079be9a48 <line:609:22>
| `-NonNullAttr 0x557079be9ad0 <col:63, col:77> 1
|-FunctionDecl 0x557079be9cf8 <line:610:1, line:613:82> line:610:12 pthread_condattr_getpshared 'int (const pthread_condattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x557079be9b18 <col:41, line:611:17> col:17 __attr 'const pthread_condattr_t *restrict'
| |-ParmVarDecl 0x557079be9b98 <line:612:6, col:22> col:22 __pshared 'int *restrict'
| |-NoThrowAttr 0x557079be9da8 <line:613:22>
| `-NonNullAttr 0x557079be9e00 <col:63, col:80> 1 2
|-FunctionDecl 0x557079bea008 <line:614:1, line:615:94> line:614:12 pthread_condattr_setpshared 'int (pthread_condattr_t *, int)' extern
| |-ParmVarDecl 0x557079be9e48 <col:41, col:61> col:61 __attr 'pthread_condattr_t *'
| |-ParmVarDecl 0x557079be9ec8 <line:615:6, col:10> col:10 __pshared 'int'
| |-NoThrowAttr 0x557079bea0b8 <col:37>
| `-NonNullAttr 0x557079bea110 <col:78, col:92> 1
|-FunctionDecl 0x557079bea328 <line:616:1, line:619:82> line:616:12 pthread_condattr_getclock 'int (const pthread_condattr_t *restrict, __clockid_t *restrict)' extern
| |-ParmVarDecl 0x557079bea158 <col:39, line:617:22> col:22 __attr 'const pthread_condattr_t *restrict'
| |-ParmVarDecl 0x557079bea200 <line:618:11, col:35> col:35 __clock_id '__clockid_t *restrict'
| |-NoThrowAttr 0x557079bea3d8 <line:619:22>
| `-NonNullAttr 0x557079bea430 <col:63, col:80> 1 2
|-FunctionDecl 0x557079bea5f8 <line:620:1, line:622:79> line:620:12 pthread_condattr_setclock 'int (pthread_condattr_t *, __clockid_t)' extern
| |-ParmVarDecl 0x557079bea478 <col:39, col:59> col:59 __attr 'pthread_condattr_t *'
| |-ParmVarDecl 0x557079bea4f0 <line:621:11, col:23> col:23 __clock_id '__clockid_t':'int'
| |-NoThrowAttr 0x557079bea6a8 <line:622:22>
| `-NonNullAttr 0x557079bea700 <col:63, col:77> 1
|-FunctionDecl 0x557079bea9a8 <line:623:1, line:624:79> line:623:12 pthread_spin_init 'int (pthread_spinlock_t *, int)' extern
| |-ParmVarDecl 0x557079bea7e0 <col:31, col:51> col:51 __lock 'pthread_spinlock_t *'
| |-ParmVarDecl 0x557079bea860 <col:59, col:63> col:63 __pshared 'int'
| |-NoThrowAttr 0x557079beaa58 <line:624:22>
| `-NonNullAttr 0x557079beaae0 <col:63, col:77> 1
|-FunctionDecl 0x557079beac58 <line:625:1, line:626:79> line:625:12 pthread_spin_destroy 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x557079beab28 <col:34, col:54> col:54 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x557079bead00 <line:626:22>
| `-NonNullAttr 0x557079bead58 <col:63, col:77> 1
|-FunctionDecl 0x557079beae60 <line:627:1, line:628:68> line:627:12 pthread_spin_lock 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x557079beada8 <col:31, col:51> col:51 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x557079beaf08 <line:628:22>
| `-NonNullAttr 0x557079beaf60 <col:52, col:66> 1
|-FunctionDecl 0x557079beb060 <line:629:1, line:630:68> line:629:12 pthread_spin_trylock 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x557079beafa8 <col:34, col:54> col:54 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x557079beb108 <line:630:22>
| `-NonNullAttr 0x557079beb160 <col:52, col:66> 1
|-FunctionDecl 0x557079beb260 <line:631:1, line:632:68> line:631:12 pthread_spin_unlock 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x557079beb1a8 <col:33, col:53> col:53 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x557079beb308 <line:632:22>
| `-NonNullAttr 0x557079beb360 <col:52, col:66> 1
|-FunctionDecl 0x557079beb738 <line:633:1, line:636:79> line:633:12 pthread_barrier_init 'int (pthread_barrier_t *restrict, const pthread_barrierattr_t *restrict, unsigned int)' extern
| |-ParmVarDecl 0x557079beb440 <col:34, col:64> col:64 __barrier 'pthread_barrier_t *restrict'
| |-ParmVarDecl 0x557079beb550 <line:634:6, line:635:6> col:6 __attr 'const pthread_barrierattr_t *restrict'
| |-ParmVarDecl 0x557079beb5d0 <col:14, col:27> col:27 __count 'unsigned int'
| |-NoThrowAttr 0x557079beb7f0 <line:636:22>
| `-NonNullAttr 0x557079beb848 <col:63, col:77> 1
|-FunctionDecl 0x557079beb9c8 <line:637:1, line:638:79> line:637:12 pthread_barrier_destroy 'int (pthread_barrier_t *)' extern
| |-ParmVarDecl 0x557079beb898 <col:37, col:56> col:56 __barrier 'pthread_barrier_t *'
| |-NoThrowAttr 0x557079beba70 <line:638:22>
| `-NonNullAttr 0x557079becb00 <col:63, col:77> 1
|-FunctionDecl 0x557079becc00 <line:639:1, line:640:68> line:639:12 pthread_barrier_wait 'int (pthread_barrier_t *)' extern
| |-ParmVarDecl 0x557079becb48 <col:34, col:53> col:53 __barrier 'pthread_barrier_t *'
| |-NoThrowAttr 0x557079becca8 <line:640:22>
| `-NonNullAttr 0x557079becd00 <col:52, col:66> 1
|-FunctionDecl 0x557079becee8 <line:641:1, line:642:79> line:641:12 pthread_barrierattr_init 'int (pthread_barrierattr_t *)' extern
| |-ParmVarDecl 0x557079becdb0 <col:38, col:61> col:61 __attr 'pthread_barrierattr_t *'
| |-NoThrowAttr 0x557079becf90 <line:642:22>
| `-NonNullAttr 0x557079becfe8 <col:63, col:77> 1
|-FunctionDecl 0x557079bed0f0 <line:643:1, line:644:79> line:643:12 pthread_barrierattr_destroy 'int (pthread_barrierattr_t *)' extern
| |-ParmVarDecl 0x557079bed038 <col:41, col:64> col:64 __attr 'pthread_barrierattr_t *'
| |-NoThrowAttr 0x557079bed198 <line:644:22>
| `-NonNullAttr 0x557079bed1f0 <col:63, col:77> 1
|-FunctionDecl 0x557079bed418 <line:645:1, line:648:82> line:645:12 pthread_barrierattr_getpshared 'int (const pthread_barrierattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x557079bed238 <col:44, line:646:20> col:20 __attr 'const pthread_barrierattr_t *restrict'
| |-ParmVarDecl 0x557079bed2b8 <line:647:9, col:25> col:25 __pshared 'int *restrict'
| |-NoThrowAttr 0x557079bed4c8 <line:648:22>
| `-NonNullAttr 0x557079bed520 <col:63, col:80> 1 2
|-FunctionDecl 0x557079bed728 <line:649:1, line:651:79> line:649:12 pthread_barrierattr_setpshared 'int (pthread_barrierattr_t *, int)' extern
| |-ParmVarDecl 0x557079bed568 <col:44, col:67> col:67 __attr 'pthread_barrierattr_t *'
| |-ParmVarDecl 0x557079bed5e8 <line:650:9, col:13> col:13 __pshared 'int'
| |-NoThrowAttr 0x557079bed7d8 <line:651:22>
| `-NonNullAttr 0x557079bed830 <col:63, col:77> 1
|-FunctionDecl 0x557079bedb98 <line:652:1, line:654:79> line:652:12 pthread_key_create 'int (pthread_key_t *, void (*)(void *))' extern
| |-ParmVarDecl 0x557079bed910 <col:32, col:47> col:47 __key 'pthread_key_t *'
| |-ParmVarDecl 0x557079beda30 <line:653:11, col:43> col:18 __destr_function 'void (*)(void *)'
| |-NoThrowAttr 0x557079bedc48 <line:654:22>
| `-NonNullAttr 0x557079bedca0 <col:63, col:77> 1
|-FunctionDecl 0x557079beddf8 <line:655:1, col:92> col:12 pthread_key_delete 'int (pthread_key_t)' extern
| |-ParmVarDecl 0x557079bedce8 <col:32, col:46> col:46 __key 'pthread_key_t':'unsigned int'
| `-NoThrowAttr 0x557079bedea0 <col:69>
|-FunctionDecl 0x557079bee018 <line:656:1, col:95> col:14 pthread_getspecific 'void *(pthread_key_t)' extern
| |-ParmVarDecl 0x557079bedf08 <col:35, col:49> col:49 __key 'pthread_key_t':'unsigned int'
| `-NoThrowAttr 0x557079bee0c0 <col:72>
|-FunctionDecl 0x557079bee2f8 <line:657:1, line:658:67> line:657:12 pthread_setspecific 'int (pthread_key_t, const void *)' extern
| |-ParmVarDecl 0x557079bee128 <col:33, col:47> col:47 __key 'pthread_key_t':'unsigned int'
| |-ParmVarDecl 0x557079bee1d8 <line:658:5, col:17> col:17 __pointer 'const void *'
| `-NoThrowAttr 0x557079bee3a8 <col:44>
|-FunctionDecl 0x557079bee5c8 <line:659:1, line:661:79> line:659:12 pthread_getcpuclockid 'int (pthread_t, __clockid_t *)' extern
| |-ParmVarDecl 0x557079bee410 <col:35, col:45> col:45 __thread_id 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x557079bee488 <line:660:7, col:20> col:20 __clock_id '__clockid_t *'
| |-NoThrowAttr 0x557079bee678 <line:661:22>
| `-NonNullAttr 0x557079bee6d0 <col:63, col:77> 2
|-FunctionDecl 0x557079beeb30 <line:662:1, line:664:70> line:662:12 pthread_atfork 'int (void (*)(void), void (*)(void), void (*)(void))' extern
| |-ParmVarDecl 0x557079bee7b0 <col:28, col:51> col:35 __prepare 'void (*)(void)'
| |-ParmVarDecl 0x557079bee8c0 <line:663:7, col:29> col:14 __parent 'void (*)(void)'
| |-ParmVarDecl 0x557079bee9d0 <line:664:7, col:28> col:14 __child 'void (*)(void)'
| `-NoThrowAttr 0x557079beebe8 <col:47>
|-FunctionDecl 0x557079beecf0 <line:666:1, col:20> col:8 used P0 'void *(void *)'
| `-ParmVarDecl 0x557079beec58 <col:11, col:17> col:17 arg 'void *'
|-FunctionDecl 0x557079beee48 <line:667:1, col:20> col:8 used P1 'void *(void *)'
| `-ParmVarDecl 0x557079beedb0 <col:11, col:17> col:17 arg 'void *'
|-FunctionDecl 0x557079beef10 <line:668:1, col:12> col:6 fence 'void ()'
|-FunctionDecl 0x557079beefd0 <line:669:1, col:12> col:6 isync 'void ()'
|-FunctionDecl 0x557079bef090 <line:670:1, col:14> col:6 lwfence 'void ()'
|-VarDecl 0x557079bef148 <line:671:1, col:5> col:5 used __unbuffered_cnt 'int'
|-VarDecl 0x557079bef1c8 prev 0x557079bef148 <line:672:1, col:24> col:5 used __unbuffered_cnt 'int' cinit
| `-IntegerLiteral 0x557079bef230 <col:24> 'int' 0
|-VarDecl 0x557079bef268 <line:673:1, col:5> col:5 used __unbuffered_p0_EAX 'int'
|-VarDecl 0x557079bef2e8 prev 0x557079bef268 <line:674:1, col:27> col:5 used __unbuffered_p0_EAX 'int' cinit
| `-IntegerLiteral 0x557079bef350 <col:27> 'int' 0
|-VarDecl 0x557079bef388 <line:675:1, col:5> col:5 used __unbuffered_p0_EBX 'int'
|-VarDecl 0x557079bef408 prev 0x557079bef388 <line:676:1, col:27> col:5 used __unbuffered_p0_EBX 'int' cinit
| `-IntegerLiteral 0x557079bef470 <col:27> 'int' 0
|-VarDecl 0x557079bef4a8 <line:677:1, col:5> col:5 used __unbuffered_p1_EAX 'int'
|-VarDecl 0x557079bef528 prev 0x557079bef4a8 <line:678:1, col:27> col:5 used __unbuffered_p1_EAX 'int' cinit
| `-IntegerLiteral 0x557079bef590 <col:27> 'int' 0
|-VarDecl 0x557079bef5c8 <line:679:1, col:5> col:5 used __unbuffered_p1_EBX 'int'
|-VarDecl 0x557079bef648 prev 0x557079bef5c8 <line:680:1, col:27> col:5 used __unbuffered_p1_EBX 'int' cinit
| `-IntegerLiteral 0x557079bef6b0 <col:27> 'int' 0
|-VarDecl 0x557079bef6e0 <line:681:1, col:7> col:7 used main$tmp_guard0 '_Bool'
|-VarDecl 0x557079bef758 <line:682:1, col:7> col:7 used main$tmp_guard1 '_Bool'
|-VarDecl 0x557079bef7d8 <line:683:1, col:5> col:5 used x 'int'
|-VarDecl 0x557079bef858 prev 0x557079bef7d8 <line:684:1, col:9> col:5 used x 'int' cinit
| `-IntegerLiteral 0x557079bef8c0 <col:9> 'int' 0
|-VarDecl 0x557079bef8f8 <line:685:1, col:5> col:5 used y 'int'
|-VarDecl 0x557079bef978 prev 0x557079bef8f8 <line:686:1, col:9> col:5 used y 'int' cinit
| `-IntegerLiteral 0x557079bef9e0 <col:9> 'int' 0
|-VarDecl 0x557079befa10 <line:687:1, col:7> col:7 used y$flush_delayed '_Bool'
|-VarDecl 0x557079befb00 <line:688:1, col:5> col:5 used y$mem_tmp 'int'
|-VarDecl 0x557079befb78 <line:689:1, col:7> col:7 used y$r_buff0_thd0 '_Bool'
|-VarDecl 0x557079befbf0 <line:690:1, col:7> col:7 used y$r_buff0_thd1 '_Bool'
|-VarDecl 0x557079befc68 <line:691:1, col:7> col:7 used y$r_buff0_thd2 '_Bool'
|-VarDecl 0x557079befce0 <line:692:1, col:7> col:7 used y$r_buff1_thd0 '_Bool'
|-VarDecl 0x557079befd58 <line:693:1, col:7> col:7 used y$r_buff1_thd1 '_Bool'
|-VarDecl 0x557079befdd0 <line:694:1, col:7> col:7 used y$r_buff1_thd2 '_Bool'
|-VarDecl 0x557079befe48 <line:695:1, col:7> col:7 y$read_delayed '_Bool'
|-VarDecl 0x557079befec8 <line:696:1, col:6> col:6 y$read_delayed_var 'int *'
|-VarDecl 0x557079beff48 <line:697:1, col:5> col:5 used y$w_buff0 'int'
|-VarDecl 0x557079beffc0 <line:698:1, col:7> col:7 used y$w_buff0_used '_Bool'
|-VarDecl 0x557079bf0040 <line:699:1, col:5> col:5 used y$w_buff1 'int'
|-VarDecl 0x557079bf00b8 <line:700:1, col:7> col:7 used y$w_buff1_used '_Bool'
|-VarDecl 0x557079bf0138 <line:701:1, col:5> col:5 used z 'int'
|-VarDecl 0x557079bf01b8 prev 0x557079bf0138 <line:702:1, col:9> col:5 used z 'int' cinit
| `-IntegerLiteral 0x557079bf0220 <col:9> 'int' 0
|-VarDecl 0x557079bf0250 <line:703:1, col:7> col:7 used weak$$choice0 '_Bool'
|-VarDecl 0x557079bf02c8 <line:704:1, col:7> col:7 used weak$$choice2 '_Bool'
|-FunctionDecl 0x557079bf03e0 prev 0x557079beecf0 <line:705:1, line:738:1> line:705:8 used P0 'void *(void *)'
| |-ParmVarDecl 0x557079bf0348 <col:11, col:17> col:17 arg 'void *'
| `-CompoundStmt 0x557079bf3598 <line:706:1, line:738:1>
|   |-CallExpr 0x557079bf04f8 <line:707:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x557079bf04e0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x557079bf0488 <col:3> 'void ()' Function 0x557079b95fa0 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x557079bf0558 <line:708:3, col:7> 'int' '='
|   | |-DeclRefExpr 0x557079bf0518 <col:3> 'int' lvalue Var 0x557079bf01b8 'z' 'int'
|   | `-IntegerLiteral 0x557079bf0538 <col:7> 'int' 1
|   |-CallExpr 0x557079bf05b0 <line:709:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x557079bf0598 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x557079bf0578 <col:3> 'void ()' Function 0x557079b96060 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x557079bf0608 <line:710:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x557079bf05f0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x557079bf05d0 <col:3> 'void ()' Function 0x557079b95fa0 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x557079bf0668 <line:711:3, col:7> 'int' '='
|   | |-DeclRefExpr 0x557079bf0628 <col:3> 'int' lvalue Var 0x557079bef858 'x' 'int'
|   | `-IntegerLiteral 0x557079bf0648 <col:7> 'int' 1
|   |-CallExpr 0x557079bf06c0 <line:712:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x557079bf06a8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x557079bf0688 <col:3> 'void ()' Function 0x557079b96060 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x557079bf0718 <line:713:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x557079bf0700 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x557079bf06e0 <col:3> 'void ()' Function 0x557079b95fa0 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x557079bf0790 <line:714:3, col:25> 'int' '='
|   | |-DeclRefExpr 0x557079bf0738 <col:3> 'int' lvalue Var 0x557079bef2e8 '__unbuffered_p0_EAX' 'int'
|   | `-ImplicitCastExpr 0x557079bf0778 <col:25> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x557079bf0758 <col:25> 'int' lvalue Var 0x557079bef858 'x' 'int'
|   |-CallExpr 0x557079bf07e8 <line:715:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x557079bf07d0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x557079bf07b0 <col:3> 'void ()' Function 0x557079b96060 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x557079bf0840 <line:716:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x557079bf0828 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x557079bf0808 <col:3> 'void ()' Function 0x557079b95fa0 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x557079bf0908 <line:717:3, col:42> '_Bool' '='
|   | |-DeclRefExpr 0x557079bf0860 <col:3> '_Bool' lvalue Var 0x557079bf0250 'weak$$choice0' '_Bool'
|   | `-CallExpr 0x557079bf08e8 <col:19, col:42> '_Bool'
|   |   `-ImplicitCastExpr 0x557079bf08d0 <col:19> '_Bool (*)(void)' <FunctionToPointerDecay>
|   |     `-DeclRefExpr 0x557079bf0880 <col:19> '_Bool (void)' Function 0x557079b95770 '__VERIFIER_nondet_bool' '_Bool (void)'
|   |-BinaryOperator 0x557079bf09a0 <line:718:3, col:42> '_Bool' '='
|   | |-DeclRefExpr 0x557079bf0928 <col:3> '_Bool' lvalue Var 0x557079bf02c8 'weak$$choice2' '_Bool'
|   | `-CallExpr 0x557079bf0980 <col:19, col:42> '_Bool'
|   |   `-ImplicitCastExpr 0x557079bf0968 <col:19> '_Bool (*)(void)' <FunctionToPointerDecay>
|   |     `-DeclRefExpr 0x557079bf0948 <col:19> '_Bool (void)' Function 0x557079b95770 '__VERIFIER_nondet_bool' '_Bool (void)'
|   |-BinaryOperator 0x557079bf0a18 <line:719:3, col:21> '_Bool' '='
|   | |-DeclRefExpr 0x557079bf09c0 <col:3> '_Bool' lvalue Var 0x557079befa10 'y$flush_delayed' '_Bool'
|   | `-ImplicitCastExpr 0x557079bf0a00 <col:21> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x557079bf09e0 <col:21> '_Bool' lvalue Var 0x557079bf02c8 'weak$$choice2' '_Bool'
|   |-BinaryOperator 0x557079bf0a90 <line:720:3, col:15> 'int' '='
|   | |-DeclRefExpr 0x557079bf0a38 <col:3> 'int' lvalue Var 0x557079befb00 'y$mem_tmp' 'int'
|   | `-ImplicitCastExpr 0x557079bf0a78 <col:15> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x557079bf0a58 <col:15> 'int' lvalue Var 0x557079bef978 'y' 'int'
|   |-BinaryOperator 0x557079bf0ee8 <line:721:3, col:162> 'int' '='
|   | |-DeclRefExpr 0x557079bf0ab0 <col:3> 'int' lvalue Var 0x557079bef978 'y' 'int'
|   | `-ConditionalOperator 0x557079bf0eb8 <col:7, col:162> 'int'
|   |   |-BinaryOperator 0x557079bf0ce0 <col:7, col:84> 'int' '||'
|   |   | |-BinaryOperator 0x557079bf0c00 <col:7, col:46> 'int' '||'
|   |   | | |-UnaryOperator 0x557079bf0b28 <col:7, col:8> 'int' prefix '!' cannot overflow
|   |   | | | `-ImplicitCastExpr 0x557079bf0b10 <col:8> '_Bool' <LValueToRValue>
|   |   | | |   `-DeclRefExpr 0x557079bf0ad0 <col:8> '_Bool' lvalue Var 0x557079beffc0 'y$w_buff0_used' '_Bool'
|   |   | | `-BinaryOperator 0x557079bf0be0 <col:26, col:46> 'int' '&&'
|   |   | |   |-UnaryOperator 0x557079bf0b78 <col:26, col:27> 'int' prefix '!' cannot overflow
|   |   | |   | `-ImplicitCastExpr 0x557079bf0b60 <col:27> '_Bool' <LValueToRValue>
|   |   | |   |   `-DeclRefExpr 0x557079bf0b40 <col:27> '_Bool' lvalue Var 0x557079befbf0 'y$r_buff0_thd1' '_Bool'
|   |   | |   `-UnaryOperator 0x557079bf0bc8 <col:45, col:46> 'int' prefix '!' cannot overflow
|   |   | |     `-ImplicitCastExpr 0x557079bf0bb0 <col:46> '_Bool' <LValueToRValue>
|   |   | |       `-DeclRefExpr 0x557079bf0b90 <col:46> '_Bool' lvalue Var 0x557079bf00b8 'y$w_buff1_used' '_Bool'
|   |   | `-BinaryOperator 0x557079bf0cc0 <col:64, col:84> 'int' '&&'
|   |   |   |-UnaryOperator 0x557079bf0c58 <col:64, col:65> 'int' prefix '!' cannot overflow
|   |   |   | `-ImplicitCastExpr 0x557079bf0c40 <col:65> '_Bool' <LValueToRValue>
|   |   |   |   `-DeclRefExpr 0x557079bf0c20 <col:65> '_Bool' lvalue Var 0x557079befbf0 'y$r_buff0_thd1' '_Bool'
|   |   |   `-UnaryOperator 0x557079bf0ca8 <col:83, col:84> 'int' prefix '!' cannot overflow
|   |   |     `-ImplicitCastExpr 0x557079bf0c90 <col:84> '_Bool' <LValueToRValue>
|   |   |       `-DeclRefExpr 0x557079bf0c70 <col:84> '_Bool' lvalue Var 0x557079befd58 'y$r_buff1_thd1' '_Bool'
|   |   |-ImplicitCastExpr 0x557079bf0ea0 <col:101> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x557079bf0d00 <col:101> 'int' lvalue Var 0x557079bef978 'y' 'int'
|   |   `-ParenExpr 0x557079bf0e80 <col:105, col:162> 'int'
|   |     `-ConditionalOperator 0x557079bf0e50 <col:106, col:153> 'int'
|   |       |-BinaryOperator 0x557079bf0dc0 <col:106, col:124> 'int' '&&'
|   |       | |-ImplicitCastExpr 0x557079bf0d78 <col:106> 'int' <IntegralCast>
|   |       | | `-ImplicitCastExpr 0x557079bf0d60 <col:106> '_Bool' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x557079bf0d20 <col:106> '_Bool' lvalue Var 0x557079beffc0 'y$w_buff0_used' '_Bool'
|   |       | `-ImplicitCastExpr 0x557079bf0da8 <col:124> 'int' <IntegralCast>
|   |       |   `-ImplicitCastExpr 0x557079bf0d90 <col:124> '_Bool' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x557079bf0d40 <col:124> '_Bool' lvalue Var 0x557079befbf0 'y$r_buff0_thd1' '_Bool'
|   |       |-ImplicitCastExpr 0x557079bf0e20 <col:141> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x557079bf0de0 <col:141> 'int' lvalue Var 0x557079beff48 'y$w_buff0' 'int'
|   |       `-ImplicitCastExpr 0x557079bf0e38 <col:153> 'int' <LValueToRValue>
|   |         `-DeclRefExpr 0x557079bf0e00 <col:153> 'int' lvalue Var 0x557079bf0040 'y$w_buff1' 'int'
|   |-BinaryOperator 0x557079bf13f8 <line:722:3, col:208> 'int' '='
|   | |-DeclRefExpr 0x557079bf0f08 <col:3> 'int' lvalue Var 0x557079beff48 'y$w_buff0' 'int'
|   | `-ConditionalOperator 0x557079bf13c8 <col:15, col:208> 'int'
|   |   |-ImplicitCastExpr 0x557079bf1398 <col:15> 'int' <IntegralCast>
|   |   | `-ImplicitCastExpr 0x557079bf1380 <col:15> '_Bool' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x557079bf0f28 <col:15> '_Bool' lvalue Var 0x557079bf02c8 'weak$$choice2' '_Bool'
|   |   |-ImplicitCastExpr 0x557079bf13b0 <col:31> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x557079bf0f48 <col:31> 'int' lvalue Var 0x557079beff48 'y$w_buff0' 'int'
|   |   `-ParenExpr 0x557079bf1360 <col:43, col:208> 'int'
|   |     `-ConditionalOperator 0x557079bf1330 <col:44, col:207> 'int'
|   |       |-BinaryOperator 0x557079bf1158 <col:44, col:121> 'int' '||'
|   |       | |-BinaryOperator 0x557079bf1078 <col:44, col:83> 'int' '||'
|   |       | | |-UnaryOperator 0x557079bf0fa0 <col:44, col:45> 'int' prefix '!' cannot overflow
|   |       | | | `-ImplicitCastExpr 0x557079bf0f88 <col:45> '_Bool' <LValueToRValue>
|   |       | | |   `-DeclRefExpr 0x557079bf0f68 <col:45> '_Bool' lvalue Var 0x557079beffc0 'y$w_buff0_used' '_Bool'
|   |       | | `-BinaryOperator 0x557079bf1058 <col:63, col:83> 'int' '&&'
|   |       | |   |-UnaryOperator 0x557079bf0ff0 <col:63, col:64> 'int' prefix '!' cannot overflow
|   |       | |   | `-ImplicitCastExpr 0x557079bf0fd8 <col:64> '_Bool' <LValueToRValue>
|   |       | |   |   `-DeclRefExpr 0x557079bf0fb8 <col:64> '_Bool' lvalue Var 0x557079befbf0 'y$r_buff0_thd1' '_Bool'
|   |       | |   `-UnaryOperator 0x557079bf1040 <col:82, col:83> 'int' prefix '!' cannot overflow
|   |       | |     `-ImplicitCastExpr 0x557079bf1028 <col:83> '_Bool' <LValueToRValue>
|   |       | |       `-DeclRefExpr 0x557079bf1008 <col:83> '_Bool' lvalue Var 0x557079bf00b8 'y$w_buff1_used' '_Bool'
|   |       | `-BinaryOperator 0x557079bf1138 <col:101, col:121> 'int' '&&'
|   |       |   |-UnaryOperator 0x557079bf10d0 <col:101, col:102> 'int' prefix '!' cannot overflow
|   |       |   | `-ImplicitCastExpr 0x557079bf10b8 <col:102> '_Bool' <LValueToRValue>
|   |       |   |   `-DeclRefExpr 0x557079bf1098 <col:102> '_Bool' lvalue Var 0x557079befbf0 'y$r_buff0_thd1' '_Bool'
|   |       |   `-UnaryOperator 0x557079bf1120 <col:120, col:121> 'int' prefix '!' cannot overflow
|   |       |     `-ImplicitCastExpr 0x557079bf1108 <col:121> '_Bool' <LValueToRValue>
|   |       |       `-DeclRefExpr 0x557079bf10e8 <col:121> '_Bool' lvalue Var 0x557079befd58 'y$r_buff1_thd1' '_Bool'
|   |       |-ImplicitCastExpr 0x557079bf1318 <col:138> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x557079bf1178 <col:138> 'int' lvalue Var 0x557079beff48 'y$w_buff0' 'int'
|   |       `-ParenExpr 0x557079bf12f8 <col:150, col:207> 'int'
|   |         `-ConditionalOperator 0x557079bf12c8 <col:151, col:198> 'int'
|   |           |-BinaryOperator 0x557079bf1238 <col:151, col:169> 'int' '&&'
|   |           | |-ImplicitCastExpr 0x557079bf11f0 <col:151> 'int' <IntegralCast>
|   |           | | `-ImplicitCastExpr 0x557079bf11d8 <col:151> '_Bool' <LValueToRValue>
|   |           | |   `-DeclRefExpr 0x557079bf1198 <col:151> '_Bool' lvalue Var 0x557079beffc0 'y$w_buff0_used' '_Bool'
|   |           | `-ImplicitCastExpr 0x557079bf1220 <col:169> 'int' <IntegralCast>
|   |           |   `-ImplicitCastExpr 0x557079bf1208 <col:169> '_Bool' <LValueToRValue>
|   |           |     `-DeclRefExpr 0x557079bf11b8 <col:169> '_Bool' lvalue Var 0x557079befbf0 'y$r_buff0_thd1' '_Bool'
|   |           |-ImplicitCastExpr 0x557079bf1298 <col:186> 'int' <LValueToRValue>
|   |           | `-DeclRefExpr 0x557079bf1258 <col:186> 'int' lvalue Var 0x557079beff48 'y$w_buff0' 'int'
|   |           `-ImplicitCastExpr 0x557079bf12b0 <col:198> 'int' <LValueToRValue>
|   |             `-DeclRefExpr 0x557079bf1278 <col:198> 'int' lvalue Var 0x557079beff48 'y$w_buff0' 'int'
|   |-BinaryOperator 0x557079bf1908 <line:723:3, col:208> 'int' '='
|   | |-DeclRefExpr 0x557079bf1418 <col:3> 'int' lvalue Var 0x557079bf0040 'y$w_buff1' 'int'
|   | `-ConditionalOperator 0x557079bf18d8 <col:15, col:208> 'int'
|   |   |-ImplicitCastExpr 0x557079bf18a8 <col:15> 'int' <IntegralCast>
|   |   | `-ImplicitCastExpr 0x557079bf1890 <col:15> '_Bool' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x557079bf1438 <col:15> '_Bool' lvalue Var 0x557079bf02c8 'weak$$choice2' '_Bool'
|   |   |-ImplicitCastExpr 0x557079bf18c0 <col:31> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x557079bf1458 <col:31> 'int' lvalue Var 0x557079bf0040 'y$w_buff1' 'int'
|   |   `-ParenExpr 0x557079bf1870 <col:43, col:208> 'int'
|   |     `-ConditionalOperator 0x557079bf1840 <col:44, col:207> 'int'
|   |       |-BinaryOperator 0x557079bf1668 <col:44, col:121> 'int' '||'
|   |       | |-BinaryOperator 0x557079bf1588 <col:44, col:83> 'int' '||'
|   |       | | |-UnaryOperator 0x557079bf14b0 <col:44, col:45> 'int' prefix '!' cannot overflow
|   |       | | | `-ImplicitCastExpr 0x557079bf1498 <col:45> '_Bool' <LValueToRValue>
|   |       | | |   `-DeclRefExpr 0x557079bf1478 <col:45> '_Bool' lvalue Var 0x557079beffc0 'y$w_buff0_used' '_Bool'
|   |       | | `-BinaryOperator 0x557079bf1568 <col:63, col:83> 'int' '&&'
|   |       | |   |-UnaryOperator 0x557079bf1500 <col:63, col:64> 'int' prefix '!' cannot overflow
|   |       | |   | `-ImplicitCastExpr 0x557079bf14e8 <col:64> '_Bool' <LValueToRValue>
|   |       | |   |   `-DeclRefExpr 0x557079bf14c8 <col:64> '_Bool' lvalue Var 0x557079befbf0 'y$r_buff0_thd1' '_Bool'
|   |       | |   `-UnaryOperator 0x557079bf1550 <col:82, col:83> 'int' prefix '!' cannot overflow
|   |       | |     `-ImplicitCastExpr 0x557079bf1538 <col:83> '_Bool' <LValueToRValue>
|   |       | |       `-DeclRefExpr 0x557079bf1518 <col:83> '_Bool' lvalue Var 0x557079bf00b8 'y$w_buff1_used' '_Bool'
|   |       | `-BinaryOperator 0x557079bf1648 <col:101, col:121> 'int' '&&'
|   |       |   |-UnaryOperator 0x557079bf15e0 <col:101, col:102> 'int' prefix '!' cannot overflow
|   |       |   | `-ImplicitCastExpr 0x557079bf15c8 <col:102> '_Bool' <LValueToRValue>
|   |       |   |   `-DeclRefExpr 0x557079bf15a8 <col:102> '_Bool' lvalue Var 0x557079befbf0 'y$r_buff0_thd1' '_Bool'
|   |       |   `-UnaryOperator 0x557079bf1630 <col:120, col:121> 'int' prefix '!' cannot overflow
|   |       |     `-ImplicitCastExpr 0x557079bf1618 <col:121> '_Bool' <LValueToRValue>
|   |       |       `-DeclRefExpr 0x557079bf15f8 <col:121> '_Bool' lvalue Var 0x557079befd58 'y$r_buff1_thd1' '_Bool'
|   |       |-ImplicitCastExpr 0x557079bf1828 <col:138> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x557079bf1688 <col:138> 'int' lvalue Var 0x557079bf0040 'y$w_buff1' 'int'
|   |       `-ParenExpr 0x557079bf1808 <col:150, col:207> 'int'
|   |         `-ConditionalOperator 0x557079bf17d8 <col:151, col:198> 'int'
|   |           |-BinaryOperator 0x557079bf1748 <col:151, col:169> 'int' '&&'
|   |           | |-ImplicitCastExpr 0x557079bf1700 <col:151> 'int' <IntegralCast>
|   |           | | `-ImplicitCastExpr 0x557079bf16e8 <col:151> '_Bool' <LValueToRValue>
|   |           | |   `-DeclRefExpr 0x557079bf16a8 <col:151> '_Bool' lvalue Var 0x557079beffc0 'y$w_buff0_used' '_Bool'
|   |           | `-ImplicitCastExpr 0x557079bf1730 <col:169> 'int' <IntegralCast>
|   |           |   `-ImplicitCastExpr 0x557079bf1718 <col:169> '_Bool' <LValueToRValue>
|   |           |     `-DeclRefExpr 0x557079bf16c8 <col:169> '_Bool' lvalue Var 0x557079befbf0 'y$r_buff0_thd1' '_Bool'
|   |           |-ImplicitCastExpr 0x557079bf17a8 <col:186> 'int' <LValueToRValue>
|   |           | `-DeclRefExpr 0x557079bf1768 <col:186> 'int' lvalue Var 0x557079bf0040 'y$w_buff1' 'int'
|   |           `-ImplicitCastExpr 0x557079bf17c0 <col:198> 'int' <LValueToRValue>
|   |             `-DeclRefExpr 0x557079bf1788 <col:198> 'int' lvalue Var 0x557079bf0040 'y$w_buff1' 'int'
|   |-BinaryOperator 0x557079bf1ec8 <line:724:3, col:227> '_Bool' '='
|   | |-DeclRefExpr 0x557079bf1928 <col:3> '_Bool' lvalue Var 0x557079beffc0 'y$w_buff0_used' '_Bool'
|   | `-ImplicitCastExpr 0x557079bf1eb0 <col:20, col:227> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x557079bf1e80 <col:20, col:227> 'int'
|   |     |-ImplicitCastExpr 0x557079bf1e38 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x557079bf1e20 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x557079bf1948 <col:20> '_Bool' lvalue Var 0x557079bf02c8 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x557079bf1e68 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x557079bf1e50 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x557079bf1968 <col:36> '_Bool' lvalue Var 0x557079beffc0 'y$w_buff0_used' '_Bool'
|   |     `-ParenExpr 0x557079bf1e00 <col:53, col:227> 'int'
|   |       `-ConditionalOperator 0x557079bf1dd0 <col:54, col:226> 'int'
|   |         |-BinaryOperator 0x557079bf1b90 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x557079bf1a98 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x557079bf19c0 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x557079bf19a8 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x557079bf1988 <col:55> '_Bool' lvalue Var 0x557079beffc0 'y$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x557079bf1a78 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x557079bf1a10 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x557079bf19f8 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x557079bf19d8 <col:74> '_Bool' lvalue Var 0x557079befbf0 'y$r_buff0_thd1' '_Bool'
|   |         | |   `-UnaryOperator 0x557079bf1a60 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x557079bf1a48 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x557079bf1a28 <col:93> '_Bool' lvalue Var 0x557079bf00b8 'y$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x557079bf1b70 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x557079bf1af0 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x557079bf1ad8 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x557079bf1ab8 <col:112> '_Bool' lvalue Var 0x557079befbf0 'y$r_buff0_thd1' '_Bool'
|   |         |   `-UnaryOperator 0x557079bf1b58 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x557079bf1b40 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x557079bf1b20 <col:131> '_Bool' lvalue Var 0x557079befd58 'y$r_buff1_thd1' '_Bool'
|   |         |-ImplicitCastExpr 0x557079bf1db8 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x557079bf1da0 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x557079bf1bb0 <col:148> '_Bool' lvalue Var 0x557079beffc0 'y$w_buff0_used' '_Bool'
|   |         `-ParenExpr 0x557079bf1d80 <col:165, col:226> 'int'
|   |           `-ConditionalOperator 0x557079bf1d50 <col:166, col:212> 'int'
|   |             |-BinaryOperator 0x557079bf1c70 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x557079bf1c28 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x557079bf1c10 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x557079bf1bd0 <col:166> '_Bool' lvalue Var 0x557079beffc0 'y$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x557079bf1c58 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x557079bf1c40 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x557079bf1bf0 <col:184> '_Bool' lvalue Var 0x557079befbf0 'y$r_buff0_thd1' '_Bool'
|   |             |-ImplicitCastExpr 0x557079bf1d08 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x557079bf1cc0 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x557079bf1c90 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x557079bf1d38 <col:212> 'int' <IntegralCast>
|   |               `-ImplicitCastExpr 0x557079bf1d20 <col:212> '_Bool' <LValueToRValue>
|   |                 `-DeclRefExpr 0x557079bf1ce8 <col:212> '_Bool' lvalue Var 0x557079beffc0 'y$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x557079bf2490 <line:725:3, col:221> '_Bool' '='
|   | |-DeclRefExpr 0x557079bf1ee8 <col:3> '_Bool' lvalue Var 0x557079bf00b8 'y$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x557079bf2478 <col:20, col:221> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x557079bf2448 <col:20, col:221> 'int'
|   |     |-ImplicitCastExpr 0x557079bf2400 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x557079bf23e8 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x557079bf1f08 <col:20> '_Bool' lvalue Var 0x557079bf02c8 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x557079bf2430 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x557079bf2418 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x557079bf1f28 <col:36> '_Bool' lvalue Var 0x557079bf00b8 'y$w_buff1_used' '_Bool'
|   |     `-ParenExpr 0x557079bf23c8 <col:53, col:221> 'int'
|   |       `-ConditionalOperator 0x557079bf2398 <col:54, col:220> 'int'
|   |         |-BinaryOperator 0x557079bf2138 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x557079bf2058 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x557079bf1f80 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x557079bf1f68 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x557079bf1f48 <col:55> '_Bool' lvalue Var 0x557079beffc0 'y$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x557079bf2038 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x557079bf1fd0 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x557079bf1fb8 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x557079bf1f98 <col:74> '_Bool' lvalue Var 0x557079befbf0 'y$r_buff0_thd1' '_Bool'
|   |         | |   `-UnaryOperator 0x557079bf2020 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x557079bf2008 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x557079bf1fe8 <col:93> '_Bool' lvalue Var 0x557079bf00b8 'y$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x557079bf2118 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x557079bf20b0 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x557079bf2098 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x557079bf2078 <col:112> '_Bool' lvalue Var 0x557079befbf0 'y$r_buff0_thd1' '_Bool'
|   |         |   `-UnaryOperator 0x557079bf2100 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x557079bf20e8 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x557079bf20c8 <col:131> '_Bool' lvalue Var 0x557079befd58 'y$r_buff1_thd1' '_Bool'
|   |         |-ImplicitCastExpr 0x557079bf2380 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x557079bf2368 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x557079bf2158 <col:148> '_Bool' lvalue Var 0x557079bf00b8 'y$w_buff1_used' '_Bool'
|   |         `-ParenExpr 0x557079bf2348 <col:165, col:220> 'int'
|   |           `-ConditionalOperator 0x557079bf2318 <col:166, col:219> 'int'
|   |             |-BinaryOperator 0x557079bf2218 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x557079bf21d0 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x557079bf21b8 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x557079bf2178 <col:166> '_Bool' lvalue Var 0x557079beffc0 'y$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x557079bf2200 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x557079bf21e8 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x557079bf2198 <col:184> '_Bool' lvalue Var 0x557079befbf0 'y$r_buff0_thd1' '_Bool'
|   |             |-ImplicitCastExpr 0x557079bf22e8 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x557079bf2268 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x557079bf2238 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x557079bf2300 <col:212, col:219> 'int' <IntegralCast>
|   |               `-CStyleCastExpr 0x557079bf22c0 <col:212, col:219> '_Bool' <IntegralToBoolean>
|   |                 `-IntegerLiteral 0x557079bf2290 <col:219> 'int' 0
|   |-BinaryOperator 0x557079bf2a38 <line:726:3, col:227> '_Bool' '='
|   | |-DeclRefExpr 0x557079bf24b0 <col:3> '_Bool' lvalue Var 0x557079befbf0 'y$r_buff0_thd1' '_Bool'
|   | `-ImplicitCastExpr 0x557079bf2a20 <col:20, col:227> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x557079bf29f0 <col:20, col:227> 'int'
|   |     |-ImplicitCastExpr 0x557079bf29a8 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x557079bf2990 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x557079bf24d0 <col:20> '_Bool' lvalue Var 0x557079bf02c8 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x557079bf29d8 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x557079bf29c0 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x557079bf24f0 <col:36> '_Bool' lvalue Var 0x557079befbf0 'y$r_buff0_thd1' '_Bool'
|   |     `-ParenExpr 0x557079bf2970 <col:53, col:227> 'int'
|   |       `-ConditionalOperator 0x557079bf2940 <col:54, col:226> 'int'
|   |         |-BinaryOperator 0x557079bf2700 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x557079bf2620 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x557079bf2548 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x557079bf2530 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x557079bf2510 <col:55> '_Bool' lvalue Var 0x557079beffc0 'y$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x557079bf2600 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x557079bf2598 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x557079bf2580 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x557079bf2560 <col:74> '_Bool' lvalue Var 0x557079befbf0 'y$r_buff0_thd1' '_Bool'
|   |         | |   `-UnaryOperator 0x557079bf25e8 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x557079bf25d0 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x557079bf25b0 <col:93> '_Bool' lvalue Var 0x557079bf00b8 'y$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x557079bf26e0 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x557079bf2678 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x557079bf2660 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x557079bf2640 <col:112> '_Bool' lvalue Var 0x557079befbf0 'y$r_buff0_thd1' '_Bool'
|   |         |   `-UnaryOperator 0x557079bf26c8 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x557079bf26b0 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x557079bf2690 <col:131> '_Bool' lvalue Var 0x557079befd58 'y$r_buff1_thd1' '_Bool'
|   |         |-ImplicitCastExpr 0x557079bf2928 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x557079bf2910 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x557079bf2720 <col:148> '_Bool' lvalue Var 0x557079befbf0 'y$r_buff0_thd1' '_Bool'
|   |         `-ParenExpr 0x557079bf28f0 <col:165, col:226> 'int'
|   |           `-ConditionalOperator 0x557079bf28c0 <col:166, col:212> 'int'
|   |             |-BinaryOperator 0x557079bf27e0 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x557079bf2798 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x557079bf2780 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x557079bf2740 <col:166> '_Bool' lvalue Var 0x557079beffc0 'y$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x557079bf27c8 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x557079bf27b0 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x557079bf2760 <col:184> '_Bool' lvalue Var 0x557079befbf0 'y$r_buff0_thd1' '_Bool'
|   |             |-ImplicitCastExpr 0x557079bf2878 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x557079bf2830 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x557079bf2800 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x557079bf28a8 <col:212> 'int' <IntegralCast>
|   |               `-ImplicitCastExpr 0x557079bf2890 <col:212> '_Bool' <LValueToRValue>
|   |                 `-DeclRefExpr 0x557079bf2858 <col:212> '_Bool' lvalue Var 0x557079befbf0 'y$r_buff0_thd1' '_Bool'
|   |-BinaryOperator 0x557079bf3028 <line:727:3, col:221> '_Bool' '='
|   | |-DeclRefExpr 0x557079bf2a58 <col:3> '_Bool' lvalue Var 0x557079befd58 'y$r_buff1_thd1' '_Bool'
|   | `-ImplicitCastExpr 0x557079bf3010 <col:20, col:221> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x557079bf2fe0 <col:20, col:221> 'int'
|   |     |-ImplicitCastExpr 0x557079bf2f98 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x557079bf2f80 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x557079bf2a78 <col:20> '_Bool' lvalue Var 0x557079bf02c8 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x557079bf2fc8 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x557079bf2fb0 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x557079bf2a98 <col:36> '_Bool' lvalue Var 0x557079befd58 'y$r_buff1_thd1' '_Bool'
|   |     `-ParenExpr 0x557079bf2f60 <col:53, col:221> 'int'
|   |       `-ConditionalOperator 0x557079bf2f30 <col:54, col:220> 'int'
|   |         |-BinaryOperator 0x557079bf2cd0 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x557079bf2bf0 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x557079bf2af0 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x557079bf2ad8 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x557079bf2ab8 <col:55> '_Bool' lvalue Var 0x557079beffc0 'y$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x557079bf2bd0 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x557079bf2b68 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x557079bf2b50 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x557079bf2b30 <col:74> '_Bool' lvalue Var 0x557079befbf0 'y$r_buff0_thd1' '_Bool'
|   |         | |   `-UnaryOperator 0x557079bf2bb8 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x557079bf2ba0 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x557079bf2b80 <col:93> '_Bool' lvalue Var 0x557079bf00b8 'y$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x557079bf2cb0 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x557079bf2c48 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x557079bf2c30 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x557079bf2c10 <col:112> '_Bool' lvalue Var 0x557079befbf0 'y$r_buff0_thd1' '_Bool'
|   |         |   `-UnaryOperator 0x557079bf2c98 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x557079bf2c80 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x557079bf2c60 <col:131> '_Bool' lvalue Var 0x557079befd58 'y$r_buff1_thd1' '_Bool'
|   |         |-ImplicitCastExpr 0x557079bf2f18 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x557079bf2f00 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x557079bf2cf0 <col:148> '_Bool' lvalue Var 0x557079befd58 'y$r_buff1_thd1' '_Bool'
|   |         `-ParenExpr 0x557079bf2ee0 <col:165, col:220> 'int'
|   |           `-ConditionalOperator 0x557079bf2eb0 <col:166, col:219> 'int'
|   |             |-BinaryOperator 0x557079bf2db0 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x557079bf2d68 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x557079bf2d50 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x557079bf2d10 <col:166> '_Bool' lvalue Var 0x557079beffc0 'y$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x557079bf2d98 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x557079bf2d80 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x557079bf2d30 <col:184> '_Bool' lvalue Var 0x557079befbf0 'y$r_buff0_thd1' '_Bool'
|   |             |-ImplicitCastExpr 0x557079bf2e80 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x557079bf2e00 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x557079bf2dd0 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x557079bf2e98 <col:212, col:219> 'int' <IntegralCast>
|   |               `-CStyleCastExpr 0x557079bf2e58 <col:212, col:219> '_Bool' <IntegralToBoolean>
|   |                 `-IntegerLiteral 0x557079bf2e28 <col:219> 'int' 0
|   |-BinaryOperator 0x557079bf30a0 <line:728:3, col:25> 'int' '='
|   | |-DeclRefExpr 0x557079bf3048 <col:3> 'int' lvalue Var 0x557079bef408 '__unbuffered_p0_EBX' 'int'
|   | `-ImplicitCastExpr 0x557079bf3088 <col:25> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x557079bf3068 <col:25> 'int' lvalue Var 0x557079bef978 'y' 'int'
|   |-BinaryOperator 0x557079bf31d0 <line:729:3, col:37> 'int' '='
|   | |-DeclRefExpr 0x557079bf30c0 <col:3> 'int' lvalue Var 0x557079bef978 'y' 'int'
|   | `-ConditionalOperator 0x557079bf31a0 <col:7, col:37> 'int'
|   |   |-ImplicitCastExpr 0x557079bf3158 <col:7> 'int' <IntegralCast>
|   |   | `-ImplicitCastExpr 0x557079bf3140 <col:7> '_Bool' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x557079bf30e0 <col:7> '_Bool' lvalue Var 0x557079befa10 'y$flush_delayed' '_Bool'
|   |   |-ImplicitCastExpr 0x557079bf3170 <col:25> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x557079bf3100 <col:25> 'int' lvalue Var 0x557079befb00 'y$mem_tmp' 'int'
|   |   `-ImplicitCastExpr 0x557079bf3188 <col:37> 'int' <LValueToRValue>
|   |     `-DeclRefExpr 0x557079bf3120 <col:37> 'int' lvalue Var 0x557079bef978 'y' 'int'
|   |-BinaryOperator 0x557079bf3268 <line:730:3, col:28> '_Bool' '='
|   | |-DeclRefExpr 0x557079bf31f0 <col:3> '_Bool' lvalue Var 0x557079befa10 'y$flush_delayed' '_Bool'
|   | `-CStyleCastExpr 0x557079bf3240 <col:21, col:28> '_Bool' <IntegralToBoolean>
|   |   `-IntegerLiteral 0x557079bf3210 <col:28> 'int' 0
|   |-CallExpr 0x557079bf32c0 <line:731:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x557079bf32a8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x557079bf3288 <col:3> 'void ()' Function 0x557079b96060 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x557079bf3318 <line:732:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x557079bf3300 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x557079bf32e0 <col:3> 'void ()' Function 0x557079b95fa0 '__VERIFIER_atomic_begin' 'void ()'
|   |-CallExpr 0x557079bf3370 <line:733:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x557079bf3358 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x557079bf3338 <col:3> 'void ()' Function 0x557079b96060 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x557079bf33c8 <line:734:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x557079bf33b0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x557079bf3390 <col:3> 'void ()' Function 0x557079b95fa0 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x557079bf3480 <line:735:3, col:41> 'int' '='
|   | |-DeclRefExpr 0x557079bf33e8 <col:3> 'int' lvalue Var 0x557079bef1c8 '__unbuffered_cnt' 'int'
|   | `-BinaryOperator 0x557079bf3460 <col:22, col:41> 'int' '+'
|   |   |-ImplicitCastExpr 0x557079bf3448 <col:22> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x557079bf3408 <col:22> 'int' lvalue Var 0x557079bef1c8 '__unbuffered_cnt' 'int'
|   |   `-IntegerLiteral 0x557079bf3428 <col:41> 'int' 1
|   |-CallExpr 0x557079bf34d8 <line:736:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x557079bf34c0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x557079bf34a0 <col:3> 'void ()' Function 0x557079b96060 '__VERIFIER_atomic_end' 'void ()'
|   `-ReturnStmt 0x557079bf3588 <line:737:3, col:36>
|     `-CallExpr 0x557079bf3568 <col:10, col:36> 'void *'
|       `-ImplicitCastExpr 0x557079bf3550 <col:10> 'void *(*)(void)' <FunctionToPointerDecay>
|         `-DeclRefExpr 0x557079bf34f8 <col:10> 'void *(void)' Function 0x557079b95ab8 '__VERIFIER_nondet_pointer' 'void *(void)'
|-FunctionDecl 0x557079bf3750 prev 0x557079beee48 <line:739:1, line:782:1> line:739:8 used P1 'void *(void *)'
| |-ParmVarDecl 0x557079bf36b8 <col:11, col:17> col:17 arg 'void *'
| `-CompoundStmt 0x557079bf7940 <line:740:1, line:782:1>
|   |-CallExpr 0x557079bf3830 <line:741:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x557079bf3818 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x557079bf37f8 <col:3> 'void ()' Function 0x557079b95fa0 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x557079bf38a8 <line:742:3, col:15> 'int' '='
|   | |-DeclRefExpr 0x557079bf3850 <col:3> 'int' lvalue Var 0x557079bf0040 'y$w_buff1' 'int'
|   | `-ImplicitCastExpr 0x557079bf3890 <col:15> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x557079bf3870 <col:15> 'int' lvalue Var 0x557079beff48 'y$w_buff0' 'int'
|   |-BinaryOperator 0x557079bf3908 <line:743:3, col:15> 'int' '='
|   | |-DeclRefExpr 0x557079bf38c8 <col:3> 'int' lvalue Var 0x557079beff48 'y$w_buff0' 'int'
|   | `-IntegerLiteral 0x557079bf38e8 <col:15> 'int' 1
|   |-BinaryOperator 0x557079bf3980 <line:744:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x557079bf3928 <col:3> '_Bool' lvalue Var 0x557079bf00b8 'y$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x557079bf3968 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x557079bf3948 <col:20> '_Bool' lvalue Var 0x557079beffc0 'y$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x557079bf3a18 <line:745:3, col:27> '_Bool' '='
|   | |-DeclRefExpr 0x557079bf39a0 <col:3> '_Bool' lvalue Var 0x557079beffc0 'y$w_buff0_used' '_Bool'
|   | `-CStyleCastExpr 0x557079bf39f0 <col:20, col:27> '_Bool' <IntegralToBoolean>
|   |   `-IntegerLiteral 0x557079bf39c0 <col:27> 'int' 1
|   |-CallExpr 0x557079bf3bc8 <line:746:3, col:56> 'void'
|   | |-ImplicitCastExpr 0x557079bf3bb0 <col:3> 'void (*)(int)' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x557079bf3a38 <col:3> 'void (int)' Function 0x557079b95d28 '__VERIFIER_assert' 'void (int)'
|   | `-UnaryOperator 0x557079bf3b60 <col:21, col:55> 'int' prefix '!' cannot overflow
|   |   `-ParenExpr 0x557079bf3b40 <col:22, col:55> 'int'
|   |     `-BinaryOperator 0x557079bf3af8 <col:23, col:41> 'int' '&&'
|   |       |-ImplicitCastExpr 0x557079bf3ab0 <col:23> 'int' <IntegralCast>
|   |       | `-ImplicitCastExpr 0x557079bf3a98 <col:23> '_Bool' <LValueToRValue>
|   |       |   `-DeclRefExpr 0x557079bf3a58 <col:23> '_Bool' lvalue Var 0x557079bf00b8 'y$w_buff1_used' '_Bool'
|   |       `-ImplicitCastExpr 0x557079bf3ae0 <col:41> 'int' <IntegralCast>
|   |         `-ImplicitCastExpr 0x557079bf3ac8 <col:41> '_Bool' <LValueToRValue>
|   |           `-DeclRefExpr 0x557079bf3a78 <col:41> '_Bool' lvalue Var 0x557079beffc0 'y$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x557079bf3c48 <line:747:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x557079bf3bf0 <col:3> '_Bool' lvalue Var 0x557079befce0 'y$r_buff1_thd0' '_Bool'
|   | `-ImplicitCastExpr 0x557079bf3c30 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x557079bf3c10 <col:20> '_Bool' lvalue Var 0x557079befb78 'y$r_buff0_thd0' '_Bool'
|   |-BinaryOperator 0x557079bf3cc0 <line:748:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x557079bf3c68 <col:3> '_Bool' lvalue Var 0x557079befd58 'y$r_buff1_thd1' '_Bool'
|   | `-ImplicitCastExpr 0x557079bf3ca8 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x557079bf3c88 <col:20> '_Bool' lvalue Var 0x557079befbf0 'y$r_buff0_thd1' '_Bool'
|   |-BinaryOperator 0x557079bf3d38 <line:749:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x557079bf3ce0 <col:3> '_Bool' lvalue Var 0x557079befdd0 'y$r_buff1_thd2' '_Bool'
|   | `-ImplicitCastExpr 0x557079bf3d20 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x557079bf3d00 <col:20> '_Bool' lvalue Var 0x557079befc68 'y$r_buff0_thd2' '_Bool'
|   |-BinaryOperator 0x557079bf3dd0 <line:750:3, col:27> '_Bool' '='
|   | |-DeclRefExpr 0x557079bf3d58 <col:3> '_Bool' lvalue Var 0x557079befc68 'y$r_buff0_thd2' '_Bool'
|   | `-CStyleCastExpr 0x557079bf3da8 <col:20, col:27> '_Bool' <IntegralToBoolean>
|   |   `-IntegerLiteral 0x557079bf3d78 <col:27> 'int' 1
|   |-CallExpr 0x557079bf3e28 <line:751:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x557079bf3e10 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x557079bf3df0 <col:3> 'void ()' Function 0x557079b96060 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x557079bf3e80 <line:752:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x557079bf3e68 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x557079bf3e48 <col:3> 'void ()' Function 0x557079b95fa0 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x557079bf3f18 <line:753:3, col:42> '_Bool' '='
|   | |-DeclRefExpr 0x557079bf3ea0 <col:3> '_Bool' lvalue Var 0x557079bf0250 'weak$$choice0' '_Bool'
|   | `-CallExpr 0x557079bf3ef8 <col:19, col:42> '_Bool'
|   |   `-ImplicitCastExpr 0x557079bf3ee0 <col:19> '_Bool (*)(void)' <FunctionToPointerDecay>
|   |     `-DeclRefExpr 0x557079bf3ec0 <col:19> '_Bool (void)' Function 0x557079b95770 '__VERIFIER_nondet_bool' '_Bool (void)'
|   |-BinaryOperator 0x557079bf3fb0 <line:754:3, col:42> '_Bool' '='
|   | |-DeclRefExpr 0x557079bf3f38 <col:3> '_Bool' lvalue Var 0x557079bf02c8 'weak$$choice2' '_Bool'
|   | `-CallExpr 0x557079bf3f90 <col:19, col:42> '_Bool'
|   |   `-ImplicitCastExpr 0x557079bf3f78 <col:19> '_Bool (*)(void)' <FunctionToPointerDecay>
|   |     `-DeclRefExpr 0x557079bf3f58 <col:19> '_Bool (void)' Function 0x557079b95770 '__VERIFIER_nondet_bool' '_Bool (void)'
|   |-BinaryOperator 0x557079bf4028 <line:755:3, col:21> '_Bool' '='
|   | |-DeclRefExpr 0x557079bf3fd0 <col:3> '_Bool' lvalue Var 0x557079befa10 'y$flush_delayed' '_Bool'
|   | `-ImplicitCastExpr 0x557079bf4010 <col:21> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x557079bf3ff0 <col:21> '_Bool' lvalue Var 0x557079bf02c8 'weak$$choice2' '_Bool'
|   |-BinaryOperator 0x557079bf40a0 <line:756:3, col:15> 'int' '='
|   | |-DeclRefExpr 0x557079bf4048 <col:3> 'int' lvalue Var 0x557079befb00 'y$mem_tmp' 'int'
|   | `-ImplicitCastExpr 0x557079bf4088 <col:15> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x557079bf4068 <col:15> 'int' lvalue Var 0x557079bef978 'y' 'int'
|   |-BinaryOperator 0x557079bf44d8 <line:757:3, col:162> 'int' '='
|   | |-DeclRefExpr 0x557079bf40c0 <col:3> 'int' lvalue Var 0x557079bef978 'y' 'int'
|   | `-ConditionalOperator 0x557079bf44a8 <col:7, col:162> 'int'
|   |   |-BinaryOperator 0x557079bf42d0 <col:7, col:84> 'int' '||'
|   |   | |-BinaryOperator 0x557079bf41f0 <col:7, col:46> 'int' '||'
|   |   | | |-UnaryOperator 0x557079bf4118 <col:7, col:8> 'int' prefix '!' cannot overflow
|   |   | | | `-ImplicitCastExpr 0x557079bf4100 <col:8> '_Bool' <LValueToRValue>
|   |   | | |   `-DeclRefExpr 0x557079bf40e0 <col:8> '_Bool' lvalue Var 0x557079beffc0 'y$w_buff0_used' '_Bool'
|   |   | | `-BinaryOperator 0x557079bf41d0 <col:26, col:46> 'int' '&&'
|   |   | |   |-UnaryOperator 0x557079bf4168 <col:26, col:27> 'int' prefix '!' cannot overflow
|   |   | |   | `-ImplicitCastExpr 0x557079bf4150 <col:27> '_Bool' <LValueToRValue>
|   |   | |   |   `-DeclRefExpr 0x557079bf4130 <col:27> '_Bool' lvalue Var 0x557079befc68 'y$r_buff0_thd2' '_Bool'
|   |   | |   `-UnaryOperator 0x557079bf41b8 <col:45, col:46> 'int' prefix '!' cannot overflow
|   |   | |     `-ImplicitCastExpr 0x557079bf41a0 <col:46> '_Bool' <LValueToRValue>
|   |   | |       `-DeclRefExpr 0x557079bf4180 <col:46> '_Bool' lvalue Var 0x557079bf00b8 'y$w_buff1_used' '_Bool'
|   |   | `-BinaryOperator 0x557079bf42b0 <col:64, col:84> 'int' '&&'
|   |   |   |-UnaryOperator 0x557079bf4248 <col:64, col:65> 'int' prefix '!' cannot overflow
|   |   |   | `-ImplicitCastExpr 0x557079bf4230 <col:65> '_Bool' <LValueToRValue>
|   |   |   |   `-DeclRefExpr 0x557079bf4210 <col:65> '_Bool' lvalue Var 0x557079befc68 'y$r_buff0_thd2' '_Bool'
|   |   |   `-UnaryOperator 0x557079bf4298 <col:83, col:84> 'int' prefix '!' cannot overflow
|   |   |     `-ImplicitCastExpr 0x557079bf4280 <col:84> '_Bool' <LValueToRValue>
|   |   |       `-DeclRefExpr 0x557079bf4260 <col:84> '_Bool' lvalue Var 0x557079befdd0 'y$r_buff1_thd2' '_Bool'
|   |   |-ImplicitCastExpr 0x557079bf4490 <col:101> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x557079bf42f0 <col:101> 'int' lvalue Var 0x557079bef978 'y' 'int'
|   |   `-ParenExpr 0x557079bf4470 <col:105, col:162> 'int'
|   |     `-ConditionalOperator 0x557079bf4440 <col:106, col:153> 'int'
|   |       |-BinaryOperator 0x557079bf43b0 <col:106, col:124> 'int' '&&'
|   |       | |-ImplicitCastExpr 0x557079bf4368 <col:106> 'int' <IntegralCast>
|   |       | | `-ImplicitCastExpr 0x557079bf4350 <col:106> '_Bool' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x557079bf4310 <col:106> '_Bool' lvalue Var 0x557079beffc0 'y$w_buff0_used' '_Bool'
|   |       | `-ImplicitCastExpr 0x557079bf4398 <col:124> 'int' <IntegralCast>
|   |       |   `-ImplicitCastExpr 0x557079bf4380 <col:124> '_Bool' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x557079bf4330 <col:124> '_Bool' lvalue Var 0x557079befc68 'y$r_buff0_thd2' '_Bool'
|   |       |-ImplicitCastExpr 0x557079bf4410 <col:141> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x557079bf43d0 <col:141> 'int' lvalue Var 0x557079beff48 'y$w_buff0' 'int'
|   |       `-ImplicitCastExpr 0x557079bf4428 <col:153> 'int' <LValueToRValue>
|   |         `-DeclRefExpr 0x557079bf43f0 <col:153> 'int' lvalue Var 0x557079bf0040 'y$w_buff1' 'int'
|   |-BinaryOperator 0x557079bf49e8 <line:758:3, col:208> 'int' '='
|   | |-DeclRefExpr 0x557079bf44f8 <col:3> 'int' lvalue Var 0x557079beff48 'y$w_buff0' 'int'
|   | `-ConditionalOperator 0x557079bf49b8 <col:15, col:208> 'int'
|   |   |-ImplicitCastExpr 0x557079bf4988 <col:15> 'int' <IntegralCast>
|   |   | `-ImplicitCastExpr 0x557079bf4970 <col:15> '_Bool' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x557079bf4518 <col:15> '_Bool' lvalue Var 0x557079bf02c8 'weak$$choice2' '_Bool'
|   |   |-ImplicitCastExpr 0x557079bf49a0 <col:31> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x557079bf4538 <col:31> 'int' lvalue Var 0x557079beff48 'y$w_buff0' 'int'
|   |   `-ParenExpr 0x557079bf4950 <col:43, col:208> 'int'
|   |     `-ConditionalOperator 0x557079bf4920 <col:44, col:207> 'int'
|   |       |-BinaryOperator 0x557079bf4748 <col:44, col:121> 'int' '||'
|   |       | |-BinaryOperator 0x557079bf4668 <col:44, col:83> 'int' '||'
|   |       | | |-UnaryOperator 0x557079bf4590 <col:44, col:45> 'int' prefix '!' cannot overflow
|   |       | | | `-ImplicitCastExpr 0x557079bf4578 <col:45> '_Bool' <LValueToRValue>
|   |       | | |   `-DeclRefExpr 0x557079bf4558 <col:45> '_Bool' lvalue Var 0x557079beffc0 'y$w_buff0_used' '_Bool'
|   |       | | `-BinaryOperator 0x557079bf4648 <col:63, col:83> 'int' '&&'
|   |       | |   |-UnaryOperator 0x557079bf45e0 <col:63, col:64> 'int' prefix '!' cannot overflow
|   |       | |   | `-ImplicitCastExpr 0x557079bf45c8 <col:64> '_Bool' <LValueToRValue>
|   |       | |   |   `-DeclRefExpr 0x557079bf45a8 <col:64> '_Bool' lvalue Var 0x557079befc68 'y$r_buff0_thd2' '_Bool'
|   |       | |   `-UnaryOperator 0x557079bf4630 <col:82, col:83> 'int' prefix '!' cannot overflow
|   |       | |     `-ImplicitCastExpr 0x557079bf4618 <col:83> '_Bool' <LValueToRValue>
|   |       | |       `-DeclRefExpr 0x557079bf45f8 <col:83> '_Bool' lvalue Var 0x557079bf00b8 'y$w_buff1_used' '_Bool'
|   |       | `-BinaryOperator 0x557079bf4728 <col:101, col:121> 'int' '&&'
|   |       |   |-UnaryOperator 0x557079bf46c0 <col:101, col:102> 'int' prefix '!' cannot overflow
|   |       |   | `-ImplicitCastExpr 0x557079bf46a8 <col:102> '_Bool' <LValueToRValue>
|   |       |   |   `-DeclRefExpr 0x557079bf4688 <col:102> '_Bool' lvalue Var 0x557079befc68 'y$r_buff0_thd2' '_Bool'
|   |       |   `-UnaryOperator 0x557079bf4710 <col:120, col:121> 'int' prefix '!' cannot overflow
|   |       |     `-ImplicitCastExpr 0x557079bf46f8 <col:121> '_Bool' <LValueToRValue>
|   |       |       `-DeclRefExpr 0x557079bf46d8 <col:121> '_Bool' lvalue Var 0x557079befdd0 'y$r_buff1_thd2' '_Bool'
|   |       |-ImplicitCastExpr 0x557079bf4908 <col:138> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x557079bf4768 <col:138> 'int' lvalue Var 0x557079beff48 'y$w_buff0' 'int'
|   |       `-ParenExpr 0x557079bf48e8 <col:150, col:207> 'int'
|   |         `-ConditionalOperator 0x557079bf48b8 <col:151, col:198> 'int'
|   |           |-BinaryOperator 0x557079bf4828 <col:151, col:169> 'int' '&&'
|   |           | |-ImplicitCastExpr 0x557079bf47e0 <col:151> 'int' <IntegralCast>
|   |           | | `-ImplicitCastExpr 0x557079bf47c8 <col:151> '_Bool' <LValueToRValue>
|   |           | |   `-DeclRefExpr 0x557079bf4788 <col:151> '_Bool' lvalue Var 0x557079beffc0 'y$w_buff0_used' '_Bool'
|   |           | `-ImplicitCastExpr 0x557079bf4810 <col:169> 'int' <IntegralCast>
|   |           |   `-ImplicitCastExpr 0x557079bf47f8 <col:169> '_Bool' <LValueToRValue>
|   |           |     `-DeclRefExpr 0x557079bf47a8 <col:169> '_Bool' lvalue Var 0x557079befc68 'y$r_buff0_thd2' '_Bool'
|   |           |-ImplicitCastExpr 0x557079bf4888 <col:186> 'int' <LValueToRValue>
|   |           | `-DeclRefExpr 0x557079bf4848 <col:186> 'int' lvalue Var 0x557079beff48 'y$w_buff0' 'int'
|   |           `-ImplicitCastExpr 0x557079bf48a0 <col:198> 'int' <LValueToRValue>
|   |             `-DeclRefExpr 0x557079bf4868 <col:198> 'int' lvalue Var 0x557079beff48 'y$w_buff0' 'int'
|   |-BinaryOperator 0x557079bf4f08 <line:759:3, col:208> 'int' '='
|   | |-DeclRefExpr 0x557079bf4a08 <col:3> 'int' lvalue Var 0x557079bf0040 'y$w_buff1' 'int'
|   | `-ConditionalOperator 0x557079bf4ed8 <col:15, col:208> 'int'
|   |   |-ImplicitCastExpr 0x557079bf4ea8 <col:15> 'int' <IntegralCast>
|   |   | `-ImplicitCastExpr 0x557079bf4e90 <col:15> '_Bool' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x557079bf4a28 <col:15> '_Bool' lvalue Var 0x557079bf02c8 'weak$$choice2' '_Bool'
|   |   |-ImplicitCastExpr 0x557079bf4ec0 <col:31> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x557079bf4a48 <col:31> 'int' lvalue Var 0x557079bf0040 'y$w_buff1' 'int'
|   |   `-ParenExpr 0x557079bf4e70 <col:43, col:208> 'int'
|   |     `-ConditionalOperator 0x557079bf4e40 <col:44, col:207> 'int'
|   |       |-BinaryOperator 0x557079bf4c68 <col:44, col:121> 'int' '||'
|   |       | |-BinaryOperator 0x557079bf4b88 <col:44, col:83> 'int' '||'
|   |       | | |-UnaryOperator 0x557079bf4aa0 <col:44, col:45> 'int' prefix '!' cannot overflow
|   |       | | | `-ImplicitCastExpr 0x557079bf4a88 <col:45> '_Bool' <LValueToRValue>
|   |       | | |   `-DeclRefExpr 0x557079bf4a68 <col:45> '_Bool' lvalue Var 0x557079beffc0 'y$w_buff0_used' '_Bool'
|   |       | | `-BinaryOperator 0x557079bf4b68 <col:63, col:83> 'int' '&&'
|   |       | |   |-UnaryOperator 0x557079bf4af0 <col:63, col:64> 'int' prefix '!' cannot overflow
|   |       | |   | `-ImplicitCastExpr 0x557079bf4ad8 <col:64> '_Bool' <LValueToRValue>
|   |       | |   |   `-DeclRefExpr 0x557079bf4ab8 <col:64> '_Bool' lvalue Var 0x557079befc68 'y$r_buff0_thd2' '_Bool'
|   |       | |   `-UnaryOperator 0x557079bf4b50 <col:82, col:83> 'int' prefix '!' cannot overflow
|   |       | |     `-ImplicitCastExpr 0x557079bf4b28 <col:83> '_Bool' <LValueToRValue>
|   |       | |       `-DeclRefExpr 0x557079bf4b08 <col:83> '_Bool' lvalue Var 0x557079bf00b8 'y$w_buff1_used' '_Bool'
|   |       | `-BinaryOperator 0x557079bf4c48 <col:101, col:121> 'int' '&&'
|   |       |   |-UnaryOperator 0x557079bf4be0 <col:101, col:102> 'int' prefix '!' cannot overflow
|   |       |   | `-ImplicitCastExpr 0x557079bf4bc8 <col:102> '_Bool' <LValueToRValue>
|   |       |   |   `-DeclRefExpr 0x557079bf4ba8 <col:102> '_Bool' lvalue Var 0x557079befc68 'y$r_buff0_thd2' '_Bool'
|   |       |   `-UnaryOperator 0x557079bf4c30 <col:120, col:121> 'int' prefix '!' cannot overflow
|   |       |     `-ImplicitCastExpr 0x557079bf4c18 <col:121> '_Bool' <LValueToRValue>
|   |       |       `-DeclRefExpr 0x557079bf4bf8 <col:121> '_Bool' lvalue Var 0x557079befdd0 'y$r_buff1_thd2' '_Bool'
|   |       |-ImplicitCastExpr 0x557079bf4e28 <col:138> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x557079bf4c88 <col:138> 'int' lvalue Var 0x557079bf0040 'y$w_buff1' 'int'
|   |       `-ParenExpr 0x557079bf4e08 <col:150, col:207> 'int'
|   |         `-ConditionalOperator 0x557079bf4dd8 <col:151, col:198> 'int'
|   |           |-BinaryOperator 0x557079bf4d48 <col:151, col:169> 'int' '&&'
|   |           | |-ImplicitCastExpr 0x557079bf4d00 <col:151> 'int' <IntegralCast>
|   |           | | `-ImplicitCastExpr 0x557079bf4ce8 <col:151> '_Bool' <LValueToRValue>
|   |           | |   `-DeclRefExpr 0x557079bf4ca8 <col:151> '_Bool' lvalue Var 0x557079beffc0 'y$w_buff0_used' '_Bool'
|   |           | `-ImplicitCastExpr 0x557079bf4d30 <col:169> 'int' <IntegralCast>
|   |           |   `-ImplicitCastExpr 0x557079bf4d18 <col:169> '_Bool' <LValueToRValue>
|   |           |     `-DeclRefExpr 0x557079bf4cc8 <col:169> '_Bool' lvalue Var 0x557079befc68 'y$r_buff0_thd2' '_Bool'
|   |           |-ImplicitCastExpr 0x557079bf4da8 <col:186> 'int' <LValueToRValue>
|   |           | `-DeclRefExpr 0x557079bf4d68 <col:186> 'int' lvalue Var 0x557079bf0040 'y$w_buff1' 'int'
|   |           `-ImplicitCastExpr 0x557079bf4dc0 <col:198> 'int' <LValueToRValue>
|   |             `-DeclRefExpr 0x557079bf4d88 <col:198> 'int' lvalue Var 0x557079bf0040 'y$w_buff1' 'int'
|   |-BinaryOperator 0x557079bf54b0 <line:760:3, col:227> '_Bool' '='
|   | |-DeclRefExpr 0x557079bf4f28 <col:3> '_Bool' lvalue Var 0x557079beffc0 'y$w_buff0_used' '_Bool'
|   | `-ImplicitCastExpr 0x557079bf5498 <col:20, col:227> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x557079bf5468 <col:20, col:227> 'int'
|   |     |-ImplicitCastExpr 0x557079bf5420 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x557079bf5408 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x557079bf4f48 <col:20> '_Bool' lvalue Var 0x557079bf02c8 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x557079bf5450 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x557079bf5438 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x557079bf4f68 <col:36> '_Bool' lvalue Var 0x557079beffc0 'y$w_buff0_used' '_Bool'
|   |     `-ParenExpr 0x557079bf53e8 <col:53, col:227> 'int'
|   |       `-ConditionalOperator 0x557079bf53b8 <col:54, col:226> 'int'
|   |         |-BinaryOperator 0x557079bf5178 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x557079bf5098 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x557079bf4fc0 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x557079bf4fa8 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x557079bf4f88 <col:55> '_Bool' lvalue Var 0x557079beffc0 'y$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x557079bf5078 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x557079bf5010 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x557079bf4ff8 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x557079bf4fd8 <col:74> '_Bool' lvalue Var 0x557079befc68 'y$r_buff0_thd2' '_Bool'
|   |         | |   `-UnaryOperator 0x557079bf5060 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x557079bf5048 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x557079bf5028 <col:93> '_Bool' lvalue Var 0x557079bf00b8 'y$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x557079bf5158 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x557079bf50f0 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x557079bf50d8 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x557079bf50b8 <col:112> '_Bool' lvalue Var 0x557079befc68 'y$r_buff0_thd2' '_Bool'
|   |         |   `-UnaryOperator 0x557079bf5140 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x557079bf5128 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x557079bf5108 <col:131> '_Bool' lvalue Var 0x557079befdd0 'y$r_buff1_thd2' '_Bool'
|   |         |-ImplicitCastExpr 0x557079bf53a0 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x557079bf5388 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x557079bf5198 <col:148> '_Bool' lvalue Var 0x557079beffc0 'y$w_buff0_used' '_Bool'
|   |         `-ParenExpr 0x557079bf5368 <col:165, col:226> 'int'
|   |           `-ConditionalOperator 0x557079bf5338 <col:166, col:212> 'int'
|   |             |-BinaryOperator 0x557079bf5258 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x557079bf5210 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x557079bf51f8 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x557079bf51b8 <col:166> '_Bool' lvalue Var 0x557079beffc0 'y$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x557079bf5240 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x557079bf5228 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x557079bf51d8 <col:184> '_Bool' lvalue Var 0x557079befc68 'y$r_buff0_thd2' '_Bool'
|   |             |-ImplicitCastExpr 0x557079bf52f0 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x557079bf52a8 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x557079bf5278 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x557079bf5320 <col:212> 'int' <IntegralCast>
|   |               `-ImplicitCastExpr 0x557079bf5308 <col:212> '_Bool' <LValueToRValue>
|   |                 `-DeclRefExpr 0x557079bf52d0 <col:212> '_Bool' lvalue Var 0x557079beffc0 'y$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x557079bf5a78 <line:761:3, col:221> '_Bool' '='
|   | |-DeclRefExpr 0x557079bf54d0 <col:3> '_Bool' lvalue Var 0x557079bf00b8 'y$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x557079bf5a60 <col:20, col:221> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x557079bf5a30 <col:20, col:221> 'int'
|   |     |-ImplicitCastExpr 0x557079bf59e8 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x557079bf59d0 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x557079bf54f0 <col:20> '_Bool' lvalue Var 0x557079bf02c8 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x557079bf5a18 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x557079bf5a00 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x557079bf5510 <col:36> '_Bool' lvalue Var 0x557079bf00b8 'y$w_buff1_used' '_Bool'
|   |     `-ParenExpr 0x557079bf59b0 <col:53, col:221> 'int'
|   |       `-ConditionalOperator 0x557079bf5980 <col:54, col:220> 'int'
|   |         |-BinaryOperator 0x557079bf5720 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x557079bf5640 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x557079bf5568 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x557079bf5550 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x557079bf5530 <col:55> '_Bool' lvalue Var 0x557079beffc0 'y$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x557079bf5620 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x557079bf55b8 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x557079bf55a0 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x557079bf5580 <col:74> '_Bool' lvalue Var 0x557079befc68 'y$r_buff0_thd2' '_Bool'
|   |         | |   `-UnaryOperator 0x557079bf5608 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x557079bf55f0 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x557079bf55d0 <col:93> '_Bool' lvalue Var 0x557079bf00b8 'y$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x557079bf5700 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x557079bf5698 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x557079bf5680 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x557079bf5660 <col:112> '_Bool' lvalue Var 0x557079befc68 'y$r_buff0_thd2' '_Bool'
|   |         |   `-UnaryOperator 0x557079bf56e8 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x557079bf56d0 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x557079bf56b0 <col:131> '_Bool' lvalue Var 0x557079befdd0 'y$r_buff1_thd2' '_Bool'
|   |         |-ImplicitCastExpr 0x557079bf5968 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x557079bf5950 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x557079bf5740 <col:148> '_Bool' lvalue Var 0x557079bf00b8 'y$w_buff1_used' '_Bool'
|   |         `-ParenExpr 0x557079bf5930 <col:165, col:220> 'int'
|   |           `-ConditionalOperator 0x557079bf5900 <col:166, col:219> 'int'
|   |             |-BinaryOperator 0x557079bf5800 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x557079bf57b8 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x557079bf57a0 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x557079bf5760 <col:166> '_Bool' lvalue Var 0x557079beffc0 'y$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x557079bf57e8 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x557079bf57d0 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x557079bf5780 <col:184> '_Bool' lvalue Var 0x557079befc68 'y$r_buff0_thd2' '_Bool'
|   |             |-ImplicitCastExpr 0x557079bf58d0 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x557079bf5850 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x557079bf5820 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x557079bf58e8 <col:212, col:219> 'int' <IntegralCast>
|   |               `-CStyleCastExpr 0x557079bf58a8 <col:212, col:219> '_Bool' <IntegralToBoolean>
|   |                 `-IntegerLiteral 0x557079bf5878 <col:219> 'int' 0
|   |-BinaryOperator 0x557079bf6038 <line:762:3, col:227> '_Bool' '='
|   | |-DeclRefExpr 0x557079bf5a98 <col:3> '_Bool' lvalue Var 0x557079befc68 'y$r_buff0_thd2' '_Bool'
|   | `-ImplicitCastExpr 0x557079bf6020 <col:20, col:227> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x557079bf5ff0 <col:20, col:227> 'int'
|   |     |-ImplicitCastExpr 0x557079bf5fa8 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x557079bf5f90 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x557079bf5ab8 <col:20> '_Bool' lvalue Var 0x557079bf02c8 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x557079bf5fd8 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x557079bf5fc0 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x557079bf5ad8 <col:36> '_Bool' lvalue Var 0x557079befc68 'y$r_buff0_thd2' '_Bool'
|   |     `-ParenExpr 0x557079bf5f70 <col:53, col:227> 'int'
|   |       `-ConditionalOperator 0x557079bf5f40 <col:54, col:226> 'int'
|   |         |-BinaryOperator 0x557079bf5d00 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x557079bf5c20 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x557079bf5b30 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x557079bf5b18 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x557079bf5af8 <col:55> '_Bool' lvalue Var 0x557079beffc0 'y$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x557079bf5c00 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x557079bf5b98 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x557079bf5b80 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x557079bf5b60 <col:74> '_Bool' lvalue Var 0x557079befc68 'y$r_buff0_thd2' '_Bool'
|   |         | |   `-UnaryOperator 0x557079bf5be8 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x557079bf5bd0 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x557079bf5bb0 <col:93> '_Bool' lvalue Var 0x557079bf00b8 'y$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x557079bf5ce0 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x557079bf5c78 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x557079bf5c60 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x557079bf5c40 <col:112> '_Bool' lvalue Var 0x557079befc68 'y$r_buff0_thd2' '_Bool'
|   |         |   `-UnaryOperator 0x557079bf5cc8 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x557079bf5cb0 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x557079bf5c90 <col:131> '_Bool' lvalue Var 0x557079befdd0 'y$r_buff1_thd2' '_Bool'
|   |         |-ImplicitCastExpr 0x557079bf5f28 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x557079bf5f10 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x557079bf5d20 <col:148> '_Bool' lvalue Var 0x557079befc68 'y$r_buff0_thd2' '_Bool'
|   |         `-ParenExpr 0x557079bf5ef0 <col:165, col:226> 'int'
|   |           `-ConditionalOperator 0x557079bf5ec0 <col:166, col:212> 'int'
|   |             |-BinaryOperator 0x557079bf5de0 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x557079bf5d98 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x557079bf5d80 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x557079bf5d40 <col:166> '_Bool' lvalue Var 0x557079beffc0 'y$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x557079bf5dc8 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x557079bf5db0 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x557079bf5d60 <col:184> '_Bool' lvalue Var 0x557079befc68 'y$r_buff0_thd2' '_Bool'
|   |             |-ImplicitCastExpr 0x557079bf5e78 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x557079bf5e30 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x557079bf5e00 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x557079bf5ea8 <col:212> 'int' <IntegralCast>
|   |               `-ImplicitCastExpr 0x557079bf5e90 <col:212> '_Bool' <LValueToRValue>
|   |                 `-DeclRefExpr 0x557079bf5e58 <col:212> '_Bool' lvalue Var 0x557079befc68 'y$r_buff0_thd2' '_Bool'
|   |-BinaryOperator 0x557079bf6600 <line:763:3, col:221> '_Bool' '='
|   | |-DeclRefExpr 0x557079bf6058 <col:3> '_Bool' lvalue Var 0x557079befdd0 'y$r_buff1_thd2' '_Bool'
|   | `-ImplicitCastExpr 0x557079bf65e8 <col:20, col:221> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x557079bf65b8 <col:20, col:221> 'int'
|   |     |-ImplicitCastExpr 0x557079bf6570 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x557079bf6558 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x557079bf6078 <col:20> '_Bool' lvalue Var 0x557079bf02c8 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x557079bf65a0 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x557079bf6588 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x557079bf6098 <col:36> '_Bool' lvalue Var 0x557079befdd0 'y$r_buff1_thd2' '_Bool'
|   |     `-ParenExpr 0x557079bf6538 <col:53, col:221> 'int'
|   |       `-ConditionalOperator 0x557079bf6508 <col:54, col:220> 'int'
|   |         |-BinaryOperator 0x557079bf62a8 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x557079bf61c8 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x557079bf60f0 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x557079bf60d8 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x557079bf60b8 <col:55> '_Bool' lvalue Var 0x557079beffc0 'y$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x557079bf61a8 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x557079bf6140 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x557079bf6128 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x557079bf6108 <col:74> '_Bool' lvalue Var 0x557079befc68 'y$r_buff0_thd2' '_Bool'
|   |         | |   `-UnaryOperator 0x557079bf6190 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x557079bf6178 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x557079bf6158 <col:93> '_Bool' lvalue Var 0x557079bf00b8 'y$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x557079bf6288 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x557079bf6220 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x557079bf6208 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x557079bf61e8 <col:112> '_Bool' lvalue Var 0x557079befc68 'y$r_buff0_thd2' '_Bool'
|   |         |   `-UnaryOperator 0x557079bf6270 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x557079bf6258 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x557079bf6238 <col:131> '_Bool' lvalue Var 0x557079befdd0 'y$r_buff1_thd2' '_Bool'
|   |         |-ImplicitCastExpr 0x557079bf64f0 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x557079bf64d8 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x557079bf62c8 <col:148> '_Bool' lvalue Var 0x557079befdd0 'y$r_buff1_thd2' '_Bool'
|   |         `-ParenExpr 0x557079bf64b8 <col:165, col:220> 'int'
|   |           `-ConditionalOperator 0x557079bf6488 <col:166, col:219> 'int'
|   |             |-BinaryOperator 0x557079bf6388 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x557079bf6340 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x557079bf6328 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x557079bf62e8 <col:166> '_Bool' lvalue Var 0x557079beffc0 'y$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x557079bf6370 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x557079bf6358 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x557079bf6308 <col:184> '_Bool' lvalue Var 0x557079befc68 'y$r_buff0_thd2' '_Bool'
|   |             |-ImplicitCastExpr 0x557079bf6458 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x557079bf63d8 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x557079bf63a8 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x557079bf6470 <col:212, col:219> 'int' <IntegralCast>
|   |               `-CStyleCastExpr 0x557079bf6430 <col:212, col:219> '_Bool' <IntegralToBoolean>
|   |                 `-IntegerLiteral 0x557079bf6400 <col:219> 'int' 0
|   |-BinaryOperator 0x557079bf6678 <line:764:3, col:25> 'int' '='
|   | |-DeclRefExpr 0x557079bf6620 <col:3> 'int' lvalue Var 0x557079bef528 '__unbuffered_p1_EAX' 'int'
|   | `-ImplicitCastExpr 0x557079bf6660 <col:25> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x557079bf6640 <col:25> 'int' lvalue Var 0x557079bef978 'y' 'int'
|   |-BinaryOperator 0x557079bf67a8 <line:765:3, col:37> 'int' '='
|   | |-DeclRefExpr 0x557079bf6698 <col:3> 'int' lvalue Var 0x557079bef978 'y' 'int'
|   | `-ConditionalOperator 0x557079bf6778 <col:7, col:37> 'int'
|   |   |-ImplicitCastExpr 0x557079bf6730 <col:7> 'int' <IntegralCast>
|   |   | `-ImplicitCastExpr 0x557079bf6718 <col:7> '_Bool' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x557079bf66b8 <col:7> '_Bool' lvalue Var 0x557079befa10 'y$flush_delayed' '_Bool'
|   |   |-ImplicitCastExpr 0x557079bf6748 <col:25> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x557079bf66d8 <col:25> 'int' lvalue Var 0x557079befb00 'y$mem_tmp' 'int'
|   |   `-ImplicitCastExpr 0x557079bf6760 <col:37> 'int' <LValueToRValue>
|   |     `-DeclRefExpr 0x557079bf66f8 <col:37> 'int' lvalue Var 0x557079bef978 'y' 'int'
|   |-BinaryOperator 0x557079bf6840 <line:766:3, col:28> '_Bool' '='
|   | |-DeclRefExpr 0x557079bf67c8 <col:3> '_Bool' lvalue Var 0x557079befa10 'y$flush_delayed' '_Bool'
|   | `-CStyleCastExpr 0x557079bf6818 <col:21, col:28> '_Bool' <IntegralToBoolean>
|   |   `-IntegerLiteral 0x557079bf67e8 <col:28> 'int' 0
|   |-CallExpr 0x557079bf6898 <line:767:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x557079bf6880 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x557079bf6860 <col:3> 'void ()' Function 0x557079b96060 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x557079bf68f0 <line:768:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x557079bf68d8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x557079bf68b8 <col:3> 'void ()' Function 0x557079b95fa0 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x557079bf6968 <line:769:3, col:25> 'int' '='
|   | |-DeclRefExpr 0x557079bf6910 <col:3> 'int' lvalue Var 0x557079bef648 '__unbuffered_p1_EBX' 'int'
|   | `-ImplicitCastExpr 0x557079bf6950 <col:25> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x557079bf6930 <col:25> 'int' lvalue Var 0x557079bf01b8 'z' 'int'
|   |-CallExpr 0x557079bf69c0 <line:770:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x557079bf69a8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x557079bf6988 <col:3> 'void ()' Function 0x557079b96060 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x557079bf6a18 <line:771:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x557079bf6a00 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x557079bf69e0 <col:3> 'void ()' Function 0x557079b95fa0 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x557079bf6d18 <line:772:3, col:103> 'int' '='
|   | |-DeclRefExpr 0x557079bf6a38 <col:3> 'int' lvalue Var 0x557079bef978 'y' 'int'
|   | `-ConditionalOperator 0x557079bf6ce8 <col:7, col:103> 'int'
|   |   |-BinaryOperator 0x557079bf6af8 <col:7, col:25> 'int' '&&'
|   |   | |-ImplicitCastExpr 0x557079bf6ab0 <col:7> 'int' <IntegralCast>
|   |   | | `-ImplicitCastExpr 0x557079bf6a98 <col:7> '_Bool' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x557079bf6a58 <col:7> '_Bool' lvalue Var 0x557079beffc0 'y$w_buff0_used' '_Bool'
|   |   | `-ImplicitCastExpr 0x557079bf6ae0 <col:25> 'int' <IntegralCast>
|   |   |   `-ImplicitCastExpr 0x557079bf6ac8 <col:25> '_Bool' <LValueToRValue>
|   |   |     `-DeclRefExpr 0x557079bf6a78 <col:25> '_Bool' lvalue Var 0x557079befc68 'y$r_buff0_thd2' '_Bool'
|   |   |-ImplicitCastExpr 0x557079bf6cd0 <col:42> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x557079bf6b18 <col:42> 'int' lvalue Var 0x557079beff48 'y$w_buff0' 'int'
|   |   `-ParenExpr 0x557079bf6cb0 <col:54, col:103> 'int'
|   |     `-ConditionalOperator 0x557079bf6c80 <col:55, col:102> 'int'
|   |       |-BinaryOperator 0x557079bf6bf0 <col:55, col:73> 'int' '&&'
|   |       | |-ImplicitCastExpr 0x557079bf6ba8 <col:55> 'int' <IntegralCast>
|   |       | | `-ImplicitCastExpr 0x557079bf6b90 <col:55> '_Bool' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x557079bf6b38 <col:55> '_Bool' lvalue Var 0x557079bf00b8 'y$w_buff1_used' '_Bool'
|   |       | `-ImplicitCastExpr 0x557079bf6bd8 <col:73> 'int' <IntegralCast>
|   |       |   `-ImplicitCastExpr 0x557079bf6bc0 <col:73> '_Bool' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x557079bf6b70 <col:73> '_Bool' lvalue Var 0x557079befdd0 'y$r_buff1_thd2' '_Bool'
|   |       |-ImplicitCastExpr 0x557079bf6c50 <col:90> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x557079bf6c10 <col:90> 'int' lvalue Var 0x557079bf0040 'y$w_buff1' 'int'
|   |       `-ImplicitCastExpr 0x557079bf6c68 <col:102> 'int' <LValueToRValue>
|   |         `-DeclRefExpr 0x557079bf6c30 <col:102> 'int' lvalue Var 0x557079bef978 'y' 'int'
|   |-BinaryOperator 0x557079bf6f20 <line:773:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x557079bf6d38 <col:3> '_Bool' lvalue Var 0x557079beffc0 'y$w_buff0_used' '_Bool'
|   | `-ImplicitCastExpr 0x557079bf6f08 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x557079bf6ed8 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x557079bf6df8 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x557079bf6db0 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x557079bf6d98 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x557079bf6d58 <col:20> '_Bool' lvalue Var 0x557079beffc0 'y$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x557079bf6de0 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x557079bf6dc8 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x557079bf6d78 <col:38> '_Bool' lvalue Var 0x557079befc68 'y$r_buff0_thd2' '_Bool'
|   |     |-ImplicitCastExpr 0x557079bf6e90 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x557079bf6e48 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x557079bf6e18 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x557079bf6ec0 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x557079bf6ea8 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x557079bf6e70 <col:66> '_Bool' lvalue Var 0x557079beffc0 'y$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x557079bf7208 <line:774:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x557079bf6f40 <col:3> '_Bool' lvalue Var 0x557079bf00b8 'y$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x557079bf71f0 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x557079bf71c0 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x557079bf70e0 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x557079bf7000 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x557079bf6fb8 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x557079bf6fa0 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x557079bf6f60 <col:20> '_Bool' lvalue Var 0x557079beffc0 'y$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x557079bf6fe8 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x557079bf6fd0 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x557079bf6f80 <col:38> '_Bool' lvalue Var 0x557079befc68 'y$r_buff0_thd2' '_Bool'
|   |     | `-BinaryOperator 0x557079bf70c0 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x557079bf7078 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x557079bf7060 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x557079bf7020 <col:56> '_Bool' lvalue Var 0x557079bf00b8 'y$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x557079bf70a8 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x557079bf7090 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x557079bf7040 <col:74> '_Bool' lvalue Var 0x557079befdd0 'y$r_buff1_thd2' '_Bool'
|   |     |-ImplicitCastExpr 0x557079bf7178 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x557079bf7130 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x557079bf7100 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x557079bf71a8 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x557079bf7190 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x557079bf7158 <col:102> '_Bool' lvalue Var 0x557079bf00b8 'y$w_buff1_used' '_Bool'
|   |-BinaryOperator 0x557079bf7410 <line:775:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x557079bf7228 <col:3> '_Bool' lvalue Var 0x557079befc68 'y$r_buff0_thd2' '_Bool'
|   | `-ImplicitCastExpr 0x557079bf73f8 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x557079bf73c8 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x557079bf72e8 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x557079bf72a0 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x557079bf7288 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x557079bf7248 <col:20> '_Bool' lvalue Var 0x557079beffc0 'y$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x557079bf72d0 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x557079bf72b8 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x557079bf7268 <col:38> '_Bool' lvalue Var 0x557079befc68 'y$r_buff0_thd2' '_Bool'
|   |     |-ImplicitCastExpr 0x557079bf7380 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x557079bf7338 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x557079bf7308 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x557079bf73b0 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x557079bf7398 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x557079bf7360 <col:66> '_Bool' lvalue Var 0x557079befc68 'y$r_buff0_thd2' '_Bool'
|   |-BinaryOperator 0x557079bf76f8 <line:776:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x557079bf7430 <col:3> '_Bool' lvalue Var 0x557079befdd0 'y$r_buff1_thd2' '_Bool'
|   | `-ImplicitCastExpr 0x557079bf76e0 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x557079bf76b0 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x557079bf75d0 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x557079bf74f0 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x557079bf74a8 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x557079bf7490 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x557079bf7450 <col:20> '_Bool' lvalue Var 0x557079beffc0 'y$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x557079bf74d8 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x557079bf74c0 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x557079bf7470 <col:38> '_Bool' lvalue Var 0x557079befc68 'y$r_buff0_thd2' '_Bool'
|   |     | `-BinaryOperator 0x557079bf75b0 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x557079bf7568 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x557079bf7550 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x557079bf7510 <col:56> '_Bool' lvalue Var 0x557079bf00b8 'y$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x557079bf7598 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x557079bf7580 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x557079bf7530 <col:74> '_Bool' lvalue Var 0x557079befdd0 'y$r_buff1_thd2' '_Bool'
|   |     |-ImplicitCastExpr 0x557079bf7668 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x557079bf7620 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x557079bf75f0 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x557079bf7698 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x557079bf7680 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x557079bf7648 <col:102> '_Bool' lvalue Var 0x557079befdd0 'y$r_buff1_thd2' '_Bool'
|   |-CallExpr 0x557079bf7750 <line:777:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x557079bf7738 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x557079bf7718 <col:3> 'void ()' Function 0x557079b96060 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x557079bf77a8 <line:778:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x557079bf7790 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x557079bf7770 <col:3> 'void ()' Function 0x557079b95fa0 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x557079bf7860 <line:779:3, col:41> 'int' '='
|   | |-DeclRefExpr 0x557079bf77c8 <col:3> 'int' lvalue Var 0x557079bef1c8 '__unbuffered_cnt' 'int'
|   | `-BinaryOperator 0x557079bf7840 <col:22, col:41> 'int' '+'
|   |   |-ImplicitCastExpr 0x557079bf7828 <col:22> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x557079bf77e8 <col:22> 'int' lvalue Var 0x557079bef1c8 '__unbuffered_cnt' 'int'
|   |   `-IntegerLiteral 0x557079bf7808 <col:41> 'int' 1
|   |-CallExpr 0x557079bf78b8 <line:780:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x557079bf78a0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x557079bf7880 <col:3> 'void ()' Function 0x557079b96060 '__VERIFIER_atomic_end' 'void ()'
|   `-ReturnStmt 0x557079bf7930 <line:781:3, col:36>
|     `-CallExpr 0x557079bf7910 <col:10, col:36> 'void *'
|       `-ImplicitCastExpr 0x557079bf78f8 <col:10> 'void *(*)(void)' <FunctionToPointerDecay>
|         `-DeclRefExpr 0x557079bf78d8 <col:10> 'void *(void)' Function 0x557079b95ab8 '__VERIFIER_nondet_pointer' 'void *(void)'
|-FunctionDecl 0x557079bf7ab8 prev 0x557079beef10 <line:783:1, line:785:1> line:783:6 fence 'void ()'
| `-CompoundStmt 0x557079bf7b58 <line:784:1, line:785:1>
|-FunctionDecl 0x557079bf7ba0 prev 0x557079beefd0 <line:786:1, line:788:1> line:786:6 isync 'void ()'
| `-CompoundStmt 0x557079bf7c40 <line:787:1, line:788:1>
|-FunctionDecl 0x557079bf7c70 prev 0x557079bef090 <line:789:1, line:791:1> line:789:6 lwfence 'void ()'
| `-CompoundStmt 0x557079bf7d10 <line:790:1, line:791:1>
`-FunctionDecl 0x557079bf7d78 <line:792:1, line:814:1> line:792:5 main 'int ()'
  `-CompoundStmt 0x557079bf97c0 <line:793:1, line:814:1>
    |-DeclStmt 0x557079bf7e90 <line:794:3, col:17>
    | `-VarDecl 0x557079bf7e28 <col:3, col:13> col:13 used t253 'pthread_t':'unsigned long'
    |-CallExpr 0x557079bf8098 <line:795:3, col:53> 'int'
    | |-ImplicitCastExpr 0x557079bf8080 <col:3> 'int (*)(pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x557079bf7ea8 <col:3> 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' Function 0x557079bd65b8 'pthread_create' 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)'
    | |-UnaryOperator 0x557079bf7ee8 <col:18, col:19> 'pthread_t *' prefix '&' cannot overflow
    | | `-DeclRefExpr 0x557079bf7ec8 <col:19> 'pthread_t':'unsigned long' lvalue Var 0x557079bf7e28 't253' 'pthread_t':'unsigned long'
    | |-ImplicitCastExpr 0x557079bf80d8 <col:25, col:35> 'const pthread_attr_t *' <NullToPointer>
    | | `-ParenExpr 0x557079bf7f60 <col:25, col:35> 'void *'
    | |   `-CStyleCastExpr 0x557079bf7f38 <col:26, col:34> 'void *' <NullToPointer>
    | |     `-IntegerLiteral 0x557079bf7f00 <col:34> 'int' 0
    | |-ImplicitCastExpr 0x557079bf80f0 <col:38> 'void *(*)(void *)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x557079bf7f80 <col:38> 'void *(void *)' Function 0x557079bf03e0 'P0' 'void *(void *)'
    | `-ParenExpr 0x557079bf8000 <col:42, col:52> 'void *'
    |   `-CStyleCastExpr 0x557079bf7fd8 <col:43, col:51> 'void *' <NullToPointer>
    |     `-IntegerLiteral 0x557079bf7fa0 <col:51> 'int' 0
    |-DeclStmt 0x557079bf8180 <line:796:3, col:17>
    | `-VarDecl 0x557079bf8118 <col:3, col:13> col:13 used t254 'pthread_t':'unsigned long'
    |-CallExpr 0x557079bf8328 <line:797:3, col:53> 'int'
    | |-ImplicitCastExpr 0x557079bf8310 <col:3> 'int (*)(pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x557079bf8198 <col:3> 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' Function 0x557079bd65b8 'pthread_create' 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)'
    | |-UnaryOperator 0x557079bf81d8 <col:18, col:19> 'pthread_t *' prefix '&' cannot overflow
    | | `-DeclRefExpr 0x557079bf81b8 <col:19> 'pthread_t':'unsigned long' lvalue Var 0x557079bf8118 't254' 'pthread_t':'unsigned long'
    | |-ImplicitCastExpr 0x557079bf8368 <col:25, col:35> 'const pthread_attr_t *' <NullToPointer>
    | | `-ParenExpr 0x557079bf8250 <col:25, col:35> 'void *'
    | |   `-CStyleCastExpr 0x557079bf8228 <col:26, col:34> 'void *' <NullToPointer>
    | |     `-IntegerLiteral 0x557079bf81f0 <col:34> 'int' 0
    | |-ImplicitCastExpr 0x557079bf8380 <col:38> 'void *(*)(void *)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x557079bf8270 <col:38> 'void *(void *)' Function 0x557079bf3750 'P1' 'void *(void *)'
    | `-ParenExpr 0x557079bf82f0 <col:42, col:52> 'void *'
    |   `-CStyleCastExpr 0x557079bf82c8 <col:43, col:51> 'void *' <NullToPointer>
    |     `-IntegerLiteral 0x557079bf8290 <col:51> 'int' 0
    |-CallExpr 0x557079bf83d0 <line:798:3, col:27> 'void'
    | `-ImplicitCastExpr 0x557079bf83b8 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x557079bf8398 <col:3> 'void ()' Function 0x557079b95fa0 '__VERIFIER_atomic_begin' 'void ()'
    |-BinaryOperator 0x557079bf84a0 <line:799:3, col:41> '_Bool' '='
    | |-DeclRefExpr 0x557079bf83f0 <col:3> '_Bool' lvalue Var 0x557079bef6e0 'main$tmp_guard0' '_Bool'
    | `-ImplicitCastExpr 0x557079bf8488 <col:21, col:41> '_Bool' <IntegralToBoolean>
    |   `-BinaryOperator 0x557079bf8468 <col:21, col:41> 'int' '=='
    |     |-ImplicitCastExpr 0x557079bf8450 <col:21> 'int' <LValueToRValue>
    |     | `-DeclRefExpr 0x557079bf8410 <col:21> 'int' lvalue Var 0x557079bef1c8 '__unbuffered_cnt' 'int'
    |     `-IntegerLiteral 0x557079bf8430 <col:41> 'int' 2
    |-CallExpr 0x557079bf84f8 <line:800:3, col:25> 'void'
    | `-ImplicitCastExpr 0x557079bf84e0 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x557079bf84c0 <col:3> 'void ()' Function 0x557079b96060 '__VERIFIER_atomic_end' 'void ()'
    |-CallExpr 0x557079bf8570 <line:801:3, col:36> 'void'
    | |-ImplicitCastExpr 0x557079bf8558 <col:3> 'void (*)(int)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x557079bf8518 <col:3> 'void (int)' Function 0x557079b95940 '__VERIFIER_assume' 'void (int)'
    | `-ImplicitCastExpr 0x557079bf85b0 <col:21> 'int' <IntegralCast>
    |   `-ImplicitCastExpr 0x557079bf8598 <col:21> '_Bool' <LValueToRValue>
    |     `-DeclRefExpr 0x557079bf8538 <col:21> '_Bool' lvalue Var 0x557079bef6e0 'main$tmp_guard0' '_Bool'
    |-CallExpr 0x557079bf8600 <line:802:3, col:27> 'void'
    | `-ImplicitCastExpr 0x557079bf85e8 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x557079bf85c8 <col:3> 'void ()' Function 0x557079b95fa0 '__VERIFIER_atomic_begin' 'void ()'
    |-BinaryOperator 0x557079bf88e8 <line:803:3, col:103> 'int' '='
    | |-DeclRefExpr 0x557079bf8620 <col:3> 'int' lvalue Var 0x557079bef978 'y' 'int'
    | `-ConditionalOperator 0x557079bf88b8 <col:7, col:103> 'int'
    |   |-BinaryOperator 0x557079bf86e0 <col:7, col:25> 'int' '&&'
    |   | |-ImplicitCastExpr 0x557079bf8698 <col:7> 'int' <IntegralCast>
    |   | | `-ImplicitCastExpr 0x557079bf8680 <col:7> '_Bool' <LValueToRValue>
    |   | |   `-DeclRefExpr 0x557079bf8640 <col:7> '_Bool' lvalue Var 0x557079beffc0 'y$w_buff0_used' '_Bool'
    |   | `-ImplicitCastExpr 0x557079bf86c8 <col:25> 'int' <IntegralCast>
    |   |   `-ImplicitCastExpr 0x557079bf86b0 <col:25> '_Bool' <LValueToRValue>
    |   |     `-DeclRefExpr 0x557079bf8660 <col:25> '_Bool' lvalue Var 0x557079befb78 'y$r_buff0_thd0' '_Bool'
    |   |-ImplicitCastExpr 0x557079bf88a0 <col:42> 'int' <LValueToRValue>
    |   | `-DeclRefExpr 0x557079bf8700 <col:42> 'int' lvalue Var 0x557079beff48 'y$w_buff0' 'int'
    |   `-ParenExpr 0x557079bf8880 <col:54, col:103> 'int'
    |     `-ConditionalOperator 0x557079bf8850 <col:55, col:102> 'int'
    |       |-BinaryOperator 0x557079bf87c0 <col:55, col:73> 'int' '&&'
    |       | |-ImplicitCastExpr 0x557079bf8778 <col:55> 'int' <IntegralCast>
    |       | | `-ImplicitCastExpr 0x557079bf8760 <col:55> '_Bool' <LValueToRValue>
    |       | |   `-DeclRefExpr 0x557079bf8720 <col:55> '_Bool' lvalue Var 0x557079bf00b8 'y$w_buff1_used' '_Bool'
    |       | `-ImplicitCastExpr 0x557079bf87a8 <col:73> 'int' <IntegralCast>
    |       |   `-ImplicitCastExpr 0x557079bf8790 <col:73> '_Bool' <LValueToRValue>
    |       |     `-DeclRefExpr 0x557079bf8740 <col:73> '_Bool' lvalue Var 0x557079befce0 'y$r_buff1_thd0' '_Bool'
    |       |-ImplicitCastExpr 0x557079bf8820 <col:90> 'int' <LValueToRValue>
    |       | `-DeclRefExpr 0x557079bf87e0 <col:90> 'int' lvalue Var 0x557079bf0040 'y$w_buff1' 'int'
    |       `-ImplicitCastExpr 0x557079bf8838 <col:102> 'int' <LValueToRValue>
    |         `-DeclRefExpr 0x557079bf8800 <col:102> 'int' lvalue Var 0x557079bef978 'y' 'int'
    |-BinaryOperator 0x557079bf8af0 <line:804:3, col:66> '_Bool' '='
    | |-DeclRefExpr 0x557079bf8908 <col:3> '_Bool' lvalue Var 0x557079beffc0 'y$w_buff0_used' '_Bool'
    | `-ImplicitCastExpr 0x557079bf8ad8 <col:20, col:66> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x557079bf8aa8 <col:20, col:66> 'int'
    |     |-BinaryOperator 0x557079bf89c8 <col:20, col:38> 'int' '&&'
    |     | |-ImplicitCastExpr 0x557079bf8980 <col:20> 'int' <IntegralCast>
    |     | | `-ImplicitCastExpr 0x557079bf8968 <col:20> '_Bool' <LValueToRValue>
    |     | |   `-DeclRefExpr 0x557079bf8928 <col:20> '_Bool' lvalue Var 0x557079beffc0 'y$w_buff0_used' '_Bool'
    |     | `-ImplicitCastExpr 0x557079bf89b0 <col:38> 'int' <IntegralCast>
    |     |   `-ImplicitCastExpr 0x557079bf8998 <col:38> '_Bool' <LValueToRValue>
    |     |     `-DeclRefExpr 0x557079bf8948 <col:38> '_Bool' lvalue Var 0x557079befb78 'y$r_buff0_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x557079bf8a60 <col:55, col:62> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x557079bf8a18 <col:55, col:62> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x557079bf89e8 <col:62> 'int' 0
    |     `-ImplicitCastExpr 0x557079bf8a90 <col:66> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x557079bf8a78 <col:66> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x557079bf8a40 <col:66> '_Bool' lvalue Var 0x557079beffc0 'y$w_buff0_used' '_Bool'
    |-BinaryOperator 0x557079bf8df8 <line:805:3, col:102> '_Bool' '='
    | |-DeclRefExpr 0x557079bf8b10 <col:3> '_Bool' lvalue Var 0x557079bf00b8 'y$w_buff1_used' '_Bool'
    | `-ImplicitCastExpr 0x557079bf8de0 <col:20, col:102> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x557079bf8db0 <col:20, col:102> 'int'
    |     |-BinaryOperator 0x557079bf8cd0 <col:20, col:74> 'int' '||'
    |     | |-BinaryOperator 0x557079bf8bf0 <col:20, col:38> 'int' '&&'
    |     | | |-ImplicitCastExpr 0x557079bf8ba8 <col:20> 'int' <IntegralCast>
    |     | | | `-ImplicitCastExpr 0x557079bf8b90 <col:20> '_Bool' <LValueToRValue>
    |     | | |   `-DeclRefExpr 0x557079bf8b30 <col:20> '_Bool' lvalue Var 0x557079beffc0 'y$w_buff0_used' '_Bool'
    |     | | `-ImplicitCastExpr 0x557079bf8bd8 <col:38> 'int' <IntegralCast>
    |     | |   `-ImplicitCastExpr 0x557079bf8bc0 <col:38> '_Bool' <LValueToRValue>
    |     | |     `-DeclRefExpr 0x557079bf8b50 <col:38> '_Bool' lvalue Var 0x557079befb78 'y$r_buff0_thd0' '_Bool'
    |     | `-BinaryOperator 0x557079bf8cb0 <col:56, col:74> 'int' '&&'
    |     |   |-ImplicitCastExpr 0x557079bf8c68 <col:56> 'int' <IntegralCast>
    |     |   | `-ImplicitCastExpr 0x557079bf8c50 <col:56> '_Bool' <LValueToRValue>
    |     |   |   `-DeclRefExpr 0x557079bf8c10 <col:56> '_Bool' lvalue Var 0x557079bf00b8 'y$w_buff1_used' '_Bool'
    |     |   `-ImplicitCastExpr 0x557079bf8c98 <col:74> 'int' <IntegralCast>
    |     |     `-ImplicitCastExpr 0x557079bf8c80 <col:74> '_Bool' <LValueToRValue>
    |     |       `-DeclRefExpr 0x557079bf8c30 <col:74> '_Bool' lvalue Var 0x557079befce0 'y$r_buff1_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x557079bf8d68 <col:91, col:98> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x557079bf8d20 <col:91, col:98> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x557079bf8cf0 <col:98> 'int' 0
    |     `-ImplicitCastExpr 0x557079bf8d98 <col:102> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x557079bf8d80 <col:102> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x557079bf8d48 <col:102> '_Bool' lvalue Var 0x557079bf00b8 'y$w_buff1_used' '_Bool'
    |-BinaryOperator 0x557079bf9000 <line:806:3, col:66> '_Bool' '='
    | |-DeclRefExpr 0x557079bf8e18 <col:3> '_Bool' lvalue Var 0x557079befb78 'y$r_buff0_thd0' '_Bool'
    | `-ImplicitCastExpr 0x557079bf8fe8 <col:20, col:66> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x557079bf8fb8 <col:20, col:66> 'int'
    |     |-BinaryOperator 0x557079bf8ed8 <col:20, col:38> 'int' '&&'
    |     | |-ImplicitCastExpr 0x557079bf8e90 <col:20> 'int' <IntegralCast>
    |     | | `-ImplicitCastExpr 0x557079bf8e78 <col:20> '_Bool' <LValueToRValue>
    |     | |   `-DeclRefExpr 0x557079bf8e38 <col:20> '_Bool' lvalue Var 0x557079beffc0 'y$w_buff0_used' '_Bool'
    |     | `-ImplicitCastExpr 0x557079bf8ec0 <col:38> 'int' <IntegralCast>
    |     |   `-ImplicitCastExpr 0x557079bf8ea8 <col:38> '_Bool' <LValueToRValue>
    |     |     `-DeclRefExpr 0x557079bf8e58 <col:38> '_Bool' lvalue Var 0x557079befb78 'y$r_buff0_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x557079bf8f70 <col:55, col:62> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x557079bf8f28 <col:55, col:62> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x557079bf8ef8 <col:62> 'int' 0
    |     `-ImplicitCastExpr 0x557079bf8fa0 <col:66> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x557079bf8f88 <col:66> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x557079bf8f50 <col:66> '_Bool' lvalue Var 0x557079befb78 'y$r_buff0_thd0' '_Bool'
    |-BinaryOperator 0x557079bf92e8 <line:807:3, col:102> '_Bool' '='
    | |-DeclRefExpr 0x557079bf9020 <col:3> '_Bool' lvalue Var 0x557079befce0 'y$r_buff1_thd0' '_Bool'
    | `-ImplicitCastExpr 0x557079bf92d0 <col:20, col:102> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x557079bf92a0 <col:20, col:102> 'int'
    |     |-BinaryOperator 0x557079bf91c0 <col:20, col:74> 'int' '||'
    |     | |-BinaryOperator 0x557079bf90e0 <col:20, col:38> 'int' '&&'
    |     | | |-ImplicitCastExpr 0x557079bf9098 <col:20> 'int' <IntegralCast>
    |     | | | `-ImplicitCastExpr 0x557079bf9080 <col:20> '_Bool' <LValueToRValue>
    |     | | |   `-DeclRefExpr 0x557079bf9040 <col:20> '_Bool' lvalue Var 0x557079beffc0 'y$w_buff0_used' '_Bool'
    |     | | `-ImplicitCastExpr 0x557079bf90c8 <col:38> 'int' <IntegralCast>
    |     | |   `-ImplicitCastExpr 0x557079bf90b0 <col:38> '_Bool' <LValueToRValue>
    |     | |     `-DeclRefExpr 0x557079bf9060 <col:38> '_Bool' lvalue Var 0x557079befb78 'y$r_buff0_thd0' '_Bool'
    |     | `-BinaryOperator 0x557079bf91a0 <col:56, col:74> 'int' '&&'
    |     |   |-ImplicitCastExpr 0x557079bf9158 <col:56> 'int' <IntegralCast>
    |     |   | `-ImplicitCastExpr 0x557079bf9140 <col:56> '_Bool' <LValueToRValue>
    |     |   |   `-DeclRefExpr 0x557079bf9100 <col:56> '_Bool' lvalue Var 0x557079bf00b8 'y$w_buff1_used' '_Bool'
    |     |   `-ImplicitCastExpr 0x557079bf9188 <col:74> 'int' <IntegralCast>
    |     |     `-ImplicitCastExpr 0x557079bf9170 <col:74> '_Bool' <LValueToRValue>
    |     |       `-DeclRefExpr 0x557079bf9120 <col:74> '_Bool' lvalue Var 0x557079befce0 'y$r_buff1_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x557079bf9258 <col:91, col:98> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x557079bf9210 <col:91, col:98> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x557079bf91e0 <col:98> 'int' 0
    |     `-ImplicitCastExpr 0x557079bf9288 <col:102> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x557079bf9270 <col:102> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x557079bf9238 <col:102> '_Bool' lvalue Var 0x557079befce0 'y$r_buff1_thd0' '_Bool'
    |-CallExpr 0x557079bf9340 <line:808:3, col:25> 'void'
    | `-ImplicitCastExpr 0x557079bf9328 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x557079bf9308 <col:3> 'void ()' Function 0x557079b96060 '__VERIFIER_atomic_end' 'void ()'
    |-CallExpr 0x557079bf9398 <line:809:3, col:27> 'void'
    | `-ImplicitCastExpr 0x557079bf9380 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x557079bf9360 <col:3> 'void ()' Function 0x557079b95fa0 '__VERIFIER_atomic_begin' 'void ()'
    |-BinaryOperator 0x557079bf9668 <line:810:3, col:131> '_Bool' '='
    | |-DeclRefExpr 0x557079bf93b8 <col:3> '_Bool' lvalue Var 0x557079bef758 'main$tmp_guard1' '_Bool'
    | `-ImplicitCastExpr 0x557079bf9650 <col:21, col:131> '_Bool' <IntegralToBoolean>
    |   `-UnaryOperator 0x557079bf9638 <col:21, col:131> 'int' prefix '!' cannot overflow
    |     `-ParenExpr 0x557079bf9618 <col:22, col:131> 'int'
    |       `-BinaryOperator 0x557079bf95f8 <col:23, col:130> 'int' '&&'
    |         |-BinaryOperator 0x557079bf9560 <col:23, col:102> 'int' '&&'
    |         | |-BinaryOperator 0x557079bf94c8 <col:23, col:74> 'int' '&&'
    |         | | |-BinaryOperator 0x557079bf9430 <col:23, col:46> 'int' '=='
    |         | | | |-ImplicitCastExpr 0x557079bf9418 <col:23> 'int' <LValueToRValue>
    |         | | | | `-DeclRefExpr 0x557079bf93d8 <col:23> 'int' lvalue Var 0x557079bef2e8 '__unbuffered_p0_EAX' 'int'
    |         | | | `-IntegerLiteral 0x557079bf93f8 <col:46> 'int' 1
    |         | | `-BinaryOperator 0x557079bf94a8 <col:51, col:74> 'int' '=='
    |         | |   |-ImplicitCastExpr 0x557079bf9490 <col:51> 'int' <LValueToRValue>
    |         | |   | `-DeclRefExpr 0x557079bf9450 <col:51> 'int' lvalue Var 0x557079bef408 '__unbuffered_p0_EBX' 'int'
    |         | |   `-IntegerLiteral 0x557079bf9470 <col:74> 'int' 0
    |         | `-BinaryOperator 0x557079bf9540 <col:79, col:102> 'int' '=='
    |         |   |-ImplicitCastExpr 0x557079bf9528 <col:79> 'int' <LValueToRValue>
    |         |   | `-DeclRefExpr 0x557079bf94e8 <col:79> 'int' lvalue Var 0x557079bef528 '__unbuffered_p1_EAX' 'int'
    |         |   `-IntegerLiteral 0x557079bf9508 <col:102> 'int' 1
    |         `-BinaryOperator 0x557079bf95d8 <col:107, col:130> 'int' '=='
    |           |-ImplicitCastExpr 0x557079bf95c0 <col:107> 'int' <LValueToRValue>
    |           | `-DeclRefExpr 0x557079bf9580 <col:107> 'int' lvalue Var 0x557079bef648 '__unbuffered_p1_EBX' 'int'
    |           `-IntegerLiteral 0x557079bf95a0 <col:130> 'int' 0
    |-CallExpr 0x557079bf96c0 <line:811:3, col:25> 'void'
    | `-ImplicitCastExpr 0x557079bf96a8 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x557079bf9688 <col:3> 'void ()' Function 0x557079b96060 '__VERIFIER_atomic_end' 'void ()'
    |-CallExpr 0x557079bf9738 <line:812:3, col:36> 'void'
    | |-ImplicitCastExpr 0x557079bf9720 <col:3> 'void (*)(int)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x557079bf96e0 <col:3> 'void (int)' Function 0x557079b95d28 '__VERIFIER_assert' 'void (int)'
    | `-ImplicitCastExpr 0x557079bf9778 <col:21> 'int' <IntegralCast>
    |   `-ImplicitCastExpr 0x557079bf9760 <col:21> '_Bool' <LValueToRValue>
    |     `-DeclRefExpr 0x557079bf9700 <col:21> '_Bool' lvalue Var 0x557079bef758 'main$tmp_guard1' '_Bool'
    `-ReturnStmt 0x557079bf97b0 <line:813:3, col:10>
      `-IntegerLiteral 0x557079bf9790 <col:10> 'int' 0
