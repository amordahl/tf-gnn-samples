TranslationUnitDecl 0x559838967e18 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x5598389686d8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x5598389683b0 '__int128'
|-TypedefDecl 0x559838968748 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x5598389683d0 'unsigned __int128'
|-TypedefDecl 0x559838968a50 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x559838968820 'struct __NSConstantString_tag'
|   `-Record 0x5598389687a0 '__NSConstantString_tag'
|-TypedefDecl 0x559838968af8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x559838968ab0 'char *'
|   `-BuiltinType 0x559838967eb0 'char'
|-TypedefDecl 0x5598389a7650 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'struct __va_list_tag [1]'
| `-ConstantArrayType 0x559838968d90 'struct __va_list_tag [1]' 1 
|   `-RecordType 0x559838968bd0 'struct __va_list_tag'
|     `-Record 0x559838968b50 '__va_list_tag'
|-FunctionDecl 0x5598389a7790 <./split_2/mix037_rmo.oepc_false-unreach-call.i:1:1, col:34> col:13 used __VERIFIER_assume 'void (int)' extern
| `-ParmVarDecl 0x5598389a76c0 <col:31> col:34 'int'
|-FunctionDecl 0x5598389a7958 <line:2:1, col:45> col:15 used __VERIFIER_nondet_pointer 'void *(void)' extern
|-FunctionDecl 0x5598389a7a80 <line:3:1, col:61> col:13 used __VERIFIER_error 'void () __attribute__((noreturn))' extern
|-FunctionDecl 0x5598389a7bc8 <line:4:1, col:99> col:6 used __VERIFIER_assert 'void (int)'
| |-ParmVarDecl 0x5598389a7b38 <col:24, col:28> col:28 used expression 'int'
| `-CompoundStmt 0x5598389a7df8 <col:40, col:99>
|   |-IfStmt 0x5598389a7dc8 <col:42, col:88>
|   | |-UnaryOperator 0x5598389a7ca8 <col:46, col:47> 'int' prefix '!' cannot overflow
|   | | `-ImplicitCastExpr 0x5598389a7c90 <col:47> 'int' <LValueToRValue>
|   | |   `-DeclRefExpr 0x5598389a7c70 <col:47> 'int' lvalue ParmVar 0x5598389a7b38 'expression' 'int'
|   | `-CompoundStmt 0x5598389a7db0 <col:59, col:88>
|   |   `-LabelStmt 0x5598389a7d98 <col:61, col:85> 'ERROR'
|   |     `-CallExpr 0x5598389a7d28 <col:68, col:85> 'void'
|   |       `-ImplicitCastExpr 0x5598389a7d10 <col:68> 'void (*)() __attribute__((noreturn))' <FunctionToPointerDecay>
|   |         `-DeclRefExpr 0x5598389a7cc0 <col:68> 'void () __attribute__((noreturn))' Function 0x5598389a7a80 '__VERIFIER_error' 'void () __attribute__((noreturn))'
|   |-NullStmt 0x5598389a7de0 <col:89>
|   `-ReturnStmt 0x5598389a7de8 <col:91>
|-FunctionDecl 0x5598389a7e40 <line:5:1, col:37> col:13 used __VERIFIER_atomic_begin 'void ()' extern
|-FunctionDecl 0x5598389a7f00 <line:6:1, col:35> col:13 used __VERIFIER_atomic_end 'void ()' extern
|-FunctionDecl 0x5598389a8280 <line:8:1, line:10:76> line:8:13 __assert_fail 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x5598389a7fb8 <col:28, col:40> col:40 __assertion 'const char *'
| |-ParmVarDecl 0x5598389a8038 <col:53, col:65> col:65 __file 'const char *'
| |-ParmVarDecl 0x5598389a80b8 <line:9:7, col:20> col:20 __line 'unsigned int'
| |-ParmVarDecl 0x5598389a8138 <col:28, col:40> col:40 __function 'const char *'
| `-NoThrowAttr 0x5598389a8340 <line:10:22>
|-FunctionDecl 0x5598389ce390 <line:11:1, line:13:76> line:11:13 __assert_perror_fail 'void (int, const char *, unsigned int, const char *) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x5598389a83b0 <col:35, col:39> col:39 __errnum 'int'
| |-ParmVarDecl 0x5598389a8430 <col:49, col:61> col:61 __file 'const char *'
| |-ParmVarDecl 0x5598389a84b0 <line:12:7, col:20> col:20 __line 'unsigned int'
| |-ParmVarDecl 0x5598389a8530 <col:28, col:40> col:40 __function 'const char *'
| `-NoThrowAttr 0x5598389ce450 <line:13:22>
|-FunctionDecl 0x5598389ce700 <line:14:1, line:15:76> line:14:13 __assert 'void (const char *, const char *, int) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x5598389ce4c0 <col:23, col:35> col:35 __assertion 'const char *'
| |-ParmVarDecl 0x5598389ce540 <col:48, col:60> col:60 __file 'const char *'
| |-ParmVarDecl 0x5598389ce5c0 <col:68, col:72> col:72 __line 'int'
| `-NoThrowAttr 0x5598389ce7b8 <line:15:22>
|-TypedefDecl 0x5598389ce828 <line:17:1, col:23> col:23 __u_char 'unsigned char'
| `-BuiltinType 0x559838967f70 'unsigned char'
|-TypedefDecl 0x5598389ce898 <line:18:1, col:28> col:28 __u_short 'unsigned short'
| `-BuiltinType 0x559838967f90 'unsigned short'
|-TypedefDecl 0x5598389ce908 <line:19:1, col:22> col:22 __u_int 'unsigned int'
| `-BuiltinType 0x559838967fb0 'unsigned int'
|-TypedefDecl 0x5598389ce978 <line:20:1, col:27> col:27 __u_long 'unsigned long'
| `-BuiltinType 0x559838967fd0 'unsigned long'
|-TypedefDecl 0x5598389ce9e8 <line:21:1, col:21> col:21 __int8_t 'signed char'
| `-BuiltinType 0x559838967ed0 'signed char'
|-TypedefDecl 0x5598389cea58 <line:22:1, col:23> col:23 __uint8_t 'unsigned char'
| `-BuiltinType 0x559838967f70 'unsigned char'
|-TypedefDecl 0x5598389ceac8 <line:23:1, col:26> col:26 __int16_t 'short'
| `-BuiltinType 0x559838967ef0 'short'
|-TypedefDecl 0x5598389ceb38 <line:24:1, col:28> col:28 __uint16_t 'unsigned short'
| `-BuiltinType 0x559838967f90 'unsigned short'
|-TypedefDecl 0x5598389ceba8 <line:25:1, col:20> col:20 __int32_t 'int'
| `-BuiltinType 0x559838967f10 'int'
|-TypedefDecl 0x5598389cec18 <line:26:1, col:22> col:22 __uint32_t 'unsigned int'
| `-BuiltinType 0x559838967fb0 'unsigned int'
|-TypedefDecl 0x5598389cec88 <line:27:1, col:25> col:25 __int64_t 'long'
| `-BuiltinType 0x559838967f30 'long'
|-TypedefDecl 0x5598389cecf8 <line:28:1, col:27> col:27 referenced __uint64_t 'unsigned long'
| `-BuiltinType 0x559838967fd0 'unsigned long'
|-TypedefDecl 0x5598389ced68 <line:29:1, col:18> col:18 referenced __quad_t 'long'
| `-BuiltinType 0x559838967f30 'long'
|-TypedefDecl 0x5598389cedd8 <line:30:1, col:27> col:27 __u_quad_t 'unsigned long'
| `-BuiltinType 0x559838967fd0 'unsigned long'
|-TypedefDecl 0x5598389cee48 <line:31:1, col:27> col:27 __dev_t 'unsigned long'
| `-BuiltinType 0x559838967fd0 'unsigned long'
|-TypedefDecl 0x5598389ceeb8 <line:32:1, col:22> col:22 __uid_t 'unsigned int'
| `-BuiltinType 0x559838967fb0 'unsigned int'
|-TypedefDecl 0x5598389cef28 <line:33:1, col:22> col:22 __gid_t 'unsigned int'
| `-BuiltinType 0x559838967fb0 'unsigned int'
|-TypedefDecl 0x5598389cef98 <line:34:1, col:27> col:27 __ino_t 'unsigned long'
| `-BuiltinType 0x559838967fd0 'unsigned long'
|-TypedefDecl 0x5598389cf008 <line:35:1, col:27> col:27 __ino64_t 'unsigned long'
| `-BuiltinType 0x559838967fd0 'unsigned long'
|-TypedefDecl 0x5598389cf078 <line:36:1, col:22> col:22 __mode_t 'unsigned int'
| `-BuiltinType 0x559838967fb0 'unsigned int'
|-TypedefDecl 0x5598389cf0e8 <line:37:1, col:27> col:27 __nlink_t 'unsigned long'
| `-BuiltinType 0x559838967fd0 'unsigned long'
|-TypedefDecl 0x5598389cf158 <line:38:1, col:18> col:18 __off_t 'long'
| `-BuiltinType 0x559838967f30 'long'
|-TypedefDecl 0x5598389cf1c8 <line:39:1, col:18> col:18 referenced __off64_t 'long'
| `-BuiltinType 0x559838967f30 'long'
|-TypedefDecl 0x5598389cf238 <line:40:1, col:13> col:13 referenced __pid_t 'int'
| `-BuiltinType 0x559838967f10 'int'
|-RecordDecl 0x5598389cf290 <line:41:9, col:32> col:9 struct definition
| `-FieldDecl 0x5598389cf408 <col:18, col:29> col:22 __val 'int [2]'
|-TypedefDecl 0x5598389cf4c0 <col:1, col:34> col:34 __fsid_t 'struct __fsid_t':'__fsid_t'
| `-ElaboratedType 0x5598389cf460 'struct __fsid_t' sugar
|   `-RecordType 0x5598389cf310 '__fsid_t'
|     `-Record 0x5598389cf290 ''
|-TypedefDecl 0x5598389cf548 <line:42:1, col:18> col:18 referenced __clock_t 'long'
| `-BuiltinType 0x559838967f30 'long'
|-TypedefDecl 0x5598389cf5b8 <line:43:1, col:27> col:27 __rlim_t 'unsigned long'
| `-BuiltinType 0x559838967fd0 'unsigned long'
|-TypedefDecl 0x5598389cf628 <line:44:1, col:27> col:27 __rlim64_t 'unsigned long'
| `-BuiltinType 0x559838967fd0 'unsigned long'
|-TypedefDecl 0x5598389cf698 <line:45:1, col:22> col:22 __id_t 'unsigned int'
| `-BuiltinType 0x559838967fb0 'unsigned int'
|-TypedefDecl 0x5598389cf708 <line:46:1, col:18> col:18 referenced __time_t 'long'
| `-BuiltinType 0x559838967f30 'long'
|-TypedefDecl 0x5598389cf778 <line:47:1, col:22> col:22 __useconds_t 'unsigned int'
| `-BuiltinType 0x559838967fb0 'unsigned int'
|-TypedefDecl 0x5598389cf7e8 <line:48:1, col:18> col:18 __suseconds_t 'long'
| `-BuiltinType 0x559838967f30 'long'
|-TypedefDecl 0x5598389cf858 <line:49:1, col:13> col:13 __daddr_t 'int'
| `-BuiltinType 0x559838967f10 'int'
|-TypedefDecl 0x5598389cf8c8 <line:50:1, col:13> col:13 __key_t 'int'
| `-BuiltinType 0x559838967f10 'int'
|-TypedefDecl 0x5598389cf938 <line:51:1, col:13> col:13 referenced __clockid_t 'int'
| `-BuiltinType 0x559838967f10 'int'
|-TypedefDecl 0x5598389cf9a8 <line:52:1, col:16> col:16 referenced __timer_t 'void *'
| `-PointerType 0x559838968630 'void *'
|   `-BuiltinType 0x559838967e70 'void'
|-TypedefDecl 0x5598389cfa18 <line:53:1, col:18> col:18 __blksize_t 'long'
| `-BuiltinType 0x559838967f30 'long'
|-TypedefDecl 0x5598389cfa88 <line:54:1, col:18> col:18 __blkcnt_t 'long'
| `-BuiltinType 0x559838967f30 'long'
|-TypedefDecl 0x5598389cfaf8 <line:55:1, col:18> col:18 __blkcnt64_t 'long'
| `-BuiltinType 0x559838967f30 'long'
|-TypedefDecl 0x5598389cfb68 <line:56:1, col:27> col:27 __fsblkcnt_t 'unsigned long'
| `-BuiltinType 0x559838967fd0 'unsigned long'
|-TypedefDecl 0x5598389cfbd8 <line:57:1, col:27> col:27 __fsblkcnt64_t 'unsigned long'
| `-BuiltinType 0x559838967fd0 'unsigned long'
|-TypedefDecl 0x5598389cfc48 <line:58:1, col:27> col:27 __fsfilcnt_t 'unsigned long'
| `-BuiltinType 0x559838967fd0 'unsigned long'
|-TypedefDecl 0x5598389cfcb8 <line:59:1, col:27> col:27 __fsfilcnt64_t 'unsigned long'
| `-BuiltinType 0x559838967fd0 'unsigned long'
|-TypedefDecl 0x5598389cfd28 <line:60:1, col:18> col:18 __fsword_t 'long'
| `-BuiltinType 0x559838967f30 'long'
|-TypedefDecl 0x5598389cfd98 <line:61:1, col:18> col:18 __ssize_t 'long'
| `-BuiltinType 0x559838967f30 'long'
|-TypedefDecl 0x5598389cfe08 <line:62:1, col:18> col:18 referenced __syscall_slong_t 'long'
| `-BuiltinType 0x559838967f30 'long'
|-TypedefDecl 0x5598389cfe78 <line:63:1, col:27> col:27 __syscall_ulong_t 'unsigned long'
| `-BuiltinType 0x559838967fd0 'unsigned long'
|-TypedefDecl 0x5598389cff08 <line:64:1, col:19> col:19 __loff_t '__off64_t':'long'
| `-TypedefType 0x5598389cfed0 '__off64_t' sugar
|   |-Typedef 0x5598389cf1c8 '__off64_t'
|   `-BuiltinType 0x559838967f30 'long'
|-TypedefDecl 0x5598389d0000 <line:65:1, col:19> col:19 __qaddr_t '__quad_t *'
| `-PointerType 0x5598389cffc0 '__quad_t *'
|   `-TypedefType 0x5598389cff60 '__quad_t' sugar
|     |-Typedef 0x5598389ced68 '__quad_t'
|     `-BuiltinType 0x559838967f30 'long'
|-TypedefDecl 0x5598389d0070 <line:66:1, col:15> col:15 __caddr_t 'char *'
| `-PointerType 0x559838968ab0 'char *'
|   `-BuiltinType 0x559838967eb0 'char'
|-TypedefDecl 0x5598389d00e0 <line:67:1, col:18> col:18 __intptr_t 'long'
| `-BuiltinType 0x559838967f30 'long'
|-TypedefDecl 0x5598389d0150 <line:68:1, col:22> col:22 __socklen_t 'unsigned int'
| `-BuiltinType 0x559838967fb0 'unsigned int'
|-FunctionDecl 0x5598389d0298 <line:69:1, line:73:1> line:70:1 __bswap_32 'unsigned int (unsigned int)' static inline
| |-ParmVarDecl 0x5598389d01c0 <col:13, col:26> col:26 used __bsx 'unsigned int'
| `-CompoundStmt 0x5598389d15e8 <line:71:1, line:73:1>
|   `-ReturnStmt 0x5598389d15d8 <line:72:3, col:34>
|     `-CallExpr 0x5598389d1598 <col:10, col:34> 'unsigned int'
|       |-ImplicitCastExpr 0x5598389d1580 <col:10> 'unsigned int (*)(unsigned int)' <BuiltinFnToFnPtr>
|       | `-DeclRefExpr 0x5598389d1510 <col:10> '<builtin fn type>' Function 0x5598389d1380 '__builtin_bswap32' 'unsigned int (unsigned int)'
|       `-ImplicitCastExpr 0x5598389d15c0 <col:29> 'unsigned int' <LValueToRValue>
|         `-DeclRefExpr 0x5598389d1530 <col:29> 'unsigned int' lvalue ParmVar 0x5598389d01c0 '__bsx' 'unsigned int'
|-FunctionDecl 0x5598389d1380 <col:10> col:10 implicit used __builtin_bswap32 'unsigned int (unsigned int)' extern
| |-ParmVarDecl 0x5598389d1420 <<invalid sloc>> <invalid sloc> 'unsigned int'
| |-NoThrowAttr 0x5598389d1490 <col:10> Implicit
| `-ConstAttr 0x5598389d14e8 <col:10> Implicit
|-FunctionDecl 0x5598389d1740 <line:74:1, line:78:1> line:75:1 __bswap_64 '__uint64_t (__uint64_t)' static inline
| |-ParmVarDecl 0x5598389d1638 <col:13, col:24> col:24 used __bsx '__uint64_t':'unsigned long'
| `-CompoundStmt 0x5598389d1a58 <line:76:1, line:78:1>
|   `-ReturnStmt 0x5598389d1a48 <line:77:3, col:34>
|     `-CallExpr 0x5598389d1a08 <col:10, col:34> 'unsigned long'
|       |-ImplicitCastExpr 0x5598389d19f0 <col:10> 'unsigned long (*)(unsigned long)' <BuiltinFnToFnPtr>
|       | `-DeclRefExpr 0x5598389d1978 <col:10> '<builtin fn type>' Function 0x5598389d17e8 '__builtin_bswap64' 'unsigned long (unsigned long)'
|       `-ImplicitCastExpr 0x5598389d1a30 <col:29> '__uint64_t':'unsigned long' <LValueToRValue>
|         `-DeclRefExpr 0x5598389d1998 <col:29> '__uint64_t':'unsigned long' lvalue ParmVar 0x5598389d1638 '__bsx' '__uint64_t':'unsigned long'
|-FunctionDecl 0x5598389d17e8 <col:10> col:10 implicit used __builtin_bswap64 'unsigned long (unsigned long)' extern
| |-ParmVarDecl 0x5598389d1888 <<invalid sloc>> <invalid sloc> 'unsigned long'
| |-NoThrowAttr 0x5598389d18f8 <col:10> Implicit
| `-ConstAttr 0x5598389d1950 <col:10> Implicit
|-TypedefDecl 0x5598389d1a88 <line:79:1, col:27> col:27 referenced size_t 'unsigned long'
| `-BuiltinType 0x559838967fd0 'unsigned long'
|-TypedefDecl 0x5598389d1b18 <line:81:1, col:18> col:18 referenced time_t '__time_t':'long'
| `-TypedefType 0x5598389d1ae0 '__time_t' sugar
|   |-Typedef 0x5598389cf708 '__time_t'
|   `-BuiltinType 0x559838967f30 'long'
|-RecordDecl 0x5598389d1b70 <line:84:1, line:88:3> line:84:8 struct timespec definition
| |-FieldDecl 0x5598389d1c28 <line:86:5, col:14> col:14 tv_sec '__time_t':'long'
| `-FieldDecl 0x5598389d1cb8 <line:87:5, col:23> col:23 tv_nsec '__syscall_slong_t':'long'
|-TypedefDecl 0x5598389d1d48 <line:89:1, col:17> col:17 referenced pid_t '__pid_t':'int'
| `-TypedefType 0x5598389d1d10 '__pid_t' sugar
|   |-Typedef 0x5598389cf238 '__pid_t'
|   `-BuiltinType 0x559838967f10 'int'
|-RecordDecl 0x5598389d1da0 <line:90:1, line:93:3> line:90:8 struct sched_param definition
| `-FieldDecl 0x5598389d1e60 <line:92:5, col:9> col:9 __sched_priority 'int'
|-RecordDecl 0x5598389d1eb0 <line:96:1, line:99:3> line:96:8 struct __sched_param definition
| `-FieldDecl 0x5598389d1f70 <line:98:5, col:9> col:9 __sched_priority 'int'
|-TypedefDecl 0x5598389d1fd8 <line:100:1, col:27> col:27 referenced __cpu_mask 'unsigned long'
| `-BuiltinType 0x559838967fd0 'unsigned long'
|-RecordDecl 0x5598389d2030 <line:101:9, line:104:1> line:101:9 struct definition
| `-FieldDecl 0x5598389d22c0 <line:103:3, col:53> col:14 __bits '__cpu_mask [64]'
|-TypedefDecl 0x5598389d33a0 <line:101:1, line:104:3> col:3 referenced cpu_set_t 'struct cpu_set_t':'cpu_set_t'
| `-ElaboratedType 0x5598389d2310 'struct cpu_set_t' sugar
|   `-RecordType 0x5598389d20b0 'cpu_set_t'
|     `-Record 0x5598389d2030 ''
|-FunctionDecl 0x5598389d3678 <line:106:1, line:107:42> line:106:12 __sched_cpucount 'int (size_t, const cpu_set_t *)' extern
| |-ParmVarDecl 0x5598389d3448 <col:30, col:37> col:37 __setsize 'size_t':'unsigned long'
| |-ParmVarDecl 0x5598389d3550 <col:48, col:65> col:65 __setp 'const cpu_set_t *'
| `-NoThrowAttr 0x5598389d3728 <line:107:19>
|-FunctionDecl 0x5598389d3900 <line:108:1, col:92> col:19 __sched_cpualloc 'cpu_set_t *(size_t)' extern
| |-ParmVarDecl 0x5598389d3790 <col:37, col:44> col:44 __count 'size_t':'unsigned long'
| `-NoThrowAttr 0x5598389d39a8 <col:69>
|-FunctionDecl 0x5598389d3b20 <line:109:1, col:87> col:13 __sched_cpufree 'void (cpu_set_t *)' extern
| |-ParmVarDecl 0x5598389d3a10 <col:30, col:41> col:41 __set 'cpu_set_t *'
| `-NoThrowAttr 0x5598389d3bc8 <col:64>
|-FunctionDecl 0x5598389d3e88 <line:112:1, line:113:45> line:112:12 sched_setparam 'int (__pid_t, const struct sched_param *)' extern
| |-ParmVarDecl 0x5598389d3c30 <col:28, col:36> col:36 __pid '__pid_t':'int'
| |-ParmVarDecl 0x5598389d3d68 <col:43, col:69> col:69 __param 'const struct sched_param *'
| `-NoThrowAttr 0x5598389d3f38 <line:113:22>
|-FunctionDecl 0x5598389d41b8 <line:114:1, col:111> col:12 sched_getparam 'int (__pid_t, struct sched_param *)' extern
| |-ParmVarDecl 0x5598389d3fa0 <col:28, col:36> col:36 __pid '__pid_t':'int'
| |-ParmVarDecl 0x5598389d4098 <col:43, col:63> col:63 __param 'struct sched_param *'
| `-NoThrowAttr 0x5598389d4268 <col:88>
|-FunctionDecl 0x5598389d4588 <line:115:1, line:116:85> line:115:12 sched_setscheduler 'int (__pid_t, int, const struct sched_param *)' extern
| |-ParmVarDecl 0x5598389d42d0 <col:32, col:40> col:40 __pid '__pid_t':'int'
| |-ParmVarDecl 0x5598389d43b0 <col:47, col:51> col:51 __policy 'int'
| |-ParmVarDecl 0x5598389d4440 <line:116:11, col:37> col:37 __param 'const struct sched_param *'
| `-NoThrowAttr 0x5598389d4640 <col:62>
|-FunctionDecl 0x5598389d47b8 <line:117:1, col:86> col:12 sched_getscheduler 'int (__pid_t)' extern
| |-ParmVarDecl 0x5598389d46a8 <col:32, col:40> col:40 __pid '__pid_t':'int'
| `-NoThrowAttr 0x5598389d4860 <col:63>
|-FunctionDecl 0x5598389d4988 <line:118:1, col:70> col:12 sched_yield 'int (void)' extern
| `-NoThrowAttr 0x5598389d4a28 <col:47>
|-FunctionDecl 0x5598389d4b30 <line:119:1, col:92> col:12 sched_get_priority_max 'int (int)' extern
| |-ParmVarDecl 0x5598389d4a98 <col:36, col:40> col:40 __algorithm 'int'
| `-NoThrowAttr 0x5598389d4bd8 <col:69>
|-FunctionDecl 0x5598389d4ce0 <line:120:1, col:92> col:12 sched_get_priority_min 'int (int)' extern
| |-ParmVarDecl 0x5598389d4c48 <col:36, col:40> col:40 __algorithm 'int'
| `-NoThrowAttr 0x5598389d4d88 <col:69>
|-FunctionDecl 0x5598389d5048 <line:121:1, col:111> col:12 sched_rr_get_interval 'int (__pid_t, struct timespec *)' extern
| |-ParmVarDecl 0x5598389d4df0 <col:35, col:43> col:43 __pid '__pid_t':'int'
| |-ParmVarDecl 0x5598389d4f28 <col:50, col:67> col:67 __t 'struct timespec *'
| `-NoThrowAttr 0x5598389d50f8 <col:88>
|-TypedefDecl 0x5598389d5188 <line:125:1, col:19> col:19 referenced clock_t '__clock_t':'long'
| `-TypedefType 0x5598389d5150 '__clock_t' sugar
|   |-Typedef 0x5598389cf548 '__clock_t'
|   `-BuiltinType 0x559838967f30 'long'
|-TypedefDecl 0x5598389d5218 <line:128:1, col:21> col:21 referenced clockid_t '__clockid_t':'int'
| `-TypedefType 0x5598389d51e0 '__clockid_t' sugar
|   |-Typedef 0x5598389cf938 '__clockid_t'
|   `-BuiltinType 0x559838967f10 'int'
|-TypedefDecl 0x5598389d52a8 <line:129:1, col:19> col:19 referenced timer_t '__timer_t':'void *'
| `-TypedefType 0x5598389d5270 '__timer_t' sugar
|   |-Typedef 0x5598389cf9a8 '__timer_t'
|   `-PointerType 0x559838968630 'void *'
|     `-BuiltinType 0x559838967e70 'void'
|-RecordDecl 0x5598389d5300 <line:131:1, line:144:1> line:131:8 struct tm definition
| |-FieldDecl 0x5598389d53d8 <line:133:3, col:7> col:7 tm_sec 'int'
| |-FieldDecl 0x5598389d5440 <line:134:3, col:7> col:7 tm_min 'int'
| |-FieldDecl 0x5598389d54a8 <line:135:3, col:7> col:7 tm_hour 'int'
| |-FieldDecl 0x5598389d5510 <line:136:3, col:7> col:7 tm_mday 'int'
| |-FieldDecl 0x5598389d5578 <line:137:3, col:7> col:7 tm_mon 'int'
| |-FieldDecl 0x5598389d55e0 <line:138:3, col:7> col:7 tm_year 'int'
| |-FieldDecl 0x5598389d5648 <line:139:3, col:7> col:7 tm_wday 'int'
| |-FieldDecl 0x5598389d56b0 <line:140:3, col:7> col:7 tm_yday 'int'
| |-FieldDecl 0x5598389d5718 <line:141:3, col:7> col:7 tm_isdst 'int'
| |-FieldDecl 0x5598389d5780 <line:142:3, col:12> col:12 tm_gmtoff 'long'
| `-FieldDecl 0x5598389d57e8 <line:143:3, col:15> col:15 tm_zone 'const char *'
|-RecordDecl 0x5598389d5838 <line:147:1, line:151:3> line:147:8 struct itimerspec definition
| |-FieldDecl 0x5598389d5908 <line:149:5, col:21> col:21 it_interval 'struct timespec':'struct timespec'
| `-FieldDecl 0x5598389d5978 <line:150:5, col:21> col:21 it_value 'struct timespec':'struct timespec'
|-RecordDecl 0x5598389d5a20 <line:152:1, col:8> col:8 struct sigevent
|-FunctionDecl 0x5598389d5bf0 <line:154:1, col:68> col:16 clock 'clock_t (void)' extern
| `-NoThrowAttr 0x5598389d5c90 <col:45>
|-FunctionDecl 0x5598389d5e70 <line:155:1, col:77> col:15 time 'time_t (time_t *)' extern
| |-ParmVarDecl 0x5598389d5d60 <col:21, col:29> col:29 __timer 'time_t *'
| `-NoThrowAttr 0x5598389d5f18 <col:54>
|-FunctionDecl 0x5598389d6118 <line:156:1, line:157:73> line:156:15 difftime 'double (time_t, time_t)' extern
| |-ParmVarDecl 0x5598389d5f80 <col:25, col:32> col:32 __time1 'time_t':'long'
| |-ParmVarDecl 0x5598389d5ff8 <col:41, col:48> col:48 __time0 'time_t':'long'
| |-NoThrowAttr 0x5598389d61c8 <line:157:22>
| `-ConstAttr 0x5598389d6220 <col:63>
|-FunctionDecl 0x5598389d7050 <line:158:1, col:79> col:15 mktime 'time_t (struct tm *)' extern
| |-ParmVarDecl 0x5598389d6318 <col:23, col:34> col:34 __tp 'struct tm *'
| `-NoThrowAttr 0x5598389d70f8 <col:56>
|-FunctionDecl 0x5598389d74a0 <line:159:1, line:161:77> line:159:15 strftime 'size_t (char *restrict, size_t, const char *restrict, const struct tm *restrict)' extern
| |-ParmVarDecl 0x5598389d7168 <col:25, col:42> col:42 __s 'char *restrict'
| |-ParmVarDecl 0x5598389d71e0 <col:47, col:54> col:54 __maxsize 'size_t':'unsigned long'
| |-ParmVarDecl 0x5598389d7260 <line:160:4, col:27> col:27 __format 'const char *restrict'
| |-ParmVarDecl 0x5598389d7358 <line:161:4, col:32> col:32 __tp 'const struct tm *restrict'
| `-NoThrowAttr 0x5598389d7560 <col:54>
|-RecordDecl 0x5598389d75b8 <line:163:9, line:170:1> line:163:16 struct __locale_struct definition
| |-RecordDecl 0x5598389d7668 parent 0x559838967e18 <line:165:3, col:10> col:10 struct __locale_data
| |-FieldDecl 0x5598389d78c8 <col:3, col:37> col:25 __locales 'struct __locale_data *[13]'
| |-FieldDecl 0x5598389d7968 <line:166:3, col:29> col:29 __ctype_b 'const unsigned short *'
| |-FieldDecl 0x5598389d79d0 <line:167:3, col:14> col:14 __ctype_tolower 'const int *'
| |-FieldDecl 0x5598389d7a38 <line:168:3, col:14> col:14 __ctype_toupper 'const int *'
| `-FieldDecl 0x5598389d7b28 <line:169:3, col:25> col:15 __names 'const char *[13]'
|-TypedefDecl 0x5598389d7c48 <line:163:1, line:170:4> col:4 referenced __locale_t 'struct __locale_struct *'
| `-PointerType 0x5598389d7bf0 'struct __locale_struct *'
|   `-ElaboratedType 0x5598389d7b80 'struct __locale_struct' sugar
|     `-RecordType 0x5598389d7640 'struct __locale_struct'
|       `-Record 0x5598389d75b8 '__locale_struct'
|-TypedefDecl 0x5598389d7cf8 <line:171:1, col:20> col:20 locale_t '__locale_t':'struct __locale_struct *'
| `-TypedefType 0x5598389d7cc0 '__locale_t' sugar
|   |-Typedef 0x5598389d7c48 '__locale_t'
|   `-PointerType 0x5598389d7bf0 'struct __locale_struct *'
|     `-ElaboratedType 0x5598389d7b80 'struct __locale_struct' sugar
|       `-RecordType 0x5598389d7640 'struct __locale_struct'
|         `-Record 0x5598389d75b8 '__locale_struct'
|-FunctionDecl 0x5598389d9110 <line:172:1, line:175:63> line:172:15 strftime_l 'size_t (char *restrict, size_t, const char *restrict, const struct tm *restrict, __locale_t)' extern
| |-ParmVarDecl 0x5598389d7d68 <col:27, col:44> col:44 __s 'char *restrict'
| |-ParmVarDecl 0x5598389d7de0 <col:49, col:56> col:56 __maxsize 'size_t':'unsigned long'
| |-ParmVarDecl 0x5598389d7e60 <line:173:6, col:29> col:29 __format 'const char *restrict'
| |-ParmVarDecl 0x5598389d7ef0 <line:174:6, col:34> col:34 __tp 'const struct tm *restrict'
| |-ParmVarDecl 0x5598389d7f68 <line:175:6, col:17> col:17 __loc '__locale_t':'struct __locale_struct *'
| `-NoThrowAttr 0x5598389d91d8 <col:40>
|-FunctionDecl 0x5598389d93c8 <line:177:1, col:89> col:19 gmtime 'struct tm *(const time_t *)' extern
| |-ParmVarDecl 0x5598389d92a0 <col:27, col:41> col:41 __timer 'const time_t *'
| `-NoThrowAttr 0x5598389d9470 <col:66>
|-FunctionDecl 0x5598389d9580 <line:178:1, col:92> col:19 localtime 'struct tm *(const time_t *)' extern
| |-ParmVarDecl 0x5598389d94d8 <col:30, col:44> col:44 __timer 'const time_t *'
| `-NoThrowAttr 0x5598389d9628 <col:69>
|-FunctionDecl 0x5598389d9858 <line:180:1, line:181:75> line:180:19 gmtime_r 'struct tm *(const time_t *restrict, struct tm *restrict)' extern
| |-ParmVarDecl 0x5598389d9690 <col:29, col:54> col:54 __timer 'const time_t *restrict'
| |-ParmVarDecl 0x5598389d9720 <line:181:8, col:30> col:30 __tp 'struct tm *restrict'
| `-NoThrowAttr 0x5598389d9908 <col:52>
|-FunctionDecl 0x5598389d9ab0 <line:182:1, line:183:78> line:182:19 localtime_r 'struct tm *(const time_t *restrict, struct tm *restrict)' extern
| |-ParmVarDecl 0x5598389d9970 <col:32, col:57> col:57 __timer 'const time_t *restrict'
| |-ParmVarDecl 0x5598389d9a00 <line:183:11, col:33> col:33 __tp 'struct tm *restrict'
| `-NoThrowAttr 0x5598389d9b60 <col:55>
|-FunctionDecl 0x5598389d9cf8 <line:185:1, col:85> col:14 asctime 'char *(const struct tm *)' extern
| |-ParmVarDecl 0x5598389d9be0 <col:23, col:40> col:40 __tp 'const struct tm *'
| `-NoThrowAttr 0x5598389d9da0 <col:62>
|-FunctionDecl 0x5598389d9f18 <line:186:1, col:83> col:14 ctime 'char *(const time_t *)' extern
| |-ParmVarDecl 0x5598389d9e08 <col:21, col:35> col:35 __timer 'const time_t *'
| `-NoThrowAttr 0x5598389d9fc0 <col:60>
|-FunctionDecl 0x5598389da2b8 <line:188:1, line:189:67> line:188:14 asctime_r 'char *(const struct tm *restrict, char *restrict)' extern
| |-ParmVarDecl 0x5598389da118 <col:25, col:53> col:53 __tp 'const struct tm *restrict'
| |-ParmVarDecl 0x5598389da198 <line:189:4, col:21> col:21 __buf 'char *restrict'
| `-NoThrowAttr 0x5598389da368 <col:44>
|-FunctionDecl 0x5598389da578 <line:190:1, line:191:72> line:190:14 ctime_r 'char *(const time_t *restrict, char *restrict)' extern
| |-ParmVarDecl 0x5598389da3d0 <col:23, col:48> col:48 __timer 'const time_t *restrict'
| |-ParmVarDecl 0x5598389da450 <line:191:9, col:26> col:26 __buf 'char *restrict'
| `-NoThrowAttr 0x5598389da628 <col:49>
|-VarDecl 0x5598389da728 <line:192:1, col:24> col:14 __tzname 'char *[2]' extern
|-VarDecl 0x5598389da7a8 <line:193:1, col:12> col:12 __daylight 'int' extern
|-VarDecl 0x5598389da828 <line:194:1, col:17> col:17 __timezone 'long' extern
|-VarDecl 0x5598389da8f0 <line:195:1, col:22> col:14 tzname 'char *[2]' extern
|-FunctionDecl 0x5598389daa20 <line:196:1, col:65> col:13 tzset 'void (void)' extern
| `-NoThrowAttr 0x5598389daac0 <col:42>
|-VarDecl 0x5598389dab30 <line:197:1, col:12> col:12 daylight 'int' extern
|-VarDecl 0x5598389dabb0 <line:198:1, col:17> col:17 timezone 'long' extern
|-FunctionDecl 0x5598389dad38 <line:199:1, col:80> col:12 stime 'int (const time_t *)' extern
| |-ParmVarDecl 0x5598389dac28 <col:19, col:33> col:33 __when 'const time_t *'
| `-NoThrowAttr 0x5598389dade0 <col:57>
|-FunctionDecl 0x5598389daef0 <line:200:1, col:79> col:15 timegm 'time_t (struct tm *)' extern
| |-ParmVarDecl 0x5598389dae60 <col:23, col:34> col:34 __tp 'struct tm *'
| `-NoThrowAttr 0x5598389daf98 <col:56>
|-FunctionDecl 0x5598389db0d0 <line:201:1, col:82> col:15 timelocal 'time_t (struct tm *)' extern
| |-ParmVarDecl 0x5598389db018 <col:26, col:37> col:37 __tp 'struct tm *'
| `-NoThrowAttr 0x5598389db178 <col:59>
|-FunctionDecl 0x5598389db280 <line:202:1, col:99> col:12 dysize 'int (int)' extern
| |-ParmVarDecl 0x5598389db1e8 <col:20, col:24> col:24 __year 'int'
| |-NoThrowAttr 0x5598389db328 <col:48>
| `-ConstAttr 0x5598389db380 <col:89>
|-FunctionDecl 0x5598389db5e8 <line:203:1, line:204:37> line:203:12 nanosleep 'int (const struct timespec *, struct timespec *)' extern
| |-ParmVarDecl 0x5598389db438 <col:23, col:46> col:46 __requested_time 'const struct timespec *'
| `-ParmVarDecl 0x5598389db4c8 <line:204:9, col:26> col:26 __remaining 'struct timespec *'
|-FunctionDecl 0x5598389db848 <line:205:1, col:111> col:12 clock_getres 'int (clockid_t, struct timespec *)' extern
| |-ParmVarDecl 0x5598389db6d8 <col:26, col:36> col:36 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x5598389db768 <col:48, col:65> col:65 __res 'struct timespec *'
| `-NoThrowAttr 0x5598389db8f8 <col:88>
|-FunctionDecl 0x5598389dba90 <line:206:1, col:111> col:12 clock_gettime 'int (clockid_t, struct timespec *)' extern
| |-ParmVarDecl 0x5598389db960 <col:27, col:37> col:37 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x5598389db9f0 <col:49, col:66> col:66 __tp 'struct timespec *'
| `-NoThrowAttr 0x5598389dbb40 <col:88>
|-FunctionDecl 0x5598389dbd58 <line:207:1, line:208:45> line:207:12 clock_settime 'int (clockid_t, const struct timespec *)' extern
| |-ParmVarDecl 0x5598389dbba8 <col:27, col:37> col:37 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x5598389dbc38 <col:49, col:72> col:72 __tp 'const struct timespec *'
| `-NoThrowAttr 0x5598389dbe08 <line:208:22>
|-FunctionDecl 0x5598389dc178 <line:209:1, line:211:30> line:209:12 clock_nanosleep 'int (clockid_t, int, const struct timespec *, struct timespec *)' extern
| |-ParmVarDecl 0x5598389dbe70 <col:29, col:39> col:39 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x5598389dbef0 <col:51, col:55> col:55 __flags 'int'
| |-ParmVarDecl 0x5598389dbf80 <line:210:8, col:31> col:31 __req 'const struct timespec *'
| `-ParmVarDecl 0x5598389dc010 <line:211:8, col:25> col:25 __rem 'struct timespec *'
|-FunctionDecl 0x5598389dc478 <line:212:1, col:108> col:12 clock_getcpuclockid 'int (pid_t, clockid_t *)' extern
| |-ParmVarDecl 0x5598389dc278 <col:33, col:39> col:39 __pid 'pid_t':'int'
| |-ParmVarDecl 0x5598389dc350 <col:46, col:57> col:57 __clock_id 'clockid_t *'
| `-NoThrowAttr 0x5598389dc528 <col:85>
|-FunctionDecl 0x5598389dc918 <line:213:1, line:215:75> line:213:12 timer_create 'int (clockid_t, struct sigevent *restrict, timer_t *restrict)' extern
| |-ParmVarDecl 0x5598389dc590 <col:26, col:36> col:36 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x5598389dc6c8 <line:214:5, col:33> col:33 __evp 'struct sigevent *restrict'
| |-ParmVarDecl 0x5598389dc7d0 <line:215:5, col:25> col:25 __timerid 'timer_t *restrict'
| `-NoThrowAttr 0x5598389dc9d0 <col:52>
|-FunctionDecl 0x5598389dcb48 <line:216:1, col:84> col:12 timer_delete 'int (timer_t)' extern
| |-ParmVarDecl 0x5598389dca38 <col:26, col:34> col:34 __timerid 'timer_t':'void *'
| `-NoThrowAttr 0x5598389dcbf0 <col:61>
|-FunctionDecl 0x5598389dd0f0 <line:217:1, line:219:85> line:217:12 timer_settime 'int (timer_t, int, const struct itimerspec *restrict, struct itimerspec *restrict)' extern
| |-ParmVarDecl 0x5598389dcc58 <col:27, col:35> col:35 __timerid 'timer_t':'void *'
| |-ParmVarDecl 0x5598389dccd8 <col:46, col:50> col:50 __flags 'int'
| |-ParmVarDecl 0x5598389dce08 <line:218:6, col:42> col:42 __value 'const struct itimerspec *restrict'
| |-ParmVarDecl 0x5598389dcef8 <line:219:6, col:36> col:36 __ovalue 'struct itimerspec *restrict'
| `-NoThrowAttr 0x5598389dd1b0 <col:62>
|-FunctionDecl 0x5598389dd3c8 <line:220:1, line:221:45> line:220:12 timer_gettime 'int (timer_t, struct itimerspec *)' extern
| |-ParmVarDecl 0x5598389dd218 <col:27, col:35> col:35 __timerid 'timer_t':'void *'
| |-ParmVarDecl 0x5598389dd2a8 <col:46, col:65> col:65 __value 'struct itimerspec *'
| `-NoThrowAttr 0x5598389dd478 <line:221:22>
|-FunctionDecl 0x5598389dd578 <line:222:1, col:88> col:12 timer_getoverrun 'int (timer_t)' extern
| |-ParmVarDecl 0x5598389dd4e0 <col:30, col:38> col:38 __timerid 'timer_t':'void *'
| `-NoThrowAttr 0x5598389dd620 <col:65>
|-TypedefDecl 0x5598389dd690 <line:224:1, col:27> col:27 referenced pthread_t 'unsigned long'
| `-BuiltinType 0x559838967fd0 'unsigned long'
|-RecordDecl 0x5598389dd6e8 <line:225:1, line:229:1> line:225:7 union pthread_attr_t definition
| |-FieldDecl 0x5598389dd830 <line:227:3, col:17> col:8 __size 'char [56]'
| `-FieldDecl 0x5598389dd898 <line:228:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x5598389dd948 <line:230:1, col:30> col:30 referenced pthread_attr_t 'union pthread_attr_t':'union pthread_attr_t'
| `-ElaboratedType 0x5598389dd8f0 'union pthread_attr_t' sugar
|   `-RecordType 0x5598389dd770 'union pthread_attr_t'
|     `-Record 0x5598389dd6e8 'pthread_attr_t'
|-RecordDecl 0x5598389dd9a0 <line:231:9, line:235:1> line:231:16 struct __pthread_internal_list definition
| |-FieldDecl 0x5598389ddb18 <line:233:3, col:35> col:35 __prev 'struct __pthread_internal_list *'
| `-FieldDecl 0x5598389ddb90 <line:234:3, col:35> col:35 __next 'struct __pthread_internal_list *'
|-TypedefDecl 0x5598389ddc40 <line:231:1, line:235:3> col:3 referenced __pthread_list_t 'struct __pthread_internal_list':'struct __pthread_internal_list'
| `-ElaboratedType 0x5598389ddbe0 'struct __pthread_internal_list' sugar
|   `-RecordType 0x5598389dda20 'struct __pthread_internal_list'
|     `-Record 0x5598389dd9a0 '__pthread_internal_list'
|-RecordDecl 0x5598389ddcb0 <line:236:9, line:250:1> line:236:9 union definition
| |-RecordDecl 0x5598389ddd58 parent 0x559838967e18 <line:238:3, line:247:3> line:238:10 struct __pthread_mutex_s definition
| | |-FieldDecl 0x5598389dde30 <line:240:5, col:9> col:9 __lock 'int'
| | |-FieldDecl 0x5598389dde98 <line:241:5, col:18> col:18 __count 'unsigned int'
| | |-FieldDecl 0x5598389ddf00 <line:242:5, col:9> col:9 __owner 'int'
| | |-FieldDecl 0x5598389ddf68 <line:243:5, col:18> col:18 __nusers 'unsigned int'
| | |-FieldDecl 0x5598389ddfd0 <line:244:5, col:9> col:9 __kind 'int'
| | |-FieldDecl 0x5598389de038 <line:245:5, col:9> col:9 __spins 'int'
| | `-FieldDecl 0x5598389e2110 <line:246:5, col:22> col:22 __list '__pthread_list_t':'struct __pthread_internal_list'
| |-FieldDecl 0x5598389e21c0 <line:238:3, line:247:5> col:5 __data 'struct __pthread_mutex_s':'struct __pthread_mutex_s'
| |-FieldDecl 0x5598389e22b0 <line:248:3, col:17> col:8 __size 'char [40]'
| `-FieldDecl 0x5598389e2318 <line:249:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x5598389e24a0 <line:236:1, line:250:3> col:3 referenced pthread_mutex_t 'union pthread_mutex_t':'pthread_mutex_t'
| `-ElaboratedType 0x5598389e2440 'union pthread_mutex_t' sugar
|   `-RecordType 0x5598389ddd30 'pthread_mutex_t'
|     `-Record 0x5598389ddcb0 ''
|-RecordDecl 0x5598389e2510 <line:251:9, line:255:1> line:251:9 union definition
| |-FieldDecl 0x5598389e2650 <line:253:3, col:16> col:8 __size 'char [4]'
| `-FieldDecl 0x5598389e26b8 <line:254:3, col:7> col:7 __align 'int'
|-TypedefDecl 0x5598389e2770 <line:251:1, line:255:3> col:3 referenced pthread_mutexattr_t 'union pthread_mutexattr_t':'pthread_mutexattr_t'
| `-ElaboratedType 0x5598389e2710 'union pthread_mutexattr_t' sugar
|   `-RecordType 0x5598389e2590 'pthread_mutexattr_t'
|     `-Record 0x5598389e2510 ''
|-RecordDecl 0x5598389e27e0 <line:256:9, line:271:1> line:256:9 union definition
| |-RecordDecl 0x5598389e2888 <line:258:3, line:268:3> line:258:3 struct definition
| | |-FieldDecl 0x5598389e2950 <line:260:5, col:9> col:9 __lock 'int'
| | |-FieldDecl 0x5598389e29b8 <line:261:5, col:18> col:18 __futex 'unsigned int'
| | |-FieldDecl 0x5598389e2a20 <line:262:19, col:42> col:42 __total_seq 'unsigned long long'
| | |-FieldDecl 0x5598389e2a88 <line:263:19, col:42> col:42 __wakeup_seq 'unsigned long long'
| | |-FieldDecl 0x5598389e2af0 <line:264:19, col:42> col:42 __woken_seq 'unsigned long long'
| | |-FieldDecl 0x5598389e2b58 <line:265:5, col:11> col:11 __mutex 'void *'
| | |-FieldDecl 0x5598389e2bc0 <line:266:5, col:18> col:18 __nwaiters 'unsigned int'
| | `-FieldDecl 0x5598389e2c28 <line:267:5, col:18> col:18 __broadcast_seq 'unsigned int'
| |-FieldDecl 0x5598389e2ce0 <line:258:3, line:268:5> col:5 __data 'struct (anonymous struct at ./split_2/mix037_rmo.oepc_false-unreach-call.i:258:3)':'struct pthread_cond_t::(anonymous at ./split_2/mix037_rmo.oepc_false-unreach-call.i:258:3)'
| |-FieldDecl 0x5598389e2dd0 <line:269:3, col:17> col:8 __size 'char [48]'
| `-FieldDecl 0x5598389e2e38 <line:270:17, col:31> col:31 __align 'long long'
|-TypedefDecl 0x5598389e2f70 <line:256:1, line:271:3> col:3 referenced pthread_cond_t 'union pthread_cond_t':'pthread_cond_t'
| `-ElaboratedType 0x5598389e2f10 'union pthread_cond_t' sugar
|   `-RecordType 0x5598389e2860 'pthread_cond_t'
|     `-Record 0x5598389e27e0 ''
|-RecordDecl 0x5598389e2fe0 <line:272:9, line:276:1> line:272:9 union definition
| |-FieldDecl 0x5598389e4130 <line:274:3, col:16> col:8 __size 'char [4]'
| `-FieldDecl 0x5598389e4198 <line:275:3, col:7> col:7 __align 'int'
|-TypedefDecl 0x5598389e4250 <line:272:1, line:276:3> col:3 referenced pthread_condattr_t 'union pthread_condattr_t':'pthread_condattr_t'
| `-ElaboratedType 0x5598389e41f0 'union pthread_condattr_t' sugar
|   `-RecordType 0x5598389e3060 'pthread_condattr_t'
|     `-Record 0x5598389e2fe0 ''
|-TypedefDecl 0x5598389e42d8 <line:277:1, col:22> col:22 referenced pthread_key_t 'unsigned int'
| `-BuiltinType 0x559838967fb0 'unsigned int'
|-TypedefDecl 0x5598389e4348 <line:278:1, col:13> col:13 referenced pthread_once_t 'int'
| `-BuiltinType 0x559838967f10 'int'
|-RecordDecl 0x5598389e43a0 <line:279:9, line:297:1> line:279:9 union definition
| |-RecordDecl 0x5598389e4448 <line:281:3, line:294:3> line:281:3 struct definition
| | |-FieldDecl 0x5598389e4510 <line:283:5, col:9> col:9 __lock 'int'
| | |-FieldDecl 0x5598389e4578 <line:284:5, col:18> col:18 __nr_readers 'unsigned int'
| | |-FieldDecl 0x5598389e45e0 <line:285:5, col:18> col:18 __readers_wakeup 'unsigned int'
| | |-FieldDecl 0x5598389e4648 <line:286:5, col:18> col:18 __writer_wakeup 'unsigned int'
| | |-FieldDecl 0x5598389e46b0 <line:287:5, col:18> col:18 __nr_readers_queued 'unsigned int'
| | |-FieldDecl 0x5598389e4718 <line:288:5, col:18> col:18 __nr_writers_queued 'unsigned int'
| | |-FieldDecl 0x5598389e4780 <line:289:5, col:9> col:9 __writer 'int'
| | |-FieldDecl 0x5598389e47e8 <line:290:5, col:9> col:9 __shared 'int'
| | |-FieldDecl 0x5598389e4850 <line:291:5, col:23> col:23 __pad1 'unsigned long'
| | |-FieldDecl 0x5598389e48b8 <line:292:5, col:23> col:23 __pad2 'unsigned long'
| | `-FieldDecl 0x5598389e4920 <line:293:5, col:18> col:18 __flags 'unsigned int'
| |-FieldDecl 0x5598389e49d0 <line:281:3, line:294:5> col:5 __data 'struct (anonymous struct at ./split_2/mix037_rmo.oepc_false-unreach-call.i:281:3)':'struct pthread_rwlock_t::(anonymous at ./split_2/mix037_rmo.oepc_false-unreach-call.i:281:3)'
| |-FieldDecl 0x5598389e4a78 <line:295:3, col:17> col:8 __size 'char [56]'
| `-FieldDecl 0x5598389e4ae0 <line:296:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x5598389e4c30 <line:279:1, line:297:3> col:3 referenced pthread_rwlock_t 'union pthread_rwlock_t':'pthread_rwlock_t'
| `-ElaboratedType 0x5598389e4bd0 'union pthread_rwlock_t' sugar
|   `-RecordType 0x5598389e4420 'pthread_rwlock_t'
|     `-Record 0x5598389e43a0 ''
|-RecordDecl 0x5598389e4ca0 <line:298:9, line:302:1> line:298:9 union definition
| |-FieldDecl 0x5598389e4de0 <line:300:3, col:16> col:8 __size 'char [8]'
| `-FieldDecl 0x5598389e4e48 <line:301:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x5598389e4f00 <line:298:1, line:302:3> col:3 referenced pthread_rwlockattr_t 'union pthread_rwlockattr_t':'pthread_rwlockattr_t'
| `-ElaboratedType 0x5598389e4ea0 'union pthread_rwlockattr_t' sugar
|   `-RecordType 0x5598389e4d20 'pthread_rwlockattr_t'
|     `-Record 0x5598389e4ca0 ''
|-TypedefDecl 0x5598389e4f88 <line:303:1, col:22> col:22 referenced pthread_spinlock_t 'volatile int'
| `-QualType 0x559838967f14 'volatile int' volatile
|   `-BuiltinType 0x559838967f10 'int'
|-RecordDecl 0x5598389e4fe0 <line:304:9, line:308:1> line:304:9 union definition
| |-FieldDecl 0x5598389e6140 <line:306:3, col:17> col:8 __size 'char [32]'
| `-FieldDecl 0x5598389e61a8 <line:307:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x5598389e6260 <line:304:1, line:308:3> col:3 referenced pthread_barrier_t 'union pthread_barrier_t':'pthread_barrier_t'
| `-ElaboratedType 0x5598389e6200 'union pthread_barrier_t' sugar
|   `-RecordType 0x5598389e5060 'pthread_barrier_t'
|     `-Record 0x5598389e4fe0 ''
|-RecordDecl 0x5598389e62d0 <line:309:9, line:313:1> line:309:9 union definition
| |-FieldDecl 0x5598389e63d0 <line:311:3, col:16> col:8 __size 'char [4]'
| `-FieldDecl 0x5598389e6438 <line:312:3, col:7> col:7 __align 'int'
|-TypedefDecl 0x5598389e64f0 <line:309:1, line:313:3> col:3 referenced pthread_barrierattr_t 'union pthread_barrierattr_t':'pthread_barrierattr_t'
| `-ElaboratedType 0x5598389e6490 'union pthread_barrierattr_t' sugar
|   `-RecordType 0x5598389e6350 'pthread_barrierattr_t'
|     `-Record 0x5598389e62d0 ''
|-TypedefDecl 0x5598389e6608 <line:314:1, col:29> col:18 referenced __jmp_buf 'long [8]'
| `-ConstantArrayType 0x5598389e65a0 'long [8]' 8 
|   `-BuiltinType 0x559838967f30 'long'
|-EnumDecl 0x5598389e6660 <line:315:1, line:319:1> line:315:1
| |-EnumConstantDecl 0x5598389e6728 <line:317:3> col:3 PTHREAD_CREATE_JOINABLE 'int'
| `-EnumConstantDecl 0x5598389e6778 <line:318:3> col:3 PTHREAD_CREATE_DETACHED 'int'
|-EnumDecl 0x5598389e67c8 <line:320:1, line:331:1> line:320:1
| |-EnumConstantDecl 0x5598389e6898 <line:322:3> col:3 referenced PTHREAD_MUTEX_TIMED_NP 'int'
| |-EnumConstantDecl 0x5598389e68e8 <line:323:3> col:3 referenced PTHREAD_MUTEX_RECURSIVE_NP 'int'
| |-EnumConstantDecl 0x5598389e6938 <line:324:3> col:3 referenced PTHREAD_MUTEX_ERRORCHECK_NP 'int'
| |-EnumConstantDecl 0x5598389e6988 <line:325:3> col:3 PTHREAD_MUTEX_ADAPTIVE_NP 'int'
| |-EnumConstantDecl 0x5598389e6a10 <line:327:3, col:26> col:3 referenced PTHREAD_MUTEX_NORMAL 'int'
| | `-ConstantExpr 0x5598389e69f8 <col:26> 'int'
| |   `-DeclRefExpr 0x5598389e69d8 <col:26> 'int' EnumConstant 0x5598389e6898 'PTHREAD_MUTEX_TIMED_NP' 'int'
| |-EnumConstantDecl 0x5598389e6a98 <line:328:3, col:29> col:3 PTHREAD_MUTEX_RECURSIVE 'int'
| | `-ConstantExpr 0x5598389e6a80 <col:29> 'int'
| |   `-DeclRefExpr 0x5598389e6a60 <col:29> 'int' EnumConstant 0x5598389e68e8 'PTHREAD_MUTEX_RECURSIVE_NP' 'int'
| |-EnumConstantDecl 0x5598389e6b20 <line:329:3, col:30> col:3 PTHREAD_MUTEX_ERRORCHECK 'int'
| | `-ConstantExpr 0x5598389e6b08 <col:30> 'int'
| |   `-DeclRefExpr 0x5598389e6ae8 <col:30> 'int' EnumConstant 0x5598389e6938 'PTHREAD_MUTEX_ERRORCHECK_NP' 'int'
| `-EnumConstantDecl 0x5598389e6ba8 <line:330:3, col:27> col:3 PTHREAD_MUTEX_DEFAULT 'int'
|   `-ConstantExpr 0x5598389e6b90 <col:27> 'int'
|     `-DeclRefExpr 0x5598389e6b70 <col:27> 'int' EnumConstant 0x5598389e6a10 'PTHREAD_MUTEX_NORMAL' 'int'
|-EnumDecl 0x5598389e6bf8 <line:332:1, line:338:1> line:332:1
| |-EnumConstantDecl 0x5598389e6cc8 <line:334:3> col:3 referenced PTHREAD_MUTEX_STALLED 'int'
| |-EnumConstantDecl 0x5598389e6d50 <line:335:3, col:30> col:3 PTHREAD_MUTEX_STALLED_NP 'int'
| | `-ConstantExpr 0x5598389e6d38 <col:30> 'int'
| |   `-DeclRefExpr 0x5598389e6d18 <col:30> 'int' EnumConstant 0x5598389e6cc8 'PTHREAD_MUTEX_STALLED' 'int'
| |-EnumConstantDecl 0x5598389e6da0 <line:336:3> col:3 referenced PTHREAD_MUTEX_ROBUST 'int'
| `-EnumConstantDecl 0x5598389e6e28 <line:337:3, col:29> col:3 PTHREAD_MUTEX_ROBUST_NP 'int'
|   `-ConstantExpr 0x5598389e6e10 <col:29> 'int'
|     `-DeclRefExpr 0x5598389e6df0 <col:29> 'int' EnumConstant 0x5598389e6da0 'PTHREAD_MUTEX_ROBUST' 'int'
|-EnumDecl 0x5598389e6e78 <line:339:1, line:344:1> line:339:1
| |-EnumConstantDecl 0x5598389e6f48 <line:341:3> col:3 PTHREAD_PRIO_NONE 'int'
| |-EnumConstantDecl 0x5598389e6f98 <line:342:3> col:3 PTHREAD_PRIO_INHERIT 'int'
| `-EnumConstantDecl 0x5598389e6fe8 <line:343:3> col:3 PTHREAD_PRIO_PROTECT 'int'
|-EnumDecl 0x5598389e7038 <line:345:1, line:351:1> line:345:1
| |-EnumConstantDecl 0x5598389e7150 <line:347:3> col:3 referenced PTHREAD_RWLOCK_PREFER_READER_NP 'int'
| |-EnumConstantDecl 0x5598389e71a0 <line:348:3> col:3 PTHREAD_RWLOCK_PREFER_WRITER_NP 'int'
| |-EnumConstantDecl 0x5598389e71f0 <line:349:3> col:3 PTHREAD_RWLOCK_PREFER_WRITER_NONRECURSIVE_NP 'int'
| `-EnumConstantDecl 0x5598389e7278 <line:350:3, col:31> col:3 PTHREAD_RWLOCK_DEFAULT_NP 'int'
|   `-ConstantExpr 0x5598389e7260 <col:31> 'int'
|     `-DeclRefExpr 0x5598389e7240 <col:31> 'int' EnumConstant 0x5598389e7150 'PTHREAD_RWLOCK_PREFER_READER_NP' 'int'
|-EnumDecl 0x5598389e72c8 <line:352:1, line:356:1> line:352:1
| |-EnumConstantDecl 0x5598389e7398 <line:354:3> col:3 PTHREAD_INHERIT_SCHED 'int'
| `-EnumConstantDecl 0x5598389e73e8 <line:355:3> col:3 PTHREAD_EXPLICIT_SCHED 'int'
|-EnumDecl 0x5598389e7438 <line:357:1, line:361:1> line:357:1
| |-EnumConstantDecl 0x5598389e7508 <line:359:3> col:3 PTHREAD_SCOPE_SYSTEM 'int'
| `-EnumConstantDecl 0x5598389e7558 <line:360:3> col:3 PTHREAD_SCOPE_PROCESS 'int'
|-EnumDecl 0x5598389e75a8 <line:362:1, line:366:1> line:362:1
| |-EnumConstantDecl 0x5598389e7678 <line:364:3> col:3 PTHREAD_PROCESS_PRIVATE 'int'
| `-EnumConstantDecl 0x5598389e76c8 <line:365:3> col:3 PTHREAD_PROCESS_SHARED 'int'
|-RecordDecl 0x5598389e7718 <line:367:1, line:373:1> line:367:8 struct _pthread_cleanup_buffer definition
| |-FieldDecl 0x5598389e7958 <line:369:3, col:28> col:10 __routine 'void (*)(void *)'
| |-FieldDecl 0x5598389e79c0 <line:370:3, col:9> col:9 __arg 'void *'
| |-FieldDecl 0x5598389e7a28 <line:371:3, col:7> col:7 __canceltype 'int'
| `-FieldDecl 0x5598389e7b48 <line:372:3, col:35> col:35 __prev 'struct _pthread_cleanup_buffer *'
|-EnumDecl 0x5598389e7b98 <line:374:1, line:378:1> line:374:1
| |-EnumConstantDecl 0x5598389e7c68 <line:376:3> col:3 PTHREAD_CANCEL_ENABLE 'int'
| `-EnumConstantDecl 0x5598389e7cb8 <line:377:3> col:3 PTHREAD_CANCEL_DISABLE 'int'
|-EnumDecl 0x5598389e7d08 <line:379:1, line:383:1> line:379:1
| |-EnumConstantDecl 0x5598389e7dd8 <line:381:3> col:3 PTHREAD_CANCEL_DEFERRED 'int'
| `-EnumConstantDecl 0x5598389e7e28 <line:382:3> col:3 PTHREAD_CANCEL_ASYNCHRONOUS 'int'
|-FunctionDecl 0x5598389e8488 <line:385:1, line:388:96> line:385:12 used pthread_create 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' extern
| |-ParmVarDecl 0x5598389e7f20 <col:28, col:50> col:50 __newthread 'pthread_t *restrict'
| |-ParmVarDecl 0x5598389e8030 <line:386:7, col:40> col:40 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x5598389e8270 <line:387:7, col:39> col:15 __start_routine 'void *(*)(void *)'
| |-ParmVarDecl 0x5598389e82f0 <line:388:7, col:24> col:24 __arg 'void *restrict'
| |-NoThrowAttr 0x5598389e8548 <col:47>
| |-NonNullAttr 0x5598389e85a0 <col:77, col:94> 1 3
| `-CallbackAttr 0x5598389e85d8 <line:385:12> Implicit 2 3
|-FunctionDecl 0x5598389e8700 <line:389:1, col:72> col:13 pthread_exit 'void (void *) __attribute__((noreturn))' extern
| `-ParmVarDecl 0x5598389e8630 <col:27, col:33> col:33 __retval 'void *'
|-FunctionDecl 0x5598389e8958 <line:390:1, col:64> col:12 pthread_join 'int (pthread_t, void **)' extern
| |-ParmVarDecl 0x5598389e87b8 <col:26, col:36> col:36 __th 'pthread_t':'unsigned long'
| `-ParmVarDecl 0x5598389e8838 <col:42, col:49> col:49 __thread_return 'void **'
|-FunctionDecl 0x5598389e8b28 <line:391:1, col:83> col:12 pthread_detach 'int (pthread_t)' extern
| |-ParmVarDecl 0x5598389e8a18 <col:28, col:38> col:38 __th 'pthread_t':'unsigned long'
| `-NoThrowAttr 0x5598389e8bd0 <col:60>
|-FunctionDecl 0x5598389e8d20 <line:392:1, col:105> col:18 pthread_self 'pthread_t (void)' extern
| |-NoThrowAttr 0x5598389e8dc0 <col:54>
| `-ConstAttr 0x5598389e8e18 <col:95>
|-FunctionDecl 0x5598389e8fe8 <line:393:1, line:394:70> line:393:12 pthread_equal 'int (pthread_t, pthread_t)' extern
| |-ParmVarDecl 0x5598389e8e50 <col:27, col:37> col:37 __thread1 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x5598389e8ec8 <col:48, col:58> col:58 __thread2 'pthread_t':'unsigned long'
| |-NoThrowAttr 0x5598389e9098 <line:394:19>
| `-ConstAttr 0x5598389e90f0 <col:60>
|-FunctionDecl 0x5598389eab08 <line:395:1, col:128> col:12 pthread_attr_init 'int (pthread_attr_t *)' extern
| |-ParmVarDecl 0x5598389ea9d0 <col:31, col:47> col:47 __attr 'pthread_attr_t *'
| |-NoThrowAttr 0x5598389eabb0 <col:71>
| `-NonNullAttr 0x5598389eac08 <col:112, col:126> 1
|-FunctionDecl 0x5598389ead10 <line:396:1, line:397:79> line:396:12 pthread_attr_destroy 'int (pthread_attr_t *)' extern
| |-ParmVarDecl 0x5598389eac58 <col:34, col:50> col:50 __attr 'pthread_attr_t *'
| |-NoThrowAttr 0x5598389eadb8 <line:397:22>
| `-NonNullAttr 0x5598389eae10 <col:63, col:77> 1
|-FunctionDecl 0x5598389eb038 <line:398:1, line:400:82> line:398:12 pthread_attr_getdetachstate 'int (const pthread_attr_t *, int *)' extern
| |-ParmVarDecl 0x5598389eae58 <col:41, col:63> col:63 __attr 'const pthread_attr_t *'
| |-ParmVarDecl 0x5598389eaed8 <line:399:6, col:11> col:11 __detachstate 'int *'
| |-NoThrowAttr 0x5598389eb0e8 <line:400:22>
| `-NonNullAttr 0x5598389eb140 <col:63, col:80> 1 2
|-FunctionDecl 0x5598389eb348 <line:401:1, line:403:79> line:401:12 pthread_attr_setdetachstate 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x5598389eb188 <col:41, col:57> col:57 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x5598389eb208 <line:402:6, col:10> col:10 __detachstate 'int'
| |-NoThrowAttr 0x5598389eb3f8 <line:403:22>
| `-NonNullAttr 0x5598389eb450 <col:63, col:77> 1
|-FunctionDecl 0x5598389eb6a8 <line:404:1, line:406:82> line:404:12 pthread_attr_getguardsize 'int (const pthread_attr_t *, size_t *)' extern
| |-ParmVarDecl 0x5598389eb498 <col:39, col:61> col:61 __attr 'const pthread_attr_t *'
| |-ParmVarDecl 0x5598389eb540 <line:405:11, col:19> col:19 __guardsize 'size_t *'
| |-NoThrowAttr 0x5598389eb758 <line:406:22>
| `-NonNullAttr 0x5598389eb7b0 <col:63, col:80> 1 2
|-FunctionDecl 0x5598389ec9e8 <line:407:1, line:409:79> line:407:12 pthread_attr_setguardsize 'int (pthread_attr_t *, size_t)' extern
| |-ParmVarDecl 0x5598389eb7f8 <col:39, col:55> col:55 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x5598389eb870 <line:408:11, col:18> col:18 __guardsize 'size_t':'unsigned long'
| |-NoThrowAttr 0x5598389eca98 <line:409:22>
| `-NonNullAttr 0x5598389ecaf0 <col:63, col:77> 1
|-FunctionDecl 0x5598389ecd28 <line:410:1, line:412:82> line:410:12 pthread_attr_getschedparam 'int (const pthread_attr_t *restrict, struct sched_param *restrict)' extern
| |-ParmVarDecl 0x5598389ecb38 <col:40, col:73> col:73 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x5598389ecbc8 <line:411:12, col:43> col:43 __param 'struct sched_param *restrict'
| |-NoThrowAttr 0x5598389ecdd8 <line:412:22>
| `-NonNullAttr 0x5598389ece30 <col:63, col:80> 1 2
|-FunctionDecl 0x5598389ed068 <line:413:1, line:415:97> line:413:12 pthread_attr_setschedparam 'int (pthread_attr_t *restrict, const struct sched_param *restrict)' extern
| |-ParmVarDecl 0x5598389ece78 <col:40, col:67> col:67 __attr 'pthread_attr_t *restrict'
| |-ParmVarDecl 0x5598389ecf08 <line:414:12, line:415:12> col:12 __param 'const struct sched_param *restrict'
| |-NoThrowAttr 0x5598389ed118 <col:37>
| `-NonNullAttr 0x5598389ed170 <col:78, col:95> 1 2
|-FunctionDecl 0x5598389ed358 <line:416:1, line:418:82> line:416:12 pthread_attr_getschedpolicy 'int (const pthread_attr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x5598389ed1b8 <col:41, line:417:6> col:6 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x5598389ed238 <col:14, col:30> col:30 __policy 'int *restrict'
| |-NoThrowAttr 0x5598389ed408 <line:418:22>
| `-NonNullAttr 0x5598389ed460 <col:63, col:80> 1 2
|-FunctionDecl 0x5598389ed5e8 <line:419:1, line:420:79> line:419:12 pthread_attr_setschedpolicy 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x5598389ed4a8 <col:41, col:57> col:57 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x5598389ed528 <col:65, col:69> col:69 __policy 'int'
| |-NoThrowAttr 0x5598389ed698 <line:420:22>
| `-NonNullAttr 0x5598389ed6f0 <col:63, col:77> 1
|-FunctionDecl 0x5598389ed898 <line:421:1, line:423:82> line:421:12 pthread_attr_getinheritsched 'int (const pthread_attr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x5598389ed738 <col:42, line:422:7> col:7 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x5598389ed7b8 <col:15, col:31> col:31 __inherit 'int *restrict'
| |-NoThrowAttr 0x5598389ed948 <line:423:22>
| `-NonNullAttr 0x5598389ed9c0 <col:63, col:80> 1 2
|-FunctionDecl 0x5598389edb48 <line:424:1, line:426:79> line:424:12 pthread_attr_setinheritsched 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x5598389eda08 <col:42, col:58> col:58 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x5598389eda88 <line:425:7, col:11> col:11 __inherit 'int'
| |-NoThrowAttr 0x5598389edbf8 <line:426:22>
| `-NonNullAttr 0x5598389edc50 <col:63, col:77> 1
|-FunctionDecl 0x5598389eddf8 <line:427:1, line:429:82> line:427:12 pthread_attr_getscope 'int (const pthread_attr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x5598389edc98 <col:35, col:68> col:68 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x5598389edd18 <line:428:7, col:23> col:23 __scope 'int *restrict'
| |-NoThrowAttr 0x5598389edea8 <line:429:22>
| `-NonNullAttr 0x5598389edf00 <col:63, col:80> 1 2
|-FunctionDecl 0x5598389ee088 <line:430:1, line:431:79> line:430:12 pthread_attr_setscope 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x5598389edf48 <col:35, col:51> col:51 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x5598389edfc8 <col:59, col:63> col:63 __scope 'int'
| |-NoThrowAttr 0x5598389ee138 <line:431:22>
| `-NonNullAttr 0x5598389ee190 <col:63, col:77> 1
|-FunctionDecl 0x5598389ee3b8 <line:432:1, line:434:115> line:432:12 pthread_attr_getstackaddr 'int (const pthread_attr_t *restrict, void **restrict)' extern
| |-ParmVarDecl 0x5598389ee1d8 <col:39, line:433:11> col:11 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x5598389ee258 <col:19, col:37> col:37 __stackaddr 'void **restrict'
| |-NoThrowAttr 0x5598389ee468 <line:434:22>
| |-NonNullAttr 0x5598389ee4c0 <col:63, col:80> 1 2
| `-DeprecatedAttr 0x5598389ee4f8 <col:100> "" ""
|-FunctionDecl 0x5598389ee708 <line:435:1, line:437:112> line:435:12 pthread_attr_setstackaddr 'int (pthread_attr_t *, void *)' extern
| |-ParmVarDecl 0x5598389ee548 <col:39, col:55> col:55 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x5598389ee5c8 <line:436:11, col:17> col:17 __stackaddr 'void *'
| |-NoThrowAttr 0x5598389ee7b8 <line:437:22>
| |-NonNullAttr 0x5598389ee810 <col:63, col:77> 1
| `-DeprecatedAttr 0x5598389ee848 <col:97> "" ""
|-FunctionDecl 0x5598389eea48 <line:438:1, line:440:82> line:438:12 pthread_attr_getstacksize 'int (const pthread_attr_t *restrict, size_t *restrict)' extern
| |-ParmVarDecl 0x5598389ee898 <col:39, line:439:11> col:11 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x5598389ee910 <col:19, col:38> col:38 __stacksize 'size_t *restrict'
| |-NoThrowAttr 0x5598389eeaf8 <line:440:22>
| `-NonNullAttr 0x5598389eeb50 <col:63, col:80> 1 2
|-FunctionDecl 0x5598389eecd0 <line:441:1, line:443:79> line:441:12 pthread_attr_setstacksize 'int (pthread_attr_t *, size_t)' extern
| |-ParmVarDecl 0x5598389eeb98 <col:39, col:55> col:55 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x5598389eec10 <line:442:11, col:18> col:18 __stacksize 'size_t':'unsigned long'
| |-NoThrowAttr 0x5598389eed80 <line:443:22>
| `-NonNullAttr 0x5598389eedd8 <col:63, col:77> 1
|-FunctionDecl 0x5598389ef0c8 <line:444:1, line:447:85> line:444:12 pthread_attr_getstack 'int (const pthread_attr_t *restrict, void **restrict, size_t *restrict)' extern
| |-ParmVarDecl 0x5598389eee28 <col:35, col:68> col:68 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x5598389eeea8 <line:445:7, col:25> col:25 __stackaddr 'void **restrict'
| |-ParmVarDecl 0x5598389eef20 <line:446:7, col:26> col:26 __stacksize 'size_t *restrict'
| |-NoThrowAttr 0x5598389ef180 <line:447:22>
| `-NonNullAttr 0x5598389ef1d8 <col:63, col:83> 1 2 3
|-FunctionDecl 0x5598389ef488 <line:448:1, line:449:100> line:448:12 pthread_attr_setstack 'int (pthread_attr_t *, void *, size_t)' extern
| |-ParmVarDecl 0x5598389ef230 <col:35, col:51> col:51 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x5598389ef2b0 <col:59, col:65> col:65 __stackaddr 'void *'
| |-ParmVarDecl 0x5598389ef328 <line:449:7, col:14> col:14 __stacksize 'size_t':'unsigned long'
| |-NoThrowAttr 0x5598389ef540 <col:43>
| `-NonNullAttr 0x5598389ef598 <col:84, col:98> 1
|-FunctionDecl 0x5598389ef858 <line:450:1, line:452:79> line:450:12 pthread_setschedparam 'int (pthread_t, int, const struct sched_param *)' extern
| |-ParmVarDecl 0x5598389ef5e8 <col:35, col:45> col:45 __target_thread 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x5598389ef668 <col:62, col:66> col:66 __policy 'int'
| |-ParmVarDecl 0x5598389ef6f8 <line:451:7, col:33> col:33 __param 'const struct sched_param *'
| |-NoThrowAttr 0x5598389ef910 <line:452:22>
| `-NonNullAttr 0x5598389ef968 <col:63, col:77> 3
|-FunctionDecl 0x5598389efc78 <line:453:1, line:456:82> line:453:12 pthread_getschedparam 'int (pthread_t, int *restrict, struct sched_param *restrict)' extern
| |-ParmVarDecl 0x5598389ef9e0 <col:35, col:45> col:45 __target_thread 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x5598389efa60 <line:454:7, col:23> col:23 __policy 'int *restrict'
| |-ParmVarDecl 0x5598389efaf0 <line:455:7, col:38> col:38 __param 'struct sched_param *restrict'
| |-NoThrowAttr 0x5598389efd30 <line:456:22>
| `-NonNullAttr 0x5598389efd88 <col:63, col:80> 2 3
|-FunctionDecl 0x5598389eff78 <line:457:1, line:458:45> line:457:12 pthread_setschedprio 'int (pthread_t, int)' extern
| |-ParmVarDecl 0x5598389efdd8 <col:34, col:44> col:44 __target_thread 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x5598389efe58 <col:61, col:65> col:65 __prio 'int'
| `-NoThrowAttr 0x5598389f0028 <line:458:22>
|-FunctionDecl 0x5598389f03f8 <line:459:1, line:460:71> line:459:12 pthread_once 'int (pthread_once_t *, void (*)(void))' extern
| |-ParmVarDecl 0x5598389f00f0 <col:26, col:42> col:42 __once_control 'pthread_once_t *'
| |-ParmVarDecl 0x5598389f0290 <line:460:5, col:33> col:12 __init_routine 'void (*)(void)'
| `-NonNullAttr 0x5598389f04a8 <col:52, col:69> 1 2
|-FunctionDecl 0x5598389f0650 <line:461:1, col:64> col:12 pthread_setcancelstate 'int (int, int *)' extern
| |-ParmVarDecl 0x5598389f0530 <col:36, col:40> col:40 __state 'int'
| `-ParmVarDecl 0x5598389f05b0 <col:49, col:54> col:54 __oldstate 'int *'
|-FunctionDecl 0x5598389f0838 <line:462:1, col:61> col:12 pthread_setcanceltype 'int (int, int *)' extern
| |-ParmVarDecl 0x5598389f0718 <col:35, col:39> col:39 __type 'int'
| `-ParmVarDecl 0x5598389f0798 <col:47, col:52> col:52 __oldtype 'int *'
|-FunctionDecl 0x5598389f09f0 <line:463:1, col:42> col:12 pthread_cancel 'int (pthread_t)' extern
| `-ParmVarDecl 0x5598389f08f8 <col:28, col:38> col:38 __th 'pthread_t':'unsigned long'
|-FunctionDecl 0x5598389f0b30 <line:464:1, col:37> col:13 pthread_testcancel 'void (void)' extern
|-RecordDecl 0x5598389f0bd0 <line:465:9, line:473:1> line:465:9 struct definition
| |-RecordDecl 0x5598389f0c78 <line:467:3, line:471:3> line:467:3 struct definition
| | |-FieldDecl 0x5598389f0d68 <line:469:5, col:15> col:15 __cancel_jmp_buf '__jmp_buf':'long [8]'
| | `-FieldDecl 0x5598389f0dd0 <line:470:5, col:9> col:9 __mask_was_saved 'int'
| |-FieldDecl 0x5598389f0fa0 <line:467:3, line:471:23> col:5 __cancel_jmp_buf 'struct (anonymous struct at ./split_2/mix037_rmo.oepc_false-unreach-call.i:467:3) [1]'
| `-FieldDecl 0x5598389f1098 <line:472:3, col:16> col:9 __pad 'void *[4]'
|-TypedefDecl 0x5598389f1150 <line:465:1, line:473:3> col:3 referenced __pthread_unwind_buf_t 'struct __pthread_unwind_buf_t':'__pthread_unwind_buf_t'
| |-ElaboratedType 0x5598389f10f0 'struct __pthread_unwind_buf_t' sugar
| | `-RecordType 0x5598389f0c50 '__pthread_unwind_buf_t'
| |   `-Record 0x5598389f0bd0 ''
| `-AlignedAttr 0x5598389f11a8 <col:42> aligned
|   `-<<<NULL>>>
|-RecordDecl 0x5598389f1220 <line:474:1, line:480:1> line:474:8 struct __pthread_cleanup_frame definition
| |-FieldDecl 0x5598389f1380 <line:476:3, col:35> col:10 __cancel_routine 'void (*)(void *)'
| |-FieldDecl 0x5598389f13e8 <line:477:3, col:9> col:9 __cancel_arg 'void *'
| |-FieldDecl 0x5598389f1450 <line:478:3, col:7> col:7 __do_it 'int'
| `-FieldDecl 0x5598389f14b8 <line:479:3, col:7> col:7 __cancel_type 'int'
|-FunctionDecl 0x5598389f16c0 <line:481:1, col:69> col:13 __pthread_register_cancel 'void (__pthread_unwind_buf_t *)' extern
| `-ParmVarDecl 0x5598389f15b0 <col:40, col:64> col:64 __buf '__pthread_unwind_buf_t *'
|-FunctionDecl 0x5598389f1808 <line:483:1, col:71> col:13 __pthread_unregister_cancel 'void (__pthread_unwind_buf_t *)' extern
| `-ParmVarDecl 0x5598389f1778 <col:42, col:66> col:66 __buf '__pthread_unwind_buf_t *'
|-FunctionDecl 0x5598389f1a00 <line:485:1, line:487:31> line:485:13 __pthread_unwind_next 'void (__pthread_unwind_buf_t *) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x5598389f18c0 <col:36, col:60> col:60 __buf '__pthread_unwind_buf_t *'
| `-WeakAttr 0x5598389f1aa8 <line:487:22>
|-RecordDecl 0x5598389f1b00 <line:489:1, col:8> col:8 struct __jmp_buf_tag
|-FunctionDecl 0x5598389f1e18 <line:490:1, col:98> col:12 __sigsetjmp 'int (struct __jmp_buf_tag *, int)' extern
| |-ParmVarDecl 0x5598389f1c78 <col:25, col:47> col:47 __env 'struct __jmp_buf_tag *'
| |-ParmVarDecl 0x5598389f1cf8 <col:54, col:58> col:58 __savemask 'int'
| |-NoThrowAttr 0x5598389f1ec8 <col:86>
| `-ReturnsTwiceAttr 0x5598389f1f20 <col:12> Implicit
|-FunctionDecl 0x5598389f2248 <line:491:1, line:493:79> line:491:12 pthread_mutex_init 'int (pthread_mutex_t *, const pthread_mutexattr_t *)' extern
| |-ParmVarDecl 0x5598389f1ff0 <col:32, col:49> col:49 __mutex 'pthread_mutex_t *'
| |-ParmVarDecl 0x5598389f2100 <line:492:11, col:38> col:38 __mutexattr 'const pthread_mutexattr_t *'
| |-NoThrowAttr 0x5598389f22f8 <line:493:22>
| `-NonNullAttr 0x5598389f2350 <col:63, col:77> 1
|-FunctionDecl 0x5598389f24c8 <line:494:1, line:495:79> line:494:12 pthread_mutex_destroy 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x5598389f2398 <col:35, col:52> col:52 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x5598389f2570 <line:495:22>
| `-NonNullAttr 0x5598389f25c8 <col:63, col:77> 1
|-FunctionDecl 0x5598389f26d0 <line:496:1, line:497:68> line:496:12 pthread_mutex_trylock 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x5598389f2618 <col:35, col:52> col:52 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x5598389f2778 <line:497:22>
| `-NonNullAttr 0x5598389f27d0 <col:52, col:66> 1
|-FunctionDecl 0x5598389f28d0 <line:498:1, line:499:68> line:498:12 pthread_mutex_lock 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x5598389f2818 <col:32, col:49> col:49 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x5598389f2978 <line:499:22>
| `-NonNullAttr 0x5598389f29d0 <col:52, col:66> 1
|-FunctionDecl 0x5598389f3c28 <line:500:1, line:502:85> line:500:12 pthread_mutex_timedlock 'int (pthread_mutex_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x5598389f3a38 <col:37, col:65> col:65 __mutex 'pthread_mutex_t *restrict'
| |-ParmVarDecl 0x5598389f3ac8 <line:501:9, line:502:9> col:9 __abstime 'const struct timespec *restrict'
| |-NoThrowAttr 0x5598389f3cd8 <col:36>
| `-NonNullAttr 0x5598389f3d30 <col:66, col:83> 1 2
|-FunctionDecl 0x5598389f3e30 <line:503:1, line:504:68> line:503:12 pthread_mutex_unlock 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x5598389f3d78 <col:34, col:51> col:51 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x5598389f3ed8 <line:504:22>
| `-NonNullAttr 0x5598389f3f30 <col:52, col:66> 1
|-FunctionDecl 0x5598389f41c8 <line:505:1, line:508:82> line:505:12 pthread_mutex_getprioceiling 'int (const pthread_mutex_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x5598389f3fe0 <col:42, line:506:18> col:18 __mutex 'const pthread_mutex_t *restrict'
| |-ParmVarDecl 0x5598389f4060 <line:507:7, col:23> col:23 __prioceiling 'int *restrict'
| |-NoThrowAttr 0x5598389f4278 <line:508:22>
| `-NonNullAttr 0x5598389f42d0 <col:63, col:80> 1 2
|-FunctionDecl 0x5598389f4598 <line:509:1, line:512:82> line:509:12 pthread_mutex_setprioceiling 'int (pthread_mutex_t *restrict, int, int *restrict)' extern
| |-ParmVarDecl 0x5598389f4318 <col:42, col:70> col:70 __mutex 'pthread_mutex_t *restrict'
| |-ParmVarDecl 0x5598389f4398 <line:510:7, col:11> col:11 __prioceiling 'int'
| |-ParmVarDecl 0x5598389f4418 <line:511:7, col:23> col:23 __old_ceiling 'int *restrict'
| |-NoThrowAttr 0x5598389f4650 <line:512:22>
| `-NonNullAttr 0x5598389f46a8 <col:63, col:80> 1 3
|-FunctionDecl 0x5598389f47b0 <line:513:1, line:514:79> line:513:12 pthread_mutex_consistent 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x5598389f46f8 <col:38, col:55> col:55 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x5598389f4858 <line:514:22>
| `-NonNullAttr 0x5598389f48b0 <col:63, col:77> 1
|-FunctionDecl 0x5598389f4ad8 <line:515:1, line:516:79> line:515:12 pthread_mutexattr_init 'int (pthread_mutexattr_t *)' extern
| |-ParmVarDecl 0x5598389f4960 <col:36, col:57> col:57 __attr 'pthread_mutexattr_t *'
| |-NoThrowAttr 0x5598389f4b80 <line:516:22>
| `-NonNullAttr 0x5598389f4bd8 <col:63, col:77> 1
|-FunctionDecl 0x5598389f4ce0 <line:517:1, line:518:79> line:517:12 pthread_mutexattr_destroy 'int (pthread_mutexattr_t *)' extern
| |-ParmVarDecl 0x5598389f4c28 <col:39, col:60> col:60 __attr 'pthread_mutexattr_t *'
| |-NoThrowAttr 0x5598389f4d88 <line:518:22>
| `-NonNullAttr 0x5598389f4de0 <col:63, col:77> 1
|-FunctionDecl 0x5598389f5008 <line:519:1, line:522:82> line:519:12 pthread_mutexattr_getpshared 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x5598389f4e28 <col:42, line:520:18> col:18 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x5598389f4ea8 <line:521:7, col:23> col:23 __pshared 'int *restrict'
| |-NoThrowAttr 0x5598389f50b8 <line:522:22>
| `-NonNullAttr 0x5598389f5110 <col:63, col:80> 1 2
|-FunctionDecl 0x5598389f5318 <line:523:1, line:525:79> line:523:12 pthread_mutexattr_setpshared 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x5598389f5158 <col:42, col:63> col:63 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x5598389f51d8 <line:524:7, col:11> col:11 __pshared 'int'
| |-NoThrowAttr 0x5598389f53c8 <line:525:22>
| `-NonNullAttr 0x5598389f5420 <col:63, col:77> 1
|-FunctionDecl 0x5598389f55c8 <line:526:1, line:528:82> line:526:12 pthread_mutexattr_gettype 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x5598389f5468 <col:39, line:527:11> col:11 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x5598389f54e8 <col:19, col:35> col:35 __kind 'int *restrict'
| |-NoThrowAttr 0x5598389f5678 <line:528:22>
| `-NonNullAttr 0x5598389f56d0 <col:63, col:80> 1 2
|-FunctionDecl 0x5598389f5858 <line:529:1, line:530:79> line:529:12 pthread_mutexattr_settype 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x5598389f5718 <col:39, col:60> col:60 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x5598389f5798 <col:68, col:72> col:72 __kind 'int'
| |-NoThrowAttr 0x5598389f5908 <line:530:22>
| `-NonNullAttr 0x5598389f5960 <col:63, col:77> 1
|-FunctionDecl 0x5598389f5b20 <line:531:1, line:534:82> line:531:12 pthread_mutexattr_getprotocol 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x5598389f59a8 <col:43, line:532:19> col:19 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x5598389f5a40 <line:533:8, col:24> col:24 __protocol 'int *restrict'
| |-NoThrowAttr 0x5598389f5bd0 <line:534:22>
| `-NonNullAttr 0x5598389f5c28 <col:63, col:80> 1 2
|-FunctionDecl 0x5598389f5db8 <line:535:1, line:537:79> line:535:12 pthread_mutexattr_setprotocol 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x5598389f5c78 <col:43, col:64> col:64 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x5598389f5cf8 <line:536:8, col:12> col:12 __protocol 'int'
| |-NoThrowAttr 0x5598389f5e68 <line:537:22>
| `-NonNullAttr 0x5598389f5ec0 <col:63, col:77> 1
|-FunctionDecl 0x5598389f6068 <line:538:1, line:541:82> line:538:12 pthread_mutexattr_getprioceiling 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x5598389f5f08 <col:46, line:539:22> col:22 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x5598389f5f88 <line:540:11, col:27> col:27 __prioceiling 'int *restrict'
| |-NoThrowAttr 0x5598389f6118 <line:541:22>
| `-NonNullAttr 0x5598389f6170 <col:63, col:80> 1 2
|-FunctionDecl 0x5598389f62f8 <line:542:1, line:544:79> line:542:12 pthread_mutexattr_setprioceiling 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x5598389f61b8 <col:46, col:67> col:67 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x5598389f6238 <line:543:11, col:15> col:15 __prioceiling 'int'
| |-NoThrowAttr 0x5598389f63a8 <line:544:22>
| `-NonNullAttr 0x5598389f6400 <col:63, col:77> 1
|-FunctionDecl 0x5598389f65e8 <line:545:1, line:547:82> line:545:12 pthread_mutexattr_getrobust 'int (const pthread_mutexattr_t *, int *)' extern
| |-ParmVarDecl 0x5598389f6448 <col:41, col:68> col:68 __attr 'const pthread_mutexattr_t *'
| |-ParmVarDecl 0x5598389f64c8 <line:546:6, col:11> col:11 __robustness 'int *'
| |-NoThrowAttr 0x5598389f6698 <line:547:22>
| `-NonNullAttr 0x5598389f66f0 <col:63, col:80> 1 2
|-FunctionDecl 0x5598389f6878 <line:548:1, line:550:79> line:548:12 pthread_mutexattr_setrobust 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x5598389f6738 <col:41, col:62> col:62 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x5598389f67b8 <line:549:6, col:10> col:10 __robustness 'int'
| |-NoThrowAttr 0x5598389f6928 <line:550:22>
| `-NonNullAttr 0x5598389f6980 <col:63, col:77> 1
|-FunctionDecl 0x5598389f7cf8 <line:551:1, line:553:86> line:551:12 pthread_rwlock_init 'int (pthread_rwlock_t *restrict, const pthread_rwlockattr_t *restrict)' extern
| |-ParmVarDecl 0x5598389f7aa0 <col:33, col:62> col:62 __rwlock 'pthread_rwlock_t *restrict'
| |-ParmVarDecl 0x5598389f7bb0 <line:552:5, line:553:5> col:5 __attr 'const pthread_rwlockattr_t *restrict'
| |-NoThrowAttr 0x5598389f7da8 <col:29>
| `-NonNullAttr 0x5598389f7e00 <col:70, col:84> 1
|-FunctionDecl 0x5598389f7f78 <line:554:1, line:555:79> line:554:12 pthread_rwlock_destroy 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x5598389f7e48 <col:36, col:54> col:54 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x5598389f8020 <line:555:22>
| `-NonNullAttr 0x5598389f8078 <col:63, col:77> 1
|-FunctionDecl 0x5598389f8180 <line:556:1, line:557:68> line:556:12 pthread_rwlock_rdlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x5598389f80c8 <col:35, col:53> col:53 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x5598389f8228 <line:557:22>
| `-NonNullAttr 0x5598389f8280 <col:52, col:66> 1
|-FunctionDecl 0x5598389f8380 <line:558:1, line:559:65> line:558:12 pthread_rwlock_tryrdlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x5598389f82c8 <col:38, col:56> col:56 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x5598389f8428 <line:559:19>
| `-NonNullAttr 0x5598389f8480 <col:49, col:63> 1
|-FunctionDecl 0x5598389f86b8 <line:560:1, line:562:88> line:560:12 pthread_rwlock_timedrdlock 'int (pthread_rwlock_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x5598389f84c8 <col:40, col:69> col:69 __rwlock 'pthread_rwlock_t *restrict'
| |-ParmVarDecl 0x5598389f8558 <line:561:12, line:562:12> col:12 __abstime 'const struct timespec *restrict'
| |-NoThrowAttr 0x5598389f8768 <col:39>
| `-NonNullAttr 0x5598389f87c0 <col:69, col:86> 1 2
|-FunctionDecl 0x5598389f88c0 <line:563:1, line:564:68> line:563:12 pthread_rwlock_wrlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x5598389f8808 <col:35, col:53> col:53 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x5598389f8968 <line:564:22>
| `-NonNullAttr 0x5598389f89c0 <col:52, col:66> 1
|-FunctionDecl 0x5598389f8b28 <line:565:1, line:566:68> line:565:12 pthread_rwlock_trywrlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x5598389f8a70 <col:38, col:56> col:56 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x5598389f8bd0 <line:566:22>
| `-NonNullAttr 0x5598389f8c28 <col:52, col:66> 1
|-FunctionDecl 0x5598389f8de8 <line:567:1, line:569:88> line:567:12 pthread_rwlock_timedwrlock 'int (pthread_rwlock_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x5598389f8c78 <col:40, col:69> col:69 __rwlock 'pthread_rwlock_t *restrict'
| |-ParmVarDecl 0x5598389f8d08 <line:568:12, line:569:12> col:12 __abstime 'const struct timespec *restrict'
| |-NoThrowAttr 0x5598389f8e98 <col:39>
| `-NonNullAttr 0x5598389f8ef0 <col:69, col:86> 1 2
|-FunctionDecl 0x5598389f8ff0 <line:570:1, line:571:68> line:570:12 pthread_rwlock_unlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x5598389f8f38 <col:35, col:53> col:53 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x5598389f9098 <line:571:22>
| `-NonNullAttr 0x5598389f90f0 <col:52, col:66> 1
|-FunctionDecl 0x5598389f92d8 <line:572:1, line:573:79> line:572:12 pthread_rwlockattr_init 'int (pthread_rwlockattr_t *)' extern
| |-ParmVarDecl 0x5598389f91a0 <col:37, col:59> col:59 __attr 'pthread_rwlockattr_t *'
| |-NoThrowAttr 0x5598389f9380 <line:573:22>
| `-NonNullAttr 0x5598389f93d8 <col:63, col:77> 1
|-FunctionDecl 0x5598389f94e0 <line:574:1, line:575:79> line:574:12 pthread_rwlockattr_destroy 'int (pthread_rwlockattr_t *)' extern
| |-ParmVarDecl 0x5598389f9428 <col:40, col:62> col:62 __attr 'pthread_rwlockattr_t *'
| |-NoThrowAttr 0x5598389f9588 <line:575:22>
| `-NonNullAttr 0x5598389f95e0 <col:63, col:77> 1
|-FunctionDecl 0x5598389f9808 <line:576:1, line:579:82> line:576:12 pthread_rwlockattr_getpshared 'int (const pthread_rwlockattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x5598389f9628 <col:43, line:577:19> col:19 __attr 'const pthread_rwlockattr_t *restrict'
| |-ParmVarDecl 0x5598389f96a8 <line:578:8, col:24> col:24 __pshared 'int *restrict'
| |-NoThrowAttr 0x5598389f98b8 <line:579:22>
| `-NonNullAttr 0x5598389f9910 <col:63, col:80> 1 2
|-FunctionDecl 0x5598389f9b38 <line:580:1, line:582:79> line:580:12 pthread_rwlockattr_setpshared 'int (pthread_rwlockattr_t *, int)' extern
| |-ParmVarDecl 0x5598389f9958 <col:43, col:65> col:65 __attr 'pthread_rwlockattr_t *'
| |-ParmVarDecl 0x5598389f99d8 <line:581:8, col:12> col:12 __pshared 'int'
| |-NoThrowAttr 0x5598389f9be8 <line:582:22>
| `-NonNullAttr 0x5598389f9c40 <col:63, col:77> 1
|-FunctionDecl 0x5598389f9de8 <line:583:1, line:586:82> line:583:12 pthread_rwlockattr_getkind_np 'int (const pthread_rwlockattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x5598389f9c88 <col:43, line:584:19> col:19 __attr 'const pthread_rwlockattr_t *restrict'
| |-ParmVarDecl 0x5598389f9d08 <line:585:8, col:24> col:24 __pref 'int *restrict'
| |-NoThrowAttr 0x5598389f9e98 <line:586:22>
| `-NonNullAttr 0x5598389f9ef0 <col:63, col:80> 1 2
|-FunctionDecl 0x5598389fa078 <line:587:1, line:588:93> line:587:12 pthread_rwlockattr_setkind_np 'int (pthread_rwlockattr_t *, int)' extern
| |-ParmVarDecl 0x5598389f9f38 <col:43, col:65> col:65 __attr 'pthread_rwlockattr_t *'
| |-ParmVarDecl 0x5598389f9fb8 <line:588:8, col:12> col:12 __pref 'int'
| |-NoThrowAttr 0x5598389fa128 <col:36>
| `-NonNullAttr 0x5598389fa180 <col:77, col:91> 1
|-FunctionDecl 0x5598389fa4b8 <line:589:1, line:591:79> line:589:12 pthread_cond_init 'int (pthread_cond_t *restrict, const pthread_condattr_t *restrict)' extern
| |-ParmVarDecl 0x5598389fa260 <col:31, col:58> col:58 __cond 'pthread_cond_t *restrict'
| |-ParmVarDecl 0x5598389fa370 <line:590:10, col:47> col:47 __cond_attr 'const pthread_condattr_t *restrict'
| |-NoThrowAttr 0x5598389fa568 <line:591:22>
| `-NonNullAttr 0x5598389fa5c0 <col:63, col:77> 1
|-FunctionDecl 0x5598389fa738 <line:592:1, line:593:79> line:592:12 pthread_cond_destroy 'int (pthread_cond_t *)' extern
| |-ParmVarDecl 0x5598389fa608 <col:34, col:50> col:50 __cond 'pthread_cond_t *'
| |-NoThrowAttr 0x5598389fa7e0 <line:593:22>
| `-NonNullAttr 0x5598389fa838 <col:63, col:77> 1
|-FunctionDecl 0x5598389fa940 <line:594:1, line:595:68> line:594:12 pthread_cond_signal 'int (pthread_cond_t *)' extern
| |-ParmVarDecl 0x5598389fa888 <col:33, col:49> col:49 __cond 'pthread_cond_t *'
| |-NoThrowAttr 0x5598389fa9e8 <line:595:22>
| `-NonNullAttr 0x5598389faa40 <col:52, col:66> 1
|-FunctionDecl 0x5598389fab58 <line:596:1, line:597:68> line:596:12 pthread_cond_broadcast 'int (pthread_cond_t *)' extern
| |-ParmVarDecl 0x5598389faaa0 <col:36, col:52> col:52 __cond 'pthread_cond_t *'
| |-NoThrowAttr 0x5598389fac00 <line:597:22>
| `-NonNullAttr 0x5598389fac58 <col:52, col:66> 1
|-FunctionDecl 0x5598389fae88 <line:598:1, line:600:41> line:598:12 pthread_cond_wait 'int (pthread_cond_t *restrict, pthread_mutex_t *restrict)' extern
| |-ParmVarDecl 0x5598389faca8 <col:31, col:58> col:58 __cond 'pthread_cond_t *restrict'
| |-ParmVarDecl 0x5598389fad20 <line:599:10, col:38> col:38 __mutex 'pthread_mutex_t *restrict'
| `-NonNullAttr 0x5598389faf38 <line:600:22, col:39> 1 2
|-FunctionDecl 0x5598389fb268 <line:601:1, line:604:44> line:601:12 pthread_cond_timedwait 'int (pthread_cond_t *restrict, pthread_mutex_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x5598389fafb8 <col:36, col:63> col:63 __cond 'pthread_cond_t *restrict'
| |-ParmVarDecl 0x5598389fb030 <line:602:8, col:36> col:36 __mutex 'pthread_mutex_t *restrict'
| |-ParmVarDecl 0x5598389fb0c0 <line:603:8, col:42> col:42 __abstime 'const struct timespec *restrict'
| `-NonNullAttr 0x5598389fb320 <line:604:22, col:42> 1 2 3
|-FunctionDecl 0x5598389fb538 <line:605:1, line:606:79> line:605:12 pthread_condattr_init 'int (pthread_condattr_t *)' extern
| |-ParmVarDecl 0x5598389fb400 <col:35, col:55> col:55 __attr 'pthread_condattr_t *'
| |-NoThrowAttr 0x5598389fb5e0 <line:606:22>
| `-NonNullAttr 0x5598389fb638 <col:63, col:77> 1
|-FunctionDecl 0x5598389fb740 <line:607:1, line:608:79> line:607:12 pthread_condattr_destroy 'int (pthread_condattr_t *)' extern
| |-ParmVarDecl 0x5598389fb688 <col:38, col:58> col:58 __attr 'pthread_condattr_t *'
| |-NoThrowAttr 0x5598389fb7e8 <line:608:22>
| `-NonNullAttr 0x5598389fb840 <col:63, col:77> 1
|-FunctionDecl 0x5598389fbaa0 <line:609:1, line:612:82> line:609:12 pthread_condattr_getpshared 'int (const pthread_condattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x5598389fb888 <col:41, line:610:17> col:17 __attr 'const pthread_condattr_t *restrict'
| |-ParmVarDecl 0x5598389fb908 <line:611:6, col:22> col:22 __pshared 'int *restrict'
| |-NoThrowAttr 0x5598389fbb50 <line:612:22>
| `-NonNullAttr 0x5598389fbba8 <col:63, col:80> 1 2
|-FunctionDecl 0x5598389fbdb8 <line:613:1, line:614:94> line:613:12 pthread_condattr_setpshared 'int (pthread_condattr_t *, int)' extern
| |-ParmVarDecl 0x5598389fbbf8 <col:41, col:61> col:61 __attr 'pthread_condattr_t *'
| |-ParmVarDecl 0x5598389fbc78 <line:614:6, col:10> col:10 __pshared 'int'
| |-NoThrowAttr 0x5598389fbe68 <col:37>
| `-NonNullAttr 0x5598389fbec0 <col:78, col:92> 1
|-FunctionDecl 0x5598389fc0d8 <line:615:1, line:618:82> line:615:12 pthread_condattr_getclock 'int (const pthread_condattr_t *restrict, __clockid_t *restrict)' extern
| |-ParmVarDecl 0x5598389fbf08 <col:39, line:616:22> col:22 __attr 'const pthread_condattr_t *restrict'
| |-ParmVarDecl 0x5598389fbfb0 <line:617:11, col:35> col:35 __clock_id '__clockid_t *restrict'
| |-NoThrowAttr 0x5598389fc188 <line:618:22>
| `-NonNullAttr 0x5598389fc1e0 <col:63, col:80> 1 2
|-FunctionDecl 0x5598389fc3a8 <line:619:1, line:621:79> line:619:12 pthread_condattr_setclock 'int (pthread_condattr_t *, __clockid_t)' extern
| |-ParmVarDecl 0x5598389fc228 <col:39, col:59> col:59 __attr 'pthread_condattr_t *'
| |-ParmVarDecl 0x5598389fc2a0 <line:620:11, col:23> col:23 __clock_id '__clockid_t':'int'
| |-NoThrowAttr 0x5598389fc458 <line:621:22>
| `-NonNullAttr 0x5598389fc4b0 <col:63, col:77> 1
|-FunctionDecl 0x5598389fc758 <line:622:1, line:623:79> line:622:12 pthread_spin_init 'int (pthread_spinlock_t *, int)' extern
| |-ParmVarDecl 0x5598389fc590 <col:31, col:51> col:51 __lock 'pthread_spinlock_t *'
| |-ParmVarDecl 0x5598389fc610 <col:59, col:63> col:63 __pshared 'int'
| |-NoThrowAttr 0x5598389fc808 <line:623:22>
| `-NonNullAttr 0x5598389fc860 <col:63, col:77> 1
|-FunctionDecl 0x5598389fc9d8 <line:624:1, line:625:79> line:624:12 pthread_spin_destroy 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x5598389fc8a8 <col:34, col:54> col:54 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x5598389fcab0 <line:625:22>
| `-NonNullAttr 0x5598389fcb08 <col:63, col:77> 1
|-FunctionDecl 0x5598389fcc10 <line:626:1, line:627:68> line:626:12 pthread_spin_lock 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x5598389fcb58 <col:31, col:51> col:51 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x5598389fccb8 <line:627:22>
| `-NonNullAttr 0x5598389fcd10 <col:52, col:66> 1
|-FunctionDecl 0x5598389fce10 <line:628:1, line:629:68> line:628:12 pthread_spin_trylock 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x5598389fcd58 <col:34, col:54> col:54 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x5598389fceb8 <line:629:22>
| `-NonNullAttr 0x5598389fcf10 <col:52, col:66> 1
|-FunctionDecl 0x5598389fd010 <line:630:1, line:631:68> line:630:12 pthread_spin_unlock 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x5598389fcf58 <col:33, col:53> col:53 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x5598389fd0b8 <line:631:22>
| `-NonNullAttr 0x5598389fd110 <col:52, col:66> 1
|-FunctionDecl 0x5598389fd4e8 <line:632:1, line:635:79> line:632:12 pthread_barrier_init 'int (pthread_barrier_t *restrict, const pthread_barrierattr_t *restrict, unsigned int)' extern
| |-ParmVarDecl 0x5598389fd1f0 <col:34, col:64> col:64 __barrier 'pthread_barrier_t *restrict'
| |-ParmVarDecl 0x5598389fd300 <line:633:6, line:634:6> col:6 __attr 'const pthread_barrierattr_t *restrict'
| |-ParmVarDecl 0x5598389fd380 <col:14, col:27> col:27 __count 'unsigned int'
| |-NoThrowAttr 0x5598389fd5a0 <line:635:22>
| `-NonNullAttr 0x5598389fd5f8 <col:63, col:77> 1
|-FunctionDecl 0x5598389fd778 <line:636:1, line:637:79> line:636:12 pthread_barrier_destroy 'int (pthread_barrier_t *)' extern
| |-ParmVarDecl 0x5598389fd648 <col:37, col:56> col:56 __barrier 'pthread_barrier_t *'
| |-NoThrowAttr 0x5598389fd820 <line:637:22>
| `-NonNullAttr 0x5598389fd878 <col:63, col:77> 1
|-FunctionDecl 0x5598389fd980 <line:638:1, line:639:68> line:638:12 pthread_barrier_wait 'int (pthread_barrier_t *)' extern
| |-ParmVarDecl 0x5598389fd8c8 <col:34, col:53> col:53 __barrier 'pthread_barrier_t *'
| |-NoThrowAttr 0x5598389fda28 <line:639:22>
| `-NonNullAttr 0x5598389fda80 <col:52, col:66> 1
|-FunctionDecl 0x5598389fec88 <line:640:1, line:641:79> line:640:12 pthread_barrierattr_init 'int (pthread_barrierattr_t *)' extern
| |-ParmVarDecl 0x5598389feb50 <col:38, col:61> col:61 __attr 'pthread_barrierattr_t *'
| |-NoThrowAttr 0x5598389fed30 <line:641:22>
| `-NonNullAttr 0x5598389fed88 <col:63, col:77> 1
|-FunctionDecl 0x5598389fee90 <line:642:1, line:643:79> line:642:12 pthread_barrierattr_destroy 'int (pthread_barrierattr_t *)' extern
| |-ParmVarDecl 0x5598389fedd8 <col:41, col:64> col:64 __attr 'pthread_barrierattr_t *'
| |-NoThrowAttr 0x5598389fef38 <line:643:22>
| `-NonNullAttr 0x5598389fef90 <col:63, col:77> 1
|-FunctionDecl 0x5598389ff1b8 <line:644:1, line:647:82> line:644:12 pthread_barrierattr_getpshared 'int (const pthread_barrierattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x5598389fefd8 <col:44, line:645:20> col:20 __attr 'const pthread_barrierattr_t *restrict'
| |-ParmVarDecl 0x5598389ff058 <line:646:9, col:25> col:25 __pshared 'int *restrict'
| |-NoThrowAttr 0x5598389ff268 <line:647:22>
| `-NonNullAttr 0x5598389ff2c0 <col:63, col:80> 1 2
|-FunctionDecl 0x5598389ff4c8 <line:648:1, line:650:79> line:648:12 pthread_barrierattr_setpshared 'int (pthread_barrierattr_t *, int)' extern
| |-ParmVarDecl 0x5598389ff308 <col:44, col:67> col:67 __attr 'pthread_barrierattr_t *'
| |-ParmVarDecl 0x5598389ff388 <line:649:9, col:13> col:13 __pshared 'int'
| |-NoThrowAttr 0x5598389ff578 <line:650:22>
| `-NonNullAttr 0x5598389ff5d0 <col:63, col:77> 1
|-FunctionDecl 0x5598389ff918 <line:651:1, line:653:79> line:651:12 pthread_key_create 'int (pthread_key_t *, void (*)(void *))' extern
| |-ParmVarDecl 0x5598389ff6b0 <col:32, col:47> col:47 __key 'pthread_key_t *'
| |-ParmVarDecl 0x5598389ff7d0 <line:652:11, col:43> col:18 __destr_function 'void (*)(void *)'
| |-NoThrowAttr 0x5598389ff9c8 <line:653:22>
| `-NonNullAttr 0x5598389ffa20 <col:63, col:77> 1
|-FunctionDecl 0x5598389ffb88 <line:654:1, col:92> col:12 pthread_key_delete 'int (pthread_key_t)' extern
| |-ParmVarDecl 0x5598389ffa68 <col:32, col:46> col:46 __key 'pthread_key_t':'unsigned int'
| `-NoThrowAttr 0x5598389ffc30 <col:69>
|-FunctionDecl 0x5598389ffda8 <line:655:1, col:95> col:14 pthread_getspecific 'void *(pthread_key_t)' extern
| |-ParmVarDecl 0x5598389ffc98 <col:35, col:49> col:49 __key 'pthread_key_t':'unsigned int'
| `-NoThrowAttr 0x5598389ffe50 <col:72>
|-FunctionDecl 0x559838a00088 <line:656:1, line:657:67> line:656:12 pthread_setspecific 'int (pthread_key_t, const void *)' extern
| |-ParmVarDecl 0x5598389ffeb8 <col:33, col:47> col:47 __key 'pthread_key_t':'unsigned int'
| |-ParmVarDecl 0x5598389fff68 <line:657:5, col:17> col:17 __pointer 'const void *'
| `-NoThrowAttr 0x559838a00138 <col:44>
|-FunctionDecl 0x559838a00358 <line:658:1, line:660:79> line:658:12 pthread_getcpuclockid 'int (pthread_t, __clockid_t *)' extern
| |-ParmVarDecl 0x559838a001a0 <col:35, col:45> col:45 __thread_id 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x559838a00218 <line:659:7, col:20> col:20 __clock_id '__clockid_t *'
| |-NoThrowAttr 0x559838a00408 <line:660:22>
| `-NonNullAttr 0x559838a00460 <col:63, col:77> 2
|-FunctionDecl 0x559838a008a8 <line:661:1, line:663:70> line:661:12 pthread_atfork 'int (void (*)(void), void (*)(void), void (*)(void))' extern
| |-ParmVarDecl 0x559838a00540 <col:28, col:51> col:35 __prepare 'void (*)(void)'
| |-ParmVarDecl 0x559838a00650 <line:662:7, col:29> col:14 __parent 'void (*)(void)'
| |-ParmVarDecl 0x559838a00760 <line:663:7, col:28> col:14 __child 'void (*)(void)'
| `-NoThrowAttr 0x559838a00960 <col:47>
|-FunctionDecl 0x559838a00af0 <line:665:1, col:20> col:8 used P0 'void *(void *)'
| `-ParmVarDecl 0x559838a009d0 <col:11, col:17> col:17 arg 'void *'
|-FunctionDecl 0x559838a00c48 <line:666:1, col:20> col:8 used P1 'void *(void *)'
| `-ParmVarDecl 0x559838a00bb0 <col:11, col:17> col:17 arg 'void *'
|-FunctionDecl 0x559838a00da0 <line:667:1, col:20> col:8 used P2 'void *(void *)'
| `-ParmVarDecl 0x559838a00d08 <col:11, col:17> col:17 arg 'void *'
|-FunctionDecl 0x559838a00ef8 <line:668:1, col:20> col:8 used P3 'void *(void *)'
| `-ParmVarDecl 0x559838a00e60 <col:11, col:17> col:17 arg 'void *'
|-FunctionDecl 0x559838a00fc0 <line:669:1, col:12> col:6 fence 'void ()'
|-FunctionDecl 0x559838a01080 <line:670:1, col:12> col:6 isync 'void ()'
|-FunctionDecl 0x559838a01140 <line:671:1, col:14> col:6 lwfence 'void ()'
|-VarDecl 0x559838a011f8 <line:672:1, col:5> col:5 used __unbuffered_cnt 'int'
|-VarDecl 0x559838a01278 prev 0x559838a011f8 <line:673:1, col:24> col:5 used __unbuffered_cnt 'int' cinit
| `-IntegerLiteral 0x559838a012e0 <col:24> 'int' 0
|-VarDecl 0x559838a01318 <line:674:1, col:5> col:5 used __unbuffered_p1_EAX 'int'
|-VarDecl 0x559838a01398 prev 0x559838a01318 <line:675:1, col:27> col:5 used __unbuffered_p1_EAX 'int' cinit
| `-IntegerLiteral 0x559838a01400 <col:27> 'int' 0
|-VarDecl 0x559838a01438 <line:676:1, col:5> col:5 used __unbuffered_p2_EAX 'int'
|-VarDecl 0x559838a014b8 prev 0x559838a01438 <line:677:1, col:27> col:5 used __unbuffered_p2_EAX 'int' cinit
| `-IntegerLiteral 0x559838a01520 <col:27> 'int' 0
|-VarDecl 0x559838a01558 <line:678:1, col:5> col:5 used __unbuffered_p3_EAX 'int'
|-VarDecl 0x559838a015d8 prev 0x559838a01558 <line:679:1, col:27> col:5 used __unbuffered_p3_EAX 'int' cinit
| `-IntegerLiteral 0x559838a01640 <col:27> 'int' 0
|-VarDecl 0x559838a01678 <line:680:1, col:5> col:5 used __unbuffered_p3_EBX 'int'
|-VarDecl 0x559838a016f8 prev 0x559838a01678 <line:681:1, col:27> col:5 used __unbuffered_p3_EBX 'int' cinit
| `-IntegerLiteral 0x559838a01760 <col:27> 'int' 0
|-VarDecl 0x559838a01798 <line:682:1, col:5> col:5 used a 'int'
|-VarDecl 0x559838a01818 prev 0x559838a01798 <line:683:1, col:9> col:5 used a 'int' cinit
| `-IntegerLiteral 0x559838a01880 <col:9> 'int' 0
|-VarDecl 0x559838a018b8 <line:684:1, col:5> col:5 used b 'int'
|-VarDecl 0x559838a01938 prev 0x559838a018b8 <line:685:1, col:9> col:5 used b 'int' cinit
| `-IntegerLiteral 0x559838a019a0 <col:9> 'int' 0
|-VarDecl 0x559838a019d0 <line:686:1, col:7> col:7 used b$flush_delayed '_Bool'
|-VarDecl 0x559838a01a50 <line:687:1, col:5> col:5 used b$mem_tmp 'int'
|-VarDecl 0x559838a01b00 <line:688:1, col:7> col:7 used b$r_buff0_thd0 '_Bool'
|-VarDecl 0x559838a01b78 <line:689:1, col:7> col:7 used b$r_buff0_thd1 '_Bool'
|-VarDecl 0x559838a01bf0 <line:690:1, col:7> col:7 used b$r_buff0_thd2 '_Bool'
|-VarDecl 0x559838a01c68 <line:691:1, col:7> col:7 used b$r_buff0_thd3 '_Bool'
|-VarDecl 0x559838a01ce0 <line:692:1, col:7> col:7 used b$r_buff0_thd4 '_Bool'
|-VarDecl 0x559838a01d58 <line:693:1, col:7> col:7 used b$r_buff1_thd0 '_Bool'
|-VarDecl 0x559838a01dd0 <line:694:1, col:7> col:7 used b$r_buff1_thd1 '_Bool'
|-VarDecl 0x559838a01e48 <line:695:1, col:7> col:7 used b$r_buff1_thd2 '_Bool'
|-VarDecl 0x559838a01ec0 <line:696:1, col:7> col:7 used b$r_buff1_thd3 '_Bool'
|-VarDecl 0x559838a01f38 <line:697:1, col:7> col:7 used b$r_buff1_thd4 '_Bool'
|-VarDecl 0x559838a01fb0 <line:698:1, col:7> col:7 b$read_delayed '_Bool'
|-VarDecl 0x559838a02030 <line:699:1, col:6> col:6 b$read_delayed_var 'int *'
|-VarDecl 0x559838a020b0 <line:700:1, col:5> col:5 used b$w_buff0 'int'
|-VarDecl 0x559838a02128 <line:701:1, col:7> col:7 used b$w_buff0_used '_Bool'
|-VarDecl 0x559838a021a8 <line:702:1, col:5> col:5 used b$w_buff1 'int'
|-VarDecl 0x559838a02220 <line:703:1, col:7> col:7 used b$w_buff1_used '_Bool'
|-VarDecl 0x559838a02298 <line:704:1, col:7> col:7 used main$tmp_guard0 '_Bool'
|-VarDecl 0x559838a02310 <line:705:1, col:7> col:7 used main$tmp_guard1 '_Bool'
|-VarDecl 0x559838a02390 <line:706:1, col:5> col:5 used x 'int'
|-VarDecl 0x559838a02410 prev 0x559838a02390 <line:707:1, col:9> col:5 used x 'int' cinit
| `-IntegerLiteral 0x559838a02478 <col:9> 'int' 0
|-VarDecl 0x559838a024b0 <line:708:1, col:5> col:5 used y 'int'
|-VarDecl 0x559838a02530 prev 0x559838a024b0 <line:709:1, col:9> col:5 used y 'int' cinit
| `-IntegerLiteral 0x559838a02598 <col:9> 'int' 0
|-VarDecl 0x559838a025d0 <line:710:1, col:5> col:5 used z 'int'
|-VarDecl 0x559838a02650 prev 0x559838a025d0 <line:711:1, col:9> col:5 used z 'int' cinit
| `-IntegerLiteral 0x559838a026b8 <col:9> 'int' 0
|-VarDecl 0x559838a026e8 <line:712:1, col:7> col:7 used weak$$choice0 '_Bool'
|-VarDecl 0x559838a02760 <line:713:1, col:7> col:7 used weak$$choice2 '_Bool'
|-FunctionDecl 0x559838a02878 prev 0x559838a00af0 <line:714:1, line:743:1> line:714:8 used P0 'void *(void *)'
| |-ParmVarDecl 0x559838a027e0 <col:11, col:17> col:17 arg 'void *'
| `-CompoundStmt 0x559838a04118 <line:715:1, line:743:1>
|   |-CallExpr 0x559838a02988 <line:716:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x559838a02970 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x559838a02920 <col:3> 'void ()' Function 0x5598389a7e40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x559838a02a00 <line:717:3, col:15> 'int' '='
|   | |-DeclRefExpr 0x559838a029a8 <col:3> 'int' lvalue Var 0x559838a021a8 'b$w_buff1' 'int'
|   | `-ImplicitCastExpr 0x559838a029e8 <col:15> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x559838a029c8 <col:15> 'int' lvalue Var 0x559838a020b0 'b$w_buff0' 'int'
|   |-BinaryOperator 0x559838a02a60 <line:718:3, col:15> 'int' '='
|   | |-DeclRefExpr 0x559838a02a20 <col:3> 'int' lvalue Var 0x559838a020b0 'b$w_buff0' 'int'
|   | `-IntegerLiteral 0x559838a02a40 <col:15> 'int' 1
|   |-BinaryOperator 0x559838a02ad8 <line:719:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x559838a02a80 <col:3> '_Bool' lvalue Var 0x559838a02220 'b$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x559838a02ac0 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x559838a02aa0 <col:20> '_Bool' lvalue Var 0x559838a02128 'b$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x559838a02b88 <line:720:3, col:27> '_Bool' '='
|   | |-DeclRefExpr 0x559838a02b10 <col:3> '_Bool' lvalue Var 0x559838a02128 'b$w_buff0_used' '_Bool'
|   | `-CStyleCastExpr 0x559838a02b60 <col:20, col:27> '_Bool' <IntegralToBoolean>
|   |   `-IntegerLiteral 0x559838a02b30 <col:27> 'int' 1
|   |-CallExpr 0x559838a02d08 <line:721:3, col:56> 'void'
|   | |-ImplicitCastExpr 0x559838a02cf0 <col:3> 'void (*)(int)' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x559838a02ba8 <col:3> 'void (int)' Function 0x5598389a7bc8 '__VERIFIER_assert' 'void (int)'
|   | `-UnaryOperator 0x559838a02ca8 <col:21, col:55> 'int' prefix '!' cannot overflow
|   |   `-ParenExpr 0x559838a02c88 <col:22, col:55> 'int'
|   |     `-BinaryOperator 0x559838a02c68 <col:23, col:41> 'int' '&&'
|   |       |-ImplicitCastExpr 0x559838a02c20 <col:23> 'int' <IntegralCast>
|   |       | `-ImplicitCastExpr 0x559838a02c08 <col:23> '_Bool' <LValueToRValue>
|   |       |   `-DeclRefExpr 0x559838a02bc8 <col:23> '_Bool' lvalue Var 0x559838a02220 'b$w_buff1_used' '_Bool'
|   |       `-ImplicitCastExpr 0x559838a02c50 <col:41> 'int' <IntegralCast>
|   |         `-ImplicitCastExpr 0x559838a02c38 <col:41> '_Bool' <LValueToRValue>
|   |           `-DeclRefExpr 0x559838a02be8 <col:41> '_Bool' lvalue Var 0x559838a02128 'b$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x559838a02d88 <line:722:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x559838a02d30 <col:3> '_Bool' lvalue Var 0x559838a01d58 'b$r_buff1_thd0' '_Bool'
|   | `-ImplicitCastExpr 0x559838a02d70 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x559838a02d50 <col:20> '_Bool' lvalue Var 0x559838a01b00 'b$r_buff0_thd0' '_Bool'
|   |-BinaryOperator 0x559838a02e00 <line:723:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x559838a02da8 <col:3> '_Bool' lvalue Var 0x559838a01dd0 'b$r_buff1_thd1' '_Bool'
|   | `-ImplicitCastExpr 0x559838a02de8 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x559838a02dc8 <col:20> '_Bool' lvalue Var 0x559838a01b78 'b$r_buff0_thd1' '_Bool'
|   |-BinaryOperator 0x559838a02e78 <line:724:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x559838a02e20 <col:3> '_Bool' lvalue Var 0x559838a01e48 'b$r_buff1_thd2' '_Bool'
|   | `-ImplicitCastExpr 0x559838a02e60 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x559838a02e40 <col:20> '_Bool' lvalue Var 0x559838a01bf0 'b$r_buff0_thd2' '_Bool'
|   |-BinaryOperator 0x559838a02ef0 <line:725:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x559838a02e98 <col:3> '_Bool' lvalue Var 0x559838a01ec0 'b$r_buff1_thd3' '_Bool'
|   | `-ImplicitCastExpr 0x559838a02ed8 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x559838a02eb8 <col:20> '_Bool' lvalue Var 0x559838a01c68 'b$r_buff0_thd3' '_Bool'
|   |-BinaryOperator 0x559838a02f68 <line:726:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x559838a02f10 <col:3> '_Bool' lvalue Var 0x559838a01f38 'b$r_buff1_thd4' '_Bool'
|   | `-ImplicitCastExpr 0x559838a02f50 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x559838a02f30 <col:20> '_Bool' lvalue Var 0x559838a01ce0 'b$r_buff0_thd4' '_Bool'
|   |-BinaryOperator 0x559838a03000 <line:727:3, col:27> '_Bool' '='
|   | |-DeclRefExpr 0x559838a02f88 <col:3> '_Bool' lvalue Var 0x559838a01b78 'b$r_buff0_thd1' '_Bool'
|   | `-CStyleCastExpr 0x559838a02fd8 <col:20, col:27> '_Bool' <IntegralToBoolean>
|   |   `-IntegerLiteral 0x559838a02fa8 <col:27> 'int' 1
|   |-CallExpr 0x559838a03058 <line:728:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x559838a03040 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x559838a03020 <col:3> 'void ()' Function 0x5598389a7f00 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x559838a030b0 <line:729:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x559838a03098 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x559838a03078 <col:3> 'void ()' Function 0x5598389a7e40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x559838a03110 <line:730:3, col:7> 'int' '='
|   | |-DeclRefExpr 0x559838a030d0 <col:3> 'int' lvalue Var 0x559838a02410 'x' 'int'
|   | `-IntegerLiteral 0x559838a030f0 <col:7> 'int' 1
|   |-CallExpr 0x559838a03168 <line:731:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x559838a03150 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x559838a03130 <col:3> 'void ()' Function 0x5598389a7f00 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x559838a031c0 <line:732:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x559838a031a8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x559838a03188 <col:3> 'void ()' Function 0x5598389a7e40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x559838a034a8 <line:733:3, col:103> 'int' '='
|   | |-DeclRefExpr 0x559838a031e0 <col:3> 'int' lvalue Var 0x559838a01938 'b' 'int'
|   | `-ConditionalOperator 0x559838a03478 <col:7, col:103> 'int'
|   |   |-BinaryOperator 0x559838a032a0 <col:7, col:25> 'int' '&&'
|   |   | |-ImplicitCastExpr 0x559838a03258 <col:7> 'int' <IntegralCast>
|   |   | | `-ImplicitCastExpr 0x559838a03240 <col:7> '_Bool' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x559838a03200 <col:7> '_Bool' lvalue Var 0x559838a02128 'b$w_buff0_used' '_Bool'
|   |   | `-ImplicitCastExpr 0x559838a03288 <col:25> 'int' <IntegralCast>
|   |   |   `-ImplicitCastExpr 0x559838a03270 <col:25> '_Bool' <LValueToRValue>
|   |   |     `-DeclRefExpr 0x559838a03220 <col:25> '_Bool' lvalue Var 0x559838a01b78 'b$r_buff0_thd1' '_Bool'
|   |   |-ImplicitCastExpr 0x559838a03460 <col:42> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x559838a032c0 <col:42> 'int' lvalue Var 0x559838a020b0 'b$w_buff0' 'int'
|   |   `-ParenExpr 0x559838a03440 <col:54, col:103> 'int'
|   |     `-ConditionalOperator 0x559838a03410 <col:55, col:102> 'int'
|   |       |-BinaryOperator 0x559838a03380 <col:55, col:73> 'int' '&&'
|   |       | |-ImplicitCastExpr 0x559838a03338 <col:55> 'int' <IntegralCast>
|   |       | | `-ImplicitCastExpr 0x559838a03320 <col:55> '_Bool' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x559838a032e0 <col:55> '_Bool' lvalue Var 0x559838a02220 'b$w_buff1_used' '_Bool'
|   |       | `-ImplicitCastExpr 0x559838a03368 <col:73> 'int' <IntegralCast>
|   |       |   `-ImplicitCastExpr 0x559838a03350 <col:73> '_Bool' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x559838a03300 <col:73> '_Bool' lvalue Var 0x559838a01dd0 'b$r_buff1_thd1' '_Bool'
|   |       |-ImplicitCastExpr 0x559838a033e0 <col:90> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x559838a033a0 <col:90> 'int' lvalue Var 0x559838a021a8 'b$w_buff1' 'int'
|   |       `-ImplicitCastExpr 0x559838a033f8 <col:102> 'int' <LValueToRValue>
|   |         `-DeclRefExpr 0x559838a033c0 <col:102> 'int' lvalue Var 0x559838a01938 'b' 'int'
|   |-BinaryOperator 0x559838a036b0 <line:734:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x559838a034c8 <col:3> '_Bool' lvalue Var 0x559838a02128 'b$w_buff0_used' '_Bool'
|   | `-ImplicitCastExpr 0x559838a03698 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x559838a03668 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x559838a03588 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x559838a03540 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x559838a03528 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x559838a034e8 <col:20> '_Bool' lvalue Var 0x559838a02128 'b$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x559838a03570 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x559838a03558 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x559838a03508 <col:38> '_Bool' lvalue Var 0x559838a01b78 'b$r_buff0_thd1' '_Bool'
|   |     |-ImplicitCastExpr 0x559838a03620 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x559838a035d8 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x559838a035a8 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x559838a03650 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x559838a03638 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x559838a03600 <col:66> '_Bool' lvalue Var 0x559838a02128 'b$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x559838a03998 <line:735:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x559838a036d0 <col:3> '_Bool' lvalue Var 0x559838a02220 'b$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x559838a03980 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x559838a03950 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x559838a03870 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x559838a03790 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x559838a03748 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x559838a03730 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x559838a036f0 <col:20> '_Bool' lvalue Var 0x559838a02128 'b$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x559838a03778 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x559838a03760 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x559838a03710 <col:38> '_Bool' lvalue Var 0x559838a01b78 'b$r_buff0_thd1' '_Bool'
|   |     | `-BinaryOperator 0x559838a03850 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x559838a03808 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x559838a037f0 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x559838a037b0 <col:56> '_Bool' lvalue Var 0x559838a02220 'b$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x559838a03838 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x559838a03820 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x559838a037d0 <col:74> '_Bool' lvalue Var 0x559838a01dd0 'b$r_buff1_thd1' '_Bool'
|   |     |-ImplicitCastExpr 0x559838a03908 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x559838a038c0 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x559838a03890 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x559838a03938 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x559838a03920 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x559838a038e8 <col:102> '_Bool' lvalue Var 0x559838a02220 'b$w_buff1_used' '_Bool'
|   |-BinaryOperator 0x559838a03bb0 <line:736:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x559838a039b8 <col:3> '_Bool' lvalue Var 0x559838a01b78 'b$r_buff0_thd1' '_Bool'
|   | `-ImplicitCastExpr 0x559838a03b98 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x559838a03b68 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x559838a03a78 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x559838a03a30 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x559838a03a18 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x559838a039d8 <col:20> '_Bool' lvalue Var 0x559838a02128 'b$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x559838a03a60 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x559838a03a48 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x559838a039f8 <col:38> '_Bool' lvalue Var 0x559838a01b78 'b$r_buff0_thd1' '_Bool'
|   |     |-ImplicitCastExpr 0x559838a03b20 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x559838a03ac8 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x559838a03a98 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x559838a03b50 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x559838a03b38 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x559838a03af0 <col:66> '_Bool' lvalue Var 0x559838a01b78 'b$r_buff0_thd1' '_Bool'
|   |-BinaryOperator 0x559838a03e98 <line:737:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x559838a03bd0 <col:3> '_Bool' lvalue Var 0x559838a01dd0 'b$r_buff1_thd1' '_Bool'
|   | `-ImplicitCastExpr 0x559838a03e80 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x559838a03e50 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x559838a03d70 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x559838a03c90 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x559838a03c48 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x559838a03c30 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x559838a03bf0 <col:20> '_Bool' lvalue Var 0x559838a02128 'b$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x559838a03c78 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x559838a03c60 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x559838a03c10 <col:38> '_Bool' lvalue Var 0x559838a01b78 'b$r_buff0_thd1' '_Bool'
|   |     | `-BinaryOperator 0x559838a03d50 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x559838a03d08 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x559838a03cf0 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x559838a03cb0 <col:56> '_Bool' lvalue Var 0x559838a02220 'b$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x559838a03d38 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x559838a03d20 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x559838a03cd0 <col:74> '_Bool' lvalue Var 0x559838a01dd0 'b$r_buff1_thd1' '_Bool'
|   |     |-ImplicitCastExpr 0x559838a03e08 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x559838a03dc0 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x559838a03d90 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x559838a03e38 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x559838a03e20 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x559838a03de8 <col:102> '_Bool' lvalue Var 0x559838a01dd0 'b$r_buff1_thd1' '_Bool'
|   |-CallExpr 0x559838a03ef0 <line:738:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x559838a03ed8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x559838a03eb8 <col:3> 'void ()' Function 0x5598389a7f00 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x559838a03f48 <line:739:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x559838a03f30 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x559838a03f10 <col:3> 'void ()' Function 0x5598389a7e40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x559838a04000 <line:740:3, col:41> 'int' '='
|   | |-DeclRefExpr 0x559838a03f68 <col:3> 'int' lvalue Var 0x559838a01278 '__unbuffered_cnt' 'int'
|   | `-BinaryOperator 0x559838a03fe0 <col:22, col:41> 'int' '+'
|   |   |-ImplicitCastExpr 0x559838a03fc8 <col:22> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x559838a03f88 <col:22> 'int' lvalue Var 0x559838a01278 '__unbuffered_cnt' 'int'
|   |   `-IntegerLiteral 0x559838a03fa8 <col:41> 'int' 1
|   |-CallExpr 0x559838a04058 <line:741:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x559838a04040 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x559838a04020 <col:3> 'void ()' Function 0x5598389a7f00 '__VERIFIER_atomic_end' 'void ()'
|   `-ReturnStmt 0x559838a04108 <line:742:3, col:36>
|     `-CallExpr 0x559838a040e8 <col:10, col:36> 'void *'
|       `-ImplicitCastExpr 0x559838a040d0 <col:10> 'void *(*)(void)' <FunctionToPointerDecay>
|         `-DeclRefExpr 0x559838a04078 <col:10> 'void *(void)' Function 0x5598389a7958 '__VERIFIER_nondet_pointer' 'void *(void)'
|-FunctionDecl 0x559838a042b0 prev 0x559838a00c48 <line:744:1, line:763:1> line:744:8 used P1 'void *(void *)'
| |-ParmVarDecl 0x559838a04218 <col:11, col:17> col:17 arg 'void *'
| `-CompoundStmt 0x559838a054f0 <line:745:1, line:763:1>
|   |-CallExpr 0x559838a04390 <line:746:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x559838a04378 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x559838a04358 <col:3> 'void ()' Function 0x5598389a7e40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x559838a043f0 <line:747:3, col:7> 'int' '='
|   | |-DeclRefExpr 0x559838a043b0 <col:3> 'int' lvalue Var 0x559838a02410 'x' 'int'
|   | `-IntegerLiteral 0x559838a043d0 <col:7> 'int' 2
|   |-CallExpr 0x559838a04448 <line:748:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x559838a04430 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x559838a04410 <col:3> 'void ()' Function 0x5598389a7f00 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x559838a044a0 <line:749:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x559838a04488 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x559838a04468 <col:3> 'void ()' Function 0x5598389a7e40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x559838a04518 <line:750:3, col:25> 'int' '='
|   | |-DeclRefExpr 0x559838a044c0 <col:3> 'int' lvalue Var 0x559838a01398 '__unbuffered_p1_EAX' 'int'
|   | `-ImplicitCastExpr 0x559838a04500 <col:25> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x559838a044e0 <col:25> 'int' lvalue Var 0x559838a02530 'y' 'int'
|   |-CallExpr 0x559838a04570 <line:751:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x559838a04558 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x559838a04538 <col:3> 'void ()' Function 0x5598389a7f00 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x559838a045c8 <line:752:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x559838a045b0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x559838a04590 <col:3> 'void ()' Function 0x5598389a7e40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x559838a048b0 <line:753:3, col:103> 'int' '='
|   | |-DeclRefExpr 0x559838a045e8 <col:3> 'int' lvalue Var 0x559838a01938 'b' 'int'
|   | `-ConditionalOperator 0x559838a04880 <col:7, col:103> 'int'
|   |   |-BinaryOperator 0x559838a046a8 <col:7, col:25> 'int' '&&'
|   |   | |-ImplicitCastExpr 0x559838a04660 <col:7> 'int' <IntegralCast>
|   |   | | `-ImplicitCastExpr 0x559838a04648 <col:7> '_Bool' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x559838a04608 <col:7> '_Bool' lvalue Var 0x559838a02128 'b$w_buff0_used' '_Bool'
|   |   | `-ImplicitCastExpr 0x559838a04690 <col:25> 'int' <IntegralCast>
|   |   |   `-ImplicitCastExpr 0x559838a04678 <col:25> '_Bool' <LValueToRValue>
|   |   |     `-DeclRefExpr 0x559838a04628 <col:25> '_Bool' lvalue Var 0x559838a01bf0 'b$r_buff0_thd2' '_Bool'
|   |   |-ImplicitCastExpr 0x559838a04868 <col:42> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x559838a046c8 <col:42> 'int' lvalue Var 0x559838a020b0 'b$w_buff0' 'int'
|   |   `-ParenExpr 0x559838a04848 <col:54, col:103> 'int'
|   |     `-ConditionalOperator 0x559838a04818 <col:55, col:102> 'int'
|   |       |-BinaryOperator 0x559838a04788 <col:55, col:73> 'int' '&&'
|   |       | |-ImplicitCastExpr 0x559838a04740 <col:55> 'int' <IntegralCast>
|   |       | | `-ImplicitCastExpr 0x559838a04728 <col:55> '_Bool' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x559838a046e8 <col:55> '_Bool' lvalue Var 0x559838a02220 'b$w_buff1_used' '_Bool'
|   |       | `-ImplicitCastExpr 0x559838a04770 <col:73> 'int' <IntegralCast>
|   |       |   `-ImplicitCastExpr 0x559838a04758 <col:73> '_Bool' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x559838a04708 <col:73> '_Bool' lvalue Var 0x559838a01e48 'b$r_buff1_thd2' '_Bool'
|   |       |-ImplicitCastExpr 0x559838a047e8 <col:90> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x559838a047a8 <col:90> 'int' lvalue Var 0x559838a021a8 'b$w_buff1' 'int'
|   |       `-ImplicitCastExpr 0x559838a04800 <col:102> 'int' <LValueToRValue>
|   |         `-DeclRefExpr 0x559838a047c8 <col:102> 'int' lvalue Var 0x559838a01938 'b' 'int'
|   |-BinaryOperator 0x559838a04ab8 <line:754:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x559838a048d0 <col:3> '_Bool' lvalue Var 0x559838a02128 'b$w_buff0_used' '_Bool'
|   | `-ImplicitCastExpr 0x559838a04aa0 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x559838a04a70 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x559838a04990 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x559838a04948 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x559838a04930 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x559838a048f0 <col:20> '_Bool' lvalue Var 0x559838a02128 'b$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x559838a04978 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x559838a04960 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x559838a04910 <col:38> '_Bool' lvalue Var 0x559838a01bf0 'b$r_buff0_thd2' '_Bool'
|   |     |-ImplicitCastExpr 0x559838a04a28 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x559838a049e0 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x559838a049b0 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x559838a04a58 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x559838a04a40 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x559838a04a08 <col:66> '_Bool' lvalue Var 0x559838a02128 'b$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x559838a04db8 <line:755:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x559838a04ad8 <col:3> '_Bool' lvalue Var 0x559838a02220 'b$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x559838a04da0 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x559838a04d70 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x559838a04c90 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x559838a04bb0 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x559838a04b68 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x559838a04b50 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x559838a04af8 <col:20> '_Bool' lvalue Var 0x559838a02128 'b$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x559838a04b98 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x559838a04b80 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x559838a04b30 <col:38> '_Bool' lvalue Var 0x559838a01bf0 'b$r_buff0_thd2' '_Bool'
|   |     | `-BinaryOperator 0x559838a04c70 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x559838a04c28 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x559838a04c10 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x559838a04bd0 <col:56> '_Bool' lvalue Var 0x559838a02220 'b$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x559838a04c58 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x559838a04c40 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x559838a04bf0 <col:74> '_Bool' lvalue Var 0x559838a01e48 'b$r_buff1_thd2' '_Bool'
|   |     |-ImplicitCastExpr 0x559838a04d28 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x559838a04ce0 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x559838a04cb0 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x559838a04d58 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x559838a04d40 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x559838a04d08 <col:102> '_Bool' lvalue Var 0x559838a02220 'b$w_buff1_used' '_Bool'
|   |-BinaryOperator 0x559838a04fc0 <line:756:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x559838a04dd8 <col:3> '_Bool' lvalue Var 0x559838a01bf0 'b$r_buff0_thd2' '_Bool'
|   | `-ImplicitCastExpr 0x559838a04fa8 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x559838a04f78 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x559838a04e98 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x559838a04e50 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x559838a04e38 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x559838a04df8 <col:20> '_Bool' lvalue Var 0x559838a02128 'b$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x559838a04e80 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x559838a04e68 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x559838a04e18 <col:38> '_Bool' lvalue Var 0x559838a01bf0 'b$r_buff0_thd2' '_Bool'
|   |     |-ImplicitCastExpr 0x559838a04f30 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x559838a04ee8 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x559838a04eb8 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x559838a04f60 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x559838a04f48 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x559838a04f10 <col:66> '_Bool' lvalue Var 0x559838a01bf0 'b$r_buff0_thd2' '_Bool'
|   |-BinaryOperator 0x559838a052a8 <line:757:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x559838a04fe0 <col:3> '_Bool' lvalue Var 0x559838a01e48 'b$r_buff1_thd2' '_Bool'
|   | `-ImplicitCastExpr 0x559838a05290 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x559838a05260 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x559838a05180 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x559838a050a0 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x559838a05058 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x559838a05040 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x559838a05000 <col:20> '_Bool' lvalue Var 0x559838a02128 'b$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x559838a05088 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x559838a05070 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x559838a05020 <col:38> '_Bool' lvalue Var 0x559838a01bf0 'b$r_buff0_thd2' '_Bool'
|   |     | `-BinaryOperator 0x559838a05160 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x559838a05118 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x559838a05100 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x559838a050c0 <col:56> '_Bool' lvalue Var 0x559838a02220 'b$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x559838a05148 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x559838a05130 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x559838a050e0 <col:74> '_Bool' lvalue Var 0x559838a01e48 'b$r_buff1_thd2' '_Bool'
|   |     |-ImplicitCastExpr 0x559838a05218 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x559838a051d0 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x559838a051a0 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x559838a05248 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x559838a05230 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x559838a051f8 <col:102> '_Bool' lvalue Var 0x559838a01e48 'b$r_buff1_thd2' '_Bool'
|   |-CallExpr 0x559838a05300 <line:758:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x559838a052e8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x559838a052c8 <col:3> 'void ()' Function 0x5598389a7f00 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x559838a05358 <line:759:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x559838a05340 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x559838a05320 <col:3> 'void ()' Function 0x5598389a7e40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x559838a05410 <line:760:3, col:41> 'int' '='
|   | |-DeclRefExpr 0x559838a05378 <col:3> 'int' lvalue Var 0x559838a01278 '__unbuffered_cnt' 'int'
|   | `-BinaryOperator 0x559838a053f0 <col:22, col:41> 'int' '+'
|   |   |-ImplicitCastExpr 0x559838a053d8 <col:22> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x559838a05398 <col:22> 'int' lvalue Var 0x559838a01278 '__unbuffered_cnt' 'int'
|   |   `-IntegerLiteral 0x559838a053b8 <col:41> 'int' 1
|   |-CallExpr 0x559838a05468 <line:761:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x559838a05450 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x559838a05430 <col:3> 'void ()' Function 0x5598389a7f00 '__VERIFIER_atomic_end' 'void ()'
|   `-ReturnStmt 0x559838a054e0 <line:762:3, col:36>
|     `-CallExpr 0x559838a054c0 <col:10, col:36> 'void *'
|       `-ImplicitCastExpr 0x559838a054a8 <col:10> 'void *(*)(void)' <FunctionToPointerDecay>
|         `-DeclRefExpr 0x559838a05488 <col:10> 'void *(void)' Function 0x5598389a7958 '__VERIFIER_nondet_pointer' 'void *(void)'
|-FunctionDecl 0x559838a05638 prev 0x559838a00da0 <line:764:1, line:783:1> line:764:8 used P2 'void *(void *)'
| |-ParmVarDecl 0x559838a055a0 <col:11, col:17> col:17 arg 'void *'
| `-CompoundStmt 0x559838a06870 <line:765:1, line:783:1>
|   |-CallExpr 0x559838a05718 <line:766:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x559838a05700 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x559838a056e0 <col:3> 'void ()' Function 0x5598389a7e40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x559838a05778 <line:767:3, col:7> 'int' '='
|   | |-DeclRefExpr 0x559838a05738 <col:3> 'int' lvalue Var 0x559838a02530 'y' 'int'
|   | `-IntegerLiteral 0x559838a05758 <col:7> 'int' 1
|   |-CallExpr 0x559838a057d0 <line:768:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x559838a057b8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x559838a05798 <col:3> 'void ()' Function 0x5598389a7f00 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x559838a05828 <line:769:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x559838a05810 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x559838a057f0 <col:3> 'void ()' Function 0x5598389a7e40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x559838a058a0 <line:770:3, col:25> 'int' '='
|   | |-DeclRefExpr 0x559838a05848 <col:3> 'int' lvalue Var 0x559838a014b8 '__unbuffered_p2_EAX' 'int'
|   | `-ImplicitCastExpr 0x559838a05888 <col:25> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x559838a05868 <col:25> 'int' lvalue Var 0x559838a02650 'z' 'int'
|   |-CallExpr 0x559838a058f8 <line:771:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x559838a058e0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x559838a058c0 <col:3> 'void ()' Function 0x5598389a7f00 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x559838a05950 <line:772:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x559838a05938 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x559838a05918 <col:3> 'void ()' Function 0x5598389a7e40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x559838a05c48 <line:773:3, col:103> 'int' '='
|   | |-DeclRefExpr 0x559838a05970 <col:3> 'int' lvalue Var 0x559838a01938 'b' 'int'
|   | `-ConditionalOperator 0x559838a05c18 <col:7, col:103> 'int'
|   |   |-BinaryOperator 0x559838a05a30 <col:7, col:25> 'int' '&&'
|   |   | |-ImplicitCastExpr 0x559838a059e8 <col:7> 'int' <IntegralCast>
|   |   | | `-ImplicitCastExpr 0x559838a059d0 <col:7> '_Bool' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x559838a05990 <col:7> '_Bool' lvalue Var 0x559838a02128 'b$w_buff0_used' '_Bool'
|   |   | `-ImplicitCastExpr 0x559838a05a18 <col:25> 'int' <IntegralCast>
|   |   |   `-ImplicitCastExpr 0x559838a05a00 <col:25> '_Bool' <LValueToRValue>
|   |   |     `-DeclRefExpr 0x559838a059b0 <col:25> '_Bool' lvalue Var 0x559838a01c68 'b$r_buff0_thd3' '_Bool'
|   |   |-ImplicitCastExpr 0x559838a05c00 <col:42> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x559838a05a50 <col:42> 'int' lvalue Var 0x559838a020b0 'b$w_buff0' 'int'
|   |   `-ParenExpr 0x559838a05be0 <col:54, col:103> 'int'
|   |     `-ConditionalOperator 0x559838a05bb0 <col:55, col:102> 'int'
|   |       |-BinaryOperator 0x559838a05b10 <col:55, col:73> 'int' '&&'
|   |       | |-ImplicitCastExpr 0x559838a05ac8 <col:55> 'int' <IntegralCast>
|   |       | | `-ImplicitCastExpr 0x559838a05ab0 <col:55> '_Bool' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x559838a05a70 <col:55> '_Bool' lvalue Var 0x559838a02220 'b$w_buff1_used' '_Bool'
|   |       | `-ImplicitCastExpr 0x559838a05af8 <col:73> 'int' <IntegralCast>
|   |       |   `-ImplicitCastExpr 0x559838a05ae0 <col:73> '_Bool' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x559838a05a90 <col:73> '_Bool' lvalue Var 0x559838a01ec0 'b$r_buff1_thd3' '_Bool'
|   |       |-ImplicitCastExpr 0x559838a05b80 <col:90> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x559838a05b40 <col:90> 'int' lvalue Var 0x559838a021a8 'b$w_buff1' 'int'
|   |       `-ImplicitCastExpr 0x559838a05b98 <col:102> 'int' <LValueToRValue>
|   |         `-DeclRefExpr 0x559838a05b60 <col:102> 'int' lvalue Var 0x559838a01938 'b' 'int'
|   |-BinaryOperator 0x559838a05e50 <line:774:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x559838a05c68 <col:3> '_Bool' lvalue Var 0x559838a02128 'b$w_buff0_used' '_Bool'
|   | `-ImplicitCastExpr 0x559838a05e38 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x559838a05e08 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x559838a05d28 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x559838a05ce0 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x559838a05cc8 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x559838a05c88 <col:20> '_Bool' lvalue Var 0x559838a02128 'b$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x559838a05d10 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x559838a05cf8 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x559838a05ca8 <col:38> '_Bool' lvalue Var 0x559838a01c68 'b$r_buff0_thd3' '_Bool'
|   |     |-ImplicitCastExpr 0x559838a05dc0 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x559838a05d78 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x559838a05d48 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x559838a05df0 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x559838a05dd8 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x559838a05da0 <col:66> '_Bool' lvalue Var 0x559838a02128 'b$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x559838a06138 <line:775:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x559838a05e70 <col:3> '_Bool' lvalue Var 0x559838a02220 'b$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x559838a06120 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x559838a060f0 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x559838a06010 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x559838a05f30 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x559838a05ee8 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x559838a05ed0 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x559838a05e90 <col:20> '_Bool' lvalue Var 0x559838a02128 'b$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x559838a05f18 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x559838a05f00 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x559838a05eb0 <col:38> '_Bool' lvalue Var 0x559838a01c68 'b$r_buff0_thd3' '_Bool'
|   |     | `-BinaryOperator 0x559838a05ff0 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x559838a05fa8 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x559838a05f90 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x559838a05f50 <col:56> '_Bool' lvalue Var 0x559838a02220 'b$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x559838a05fd8 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x559838a05fc0 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x559838a05f70 <col:74> '_Bool' lvalue Var 0x559838a01ec0 'b$r_buff1_thd3' '_Bool'
|   |     |-ImplicitCastExpr 0x559838a060a8 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x559838a06060 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x559838a06030 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x559838a060d8 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x559838a060c0 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x559838a06088 <col:102> '_Bool' lvalue Var 0x559838a02220 'b$w_buff1_used' '_Bool'
|   |-BinaryOperator 0x559838a06340 <line:776:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x559838a06158 <col:3> '_Bool' lvalue Var 0x559838a01c68 'b$r_buff0_thd3' '_Bool'
|   | `-ImplicitCastExpr 0x559838a06328 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x559838a062f8 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x559838a06218 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x559838a061d0 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x559838a061b8 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x559838a06178 <col:20> '_Bool' lvalue Var 0x559838a02128 'b$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x559838a06200 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x559838a061e8 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x559838a06198 <col:38> '_Bool' lvalue Var 0x559838a01c68 'b$r_buff0_thd3' '_Bool'
|   |     |-ImplicitCastExpr 0x559838a062b0 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x559838a06268 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x559838a06238 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x559838a062e0 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x559838a062c8 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x559838a06290 <col:66> '_Bool' lvalue Var 0x559838a01c68 'b$r_buff0_thd3' '_Bool'
|   |-BinaryOperator 0x559838a06628 <line:777:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x559838a06360 <col:3> '_Bool' lvalue Var 0x559838a01ec0 'b$r_buff1_thd3' '_Bool'
|   | `-ImplicitCastExpr 0x559838a06610 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x559838a065e0 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x559838a06500 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x559838a06420 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x559838a063d8 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x559838a063c0 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x559838a06380 <col:20> '_Bool' lvalue Var 0x559838a02128 'b$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x559838a06408 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x559838a063f0 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x559838a063a0 <col:38> '_Bool' lvalue Var 0x559838a01c68 'b$r_buff0_thd3' '_Bool'
|   |     | `-BinaryOperator 0x559838a064e0 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x559838a06498 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x559838a06480 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x559838a06440 <col:56> '_Bool' lvalue Var 0x559838a02220 'b$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x559838a064c8 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x559838a064b0 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x559838a06460 <col:74> '_Bool' lvalue Var 0x559838a01ec0 'b$r_buff1_thd3' '_Bool'
|   |     |-ImplicitCastExpr 0x559838a06598 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x559838a06550 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x559838a06520 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x559838a065c8 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x559838a065b0 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x559838a06578 <col:102> '_Bool' lvalue Var 0x559838a01ec0 'b$r_buff1_thd3' '_Bool'
|   |-CallExpr 0x559838a06680 <line:778:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x559838a06668 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x559838a06648 <col:3> 'void ()' Function 0x5598389a7f00 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x559838a066d8 <line:779:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x559838a066c0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x559838a066a0 <col:3> 'void ()' Function 0x5598389a7e40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x559838a06790 <line:780:3, col:41> 'int' '='
|   | |-DeclRefExpr 0x559838a066f8 <col:3> 'int' lvalue Var 0x559838a01278 '__unbuffered_cnt' 'int'
|   | `-BinaryOperator 0x559838a06770 <col:22, col:41> 'int' '+'
|   |   |-ImplicitCastExpr 0x559838a06758 <col:22> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x559838a06718 <col:22> 'int' lvalue Var 0x559838a01278 '__unbuffered_cnt' 'int'
|   |   `-IntegerLiteral 0x559838a06738 <col:41> 'int' 1
|   |-CallExpr 0x559838a067e8 <line:781:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x559838a067d0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x559838a067b0 <col:3> 'void ()' Function 0x5598389a7f00 '__VERIFIER_atomic_end' 'void ()'
|   `-ReturnStmt 0x559838a06860 <line:782:3, col:36>
|     `-CallExpr 0x559838a06840 <col:10, col:36> 'void *'
|       `-ImplicitCastExpr 0x559838a06828 <col:10> 'void *(*)(void)' <FunctionToPointerDecay>
|         `-DeclRefExpr 0x559838a06808 <col:10> 'void *(void)' Function 0x5598389a7958 '__VERIFIER_nondet_pointer' 'void *(void)'
|-FunctionDecl 0x559838a069b8 prev 0x559838a00ef8 <line:784:1, line:822:1> line:784:8 used P3 'void *(void *)'
| |-ParmVarDecl 0x559838a06920 <col:11, col:17> col:17 arg 'void *'
| `-CompoundStmt 0x559838a0a7d8 <line:785:1, line:822:1>
|   |-CallExpr 0x559838a06a98 <line:786:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x559838a06a80 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x559838a06a60 <col:3> 'void ()' Function 0x5598389a7e40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x559838a06af8 <line:787:3, col:7> 'int' '='
|   | |-DeclRefExpr 0x559838a06ab8 <col:3> 'int' lvalue Var 0x559838a02650 'z' 'int'
|   | `-IntegerLiteral 0x559838a06ad8 <col:7> 'int' 1
|   |-CallExpr 0x559838a06b68 <line:788:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x559838a06b50 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x559838a06b18 <col:3> 'void ()' Function 0x5598389a7f00 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x559838a06bc0 <line:789:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x559838a06ba8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x559838a06b88 <col:3> 'void ()' Function 0x5598389a7e40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x559838a06c20 <line:790:3, col:7> 'int' '='
|   | |-DeclRefExpr 0x559838a06be0 <col:3> 'int' lvalue Var 0x559838a01818 'a' 'int'
|   | `-IntegerLiteral 0x559838a06c00 <col:7> 'int' 1
|   |-CallExpr 0x559838a06c78 <line:791:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x559838a06c60 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x559838a06c40 <col:3> 'void ()' Function 0x5598389a7f00 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x559838a06cd0 <line:792:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x559838a06cb8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x559838a06c98 <col:3> 'void ()' Function 0x5598389a7e40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x559838a06d48 <line:793:3, col:25> 'int' '='
|   | |-DeclRefExpr 0x559838a06cf0 <col:3> 'int' lvalue Var 0x559838a015d8 '__unbuffered_p3_EAX' 'int'
|   | `-ImplicitCastExpr 0x559838a06d30 <col:25> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x559838a06d10 <col:25> 'int' lvalue Var 0x559838a01818 'a' 'int'
|   |-CallExpr 0x559838a06da0 <line:794:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x559838a06d88 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x559838a06d68 <col:3> 'void ()' Function 0x5598389a7f00 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x559838a06df8 <line:795:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x559838a06de0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x559838a06dc0 <col:3> 'void ()' Function 0x5598389a7e40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x559838a06ea8 <line:796:3, col:45> '_Bool' '='
|   | |-DeclRefExpr 0x559838a06e18 <col:3> '_Bool' lvalue Var 0x559838a026e8 'weak$$choice0' '_Bool'
|   | `-ImplicitCastExpr 0x559838a06e90 <col:19, col:45> '_Bool' <PointerToBoolean>
|   |   `-CallExpr 0x559838a06e70 <col:19, col:45> 'void *'
|   |     `-ImplicitCastExpr 0x559838a06e58 <col:19> 'void *(*)(void)' <FunctionToPointerDecay>
|   |       `-DeclRefExpr 0x559838a06e38 <col:19> 'void *(void)' Function 0x5598389a7958 '__VERIFIER_nondet_pointer' 'void *(void)'
|   |-BinaryOperator 0x559838a06f58 <line:797:3, col:45> '_Bool' '='
|   | |-DeclRefExpr 0x559838a06ec8 <col:3> '_Bool' lvalue Var 0x559838a02760 'weak$$choice2' '_Bool'
|   | `-ImplicitCastExpr 0x559838a06f40 <col:19, col:45> '_Bool' <PointerToBoolean>
|   |   `-CallExpr 0x559838a06f20 <col:19, col:45> 'void *'
|   |     `-ImplicitCastExpr 0x559838a06f08 <col:19> 'void *(*)(void)' <FunctionToPointerDecay>
|   |       `-DeclRefExpr 0x559838a06ee8 <col:19> 'void *(void)' Function 0x5598389a7958 '__VERIFIER_nondet_pointer' 'void *(void)'
|   |-BinaryOperator 0x559838a06fd0 <line:798:3, col:21> '_Bool' '='
|   | |-DeclRefExpr 0x559838a06f78 <col:3> '_Bool' lvalue Var 0x559838a019d0 'b$flush_delayed' '_Bool'
|   | `-ImplicitCastExpr 0x559838a06fb8 <col:21> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x559838a06f98 <col:21> '_Bool' lvalue Var 0x559838a02760 'weak$$choice2' '_Bool'
|   |-BinaryOperator 0x559838a07048 <line:799:3, col:15> 'int' '='
|   | |-DeclRefExpr 0x559838a06ff0 <col:3> 'int' lvalue Var 0x559838a01a50 'b$mem_tmp' 'int'
|   | `-ImplicitCastExpr 0x559838a07030 <col:15> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x559838a07010 <col:15> 'int' lvalue Var 0x559838a01938 'b' 'int'
|   |-BinaryOperator 0x559838a07480 <line:800:3, col:162> 'int' '='
|   | |-DeclRefExpr 0x559838a07068 <col:3> 'int' lvalue Var 0x559838a01938 'b' 'int'
|   | `-ConditionalOperator 0x559838a07450 <col:7, col:162> 'int'
|   |   |-BinaryOperator 0x559838a07278 <col:7, col:84> 'int' '||'
|   |   | |-BinaryOperator 0x559838a07198 <col:7, col:46> 'int' '||'
|   |   | | |-UnaryOperator 0x559838a070c0 <col:7, col:8> 'int' prefix '!' cannot overflow
|   |   | | | `-ImplicitCastExpr 0x559838a070a8 <col:8> '_Bool' <LValueToRValue>
|   |   | | |   `-DeclRefExpr 0x559838a07088 <col:8> '_Bool' lvalue Var 0x559838a02128 'b$w_buff0_used' '_Bool'
|   |   | | `-BinaryOperator 0x559838a07178 <col:26, col:46> 'int' '&&'
|   |   | |   |-UnaryOperator 0x559838a07110 <col:26, col:27> 'int' prefix '!' cannot overflow
|   |   | |   | `-ImplicitCastExpr 0x559838a070f8 <col:27> '_Bool' <LValueToRValue>
|   |   | |   |   `-DeclRefExpr 0x559838a070d8 <col:27> '_Bool' lvalue Var 0x559838a01ce0 'b$r_buff0_thd4' '_Bool'
|   |   | |   `-UnaryOperator 0x559838a07160 <col:45, col:46> 'int' prefix '!' cannot overflow
|   |   | |     `-ImplicitCastExpr 0x559838a07148 <col:46> '_Bool' <LValueToRValue>
|   |   | |       `-DeclRefExpr 0x559838a07128 <col:46> '_Bool' lvalue Var 0x559838a02220 'b$w_buff1_used' '_Bool'
|   |   | `-BinaryOperator 0x559838a07258 <col:64, col:84> 'int' '&&'
|   |   |   |-UnaryOperator 0x559838a071f0 <col:64, col:65> 'int' prefix '!' cannot overflow
|   |   |   | `-ImplicitCastExpr 0x559838a071d8 <col:65> '_Bool' <LValueToRValue>
|   |   |   |   `-DeclRefExpr 0x559838a071b8 <col:65> '_Bool' lvalue Var 0x559838a01ce0 'b$r_buff0_thd4' '_Bool'
|   |   |   `-UnaryOperator 0x559838a07240 <col:83, col:84> 'int' prefix '!' cannot overflow
|   |   |     `-ImplicitCastExpr 0x559838a07228 <col:84> '_Bool' <LValueToRValue>
|   |   |       `-DeclRefExpr 0x559838a07208 <col:84> '_Bool' lvalue Var 0x559838a01f38 'b$r_buff1_thd4' '_Bool'
|   |   |-ImplicitCastExpr 0x559838a07438 <col:101> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x559838a07298 <col:101> 'int' lvalue Var 0x559838a01938 'b' 'int'
|   |   `-ParenExpr 0x559838a07418 <col:105, col:162> 'int'
|   |     `-ConditionalOperator 0x559838a073e8 <col:106, col:153> 'int'
|   |       |-BinaryOperator 0x559838a07358 <col:106, col:124> 'int' '&&'
|   |       | |-ImplicitCastExpr 0x559838a07310 <col:106> 'int' <IntegralCast>
|   |       | | `-ImplicitCastExpr 0x559838a072f8 <col:106> '_Bool' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x559838a072b8 <col:106> '_Bool' lvalue Var 0x559838a02128 'b$w_buff0_used' '_Bool'
|   |       | `-ImplicitCastExpr 0x559838a07340 <col:124> 'int' <IntegralCast>
|   |       |   `-ImplicitCastExpr 0x559838a07328 <col:124> '_Bool' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x559838a072d8 <col:124> '_Bool' lvalue Var 0x559838a01ce0 'b$r_buff0_thd4' '_Bool'
|   |       |-ImplicitCastExpr 0x559838a073b8 <col:141> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x559838a07378 <col:141> 'int' lvalue Var 0x559838a020b0 'b$w_buff0' 'int'
|   |       `-ImplicitCastExpr 0x559838a073d0 <col:153> 'int' <LValueToRValue>
|   |         `-DeclRefExpr 0x559838a07398 <col:153> 'int' lvalue Var 0x559838a021a8 'b$w_buff1' 'int'
|   |-BinaryOperator 0x559838a07990 <line:801:3, col:208> 'int' '='
|   | |-DeclRefExpr 0x559838a074a0 <col:3> 'int' lvalue Var 0x559838a020b0 'b$w_buff0' 'int'
|   | `-ConditionalOperator 0x559838a07960 <col:15, col:208> 'int'
|   |   |-ImplicitCastExpr 0x559838a07930 <col:15> 'int' <IntegralCast>
|   |   | `-ImplicitCastExpr 0x559838a07918 <col:15> '_Bool' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x559838a074c0 <col:15> '_Bool' lvalue Var 0x559838a02760 'weak$$choice2' '_Bool'
|   |   |-ImplicitCastExpr 0x559838a07948 <col:31> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x559838a074e0 <col:31> 'int' lvalue Var 0x559838a020b0 'b$w_buff0' 'int'
|   |   `-ParenExpr 0x559838a078f8 <col:43, col:208> 'int'
|   |     `-ConditionalOperator 0x559838a078c8 <col:44, col:207> 'int'
|   |       |-BinaryOperator 0x559838a076f0 <col:44, col:121> 'int' '||'
|   |       | |-BinaryOperator 0x559838a07610 <col:44, col:83> 'int' '||'
|   |       | | |-UnaryOperator 0x559838a07538 <col:44, col:45> 'int' prefix '!' cannot overflow
|   |       | | | `-ImplicitCastExpr 0x559838a07520 <col:45> '_Bool' <LValueToRValue>
|   |       | | |   `-DeclRefExpr 0x559838a07500 <col:45> '_Bool' lvalue Var 0x559838a02128 'b$w_buff0_used' '_Bool'
|   |       | | `-BinaryOperator 0x559838a075f0 <col:63, col:83> 'int' '&&'
|   |       | |   |-UnaryOperator 0x559838a07588 <col:63, col:64> 'int' prefix '!' cannot overflow
|   |       | |   | `-ImplicitCastExpr 0x559838a07570 <col:64> '_Bool' <LValueToRValue>
|   |       | |   |   `-DeclRefExpr 0x559838a07550 <col:64> '_Bool' lvalue Var 0x559838a01ce0 'b$r_buff0_thd4' '_Bool'
|   |       | |   `-UnaryOperator 0x559838a075d8 <col:82, col:83> 'int' prefix '!' cannot overflow
|   |       | |     `-ImplicitCastExpr 0x559838a075c0 <col:83> '_Bool' <LValueToRValue>
|   |       | |       `-DeclRefExpr 0x559838a075a0 <col:83> '_Bool' lvalue Var 0x559838a02220 'b$w_buff1_used' '_Bool'
|   |       | `-BinaryOperator 0x559838a076d0 <col:101, col:121> 'int' '&&'
|   |       |   |-UnaryOperator 0x559838a07668 <col:101, col:102> 'int' prefix '!' cannot overflow
|   |       |   | `-ImplicitCastExpr 0x559838a07650 <col:102> '_Bool' <LValueToRValue>
|   |       |   |   `-DeclRefExpr 0x559838a07630 <col:102> '_Bool' lvalue Var 0x559838a01ce0 'b$r_buff0_thd4' '_Bool'
|   |       |   `-UnaryOperator 0x559838a076b8 <col:120, col:121> 'int' prefix '!' cannot overflow
|   |       |     `-ImplicitCastExpr 0x559838a076a0 <col:121> '_Bool' <LValueToRValue>
|   |       |       `-DeclRefExpr 0x559838a07680 <col:121> '_Bool' lvalue Var 0x559838a01f38 'b$r_buff1_thd4' '_Bool'
|   |       |-ImplicitCastExpr 0x559838a078b0 <col:138> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x559838a07710 <col:138> 'int' lvalue Var 0x559838a020b0 'b$w_buff0' 'int'
|   |       `-ParenExpr 0x559838a07890 <col:150, col:207> 'int'
|   |         `-ConditionalOperator 0x559838a07860 <col:151, col:198> 'int'
|   |           |-BinaryOperator 0x559838a077d0 <col:151, col:169> 'int' '&&'
|   |           | |-ImplicitCastExpr 0x559838a07788 <col:151> 'int' <IntegralCast>
|   |           | | `-ImplicitCastExpr 0x559838a07770 <col:151> '_Bool' <LValueToRValue>
|   |           | |   `-DeclRefExpr 0x559838a07730 <col:151> '_Bool' lvalue Var 0x559838a02128 'b$w_buff0_used' '_Bool'
|   |           | `-ImplicitCastExpr 0x559838a077b8 <col:169> 'int' <IntegralCast>
|   |           |   `-ImplicitCastExpr 0x559838a077a0 <col:169> '_Bool' <LValueToRValue>
|   |           |     `-DeclRefExpr 0x559838a07750 <col:169> '_Bool' lvalue Var 0x559838a01ce0 'b$r_buff0_thd4' '_Bool'
|   |           |-ImplicitCastExpr 0x559838a07830 <col:186> 'int' <LValueToRValue>
|   |           | `-DeclRefExpr 0x559838a077f0 <col:186> 'int' lvalue Var 0x559838a020b0 'b$w_buff0' 'int'
|   |           `-ImplicitCastExpr 0x559838a07848 <col:198> 'int' <LValueToRValue>
|   |             `-DeclRefExpr 0x559838a07810 <col:198> 'int' lvalue Var 0x559838a020b0 'b$w_buff0' 'int'
|   |-BinaryOperator 0x559838a07ec0 <line:802:3, col:208> 'int' '='
|   | |-DeclRefExpr 0x559838a079b0 <col:3> 'int' lvalue Var 0x559838a021a8 'b$w_buff1' 'int'
|   | `-ConditionalOperator 0x559838a07e90 <col:15, col:208> 'int'
|   |   |-ImplicitCastExpr 0x559838a07e60 <col:15> 'int' <IntegralCast>
|   |   | `-ImplicitCastExpr 0x559838a07e48 <col:15> '_Bool' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x559838a079d0 <col:15> '_Bool' lvalue Var 0x559838a02760 'weak$$choice2' '_Bool'
|   |   |-ImplicitCastExpr 0x559838a07e78 <col:31> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x559838a079f0 <col:31> 'int' lvalue Var 0x559838a021a8 'b$w_buff1' 'int'
|   |   `-ParenExpr 0x559838a07e28 <col:43, col:208> 'int'
|   |     `-ConditionalOperator 0x559838a07df8 <col:44, col:207> 'int'
|   |       |-BinaryOperator 0x559838a07c20 <col:44, col:121> 'int' '||'
|   |       | |-BinaryOperator 0x559838a07b20 <col:44, col:83> 'int' '||'
|   |       | | |-UnaryOperator 0x559838a07a48 <col:44, col:45> 'int' prefix '!' cannot overflow
|   |       | | | `-ImplicitCastExpr 0x559838a07a30 <col:45> '_Bool' <LValueToRValue>
|   |       | | |   `-DeclRefExpr 0x559838a07a10 <col:45> '_Bool' lvalue Var 0x559838a02128 'b$w_buff0_used' '_Bool'
|   |       | | `-BinaryOperator 0x559838a07b00 <col:63, col:83> 'int' '&&'
|   |       | |   |-UnaryOperator 0x559838a07a98 <col:63, col:64> 'int' prefix '!' cannot overflow
|   |       | |   | `-ImplicitCastExpr 0x559838a07a80 <col:64> '_Bool' <LValueToRValue>
|   |       | |   |   `-DeclRefExpr 0x559838a07a60 <col:64> '_Bool' lvalue Var 0x559838a01ce0 'b$r_buff0_thd4' '_Bool'
|   |       | |   `-UnaryOperator 0x559838a07ae8 <col:82, col:83> 'int' prefix '!' cannot overflow
|   |       | |     `-ImplicitCastExpr 0x559838a07ad0 <col:83> '_Bool' <LValueToRValue>
|   |       | |       `-DeclRefExpr 0x559838a07ab0 <col:83> '_Bool' lvalue Var 0x559838a02220 'b$w_buff1_used' '_Bool'
|   |       | `-BinaryOperator 0x559838a07c00 <col:101, col:121> 'int' '&&'
|   |       |   |-UnaryOperator 0x559838a07b98 <col:101, col:102> 'int' prefix '!' cannot overflow
|   |       |   | `-ImplicitCastExpr 0x559838a07b80 <col:102> '_Bool' <LValueToRValue>
|   |       |   |   `-DeclRefExpr 0x559838a07b60 <col:102> '_Bool' lvalue Var 0x559838a01ce0 'b$r_buff0_thd4' '_Bool'
|   |       |   `-UnaryOperator 0x559838a07be8 <col:120, col:121> 'int' prefix '!' cannot overflow
|   |       |     `-ImplicitCastExpr 0x559838a07bd0 <col:121> '_Bool' <LValueToRValue>
|   |       |       `-DeclRefExpr 0x559838a07bb0 <col:121> '_Bool' lvalue Var 0x559838a01f38 'b$r_buff1_thd4' '_Bool'
|   |       |-ImplicitCastExpr 0x559838a07de0 <col:138> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x559838a07c40 <col:138> 'int' lvalue Var 0x559838a021a8 'b$w_buff1' 'int'
|   |       `-ParenExpr 0x559838a07dc0 <col:150, col:207> 'int'
|   |         `-ConditionalOperator 0x559838a07d90 <col:151, col:198> 'int'
|   |           |-BinaryOperator 0x559838a07d00 <col:151, col:169> 'int' '&&'
|   |           | |-ImplicitCastExpr 0x559838a07cb8 <col:151> 'int' <IntegralCast>
|   |           | | `-ImplicitCastExpr 0x559838a07ca0 <col:151> '_Bool' <LValueToRValue>
|   |           | |   `-DeclRefExpr 0x559838a07c60 <col:151> '_Bool' lvalue Var 0x559838a02128 'b$w_buff0_used' '_Bool'
|   |           | `-ImplicitCastExpr 0x559838a07ce8 <col:169> 'int' <IntegralCast>
|   |           |   `-ImplicitCastExpr 0x559838a07cd0 <col:169> '_Bool' <LValueToRValue>
|   |           |     `-DeclRefExpr 0x559838a07c80 <col:169> '_Bool' lvalue Var 0x559838a01ce0 'b$r_buff0_thd4' '_Bool'
|   |           |-ImplicitCastExpr 0x559838a07d60 <col:186> 'int' <LValueToRValue>
|   |           | `-DeclRefExpr 0x559838a07d20 <col:186> 'int' lvalue Var 0x559838a021a8 'b$w_buff1' 'int'
|   |           `-ImplicitCastExpr 0x559838a07d78 <col:198> 'int' <LValueToRValue>
|   |             `-DeclRefExpr 0x559838a07d40 <col:198> 'int' lvalue Var 0x559838a021a8 'b$w_buff1' 'int'
|   |-BinaryOperator 0x559838a08468 <line:803:3, col:227> '_Bool' '='
|   | |-DeclRefExpr 0x559838a07ee0 <col:3> '_Bool' lvalue Var 0x559838a02128 'b$w_buff0_used' '_Bool'
|   | `-ImplicitCastExpr 0x559838a08450 <col:20, col:227> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x559838a08420 <col:20, col:227> 'int'
|   |     |-ImplicitCastExpr 0x559838a083d8 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x559838a083c0 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x559838a07f00 <col:20> '_Bool' lvalue Var 0x559838a02760 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x559838a08408 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x559838a083f0 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x559838a07f20 <col:36> '_Bool' lvalue Var 0x559838a02128 'b$w_buff0_used' '_Bool'
|   |     `-ParenExpr 0x559838a083a0 <col:53, col:227> 'int'
|   |       `-ConditionalOperator 0x559838a08370 <col:54, col:226> 'int'
|   |         |-BinaryOperator 0x559838a08130 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x559838a08050 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x559838a07f78 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x559838a07f60 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x559838a07f40 <col:55> '_Bool' lvalue Var 0x559838a02128 'b$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x559838a08030 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x559838a07fc8 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x559838a07fb0 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x559838a07f90 <col:74> '_Bool' lvalue Var 0x559838a01ce0 'b$r_buff0_thd4' '_Bool'
|   |         | |   `-UnaryOperator 0x559838a08018 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x559838a08000 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x559838a07fe0 <col:93> '_Bool' lvalue Var 0x559838a02220 'b$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x559838a08110 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x559838a080a8 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x559838a08090 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x559838a08070 <col:112> '_Bool' lvalue Var 0x559838a01ce0 'b$r_buff0_thd4' '_Bool'
|   |         |   `-UnaryOperator 0x559838a080f8 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x559838a080e0 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x559838a080c0 <col:131> '_Bool' lvalue Var 0x559838a01f38 'b$r_buff1_thd4' '_Bool'
|   |         |-ImplicitCastExpr 0x559838a08358 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x559838a08340 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x559838a08150 <col:148> '_Bool' lvalue Var 0x559838a02128 'b$w_buff0_used' '_Bool'
|   |         `-ParenExpr 0x559838a08320 <col:165, col:226> 'int'
|   |           `-ConditionalOperator 0x559838a082f0 <col:166, col:212> 'int'
|   |             |-BinaryOperator 0x559838a08210 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x559838a081c8 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x559838a081b0 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x559838a08170 <col:166> '_Bool' lvalue Var 0x559838a02128 'b$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x559838a081f8 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x559838a081e0 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x559838a08190 <col:184> '_Bool' lvalue Var 0x559838a01ce0 'b$r_buff0_thd4' '_Bool'
|   |             |-ImplicitCastExpr 0x559838a082a8 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x559838a08260 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x559838a08230 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x559838a082d8 <col:212> 'int' <IntegralCast>
|   |               `-ImplicitCastExpr 0x559838a082c0 <col:212> '_Bool' <LValueToRValue>
|   |                 `-DeclRefExpr 0x559838a08288 <col:212> '_Bool' lvalue Var 0x559838a02128 'b$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x559838a08a30 <line:804:3, col:221> '_Bool' '='
|   | |-DeclRefExpr 0x559838a08488 <col:3> '_Bool' lvalue Var 0x559838a02220 'b$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x559838a08a18 <col:20, col:221> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x559838a089e8 <col:20, col:221> 'int'
|   |     |-ImplicitCastExpr 0x559838a089a0 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x559838a08988 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x559838a084a8 <col:20> '_Bool' lvalue Var 0x559838a02760 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x559838a089d0 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x559838a089b8 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x559838a084c8 <col:36> '_Bool' lvalue Var 0x559838a02220 'b$w_buff1_used' '_Bool'
|   |     `-ParenExpr 0x559838a08968 <col:53, col:221> 'int'
|   |       `-ConditionalOperator 0x559838a08938 <col:54, col:220> 'int'
|   |         |-BinaryOperator 0x559838a086d8 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x559838a085f8 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x559838a08520 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x559838a08508 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x559838a084e8 <col:55> '_Bool' lvalue Var 0x559838a02128 'b$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x559838a085d8 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x559838a08570 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x559838a08558 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x559838a08538 <col:74> '_Bool' lvalue Var 0x559838a01ce0 'b$r_buff0_thd4' '_Bool'
|   |         | |   `-UnaryOperator 0x559838a085c0 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x559838a085a8 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x559838a08588 <col:93> '_Bool' lvalue Var 0x559838a02220 'b$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x559838a086b8 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x559838a08650 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x559838a08638 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x559838a08618 <col:112> '_Bool' lvalue Var 0x559838a01ce0 'b$r_buff0_thd4' '_Bool'
|   |         |   `-UnaryOperator 0x559838a086a0 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x559838a08688 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x559838a08668 <col:131> '_Bool' lvalue Var 0x559838a01f38 'b$r_buff1_thd4' '_Bool'
|   |         |-ImplicitCastExpr 0x559838a08920 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x559838a08908 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x559838a086f8 <col:148> '_Bool' lvalue Var 0x559838a02220 'b$w_buff1_used' '_Bool'
|   |         `-ParenExpr 0x559838a088e8 <col:165, col:220> 'int'
|   |           `-ConditionalOperator 0x559838a088b8 <col:166, col:219> 'int'
|   |             |-BinaryOperator 0x559838a087b8 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x559838a08770 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x559838a08758 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x559838a08718 <col:166> '_Bool' lvalue Var 0x559838a02128 'b$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x559838a087a0 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x559838a08788 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x559838a08738 <col:184> '_Bool' lvalue Var 0x559838a01ce0 'b$r_buff0_thd4' '_Bool'
|   |             |-ImplicitCastExpr 0x559838a08888 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x559838a08808 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x559838a087d8 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x559838a088a0 <col:212, col:219> 'int' <IntegralCast>
|   |               `-CStyleCastExpr 0x559838a08860 <col:212, col:219> '_Bool' <IntegralToBoolean>
|   |                 `-IntegerLiteral 0x559838a08830 <col:219> 'int' 0
|   |-BinaryOperator 0x559838a08ff8 <line:805:3, col:227> '_Bool' '='
|   | |-DeclRefExpr 0x559838a08a50 <col:3> '_Bool' lvalue Var 0x559838a01ce0 'b$r_buff0_thd4' '_Bool'
|   | `-ImplicitCastExpr 0x559838a08fe0 <col:20, col:227> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x559838a08fb0 <col:20, col:227> 'int'
|   |     |-ImplicitCastExpr 0x559838a08f68 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x559838a08f50 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x559838a08a70 <col:20> '_Bool' lvalue Var 0x559838a02760 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x559838a08f98 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x559838a08f80 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x559838a08a90 <col:36> '_Bool' lvalue Var 0x559838a01ce0 'b$r_buff0_thd4' '_Bool'
|   |     `-ParenExpr 0x559838a08f30 <col:53, col:227> 'int'
|   |       `-ConditionalOperator 0x559838a08f00 <col:54, col:226> 'int'
|   |         |-BinaryOperator 0x559838a08cc0 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x559838a08be0 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x559838a08ae8 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x559838a08ad0 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x559838a08ab0 <col:55> '_Bool' lvalue Var 0x559838a02128 'b$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x559838a08bc0 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x559838a08b38 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x559838a08b20 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x559838a08b00 <col:74> '_Bool' lvalue Var 0x559838a01ce0 'b$r_buff0_thd4' '_Bool'
|   |         | |   `-UnaryOperator 0x559838a08ba8 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x559838a08b90 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x559838a08b70 <col:93> '_Bool' lvalue Var 0x559838a02220 'b$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x559838a08ca0 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x559838a08c38 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x559838a08c20 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x559838a08c00 <col:112> '_Bool' lvalue Var 0x559838a01ce0 'b$r_buff0_thd4' '_Bool'
|   |         |   `-UnaryOperator 0x559838a08c88 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x559838a08c70 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x559838a08c50 <col:131> '_Bool' lvalue Var 0x559838a01f38 'b$r_buff1_thd4' '_Bool'
|   |         |-ImplicitCastExpr 0x559838a08ee8 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x559838a08ed0 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x559838a08ce0 <col:148> '_Bool' lvalue Var 0x559838a01ce0 'b$r_buff0_thd4' '_Bool'
|   |         `-ParenExpr 0x559838a08eb0 <col:165, col:226> 'int'
|   |           `-ConditionalOperator 0x559838a08e80 <col:166, col:212> 'int'
|   |             |-BinaryOperator 0x559838a08da0 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x559838a08d58 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x559838a08d40 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x559838a08d00 <col:166> '_Bool' lvalue Var 0x559838a02128 'b$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x559838a08d88 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x559838a08d70 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x559838a08d20 <col:184> '_Bool' lvalue Var 0x559838a01ce0 'b$r_buff0_thd4' '_Bool'
|   |             |-ImplicitCastExpr 0x559838a08e38 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x559838a08df0 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x559838a08dc0 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x559838a08e68 <col:212> 'int' <IntegralCast>
|   |               `-ImplicitCastExpr 0x559838a08e50 <col:212> '_Bool' <LValueToRValue>
|   |                 `-DeclRefExpr 0x559838a08e18 <col:212> '_Bool' lvalue Var 0x559838a01ce0 'b$r_buff0_thd4' '_Bool'
|   |-BinaryOperator 0x559838a095c0 <line:806:3, col:221> '_Bool' '='
|   | |-DeclRefExpr 0x559838a09018 <col:3> '_Bool' lvalue Var 0x559838a01f38 'b$r_buff1_thd4' '_Bool'
|   | `-ImplicitCastExpr 0x559838a095a8 <col:20, col:221> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x559838a09578 <col:20, col:221> 'int'
|   |     |-ImplicitCastExpr 0x559838a09530 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x559838a09518 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x559838a09038 <col:20> '_Bool' lvalue Var 0x559838a02760 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x559838a09560 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x559838a09548 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x559838a09058 <col:36> '_Bool' lvalue Var 0x559838a01f38 'b$r_buff1_thd4' '_Bool'
|   |     `-ParenExpr 0x559838a094f8 <col:53, col:221> 'int'
|   |       `-ConditionalOperator 0x559838a094c8 <col:54, col:220> 'int'
|   |         |-BinaryOperator 0x559838a09268 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x559838a09188 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x559838a090b0 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x559838a09098 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x559838a09078 <col:55> '_Bool' lvalue Var 0x559838a02128 'b$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x559838a09168 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x559838a09100 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x559838a090e8 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x559838a090c8 <col:74> '_Bool' lvalue Var 0x559838a01ce0 'b$r_buff0_thd4' '_Bool'
|   |         | |   `-UnaryOperator 0x559838a09150 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x559838a09138 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x559838a09118 <col:93> '_Bool' lvalue Var 0x559838a02220 'b$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x559838a09248 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x559838a091e0 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x559838a091c8 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x559838a091a8 <col:112> '_Bool' lvalue Var 0x559838a01ce0 'b$r_buff0_thd4' '_Bool'
|   |         |   `-UnaryOperator 0x559838a09230 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x559838a09218 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x559838a091f8 <col:131> '_Bool' lvalue Var 0x559838a01f38 'b$r_buff1_thd4' '_Bool'
|   |         |-ImplicitCastExpr 0x559838a094b0 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x559838a09498 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x559838a09288 <col:148> '_Bool' lvalue Var 0x559838a01f38 'b$r_buff1_thd4' '_Bool'
|   |         `-ParenExpr 0x559838a09478 <col:165, col:220> 'int'
|   |           `-ConditionalOperator 0x559838a09448 <col:166, col:219> 'int'
|   |             |-BinaryOperator 0x559838a09348 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x559838a09300 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x559838a092e8 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x559838a092a8 <col:166> '_Bool' lvalue Var 0x559838a02128 'b$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x559838a09330 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x559838a09318 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x559838a092c8 <col:184> '_Bool' lvalue Var 0x559838a01ce0 'b$r_buff0_thd4' '_Bool'
|   |             |-ImplicitCastExpr 0x559838a09418 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x559838a09398 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x559838a09368 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x559838a09430 <col:212, col:219> 'int' <IntegralCast>
|   |               `-CStyleCastExpr 0x559838a093f0 <col:212, col:219> '_Bool' <IntegralToBoolean>
|   |                 `-IntegerLiteral 0x559838a093c0 <col:219> 'int' 0
|   |-BinaryOperator 0x559838a09638 <line:807:3, col:25> 'int' '='
|   | |-DeclRefExpr 0x559838a095e0 <col:3> 'int' lvalue Var 0x559838a016f8 '__unbuffered_p3_EBX' 'int'
|   | `-ImplicitCastExpr 0x559838a09620 <col:25> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x559838a09600 <col:25> 'int' lvalue Var 0x559838a01938 'b' 'int'
|   |-BinaryOperator 0x559838a09768 <line:808:3, col:37> 'int' '='
|   | |-DeclRefExpr 0x559838a09658 <col:3> 'int' lvalue Var 0x559838a01938 'b' 'int'
|   | `-ConditionalOperator 0x559838a09738 <col:7, col:37> 'int'
|   |   |-ImplicitCastExpr 0x559838a096f0 <col:7> 'int' <IntegralCast>
|   |   | `-ImplicitCastExpr 0x559838a096d8 <col:7> '_Bool' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x559838a09678 <col:7> '_Bool' lvalue Var 0x559838a019d0 'b$flush_delayed' '_Bool'
|   |   |-ImplicitCastExpr 0x559838a09708 <col:25> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x559838a09698 <col:25> 'int' lvalue Var 0x559838a01a50 'b$mem_tmp' 'int'
|   |   `-ImplicitCastExpr 0x559838a09720 <col:37> 'int' <LValueToRValue>
|   |     `-DeclRefExpr 0x559838a096b8 <col:37> 'int' lvalue Var 0x559838a01938 'b' 'int'
|   |-BinaryOperator 0x559838a09800 <line:809:3, col:28> '_Bool' '='
|   | |-DeclRefExpr 0x559838a09788 <col:3> '_Bool' lvalue Var 0x559838a019d0 'b$flush_delayed' '_Bool'
|   | `-CStyleCastExpr 0x559838a097d8 <col:21, col:28> '_Bool' <IntegralToBoolean>
|   |   `-IntegerLiteral 0x559838a097a8 <col:28> 'int' 0
|   |-CallExpr 0x559838a09858 <line:810:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x559838a09840 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x559838a09820 <col:3> 'void ()' Function 0x5598389a7f00 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x559838a098b0 <line:811:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x559838a09898 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x559838a09878 <col:3> 'void ()' Function 0x5598389a7e40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x559838a09bb0 <line:812:3, col:103> 'int' '='
|   | |-DeclRefExpr 0x559838a098d0 <col:3> 'int' lvalue Var 0x559838a01938 'b' 'int'
|   | `-ConditionalOperator 0x559838a09b80 <col:7, col:103> 'int'
|   |   |-BinaryOperator 0x559838a09990 <col:7, col:25> 'int' '&&'
|   |   | |-ImplicitCastExpr 0x559838a09948 <col:7> 'int' <IntegralCast>
|   |   | | `-ImplicitCastExpr 0x559838a09930 <col:7> '_Bool' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x559838a098f0 <col:7> '_Bool' lvalue Var 0x559838a02128 'b$w_buff0_used' '_Bool'
|   |   | `-ImplicitCastExpr 0x559838a09978 <col:25> 'int' <IntegralCast>
|   |   |   `-ImplicitCastExpr 0x559838a09960 <col:25> '_Bool' <LValueToRValue>
|   |   |     `-DeclRefExpr 0x559838a09910 <col:25> '_Bool' lvalue Var 0x559838a01ce0 'b$r_buff0_thd4' '_Bool'
|   |   |-ImplicitCastExpr 0x559838a09b50 <col:42> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x559838a099b0 <col:42> 'int' lvalue Var 0x559838a020b0 'b$w_buff0' 'int'
|   |   `-ParenExpr 0x559838a09b30 <col:54, col:103> 'int'
|   |     `-ConditionalOperator 0x559838a09b00 <col:55, col:102> 'int'
|   |       |-BinaryOperator 0x559838a09a70 <col:55, col:73> 'int' '&&'
|   |       | |-ImplicitCastExpr 0x559838a09a28 <col:55> 'int' <IntegralCast>
|   |       | | `-ImplicitCastExpr 0x559838a09a10 <col:55> '_Bool' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x559838a099d0 <col:55> '_Bool' lvalue Var 0x559838a02220 'b$w_buff1_used' '_Bool'
|   |       | `-ImplicitCastExpr 0x559838a09a58 <col:73> 'int' <IntegralCast>
|   |       |   `-ImplicitCastExpr 0x559838a09a40 <col:73> '_Bool' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x559838a099f0 <col:73> '_Bool' lvalue Var 0x559838a01f38 'b$r_buff1_thd4' '_Bool'
|   |       |-ImplicitCastExpr 0x559838a09ad0 <col:90> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x559838a09a90 <col:90> 'int' lvalue Var 0x559838a021a8 'b$w_buff1' 'int'
|   |       `-ImplicitCastExpr 0x559838a09ae8 <col:102> 'int' <LValueToRValue>
|   |         `-DeclRefExpr 0x559838a09ab0 <col:102> 'int' lvalue Var 0x559838a01938 'b' 'int'
|   |-BinaryOperator 0x559838a09db8 <line:813:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x559838a09bd0 <col:3> '_Bool' lvalue Var 0x559838a02128 'b$w_buff0_used' '_Bool'
|   | `-ImplicitCastExpr 0x559838a09da0 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x559838a09d70 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x559838a09c90 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x559838a09c48 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x559838a09c30 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x559838a09bf0 <col:20> '_Bool' lvalue Var 0x559838a02128 'b$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x559838a09c78 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x559838a09c60 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x559838a09c10 <col:38> '_Bool' lvalue Var 0x559838a01ce0 'b$r_buff0_thd4' '_Bool'
|   |     |-ImplicitCastExpr 0x559838a09d28 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x559838a09ce0 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x559838a09cb0 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x559838a09d58 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x559838a09d40 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x559838a09d08 <col:66> '_Bool' lvalue Var 0x559838a02128 'b$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x559838a0a0a0 <line:814:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x559838a09dd8 <col:3> '_Bool' lvalue Var 0x559838a02220 'b$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x559838a0a088 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x559838a0a058 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x559838a09f78 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x559838a09e98 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x559838a09e50 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x559838a09e38 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x559838a09df8 <col:20> '_Bool' lvalue Var 0x559838a02128 'b$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x559838a09e80 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x559838a09e68 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x559838a09e18 <col:38> '_Bool' lvalue Var 0x559838a01ce0 'b$r_buff0_thd4' '_Bool'
|   |     | `-BinaryOperator 0x559838a09f58 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x559838a09f10 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x559838a09ef8 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x559838a09eb8 <col:56> '_Bool' lvalue Var 0x559838a02220 'b$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x559838a09f40 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x559838a09f28 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x559838a09ed8 <col:74> '_Bool' lvalue Var 0x559838a01f38 'b$r_buff1_thd4' '_Bool'
|   |     |-ImplicitCastExpr 0x559838a0a010 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x559838a09fc8 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x559838a09f98 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x559838a0a040 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x559838a0a028 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x559838a09ff0 <col:102> '_Bool' lvalue Var 0x559838a02220 'b$w_buff1_used' '_Bool'
|   |-BinaryOperator 0x559838a0a2a8 <line:815:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x559838a0a0c0 <col:3> '_Bool' lvalue Var 0x559838a01ce0 'b$r_buff0_thd4' '_Bool'
|   | `-ImplicitCastExpr 0x559838a0a290 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x559838a0a260 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x559838a0a180 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x559838a0a138 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x559838a0a120 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x559838a0a0e0 <col:20> '_Bool' lvalue Var 0x559838a02128 'b$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x559838a0a168 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x559838a0a150 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x559838a0a100 <col:38> '_Bool' lvalue Var 0x559838a01ce0 'b$r_buff0_thd4' '_Bool'
|   |     |-ImplicitCastExpr 0x559838a0a218 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x559838a0a1d0 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x559838a0a1a0 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x559838a0a248 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x559838a0a230 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x559838a0a1f8 <col:66> '_Bool' lvalue Var 0x559838a01ce0 'b$r_buff0_thd4' '_Bool'
|   |-BinaryOperator 0x559838a0a590 <line:816:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x559838a0a2c8 <col:3> '_Bool' lvalue Var 0x559838a01f38 'b$r_buff1_thd4' '_Bool'
|   | `-ImplicitCastExpr 0x559838a0a578 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x559838a0a548 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x559838a0a468 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x559838a0a388 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x559838a0a340 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x559838a0a328 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x559838a0a2e8 <col:20> '_Bool' lvalue Var 0x559838a02128 'b$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x559838a0a370 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x559838a0a358 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x559838a0a308 <col:38> '_Bool' lvalue Var 0x559838a01ce0 'b$r_buff0_thd4' '_Bool'
|   |     | `-BinaryOperator 0x559838a0a448 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x559838a0a400 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x559838a0a3e8 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x559838a0a3a8 <col:56> '_Bool' lvalue Var 0x559838a02220 'b$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x559838a0a430 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x559838a0a418 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x559838a0a3c8 <col:74> '_Bool' lvalue Var 0x559838a01f38 'b$r_buff1_thd4' '_Bool'
|   |     |-ImplicitCastExpr 0x559838a0a500 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x559838a0a4b8 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x559838a0a488 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x559838a0a530 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x559838a0a518 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x559838a0a4e0 <col:102> '_Bool' lvalue Var 0x559838a01f38 'b$r_buff1_thd4' '_Bool'
|   |-CallExpr 0x559838a0a5e8 <line:817:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x559838a0a5d0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x559838a0a5b0 <col:3> 'void ()' Function 0x5598389a7f00 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x559838a0a640 <line:818:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x559838a0a628 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x559838a0a608 <col:3> 'void ()' Function 0x5598389a7e40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x559838a0a6f8 <line:819:3, col:41> 'int' '='
|   | |-DeclRefExpr 0x559838a0a660 <col:3> 'int' lvalue Var 0x559838a01278 '__unbuffered_cnt' 'int'
|   | `-BinaryOperator 0x559838a0a6d8 <col:22, col:41> 'int' '+'
|   |   |-ImplicitCastExpr 0x559838a0a6c0 <col:22> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x559838a0a680 <col:22> 'int' lvalue Var 0x559838a01278 '__unbuffered_cnt' 'int'
|   |   `-IntegerLiteral 0x559838a0a6a0 <col:41> 'int' 1
|   |-CallExpr 0x559838a0a750 <line:820:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x559838a0a738 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x559838a0a718 <col:3> 'void ()' Function 0x5598389a7f00 '__VERIFIER_atomic_end' 'void ()'
|   `-ReturnStmt 0x559838a0a7c8 <line:821:3, col:36>
|     `-CallExpr 0x559838a0a7a8 <col:10, col:36> 'void *'
|       `-ImplicitCastExpr 0x559838a0a790 <col:10> 'void *(*)(void)' <FunctionToPointerDecay>
|         `-DeclRefExpr 0x559838a0a770 <col:10> 'void *(void)' Function 0x5598389a7958 '__VERIFIER_nondet_pointer' 'void *(void)'
|-FunctionDecl 0x559838a0a928 prev 0x559838a00fc0 <line:823:1, line:825:1> line:823:6 fence 'void ()'
| `-CompoundStmt 0x559838a0a9c8 <line:824:1, line:825:1>
|-FunctionDecl 0x559838a0a9f8 prev 0x559838a01080 <line:826:1, line:828:1> line:826:6 isync 'void ()'
| `-CompoundStmt 0x559838a0aa98 <line:827:1, line:828:1>
|-FunctionDecl 0x559838a0aac8 prev 0x559838a01140 <line:829:1, line:831:1> line:829:6 lwfence 'void ()'
| `-CompoundStmt 0x559838a0ab68 <line:830:1, line:831:1>
`-FunctionDecl 0x559838a0abe8 <line:832:1, line:858:1> line:832:5 main 'int ()'
  `-CompoundStmt 0x559838a0cbf8 <line:833:1, line:858:1>
    |-DeclStmt 0x559838a0ad00 <line:834:3, col:17>
    | `-VarDecl 0x559838a0ac98 <col:3, col:13> col:13 used t987 'pthread_t':'unsigned long'
    |-CallExpr 0x559838a0af08 <line:835:3, col:53> 'int'
    | |-ImplicitCastExpr 0x559838a0aef0 <col:3> 'int (*)(pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x559838a0ad18 <col:3> 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' Function 0x5598389e8488 'pthread_create' 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)'
    | |-UnaryOperator 0x559838a0ad58 <col:18, col:19> 'pthread_t *' prefix '&' cannot overflow
    | | `-DeclRefExpr 0x559838a0ad38 <col:19> 'pthread_t':'unsigned long' lvalue Var 0x559838a0ac98 't987' 'pthread_t':'unsigned long'
    | |-ImplicitCastExpr 0x559838a0af48 <col:25, col:35> 'const pthread_attr_t *' <NullToPointer>
    | | `-ParenExpr 0x559838a0add0 <col:25, col:35> 'void *'
    | |   `-CStyleCastExpr 0x559838a0ada8 <col:26, col:34> 'void *' <NullToPointer>
    | |     `-IntegerLiteral 0x559838a0ad70 <col:34> 'int' 0
    | |-ImplicitCastExpr 0x559838a0af60 <col:38> 'void *(*)(void *)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x559838a0adf0 <col:38> 'void *(void *)' Function 0x559838a02878 'P0' 'void *(void *)'
    | `-ParenExpr 0x559838a0ae70 <col:42, col:52> 'void *'
    |   `-CStyleCastExpr 0x559838a0ae48 <col:43, col:51> 'void *' <NullToPointer>
    |     `-IntegerLiteral 0x559838a0ae10 <col:51> 'int' 0
    |-DeclStmt 0x559838a0aff0 <line:836:3, col:17>
    | `-VarDecl 0x559838a0af88 <col:3, col:13> col:13 used t988 'pthread_t':'unsigned long'
    |-CallExpr 0x559838a0b198 <line:837:3, col:53> 'int'
    | |-ImplicitCastExpr 0x559838a0b180 <col:3> 'int (*)(pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x559838a0b008 <col:3> 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' Function 0x5598389e8488 'pthread_create' 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)'
    | |-UnaryOperator 0x559838a0b048 <col:18, col:19> 'pthread_t *' prefix '&' cannot overflow
    | | `-DeclRefExpr 0x559838a0b028 <col:19> 'pthread_t':'unsigned long' lvalue Var 0x559838a0af88 't988' 'pthread_t':'unsigned long'
    | |-ImplicitCastExpr 0x559838a0b1d8 <col:25, col:35> 'const pthread_attr_t *' <NullToPointer>
    | | `-ParenExpr 0x559838a0b0c0 <col:25, col:35> 'void *'
    | |   `-CStyleCastExpr 0x559838a0b098 <col:26, col:34> 'void *' <NullToPointer>
    | |     `-IntegerLiteral 0x559838a0b060 <col:34> 'int' 0
    | |-ImplicitCastExpr 0x559838a0b1f0 <col:38> 'void *(*)(void *)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x559838a0b0e0 <col:38> 'void *(void *)' Function 0x559838a042b0 'P1' 'void *(void *)'
    | `-ParenExpr 0x559838a0b160 <col:42, col:52> 'void *'
    |   `-CStyleCastExpr 0x559838a0b138 <col:43, col:51> 'void *' <NullToPointer>
    |     `-IntegerLiteral 0x559838a0b100 <col:51> 'int' 0
    |-DeclStmt 0x559838a0b280 <line:838:3, col:17>
    | `-VarDecl 0x559838a0b218 <col:3, col:13> col:13 used t989 'pthread_t':'unsigned long'
    |-CallExpr 0x559838a0b428 <line:839:3, col:53> 'int'
    | |-ImplicitCastExpr 0x559838a0b410 <col:3> 'int (*)(pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x559838a0b298 <col:3> 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' Function 0x5598389e8488 'pthread_create' 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)'
    | |-UnaryOperator 0x559838a0b2d8 <col:18, col:19> 'pthread_t *' prefix '&' cannot overflow
    | | `-DeclRefExpr 0x559838a0b2b8 <col:19> 'pthread_t':'unsigned long' lvalue Var 0x559838a0b218 't989' 'pthread_t':'unsigned long'
    | |-ImplicitCastExpr 0x559838a0b468 <col:25, col:35> 'const pthread_attr_t *' <NullToPointer>
    | | `-ParenExpr 0x559838a0b350 <col:25, col:35> 'void *'
    | |   `-CStyleCastExpr 0x559838a0b328 <col:26, col:34> 'void *' <NullToPointer>
    | |     `-IntegerLiteral 0x559838a0b2f0 <col:34> 'int' 0
    | |-ImplicitCastExpr 0x559838a0b480 <col:38> 'void *(*)(void *)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x559838a0b370 <col:38> 'void *(void *)' Function 0x559838a05638 'P2' 'void *(void *)'
    | `-ParenExpr 0x559838a0b3f0 <col:42, col:52> 'void *'
    |   `-CStyleCastExpr 0x559838a0b3c8 <col:43, col:51> 'void *' <NullToPointer>
    |     `-IntegerLiteral 0x559838a0b390 <col:51> 'int' 0
    |-DeclStmt 0x559838a0b510 <line:840:3, col:17>
    | `-VarDecl 0x559838a0b4a8 <col:3, col:13> col:13 used t990 'pthread_t':'unsigned long'
    |-CallExpr 0x559838a0b6b8 <line:841:3, col:53> 'int'
    | |-ImplicitCastExpr 0x559838a0b6a0 <col:3> 'int (*)(pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x559838a0b528 <col:3> 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' Function 0x5598389e8488 'pthread_create' 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)'
    | |-UnaryOperator 0x559838a0b568 <col:18, col:19> 'pthread_t *' prefix '&' cannot overflow
    | | `-DeclRefExpr 0x559838a0b548 <col:19> 'pthread_t':'unsigned long' lvalue Var 0x559838a0b4a8 't990' 'pthread_t':'unsigned long'
    | |-ImplicitCastExpr 0x559838a0b6f8 <col:25, col:35> 'const pthread_attr_t *' <NullToPointer>
    | | `-ParenExpr 0x559838a0b5e0 <col:25, col:35> 'void *'
    | |   `-CStyleCastExpr 0x559838a0b5b8 <col:26, col:34> 'void *' <NullToPointer>
    | |     `-IntegerLiteral 0x559838a0b580 <col:34> 'int' 0
    | |-ImplicitCastExpr 0x559838a0b710 <col:38> 'void *(*)(void *)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x559838a0b600 <col:38> 'void *(void *)' Function 0x559838a069b8 'P3' 'void *(void *)'
    | `-ParenExpr 0x559838a0b680 <col:42, col:52> 'void *'
    |   `-CStyleCastExpr 0x559838a0b658 <col:43, col:51> 'void *' <NullToPointer>
    |     `-IntegerLiteral 0x559838a0b620 <col:51> 'int' 0
    |-CallExpr 0x559838a0b760 <line:842:3, col:27> 'void'
    | `-ImplicitCastExpr 0x559838a0b748 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x559838a0b728 <col:3> 'void ()' Function 0x5598389a7e40 '__VERIFIER_atomic_begin' 'void ()'
    |-BinaryOperator 0x559838a0b830 <line:843:3, col:41> '_Bool' '='
    | |-DeclRefExpr 0x559838a0b780 <col:3> '_Bool' lvalue Var 0x559838a02298 'main$tmp_guard0' '_Bool'
    | `-ImplicitCastExpr 0x559838a0b818 <col:21, col:41> '_Bool' <IntegralToBoolean>
    |   `-BinaryOperator 0x559838a0b7f8 <col:21, col:41> 'int' '=='
    |     |-ImplicitCastExpr 0x559838a0b7e0 <col:21> 'int' <LValueToRValue>
    |     | `-DeclRefExpr 0x559838a0b7a0 <col:21> 'int' lvalue Var 0x559838a01278 '__unbuffered_cnt' 'int'
    |     `-IntegerLiteral 0x559838a0b7c0 <col:41> 'int' 4
    |-CallExpr 0x559838a0b888 <line:844:3, col:25> 'void'
    | `-ImplicitCastExpr 0x559838a0b870 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x559838a0b850 <col:3> 'void ()' Function 0x5598389a7f00 '__VERIFIER_atomic_end' 'void ()'
    |-CallExpr 0x559838a0b900 <line:845:3, col:36> 'void'
    | |-ImplicitCastExpr 0x559838a0b8e8 <col:3> 'void (*)(int)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x559838a0b8a8 <col:3> 'void (int)' Function 0x5598389a7790 '__VERIFIER_assume' 'void (int)'
    | `-ImplicitCastExpr 0x559838a0b940 <col:21> 'int' <IntegralCast>
    |   `-ImplicitCastExpr 0x559838a0b928 <col:21> '_Bool' <LValueToRValue>
    |     `-DeclRefExpr 0x559838a0b8c8 <col:21> '_Bool' lvalue Var 0x559838a02298 'main$tmp_guard0' '_Bool'
    |-CallExpr 0x559838a0b990 <line:846:3, col:27> 'void'
    | `-ImplicitCastExpr 0x559838a0b978 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x559838a0b958 <col:3> 'void ()' Function 0x5598389a7e40 '__VERIFIER_atomic_begin' 'void ()'
    |-BinaryOperator 0x559838a0bc88 <line:847:3, col:103> 'int' '='
    | |-DeclRefExpr 0x559838a0b9b0 <col:3> 'int' lvalue Var 0x559838a01938 'b' 'int'
    | `-ConditionalOperator 0x559838a0bc58 <col:7, col:103> 'int'
    |   |-BinaryOperator 0x559838a0ba70 <col:7, col:25> 'int' '&&'
    |   | |-ImplicitCastExpr 0x559838a0ba28 <col:7> 'int' <IntegralCast>
    |   | | `-ImplicitCastExpr 0x559838a0ba10 <col:7> '_Bool' <LValueToRValue>
    |   | |   `-DeclRefExpr 0x559838a0b9d0 <col:7> '_Bool' lvalue Var 0x559838a02128 'b$w_buff0_used' '_Bool'
    |   | `-ImplicitCastExpr 0x559838a0ba58 <col:25> 'int' <IntegralCast>
    |   |   `-ImplicitCastExpr 0x559838a0ba40 <col:25> '_Bool' <LValueToRValue>
    |   |     `-DeclRefExpr 0x559838a0b9f0 <col:25> '_Bool' lvalue Var 0x559838a01b00 'b$r_buff0_thd0' '_Bool'
    |   |-ImplicitCastExpr 0x559838a0bc40 <col:42> 'int' <LValueToRValue>
    |   | `-DeclRefExpr 0x559838a0ba90 <col:42> 'int' lvalue Var 0x559838a020b0 'b$w_buff0' 'int'
    |   `-ParenExpr 0x559838a0bc20 <col:54, col:103> 'int'
    |     `-ConditionalOperator 0x559838a0bbf0 <col:55, col:102> 'int'
    |       |-BinaryOperator 0x559838a0bb50 <col:55, col:73> 'int' '&&'
    |       | |-ImplicitCastExpr 0x559838a0bb08 <col:55> 'int' <IntegralCast>
    |       | | `-ImplicitCastExpr 0x559838a0baf0 <col:55> '_Bool' <LValueToRValue>
    |       | |   `-DeclRefExpr 0x559838a0bab0 <col:55> '_Bool' lvalue Var 0x559838a02220 'b$w_buff1_used' '_Bool'
    |       | `-ImplicitCastExpr 0x559838a0bb38 <col:73> 'int' <IntegralCast>
    |       |   `-ImplicitCastExpr 0x559838a0bb20 <col:73> '_Bool' <LValueToRValue>
    |       |     `-DeclRefExpr 0x559838a0bad0 <col:73> '_Bool' lvalue Var 0x559838a01d58 'b$r_buff1_thd0' '_Bool'
    |       |-ImplicitCastExpr 0x559838a0bbc0 <col:90> 'int' <LValueToRValue>
    |       | `-DeclRefExpr 0x559838a0bb70 <col:90> 'int' lvalue Var 0x559838a021a8 'b$w_buff1' 'int'
    |       `-ImplicitCastExpr 0x559838a0bbd8 <col:102> 'int' <LValueToRValue>
    |         `-DeclRefExpr 0x559838a0bba0 <col:102> 'int' lvalue Var 0x559838a01938 'b' 'int'
    |-BinaryOperator 0x559838a0be90 <line:848:3, col:66> '_Bool' '='
    | |-DeclRefExpr 0x559838a0bca8 <col:3> '_Bool' lvalue Var 0x559838a02128 'b$w_buff0_used' '_Bool'
    | `-ImplicitCastExpr 0x559838a0be78 <col:20, col:66> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x559838a0be48 <col:20, col:66> 'int'
    |     |-BinaryOperator 0x559838a0bd68 <col:20, col:38> 'int' '&&'
    |     | |-ImplicitCastExpr 0x559838a0bd20 <col:20> 'int' <IntegralCast>
    |     | | `-ImplicitCastExpr 0x559838a0bd08 <col:20> '_Bool' <LValueToRValue>
    |     | |   `-DeclRefExpr 0x559838a0bcc8 <col:20> '_Bool' lvalue Var 0x559838a02128 'b$w_buff0_used' '_Bool'
    |     | `-ImplicitCastExpr 0x559838a0bd50 <col:38> 'int' <IntegralCast>
    |     |   `-ImplicitCastExpr 0x559838a0bd38 <col:38> '_Bool' <LValueToRValue>
    |     |     `-DeclRefExpr 0x559838a0bce8 <col:38> '_Bool' lvalue Var 0x559838a01b00 'b$r_buff0_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x559838a0be00 <col:55, col:62> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x559838a0bdb8 <col:55, col:62> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x559838a0bd88 <col:62> 'int' 0
    |     `-ImplicitCastExpr 0x559838a0be30 <col:66> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x559838a0be18 <col:66> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x559838a0bde0 <col:66> '_Bool' lvalue Var 0x559838a02128 'b$w_buff0_used' '_Bool'
    |-BinaryOperator 0x559838a0c178 <line:849:3, col:102> '_Bool' '='
    | |-DeclRefExpr 0x559838a0beb0 <col:3> '_Bool' lvalue Var 0x559838a02220 'b$w_buff1_used' '_Bool'
    | `-ImplicitCastExpr 0x559838a0c160 <col:20, col:102> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x559838a0c130 <col:20, col:102> 'int'
    |     |-BinaryOperator 0x559838a0c050 <col:20, col:74> 'int' '||'
    |     | |-BinaryOperator 0x559838a0bf70 <col:20, col:38> 'int' '&&'
    |     | | |-ImplicitCastExpr 0x559838a0bf28 <col:20> 'int' <IntegralCast>
    |     | | | `-ImplicitCastExpr 0x559838a0bf10 <col:20> '_Bool' <LValueToRValue>
    |     | | |   `-DeclRefExpr 0x559838a0bed0 <col:20> '_Bool' lvalue Var 0x559838a02128 'b$w_buff0_used' '_Bool'
    |     | | `-ImplicitCastExpr 0x559838a0bf58 <col:38> 'int' <IntegralCast>
    |     | |   `-ImplicitCastExpr 0x559838a0bf40 <col:38> '_Bool' <LValueToRValue>
    |     | |     `-DeclRefExpr 0x559838a0bef0 <col:38> '_Bool' lvalue Var 0x559838a01b00 'b$r_buff0_thd0' '_Bool'
    |     | `-BinaryOperator 0x559838a0c030 <col:56, col:74> 'int' '&&'
    |     |   |-ImplicitCastExpr 0x559838a0bfe8 <col:56> 'int' <IntegralCast>
    |     |   | `-ImplicitCastExpr 0x559838a0bfd0 <col:56> '_Bool' <LValueToRValue>
    |     |   |   `-DeclRefExpr 0x559838a0bf90 <col:56> '_Bool' lvalue Var 0x559838a02220 'b$w_buff1_used' '_Bool'
    |     |   `-ImplicitCastExpr 0x559838a0c018 <col:74> 'int' <IntegralCast>
    |     |     `-ImplicitCastExpr 0x559838a0c000 <col:74> '_Bool' <LValueToRValue>
    |     |       `-DeclRefExpr 0x559838a0bfb0 <col:74> '_Bool' lvalue Var 0x559838a01d58 'b$r_buff1_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x559838a0c0e8 <col:91, col:98> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x559838a0c0a0 <col:91, col:98> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x559838a0c070 <col:98> 'int' 0
    |     `-ImplicitCastExpr 0x559838a0c118 <col:102> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x559838a0c100 <col:102> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x559838a0c0c8 <col:102> '_Bool' lvalue Var 0x559838a02220 'b$w_buff1_used' '_Bool'
    |-BinaryOperator 0x559838a0c380 <line:850:3, col:66> '_Bool' '='
    | |-DeclRefExpr 0x559838a0c198 <col:3> '_Bool' lvalue Var 0x559838a01b00 'b$r_buff0_thd0' '_Bool'
    | `-ImplicitCastExpr 0x559838a0c368 <col:20, col:66> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x559838a0c338 <col:20, col:66> 'int'
    |     |-BinaryOperator 0x559838a0c258 <col:20, col:38> 'int' '&&'
    |     | |-ImplicitCastExpr 0x559838a0c210 <col:20> 'int' <IntegralCast>
    |     | | `-ImplicitCastExpr 0x559838a0c1f8 <col:20> '_Bool' <LValueToRValue>
    |     | |   `-DeclRefExpr 0x559838a0c1b8 <col:20> '_Bool' lvalue Var 0x559838a02128 'b$w_buff0_used' '_Bool'
    |     | `-ImplicitCastExpr 0x559838a0c240 <col:38> 'int' <IntegralCast>
    |     |   `-ImplicitCastExpr 0x559838a0c228 <col:38> '_Bool' <LValueToRValue>
    |     |     `-DeclRefExpr 0x559838a0c1d8 <col:38> '_Bool' lvalue Var 0x559838a01b00 'b$r_buff0_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x559838a0c2f0 <col:55, col:62> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x559838a0c2a8 <col:55, col:62> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x559838a0c278 <col:62> 'int' 0
    |     `-ImplicitCastExpr 0x559838a0c320 <col:66> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x559838a0c308 <col:66> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x559838a0c2d0 <col:66> '_Bool' lvalue Var 0x559838a01b00 'b$r_buff0_thd0' '_Bool'
    |-BinaryOperator 0x559838a0c668 <line:851:3, col:102> '_Bool' '='
    | |-DeclRefExpr 0x559838a0c3a0 <col:3> '_Bool' lvalue Var 0x559838a01d58 'b$r_buff1_thd0' '_Bool'
    | `-ImplicitCastExpr 0x559838a0c650 <col:20, col:102> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x559838a0c620 <col:20, col:102> 'int'
    |     |-BinaryOperator 0x559838a0c540 <col:20, col:74> 'int' '||'
    |     | |-BinaryOperator 0x559838a0c460 <col:20, col:38> 'int' '&&'
    |     | | |-ImplicitCastExpr 0x559838a0c418 <col:20> 'int' <IntegralCast>
    |     | | | `-ImplicitCastExpr 0x559838a0c400 <col:20> '_Bool' <LValueToRValue>
    |     | | |   `-DeclRefExpr 0x559838a0c3c0 <col:20> '_Bool' lvalue Var 0x559838a02128 'b$w_buff0_used' '_Bool'
    |     | | `-ImplicitCastExpr 0x559838a0c448 <col:38> 'int' <IntegralCast>
    |     | |   `-ImplicitCastExpr 0x559838a0c430 <col:38> '_Bool' <LValueToRValue>
    |     | |     `-DeclRefExpr 0x559838a0c3e0 <col:38> '_Bool' lvalue Var 0x559838a01b00 'b$r_buff0_thd0' '_Bool'
    |     | `-BinaryOperator 0x559838a0c520 <col:56, col:74> 'int' '&&'
    |     |   |-ImplicitCastExpr 0x559838a0c4d8 <col:56> 'int' <IntegralCast>
    |     |   | `-ImplicitCastExpr 0x559838a0c4c0 <col:56> '_Bool' <LValueToRValue>
    |     |   |   `-DeclRefExpr 0x559838a0c480 <col:56> '_Bool' lvalue Var 0x559838a02220 'b$w_buff1_used' '_Bool'
    |     |   `-ImplicitCastExpr 0x559838a0c508 <col:74> 'int' <IntegralCast>
    |     |     `-ImplicitCastExpr 0x559838a0c4f0 <col:74> '_Bool' <LValueToRValue>
    |     |       `-DeclRefExpr 0x559838a0c4a0 <col:74> '_Bool' lvalue Var 0x559838a01d58 'b$r_buff1_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x559838a0c5d8 <col:91, col:98> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x559838a0c590 <col:91, col:98> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x559838a0c560 <col:98> 'int' 0
    |     `-ImplicitCastExpr 0x559838a0c608 <col:102> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x559838a0c5f0 <col:102> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x559838a0c5b8 <col:102> '_Bool' lvalue Var 0x559838a01d58 'b$r_buff1_thd0' '_Bool'
    |-CallExpr 0x559838a0c6c0 <line:852:3, col:25> 'void'
    | `-ImplicitCastExpr 0x559838a0c6a8 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x559838a0c688 <col:3> 'void ()' Function 0x5598389a7f00 '__VERIFIER_atomic_end' 'void ()'
    |-CallExpr 0x559838a0c718 <line:853:3, col:27> 'void'
    | `-ImplicitCastExpr 0x559838a0c700 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x559838a0c6e0 <col:3> 'void ()' Function 0x5598389a7e40 '__VERIFIER_atomic_begin' 'void ()'
    |-BinaryOperator 0x559838a0ca80 <line:854:3, col:141> '_Bool' '='
    | |-DeclRefExpr 0x559838a0c738 <col:3> '_Bool' lvalue Var 0x559838a02310 'main$tmp_guard1' '_Bool'
    | `-ImplicitCastExpr 0x559838a0ca68 <col:21, col:141> '_Bool' <IntegralToBoolean>
    |   `-UnaryOperator 0x559838a0ca50 <col:21, col:141> 'int' prefix '!' cannot overflow
    |     `-ParenExpr 0x559838a0ca30 <col:22, col:141> 'int'
    |       `-BinaryOperator 0x559838a0ca10 <col:23, col:140> 'int' '&&'
    |         |-BinaryOperator 0x559838a0c978 <col:23, col:112> 'int' '&&'
    |         | |-BinaryOperator 0x559838a0c8e0 <col:23, col:84> 'int' '&&'
    |         | | |-BinaryOperator 0x559838a0c848 <col:23, col:56> 'int' '&&'
    |         | | | |-BinaryOperator 0x559838a0c7b0 <col:23, col:28> 'int' '=='
    |         | | | | |-ImplicitCastExpr 0x559838a0c798 <col:23> 'int' <LValueToRValue>
    |         | | | | | `-DeclRefExpr 0x559838a0c758 <col:23> 'int' lvalue Var 0x559838a02410 'x' 'int'
    |         | | | | `-IntegerLiteral 0x559838a0c778 <col:28> 'int' 2
    |         | | | `-BinaryOperator 0x559838a0c828 <col:33, col:56> 'int' '=='
    |         | | |   |-ImplicitCastExpr 0x559838a0c810 <col:33> 'int' <LValueToRValue>
    |         | | |   | `-DeclRefExpr 0x559838a0c7d0 <col:33> 'int' lvalue Var 0x559838a01398 '__unbuffered_p1_EAX' 'int'
    |         | | |   `-IntegerLiteral 0x559838a0c7f0 <col:56> 'int' 0
    |         | | `-BinaryOperator 0x559838a0c8c0 <col:61, col:84> 'int' '=='
    |         | |   |-ImplicitCastExpr 0x559838a0c8a8 <col:61> 'int' <LValueToRValue>
    |         | |   | `-DeclRefExpr 0x559838a0c868 <col:61> 'int' lvalue Var 0x559838a014b8 '__unbuffered_p2_EAX' 'int'
    |         | |   `-IntegerLiteral 0x559838a0c888 <col:84> 'int' 0
    |         | `-BinaryOperator 0x559838a0c958 <col:89, col:112> 'int' '=='
    |         |   |-ImplicitCastExpr 0x559838a0c940 <col:89> 'int' <LValueToRValue>
    |         |   | `-DeclRefExpr 0x559838a0c900 <col:89> 'int' lvalue Var 0x559838a015d8 '__unbuffered_p3_EAX' 'int'
    |         |   `-IntegerLiteral 0x559838a0c920 <col:112> 'int' 1
    |         `-BinaryOperator 0x559838a0c9f0 <col:117, col:140> 'int' '=='
    |           |-ImplicitCastExpr 0x559838a0c9d8 <col:117> 'int' <LValueToRValue>
    |           | `-DeclRefExpr 0x559838a0c998 <col:117> 'int' lvalue Var 0x559838a016f8 '__unbuffered_p3_EBX' 'int'
    |           `-IntegerLiteral 0x559838a0c9b8 <col:140> 'int' 0
    |-CallExpr 0x559838a0cad8 <line:855:3, col:25> 'void'
    | `-ImplicitCastExpr 0x559838a0cac0 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x559838a0caa0 <col:3> 'void ()' Function 0x5598389a7f00 '__VERIFIER_atomic_end' 'void ()'
    |-CallExpr 0x559838a0cb50 <line:856:3, col:36> 'void'
    | |-ImplicitCastExpr 0x559838a0cb38 <col:3> 'void (*)(int)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x559838a0caf8 <col:3> 'void (int)' Function 0x5598389a7bc8 '__VERIFIER_assert' 'void (int)'
    | `-ImplicitCastExpr 0x559838a0cbb0 <col:21> 'int' <IntegralCast>
    |   `-ImplicitCastExpr 0x559838a0cb78 <col:21> '_Bool' <LValueToRValue>
    |     `-DeclRefExpr 0x559838a0cb18 <col:21> '_Bool' lvalue Var 0x559838a02310 'main$tmp_guard1' '_Bool'
    `-ReturnStmt 0x559838a0cbe8 <line:857:3, col:10>
      `-IntegerLiteral 0x559838a0cbc8 <col:10> 'int' 0
