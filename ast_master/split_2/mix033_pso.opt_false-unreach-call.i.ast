TranslationUnitDecl 0x55976116be18 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x55976116c6d8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x55976116c3b0 '__int128'
|-TypedefDecl 0x55976116c748 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x55976116c3d0 'unsigned __int128'
|-TypedefDecl 0x55976116ca50 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x55976116c820 'struct __NSConstantString_tag'
|   `-Record 0x55976116c7a0 '__NSConstantString_tag'
|-TypedefDecl 0x55976116caf8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x55976116cab0 'char *'
|   `-BuiltinType 0x55976116beb0 'char'
|-TypedefDecl 0x5597611ab650 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'struct __va_list_tag [1]'
| `-ConstantArrayType 0x55976116cd90 'struct __va_list_tag [1]' 1 
|   `-RecordType 0x55976116cbd0 'struct __va_list_tag'
|     `-Record 0x55976116cb50 '__va_list_tag'
|-FunctionDecl 0x5597611ab790 <./split_2/mix033_pso.opt_false-unreach-call.i:1:1, col:34> col:13 used __VERIFIER_assume 'void (int)' extern
| `-ParmVarDecl 0x5597611ab6c0 <col:31> col:34 'int'
|-FunctionDecl 0x5597611ab958 <line:2:1, col:45> col:15 used __VERIFIER_nondet_pointer 'void *(void)' extern
|-FunctionDecl 0x5597611aba80 <line:3:1, col:61> col:13 used __VERIFIER_error 'void () __attribute__((noreturn))' extern
|-FunctionDecl 0x5597611abbc8 <line:4:1, col:99> col:6 used __VERIFIER_assert 'void (int)'
| |-ParmVarDecl 0x5597611abb38 <col:24, col:28> col:28 used expression 'int'
| `-CompoundStmt 0x5597611abdf8 <col:40, col:99>
|   |-IfStmt 0x5597611abdc8 <col:42, col:88>
|   | |-UnaryOperator 0x5597611abca8 <col:46, col:47> 'int' prefix '!' cannot overflow
|   | | `-ImplicitCastExpr 0x5597611abc90 <col:47> 'int' <LValueToRValue>
|   | |   `-DeclRefExpr 0x5597611abc70 <col:47> 'int' lvalue ParmVar 0x5597611abb38 'expression' 'int'
|   | `-CompoundStmt 0x5597611abdb0 <col:59, col:88>
|   |   `-LabelStmt 0x5597611abd98 <col:61, col:85> 'ERROR'
|   |     `-CallExpr 0x5597611abd28 <col:68, col:85> 'void'
|   |       `-ImplicitCastExpr 0x5597611abd10 <col:68> 'void (*)() __attribute__((noreturn))' <FunctionToPointerDecay>
|   |         `-DeclRefExpr 0x5597611abcc0 <col:68> 'void () __attribute__((noreturn))' Function 0x5597611aba80 '__VERIFIER_error' 'void () __attribute__((noreturn))'
|   |-NullStmt 0x5597611abde0 <col:89>
|   `-ReturnStmt 0x5597611abde8 <col:91>
|-FunctionDecl 0x5597611abe40 <line:5:1, col:37> col:13 used __VERIFIER_atomic_begin 'void ()' extern
|-FunctionDecl 0x5597611abf00 <line:6:1, col:35> col:13 used __VERIFIER_atomic_end 'void ()' extern
|-FunctionDecl 0x5597611ac280 <line:8:1, line:10:76> line:8:13 __assert_fail 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x5597611abfb8 <col:28, col:40> col:40 __assertion 'const char *'
| |-ParmVarDecl 0x5597611ac038 <col:53, col:65> col:65 __file 'const char *'
| |-ParmVarDecl 0x5597611ac0b8 <line:9:7, col:20> col:20 __line 'unsigned int'
| |-ParmVarDecl 0x5597611ac138 <col:28, col:40> col:40 __function 'const char *'
| `-NoThrowAttr 0x5597611ac340 <line:10:22>
|-FunctionDecl 0x5597611d2390 <line:11:1, line:13:76> line:11:13 __assert_perror_fail 'void (int, const char *, unsigned int, const char *) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x5597611ac3b0 <col:35, col:39> col:39 __errnum 'int'
| |-ParmVarDecl 0x5597611ac430 <col:49, col:61> col:61 __file 'const char *'
| |-ParmVarDecl 0x5597611ac4b0 <line:12:7, col:20> col:20 __line 'unsigned int'
| |-ParmVarDecl 0x5597611ac530 <col:28, col:40> col:40 __function 'const char *'
| `-NoThrowAttr 0x5597611d2450 <line:13:22>
|-FunctionDecl 0x5597611d2700 <line:14:1, line:15:76> line:14:13 __assert 'void (const char *, const char *, int) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x5597611d24c0 <col:23, col:35> col:35 __assertion 'const char *'
| |-ParmVarDecl 0x5597611d2540 <col:48, col:60> col:60 __file 'const char *'
| |-ParmVarDecl 0x5597611d25c0 <col:68, col:72> col:72 __line 'int'
| `-NoThrowAttr 0x5597611d27b8 <line:15:22>
|-TypedefDecl 0x5597611d2828 <line:17:1, col:23> col:23 __u_char 'unsigned char'
| `-BuiltinType 0x55976116bf70 'unsigned char'
|-TypedefDecl 0x5597611d2898 <line:18:1, col:28> col:28 __u_short 'unsigned short'
| `-BuiltinType 0x55976116bf90 'unsigned short'
|-TypedefDecl 0x5597611d2908 <line:19:1, col:22> col:22 __u_int 'unsigned int'
| `-BuiltinType 0x55976116bfb0 'unsigned int'
|-TypedefDecl 0x5597611d2978 <line:20:1, col:27> col:27 __u_long 'unsigned long'
| `-BuiltinType 0x55976116bfd0 'unsigned long'
|-TypedefDecl 0x5597611d29e8 <line:21:1, col:21> col:21 __int8_t 'signed char'
| `-BuiltinType 0x55976116bed0 'signed char'
|-TypedefDecl 0x5597611d2a58 <line:22:1, col:23> col:23 __uint8_t 'unsigned char'
| `-BuiltinType 0x55976116bf70 'unsigned char'
|-TypedefDecl 0x5597611d2ac8 <line:23:1, col:26> col:26 __int16_t 'short'
| `-BuiltinType 0x55976116bef0 'short'
|-TypedefDecl 0x5597611d2b38 <line:24:1, col:28> col:28 __uint16_t 'unsigned short'
| `-BuiltinType 0x55976116bf90 'unsigned short'
|-TypedefDecl 0x5597611d2ba8 <line:25:1, col:20> col:20 __int32_t 'int'
| `-BuiltinType 0x55976116bf10 'int'
|-TypedefDecl 0x5597611d2c18 <line:26:1, col:22> col:22 __uint32_t 'unsigned int'
| `-BuiltinType 0x55976116bfb0 'unsigned int'
|-TypedefDecl 0x5597611d2c88 <line:27:1, col:25> col:25 __int64_t 'long'
| `-BuiltinType 0x55976116bf30 'long'
|-TypedefDecl 0x5597611d2cf8 <line:28:1, col:27> col:27 referenced __uint64_t 'unsigned long'
| `-BuiltinType 0x55976116bfd0 'unsigned long'
|-TypedefDecl 0x5597611d2d68 <line:29:1, col:18> col:18 referenced __quad_t 'long'
| `-BuiltinType 0x55976116bf30 'long'
|-TypedefDecl 0x5597611d2dd8 <line:30:1, col:27> col:27 __u_quad_t 'unsigned long'
| `-BuiltinType 0x55976116bfd0 'unsigned long'
|-TypedefDecl 0x5597611d2e48 <line:31:1, col:27> col:27 __dev_t 'unsigned long'
| `-BuiltinType 0x55976116bfd0 'unsigned long'
|-TypedefDecl 0x5597611d2eb8 <line:32:1, col:22> col:22 __uid_t 'unsigned int'
| `-BuiltinType 0x55976116bfb0 'unsigned int'
|-TypedefDecl 0x5597611d2f28 <line:33:1, col:22> col:22 __gid_t 'unsigned int'
| `-BuiltinType 0x55976116bfb0 'unsigned int'
|-TypedefDecl 0x5597611d2f98 <line:34:1, col:27> col:27 __ino_t 'unsigned long'
| `-BuiltinType 0x55976116bfd0 'unsigned long'
|-TypedefDecl 0x5597611d3008 <line:35:1, col:27> col:27 __ino64_t 'unsigned long'
| `-BuiltinType 0x55976116bfd0 'unsigned long'
|-TypedefDecl 0x5597611d3078 <line:36:1, col:22> col:22 __mode_t 'unsigned int'
| `-BuiltinType 0x55976116bfb0 'unsigned int'
|-TypedefDecl 0x5597611d30e8 <line:37:1, col:27> col:27 __nlink_t 'unsigned long'
| `-BuiltinType 0x55976116bfd0 'unsigned long'
|-TypedefDecl 0x5597611d3158 <line:38:1, col:18> col:18 __off_t 'long'
| `-BuiltinType 0x55976116bf30 'long'
|-TypedefDecl 0x5597611d31c8 <line:39:1, col:18> col:18 referenced __off64_t 'long'
| `-BuiltinType 0x55976116bf30 'long'
|-TypedefDecl 0x5597611d3238 <line:40:1, col:13> col:13 referenced __pid_t 'int'
| `-BuiltinType 0x55976116bf10 'int'
|-RecordDecl 0x5597611d3290 <line:41:9, col:32> col:9 struct definition
| `-FieldDecl 0x5597611d3408 <col:18, col:29> col:22 __val 'int [2]'
|-TypedefDecl 0x5597611d34c0 <col:1, col:34> col:34 __fsid_t 'struct __fsid_t':'__fsid_t'
| `-ElaboratedType 0x5597611d3460 'struct __fsid_t' sugar
|   `-RecordType 0x5597611d3310 '__fsid_t'
|     `-Record 0x5597611d3290 ''
|-TypedefDecl 0x5597611d3548 <line:42:1, col:18> col:18 referenced __clock_t 'long'
| `-BuiltinType 0x55976116bf30 'long'
|-TypedefDecl 0x5597611d35b8 <line:43:1, col:27> col:27 __rlim_t 'unsigned long'
| `-BuiltinType 0x55976116bfd0 'unsigned long'
|-TypedefDecl 0x5597611d3628 <line:44:1, col:27> col:27 __rlim64_t 'unsigned long'
| `-BuiltinType 0x55976116bfd0 'unsigned long'
|-TypedefDecl 0x5597611d3698 <line:45:1, col:22> col:22 __id_t 'unsigned int'
| `-BuiltinType 0x55976116bfb0 'unsigned int'
|-TypedefDecl 0x5597611d3708 <line:46:1, col:18> col:18 referenced __time_t 'long'
| `-BuiltinType 0x55976116bf30 'long'
|-TypedefDecl 0x5597611d3778 <line:47:1, col:22> col:22 __useconds_t 'unsigned int'
| `-BuiltinType 0x55976116bfb0 'unsigned int'
|-TypedefDecl 0x5597611d37e8 <line:48:1, col:18> col:18 __suseconds_t 'long'
| `-BuiltinType 0x55976116bf30 'long'
|-TypedefDecl 0x5597611d3858 <line:49:1, col:13> col:13 __daddr_t 'int'
| `-BuiltinType 0x55976116bf10 'int'
|-TypedefDecl 0x5597611d38c8 <line:50:1, col:13> col:13 __key_t 'int'
| `-BuiltinType 0x55976116bf10 'int'
|-TypedefDecl 0x5597611d3938 <line:51:1, col:13> col:13 referenced __clockid_t 'int'
| `-BuiltinType 0x55976116bf10 'int'
|-TypedefDecl 0x5597611d39a8 <line:52:1, col:16> col:16 referenced __timer_t 'void *'
| `-PointerType 0x55976116c630 'void *'
|   `-BuiltinType 0x55976116be70 'void'
|-TypedefDecl 0x5597611d3a18 <line:53:1, col:18> col:18 __blksize_t 'long'
| `-BuiltinType 0x55976116bf30 'long'
|-TypedefDecl 0x5597611d3a88 <line:54:1, col:18> col:18 __blkcnt_t 'long'
| `-BuiltinType 0x55976116bf30 'long'
|-TypedefDecl 0x5597611d3af8 <line:55:1, col:18> col:18 __blkcnt64_t 'long'
| `-BuiltinType 0x55976116bf30 'long'
|-TypedefDecl 0x5597611d3b68 <line:56:1, col:27> col:27 __fsblkcnt_t 'unsigned long'
| `-BuiltinType 0x55976116bfd0 'unsigned long'
|-TypedefDecl 0x5597611d3bd8 <line:57:1, col:27> col:27 __fsblkcnt64_t 'unsigned long'
| `-BuiltinType 0x55976116bfd0 'unsigned long'
|-TypedefDecl 0x5597611d3c48 <line:58:1, col:27> col:27 __fsfilcnt_t 'unsigned long'
| `-BuiltinType 0x55976116bfd0 'unsigned long'
|-TypedefDecl 0x5597611d3cb8 <line:59:1, col:27> col:27 __fsfilcnt64_t 'unsigned long'
| `-BuiltinType 0x55976116bfd0 'unsigned long'
|-TypedefDecl 0x5597611d3d28 <line:60:1, col:18> col:18 __fsword_t 'long'
| `-BuiltinType 0x55976116bf30 'long'
|-TypedefDecl 0x5597611d3d98 <line:61:1, col:18> col:18 __ssize_t 'long'
| `-BuiltinType 0x55976116bf30 'long'
|-TypedefDecl 0x5597611d3e08 <line:62:1, col:18> col:18 referenced __syscall_slong_t 'long'
| `-BuiltinType 0x55976116bf30 'long'
|-TypedefDecl 0x5597611d3e78 <line:63:1, col:27> col:27 __syscall_ulong_t 'unsigned long'
| `-BuiltinType 0x55976116bfd0 'unsigned long'
|-TypedefDecl 0x5597611d3f08 <line:64:1, col:19> col:19 __loff_t '__off64_t':'long'
| `-TypedefType 0x5597611d3ed0 '__off64_t' sugar
|   |-Typedef 0x5597611d31c8 '__off64_t'
|   `-BuiltinType 0x55976116bf30 'long'
|-TypedefDecl 0x5597611d4000 <line:65:1, col:19> col:19 __qaddr_t '__quad_t *'
| `-PointerType 0x5597611d3fc0 '__quad_t *'
|   `-TypedefType 0x5597611d3f60 '__quad_t' sugar
|     |-Typedef 0x5597611d2d68 '__quad_t'
|     `-BuiltinType 0x55976116bf30 'long'
|-TypedefDecl 0x5597611d4070 <line:66:1, col:15> col:15 __caddr_t 'char *'
| `-PointerType 0x55976116cab0 'char *'
|   `-BuiltinType 0x55976116beb0 'char'
|-TypedefDecl 0x5597611d40e0 <line:67:1, col:18> col:18 __intptr_t 'long'
| `-BuiltinType 0x55976116bf30 'long'
|-TypedefDecl 0x5597611d4150 <line:68:1, col:22> col:22 __socklen_t 'unsigned int'
| `-BuiltinType 0x55976116bfb0 'unsigned int'
|-FunctionDecl 0x5597611d4298 <line:69:1, line:73:1> line:70:1 __bswap_32 'unsigned int (unsigned int)' static inline
| |-ParmVarDecl 0x5597611d41c0 <col:13, col:26> col:26 used __bsx 'unsigned int'
| `-CompoundStmt 0x5597611d55e8 <line:71:1, line:73:1>
|   `-ReturnStmt 0x5597611d55d8 <line:72:3, col:34>
|     `-CallExpr 0x5597611d5598 <col:10, col:34> 'unsigned int'
|       |-ImplicitCastExpr 0x5597611d5580 <col:10> 'unsigned int (*)(unsigned int)' <BuiltinFnToFnPtr>
|       | `-DeclRefExpr 0x5597611d5510 <col:10> '<builtin fn type>' Function 0x5597611d5380 '__builtin_bswap32' 'unsigned int (unsigned int)'
|       `-ImplicitCastExpr 0x5597611d55c0 <col:29> 'unsigned int' <LValueToRValue>
|         `-DeclRefExpr 0x5597611d5530 <col:29> 'unsigned int' lvalue ParmVar 0x5597611d41c0 '__bsx' 'unsigned int'
|-FunctionDecl 0x5597611d5380 <col:10> col:10 implicit used __builtin_bswap32 'unsigned int (unsigned int)' extern
| |-ParmVarDecl 0x5597611d5420 <<invalid sloc>> <invalid sloc> 'unsigned int'
| |-NoThrowAttr 0x5597611d5490 <col:10> Implicit
| `-ConstAttr 0x5597611d54e8 <col:10> Implicit
|-FunctionDecl 0x5597611d5740 <line:74:1, line:78:1> line:75:1 __bswap_64 '__uint64_t (__uint64_t)' static inline
| |-ParmVarDecl 0x5597611d5638 <col:13, col:24> col:24 used __bsx '__uint64_t':'unsigned long'
| `-CompoundStmt 0x5597611d5a58 <line:76:1, line:78:1>
|   `-ReturnStmt 0x5597611d5a48 <line:77:3, col:34>
|     `-CallExpr 0x5597611d5a08 <col:10, col:34> 'unsigned long'
|       |-ImplicitCastExpr 0x5597611d59f0 <col:10> 'unsigned long (*)(unsigned long)' <BuiltinFnToFnPtr>
|       | `-DeclRefExpr 0x5597611d5978 <col:10> '<builtin fn type>' Function 0x5597611d57e8 '__builtin_bswap64' 'unsigned long (unsigned long)'
|       `-ImplicitCastExpr 0x5597611d5a30 <col:29> '__uint64_t':'unsigned long' <LValueToRValue>
|         `-DeclRefExpr 0x5597611d5998 <col:29> '__uint64_t':'unsigned long' lvalue ParmVar 0x5597611d5638 '__bsx' '__uint64_t':'unsigned long'
|-FunctionDecl 0x5597611d57e8 <col:10> col:10 implicit used __builtin_bswap64 'unsigned long (unsigned long)' extern
| |-ParmVarDecl 0x5597611d5888 <<invalid sloc>> <invalid sloc> 'unsigned long'
| |-NoThrowAttr 0x5597611d58f8 <col:10> Implicit
| `-ConstAttr 0x5597611d5950 <col:10> Implicit
|-TypedefDecl 0x5597611d5a88 <line:79:1, col:27> col:27 referenced size_t 'unsigned long'
| `-BuiltinType 0x55976116bfd0 'unsigned long'
|-TypedefDecl 0x5597611d5b18 <line:81:1, col:18> col:18 referenced time_t '__time_t':'long'
| `-TypedefType 0x5597611d5ae0 '__time_t' sugar
|   |-Typedef 0x5597611d3708 '__time_t'
|   `-BuiltinType 0x55976116bf30 'long'
|-RecordDecl 0x5597611d5b70 <line:84:1, line:88:3> line:84:8 struct timespec definition
| |-FieldDecl 0x5597611d5c28 <line:86:5, col:14> col:14 tv_sec '__time_t':'long'
| `-FieldDecl 0x5597611d5cb8 <line:87:5, col:23> col:23 tv_nsec '__syscall_slong_t':'long'
|-TypedefDecl 0x5597611d5d48 <line:89:1, col:17> col:17 referenced pid_t '__pid_t':'int'
| `-TypedefType 0x5597611d5d10 '__pid_t' sugar
|   |-Typedef 0x5597611d3238 '__pid_t'
|   `-BuiltinType 0x55976116bf10 'int'
|-RecordDecl 0x5597611d5da0 <line:90:1, line:93:3> line:90:8 struct sched_param definition
| `-FieldDecl 0x5597611d5e60 <line:92:5, col:9> col:9 __sched_priority 'int'
|-RecordDecl 0x5597611d5eb0 <line:96:1, line:99:3> line:96:8 struct __sched_param definition
| `-FieldDecl 0x5597611d5f70 <line:98:5, col:9> col:9 __sched_priority 'int'
|-TypedefDecl 0x5597611d5fd8 <line:100:1, col:27> col:27 referenced __cpu_mask 'unsigned long'
| `-BuiltinType 0x55976116bfd0 'unsigned long'
|-RecordDecl 0x5597611d6030 <line:101:9, line:104:1> line:101:9 struct definition
| `-FieldDecl 0x5597611d62c0 <line:103:3, col:53> col:14 __bits '__cpu_mask [64]'
|-TypedefDecl 0x5597611d73a0 <line:101:1, line:104:3> col:3 referenced cpu_set_t 'struct cpu_set_t':'cpu_set_t'
| `-ElaboratedType 0x5597611d6310 'struct cpu_set_t' sugar
|   `-RecordType 0x5597611d60b0 'cpu_set_t'
|     `-Record 0x5597611d6030 ''
|-FunctionDecl 0x5597611d7678 <line:106:1, line:107:42> line:106:12 __sched_cpucount 'int (size_t, const cpu_set_t *)' extern
| |-ParmVarDecl 0x5597611d7448 <col:30, col:37> col:37 __setsize 'size_t':'unsigned long'
| |-ParmVarDecl 0x5597611d7550 <col:48, col:65> col:65 __setp 'const cpu_set_t *'
| `-NoThrowAttr 0x5597611d7728 <line:107:19>
|-FunctionDecl 0x5597611d7900 <line:108:1, col:92> col:19 __sched_cpualloc 'cpu_set_t *(size_t)' extern
| |-ParmVarDecl 0x5597611d7790 <col:37, col:44> col:44 __count 'size_t':'unsigned long'
| `-NoThrowAttr 0x5597611d79a8 <col:69>
|-FunctionDecl 0x5597611d7b20 <line:109:1, col:87> col:13 __sched_cpufree 'void (cpu_set_t *)' extern
| |-ParmVarDecl 0x5597611d7a10 <col:30, col:41> col:41 __set 'cpu_set_t *'
| `-NoThrowAttr 0x5597611d7bc8 <col:64>
|-FunctionDecl 0x5597611d7e88 <line:112:1, line:113:45> line:112:12 sched_setparam 'int (__pid_t, const struct sched_param *)' extern
| |-ParmVarDecl 0x5597611d7c30 <col:28, col:36> col:36 __pid '__pid_t':'int'
| |-ParmVarDecl 0x5597611d7d68 <col:43, col:69> col:69 __param 'const struct sched_param *'
| `-NoThrowAttr 0x5597611d7f38 <line:113:22>
|-FunctionDecl 0x5597611d81b8 <line:114:1, col:111> col:12 sched_getparam 'int (__pid_t, struct sched_param *)' extern
| |-ParmVarDecl 0x5597611d7fa0 <col:28, col:36> col:36 __pid '__pid_t':'int'
| |-ParmVarDecl 0x5597611d8098 <col:43, col:63> col:63 __param 'struct sched_param *'
| `-NoThrowAttr 0x5597611d8268 <col:88>
|-FunctionDecl 0x5597611d8588 <line:115:1, line:116:85> line:115:12 sched_setscheduler 'int (__pid_t, int, const struct sched_param *)' extern
| |-ParmVarDecl 0x5597611d82d0 <col:32, col:40> col:40 __pid '__pid_t':'int'
| |-ParmVarDecl 0x5597611d83b0 <col:47, col:51> col:51 __policy 'int'
| |-ParmVarDecl 0x5597611d8440 <line:116:11, col:37> col:37 __param 'const struct sched_param *'
| `-NoThrowAttr 0x5597611d8640 <col:62>
|-FunctionDecl 0x5597611d87b8 <line:117:1, col:86> col:12 sched_getscheduler 'int (__pid_t)' extern
| |-ParmVarDecl 0x5597611d86a8 <col:32, col:40> col:40 __pid '__pid_t':'int'
| `-NoThrowAttr 0x5597611d8860 <col:63>
|-FunctionDecl 0x5597611d8988 <line:118:1, col:70> col:12 sched_yield 'int (void)' extern
| `-NoThrowAttr 0x5597611d8a28 <col:47>
|-FunctionDecl 0x5597611d8b30 <line:119:1, col:92> col:12 sched_get_priority_max 'int (int)' extern
| |-ParmVarDecl 0x5597611d8a98 <col:36, col:40> col:40 __algorithm 'int'
| `-NoThrowAttr 0x5597611d8bd8 <col:69>
|-FunctionDecl 0x5597611d8ce0 <line:120:1, col:92> col:12 sched_get_priority_min 'int (int)' extern
| |-ParmVarDecl 0x5597611d8c48 <col:36, col:40> col:40 __algorithm 'int'
| `-NoThrowAttr 0x5597611d8d88 <col:69>
|-FunctionDecl 0x5597611d9048 <line:121:1, col:111> col:12 sched_rr_get_interval 'int (__pid_t, struct timespec *)' extern
| |-ParmVarDecl 0x5597611d8df0 <col:35, col:43> col:43 __pid '__pid_t':'int'
| |-ParmVarDecl 0x5597611d8f28 <col:50, col:67> col:67 __t 'struct timespec *'
| `-NoThrowAttr 0x5597611d90f8 <col:88>
|-TypedefDecl 0x5597611d9188 <line:125:1, col:19> col:19 referenced clock_t '__clock_t':'long'
| `-TypedefType 0x5597611d9150 '__clock_t' sugar
|   |-Typedef 0x5597611d3548 '__clock_t'
|   `-BuiltinType 0x55976116bf30 'long'
|-TypedefDecl 0x5597611d9218 <line:128:1, col:21> col:21 referenced clockid_t '__clockid_t':'int'
| `-TypedefType 0x5597611d91e0 '__clockid_t' sugar
|   |-Typedef 0x5597611d3938 '__clockid_t'
|   `-BuiltinType 0x55976116bf10 'int'
|-TypedefDecl 0x5597611d92a8 <line:129:1, col:19> col:19 referenced timer_t '__timer_t':'void *'
| `-TypedefType 0x5597611d9270 '__timer_t' sugar
|   |-Typedef 0x5597611d39a8 '__timer_t'
|   `-PointerType 0x55976116c630 'void *'
|     `-BuiltinType 0x55976116be70 'void'
|-RecordDecl 0x5597611d9300 <line:131:1, line:144:1> line:131:8 struct tm definition
| |-FieldDecl 0x5597611d93d8 <line:133:3, col:7> col:7 tm_sec 'int'
| |-FieldDecl 0x5597611d9440 <line:134:3, col:7> col:7 tm_min 'int'
| |-FieldDecl 0x5597611d94a8 <line:135:3, col:7> col:7 tm_hour 'int'
| |-FieldDecl 0x5597611d9510 <line:136:3, col:7> col:7 tm_mday 'int'
| |-FieldDecl 0x5597611d9578 <line:137:3, col:7> col:7 tm_mon 'int'
| |-FieldDecl 0x5597611d95e0 <line:138:3, col:7> col:7 tm_year 'int'
| |-FieldDecl 0x5597611d9648 <line:139:3, col:7> col:7 tm_wday 'int'
| |-FieldDecl 0x5597611d96b0 <line:140:3, col:7> col:7 tm_yday 'int'
| |-FieldDecl 0x5597611d9718 <line:141:3, col:7> col:7 tm_isdst 'int'
| |-FieldDecl 0x5597611d9780 <line:142:3, col:12> col:12 tm_gmtoff 'long'
| `-FieldDecl 0x5597611d97e8 <line:143:3, col:15> col:15 tm_zone 'const char *'
|-RecordDecl 0x5597611d9838 <line:147:1, line:151:3> line:147:8 struct itimerspec definition
| |-FieldDecl 0x5597611d9908 <line:149:5, col:21> col:21 it_interval 'struct timespec':'struct timespec'
| `-FieldDecl 0x5597611d9978 <line:150:5, col:21> col:21 it_value 'struct timespec':'struct timespec'
|-RecordDecl 0x5597611d9a20 <line:152:1, col:8> col:8 struct sigevent
|-FunctionDecl 0x5597611d9bf0 <line:154:1, col:68> col:16 clock 'clock_t (void)' extern
| `-NoThrowAttr 0x5597611d9c90 <col:45>
|-FunctionDecl 0x5597611d9e70 <line:155:1, col:77> col:15 time 'time_t (time_t *)' extern
| |-ParmVarDecl 0x5597611d9d60 <col:21, col:29> col:29 __timer 'time_t *'
| `-NoThrowAttr 0x5597611d9f18 <col:54>
|-FunctionDecl 0x5597611da118 <line:156:1, line:157:73> line:156:15 difftime 'double (time_t, time_t)' extern
| |-ParmVarDecl 0x5597611d9f80 <col:25, col:32> col:32 __time1 'time_t':'long'
| |-ParmVarDecl 0x5597611d9ff8 <col:41, col:48> col:48 __time0 'time_t':'long'
| |-NoThrowAttr 0x5597611da1c8 <line:157:22>
| `-ConstAttr 0x5597611da220 <col:63>
|-FunctionDecl 0x5597611db050 <line:158:1, col:79> col:15 mktime 'time_t (struct tm *)' extern
| |-ParmVarDecl 0x5597611da318 <col:23, col:34> col:34 __tp 'struct tm *'
| `-NoThrowAttr 0x5597611db0f8 <col:56>
|-FunctionDecl 0x5597611db4a0 <line:159:1, line:161:77> line:159:15 strftime 'size_t (char *restrict, size_t, const char *restrict, const struct tm *restrict)' extern
| |-ParmVarDecl 0x5597611db168 <col:25, col:42> col:42 __s 'char *restrict'
| |-ParmVarDecl 0x5597611db1e0 <col:47, col:54> col:54 __maxsize 'size_t':'unsigned long'
| |-ParmVarDecl 0x5597611db260 <line:160:4, col:27> col:27 __format 'const char *restrict'
| |-ParmVarDecl 0x5597611db358 <line:161:4, col:32> col:32 __tp 'const struct tm *restrict'
| `-NoThrowAttr 0x5597611db560 <col:54>
|-RecordDecl 0x5597611db5b8 <line:163:9, line:170:1> line:163:16 struct __locale_struct definition
| |-RecordDecl 0x5597611db668 parent 0x55976116be18 <line:165:3, col:10> col:10 struct __locale_data
| |-FieldDecl 0x5597611db8c8 <col:3, col:37> col:25 __locales 'struct __locale_data *[13]'
| |-FieldDecl 0x5597611db968 <line:166:3, col:29> col:29 __ctype_b 'const unsigned short *'
| |-FieldDecl 0x5597611db9d0 <line:167:3, col:14> col:14 __ctype_tolower 'const int *'
| |-FieldDecl 0x5597611dba38 <line:168:3, col:14> col:14 __ctype_toupper 'const int *'
| `-FieldDecl 0x5597611dbb28 <line:169:3, col:25> col:15 __names 'const char *[13]'
|-TypedefDecl 0x5597611dbc48 <line:163:1, line:170:4> col:4 referenced __locale_t 'struct __locale_struct *'
| `-PointerType 0x5597611dbbf0 'struct __locale_struct *'
|   `-ElaboratedType 0x5597611dbb80 'struct __locale_struct' sugar
|     `-RecordType 0x5597611db640 'struct __locale_struct'
|       `-Record 0x5597611db5b8 '__locale_struct'
|-TypedefDecl 0x5597611dbcf8 <line:171:1, col:20> col:20 locale_t '__locale_t':'struct __locale_struct *'
| `-TypedefType 0x5597611dbcc0 '__locale_t' sugar
|   |-Typedef 0x5597611dbc48 '__locale_t'
|   `-PointerType 0x5597611dbbf0 'struct __locale_struct *'
|     `-ElaboratedType 0x5597611dbb80 'struct __locale_struct' sugar
|       `-RecordType 0x5597611db640 'struct __locale_struct'
|         `-Record 0x5597611db5b8 '__locale_struct'
|-FunctionDecl 0x5597611dd110 <line:172:1, line:175:63> line:172:15 strftime_l 'size_t (char *restrict, size_t, const char *restrict, const struct tm *restrict, __locale_t)' extern
| |-ParmVarDecl 0x5597611dbd68 <col:27, col:44> col:44 __s 'char *restrict'
| |-ParmVarDecl 0x5597611dbde0 <col:49, col:56> col:56 __maxsize 'size_t':'unsigned long'
| |-ParmVarDecl 0x5597611dbe60 <line:173:6, col:29> col:29 __format 'const char *restrict'
| |-ParmVarDecl 0x5597611dbef0 <line:174:6, col:34> col:34 __tp 'const struct tm *restrict'
| |-ParmVarDecl 0x5597611dbf68 <line:175:6, col:17> col:17 __loc '__locale_t':'struct __locale_struct *'
| `-NoThrowAttr 0x5597611dd1d8 <col:40>
|-FunctionDecl 0x5597611dd3c8 <line:177:1, col:89> col:19 gmtime 'struct tm *(const time_t *)' extern
| |-ParmVarDecl 0x5597611dd2a0 <col:27, col:41> col:41 __timer 'const time_t *'
| `-NoThrowAttr 0x5597611dd470 <col:66>
|-FunctionDecl 0x5597611dd580 <line:178:1, col:92> col:19 localtime 'struct tm *(const time_t *)' extern
| |-ParmVarDecl 0x5597611dd4d8 <col:30, col:44> col:44 __timer 'const time_t *'
| `-NoThrowAttr 0x5597611dd628 <col:69>
|-FunctionDecl 0x5597611dd858 <line:180:1, line:181:75> line:180:19 gmtime_r 'struct tm *(const time_t *restrict, struct tm *restrict)' extern
| |-ParmVarDecl 0x5597611dd690 <col:29, col:54> col:54 __timer 'const time_t *restrict'
| |-ParmVarDecl 0x5597611dd720 <line:181:8, col:30> col:30 __tp 'struct tm *restrict'
| `-NoThrowAttr 0x5597611dd908 <col:52>
|-FunctionDecl 0x5597611ddab0 <line:182:1, line:183:78> line:182:19 localtime_r 'struct tm *(const time_t *restrict, struct tm *restrict)' extern
| |-ParmVarDecl 0x5597611dd970 <col:32, col:57> col:57 __timer 'const time_t *restrict'
| |-ParmVarDecl 0x5597611dda00 <line:183:11, col:33> col:33 __tp 'struct tm *restrict'
| `-NoThrowAttr 0x5597611ddb60 <col:55>
|-FunctionDecl 0x5597611ddcf8 <line:185:1, col:85> col:14 asctime 'char *(const struct tm *)' extern
| |-ParmVarDecl 0x5597611ddbe0 <col:23, col:40> col:40 __tp 'const struct tm *'
| `-NoThrowAttr 0x5597611ddda0 <col:62>
|-FunctionDecl 0x5597611ddf18 <line:186:1, col:83> col:14 ctime 'char *(const time_t *)' extern
| |-ParmVarDecl 0x5597611dde08 <col:21, col:35> col:35 __timer 'const time_t *'
| `-NoThrowAttr 0x5597611ddfc0 <col:60>
|-FunctionDecl 0x5597611de2b8 <line:188:1, line:189:67> line:188:14 asctime_r 'char *(const struct tm *restrict, char *restrict)' extern
| |-ParmVarDecl 0x5597611de118 <col:25, col:53> col:53 __tp 'const struct tm *restrict'
| |-ParmVarDecl 0x5597611de198 <line:189:4, col:21> col:21 __buf 'char *restrict'
| `-NoThrowAttr 0x5597611de368 <col:44>
|-FunctionDecl 0x5597611de578 <line:190:1, line:191:72> line:190:14 ctime_r 'char *(const time_t *restrict, char *restrict)' extern
| |-ParmVarDecl 0x5597611de3d0 <col:23, col:48> col:48 __timer 'const time_t *restrict'
| |-ParmVarDecl 0x5597611de450 <line:191:9, col:26> col:26 __buf 'char *restrict'
| `-NoThrowAttr 0x5597611de628 <col:49>
|-VarDecl 0x5597611de728 <line:192:1, col:24> col:14 __tzname 'char *[2]' extern
|-VarDecl 0x5597611de7a8 <line:193:1, col:12> col:12 __daylight 'int' extern
|-VarDecl 0x5597611de828 <line:194:1, col:17> col:17 __timezone 'long' extern
|-VarDecl 0x5597611de8f0 <line:195:1, col:22> col:14 tzname 'char *[2]' extern
|-FunctionDecl 0x5597611dea20 <line:196:1, col:65> col:13 tzset 'void (void)' extern
| `-NoThrowAttr 0x5597611deac0 <col:42>
|-VarDecl 0x5597611deb30 <line:197:1, col:12> col:12 daylight 'int' extern
|-VarDecl 0x5597611debb0 <line:198:1, col:17> col:17 timezone 'long' extern
|-FunctionDecl 0x5597611ded38 <line:199:1, col:80> col:12 stime 'int (const time_t *)' extern
| |-ParmVarDecl 0x5597611dec28 <col:19, col:33> col:33 __when 'const time_t *'
| `-NoThrowAttr 0x5597611dede0 <col:57>
|-FunctionDecl 0x5597611deef0 <line:200:1, col:79> col:15 timegm 'time_t (struct tm *)' extern
| |-ParmVarDecl 0x5597611dee60 <col:23, col:34> col:34 __tp 'struct tm *'
| `-NoThrowAttr 0x5597611def98 <col:56>
|-FunctionDecl 0x5597611df0d0 <line:201:1, col:82> col:15 timelocal 'time_t (struct tm *)' extern
| |-ParmVarDecl 0x5597611df018 <col:26, col:37> col:37 __tp 'struct tm *'
| `-NoThrowAttr 0x5597611df178 <col:59>
|-FunctionDecl 0x5597611df280 <line:202:1, col:99> col:12 dysize 'int (int)' extern
| |-ParmVarDecl 0x5597611df1e8 <col:20, col:24> col:24 __year 'int'
| |-NoThrowAttr 0x5597611df328 <col:48>
| `-ConstAttr 0x5597611df380 <col:89>
|-FunctionDecl 0x5597611df5e8 <line:203:1, line:204:37> line:203:12 nanosleep 'int (const struct timespec *, struct timespec *)' extern
| |-ParmVarDecl 0x5597611df438 <col:23, col:46> col:46 __requested_time 'const struct timespec *'
| `-ParmVarDecl 0x5597611df4c8 <line:204:9, col:26> col:26 __remaining 'struct timespec *'
|-FunctionDecl 0x5597611df848 <line:205:1, col:111> col:12 clock_getres 'int (clockid_t, struct timespec *)' extern
| |-ParmVarDecl 0x5597611df6d8 <col:26, col:36> col:36 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x5597611df768 <col:48, col:65> col:65 __res 'struct timespec *'
| `-NoThrowAttr 0x5597611df8f8 <col:88>
|-FunctionDecl 0x5597611dfa90 <line:206:1, col:111> col:12 clock_gettime 'int (clockid_t, struct timespec *)' extern
| |-ParmVarDecl 0x5597611df960 <col:27, col:37> col:37 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x5597611df9f0 <col:49, col:66> col:66 __tp 'struct timespec *'
| `-NoThrowAttr 0x5597611dfb40 <col:88>
|-FunctionDecl 0x5597611dfd58 <line:207:1, line:208:45> line:207:12 clock_settime 'int (clockid_t, const struct timespec *)' extern
| |-ParmVarDecl 0x5597611dfba8 <col:27, col:37> col:37 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x5597611dfc38 <col:49, col:72> col:72 __tp 'const struct timespec *'
| `-NoThrowAttr 0x5597611dfe08 <line:208:22>
|-FunctionDecl 0x5597611e0178 <line:209:1, line:211:30> line:209:12 clock_nanosleep 'int (clockid_t, int, const struct timespec *, struct timespec *)' extern
| |-ParmVarDecl 0x5597611dfe70 <col:29, col:39> col:39 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x5597611dfef0 <col:51, col:55> col:55 __flags 'int'
| |-ParmVarDecl 0x5597611dff80 <line:210:8, col:31> col:31 __req 'const struct timespec *'
| `-ParmVarDecl 0x5597611e0010 <line:211:8, col:25> col:25 __rem 'struct timespec *'
|-FunctionDecl 0x5597611e0478 <line:212:1, col:108> col:12 clock_getcpuclockid 'int (pid_t, clockid_t *)' extern
| |-ParmVarDecl 0x5597611e0278 <col:33, col:39> col:39 __pid 'pid_t':'int'
| |-ParmVarDecl 0x5597611e0350 <col:46, col:57> col:57 __clock_id 'clockid_t *'
| `-NoThrowAttr 0x5597611e0528 <col:85>
|-FunctionDecl 0x5597611e0918 <line:213:1, line:215:75> line:213:12 timer_create 'int (clockid_t, struct sigevent *restrict, timer_t *restrict)' extern
| |-ParmVarDecl 0x5597611e0590 <col:26, col:36> col:36 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x5597611e06c8 <line:214:5, col:33> col:33 __evp 'struct sigevent *restrict'
| |-ParmVarDecl 0x5597611e07d0 <line:215:5, col:25> col:25 __timerid 'timer_t *restrict'
| `-NoThrowAttr 0x5597611e09d0 <col:52>
|-FunctionDecl 0x5597611e0b48 <line:216:1, col:84> col:12 timer_delete 'int (timer_t)' extern
| |-ParmVarDecl 0x5597611e0a38 <col:26, col:34> col:34 __timerid 'timer_t':'void *'
| `-NoThrowAttr 0x5597611e0bf0 <col:61>
|-FunctionDecl 0x5597611e10f0 <line:217:1, line:219:85> line:217:12 timer_settime 'int (timer_t, int, const struct itimerspec *restrict, struct itimerspec *restrict)' extern
| |-ParmVarDecl 0x5597611e0c58 <col:27, col:35> col:35 __timerid 'timer_t':'void *'
| |-ParmVarDecl 0x5597611e0cd8 <col:46, col:50> col:50 __flags 'int'
| |-ParmVarDecl 0x5597611e0e08 <line:218:6, col:42> col:42 __value 'const struct itimerspec *restrict'
| |-ParmVarDecl 0x5597611e0ef8 <line:219:6, col:36> col:36 __ovalue 'struct itimerspec *restrict'
| `-NoThrowAttr 0x5597611e11b0 <col:62>
|-FunctionDecl 0x5597611e13c8 <line:220:1, line:221:45> line:220:12 timer_gettime 'int (timer_t, struct itimerspec *)' extern
| |-ParmVarDecl 0x5597611e1218 <col:27, col:35> col:35 __timerid 'timer_t':'void *'
| |-ParmVarDecl 0x5597611e12a8 <col:46, col:65> col:65 __value 'struct itimerspec *'
| `-NoThrowAttr 0x5597611e1478 <line:221:22>
|-FunctionDecl 0x5597611e1578 <line:222:1, col:88> col:12 timer_getoverrun 'int (timer_t)' extern
| |-ParmVarDecl 0x5597611e14e0 <col:30, col:38> col:38 __timerid 'timer_t':'void *'
| `-NoThrowAttr 0x5597611e1620 <col:65>
|-TypedefDecl 0x5597611e1690 <line:224:1, col:27> col:27 referenced pthread_t 'unsigned long'
| `-BuiltinType 0x55976116bfd0 'unsigned long'
|-RecordDecl 0x5597611e16e8 <line:225:1, line:229:1> line:225:7 union pthread_attr_t definition
| |-FieldDecl 0x5597611e1830 <line:227:3, col:17> col:8 __size 'char [56]'
| `-FieldDecl 0x5597611e1898 <line:228:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x5597611e1948 <line:230:1, col:30> col:30 referenced pthread_attr_t 'union pthread_attr_t':'union pthread_attr_t'
| `-ElaboratedType 0x5597611e18f0 'union pthread_attr_t' sugar
|   `-RecordType 0x5597611e1770 'union pthread_attr_t'
|     `-Record 0x5597611e16e8 'pthread_attr_t'
|-RecordDecl 0x5597611e19a0 <line:231:9, line:235:1> line:231:16 struct __pthread_internal_list definition
| |-FieldDecl 0x5597611e1b18 <line:233:3, col:35> col:35 __prev 'struct __pthread_internal_list *'
| `-FieldDecl 0x5597611e1b90 <line:234:3, col:35> col:35 __next 'struct __pthread_internal_list *'
|-TypedefDecl 0x5597611e1c40 <line:231:1, line:235:3> col:3 referenced __pthread_list_t 'struct __pthread_internal_list':'struct __pthread_internal_list'
| `-ElaboratedType 0x5597611e1be0 'struct __pthread_internal_list' sugar
|   `-RecordType 0x5597611e1a20 'struct __pthread_internal_list'
|     `-Record 0x5597611e19a0 '__pthread_internal_list'
|-RecordDecl 0x5597611e1cb0 <line:236:9, line:250:1> line:236:9 union definition
| |-RecordDecl 0x5597611e1d58 parent 0x55976116be18 <line:238:3, line:247:3> line:238:10 struct __pthread_mutex_s definition
| | |-FieldDecl 0x5597611e1e30 <line:240:5, col:9> col:9 __lock 'int'
| | |-FieldDecl 0x5597611e1e98 <line:241:5, col:18> col:18 __count 'unsigned int'
| | |-FieldDecl 0x5597611e1f00 <line:242:5, col:9> col:9 __owner 'int'
| | |-FieldDecl 0x5597611e1f68 <line:243:5, col:18> col:18 __nusers 'unsigned int'
| | |-FieldDecl 0x5597611e1fd0 <line:244:5, col:9> col:9 __kind 'int'
| | |-FieldDecl 0x5597611e2038 <line:245:5, col:9> col:9 __spins 'int'
| | `-FieldDecl 0x5597611e6110 <line:246:5, col:22> col:22 __list '__pthread_list_t':'struct __pthread_internal_list'
| |-FieldDecl 0x5597611e61c0 <line:238:3, line:247:5> col:5 __data 'struct __pthread_mutex_s':'struct __pthread_mutex_s'
| |-FieldDecl 0x5597611e62b0 <line:248:3, col:17> col:8 __size 'char [40]'
| `-FieldDecl 0x5597611e6318 <line:249:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x5597611e64a0 <line:236:1, line:250:3> col:3 referenced pthread_mutex_t 'union pthread_mutex_t':'pthread_mutex_t'
| `-ElaboratedType 0x5597611e6440 'union pthread_mutex_t' sugar
|   `-RecordType 0x5597611e1d30 'pthread_mutex_t'
|     `-Record 0x5597611e1cb0 ''
|-RecordDecl 0x5597611e6510 <line:251:9, line:255:1> line:251:9 union definition
| |-FieldDecl 0x5597611e6650 <line:253:3, col:16> col:8 __size 'char [4]'
| `-FieldDecl 0x5597611e66b8 <line:254:3, col:7> col:7 __align 'int'
|-TypedefDecl 0x5597611e6770 <line:251:1, line:255:3> col:3 referenced pthread_mutexattr_t 'union pthread_mutexattr_t':'pthread_mutexattr_t'
| `-ElaboratedType 0x5597611e6710 'union pthread_mutexattr_t' sugar
|   `-RecordType 0x5597611e6590 'pthread_mutexattr_t'
|     `-Record 0x5597611e6510 ''
|-RecordDecl 0x5597611e67e0 <line:256:9, line:271:1> line:256:9 union definition
| |-RecordDecl 0x5597611e6888 <line:258:3, line:268:3> line:258:3 struct definition
| | |-FieldDecl 0x5597611e6950 <line:260:5, col:9> col:9 __lock 'int'
| | |-FieldDecl 0x5597611e69b8 <line:261:5, col:18> col:18 __futex 'unsigned int'
| | |-FieldDecl 0x5597611e6a20 <line:262:19, col:42> col:42 __total_seq 'unsigned long long'
| | |-FieldDecl 0x5597611e6a88 <line:263:19, col:42> col:42 __wakeup_seq 'unsigned long long'
| | |-FieldDecl 0x5597611e6af0 <line:264:19, col:42> col:42 __woken_seq 'unsigned long long'
| | |-FieldDecl 0x5597611e6b58 <line:265:5, col:11> col:11 __mutex 'void *'
| | |-FieldDecl 0x5597611e6bc0 <line:266:5, col:18> col:18 __nwaiters 'unsigned int'
| | `-FieldDecl 0x5597611e6c28 <line:267:5, col:18> col:18 __broadcast_seq 'unsigned int'
| |-FieldDecl 0x5597611e6ce0 <line:258:3, line:268:5> col:5 __data 'struct (anonymous struct at ./split_2/mix033_pso.opt_false-unreach-call.i:258:3)':'struct pthread_cond_t::(anonymous at ./split_2/mix033_pso.opt_false-unreach-call.i:258:3)'
| |-FieldDecl 0x5597611e6dd0 <line:269:3, col:17> col:8 __size 'char [48]'
| `-FieldDecl 0x5597611e6e38 <line:270:17, col:31> col:31 __align 'long long'
|-TypedefDecl 0x5597611e6f70 <line:256:1, line:271:3> col:3 referenced pthread_cond_t 'union pthread_cond_t':'pthread_cond_t'
| `-ElaboratedType 0x5597611e6f10 'union pthread_cond_t' sugar
|   `-RecordType 0x5597611e6860 'pthread_cond_t'
|     `-Record 0x5597611e67e0 ''
|-RecordDecl 0x5597611e6fe0 <line:272:9, line:276:1> line:272:9 union definition
| |-FieldDecl 0x5597611e8130 <line:274:3, col:16> col:8 __size 'char [4]'
| `-FieldDecl 0x5597611e8198 <line:275:3, col:7> col:7 __align 'int'
|-TypedefDecl 0x5597611e8250 <line:272:1, line:276:3> col:3 referenced pthread_condattr_t 'union pthread_condattr_t':'pthread_condattr_t'
| `-ElaboratedType 0x5597611e81f0 'union pthread_condattr_t' sugar
|   `-RecordType 0x5597611e7060 'pthread_condattr_t'
|     `-Record 0x5597611e6fe0 ''
|-TypedefDecl 0x5597611e82d8 <line:277:1, col:22> col:22 referenced pthread_key_t 'unsigned int'
| `-BuiltinType 0x55976116bfb0 'unsigned int'
|-TypedefDecl 0x5597611e8348 <line:278:1, col:13> col:13 referenced pthread_once_t 'int'
| `-BuiltinType 0x55976116bf10 'int'
|-RecordDecl 0x5597611e83a0 <line:279:9, line:297:1> line:279:9 union definition
| |-RecordDecl 0x5597611e8448 <line:281:3, line:294:3> line:281:3 struct definition
| | |-FieldDecl 0x5597611e8510 <line:283:5, col:9> col:9 __lock 'int'
| | |-FieldDecl 0x5597611e8578 <line:284:5, col:18> col:18 __nr_readers 'unsigned int'
| | |-FieldDecl 0x5597611e85e0 <line:285:5, col:18> col:18 __readers_wakeup 'unsigned int'
| | |-FieldDecl 0x5597611e8648 <line:286:5, col:18> col:18 __writer_wakeup 'unsigned int'
| | |-FieldDecl 0x5597611e86b0 <line:287:5, col:18> col:18 __nr_readers_queued 'unsigned int'
| | |-FieldDecl 0x5597611e8718 <line:288:5, col:18> col:18 __nr_writers_queued 'unsigned int'
| | |-FieldDecl 0x5597611e8780 <line:289:5, col:9> col:9 __writer 'int'
| | |-FieldDecl 0x5597611e87e8 <line:290:5, col:9> col:9 __shared 'int'
| | |-FieldDecl 0x5597611e8850 <line:291:5, col:23> col:23 __pad1 'unsigned long'
| | |-FieldDecl 0x5597611e88b8 <line:292:5, col:23> col:23 __pad2 'unsigned long'
| | `-FieldDecl 0x5597611e8920 <line:293:5, col:18> col:18 __flags 'unsigned int'
| |-FieldDecl 0x5597611e89d0 <line:281:3, line:294:5> col:5 __data 'struct (anonymous struct at ./split_2/mix033_pso.opt_false-unreach-call.i:281:3)':'struct pthread_rwlock_t::(anonymous at ./split_2/mix033_pso.opt_false-unreach-call.i:281:3)'
| |-FieldDecl 0x5597611e8a78 <line:295:3, col:17> col:8 __size 'char [56]'
| `-FieldDecl 0x5597611e8ae0 <line:296:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x5597611e8c30 <line:279:1, line:297:3> col:3 referenced pthread_rwlock_t 'union pthread_rwlock_t':'pthread_rwlock_t'
| `-ElaboratedType 0x5597611e8bd0 'union pthread_rwlock_t' sugar
|   `-RecordType 0x5597611e8420 'pthread_rwlock_t'
|     `-Record 0x5597611e83a0 ''
|-RecordDecl 0x5597611e8ca0 <line:298:9, line:302:1> line:298:9 union definition
| |-FieldDecl 0x5597611e8de0 <line:300:3, col:16> col:8 __size 'char [8]'
| `-FieldDecl 0x5597611e8e48 <line:301:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x5597611e8f00 <line:298:1, line:302:3> col:3 referenced pthread_rwlockattr_t 'union pthread_rwlockattr_t':'pthread_rwlockattr_t'
| `-ElaboratedType 0x5597611e8ea0 'union pthread_rwlockattr_t' sugar
|   `-RecordType 0x5597611e8d20 'pthread_rwlockattr_t'
|     `-Record 0x5597611e8ca0 ''
|-TypedefDecl 0x5597611e8f88 <line:303:1, col:22> col:22 referenced pthread_spinlock_t 'volatile int'
| `-QualType 0x55976116bf14 'volatile int' volatile
|   `-BuiltinType 0x55976116bf10 'int'
|-RecordDecl 0x5597611e8fe0 <line:304:9, line:308:1> line:304:9 union definition
| |-FieldDecl 0x5597611ea140 <line:306:3, col:17> col:8 __size 'char [32]'
| `-FieldDecl 0x5597611ea1a8 <line:307:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x5597611ea260 <line:304:1, line:308:3> col:3 referenced pthread_barrier_t 'union pthread_barrier_t':'pthread_barrier_t'
| `-ElaboratedType 0x5597611ea200 'union pthread_barrier_t' sugar
|   `-RecordType 0x5597611e9060 'pthread_barrier_t'
|     `-Record 0x5597611e8fe0 ''
|-RecordDecl 0x5597611ea2d0 <line:309:9, line:313:1> line:309:9 union definition
| |-FieldDecl 0x5597611ea3d0 <line:311:3, col:16> col:8 __size 'char [4]'
| `-FieldDecl 0x5597611ea438 <line:312:3, col:7> col:7 __align 'int'
|-TypedefDecl 0x5597611ea4f0 <line:309:1, line:313:3> col:3 referenced pthread_barrierattr_t 'union pthread_barrierattr_t':'pthread_barrierattr_t'
| `-ElaboratedType 0x5597611ea490 'union pthread_barrierattr_t' sugar
|   `-RecordType 0x5597611ea350 'pthread_barrierattr_t'
|     `-Record 0x5597611ea2d0 ''
|-TypedefDecl 0x5597611ea608 <line:314:1, col:29> col:18 referenced __jmp_buf 'long [8]'
| `-ConstantArrayType 0x5597611ea5a0 'long [8]' 8 
|   `-BuiltinType 0x55976116bf30 'long'
|-EnumDecl 0x5597611ea660 <line:315:1, line:319:1> line:315:1
| |-EnumConstantDecl 0x5597611ea728 <line:317:3> col:3 PTHREAD_CREATE_JOINABLE 'int'
| `-EnumConstantDecl 0x5597611ea778 <line:318:3> col:3 PTHREAD_CREATE_DETACHED 'int'
|-EnumDecl 0x5597611ea7c8 <line:320:1, line:331:1> line:320:1
| |-EnumConstantDecl 0x5597611ea898 <line:322:3> col:3 referenced PTHREAD_MUTEX_TIMED_NP 'int'
| |-EnumConstantDecl 0x5597611ea8e8 <line:323:3> col:3 referenced PTHREAD_MUTEX_RECURSIVE_NP 'int'
| |-EnumConstantDecl 0x5597611ea938 <line:324:3> col:3 referenced PTHREAD_MUTEX_ERRORCHECK_NP 'int'
| |-EnumConstantDecl 0x5597611ea988 <line:325:3> col:3 PTHREAD_MUTEX_ADAPTIVE_NP 'int'
| |-EnumConstantDecl 0x5597611eaa10 <line:327:3, col:26> col:3 referenced PTHREAD_MUTEX_NORMAL 'int'
| | `-ConstantExpr 0x5597611ea9f8 <col:26> 'int'
| |   `-DeclRefExpr 0x5597611ea9d8 <col:26> 'int' EnumConstant 0x5597611ea898 'PTHREAD_MUTEX_TIMED_NP' 'int'
| |-EnumConstantDecl 0x5597611eaa98 <line:328:3, col:29> col:3 PTHREAD_MUTEX_RECURSIVE 'int'
| | `-ConstantExpr 0x5597611eaa80 <col:29> 'int'
| |   `-DeclRefExpr 0x5597611eaa60 <col:29> 'int' EnumConstant 0x5597611ea8e8 'PTHREAD_MUTEX_RECURSIVE_NP' 'int'
| |-EnumConstantDecl 0x5597611eab20 <line:329:3, col:30> col:3 PTHREAD_MUTEX_ERRORCHECK 'int'
| | `-ConstantExpr 0x5597611eab08 <col:30> 'int'
| |   `-DeclRefExpr 0x5597611eaae8 <col:30> 'int' EnumConstant 0x5597611ea938 'PTHREAD_MUTEX_ERRORCHECK_NP' 'int'
| `-EnumConstantDecl 0x5597611eaba8 <line:330:3, col:27> col:3 PTHREAD_MUTEX_DEFAULT 'int'
|   `-ConstantExpr 0x5597611eab90 <col:27> 'int'
|     `-DeclRefExpr 0x5597611eab70 <col:27> 'int' EnumConstant 0x5597611eaa10 'PTHREAD_MUTEX_NORMAL' 'int'
|-EnumDecl 0x5597611eabf8 <line:332:1, line:338:1> line:332:1
| |-EnumConstantDecl 0x5597611eacc8 <line:334:3> col:3 referenced PTHREAD_MUTEX_STALLED 'int'
| |-EnumConstantDecl 0x5597611ead50 <line:335:3, col:30> col:3 PTHREAD_MUTEX_STALLED_NP 'int'
| | `-ConstantExpr 0x5597611ead38 <col:30> 'int'
| |   `-DeclRefExpr 0x5597611ead18 <col:30> 'int' EnumConstant 0x5597611eacc8 'PTHREAD_MUTEX_STALLED' 'int'
| |-EnumConstantDecl 0x5597611eada0 <line:336:3> col:3 referenced PTHREAD_MUTEX_ROBUST 'int'
| `-EnumConstantDecl 0x5597611eae28 <line:337:3, col:29> col:3 PTHREAD_MUTEX_ROBUST_NP 'int'
|   `-ConstantExpr 0x5597611eae10 <col:29> 'int'
|     `-DeclRefExpr 0x5597611eadf0 <col:29> 'int' EnumConstant 0x5597611eada0 'PTHREAD_MUTEX_ROBUST' 'int'
|-EnumDecl 0x5597611eae78 <line:339:1, line:344:1> line:339:1
| |-EnumConstantDecl 0x5597611eaf48 <line:341:3> col:3 PTHREAD_PRIO_NONE 'int'
| |-EnumConstantDecl 0x5597611eaf98 <line:342:3> col:3 PTHREAD_PRIO_INHERIT 'int'
| `-EnumConstantDecl 0x5597611eafe8 <line:343:3> col:3 PTHREAD_PRIO_PROTECT 'int'
|-EnumDecl 0x5597611eb038 <line:345:1, line:351:1> line:345:1
| |-EnumConstantDecl 0x5597611eb150 <line:347:3> col:3 referenced PTHREAD_RWLOCK_PREFER_READER_NP 'int'
| |-EnumConstantDecl 0x5597611eb1a0 <line:348:3> col:3 PTHREAD_RWLOCK_PREFER_WRITER_NP 'int'
| |-EnumConstantDecl 0x5597611eb1f0 <line:349:3> col:3 PTHREAD_RWLOCK_PREFER_WRITER_NONRECURSIVE_NP 'int'
| `-EnumConstantDecl 0x5597611eb278 <line:350:3, col:31> col:3 PTHREAD_RWLOCK_DEFAULT_NP 'int'
|   `-ConstantExpr 0x5597611eb260 <col:31> 'int'
|     `-DeclRefExpr 0x5597611eb240 <col:31> 'int' EnumConstant 0x5597611eb150 'PTHREAD_RWLOCK_PREFER_READER_NP' 'int'
|-EnumDecl 0x5597611eb2c8 <line:352:1, line:356:1> line:352:1
| |-EnumConstantDecl 0x5597611eb398 <line:354:3> col:3 PTHREAD_INHERIT_SCHED 'int'
| `-EnumConstantDecl 0x5597611eb3e8 <line:355:3> col:3 PTHREAD_EXPLICIT_SCHED 'int'
|-EnumDecl 0x5597611eb438 <line:357:1, line:361:1> line:357:1
| |-EnumConstantDecl 0x5597611eb508 <line:359:3> col:3 PTHREAD_SCOPE_SYSTEM 'int'
| `-EnumConstantDecl 0x5597611eb558 <line:360:3> col:3 PTHREAD_SCOPE_PROCESS 'int'
|-EnumDecl 0x5597611eb5a8 <line:362:1, line:366:1> line:362:1
| |-EnumConstantDecl 0x5597611eb678 <line:364:3> col:3 PTHREAD_PROCESS_PRIVATE 'int'
| `-EnumConstantDecl 0x5597611eb6c8 <line:365:3> col:3 PTHREAD_PROCESS_SHARED 'int'
|-RecordDecl 0x5597611eb718 <line:367:1, line:373:1> line:367:8 struct _pthread_cleanup_buffer definition
| |-FieldDecl 0x5597611eb958 <line:369:3, col:28> col:10 __routine 'void (*)(void *)'
| |-FieldDecl 0x5597611eb9c0 <line:370:3, col:9> col:9 __arg 'void *'
| |-FieldDecl 0x5597611eba28 <line:371:3, col:7> col:7 __canceltype 'int'
| `-FieldDecl 0x5597611ebb48 <line:372:3, col:35> col:35 __prev 'struct _pthread_cleanup_buffer *'
|-EnumDecl 0x5597611ebb98 <line:374:1, line:378:1> line:374:1
| |-EnumConstantDecl 0x5597611ebc68 <line:376:3> col:3 PTHREAD_CANCEL_ENABLE 'int'
| `-EnumConstantDecl 0x5597611ebcb8 <line:377:3> col:3 PTHREAD_CANCEL_DISABLE 'int'
|-EnumDecl 0x5597611ebd08 <line:379:1, line:383:1> line:379:1
| |-EnumConstantDecl 0x5597611ebdd8 <line:381:3> col:3 PTHREAD_CANCEL_DEFERRED 'int'
| `-EnumConstantDecl 0x5597611ebe28 <line:382:3> col:3 PTHREAD_CANCEL_ASYNCHRONOUS 'int'
|-FunctionDecl 0x5597611ec488 <line:385:1, line:388:96> line:385:12 used pthread_create 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' extern
| |-ParmVarDecl 0x5597611ebf20 <col:28, col:50> col:50 __newthread 'pthread_t *restrict'
| |-ParmVarDecl 0x5597611ec030 <line:386:7, col:40> col:40 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x5597611ec270 <line:387:7, col:39> col:15 __start_routine 'void *(*)(void *)'
| |-ParmVarDecl 0x5597611ec2f0 <line:388:7, col:24> col:24 __arg 'void *restrict'
| |-NoThrowAttr 0x5597611ec548 <col:47>
| |-NonNullAttr 0x5597611ec5a0 <col:77, col:94> 1 3
| `-CallbackAttr 0x5597611ec5d8 <line:385:12> Implicit 2 3
|-FunctionDecl 0x5597611ec700 <line:389:1, col:72> col:13 pthread_exit 'void (void *) __attribute__((noreturn))' extern
| `-ParmVarDecl 0x5597611ec630 <col:27, col:33> col:33 __retval 'void *'
|-FunctionDecl 0x5597611ec958 <line:390:1, col:64> col:12 pthread_join 'int (pthread_t, void **)' extern
| |-ParmVarDecl 0x5597611ec7b8 <col:26, col:36> col:36 __th 'pthread_t':'unsigned long'
| `-ParmVarDecl 0x5597611ec838 <col:42, col:49> col:49 __thread_return 'void **'
|-FunctionDecl 0x5597611ecb28 <line:391:1, col:83> col:12 pthread_detach 'int (pthread_t)' extern
| |-ParmVarDecl 0x5597611eca18 <col:28, col:38> col:38 __th 'pthread_t':'unsigned long'
| `-NoThrowAttr 0x5597611ecbd0 <col:60>
|-FunctionDecl 0x5597611ecd20 <line:392:1, col:105> col:18 pthread_self 'pthread_t (void)' extern
| |-NoThrowAttr 0x5597611ecdc0 <col:54>
| `-ConstAttr 0x5597611ece18 <col:95>
|-FunctionDecl 0x5597611ecfe8 <line:393:1, line:394:70> line:393:12 pthread_equal 'int (pthread_t, pthread_t)' extern
| |-ParmVarDecl 0x5597611ece50 <col:27, col:37> col:37 __thread1 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x5597611ecec8 <col:48, col:58> col:58 __thread2 'pthread_t':'unsigned long'
| |-NoThrowAttr 0x5597611ed098 <line:394:19>
| `-ConstAttr 0x5597611ed0f0 <col:60>
|-FunctionDecl 0x5597611eeb08 <line:395:1, col:128> col:12 pthread_attr_init 'int (pthread_attr_t *)' extern
| |-ParmVarDecl 0x5597611ee9d0 <col:31, col:47> col:47 __attr 'pthread_attr_t *'
| |-NoThrowAttr 0x5597611eebb0 <col:71>
| `-NonNullAttr 0x5597611eec08 <col:112, col:126> 1
|-FunctionDecl 0x5597611eed10 <line:396:1, line:397:79> line:396:12 pthread_attr_destroy 'int (pthread_attr_t *)' extern
| |-ParmVarDecl 0x5597611eec58 <col:34, col:50> col:50 __attr 'pthread_attr_t *'
| |-NoThrowAttr 0x5597611eedb8 <line:397:22>
| `-NonNullAttr 0x5597611eee10 <col:63, col:77> 1
|-FunctionDecl 0x5597611ef038 <line:398:1, line:400:82> line:398:12 pthread_attr_getdetachstate 'int (const pthread_attr_t *, int *)' extern
| |-ParmVarDecl 0x5597611eee58 <col:41, col:63> col:63 __attr 'const pthread_attr_t *'
| |-ParmVarDecl 0x5597611eeed8 <line:399:6, col:11> col:11 __detachstate 'int *'
| |-NoThrowAttr 0x5597611ef0e8 <line:400:22>
| `-NonNullAttr 0x5597611ef140 <col:63, col:80> 1 2
|-FunctionDecl 0x5597611ef348 <line:401:1, line:403:79> line:401:12 pthread_attr_setdetachstate 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x5597611ef188 <col:41, col:57> col:57 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x5597611ef208 <line:402:6, col:10> col:10 __detachstate 'int'
| |-NoThrowAttr 0x5597611ef3f8 <line:403:22>
| `-NonNullAttr 0x5597611ef450 <col:63, col:77> 1
|-FunctionDecl 0x5597611ef6a8 <line:404:1, line:406:82> line:404:12 pthread_attr_getguardsize 'int (const pthread_attr_t *, size_t *)' extern
| |-ParmVarDecl 0x5597611ef498 <col:39, col:61> col:61 __attr 'const pthread_attr_t *'
| |-ParmVarDecl 0x5597611ef540 <line:405:11, col:19> col:19 __guardsize 'size_t *'
| |-NoThrowAttr 0x5597611ef758 <line:406:22>
| `-NonNullAttr 0x5597611ef7b0 <col:63, col:80> 1 2
|-FunctionDecl 0x5597611f09e8 <line:407:1, line:409:79> line:407:12 pthread_attr_setguardsize 'int (pthread_attr_t *, size_t)' extern
| |-ParmVarDecl 0x5597611ef7f8 <col:39, col:55> col:55 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x5597611ef870 <line:408:11, col:18> col:18 __guardsize 'size_t':'unsigned long'
| |-NoThrowAttr 0x5597611f0a98 <line:409:22>
| `-NonNullAttr 0x5597611f0af0 <col:63, col:77> 1
|-FunctionDecl 0x5597611f0d28 <line:410:1, line:412:82> line:410:12 pthread_attr_getschedparam 'int (const pthread_attr_t *restrict, struct sched_param *restrict)' extern
| |-ParmVarDecl 0x5597611f0b38 <col:40, col:73> col:73 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x5597611f0bc8 <line:411:12, col:43> col:43 __param 'struct sched_param *restrict'
| |-NoThrowAttr 0x5597611f0dd8 <line:412:22>
| `-NonNullAttr 0x5597611f0e30 <col:63, col:80> 1 2
|-FunctionDecl 0x5597611f1068 <line:413:1, line:415:97> line:413:12 pthread_attr_setschedparam 'int (pthread_attr_t *restrict, const struct sched_param *restrict)' extern
| |-ParmVarDecl 0x5597611f0e78 <col:40, col:67> col:67 __attr 'pthread_attr_t *restrict'
| |-ParmVarDecl 0x5597611f0f08 <line:414:12, line:415:12> col:12 __param 'const struct sched_param *restrict'
| |-NoThrowAttr 0x5597611f1118 <col:37>
| `-NonNullAttr 0x5597611f1170 <col:78, col:95> 1 2
|-FunctionDecl 0x5597611f1358 <line:416:1, line:418:82> line:416:12 pthread_attr_getschedpolicy 'int (const pthread_attr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x5597611f11b8 <col:41, line:417:6> col:6 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x5597611f1238 <col:14, col:30> col:30 __policy 'int *restrict'
| |-NoThrowAttr 0x5597611f1408 <line:418:22>
| `-NonNullAttr 0x5597611f1460 <col:63, col:80> 1 2
|-FunctionDecl 0x5597611f15e8 <line:419:1, line:420:79> line:419:12 pthread_attr_setschedpolicy 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x5597611f14a8 <col:41, col:57> col:57 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x5597611f1528 <col:65, col:69> col:69 __policy 'int'
| |-NoThrowAttr 0x5597611f1698 <line:420:22>
| `-NonNullAttr 0x5597611f16f0 <col:63, col:77> 1
|-FunctionDecl 0x5597611f1898 <line:421:1, line:423:82> line:421:12 pthread_attr_getinheritsched 'int (const pthread_attr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x5597611f1738 <col:42, line:422:7> col:7 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x5597611f17b8 <col:15, col:31> col:31 __inherit 'int *restrict'
| |-NoThrowAttr 0x5597611f1948 <line:423:22>
| `-NonNullAttr 0x5597611f19c0 <col:63, col:80> 1 2
|-FunctionDecl 0x5597611f1b48 <line:424:1, line:426:79> line:424:12 pthread_attr_setinheritsched 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x5597611f1a08 <col:42, col:58> col:58 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x5597611f1a88 <line:425:7, col:11> col:11 __inherit 'int'
| |-NoThrowAttr 0x5597611f1bf8 <line:426:22>
| `-NonNullAttr 0x5597611f1c50 <col:63, col:77> 1
|-FunctionDecl 0x5597611f1df8 <line:427:1, line:429:82> line:427:12 pthread_attr_getscope 'int (const pthread_attr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x5597611f1c98 <col:35, col:68> col:68 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x5597611f1d18 <line:428:7, col:23> col:23 __scope 'int *restrict'
| |-NoThrowAttr 0x5597611f1ea8 <line:429:22>
| `-NonNullAttr 0x5597611f1f00 <col:63, col:80> 1 2
|-FunctionDecl 0x5597611f2088 <line:430:1, line:431:79> line:430:12 pthread_attr_setscope 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x5597611f1f48 <col:35, col:51> col:51 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x5597611f1fc8 <col:59, col:63> col:63 __scope 'int'
| |-NoThrowAttr 0x5597611f2138 <line:431:22>
| `-NonNullAttr 0x5597611f2190 <col:63, col:77> 1
|-FunctionDecl 0x5597611f23b8 <line:432:1, line:434:115> line:432:12 pthread_attr_getstackaddr 'int (const pthread_attr_t *restrict, void **restrict)' extern
| |-ParmVarDecl 0x5597611f21d8 <col:39, line:433:11> col:11 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x5597611f2258 <col:19, col:37> col:37 __stackaddr 'void **restrict'
| |-NoThrowAttr 0x5597611f2468 <line:434:22>
| |-NonNullAttr 0x5597611f24c0 <col:63, col:80> 1 2
| `-DeprecatedAttr 0x5597611f24f8 <col:100> "" ""
|-FunctionDecl 0x5597611f2708 <line:435:1, line:437:112> line:435:12 pthread_attr_setstackaddr 'int (pthread_attr_t *, void *)' extern
| |-ParmVarDecl 0x5597611f2548 <col:39, col:55> col:55 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x5597611f25c8 <line:436:11, col:17> col:17 __stackaddr 'void *'
| |-NoThrowAttr 0x5597611f27b8 <line:437:22>
| |-NonNullAttr 0x5597611f2810 <col:63, col:77> 1
| `-DeprecatedAttr 0x5597611f2848 <col:97> "" ""
|-FunctionDecl 0x5597611f2a48 <line:438:1, line:440:82> line:438:12 pthread_attr_getstacksize 'int (const pthread_attr_t *restrict, size_t *restrict)' extern
| |-ParmVarDecl 0x5597611f2898 <col:39, line:439:11> col:11 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x5597611f2910 <col:19, col:38> col:38 __stacksize 'size_t *restrict'
| |-NoThrowAttr 0x5597611f2af8 <line:440:22>
| `-NonNullAttr 0x5597611f2b50 <col:63, col:80> 1 2
|-FunctionDecl 0x5597611f2cd0 <line:441:1, line:443:79> line:441:12 pthread_attr_setstacksize 'int (pthread_attr_t *, size_t)' extern
| |-ParmVarDecl 0x5597611f2b98 <col:39, col:55> col:55 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x5597611f2c10 <line:442:11, col:18> col:18 __stacksize 'size_t':'unsigned long'
| |-NoThrowAttr 0x5597611f2d80 <line:443:22>
| `-NonNullAttr 0x5597611f2dd8 <col:63, col:77> 1
|-FunctionDecl 0x5597611f30c8 <line:444:1, line:447:85> line:444:12 pthread_attr_getstack 'int (const pthread_attr_t *restrict, void **restrict, size_t *restrict)' extern
| |-ParmVarDecl 0x5597611f2e28 <col:35, col:68> col:68 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x5597611f2ea8 <line:445:7, col:25> col:25 __stackaddr 'void **restrict'
| |-ParmVarDecl 0x5597611f2f20 <line:446:7, col:26> col:26 __stacksize 'size_t *restrict'
| |-NoThrowAttr 0x5597611f3180 <line:447:22>
| `-NonNullAttr 0x5597611f31d8 <col:63, col:83> 1 2 3
|-FunctionDecl 0x5597611f3488 <line:448:1, line:449:100> line:448:12 pthread_attr_setstack 'int (pthread_attr_t *, void *, size_t)' extern
| |-ParmVarDecl 0x5597611f3230 <col:35, col:51> col:51 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x5597611f32b0 <col:59, col:65> col:65 __stackaddr 'void *'
| |-ParmVarDecl 0x5597611f3328 <line:449:7, col:14> col:14 __stacksize 'size_t':'unsigned long'
| |-NoThrowAttr 0x5597611f3540 <col:43>
| `-NonNullAttr 0x5597611f3598 <col:84, col:98> 1
|-FunctionDecl 0x5597611f3858 <line:450:1, line:452:79> line:450:12 pthread_setschedparam 'int (pthread_t, int, const struct sched_param *)' extern
| |-ParmVarDecl 0x5597611f35e8 <col:35, col:45> col:45 __target_thread 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x5597611f3668 <col:62, col:66> col:66 __policy 'int'
| |-ParmVarDecl 0x5597611f36f8 <line:451:7, col:33> col:33 __param 'const struct sched_param *'
| |-NoThrowAttr 0x5597611f3910 <line:452:22>
| `-NonNullAttr 0x5597611f3968 <col:63, col:77> 3
|-FunctionDecl 0x5597611f3c78 <line:453:1, line:456:82> line:453:12 pthread_getschedparam 'int (pthread_t, int *restrict, struct sched_param *restrict)' extern
| |-ParmVarDecl 0x5597611f39e0 <col:35, col:45> col:45 __target_thread 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x5597611f3a60 <line:454:7, col:23> col:23 __policy 'int *restrict'
| |-ParmVarDecl 0x5597611f3af0 <line:455:7, col:38> col:38 __param 'struct sched_param *restrict'
| |-NoThrowAttr 0x5597611f3d30 <line:456:22>
| `-NonNullAttr 0x5597611f3d88 <col:63, col:80> 2 3
|-FunctionDecl 0x5597611f3f78 <line:457:1, line:458:45> line:457:12 pthread_setschedprio 'int (pthread_t, int)' extern
| |-ParmVarDecl 0x5597611f3dd8 <col:34, col:44> col:44 __target_thread 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x5597611f3e58 <col:61, col:65> col:65 __prio 'int'
| `-NoThrowAttr 0x5597611f4028 <line:458:22>
|-FunctionDecl 0x5597611f43f8 <line:459:1, line:460:71> line:459:12 pthread_once 'int (pthread_once_t *, void (*)(void))' extern
| |-ParmVarDecl 0x5597611f40f0 <col:26, col:42> col:42 __once_control 'pthread_once_t *'
| |-ParmVarDecl 0x5597611f4290 <line:460:5, col:33> col:12 __init_routine 'void (*)(void)'
| `-NonNullAttr 0x5597611f44a8 <col:52, col:69> 1 2
|-FunctionDecl 0x5597611f4650 <line:461:1, col:64> col:12 pthread_setcancelstate 'int (int, int *)' extern
| |-ParmVarDecl 0x5597611f4530 <col:36, col:40> col:40 __state 'int'
| `-ParmVarDecl 0x5597611f45b0 <col:49, col:54> col:54 __oldstate 'int *'
|-FunctionDecl 0x5597611f4838 <line:462:1, col:61> col:12 pthread_setcanceltype 'int (int, int *)' extern
| |-ParmVarDecl 0x5597611f4718 <col:35, col:39> col:39 __type 'int'
| `-ParmVarDecl 0x5597611f4798 <col:47, col:52> col:52 __oldtype 'int *'
|-FunctionDecl 0x5597611f49f0 <line:463:1, col:42> col:12 pthread_cancel 'int (pthread_t)' extern
| `-ParmVarDecl 0x5597611f48f8 <col:28, col:38> col:38 __th 'pthread_t':'unsigned long'
|-FunctionDecl 0x5597611f4b30 <line:464:1, col:37> col:13 pthread_testcancel 'void (void)' extern
|-RecordDecl 0x5597611f4bd0 <line:465:9, line:473:1> line:465:9 struct definition
| |-RecordDecl 0x5597611f4c78 <line:467:3, line:471:3> line:467:3 struct definition
| | |-FieldDecl 0x5597611f4d68 <line:469:5, col:15> col:15 __cancel_jmp_buf '__jmp_buf':'long [8]'
| | `-FieldDecl 0x5597611f4dd0 <line:470:5, col:9> col:9 __mask_was_saved 'int'
| |-FieldDecl 0x5597611f4fa0 <line:467:3, line:471:23> col:5 __cancel_jmp_buf 'struct (anonymous struct at ./split_2/mix033_pso.opt_false-unreach-call.i:467:3) [1]'
| `-FieldDecl 0x5597611f5098 <line:472:3, col:16> col:9 __pad 'void *[4]'
|-TypedefDecl 0x5597611f5150 <line:465:1, line:473:3> col:3 referenced __pthread_unwind_buf_t 'struct __pthread_unwind_buf_t':'__pthread_unwind_buf_t'
| |-ElaboratedType 0x5597611f50f0 'struct __pthread_unwind_buf_t' sugar
| | `-RecordType 0x5597611f4c50 '__pthread_unwind_buf_t'
| |   `-Record 0x5597611f4bd0 ''
| `-AlignedAttr 0x5597611f51a8 <col:42> aligned
|   `-<<<NULL>>>
|-RecordDecl 0x5597611f5220 <line:474:1, line:480:1> line:474:8 struct __pthread_cleanup_frame definition
| |-FieldDecl 0x5597611f5380 <line:476:3, col:35> col:10 __cancel_routine 'void (*)(void *)'
| |-FieldDecl 0x5597611f53e8 <line:477:3, col:9> col:9 __cancel_arg 'void *'
| |-FieldDecl 0x5597611f5450 <line:478:3, col:7> col:7 __do_it 'int'
| `-FieldDecl 0x5597611f54b8 <line:479:3, col:7> col:7 __cancel_type 'int'
|-FunctionDecl 0x5597611f56c0 <line:481:1, col:69> col:13 __pthread_register_cancel 'void (__pthread_unwind_buf_t *)' extern
| `-ParmVarDecl 0x5597611f55b0 <col:40, col:64> col:64 __buf '__pthread_unwind_buf_t *'
|-FunctionDecl 0x5597611f5808 <line:483:1, col:71> col:13 __pthread_unregister_cancel 'void (__pthread_unwind_buf_t *)' extern
| `-ParmVarDecl 0x5597611f5778 <col:42, col:66> col:66 __buf '__pthread_unwind_buf_t *'
|-FunctionDecl 0x5597611f5a00 <line:485:1, line:487:31> line:485:13 __pthread_unwind_next 'void (__pthread_unwind_buf_t *) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x5597611f58c0 <col:36, col:60> col:60 __buf '__pthread_unwind_buf_t *'
| `-WeakAttr 0x5597611f5aa8 <line:487:22>
|-RecordDecl 0x5597611f5b00 <line:489:1, col:8> col:8 struct __jmp_buf_tag
|-FunctionDecl 0x5597611f5e18 <line:490:1, col:98> col:12 __sigsetjmp 'int (struct __jmp_buf_tag *, int)' extern
| |-ParmVarDecl 0x5597611f5c78 <col:25, col:47> col:47 __env 'struct __jmp_buf_tag *'
| |-ParmVarDecl 0x5597611f5cf8 <col:54, col:58> col:58 __savemask 'int'
| |-NoThrowAttr 0x5597611f5ec8 <col:86>
| `-ReturnsTwiceAttr 0x5597611f5f20 <col:12> Implicit
|-FunctionDecl 0x5597611f6248 <line:491:1, line:493:79> line:491:12 pthread_mutex_init 'int (pthread_mutex_t *, const pthread_mutexattr_t *)' extern
| |-ParmVarDecl 0x5597611f5ff0 <col:32, col:49> col:49 __mutex 'pthread_mutex_t *'
| |-ParmVarDecl 0x5597611f6100 <line:492:11, col:38> col:38 __mutexattr 'const pthread_mutexattr_t *'
| |-NoThrowAttr 0x5597611f62f8 <line:493:22>
| `-NonNullAttr 0x5597611f6350 <col:63, col:77> 1
|-FunctionDecl 0x5597611f64c8 <line:494:1, line:495:79> line:494:12 pthread_mutex_destroy 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x5597611f6398 <col:35, col:52> col:52 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x5597611f6570 <line:495:22>
| `-NonNullAttr 0x5597611f65c8 <col:63, col:77> 1
|-FunctionDecl 0x5597611f66d0 <line:496:1, line:497:68> line:496:12 pthread_mutex_trylock 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x5597611f6618 <col:35, col:52> col:52 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x5597611f6778 <line:497:22>
| `-NonNullAttr 0x5597611f67d0 <col:52, col:66> 1
|-FunctionDecl 0x5597611f68d0 <line:498:1, line:499:68> line:498:12 pthread_mutex_lock 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x5597611f6818 <col:32, col:49> col:49 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x5597611f6978 <line:499:22>
| `-NonNullAttr 0x5597611f69d0 <col:52, col:66> 1
|-FunctionDecl 0x5597611f7c28 <line:500:1, line:502:85> line:500:12 pthread_mutex_timedlock 'int (pthread_mutex_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x5597611f7a38 <col:37, col:65> col:65 __mutex 'pthread_mutex_t *restrict'
| |-ParmVarDecl 0x5597611f7ac8 <line:501:9, line:502:9> col:9 __abstime 'const struct timespec *restrict'
| |-NoThrowAttr 0x5597611f7cd8 <col:36>
| `-NonNullAttr 0x5597611f7d30 <col:66, col:83> 1 2
|-FunctionDecl 0x5597611f7e30 <line:503:1, line:504:68> line:503:12 pthread_mutex_unlock 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x5597611f7d78 <col:34, col:51> col:51 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x5597611f7ed8 <line:504:22>
| `-NonNullAttr 0x5597611f7f30 <col:52, col:66> 1
|-FunctionDecl 0x5597611f81c8 <line:505:1, line:508:82> line:505:12 pthread_mutex_getprioceiling 'int (const pthread_mutex_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x5597611f7fe0 <col:42, line:506:18> col:18 __mutex 'const pthread_mutex_t *restrict'
| |-ParmVarDecl 0x5597611f8060 <line:507:7, col:23> col:23 __prioceiling 'int *restrict'
| |-NoThrowAttr 0x5597611f8278 <line:508:22>
| `-NonNullAttr 0x5597611f82d0 <col:63, col:80> 1 2
|-FunctionDecl 0x5597611f8598 <line:509:1, line:512:82> line:509:12 pthread_mutex_setprioceiling 'int (pthread_mutex_t *restrict, int, int *restrict)' extern
| |-ParmVarDecl 0x5597611f8318 <col:42, col:70> col:70 __mutex 'pthread_mutex_t *restrict'
| |-ParmVarDecl 0x5597611f8398 <line:510:7, col:11> col:11 __prioceiling 'int'
| |-ParmVarDecl 0x5597611f8418 <line:511:7, col:23> col:23 __old_ceiling 'int *restrict'
| |-NoThrowAttr 0x5597611f8650 <line:512:22>
| `-NonNullAttr 0x5597611f86a8 <col:63, col:80> 1 3
|-FunctionDecl 0x5597611f87b0 <line:513:1, line:514:79> line:513:12 pthread_mutex_consistent 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x5597611f86f8 <col:38, col:55> col:55 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x5597611f8858 <line:514:22>
| `-NonNullAttr 0x5597611f88b0 <col:63, col:77> 1
|-FunctionDecl 0x5597611f8ad8 <line:515:1, line:516:79> line:515:12 pthread_mutexattr_init 'int (pthread_mutexattr_t *)' extern
| |-ParmVarDecl 0x5597611f8960 <col:36, col:57> col:57 __attr 'pthread_mutexattr_t *'
| |-NoThrowAttr 0x5597611f8b80 <line:516:22>
| `-NonNullAttr 0x5597611f8bd8 <col:63, col:77> 1
|-FunctionDecl 0x5597611f8ce0 <line:517:1, line:518:79> line:517:12 pthread_mutexattr_destroy 'int (pthread_mutexattr_t *)' extern
| |-ParmVarDecl 0x5597611f8c28 <col:39, col:60> col:60 __attr 'pthread_mutexattr_t *'
| |-NoThrowAttr 0x5597611f8d88 <line:518:22>
| `-NonNullAttr 0x5597611f8de0 <col:63, col:77> 1
|-FunctionDecl 0x5597611f9008 <line:519:1, line:522:82> line:519:12 pthread_mutexattr_getpshared 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x5597611f8e28 <col:42, line:520:18> col:18 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x5597611f8ea8 <line:521:7, col:23> col:23 __pshared 'int *restrict'
| |-NoThrowAttr 0x5597611f90b8 <line:522:22>
| `-NonNullAttr 0x5597611f9110 <col:63, col:80> 1 2
|-FunctionDecl 0x5597611f9318 <line:523:1, line:525:79> line:523:12 pthread_mutexattr_setpshared 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x5597611f9158 <col:42, col:63> col:63 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x5597611f91d8 <line:524:7, col:11> col:11 __pshared 'int'
| |-NoThrowAttr 0x5597611f93c8 <line:525:22>
| `-NonNullAttr 0x5597611f9420 <col:63, col:77> 1
|-FunctionDecl 0x5597611f95c8 <line:526:1, line:528:82> line:526:12 pthread_mutexattr_gettype 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x5597611f9468 <col:39, line:527:11> col:11 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x5597611f94e8 <col:19, col:35> col:35 __kind 'int *restrict'
| |-NoThrowAttr 0x5597611f9678 <line:528:22>
| `-NonNullAttr 0x5597611f96d0 <col:63, col:80> 1 2
|-FunctionDecl 0x5597611f9858 <line:529:1, line:530:79> line:529:12 pthread_mutexattr_settype 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x5597611f9718 <col:39, col:60> col:60 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x5597611f9798 <col:68, col:72> col:72 __kind 'int'
| |-NoThrowAttr 0x5597611f9908 <line:530:22>
| `-NonNullAttr 0x5597611f9960 <col:63, col:77> 1
|-FunctionDecl 0x5597611f9b20 <line:531:1, line:534:82> line:531:12 pthread_mutexattr_getprotocol 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x5597611f99a8 <col:43, line:532:19> col:19 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x5597611f9a40 <line:533:8, col:24> col:24 __protocol 'int *restrict'
| |-NoThrowAttr 0x5597611f9bd0 <line:534:22>
| `-NonNullAttr 0x5597611f9c28 <col:63, col:80> 1 2
|-FunctionDecl 0x5597611f9db8 <line:535:1, line:537:79> line:535:12 pthread_mutexattr_setprotocol 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x5597611f9c78 <col:43, col:64> col:64 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x5597611f9cf8 <line:536:8, col:12> col:12 __protocol 'int'
| |-NoThrowAttr 0x5597611f9e68 <line:537:22>
| `-NonNullAttr 0x5597611f9ec0 <col:63, col:77> 1
|-FunctionDecl 0x5597611fa068 <line:538:1, line:541:82> line:538:12 pthread_mutexattr_getprioceiling 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x5597611f9f08 <col:46, line:539:22> col:22 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x5597611f9f88 <line:540:11, col:27> col:27 __prioceiling 'int *restrict'
| |-NoThrowAttr 0x5597611fa118 <line:541:22>
| `-NonNullAttr 0x5597611fa170 <col:63, col:80> 1 2
|-FunctionDecl 0x5597611fa2f8 <line:542:1, line:544:79> line:542:12 pthread_mutexattr_setprioceiling 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x5597611fa1b8 <col:46, col:67> col:67 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x5597611fa238 <line:543:11, col:15> col:15 __prioceiling 'int'
| |-NoThrowAttr 0x5597611fa3a8 <line:544:22>
| `-NonNullAttr 0x5597611fa400 <col:63, col:77> 1
|-FunctionDecl 0x5597611fa5e8 <line:545:1, line:547:82> line:545:12 pthread_mutexattr_getrobust 'int (const pthread_mutexattr_t *, int *)' extern
| |-ParmVarDecl 0x5597611fa448 <col:41, col:68> col:68 __attr 'const pthread_mutexattr_t *'
| |-ParmVarDecl 0x5597611fa4c8 <line:546:6, col:11> col:11 __robustness 'int *'
| |-NoThrowAttr 0x5597611fa698 <line:547:22>
| `-NonNullAttr 0x5597611fa6f0 <col:63, col:80> 1 2
|-FunctionDecl 0x5597611fa878 <line:548:1, line:550:79> line:548:12 pthread_mutexattr_setrobust 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x5597611fa738 <col:41, col:62> col:62 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x5597611fa7b8 <line:549:6, col:10> col:10 __robustness 'int'
| |-NoThrowAttr 0x5597611fa928 <line:550:22>
| `-NonNullAttr 0x5597611fa980 <col:63, col:77> 1
|-FunctionDecl 0x5597611fbcf8 <line:551:1, line:553:86> line:551:12 pthread_rwlock_init 'int (pthread_rwlock_t *restrict, const pthread_rwlockattr_t *restrict)' extern
| |-ParmVarDecl 0x5597611fbaa0 <col:33, col:62> col:62 __rwlock 'pthread_rwlock_t *restrict'
| |-ParmVarDecl 0x5597611fbbb0 <line:552:5, line:553:5> col:5 __attr 'const pthread_rwlockattr_t *restrict'
| |-NoThrowAttr 0x5597611fbda8 <col:29>
| `-NonNullAttr 0x5597611fbe00 <col:70, col:84> 1
|-FunctionDecl 0x5597611fbf78 <line:554:1, line:555:79> line:554:12 pthread_rwlock_destroy 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x5597611fbe48 <col:36, col:54> col:54 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x5597611fc020 <line:555:22>
| `-NonNullAttr 0x5597611fc078 <col:63, col:77> 1
|-FunctionDecl 0x5597611fc180 <line:556:1, line:557:68> line:556:12 pthread_rwlock_rdlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x5597611fc0c8 <col:35, col:53> col:53 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x5597611fc228 <line:557:22>
| `-NonNullAttr 0x5597611fc280 <col:52, col:66> 1
|-FunctionDecl 0x5597611fc380 <line:558:1, line:559:65> line:558:12 pthread_rwlock_tryrdlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x5597611fc2c8 <col:38, col:56> col:56 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x5597611fc428 <line:559:19>
| `-NonNullAttr 0x5597611fc480 <col:49, col:63> 1
|-FunctionDecl 0x5597611fc6b8 <line:560:1, line:562:88> line:560:12 pthread_rwlock_timedrdlock 'int (pthread_rwlock_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x5597611fc4c8 <col:40, col:69> col:69 __rwlock 'pthread_rwlock_t *restrict'
| |-ParmVarDecl 0x5597611fc558 <line:561:12, line:562:12> col:12 __abstime 'const struct timespec *restrict'
| |-NoThrowAttr 0x5597611fc768 <col:39>
| `-NonNullAttr 0x5597611fc7c0 <col:69, col:86> 1 2
|-FunctionDecl 0x5597611fc8c0 <line:563:1, line:564:68> line:563:12 pthread_rwlock_wrlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x5597611fc808 <col:35, col:53> col:53 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x5597611fc968 <line:564:22>
| `-NonNullAttr 0x5597611fc9c0 <col:52, col:66> 1
|-FunctionDecl 0x5597611fcb28 <line:565:1, line:566:68> line:565:12 pthread_rwlock_trywrlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x5597611fca70 <col:38, col:56> col:56 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x5597611fcbd0 <line:566:22>
| `-NonNullAttr 0x5597611fcc28 <col:52, col:66> 1
|-FunctionDecl 0x5597611fcde8 <line:567:1, line:569:88> line:567:12 pthread_rwlock_timedwrlock 'int (pthread_rwlock_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x5597611fcc78 <col:40, col:69> col:69 __rwlock 'pthread_rwlock_t *restrict'
| |-ParmVarDecl 0x5597611fcd08 <line:568:12, line:569:12> col:12 __abstime 'const struct timespec *restrict'
| |-NoThrowAttr 0x5597611fce98 <col:39>
| `-NonNullAttr 0x5597611fcef0 <col:69, col:86> 1 2
|-FunctionDecl 0x5597611fcff0 <line:570:1, line:571:68> line:570:12 pthread_rwlock_unlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x5597611fcf38 <col:35, col:53> col:53 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x5597611fd098 <line:571:22>
| `-NonNullAttr 0x5597611fd0f0 <col:52, col:66> 1
|-FunctionDecl 0x5597611fd2d8 <line:572:1, line:573:79> line:572:12 pthread_rwlockattr_init 'int (pthread_rwlockattr_t *)' extern
| |-ParmVarDecl 0x5597611fd1a0 <col:37, col:59> col:59 __attr 'pthread_rwlockattr_t *'
| |-NoThrowAttr 0x5597611fd380 <line:573:22>
| `-NonNullAttr 0x5597611fd3d8 <col:63, col:77> 1
|-FunctionDecl 0x5597611fd4e0 <line:574:1, line:575:79> line:574:12 pthread_rwlockattr_destroy 'int (pthread_rwlockattr_t *)' extern
| |-ParmVarDecl 0x5597611fd428 <col:40, col:62> col:62 __attr 'pthread_rwlockattr_t *'
| |-NoThrowAttr 0x5597611fd588 <line:575:22>
| `-NonNullAttr 0x5597611fd5e0 <col:63, col:77> 1
|-FunctionDecl 0x5597611fd808 <line:576:1, line:579:82> line:576:12 pthread_rwlockattr_getpshared 'int (const pthread_rwlockattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x5597611fd628 <col:43, line:577:19> col:19 __attr 'const pthread_rwlockattr_t *restrict'
| |-ParmVarDecl 0x5597611fd6a8 <line:578:8, col:24> col:24 __pshared 'int *restrict'
| |-NoThrowAttr 0x5597611fd8b8 <line:579:22>
| `-NonNullAttr 0x5597611fd910 <col:63, col:80> 1 2
|-FunctionDecl 0x5597611fdb38 <line:580:1, line:582:79> line:580:12 pthread_rwlockattr_setpshared 'int (pthread_rwlockattr_t *, int)' extern
| |-ParmVarDecl 0x5597611fd958 <col:43, col:65> col:65 __attr 'pthread_rwlockattr_t *'
| |-ParmVarDecl 0x5597611fd9d8 <line:581:8, col:12> col:12 __pshared 'int'
| |-NoThrowAttr 0x5597611fdbe8 <line:582:22>
| `-NonNullAttr 0x5597611fdc40 <col:63, col:77> 1
|-FunctionDecl 0x5597611fdde8 <line:583:1, line:586:82> line:583:12 pthread_rwlockattr_getkind_np 'int (const pthread_rwlockattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x5597611fdc88 <col:43, line:584:19> col:19 __attr 'const pthread_rwlockattr_t *restrict'
| |-ParmVarDecl 0x5597611fdd08 <line:585:8, col:24> col:24 __pref 'int *restrict'
| |-NoThrowAttr 0x5597611fde98 <line:586:22>
| `-NonNullAttr 0x5597611fdef0 <col:63, col:80> 1 2
|-FunctionDecl 0x5597611fe078 <line:587:1, line:588:93> line:587:12 pthread_rwlockattr_setkind_np 'int (pthread_rwlockattr_t *, int)' extern
| |-ParmVarDecl 0x5597611fdf38 <col:43, col:65> col:65 __attr 'pthread_rwlockattr_t *'
| |-ParmVarDecl 0x5597611fdfb8 <line:588:8, col:12> col:12 __pref 'int'
| |-NoThrowAttr 0x5597611fe128 <col:36>
| `-NonNullAttr 0x5597611fe180 <col:77, col:91> 1
|-FunctionDecl 0x5597611fe4b8 <line:589:1, line:591:79> line:589:12 pthread_cond_init 'int (pthread_cond_t *restrict, const pthread_condattr_t *restrict)' extern
| |-ParmVarDecl 0x5597611fe260 <col:31, col:58> col:58 __cond 'pthread_cond_t *restrict'
| |-ParmVarDecl 0x5597611fe370 <line:590:10, col:47> col:47 __cond_attr 'const pthread_condattr_t *restrict'
| |-NoThrowAttr 0x5597611fe568 <line:591:22>
| `-NonNullAttr 0x5597611fe5c0 <col:63, col:77> 1
|-FunctionDecl 0x5597611fe738 <line:592:1, line:593:79> line:592:12 pthread_cond_destroy 'int (pthread_cond_t *)' extern
| |-ParmVarDecl 0x5597611fe608 <col:34, col:50> col:50 __cond 'pthread_cond_t *'
| |-NoThrowAttr 0x5597611fe7e0 <line:593:22>
| `-NonNullAttr 0x5597611fe838 <col:63, col:77> 1
|-FunctionDecl 0x5597611fe940 <line:594:1, line:595:68> line:594:12 pthread_cond_signal 'int (pthread_cond_t *)' extern
| |-ParmVarDecl 0x5597611fe888 <col:33, col:49> col:49 __cond 'pthread_cond_t *'
| |-NoThrowAttr 0x5597611fe9e8 <line:595:22>
| `-NonNullAttr 0x5597611fea40 <col:52, col:66> 1
|-FunctionDecl 0x5597611feb58 <line:596:1, line:597:68> line:596:12 pthread_cond_broadcast 'int (pthread_cond_t *)' extern
| |-ParmVarDecl 0x5597611feaa0 <col:36, col:52> col:52 __cond 'pthread_cond_t *'
| |-NoThrowAttr 0x5597611fec00 <line:597:22>
| `-NonNullAttr 0x5597611fec58 <col:52, col:66> 1
|-FunctionDecl 0x5597611fee88 <line:598:1, line:600:41> line:598:12 pthread_cond_wait 'int (pthread_cond_t *restrict, pthread_mutex_t *restrict)' extern
| |-ParmVarDecl 0x5597611feca8 <col:31, col:58> col:58 __cond 'pthread_cond_t *restrict'
| |-ParmVarDecl 0x5597611fed20 <line:599:10, col:38> col:38 __mutex 'pthread_mutex_t *restrict'
| `-NonNullAttr 0x5597611fef38 <line:600:22, col:39> 1 2
|-FunctionDecl 0x5597611ff268 <line:601:1, line:604:44> line:601:12 pthread_cond_timedwait 'int (pthread_cond_t *restrict, pthread_mutex_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x5597611fefb8 <col:36, col:63> col:63 __cond 'pthread_cond_t *restrict'
| |-ParmVarDecl 0x5597611ff030 <line:602:8, col:36> col:36 __mutex 'pthread_mutex_t *restrict'
| |-ParmVarDecl 0x5597611ff0c0 <line:603:8, col:42> col:42 __abstime 'const struct timespec *restrict'
| `-NonNullAttr 0x5597611ff320 <line:604:22, col:42> 1 2 3
|-FunctionDecl 0x5597611ff538 <line:605:1, line:606:79> line:605:12 pthread_condattr_init 'int (pthread_condattr_t *)' extern
| |-ParmVarDecl 0x5597611ff400 <col:35, col:55> col:55 __attr 'pthread_condattr_t *'
| |-NoThrowAttr 0x5597611ff5e0 <line:606:22>
| `-NonNullAttr 0x5597611ff638 <col:63, col:77> 1
|-FunctionDecl 0x5597611ff740 <line:607:1, line:608:79> line:607:12 pthread_condattr_destroy 'int (pthread_condattr_t *)' extern
| |-ParmVarDecl 0x5597611ff688 <col:38, col:58> col:58 __attr 'pthread_condattr_t *'
| |-NoThrowAttr 0x5597611ff7e8 <line:608:22>
| `-NonNullAttr 0x5597611ff840 <col:63, col:77> 1
|-FunctionDecl 0x5597611ffaa0 <line:609:1, line:612:82> line:609:12 pthread_condattr_getpshared 'int (const pthread_condattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x5597611ff888 <col:41, line:610:17> col:17 __attr 'const pthread_condattr_t *restrict'
| |-ParmVarDecl 0x5597611ff908 <line:611:6, col:22> col:22 __pshared 'int *restrict'
| |-NoThrowAttr 0x5597611ffb50 <line:612:22>
| `-NonNullAttr 0x5597611ffba8 <col:63, col:80> 1 2
|-FunctionDecl 0x5597611ffdb8 <line:613:1, line:614:94> line:613:12 pthread_condattr_setpshared 'int (pthread_condattr_t *, int)' extern
| |-ParmVarDecl 0x5597611ffbf8 <col:41, col:61> col:61 __attr 'pthread_condattr_t *'
| |-ParmVarDecl 0x5597611ffc78 <line:614:6, col:10> col:10 __pshared 'int'
| |-NoThrowAttr 0x5597611ffe68 <col:37>
| `-NonNullAttr 0x5597611ffec0 <col:78, col:92> 1
|-FunctionDecl 0x5597612000d8 <line:615:1, line:618:82> line:615:12 pthread_condattr_getclock 'int (const pthread_condattr_t *restrict, __clockid_t *restrict)' extern
| |-ParmVarDecl 0x5597611fff08 <col:39, line:616:22> col:22 __attr 'const pthread_condattr_t *restrict'
| |-ParmVarDecl 0x5597611fffb0 <line:617:11, col:35> col:35 __clock_id '__clockid_t *restrict'
| |-NoThrowAttr 0x559761200188 <line:618:22>
| `-NonNullAttr 0x5597612001e0 <col:63, col:80> 1 2
|-FunctionDecl 0x5597612003a8 <line:619:1, line:621:79> line:619:12 pthread_condattr_setclock 'int (pthread_condattr_t *, __clockid_t)' extern
| |-ParmVarDecl 0x559761200228 <col:39, col:59> col:59 __attr 'pthread_condattr_t *'
| |-ParmVarDecl 0x5597612002a0 <line:620:11, col:23> col:23 __clock_id '__clockid_t':'int'
| |-NoThrowAttr 0x559761200458 <line:621:22>
| `-NonNullAttr 0x5597612004b0 <col:63, col:77> 1
|-FunctionDecl 0x559761200758 <line:622:1, line:623:79> line:622:12 pthread_spin_init 'int (pthread_spinlock_t *, int)' extern
| |-ParmVarDecl 0x559761200590 <col:31, col:51> col:51 __lock 'pthread_spinlock_t *'
| |-ParmVarDecl 0x559761200610 <col:59, col:63> col:63 __pshared 'int'
| |-NoThrowAttr 0x559761200808 <line:623:22>
| `-NonNullAttr 0x559761200860 <col:63, col:77> 1
|-FunctionDecl 0x5597612009d8 <line:624:1, line:625:79> line:624:12 pthread_spin_destroy 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x5597612008a8 <col:34, col:54> col:54 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x559761200ab0 <line:625:22>
| `-NonNullAttr 0x559761200b08 <col:63, col:77> 1
|-FunctionDecl 0x559761200c10 <line:626:1, line:627:68> line:626:12 pthread_spin_lock 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x559761200b58 <col:31, col:51> col:51 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x559761200cb8 <line:627:22>
| `-NonNullAttr 0x559761200d10 <col:52, col:66> 1
|-FunctionDecl 0x559761200e10 <line:628:1, line:629:68> line:628:12 pthread_spin_trylock 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x559761200d58 <col:34, col:54> col:54 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x559761200eb8 <line:629:22>
| `-NonNullAttr 0x559761200f10 <col:52, col:66> 1
|-FunctionDecl 0x559761201010 <line:630:1, line:631:68> line:630:12 pthread_spin_unlock 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x559761200f58 <col:33, col:53> col:53 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x5597612010b8 <line:631:22>
| `-NonNullAttr 0x559761201110 <col:52, col:66> 1
|-FunctionDecl 0x5597612014e8 <line:632:1, line:635:79> line:632:12 pthread_barrier_init 'int (pthread_barrier_t *restrict, const pthread_barrierattr_t *restrict, unsigned int)' extern
| |-ParmVarDecl 0x5597612011f0 <col:34, col:64> col:64 __barrier 'pthread_barrier_t *restrict'
| |-ParmVarDecl 0x559761201300 <line:633:6, line:634:6> col:6 __attr 'const pthread_barrierattr_t *restrict'
| |-ParmVarDecl 0x559761201380 <col:14, col:27> col:27 __count 'unsigned int'
| |-NoThrowAttr 0x5597612015a0 <line:635:22>
| `-NonNullAttr 0x5597612015f8 <col:63, col:77> 1
|-FunctionDecl 0x559761201778 <line:636:1, line:637:79> line:636:12 pthread_barrier_destroy 'int (pthread_barrier_t *)' extern
| |-ParmVarDecl 0x559761201648 <col:37, col:56> col:56 __barrier 'pthread_barrier_t *'
| |-NoThrowAttr 0x559761201820 <line:637:22>
| `-NonNullAttr 0x559761201878 <col:63, col:77> 1
|-FunctionDecl 0x559761201980 <line:638:1, line:639:68> line:638:12 pthread_barrier_wait 'int (pthread_barrier_t *)' extern
| |-ParmVarDecl 0x5597612018c8 <col:34, col:53> col:53 __barrier 'pthread_barrier_t *'
| |-NoThrowAttr 0x559761201a28 <line:639:22>
| `-NonNullAttr 0x559761201a80 <col:52, col:66> 1
|-FunctionDecl 0x559761202c88 <line:640:1, line:641:79> line:640:12 pthread_barrierattr_init 'int (pthread_barrierattr_t *)' extern
| |-ParmVarDecl 0x559761202b50 <col:38, col:61> col:61 __attr 'pthread_barrierattr_t *'
| |-NoThrowAttr 0x559761202d30 <line:641:22>
| `-NonNullAttr 0x559761202d88 <col:63, col:77> 1
|-FunctionDecl 0x559761202e90 <line:642:1, line:643:79> line:642:12 pthread_barrierattr_destroy 'int (pthread_barrierattr_t *)' extern
| |-ParmVarDecl 0x559761202dd8 <col:41, col:64> col:64 __attr 'pthread_barrierattr_t *'
| |-NoThrowAttr 0x559761202f38 <line:643:22>
| `-NonNullAttr 0x559761202f90 <col:63, col:77> 1
|-FunctionDecl 0x5597612031b8 <line:644:1, line:647:82> line:644:12 pthread_barrierattr_getpshared 'int (const pthread_barrierattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x559761202fd8 <col:44, line:645:20> col:20 __attr 'const pthread_barrierattr_t *restrict'
| |-ParmVarDecl 0x559761203058 <line:646:9, col:25> col:25 __pshared 'int *restrict'
| |-NoThrowAttr 0x559761203268 <line:647:22>
| `-NonNullAttr 0x5597612032c0 <col:63, col:80> 1 2
|-FunctionDecl 0x5597612034c8 <line:648:1, line:650:79> line:648:12 pthread_barrierattr_setpshared 'int (pthread_barrierattr_t *, int)' extern
| |-ParmVarDecl 0x559761203308 <col:44, col:67> col:67 __attr 'pthread_barrierattr_t *'
| |-ParmVarDecl 0x559761203388 <line:649:9, col:13> col:13 __pshared 'int'
| |-NoThrowAttr 0x559761203578 <line:650:22>
| `-NonNullAttr 0x5597612035d0 <col:63, col:77> 1
|-FunctionDecl 0x559761203918 <line:651:1, line:653:79> line:651:12 pthread_key_create 'int (pthread_key_t *, void (*)(void *))' extern
| |-ParmVarDecl 0x5597612036b0 <col:32, col:47> col:47 __key 'pthread_key_t *'
| |-ParmVarDecl 0x5597612037d0 <line:652:11, col:43> col:18 __destr_function 'void (*)(void *)'
| |-NoThrowAttr 0x5597612039c8 <line:653:22>
| `-NonNullAttr 0x559761203a20 <col:63, col:77> 1
|-FunctionDecl 0x559761203b88 <line:654:1, col:92> col:12 pthread_key_delete 'int (pthread_key_t)' extern
| |-ParmVarDecl 0x559761203a68 <col:32, col:46> col:46 __key 'pthread_key_t':'unsigned int'
| `-NoThrowAttr 0x559761203c30 <col:69>
|-FunctionDecl 0x559761203da8 <line:655:1, col:95> col:14 pthread_getspecific 'void *(pthread_key_t)' extern
| |-ParmVarDecl 0x559761203c98 <col:35, col:49> col:49 __key 'pthread_key_t':'unsigned int'
| `-NoThrowAttr 0x559761203e50 <col:72>
|-FunctionDecl 0x559761204088 <line:656:1, line:657:67> line:656:12 pthread_setspecific 'int (pthread_key_t, const void *)' extern
| |-ParmVarDecl 0x559761203eb8 <col:33, col:47> col:47 __key 'pthread_key_t':'unsigned int'
| |-ParmVarDecl 0x559761203f68 <line:657:5, col:17> col:17 __pointer 'const void *'
| `-NoThrowAttr 0x559761204138 <col:44>
|-FunctionDecl 0x559761204358 <line:658:1, line:660:79> line:658:12 pthread_getcpuclockid 'int (pthread_t, __clockid_t *)' extern
| |-ParmVarDecl 0x5597612041a0 <col:35, col:45> col:45 __thread_id 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x559761204218 <line:659:7, col:20> col:20 __clock_id '__clockid_t *'
| |-NoThrowAttr 0x559761204408 <line:660:22>
| `-NonNullAttr 0x559761204460 <col:63, col:77> 2
|-FunctionDecl 0x5597612048a8 <line:661:1, line:663:70> line:661:12 pthread_atfork 'int (void (*)(void), void (*)(void), void (*)(void))' extern
| |-ParmVarDecl 0x559761204540 <col:28, col:51> col:35 __prepare 'void (*)(void)'
| |-ParmVarDecl 0x559761204650 <line:662:7, col:29> col:14 __parent 'void (*)(void)'
| |-ParmVarDecl 0x559761204760 <line:663:7, col:28> col:14 __child 'void (*)(void)'
| `-NoThrowAttr 0x559761204960 <col:47>
|-FunctionDecl 0x559761204af0 <line:665:1, col:20> col:8 used P0 'void *(void *)'
| `-ParmVarDecl 0x5597612049d0 <col:11, col:17> col:17 arg 'void *'
|-FunctionDecl 0x559761204c48 <line:666:1, col:20> col:8 used P1 'void *(void *)'
| `-ParmVarDecl 0x559761204bb0 <col:11, col:17> col:17 arg 'void *'
|-FunctionDecl 0x559761204da0 <line:667:1, col:20> col:8 used P2 'void *(void *)'
| `-ParmVarDecl 0x559761204d08 <col:11, col:17> col:17 arg 'void *'
|-FunctionDecl 0x559761204e68 <line:668:1, col:12> col:6 fence 'void ()'
|-FunctionDecl 0x559761204f28 <line:669:1, col:12> col:6 isync 'void ()'
|-FunctionDecl 0x559761204fe8 <line:670:1, col:14> col:6 lwfence 'void ()'
|-VarDecl 0x5597612050a0 <line:671:1, col:5> col:5 used __unbuffered_cnt 'int'
|-VarDecl 0x559761205120 prev 0x5597612050a0 <line:672:1, col:24> col:5 used __unbuffered_cnt 'int' cinit
| `-IntegerLiteral 0x559761205188 <col:24> 'int' 0
|-VarDecl 0x5597612051c0 <line:673:1, col:5> col:5 used __unbuffered_p1_EAX 'int'
|-VarDecl 0x559761205240 prev 0x5597612051c0 <line:674:1, col:27> col:5 used __unbuffered_p1_EAX 'int' cinit
| `-IntegerLiteral 0x5597612052a8 <col:27> 'int' 0
|-VarDecl 0x5597612052e0 <line:675:1, col:5> col:5 used __unbuffered_p1_EBX 'int'
|-VarDecl 0x559761205360 prev 0x5597612052e0 <line:676:1, col:27> col:5 used __unbuffered_p1_EBX 'int' cinit
| `-IntegerLiteral 0x5597612053c8 <col:27> 'int' 0
|-VarDecl 0x559761205400 <line:677:1, col:5> col:5 used __unbuffered_p2_EAX 'int'
|-VarDecl 0x559761205480 prev 0x559761205400 <line:678:1, col:27> col:5 used __unbuffered_p2_EAX 'int' cinit
| `-IntegerLiteral 0x5597612054e8 <col:27> 'int' 0
|-VarDecl 0x559761205520 <line:679:1, col:5> col:5 used __unbuffered_p2_EBX 'int'
|-VarDecl 0x5597612055a0 prev 0x559761205520 <line:680:1, col:27> col:5 used __unbuffered_p2_EBX 'int' cinit
| `-IntegerLiteral 0x559761205608 <col:27> 'int' 0
|-VarDecl 0x559761205640 <line:681:1, col:5> col:5 used a 'int'
|-VarDecl 0x5597612056c0 prev 0x559761205640 <line:682:1, col:9> col:5 used a 'int' cinit
| `-IntegerLiteral 0x559761205728 <col:9> 'int' 0
|-VarDecl 0x559761205760 <line:683:1, col:5> col:5 used b 'int'
|-VarDecl 0x5597612057e0 prev 0x559761205760 <line:684:1, col:9> col:5 used b 'int' cinit
| `-IntegerLiteral 0x559761205848 <col:9> 'int' 0
|-VarDecl 0x559761205878 <line:685:1, col:7> col:7 used main$tmp_guard0 '_Bool'
|-VarDecl 0x5597612058f0 <line:686:1, col:7> col:7 used main$tmp_guard1 '_Bool'
|-VarDecl 0x559761205970 <line:687:1, col:5> col:5 used x 'int'
|-VarDecl 0x5597612059f0 prev 0x559761205970 <line:688:1, col:9> col:5 used x 'int' cinit
| `-IntegerLiteral 0x559761205a58 <col:9> 'int' 0
|-VarDecl 0x559761205b00 <line:689:1, col:5> col:5 used y 'int'
|-VarDecl 0x559761205b80 prev 0x559761205b00 <line:690:1, col:9> col:5 used y 'int' cinit
| `-IntegerLiteral 0x559761205be8 <col:9> 'int' 0
|-VarDecl 0x559761205c20 <line:691:1, col:5> col:5 used z 'int'
|-VarDecl 0x559761205ca0 prev 0x559761205c20 <line:692:1, col:9> col:5 used z 'int' cinit
| `-IntegerLiteral 0x559761205d08 <col:9> 'int' 0
|-VarDecl 0x559761205d38 <line:693:1, col:7> col:7 used z$flush_delayed '_Bool'
|-VarDecl 0x559761205db8 <line:694:1, col:5> col:5 used z$mem_tmp 'int'
|-VarDecl 0x559761205e30 <line:695:1, col:7> col:7 used z$r_buff0_thd0 '_Bool'
|-VarDecl 0x559761205ea8 <line:696:1, col:7> col:7 used z$r_buff0_thd1 '_Bool'
|-VarDecl 0x559761205f20 <line:697:1, col:7> col:7 used z$r_buff0_thd2 '_Bool'
|-VarDecl 0x559761205f98 <line:698:1, col:7> col:7 used z$r_buff0_thd3 '_Bool'
|-VarDecl 0x559761206010 <line:699:1, col:7> col:7 used z$r_buff1_thd0 '_Bool'
|-VarDecl 0x559761206088 <line:700:1, col:7> col:7 used z$r_buff1_thd1 '_Bool'
|-VarDecl 0x559761206100 <line:701:1, col:7> col:7 used z$r_buff1_thd2 '_Bool'
|-VarDecl 0x559761206178 <line:702:1, col:7> col:7 used z$r_buff1_thd3 '_Bool'
|-VarDecl 0x5597612061f0 <line:703:1, col:7> col:7 z$read_delayed '_Bool'
|-VarDecl 0x559761206270 <line:704:1, col:6> col:6 z$read_delayed_var 'int *'
|-VarDecl 0x5597612062f0 <line:705:1, col:5> col:5 used z$w_buff0 'int'
|-VarDecl 0x559761206368 <line:706:1, col:7> col:7 used z$w_buff0_used '_Bool'
|-VarDecl 0x5597612063e8 <line:707:1, col:5> col:5 used z$w_buff1 'int'
|-VarDecl 0x559761206460 <line:708:1, col:7> col:7 used z$w_buff1_used '_Bool'
|-VarDecl 0x5597612064d8 <line:709:1, col:7> col:7 used weak$$choice0 '_Bool'
|-VarDecl 0x559761206550 <line:710:1, col:7> col:7 used weak$$choice2 '_Bool'
|-FunctionDecl 0x559761206668 prev 0x559761204af0 <line:711:1, line:725:1> line:711:8 used P0 'void *(void *)'
| |-ParmVarDecl 0x5597612065d0 <col:11, col:17> col:17 arg 'void *'
| `-CompoundStmt 0x559761206c28 <line:712:1, line:725:1>
|   |-CallExpr 0x559761206778 <line:713:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x559761206760 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x559761206710 <col:3> 'void ()' Function 0x5597611abe40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x5597612067d8 <line:714:3, col:7> 'int' '='
|   | |-DeclRefExpr 0x559761206798 <col:3> 'int' lvalue Var 0x5597612057e0 'b' 'int'
|   | `-IntegerLiteral 0x5597612067b8 <col:7> 'int' 1
|   |-CallExpr 0x559761206830 <line:715:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x559761206818 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5597612067f8 <col:3> 'void ()' Function 0x5597611abf00 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x559761206888 <line:716:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x559761206870 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x559761206850 <col:3> 'void ()' Function 0x5597611abe40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x5597612068e8 <line:717:3, col:7> 'int' '='
|   | |-DeclRefExpr 0x5597612068a8 <col:3> 'int' lvalue Var 0x5597612059f0 'x' 'int'
|   | `-IntegerLiteral 0x5597612068c8 <col:7> 'int' 1
|   |-CallExpr 0x559761206940 <line:718:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x559761206928 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x559761206908 <col:3> 'void ()' Function 0x5597611abf00 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x559761206998 <line:719:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x559761206980 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x559761206960 <col:3> 'void ()' Function 0x5597611abe40 '__VERIFIER_atomic_begin' 'void ()'
|   |-CallExpr 0x5597612069f0 <line:720:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x5597612069d8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5597612069b8 <col:3> 'void ()' Function 0x5597611abf00 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x559761206a48 <line:721:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x559761206a30 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x559761206a10 <col:3> 'void ()' Function 0x5597611abe40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x559761206b10 <line:722:3, col:41> 'int' '='
|   | |-DeclRefExpr 0x559761206a68 <col:3> 'int' lvalue Var 0x559761205120 '__unbuffered_cnt' 'int'
|   | `-BinaryOperator 0x559761206ae0 <col:22, col:41> 'int' '+'
|   |   |-ImplicitCastExpr 0x559761206ac8 <col:22> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x559761206a88 <col:22> 'int' lvalue Var 0x559761205120 '__unbuffered_cnt' 'int'
|   |   `-IntegerLiteral 0x559761206aa8 <col:41> 'int' 1
|   |-CallExpr 0x559761206b68 <line:723:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x559761206b50 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x559761206b30 <col:3> 'void ()' Function 0x5597611abf00 '__VERIFIER_atomic_end' 'void ()'
|   `-ReturnStmt 0x559761206c18 <line:724:3, col:36>
|     `-CallExpr 0x559761206bf8 <col:10, col:36> 'void *'
|       `-ImplicitCastExpr 0x559761206be0 <col:10> 'void *(*)(void)' <FunctionToPointerDecay>
|         `-DeclRefExpr 0x559761206b88 <col:10> 'void *(void)' Function 0x5597611ab958 '__VERIFIER_nondet_pointer' 'void *(void)'
|-FunctionDecl 0x559761206d48 prev 0x559761204c48 <line:726:1, line:759:1> line:726:8 used P1 'void *(void *)'
| |-ParmVarDecl 0x559761206cb0 <col:11, col:17> col:17 arg 'void *'
| `-CompoundStmt 0x559761209e90 <line:727:1, line:759:1>
|   |-CallExpr 0x559761206e28 <line:728:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x559761206e10 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x559761206df0 <col:3> 'void ()' Function 0x5597611abe40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x559761206e88 <line:729:3, col:7> 'int' '='
|   | |-DeclRefExpr 0x559761206e48 <col:3> 'int' lvalue Var 0x5597612059f0 'x' 'int'
|   | `-IntegerLiteral 0x559761206e68 <col:7> 'int' 2
|   |-CallExpr 0x559761206ee0 <line:730:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x559761206ec8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x559761206ea8 <col:3> 'void ()' Function 0x5597611abf00 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x559761206f38 <line:731:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x559761206f20 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x559761206f00 <col:3> 'void ()' Function 0x5597611abe40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x559761206f98 <line:732:3, col:7> 'int' '='
|   | |-DeclRefExpr 0x559761206f58 <col:3> 'int' lvalue Var 0x559761205b80 'y' 'int'
|   | `-IntegerLiteral 0x559761206f78 <col:7> 'int' 1
|   |-CallExpr 0x559761206ff0 <line:733:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x559761206fd8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x559761206fb8 <col:3> 'void ()' Function 0x5597611abf00 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x559761207048 <line:734:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x559761207030 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x559761207010 <col:3> 'void ()' Function 0x5597611abe40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x5597612070c0 <line:735:3, col:25> 'int' '='
|   | |-DeclRefExpr 0x559761207068 <col:3> 'int' lvalue Var 0x559761205240 '__unbuffered_p1_EAX' 'int'
|   | `-ImplicitCastExpr 0x5597612070a8 <col:25> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x559761207088 <col:25> 'int' lvalue Var 0x559761205b80 'y' 'int'
|   |-CallExpr 0x559761207118 <line:736:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x559761207100 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5597612070e0 <col:3> 'void ()' Function 0x5597611abf00 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x559761207170 <line:737:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x559761207158 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x559761207138 <col:3> 'void ()' Function 0x5597611abe40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x559761207220 <line:738:3, col:45> '_Bool' '='
|   | |-DeclRefExpr 0x559761207190 <col:3> '_Bool' lvalue Var 0x5597612064d8 'weak$$choice0' '_Bool'
|   | `-ImplicitCastExpr 0x559761207208 <col:19, col:45> '_Bool' <PointerToBoolean>
|   |   `-CallExpr 0x5597612071e8 <col:19, col:45> 'void *'
|   |     `-ImplicitCastExpr 0x5597612071d0 <col:19> 'void *(*)(void)' <FunctionToPointerDecay>
|   |       `-DeclRefExpr 0x5597612071b0 <col:19> 'void *(void)' Function 0x5597611ab958 '__VERIFIER_nondet_pointer' 'void *(void)'
|   |-BinaryOperator 0x5597612072d0 <line:739:3, col:45> '_Bool' '='
|   | |-DeclRefExpr 0x559761207240 <col:3> '_Bool' lvalue Var 0x559761206550 'weak$$choice2' '_Bool'
|   | `-ImplicitCastExpr 0x5597612072b8 <col:19, col:45> '_Bool' <PointerToBoolean>
|   |   `-CallExpr 0x559761207298 <col:19, col:45> 'void *'
|   |     `-ImplicitCastExpr 0x559761207280 <col:19> 'void *(*)(void)' <FunctionToPointerDecay>
|   |       `-DeclRefExpr 0x559761207260 <col:19> 'void *(void)' Function 0x5597611ab958 '__VERIFIER_nondet_pointer' 'void *(void)'
|   |-BinaryOperator 0x559761207348 <line:740:3, col:21> '_Bool' '='
|   | |-DeclRefExpr 0x5597612072f0 <col:3> '_Bool' lvalue Var 0x559761205d38 'z$flush_delayed' '_Bool'
|   | `-ImplicitCastExpr 0x559761207330 <col:21> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x559761207310 <col:21> '_Bool' lvalue Var 0x559761206550 'weak$$choice2' '_Bool'
|   |-BinaryOperator 0x5597612073c0 <line:741:3, col:15> 'int' '='
|   | |-DeclRefExpr 0x559761207368 <col:3> 'int' lvalue Var 0x559761205db8 'z$mem_tmp' 'int'
|   | `-ImplicitCastExpr 0x5597612073a8 <col:15> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x559761207388 <col:15> 'int' lvalue Var 0x559761205ca0 'z' 'int'
|   |-BinaryOperator 0x5597612077f8 <line:742:3, col:162> 'int' '='
|   | |-DeclRefExpr 0x5597612073e0 <col:3> 'int' lvalue Var 0x559761205ca0 'z' 'int'
|   | `-ConditionalOperator 0x5597612077c8 <col:7, col:162> 'int'
|   |   |-BinaryOperator 0x5597612075f0 <col:7, col:84> 'int' '||'
|   |   | |-BinaryOperator 0x559761207510 <col:7, col:46> 'int' '||'
|   |   | | |-UnaryOperator 0x559761207438 <col:7, col:8> 'int' prefix '!' cannot overflow
|   |   | | | `-ImplicitCastExpr 0x559761207420 <col:8> '_Bool' <LValueToRValue>
|   |   | | |   `-DeclRefExpr 0x559761207400 <col:8> '_Bool' lvalue Var 0x559761206368 'z$w_buff0_used' '_Bool'
|   |   | | `-BinaryOperator 0x5597612074f0 <col:26, col:46> 'int' '&&'
|   |   | |   |-UnaryOperator 0x559761207488 <col:26, col:27> 'int' prefix '!' cannot overflow
|   |   | |   | `-ImplicitCastExpr 0x559761207470 <col:27> '_Bool' <LValueToRValue>
|   |   | |   |   `-DeclRefExpr 0x559761207450 <col:27> '_Bool' lvalue Var 0x559761205f20 'z$r_buff0_thd2' '_Bool'
|   |   | |   `-UnaryOperator 0x5597612074d8 <col:45, col:46> 'int' prefix '!' cannot overflow
|   |   | |     `-ImplicitCastExpr 0x5597612074c0 <col:46> '_Bool' <LValueToRValue>
|   |   | |       `-DeclRefExpr 0x5597612074a0 <col:46> '_Bool' lvalue Var 0x559761206460 'z$w_buff1_used' '_Bool'
|   |   | `-BinaryOperator 0x5597612075d0 <col:64, col:84> 'int' '&&'
|   |   |   |-UnaryOperator 0x559761207568 <col:64, col:65> 'int' prefix '!' cannot overflow
|   |   |   | `-ImplicitCastExpr 0x559761207550 <col:65> '_Bool' <LValueToRValue>
|   |   |   |   `-DeclRefExpr 0x559761207530 <col:65> '_Bool' lvalue Var 0x559761205f20 'z$r_buff0_thd2' '_Bool'
|   |   |   `-UnaryOperator 0x5597612075b8 <col:83, col:84> 'int' prefix '!' cannot overflow
|   |   |     `-ImplicitCastExpr 0x5597612075a0 <col:84> '_Bool' <LValueToRValue>
|   |   |       `-DeclRefExpr 0x559761207580 <col:84> '_Bool' lvalue Var 0x559761206100 'z$r_buff1_thd2' '_Bool'
|   |   |-ImplicitCastExpr 0x5597612077b0 <col:101> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x559761207610 <col:101> 'int' lvalue Var 0x559761205ca0 'z' 'int'
|   |   `-ParenExpr 0x559761207790 <col:105, col:162> 'int'
|   |     `-ConditionalOperator 0x559761207760 <col:106, col:153> 'int'
|   |       |-BinaryOperator 0x5597612076d0 <col:106, col:124> 'int' '&&'
|   |       | |-ImplicitCastExpr 0x559761207688 <col:106> 'int' <IntegralCast>
|   |       | | `-ImplicitCastExpr 0x559761207670 <col:106> '_Bool' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x559761207630 <col:106> '_Bool' lvalue Var 0x559761206368 'z$w_buff0_used' '_Bool'
|   |       | `-ImplicitCastExpr 0x5597612076b8 <col:124> 'int' <IntegralCast>
|   |       |   `-ImplicitCastExpr 0x5597612076a0 <col:124> '_Bool' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x559761207650 <col:124> '_Bool' lvalue Var 0x559761205f20 'z$r_buff0_thd2' '_Bool'
|   |       |-ImplicitCastExpr 0x559761207730 <col:141> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x5597612076f0 <col:141> 'int' lvalue Var 0x5597612062f0 'z$w_buff0' 'int'
|   |       `-ImplicitCastExpr 0x559761207748 <col:153> 'int' <LValueToRValue>
|   |         `-DeclRefExpr 0x559761207710 <col:153> 'int' lvalue Var 0x5597612063e8 'z$w_buff1' 'int'
|   |-BinaryOperator 0x559761207d28 <line:743:3, col:208> 'int' '='
|   | |-DeclRefExpr 0x559761207818 <col:3> 'int' lvalue Var 0x5597612062f0 'z$w_buff0' 'int'
|   | `-ConditionalOperator 0x559761207cf8 <col:15, col:208> 'int'
|   |   |-ImplicitCastExpr 0x559761207cc8 <col:15> 'int' <IntegralCast>
|   |   | `-ImplicitCastExpr 0x559761207cb0 <col:15> '_Bool' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x559761207838 <col:15> '_Bool' lvalue Var 0x559761206550 'weak$$choice2' '_Bool'
|   |   |-ImplicitCastExpr 0x559761207ce0 <col:31> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x559761207858 <col:31> 'int' lvalue Var 0x5597612062f0 'z$w_buff0' 'int'
|   |   `-ParenExpr 0x559761207c90 <col:43, col:208> 'int'
|   |     `-ConditionalOperator 0x559761207c60 <col:44, col:207> 'int'
|   |       |-BinaryOperator 0x559761207a68 <col:44, col:121> 'int' '||'
|   |       | |-BinaryOperator 0x559761207988 <col:44, col:83> 'int' '||'
|   |       | | |-UnaryOperator 0x5597612078b0 <col:44, col:45> 'int' prefix '!' cannot overflow
|   |       | | | `-ImplicitCastExpr 0x559761207898 <col:45> '_Bool' <LValueToRValue>
|   |       | | |   `-DeclRefExpr 0x559761207878 <col:45> '_Bool' lvalue Var 0x559761206368 'z$w_buff0_used' '_Bool'
|   |       | | `-BinaryOperator 0x559761207968 <col:63, col:83> 'int' '&&'
|   |       | |   |-UnaryOperator 0x559761207900 <col:63, col:64> 'int' prefix '!' cannot overflow
|   |       | |   | `-ImplicitCastExpr 0x5597612078e8 <col:64> '_Bool' <LValueToRValue>
|   |       | |   |   `-DeclRefExpr 0x5597612078c8 <col:64> '_Bool' lvalue Var 0x559761205f20 'z$r_buff0_thd2' '_Bool'
|   |       | |   `-UnaryOperator 0x559761207950 <col:82, col:83> 'int' prefix '!' cannot overflow
|   |       | |     `-ImplicitCastExpr 0x559761207938 <col:83> '_Bool' <LValueToRValue>
|   |       | |       `-DeclRefExpr 0x559761207918 <col:83> '_Bool' lvalue Var 0x559761206460 'z$w_buff1_used' '_Bool'
|   |       | `-BinaryOperator 0x559761207a48 <col:101, col:121> 'int' '&&'
|   |       |   |-UnaryOperator 0x5597612079e0 <col:101, col:102> 'int' prefix '!' cannot overflow
|   |       |   | `-ImplicitCastExpr 0x5597612079c8 <col:102> '_Bool' <LValueToRValue>
|   |       |   |   `-DeclRefExpr 0x5597612079a8 <col:102> '_Bool' lvalue Var 0x559761205f20 'z$r_buff0_thd2' '_Bool'
|   |       |   `-UnaryOperator 0x559761207a30 <col:120, col:121> 'int' prefix '!' cannot overflow
|   |       |     `-ImplicitCastExpr 0x559761207a18 <col:121> '_Bool' <LValueToRValue>
|   |       |       `-DeclRefExpr 0x5597612079f8 <col:121> '_Bool' lvalue Var 0x559761206100 'z$r_buff1_thd2' '_Bool'
|   |       |-ImplicitCastExpr 0x559761207c48 <col:138> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x559761207a88 <col:138> 'int' lvalue Var 0x5597612062f0 'z$w_buff0' 'int'
|   |       `-ParenExpr 0x559761207c28 <col:150, col:207> 'int'
|   |         `-ConditionalOperator 0x559761207bf8 <col:151, col:198> 'int'
|   |           |-BinaryOperator 0x559761207b68 <col:151, col:169> 'int' '&&'
|   |           | |-ImplicitCastExpr 0x559761207b20 <col:151> 'int' <IntegralCast>
|   |           | | `-ImplicitCastExpr 0x559761207ae8 <col:151> '_Bool' <LValueToRValue>
|   |           | |   `-DeclRefExpr 0x559761207aa8 <col:151> '_Bool' lvalue Var 0x559761206368 'z$w_buff0_used' '_Bool'
|   |           | `-ImplicitCastExpr 0x559761207b50 <col:169> 'int' <IntegralCast>
|   |           |   `-ImplicitCastExpr 0x559761207b38 <col:169> '_Bool' <LValueToRValue>
|   |           |     `-DeclRefExpr 0x559761207ac8 <col:169> '_Bool' lvalue Var 0x559761205f20 'z$r_buff0_thd2' '_Bool'
|   |           |-ImplicitCastExpr 0x559761207bc8 <col:186> 'int' <LValueToRValue>
|   |           | `-DeclRefExpr 0x559761207b88 <col:186> 'int' lvalue Var 0x5597612062f0 'z$w_buff0' 'int'
|   |           `-ImplicitCastExpr 0x559761207be0 <col:198> 'int' <LValueToRValue>
|   |             `-DeclRefExpr 0x559761207ba8 <col:198> 'int' lvalue Var 0x5597612062f0 'z$w_buff0' 'int'
|   |-BinaryOperator 0x559761208238 <line:744:3, col:208> 'int' '='
|   | |-DeclRefExpr 0x559761207d48 <col:3> 'int' lvalue Var 0x5597612063e8 'z$w_buff1' 'int'
|   | `-ConditionalOperator 0x559761208208 <col:15, col:208> 'int'
|   |   |-ImplicitCastExpr 0x5597612081d8 <col:15> 'int' <IntegralCast>
|   |   | `-ImplicitCastExpr 0x5597612081c0 <col:15> '_Bool' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x559761207d68 <col:15> '_Bool' lvalue Var 0x559761206550 'weak$$choice2' '_Bool'
|   |   |-ImplicitCastExpr 0x5597612081f0 <col:31> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x559761207d88 <col:31> 'int' lvalue Var 0x5597612063e8 'z$w_buff1' 'int'
|   |   `-ParenExpr 0x5597612081a0 <col:43, col:208> 'int'
|   |     `-ConditionalOperator 0x559761208170 <col:44, col:207> 'int'
|   |       |-BinaryOperator 0x559761207f98 <col:44, col:121> 'int' '||'
|   |       | |-BinaryOperator 0x559761207eb8 <col:44, col:83> 'int' '||'
|   |       | | |-UnaryOperator 0x559761207de0 <col:44, col:45> 'int' prefix '!' cannot overflow
|   |       | | | `-ImplicitCastExpr 0x559761207dc8 <col:45> '_Bool' <LValueToRValue>
|   |       | | |   `-DeclRefExpr 0x559761207da8 <col:45> '_Bool' lvalue Var 0x559761206368 'z$w_buff0_used' '_Bool'
|   |       | | `-BinaryOperator 0x559761207e98 <col:63, col:83> 'int' '&&'
|   |       | |   |-UnaryOperator 0x559761207e30 <col:63, col:64> 'int' prefix '!' cannot overflow
|   |       | |   | `-ImplicitCastExpr 0x559761207e18 <col:64> '_Bool' <LValueToRValue>
|   |       | |   |   `-DeclRefExpr 0x559761207df8 <col:64> '_Bool' lvalue Var 0x559761205f20 'z$r_buff0_thd2' '_Bool'
|   |       | |   `-UnaryOperator 0x559761207e80 <col:82, col:83> 'int' prefix '!' cannot overflow
|   |       | |     `-ImplicitCastExpr 0x559761207e68 <col:83> '_Bool' <LValueToRValue>
|   |       | |       `-DeclRefExpr 0x559761207e48 <col:83> '_Bool' lvalue Var 0x559761206460 'z$w_buff1_used' '_Bool'
|   |       | `-BinaryOperator 0x559761207f78 <col:101, col:121> 'int' '&&'
|   |       |   |-UnaryOperator 0x559761207f10 <col:101, col:102> 'int' prefix '!' cannot overflow
|   |       |   | `-ImplicitCastExpr 0x559761207ef8 <col:102> '_Bool' <LValueToRValue>
|   |       |   |   `-DeclRefExpr 0x559761207ed8 <col:102> '_Bool' lvalue Var 0x559761205f20 'z$r_buff0_thd2' '_Bool'
|   |       |   `-UnaryOperator 0x559761207f60 <col:120, col:121> 'int' prefix '!' cannot overflow
|   |       |     `-ImplicitCastExpr 0x559761207f48 <col:121> '_Bool' <LValueToRValue>
|   |       |       `-DeclRefExpr 0x559761207f28 <col:121> '_Bool' lvalue Var 0x559761206100 'z$r_buff1_thd2' '_Bool'
|   |       |-ImplicitCastExpr 0x559761208158 <col:138> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x559761207fb8 <col:138> 'int' lvalue Var 0x5597612063e8 'z$w_buff1' 'int'
|   |       `-ParenExpr 0x559761208138 <col:150, col:207> 'int'
|   |         `-ConditionalOperator 0x559761208108 <col:151, col:198> 'int'
|   |           |-BinaryOperator 0x559761208078 <col:151, col:169> 'int' '&&'
|   |           | |-ImplicitCastExpr 0x559761208030 <col:151> 'int' <IntegralCast>
|   |           | | `-ImplicitCastExpr 0x559761208018 <col:151> '_Bool' <LValueToRValue>
|   |           | |   `-DeclRefExpr 0x559761207fd8 <col:151> '_Bool' lvalue Var 0x559761206368 'z$w_buff0_used' '_Bool'
|   |           | `-ImplicitCastExpr 0x559761208060 <col:169> 'int' <IntegralCast>
|   |           |   `-ImplicitCastExpr 0x559761208048 <col:169> '_Bool' <LValueToRValue>
|   |           |     `-DeclRefExpr 0x559761207ff8 <col:169> '_Bool' lvalue Var 0x559761205f20 'z$r_buff0_thd2' '_Bool'
|   |           |-ImplicitCastExpr 0x5597612080d8 <col:186> 'int' <LValueToRValue>
|   |           | `-DeclRefExpr 0x559761208098 <col:186> 'int' lvalue Var 0x5597612063e8 'z$w_buff1' 'int'
|   |           `-ImplicitCastExpr 0x5597612080f0 <col:198> 'int' <LValueToRValue>
|   |             `-DeclRefExpr 0x5597612080b8 <col:198> 'int' lvalue Var 0x5597612063e8 'z$w_buff1' 'int'
|   |-BinaryOperator 0x5597612087e0 <line:745:3, col:227> '_Bool' '='
|   | |-DeclRefExpr 0x559761208258 <col:3> '_Bool' lvalue Var 0x559761206368 'z$w_buff0_used' '_Bool'
|   | `-ImplicitCastExpr 0x5597612087c8 <col:20, col:227> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x559761208798 <col:20, col:227> 'int'
|   |     |-ImplicitCastExpr 0x559761208750 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x559761208738 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x559761208278 <col:20> '_Bool' lvalue Var 0x559761206550 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x559761208780 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x559761208768 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x559761208298 <col:36> '_Bool' lvalue Var 0x559761206368 'z$w_buff0_used' '_Bool'
|   |     `-ParenExpr 0x559761208718 <col:53, col:227> 'int'
|   |       `-ConditionalOperator 0x5597612086e8 <col:54, col:226> 'int'
|   |         |-BinaryOperator 0x5597612084a8 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x5597612083c8 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x5597612082f0 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x5597612082d8 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x5597612082b8 <col:55> '_Bool' lvalue Var 0x559761206368 'z$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x5597612083a8 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x559761208340 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x559761208328 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x559761208308 <col:74> '_Bool' lvalue Var 0x559761205f20 'z$r_buff0_thd2' '_Bool'
|   |         | |   `-UnaryOperator 0x559761208390 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x559761208378 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x559761208358 <col:93> '_Bool' lvalue Var 0x559761206460 'z$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x559761208488 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x559761208420 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x559761208408 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x5597612083e8 <col:112> '_Bool' lvalue Var 0x559761205f20 'z$r_buff0_thd2' '_Bool'
|   |         |   `-UnaryOperator 0x559761208470 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x559761208458 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x559761208438 <col:131> '_Bool' lvalue Var 0x559761206100 'z$r_buff1_thd2' '_Bool'
|   |         |-ImplicitCastExpr 0x5597612086d0 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x5597612086b8 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x5597612084c8 <col:148> '_Bool' lvalue Var 0x559761206368 'z$w_buff0_used' '_Bool'
|   |         `-ParenExpr 0x559761208698 <col:165, col:226> 'int'
|   |           `-ConditionalOperator 0x559761208668 <col:166, col:212> 'int'
|   |             |-BinaryOperator 0x559761208588 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x559761208540 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x559761208528 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x5597612084e8 <col:166> '_Bool' lvalue Var 0x559761206368 'z$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x559761208570 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x559761208558 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x559761208508 <col:184> '_Bool' lvalue Var 0x559761205f20 'z$r_buff0_thd2' '_Bool'
|   |             |-ImplicitCastExpr 0x559761208620 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x5597612085d8 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x5597612085a8 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x559761208650 <col:212> 'int' <IntegralCast>
|   |               `-ImplicitCastExpr 0x559761208638 <col:212> '_Bool' <LValueToRValue>
|   |                 `-DeclRefExpr 0x559761208600 <col:212> '_Bool' lvalue Var 0x559761206368 'z$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x559761208dc0 <line:746:3, col:221> '_Bool' '='
|   | |-DeclRefExpr 0x559761208800 <col:3> '_Bool' lvalue Var 0x559761206460 'z$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x559761208da8 <col:20, col:221> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x559761208d78 <col:20, col:221> 'int'
|   |     |-ImplicitCastExpr 0x559761208d30 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x559761208d18 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x559761208820 <col:20> '_Bool' lvalue Var 0x559761206550 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x559761208d60 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x559761208d48 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x559761208840 <col:36> '_Bool' lvalue Var 0x559761206460 'z$w_buff1_used' '_Bool'
|   |     `-ParenExpr 0x559761208cf8 <col:53, col:221> 'int'
|   |       `-ConditionalOperator 0x559761208cc8 <col:54, col:220> 'int'
|   |         |-BinaryOperator 0x559761208a50 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x559761208970 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x559761208898 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x559761208880 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x559761208860 <col:55> '_Bool' lvalue Var 0x559761206368 'z$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x559761208950 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x5597612088e8 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x5597612088d0 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x5597612088b0 <col:74> '_Bool' lvalue Var 0x559761205f20 'z$r_buff0_thd2' '_Bool'
|   |         | |   `-UnaryOperator 0x559761208938 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x559761208920 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x559761208900 <col:93> '_Bool' lvalue Var 0x559761206460 'z$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x559761208a30 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x5597612089c8 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x5597612089b0 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x559761208990 <col:112> '_Bool' lvalue Var 0x559761205f20 'z$r_buff0_thd2' '_Bool'
|   |         |   `-UnaryOperator 0x559761208a18 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x559761208a00 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x5597612089e0 <col:131> '_Bool' lvalue Var 0x559761206100 'z$r_buff1_thd2' '_Bool'
|   |         |-ImplicitCastExpr 0x559761208cb0 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x559761208c98 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x559761208a70 <col:148> '_Bool' lvalue Var 0x559761206460 'z$w_buff1_used' '_Bool'
|   |         `-ParenExpr 0x559761208c78 <col:165, col:220> 'int'
|   |           `-ConditionalOperator 0x559761208c48 <col:166, col:219> 'int'
|   |             |-BinaryOperator 0x559761208b48 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x559761208ae8 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x559761208ad0 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x559761208a90 <col:166> '_Bool' lvalue Var 0x559761206368 'z$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x559761208b30 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x559761208b00 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x559761208ab0 <col:184> '_Bool' lvalue Var 0x559761205f20 'z$r_buff0_thd2' '_Bool'
|   |             |-ImplicitCastExpr 0x559761208c18 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x559761208b98 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x559761208b68 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x559761208c30 <col:212, col:219> 'int' <IntegralCast>
|   |               `-CStyleCastExpr 0x559761208bf0 <col:212, col:219> '_Bool' <IntegralToBoolean>
|   |                 `-IntegerLiteral 0x559761208bc0 <col:219> 'int' 0
|   |-BinaryOperator 0x559761209368 <line:747:3, col:227> '_Bool' '='
|   | |-DeclRefExpr 0x559761208de0 <col:3> '_Bool' lvalue Var 0x559761205f20 'z$r_buff0_thd2' '_Bool'
|   | `-ImplicitCastExpr 0x559761209350 <col:20, col:227> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x559761209320 <col:20, col:227> 'int'
|   |     |-ImplicitCastExpr 0x5597612092d8 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x5597612092c0 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x559761208e00 <col:20> '_Bool' lvalue Var 0x559761206550 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x559761209308 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x5597612092f0 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x559761208e20 <col:36> '_Bool' lvalue Var 0x559761205f20 'z$r_buff0_thd2' '_Bool'
|   |     `-ParenExpr 0x5597612092a0 <col:53, col:227> 'int'
|   |       `-ConditionalOperator 0x559761209270 <col:54, col:226> 'int'
|   |         |-BinaryOperator 0x559761209030 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x559761208f50 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x559761208e78 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x559761208e60 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x559761208e40 <col:55> '_Bool' lvalue Var 0x559761206368 'z$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x559761208f30 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x559761208ec8 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x559761208eb0 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x559761208e90 <col:74> '_Bool' lvalue Var 0x559761205f20 'z$r_buff0_thd2' '_Bool'
|   |         | |   `-UnaryOperator 0x559761208f18 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x559761208f00 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x559761208ee0 <col:93> '_Bool' lvalue Var 0x559761206460 'z$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x559761209010 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x559761208fa8 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x559761208f90 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x559761208f70 <col:112> '_Bool' lvalue Var 0x559761205f20 'z$r_buff0_thd2' '_Bool'
|   |         |   `-UnaryOperator 0x559761208ff8 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x559761208fe0 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x559761208fc0 <col:131> '_Bool' lvalue Var 0x559761206100 'z$r_buff1_thd2' '_Bool'
|   |         |-ImplicitCastExpr 0x559761209258 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x559761209240 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x559761209050 <col:148> '_Bool' lvalue Var 0x559761205f20 'z$r_buff0_thd2' '_Bool'
|   |         `-ParenExpr 0x559761209220 <col:165, col:226> 'int'
|   |           `-ConditionalOperator 0x5597612091f0 <col:166, col:212> 'int'
|   |             |-BinaryOperator 0x559761209110 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x5597612090c8 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x5597612090b0 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x559761209070 <col:166> '_Bool' lvalue Var 0x559761206368 'z$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x5597612090f8 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x5597612090e0 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x559761209090 <col:184> '_Bool' lvalue Var 0x559761205f20 'z$r_buff0_thd2' '_Bool'
|   |             |-ImplicitCastExpr 0x5597612091a8 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x559761209160 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x559761209130 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x5597612091d8 <col:212> 'int' <IntegralCast>
|   |               `-ImplicitCastExpr 0x5597612091c0 <col:212> '_Bool' <LValueToRValue>
|   |                 `-DeclRefExpr 0x559761209188 <col:212> '_Bool' lvalue Var 0x559761205f20 'z$r_buff0_thd2' '_Bool'
|   |-BinaryOperator 0x559761209930 <line:748:3, col:221> '_Bool' '='
|   | |-DeclRefExpr 0x559761209388 <col:3> '_Bool' lvalue Var 0x559761206100 'z$r_buff1_thd2' '_Bool'
|   | `-ImplicitCastExpr 0x559761209918 <col:20, col:221> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x5597612098e8 <col:20, col:221> 'int'
|   |     |-ImplicitCastExpr 0x5597612098a0 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x559761209888 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x5597612093a8 <col:20> '_Bool' lvalue Var 0x559761206550 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x5597612098d0 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x5597612098b8 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x5597612093c8 <col:36> '_Bool' lvalue Var 0x559761206100 'z$r_buff1_thd2' '_Bool'
|   |     `-ParenExpr 0x559761209868 <col:53, col:221> 'int'
|   |       `-ConditionalOperator 0x559761209838 <col:54, col:220> 'int'
|   |         |-BinaryOperator 0x5597612095d8 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x5597612094f8 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x559761209420 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x559761209408 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x5597612093e8 <col:55> '_Bool' lvalue Var 0x559761206368 'z$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x5597612094d8 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x559761209470 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x559761209458 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x559761209438 <col:74> '_Bool' lvalue Var 0x559761205f20 'z$r_buff0_thd2' '_Bool'
|   |         | |   `-UnaryOperator 0x5597612094c0 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x5597612094a8 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x559761209488 <col:93> '_Bool' lvalue Var 0x559761206460 'z$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x5597612095b8 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x559761209550 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x559761209538 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x559761209518 <col:112> '_Bool' lvalue Var 0x559761205f20 'z$r_buff0_thd2' '_Bool'
|   |         |   `-UnaryOperator 0x5597612095a0 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x559761209588 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x559761209568 <col:131> '_Bool' lvalue Var 0x559761206100 'z$r_buff1_thd2' '_Bool'
|   |         |-ImplicitCastExpr 0x559761209820 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x559761209808 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x5597612095f8 <col:148> '_Bool' lvalue Var 0x559761206100 'z$r_buff1_thd2' '_Bool'
|   |         `-ParenExpr 0x5597612097e8 <col:165, col:220> 'int'
|   |           `-ConditionalOperator 0x5597612097b8 <col:166, col:219> 'int'
|   |             |-BinaryOperator 0x5597612096b8 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x559761209670 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x559761209658 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x559761209618 <col:166> '_Bool' lvalue Var 0x559761206368 'z$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x5597612096a0 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x559761209688 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x559761209638 <col:184> '_Bool' lvalue Var 0x559761205f20 'z$r_buff0_thd2' '_Bool'
|   |             |-ImplicitCastExpr 0x559761209788 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x559761209708 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x5597612096d8 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x5597612097a0 <col:212, col:219> 'int' <IntegralCast>
|   |               `-CStyleCastExpr 0x559761209760 <col:212, col:219> '_Bool' <IntegralToBoolean>
|   |                 `-IntegerLiteral 0x559761209730 <col:219> 'int' 0
|   |-BinaryOperator 0x5597612099a8 <line:749:3, col:25> 'int' '='
|   | |-DeclRefExpr 0x559761209950 <col:3> 'int' lvalue Var 0x559761205360 '__unbuffered_p1_EBX' 'int'
|   | `-ImplicitCastExpr 0x559761209990 <col:25> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x559761209970 <col:25> 'int' lvalue Var 0x559761205ca0 'z' 'int'
|   |-BinaryOperator 0x559761209ad8 <line:750:3, col:37> 'int' '='
|   | |-DeclRefExpr 0x5597612099c8 <col:3> 'int' lvalue Var 0x559761205ca0 'z' 'int'
|   | `-ConditionalOperator 0x559761209aa8 <col:7, col:37> 'int'
|   |   |-ImplicitCastExpr 0x559761209a60 <col:7> 'int' <IntegralCast>
|   |   | `-ImplicitCastExpr 0x559761209a48 <col:7> '_Bool' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x5597612099e8 <col:7> '_Bool' lvalue Var 0x559761205d38 'z$flush_delayed' '_Bool'
|   |   |-ImplicitCastExpr 0x559761209a78 <col:25> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x559761209a08 <col:25> 'int' lvalue Var 0x559761205db8 'z$mem_tmp' 'int'
|   |   `-ImplicitCastExpr 0x559761209a90 <col:37> 'int' <LValueToRValue>
|   |     `-DeclRefExpr 0x559761209a28 <col:37> 'int' lvalue Var 0x559761205ca0 'z' 'int'
|   |-BinaryOperator 0x559761209b98 <line:751:3, col:28> '_Bool' '='
|   | |-DeclRefExpr 0x559761209af8 <col:3> '_Bool' lvalue Var 0x559761205d38 'z$flush_delayed' '_Bool'
|   | `-CStyleCastExpr 0x559761209b70 <col:21, col:28> '_Bool' <IntegralToBoolean>
|   |   `-IntegerLiteral 0x559761209b40 <col:28> 'int' 0
|   |-CallExpr 0x559761209bf0 <line:752:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x559761209bd8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x559761209bb8 <col:3> 'void ()' Function 0x5597611abf00 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x559761209c48 <line:753:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x559761209c30 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x559761209c10 <col:3> 'void ()' Function 0x5597611abe40 '__VERIFIER_atomic_begin' 'void ()'
|   |-CallExpr 0x559761209ca0 <line:754:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x559761209c88 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x559761209c68 <col:3> 'void ()' Function 0x5597611abf00 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x559761209cf8 <line:755:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x559761209ce0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x559761209cc0 <col:3> 'void ()' Function 0x5597611abe40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x559761209db0 <line:756:3, col:41> 'int' '='
|   | |-DeclRefExpr 0x559761209d18 <col:3> 'int' lvalue Var 0x559761205120 '__unbuffered_cnt' 'int'
|   | `-BinaryOperator 0x559761209d90 <col:22, col:41> 'int' '+'
|   |   |-ImplicitCastExpr 0x559761209d78 <col:22> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x559761209d38 <col:22> 'int' lvalue Var 0x559761205120 '__unbuffered_cnt' 'int'
|   |   `-IntegerLiteral 0x559761209d58 <col:41> 'int' 1
|   |-CallExpr 0x559761209e08 <line:757:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x559761209df0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x559761209dd0 <col:3> 'void ()' Function 0x5597611abf00 '__VERIFIER_atomic_end' 'void ()'
|   `-ReturnStmt 0x559761209e80 <line:758:3, col:36>
|     `-CallExpr 0x559761209e60 <col:10, col:36> 'void *'
|       `-ImplicitCastExpr 0x559761209e48 <col:10> 'void *(*)(void)' <FunctionToPointerDecay>
|         `-DeclRefExpr 0x559761209e28 <col:10> 'void *(void)' Function 0x5597611ab958 '__VERIFIER_nondet_pointer' 'void *(void)'
|-FunctionDecl 0x55976120a048 prev 0x559761204da0 <line:760:1, line:794:1> line:760:8 used P2 'void *(void *)'
| |-ParmVarDecl 0x559761209fb0 <col:11, col:17> col:17 arg 'void *'
| `-CompoundStmt 0x55976120bb60 <line:761:1, line:794:1>
|   |-CallExpr 0x55976120a128 <line:762:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x55976120a110 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55976120a0f0 <col:3> 'void ()' Function 0x5597611abe40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x55976120a1a0 <line:763:3, col:15> 'int' '='
|   | |-DeclRefExpr 0x55976120a148 <col:3> 'int' lvalue Var 0x5597612063e8 'z$w_buff1' 'int'
|   | `-ImplicitCastExpr 0x55976120a188 <col:15> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x55976120a168 <col:15> 'int' lvalue Var 0x5597612062f0 'z$w_buff0' 'int'
|   |-BinaryOperator 0x55976120a200 <line:764:3, col:15> 'int' '='
|   | |-DeclRefExpr 0x55976120a1c0 <col:3> 'int' lvalue Var 0x5597612062f0 'z$w_buff0' 'int'
|   | `-IntegerLiteral 0x55976120a1e0 <col:15> 'int' 1
|   |-BinaryOperator 0x55976120a278 <line:765:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x55976120a220 <col:3> '_Bool' lvalue Var 0x559761206460 'z$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x55976120a260 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x55976120a240 <col:20> '_Bool' lvalue Var 0x559761206368 'z$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x55976120a310 <line:766:3, col:27> '_Bool' '='
|   | |-DeclRefExpr 0x55976120a298 <col:3> '_Bool' lvalue Var 0x559761206368 'z$w_buff0_used' '_Bool'
|   | `-CStyleCastExpr 0x55976120a2e8 <col:20, col:27> '_Bool' <IntegralToBoolean>
|   |   `-IntegerLiteral 0x55976120a2b8 <col:27> 'int' 1
|   |-CallExpr 0x55976120a498 <line:767:3, col:56> 'void'
|   | |-ImplicitCastExpr 0x55976120a480 <col:3> 'void (*)(int)' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x55976120a330 <col:3> 'void (int)' Function 0x5597611abbc8 '__VERIFIER_assert' 'void (int)'
|   | `-UnaryOperator 0x55976120a430 <col:21, col:55> 'int' prefix '!' cannot overflow
|   |   `-ParenExpr 0x55976120a410 <col:22, col:55> 'int'
|   |     `-BinaryOperator 0x55976120a3f0 <col:23, col:41> 'int' '&&'
|   |       |-ImplicitCastExpr 0x55976120a3a8 <col:23> 'int' <IntegralCast>
|   |       | `-ImplicitCastExpr 0x55976120a390 <col:23> '_Bool' <LValueToRValue>
|   |       |   `-DeclRefExpr 0x55976120a350 <col:23> '_Bool' lvalue Var 0x559761206460 'z$w_buff1_used' '_Bool'
|   |       `-ImplicitCastExpr 0x55976120a3d8 <col:41> 'int' <IntegralCast>
|   |         `-ImplicitCastExpr 0x55976120a3c0 <col:41> '_Bool' <LValueToRValue>
|   |           `-DeclRefExpr 0x55976120a370 <col:41> '_Bool' lvalue Var 0x559761206368 'z$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x55976120a518 <line:768:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x55976120a4c0 <col:3> '_Bool' lvalue Var 0x559761206010 'z$r_buff1_thd0' '_Bool'
|   | `-ImplicitCastExpr 0x55976120a500 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x55976120a4e0 <col:20> '_Bool' lvalue Var 0x559761205e30 'z$r_buff0_thd0' '_Bool'
|   |-BinaryOperator 0x55976120a590 <line:769:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x55976120a538 <col:3> '_Bool' lvalue Var 0x559761206088 'z$r_buff1_thd1' '_Bool'
|   | `-ImplicitCastExpr 0x55976120a578 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x55976120a558 <col:20> '_Bool' lvalue Var 0x559761205ea8 'z$r_buff0_thd1' '_Bool'
|   |-BinaryOperator 0x55976120a608 <line:770:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x55976120a5b0 <col:3> '_Bool' lvalue Var 0x559761206100 'z$r_buff1_thd2' '_Bool'
|   | `-ImplicitCastExpr 0x55976120a5f0 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x55976120a5d0 <col:20> '_Bool' lvalue Var 0x559761205f20 'z$r_buff0_thd2' '_Bool'
|   |-BinaryOperator 0x55976120a680 <line:771:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x55976120a628 <col:3> '_Bool' lvalue Var 0x559761206178 'z$r_buff1_thd3' '_Bool'
|   | `-ImplicitCastExpr 0x55976120a668 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x55976120a648 <col:20> '_Bool' lvalue Var 0x559761205f98 'z$r_buff0_thd3' '_Bool'
|   |-BinaryOperator 0x55976120a718 <line:772:3, col:27> '_Bool' '='
|   | |-DeclRefExpr 0x55976120a6a0 <col:3> '_Bool' lvalue Var 0x559761205f98 'z$r_buff0_thd3' '_Bool'
|   | `-CStyleCastExpr 0x55976120a6f0 <col:20, col:27> '_Bool' <IntegralToBoolean>
|   |   `-IntegerLiteral 0x55976120a6c0 <col:27> 'int' 1
|   |-CallExpr 0x55976120a770 <line:773:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x55976120a758 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55976120a738 <col:3> 'void ()' Function 0x5597611abf00 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x55976120a7c8 <line:774:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x55976120a7b0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55976120a790 <col:3> 'void ()' Function 0x5597611abe40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x55976120a828 <line:775:3, col:7> 'int' '='
|   | |-DeclRefExpr 0x55976120a7e8 <col:3> 'int' lvalue Var 0x5597612056c0 'a' 'int'
|   | `-IntegerLiteral 0x55976120a808 <col:7> 'int' 1
|   |-CallExpr 0x55976120a880 <line:776:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x55976120a868 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55976120a848 <col:3> 'void ()' Function 0x5597611abf00 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x55976120a8d8 <line:777:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x55976120a8c0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55976120a8a0 <col:3> 'void ()' Function 0x5597611abe40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x55976120a950 <line:778:3, col:25> 'int' '='
|   | |-DeclRefExpr 0x55976120a8f8 <col:3> 'int' lvalue Var 0x559761205480 '__unbuffered_p2_EAX' 'int'
|   | `-ImplicitCastExpr 0x55976120a938 <col:25> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x55976120a918 <col:25> 'int' lvalue Var 0x5597612056c0 'a' 'int'
|   |-CallExpr 0x55976120a9a8 <line:779:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x55976120a990 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55976120a970 <col:3> 'void ()' Function 0x5597611abf00 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x55976120aa00 <line:780:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x55976120a9e8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55976120a9c8 <col:3> 'void ()' Function 0x5597611abe40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x55976120aa78 <line:781:3, col:25> 'int' '='
|   | |-DeclRefExpr 0x55976120aa20 <col:3> 'int' lvalue Var 0x5597612055a0 '__unbuffered_p2_EBX' 'int'
|   | `-ImplicitCastExpr 0x55976120aa60 <col:25> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x55976120aa40 <col:25> 'int' lvalue Var 0x5597612057e0 'b' 'int'
|   |-CallExpr 0x55976120aad0 <line:782:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x55976120aab8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55976120aa98 <col:3> 'void ()' Function 0x5597611abf00 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x55976120ab50 <line:783:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x55976120ab10 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55976120aaf0 <col:3> 'void ()' Function 0x5597611abe40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x55976120ae38 <line:784:3, col:103> 'int' '='
|   | |-DeclRefExpr 0x55976120ab70 <col:3> 'int' lvalue Var 0x559761205ca0 'z' 'int'
|   | `-ConditionalOperator 0x55976120ae08 <col:7, col:103> 'int'
|   |   |-BinaryOperator 0x55976120ac30 <col:7, col:25> 'int' '&&'
|   |   | |-ImplicitCastExpr 0x55976120abe8 <col:7> 'int' <IntegralCast>
|   |   | | `-ImplicitCastExpr 0x55976120abd0 <col:7> '_Bool' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x55976120ab90 <col:7> '_Bool' lvalue Var 0x559761206368 'z$w_buff0_used' '_Bool'
|   |   | `-ImplicitCastExpr 0x55976120ac18 <col:25> 'int' <IntegralCast>
|   |   |   `-ImplicitCastExpr 0x55976120ac00 <col:25> '_Bool' <LValueToRValue>
|   |   |     `-DeclRefExpr 0x55976120abb0 <col:25> '_Bool' lvalue Var 0x559761205f98 'z$r_buff0_thd3' '_Bool'
|   |   |-ImplicitCastExpr 0x55976120adf0 <col:42> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x55976120ac50 <col:42> 'int' lvalue Var 0x5597612062f0 'z$w_buff0' 'int'
|   |   `-ParenExpr 0x55976120add0 <col:54, col:103> 'int'
|   |     `-ConditionalOperator 0x55976120ada0 <col:55, col:102> 'int'
|   |       |-BinaryOperator 0x55976120ad10 <col:55, col:73> 'int' '&&'
|   |       | |-ImplicitCastExpr 0x55976120acc8 <col:55> 'int' <IntegralCast>
|   |       | | `-ImplicitCastExpr 0x55976120acb0 <col:55> '_Bool' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x55976120ac70 <col:55> '_Bool' lvalue Var 0x559761206460 'z$w_buff1_used' '_Bool'
|   |       | `-ImplicitCastExpr 0x55976120acf8 <col:73> 'int' <IntegralCast>
|   |       |   `-ImplicitCastExpr 0x55976120ace0 <col:73> '_Bool' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x55976120ac90 <col:73> '_Bool' lvalue Var 0x559761206178 'z$r_buff1_thd3' '_Bool'
|   |       |-ImplicitCastExpr 0x55976120ad70 <col:90> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x55976120ad30 <col:90> 'int' lvalue Var 0x5597612063e8 'z$w_buff1' 'int'
|   |       `-ImplicitCastExpr 0x55976120ad88 <col:102> 'int' <LValueToRValue>
|   |         `-DeclRefExpr 0x55976120ad50 <col:102> 'int' lvalue Var 0x559761205ca0 'z' 'int'
|   |-BinaryOperator 0x55976120b040 <line:785:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x55976120ae58 <col:3> '_Bool' lvalue Var 0x559761206368 'z$w_buff0_used' '_Bool'
|   | `-ImplicitCastExpr 0x55976120b028 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55976120aff8 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x55976120af18 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x55976120aed0 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x55976120aeb8 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x55976120ae78 <col:20> '_Bool' lvalue Var 0x559761206368 'z$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x55976120af00 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x55976120aee8 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x55976120ae98 <col:38> '_Bool' lvalue Var 0x559761205f98 'z$r_buff0_thd3' '_Bool'
|   |     |-ImplicitCastExpr 0x55976120afb0 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x55976120af68 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x55976120af38 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x55976120afe0 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x55976120afc8 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x55976120af90 <col:66> '_Bool' lvalue Var 0x559761206368 'z$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x55976120b328 <line:786:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x55976120b060 <col:3> '_Bool' lvalue Var 0x559761206460 'z$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x55976120b310 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55976120b2e0 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x55976120b200 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x55976120b120 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x55976120b0d8 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x55976120b0c0 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x55976120b080 <col:20> '_Bool' lvalue Var 0x559761206368 'z$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x55976120b108 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x55976120b0f0 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x55976120b0a0 <col:38> '_Bool' lvalue Var 0x559761205f98 'z$r_buff0_thd3' '_Bool'
|   |     | `-BinaryOperator 0x55976120b1e0 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x55976120b198 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x55976120b180 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x55976120b140 <col:56> '_Bool' lvalue Var 0x559761206460 'z$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x55976120b1c8 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x55976120b1b0 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x55976120b160 <col:74> '_Bool' lvalue Var 0x559761206178 'z$r_buff1_thd3' '_Bool'
|   |     |-ImplicitCastExpr 0x55976120b298 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x55976120b250 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x55976120b220 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x55976120b2c8 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x55976120b2b0 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x55976120b278 <col:102> '_Bool' lvalue Var 0x559761206460 'z$w_buff1_used' '_Bool'
|   |-BinaryOperator 0x55976120b530 <line:787:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x55976120b348 <col:3> '_Bool' lvalue Var 0x559761205f98 'z$r_buff0_thd3' '_Bool'
|   | `-ImplicitCastExpr 0x55976120b518 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55976120b4e8 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x55976120b408 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x55976120b3c0 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x55976120b3a8 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x55976120b368 <col:20> '_Bool' lvalue Var 0x559761206368 'z$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x55976120b3f0 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x55976120b3d8 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x55976120b388 <col:38> '_Bool' lvalue Var 0x559761205f98 'z$r_buff0_thd3' '_Bool'
|   |     |-ImplicitCastExpr 0x55976120b4a0 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x55976120b458 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x55976120b428 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x55976120b4d0 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x55976120b4b8 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x55976120b480 <col:66> '_Bool' lvalue Var 0x559761205f98 'z$r_buff0_thd3' '_Bool'
|   |-BinaryOperator 0x55976120b818 <line:788:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x55976120b550 <col:3> '_Bool' lvalue Var 0x559761206178 'z$r_buff1_thd3' '_Bool'
|   | `-ImplicitCastExpr 0x55976120b800 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55976120b7d0 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x55976120b6f0 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x55976120b610 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x55976120b5c8 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x55976120b5b0 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x55976120b570 <col:20> '_Bool' lvalue Var 0x559761206368 'z$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x55976120b5f8 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x55976120b5e0 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x55976120b590 <col:38> '_Bool' lvalue Var 0x559761205f98 'z$r_buff0_thd3' '_Bool'
|   |     | `-BinaryOperator 0x55976120b6d0 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x55976120b688 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x55976120b670 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x55976120b630 <col:56> '_Bool' lvalue Var 0x559761206460 'z$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x55976120b6b8 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x55976120b6a0 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x55976120b650 <col:74> '_Bool' lvalue Var 0x559761206178 'z$r_buff1_thd3' '_Bool'
|   |     |-ImplicitCastExpr 0x55976120b788 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x55976120b740 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x55976120b710 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x55976120b7b8 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x55976120b7a0 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x55976120b768 <col:102> '_Bool' lvalue Var 0x559761206178 'z$r_buff1_thd3' '_Bool'
|   |-CallExpr 0x55976120b870 <line:789:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x55976120b858 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55976120b838 <col:3> 'void ()' Function 0x5597611abf00 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x55976120b8c8 <line:790:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x55976120b8b0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55976120b890 <col:3> 'void ()' Function 0x5597611abe40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x55976120b980 <line:791:3, col:41> 'int' '='
|   | |-DeclRefExpr 0x55976120b8e8 <col:3> 'int' lvalue Var 0x559761205120 '__unbuffered_cnt' 'int'
|   | `-BinaryOperator 0x55976120b960 <col:22, col:41> 'int' '+'
|   |   |-ImplicitCastExpr 0x55976120b948 <col:22> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x55976120b908 <col:22> 'int' lvalue Var 0x559761205120 '__unbuffered_cnt' 'int'
|   |   `-IntegerLiteral 0x55976120b928 <col:41> 'int' 1
|   |-CallExpr 0x55976120b9d8 <line:792:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x55976120b9c0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55976120b9a0 <col:3> 'void ()' Function 0x5597611abf00 '__VERIFIER_atomic_end' 'void ()'
|   `-ReturnStmt 0x55976120ba50 <line:793:3, col:36>
|     `-CallExpr 0x55976120ba30 <col:10, col:36> 'void *'
|       `-ImplicitCastExpr 0x55976120ba18 <col:10> 'void *(*)(void)' <FunctionToPointerDecay>
|         `-DeclRefExpr 0x55976120b9f8 <col:10> 'void *(void)' Function 0x5597611ab958 '__VERIFIER_nondet_pointer' 'void *(void)'
|-FunctionDecl 0x55976120bc90 prev 0x559761204e68 <line:795:1, line:797:1> line:795:6 fence 'void ()'
| `-CompoundStmt 0x55976120bd30 <line:796:1, line:797:1>
|-FunctionDecl 0x55976120bd60 prev 0x559761204f28 <line:798:1, line:800:1> line:798:6 isync 'void ()'
| `-CompoundStmt 0x55976120be00 <line:799:1, line:800:1>
|-FunctionDecl 0x55976120be30 prev 0x559761204fe8 <line:801:1, line:803:1> line:801:6 lwfence 'void ()'
| `-CompoundStmt 0x55976120bed0 <line:802:1, line:803:1>
`-FunctionDecl 0x55976120bf38 <line:804:1, line:828:1> line:804:5 main 'int ()'
  `-CompoundStmt 0x55976120dcb8 <line:805:1, line:828:1>
    |-DeclStmt 0x55976120c050 <line:806:3, col:17>
    | `-VarDecl 0x55976120bfe8 <col:3, col:13> col:13 used t884 'pthread_t':'unsigned long'
    |-CallExpr 0x55976120c258 <line:807:3, col:53> 'int'
    | |-ImplicitCastExpr 0x55976120c240 <col:3> 'int (*)(pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x55976120c068 <col:3> 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' Function 0x5597611ec488 'pthread_create' 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)'
    | |-UnaryOperator 0x55976120c0a8 <col:18, col:19> 'pthread_t *' prefix '&' cannot overflow
    | | `-DeclRefExpr 0x55976120c088 <col:19> 'pthread_t':'unsigned long' lvalue Var 0x55976120bfe8 't884' 'pthread_t':'unsigned long'
    | |-ImplicitCastExpr 0x55976120c298 <col:25, col:35> 'const pthread_attr_t *' <NullToPointer>
    | | `-ParenExpr 0x55976120c120 <col:25, col:35> 'void *'
    | |   `-CStyleCastExpr 0x55976120c0f8 <col:26, col:34> 'void *' <NullToPointer>
    | |     `-IntegerLiteral 0x55976120c0c0 <col:34> 'int' 0
    | |-ImplicitCastExpr 0x55976120c2b0 <col:38> 'void *(*)(void *)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x55976120c140 <col:38> 'void *(void *)' Function 0x559761206668 'P0' 'void *(void *)'
    | `-ParenExpr 0x55976120c1c0 <col:42, col:52> 'void *'
    |   `-CStyleCastExpr 0x55976120c198 <col:43, col:51> 'void *' <NullToPointer>
    |     `-IntegerLiteral 0x55976120c160 <col:51> 'int' 0
    |-DeclStmt 0x55976120c340 <line:808:3, col:17>
    | `-VarDecl 0x55976120c2d8 <col:3, col:13> col:13 used t885 'pthread_t':'unsigned long'
    |-CallExpr 0x55976120c4e8 <line:809:3, col:53> 'int'
    | |-ImplicitCastExpr 0x55976120c4d0 <col:3> 'int (*)(pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x55976120c358 <col:3> 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' Function 0x5597611ec488 'pthread_create' 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)'
    | |-UnaryOperator 0x55976120c398 <col:18, col:19> 'pthread_t *' prefix '&' cannot overflow
    | | `-DeclRefExpr 0x55976120c378 <col:19> 'pthread_t':'unsigned long' lvalue Var 0x55976120c2d8 't885' 'pthread_t':'unsigned long'
    | |-ImplicitCastExpr 0x55976120c528 <col:25, col:35> 'const pthread_attr_t *' <NullToPointer>
    | | `-ParenExpr 0x55976120c410 <col:25, col:35> 'void *'
    | |   `-CStyleCastExpr 0x55976120c3e8 <col:26, col:34> 'void *' <NullToPointer>
    | |     `-IntegerLiteral 0x55976120c3b0 <col:34> 'int' 0
    | |-ImplicitCastExpr 0x55976120c540 <col:38> 'void *(*)(void *)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x55976120c430 <col:38> 'void *(void *)' Function 0x559761206d48 'P1' 'void *(void *)'
    | `-ParenExpr 0x55976120c4b0 <col:42, col:52> 'void *'
    |   `-CStyleCastExpr 0x55976120c488 <col:43, col:51> 'void *' <NullToPointer>
    |     `-IntegerLiteral 0x55976120c450 <col:51> 'int' 0
    |-DeclStmt 0x55976120c5d0 <line:810:3, col:17>
    | `-VarDecl 0x55976120c568 <col:3, col:13> col:13 used t886 'pthread_t':'unsigned long'
    |-CallExpr 0x55976120c778 <line:811:3, col:53> 'int'
    | |-ImplicitCastExpr 0x55976120c760 <col:3> 'int (*)(pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x55976120c5e8 <col:3> 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' Function 0x5597611ec488 'pthread_create' 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)'
    | |-UnaryOperator 0x55976120c628 <col:18, col:19> 'pthread_t *' prefix '&' cannot overflow
    | | `-DeclRefExpr 0x55976120c608 <col:19> 'pthread_t':'unsigned long' lvalue Var 0x55976120c568 't886' 'pthread_t':'unsigned long'
    | |-ImplicitCastExpr 0x55976120c7b8 <col:25, col:35> 'const pthread_attr_t *' <NullToPointer>
    | | `-ParenExpr 0x55976120c6a0 <col:25, col:35> 'void *'
    | |   `-CStyleCastExpr 0x55976120c678 <col:26, col:34> 'void *' <NullToPointer>
    | |     `-IntegerLiteral 0x55976120c640 <col:34> 'int' 0
    | |-ImplicitCastExpr 0x55976120c7d0 <col:38> 'void *(*)(void *)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x55976120c6c0 <col:38> 'void *(void *)' Function 0x55976120a048 'P2' 'void *(void *)'
    | `-ParenExpr 0x55976120c740 <col:42, col:52> 'void *'
    |   `-CStyleCastExpr 0x55976120c718 <col:43, col:51> 'void *' <NullToPointer>
    |     `-IntegerLiteral 0x55976120c6e0 <col:51> 'int' 0
    |-CallExpr 0x55976120c820 <line:812:3, col:27> 'void'
    | `-ImplicitCastExpr 0x55976120c808 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x55976120c7e8 <col:3> 'void ()' Function 0x5597611abe40 '__VERIFIER_atomic_begin' 'void ()'
    |-BinaryOperator 0x55976120c8f0 <line:813:3, col:41> '_Bool' '='
    | |-DeclRefExpr 0x55976120c840 <col:3> '_Bool' lvalue Var 0x559761205878 'main$tmp_guard0' '_Bool'
    | `-ImplicitCastExpr 0x55976120c8d8 <col:21, col:41> '_Bool' <IntegralToBoolean>
    |   `-BinaryOperator 0x55976120c8b8 <col:21, col:41> 'int' '=='
    |     |-ImplicitCastExpr 0x55976120c8a0 <col:21> 'int' <LValueToRValue>
    |     | `-DeclRefExpr 0x55976120c860 <col:21> 'int' lvalue Var 0x559761205120 '__unbuffered_cnt' 'int'
    |     `-IntegerLiteral 0x55976120c880 <col:41> 'int' 3
    |-CallExpr 0x55976120c948 <line:814:3, col:25> 'void'
    | `-ImplicitCastExpr 0x55976120c930 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x55976120c910 <col:3> 'void ()' Function 0x5597611abf00 '__VERIFIER_atomic_end' 'void ()'
    |-CallExpr 0x55976120c9c0 <line:815:3, col:36> 'void'
    | |-ImplicitCastExpr 0x55976120c9a8 <col:3> 'void (*)(int)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x55976120c968 <col:3> 'void (int)' Function 0x5597611ab790 '__VERIFIER_assume' 'void (int)'
    | `-ImplicitCastExpr 0x55976120ca00 <col:21> 'int' <IntegralCast>
    |   `-ImplicitCastExpr 0x55976120c9e8 <col:21> '_Bool' <LValueToRValue>
    |     `-DeclRefExpr 0x55976120c988 <col:21> '_Bool' lvalue Var 0x559761205878 'main$tmp_guard0' '_Bool'
    |-CallExpr 0x55976120ca50 <line:816:3, col:27> 'void'
    | `-ImplicitCastExpr 0x55976120ca38 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x55976120ca18 <col:3> 'void ()' Function 0x5597611abe40 '__VERIFIER_atomic_begin' 'void ()'
    |-BinaryOperator 0x55976120cd58 <line:817:3, col:103> 'int' '='
    | |-DeclRefExpr 0x55976120ca70 <col:3> 'int' lvalue Var 0x559761205ca0 'z' 'int'
    | `-ConditionalOperator 0x55976120cd28 <col:7, col:103> 'int'
    |   |-BinaryOperator 0x55976120cb30 <col:7, col:25> 'int' '&&'
    |   | |-ImplicitCastExpr 0x55976120cae8 <col:7> 'int' <IntegralCast>
    |   | | `-ImplicitCastExpr 0x55976120cad0 <col:7> '_Bool' <LValueToRValue>
    |   | |   `-DeclRefExpr 0x55976120ca90 <col:7> '_Bool' lvalue Var 0x559761206368 'z$w_buff0_used' '_Bool'
    |   | `-ImplicitCastExpr 0x55976120cb18 <col:25> 'int' <IntegralCast>
    |   |   `-ImplicitCastExpr 0x55976120cb00 <col:25> '_Bool' <LValueToRValue>
    |   |     `-DeclRefExpr 0x55976120cab0 <col:25> '_Bool' lvalue Var 0x559761205e30 'z$r_buff0_thd0' '_Bool'
    |   |-ImplicitCastExpr 0x55976120cd10 <col:42> 'int' <LValueToRValue>
    |   | `-DeclRefExpr 0x55976120cb70 <col:42> 'int' lvalue Var 0x5597612062f0 'z$w_buff0' 'int'
    |   `-ParenExpr 0x55976120ccf0 <col:54, col:103> 'int'
    |     `-ConditionalOperator 0x55976120ccc0 <col:55, col:102> 'int'
    |       |-BinaryOperator 0x55976120cc30 <col:55, col:73> 'int' '&&'
    |       | |-ImplicitCastExpr 0x55976120cbe8 <col:55> 'int' <IntegralCast>
    |       | | `-ImplicitCastExpr 0x55976120cbd0 <col:55> '_Bool' <LValueToRValue>
    |       | |   `-DeclRefExpr 0x55976120cb90 <col:55> '_Bool' lvalue Var 0x559761206460 'z$w_buff1_used' '_Bool'
    |       | `-ImplicitCastExpr 0x55976120cc18 <col:73> 'int' <IntegralCast>
    |       |   `-ImplicitCastExpr 0x55976120cc00 <col:73> '_Bool' <LValueToRValue>
    |       |     `-DeclRefExpr 0x55976120cbb0 <col:73> '_Bool' lvalue Var 0x559761206010 'z$r_buff1_thd0' '_Bool'
    |       |-ImplicitCastExpr 0x55976120cc90 <col:90> 'int' <LValueToRValue>
    |       | `-DeclRefExpr 0x55976120cc50 <col:90> 'int' lvalue Var 0x5597612063e8 'z$w_buff1' 'int'
    |       `-ImplicitCastExpr 0x55976120cca8 <col:102> 'int' <LValueToRValue>
    |         `-DeclRefExpr 0x55976120cc70 <col:102> 'int' lvalue Var 0x559761205ca0 'z' 'int'
    |-BinaryOperator 0x55976120cf60 <line:818:3, col:66> '_Bool' '='
    | |-DeclRefExpr 0x55976120cd78 <col:3> '_Bool' lvalue Var 0x559761206368 'z$w_buff0_used' '_Bool'
    | `-ImplicitCastExpr 0x55976120cf48 <col:20, col:66> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x55976120cf18 <col:20, col:66> 'int'
    |     |-BinaryOperator 0x55976120ce38 <col:20, col:38> 'int' '&&'
    |     | |-ImplicitCastExpr 0x55976120cdf0 <col:20> 'int' <IntegralCast>
    |     | | `-ImplicitCastExpr 0x55976120cdd8 <col:20> '_Bool' <LValueToRValue>
    |     | |   `-DeclRefExpr 0x55976120cd98 <col:20> '_Bool' lvalue Var 0x559761206368 'z$w_buff0_used' '_Bool'
    |     | `-ImplicitCastExpr 0x55976120ce20 <col:38> 'int' <IntegralCast>
    |     |   `-ImplicitCastExpr 0x55976120ce08 <col:38> '_Bool' <LValueToRValue>
    |     |     `-DeclRefExpr 0x55976120cdb8 <col:38> '_Bool' lvalue Var 0x559761205e30 'z$r_buff0_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x55976120ced0 <col:55, col:62> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x55976120ce88 <col:55, col:62> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x55976120ce58 <col:62> 'int' 0
    |     `-ImplicitCastExpr 0x55976120cf00 <col:66> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x55976120cee8 <col:66> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x55976120ceb0 <col:66> '_Bool' lvalue Var 0x559761206368 'z$w_buff0_used' '_Bool'
    |-BinaryOperator 0x55976120d248 <line:819:3, col:102> '_Bool' '='
    | |-DeclRefExpr 0x55976120cf80 <col:3> '_Bool' lvalue Var 0x559761206460 'z$w_buff1_used' '_Bool'
    | `-ImplicitCastExpr 0x55976120d230 <col:20, col:102> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x55976120d200 <col:20, col:102> 'int'
    |     |-BinaryOperator 0x55976120d120 <col:20, col:74> 'int' '||'
    |     | |-BinaryOperator 0x55976120d040 <col:20, col:38> 'int' '&&'
    |     | | |-ImplicitCastExpr 0x55976120cff8 <col:20> 'int' <IntegralCast>
    |     | | | `-ImplicitCastExpr 0x55976120cfe0 <col:20> '_Bool' <LValueToRValue>
    |     | | |   `-DeclRefExpr 0x55976120cfa0 <col:20> '_Bool' lvalue Var 0x559761206368 'z$w_buff0_used' '_Bool'
    |     | | `-ImplicitCastExpr 0x55976120d028 <col:38> 'int' <IntegralCast>
    |     | |   `-ImplicitCastExpr 0x55976120d010 <col:38> '_Bool' <LValueToRValue>
    |     | |     `-DeclRefExpr 0x55976120cfc0 <col:38> '_Bool' lvalue Var 0x559761205e30 'z$r_buff0_thd0' '_Bool'
    |     | `-BinaryOperator 0x55976120d100 <col:56, col:74> 'int' '&&'
    |     |   |-ImplicitCastExpr 0x55976120d0b8 <col:56> 'int' <IntegralCast>
    |     |   | `-ImplicitCastExpr 0x55976120d0a0 <col:56> '_Bool' <LValueToRValue>
    |     |   |   `-DeclRefExpr 0x55976120d060 <col:56> '_Bool' lvalue Var 0x559761206460 'z$w_buff1_used' '_Bool'
    |     |   `-ImplicitCastExpr 0x55976120d0e8 <col:74> 'int' <IntegralCast>
    |     |     `-ImplicitCastExpr 0x55976120d0d0 <col:74> '_Bool' <LValueToRValue>
    |     |       `-DeclRefExpr 0x55976120d080 <col:74> '_Bool' lvalue Var 0x559761206010 'z$r_buff1_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x55976120d1b8 <col:91, col:98> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x55976120d170 <col:91, col:98> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x55976120d140 <col:98> 'int' 0
    |     `-ImplicitCastExpr 0x55976120d1e8 <col:102> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x55976120d1d0 <col:102> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x55976120d198 <col:102> '_Bool' lvalue Var 0x559761206460 'z$w_buff1_used' '_Bool'
    |-BinaryOperator 0x55976120d450 <line:820:3, col:66> '_Bool' '='
    | |-DeclRefExpr 0x55976120d268 <col:3> '_Bool' lvalue Var 0x559761205e30 'z$r_buff0_thd0' '_Bool'
    | `-ImplicitCastExpr 0x55976120d438 <col:20, col:66> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x55976120d408 <col:20, col:66> 'int'
    |     |-BinaryOperator 0x55976120d328 <col:20, col:38> 'int' '&&'
    |     | |-ImplicitCastExpr 0x55976120d2e0 <col:20> 'int' <IntegralCast>
    |     | | `-ImplicitCastExpr 0x55976120d2c8 <col:20> '_Bool' <LValueToRValue>
    |     | |   `-DeclRefExpr 0x55976120d288 <col:20> '_Bool' lvalue Var 0x559761206368 'z$w_buff0_used' '_Bool'
    |     | `-ImplicitCastExpr 0x55976120d310 <col:38> 'int' <IntegralCast>
    |     |   `-ImplicitCastExpr 0x55976120d2f8 <col:38> '_Bool' <LValueToRValue>
    |     |     `-DeclRefExpr 0x55976120d2a8 <col:38> '_Bool' lvalue Var 0x559761205e30 'z$r_buff0_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x55976120d3c0 <col:55, col:62> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x55976120d378 <col:55, col:62> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x55976120d348 <col:62> 'int' 0
    |     `-ImplicitCastExpr 0x55976120d3f0 <col:66> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x55976120d3d8 <col:66> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x55976120d3a0 <col:66> '_Bool' lvalue Var 0x559761205e30 'z$r_buff0_thd0' '_Bool'
    |-BinaryOperator 0x55976120d738 <line:821:3, col:102> '_Bool' '='
    | |-DeclRefExpr 0x55976120d470 <col:3> '_Bool' lvalue Var 0x559761206010 'z$r_buff1_thd0' '_Bool'
    | `-ImplicitCastExpr 0x55976120d720 <col:20, col:102> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x55976120d6f0 <col:20, col:102> 'int'
    |     |-BinaryOperator 0x55976120d610 <col:20, col:74> 'int' '||'
    |     | |-BinaryOperator 0x55976120d530 <col:20, col:38> 'int' '&&'
    |     | | |-ImplicitCastExpr 0x55976120d4e8 <col:20> 'int' <IntegralCast>
    |     | | | `-ImplicitCastExpr 0x55976120d4d0 <col:20> '_Bool' <LValueToRValue>
    |     | | |   `-DeclRefExpr 0x55976120d490 <col:20> '_Bool' lvalue Var 0x559761206368 'z$w_buff0_used' '_Bool'
    |     | | `-ImplicitCastExpr 0x55976120d518 <col:38> 'int' <IntegralCast>
    |     | |   `-ImplicitCastExpr 0x55976120d500 <col:38> '_Bool' <LValueToRValue>
    |     | |     `-DeclRefExpr 0x55976120d4b0 <col:38> '_Bool' lvalue Var 0x559761205e30 'z$r_buff0_thd0' '_Bool'
    |     | `-BinaryOperator 0x55976120d5f0 <col:56, col:74> 'int' '&&'
    |     |   |-ImplicitCastExpr 0x55976120d5a8 <col:56> 'int' <IntegralCast>
    |     |   | `-ImplicitCastExpr 0x55976120d590 <col:56> '_Bool' <LValueToRValue>
    |     |   |   `-DeclRefExpr 0x55976120d550 <col:56> '_Bool' lvalue Var 0x559761206460 'z$w_buff1_used' '_Bool'
    |     |   `-ImplicitCastExpr 0x55976120d5d8 <col:74> 'int' <IntegralCast>
    |     |     `-ImplicitCastExpr 0x55976120d5c0 <col:74> '_Bool' <LValueToRValue>
    |     |       `-DeclRefExpr 0x55976120d570 <col:74> '_Bool' lvalue Var 0x559761206010 'z$r_buff1_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x55976120d6a8 <col:91, col:98> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x55976120d660 <col:91, col:98> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x55976120d630 <col:98> 'int' 0
    |     `-ImplicitCastExpr 0x55976120d6d8 <col:102> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x55976120d6c0 <col:102> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x55976120d688 <col:102> '_Bool' lvalue Var 0x559761206010 'z$r_buff1_thd0' '_Bool'
    |-CallExpr 0x55976120d790 <line:822:3, col:25> 'void'
    | `-ImplicitCastExpr 0x55976120d778 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x55976120d758 <col:3> 'void ()' Function 0x5597611abf00 '__VERIFIER_atomic_end' 'void ()'
    |-CallExpr 0x55976120d7e8 <line:823:3, col:27> 'void'
    | `-ImplicitCastExpr 0x55976120d7d0 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x55976120d7b0 <col:3> 'void ()' Function 0x5597611abe40 '__VERIFIER_atomic_begin' 'void ()'
    |-BinaryOperator 0x55976120db50 <line:824:3, col:141> '_Bool' '='
    | |-DeclRefExpr 0x55976120d808 <col:3> '_Bool' lvalue Var 0x5597612058f0 'main$tmp_guard1' '_Bool'
    | `-ImplicitCastExpr 0x55976120db38 <col:21, col:141> '_Bool' <IntegralToBoolean>
    |   `-UnaryOperator 0x55976120db20 <col:21, col:141> 'int' prefix '!' cannot overflow
    |     `-ParenExpr 0x55976120db00 <col:22, col:141> 'int'
    |       `-BinaryOperator 0x55976120dae0 <col:23, col:140> 'int' '&&'
    |         |-BinaryOperator 0x55976120da48 <col:23, col:112> 'int' '&&'
    |         | |-BinaryOperator 0x55976120d9b0 <col:23, col:84> 'int' '&&'
    |         | | |-BinaryOperator 0x55976120d918 <col:23, col:56> 'int' '&&'
    |         | | | |-BinaryOperator 0x55976120d880 <col:23, col:28> 'int' '=='
    |         | | | | |-ImplicitCastExpr 0x55976120d868 <col:23> 'int' <LValueToRValue>
    |         | | | | | `-DeclRefExpr 0x55976120d828 <col:23> 'int' lvalue Var 0x5597612059f0 'x' 'int'
    |         | | | | `-IntegerLiteral 0x55976120d848 <col:28> 'int' 2
    |         | | | `-BinaryOperator 0x55976120d8f8 <col:33, col:56> 'int' '=='
    |         | | |   |-ImplicitCastExpr 0x55976120d8e0 <col:33> 'int' <LValueToRValue>
    |         | | |   | `-DeclRefExpr 0x55976120d8a0 <col:33> 'int' lvalue Var 0x559761205240 '__unbuffered_p1_EAX' 'int'
    |         | | |   `-IntegerLiteral 0x55976120d8c0 <col:56> 'int' 1
    |         | | `-BinaryOperator 0x55976120d990 <col:61, col:84> 'int' '=='
    |         | |   |-ImplicitCastExpr 0x55976120d978 <col:61> 'int' <LValueToRValue>
    |         | |   | `-DeclRefExpr 0x55976120d938 <col:61> 'int' lvalue Var 0x559761205360 '__unbuffered_p1_EBX' 'int'
    |         | |   `-IntegerLiteral 0x55976120d958 <col:84> 'int' 0
    |         | `-BinaryOperator 0x55976120da28 <col:89, col:112> 'int' '=='
    |         |   |-ImplicitCastExpr 0x55976120da10 <col:89> 'int' <LValueToRValue>
    |         |   | `-DeclRefExpr 0x55976120d9d0 <col:89> 'int' lvalue Var 0x559761205480 '__unbuffered_p2_EAX' 'int'
    |         |   `-IntegerLiteral 0x55976120d9f0 <col:112> 'int' 1
    |         `-BinaryOperator 0x55976120dac0 <col:117, col:140> 'int' '=='
    |           |-ImplicitCastExpr 0x55976120daa8 <col:117> 'int' <LValueToRValue>
    |           | `-DeclRefExpr 0x55976120da68 <col:117> 'int' lvalue Var 0x5597612055a0 '__unbuffered_p2_EBX' 'int'
    |           `-IntegerLiteral 0x55976120da88 <col:140> 'int' 0
    |-CallExpr 0x55976120dbb8 <line:825:3, col:25> 'void'
    | `-ImplicitCastExpr 0x55976120dba0 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x55976120db80 <col:3> 'void ()' Function 0x5597611abf00 '__VERIFIER_atomic_end' 'void ()'
    |-CallExpr 0x55976120dc30 <line:826:3, col:36> 'void'
    | |-ImplicitCastExpr 0x55976120dc18 <col:3> 'void (*)(int)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x55976120dbd8 <col:3> 'void (int)' Function 0x5597611abbc8 '__VERIFIER_assert' 'void (int)'
    | `-ImplicitCastExpr 0x55976120dc70 <col:21> 'int' <IntegralCast>
    |   `-ImplicitCastExpr 0x55976120dc58 <col:21> '_Bool' <LValueToRValue>
    |     `-DeclRefExpr 0x55976120dbf8 <col:21> '_Bool' lvalue Var 0x5597612058f0 'main$tmp_guard1' '_Bool'
    `-ReturnStmt 0x55976120dca8 <line:827:3, col:10>
      `-IntegerLiteral 0x55976120dc88 <col:10> 'int' 0
