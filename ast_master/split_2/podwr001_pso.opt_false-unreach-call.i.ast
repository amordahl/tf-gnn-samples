TranslationUnitDecl 0x562389abae18 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x562389abb6d8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x562389abb3b0 '__int128'
|-TypedefDecl 0x562389abb748 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x562389abb3d0 'unsigned __int128'
|-TypedefDecl 0x562389abba50 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x562389abb820 'struct __NSConstantString_tag'
|   `-Record 0x562389abb7a0 '__NSConstantString_tag'
|-TypedefDecl 0x562389abbaf8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x562389abbab0 'char *'
|   `-BuiltinType 0x562389abaeb0 'char'
|-TypedefDecl 0x562389afa650 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'struct __va_list_tag [1]'
| `-ConstantArrayType 0x562389abbd90 'struct __va_list_tag [1]' 1 
|   `-RecordType 0x562389abbbd0 'struct __va_list_tag'
|     `-Record 0x562389abbb50 '__va_list_tag'
|-FunctionDecl 0x562389afa790 <./split_2/podwr001_pso.opt_false-unreach-call.i:1:1, col:34> col:13 used __VERIFIER_assume 'void (int)' extern
| `-ParmVarDecl 0x562389afa6c0 <col:31> col:34 'int'
|-FunctionDecl 0x562389afa958 <line:2:1, col:45> col:15 used __VERIFIER_nondet_pointer 'void *(void)' extern
|-FunctionDecl 0x562389afaa80 <line:3:1, col:61> col:13 used __VERIFIER_error 'void () __attribute__((noreturn))' extern
|-FunctionDecl 0x562389afabc8 <line:4:1, col:99> col:6 used __VERIFIER_assert 'void (int)'
| |-ParmVarDecl 0x562389afab38 <col:24, col:28> col:28 used expression 'int'
| `-CompoundStmt 0x562389afadf8 <col:40, col:99>
|   |-IfStmt 0x562389afadc8 <col:42, col:88>
|   | |-UnaryOperator 0x562389afaca8 <col:46, col:47> 'int' prefix '!' cannot overflow
|   | | `-ImplicitCastExpr 0x562389afac90 <col:47> 'int' <LValueToRValue>
|   | |   `-DeclRefExpr 0x562389afac70 <col:47> 'int' lvalue ParmVar 0x562389afab38 'expression' 'int'
|   | `-CompoundStmt 0x562389afadb0 <col:59, col:88>
|   |   `-LabelStmt 0x562389afad98 <col:61, col:85> 'ERROR'
|   |     `-CallExpr 0x562389afad28 <col:68, col:85> 'void'
|   |       `-ImplicitCastExpr 0x562389afad10 <col:68> 'void (*)() __attribute__((noreturn))' <FunctionToPointerDecay>
|   |         `-DeclRefExpr 0x562389afacc0 <col:68> 'void () __attribute__((noreturn))' Function 0x562389afaa80 '__VERIFIER_error' 'void () __attribute__((noreturn))'
|   |-NullStmt 0x562389afade0 <col:89>
|   `-ReturnStmt 0x562389afade8 <col:91>
|-FunctionDecl 0x562389afae40 <line:5:1, col:37> col:13 used __VERIFIER_atomic_begin 'void ()' extern
|-FunctionDecl 0x562389afaf00 <line:6:1, col:35> col:13 used __VERIFIER_atomic_end 'void ()' extern
|-FunctionDecl 0x562389afb280 <line:8:1, line:10:76> line:8:13 __assert_fail 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x562389afafb8 <col:28, col:40> col:40 __assertion 'const char *'
| |-ParmVarDecl 0x562389afb038 <col:53, col:65> col:65 __file 'const char *'
| |-ParmVarDecl 0x562389afb0b8 <line:9:7, col:20> col:20 __line 'unsigned int'
| |-ParmVarDecl 0x562389afb138 <col:28, col:40> col:40 __function 'const char *'
| `-NoThrowAttr 0x562389afb340 <line:10:22>
|-FunctionDecl 0x562389b21390 <line:11:1, line:13:76> line:11:13 __assert_perror_fail 'void (int, const char *, unsigned int, const char *) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x562389afb3b0 <col:35, col:39> col:39 __errnum 'int'
| |-ParmVarDecl 0x562389afb430 <col:49, col:61> col:61 __file 'const char *'
| |-ParmVarDecl 0x562389afb4b0 <line:12:7, col:20> col:20 __line 'unsigned int'
| |-ParmVarDecl 0x562389afb530 <col:28, col:40> col:40 __function 'const char *'
| `-NoThrowAttr 0x562389b21450 <line:13:22>
|-FunctionDecl 0x562389b21700 <line:14:1, line:15:76> line:14:13 __assert 'void (const char *, const char *, int) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x562389b214c0 <col:23, col:35> col:35 __assertion 'const char *'
| |-ParmVarDecl 0x562389b21540 <col:48, col:60> col:60 __file 'const char *'
| |-ParmVarDecl 0x562389b215c0 <col:68, col:72> col:72 __line 'int'
| `-NoThrowAttr 0x562389b217b8 <line:15:22>
|-TypedefDecl 0x562389b21828 <line:17:1, col:23> col:23 __u_char 'unsigned char'
| `-BuiltinType 0x562389abaf70 'unsigned char'
|-TypedefDecl 0x562389b21898 <line:18:1, col:28> col:28 __u_short 'unsigned short'
| `-BuiltinType 0x562389abaf90 'unsigned short'
|-TypedefDecl 0x562389b21908 <line:19:1, col:22> col:22 __u_int 'unsigned int'
| `-BuiltinType 0x562389abafb0 'unsigned int'
|-TypedefDecl 0x562389b21978 <line:20:1, col:27> col:27 __u_long 'unsigned long'
| `-BuiltinType 0x562389abafd0 'unsigned long'
|-TypedefDecl 0x562389b219e8 <line:21:1, col:21> col:21 __int8_t 'signed char'
| `-BuiltinType 0x562389abaed0 'signed char'
|-TypedefDecl 0x562389b21a58 <line:22:1, col:23> col:23 __uint8_t 'unsigned char'
| `-BuiltinType 0x562389abaf70 'unsigned char'
|-TypedefDecl 0x562389b21ac8 <line:23:1, col:26> col:26 __int16_t 'short'
| `-BuiltinType 0x562389abaef0 'short'
|-TypedefDecl 0x562389b21b38 <line:24:1, col:28> col:28 __uint16_t 'unsigned short'
| `-BuiltinType 0x562389abaf90 'unsigned short'
|-TypedefDecl 0x562389b21ba8 <line:25:1, col:20> col:20 __int32_t 'int'
| `-BuiltinType 0x562389abaf10 'int'
|-TypedefDecl 0x562389b21c18 <line:26:1, col:22> col:22 __uint32_t 'unsigned int'
| `-BuiltinType 0x562389abafb0 'unsigned int'
|-TypedefDecl 0x562389b21c88 <line:27:1, col:25> col:25 __int64_t 'long'
| `-BuiltinType 0x562389abaf30 'long'
|-TypedefDecl 0x562389b21cf8 <line:28:1, col:27> col:27 referenced __uint64_t 'unsigned long'
| `-BuiltinType 0x562389abafd0 'unsigned long'
|-TypedefDecl 0x562389b21d68 <line:29:1, col:18> col:18 referenced __quad_t 'long'
| `-BuiltinType 0x562389abaf30 'long'
|-TypedefDecl 0x562389b21dd8 <line:30:1, col:27> col:27 __u_quad_t 'unsigned long'
| `-BuiltinType 0x562389abafd0 'unsigned long'
|-TypedefDecl 0x562389b21e48 <line:31:1, col:27> col:27 __dev_t 'unsigned long'
| `-BuiltinType 0x562389abafd0 'unsigned long'
|-TypedefDecl 0x562389b21eb8 <line:32:1, col:22> col:22 __uid_t 'unsigned int'
| `-BuiltinType 0x562389abafb0 'unsigned int'
|-TypedefDecl 0x562389b21f28 <line:33:1, col:22> col:22 __gid_t 'unsigned int'
| `-BuiltinType 0x562389abafb0 'unsigned int'
|-TypedefDecl 0x562389b21f98 <line:34:1, col:27> col:27 __ino_t 'unsigned long'
| `-BuiltinType 0x562389abafd0 'unsigned long'
|-TypedefDecl 0x562389b22008 <line:35:1, col:27> col:27 __ino64_t 'unsigned long'
| `-BuiltinType 0x562389abafd0 'unsigned long'
|-TypedefDecl 0x562389b22078 <line:36:1, col:22> col:22 __mode_t 'unsigned int'
| `-BuiltinType 0x562389abafb0 'unsigned int'
|-TypedefDecl 0x562389b220e8 <line:37:1, col:27> col:27 __nlink_t 'unsigned long'
| `-BuiltinType 0x562389abafd0 'unsigned long'
|-TypedefDecl 0x562389b22158 <line:38:1, col:18> col:18 __off_t 'long'
| `-BuiltinType 0x562389abaf30 'long'
|-TypedefDecl 0x562389b221c8 <line:39:1, col:18> col:18 referenced __off64_t 'long'
| `-BuiltinType 0x562389abaf30 'long'
|-TypedefDecl 0x562389b22238 <line:40:1, col:13> col:13 referenced __pid_t 'int'
| `-BuiltinType 0x562389abaf10 'int'
|-RecordDecl 0x562389b22290 <line:41:9, col:32> col:9 struct definition
| `-FieldDecl 0x562389b22408 <col:18, col:29> col:22 __val 'int [2]'
|-TypedefDecl 0x562389b224c0 <col:1, col:34> col:34 __fsid_t 'struct __fsid_t':'__fsid_t'
| `-ElaboratedType 0x562389b22460 'struct __fsid_t' sugar
|   `-RecordType 0x562389b22310 '__fsid_t'
|     `-Record 0x562389b22290 ''
|-TypedefDecl 0x562389b22548 <line:42:1, col:18> col:18 referenced __clock_t 'long'
| `-BuiltinType 0x562389abaf30 'long'
|-TypedefDecl 0x562389b225b8 <line:43:1, col:27> col:27 __rlim_t 'unsigned long'
| `-BuiltinType 0x562389abafd0 'unsigned long'
|-TypedefDecl 0x562389b22628 <line:44:1, col:27> col:27 __rlim64_t 'unsigned long'
| `-BuiltinType 0x562389abafd0 'unsigned long'
|-TypedefDecl 0x562389b22698 <line:45:1, col:22> col:22 __id_t 'unsigned int'
| `-BuiltinType 0x562389abafb0 'unsigned int'
|-TypedefDecl 0x562389b22708 <line:46:1, col:18> col:18 referenced __time_t 'long'
| `-BuiltinType 0x562389abaf30 'long'
|-TypedefDecl 0x562389b22778 <line:47:1, col:22> col:22 __useconds_t 'unsigned int'
| `-BuiltinType 0x562389abafb0 'unsigned int'
|-TypedefDecl 0x562389b227e8 <line:48:1, col:18> col:18 __suseconds_t 'long'
| `-BuiltinType 0x562389abaf30 'long'
|-TypedefDecl 0x562389b22858 <line:49:1, col:13> col:13 __daddr_t 'int'
| `-BuiltinType 0x562389abaf10 'int'
|-TypedefDecl 0x562389b228c8 <line:50:1, col:13> col:13 __key_t 'int'
| `-BuiltinType 0x562389abaf10 'int'
|-TypedefDecl 0x562389b22938 <line:51:1, col:13> col:13 referenced __clockid_t 'int'
| `-BuiltinType 0x562389abaf10 'int'
|-TypedefDecl 0x562389b229a8 <line:52:1, col:16> col:16 referenced __timer_t 'void *'
| `-PointerType 0x562389abb630 'void *'
|   `-BuiltinType 0x562389abae70 'void'
|-TypedefDecl 0x562389b22a18 <line:53:1, col:18> col:18 __blksize_t 'long'
| `-BuiltinType 0x562389abaf30 'long'
|-TypedefDecl 0x562389b22a88 <line:54:1, col:18> col:18 __blkcnt_t 'long'
| `-BuiltinType 0x562389abaf30 'long'
|-TypedefDecl 0x562389b22af8 <line:55:1, col:18> col:18 __blkcnt64_t 'long'
| `-BuiltinType 0x562389abaf30 'long'
|-TypedefDecl 0x562389b22b68 <line:56:1, col:27> col:27 __fsblkcnt_t 'unsigned long'
| `-BuiltinType 0x562389abafd0 'unsigned long'
|-TypedefDecl 0x562389b22bd8 <line:57:1, col:27> col:27 __fsblkcnt64_t 'unsigned long'
| `-BuiltinType 0x562389abafd0 'unsigned long'
|-TypedefDecl 0x562389b22c48 <line:58:1, col:27> col:27 __fsfilcnt_t 'unsigned long'
| `-BuiltinType 0x562389abafd0 'unsigned long'
|-TypedefDecl 0x562389b22cb8 <line:59:1, col:27> col:27 __fsfilcnt64_t 'unsigned long'
| `-BuiltinType 0x562389abafd0 'unsigned long'
|-TypedefDecl 0x562389b22d28 <line:60:1, col:18> col:18 __fsword_t 'long'
| `-BuiltinType 0x562389abaf30 'long'
|-TypedefDecl 0x562389b22d98 <line:61:1, col:18> col:18 __ssize_t 'long'
| `-BuiltinType 0x562389abaf30 'long'
|-TypedefDecl 0x562389b22e08 <line:62:1, col:18> col:18 referenced __syscall_slong_t 'long'
| `-BuiltinType 0x562389abaf30 'long'
|-TypedefDecl 0x562389b22e78 <line:63:1, col:27> col:27 __syscall_ulong_t 'unsigned long'
| `-BuiltinType 0x562389abafd0 'unsigned long'
|-TypedefDecl 0x562389b22f08 <line:64:1, col:19> col:19 __loff_t '__off64_t':'long'
| `-TypedefType 0x562389b22ed0 '__off64_t' sugar
|   |-Typedef 0x562389b221c8 '__off64_t'
|   `-BuiltinType 0x562389abaf30 'long'
|-TypedefDecl 0x562389b23000 <line:65:1, col:19> col:19 __qaddr_t '__quad_t *'
| `-PointerType 0x562389b22fc0 '__quad_t *'
|   `-TypedefType 0x562389b22f60 '__quad_t' sugar
|     |-Typedef 0x562389b21d68 '__quad_t'
|     `-BuiltinType 0x562389abaf30 'long'
|-TypedefDecl 0x562389b23070 <line:66:1, col:15> col:15 __caddr_t 'char *'
| `-PointerType 0x562389abbab0 'char *'
|   `-BuiltinType 0x562389abaeb0 'char'
|-TypedefDecl 0x562389b230e0 <line:67:1, col:18> col:18 __intptr_t 'long'
| `-BuiltinType 0x562389abaf30 'long'
|-TypedefDecl 0x562389b23150 <line:68:1, col:22> col:22 __socklen_t 'unsigned int'
| `-BuiltinType 0x562389abafb0 'unsigned int'
|-FunctionDecl 0x562389b23298 <line:69:1, line:73:1> line:70:1 __bswap_32 'unsigned int (unsigned int)' static inline
| |-ParmVarDecl 0x562389b231c0 <col:13, col:26> col:26 used __bsx 'unsigned int'
| `-CompoundStmt 0x562389b245e8 <line:71:1, line:73:1>
|   `-ReturnStmt 0x562389b245d8 <line:72:3, col:34>
|     `-CallExpr 0x562389b24598 <col:10, col:34> 'unsigned int'
|       |-ImplicitCastExpr 0x562389b24580 <col:10> 'unsigned int (*)(unsigned int)' <BuiltinFnToFnPtr>
|       | `-DeclRefExpr 0x562389b24510 <col:10> '<builtin fn type>' Function 0x562389b24380 '__builtin_bswap32' 'unsigned int (unsigned int)'
|       `-ImplicitCastExpr 0x562389b245c0 <col:29> 'unsigned int' <LValueToRValue>
|         `-DeclRefExpr 0x562389b24530 <col:29> 'unsigned int' lvalue ParmVar 0x562389b231c0 '__bsx' 'unsigned int'
|-FunctionDecl 0x562389b24380 <col:10> col:10 implicit used __builtin_bswap32 'unsigned int (unsigned int)' extern
| |-ParmVarDecl 0x562389b24420 <<invalid sloc>> <invalid sloc> 'unsigned int'
| |-NoThrowAttr 0x562389b24490 <col:10> Implicit
| `-ConstAttr 0x562389b244e8 <col:10> Implicit
|-FunctionDecl 0x562389b24740 <line:74:1, line:78:1> line:75:1 __bswap_64 '__uint64_t (__uint64_t)' static inline
| |-ParmVarDecl 0x562389b24638 <col:13, col:24> col:24 used __bsx '__uint64_t':'unsigned long'
| `-CompoundStmt 0x562389b24a58 <line:76:1, line:78:1>
|   `-ReturnStmt 0x562389b24a48 <line:77:3, col:34>
|     `-CallExpr 0x562389b24a08 <col:10, col:34> 'unsigned long'
|       |-ImplicitCastExpr 0x562389b249f0 <col:10> 'unsigned long (*)(unsigned long)' <BuiltinFnToFnPtr>
|       | `-DeclRefExpr 0x562389b24978 <col:10> '<builtin fn type>' Function 0x562389b247e8 '__builtin_bswap64' 'unsigned long (unsigned long)'
|       `-ImplicitCastExpr 0x562389b24a30 <col:29> '__uint64_t':'unsigned long' <LValueToRValue>
|         `-DeclRefExpr 0x562389b24998 <col:29> '__uint64_t':'unsigned long' lvalue ParmVar 0x562389b24638 '__bsx' '__uint64_t':'unsigned long'
|-FunctionDecl 0x562389b247e8 <col:10> col:10 implicit used __builtin_bswap64 'unsigned long (unsigned long)' extern
| |-ParmVarDecl 0x562389b24888 <<invalid sloc>> <invalid sloc> 'unsigned long'
| |-NoThrowAttr 0x562389b248f8 <col:10> Implicit
| `-ConstAttr 0x562389b24950 <col:10> Implicit
|-TypedefDecl 0x562389b24a88 <line:79:1, col:27> col:27 referenced size_t 'unsigned long'
| `-BuiltinType 0x562389abafd0 'unsigned long'
|-TypedefDecl 0x562389b24b18 <line:81:1, col:18> col:18 referenced time_t '__time_t':'long'
| `-TypedefType 0x562389b24ae0 '__time_t' sugar
|   |-Typedef 0x562389b22708 '__time_t'
|   `-BuiltinType 0x562389abaf30 'long'
|-RecordDecl 0x562389b24b70 <line:84:1, line:88:3> line:84:8 struct timespec definition
| |-FieldDecl 0x562389b24c28 <line:86:5, col:14> col:14 tv_sec '__time_t':'long'
| `-FieldDecl 0x562389b24cb8 <line:87:5, col:23> col:23 tv_nsec '__syscall_slong_t':'long'
|-TypedefDecl 0x562389b24d48 <line:89:1, col:17> col:17 referenced pid_t '__pid_t':'int'
| `-TypedefType 0x562389b24d10 '__pid_t' sugar
|   |-Typedef 0x562389b22238 '__pid_t'
|   `-BuiltinType 0x562389abaf10 'int'
|-RecordDecl 0x562389b24da0 <line:90:1, line:93:3> line:90:8 struct sched_param definition
| `-FieldDecl 0x562389b24e60 <line:92:5, col:9> col:9 __sched_priority 'int'
|-RecordDecl 0x562389b24eb0 <line:96:1, line:99:3> line:96:8 struct __sched_param definition
| `-FieldDecl 0x562389b24f70 <line:98:5, col:9> col:9 __sched_priority 'int'
|-TypedefDecl 0x562389b24fd8 <line:100:1, col:27> col:27 referenced __cpu_mask 'unsigned long'
| `-BuiltinType 0x562389abafd0 'unsigned long'
|-RecordDecl 0x562389b25030 <line:101:9, line:104:1> line:101:9 struct definition
| `-FieldDecl 0x562389b252c0 <line:103:3, col:53> col:14 __bits '__cpu_mask [64]'
|-TypedefDecl 0x562389b263a0 <line:101:1, line:104:3> col:3 referenced cpu_set_t 'struct cpu_set_t':'cpu_set_t'
| `-ElaboratedType 0x562389b25310 'struct cpu_set_t' sugar
|   `-RecordType 0x562389b250b0 'cpu_set_t'
|     `-Record 0x562389b25030 ''
|-FunctionDecl 0x562389b26678 <line:106:1, line:107:42> line:106:12 __sched_cpucount 'int (size_t, const cpu_set_t *)' extern
| |-ParmVarDecl 0x562389b26448 <col:30, col:37> col:37 __setsize 'size_t':'unsigned long'
| |-ParmVarDecl 0x562389b26550 <col:48, col:65> col:65 __setp 'const cpu_set_t *'
| `-NoThrowAttr 0x562389b26728 <line:107:19>
|-FunctionDecl 0x562389b26900 <line:108:1, col:92> col:19 __sched_cpualloc 'cpu_set_t *(size_t)' extern
| |-ParmVarDecl 0x562389b26790 <col:37, col:44> col:44 __count 'size_t':'unsigned long'
| `-NoThrowAttr 0x562389b269a8 <col:69>
|-FunctionDecl 0x562389b26b20 <line:109:1, col:87> col:13 __sched_cpufree 'void (cpu_set_t *)' extern
| |-ParmVarDecl 0x562389b26a10 <col:30, col:41> col:41 __set 'cpu_set_t *'
| `-NoThrowAttr 0x562389b26bc8 <col:64>
|-FunctionDecl 0x562389b26e88 <line:112:1, line:113:45> line:112:12 sched_setparam 'int (__pid_t, const struct sched_param *)' extern
| |-ParmVarDecl 0x562389b26c30 <col:28, col:36> col:36 __pid '__pid_t':'int'
| |-ParmVarDecl 0x562389b26d68 <col:43, col:69> col:69 __param 'const struct sched_param *'
| `-NoThrowAttr 0x562389b26f38 <line:113:22>
|-FunctionDecl 0x562389b271b8 <line:114:1, col:111> col:12 sched_getparam 'int (__pid_t, struct sched_param *)' extern
| |-ParmVarDecl 0x562389b26fa0 <col:28, col:36> col:36 __pid '__pid_t':'int'
| |-ParmVarDecl 0x562389b27098 <col:43, col:63> col:63 __param 'struct sched_param *'
| `-NoThrowAttr 0x562389b27268 <col:88>
|-FunctionDecl 0x562389b27588 <line:115:1, line:116:85> line:115:12 sched_setscheduler 'int (__pid_t, int, const struct sched_param *)' extern
| |-ParmVarDecl 0x562389b272d0 <col:32, col:40> col:40 __pid '__pid_t':'int'
| |-ParmVarDecl 0x562389b273b0 <col:47, col:51> col:51 __policy 'int'
| |-ParmVarDecl 0x562389b27440 <line:116:11, col:37> col:37 __param 'const struct sched_param *'
| `-NoThrowAttr 0x562389b27640 <col:62>
|-FunctionDecl 0x562389b277b8 <line:117:1, col:86> col:12 sched_getscheduler 'int (__pid_t)' extern
| |-ParmVarDecl 0x562389b276a8 <col:32, col:40> col:40 __pid '__pid_t':'int'
| `-NoThrowAttr 0x562389b27860 <col:63>
|-FunctionDecl 0x562389b27988 <line:118:1, col:70> col:12 sched_yield 'int (void)' extern
| `-NoThrowAttr 0x562389b27a28 <col:47>
|-FunctionDecl 0x562389b27b30 <line:119:1, col:92> col:12 sched_get_priority_max 'int (int)' extern
| |-ParmVarDecl 0x562389b27a98 <col:36, col:40> col:40 __algorithm 'int'
| `-NoThrowAttr 0x562389b27bd8 <col:69>
|-FunctionDecl 0x562389b27ce0 <line:120:1, col:92> col:12 sched_get_priority_min 'int (int)' extern
| |-ParmVarDecl 0x562389b27c48 <col:36, col:40> col:40 __algorithm 'int'
| `-NoThrowAttr 0x562389b27d88 <col:69>
|-FunctionDecl 0x562389b28048 <line:121:1, col:111> col:12 sched_rr_get_interval 'int (__pid_t, struct timespec *)' extern
| |-ParmVarDecl 0x562389b27df0 <col:35, col:43> col:43 __pid '__pid_t':'int'
| |-ParmVarDecl 0x562389b27f28 <col:50, col:67> col:67 __t 'struct timespec *'
| `-NoThrowAttr 0x562389b280f8 <col:88>
|-TypedefDecl 0x562389b28188 <line:125:1, col:19> col:19 referenced clock_t '__clock_t':'long'
| `-TypedefType 0x562389b28150 '__clock_t' sugar
|   |-Typedef 0x562389b22548 '__clock_t'
|   `-BuiltinType 0x562389abaf30 'long'
|-TypedefDecl 0x562389b28218 <line:128:1, col:21> col:21 referenced clockid_t '__clockid_t':'int'
| `-TypedefType 0x562389b281e0 '__clockid_t' sugar
|   |-Typedef 0x562389b22938 '__clockid_t'
|   `-BuiltinType 0x562389abaf10 'int'
|-TypedefDecl 0x562389b282a8 <line:129:1, col:19> col:19 referenced timer_t '__timer_t':'void *'
| `-TypedefType 0x562389b28270 '__timer_t' sugar
|   |-Typedef 0x562389b229a8 '__timer_t'
|   `-PointerType 0x562389abb630 'void *'
|     `-BuiltinType 0x562389abae70 'void'
|-RecordDecl 0x562389b28300 <line:131:1, line:144:1> line:131:8 struct tm definition
| |-FieldDecl 0x562389b283d8 <line:133:3, col:7> col:7 tm_sec 'int'
| |-FieldDecl 0x562389b28440 <line:134:3, col:7> col:7 tm_min 'int'
| |-FieldDecl 0x562389b284a8 <line:135:3, col:7> col:7 tm_hour 'int'
| |-FieldDecl 0x562389b28510 <line:136:3, col:7> col:7 tm_mday 'int'
| |-FieldDecl 0x562389b28578 <line:137:3, col:7> col:7 tm_mon 'int'
| |-FieldDecl 0x562389b285e0 <line:138:3, col:7> col:7 tm_year 'int'
| |-FieldDecl 0x562389b28648 <line:139:3, col:7> col:7 tm_wday 'int'
| |-FieldDecl 0x562389b286b0 <line:140:3, col:7> col:7 tm_yday 'int'
| |-FieldDecl 0x562389b28718 <line:141:3, col:7> col:7 tm_isdst 'int'
| |-FieldDecl 0x562389b28780 <line:142:3, col:12> col:12 tm_gmtoff 'long'
| `-FieldDecl 0x562389b287e8 <line:143:3, col:15> col:15 tm_zone 'const char *'
|-RecordDecl 0x562389b28838 <line:147:1, line:151:3> line:147:8 struct itimerspec definition
| |-FieldDecl 0x562389b28908 <line:149:5, col:21> col:21 it_interval 'struct timespec':'struct timespec'
| `-FieldDecl 0x562389b28978 <line:150:5, col:21> col:21 it_value 'struct timespec':'struct timespec'
|-RecordDecl 0x562389b28a20 <line:152:1, col:8> col:8 struct sigevent
|-FunctionDecl 0x562389b28bf0 <line:154:1, col:68> col:16 clock 'clock_t (void)' extern
| `-NoThrowAttr 0x562389b28c90 <col:45>
|-FunctionDecl 0x562389b28e70 <line:155:1, col:77> col:15 time 'time_t (time_t *)' extern
| |-ParmVarDecl 0x562389b28d60 <col:21, col:29> col:29 __timer 'time_t *'
| `-NoThrowAttr 0x562389b28f18 <col:54>
|-FunctionDecl 0x562389b29118 <line:156:1, line:157:73> line:156:15 difftime 'double (time_t, time_t)' extern
| |-ParmVarDecl 0x562389b28f80 <col:25, col:32> col:32 __time1 'time_t':'long'
| |-ParmVarDecl 0x562389b28ff8 <col:41, col:48> col:48 __time0 'time_t':'long'
| |-NoThrowAttr 0x562389b291c8 <line:157:22>
| `-ConstAttr 0x562389b29220 <col:63>
|-FunctionDecl 0x562389b2a050 <line:158:1, col:79> col:15 mktime 'time_t (struct tm *)' extern
| |-ParmVarDecl 0x562389b29318 <col:23, col:34> col:34 __tp 'struct tm *'
| `-NoThrowAttr 0x562389b2a0f8 <col:56>
|-FunctionDecl 0x562389b2a4a0 <line:159:1, line:161:77> line:159:15 strftime 'size_t (char *restrict, size_t, const char *restrict, const struct tm *restrict)' extern
| |-ParmVarDecl 0x562389b2a168 <col:25, col:42> col:42 __s 'char *restrict'
| |-ParmVarDecl 0x562389b2a1e0 <col:47, col:54> col:54 __maxsize 'size_t':'unsigned long'
| |-ParmVarDecl 0x562389b2a260 <line:160:4, col:27> col:27 __format 'const char *restrict'
| |-ParmVarDecl 0x562389b2a358 <line:161:4, col:32> col:32 __tp 'const struct tm *restrict'
| `-NoThrowAttr 0x562389b2a560 <col:54>
|-RecordDecl 0x562389b2a5b8 <line:163:9, line:170:1> line:163:16 struct __locale_struct definition
| |-RecordDecl 0x562389b2a668 parent 0x562389abae18 <line:165:3, col:10> col:10 struct __locale_data
| |-FieldDecl 0x562389b2a8c8 <col:3, col:37> col:25 __locales 'struct __locale_data *[13]'
| |-FieldDecl 0x562389b2a968 <line:166:3, col:29> col:29 __ctype_b 'const unsigned short *'
| |-FieldDecl 0x562389b2a9d0 <line:167:3, col:14> col:14 __ctype_tolower 'const int *'
| |-FieldDecl 0x562389b2aa38 <line:168:3, col:14> col:14 __ctype_toupper 'const int *'
| `-FieldDecl 0x562389b2ab28 <line:169:3, col:25> col:15 __names 'const char *[13]'
|-TypedefDecl 0x562389b2ac48 <line:163:1, line:170:4> col:4 referenced __locale_t 'struct __locale_struct *'
| `-PointerType 0x562389b2abf0 'struct __locale_struct *'
|   `-ElaboratedType 0x562389b2ab80 'struct __locale_struct' sugar
|     `-RecordType 0x562389b2a640 'struct __locale_struct'
|       `-Record 0x562389b2a5b8 '__locale_struct'
|-TypedefDecl 0x562389b2acf8 <line:171:1, col:20> col:20 locale_t '__locale_t':'struct __locale_struct *'
| `-TypedefType 0x562389b2acc0 '__locale_t' sugar
|   |-Typedef 0x562389b2ac48 '__locale_t'
|   `-PointerType 0x562389b2abf0 'struct __locale_struct *'
|     `-ElaboratedType 0x562389b2ab80 'struct __locale_struct' sugar
|       `-RecordType 0x562389b2a640 'struct __locale_struct'
|         `-Record 0x562389b2a5b8 '__locale_struct'
|-FunctionDecl 0x562389b2c110 <line:172:1, line:175:63> line:172:15 strftime_l 'size_t (char *restrict, size_t, const char *restrict, const struct tm *restrict, __locale_t)' extern
| |-ParmVarDecl 0x562389b2ad68 <col:27, col:44> col:44 __s 'char *restrict'
| |-ParmVarDecl 0x562389b2ade0 <col:49, col:56> col:56 __maxsize 'size_t':'unsigned long'
| |-ParmVarDecl 0x562389b2ae60 <line:173:6, col:29> col:29 __format 'const char *restrict'
| |-ParmVarDecl 0x562389b2aef0 <line:174:6, col:34> col:34 __tp 'const struct tm *restrict'
| |-ParmVarDecl 0x562389b2af68 <line:175:6, col:17> col:17 __loc '__locale_t':'struct __locale_struct *'
| `-NoThrowAttr 0x562389b2c1d8 <col:40>
|-FunctionDecl 0x562389b2c3c8 <line:177:1, col:89> col:19 gmtime 'struct tm *(const time_t *)' extern
| |-ParmVarDecl 0x562389b2c2a0 <col:27, col:41> col:41 __timer 'const time_t *'
| `-NoThrowAttr 0x562389b2c470 <col:66>
|-FunctionDecl 0x562389b2c580 <line:178:1, col:92> col:19 localtime 'struct tm *(const time_t *)' extern
| |-ParmVarDecl 0x562389b2c4d8 <col:30, col:44> col:44 __timer 'const time_t *'
| `-NoThrowAttr 0x562389b2c628 <col:69>
|-FunctionDecl 0x562389b2c858 <line:180:1, line:181:75> line:180:19 gmtime_r 'struct tm *(const time_t *restrict, struct tm *restrict)' extern
| |-ParmVarDecl 0x562389b2c690 <col:29, col:54> col:54 __timer 'const time_t *restrict'
| |-ParmVarDecl 0x562389b2c720 <line:181:8, col:30> col:30 __tp 'struct tm *restrict'
| `-NoThrowAttr 0x562389b2c908 <col:52>
|-FunctionDecl 0x562389b2cab0 <line:182:1, line:183:78> line:182:19 localtime_r 'struct tm *(const time_t *restrict, struct tm *restrict)' extern
| |-ParmVarDecl 0x562389b2c970 <col:32, col:57> col:57 __timer 'const time_t *restrict'
| |-ParmVarDecl 0x562389b2ca00 <line:183:11, col:33> col:33 __tp 'struct tm *restrict'
| `-NoThrowAttr 0x562389b2cb60 <col:55>
|-FunctionDecl 0x562389b2ccf8 <line:185:1, col:85> col:14 asctime 'char *(const struct tm *)' extern
| |-ParmVarDecl 0x562389b2cbe0 <col:23, col:40> col:40 __tp 'const struct tm *'
| `-NoThrowAttr 0x562389b2cda0 <col:62>
|-FunctionDecl 0x562389b2cf18 <line:186:1, col:83> col:14 ctime 'char *(const time_t *)' extern
| |-ParmVarDecl 0x562389b2ce08 <col:21, col:35> col:35 __timer 'const time_t *'
| `-NoThrowAttr 0x562389b2cfc0 <col:60>
|-FunctionDecl 0x562389b2d2b8 <line:188:1, line:189:67> line:188:14 asctime_r 'char *(const struct tm *restrict, char *restrict)' extern
| |-ParmVarDecl 0x562389b2d118 <col:25, col:53> col:53 __tp 'const struct tm *restrict'
| |-ParmVarDecl 0x562389b2d198 <line:189:4, col:21> col:21 __buf 'char *restrict'
| `-NoThrowAttr 0x562389b2d368 <col:44>
|-FunctionDecl 0x562389b2d578 <line:190:1, line:191:72> line:190:14 ctime_r 'char *(const time_t *restrict, char *restrict)' extern
| |-ParmVarDecl 0x562389b2d3d0 <col:23, col:48> col:48 __timer 'const time_t *restrict'
| |-ParmVarDecl 0x562389b2d450 <line:191:9, col:26> col:26 __buf 'char *restrict'
| `-NoThrowAttr 0x562389b2d628 <col:49>
|-VarDecl 0x562389b2d728 <line:192:1, col:24> col:14 __tzname 'char *[2]' extern
|-VarDecl 0x562389b2d7a8 <line:193:1, col:12> col:12 __daylight 'int' extern
|-VarDecl 0x562389b2d828 <line:194:1, col:17> col:17 __timezone 'long' extern
|-VarDecl 0x562389b2d8f0 <line:195:1, col:22> col:14 tzname 'char *[2]' extern
|-FunctionDecl 0x562389b2da20 <line:196:1, col:65> col:13 tzset 'void (void)' extern
| `-NoThrowAttr 0x562389b2dac0 <col:42>
|-VarDecl 0x562389b2db30 <line:197:1, col:12> col:12 daylight 'int' extern
|-VarDecl 0x562389b2dbb0 <line:198:1, col:17> col:17 timezone 'long' extern
|-FunctionDecl 0x562389b2dd38 <line:199:1, col:80> col:12 stime 'int (const time_t *)' extern
| |-ParmVarDecl 0x562389b2dc28 <col:19, col:33> col:33 __when 'const time_t *'
| `-NoThrowAttr 0x562389b2dde0 <col:57>
|-FunctionDecl 0x562389b2def0 <line:200:1, col:79> col:15 timegm 'time_t (struct tm *)' extern
| |-ParmVarDecl 0x562389b2de60 <col:23, col:34> col:34 __tp 'struct tm *'
| `-NoThrowAttr 0x562389b2df98 <col:56>
|-FunctionDecl 0x562389b2e0d0 <line:201:1, col:82> col:15 timelocal 'time_t (struct tm *)' extern
| |-ParmVarDecl 0x562389b2e018 <col:26, col:37> col:37 __tp 'struct tm *'
| `-NoThrowAttr 0x562389b2e178 <col:59>
|-FunctionDecl 0x562389b2e280 <line:202:1, col:99> col:12 dysize 'int (int)' extern
| |-ParmVarDecl 0x562389b2e1e8 <col:20, col:24> col:24 __year 'int'
| |-NoThrowAttr 0x562389b2e328 <col:48>
| `-ConstAttr 0x562389b2e380 <col:89>
|-FunctionDecl 0x562389b2e5e8 <line:203:1, line:204:37> line:203:12 nanosleep 'int (const struct timespec *, struct timespec *)' extern
| |-ParmVarDecl 0x562389b2e438 <col:23, col:46> col:46 __requested_time 'const struct timespec *'
| `-ParmVarDecl 0x562389b2e4c8 <line:204:9, col:26> col:26 __remaining 'struct timespec *'
|-FunctionDecl 0x562389b2e848 <line:205:1, col:111> col:12 clock_getres 'int (clockid_t, struct timespec *)' extern
| |-ParmVarDecl 0x562389b2e6d8 <col:26, col:36> col:36 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x562389b2e768 <col:48, col:65> col:65 __res 'struct timespec *'
| `-NoThrowAttr 0x562389b2e8f8 <col:88>
|-FunctionDecl 0x562389b2ea90 <line:206:1, col:111> col:12 clock_gettime 'int (clockid_t, struct timespec *)' extern
| |-ParmVarDecl 0x562389b2e960 <col:27, col:37> col:37 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x562389b2e9f0 <col:49, col:66> col:66 __tp 'struct timespec *'
| `-NoThrowAttr 0x562389b2eb40 <col:88>
|-FunctionDecl 0x562389b2ed58 <line:207:1, line:208:45> line:207:12 clock_settime 'int (clockid_t, const struct timespec *)' extern
| |-ParmVarDecl 0x562389b2eba8 <col:27, col:37> col:37 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x562389b2ec38 <col:49, col:72> col:72 __tp 'const struct timespec *'
| `-NoThrowAttr 0x562389b2ee08 <line:208:22>
|-FunctionDecl 0x562389b2f178 <line:209:1, line:211:30> line:209:12 clock_nanosleep 'int (clockid_t, int, const struct timespec *, struct timespec *)' extern
| |-ParmVarDecl 0x562389b2ee70 <col:29, col:39> col:39 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x562389b2eef0 <col:51, col:55> col:55 __flags 'int'
| |-ParmVarDecl 0x562389b2ef80 <line:210:8, col:31> col:31 __req 'const struct timespec *'
| `-ParmVarDecl 0x562389b2f010 <line:211:8, col:25> col:25 __rem 'struct timespec *'
|-FunctionDecl 0x562389b2f478 <line:212:1, col:108> col:12 clock_getcpuclockid 'int (pid_t, clockid_t *)' extern
| |-ParmVarDecl 0x562389b2f278 <col:33, col:39> col:39 __pid 'pid_t':'int'
| |-ParmVarDecl 0x562389b2f350 <col:46, col:57> col:57 __clock_id 'clockid_t *'
| `-NoThrowAttr 0x562389b2f528 <col:85>
|-FunctionDecl 0x562389b2f918 <line:213:1, line:215:75> line:213:12 timer_create 'int (clockid_t, struct sigevent *restrict, timer_t *restrict)' extern
| |-ParmVarDecl 0x562389b2f590 <col:26, col:36> col:36 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x562389b2f6c8 <line:214:5, col:33> col:33 __evp 'struct sigevent *restrict'
| |-ParmVarDecl 0x562389b2f7d0 <line:215:5, col:25> col:25 __timerid 'timer_t *restrict'
| `-NoThrowAttr 0x562389b2f9d0 <col:52>
|-FunctionDecl 0x562389b2fb48 <line:216:1, col:84> col:12 timer_delete 'int (timer_t)' extern
| |-ParmVarDecl 0x562389b2fa38 <col:26, col:34> col:34 __timerid 'timer_t':'void *'
| `-NoThrowAttr 0x562389b2fbf0 <col:61>
|-FunctionDecl 0x562389b300f0 <line:217:1, line:219:85> line:217:12 timer_settime 'int (timer_t, int, const struct itimerspec *restrict, struct itimerspec *restrict)' extern
| |-ParmVarDecl 0x562389b2fc58 <col:27, col:35> col:35 __timerid 'timer_t':'void *'
| |-ParmVarDecl 0x562389b2fcd8 <col:46, col:50> col:50 __flags 'int'
| |-ParmVarDecl 0x562389b2fe08 <line:218:6, col:42> col:42 __value 'const struct itimerspec *restrict'
| |-ParmVarDecl 0x562389b2fef8 <line:219:6, col:36> col:36 __ovalue 'struct itimerspec *restrict'
| `-NoThrowAttr 0x562389b301b0 <col:62>
|-FunctionDecl 0x562389b303c8 <line:220:1, line:221:45> line:220:12 timer_gettime 'int (timer_t, struct itimerspec *)' extern
| |-ParmVarDecl 0x562389b30218 <col:27, col:35> col:35 __timerid 'timer_t':'void *'
| |-ParmVarDecl 0x562389b302a8 <col:46, col:65> col:65 __value 'struct itimerspec *'
| `-NoThrowAttr 0x562389b30478 <line:221:22>
|-FunctionDecl 0x562389b30578 <line:222:1, col:88> col:12 timer_getoverrun 'int (timer_t)' extern
| |-ParmVarDecl 0x562389b304e0 <col:30, col:38> col:38 __timerid 'timer_t':'void *'
| `-NoThrowAttr 0x562389b30620 <col:65>
|-TypedefDecl 0x562389b30690 <line:224:1, col:27> col:27 referenced pthread_t 'unsigned long'
| `-BuiltinType 0x562389abafd0 'unsigned long'
|-RecordDecl 0x562389b306e8 <line:225:1, line:229:1> line:225:7 union pthread_attr_t definition
| |-FieldDecl 0x562389b30830 <line:227:3, col:17> col:8 __size 'char [56]'
| `-FieldDecl 0x562389b30898 <line:228:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x562389b30948 <line:230:1, col:30> col:30 referenced pthread_attr_t 'union pthread_attr_t':'union pthread_attr_t'
| `-ElaboratedType 0x562389b308f0 'union pthread_attr_t' sugar
|   `-RecordType 0x562389b30770 'union pthread_attr_t'
|     `-Record 0x562389b306e8 'pthread_attr_t'
|-RecordDecl 0x562389b309a0 <line:231:9, line:235:1> line:231:16 struct __pthread_internal_list definition
| |-FieldDecl 0x562389b30b18 <line:233:3, col:35> col:35 __prev 'struct __pthread_internal_list *'
| `-FieldDecl 0x562389b30b90 <line:234:3, col:35> col:35 __next 'struct __pthread_internal_list *'
|-TypedefDecl 0x562389b30c40 <line:231:1, line:235:3> col:3 referenced __pthread_list_t 'struct __pthread_internal_list':'struct __pthread_internal_list'
| `-ElaboratedType 0x562389b30be0 'struct __pthread_internal_list' sugar
|   `-RecordType 0x562389b30a20 'struct __pthread_internal_list'
|     `-Record 0x562389b309a0 '__pthread_internal_list'
|-RecordDecl 0x562389b30cb0 <line:236:9, line:250:1> line:236:9 union definition
| |-RecordDecl 0x562389b30d58 parent 0x562389abae18 <line:238:3, line:247:3> line:238:10 struct __pthread_mutex_s definition
| | |-FieldDecl 0x562389b30e30 <line:240:5, col:9> col:9 __lock 'int'
| | |-FieldDecl 0x562389b30e98 <line:241:5, col:18> col:18 __count 'unsigned int'
| | |-FieldDecl 0x562389b30f00 <line:242:5, col:9> col:9 __owner 'int'
| | |-FieldDecl 0x562389b30f68 <line:243:5, col:18> col:18 __nusers 'unsigned int'
| | |-FieldDecl 0x562389b30fd0 <line:244:5, col:9> col:9 __kind 'int'
| | |-FieldDecl 0x562389b31038 <line:245:5, col:9> col:9 __spins 'int'
| | `-FieldDecl 0x562389b35110 <line:246:5, col:22> col:22 __list '__pthread_list_t':'struct __pthread_internal_list'
| |-FieldDecl 0x562389b351c0 <line:238:3, line:247:5> col:5 __data 'struct __pthread_mutex_s':'struct __pthread_mutex_s'
| |-FieldDecl 0x562389b352b0 <line:248:3, col:17> col:8 __size 'char [40]'
| `-FieldDecl 0x562389b35318 <line:249:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x562389b354a0 <line:236:1, line:250:3> col:3 referenced pthread_mutex_t 'union pthread_mutex_t':'pthread_mutex_t'
| `-ElaboratedType 0x562389b35440 'union pthread_mutex_t' sugar
|   `-RecordType 0x562389b30d30 'pthread_mutex_t'
|     `-Record 0x562389b30cb0 ''
|-RecordDecl 0x562389b35510 <line:251:9, line:255:1> line:251:9 union definition
| |-FieldDecl 0x562389b35650 <line:253:3, col:16> col:8 __size 'char [4]'
| `-FieldDecl 0x562389b356b8 <line:254:3, col:7> col:7 __align 'int'
|-TypedefDecl 0x562389b35770 <line:251:1, line:255:3> col:3 referenced pthread_mutexattr_t 'union pthread_mutexattr_t':'pthread_mutexattr_t'
| `-ElaboratedType 0x562389b35710 'union pthread_mutexattr_t' sugar
|   `-RecordType 0x562389b35590 'pthread_mutexattr_t'
|     `-Record 0x562389b35510 ''
|-RecordDecl 0x562389b357e0 <line:256:9, line:271:1> line:256:9 union definition
| |-RecordDecl 0x562389b35888 <line:258:3, line:268:3> line:258:3 struct definition
| | |-FieldDecl 0x562389b35950 <line:260:5, col:9> col:9 __lock 'int'
| | |-FieldDecl 0x562389b359b8 <line:261:5, col:18> col:18 __futex 'unsigned int'
| | |-FieldDecl 0x562389b35a20 <line:262:19, col:42> col:42 __total_seq 'unsigned long long'
| | |-FieldDecl 0x562389b35a88 <line:263:19, col:42> col:42 __wakeup_seq 'unsigned long long'
| | |-FieldDecl 0x562389b35af0 <line:264:19, col:42> col:42 __woken_seq 'unsigned long long'
| | |-FieldDecl 0x562389b35b58 <line:265:5, col:11> col:11 __mutex 'void *'
| | |-FieldDecl 0x562389b35bc0 <line:266:5, col:18> col:18 __nwaiters 'unsigned int'
| | `-FieldDecl 0x562389b35c28 <line:267:5, col:18> col:18 __broadcast_seq 'unsigned int'
| |-FieldDecl 0x562389b35ce0 <line:258:3, line:268:5> col:5 __data 'struct (anonymous struct at ./split_2/podwr001_pso.opt_false-unreach-call.i:258:3)':'struct pthread_cond_t::(anonymous at ./split_2/podwr001_pso.opt_false-unreach-call.i:258:3)'
| |-FieldDecl 0x562389b35dd0 <line:269:3, col:17> col:8 __size 'char [48]'
| `-FieldDecl 0x562389b35e38 <line:270:17, col:31> col:31 __align 'long long'
|-TypedefDecl 0x562389b35f70 <line:256:1, line:271:3> col:3 referenced pthread_cond_t 'union pthread_cond_t':'pthread_cond_t'
| `-ElaboratedType 0x562389b35f10 'union pthread_cond_t' sugar
|   `-RecordType 0x562389b35860 'pthread_cond_t'
|     `-Record 0x562389b357e0 ''
|-RecordDecl 0x562389b35fe0 <line:272:9, line:276:1> line:272:9 union definition
| |-FieldDecl 0x562389b37130 <line:274:3, col:16> col:8 __size 'char [4]'
| `-FieldDecl 0x562389b37198 <line:275:3, col:7> col:7 __align 'int'
|-TypedefDecl 0x562389b37250 <line:272:1, line:276:3> col:3 referenced pthread_condattr_t 'union pthread_condattr_t':'pthread_condattr_t'
| `-ElaboratedType 0x562389b371f0 'union pthread_condattr_t' sugar
|   `-RecordType 0x562389b36060 'pthread_condattr_t'
|     `-Record 0x562389b35fe0 ''
|-TypedefDecl 0x562389b372d8 <line:277:1, col:22> col:22 referenced pthread_key_t 'unsigned int'
| `-BuiltinType 0x562389abafb0 'unsigned int'
|-TypedefDecl 0x562389b37348 <line:278:1, col:13> col:13 referenced pthread_once_t 'int'
| `-BuiltinType 0x562389abaf10 'int'
|-RecordDecl 0x562389b373a0 <line:279:9, line:297:1> line:279:9 union definition
| |-RecordDecl 0x562389b37448 <line:281:3, line:294:3> line:281:3 struct definition
| | |-FieldDecl 0x562389b37510 <line:283:5, col:9> col:9 __lock 'int'
| | |-FieldDecl 0x562389b37578 <line:284:5, col:18> col:18 __nr_readers 'unsigned int'
| | |-FieldDecl 0x562389b375e0 <line:285:5, col:18> col:18 __readers_wakeup 'unsigned int'
| | |-FieldDecl 0x562389b37648 <line:286:5, col:18> col:18 __writer_wakeup 'unsigned int'
| | |-FieldDecl 0x562389b376b0 <line:287:5, col:18> col:18 __nr_readers_queued 'unsigned int'
| | |-FieldDecl 0x562389b37718 <line:288:5, col:18> col:18 __nr_writers_queued 'unsigned int'
| | |-FieldDecl 0x562389b37780 <line:289:5, col:9> col:9 __writer 'int'
| | |-FieldDecl 0x562389b377e8 <line:290:5, col:9> col:9 __shared 'int'
| | |-FieldDecl 0x562389b37850 <line:291:5, col:23> col:23 __pad1 'unsigned long'
| | |-FieldDecl 0x562389b378b8 <line:292:5, col:23> col:23 __pad2 'unsigned long'
| | `-FieldDecl 0x562389b37920 <line:293:5, col:18> col:18 __flags 'unsigned int'
| |-FieldDecl 0x562389b379d0 <line:281:3, line:294:5> col:5 __data 'struct (anonymous struct at ./split_2/podwr001_pso.opt_false-unreach-call.i:281:3)':'struct pthread_rwlock_t::(anonymous at ./split_2/podwr001_pso.opt_false-unreach-call.i:281:3)'
| |-FieldDecl 0x562389b37a78 <line:295:3, col:17> col:8 __size 'char [56]'
| `-FieldDecl 0x562389b37ae0 <line:296:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x562389b37c30 <line:279:1, line:297:3> col:3 referenced pthread_rwlock_t 'union pthread_rwlock_t':'pthread_rwlock_t'
| `-ElaboratedType 0x562389b37bd0 'union pthread_rwlock_t' sugar
|   `-RecordType 0x562389b37420 'pthread_rwlock_t'
|     `-Record 0x562389b373a0 ''
|-RecordDecl 0x562389b37ca0 <line:298:9, line:302:1> line:298:9 union definition
| |-FieldDecl 0x562389b37de0 <line:300:3, col:16> col:8 __size 'char [8]'
| `-FieldDecl 0x562389b37e48 <line:301:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x562389b37f00 <line:298:1, line:302:3> col:3 referenced pthread_rwlockattr_t 'union pthread_rwlockattr_t':'pthread_rwlockattr_t'
| `-ElaboratedType 0x562389b37ea0 'union pthread_rwlockattr_t' sugar
|   `-RecordType 0x562389b37d20 'pthread_rwlockattr_t'
|     `-Record 0x562389b37ca0 ''
|-TypedefDecl 0x562389b37f88 <line:303:1, col:22> col:22 referenced pthread_spinlock_t 'volatile int'
| `-QualType 0x562389abaf14 'volatile int' volatile
|   `-BuiltinType 0x562389abaf10 'int'
|-RecordDecl 0x562389b37fe0 <line:304:9, line:308:1> line:304:9 union definition
| |-FieldDecl 0x562389b39140 <line:306:3, col:17> col:8 __size 'char [32]'
| `-FieldDecl 0x562389b391a8 <line:307:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x562389b39260 <line:304:1, line:308:3> col:3 referenced pthread_barrier_t 'union pthread_barrier_t':'pthread_barrier_t'
| `-ElaboratedType 0x562389b39200 'union pthread_barrier_t' sugar
|   `-RecordType 0x562389b38060 'pthread_barrier_t'
|     `-Record 0x562389b37fe0 ''
|-RecordDecl 0x562389b392d0 <line:309:9, line:313:1> line:309:9 union definition
| |-FieldDecl 0x562389b393d0 <line:311:3, col:16> col:8 __size 'char [4]'
| `-FieldDecl 0x562389b39438 <line:312:3, col:7> col:7 __align 'int'
|-TypedefDecl 0x562389b394f0 <line:309:1, line:313:3> col:3 referenced pthread_barrierattr_t 'union pthread_barrierattr_t':'pthread_barrierattr_t'
| `-ElaboratedType 0x562389b39490 'union pthread_barrierattr_t' sugar
|   `-RecordType 0x562389b39350 'pthread_barrierattr_t'
|     `-Record 0x562389b392d0 ''
|-TypedefDecl 0x562389b39608 <line:314:1, col:29> col:18 referenced __jmp_buf 'long [8]'
| `-ConstantArrayType 0x562389b395a0 'long [8]' 8 
|   `-BuiltinType 0x562389abaf30 'long'
|-EnumDecl 0x562389b39660 <line:315:1, line:319:1> line:315:1
| |-EnumConstantDecl 0x562389b39728 <line:317:3> col:3 PTHREAD_CREATE_JOINABLE 'int'
| `-EnumConstantDecl 0x562389b39778 <line:318:3> col:3 PTHREAD_CREATE_DETACHED 'int'
|-EnumDecl 0x562389b397c8 <line:320:1, line:331:1> line:320:1
| |-EnumConstantDecl 0x562389b39898 <line:322:3> col:3 referenced PTHREAD_MUTEX_TIMED_NP 'int'
| |-EnumConstantDecl 0x562389b398e8 <line:323:3> col:3 referenced PTHREAD_MUTEX_RECURSIVE_NP 'int'
| |-EnumConstantDecl 0x562389b39938 <line:324:3> col:3 referenced PTHREAD_MUTEX_ERRORCHECK_NP 'int'
| |-EnumConstantDecl 0x562389b39988 <line:325:3> col:3 PTHREAD_MUTEX_ADAPTIVE_NP 'int'
| |-EnumConstantDecl 0x562389b39a10 <line:327:3, col:26> col:3 referenced PTHREAD_MUTEX_NORMAL 'int'
| | `-ConstantExpr 0x562389b399f8 <col:26> 'int'
| |   `-DeclRefExpr 0x562389b399d8 <col:26> 'int' EnumConstant 0x562389b39898 'PTHREAD_MUTEX_TIMED_NP' 'int'
| |-EnumConstantDecl 0x562389b39a98 <line:328:3, col:29> col:3 PTHREAD_MUTEX_RECURSIVE 'int'
| | `-ConstantExpr 0x562389b39a80 <col:29> 'int'
| |   `-DeclRefExpr 0x562389b39a60 <col:29> 'int' EnumConstant 0x562389b398e8 'PTHREAD_MUTEX_RECURSIVE_NP' 'int'
| |-EnumConstantDecl 0x562389b39b20 <line:329:3, col:30> col:3 PTHREAD_MUTEX_ERRORCHECK 'int'
| | `-ConstantExpr 0x562389b39b08 <col:30> 'int'
| |   `-DeclRefExpr 0x562389b39ae8 <col:30> 'int' EnumConstant 0x562389b39938 'PTHREAD_MUTEX_ERRORCHECK_NP' 'int'
| `-EnumConstantDecl 0x562389b39ba8 <line:330:3, col:27> col:3 PTHREAD_MUTEX_DEFAULT 'int'
|   `-ConstantExpr 0x562389b39b90 <col:27> 'int'
|     `-DeclRefExpr 0x562389b39b70 <col:27> 'int' EnumConstant 0x562389b39a10 'PTHREAD_MUTEX_NORMAL' 'int'
|-EnumDecl 0x562389b39bf8 <line:332:1, line:338:1> line:332:1
| |-EnumConstantDecl 0x562389b39cc8 <line:334:3> col:3 referenced PTHREAD_MUTEX_STALLED 'int'
| |-EnumConstantDecl 0x562389b39d50 <line:335:3, col:30> col:3 PTHREAD_MUTEX_STALLED_NP 'int'
| | `-ConstantExpr 0x562389b39d38 <col:30> 'int'
| |   `-DeclRefExpr 0x562389b39d18 <col:30> 'int' EnumConstant 0x562389b39cc8 'PTHREAD_MUTEX_STALLED' 'int'
| |-EnumConstantDecl 0x562389b39da0 <line:336:3> col:3 referenced PTHREAD_MUTEX_ROBUST 'int'
| `-EnumConstantDecl 0x562389b39e28 <line:337:3, col:29> col:3 PTHREAD_MUTEX_ROBUST_NP 'int'
|   `-ConstantExpr 0x562389b39e10 <col:29> 'int'
|     `-DeclRefExpr 0x562389b39df0 <col:29> 'int' EnumConstant 0x562389b39da0 'PTHREAD_MUTEX_ROBUST' 'int'
|-EnumDecl 0x562389b39e78 <line:339:1, line:344:1> line:339:1
| |-EnumConstantDecl 0x562389b39f48 <line:341:3> col:3 PTHREAD_PRIO_NONE 'int'
| |-EnumConstantDecl 0x562389b39f98 <line:342:3> col:3 PTHREAD_PRIO_INHERIT 'int'
| `-EnumConstantDecl 0x562389b39fe8 <line:343:3> col:3 PTHREAD_PRIO_PROTECT 'int'
|-EnumDecl 0x562389b3a038 <line:345:1, line:351:1> line:345:1
| |-EnumConstantDecl 0x562389b3a150 <line:347:3> col:3 referenced PTHREAD_RWLOCK_PREFER_READER_NP 'int'
| |-EnumConstantDecl 0x562389b3a1a0 <line:348:3> col:3 PTHREAD_RWLOCK_PREFER_WRITER_NP 'int'
| |-EnumConstantDecl 0x562389b3a1f0 <line:349:3> col:3 PTHREAD_RWLOCK_PREFER_WRITER_NONRECURSIVE_NP 'int'
| `-EnumConstantDecl 0x562389b3a278 <line:350:3, col:31> col:3 PTHREAD_RWLOCK_DEFAULT_NP 'int'
|   `-ConstantExpr 0x562389b3a260 <col:31> 'int'
|     `-DeclRefExpr 0x562389b3a240 <col:31> 'int' EnumConstant 0x562389b3a150 'PTHREAD_RWLOCK_PREFER_READER_NP' 'int'
|-EnumDecl 0x562389b3a2c8 <line:352:1, line:356:1> line:352:1
| |-EnumConstantDecl 0x562389b3a398 <line:354:3> col:3 PTHREAD_INHERIT_SCHED 'int'
| `-EnumConstantDecl 0x562389b3a3e8 <line:355:3> col:3 PTHREAD_EXPLICIT_SCHED 'int'
|-EnumDecl 0x562389b3a438 <line:357:1, line:361:1> line:357:1
| |-EnumConstantDecl 0x562389b3a508 <line:359:3> col:3 PTHREAD_SCOPE_SYSTEM 'int'
| `-EnumConstantDecl 0x562389b3a558 <line:360:3> col:3 PTHREAD_SCOPE_PROCESS 'int'
|-EnumDecl 0x562389b3a5a8 <line:362:1, line:366:1> line:362:1
| |-EnumConstantDecl 0x562389b3a678 <line:364:3> col:3 PTHREAD_PROCESS_PRIVATE 'int'
| `-EnumConstantDecl 0x562389b3a6c8 <line:365:3> col:3 PTHREAD_PROCESS_SHARED 'int'
|-RecordDecl 0x562389b3a718 <line:367:1, line:373:1> line:367:8 struct _pthread_cleanup_buffer definition
| |-FieldDecl 0x562389b3a958 <line:369:3, col:28> col:10 __routine 'void (*)(void *)'
| |-FieldDecl 0x562389b3a9c0 <line:370:3, col:9> col:9 __arg 'void *'
| |-FieldDecl 0x562389b3aa28 <line:371:3, col:7> col:7 __canceltype 'int'
| `-FieldDecl 0x562389b3ab48 <line:372:3, col:35> col:35 __prev 'struct _pthread_cleanup_buffer *'
|-EnumDecl 0x562389b3ab98 <line:374:1, line:378:1> line:374:1
| |-EnumConstantDecl 0x562389b3ac68 <line:376:3> col:3 PTHREAD_CANCEL_ENABLE 'int'
| `-EnumConstantDecl 0x562389b3acb8 <line:377:3> col:3 PTHREAD_CANCEL_DISABLE 'int'
|-EnumDecl 0x562389b3ad08 <line:379:1, line:383:1> line:379:1
| |-EnumConstantDecl 0x562389b3add8 <line:381:3> col:3 PTHREAD_CANCEL_DEFERRED 'int'
| `-EnumConstantDecl 0x562389b3ae28 <line:382:3> col:3 PTHREAD_CANCEL_ASYNCHRONOUS 'int'
|-FunctionDecl 0x562389b3b488 <line:385:1, line:388:96> line:385:12 used pthread_create 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' extern
| |-ParmVarDecl 0x562389b3af20 <col:28, col:50> col:50 __newthread 'pthread_t *restrict'
| |-ParmVarDecl 0x562389b3b030 <line:386:7, col:40> col:40 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x562389b3b270 <line:387:7, col:39> col:15 __start_routine 'void *(*)(void *)'
| |-ParmVarDecl 0x562389b3b2f0 <line:388:7, col:24> col:24 __arg 'void *restrict'
| |-NoThrowAttr 0x562389b3b548 <col:47>
| |-NonNullAttr 0x562389b3b5a0 <col:77, col:94> 1 3
| `-CallbackAttr 0x562389b3b5d8 <line:385:12> Implicit 2 3
|-FunctionDecl 0x562389b3b700 <line:389:1, col:72> col:13 pthread_exit 'void (void *) __attribute__((noreturn))' extern
| `-ParmVarDecl 0x562389b3b630 <col:27, col:33> col:33 __retval 'void *'
|-FunctionDecl 0x562389b3b958 <line:390:1, col:64> col:12 pthread_join 'int (pthread_t, void **)' extern
| |-ParmVarDecl 0x562389b3b7b8 <col:26, col:36> col:36 __th 'pthread_t':'unsigned long'
| `-ParmVarDecl 0x562389b3b838 <col:42, col:49> col:49 __thread_return 'void **'
|-FunctionDecl 0x562389b3bb28 <line:391:1, col:83> col:12 pthread_detach 'int (pthread_t)' extern
| |-ParmVarDecl 0x562389b3ba18 <col:28, col:38> col:38 __th 'pthread_t':'unsigned long'
| `-NoThrowAttr 0x562389b3bbd0 <col:60>
|-FunctionDecl 0x562389b3bd20 <line:392:1, col:105> col:18 pthread_self 'pthread_t (void)' extern
| |-NoThrowAttr 0x562389b3bdc0 <col:54>
| `-ConstAttr 0x562389b3be18 <col:95>
|-FunctionDecl 0x562389b3bfe8 <line:393:1, line:394:70> line:393:12 pthread_equal 'int (pthread_t, pthread_t)' extern
| |-ParmVarDecl 0x562389b3be50 <col:27, col:37> col:37 __thread1 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x562389b3bec8 <col:48, col:58> col:58 __thread2 'pthread_t':'unsigned long'
| |-NoThrowAttr 0x562389b3c098 <line:394:19>
| `-ConstAttr 0x562389b3c0f0 <col:60>
|-FunctionDecl 0x562389b3db08 <line:395:1, col:128> col:12 pthread_attr_init 'int (pthread_attr_t *)' extern
| |-ParmVarDecl 0x562389b3d9d0 <col:31, col:47> col:47 __attr 'pthread_attr_t *'
| |-NoThrowAttr 0x562389b3dbb0 <col:71>
| `-NonNullAttr 0x562389b3dc08 <col:112, col:126> 1
|-FunctionDecl 0x562389b3dd10 <line:396:1, line:397:79> line:396:12 pthread_attr_destroy 'int (pthread_attr_t *)' extern
| |-ParmVarDecl 0x562389b3dc58 <col:34, col:50> col:50 __attr 'pthread_attr_t *'
| |-NoThrowAttr 0x562389b3ddb8 <line:397:22>
| `-NonNullAttr 0x562389b3de10 <col:63, col:77> 1
|-FunctionDecl 0x562389b3e038 <line:398:1, line:400:82> line:398:12 pthread_attr_getdetachstate 'int (const pthread_attr_t *, int *)' extern
| |-ParmVarDecl 0x562389b3de58 <col:41, col:63> col:63 __attr 'const pthread_attr_t *'
| |-ParmVarDecl 0x562389b3ded8 <line:399:6, col:11> col:11 __detachstate 'int *'
| |-NoThrowAttr 0x562389b3e0e8 <line:400:22>
| `-NonNullAttr 0x562389b3e140 <col:63, col:80> 1 2
|-FunctionDecl 0x562389b3e348 <line:401:1, line:403:79> line:401:12 pthread_attr_setdetachstate 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x562389b3e188 <col:41, col:57> col:57 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x562389b3e208 <line:402:6, col:10> col:10 __detachstate 'int'
| |-NoThrowAttr 0x562389b3e3f8 <line:403:22>
| `-NonNullAttr 0x562389b3e450 <col:63, col:77> 1
|-FunctionDecl 0x562389b3e6a8 <line:404:1, line:406:82> line:404:12 pthread_attr_getguardsize 'int (const pthread_attr_t *, size_t *)' extern
| |-ParmVarDecl 0x562389b3e498 <col:39, col:61> col:61 __attr 'const pthread_attr_t *'
| |-ParmVarDecl 0x562389b3e540 <line:405:11, col:19> col:19 __guardsize 'size_t *'
| |-NoThrowAttr 0x562389b3e758 <line:406:22>
| `-NonNullAttr 0x562389b3e7b0 <col:63, col:80> 1 2
|-FunctionDecl 0x562389b3f9e8 <line:407:1, line:409:79> line:407:12 pthread_attr_setguardsize 'int (pthread_attr_t *, size_t)' extern
| |-ParmVarDecl 0x562389b3e7f8 <col:39, col:55> col:55 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x562389b3e870 <line:408:11, col:18> col:18 __guardsize 'size_t':'unsigned long'
| |-NoThrowAttr 0x562389b3fa98 <line:409:22>
| `-NonNullAttr 0x562389b3faf0 <col:63, col:77> 1
|-FunctionDecl 0x562389b3fd28 <line:410:1, line:412:82> line:410:12 pthread_attr_getschedparam 'int (const pthread_attr_t *restrict, struct sched_param *restrict)' extern
| |-ParmVarDecl 0x562389b3fb38 <col:40, col:73> col:73 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x562389b3fbc8 <line:411:12, col:43> col:43 __param 'struct sched_param *restrict'
| |-NoThrowAttr 0x562389b3fdd8 <line:412:22>
| `-NonNullAttr 0x562389b3fe30 <col:63, col:80> 1 2
|-FunctionDecl 0x562389b40068 <line:413:1, line:415:97> line:413:12 pthread_attr_setschedparam 'int (pthread_attr_t *restrict, const struct sched_param *restrict)' extern
| |-ParmVarDecl 0x562389b3fe78 <col:40, col:67> col:67 __attr 'pthread_attr_t *restrict'
| |-ParmVarDecl 0x562389b3ff08 <line:414:12, line:415:12> col:12 __param 'const struct sched_param *restrict'
| |-NoThrowAttr 0x562389b40118 <col:37>
| `-NonNullAttr 0x562389b40170 <col:78, col:95> 1 2
|-FunctionDecl 0x562389b40358 <line:416:1, line:418:82> line:416:12 pthread_attr_getschedpolicy 'int (const pthread_attr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x562389b401b8 <col:41, line:417:6> col:6 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x562389b40238 <col:14, col:30> col:30 __policy 'int *restrict'
| |-NoThrowAttr 0x562389b40408 <line:418:22>
| `-NonNullAttr 0x562389b40460 <col:63, col:80> 1 2
|-FunctionDecl 0x562389b405e8 <line:419:1, line:420:79> line:419:12 pthread_attr_setschedpolicy 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x562389b404a8 <col:41, col:57> col:57 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x562389b40528 <col:65, col:69> col:69 __policy 'int'
| |-NoThrowAttr 0x562389b40698 <line:420:22>
| `-NonNullAttr 0x562389b406f0 <col:63, col:77> 1
|-FunctionDecl 0x562389b40898 <line:421:1, line:423:82> line:421:12 pthread_attr_getinheritsched 'int (const pthread_attr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x562389b40738 <col:42, line:422:7> col:7 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x562389b407b8 <col:15, col:31> col:31 __inherit 'int *restrict'
| |-NoThrowAttr 0x562389b40948 <line:423:22>
| `-NonNullAttr 0x562389b409c0 <col:63, col:80> 1 2
|-FunctionDecl 0x562389b40b48 <line:424:1, line:426:79> line:424:12 pthread_attr_setinheritsched 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x562389b40a08 <col:42, col:58> col:58 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x562389b40a88 <line:425:7, col:11> col:11 __inherit 'int'
| |-NoThrowAttr 0x562389b40bf8 <line:426:22>
| `-NonNullAttr 0x562389b40c50 <col:63, col:77> 1
|-FunctionDecl 0x562389b40df8 <line:427:1, line:429:82> line:427:12 pthread_attr_getscope 'int (const pthread_attr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x562389b40c98 <col:35, col:68> col:68 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x562389b40d18 <line:428:7, col:23> col:23 __scope 'int *restrict'
| |-NoThrowAttr 0x562389b40ea8 <line:429:22>
| `-NonNullAttr 0x562389b40f00 <col:63, col:80> 1 2
|-FunctionDecl 0x562389b41088 <line:430:1, line:431:79> line:430:12 pthread_attr_setscope 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x562389b40f48 <col:35, col:51> col:51 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x562389b40fc8 <col:59, col:63> col:63 __scope 'int'
| |-NoThrowAttr 0x562389b41138 <line:431:22>
| `-NonNullAttr 0x562389b41190 <col:63, col:77> 1
|-FunctionDecl 0x562389b413b8 <line:432:1, line:434:115> line:432:12 pthread_attr_getstackaddr 'int (const pthread_attr_t *restrict, void **restrict)' extern
| |-ParmVarDecl 0x562389b411d8 <col:39, line:433:11> col:11 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x562389b41258 <col:19, col:37> col:37 __stackaddr 'void **restrict'
| |-NoThrowAttr 0x562389b41468 <line:434:22>
| |-NonNullAttr 0x562389b414c0 <col:63, col:80> 1 2
| `-DeprecatedAttr 0x562389b414f8 <col:100> "" ""
|-FunctionDecl 0x562389b41708 <line:435:1, line:437:112> line:435:12 pthread_attr_setstackaddr 'int (pthread_attr_t *, void *)' extern
| |-ParmVarDecl 0x562389b41548 <col:39, col:55> col:55 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x562389b415c8 <line:436:11, col:17> col:17 __stackaddr 'void *'
| |-NoThrowAttr 0x562389b417b8 <line:437:22>
| |-NonNullAttr 0x562389b41810 <col:63, col:77> 1
| `-DeprecatedAttr 0x562389b41848 <col:97> "" ""
|-FunctionDecl 0x562389b41a48 <line:438:1, line:440:82> line:438:12 pthread_attr_getstacksize 'int (const pthread_attr_t *restrict, size_t *restrict)' extern
| |-ParmVarDecl 0x562389b41898 <col:39, line:439:11> col:11 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x562389b41910 <col:19, col:38> col:38 __stacksize 'size_t *restrict'
| |-NoThrowAttr 0x562389b41af8 <line:440:22>
| `-NonNullAttr 0x562389b41b50 <col:63, col:80> 1 2
|-FunctionDecl 0x562389b41cd0 <line:441:1, line:443:79> line:441:12 pthread_attr_setstacksize 'int (pthread_attr_t *, size_t)' extern
| |-ParmVarDecl 0x562389b41b98 <col:39, col:55> col:55 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x562389b41c10 <line:442:11, col:18> col:18 __stacksize 'size_t':'unsigned long'
| |-NoThrowAttr 0x562389b41d80 <line:443:22>
| `-NonNullAttr 0x562389b41dd8 <col:63, col:77> 1
|-FunctionDecl 0x562389b420c8 <line:444:1, line:447:85> line:444:12 pthread_attr_getstack 'int (const pthread_attr_t *restrict, void **restrict, size_t *restrict)' extern
| |-ParmVarDecl 0x562389b41e28 <col:35, col:68> col:68 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x562389b41ea8 <line:445:7, col:25> col:25 __stackaddr 'void **restrict'
| |-ParmVarDecl 0x562389b41f20 <line:446:7, col:26> col:26 __stacksize 'size_t *restrict'
| |-NoThrowAttr 0x562389b42180 <line:447:22>
| `-NonNullAttr 0x562389b421d8 <col:63, col:83> 1 2 3
|-FunctionDecl 0x562389b42488 <line:448:1, line:449:100> line:448:12 pthread_attr_setstack 'int (pthread_attr_t *, void *, size_t)' extern
| |-ParmVarDecl 0x562389b42230 <col:35, col:51> col:51 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x562389b422b0 <col:59, col:65> col:65 __stackaddr 'void *'
| |-ParmVarDecl 0x562389b42328 <line:449:7, col:14> col:14 __stacksize 'size_t':'unsigned long'
| |-NoThrowAttr 0x562389b42540 <col:43>
| `-NonNullAttr 0x562389b42598 <col:84, col:98> 1
|-FunctionDecl 0x562389b42858 <line:450:1, line:452:79> line:450:12 pthread_setschedparam 'int (pthread_t, int, const struct sched_param *)' extern
| |-ParmVarDecl 0x562389b425e8 <col:35, col:45> col:45 __target_thread 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x562389b42668 <col:62, col:66> col:66 __policy 'int'
| |-ParmVarDecl 0x562389b426f8 <line:451:7, col:33> col:33 __param 'const struct sched_param *'
| |-NoThrowAttr 0x562389b42910 <line:452:22>
| `-NonNullAttr 0x562389b42968 <col:63, col:77> 3
|-FunctionDecl 0x562389b42c78 <line:453:1, line:456:82> line:453:12 pthread_getschedparam 'int (pthread_t, int *restrict, struct sched_param *restrict)' extern
| |-ParmVarDecl 0x562389b429e0 <col:35, col:45> col:45 __target_thread 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x562389b42a60 <line:454:7, col:23> col:23 __policy 'int *restrict'
| |-ParmVarDecl 0x562389b42af0 <line:455:7, col:38> col:38 __param 'struct sched_param *restrict'
| |-NoThrowAttr 0x562389b42d30 <line:456:22>
| `-NonNullAttr 0x562389b42d88 <col:63, col:80> 2 3
|-FunctionDecl 0x562389b42f78 <line:457:1, line:458:45> line:457:12 pthread_setschedprio 'int (pthread_t, int)' extern
| |-ParmVarDecl 0x562389b42dd8 <col:34, col:44> col:44 __target_thread 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x562389b42e58 <col:61, col:65> col:65 __prio 'int'
| `-NoThrowAttr 0x562389b43028 <line:458:22>
|-FunctionDecl 0x562389b433f8 <line:459:1, line:460:71> line:459:12 pthread_once 'int (pthread_once_t *, void (*)(void))' extern
| |-ParmVarDecl 0x562389b430f0 <col:26, col:42> col:42 __once_control 'pthread_once_t *'
| |-ParmVarDecl 0x562389b43290 <line:460:5, col:33> col:12 __init_routine 'void (*)(void)'
| `-NonNullAttr 0x562389b434a8 <col:52, col:69> 1 2
|-FunctionDecl 0x562389b43650 <line:461:1, col:64> col:12 pthread_setcancelstate 'int (int, int *)' extern
| |-ParmVarDecl 0x562389b43530 <col:36, col:40> col:40 __state 'int'
| `-ParmVarDecl 0x562389b435b0 <col:49, col:54> col:54 __oldstate 'int *'
|-FunctionDecl 0x562389b43838 <line:462:1, col:61> col:12 pthread_setcanceltype 'int (int, int *)' extern
| |-ParmVarDecl 0x562389b43718 <col:35, col:39> col:39 __type 'int'
| `-ParmVarDecl 0x562389b43798 <col:47, col:52> col:52 __oldtype 'int *'
|-FunctionDecl 0x562389b439f0 <line:463:1, col:42> col:12 pthread_cancel 'int (pthread_t)' extern
| `-ParmVarDecl 0x562389b438f8 <col:28, col:38> col:38 __th 'pthread_t':'unsigned long'
|-FunctionDecl 0x562389b43b30 <line:464:1, col:37> col:13 pthread_testcancel 'void (void)' extern
|-RecordDecl 0x562389b43bd0 <line:465:9, line:473:1> line:465:9 struct definition
| |-RecordDecl 0x562389b43c78 <line:467:3, line:471:3> line:467:3 struct definition
| | |-FieldDecl 0x562389b43d68 <line:469:5, col:15> col:15 __cancel_jmp_buf '__jmp_buf':'long [8]'
| | `-FieldDecl 0x562389b43dd0 <line:470:5, col:9> col:9 __mask_was_saved 'int'
| |-FieldDecl 0x562389b43fa0 <line:467:3, line:471:23> col:5 __cancel_jmp_buf 'struct (anonymous struct at ./split_2/podwr001_pso.opt_false-unreach-call.i:467:3) [1]'
| `-FieldDecl 0x562389b44098 <line:472:3, col:16> col:9 __pad 'void *[4]'
|-TypedefDecl 0x562389b44150 <line:465:1, line:473:3> col:3 referenced __pthread_unwind_buf_t 'struct __pthread_unwind_buf_t':'__pthread_unwind_buf_t'
| |-ElaboratedType 0x562389b440f0 'struct __pthread_unwind_buf_t' sugar
| | `-RecordType 0x562389b43c50 '__pthread_unwind_buf_t'
| |   `-Record 0x562389b43bd0 ''
| `-AlignedAttr 0x562389b441a8 <col:42> aligned
|   `-<<<NULL>>>
|-RecordDecl 0x562389b44220 <line:474:1, line:480:1> line:474:8 struct __pthread_cleanup_frame definition
| |-FieldDecl 0x562389b44380 <line:476:3, col:35> col:10 __cancel_routine 'void (*)(void *)'
| |-FieldDecl 0x562389b443e8 <line:477:3, col:9> col:9 __cancel_arg 'void *'
| |-FieldDecl 0x562389b44450 <line:478:3, col:7> col:7 __do_it 'int'
| `-FieldDecl 0x562389b444b8 <line:479:3, col:7> col:7 __cancel_type 'int'
|-FunctionDecl 0x562389b446c0 <line:481:1, col:69> col:13 __pthread_register_cancel 'void (__pthread_unwind_buf_t *)' extern
| `-ParmVarDecl 0x562389b445b0 <col:40, col:64> col:64 __buf '__pthread_unwind_buf_t *'
|-FunctionDecl 0x562389b44808 <line:483:1, col:71> col:13 __pthread_unregister_cancel 'void (__pthread_unwind_buf_t *)' extern
| `-ParmVarDecl 0x562389b44778 <col:42, col:66> col:66 __buf '__pthread_unwind_buf_t *'
|-FunctionDecl 0x562389b44a00 <line:485:1, line:487:31> line:485:13 __pthread_unwind_next 'void (__pthread_unwind_buf_t *) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x562389b448c0 <col:36, col:60> col:60 __buf '__pthread_unwind_buf_t *'
| `-WeakAttr 0x562389b44aa8 <line:487:22>
|-RecordDecl 0x562389b44b00 <line:489:1, col:8> col:8 struct __jmp_buf_tag
|-FunctionDecl 0x562389b44e18 <line:490:1, col:98> col:12 __sigsetjmp 'int (struct __jmp_buf_tag *, int)' extern
| |-ParmVarDecl 0x562389b44c78 <col:25, col:47> col:47 __env 'struct __jmp_buf_tag *'
| |-ParmVarDecl 0x562389b44cf8 <col:54, col:58> col:58 __savemask 'int'
| |-NoThrowAttr 0x562389b44ec8 <col:86>
| `-ReturnsTwiceAttr 0x562389b44f20 <col:12> Implicit
|-FunctionDecl 0x562389b45248 <line:491:1, line:493:79> line:491:12 pthread_mutex_init 'int (pthread_mutex_t *, const pthread_mutexattr_t *)' extern
| |-ParmVarDecl 0x562389b44ff0 <col:32, col:49> col:49 __mutex 'pthread_mutex_t *'
| |-ParmVarDecl 0x562389b45100 <line:492:11, col:38> col:38 __mutexattr 'const pthread_mutexattr_t *'
| |-NoThrowAttr 0x562389b452f8 <line:493:22>
| `-NonNullAttr 0x562389b45350 <col:63, col:77> 1
|-FunctionDecl 0x562389b454c8 <line:494:1, line:495:79> line:494:12 pthread_mutex_destroy 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x562389b45398 <col:35, col:52> col:52 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x562389b45570 <line:495:22>
| `-NonNullAttr 0x562389b455c8 <col:63, col:77> 1
|-FunctionDecl 0x562389b456d0 <line:496:1, line:497:68> line:496:12 pthread_mutex_trylock 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x562389b45618 <col:35, col:52> col:52 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x562389b45778 <line:497:22>
| `-NonNullAttr 0x562389b457d0 <col:52, col:66> 1
|-FunctionDecl 0x562389b458d0 <line:498:1, line:499:68> line:498:12 pthread_mutex_lock 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x562389b45818 <col:32, col:49> col:49 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x562389b45978 <line:499:22>
| `-NonNullAttr 0x562389b459d0 <col:52, col:66> 1
|-FunctionDecl 0x562389b46c28 <line:500:1, line:502:85> line:500:12 pthread_mutex_timedlock 'int (pthread_mutex_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x562389b46a38 <col:37, col:65> col:65 __mutex 'pthread_mutex_t *restrict'
| |-ParmVarDecl 0x562389b46ac8 <line:501:9, line:502:9> col:9 __abstime 'const struct timespec *restrict'
| |-NoThrowAttr 0x562389b46cd8 <col:36>
| `-NonNullAttr 0x562389b46d30 <col:66, col:83> 1 2
|-FunctionDecl 0x562389b46e30 <line:503:1, line:504:68> line:503:12 pthread_mutex_unlock 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x562389b46d78 <col:34, col:51> col:51 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x562389b46ed8 <line:504:22>
| `-NonNullAttr 0x562389b46f30 <col:52, col:66> 1
|-FunctionDecl 0x562389b471c8 <line:505:1, line:508:82> line:505:12 pthread_mutex_getprioceiling 'int (const pthread_mutex_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x562389b46fe0 <col:42, line:506:18> col:18 __mutex 'const pthread_mutex_t *restrict'
| |-ParmVarDecl 0x562389b47060 <line:507:7, col:23> col:23 __prioceiling 'int *restrict'
| |-NoThrowAttr 0x562389b47278 <line:508:22>
| `-NonNullAttr 0x562389b472d0 <col:63, col:80> 1 2
|-FunctionDecl 0x562389b47598 <line:509:1, line:512:82> line:509:12 pthread_mutex_setprioceiling 'int (pthread_mutex_t *restrict, int, int *restrict)' extern
| |-ParmVarDecl 0x562389b47318 <col:42, col:70> col:70 __mutex 'pthread_mutex_t *restrict'
| |-ParmVarDecl 0x562389b47398 <line:510:7, col:11> col:11 __prioceiling 'int'
| |-ParmVarDecl 0x562389b47418 <line:511:7, col:23> col:23 __old_ceiling 'int *restrict'
| |-NoThrowAttr 0x562389b47650 <line:512:22>
| `-NonNullAttr 0x562389b476a8 <col:63, col:80> 1 3
|-FunctionDecl 0x562389b477b0 <line:513:1, line:514:79> line:513:12 pthread_mutex_consistent 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x562389b476f8 <col:38, col:55> col:55 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x562389b47858 <line:514:22>
| `-NonNullAttr 0x562389b478b0 <col:63, col:77> 1
|-FunctionDecl 0x562389b47ad8 <line:515:1, line:516:79> line:515:12 pthread_mutexattr_init 'int (pthread_mutexattr_t *)' extern
| |-ParmVarDecl 0x562389b47960 <col:36, col:57> col:57 __attr 'pthread_mutexattr_t *'
| |-NoThrowAttr 0x562389b47b80 <line:516:22>
| `-NonNullAttr 0x562389b47bd8 <col:63, col:77> 1
|-FunctionDecl 0x562389b47ce0 <line:517:1, line:518:79> line:517:12 pthread_mutexattr_destroy 'int (pthread_mutexattr_t *)' extern
| |-ParmVarDecl 0x562389b47c28 <col:39, col:60> col:60 __attr 'pthread_mutexattr_t *'
| |-NoThrowAttr 0x562389b47d88 <line:518:22>
| `-NonNullAttr 0x562389b47de0 <col:63, col:77> 1
|-FunctionDecl 0x562389b48008 <line:519:1, line:522:82> line:519:12 pthread_mutexattr_getpshared 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x562389b47e28 <col:42, line:520:18> col:18 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x562389b47ea8 <line:521:7, col:23> col:23 __pshared 'int *restrict'
| |-NoThrowAttr 0x562389b480b8 <line:522:22>
| `-NonNullAttr 0x562389b48110 <col:63, col:80> 1 2
|-FunctionDecl 0x562389b48318 <line:523:1, line:525:79> line:523:12 pthread_mutexattr_setpshared 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x562389b48158 <col:42, col:63> col:63 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x562389b481d8 <line:524:7, col:11> col:11 __pshared 'int'
| |-NoThrowAttr 0x562389b483c8 <line:525:22>
| `-NonNullAttr 0x562389b48420 <col:63, col:77> 1
|-FunctionDecl 0x562389b485c8 <line:526:1, line:528:82> line:526:12 pthread_mutexattr_gettype 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x562389b48468 <col:39, line:527:11> col:11 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x562389b484e8 <col:19, col:35> col:35 __kind 'int *restrict'
| |-NoThrowAttr 0x562389b48678 <line:528:22>
| `-NonNullAttr 0x562389b486d0 <col:63, col:80> 1 2
|-FunctionDecl 0x562389b48858 <line:529:1, line:530:79> line:529:12 pthread_mutexattr_settype 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x562389b48718 <col:39, col:60> col:60 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x562389b48798 <col:68, col:72> col:72 __kind 'int'
| |-NoThrowAttr 0x562389b48908 <line:530:22>
| `-NonNullAttr 0x562389b48960 <col:63, col:77> 1
|-FunctionDecl 0x562389b48b20 <line:531:1, line:534:82> line:531:12 pthread_mutexattr_getprotocol 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x562389b489a8 <col:43, line:532:19> col:19 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x562389b48a40 <line:533:8, col:24> col:24 __protocol 'int *restrict'
| |-NoThrowAttr 0x562389b48bd0 <line:534:22>
| `-NonNullAttr 0x562389b48c28 <col:63, col:80> 1 2
|-FunctionDecl 0x562389b48db8 <line:535:1, line:537:79> line:535:12 pthread_mutexattr_setprotocol 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x562389b48c78 <col:43, col:64> col:64 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x562389b48cf8 <line:536:8, col:12> col:12 __protocol 'int'
| |-NoThrowAttr 0x562389b48e68 <line:537:22>
| `-NonNullAttr 0x562389b48ec0 <col:63, col:77> 1
|-FunctionDecl 0x562389b49068 <line:538:1, line:541:82> line:538:12 pthread_mutexattr_getprioceiling 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x562389b48f08 <col:46, line:539:22> col:22 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x562389b48f88 <line:540:11, col:27> col:27 __prioceiling 'int *restrict'
| |-NoThrowAttr 0x562389b49118 <line:541:22>
| `-NonNullAttr 0x562389b49170 <col:63, col:80> 1 2
|-FunctionDecl 0x562389b492f8 <line:542:1, line:544:79> line:542:12 pthread_mutexattr_setprioceiling 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x562389b491b8 <col:46, col:67> col:67 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x562389b49238 <line:543:11, col:15> col:15 __prioceiling 'int'
| |-NoThrowAttr 0x562389b493a8 <line:544:22>
| `-NonNullAttr 0x562389b49400 <col:63, col:77> 1
|-FunctionDecl 0x562389b495e8 <line:545:1, line:547:82> line:545:12 pthread_mutexattr_getrobust 'int (const pthread_mutexattr_t *, int *)' extern
| |-ParmVarDecl 0x562389b49448 <col:41, col:68> col:68 __attr 'const pthread_mutexattr_t *'
| |-ParmVarDecl 0x562389b494c8 <line:546:6, col:11> col:11 __robustness 'int *'
| |-NoThrowAttr 0x562389b49698 <line:547:22>
| `-NonNullAttr 0x562389b496f0 <col:63, col:80> 1 2
|-FunctionDecl 0x562389b49878 <line:548:1, line:550:79> line:548:12 pthread_mutexattr_setrobust 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x562389b49738 <col:41, col:62> col:62 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x562389b497b8 <line:549:6, col:10> col:10 __robustness 'int'
| |-NoThrowAttr 0x562389b49928 <line:550:22>
| `-NonNullAttr 0x562389b49980 <col:63, col:77> 1
|-FunctionDecl 0x562389b4acf8 <line:551:1, line:553:86> line:551:12 pthread_rwlock_init 'int (pthread_rwlock_t *restrict, const pthread_rwlockattr_t *restrict)' extern
| |-ParmVarDecl 0x562389b4aaa0 <col:33, col:62> col:62 __rwlock 'pthread_rwlock_t *restrict'
| |-ParmVarDecl 0x562389b4abb0 <line:552:5, line:553:5> col:5 __attr 'const pthread_rwlockattr_t *restrict'
| |-NoThrowAttr 0x562389b4ada8 <col:29>
| `-NonNullAttr 0x562389b4ae00 <col:70, col:84> 1
|-FunctionDecl 0x562389b4af78 <line:554:1, line:555:79> line:554:12 pthread_rwlock_destroy 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x562389b4ae48 <col:36, col:54> col:54 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x562389b4b020 <line:555:22>
| `-NonNullAttr 0x562389b4b078 <col:63, col:77> 1
|-FunctionDecl 0x562389b4b180 <line:556:1, line:557:68> line:556:12 pthread_rwlock_rdlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x562389b4b0c8 <col:35, col:53> col:53 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x562389b4b228 <line:557:22>
| `-NonNullAttr 0x562389b4b280 <col:52, col:66> 1
|-FunctionDecl 0x562389b4b380 <line:558:1, line:559:65> line:558:12 pthread_rwlock_tryrdlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x562389b4b2c8 <col:38, col:56> col:56 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x562389b4b428 <line:559:19>
| `-NonNullAttr 0x562389b4b480 <col:49, col:63> 1
|-FunctionDecl 0x562389b4b6b8 <line:560:1, line:562:88> line:560:12 pthread_rwlock_timedrdlock 'int (pthread_rwlock_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x562389b4b4c8 <col:40, col:69> col:69 __rwlock 'pthread_rwlock_t *restrict'
| |-ParmVarDecl 0x562389b4b558 <line:561:12, line:562:12> col:12 __abstime 'const struct timespec *restrict'
| |-NoThrowAttr 0x562389b4b768 <col:39>
| `-NonNullAttr 0x562389b4b7c0 <col:69, col:86> 1 2
|-FunctionDecl 0x562389b4b8c0 <line:563:1, line:564:68> line:563:12 pthread_rwlock_wrlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x562389b4b808 <col:35, col:53> col:53 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x562389b4b968 <line:564:22>
| `-NonNullAttr 0x562389b4b9c0 <col:52, col:66> 1
|-FunctionDecl 0x562389b4bb28 <line:565:1, line:566:68> line:565:12 pthread_rwlock_trywrlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x562389b4ba70 <col:38, col:56> col:56 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x562389b4bbd0 <line:566:22>
| `-NonNullAttr 0x562389b4bc28 <col:52, col:66> 1
|-FunctionDecl 0x562389b4bde8 <line:567:1, line:569:88> line:567:12 pthread_rwlock_timedwrlock 'int (pthread_rwlock_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x562389b4bc78 <col:40, col:69> col:69 __rwlock 'pthread_rwlock_t *restrict'
| |-ParmVarDecl 0x562389b4bd08 <line:568:12, line:569:12> col:12 __abstime 'const struct timespec *restrict'
| |-NoThrowAttr 0x562389b4be98 <col:39>
| `-NonNullAttr 0x562389b4bef0 <col:69, col:86> 1 2
|-FunctionDecl 0x562389b4bff0 <line:570:1, line:571:68> line:570:12 pthread_rwlock_unlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x562389b4bf38 <col:35, col:53> col:53 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x562389b4c098 <line:571:22>
| `-NonNullAttr 0x562389b4c0f0 <col:52, col:66> 1
|-FunctionDecl 0x562389b4c2d8 <line:572:1, line:573:79> line:572:12 pthread_rwlockattr_init 'int (pthread_rwlockattr_t *)' extern
| |-ParmVarDecl 0x562389b4c1a0 <col:37, col:59> col:59 __attr 'pthread_rwlockattr_t *'
| |-NoThrowAttr 0x562389b4c380 <line:573:22>
| `-NonNullAttr 0x562389b4c3d8 <col:63, col:77> 1
|-FunctionDecl 0x562389b4c4e0 <line:574:1, line:575:79> line:574:12 pthread_rwlockattr_destroy 'int (pthread_rwlockattr_t *)' extern
| |-ParmVarDecl 0x562389b4c428 <col:40, col:62> col:62 __attr 'pthread_rwlockattr_t *'
| |-NoThrowAttr 0x562389b4c588 <line:575:22>
| `-NonNullAttr 0x562389b4c5e0 <col:63, col:77> 1
|-FunctionDecl 0x562389b4c808 <line:576:1, line:579:82> line:576:12 pthread_rwlockattr_getpshared 'int (const pthread_rwlockattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x562389b4c628 <col:43, line:577:19> col:19 __attr 'const pthread_rwlockattr_t *restrict'
| |-ParmVarDecl 0x562389b4c6a8 <line:578:8, col:24> col:24 __pshared 'int *restrict'
| |-NoThrowAttr 0x562389b4c8b8 <line:579:22>
| `-NonNullAttr 0x562389b4c910 <col:63, col:80> 1 2
|-FunctionDecl 0x562389b4cb38 <line:580:1, line:582:79> line:580:12 pthread_rwlockattr_setpshared 'int (pthread_rwlockattr_t *, int)' extern
| |-ParmVarDecl 0x562389b4c958 <col:43, col:65> col:65 __attr 'pthread_rwlockattr_t *'
| |-ParmVarDecl 0x562389b4c9d8 <line:581:8, col:12> col:12 __pshared 'int'
| |-NoThrowAttr 0x562389b4cbe8 <line:582:22>
| `-NonNullAttr 0x562389b4cc40 <col:63, col:77> 1
|-FunctionDecl 0x562389b4cde8 <line:583:1, line:586:82> line:583:12 pthread_rwlockattr_getkind_np 'int (const pthread_rwlockattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x562389b4cc88 <col:43, line:584:19> col:19 __attr 'const pthread_rwlockattr_t *restrict'
| |-ParmVarDecl 0x562389b4cd08 <line:585:8, col:24> col:24 __pref 'int *restrict'
| |-NoThrowAttr 0x562389b4ce98 <line:586:22>
| `-NonNullAttr 0x562389b4cef0 <col:63, col:80> 1 2
|-FunctionDecl 0x562389b4d078 <line:587:1, line:588:93> line:587:12 pthread_rwlockattr_setkind_np 'int (pthread_rwlockattr_t *, int)' extern
| |-ParmVarDecl 0x562389b4cf38 <col:43, col:65> col:65 __attr 'pthread_rwlockattr_t *'
| |-ParmVarDecl 0x562389b4cfb8 <line:588:8, col:12> col:12 __pref 'int'
| |-NoThrowAttr 0x562389b4d128 <col:36>
| `-NonNullAttr 0x562389b4d180 <col:77, col:91> 1
|-FunctionDecl 0x562389b4d4b8 <line:589:1, line:591:79> line:589:12 pthread_cond_init 'int (pthread_cond_t *restrict, const pthread_condattr_t *restrict)' extern
| |-ParmVarDecl 0x562389b4d260 <col:31, col:58> col:58 __cond 'pthread_cond_t *restrict'
| |-ParmVarDecl 0x562389b4d370 <line:590:10, col:47> col:47 __cond_attr 'const pthread_condattr_t *restrict'
| |-NoThrowAttr 0x562389b4d568 <line:591:22>
| `-NonNullAttr 0x562389b4d5c0 <col:63, col:77> 1
|-FunctionDecl 0x562389b4d738 <line:592:1, line:593:79> line:592:12 pthread_cond_destroy 'int (pthread_cond_t *)' extern
| |-ParmVarDecl 0x562389b4d608 <col:34, col:50> col:50 __cond 'pthread_cond_t *'
| |-NoThrowAttr 0x562389b4d7e0 <line:593:22>
| `-NonNullAttr 0x562389b4d838 <col:63, col:77> 1
|-FunctionDecl 0x562389b4d940 <line:594:1, line:595:68> line:594:12 pthread_cond_signal 'int (pthread_cond_t *)' extern
| |-ParmVarDecl 0x562389b4d888 <col:33, col:49> col:49 __cond 'pthread_cond_t *'
| |-NoThrowAttr 0x562389b4d9e8 <line:595:22>
| `-NonNullAttr 0x562389b4da40 <col:52, col:66> 1
|-FunctionDecl 0x562389b4db58 <line:596:1, line:597:68> line:596:12 pthread_cond_broadcast 'int (pthread_cond_t *)' extern
| |-ParmVarDecl 0x562389b4daa0 <col:36, col:52> col:52 __cond 'pthread_cond_t *'
| |-NoThrowAttr 0x562389b4dc00 <line:597:22>
| `-NonNullAttr 0x562389b4dc58 <col:52, col:66> 1
|-FunctionDecl 0x562389b4de88 <line:598:1, line:600:41> line:598:12 pthread_cond_wait 'int (pthread_cond_t *restrict, pthread_mutex_t *restrict)' extern
| |-ParmVarDecl 0x562389b4dca8 <col:31, col:58> col:58 __cond 'pthread_cond_t *restrict'
| |-ParmVarDecl 0x562389b4dd20 <line:599:10, col:38> col:38 __mutex 'pthread_mutex_t *restrict'
| `-NonNullAttr 0x562389b4df38 <line:600:22, col:39> 1 2
|-FunctionDecl 0x562389b4e268 <line:601:1, line:604:44> line:601:12 pthread_cond_timedwait 'int (pthread_cond_t *restrict, pthread_mutex_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x562389b4dfb8 <col:36, col:63> col:63 __cond 'pthread_cond_t *restrict'
| |-ParmVarDecl 0x562389b4e030 <line:602:8, col:36> col:36 __mutex 'pthread_mutex_t *restrict'
| |-ParmVarDecl 0x562389b4e0c0 <line:603:8, col:42> col:42 __abstime 'const struct timespec *restrict'
| `-NonNullAttr 0x562389b4e320 <line:604:22, col:42> 1 2 3
|-FunctionDecl 0x562389b4e538 <line:605:1, line:606:79> line:605:12 pthread_condattr_init 'int (pthread_condattr_t *)' extern
| |-ParmVarDecl 0x562389b4e400 <col:35, col:55> col:55 __attr 'pthread_condattr_t *'
| |-NoThrowAttr 0x562389b4e5e0 <line:606:22>
| `-NonNullAttr 0x562389b4e638 <col:63, col:77> 1
|-FunctionDecl 0x562389b4e740 <line:607:1, line:608:79> line:607:12 pthread_condattr_destroy 'int (pthread_condattr_t *)' extern
| |-ParmVarDecl 0x562389b4e688 <col:38, col:58> col:58 __attr 'pthread_condattr_t *'
| |-NoThrowAttr 0x562389b4e7e8 <line:608:22>
| `-NonNullAttr 0x562389b4e840 <col:63, col:77> 1
|-FunctionDecl 0x562389b4eaa0 <line:609:1, line:612:82> line:609:12 pthread_condattr_getpshared 'int (const pthread_condattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x562389b4e888 <col:41, line:610:17> col:17 __attr 'const pthread_condattr_t *restrict'
| |-ParmVarDecl 0x562389b4e908 <line:611:6, col:22> col:22 __pshared 'int *restrict'
| |-NoThrowAttr 0x562389b4eb50 <line:612:22>
| `-NonNullAttr 0x562389b4eba8 <col:63, col:80> 1 2
|-FunctionDecl 0x562389b4edb8 <line:613:1, line:614:94> line:613:12 pthread_condattr_setpshared 'int (pthread_condattr_t *, int)' extern
| |-ParmVarDecl 0x562389b4ebf8 <col:41, col:61> col:61 __attr 'pthread_condattr_t *'
| |-ParmVarDecl 0x562389b4ec78 <line:614:6, col:10> col:10 __pshared 'int'
| |-NoThrowAttr 0x562389b4ee68 <col:37>
| `-NonNullAttr 0x562389b4eec0 <col:78, col:92> 1
|-FunctionDecl 0x562389b4f0d8 <line:615:1, line:618:82> line:615:12 pthread_condattr_getclock 'int (const pthread_condattr_t *restrict, __clockid_t *restrict)' extern
| |-ParmVarDecl 0x562389b4ef08 <col:39, line:616:22> col:22 __attr 'const pthread_condattr_t *restrict'
| |-ParmVarDecl 0x562389b4efb0 <line:617:11, col:35> col:35 __clock_id '__clockid_t *restrict'
| |-NoThrowAttr 0x562389b4f188 <line:618:22>
| `-NonNullAttr 0x562389b4f1e0 <col:63, col:80> 1 2
|-FunctionDecl 0x562389b4f3a8 <line:619:1, line:621:79> line:619:12 pthread_condattr_setclock 'int (pthread_condattr_t *, __clockid_t)' extern
| |-ParmVarDecl 0x562389b4f228 <col:39, col:59> col:59 __attr 'pthread_condattr_t *'
| |-ParmVarDecl 0x562389b4f2a0 <line:620:11, col:23> col:23 __clock_id '__clockid_t':'int'
| |-NoThrowAttr 0x562389b4f458 <line:621:22>
| `-NonNullAttr 0x562389b4f4b0 <col:63, col:77> 1
|-FunctionDecl 0x562389b4f758 <line:622:1, line:623:79> line:622:12 pthread_spin_init 'int (pthread_spinlock_t *, int)' extern
| |-ParmVarDecl 0x562389b4f590 <col:31, col:51> col:51 __lock 'pthread_spinlock_t *'
| |-ParmVarDecl 0x562389b4f610 <col:59, col:63> col:63 __pshared 'int'
| |-NoThrowAttr 0x562389b4f808 <line:623:22>
| `-NonNullAttr 0x562389b4f860 <col:63, col:77> 1
|-FunctionDecl 0x562389b4f9d8 <line:624:1, line:625:79> line:624:12 pthread_spin_destroy 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x562389b4f8a8 <col:34, col:54> col:54 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x562389b4fab0 <line:625:22>
| `-NonNullAttr 0x562389b4fb08 <col:63, col:77> 1
|-FunctionDecl 0x562389b4fc10 <line:626:1, line:627:68> line:626:12 pthread_spin_lock 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x562389b4fb58 <col:31, col:51> col:51 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x562389b4fcb8 <line:627:22>
| `-NonNullAttr 0x562389b4fd10 <col:52, col:66> 1
|-FunctionDecl 0x562389b4fe10 <line:628:1, line:629:68> line:628:12 pthread_spin_trylock 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x562389b4fd58 <col:34, col:54> col:54 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x562389b4feb8 <line:629:22>
| `-NonNullAttr 0x562389b4ff10 <col:52, col:66> 1
|-FunctionDecl 0x562389b50010 <line:630:1, line:631:68> line:630:12 pthread_spin_unlock 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x562389b4ff58 <col:33, col:53> col:53 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x562389b500b8 <line:631:22>
| `-NonNullAttr 0x562389b50110 <col:52, col:66> 1
|-FunctionDecl 0x562389b504e8 <line:632:1, line:635:79> line:632:12 pthread_barrier_init 'int (pthread_barrier_t *restrict, const pthread_barrierattr_t *restrict, unsigned int)' extern
| |-ParmVarDecl 0x562389b501f0 <col:34, col:64> col:64 __barrier 'pthread_barrier_t *restrict'
| |-ParmVarDecl 0x562389b50300 <line:633:6, line:634:6> col:6 __attr 'const pthread_barrierattr_t *restrict'
| |-ParmVarDecl 0x562389b50380 <col:14, col:27> col:27 __count 'unsigned int'
| |-NoThrowAttr 0x562389b505a0 <line:635:22>
| `-NonNullAttr 0x562389b505f8 <col:63, col:77> 1
|-FunctionDecl 0x562389b50778 <line:636:1, line:637:79> line:636:12 pthread_barrier_destroy 'int (pthread_barrier_t *)' extern
| |-ParmVarDecl 0x562389b50648 <col:37, col:56> col:56 __barrier 'pthread_barrier_t *'
| |-NoThrowAttr 0x562389b50820 <line:637:22>
| `-NonNullAttr 0x562389b50878 <col:63, col:77> 1
|-FunctionDecl 0x562389b50980 <line:638:1, line:639:68> line:638:12 pthread_barrier_wait 'int (pthread_barrier_t *)' extern
| |-ParmVarDecl 0x562389b508c8 <col:34, col:53> col:53 __barrier 'pthread_barrier_t *'
| |-NoThrowAttr 0x562389b50a28 <line:639:22>
| `-NonNullAttr 0x562389b50a80 <col:52, col:66> 1
|-FunctionDecl 0x562389b51c88 <line:640:1, line:641:79> line:640:12 pthread_barrierattr_init 'int (pthread_barrierattr_t *)' extern
| |-ParmVarDecl 0x562389b51b50 <col:38, col:61> col:61 __attr 'pthread_barrierattr_t *'
| |-NoThrowAttr 0x562389b51d30 <line:641:22>
| `-NonNullAttr 0x562389b51d88 <col:63, col:77> 1
|-FunctionDecl 0x562389b51e90 <line:642:1, line:643:79> line:642:12 pthread_barrierattr_destroy 'int (pthread_barrierattr_t *)' extern
| |-ParmVarDecl 0x562389b51dd8 <col:41, col:64> col:64 __attr 'pthread_barrierattr_t *'
| |-NoThrowAttr 0x562389b51f38 <line:643:22>
| `-NonNullAttr 0x562389b51f90 <col:63, col:77> 1
|-FunctionDecl 0x562389b521b8 <line:644:1, line:647:82> line:644:12 pthread_barrierattr_getpshared 'int (const pthread_barrierattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x562389b51fd8 <col:44, line:645:20> col:20 __attr 'const pthread_barrierattr_t *restrict'
| |-ParmVarDecl 0x562389b52058 <line:646:9, col:25> col:25 __pshared 'int *restrict'
| |-NoThrowAttr 0x562389b52268 <line:647:22>
| `-NonNullAttr 0x562389b522c0 <col:63, col:80> 1 2
|-FunctionDecl 0x562389b524c8 <line:648:1, line:650:79> line:648:12 pthread_barrierattr_setpshared 'int (pthread_barrierattr_t *, int)' extern
| |-ParmVarDecl 0x562389b52308 <col:44, col:67> col:67 __attr 'pthread_barrierattr_t *'
| |-ParmVarDecl 0x562389b52388 <line:649:9, col:13> col:13 __pshared 'int'
| |-NoThrowAttr 0x562389b52578 <line:650:22>
| `-NonNullAttr 0x562389b525d0 <col:63, col:77> 1
|-FunctionDecl 0x562389b52918 <line:651:1, line:653:79> line:651:12 pthread_key_create 'int (pthread_key_t *, void (*)(void *))' extern
| |-ParmVarDecl 0x562389b526b0 <col:32, col:47> col:47 __key 'pthread_key_t *'
| |-ParmVarDecl 0x562389b527d0 <line:652:11, col:43> col:18 __destr_function 'void (*)(void *)'
| |-NoThrowAttr 0x562389b529c8 <line:653:22>
| `-NonNullAttr 0x562389b52a20 <col:63, col:77> 1
|-FunctionDecl 0x562389b52b88 <line:654:1, col:92> col:12 pthread_key_delete 'int (pthread_key_t)' extern
| |-ParmVarDecl 0x562389b52a68 <col:32, col:46> col:46 __key 'pthread_key_t':'unsigned int'
| `-NoThrowAttr 0x562389b52c30 <col:69>
|-FunctionDecl 0x562389b52da8 <line:655:1, col:95> col:14 pthread_getspecific 'void *(pthread_key_t)' extern
| |-ParmVarDecl 0x562389b52c98 <col:35, col:49> col:49 __key 'pthread_key_t':'unsigned int'
| `-NoThrowAttr 0x562389b52e50 <col:72>
|-FunctionDecl 0x562389b53088 <line:656:1, line:657:67> line:656:12 pthread_setspecific 'int (pthread_key_t, const void *)' extern
| |-ParmVarDecl 0x562389b52eb8 <col:33, col:47> col:47 __key 'pthread_key_t':'unsigned int'
| |-ParmVarDecl 0x562389b52f68 <line:657:5, col:17> col:17 __pointer 'const void *'
| `-NoThrowAttr 0x562389b53138 <col:44>
|-FunctionDecl 0x562389b53358 <line:658:1, line:660:79> line:658:12 pthread_getcpuclockid 'int (pthread_t, __clockid_t *)' extern
| |-ParmVarDecl 0x562389b531a0 <col:35, col:45> col:45 __thread_id 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x562389b53218 <line:659:7, col:20> col:20 __clock_id '__clockid_t *'
| |-NoThrowAttr 0x562389b53408 <line:660:22>
| `-NonNullAttr 0x562389b53460 <col:63, col:77> 2
|-FunctionDecl 0x562389b538a8 <line:661:1, line:663:70> line:661:12 pthread_atfork 'int (void (*)(void), void (*)(void), void (*)(void))' extern
| |-ParmVarDecl 0x562389b53540 <col:28, col:51> col:35 __prepare 'void (*)(void)'
| |-ParmVarDecl 0x562389b53650 <line:662:7, col:29> col:14 __parent 'void (*)(void)'
| |-ParmVarDecl 0x562389b53760 <line:663:7, col:28> col:14 __child 'void (*)(void)'
| `-NoThrowAttr 0x562389b53960 <col:47>
|-FunctionDecl 0x562389b53af0 <line:665:1, col:20> col:8 used P0 'void *(void *)'
| `-ParmVarDecl 0x562389b539d0 <col:11, col:17> col:17 arg 'void *'
|-FunctionDecl 0x562389b53c48 <line:666:1, col:20> col:8 used P1 'void *(void *)'
| `-ParmVarDecl 0x562389b53bb0 <col:11, col:17> col:17 arg 'void *'
|-FunctionDecl 0x562389b53da0 <line:667:1, col:20> col:8 used P2 'void *(void *)'
| `-ParmVarDecl 0x562389b53d08 <col:11, col:17> col:17 arg 'void *'
|-FunctionDecl 0x562389b53e68 <line:668:1, col:12> col:6 fence 'void ()'
|-FunctionDecl 0x562389b53f28 <line:669:1, col:12> col:6 isync 'void ()'
|-FunctionDecl 0x562389b53fe8 <line:670:1, col:14> col:6 lwfence 'void ()'
|-VarDecl 0x562389b540a0 <line:671:1, col:5> col:5 used __unbuffered_cnt 'int'
|-VarDecl 0x562389b54120 prev 0x562389b540a0 <line:672:1, col:24> col:5 used __unbuffered_cnt 'int' cinit
| `-IntegerLiteral 0x562389b54188 <col:24> 'int' 0
|-VarDecl 0x562389b541c0 <line:673:1, col:5> col:5 used __unbuffered_p0_EAX 'int'
|-VarDecl 0x562389b54240 prev 0x562389b541c0 <line:674:1, col:27> col:5 used __unbuffered_p0_EAX 'int' cinit
| `-IntegerLiteral 0x562389b542a8 <col:27> 'int' 0
|-VarDecl 0x562389b542e0 <line:675:1, col:5> col:5 used __unbuffered_p1_EAX 'int'
|-VarDecl 0x562389b54360 prev 0x562389b542e0 <line:676:1, col:27> col:5 used __unbuffered_p1_EAX 'int' cinit
| `-IntegerLiteral 0x562389b543c8 <col:27> 'int' 0
|-VarDecl 0x562389b54400 <line:677:1, col:5> col:5 used __unbuffered_p2_EAX 'int'
|-VarDecl 0x562389b54480 prev 0x562389b54400 <line:678:1, col:27> col:5 used __unbuffered_p2_EAX 'int' cinit
| `-IntegerLiteral 0x562389b544e8 <col:27> 'int' 0
|-VarDecl 0x562389b54518 <line:679:1, col:7> col:7 used main$tmp_guard0 '_Bool'
|-VarDecl 0x562389b54590 <line:680:1, col:7> col:7 used main$tmp_guard1 '_Bool'
|-VarDecl 0x562389b54610 <line:681:1, col:5> col:5 used x 'int'
|-VarDecl 0x562389b54690 prev 0x562389b54610 <line:682:1, col:9> col:5 used x 'int' cinit
| `-IntegerLiteral 0x562389b546f8 <col:9> 'int' 0
|-VarDecl 0x562389b54730 <line:683:1, col:5> col:5 used y 'int'
|-VarDecl 0x562389b547b0 prev 0x562389b54730 <line:684:1, col:9> col:5 used y 'int' cinit
| `-IntegerLiteral 0x562389b54818 <col:9> 'int' 0
|-VarDecl 0x562389b54850 <line:685:1, col:5> col:5 used z 'int'
|-VarDecl 0x562389b548d0 prev 0x562389b54850 <line:686:1, col:9> col:5 used z 'int' cinit
| `-IntegerLiteral 0x562389b54938 <col:9> 'int' 0
|-VarDecl 0x562389b54968 <line:687:1, col:7> col:7 used z$flush_delayed '_Bool'
|-VarDecl 0x562389b549e8 <line:688:1, col:5> col:5 used z$mem_tmp 'int'
|-VarDecl 0x562389b54a60 <line:689:1, col:7> col:7 used z$r_buff0_thd0 '_Bool'
|-VarDecl 0x562389b54b00 <line:690:1, col:7> col:7 used z$r_buff0_thd1 '_Bool'
|-VarDecl 0x562389b54b78 <line:691:1, col:7> col:7 used z$r_buff0_thd2 '_Bool'
|-VarDecl 0x562389b54bf0 <line:692:1, col:7> col:7 used z$r_buff0_thd3 '_Bool'
|-VarDecl 0x562389b54c68 <line:693:1, col:7> col:7 used z$r_buff1_thd0 '_Bool'
|-VarDecl 0x562389b54ce0 <line:694:1, col:7> col:7 used z$r_buff1_thd1 '_Bool'
|-VarDecl 0x562389b54d58 <line:695:1, col:7> col:7 used z$r_buff1_thd2 '_Bool'
|-VarDecl 0x562389b54dd0 <line:696:1, col:7> col:7 used z$r_buff1_thd3 '_Bool'
|-VarDecl 0x562389b54e48 <line:697:1, col:7> col:7 z$read_delayed '_Bool'
|-VarDecl 0x562389b54ec8 <line:698:1, col:6> col:6 z$read_delayed_var 'int *'
|-VarDecl 0x562389b54f48 <line:699:1, col:5> col:5 used z$w_buff0 'int'
|-VarDecl 0x562389b54fc0 <line:700:1, col:7> col:7 used z$w_buff0_used '_Bool'
|-VarDecl 0x562389b55040 <line:701:1, col:5> col:5 used z$w_buff1 'int'
|-VarDecl 0x562389b550b8 <line:702:1, col:7> col:7 used z$w_buff1_used '_Bool'
|-VarDecl 0x562389b55130 <line:703:1, col:7> col:7 used weak$$choice0 '_Bool'
|-VarDecl 0x562389b551a8 <line:704:1, col:7> col:7 used weak$$choice2 '_Bool'
|-FunctionDecl 0x562389b552c0 prev 0x562389b53af0 <line:705:1, line:733:1> line:705:8 used P0 'void *(void *)'
| |-ParmVarDecl 0x562389b55228 <col:11, col:17> col:17 arg 'void *'
| `-CompoundStmt 0x562389b56b20 <line:706:1, line:733:1>
|   |-CallExpr 0x562389b553d8 <line:707:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x562389b553c0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x562389b55368 <col:3> 'void ()' Function 0x562389afae40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x562389b55450 <line:708:3, col:15> 'int' '='
|   | |-DeclRefExpr 0x562389b553f8 <col:3> 'int' lvalue Var 0x562389b55040 'z$w_buff1' 'int'
|   | `-ImplicitCastExpr 0x562389b55438 <col:15> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x562389b55418 <col:15> 'int' lvalue Var 0x562389b54f48 'z$w_buff0' 'int'
|   |-BinaryOperator 0x562389b554b0 <line:709:3, col:15> 'int' '='
|   | |-DeclRefExpr 0x562389b55470 <col:3> 'int' lvalue Var 0x562389b54f48 'z$w_buff0' 'int'
|   | `-IntegerLiteral 0x562389b55490 <col:15> 'int' 1
|   |-BinaryOperator 0x562389b55528 <line:710:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x562389b554d0 <col:3> '_Bool' lvalue Var 0x562389b550b8 'z$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x562389b55510 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x562389b554f0 <col:20> '_Bool' lvalue Var 0x562389b54fc0 'z$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x562389b555c0 <line:711:3, col:27> '_Bool' '='
|   | |-DeclRefExpr 0x562389b55548 <col:3> '_Bool' lvalue Var 0x562389b54fc0 'z$w_buff0_used' '_Bool'
|   | `-CStyleCastExpr 0x562389b55598 <col:20, col:27> '_Bool' <IntegralToBoolean>
|   |   `-IntegerLiteral 0x562389b55568 <col:27> 'int' 1
|   |-CallExpr 0x562389b55748 <line:712:3, col:56> 'void'
|   | |-ImplicitCastExpr 0x562389b55730 <col:3> 'void (*)(int)' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x562389b555e0 <col:3> 'void (int)' Function 0x562389afabc8 '__VERIFIER_assert' 'void (int)'
|   | `-UnaryOperator 0x562389b556e0 <col:21, col:55> 'int' prefix '!' cannot overflow
|   |   `-ParenExpr 0x562389b556c0 <col:22, col:55> 'int'
|   |     `-BinaryOperator 0x562389b556a0 <col:23, col:41> 'int' '&&'
|   |       |-ImplicitCastExpr 0x562389b55658 <col:23> 'int' <IntegralCast>
|   |       | `-ImplicitCastExpr 0x562389b55640 <col:23> '_Bool' <LValueToRValue>
|   |       |   `-DeclRefExpr 0x562389b55600 <col:23> '_Bool' lvalue Var 0x562389b550b8 'z$w_buff1_used' '_Bool'
|   |       `-ImplicitCastExpr 0x562389b55688 <col:41> 'int' <IntegralCast>
|   |         `-ImplicitCastExpr 0x562389b55670 <col:41> '_Bool' <LValueToRValue>
|   |           `-DeclRefExpr 0x562389b55620 <col:41> '_Bool' lvalue Var 0x562389b54fc0 'z$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x562389b557c8 <line:713:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x562389b55770 <col:3> '_Bool' lvalue Var 0x562389b54c68 'z$r_buff1_thd0' '_Bool'
|   | `-ImplicitCastExpr 0x562389b557b0 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x562389b55790 <col:20> '_Bool' lvalue Var 0x562389b54a60 'z$r_buff0_thd0' '_Bool'
|   |-BinaryOperator 0x562389b55840 <line:714:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x562389b557e8 <col:3> '_Bool' lvalue Var 0x562389b54ce0 'z$r_buff1_thd1' '_Bool'
|   | `-ImplicitCastExpr 0x562389b55828 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x562389b55808 <col:20> '_Bool' lvalue Var 0x562389b54b00 'z$r_buff0_thd1' '_Bool'
|   |-BinaryOperator 0x562389b558b8 <line:715:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x562389b55860 <col:3> '_Bool' lvalue Var 0x562389b54d58 'z$r_buff1_thd2' '_Bool'
|   | `-ImplicitCastExpr 0x562389b558a0 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x562389b55880 <col:20> '_Bool' lvalue Var 0x562389b54b78 'z$r_buff0_thd2' '_Bool'
|   |-BinaryOperator 0x562389b55930 <line:716:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x562389b558d8 <col:3> '_Bool' lvalue Var 0x562389b54dd0 'z$r_buff1_thd3' '_Bool'
|   | `-ImplicitCastExpr 0x562389b55918 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x562389b558f8 <col:20> '_Bool' lvalue Var 0x562389b54bf0 'z$r_buff0_thd3' '_Bool'
|   |-BinaryOperator 0x562389b559c8 <line:717:3, col:27> '_Bool' '='
|   | |-DeclRefExpr 0x562389b55950 <col:3> '_Bool' lvalue Var 0x562389b54b00 'z$r_buff0_thd1' '_Bool'
|   | `-CStyleCastExpr 0x562389b559a0 <col:20, col:27> '_Bool' <IntegralToBoolean>
|   |   `-IntegerLiteral 0x562389b55970 <col:27> 'int' 1
|   |-CallExpr 0x562389b55a20 <line:718:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x562389b55a08 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x562389b559e8 <col:3> 'void ()' Function 0x562389afaf00 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x562389b55a78 <line:719:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x562389b55a60 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x562389b55a40 <col:3> 'void ()' Function 0x562389afae40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x562389b55b10 <line:720:3, col:25> 'int' '='
|   | |-DeclRefExpr 0x562389b55a98 <col:3> 'int' lvalue Var 0x562389b54240 '__unbuffered_p0_EAX' 'int'
|   | `-ImplicitCastExpr 0x562389b55ad8 <col:25> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x562389b55ab8 <col:25> 'int' lvalue Var 0x562389b54690 'x' 'int'
|   |-CallExpr 0x562389b55b68 <line:721:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x562389b55b50 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x562389b55b30 <col:3> 'void ()' Function 0x562389afaf00 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x562389b55bc0 <line:722:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x562389b55ba8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x562389b55b88 <col:3> 'void ()' Function 0x562389afae40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x562389b55ea8 <line:723:3, col:103> 'int' '='
|   | |-DeclRefExpr 0x562389b55be0 <col:3> 'int' lvalue Var 0x562389b548d0 'z' 'int'
|   | `-ConditionalOperator 0x562389b55e78 <col:7, col:103> 'int'
|   |   |-BinaryOperator 0x562389b55ca0 <col:7, col:25> 'int' '&&'
|   |   | |-ImplicitCastExpr 0x562389b55c58 <col:7> 'int' <IntegralCast>
|   |   | | `-ImplicitCastExpr 0x562389b55c40 <col:7> '_Bool' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x562389b55c00 <col:7> '_Bool' lvalue Var 0x562389b54fc0 'z$w_buff0_used' '_Bool'
|   |   | `-ImplicitCastExpr 0x562389b55c88 <col:25> 'int' <IntegralCast>
|   |   |   `-ImplicitCastExpr 0x562389b55c70 <col:25> '_Bool' <LValueToRValue>
|   |   |     `-DeclRefExpr 0x562389b55c20 <col:25> '_Bool' lvalue Var 0x562389b54b00 'z$r_buff0_thd1' '_Bool'
|   |   |-ImplicitCastExpr 0x562389b55e60 <col:42> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x562389b55cc0 <col:42> 'int' lvalue Var 0x562389b54f48 'z$w_buff0' 'int'
|   |   `-ParenExpr 0x562389b55e40 <col:54, col:103> 'int'
|   |     `-ConditionalOperator 0x562389b55e10 <col:55, col:102> 'int'
|   |       |-BinaryOperator 0x562389b55d80 <col:55, col:73> 'int' '&&'
|   |       | |-ImplicitCastExpr 0x562389b55d38 <col:55> 'int' <IntegralCast>
|   |       | | `-ImplicitCastExpr 0x562389b55d20 <col:55> '_Bool' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x562389b55ce0 <col:55> '_Bool' lvalue Var 0x562389b550b8 'z$w_buff1_used' '_Bool'
|   |       | `-ImplicitCastExpr 0x562389b55d68 <col:73> 'int' <IntegralCast>
|   |       |   `-ImplicitCastExpr 0x562389b55d50 <col:73> '_Bool' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x562389b55d00 <col:73> '_Bool' lvalue Var 0x562389b54ce0 'z$r_buff1_thd1' '_Bool'
|   |       |-ImplicitCastExpr 0x562389b55de0 <col:90> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x562389b55da0 <col:90> 'int' lvalue Var 0x562389b55040 'z$w_buff1' 'int'
|   |       `-ImplicitCastExpr 0x562389b55df8 <col:102> 'int' <LValueToRValue>
|   |         `-DeclRefExpr 0x562389b55dc0 <col:102> 'int' lvalue Var 0x562389b548d0 'z' 'int'
|   |-BinaryOperator 0x562389b560b0 <line:724:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x562389b55ec8 <col:3> '_Bool' lvalue Var 0x562389b54fc0 'z$w_buff0_used' '_Bool'
|   | `-ImplicitCastExpr 0x562389b56098 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x562389b56068 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x562389b55f88 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x562389b55f40 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x562389b55f28 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x562389b55ee8 <col:20> '_Bool' lvalue Var 0x562389b54fc0 'z$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x562389b55f70 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x562389b55f58 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x562389b55f08 <col:38> '_Bool' lvalue Var 0x562389b54b00 'z$r_buff0_thd1' '_Bool'
|   |     |-ImplicitCastExpr 0x562389b56020 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x562389b55fd8 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x562389b55fa8 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x562389b56050 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x562389b56038 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x562389b56000 <col:66> '_Bool' lvalue Var 0x562389b54fc0 'z$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x562389b56398 <line:725:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x562389b560d0 <col:3> '_Bool' lvalue Var 0x562389b550b8 'z$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x562389b56380 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x562389b56350 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x562389b56270 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x562389b56190 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x562389b56148 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x562389b56130 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x562389b560f0 <col:20> '_Bool' lvalue Var 0x562389b54fc0 'z$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x562389b56178 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x562389b56160 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x562389b56110 <col:38> '_Bool' lvalue Var 0x562389b54b00 'z$r_buff0_thd1' '_Bool'
|   |     | `-BinaryOperator 0x562389b56250 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x562389b56208 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x562389b561f0 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x562389b561b0 <col:56> '_Bool' lvalue Var 0x562389b550b8 'z$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x562389b56238 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x562389b56220 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x562389b561d0 <col:74> '_Bool' lvalue Var 0x562389b54ce0 'z$r_buff1_thd1' '_Bool'
|   |     |-ImplicitCastExpr 0x562389b56308 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x562389b562c0 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x562389b56290 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x562389b56338 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x562389b56320 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x562389b562e8 <col:102> '_Bool' lvalue Var 0x562389b550b8 'z$w_buff1_used' '_Bool'
|   |-BinaryOperator 0x562389b565a0 <line:726:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x562389b563b8 <col:3> '_Bool' lvalue Var 0x562389b54b00 'z$r_buff0_thd1' '_Bool'
|   | `-ImplicitCastExpr 0x562389b56588 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x562389b56558 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x562389b56478 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x562389b56430 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x562389b56418 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x562389b563d8 <col:20> '_Bool' lvalue Var 0x562389b54fc0 'z$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x562389b56460 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x562389b56448 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x562389b563f8 <col:38> '_Bool' lvalue Var 0x562389b54b00 'z$r_buff0_thd1' '_Bool'
|   |     |-ImplicitCastExpr 0x562389b56510 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x562389b564c8 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x562389b56498 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x562389b56540 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x562389b56528 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x562389b564f0 <col:66> '_Bool' lvalue Var 0x562389b54b00 'z$r_buff0_thd1' '_Bool'
|   |-BinaryOperator 0x562389b56888 <line:727:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x562389b565c0 <col:3> '_Bool' lvalue Var 0x562389b54ce0 'z$r_buff1_thd1' '_Bool'
|   | `-ImplicitCastExpr 0x562389b56870 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x562389b56840 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x562389b56760 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x562389b56680 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x562389b56638 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x562389b56620 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x562389b565e0 <col:20> '_Bool' lvalue Var 0x562389b54fc0 'z$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x562389b56668 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x562389b56650 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x562389b56600 <col:38> '_Bool' lvalue Var 0x562389b54b00 'z$r_buff0_thd1' '_Bool'
|   |     | `-BinaryOperator 0x562389b56740 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x562389b566f8 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x562389b566e0 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x562389b566a0 <col:56> '_Bool' lvalue Var 0x562389b550b8 'z$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x562389b56728 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x562389b56710 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x562389b566c0 <col:74> '_Bool' lvalue Var 0x562389b54ce0 'z$r_buff1_thd1' '_Bool'
|   |     |-ImplicitCastExpr 0x562389b567f8 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x562389b567b0 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x562389b56780 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x562389b56828 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x562389b56810 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x562389b567d8 <col:102> '_Bool' lvalue Var 0x562389b54ce0 'z$r_buff1_thd1' '_Bool'
|   |-CallExpr 0x562389b568e0 <line:728:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x562389b568c8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x562389b568a8 <col:3> 'void ()' Function 0x562389afaf00 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x562389b56938 <line:729:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x562389b56920 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x562389b56900 <col:3> 'void ()' Function 0x562389afae40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x562389b569f0 <line:730:3, col:41> 'int' '='
|   | |-DeclRefExpr 0x562389b56958 <col:3> 'int' lvalue Var 0x562389b54120 '__unbuffered_cnt' 'int'
|   | `-BinaryOperator 0x562389b569d0 <col:22, col:41> 'int' '+'
|   |   |-ImplicitCastExpr 0x562389b569b8 <col:22> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x562389b56978 <col:22> 'int' lvalue Var 0x562389b54120 '__unbuffered_cnt' 'int'
|   |   `-IntegerLiteral 0x562389b56998 <col:41> 'int' 1
|   |-CallExpr 0x562389b56a48 <line:731:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x562389b56a30 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x562389b56a10 <col:3> 'void ()' Function 0x562389afaf00 '__VERIFIER_atomic_end' 'void ()'
|   `-ReturnStmt 0x562389b56af8 <line:732:3, col:36>
|     `-CallExpr 0x562389b56ad8 <col:10, col:36> 'void *'
|       `-ImplicitCastExpr 0x562389b56ac0 <col:10> 'void *(*)(void)' <FunctionToPointerDecay>
|         `-DeclRefExpr 0x562389b56a68 <col:10> 'void *(void)' Function 0x562389afa958 '__VERIFIER_nondet_pointer' 'void *(void)'
|-FunctionDecl 0x562389b56cb0 prev 0x562389b53c48 <line:734:1, line:753:1> line:734:8 used P1 'void *(void *)'
| |-ParmVarDecl 0x562389b56c18 <col:11, col:17> col:17 arg 'void *'
| `-CompoundStmt 0x562389b57ef0 <line:735:1, line:753:1>
|   |-CallExpr 0x562389b56d90 <line:736:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x562389b56d78 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x562389b56d58 <col:3> 'void ()' Function 0x562389afae40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x562389b56df0 <line:737:3, col:7> 'int' '='
|   | |-DeclRefExpr 0x562389b56db0 <col:3> 'int' lvalue Var 0x562389b54690 'x' 'int'
|   | `-IntegerLiteral 0x562389b56dd0 <col:7> 'int' 1
|   |-CallExpr 0x562389b56e48 <line:738:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x562389b56e30 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x562389b56e10 <col:3> 'void ()' Function 0x562389afaf00 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x562389b56ea0 <line:739:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x562389b56e88 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x562389b56e68 <col:3> 'void ()' Function 0x562389afae40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x562389b56f18 <line:740:3, col:25> 'int' '='
|   | |-DeclRefExpr 0x562389b56ec0 <col:3> 'int' lvalue Var 0x562389b54360 '__unbuffered_p1_EAX' 'int'
|   | `-ImplicitCastExpr 0x562389b56f00 <col:25> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x562389b56ee0 <col:25> 'int' lvalue Var 0x562389b547b0 'y' 'int'
|   |-CallExpr 0x562389b56f70 <line:741:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x562389b56f58 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x562389b56f38 <col:3> 'void ()' Function 0x562389afaf00 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x562389b56fc8 <line:742:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x562389b56fb0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x562389b56f90 <col:3> 'void ()' Function 0x562389afae40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x562389b572b0 <line:743:3, col:103> 'int' '='
|   | |-DeclRefExpr 0x562389b56fe8 <col:3> 'int' lvalue Var 0x562389b548d0 'z' 'int'
|   | `-ConditionalOperator 0x562389b57280 <col:7, col:103> 'int'
|   |   |-BinaryOperator 0x562389b570a8 <col:7, col:25> 'int' '&&'
|   |   | |-ImplicitCastExpr 0x562389b57060 <col:7> 'int' <IntegralCast>
|   |   | | `-ImplicitCastExpr 0x562389b57048 <col:7> '_Bool' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x562389b57008 <col:7> '_Bool' lvalue Var 0x562389b54fc0 'z$w_buff0_used' '_Bool'
|   |   | `-ImplicitCastExpr 0x562389b57090 <col:25> 'int' <IntegralCast>
|   |   |   `-ImplicitCastExpr 0x562389b57078 <col:25> '_Bool' <LValueToRValue>
|   |   |     `-DeclRefExpr 0x562389b57028 <col:25> '_Bool' lvalue Var 0x562389b54b78 'z$r_buff0_thd2' '_Bool'
|   |   |-ImplicitCastExpr 0x562389b57268 <col:42> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x562389b570c8 <col:42> 'int' lvalue Var 0x562389b54f48 'z$w_buff0' 'int'
|   |   `-ParenExpr 0x562389b57248 <col:54, col:103> 'int'
|   |     `-ConditionalOperator 0x562389b57218 <col:55, col:102> 'int'
|   |       |-BinaryOperator 0x562389b57188 <col:55, col:73> 'int' '&&'
|   |       | |-ImplicitCastExpr 0x562389b57140 <col:55> 'int' <IntegralCast>
|   |       | | `-ImplicitCastExpr 0x562389b57128 <col:55> '_Bool' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x562389b570e8 <col:55> '_Bool' lvalue Var 0x562389b550b8 'z$w_buff1_used' '_Bool'
|   |       | `-ImplicitCastExpr 0x562389b57170 <col:73> 'int' <IntegralCast>
|   |       |   `-ImplicitCastExpr 0x562389b57158 <col:73> '_Bool' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x562389b57108 <col:73> '_Bool' lvalue Var 0x562389b54d58 'z$r_buff1_thd2' '_Bool'
|   |       |-ImplicitCastExpr 0x562389b571e8 <col:90> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x562389b571a8 <col:90> 'int' lvalue Var 0x562389b55040 'z$w_buff1' 'int'
|   |       `-ImplicitCastExpr 0x562389b57200 <col:102> 'int' <LValueToRValue>
|   |         `-DeclRefExpr 0x562389b571c8 <col:102> 'int' lvalue Var 0x562389b548d0 'z' 'int'
|   |-BinaryOperator 0x562389b574b8 <line:744:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x562389b572d0 <col:3> '_Bool' lvalue Var 0x562389b54fc0 'z$w_buff0_used' '_Bool'
|   | `-ImplicitCastExpr 0x562389b574a0 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x562389b57470 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x562389b57390 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x562389b57348 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x562389b57330 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x562389b572f0 <col:20> '_Bool' lvalue Var 0x562389b54fc0 'z$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x562389b57378 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x562389b57360 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x562389b57310 <col:38> '_Bool' lvalue Var 0x562389b54b78 'z$r_buff0_thd2' '_Bool'
|   |     |-ImplicitCastExpr 0x562389b57428 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x562389b573e0 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x562389b573b0 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x562389b57458 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x562389b57440 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x562389b57408 <col:66> '_Bool' lvalue Var 0x562389b54fc0 'z$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x562389b577a0 <line:745:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x562389b574d8 <col:3> '_Bool' lvalue Var 0x562389b550b8 'z$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x562389b57788 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x562389b57758 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x562389b57678 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x562389b57598 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x562389b57550 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x562389b57538 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x562389b574f8 <col:20> '_Bool' lvalue Var 0x562389b54fc0 'z$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x562389b57580 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x562389b57568 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x562389b57518 <col:38> '_Bool' lvalue Var 0x562389b54b78 'z$r_buff0_thd2' '_Bool'
|   |     | `-BinaryOperator 0x562389b57658 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x562389b57610 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x562389b575f8 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x562389b575b8 <col:56> '_Bool' lvalue Var 0x562389b550b8 'z$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x562389b57640 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x562389b57628 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x562389b575d8 <col:74> '_Bool' lvalue Var 0x562389b54d58 'z$r_buff1_thd2' '_Bool'
|   |     |-ImplicitCastExpr 0x562389b57710 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x562389b576c8 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x562389b57698 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x562389b57740 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x562389b57728 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x562389b576f0 <col:102> '_Bool' lvalue Var 0x562389b550b8 'z$w_buff1_used' '_Bool'
|   |-BinaryOperator 0x562389b579a8 <line:746:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x562389b577c0 <col:3> '_Bool' lvalue Var 0x562389b54b78 'z$r_buff0_thd2' '_Bool'
|   | `-ImplicitCastExpr 0x562389b57990 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x562389b57960 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x562389b57880 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x562389b57838 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x562389b57820 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x562389b577e0 <col:20> '_Bool' lvalue Var 0x562389b54fc0 'z$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x562389b57868 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x562389b57850 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x562389b57800 <col:38> '_Bool' lvalue Var 0x562389b54b78 'z$r_buff0_thd2' '_Bool'
|   |     |-ImplicitCastExpr 0x562389b57918 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x562389b578d0 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x562389b578a0 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x562389b57948 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x562389b57930 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x562389b578f8 <col:66> '_Bool' lvalue Var 0x562389b54b78 'z$r_buff0_thd2' '_Bool'
|   |-BinaryOperator 0x562389b57ca8 <line:747:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x562389b579c8 <col:3> '_Bool' lvalue Var 0x562389b54d58 'z$r_buff1_thd2' '_Bool'
|   | `-ImplicitCastExpr 0x562389b57c90 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x562389b57c60 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x562389b57b80 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x562389b57a88 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x562389b57a40 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x562389b57a28 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x562389b579e8 <col:20> '_Bool' lvalue Var 0x562389b54fc0 'z$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x562389b57a70 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x562389b57a58 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x562389b57a08 <col:38> '_Bool' lvalue Var 0x562389b54b78 'z$r_buff0_thd2' '_Bool'
|   |     | `-BinaryOperator 0x562389b57b60 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x562389b57b00 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x562389b57ae8 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x562389b57aa8 <col:56> '_Bool' lvalue Var 0x562389b550b8 'z$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x562389b57b48 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x562389b57b30 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x562389b57ac8 <col:74> '_Bool' lvalue Var 0x562389b54d58 'z$r_buff1_thd2' '_Bool'
|   |     |-ImplicitCastExpr 0x562389b57c18 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x562389b57bd0 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x562389b57ba0 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x562389b57c48 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x562389b57c30 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x562389b57bf8 <col:102> '_Bool' lvalue Var 0x562389b54d58 'z$r_buff1_thd2' '_Bool'
|   |-CallExpr 0x562389b57d00 <line:748:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x562389b57ce8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x562389b57cc8 <col:3> 'void ()' Function 0x562389afaf00 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x562389b57d58 <line:749:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x562389b57d40 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x562389b57d20 <col:3> 'void ()' Function 0x562389afae40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x562389b57e10 <line:750:3, col:41> 'int' '='
|   | |-DeclRefExpr 0x562389b57d78 <col:3> 'int' lvalue Var 0x562389b54120 '__unbuffered_cnt' 'int'
|   | `-BinaryOperator 0x562389b57df0 <col:22, col:41> 'int' '+'
|   |   |-ImplicitCastExpr 0x562389b57dd8 <col:22> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x562389b57d98 <col:22> 'int' lvalue Var 0x562389b54120 '__unbuffered_cnt' 'int'
|   |   `-IntegerLiteral 0x562389b57db8 <col:41> 'int' 1
|   |-CallExpr 0x562389b57e68 <line:751:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x562389b57e50 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x562389b57e30 <col:3> 'void ()' Function 0x562389afaf00 '__VERIFIER_atomic_end' 'void ()'
|   `-ReturnStmt 0x562389b57ee0 <line:752:3, col:36>
|     `-CallExpr 0x562389b57ec0 <col:10, col:36> 'void *'
|       `-ImplicitCastExpr 0x562389b57ea8 <col:10> 'void *(*)(void)' <FunctionToPointerDecay>
|         `-DeclRefExpr 0x562389b57e88 <col:10> 'void *(void)' Function 0x562389afa958 '__VERIFIER_nondet_pointer' 'void *(void)'
|-FunctionDecl 0x562389b58038 prev 0x562389b53da0 <line:754:1, line:786:1> line:754:8 used P2 'void *(void *)'
| |-ParmVarDecl 0x562389b57fa0 <col:11, col:17> col:17 arg 'void *'
| `-CompoundStmt 0x562389b5bc30 <line:755:1, line:786:1>
|   |-CallExpr 0x562389b58118 <line:756:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x562389b58100 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x562389b580e0 <col:3> 'void ()' Function 0x562389afae40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x562389b58178 <line:757:3, col:7> 'int' '='
|   | |-DeclRefExpr 0x562389b58138 <col:3> 'int' lvalue Var 0x562389b547b0 'y' 'int'
|   | `-IntegerLiteral 0x562389b58158 <col:7> 'int' 1
|   |-CallExpr 0x562389b581d0 <line:758:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x562389b581b8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x562389b58198 <col:3> 'void ()' Function 0x562389afaf00 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x562389b58228 <line:759:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x562389b58210 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x562389b581f0 <col:3> 'void ()' Function 0x562389afae40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x562389b582d8 <line:760:3, col:45> '_Bool' '='
|   | |-DeclRefExpr 0x562389b58248 <col:3> '_Bool' lvalue Var 0x562389b55130 'weak$$choice0' '_Bool'
|   | `-ImplicitCastExpr 0x562389b582c0 <col:19, col:45> '_Bool' <PointerToBoolean>
|   |   `-CallExpr 0x562389b582a0 <col:19, col:45> 'void *'
|   |     `-ImplicitCastExpr 0x562389b58288 <col:19> 'void *(*)(void)' <FunctionToPointerDecay>
|   |       `-DeclRefExpr 0x562389b58268 <col:19> 'void *(void)' Function 0x562389afa958 '__VERIFIER_nondet_pointer' 'void *(void)'
|   |-BinaryOperator 0x562389b58388 <line:761:3, col:45> '_Bool' '='
|   | |-DeclRefExpr 0x562389b582f8 <col:3> '_Bool' lvalue Var 0x562389b551a8 'weak$$choice2' '_Bool'
|   | `-ImplicitCastExpr 0x562389b58370 <col:19, col:45> '_Bool' <PointerToBoolean>
|   |   `-CallExpr 0x562389b58350 <col:19, col:45> 'void *'
|   |     `-ImplicitCastExpr 0x562389b58338 <col:19> 'void *(*)(void)' <FunctionToPointerDecay>
|   |       `-DeclRefExpr 0x562389b58318 <col:19> 'void *(void)' Function 0x562389afa958 '__VERIFIER_nondet_pointer' 'void *(void)'
|   |-BinaryOperator 0x562389b58400 <line:762:3, col:21> '_Bool' '='
|   | |-DeclRefExpr 0x562389b583a8 <col:3> '_Bool' lvalue Var 0x562389b54968 'z$flush_delayed' '_Bool'
|   | `-ImplicitCastExpr 0x562389b583e8 <col:21> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x562389b583c8 <col:21> '_Bool' lvalue Var 0x562389b551a8 'weak$$choice2' '_Bool'
|   |-BinaryOperator 0x562389b58478 <line:763:3, col:15> 'int' '='
|   | |-DeclRefExpr 0x562389b58420 <col:3> 'int' lvalue Var 0x562389b549e8 'z$mem_tmp' 'int'
|   | `-ImplicitCastExpr 0x562389b58460 <col:15> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x562389b58440 <col:15> 'int' lvalue Var 0x562389b548d0 'z' 'int'
|   |-BinaryOperator 0x562389b588b0 <line:764:3, col:162> 'int' '='
|   | |-DeclRefExpr 0x562389b58498 <col:3> 'int' lvalue Var 0x562389b548d0 'z' 'int'
|   | `-ConditionalOperator 0x562389b58880 <col:7, col:162> 'int'
|   |   |-BinaryOperator 0x562389b586a8 <col:7, col:84> 'int' '||'
|   |   | |-BinaryOperator 0x562389b585c8 <col:7, col:46> 'int' '||'
|   |   | | |-UnaryOperator 0x562389b584f0 <col:7, col:8> 'int' prefix '!' cannot overflow
|   |   | | | `-ImplicitCastExpr 0x562389b584d8 <col:8> '_Bool' <LValueToRValue>
|   |   | | |   `-DeclRefExpr 0x562389b584b8 <col:8> '_Bool' lvalue Var 0x562389b54fc0 'z$w_buff0_used' '_Bool'
|   |   | | `-BinaryOperator 0x562389b585a8 <col:26, col:46> 'int' '&&'
|   |   | |   |-UnaryOperator 0x562389b58540 <col:26, col:27> 'int' prefix '!' cannot overflow
|   |   | |   | `-ImplicitCastExpr 0x562389b58528 <col:27> '_Bool' <LValueToRValue>
|   |   | |   |   `-DeclRefExpr 0x562389b58508 <col:27> '_Bool' lvalue Var 0x562389b54bf0 'z$r_buff0_thd3' '_Bool'
|   |   | |   `-UnaryOperator 0x562389b58590 <col:45, col:46> 'int' prefix '!' cannot overflow
|   |   | |     `-ImplicitCastExpr 0x562389b58578 <col:46> '_Bool' <LValueToRValue>
|   |   | |       `-DeclRefExpr 0x562389b58558 <col:46> '_Bool' lvalue Var 0x562389b550b8 'z$w_buff1_used' '_Bool'
|   |   | `-BinaryOperator 0x562389b58688 <col:64, col:84> 'int' '&&'
|   |   |   |-UnaryOperator 0x562389b58620 <col:64, col:65> 'int' prefix '!' cannot overflow
|   |   |   | `-ImplicitCastExpr 0x562389b58608 <col:65> '_Bool' <LValueToRValue>
|   |   |   |   `-DeclRefExpr 0x562389b585e8 <col:65> '_Bool' lvalue Var 0x562389b54bf0 'z$r_buff0_thd3' '_Bool'
|   |   |   `-UnaryOperator 0x562389b58670 <col:83, col:84> 'int' prefix '!' cannot overflow
|   |   |     `-ImplicitCastExpr 0x562389b58658 <col:84> '_Bool' <LValueToRValue>
|   |   |       `-DeclRefExpr 0x562389b58638 <col:84> '_Bool' lvalue Var 0x562389b54dd0 'z$r_buff1_thd3' '_Bool'
|   |   |-ImplicitCastExpr 0x562389b58868 <col:101> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x562389b586c8 <col:101> 'int' lvalue Var 0x562389b548d0 'z' 'int'
|   |   `-ParenExpr 0x562389b58848 <col:105, col:162> 'int'
|   |     `-ConditionalOperator 0x562389b58818 <col:106, col:153> 'int'
|   |       |-BinaryOperator 0x562389b58788 <col:106, col:124> 'int' '&&'
|   |       | |-ImplicitCastExpr 0x562389b58740 <col:106> 'int' <IntegralCast>
|   |       | | `-ImplicitCastExpr 0x562389b58728 <col:106> '_Bool' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x562389b586e8 <col:106> '_Bool' lvalue Var 0x562389b54fc0 'z$w_buff0_used' '_Bool'
|   |       | `-ImplicitCastExpr 0x562389b58770 <col:124> 'int' <IntegralCast>
|   |       |   `-ImplicitCastExpr 0x562389b58758 <col:124> '_Bool' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x562389b58708 <col:124> '_Bool' lvalue Var 0x562389b54bf0 'z$r_buff0_thd3' '_Bool'
|   |       |-ImplicitCastExpr 0x562389b587e8 <col:141> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x562389b587a8 <col:141> 'int' lvalue Var 0x562389b54f48 'z$w_buff0' 'int'
|   |       `-ImplicitCastExpr 0x562389b58800 <col:153> 'int' <LValueToRValue>
|   |         `-DeclRefExpr 0x562389b587c8 <col:153> 'int' lvalue Var 0x562389b55040 'z$w_buff1' 'int'
|   |-BinaryOperator 0x562389b58de0 <line:765:3, col:208> 'int' '='
|   | |-DeclRefExpr 0x562389b588d0 <col:3> 'int' lvalue Var 0x562389b54f48 'z$w_buff0' 'int'
|   | `-ConditionalOperator 0x562389b58db0 <col:15, col:208> 'int'
|   |   |-ImplicitCastExpr 0x562389b58d80 <col:15> 'int' <IntegralCast>
|   |   | `-ImplicitCastExpr 0x562389b58d68 <col:15> '_Bool' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x562389b588f0 <col:15> '_Bool' lvalue Var 0x562389b551a8 'weak$$choice2' '_Bool'
|   |   |-ImplicitCastExpr 0x562389b58d98 <col:31> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x562389b58910 <col:31> 'int' lvalue Var 0x562389b54f48 'z$w_buff0' 'int'
|   |   `-ParenExpr 0x562389b58d48 <col:43, col:208> 'int'
|   |     `-ConditionalOperator 0x562389b58d18 <col:44, col:207> 'int'
|   |       |-BinaryOperator 0x562389b58b40 <col:44, col:121> 'int' '||'
|   |       | |-BinaryOperator 0x562389b58a40 <col:44, col:83> 'int' '||'
|   |       | | |-UnaryOperator 0x562389b58968 <col:44, col:45> 'int' prefix '!' cannot overflow
|   |       | | | `-ImplicitCastExpr 0x562389b58950 <col:45> '_Bool' <LValueToRValue>
|   |       | | |   `-DeclRefExpr 0x562389b58930 <col:45> '_Bool' lvalue Var 0x562389b54fc0 'z$w_buff0_used' '_Bool'
|   |       | | `-BinaryOperator 0x562389b58a20 <col:63, col:83> 'int' '&&'
|   |       | |   |-UnaryOperator 0x562389b589b8 <col:63, col:64> 'int' prefix '!' cannot overflow
|   |       | |   | `-ImplicitCastExpr 0x562389b589a0 <col:64> '_Bool' <LValueToRValue>
|   |       | |   |   `-DeclRefExpr 0x562389b58980 <col:64> '_Bool' lvalue Var 0x562389b54bf0 'z$r_buff0_thd3' '_Bool'
|   |       | |   `-UnaryOperator 0x562389b58a08 <col:82, col:83> 'int' prefix '!' cannot overflow
|   |       | |     `-ImplicitCastExpr 0x562389b589f0 <col:83> '_Bool' <LValueToRValue>
|   |       | |       `-DeclRefExpr 0x562389b589d0 <col:83> '_Bool' lvalue Var 0x562389b550b8 'z$w_buff1_used' '_Bool'
|   |       | `-BinaryOperator 0x562389b58b00 <col:101, col:121> 'int' '&&'
|   |       |   |-UnaryOperator 0x562389b58a98 <col:101, col:102> 'int' prefix '!' cannot overflow
|   |       |   | `-ImplicitCastExpr 0x562389b58a80 <col:102> '_Bool' <LValueToRValue>
|   |       |   |   `-DeclRefExpr 0x562389b58a60 <col:102> '_Bool' lvalue Var 0x562389b54bf0 'z$r_buff0_thd3' '_Bool'
|   |       |   `-UnaryOperator 0x562389b58ae8 <col:120, col:121> 'int' prefix '!' cannot overflow
|   |       |     `-ImplicitCastExpr 0x562389b58ad0 <col:121> '_Bool' <LValueToRValue>
|   |       |       `-DeclRefExpr 0x562389b58ab0 <col:121> '_Bool' lvalue Var 0x562389b54dd0 'z$r_buff1_thd3' '_Bool'
|   |       |-ImplicitCastExpr 0x562389b58d00 <col:138> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x562389b58b60 <col:138> 'int' lvalue Var 0x562389b54f48 'z$w_buff0' 'int'
|   |       `-ParenExpr 0x562389b58ce0 <col:150, col:207> 'int'
|   |         `-ConditionalOperator 0x562389b58cb0 <col:151, col:198> 'int'
|   |           |-BinaryOperator 0x562389b58c20 <col:151, col:169> 'int' '&&'
|   |           | |-ImplicitCastExpr 0x562389b58bd8 <col:151> 'int' <IntegralCast>
|   |           | | `-ImplicitCastExpr 0x562389b58bc0 <col:151> '_Bool' <LValueToRValue>
|   |           | |   `-DeclRefExpr 0x562389b58b80 <col:151> '_Bool' lvalue Var 0x562389b54fc0 'z$w_buff0_used' '_Bool'
|   |           | `-ImplicitCastExpr 0x562389b58c08 <col:169> 'int' <IntegralCast>
|   |           |   `-ImplicitCastExpr 0x562389b58bf0 <col:169> '_Bool' <LValueToRValue>
|   |           |     `-DeclRefExpr 0x562389b58ba0 <col:169> '_Bool' lvalue Var 0x562389b54bf0 'z$r_buff0_thd3' '_Bool'
|   |           |-ImplicitCastExpr 0x562389b58c80 <col:186> 'int' <LValueToRValue>
|   |           | `-DeclRefExpr 0x562389b58c40 <col:186> 'int' lvalue Var 0x562389b54f48 'z$w_buff0' 'int'
|   |           `-ImplicitCastExpr 0x562389b58c98 <col:198> 'int' <LValueToRValue>
|   |             `-DeclRefExpr 0x562389b58c60 <col:198> 'int' lvalue Var 0x562389b54f48 'z$w_buff0' 'int'
|   |-BinaryOperator 0x562389b592f0 <line:766:3, col:208> 'int' '='
|   | |-DeclRefExpr 0x562389b58e00 <col:3> 'int' lvalue Var 0x562389b55040 'z$w_buff1' 'int'
|   | `-ConditionalOperator 0x562389b592c0 <col:15, col:208> 'int'
|   |   |-ImplicitCastExpr 0x562389b59290 <col:15> 'int' <IntegralCast>
|   |   | `-ImplicitCastExpr 0x562389b59278 <col:15> '_Bool' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x562389b58e20 <col:15> '_Bool' lvalue Var 0x562389b551a8 'weak$$choice2' '_Bool'
|   |   |-ImplicitCastExpr 0x562389b592a8 <col:31> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x562389b58e40 <col:31> 'int' lvalue Var 0x562389b55040 'z$w_buff1' 'int'
|   |   `-ParenExpr 0x562389b59258 <col:43, col:208> 'int'
|   |     `-ConditionalOperator 0x562389b59228 <col:44, col:207> 'int'
|   |       |-BinaryOperator 0x562389b59050 <col:44, col:121> 'int' '||'
|   |       | |-BinaryOperator 0x562389b58f70 <col:44, col:83> 'int' '||'
|   |       | | |-UnaryOperator 0x562389b58e98 <col:44, col:45> 'int' prefix '!' cannot overflow
|   |       | | | `-ImplicitCastExpr 0x562389b58e80 <col:45> '_Bool' <LValueToRValue>
|   |       | | |   `-DeclRefExpr 0x562389b58e60 <col:45> '_Bool' lvalue Var 0x562389b54fc0 'z$w_buff0_used' '_Bool'
|   |       | | `-BinaryOperator 0x562389b58f50 <col:63, col:83> 'int' '&&'
|   |       | |   |-UnaryOperator 0x562389b58ee8 <col:63, col:64> 'int' prefix '!' cannot overflow
|   |       | |   | `-ImplicitCastExpr 0x562389b58ed0 <col:64> '_Bool' <LValueToRValue>
|   |       | |   |   `-DeclRefExpr 0x562389b58eb0 <col:64> '_Bool' lvalue Var 0x562389b54bf0 'z$r_buff0_thd3' '_Bool'
|   |       | |   `-UnaryOperator 0x562389b58f38 <col:82, col:83> 'int' prefix '!' cannot overflow
|   |       | |     `-ImplicitCastExpr 0x562389b58f20 <col:83> '_Bool' <LValueToRValue>
|   |       | |       `-DeclRefExpr 0x562389b58f00 <col:83> '_Bool' lvalue Var 0x562389b550b8 'z$w_buff1_used' '_Bool'
|   |       | `-BinaryOperator 0x562389b59030 <col:101, col:121> 'int' '&&'
|   |       |   |-UnaryOperator 0x562389b58fc8 <col:101, col:102> 'int' prefix '!' cannot overflow
|   |       |   | `-ImplicitCastExpr 0x562389b58fb0 <col:102> '_Bool' <LValueToRValue>
|   |       |   |   `-DeclRefExpr 0x562389b58f90 <col:102> '_Bool' lvalue Var 0x562389b54bf0 'z$r_buff0_thd3' '_Bool'
|   |       |   `-UnaryOperator 0x562389b59018 <col:120, col:121> 'int' prefix '!' cannot overflow
|   |       |     `-ImplicitCastExpr 0x562389b59000 <col:121> '_Bool' <LValueToRValue>
|   |       |       `-DeclRefExpr 0x562389b58fe0 <col:121> '_Bool' lvalue Var 0x562389b54dd0 'z$r_buff1_thd3' '_Bool'
|   |       |-ImplicitCastExpr 0x562389b59210 <col:138> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x562389b59070 <col:138> 'int' lvalue Var 0x562389b55040 'z$w_buff1' 'int'
|   |       `-ParenExpr 0x562389b591f0 <col:150, col:207> 'int'
|   |         `-ConditionalOperator 0x562389b591c0 <col:151, col:198> 'int'
|   |           |-BinaryOperator 0x562389b59130 <col:151, col:169> 'int' '&&'
|   |           | |-ImplicitCastExpr 0x562389b590e8 <col:151> 'int' <IntegralCast>
|   |           | | `-ImplicitCastExpr 0x562389b590d0 <col:151> '_Bool' <LValueToRValue>
|   |           | |   `-DeclRefExpr 0x562389b59090 <col:151> '_Bool' lvalue Var 0x562389b54fc0 'z$w_buff0_used' '_Bool'
|   |           | `-ImplicitCastExpr 0x562389b59118 <col:169> 'int' <IntegralCast>
|   |           |   `-ImplicitCastExpr 0x562389b59100 <col:169> '_Bool' <LValueToRValue>
|   |           |     `-DeclRefExpr 0x562389b590b0 <col:169> '_Bool' lvalue Var 0x562389b54bf0 'z$r_buff0_thd3' '_Bool'
|   |           |-ImplicitCastExpr 0x562389b59190 <col:186> 'int' <LValueToRValue>
|   |           | `-DeclRefExpr 0x562389b59150 <col:186> 'int' lvalue Var 0x562389b55040 'z$w_buff1' 'int'
|   |           `-ImplicitCastExpr 0x562389b591a8 <col:198> 'int' <LValueToRValue>
|   |             `-DeclRefExpr 0x562389b59170 <col:198> 'int' lvalue Var 0x562389b55040 'z$w_buff1' 'int'
|   |-BinaryOperator 0x562389b59898 <line:767:3, col:227> '_Bool' '='
|   | |-DeclRefExpr 0x562389b59310 <col:3> '_Bool' lvalue Var 0x562389b54fc0 'z$w_buff0_used' '_Bool'
|   | `-ImplicitCastExpr 0x562389b59880 <col:20, col:227> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x562389b59850 <col:20, col:227> 'int'
|   |     |-ImplicitCastExpr 0x562389b59808 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x562389b597f0 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x562389b59330 <col:20> '_Bool' lvalue Var 0x562389b551a8 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x562389b59838 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x562389b59820 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x562389b59350 <col:36> '_Bool' lvalue Var 0x562389b54fc0 'z$w_buff0_used' '_Bool'
|   |     `-ParenExpr 0x562389b597d0 <col:53, col:227> 'int'
|   |       `-ConditionalOperator 0x562389b597a0 <col:54, col:226> 'int'
|   |         |-BinaryOperator 0x562389b59560 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x562389b59480 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x562389b593a8 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x562389b59390 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x562389b59370 <col:55> '_Bool' lvalue Var 0x562389b54fc0 'z$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x562389b59460 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x562389b593f8 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x562389b593e0 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x562389b593c0 <col:74> '_Bool' lvalue Var 0x562389b54bf0 'z$r_buff0_thd3' '_Bool'
|   |         | |   `-UnaryOperator 0x562389b59448 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x562389b59430 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x562389b59410 <col:93> '_Bool' lvalue Var 0x562389b550b8 'z$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x562389b59540 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x562389b594d8 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x562389b594c0 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x562389b594a0 <col:112> '_Bool' lvalue Var 0x562389b54bf0 'z$r_buff0_thd3' '_Bool'
|   |         |   `-UnaryOperator 0x562389b59528 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x562389b59510 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x562389b594f0 <col:131> '_Bool' lvalue Var 0x562389b54dd0 'z$r_buff1_thd3' '_Bool'
|   |         |-ImplicitCastExpr 0x562389b59788 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x562389b59770 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x562389b59580 <col:148> '_Bool' lvalue Var 0x562389b54fc0 'z$w_buff0_used' '_Bool'
|   |         `-ParenExpr 0x562389b59750 <col:165, col:226> 'int'
|   |           `-ConditionalOperator 0x562389b59720 <col:166, col:212> 'int'
|   |             |-BinaryOperator 0x562389b59640 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x562389b595f8 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x562389b595e0 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x562389b595a0 <col:166> '_Bool' lvalue Var 0x562389b54fc0 'z$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x562389b59628 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x562389b59610 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x562389b595c0 <col:184> '_Bool' lvalue Var 0x562389b54bf0 'z$r_buff0_thd3' '_Bool'
|   |             |-ImplicitCastExpr 0x562389b596d8 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x562389b59690 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x562389b59660 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x562389b59708 <col:212> 'int' <IntegralCast>
|   |               `-ImplicitCastExpr 0x562389b596f0 <col:212> '_Bool' <LValueToRValue>
|   |                 `-DeclRefExpr 0x562389b596b8 <col:212> '_Bool' lvalue Var 0x562389b54fc0 'z$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x562389b59e88 <line:768:3, col:221> '_Bool' '='
|   | |-DeclRefExpr 0x562389b598b8 <col:3> '_Bool' lvalue Var 0x562389b550b8 'z$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x562389b59e70 <col:20, col:221> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x562389b59e40 <col:20, col:221> 'int'
|   |     |-ImplicitCastExpr 0x562389b59df8 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x562389b59de0 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x562389b598d8 <col:20> '_Bool' lvalue Var 0x562389b551a8 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x562389b59e28 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x562389b59e10 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x562389b598f8 <col:36> '_Bool' lvalue Var 0x562389b550b8 'z$w_buff1_used' '_Bool'
|   |     `-ParenExpr 0x562389b59dc0 <col:53, col:221> 'int'
|   |       `-ConditionalOperator 0x562389b59d90 <col:54, col:220> 'int'
|   |         |-BinaryOperator 0x562389b59b08 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x562389b59a28 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x562389b59950 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x562389b59938 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x562389b59918 <col:55> '_Bool' lvalue Var 0x562389b54fc0 'z$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x562389b59a08 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x562389b599a0 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x562389b59988 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x562389b59968 <col:74> '_Bool' lvalue Var 0x562389b54bf0 'z$r_buff0_thd3' '_Bool'
|   |         | |   `-UnaryOperator 0x562389b599f0 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x562389b599d8 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x562389b599b8 <col:93> '_Bool' lvalue Var 0x562389b550b8 'z$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x562389b59ae8 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x562389b59a80 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x562389b59a68 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x562389b59a48 <col:112> '_Bool' lvalue Var 0x562389b54bf0 'z$r_buff0_thd3' '_Bool'
|   |         |   `-UnaryOperator 0x562389b59ad0 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x562389b59ab8 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x562389b59a98 <col:131> '_Bool' lvalue Var 0x562389b54dd0 'z$r_buff1_thd3' '_Bool'
|   |         |-ImplicitCastExpr 0x562389b59d78 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x562389b59d60 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x562389b59b50 <col:148> '_Bool' lvalue Var 0x562389b550b8 'z$w_buff1_used' '_Bool'
|   |         `-ParenExpr 0x562389b59d40 <col:165, col:220> 'int'
|   |           `-ConditionalOperator 0x562389b59d10 <col:166, col:219> 'int'
|   |             |-BinaryOperator 0x562389b59c10 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x562389b59bc8 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x562389b59bb0 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x562389b59b70 <col:166> '_Bool' lvalue Var 0x562389b54fc0 'z$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x562389b59bf8 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x562389b59be0 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x562389b59b90 <col:184> '_Bool' lvalue Var 0x562389b54bf0 'z$r_buff0_thd3' '_Bool'
|   |             |-ImplicitCastExpr 0x562389b59ce0 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x562389b59c60 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x562389b59c30 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x562389b59cf8 <col:212, col:219> 'int' <IntegralCast>
|   |               `-CStyleCastExpr 0x562389b59cb8 <col:212, col:219> '_Bool' <IntegralToBoolean>
|   |                 `-IntegerLiteral 0x562389b59c88 <col:219> 'int' 0
|   |-BinaryOperator 0x562389b5a430 <line:769:3, col:227> '_Bool' '='
|   | |-DeclRefExpr 0x562389b59ea8 <col:3> '_Bool' lvalue Var 0x562389b54bf0 'z$r_buff0_thd3' '_Bool'
|   | `-ImplicitCastExpr 0x562389b5a418 <col:20, col:227> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x562389b5a3e8 <col:20, col:227> 'int'
|   |     |-ImplicitCastExpr 0x562389b5a3a0 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x562389b5a388 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x562389b59ec8 <col:20> '_Bool' lvalue Var 0x562389b551a8 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x562389b5a3d0 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x562389b5a3b8 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x562389b59ee8 <col:36> '_Bool' lvalue Var 0x562389b54bf0 'z$r_buff0_thd3' '_Bool'
|   |     `-ParenExpr 0x562389b5a368 <col:53, col:227> 'int'
|   |       `-ConditionalOperator 0x562389b5a338 <col:54, col:226> 'int'
|   |         |-BinaryOperator 0x562389b5a0f8 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x562389b5a018 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x562389b59f40 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x562389b59f28 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x562389b59f08 <col:55> '_Bool' lvalue Var 0x562389b54fc0 'z$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x562389b59ff8 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x562389b59f90 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x562389b59f78 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x562389b59f58 <col:74> '_Bool' lvalue Var 0x562389b54bf0 'z$r_buff0_thd3' '_Bool'
|   |         | |   `-UnaryOperator 0x562389b59fe0 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x562389b59fc8 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x562389b59fa8 <col:93> '_Bool' lvalue Var 0x562389b550b8 'z$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x562389b5a0d8 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x562389b5a070 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x562389b5a058 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x562389b5a038 <col:112> '_Bool' lvalue Var 0x562389b54bf0 'z$r_buff0_thd3' '_Bool'
|   |         |   `-UnaryOperator 0x562389b5a0c0 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x562389b5a0a8 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x562389b5a088 <col:131> '_Bool' lvalue Var 0x562389b54dd0 'z$r_buff1_thd3' '_Bool'
|   |         |-ImplicitCastExpr 0x562389b5a320 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x562389b5a308 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x562389b5a118 <col:148> '_Bool' lvalue Var 0x562389b54bf0 'z$r_buff0_thd3' '_Bool'
|   |         `-ParenExpr 0x562389b5a2e8 <col:165, col:226> 'int'
|   |           `-ConditionalOperator 0x562389b5a2b8 <col:166, col:212> 'int'
|   |             |-BinaryOperator 0x562389b5a1d8 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x562389b5a190 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x562389b5a178 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x562389b5a138 <col:166> '_Bool' lvalue Var 0x562389b54fc0 'z$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x562389b5a1c0 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x562389b5a1a8 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x562389b5a158 <col:184> '_Bool' lvalue Var 0x562389b54bf0 'z$r_buff0_thd3' '_Bool'
|   |             |-ImplicitCastExpr 0x562389b5a270 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x562389b5a228 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x562389b5a1f8 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x562389b5a2a0 <col:212> 'int' <IntegralCast>
|   |               `-ImplicitCastExpr 0x562389b5a288 <col:212> '_Bool' <LValueToRValue>
|   |                 `-DeclRefExpr 0x562389b5a250 <col:212> '_Bool' lvalue Var 0x562389b54bf0 'z$r_buff0_thd3' '_Bool'
|   |-BinaryOperator 0x562389b5a9f8 <line:770:3, col:221> '_Bool' '='
|   | |-DeclRefExpr 0x562389b5a450 <col:3> '_Bool' lvalue Var 0x562389b54dd0 'z$r_buff1_thd3' '_Bool'
|   | `-ImplicitCastExpr 0x562389b5a9e0 <col:20, col:221> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x562389b5a9b0 <col:20, col:221> 'int'
|   |     |-ImplicitCastExpr 0x562389b5a968 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x562389b5a950 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x562389b5a470 <col:20> '_Bool' lvalue Var 0x562389b551a8 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x562389b5a998 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x562389b5a980 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x562389b5a490 <col:36> '_Bool' lvalue Var 0x562389b54dd0 'z$r_buff1_thd3' '_Bool'
|   |     `-ParenExpr 0x562389b5a930 <col:53, col:221> 'int'
|   |       `-ConditionalOperator 0x562389b5a900 <col:54, col:220> 'int'
|   |         |-BinaryOperator 0x562389b5a6a0 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x562389b5a5c0 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x562389b5a4e8 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x562389b5a4d0 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x562389b5a4b0 <col:55> '_Bool' lvalue Var 0x562389b54fc0 'z$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x562389b5a5a0 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x562389b5a538 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x562389b5a520 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x562389b5a500 <col:74> '_Bool' lvalue Var 0x562389b54bf0 'z$r_buff0_thd3' '_Bool'
|   |         | |   `-UnaryOperator 0x562389b5a588 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x562389b5a570 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x562389b5a550 <col:93> '_Bool' lvalue Var 0x562389b550b8 'z$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x562389b5a680 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x562389b5a618 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x562389b5a600 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x562389b5a5e0 <col:112> '_Bool' lvalue Var 0x562389b54bf0 'z$r_buff0_thd3' '_Bool'
|   |         |   `-UnaryOperator 0x562389b5a668 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x562389b5a650 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x562389b5a630 <col:131> '_Bool' lvalue Var 0x562389b54dd0 'z$r_buff1_thd3' '_Bool'
|   |         |-ImplicitCastExpr 0x562389b5a8e8 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x562389b5a8d0 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x562389b5a6c0 <col:148> '_Bool' lvalue Var 0x562389b54dd0 'z$r_buff1_thd3' '_Bool'
|   |         `-ParenExpr 0x562389b5a8b0 <col:165, col:220> 'int'
|   |           `-ConditionalOperator 0x562389b5a880 <col:166, col:219> 'int'
|   |             |-BinaryOperator 0x562389b5a780 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x562389b5a738 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x562389b5a720 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x562389b5a6e0 <col:166> '_Bool' lvalue Var 0x562389b54fc0 'z$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x562389b5a768 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x562389b5a750 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x562389b5a700 <col:184> '_Bool' lvalue Var 0x562389b54bf0 'z$r_buff0_thd3' '_Bool'
|   |             |-ImplicitCastExpr 0x562389b5a850 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x562389b5a7d0 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x562389b5a7a0 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x562389b5a868 <col:212, col:219> 'int' <IntegralCast>
|   |               `-CStyleCastExpr 0x562389b5a828 <col:212, col:219> '_Bool' <IntegralToBoolean>
|   |                 `-IntegerLiteral 0x562389b5a7f8 <col:219> 'int' 0
|   |-BinaryOperator 0x562389b5aa70 <line:771:3, col:25> 'int' '='
|   | |-DeclRefExpr 0x562389b5aa18 <col:3> 'int' lvalue Var 0x562389b54480 '__unbuffered_p2_EAX' 'int'
|   | `-ImplicitCastExpr 0x562389b5aa58 <col:25> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x562389b5aa38 <col:25> 'int' lvalue Var 0x562389b548d0 'z' 'int'
|   |-BinaryOperator 0x562389b5abc0 <line:772:3, col:37> 'int' '='
|   | |-DeclRefExpr 0x562389b5aa90 <col:3> 'int' lvalue Var 0x562389b548d0 'z' 'int'
|   | `-ConditionalOperator 0x562389b5ab90 <col:7, col:37> 'int'
|   |   |-ImplicitCastExpr 0x562389b5ab28 <col:7> 'int' <IntegralCast>
|   |   | `-ImplicitCastExpr 0x562389b5ab10 <col:7> '_Bool' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x562389b5aab0 <col:7> '_Bool' lvalue Var 0x562389b54968 'z$flush_delayed' '_Bool'
|   |   |-ImplicitCastExpr 0x562389b5ab60 <col:25> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x562389b5aad0 <col:25> 'int' lvalue Var 0x562389b549e8 'z$mem_tmp' 'int'
|   |   `-ImplicitCastExpr 0x562389b5ab78 <col:37> 'int' <LValueToRValue>
|   |     `-DeclRefExpr 0x562389b5aaf0 <col:37> 'int' lvalue Var 0x562389b548d0 'z' 'int'
|   |-BinaryOperator 0x562389b5ac58 <line:773:3, col:28> '_Bool' '='
|   | |-DeclRefExpr 0x562389b5abe0 <col:3> '_Bool' lvalue Var 0x562389b54968 'z$flush_delayed' '_Bool'
|   | `-CStyleCastExpr 0x562389b5ac30 <col:21, col:28> '_Bool' <IntegralToBoolean>
|   |   `-IntegerLiteral 0x562389b5ac00 <col:28> 'int' 0
|   |-CallExpr 0x562389b5acb0 <line:774:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x562389b5ac98 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x562389b5ac78 <col:3> 'void ()' Function 0x562389afaf00 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x562389b5ad08 <line:775:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x562389b5acf0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x562389b5acd0 <col:3> 'void ()' Function 0x562389afae40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x562389b5aff0 <line:776:3, col:103> 'int' '='
|   | |-DeclRefExpr 0x562389b5ad28 <col:3> 'int' lvalue Var 0x562389b548d0 'z' 'int'
|   | `-ConditionalOperator 0x562389b5afc0 <col:7, col:103> 'int'
|   |   |-BinaryOperator 0x562389b5ade8 <col:7, col:25> 'int' '&&'
|   |   | |-ImplicitCastExpr 0x562389b5ada0 <col:7> 'int' <IntegralCast>
|   |   | | `-ImplicitCastExpr 0x562389b5ad88 <col:7> '_Bool' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x562389b5ad48 <col:7> '_Bool' lvalue Var 0x562389b54fc0 'z$w_buff0_used' '_Bool'
|   |   | `-ImplicitCastExpr 0x562389b5add0 <col:25> 'int' <IntegralCast>
|   |   |   `-ImplicitCastExpr 0x562389b5adb8 <col:25> '_Bool' <LValueToRValue>
|   |   |     `-DeclRefExpr 0x562389b5ad68 <col:25> '_Bool' lvalue Var 0x562389b54bf0 'z$r_buff0_thd3' '_Bool'
|   |   |-ImplicitCastExpr 0x562389b5afa8 <col:42> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x562389b5ae08 <col:42> 'int' lvalue Var 0x562389b54f48 'z$w_buff0' 'int'
|   |   `-ParenExpr 0x562389b5af88 <col:54, col:103> 'int'
|   |     `-ConditionalOperator 0x562389b5af58 <col:55, col:102> 'int'
|   |       |-BinaryOperator 0x562389b5aec8 <col:55, col:73> 'int' '&&'
|   |       | |-ImplicitCastExpr 0x562389b5ae80 <col:55> 'int' <IntegralCast>
|   |       | | `-ImplicitCastExpr 0x562389b5ae68 <col:55> '_Bool' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x562389b5ae28 <col:55> '_Bool' lvalue Var 0x562389b550b8 'z$w_buff1_used' '_Bool'
|   |       | `-ImplicitCastExpr 0x562389b5aeb0 <col:73> 'int' <IntegralCast>
|   |       |   `-ImplicitCastExpr 0x562389b5ae98 <col:73> '_Bool' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x562389b5ae48 <col:73> '_Bool' lvalue Var 0x562389b54dd0 'z$r_buff1_thd3' '_Bool'
|   |       |-ImplicitCastExpr 0x562389b5af28 <col:90> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x562389b5aee8 <col:90> 'int' lvalue Var 0x562389b55040 'z$w_buff1' 'int'
|   |       `-ImplicitCastExpr 0x562389b5af40 <col:102> 'int' <LValueToRValue>
|   |         `-DeclRefExpr 0x562389b5af08 <col:102> 'int' lvalue Var 0x562389b548d0 'z' 'int'
|   |-BinaryOperator 0x562389b5b1f8 <line:777:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x562389b5b010 <col:3> '_Bool' lvalue Var 0x562389b54fc0 'z$w_buff0_used' '_Bool'
|   | `-ImplicitCastExpr 0x562389b5b1e0 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x562389b5b1b0 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x562389b5b0d0 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x562389b5b088 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x562389b5b070 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x562389b5b030 <col:20> '_Bool' lvalue Var 0x562389b54fc0 'z$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x562389b5b0b8 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x562389b5b0a0 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x562389b5b050 <col:38> '_Bool' lvalue Var 0x562389b54bf0 'z$r_buff0_thd3' '_Bool'
|   |     |-ImplicitCastExpr 0x562389b5b168 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x562389b5b120 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x562389b5b0f0 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x562389b5b198 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x562389b5b180 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x562389b5b148 <col:66> '_Bool' lvalue Var 0x562389b54fc0 'z$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x562389b5b4e0 <line:778:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x562389b5b218 <col:3> '_Bool' lvalue Var 0x562389b550b8 'z$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x562389b5b4c8 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x562389b5b498 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x562389b5b3b8 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x562389b5b2d8 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x562389b5b290 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x562389b5b278 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x562389b5b238 <col:20> '_Bool' lvalue Var 0x562389b54fc0 'z$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x562389b5b2c0 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x562389b5b2a8 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x562389b5b258 <col:38> '_Bool' lvalue Var 0x562389b54bf0 'z$r_buff0_thd3' '_Bool'
|   |     | `-BinaryOperator 0x562389b5b398 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x562389b5b350 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x562389b5b338 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x562389b5b2f8 <col:56> '_Bool' lvalue Var 0x562389b550b8 'z$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x562389b5b380 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x562389b5b368 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x562389b5b318 <col:74> '_Bool' lvalue Var 0x562389b54dd0 'z$r_buff1_thd3' '_Bool'
|   |     |-ImplicitCastExpr 0x562389b5b450 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x562389b5b408 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x562389b5b3d8 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x562389b5b480 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x562389b5b468 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x562389b5b430 <col:102> '_Bool' lvalue Var 0x562389b550b8 'z$w_buff1_used' '_Bool'
|   |-BinaryOperator 0x562389b5b6e8 <line:779:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x562389b5b500 <col:3> '_Bool' lvalue Var 0x562389b54bf0 'z$r_buff0_thd3' '_Bool'
|   | `-ImplicitCastExpr 0x562389b5b6d0 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x562389b5b6a0 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x562389b5b5c0 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x562389b5b578 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x562389b5b560 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x562389b5b520 <col:20> '_Bool' lvalue Var 0x562389b54fc0 'z$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x562389b5b5a8 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x562389b5b590 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x562389b5b540 <col:38> '_Bool' lvalue Var 0x562389b54bf0 'z$r_buff0_thd3' '_Bool'
|   |     |-ImplicitCastExpr 0x562389b5b658 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x562389b5b610 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x562389b5b5e0 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x562389b5b688 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x562389b5b670 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x562389b5b638 <col:66> '_Bool' lvalue Var 0x562389b54bf0 'z$r_buff0_thd3' '_Bool'
|   |-BinaryOperator 0x562389b5b9d0 <line:780:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x562389b5b708 <col:3> '_Bool' lvalue Var 0x562389b54dd0 'z$r_buff1_thd3' '_Bool'
|   | `-ImplicitCastExpr 0x562389b5b9b8 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x562389b5b988 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x562389b5b8a8 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x562389b5b7c8 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x562389b5b780 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x562389b5b768 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x562389b5b728 <col:20> '_Bool' lvalue Var 0x562389b54fc0 'z$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x562389b5b7b0 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x562389b5b798 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x562389b5b748 <col:38> '_Bool' lvalue Var 0x562389b54bf0 'z$r_buff0_thd3' '_Bool'
|   |     | `-BinaryOperator 0x562389b5b888 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x562389b5b840 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x562389b5b828 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x562389b5b7e8 <col:56> '_Bool' lvalue Var 0x562389b550b8 'z$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x562389b5b870 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x562389b5b858 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x562389b5b808 <col:74> '_Bool' lvalue Var 0x562389b54dd0 'z$r_buff1_thd3' '_Bool'
|   |     |-ImplicitCastExpr 0x562389b5b940 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x562389b5b8f8 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x562389b5b8c8 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x562389b5b970 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x562389b5b958 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x562389b5b920 <col:102> '_Bool' lvalue Var 0x562389b54dd0 'z$r_buff1_thd3' '_Bool'
|   |-CallExpr 0x562389b5ba28 <line:781:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x562389b5ba10 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x562389b5b9f0 <col:3> 'void ()' Function 0x562389afaf00 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x562389b5ba80 <line:782:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x562389b5ba68 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x562389b5ba48 <col:3> 'void ()' Function 0x562389afae40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x562389b5bb38 <line:783:3, col:41> 'int' '='
|   | |-DeclRefExpr 0x562389b5baa0 <col:3> 'int' lvalue Var 0x562389b54120 '__unbuffered_cnt' 'int'
|   | `-BinaryOperator 0x562389b5bb18 <col:22, col:41> 'int' '+'
|   |   |-ImplicitCastExpr 0x562389b5bb00 <col:22> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x562389b5bac0 <col:22> 'int' lvalue Var 0x562389b54120 '__unbuffered_cnt' 'int'
|   |   `-IntegerLiteral 0x562389b5bae0 <col:41> 'int' 1
|   |-CallExpr 0x562389b5bba8 <line:784:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x562389b5bb90 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x562389b5bb70 <col:3> 'void ()' Function 0x562389afaf00 '__VERIFIER_atomic_end' 'void ()'
|   `-ReturnStmt 0x562389b5bc20 <line:785:3, col:36>
|     `-CallExpr 0x562389b5bc00 <col:10, col:36> 'void *'
|       `-ImplicitCastExpr 0x562389b5bbe8 <col:10> 'void *(*)(void)' <FunctionToPointerDecay>
|         `-DeclRefExpr 0x562389b5bbc8 <col:10> 'void *(void)' Function 0x562389afa958 '__VERIFIER_nondet_pointer' 'void *(void)'
|-FunctionDecl 0x562389b5bd50 prev 0x562389b53e68 <line:787:1, line:789:1> line:787:6 fence 'void ()'
| `-CompoundStmt 0x562389b5bdf0 <line:788:1, line:789:1>
|-FunctionDecl 0x562389b5be20 prev 0x562389b53f28 <line:790:1, line:792:1> line:790:6 isync 'void ()'
| `-CompoundStmt 0x562389b5bec0 <line:791:1, line:792:1>
|-FunctionDecl 0x562389b5bef0 prev 0x562389b53fe8 <line:793:1, line:795:1> line:793:6 lwfence 'void ()'
| `-CompoundStmt 0x562389b5bf90 <line:794:1, line:795:1>
`-FunctionDecl 0x562389b5bff8 <line:796:1, line:820:1> line:796:5 main 'int ()'
  `-CompoundStmt 0x562389b5dc50 <line:797:1, line:820:1>
    |-DeclStmt 0x562389b5c110 <line:798:3, col:18>
    | `-VarDecl 0x562389b5c0a8 <col:3, col:13> col:13 used t1572 'pthread_t':'unsigned long'
    |-CallExpr 0x562389b5c318 <line:799:3, col:54> 'int'
    | |-ImplicitCastExpr 0x562389b5c300 <col:3> 'int (*)(pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x562389b5c128 <col:3> 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' Function 0x562389b3b488 'pthread_create' 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)'
    | |-UnaryOperator 0x562389b5c168 <col:18, col:19> 'pthread_t *' prefix '&' cannot overflow
    | | `-DeclRefExpr 0x562389b5c148 <col:19> 'pthread_t':'unsigned long' lvalue Var 0x562389b5c0a8 't1572' 'pthread_t':'unsigned long'
    | |-ImplicitCastExpr 0x562389b5c358 <col:26, col:36> 'const pthread_attr_t *' <NullToPointer>
    | | `-ParenExpr 0x562389b5c1e0 <col:26, col:36> 'void *'
    | |   `-CStyleCastExpr 0x562389b5c1b8 <col:27, col:35> 'void *' <NullToPointer>
    | |     `-IntegerLiteral 0x562389b5c180 <col:35> 'int' 0
    | |-ImplicitCastExpr 0x562389b5c370 <col:39> 'void *(*)(void *)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x562389b5c200 <col:39> 'void *(void *)' Function 0x562389b552c0 'P0' 'void *(void *)'
    | `-ParenExpr 0x562389b5c280 <col:43, col:53> 'void *'
    |   `-CStyleCastExpr 0x562389b5c258 <col:44, col:52> 'void *' <NullToPointer>
    |     `-IntegerLiteral 0x562389b5c220 <col:52> 'int' 0
    |-DeclStmt 0x562389b5c400 <line:800:3, col:18>
    | `-VarDecl 0x562389b5c398 <col:3, col:13> col:13 used t1573 'pthread_t':'unsigned long'
    |-CallExpr 0x562389b5c5a8 <line:801:3, col:54> 'int'
    | |-ImplicitCastExpr 0x562389b5c590 <col:3> 'int (*)(pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x562389b5c418 <col:3> 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' Function 0x562389b3b488 'pthread_create' 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)'
    | |-UnaryOperator 0x562389b5c458 <col:18, col:19> 'pthread_t *' prefix '&' cannot overflow
    | | `-DeclRefExpr 0x562389b5c438 <col:19> 'pthread_t':'unsigned long' lvalue Var 0x562389b5c398 't1573' 'pthread_t':'unsigned long'
    | |-ImplicitCastExpr 0x562389b5c5e8 <col:26, col:36> 'const pthread_attr_t *' <NullToPointer>
    | | `-ParenExpr 0x562389b5c4d0 <col:26, col:36> 'void *'
    | |   `-CStyleCastExpr 0x562389b5c4a8 <col:27, col:35> 'void *' <NullToPointer>
    | |     `-IntegerLiteral 0x562389b5c470 <col:35> 'int' 0
    | |-ImplicitCastExpr 0x562389b5c600 <col:39> 'void *(*)(void *)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x562389b5c4f0 <col:39> 'void *(void *)' Function 0x562389b56cb0 'P1' 'void *(void *)'
    | `-ParenExpr 0x562389b5c570 <col:43, col:53> 'void *'
    |   `-CStyleCastExpr 0x562389b5c548 <col:44, col:52> 'void *' <NullToPointer>
    |     `-IntegerLiteral 0x562389b5c510 <col:52> 'int' 0
    |-DeclStmt 0x562389b5c690 <line:802:3, col:18>
    | `-VarDecl 0x562389b5c628 <col:3, col:13> col:13 used t1574 'pthread_t':'unsigned long'
    |-CallExpr 0x562389b5c838 <line:803:3, col:54> 'int'
    | |-ImplicitCastExpr 0x562389b5c820 <col:3> 'int (*)(pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x562389b5c6a8 <col:3> 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' Function 0x562389b3b488 'pthread_create' 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)'
    | |-UnaryOperator 0x562389b5c6e8 <col:18, col:19> 'pthread_t *' prefix '&' cannot overflow
    | | `-DeclRefExpr 0x562389b5c6c8 <col:19> 'pthread_t':'unsigned long' lvalue Var 0x562389b5c628 't1574' 'pthread_t':'unsigned long'
    | |-ImplicitCastExpr 0x562389b5c878 <col:26, col:36> 'const pthread_attr_t *' <NullToPointer>
    | | `-ParenExpr 0x562389b5c760 <col:26, col:36> 'void *'
    | |   `-CStyleCastExpr 0x562389b5c738 <col:27, col:35> 'void *' <NullToPointer>
    | |     `-IntegerLiteral 0x562389b5c700 <col:35> 'int' 0
    | |-ImplicitCastExpr 0x562389b5c890 <col:39> 'void *(*)(void *)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x562389b5c780 <col:39> 'void *(void *)' Function 0x562389b58038 'P2' 'void *(void *)'
    | `-ParenExpr 0x562389b5c800 <col:43, col:53> 'void *'
    |   `-CStyleCastExpr 0x562389b5c7d8 <col:44, col:52> 'void *' <NullToPointer>
    |     `-IntegerLiteral 0x562389b5c7a0 <col:52> 'int' 0
    |-CallExpr 0x562389b5c8e0 <line:804:3, col:27> 'void'
    | `-ImplicitCastExpr 0x562389b5c8c8 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x562389b5c8a8 <col:3> 'void ()' Function 0x562389afae40 '__VERIFIER_atomic_begin' 'void ()'
    |-BinaryOperator 0x562389b5c9b0 <line:805:3, col:41> '_Bool' '='
    | |-DeclRefExpr 0x562389b5c900 <col:3> '_Bool' lvalue Var 0x562389b54518 'main$tmp_guard0' '_Bool'
    | `-ImplicitCastExpr 0x562389b5c998 <col:21, col:41> '_Bool' <IntegralToBoolean>
    |   `-BinaryOperator 0x562389b5c978 <col:21, col:41> 'int' '=='
    |     |-ImplicitCastExpr 0x562389b5c960 <col:21> 'int' <LValueToRValue>
    |     | `-DeclRefExpr 0x562389b5c920 <col:21> 'int' lvalue Var 0x562389b54120 '__unbuffered_cnt' 'int'
    |     `-IntegerLiteral 0x562389b5c940 <col:41> 'int' 3
    |-CallExpr 0x562389b5ca08 <line:806:3, col:25> 'void'
    | `-ImplicitCastExpr 0x562389b5c9f0 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x562389b5c9d0 <col:3> 'void ()' Function 0x562389afaf00 '__VERIFIER_atomic_end' 'void ()'
    |-CallExpr 0x562389b5ca80 <line:807:3, col:36> 'void'
    | |-ImplicitCastExpr 0x562389b5ca68 <col:3> 'void (*)(int)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x562389b5ca28 <col:3> 'void (int)' Function 0x562389afa790 '__VERIFIER_assume' 'void (int)'
    | `-ImplicitCastExpr 0x562389b5cac0 <col:21> 'int' <IntegralCast>
    |   `-ImplicitCastExpr 0x562389b5caa8 <col:21> '_Bool' <LValueToRValue>
    |     `-DeclRefExpr 0x562389b5ca48 <col:21> '_Bool' lvalue Var 0x562389b54518 'main$tmp_guard0' '_Bool'
    |-CallExpr 0x562389b5cb10 <line:808:3, col:27> 'void'
    | `-ImplicitCastExpr 0x562389b5caf8 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x562389b5cad8 <col:3> 'void ()' Function 0x562389afae40 '__VERIFIER_atomic_begin' 'void ()'
    |-BinaryOperator 0x562389b5ce08 <line:809:3, col:103> 'int' '='
    | |-DeclRefExpr 0x562389b5cb30 <col:3> 'int' lvalue Var 0x562389b548d0 'z' 'int'
    | `-ConditionalOperator 0x562389b5cdd8 <col:7, col:103> 'int'
    |   |-BinaryOperator 0x562389b5cc00 <col:7, col:25> 'int' '&&'
    |   | |-ImplicitCastExpr 0x562389b5cbb8 <col:7> 'int' <IntegralCast>
    |   | | `-ImplicitCastExpr 0x562389b5cba0 <col:7> '_Bool' <LValueToRValue>
    |   | |   `-DeclRefExpr 0x562389b5cb50 <col:7> '_Bool' lvalue Var 0x562389b54fc0 'z$w_buff0_used' '_Bool'
    |   | `-ImplicitCastExpr 0x562389b5cbe8 <col:25> 'int' <IntegralCast>
    |   |   `-ImplicitCastExpr 0x562389b5cbd0 <col:25> '_Bool' <LValueToRValue>
    |   |     `-DeclRefExpr 0x562389b5cb80 <col:25> '_Bool' lvalue Var 0x562389b54a60 'z$r_buff0_thd0' '_Bool'
    |   |-ImplicitCastExpr 0x562389b5cdc0 <col:42> 'int' <LValueToRValue>
    |   | `-DeclRefExpr 0x562389b5cc20 <col:42> 'int' lvalue Var 0x562389b54f48 'z$w_buff0' 'int'
    |   `-ParenExpr 0x562389b5cda0 <col:54, col:103> 'int'
    |     `-ConditionalOperator 0x562389b5cd70 <col:55, col:102> 'int'
    |       |-BinaryOperator 0x562389b5cce0 <col:55, col:73> 'int' '&&'
    |       | |-ImplicitCastExpr 0x562389b5cc98 <col:55> 'int' <IntegralCast>
    |       | | `-ImplicitCastExpr 0x562389b5cc80 <col:55> '_Bool' <LValueToRValue>
    |       | |   `-DeclRefExpr 0x562389b5cc40 <col:55> '_Bool' lvalue Var 0x562389b550b8 'z$w_buff1_used' '_Bool'
    |       | `-ImplicitCastExpr 0x562389b5ccc8 <col:73> 'int' <IntegralCast>
    |       |   `-ImplicitCastExpr 0x562389b5ccb0 <col:73> '_Bool' <LValueToRValue>
    |       |     `-DeclRefExpr 0x562389b5cc60 <col:73> '_Bool' lvalue Var 0x562389b54c68 'z$r_buff1_thd0' '_Bool'
    |       |-ImplicitCastExpr 0x562389b5cd40 <col:90> 'int' <LValueToRValue>
    |       | `-DeclRefExpr 0x562389b5cd00 <col:90> 'int' lvalue Var 0x562389b55040 'z$w_buff1' 'int'
    |       `-ImplicitCastExpr 0x562389b5cd58 <col:102> 'int' <LValueToRValue>
    |         `-DeclRefExpr 0x562389b5cd20 <col:102> 'int' lvalue Var 0x562389b548d0 'z' 'int'
    |-BinaryOperator 0x562389b5d010 <line:810:3, col:66> '_Bool' '='
    | |-DeclRefExpr 0x562389b5ce28 <col:3> '_Bool' lvalue Var 0x562389b54fc0 'z$w_buff0_used' '_Bool'
    | `-ImplicitCastExpr 0x562389b5cff8 <col:20, col:66> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x562389b5cfc8 <col:20, col:66> 'int'
    |     |-BinaryOperator 0x562389b5cee8 <col:20, col:38> 'int' '&&'
    |     | |-ImplicitCastExpr 0x562389b5cea0 <col:20> 'int' <IntegralCast>
    |     | | `-ImplicitCastExpr 0x562389b5ce88 <col:20> '_Bool' <LValueToRValue>
    |     | |   `-DeclRefExpr 0x562389b5ce48 <col:20> '_Bool' lvalue Var 0x562389b54fc0 'z$w_buff0_used' '_Bool'
    |     | `-ImplicitCastExpr 0x562389b5ced0 <col:38> 'int' <IntegralCast>
    |     |   `-ImplicitCastExpr 0x562389b5ceb8 <col:38> '_Bool' <LValueToRValue>
    |     |     `-DeclRefExpr 0x562389b5ce68 <col:38> '_Bool' lvalue Var 0x562389b54a60 'z$r_buff0_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x562389b5cf80 <col:55, col:62> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x562389b5cf38 <col:55, col:62> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x562389b5cf08 <col:62> 'int' 0
    |     `-ImplicitCastExpr 0x562389b5cfb0 <col:66> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x562389b5cf98 <col:66> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x562389b5cf60 <col:66> '_Bool' lvalue Var 0x562389b54fc0 'z$w_buff0_used' '_Bool'
    |-BinaryOperator 0x562389b5d2f8 <line:811:3, col:102> '_Bool' '='
    | |-DeclRefExpr 0x562389b5d030 <col:3> '_Bool' lvalue Var 0x562389b550b8 'z$w_buff1_used' '_Bool'
    | `-ImplicitCastExpr 0x562389b5d2e0 <col:20, col:102> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x562389b5d2b0 <col:20, col:102> 'int'
    |     |-BinaryOperator 0x562389b5d1d0 <col:20, col:74> 'int' '||'
    |     | |-BinaryOperator 0x562389b5d0f0 <col:20, col:38> 'int' '&&'
    |     | | |-ImplicitCastExpr 0x562389b5d0a8 <col:20> 'int' <IntegralCast>
    |     | | | `-ImplicitCastExpr 0x562389b5d090 <col:20> '_Bool' <LValueToRValue>
    |     | | |   `-DeclRefExpr 0x562389b5d050 <col:20> '_Bool' lvalue Var 0x562389b54fc0 'z$w_buff0_used' '_Bool'
    |     | | `-ImplicitCastExpr 0x562389b5d0d8 <col:38> 'int' <IntegralCast>
    |     | |   `-ImplicitCastExpr 0x562389b5d0c0 <col:38> '_Bool' <LValueToRValue>
    |     | |     `-DeclRefExpr 0x562389b5d070 <col:38> '_Bool' lvalue Var 0x562389b54a60 'z$r_buff0_thd0' '_Bool'
    |     | `-BinaryOperator 0x562389b5d1b0 <col:56, col:74> 'int' '&&'
    |     |   |-ImplicitCastExpr 0x562389b5d168 <col:56> 'int' <IntegralCast>
    |     |   | `-ImplicitCastExpr 0x562389b5d150 <col:56> '_Bool' <LValueToRValue>
    |     |   |   `-DeclRefExpr 0x562389b5d110 <col:56> '_Bool' lvalue Var 0x562389b550b8 'z$w_buff1_used' '_Bool'
    |     |   `-ImplicitCastExpr 0x562389b5d198 <col:74> 'int' <IntegralCast>
    |     |     `-ImplicitCastExpr 0x562389b5d180 <col:74> '_Bool' <LValueToRValue>
    |     |       `-DeclRefExpr 0x562389b5d130 <col:74> '_Bool' lvalue Var 0x562389b54c68 'z$r_buff1_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x562389b5d268 <col:91, col:98> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x562389b5d220 <col:91, col:98> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x562389b5d1f0 <col:98> 'int' 0
    |     `-ImplicitCastExpr 0x562389b5d298 <col:102> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x562389b5d280 <col:102> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x562389b5d248 <col:102> '_Bool' lvalue Var 0x562389b550b8 'z$w_buff1_used' '_Bool'
    |-BinaryOperator 0x562389b5d500 <line:812:3, col:66> '_Bool' '='
    | |-DeclRefExpr 0x562389b5d318 <col:3> '_Bool' lvalue Var 0x562389b54a60 'z$r_buff0_thd0' '_Bool'
    | `-ImplicitCastExpr 0x562389b5d4e8 <col:20, col:66> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x562389b5d4b8 <col:20, col:66> 'int'
    |     |-BinaryOperator 0x562389b5d3d8 <col:20, col:38> 'int' '&&'
    |     | |-ImplicitCastExpr 0x562389b5d390 <col:20> 'int' <IntegralCast>
    |     | | `-ImplicitCastExpr 0x562389b5d378 <col:20> '_Bool' <LValueToRValue>
    |     | |   `-DeclRefExpr 0x562389b5d338 <col:20> '_Bool' lvalue Var 0x562389b54fc0 'z$w_buff0_used' '_Bool'
    |     | `-ImplicitCastExpr 0x562389b5d3c0 <col:38> 'int' <IntegralCast>
    |     |   `-ImplicitCastExpr 0x562389b5d3a8 <col:38> '_Bool' <LValueToRValue>
    |     |     `-DeclRefExpr 0x562389b5d358 <col:38> '_Bool' lvalue Var 0x562389b54a60 'z$r_buff0_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x562389b5d470 <col:55, col:62> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x562389b5d428 <col:55, col:62> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x562389b5d3f8 <col:62> 'int' 0
    |     `-ImplicitCastExpr 0x562389b5d4a0 <col:66> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x562389b5d488 <col:66> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x562389b5d450 <col:66> '_Bool' lvalue Var 0x562389b54a60 'z$r_buff0_thd0' '_Bool'
    |-BinaryOperator 0x562389b5d7e8 <line:813:3, col:102> '_Bool' '='
    | |-DeclRefExpr 0x562389b5d520 <col:3> '_Bool' lvalue Var 0x562389b54c68 'z$r_buff1_thd0' '_Bool'
    | `-ImplicitCastExpr 0x562389b5d7d0 <col:20, col:102> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x562389b5d7a0 <col:20, col:102> 'int'
    |     |-BinaryOperator 0x562389b5d6c0 <col:20, col:74> 'int' '||'
    |     | |-BinaryOperator 0x562389b5d5e0 <col:20, col:38> 'int' '&&'
    |     | | |-ImplicitCastExpr 0x562389b5d598 <col:20> 'int' <IntegralCast>
    |     | | | `-ImplicitCastExpr 0x562389b5d580 <col:20> '_Bool' <LValueToRValue>
    |     | | |   `-DeclRefExpr 0x562389b5d540 <col:20> '_Bool' lvalue Var 0x562389b54fc0 'z$w_buff0_used' '_Bool'
    |     | | `-ImplicitCastExpr 0x562389b5d5c8 <col:38> 'int' <IntegralCast>
    |     | |   `-ImplicitCastExpr 0x562389b5d5b0 <col:38> '_Bool' <LValueToRValue>
    |     | |     `-DeclRefExpr 0x562389b5d560 <col:38> '_Bool' lvalue Var 0x562389b54a60 'z$r_buff0_thd0' '_Bool'
    |     | `-BinaryOperator 0x562389b5d6a0 <col:56, col:74> 'int' '&&'
    |     |   |-ImplicitCastExpr 0x562389b5d658 <col:56> 'int' <IntegralCast>
    |     |   | `-ImplicitCastExpr 0x562389b5d640 <col:56> '_Bool' <LValueToRValue>
    |     |   |   `-DeclRefExpr 0x562389b5d600 <col:56> '_Bool' lvalue Var 0x562389b550b8 'z$w_buff1_used' '_Bool'
    |     |   `-ImplicitCastExpr 0x562389b5d688 <col:74> 'int' <IntegralCast>
    |     |     `-ImplicitCastExpr 0x562389b5d670 <col:74> '_Bool' <LValueToRValue>
    |     |       `-DeclRefExpr 0x562389b5d620 <col:74> '_Bool' lvalue Var 0x562389b54c68 'z$r_buff1_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x562389b5d758 <col:91, col:98> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x562389b5d710 <col:91, col:98> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x562389b5d6e0 <col:98> 'int' 0
    |     `-ImplicitCastExpr 0x562389b5d788 <col:102> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x562389b5d770 <col:102> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x562389b5d738 <col:102> '_Bool' lvalue Var 0x562389b54c68 'z$r_buff1_thd0' '_Bool'
    |-CallExpr 0x562389b5d840 <line:814:3, col:25> 'void'
    | `-ImplicitCastExpr 0x562389b5d828 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x562389b5d808 <col:3> 'void ()' Function 0x562389afaf00 '__VERIFIER_atomic_end' 'void ()'
    |-CallExpr 0x562389b5d898 <line:815:3, col:27> 'void'
    | `-ImplicitCastExpr 0x562389b5d880 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x562389b5d860 <col:3> 'void ()' Function 0x562389afae40 '__VERIFIER_atomic_begin' 'void ()'
    |-BinaryOperator 0x562389b5dad0 <line:816:3, col:103> '_Bool' '='
    | |-DeclRefExpr 0x562389b5d8b8 <col:3> '_Bool' lvalue Var 0x562389b54590 'main$tmp_guard1' '_Bool'
    | `-ImplicitCastExpr 0x562389b5dab8 <col:21, col:103> '_Bool' <IntegralToBoolean>
    |   `-UnaryOperator 0x562389b5daa0 <col:21, col:103> 'int' prefix '!' cannot overflow
    |     `-ParenExpr 0x562389b5da80 <col:22, col:103> 'int'
    |       `-BinaryOperator 0x562389b5da60 <col:23, col:102> 'int' '&&'
    |         |-BinaryOperator 0x562389b5d9c8 <col:23, col:74> 'int' '&&'
    |         | |-BinaryOperator 0x562389b5d930 <col:23, col:46> 'int' '=='
    |         | | |-ImplicitCastExpr 0x562389b5d918 <col:23> 'int' <LValueToRValue>
    |         | | | `-DeclRefExpr 0x562389b5d8d8 <col:23> 'int' lvalue Var 0x562389b54240 '__unbuffered_p0_EAX' 'int'
    |         | | `-IntegerLiteral 0x562389b5d8f8 <col:46> 'int' 0
    |         | `-BinaryOperator 0x562389b5d9a8 <col:51, col:74> 'int' '=='
    |         |   |-ImplicitCastExpr 0x562389b5d990 <col:51> 'int' <LValueToRValue>
    |         |   | `-DeclRefExpr 0x562389b5d950 <col:51> 'int' lvalue Var 0x562389b54360 '__unbuffered_p1_EAX' 'int'
    |         |   `-IntegerLiteral 0x562389b5d970 <col:74> 'int' 0
    |         `-BinaryOperator 0x562389b5da40 <col:79, col:102> 'int' '=='
    |           |-ImplicitCastExpr 0x562389b5da28 <col:79> 'int' <LValueToRValue>
    |           | `-DeclRefExpr 0x562389b5d9e8 <col:79> 'int' lvalue Var 0x562389b54480 '__unbuffered_p2_EAX' 'int'
    |           `-IntegerLiteral 0x562389b5da08 <col:102> 'int' 0
    |-CallExpr 0x562389b5db28 <line:817:3, col:25> 'void'
    | `-ImplicitCastExpr 0x562389b5db10 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x562389b5daf0 <col:3> 'void ()' Function 0x562389afaf00 '__VERIFIER_atomic_end' 'void ()'
    |-CallExpr 0x562389b5dbc8 <line:818:3, col:36> 'void'
    | |-ImplicitCastExpr 0x562389b5dbb0 <col:3> 'void (*)(int)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x562389b5db48 <col:3> 'void (int)' Function 0x562389afabc8 '__VERIFIER_assert' 'void (int)'
    | `-ImplicitCastExpr 0x562389b5dc08 <col:21> 'int' <IntegralCast>
    |   `-ImplicitCastExpr 0x562389b5dbf0 <col:21> '_Bool' <LValueToRValue>
    |     `-DeclRefExpr 0x562389b5db90 <col:21> '_Bool' lvalue Var 0x562389b54590 'main$tmp_guard1' '_Bool'
    `-ReturnStmt 0x562389b5dc40 <line:819:3, col:10>
      `-IntegerLiteral 0x562389b5dc20 <col:10> 'int' 0
