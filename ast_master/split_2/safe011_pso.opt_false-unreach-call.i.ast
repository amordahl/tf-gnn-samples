TranslationUnitDecl 0x564957f64e18 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x564957f656d8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x564957f653b0 '__int128'
|-TypedefDecl 0x564957f65748 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x564957f653d0 'unsigned __int128'
|-TypedefDecl 0x564957f65a50 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x564957f65820 'struct __NSConstantString_tag'
|   `-Record 0x564957f657a0 '__NSConstantString_tag'
|-TypedefDecl 0x564957f65af8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x564957f65ab0 'char *'
|   `-BuiltinType 0x564957f64eb0 'char'
|-TypedefDecl 0x564957fa4650 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'struct __va_list_tag [1]'
| `-ConstantArrayType 0x564957f65d90 'struct __va_list_tag [1]' 1 
|   `-RecordType 0x564957f65bd0 'struct __va_list_tag'
|     `-Record 0x564957f65b50 '__va_list_tag'
|-FunctionDecl 0x564957fa4790 <./split_2/safe011_pso.opt_false-unreach-call.i:1:1, col:34> col:13 used __VERIFIER_assume 'void (int)' extern
| `-ParmVarDecl 0x564957fa46c0 <col:31> col:34 'int'
|-FunctionDecl 0x564957fa4958 <line:2:1, col:45> col:15 used __VERIFIER_nondet_pointer 'void *(void)' extern
|-FunctionDecl 0x564957fa4a80 <line:3:1, col:61> col:13 used __VERIFIER_error 'void () __attribute__((noreturn))' extern
|-FunctionDecl 0x564957fa4bc8 <line:4:1, col:99> col:6 used __VERIFIER_assert 'void (int)'
| |-ParmVarDecl 0x564957fa4b38 <col:24, col:28> col:28 used expression 'int'
| `-CompoundStmt 0x564957fa4df8 <col:40, col:99>
|   |-IfStmt 0x564957fa4dc8 <col:42, col:88>
|   | |-UnaryOperator 0x564957fa4ca8 <col:46, col:47> 'int' prefix '!' cannot overflow
|   | | `-ImplicitCastExpr 0x564957fa4c90 <col:47> 'int' <LValueToRValue>
|   | |   `-DeclRefExpr 0x564957fa4c70 <col:47> 'int' lvalue ParmVar 0x564957fa4b38 'expression' 'int'
|   | `-CompoundStmt 0x564957fa4db0 <col:59, col:88>
|   |   `-LabelStmt 0x564957fa4d98 <col:61, col:85> 'ERROR'
|   |     `-CallExpr 0x564957fa4d28 <col:68, col:85> 'void'
|   |       `-ImplicitCastExpr 0x564957fa4d10 <col:68> 'void (*)() __attribute__((noreturn))' <FunctionToPointerDecay>
|   |         `-DeclRefExpr 0x564957fa4cc0 <col:68> 'void () __attribute__((noreturn))' Function 0x564957fa4a80 '__VERIFIER_error' 'void () __attribute__((noreturn))'
|   |-NullStmt 0x564957fa4de0 <col:89>
|   `-ReturnStmt 0x564957fa4de8 <col:91>
|-FunctionDecl 0x564957fa4e40 <line:5:1, col:37> col:13 used __VERIFIER_atomic_begin 'void ()' extern
|-FunctionDecl 0x564957fa4f00 <line:6:1, col:35> col:13 used __VERIFIER_atomic_end 'void ()' extern
|-FunctionDecl 0x564957fa5280 <line:8:1, line:10:76> line:8:13 __assert_fail 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x564957fa4fb8 <col:28, col:40> col:40 __assertion 'const char *'
| |-ParmVarDecl 0x564957fa5038 <col:53, col:65> col:65 __file 'const char *'
| |-ParmVarDecl 0x564957fa50b8 <line:9:7, col:20> col:20 __line 'unsigned int'
| |-ParmVarDecl 0x564957fa5138 <col:28, col:40> col:40 __function 'const char *'
| `-NoThrowAttr 0x564957fa5340 <line:10:22>
|-FunctionDecl 0x564957fcb390 <line:11:1, line:13:76> line:11:13 __assert_perror_fail 'void (int, const char *, unsigned int, const char *) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x564957fa53b0 <col:35, col:39> col:39 __errnum 'int'
| |-ParmVarDecl 0x564957fa5430 <col:49, col:61> col:61 __file 'const char *'
| |-ParmVarDecl 0x564957fa54b0 <line:12:7, col:20> col:20 __line 'unsigned int'
| |-ParmVarDecl 0x564957fa5530 <col:28, col:40> col:40 __function 'const char *'
| `-NoThrowAttr 0x564957fcb450 <line:13:22>
|-FunctionDecl 0x564957fcb700 <line:14:1, line:15:76> line:14:13 __assert 'void (const char *, const char *, int) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x564957fcb4c0 <col:23, col:35> col:35 __assertion 'const char *'
| |-ParmVarDecl 0x564957fcb540 <col:48, col:60> col:60 __file 'const char *'
| |-ParmVarDecl 0x564957fcb5c0 <col:68, col:72> col:72 __line 'int'
| `-NoThrowAttr 0x564957fcb7b8 <line:15:22>
|-TypedefDecl 0x564957fcb828 <line:17:1, col:23> col:23 __u_char 'unsigned char'
| `-BuiltinType 0x564957f64f70 'unsigned char'
|-TypedefDecl 0x564957fcb898 <line:18:1, col:28> col:28 __u_short 'unsigned short'
| `-BuiltinType 0x564957f64f90 'unsigned short'
|-TypedefDecl 0x564957fcb908 <line:19:1, col:22> col:22 __u_int 'unsigned int'
| `-BuiltinType 0x564957f64fb0 'unsigned int'
|-TypedefDecl 0x564957fcb978 <line:20:1, col:27> col:27 __u_long 'unsigned long'
| `-BuiltinType 0x564957f64fd0 'unsigned long'
|-TypedefDecl 0x564957fcb9e8 <line:21:1, col:21> col:21 __int8_t 'signed char'
| `-BuiltinType 0x564957f64ed0 'signed char'
|-TypedefDecl 0x564957fcba58 <line:22:1, col:23> col:23 __uint8_t 'unsigned char'
| `-BuiltinType 0x564957f64f70 'unsigned char'
|-TypedefDecl 0x564957fcbac8 <line:23:1, col:26> col:26 __int16_t 'short'
| `-BuiltinType 0x564957f64ef0 'short'
|-TypedefDecl 0x564957fcbb38 <line:24:1, col:28> col:28 __uint16_t 'unsigned short'
| `-BuiltinType 0x564957f64f90 'unsigned short'
|-TypedefDecl 0x564957fcbba8 <line:25:1, col:20> col:20 __int32_t 'int'
| `-BuiltinType 0x564957f64f10 'int'
|-TypedefDecl 0x564957fcbc18 <line:26:1, col:22> col:22 __uint32_t 'unsigned int'
| `-BuiltinType 0x564957f64fb0 'unsigned int'
|-TypedefDecl 0x564957fcbc88 <line:27:1, col:25> col:25 __int64_t 'long'
| `-BuiltinType 0x564957f64f30 'long'
|-TypedefDecl 0x564957fcbcf8 <line:28:1, col:27> col:27 referenced __uint64_t 'unsigned long'
| `-BuiltinType 0x564957f64fd0 'unsigned long'
|-TypedefDecl 0x564957fcbd68 <line:29:1, col:18> col:18 referenced __quad_t 'long'
| `-BuiltinType 0x564957f64f30 'long'
|-TypedefDecl 0x564957fcbdd8 <line:30:1, col:27> col:27 __u_quad_t 'unsigned long'
| `-BuiltinType 0x564957f64fd0 'unsigned long'
|-TypedefDecl 0x564957fcbe48 <line:31:1, col:27> col:27 __dev_t 'unsigned long'
| `-BuiltinType 0x564957f64fd0 'unsigned long'
|-TypedefDecl 0x564957fcbeb8 <line:32:1, col:22> col:22 __uid_t 'unsigned int'
| `-BuiltinType 0x564957f64fb0 'unsigned int'
|-TypedefDecl 0x564957fcbf28 <line:33:1, col:22> col:22 __gid_t 'unsigned int'
| `-BuiltinType 0x564957f64fb0 'unsigned int'
|-TypedefDecl 0x564957fcbf98 <line:34:1, col:27> col:27 __ino_t 'unsigned long'
| `-BuiltinType 0x564957f64fd0 'unsigned long'
|-TypedefDecl 0x564957fcc008 <line:35:1, col:27> col:27 __ino64_t 'unsigned long'
| `-BuiltinType 0x564957f64fd0 'unsigned long'
|-TypedefDecl 0x564957fcc078 <line:36:1, col:22> col:22 __mode_t 'unsigned int'
| `-BuiltinType 0x564957f64fb0 'unsigned int'
|-TypedefDecl 0x564957fcc0e8 <line:37:1, col:27> col:27 __nlink_t 'unsigned long'
| `-BuiltinType 0x564957f64fd0 'unsigned long'
|-TypedefDecl 0x564957fcc158 <line:38:1, col:18> col:18 __off_t 'long'
| `-BuiltinType 0x564957f64f30 'long'
|-TypedefDecl 0x564957fcc1c8 <line:39:1, col:18> col:18 referenced __off64_t 'long'
| `-BuiltinType 0x564957f64f30 'long'
|-TypedefDecl 0x564957fcc238 <line:40:1, col:13> col:13 referenced __pid_t 'int'
| `-BuiltinType 0x564957f64f10 'int'
|-RecordDecl 0x564957fcc290 <line:41:9, col:32> col:9 struct definition
| `-FieldDecl 0x564957fcc408 <col:18, col:29> col:22 __val 'int [2]'
|-TypedefDecl 0x564957fcc4c0 <col:1, col:34> col:34 __fsid_t 'struct __fsid_t':'__fsid_t'
| `-ElaboratedType 0x564957fcc460 'struct __fsid_t' sugar
|   `-RecordType 0x564957fcc310 '__fsid_t'
|     `-Record 0x564957fcc290 ''
|-TypedefDecl 0x564957fcc548 <line:42:1, col:18> col:18 referenced __clock_t 'long'
| `-BuiltinType 0x564957f64f30 'long'
|-TypedefDecl 0x564957fcc5b8 <line:43:1, col:27> col:27 __rlim_t 'unsigned long'
| `-BuiltinType 0x564957f64fd0 'unsigned long'
|-TypedefDecl 0x564957fcc628 <line:44:1, col:27> col:27 __rlim64_t 'unsigned long'
| `-BuiltinType 0x564957f64fd0 'unsigned long'
|-TypedefDecl 0x564957fcc698 <line:45:1, col:22> col:22 __id_t 'unsigned int'
| `-BuiltinType 0x564957f64fb0 'unsigned int'
|-TypedefDecl 0x564957fcc708 <line:46:1, col:18> col:18 referenced __time_t 'long'
| `-BuiltinType 0x564957f64f30 'long'
|-TypedefDecl 0x564957fcc778 <line:47:1, col:22> col:22 __useconds_t 'unsigned int'
| `-BuiltinType 0x564957f64fb0 'unsigned int'
|-TypedefDecl 0x564957fcc7e8 <line:48:1, col:18> col:18 __suseconds_t 'long'
| `-BuiltinType 0x564957f64f30 'long'
|-TypedefDecl 0x564957fcc858 <line:49:1, col:13> col:13 __daddr_t 'int'
| `-BuiltinType 0x564957f64f10 'int'
|-TypedefDecl 0x564957fcc8c8 <line:50:1, col:13> col:13 __key_t 'int'
| `-BuiltinType 0x564957f64f10 'int'
|-TypedefDecl 0x564957fcc938 <line:51:1, col:13> col:13 referenced __clockid_t 'int'
| `-BuiltinType 0x564957f64f10 'int'
|-TypedefDecl 0x564957fcc9a8 <line:52:1, col:16> col:16 referenced __timer_t 'void *'
| `-PointerType 0x564957f65630 'void *'
|   `-BuiltinType 0x564957f64e70 'void'
|-TypedefDecl 0x564957fcca18 <line:53:1, col:18> col:18 __blksize_t 'long'
| `-BuiltinType 0x564957f64f30 'long'
|-TypedefDecl 0x564957fcca88 <line:54:1, col:18> col:18 __blkcnt_t 'long'
| `-BuiltinType 0x564957f64f30 'long'
|-TypedefDecl 0x564957fccaf8 <line:55:1, col:18> col:18 __blkcnt64_t 'long'
| `-BuiltinType 0x564957f64f30 'long'
|-TypedefDecl 0x564957fccb68 <line:56:1, col:27> col:27 __fsblkcnt_t 'unsigned long'
| `-BuiltinType 0x564957f64fd0 'unsigned long'
|-TypedefDecl 0x564957fccbd8 <line:57:1, col:27> col:27 __fsblkcnt64_t 'unsigned long'
| `-BuiltinType 0x564957f64fd0 'unsigned long'
|-TypedefDecl 0x564957fccc48 <line:58:1, col:27> col:27 __fsfilcnt_t 'unsigned long'
| `-BuiltinType 0x564957f64fd0 'unsigned long'
|-TypedefDecl 0x564957fcccb8 <line:59:1, col:27> col:27 __fsfilcnt64_t 'unsigned long'
| `-BuiltinType 0x564957f64fd0 'unsigned long'
|-TypedefDecl 0x564957fccd28 <line:60:1, col:18> col:18 __fsword_t 'long'
| `-BuiltinType 0x564957f64f30 'long'
|-TypedefDecl 0x564957fccd98 <line:61:1, col:18> col:18 __ssize_t 'long'
| `-BuiltinType 0x564957f64f30 'long'
|-TypedefDecl 0x564957fcce08 <line:62:1, col:18> col:18 referenced __syscall_slong_t 'long'
| `-BuiltinType 0x564957f64f30 'long'
|-TypedefDecl 0x564957fcce78 <line:63:1, col:27> col:27 __syscall_ulong_t 'unsigned long'
| `-BuiltinType 0x564957f64fd0 'unsigned long'
|-TypedefDecl 0x564957fccf08 <line:64:1, col:19> col:19 __loff_t '__off64_t':'long'
| `-TypedefType 0x564957fcced0 '__off64_t' sugar
|   |-Typedef 0x564957fcc1c8 '__off64_t'
|   `-BuiltinType 0x564957f64f30 'long'
|-TypedefDecl 0x564957fcd000 <line:65:1, col:19> col:19 __qaddr_t '__quad_t *'
| `-PointerType 0x564957fccfc0 '__quad_t *'
|   `-TypedefType 0x564957fccf60 '__quad_t' sugar
|     |-Typedef 0x564957fcbd68 '__quad_t'
|     `-BuiltinType 0x564957f64f30 'long'
|-TypedefDecl 0x564957fcd070 <line:66:1, col:15> col:15 __caddr_t 'char *'
| `-PointerType 0x564957f65ab0 'char *'
|   `-BuiltinType 0x564957f64eb0 'char'
|-TypedefDecl 0x564957fcd0e0 <line:67:1, col:18> col:18 __intptr_t 'long'
| `-BuiltinType 0x564957f64f30 'long'
|-TypedefDecl 0x564957fcd150 <line:68:1, col:22> col:22 __socklen_t 'unsigned int'
| `-BuiltinType 0x564957f64fb0 'unsigned int'
|-FunctionDecl 0x564957fcd298 <line:69:1, line:73:1> line:70:1 __bswap_32 'unsigned int (unsigned int)' static inline
| |-ParmVarDecl 0x564957fcd1c0 <col:13, col:26> col:26 used __bsx 'unsigned int'
| `-CompoundStmt 0x564957fce5e8 <line:71:1, line:73:1>
|   `-ReturnStmt 0x564957fce5d8 <line:72:3, col:34>
|     `-CallExpr 0x564957fce598 <col:10, col:34> 'unsigned int'
|       |-ImplicitCastExpr 0x564957fce580 <col:10> 'unsigned int (*)(unsigned int)' <BuiltinFnToFnPtr>
|       | `-DeclRefExpr 0x564957fce510 <col:10> '<builtin fn type>' Function 0x564957fce380 '__builtin_bswap32' 'unsigned int (unsigned int)'
|       `-ImplicitCastExpr 0x564957fce5c0 <col:29> 'unsigned int' <LValueToRValue>
|         `-DeclRefExpr 0x564957fce530 <col:29> 'unsigned int' lvalue ParmVar 0x564957fcd1c0 '__bsx' 'unsigned int'
|-FunctionDecl 0x564957fce380 <col:10> col:10 implicit used __builtin_bswap32 'unsigned int (unsigned int)' extern
| |-ParmVarDecl 0x564957fce420 <<invalid sloc>> <invalid sloc> 'unsigned int'
| |-NoThrowAttr 0x564957fce490 <col:10> Implicit
| `-ConstAttr 0x564957fce4e8 <col:10> Implicit
|-FunctionDecl 0x564957fce740 <line:74:1, line:78:1> line:75:1 __bswap_64 '__uint64_t (__uint64_t)' static inline
| |-ParmVarDecl 0x564957fce638 <col:13, col:24> col:24 used __bsx '__uint64_t':'unsigned long'
| `-CompoundStmt 0x564957fcea58 <line:76:1, line:78:1>
|   `-ReturnStmt 0x564957fcea48 <line:77:3, col:34>
|     `-CallExpr 0x564957fcea08 <col:10, col:34> 'unsigned long'
|       |-ImplicitCastExpr 0x564957fce9f0 <col:10> 'unsigned long (*)(unsigned long)' <BuiltinFnToFnPtr>
|       | `-DeclRefExpr 0x564957fce978 <col:10> '<builtin fn type>' Function 0x564957fce7e8 '__builtin_bswap64' 'unsigned long (unsigned long)'
|       `-ImplicitCastExpr 0x564957fcea30 <col:29> '__uint64_t':'unsigned long' <LValueToRValue>
|         `-DeclRefExpr 0x564957fce998 <col:29> '__uint64_t':'unsigned long' lvalue ParmVar 0x564957fce638 '__bsx' '__uint64_t':'unsigned long'
|-FunctionDecl 0x564957fce7e8 <col:10> col:10 implicit used __builtin_bswap64 'unsigned long (unsigned long)' extern
| |-ParmVarDecl 0x564957fce888 <<invalid sloc>> <invalid sloc> 'unsigned long'
| |-NoThrowAttr 0x564957fce8f8 <col:10> Implicit
| `-ConstAttr 0x564957fce950 <col:10> Implicit
|-TypedefDecl 0x564957fcea88 <line:79:1, col:27> col:27 referenced size_t 'unsigned long'
| `-BuiltinType 0x564957f64fd0 'unsigned long'
|-TypedefDecl 0x564957fceb18 <line:81:1, col:18> col:18 referenced time_t '__time_t':'long'
| `-TypedefType 0x564957fceae0 '__time_t' sugar
|   |-Typedef 0x564957fcc708 '__time_t'
|   `-BuiltinType 0x564957f64f30 'long'
|-RecordDecl 0x564957fceb70 <line:84:1, line:88:3> line:84:8 struct timespec definition
| |-FieldDecl 0x564957fcec28 <line:86:5, col:14> col:14 tv_sec '__time_t':'long'
| `-FieldDecl 0x564957fcecb8 <line:87:5, col:23> col:23 tv_nsec '__syscall_slong_t':'long'
|-TypedefDecl 0x564957fced48 <line:89:1, col:17> col:17 referenced pid_t '__pid_t':'int'
| `-TypedefType 0x564957fced10 '__pid_t' sugar
|   |-Typedef 0x564957fcc238 '__pid_t'
|   `-BuiltinType 0x564957f64f10 'int'
|-RecordDecl 0x564957fceda0 <line:90:1, line:93:3> line:90:8 struct sched_param definition
| `-FieldDecl 0x564957fcee60 <line:92:5, col:9> col:9 __sched_priority 'int'
|-RecordDecl 0x564957fceeb0 <line:96:1, line:99:3> line:96:8 struct __sched_param definition
| `-FieldDecl 0x564957fcef70 <line:98:5, col:9> col:9 __sched_priority 'int'
|-TypedefDecl 0x564957fcefd8 <line:100:1, col:27> col:27 referenced __cpu_mask 'unsigned long'
| `-BuiltinType 0x564957f64fd0 'unsigned long'
|-RecordDecl 0x564957fcf030 <line:101:9, line:104:1> line:101:9 struct definition
| `-FieldDecl 0x564957fcf2c0 <line:103:3, col:53> col:14 __bits '__cpu_mask [64]'
|-TypedefDecl 0x564957fd03a0 <line:101:1, line:104:3> col:3 referenced cpu_set_t 'struct cpu_set_t':'cpu_set_t'
| `-ElaboratedType 0x564957fcf310 'struct cpu_set_t' sugar
|   `-RecordType 0x564957fcf0b0 'cpu_set_t'
|     `-Record 0x564957fcf030 ''
|-FunctionDecl 0x564957fd0678 <line:106:1, line:107:42> line:106:12 __sched_cpucount 'int (size_t, const cpu_set_t *)' extern
| |-ParmVarDecl 0x564957fd0448 <col:30, col:37> col:37 __setsize 'size_t':'unsigned long'
| |-ParmVarDecl 0x564957fd0550 <col:48, col:65> col:65 __setp 'const cpu_set_t *'
| `-NoThrowAttr 0x564957fd0728 <line:107:19>
|-FunctionDecl 0x564957fd0900 <line:108:1, col:92> col:19 __sched_cpualloc 'cpu_set_t *(size_t)' extern
| |-ParmVarDecl 0x564957fd0790 <col:37, col:44> col:44 __count 'size_t':'unsigned long'
| `-NoThrowAttr 0x564957fd09a8 <col:69>
|-FunctionDecl 0x564957fd0b20 <line:109:1, col:87> col:13 __sched_cpufree 'void (cpu_set_t *)' extern
| |-ParmVarDecl 0x564957fd0a10 <col:30, col:41> col:41 __set 'cpu_set_t *'
| `-NoThrowAttr 0x564957fd0bc8 <col:64>
|-FunctionDecl 0x564957fd0e88 <line:112:1, line:113:45> line:112:12 sched_setparam 'int (__pid_t, const struct sched_param *)' extern
| |-ParmVarDecl 0x564957fd0c30 <col:28, col:36> col:36 __pid '__pid_t':'int'
| |-ParmVarDecl 0x564957fd0d68 <col:43, col:69> col:69 __param 'const struct sched_param *'
| `-NoThrowAttr 0x564957fd0f38 <line:113:22>
|-FunctionDecl 0x564957fd11b8 <line:114:1, col:111> col:12 sched_getparam 'int (__pid_t, struct sched_param *)' extern
| |-ParmVarDecl 0x564957fd0fa0 <col:28, col:36> col:36 __pid '__pid_t':'int'
| |-ParmVarDecl 0x564957fd1098 <col:43, col:63> col:63 __param 'struct sched_param *'
| `-NoThrowAttr 0x564957fd1268 <col:88>
|-FunctionDecl 0x564957fd1588 <line:115:1, line:116:85> line:115:12 sched_setscheduler 'int (__pid_t, int, const struct sched_param *)' extern
| |-ParmVarDecl 0x564957fd12d0 <col:32, col:40> col:40 __pid '__pid_t':'int'
| |-ParmVarDecl 0x564957fd13b0 <col:47, col:51> col:51 __policy 'int'
| |-ParmVarDecl 0x564957fd1440 <line:116:11, col:37> col:37 __param 'const struct sched_param *'
| `-NoThrowAttr 0x564957fd1640 <col:62>
|-FunctionDecl 0x564957fd17b8 <line:117:1, col:86> col:12 sched_getscheduler 'int (__pid_t)' extern
| |-ParmVarDecl 0x564957fd16a8 <col:32, col:40> col:40 __pid '__pid_t':'int'
| `-NoThrowAttr 0x564957fd1860 <col:63>
|-FunctionDecl 0x564957fd1988 <line:118:1, col:70> col:12 sched_yield 'int (void)' extern
| `-NoThrowAttr 0x564957fd1a28 <col:47>
|-FunctionDecl 0x564957fd1b30 <line:119:1, col:92> col:12 sched_get_priority_max 'int (int)' extern
| |-ParmVarDecl 0x564957fd1a98 <col:36, col:40> col:40 __algorithm 'int'
| `-NoThrowAttr 0x564957fd1bd8 <col:69>
|-FunctionDecl 0x564957fd1ce0 <line:120:1, col:92> col:12 sched_get_priority_min 'int (int)' extern
| |-ParmVarDecl 0x564957fd1c48 <col:36, col:40> col:40 __algorithm 'int'
| `-NoThrowAttr 0x564957fd1d88 <col:69>
|-FunctionDecl 0x564957fd2048 <line:121:1, col:111> col:12 sched_rr_get_interval 'int (__pid_t, struct timespec *)' extern
| |-ParmVarDecl 0x564957fd1df0 <col:35, col:43> col:43 __pid '__pid_t':'int'
| |-ParmVarDecl 0x564957fd1f28 <col:50, col:67> col:67 __t 'struct timespec *'
| `-NoThrowAttr 0x564957fd20f8 <col:88>
|-TypedefDecl 0x564957fd2188 <line:125:1, col:19> col:19 referenced clock_t '__clock_t':'long'
| `-TypedefType 0x564957fd2150 '__clock_t' sugar
|   |-Typedef 0x564957fcc548 '__clock_t'
|   `-BuiltinType 0x564957f64f30 'long'
|-TypedefDecl 0x564957fd2218 <line:128:1, col:21> col:21 referenced clockid_t '__clockid_t':'int'
| `-TypedefType 0x564957fd21e0 '__clockid_t' sugar
|   |-Typedef 0x564957fcc938 '__clockid_t'
|   `-BuiltinType 0x564957f64f10 'int'
|-TypedefDecl 0x564957fd22a8 <line:129:1, col:19> col:19 referenced timer_t '__timer_t':'void *'
| `-TypedefType 0x564957fd2270 '__timer_t' sugar
|   |-Typedef 0x564957fcc9a8 '__timer_t'
|   `-PointerType 0x564957f65630 'void *'
|     `-BuiltinType 0x564957f64e70 'void'
|-RecordDecl 0x564957fd2300 <line:131:1, line:144:1> line:131:8 struct tm definition
| |-FieldDecl 0x564957fd23d8 <line:133:3, col:7> col:7 tm_sec 'int'
| |-FieldDecl 0x564957fd2440 <line:134:3, col:7> col:7 tm_min 'int'
| |-FieldDecl 0x564957fd24a8 <line:135:3, col:7> col:7 tm_hour 'int'
| |-FieldDecl 0x564957fd2510 <line:136:3, col:7> col:7 tm_mday 'int'
| |-FieldDecl 0x564957fd2578 <line:137:3, col:7> col:7 tm_mon 'int'
| |-FieldDecl 0x564957fd25e0 <line:138:3, col:7> col:7 tm_year 'int'
| |-FieldDecl 0x564957fd2648 <line:139:3, col:7> col:7 tm_wday 'int'
| |-FieldDecl 0x564957fd26b0 <line:140:3, col:7> col:7 tm_yday 'int'
| |-FieldDecl 0x564957fd2718 <line:141:3, col:7> col:7 tm_isdst 'int'
| |-FieldDecl 0x564957fd2780 <line:142:3, col:12> col:12 tm_gmtoff 'long'
| `-FieldDecl 0x564957fd27e8 <line:143:3, col:15> col:15 tm_zone 'const char *'
|-RecordDecl 0x564957fd2838 <line:147:1, line:151:3> line:147:8 struct itimerspec definition
| |-FieldDecl 0x564957fd2908 <line:149:5, col:21> col:21 it_interval 'struct timespec':'struct timespec'
| `-FieldDecl 0x564957fd2978 <line:150:5, col:21> col:21 it_value 'struct timespec':'struct timespec'
|-RecordDecl 0x564957fd2a20 <line:152:1, col:8> col:8 struct sigevent
|-FunctionDecl 0x564957fd2bf0 <line:154:1, col:68> col:16 clock 'clock_t (void)' extern
| `-NoThrowAttr 0x564957fd2c90 <col:45>
|-FunctionDecl 0x564957fd2e70 <line:155:1, col:77> col:15 time 'time_t (time_t *)' extern
| |-ParmVarDecl 0x564957fd2d60 <col:21, col:29> col:29 __timer 'time_t *'
| `-NoThrowAttr 0x564957fd2f18 <col:54>
|-FunctionDecl 0x564957fd3118 <line:156:1, line:157:73> line:156:15 difftime 'double (time_t, time_t)' extern
| |-ParmVarDecl 0x564957fd2f80 <col:25, col:32> col:32 __time1 'time_t':'long'
| |-ParmVarDecl 0x564957fd2ff8 <col:41, col:48> col:48 __time0 'time_t':'long'
| |-NoThrowAttr 0x564957fd31c8 <line:157:22>
| `-ConstAttr 0x564957fd3220 <col:63>
|-FunctionDecl 0x564957fd4050 <line:158:1, col:79> col:15 mktime 'time_t (struct tm *)' extern
| |-ParmVarDecl 0x564957fd3318 <col:23, col:34> col:34 __tp 'struct tm *'
| `-NoThrowAttr 0x564957fd40f8 <col:56>
|-FunctionDecl 0x564957fd44a0 <line:159:1, line:161:77> line:159:15 strftime 'size_t (char *restrict, size_t, const char *restrict, const struct tm *restrict)' extern
| |-ParmVarDecl 0x564957fd4168 <col:25, col:42> col:42 __s 'char *restrict'
| |-ParmVarDecl 0x564957fd41e0 <col:47, col:54> col:54 __maxsize 'size_t':'unsigned long'
| |-ParmVarDecl 0x564957fd4260 <line:160:4, col:27> col:27 __format 'const char *restrict'
| |-ParmVarDecl 0x564957fd4358 <line:161:4, col:32> col:32 __tp 'const struct tm *restrict'
| `-NoThrowAttr 0x564957fd4560 <col:54>
|-RecordDecl 0x564957fd45b8 <line:163:9, line:170:1> line:163:16 struct __locale_struct definition
| |-RecordDecl 0x564957fd4668 parent 0x564957f64e18 <line:165:3, col:10> col:10 struct __locale_data
| |-FieldDecl 0x564957fd48c8 <col:3, col:37> col:25 __locales 'struct __locale_data *[13]'
| |-FieldDecl 0x564957fd4968 <line:166:3, col:29> col:29 __ctype_b 'const unsigned short *'
| |-FieldDecl 0x564957fd49d0 <line:167:3, col:14> col:14 __ctype_tolower 'const int *'
| |-FieldDecl 0x564957fd4a38 <line:168:3, col:14> col:14 __ctype_toupper 'const int *'
| `-FieldDecl 0x564957fd4b28 <line:169:3, col:25> col:15 __names 'const char *[13]'
|-TypedefDecl 0x564957fd4c48 <line:163:1, line:170:4> col:4 referenced __locale_t 'struct __locale_struct *'
| `-PointerType 0x564957fd4bf0 'struct __locale_struct *'
|   `-ElaboratedType 0x564957fd4b80 'struct __locale_struct' sugar
|     `-RecordType 0x564957fd4640 'struct __locale_struct'
|       `-Record 0x564957fd45b8 '__locale_struct'
|-TypedefDecl 0x564957fd4cf8 <line:171:1, col:20> col:20 locale_t '__locale_t':'struct __locale_struct *'
| `-TypedefType 0x564957fd4cc0 '__locale_t' sugar
|   |-Typedef 0x564957fd4c48 '__locale_t'
|   `-PointerType 0x564957fd4bf0 'struct __locale_struct *'
|     `-ElaboratedType 0x564957fd4b80 'struct __locale_struct' sugar
|       `-RecordType 0x564957fd4640 'struct __locale_struct'
|         `-Record 0x564957fd45b8 '__locale_struct'
|-FunctionDecl 0x564957fd6110 <line:172:1, line:175:63> line:172:15 strftime_l 'size_t (char *restrict, size_t, const char *restrict, const struct tm *restrict, __locale_t)' extern
| |-ParmVarDecl 0x564957fd4d68 <col:27, col:44> col:44 __s 'char *restrict'
| |-ParmVarDecl 0x564957fd4de0 <col:49, col:56> col:56 __maxsize 'size_t':'unsigned long'
| |-ParmVarDecl 0x564957fd4e60 <line:173:6, col:29> col:29 __format 'const char *restrict'
| |-ParmVarDecl 0x564957fd4ef0 <line:174:6, col:34> col:34 __tp 'const struct tm *restrict'
| |-ParmVarDecl 0x564957fd4f68 <line:175:6, col:17> col:17 __loc '__locale_t':'struct __locale_struct *'
| `-NoThrowAttr 0x564957fd61d8 <col:40>
|-FunctionDecl 0x564957fd63c8 <line:177:1, col:89> col:19 gmtime 'struct tm *(const time_t *)' extern
| |-ParmVarDecl 0x564957fd62a0 <col:27, col:41> col:41 __timer 'const time_t *'
| `-NoThrowAttr 0x564957fd6470 <col:66>
|-FunctionDecl 0x564957fd6580 <line:178:1, col:92> col:19 localtime 'struct tm *(const time_t *)' extern
| |-ParmVarDecl 0x564957fd64d8 <col:30, col:44> col:44 __timer 'const time_t *'
| `-NoThrowAttr 0x564957fd6628 <col:69>
|-FunctionDecl 0x564957fd6858 <line:180:1, line:181:75> line:180:19 gmtime_r 'struct tm *(const time_t *restrict, struct tm *restrict)' extern
| |-ParmVarDecl 0x564957fd6690 <col:29, col:54> col:54 __timer 'const time_t *restrict'
| |-ParmVarDecl 0x564957fd6720 <line:181:8, col:30> col:30 __tp 'struct tm *restrict'
| `-NoThrowAttr 0x564957fd6908 <col:52>
|-FunctionDecl 0x564957fd6ab0 <line:182:1, line:183:78> line:182:19 localtime_r 'struct tm *(const time_t *restrict, struct tm *restrict)' extern
| |-ParmVarDecl 0x564957fd6970 <col:32, col:57> col:57 __timer 'const time_t *restrict'
| |-ParmVarDecl 0x564957fd6a00 <line:183:11, col:33> col:33 __tp 'struct tm *restrict'
| `-NoThrowAttr 0x564957fd6b60 <col:55>
|-FunctionDecl 0x564957fd6cf8 <line:185:1, col:85> col:14 asctime 'char *(const struct tm *)' extern
| |-ParmVarDecl 0x564957fd6be0 <col:23, col:40> col:40 __tp 'const struct tm *'
| `-NoThrowAttr 0x564957fd6da0 <col:62>
|-FunctionDecl 0x564957fd6f18 <line:186:1, col:83> col:14 ctime 'char *(const time_t *)' extern
| |-ParmVarDecl 0x564957fd6e08 <col:21, col:35> col:35 __timer 'const time_t *'
| `-NoThrowAttr 0x564957fd6fc0 <col:60>
|-FunctionDecl 0x564957fd72b8 <line:188:1, line:189:67> line:188:14 asctime_r 'char *(const struct tm *restrict, char *restrict)' extern
| |-ParmVarDecl 0x564957fd7118 <col:25, col:53> col:53 __tp 'const struct tm *restrict'
| |-ParmVarDecl 0x564957fd7198 <line:189:4, col:21> col:21 __buf 'char *restrict'
| `-NoThrowAttr 0x564957fd7368 <col:44>
|-FunctionDecl 0x564957fd7578 <line:190:1, line:191:72> line:190:14 ctime_r 'char *(const time_t *restrict, char *restrict)' extern
| |-ParmVarDecl 0x564957fd73d0 <col:23, col:48> col:48 __timer 'const time_t *restrict'
| |-ParmVarDecl 0x564957fd7450 <line:191:9, col:26> col:26 __buf 'char *restrict'
| `-NoThrowAttr 0x564957fd7628 <col:49>
|-VarDecl 0x564957fd7728 <line:192:1, col:24> col:14 __tzname 'char *[2]' extern
|-VarDecl 0x564957fd77a8 <line:193:1, col:12> col:12 __daylight 'int' extern
|-VarDecl 0x564957fd7828 <line:194:1, col:17> col:17 __timezone 'long' extern
|-VarDecl 0x564957fd78f0 <line:195:1, col:22> col:14 tzname 'char *[2]' extern
|-FunctionDecl 0x564957fd7a20 <line:196:1, col:65> col:13 tzset 'void (void)' extern
| `-NoThrowAttr 0x564957fd7ac0 <col:42>
|-VarDecl 0x564957fd7b30 <line:197:1, col:12> col:12 daylight 'int' extern
|-VarDecl 0x564957fd7bb0 <line:198:1, col:17> col:17 timezone 'long' extern
|-FunctionDecl 0x564957fd7d38 <line:199:1, col:80> col:12 stime 'int (const time_t *)' extern
| |-ParmVarDecl 0x564957fd7c28 <col:19, col:33> col:33 __when 'const time_t *'
| `-NoThrowAttr 0x564957fd7de0 <col:57>
|-FunctionDecl 0x564957fd7ef0 <line:200:1, col:79> col:15 timegm 'time_t (struct tm *)' extern
| |-ParmVarDecl 0x564957fd7e60 <col:23, col:34> col:34 __tp 'struct tm *'
| `-NoThrowAttr 0x564957fd7f98 <col:56>
|-FunctionDecl 0x564957fd80d0 <line:201:1, col:82> col:15 timelocal 'time_t (struct tm *)' extern
| |-ParmVarDecl 0x564957fd8018 <col:26, col:37> col:37 __tp 'struct tm *'
| `-NoThrowAttr 0x564957fd8178 <col:59>
|-FunctionDecl 0x564957fd8280 <line:202:1, col:99> col:12 dysize 'int (int)' extern
| |-ParmVarDecl 0x564957fd81e8 <col:20, col:24> col:24 __year 'int'
| |-NoThrowAttr 0x564957fd8328 <col:48>
| `-ConstAttr 0x564957fd8380 <col:89>
|-FunctionDecl 0x564957fd85e8 <line:203:1, line:204:37> line:203:12 nanosleep 'int (const struct timespec *, struct timespec *)' extern
| |-ParmVarDecl 0x564957fd8438 <col:23, col:46> col:46 __requested_time 'const struct timespec *'
| `-ParmVarDecl 0x564957fd84c8 <line:204:9, col:26> col:26 __remaining 'struct timespec *'
|-FunctionDecl 0x564957fd8848 <line:205:1, col:111> col:12 clock_getres 'int (clockid_t, struct timespec *)' extern
| |-ParmVarDecl 0x564957fd86d8 <col:26, col:36> col:36 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x564957fd8768 <col:48, col:65> col:65 __res 'struct timespec *'
| `-NoThrowAttr 0x564957fd88f8 <col:88>
|-FunctionDecl 0x564957fd8a90 <line:206:1, col:111> col:12 clock_gettime 'int (clockid_t, struct timespec *)' extern
| |-ParmVarDecl 0x564957fd8960 <col:27, col:37> col:37 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x564957fd89f0 <col:49, col:66> col:66 __tp 'struct timespec *'
| `-NoThrowAttr 0x564957fd8b40 <col:88>
|-FunctionDecl 0x564957fd8d58 <line:207:1, line:208:45> line:207:12 clock_settime 'int (clockid_t, const struct timespec *)' extern
| |-ParmVarDecl 0x564957fd8ba8 <col:27, col:37> col:37 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x564957fd8c38 <col:49, col:72> col:72 __tp 'const struct timespec *'
| `-NoThrowAttr 0x564957fd8e08 <line:208:22>
|-FunctionDecl 0x564957fd9178 <line:209:1, line:211:30> line:209:12 clock_nanosleep 'int (clockid_t, int, const struct timespec *, struct timespec *)' extern
| |-ParmVarDecl 0x564957fd8e70 <col:29, col:39> col:39 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x564957fd8ef0 <col:51, col:55> col:55 __flags 'int'
| |-ParmVarDecl 0x564957fd8f80 <line:210:8, col:31> col:31 __req 'const struct timespec *'
| `-ParmVarDecl 0x564957fd9010 <line:211:8, col:25> col:25 __rem 'struct timespec *'
|-FunctionDecl 0x564957fd9478 <line:212:1, col:108> col:12 clock_getcpuclockid 'int (pid_t, clockid_t *)' extern
| |-ParmVarDecl 0x564957fd9278 <col:33, col:39> col:39 __pid 'pid_t':'int'
| |-ParmVarDecl 0x564957fd9350 <col:46, col:57> col:57 __clock_id 'clockid_t *'
| `-NoThrowAttr 0x564957fd9528 <col:85>
|-FunctionDecl 0x564957fd9918 <line:213:1, line:215:75> line:213:12 timer_create 'int (clockid_t, struct sigevent *restrict, timer_t *restrict)' extern
| |-ParmVarDecl 0x564957fd9590 <col:26, col:36> col:36 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x564957fd96c8 <line:214:5, col:33> col:33 __evp 'struct sigevent *restrict'
| |-ParmVarDecl 0x564957fd97d0 <line:215:5, col:25> col:25 __timerid 'timer_t *restrict'
| `-NoThrowAttr 0x564957fd99d0 <col:52>
|-FunctionDecl 0x564957fd9b48 <line:216:1, col:84> col:12 timer_delete 'int (timer_t)' extern
| |-ParmVarDecl 0x564957fd9a38 <col:26, col:34> col:34 __timerid 'timer_t':'void *'
| `-NoThrowAttr 0x564957fd9bf0 <col:61>
|-FunctionDecl 0x564957fda0f0 <line:217:1, line:219:85> line:217:12 timer_settime 'int (timer_t, int, const struct itimerspec *restrict, struct itimerspec *restrict)' extern
| |-ParmVarDecl 0x564957fd9c58 <col:27, col:35> col:35 __timerid 'timer_t':'void *'
| |-ParmVarDecl 0x564957fd9cd8 <col:46, col:50> col:50 __flags 'int'
| |-ParmVarDecl 0x564957fd9e08 <line:218:6, col:42> col:42 __value 'const struct itimerspec *restrict'
| |-ParmVarDecl 0x564957fd9ef8 <line:219:6, col:36> col:36 __ovalue 'struct itimerspec *restrict'
| `-NoThrowAttr 0x564957fda1b0 <col:62>
|-FunctionDecl 0x564957fda3c8 <line:220:1, line:221:45> line:220:12 timer_gettime 'int (timer_t, struct itimerspec *)' extern
| |-ParmVarDecl 0x564957fda218 <col:27, col:35> col:35 __timerid 'timer_t':'void *'
| |-ParmVarDecl 0x564957fda2a8 <col:46, col:65> col:65 __value 'struct itimerspec *'
| `-NoThrowAttr 0x564957fda478 <line:221:22>
|-FunctionDecl 0x564957fda578 <line:222:1, col:88> col:12 timer_getoverrun 'int (timer_t)' extern
| |-ParmVarDecl 0x564957fda4e0 <col:30, col:38> col:38 __timerid 'timer_t':'void *'
| `-NoThrowAttr 0x564957fda620 <col:65>
|-TypedefDecl 0x564957fda690 <line:224:1, col:27> col:27 referenced pthread_t 'unsigned long'
| `-BuiltinType 0x564957f64fd0 'unsigned long'
|-RecordDecl 0x564957fda6e8 <line:225:1, line:229:1> line:225:7 union pthread_attr_t definition
| |-FieldDecl 0x564957fda830 <line:227:3, col:17> col:8 __size 'char [56]'
| `-FieldDecl 0x564957fda898 <line:228:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x564957fda948 <line:230:1, col:30> col:30 referenced pthread_attr_t 'union pthread_attr_t':'union pthread_attr_t'
| `-ElaboratedType 0x564957fda8f0 'union pthread_attr_t' sugar
|   `-RecordType 0x564957fda770 'union pthread_attr_t'
|     `-Record 0x564957fda6e8 'pthread_attr_t'
|-RecordDecl 0x564957fda9a0 <line:231:9, line:235:1> line:231:16 struct __pthread_internal_list definition
| |-FieldDecl 0x564957fdab18 <line:233:3, col:35> col:35 __prev 'struct __pthread_internal_list *'
| `-FieldDecl 0x564957fdab90 <line:234:3, col:35> col:35 __next 'struct __pthread_internal_list *'
|-TypedefDecl 0x564957fdac40 <line:231:1, line:235:3> col:3 referenced __pthread_list_t 'struct __pthread_internal_list':'struct __pthread_internal_list'
| `-ElaboratedType 0x564957fdabe0 'struct __pthread_internal_list' sugar
|   `-RecordType 0x564957fdaa20 'struct __pthread_internal_list'
|     `-Record 0x564957fda9a0 '__pthread_internal_list'
|-RecordDecl 0x564957fdacb0 <line:236:9, line:250:1> line:236:9 union definition
| |-RecordDecl 0x564957fdad58 parent 0x564957f64e18 <line:238:3, line:247:3> line:238:10 struct __pthread_mutex_s definition
| | |-FieldDecl 0x564957fdae30 <line:240:5, col:9> col:9 __lock 'int'
| | |-FieldDecl 0x564957fdae98 <line:241:5, col:18> col:18 __count 'unsigned int'
| | |-FieldDecl 0x564957fdaf00 <line:242:5, col:9> col:9 __owner 'int'
| | |-FieldDecl 0x564957fdaf68 <line:243:5, col:18> col:18 __nusers 'unsigned int'
| | |-FieldDecl 0x564957fdafd0 <line:244:5, col:9> col:9 __kind 'int'
| | |-FieldDecl 0x564957fdb038 <line:245:5, col:9> col:9 __spins 'int'
| | `-FieldDecl 0x564957fdf110 <line:246:5, col:22> col:22 __list '__pthread_list_t':'struct __pthread_internal_list'
| |-FieldDecl 0x564957fdf1c0 <line:238:3, line:247:5> col:5 __data 'struct __pthread_mutex_s':'struct __pthread_mutex_s'
| |-FieldDecl 0x564957fdf2b0 <line:248:3, col:17> col:8 __size 'char [40]'
| `-FieldDecl 0x564957fdf318 <line:249:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x564957fdf4a0 <line:236:1, line:250:3> col:3 referenced pthread_mutex_t 'union pthread_mutex_t':'pthread_mutex_t'
| `-ElaboratedType 0x564957fdf440 'union pthread_mutex_t' sugar
|   `-RecordType 0x564957fdad30 'pthread_mutex_t'
|     `-Record 0x564957fdacb0 ''
|-RecordDecl 0x564957fdf510 <line:251:9, line:255:1> line:251:9 union definition
| |-FieldDecl 0x564957fdf650 <line:253:3, col:16> col:8 __size 'char [4]'
| `-FieldDecl 0x564957fdf6b8 <line:254:3, col:7> col:7 __align 'int'
|-TypedefDecl 0x564957fdf770 <line:251:1, line:255:3> col:3 referenced pthread_mutexattr_t 'union pthread_mutexattr_t':'pthread_mutexattr_t'
| `-ElaboratedType 0x564957fdf710 'union pthread_mutexattr_t' sugar
|   `-RecordType 0x564957fdf590 'pthread_mutexattr_t'
|     `-Record 0x564957fdf510 ''
|-RecordDecl 0x564957fdf7e0 <line:256:9, line:271:1> line:256:9 union definition
| |-RecordDecl 0x564957fdf888 <line:258:3, line:268:3> line:258:3 struct definition
| | |-FieldDecl 0x564957fdf950 <line:260:5, col:9> col:9 __lock 'int'
| | |-FieldDecl 0x564957fdf9b8 <line:261:5, col:18> col:18 __futex 'unsigned int'
| | |-FieldDecl 0x564957fdfa20 <line:262:19, col:42> col:42 __total_seq 'unsigned long long'
| | |-FieldDecl 0x564957fdfa88 <line:263:19, col:42> col:42 __wakeup_seq 'unsigned long long'
| | |-FieldDecl 0x564957fdfaf0 <line:264:19, col:42> col:42 __woken_seq 'unsigned long long'
| | |-FieldDecl 0x564957fdfb58 <line:265:5, col:11> col:11 __mutex 'void *'
| | |-FieldDecl 0x564957fdfbc0 <line:266:5, col:18> col:18 __nwaiters 'unsigned int'
| | `-FieldDecl 0x564957fdfc28 <line:267:5, col:18> col:18 __broadcast_seq 'unsigned int'
| |-FieldDecl 0x564957fdfce0 <line:258:3, line:268:5> col:5 __data 'struct (anonymous struct at ./split_2/safe011_pso.opt_false-unreach-call.i:258:3)':'struct pthread_cond_t::(anonymous at ./split_2/safe011_pso.opt_false-unreach-call.i:258:3)'
| |-FieldDecl 0x564957fdfdd0 <line:269:3, col:17> col:8 __size 'char [48]'
| `-FieldDecl 0x564957fdfe38 <line:270:17, col:31> col:31 __align 'long long'
|-TypedefDecl 0x564957fdff70 <line:256:1, line:271:3> col:3 referenced pthread_cond_t 'union pthread_cond_t':'pthread_cond_t'
| `-ElaboratedType 0x564957fdff10 'union pthread_cond_t' sugar
|   `-RecordType 0x564957fdf860 'pthread_cond_t'
|     `-Record 0x564957fdf7e0 ''
|-RecordDecl 0x564957fdffe0 <line:272:9, line:276:1> line:272:9 union definition
| |-FieldDecl 0x564957fe1130 <line:274:3, col:16> col:8 __size 'char [4]'
| `-FieldDecl 0x564957fe1198 <line:275:3, col:7> col:7 __align 'int'
|-TypedefDecl 0x564957fe1250 <line:272:1, line:276:3> col:3 referenced pthread_condattr_t 'union pthread_condattr_t':'pthread_condattr_t'
| `-ElaboratedType 0x564957fe11f0 'union pthread_condattr_t' sugar
|   `-RecordType 0x564957fe0060 'pthread_condattr_t'
|     `-Record 0x564957fdffe0 ''
|-TypedefDecl 0x564957fe12d8 <line:277:1, col:22> col:22 referenced pthread_key_t 'unsigned int'
| `-BuiltinType 0x564957f64fb0 'unsigned int'
|-TypedefDecl 0x564957fe1348 <line:278:1, col:13> col:13 referenced pthread_once_t 'int'
| `-BuiltinType 0x564957f64f10 'int'
|-RecordDecl 0x564957fe13a0 <line:279:9, line:297:1> line:279:9 union definition
| |-RecordDecl 0x564957fe1448 <line:281:3, line:294:3> line:281:3 struct definition
| | |-FieldDecl 0x564957fe1510 <line:283:5, col:9> col:9 __lock 'int'
| | |-FieldDecl 0x564957fe1578 <line:284:5, col:18> col:18 __nr_readers 'unsigned int'
| | |-FieldDecl 0x564957fe15e0 <line:285:5, col:18> col:18 __readers_wakeup 'unsigned int'
| | |-FieldDecl 0x564957fe1648 <line:286:5, col:18> col:18 __writer_wakeup 'unsigned int'
| | |-FieldDecl 0x564957fe16b0 <line:287:5, col:18> col:18 __nr_readers_queued 'unsigned int'
| | |-FieldDecl 0x564957fe1718 <line:288:5, col:18> col:18 __nr_writers_queued 'unsigned int'
| | |-FieldDecl 0x564957fe1780 <line:289:5, col:9> col:9 __writer 'int'
| | |-FieldDecl 0x564957fe17e8 <line:290:5, col:9> col:9 __shared 'int'
| | |-FieldDecl 0x564957fe1850 <line:291:5, col:23> col:23 __pad1 'unsigned long'
| | |-FieldDecl 0x564957fe18b8 <line:292:5, col:23> col:23 __pad2 'unsigned long'
| | `-FieldDecl 0x564957fe1920 <line:293:5, col:18> col:18 __flags 'unsigned int'
| |-FieldDecl 0x564957fe19d0 <line:281:3, line:294:5> col:5 __data 'struct (anonymous struct at ./split_2/safe011_pso.opt_false-unreach-call.i:281:3)':'struct pthread_rwlock_t::(anonymous at ./split_2/safe011_pso.opt_false-unreach-call.i:281:3)'
| |-FieldDecl 0x564957fe1a78 <line:295:3, col:17> col:8 __size 'char [56]'
| `-FieldDecl 0x564957fe1ae0 <line:296:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x564957fe1c30 <line:279:1, line:297:3> col:3 referenced pthread_rwlock_t 'union pthread_rwlock_t':'pthread_rwlock_t'
| `-ElaboratedType 0x564957fe1bd0 'union pthread_rwlock_t' sugar
|   `-RecordType 0x564957fe1420 'pthread_rwlock_t'
|     `-Record 0x564957fe13a0 ''
|-RecordDecl 0x564957fe1ca0 <line:298:9, line:302:1> line:298:9 union definition
| |-FieldDecl 0x564957fe1de0 <line:300:3, col:16> col:8 __size 'char [8]'
| `-FieldDecl 0x564957fe1e48 <line:301:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x564957fe1f00 <line:298:1, line:302:3> col:3 referenced pthread_rwlockattr_t 'union pthread_rwlockattr_t':'pthread_rwlockattr_t'
| `-ElaboratedType 0x564957fe1ea0 'union pthread_rwlockattr_t' sugar
|   `-RecordType 0x564957fe1d20 'pthread_rwlockattr_t'
|     `-Record 0x564957fe1ca0 ''
|-TypedefDecl 0x564957fe1f88 <line:303:1, col:22> col:22 referenced pthread_spinlock_t 'volatile int'
| `-QualType 0x564957f64f14 'volatile int' volatile
|   `-BuiltinType 0x564957f64f10 'int'
|-RecordDecl 0x564957fe1fe0 <line:304:9, line:308:1> line:304:9 union definition
| |-FieldDecl 0x564957fe3140 <line:306:3, col:17> col:8 __size 'char [32]'
| `-FieldDecl 0x564957fe31a8 <line:307:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x564957fe3260 <line:304:1, line:308:3> col:3 referenced pthread_barrier_t 'union pthread_barrier_t':'pthread_barrier_t'
| `-ElaboratedType 0x564957fe3200 'union pthread_barrier_t' sugar
|   `-RecordType 0x564957fe2060 'pthread_barrier_t'
|     `-Record 0x564957fe1fe0 ''
|-RecordDecl 0x564957fe32d0 <line:309:9, line:313:1> line:309:9 union definition
| |-FieldDecl 0x564957fe33d0 <line:311:3, col:16> col:8 __size 'char [4]'
| `-FieldDecl 0x564957fe3438 <line:312:3, col:7> col:7 __align 'int'
|-TypedefDecl 0x564957fe34f0 <line:309:1, line:313:3> col:3 referenced pthread_barrierattr_t 'union pthread_barrierattr_t':'pthread_barrierattr_t'
| `-ElaboratedType 0x564957fe3490 'union pthread_barrierattr_t' sugar
|   `-RecordType 0x564957fe3350 'pthread_barrierattr_t'
|     `-Record 0x564957fe32d0 ''
|-TypedefDecl 0x564957fe3608 <line:314:1, col:29> col:18 referenced __jmp_buf 'long [8]'
| `-ConstantArrayType 0x564957fe35a0 'long [8]' 8 
|   `-BuiltinType 0x564957f64f30 'long'
|-EnumDecl 0x564957fe3660 <line:315:1, line:319:1> line:315:1
| |-EnumConstantDecl 0x564957fe3728 <line:317:3> col:3 PTHREAD_CREATE_JOINABLE 'int'
| `-EnumConstantDecl 0x564957fe3778 <line:318:3> col:3 PTHREAD_CREATE_DETACHED 'int'
|-EnumDecl 0x564957fe37c8 <line:320:1, line:331:1> line:320:1
| |-EnumConstantDecl 0x564957fe3898 <line:322:3> col:3 referenced PTHREAD_MUTEX_TIMED_NP 'int'
| |-EnumConstantDecl 0x564957fe38e8 <line:323:3> col:3 referenced PTHREAD_MUTEX_RECURSIVE_NP 'int'
| |-EnumConstantDecl 0x564957fe3938 <line:324:3> col:3 referenced PTHREAD_MUTEX_ERRORCHECK_NP 'int'
| |-EnumConstantDecl 0x564957fe3988 <line:325:3> col:3 PTHREAD_MUTEX_ADAPTIVE_NP 'int'
| |-EnumConstantDecl 0x564957fe3a10 <line:327:3, col:26> col:3 referenced PTHREAD_MUTEX_NORMAL 'int'
| | `-ConstantExpr 0x564957fe39f8 <col:26> 'int'
| |   `-DeclRefExpr 0x564957fe39d8 <col:26> 'int' EnumConstant 0x564957fe3898 'PTHREAD_MUTEX_TIMED_NP' 'int'
| |-EnumConstantDecl 0x564957fe3a98 <line:328:3, col:29> col:3 PTHREAD_MUTEX_RECURSIVE 'int'
| | `-ConstantExpr 0x564957fe3a80 <col:29> 'int'
| |   `-DeclRefExpr 0x564957fe3a60 <col:29> 'int' EnumConstant 0x564957fe38e8 'PTHREAD_MUTEX_RECURSIVE_NP' 'int'
| |-EnumConstantDecl 0x564957fe3b20 <line:329:3, col:30> col:3 PTHREAD_MUTEX_ERRORCHECK 'int'
| | `-ConstantExpr 0x564957fe3b08 <col:30> 'int'
| |   `-DeclRefExpr 0x564957fe3ae8 <col:30> 'int' EnumConstant 0x564957fe3938 'PTHREAD_MUTEX_ERRORCHECK_NP' 'int'
| `-EnumConstantDecl 0x564957fe3ba8 <line:330:3, col:27> col:3 PTHREAD_MUTEX_DEFAULT 'int'
|   `-ConstantExpr 0x564957fe3b90 <col:27> 'int'
|     `-DeclRefExpr 0x564957fe3b70 <col:27> 'int' EnumConstant 0x564957fe3a10 'PTHREAD_MUTEX_NORMAL' 'int'
|-EnumDecl 0x564957fe3bf8 <line:332:1, line:338:1> line:332:1
| |-EnumConstantDecl 0x564957fe3cc8 <line:334:3> col:3 referenced PTHREAD_MUTEX_STALLED 'int'
| |-EnumConstantDecl 0x564957fe3d50 <line:335:3, col:30> col:3 PTHREAD_MUTEX_STALLED_NP 'int'
| | `-ConstantExpr 0x564957fe3d38 <col:30> 'int'
| |   `-DeclRefExpr 0x564957fe3d18 <col:30> 'int' EnumConstant 0x564957fe3cc8 'PTHREAD_MUTEX_STALLED' 'int'
| |-EnumConstantDecl 0x564957fe3da0 <line:336:3> col:3 referenced PTHREAD_MUTEX_ROBUST 'int'
| `-EnumConstantDecl 0x564957fe3e28 <line:337:3, col:29> col:3 PTHREAD_MUTEX_ROBUST_NP 'int'
|   `-ConstantExpr 0x564957fe3e10 <col:29> 'int'
|     `-DeclRefExpr 0x564957fe3df0 <col:29> 'int' EnumConstant 0x564957fe3da0 'PTHREAD_MUTEX_ROBUST' 'int'
|-EnumDecl 0x564957fe3e78 <line:339:1, line:344:1> line:339:1
| |-EnumConstantDecl 0x564957fe3f48 <line:341:3> col:3 PTHREAD_PRIO_NONE 'int'
| |-EnumConstantDecl 0x564957fe3f98 <line:342:3> col:3 PTHREAD_PRIO_INHERIT 'int'
| `-EnumConstantDecl 0x564957fe3fe8 <line:343:3> col:3 PTHREAD_PRIO_PROTECT 'int'
|-EnumDecl 0x564957fe4038 <line:345:1, line:351:1> line:345:1
| |-EnumConstantDecl 0x564957fe4150 <line:347:3> col:3 referenced PTHREAD_RWLOCK_PREFER_READER_NP 'int'
| |-EnumConstantDecl 0x564957fe41a0 <line:348:3> col:3 PTHREAD_RWLOCK_PREFER_WRITER_NP 'int'
| |-EnumConstantDecl 0x564957fe41f0 <line:349:3> col:3 PTHREAD_RWLOCK_PREFER_WRITER_NONRECURSIVE_NP 'int'
| `-EnumConstantDecl 0x564957fe4278 <line:350:3, col:31> col:3 PTHREAD_RWLOCK_DEFAULT_NP 'int'
|   `-ConstantExpr 0x564957fe4260 <col:31> 'int'
|     `-DeclRefExpr 0x564957fe4240 <col:31> 'int' EnumConstant 0x564957fe4150 'PTHREAD_RWLOCK_PREFER_READER_NP' 'int'
|-EnumDecl 0x564957fe42c8 <line:352:1, line:356:1> line:352:1
| |-EnumConstantDecl 0x564957fe4398 <line:354:3> col:3 PTHREAD_INHERIT_SCHED 'int'
| `-EnumConstantDecl 0x564957fe43e8 <line:355:3> col:3 PTHREAD_EXPLICIT_SCHED 'int'
|-EnumDecl 0x564957fe4438 <line:357:1, line:361:1> line:357:1
| |-EnumConstantDecl 0x564957fe4508 <line:359:3> col:3 PTHREAD_SCOPE_SYSTEM 'int'
| `-EnumConstantDecl 0x564957fe4558 <line:360:3> col:3 PTHREAD_SCOPE_PROCESS 'int'
|-EnumDecl 0x564957fe45a8 <line:362:1, line:366:1> line:362:1
| |-EnumConstantDecl 0x564957fe4678 <line:364:3> col:3 PTHREAD_PROCESS_PRIVATE 'int'
| `-EnumConstantDecl 0x564957fe46c8 <line:365:3> col:3 PTHREAD_PROCESS_SHARED 'int'
|-RecordDecl 0x564957fe4718 <line:367:1, line:373:1> line:367:8 struct _pthread_cleanup_buffer definition
| |-FieldDecl 0x564957fe4958 <line:369:3, col:28> col:10 __routine 'void (*)(void *)'
| |-FieldDecl 0x564957fe49c0 <line:370:3, col:9> col:9 __arg 'void *'
| |-FieldDecl 0x564957fe4a28 <line:371:3, col:7> col:7 __canceltype 'int'
| `-FieldDecl 0x564957fe4b48 <line:372:3, col:35> col:35 __prev 'struct _pthread_cleanup_buffer *'
|-EnumDecl 0x564957fe4b98 <line:374:1, line:378:1> line:374:1
| |-EnumConstantDecl 0x564957fe4c68 <line:376:3> col:3 PTHREAD_CANCEL_ENABLE 'int'
| `-EnumConstantDecl 0x564957fe4cb8 <line:377:3> col:3 PTHREAD_CANCEL_DISABLE 'int'
|-EnumDecl 0x564957fe4d08 <line:379:1, line:383:1> line:379:1
| |-EnumConstantDecl 0x564957fe4dd8 <line:381:3> col:3 PTHREAD_CANCEL_DEFERRED 'int'
| `-EnumConstantDecl 0x564957fe4e28 <line:382:3> col:3 PTHREAD_CANCEL_ASYNCHRONOUS 'int'
|-FunctionDecl 0x564957fe5488 <line:385:1, line:388:96> line:385:12 used pthread_create 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' extern
| |-ParmVarDecl 0x564957fe4f20 <col:28, col:50> col:50 __newthread 'pthread_t *restrict'
| |-ParmVarDecl 0x564957fe5030 <line:386:7, col:40> col:40 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x564957fe5270 <line:387:7, col:39> col:15 __start_routine 'void *(*)(void *)'
| |-ParmVarDecl 0x564957fe52f0 <line:388:7, col:24> col:24 __arg 'void *restrict'
| |-NoThrowAttr 0x564957fe5548 <col:47>
| |-NonNullAttr 0x564957fe55a0 <col:77, col:94> 1 3
| `-CallbackAttr 0x564957fe55d8 <line:385:12> Implicit 2 3
|-FunctionDecl 0x564957fe5700 <line:389:1, col:72> col:13 pthread_exit 'void (void *) __attribute__((noreturn))' extern
| `-ParmVarDecl 0x564957fe5630 <col:27, col:33> col:33 __retval 'void *'
|-FunctionDecl 0x564957fe5958 <line:390:1, col:64> col:12 pthread_join 'int (pthread_t, void **)' extern
| |-ParmVarDecl 0x564957fe57b8 <col:26, col:36> col:36 __th 'pthread_t':'unsigned long'
| `-ParmVarDecl 0x564957fe5838 <col:42, col:49> col:49 __thread_return 'void **'
|-FunctionDecl 0x564957fe5b28 <line:391:1, col:83> col:12 pthread_detach 'int (pthread_t)' extern
| |-ParmVarDecl 0x564957fe5a18 <col:28, col:38> col:38 __th 'pthread_t':'unsigned long'
| `-NoThrowAttr 0x564957fe5bd0 <col:60>
|-FunctionDecl 0x564957fe5d20 <line:392:1, col:105> col:18 pthread_self 'pthread_t (void)' extern
| |-NoThrowAttr 0x564957fe5dc0 <col:54>
| `-ConstAttr 0x564957fe5e18 <col:95>
|-FunctionDecl 0x564957fe5fe8 <line:393:1, line:394:70> line:393:12 pthread_equal 'int (pthread_t, pthread_t)' extern
| |-ParmVarDecl 0x564957fe5e50 <col:27, col:37> col:37 __thread1 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x564957fe5ec8 <col:48, col:58> col:58 __thread2 'pthread_t':'unsigned long'
| |-NoThrowAttr 0x564957fe6098 <line:394:19>
| `-ConstAttr 0x564957fe60f0 <col:60>
|-FunctionDecl 0x564957fe7b08 <line:395:1, col:128> col:12 pthread_attr_init 'int (pthread_attr_t *)' extern
| |-ParmVarDecl 0x564957fe79d0 <col:31, col:47> col:47 __attr 'pthread_attr_t *'
| |-NoThrowAttr 0x564957fe7bb0 <col:71>
| `-NonNullAttr 0x564957fe7c08 <col:112, col:126> 1
|-FunctionDecl 0x564957fe7d10 <line:396:1, line:397:79> line:396:12 pthread_attr_destroy 'int (pthread_attr_t *)' extern
| |-ParmVarDecl 0x564957fe7c58 <col:34, col:50> col:50 __attr 'pthread_attr_t *'
| |-NoThrowAttr 0x564957fe7db8 <line:397:22>
| `-NonNullAttr 0x564957fe7e10 <col:63, col:77> 1
|-FunctionDecl 0x564957fe8038 <line:398:1, line:400:82> line:398:12 pthread_attr_getdetachstate 'int (const pthread_attr_t *, int *)' extern
| |-ParmVarDecl 0x564957fe7e58 <col:41, col:63> col:63 __attr 'const pthread_attr_t *'
| |-ParmVarDecl 0x564957fe7ed8 <line:399:6, col:11> col:11 __detachstate 'int *'
| |-NoThrowAttr 0x564957fe80e8 <line:400:22>
| `-NonNullAttr 0x564957fe8140 <col:63, col:80> 1 2
|-FunctionDecl 0x564957fe8348 <line:401:1, line:403:79> line:401:12 pthread_attr_setdetachstate 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x564957fe8188 <col:41, col:57> col:57 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x564957fe8208 <line:402:6, col:10> col:10 __detachstate 'int'
| |-NoThrowAttr 0x564957fe83f8 <line:403:22>
| `-NonNullAttr 0x564957fe8450 <col:63, col:77> 1
|-FunctionDecl 0x564957fe86a8 <line:404:1, line:406:82> line:404:12 pthread_attr_getguardsize 'int (const pthread_attr_t *, size_t *)' extern
| |-ParmVarDecl 0x564957fe8498 <col:39, col:61> col:61 __attr 'const pthread_attr_t *'
| |-ParmVarDecl 0x564957fe8540 <line:405:11, col:19> col:19 __guardsize 'size_t *'
| |-NoThrowAttr 0x564957fe8758 <line:406:22>
| `-NonNullAttr 0x564957fe87b0 <col:63, col:80> 1 2
|-FunctionDecl 0x564957fe99e8 <line:407:1, line:409:79> line:407:12 pthread_attr_setguardsize 'int (pthread_attr_t *, size_t)' extern
| |-ParmVarDecl 0x564957fe87f8 <col:39, col:55> col:55 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x564957fe8870 <line:408:11, col:18> col:18 __guardsize 'size_t':'unsigned long'
| |-NoThrowAttr 0x564957fe9a98 <line:409:22>
| `-NonNullAttr 0x564957fe9af0 <col:63, col:77> 1
|-FunctionDecl 0x564957fe9d28 <line:410:1, line:412:82> line:410:12 pthread_attr_getschedparam 'int (const pthread_attr_t *restrict, struct sched_param *restrict)' extern
| |-ParmVarDecl 0x564957fe9b38 <col:40, col:73> col:73 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x564957fe9bc8 <line:411:12, col:43> col:43 __param 'struct sched_param *restrict'
| |-NoThrowAttr 0x564957fe9dd8 <line:412:22>
| `-NonNullAttr 0x564957fe9e30 <col:63, col:80> 1 2
|-FunctionDecl 0x564957fea068 <line:413:1, line:415:97> line:413:12 pthread_attr_setschedparam 'int (pthread_attr_t *restrict, const struct sched_param *restrict)' extern
| |-ParmVarDecl 0x564957fe9e78 <col:40, col:67> col:67 __attr 'pthread_attr_t *restrict'
| |-ParmVarDecl 0x564957fe9f08 <line:414:12, line:415:12> col:12 __param 'const struct sched_param *restrict'
| |-NoThrowAttr 0x564957fea118 <col:37>
| `-NonNullAttr 0x564957fea170 <col:78, col:95> 1 2
|-FunctionDecl 0x564957fea358 <line:416:1, line:418:82> line:416:12 pthread_attr_getschedpolicy 'int (const pthread_attr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x564957fea1b8 <col:41, line:417:6> col:6 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x564957fea238 <col:14, col:30> col:30 __policy 'int *restrict'
| |-NoThrowAttr 0x564957fea408 <line:418:22>
| `-NonNullAttr 0x564957fea460 <col:63, col:80> 1 2
|-FunctionDecl 0x564957fea5e8 <line:419:1, line:420:79> line:419:12 pthread_attr_setschedpolicy 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x564957fea4a8 <col:41, col:57> col:57 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x564957fea528 <col:65, col:69> col:69 __policy 'int'
| |-NoThrowAttr 0x564957fea698 <line:420:22>
| `-NonNullAttr 0x564957fea6f0 <col:63, col:77> 1
|-FunctionDecl 0x564957fea898 <line:421:1, line:423:82> line:421:12 pthread_attr_getinheritsched 'int (const pthread_attr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x564957fea738 <col:42, line:422:7> col:7 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x564957fea7b8 <col:15, col:31> col:31 __inherit 'int *restrict'
| |-NoThrowAttr 0x564957fea948 <line:423:22>
| `-NonNullAttr 0x564957fea9c0 <col:63, col:80> 1 2
|-FunctionDecl 0x564957feab48 <line:424:1, line:426:79> line:424:12 pthread_attr_setinheritsched 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x564957feaa08 <col:42, col:58> col:58 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x564957feaa88 <line:425:7, col:11> col:11 __inherit 'int'
| |-NoThrowAttr 0x564957feabf8 <line:426:22>
| `-NonNullAttr 0x564957feac50 <col:63, col:77> 1
|-FunctionDecl 0x564957feadf8 <line:427:1, line:429:82> line:427:12 pthread_attr_getscope 'int (const pthread_attr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x564957feac98 <col:35, col:68> col:68 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x564957fead18 <line:428:7, col:23> col:23 __scope 'int *restrict'
| |-NoThrowAttr 0x564957feaea8 <line:429:22>
| `-NonNullAttr 0x564957feaf00 <col:63, col:80> 1 2
|-FunctionDecl 0x564957feb088 <line:430:1, line:431:79> line:430:12 pthread_attr_setscope 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x564957feaf48 <col:35, col:51> col:51 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x564957feafc8 <col:59, col:63> col:63 __scope 'int'
| |-NoThrowAttr 0x564957feb138 <line:431:22>
| `-NonNullAttr 0x564957feb190 <col:63, col:77> 1
|-FunctionDecl 0x564957feb3b8 <line:432:1, line:434:115> line:432:12 pthread_attr_getstackaddr 'int (const pthread_attr_t *restrict, void **restrict)' extern
| |-ParmVarDecl 0x564957feb1d8 <col:39, line:433:11> col:11 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x564957feb258 <col:19, col:37> col:37 __stackaddr 'void **restrict'
| |-NoThrowAttr 0x564957feb468 <line:434:22>
| |-NonNullAttr 0x564957feb4c0 <col:63, col:80> 1 2
| `-DeprecatedAttr 0x564957feb4f8 <col:100> "" ""
|-FunctionDecl 0x564957feb708 <line:435:1, line:437:112> line:435:12 pthread_attr_setstackaddr 'int (pthread_attr_t *, void *)' extern
| |-ParmVarDecl 0x564957feb548 <col:39, col:55> col:55 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x564957feb5c8 <line:436:11, col:17> col:17 __stackaddr 'void *'
| |-NoThrowAttr 0x564957feb7b8 <line:437:22>
| |-NonNullAttr 0x564957feb810 <col:63, col:77> 1
| `-DeprecatedAttr 0x564957feb848 <col:97> "" ""
|-FunctionDecl 0x564957feba48 <line:438:1, line:440:82> line:438:12 pthread_attr_getstacksize 'int (const pthread_attr_t *restrict, size_t *restrict)' extern
| |-ParmVarDecl 0x564957feb898 <col:39, line:439:11> col:11 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x564957feb910 <col:19, col:38> col:38 __stacksize 'size_t *restrict'
| |-NoThrowAttr 0x564957febaf8 <line:440:22>
| `-NonNullAttr 0x564957febb50 <col:63, col:80> 1 2
|-FunctionDecl 0x564957febcd0 <line:441:1, line:443:79> line:441:12 pthread_attr_setstacksize 'int (pthread_attr_t *, size_t)' extern
| |-ParmVarDecl 0x564957febb98 <col:39, col:55> col:55 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x564957febc10 <line:442:11, col:18> col:18 __stacksize 'size_t':'unsigned long'
| |-NoThrowAttr 0x564957febd80 <line:443:22>
| `-NonNullAttr 0x564957febdd8 <col:63, col:77> 1
|-FunctionDecl 0x564957fec0c8 <line:444:1, line:447:85> line:444:12 pthread_attr_getstack 'int (const pthread_attr_t *restrict, void **restrict, size_t *restrict)' extern
| |-ParmVarDecl 0x564957febe28 <col:35, col:68> col:68 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x564957febea8 <line:445:7, col:25> col:25 __stackaddr 'void **restrict'
| |-ParmVarDecl 0x564957febf20 <line:446:7, col:26> col:26 __stacksize 'size_t *restrict'
| |-NoThrowAttr 0x564957fec180 <line:447:22>
| `-NonNullAttr 0x564957fec1d8 <col:63, col:83> 1 2 3
|-FunctionDecl 0x564957fec488 <line:448:1, line:449:100> line:448:12 pthread_attr_setstack 'int (pthread_attr_t *, void *, size_t)' extern
| |-ParmVarDecl 0x564957fec230 <col:35, col:51> col:51 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x564957fec2b0 <col:59, col:65> col:65 __stackaddr 'void *'
| |-ParmVarDecl 0x564957fec328 <line:449:7, col:14> col:14 __stacksize 'size_t':'unsigned long'
| |-NoThrowAttr 0x564957fec540 <col:43>
| `-NonNullAttr 0x564957fec598 <col:84, col:98> 1
|-FunctionDecl 0x564957fec858 <line:450:1, line:452:79> line:450:12 pthread_setschedparam 'int (pthread_t, int, const struct sched_param *)' extern
| |-ParmVarDecl 0x564957fec5e8 <col:35, col:45> col:45 __target_thread 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x564957fec668 <col:62, col:66> col:66 __policy 'int'
| |-ParmVarDecl 0x564957fec6f8 <line:451:7, col:33> col:33 __param 'const struct sched_param *'
| |-NoThrowAttr 0x564957fec910 <line:452:22>
| `-NonNullAttr 0x564957fec968 <col:63, col:77> 3
|-FunctionDecl 0x564957fecc78 <line:453:1, line:456:82> line:453:12 pthread_getschedparam 'int (pthread_t, int *restrict, struct sched_param *restrict)' extern
| |-ParmVarDecl 0x564957fec9e0 <col:35, col:45> col:45 __target_thread 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x564957feca60 <line:454:7, col:23> col:23 __policy 'int *restrict'
| |-ParmVarDecl 0x564957fecaf0 <line:455:7, col:38> col:38 __param 'struct sched_param *restrict'
| |-NoThrowAttr 0x564957fecd30 <line:456:22>
| `-NonNullAttr 0x564957fecd88 <col:63, col:80> 2 3
|-FunctionDecl 0x564957fecf78 <line:457:1, line:458:45> line:457:12 pthread_setschedprio 'int (pthread_t, int)' extern
| |-ParmVarDecl 0x564957fecdd8 <col:34, col:44> col:44 __target_thread 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x564957fece58 <col:61, col:65> col:65 __prio 'int'
| `-NoThrowAttr 0x564957fed028 <line:458:22>
|-FunctionDecl 0x564957fed3f8 <line:459:1, line:460:71> line:459:12 pthread_once 'int (pthread_once_t *, void (*)(void))' extern
| |-ParmVarDecl 0x564957fed0f0 <col:26, col:42> col:42 __once_control 'pthread_once_t *'
| |-ParmVarDecl 0x564957fed290 <line:460:5, col:33> col:12 __init_routine 'void (*)(void)'
| `-NonNullAttr 0x564957fed4a8 <col:52, col:69> 1 2
|-FunctionDecl 0x564957fed650 <line:461:1, col:64> col:12 pthread_setcancelstate 'int (int, int *)' extern
| |-ParmVarDecl 0x564957fed530 <col:36, col:40> col:40 __state 'int'
| `-ParmVarDecl 0x564957fed5b0 <col:49, col:54> col:54 __oldstate 'int *'
|-FunctionDecl 0x564957fed838 <line:462:1, col:61> col:12 pthread_setcanceltype 'int (int, int *)' extern
| |-ParmVarDecl 0x564957fed718 <col:35, col:39> col:39 __type 'int'
| `-ParmVarDecl 0x564957fed798 <col:47, col:52> col:52 __oldtype 'int *'
|-FunctionDecl 0x564957fed9f0 <line:463:1, col:42> col:12 pthread_cancel 'int (pthread_t)' extern
| `-ParmVarDecl 0x564957fed8f8 <col:28, col:38> col:38 __th 'pthread_t':'unsigned long'
|-FunctionDecl 0x564957fedb30 <line:464:1, col:37> col:13 pthread_testcancel 'void (void)' extern
|-RecordDecl 0x564957fedbd0 <line:465:9, line:473:1> line:465:9 struct definition
| |-RecordDecl 0x564957fedc78 <line:467:3, line:471:3> line:467:3 struct definition
| | |-FieldDecl 0x564957fedd68 <line:469:5, col:15> col:15 __cancel_jmp_buf '__jmp_buf':'long [8]'
| | `-FieldDecl 0x564957feddd0 <line:470:5, col:9> col:9 __mask_was_saved 'int'
| |-FieldDecl 0x564957fedfa0 <line:467:3, line:471:23> col:5 __cancel_jmp_buf 'struct (anonymous struct at ./split_2/safe011_pso.opt_false-unreach-call.i:467:3) [1]'
| `-FieldDecl 0x564957fee098 <line:472:3, col:16> col:9 __pad 'void *[4]'
|-TypedefDecl 0x564957fee150 <line:465:1, line:473:3> col:3 referenced __pthread_unwind_buf_t 'struct __pthread_unwind_buf_t':'__pthread_unwind_buf_t'
| |-ElaboratedType 0x564957fee0f0 'struct __pthread_unwind_buf_t' sugar
| | `-RecordType 0x564957fedc50 '__pthread_unwind_buf_t'
| |   `-Record 0x564957fedbd0 ''
| `-AlignedAttr 0x564957fee1a8 <col:42> aligned
|   `-<<<NULL>>>
|-RecordDecl 0x564957fee220 <line:474:1, line:480:1> line:474:8 struct __pthread_cleanup_frame definition
| |-FieldDecl 0x564957fee380 <line:476:3, col:35> col:10 __cancel_routine 'void (*)(void *)'
| |-FieldDecl 0x564957fee3e8 <line:477:3, col:9> col:9 __cancel_arg 'void *'
| |-FieldDecl 0x564957fee450 <line:478:3, col:7> col:7 __do_it 'int'
| `-FieldDecl 0x564957fee4b8 <line:479:3, col:7> col:7 __cancel_type 'int'
|-FunctionDecl 0x564957fee6c0 <line:481:1, col:69> col:13 __pthread_register_cancel 'void (__pthread_unwind_buf_t *)' extern
| `-ParmVarDecl 0x564957fee5b0 <col:40, col:64> col:64 __buf '__pthread_unwind_buf_t *'
|-FunctionDecl 0x564957fee808 <line:483:1, col:71> col:13 __pthread_unregister_cancel 'void (__pthread_unwind_buf_t *)' extern
| `-ParmVarDecl 0x564957fee778 <col:42, col:66> col:66 __buf '__pthread_unwind_buf_t *'
|-FunctionDecl 0x564957feea00 <line:485:1, line:487:31> line:485:13 __pthread_unwind_next 'void (__pthread_unwind_buf_t *) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x564957fee8c0 <col:36, col:60> col:60 __buf '__pthread_unwind_buf_t *'
| `-WeakAttr 0x564957feeaa8 <line:487:22>
|-RecordDecl 0x564957feeb00 <line:489:1, col:8> col:8 struct __jmp_buf_tag
|-FunctionDecl 0x564957feee18 <line:490:1, col:98> col:12 __sigsetjmp 'int (struct __jmp_buf_tag *, int)' extern
| |-ParmVarDecl 0x564957feec78 <col:25, col:47> col:47 __env 'struct __jmp_buf_tag *'
| |-ParmVarDecl 0x564957feecf8 <col:54, col:58> col:58 __savemask 'int'
| |-NoThrowAttr 0x564957feeec8 <col:86>
| `-ReturnsTwiceAttr 0x564957feef20 <col:12> Implicit
|-FunctionDecl 0x564957fef248 <line:491:1, line:493:79> line:491:12 pthread_mutex_init 'int (pthread_mutex_t *, const pthread_mutexattr_t *)' extern
| |-ParmVarDecl 0x564957feeff0 <col:32, col:49> col:49 __mutex 'pthread_mutex_t *'
| |-ParmVarDecl 0x564957fef100 <line:492:11, col:38> col:38 __mutexattr 'const pthread_mutexattr_t *'
| |-NoThrowAttr 0x564957fef2f8 <line:493:22>
| `-NonNullAttr 0x564957fef350 <col:63, col:77> 1
|-FunctionDecl 0x564957fef4c8 <line:494:1, line:495:79> line:494:12 pthread_mutex_destroy 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x564957fef398 <col:35, col:52> col:52 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x564957fef570 <line:495:22>
| `-NonNullAttr 0x564957fef5c8 <col:63, col:77> 1
|-FunctionDecl 0x564957fef6d0 <line:496:1, line:497:68> line:496:12 pthread_mutex_trylock 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x564957fef618 <col:35, col:52> col:52 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x564957fef778 <line:497:22>
| `-NonNullAttr 0x564957fef7d0 <col:52, col:66> 1
|-FunctionDecl 0x564957fef8d0 <line:498:1, line:499:68> line:498:12 pthread_mutex_lock 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x564957fef818 <col:32, col:49> col:49 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x564957fef978 <line:499:22>
| `-NonNullAttr 0x564957fef9d0 <col:52, col:66> 1
|-FunctionDecl 0x564957ff0c28 <line:500:1, line:502:85> line:500:12 pthread_mutex_timedlock 'int (pthread_mutex_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x564957ff0a38 <col:37, col:65> col:65 __mutex 'pthread_mutex_t *restrict'
| |-ParmVarDecl 0x564957ff0ac8 <line:501:9, line:502:9> col:9 __abstime 'const struct timespec *restrict'
| |-NoThrowAttr 0x564957ff0cd8 <col:36>
| `-NonNullAttr 0x564957ff0d30 <col:66, col:83> 1 2
|-FunctionDecl 0x564957ff0e30 <line:503:1, line:504:68> line:503:12 pthread_mutex_unlock 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x564957ff0d78 <col:34, col:51> col:51 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x564957ff0ed8 <line:504:22>
| `-NonNullAttr 0x564957ff0f30 <col:52, col:66> 1
|-FunctionDecl 0x564957ff11c8 <line:505:1, line:508:82> line:505:12 pthread_mutex_getprioceiling 'int (const pthread_mutex_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x564957ff0fe0 <col:42, line:506:18> col:18 __mutex 'const pthread_mutex_t *restrict'
| |-ParmVarDecl 0x564957ff1060 <line:507:7, col:23> col:23 __prioceiling 'int *restrict'
| |-NoThrowAttr 0x564957ff1278 <line:508:22>
| `-NonNullAttr 0x564957ff12d0 <col:63, col:80> 1 2
|-FunctionDecl 0x564957ff1598 <line:509:1, line:512:82> line:509:12 pthread_mutex_setprioceiling 'int (pthread_mutex_t *restrict, int, int *restrict)' extern
| |-ParmVarDecl 0x564957ff1318 <col:42, col:70> col:70 __mutex 'pthread_mutex_t *restrict'
| |-ParmVarDecl 0x564957ff1398 <line:510:7, col:11> col:11 __prioceiling 'int'
| |-ParmVarDecl 0x564957ff1418 <line:511:7, col:23> col:23 __old_ceiling 'int *restrict'
| |-NoThrowAttr 0x564957ff1650 <line:512:22>
| `-NonNullAttr 0x564957ff16a8 <col:63, col:80> 1 3
|-FunctionDecl 0x564957ff17b0 <line:513:1, line:514:79> line:513:12 pthread_mutex_consistent 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x564957ff16f8 <col:38, col:55> col:55 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x564957ff1858 <line:514:22>
| `-NonNullAttr 0x564957ff18b0 <col:63, col:77> 1
|-FunctionDecl 0x564957ff1ad8 <line:515:1, line:516:79> line:515:12 pthread_mutexattr_init 'int (pthread_mutexattr_t *)' extern
| |-ParmVarDecl 0x564957ff1960 <col:36, col:57> col:57 __attr 'pthread_mutexattr_t *'
| |-NoThrowAttr 0x564957ff1b80 <line:516:22>
| `-NonNullAttr 0x564957ff1bd8 <col:63, col:77> 1
|-FunctionDecl 0x564957ff1ce0 <line:517:1, line:518:79> line:517:12 pthread_mutexattr_destroy 'int (pthread_mutexattr_t *)' extern
| |-ParmVarDecl 0x564957ff1c28 <col:39, col:60> col:60 __attr 'pthread_mutexattr_t *'
| |-NoThrowAttr 0x564957ff1d88 <line:518:22>
| `-NonNullAttr 0x564957ff1de0 <col:63, col:77> 1
|-FunctionDecl 0x564957ff2008 <line:519:1, line:522:82> line:519:12 pthread_mutexattr_getpshared 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x564957ff1e28 <col:42, line:520:18> col:18 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x564957ff1ea8 <line:521:7, col:23> col:23 __pshared 'int *restrict'
| |-NoThrowAttr 0x564957ff20b8 <line:522:22>
| `-NonNullAttr 0x564957ff2110 <col:63, col:80> 1 2
|-FunctionDecl 0x564957ff2318 <line:523:1, line:525:79> line:523:12 pthread_mutexattr_setpshared 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x564957ff2158 <col:42, col:63> col:63 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x564957ff21d8 <line:524:7, col:11> col:11 __pshared 'int'
| |-NoThrowAttr 0x564957ff23c8 <line:525:22>
| `-NonNullAttr 0x564957ff2420 <col:63, col:77> 1
|-FunctionDecl 0x564957ff25c8 <line:526:1, line:528:82> line:526:12 pthread_mutexattr_gettype 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x564957ff2468 <col:39, line:527:11> col:11 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x564957ff24e8 <col:19, col:35> col:35 __kind 'int *restrict'
| |-NoThrowAttr 0x564957ff2678 <line:528:22>
| `-NonNullAttr 0x564957ff26d0 <col:63, col:80> 1 2
|-FunctionDecl 0x564957ff2858 <line:529:1, line:530:79> line:529:12 pthread_mutexattr_settype 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x564957ff2718 <col:39, col:60> col:60 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x564957ff2798 <col:68, col:72> col:72 __kind 'int'
| |-NoThrowAttr 0x564957ff2908 <line:530:22>
| `-NonNullAttr 0x564957ff2960 <col:63, col:77> 1
|-FunctionDecl 0x564957ff2b20 <line:531:1, line:534:82> line:531:12 pthread_mutexattr_getprotocol 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x564957ff29a8 <col:43, line:532:19> col:19 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x564957ff2a40 <line:533:8, col:24> col:24 __protocol 'int *restrict'
| |-NoThrowAttr 0x564957ff2bd0 <line:534:22>
| `-NonNullAttr 0x564957ff2c28 <col:63, col:80> 1 2
|-FunctionDecl 0x564957ff2db8 <line:535:1, line:537:79> line:535:12 pthread_mutexattr_setprotocol 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x564957ff2c78 <col:43, col:64> col:64 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x564957ff2cf8 <line:536:8, col:12> col:12 __protocol 'int'
| |-NoThrowAttr 0x564957ff2e68 <line:537:22>
| `-NonNullAttr 0x564957ff2ec0 <col:63, col:77> 1
|-FunctionDecl 0x564957ff3068 <line:538:1, line:541:82> line:538:12 pthread_mutexattr_getprioceiling 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x564957ff2f08 <col:46, line:539:22> col:22 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x564957ff2f88 <line:540:11, col:27> col:27 __prioceiling 'int *restrict'
| |-NoThrowAttr 0x564957ff3118 <line:541:22>
| `-NonNullAttr 0x564957ff3170 <col:63, col:80> 1 2
|-FunctionDecl 0x564957ff32f8 <line:542:1, line:544:79> line:542:12 pthread_mutexattr_setprioceiling 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x564957ff31b8 <col:46, col:67> col:67 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x564957ff3238 <line:543:11, col:15> col:15 __prioceiling 'int'
| |-NoThrowAttr 0x564957ff33a8 <line:544:22>
| `-NonNullAttr 0x564957ff3400 <col:63, col:77> 1
|-FunctionDecl 0x564957ff35e8 <line:545:1, line:547:82> line:545:12 pthread_mutexattr_getrobust 'int (const pthread_mutexattr_t *, int *)' extern
| |-ParmVarDecl 0x564957ff3448 <col:41, col:68> col:68 __attr 'const pthread_mutexattr_t *'
| |-ParmVarDecl 0x564957ff34c8 <line:546:6, col:11> col:11 __robustness 'int *'
| |-NoThrowAttr 0x564957ff3698 <line:547:22>
| `-NonNullAttr 0x564957ff36f0 <col:63, col:80> 1 2
|-FunctionDecl 0x564957ff3878 <line:548:1, line:550:79> line:548:12 pthread_mutexattr_setrobust 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x564957ff3738 <col:41, col:62> col:62 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x564957ff37b8 <line:549:6, col:10> col:10 __robustness 'int'
| |-NoThrowAttr 0x564957ff3928 <line:550:22>
| `-NonNullAttr 0x564957ff3980 <col:63, col:77> 1
|-FunctionDecl 0x564957ff4cf8 <line:551:1, line:553:86> line:551:12 pthread_rwlock_init 'int (pthread_rwlock_t *restrict, const pthread_rwlockattr_t *restrict)' extern
| |-ParmVarDecl 0x564957ff4aa0 <col:33, col:62> col:62 __rwlock 'pthread_rwlock_t *restrict'
| |-ParmVarDecl 0x564957ff4bb0 <line:552:5, line:553:5> col:5 __attr 'const pthread_rwlockattr_t *restrict'
| |-NoThrowAttr 0x564957ff4da8 <col:29>
| `-NonNullAttr 0x564957ff4e00 <col:70, col:84> 1
|-FunctionDecl 0x564957ff4f78 <line:554:1, line:555:79> line:554:12 pthread_rwlock_destroy 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x564957ff4e48 <col:36, col:54> col:54 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x564957ff5020 <line:555:22>
| `-NonNullAttr 0x564957ff5078 <col:63, col:77> 1
|-FunctionDecl 0x564957ff5180 <line:556:1, line:557:68> line:556:12 pthread_rwlock_rdlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x564957ff50c8 <col:35, col:53> col:53 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x564957ff5228 <line:557:22>
| `-NonNullAttr 0x564957ff5280 <col:52, col:66> 1
|-FunctionDecl 0x564957ff5380 <line:558:1, line:559:65> line:558:12 pthread_rwlock_tryrdlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x564957ff52c8 <col:38, col:56> col:56 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x564957ff5428 <line:559:19>
| `-NonNullAttr 0x564957ff5480 <col:49, col:63> 1
|-FunctionDecl 0x564957ff56b8 <line:560:1, line:562:88> line:560:12 pthread_rwlock_timedrdlock 'int (pthread_rwlock_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x564957ff54c8 <col:40, col:69> col:69 __rwlock 'pthread_rwlock_t *restrict'
| |-ParmVarDecl 0x564957ff5558 <line:561:12, line:562:12> col:12 __abstime 'const struct timespec *restrict'
| |-NoThrowAttr 0x564957ff5768 <col:39>
| `-NonNullAttr 0x564957ff57c0 <col:69, col:86> 1 2
|-FunctionDecl 0x564957ff58c0 <line:563:1, line:564:68> line:563:12 pthread_rwlock_wrlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x564957ff5808 <col:35, col:53> col:53 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x564957ff5968 <line:564:22>
| `-NonNullAttr 0x564957ff59c0 <col:52, col:66> 1
|-FunctionDecl 0x564957ff5b28 <line:565:1, line:566:68> line:565:12 pthread_rwlock_trywrlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x564957ff5a70 <col:38, col:56> col:56 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x564957ff5bd0 <line:566:22>
| `-NonNullAttr 0x564957ff5c28 <col:52, col:66> 1
|-FunctionDecl 0x564957ff5de8 <line:567:1, line:569:88> line:567:12 pthread_rwlock_timedwrlock 'int (pthread_rwlock_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x564957ff5c78 <col:40, col:69> col:69 __rwlock 'pthread_rwlock_t *restrict'
| |-ParmVarDecl 0x564957ff5d08 <line:568:12, line:569:12> col:12 __abstime 'const struct timespec *restrict'
| |-NoThrowAttr 0x564957ff5e98 <col:39>
| `-NonNullAttr 0x564957ff5ef0 <col:69, col:86> 1 2
|-FunctionDecl 0x564957ff5ff0 <line:570:1, line:571:68> line:570:12 pthread_rwlock_unlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x564957ff5f38 <col:35, col:53> col:53 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x564957ff6098 <line:571:22>
| `-NonNullAttr 0x564957ff60f0 <col:52, col:66> 1
|-FunctionDecl 0x564957ff62d8 <line:572:1, line:573:79> line:572:12 pthread_rwlockattr_init 'int (pthread_rwlockattr_t *)' extern
| |-ParmVarDecl 0x564957ff61a0 <col:37, col:59> col:59 __attr 'pthread_rwlockattr_t *'
| |-NoThrowAttr 0x564957ff6380 <line:573:22>
| `-NonNullAttr 0x564957ff63d8 <col:63, col:77> 1
|-FunctionDecl 0x564957ff64e0 <line:574:1, line:575:79> line:574:12 pthread_rwlockattr_destroy 'int (pthread_rwlockattr_t *)' extern
| |-ParmVarDecl 0x564957ff6428 <col:40, col:62> col:62 __attr 'pthread_rwlockattr_t *'
| |-NoThrowAttr 0x564957ff6588 <line:575:22>
| `-NonNullAttr 0x564957ff65e0 <col:63, col:77> 1
|-FunctionDecl 0x564957ff6808 <line:576:1, line:579:82> line:576:12 pthread_rwlockattr_getpshared 'int (const pthread_rwlockattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x564957ff6628 <col:43, line:577:19> col:19 __attr 'const pthread_rwlockattr_t *restrict'
| |-ParmVarDecl 0x564957ff66a8 <line:578:8, col:24> col:24 __pshared 'int *restrict'
| |-NoThrowAttr 0x564957ff68b8 <line:579:22>
| `-NonNullAttr 0x564957ff6910 <col:63, col:80> 1 2
|-FunctionDecl 0x564957ff6b38 <line:580:1, line:582:79> line:580:12 pthread_rwlockattr_setpshared 'int (pthread_rwlockattr_t *, int)' extern
| |-ParmVarDecl 0x564957ff6958 <col:43, col:65> col:65 __attr 'pthread_rwlockattr_t *'
| |-ParmVarDecl 0x564957ff69d8 <line:581:8, col:12> col:12 __pshared 'int'
| |-NoThrowAttr 0x564957ff6be8 <line:582:22>
| `-NonNullAttr 0x564957ff6c40 <col:63, col:77> 1
|-FunctionDecl 0x564957ff6de8 <line:583:1, line:586:82> line:583:12 pthread_rwlockattr_getkind_np 'int (const pthread_rwlockattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x564957ff6c88 <col:43, line:584:19> col:19 __attr 'const pthread_rwlockattr_t *restrict'
| |-ParmVarDecl 0x564957ff6d08 <line:585:8, col:24> col:24 __pref 'int *restrict'
| |-NoThrowAttr 0x564957ff6e98 <line:586:22>
| `-NonNullAttr 0x564957ff6ef0 <col:63, col:80> 1 2
|-FunctionDecl 0x564957ff7078 <line:587:1, line:588:93> line:587:12 pthread_rwlockattr_setkind_np 'int (pthread_rwlockattr_t *, int)' extern
| |-ParmVarDecl 0x564957ff6f38 <col:43, col:65> col:65 __attr 'pthread_rwlockattr_t *'
| |-ParmVarDecl 0x564957ff6fb8 <line:588:8, col:12> col:12 __pref 'int'
| |-NoThrowAttr 0x564957ff7128 <col:36>
| `-NonNullAttr 0x564957ff7180 <col:77, col:91> 1
|-FunctionDecl 0x564957ff74b8 <line:589:1, line:591:79> line:589:12 pthread_cond_init 'int (pthread_cond_t *restrict, const pthread_condattr_t *restrict)' extern
| |-ParmVarDecl 0x564957ff7260 <col:31, col:58> col:58 __cond 'pthread_cond_t *restrict'
| |-ParmVarDecl 0x564957ff7370 <line:590:10, col:47> col:47 __cond_attr 'const pthread_condattr_t *restrict'
| |-NoThrowAttr 0x564957ff7568 <line:591:22>
| `-NonNullAttr 0x564957ff75c0 <col:63, col:77> 1
|-FunctionDecl 0x564957ff7738 <line:592:1, line:593:79> line:592:12 pthread_cond_destroy 'int (pthread_cond_t *)' extern
| |-ParmVarDecl 0x564957ff7608 <col:34, col:50> col:50 __cond 'pthread_cond_t *'
| |-NoThrowAttr 0x564957ff77e0 <line:593:22>
| `-NonNullAttr 0x564957ff7838 <col:63, col:77> 1
|-FunctionDecl 0x564957ff7940 <line:594:1, line:595:68> line:594:12 pthread_cond_signal 'int (pthread_cond_t *)' extern
| |-ParmVarDecl 0x564957ff7888 <col:33, col:49> col:49 __cond 'pthread_cond_t *'
| |-NoThrowAttr 0x564957ff79e8 <line:595:22>
| `-NonNullAttr 0x564957ff7a40 <col:52, col:66> 1
|-FunctionDecl 0x564957ff7b58 <line:596:1, line:597:68> line:596:12 pthread_cond_broadcast 'int (pthread_cond_t *)' extern
| |-ParmVarDecl 0x564957ff7aa0 <col:36, col:52> col:52 __cond 'pthread_cond_t *'
| |-NoThrowAttr 0x564957ff7c00 <line:597:22>
| `-NonNullAttr 0x564957ff7c58 <col:52, col:66> 1
|-FunctionDecl 0x564957ff7e88 <line:598:1, line:600:41> line:598:12 pthread_cond_wait 'int (pthread_cond_t *restrict, pthread_mutex_t *restrict)' extern
| |-ParmVarDecl 0x564957ff7ca8 <col:31, col:58> col:58 __cond 'pthread_cond_t *restrict'
| |-ParmVarDecl 0x564957ff7d20 <line:599:10, col:38> col:38 __mutex 'pthread_mutex_t *restrict'
| `-NonNullAttr 0x564957ff7f38 <line:600:22, col:39> 1 2
|-FunctionDecl 0x564957ff8268 <line:601:1, line:604:44> line:601:12 pthread_cond_timedwait 'int (pthread_cond_t *restrict, pthread_mutex_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x564957ff7fb8 <col:36, col:63> col:63 __cond 'pthread_cond_t *restrict'
| |-ParmVarDecl 0x564957ff8030 <line:602:8, col:36> col:36 __mutex 'pthread_mutex_t *restrict'
| |-ParmVarDecl 0x564957ff80c0 <line:603:8, col:42> col:42 __abstime 'const struct timespec *restrict'
| `-NonNullAttr 0x564957ff8320 <line:604:22, col:42> 1 2 3
|-FunctionDecl 0x564957ff8538 <line:605:1, line:606:79> line:605:12 pthread_condattr_init 'int (pthread_condattr_t *)' extern
| |-ParmVarDecl 0x564957ff8400 <col:35, col:55> col:55 __attr 'pthread_condattr_t *'
| |-NoThrowAttr 0x564957ff85e0 <line:606:22>
| `-NonNullAttr 0x564957ff8638 <col:63, col:77> 1
|-FunctionDecl 0x564957ff8740 <line:607:1, line:608:79> line:607:12 pthread_condattr_destroy 'int (pthread_condattr_t *)' extern
| |-ParmVarDecl 0x564957ff8688 <col:38, col:58> col:58 __attr 'pthread_condattr_t *'
| |-NoThrowAttr 0x564957ff87e8 <line:608:22>
| `-NonNullAttr 0x564957ff8840 <col:63, col:77> 1
|-FunctionDecl 0x564957ff8aa0 <line:609:1, line:612:82> line:609:12 pthread_condattr_getpshared 'int (const pthread_condattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x564957ff8888 <col:41, line:610:17> col:17 __attr 'const pthread_condattr_t *restrict'
| |-ParmVarDecl 0x564957ff8908 <line:611:6, col:22> col:22 __pshared 'int *restrict'
| |-NoThrowAttr 0x564957ff8b50 <line:612:22>
| `-NonNullAttr 0x564957ff8ba8 <col:63, col:80> 1 2
|-FunctionDecl 0x564957ff8db8 <line:613:1, line:614:94> line:613:12 pthread_condattr_setpshared 'int (pthread_condattr_t *, int)' extern
| |-ParmVarDecl 0x564957ff8bf8 <col:41, col:61> col:61 __attr 'pthread_condattr_t *'
| |-ParmVarDecl 0x564957ff8c78 <line:614:6, col:10> col:10 __pshared 'int'
| |-NoThrowAttr 0x564957ff8e68 <col:37>
| `-NonNullAttr 0x564957ff8ec0 <col:78, col:92> 1
|-FunctionDecl 0x564957ff90d8 <line:615:1, line:618:82> line:615:12 pthread_condattr_getclock 'int (const pthread_condattr_t *restrict, __clockid_t *restrict)' extern
| |-ParmVarDecl 0x564957ff8f08 <col:39, line:616:22> col:22 __attr 'const pthread_condattr_t *restrict'
| |-ParmVarDecl 0x564957ff8fb0 <line:617:11, col:35> col:35 __clock_id '__clockid_t *restrict'
| |-NoThrowAttr 0x564957ff9188 <line:618:22>
| `-NonNullAttr 0x564957ff91e0 <col:63, col:80> 1 2
|-FunctionDecl 0x564957ff93a8 <line:619:1, line:621:79> line:619:12 pthread_condattr_setclock 'int (pthread_condattr_t *, __clockid_t)' extern
| |-ParmVarDecl 0x564957ff9228 <col:39, col:59> col:59 __attr 'pthread_condattr_t *'
| |-ParmVarDecl 0x564957ff92a0 <line:620:11, col:23> col:23 __clock_id '__clockid_t':'int'
| |-NoThrowAttr 0x564957ff9458 <line:621:22>
| `-NonNullAttr 0x564957ff94b0 <col:63, col:77> 1
|-FunctionDecl 0x564957ff9758 <line:622:1, line:623:79> line:622:12 pthread_spin_init 'int (pthread_spinlock_t *, int)' extern
| |-ParmVarDecl 0x564957ff9590 <col:31, col:51> col:51 __lock 'pthread_spinlock_t *'
| |-ParmVarDecl 0x564957ff9610 <col:59, col:63> col:63 __pshared 'int'
| |-NoThrowAttr 0x564957ff9808 <line:623:22>
| `-NonNullAttr 0x564957ff9860 <col:63, col:77> 1
|-FunctionDecl 0x564957ff99d8 <line:624:1, line:625:79> line:624:12 pthread_spin_destroy 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x564957ff98a8 <col:34, col:54> col:54 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x564957ff9ab0 <line:625:22>
| `-NonNullAttr 0x564957ff9b08 <col:63, col:77> 1
|-FunctionDecl 0x564957ff9c10 <line:626:1, line:627:68> line:626:12 pthread_spin_lock 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x564957ff9b58 <col:31, col:51> col:51 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x564957ff9cb8 <line:627:22>
| `-NonNullAttr 0x564957ff9d10 <col:52, col:66> 1
|-FunctionDecl 0x564957ff9e10 <line:628:1, line:629:68> line:628:12 pthread_spin_trylock 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x564957ff9d58 <col:34, col:54> col:54 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x564957ff9eb8 <line:629:22>
| `-NonNullAttr 0x564957ff9f10 <col:52, col:66> 1
|-FunctionDecl 0x564957ffa010 <line:630:1, line:631:68> line:630:12 pthread_spin_unlock 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x564957ff9f58 <col:33, col:53> col:53 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x564957ffa0b8 <line:631:22>
| `-NonNullAttr 0x564957ffa110 <col:52, col:66> 1
|-FunctionDecl 0x564957ffa4e8 <line:632:1, line:635:79> line:632:12 pthread_barrier_init 'int (pthread_barrier_t *restrict, const pthread_barrierattr_t *restrict, unsigned int)' extern
| |-ParmVarDecl 0x564957ffa1f0 <col:34, col:64> col:64 __barrier 'pthread_barrier_t *restrict'
| |-ParmVarDecl 0x564957ffa300 <line:633:6, line:634:6> col:6 __attr 'const pthread_barrierattr_t *restrict'
| |-ParmVarDecl 0x564957ffa380 <col:14, col:27> col:27 __count 'unsigned int'
| |-NoThrowAttr 0x564957ffa5a0 <line:635:22>
| `-NonNullAttr 0x564957ffa5f8 <col:63, col:77> 1
|-FunctionDecl 0x564957ffa778 <line:636:1, line:637:79> line:636:12 pthread_barrier_destroy 'int (pthread_barrier_t *)' extern
| |-ParmVarDecl 0x564957ffa648 <col:37, col:56> col:56 __barrier 'pthread_barrier_t *'
| |-NoThrowAttr 0x564957ffa820 <line:637:22>
| `-NonNullAttr 0x564957ffa878 <col:63, col:77> 1
|-FunctionDecl 0x564957ffa980 <line:638:1, line:639:68> line:638:12 pthread_barrier_wait 'int (pthread_barrier_t *)' extern
| |-ParmVarDecl 0x564957ffa8c8 <col:34, col:53> col:53 __barrier 'pthread_barrier_t *'
| |-NoThrowAttr 0x564957ffaa28 <line:639:22>
| `-NonNullAttr 0x564957ffaa80 <col:52, col:66> 1
|-FunctionDecl 0x564957ffbc88 <line:640:1, line:641:79> line:640:12 pthread_barrierattr_init 'int (pthread_barrierattr_t *)' extern
| |-ParmVarDecl 0x564957ffbb50 <col:38, col:61> col:61 __attr 'pthread_barrierattr_t *'
| |-NoThrowAttr 0x564957ffbd30 <line:641:22>
| `-NonNullAttr 0x564957ffbd88 <col:63, col:77> 1
|-FunctionDecl 0x564957ffbe90 <line:642:1, line:643:79> line:642:12 pthread_barrierattr_destroy 'int (pthread_barrierattr_t *)' extern
| |-ParmVarDecl 0x564957ffbdd8 <col:41, col:64> col:64 __attr 'pthread_barrierattr_t *'
| |-NoThrowAttr 0x564957ffbf38 <line:643:22>
| `-NonNullAttr 0x564957ffbf90 <col:63, col:77> 1
|-FunctionDecl 0x564957ffc1b8 <line:644:1, line:647:82> line:644:12 pthread_barrierattr_getpshared 'int (const pthread_barrierattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x564957ffbfd8 <col:44, line:645:20> col:20 __attr 'const pthread_barrierattr_t *restrict'
| |-ParmVarDecl 0x564957ffc058 <line:646:9, col:25> col:25 __pshared 'int *restrict'
| |-NoThrowAttr 0x564957ffc268 <line:647:22>
| `-NonNullAttr 0x564957ffc2c0 <col:63, col:80> 1 2
|-FunctionDecl 0x564957ffc4c8 <line:648:1, line:650:79> line:648:12 pthread_barrierattr_setpshared 'int (pthread_barrierattr_t *, int)' extern
| |-ParmVarDecl 0x564957ffc308 <col:44, col:67> col:67 __attr 'pthread_barrierattr_t *'
| |-ParmVarDecl 0x564957ffc388 <line:649:9, col:13> col:13 __pshared 'int'
| |-NoThrowAttr 0x564957ffc578 <line:650:22>
| `-NonNullAttr 0x564957ffc5d0 <col:63, col:77> 1
|-FunctionDecl 0x564957ffc918 <line:651:1, line:653:79> line:651:12 pthread_key_create 'int (pthread_key_t *, void (*)(void *))' extern
| |-ParmVarDecl 0x564957ffc6b0 <col:32, col:47> col:47 __key 'pthread_key_t *'
| |-ParmVarDecl 0x564957ffc7d0 <line:652:11, col:43> col:18 __destr_function 'void (*)(void *)'
| |-NoThrowAttr 0x564957ffc9c8 <line:653:22>
| `-NonNullAttr 0x564957ffca20 <col:63, col:77> 1
|-FunctionDecl 0x564957ffcb88 <line:654:1, col:92> col:12 pthread_key_delete 'int (pthread_key_t)' extern
| |-ParmVarDecl 0x564957ffca68 <col:32, col:46> col:46 __key 'pthread_key_t':'unsigned int'
| `-NoThrowAttr 0x564957ffcc30 <col:69>
|-FunctionDecl 0x564957ffcda8 <line:655:1, col:95> col:14 pthread_getspecific 'void *(pthread_key_t)' extern
| |-ParmVarDecl 0x564957ffcc98 <col:35, col:49> col:49 __key 'pthread_key_t':'unsigned int'
| `-NoThrowAttr 0x564957ffce50 <col:72>
|-FunctionDecl 0x564957ffd088 <line:656:1, line:657:67> line:656:12 pthread_setspecific 'int (pthread_key_t, const void *)' extern
| |-ParmVarDecl 0x564957ffceb8 <col:33, col:47> col:47 __key 'pthread_key_t':'unsigned int'
| |-ParmVarDecl 0x564957ffcf68 <line:657:5, col:17> col:17 __pointer 'const void *'
| `-NoThrowAttr 0x564957ffd138 <col:44>
|-FunctionDecl 0x564957ffd358 <line:658:1, line:660:79> line:658:12 pthread_getcpuclockid 'int (pthread_t, __clockid_t *)' extern
| |-ParmVarDecl 0x564957ffd1a0 <col:35, col:45> col:45 __thread_id 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x564957ffd218 <line:659:7, col:20> col:20 __clock_id '__clockid_t *'
| |-NoThrowAttr 0x564957ffd408 <line:660:22>
| `-NonNullAttr 0x564957ffd460 <col:63, col:77> 2
|-FunctionDecl 0x564957ffd8a8 <line:661:1, line:663:70> line:661:12 pthread_atfork 'int (void (*)(void), void (*)(void), void (*)(void))' extern
| |-ParmVarDecl 0x564957ffd540 <col:28, col:51> col:35 __prepare 'void (*)(void)'
| |-ParmVarDecl 0x564957ffd650 <line:662:7, col:29> col:14 __parent 'void (*)(void)'
| |-ParmVarDecl 0x564957ffd760 <line:663:7, col:28> col:14 __child 'void (*)(void)'
| `-NoThrowAttr 0x564957ffd960 <col:47>
|-FunctionDecl 0x564957ffdaf0 <line:665:1, col:20> col:8 used P0 'void *(void *)'
| `-ParmVarDecl 0x564957ffd9d0 <col:11, col:17> col:17 arg 'void *'
|-FunctionDecl 0x564957ffdc48 <line:666:1, col:20> col:8 used P1 'void *(void *)'
| `-ParmVarDecl 0x564957ffdbb0 <col:11, col:17> col:17 arg 'void *'
|-FunctionDecl 0x564957ffdda0 <line:667:1, col:20> col:8 used P2 'void *(void *)'
| `-ParmVarDecl 0x564957ffdd08 <col:11, col:17> col:17 arg 'void *'
|-FunctionDecl 0x564957ffde68 <line:668:1, col:12> col:6 fence 'void ()'
|-FunctionDecl 0x564957ffdf28 <line:669:1, col:12> col:6 isync 'void ()'
|-FunctionDecl 0x564957ffdfe8 <line:670:1, col:14> col:6 lwfence 'void ()'
|-VarDecl 0x564957ffe0a0 <line:671:1, col:5> col:5 used __unbuffered_cnt 'int'
|-VarDecl 0x564957ffe120 prev 0x564957ffe0a0 <line:672:1, col:24> col:5 used __unbuffered_cnt 'int' cinit
| `-IntegerLiteral 0x564957ffe188 <col:24> 'int' 0
|-VarDecl 0x564957ffe1c0 <line:673:1, col:5> col:5 used __unbuffered_p2_EAX 'int'
|-VarDecl 0x564957ffe240 prev 0x564957ffe1c0 <line:674:1, col:27> col:5 used __unbuffered_p2_EAX 'int' cinit
| `-IntegerLiteral 0x564957ffe2a8 <col:27> 'int' 0
|-VarDecl 0x564957ffe2d8 <line:675:1, col:7> col:7 used main$tmp_guard0 '_Bool'
|-VarDecl 0x564957ffe350 <line:676:1, col:7> col:7 used main$tmp_guard1 '_Bool'
|-VarDecl 0x564957ffe3d0 <line:677:1, col:5> col:5 used x 'int'
|-VarDecl 0x564957ffe450 prev 0x564957ffe3d0 <line:678:1, col:9> col:5 used x 'int' cinit
| `-IntegerLiteral 0x564957ffe4b8 <col:9> 'int' 0
|-VarDecl 0x564957ffe4e8 <line:679:1, col:7> col:7 used x$flush_delayed '_Bool'
|-VarDecl 0x564957ffe568 <line:680:1, col:5> col:5 used x$mem_tmp 'int'
|-VarDecl 0x564957ffe5e0 <line:681:1, col:7> col:7 used x$r_buff0_thd0 '_Bool'
|-VarDecl 0x564957ffe658 <line:682:1, col:7> col:7 used x$r_buff0_thd1 '_Bool'
|-VarDecl 0x564957ffe6d0 <line:683:1, col:7> col:7 used x$r_buff0_thd2 '_Bool'
|-VarDecl 0x564957ffe748 <line:684:1, col:7> col:7 used x$r_buff0_thd3 '_Bool'
|-VarDecl 0x564957ffe7c0 <line:685:1, col:7> col:7 used x$r_buff1_thd0 '_Bool'
|-VarDecl 0x564957ffe838 <line:686:1, col:7> col:7 used x$r_buff1_thd1 '_Bool'
|-VarDecl 0x564957ffe8b0 <line:687:1, col:7> col:7 used x$r_buff1_thd2 '_Bool'
|-VarDecl 0x564957ffe928 <line:688:1, col:7> col:7 used x$r_buff1_thd3 '_Bool'
|-VarDecl 0x564957ffe9a0 <line:689:1, col:7> col:7 x$read_delayed '_Bool'
|-VarDecl 0x564957ffea20 <line:690:1, col:6> col:6 x$read_delayed_var 'int *'
|-VarDecl 0x564957ffeb00 <line:691:1, col:5> col:5 used x$w_buff0 'int'
|-VarDecl 0x564957ffeb78 <line:692:1, col:7> col:7 used x$w_buff0_used '_Bool'
|-VarDecl 0x564957ffebf8 <line:693:1, col:5> col:5 used x$w_buff1 'int'
|-VarDecl 0x564957ffec70 <line:694:1, col:7> col:7 used x$w_buff1_used '_Bool'
|-VarDecl 0x564957ffecf0 <line:695:1, col:5> col:5 used y 'int'
|-VarDecl 0x564957ffed70 prev 0x564957ffecf0 <line:696:1, col:9> col:5 used y 'int' cinit
| `-IntegerLiteral 0x564957ffedd8 <col:9> 'int' 0
|-VarDecl 0x564957ffee10 <line:697:1, col:5> col:5 used z 'int'
|-VarDecl 0x564957ffee90 prev 0x564957ffee10 <line:698:1, col:9> col:5 used z 'int' cinit
| `-IntegerLiteral 0x564957ffeef8 <col:9> 'int' 0
|-VarDecl 0x564957ffef28 <line:699:1, col:7> col:7 used weak$$choice0 '_Bool'
|-VarDecl 0x564957ffefa0 <line:700:1, col:7> col:7 used weak$$choice2 '_Bool'
|-FunctionDecl 0x564957fff0b8 prev 0x564957ffdaf0 <line:701:1, line:720:1> line:701:8 used P0 'void *(void *)'
| |-ParmVarDecl 0x564957fff020 <col:11, col:17> col:17 arg 'void *'
| `-CompoundStmt 0x564958000358 <line:702:1, line:720:1>
|   |-CallExpr 0x564957fff1c8 <line:703:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x564957fff1b0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x564957fff160 <col:3> 'void ()' Function 0x564957fa4e40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x564957fff228 <line:704:3, col:7> 'int' '='
|   | |-DeclRefExpr 0x564957fff1e8 <col:3> 'int' lvalue Var 0x564957ffee90 'z' 'int'
|   | `-IntegerLiteral 0x564957fff208 <col:7> 'int' 2
|   |-CallExpr 0x564957fff280 <line:705:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x564957fff268 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x564957fff248 <col:3> 'void ()' Function 0x564957fa4f00 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x564957fff2d8 <line:706:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x564957fff2c0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x564957fff2a0 <col:3> 'void ()' Function 0x564957fa4e40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x564957fff338 <line:707:3, col:7> 'int' '='
|   | |-DeclRefExpr 0x564957fff2f8 <col:3> 'int' lvalue Var 0x564957ffe450 'x' 'int'
|   | `-IntegerLiteral 0x564957fff318 <col:7> 'int' 1
|   |-CallExpr 0x564957fff390 <line:708:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x564957fff378 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x564957fff358 <col:3> 'void ()' Function 0x564957fa4f00 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x564957fff3e8 <line:709:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x564957fff3d0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x564957fff3b0 <col:3> 'void ()' Function 0x564957fa4e40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x564957fff6d0 <line:710:3, col:103> 'int' '='
|   | |-DeclRefExpr 0x564957fff408 <col:3> 'int' lvalue Var 0x564957ffe450 'x' 'int'
|   | `-ConditionalOperator 0x564957fff6a0 <col:7, col:103> 'int'
|   |   |-BinaryOperator 0x564957fff4c8 <col:7, col:25> 'int' '&&'
|   |   | |-ImplicitCastExpr 0x564957fff480 <col:7> 'int' <IntegralCast>
|   |   | | `-ImplicitCastExpr 0x564957fff468 <col:7> '_Bool' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x564957fff428 <col:7> '_Bool' lvalue Var 0x564957ffeb78 'x$w_buff0_used' '_Bool'
|   |   | `-ImplicitCastExpr 0x564957fff4b0 <col:25> 'int' <IntegralCast>
|   |   |   `-ImplicitCastExpr 0x564957fff498 <col:25> '_Bool' <LValueToRValue>
|   |   |     `-DeclRefExpr 0x564957fff448 <col:25> '_Bool' lvalue Var 0x564957ffe658 'x$r_buff0_thd1' '_Bool'
|   |   |-ImplicitCastExpr 0x564957fff688 <col:42> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x564957fff4e8 <col:42> 'int' lvalue Var 0x564957ffeb00 'x$w_buff0' 'int'
|   |   `-ParenExpr 0x564957fff668 <col:54, col:103> 'int'
|   |     `-ConditionalOperator 0x564957fff638 <col:55, col:102> 'int'
|   |       |-BinaryOperator 0x564957fff5a8 <col:55, col:73> 'int' '&&'
|   |       | |-ImplicitCastExpr 0x564957fff560 <col:55> 'int' <IntegralCast>
|   |       | | `-ImplicitCastExpr 0x564957fff548 <col:55> '_Bool' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x564957fff508 <col:55> '_Bool' lvalue Var 0x564957ffec70 'x$w_buff1_used' '_Bool'
|   |       | `-ImplicitCastExpr 0x564957fff590 <col:73> 'int' <IntegralCast>
|   |       |   `-ImplicitCastExpr 0x564957fff578 <col:73> '_Bool' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x564957fff528 <col:73> '_Bool' lvalue Var 0x564957ffe838 'x$r_buff1_thd1' '_Bool'
|   |       |-ImplicitCastExpr 0x564957fff608 <col:90> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x564957fff5c8 <col:90> 'int' lvalue Var 0x564957ffebf8 'x$w_buff1' 'int'
|   |       `-ImplicitCastExpr 0x564957fff620 <col:102> 'int' <LValueToRValue>
|   |         `-DeclRefExpr 0x564957fff5e8 <col:102> 'int' lvalue Var 0x564957ffe450 'x' 'int'
|   |-BinaryOperator 0x564957fff8d8 <line:711:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x564957fff6f0 <col:3> '_Bool' lvalue Var 0x564957ffeb78 'x$w_buff0_used' '_Bool'
|   | `-ImplicitCastExpr 0x564957fff8c0 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x564957fff890 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x564957fff7b0 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x564957fff768 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x564957fff750 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x564957fff710 <col:20> '_Bool' lvalue Var 0x564957ffeb78 'x$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x564957fff798 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x564957fff780 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x564957fff730 <col:38> '_Bool' lvalue Var 0x564957ffe658 'x$r_buff0_thd1' '_Bool'
|   |     |-ImplicitCastExpr 0x564957fff848 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x564957fff800 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x564957fff7d0 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x564957fff878 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x564957fff860 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x564957fff828 <col:66> '_Bool' lvalue Var 0x564957ffeb78 'x$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x564957fffbe8 <line:712:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x564957fff8f8 <col:3> '_Bool' lvalue Var 0x564957ffec70 'x$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x564957fffbd0 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x564957fffba0 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x564957fffa98 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x564957fff9b8 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x564957fff970 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x564957fff958 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x564957fff918 <col:20> '_Bool' lvalue Var 0x564957ffeb78 'x$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x564957fff9a0 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x564957fff988 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x564957fff938 <col:38> '_Bool' lvalue Var 0x564957ffe658 'x$r_buff0_thd1' '_Bool'
|   |     | `-BinaryOperator 0x564957fffa78 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x564957fffa30 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x564957fffa18 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x564957fff9d8 <col:56> '_Bool' lvalue Var 0x564957ffec70 'x$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x564957fffa60 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x564957fffa48 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x564957fff9f8 <col:74> '_Bool' lvalue Var 0x564957ffe838 'x$r_buff1_thd1' '_Bool'
|   |     |-ImplicitCastExpr 0x564957fffb58 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x564957fffb10 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x564957fffab8 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x564957fffb88 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x564957fffb70 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x564957fffb38 <col:102> '_Bool' lvalue Var 0x564957ffec70 'x$w_buff1_used' '_Bool'
|   |-BinaryOperator 0x564957fffdf0 <line:713:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x564957fffc08 <col:3> '_Bool' lvalue Var 0x564957ffe658 'x$r_buff0_thd1' '_Bool'
|   | `-ImplicitCastExpr 0x564957fffdd8 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x564957fffda8 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x564957fffcc8 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x564957fffc80 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x564957fffc68 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x564957fffc28 <col:20> '_Bool' lvalue Var 0x564957ffeb78 'x$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x564957fffcb0 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x564957fffc98 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x564957fffc48 <col:38> '_Bool' lvalue Var 0x564957ffe658 'x$r_buff0_thd1' '_Bool'
|   |     |-ImplicitCastExpr 0x564957fffd60 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x564957fffd18 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x564957fffce8 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x564957fffd90 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x564957fffd78 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x564957fffd40 <col:66> '_Bool' lvalue Var 0x564957ffe658 'x$r_buff0_thd1' '_Bool'
|   |-BinaryOperator 0x5649580000d8 <line:714:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x564957fffe10 <col:3> '_Bool' lvalue Var 0x564957ffe838 'x$r_buff1_thd1' '_Bool'
|   | `-ImplicitCastExpr 0x5649580000c0 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x564958000090 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x564957ffffb0 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x564957fffed0 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x564957fffe88 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x564957fffe70 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x564957fffe30 <col:20> '_Bool' lvalue Var 0x564957ffeb78 'x$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x564957fffeb8 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x564957fffea0 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x564957fffe50 <col:38> '_Bool' lvalue Var 0x564957ffe658 'x$r_buff0_thd1' '_Bool'
|   |     | `-BinaryOperator 0x564957ffff90 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x564957ffff48 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x564957ffff30 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x564957fffef0 <col:56> '_Bool' lvalue Var 0x564957ffec70 'x$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x564957ffff78 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x564957ffff60 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x564957ffff10 <col:74> '_Bool' lvalue Var 0x564957ffe838 'x$r_buff1_thd1' '_Bool'
|   |     |-ImplicitCastExpr 0x564958000048 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x564958000000 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x564957ffffd0 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x564958000078 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x564958000060 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x564958000028 <col:102> '_Bool' lvalue Var 0x564957ffe838 'x$r_buff1_thd1' '_Bool'
|   |-CallExpr 0x564958000130 <line:715:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x564958000118 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5649580000f8 <col:3> 'void ()' Function 0x564957fa4f00 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x564958000188 <line:716:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x564958000170 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x564958000150 <col:3> 'void ()' Function 0x564957fa4e40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x564958000240 <line:717:3, col:41> 'int' '='
|   | |-DeclRefExpr 0x5649580001a8 <col:3> 'int' lvalue Var 0x564957ffe120 '__unbuffered_cnt' 'int'
|   | `-BinaryOperator 0x564958000220 <col:22, col:41> 'int' '+'
|   |   |-ImplicitCastExpr 0x564958000208 <col:22> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x5649580001c8 <col:22> 'int' lvalue Var 0x564957ffe120 '__unbuffered_cnt' 'int'
|   |   `-IntegerLiteral 0x5649580001e8 <col:41> 'int' 1
|   |-CallExpr 0x564958000298 <line:718:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x564958000280 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x564958000260 <col:3> 'void ()' Function 0x564957fa4f00 '__VERIFIER_atomic_end' 'void ()'
|   `-ReturnStmt 0x564958000348 <line:719:3, col:36>
|     `-CallExpr 0x564958000328 <col:10, col:36> 'void *'
|       `-ImplicitCastExpr 0x564958000310 <col:10> 'void *(*)(void)' <FunctionToPointerDecay>
|         `-DeclRefExpr 0x5649580002b8 <col:10> 'void *(void)' Function 0x564957fa4958 '__VERIFIER_nondet_pointer' 'void *(void)'
|-FunctionDecl 0x5649580004a0 prev 0x564957ffdc48 <line:721:1, line:749:1> line:721:8 used P1 'void *(void *)'
| |-ParmVarDecl 0x564958000408 <col:11, col:17> col:17 arg 'void *'
| `-CompoundStmt 0x564958001c68 <line:722:1, line:749:1>
|   |-CallExpr 0x564958000580 <line:723:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x564958000568 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x564958000548 <col:3> 'void ()' Function 0x564957fa4e40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x5649580005f8 <line:724:3, col:15> 'int' '='
|   | |-DeclRefExpr 0x5649580005a0 <col:3> 'int' lvalue Var 0x564957ffebf8 'x$w_buff1' 'int'
|   | `-ImplicitCastExpr 0x5649580005e0 <col:15> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x5649580005c0 <col:15> 'int' lvalue Var 0x564957ffeb00 'x$w_buff0' 'int'
|   |-BinaryOperator 0x564958000658 <line:725:3, col:15> 'int' '='
|   | |-DeclRefExpr 0x564958000618 <col:3> 'int' lvalue Var 0x564957ffeb00 'x$w_buff0' 'int'
|   | `-IntegerLiteral 0x564958000638 <col:15> 'int' 2
|   |-BinaryOperator 0x5649580006d0 <line:726:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x564958000678 <col:3> '_Bool' lvalue Var 0x564957ffec70 'x$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x5649580006b8 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x564958000698 <col:20> '_Bool' lvalue Var 0x564957ffeb78 'x$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x564958000768 <line:727:3, col:27> '_Bool' '='
|   | |-DeclRefExpr 0x5649580006f0 <col:3> '_Bool' lvalue Var 0x564957ffeb78 'x$w_buff0_used' '_Bool'
|   | `-CStyleCastExpr 0x564958000740 <col:20, col:27> '_Bool' <IntegralToBoolean>
|   |   `-IntegerLiteral 0x564958000710 <col:27> 'int' 1
|   |-CallExpr 0x5649580008e8 <line:728:3, col:56> 'void'
|   | |-ImplicitCastExpr 0x5649580008d0 <col:3> 'void (*)(int)' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x564958000788 <col:3> 'void (int)' Function 0x564957fa4bc8 '__VERIFIER_assert' 'void (int)'
|   | `-UnaryOperator 0x564958000888 <col:21, col:55> 'int' prefix '!' cannot overflow
|   |   `-ParenExpr 0x564958000868 <col:22, col:55> 'int'
|   |     `-BinaryOperator 0x564958000848 <col:23, col:41> 'int' '&&'
|   |       |-ImplicitCastExpr 0x564958000800 <col:23> 'int' <IntegralCast>
|   |       | `-ImplicitCastExpr 0x5649580007e8 <col:23> '_Bool' <LValueToRValue>
|   |       |   `-DeclRefExpr 0x5649580007a8 <col:23> '_Bool' lvalue Var 0x564957ffec70 'x$w_buff1_used' '_Bool'
|   |       `-ImplicitCastExpr 0x564958000830 <col:41> 'int' <IntegralCast>
|   |         `-ImplicitCastExpr 0x564958000818 <col:41> '_Bool' <LValueToRValue>
|   |           `-DeclRefExpr 0x5649580007c8 <col:41> '_Bool' lvalue Var 0x564957ffeb78 'x$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x564958000968 <line:729:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x564958000910 <col:3> '_Bool' lvalue Var 0x564957ffe7c0 'x$r_buff1_thd0' '_Bool'
|   | `-ImplicitCastExpr 0x564958000950 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x564958000930 <col:20> '_Bool' lvalue Var 0x564957ffe5e0 'x$r_buff0_thd0' '_Bool'
|   |-BinaryOperator 0x5649580009e0 <line:730:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x564958000988 <col:3> '_Bool' lvalue Var 0x564957ffe838 'x$r_buff1_thd1' '_Bool'
|   | `-ImplicitCastExpr 0x5649580009c8 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x5649580009a8 <col:20> '_Bool' lvalue Var 0x564957ffe658 'x$r_buff0_thd1' '_Bool'
|   |-BinaryOperator 0x564958000a58 <line:731:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x564958000a00 <col:3> '_Bool' lvalue Var 0x564957ffe8b0 'x$r_buff1_thd2' '_Bool'
|   | `-ImplicitCastExpr 0x564958000a40 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x564958000a20 <col:20> '_Bool' lvalue Var 0x564957ffe6d0 'x$r_buff0_thd2' '_Bool'
|   |-BinaryOperator 0x564958000ad0 <line:732:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x564958000a78 <col:3> '_Bool' lvalue Var 0x564957ffe928 'x$r_buff1_thd3' '_Bool'
|   | `-ImplicitCastExpr 0x564958000ab8 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x564958000a98 <col:20> '_Bool' lvalue Var 0x564957ffe748 'x$r_buff0_thd3' '_Bool'
|   |-BinaryOperator 0x564958000b78 <line:733:3, col:27> '_Bool' '='
|   | |-DeclRefExpr 0x564958000af0 <col:3> '_Bool' lvalue Var 0x564957ffe6d0 'x$r_buff0_thd2' '_Bool'
|   | `-CStyleCastExpr 0x564958000b50 <col:20, col:27> '_Bool' <IntegralToBoolean>
|   |   `-IntegerLiteral 0x564958000b20 <col:27> 'int' 1
|   |-CallExpr 0x564958000bd0 <line:734:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x564958000bb8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x564958000b98 <col:3> 'void ()' Function 0x564957fa4f00 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x564958000c28 <line:735:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x564958000c10 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x564958000bf0 <col:3> 'void ()' Function 0x564957fa4e40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x564958000c88 <line:736:3, col:7> 'int' '='
|   | |-DeclRefExpr 0x564958000c48 <col:3> 'int' lvalue Var 0x564957ffed70 'y' 'int'
|   | `-IntegerLiteral 0x564958000c68 <col:7> 'int' 1
|   |-CallExpr 0x564958000ce0 <line:737:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x564958000cc8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x564958000ca8 <col:3> 'void ()' Function 0x564957fa4f00 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x564958000d38 <line:738:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x564958000d20 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x564958000d00 <col:3> 'void ()' Function 0x564957fa4e40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x564958001020 <line:739:3, col:103> 'int' '='
|   | |-DeclRefExpr 0x564958000d58 <col:3> 'int' lvalue Var 0x564957ffe450 'x' 'int'
|   | `-ConditionalOperator 0x564958000ff0 <col:7, col:103> 'int'
|   |   |-BinaryOperator 0x564958000e18 <col:7, col:25> 'int' '&&'
|   |   | |-ImplicitCastExpr 0x564958000dd0 <col:7> 'int' <IntegralCast>
|   |   | | `-ImplicitCastExpr 0x564958000db8 <col:7> '_Bool' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x564958000d78 <col:7> '_Bool' lvalue Var 0x564957ffeb78 'x$w_buff0_used' '_Bool'
|   |   | `-ImplicitCastExpr 0x564958000e00 <col:25> 'int' <IntegralCast>
|   |   |   `-ImplicitCastExpr 0x564958000de8 <col:25> '_Bool' <LValueToRValue>
|   |   |     `-DeclRefExpr 0x564958000d98 <col:25> '_Bool' lvalue Var 0x564957ffe6d0 'x$r_buff0_thd2' '_Bool'
|   |   |-ImplicitCastExpr 0x564958000fd8 <col:42> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x564958000e38 <col:42> 'int' lvalue Var 0x564957ffeb00 'x$w_buff0' 'int'
|   |   `-ParenExpr 0x564958000fb8 <col:54, col:103> 'int'
|   |     `-ConditionalOperator 0x564958000f88 <col:55, col:102> 'int'
|   |       |-BinaryOperator 0x564958000ef8 <col:55, col:73> 'int' '&&'
|   |       | |-ImplicitCastExpr 0x564958000eb0 <col:55> 'int' <IntegralCast>
|   |       | | `-ImplicitCastExpr 0x564958000e98 <col:55> '_Bool' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x564958000e58 <col:55> '_Bool' lvalue Var 0x564957ffec70 'x$w_buff1_used' '_Bool'
|   |       | `-ImplicitCastExpr 0x564958000ee0 <col:73> 'int' <IntegralCast>
|   |       |   `-ImplicitCastExpr 0x564958000ec8 <col:73> '_Bool' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x564958000e78 <col:73> '_Bool' lvalue Var 0x564957ffe8b0 'x$r_buff1_thd2' '_Bool'
|   |       |-ImplicitCastExpr 0x564958000f58 <col:90> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x564958000f18 <col:90> 'int' lvalue Var 0x564957ffebf8 'x$w_buff1' 'int'
|   |       `-ImplicitCastExpr 0x564958000f70 <col:102> 'int' <LValueToRValue>
|   |         `-DeclRefExpr 0x564958000f38 <col:102> 'int' lvalue Var 0x564957ffe450 'x' 'int'
|   |-BinaryOperator 0x564958001228 <line:740:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x564958001040 <col:3> '_Bool' lvalue Var 0x564957ffeb78 'x$w_buff0_used' '_Bool'
|   | `-ImplicitCastExpr 0x564958001210 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x5649580011e0 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x564958001100 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x5649580010b8 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x5649580010a0 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x564958001060 <col:20> '_Bool' lvalue Var 0x564957ffeb78 'x$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x5649580010e8 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x5649580010d0 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x564958001080 <col:38> '_Bool' lvalue Var 0x564957ffe6d0 'x$r_buff0_thd2' '_Bool'
|   |     |-ImplicitCastExpr 0x564958001198 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x564958001150 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x564958001120 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x5649580011c8 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x5649580011b0 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x564958001178 <col:66> '_Bool' lvalue Var 0x564957ffeb78 'x$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x564958001510 <line:741:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x564958001248 <col:3> '_Bool' lvalue Var 0x564957ffec70 'x$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x5649580014f8 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x5649580014c8 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x5649580013e8 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x564958001308 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x5649580012c0 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x5649580012a8 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x564958001268 <col:20> '_Bool' lvalue Var 0x564957ffeb78 'x$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x5649580012f0 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x5649580012d8 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x564958001288 <col:38> '_Bool' lvalue Var 0x564957ffe6d0 'x$r_buff0_thd2' '_Bool'
|   |     | `-BinaryOperator 0x5649580013c8 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x564958001380 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x564958001368 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x564958001328 <col:56> '_Bool' lvalue Var 0x564957ffec70 'x$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x5649580013b0 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x564958001398 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x564958001348 <col:74> '_Bool' lvalue Var 0x564957ffe8b0 'x$r_buff1_thd2' '_Bool'
|   |     |-ImplicitCastExpr 0x564958001480 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x564958001438 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x564958001408 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x5649580014b0 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x564958001498 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x564958001460 <col:102> '_Bool' lvalue Var 0x564957ffec70 'x$w_buff1_used' '_Bool'
|   |-BinaryOperator 0x564958001718 <line:742:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x564958001530 <col:3> '_Bool' lvalue Var 0x564957ffe6d0 'x$r_buff0_thd2' '_Bool'
|   | `-ImplicitCastExpr 0x564958001700 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x5649580016d0 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x5649580015f0 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x5649580015a8 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x564958001590 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x564958001550 <col:20> '_Bool' lvalue Var 0x564957ffeb78 'x$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x5649580015d8 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x5649580015c0 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x564958001570 <col:38> '_Bool' lvalue Var 0x564957ffe6d0 'x$r_buff0_thd2' '_Bool'
|   |     |-ImplicitCastExpr 0x564958001688 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x564958001640 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x564958001610 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x5649580016b8 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x5649580016a0 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x564958001668 <col:66> '_Bool' lvalue Var 0x564957ffe6d0 'x$r_buff0_thd2' '_Bool'
|   |-BinaryOperator 0x564958001a00 <line:743:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x564958001738 <col:3> '_Bool' lvalue Var 0x564957ffe8b0 'x$r_buff1_thd2' '_Bool'
|   | `-ImplicitCastExpr 0x5649580019e8 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x5649580019b8 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x5649580018d8 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x5649580017f8 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x5649580017b0 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x564958001798 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x564958001758 <col:20> '_Bool' lvalue Var 0x564957ffeb78 'x$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x5649580017e0 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x5649580017c8 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x564958001778 <col:38> '_Bool' lvalue Var 0x564957ffe6d0 'x$r_buff0_thd2' '_Bool'
|   |     | `-BinaryOperator 0x5649580018b8 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x564958001870 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x564958001858 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x564958001818 <col:56> '_Bool' lvalue Var 0x564957ffec70 'x$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x5649580018a0 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x564958001888 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x564958001838 <col:74> '_Bool' lvalue Var 0x564957ffe8b0 'x$r_buff1_thd2' '_Bool'
|   |     |-ImplicitCastExpr 0x564958001970 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x564958001928 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x5649580018f8 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x5649580019a0 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x564958001988 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x564958001950 <col:102> '_Bool' lvalue Var 0x564957ffe8b0 'x$r_buff1_thd2' '_Bool'
|   |-CallExpr 0x564958001a58 <line:744:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x564958001a40 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x564958001a20 <col:3> 'void ()' Function 0x564957fa4f00 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x564958001ab0 <line:745:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x564958001a98 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x564958001a78 <col:3> 'void ()' Function 0x564957fa4e40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x564958001b88 <line:746:3, col:41> 'int' '='
|   | |-DeclRefExpr 0x564958001ad0 <col:3> 'int' lvalue Var 0x564957ffe120 '__unbuffered_cnt' 'int'
|   | `-BinaryOperator 0x564958001b68 <col:22, col:41> 'int' '+'
|   |   |-ImplicitCastExpr 0x564958001b50 <col:22> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x564958001af0 <col:22> 'int' lvalue Var 0x564957ffe120 '__unbuffered_cnt' 'int'
|   |   `-IntegerLiteral 0x564958001b30 <col:41> 'int' 1
|   |-CallExpr 0x564958001be0 <line:747:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x564958001bc8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x564958001ba8 <col:3> 'void ()' Function 0x564957fa4f00 '__VERIFIER_atomic_end' 'void ()'
|   `-ReturnStmt 0x564958001c58 <line:748:3, col:36>
|     `-CallExpr 0x564958001c38 <col:10, col:36> 'void *'
|       `-ImplicitCastExpr 0x564958001c20 <col:10> 'void *(*)(void)' <FunctionToPointerDecay>
|         `-DeclRefExpr 0x564958001c00 <col:10> 'void *(void)' Function 0x564957fa4958 '__VERIFIER_nondet_pointer' 'void *(void)'
|-FunctionDecl 0x564958001df8 prev 0x564957ffdda0 <line:750:1, line:769:1> line:750:8 used P2 'void *(void *)'
| |-ParmVarDecl 0x564958001d60 <col:11, col:17> col:17 arg 'void *'
| `-CompoundStmt 0x564958003030 <line:751:1, line:769:1>
|   |-CallExpr 0x564958001ed8 <line:752:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x564958001ec0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x564958001ea0 <col:3> 'void ()' Function 0x564957fa4e40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x564958001f50 <line:753:3, col:25> 'int' '='
|   | |-DeclRefExpr 0x564958001ef8 <col:3> 'int' lvalue Var 0x564957ffe240 '__unbuffered_p2_EAX' 'int'
|   | `-ImplicitCastExpr 0x564958001f38 <col:25> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x564958001f18 <col:25> 'int' lvalue Var 0x564957ffed70 'y' 'int'
|   |-CallExpr 0x564958001fa8 <line:754:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x564958001f90 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x564958001f70 <col:3> 'void ()' Function 0x564957fa4f00 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x564958002000 <line:755:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x564958001fe8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x564958001fc8 <col:3> 'void ()' Function 0x564957fa4e40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x564958002060 <line:756:3, col:7> 'int' '='
|   | |-DeclRefExpr 0x564958002020 <col:3> 'int' lvalue Var 0x564957ffee90 'z' 'int'
|   | `-IntegerLiteral 0x564958002040 <col:7> 'int' 1
|   |-CallExpr 0x5649580020b8 <line:757:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x5649580020a0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x564958002080 <col:3> 'void ()' Function 0x564957fa4f00 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x564958002110 <line:758:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x5649580020f8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5649580020d8 <col:3> 'void ()' Function 0x564957fa4e40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x5649580023f8 <line:759:3, col:103> 'int' '='
|   | |-DeclRefExpr 0x564958002130 <col:3> 'int' lvalue Var 0x564957ffe450 'x' 'int'
|   | `-ConditionalOperator 0x5649580023c8 <col:7, col:103> 'int'
|   |   |-BinaryOperator 0x5649580021f0 <col:7, col:25> 'int' '&&'
|   |   | |-ImplicitCastExpr 0x5649580021a8 <col:7> 'int' <IntegralCast>
|   |   | | `-ImplicitCastExpr 0x564958002190 <col:7> '_Bool' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x564958002150 <col:7> '_Bool' lvalue Var 0x564957ffeb78 'x$w_buff0_used' '_Bool'
|   |   | `-ImplicitCastExpr 0x5649580021d8 <col:25> 'int' <IntegralCast>
|   |   |   `-ImplicitCastExpr 0x5649580021c0 <col:25> '_Bool' <LValueToRValue>
|   |   |     `-DeclRefExpr 0x564958002170 <col:25> '_Bool' lvalue Var 0x564957ffe748 'x$r_buff0_thd3' '_Bool'
|   |   |-ImplicitCastExpr 0x5649580023b0 <col:42> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x564958002210 <col:42> 'int' lvalue Var 0x564957ffeb00 'x$w_buff0' 'int'
|   |   `-ParenExpr 0x564958002390 <col:54, col:103> 'int'
|   |     `-ConditionalOperator 0x564958002360 <col:55, col:102> 'int'
|   |       |-BinaryOperator 0x5649580022d0 <col:55, col:73> 'int' '&&'
|   |       | |-ImplicitCastExpr 0x564958002288 <col:55> 'int' <IntegralCast>
|   |       | | `-ImplicitCastExpr 0x564958002270 <col:55> '_Bool' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x564958002230 <col:55> '_Bool' lvalue Var 0x564957ffec70 'x$w_buff1_used' '_Bool'
|   |       | `-ImplicitCastExpr 0x5649580022b8 <col:73> 'int' <IntegralCast>
|   |       |   `-ImplicitCastExpr 0x5649580022a0 <col:73> '_Bool' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x564958002250 <col:73> '_Bool' lvalue Var 0x564957ffe928 'x$r_buff1_thd3' '_Bool'
|   |       |-ImplicitCastExpr 0x564958002330 <col:90> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x5649580022f0 <col:90> 'int' lvalue Var 0x564957ffebf8 'x$w_buff1' 'int'
|   |       `-ImplicitCastExpr 0x564958002348 <col:102> 'int' <LValueToRValue>
|   |         `-DeclRefExpr 0x564958002310 <col:102> 'int' lvalue Var 0x564957ffe450 'x' 'int'
|   |-BinaryOperator 0x564958002600 <line:760:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x564958002418 <col:3> '_Bool' lvalue Var 0x564957ffeb78 'x$w_buff0_used' '_Bool'
|   | `-ImplicitCastExpr 0x5649580025e8 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x5649580025b8 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x5649580024d8 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x564958002490 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x564958002478 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x564958002438 <col:20> '_Bool' lvalue Var 0x564957ffeb78 'x$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x5649580024c0 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x5649580024a8 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x564958002458 <col:38> '_Bool' lvalue Var 0x564957ffe748 'x$r_buff0_thd3' '_Bool'
|   |     |-ImplicitCastExpr 0x564958002570 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x564958002528 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x5649580024f8 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x5649580025a0 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x564958002588 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x564958002550 <col:66> '_Bool' lvalue Var 0x564957ffeb78 'x$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x5649580028e8 <line:761:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x564958002620 <col:3> '_Bool' lvalue Var 0x564957ffec70 'x$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x5649580028d0 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x5649580028a0 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x5649580027c0 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x5649580026e0 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x564958002698 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x564958002680 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x564958002640 <col:20> '_Bool' lvalue Var 0x564957ffeb78 'x$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x5649580026c8 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x5649580026b0 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x564958002660 <col:38> '_Bool' lvalue Var 0x564957ffe748 'x$r_buff0_thd3' '_Bool'
|   |     | `-BinaryOperator 0x5649580027a0 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x564958002758 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x564958002740 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x564958002700 <col:56> '_Bool' lvalue Var 0x564957ffec70 'x$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x564958002788 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x564958002770 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x564958002720 <col:74> '_Bool' lvalue Var 0x564957ffe928 'x$r_buff1_thd3' '_Bool'
|   |     |-ImplicitCastExpr 0x564958002858 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x564958002810 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x5649580027e0 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x564958002888 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x564958002870 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x564958002838 <col:102> '_Bool' lvalue Var 0x564957ffec70 'x$w_buff1_used' '_Bool'
|   |-BinaryOperator 0x564958002af0 <line:762:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x564958002908 <col:3> '_Bool' lvalue Var 0x564957ffe748 'x$r_buff0_thd3' '_Bool'
|   | `-ImplicitCastExpr 0x564958002ad8 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x564958002aa8 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x5649580029c8 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x564958002980 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x564958002968 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x564958002928 <col:20> '_Bool' lvalue Var 0x564957ffeb78 'x$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x5649580029b0 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x564958002998 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x564958002948 <col:38> '_Bool' lvalue Var 0x564957ffe748 'x$r_buff0_thd3' '_Bool'
|   |     |-ImplicitCastExpr 0x564958002a60 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x564958002a18 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x5649580029e8 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x564958002a90 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x564958002a78 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x564958002a40 <col:66> '_Bool' lvalue Var 0x564957ffe748 'x$r_buff0_thd3' '_Bool'
|   |-BinaryOperator 0x564958002de8 <line:763:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x564958002b10 <col:3> '_Bool' lvalue Var 0x564957ffe928 'x$r_buff1_thd3' '_Bool'
|   | `-ImplicitCastExpr 0x564958002dd0 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x564958002da0 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x564958002cc0 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x564958002be0 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x564958002b98 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x564958002b80 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x564958002b40 <col:20> '_Bool' lvalue Var 0x564957ffeb78 'x$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x564958002bc8 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x564958002bb0 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x564958002b60 <col:38> '_Bool' lvalue Var 0x564957ffe748 'x$r_buff0_thd3' '_Bool'
|   |     | `-BinaryOperator 0x564958002ca0 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x564958002c58 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x564958002c40 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x564958002c00 <col:56> '_Bool' lvalue Var 0x564957ffec70 'x$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x564958002c88 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x564958002c70 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x564958002c20 <col:74> '_Bool' lvalue Var 0x564957ffe928 'x$r_buff1_thd3' '_Bool'
|   |     |-ImplicitCastExpr 0x564958002d58 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x564958002d10 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x564958002ce0 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x564958002d88 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x564958002d70 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x564958002d38 <col:102> '_Bool' lvalue Var 0x564957ffe928 'x$r_buff1_thd3' '_Bool'
|   |-CallExpr 0x564958002e40 <line:764:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x564958002e28 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x564958002e08 <col:3> 'void ()' Function 0x564957fa4f00 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x564958002e98 <line:765:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x564958002e80 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x564958002e60 <col:3> 'void ()' Function 0x564957fa4e40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x564958002f50 <line:766:3, col:41> 'int' '='
|   | |-DeclRefExpr 0x564958002eb8 <col:3> 'int' lvalue Var 0x564957ffe120 '__unbuffered_cnt' 'int'
|   | `-BinaryOperator 0x564958002f30 <col:22, col:41> 'int' '+'
|   |   |-ImplicitCastExpr 0x564958002f18 <col:22> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x564958002ed8 <col:22> 'int' lvalue Var 0x564957ffe120 '__unbuffered_cnt' 'int'
|   |   `-IntegerLiteral 0x564958002ef8 <col:41> 'int' 1
|   |-CallExpr 0x564958002fa8 <line:767:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x564958002f90 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x564958002f70 <col:3> 'void ()' Function 0x564957fa4f00 '__VERIFIER_atomic_end' 'void ()'
|   `-ReturnStmt 0x564958003020 <line:768:3, col:36>
|     `-CallExpr 0x564958003000 <col:10, col:36> 'void *'
|       `-ImplicitCastExpr 0x564958002fe8 <col:10> 'void *(*)(void)' <FunctionToPointerDecay>
|         `-DeclRefExpr 0x564958002fc8 <col:10> 'void *(void)' Function 0x564957fa4958 '__VERIFIER_nondet_pointer' 'void *(void)'
|-FunctionDecl 0x5649580030e8 prev 0x564957ffde68 <line:770:1, line:772:1> line:770:6 fence 'void ()'
| `-CompoundStmt 0x564958003188 <line:771:1, line:772:1>
|-FunctionDecl 0x5649580031b8 prev 0x564957ffdf28 <line:773:1, line:775:1> line:773:6 isync 'void ()'
| `-CompoundStmt 0x564958003258 <line:774:1, line:775:1>
|-FunctionDecl 0x564958003288 prev 0x564957ffdfe8 <line:776:1, line:778:1> line:776:6 lwfence 'void ()'
| `-CompoundStmt 0x564958003328 <line:777:1, line:778:1>
`-FunctionDecl 0x564958003398 <line:779:1, line:816:1> line:779:5 main 'int ()'
  `-CompoundStmt 0x564958007958 <line:780:1, line:816:1>
    |-DeclStmt 0x5649580034b0 <line:781:3, col:18>
    | `-VarDecl 0x564958003448 <col:3, col:13> col:13 used t2036 'pthread_t':'unsigned long'
    |-CallExpr 0x5649580036b8 <line:782:3, col:54> 'int'
    | |-ImplicitCastExpr 0x5649580036a0 <col:3> 'int (*)(pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x5649580034c8 <col:3> 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' Function 0x564957fe5488 'pthread_create' 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)'
    | |-UnaryOperator 0x564958003508 <col:18, col:19> 'pthread_t *' prefix '&' cannot overflow
    | | `-DeclRefExpr 0x5649580034e8 <col:19> 'pthread_t':'unsigned long' lvalue Var 0x564958003448 't2036' 'pthread_t':'unsigned long'
    | |-ImplicitCastExpr 0x5649580036f8 <col:26, col:36> 'const pthread_attr_t *' <NullToPointer>
    | | `-ParenExpr 0x564958003580 <col:26, col:36> 'void *'
    | |   `-CStyleCastExpr 0x564958003558 <col:27, col:35> 'void *' <NullToPointer>
    | |     `-IntegerLiteral 0x564958003520 <col:35> 'int' 0
    | |-ImplicitCastExpr 0x564958003710 <col:39> 'void *(*)(void *)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x5649580035a0 <col:39> 'void *(void *)' Function 0x564957fff0b8 'P0' 'void *(void *)'
    | `-ParenExpr 0x564958003620 <col:43, col:53> 'void *'
    |   `-CStyleCastExpr 0x5649580035f8 <col:44, col:52> 'void *' <NullToPointer>
    |     `-IntegerLiteral 0x5649580035c0 <col:52> 'int' 0
    |-DeclStmt 0x5649580037a0 <line:783:3, col:18>
    | `-VarDecl 0x564958003738 <col:3, col:13> col:13 used t2037 'pthread_t':'unsigned long'
    |-CallExpr 0x564958003948 <line:784:3, col:54> 'int'
    | |-ImplicitCastExpr 0x564958003930 <col:3> 'int (*)(pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x5649580037b8 <col:3> 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' Function 0x564957fe5488 'pthread_create' 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)'
    | |-UnaryOperator 0x5649580037f8 <col:18, col:19> 'pthread_t *' prefix '&' cannot overflow
    | | `-DeclRefExpr 0x5649580037d8 <col:19> 'pthread_t':'unsigned long' lvalue Var 0x564958003738 't2037' 'pthread_t':'unsigned long'
    | |-ImplicitCastExpr 0x564958003988 <col:26, col:36> 'const pthread_attr_t *' <NullToPointer>
    | | `-ParenExpr 0x564958003870 <col:26, col:36> 'void *'
    | |   `-CStyleCastExpr 0x564958003848 <col:27, col:35> 'void *' <NullToPointer>
    | |     `-IntegerLiteral 0x564958003810 <col:35> 'int' 0
    | |-ImplicitCastExpr 0x5649580039a0 <col:39> 'void *(*)(void *)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x564958003890 <col:39> 'void *(void *)' Function 0x5649580004a0 'P1' 'void *(void *)'
    | `-ParenExpr 0x564958003910 <col:43, col:53> 'void *'
    |   `-CStyleCastExpr 0x5649580038e8 <col:44, col:52> 'void *' <NullToPointer>
    |     `-IntegerLiteral 0x5649580038b0 <col:52> 'int' 0
    |-DeclStmt 0x564958003a30 <line:785:3, col:18>
    | `-VarDecl 0x5649580039c8 <col:3, col:13> col:13 used t2038 'pthread_t':'unsigned long'
    |-CallExpr 0x564958003be8 <line:786:3, col:54> 'int'
    | |-ImplicitCastExpr 0x564958003bd0 <col:3> 'int (*)(pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x564958003a48 <col:3> 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' Function 0x564957fe5488 'pthread_create' 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)'
    | |-UnaryOperator 0x564958003a88 <col:18, col:19> 'pthread_t *' prefix '&' cannot overflow
    | | `-DeclRefExpr 0x564958003a68 <col:19> 'pthread_t':'unsigned long' lvalue Var 0x5649580039c8 't2038' 'pthread_t':'unsigned long'
    | |-ImplicitCastExpr 0x564958003c28 <col:26, col:36> 'const pthread_attr_t *' <NullToPointer>
    | | `-ParenExpr 0x564958003b00 <col:26, col:36> 'void *'
    | |   `-CStyleCastExpr 0x564958003ad8 <col:27, col:35> 'void *' <NullToPointer>
    | |     `-IntegerLiteral 0x564958003aa0 <col:35> 'int' 0
    | |-ImplicitCastExpr 0x564958003c40 <col:39> 'void *(*)(void *)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x564958003b20 <col:39> 'void *(void *)' Function 0x564958001df8 'P2' 'void *(void *)'
    | `-ParenExpr 0x564958003bb0 <col:43, col:53> 'void *'
    |   `-CStyleCastExpr 0x564958003b88 <col:44, col:52> 'void *' <NullToPointer>
    |     `-IntegerLiteral 0x564958003b50 <col:52> 'int' 0
    |-CallExpr 0x564958003c90 <line:787:3, col:27> 'void'
    | `-ImplicitCastExpr 0x564958003c78 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x564958003c58 <col:3> 'void ()' Function 0x564957fa4e40 '__VERIFIER_atomic_begin' 'void ()'
    |-BinaryOperator 0x564958003d60 <line:788:3, col:41> '_Bool' '='
    | |-DeclRefExpr 0x564958003cb0 <col:3> '_Bool' lvalue Var 0x564957ffe2d8 'main$tmp_guard0' '_Bool'
    | `-ImplicitCastExpr 0x564958003d48 <col:21, col:41> '_Bool' <IntegralToBoolean>
    |   `-BinaryOperator 0x564958003d28 <col:21, col:41> 'int' '=='
    |     |-ImplicitCastExpr 0x564958003d10 <col:21> 'int' <LValueToRValue>
    |     | `-DeclRefExpr 0x564958003cd0 <col:21> 'int' lvalue Var 0x564957ffe120 '__unbuffered_cnt' 'int'
    |     `-IntegerLiteral 0x564958003cf0 <col:41> 'int' 3
    |-CallExpr 0x564958003db8 <line:789:3, col:25> 'void'
    | `-ImplicitCastExpr 0x564958003da0 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x564958003d80 <col:3> 'void ()' Function 0x564957fa4f00 '__VERIFIER_atomic_end' 'void ()'
    |-CallExpr 0x564958003e30 <line:790:3, col:36> 'void'
    | |-ImplicitCastExpr 0x564958003e18 <col:3> 'void (*)(int)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x564958003dd8 <col:3> 'void (int)' Function 0x564957fa4790 '__VERIFIER_assume' 'void (int)'
    | `-ImplicitCastExpr 0x564958003e70 <col:21> 'int' <IntegralCast>
    |   `-ImplicitCastExpr 0x564958003e58 <col:21> '_Bool' <LValueToRValue>
    |     `-DeclRefExpr 0x564958003df8 <col:21> '_Bool' lvalue Var 0x564957ffe2d8 'main$tmp_guard0' '_Bool'
    |-CallExpr 0x564958003ec0 <line:791:3, col:27> 'void'
    | `-ImplicitCastExpr 0x564958003ea8 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x564958003e88 <col:3> 'void ()' Function 0x564957fa4e40 '__VERIFIER_atomic_begin' 'void ()'
    |-BinaryOperator 0x5649580041a8 <line:792:3, col:103> 'int' '='
    | |-DeclRefExpr 0x564958003ee0 <col:3> 'int' lvalue Var 0x564957ffe450 'x' 'int'
    | `-ConditionalOperator 0x564958004178 <col:7, col:103> 'int'
    |   |-BinaryOperator 0x564958003fa0 <col:7, col:25> 'int' '&&'
    |   | |-ImplicitCastExpr 0x564958003f58 <col:7> 'int' <IntegralCast>
    |   | | `-ImplicitCastExpr 0x564958003f40 <col:7> '_Bool' <LValueToRValue>
    |   | |   `-DeclRefExpr 0x564958003f00 <col:7> '_Bool' lvalue Var 0x564957ffeb78 'x$w_buff0_used' '_Bool'
    |   | `-ImplicitCastExpr 0x564958003f88 <col:25> 'int' <IntegralCast>
    |   |   `-ImplicitCastExpr 0x564958003f70 <col:25> '_Bool' <LValueToRValue>
    |   |     `-DeclRefExpr 0x564958003f20 <col:25> '_Bool' lvalue Var 0x564957ffe5e0 'x$r_buff0_thd0' '_Bool'
    |   |-ImplicitCastExpr 0x564958004160 <col:42> 'int' <LValueToRValue>
    |   | `-DeclRefExpr 0x564958003fc0 <col:42> 'int' lvalue Var 0x564957ffeb00 'x$w_buff0' 'int'
    |   `-ParenExpr 0x564958004140 <col:54, col:103> 'int'
    |     `-ConditionalOperator 0x564958004110 <col:55, col:102> 'int'
    |       |-BinaryOperator 0x564958004080 <col:55, col:73> 'int' '&&'
    |       | |-ImplicitCastExpr 0x564958004038 <col:55> 'int' <IntegralCast>
    |       | | `-ImplicitCastExpr 0x564958004020 <col:55> '_Bool' <LValueToRValue>
    |       | |   `-DeclRefExpr 0x564958003fe0 <col:55> '_Bool' lvalue Var 0x564957ffec70 'x$w_buff1_used' '_Bool'
    |       | `-ImplicitCastExpr 0x564958004068 <col:73> 'int' <IntegralCast>
    |       |   `-ImplicitCastExpr 0x564958004050 <col:73> '_Bool' <LValueToRValue>
    |       |     `-DeclRefExpr 0x564958004000 <col:73> '_Bool' lvalue Var 0x564957ffe7c0 'x$r_buff1_thd0' '_Bool'
    |       |-ImplicitCastExpr 0x5649580040e0 <col:90> 'int' <LValueToRValue>
    |       | `-DeclRefExpr 0x5649580040a0 <col:90> 'int' lvalue Var 0x564957ffebf8 'x$w_buff1' 'int'
    |       `-ImplicitCastExpr 0x5649580040f8 <col:102> 'int' <LValueToRValue>
    |         `-DeclRefExpr 0x5649580040c0 <col:102> 'int' lvalue Var 0x564957ffe450 'x' 'int'
    |-BinaryOperator 0x5649580043b0 <line:793:3, col:66> '_Bool' '='
    | |-DeclRefExpr 0x5649580041c8 <col:3> '_Bool' lvalue Var 0x564957ffeb78 'x$w_buff0_used' '_Bool'
    | `-ImplicitCastExpr 0x564958004398 <col:20, col:66> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x564958004368 <col:20, col:66> 'int'
    |     |-BinaryOperator 0x564958004288 <col:20, col:38> 'int' '&&'
    |     | |-ImplicitCastExpr 0x564958004240 <col:20> 'int' <IntegralCast>
    |     | | `-ImplicitCastExpr 0x564958004228 <col:20> '_Bool' <LValueToRValue>
    |     | |   `-DeclRefExpr 0x5649580041e8 <col:20> '_Bool' lvalue Var 0x564957ffeb78 'x$w_buff0_used' '_Bool'
    |     | `-ImplicitCastExpr 0x564958004270 <col:38> 'int' <IntegralCast>
    |     |   `-ImplicitCastExpr 0x564958004258 <col:38> '_Bool' <LValueToRValue>
    |     |     `-DeclRefExpr 0x564958004208 <col:38> '_Bool' lvalue Var 0x564957ffe5e0 'x$r_buff0_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x564958004320 <col:55, col:62> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x5649580042d8 <col:55, col:62> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x5649580042a8 <col:62> 'int' 0
    |     `-ImplicitCastExpr 0x564958004350 <col:66> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x564958004338 <col:66> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x564958004300 <col:66> '_Bool' lvalue Var 0x564957ffeb78 'x$w_buff0_used' '_Bool'
    |-BinaryOperator 0x564958004698 <line:794:3, col:102> '_Bool' '='
    | |-DeclRefExpr 0x5649580043d0 <col:3> '_Bool' lvalue Var 0x564957ffec70 'x$w_buff1_used' '_Bool'
    | `-ImplicitCastExpr 0x564958004680 <col:20, col:102> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x564958004650 <col:20, col:102> 'int'
    |     |-BinaryOperator 0x564958004570 <col:20, col:74> 'int' '||'
    |     | |-BinaryOperator 0x564958004490 <col:20, col:38> 'int' '&&'
    |     | | |-ImplicitCastExpr 0x564958004448 <col:20> 'int' <IntegralCast>
    |     | | | `-ImplicitCastExpr 0x564958004430 <col:20> '_Bool' <LValueToRValue>
    |     | | |   `-DeclRefExpr 0x5649580043f0 <col:20> '_Bool' lvalue Var 0x564957ffeb78 'x$w_buff0_used' '_Bool'
    |     | | `-ImplicitCastExpr 0x564958004478 <col:38> 'int' <IntegralCast>
    |     | |   `-ImplicitCastExpr 0x564958004460 <col:38> '_Bool' <LValueToRValue>
    |     | |     `-DeclRefExpr 0x564958004410 <col:38> '_Bool' lvalue Var 0x564957ffe5e0 'x$r_buff0_thd0' '_Bool'
    |     | `-BinaryOperator 0x564958004550 <col:56, col:74> 'int' '&&'
    |     |   |-ImplicitCastExpr 0x564958004508 <col:56> 'int' <IntegralCast>
    |     |   | `-ImplicitCastExpr 0x5649580044f0 <col:56> '_Bool' <LValueToRValue>
    |     |   |   `-DeclRefExpr 0x5649580044b0 <col:56> '_Bool' lvalue Var 0x564957ffec70 'x$w_buff1_used' '_Bool'
    |     |   `-ImplicitCastExpr 0x564958004538 <col:74> 'int' <IntegralCast>
    |     |     `-ImplicitCastExpr 0x564958004520 <col:74> '_Bool' <LValueToRValue>
    |     |       `-DeclRefExpr 0x5649580044d0 <col:74> '_Bool' lvalue Var 0x564957ffe7c0 'x$r_buff1_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x564958004608 <col:91, col:98> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x5649580045c0 <col:91, col:98> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x564958004590 <col:98> 'int' 0
    |     `-ImplicitCastExpr 0x564958004638 <col:102> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x564958004620 <col:102> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x5649580045e8 <col:102> '_Bool' lvalue Var 0x564957ffec70 'x$w_buff1_used' '_Bool'
    |-BinaryOperator 0x5649580048a0 <line:795:3, col:66> '_Bool' '='
    | |-DeclRefExpr 0x5649580046b8 <col:3> '_Bool' lvalue Var 0x564957ffe5e0 'x$r_buff0_thd0' '_Bool'
    | `-ImplicitCastExpr 0x564958004888 <col:20, col:66> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x564958004858 <col:20, col:66> 'int'
    |     |-BinaryOperator 0x564958004778 <col:20, col:38> 'int' '&&'
    |     | |-ImplicitCastExpr 0x564958004730 <col:20> 'int' <IntegralCast>
    |     | | `-ImplicitCastExpr 0x564958004718 <col:20> '_Bool' <LValueToRValue>
    |     | |   `-DeclRefExpr 0x5649580046d8 <col:20> '_Bool' lvalue Var 0x564957ffeb78 'x$w_buff0_used' '_Bool'
    |     | `-ImplicitCastExpr 0x564958004760 <col:38> 'int' <IntegralCast>
    |     |   `-ImplicitCastExpr 0x564958004748 <col:38> '_Bool' <LValueToRValue>
    |     |     `-DeclRefExpr 0x5649580046f8 <col:38> '_Bool' lvalue Var 0x564957ffe5e0 'x$r_buff0_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x564958004810 <col:55, col:62> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x5649580047c8 <col:55, col:62> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x564958004798 <col:62> 'int' 0
    |     `-ImplicitCastExpr 0x564958004840 <col:66> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x564958004828 <col:66> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x5649580047f0 <col:66> '_Bool' lvalue Var 0x564957ffe5e0 'x$r_buff0_thd0' '_Bool'
    |-BinaryOperator 0x564958004ba8 <line:796:3, col:102> '_Bool' '='
    | |-DeclRefExpr 0x5649580048c0 <col:3> '_Bool' lvalue Var 0x564957ffe7c0 'x$r_buff1_thd0' '_Bool'
    | `-ImplicitCastExpr 0x564958004b90 <col:20, col:102> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x564958004b60 <col:20, col:102> 'int'
    |     |-BinaryOperator 0x564958004a60 <col:20, col:74> 'int' '||'
    |     | |-BinaryOperator 0x564958004980 <col:20, col:38> 'int' '&&'
    |     | | |-ImplicitCastExpr 0x564958004938 <col:20> 'int' <IntegralCast>
    |     | | | `-ImplicitCastExpr 0x564958004920 <col:20> '_Bool' <LValueToRValue>
    |     | | |   `-DeclRefExpr 0x5649580048e0 <col:20> '_Bool' lvalue Var 0x564957ffeb78 'x$w_buff0_used' '_Bool'
    |     | | `-ImplicitCastExpr 0x564958004968 <col:38> 'int' <IntegralCast>
    |     | |   `-ImplicitCastExpr 0x564958004950 <col:38> '_Bool' <LValueToRValue>
    |     | |     `-DeclRefExpr 0x564958004900 <col:38> '_Bool' lvalue Var 0x564957ffe5e0 'x$r_buff0_thd0' '_Bool'
    |     | `-BinaryOperator 0x564958004a40 <col:56, col:74> 'int' '&&'
    |     |   |-ImplicitCastExpr 0x5649580049f8 <col:56> 'int' <IntegralCast>
    |     |   | `-ImplicitCastExpr 0x5649580049e0 <col:56> '_Bool' <LValueToRValue>
    |     |   |   `-DeclRefExpr 0x5649580049a0 <col:56> '_Bool' lvalue Var 0x564957ffec70 'x$w_buff1_used' '_Bool'
    |     |   `-ImplicitCastExpr 0x564958004a28 <col:74> 'int' <IntegralCast>
    |     |     `-ImplicitCastExpr 0x564958004a10 <col:74> '_Bool' <LValueToRValue>
    |     |       `-DeclRefExpr 0x5649580049c0 <col:74> '_Bool' lvalue Var 0x564957ffe7c0 'x$r_buff1_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x564958004af8 <col:91, col:98> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x564958004ab0 <col:91, col:98> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x564958004a80 <col:98> 'int' 0
    |     `-ImplicitCastExpr 0x564958004b28 <col:102> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x564958004b10 <col:102> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x564958004ad8 <col:102> '_Bool' lvalue Var 0x564957ffe7c0 'x$r_buff1_thd0' '_Bool'
    |-CallExpr 0x564958004c00 <line:797:3, col:25> 'void'
    | `-ImplicitCastExpr 0x564958004be8 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x564958004bc8 <col:3> 'void ()' Function 0x564957fa4f00 '__VERIFIER_atomic_end' 'void ()'
    |-CallExpr 0x564958004c58 <line:798:3, col:27> 'void'
    | `-ImplicitCastExpr 0x564958004c40 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x564958004c20 <col:3> 'void ()' Function 0x564957fa4e40 '__VERIFIER_atomic_begin' 'void ()'
    |-BinaryOperator 0x564958004d08 <line:799:3, col:45> '_Bool' '='
    | |-DeclRefExpr 0x564958004c78 <col:3> '_Bool' lvalue Var 0x564957ffef28 'weak$$choice0' '_Bool'
    | `-ImplicitCastExpr 0x564958004cf0 <col:19, col:45> '_Bool' <PointerToBoolean>
    |   `-CallExpr 0x564958004cd0 <col:19, col:45> 'void *'
    |     `-ImplicitCastExpr 0x564958004cb8 <col:19> 'void *(*)(void)' <FunctionToPointerDecay>
    |       `-DeclRefExpr 0x564958004c98 <col:19> 'void *(void)' Function 0x564957fa4958 '__VERIFIER_nondet_pointer' 'void *(void)'
    |-BinaryOperator 0x564958004db8 <line:800:3, col:45> '_Bool' '='
    | |-DeclRefExpr 0x564958004d28 <col:3> '_Bool' lvalue Var 0x564957ffefa0 'weak$$choice2' '_Bool'
    | `-ImplicitCastExpr 0x564958004da0 <col:19, col:45> '_Bool' <PointerToBoolean>
    |   `-CallExpr 0x564958004d80 <col:19, col:45> 'void *'
    |     `-ImplicitCastExpr 0x564958004d68 <col:19> 'void *(*)(void)' <FunctionToPointerDecay>
    |       `-DeclRefExpr 0x564958004d48 <col:19> 'void *(void)' Function 0x564957fa4958 '__VERIFIER_nondet_pointer' 'void *(void)'
    |-BinaryOperator 0x564958004e30 <line:801:3, col:21> '_Bool' '='
    | |-DeclRefExpr 0x564958004dd8 <col:3> '_Bool' lvalue Var 0x564957ffe4e8 'x$flush_delayed' '_Bool'
    | `-ImplicitCastExpr 0x564958004e18 <col:21> '_Bool' <LValueToRValue>
    |   `-DeclRefExpr 0x564958004df8 <col:21> '_Bool' lvalue Var 0x564957ffefa0 'weak$$choice2' '_Bool'
    |-BinaryOperator 0x564958004ea8 <line:802:3, col:15> 'int' '='
    | |-DeclRefExpr 0x564958004e50 <col:3> 'int' lvalue Var 0x564957ffe568 'x$mem_tmp' 'int'
    | `-ImplicitCastExpr 0x564958004e90 <col:15> 'int' <LValueToRValue>
    |   `-DeclRefExpr 0x564958004e70 <col:15> 'int' lvalue Var 0x564957ffe450 'x' 'int'
    |-BinaryOperator 0x5649580052e0 <line:803:3, col:162> 'int' '='
    | |-DeclRefExpr 0x564958004ec8 <col:3> 'int' lvalue Var 0x564957ffe450 'x' 'int'
    | `-ConditionalOperator 0x5649580052b0 <col:7, col:162> 'int'
    |   |-BinaryOperator 0x5649580050d8 <col:7, col:84> 'int' '||'
    |   | |-BinaryOperator 0x564958004ff8 <col:7, col:46> 'int' '||'
    |   | | |-UnaryOperator 0x564958004f20 <col:7, col:8> 'int' prefix '!' cannot overflow
    |   | | | `-ImplicitCastExpr 0x564958004f08 <col:8> '_Bool' <LValueToRValue>
    |   | | |   `-DeclRefExpr 0x564958004ee8 <col:8> '_Bool' lvalue Var 0x564957ffeb78 'x$w_buff0_used' '_Bool'
    |   | | `-BinaryOperator 0x564958004fd8 <col:26, col:46> 'int' '&&'
    |   | |   |-UnaryOperator 0x564958004f70 <col:26, col:27> 'int' prefix '!' cannot overflow
    |   | |   | `-ImplicitCastExpr 0x564958004f58 <col:27> '_Bool' <LValueToRValue>
    |   | |   |   `-DeclRefExpr 0x564958004f38 <col:27> '_Bool' lvalue Var 0x564957ffe5e0 'x$r_buff0_thd0' '_Bool'
    |   | |   `-UnaryOperator 0x564958004fc0 <col:45, col:46> 'int' prefix '!' cannot overflow
    |   | |     `-ImplicitCastExpr 0x564958004fa8 <col:46> '_Bool' <LValueToRValue>
    |   | |       `-DeclRefExpr 0x564958004f88 <col:46> '_Bool' lvalue Var 0x564957ffec70 'x$w_buff1_used' '_Bool'
    |   | `-BinaryOperator 0x5649580050b8 <col:64, col:84> 'int' '&&'
    |   |   |-UnaryOperator 0x564958005050 <col:64, col:65> 'int' prefix '!' cannot overflow
    |   |   | `-ImplicitCastExpr 0x564958005038 <col:65> '_Bool' <LValueToRValue>
    |   |   |   `-DeclRefExpr 0x564958005018 <col:65> '_Bool' lvalue Var 0x564957ffe5e0 'x$r_buff0_thd0' '_Bool'
    |   |   `-UnaryOperator 0x5649580050a0 <col:83, col:84> 'int' prefix '!' cannot overflow
    |   |     `-ImplicitCastExpr 0x564958005088 <col:84> '_Bool' <LValueToRValue>
    |   |       `-DeclRefExpr 0x564958005068 <col:84> '_Bool' lvalue Var 0x564957ffe7c0 'x$r_buff1_thd0' '_Bool'
    |   |-ImplicitCastExpr 0x564958005298 <col:101> 'int' <LValueToRValue>
    |   | `-DeclRefExpr 0x5649580050f8 <col:101> 'int' lvalue Var 0x564957ffe450 'x' 'int'
    |   `-ParenExpr 0x564958005278 <col:105, col:162> 'int'
    |     `-ConditionalOperator 0x564958005248 <col:106, col:153> 'int'
    |       |-BinaryOperator 0x5649580051b8 <col:106, col:124> 'int' '&&'
    |       | |-ImplicitCastExpr 0x564958005170 <col:106> 'int' <IntegralCast>
    |       | | `-ImplicitCastExpr 0x564958005158 <col:106> '_Bool' <LValueToRValue>
    |       | |   `-DeclRefExpr 0x564958005118 <col:106> '_Bool' lvalue Var 0x564957ffeb78 'x$w_buff0_used' '_Bool'
    |       | `-ImplicitCastExpr 0x5649580051a0 <col:124> 'int' <IntegralCast>
    |       |   `-ImplicitCastExpr 0x564958005188 <col:124> '_Bool' <LValueToRValue>
    |       |     `-DeclRefExpr 0x564958005138 <col:124> '_Bool' lvalue Var 0x564957ffe5e0 'x$r_buff0_thd0' '_Bool'
    |       |-ImplicitCastExpr 0x564958005218 <col:141> 'int' <LValueToRValue>
    |       | `-DeclRefExpr 0x5649580051d8 <col:141> 'int' lvalue Var 0x564957ffeb00 'x$w_buff0' 'int'
    |       `-ImplicitCastExpr 0x564958005230 <col:153> 'int' <LValueToRValue>
    |         `-DeclRefExpr 0x5649580051f8 <col:153> 'int' lvalue Var 0x564957ffebf8 'x$w_buff1' 'int'
    |-BinaryOperator 0x5649580057f0 <line:804:3, col:208> 'int' '='
    | |-DeclRefExpr 0x564958005300 <col:3> 'int' lvalue Var 0x564957ffeb00 'x$w_buff0' 'int'
    | `-ConditionalOperator 0x5649580057c0 <col:15, col:208> 'int'
    |   |-ImplicitCastExpr 0x564958005790 <col:15> 'int' <IntegralCast>
    |   | `-ImplicitCastExpr 0x564958005778 <col:15> '_Bool' <LValueToRValue>
    |   |   `-DeclRefExpr 0x564958005320 <col:15> '_Bool' lvalue Var 0x564957ffefa0 'weak$$choice2' '_Bool'
    |   |-ImplicitCastExpr 0x5649580057a8 <col:31> 'int' <LValueToRValue>
    |   | `-DeclRefExpr 0x564958005340 <col:31> 'int' lvalue Var 0x564957ffeb00 'x$w_buff0' 'int'
    |   `-ParenExpr 0x564958005758 <col:43, col:208> 'int'
    |     `-ConditionalOperator 0x564958005728 <col:44, col:207> 'int'
    |       |-BinaryOperator 0x564958005550 <col:44, col:121> 'int' '||'
    |       | |-BinaryOperator 0x564958005470 <col:44, col:83> 'int' '||'
    |       | | |-UnaryOperator 0x564958005398 <col:44, col:45> 'int' prefix '!' cannot overflow
    |       | | | `-ImplicitCastExpr 0x564958005380 <col:45> '_Bool' <LValueToRValue>
    |       | | |   `-DeclRefExpr 0x564958005360 <col:45> '_Bool' lvalue Var 0x564957ffeb78 'x$w_buff0_used' '_Bool'
    |       | | `-BinaryOperator 0x564958005450 <col:63, col:83> 'int' '&&'
    |       | |   |-UnaryOperator 0x5649580053e8 <col:63, col:64> 'int' prefix '!' cannot overflow
    |       | |   | `-ImplicitCastExpr 0x5649580053d0 <col:64> '_Bool' <LValueToRValue>
    |       | |   |   `-DeclRefExpr 0x5649580053b0 <col:64> '_Bool' lvalue Var 0x564957ffe5e0 'x$r_buff0_thd0' '_Bool'
    |       | |   `-UnaryOperator 0x564958005438 <col:82, col:83> 'int' prefix '!' cannot overflow
    |       | |     `-ImplicitCastExpr 0x564958005420 <col:83> '_Bool' <LValueToRValue>
    |       | |       `-DeclRefExpr 0x564958005400 <col:83> '_Bool' lvalue Var 0x564957ffec70 'x$w_buff1_used' '_Bool'
    |       | `-BinaryOperator 0x564958005530 <col:101, col:121> 'int' '&&'
    |       |   |-UnaryOperator 0x5649580054c8 <col:101, col:102> 'int' prefix '!' cannot overflow
    |       |   | `-ImplicitCastExpr 0x5649580054b0 <col:102> '_Bool' <LValueToRValue>
    |       |   |   `-DeclRefExpr 0x564958005490 <col:102> '_Bool' lvalue Var 0x564957ffe5e0 'x$r_buff0_thd0' '_Bool'
    |       |   `-UnaryOperator 0x564958005518 <col:120, col:121> 'int' prefix '!' cannot overflow
    |       |     `-ImplicitCastExpr 0x564958005500 <col:121> '_Bool' <LValueToRValue>
    |       |       `-DeclRefExpr 0x5649580054e0 <col:121> '_Bool' lvalue Var 0x564957ffe7c0 'x$r_buff1_thd0' '_Bool'
    |       |-ImplicitCastExpr 0x564958005710 <col:138> 'int' <LValueToRValue>
    |       | `-DeclRefExpr 0x564958005570 <col:138> 'int' lvalue Var 0x564957ffeb00 'x$w_buff0' 'int'
    |       `-ParenExpr 0x5649580056f0 <col:150, col:207> 'int'
    |         `-ConditionalOperator 0x5649580056c0 <col:151, col:198> 'int'
    |           |-BinaryOperator 0x564958005630 <col:151, col:169> 'int' '&&'
    |           | |-ImplicitCastExpr 0x5649580055e8 <col:151> 'int' <IntegralCast>
    |           | | `-ImplicitCastExpr 0x5649580055d0 <col:151> '_Bool' <LValueToRValue>
    |           | |   `-DeclRefExpr 0x564958005590 <col:151> '_Bool' lvalue Var 0x564957ffeb78 'x$w_buff0_used' '_Bool'
    |           | `-ImplicitCastExpr 0x564958005618 <col:169> 'int' <IntegralCast>
    |           |   `-ImplicitCastExpr 0x564958005600 <col:169> '_Bool' <LValueToRValue>
    |           |     `-DeclRefExpr 0x5649580055b0 <col:169> '_Bool' lvalue Var 0x564957ffe5e0 'x$r_buff0_thd0' '_Bool'
    |           |-ImplicitCastExpr 0x564958005690 <col:186> 'int' <LValueToRValue>
    |           | `-DeclRefExpr 0x564958005650 <col:186> 'int' lvalue Var 0x564957ffeb00 'x$w_buff0' 'int'
    |           `-ImplicitCastExpr 0x5649580056a8 <col:198> 'int' <LValueToRValue>
    |             `-DeclRefExpr 0x564958005670 <col:198> 'int' lvalue Var 0x564957ffeb00 'x$w_buff0' 'int'
    |-BinaryOperator 0x564958005d10 <line:805:3, col:208> 'int' '='
    | |-DeclRefExpr 0x564958005810 <col:3> 'int' lvalue Var 0x564957ffebf8 'x$w_buff1' 'int'
    | `-ConditionalOperator 0x564958005ce0 <col:15, col:208> 'int'
    |   |-ImplicitCastExpr 0x564958005cb0 <col:15> 'int' <IntegralCast>
    |   | `-ImplicitCastExpr 0x564958005c98 <col:15> '_Bool' <LValueToRValue>
    |   |   `-DeclRefExpr 0x564958005830 <col:15> '_Bool' lvalue Var 0x564957ffefa0 'weak$$choice2' '_Bool'
    |   |-ImplicitCastExpr 0x564958005cc8 <col:31> 'int' <LValueToRValue>
    |   | `-DeclRefExpr 0x564958005850 <col:31> 'int' lvalue Var 0x564957ffebf8 'x$w_buff1' 'int'
    |   `-ParenExpr 0x564958005c78 <col:43, col:208> 'int'
    |     `-ConditionalOperator 0x564958005c48 <col:44, col:207> 'int'
    |       |-BinaryOperator 0x564958005a60 <col:44, col:121> 'int' '||'
    |       | |-BinaryOperator 0x564958005980 <col:44, col:83> 'int' '||'
    |       | | |-UnaryOperator 0x5649580058a8 <col:44, col:45> 'int' prefix '!' cannot overflow
    |       | | | `-ImplicitCastExpr 0x564958005890 <col:45> '_Bool' <LValueToRValue>
    |       | | |   `-DeclRefExpr 0x564958005870 <col:45> '_Bool' lvalue Var 0x564957ffeb78 'x$w_buff0_used' '_Bool'
    |       | | `-BinaryOperator 0x564958005960 <col:63, col:83> 'int' '&&'
    |       | |   |-UnaryOperator 0x5649580058f8 <col:63, col:64> 'int' prefix '!' cannot overflow
    |       | |   | `-ImplicitCastExpr 0x5649580058e0 <col:64> '_Bool' <LValueToRValue>
    |       | |   |   `-DeclRefExpr 0x5649580058c0 <col:64> '_Bool' lvalue Var 0x564957ffe5e0 'x$r_buff0_thd0' '_Bool'
    |       | |   `-UnaryOperator 0x564958005948 <col:82, col:83> 'int' prefix '!' cannot overflow
    |       | |     `-ImplicitCastExpr 0x564958005930 <col:83> '_Bool' <LValueToRValue>
    |       | |       `-DeclRefExpr 0x564958005910 <col:83> '_Bool' lvalue Var 0x564957ffec70 'x$w_buff1_used' '_Bool'
    |       | `-BinaryOperator 0x564958005a40 <col:101, col:121> 'int' '&&'
    |       |   |-UnaryOperator 0x5649580059d8 <col:101, col:102> 'int' prefix '!' cannot overflow
    |       |   | `-ImplicitCastExpr 0x5649580059c0 <col:102> '_Bool' <LValueToRValue>
    |       |   |   `-DeclRefExpr 0x5649580059a0 <col:102> '_Bool' lvalue Var 0x564957ffe5e0 'x$r_buff0_thd0' '_Bool'
    |       |   `-UnaryOperator 0x564958005a28 <col:120, col:121> 'int' prefix '!' cannot overflow
    |       |     `-ImplicitCastExpr 0x564958005a10 <col:121> '_Bool' <LValueToRValue>
    |       |       `-DeclRefExpr 0x5649580059f0 <col:121> '_Bool' lvalue Var 0x564957ffe7c0 'x$r_buff1_thd0' '_Bool'
    |       |-ImplicitCastExpr 0x564958005c30 <col:138> 'int' <LValueToRValue>
    |       | `-DeclRefExpr 0x564958005a80 <col:138> 'int' lvalue Var 0x564957ffebf8 'x$w_buff1' 'int'
    |       `-ParenExpr 0x564958005c10 <col:150, col:207> 'int'
    |         `-ConditionalOperator 0x564958005be0 <col:151, col:198> 'int'
    |           |-BinaryOperator 0x564958005b40 <col:151, col:169> 'int' '&&'
    |           | |-ImplicitCastExpr 0x564958005af8 <col:151> 'int' <IntegralCast>
    |           | | `-ImplicitCastExpr 0x564958005ae0 <col:151> '_Bool' <LValueToRValue>
    |           | |   `-DeclRefExpr 0x564958005aa0 <col:151> '_Bool' lvalue Var 0x564957ffeb78 'x$w_buff0_used' '_Bool'
    |           | `-ImplicitCastExpr 0x564958005b28 <col:169> 'int' <IntegralCast>
    |           |   `-ImplicitCastExpr 0x564958005b10 <col:169> '_Bool' <LValueToRValue>
    |           |     `-DeclRefExpr 0x564958005ac0 <col:169> '_Bool' lvalue Var 0x564957ffe5e0 'x$r_buff0_thd0' '_Bool'
    |           |-ImplicitCastExpr 0x564958005bb0 <col:186> 'int' <LValueToRValue>
    |           | `-DeclRefExpr 0x564958005b70 <col:186> 'int' lvalue Var 0x564957ffebf8 'x$w_buff1' 'int'
    |           `-ImplicitCastExpr 0x564958005bc8 <col:198> 'int' <LValueToRValue>
    |             `-DeclRefExpr 0x564958005b90 <col:198> 'int' lvalue Var 0x564957ffebf8 'x$w_buff1' 'int'
    |-BinaryOperator 0x5649580062b8 <line:806:3, col:227> '_Bool' '='
    | |-DeclRefExpr 0x564958005d30 <col:3> '_Bool' lvalue Var 0x564957ffeb78 'x$w_buff0_used' '_Bool'
    | `-ImplicitCastExpr 0x5649580062a0 <col:20, col:227> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x564958006270 <col:20, col:227> 'int'
    |     |-ImplicitCastExpr 0x564958006228 <col:20> 'int' <IntegralCast>
    |     | `-ImplicitCastExpr 0x564958006210 <col:20> '_Bool' <LValueToRValue>
    |     |   `-DeclRefExpr 0x564958005d50 <col:20> '_Bool' lvalue Var 0x564957ffefa0 'weak$$choice2' '_Bool'
    |     |-ImplicitCastExpr 0x564958006258 <col:36> 'int' <IntegralCast>
    |     | `-ImplicitCastExpr 0x564958006240 <col:36> '_Bool' <LValueToRValue>
    |     |   `-DeclRefExpr 0x564958005d70 <col:36> '_Bool' lvalue Var 0x564957ffeb78 'x$w_buff0_used' '_Bool'
    |     `-ParenExpr 0x5649580061f0 <col:53, col:227> 'int'
    |       `-ConditionalOperator 0x5649580061c0 <col:54, col:226> 'int'
    |         |-BinaryOperator 0x564958005f80 <col:54, col:131> 'int' '||'
    |         | |-BinaryOperator 0x564958005ea0 <col:54, col:93> 'int' '||'
    |         | | |-UnaryOperator 0x564958005dc8 <col:54, col:55> 'int' prefix '!' cannot overflow
    |         | | | `-ImplicitCastExpr 0x564958005db0 <col:55> '_Bool' <LValueToRValue>
    |         | | |   `-DeclRefExpr 0x564958005d90 <col:55> '_Bool' lvalue Var 0x564957ffeb78 'x$w_buff0_used' '_Bool'
    |         | | `-BinaryOperator 0x564958005e80 <col:73, col:93> 'int' '&&'
    |         | |   |-UnaryOperator 0x564958005e18 <col:73, col:74> 'int' prefix '!' cannot overflow
    |         | |   | `-ImplicitCastExpr 0x564958005e00 <col:74> '_Bool' <LValueToRValue>
    |         | |   |   `-DeclRefExpr 0x564958005de0 <col:74> '_Bool' lvalue Var 0x564957ffe5e0 'x$r_buff0_thd0' '_Bool'
    |         | |   `-UnaryOperator 0x564958005e68 <col:92, col:93> 'int' prefix '!' cannot overflow
    |         | |     `-ImplicitCastExpr 0x564958005e50 <col:93> '_Bool' <LValueToRValue>
    |         | |       `-DeclRefExpr 0x564958005e30 <col:93> '_Bool' lvalue Var 0x564957ffec70 'x$w_buff1_used' '_Bool'
    |         | `-BinaryOperator 0x564958005f60 <col:111, col:131> 'int' '&&'
    |         |   |-UnaryOperator 0x564958005ef8 <col:111, col:112> 'int' prefix '!' cannot overflow
    |         |   | `-ImplicitCastExpr 0x564958005ee0 <col:112> '_Bool' <LValueToRValue>
    |         |   |   `-DeclRefExpr 0x564958005ec0 <col:112> '_Bool' lvalue Var 0x564957ffe5e0 'x$r_buff0_thd0' '_Bool'
    |         |   `-UnaryOperator 0x564958005f48 <col:130, col:131> 'int' prefix '!' cannot overflow
    |         |     `-ImplicitCastExpr 0x564958005f30 <col:131> '_Bool' <LValueToRValue>
    |         |       `-DeclRefExpr 0x564958005f10 <col:131> '_Bool' lvalue Var 0x564957ffe7c0 'x$r_buff1_thd0' '_Bool'
    |         |-ImplicitCastExpr 0x5649580061a8 <col:148> 'int' <IntegralCast>
    |         | `-ImplicitCastExpr 0x564958006190 <col:148> '_Bool' <LValueToRValue>
    |         |   `-DeclRefExpr 0x564958005fa0 <col:148> '_Bool' lvalue Var 0x564957ffeb78 'x$w_buff0_used' '_Bool'
    |         `-ParenExpr 0x564958006170 <col:165, col:226> 'int'
    |           `-ConditionalOperator 0x564958006140 <col:166, col:212> 'int'
    |             |-BinaryOperator 0x564958006060 <col:166, col:184> 'int' '&&'
    |             | |-ImplicitCastExpr 0x564958006018 <col:166> 'int' <IntegralCast>
    |             | | `-ImplicitCastExpr 0x564958006000 <col:166> '_Bool' <LValueToRValue>
    |             | |   `-DeclRefExpr 0x564958005fc0 <col:166> '_Bool' lvalue Var 0x564957ffeb78 'x$w_buff0_used' '_Bool'
    |             | `-ImplicitCastExpr 0x564958006048 <col:184> 'int' <IntegralCast>
    |             |   `-ImplicitCastExpr 0x564958006030 <col:184> '_Bool' <LValueToRValue>
    |             |     `-DeclRefExpr 0x564958005fe0 <col:184> '_Bool' lvalue Var 0x564957ffe5e0 'x$r_buff0_thd0' '_Bool'
    |             |-ImplicitCastExpr 0x5649580060f8 <col:201, col:208> 'int' <IntegralCast>
    |             | `-CStyleCastExpr 0x5649580060b0 <col:201, col:208> '_Bool' <IntegralToBoolean>
    |             |   `-IntegerLiteral 0x564958006080 <col:208> 'int' 0
    |             `-ImplicitCastExpr 0x564958006128 <col:212> 'int' <IntegralCast>
    |               `-ImplicitCastExpr 0x564958006110 <col:212> '_Bool' <LValueToRValue>
    |                 `-DeclRefExpr 0x5649580060d8 <col:212> '_Bool' lvalue Var 0x564957ffeb78 'x$w_buff0_used' '_Bool'
    |-BinaryOperator 0x564958006880 <line:807:3, col:221> '_Bool' '='
    | |-DeclRefExpr 0x5649580062d8 <col:3> '_Bool' lvalue Var 0x564957ffec70 'x$w_buff1_used' '_Bool'
    | `-ImplicitCastExpr 0x564958006868 <col:20, col:221> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x564958006838 <col:20, col:221> 'int'
    |     |-ImplicitCastExpr 0x5649580067f0 <col:20> 'int' <IntegralCast>
    |     | `-ImplicitCastExpr 0x5649580067d8 <col:20> '_Bool' <LValueToRValue>
    |     |   `-DeclRefExpr 0x5649580062f8 <col:20> '_Bool' lvalue Var 0x564957ffefa0 'weak$$choice2' '_Bool'
    |     |-ImplicitCastExpr 0x564958006820 <col:36> 'int' <IntegralCast>
    |     | `-ImplicitCastExpr 0x564958006808 <col:36> '_Bool' <LValueToRValue>
    |     |   `-DeclRefExpr 0x564958006318 <col:36> '_Bool' lvalue Var 0x564957ffec70 'x$w_buff1_used' '_Bool'
    |     `-ParenExpr 0x5649580067b8 <col:53, col:221> 'int'
    |       `-ConditionalOperator 0x564958006788 <col:54, col:220> 'int'
    |         |-BinaryOperator 0x564958006528 <col:54, col:131> 'int' '||'
    |         | |-BinaryOperator 0x564958006448 <col:54, col:93> 'int' '||'
    |         | | |-UnaryOperator 0x564958006370 <col:54, col:55> 'int' prefix '!' cannot overflow
    |         | | | `-ImplicitCastExpr 0x564958006358 <col:55> '_Bool' <LValueToRValue>
    |         | | |   `-DeclRefExpr 0x564958006338 <col:55> '_Bool' lvalue Var 0x564957ffeb78 'x$w_buff0_used' '_Bool'
    |         | | `-BinaryOperator 0x564958006428 <col:73, col:93> 'int' '&&'
    |         | |   |-UnaryOperator 0x5649580063c0 <col:73, col:74> 'int' prefix '!' cannot overflow
    |         | |   | `-ImplicitCastExpr 0x5649580063a8 <col:74> '_Bool' <LValueToRValue>
    |         | |   |   `-DeclRefExpr 0x564958006388 <col:74> '_Bool' lvalue Var 0x564957ffe5e0 'x$r_buff0_thd0' '_Bool'
    |         | |   `-UnaryOperator 0x564958006410 <col:92, col:93> 'int' prefix '!' cannot overflow
    |         | |     `-ImplicitCastExpr 0x5649580063f8 <col:93> '_Bool' <LValueToRValue>
    |         | |       `-DeclRefExpr 0x5649580063d8 <col:93> '_Bool' lvalue Var 0x564957ffec70 'x$w_buff1_used' '_Bool'
    |         | `-BinaryOperator 0x564958006508 <col:111, col:131> 'int' '&&'
    |         |   |-UnaryOperator 0x5649580064a0 <col:111, col:112> 'int' prefix '!' cannot overflow
    |         |   | `-ImplicitCastExpr 0x564958006488 <col:112> '_Bool' <LValueToRValue>
    |         |   |   `-DeclRefExpr 0x564958006468 <col:112> '_Bool' lvalue Var 0x564957ffe5e0 'x$r_buff0_thd0' '_Bool'
    |         |   `-UnaryOperator 0x5649580064f0 <col:130, col:131> 'int' prefix '!' cannot overflow
    |         |     `-ImplicitCastExpr 0x5649580064d8 <col:131> '_Bool' <LValueToRValue>
    |         |       `-DeclRefExpr 0x5649580064b8 <col:131> '_Bool' lvalue Var 0x564957ffe7c0 'x$r_buff1_thd0' '_Bool'
    |         |-ImplicitCastExpr 0x564958006770 <col:148> 'int' <IntegralCast>
    |         | `-ImplicitCastExpr 0x564958006758 <col:148> '_Bool' <LValueToRValue>
    |         |   `-DeclRefExpr 0x564958006548 <col:148> '_Bool' lvalue Var 0x564957ffec70 'x$w_buff1_used' '_Bool'
    |         `-ParenExpr 0x564958006738 <col:165, col:220> 'int'
    |           `-ConditionalOperator 0x564958006708 <col:166, col:219> 'int'
    |             |-BinaryOperator 0x564958006608 <col:166, col:184> 'int' '&&'
    |             | |-ImplicitCastExpr 0x5649580065c0 <col:166> 'int' <IntegralCast>
    |             | | `-ImplicitCastExpr 0x5649580065a8 <col:166> '_Bool' <LValueToRValue>
    |             | |   `-DeclRefExpr 0x564958006568 <col:166> '_Bool' lvalue Var 0x564957ffeb78 'x$w_buff0_used' '_Bool'
    |             | `-ImplicitCastExpr 0x5649580065f0 <col:184> 'int' <IntegralCast>
    |             |   `-ImplicitCastExpr 0x5649580065d8 <col:184> '_Bool' <LValueToRValue>
    |             |     `-DeclRefExpr 0x564958006588 <col:184> '_Bool' lvalue Var 0x564957ffe5e0 'x$r_buff0_thd0' '_Bool'
    |             |-ImplicitCastExpr 0x5649580066d8 <col:201, col:208> 'int' <IntegralCast>
    |             | `-CStyleCastExpr 0x564958006658 <col:201, col:208> '_Bool' <IntegralToBoolean>
    |             |   `-IntegerLiteral 0x564958006628 <col:208> 'int' 0
    |             `-ImplicitCastExpr 0x5649580066f0 <col:212, col:219> 'int' <IntegralCast>
    |               `-CStyleCastExpr 0x5649580066b0 <col:212, col:219> '_Bool' <IntegralToBoolean>
    |                 `-IntegerLiteral 0x564958006680 <col:219> 'int' 0
    |-BinaryOperator 0x564958006e38 <line:808:3, col:227> '_Bool' '='
    | |-DeclRefExpr 0x5649580068a0 <col:3> '_Bool' lvalue Var 0x564957ffe5e0 'x$r_buff0_thd0' '_Bool'
    | `-ImplicitCastExpr 0x564958006e20 <col:20, col:227> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x564958006df0 <col:20, col:227> 'int'
    |     |-ImplicitCastExpr 0x564958006da8 <col:20> 'int' <IntegralCast>
    |     | `-ImplicitCastExpr 0x564958006d90 <col:20> '_Bool' <LValueToRValue>
    |     |   `-DeclRefExpr 0x5649580068c0 <col:20> '_Bool' lvalue Var 0x564957ffefa0 'weak$$choice2' '_Bool'
    |     |-ImplicitCastExpr 0x564958006dd8 <col:36> 'int' <IntegralCast>
    |     | `-ImplicitCastExpr 0x564958006dc0 <col:36> '_Bool' <LValueToRValue>
    |     |   `-DeclRefExpr 0x5649580068e0 <col:36> '_Bool' lvalue Var 0x564957ffe5e0 'x$r_buff0_thd0' '_Bool'
    |     `-ParenExpr 0x564958006d70 <col:53, col:227> 'int'
    |       `-ConditionalOperator 0x564958006d40 <col:54, col:226> 'int'
    |         |-BinaryOperator 0x564958006af0 <col:54, col:131> 'int' '||'
    |         | |-BinaryOperator 0x564958006a10 <col:54, col:93> 'int' '||'
    |         | | |-UnaryOperator 0x564958006938 <col:54, col:55> 'int' prefix '!' cannot overflow
    |         | | | `-ImplicitCastExpr 0x564958006920 <col:55> '_Bool' <LValueToRValue>
    |         | | |   `-DeclRefExpr 0x564958006900 <col:55> '_Bool' lvalue Var 0x564957ffeb78 'x$w_buff0_used' '_Bool'
    |         | | `-BinaryOperator 0x5649580069f0 <col:73, col:93> 'int' '&&'
    |         | |   |-UnaryOperator 0x564958006988 <col:73, col:74> 'int' prefix '!' cannot overflow
    |         | |   | `-ImplicitCastExpr 0x564958006970 <col:74> '_Bool' <LValueToRValue>
    |         | |   |   `-DeclRefExpr 0x564958006950 <col:74> '_Bool' lvalue Var 0x564957ffe5e0 'x$r_buff0_thd0' '_Bool'
    |         | |   `-UnaryOperator 0x5649580069d8 <col:92, col:93> 'int' prefix '!' cannot overflow
    |         | |     `-ImplicitCastExpr 0x5649580069c0 <col:93> '_Bool' <LValueToRValue>
    |         | |       `-DeclRefExpr 0x5649580069a0 <col:93> '_Bool' lvalue Var 0x564957ffec70 'x$w_buff1_used' '_Bool'
    |         | `-BinaryOperator 0x564958006ad0 <col:111, col:131> 'int' '&&'
    |         |   |-UnaryOperator 0x564958006a68 <col:111, col:112> 'int' prefix '!' cannot overflow
    |         |   | `-ImplicitCastExpr 0x564958006a50 <col:112> '_Bool' <LValueToRValue>
    |         |   |   `-DeclRefExpr 0x564958006a30 <col:112> '_Bool' lvalue Var 0x564957ffe5e0 'x$r_buff0_thd0' '_Bool'
    |         |   `-UnaryOperator 0x564958006ab8 <col:130, col:131> 'int' prefix '!' cannot overflow
    |         |     `-ImplicitCastExpr 0x564958006aa0 <col:131> '_Bool' <LValueToRValue>
    |         |       `-DeclRefExpr 0x564958006a80 <col:131> '_Bool' lvalue Var 0x564957ffe7c0 'x$r_buff1_thd0' '_Bool'
    |         |-ImplicitCastExpr 0x564958006d28 <col:148> 'int' <IntegralCast>
    |         | `-ImplicitCastExpr 0x564958006d10 <col:148> '_Bool' <LValueToRValue>
    |         |   `-DeclRefExpr 0x564958006b10 <col:148> '_Bool' lvalue Var 0x564957ffe5e0 'x$r_buff0_thd0' '_Bool'
    |         `-ParenExpr 0x564958006cf0 <col:165, col:226> 'int'
    |           `-ConditionalOperator 0x564958006cc0 <col:166, col:212> 'int'
    |             |-BinaryOperator 0x564958006be0 <col:166, col:184> 'int' '&&'
    |             | |-ImplicitCastExpr 0x564958006b98 <col:166> 'int' <IntegralCast>
    |             | | `-ImplicitCastExpr 0x564958006b80 <col:166> '_Bool' <LValueToRValue>
    |             | |   `-DeclRefExpr 0x564958006b30 <col:166> '_Bool' lvalue Var 0x564957ffeb78 'x$w_buff0_used' '_Bool'
    |             | `-ImplicitCastExpr 0x564958006bc8 <col:184> 'int' <IntegralCast>
    |             |   `-ImplicitCastExpr 0x564958006bb0 <col:184> '_Bool' <LValueToRValue>
    |             |     `-DeclRefExpr 0x564958006b50 <col:184> '_Bool' lvalue Var 0x564957ffe5e0 'x$r_buff0_thd0' '_Bool'
    |             |-ImplicitCastExpr 0x564958006c78 <col:201, col:208> 'int' <IntegralCast>
    |             | `-CStyleCastExpr 0x564958006c30 <col:201, col:208> '_Bool' <IntegralToBoolean>
    |             |   `-IntegerLiteral 0x564958006c00 <col:208> 'int' 0
    |             `-ImplicitCastExpr 0x564958006ca8 <col:212> 'int' <IntegralCast>
    |               `-ImplicitCastExpr 0x564958006c90 <col:212> '_Bool' <LValueToRValue>
    |                 `-DeclRefExpr 0x564958006c58 <col:212> '_Bool' lvalue Var 0x564957ffe5e0 'x$r_buff0_thd0' '_Bool'
    |-BinaryOperator 0x564958007400 <line:809:3, col:221> '_Bool' '='
    | |-DeclRefExpr 0x564958006e58 <col:3> '_Bool' lvalue Var 0x564957ffe7c0 'x$r_buff1_thd0' '_Bool'
    | `-ImplicitCastExpr 0x5649580073e8 <col:20, col:221> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x5649580073b8 <col:20, col:221> 'int'
    |     |-ImplicitCastExpr 0x564958007370 <col:20> 'int' <IntegralCast>
    |     | `-ImplicitCastExpr 0x564958007358 <col:20> '_Bool' <LValueToRValue>
    |     |   `-DeclRefExpr 0x564958006e78 <col:20> '_Bool' lvalue Var 0x564957ffefa0 'weak$$choice2' '_Bool'
    |     |-ImplicitCastExpr 0x5649580073a0 <col:36> 'int' <IntegralCast>
    |     | `-ImplicitCastExpr 0x564958007388 <col:36> '_Bool' <LValueToRValue>
    |     |   `-DeclRefExpr 0x564958006e98 <col:36> '_Bool' lvalue Var 0x564957ffe7c0 'x$r_buff1_thd0' '_Bool'
    |     `-ParenExpr 0x564958007338 <col:53, col:221> 'int'
    |       `-ConditionalOperator 0x564958007308 <col:54, col:220> 'int'
    |         |-BinaryOperator 0x5649580070a8 <col:54, col:131> 'int' '||'
    |         | |-BinaryOperator 0x564958006fc8 <col:54, col:93> 'int' '||'
    |         | | |-UnaryOperator 0x564958006ef0 <col:54, col:55> 'int' prefix '!' cannot overflow
    |         | | | `-ImplicitCastExpr 0x564958006ed8 <col:55> '_Bool' <LValueToRValue>
    |         | | |   `-DeclRefExpr 0x564958006eb8 <col:55> '_Bool' lvalue Var 0x564957ffeb78 'x$w_buff0_used' '_Bool'
    |         | | `-BinaryOperator 0x564958006fa8 <col:73, col:93> 'int' '&&'
    |         | |   |-UnaryOperator 0x564958006f40 <col:73, col:74> 'int' prefix '!' cannot overflow
    |         | |   | `-ImplicitCastExpr 0x564958006f28 <col:74> '_Bool' <LValueToRValue>
    |         | |   |   `-DeclRefExpr 0x564958006f08 <col:74> '_Bool' lvalue Var 0x564957ffe5e0 'x$r_buff0_thd0' '_Bool'
    |         | |   `-UnaryOperator 0x564958006f90 <col:92, col:93> 'int' prefix '!' cannot overflow
    |         | |     `-ImplicitCastExpr 0x564958006f78 <col:93> '_Bool' <LValueToRValue>
    |         | |       `-DeclRefExpr 0x564958006f58 <col:93> '_Bool' lvalue Var 0x564957ffec70 'x$w_buff1_used' '_Bool'
    |         | `-BinaryOperator 0x564958007088 <col:111, col:131> 'int' '&&'
    |         |   |-UnaryOperator 0x564958007020 <col:111, col:112> 'int' prefix '!' cannot overflow
    |         |   | `-ImplicitCastExpr 0x564958007008 <col:112> '_Bool' <LValueToRValue>
    |         |   |   `-DeclRefExpr 0x564958006fe8 <col:112> '_Bool' lvalue Var 0x564957ffe5e0 'x$r_buff0_thd0' '_Bool'
    |         |   `-UnaryOperator 0x564958007070 <col:130, col:131> 'int' prefix '!' cannot overflow
    |         |     `-ImplicitCastExpr 0x564958007058 <col:131> '_Bool' <LValueToRValue>
    |         |       `-DeclRefExpr 0x564958007038 <col:131> '_Bool' lvalue Var 0x564957ffe7c0 'x$r_buff1_thd0' '_Bool'
    |         |-ImplicitCastExpr 0x5649580072f0 <col:148> 'int' <IntegralCast>
    |         | `-ImplicitCastExpr 0x5649580072d8 <col:148> '_Bool' <LValueToRValue>
    |         |   `-DeclRefExpr 0x5649580070c8 <col:148> '_Bool' lvalue Var 0x564957ffe7c0 'x$r_buff1_thd0' '_Bool'
    |         `-ParenExpr 0x5649580072b8 <col:165, col:220> 'int'
    |           `-ConditionalOperator 0x564958007288 <col:166, col:219> 'int'
    |             |-BinaryOperator 0x564958007188 <col:166, col:184> 'int' '&&'
    |             | |-ImplicitCastExpr 0x564958007140 <col:166> 'int' <IntegralCast>
    |             | | `-ImplicitCastExpr 0x564958007128 <col:166> '_Bool' <LValueToRValue>
    |             | |   `-DeclRefExpr 0x5649580070e8 <col:166> '_Bool' lvalue Var 0x564957ffeb78 'x$w_buff0_used' '_Bool'
    |             | `-ImplicitCastExpr 0x564958007170 <col:184> 'int' <IntegralCast>
    |             |   `-ImplicitCastExpr 0x564958007158 <col:184> '_Bool' <LValueToRValue>
    |             |     `-DeclRefExpr 0x564958007108 <col:184> '_Bool' lvalue Var 0x564957ffe5e0 'x$r_buff0_thd0' '_Bool'
    |             |-ImplicitCastExpr 0x564958007258 <col:201, col:208> 'int' <IntegralCast>
    |             | `-CStyleCastExpr 0x5649580071d8 <col:201, col:208> '_Bool' <IntegralToBoolean>
    |             |   `-IntegerLiteral 0x5649580071a8 <col:208> 'int' 0
    |             `-ImplicitCastExpr 0x564958007270 <col:212, col:219> 'int' <IntegralCast>
    |               `-CStyleCastExpr 0x564958007230 <col:212, col:219> '_Bool' <IntegralToBoolean>
    |                 `-IntegerLiteral 0x564958007200 <col:219> 'int' 0
    |-BinaryOperator 0x564958007638 <line:810:3, col:67> '_Bool' '='
    | |-DeclRefExpr 0x564958007420 <col:3> '_Bool' lvalue Var 0x564957ffe350 'main$tmp_guard1' '_Bool'
    | `-ImplicitCastExpr 0x564958007620 <col:21, col:67> '_Bool' <IntegralToBoolean>
    |   `-UnaryOperator 0x564958007608 <col:21, col:67> 'int' prefix '!' cannot overflow
    |     `-ParenExpr 0x5649580075e8 <col:22, col:67> 'int'
    |       `-BinaryOperator 0x5649580075c8 <col:23, col:66> 'int' '&&'
    |         |-BinaryOperator 0x564958007530 <col:23, col:38> 'int' '&&'
    |         | |-BinaryOperator 0x564958007498 <col:23, col:28> 'int' '=='
    |         | | |-ImplicitCastExpr 0x564958007480 <col:23> 'int' <LValueToRValue>
    |         | | | `-DeclRefExpr 0x564958007440 <col:23> 'int' lvalue Var 0x564957ffe450 'x' 'int'
    |         | | `-IntegerLiteral 0x564958007460 <col:28> 'int' 2
    |         | `-BinaryOperator 0x564958007510 <col:33, col:38> 'int' '=='
    |         |   |-ImplicitCastExpr 0x5649580074f8 <col:33> 'int' <LValueToRValue>
    |         |   | `-DeclRefExpr 0x5649580074b8 <col:33> 'int' lvalue Var 0x564957ffee90 'z' 'int'
    |         |   `-IntegerLiteral 0x5649580074d8 <col:38> 'int' 2
    |         `-BinaryOperator 0x5649580075a8 <col:43, col:66> 'int' '=='
    |           |-ImplicitCastExpr 0x564958007590 <col:43> 'int' <LValueToRValue>
    |           | `-DeclRefExpr 0x564958007550 <col:43> 'int' lvalue Var 0x564957ffe240 '__unbuffered_p2_EAX' 'int'
    |           `-IntegerLiteral 0x564958007570 <col:66> 'int' 1
    |-BinaryOperator 0x564958007768 <line:811:3, col:37> 'int' '='
    | |-DeclRefExpr 0x564958007658 <col:3> 'int' lvalue Var 0x564957ffe450 'x' 'int'
    | `-ConditionalOperator 0x564958007738 <col:7, col:37> 'int'
    |   |-ImplicitCastExpr 0x5649580076f0 <col:7> 'int' <IntegralCast>
    |   | `-ImplicitCastExpr 0x5649580076d8 <col:7> '_Bool' <LValueToRValue>
    |   |   `-DeclRefExpr 0x564958007678 <col:7> '_Bool' lvalue Var 0x564957ffe4e8 'x$flush_delayed' '_Bool'
    |   |-ImplicitCastExpr 0x564958007708 <col:25> 'int' <LValueToRValue>
    |   | `-DeclRefExpr 0x564958007698 <col:25> 'int' lvalue Var 0x564957ffe568 'x$mem_tmp' 'int'
    |   `-ImplicitCastExpr 0x564958007720 <col:37> 'int' <LValueToRValue>
    |     `-DeclRefExpr 0x5649580076b8 <col:37> 'int' lvalue Var 0x564957ffe450 'x' 'int'
    |-BinaryOperator 0x564958007800 <line:812:3, col:28> '_Bool' '='
    | |-DeclRefExpr 0x564958007788 <col:3> '_Bool' lvalue Var 0x564957ffe4e8 'x$flush_delayed' '_Bool'
    | `-CStyleCastExpr 0x5649580077d8 <col:21, col:28> '_Bool' <IntegralToBoolean>
    |   `-IntegerLiteral 0x5649580077a8 <col:28> 'int' 0
    |-CallExpr 0x564958007858 <line:813:3, col:25> 'void'
    | `-ImplicitCastExpr 0x564958007840 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x564958007820 <col:3> 'void ()' Function 0x564957fa4f00 '__VERIFIER_atomic_end' 'void ()'
    |-CallExpr 0x5649580078d0 <line:814:3, col:36> 'void'
    | |-ImplicitCastExpr 0x5649580078b8 <col:3> 'void (*)(int)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x564958007878 <col:3> 'void (int)' Function 0x564957fa4bc8 '__VERIFIER_assert' 'void (int)'
    | `-ImplicitCastExpr 0x564958007910 <col:21> 'int' <IntegralCast>
    |   `-ImplicitCastExpr 0x5649580078f8 <col:21> '_Bool' <LValueToRValue>
    |     `-DeclRefExpr 0x564958007898 <col:21> '_Bool' lvalue Var 0x564957ffe350 'main$tmp_guard1' '_Bool'
    `-ReturnStmt 0x564958007948 <line:815:3, col:10>
      `-IntegerLiteral 0x564958007928 <col:10> 'int' 0
