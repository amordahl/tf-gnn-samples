TranslationUnitDecl 0x557f04500e18 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x557f045016d8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x557f045013b0 '__int128'
|-TypedefDecl 0x557f04501748 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x557f045013d0 'unsigned __int128'
|-TypedefDecl 0x557f04501a50 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x557f04501820 'struct __NSConstantString_tag'
|   `-Record 0x557f045017a0 '__NSConstantString_tag'
|-TypedefDecl 0x557f04501af8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x557f04501ab0 'char *'
|   `-BuiltinType 0x557f04500eb0 'char'
|-TypedefDecl 0x557f04540650 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'struct __va_list_tag [1]'
| `-ConstantArrayType 0x557f04501d90 'struct __va_list_tag [1]' 1 
|   `-RecordType 0x557f04501bd0 'struct __va_list_tag'
|     `-Record 0x557f04501b50 '__va_list_tag'
|-FunctionDecl 0x557f04540790 <./split_2/mix021_pso.opt_false-unreach-call.i:1:1, col:34> col:13 used __VERIFIER_assume 'void (int)' extern
| `-ParmVarDecl 0x557f045406c0 <col:31> col:34 'int'
|-FunctionDecl 0x557f04540958 <line:2:1, col:45> col:15 used __VERIFIER_nondet_pointer 'void *(void)' extern
|-FunctionDecl 0x557f04540a80 <line:3:1, col:61> col:13 used __VERIFIER_error 'void () __attribute__((noreturn))' extern
|-FunctionDecl 0x557f04540bc8 <line:4:1, col:99> col:6 used __VERIFIER_assert 'void (int)'
| |-ParmVarDecl 0x557f04540b38 <col:24, col:28> col:28 used expression 'int'
| `-CompoundStmt 0x557f04540df8 <col:40, col:99>
|   |-IfStmt 0x557f04540dc8 <col:42, col:88>
|   | |-UnaryOperator 0x557f04540ca8 <col:46, col:47> 'int' prefix '!' cannot overflow
|   | | `-ImplicitCastExpr 0x557f04540c90 <col:47> 'int' <LValueToRValue>
|   | |   `-DeclRefExpr 0x557f04540c70 <col:47> 'int' lvalue ParmVar 0x557f04540b38 'expression' 'int'
|   | `-CompoundStmt 0x557f04540db0 <col:59, col:88>
|   |   `-LabelStmt 0x557f04540d98 <col:61, col:85> 'ERROR'
|   |     `-CallExpr 0x557f04540d28 <col:68, col:85> 'void'
|   |       `-ImplicitCastExpr 0x557f04540d10 <col:68> 'void (*)() __attribute__((noreturn))' <FunctionToPointerDecay>
|   |         `-DeclRefExpr 0x557f04540cc0 <col:68> 'void () __attribute__((noreturn))' Function 0x557f04540a80 '__VERIFIER_error' 'void () __attribute__((noreturn))'
|   |-NullStmt 0x557f04540de0 <col:89>
|   `-ReturnStmt 0x557f04540de8 <col:91>
|-FunctionDecl 0x557f04540e40 <line:5:1, col:37> col:13 used __VERIFIER_atomic_begin 'void ()' extern
|-FunctionDecl 0x557f04540f00 <line:6:1, col:35> col:13 used __VERIFIER_atomic_end 'void ()' extern
|-FunctionDecl 0x557f04541280 <line:8:1, line:10:76> line:8:13 __assert_fail 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x557f04540fb8 <col:28, col:40> col:40 __assertion 'const char *'
| |-ParmVarDecl 0x557f04541038 <col:53, col:65> col:65 __file 'const char *'
| |-ParmVarDecl 0x557f045410b8 <line:9:7, col:20> col:20 __line 'unsigned int'
| |-ParmVarDecl 0x557f04541138 <col:28, col:40> col:40 __function 'const char *'
| `-NoThrowAttr 0x557f04541340 <line:10:22>
|-FunctionDecl 0x557f04567390 <line:11:1, line:13:76> line:11:13 __assert_perror_fail 'void (int, const char *, unsigned int, const char *) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x557f045413b0 <col:35, col:39> col:39 __errnum 'int'
| |-ParmVarDecl 0x557f04541430 <col:49, col:61> col:61 __file 'const char *'
| |-ParmVarDecl 0x557f045414b0 <line:12:7, col:20> col:20 __line 'unsigned int'
| |-ParmVarDecl 0x557f04541530 <col:28, col:40> col:40 __function 'const char *'
| `-NoThrowAttr 0x557f04567450 <line:13:22>
|-FunctionDecl 0x557f04567700 <line:14:1, line:15:76> line:14:13 __assert 'void (const char *, const char *, int) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x557f045674c0 <col:23, col:35> col:35 __assertion 'const char *'
| |-ParmVarDecl 0x557f04567540 <col:48, col:60> col:60 __file 'const char *'
| |-ParmVarDecl 0x557f045675c0 <col:68, col:72> col:72 __line 'int'
| `-NoThrowAttr 0x557f045677b8 <line:15:22>
|-TypedefDecl 0x557f04567828 <line:17:1, col:23> col:23 __u_char 'unsigned char'
| `-BuiltinType 0x557f04500f70 'unsigned char'
|-TypedefDecl 0x557f04567898 <line:18:1, col:28> col:28 __u_short 'unsigned short'
| `-BuiltinType 0x557f04500f90 'unsigned short'
|-TypedefDecl 0x557f04567908 <line:19:1, col:22> col:22 __u_int 'unsigned int'
| `-BuiltinType 0x557f04500fb0 'unsigned int'
|-TypedefDecl 0x557f04567978 <line:20:1, col:27> col:27 __u_long 'unsigned long'
| `-BuiltinType 0x557f04500fd0 'unsigned long'
|-TypedefDecl 0x557f045679e8 <line:21:1, col:21> col:21 __int8_t 'signed char'
| `-BuiltinType 0x557f04500ed0 'signed char'
|-TypedefDecl 0x557f04567a58 <line:22:1, col:23> col:23 __uint8_t 'unsigned char'
| `-BuiltinType 0x557f04500f70 'unsigned char'
|-TypedefDecl 0x557f04567ac8 <line:23:1, col:26> col:26 __int16_t 'short'
| `-BuiltinType 0x557f04500ef0 'short'
|-TypedefDecl 0x557f04567b38 <line:24:1, col:28> col:28 __uint16_t 'unsigned short'
| `-BuiltinType 0x557f04500f90 'unsigned short'
|-TypedefDecl 0x557f04567ba8 <line:25:1, col:20> col:20 __int32_t 'int'
| `-BuiltinType 0x557f04500f10 'int'
|-TypedefDecl 0x557f04567c18 <line:26:1, col:22> col:22 __uint32_t 'unsigned int'
| `-BuiltinType 0x557f04500fb0 'unsigned int'
|-TypedefDecl 0x557f04567c88 <line:27:1, col:25> col:25 __int64_t 'long'
| `-BuiltinType 0x557f04500f30 'long'
|-TypedefDecl 0x557f04567cf8 <line:28:1, col:27> col:27 referenced __uint64_t 'unsigned long'
| `-BuiltinType 0x557f04500fd0 'unsigned long'
|-TypedefDecl 0x557f04567d68 <line:29:1, col:18> col:18 referenced __quad_t 'long'
| `-BuiltinType 0x557f04500f30 'long'
|-TypedefDecl 0x557f04567dd8 <line:30:1, col:27> col:27 __u_quad_t 'unsigned long'
| `-BuiltinType 0x557f04500fd0 'unsigned long'
|-TypedefDecl 0x557f04567e48 <line:31:1, col:27> col:27 __dev_t 'unsigned long'
| `-BuiltinType 0x557f04500fd0 'unsigned long'
|-TypedefDecl 0x557f04567eb8 <line:32:1, col:22> col:22 __uid_t 'unsigned int'
| `-BuiltinType 0x557f04500fb0 'unsigned int'
|-TypedefDecl 0x557f04567f28 <line:33:1, col:22> col:22 __gid_t 'unsigned int'
| `-BuiltinType 0x557f04500fb0 'unsigned int'
|-TypedefDecl 0x557f04567f98 <line:34:1, col:27> col:27 __ino_t 'unsigned long'
| `-BuiltinType 0x557f04500fd0 'unsigned long'
|-TypedefDecl 0x557f04568008 <line:35:1, col:27> col:27 __ino64_t 'unsigned long'
| `-BuiltinType 0x557f04500fd0 'unsigned long'
|-TypedefDecl 0x557f04568078 <line:36:1, col:22> col:22 __mode_t 'unsigned int'
| `-BuiltinType 0x557f04500fb0 'unsigned int'
|-TypedefDecl 0x557f045680e8 <line:37:1, col:27> col:27 __nlink_t 'unsigned long'
| `-BuiltinType 0x557f04500fd0 'unsigned long'
|-TypedefDecl 0x557f04568158 <line:38:1, col:18> col:18 __off_t 'long'
| `-BuiltinType 0x557f04500f30 'long'
|-TypedefDecl 0x557f045681c8 <line:39:1, col:18> col:18 referenced __off64_t 'long'
| `-BuiltinType 0x557f04500f30 'long'
|-TypedefDecl 0x557f04568238 <line:40:1, col:13> col:13 referenced __pid_t 'int'
| `-BuiltinType 0x557f04500f10 'int'
|-RecordDecl 0x557f04568290 <line:41:9, col:32> col:9 struct definition
| `-FieldDecl 0x557f04568408 <col:18, col:29> col:22 __val 'int [2]'
|-TypedefDecl 0x557f045684c0 <col:1, col:34> col:34 __fsid_t 'struct __fsid_t':'__fsid_t'
| `-ElaboratedType 0x557f04568460 'struct __fsid_t' sugar
|   `-RecordType 0x557f04568310 '__fsid_t'
|     `-Record 0x557f04568290 ''
|-TypedefDecl 0x557f04568548 <line:42:1, col:18> col:18 referenced __clock_t 'long'
| `-BuiltinType 0x557f04500f30 'long'
|-TypedefDecl 0x557f045685b8 <line:43:1, col:27> col:27 __rlim_t 'unsigned long'
| `-BuiltinType 0x557f04500fd0 'unsigned long'
|-TypedefDecl 0x557f04568628 <line:44:1, col:27> col:27 __rlim64_t 'unsigned long'
| `-BuiltinType 0x557f04500fd0 'unsigned long'
|-TypedefDecl 0x557f04568698 <line:45:1, col:22> col:22 __id_t 'unsigned int'
| `-BuiltinType 0x557f04500fb0 'unsigned int'
|-TypedefDecl 0x557f04568708 <line:46:1, col:18> col:18 referenced __time_t 'long'
| `-BuiltinType 0x557f04500f30 'long'
|-TypedefDecl 0x557f04568778 <line:47:1, col:22> col:22 __useconds_t 'unsigned int'
| `-BuiltinType 0x557f04500fb0 'unsigned int'
|-TypedefDecl 0x557f045687e8 <line:48:1, col:18> col:18 __suseconds_t 'long'
| `-BuiltinType 0x557f04500f30 'long'
|-TypedefDecl 0x557f04568858 <line:49:1, col:13> col:13 __daddr_t 'int'
| `-BuiltinType 0x557f04500f10 'int'
|-TypedefDecl 0x557f045688c8 <line:50:1, col:13> col:13 __key_t 'int'
| `-BuiltinType 0x557f04500f10 'int'
|-TypedefDecl 0x557f04568938 <line:51:1, col:13> col:13 referenced __clockid_t 'int'
| `-BuiltinType 0x557f04500f10 'int'
|-TypedefDecl 0x557f045689a8 <line:52:1, col:16> col:16 referenced __timer_t 'void *'
| `-PointerType 0x557f04501630 'void *'
|   `-BuiltinType 0x557f04500e70 'void'
|-TypedefDecl 0x557f04568a18 <line:53:1, col:18> col:18 __blksize_t 'long'
| `-BuiltinType 0x557f04500f30 'long'
|-TypedefDecl 0x557f04568a88 <line:54:1, col:18> col:18 __blkcnt_t 'long'
| `-BuiltinType 0x557f04500f30 'long'
|-TypedefDecl 0x557f04568af8 <line:55:1, col:18> col:18 __blkcnt64_t 'long'
| `-BuiltinType 0x557f04500f30 'long'
|-TypedefDecl 0x557f04568b68 <line:56:1, col:27> col:27 __fsblkcnt_t 'unsigned long'
| `-BuiltinType 0x557f04500fd0 'unsigned long'
|-TypedefDecl 0x557f04568bd8 <line:57:1, col:27> col:27 __fsblkcnt64_t 'unsigned long'
| `-BuiltinType 0x557f04500fd0 'unsigned long'
|-TypedefDecl 0x557f04568c48 <line:58:1, col:27> col:27 __fsfilcnt_t 'unsigned long'
| `-BuiltinType 0x557f04500fd0 'unsigned long'
|-TypedefDecl 0x557f04568cb8 <line:59:1, col:27> col:27 __fsfilcnt64_t 'unsigned long'
| `-BuiltinType 0x557f04500fd0 'unsigned long'
|-TypedefDecl 0x557f04568d28 <line:60:1, col:18> col:18 __fsword_t 'long'
| `-BuiltinType 0x557f04500f30 'long'
|-TypedefDecl 0x557f04568d98 <line:61:1, col:18> col:18 __ssize_t 'long'
| `-BuiltinType 0x557f04500f30 'long'
|-TypedefDecl 0x557f04568e08 <line:62:1, col:18> col:18 referenced __syscall_slong_t 'long'
| `-BuiltinType 0x557f04500f30 'long'
|-TypedefDecl 0x557f04568e78 <line:63:1, col:27> col:27 __syscall_ulong_t 'unsigned long'
| `-BuiltinType 0x557f04500fd0 'unsigned long'
|-TypedefDecl 0x557f04568f08 <line:64:1, col:19> col:19 __loff_t '__off64_t':'long'
| `-TypedefType 0x557f04568ed0 '__off64_t' sugar
|   |-Typedef 0x557f045681c8 '__off64_t'
|   `-BuiltinType 0x557f04500f30 'long'
|-TypedefDecl 0x557f04569000 <line:65:1, col:19> col:19 __qaddr_t '__quad_t *'
| `-PointerType 0x557f04568fc0 '__quad_t *'
|   `-TypedefType 0x557f04568f60 '__quad_t' sugar
|     |-Typedef 0x557f04567d68 '__quad_t'
|     `-BuiltinType 0x557f04500f30 'long'
|-TypedefDecl 0x557f04569070 <line:66:1, col:15> col:15 __caddr_t 'char *'
| `-PointerType 0x557f04501ab0 'char *'
|   `-BuiltinType 0x557f04500eb0 'char'
|-TypedefDecl 0x557f045690e0 <line:67:1, col:18> col:18 __intptr_t 'long'
| `-BuiltinType 0x557f04500f30 'long'
|-TypedefDecl 0x557f04569150 <line:68:1, col:22> col:22 __socklen_t 'unsigned int'
| `-BuiltinType 0x557f04500fb0 'unsigned int'
|-FunctionDecl 0x557f04569298 <line:69:1, line:73:1> line:70:1 __bswap_32 'unsigned int (unsigned int)' static inline
| |-ParmVarDecl 0x557f045691c0 <col:13, col:26> col:26 used __bsx 'unsigned int'
| `-CompoundStmt 0x557f0456a5e8 <line:71:1, line:73:1>
|   `-ReturnStmt 0x557f0456a5d8 <line:72:3, col:34>
|     `-CallExpr 0x557f0456a598 <col:10, col:34> 'unsigned int'
|       |-ImplicitCastExpr 0x557f0456a580 <col:10> 'unsigned int (*)(unsigned int)' <BuiltinFnToFnPtr>
|       | `-DeclRefExpr 0x557f0456a510 <col:10> '<builtin fn type>' Function 0x557f0456a380 '__builtin_bswap32' 'unsigned int (unsigned int)'
|       `-ImplicitCastExpr 0x557f0456a5c0 <col:29> 'unsigned int' <LValueToRValue>
|         `-DeclRefExpr 0x557f0456a530 <col:29> 'unsigned int' lvalue ParmVar 0x557f045691c0 '__bsx' 'unsigned int'
|-FunctionDecl 0x557f0456a380 <col:10> col:10 implicit used __builtin_bswap32 'unsigned int (unsigned int)' extern
| |-ParmVarDecl 0x557f0456a420 <<invalid sloc>> <invalid sloc> 'unsigned int'
| |-NoThrowAttr 0x557f0456a490 <col:10> Implicit
| `-ConstAttr 0x557f0456a4e8 <col:10> Implicit
|-FunctionDecl 0x557f0456a740 <line:74:1, line:78:1> line:75:1 __bswap_64 '__uint64_t (__uint64_t)' static inline
| |-ParmVarDecl 0x557f0456a638 <col:13, col:24> col:24 used __bsx '__uint64_t':'unsigned long'
| `-CompoundStmt 0x557f0456aa58 <line:76:1, line:78:1>
|   `-ReturnStmt 0x557f0456aa48 <line:77:3, col:34>
|     `-CallExpr 0x557f0456aa08 <col:10, col:34> 'unsigned long'
|       |-ImplicitCastExpr 0x557f0456a9f0 <col:10> 'unsigned long (*)(unsigned long)' <BuiltinFnToFnPtr>
|       | `-DeclRefExpr 0x557f0456a978 <col:10> '<builtin fn type>' Function 0x557f0456a7e8 '__builtin_bswap64' 'unsigned long (unsigned long)'
|       `-ImplicitCastExpr 0x557f0456aa30 <col:29> '__uint64_t':'unsigned long' <LValueToRValue>
|         `-DeclRefExpr 0x557f0456a998 <col:29> '__uint64_t':'unsigned long' lvalue ParmVar 0x557f0456a638 '__bsx' '__uint64_t':'unsigned long'
|-FunctionDecl 0x557f0456a7e8 <col:10> col:10 implicit used __builtin_bswap64 'unsigned long (unsigned long)' extern
| |-ParmVarDecl 0x557f0456a888 <<invalid sloc>> <invalid sloc> 'unsigned long'
| |-NoThrowAttr 0x557f0456a8f8 <col:10> Implicit
| `-ConstAttr 0x557f0456a950 <col:10> Implicit
|-TypedefDecl 0x557f0456aa88 <line:79:1, col:27> col:27 referenced size_t 'unsigned long'
| `-BuiltinType 0x557f04500fd0 'unsigned long'
|-TypedefDecl 0x557f0456ab18 <line:81:1, col:18> col:18 referenced time_t '__time_t':'long'
| `-TypedefType 0x557f0456aae0 '__time_t' sugar
|   |-Typedef 0x557f04568708 '__time_t'
|   `-BuiltinType 0x557f04500f30 'long'
|-RecordDecl 0x557f0456ab70 <line:84:1, line:88:3> line:84:8 struct timespec definition
| |-FieldDecl 0x557f0456ac28 <line:86:5, col:14> col:14 tv_sec '__time_t':'long'
| `-FieldDecl 0x557f0456acb8 <line:87:5, col:23> col:23 tv_nsec '__syscall_slong_t':'long'
|-TypedefDecl 0x557f0456ad48 <line:89:1, col:17> col:17 referenced pid_t '__pid_t':'int'
| `-TypedefType 0x557f0456ad10 '__pid_t' sugar
|   |-Typedef 0x557f04568238 '__pid_t'
|   `-BuiltinType 0x557f04500f10 'int'
|-RecordDecl 0x557f0456ada0 <line:90:1, line:93:3> line:90:8 struct sched_param definition
| `-FieldDecl 0x557f0456ae60 <line:92:5, col:9> col:9 __sched_priority 'int'
|-RecordDecl 0x557f0456aeb0 <line:96:1, line:99:3> line:96:8 struct __sched_param definition
| `-FieldDecl 0x557f0456af70 <line:98:5, col:9> col:9 __sched_priority 'int'
|-TypedefDecl 0x557f0456afd8 <line:100:1, col:27> col:27 referenced __cpu_mask 'unsigned long'
| `-BuiltinType 0x557f04500fd0 'unsigned long'
|-RecordDecl 0x557f0456b030 <line:101:9, line:104:1> line:101:9 struct definition
| `-FieldDecl 0x557f0456b2c0 <line:103:3, col:53> col:14 __bits '__cpu_mask [64]'
|-TypedefDecl 0x557f0456c3a0 <line:101:1, line:104:3> col:3 referenced cpu_set_t 'struct cpu_set_t':'cpu_set_t'
| `-ElaboratedType 0x557f0456b310 'struct cpu_set_t' sugar
|   `-RecordType 0x557f0456b0b0 'cpu_set_t'
|     `-Record 0x557f0456b030 ''
|-FunctionDecl 0x557f0456c678 <line:106:1, line:107:42> line:106:12 __sched_cpucount 'int (size_t, const cpu_set_t *)' extern
| |-ParmVarDecl 0x557f0456c448 <col:30, col:37> col:37 __setsize 'size_t':'unsigned long'
| |-ParmVarDecl 0x557f0456c550 <col:48, col:65> col:65 __setp 'const cpu_set_t *'
| `-NoThrowAttr 0x557f0456c728 <line:107:19>
|-FunctionDecl 0x557f0456c900 <line:108:1, col:92> col:19 __sched_cpualloc 'cpu_set_t *(size_t)' extern
| |-ParmVarDecl 0x557f0456c790 <col:37, col:44> col:44 __count 'size_t':'unsigned long'
| `-NoThrowAttr 0x557f0456c9a8 <col:69>
|-FunctionDecl 0x557f0456cb20 <line:109:1, col:87> col:13 __sched_cpufree 'void (cpu_set_t *)' extern
| |-ParmVarDecl 0x557f0456ca10 <col:30, col:41> col:41 __set 'cpu_set_t *'
| `-NoThrowAttr 0x557f0456cbc8 <col:64>
|-FunctionDecl 0x557f0456ce88 <line:112:1, line:113:45> line:112:12 sched_setparam 'int (__pid_t, const struct sched_param *)' extern
| |-ParmVarDecl 0x557f0456cc30 <col:28, col:36> col:36 __pid '__pid_t':'int'
| |-ParmVarDecl 0x557f0456cd68 <col:43, col:69> col:69 __param 'const struct sched_param *'
| `-NoThrowAttr 0x557f0456cf38 <line:113:22>
|-FunctionDecl 0x557f0456d1b8 <line:114:1, col:111> col:12 sched_getparam 'int (__pid_t, struct sched_param *)' extern
| |-ParmVarDecl 0x557f0456cfa0 <col:28, col:36> col:36 __pid '__pid_t':'int'
| |-ParmVarDecl 0x557f0456d098 <col:43, col:63> col:63 __param 'struct sched_param *'
| `-NoThrowAttr 0x557f0456d268 <col:88>
|-FunctionDecl 0x557f0456d588 <line:115:1, line:116:85> line:115:12 sched_setscheduler 'int (__pid_t, int, const struct sched_param *)' extern
| |-ParmVarDecl 0x557f0456d2d0 <col:32, col:40> col:40 __pid '__pid_t':'int'
| |-ParmVarDecl 0x557f0456d3b0 <col:47, col:51> col:51 __policy 'int'
| |-ParmVarDecl 0x557f0456d440 <line:116:11, col:37> col:37 __param 'const struct sched_param *'
| `-NoThrowAttr 0x557f0456d640 <col:62>
|-FunctionDecl 0x557f0456d7b8 <line:117:1, col:86> col:12 sched_getscheduler 'int (__pid_t)' extern
| |-ParmVarDecl 0x557f0456d6a8 <col:32, col:40> col:40 __pid '__pid_t':'int'
| `-NoThrowAttr 0x557f0456d860 <col:63>
|-FunctionDecl 0x557f0456d988 <line:118:1, col:70> col:12 sched_yield 'int (void)' extern
| `-NoThrowAttr 0x557f0456da28 <col:47>
|-FunctionDecl 0x557f0456db30 <line:119:1, col:92> col:12 sched_get_priority_max 'int (int)' extern
| |-ParmVarDecl 0x557f0456da98 <col:36, col:40> col:40 __algorithm 'int'
| `-NoThrowAttr 0x557f0456dbd8 <col:69>
|-FunctionDecl 0x557f0456dce0 <line:120:1, col:92> col:12 sched_get_priority_min 'int (int)' extern
| |-ParmVarDecl 0x557f0456dc48 <col:36, col:40> col:40 __algorithm 'int'
| `-NoThrowAttr 0x557f0456dd88 <col:69>
|-FunctionDecl 0x557f0456e048 <line:121:1, col:111> col:12 sched_rr_get_interval 'int (__pid_t, struct timespec *)' extern
| |-ParmVarDecl 0x557f0456ddf0 <col:35, col:43> col:43 __pid '__pid_t':'int'
| |-ParmVarDecl 0x557f0456df28 <col:50, col:67> col:67 __t 'struct timespec *'
| `-NoThrowAttr 0x557f0456e0f8 <col:88>
|-TypedefDecl 0x557f0456e188 <line:125:1, col:19> col:19 referenced clock_t '__clock_t':'long'
| `-TypedefType 0x557f0456e150 '__clock_t' sugar
|   |-Typedef 0x557f04568548 '__clock_t'
|   `-BuiltinType 0x557f04500f30 'long'
|-TypedefDecl 0x557f0456e218 <line:128:1, col:21> col:21 referenced clockid_t '__clockid_t':'int'
| `-TypedefType 0x557f0456e1e0 '__clockid_t' sugar
|   |-Typedef 0x557f04568938 '__clockid_t'
|   `-BuiltinType 0x557f04500f10 'int'
|-TypedefDecl 0x557f0456e2a8 <line:129:1, col:19> col:19 referenced timer_t '__timer_t':'void *'
| `-TypedefType 0x557f0456e270 '__timer_t' sugar
|   |-Typedef 0x557f045689a8 '__timer_t'
|   `-PointerType 0x557f04501630 'void *'
|     `-BuiltinType 0x557f04500e70 'void'
|-RecordDecl 0x557f0456e300 <line:131:1, line:144:1> line:131:8 struct tm definition
| |-FieldDecl 0x557f0456e3d8 <line:133:3, col:7> col:7 tm_sec 'int'
| |-FieldDecl 0x557f0456e440 <line:134:3, col:7> col:7 tm_min 'int'
| |-FieldDecl 0x557f0456e4a8 <line:135:3, col:7> col:7 tm_hour 'int'
| |-FieldDecl 0x557f0456e510 <line:136:3, col:7> col:7 tm_mday 'int'
| |-FieldDecl 0x557f0456e578 <line:137:3, col:7> col:7 tm_mon 'int'
| |-FieldDecl 0x557f0456e5e0 <line:138:3, col:7> col:7 tm_year 'int'
| |-FieldDecl 0x557f0456e648 <line:139:3, col:7> col:7 tm_wday 'int'
| |-FieldDecl 0x557f0456e6b0 <line:140:3, col:7> col:7 tm_yday 'int'
| |-FieldDecl 0x557f0456e718 <line:141:3, col:7> col:7 tm_isdst 'int'
| |-FieldDecl 0x557f0456e780 <line:142:3, col:12> col:12 tm_gmtoff 'long'
| `-FieldDecl 0x557f0456e7e8 <line:143:3, col:15> col:15 tm_zone 'const char *'
|-RecordDecl 0x557f0456e838 <line:147:1, line:151:3> line:147:8 struct itimerspec definition
| |-FieldDecl 0x557f0456e908 <line:149:5, col:21> col:21 it_interval 'struct timespec':'struct timespec'
| `-FieldDecl 0x557f0456e978 <line:150:5, col:21> col:21 it_value 'struct timespec':'struct timespec'
|-RecordDecl 0x557f0456ea20 <line:152:1, col:8> col:8 struct sigevent
|-FunctionDecl 0x557f0456ebf0 <line:154:1, col:68> col:16 clock 'clock_t (void)' extern
| `-NoThrowAttr 0x557f0456ec90 <col:45>
|-FunctionDecl 0x557f0456ee70 <line:155:1, col:77> col:15 time 'time_t (time_t *)' extern
| |-ParmVarDecl 0x557f0456ed60 <col:21, col:29> col:29 __timer 'time_t *'
| `-NoThrowAttr 0x557f0456ef18 <col:54>
|-FunctionDecl 0x557f0456f118 <line:156:1, line:157:73> line:156:15 difftime 'double (time_t, time_t)' extern
| |-ParmVarDecl 0x557f0456ef80 <col:25, col:32> col:32 __time1 'time_t':'long'
| |-ParmVarDecl 0x557f0456eff8 <col:41, col:48> col:48 __time0 'time_t':'long'
| |-NoThrowAttr 0x557f0456f1c8 <line:157:22>
| `-ConstAttr 0x557f0456f220 <col:63>
|-FunctionDecl 0x557f04570050 <line:158:1, col:79> col:15 mktime 'time_t (struct tm *)' extern
| |-ParmVarDecl 0x557f0456f318 <col:23, col:34> col:34 __tp 'struct tm *'
| `-NoThrowAttr 0x557f045700f8 <col:56>
|-FunctionDecl 0x557f045704a0 <line:159:1, line:161:77> line:159:15 strftime 'size_t (char *restrict, size_t, const char *restrict, const struct tm *restrict)' extern
| |-ParmVarDecl 0x557f04570168 <col:25, col:42> col:42 __s 'char *restrict'
| |-ParmVarDecl 0x557f045701e0 <col:47, col:54> col:54 __maxsize 'size_t':'unsigned long'
| |-ParmVarDecl 0x557f04570260 <line:160:4, col:27> col:27 __format 'const char *restrict'
| |-ParmVarDecl 0x557f04570358 <line:161:4, col:32> col:32 __tp 'const struct tm *restrict'
| `-NoThrowAttr 0x557f04570560 <col:54>
|-RecordDecl 0x557f045705b8 <line:163:9, line:170:1> line:163:16 struct __locale_struct definition
| |-RecordDecl 0x557f04570668 parent 0x557f04500e18 <line:165:3, col:10> col:10 struct __locale_data
| |-FieldDecl 0x557f045708c8 <col:3, col:37> col:25 __locales 'struct __locale_data *[13]'
| |-FieldDecl 0x557f04570968 <line:166:3, col:29> col:29 __ctype_b 'const unsigned short *'
| |-FieldDecl 0x557f045709d0 <line:167:3, col:14> col:14 __ctype_tolower 'const int *'
| |-FieldDecl 0x557f04570a38 <line:168:3, col:14> col:14 __ctype_toupper 'const int *'
| `-FieldDecl 0x557f04570b28 <line:169:3, col:25> col:15 __names 'const char *[13]'
|-TypedefDecl 0x557f04570c48 <line:163:1, line:170:4> col:4 referenced __locale_t 'struct __locale_struct *'
| `-PointerType 0x557f04570bf0 'struct __locale_struct *'
|   `-ElaboratedType 0x557f04570b80 'struct __locale_struct' sugar
|     `-RecordType 0x557f04570640 'struct __locale_struct'
|       `-Record 0x557f045705b8 '__locale_struct'
|-TypedefDecl 0x557f04570cf8 <line:171:1, col:20> col:20 locale_t '__locale_t':'struct __locale_struct *'
| `-TypedefType 0x557f04570cc0 '__locale_t' sugar
|   |-Typedef 0x557f04570c48 '__locale_t'
|   `-PointerType 0x557f04570bf0 'struct __locale_struct *'
|     `-ElaboratedType 0x557f04570b80 'struct __locale_struct' sugar
|       `-RecordType 0x557f04570640 'struct __locale_struct'
|         `-Record 0x557f045705b8 '__locale_struct'
|-FunctionDecl 0x557f04572110 <line:172:1, line:175:63> line:172:15 strftime_l 'size_t (char *restrict, size_t, const char *restrict, const struct tm *restrict, __locale_t)' extern
| |-ParmVarDecl 0x557f04570d68 <col:27, col:44> col:44 __s 'char *restrict'
| |-ParmVarDecl 0x557f04570de0 <col:49, col:56> col:56 __maxsize 'size_t':'unsigned long'
| |-ParmVarDecl 0x557f04570e60 <line:173:6, col:29> col:29 __format 'const char *restrict'
| |-ParmVarDecl 0x557f04570ef0 <line:174:6, col:34> col:34 __tp 'const struct tm *restrict'
| |-ParmVarDecl 0x557f04570f68 <line:175:6, col:17> col:17 __loc '__locale_t':'struct __locale_struct *'
| `-NoThrowAttr 0x557f045721d8 <col:40>
|-FunctionDecl 0x557f045723c8 <line:177:1, col:89> col:19 gmtime 'struct tm *(const time_t *)' extern
| |-ParmVarDecl 0x557f045722a0 <col:27, col:41> col:41 __timer 'const time_t *'
| `-NoThrowAttr 0x557f04572470 <col:66>
|-FunctionDecl 0x557f04572580 <line:178:1, col:92> col:19 localtime 'struct tm *(const time_t *)' extern
| |-ParmVarDecl 0x557f045724d8 <col:30, col:44> col:44 __timer 'const time_t *'
| `-NoThrowAttr 0x557f04572628 <col:69>
|-FunctionDecl 0x557f04572858 <line:180:1, line:181:75> line:180:19 gmtime_r 'struct tm *(const time_t *restrict, struct tm *restrict)' extern
| |-ParmVarDecl 0x557f04572690 <col:29, col:54> col:54 __timer 'const time_t *restrict'
| |-ParmVarDecl 0x557f04572720 <line:181:8, col:30> col:30 __tp 'struct tm *restrict'
| `-NoThrowAttr 0x557f04572908 <col:52>
|-FunctionDecl 0x557f04572ab0 <line:182:1, line:183:78> line:182:19 localtime_r 'struct tm *(const time_t *restrict, struct tm *restrict)' extern
| |-ParmVarDecl 0x557f04572970 <col:32, col:57> col:57 __timer 'const time_t *restrict'
| |-ParmVarDecl 0x557f04572a00 <line:183:11, col:33> col:33 __tp 'struct tm *restrict'
| `-NoThrowAttr 0x557f04572b60 <col:55>
|-FunctionDecl 0x557f04572cf8 <line:185:1, col:85> col:14 asctime 'char *(const struct tm *)' extern
| |-ParmVarDecl 0x557f04572be0 <col:23, col:40> col:40 __tp 'const struct tm *'
| `-NoThrowAttr 0x557f04572da0 <col:62>
|-FunctionDecl 0x557f04572f18 <line:186:1, col:83> col:14 ctime 'char *(const time_t *)' extern
| |-ParmVarDecl 0x557f04572e08 <col:21, col:35> col:35 __timer 'const time_t *'
| `-NoThrowAttr 0x557f04572fc0 <col:60>
|-FunctionDecl 0x557f045732b8 <line:188:1, line:189:67> line:188:14 asctime_r 'char *(const struct tm *restrict, char *restrict)' extern
| |-ParmVarDecl 0x557f04573118 <col:25, col:53> col:53 __tp 'const struct tm *restrict'
| |-ParmVarDecl 0x557f04573198 <line:189:4, col:21> col:21 __buf 'char *restrict'
| `-NoThrowAttr 0x557f04573368 <col:44>
|-FunctionDecl 0x557f04573578 <line:190:1, line:191:72> line:190:14 ctime_r 'char *(const time_t *restrict, char *restrict)' extern
| |-ParmVarDecl 0x557f045733d0 <col:23, col:48> col:48 __timer 'const time_t *restrict'
| |-ParmVarDecl 0x557f04573450 <line:191:9, col:26> col:26 __buf 'char *restrict'
| `-NoThrowAttr 0x557f04573628 <col:49>
|-VarDecl 0x557f04573728 <line:192:1, col:24> col:14 __tzname 'char *[2]' extern
|-VarDecl 0x557f045737a8 <line:193:1, col:12> col:12 __daylight 'int' extern
|-VarDecl 0x557f04573828 <line:194:1, col:17> col:17 __timezone 'long' extern
|-VarDecl 0x557f045738f0 <line:195:1, col:22> col:14 tzname 'char *[2]' extern
|-FunctionDecl 0x557f04573a20 <line:196:1, col:65> col:13 tzset 'void (void)' extern
| `-NoThrowAttr 0x557f04573ac0 <col:42>
|-VarDecl 0x557f04573b30 <line:197:1, col:12> col:12 daylight 'int' extern
|-VarDecl 0x557f04573bb0 <line:198:1, col:17> col:17 timezone 'long' extern
|-FunctionDecl 0x557f04573d38 <line:199:1, col:80> col:12 stime 'int (const time_t *)' extern
| |-ParmVarDecl 0x557f04573c28 <col:19, col:33> col:33 __when 'const time_t *'
| `-NoThrowAttr 0x557f04573de0 <col:57>
|-FunctionDecl 0x557f04573ef0 <line:200:1, col:79> col:15 timegm 'time_t (struct tm *)' extern
| |-ParmVarDecl 0x557f04573e60 <col:23, col:34> col:34 __tp 'struct tm *'
| `-NoThrowAttr 0x557f04573f98 <col:56>
|-FunctionDecl 0x557f045740d0 <line:201:1, col:82> col:15 timelocal 'time_t (struct tm *)' extern
| |-ParmVarDecl 0x557f04574018 <col:26, col:37> col:37 __tp 'struct tm *'
| `-NoThrowAttr 0x557f04574178 <col:59>
|-FunctionDecl 0x557f04574280 <line:202:1, col:99> col:12 dysize 'int (int)' extern
| |-ParmVarDecl 0x557f045741e8 <col:20, col:24> col:24 __year 'int'
| |-NoThrowAttr 0x557f04574328 <col:48>
| `-ConstAttr 0x557f04574380 <col:89>
|-FunctionDecl 0x557f045745e8 <line:203:1, line:204:37> line:203:12 nanosleep 'int (const struct timespec *, struct timespec *)' extern
| |-ParmVarDecl 0x557f04574438 <col:23, col:46> col:46 __requested_time 'const struct timespec *'
| `-ParmVarDecl 0x557f045744c8 <line:204:9, col:26> col:26 __remaining 'struct timespec *'
|-FunctionDecl 0x557f04574848 <line:205:1, col:111> col:12 clock_getres 'int (clockid_t, struct timespec *)' extern
| |-ParmVarDecl 0x557f045746d8 <col:26, col:36> col:36 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x557f04574768 <col:48, col:65> col:65 __res 'struct timespec *'
| `-NoThrowAttr 0x557f045748f8 <col:88>
|-FunctionDecl 0x557f04574a90 <line:206:1, col:111> col:12 clock_gettime 'int (clockid_t, struct timespec *)' extern
| |-ParmVarDecl 0x557f04574960 <col:27, col:37> col:37 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x557f045749f0 <col:49, col:66> col:66 __tp 'struct timespec *'
| `-NoThrowAttr 0x557f04574b40 <col:88>
|-FunctionDecl 0x557f04574d58 <line:207:1, line:208:45> line:207:12 clock_settime 'int (clockid_t, const struct timespec *)' extern
| |-ParmVarDecl 0x557f04574ba8 <col:27, col:37> col:37 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x557f04574c38 <col:49, col:72> col:72 __tp 'const struct timespec *'
| `-NoThrowAttr 0x557f04574e08 <line:208:22>
|-FunctionDecl 0x557f04575178 <line:209:1, line:211:30> line:209:12 clock_nanosleep 'int (clockid_t, int, const struct timespec *, struct timespec *)' extern
| |-ParmVarDecl 0x557f04574e70 <col:29, col:39> col:39 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x557f04574ef0 <col:51, col:55> col:55 __flags 'int'
| |-ParmVarDecl 0x557f04574f80 <line:210:8, col:31> col:31 __req 'const struct timespec *'
| `-ParmVarDecl 0x557f04575010 <line:211:8, col:25> col:25 __rem 'struct timespec *'
|-FunctionDecl 0x557f04575478 <line:212:1, col:108> col:12 clock_getcpuclockid 'int (pid_t, clockid_t *)' extern
| |-ParmVarDecl 0x557f04575278 <col:33, col:39> col:39 __pid 'pid_t':'int'
| |-ParmVarDecl 0x557f04575350 <col:46, col:57> col:57 __clock_id 'clockid_t *'
| `-NoThrowAttr 0x557f04575528 <col:85>
|-FunctionDecl 0x557f04575918 <line:213:1, line:215:75> line:213:12 timer_create 'int (clockid_t, struct sigevent *restrict, timer_t *restrict)' extern
| |-ParmVarDecl 0x557f04575590 <col:26, col:36> col:36 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x557f045756c8 <line:214:5, col:33> col:33 __evp 'struct sigevent *restrict'
| |-ParmVarDecl 0x557f045757d0 <line:215:5, col:25> col:25 __timerid 'timer_t *restrict'
| `-NoThrowAttr 0x557f045759d0 <col:52>
|-FunctionDecl 0x557f04575b48 <line:216:1, col:84> col:12 timer_delete 'int (timer_t)' extern
| |-ParmVarDecl 0x557f04575a38 <col:26, col:34> col:34 __timerid 'timer_t':'void *'
| `-NoThrowAttr 0x557f04575bf0 <col:61>
|-FunctionDecl 0x557f045760f0 <line:217:1, line:219:85> line:217:12 timer_settime 'int (timer_t, int, const struct itimerspec *restrict, struct itimerspec *restrict)' extern
| |-ParmVarDecl 0x557f04575c58 <col:27, col:35> col:35 __timerid 'timer_t':'void *'
| |-ParmVarDecl 0x557f04575cd8 <col:46, col:50> col:50 __flags 'int'
| |-ParmVarDecl 0x557f04575e08 <line:218:6, col:42> col:42 __value 'const struct itimerspec *restrict'
| |-ParmVarDecl 0x557f04575ef8 <line:219:6, col:36> col:36 __ovalue 'struct itimerspec *restrict'
| `-NoThrowAttr 0x557f045761b0 <col:62>
|-FunctionDecl 0x557f045763c8 <line:220:1, line:221:45> line:220:12 timer_gettime 'int (timer_t, struct itimerspec *)' extern
| |-ParmVarDecl 0x557f04576218 <col:27, col:35> col:35 __timerid 'timer_t':'void *'
| |-ParmVarDecl 0x557f045762a8 <col:46, col:65> col:65 __value 'struct itimerspec *'
| `-NoThrowAttr 0x557f04576478 <line:221:22>
|-FunctionDecl 0x557f04576578 <line:222:1, col:88> col:12 timer_getoverrun 'int (timer_t)' extern
| |-ParmVarDecl 0x557f045764e0 <col:30, col:38> col:38 __timerid 'timer_t':'void *'
| `-NoThrowAttr 0x557f04576620 <col:65>
|-TypedefDecl 0x557f04576690 <line:224:1, col:27> col:27 referenced pthread_t 'unsigned long'
| `-BuiltinType 0x557f04500fd0 'unsigned long'
|-RecordDecl 0x557f045766e8 <line:225:1, line:229:1> line:225:7 union pthread_attr_t definition
| |-FieldDecl 0x557f04576830 <line:227:3, col:17> col:8 __size 'char [56]'
| `-FieldDecl 0x557f04576898 <line:228:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x557f04576948 <line:230:1, col:30> col:30 referenced pthread_attr_t 'union pthread_attr_t':'union pthread_attr_t'
| `-ElaboratedType 0x557f045768f0 'union pthread_attr_t' sugar
|   `-RecordType 0x557f04576770 'union pthread_attr_t'
|     `-Record 0x557f045766e8 'pthread_attr_t'
|-RecordDecl 0x557f045769a0 <line:231:9, line:235:1> line:231:16 struct __pthread_internal_list definition
| |-FieldDecl 0x557f04576b18 <line:233:3, col:35> col:35 __prev 'struct __pthread_internal_list *'
| `-FieldDecl 0x557f04576b90 <line:234:3, col:35> col:35 __next 'struct __pthread_internal_list *'
|-TypedefDecl 0x557f04576c40 <line:231:1, line:235:3> col:3 referenced __pthread_list_t 'struct __pthread_internal_list':'struct __pthread_internal_list'
| `-ElaboratedType 0x557f04576be0 'struct __pthread_internal_list' sugar
|   `-RecordType 0x557f04576a20 'struct __pthread_internal_list'
|     `-Record 0x557f045769a0 '__pthread_internal_list'
|-RecordDecl 0x557f04576cb0 <line:236:9, line:250:1> line:236:9 union definition
| |-RecordDecl 0x557f04576d58 parent 0x557f04500e18 <line:238:3, line:247:3> line:238:10 struct __pthread_mutex_s definition
| | |-FieldDecl 0x557f04576e30 <line:240:5, col:9> col:9 __lock 'int'
| | |-FieldDecl 0x557f04576e98 <line:241:5, col:18> col:18 __count 'unsigned int'
| | |-FieldDecl 0x557f04576f00 <line:242:5, col:9> col:9 __owner 'int'
| | |-FieldDecl 0x557f04576f68 <line:243:5, col:18> col:18 __nusers 'unsigned int'
| | |-FieldDecl 0x557f04576fd0 <line:244:5, col:9> col:9 __kind 'int'
| | |-FieldDecl 0x557f04577038 <line:245:5, col:9> col:9 __spins 'int'
| | `-FieldDecl 0x557f0457b110 <line:246:5, col:22> col:22 __list '__pthread_list_t':'struct __pthread_internal_list'
| |-FieldDecl 0x557f0457b1c0 <line:238:3, line:247:5> col:5 __data 'struct __pthread_mutex_s':'struct __pthread_mutex_s'
| |-FieldDecl 0x557f0457b2b0 <line:248:3, col:17> col:8 __size 'char [40]'
| `-FieldDecl 0x557f0457b318 <line:249:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x557f0457b4a0 <line:236:1, line:250:3> col:3 referenced pthread_mutex_t 'union pthread_mutex_t':'pthread_mutex_t'
| `-ElaboratedType 0x557f0457b440 'union pthread_mutex_t' sugar
|   `-RecordType 0x557f04576d30 'pthread_mutex_t'
|     `-Record 0x557f04576cb0 ''
|-RecordDecl 0x557f0457b510 <line:251:9, line:255:1> line:251:9 union definition
| |-FieldDecl 0x557f0457b650 <line:253:3, col:16> col:8 __size 'char [4]'
| `-FieldDecl 0x557f0457b6b8 <line:254:3, col:7> col:7 __align 'int'
|-TypedefDecl 0x557f0457b770 <line:251:1, line:255:3> col:3 referenced pthread_mutexattr_t 'union pthread_mutexattr_t':'pthread_mutexattr_t'
| `-ElaboratedType 0x557f0457b710 'union pthread_mutexattr_t' sugar
|   `-RecordType 0x557f0457b590 'pthread_mutexattr_t'
|     `-Record 0x557f0457b510 ''
|-RecordDecl 0x557f0457b7e0 <line:256:9, line:271:1> line:256:9 union definition
| |-RecordDecl 0x557f0457b888 <line:258:3, line:268:3> line:258:3 struct definition
| | |-FieldDecl 0x557f0457b950 <line:260:5, col:9> col:9 __lock 'int'
| | |-FieldDecl 0x557f0457b9b8 <line:261:5, col:18> col:18 __futex 'unsigned int'
| | |-FieldDecl 0x557f0457ba20 <line:262:19, col:42> col:42 __total_seq 'unsigned long long'
| | |-FieldDecl 0x557f0457ba88 <line:263:19, col:42> col:42 __wakeup_seq 'unsigned long long'
| | |-FieldDecl 0x557f0457baf0 <line:264:19, col:42> col:42 __woken_seq 'unsigned long long'
| | |-FieldDecl 0x557f0457bb58 <line:265:5, col:11> col:11 __mutex 'void *'
| | |-FieldDecl 0x557f0457bbc0 <line:266:5, col:18> col:18 __nwaiters 'unsigned int'
| | `-FieldDecl 0x557f0457bc28 <line:267:5, col:18> col:18 __broadcast_seq 'unsigned int'
| |-FieldDecl 0x557f0457bce0 <line:258:3, line:268:5> col:5 __data 'struct (anonymous struct at ./split_2/mix021_pso.opt_false-unreach-call.i:258:3)':'struct pthread_cond_t::(anonymous at ./split_2/mix021_pso.opt_false-unreach-call.i:258:3)'
| |-FieldDecl 0x557f0457bdd0 <line:269:3, col:17> col:8 __size 'char [48]'
| `-FieldDecl 0x557f0457be38 <line:270:17, col:31> col:31 __align 'long long'
|-TypedefDecl 0x557f0457bf70 <line:256:1, line:271:3> col:3 referenced pthread_cond_t 'union pthread_cond_t':'pthread_cond_t'
| `-ElaboratedType 0x557f0457bf10 'union pthread_cond_t' sugar
|   `-RecordType 0x557f0457b860 'pthread_cond_t'
|     `-Record 0x557f0457b7e0 ''
|-RecordDecl 0x557f0457bfe0 <line:272:9, line:276:1> line:272:9 union definition
| |-FieldDecl 0x557f0457d130 <line:274:3, col:16> col:8 __size 'char [4]'
| `-FieldDecl 0x557f0457d198 <line:275:3, col:7> col:7 __align 'int'
|-TypedefDecl 0x557f0457d250 <line:272:1, line:276:3> col:3 referenced pthread_condattr_t 'union pthread_condattr_t':'pthread_condattr_t'
| `-ElaboratedType 0x557f0457d1f0 'union pthread_condattr_t' sugar
|   `-RecordType 0x557f0457c060 'pthread_condattr_t'
|     `-Record 0x557f0457bfe0 ''
|-TypedefDecl 0x557f0457d2d8 <line:277:1, col:22> col:22 referenced pthread_key_t 'unsigned int'
| `-BuiltinType 0x557f04500fb0 'unsigned int'
|-TypedefDecl 0x557f0457d348 <line:278:1, col:13> col:13 referenced pthread_once_t 'int'
| `-BuiltinType 0x557f04500f10 'int'
|-RecordDecl 0x557f0457d3a0 <line:279:9, line:297:1> line:279:9 union definition
| |-RecordDecl 0x557f0457d448 <line:281:3, line:294:3> line:281:3 struct definition
| | |-FieldDecl 0x557f0457d510 <line:283:5, col:9> col:9 __lock 'int'
| | |-FieldDecl 0x557f0457d578 <line:284:5, col:18> col:18 __nr_readers 'unsigned int'
| | |-FieldDecl 0x557f0457d5e0 <line:285:5, col:18> col:18 __readers_wakeup 'unsigned int'
| | |-FieldDecl 0x557f0457d648 <line:286:5, col:18> col:18 __writer_wakeup 'unsigned int'
| | |-FieldDecl 0x557f0457d6b0 <line:287:5, col:18> col:18 __nr_readers_queued 'unsigned int'
| | |-FieldDecl 0x557f0457d718 <line:288:5, col:18> col:18 __nr_writers_queued 'unsigned int'
| | |-FieldDecl 0x557f0457d780 <line:289:5, col:9> col:9 __writer 'int'
| | |-FieldDecl 0x557f0457d7e8 <line:290:5, col:9> col:9 __shared 'int'
| | |-FieldDecl 0x557f0457d850 <line:291:5, col:23> col:23 __pad1 'unsigned long'
| | |-FieldDecl 0x557f0457d8b8 <line:292:5, col:23> col:23 __pad2 'unsigned long'
| | `-FieldDecl 0x557f0457d920 <line:293:5, col:18> col:18 __flags 'unsigned int'
| |-FieldDecl 0x557f0457d9d0 <line:281:3, line:294:5> col:5 __data 'struct (anonymous struct at ./split_2/mix021_pso.opt_false-unreach-call.i:281:3)':'struct pthread_rwlock_t::(anonymous at ./split_2/mix021_pso.opt_false-unreach-call.i:281:3)'
| |-FieldDecl 0x557f0457da78 <line:295:3, col:17> col:8 __size 'char [56]'
| `-FieldDecl 0x557f0457dae0 <line:296:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x557f0457dc30 <line:279:1, line:297:3> col:3 referenced pthread_rwlock_t 'union pthread_rwlock_t':'pthread_rwlock_t'
| `-ElaboratedType 0x557f0457dbd0 'union pthread_rwlock_t' sugar
|   `-RecordType 0x557f0457d420 'pthread_rwlock_t'
|     `-Record 0x557f0457d3a0 ''
|-RecordDecl 0x557f0457dca0 <line:298:9, line:302:1> line:298:9 union definition
| |-FieldDecl 0x557f0457dde0 <line:300:3, col:16> col:8 __size 'char [8]'
| `-FieldDecl 0x557f0457de48 <line:301:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x557f0457df00 <line:298:1, line:302:3> col:3 referenced pthread_rwlockattr_t 'union pthread_rwlockattr_t':'pthread_rwlockattr_t'
| `-ElaboratedType 0x557f0457dea0 'union pthread_rwlockattr_t' sugar
|   `-RecordType 0x557f0457dd20 'pthread_rwlockattr_t'
|     `-Record 0x557f0457dca0 ''
|-TypedefDecl 0x557f0457df88 <line:303:1, col:22> col:22 referenced pthread_spinlock_t 'volatile int'
| `-QualType 0x557f04500f14 'volatile int' volatile
|   `-BuiltinType 0x557f04500f10 'int'
|-RecordDecl 0x557f0457dfe0 <line:304:9, line:308:1> line:304:9 union definition
| |-FieldDecl 0x557f0457f140 <line:306:3, col:17> col:8 __size 'char [32]'
| `-FieldDecl 0x557f0457f1a8 <line:307:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x557f0457f260 <line:304:1, line:308:3> col:3 referenced pthread_barrier_t 'union pthread_barrier_t':'pthread_barrier_t'
| `-ElaboratedType 0x557f0457f200 'union pthread_barrier_t' sugar
|   `-RecordType 0x557f0457e060 'pthread_barrier_t'
|     `-Record 0x557f0457dfe0 ''
|-RecordDecl 0x557f0457f2d0 <line:309:9, line:313:1> line:309:9 union definition
| |-FieldDecl 0x557f0457f3d0 <line:311:3, col:16> col:8 __size 'char [4]'
| `-FieldDecl 0x557f0457f438 <line:312:3, col:7> col:7 __align 'int'
|-TypedefDecl 0x557f0457f4f0 <line:309:1, line:313:3> col:3 referenced pthread_barrierattr_t 'union pthread_barrierattr_t':'pthread_barrierattr_t'
| `-ElaboratedType 0x557f0457f490 'union pthread_barrierattr_t' sugar
|   `-RecordType 0x557f0457f350 'pthread_barrierattr_t'
|     `-Record 0x557f0457f2d0 ''
|-TypedefDecl 0x557f0457f608 <line:314:1, col:29> col:18 referenced __jmp_buf 'long [8]'
| `-ConstantArrayType 0x557f0457f5a0 'long [8]' 8 
|   `-BuiltinType 0x557f04500f30 'long'
|-EnumDecl 0x557f0457f660 <line:315:1, line:319:1> line:315:1
| |-EnumConstantDecl 0x557f0457f728 <line:317:3> col:3 PTHREAD_CREATE_JOINABLE 'int'
| `-EnumConstantDecl 0x557f0457f778 <line:318:3> col:3 PTHREAD_CREATE_DETACHED 'int'
|-EnumDecl 0x557f0457f7c8 <line:320:1, line:331:1> line:320:1
| |-EnumConstantDecl 0x557f0457f898 <line:322:3> col:3 referenced PTHREAD_MUTEX_TIMED_NP 'int'
| |-EnumConstantDecl 0x557f0457f8e8 <line:323:3> col:3 referenced PTHREAD_MUTEX_RECURSIVE_NP 'int'
| |-EnumConstantDecl 0x557f0457f938 <line:324:3> col:3 referenced PTHREAD_MUTEX_ERRORCHECK_NP 'int'
| |-EnumConstantDecl 0x557f0457f988 <line:325:3> col:3 PTHREAD_MUTEX_ADAPTIVE_NP 'int'
| |-EnumConstantDecl 0x557f0457fa10 <line:327:3, col:26> col:3 referenced PTHREAD_MUTEX_NORMAL 'int'
| | `-ConstantExpr 0x557f0457f9f8 <col:26> 'int'
| |   `-DeclRefExpr 0x557f0457f9d8 <col:26> 'int' EnumConstant 0x557f0457f898 'PTHREAD_MUTEX_TIMED_NP' 'int'
| |-EnumConstantDecl 0x557f0457fa98 <line:328:3, col:29> col:3 PTHREAD_MUTEX_RECURSIVE 'int'
| | `-ConstantExpr 0x557f0457fa80 <col:29> 'int'
| |   `-DeclRefExpr 0x557f0457fa60 <col:29> 'int' EnumConstant 0x557f0457f8e8 'PTHREAD_MUTEX_RECURSIVE_NP' 'int'
| |-EnumConstantDecl 0x557f0457fb20 <line:329:3, col:30> col:3 PTHREAD_MUTEX_ERRORCHECK 'int'
| | `-ConstantExpr 0x557f0457fb08 <col:30> 'int'
| |   `-DeclRefExpr 0x557f0457fae8 <col:30> 'int' EnumConstant 0x557f0457f938 'PTHREAD_MUTEX_ERRORCHECK_NP' 'int'
| `-EnumConstantDecl 0x557f0457fba8 <line:330:3, col:27> col:3 PTHREAD_MUTEX_DEFAULT 'int'
|   `-ConstantExpr 0x557f0457fb90 <col:27> 'int'
|     `-DeclRefExpr 0x557f0457fb70 <col:27> 'int' EnumConstant 0x557f0457fa10 'PTHREAD_MUTEX_NORMAL' 'int'
|-EnumDecl 0x557f0457fbf8 <line:332:1, line:338:1> line:332:1
| |-EnumConstantDecl 0x557f0457fcc8 <line:334:3> col:3 referenced PTHREAD_MUTEX_STALLED 'int'
| |-EnumConstantDecl 0x557f0457fd50 <line:335:3, col:30> col:3 PTHREAD_MUTEX_STALLED_NP 'int'
| | `-ConstantExpr 0x557f0457fd38 <col:30> 'int'
| |   `-DeclRefExpr 0x557f0457fd18 <col:30> 'int' EnumConstant 0x557f0457fcc8 'PTHREAD_MUTEX_STALLED' 'int'
| |-EnumConstantDecl 0x557f0457fda0 <line:336:3> col:3 referenced PTHREAD_MUTEX_ROBUST 'int'
| `-EnumConstantDecl 0x557f0457fe28 <line:337:3, col:29> col:3 PTHREAD_MUTEX_ROBUST_NP 'int'
|   `-ConstantExpr 0x557f0457fe10 <col:29> 'int'
|     `-DeclRefExpr 0x557f0457fdf0 <col:29> 'int' EnumConstant 0x557f0457fda0 'PTHREAD_MUTEX_ROBUST' 'int'
|-EnumDecl 0x557f0457fe78 <line:339:1, line:344:1> line:339:1
| |-EnumConstantDecl 0x557f0457ff48 <line:341:3> col:3 PTHREAD_PRIO_NONE 'int'
| |-EnumConstantDecl 0x557f0457ff98 <line:342:3> col:3 PTHREAD_PRIO_INHERIT 'int'
| `-EnumConstantDecl 0x557f0457ffe8 <line:343:3> col:3 PTHREAD_PRIO_PROTECT 'int'
|-EnumDecl 0x557f04580038 <line:345:1, line:351:1> line:345:1
| |-EnumConstantDecl 0x557f04580150 <line:347:3> col:3 referenced PTHREAD_RWLOCK_PREFER_READER_NP 'int'
| |-EnumConstantDecl 0x557f045801a0 <line:348:3> col:3 PTHREAD_RWLOCK_PREFER_WRITER_NP 'int'
| |-EnumConstantDecl 0x557f045801f0 <line:349:3> col:3 PTHREAD_RWLOCK_PREFER_WRITER_NONRECURSIVE_NP 'int'
| `-EnumConstantDecl 0x557f04580278 <line:350:3, col:31> col:3 PTHREAD_RWLOCK_DEFAULT_NP 'int'
|   `-ConstantExpr 0x557f04580260 <col:31> 'int'
|     `-DeclRefExpr 0x557f04580240 <col:31> 'int' EnumConstant 0x557f04580150 'PTHREAD_RWLOCK_PREFER_READER_NP' 'int'
|-EnumDecl 0x557f045802c8 <line:352:1, line:356:1> line:352:1
| |-EnumConstantDecl 0x557f04580398 <line:354:3> col:3 PTHREAD_INHERIT_SCHED 'int'
| `-EnumConstantDecl 0x557f045803e8 <line:355:3> col:3 PTHREAD_EXPLICIT_SCHED 'int'
|-EnumDecl 0x557f04580438 <line:357:1, line:361:1> line:357:1
| |-EnumConstantDecl 0x557f04580508 <line:359:3> col:3 PTHREAD_SCOPE_SYSTEM 'int'
| `-EnumConstantDecl 0x557f04580558 <line:360:3> col:3 PTHREAD_SCOPE_PROCESS 'int'
|-EnumDecl 0x557f045805a8 <line:362:1, line:366:1> line:362:1
| |-EnumConstantDecl 0x557f04580678 <line:364:3> col:3 PTHREAD_PROCESS_PRIVATE 'int'
| `-EnumConstantDecl 0x557f045806c8 <line:365:3> col:3 PTHREAD_PROCESS_SHARED 'int'
|-RecordDecl 0x557f04580718 <line:367:1, line:373:1> line:367:8 struct _pthread_cleanup_buffer definition
| |-FieldDecl 0x557f04580958 <line:369:3, col:28> col:10 __routine 'void (*)(void *)'
| |-FieldDecl 0x557f045809c0 <line:370:3, col:9> col:9 __arg 'void *'
| |-FieldDecl 0x557f04580a28 <line:371:3, col:7> col:7 __canceltype 'int'
| `-FieldDecl 0x557f04580b48 <line:372:3, col:35> col:35 __prev 'struct _pthread_cleanup_buffer *'
|-EnumDecl 0x557f04580b98 <line:374:1, line:378:1> line:374:1
| |-EnumConstantDecl 0x557f04580c68 <line:376:3> col:3 PTHREAD_CANCEL_ENABLE 'int'
| `-EnumConstantDecl 0x557f04580cb8 <line:377:3> col:3 PTHREAD_CANCEL_DISABLE 'int'
|-EnumDecl 0x557f04580d08 <line:379:1, line:383:1> line:379:1
| |-EnumConstantDecl 0x557f04580dd8 <line:381:3> col:3 PTHREAD_CANCEL_DEFERRED 'int'
| `-EnumConstantDecl 0x557f04580e28 <line:382:3> col:3 PTHREAD_CANCEL_ASYNCHRONOUS 'int'
|-FunctionDecl 0x557f04581488 <line:385:1, line:388:96> line:385:12 used pthread_create 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' extern
| |-ParmVarDecl 0x557f04580f20 <col:28, col:50> col:50 __newthread 'pthread_t *restrict'
| |-ParmVarDecl 0x557f04581030 <line:386:7, col:40> col:40 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x557f04581270 <line:387:7, col:39> col:15 __start_routine 'void *(*)(void *)'
| |-ParmVarDecl 0x557f045812f0 <line:388:7, col:24> col:24 __arg 'void *restrict'
| |-NoThrowAttr 0x557f04581548 <col:47>
| |-NonNullAttr 0x557f045815a0 <col:77, col:94> 1 3
| `-CallbackAttr 0x557f045815d8 <line:385:12> Implicit 2 3
|-FunctionDecl 0x557f04581700 <line:389:1, col:72> col:13 pthread_exit 'void (void *) __attribute__((noreturn))' extern
| `-ParmVarDecl 0x557f04581630 <col:27, col:33> col:33 __retval 'void *'
|-FunctionDecl 0x557f04581958 <line:390:1, col:64> col:12 pthread_join 'int (pthread_t, void **)' extern
| |-ParmVarDecl 0x557f045817b8 <col:26, col:36> col:36 __th 'pthread_t':'unsigned long'
| `-ParmVarDecl 0x557f04581838 <col:42, col:49> col:49 __thread_return 'void **'
|-FunctionDecl 0x557f04581b28 <line:391:1, col:83> col:12 pthread_detach 'int (pthread_t)' extern
| |-ParmVarDecl 0x557f04581a18 <col:28, col:38> col:38 __th 'pthread_t':'unsigned long'
| `-NoThrowAttr 0x557f04581bd0 <col:60>
|-FunctionDecl 0x557f04581d20 <line:392:1, col:105> col:18 pthread_self 'pthread_t (void)' extern
| |-NoThrowAttr 0x557f04581dc0 <col:54>
| `-ConstAttr 0x557f04581e18 <col:95>
|-FunctionDecl 0x557f04581fe8 <line:393:1, line:394:70> line:393:12 pthread_equal 'int (pthread_t, pthread_t)' extern
| |-ParmVarDecl 0x557f04581e50 <col:27, col:37> col:37 __thread1 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x557f04581ec8 <col:48, col:58> col:58 __thread2 'pthread_t':'unsigned long'
| |-NoThrowAttr 0x557f04582098 <line:394:19>
| `-ConstAttr 0x557f045820f0 <col:60>
|-FunctionDecl 0x557f04583b08 <line:395:1, col:128> col:12 pthread_attr_init 'int (pthread_attr_t *)' extern
| |-ParmVarDecl 0x557f045839d0 <col:31, col:47> col:47 __attr 'pthread_attr_t *'
| |-NoThrowAttr 0x557f04583bb0 <col:71>
| `-NonNullAttr 0x557f04583c08 <col:112, col:126> 1
|-FunctionDecl 0x557f04583d10 <line:396:1, line:397:79> line:396:12 pthread_attr_destroy 'int (pthread_attr_t *)' extern
| |-ParmVarDecl 0x557f04583c58 <col:34, col:50> col:50 __attr 'pthread_attr_t *'
| |-NoThrowAttr 0x557f04583db8 <line:397:22>
| `-NonNullAttr 0x557f04583e10 <col:63, col:77> 1
|-FunctionDecl 0x557f04584038 <line:398:1, line:400:82> line:398:12 pthread_attr_getdetachstate 'int (const pthread_attr_t *, int *)' extern
| |-ParmVarDecl 0x557f04583e58 <col:41, col:63> col:63 __attr 'const pthread_attr_t *'
| |-ParmVarDecl 0x557f04583ed8 <line:399:6, col:11> col:11 __detachstate 'int *'
| |-NoThrowAttr 0x557f045840e8 <line:400:22>
| `-NonNullAttr 0x557f04584140 <col:63, col:80> 1 2
|-FunctionDecl 0x557f04584348 <line:401:1, line:403:79> line:401:12 pthread_attr_setdetachstate 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x557f04584188 <col:41, col:57> col:57 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x557f04584208 <line:402:6, col:10> col:10 __detachstate 'int'
| |-NoThrowAttr 0x557f045843f8 <line:403:22>
| `-NonNullAttr 0x557f04584450 <col:63, col:77> 1
|-FunctionDecl 0x557f045846a8 <line:404:1, line:406:82> line:404:12 pthread_attr_getguardsize 'int (const pthread_attr_t *, size_t *)' extern
| |-ParmVarDecl 0x557f04584498 <col:39, col:61> col:61 __attr 'const pthread_attr_t *'
| |-ParmVarDecl 0x557f04584540 <line:405:11, col:19> col:19 __guardsize 'size_t *'
| |-NoThrowAttr 0x557f04584758 <line:406:22>
| `-NonNullAttr 0x557f045847b0 <col:63, col:80> 1 2
|-FunctionDecl 0x557f045859e8 <line:407:1, line:409:79> line:407:12 pthread_attr_setguardsize 'int (pthread_attr_t *, size_t)' extern
| |-ParmVarDecl 0x557f045847f8 <col:39, col:55> col:55 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x557f04584870 <line:408:11, col:18> col:18 __guardsize 'size_t':'unsigned long'
| |-NoThrowAttr 0x557f04585a98 <line:409:22>
| `-NonNullAttr 0x557f04585af0 <col:63, col:77> 1
|-FunctionDecl 0x557f04585d28 <line:410:1, line:412:82> line:410:12 pthread_attr_getschedparam 'int (const pthread_attr_t *restrict, struct sched_param *restrict)' extern
| |-ParmVarDecl 0x557f04585b38 <col:40, col:73> col:73 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x557f04585bc8 <line:411:12, col:43> col:43 __param 'struct sched_param *restrict'
| |-NoThrowAttr 0x557f04585dd8 <line:412:22>
| `-NonNullAttr 0x557f04585e30 <col:63, col:80> 1 2
|-FunctionDecl 0x557f04586068 <line:413:1, line:415:97> line:413:12 pthread_attr_setschedparam 'int (pthread_attr_t *restrict, const struct sched_param *restrict)' extern
| |-ParmVarDecl 0x557f04585e78 <col:40, col:67> col:67 __attr 'pthread_attr_t *restrict'
| |-ParmVarDecl 0x557f04585f08 <line:414:12, line:415:12> col:12 __param 'const struct sched_param *restrict'
| |-NoThrowAttr 0x557f04586118 <col:37>
| `-NonNullAttr 0x557f04586170 <col:78, col:95> 1 2
|-FunctionDecl 0x557f04586358 <line:416:1, line:418:82> line:416:12 pthread_attr_getschedpolicy 'int (const pthread_attr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x557f045861b8 <col:41, line:417:6> col:6 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x557f04586238 <col:14, col:30> col:30 __policy 'int *restrict'
| |-NoThrowAttr 0x557f04586408 <line:418:22>
| `-NonNullAttr 0x557f04586460 <col:63, col:80> 1 2
|-FunctionDecl 0x557f045865e8 <line:419:1, line:420:79> line:419:12 pthread_attr_setschedpolicy 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x557f045864a8 <col:41, col:57> col:57 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x557f04586528 <col:65, col:69> col:69 __policy 'int'
| |-NoThrowAttr 0x557f04586698 <line:420:22>
| `-NonNullAttr 0x557f045866f0 <col:63, col:77> 1
|-FunctionDecl 0x557f04586898 <line:421:1, line:423:82> line:421:12 pthread_attr_getinheritsched 'int (const pthread_attr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x557f04586738 <col:42, line:422:7> col:7 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x557f045867b8 <col:15, col:31> col:31 __inherit 'int *restrict'
| |-NoThrowAttr 0x557f04586948 <line:423:22>
| `-NonNullAttr 0x557f045869c0 <col:63, col:80> 1 2
|-FunctionDecl 0x557f04586b48 <line:424:1, line:426:79> line:424:12 pthread_attr_setinheritsched 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x557f04586a08 <col:42, col:58> col:58 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x557f04586a88 <line:425:7, col:11> col:11 __inherit 'int'
| |-NoThrowAttr 0x557f04586bf8 <line:426:22>
| `-NonNullAttr 0x557f04586c50 <col:63, col:77> 1
|-FunctionDecl 0x557f04586df8 <line:427:1, line:429:82> line:427:12 pthread_attr_getscope 'int (const pthread_attr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x557f04586c98 <col:35, col:68> col:68 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x557f04586d18 <line:428:7, col:23> col:23 __scope 'int *restrict'
| |-NoThrowAttr 0x557f04586ea8 <line:429:22>
| `-NonNullAttr 0x557f04586f00 <col:63, col:80> 1 2
|-FunctionDecl 0x557f04587088 <line:430:1, line:431:79> line:430:12 pthread_attr_setscope 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x557f04586f48 <col:35, col:51> col:51 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x557f04586fc8 <col:59, col:63> col:63 __scope 'int'
| |-NoThrowAttr 0x557f04587138 <line:431:22>
| `-NonNullAttr 0x557f04587190 <col:63, col:77> 1
|-FunctionDecl 0x557f045873b8 <line:432:1, line:434:115> line:432:12 pthread_attr_getstackaddr 'int (const pthread_attr_t *restrict, void **restrict)' extern
| |-ParmVarDecl 0x557f045871d8 <col:39, line:433:11> col:11 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x557f04587258 <col:19, col:37> col:37 __stackaddr 'void **restrict'
| |-NoThrowAttr 0x557f04587468 <line:434:22>
| |-NonNullAttr 0x557f045874c0 <col:63, col:80> 1 2
| `-DeprecatedAttr 0x557f045874f8 <col:100> "" ""
|-FunctionDecl 0x557f04587708 <line:435:1, line:437:112> line:435:12 pthread_attr_setstackaddr 'int (pthread_attr_t *, void *)' extern
| |-ParmVarDecl 0x557f04587548 <col:39, col:55> col:55 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x557f045875c8 <line:436:11, col:17> col:17 __stackaddr 'void *'
| |-NoThrowAttr 0x557f045877b8 <line:437:22>
| |-NonNullAttr 0x557f04587810 <col:63, col:77> 1
| `-DeprecatedAttr 0x557f04587848 <col:97> "" ""
|-FunctionDecl 0x557f04587a48 <line:438:1, line:440:82> line:438:12 pthread_attr_getstacksize 'int (const pthread_attr_t *restrict, size_t *restrict)' extern
| |-ParmVarDecl 0x557f04587898 <col:39, line:439:11> col:11 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x557f04587910 <col:19, col:38> col:38 __stacksize 'size_t *restrict'
| |-NoThrowAttr 0x557f04587af8 <line:440:22>
| `-NonNullAttr 0x557f04587b50 <col:63, col:80> 1 2
|-FunctionDecl 0x557f04587cd0 <line:441:1, line:443:79> line:441:12 pthread_attr_setstacksize 'int (pthread_attr_t *, size_t)' extern
| |-ParmVarDecl 0x557f04587b98 <col:39, col:55> col:55 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x557f04587c10 <line:442:11, col:18> col:18 __stacksize 'size_t':'unsigned long'
| |-NoThrowAttr 0x557f04587d80 <line:443:22>
| `-NonNullAttr 0x557f04587dd8 <col:63, col:77> 1
|-FunctionDecl 0x557f045880c8 <line:444:1, line:447:85> line:444:12 pthread_attr_getstack 'int (const pthread_attr_t *restrict, void **restrict, size_t *restrict)' extern
| |-ParmVarDecl 0x557f04587e28 <col:35, col:68> col:68 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x557f04587ea8 <line:445:7, col:25> col:25 __stackaddr 'void **restrict'
| |-ParmVarDecl 0x557f04587f20 <line:446:7, col:26> col:26 __stacksize 'size_t *restrict'
| |-NoThrowAttr 0x557f04588180 <line:447:22>
| `-NonNullAttr 0x557f045881d8 <col:63, col:83> 1 2 3
|-FunctionDecl 0x557f04588488 <line:448:1, line:449:100> line:448:12 pthread_attr_setstack 'int (pthread_attr_t *, void *, size_t)' extern
| |-ParmVarDecl 0x557f04588230 <col:35, col:51> col:51 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x557f045882b0 <col:59, col:65> col:65 __stackaddr 'void *'
| |-ParmVarDecl 0x557f04588328 <line:449:7, col:14> col:14 __stacksize 'size_t':'unsigned long'
| |-NoThrowAttr 0x557f04588540 <col:43>
| `-NonNullAttr 0x557f04588598 <col:84, col:98> 1
|-FunctionDecl 0x557f04588858 <line:450:1, line:452:79> line:450:12 pthread_setschedparam 'int (pthread_t, int, const struct sched_param *)' extern
| |-ParmVarDecl 0x557f045885e8 <col:35, col:45> col:45 __target_thread 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x557f04588668 <col:62, col:66> col:66 __policy 'int'
| |-ParmVarDecl 0x557f045886f8 <line:451:7, col:33> col:33 __param 'const struct sched_param *'
| |-NoThrowAttr 0x557f04588910 <line:452:22>
| `-NonNullAttr 0x557f04588968 <col:63, col:77> 3
|-FunctionDecl 0x557f04588c78 <line:453:1, line:456:82> line:453:12 pthread_getschedparam 'int (pthread_t, int *restrict, struct sched_param *restrict)' extern
| |-ParmVarDecl 0x557f045889e0 <col:35, col:45> col:45 __target_thread 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x557f04588a60 <line:454:7, col:23> col:23 __policy 'int *restrict'
| |-ParmVarDecl 0x557f04588af0 <line:455:7, col:38> col:38 __param 'struct sched_param *restrict'
| |-NoThrowAttr 0x557f04588d30 <line:456:22>
| `-NonNullAttr 0x557f04588d88 <col:63, col:80> 2 3
|-FunctionDecl 0x557f04588f78 <line:457:1, line:458:45> line:457:12 pthread_setschedprio 'int (pthread_t, int)' extern
| |-ParmVarDecl 0x557f04588dd8 <col:34, col:44> col:44 __target_thread 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x557f04588e58 <col:61, col:65> col:65 __prio 'int'
| `-NoThrowAttr 0x557f04589028 <line:458:22>
|-FunctionDecl 0x557f045893f8 <line:459:1, line:460:71> line:459:12 pthread_once 'int (pthread_once_t *, void (*)(void))' extern
| |-ParmVarDecl 0x557f045890f0 <col:26, col:42> col:42 __once_control 'pthread_once_t *'
| |-ParmVarDecl 0x557f04589290 <line:460:5, col:33> col:12 __init_routine 'void (*)(void)'
| `-NonNullAttr 0x557f045894a8 <col:52, col:69> 1 2
|-FunctionDecl 0x557f04589650 <line:461:1, col:64> col:12 pthread_setcancelstate 'int (int, int *)' extern
| |-ParmVarDecl 0x557f04589530 <col:36, col:40> col:40 __state 'int'
| `-ParmVarDecl 0x557f045895b0 <col:49, col:54> col:54 __oldstate 'int *'
|-FunctionDecl 0x557f04589838 <line:462:1, col:61> col:12 pthread_setcanceltype 'int (int, int *)' extern
| |-ParmVarDecl 0x557f04589718 <col:35, col:39> col:39 __type 'int'
| `-ParmVarDecl 0x557f04589798 <col:47, col:52> col:52 __oldtype 'int *'
|-FunctionDecl 0x557f045899f0 <line:463:1, col:42> col:12 pthread_cancel 'int (pthread_t)' extern
| `-ParmVarDecl 0x557f045898f8 <col:28, col:38> col:38 __th 'pthread_t':'unsigned long'
|-FunctionDecl 0x557f04589b30 <line:464:1, col:37> col:13 pthread_testcancel 'void (void)' extern
|-RecordDecl 0x557f04589bd0 <line:465:9, line:473:1> line:465:9 struct definition
| |-RecordDecl 0x557f04589c78 <line:467:3, line:471:3> line:467:3 struct definition
| | |-FieldDecl 0x557f04589d68 <line:469:5, col:15> col:15 __cancel_jmp_buf '__jmp_buf':'long [8]'
| | `-FieldDecl 0x557f04589dd0 <line:470:5, col:9> col:9 __mask_was_saved 'int'
| |-FieldDecl 0x557f04589fa0 <line:467:3, line:471:23> col:5 __cancel_jmp_buf 'struct (anonymous struct at ./split_2/mix021_pso.opt_false-unreach-call.i:467:3) [1]'
| `-FieldDecl 0x557f0458a098 <line:472:3, col:16> col:9 __pad 'void *[4]'
|-TypedefDecl 0x557f0458a150 <line:465:1, line:473:3> col:3 referenced __pthread_unwind_buf_t 'struct __pthread_unwind_buf_t':'__pthread_unwind_buf_t'
| |-ElaboratedType 0x557f0458a0f0 'struct __pthread_unwind_buf_t' sugar
| | `-RecordType 0x557f04589c50 '__pthread_unwind_buf_t'
| |   `-Record 0x557f04589bd0 ''
| `-AlignedAttr 0x557f0458a1a8 <col:42> aligned
|   `-<<<NULL>>>
|-RecordDecl 0x557f0458a220 <line:474:1, line:480:1> line:474:8 struct __pthread_cleanup_frame definition
| |-FieldDecl 0x557f0458a380 <line:476:3, col:35> col:10 __cancel_routine 'void (*)(void *)'
| |-FieldDecl 0x557f0458a3e8 <line:477:3, col:9> col:9 __cancel_arg 'void *'
| |-FieldDecl 0x557f0458a450 <line:478:3, col:7> col:7 __do_it 'int'
| `-FieldDecl 0x557f0458a4b8 <line:479:3, col:7> col:7 __cancel_type 'int'
|-FunctionDecl 0x557f0458a6c0 <line:481:1, col:69> col:13 __pthread_register_cancel 'void (__pthread_unwind_buf_t *)' extern
| `-ParmVarDecl 0x557f0458a5b0 <col:40, col:64> col:64 __buf '__pthread_unwind_buf_t *'
|-FunctionDecl 0x557f0458a808 <line:483:1, col:71> col:13 __pthread_unregister_cancel 'void (__pthread_unwind_buf_t *)' extern
| `-ParmVarDecl 0x557f0458a778 <col:42, col:66> col:66 __buf '__pthread_unwind_buf_t *'
|-FunctionDecl 0x557f0458aa00 <line:485:1, line:487:31> line:485:13 __pthread_unwind_next 'void (__pthread_unwind_buf_t *) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x557f0458a8c0 <col:36, col:60> col:60 __buf '__pthread_unwind_buf_t *'
| `-WeakAttr 0x557f0458aaa8 <line:487:22>
|-RecordDecl 0x557f0458ab00 <line:489:1, col:8> col:8 struct __jmp_buf_tag
|-FunctionDecl 0x557f0458ae18 <line:490:1, col:98> col:12 __sigsetjmp 'int (struct __jmp_buf_tag *, int)' extern
| |-ParmVarDecl 0x557f0458ac78 <col:25, col:47> col:47 __env 'struct __jmp_buf_tag *'
| |-ParmVarDecl 0x557f0458acf8 <col:54, col:58> col:58 __savemask 'int'
| |-NoThrowAttr 0x557f0458aec8 <col:86>
| `-ReturnsTwiceAttr 0x557f0458af20 <col:12> Implicit
|-FunctionDecl 0x557f0458b248 <line:491:1, line:493:79> line:491:12 pthread_mutex_init 'int (pthread_mutex_t *, const pthread_mutexattr_t *)' extern
| |-ParmVarDecl 0x557f0458aff0 <col:32, col:49> col:49 __mutex 'pthread_mutex_t *'
| |-ParmVarDecl 0x557f0458b100 <line:492:11, col:38> col:38 __mutexattr 'const pthread_mutexattr_t *'
| |-NoThrowAttr 0x557f0458b2f8 <line:493:22>
| `-NonNullAttr 0x557f0458b350 <col:63, col:77> 1
|-FunctionDecl 0x557f0458b4c8 <line:494:1, line:495:79> line:494:12 pthread_mutex_destroy 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x557f0458b398 <col:35, col:52> col:52 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x557f0458b570 <line:495:22>
| `-NonNullAttr 0x557f0458b5c8 <col:63, col:77> 1
|-FunctionDecl 0x557f0458b6d0 <line:496:1, line:497:68> line:496:12 pthread_mutex_trylock 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x557f0458b618 <col:35, col:52> col:52 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x557f0458b778 <line:497:22>
| `-NonNullAttr 0x557f0458b7d0 <col:52, col:66> 1
|-FunctionDecl 0x557f0458b8d0 <line:498:1, line:499:68> line:498:12 pthread_mutex_lock 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x557f0458b818 <col:32, col:49> col:49 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x557f0458b978 <line:499:22>
| `-NonNullAttr 0x557f0458b9d0 <col:52, col:66> 1
|-FunctionDecl 0x557f0458cc28 <line:500:1, line:502:85> line:500:12 pthread_mutex_timedlock 'int (pthread_mutex_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x557f0458ca38 <col:37, col:65> col:65 __mutex 'pthread_mutex_t *restrict'
| |-ParmVarDecl 0x557f0458cac8 <line:501:9, line:502:9> col:9 __abstime 'const struct timespec *restrict'
| |-NoThrowAttr 0x557f0458ccd8 <col:36>
| `-NonNullAttr 0x557f0458cd30 <col:66, col:83> 1 2
|-FunctionDecl 0x557f0458ce30 <line:503:1, line:504:68> line:503:12 pthread_mutex_unlock 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x557f0458cd78 <col:34, col:51> col:51 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x557f0458ced8 <line:504:22>
| `-NonNullAttr 0x557f0458cf30 <col:52, col:66> 1
|-FunctionDecl 0x557f0458d1c8 <line:505:1, line:508:82> line:505:12 pthread_mutex_getprioceiling 'int (const pthread_mutex_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x557f0458cfe0 <col:42, line:506:18> col:18 __mutex 'const pthread_mutex_t *restrict'
| |-ParmVarDecl 0x557f0458d060 <line:507:7, col:23> col:23 __prioceiling 'int *restrict'
| |-NoThrowAttr 0x557f0458d278 <line:508:22>
| `-NonNullAttr 0x557f0458d2d0 <col:63, col:80> 1 2
|-FunctionDecl 0x557f0458d598 <line:509:1, line:512:82> line:509:12 pthread_mutex_setprioceiling 'int (pthread_mutex_t *restrict, int, int *restrict)' extern
| |-ParmVarDecl 0x557f0458d318 <col:42, col:70> col:70 __mutex 'pthread_mutex_t *restrict'
| |-ParmVarDecl 0x557f0458d398 <line:510:7, col:11> col:11 __prioceiling 'int'
| |-ParmVarDecl 0x557f0458d418 <line:511:7, col:23> col:23 __old_ceiling 'int *restrict'
| |-NoThrowAttr 0x557f0458d650 <line:512:22>
| `-NonNullAttr 0x557f0458d6a8 <col:63, col:80> 1 3
|-FunctionDecl 0x557f0458d7b0 <line:513:1, line:514:79> line:513:12 pthread_mutex_consistent 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x557f0458d6f8 <col:38, col:55> col:55 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x557f0458d858 <line:514:22>
| `-NonNullAttr 0x557f0458d8b0 <col:63, col:77> 1
|-FunctionDecl 0x557f0458dad8 <line:515:1, line:516:79> line:515:12 pthread_mutexattr_init 'int (pthread_mutexattr_t *)' extern
| |-ParmVarDecl 0x557f0458d960 <col:36, col:57> col:57 __attr 'pthread_mutexattr_t *'
| |-NoThrowAttr 0x557f0458db80 <line:516:22>
| `-NonNullAttr 0x557f0458dbd8 <col:63, col:77> 1
|-FunctionDecl 0x557f0458dce0 <line:517:1, line:518:79> line:517:12 pthread_mutexattr_destroy 'int (pthread_mutexattr_t *)' extern
| |-ParmVarDecl 0x557f0458dc28 <col:39, col:60> col:60 __attr 'pthread_mutexattr_t *'
| |-NoThrowAttr 0x557f0458dd88 <line:518:22>
| `-NonNullAttr 0x557f0458dde0 <col:63, col:77> 1
|-FunctionDecl 0x557f0458e008 <line:519:1, line:522:82> line:519:12 pthread_mutexattr_getpshared 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x557f0458de28 <col:42, line:520:18> col:18 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x557f0458dea8 <line:521:7, col:23> col:23 __pshared 'int *restrict'
| |-NoThrowAttr 0x557f0458e0b8 <line:522:22>
| `-NonNullAttr 0x557f0458e110 <col:63, col:80> 1 2
|-FunctionDecl 0x557f0458e318 <line:523:1, line:525:79> line:523:12 pthread_mutexattr_setpshared 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x557f0458e158 <col:42, col:63> col:63 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x557f0458e1d8 <line:524:7, col:11> col:11 __pshared 'int'
| |-NoThrowAttr 0x557f0458e3c8 <line:525:22>
| `-NonNullAttr 0x557f0458e420 <col:63, col:77> 1
|-FunctionDecl 0x557f0458e5c8 <line:526:1, line:528:82> line:526:12 pthread_mutexattr_gettype 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x557f0458e468 <col:39, line:527:11> col:11 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x557f0458e4e8 <col:19, col:35> col:35 __kind 'int *restrict'
| |-NoThrowAttr 0x557f0458e678 <line:528:22>
| `-NonNullAttr 0x557f0458e6d0 <col:63, col:80> 1 2
|-FunctionDecl 0x557f0458e858 <line:529:1, line:530:79> line:529:12 pthread_mutexattr_settype 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x557f0458e718 <col:39, col:60> col:60 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x557f0458e798 <col:68, col:72> col:72 __kind 'int'
| |-NoThrowAttr 0x557f0458e908 <line:530:22>
| `-NonNullAttr 0x557f0458e960 <col:63, col:77> 1
|-FunctionDecl 0x557f0458eb20 <line:531:1, line:534:82> line:531:12 pthread_mutexattr_getprotocol 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x557f0458e9a8 <col:43, line:532:19> col:19 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x557f0458ea40 <line:533:8, col:24> col:24 __protocol 'int *restrict'
| |-NoThrowAttr 0x557f0458ebd0 <line:534:22>
| `-NonNullAttr 0x557f0458ec28 <col:63, col:80> 1 2
|-FunctionDecl 0x557f0458edb8 <line:535:1, line:537:79> line:535:12 pthread_mutexattr_setprotocol 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x557f0458ec78 <col:43, col:64> col:64 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x557f0458ecf8 <line:536:8, col:12> col:12 __protocol 'int'
| |-NoThrowAttr 0x557f0458ee68 <line:537:22>
| `-NonNullAttr 0x557f0458eec0 <col:63, col:77> 1
|-FunctionDecl 0x557f0458f068 <line:538:1, line:541:82> line:538:12 pthread_mutexattr_getprioceiling 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x557f0458ef08 <col:46, line:539:22> col:22 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x557f0458ef88 <line:540:11, col:27> col:27 __prioceiling 'int *restrict'
| |-NoThrowAttr 0x557f0458f118 <line:541:22>
| `-NonNullAttr 0x557f0458f170 <col:63, col:80> 1 2
|-FunctionDecl 0x557f0458f2f8 <line:542:1, line:544:79> line:542:12 pthread_mutexattr_setprioceiling 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x557f0458f1b8 <col:46, col:67> col:67 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x557f0458f238 <line:543:11, col:15> col:15 __prioceiling 'int'
| |-NoThrowAttr 0x557f0458f3a8 <line:544:22>
| `-NonNullAttr 0x557f0458f400 <col:63, col:77> 1
|-FunctionDecl 0x557f0458f5e8 <line:545:1, line:547:82> line:545:12 pthread_mutexattr_getrobust 'int (const pthread_mutexattr_t *, int *)' extern
| |-ParmVarDecl 0x557f0458f448 <col:41, col:68> col:68 __attr 'const pthread_mutexattr_t *'
| |-ParmVarDecl 0x557f0458f4c8 <line:546:6, col:11> col:11 __robustness 'int *'
| |-NoThrowAttr 0x557f0458f698 <line:547:22>
| `-NonNullAttr 0x557f0458f6f0 <col:63, col:80> 1 2
|-FunctionDecl 0x557f0458f878 <line:548:1, line:550:79> line:548:12 pthread_mutexattr_setrobust 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x557f0458f738 <col:41, col:62> col:62 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x557f0458f7b8 <line:549:6, col:10> col:10 __robustness 'int'
| |-NoThrowAttr 0x557f0458f928 <line:550:22>
| `-NonNullAttr 0x557f0458f980 <col:63, col:77> 1
|-FunctionDecl 0x557f04590cf8 <line:551:1, line:553:86> line:551:12 pthread_rwlock_init 'int (pthread_rwlock_t *restrict, const pthread_rwlockattr_t *restrict)' extern
| |-ParmVarDecl 0x557f04590aa0 <col:33, col:62> col:62 __rwlock 'pthread_rwlock_t *restrict'
| |-ParmVarDecl 0x557f04590bb0 <line:552:5, line:553:5> col:5 __attr 'const pthread_rwlockattr_t *restrict'
| |-NoThrowAttr 0x557f04590da8 <col:29>
| `-NonNullAttr 0x557f04590e00 <col:70, col:84> 1
|-FunctionDecl 0x557f04590f78 <line:554:1, line:555:79> line:554:12 pthread_rwlock_destroy 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x557f04590e48 <col:36, col:54> col:54 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x557f04591020 <line:555:22>
| `-NonNullAttr 0x557f04591078 <col:63, col:77> 1
|-FunctionDecl 0x557f04591180 <line:556:1, line:557:68> line:556:12 pthread_rwlock_rdlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x557f045910c8 <col:35, col:53> col:53 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x557f04591228 <line:557:22>
| `-NonNullAttr 0x557f04591280 <col:52, col:66> 1
|-FunctionDecl 0x557f04591380 <line:558:1, line:559:65> line:558:12 pthread_rwlock_tryrdlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x557f045912c8 <col:38, col:56> col:56 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x557f04591428 <line:559:19>
| `-NonNullAttr 0x557f04591480 <col:49, col:63> 1
|-FunctionDecl 0x557f045916b8 <line:560:1, line:562:88> line:560:12 pthread_rwlock_timedrdlock 'int (pthread_rwlock_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x557f045914c8 <col:40, col:69> col:69 __rwlock 'pthread_rwlock_t *restrict'
| |-ParmVarDecl 0x557f04591558 <line:561:12, line:562:12> col:12 __abstime 'const struct timespec *restrict'
| |-NoThrowAttr 0x557f04591768 <col:39>
| `-NonNullAttr 0x557f045917c0 <col:69, col:86> 1 2
|-FunctionDecl 0x557f045918c0 <line:563:1, line:564:68> line:563:12 pthread_rwlock_wrlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x557f04591808 <col:35, col:53> col:53 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x557f04591968 <line:564:22>
| `-NonNullAttr 0x557f045919c0 <col:52, col:66> 1
|-FunctionDecl 0x557f04591b28 <line:565:1, line:566:68> line:565:12 pthread_rwlock_trywrlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x557f04591a70 <col:38, col:56> col:56 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x557f04591bd0 <line:566:22>
| `-NonNullAttr 0x557f04591c28 <col:52, col:66> 1
|-FunctionDecl 0x557f04591de8 <line:567:1, line:569:88> line:567:12 pthread_rwlock_timedwrlock 'int (pthread_rwlock_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x557f04591c78 <col:40, col:69> col:69 __rwlock 'pthread_rwlock_t *restrict'
| |-ParmVarDecl 0x557f04591d08 <line:568:12, line:569:12> col:12 __abstime 'const struct timespec *restrict'
| |-NoThrowAttr 0x557f04591e98 <col:39>
| `-NonNullAttr 0x557f04591ef0 <col:69, col:86> 1 2
|-FunctionDecl 0x557f04591ff0 <line:570:1, line:571:68> line:570:12 pthread_rwlock_unlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x557f04591f38 <col:35, col:53> col:53 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x557f04592098 <line:571:22>
| `-NonNullAttr 0x557f045920f0 <col:52, col:66> 1
|-FunctionDecl 0x557f045922d8 <line:572:1, line:573:79> line:572:12 pthread_rwlockattr_init 'int (pthread_rwlockattr_t *)' extern
| |-ParmVarDecl 0x557f045921a0 <col:37, col:59> col:59 __attr 'pthread_rwlockattr_t *'
| |-NoThrowAttr 0x557f04592380 <line:573:22>
| `-NonNullAttr 0x557f045923d8 <col:63, col:77> 1
|-FunctionDecl 0x557f045924e0 <line:574:1, line:575:79> line:574:12 pthread_rwlockattr_destroy 'int (pthread_rwlockattr_t *)' extern
| |-ParmVarDecl 0x557f04592428 <col:40, col:62> col:62 __attr 'pthread_rwlockattr_t *'
| |-NoThrowAttr 0x557f04592588 <line:575:22>
| `-NonNullAttr 0x557f045925e0 <col:63, col:77> 1
|-FunctionDecl 0x557f04592808 <line:576:1, line:579:82> line:576:12 pthread_rwlockattr_getpshared 'int (const pthread_rwlockattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x557f04592628 <col:43, line:577:19> col:19 __attr 'const pthread_rwlockattr_t *restrict'
| |-ParmVarDecl 0x557f045926a8 <line:578:8, col:24> col:24 __pshared 'int *restrict'
| |-NoThrowAttr 0x557f045928b8 <line:579:22>
| `-NonNullAttr 0x557f04592910 <col:63, col:80> 1 2
|-FunctionDecl 0x557f04592b38 <line:580:1, line:582:79> line:580:12 pthread_rwlockattr_setpshared 'int (pthread_rwlockattr_t *, int)' extern
| |-ParmVarDecl 0x557f04592958 <col:43, col:65> col:65 __attr 'pthread_rwlockattr_t *'
| |-ParmVarDecl 0x557f045929d8 <line:581:8, col:12> col:12 __pshared 'int'
| |-NoThrowAttr 0x557f04592be8 <line:582:22>
| `-NonNullAttr 0x557f04592c40 <col:63, col:77> 1
|-FunctionDecl 0x557f04592de8 <line:583:1, line:586:82> line:583:12 pthread_rwlockattr_getkind_np 'int (const pthread_rwlockattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x557f04592c88 <col:43, line:584:19> col:19 __attr 'const pthread_rwlockattr_t *restrict'
| |-ParmVarDecl 0x557f04592d08 <line:585:8, col:24> col:24 __pref 'int *restrict'
| |-NoThrowAttr 0x557f04592e98 <line:586:22>
| `-NonNullAttr 0x557f04592ef0 <col:63, col:80> 1 2
|-FunctionDecl 0x557f04593078 <line:587:1, line:588:93> line:587:12 pthread_rwlockattr_setkind_np 'int (pthread_rwlockattr_t *, int)' extern
| |-ParmVarDecl 0x557f04592f38 <col:43, col:65> col:65 __attr 'pthread_rwlockattr_t *'
| |-ParmVarDecl 0x557f04592fb8 <line:588:8, col:12> col:12 __pref 'int'
| |-NoThrowAttr 0x557f04593128 <col:36>
| `-NonNullAttr 0x557f04593180 <col:77, col:91> 1
|-FunctionDecl 0x557f045934b8 <line:589:1, line:591:79> line:589:12 pthread_cond_init 'int (pthread_cond_t *restrict, const pthread_condattr_t *restrict)' extern
| |-ParmVarDecl 0x557f04593260 <col:31, col:58> col:58 __cond 'pthread_cond_t *restrict'
| |-ParmVarDecl 0x557f04593370 <line:590:10, col:47> col:47 __cond_attr 'const pthread_condattr_t *restrict'
| |-NoThrowAttr 0x557f04593568 <line:591:22>
| `-NonNullAttr 0x557f045935c0 <col:63, col:77> 1
|-FunctionDecl 0x557f04593738 <line:592:1, line:593:79> line:592:12 pthread_cond_destroy 'int (pthread_cond_t *)' extern
| |-ParmVarDecl 0x557f04593608 <col:34, col:50> col:50 __cond 'pthread_cond_t *'
| |-NoThrowAttr 0x557f045937e0 <line:593:22>
| `-NonNullAttr 0x557f04593838 <col:63, col:77> 1
|-FunctionDecl 0x557f04593940 <line:594:1, line:595:68> line:594:12 pthread_cond_signal 'int (pthread_cond_t *)' extern
| |-ParmVarDecl 0x557f04593888 <col:33, col:49> col:49 __cond 'pthread_cond_t *'
| |-NoThrowAttr 0x557f045939e8 <line:595:22>
| `-NonNullAttr 0x557f04593a40 <col:52, col:66> 1
|-FunctionDecl 0x557f04593b58 <line:596:1, line:597:68> line:596:12 pthread_cond_broadcast 'int (pthread_cond_t *)' extern
| |-ParmVarDecl 0x557f04593aa0 <col:36, col:52> col:52 __cond 'pthread_cond_t *'
| |-NoThrowAttr 0x557f04593c00 <line:597:22>
| `-NonNullAttr 0x557f04593c58 <col:52, col:66> 1
|-FunctionDecl 0x557f04593e88 <line:598:1, line:600:41> line:598:12 pthread_cond_wait 'int (pthread_cond_t *restrict, pthread_mutex_t *restrict)' extern
| |-ParmVarDecl 0x557f04593ca8 <col:31, col:58> col:58 __cond 'pthread_cond_t *restrict'
| |-ParmVarDecl 0x557f04593d20 <line:599:10, col:38> col:38 __mutex 'pthread_mutex_t *restrict'
| `-NonNullAttr 0x557f04593f38 <line:600:22, col:39> 1 2
|-FunctionDecl 0x557f04594268 <line:601:1, line:604:44> line:601:12 pthread_cond_timedwait 'int (pthread_cond_t *restrict, pthread_mutex_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x557f04593fb8 <col:36, col:63> col:63 __cond 'pthread_cond_t *restrict'
| |-ParmVarDecl 0x557f04594030 <line:602:8, col:36> col:36 __mutex 'pthread_mutex_t *restrict'
| |-ParmVarDecl 0x557f045940c0 <line:603:8, col:42> col:42 __abstime 'const struct timespec *restrict'
| `-NonNullAttr 0x557f04594320 <line:604:22, col:42> 1 2 3
|-FunctionDecl 0x557f04594538 <line:605:1, line:606:79> line:605:12 pthread_condattr_init 'int (pthread_condattr_t *)' extern
| |-ParmVarDecl 0x557f04594400 <col:35, col:55> col:55 __attr 'pthread_condattr_t *'
| |-NoThrowAttr 0x557f045945e0 <line:606:22>
| `-NonNullAttr 0x557f04594638 <col:63, col:77> 1
|-FunctionDecl 0x557f04594740 <line:607:1, line:608:79> line:607:12 pthread_condattr_destroy 'int (pthread_condattr_t *)' extern
| |-ParmVarDecl 0x557f04594688 <col:38, col:58> col:58 __attr 'pthread_condattr_t *'
| |-NoThrowAttr 0x557f045947e8 <line:608:22>
| `-NonNullAttr 0x557f04594840 <col:63, col:77> 1
|-FunctionDecl 0x557f04594aa0 <line:609:1, line:612:82> line:609:12 pthread_condattr_getpshared 'int (const pthread_condattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x557f04594888 <col:41, line:610:17> col:17 __attr 'const pthread_condattr_t *restrict'
| |-ParmVarDecl 0x557f04594908 <line:611:6, col:22> col:22 __pshared 'int *restrict'
| |-NoThrowAttr 0x557f04594b50 <line:612:22>
| `-NonNullAttr 0x557f04594ba8 <col:63, col:80> 1 2
|-FunctionDecl 0x557f04594db8 <line:613:1, line:614:94> line:613:12 pthread_condattr_setpshared 'int (pthread_condattr_t *, int)' extern
| |-ParmVarDecl 0x557f04594bf8 <col:41, col:61> col:61 __attr 'pthread_condattr_t *'
| |-ParmVarDecl 0x557f04594c78 <line:614:6, col:10> col:10 __pshared 'int'
| |-NoThrowAttr 0x557f04594e68 <col:37>
| `-NonNullAttr 0x557f04594ec0 <col:78, col:92> 1
|-FunctionDecl 0x557f045950d8 <line:615:1, line:618:82> line:615:12 pthread_condattr_getclock 'int (const pthread_condattr_t *restrict, __clockid_t *restrict)' extern
| |-ParmVarDecl 0x557f04594f08 <col:39, line:616:22> col:22 __attr 'const pthread_condattr_t *restrict'
| |-ParmVarDecl 0x557f04594fb0 <line:617:11, col:35> col:35 __clock_id '__clockid_t *restrict'
| |-NoThrowAttr 0x557f04595188 <line:618:22>
| `-NonNullAttr 0x557f045951e0 <col:63, col:80> 1 2
|-FunctionDecl 0x557f045953a8 <line:619:1, line:621:79> line:619:12 pthread_condattr_setclock 'int (pthread_condattr_t *, __clockid_t)' extern
| |-ParmVarDecl 0x557f04595228 <col:39, col:59> col:59 __attr 'pthread_condattr_t *'
| |-ParmVarDecl 0x557f045952a0 <line:620:11, col:23> col:23 __clock_id '__clockid_t':'int'
| |-NoThrowAttr 0x557f04595458 <line:621:22>
| `-NonNullAttr 0x557f045954b0 <col:63, col:77> 1
|-FunctionDecl 0x557f04595758 <line:622:1, line:623:79> line:622:12 pthread_spin_init 'int (pthread_spinlock_t *, int)' extern
| |-ParmVarDecl 0x557f04595590 <col:31, col:51> col:51 __lock 'pthread_spinlock_t *'
| |-ParmVarDecl 0x557f04595610 <col:59, col:63> col:63 __pshared 'int'
| |-NoThrowAttr 0x557f04595808 <line:623:22>
| `-NonNullAttr 0x557f04595860 <col:63, col:77> 1
|-FunctionDecl 0x557f045959d8 <line:624:1, line:625:79> line:624:12 pthread_spin_destroy 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x557f045958a8 <col:34, col:54> col:54 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x557f04595ab0 <line:625:22>
| `-NonNullAttr 0x557f04595b08 <col:63, col:77> 1
|-FunctionDecl 0x557f04595c10 <line:626:1, line:627:68> line:626:12 pthread_spin_lock 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x557f04595b58 <col:31, col:51> col:51 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x557f04595cb8 <line:627:22>
| `-NonNullAttr 0x557f04595d10 <col:52, col:66> 1
|-FunctionDecl 0x557f04595e10 <line:628:1, line:629:68> line:628:12 pthread_spin_trylock 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x557f04595d58 <col:34, col:54> col:54 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x557f04595eb8 <line:629:22>
| `-NonNullAttr 0x557f04595f10 <col:52, col:66> 1
|-FunctionDecl 0x557f04596010 <line:630:1, line:631:68> line:630:12 pthread_spin_unlock 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x557f04595f58 <col:33, col:53> col:53 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x557f045960b8 <line:631:22>
| `-NonNullAttr 0x557f04596110 <col:52, col:66> 1
|-FunctionDecl 0x557f045964e8 <line:632:1, line:635:79> line:632:12 pthread_barrier_init 'int (pthread_barrier_t *restrict, const pthread_barrierattr_t *restrict, unsigned int)' extern
| |-ParmVarDecl 0x557f045961f0 <col:34, col:64> col:64 __barrier 'pthread_barrier_t *restrict'
| |-ParmVarDecl 0x557f04596300 <line:633:6, line:634:6> col:6 __attr 'const pthread_barrierattr_t *restrict'
| |-ParmVarDecl 0x557f04596380 <col:14, col:27> col:27 __count 'unsigned int'
| |-NoThrowAttr 0x557f045965a0 <line:635:22>
| `-NonNullAttr 0x557f045965f8 <col:63, col:77> 1
|-FunctionDecl 0x557f04596778 <line:636:1, line:637:79> line:636:12 pthread_barrier_destroy 'int (pthread_barrier_t *)' extern
| |-ParmVarDecl 0x557f04596648 <col:37, col:56> col:56 __barrier 'pthread_barrier_t *'
| |-NoThrowAttr 0x557f04596820 <line:637:22>
| `-NonNullAttr 0x557f04596878 <col:63, col:77> 1
|-FunctionDecl 0x557f04596980 <line:638:1, line:639:68> line:638:12 pthread_barrier_wait 'int (pthread_barrier_t *)' extern
| |-ParmVarDecl 0x557f045968c8 <col:34, col:53> col:53 __barrier 'pthread_barrier_t *'
| |-NoThrowAttr 0x557f04596a28 <line:639:22>
| `-NonNullAttr 0x557f04596a80 <col:52, col:66> 1
|-FunctionDecl 0x557f04597c88 <line:640:1, line:641:79> line:640:12 pthread_barrierattr_init 'int (pthread_barrierattr_t *)' extern
| |-ParmVarDecl 0x557f04597b50 <col:38, col:61> col:61 __attr 'pthread_barrierattr_t *'
| |-NoThrowAttr 0x557f04597d30 <line:641:22>
| `-NonNullAttr 0x557f04597d88 <col:63, col:77> 1
|-FunctionDecl 0x557f04597e90 <line:642:1, line:643:79> line:642:12 pthread_barrierattr_destroy 'int (pthread_barrierattr_t *)' extern
| |-ParmVarDecl 0x557f04597dd8 <col:41, col:64> col:64 __attr 'pthread_barrierattr_t *'
| |-NoThrowAttr 0x557f04597f38 <line:643:22>
| `-NonNullAttr 0x557f04597f90 <col:63, col:77> 1
|-FunctionDecl 0x557f045981b8 <line:644:1, line:647:82> line:644:12 pthread_barrierattr_getpshared 'int (const pthread_barrierattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x557f04597fd8 <col:44, line:645:20> col:20 __attr 'const pthread_barrierattr_t *restrict'
| |-ParmVarDecl 0x557f04598058 <line:646:9, col:25> col:25 __pshared 'int *restrict'
| |-NoThrowAttr 0x557f04598268 <line:647:22>
| `-NonNullAttr 0x557f045982c0 <col:63, col:80> 1 2
|-FunctionDecl 0x557f045984c8 <line:648:1, line:650:79> line:648:12 pthread_barrierattr_setpshared 'int (pthread_barrierattr_t *, int)' extern
| |-ParmVarDecl 0x557f04598308 <col:44, col:67> col:67 __attr 'pthread_barrierattr_t *'
| |-ParmVarDecl 0x557f04598388 <line:649:9, col:13> col:13 __pshared 'int'
| |-NoThrowAttr 0x557f04598578 <line:650:22>
| `-NonNullAttr 0x557f045985d0 <col:63, col:77> 1
|-FunctionDecl 0x557f04598918 <line:651:1, line:653:79> line:651:12 pthread_key_create 'int (pthread_key_t *, void (*)(void *))' extern
| |-ParmVarDecl 0x557f045986b0 <col:32, col:47> col:47 __key 'pthread_key_t *'
| |-ParmVarDecl 0x557f045987d0 <line:652:11, col:43> col:18 __destr_function 'void (*)(void *)'
| |-NoThrowAttr 0x557f045989c8 <line:653:22>
| `-NonNullAttr 0x557f04598a20 <col:63, col:77> 1
|-FunctionDecl 0x557f04598b88 <line:654:1, col:92> col:12 pthread_key_delete 'int (pthread_key_t)' extern
| |-ParmVarDecl 0x557f04598a68 <col:32, col:46> col:46 __key 'pthread_key_t':'unsigned int'
| `-NoThrowAttr 0x557f04598c30 <col:69>
|-FunctionDecl 0x557f04598da8 <line:655:1, col:95> col:14 pthread_getspecific 'void *(pthread_key_t)' extern
| |-ParmVarDecl 0x557f04598c98 <col:35, col:49> col:49 __key 'pthread_key_t':'unsigned int'
| `-NoThrowAttr 0x557f04598e50 <col:72>
|-FunctionDecl 0x557f04599088 <line:656:1, line:657:67> line:656:12 pthread_setspecific 'int (pthread_key_t, const void *)' extern
| |-ParmVarDecl 0x557f04598eb8 <col:33, col:47> col:47 __key 'pthread_key_t':'unsigned int'
| |-ParmVarDecl 0x557f04598f68 <line:657:5, col:17> col:17 __pointer 'const void *'
| `-NoThrowAttr 0x557f04599138 <col:44>
|-FunctionDecl 0x557f04599358 <line:658:1, line:660:79> line:658:12 pthread_getcpuclockid 'int (pthread_t, __clockid_t *)' extern
| |-ParmVarDecl 0x557f045991a0 <col:35, col:45> col:45 __thread_id 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x557f04599218 <line:659:7, col:20> col:20 __clock_id '__clockid_t *'
| |-NoThrowAttr 0x557f04599408 <line:660:22>
| `-NonNullAttr 0x557f04599460 <col:63, col:77> 2
|-FunctionDecl 0x557f045998a8 <line:661:1, line:663:70> line:661:12 pthread_atfork 'int (void (*)(void), void (*)(void), void (*)(void))' extern
| |-ParmVarDecl 0x557f04599540 <col:28, col:51> col:35 __prepare 'void (*)(void)'
| |-ParmVarDecl 0x557f04599650 <line:662:7, col:29> col:14 __parent 'void (*)(void)'
| |-ParmVarDecl 0x557f04599760 <line:663:7, col:28> col:14 __child 'void (*)(void)'
| `-NoThrowAttr 0x557f04599960 <col:47>
|-FunctionDecl 0x557f04599af0 <line:665:1, col:20> col:8 used P0 'void *(void *)'
| `-ParmVarDecl 0x557f045999d0 <col:11, col:17> col:17 arg 'void *'
|-FunctionDecl 0x557f04599c48 <line:666:1, col:20> col:8 used P1 'void *(void *)'
| `-ParmVarDecl 0x557f04599bb0 <col:11, col:17> col:17 arg 'void *'
|-FunctionDecl 0x557f04599da0 <line:667:1, col:20> col:8 used P2 'void *(void *)'
| `-ParmVarDecl 0x557f04599d08 <col:11, col:17> col:17 arg 'void *'
|-FunctionDecl 0x557f04599ef8 <line:668:1, col:20> col:8 used P3 'void *(void *)'
| `-ParmVarDecl 0x557f04599e60 <col:11, col:17> col:17 arg 'void *'
|-FunctionDecl 0x557f04599fc0 <line:669:1, col:12> col:6 fence 'void ()'
|-FunctionDecl 0x557f0459a080 <line:670:1, col:12> col:6 isync 'void ()'
|-FunctionDecl 0x557f0459a140 <line:671:1, col:14> col:6 lwfence 'void ()'
|-VarDecl 0x557f0459a1f8 <line:672:1, col:5> col:5 used __unbuffered_cnt 'int'
|-VarDecl 0x557f0459a278 prev 0x557f0459a1f8 <line:673:1, col:24> col:5 used __unbuffered_cnt 'int' cinit
| `-IntegerLiteral 0x557f0459a2e0 <col:24> 'int' 0
|-VarDecl 0x557f0459a318 <line:674:1, col:5> col:5 used __unbuffered_p2_EAX 'int'
|-VarDecl 0x557f0459a398 prev 0x557f0459a318 <line:675:1, col:27> col:5 used __unbuffered_p2_EAX 'int' cinit
| `-IntegerLiteral 0x557f0459a400 <col:27> 'int' 0
|-VarDecl 0x557f0459a438 <line:676:1, col:5> col:5 used __unbuffered_p3_EAX 'int'
|-VarDecl 0x557f0459a4b8 prev 0x557f0459a438 <line:677:1, col:27> col:5 used __unbuffered_p3_EAX 'int' cinit
| `-IntegerLiteral 0x557f0459a520 <col:27> 'int' 0
|-VarDecl 0x557f0459a558 <line:678:1, col:5> col:5 used __unbuffered_p3_EBX 'int'
|-VarDecl 0x557f0459a5d8 prev 0x557f0459a558 <line:679:1, col:27> col:5 used __unbuffered_p3_EBX 'int' cinit
| `-IntegerLiteral 0x557f0459a640 <col:27> 'int' 0
|-VarDecl 0x557f0459a678 <line:680:1, col:5> col:5 used a 'int'
|-VarDecl 0x557f0459a6f8 prev 0x557f0459a678 <line:681:1, col:9> col:5 used a 'int' cinit
| `-IntegerLiteral 0x557f0459a760 <col:9> 'int' 0
|-VarDecl 0x557f0459a790 <line:682:1, col:7> col:7 used main$tmp_guard0 '_Bool'
|-VarDecl 0x557f0459a808 <line:683:1, col:7> col:7 used main$tmp_guard1 '_Bool'
|-VarDecl 0x557f0459a888 <line:684:1, col:5> col:5 used x 'int'
|-VarDecl 0x557f0459a908 prev 0x557f0459a888 <line:685:1, col:9> col:5 used x 'int' cinit
| `-IntegerLiteral 0x557f0459a970 <col:9> 'int' 0
|-VarDecl 0x557f0459a9a8 <line:686:1, col:5> col:5 used y 'int'
|-VarDecl 0x557f0459aa28 prev 0x557f0459a9a8 <line:687:1, col:9> col:5 used y 'int' cinit
| `-IntegerLiteral 0x557f0459aa90 <col:9> 'int' 0
|-VarDecl 0x557f0459ab00 <line:688:1, col:5> col:5 used z 'int'
|-VarDecl 0x557f0459ab80 prev 0x557f0459ab00 <line:689:1, col:9> col:5 used z 'int' cinit
| `-IntegerLiteral 0x557f0459abe8 <col:9> 'int' 0
|-VarDecl 0x557f0459ac18 <line:690:1, col:7> col:7 used z$flush_delayed '_Bool'
|-VarDecl 0x557f0459ac98 <line:691:1, col:5> col:5 used z$mem_tmp 'int'
|-VarDecl 0x557f0459ad10 <line:692:1, col:7> col:7 used z$r_buff0_thd0 '_Bool'
|-VarDecl 0x557f0459ad88 <line:693:1, col:7> col:7 used z$r_buff0_thd1 '_Bool'
|-VarDecl 0x557f0459ae00 <line:694:1, col:7> col:7 used z$r_buff0_thd2 '_Bool'
|-VarDecl 0x557f0459ae78 <line:695:1, col:7> col:7 used z$r_buff0_thd3 '_Bool'
|-VarDecl 0x557f0459aef0 <line:696:1, col:7> col:7 used z$r_buff0_thd4 '_Bool'
|-VarDecl 0x557f0459af68 <line:697:1, col:7> col:7 used z$r_buff1_thd0 '_Bool'
|-VarDecl 0x557f0459afe0 <line:698:1, col:7> col:7 used z$r_buff1_thd1 '_Bool'
|-VarDecl 0x557f0459b058 <line:699:1, col:7> col:7 used z$r_buff1_thd2 '_Bool'
|-VarDecl 0x557f0459b0d0 <line:700:1, col:7> col:7 used z$r_buff1_thd3 '_Bool'
|-VarDecl 0x557f0459b148 <line:701:1, col:7> col:7 used z$r_buff1_thd4 '_Bool'
|-VarDecl 0x557f0459b1c0 <line:702:1, col:7> col:7 z$read_delayed '_Bool'
|-VarDecl 0x557f0459b240 <line:703:1, col:6> col:6 z$read_delayed_var 'int *'
|-VarDecl 0x557f0459b2c0 <line:704:1, col:5> col:5 used z$w_buff0 'int'
|-VarDecl 0x557f0459b338 <line:705:1, col:7> col:7 used z$w_buff0_used '_Bool'
|-VarDecl 0x557f0459b3b8 <line:706:1, col:5> col:5 used z$w_buff1 'int'
|-VarDecl 0x557f0459b430 <line:707:1, col:7> col:7 used z$w_buff1_used '_Bool'
|-VarDecl 0x557f0459b4a8 <line:708:1, col:7> col:7 used weak$$choice0 '_Bool'
|-VarDecl 0x557f0459b520 <line:709:1, col:7> col:7 used weak$$choice2 '_Bool'
|-FunctionDecl 0x557f0459b638 prev 0x557f04599af0 <line:710:1, line:724:1> line:710:8 used P0 'void *(void *)'
| |-ParmVarDecl 0x557f0459b5a0 <col:11, col:17> col:17 arg 'void *'
| `-CompoundStmt 0x557f0459bc08 <line:711:1, line:724:1>
|   |-CallExpr 0x557f0459b748 <line:712:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x557f0459b730 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x557f0459b6e0 <col:3> 'void ()' Function 0x557f04540e40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x557f0459b7a8 <line:713:3, col:7> 'int' '='
|   | |-DeclRefExpr 0x557f0459b768 <col:3> 'int' lvalue Var 0x557f0459a6f8 'a' 'int'
|   | `-IntegerLiteral 0x557f0459b788 <col:7> 'int' 1
|   |-CallExpr 0x557f0459b800 <line:714:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x557f0459b7e8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x557f0459b7c8 <col:3> 'void ()' Function 0x557f04540f00 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x557f0459b858 <line:715:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x557f0459b840 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x557f0459b820 <col:3> 'void ()' Function 0x557f04540e40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x557f0459b8b8 <line:716:3, col:7> 'int' '='
|   | |-DeclRefExpr 0x557f0459b878 <col:3> 'int' lvalue Var 0x557f0459a908 'x' 'int'
|   | `-IntegerLiteral 0x557f0459b898 <col:7> 'int' 1
|   |-CallExpr 0x557f0459b910 <line:717:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x557f0459b8f8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x557f0459b8d8 <col:3> 'void ()' Function 0x557f04540f00 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x557f0459b968 <line:718:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x557f0459b950 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x557f0459b930 <col:3> 'void ()' Function 0x557f04540e40 '__VERIFIER_atomic_begin' 'void ()'
|   |-CallExpr 0x557f0459b9c0 <line:719:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x557f0459b9a8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x557f0459b988 <col:3> 'void ()' Function 0x557f04540f00 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x557f0459ba18 <line:720:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x557f0459ba00 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x557f0459b9e0 <col:3> 'void ()' Function 0x557f04540e40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x557f0459bad0 <line:721:3, col:41> 'int' '='
|   | |-DeclRefExpr 0x557f0459ba38 <col:3> 'int' lvalue Var 0x557f0459a278 '__unbuffered_cnt' 'int'
|   | `-BinaryOperator 0x557f0459bab0 <col:22, col:41> 'int' '+'
|   |   |-ImplicitCastExpr 0x557f0459ba98 <col:22> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x557f0459ba58 <col:22> 'int' lvalue Var 0x557f0459a278 '__unbuffered_cnt' 'int'
|   |   `-IntegerLiteral 0x557f0459ba78 <col:41> 'int' 1
|   |-CallExpr 0x557f0459bb48 <line:722:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x557f0459bb30 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x557f0459bb10 <col:3> 'void ()' Function 0x557f04540f00 '__VERIFIER_atomic_end' 'void ()'
|   `-ReturnStmt 0x557f0459bbf8 <line:723:3, col:36>
|     `-CallExpr 0x557f0459bbd8 <col:10, col:36> 'void *'
|       `-ImplicitCastExpr 0x557f0459bbc0 <col:10> 'void *(*)(void)' <FunctionToPointerDecay>
|         `-DeclRefExpr 0x557f0459bb68 <col:10> 'void *(void)' Function 0x557f04540958 '__VERIFIER_nondet_pointer' 'void *(void)'
|-FunctionDecl 0x557f0459bd28 prev 0x557f04599c48 <line:725:1, line:739:1> line:725:8 used P1 'void *(void *)'
| |-ParmVarDecl 0x557f0459bc90 <col:11, col:17> col:17 arg 'void *'
| `-CompoundStmt 0x557f0459c270 <line:726:1, line:739:1>
|   |-CallExpr 0x557f0459be08 <line:727:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x557f0459bdf0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x557f0459bdd0 <col:3> 'void ()' Function 0x557f04540e40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x557f0459be68 <line:728:3, col:7> 'int' '='
|   | |-DeclRefExpr 0x557f0459be28 <col:3> 'int' lvalue Var 0x557f0459a908 'x' 'int'
|   | `-IntegerLiteral 0x557f0459be48 <col:7> 'int' 2
|   |-CallExpr 0x557f0459bec0 <line:729:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x557f0459bea8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x557f0459be88 <col:3> 'void ()' Function 0x557f04540f00 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x557f0459bf18 <line:730:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x557f0459bf00 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x557f0459bee0 <col:3> 'void ()' Function 0x557f04540e40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x557f0459bf78 <line:731:3, col:7> 'int' '='
|   | |-DeclRefExpr 0x557f0459bf38 <col:3> 'int' lvalue Var 0x557f0459aa28 'y' 'int'
|   | `-IntegerLiteral 0x557f0459bf58 <col:7> 'int' 1
|   |-CallExpr 0x557f0459bfd0 <line:732:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x557f0459bfb8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x557f0459bf98 <col:3> 'void ()' Function 0x557f04540f00 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x557f0459c028 <line:733:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x557f0459c010 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x557f0459bff0 <col:3> 'void ()' Function 0x557f04540e40 '__VERIFIER_atomic_begin' 'void ()'
|   |-CallExpr 0x557f0459c080 <line:734:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x557f0459c068 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x557f0459c048 <col:3> 'void ()' Function 0x557f04540f00 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x557f0459c0d8 <line:735:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x557f0459c0c0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x557f0459c0a0 <col:3> 'void ()' Function 0x557f04540e40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x557f0459c190 <line:736:3, col:41> 'int' '='
|   | |-DeclRefExpr 0x557f0459c0f8 <col:3> 'int' lvalue Var 0x557f0459a278 '__unbuffered_cnt' 'int'
|   | `-BinaryOperator 0x557f0459c170 <col:22, col:41> 'int' '+'
|   |   |-ImplicitCastExpr 0x557f0459c158 <col:22> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x557f0459c118 <col:22> 'int' lvalue Var 0x557f0459a278 '__unbuffered_cnt' 'int'
|   |   `-IntegerLiteral 0x557f0459c138 <col:41> 'int' 1
|   |-CallExpr 0x557f0459c1e8 <line:737:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x557f0459c1d0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x557f0459c1b0 <col:3> 'void ()' Function 0x557f04540f00 '__VERIFIER_atomic_end' 'void ()'
|   `-ReturnStmt 0x557f0459c260 <line:738:3, col:36>
|     `-CallExpr 0x557f0459c240 <col:10, col:36> 'void *'
|       `-ImplicitCastExpr 0x557f0459c228 <col:10> 'void *(*)(void)' <FunctionToPointerDecay>
|         `-DeclRefExpr 0x557f0459c208 <col:10> 'void *(void)' Function 0x557f04540958 '__VERIFIER_nondet_pointer' 'void *(void)'
|-FunctionDecl 0x557f0459c390 prev 0x557f04599da0 <line:740:1, line:767:1> line:740:8 used P2 'void *(void *)'
| |-ParmVarDecl 0x557f0459c2f8 <col:11, col:17> col:17 arg 'void *'
| `-CompoundStmt 0x557f0459f2b0 <line:741:1, line:767:1>
|   |-CallExpr 0x557f0459c470 <line:742:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x557f0459c458 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x557f0459c438 <col:3> 'void ()' Function 0x557f04540e40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x557f0459c4d0 <line:743:3, col:7> 'int' '='
|   | |-DeclRefExpr 0x557f0459c490 <col:3> 'int' lvalue Var 0x557f0459aa28 'y' 'int'
|   | `-IntegerLiteral 0x557f0459c4b0 <col:7> 'int' 2
|   |-CallExpr 0x557f0459c528 <line:744:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x557f0459c510 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x557f0459c4f0 <col:3> 'void ()' Function 0x557f04540f00 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x557f0459c580 <line:745:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x557f0459c568 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x557f0459c548 <col:3> 'void ()' Function 0x557f04540e40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x557f0459c630 <line:746:3, col:45> '_Bool' '='
|   | |-DeclRefExpr 0x557f0459c5a0 <col:3> '_Bool' lvalue Var 0x557f0459b4a8 'weak$$choice0' '_Bool'
|   | `-ImplicitCastExpr 0x557f0459c618 <col:19, col:45> '_Bool' <PointerToBoolean>
|   |   `-CallExpr 0x557f0459c5f8 <col:19, col:45> 'void *'
|   |     `-ImplicitCastExpr 0x557f0459c5e0 <col:19> 'void *(*)(void)' <FunctionToPointerDecay>
|   |       `-DeclRefExpr 0x557f0459c5c0 <col:19> 'void *(void)' Function 0x557f04540958 '__VERIFIER_nondet_pointer' 'void *(void)'
|   |-BinaryOperator 0x557f0459c6e0 <line:747:3, col:45> '_Bool' '='
|   | |-DeclRefExpr 0x557f0459c650 <col:3> '_Bool' lvalue Var 0x557f0459b520 'weak$$choice2' '_Bool'
|   | `-ImplicitCastExpr 0x557f0459c6c8 <col:19, col:45> '_Bool' <PointerToBoolean>
|   |   `-CallExpr 0x557f0459c6a8 <col:19, col:45> 'void *'
|   |     `-ImplicitCastExpr 0x557f0459c690 <col:19> 'void *(*)(void)' <FunctionToPointerDecay>
|   |       `-DeclRefExpr 0x557f0459c670 <col:19> 'void *(void)' Function 0x557f04540958 '__VERIFIER_nondet_pointer' 'void *(void)'
|   |-BinaryOperator 0x557f0459c758 <line:748:3, col:21> '_Bool' '='
|   | |-DeclRefExpr 0x557f0459c700 <col:3> '_Bool' lvalue Var 0x557f0459ac18 'z$flush_delayed' '_Bool'
|   | `-ImplicitCastExpr 0x557f0459c740 <col:21> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x557f0459c720 <col:21> '_Bool' lvalue Var 0x557f0459b520 'weak$$choice2' '_Bool'
|   |-BinaryOperator 0x557f0459c7d0 <line:749:3, col:15> 'int' '='
|   | |-DeclRefExpr 0x557f0459c778 <col:3> 'int' lvalue Var 0x557f0459ac98 'z$mem_tmp' 'int'
|   | `-ImplicitCastExpr 0x557f0459c7b8 <col:15> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x557f0459c798 <col:15> 'int' lvalue Var 0x557f0459ab80 'z' 'int'
|   |-BinaryOperator 0x557f0459cc28 <line:750:3, col:162> 'int' '='
|   | |-DeclRefExpr 0x557f0459c7f0 <col:3> 'int' lvalue Var 0x557f0459ab80 'z' 'int'
|   | `-ConditionalOperator 0x557f0459cbf8 <col:7, col:162> 'int'
|   |   |-BinaryOperator 0x557f0459ca00 <col:7, col:84> 'int' '||'
|   |   | |-BinaryOperator 0x557f0459c920 <col:7, col:46> 'int' '||'
|   |   | | |-UnaryOperator 0x557f0459c848 <col:7, col:8> 'int' prefix '!' cannot overflow
|   |   | | | `-ImplicitCastExpr 0x557f0459c830 <col:8> '_Bool' <LValueToRValue>
|   |   | | |   `-DeclRefExpr 0x557f0459c810 <col:8> '_Bool' lvalue Var 0x557f0459b338 'z$w_buff0_used' '_Bool'
|   |   | | `-BinaryOperator 0x557f0459c900 <col:26, col:46> 'int' '&&'
|   |   | |   |-UnaryOperator 0x557f0459c898 <col:26, col:27> 'int' prefix '!' cannot overflow
|   |   | |   | `-ImplicitCastExpr 0x557f0459c880 <col:27> '_Bool' <LValueToRValue>
|   |   | |   |   `-DeclRefExpr 0x557f0459c860 <col:27> '_Bool' lvalue Var 0x557f0459ae78 'z$r_buff0_thd3' '_Bool'
|   |   | |   `-UnaryOperator 0x557f0459c8e8 <col:45, col:46> 'int' prefix '!' cannot overflow
|   |   | |     `-ImplicitCastExpr 0x557f0459c8d0 <col:46> '_Bool' <LValueToRValue>
|   |   | |       `-DeclRefExpr 0x557f0459c8b0 <col:46> '_Bool' lvalue Var 0x557f0459b430 'z$w_buff1_used' '_Bool'
|   |   | `-BinaryOperator 0x557f0459c9e0 <col:64, col:84> 'int' '&&'
|   |   |   |-UnaryOperator 0x557f0459c978 <col:64, col:65> 'int' prefix '!' cannot overflow
|   |   |   | `-ImplicitCastExpr 0x557f0459c960 <col:65> '_Bool' <LValueToRValue>
|   |   |   |   `-DeclRefExpr 0x557f0459c940 <col:65> '_Bool' lvalue Var 0x557f0459ae78 'z$r_buff0_thd3' '_Bool'
|   |   |   `-UnaryOperator 0x557f0459c9c8 <col:83, col:84> 'int' prefix '!' cannot overflow
|   |   |     `-ImplicitCastExpr 0x557f0459c9b0 <col:84> '_Bool' <LValueToRValue>
|   |   |       `-DeclRefExpr 0x557f0459c990 <col:84> '_Bool' lvalue Var 0x557f0459b0d0 'z$r_buff1_thd3' '_Bool'
|   |   |-ImplicitCastExpr 0x557f0459cbe0 <col:101> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x557f0459ca20 <col:101> 'int' lvalue Var 0x557f0459ab80 'z' 'int'
|   |   `-ParenExpr 0x557f0459cbc0 <col:105, col:162> 'int'
|   |     `-ConditionalOperator 0x557f0459cb90 <col:106, col:153> 'int'
|   |       |-BinaryOperator 0x557f0459cae0 <col:106, col:124> 'int' '&&'
|   |       | |-ImplicitCastExpr 0x557f0459ca98 <col:106> 'int' <IntegralCast>
|   |       | | `-ImplicitCastExpr 0x557f0459ca80 <col:106> '_Bool' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x557f0459ca40 <col:106> '_Bool' lvalue Var 0x557f0459b338 'z$w_buff0_used' '_Bool'
|   |       | `-ImplicitCastExpr 0x557f0459cac8 <col:124> 'int' <IntegralCast>
|   |       |   `-ImplicitCastExpr 0x557f0459cab0 <col:124> '_Bool' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x557f0459ca60 <col:124> '_Bool' lvalue Var 0x557f0459ae78 'z$r_buff0_thd3' '_Bool'
|   |       |-ImplicitCastExpr 0x557f0459cb60 <col:141> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x557f0459cb20 <col:141> 'int' lvalue Var 0x557f0459b2c0 'z$w_buff0' 'int'
|   |       `-ImplicitCastExpr 0x557f0459cb78 <col:153> 'int' <LValueToRValue>
|   |         `-DeclRefExpr 0x557f0459cb40 <col:153> 'int' lvalue Var 0x557f0459b3b8 'z$w_buff1' 'int'
|   |-BinaryOperator 0x557f0459d138 <line:751:3, col:208> 'int' '='
|   | |-DeclRefExpr 0x557f0459cc48 <col:3> 'int' lvalue Var 0x557f0459b2c0 'z$w_buff0' 'int'
|   | `-ConditionalOperator 0x557f0459d108 <col:15, col:208> 'int'
|   |   |-ImplicitCastExpr 0x557f0459d0d8 <col:15> 'int' <IntegralCast>
|   |   | `-ImplicitCastExpr 0x557f0459d0c0 <col:15> '_Bool' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x557f0459cc68 <col:15> '_Bool' lvalue Var 0x557f0459b520 'weak$$choice2' '_Bool'
|   |   |-ImplicitCastExpr 0x557f0459d0f0 <col:31> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x557f0459cc88 <col:31> 'int' lvalue Var 0x557f0459b2c0 'z$w_buff0' 'int'
|   |   `-ParenExpr 0x557f0459d0a0 <col:43, col:208> 'int'
|   |     `-ConditionalOperator 0x557f0459d070 <col:44, col:207> 'int'
|   |       |-BinaryOperator 0x557f0459ce98 <col:44, col:121> 'int' '||'
|   |       | |-BinaryOperator 0x557f0459cdb8 <col:44, col:83> 'int' '||'
|   |       | | |-UnaryOperator 0x557f0459cce0 <col:44, col:45> 'int' prefix '!' cannot overflow
|   |       | | | `-ImplicitCastExpr 0x557f0459ccc8 <col:45> '_Bool' <LValueToRValue>
|   |       | | |   `-DeclRefExpr 0x557f0459cca8 <col:45> '_Bool' lvalue Var 0x557f0459b338 'z$w_buff0_used' '_Bool'
|   |       | | `-BinaryOperator 0x557f0459cd98 <col:63, col:83> 'int' '&&'
|   |       | |   |-UnaryOperator 0x557f0459cd30 <col:63, col:64> 'int' prefix '!' cannot overflow
|   |       | |   | `-ImplicitCastExpr 0x557f0459cd18 <col:64> '_Bool' <LValueToRValue>
|   |       | |   |   `-DeclRefExpr 0x557f0459ccf8 <col:64> '_Bool' lvalue Var 0x557f0459ae78 'z$r_buff0_thd3' '_Bool'
|   |       | |   `-UnaryOperator 0x557f0459cd80 <col:82, col:83> 'int' prefix '!' cannot overflow
|   |       | |     `-ImplicitCastExpr 0x557f0459cd68 <col:83> '_Bool' <LValueToRValue>
|   |       | |       `-DeclRefExpr 0x557f0459cd48 <col:83> '_Bool' lvalue Var 0x557f0459b430 'z$w_buff1_used' '_Bool'
|   |       | `-BinaryOperator 0x557f0459ce78 <col:101, col:121> 'int' '&&'
|   |       |   |-UnaryOperator 0x557f0459ce10 <col:101, col:102> 'int' prefix '!' cannot overflow
|   |       |   | `-ImplicitCastExpr 0x557f0459cdf8 <col:102> '_Bool' <LValueToRValue>
|   |       |   |   `-DeclRefExpr 0x557f0459cdd8 <col:102> '_Bool' lvalue Var 0x557f0459ae78 'z$r_buff0_thd3' '_Bool'
|   |       |   `-UnaryOperator 0x557f0459ce60 <col:120, col:121> 'int' prefix '!' cannot overflow
|   |       |     `-ImplicitCastExpr 0x557f0459ce48 <col:121> '_Bool' <LValueToRValue>
|   |       |       `-DeclRefExpr 0x557f0459ce28 <col:121> '_Bool' lvalue Var 0x557f0459b0d0 'z$r_buff1_thd3' '_Bool'
|   |       |-ImplicitCastExpr 0x557f0459d058 <col:138> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x557f0459ceb8 <col:138> 'int' lvalue Var 0x557f0459b2c0 'z$w_buff0' 'int'
|   |       `-ParenExpr 0x557f0459d038 <col:150, col:207> 'int'
|   |         `-ConditionalOperator 0x557f0459d008 <col:151, col:198> 'int'
|   |           |-BinaryOperator 0x557f0459cf78 <col:151, col:169> 'int' '&&'
|   |           | |-ImplicitCastExpr 0x557f0459cf30 <col:151> 'int' <IntegralCast>
|   |           | | `-ImplicitCastExpr 0x557f0459cf18 <col:151> '_Bool' <LValueToRValue>
|   |           | |   `-DeclRefExpr 0x557f0459ced8 <col:151> '_Bool' lvalue Var 0x557f0459b338 'z$w_buff0_used' '_Bool'
|   |           | `-ImplicitCastExpr 0x557f0459cf60 <col:169> 'int' <IntegralCast>
|   |           |   `-ImplicitCastExpr 0x557f0459cf48 <col:169> '_Bool' <LValueToRValue>
|   |           |     `-DeclRefExpr 0x557f0459cef8 <col:169> '_Bool' lvalue Var 0x557f0459ae78 'z$r_buff0_thd3' '_Bool'
|   |           |-ImplicitCastExpr 0x557f0459cfd8 <col:186> 'int' <LValueToRValue>
|   |           | `-DeclRefExpr 0x557f0459cf98 <col:186> 'int' lvalue Var 0x557f0459b2c0 'z$w_buff0' 'int'
|   |           `-ImplicitCastExpr 0x557f0459cff0 <col:198> 'int' <LValueToRValue>
|   |             `-DeclRefExpr 0x557f0459cfb8 <col:198> 'int' lvalue Var 0x557f0459b2c0 'z$w_buff0' 'int'
|   |-BinaryOperator 0x557f0459d648 <line:752:3, col:208> 'int' '='
|   | |-DeclRefExpr 0x557f0459d158 <col:3> 'int' lvalue Var 0x557f0459b3b8 'z$w_buff1' 'int'
|   | `-ConditionalOperator 0x557f0459d618 <col:15, col:208> 'int'
|   |   |-ImplicitCastExpr 0x557f0459d5e8 <col:15> 'int' <IntegralCast>
|   |   | `-ImplicitCastExpr 0x557f0459d5d0 <col:15> '_Bool' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x557f0459d178 <col:15> '_Bool' lvalue Var 0x557f0459b520 'weak$$choice2' '_Bool'
|   |   |-ImplicitCastExpr 0x557f0459d600 <col:31> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x557f0459d198 <col:31> 'int' lvalue Var 0x557f0459b3b8 'z$w_buff1' 'int'
|   |   `-ParenExpr 0x557f0459d5b0 <col:43, col:208> 'int'
|   |     `-ConditionalOperator 0x557f0459d580 <col:44, col:207> 'int'
|   |       |-BinaryOperator 0x557f0459d3a8 <col:44, col:121> 'int' '||'
|   |       | |-BinaryOperator 0x557f0459d2c8 <col:44, col:83> 'int' '||'
|   |       | | |-UnaryOperator 0x557f0459d1f0 <col:44, col:45> 'int' prefix '!' cannot overflow
|   |       | | | `-ImplicitCastExpr 0x557f0459d1d8 <col:45> '_Bool' <LValueToRValue>
|   |       | | |   `-DeclRefExpr 0x557f0459d1b8 <col:45> '_Bool' lvalue Var 0x557f0459b338 'z$w_buff0_used' '_Bool'
|   |       | | `-BinaryOperator 0x557f0459d2a8 <col:63, col:83> 'int' '&&'
|   |       | |   |-UnaryOperator 0x557f0459d240 <col:63, col:64> 'int' prefix '!' cannot overflow
|   |       | |   | `-ImplicitCastExpr 0x557f0459d228 <col:64> '_Bool' <LValueToRValue>
|   |       | |   |   `-DeclRefExpr 0x557f0459d208 <col:64> '_Bool' lvalue Var 0x557f0459ae78 'z$r_buff0_thd3' '_Bool'
|   |       | |   `-UnaryOperator 0x557f0459d290 <col:82, col:83> 'int' prefix '!' cannot overflow
|   |       | |     `-ImplicitCastExpr 0x557f0459d278 <col:83> '_Bool' <LValueToRValue>
|   |       | |       `-DeclRefExpr 0x557f0459d258 <col:83> '_Bool' lvalue Var 0x557f0459b430 'z$w_buff1_used' '_Bool'
|   |       | `-BinaryOperator 0x557f0459d388 <col:101, col:121> 'int' '&&'
|   |       |   |-UnaryOperator 0x557f0459d320 <col:101, col:102> 'int' prefix '!' cannot overflow
|   |       |   | `-ImplicitCastExpr 0x557f0459d308 <col:102> '_Bool' <LValueToRValue>
|   |       |   |   `-DeclRefExpr 0x557f0459d2e8 <col:102> '_Bool' lvalue Var 0x557f0459ae78 'z$r_buff0_thd3' '_Bool'
|   |       |   `-UnaryOperator 0x557f0459d370 <col:120, col:121> 'int' prefix '!' cannot overflow
|   |       |     `-ImplicitCastExpr 0x557f0459d358 <col:121> '_Bool' <LValueToRValue>
|   |       |       `-DeclRefExpr 0x557f0459d338 <col:121> '_Bool' lvalue Var 0x557f0459b0d0 'z$r_buff1_thd3' '_Bool'
|   |       |-ImplicitCastExpr 0x557f0459d568 <col:138> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x557f0459d3c8 <col:138> 'int' lvalue Var 0x557f0459b3b8 'z$w_buff1' 'int'
|   |       `-ParenExpr 0x557f0459d548 <col:150, col:207> 'int'
|   |         `-ConditionalOperator 0x557f0459d518 <col:151, col:198> 'int'
|   |           |-BinaryOperator 0x557f0459d488 <col:151, col:169> 'int' '&&'
|   |           | |-ImplicitCastExpr 0x557f0459d440 <col:151> 'int' <IntegralCast>
|   |           | | `-ImplicitCastExpr 0x557f0459d428 <col:151> '_Bool' <LValueToRValue>
|   |           | |   `-DeclRefExpr 0x557f0459d3e8 <col:151> '_Bool' lvalue Var 0x557f0459b338 'z$w_buff0_used' '_Bool'
|   |           | `-ImplicitCastExpr 0x557f0459d470 <col:169> 'int' <IntegralCast>
|   |           |   `-ImplicitCastExpr 0x557f0459d458 <col:169> '_Bool' <LValueToRValue>
|   |           |     `-DeclRefExpr 0x557f0459d408 <col:169> '_Bool' lvalue Var 0x557f0459ae78 'z$r_buff0_thd3' '_Bool'
|   |           |-ImplicitCastExpr 0x557f0459d4e8 <col:186> 'int' <LValueToRValue>
|   |           | `-DeclRefExpr 0x557f0459d4a8 <col:186> 'int' lvalue Var 0x557f0459b3b8 'z$w_buff1' 'int'
|   |           `-ImplicitCastExpr 0x557f0459d500 <col:198> 'int' <LValueToRValue>
|   |             `-DeclRefExpr 0x557f0459d4c8 <col:198> 'int' lvalue Var 0x557f0459b3b8 'z$w_buff1' 'int'
|   |-BinaryOperator 0x557f0459dc28 <line:753:3, col:227> '_Bool' '='
|   | |-DeclRefExpr 0x557f0459d668 <col:3> '_Bool' lvalue Var 0x557f0459b338 'z$w_buff0_used' '_Bool'
|   | `-ImplicitCastExpr 0x557f0459dc10 <col:20, col:227> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x557f0459dbe0 <col:20, col:227> 'int'
|   |     |-ImplicitCastExpr 0x557f0459db98 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x557f0459db80 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x557f0459d688 <col:20> '_Bool' lvalue Var 0x557f0459b520 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x557f0459dbc8 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x557f0459dbb0 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x557f0459d6a8 <col:36> '_Bool' lvalue Var 0x557f0459b338 'z$w_buff0_used' '_Bool'
|   |     `-ParenExpr 0x557f0459db60 <col:53, col:227> 'int'
|   |       `-ConditionalOperator 0x557f0459db30 <col:54, col:226> 'int'
|   |         |-BinaryOperator 0x557f0459d8b8 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x557f0459d7d8 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x557f0459d700 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x557f0459d6e8 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x557f0459d6c8 <col:55> '_Bool' lvalue Var 0x557f0459b338 'z$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x557f0459d7b8 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x557f0459d750 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x557f0459d738 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x557f0459d718 <col:74> '_Bool' lvalue Var 0x557f0459ae78 'z$r_buff0_thd3' '_Bool'
|   |         | |   `-UnaryOperator 0x557f0459d7a0 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x557f0459d788 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x557f0459d768 <col:93> '_Bool' lvalue Var 0x557f0459b430 'z$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x557f0459d898 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x557f0459d830 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x557f0459d818 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x557f0459d7f8 <col:112> '_Bool' lvalue Var 0x557f0459ae78 'z$r_buff0_thd3' '_Bool'
|   |         |   `-UnaryOperator 0x557f0459d880 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x557f0459d868 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x557f0459d848 <col:131> '_Bool' lvalue Var 0x557f0459b0d0 'z$r_buff1_thd3' '_Bool'
|   |         |-ImplicitCastExpr 0x557f0459dae0 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x557f0459dac8 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x557f0459d8d8 <col:148> '_Bool' lvalue Var 0x557f0459b338 'z$w_buff0_used' '_Bool'
|   |         `-ParenExpr 0x557f0459daa8 <col:165, col:226> 'int'
|   |           `-ConditionalOperator 0x557f0459da78 <col:166, col:212> 'int'
|   |             |-BinaryOperator 0x557f0459d998 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x557f0459d950 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x557f0459d938 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x557f0459d8f8 <col:166> '_Bool' lvalue Var 0x557f0459b338 'z$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x557f0459d980 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x557f0459d968 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x557f0459d918 <col:184> '_Bool' lvalue Var 0x557f0459ae78 'z$r_buff0_thd3' '_Bool'
|   |             |-ImplicitCastExpr 0x557f0459da30 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x557f0459d9e8 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x557f0459d9b8 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x557f0459da60 <col:212> 'int' <IntegralCast>
|   |               `-ImplicitCastExpr 0x557f0459da48 <col:212> '_Bool' <LValueToRValue>
|   |                 `-DeclRefExpr 0x557f0459da10 <col:212> '_Bool' lvalue Var 0x557f0459b338 'z$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x557f0459e1f0 <line:754:3, col:221> '_Bool' '='
|   | |-DeclRefExpr 0x557f0459dc48 <col:3> '_Bool' lvalue Var 0x557f0459b430 'z$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x557f0459e1d8 <col:20, col:221> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x557f0459e1a8 <col:20, col:221> 'int'
|   |     |-ImplicitCastExpr 0x557f0459e160 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x557f0459e148 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x557f0459dc68 <col:20> '_Bool' lvalue Var 0x557f0459b520 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x557f0459e190 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x557f0459e178 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x557f0459dc88 <col:36> '_Bool' lvalue Var 0x557f0459b430 'z$w_buff1_used' '_Bool'
|   |     `-ParenExpr 0x557f0459e128 <col:53, col:221> 'int'
|   |       `-ConditionalOperator 0x557f0459e0f8 <col:54, col:220> 'int'
|   |         |-BinaryOperator 0x557f0459de98 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x557f0459ddb8 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x557f0459dce0 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x557f0459dcc8 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x557f0459dca8 <col:55> '_Bool' lvalue Var 0x557f0459b338 'z$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x557f0459dd98 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x557f0459dd30 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x557f0459dd18 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x557f0459dcf8 <col:74> '_Bool' lvalue Var 0x557f0459ae78 'z$r_buff0_thd3' '_Bool'
|   |         | |   `-UnaryOperator 0x557f0459dd80 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x557f0459dd68 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x557f0459dd48 <col:93> '_Bool' lvalue Var 0x557f0459b430 'z$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x557f0459de78 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x557f0459de10 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x557f0459ddf8 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x557f0459ddd8 <col:112> '_Bool' lvalue Var 0x557f0459ae78 'z$r_buff0_thd3' '_Bool'
|   |         |   `-UnaryOperator 0x557f0459de60 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x557f0459de48 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x557f0459de28 <col:131> '_Bool' lvalue Var 0x557f0459b0d0 'z$r_buff1_thd3' '_Bool'
|   |         |-ImplicitCastExpr 0x557f0459e0e0 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x557f0459e0c8 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x557f0459deb8 <col:148> '_Bool' lvalue Var 0x557f0459b430 'z$w_buff1_used' '_Bool'
|   |         `-ParenExpr 0x557f0459e0a8 <col:165, col:220> 'int'
|   |           `-ConditionalOperator 0x557f0459e078 <col:166, col:219> 'int'
|   |             |-BinaryOperator 0x557f0459df78 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x557f0459df30 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x557f0459df18 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x557f0459ded8 <col:166> '_Bool' lvalue Var 0x557f0459b338 'z$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x557f0459df60 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x557f0459df48 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x557f0459def8 <col:184> '_Bool' lvalue Var 0x557f0459ae78 'z$r_buff0_thd3' '_Bool'
|   |             |-ImplicitCastExpr 0x557f0459e048 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x557f0459dfc8 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x557f0459df98 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x557f0459e060 <col:212, col:219> 'int' <IntegralCast>
|   |               `-CStyleCastExpr 0x557f0459e020 <col:212, col:219> '_Bool' <IntegralToBoolean>
|   |                 `-IntegerLiteral 0x557f0459dff0 <col:219> 'int' 0
|   |-BinaryOperator 0x557f0459e798 <line:755:3, col:227> '_Bool' '='
|   | |-DeclRefExpr 0x557f0459e210 <col:3> '_Bool' lvalue Var 0x557f0459ae78 'z$r_buff0_thd3' '_Bool'
|   | `-ImplicitCastExpr 0x557f0459e780 <col:20, col:227> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x557f0459e750 <col:20, col:227> 'int'
|   |     |-ImplicitCastExpr 0x557f0459e708 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x557f0459e6f0 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x557f0459e230 <col:20> '_Bool' lvalue Var 0x557f0459b520 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x557f0459e738 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x557f0459e720 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x557f0459e250 <col:36> '_Bool' lvalue Var 0x557f0459ae78 'z$r_buff0_thd3' '_Bool'
|   |     `-ParenExpr 0x557f0459e6d0 <col:53, col:227> 'int'
|   |       `-ConditionalOperator 0x557f0459e6a0 <col:54, col:226> 'int'
|   |         |-BinaryOperator 0x557f0459e460 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x557f0459e380 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x557f0459e2a8 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x557f0459e290 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x557f0459e270 <col:55> '_Bool' lvalue Var 0x557f0459b338 'z$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x557f0459e360 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x557f0459e2f8 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x557f0459e2e0 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x557f0459e2c0 <col:74> '_Bool' lvalue Var 0x557f0459ae78 'z$r_buff0_thd3' '_Bool'
|   |         | |   `-UnaryOperator 0x557f0459e348 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x557f0459e330 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x557f0459e310 <col:93> '_Bool' lvalue Var 0x557f0459b430 'z$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x557f0459e440 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x557f0459e3d8 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x557f0459e3c0 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x557f0459e3a0 <col:112> '_Bool' lvalue Var 0x557f0459ae78 'z$r_buff0_thd3' '_Bool'
|   |         |   `-UnaryOperator 0x557f0459e428 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x557f0459e410 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x557f0459e3f0 <col:131> '_Bool' lvalue Var 0x557f0459b0d0 'z$r_buff1_thd3' '_Bool'
|   |         |-ImplicitCastExpr 0x557f0459e688 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x557f0459e670 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x557f0459e480 <col:148> '_Bool' lvalue Var 0x557f0459ae78 'z$r_buff0_thd3' '_Bool'
|   |         `-ParenExpr 0x557f0459e650 <col:165, col:226> 'int'
|   |           `-ConditionalOperator 0x557f0459e620 <col:166, col:212> 'int'
|   |             |-BinaryOperator 0x557f0459e540 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x557f0459e4f8 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x557f0459e4e0 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x557f0459e4a0 <col:166> '_Bool' lvalue Var 0x557f0459b338 'z$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x557f0459e528 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x557f0459e510 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x557f0459e4c0 <col:184> '_Bool' lvalue Var 0x557f0459ae78 'z$r_buff0_thd3' '_Bool'
|   |             |-ImplicitCastExpr 0x557f0459e5d8 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x557f0459e590 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x557f0459e560 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x557f0459e608 <col:212> 'int' <IntegralCast>
|   |               `-ImplicitCastExpr 0x557f0459e5f0 <col:212> '_Bool' <LValueToRValue>
|   |                 `-DeclRefExpr 0x557f0459e5b8 <col:212> '_Bool' lvalue Var 0x557f0459ae78 'z$r_buff0_thd3' '_Bool'
|   |-BinaryOperator 0x557f0459ed78 <line:756:3, col:221> '_Bool' '='
|   | |-DeclRefExpr 0x557f0459e7b8 <col:3> '_Bool' lvalue Var 0x557f0459b0d0 'z$r_buff1_thd3' '_Bool'
|   | `-ImplicitCastExpr 0x557f0459ed60 <col:20, col:221> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x557f0459ed30 <col:20, col:221> 'int'
|   |     |-ImplicitCastExpr 0x557f0459ece8 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x557f0459ecd0 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x557f0459e7d8 <col:20> '_Bool' lvalue Var 0x557f0459b520 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x557f0459ed18 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x557f0459ed00 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x557f0459e7f8 <col:36> '_Bool' lvalue Var 0x557f0459b0d0 'z$r_buff1_thd3' '_Bool'
|   |     `-ParenExpr 0x557f0459ecb0 <col:53, col:221> 'int'
|   |       `-ConditionalOperator 0x557f0459ec80 <col:54, col:220> 'int'
|   |         |-BinaryOperator 0x557f0459ea08 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x557f0459e928 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x557f0459e850 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x557f0459e838 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x557f0459e818 <col:55> '_Bool' lvalue Var 0x557f0459b338 'z$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x557f0459e908 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x557f0459e8a0 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x557f0459e888 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x557f0459e868 <col:74> '_Bool' lvalue Var 0x557f0459ae78 'z$r_buff0_thd3' '_Bool'
|   |         | |   `-UnaryOperator 0x557f0459e8f0 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x557f0459e8d8 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x557f0459e8b8 <col:93> '_Bool' lvalue Var 0x557f0459b430 'z$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x557f0459e9e8 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x557f0459e980 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x557f0459e968 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x557f0459e948 <col:112> '_Bool' lvalue Var 0x557f0459ae78 'z$r_buff0_thd3' '_Bool'
|   |         |   `-UnaryOperator 0x557f0459e9d0 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x557f0459e9b8 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x557f0459e998 <col:131> '_Bool' lvalue Var 0x557f0459b0d0 'z$r_buff1_thd3' '_Bool'
|   |         |-ImplicitCastExpr 0x557f0459ec68 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x557f0459ec50 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x557f0459ea28 <col:148> '_Bool' lvalue Var 0x557f0459b0d0 'z$r_buff1_thd3' '_Bool'
|   |         `-ParenExpr 0x557f0459ec30 <col:165, col:220> 'int'
|   |           `-ConditionalOperator 0x557f0459ec00 <col:166, col:219> 'int'
|   |             |-BinaryOperator 0x557f0459eae8 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x557f0459eaa0 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x557f0459ea88 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x557f0459ea48 <col:166> '_Bool' lvalue Var 0x557f0459b338 'z$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x557f0459ead0 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x557f0459eab8 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x557f0459ea68 <col:184> '_Bool' lvalue Var 0x557f0459ae78 'z$r_buff0_thd3' '_Bool'
|   |             |-ImplicitCastExpr 0x557f0459ebd0 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x557f0459eb50 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x557f0459eb08 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x557f0459ebe8 <col:212, col:219> 'int' <IntegralCast>
|   |               `-CStyleCastExpr 0x557f0459eba8 <col:212, col:219> '_Bool' <IntegralToBoolean>
|   |                 `-IntegerLiteral 0x557f0459eb78 <col:219> 'int' 0
|   |-BinaryOperator 0x557f0459edf0 <line:757:3, col:25> 'int' '='
|   | |-DeclRefExpr 0x557f0459ed98 <col:3> 'int' lvalue Var 0x557f0459a398 '__unbuffered_p2_EAX' 'int'
|   | `-ImplicitCastExpr 0x557f0459edd8 <col:25> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x557f0459edb8 <col:25> 'int' lvalue Var 0x557f0459ab80 'z' 'int'
|   |-BinaryOperator 0x557f0459ef20 <line:758:3, col:37> 'int' '='
|   | |-DeclRefExpr 0x557f0459ee10 <col:3> 'int' lvalue Var 0x557f0459ab80 'z' 'int'
|   | `-ConditionalOperator 0x557f0459eef0 <col:7, col:37> 'int'
|   |   |-ImplicitCastExpr 0x557f0459eea8 <col:7> 'int' <IntegralCast>
|   |   | `-ImplicitCastExpr 0x557f0459ee90 <col:7> '_Bool' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x557f0459ee30 <col:7> '_Bool' lvalue Var 0x557f0459ac18 'z$flush_delayed' '_Bool'
|   |   |-ImplicitCastExpr 0x557f0459eec0 <col:25> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x557f0459ee50 <col:25> 'int' lvalue Var 0x557f0459ac98 'z$mem_tmp' 'int'
|   |   `-ImplicitCastExpr 0x557f0459eed8 <col:37> 'int' <LValueToRValue>
|   |     `-DeclRefExpr 0x557f0459ee70 <col:37> 'int' lvalue Var 0x557f0459ab80 'z' 'int'
|   |-BinaryOperator 0x557f0459efb8 <line:759:3, col:28> '_Bool' '='
|   | |-DeclRefExpr 0x557f0459ef40 <col:3> '_Bool' lvalue Var 0x557f0459ac18 'z$flush_delayed' '_Bool'
|   | `-CStyleCastExpr 0x557f0459ef90 <col:21, col:28> '_Bool' <IntegralToBoolean>
|   |   `-IntegerLiteral 0x557f0459ef60 <col:28> 'int' 0
|   |-CallExpr 0x557f0459f010 <line:760:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x557f0459eff8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x557f0459efd8 <col:3> 'void ()' Function 0x557f04540f00 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x557f0459f068 <line:761:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x557f0459f050 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x557f0459f030 <col:3> 'void ()' Function 0x557f04540e40 '__VERIFIER_atomic_begin' 'void ()'
|   |-CallExpr 0x557f0459f0c0 <line:762:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x557f0459f0a8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x557f0459f088 <col:3> 'void ()' Function 0x557f04540f00 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x557f0459f118 <line:763:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x557f0459f100 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x557f0459f0e0 <col:3> 'void ()' Function 0x557f04540e40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x557f0459f1d0 <line:764:3, col:41> 'int' '='
|   | |-DeclRefExpr 0x557f0459f138 <col:3> 'int' lvalue Var 0x557f0459a278 '__unbuffered_cnt' 'int'
|   | `-BinaryOperator 0x557f0459f1b0 <col:22, col:41> 'int' '+'
|   |   |-ImplicitCastExpr 0x557f0459f198 <col:22> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x557f0459f158 <col:22> 'int' lvalue Var 0x557f0459a278 '__unbuffered_cnt' 'int'
|   |   `-IntegerLiteral 0x557f0459f178 <col:41> 'int' 1
|   |-CallExpr 0x557f0459f228 <line:765:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x557f0459f210 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x557f0459f1f0 <col:3> 'void ()' Function 0x557f04540f00 '__VERIFIER_atomic_end' 'void ()'
|   `-ReturnStmt 0x557f0459f2a0 <line:766:3, col:36>
|     `-CallExpr 0x557f0459f280 <col:10, col:36> 'void *'
|       `-ImplicitCastExpr 0x557f0459f268 <col:10> 'void *(*)(void)' <FunctionToPointerDecay>
|         `-DeclRefExpr 0x557f0459f248 <col:10> 'void *(void)' Function 0x557f04540958 '__VERIFIER_nondet_pointer' 'void *(void)'
|-FunctionDecl 0x557f0459f438 prev 0x557f04599ef8 <line:768:1, line:813:1> line:768:8 used P3 'void *(void *)'
| |-ParmVarDecl 0x557f0459f3a0 <col:11, col:17> col:17 arg 'void *'
| `-CompoundStmt 0x557f045a3748 <line:769:1, line:813:1>
|   |-CallExpr 0x557f0459f518 <line:770:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x557f0459f500 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x557f0459f4e0 <col:3> 'void ()' Function 0x557f04540e40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x557f0459f590 <line:771:3, col:15> 'int' '='
|   | |-DeclRefExpr 0x557f0459f538 <col:3> 'int' lvalue Var 0x557f0459b3b8 'z$w_buff1' 'int'
|   | `-ImplicitCastExpr 0x557f0459f578 <col:15> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x557f0459f558 <col:15> 'int' lvalue Var 0x557f0459b2c0 'z$w_buff0' 'int'
|   |-BinaryOperator 0x557f0459f5f0 <line:772:3, col:15> 'int' '='
|   | |-DeclRefExpr 0x557f0459f5b0 <col:3> 'int' lvalue Var 0x557f0459b2c0 'z$w_buff0' 'int'
|   | `-IntegerLiteral 0x557f0459f5d0 <col:15> 'int' 1
|   |-BinaryOperator 0x557f0459f668 <line:773:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x557f0459f610 <col:3> '_Bool' lvalue Var 0x557f0459b430 'z$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x557f0459f650 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x557f0459f630 <col:20> '_Bool' lvalue Var 0x557f0459b338 'z$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x557f0459f700 <line:774:3, col:27> '_Bool' '='
|   | |-DeclRefExpr 0x557f0459f688 <col:3> '_Bool' lvalue Var 0x557f0459b338 'z$w_buff0_used' '_Bool'
|   | `-CStyleCastExpr 0x557f0459f6d8 <col:20, col:27> '_Bool' <IntegralToBoolean>
|   |   `-IntegerLiteral 0x557f0459f6a8 <col:27> 'int' 1
|   |-CallExpr 0x557f0459f888 <line:775:3, col:56> 'void'
|   | |-ImplicitCastExpr 0x557f0459f870 <col:3> 'void (*)(int)' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x557f0459f720 <col:3> 'void (int)' Function 0x557f04540bc8 '__VERIFIER_assert' 'void (int)'
|   | `-UnaryOperator 0x557f0459f820 <col:21, col:55> 'int' prefix '!' cannot overflow
|   |   `-ParenExpr 0x557f0459f800 <col:22, col:55> 'int'
|   |     `-BinaryOperator 0x557f0459f7e0 <col:23, col:41> 'int' '&&'
|   |       |-ImplicitCastExpr 0x557f0459f798 <col:23> 'int' <IntegralCast>
|   |       | `-ImplicitCastExpr 0x557f0459f780 <col:23> '_Bool' <LValueToRValue>
|   |       |   `-DeclRefExpr 0x557f0459f740 <col:23> '_Bool' lvalue Var 0x557f0459b430 'z$w_buff1_used' '_Bool'
|   |       `-ImplicitCastExpr 0x557f0459f7c8 <col:41> 'int' <IntegralCast>
|   |         `-ImplicitCastExpr 0x557f0459f7b0 <col:41> '_Bool' <LValueToRValue>
|   |           `-DeclRefExpr 0x557f0459f760 <col:41> '_Bool' lvalue Var 0x557f0459b338 'z$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x557f0459f908 <line:776:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x557f0459f8b0 <col:3> '_Bool' lvalue Var 0x557f0459af68 'z$r_buff1_thd0' '_Bool'
|   | `-ImplicitCastExpr 0x557f0459f8f0 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x557f0459f8d0 <col:20> '_Bool' lvalue Var 0x557f0459ad10 'z$r_buff0_thd0' '_Bool'
|   |-BinaryOperator 0x557f0459f980 <line:777:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x557f0459f928 <col:3> '_Bool' lvalue Var 0x557f0459afe0 'z$r_buff1_thd1' '_Bool'
|   | `-ImplicitCastExpr 0x557f0459f968 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x557f0459f948 <col:20> '_Bool' lvalue Var 0x557f0459ad88 'z$r_buff0_thd1' '_Bool'
|   |-BinaryOperator 0x557f0459f9f8 <line:778:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x557f0459f9a0 <col:3> '_Bool' lvalue Var 0x557f0459b058 'z$r_buff1_thd2' '_Bool'
|   | `-ImplicitCastExpr 0x557f0459f9e0 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x557f0459f9c0 <col:20> '_Bool' lvalue Var 0x557f0459ae00 'z$r_buff0_thd2' '_Bool'
|   |-BinaryOperator 0x557f0459fa70 <line:779:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x557f0459fa18 <col:3> '_Bool' lvalue Var 0x557f0459b0d0 'z$r_buff1_thd3' '_Bool'
|   | `-ImplicitCastExpr 0x557f0459fa58 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x557f0459fa38 <col:20> '_Bool' lvalue Var 0x557f0459ae78 'z$r_buff0_thd3' '_Bool'
|   |-BinaryOperator 0x557f0459fae8 <line:780:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x557f0459fa90 <col:3> '_Bool' lvalue Var 0x557f0459b148 'z$r_buff1_thd4' '_Bool'
|   | `-ImplicitCastExpr 0x557f0459fad0 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x557f0459fab0 <col:20> '_Bool' lvalue Var 0x557f0459aef0 'z$r_buff0_thd4' '_Bool'
|   |-BinaryOperator 0x557f0459fba8 <line:781:3, col:27> '_Bool' '='
|   | |-DeclRefExpr 0x557f0459fb08 <col:3> '_Bool' lvalue Var 0x557f0459aef0 'z$r_buff0_thd4' '_Bool'
|   | `-CStyleCastExpr 0x557f0459fb80 <col:20, col:27> '_Bool' <IntegralToBoolean>
|   |   `-IntegerLiteral 0x557f0459fb50 <col:27> 'int' 1
|   |-CallExpr 0x557f0459fc00 <line:782:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x557f0459fbe8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x557f0459fbc8 <col:3> 'void ()' Function 0x557f04540f00 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x557f0459fc58 <line:783:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x557f0459fc40 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x557f0459fc20 <col:3> 'void ()' Function 0x557f04540e40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x557f0459fd08 <line:784:3, col:45> '_Bool' '='
|   | |-DeclRefExpr 0x557f0459fc78 <col:3> '_Bool' lvalue Var 0x557f0459b4a8 'weak$$choice0' '_Bool'
|   | `-ImplicitCastExpr 0x557f0459fcf0 <col:19, col:45> '_Bool' <PointerToBoolean>
|   |   `-CallExpr 0x557f0459fcd0 <col:19, col:45> 'void *'
|   |     `-ImplicitCastExpr 0x557f0459fcb8 <col:19> 'void *(*)(void)' <FunctionToPointerDecay>
|   |       `-DeclRefExpr 0x557f0459fc98 <col:19> 'void *(void)' Function 0x557f04540958 '__VERIFIER_nondet_pointer' 'void *(void)'
|   |-BinaryOperator 0x557f0459fdb8 <line:785:3, col:45> '_Bool' '='
|   | |-DeclRefExpr 0x557f0459fd28 <col:3> '_Bool' lvalue Var 0x557f0459b520 'weak$$choice2' '_Bool'
|   | `-ImplicitCastExpr 0x557f0459fda0 <col:19, col:45> '_Bool' <PointerToBoolean>
|   |   `-CallExpr 0x557f0459fd80 <col:19, col:45> 'void *'
|   |     `-ImplicitCastExpr 0x557f0459fd68 <col:19> 'void *(*)(void)' <FunctionToPointerDecay>
|   |       `-DeclRefExpr 0x557f0459fd48 <col:19> 'void *(void)' Function 0x557f04540958 '__VERIFIER_nondet_pointer' 'void *(void)'
|   |-BinaryOperator 0x557f0459fe30 <line:786:3, col:21> '_Bool' '='
|   | |-DeclRefExpr 0x557f0459fdd8 <col:3> '_Bool' lvalue Var 0x557f0459ac18 'z$flush_delayed' '_Bool'
|   | `-ImplicitCastExpr 0x557f0459fe18 <col:21> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x557f0459fdf8 <col:21> '_Bool' lvalue Var 0x557f0459b520 'weak$$choice2' '_Bool'
|   |-BinaryOperator 0x557f0459fea8 <line:787:3, col:15> 'int' '='
|   | |-DeclRefExpr 0x557f0459fe50 <col:3> 'int' lvalue Var 0x557f0459ac98 'z$mem_tmp' 'int'
|   | `-ImplicitCastExpr 0x557f0459fe90 <col:15> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x557f0459fe70 <col:15> 'int' lvalue Var 0x557f0459ab80 'z' 'int'
|   |-BinaryOperator 0x557f045a02e0 <line:788:3, col:162> 'int' '='
|   | |-DeclRefExpr 0x557f0459fec8 <col:3> 'int' lvalue Var 0x557f0459ab80 'z' 'int'
|   | `-ConditionalOperator 0x557f045a02b0 <col:7, col:162> 'int'
|   |   |-BinaryOperator 0x557f045a00d8 <col:7, col:84> 'int' '||'
|   |   | |-BinaryOperator 0x557f0459fff8 <col:7, col:46> 'int' '||'
|   |   | | |-UnaryOperator 0x557f0459ff20 <col:7, col:8> 'int' prefix '!' cannot overflow
|   |   | | | `-ImplicitCastExpr 0x557f0459ff08 <col:8> '_Bool' <LValueToRValue>
|   |   | | |   `-DeclRefExpr 0x557f0459fee8 <col:8> '_Bool' lvalue Var 0x557f0459b338 'z$w_buff0_used' '_Bool'
|   |   | | `-BinaryOperator 0x557f0459ffd8 <col:26, col:46> 'int' '&&'
|   |   | |   |-UnaryOperator 0x557f0459ff70 <col:26, col:27> 'int' prefix '!' cannot overflow
|   |   | |   | `-ImplicitCastExpr 0x557f0459ff58 <col:27> '_Bool' <LValueToRValue>
|   |   | |   |   `-DeclRefExpr 0x557f0459ff38 <col:27> '_Bool' lvalue Var 0x557f0459aef0 'z$r_buff0_thd4' '_Bool'
|   |   | |   `-UnaryOperator 0x557f0459ffc0 <col:45, col:46> 'int' prefix '!' cannot overflow
|   |   | |     `-ImplicitCastExpr 0x557f0459ffa8 <col:46> '_Bool' <LValueToRValue>
|   |   | |       `-DeclRefExpr 0x557f0459ff88 <col:46> '_Bool' lvalue Var 0x557f0459b430 'z$w_buff1_used' '_Bool'
|   |   | `-BinaryOperator 0x557f045a00b8 <col:64, col:84> 'int' '&&'
|   |   |   |-UnaryOperator 0x557f045a0050 <col:64, col:65> 'int' prefix '!' cannot overflow
|   |   |   | `-ImplicitCastExpr 0x557f045a0038 <col:65> '_Bool' <LValueToRValue>
|   |   |   |   `-DeclRefExpr 0x557f045a0018 <col:65> '_Bool' lvalue Var 0x557f0459aef0 'z$r_buff0_thd4' '_Bool'
|   |   |   `-UnaryOperator 0x557f045a00a0 <col:83, col:84> 'int' prefix '!' cannot overflow
|   |   |     `-ImplicitCastExpr 0x557f045a0088 <col:84> '_Bool' <LValueToRValue>
|   |   |       `-DeclRefExpr 0x557f045a0068 <col:84> '_Bool' lvalue Var 0x557f0459b148 'z$r_buff1_thd4' '_Bool'
|   |   |-ImplicitCastExpr 0x557f045a0298 <col:101> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x557f045a00f8 <col:101> 'int' lvalue Var 0x557f0459ab80 'z' 'int'
|   |   `-ParenExpr 0x557f045a0278 <col:105, col:162> 'int'
|   |     `-ConditionalOperator 0x557f045a0248 <col:106, col:153> 'int'
|   |       |-BinaryOperator 0x557f045a01b8 <col:106, col:124> 'int' '&&'
|   |       | |-ImplicitCastExpr 0x557f045a0170 <col:106> 'int' <IntegralCast>
|   |       | | `-ImplicitCastExpr 0x557f045a0158 <col:106> '_Bool' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x557f045a0118 <col:106> '_Bool' lvalue Var 0x557f0459b338 'z$w_buff0_used' '_Bool'
|   |       | `-ImplicitCastExpr 0x557f045a01a0 <col:124> 'int' <IntegralCast>
|   |       |   `-ImplicitCastExpr 0x557f045a0188 <col:124> '_Bool' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x557f045a0138 <col:124> '_Bool' lvalue Var 0x557f0459aef0 'z$r_buff0_thd4' '_Bool'
|   |       |-ImplicitCastExpr 0x557f045a0218 <col:141> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x557f045a01d8 <col:141> 'int' lvalue Var 0x557f0459b2c0 'z$w_buff0' 'int'
|   |       `-ImplicitCastExpr 0x557f045a0230 <col:153> 'int' <LValueToRValue>
|   |         `-DeclRefExpr 0x557f045a01f8 <col:153> 'int' lvalue Var 0x557f0459b3b8 'z$w_buff1' 'int'
|   |-BinaryOperator 0x557f045a07f0 <line:789:3, col:208> 'int' '='
|   | |-DeclRefExpr 0x557f045a0300 <col:3> 'int' lvalue Var 0x557f0459b2c0 'z$w_buff0' 'int'
|   | `-ConditionalOperator 0x557f045a07c0 <col:15, col:208> 'int'
|   |   |-ImplicitCastExpr 0x557f045a0790 <col:15> 'int' <IntegralCast>
|   |   | `-ImplicitCastExpr 0x557f045a0778 <col:15> '_Bool' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x557f045a0320 <col:15> '_Bool' lvalue Var 0x557f0459b520 'weak$$choice2' '_Bool'
|   |   |-ImplicitCastExpr 0x557f045a07a8 <col:31> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x557f045a0340 <col:31> 'int' lvalue Var 0x557f0459b2c0 'z$w_buff0' 'int'
|   |   `-ParenExpr 0x557f045a0758 <col:43, col:208> 'int'
|   |     `-ConditionalOperator 0x557f045a0728 <col:44, col:207> 'int'
|   |       |-BinaryOperator 0x557f045a0550 <col:44, col:121> 'int' '||'
|   |       | |-BinaryOperator 0x557f045a0470 <col:44, col:83> 'int' '||'
|   |       | | |-UnaryOperator 0x557f045a0398 <col:44, col:45> 'int' prefix '!' cannot overflow
|   |       | | | `-ImplicitCastExpr 0x557f045a0380 <col:45> '_Bool' <LValueToRValue>
|   |       | | |   `-DeclRefExpr 0x557f045a0360 <col:45> '_Bool' lvalue Var 0x557f0459b338 'z$w_buff0_used' '_Bool'
|   |       | | `-BinaryOperator 0x557f045a0450 <col:63, col:83> 'int' '&&'
|   |       | |   |-UnaryOperator 0x557f045a03e8 <col:63, col:64> 'int' prefix '!' cannot overflow
|   |       | |   | `-ImplicitCastExpr 0x557f045a03d0 <col:64> '_Bool' <LValueToRValue>
|   |       | |   |   `-DeclRefExpr 0x557f045a03b0 <col:64> '_Bool' lvalue Var 0x557f0459aef0 'z$r_buff0_thd4' '_Bool'
|   |       | |   `-UnaryOperator 0x557f045a0438 <col:82, col:83> 'int' prefix '!' cannot overflow
|   |       | |     `-ImplicitCastExpr 0x557f045a0420 <col:83> '_Bool' <LValueToRValue>
|   |       | |       `-DeclRefExpr 0x557f045a0400 <col:83> '_Bool' lvalue Var 0x557f0459b430 'z$w_buff1_used' '_Bool'
|   |       | `-BinaryOperator 0x557f045a0530 <col:101, col:121> 'int' '&&'
|   |       |   |-UnaryOperator 0x557f045a04c8 <col:101, col:102> 'int' prefix '!' cannot overflow
|   |       |   | `-ImplicitCastExpr 0x557f045a04b0 <col:102> '_Bool' <LValueToRValue>
|   |       |   |   `-DeclRefExpr 0x557f045a0490 <col:102> '_Bool' lvalue Var 0x557f0459aef0 'z$r_buff0_thd4' '_Bool'
|   |       |   `-UnaryOperator 0x557f045a0518 <col:120, col:121> 'int' prefix '!' cannot overflow
|   |       |     `-ImplicitCastExpr 0x557f045a0500 <col:121> '_Bool' <LValueToRValue>
|   |       |       `-DeclRefExpr 0x557f045a04e0 <col:121> '_Bool' lvalue Var 0x557f0459b148 'z$r_buff1_thd4' '_Bool'
|   |       |-ImplicitCastExpr 0x557f045a0710 <col:138> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x557f045a0570 <col:138> 'int' lvalue Var 0x557f0459b2c0 'z$w_buff0' 'int'
|   |       `-ParenExpr 0x557f045a06f0 <col:150, col:207> 'int'
|   |         `-ConditionalOperator 0x557f045a06c0 <col:151, col:198> 'int'
|   |           |-BinaryOperator 0x557f045a0630 <col:151, col:169> 'int' '&&'
|   |           | |-ImplicitCastExpr 0x557f045a05e8 <col:151> 'int' <IntegralCast>
|   |           | | `-ImplicitCastExpr 0x557f045a05d0 <col:151> '_Bool' <LValueToRValue>
|   |           | |   `-DeclRefExpr 0x557f045a0590 <col:151> '_Bool' lvalue Var 0x557f0459b338 'z$w_buff0_used' '_Bool'
|   |           | `-ImplicitCastExpr 0x557f045a0618 <col:169> 'int' <IntegralCast>
|   |           |   `-ImplicitCastExpr 0x557f045a0600 <col:169> '_Bool' <LValueToRValue>
|   |           |     `-DeclRefExpr 0x557f045a05b0 <col:169> '_Bool' lvalue Var 0x557f0459aef0 'z$r_buff0_thd4' '_Bool'
|   |           |-ImplicitCastExpr 0x557f045a0690 <col:186> 'int' <LValueToRValue>
|   |           | `-DeclRefExpr 0x557f045a0650 <col:186> 'int' lvalue Var 0x557f0459b2c0 'z$w_buff0' 'int'
|   |           `-ImplicitCastExpr 0x557f045a06a8 <col:198> 'int' <LValueToRValue>
|   |             `-DeclRefExpr 0x557f045a0670 <col:198> 'int' lvalue Var 0x557f0459b2c0 'z$w_buff0' 'int'
|   |-BinaryOperator 0x557f045a0d20 <line:790:3, col:208> 'int' '='
|   | |-DeclRefExpr 0x557f045a0810 <col:3> 'int' lvalue Var 0x557f0459b3b8 'z$w_buff1' 'int'
|   | `-ConditionalOperator 0x557f045a0cf0 <col:15, col:208> 'int'
|   |   |-ImplicitCastExpr 0x557f045a0cc0 <col:15> 'int' <IntegralCast>
|   |   | `-ImplicitCastExpr 0x557f045a0ca8 <col:15> '_Bool' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x557f045a0830 <col:15> '_Bool' lvalue Var 0x557f0459b520 'weak$$choice2' '_Bool'
|   |   |-ImplicitCastExpr 0x557f045a0cd8 <col:31> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x557f045a0850 <col:31> 'int' lvalue Var 0x557f0459b3b8 'z$w_buff1' 'int'
|   |   `-ParenExpr 0x557f045a0c88 <col:43, col:208> 'int'
|   |     `-ConditionalOperator 0x557f045a0c58 <col:44, col:207> 'int'
|   |       |-BinaryOperator 0x557f045a0a60 <col:44, col:121> 'int' '||'
|   |       | |-BinaryOperator 0x557f045a0980 <col:44, col:83> 'int' '||'
|   |       | | |-UnaryOperator 0x557f045a08a8 <col:44, col:45> 'int' prefix '!' cannot overflow
|   |       | | | `-ImplicitCastExpr 0x557f045a0890 <col:45> '_Bool' <LValueToRValue>
|   |       | | |   `-DeclRefExpr 0x557f045a0870 <col:45> '_Bool' lvalue Var 0x557f0459b338 'z$w_buff0_used' '_Bool'
|   |       | | `-BinaryOperator 0x557f045a0960 <col:63, col:83> 'int' '&&'
|   |       | |   |-UnaryOperator 0x557f045a08f8 <col:63, col:64> 'int' prefix '!' cannot overflow
|   |       | |   | `-ImplicitCastExpr 0x557f045a08e0 <col:64> '_Bool' <LValueToRValue>
|   |       | |   |   `-DeclRefExpr 0x557f045a08c0 <col:64> '_Bool' lvalue Var 0x557f0459aef0 'z$r_buff0_thd4' '_Bool'
|   |       | |   `-UnaryOperator 0x557f045a0948 <col:82, col:83> 'int' prefix '!' cannot overflow
|   |       | |     `-ImplicitCastExpr 0x557f045a0930 <col:83> '_Bool' <LValueToRValue>
|   |       | |       `-DeclRefExpr 0x557f045a0910 <col:83> '_Bool' lvalue Var 0x557f0459b430 'z$w_buff1_used' '_Bool'
|   |       | `-BinaryOperator 0x557f045a0a40 <col:101, col:121> 'int' '&&'
|   |       |   |-UnaryOperator 0x557f045a09d8 <col:101, col:102> 'int' prefix '!' cannot overflow
|   |       |   | `-ImplicitCastExpr 0x557f045a09c0 <col:102> '_Bool' <LValueToRValue>
|   |       |   |   `-DeclRefExpr 0x557f045a09a0 <col:102> '_Bool' lvalue Var 0x557f0459aef0 'z$r_buff0_thd4' '_Bool'
|   |       |   `-UnaryOperator 0x557f045a0a28 <col:120, col:121> 'int' prefix '!' cannot overflow
|   |       |     `-ImplicitCastExpr 0x557f045a0a10 <col:121> '_Bool' <LValueToRValue>
|   |       |       `-DeclRefExpr 0x557f045a09f0 <col:121> '_Bool' lvalue Var 0x557f0459b148 'z$r_buff1_thd4' '_Bool'
|   |       |-ImplicitCastExpr 0x557f045a0c40 <col:138> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x557f045a0a80 <col:138> 'int' lvalue Var 0x557f0459b3b8 'z$w_buff1' 'int'
|   |       `-ParenExpr 0x557f045a0c20 <col:150, col:207> 'int'
|   |         `-ConditionalOperator 0x557f045a0bf0 <col:151, col:198> 'int'
|   |           |-BinaryOperator 0x557f045a0b60 <col:151, col:169> 'int' '&&'
|   |           | |-ImplicitCastExpr 0x557f045a0af8 <col:151> 'int' <IntegralCast>
|   |           | | `-ImplicitCastExpr 0x557f045a0ae0 <col:151> '_Bool' <LValueToRValue>
|   |           | |   `-DeclRefExpr 0x557f045a0aa0 <col:151> '_Bool' lvalue Var 0x557f0459b338 'z$w_buff0_used' '_Bool'
|   |           | `-ImplicitCastExpr 0x557f045a0b28 <col:169> 'int' <IntegralCast>
|   |           |   `-ImplicitCastExpr 0x557f045a0b10 <col:169> '_Bool' <LValueToRValue>
|   |           |     `-DeclRefExpr 0x557f045a0ac0 <col:169> '_Bool' lvalue Var 0x557f0459aef0 'z$r_buff0_thd4' '_Bool'
|   |           |-ImplicitCastExpr 0x557f045a0bc0 <col:186> 'int' <LValueToRValue>
|   |           | `-DeclRefExpr 0x557f045a0b80 <col:186> 'int' lvalue Var 0x557f0459b3b8 'z$w_buff1' 'int'
|   |           `-ImplicitCastExpr 0x557f045a0bd8 <col:198> 'int' <LValueToRValue>
|   |             `-DeclRefExpr 0x557f045a0ba0 <col:198> 'int' lvalue Var 0x557f0459b3b8 'z$w_buff1' 'int'
|   |-BinaryOperator 0x557f045a12c8 <line:791:3, col:227> '_Bool' '='
|   | |-DeclRefExpr 0x557f045a0d40 <col:3> '_Bool' lvalue Var 0x557f0459b338 'z$w_buff0_used' '_Bool'
|   | `-ImplicitCastExpr 0x557f045a12b0 <col:20, col:227> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x557f045a1280 <col:20, col:227> 'int'
|   |     |-ImplicitCastExpr 0x557f045a1238 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x557f045a1220 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x557f045a0d60 <col:20> '_Bool' lvalue Var 0x557f0459b520 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x557f045a1268 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x557f045a1250 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x557f045a0d80 <col:36> '_Bool' lvalue Var 0x557f0459b338 'z$w_buff0_used' '_Bool'
|   |     `-ParenExpr 0x557f045a1200 <col:53, col:227> 'int'
|   |       `-ConditionalOperator 0x557f045a11d0 <col:54, col:226> 'int'
|   |         |-BinaryOperator 0x557f045a0f90 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x557f045a0eb0 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x557f045a0dd8 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x557f045a0dc0 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x557f045a0da0 <col:55> '_Bool' lvalue Var 0x557f0459b338 'z$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x557f045a0e90 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x557f045a0e28 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x557f045a0e10 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x557f045a0df0 <col:74> '_Bool' lvalue Var 0x557f0459aef0 'z$r_buff0_thd4' '_Bool'
|   |         | |   `-UnaryOperator 0x557f045a0e78 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x557f045a0e60 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x557f045a0e40 <col:93> '_Bool' lvalue Var 0x557f0459b430 'z$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x557f045a0f70 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x557f045a0f08 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x557f045a0ef0 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x557f045a0ed0 <col:112> '_Bool' lvalue Var 0x557f0459aef0 'z$r_buff0_thd4' '_Bool'
|   |         |   `-UnaryOperator 0x557f045a0f58 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x557f045a0f40 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x557f045a0f20 <col:131> '_Bool' lvalue Var 0x557f0459b148 'z$r_buff1_thd4' '_Bool'
|   |         |-ImplicitCastExpr 0x557f045a11b8 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x557f045a11a0 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x557f045a0fb0 <col:148> '_Bool' lvalue Var 0x557f0459b338 'z$w_buff0_used' '_Bool'
|   |         `-ParenExpr 0x557f045a1180 <col:165, col:226> 'int'
|   |           `-ConditionalOperator 0x557f045a1150 <col:166, col:212> 'int'
|   |             |-BinaryOperator 0x557f045a1070 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x557f045a1028 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x557f045a1010 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x557f045a0fd0 <col:166> '_Bool' lvalue Var 0x557f0459b338 'z$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x557f045a1058 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x557f045a1040 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x557f045a0ff0 <col:184> '_Bool' lvalue Var 0x557f0459aef0 'z$r_buff0_thd4' '_Bool'
|   |             |-ImplicitCastExpr 0x557f045a1108 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x557f045a10c0 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x557f045a1090 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x557f045a1138 <col:212> 'int' <IntegralCast>
|   |               `-ImplicitCastExpr 0x557f045a1120 <col:212> '_Bool' <LValueToRValue>
|   |                 `-DeclRefExpr 0x557f045a10e8 <col:212> '_Bool' lvalue Var 0x557f0459b338 'z$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x557f045a1890 <line:792:3, col:221> '_Bool' '='
|   | |-DeclRefExpr 0x557f045a12e8 <col:3> '_Bool' lvalue Var 0x557f0459b430 'z$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x557f045a1878 <col:20, col:221> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x557f045a1848 <col:20, col:221> 'int'
|   |     |-ImplicitCastExpr 0x557f045a1800 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x557f045a17e8 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x557f045a1308 <col:20> '_Bool' lvalue Var 0x557f0459b520 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x557f045a1830 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x557f045a1818 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x557f045a1328 <col:36> '_Bool' lvalue Var 0x557f0459b430 'z$w_buff1_used' '_Bool'
|   |     `-ParenExpr 0x557f045a17c8 <col:53, col:221> 'int'
|   |       `-ConditionalOperator 0x557f045a1798 <col:54, col:220> 'int'
|   |         |-BinaryOperator 0x557f045a1538 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x557f045a1458 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x557f045a1380 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x557f045a1368 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x557f045a1348 <col:55> '_Bool' lvalue Var 0x557f0459b338 'z$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x557f045a1438 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x557f045a13d0 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x557f045a13b8 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x557f045a1398 <col:74> '_Bool' lvalue Var 0x557f0459aef0 'z$r_buff0_thd4' '_Bool'
|   |         | |   `-UnaryOperator 0x557f045a1420 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x557f045a1408 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x557f045a13e8 <col:93> '_Bool' lvalue Var 0x557f0459b430 'z$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x557f045a1518 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x557f045a14b0 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x557f045a1498 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x557f045a1478 <col:112> '_Bool' lvalue Var 0x557f0459aef0 'z$r_buff0_thd4' '_Bool'
|   |         |   `-UnaryOperator 0x557f045a1500 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x557f045a14e8 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x557f045a14c8 <col:131> '_Bool' lvalue Var 0x557f0459b148 'z$r_buff1_thd4' '_Bool'
|   |         |-ImplicitCastExpr 0x557f045a1780 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x557f045a1768 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x557f045a1558 <col:148> '_Bool' lvalue Var 0x557f0459b430 'z$w_buff1_used' '_Bool'
|   |         `-ParenExpr 0x557f045a1748 <col:165, col:220> 'int'
|   |           `-ConditionalOperator 0x557f045a1718 <col:166, col:219> 'int'
|   |             |-BinaryOperator 0x557f045a1618 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x557f045a15d0 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x557f045a15b8 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x557f045a1578 <col:166> '_Bool' lvalue Var 0x557f0459b338 'z$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x557f045a1600 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x557f045a15e8 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x557f045a1598 <col:184> '_Bool' lvalue Var 0x557f0459aef0 'z$r_buff0_thd4' '_Bool'
|   |             |-ImplicitCastExpr 0x557f045a16e8 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x557f045a1668 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x557f045a1638 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x557f045a1700 <col:212, col:219> 'int' <IntegralCast>
|   |               `-CStyleCastExpr 0x557f045a16c0 <col:212, col:219> '_Bool' <IntegralToBoolean>
|   |                 `-IntegerLiteral 0x557f045a1690 <col:219> 'int' 0
|   |-BinaryOperator 0x557f045a1e48 <line:793:3, col:227> '_Bool' '='
|   | |-DeclRefExpr 0x557f045a18b0 <col:3> '_Bool' lvalue Var 0x557f0459aef0 'z$r_buff0_thd4' '_Bool'
|   | `-ImplicitCastExpr 0x557f045a1e30 <col:20, col:227> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x557f045a1e00 <col:20, col:227> 'int'
|   |     |-ImplicitCastExpr 0x557f045a1db8 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x557f045a1da0 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x557f045a18d0 <col:20> '_Bool' lvalue Var 0x557f0459b520 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x557f045a1de8 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x557f045a1dd0 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x557f045a18f0 <col:36> '_Bool' lvalue Var 0x557f0459aef0 'z$r_buff0_thd4' '_Bool'
|   |     `-ParenExpr 0x557f045a1d80 <col:53, col:227> 'int'
|   |       `-ConditionalOperator 0x557f045a1d50 <col:54, col:226> 'int'
|   |         |-BinaryOperator 0x557f045a1b00 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x557f045a1a20 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x557f045a1948 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x557f045a1930 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x557f045a1910 <col:55> '_Bool' lvalue Var 0x557f0459b338 'z$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x557f045a1a00 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x557f045a1998 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x557f045a1980 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x557f045a1960 <col:74> '_Bool' lvalue Var 0x557f0459aef0 'z$r_buff0_thd4' '_Bool'
|   |         | |   `-UnaryOperator 0x557f045a19e8 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x557f045a19d0 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x557f045a19b0 <col:93> '_Bool' lvalue Var 0x557f0459b430 'z$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x557f045a1ae0 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x557f045a1a78 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x557f045a1a60 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x557f045a1a40 <col:112> '_Bool' lvalue Var 0x557f0459aef0 'z$r_buff0_thd4' '_Bool'
|   |         |   `-UnaryOperator 0x557f045a1ac8 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x557f045a1ab0 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x557f045a1a90 <col:131> '_Bool' lvalue Var 0x557f0459b148 'z$r_buff1_thd4' '_Bool'
|   |         |-ImplicitCastExpr 0x557f045a1d38 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x557f045a1d20 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x557f045a1b20 <col:148> '_Bool' lvalue Var 0x557f0459aef0 'z$r_buff0_thd4' '_Bool'
|   |         `-ParenExpr 0x557f045a1d00 <col:165, col:226> 'int'
|   |           `-ConditionalOperator 0x557f045a1cd0 <col:166, col:212> 'int'
|   |             |-BinaryOperator 0x557f045a1bf0 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x557f045a1ba8 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x557f045a1b90 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x557f045a1b40 <col:166> '_Bool' lvalue Var 0x557f0459b338 'z$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x557f045a1bd8 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x557f045a1bc0 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x557f045a1b70 <col:184> '_Bool' lvalue Var 0x557f0459aef0 'z$r_buff0_thd4' '_Bool'
|   |             |-ImplicitCastExpr 0x557f045a1c88 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x557f045a1c40 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x557f045a1c10 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x557f045a1cb8 <col:212> 'int' <IntegralCast>
|   |               `-ImplicitCastExpr 0x557f045a1ca0 <col:212> '_Bool' <LValueToRValue>
|   |                 `-DeclRefExpr 0x557f045a1c68 <col:212> '_Bool' lvalue Var 0x557f0459aef0 'z$r_buff0_thd4' '_Bool'
|   |-BinaryOperator 0x557f045a2410 <line:794:3, col:221> '_Bool' '='
|   | |-DeclRefExpr 0x557f045a1e68 <col:3> '_Bool' lvalue Var 0x557f0459b148 'z$r_buff1_thd4' '_Bool'
|   | `-ImplicitCastExpr 0x557f045a23f8 <col:20, col:221> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x557f045a23c8 <col:20, col:221> 'int'
|   |     |-ImplicitCastExpr 0x557f045a2380 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x557f045a2368 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x557f045a1e88 <col:20> '_Bool' lvalue Var 0x557f0459b520 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x557f045a23b0 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x557f045a2398 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x557f045a1ea8 <col:36> '_Bool' lvalue Var 0x557f0459b148 'z$r_buff1_thd4' '_Bool'
|   |     `-ParenExpr 0x557f045a2348 <col:53, col:221> 'int'
|   |       `-ConditionalOperator 0x557f045a2318 <col:54, col:220> 'int'
|   |         |-BinaryOperator 0x557f045a20b8 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x557f045a1fd8 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x557f045a1f00 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x557f045a1ee8 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x557f045a1ec8 <col:55> '_Bool' lvalue Var 0x557f0459b338 'z$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x557f045a1fb8 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x557f045a1f50 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x557f045a1f38 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x557f045a1f18 <col:74> '_Bool' lvalue Var 0x557f0459aef0 'z$r_buff0_thd4' '_Bool'
|   |         | |   `-UnaryOperator 0x557f045a1fa0 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x557f045a1f88 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x557f045a1f68 <col:93> '_Bool' lvalue Var 0x557f0459b430 'z$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x557f045a2098 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x557f045a2030 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x557f045a2018 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x557f045a1ff8 <col:112> '_Bool' lvalue Var 0x557f0459aef0 'z$r_buff0_thd4' '_Bool'
|   |         |   `-UnaryOperator 0x557f045a2080 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x557f045a2068 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x557f045a2048 <col:131> '_Bool' lvalue Var 0x557f0459b148 'z$r_buff1_thd4' '_Bool'
|   |         |-ImplicitCastExpr 0x557f045a2300 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x557f045a22e8 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x557f045a20d8 <col:148> '_Bool' lvalue Var 0x557f0459b148 'z$r_buff1_thd4' '_Bool'
|   |         `-ParenExpr 0x557f045a22c8 <col:165, col:220> 'int'
|   |           `-ConditionalOperator 0x557f045a2298 <col:166, col:219> 'int'
|   |             |-BinaryOperator 0x557f045a2198 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x557f045a2150 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x557f045a2138 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x557f045a20f8 <col:166> '_Bool' lvalue Var 0x557f0459b338 'z$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x557f045a2180 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x557f045a2168 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x557f045a2118 <col:184> '_Bool' lvalue Var 0x557f0459aef0 'z$r_buff0_thd4' '_Bool'
|   |             |-ImplicitCastExpr 0x557f045a2268 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x557f045a21e8 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x557f045a21b8 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x557f045a2280 <col:212, col:219> 'int' <IntegralCast>
|   |               `-CStyleCastExpr 0x557f045a2240 <col:212, col:219> '_Bool' <IntegralToBoolean>
|   |                 `-IntegerLiteral 0x557f045a2210 <col:219> 'int' 0
|   |-BinaryOperator 0x557f045a2488 <line:795:3, col:25> 'int' '='
|   | |-DeclRefExpr 0x557f045a2430 <col:3> 'int' lvalue Var 0x557f0459a4b8 '__unbuffered_p3_EAX' 'int'
|   | `-ImplicitCastExpr 0x557f045a2470 <col:25> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x557f045a2450 <col:25> 'int' lvalue Var 0x557f0459ab80 'z' 'int'
|   |-BinaryOperator 0x557f045a25b8 <line:796:3, col:37> 'int' '='
|   | |-DeclRefExpr 0x557f045a24a8 <col:3> 'int' lvalue Var 0x557f0459ab80 'z' 'int'
|   | `-ConditionalOperator 0x557f045a2588 <col:7, col:37> 'int'
|   |   |-ImplicitCastExpr 0x557f045a2540 <col:7> 'int' <IntegralCast>
|   |   | `-ImplicitCastExpr 0x557f045a2528 <col:7> '_Bool' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x557f045a24c8 <col:7> '_Bool' lvalue Var 0x557f0459ac18 'z$flush_delayed' '_Bool'
|   |   |-ImplicitCastExpr 0x557f045a2558 <col:25> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x557f045a24e8 <col:25> 'int' lvalue Var 0x557f0459ac98 'z$mem_tmp' 'int'
|   |   `-ImplicitCastExpr 0x557f045a2570 <col:37> 'int' <LValueToRValue>
|   |     `-DeclRefExpr 0x557f045a2508 <col:37> 'int' lvalue Var 0x557f0459ab80 'z' 'int'
|   |-BinaryOperator 0x557f045a2650 <line:797:3, col:28> '_Bool' '='
|   | |-DeclRefExpr 0x557f045a25d8 <col:3> '_Bool' lvalue Var 0x557f0459ac18 'z$flush_delayed' '_Bool'
|   | `-CStyleCastExpr 0x557f045a2628 <col:21, col:28> '_Bool' <IntegralToBoolean>
|   |   `-IntegerLiteral 0x557f045a25f8 <col:28> 'int' 0
|   |-CallExpr 0x557f045a26a8 <line:798:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x557f045a2690 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x557f045a2670 <col:3> 'void ()' Function 0x557f04540f00 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x557f045a2700 <line:799:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x557f045a26e8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x557f045a26c8 <col:3> 'void ()' Function 0x557f04540e40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x557f045a2778 <line:800:3, col:25> 'int' '='
|   | |-DeclRefExpr 0x557f045a2720 <col:3> 'int' lvalue Var 0x557f0459a5d8 '__unbuffered_p3_EBX' 'int'
|   | `-ImplicitCastExpr 0x557f045a2760 <col:25> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x557f045a2740 <col:25> 'int' lvalue Var 0x557f0459a6f8 'a' 'int'
|   |-CallExpr 0x557f045a27d0 <line:801:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x557f045a27b8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x557f045a2798 <col:3> 'void ()' Function 0x557f04540f00 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x557f045a2828 <line:802:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x557f045a2810 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x557f045a27f0 <col:3> 'void ()' Function 0x557f04540e40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x557f045a2b10 <line:803:3, col:103> 'int' '='
|   | |-DeclRefExpr 0x557f045a2848 <col:3> 'int' lvalue Var 0x557f0459ab80 'z' 'int'
|   | `-ConditionalOperator 0x557f045a2ae0 <col:7, col:103> 'int'
|   |   |-BinaryOperator 0x557f045a2908 <col:7, col:25> 'int' '&&'
|   |   | |-ImplicitCastExpr 0x557f045a28c0 <col:7> 'int' <IntegralCast>
|   |   | | `-ImplicitCastExpr 0x557f045a28a8 <col:7> '_Bool' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x557f045a2868 <col:7> '_Bool' lvalue Var 0x557f0459b338 'z$w_buff0_used' '_Bool'
|   |   | `-ImplicitCastExpr 0x557f045a28f0 <col:25> 'int' <IntegralCast>
|   |   |   `-ImplicitCastExpr 0x557f045a28d8 <col:25> '_Bool' <LValueToRValue>
|   |   |     `-DeclRefExpr 0x557f045a2888 <col:25> '_Bool' lvalue Var 0x557f0459aef0 'z$r_buff0_thd4' '_Bool'
|   |   |-ImplicitCastExpr 0x557f045a2ac8 <col:42> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x557f045a2928 <col:42> 'int' lvalue Var 0x557f0459b2c0 'z$w_buff0' 'int'
|   |   `-ParenExpr 0x557f045a2aa8 <col:54, col:103> 'int'
|   |     `-ConditionalOperator 0x557f045a2a78 <col:55, col:102> 'int'
|   |       |-BinaryOperator 0x557f045a29e8 <col:55, col:73> 'int' '&&'
|   |       | |-ImplicitCastExpr 0x557f045a29a0 <col:55> 'int' <IntegralCast>
|   |       | | `-ImplicitCastExpr 0x557f045a2988 <col:55> '_Bool' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x557f045a2948 <col:55> '_Bool' lvalue Var 0x557f0459b430 'z$w_buff1_used' '_Bool'
|   |       | `-ImplicitCastExpr 0x557f045a29d0 <col:73> 'int' <IntegralCast>
|   |       |   `-ImplicitCastExpr 0x557f045a29b8 <col:73> '_Bool' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x557f045a2968 <col:73> '_Bool' lvalue Var 0x557f0459b148 'z$r_buff1_thd4' '_Bool'
|   |       |-ImplicitCastExpr 0x557f045a2a48 <col:90> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x557f045a2a08 <col:90> 'int' lvalue Var 0x557f0459b3b8 'z$w_buff1' 'int'
|   |       `-ImplicitCastExpr 0x557f045a2a60 <col:102> 'int' <LValueToRValue>
|   |         `-DeclRefExpr 0x557f045a2a28 <col:102> 'int' lvalue Var 0x557f0459ab80 'z' 'int'
|   |-BinaryOperator 0x557f045a2d28 <line:804:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x557f045a2b30 <col:3> '_Bool' lvalue Var 0x557f0459b338 'z$w_buff0_used' '_Bool'
|   | `-ImplicitCastExpr 0x557f045a2d10 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x557f045a2ce0 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x557f045a2c00 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x557f045a2bb8 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x557f045a2ba0 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x557f045a2b50 <col:20> '_Bool' lvalue Var 0x557f0459b338 'z$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x557f045a2be8 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x557f045a2bd0 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x557f045a2b80 <col:38> '_Bool' lvalue Var 0x557f0459aef0 'z$r_buff0_thd4' '_Bool'
|   |     |-ImplicitCastExpr 0x557f045a2c98 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x557f045a2c50 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x557f045a2c20 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x557f045a2cc8 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x557f045a2cb0 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x557f045a2c78 <col:66> '_Bool' lvalue Var 0x557f0459b338 'z$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x557f045a3010 <line:805:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x557f045a2d48 <col:3> '_Bool' lvalue Var 0x557f0459b430 'z$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x557f045a2ff8 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x557f045a2fc8 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x557f045a2ee8 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x557f045a2e08 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x557f045a2dc0 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x557f045a2da8 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x557f045a2d68 <col:20> '_Bool' lvalue Var 0x557f0459b338 'z$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x557f045a2df0 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x557f045a2dd8 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x557f045a2d88 <col:38> '_Bool' lvalue Var 0x557f0459aef0 'z$r_buff0_thd4' '_Bool'
|   |     | `-BinaryOperator 0x557f045a2ec8 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x557f045a2e80 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x557f045a2e68 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x557f045a2e28 <col:56> '_Bool' lvalue Var 0x557f0459b430 'z$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x557f045a2eb0 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x557f045a2e98 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x557f045a2e48 <col:74> '_Bool' lvalue Var 0x557f0459b148 'z$r_buff1_thd4' '_Bool'
|   |     |-ImplicitCastExpr 0x557f045a2f80 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x557f045a2f38 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x557f045a2f08 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x557f045a2fb0 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x557f045a2f98 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x557f045a2f60 <col:102> '_Bool' lvalue Var 0x557f0459b430 'z$w_buff1_used' '_Bool'
|   |-BinaryOperator 0x557f045a3218 <line:806:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x557f045a3030 <col:3> '_Bool' lvalue Var 0x557f0459aef0 'z$r_buff0_thd4' '_Bool'
|   | `-ImplicitCastExpr 0x557f045a3200 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x557f045a31d0 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x557f045a30f0 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x557f045a30a8 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x557f045a3090 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x557f045a3050 <col:20> '_Bool' lvalue Var 0x557f0459b338 'z$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x557f045a30d8 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x557f045a30c0 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x557f045a3070 <col:38> '_Bool' lvalue Var 0x557f0459aef0 'z$r_buff0_thd4' '_Bool'
|   |     |-ImplicitCastExpr 0x557f045a3188 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x557f045a3140 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x557f045a3110 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x557f045a31b8 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x557f045a31a0 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x557f045a3168 <col:66> '_Bool' lvalue Var 0x557f0459aef0 'z$r_buff0_thd4' '_Bool'
|   |-BinaryOperator 0x557f045a3500 <line:807:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x557f045a3238 <col:3> '_Bool' lvalue Var 0x557f0459b148 'z$r_buff1_thd4' '_Bool'
|   | `-ImplicitCastExpr 0x557f045a34e8 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x557f045a34b8 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x557f045a33d8 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x557f045a32f8 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x557f045a32b0 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x557f045a3298 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x557f045a3258 <col:20> '_Bool' lvalue Var 0x557f0459b338 'z$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x557f045a32e0 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x557f045a32c8 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x557f045a3278 <col:38> '_Bool' lvalue Var 0x557f0459aef0 'z$r_buff0_thd4' '_Bool'
|   |     | `-BinaryOperator 0x557f045a33b8 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x557f045a3370 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x557f045a3358 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x557f045a3318 <col:56> '_Bool' lvalue Var 0x557f0459b430 'z$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x557f045a33a0 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x557f045a3388 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x557f045a3338 <col:74> '_Bool' lvalue Var 0x557f0459b148 'z$r_buff1_thd4' '_Bool'
|   |     |-ImplicitCastExpr 0x557f045a3470 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x557f045a3428 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x557f045a33f8 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x557f045a34a0 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x557f045a3488 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x557f045a3450 <col:102> '_Bool' lvalue Var 0x557f0459b148 'z$r_buff1_thd4' '_Bool'
|   |-CallExpr 0x557f045a3558 <line:808:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x557f045a3540 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x557f045a3520 <col:3> 'void ()' Function 0x557f04540f00 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x557f045a35b0 <line:809:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x557f045a3598 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x557f045a3578 <col:3> 'void ()' Function 0x557f04540e40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x557f045a3668 <line:810:3, col:41> 'int' '='
|   | |-DeclRefExpr 0x557f045a35d0 <col:3> 'int' lvalue Var 0x557f0459a278 '__unbuffered_cnt' 'int'
|   | `-BinaryOperator 0x557f045a3648 <col:22, col:41> 'int' '+'
|   |   |-ImplicitCastExpr 0x557f045a3630 <col:22> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x557f045a35f0 <col:22> 'int' lvalue Var 0x557f0459a278 '__unbuffered_cnt' 'int'
|   |   `-IntegerLiteral 0x557f045a3610 <col:41> 'int' 1
|   |-CallExpr 0x557f045a36c0 <line:811:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x557f045a36a8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x557f045a3688 <col:3> 'void ()' Function 0x557f04540f00 '__VERIFIER_atomic_end' 'void ()'
|   `-ReturnStmt 0x557f045a3738 <line:812:3, col:36>
|     `-CallExpr 0x557f045a3718 <col:10, col:36> 'void *'
|       `-ImplicitCastExpr 0x557f045a3700 <col:10> 'void *(*)(void)' <FunctionToPointerDecay>
|         `-DeclRefExpr 0x557f045a36e0 <col:10> 'void *(void)' Function 0x557f04540958 '__VERIFIER_nondet_pointer' 'void *(void)'
|-FunctionDecl 0x557f045a38d0 prev 0x557f04599fc0 <line:814:1, line:816:1> line:814:6 fence 'void ()'
| `-CompoundStmt 0x557f045a3970 <line:815:1, line:816:1>
|-FunctionDecl 0x557f045a39a0 prev 0x557f0459a080 <line:817:1, line:819:1> line:817:6 isync 'void ()'
| `-CompoundStmt 0x557f045a3a40 <line:818:1, line:819:1>
|-FunctionDecl 0x557f045a3a70 prev 0x557f0459a140 <line:820:1, line:822:1> line:820:6 lwfence 'void ()'
| `-CompoundStmt 0x557f045a3b10 <line:821:1, line:822:1>
`-FunctionDecl 0x557f045a3b90 <line:823:1, line:849:1> line:823:5 main 'int ()'
  `-CompoundStmt 0x557f045a5bb0 <line:824:1, line:849:1>
    |-DeclStmt 0x557f045a3ca8 <line:825:3, col:17>
    | `-VarDecl 0x557f045a3c40 <col:3, col:13> col:13 used t567 'pthread_t':'unsigned long'
    |-CallExpr 0x557f045a3eb8 <line:826:3, col:53> 'int'
    | |-ImplicitCastExpr 0x557f045a3ea0 <col:3> 'int (*)(pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x557f045a3cc0 <col:3> 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' Function 0x557f04581488 'pthread_create' 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)'
    | |-UnaryOperator 0x557f045a3d00 <col:18, col:19> 'pthread_t *' prefix '&' cannot overflow
    | | `-DeclRefExpr 0x557f045a3ce0 <col:19> 'pthread_t':'unsigned long' lvalue Var 0x557f045a3c40 't567' 'pthread_t':'unsigned long'
    | |-ImplicitCastExpr 0x557f045a3ef8 <col:25, col:35> 'const pthread_attr_t *' <NullToPointer>
    | | `-ParenExpr 0x557f045a3d78 <col:25, col:35> 'void *'
    | |   `-CStyleCastExpr 0x557f045a3d50 <col:26, col:34> 'void *' <NullToPointer>
    | |     `-IntegerLiteral 0x557f045a3d18 <col:34> 'int' 0
    | |-ImplicitCastExpr 0x557f045a3f10 <col:38> 'void *(*)(void *)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x557f045a3d98 <col:38> 'void *(void *)' Function 0x557f0459b638 'P0' 'void *(void *)'
    | `-ParenExpr 0x557f045a3e18 <col:42, col:52> 'void *'
    |   `-CStyleCastExpr 0x557f045a3df0 <col:43, col:51> 'void *' <NullToPointer>
    |     `-IntegerLiteral 0x557f045a3db8 <col:51> 'int' 0
    |-DeclStmt 0x557f045a3fa0 <line:827:3, col:17>
    | `-VarDecl 0x557f045a3f38 <col:3, col:13> col:13 used t568 'pthread_t':'unsigned long'
    |-CallExpr 0x557f045a4148 <line:828:3, col:53> 'int'
    | |-ImplicitCastExpr 0x557f045a4130 <col:3> 'int (*)(pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x557f045a3fb8 <col:3> 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' Function 0x557f04581488 'pthread_create' 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)'
    | |-UnaryOperator 0x557f045a3ff8 <col:18, col:19> 'pthread_t *' prefix '&' cannot overflow
    | | `-DeclRefExpr 0x557f045a3fd8 <col:19> 'pthread_t':'unsigned long' lvalue Var 0x557f045a3f38 't568' 'pthread_t':'unsigned long'
    | |-ImplicitCastExpr 0x557f045a4188 <col:25, col:35> 'const pthread_attr_t *' <NullToPointer>
    | | `-ParenExpr 0x557f045a4070 <col:25, col:35> 'void *'
    | |   `-CStyleCastExpr 0x557f045a4048 <col:26, col:34> 'void *' <NullToPointer>
    | |     `-IntegerLiteral 0x557f045a4010 <col:34> 'int' 0
    | |-ImplicitCastExpr 0x557f045a41a0 <col:38> 'void *(*)(void *)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x557f045a4090 <col:38> 'void *(void *)' Function 0x557f0459bd28 'P1' 'void *(void *)'
    | `-ParenExpr 0x557f045a4110 <col:42, col:52> 'void *'
    |   `-CStyleCastExpr 0x557f045a40e8 <col:43, col:51> 'void *' <NullToPointer>
    |     `-IntegerLiteral 0x557f045a40b0 <col:51> 'int' 0
    |-DeclStmt 0x557f045a4230 <line:829:3, col:17>
    | `-VarDecl 0x557f045a41c8 <col:3, col:13> col:13 used t569 'pthread_t':'unsigned long'
    |-CallExpr 0x557f045a43d8 <line:830:3, col:53> 'int'
    | |-ImplicitCastExpr 0x557f045a43c0 <col:3> 'int (*)(pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x557f045a4248 <col:3> 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' Function 0x557f04581488 'pthread_create' 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)'
    | |-UnaryOperator 0x557f045a4288 <col:18, col:19> 'pthread_t *' prefix '&' cannot overflow
    | | `-DeclRefExpr 0x557f045a4268 <col:19> 'pthread_t':'unsigned long' lvalue Var 0x557f045a41c8 't569' 'pthread_t':'unsigned long'
    | |-ImplicitCastExpr 0x557f045a4418 <col:25, col:35> 'const pthread_attr_t *' <NullToPointer>
    | | `-ParenExpr 0x557f045a4300 <col:25, col:35> 'void *'
    | |   `-CStyleCastExpr 0x557f045a42d8 <col:26, col:34> 'void *' <NullToPointer>
    | |     `-IntegerLiteral 0x557f045a42a0 <col:34> 'int' 0
    | |-ImplicitCastExpr 0x557f045a4430 <col:38> 'void *(*)(void *)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x557f045a4320 <col:38> 'void *(void *)' Function 0x557f0459c390 'P2' 'void *(void *)'
    | `-ParenExpr 0x557f045a43a0 <col:42, col:52> 'void *'
    |   `-CStyleCastExpr 0x557f045a4378 <col:43, col:51> 'void *' <NullToPointer>
    |     `-IntegerLiteral 0x557f045a4340 <col:51> 'int' 0
    |-DeclStmt 0x557f045a44c0 <line:831:3, col:17>
    | `-VarDecl 0x557f045a4458 <col:3, col:13> col:13 used t570 'pthread_t':'unsigned long'
    |-CallExpr 0x557f045a4668 <line:832:3, col:53> 'int'
    | |-ImplicitCastExpr 0x557f045a4650 <col:3> 'int (*)(pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x557f045a44d8 <col:3> 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' Function 0x557f04581488 'pthread_create' 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)'
    | |-UnaryOperator 0x557f045a4518 <col:18, col:19> 'pthread_t *' prefix '&' cannot overflow
    | | `-DeclRefExpr 0x557f045a44f8 <col:19> 'pthread_t':'unsigned long' lvalue Var 0x557f045a4458 't570' 'pthread_t':'unsigned long'
    | |-ImplicitCastExpr 0x557f045a46a8 <col:25, col:35> 'const pthread_attr_t *' <NullToPointer>
    | | `-ParenExpr 0x557f045a4590 <col:25, col:35> 'void *'
    | |   `-CStyleCastExpr 0x557f045a4568 <col:26, col:34> 'void *' <NullToPointer>
    | |     `-IntegerLiteral 0x557f045a4530 <col:34> 'int' 0
    | |-ImplicitCastExpr 0x557f045a46c0 <col:38> 'void *(*)(void *)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x557f045a45b0 <col:38> 'void *(void *)' Function 0x557f0459f438 'P3' 'void *(void *)'
    | `-ParenExpr 0x557f045a4630 <col:42, col:52> 'void *'
    |   `-CStyleCastExpr 0x557f045a4608 <col:43, col:51> 'void *' <NullToPointer>
    |     `-IntegerLiteral 0x557f045a45d0 <col:51> 'int' 0
    |-CallExpr 0x557f045a4710 <line:833:3, col:27> 'void'
    | `-ImplicitCastExpr 0x557f045a46f8 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x557f045a46d8 <col:3> 'void ()' Function 0x557f04540e40 '__VERIFIER_atomic_begin' 'void ()'
    |-BinaryOperator 0x557f045a47e0 <line:834:3, col:41> '_Bool' '='
    | |-DeclRefExpr 0x557f045a4730 <col:3> '_Bool' lvalue Var 0x557f0459a790 'main$tmp_guard0' '_Bool'
    | `-ImplicitCastExpr 0x557f045a47c8 <col:21, col:41> '_Bool' <IntegralToBoolean>
    |   `-BinaryOperator 0x557f045a47a8 <col:21, col:41> 'int' '=='
    |     |-ImplicitCastExpr 0x557f045a4790 <col:21> 'int' <LValueToRValue>
    |     | `-DeclRefExpr 0x557f045a4750 <col:21> 'int' lvalue Var 0x557f0459a278 '__unbuffered_cnt' 'int'
    |     `-IntegerLiteral 0x557f045a4770 <col:41> 'int' 4
    |-CallExpr 0x557f045a4838 <line:835:3, col:25> 'void'
    | `-ImplicitCastExpr 0x557f045a4820 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x557f045a4800 <col:3> 'void ()' Function 0x557f04540f00 '__VERIFIER_atomic_end' 'void ()'
    |-CallExpr 0x557f045a48b0 <line:836:3, col:36> 'void'
    | |-ImplicitCastExpr 0x557f045a4898 <col:3> 'void (*)(int)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x557f045a4858 <col:3> 'void (int)' Function 0x557f04540790 '__VERIFIER_assume' 'void (int)'
    | `-ImplicitCastExpr 0x557f045a48f0 <col:21> 'int' <IntegralCast>
    |   `-ImplicitCastExpr 0x557f045a48d8 <col:21> '_Bool' <LValueToRValue>
    |     `-DeclRefExpr 0x557f045a4878 <col:21> '_Bool' lvalue Var 0x557f0459a790 'main$tmp_guard0' '_Bool'
    |-CallExpr 0x557f045a4940 <line:837:3, col:27> 'void'
    | `-ImplicitCastExpr 0x557f045a4928 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x557f045a4908 <col:3> 'void ()' Function 0x557f04540e40 '__VERIFIER_atomic_begin' 'void ()'
    |-BinaryOperator 0x557f045a4c38 <line:838:3, col:103> 'int' '='
    | |-DeclRefExpr 0x557f045a4960 <col:3> 'int' lvalue Var 0x557f0459ab80 'z' 'int'
    | `-ConditionalOperator 0x557f045a4c08 <col:7, col:103> 'int'
    |   |-BinaryOperator 0x557f045a4a20 <col:7, col:25> 'int' '&&'
    |   | |-ImplicitCastExpr 0x557f045a49d8 <col:7> 'int' <IntegralCast>
    |   | | `-ImplicitCastExpr 0x557f045a49c0 <col:7> '_Bool' <LValueToRValue>
    |   | |   `-DeclRefExpr 0x557f045a4980 <col:7> '_Bool' lvalue Var 0x557f0459b338 'z$w_buff0_used' '_Bool'
    |   | `-ImplicitCastExpr 0x557f045a4a08 <col:25> 'int' <IntegralCast>
    |   |   `-ImplicitCastExpr 0x557f045a49f0 <col:25> '_Bool' <LValueToRValue>
    |   |     `-DeclRefExpr 0x557f045a49a0 <col:25> '_Bool' lvalue Var 0x557f0459ad10 'z$r_buff0_thd0' '_Bool'
    |   |-ImplicitCastExpr 0x557f045a4bf0 <col:42> 'int' <LValueToRValue>
    |   | `-DeclRefExpr 0x557f045a4a40 <col:42> 'int' lvalue Var 0x557f0459b2c0 'z$w_buff0' 'int'
    |   `-ParenExpr 0x557f045a4bd0 <col:54, col:103> 'int'
    |     `-ConditionalOperator 0x557f045a4ba0 <col:55, col:102> 'int'
    |       |-BinaryOperator 0x557f045a4b00 <col:55, col:73> 'int' '&&'
    |       | |-ImplicitCastExpr 0x557f045a4ab8 <col:55> 'int' <IntegralCast>
    |       | | `-ImplicitCastExpr 0x557f045a4aa0 <col:55> '_Bool' <LValueToRValue>
    |       | |   `-DeclRefExpr 0x557f045a4a60 <col:55> '_Bool' lvalue Var 0x557f0459b430 'z$w_buff1_used' '_Bool'
    |       | `-ImplicitCastExpr 0x557f045a4ae8 <col:73> 'int' <IntegralCast>
    |       |   `-ImplicitCastExpr 0x557f045a4ad0 <col:73> '_Bool' <LValueToRValue>
    |       |     `-DeclRefExpr 0x557f045a4a80 <col:73> '_Bool' lvalue Var 0x557f0459af68 'z$r_buff1_thd0' '_Bool'
    |       |-ImplicitCastExpr 0x557f045a4b60 <col:90> 'int' <LValueToRValue>
    |       | `-DeclRefExpr 0x557f045a4b20 <col:90> 'int' lvalue Var 0x557f0459b3b8 'z$w_buff1' 'int'
    |       `-ImplicitCastExpr 0x557f045a4b78 <col:102> 'int' <LValueToRValue>
    |         `-DeclRefExpr 0x557f045a4b40 <col:102> 'int' lvalue Var 0x557f0459ab80 'z' 'int'
    |-BinaryOperator 0x557f045a4e40 <line:839:3, col:66> '_Bool' '='
    | |-DeclRefExpr 0x557f045a4c58 <col:3> '_Bool' lvalue Var 0x557f0459b338 'z$w_buff0_used' '_Bool'
    | `-ImplicitCastExpr 0x557f045a4e28 <col:20, col:66> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x557f045a4df8 <col:20, col:66> 'int'
    |     |-BinaryOperator 0x557f045a4d18 <col:20, col:38> 'int' '&&'
    |     | |-ImplicitCastExpr 0x557f045a4cd0 <col:20> 'int' <IntegralCast>
    |     | | `-ImplicitCastExpr 0x557f045a4cb8 <col:20> '_Bool' <LValueToRValue>
    |     | |   `-DeclRefExpr 0x557f045a4c78 <col:20> '_Bool' lvalue Var 0x557f0459b338 'z$w_buff0_used' '_Bool'
    |     | `-ImplicitCastExpr 0x557f045a4d00 <col:38> 'int' <IntegralCast>
    |     |   `-ImplicitCastExpr 0x557f045a4ce8 <col:38> '_Bool' <LValueToRValue>
    |     |     `-DeclRefExpr 0x557f045a4c98 <col:38> '_Bool' lvalue Var 0x557f0459ad10 'z$r_buff0_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x557f045a4db0 <col:55, col:62> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x557f045a4d68 <col:55, col:62> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x557f045a4d38 <col:62> 'int' 0
    |     `-ImplicitCastExpr 0x557f045a4de0 <col:66> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x557f045a4dc8 <col:66> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x557f045a4d90 <col:66> '_Bool' lvalue Var 0x557f0459b338 'z$w_buff0_used' '_Bool'
    |-BinaryOperator 0x557f045a5128 <line:840:3, col:102> '_Bool' '='
    | |-DeclRefExpr 0x557f045a4e60 <col:3> '_Bool' lvalue Var 0x557f0459b430 'z$w_buff1_used' '_Bool'
    | `-ImplicitCastExpr 0x557f045a5110 <col:20, col:102> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x557f045a50e0 <col:20, col:102> 'int'
    |     |-BinaryOperator 0x557f045a5000 <col:20, col:74> 'int' '||'
    |     | |-BinaryOperator 0x557f045a4f20 <col:20, col:38> 'int' '&&'
    |     | | |-ImplicitCastExpr 0x557f045a4ed8 <col:20> 'int' <IntegralCast>
    |     | | | `-ImplicitCastExpr 0x557f045a4ec0 <col:20> '_Bool' <LValueToRValue>
    |     | | |   `-DeclRefExpr 0x557f045a4e80 <col:20> '_Bool' lvalue Var 0x557f0459b338 'z$w_buff0_used' '_Bool'
    |     | | `-ImplicitCastExpr 0x557f045a4f08 <col:38> 'int' <IntegralCast>
    |     | |   `-ImplicitCastExpr 0x557f045a4ef0 <col:38> '_Bool' <LValueToRValue>
    |     | |     `-DeclRefExpr 0x557f045a4ea0 <col:38> '_Bool' lvalue Var 0x557f0459ad10 'z$r_buff0_thd0' '_Bool'
    |     | `-BinaryOperator 0x557f045a4fe0 <col:56, col:74> 'int' '&&'
    |     |   |-ImplicitCastExpr 0x557f045a4f98 <col:56> 'int' <IntegralCast>
    |     |   | `-ImplicitCastExpr 0x557f045a4f80 <col:56> '_Bool' <LValueToRValue>
    |     |   |   `-DeclRefExpr 0x557f045a4f40 <col:56> '_Bool' lvalue Var 0x557f0459b430 'z$w_buff1_used' '_Bool'
    |     |   `-ImplicitCastExpr 0x557f045a4fc8 <col:74> 'int' <IntegralCast>
    |     |     `-ImplicitCastExpr 0x557f045a4fb0 <col:74> '_Bool' <LValueToRValue>
    |     |       `-DeclRefExpr 0x557f045a4f60 <col:74> '_Bool' lvalue Var 0x557f0459af68 'z$r_buff1_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x557f045a5098 <col:91, col:98> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x557f045a5050 <col:91, col:98> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x557f045a5020 <col:98> 'int' 0
    |     `-ImplicitCastExpr 0x557f045a50c8 <col:102> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x557f045a50b0 <col:102> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x557f045a5078 <col:102> '_Bool' lvalue Var 0x557f0459b430 'z$w_buff1_used' '_Bool'
    |-BinaryOperator 0x557f045a5330 <line:841:3, col:66> '_Bool' '='
    | |-DeclRefExpr 0x557f045a5148 <col:3> '_Bool' lvalue Var 0x557f0459ad10 'z$r_buff0_thd0' '_Bool'
    | `-ImplicitCastExpr 0x557f045a5318 <col:20, col:66> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x557f045a52e8 <col:20, col:66> 'int'
    |     |-BinaryOperator 0x557f045a5208 <col:20, col:38> 'int' '&&'
    |     | |-ImplicitCastExpr 0x557f045a51c0 <col:20> 'int' <IntegralCast>
    |     | | `-ImplicitCastExpr 0x557f045a51a8 <col:20> '_Bool' <LValueToRValue>
    |     | |   `-DeclRefExpr 0x557f045a5168 <col:20> '_Bool' lvalue Var 0x557f0459b338 'z$w_buff0_used' '_Bool'
    |     | `-ImplicitCastExpr 0x557f045a51f0 <col:38> 'int' <IntegralCast>
    |     |   `-ImplicitCastExpr 0x557f045a51d8 <col:38> '_Bool' <LValueToRValue>
    |     |     `-DeclRefExpr 0x557f045a5188 <col:38> '_Bool' lvalue Var 0x557f0459ad10 'z$r_buff0_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x557f045a52a0 <col:55, col:62> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x557f045a5258 <col:55, col:62> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x557f045a5228 <col:62> 'int' 0
    |     `-ImplicitCastExpr 0x557f045a52d0 <col:66> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x557f045a52b8 <col:66> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x557f045a5280 <col:66> '_Bool' lvalue Var 0x557f0459ad10 'z$r_buff0_thd0' '_Bool'
    |-BinaryOperator 0x557f045a5618 <line:842:3, col:102> '_Bool' '='
    | |-DeclRefExpr 0x557f045a5350 <col:3> '_Bool' lvalue Var 0x557f0459af68 'z$r_buff1_thd0' '_Bool'
    | `-ImplicitCastExpr 0x557f045a5600 <col:20, col:102> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x557f045a55d0 <col:20, col:102> 'int'
    |     |-BinaryOperator 0x557f045a54f0 <col:20, col:74> 'int' '||'
    |     | |-BinaryOperator 0x557f045a5410 <col:20, col:38> 'int' '&&'
    |     | | |-ImplicitCastExpr 0x557f045a53c8 <col:20> 'int' <IntegralCast>
    |     | | | `-ImplicitCastExpr 0x557f045a53b0 <col:20> '_Bool' <LValueToRValue>
    |     | | |   `-DeclRefExpr 0x557f045a5370 <col:20> '_Bool' lvalue Var 0x557f0459b338 'z$w_buff0_used' '_Bool'
    |     | | `-ImplicitCastExpr 0x557f045a53f8 <col:38> 'int' <IntegralCast>
    |     | |   `-ImplicitCastExpr 0x557f045a53e0 <col:38> '_Bool' <LValueToRValue>
    |     | |     `-DeclRefExpr 0x557f045a5390 <col:38> '_Bool' lvalue Var 0x557f0459ad10 'z$r_buff0_thd0' '_Bool'
    |     | `-BinaryOperator 0x557f045a54d0 <col:56, col:74> 'int' '&&'
    |     |   |-ImplicitCastExpr 0x557f045a5488 <col:56> 'int' <IntegralCast>
    |     |   | `-ImplicitCastExpr 0x557f045a5470 <col:56> '_Bool' <LValueToRValue>
    |     |   |   `-DeclRefExpr 0x557f045a5430 <col:56> '_Bool' lvalue Var 0x557f0459b430 'z$w_buff1_used' '_Bool'
    |     |   `-ImplicitCastExpr 0x557f045a54b8 <col:74> 'int' <IntegralCast>
    |     |     `-ImplicitCastExpr 0x557f045a54a0 <col:74> '_Bool' <LValueToRValue>
    |     |       `-DeclRefExpr 0x557f045a5450 <col:74> '_Bool' lvalue Var 0x557f0459af68 'z$r_buff1_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x557f045a5588 <col:91, col:98> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x557f045a5540 <col:91, col:98> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x557f045a5510 <col:98> 'int' 0
    |     `-ImplicitCastExpr 0x557f045a55b8 <col:102> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x557f045a55a0 <col:102> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x557f045a5568 <col:102> '_Bool' lvalue Var 0x557f0459af68 'z$r_buff1_thd0' '_Bool'
    |-CallExpr 0x557f045a5670 <line:843:3, col:25> 'void'
    | `-ImplicitCastExpr 0x557f045a5658 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x557f045a5638 <col:3> 'void ()' Function 0x557f04540f00 '__VERIFIER_atomic_end' 'void ()'
    |-CallExpr 0x557f045a56c8 <line:844:3, col:27> 'void'
    | `-ImplicitCastExpr 0x557f045a56b0 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x557f045a5690 <col:3> 'void ()' Function 0x557f04540e40 '__VERIFIER_atomic_begin' 'void ()'
    |-BinaryOperator 0x557f045a5a30 <line:845:3, col:123> '_Bool' '='
    | |-DeclRefExpr 0x557f045a56e8 <col:3> '_Bool' lvalue Var 0x557f0459a808 'main$tmp_guard1' '_Bool'
    | `-ImplicitCastExpr 0x557f045a5a18 <col:21, col:123> '_Bool' <IntegralToBoolean>
    |   `-UnaryOperator 0x557f045a5a00 <col:21, col:123> 'int' prefix '!' cannot overflow
    |     `-ParenExpr 0x557f045a59e0 <col:22, col:123> 'int'
    |       `-BinaryOperator 0x557f045a59c0 <col:23, col:122> 'int' '&&'
    |         |-BinaryOperator 0x557f045a5928 <col:23, col:94> 'int' '&&'
    |         | |-BinaryOperator 0x557f045a5890 <col:23, col:66> 'int' '&&'
    |         | | |-BinaryOperator 0x557f045a57f8 <col:23, col:38> 'int' '&&'
    |         | | | |-BinaryOperator 0x557f045a5760 <col:23, col:28> 'int' '=='
    |         | | | | |-ImplicitCastExpr 0x557f045a5748 <col:23> 'int' <LValueToRValue>
    |         | | | | | `-DeclRefExpr 0x557f045a5708 <col:23> 'int' lvalue Var 0x557f0459a908 'x' 'int'
    |         | | | | `-IntegerLiteral 0x557f045a5728 <col:28> 'int' 2
    |         | | | `-BinaryOperator 0x557f045a57d8 <col:33, col:38> 'int' '=='
    |         | | |   |-ImplicitCastExpr 0x557f045a57c0 <col:33> 'int' <LValueToRValue>
    |         | | |   | `-DeclRefExpr 0x557f045a5780 <col:33> 'int' lvalue Var 0x557f0459aa28 'y' 'int'
    |         | | |   `-IntegerLiteral 0x557f045a57a0 <col:38> 'int' 2
    |         | | `-BinaryOperator 0x557f045a5870 <col:43, col:66> 'int' '=='
    |         | |   |-ImplicitCastExpr 0x557f045a5858 <col:43> 'int' <LValueToRValue>
    |         | |   | `-DeclRefExpr 0x557f045a5818 <col:43> 'int' lvalue Var 0x557f0459a398 '__unbuffered_p2_EAX' 'int'
    |         | |   `-IntegerLiteral 0x557f045a5838 <col:66> 'int' 0
    |         | `-BinaryOperator 0x557f045a5908 <col:71, col:94> 'int' '=='
    |         |   |-ImplicitCastExpr 0x557f045a58f0 <col:71> 'int' <LValueToRValue>
    |         |   | `-DeclRefExpr 0x557f045a58b0 <col:71> 'int' lvalue Var 0x557f0459a4b8 '__unbuffered_p3_EAX' 'int'
    |         |   `-IntegerLiteral 0x557f045a58d0 <col:94> 'int' 1
    |         `-BinaryOperator 0x557f045a59a0 <col:99, col:122> 'int' '=='
    |           |-ImplicitCastExpr 0x557f045a5988 <col:99> 'int' <LValueToRValue>
    |           | `-DeclRefExpr 0x557f045a5948 <col:99> 'int' lvalue Var 0x557f0459a5d8 '__unbuffered_p3_EBX' 'int'
    |           `-IntegerLiteral 0x557f045a5968 <col:122> 'int' 0
    |-CallExpr 0x557f045a5a88 <line:846:3, col:25> 'void'
    | `-ImplicitCastExpr 0x557f045a5a70 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x557f045a5a50 <col:3> 'void ()' Function 0x557f04540f00 '__VERIFIER_atomic_end' 'void ()'
    |-CallExpr 0x557f045a5b00 <line:847:3, col:36> 'void'
    | |-ImplicitCastExpr 0x557f045a5ae8 <col:3> 'void (*)(int)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x557f045a5aa8 <col:3> 'void (int)' Function 0x557f04540bc8 '__VERIFIER_assert' 'void (int)'
    | `-ImplicitCastExpr 0x557f045a5b40 <col:21> 'int' <IntegralCast>
    |   `-ImplicitCastExpr 0x557f045a5b28 <col:21> '_Bool' <LValueToRValue>
    |     `-DeclRefExpr 0x557f045a5ac8 <col:21> '_Bool' lvalue Var 0x557f0459a808 'main$tmp_guard1' '_Bool'
    `-ReturnStmt 0x557f045a5b78 <line:848:3, col:10>
      `-IntegerLiteral 0x557f045a5b58 <col:10> 'int' 0
