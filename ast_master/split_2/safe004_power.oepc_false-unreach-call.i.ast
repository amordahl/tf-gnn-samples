TranslationUnitDecl 0x5609c2945e18 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x5609c29466d8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x5609c29463b0 '__int128'
|-TypedefDecl 0x5609c2946748 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x5609c29463d0 'unsigned __int128'
|-TypedefDecl 0x5609c2946a50 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x5609c2946820 'struct __NSConstantString_tag'
|   `-Record 0x5609c29467a0 '__NSConstantString_tag'
|-TypedefDecl 0x5609c2946af8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x5609c2946ab0 'char *'
|   `-BuiltinType 0x5609c2945eb0 'char'
|-TypedefDecl 0x5609c2985650 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'struct __va_list_tag [1]'
| `-ConstantArrayType 0x5609c2946d90 'struct __va_list_tag [1]' 1 
|   `-RecordType 0x5609c2946bd0 'struct __va_list_tag'
|     `-Record 0x5609c2946b50 '__va_list_tag'
|-FunctionDecl 0x5609c2985790 <./split_2/safe004_power.oepc_false-unreach-call.i:1:1, col:34> col:13 used __VERIFIER_assume 'void (int)' extern
| `-ParmVarDecl 0x5609c29856c0 <col:31> col:34 'int'
|-FunctionDecl 0x5609c2985958 <line:2:1, col:45> col:15 used __VERIFIER_nondet_pointer 'void *(void)' extern
|-FunctionDecl 0x5609c2985a80 <line:3:1, col:61> col:13 used __VERIFIER_error 'void () __attribute__((noreturn))' extern
|-FunctionDecl 0x5609c2985bc8 <line:4:1, col:99> col:6 used __VERIFIER_assert 'void (int)'
| |-ParmVarDecl 0x5609c2985b38 <col:24, col:28> col:28 used expression 'int'
| `-CompoundStmt 0x5609c2985df8 <col:40, col:99>
|   |-IfStmt 0x5609c2985dc8 <col:42, col:88>
|   | |-UnaryOperator 0x5609c2985ca8 <col:46, col:47> 'int' prefix '!' cannot overflow
|   | | `-ImplicitCastExpr 0x5609c2985c90 <col:47> 'int' <LValueToRValue>
|   | |   `-DeclRefExpr 0x5609c2985c70 <col:47> 'int' lvalue ParmVar 0x5609c2985b38 'expression' 'int'
|   | `-CompoundStmt 0x5609c2985db0 <col:59, col:88>
|   |   `-LabelStmt 0x5609c2985d98 <col:61, col:85> 'ERROR'
|   |     `-CallExpr 0x5609c2985d28 <col:68, col:85> 'void'
|   |       `-ImplicitCastExpr 0x5609c2985d10 <col:68> 'void (*)() __attribute__((noreturn))' <FunctionToPointerDecay>
|   |         `-DeclRefExpr 0x5609c2985cc0 <col:68> 'void () __attribute__((noreturn))' Function 0x5609c2985a80 '__VERIFIER_error' 'void () __attribute__((noreturn))'
|   |-NullStmt 0x5609c2985de0 <col:89>
|   `-ReturnStmt 0x5609c2985de8 <col:91>
|-FunctionDecl 0x5609c2985e40 <line:5:1, col:37> col:13 used __VERIFIER_atomic_begin 'void ()' extern
|-FunctionDecl 0x5609c2985f00 <line:6:1, col:35> col:13 used __VERIFIER_atomic_end 'void ()' extern
|-FunctionDecl 0x5609c2986280 <line:8:1, line:10:76> line:8:13 __assert_fail 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x5609c2985fb8 <col:28, col:40> col:40 __assertion 'const char *'
| |-ParmVarDecl 0x5609c2986038 <col:53, col:65> col:65 __file 'const char *'
| |-ParmVarDecl 0x5609c29860b8 <line:9:7, col:20> col:20 __line 'unsigned int'
| |-ParmVarDecl 0x5609c2986138 <col:28, col:40> col:40 __function 'const char *'
| `-NoThrowAttr 0x5609c2986340 <line:10:22>
|-FunctionDecl 0x5609c29ac390 <line:11:1, line:13:76> line:11:13 __assert_perror_fail 'void (int, const char *, unsigned int, const char *) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x5609c29863b0 <col:35, col:39> col:39 __errnum 'int'
| |-ParmVarDecl 0x5609c2986430 <col:49, col:61> col:61 __file 'const char *'
| |-ParmVarDecl 0x5609c29864b0 <line:12:7, col:20> col:20 __line 'unsigned int'
| |-ParmVarDecl 0x5609c2986530 <col:28, col:40> col:40 __function 'const char *'
| `-NoThrowAttr 0x5609c29ac450 <line:13:22>
|-FunctionDecl 0x5609c29ac700 <line:14:1, line:15:76> line:14:13 __assert 'void (const char *, const char *, int) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x5609c29ac4c0 <col:23, col:35> col:35 __assertion 'const char *'
| |-ParmVarDecl 0x5609c29ac540 <col:48, col:60> col:60 __file 'const char *'
| |-ParmVarDecl 0x5609c29ac5c0 <col:68, col:72> col:72 __line 'int'
| `-NoThrowAttr 0x5609c29ac7b8 <line:15:22>
|-TypedefDecl 0x5609c29ac828 <line:17:1, col:23> col:23 __u_char 'unsigned char'
| `-BuiltinType 0x5609c2945f70 'unsigned char'
|-TypedefDecl 0x5609c29ac898 <line:18:1, col:28> col:28 __u_short 'unsigned short'
| `-BuiltinType 0x5609c2945f90 'unsigned short'
|-TypedefDecl 0x5609c29ac908 <line:19:1, col:22> col:22 __u_int 'unsigned int'
| `-BuiltinType 0x5609c2945fb0 'unsigned int'
|-TypedefDecl 0x5609c29ac978 <line:20:1, col:27> col:27 __u_long 'unsigned long'
| `-BuiltinType 0x5609c2945fd0 'unsigned long'
|-TypedefDecl 0x5609c29ac9e8 <line:21:1, col:21> col:21 __int8_t 'signed char'
| `-BuiltinType 0x5609c2945ed0 'signed char'
|-TypedefDecl 0x5609c29aca58 <line:22:1, col:23> col:23 __uint8_t 'unsigned char'
| `-BuiltinType 0x5609c2945f70 'unsigned char'
|-TypedefDecl 0x5609c29acac8 <line:23:1, col:26> col:26 __int16_t 'short'
| `-BuiltinType 0x5609c2945ef0 'short'
|-TypedefDecl 0x5609c29acb38 <line:24:1, col:28> col:28 __uint16_t 'unsigned short'
| `-BuiltinType 0x5609c2945f90 'unsigned short'
|-TypedefDecl 0x5609c29acba8 <line:25:1, col:20> col:20 __int32_t 'int'
| `-BuiltinType 0x5609c2945f10 'int'
|-TypedefDecl 0x5609c29acc18 <line:26:1, col:22> col:22 __uint32_t 'unsigned int'
| `-BuiltinType 0x5609c2945fb0 'unsigned int'
|-TypedefDecl 0x5609c29acc88 <line:27:1, col:25> col:25 __int64_t 'long'
| `-BuiltinType 0x5609c2945f30 'long'
|-TypedefDecl 0x5609c29accf8 <line:28:1, col:27> col:27 referenced __uint64_t 'unsigned long'
| `-BuiltinType 0x5609c2945fd0 'unsigned long'
|-TypedefDecl 0x5609c29acd68 <line:29:1, col:18> col:18 referenced __quad_t 'long'
| `-BuiltinType 0x5609c2945f30 'long'
|-TypedefDecl 0x5609c29acdd8 <line:30:1, col:27> col:27 __u_quad_t 'unsigned long'
| `-BuiltinType 0x5609c2945fd0 'unsigned long'
|-TypedefDecl 0x5609c29ace48 <line:31:1, col:27> col:27 __dev_t 'unsigned long'
| `-BuiltinType 0x5609c2945fd0 'unsigned long'
|-TypedefDecl 0x5609c29aceb8 <line:32:1, col:22> col:22 __uid_t 'unsigned int'
| `-BuiltinType 0x5609c2945fb0 'unsigned int'
|-TypedefDecl 0x5609c29acf28 <line:33:1, col:22> col:22 __gid_t 'unsigned int'
| `-BuiltinType 0x5609c2945fb0 'unsigned int'
|-TypedefDecl 0x5609c29acf98 <line:34:1, col:27> col:27 __ino_t 'unsigned long'
| `-BuiltinType 0x5609c2945fd0 'unsigned long'
|-TypedefDecl 0x5609c29ad008 <line:35:1, col:27> col:27 __ino64_t 'unsigned long'
| `-BuiltinType 0x5609c2945fd0 'unsigned long'
|-TypedefDecl 0x5609c29ad078 <line:36:1, col:22> col:22 __mode_t 'unsigned int'
| `-BuiltinType 0x5609c2945fb0 'unsigned int'
|-TypedefDecl 0x5609c29ad0e8 <line:37:1, col:27> col:27 __nlink_t 'unsigned long'
| `-BuiltinType 0x5609c2945fd0 'unsigned long'
|-TypedefDecl 0x5609c29ad158 <line:38:1, col:18> col:18 __off_t 'long'
| `-BuiltinType 0x5609c2945f30 'long'
|-TypedefDecl 0x5609c29ad1c8 <line:39:1, col:18> col:18 referenced __off64_t 'long'
| `-BuiltinType 0x5609c2945f30 'long'
|-TypedefDecl 0x5609c29ad238 <line:40:1, col:13> col:13 referenced __pid_t 'int'
| `-BuiltinType 0x5609c2945f10 'int'
|-RecordDecl 0x5609c29ad290 <line:41:9, col:32> col:9 struct definition
| `-FieldDecl 0x5609c29ad408 <col:18, col:29> col:22 __val 'int [2]'
|-TypedefDecl 0x5609c29ad4c0 <col:1, col:34> col:34 __fsid_t 'struct __fsid_t':'__fsid_t'
| `-ElaboratedType 0x5609c29ad460 'struct __fsid_t' sugar
|   `-RecordType 0x5609c29ad310 '__fsid_t'
|     `-Record 0x5609c29ad290 ''
|-TypedefDecl 0x5609c29ad548 <line:42:1, col:18> col:18 referenced __clock_t 'long'
| `-BuiltinType 0x5609c2945f30 'long'
|-TypedefDecl 0x5609c29ad5b8 <line:43:1, col:27> col:27 __rlim_t 'unsigned long'
| `-BuiltinType 0x5609c2945fd0 'unsigned long'
|-TypedefDecl 0x5609c29ad628 <line:44:1, col:27> col:27 __rlim64_t 'unsigned long'
| `-BuiltinType 0x5609c2945fd0 'unsigned long'
|-TypedefDecl 0x5609c29ad698 <line:45:1, col:22> col:22 __id_t 'unsigned int'
| `-BuiltinType 0x5609c2945fb0 'unsigned int'
|-TypedefDecl 0x5609c29ad708 <line:46:1, col:18> col:18 referenced __time_t 'long'
| `-BuiltinType 0x5609c2945f30 'long'
|-TypedefDecl 0x5609c29ad778 <line:47:1, col:22> col:22 __useconds_t 'unsigned int'
| `-BuiltinType 0x5609c2945fb0 'unsigned int'
|-TypedefDecl 0x5609c29ad7e8 <line:48:1, col:18> col:18 __suseconds_t 'long'
| `-BuiltinType 0x5609c2945f30 'long'
|-TypedefDecl 0x5609c29ad858 <line:49:1, col:13> col:13 __daddr_t 'int'
| `-BuiltinType 0x5609c2945f10 'int'
|-TypedefDecl 0x5609c29ad8c8 <line:50:1, col:13> col:13 __key_t 'int'
| `-BuiltinType 0x5609c2945f10 'int'
|-TypedefDecl 0x5609c29ad938 <line:51:1, col:13> col:13 referenced __clockid_t 'int'
| `-BuiltinType 0x5609c2945f10 'int'
|-TypedefDecl 0x5609c29ad9a8 <line:52:1, col:16> col:16 referenced __timer_t 'void *'
| `-PointerType 0x5609c2946630 'void *'
|   `-BuiltinType 0x5609c2945e70 'void'
|-TypedefDecl 0x5609c29ada18 <line:53:1, col:18> col:18 __blksize_t 'long'
| `-BuiltinType 0x5609c2945f30 'long'
|-TypedefDecl 0x5609c29ada88 <line:54:1, col:18> col:18 __blkcnt_t 'long'
| `-BuiltinType 0x5609c2945f30 'long'
|-TypedefDecl 0x5609c29adaf8 <line:55:1, col:18> col:18 __blkcnt64_t 'long'
| `-BuiltinType 0x5609c2945f30 'long'
|-TypedefDecl 0x5609c29adb68 <line:56:1, col:27> col:27 __fsblkcnt_t 'unsigned long'
| `-BuiltinType 0x5609c2945fd0 'unsigned long'
|-TypedefDecl 0x5609c29adbd8 <line:57:1, col:27> col:27 __fsblkcnt64_t 'unsigned long'
| `-BuiltinType 0x5609c2945fd0 'unsigned long'
|-TypedefDecl 0x5609c29adc48 <line:58:1, col:27> col:27 __fsfilcnt_t 'unsigned long'
| `-BuiltinType 0x5609c2945fd0 'unsigned long'
|-TypedefDecl 0x5609c29adcb8 <line:59:1, col:27> col:27 __fsfilcnt64_t 'unsigned long'
| `-BuiltinType 0x5609c2945fd0 'unsigned long'
|-TypedefDecl 0x5609c29add28 <line:60:1, col:18> col:18 __fsword_t 'long'
| `-BuiltinType 0x5609c2945f30 'long'
|-TypedefDecl 0x5609c29add98 <line:61:1, col:18> col:18 __ssize_t 'long'
| `-BuiltinType 0x5609c2945f30 'long'
|-TypedefDecl 0x5609c29ade08 <line:62:1, col:18> col:18 referenced __syscall_slong_t 'long'
| `-BuiltinType 0x5609c2945f30 'long'
|-TypedefDecl 0x5609c29ade78 <line:63:1, col:27> col:27 __syscall_ulong_t 'unsigned long'
| `-BuiltinType 0x5609c2945fd0 'unsigned long'
|-TypedefDecl 0x5609c29adf08 <line:64:1, col:19> col:19 __loff_t '__off64_t':'long'
| `-TypedefType 0x5609c29aded0 '__off64_t' sugar
|   |-Typedef 0x5609c29ad1c8 '__off64_t'
|   `-BuiltinType 0x5609c2945f30 'long'
|-TypedefDecl 0x5609c29ae000 <line:65:1, col:19> col:19 __qaddr_t '__quad_t *'
| `-PointerType 0x5609c29adfc0 '__quad_t *'
|   `-TypedefType 0x5609c29adf60 '__quad_t' sugar
|     |-Typedef 0x5609c29acd68 '__quad_t'
|     `-BuiltinType 0x5609c2945f30 'long'
|-TypedefDecl 0x5609c29ae070 <line:66:1, col:15> col:15 __caddr_t 'char *'
| `-PointerType 0x5609c2946ab0 'char *'
|   `-BuiltinType 0x5609c2945eb0 'char'
|-TypedefDecl 0x5609c29ae0e0 <line:67:1, col:18> col:18 __intptr_t 'long'
| `-BuiltinType 0x5609c2945f30 'long'
|-TypedefDecl 0x5609c29ae150 <line:68:1, col:22> col:22 __socklen_t 'unsigned int'
| `-BuiltinType 0x5609c2945fb0 'unsigned int'
|-FunctionDecl 0x5609c29ae298 <line:69:1, line:73:1> line:70:1 __bswap_32 'unsigned int (unsigned int)' static inline
| |-ParmVarDecl 0x5609c29ae1c0 <col:13, col:26> col:26 used __bsx 'unsigned int'
| `-CompoundStmt 0x5609c29af5e8 <line:71:1, line:73:1>
|   `-ReturnStmt 0x5609c29af5d8 <line:72:3, col:34>
|     `-CallExpr 0x5609c29af598 <col:10, col:34> 'unsigned int'
|       |-ImplicitCastExpr 0x5609c29af580 <col:10> 'unsigned int (*)(unsigned int)' <BuiltinFnToFnPtr>
|       | `-DeclRefExpr 0x5609c29af510 <col:10> '<builtin fn type>' Function 0x5609c29af380 '__builtin_bswap32' 'unsigned int (unsigned int)'
|       `-ImplicitCastExpr 0x5609c29af5c0 <col:29> 'unsigned int' <LValueToRValue>
|         `-DeclRefExpr 0x5609c29af530 <col:29> 'unsigned int' lvalue ParmVar 0x5609c29ae1c0 '__bsx' 'unsigned int'
|-FunctionDecl 0x5609c29af380 <col:10> col:10 implicit used __builtin_bswap32 'unsigned int (unsigned int)' extern
| |-ParmVarDecl 0x5609c29af420 <<invalid sloc>> <invalid sloc> 'unsigned int'
| |-NoThrowAttr 0x5609c29af490 <col:10> Implicit
| `-ConstAttr 0x5609c29af4e8 <col:10> Implicit
|-FunctionDecl 0x5609c29af740 <line:74:1, line:78:1> line:75:1 __bswap_64 '__uint64_t (__uint64_t)' static inline
| |-ParmVarDecl 0x5609c29af638 <col:13, col:24> col:24 used __bsx '__uint64_t':'unsigned long'
| `-CompoundStmt 0x5609c29afa58 <line:76:1, line:78:1>
|   `-ReturnStmt 0x5609c29afa48 <line:77:3, col:34>
|     `-CallExpr 0x5609c29afa08 <col:10, col:34> 'unsigned long'
|       |-ImplicitCastExpr 0x5609c29af9f0 <col:10> 'unsigned long (*)(unsigned long)' <BuiltinFnToFnPtr>
|       | `-DeclRefExpr 0x5609c29af978 <col:10> '<builtin fn type>' Function 0x5609c29af7e8 '__builtin_bswap64' 'unsigned long (unsigned long)'
|       `-ImplicitCastExpr 0x5609c29afa30 <col:29> '__uint64_t':'unsigned long' <LValueToRValue>
|         `-DeclRefExpr 0x5609c29af998 <col:29> '__uint64_t':'unsigned long' lvalue ParmVar 0x5609c29af638 '__bsx' '__uint64_t':'unsigned long'
|-FunctionDecl 0x5609c29af7e8 <col:10> col:10 implicit used __builtin_bswap64 'unsigned long (unsigned long)' extern
| |-ParmVarDecl 0x5609c29af888 <<invalid sloc>> <invalid sloc> 'unsigned long'
| |-NoThrowAttr 0x5609c29af8f8 <col:10> Implicit
| `-ConstAttr 0x5609c29af950 <col:10> Implicit
|-TypedefDecl 0x5609c29afa88 <line:79:1, col:27> col:27 referenced size_t 'unsigned long'
| `-BuiltinType 0x5609c2945fd0 'unsigned long'
|-TypedefDecl 0x5609c29afb18 <line:81:1, col:18> col:18 referenced time_t '__time_t':'long'
| `-TypedefType 0x5609c29afae0 '__time_t' sugar
|   |-Typedef 0x5609c29ad708 '__time_t'
|   `-BuiltinType 0x5609c2945f30 'long'
|-RecordDecl 0x5609c29afb70 <line:84:1, line:88:3> line:84:8 struct timespec definition
| |-FieldDecl 0x5609c29afc28 <line:86:5, col:14> col:14 tv_sec '__time_t':'long'
| `-FieldDecl 0x5609c29afcb8 <line:87:5, col:23> col:23 tv_nsec '__syscall_slong_t':'long'
|-TypedefDecl 0x5609c29afd48 <line:89:1, col:17> col:17 referenced pid_t '__pid_t':'int'
| `-TypedefType 0x5609c29afd10 '__pid_t' sugar
|   |-Typedef 0x5609c29ad238 '__pid_t'
|   `-BuiltinType 0x5609c2945f10 'int'
|-RecordDecl 0x5609c29afda0 <line:90:1, line:93:3> line:90:8 struct sched_param definition
| `-FieldDecl 0x5609c29afe60 <line:92:5, col:9> col:9 __sched_priority 'int'
|-RecordDecl 0x5609c29afeb0 <line:96:1, line:99:3> line:96:8 struct __sched_param definition
| `-FieldDecl 0x5609c29aff70 <line:98:5, col:9> col:9 __sched_priority 'int'
|-TypedefDecl 0x5609c29affd8 <line:100:1, col:27> col:27 referenced __cpu_mask 'unsigned long'
| `-BuiltinType 0x5609c2945fd0 'unsigned long'
|-RecordDecl 0x5609c29b0030 <line:101:9, line:104:1> line:101:9 struct definition
| `-FieldDecl 0x5609c29b02c0 <line:103:3, col:53> col:14 __bits '__cpu_mask [64]'
|-TypedefDecl 0x5609c29b13a0 <line:101:1, line:104:3> col:3 referenced cpu_set_t 'struct cpu_set_t':'cpu_set_t'
| `-ElaboratedType 0x5609c29b0310 'struct cpu_set_t' sugar
|   `-RecordType 0x5609c29b00b0 'cpu_set_t'
|     `-Record 0x5609c29b0030 ''
|-FunctionDecl 0x5609c29b1678 <line:106:1, line:107:42> line:106:12 __sched_cpucount 'int (size_t, const cpu_set_t *)' extern
| |-ParmVarDecl 0x5609c29b1448 <col:30, col:37> col:37 __setsize 'size_t':'unsigned long'
| |-ParmVarDecl 0x5609c29b1550 <col:48, col:65> col:65 __setp 'const cpu_set_t *'
| `-NoThrowAttr 0x5609c29b1728 <line:107:19>
|-FunctionDecl 0x5609c29b1900 <line:108:1, col:92> col:19 __sched_cpualloc 'cpu_set_t *(size_t)' extern
| |-ParmVarDecl 0x5609c29b1790 <col:37, col:44> col:44 __count 'size_t':'unsigned long'
| `-NoThrowAttr 0x5609c29b19a8 <col:69>
|-FunctionDecl 0x5609c29b1b20 <line:109:1, col:87> col:13 __sched_cpufree 'void (cpu_set_t *)' extern
| |-ParmVarDecl 0x5609c29b1a10 <col:30, col:41> col:41 __set 'cpu_set_t *'
| `-NoThrowAttr 0x5609c29b1bc8 <col:64>
|-FunctionDecl 0x5609c29b1e88 <line:112:1, line:113:45> line:112:12 sched_setparam 'int (__pid_t, const struct sched_param *)' extern
| |-ParmVarDecl 0x5609c29b1c30 <col:28, col:36> col:36 __pid '__pid_t':'int'
| |-ParmVarDecl 0x5609c29b1d68 <col:43, col:69> col:69 __param 'const struct sched_param *'
| `-NoThrowAttr 0x5609c29b1f38 <line:113:22>
|-FunctionDecl 0x5609c29b21b8 <line:114:1, col:111> col:12 sched_getparam 'int (__pid_t, struct sched_param *)' extern
| |-ParmVarDecl 0x5609c29b1fa0 <col:28, col:36> col:36 __pid '__pid_t':'int'
| |-ParmVarDecl 0x5609c29b2098 <col:43, col:63> col:63 __param 'struct sched_param *'
| `-NoThrowAttr 0x5609c29b2268 <col:88>
|-FunctionDecl 0x5609c29b2588 <line:115:1, line:116:85> line:115:12 sched_setscheduler 'int (__pid_t, int, const struct sched_param *)' extern
| |-ParmVarDecl 0x5609c29b22d0 <col:32, col:40> col:40 __pid '__pid_t':'int'
| |-ParmVarDecl 0x5609c29b23b0 <col:47, col:51> col:51 __policy 'int'
| |-ParmVarDecl 0x5609c29b2440 <line:116:11, col:37> col:37 __param 'const struct sched_param *'
| `-NoThrowAttr 0x5609c29b2640 <col:62>
|-FunctionDecl 0x5609c29b27b8 <line:117:1, col:86> col:12 sched_getscheduler 'int (__pid_t)' extern
| |-ParmVarDecl 0x5609c29b26a8 <col:32, col:40> col:40 __pid '__pid_t':'int'
| `-NoThrowAttr 0x5609c29b2860 <col:63>
|-FunctionDecl 0x5609c29b2988 <line:118:1, col:70> col:12 sched_yield 'int (void)' extern
| `-NoThrowAttr 0x5609c29b2a28 <col:47>
|-FunctionDecl 0x5609c29b2b30 <line:119:1, col:92> col:12 sched_get_priority_max 'int (int)' extern
| |-ParmVarDecl 0x5609c29b2a98 <col:36, col:40> col:40 __algorithm 'int'
| `-NoThrowAttr 0x5609c29b2bd8 <col:69>
|-FunctionDecl 0x5609c29b2ce0 <line:120:1, col:92> col:12 sched_get_priority_min 'int (int)' extern
| |-ParmVarDecl 0x5609c29b2c48 <col:36, col:40> col:40 __algorithm 'int'
| `-NoThrowAttr 0x5609c29b2d88 <col:69>
|-FunctionDecl 0x5609c29b3048 <line:121:1, col:111> col:12 sched_rr_get_interval 'int (__pid_t, struct timespec *)' extern
| |-ParmVarDecl 0x5609c29b2df0 <col:35, col:43> col:43 __pid '__pid_t':'int'
| |-ParmVarDecl 0x5609c29b2f28 <col:50, col:67> col:67 __t 'struct timespec *'
| `-NoThrowAttr 0x5609c29b30f8 <col:88>
|-TypedefDecl 0x5609c29b3188 <line:125:1, col:19> col:19 referenced clock_t '__clock_t':'long'
| `-TypedefType 0x5609c29b3150 '__clock_t' sugar
|   |-Typedef 0x5609c29ad548 '__clock_t'
|   `-BuiltinType 0x5609c2945f30 'long'
|-TypedefDecl 0x5609c29b3218 <line:128:1, col:21> col:21 referenced clockid_t '__clockid_t':'int'
| `-TypedefType 0x5609c29b31e0 '__clockid_t' sugar
|   |-Typedef 0x5609c29ad938 '__clockid_t'
|   `-BuiltinType 0x5609c2945f10 'int'
|-TypedefDecl 0x5609c29b32a8 <line:129:1, col:19> col:19 referenced timer_t '__timer_t':'void *'
| `-TypedefType 0x5609c29b3270 '__timer_t' sugar
|   |-Typedef 0x5609c29ad9a8 '__timer_t'
|   `-PointerType 0x5609c2946630 'void *'
|     `-BuiltinType 0x5609c2945e70 'void'
|-RecordDecl 0x5609c29b3300 <line:131:1, line:144:1> line:131:8 struct tm definition
| |-FieldDecl 0x5609c29b33d8 <line:133:3, col:7> col:7 tm_sec 'int'
| |-FieldDecl 0x5609c29b3440 <line:134:3, col:7> col:7 tm_min 'int'
| |-FieldDecl 0x5609c29b34a8 <line:135:3, col:7> col:7 tm_hour 'int'
| |-FieldDecl 0x5609c29b3510 <line:136:3, col:7> col:7 tm_mday 'int'
| |-FieldDecl 0x5609c29b3578 <line:137:3, col:7> col:7 tm_mon 'int'
| |-FieldDecl 0x5609c29b35e0 <line:138:3, col:7> col:7 tm_year 'int'
| |-FieldDecl 0x5609c29b3648 <line:139:3, col:7> col:7 tm_wday 'int'
| |-FieldDecl 0x5609c29b36b0 <line:140:3, col:7> col:7 tm_yday 'int'
| |-FieldDecl 0x5609c29b3718 <line:141:3, col:7> col:7 tm_isdst 'int'
| |-FieldDecl 0x5609c29b3780 <line:142:3, col:12> col:12 tm_gmtoff 'long'
| `-FieldDecl 0x5609c29b37e8 <line:143:3, col:15> col:15 tm_zone 'const char *'
|-RecordDecl 0x5609c29b3838 <line:147:1, line:151:3> line:147:8 struct itimerspec definition
| |-FieldDecl 0x5609c29b3908 <line:149:5, col:21> col:21 it_interval 'struct timespec':'struct timespec'
| `-FieldDecl 0x5609c29b3978 <line:150:5, col:21> col:21 it_value 'struct timespec':'struct timespec'
|-RecordDecl 0x5609c29b3a20 <line:152:1, col:8> col:8 struct sigevent
|-FunctionDecl 0x5609c29b3bf0 <line:154:1, col:68> col:16 clock 'clock_t (void)' extern
| `-NoThrowAttr 0x5609c29b3c90 <col:45>
|-FunctionDecl 0x5609c29b3e70 <line:155:1, col:77> col:15 time 'time_t (time_t *)' extern
| |-ParmVarDecl 0x5609c29b3d60 <col:21, col:29> col:29 __timer 'time_t *'
| `-NoThrowAttr 0x5609c29b3f18 <col:54>
|-FunctionDecl 0x5609c29b4118 <line:156:1, line:157:73> line:156:15 difftime 'double (time_t, time_t)' extern
| |-ParmVarDecl 0x5609c29b3f80 <col:25, col:32> col:32 __time1 'time_t':'long'
| |-ParmVarDecl 0x5609c29b3ff8 <col:41, col:48> col:48 __time0 'time_t':'long'
| |-NoThrowAttr 0x5609c29b41c8 <line:157:22>
| `-ConstAttr 0x5609c29b4220 <col:63>
|-FunctionDecl 0x5609c29b5050 <line:158:1, col:79> col:15 mktime 'time_t (struct tm *)' extern
| |-ParmVarDecl 0x5609c29b4318 <col:23, col:34> col:34 __tp 'struct tm *'
| `-NoThrowAttr 0x5609c29b50f8 <col:56>
|-FunctionDecl 0x5609c29b54a0 <line:159:1, line:161:77> line:159:15 strftime 'size_t (char *restrict, size_t, const char *restrict, const struct tm *restrict)' extern
| |-ParmVarDecl 0x5609c29b5168 <col:25, col:42> col:42 __s 'char *restrict'
| |-ParmVarDecl 0x5609c29b51e0 <col:47, col:54> col:54 __maxsize 'size_t':'unsigned long'
| |-ParmVarDecl 0x5609c29b5260 <line:160:4, col:27> col:27 __format 'const char *restrict'
| |-ParmVarDecl 0x5609c29b5358 <line:161:4, col:32> col:32 __tp 'const struct tm *restrict'
| `-NoThrowAttr 0x5609c29b5560 <col:54>
|-RecordDecl 0x5609c29b55b8 <line:163:9, line:170:1> line:163:16 struct __locale_struct definition
| |-RecordDecl 0x5609c29b5668 parent 0x5609c2945e18 <line:165:3, col:10> col:10 struct __locale_data
| |-FieldDecl 0x5609c29b58c8 <col:3, col:37> col:25 __locales 'struct __locale_data *[13]'
| |-FieldDecl 0x5609c29b5968 <line:166:3, col:29> col:29 __ctype_b 'const unsigned short *'
| |-FieldDecl 0x5609c29b59d0 <line:167:3, col:14> col:14 __ctype_tolower 'const int *'
| |-FieldDecl 0x5609c29b5a38 <line:168:3, col:14> col:14 __ctype_toupper 'const int *'
| `-FieldDecl 0x5609c29b5b28 <line:169:3, col:25> col:15 __names 'const char *[13]'
|-TypedefDecl 0x5609c29b5c48 <line:163:1, line:170:4> col:4 referenced __locale_t 'struct __locale_struct *'
| `-PointerType 0x5609c29b5bf0 'struct __locale_struct *'
|   `-ElaboratedType 0x5609c29b5b80 'struct __locale_struct' sugar
|     `-RecordType 0x5609c29b5640 'struct __locale_struct'
|       `-Record 0x5609c29b55b8 '__locale_struct'
|-TypedefDecl 0x5609c29b5cf8 <line:171:1, col:20> col:20 locale_t '__locale_t':'struct __locale_struct *'
| `-TypedefType 0x5609c29b5cc0 '__locale_t' sugar
|   |-Typedef 0x5609c29b5c48 '__locale_t'
|   `-PointerType 0x5609c29b5bf0 'struct __locale_struct *'
|     `-ElaboratedType 0x5609c29b5b80 'struct __locale_struct' sugar
|       `-RecordType 0x5609c29b5640 'struct __locale_struct'
|         `-Record 0x5609c29b55b8 '__locale_struct'
|-FunctionDecl 0x5609c29b7110 <line:172:1, line:175:63> line:172:15 strftime_l 'size_t (char *restrict, size_t, const char *restrict, const struct tm *restrict, __locale_t)' extern
| |-ParmVarDecl 0x5609c29b5d68 <col:27, col:44> col:44 __s 'char *restrict'
| |-ParmVarDecl 0x5609c29b5de0 <col:49, col:56> col:56 __maxsize 'size_t':'unsigned long'
| |-ParmVarDecl 0x5609c29b5e60 <line:173:6, col:29> col:29 __format 'const char *restrict'
| |-ParmVarDecl 0x5609c29b5ef0 <line:174:6, col:34> col:34 __tp 'const struct tm *restrict'
| |-ParmVarDecl 0x5609c29b5f68 <line:175:6, col:17> col:17 __loc '__locale_t':'struct __locale_struct *'
| `-NoThrowAttr 0x5609c29b71d8 <col:40>
|-FunctionDecl 0x5609c29b73c8 <line:177:1, col:89> col:19 gmtime 'struct tm *(const time_t *)' extern
| |-ParmVarDecl 0x5609c29b72a0 <col:27, col:41> col:41 __timer 'const time_t *'
| `-NoThrowAttr 0x5609c29b7470 <col:66>
|-FunctionDecl 0x5609c29b7580 <line:178:1, col:92> col:19 localtime 'struct tm *(const time_t *)' extern
| |-ParmVarDecl 0x5609c29b74d8 <col:30, col:44> col:44 __timer 'const time_t *'
| `-NoThrowAttr 0x5609c29b7628 <col:69>
|-FunctionDecl 0x5609c29b7858 <line:180:1, line:181:75> line:180:19 gmtime_r 'struct tm *(const time_t *restrict, struct tm *restrict)' extern
| |-ParmVarDecl 0x5609c29b7690 <col:29, col:54> col:54 __timer 'const time_t *restrict'
| |-ParmVarDecl 0x5609c29b7720 <line:181:8, col:30> col:30 __tp 'struct tm *restrict'
| `-NoThrowAttr 0x5609c29b7908 <col:52>
|-FunctionDecl 0x5609c29b7ab0 <line:182:1, line:183:78> line:182:19 localtime_r 'struct tm *(const time_t *restrict, struct tm *restrict)' extern
| |-ParmVarDecl 0x5609c29b7970 <col:32, col:57> col:57 __timer 'const time_t *restrict'
| |-ParmVarDecl 0x5609c29b7a00 <line:183:11, col:33> col:33 __tp 'struct tm *restrict'
| `-NoThrowAttr 0x5609c29b7b60 <col:55>
|-FunctionDecl 0x5609c29b7cf8 <line:185:1, col:85> col:14 asctime 'char *(const struct tm *)' extern
| |-ParmVarDecl 0x5609c29b7be0 <col:23, col:40> col:40 __tp 'const struct tm *'
| `-NoThrowAttr 0x5609c29b7da0 <col:62>
|-FunctionDecl 0x5609c29b7f18 <line:186:1, col:83> col:14 ctime 'char *(const time_t *)' extern
| |-ParmVarDecl 0x5609c29b7e08 <col:21, col:35> col:35 __timer 'const time_t *'
| `-NoThrowAttr 0x5609c29b7fc0 <col:60>
|-FunctionDecl 0x5609c29b82b8 <line:188:1, line:189:67> line:188:14 asctime_r 'char *(const struct tm *restrict, char *restrict)' extern
| |-ParmVarDecl 0x5609c29b8118 <col:25, col:53> col:53 __tp 'const struct tm *restrict'
| |-ParmVarDecl 0x5609c29b8198 <line:189:4, col:21> col:21 __buf 'char *restrict'
| `-NoThrowAttr 0x5609c29b8368 <col:44>
|-FunctionDecl 0x5609c29b8578 <line:190:1, line:191:72> line:190:14 ctime_r 'char *(const time_t *restrict, char *restrict)' extern
| |-ParmVarDecl 0x5609c29b83d0 <col:23, col:48> col:48 __timer 'const time_t *restrict'
| |-ParmVarDecl 0x5609c29b8450 <line:191:9, col:26> col:26 __buf 'char *restrict'
| `-NoThrowAttr 0x5609c29b8628 <col:49>
|-VarDecl 0x5609c29b8728 <line:192:1, col:24> col:14 __tzname 'char *[2]' extern
|-VarDecl 0x5609c29b87a8 <line:193:1, col:12> col:12 __daylight 'int' extern
|-VarDecl 0x5609c29b8828 <line:194:1, col:17> col:17 __timezone 'long' extern
|-VarDecl 0x5609c29b88f0 <line:195:1, col:22> col:14 tzname 'char *[2]' extern
|-FunctionDecl 0x5609c29b8a20 <line:196:1, col:65> col:13 tzset 'void (void)' extern
| `-NoThrowAttr 0x5609c29b8ac0 <col:42>
|-VarDecl 0x5609c29b8b30 <line:197:1, col:12> col:12 daylight 'int' extern
|-VarDecl 0x5609c29b8bb0 <line:198:1, col:17> col:17 timezone 'long' extern
|-FunctionDecl 0x5609c29b8d38 <line:199:1, col:80> col:12 stime 'int (const time_t *)' extern
| |-ParmVarDecl 0x5609c29b8c28 <col:19, col:33> col:33 __when 'const time_t *'
| `-NoThrowAttr 0x5609c29b8de0 <col:57>
|-FunctionDecl 0x5609c29b8ef0 <line:200:1, col:79> col:15 timegm 'time_t (struct tm *)' extern
| |-ParmVarDecl 0x5609c29b8e60 <col:23, col:34> col:34 __tp 'struct tm *'
| `-NoThrowAttr 0x5609c29b8f98 <col:56>
|-FunctionDecl 0x5609c29b90d0 <line:201:1, col:82> col:15 timelocal 'time_t (struct tm *)' extern
| |-ParmVarDecl 0x5609c29b9018 <col:26, col:37> col:37 __tp 'struct tm *'
| `-NoThrowAttr 0x5609c29b9178 <col:59>
|-FunctionDecl 0x5609c29b9280 <line:202:1, col:99> col:12 dysize 'int (int)' extern
| |-ParmVarDecl 0x5609c29b91e8 <col:20, col:24> col:24 __year 'int'
| |-NoThrowAttr 0x5609c29b9328 <col:48>
| `-ConstAttr 0x5609c29b9380 <col:89>
|-FunctionDecl 0x5609c29b95e8 <line:203:1, line:204:37> line:203:12 nanosleep 'int (const struct timespec *, struct timespec *)' extern
| |-ParmVarDecl 0x5609c29b9438 <col:23, col:46> col:46 __requested_time 'const struct timespec *'
| `-ParmVarDecl 0x5609c29b94c8 <line:204:9, col:26> col:26 __remaining 'struct timespec *'
|-FunctionDecl 0x5609c29b9848 <line:205:1, col:111> col:12 clock_getres 'int (clockid_t, struct timespec *)' extern
| |-ParmVarDecl 0x5609c29b96d8 <col:26, col:36> col:36 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x5609c29b9768 <col:48, col:65> col:65 __res 'struct timespec *'
| `-NoThrowAttr 0x5609c29b98f8 <col:88>
|-FunctionDecl 0x5609c29b9a90 <line:206:1, col:111> col:12 clock_gettime 'int (clockid_t, struct timespec *)' extern
| |-ParmVarDecl 0x5609c29b9960 <col:27, col:37> col:37 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x5609c29b99f0 <col:49, col:66> col:66 __tp 'struct timespec *'
| `-NoThrowAttr 0x5609c29b9b40 <col:88>
|-FunctionDecl 0x5609c29b9d58 <line:207:1, line:208:45> line:207:12 clock_settime 'int (clockid_t, const struct timespec *)' extern
| |-ParmVarDecl 0x5609c29b9ba8 <col:27, col:37> col:37 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x5609c29b9c38 <col:49, col:72> col:72 __tp 'const struct timespec *'
| `-NoThrowAttr 0x5609c29b9e08 <line:208:22>
|-FunctionDecl 0x5609c29ba178 <line:209:1, line:211:30> line:209:12 clock_nanosleep 'int (clockid_t, int, const struct timespec *, struct timespec *)' extern
| |-ParmVarDecl 0x5609c29b9e70 <col:29, col:39> col:39 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x5609c29b9ef0 <col:51, col:55> col:55 __flags 'int'
| |-ParmVarDecl 0x5609c29b9f80 <line:210:8, col:31> col:31 __req 'const struct timespec *'
| `-ParmVarDecl 0x5609c29ba010 <line:211:8, col:25> col:25 __rem 'struct timespec *'
|-FunctionDecl 0x5609c29ba478 <line:212:1, col:108> col:12 clock_getcpuclockid 'int (pid_t, clockid_t *)' extern
| |-ParmVarDecl 0x5609c29ba278 <col:33, col:39> col:39 __pid 'pid_t':'int'
| |-ParmVarDecl 0x5609c29ba350 <col:46, col:57> col:57 __clock_id 'clockid_t *'
| `-NoThrowAttr 0x5609c29ba528 <col:85>
|-FunctionDecl 0x5609c29ba918 <line:213:1, line:215:75> line:213:12 timer_create 'int (clockid_t, struct sigevent *restrict, timer_t *restrict)' extern
| |-ParmVarDecl 0x5609c29ba590 <col:26, col:36> col:36 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x5609c29ba6c8 <line:214:5, col:33> col:33 __evp 'struct sigevent *restrict'
| |-ParmVarDecl 0x5609c29ba7d0 <line:215:5, col:25> col:25 __timerid 'timer_t *restrict'
| `-NoThrowAttr 0x5609c29ba9d0 <col:52>
|-FunctionDecl 0x5609c29bab48 <line:216:1, col:84> col:12 timer_delete 'int (timer_t)' extern
| |-ParmVarDecl 0x5609c29baa38 <col:26, col:34> col:34 __timerid 'timer_t':'void *'
| `-NoThrowAttr 0x5609c29babf0 <col:61>
|-FunctionDecl 0x5609c29bb0f0 <line:217:1, line:219:85> line:217:12 timer_settime 'int (timer_t, int, const struct itimerspec *restrict, struct itimerspec *restrict)' extern
| |-ParmVarDecl 0x5609c29bac58 <col:27, col:35> col:35 __timerid 'timer_t':'void *'
| |-ParmVarDecl 0x5609c29bacd8 <col:46, col:50> col:50 __flags 'int'
| |-ParmVarDecl 0x5609c29bae08 <line:218:6, col:42> col:42 __value 'const struct itimerspec *restrict'
| |-ParmVarDecl 0x5609c29baef8 <line:219:6, col:36> col:36 __ovalue 'struct itimerspec *restrict'
| `-NoThrowAttr 0x5609c29bb1b0 <col:62>
|-FunctionDecl 0x5609c29bb3c8 <line:220:1, line:221:45> line:220:12 timer_gettime 'int (timer_t, struct itimerspec *)' extern
| |-ParmVarDecl 0x5609c29bb218 <col:27, col:35> col:35 __timerid 'timer_t':'void *'
| |-ParmVarDecl 0x5609c29bb2a8 <col:46, col:65> col:65 __value 'struct itimerspec *'
| `-NoThrowAttr 0x5609c29bb478 <line:221:22>
|-FunctionDecl 0x5609c29bb578 <line:222:1, col:88> col:12 timer_getoverrun 'int (timer_t)' extern
| |-ParmVarDecl 0x5609c29bb4e0 <col:30, col:38> col:38 __timerid 'timer_t':'void *'
| `-NoThrowAttr 0x5609c29bb620 <col:65>
|-TypedefDecl 0x5609c29bb690 <line:224:1, col:27> col:27 referenced pthread_t 'unsigned long'
| `-BuiltinType 0x5609c2945fd0 'unsigned long'
|-RecordDecl 0x5609c29bb6e8 <line:225:1, line:229:1> line:225:7 union pthread_attr_t definition
| |-FieldDecl 0x5609c29bb830 <line:227:3, col:17> col:8 __size 'char [56]'
| `-FieldDecl 0x5609c29bb898 <line:228:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x5609c29bb948 <line:230:1, col:30> col:30 referenced pthread_attr_t 'union pthread_attr_t':'union pthread_attr_t'
| `-ElaboratedType 0x5609c29bb8f0 'union pthread_attr_t' sugar
|   `-RecordType 0x5609c29bb770 'union pthread_attr_t'
|     `-Record 0x5609c29bb6e8 'pthread_attr_t'
|-RecordDecl 0x5609c29bb9a0 <line:231:9, line:235:1> line:231:16 struct __pthread_internal_list definition
| |-FieldDecl 0x5609c29bbb18 <line:233:3, col:35> col:35 __prev 'struct __pthread_internal_list *'
| `-FieldDecl 0x5609c29bbb90 <line:234:3, col:35> col:35 __next 'struct __pthread_internal_list *'
|-TypedefDecl 0x5609c29bbc40 <line:231:1, line:235:3> col:3 referenced __pthread_list_t 'struct __pthread_internal_list':'struct __pthread_internal_list'
| `-ElaboratedType 0x5609c29bbbe0 'struct __pthread_internal_list' sugar
|   `-RecordType 0x5609c29bba20 'struct __pthread_internal_list'
|     `-Record 0x5609c29bb9a0 '__pthread_internal_list'
|-RecordDecl 0x5609c29bbcb0 <line:236:9, line:250:1> line:236:9 union definition
| |-RecordDecl 0x5609c29bbd58 parent 0x5609c2945e18 <line:238:3, line:247:3> line:238:10 struct __pthread_mutex_s definition
| | |-FieldDecl 0x5609c29bbe30 <line:240:5, col:9> col:9 __lock 'int'
| | |-FieldDecl 0x5609c29bbe98 <line:241:5, col:18> col:18 __count 'unsigned int'
| | |-FieldDecl 0x5609c29bbf00 <line:242:5, col:9> col:9 __owner 'int'
| | |-FieldDecl 0x5609c29bbf68 <line:243:5, col:18> col:18 __nusers 'unsigned int'
| | |-FieldDecl 0x5609c29bbfd0 <line:244:5, col:9> col:9 __kind 'int'
| | |-FieldDecl 0x5609c29bc038 <line:245:5, col:9> col:9 __spins 'int'
| | `-FieldDecl 0x5609c29c0110 <line:246:5, col:22> col:22 __list '__pthread_list_t':'struct __pthread_internal_list'
| |-FieldDecl 0x5609c29c01c0 <line:238:3, line:247:5> col:5 __data 'struct __pthread_mutex_s':'struct __pthread_mutex_s'
| |-FieldDecl 0x5609c29c02b0 <line:248:3, col:17> col:8 __size 'char [40]'
| `-FieldDecl 0x5609c29c0318 <line:249:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x5609c29c04a0 <line:236:1, line:250:3> col:3 referenced pthread_mutex_t 'union pthread_mutex_t':'pthread_mutex_t'
| `-ElaboratedType 0x5609c29c0440 'union pthread_mutex_t' sugar
|   `-RecordType 0x5609c29bbd30 'pthread_mutex_t'
|     `-Record 0x5609c29bbcb0 ''
|-RecordDecl 0x5609c29c0510 <line:251:9, line:255:1> line:251:9 union definition
| |-FieldDecl 0x5609c29c0650 <line:253:3, col:16> col:8 __size 'char [4]'
| `-FieldDecl 0x5609c29c06b8 <line:254:3, col:7> col:7 __align 'int'
|-TypedefDecl 0x5609c29c0770 <line:251:1, line:255:3> col:3 referenced pthread_mutexattr_t 'union pthread_mutexattr_t':'pthread_mutexattr_t'
| `-ElaboratedType 0x5609c29c0710 'union pthread_mutexattr_t' sugar
|   `-RecordType 0x5609c29c0590 'pthread_mutexattr_t'
|     `-Record 0x5609c29c0510 ''
|-RecordDecl 0x5609c29c07e0 <line:256:9, line:271:1> line:256:9 union definition
| |-RecordDecl 0x5609c29c0888 <line:258:3, line:268:3> line:258:3 struct definition
| | |-FieldDecl 0x5609c29c0950 <line:260:5, col:9> col:9 __lock 'int'
| | |-FieldDecl 0x5609c29c09b8 <line:261:5, col:18> col:18 __futex 'unsigned int'
| | |-FieldDecl 0x5609c29c0a20 <line:262:19, col:42> col:42 __total_seq 'unsigned long long'
| | |-FieldDecl 0x5609c29c0a88 <line:263:19, col:42> col:42 __wakeup_seq 'unsigned long long'
| | |-FieldDecl 0x5609c29c0af0 <line:264:19, col:42> col:42 __woken_seq 'unsigned long long'
| | |-FieldDecl 0x5609c29c0b58 <line:265:5, col:11> col:11 __mutex 'void *'
| | |-FieldDecl 0x5609c29c0bc0 <line:266:5, col:18> col:18 __nwaiters 'unsigned int'
| | `-FieldDecl 0x5609c29c0c28 <line:267:5, col:18> col:18 __broadcast_seq 'unsigned int'
| |-FieldDecl 0x5609c29c0ce0 <line:258:3, line:268:5> col:5 __data 'struct (anonymous struct at ./split_2/safe004_power.oepc_false-unreach-call.i:258:3)':'struct pthread_cond_t::(anonymous at ./split_2/safe004_power.oepc_false-unreach-call.i:258:3)'
| |-FieldDecl 0x5609c29c0dd0 <line:269:3, col:17> col:8 __size 'char [48]'
| `-FieldDecl 0x5609c29c0e38 <line:270:17, col:31> col:31 __align 'long long'
|-TypedefDecl 0x5609c29c0f70 <line:256:1, line:271:3> col:3 referenced pthread_cond_t 'union pthread_cond_t':'pthread_cond_t'
| `-ElaboratedType 0x5609c29c0f10 'union pthread_cond_t' sugar
|   `-RecordType 0x5609c29c0860 'pthread_cond_t'
|     `-Record 0x5609c29c07e0 ''
|-RecordDecl 0x5609c29c0fe0 <line:272:9, line:276:1> line:272:9 union definition
| |-FieldDecl 0x5609c29c2130 <line:274:3, col:16> col:8 __size 'char [4]'
| `-FieldDecl 0x5609c29c2198 <line:275:3, col:7> col:7 __align 'int'
|-TypedefDecl 0x5609c29c2250 <line:272:1, line:276:3> col:3 referenced pthread_condattr_t 'union pthread_condattr_t':'pthread_condattr_t'
| `-ElaboratedType 0x5609c29c21f0 'union pthread_condattr_t' sugar
|   `-RecordType 0x5609c29c1060 'pthread_condattr_t'
|     `-Record 0x5609c29c0fe0 ''
|-TypedefDecl 0x5609c29c22d8 <line:277:1, col:22> col:22 referenced pthread_key_t 'unsigned int'
| `-BuiltinType 0x5609c2945fb0 'unsigned int'
|-TypedefDecl 0x5609c29c2348 <line:278:1, col:13> col:13 referenced pthread_once_t 'int'
| `-BuiltinType 0x5609c2945f10 'int'
|-RecordDecl 0x5609c29c23a0 <line:279:9, line:297:1> line:279:9 union definition
| |-RecordDecl 0x5609c29c2448 <line:281:3, line:294:3> line:281:3 struct definition
| | |-FieldDecl 0x5609c29c2510 <line:283:5, col:9> col:9 __lock 'int'
| | |-FieldDecl 0x5609c29c2578 <line:284:5, col:18> col:18 __nr_readers 'unsigned int'
| | |-FieldDecl 0x5609c29c25e0 <line:285:5, col:18> col:18 __readers_wakeup 'unsigned int'
| | |-FieldDecl 0x5609c29c2648 <line:286:5, col:18> col:18 __writer_wakeup 'unsigned int'
| | |-FieldDecl 0x5609c29c26b0 <line:287:5, col:18> col:18 __nr_readers_queued 'unsigned int'
| | |-FieldDecl 0x5609c29c2718 <line:288:5, col:18> col:18 __nr_writers_queued 'unsigned int'
| | |-FieldDecl 0x5609c29c2780 <line:289:5, col:9> col:9 __writer 'int'
| | |-FieldDecl 0x5609c29c27e8 <line:290:5, col:9> col:9 __shared 'int'
| | |-FieldDecl 0x5609c29c2850 <line:291:5, col:23> col:23 __pad1 'unsigned long'
| | |-FieldDecl 0x5609c29c28b8 <line:292:5, col:23> col:23 __pad2 'unsigned long'
| | `-FieldDecl 0x5609c29c2920 <line:293:5, col:18> col:18 __flags 'unsigned int'
| |-FieldDecl 0x5609c29c29d0 <line:281:3, line:294:5> col:5 __data 'struct (anonymous struct at ./split_2/safe004_power.oepc_false-unreach-call.i:281:3)':'struct pthread_rwlock_t::(anonymous at ./split_2/safe004_power.oepc_false-unreach-call.i:281:3)'
| |-FieldDecl 0x5609c29c2a78 <line:295:3, col:17> col:8 __size 'char [56]'
| `-FieldDecl 0x5609c29c2ae0 <line:296:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x5609c29c2c30 <line:279:1, line:297:3> col:3 referenced pthread_rwlock_t 'union pthread_rwlock_t':'pthread_rwlock_t'
| `-ElaboratedType 0x5609c29c2bd0 'union pthread_rwlock_t' sugar
|   `-RecordType 0x5609c29c2420 'pthread_rwlock_t'
|     `-Record 0x5609c29c23a0 ''
|-RecordDecl 0x5609c29c2ca0 <line:298:9, line:302:1> line:298:9 union definition
| |-FieldDecl 0x5609c29c2de0 <line:300:3, col:16> col:8 __size 'char [8]'
| `-FieldDecl 0x5609c29c2e48 <line:301:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x5609c29c2f00 <line:298:1, line:302:3> col:3 referenced pthread_rwlockattr_t 'union pthread_rwlockattr_t':'pthread_rwlockattr_t'
| `-ElaboratedType 0x5609c29c2ea0 'union pthread_rwlockattr_t' sugar
|   `-RecordType 0x5609c29c2d20 'pthread_rwlockattr_t'
|     `-Record 0x5609c29c2ca0 ''
|-TypedefDecl 0x5609c29c2f88 <line:303:1, col:22> col:22 referenced pthread_spinlock_t 'volatile int'
| `-QualType 0x5609c2945f14 'volatile int' volatile
|   `-BuiltinType 0x5609c2945f10 'int'
|-RecordDecl 0x5609c29c2fe0 <line:304:9, line:308:1> line:304:9 union definition
| |-FieldDecl 0x5609c29c4140 <line:306:3, col:17> col:8 __size 'char [32]'
| `-FieldDecl 0x5609c29c41a8 <line:307:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x5609c29c4260 <line:304:1, line:308:3> col:3 referenced pthread_barrier_t 'union pthread_barrier_t':'pthread_barrier_t'
| `-ElaboratedType 0x5609c29c4200 'union pthread_barrier_t' sugar
|   `-RecordType 0x5609c29c3060 'pthread_barrier_t'
|     `-Record 0x5609c29c2fe0 ''
|-RecordDecl 0x5609c29c42d0 <line:309:9, line:313:1> line:309:9 union definition
| |-FieldDecl 0x5609c29c43d0 <line:311:3, col:16> col:8 __size 'char [4]'
| `-FieldDecl 0x5609c29c4438 <line:312:3, col:7> col:7 __align 'int'
|-TypedefDecl 0x5609c29c44f0 <line:309:1, line:313:3> col:3 referenced pthread_barrierattr_t 'union pthread_barrierattr_t':'pthread_barrierattr_t'
| `-ElaboratedType 0x5609c29c4490 'union pthread_barrierattr_t' sugar
|   `-RecordType 0x5609c29c4350 'pthread_barrierattr_t'
|     `-Record 0x5609c29c42d0 ''
|-TypedefDecl 0x5609c29c4608 <line:314:1, col:29> col:18 referenced __jmp_buf 'long [8]'
| `-ConstantArrayType 0x5609c29c45a0 'long [8]' 8 
|   `-BuiltinType 0x5609c2945f30 'long'
|-EnumDecl 0x5609c29c4660 <line:315:1, line:319:1> line:315:1
| |-EnumConstantDecl 0x5609c29c4728 <line:317:3> col:3 PTHREAD_CREATE_JOINABLE 'int'
| `-EnumConstantDecl 0x5609c29c4778 <line:318:3> col:3 PTHREAD_CREATE_DETACHED 'int'
|-EnumDecl 0x5609c29c47c8 <line:320:1, line:331:1> line:320:1
| |-EnumConstantDecl 0x5609c29c4898 <line:322:3> col:3 referenced PTHREAD_MUTEX_TIMED_NP 'int'
| |-EnumConstantDecl 0x5609c29c48e8 <line:323:3> col:3 referenced PTHREAD_MUTEX_RECURSIVE_NP 'int'
| |-EnumConstantDecl 0x5609c29c4938 <line:324:3> col:3 referenced PTHREAD_MUTEX_ERRORCHECK_NP 'int'
| |-EnumConstantDecl 0x5609c29c4988 <line:325:3> col:3 PTHREAD_MUTEX_ADAPTIVE_NP 'int'
| |-EnumConstantDecl 0x5609c29c4a10 <line:327:3, col:26> col:3 referenced PTHREAD_MUTEX_NORMAL 'int'
| | `-ConstantExpr 0x5609c29c49f8 <col:26> 'int'
| |   `-DeclRefExpr 0x5609c29c49d8 <col:26> 'int' EnumConstant 0x5609c29c4898 'PTHREAD_MUTEX_TIMED_NP' 'int'
| |-EnumConstantDecl 0x5609c29c4a98 <line:328:3, col:29> col:3 PTHREAD_MUTEX_RECURSIVE 'int'
| | `-ConstantExpr 0x5609c29c4a80 <col:29> 'int'
| |   `-DeclRefExpr 0x5609c29c4a60 <col:29> 'int' EnumConstant 0x5609c29c48e8 'PTHREAD_MUTEX_RECURSIVE_NP' 'int'
| |-EnumConstantDecl 0x5609c29c4b20 <line:329:3, col:30> col:3 PTHREAD_MUTEX_ERRORCHECK 'int'
| | `-ConstantExpr 0x5609c29c4b08 <col:30> 'int'
| |   `-DeclRefExpr 0x5609c29c4ae8 <col:30> 'int' EnumConstant 0x5609c29c4938 'PTHREAD_MUTEX_ERRORCHECK_NP' 'int'
| `-EnumConstantDecl 0x5609c29c4ba8 <line:330:3, col:27> col:3 PTHREAD_MUTEX_DEFAULT 'int'
|   `-ConstantExpr 0x5609c29c4b90 <col:27> 'int'
|     `-DeclRefExpr 0x5609c29c4b70 <col:27> 'int' EnumConstant 0x5609c29c4a10 'PTHREAD_MUTEX_NORMAL' 'int'
|-EnumDecl 0x5609c29c4bf8 <line:332:1, line:338:1> line:332:1
| |-EnumConstantDecl 0x5609c29c4cc8 <line:334:3> col:3 referenced PTHREAD_MUTEX_STALLED 'int'
| |-EnumConstantDecl 0x5609c29c4d50 <line:335:3, col:30> col:3 PTHREAD_MUTEX_STALLED_NP 'int'
| | `-ConstantExpr 0x5609c29c4d38 <col:30> 'int'
| |   `-DeclRefExpr 0x5609c29c4d18 <col:30> 'int' EnumConstant 0x5609c29c4cc8 'PTHREAD_MUTEX_STALLED' 'int'
| |-EnumConstantDecl 0x5609c29c4da0 <line:336:3> col:3 referenced PTHREAD_MUTEX_ROBUST 'int'
| `-EnumConstantDecl 0x5609c29c4e28 <line:337:3, col:29> col:3 PTHREAD_MUTEX_ROBUST_NP 'int'
|   `-ConstantExpr 0x5609c29c4e10 <col:29> 'int'
|     `-DeclRefExpr 0x5609c29c4df0 <col:29> 'int' EnumConstant 0x5609c29c4da0 'PTHREAD_MUTEX_ROBUST' 'int'
|-EnumDecl 0x5609c29c4e78 <line:339:1, line:344:1> line:339:1
| |-EnumConstantDecl 0x5609c29c4f48 <line:341:3> col:3 PTHREAD_PRIO_NONE 'int'
| |-EnumConstantDecl 0x5609c29c4f98 <line:342:3> col:3 PTHREAD_PRIO_INHERIT 'int'
| `-EnumConstantDecl 0x5609c29c4fe8 <line:343:3> col:3 PTHREAD_PRIO_PROTECT 'int'
|-EnumDecl 0x5609c29c5038 <line:345:1, line:351:1> line:345:1
| |-EnumConstantDecl 0x5609c29c5150 <line:347:3> col:3 referenced PTHREAD_RWLOCK_PREFER_READER_NP 'int'
| |-EnumConstantDecl 0x5609c29c51a0 <line:348:3> col:3 PTHREAD_RWLOCK_PREFER_WRITER_NP 'int'
| |-EnumConstantDecl 0x5609c29c51f0 <line:349:3> col:3 PTHREAD_RWLOCK_PREFER_WRITER_NONRECURSIVE_NP 'int'
| `-EnumConstantDecl 0x5609c29c5278 <line:350:3, col:31> col:3 PTHREAD_RWLOCK_DEFAULT_NP 'int'
|   `-ConstantExpr 0x5609c29c5260 <col:31> 'int'
|     `-DeclRefExpr 0x5609c29c5240 <col:31> 'int' EnumConstant 0x5609c29c5150 'PTHREAD_RWLOCK_PREFER_READER_NP' 'int'
|-EnumDecl 0x5609c29c52c8 <line:352:1, line:356:1> line:352:1
| |-EnumConstantDecl 0x5609c29c5398 <line:354:3> col:3 PTHREAD_INHERIT_SCHED 'int'
| `-EnumConstantDecl 0x5609c29c53e8 <line:355:3> col:3 PTHREAD_EXPLICIT_SCHED 'int'
|-EnumDecl 0x5609c29c5438 <line:357:1, line:361:1> line:357:1
| |-EnumConstantDecl 0x5609c29c5508 <line:359:3> col:3 PTHREAD_SCOPE_SYSTEM 'int'
| `-EnumConstantDecl 0x5609c29c5558 <line:360:3> col:3 PTHREAD_SCOPE_PROCESS 'int'
|-EnumDecl 0x5609c29c55a8 <line:362:1, line:366:1> line:362:1
| |-EnumConstantDecl 0x5609c29c5678 <line:364:3> col:3 PTHREAD_PROCESS_PRIVATE 'int'
| `-EnumConstantDecl 0x5609c29c56c8 <line:365:3> col:3 PTHREAD_PROCESS_SHARED 'int'
|-RecordDecl 0x5609c29c5718 <line:367:1, line:373:1> line:367:8 struct _pthread_cleanup_buffer definition
| |-FieldDecl 0x5609c29c5958 <line:369:3, col:28> col:10 __routine 'void (*)(void *)'
| |-FieldDecl 0x5609c29c59c0 <line:370:3, col:9> col:9 __arg 'void *'
| |-FieldDecl 0x5609c29c5a28 <line:371:3, col:7> col:7 __canceltype 'int'
| `-FieldDecl 0x5609c29c5b48 <line:372:3, col:35> col:35 __prev 'struct _pthread_cleanup_buffer *'
|-EnumDecl 0x5609c29c5b98 <line:374:1, line:378:1> line:374:1
| |-EnumConstantDecl 0x5609c29c5c68 <line:376:3> col:3 PTHREAD_CANCEL_ENABLE 'int'
| `-EnumConstantDecl 0x5609c29c5cb8 <line:377:3> col:3 PTHREAD_CANCEL_DISABLE 'int'
|-EnumDecl 0x5609c29c5d08 <line:379:1, line:383:1> line:379:1
| |-EnumConstantDecl 0x5609c29c5dd8 <line:381:3> col:3 PTHREAD_CANCEL_DEFERRED 'int'
| `-EnumConstantDecl 0x5609c29c5e28 <line:382:3> col:3 PTHREAD_CANCEL_ASYNCHRONOUS 'int'
|-FunctionDecl 0x5609c29c6488 <line:385:1, line:388:96> line:385:12 used pthread_create 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' extern
| |-ParmVarDecl 0x5609c29c5f20 <col:28, col:50> col:50 __newthread 'pthread_t *restrict'
| |-ParmVarDecl 0x5609c29c6030 <line:386:7, col:40> col:40 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x5609c29c6270 <line:387:7, col:39> col:15 __start_routine 'void *(*)(void *)'
| |-ParmVarDecl 0x5609c29c62f0 <line:388:7, col:24> col:24 __arg 'void *restrict'
| |-NoThrowAttr 0x5609c29c6548 <col:47>
| |-NonNullAttr 0x5609c29c65a0 <col:77, col:94> 1 3
| `-CallbackAttr 0x5609c29c65d8 <line:385:12> Implicit 2 3
|-FunctionDecl 0x5609c29c6700 <line:389:1, col:72> col:13 pthread_exit 'void (void *) __attribute__((noreturn))' extern
| `-ParmVarDecl 0x5609c29c6630 <col:27, col:33> col:33 __retval 'void *'
|-FunctionDecl 0x5609c29c6958 <line:390:1, col:64> col:12 pthread_join 'int (pthread_t, void **)' extern
| |-ParmVarDecl 0x5609c29c67b8 <col:26, col:36> col:36 __th 'pthread_t':'unsigned long'
| `-ParmVarDecl 0x5609c29c6838 <col:42, col:49> col:49 __thread_return 'void **'
|-FunctionDecl 0x5609c29c6b28 <line:391:1, col:83> col:12 pthread_detach 'int (pthread_t)' extern
| |-ParmVarDecl 0x5609c29c6a18 <col:28, col:38> col:38 __th 'pthread_t':'unsigned long'
| `-NoThrowAttr 0x5609c29c6bd0 <col:60>
|-FunctionDecl 0x5609c29c6d20 <line:392:1, col:105> col:18 pthread_self 'pthread_t (void)' extern
| |-NoThrowAttr 0x5609c29c6dc0 <col:54>
| `-ConstAttr 0x5609c29c6e18 <col:95>
|-FunctionDecl 0x5609c29c6fe8 <line:393:1, line:394:70> line:393:12 pthread_equal 'int (pthread_t, pthread_t)' extern
| |-ParmVarDecl 0x5609c29c6e50 <col:27, col:37> col:37 __thread1 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x5609c29c6ec8 <col:48, col:58> col:58 __thread2 'pthread_t':'unsigned long'
| |-NoThrowAttr 0x5609c29c7098 <line:394:19>
| `-ConstAttr 0x5609c29c70f0 <col:60>
|-FunctionDecl 0x5609c29c8b08 <line:395:1, col:128> col:12 pthread_attr_init 'int (pthread_attr_t *)' extern
| |-ParmVarDecl 0x5609c29c89d0 <col:31, col:47> col:47 __attr 'pthread_attr_t *'
| |-NoThrowAttr 0x5609c29c8bb0 <col:71>
| `-NonNullAttr 0x5609c29c8c08 <col:112, col:126> 1
|-FunctionDecl 0x5609c29c8d10 <line:396:1, line:397:79> line:396:12 pthread_attr_destroy 'int (pthread_attr_t *)' extern
| |-ParmVarDecl 0x5609c29c8c58 <col:34, col:50> col:50 __attr 'pthread_attr_t *'
| |-NoThrowAttr 0x5609c29c8db8 <line:397:22>
| `-NonNullAttr 0x5609c29c8e10 <col:63, col:77> 1
|-FunctionDecl 0x5609c29c9038 <line:398:1, line:400:82> line:398:12 pthread_attr_getdetachstate 'int (const pthread_attr_t *, int *)' extern
| |-ParmVarDecl 0x5609c29c8e58 <col:41, col:63> col:63 __attr 'const pthread_attr_t *'
| |-ParmVarDecl 0x5609c29c8ed8 <line:399:6, col:11> col:11 __detachstate 'int *'
| |-NoThrowAttr 0x5609c29c90e8 <line:400:22>
| `-NonNullAttr 0x5609c29c9140 <col:63, col:80> 1 2
|-FunctionDecl 0x5609c29c9348 <line:401:1, line:403:79> line:401:12 pthread_attr_setdetachstate 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x5609c29c9188 <col:41, col:57> col:57 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x5609c29c9208 <line:402:6, col:10> col:10 __detachstate 'int'
| |-NoThrowAttr 0x5609c29c93f8 <line:403:22>
| `-NonNullAttr 0x5609c29c9450 <col:63, col:77> 1
|-FunctionDecl 0x5609c29c96a8 <line:404:1, line:406:82> line:404:12 pthread_attr_getguardsize 'int (const pthread_attr_t *, size_t *)' extern
| |-ParmVarDecl 0x5609c29c9498 <col:39, col:61> col:61 __attr 'const pthread_attr_t *'
| |-ParmVarDecl 0x5609c29c9540 <line:405:11, col:19> col:19 __guardsize 'size_t *'
| |-NoThrowAttr 0x5609c29c9758 <line:406:22>
| `-NonNullAttr 0x5609c29c97b0 <col:63, col:80> 1 2
|-FunctionDecl 0x5609c29ca9e8 <line:407:1, line:409:79> line:407:12 pthread_attr_setguardsize 'int (pthread_attr_t *, size_t)' extern
| |-ParmVarDecl 0x5609c29c97f8 <col:39, col:55> col:55 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x5609c29c9870 <line:408:11, col:18> col:18 __guardsize 'size_t':'unsigned long'
| |-NoThrowAttr 0x5609c29caa98 <line:409:22>
| `-NonNullAttr 0x5609c29caaf0 <col:63, col:77> 1
|-FunctionDecl 0x5609c29cad28 <line:410:1, line:412:82> line:410:12 pthread_attr_getschedparam 'int (const pthread_attr_t *restrict, struct sched_param *restrict)' extern
| |-ParmVarDecl 0x5609c29cab38 <col:40, col:73> col:73 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x5609c29cabc8 <line:411:12, col:43> col:43 __param 'struct sched_param *restrict'
| |-NoThrowAttr 0x5609c29cadd8 <line:412:22>
| `-NonNullAttr 0x5609c29cae30 <col:63, col:80> 1 2
|-FunctionDecl 0x5609c29cb068 <line:413:1, line:415:97> line:413:12 pthread_attr_setschedparam 'int (pthread_attr_t *restrict, const struct sched_param *restrict)' extern
| |-ParmVarDecl 0x5609c29cae78 <col:40, col:67> col:67 __attr 'pthread_attr_t *restrict'
| |-ParmVarDecl 0x5609c29caf08 <line:414:12, line:415:12> col:12 __param 'const struct sched_param *restrict'
| |-NoThrowAttr 0x5609c29cb118 <col:37>
| `-NonNullAttr 0x5609c29cb170 <col:78, col:95> 1 2
|-FunctionDecl 0x5609c29cb358 <line:416:1, line:418:82> line:416:12 pthread_attr_getschedpolicy 'int (const pthread_attr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x5609c29cb1b8 <col:41, line:417:6> col:6 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x5609c29cb238 <col:14, col:30> col:30 __policy 'int *restrict'
| |-NoThrowAttr 0x5609c29cb408 <line:418:22>
| `-NonNullAttr 0x5609c29cb460 <col:63, col:80> 1 2
|-FunctionDecl 0x5609c29cb5e8 <line:419:1, line:420:79> line:419:12 pthread_attr_setschedpolicy 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x5609c29cb4a8 <col:41, col:57> col:57 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x5609c29cb528 <col:65, col:69> col:69 __policy 'int'
| |-NoThrowAttr 0x5609c29cb698 <line:420:22>
| `-NonNullAttr 0x5609c29cb6f0 <col:63, col:77> 1
|-FunctionDecl 0x5609c29cb898 <line:421:1, line:423:82> line:421:12 pthread_attr_getinheritsched 'int (const pthread_attr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x5609c29cb738 <col:42, line:422:7> col:7 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x5609c29cb7b8 <col:15, col:31> col:31 __inherit 'int *restrict'
| |-NoThrowAttr 0x5609c29cb948 <line:423:22>
| `-NonNullAttr 0x5609c29cb9c0 <col:63, col:80> 1 2
|-FunctionDecl 0x5609c29cbb48 <line:424:1, line:426:79> line:424:12 pthread_attr_setinheritsched 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x5609c29cba08 <col:42, col:58> col:58 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x5609c29cba88 <line:425:7, col:11> col:11 __inherit 'int'
| |-NoThrowAttr 0x5609c29cbbf8 <line:426:22>
| `-NonNullAttr 0x5609c29cbc50 <col:63, col:77> 1
|-FunctionDecl 0x5609c29cbdf8 <line:427:1, line:429:82> line:427:12 pthread_attr_getscope 'int (const pthread_attr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x5609c29cbc98 <col:35, col:68> col:68 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x5609c29cbd18 <line:428:7, col:23> col:23 __scope 'int *restrict'
| |-NoThrowAttr 0x5609c29cbea8 <line:429:22>
| `-NonNullAttr 0x5609c29cbf00 <col:63, col:80> 1 2
|-FunctionDecl 0x5609c29cc088 <line:430:1, line:431:79> line:430:12 pthread_attr_setscope 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x5609c29cbf48 <col:35, col:51> col:51 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x5609c29cbfc8 <col:59, col:63> col:63 __scope 'int'
| |-NoThrowAttr 0x5609c29cc138 <line:431:22>
| `-NonNullAttr 0x5609c29cc190 <col:63, col:77> 1
|-FunctionDecl 0x5609c29cc3b8 <line:432:1, line:434:115> line:432:12 pthread_attr_getstackaddr 'int (const pthread_attr_t *restrict, void **restrict)' extern
| |-ParmVarDecl 0x5609c29cc1d8 <col:39, line:433:11> col:11 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x5609c29cc258 <col:19, col:37> col:37 __stackaddr 'void **restrict'
| |-NoThrowAttr 0x5609c29cc468 <line:434:22>
| |-NonNullAttr 0x5609c29cc4c0 <col:63, col:80> 1 2
| `-DeprecatedAttr 0x5609c29cc4f8 <col:100> "" ""
|-FunctionDecl 0x5609c29cc708 <line:435:1, line:437:112> line:435:12 pthread_attr_setstackaddr 'int (pthread_attr_t *, void *)' extern
| |-ParmVarDecl 0x5609c29cc548 <col:39, col:55> col:55 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x5609c29cc5c8 <line:436:11, col:17> col:17 __stackaddr 'void *'
| |-NoThrowAttr 0x5609c29cc7b8 <line:437:22>
| |-NonNullAttr 0x5609c29cc810 <col:63, col:77> 1
| `-DeprecatedAttr 0x5609c29cc848 <col:97> "" ""
|-FunctionDecl 0x5609c29cca48 <line:438:1, line:440:82> line:438:12 pthread_attr_getstacksize 'int (const pthread_attr_t *restrict, size_t *restrict)' extern
| |-ParmVarDecl 0x5609c29cc898 <col:39, line:439:11> col:11 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x5609c29cc910 <col:19, col:38> col:38 __stacksize 'size_t *restrict'
| |-NoThrowAttr 0x5609c29ccaf8 <line:440:22>
| `-NonNullAttr 0x5609c29ccb50 <col:63, col:80> 1 2
|-FunctionDecl 0x5609c29cccd0 <line:441:1, line:443:79> line:441:12 pthread_attr_setstacksize 'int (pthread_attr_t *, size_t)' extern
| |-ParmVarDecl 0x5609c29ccb98 <col:39, col:55> col:55 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x5609c29ccc10 <line:442:11, col:18> col:18 __stacksize 'size_t':'unsigned long'
| |-NoThrowAttr 0x5609c29ccd80 <line:443:22>
| `-NonNullAttr 0x5609c29ccdd8 <col:63, col:77> 1
|-FunctionDecl 0x5609c29cd0c8 <line:444:1, line:447:85> line:444:12 pthread_attr_getstack 'int (const pthread_attr_t *restrict, void **restrict, size_t *restrict)' extern
| |-ParmVarDecl 0x5609c29cce28 <col:35, col:68> col:68 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x5609c29ccea8 <line:445:7, col:25> col:25 __stackaddr 'void **restrict'
| |-ParmVarDecl 0x5609c29ccf20 <line:446:7, col:26> col:26 __stacksize 'size_t *restrict'
| |-NoThrowAttr 0x5609c29cd180 <line:447:22>
| `-NonNullAttr 0x5609c29cd1d8 <col:63, col:83> 1 2 3
|-FunctionDecl 0x5609c29cd488 <line:448:1, line:449:100> line:448:12 pthread_attr_setstack 'int (pthread_attr_t *, void *, size_t)' extern
| |-ParmVarDecl 0x5609c29cd230 <col:35, col:51> col:51 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x5609c29cd2b0 <col:59, col:65> col:65 __stackaddr 'void *'
| |-ParmVarDecl 0x5609c29cd328 <line:449:7, col:14> col:14 __stacksize 'size_t':'unsigned long'
| |-NoThrowAttr 0x5609c29cd540 <col:43>
| `-NonNullAttr 0x5609c29cd598 <col:84, col:98> 1
|-FunctionDecl 0x5609c29cd858 <line:450:1, line:452:79> line:450:12 pthread_setschedparam 'int (pthread_t, int, const struct sched_param *)' extern
| |-ParmVarDecl 0x5609c29cd5e8 <col:35, col:45> col:45 __target_thread 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x5609c29cd668 <col:62, col:66> col:66 __policy 'int'
| |-ParmVarDecl 0x5609c29cd6f8 <line:451:7, col:33> col:33 __param 'const struct sched_param *'
| |-NoThrowAttr 0x5609c29cd910 <line:452:22>
| `-NonNullAttr 0x5609c29cd968 <col:63, col:77> 3
|-FunctionDecl 0x5609c29cdc78 <line:453:1, line:456:82> line:453:12 pthread_getschedparam 'int (pthread_t, int *restrict, struct sched_param *restrict)' extern
| |-ParmVarDecl 0x5609c29cd9e0 <col:35, col:45> col:45 __target_thread 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x5609c29cda60 <line:454:7, col:23> col:23 __policy 'int *restrict'
| |-ParmVarDecl 0x5609c29cdaf0 <line:455:7, col:38> col:38 __param 'struct sched_param *restrict'
| |-NoThrowAttr 0x5609c29cdd30 <line:456:22>
| `-NonNullAttr 0x5609c29cdd88 <col:63, col:80> 2 3
|-FunctionDecl 0x5609c29cdf78 <line:457:1, line:458:45> line:457:12 pthread_setschedprio 'int (pthread_t, int)' extern
| |-ParmVarDecl 0x5609c29cddd8 <col:34, col:44> col:44 __target_thread 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x5609c29cde58 <col:61, col:65> col:65 __prio 'int'
| `-NoThrowAttr 0x5609c29ce028 <line:458:22>
|-FunctionDecl 0x5609c29ce3f8 <line:459:1, line:460:71> line:459:12 pthread_once 'int (pthread_once_t *, void (*)(void))' extern
| |-ParmVarDecl 0x5609c29ce0f0 <col:26, col:42> col:42 __once_control 'pthread_once_t *'
| |-ParmVarDecl 0x5609c29ce290 <line:460:5, col:33> col:12 __init_routine 'void (*)(void)'
| `-NonNullAttr 0x5609c29ce4a8 <col:52, col:69> 1 2
|-FunctionDecl 0x5609c29ce650 <line:461:1, col:64> col:12 pthread_setcancelstate 'int (int, int *)' extern
| |-ParmVarDecl 0x5609c29ce530 <col:36, col:40> col:40 __state 'int'
| `-ParmVarDecl 0x5609c29ce5b0 <col:49, col:54> col:54 __oldstate 'int *'
|-FunctionDecl 0x5609c29ce838 <line:462:1, col:61> col:12 pthread_setcanceltype 'int (int, int *)' extern
| |-ParmVarDecl 0x5609c29ce718 <col:35, col:39> col:39 __type 'int'
| `-ParmVarDecl 0x5609c29ce798 <col:47, col:52> col:52 __oldtype 'int *'
|-FunctionDecl 0x5609c29ce9f0 <line:463:1, col:42> col:12 pthread_cancel 'int (pthread_t)' extern
| `-ParmVarDecl 0x5609c29ce8f8 <col:28, col:38> col:38 __th 'pthread_t':'unsigned long'
|-FunctionDecl 0x5609c29ceb30 <line:464:1, col:37> col:13 pthread_testcancel 'void (void)' extern
|-RecordDecl 0x5609c29cebd0 <line:465:9, line:473:1> line:465:9 struct definition
| |-RecordDecl 0x5609c29cec78 <line:467:3, line:471:3> line:467:3 struct definition
| | |-FieldDecl 0x5609c29ced68 <line:469:5, col:15> col:15 __cancel_jmp_buf '__jmp_buf':'long [8]'
| | `-FieldDecl 0x5609c29cedd0 <line:470:5, col:9> col:9 __mask_was_saved 'int'
| |-FieldDecl 0x5609c29cefa0 <line:467:3, line:471:23> col:5 __cancel_jmp_buf 'struct (anonymous struct at ./split_2/safe004_power.oepc_false-unreach-call.i:467:3) [1]'
| `-FieldDecl 0x5609c29cf098 <line:472:3, col:16> col:9 __pad 'void *[4]'
|-TypedefDecl 0x5609c29cf150 <line:465:1, line:473:3> col:3 referenced __pthread_unwind_buf_t 'struct __pthread_unwind_buf_t':'__pthread_unwind_buf_t'
| |-ElaboratedType 0x5609c29cf0f0 'struct __pthread_unwind_buf_t' sugar
| | `-RecordType 0x5609c29cec50 '__pthread_unwind_buf_t'
| |   `-Record 0x5609c29cebd0 ''
| `-AlignedAttr 0x5609c29cf1a8 <col:42> aligned
|   `-<<<NULL>>>
|-RecordDecl 0x5609c29cf220 <line:474:1, line:480:1> line:474:8 struct __pthread_cleanup_frame definition
| |-FieldDecl 0x5609c29cf380 <line:476:3, col:35> col:10 __cancel_routine 'void (*)(void *)'
| |-FieldDecl 0x5609c29cf3e8 <line:477:3, col:9> col:9 __cancel_arg 'void *'
| |-FieldDecl 0x5609c29cf450 <line:478:3, col:7> col:7 __do_it 'int'
| `-FieldDecl 0x5609c29cf4b8 <line:479:3, col:7> col:7 __cancel_type 'int'
|-FunctionDecl 0x5609c29cf6c0 <line:481:1, col:69> col:13 __pthread_register_cancel 'void (__pthread_unwind_buf_t *)' extern
| `-ParmVarDecl 0x5609c29cf5b0 <col:40, col:64> col:64 __buf '__pthread_unwind_buf_t *'
|-FunctionDecl 0x5609c29cf808 <line:483:1, col:71> col:13 __pthread_unregister_cancel 'void (__pthread_unwind_buf_t *)' extern
| `-ParmVarDecl 0x5609c29cf778 <col:42, col:66> col:66 __buf '__pthread_unwind_buf_t *'
|-FunctionDecl 0x5609c29cfa00 <line:485:1, line:487:31> line:485:13 __pthread_unwind_next 'void (__pthread_unwind_buf_t *) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x5609c29cf8c0 <col:36, col:60> col:60 __buf '__pthread_unwind_buf_t *'
| `-WeakAttr 0x5609c29cfaa8 <line:487:22>
|-RecordDecl 0x5609c29cfb00 <line:489:1, col:8> col:8 struct __jmp_buf_tag
|-FunctionDecl 0x5609c29cfe18 <line:490:1, col:98> col:12 __sigsetjmp 'int (struct __jmp_buf_tag *, int)' extern
| |-ParmVarDecl 0x5609c29cfc78 <col:25, col:47> col:47 __env 'struct __jmp_buf_tag *'
| |-ParmVarDecl 0x5609c29cfcf8 <col:54, col:58> col:58 __savemask 'int'
| |-NoThrowAttr 0x5609c29cfec8 <col:86>
| `-ReturnsTwiceAttr 0x5609c29cff20 <col:12> Implicit
|-FunctionDecl 0x5609c29d0248 <line:491:1, line:493:79> line:491:12 pthread_mutex_init 'int (pthread_mutex_t *, const pthread_mutexattr_t *)' extern
| |-ParmVarDecl 0x5609c29cfff0 <col:32, col:49> col:49 __mutex 'pthread_mutex_t *'
| |-ParmVarDecl 0x5609c29d0100 <line:492:11, col:38> col:38 __mutexattr 'const pthread_mutexattr_t *'
| |-NoThrowAttr 0x5609c29d02f8 <line:493:22>
| `-NonNullAttr 0x5609c29d0350 <col:63, col:77> 1
|-FunctionDecl 0x5609c29d04c8 <line:494:1, line:495:79> line:494:12 pthread_mutex_destroy 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x5609c29d0398 <col:35, col:52> col:52 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x5609c29d0570 <line:495:22>
| `-NonNullAttr 0x5609c29d05c8 <col:63, col:77> 1
|-FunctionDecl 0x5609c29d06d0 <line:496:1, line:497:68> line:496:12 pthread_mutex_trylock 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x5609c29d0618 <col:35, col:52> col:52 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x5609c29d0778 <line:497:22>
| `-NonNullAttr 0x5609c29d07d0 <col:52, col:66> 1
|-FunctionDecl 0x5609c29d08d0 <line:498:1, line:499:68> line:498:12 pthread_mutex_lock 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x5609c29d0818 <col:32, col:49> col:49 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x5609c29d0978 <line:499:22>
| `-NonNullAttr 0x5609c29d09d0 <col:52, col:66> 1
|-FunctionDecl 0x5609c29d1c28 <line:500:1, line:502:85> line:500:12 pthread_mutex_timedlock 'int (pthread_mutex_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x5609c29d1a38 <col:37, col:65> col:65 __mutex 'pthread_mutex_t *restrict'
| |-ParmVarDecl 0x5609c29d1ac8 <line:501:9, line:502:9> col:9 __abstime 'const struct timespec *restrict'
| |-NoThrowAttr 0x5609c29d1cd8 <col:36>
| `-NonNullAttr 0x5609c29d1d30 <col:66, col:83> 1 2
|-FunctionDecl 0x5609c29d1e30 <line:503:1, line:504:68> line:503:12 pthread_mutex_unlock 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x5609c29d1d78 <col:34, col:51> col:51 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x5609c29d1ed8 <line:504:22>
| `-NonNullAttr 0x5609c29d1f30 <col:52, col:66> 1
|-FunctionDecl 0x5609c29d21c8 <line:505:1, line:508:82> line:505:12 pthread_mutex_getprioceiling 'int (const pthread_mutex_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x5609c29d1fe0 <col:42, line:506:18> col:18 __mutex 'const pthread_mutex_t *restrict'
| |-ParmVarDecl 0x5609c29d2060 <line:507:7, col:23> col:23 __prioceiling 'int *restrict'
| |-NoThrowAttr 0x5609c29d2278 <line:508:22>
| `-NonNullAttr 0x5609c29d22d0 <col:63, col:80> 1 2
|-FunctionDecl 0x5609c29d2598 <line:509:1, line:512:82> line:509:12 pthread_mutex_setprioceiling 'int (pthread_mutex_t *restrict, int, int *restrict)' extern
| |-ParmVarDecl 0x5609c29d2318 <col:42, col:70> col:70 __mutex 'pthread_mutex_t *restrict'
| |-ParmVarDecl 0x5609c29d2398 <line:510:7, col:11> col:11 __prioceiling 'int'
| |-ParmVarDecl 0x5609c29d2418 <line:511:7, col:23> col:23 __old_ceiling 'int *restrict'
| |-NoThrowAttr 0x5609c29d2650 <line:512:22>
| `-NonNullAttr 0x5609c29d26a8 <col:63, col:80> 1 3
|-FunctionDecl 0x5609c29d27b0 <line:513:1, line:514:79> line:513:12 pthread_mutex_consistent 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x5609c29d26f8 <col:38, col:55> col:55 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x5609c29d2858 <line:514:22>
| `-NonNullAttr 0x5609c29d28b0 <col:63, col:77> 1
|-FunctionDecl 0x5609c29d2ad8 <line:515:1, line:516:79> line:515:12 pthread_mutexattr_init 'int (pthread_mutexattr_t *)' extern
| |-ParmVarDecl 0x5609c29d2960 <col:36, col:57> col:57 __attr 'pthread_mutexattr_t *'
| |-NoThrowAttr 0x5609c29d2b80 <line:516:22>
| `-NonNullAttr 0x5609c29d2bd8 <col:63, col:77> 1
|-FunctionDecl 0x5609c29d2ce0 <line:517:1, line:518:79> line:517:12 pthread_mutexattr_destroy 'int (pthread_mutexattr_t *)' extern
| |-ParmVarDecl 0x5609c29d2c28 <col:39, col:60> col:60 __attr 'pthread_mutexattr_t *'
| |-NoThrowAttr 0x5609c29d2d88 <line:518:22>
| `-NonNullAttr 0x5609c29d2de0 <col:63, col:77> 1
|-FunctionDecl 0x5609c29d3008 <line:519:1, line:522:82> line:519:12 pthread_mutexattr_getpshared 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x5609c29d2e28 <col:42, line:520:18> col:18 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x5609c29d2ea8 <line:521:7, col:23> col:23 __pshared 'int *restrict'
| |-NoThrowAttr 0x5609c29d30b8 <line:522:22>
| `-NonNullAttr 0x5609c29d3110 <col:63, col:80> 1 2
|-FunctionDecl 0x5609c29d3318 <line:523:1, line:525:79> line:523:12 pthread_mutexattr_setpshared 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x5609c29d3158 <col:42, col:63> col:63 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x5609c29d31d8 <line:524:7, col:11> col:11 __pshared 'int'
| |-NoThrowAttr 0x5609c29d33c8 <line:525:22>
| `-NonNullAttr 0x5609c29d3420 <col:63, col:77> 1
|-FunctionDecl 0x5609c29d35c8 <line:526:1, line:528:82> line:526:12 pthread_mutexattr_gettype 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x5609c29d3468 <col:39, line:527:11> col:11 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x5609c29d34e8 <col:19, col:35> col:35 __kind 'int *restrict'
| |-NoThrowAttr 0x5609c29d3678 <line:528:22>
| `-NonNullAttr 0x5609c29d36d0 <col:63, col:80> 1 2
|-FunctionDecl 0x5609c29d3858 <line:529:1, line:530:79> line:529:12 pthread_mutexattr_settype 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x5609c29d3718 <col:39, col:60> col:60 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x5609c29d3798 <col:68, col:72> col:72 __kind 'int'
| |-NoThrowAttr 0x5609c29d3908 <line:530:22>
| `-NonNullAttr 0x5609c29d3960 <col:63, col:77> 1
|-FunctionDecl 0x5609c29d3b20 <line:531:1, line:534:82> line:531:12 pthread_mutexattr_getprotocol 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x5609c29d39a8 <col:43, line:532:19> col:19 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x5609c29d3a40 <line:533:8, col:24> col:24 __protocol 'int *restrict'
| |-NoThrowAttr 0x5609c29d3bd0 <line:534:22>
| `-NonNullAttr 0x5609c29d3c28 <col:63, col:80> 1 2
|-FunctionDecl 0x5609c29d3db8 <line:535:1, line:537:79> line:535:12 pthread_mutexattr_setprotocol 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x5609c29d3c78 <col:43, col:64> col:64 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x5609c29d3cf8 <line:536:8, col:12> col:12 __protocol 'int'
| |-NoThrowAttr 0x5609c29d3e68 <line:537:22>
| `-NonNullAttr 0x5609c29d3ec0 <col:63, col:77> 1
|-FunctionDecl 0x5609c29d4068 <line:538:1, line:541:82> line:538:12 pthread_mutexattr_getprioceiling 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x5609c29d3f08 <col:46, line:539:22> col:22 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x5609c29d3f88 <line:540:11, col:27> col:27 __prioceiling 'int *restrict'
| |-NoThrowAttr 0x5609c29d4118 <line:541:22>
| `-NonNullAttr 0x5609c29d4170 <col:63, col:80> 1 2
|-FunctionDecl 0x5609c29d42f8 <line:542:1, line:544:79> line:542:12 pthread_mutexattr_setprioceiling 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x5609c29d41b8 <col:46, col:67> col:67 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x5609c29d4238 <line:543:11, col:15> col:15 __prioceiling 'int'
| |-NoThrowAttr 0x5609c29d43a8 <line:544:22>
| `-NonNullAttr 0x5609c29d4400 <col:63, col:77> 1
|-FunctionDecl 0x5609c29d45e8 <line:545:1, line:547:82> line:545:12 pthread_mutexattr_getrobust 'int (const pthread_mutexattr_t *, int *)' extern
| |-ParmVarDecl 0x5609c29d4448 <col:41, col:68> col:68 __attr 'const pthread_mutexattr_t *'
| |-ParmVarDecl 0x5609c29d44c8 <line:546:6, col:11> col:11 __robustness 'int *'
| |-NoThrowAttr 0x5609c29d4698 <line:547:22>
| `-NonNullAttr 0x5609c29d46f0 <col:63, col:80> 1 2
|-FunctionDecl 0x5609c29d4878 <line:548:1, line:550:79> line:548:12 pthread_mutexattr_setrobust 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x5609c29d4738 <col:41, col:62> col:62 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x5609c29d47b8 <line:549:6, col:10> col:10 __robustness 'int'
| |-NoThrowAttr 0x5609c29d4928 <line:550:22>
| `-NonNullAttr 0x5609c29d4980 <col:63, col:77> 1
|-FunctionDecl 0x5609c29d5cf8 <line:551:1, line:553:86> line:551:12 pthread_rwlock_init 'int (pthread_rwlock_t *restrict, const pthread_rwlockattr_t *restrict)' extern
| |-ParmVarDecl 0x5609c29d5aa0 <col:33, col:62> col:62 __rwlock 'pthread_rwlock_t *restrict'
| |-ParmVarDecl 0x5609c29d5bb0 <line:552:5, line:553:5> col:5 __attr 'const pthread_rwlockattr_t *restrict'
| |-NoThrowAttr 0x5609c29d5da8 <col:29>
| `-NonNullAttr 0x5609c29d5e00 <col:70, col:84> 1
|-FunctionDecl 0x5609c29d5f78 <line:554:1, line:555:79> line:554:12 pthread_rwlock_destroy 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x5609c29d5e48 <col:36, col:54> col:54 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x5609c29d6020 <line:555:22>
| `-NonNullAttr 0x5609c29d6078 <col:63, col:77> 1
|-FunctionDecl 0x5609c29d6180 <line:556:1, line:557:68> line:556:12 pthread_rwlock_rdlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x5609c29d60c8 <col:35, col:53> col:53 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x5609c29d6228 <line:557:22>
| `-NonNullAttr 0x5609c29d6280 <col:52, col:66> 1
|-FunctionDecl 0x5609c29d6380 <line:558:1, line:559:65> line:558:12 pthread_rwlock_tryrdlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x5609c29d62c8 <col:38, col:56> col:56 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x5609c29d6428 <line:559:19>
| `-NonNullAttr 0x5609c29d6480 <col:49, col:63> 1
|-FunctionDecl 0x5609c29d66b8 <line:560:1, line:562:88> line:560:12 pthread_rwlock_timedrdlock 'int (pthread_rwlock_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x5609c29d64c8 <col:40, col:69> col:69 __rwlock 'pthread_rwlock_t *restrict'
| |-ParmVarDecl 0x5609c29d6558 <line:561:12, line:562:12> col:12 __abstime 'const struct timespec *restrict'
| |-NoThrowAttr 0x5609c29d6768 <col:39>
| `-NonNullAttr 0x5609c29d67c0 <col:69, col:86> 1 2
|-FunctionDecl 0x5609c29d68c0 <line:563:1, line:564:68> line:563:12 pthread_rwlock_wrlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x5609c29d6808 <col:35, col:53> col:53 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x5609c29d6968 <line:564:22>
| `-NonNullAttr 0x5609c29d69c0 <col:52, col:66> 1
|-FunctionDecl 0x5609c29d6b28 <line:565:1, line:566:68> line:565:12 pthread_rwlock_trywrlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x5609c29d6a70 <col:38, col:56> col:56 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x5609c29d6bd0 <line:566:22>
| `-NonNullAttr 0x5609c29d6c28 <col:52, col:66> 1
|-FunctionDecl 0x5609c29d6de8 <line:567:1, line:569:88> line:567:12 pthread_rwlock_timedwrlock 'int (pthread_rwlock_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x5609c29d6c78 <col:40, col:69> col:69 __rwlock 'pthread_rwlock_t *restrict'
| |-ParmVarDecl 0x5609c29d6d08 <line:568:12, line:569:12> col:12 __abstime 'const struct timespec *restrict'
| |-NoThrowAttr 0x5609c29d6e98 <col:39>
| `-NonNullAttr 0x5609c29d6ef0 <col:69, col:86> 1 2
|-FunctionDecl 0x5609c29d6ff0 <line:570:1, line:571:68> line:570:12 pthread_rwlock_unlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x5609c29d6f38 <col:35, col:53> col:53 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x5609c29d7098 <line:571:22>
| `-NonNullAttr 0x5609c29d70f0 <col:52, col:66> 1
|-FunctionDecl 0x5609c29d72d8 <line:572:1, line:573:79> line:572:12 pthread_rwlockattr_init 'int (pthread_rwlockattr_t *)' extern
| |-ParmVarDecl 0x5609c29d71a0 <col:37, col:59> col:59 __attr 'pthread_rwlockattr_t *'
| |-NoThrowAttr 0x5609c29d7380 <line:573:22>
| `-NonNullAttr 0x5609c29d73d8 <col:63, col:77> 1
|-FunctionDecl 0x5609c29d74e0 <line:574:1, line:575:79> line:574:12 pthread_rwlockattr_destroy 'int (pthread_rwlockattr_t *)' extern
| |-ParmVarDecl 0x5609c29d7428 <col:40, col:62> col:62 __attr 'pthread_rwlockattr_t *'
| |-NoThrowAttr 0x5609c29d7588 <line:575:22>
| `-NonNullAttr 0x5609c29d75e0 <col:63, col:77> 1
|-FunctionDecl 0x5609c29d7808 <line:576:1, line:579:82> line:576:12 pthread_rwlockattr_getpshared 'int (const pthread_rwlockattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x5609c29d7628 <col:43, line:577:19> col:19 __attr 'const pthread_rwlockattr_t *restrict'
| |-ParmVarDecl 0x5609c29d76a8 <line:578:8, col:24> col:24 __pshared 'int *restrict'
| |-NoThrowAttr 0x5609c29d78b8 <line:579:22>
| `-NonNullAttr 0x5609c29d7910 <col:63, col:80> 1 2
|-FunctionDecl 0x5609c29d7b38 <line:580:1, line:582:79> line:580:12 pthread_rwlockattr_setpshared 'int (pthread_rwlockattr_t *, int)' extern
| |-ParmVarDecl 0x5609c29d7958 <col:43, col:65> col:65 __attr 'pthread_rwlockattr_t *'
| |-ParmVarDecl 0x5609c29d79d8 <line:581:8, col:12> col:12 __pshared 'int'
| |-NoThrowAttr 0x5609c29d7be8 <line:582:22>
| `-NonNullAttr 0x5609c29d7c40 <col:63, col:77> 1
|-FunctionDecl 0x5609c29d7de8 <line:583:1, line:586:82> line:583:12 pthread_rwlockattr_getkind_np 'int (const pthread_rwlockattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x5609c29d7c88 <col:43, line:584:19> col:19 __attr 'const pthread_rwlockattr_t *restrict'
| |-ParmVarDecl 0x5609c29d7d08 <line:585:8, col:24> col:24 __pref 'int *restrict'
| |-NoThrowAttr 0x5609c29d7e98 <line:586:22>
| `-NonNullAttr 0x5609c29d7ef0 <col:63, col:80> 1 2
|-FunctionDecl 0x5609c29d8078 <line:587:1, line:588:93> line:587:12 pthread_rwlockattr_setkind_np 'int (pthread_rwlockattr_t *, int)' extern
| |-ParmVarDecl 0x5609c29d7f38 <col:43, col:65> col:65 __attr 'pthread_rwlockattr_t *'
| |-ParmVarDecl 0x5609c29d7fb8 <line:588:8, col:12> col:12 __pref 'int'
| |-NoThrowAttr 0x5609c29d8128 <col:36>
| `-NonNullAttr 0x5609c29d8180 <col:77, col:91> 1
|-FunctionDecl 0x5609c29d84b8 <line:589:1, line:591:79> line:589:12 pthread_cond_init 'int (pthread_cond_t *restrict, const pthread_condattr_t *restrict)' extern
| |-ParmVarDecl 0x5609c29d8260 <col:31, col:58> col:58 __cond 'pthread_cond_t *restrict'
| |-ParmVarDecl 0x5609c29d8370 <line:590:10, col:47> col:47 __cond_attr 'const pthread_condattr_t *restrict'
| |-NoThrowAttr 0x5609c29d8568 <line:591:22>
| `-NonNullAttr 0x5609c29d85c0 <col:63, col:77> 1
|-FunctionDecl 0x5609c29d8738 <line:592:1, line:593:79> line:592:12 pthread_cond_destroy 'int (pthread_cond_t *)' extern
| |-ParmVarDecl 0x5609c29d8608 <col:34, col:50> col:50 __cond 'pthread_cond_t *'
| |-NoThrowAttr 0x5609c29d87e0 <line:593:22>
| `-NonNullAttr 0x5609c29d8838 <col:63, col:77> 1
|-FunctionDecl 0x5609c29d8940 <line:594:1, line:595:68> line:594:12 pthread_cond_signal 'int (pthread_cond_t *)' extern
| |-ParmVarDecl 0x5609c29d8888 <col:33, col:49> col:49 __cond 'pthread_cond_t *'
| |-NoThrowAttr 0x5609c29d89e8 <line:595:22>
| `-NonNullAttr 0x5609c29d8a40 <col:52, col:66> 1
|-FunctionDecl 0x5609c29d8b58 <line:596:1, line:597:68> line:596:12 pthread_cond_broadcast 'int (pthread_cond_t *)' extern
| |-ParmVarDecl 0x5609c29d8aa0 <col:36, col:52> col:52 __cond 'pthread_cond_t *'
| |-NoThrowAttr 0x5609c29d8c00 <line:597:22>
| `-NonNullAttr 0x5609c29d8c58 <col:52, col:66> 1
|-FunctionDecl 0x5609c29d8e88 <line:598:1, line:600:41> line:598:12 pthread_cond_wait 'int (pthread_cond_t *restrict, pthread_mutex_t *restrict)' extern
| |-ParmVarDecl 0x5609c29d8ca8 <col:31, col:58> col:58 __cond 'pthread_cond_t *restrict'
| |-ParmVarDecl 0x5609c29d8d20 <line:599:10, col:38> col:38 __mutex 'pthread_mutex_t *restrict'
| `-NonNullAttr 0x5609c29d8f38 <line:600:22, col:39> 1 2
|-FunctionDecl 0x5609c29d9268 <line:601:1, line:604:44> line:601:12 pthread_cond_timedwait 'int (pthread_cond_t *restrict, pthread_mutex_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x5609c29d8fb8 <col:36, col:63> col:63 __cond 'pthread_cond_t *restrict'
| |-ParmVarDecl 0x5609c29d9030 <line:602:8, col:36> col:36 __mutex 'pthread_mutex_t *restrict'
| |-ParmVarDecl 0x5609c29d90c0 <line:603:8, col:42> col:42 __abstime 'const struct timespec *restrict'
| `-NonNullAttr 0x5609c29d9320 <line:604:22, col:42> 1 2 3
|-FunctionDecl 0x5609c29d9538 <line:605:1, line:606:79> line:605:12 pthread_condattr_init 'int (pthread_condattr_t *)' extern
| |-ParmVarDecl 0x5609c29d9400 <col:35, col:55> col:55 __attr 'pthread_condattr_t *'
| |-NoThrowAttr 0x5609c29d95e0 <line:606:22>
| `-NonNullAttr 0x5609c29d9638 <col:63, col:77> 1
|-FunctionDecl 0x5609c29d9740 <line:607:1, line:608:79> line:607:12 pthread_condattr_destroy 'int (pthread_condattr_t *)' extern
| |-ParmVarDecl 0x5609c29d9688 <col:38, col:58> col:58 __attr 'pthread_condattr_t *'
| |-NoThrowAttr 0x5609c29d97e8 <line:608:22>
| `-NonNullAttr 0x5609c29d9840 <col:63, col:77> 1
|-FunctionDecl 0x5609c29d9aa0 <line:609:1, line:612:82> line:609:12 pthread_condattr_getpshared 'int (const pthread_condattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x5609c29d9888 <col:41, line:610:17> col:17 __attr 'const pthread_condattr_t *restrict'
| |-ParmVarDecl 0x5609c29d9908 <line:611:6, col:22> col:22 __pshared 'int *restrict'
| |-NoThrowAttr 0x5609c29d9b50 <line:612:22>
| `-NonNullAttr 0x5609c29d9ba8 <col:63, col:80> 1 2
|-FunctionDecl 0x5609c29d9db8 <line:613:1, line:614:94> line:613:12 pthread_condattr_setpshared 'int (pthread_condattr_t *, int)' extern
| |-ParmVarDecl 0x5609c29d9bf8 <col:41, col:61> col:61 __attr 'pthread_condattr_t *'
| |-ParmVarDecl 0x5609c29d9c78 <line:614:6, col:10> col:10 __pshared 'int'
| |-NoThrowAttr 0x5609c29d9e68 <col:37>
| `-NonNullAttr 0x5609c29d9ec0 <col:78, col:92> 1
|-FunctionDecl 0x5609c29da0d8 <line:615:1, line:618:82> line:615:12 pthread_condattr_getclock 'int (const pthread_condattr_t *restrict, __clockid_t *restrict)' extern
| |-ParmVarDecl 0x5609c29d9f08 <col:39, line:616:22> col:22 __attr 'const pthread_condattr_t *restrict'
| |-ParmVarDecl 0x5609c29d9fb0 <line:617:11, col:35> col:35 __clock_id '__clockid_t *restrict'
| |-NoThrowAttr 0x5609c29da188 <line:618:22>
| `-NonNullAttr 0x5609c29da1e0 <col:63, col:80> 1 2
|-FunctionDecl 0x5609c29da3a8 <line:619:1, line:621:79> line:619:12 pthread_condattr_setclock 'int (pthread_condattr_t *, __clockid_t)' extern
| |-ParmVarDecl 0x5609c29da228 <col:39, col:59> col:59 __attr 'pthread_condattr_t *'
| |-ParmVarDecl 0x5609c29da2a0 <line:620:11, col:23> col:23 __clock_id '__clockid_t':'int'
| |-NoThrowAttr 0x5609c29da458 <line:621:22>
| `-NonNullAttr 0x5609c29da4b0 <col:63, col:77> 1
|-FunctionDecl 0x5609c29da758 <line:622:1, line:623:79> line:622:12 pthread_spin_init 'int (pthread_spinlock_t *, int)' extern
| |-ParmVarDecl 0x5609c29da590 <col:31, col:51> col:51 __lock 'pthread_spinlock_t *'
| |-ParmVarDecl 0x5609c29da610 <col:59, col:63> col:63 __pshared 'int'
| |-NoThrowAttr 0x5609c29da808 <line:623:22>
| `-NonNullAttr 0x5609c29da860 <col:63, col:77> 1
|-FunctionDecl 0x5609c29da9d8 <line:624:1, line:625:79> line:624:12 pthread_spin_destroy 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x5609c29da8a8 <col:34, col:54> col:54 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x5609c29daab0 <line:625:22>
| `-NonNullAttr 0x5609c29dab08 <col:63, col:77> 1
|-FunctionDecl 0x5609c29dac10 <line:626:1, line:627:68> line:626:12 pthread_spin_lock 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x5609c29dab58 <col:31, col:51> col:51 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x5609c29dacb8 <line:627:22>
| `-NonNullAttr 0x5609c29dad10 <col:52, col:66> 1
|-FunctionDecl 0x5609c29dae10 <line:628:1, line:629:68> line:628:12 pthread_spin_trylock 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x5609c29dad58 <col:34, col:54> col:54 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x5609c29daeb8 <line:629:22>
| `-NonNullAttr 0x5609c29daf10 <col:52, col:66> 1
|-FunctionDecl 0x5609c29db010 <line:630:1, line:631:68> line:630:12 pthread_spin_unlock 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x5609c29daf58 <col:33, col:53> col:53 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x5609c29db0b8 <line:631:22>
| `-NonNullAttr 0x5609c29db110 <col:52, col:66> 1
|-FunctionDecl 0x5609c29db4e8 <line:632:1, line:635:79> line:632:12 pthread_barrier_init 'int (pthread_barrier_t *restrict, const pthread_barrierattr_t *restrict, unsigned int)' extern
| |-ParmVarDecl 0x5609c29db1f0 <col:34, col:64> col:64 __barrier 'pthread_barrier_t *restrict'
| |-ParmVarDecl 0x5609c29db300 <line:633:6, line:634:6> col:6 __attr 'const pthread_barrierattr_t *restrict'
| |-ParmVarDecl 0x5609c29db380 <col:14, col:27> col:27 __count 'unsigned int'
| |-NoThrowAttr 0x5609c29db5a0 <line:635:22>
| `-NonNullAttr 0x5609c29db5f8 <col:63, col:77> 1
|-FunctionDecl 0x5609c29db778 <line:636:1, line:637:79> line:636:12 pthread_barrier_destroy 'int (pthread_barrier_t *)' extern
| |-ParmVarDecl 0x5609c29db648 <col:37, col:56> col:56 __barrier 'pthread_barrier_t *'
| |-NoThrowAttr 0x5609c29db820 <line:637:22>
| `-NonNullAttr 0x5609c29db878 <col:63, col:77> 1
|-FunctionDecl 0x5609c29db980 <line:638:1, line:639:68> line:638:12 pthread_barrier_wait 'int (pthread_barrier_t *)' extern
| |-ParmVarDecl 0x5609c29db8c8 <col:34, col:53> col:53 __barrier 'pthread_barrier_t *'
| |-NoThrowAttr 0x5609c29dba28 <line:639:22>
| `-NonNullAttr 0x5609c29dba80 <col:52, col:66> 1
|-FunctionDecl 0x5609c29dcc88 <line:640:1, line:641:79> line:640:12 pthread_barrierattr_init 'int (pthread_barrierattr_t *)' extern
| |-ParmVarDecl 0x5609c29dcb50 <col:38, col:61> col:61 __attr 'pthread_barrierattr_t *'
| |-NoThrowAttr 0x5609c29dcd30 <line:641:22>
| `-NonNullAttr 0x5609c29dcd88 <col:63, col:77> 1
|-FunctionDecl 0x5609c29dce90 <line:642:1, line:643:79> line:642:12 pthread_barrierattr_destroy 'int (pthread_barrierattr_t *)' extern
| |-ParmVarDecl 0x5609c29dcdd8 <col:41, col:64> col:64 __attr 'pthread_barrierattr_t *'
| |-NoThrowAttr 0x5609c29dcf38 <line:643:22>
| `-NonNullAttr 0x5609c29dcf90 <col:63, col:77> 1
|-FunctionDecl 0x5609c29dd1b8 <line:644:1, line:647:82> line:644:12 pthread_barrierattr_getpshared 'int (const pthread_barrierattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x5609c29dcfd8 <col:44, line:645:20> col:20 __attr 'const pthread_barrierattr_t *restrict'
| |-ParmVarDecl 0x5609c29dd058 <line:646:9, col:25> col:25 __pshared 'int *restrict'
| |-NoThrowAttr 0x5609c29dd268 <line:647:22>
| `-NonNullAttr 0x5609c29dd2c0 <col:63, col:80> 1 2
|-FunctionDecl 0x5609c29dd4c8 <line:648:1, line:650:79> line:648:12 pthread_barrierattr_setpshared 'int (pthread_barrierattr_t *, int)' extern
| |-ParmVarDecl 0x5609c29dd308 <col:44, col:67> col:67 __attr 'pthread_barrierattr_t *'
| |-ParmVarDecl 0x5609c29dd388 <line:649:9, col:13> col:13 __pshared 'int'
| |-NoThrowAttr 0x5609c29dd578 <line:650:22>
| `-NonNullAttr 0x5609c29dd5d0 <col:63, col:77> 1
|-FunctionDecl 0x5609c29dd918 <line:651:1, line:653:79> line:651:12 pthread_key_create 'int (pthread_key_t *, void (*)(void *))' extern
| |-ParmVarDecl 0x5609c29dd6b0 <col:32, col:47> col:47 __key 'pthread_key_t *'
| |-ParmVarDecl 0x5609c29dd7d0 <line:652:11, col:43> col:18 __destr_function 'void (*)(void *)'
| |-NoThrowAttr 0x5609c29dd9c8 <line:653:22>
| `-NonNullAttr 0x5609c29dda20 <col:63, col:77> 1
|-FunctionDecl 0x5609c29ddb88 <line:654:1, col:92> col:12 pthread_key_delete 'int (pthread_key_t)' extern
| |-ParmVarDecl 0x5609c29dda68 <col:32, col:46> col:46 __key 'pthread_key_t':'unsigned int'
| `-NoThrowAttr 0x5609c29ddc30 <col:69>
|-FunctionDecl 0x5609c29ddda8 <line:655:1, col:95> col:14 pthread_getspecific 'void *(pthread_key_t)' extern
| |-ParmVarDecl 0x5609c29ddc98 <col:35, col:49> col:49 __key 'pthread_key_t':'unsigned int'
| `-NoThrowAttr 0x5609c29dde50 <col:72>
|-FunctionDecl 0x5609c29de088 <line:656:1, line:657:67> line:656:12 pthread_setspecific 'int (pthread_key_t, const void *)' extern
| |-ParmVarDecl 0x5609c29ddeb8 <col:33, col:47> col:47 __key 'pthread_key_t':'unsigned int'
| |-ParmVarDecl 0x5609c29ddf68 <line:657:5, col:17> col:17 __pointer 'const void *'
| `-NoThrowAttr 0x5609c29de138 <col:44>
|-FunctionDecl 0x5609c29de358 <line:658:1, line:660:79> line:658:12 pthread_getcpuclockid 'int (pthread_t, __clockid_t *)' extern
| |-ParmVarDecl 0x5609c29de1a0 <col:35, col:45> col:45 __thread_id 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x5609c29de218 <line:659:7, col:20> col:20 __clock_id '__clockid_t *'
| |-NoThrowAttr 0x5609c29de408 <line:660:22>
| `-NonNullAttr 0x5609c29de460 <col:63, col:77> 2
|-FunctionDecl 0x5609c29de8a8 <line:661:1, line:663:70> line:661:12 pthread_atfork 'int (void (*)(void), void (*)(void), void (*)(void))' extern
| |-ParmVarDecl 0x5609c29de540 <col:28, col:51> col:35 __prepare 'void (*)(void)'
| |-ParmVarDecl 0x5609c29de650 <line:662:7, col:29> col:14 __parent 'void (*)(void)'
| |-ParmVarDecl 0x5609c29de760 <line:663:7, col:28> col:14 __child 'void (*)(void)'
| `-NoThrowAttr 0x5609c29de960 <col:47>
|-FunctionDecl 0x5609c29deaf0 <line:665:1, col:20> col:8 used P0 'void *(void *)'
| `-ParmVarDecl 0x5609c29de9d0 <col:11, col:17> col:17 arg 'void *'
|-FunctionDecl 0x5609c29dec48 <line:666:1, col:20> col:8 used P1 'void *(void *)'
| `-ParmVarDecl 0x5609c29debb0 <col:11, col:17> col:17 arg 'void *'
|-FunctionDecl 0x5609c29deda0 <line:667:1, col:20> col:8 used P2 'void *(void *)'
| `-ParmVarDecl 0x5609c29ded08 <col:11, col:17> col:17 arg 'void *'
|-FunctionDecl 0x5609c29dee68 <line:668:1, col:12> col:6 fence 'void ()'
|-FunctionDecl 0x5609c29def28 <line:669:1, col:12> col:6 isync 'void ()'
|-FunctionDecl 0x5609c29defe8 <line:670:1, col:14> col:6 lwfence 'void ()'
|-VarDecl 0x5609c29df0a0 <line:671:1, col:5> col:5 used __unbuffered_cnt 'int'
|-VarDecl 0x5609c29df120 prev 0x5609c29df0a0 <line:672:1, col:24> col:5 used __unbuffered_cnt 'int' cinit
| `-IntegerLiteral 0x5609c29df188 <col:24> 'int' 0
|-VarDecl 0x5609c29df1c0 <line:673:1, col:5> col:5 used __unbuffered_p2_EAX 'int'
|-VarDecl 0x5609c29df240 prev 0x5609c29df1c0 <line:674:1, col:27> col:5 used __unbuffered_p2_EAX 'int' cinit
| `-IntegerLiteral 0x5609c29df2a8 <col:27> 'int' 0
|-VarDecl 0x5609c29df2e0 <line:675:1, col:5> col:5 used __unbuffered_p2_EBX 'int'
|-VarDecl 0x5609c29df360 prev 0x5609c29df2e0 <line:676:1, col:27> col:5 used __unbuffered_p2_EBX 'int' cinit
| `-IntegerLiteral 0x5609c29df3c8 <col:27> 'int' 0
|-VarDecl 0x5609c29df3f8 <line:677:1, col:7> col:7 used main$tmp_guard0 '_Bool'
|-VarDecl 0x5609c29df470 <line:678:1, col:7> col:7 used main$tmp_guard1 '_Bool'
|-VarDecl 0x5609c29df4f0 <line:679:1, col:5> col:5 used x 'int'
|-VarDecl 0x5609c29df570 prev 0x5609c29df4f0 <line:680:1, col:9> col:5 used x 'int' cinit
| `-IntegerLiteral 0x5609c29df5d8 <col:9> 'int' 0
|-VarDecl 0x5609c29df610 <line:681:1, col:5> col:5 used y 'int'
|-VarDecl 0x5609c29df690 prev 0x5609c29df610 <line:682:1, col:9> col:5 used y 'int' cinit
| `-IntegerLiteral 0x5609c29df6f8 <col:9> 'int' 0
|-VarDecl 0x5609c29df728 <line:683:1, col:7> col:7 used y$flush_delayed '_Bool'
|-VarDecl 0x5609c29df7a8 <line:684:1, col:5> col:5 used y$mem_tmp 'int'
|-VarDecl 0x5609c29df820 <line:685:1, col:7> col:7 used y$r_buff0_thd0 '_Bool'
|-VarDecl 0x5609c29df898 <line:686:1, col:7> col:7 used y$r_buff0_thd1 '_Bool'
|-VarDecl 0x5609c29df910 <line:687:1, col:7> col:7 used y$r_buff0_thd2 '_Bool'
|-VarDecl 0x5609c29df988 <line:688:1, col:7> col:7 used y$r_buff0_thd3 '_Bool'
|-VarDecl 0x5609c29dfa00 <line:689:1, col:7> col:7 used y$r_buff1_thd0 '_Bool'
|-VarDecl 0x5609c29dfa78 <line:690:1, col:7> col:7 used y$r_buff1_thd1 '_Bool'
|-VarDecl 0x5609c29dfb00 <line:691:1, col:7> col:7 used y$r_buff1_thd2 '_Bool'
|-VarDecl 0x5609c29dfb78 <line:692:1, col:7> col:7 used y$r_buff1_thd3 '_Bool'
|-VarDecl 0x5609c29dfbf0 <line:693:1, col:7> col:7 y$read_delayed '_Bool'
|-VarDecl 0x5609c29dfc70 <line:694:1, col:6> col:6 y$read_delayed_var 'int *'
|-VarDecl 0x5609c29dfcf0 <line:695:1, col:5> col:5 used y$w_buff0 'int'
|-VarDecl 0x5609c29dfd68 <line:696:1, col:7> col:7 used y$w_buff0_used '_Bool'
|-VarDecl 0x5609c29dfde8 <line:697:1, col:5> col:5 used y$w_buff1 'int'
|-VarDecl 0x5609c29dfe60 <line:698:1, col:7> col:7 used y$w_buff1_used '_Bool'
|-VarDecl 0x5609c29dfed8 <line:699:1, col:7> col:7 used weak$$choice0 '_Bool'
|-VarDecl 0x5609c29dff50 <line:700:1, col:7> col:7 used weak$$choice2 '_Bool'
|-FunctionDecl 0x5609c29e0068 prev 0x5609c29deaf0 <line:701:1, line:729:1> line:701:8 used P0 'void *(void *)'
| |-ParmVarDecl 0x5609c29dffd0 <col:11, col:17> col:17 arg 'void *'
| `-CompoundStmt 0x5609c29e1898 <line:702:1, line:729:1>
|   |-CallExpr 0x5609c29e0178 <line:703:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x5609c29e0160 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5609c29e0110 <col:3> 'void ()' Function 0x5609c2985e40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x5609c29e01f0 <line:704:3, col:15> 'int' '='
|   | |-DeclRefExpr 0x5609c29e0198 <col:3> 'int' lvalue Var 0x5609c29dfde8 'y$w_buff1' 'int'
|   | `-ImplicitCastExpr 0x5609c29e01d8 <col:15> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x5609c29e01b8 <col:15> 'int' lvalue Var 0x5609c29dfcf0 'y$w_buff0' 'int'
|   |-BinaryOperator 0x5609c29e0250 <line:705:3, col:15> 'int' '='
|   | |-DeclRefExpr 0x5609c29e0210 <col:3> 'int' lvalue Var 0x5609c29dfcf0 'y$w_buff0' 'int'
|   | `-IntegerLiteral 0x5609c29e0230 <col:15> 'int' 2
|   |-BinaryOperator 0x5609c29e02c8 <line:706:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x5609c29e0270 <col:3> '_Bool' lvalue Var 0x5609c29dfe60 'y$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x5609c29e02b0 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x5609c29e0290 <col:20> '_Bool' lvalue Var 0x5609c29dfd68 'y$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x5609c29e0360 <line:707:3, col:27> '_Bool' '='
|   | |-DeclRefExpr 0x5609c29e02e8 <col:3> '_Bool' lvalue Var 0x5609c29dfd68 'y$w_buff0_used' '_Bool'
|   | `-CStyleCastExpr 0x5609c29e0338 <col:20, col:27> '_Bool' <IntegralToBoolean>
|   |   `-IntegerLiteral 0x5609c29e0308 <col:27> 'int' 1
|   |-CallExpr 0x5609c29e04e8 <line:708:3, col:56> 'void'
|   | |-ImplicitCastExpr 0x5609c29e04d0 <col:3> 'void (*)(int)' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x5609c29e0380 <col:3> 'void (int)' Function 0x5609c2985bc8 '__VERIFIER_assert' 'void (int)'
|   | `-UnaryOperator 0x5609c29e0480 <col:21, col:55> 'int' prefix '!' cannot overflow
|   |   `-ParenExpr 0x5609c29e0460 <col:22, col:55> 'int'
|   |     `-BinaryOperator 0x5609c29e0440 <col:23, col:41> 'int' '&&'
|   |       |-ImplicitCastExpr 0x5609c29e03f8 <col:23> 'int' <IntegralCast>
|   |       | `-ImplicitCastExpr 0x5609c29e03e0 <col:23> '_Bool' <LValueToRValue>
|   |       |   `-DeclRefExpr 0x5609c29e03a0 <col:23> '_Bool' lvalue Var 0x5609c29dfe60 'y$w_buff1_used' '_Bool'
|   |       `-ImplicitCastExpr 0x5609c29e0428 <col:41> 'int' <IntegralCast>
|   |         `-ImplicitCastExpr 0x5609c29e0410 <col:41> '_Bool' <LValueToRValue>
|   |           `-DeclRefExpr 0x5609c29e03c0 <col:41> '_Bool' lvalue Var 0x5609c29dfd68 'y$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x5609c29e0568 <line:709:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x5609c29e0510 <col:3> '_Bool' lvalue Var 0x5609c29dfa00 'y$r_buff1_thd0' '_Bool'
|   | `-ImplicitCastExpr 0x5609c29e0550 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x5609c29e0530 <col:20> '_Bool' lvalue Var 0x5609c29df820 'y$r_buff0_thd0' '_Bool'
|   |-BinaryOperator 0x5609c29e05e0 <line:710:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x5609c29e0588 <col:3> '_Bool' lvalue Var 0x5609c29dfa78 'y$r_buff1_thd1' '_Bool'
|   | `-ImplicitCastExpr 0x5609c29e05c8 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x5609c29e05a8 <col:20> '_Bool' lvalue Var 0x5609c29df898 'y$r_buff0_thd1' '_Bool'
|   |-BinaryOperator 0x5609c29e0658 <line:711:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x5609c29e0600 <col:3> '_Bool' lvalue Var 0x5609c29dfb00 'y$r_buff1_thd2' '_Bool'
|   | `-ImplicitCastExpr 0x5609c29e0640 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x5609c29e0620 <col:20> '_Bool' lvalue Var 0x5609c29df910 'y$r_buff0_thd2' '_Bool'
|   |-BinaryOperator 0x5609c29e06d0 <line:712:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x5609c29e0678 <col:3> '_Bool' lvalue Var 0x5609c29dfb78 'y$r_buff1_thd3' '_Bool'
|   | `-ImplicitCastExpr 0x5609c29e06b8 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x5609c29e0698 <col:20> '_Bool' lvalue Var 0x5609c29df988 'y$r_buff0_thd3' '_Bool'
|   |-BinaryOperator 0x5609c29e0768 <line:713:3, col:27> '_Bool' '='
|   | |-DeclRefExpr 0x5609c29e06f0 <col:3> '_Bool' lvalue Var 0x5609c29df898 'y$r_buff0_thd1' '_Bool'
|   | `-CStyleCastExpr 0x5609c29e0740 <col:20, col:27> '_Bool' <IntegralToBoolean>
|   |   `-IntegerLiteral 0x5609c29e0710 <col:27> 'int' 1
|   |-CallExpr 0x5609c29e07c0 <line:714:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x5609c29e07a8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5609c29e0788 <col:3> 'void ()' Function 0x5609c2985f00 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x5609c29e0818 <line:715:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x5609c29e0800 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5609c29e07e0 <col:3> 'void ()' Function 0x5609c2985e40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x5609c29e0878 <line:716:3, col:7> 'int' '='
|   | |-DeclRefExpr 0x5609c29e0838 <col:3> 'int' lvalue Var 0x5609c29df570 'x' 'int'
|   | `-IntegerLiteral 0x5609c29e0858 <col:7> 'int' 1
|   |-CallExpr 0x5609c29e08d0 <line:717:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x5609c29e08b8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5609c29e0898 <col:3> 'void ()' Function 0x5609c2985f00 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x5609c29e0928 <line:718:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x5609c29e0910 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5609c29e08f0 <col:3> 'void ()' Function 0x5609c2985e40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x5609c29e0c38 <line:719:3, col:103> 'int' '='
|   | |-DeclRefExpr 0x5609c29e0948 <col:3> 'int' lvalue Var 0x5609c29df690 'y' 'int'
|   | `-ConditionalOperator 0x5609c29e0c08 <col:7, col:103> 'int'
|   |   |-BinaryOperator 0x5609c29e0a08 <col:7, col:25> 'int' '&&'
|   |   | |-ImplicitCastExpr 0x5609c29e09c0 <col:7> 'int' <IntegralCast>
|   |   | | `-ImplicitCastExpr 0x5609c29e09a8 <col:7> '_Bool' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x5609c29e0968 <col:7> '_Bool' lvalue Var 0x5609c29dfd68 'y$w_buff0_used' '_Bool'
|   |   | `-ImplicitCastExpr 0x5609c29e09f0 <col:25> 'int' <IntegralCast>
|   |   |   `-ImplicitCastExpr 0x5609c29e09d8 <col:25> '_Bool' <LValueToRValue>
|   |   |     `-DeclRefExpr 0x5609c29e0988 <col:25> '_Bool' lvalue Var 0x5609c29df898 'y$r_buff0_thd1' '_Bool'
|   |   |-ImplicitCastExpr 0x5609c29e0bf0 <col:42> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x5609c29e0a28 <col:42> 'int' lvalue Var 0x5609c29dfcf0 'y$w_buff0' 'int'
|   |   `-ParenExpr 0x5609c29e0bd0 <col:54, col:103> 'int'
|   |     `-ConditionalOperator 0x5609c29e0ba0 <col:55, col:102> 'int'
|   |       |-BinaryOperator 0x5609c29e0b10 <col:55, col:73> 'int' '&&'
|   |       | |-ImplicitCastExpr 0x5609c29e0aa0 <col:55> 'int' <IntegralCast>
|   |       | | `-ImplicitCastExpr 0x5609c29e0a88 <col:55> '_Bool' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x5609c29e0a48 <col:55> '_Bool' lvalue Var 0x5609c29dfe60 'y$w_buff1_used' '_Bool'
|   |       | `-ImplicitCastExpr 0x5609c29e0ad0 <col:73> 'int' <IntegralCast>
|   |       |   `-ImplicitCastExpr 0x5609c29e0ab8 <col:73> '_Bool' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x5609c29e0a68 <col:73> '_Bool' lvalue Var 0x5609c29dfa78 'y$r_buff1_thd1' '_Bool'
|   |       |-ImplicitCastExpr 0x5609c29e0b70 <col:90> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x5609c29e0b30 <col:90> 'int' lvalue Var 0x5609c29dfde8 'y$w_buff1' 'int'
|   |       `-ImplicitCastExpr 0x5609c29e0b88 <col:102> 'int' <LValueToRValue>
|   |         `-DeclRefExpr 0x5609c29e0b50 <col:102> 'int' lvalue Var 0x5609c29df690 'y' 'int'
|   |-BinaryOperator 0x5609c29e0e40 <line:720:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x5609c29e0c58 <col:3> '_Bool' lvalue Var 0x5609c29dfd68 'y$w_buff0_used' '_Bool'
|   | `-ImplicitCastExpr 0x5609c29e0e28 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x5609c29e0df8 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x5609c29e0d18 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x5609c29e0cd0 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x5609c29e0cb8 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x5609c29e0c78 <col:20> '_Bool' lvalue Var 0x5609c29dfd68 'y$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x5609c29e0d00 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x5609c29e0ce8 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x5609c29e0c98 <col:38> '_Bool' lvalue Var 0x5609c29df898 'y$r_buff0_thd1' '_Bool'
|   |     |-ImplicitCastExpr 0x5609c29e0db0 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x5609c29e0d68 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x5609c29e0d38 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x5609c29e0de0 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x5609c29e0dc8 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x5609c29e0d90 <col:66> '_Bool' lvalue Var 0x5609c29dfd68 'y$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x5609c29e1128 <line:721:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x5609c29e0e60 <col:3> '_Bool' lvalue Var 0x5609c29dfe60 'y$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x5609c29e1110 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x5609c29e10e0 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x5609c29e1000 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x5609c29e0f20 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x5609c29e0ed8 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x5609c29e0ec0 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x5609c29e0e80 <col:20> '_Bool' lvalue Var 0x5609c29dfd68 'y$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x5609c29e0f08 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x5609c29e0ef0 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x5609c29e0ea0 <col:38> '_Bool' lvalue Var 0x5609c29df898 'y$r_buff0_thd1' '_Bool'
|   |     | `-BinaryOperator 0x5609c29e0fe0 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x5609c29e0f98 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x5609c29e0f80 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x5609c29e0f40 <col:56> '_Bool' lvalue Var 0x5609c29dfe60 'y$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x5609c29e0fc8 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x5609c29e0fb0 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x5609c29e0f60 <col:74> '_Bool' lvalue Var 0x5609c29dfa78 'y$r_buff1_thd1' '_Bool'
|   |     |-ImplicitCastExpr 0x5609c29e1098 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x5609c29e1050 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x5609c29e1020 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x5609c29e10c8 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x5609c29e10b0 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x5609c29e1078 <col:102> '_Bool' lvalue Var 0x5609c29dfe60 'y$w_buff1_used' '_Bool'
|   |-BinaryOperator 0x5609c29e1330 <line:722:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x5609c29e1148 <col:3> '_Bool' lvalue Var 0x5609c29df898 'y$r_buff0_thd1' '_Bool'
|   | `-ImplicitCastExpr 0x5609c29e1318 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x5609c29e12e8 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x5609c29e1208 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x5609c29e11c0 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x5609c29e11a8 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x5609c29e1168 <col:20> '_Bool' lvalue Var 0x5609c29dfd68 'y$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x5609c29e11f0 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x5609c29e11d8 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x5609c29e1188 <col:38> '_Bool' lvalue Var 0x5609c29df898 'y$r_buff0_thd1' '_Bool'
|   |     |-ImplicitCastExpr 0x5609c29e12a0 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x5609c29e1258 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x5609c29e1228 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x5609c29e12d0 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x5609c29e12b8 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x5609c29e1280 <col:66> '_Bool' lvalue Var 0x5609c29df898 'y$r_buff0_thd1' '_Bool'
|   |-BinaryOperator 0x5609c29e1618 <line:723:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x5609c29e1350 <col:3> '_Bool' lvalue Var 0x5609c29dfa78 'y$r_buff1_thd1' '_Bool'
|   | `-ImplicitCastExpr 0x5609c29e1600 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x5609c29e15d0 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x5609c29e14f0 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x5609c29e1410 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x5609c29e13c8 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x5609c29e13b0 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x5609c29e1370 <col:20> '_Bool' lvalue Var 0x5609c29dfd68 'y$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x5609c29e13f8 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x5609c29e13e0 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x5609c29e1390 <col:38> '_Bool' lvalue Var 0x5609c29df898 'y$r_buff0_thd1' '_Bool'
|   |     | `-BinaryOperator 0x5609c29e14d0 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x5609c29e1488 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x5609c29e1470 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x5609c29e1430 <col:56> '_Bool' lvalue Var 0x5609c29dfe60 'y$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x5609c29e14b8 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x5609c29e14a0 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x5609c29e1450 <col:74> '_Bool' lvalue Var 0x5609c29dfa78 'y$r_buff1_thd1' '_Bool'
|   |     |-ImplicitCastExpr 0x5609c29e1588 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x5609c29e1540 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x5609c29e1510 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x5609c29e15b8 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x5609c29e15a0 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x5609c29e1568 <col:102> '_Bool' lvalue Var 0x5609c29dfa78 'y$r_buff1_thd1' '_Bool'
|   |-CallExpr 0x5609c29e1670 <line:724:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x5609c29e1658 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5609c29e1638 <col:3> 'void ()' Function 0x5609c2985f00 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x5609c29e16c8 <line:725:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x5609c29e16b0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5609c29e1690 <col:3> 'void ()' Function 0x5609c2985e40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x5609c29e1780 <line:726:3, col:41> 'int' '='
|   | |-DeclRefExpr 0x5609c29e16e8 <col:3> 'int' lvalue Var 0x5609c29df120 '__unbuffered_cnt' 'int'
|   | `-BinaryOperator 0x5609c29e1760 <col:22, col:41> 'int' '+'
|   |   |-ImplicitCastExpr 0x5609c29e1748 <col:22> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x5609c29e1708 <col:22> 'int' lvalue Var 0x5609c29df120 '__unbuffered_cnt' 'int'
|   |   `-IntegerLiteral 0x5609c29e1728 <col:41> 'int' 1
|   |-CallExpr 0x5609c29e17d8 <line:727:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x5609c29e17c0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5609c29e17a0 <col:3> 'void ()' Function 0x5609c2985f00 '__VERIFIER_atomic_end' 'void ()'
|   `-ReturnStmt 0x5609c29e1888 <line:728:3, col:36>
|     `-CallExpr 0x5609c29e1868 <col:10, col:36> 'void *'
|       `-ImplicitCastExpr 0x5609c29e1850 <col:10> 'void *(*)(void)' <FunctionToPointerDecay>
|         `-DeclRefExpr 0x5609c29e17f8 <col:10> 'void *(void)' Function 0x5609c2985958 '__VERIFIER_nondet_pointer' 'void *(void)'
|-FunctionDecl 0x5609c29e1a28 prev 0x5609c29dec48 <line:730:1, line:749:1> line:730:8 used P1 'void *(void *)'
| |-ParmVarDecl 0x5609c29e1990 <col:11, col:17> col:17 arg 'void *'
| `-CompoundStmt 0x5609c29e2c68 <line:731:1, line:749:1>
|   |-CallExpr 0x5609c29e1b20 <line:732:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x5609c29e1af0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5609c29e1ad0 <col:3> 'void ()' Function 0x5609c2985e40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x5609c29e1b80 <line:733:3, col:7> 'int' '='
|   | |-DeclRefExpr 0x5609c29e1b40 <col:3> 'int' lvalue Var 0x5609c29df570 'x' 'int'
|   | `-IntegerLiteral 0x5609c29e1b60 <col:7> 'int' 2
|   |-CallExpr 0x5609c29e1bd8 <line:734:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x5609c29e1bc0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5609c29e1ba0 <col:3> 'void ()' Function 0x5609c2985f00 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x5609c29e1c30 <line:735:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x5609c29e1c18 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5609c29e1bf8 <col:3> 'void ()' Function 0x5609c2985e40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x5609c29e1c90 <line:736:3, col:7> 'int' '='
|   | |-DeclRefExpr 0x5609c29e1c50 <col:3> 'int' lvalue Var 0x5609c29df690 'y' 'int'
|   | `-IntegerLiteral 0x5609c29e1c70 <col:7> 'int' 1
|   |-CallExpr 0x5609c29e1ce8 <line:737:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x5609c29e1cd0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5609c29e1cb0 <col:3> 'void ()' Function 0x5609c2985f00 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x5609c29e1d40 <line:738:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x5609c29e1d28 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5609c29e1d08 <col:3> 'void ()' Function 0x5609c2985e40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x5609c29e2028 <line:739:3, col:103> 'int' '='
|   | |-DeclRefExpr 0x5609c29e1d60 <col:3> 'int' lvalue Var 0x5609c29df690 'y' 'int'
|   | `-ConditionalOperator 0x5609c29e1ff8 <col:7, col:103> 'int'
|   |   |-BinaryOperator 0x5609c29e1e20 <col:7, col:25> 'int' '&&'
|   |   | |-ImplicitCastExpr 0x5609c29e1dd8 <col:7> 'int' <IntegralCast>
|   |   | | `-ImplicitCastExpr 0x5609c29e1dc0 <col:7> '_Bool' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x5609c29e1d80 <col:7> '_Bool' lvalue Var 0x5609c29dfd68 'y$w_buff0_used' '_Bool'
|   |   | `-ImplicitCastExpr 0x5609c29e1e08 <col:25> 'int' <IntegralCast>
|   |   |   `-ImplicitCastExpr 0x5609c29e1df0 <col:25> '_Bool' <LValueToRValue>
|   |   |     `-DeclRefExpr 0x5609c29e1da0 <col:25> '_Bool' lvalue Var 0x5609c29df910 'y$r_buff0_thd2' '_Bool'
|   |   |-ImplicitCastExpr 0x5609c29e1fe0 <col:42> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x5609c29e1e40 <col:42> 'int' lvalue Var 0x5609c29dfcf0 'y$w_buff0' 'int'
|   |   `-ParenExpr 0x5609c29e1fc0 <col:54, col:103> 'int'
|   |     `-ConditionalOperator 0x5609c29e1f90 <col:55, col:102> 'int'
|   |       |-BinaryOperator 0x5609c29e1f00 <col:55, col:73> 'int' '&&'
|   |       | |-ImplicitCastExpr 0x5609c29e1eb8 <col:55> 'int' <IntegralCast>
|   |       | | `-ImplicitCastExpr 0x5609c29e1ea0 <col:55> '_Bool' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x5609c29e1e60 <col:55> '_Bool' lvalue Var 0x5609c29dfe60 'y$w_buff1_used' '_Bool'
|   |       | `-ImplicitCastExpr 0x5609c29e1ee8 <col:73> 'int' <IntegralCast>
|   |       |   `-ImplicitCastExpr 0x5609c29e1ed0 <col:73> '_Bool' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x5609c29e1e80 <col:73> '_Bool' lvalue Var 0x5609c29dfb00 'y$r_buff1_thd2' '_Bool'
|   |       |-ImplicitCastExpr 0x5609c29e1f60 <col:90> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x5609c29e1f20 <col:90> 'int' lvalue Var 0x5609c29dfde8 'y$w_buff1' 'int'
|   |       `-ImplicitCastExpr 0x5609c29e1f78 <col:102> 'int' <LValueToRValue>
|   |         `-DeclRefExpr 0x5609c29e1f40 <col:102> 'int' lvalue Var 0x5609c29df690 'y' 'int'
|   |-BinaryOperator 0x5609c29e2230 <line:740:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x5609c29e2048 <col:3> '_Bool' lvalue Var 0x5609c29dfd68 'y$w_buff0_used' '_Bool'
|   | `-ImplicitCastExpr 0x5609c29e2218 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x5609c29e21e8 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x5609c29e2108 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x5609c29e20c0 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x5609c29e20a8 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x5609c29e2068 <col:20> '_Bool' lvalue Var 0x5609c29dfd68 'y$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x5609c29e20f0 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x5609c29e20d8 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x5609c29e2088 <col:38> '_Bool' lvalue Var 0x5609c29df910 'y$r_buff0_thd2' '_Bool'
|   |     |-ImplicitCastExpr 0x5609c29e21a0 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x5609c29e2158 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x5609c29e2128 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x5609c29e21d0 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x5609c29e21b8 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x5609c29e2180 <col:66> '_Bool' lvalue Var 0x5609c29dfd68 'y$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x5609c29e2518 <line:741:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x5609c29e2250 <col:3> '_Bool' lvalue Var 0x5609c29dfe60 'y$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x5609c29e2500 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x5609c29e24d0 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x5609c29e23f0 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x5609c29e2310 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x5609c29e22c8 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x5609c29e22b0 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x5609c29e2270 <col:20> '_Bool' lvalue Var 0x5609c29dfd68 'y$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x5609c29e22f8 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x5609c29e22e0 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x5609c29e2290 <col:38> '_Bool' lvalue Var 0x5609c29df910 'y$r_buff0_thd2' '_Bool'
|   |     | `-BinaryOperator 0x5609c29e23d0 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x5609c29e2388 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x5609c29e2370 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x5609c29e2330 <col:56> '_Bool' lvalue Var 0x5609c29dfe60 'y$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x5609c29e23b8 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x5609c29e23a0 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x5609c29e2350 <col:74> '_Bool' lvalue Var 0x5609c29dfb00 'y$r_buff1_thd2' '_Bool'
|   |     |-ImplicitCastExpr 0x5609c29e2488 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x5609c29e2440 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x5609c29e2410 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x5609c29e24b8 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x5609c29e24a0 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x5609c29e2468 <col:102> '_Bool' lvalue Var 0x5609c29dfe60 'y$w_buff1_used' '_Bool'
|   |-BinaryOperator 0x5609c29e2720 <line:742:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x5609c29e2538 <col:3> '_Bool' lvalue Var 0x5609c29df910 'y$r_buff0_thd2' '_Bool'
|   | `-ImplicitCastExpr 0x5609c29e2708 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x5609c29e26d8 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x5609c29e25f8 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x5609c29e25b0 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x5609c29e2598 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x5609c29e2558 <col:20> '_Bool' lvalue Var 0x5609c29dfd68 'y$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x5609c29e25e0 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x5609c29e25c8 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x5609c29e2578 <col:38> '_Bool' lvalue Var 0x5609c29df910 'y$r_buff0_thd2' '_Bool'
|   |     |-ImplicitCastExpr 0x5609c29e2690 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x5609c29e2648 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x5609c29e2618 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x5609c29e26c0 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x5609c29e26a8 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x5609c29e2670 <col:66> '_Bool' lvalue Var 0x5609c29df910 'y$r_buff0_thd2' '_Bool'
|   |-BinaryOperator 0x5609c29e2a08 <line:743:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x5609c29e2740 <col:3> '_Bool' lvalue Var 0x5609c29dfb00 'y$r_buff1_thd2' '_Bool'
|   | `-ImplicitCastExpr 0x5609c29e29f0 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x5609c29e29c0 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x5609c29e28e0 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x5609c29e2800 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x5609c29e27b8 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x5609c29e27a0 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x5609c29e2760 <col:20> '_Bool' lvalue Var 0x5609c29dfd68 'y$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x5609c29e27e8 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x5609c29e27d0 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x5609c29e2780 <col:38> '_Bool' lvalue Var 0x5609c29df910 'y$r_buff0_thd2' '_Bool'
|   |     | `-BinaryOperator 0x5609c29e28c0 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x5609c29e2878 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x5609c29e2860 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x5609c29e2820 <col:56> '_Bool' lvalue Var 0x5609c29dfe60 'y$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x5609c29e28a8 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x5609c29e2890 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x5609c29e2840 <col:74> '_Bool' lvalue Var 0x5609c29dfb00 'y$r_buff1_thd2' '_Bool'
|   |     |-ImplicitCastExpr 0x5609c29e2978 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x5609c29e2930 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x5609c29e2900 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x5609c29e29a8 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x5609c29e2990 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x5609c29e2958 <col:102> '_Bool' lvalue Var 0x5609c29dfb00 'y$r_buff1_thd2' '_Bool'
|   |-CallExpr 0x5609c29e2a60 <line:744:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x5609c29e2a48 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5609c29e2a28 <col:3> 'void ()' Function 0x5609c2985f00 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x5609c29e2ab8 <line:745:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x5609c29e2aa0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5609c29e2a80 <col:3> 'void ()' Function 0x5609c2985e40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x5609c29e2b88 <line:746:3, col:41> 'int' '='
|   | |-DeclRefExpr 0x5609c29e2ad8 <col:3> 'int' lvalue Var 0x5609c29df120 '__unbuffered_cnt' 'int'
|   | `-BinaryOperator 0x5609c29e2b68 <col:22, col:41> 'int' '+'
|   |   |-ImplicitCastExpr 0x5609c29e2b50 <col:22> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x5609c29e2af8 <col:22> 'int' lvalue Var 0x5609c29df120 '__unbuffered_cnt' 'int'
|   |   `-IntegerLiteral 0x5609c29e2b30 <col:41> 'int' 1
|   |-CallExpr 0x5609c29e2be0 <line:747:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x5609c29e2bc8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5609c29e2ba8 <col:3> 'void ()' Function 0x5609c2985f00 '__VERIFIER_atomic_end' 'void ()'
|   `-ReturnStmt 0x5609c29e2c58 <line:748:3, col:36>
|     `-CallExpr 0x5609c29e2c38 <col:10, col:36> 'void *'
|       `-ImplicitCastExpr 0x5609c29e2c20 <col:10> 'void *(*)(void)' <FunctionToPointerDecay>
|         `-DeclRefExpr 0x5609c29e2c00 <col:10> 'void *(void)' Function 0x5609c2985958 '__VERIFIER_nondet_pointer' 'void *(void)'
|-FunctionDecl 0x5609c29e2db0 prev 0x5609c29deda0 <line:750:1, line:795:1> line:750:8 used P2 'void *(void *)'
| |-ParmVarDecl 0x5609c29e2d18 <col:11, col:17> col:17 arg 'void *'
| `-CompoundStmt 0x5609c29e9328 <line:751:1, line:795:1>
|   |-CallExpr 0x5609c29e2e90 <line:752:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x5609c29e2e78 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5609c29e2e58 <col:3> 'void ()' Function 0x5609c2985e40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x5609c29e2f40 <line:753:3, col:45> '_Bool' '='
|   | |-DeclRefExpr 0x5609c29e2eb0 <col:3> '_Bool' lvalue Var 0x5609c29dfed8 'weak$$choice0' '_Bool'
|   | `-ImplicitCastExpr 0x5609c29e2f28 <col:19, col:45> '_Bool' <PointerToBoolean>
|   |   `-CallExpr 0x5609c29e2f08 <col:19, col:45> 'void *'
|   |     `-ImplicitCastExpr 0x5609c29e2ef0 <col:19> 'void *(*)(void)' <FunctionToPointerDecay>
|   |       `-DeclRefExpr 0x5609c29e2ed0 <col:19> 'void *(void)' Function 0x5609c2985958 '__VERIFIER_nondet_pointer' 'void *(void)'
|   |-BinaryOperator 0x5609c29e2ff0 <line:754:3, col:45> '_Bool' '='
|   | |-DeclRefExpr 0x5609c29e2f60 <col:3> '_Bool' lvalue Var 0x5609c29dff50 'weak$$choice2' '_Bool'
|   | `-ImplicitCastExpr 0x5609c29e2fd8 <col:19, col:45> '_Bool' <PointerToBoolean>
|   |   `-CallExpr 0x5609c29e2fb8 <col:19, col:45> 'void *'
|   |     `-ImplicitCastExpr 0x5609c29e2fa0 <col:19> 'void *(*)(void)' <FunctionToPointerDecay>
|   |       `-DeclRefExpr 0x5609c29e2f80 <col:19> 'void *(void)' Function 0x5609c2985958 '__VERIFIER_nondet_pointer' 'void *(void)'
|   |-BinaryOperator 0x5609c29e3068 <line:755:3, col:21> '_Bool' '='
|   | |-DeclRefExpr 0x5609c29e3010 <col:3> '_Bool' lvalue Var 0x5609c29df728 'y$flush_delayed' '_Bool'
|   | `-ImplicitCastExpr 0x5609c29e3050 <col:21> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x5609c29e3030 <col:21> '_Bool' lvalue Var 0x5609c29dff50 'weak$$choice2' '_Bool'
|   |-BinaryOperator 0x5609c29e30e0 <line:756:3, col:15> 'int' '='
|   | |-DeclRefExpr 0x5609c29e3088 <col:3> 'int' lvalue Var 0x5609c29df7a8 'y$mem_tmp' 'int'
|   | `-ImplicitCastExpr 0x5609c29e30c8 <col:15> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x5609c29e30a8 <col:15> 'int' lvalue Var 0x5609c29df690 'y' 'int'
|   |-BinaryOperator 0x5609c29e3518 <line:757:3, col:162> 'int' '='
|   | |-DeclRefExpr 0x5609c29e3100 <col:3> 'int' lvalue Var 0x5609c29df690 'y' 'int'
|   | `-ConditionalOperator 0x5609c29e34e8 <col:7, col:162> 'int'
|   |   |-BinaryOperator 0x5609c29e3310 <col:7, col:84> 'int' '||'
|   |   | |-BinaryOperator 0x5609c29e3230 <col:7, col:46> 'int' '||'
|   |   | | |-UnaryOperator 0x5609c29e3158 <col:7, col:8> 'int' prefix '!' cannot overflow
|   |   | | | `-ImplicitCastExpr 0x5609c29e3140 <col:8> '_Bool' <LValueToRValue>
|   |   | | |   `-DeclRefExpr 0x5609c29e3120 <col:8> '_Bool' lvalue Var 0x5609c29dfd68 'y$w_buff0_used' '_Bool'
|   |   | | `-BinaryOperator 0x5609c29e3210 <col:26, col:46> 'int' '&&'
|   |   | |   |-UnaryOperator 0x5609c29e31a8 <col:26, col:27> 'int' prefix '!' cannot overflow
|   |   | |   | `-ImplicitCastExpr 0x5609c29e3190 <col:27> '_Bool' <LValueToRValue>
|   |   | |   |   `-DeclRefExpr 0x5609c29e3170 <col:27> '_Bool' lvalue Var 0x5609c29df988 'y$r_buff0_thd3' '_Bool'
|   |   | |   `-UnaryOperator 0x5609c29e31f8 <col:45, col:46> 'int' prefix '!' cannot overflow
|   |   | |     `-ImplicitCastExpr 0x5609c29e31e0 <col:46> '_Bool' <LValueToRValue>
|   |   | |       `-DeclRefExpr 0x5609c29e31c0 <col:46> '_Bool' lvalue Var 0x5609c29dfe60 'y$w_buff1_used' '_Bool'
|   |   | `-BinaryOperator 0x5609c29e32f0 <col:64, col:84> 'int' '&&'
|   |   |   |-UnaryOperator 0x5609c29e3288 <col:64, col:65> 'int' prefix '!' cannot overflow
|   |   |   | `-ImplicitCastExpr 0x5609c29e3270 <col:65> '_Bool' <LValueToRValue>
|   |   |   |   `-DeclRefExpr 0x5609c29e3250 <col:65> '_Bool' lvalue Var 0x5609c29df988 'y$r_buff0_thd3' '_Bool'
|   |   |   `-UnaryOperator 0x5609c29e32d8 <col:83, col:84> 'int' prefix '!' cannot overflow
|   |   |     `-ImplicitCastExpr 0x5609c29e32c0 <col:84> '_Bool' <LValueToRValue>
|   |   |       `-DeclRefExpr 0x5609c29e32a0 <col:84> '_Bool' lvalue Var 0x5609c29dfb78 'y$r_buff1_thd3' '_Bool'
|   |   |-ImplicitCastExpr 0x5609c29e34d0 <col:101> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x5609c29e3330 <col:101> 'int' lvalue Var 0x5609c29df690 'y' 'int'
|   |   `-ParenExpr 0x5609c29e34b0 <col:105, col:162> 'int'
|   |     `-ConditionalOperator 0x5609c29e3480 <col:106, col:153> 'int'
|   |       |-BinaryOperator 0x5609c29e33f0 <col:106, col:124> 'int' '&&'
|   |       | |-ImplicitCastExpr 0x5609c29e33a8 <col:106> 'int' <IntegralCast>
|   |       | | `-ImplicitCastExpr 0x5609c29e3390 <col:106> '_Bool' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x5609c29e3350 <col:106> '_Bool' lvalue Var 0x5609c29dfd68 'y$w_buff0_used' '_Bool'
|   |       | `-ImplicitCastExpr 0x5609c29e33d8 <col:124> 'int' <IntegralCast>
|   |       |   `-ImplicitCastExpr 0x5609c29e33c0 <col:124> '_Bool' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x5609c29e3370 <col:124> '_Bool' lvalue Var 0x5609c29df988 'y$r_buff0_thd3' '_Bool'
|   |       |-ImplicitCastExpr 0x5609c29e3450 <col:141> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x5609c29e3410 <col:141> 'int' lvalue Var 0x5609c29dfcf0 'y$w_buff0' 'int'
|   |       `-ImplicitCastExpr 0x5609c29e3468 <col:153> 'int' <LValueToRValue>
|   |         `-DeclRefExpr 0x5609c29e3430 <col:153> 'int' lvalue Var 0x5609c29dfde8 'y$w_buff1' 'int'
|   |-BinaryOperator 0x5609c29e3a28 <line:758:3, col:208> 'int' '='
|   | |-DeclRefExpr 0x5609c29e3538 <col:3> 'int' lvalue Var 0x5609c29dfcf0 'y$w_buff0' 'int'
|   | `-ConditionalOperator 0x5609c29e39f8 <col:15, col:208> 'int'
|   |   |-ImplicitCastExpr 0x5609c29e39c8 <col:15> 'int' <IntegralCast>
|   |   | `-ImplicitCastExpr 0x5609c29e39b0 <col:15> '_Bool' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x5609c29e3558 <col:15> '_Bool' lvalue Var 0x5609c29dff50 'weak$$choice2' '_Bool'
|   |   |-ImplicitCastExpr 0x5609c29e39e0 <col:31> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x5609c29e3578 <col:31> 'int' lvalue Var 0x5609c29dfcf0 'y$w_buff0' 'int'
|   |   `-ParenExpr 0x5609c29e3990 <col:43, col:208> 'int'
|   |     `-ConditionalOperator 0x5609c29e3960 <col:44, col:207> 'int'
|   |       |-BinaryOperator 0x5609c29e3788 <col:44, col:121> 'int' '||'
|   |       | |-BinaryOperator 0x5609c29e36a8 <col:44, col:83> 'int' '||'
|   |       | | |-UnaryOperator 0x5609c29e35d0 <col:44, col:45> 'int' prefix '!' cannot overflow
|   |       | | | `-ImplicitCastExpr 0x5609c29e35b8 <col:45> '_Bool' <LValueToRValue>
|   |       | | |   `-DeclRefExpr 0x5609c29e3598 <col:45> '_Bool' lvalue Var 0x5609c29dfd68 'y$w_buff0_used' '_Bool'
|   |       | | `-BinaryOperator 0x5609c29e3688 <col:63, col:83> 'int' '&&'
|   |       | |   |-UnaryOperator 0x5609c29e3620 <col:63, col:64> 'int' prefix '!' cannot overflow
|   |       | |   | `-ImplicitCastExpr 0x5609c29e3608 <col:64> '_Bool' <LValueToRValue>
|   |       | |   |   `-DeclRefExpr 0x5609c29e35e8 <col:64> '_Bool' lvalue Var 0x5609c29df988 'y$r_buff0_thd3' '_Bool'
|   |       | |   `-UnaryOperator 0x5609c29e3670 <col:82, col:83> 'int' prefix '!' cannot overflow
|   |       | |     `-ImplicitCastExpr 0x5609c29e3658 <col:83> '_Bool' <LValueToRValue>
|   |       | |       `-DeclRefExpr 0x5609c29e3638 <col:83> '_Bool' lvalue Var 0x5609c29dfe60 'y$w_buff1_used' '_Bool'
|   |       | `-BinaryOperator 0x5609c29e3768 <col:101, col:121> 'int' '&&'
|   |       |   |-UnaryOperator 0x5609c29e3700 <col:101, col:102> 'int' prefix '!' cannot overflow
|   |       |   | `-ImplicitCastExpr 0x5609c29e36e8 <col:102> '_Bool' <LValueToRValue>
|   |       |   |   `-DeclRefExpr 0x5609c29e36c8 <col:102> '_Bool' lvalue Var 0x5609c29df988 'y$r_buff0_thd3' '_Bool'
|   |       |   `-UnaryOperator 0x5609c29e3750 <col:120, col:121> 'int' prefix '!' cannot overflow
|   |       |     `-ImplicitCastExpr 0x5609c29e3738 <col:121> '_Bool' <LValueToRValue>
|   |       |       `-DeclRefExpr 0x5609c29e3718 <col:121> '_Bool' lvalue Var 0x5609c29dfb78 'y$r_buff1_thd3' '_Bool'
|   |       |-ImplicitCastExpr 0x5609c29e3948 <col:138> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x5609c29e37a8 <col:138> 'int' lvalue Var 0x5609c29dfcf0 'y$w_buff0' 'int'
|   |       `-ParenExpr 0x5609c29e3928 <col:150, col:207> 'int'
|   |         `-ConditionalOperator 0x5609c29e38f8 <col:151, col:198> 'int'
|   |           |-BinaryOperator 0x5609c29e3868 <col:151, col:169> 'int' '&&'
|   |           | |-ImplicitCastExpr 0x5609c29e3820 <col:151> 'int' <IntegralCast>
|   |           | | `-ImplicitCastExpr 0x5609c29e3808 <col:151> '_Bool' <LValueToRValue>
|   |           | |   `-DeclRefExpr 0x5609c29e37c8 <col:151> '_Bool' lvalue Var 0x5609c29dfd68 'y$w_buff0_used' '_Bool'
|   |           | `-ImplicitCastExpr 0x5609c29e3850 <col:169> 'int' <IntegralCast>
|   |           |   `-ImplicitCastExpr 0x5609c29e3838 <col:169> '_Bool' <LValueToRValue>
|   |           |     `-DeclRefExpr 0x5609c29e37e8 <col:169> '_Bool' lvalue Var 0x5609c29df988 'y$r_buff0_thd3' '_Bool'
|   |           |-ImplicitCastExpr 0x5609c29e38c8 <col:186> 'int' <LValueToRValue>
|   |           | `-DeclRefExpr 0x5609c29e3888 <col:186> 'int' lvalue Var 0x5609c29dfcf0 'y$w_buff0' 'int'
|   |           `-ImplicitCastExpr 0x5609c29e38e0 <col:198> 'int' <LValueToRValue>
|   |             `-DeclRefExpr 0x5609c29e38a8 <col:198> 'int' lvalue Var 0x5609c29dfcf0 'y$w_buff0' 'int'
|   |-BinaryOperator 0x5609c29e3f48 <line:759:3, col:208> 'int' '='
|   | |-DeclRefExpr 0x5609c29e3a48 <col:3> 'int' lvalue Var 0x5609c29dfde8 'y$w_buff1' 'int'
|   | `-ConditionalOperator 0x5609c29e3f18 <col:15, col:208> 'int'
|   |   |-ImplicitCastExpr 0x5609c29e3ee8 <col:15> 'int' <IntegralCast>
|   |   | `-ImplicitCastExpr 0x5609c29e3ed0 <col:15> '_Bool' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x5609c29e3a68 <col:15> '_Bool' lvalue Var 0x5609c29dff50 'weak$$choice2' '_Bool'
|   |   |-ImplicitCastExpr 0x5609c29e3f00 <col:31> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x5609c29e3a88 <col:31> 'int' lvalue Var 0x5609c29dfde8 'y$w_buff1' 'int'
|   |   `-ParenExpr 0x5609c29e3eb0 <col:43, col:208> 'int'
|   |     `-ConditionalOperator 0x5609c29e3e80 <col:44, col:207> 'int'
|   |       |-BinaryOperator 0x5609c29e3ca8 <col:44, col:121> 'int' '||'
|   |       | |-BinaryOperator 0x5609c29e3bc8 <col:44, col:83> 'int' '||'
|   |       | | |-UnaryOperator 0x5609c29e3ae0 <col:44, col:45> 'int' prefix '!' cannot overflow
|   |       | | | `-ImplicitCastExpr 0x5609c29e3ac8 <col:45> '_Bool' <LValueToRValue>
|   |       | | |   `-DeclRefExpr 0x5609c29e3aa8 <col:45> '_Bool' lvalue Var 0x5609c29dfd68 'y$w_buff0_used' '_Bool'
|   |       | | `-BinaryOperator 0x5609c29e3ba8 <col:63, col:83> 'int' '&&'
|   |       | |   |-UnaryOperator 0x5609c29e3b40 <col:63, col:64> 'int' prefix '!' cannot overflow
|   |       | |   | `-ImplicitCastExpr 0x5609c29e3b18 <col:64> '_Bool' <LValueToRValue>
|   |       | |   |   `-DeclRefExpr 0x5609c29e3af8 <col:64> '_Bool' lvalue Var 0x5609c29df988 'y$r_buff0_thd3' '_Bool'
|   |       | |   `-UnaryOperator 0x5609c29e3b90 <col:82, col:83> 'int' prefix '!' cannot overflow
|   |       | |     `-ImplicitCastExpr 0x5609c29e3b78 <col:83> '_Bool' <LValueToRValue>
|   |       | |       `-DeclRefExpr 0x5609c29e3b58 <col:83> '_Bool' lvalue Var 0x5609c29dfe60 'y$w_buff1_used' '_Bool'
|   |       | `-BinaryOperator 0x5609c29e3c88 <col:101, col:121> 'int' '&&'
|   |       |   |-UnaryOperator 0x5609c29e3c20 <col:101, col:102> 'int' prefix '!' cannot overflow
|   |       |   | `-ImplicitCastExpr 0x5609c29e3c08 <col:102> '_Bool' <LValueToRValue>
|   |       |   |   `-DeclRefExpr 0x5609c29e3be8 <col:102> '_Bool' lvalue Var 0x5609c29df988 'y$r_buff0_thd3' '_Bool'
|   |       |   `-UnaryOperator 0x5609c29e3c70 <col:120, col:121> 'int' prefix '!' cannot overflow
|   |       |     `-ImplicitCastExpr 0x5609c29e3c58 <col:121> '_Bool' <LValueToRValue>
|   |       |       `-DeclRefExpr 0x5609c29e3c38 <col:121> '_Bool' lvalue Var 0x5609c29dfb78 'y$r_buff1_thd3' '_Bool'
|   |       |-ImplicitCastExpr 0x5609c29e3e68 <col:138> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x5609c29e3cc8 <col:138> 'int' lvalue Var 0x5609c29dfde8 'y$w_buff1' 'int'
|   |       `-ParenExpr 0x5609c29e3e48 <col:150, col:207> 'int'
|   |         `-ConditionalOperator 0x5609c29e3e18 <col:151, col:198> 'int'
|   |           |-BinaryOperator 0x5609c29e3d88 <col:151, col:169> 'int' '&&'
|   |           | |-ImplicitCastExpr 0x5609c29e3d40 <col:151> 'int' <IntegralCast>
|   |           | | `-ImplicitCastExpr 0x5609c29e3d28 <col:151> '_Bool' <LValueToRValue>
|   |           | |   `-DeclRefExpr 0x5609c29e3ce8 <col:151> '_Bool' lvalue Var 0x5609c29dfd68 'y$w_buff0_used' '_Bool'
|   |           | `-ImplicitCastExpr 0x5609c29e3d70 <col:169> 'int' <IntegralCast>
|   |           |   `-ImplicitCastExpr 0x5609c29e3d58 <col:169> '_Bool' <LValueToRValue>
|   |           |     `-DeclRefExpr 0x5609c29e3d08 <col:169> '_Bool' lvalue Var 0x5609c29df988 'y$r_buff0_thd3' '_Bool'
|   |           |-ImplicitCastExpr 0x5609c29e3de8 <col:186> 'int' <LValueToRValue>
|   |           | `-DeclRefExpr 0x5609c29e3da8 <col:186> 'int' lvalue Var 0x5609c29dfde8 'y$w_buff1' 'int'
|   |           `-ImplicitCastExpr 0x5609c29e3e00 <col:198> 'int' <LValueToRValue>
|   |             `-DeclRefExpr 0x5609c29e3dc8 <col:198> 'int' lvalue Var 0x5609c29dfde8 'y$w_buff1' 'int'
|   |-BinaryOperator 0x5609c29e44f0 <line:760:3, col:227> '_Bool' '='
|   | |-DeclRefExpr 0x5609c29e3f68 <col:3> '_Bool' lvalue Var 0x5609c29dfd68 'y$w_buff0_used' '_Bool'
|   | `-ImplicitCastExpr 0x5609c29e44d8 <col:20, col:227> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x5609c29e44a8 <col:20, col:227> 'int'
|   |     |-ImplicitCastExpr 0x5609c29e4460 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x5609c29e4448 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x5609c29e3f88 <col:20> '_Bool' lvalue Var 0x5609c29dff50 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x5609c29e4490 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x5609c29e4478 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x5609c29e3fa8 <col:36> '_Bool' lvalue Var 0x5609c29dfd68 'y$w_buff0_used' '_Bool'
|   |     `-ParenExpr 0x5609c29e4428 <col:53, col:227> 'int'
|   |       `-ConditionalOperator 0x5609c29e43f8 <col:54, col:226> 'int'
|   |         |-BinaryOperator 0x5609c29e41b8 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x5609c29e40d8 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x5609c29e4000 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x5609c29e3fe8 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x5609c29e3fc8 <col:55> '_Bool' lvalue Var 0x5609c29dfd68 'y$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x5609c29e40b8 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x5609c29e4050 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x5609c29e4038 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x5609c29e4018 <col:74> '_Bool' lvalue Var 0x5609c29df988 'y$r_buff0_thd3' '_Bool'
|   |         | |   `-UnaryOperator 0x5609c29e40a0 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x5609c29e4088 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x5609c29e4068 <col:93> '_Bool' lvalue Var 0x5609c29dfe60 'y$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x5609c29e4198 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x5609c29e4130 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x5609c29e4118 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x5609c29e40f8 <col:112> '_Bool' lvalue Var 0x5609c29df988 'y$r_buff0_thd3' '_Bool'
|   |         |   `-UnaryOperator 0x5609c29e4180 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x5609c29e4168 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x5609c29e4148 <col:131> '_Bool' lvalue Var 0x5609c29dfb78 'y$r_buff1_thd3' '_Bool'
|   |         |-ImplicitCastExpr 0x5609c29e43e0 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x5609c29e43c8 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x5609c29e41d8 <col:148> '_Bool' lvalue Var 0x5609c29dfd68 'y$w_buff0_used' '_Bool'
|   |         `-ParenExpr 0x5609c29e43a8 <col:165, col:226> 'int'
|   |           `-ConditionalOperator 0x5609c29e4378 <col:166, col:212> 'int'
|   |             |-BinaryOperator 0x5609c29e4298 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x5609c29e4250 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x5609c29e4238 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x5609c29e41f8 <col:166> '_Bool' lvalue Var 0x5609c29dfd68 'y$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x5609c29e4280 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x5609c29e4268 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x5609c29e4218 <col:184> '_Bool' lvalue Var 0x5609c29df988 'y$r_buff0_thd3' '_Bool'
|   |             |-ImplicitCastExpr 0x5609c29e4330 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x5609c29e42e8 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x5609c29e42b8 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x5609c29e4360 <col:212> 'int' <IntegralCast>
|   |               `-ImplicitCastExpr 0x5609c29e4348 <col:212> '_Bool' <LValueToRValue>
|   |                 `-DeclRefExpr 0x5609c29e4310 <col:212> '_Bool' lvalue Var 0x5609c29dfd68 'y$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x5609c29e4ab8 <line:761:3, col:221> '_Bool' '='
|   | |-DeclRefExpr 0x5609c29e4510 <col:3> '_Bool' lvalue Var 0x5609c29dfe60 'y$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x5609c29e4aa0 <col:20, col:221> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x5609c29e4a70 <col:20, col:221> 'int'
|   |     |-ImplicitCastExpr 0x5609c29e4a28 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x5609c29e4a10 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x5609c29e4530 <col:20> '_Bool' lvalue Var 0x5609c29dff50 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x5609c29e4a58 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x5609c29e4a40 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x5609c29e4550 <col:36> '_Bool' lvalue Var 0x5609c29dfe60 'y$w_buff1_used' '_Bool'
|   |     `-ParenExpr 0x5609c29e49f0 <col:53, col:221> 'int'
|   |       `-ConditionalOperator 0x5609c29e49c0 <col:54, col:220> 'int'
|   |         |-BinaryOperator 0x5609c29e4760 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x5609c29e4680 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x5609c29e45a8 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x5609c29e4590 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x5609c29e4570 <col:55> '_Bool' lvalue Var 0x5609c29dfd68 'y$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x5609c29e4660 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x5609c29e45f8 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x5609c29e45e0 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x5609c29e45c0 <col:74> '_Bool' lvalue Var 0x5609c29df988 'y$r_buff0_thd3' '_Bool'
|   |         | |   `-UnaryOperator 0x5609c29e4648 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x5609c29e4630 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x5609c29e4610 <col:93> '_Bool' lvalue Var 0x5609c29dfe60 'y$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x5609c29e4740 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x5609c29e46d8 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x5609c29e46c0 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x5609c29e46a0 <col:112> '_Bool' lvalue Var 0x5609c29df988 'y$r_buff0_thd3' '_Bool'
|   |         |   `-UnaryOperator 0x5609c29e4728 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x5609c29e4710 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x5609c29e46f0 <col:131> '_Bool' lvalue Var 0x5609c29dfb78 'y$r_buff1_thd3' '_Bool'
|   |         |-ImplicitCastExpr 0x5609c29e49a8 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x5609c29e4990 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x5609c29e4780 <col:148> '_Bool' lvalue Var 0x5609c29dfe60 'y$w_buff1_used' '_Bool'
|   |         `-ParenExpr 0x5609c29e4970 <col:165, col:220> 'int'
|   |           `-ConditionalOperator 0x5609c29e4940 <col:166, col:219> 'int'
|   |             |-BinaryOperator 0x5609c29e4840 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x5609c29e47f8 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x5609c29e47e0 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x5609c29e47a0 <col:166> '_Bool' lvalue Var 0x5609c29dfd68 'y$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x5609c29e4828 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x5609c29e4810 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x5609c29e47c0 <col:184> '_Bool' lvalue Var 0x5609c29df988 'y$r_buff0_thd3' '_Bool'
|   |             |-ImplicitCastExpr 0x5609c29e4910 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x5609c29e4890 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x5609c29e4860 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x5609c29e4928 <col:212, col:219> 'int' <IntegralCast>
|   |               `-CStyleCastExpr 0x5609c29e48e8 <col:212, col:219> '_Bool' <IntegralToBoolean>
|   |                 `-IntegerLiteral 0x5609c29e48b8 <col:219> 'int' 0
|   |-BinaryOperator 0x5609c29e5078 <line:762:3, col:227> '_Bool' '='
|   | |-DeclRefExpr 0x5609c29e4ad8 <col:3> '_Bool' lvalue Var 0x5609c29df988 'y$r_buff0_thd3' '_Bool'
|   | `-ImplicitCastExpr 0x5609c29e5060 <col:20, col:227> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x5609c29e5030 <col:20, col:227> 'int'
|   |     |-ImplicitCastExpr 0x5609c29e4fe8 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x5609c29e4fd0 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x5609c29e4af8 <col:20> '_Bool' lvalue Var 0x5609c29dff50 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x5609c29e5018 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x5609c29e5000 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x5609c29e4b18 <col:36> '_Bool' lvalue Var 0x5609c29df988 'y$r_buff0_thd3' '_Bool'
|   |     `-ParenExpr 0x5609c29e4fb0 <col:53, col:227> 'int'
|   |       `-ConditionalOperator 0x5609c29e4f80 <col:54, col:226> 'int'
|   |         |-BinaryOperator 0x5609c29e4d40 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x5609c29e4c60 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x5609c29e4b88 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x5609c29e4b70 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x5609c29e4b50 <col:55> '_Bool' lvalue Var 0x5609c29dfd68 'y$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x5609c29e4c40 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x5609c29e4bd8 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x5609c29e4bc0 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x5609c29e4ba0 <col:74> '_Bool' lvalue Var 0x5609c29df988 'y$r_buff0_thd3' '_Bool'
|   |         | |   `-UnaryOperator 0x5609c29e4c28 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x5609c29e4c10 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x5609c29e4bf0 <col:93> '_Bool' lvalue Var 0x5609c29dfe60 'y$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x5609c29e4d20 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x5609c29e4cb8 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x5609c29e4ca0 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x5609c29e4c80 <col:112> '_Bool' lvalue Var 0x5609c29df988 'y$r_buff0_thd3' '_Bool'
|   |         |   `-UnaryOperator 0x5609c29e4d08 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x5609c29e4cf0 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x5609c29e4cd0 <col:131> '_Bool' lvalue Var 0x5609c29dfb78 'y$r_buff1_thd3' '_Bool'
|   |         |-ImplicitCastExpr 0x5609c29e4f68 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x5609c29e4f50 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x5609c29e4d60 <col:148> '_Bool' lvalue Var 0x5609c29df988 'y$r_buff0_thd3' '_Bool'
|   |         `-ParenExpr 0x5609c29e4f30 <col:165, col:226> 'int'
|   |           `-ConditionalOperator 0x5609c29e4f00 <col:166, col:212> 'int'
|   |             |-BinaryOperator 0x5609c29e4e20 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x5609c29e4dd8 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x5609c29e4dc0 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x5609c29e4d80 <col:166> '_Bool' lvalue Var 0x5609c29dfd68 'y$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x5609c29e4e08 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x5609c29e4df0 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x5609c29e4da0 <col:184> '_Bool' lvalue Var 0x5609c29df988 'y$r_buff0_thd3' '_Bool'
|   |             |-ImplicitCastExpr 0x5609c29e4eb8 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x5609c29e4e70 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x5609c29e4e40 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x5609c29e4ee8 <col:212> 'int' <IntegralCast>
|   |               `-ImplicitCastExpr 0x5609c29e4ed0 <col:212> '_Bool' <LValueToRValue>
|   |                 `-DeclRefExpr 0x5609c29e4e98 <col:212> '_Bool' lvalue Var 0x5609c29df988 'y$r_buff0_thd3' '_Bool'
|   |-BinaryOperator 0x5609c29e5640 <line:763:3, col:221> '_Bool' '='
|   | |-DeclRefExpr 0x5609c29e5098 <col:3> '_Bool' lvalue Var 0x5609c29dfb78 'y$r_buff1_thd3' '_Bool'
|   | `-ImplicitCastExpr 0x5609c29e5628 <col:20, col:221> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x5609c29e55f8 <col:20, col:221> 'int'
|   |     |-ImplicitCastExpr 0x5609c29e55b0 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x5609c29e5598 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x5609c29e50b8 <col:20> '_Bool' lvalue Var 0x5609c29dff50 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x5609c29e55e0 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x5609c29e55c8 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x5609c29e50d8 <col:36> '_Bool' lvalue Var 0x5609c29dfb78 'y$r_buff1_thd3' '_Bool'
|   |     `-ParenExpr 0x5609c29e5578 <col:53, col:221> 'int'
|   |       `-ConditionalOperator 0x5609c29e5548 <col:54, col:220> 'int'
|   |         |-BinaryOperator 0x5609c29e52e8 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x5609c29e5208 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x5609c29e5130 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x5609c29e5118 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x5609c29e50f8 <col:55> '_Bool' lvalue Var 0x5609c29dfd68 'y$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x5609c29e51e8 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x5609c29e5180 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x5609c29e5168 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x5609c29e5148 <col:74> '_Bool' lvalue Var 0x5609c29df988 'y$r_buff0_thd3' '_Bool'
|   |         | |   `-UnaryOperator 0x5609c29e51d0 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x5609c29e51b8 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x5609c29e5198 <col:93> '_Bool' lvalue Var 0x5609c29dfe60 'y$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x5609c29e52c8 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x5609c29e5260 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x5609c29e5248 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x5609c29e5228 <col:112> '_Bool' lvalue Var 0x5609c29df988 'y$r_buff0_thd3' '_Bool'
|   |         |   `-UnaryOperator 0x5609c29e52b0 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x5609c29e5298 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x5609c29e5278 <col:131> '_Bool' lvalue Var 0x5609c29dfb78 'y$r_buff1_thd3' '_Bool'
|   |         |-ImplicitCastExpr 0x5609c29e5530 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x5609c29e5518 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x5609c29e5308 <col:148> '_Bool' lvalue Var 0x5609c29dfb78 'y$r_buff1_thd3' '_Bool'
|   |         `-ParenExpr 0x5609c29e54f8 <col:165, col:220> 'int'
|   |           `-ConditionalOperator 0x5609c29e54c8 <col:166, col:219> 'int'
|   |             |-BinaryOperator 0x5609c29e53c8 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x5609c29e5380 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x5609c29e5368 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x5609c29e5328 <col:166> '_Bool' lvalue Var 0x5609c29dfd68 'y$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x5609c29e53b0 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x5609c29e5398 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x5609c29e5348 <col:184> '_Bool' lvalue Var 0x5609c29df988 'y$r_buff0_thd3' '_Bool'
|   |             |-ImplicitCastExpr 0x5609c29e5498 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x5609c29e5418 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x5609c29e53e8 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x5609c29e54b0 <col:212, col:219> 'int' <IntegralCast>
|   |               `-CStyleCastExpr 0x5609c29e5470 <col:212, col:219> '_Bool' <IntegralToBoolean>
|   |                 `-IntegerLiteral 0x5609c29e5440 <col:219> 'int' 0
|   |-BinaryOperator 0x5609c29e56b8 <line:764:3, col:25> 'int' '='
|   | |-DeclRefExpr 0x5609c29e5660 <col:3> 'int' lvalue Var 0x5609c29df240 '__unbuffered_p2_EAX' 'int'
|   | `-ImplicitCastExpr 0x5609c29e56a0 <col:25> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x5609c29e5680 <col:25> 'int' lvalue Var 0x5609c29df690 'y' 'int'
|   |-BinaryOperator 0x5609c29e57e8 <line:765:3, col:37> 'int' '='
|   | |-DeclRefExpr 0x5609c29e56d8 <col:3> 'int' lvalue Var 0x5609c29df690 'y' 'int'
|   | `-ConditionalOperator 0x5609c29e57b8 <col:7, col:37> 'int'
|   |   |-ImplicitCastExpr 0x5609c29e5770 <col:7> 'int' <IntegralCast>
|   |   | `-ImplicitCastExpr 0x5609c29e5758 <col:7> '_Bool' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x5609c29e56f8 <col:7> '_Bool' lvalue Var 0x5609c29df728 'y$flush_delayed' '_Bool'
|   |   |-ImplicitCastExpr 0x5609c29e5788 <col:25> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x5609c29e5718 <col:25> 'int' lvalue Var 0x5609c29df7a8 'y$mem_tmp' 'int'
|   |   `-ImplicitCastExpr 0x5609c29e57a0 <col:37> 'int' <LValueToRValue>
|   |     `-DeclRefExpr 0x5609c29e5738 <col:37> 'int' lvalue Var 0x5609c29df690 'y' 'int'
|   |-BinaryOperator 0x5609c29e5880 <line:766:3, col:28> '_Bool' '='
|   | |-DeclRefExpr 0x5609c29e5808 <col:3> '_Bool' lvalue Var 0x5609c29df728 'y$flush_delayed' '_Bool'
|   | `-CStyleCastExpr 0x5609c29e5858 <col:21, col:28> '_Bool' <IntegralToBoolean>
|   |   `-IntegerLiteral 0x5609c29e5828 <col:28> 'int' 0
|   |-CallExpr 0x5609c29e58d8 <line:767:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x5609c29e58c0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5609c29e58a0 <col:3> 'void ()' Function 0x5609c2985f00 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x5609c29e5930 <line:768:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x5609c29e5918 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5609c29e58f8 <col:3> 'void ()' Function 0x5609c2985e40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x5609c29e59e0 <line:769:3, col:45> '_Bool' '='
|   | |-DeclRefExpr 0x5609c29e5950 <col:3> '_Bool' lvalue Var 0x5609c29dfed8 'weak$$choice0' '_Bool'
|   | `-ImplicitCastExpr 0x5609c29e59c8 <col:19, col:45> '_Bool' <PointerToBoolean>
|   |   `-CallExpr 0x5609c29e59a8 <col:19, col:45> 'void *'
|   |     `-ImplicitCastExpr 0x5609c29e5990 <col:19> 'void *(*)(void)' <FunctionToPointerDecay>
|   |       `-DeclRefExpr 0x5609c29e5970 <col:19> 'void *(void)' Function 0x5609c2985958 '__VERIFIER_nondet_pointer' 'void *(void)'
|   |-BinaryOperator 0x5609c29e5a90 <line:770:3, col:45> '_Bool' '='
|   | |-DeclRefExpr 0x5609c29e5a00 <col:3> '_Bool' lvalue Var 0x5609c29dff50 'weak$$choice2' '_Bool'
|   | `-ImplicitCastExpr 0x5609c29e5a78 <col:19, col:45> '_Bool' <PointerToBoolean>
|   |   `-CallExpr 0x5609c29e5a58 <col:19, col:45> 'void *'
|   |     `-ImplicitCastExpr 0x5609c29e5a40 <col:19> 'void *(*)(void)' <FunctionToPointerDecay>
|   |       `-DeclRefExpr 0x5609c29e5a20 <col:19> 'void *(void)' Function 0x5609c2985958 '__VERIFIER_nondet_pointer' 'void *(void)'
|   |-BinaryOperator 0x5609c29e5b08 <line:771:3, col:21> '_Bool' '='
|   | |-DeclRefExpr 0x5609c29e5ab0 <col:3> '_Bool' lvalue Var 0x5609c29df728 'y$flush_delayed' '_Bool'
|   | `-ImplicitCastExpr 0x5609c29e5af0 <col:21> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x5609c29e5ad0 <col:21> '_Bool' lvalue Var 0x5609c29dff50 'weak$$choice2' '_Bool'
|   |-BinaryOperator 0x5609c29e5b98 <line:772:3, col:15> 'int' '='
|   | |-DeclRefExpr 0x5609c29e5b28 <col:3> 'int' lvalue Var 0x5609c29df7a8 'y$mem_tmp' 'int'
|   | `-ImplicitCastExpr 0x5609c29e5b80 <col:15> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x5609c29e5b60 <col:15> 'int' lvalue Var 0x5609c29df690 'y' 'int'
|   |-BinaryOperator 0x5609c29e5fd0 <line:773:3, col:162> 'int' '='
|   | |-DeclRefExpr 0x5609c29e5bb8 <col:3> 'int' lvalue Var 0x5609c29df690 'y' 'int'
|   | `-ConditionalOperator 0x5609c29e5fa0 <col:7, col:162> 'int'
|   |   |-BinaryOperator 0x5609c29e5dc8 <col:7, col:84> 'int' '||'
|   |   | |-BinaryOperator 0x5609c29e5ce8 <col:7, col:46> 'int' '||'
|   |   | | |-UnaryOperator 0x5609c29e5c10 <col:7, col:8> 'int' prefix '!' cannot overflow
|   |   | | | `-ImplicitCastExpr 0x5609c29e5bf8 <col:8> '_Bool' <LValueToRValue>
|   |   | | |   `-DeclRefExpr 0x5609c29e5bd8 <col:8> '_Bool' lvalue Var 0x5609c29dfd68 'y$w_buff0_used' '_Bool'
|   |   | | `-BinaryOperator 0x5609c29e5cc8 <col:26, col:46> 'int' '&&'
|   |   | |   |-UnaryOperator 0x5609c29e5c60 <col:26, col:27> 'int' prefix '!' cannot overflow
|   |   | |   | `-ImplicitCastExpr 0x5609c29e5c48 <col:27> '_Bool' <LValueToRValue>
|   |   | |   |   `-DeclRefExpr 0x5609c29e5c28 <col:27> '_Bool' lvalue Var 0x5609c29df988 'y$r_buff0_thd3' '_Bool'
|   |   | |   `-UnaryOperator 0x5609c29e5cb0 <col:45, col:46> 'int' prefix '!' cannot overflow
|   |   | |     `-ImplicitCastExpr 0x5609c29e5c98 <col:46> '_Bool' <LValueToRValue>
|   |   | |       `-DeclRefExpr 0x5609c29e5c78 <col:46> '_Bool' lvalue Var 0x5609c29dfe60 'y$w_buff1_used' '_Bool'
|   |   | `-BinaryOperator 0x5609c29e5da8 <col:64, col:84> 'int' '&&'
|   |   |   |-UnaryOperator 0x5609c29e5d40 <col:64, col:65> 'int' prefix '!' cannot overflow
|   |   |   | `-ImplicitCastExpr 0x5609c29e5d28 <col:65> '_Bool' <LValueToRValue>
|   |   |   |   `-DeclRefExpr 0x5609c29e5d08 <col:65> '_Bool' lvalue Var 0x5609c29df988 'y$r_buff0_thd3' '_Bool'
|   |   |   `-UnaryOperator 0x5609c29e5d90 <col:83, col:84> 'int' prefix '!' cannot overflow
|   |   |     `-ImplicitCastExpr 0x5609c29e5d78 <col:84> '_Bool' <LValueToRValue>
|   |   |       `-DeclRefExpr 0x5609c29e5d58 <col:84> '_Bool' lvalue Var 0x5609c29dfb78 'y$r_buff1_thd3' '_Bool'
|   |   |-ImplicitCastExpr 0x5609c29e5f88 <col:101> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x5609c29e5de8 <col:101> 'int' lvalue Var 0x5609c29df690 'y' 'int'
|   |   `-ParenExpr 0x5609c29e5f68 <col:105, col:162> 'int'
|   |     `-ConditionalOperator 0x5609c29e5f38 <col:106, col:153> 'int'
|   |       |-BinaryOperator 0x5609c29e5ea8 <col:106, col:124> 'int' '&&'
|   |       | |-ImplicitCastExpr 0x5609c29e5e60 <col:106> 'int' <IntegralCast>
|   |       | | `-ImplicitCastExpr 0x5609c29e5e48 <col:106> '_Bool' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x5609c29e5e08 <col:106> '_Bool' lvalue Var 0x5609c29dfd68 'y$w_buff0_used' '_Bool'
|   |       | `-ImplicitCastExpr 0x5609c29e5e90 <col:124> 'int' <IntegralCast>
|   |       |   `-ImplicitCastExpr 0x5609c29e5e78 <col:124> '_Bool' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x5609c29e5e28 <col:124> '_Bool' lvalue Var 0x5609c29df988 'y$r_buff0_thd3' '_Bool'
|   |       |-ImplicitCastExpr 0x5609c29e5f08 <col:141> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x5609c29e5ec8 <col:141> 'int' lvalue Var 0x5609c29dfcf0 'y$w_buff0' 'int'
|   |       `-ImplicitCastExpr 0x5609c29e5f20 <col:153> 'int' <LValueToRValue>
|   |         `-DeclRefExpr 0x5609c29e5ee8 <col:153> 'int' lvalue Var 0x5609c29dfde8 'y$w_buff1' 'int'
|   |-BinaryOperator 0x5609c29e64e0 <line:774:3, col:208> 'int' '='
|   | |-DeclRefExpr 0x5609c29e5ff0 <col:3> 'int' lvalue Var 0x5609c29dfcf0 'y$w_buff0' 'int'
|   | `-ConditionalOperator 0x5609c29e64b0 <col:15, col:208> 'int'
|   |   |-ImplicitCastExpr 0x5609c29e6480 <col:15> 'int' <IntegralCast>
|   |   | `-ImplicitCastExpr 0x5609c29e6468 <col:15> '_Bool' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x5609c29e6010 <col:15> '_Bool' lvalue Var 0x5609c29dff50 'weak$$choice2' '_Bool'
|   |   |-ImplicitCastExpr 0x5609c29e6498 <col:31> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x5609c29e6030 <col:31> 'int' lvalue Var 0x5609c29dfcf0 'y$w_buff0' 'int'
|   |   `-ParenExpr 0x5609c29e6448 <col:43, col:208> 'int'
|   |     `-ConditionalOperator 0x5609c29e6418 <col:44, col:207> 'int'
|   |       |-BinaryOperator 0x5609c29e6240 <col:44, col:121> 'int' '||'
|   |       | |-BinaryOperator 0x5609c29e6160 <col:44, col:83> 'int' '||'
|   |       | | |-UnaryOperator 0x5609c29e6088 <col:44, col:45> 'int' prefix '!' cannot overflow
|   |       | | | `-ImplicitCastExpr 0x5609c29e6070 <col:45> '_Bool' <LValueToRValue>
|   |       | | |   `-DeclRefExpr 0x5609c29e6050 <col:45> '_Bool' lvalue Var 0x5609c29dfd68 'y$w_buff0_used' '_Bool'
|   |       | | `-BinaryOperator 0x5609c29e6140 <col:63, col:83> 'int' '&&'
|   |       | |   |-UnaryOperator 0x5609c29e60d8 <col:63, col:64> 'int' prefix '!' cannot overflow
|   |       | |   | `-ImplicitCastExpr 0x5609c29e60c0 <col:64> '_Bool' <LValueToRValue>
|   |       | |   |   `-DeclRefExpr 0x5609c29e60a0 <col:64> '_Bool' lvalue Var 0x5609c29df988 'y$r_buff0_thd3' '_Bool'
|   |       | |   `-UnaryOperator 0x5609c29e6128 <col:82, col:83> 'int' prefix '!' cannot overflow
|   |       | |     `-ImplicitCastExpr 0x5609c29e6110 <col:83> '_Bool' <LValueToRValue>
|   |       | |       `-DeclRefExpr 0x5609c29e60f0 <col:83> '_Bool' lvalue Var 0x5609c29dfe60 'y$w_buff1_used' '_Bool'
|   |       | `-BinaryOperator 0x5609c29e6220 <col:101, col:121> 'int' '&&'
|   |       |   |-UnaryOperator 0x5609c29e61b8 <col:101, col:102> 'int' prefix '!' cannot overflow
|   |       |   | `-ImplicitCastExpr 0x5609c29e61a0 <col:102> '_Bool' <LValueToRValue>
|   |       |   |   `-DeclRefExpr 0x5609c29e6180 <col:102> '_Bool' lvalue Var 0x5609c29df988 'y$r_buff0_thd3' '_Bool'
|   |       |   `-UnaryOperator 0x5609c29e6208 <col:120, col:121> 'int' prefix '!' cannot overflow
|   |       |     `-ImplicitCastExpr 0x5609c29e61f0 <col:121> '_Bool' <LValueToRValue>
|   |       |       `-DeclRefExpr 0x5609c29e61d0 <col:121> '_Bool' lvalue Var 0x5609c29dfb78 'y$r_buff1_thd3' '_Bool'
|   |       |-ImplicitCastExpr 0x5609c29e6400 <col:138> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x5609c29e6260 <col:138> 'int' lvalue Var 0x5609c29dfcf0 'y$w_buff0' 'int'
|   |       `-ParenExpr 0x5609c29e63e0 <col:150, col:207> 'int'
|   |         `-ConditionalOperator 0x5609c29e63b0 <col:151, col:198> 'int'
|   |           |-BinaryOperator 0x5609c29e6320 <col:151, col:169> 'int' '&&'
|   |           | |-ImplicitCastExpr 0x5609c29e62d8 <col:151> 'int' <IntegralCast>
|   |           | | `-ImplicitCastExpr 0x5609c29e62c0 <col:151> '_Bool' <LValueToRValue>
|   |           | |   `-DeclRefExpr 0x5609c29e6280 <col:151> '_Bool' lvalue Var 0x5609c29dfd68 'y$w_buff0_used' '_Bool'
|   |           | `-ImplicitCastExpr 0x5609c29e6308 <col:169> 'int' <IntegralCast>
|   |           |   `-ImplicitCastExpr 0x5609c29e62f0 <col:169> '_Bool' <LValueToRValue>
|   |           |     `-DeclRefExpr 0x5609c29e62a0 <col:169> '_Bool' lvalue Var 0x5609c29df988 'y$r_buff0_thd3' '_Bool'
|   |           |-ImplicitCastExpr 0x5609c29e6380 <col:186> 'int' <LValueToRValue>
|   |           | `-DeclRefExpr 0x5609c29e6340 <col:186> 'int' lvalue Var 0x5609c29dfcf0 'y$w_buff0' 'int'
|   |           `-ImplicitCastExpr 0x5609c29e6398 <col:198> 'int' <LValueToRValue>
|   |             `-DeclRefExpr 0x5609c29e6360 <col:198> 'int' lvalue Var 0x5609c29dfcf0 'y$w_buff0' 'int'
|   |-BinaryOperator 0x5609c29e69f0 <line:775:3, col:208> 'int' '='
|   | |-DeclRefExpr 0x5609c29e6500 <col:3> 'int' lvalue Var 0x5609c29dfde8 'y$w_buff1' 'int'
|   | `-ConditionalOperator 0x5609c29e69c0 <col:15, col:208> 'int'
|   |   |-ImplicitCastExpr 0x5609c29e6990 <col:15> 'int' <IntegralCast>
|   |   | `-ImplicitCastExpr 0x5609c29e6978 <col:15> '_Bool' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x5609c29e6520 <col:15> '_Bool' lvalue Var 0x5609c29dff50 'weak$$choice2' '_Bool'
|   |   |-ImplicitCastExpr 0x5609c29e69a8 <col:31> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x5609c29e6540 <col:31> 'int' lvalue Var 0x5609c29dfde8 'y$w_buff1' 'int'
|   |   `-ParenExpr 0x5609c29e6958 <col:43, col:208> 'int'
|   |     `-ConditionalOperator 0x5609c29e6928 <col:44, col:207> 'int'
|   |       |-BinaryOperator 0x5609c29e6750 <col:44, col:121> 'int' '||'
|   |       | |-BinaryOperator 0x5609c29e6670 <col:44, col:83> 'int' '||'
|   |       | | |-UnaryOperator 0x5609c29e6598 <col:44, col:45> 'int' prefix '!' cannot overflow
|   |       | | | `-ImplicitCastExpr 0x5609c29e6580 <col:45> '_Bool' <LValueToRValue>
|   |       | | |   `-DeclRefExpr 0x5609c29e6560 <col:45> '_Bool' lvalue Var 0x5609c29dfd68 'y$w_buff0_used' '_Bool'
|   |       | | `-BinaryOperator 0x5609c29e6650 <col:63, col:83> 'int' '&&'
|   |       | |   |-UnaryOperator 0x5609c29e65e8 <col:63, col:64> 'int' prefix '!' cannot overflow
|   |       | |   | `-ImplicitCastExpr 0x5609c29e65d0 <col:64> '_Bool' <LValueToRValue>
|   |       | |   |   `-DeclRefExpr 0x5609c29e65b0 <col:64> '_Bool' lvalue Var 0x5609c29df988 'y$r_buff0_thd3' '_Bool'
|   |       | |   `-UnaryOperator 0x5609c29e6638 <col:82, col:83> 'int' prefix '!' cannot overflow
|   |       | |     `-ImplicitCastExpr 0x5609c29e6620 <col:83> '_Bool' <LValueToRValue>
|   |       | |       `-DeclRefExpr 0x5609c29e6600 <col:83> '_Bool' lvalue Var 0x5609c29dfe60 'y$w_buff1_used' '_Bool'
|   |       | `-BinaryOperator 0x5609c29e6730 <col:101, col:121> 'int' '&&'
|   |       |   |-UnaryOperator 0x5609c29e66c8 <col:101, col:102> 'int' prefix '!' cannot overflow
|   |       |   | `-ImplicitCastExpr 0x5609c29e66b0 <col:102> '_Bool' <LValueToRValue>
|   |       |   |   `-DeclRefExpr 0x5609c29e6690 <col:102> '_Bool' lvalue Var 0x5609c29df988 'y$r_buff0_thd3' '_Bool'
|   |       |   `-UnaryOperator 0x5609c29e6718 <col:120, col:121> 'int' prefix '!' cannot overflow
|   |       |     `-ImplicitCastExpr 0x5609c29e6700 <col:121> '_Bool' <LValueToRValue>
|   |       |       `-DeclRefExpr 0x5609c29e66e0 <col:121> '_Bool' lvalue Var 0x5609c29dfb78 'y$r_buff1_thd3' '_Bool'
|   |       |-ImplicitCastExpr 0x5609c29e6910 <col:138> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x5609c29e6770 <col:138> 'int' lvalue Var 0x5609c29dfde8 'y$w_buff1' 'int'
|   |       `-ParenExpr 0x5609c29e68f0 <col:150, col:207> 'int'
|   |         `-ConditionalOperator 0x5609c29e68c0 <col:151, col:198> 'int'
|   |           |-BinaryOperator 0x5609c29e6830 <col:151, col:169> 'int' '&&'
|   |           | |-ImplicitCastExpr 0x5609c29e67e8 <col:151> 'int' <IntegralCast>
|   |           | | `-ImplicitCastExpr 0x5609c29e67d0 <col:151> '_Bool' <LValueToRValue>
|   |           | |   `-DeclRefExpr 0x5609c29e6790 <col:151> '_Bool' lvalue Var 0x5609c29dfd68 'y$w_buff0_used' '_Bool'
|   |           | `-ImplicitCastExpr 0x5609c29e6818 <col:169> 'int' <IntegralCast>
|   |           |   `-ImplicitCastExpr 0x5609c29e6800 <col:169> '_Bool' <LValueToRValue>
|   |           |     `-DeclRefExpr 0x5609c29e67b0 <col:169> '_Bool' lvalue Var 0x5609c29df988 'y$r_buff0_thd3' '_Bool'
|   |           |-ImplicitCastExpr 0x5609c29e6890 <col:186> 'int' <LValueToRValue>
|   |           | `-DeclRefExpr 0x5609c29e6850 <col:186> 'int' lvalue Var 0x5609c29dfde8 'y$w_buff1' 'int'
|   |           `-ImplicitCastExpr 0x5609c29e68a8 <col:198> 'int' <LValueToRValue>
|   |             `-DeclRefExpr 0x5609c29e6870 <col:198> 'int' lvalue Var 0x5609c29dfde8 'y$w_buff1' 'int'
|   |-BinaryOperator 0x5609c29e6fa8 <line:776:3, col:227> '_Bool' '='
|   | |-DeclRefExpr 0x5609c29e6a10 <col:3> '_Bool' lvalue Var 0x5609c29dfd68 'y$w_buff0_used' '_Bool'
|   | `-ImplicitCastExpr 0x5609c29e6f90 <col:20, col:227> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x5609c29e6f60 <col:20, col:227> 'int'
|   |     |-ImplicitCastExpr 0x5609c29e6f18 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x5609c29e6f00 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x5609c29e6a30 <col:20> '_Bool' lvalue Var 0x5609c29dff50 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x5609c29e6f48 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x5609c29e6f30 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x5609c29e6a50 <col:36> '_Bool' lvalue Var 0x5609c29dfd68 'y$w_buff0_used' '_Bool'
|   |     `-ParenExpr 0x5609c29e6ee0 <col:53, col:227> 'int'
|   |       `-ConditionalOperator 0x5609c29e6eb0 <col:54, col:226> 'int'
|   |         |-BinaryOperator 0x5609c29e6c70 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x5609c29e6b90 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x5609c29e6aa8 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x5609c29e6a90 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x5609c29e6a70 <col:55> '_Bool' lvalue Var 0x5609c29dfd68 'y$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x5609c29e6b70 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x5609c29e6af8 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x5609c29e6ae0 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x5609c29e6ac0 <col:74> '_Bool' lvalue Var 0x5609c29df988 'y$r_buff0_thd3' '_Bool'
|   |         | |   `-UnaryOperator 0x5609c29e6b48 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x5609c29e6b30 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x5609c29e6b10 <col:93> '_Bool' lvalue Var 0x5609c29dfe60 'y$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x5609c29e6c50 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x5609c29e6be8 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x5609c29e6bd0 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x5609c29e6bb0 <col:112> '_Bool' lvalue Var 0x5609c29df988 'y$r_buff0_thd3' '_Bool'
|   |         |   `-UnaryOperator 0x5609c29e6c38 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x5609c29e6c20 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x5609c29e6c00 <col:131> '_Bool' lvalue Var 0x5609c29dfb78 'y$r_buff1_thd3' '_Bool'
|   |         |-ImplicitCastExpr 0x5609c29e6e98 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x5609c29e6e80 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x5609c29e6c90 <col:148> '_Bool' lvalue Var 0x5609c29dfd68 'y$w_buff0_used' '_Bool'
|   |         `-ParenExpr 0x5609c29e6e60 <col:165, col:226> 'int'
|   |           `-ConditionalOperator 0x5609c29e6e30 <col:166, col:212> 'int'
|   |             |-BinaryOperator 0x5609c29e6d50 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x5609c29e6d08 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x5609c29e6cf0 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x5609c29e6cb0 <col:166> '_Bool' lvalue Var 0x5609c29dfd68 'y$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x5609c29e6d38 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x5609c29e6d20 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x5609c29e6cd0 <col:184> '_Bool' lvalue Var 0x5609c29df988 'y$r_buff0_thd3' '_Bool'
|   |             |-ImplicitCastExpr 0x5609c29e6de8 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x5609c29e6da0 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x5609c29e6d70 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x5609c29e6e18 <col:212> 'int' <IntegralCast>
|   |               `-ImplicitCastExpr 0x5609c29e6e00 <col:212> '_Bool' <LValueToRValue>
|   |                 `-DeclRefExpr 0x5609c29e6dc8 <col:212> '_Bool' lvalue Var 0x5609c29dfd68 'y$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x5609c29e7570 <line:777:3, col:221> '_Bool' '='
|   | |-DeclRefExpr 0x5609c29e6fc8 <col:3> '_Bool' lvalue Var 0x5609c29dfe60 'y$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x5609c29e7558 <col:20, col:221> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x5609c29e7528 <col:20, col:221> 'int'
|   |     |-ImplicitCastExpr 0x5609c29e74e0 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x5609c29e74c8 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x5609c29e6fe8 <col:20> '_Bool' lvalue Var 0x5609c29dff50 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x5609c29e7510 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x5609c29e74f8 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x5609c29e7008 <col:36> '_Bool' lvalue Var 0x5609c29dfe60 'y$w_buff1_used' '_Bool'
|   |     `-ParenExpr 0x5609c29e74a8 <col:53, col:221> 'int'
|   |       `-ConditionalOperator 0x5609c29e7478 <col:54, col:220> 'int'
|   |         |-BinaryOperator 0x5609c29e7218 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x5609c29e7138 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x5609c29e7060 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x5609c29e7048 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x5609c29e7028 <col:55> '_Bool' lvalue Var 0x5609c29dfd68 'y$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x5609c29e7118 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x5609c29e70b0 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x5609c29e7098 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x5609c29e7078 <col:74> '_Bool' lvalue Var 0x5609c29df988 'y$r_buff0_thd3' '_Bool'
|   |         | |   `-UnaryOperator 0x5609c29e7100 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x5609c29e70e8 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x5609c29e70c8 <col:93> '_Bool' lvalue Var 0x5609c29dfe60 'y$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x5609c29e71f8 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x5609c29e7190 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x5609c29e7178 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x5609c29e7158 <col:112> '_Bool' lvalue Var 0x5609c29df988 'y$r_buff0_thd3' '_Bool'
|   |         |   `-UnaryOperator 0x5609c29e71e0 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x5609c29e71c8 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x5609c29e71a8 <col:131> '_Bool' lvalue Var 0x5609c29dfb78 'y$r_buff1_thd3' '_Bool'
|   |         |-ImplicitCastExpr 0x5609c29e7460 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x5609c29e7448 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x5609c29e7238 <col:148> '_Bool' lvalue Var 0x5609c29dfe60 'y$w_buff1_used' '_Bool'
|   |         `-ParenExpr 0x5609c29e7428 <col:165, col:220> 'int'
|   |           `-ConditionalOperator 0x5609c29e73f8 <col:166, col:219> 'int'
|   |             |-BinaryOperator 0x5609c29e72f8 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x5609c29e72b0 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x5609c29e7298 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x5609c29e7258 <col:166> '_Bool' lvalue Var 0x5609c29dfd68 'y$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x5609c29e72e0 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x5609c29e72c8 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x5609c29e7278 <col:184> '_Bool' lvalue Var 0x5609c29df988 'y$r_buff0_thd3' '_Bool'
|   |             |-ImplicitCastExpr 0x5609c29e73c8 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x5609c29e7348 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x5609c29e7318 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x5609c29e73e0 <col:212, col:219> 'int' <IntegralCast>
|   |               `-CStyleCastExpr 0x5609c29e73a0 <col:212, col:219> '_Bool' <IntegralToBoolean>
|   |                 `-IntegerLiteral 0x5609c29e7370 <col:219> 'int' 0
|   |-BinaryOperator 0x5609c29e7b18 <line:778:3, col:227> '_Bool' '='
|   | |-DeclRefExpr 0x5609c29e7590 <col:3> '_Bool' lvalue Var 0x5609c29df988 'y$r_buff0_thd3' '_Bool'
|   | `-ImplicitCastExpr 0x5609c29e7b00 <col:20, col:227> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x5609c29e7ad0 <col:20, col:227> 'int'
|   |     |-ImplicitCastExpr 0x5609c29e7a88 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x5609c29e7a70 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x5609c29e75b0 <col:20> '_Bool' lvalue Var 0x5609c29dff50 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x5609c29e7ab8 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x5609c29e7aa0 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x5609c29e75d0 <col:36> '_Bool' lvalue Var 0x5609c29df988 'y$r_buff0_thd3' '_Bool'
|   |     `-ParenExpr 0x5609c29e7a50 <col:53, col:227> 'int'
|   |       `-ConditionalOperator 0x5609c29e7a20 <col:54, col:226> 'int'
|   |         |-BinaryOperator 0x5609c29e77e0 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x5609c29e7700 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x5609c29e7628 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x5609c29e7610 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x5609c29e75f0 <col:55> '_Bool' lvalue Var 0x5609c29dfd68 'y$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x5609c29e76e0 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x5609c29e7678 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x5609c29e7660 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x5609c29e7640 <col:74> '_Bool' lvalue Var 0x5609c29df988 'y$r_buff0_thd3' '_Bool'
|   |         | |   `-UnaryOperator 0x5609c29e76c8 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x5609c29e76b0 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x5609c29e7690 <col:93> '_Bool' lvalue Var 0x5609c29dfe60 'y$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x5609c29e77c0 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x5609c29e7758 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x5609c29e7740 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x5609c29e7720 <col:112> '_Bool' lvalue Var 0x5609c29df988 'y$r_buff0_thd3' '_Bool'
|   |         |   `-UnaryOperator 0x5609c29e77a8 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x5609c29e7790 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x5609c29e7770 <col:131> '_Bool' lvalue Var 0x5609c29dfb78 'y$r_buff1_thd3' '_Bool'
|   |         |-ImplicitCastExpr 0x5609c29e7a08 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x5609c29e79f0 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x5609c29e7800 <col:148> '_Bool' lvalue Var 0x5609c29df988 'y$r_buff0_thd3' '_Bool'
|   |         `-ParenExpr 0x5609c29e79d0 <col:165, col:226> 'int'
|   |           `-ConditionalOperator 0x5609c29e79a0 <col:166, col:212> 'int'
|   |             |-BinaryOperator 0x5609c29e78c0 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x5609c29e7878 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x5609c29e7860 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x5609c29e7820 <col:166> '_Bool' lvalue Var 0x5609c29dfd68 'y$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x5609c29e78a8 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x5609c29e7890 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x5609c29e7840 <col:184> '_Bool' lvalue Var 0x5609c29df988 'y$r_buff0_thd3' '_Bool'
|   |             |-ImplicitCastExpr 0x5609c29e7958 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x5609c29e7910 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x5609c29e78e0 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x5609c29e7988 <col:212> 'int' <IntegralCast>
|   |               `-ImplicitCastExpr 0x5609c29e7970 <col:212> '_Bool' <LValueToRValue>
|   |                 `-DeclRefExpr 0x5609c29e7938 <col:212> '_Bool' lvalue Var 0x5609c29df988 'y$r_buff0_thd3' '_Bool'
|   |-BinaryOperator 0x5609c29e8108 <line:779:3, col:221> '_Bool' '='
|   | |-DeclRefExpr 0x5609c29e7b38 <col:3> '_Bool' lvalue Var 0x5609c29dfb78 'y$r_buff1_thd3' '_Bool'
|   | `-ImplicitCastExpr 0x5609c29e80f0 <col:20, col:221> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x5609c29e80c0 <col:20, col:221> 'int'
|   |     |-ImplicitCastExpr 0x5609c29e8078 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x5609c29e8060 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x5609c29e7b80 <col:20> '_Bool' lvalue Var 0x5609c29dff50 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x5609c29e80a8 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x5609c29e8090 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x5609c29e7ba0 <col:36> '_Bool' lvalue Var 0x5609c29dfb78 'y$r_buff1_thd3' '_Bool'
|   |     `-ParenExpr 0x5609c29e8040 <col:53, col:221> 'int'
|   |       `-ConditionalOperator 0x5609c29e8010 <col:54, col:220> 'int'
|   |         |-BinaryOperator 0x5609c29e7db0 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x5609c29e7cd0 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x5609c29e7bf8 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x5609c29e7be0 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x5609c29e7bc0 <col:55> '_Bool' lvalue Var 0x5609c29dfd68 'y$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x5609c29e7cb0 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x5609c29e7c48 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x5609c29e7c30 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x5609c29e7c10 <col:74> '_Bool' lvalue Var 0x5609c29df988 'y$r_buff0_thd3' '_Bool'
|   |         | |   `-UnaryOperator 0x5609c29e7c98 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x5609c29e7c80 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x5609c29e7c60 <col:93> '_Bool' lvalue Var 0x5609c29dfe60 'y$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x5609c29e7d90 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x5609c29e7d28 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x5609c29e7d10 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x5609c29e7cf0 <col:112> '_Bool' lvalue Var 0x5609c29df988 'y$r_buff0_thd3' '_Bool'
|   |         |   `-UnaryOperator 0x5609c29e7d78 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x5609c29e7d60 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x5609c29e7d40 <col:131> '_Bool' lvalue Var 0x5609c29dfb78 'y$r_buff1_thd3' '_Bool'
|   |         |-ImplicitCastExpr 0x5609c29e7ff8 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x5609c29e7fe0 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x5609c29e7dd0 <col:148> '_Bool' lvalue Var 0x5609c29dfb78 'y$r_buff1_thd3' '_Bool'
|   |         `-ParenExpr 0x5609c29e7fc0 <col:165, col:220> 'int'
|   |           `-ConditionalOperator 0x5609c29e7f90 <col:166, col:219> 'int'
|   |             |-BinaryOperator 0x5609c29e7e90 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x5609c29e7e48 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x5609c29e7e30 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x5609c29e7df0 <col:166> '_Bool' lvalue Var 0x5609c29dfd68 'y$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x5609c29e7e78 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x5609c29e7e60 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x5609c29e7e10 <col:184> '_Bool' lvalue Var 0x5609c29df988 'y$r_buff0_thd3' '_Bool'
|   |             |-ImplicitCastExpr 0x5609c29e7f60 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x5609c29e7ee0 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x5609c29e7eb0 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x5609c29e7f78 <col:212, col:219> 'int' <IntegralCast>
|   |               `-CStyleCastExpr 0x5609c29e7f38 <col:212, col:219> '_Bool' <IntegralToBoolean>
|   |                 `-IntegerLiteral 0x5609c29e7f08 <col:219> 'int' 0
|   |-BinaryOperator 0x5609c29e8180 <line:780:3, col:25> 'int' '='
|   | |-DeclRefExpr 0x5609c29e8128 <col:3> 'int' lvalue Var 0x5609c29df360 '__unbuffered_p2_EBX' 'int'
|   | `-ImplicitCastExpr 0x5609c29e8168 <col:25> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x5609c29e8148 <col:25> 'int' lvalue Var 0x5609c29df690 'y' 'int'
|   |-BinaryOperator 0x5609c29e82b0 <line:781:3, col:37> 'int' '='
|   | |-DeclRefExpr 0x5609c29e81a0 <col:3> 'int' lvalue Var 0x5609c29df690 'y' 'int'
|   | `-ConditionalOperator 0x5609c29e8280 <col:7, col:37> 'int'
|   |   |-ImplicitCastExpr 0x5609c29e8238 <col:7> 'int' <IntegralCast>
|   |   | `-ImplicitCastExpr 0x5609c29e8220 <col:7> '_Bool' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x5609c29e81c0 <col:7> '_Bool' lvalue Var 0x5609c29df728 'y$flush_delayed' '_Bool'
|   |   |-ImplicitCastExpr 0x5609c29e8250 <col:25> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x5609c29e81e0 <col:25> 'int' lvalue Var 0x5609c29df7a8 'y$mem_tmp' 'int'
|   |   `-ImplicitCastExpr 0x5609c29e8268 <col:37> 'int' <LValueToRValue>
|   |     `-DeclRefExpr 0x5609c29e8200 <col:37> 'int' lvalue Var 0x5609c29df690 'y' 'int'
|   |-BinaryOperator 0x5609c29e8348 <line:782:3, col:28> '_Bool' '='
|   | |-DeclRefExpr 0x5609c29e82d0 <col:3> '_Bool' lvalue Var 0x5609c29df728 'y$flush_delayed' '_Bool'
|   | `-CStyleCastExpr 0x5609c29e8320 <col:21, col:28> '_Bool' <IntegralToBoolean>
|   |   `-IntegerLiteral 0x5609c29e82f0 <col:28> 'int' 0
|   |-CallExpr 0x5609c29e83a0 <line:783:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x5609c29e8388 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5609c29e8368 <col:3> 'void ()' Function 0x5609c2985f00 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x5609c29e83f8 <line:784:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x5609c29e83e0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5609c29e83c0 <col:3> 'void ()' Function 0x5609c2985e40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x5609c29e86e0 <line:785:3, col:103> 'int' '='
|   | |-DeclRefExpr 0x5609c29e8418 <col:3> 'int' lvalue Var 0x5609c29df690 'y' 'int'
|   | `-ConditionalOperator 0x5609c29e86b0 <col:7, col:103> 'int'
|   |   |-BinaryOperator 0x5609c29e84d8 <col:7, col:25> 'int' '&&'
|   |   | |-ImplicitCastExpr 0x5609c29e8490 <col:7> 'int' <IntegralCast>
|   |   | | `-ImplicitCastExpr 0x5609c29e8478 <col:7> '_Bool' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x5609c29e8438 <col:7> '_Bool' lvalue Var 0x5609c29dfd68 'y$w_buff0_used' '_Bool'
|   |   | `-ImplicitCastExpr 0x5609c29e84c0 <col:25> 'int' <IntegralCast>
|   |   |   `-ImplicitCastExpr 0x5609c29e84a8 <col:25> '_Bool' <LValueToRValue>
|   |   |     `-DeclRefExpr 0x5609c29e8458 <col:25> '_Bool' lvalue Var 0x5609c29df988 'y$r_buff0_thd3' '_Bool'
|   |   |-ImplicitCastExpr 0x5609c29e8698 <col:42> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x5609c29e84f8 <col:42> 'int' lvalue Var 0x5609c29dfcf0 'y$w_buff0' 'int'
|   |   `-ParenExpr 0x5609c29e8678 <col:54, col:103> 'int'
|   |     `-ConditionalOperator 0x5609c29e8648 <col:55, col:102> 'int'
|   |       |-BinaryOperator 0x5609c29e85b8 <col:55, col:73> 'int' '&&'
|   |       | |-ImplicitCastExpr 0x5609c29e8570 <col:55> 'int' <IntegralCast>
|   |       | | `-ImplicitCastExpr 0x5609c29e8558 <col:55> '_Bool' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x5609c29e8518 <col:55> '_Bool' lvalue Var 0x5609c29dfe60 'y$w_buff1_used' '_Bool'
|   |       | `-ImplicitCastExpr 0x5609c29e85a0 <col:73> 'int' <IntegralCast>
|   |       |   `-ImplicitCastExpr 0x5609c29e8588 <col:73> '_Bool' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x5609c29e8538 <col:73> '_Bool' lvalue Var 0x5609c29dfb78 'y$r_buff1_thd3' '_Bool'
|   |       |-ImplicitCastExpr 0x5609c29e8618 <col:90> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x5609c29e85d8 <col:90> 'int' lvalue Var 0x5609c29dfde8 'y$w_buff1' 'int'
|   |       `-ImplicitCastExpr 0x5609c29e8630 <col:102> 'int' <LValueToRValue>
|   |         `-DeclRefExpr 0x5609c29e85f8 <col:102> 'int' lvalue Var 0x5609c29df690 'y' 'int'
|   |-BinaryOperator 0x5609c29e88e8 <line:786:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x5609c29e8700 <col:3> '_Bool' lvalue Var 0x5609c29dfd68 'y$w_buff0_used' '_Bool'
|   | `-ImplicitCastExpr 0x5609c29e88d0 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x5609c29e88a0 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x5609c29e87c0 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x5609c29e8778 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x5609c29e8760 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x5609c29e8720 <col:20> '_Bool' lvalue Var 0x5609c29dfd68 'y$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x5609c29e87a8 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x5609c29e8790 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x5609c29e8740 <col:38> '_Bool' lvalue Var 0x5609c29df988 'y$r_buff0_thd3' '_Bool'
|   |     |-ImplicitCastExpr 0x5609c29e8858 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x5609c29e8810 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x5609c29e87e0 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x5609c29e8888 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x5609c29e8870 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x5609c29e8838 <col:66> '_Bool' lvalue Var 0x5609c29dfd68 'y$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x5609c29e8bf0 <line:787:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x5609c29e8908 <col:3> '_Bool' lvalue Var 0x5609c29dfe60 'y$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x5609c29e8bd8 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x5609c29e8ba8 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x5609c29e8aa8 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x5609c29e89c8 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x5609c29e8980 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x5609c29e8968 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x5609c29e8928 <col:20> '_Bool' lvalue Var 0x5609c29dfd68 'y$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x5609c29e89b0 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x5609c29e8998 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x5609c29e8948 <col:38> '_Bool' lvalue Var 0x5609c29df988 'y$r_buff0_thd3' '_Bool'
|   |     | `-BinaryOperator 0x5609c29e8a88 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x5609c29e8a40 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x5609c29e8a28 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x5609c29e89e8 <col:56> '_Bool' lvalue Var 0x5609c29dfe60 'y$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x5609c29e8a70 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x5609c29e8a58 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x5609c29e8a08 <col:74> '_Bool' lvalue Var 0x5609c29dfb78 'y$r_buff1_thd3' '_Bool'
|   |     |-ImplicitCastExpr 0x5609c29e8b40 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x5609c29e8af8 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x5609c29e8ac8 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x5609c29e8b90 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x5609c29e8b58 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x5609c29e8b20 <col:102> '_Bool' lvalue Var 0x5609c29dfe60 'y$w_buff1_used' '_Bool'
|   |-BinaryOperator 0x5609c29e8df8 <line:788:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x5609c29e8c10 <col:3> '_Bool' lvalue Var 0x5609c29df988 'y$r_buff0_thd3' '_Bool'
|   | `-ImplicitCastExpr 0x5609c29e8de0 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x5609c29e8db0 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x5609c29e8cd0 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x5609c29e8c88 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x5609c29e8c70 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x5609c29e8c30 <col:20> '_Bool' lvalue Var 0x5609c29dfd68 'y$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x5609c29e8cb8 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x5609c29e8ca0 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x5609c29e8c50 <col:38> '_Bool' lvalue Var 0x5609c29df988 'y$r_buff0_thd3' '_Bool'
|   |     |-ImplicitCastExpr 0x5609c29e8d68 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x5609c29e8d20 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x5609c29e8cf0 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x5609c29e8d98 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x5609c29e8d80 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x5609c29e8d48 <col:66> '_Bool' lvalue Var 0x5609c29df988 'y$r_buff0_thd3' '_Bool'
|   |-BinaryOperator 0x5609c29e90e0 <line:789:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x5609c29e8e18 <col:3> '_Bool' lvalue Var 0x5609c29dfb78 'y$r_buff1_thd3' '_Bool'
|   | `-ImplicitCastExpr 0x5609c29e90c8 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x5609c29e9098 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x5609c29e8fb8 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x5609c29e8ed8 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x5609c29e8e90 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x5609c29e8e78 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x5609c29e8e38 <col:20> '_Bool' lvalue Var 0x5609c29dfd68 'y$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x5609c29e8ec0 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x5609c29e8ea8 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x5609c29e8e58 <col:38> '_Bool' lvalue Var 0x5609c29df988 'y$r_buff0_thd3' '_Bool'
|   |     | `-BinaryOperator 0x5609c29e8f98 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x5609c29e8f50 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x5609c29e8f38 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x5609c29e8ef8 <col:56> '_Bool' lvalue Var 0x5609c29dfe60 'y$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x5609c29e8f80 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x5609c29e8f68 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x5609c29e8f18 <col:74> '_Bool' lvalue Var 0x5609c29dfb78 'y$r_buff1_thd3' '_Bool'
|   |     |-ImplicitCastExpr 0x5609c29e9050 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x5609c29e9008 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x5609c29e8fd8 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x5609c29e9080 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x5609c29e9068 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x5609c29e9030 <col:102> '_Bool' lvalue Var 0x5609c29dfb78 'y$r_buff1_thd3' '_Bool'
|   |-CallExpr 0x5609c29e9138 <line:790:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x5609c29e9120 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5609c29e9100 <col:3> 'void ()' Function 0x5609c2985f00 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x5609c29e9190 <line:791:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x5609c29e9178 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5609c29e9158 <col:3> 'void ()' Function 0x5609c2985e40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x5609c29e9248 <line:792:3, col:41> 'int' '='
|   | |-DeclRefExpr 0x5609c29e91b0 <col:3> 'int' lvalue Var 0x5609c29df120 '__unbuffered_cnt' 'int'
|   | `-BinaryOperator 0x5609c29e9228 <col:22, col:41> 'int' '+'
|   |   |-ImplicitCastExpr 0x5609c29e9210 <col:22> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x5609c29e91d0 <col:22> 'int' lvalue Var 0x5609c29df120 '__unbuffered_cnt' 'int'
|   |   `-IntegerLiteral 0x5609c29e91f0 <col:41> 'int' 1
|   |-CallExpr 0x5609c29e92a0 <line:793:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x5609c29e9288 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5609c29e9268 <col:3> 'void ()' Function 0x5609c2985f00 '__VERIFIER_atomic_end' 'void ()'
|   `-ReturnStmt 0x5609c29e9318 <line:794:3, col:36>
|     `-CallExpr 0x5609c29e92f8 <col:10, col:36> 'void *'
|       `-ImplicitCastExpr 0x5609c29e92e0 <col:10> 'void *(*)(void)' <FunctionToPointerDecay>
|         `-DeclRefExpr 0x5609c29e92c0 <col:10> 'void *(void)' Function 0x5609c2985958 '__VERIFIER_nondet_pointer' 'void *(void)'
|-FunctionDecl 0x5609c29e94b0 prev 0x5609c29dee68 <line:796:1, line:798:1> line:796:6 fence 'void ()'
| `-CompoundStmt 0x5609c29e9550 <line:797:1, line:798:1>
|-FunctionDecl 0x5609c29e9580 prev 0x5609c29def28 <line:799:1, line:801:1> line:799:6 isync 'void ()'
| `-CompoundStmt 0x5609c29e9620 <line:800:1, line:801:1>
|-FunctionDecl 0x5609c29e9650 prev 0x5609c29defe8 <line:802:1, line:804:1> line:802:6 lwfence 'void ()'
| `-CompoundStmt 0x5609c29e96f0 <line:803:1, line:804:1>
`-FunctionDecl 0x5609c29e9758 <line:805:1, line:842:1> line:805:5 main 'int ()'
  `-CompoundStmt 0x5609c29ede18 <line:806:1, line:842:1>
    |-DeclStmt 0x5609c29e9870 <line:807:3, col:18>
    | `-VarDecl 0x5609c29e9808 <col:3, col:13> col:13 used t1875 'pthread_t':'unsigned long'
    |-CallExpr 0x5609c29e9a78 <line:808:3, col:54> 'int'
    | |-ImplicitCastExpr 0x5609c29e9a60 <col:3> 'int (*)(pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x5609c29e9888 <col:3> 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' Function 0x5609c29c6488 'pthread_create' 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)'
    | |-UnaryOperator 0x5609c29e98c8 <col:18, col:19> 'pthread_t *' prefix '&' cannot overflow
    | | `-DeclRefExpr 0x5609c29e98a8 <col:19> 'pthread_t':'unsigned long' lvalue Var 0x5609c29e9808 't1875' 'pthread_t':'unsigned long'
    | |-ImplicitCastExpr 0x5609c29e9ab8 <col:26, col:36> 'const pthread_attr_t *' <NullToPointer>
    | | `-ParenExpr 0x5609c29e9940 <col:26, col:36> 'void *'
    | |   `-CStyleCastExpr 0x5609c29e9918 <col:27, col:35> 'void *' <NullToPointer>
    | |     `-IntegerLiteral 0x5609c29e98e0 <col:35> 'int' 0
    | |-ImplicitCastExpr 0x5609c29e9ad0 <col:39> 'void *(*)(void *)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x5609c29e9960 <col:39> 'void *(void *)' Function 0x5609c29e0068 'P0' 'void *(void *)'
    | `-ParenExpr 0x5609c29e99e0 <col:43, col:53> 'void *'
    |   `-CStyleCastExpr 0x5609c29e99b8 <col:44, col:52> 'void *' <NullToPointer>
    |     `-IntegerLiteral 0x5609c29e9980 <col:52> 'int' 0
    |-DeclStmt 0x5609c29e9b60 <line:809:3, col:18>
    | `-VarDecl 0x5609c29e9af8 <col:3, col:13> col:13 used t1876 'pthread_t':'unsigned long'
    |-CallExpr 0x5609c29e9d30 <line:810:3, col:54> 'int'
    | |-ImplicitCastExpr 0x5609c29e9d18 <col:3> 'int (*)(pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x5609c29e9ba0 <col:3> 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' Function 0x5609c29c6488 'pthread_create' 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)'
    | |-UnaryOperator 0x5609c29e9be0 <col:18, col:19> 'pthread_t *' prefix '&' cannot overflow
    | | `-DeclRefExpr 0x5609c29e9bc0 <col:19> 'pthread_t':'unsigned long' lvalue Var 0x5609c29e9af8 't1876' 'pthread_t':'unsigned long'
    | |-ImplicitCastExpr 0x5609c29e9d70 <col:26, col:36> 'const pthread_attr_t *' <NullToPointer>
    | | `-ParenExpr 0x5609c29e9c58 <col:26, col:36> 'void *'
    | |   `-CStyleCastExpr 0x5609c29e9c30 <col:27, col:35> 'void *' <NullToPointer>
    | |     `-IntegerLiteral 0x5609c29e9bf8 <col:35> 'int' 0
    | |-ImplicitCastExpr 0x5609c29e9d88 <col:39> 'void *(*)(void *)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x5609c29e9c78 <col:39> 'void *(void *)' Function 0x5609c29e1a28 'P1' 'void *(void *)'
    | `-ParenExpr 0x5609c29e9cf8 <col:43, col:53> 'void *'
    |   `-CStyleCastExpr 0x5609c29e9cd0 <col:44, col:52> 'void *' <NullToPointer>
    |     `-IntegerLiteral 0x5609c29e9c98 <col:52> 'int' 0
    |-DeclStmt 0x5609c29e9e18 <line:811:3, col:18>
    | `-VarDecl 0x5609c29e9db0 <col:3, col:13> col:13 used t1877 'pthread_t':'unsigned long'
    |-CallExpr 0x5609c29e9fc0 <line:812:3, col:54> 'int'
    | |-ImplicitCastExpr 0x5609c29e9fa8 <col:3> 'int (*)(pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x5609c29e9e30 <col:3> 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' Function 0x5609c29c6488 'pthread_create' 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)'
    | |-UnaryOperator 0x5609c29e9e70 <col:18, col:19> 'pthread_t *' prefix '&' cannot overflow
    | | `-DeclRefExpr 0x5609c29e9e50 <col:19> 'pthread_t':'unsigned long' lvalue Var 0x5609c29e9db0 't1877' 'pthread_t':'unsigned long'
    | |-ImplicitCastExpr 0x5609c29ea000 <col:26, col:36> 'const pthread_attr_t *' <NullToPointer>
    | | `-ParenExpr 0x5609c29e9ee8 <col:26, col:36> 'void *'
    | |   `-CStyleCastExpr 0x5609c29e9ec0 <col:27, col:35> 'void *' <NullToPointer>
    | |     `-IntegerLiteral 0x5609c29e9e88 <col:35> 'int' 0
    | |-ImplicitCastExpr 0x5609c29ea018 <col:39> 'void *(*)(void *)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x5609c29e9f08 <col:39> 'void *(void *)' Function 0x5609c29e2db0 'P2' 'void *(void *)'
    | `-ParenExpr 0x5609c29e9f88 <col:43, col:53> 'void *'
    |   `-CStyleCastExpr 0x5609c29e9f60 <col:44, col:52> 'void *' <NullToPointer>
    |     `-IntegerLiteral 0x5609c29e9f28 <col:52> 'int' 0
    |-CallExpr 0x5609c29ea068 <line:813:3, col:27> 'void'
    | `-ImplicitCastExpr 0x5609c29ea050 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x5609c29ea030 <col:3> 'void ()' Function 0x5609c2985e40 '__VERIFIER_atomic_begin' 'void ()'
    |-BinaryOperator 0x5609c29ea138 <line:814:3, col:41> '_Bool' '='
    | |-DeclRefExpr 0x5609c29ea088 <col:3> '_Bool' lvalue Var 0x5609c29df3f8 'main$tmp_guard0' '_Bool'
    | `-ImplicitCastExpr 0x5609c29ea120 <col:21, col:41> '_Bool' <IntegralToBoolean>
    |   `-BinaryOperator 0x5609c29ea100 <col:21, col:41> 'int' '=='
    |     |-ImplicitCastExpr 0x5609c29ea0e8 <col:21> 'int' <LValueToRValue>
    |     | `-DeclRefExpr 0x5609c29ea0a8 <col:21> 'int' lvalue Var 0x5609c29df120 '__unbuffered_cnt' 'int'
    |     `-IntegerLiteral 0x5609c29ea0c8 <col:41> 'int' 3
    |-CallExpr 0x5609c29ea190 <line:815:3, col:25> 'void'
    | `-ImplicitCastExpr 0x5609c29ea178 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x5609c29ea158 <col:3> 'void ()' Function 0x5609c2985f00 '__VERIFIER_atomic_end' 'void ()'
    |-CallExpr 0x5609c29ea208 <line:816:3, col:36> 'void'
    | |-ImplicitCastExpr 0x5609c29ea1f0 <col:3> 'void (*)(int)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x5609c29ea1b0 <col:3> 'void (int)' Function 0x5609c2985790 '__VERIFIER_assume' 'void (int)'
    | `-ImplicitCastExpr 0x5609c29ea248 <col:21> 'int' <IntegralCast>
    |   `-ImplicitCastExpr 0x5609c29ea230 <col:21> '_Bool' <LValueToRValue>
    |     `-DeclRefExpr 0x5609c29ea1d0 <col:21> '_Bool' lvalue Var 0x5609c29df3f8 'main$tmp_guard0' '_Bool'
    |-CallExpr 0x5609c29ea298 <line:817:3, col:27> 'void'
    | `-ImplicitCastExpr 0x5609c29ea280 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x5609c29ea260 <col:3> 'void ()' Function 0x5609c2985e40 '__VERIFIER_atomic_begin' 'void ()'
    |-BinaryOperator 0x5609c29ea580 <line:818:3, col:103> 'int' '='
    | |-DeclRefExpr 0x5609c29ea2b8 <col:3> 'int' lvalue Var 0x5609c29df690 'y' 'int'
    | `-ConditionalOperator 0x5609c29ea550 <col:7, col:103> 'int'
    |   |-BinaryOperator 0x5609c29ea378 <col:7, col:25> 'int' '&&'
    |   | |-ImplicitCastExpr 0x5609c29ea330 <col:7> 'int' <IntegralCast>
    |   | | `-ImplicitCastExpr 0x5609c29ea318 <col:7> '_Bool' <LValueToRValue>
    |   | |   `-DeclRefExpr 0x5609c29ea2d8 <col:7> '_Bool' lvalue Var 0x5609c29dfd68 'y$w_buff0_used' '_Bool'
    |   | `-ImplicitCastExpr 0x5609c29ea360 <col:25> 'int' <IntegralCast>
    |   |   `-ImplicitCastExpr 0x5609c29ea348 <col:25> '_Bool' <LValueToRValue>
    |   |     `-DeclRefExpr 0x5609c29ea2f8 <col:25> '_Bool' lvalue Var 0x5609c29df820 'y$r_buff0_thd0' '_Bool'
    |   |-ImplicitCastExpr 0x5609c29ea538 <col:42> 'int' <LValueToRValue>
    |   | `-DeclRefExpr 0x5609c29ea398 <col:42> 'int' lvalue Var 0x5609c29dfcf0 'y$w_buff0' 'int'
    |   `-ParenExpr 0x5609c29ea518 <col:54, col:103> 'int'
    |     `-ConditionalOperator 0x5609c29ea4e8 <col:55, col:102> 'int'
    |       |-BinaryOperator 0x5609c29ea458 <col:55, col:73> 'int' '&&'
    |       | |-ImplicitCastExpr 0x5609c29ea410 <col:55> 'int' <IntegralCast>
    |       | | `-ImplicitCastExpr 0x5609c29ea3f8 <col:55> '_Bool' <LValueToRValue>
    |       | |   `-DeclRefExpr 0x5609c29ea3b8 <col:55> '_Bool' lvalue Var 0x5609c29dfe60 'y$w_buff1_used' '_Bool'
    |       | `-ImplicitCastExpr 0x5609c29ea440 <col:73> 'int' <IntegralCast>
    |       |   `-ImplicitCastExpr 0x5609c29ea428 <col:73> '_Bool' <LValueToRValue>
    |       |     `-DeclRefExpr 0x5609c29ea3d8 <col:73> '_Bool' lvalue Var 0x5609c29dfa00 'y$r_buff1_thd0' '_Bool'
    |       |-ImplicitCastExpr 0x5609c29ea4b8 <col:90> 'int' <LValueToRValue>
    |       | `-DeclRefExpr 0x5609c29ea478 <col:90> 'int' lvalue Var 0x5609c29dfde8 'y$w_buff1' 'int'
    |       `-ImplicitCastExpr 0x5609c29ea4d0 <col:102> 'int' <LValueToRValue>
    |         `-DeclRefExpr 0x5609c29ea498 <col:102> 'int' lvalue Var 0x5609c29df690 'y' 'int'
    |-BinaryOperator 0x5609c29ea788 <line:819:3, col:66> '_Bool' '='
    | |-DeclRefExpr 0x5609c29ea5a0 <col:3> '_Bool' lvalue Var 0x5609c29dfd68 'y$w_buff0_used' '_Bool'
    | `-ImplicitCastExpr 0x5609c29ea770 <col:20, col:66> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x5609c29ea740 <col:20, col:66> 'int'
    |     |-BinaryOperator 0x5609c29ea660 <col:20, col:38> 'int' '&&'
    |     | |-ImplicitCastExpr 0x5609c29ea618 <col:20> 'int' <IntegralCast>
    |     | | `-ImplicitCastExpr 0x5609c29ea600 <col:20> '_Bool' <LValueToRValue>
    |     | |   `-DeclRefExpr 0x5609c29ea5c0 <col:20> '_Bool' lvalue Var 0x5609c29dfd68 'y$w_buff0_used' '_Bool'
    |     | `-ImplicitCastExpr 0x5609c29ea648 <col:38> 'int' <IntegralCast>
    |     |   `-ImplicitCastExpr 0x5609c29ea630 <col:38> '_Bool' <LValueToRValue>
    |     |     `-DeclRefExpr 0x5609c29ea5e0 <col:38> '_Bool' lvalue Var 0x5609c29df820 'y$r_buff0_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x5609c29ea6f8 <col:55, col:62> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x5609c29ea6b0 <col:55, col:62> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x5609c29ea680 <col:62> 'int' 0
    |     `-ImplicitCastExpr 0x5609c29ea728 <col:66> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x5609c29ea710 <col:66> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x5609c29ea6d8 <col:66> '_Bool' lvalue Var 0x5609c29dfd68 'y$w_buff0_used' '_Bool'
    |-BinaryOperator 0x5609c29eaa70 <line:820:3, col:102> '_Bool' '='
    | |-DeclRefExpr 0x5609c29ea7a8 <col:3> '_Bool' lvalue Var 0x5609c29dfe60 'y$w_buff1_used' '_Bool'
    | `-ImplicitCastExpr 0x5609c29eaa58 <col:20, col:102> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x5609c29eaa28 <col:20, col:102> 'int'
    |     |-BinaryOperator 0x5609c29ea948 <col:20, col:74> 'int' '||'
    |     | |-BinaryOperator 0x5609c29ea868 <col:20, col:38> 'int' '&&'
    |     | | |-ImplicitCastExpr 0x5609c29ea820 <col:20> 'int' <IntegralCast>
    |     | | | `-ImplicitCastExpr 0x5609c29ea808 <col:20> '_Bool' <LValueToRValue>
    |     | | |   `-DeclRefExpr 0x5609c29ea7c8 <col:20> '_Bool' lvalue Var 0x5609c29dfd68 'y$w_buff0_used' '_Bool'
    |     | | `-ImplicitCastExpr 0x5609c29ea850 <col:38> 'int' <IntegralCast>
    |     | |   `-ImplicitCastExpr 0x5609c29ea838 <col:38> '_Bool' <LValueToRValue>
    |     | |     `-DeclRefExpr 0x5609c29ea7e8 <col:38> '_Bool' lvalue Var 0x5609c29df820 'y$r_buff0_thd0' '_Bool'
    |     | `-BinaryOperator 0x5609c29ea928 <col:56, col:74> 'int' '&&'
    |     |   |-ImplicitCastExpr 0x5609c29ea8e0 <col:56> 'int' <IntegralCast>
    |     |   | `-ImplicitCastExpr 0x5609c29ea8c8 <col:56> '_Bool' <LValueToRValue>
    |     |   |   `-DeclRefExpr 0x5609c29ea888 <col:56> '_Bool' lvalue Var 0x5609c29dfe60 'y$w_buff1_used' '_Bool'
    |     |   `-ImplicitCastExpr 0x5609c29ea910 <col:74> 'int' <IntegralCast>
    |     |     `-ImplicitCastExpr 0x5609c29ea8f8 <col:74> '_Bool' <LValueToRValue>
    |     |       `-DeclRefExpr 0x5609c29ea8a8 <col:74> '_Bool' lvalue Var 0x5609c29dfa00 'y$r_buff1_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x5609c29ea9e0 <col:91, col:98> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x5609c29ea998 <col:91, col:98> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x5609c29ea968 <col:98> 'int' 0
    |     `-ImplicitCastExpr 0x5609c29eaa10 <col:102> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x5609c29ea9f8 <col:102> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x5609c29ea9c0 <col:102> '_Bool' lvalue Var 0x5609c29dfe60 'y$w_buff1_used' '_Bool'
    |-BinaryOperator 0x5609c29eac88 <line:821:3, col:66> '_Bool' '='
    | |-DeclRefExpr 0x5609c29eaa90 <col:3> '_Bool' lvalue Var 0x5609c29df820 'y$r_buff0_thd0' '_Bool'
    | `-ImplicitCastExpr 0x5609c29eac70 <col:20, col:66> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x5609c29eac40 <col:20, col:66> 'int'
    |     |-BinaryOperator 0x5609c29eab50 <col:20, col:38> 'int' '&&'
    |     | |-ImplicitCastExpr 0x5609c29eab08 <col:20> 'int' <IntegralCast>
    |     | | `-ImplicitCastExpr 0x5609c29eaaf0 <col:20> '_Bool' <LValueToRValue>
    |     | |   `-DeclRefExpr 0x5609c29eaab0 <col:20> '_Bool' lvalue Var 0x5609c29dfd68 'y$w_buff0_used' '_Bool'
    |     | `-ImplicitCastExpr 0x5609c29eab38 <col:38> 'int' <IntegralCast>
    |     |   `-ImplicitCastExpr 0x5609c29eab20 <col:38> '_Bool' <LValueToRValue>
    |     |     `-DeclRefExpr 0x5609c29eaad0 <col:38> '_Bool' lvalue Var 0x5609c29df820 'y$r_buff0_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x5609c29eabf8 <col:55, col:62> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x5609c29eabb0 <col:55, col:62> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x5609c29eab70 <col:62> 'int' 0
    |     `-ImplicitCastExpr 0x5609c29eac28 <col:66> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x5609c29eac10 <col:66> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x5609c29eabd8 <col:66> '_Bool' lvalue Var 0x5609c29df820 'y$r_buff0_thd0' '_Bool'
    |-BinaryOperator 0x5609c29eaf70 <line:822:3, col:102> '_Bool' '='
    | |-DeclRefExpr 0x5609c29eaca8 <col:3> '_Bool' lvalue Var 0x5609c29dfa00 'y$r_buff1_thd0' '_Bool'
    | `-ImplicitCastExpr 0x5609c29eaf58 <col:20, col:102> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x5609c29eaf28 <col:20, col:102> 'int'
    |     |-BinaryOperator 0x5609c29eae48 <col:20, col:74> 'int' '||'
    |     | |-BinaryOperator 0x5609c29ead68 <col:20, col:38> 'int' '&&'
    |     | | |-ImplicitCastExpr 0x5609c29ead20 <col:20> 'int' <IntegralCast>
    |     | | | `-ImplicitCastExpr 0x5609c29ead08 <col:20> '_Bool' <LValueToRValue>
    |     | | |   `-DeclRefExpr 0x5609c29eacc8 <col:20> '_Bool' lvalue Var 0x5609c29dfd68 'y$w_buff0_used' '_Bool'
    |     | | `-ImplicitCastExpr 0x5609c29ead50 <col:38> 'int' <IntegralCast>
    |     | |   `-ImplicitCastExpr 0x5609c29ead38 <col:38> '_Bool' <LValueToRValue>
    |     | |     `-DeclRefExpr 0x5609c29eace8 <col:38> '_Bool' lvalue Var 0x5609c29df820 'y$r_buff0_thd0' '_Bool'
    |     | `-BinaryOperator 0x5609c29eae28 <col:56, col:74> 'int' '&&'
    |     |   |-ImplicitCastExpr 0x5609c29eade0 <col:56> 'int' <IntegralCast>
    |     |   | `-ImplicitCastExpr 0x5609c29eadc8 <col:56> '_Bool' <LValueToRValue>
    |     |   |   `-DeclRefExpr 0x5609c29ead88 <col:56> '_Bool' lvalue Var 0x5609c29dfe60 'y$w_buff1_used' '_Bool'
    |     |   `-ImplicitCastExpr 0x5609c29eae10 <col:74> 'int' <IntegralCast>
    |     |     `-ImplicitCastExpr 0x5609c29eadf8 <col:74> '_Bool' <LValueToRValue>
    |     |       `-DeclRefExpr 0x5609c29eada8 <col:74> '_Bool' lvalue Var 0x5609c29dfa00 'y$r_buff1_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x5609c29eaee0 <col:91, col:98> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x5609c29eae98 <col:91, col:98> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x5609c29eae68 <col:98> 'int' 0
    |     `-ImplicitCastExpr 0x5609c29eaf10 <col:102> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x5609c29eaef8 <col:102> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x5609c29eaec0 <col:102> '_Bool' lvalue Var 0x5609c29dfa00 'y$r_buff1_thd0' '_Bool'
    |-CallExpr 0x5609c29eafc8 <line:823:3, col:25> 'void'
    | `-ImplicitCastExpr 0x5609c29eafb0 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x5609c29eaf90 <col:3> 'void ()' Function 0x5609c2985f00 '__VERIFIER_atomic_end' 'void ()'
    |-CallExpr 0x5609c29eb020 <line:824:3, col:27> 'void'
    | `-ImplicitCastExpr 0x5609c29eb008 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x5609c29eafe8 <col:3> 'void ()' Function 0x5609c2985e40 '__VERIFIER_atomic_begin' 'void ()'
    |-BinaryOperator 0x5609c29eb0d0 <line:825:3, col:45> '_Bool' '='
    | |-DeclRefExpr 0x5609c29eb040 <col:3> '_Bool' lvalue Var 0x5609c29dfed8 'weak$$choice0' '_Bool'
    | `-ImplicitCastExpr 0x5609c29eb0b8 <col:19, col:45> '_Bool' <PointerToBoolean>
    |   `-CallExpr 0x5609c29eb098 <col:19, col:45> 'void *'
    |     `-ImplicitCastExpr 0x5609c29eb080 <col:19> 'void *(*)(void)' <FunctionToPointerDecay>
    |       `-DeclRefExpr 0x5609c29eb060 <col:19> 'void *(void)' Function 0x5609c2985958 '__VERIFIER_nondet_pointer' 'void *(void)'
    |-BinaryOperator 0x5609c29eb180 <line:826:3, col:45> '_Bool' '='
    | |-DeclRefExpr 0x5609c29eb0f0 <col:3> '_Bool' lvalue Var 0x5609c29dff50 'weak$$choice2' '_Bool'
    | `-ImplicitCastExpr 0x5609c29eb168 <col:19, col:45> '_Bool' <PointerToBoolean>
    |   `-CallExpr 0x5609c29eb148 <col:19, col:45> 'void *'
    |     `-ImplicitCastExpr 0x5609c29eb130 <col:19> 'void *(*)(void)' <FunctionToPointerDecay>
    |       `-DeclRefExpr 0x5609c29eb110 <col:19> 'void *(void)' Function 0x5609c2985958 '__VERIFIER_nondet_pointer' 'void *(void)'
    |-BinaryOperator 0x5609c29eb1f8 <line:827:3, col:21> '_Bool' '='
    | |-DeclRefExpr 0x5609c29eb1a0 <col:3> '_Bool' lvalue Var 0x5609c29df728 'y$flush_delayed' '_Bool'
    | `-ImplicitCastExpr 0x5609c29eb1e0 <col:21> '_Bool' <LValueToRValue>
    |   `-DeclRefExpr 0x5609c29eb1c0 <col:21> '_Bool' lvalue Var 0x5609c29dff50 'weak$$choice2' '_Bool'
    |-BinaryOperator 0x5609c29eb270 <line:828:3, col:15> 'int' '='
    | |-DeclRefExpr 0x5609c29eb218 <col:3> 'int' lvalue Var 0x5609c29df7a8 'y$mem_tmp' 'int'
    | `-ImplicitCastExpr 0x5609c29eb258 <col:15> 'int' <LValueToRValue>
    |   `-DeclRefExpr 0x5609c29eb238 <col:15> 'int' lvalue Var 0x5609c29df690 'y' 'int'
    |-BinaryOperator 0x5609c29eb6a8 <line:829:3, col:162> 'int' '='
    | |-DeclRefExpr 0x5609c29eb290 <col:3> 'int' lvalue Var 0x5609c29df690 'y' 'int'
    | `-ConditionalOperator 0x5609c29eb678 <col:7, col:162> 'int'
    |   |-BinaryOperator 0x5609c29eb4a0 <col:7, col:84> 'int' '||'
    |   | |-BinaryOperator 0x5609c29eb3c0 <col:7, col:46> 'int' '||'
    |   | | |-UnaryOperator 0x5609c29eb2e8 <col:7, col:8> 'int' prefix '!' cannot overflow
    |   | | | `-ImplicitCastExpr 0x5609c29eb2d0 <col:8> '_Bool' <LValueToRValue>
    |   | | |   `-DeclRefExpr 0x5609c29eb2b0 <col:8> '_Bool' lvalue Var 0x5609c29dfd68 'y$w_buff0_used' '_Bool'
    |   | | `-BinaryOperator 0x5609c29eb3a0 <col:26, col:46> 'int' '&&'
    |   | |   |-UnaryOperator 0x5609c29eb338 <col:26, col:27> 'int' prefix '!' cannot overflow
    |   | |   | `-ImplicitCastExpr 0x5609c29eb320 <col:27> '_Bool' <LValueToRValue>
    |   | |   |   `-DeclRefExpr 0x5609c29eb300 <col:27> '_Bool' lvalue Var 0x5609c29df820 'y$r_buff0_thd0' '_Bool'
    |   | |   `-UnaryOperator 0x5609c29eb388 <col:45, col:46> 'int' prefix '!' cannot overflow
    |   | |     `-ImplicitCastExpr 0x5609c29eb370 <col:46> '_Bool' <LValueToRValue>
    |   | |       `-DeclRefExpr 0x5609c29eb350 <col:46> '_Bool' lvalue Var 0x5609c29dfe60 'y$w_buff1_used' '_Bool'
    |   | `-BinaryOperator 0x5609c29eb480 <col:64, col:84> 'int' '&&'
    |   |   |-UnaryOperator 0x5609c29eb418 <col:64, col:65> 'int' prefix '!' cannot overflow
    |   |   | `-ImplicitCastExpr 0x5609c29eb400 <col:65> '_Bool' <LValueToRValue>
    |   |   |   `-DeclRefExpr 0x5609c29eb3e0 <col:65> '_Bool' lvalue Var 0x5609c29df820 'y$r_buff0_thd0' '_Bool'
    |   |   `-UnaryOperator 0x5609c29eb468 <col:83, col:84> 'int' prefix '!' cannot overflow
    |   |     `-ImplicitCastExpr 0x5609c29eb450 <col:84> '_Bool' <LValueToRValue>
    |   |       `-DeclRefExpr 0x5609c29eb430 <col:84> '_Bool' lvalue Var 0x5609c29dfa00 'y$r_buff1_thd0' '_Bool'
    |   |-ImplicitCastExpr 0x5609c29eb660 <col:101> 'int' <LValueToRValue>
    |   | `-DeclRefExpr 0x5609c29eb4c0 <col:101> 'int' lvalue Var 0x5609c29df690 'y' 'int'
    |   `-ParenExpr 0x5609c29eb640 <col:105, col:162> 'int'
    |     `-ConditionalOperator 0x5609c29eb610 <col:106, col:153> 'int'
    |       |-BinaryOperator 0x5609c29eb580 <col:106, col:124> 'int' '&&'
    |       | |-ImplicitCastExpr 0x5609c29eb538 <col:106> 'int' <IntegralCast>
    |       | | `-ImplicitCastExpr 0x5609c29eb520 <col:106> '_Bool' <LValueToRValue>
    |       | |   `-DeclRefExpr 0x5609c29eb4e0 <col:106> '_Bool' lvalue Var 0x5609c29dfd68 'y$w_buff0_used' '_Bool'
    |       | `-ImplicitCastExpr 0x5609c29eb568 <col:124> 'int' <IntegralCast>
    |       |   `-ImplicitCastExpr 0x5609c29eb550 <col:124> '_Bool' <LValueToRValue>
    |       |     `-DeclRefExpr 0x5609c29eb500 <col:124> '_Bool' lvalue Var 0x5609c29df820 'y$r_buff0_thd0' '_Bool'
    |       |-ImplicitCastExpr 0x5609c29eb5e0 <col:141> 'int' <LValueToRValue>
    |       | `-DeclRefExpr 0x5609c29eb5a0 <col:141> 'int' lvalue Var 0x5609c29dfcf0 'y$w_buff0' 'int'
    |       `-ImplicitCastExpr 0x5609c29eb5f8 <col:153> 'int' <LValueToRValue>
    |         `-DeclRefExpr 0x5609c29eb5c0 <col:153> 'int' lvalue Var 0x5609c29dfde8 'y$w_buff1' 'int'
    |-BinaryOperator 0x5609c29ebbf0 <line:830:3, col:208> 'int' '='
    | |-DeclRefExpr 0x5609c29eb6c8 <col:3> 'int' lvalue Var 0x5609c29dfcf0 'y$w_buff0' 'int'
    | `-ConditionalOperator 0x5609c29ebbc0 <col:15, col:208> 'int'
    |   |-ImplicitCastExpr 0x5609c29ebb58 <col:15> 'int' <IntegralCast>
    |   | `-ImplicitCastExpr 0x5609c29ebb40 <col:15> '_Bool' <LValueToRValue>
    |   |   `-DeclRefExpr 0x5609c29eb6e8 <col:15> '_Bool' lvalue Var 0x5609c29dff50 'weak$$choice2' '_Bool'
    |   |-ImplicitCastExpr 0x5609c29ebb70 <col:31> 'int' <LValueToRValue>
    |   | `-DeclRefExpr 0x5609c29eb708 <col:31> 'int' lvalue Var 0x5609c29dfcf0 'y$w_buff0' 'int'
    |   `-ParenExpr 0x5609c29ebb20 <col:43, col:208> 'int'
    |     `-ConditionalOperator 0x5609c29ebaf0 <col:44, col:207> 'int'
    |       |-BinaryOperator 0x5609c29eb918 <col:44, col:121> 'int' '||'
    |       | |-BinaryOperator 0x5609c29eb838 <col:44, col:83> 'int' '||'
    |       | | |-UnaryOperator 0x5609c29eb760 <col:44, col:45> 'int' prefix '!' cannot overflow
    |       | | | `-ImplicitCastExpr 0x5609c29eb748 <col:45> '_Bool' <LValueToRValue>
    |       | | |   `-DeclRefExpr 0x5609c29eb728 <col:45> '_Bool' lvalue Var 0x5609c29dfd68 'y$w_buff0_used' '_Bool'
    |       | | `-BinaryOperator 0x5609c29eb818 <col:63, col:83> 'int' '&&'
    |       | |   |-UnaryOperator 0x5609c29eb7b0 <col:63, col:64> 'int' prefix '!' cannot overflow
    |       | |   | `-ImplicitCastExpr 0x5609c29eb798 <col:64> '_Bool' <LValueToRValue>
    |       | |   |   `-DeclRefExpr 0x5609c29eb778 <col:64> '_Bool' lvalue Var 0x5609c29df820 'y$r_buff0_thd0' '_Bool'
    |       | |   `-UnaryOperator 0x5609c29eb800 <col:82, col:83> 'int' prefix '!' cannot overflow
    |       | |     `-ImplicitCastExpr 0x5609c29eb7e8 <col:83> '_Bool' <LValueToRValue>
    |       | |       `-DeclRefExpr 0x5609c29eb7c8 <col:83> '_Bool' lvalue Var 0x5609c29dfe60 'y$w_buff1_used' '_Bool'
    |       | `-BinaryOperator 0x5609c29eb8f8 <col:101, col:121> 'int' '&&'
    |       |   |-UnaryOperator 0x5609c29eb890 <col:101, col:102> 'int' prefix '!' cannot overflow
    |       |   | `-ImplicitCastExpr 0x5609c29eb878 <col:102> '_Bool' <LValueToRValue>
    |       |   |   `-DeclRefExpr 0x5609c29eb858 <col:102> '_Bool' lvalue Var 0x5609c29df820 'y$r_buff0_thd0' '_Bool'
    |       |   `-UnaryOperator 0x5609c29eb8e0 <col:120, col:121> 'int' prefix '!' cannot overflow
    |       |     `-ImplicitCastExpr 0x5609c29eb8c8 <col:121> '_Bool' <LValueToRValue>
    |       |       `-DeclRefExpr 0x5609c29eb8a8 <col:121> '_Bool' lvalue Var 0x5609c29dfa00 'y$r_buff1_thd0' '_Bool'
    |       |-ImplicitCastExpr 0x5609c29ebad8 <col:138> 'int' <LValueToRValue>
    |       | `-DeclRefExpr 0x5609c29eb938 <col:138> 'int' lvalue Var 0x5609c29dfcf0 'y$w_buff0' 'int'
    |       `-ParenExpr 0x5609c29ebab8 <col:150, col:207> 'int'
    |         `-ConditionalOperator 0x5609c29eba88 <col:151, col:198> 'int'
    |           |-BinaryOperator 0x5609c29eb9f8 <col:151, col:169> 'int' '&&'
    |           | |-ImplicitCastExpr 0x5609c29eb9b0 <col:151> 'int' <IntegralCast>
    |           | | `-ImplicitCastExpr 0x5609c29eb998 <col:151> '_Bool' <LValueToRValue>
    |           | |   `-DeclRefExpr 0x5609c29eb958 <col:151> '_Bool' lvalue Var 0x5609c29dfd68 'y$w_buff0_used' '_Bool'
    |           | `-ImplicitCastExpr 0x5609c29eb9e0 <col:169> 'int' <IntegralCast>
    |           |   `-ImplicitCastExpr 0x5609c29eb9c8 <col:169> '_Bool' <LValueToRValue>
    |           |     `-DeclRefExpr 0x5609c29eb978 <col:169> '_Bool' lvalue Var 0x5609c29df820 'y$r_buff0_thd0' '_Bool'
    |           |-ImplicitCastExpr 0x5609c29eba58 <col:186> 'int' <LValueToRValue>
    |           | `-DeclRefExpr 0x5609c29eba18 <col:186> 'int' lvalue Var 0x5609c29dfcf0 'y$w_buff0' 'int'
    |           `-ImplicitCastExpr 0x5609c29eba70 <col:198> 'int' <LValueToRValue>
    |             `-DeclRefExpr 0x5609c29eba38 <col:198> 'int' lvalue Var 0x5609c29dfcf0 'y$w_buff0' 'int'
    |-BinaryOperator 0x5609c29ec100 <line:831:3, col:208> 'int' '='
    | |-DeclRefExpr 0x5609c29ebc10 <col:3> 'int' lvalue Var 0x5609c29dfde8 'y$w_buff1' 'int'
    | `-ConditionalOperator 0x5609c29ec0d0 <col:15, col:208> 'int'
    |   |-ImplicitCastExpr 0x5609c29ec0a0 <col:15> 'int' <IntegralCast>
    |   | `-ImplicitCastExpr 0x5609c29ec088 <col:15> '_Bool' <LValueToRValue>
    |   |   `-DeclRefExpr 0x5609c29ebc30 <col:15> '_Bool' lvalue Var 0x5609c29dff50 'weak$$choice2' '_Bool'
    |   |-ImplicitCastExpr 0x5609c29ec0b8 <col:31> 'int' <LValueToRValue>
    |   | `-DeclRefExpr 0x5609c29ebc50 <col:31> 'int' lvalue Var 0x5609c29dfde8 'y$w_buff1' 'int'
    |   `-ParenExpr 0x5609c29ec068 <col:43, col:208> 'int'
    |     `-ConditionalOperator 0x5609c29ec038 <col:44, col:207> 'int'
    |       |-BinaryOperator 0x5609c29ebe60 <col:44, col:121> 'int' '||'
    |       | |-BinaryOperator 0x5609c29ebd80 <col:44, col:83> 'int' '||'
    |       | | |-UnaryOperator 0x5609c29ebca8 <col:44, col:45> 'int' prefix '!' cannot overflow
    |       | | | `-ImplicitCastExpr 0x5609c29ebc90 <col:45> '_Bool' <LValueToRValue>
    |       | | |   `-DeclRefExpr 0x5609c29ebc70 <col:45> '_Bool' lvalue Var 0x5609c29dfd68 'y$w_buff0_used' '_Bool'
    |       | | `-BinaryOperator 0x5609c29ebd60 <col:63, col:83> 'int' '&&'
    |       | |   |-UnaryOperator 0x5609c29ebcf8 <col:63, col:64> 'int' prefix '!' cannot overflow
    |       | |   | `-ImplicitCastExpr 0x5609c29ebce0 <col:64> '_Bool' <LValueToRValue>
    |       | |   |   `-DeclRefExpr 0x5609c29ebcc0 <col:64> '_Bool' lvalue Var 0x5609c29df820 'y$r_buff0_thd0' '_Bool'
    |       | |   `-UnaryOperator 0x5609c29ebd48 <col:82, col:83> 'int' prefix '!' cannot overflow
    |       | |     `-ImplicitCastExpr 0x5609c29ebd30 <col:83> '_Bool' <LValueToRValue>
    |       | |       `-DeclRefExpr 0x5609c29ebd10 <col:83> '_Bool' lvalue Var 0x5609c29dfe60 'y$w_buff1_used' '_Bool'
    |       | `-BinaryOperator 0x5609c29ebe40 <col:101, col:121> 'int' '&&'
    |       |   |-UnaryOperator 0x5609c29ebdd8 <col:101, col:102> 'int' prefix '!' cannot overflow
    |       |   | `-ImplicitCastExpr 0x5609c29ebdc0 <col:102> '_Bool' <LValueToRValue>
    |       |   |   `-DeclRefExpr 0x5609c29ebda0 <col:102> '_Bool' lvalue Var 0x5609c29df820 'y$r_buff0_thd0' '_Bool'
    |       |   `-UnaryOperator 0x5609c29ebe28 <col:120, col:121> 'int' prefix '!' cannot overflow
    |       |     `-ImplicitCastExpr 0x5609c29ebe10 <col:121> '_Bool' <LValueToRValue>
    |       |       `-DeclRefExpr 0x5609c29ebdf0 <col:121> '_Bool' lvalue Var 0x5609c29dfa00 'y$r_buff1_thd0' '_Bool'
    |       |-ImplicitCastExpr 0x5609c29ec020 <col:138> 'int' <LValueToRValue>
    |       | `-DeclRefExpr 0x5609c29ebe80 <col:138> 'int' lvalue Var 0x5609c29dfde8 'y$w_buff1' 'int'
    |       `-ParenExpr 0x5609c29ec000 <col:150, col:207> 'int'
    |         `-ConditionalOperator 0x5609c29ebfd0 <col:151, col:198> 'int'
    |           |-BinaryOperator 0x5609c29ebf40 <col:151, col:169> 'int' '&&'
    |           | |-ImplicitCastExpr 0x5609c29ebef8 <col:151> 'int' <IntegralCast>
    |           | | `-ImplicitCastExpr 0x5609c29ebee0 <col:151> '_Bool' <LValueToRValue>
    |           | |   `-DeclRefExpr 0x5609c29ebea0 <col:151> '_Bool' lvalue Var 0x5609c29dfd68 'y$w_buff0_used' '_Bool'
    |           | `-ImplicitCastExpr 0x5609c29ebf28 <col:169> 'int' <IntegralCast>
    |           |   `-ImplicitCastExpr 0x5609c29ebf10 <col:169> '_Bool' <LValueToRValue>
    |           |     `-DeclRefExpr 0x5609c29ebec0 <col:169> '_Bool' lvalue Var 0x5609c29df820 'y$r_buff0_thd0' '_Bool'
    |           |-ImplicitCastExpr 0x5609c29ebfa0 <col:186> 'int' <LValueToRValue>
    |           | `-DeclRefExpr 0x5609c29ebf60 <col:186> 'int' lvalue Var 0x5609c29dfde8 'y$w_buff1' 'int'
    |           `-ImplicitCastExpr 0x5609c29ebfb8 <col:198> 'int' <LValueToRValue>
    |             `-DeclRefExpr 0x5609c29ebf80 <col:198> 'int' lvalue Var 0x5609c29dfde8 'y$w_buff1' 'int'
    |-BinaryOperator 0x5609c29ec6a8 <line:832:3, col:227> '_Bool' '='
    | |-DeclRefExpr 0x5609c29ec120 <col:3> '_Bool' lvalue Var 0x5609c29dfd68 'y$w_buff0_used' '_Bool'
    | `-ImplicitCastExpr 0x5609c29ec690 <col:20, col:227> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x5609c29ec660 <col:20, col:227> 'int'
    |     |-ImplicitCastExpr 0x5609c29ec618 <col:20> 'int' <IntegralCast>
    |     | `-ImplicitCastExpr 0x5609c29ec600 <col:20> '_Bool' <LValueToRValue>
    |     |   `-DeclRefExpr 0x5609c29ec140 <col:20> '_Bool' lvalue Var 0x5609c29dff50 'weak$$choice2' '_Bool'
    |     |-ImplicitCastExpr 0x5609c29ec648 <col:36> 'int' <IntegralCast>
    |     | `-ImplicitCastExpr 0x5609c29ec630 <col:36> '_Bool' <LValueToRValue>
    |     |   `-DeclRefExpr 0x5609c29ec160 <col:36> '_Bool' lvalue Var 0x5609c29dfd68 'y$w_buff0_used' '_Bool'
    |     `-ParenExpr 0x5609c29ec5e0 <col:53, col:227> 'int'
    |       `-ConditionalOperator 0x5609c29ec5b0 <col:54, col:226> 'int'
    |         |-BinaryOperator 0x5609c29ec370 <col:54, col:131> 'int' '||'
    |         | |-BinaryOperator 0x5609c29ec290 <col:54, col:93> 'int' '||'
    |         | | |-UnaryOperator 0x5609c29ec1b8 <col:54, col:55> 'int' prefix '!' cannot overflow
    |         | | | `-ImplicitCastExpr 0x5609c29ec1a0 <col:55> '_Bool' <LValueToRValue>
    |         | | |   `-DeclRefExpr 0x5609c29ec180 <col:55> '_Bool' lvalue Var 0x5609c29dfd68 'y$w_buff0_used' '_Bool'
    |         | | `-BinaryOperator 0x5609c29ec270 <col:73, col:93> 'int' '&&'
    |         | |   |-UnaryOperator 0x5609c29ec208 <col:73, col:74> 'int' prefix '!' cannot overflow
    |         | |   | `-ImplicitCastExpr 0x5609c29ec1f0 <col:74> '_Bool' <LValueToRValue>
    |         | |   |   `-DeclRefExpr 0x5609c29ec1d0 <col:74> '_Bool' lvalue Var 0x5609c29df820 'y$r_buff0_thd0' '_Bool'
    |         | |   `-UnaryOperator 0x5609c29ec258 <col:92, col:93> 'int' prefix '!' cannot overflow
    |         | |     `-ImplicitCastExpr 0x5609c29ec240 <col:93> '_Bool' <LValueToRValue>
    |         | |       `-DeclRefExpr 0x5609c29ec220 <col:93> '_Bool' lvalue Var 0x5609c29dfe60 'y$w_buff1_used' '_Bool'
    |         | `-BinaryOperator 0x5609c29ec350 <col:111, col:131> 'int' '&&'
    |         |   |-UnaryOperator 0x5609c29ec2e8 <col:111, col:112> 'int' prefix '!' cannot overflow
    |         |   | `-ImplicitCastExpr 0x5609c29ec2d0 <col:112> '_Bool' <LValueToRValue>
    |         |   |   `-DeclRefExpr 0x5609c29ec2b0 <col:112> '_Bool' lvalue Var 0x5609c29df820 'y$r_buff0_thd0' '_Bool'
    |         |   `-UnaryOperator 0x5609c29ec338 <col:130, col:131> 'int' prefix '!' cannot overflow
    |         |     `-ImplicitCastExpr 0x5609c29ec320 <col:131> '_Bool' <LValueToRValue>
    |         |       `-DeclRefExpr 0x5609c29ec300 <col:131> '_Bool' lvalue Var 0x5609c29dfa00 'y$r_buff1_thd0' '_Bool'
    |         |-ImplicitCastExpr 0x5609c29ec598 <col:148> 'int' <IntegralCast>
    |         | `-ImplicitCastExpr 0x5609c29ec580 <col:148> '_Bool' <LValueToRValue>
    |         |   `-DeclRefExpr 0x5609c29ec390 <col:148> '_Bool' lvalue Var 0x5609c29dfd68 'y$w_buff0_used' '_Bool'
    |         `-ParenExpr 0x5609c29ec560 <col:165, col:226> 'int'
    |           `-ConditionalOperator 0x5609c29ec530 <col:166, col:212> 'int'
    |             |-BinaryOperator 0x5609c29ec450 <col:166, col:184> 'int' '&&'
    |             | |-ImplicitCastExpr 0x5609c29ec408 <col:166> 'int' <IntegralCast>
    |             | | `-ImplicitCastExpr 0x5609c29ec3f0 <col:166> '_Bool' <LValueToRValue>
    |             | |   `-DeclRefExpr 0x5609c29ec3b0 <col:166> '_Bool' lvalue Var 0x5609c29dfd68 'y$w_buff0_used' '_Bool'
    |             | `-ImplicitCastExpr 0x5609c29ec438 <col:184> 'int' <IntegralCast>
    |             |   `-ImplicitCastExpr 0x5609c29ec420 <col:184> '_Bool' <LValueToRValue>
    |             |     `-DeclRefExpr 0x5609c29ec3d0 <col:184> '_Bool' lvalue Var 0x5609c29df820 'y$r_buff0_thd0' '_Bool'
    |             |-ImplicitCastExpr 0x5609c29ec4e8 <col:201, col:208> 'int' <IntegralCast>
    |             | `-CStyleCastExpr 0x5609c29ec4a0 <col:201, col:208> '_Bool' <IntegralToBoolean>
    |             |   `-IntegerLiteral 0x5609c29ec470 <col:208> 'int' 0
    |             `-ImplicitCastExpr 0x5609c29ec518 <col:212> 'int' <IntegralCast>
    |               `-ImplicitCastExpr 0x5609c29ec500 <col:212> '_Bool' <LValueToRValue>
    |                 `-DeclRefExpr 0x5609c29ec4c8 <col:212> '_Bool' lvalue Var 0x5609c29dfd68 'y$w_buff0_used' '_Bool'
    |-BinaryOperator 0x5609c29ecc98 <line:833:3, col:221> '_Bool' '='
    | |-DeclRefExpr 0x5609c29ec6c8 <col:3> '_Bool' lvalue Var 0x5609c29dfe60 'y$w_buff1_used' '_Bool'
    | `-ImplicitCastExpr 0x5609c29ecc80 <col:20, col:221> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x5609c29ecc50 <col:20, col:221> 'int'
    |     |-ImplicitCastExpr 0x5609c29ecc08 <col:20> 'int' <IntegralCast>
    |     | `-ImplicitCastExpr 0x5609c29ecbf0 <col:20> '_Bool' <LValueToRValue>
    |     |   `-DeclRefExpr 0x5609c29ec6e8 <col:20> '_Bool' lvalue Var 0x5609c29dff50 'weak$$choice2' '_Bool'
    |     |-ImplicitCastExpr 0x5609c29ecc38 <col:36> 'int' <IntegralCast>
    |     | `-ImplicitCastExpr 0x5609c29ecc20 <col:36> '_Bool' <LValueToRValue>
    |     |   `-DeclRefExpr 0x5609c29ec708 <col:36> '_Bool' lvalue Var 0x5609c29dfe60 'y$w_buff1_used' '_Bool'
    |     `-ParenExpr 0x5609c29ecbd0 <col:53, col:221> 'int'
    |       `-ConditionalOperator 0x5609c29ecb78 <col:54, col:220> 'int'
    |         |-BinaryOperator 0x5609c29ec918 <col:54, col:131> 'int' '||'
    |         | |-BinaryOperator 0x5609c29ec838 <col:54, col:93> 'int' '||'
    |         | | |-UnaryOperator 0x5609c29ec760 <col:54, col:55> 'int' prefix '!' cannot overflow
    |         | | | `-ImplicitCastExpr 0x5609c29ec748 <col:55> '_Bool' <LValueToRValue>
    |         | | |   `-DeclRefExpr 0x5609c29ec728 <col:55> '_Bool' lvalue Var 0x5609c29dfd68 'y$w_buff0_used' '_Bool'
    |         | | `-BinaryOperator 0x5609c29ec818 <col:73, col:93> 'int' '&&'
    |         | |   |-UnaryOperator 0x5609c29ec7b0 <col:73, col:74> 'int' prefix '!' cannot overflow
    |         | |   | `-ImplicitCastExpr 0x5609c29ec798 <col:74> '_Bool' <LValueToRValue>
    |         | |   |   `-DeclRefExpr 0x5609c29ec778 <col:74> '_Bool' lvalue Var 0x5609c29df820 'y$r_buff0_thd0' '_Bool'
    |         | |   `-UnaryOperator 0x5609c29ec800 <col:92, col:93> 'int' prefix '!' cannot overflow
    |         | |     `-ImplicitCastExpr 0x5609c29ec7e8 <col:93> '_Bool' <LValueToRValue>
    |         | |       `-DeclRefExpr 0x5609c29ec7c8 <col:93> '_Bool' lvalue Var 0x5609c29dfe60 'y$w_buff1_used' '_Bool'
    |         | `-BinaryOperator 0x5609c29ec8f8 <col:111, col:131> 'int' '&&'
    |         |   |-UnaryOperator 0x5609c29ec890 <col:111, col:112> 'int' prefix '!' cannot overflow
    |         |   | `-ImplicitCastExpr 0x5609c29ec878 <col:112> '_Bool' <LValueToRValue>
    |         |   |   `-DeclRefExpr 0x5609c29ec858 <col:112> '_Bool' lvalue Var 0x5609c29df820 'y$r_buff0_thd0' '_Bool'
    |         |   `-UnaryOperator 0x5609c29ec8e0 <col:130, col:131> 'int' prefix '!' cannot overflow
    |         |     `-ImplicitCastExpr 0x5609c29ec8c8 <col:131> '_Bool' <LValueToRValue>
    |         |       `-DeclRefExpr 0x5609c29ec8a8 <col:131> '_Bool' lvalue Var 0x5609c29dfa00 'y$r_buff1_thd0' '_Bool'
    |         |-ImplicitCastExpr 0x5609c29ecb60 <col:148> 'int' <IntegralCast>
    |         | `-ImplicitCastExpr 0x5609c29ecb48 <col:148> '_Bool' <LValueToRValue>
    |         |   `-DeclRefExpr 0x5609c29ec938 <col:148> '_Bool' lvalue Var 0x5609c29dfe60 'y$w_buff1_used' '_Bool'
    |         `-ParenExpr 0x5609c29ecb28 <col:165, col:220> 'int'
    |           `-ConditionalOperator 0x5609c29ecaf8 <col:166, col:219> 'int'
    |             |-BinaryOperator 0x5609c29ec9f8 <col:166, col:184> 'int' '&&'
    |             | |-ImplicitCastExpr 0x5609c29ec9b0 <col:166> 'int' <IntegralCast>
    |             | | `-ImplicitCastExpr 0x5609c29ec998 <col:166> '_Bool' <LValueToRValue>
    |             | |   `-DeclRefExpr 0x5609c29ec958 <col:166> '_Bool' lvalue Var 0x5609c29dfd68 'y$w_buff0_used' '_Bool'
    |             | `-ImplicitCastExpr 0x5609c29ec9e0 <col:184> 'int' <IntegralCast>
    |             |   `-ImplicitCastExpr 0x5609c29ec9c8 <col:184> '_Bool' <LValueToRValue>
    |             |     `-DeclRefExpr 0x5609c29ec978 <col:184> '_Bool' lvalue Var 0x5609c29df820 'y$r_buff0_thd0' '_Bool'
    |             |-ImplicitCastExpr 0x5609c29ecac8 <col:201, col:208> 'int' <IntegralCast>
    |             | `-CStyleCastExpr 0x5609c29eca48 <col:201, col:208> '_Bool' <IntegralToBoolean>
    |             |   `-IntegerLiteral 0x5609c29eca18 <col:208> 'int' 0
    |             `-ImplicitCastExpr 0x5609c29ecae0 <col:212, col:219> 'int' <IntegralCast>
    |               `-CStyleCastExpr 0x5609c29ecaa0 <col:212, col:219> '_Bool' <IntegralToBoolean>
    |                 `-IntegerLiteral 0x5609c29eca70 <col:219> 'int' 0
    |-BinaryOperator 0x5609c29ed240 <line:834:3, col:227> '_Bool' '='
    | |-DeclRefExpr 0x5609c29eccb8 <col:3> '_Bool' lvalue Var 0x5609c29df820 'y$r_buff0_thd0' '_Bool'
    | `-ImplicitCastExpr 0x5609c29ed228 <col:20, col:227> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x5609c29ed1f8 <col:20, col:227> 'int'
    |     |-ImplicitCastExpr 0x5609c29ed1b0 <col:20> 'int' <IntegralCast>
    |     | `-ImplicitCastExpr 0x5609c29ed198 <col:20> '_Bool' <LValueToRValue>
    |     |   `-DeclRefExpr 0x5609c29eccd8 <col:20> '_Bool' lvalue Var 0x5609c29dff50 'weak$$choice2' '_Bool'
    |     |-ImplicitCastExpr 0x5609c29ed1e0 <col:36> 'int' <IntegralCast>
    |     | `-ImplicitCastExpr 0x5609c29ed1c8 <col:36> '_Bool' <LValueToRValue>
    |     |   `-DeclRefExpr 0x5609c29eccf8 <col:36> '_Bool' lvalue Var 0x5609c29df820 'y$r_buff0_thd0' '_Bool'
    |     `-ParenExpr 0x5609c29ed178 <col:53, col:227> 'int'
    |       `-ConditionalOperator 0x5609c29ed148 <col:54, col:226> 'int'
    |         |-BinaryOperator 0x5609c29ecf08 <col:54, col:131> 'int' '||'
    |         | |-BinaryOperator 0x5609c29ece28 <col:54, col:93> 'int' '||'
    |         | | |-UnaryOperator 0x5609c29ecd50 <col:54, col:55> 'int' prefix '!' cannot overflow
    |         | | | `-ImplicitCastExpr 0x5609c29ecd38 <col:55> '_Bool' <LValueToRValue>
    |         | | |   `-DeclRefExpr 0x5609c29ecd18 <col:55> '_Bool' lvalue Var 0x5609c29dfd68 'y$w_buff0_used' '_Bool'
    |         | | `-BinaryOperator 0x5609c29ece08 <col:73, col:93> 'int' '&&'
    |         | |   |-UnaryOperator 0x5609c29ecda0 <col:73, col:74> 'int' prefix '!' cannot overflow
    |         | |   | `-ImplicitCastExpr 0x5609c29ecd88 <col:74> '_Bool' <LValueToRValue>
    |         | |   |   `-DeclRefExpr 0x5609c29ecd68 <col:74> '_Bool' lvalue Var 0x5609c29df820 'y$r_buff0_thd0' '_Bool'
    |         | |   `-UnaryOperator 0x5609c29ecdf0 <col:92, col:93> 'int' prefix '!' cannot overflow
    |         | |     `-ImplicitCastExpr 0x5609c29ecdd8 <col:93> '_Bool' <LValueToRValue>
    |         | |       `-DeclRefExpr 0x5609c29ecdb8 <col:93> '_Bool' lvalue Var 0x5609c29dfe60 'y$w_buff1_used' '_Bool'
    |         | `-BinaryOperator 0x5609c29ecee8 <col:111, col:131> 'int' '&&'
    |         |   |-UnaryOperator 0x5609c29ece80 <col:111, col:112> 'int' prefix '!' cannot overflow
    |         |   | `-ImplicitCastExpr 0x5609c29ece68 <col:112> '_Bool' <LValueToRValue>
    |         |   |   `-DeclRefExpr 0x5609c29ece48 <col:112> '_Bool' lvalue Var 0x5609c29df820 'y$r_buff0_thd0' '_Bool'
    |         |   `-UnaryOperator 0x5609c29eced0 <col:130, col:131> 'int' prefix '!' cannot overflow
    |         |     `-ImplicitCastExpr 0x5609c29eceb8 <col:131> '_Bool' <LValueToRValue>
    |         |       `-DeclRefExpr 0x5609c29ece98 <col:131> '_Bool' lvalue Var 0x5609c29dfa00 'y$r_buff1_thd0' '_Bool'
    |         |-ImplicitCastExpr 0x5609c29ed130 <col:148> 'int' <IntegralCast>
    |         | `-ImplicitCastExpr 0x5609c29ed118 <col:148> '_Bool' <LValueToRValue>
    |         |   `-DeclRefExpr 0x5609c29ecf28 <col:148> '_Bool' lvalue Var 0x5609c29df820 'y$r_buff0_thd0' '_Bool'
    |         `-ParenExpr 0x5609c29ed0f8 <col:165, col:226> 'int'
    |           `-ConditionalOperator 0x5609c29ed0c8 <col:166, col:212> 'int'
    |             |-BinaryOperator 0x5609c29ecfe8 <col:166, col:184> 'int' '&&'
    |             | |-ImplicitCastExpr 0x5609c29ecfa0 <col:166> 'int' <IntegralCast>
    |             | | `-ImplicitCastExpr 0x5609c29ecf88 <col:166> '_Bool' <LValueToRValue>
    |             | |   `-DeclRefExpr 0x5609c29ecf48 <col:166> '_Bool' lvalue Var 0x5609c29dfd68 'y$w_buff0_used' '_Bool'
    |             | `-ImplicitCastExpr 0x5609c29ecfd0 <col:184> 'int' <IntegralCast>
    |             |   `-ImplicitCastExpr 0x5609c29ecfb8 <col:184> '_Bool' <LValueToRValue>
    |             |     `-DeclRefExpr 0x5609c29ecf68 <col:184> '_Bool' lvalue Var 0x5609c29df820 'y$r_buff0_thd0' '_Bool'
    |             |-ImplicitCastExpr 0x5609c29ed080 <col:201, col:208> 'int' <IntegralCast>
    |             | `-CStyleCastExpr 0x5609c29ed038 <col:201, col:208> '_Bool' <IntegralToBoolean>
    |             |   `-IntegerLiteral 0x5609c29ed008 <col:208> 'int' 0
    |             `-ImplicitCastExpr 0x5609c29ed0b0 <col:212> 'int' <IntegralCast>
    |               `-ImplicitCastExpr 0x5609c29ed098 <col:212> '_Bool' <LValueToRValue>
    |                 `-DeclRefExpr 0x5609c29ed060 <col:212> '_Bool' lvalue Var 0x5609c29df820 'y$r_buff0_thd0' '_Bool'
    |-BinaryOperator 0x5609c29ed808 <line:835:3, col:221> '_Bool' '='
    | |-DeclRefExpr 0x5609c29ed260 <col:3> '_Bool' lvalue Var 0x5609c29dfa00 'y$r_buff1_thd0' '_Bool'
    | `-ImplicitCastExpr 0x5609c29ed7f0 <col:20, col:221> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x5609c29ed7c0 <col:20, col:221> 'int'
    |     |-ImplicitCastExpr 0x5609c29ed778 <col:20> 'int' <IntegralCast>
    |     | `-ImplicitCastExpr 0x5609c29ed760 <col:20> '_Bool' <LValueToRValue>
    |     |   `-DeclRefExpr 0x5609c29ed280 <col:20> '_Bool' lvalue Var 0x5609c29dff50 'weak$$choice2' '_Bool'
    |     |-ImplicitCastExpr 0x5609c29ed7a8 <col:36> 'int' <IntegralCast>
    |     | `-ImplicitCastExpr 0x5609c29ed790 <col:36> '_Bool' <LValueToRValue>
    |     |   `-DeclRefExpr 0x5609c29ed2a0 <col:36> '_Bool' lvalue Var 0x5609c29dfa00 'y$r_buff1_thd0' '_Bool'
    |     `-ParenExpr 0x5609c29ed740 <col:53, col:221> 'int'
    |       `-ConditionalOperator 0x5609c29ed710 <col:54, col:220> 'int'
    |         |-BinaryOperator 0x5609c29ed4b0 <col:54, col:131> 'int' '||'
    |         | |-BinaryOperator 0x5609c29ed3d0 <col:54, col:93> 'int' '||'
    |         | | |-UnaryOperator 0x5609c29ed2f8 <col:54, col:55> 'int' prefix '!' cannot overflow
    |         | | | `-ImplicitCastExpr 0x5609c29ed2e0 <col:55> '_Bool' <LValueToRValue>
    |         | | |   `-DeclRefExpr 0x5609c29ed2c0 <col:55> '_Bool' lvalue Var 0x5609c29dfd68 'y$w_buff0_used' '_Bool'
    |         | | `-BinaryOperator 0x5609c29ed3b0 <col:73, col:93> 'int' '&&'
    |         | |   |-UnaryOperator 0x5609c29ed348 <col:73, col:74> 'int' prefix '!' cannot overflow
    |         | |   | `-ImplicitCastExpr 0x5609c29ed330 <col:74> '_Bool' <LValueToRValue>
    |         | |   |   `-DeclRefExpr 0x5609c29ed310 <col:74> '_Bool' lvalue Var 0x5609c29df820 'y$r_buff0_thd0' '_Bool'
    |         | |   `-UnaryOperator 0x5609c29ed398 <col:92, col:93> 'int' prefix '!' cannot overflow
    |         | |     `-ImplicitCastExpr 0x5609c29ed380 <col:93> '_Bool' <LValueToRValue>
    |         | |       `-DeclRefExpr 0x5609c29ed360 <col:93> '_Bool' lvalue Var 0x5609c29dfe60 'y$w_buff1_used' '_Bool'
    |         | `-BinaryOperator 0x5609c29ed490 <col:111, col:131> 'int' '&&'
    |         |   |-UnaryOperator 0x5609c29ed428 <col:111, col:112> 'int' prefix '!' cannot overflow
    |         |   | `-ImplicitCastExpr 0x5609c29ed410 <col:112> '_Bool' <LValueToRValue>
    |         |   |   `-DeclRefExpr 0x5609c29ed3f0 <col:112> '_Bool' lvalue Var 0x5609c29df820 'y$r_buff0_thd0' '_Bool'
    |         |   `-UnaryOperator 0x5609c29ed478 <col:130, col:131> 'int' prefix '!' cannot overflow
    |         |     `-ImplicitCastExpr 0x5609c29ed460 <col:131> '_Bool' <LValueToRValue>
    |         |       `-DeclRefExpr 0x5609c29ed440 <col:131> '_Bool' lvalue Var 0x5609c29dfa00 'y$r_buff1_thd0' '_Bool'
    |         |-ImplicitCastExpr 0x5609c29ed6f8 <col:148> 'int' <IntegralCast>
    |         | `-ImplicitCastExpr 0x5609c29ed6e0 <col:148> '_Bool' <LValueToRValue>
    |         |   `-DeclRefExpr 0x5609c29ed4d0 <col:148> '_Bool' lvalue Var 0x5609c29dfa00 'y$r_buff1_thd0' '_Bool'
    |         `-ParenExpr 0x5609c29ed6c0 <col:165, col:220> 'int'
    |           `-ConditionalOperator 0x5609c29ed690 <col:166, col:219> 'int'
    |             |-BinaryOperator 0x5609c29ed590 <col:166, col:184> 'int' '&&'
    |             | |-ImplicitCastExpr 0x5609c29ed548 <col:166> 'int' <IntegralCast>
    |             | | `-ImplicitCastExpr 0x5609c29ed530 <col:166> '_Bool' <LValueToRValue>
    |             | |   `-DeclRefExpr 0x5609c29ed4f0 <col:166> '_Bool' lvalue Var 0x5609c29dfd68 'y$w_buff0_used' '_Bool'
    |             | `-ImplicitCastExpr 0x5609c29ed578 <col:184> 'int' <IntegralCast>
    |             |   `-ImplicitCastExpr 0x5609c29ed560 <col:184> '_Bool' <LValueToRValue>
    |             |     `-DeclRefExpr 0x5609c29ed510 <col:184> '_Bool' lvalue Var 0x5609c29df820 'y$r_buff0_thd0' '_Bool'
    |             |-ImplicitCastExpr 0x5609c29ed660 <col:201, col:208> 'int' <IntegralCast>
    |             | `-CStyleCastExpr 0x5609c29ed5e0 <col:201, col:208> '_Bool' <IntegralToBoolean>
    |             |   `-IntegerLiteral 0x5609c29ed5b0 <col:208> 'int' 0
    |             `-ImplicitCastExpr 0x5609c29ed678 <col:212, col:219> 'int' <IntegralCast>
    |               `-CStyleCastExpr 0x5609c29ed638 <col:212, col:219> '_Bool' <IntegralToBoolean>
    |                 `-IntegerLiteral 0x5609c29ed608 <col:219> 'int' 0
    |-BinaryOperator 0x5609c29edad8 <line:836:3, col:95> '_Bool' '='
    | |-DeclRefExpr 0x5609c29ed828 <col:3> '_Bool' lvalue Var 0x5609c29df470 'main$tmp_guard1' '_Bool'
    | `-ImplicitCastExpr 0x5609c29edac0 <col:21, col:95> '_Bool' <IntegralToBoolean>
    |   `-UnaryOperator 0x5609c29edaa8 <col:21, col:95> 'int' prefix '!' cannot overflow
    |     `-ParenExpr 0x5609c29eda88 <col:22, col:95> 'int'
    |       `-BinaryOperator 0x5609c29eda68 <col:23, col:94> 'int' '&&'
    |         |-BinaryOperator 0x5609c29ed9d0 <col:23, col:66> 'int' '&&'
    |         | |-BinaryOperator 0x5609c29ed938 <col:23, col:38> 'int' '&&'
    |         | | |-BinaryOperator 0x5609c29ed8a0 <col:23, col:28> 'int' '=='
    |         | | | |-ImplicitCastExpr 0x5609c29ed888 <col:23> 'int' <LValueToRValue>
    |         | | | | `-DeclRefExpr 0x5609c29ed848 <col:23> 'int' lvalue Var 0x5609c29df570 'x' 'int'
    |         | | | `-IntegerLiteral 0x5609c29ed868 <col:28> 'int' 2
    |         | | `-BinaryOperator 0x5609c29ed918 <col:33, col:38> 'int' '=='
    |         | |   |-ImplicitCastExpr 0x5609c29ed900 <col:33> 'int' <LValueToRValue>
    |         | |   | `-DeclRefExpr 0x5609c29ed8c0 <col:33> 'int' lvalue Var 0x5609c29df690 'y' 'int'
    |         | |   `-IntegerLiteral 0x5609c29ed8e0 <col:38> 'int' 2
    |         | `-BinaryOperator 0x5609c29ed9b0 <col:43, col:66> 'int' '=='
    |         |   |-ImplicitCastExpr 0x5609c29ed998 <col:43> 'int' <LValueToRValue>
    |         |   | `-DeclRefExpr 0x5609c29ed958 <col:43> 'int' lvalue Var 0x5609c29df240 '__unbuffered_p2_EAX' 'int'
    |         |   `-IntegerLiteral 0x5609c29ed978 <col:66> 'int' 1
    |         `-BinaryOperator 0x5609c29eda48 <col:71, col:94> 'int' '=='
    |           |-ImplicitCastExpr 0x5609c29eda30 <col:71> 'int' <LValueToRValue>
    |           | `-DeclRefExpr 0x5609c29ed9f0 <col:71> 'int' lvalue Var 0x5609c29df360 '__unbuffered_p2_EBX' 'int'
    |           `-IntegerLiteral 0x5609c29eda10 <col:94> 'int' 1
    |-BinaryOperator 0x5609c29edc28 <line:837:3, col:37> 'int' '='
    | |-DeclRefExpr 0x5609c29edaf8 <col:3> 'int' lvalue Var 0x5609c29df690 'y' 'int'
    | `-ConditionalOperator 0x5609c29edbf8 <col:7, col:37> 'int'
    |   |-ImplicitCastExpr 0x5609c29edb90 <col:7> 'int' <IntegralCast>
    |   | `-ImplicitCastExpr 0x5609c29edb78 <col:7> '_Bool' <LValueToRValue>
    |   |   `-DeclRefExpr 0x5609c29edb18 <col:7> '_Bool' lvalue Var 0x5609c29df728 'y$flush_delayed' '_Bool'
    |   |-ImplicitCastExpr 0x5609c29edba8 <col:25> 'int' <LValueToRValue>
    |   | `-DeclRefExpr 0x5609c29edb38 <col:25> 'int' lvalue Var 0x5609c29df7a8 'y$mem_tmp' 'int'
    |   `-ImplicitCastExpr 0x5609c29edbe0 <col:37> 'int' <LValueToRValue>
    |     `-DeclRefExpr 0x5609c29edb58 <col:37> 'int' lvalue Var 0x5609c29df690 'y' 'int'
    |-BinaryOperator 0x5609c29edcc0 <line:838:3, col:28> '_Bool' '='
    | |-DeclRefExpr 0x5609c29edc48 <col:3> '_Bool' lvalue Var 0x5609c29df728 'y$flush_delayed' '_Bool'
    | `-CStyleCastExpr 0x5609c29edc98 <col:21, col:28> '_Bool' <IntegralToBoolean>
    |   `-IntegerLiteral 0x5609c29edc68 <col:28> 'int' 0
    |-CallExpr 0x5609c29edd18 <line:839:3, col:25> 'void'
    | `-ImplicitCastExpr 0x5609c29edd00 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x5609c29edce0 <col:3> 'void ()' Function 0x5609c2985f00 '__VERIFIER_atomic_end' 'void ()'
    |-CallExpr 0x5609c29edd90 <line:840:3, col:36> 'void'
    | |-ImplicitCastExpr 0x5609c29edd78 <col:3> 'void (*)(int)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x5609c29edd38 <col:3> 'void (int)' Function 0x5609c2985bc8 '__VERIFIER_assert' 'void (int)'
    | `-ImplicitCastExpr 0x5609c29eddd0 <col:21> 'int' <IntegralCast>
    |   `-ImplicitCastExpr 0x5609c29eddb8 <col:21> '_Bool' <LValueToRValue>
    |     `-DeclRefExpr 0x5609c29edd58 <col:21> '_Bool' lvalue Var 0x5609c29df470 'main$tmp_guard1' '_Bool'
    `-ReturnStmt 0x5609c29ede08 <line:841:3, col:10>
      `-IntegerLiteral 0x5609c29edde8 <col:10> 'int' 0
