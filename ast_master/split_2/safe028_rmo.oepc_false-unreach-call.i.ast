TranslationUnitDecl 0x56324b36ce18 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x56324b36d6d8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x56324b36d3b0 '__int128'
|-TypedefDecl 0x56324b36d748 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x56324b36d3d0 'unsigned __int128'
|-TypedefDecl 0x56324b36da50 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x56324b36d820 'struct __NSConstantString_tag'
|   `-Record 0x56324b36d7a0 '__NSConstantString_tag'
|-TypedefDecl 0x56324b36daf8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x56324b36dab0 'char *'
|   `-BuiltinType 0x56324b36ceb0 'char'
|-TypedefDecl 0x56324b3ac650 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'struct __va_list_tag [1]'
| `-ConstantArrayType 0x56324b36dd90 'struct __va_list_tag [1]' 1 
|   `-RecordType 0x56324b36dbd0 'struct __va_list_tag'
|     `-Record 0x56324b36db50 '__va_list_tag'
|-FunctionDecl 0x56324b3ac770 <./split_2/safe028_rmo.oepc_false-unreach-call.i:1:1, col:41> col:14 used __VERIFIER_nondet_bool '_Bool (void)' extern
|-FunctionDecl 0x56324b3ac940 <line:2:1, col:34> col:13 used __VERIFIER_assume 'void (int)' extern
| `-ParmVarDecl 0x56324b3ac870 <col:31> col:34 'int'
|-FunctionDecl 0x56324b3acab8 <line:3:1, col:45> col:15 used __VERIFIER_nondet_pointer 'void *(void)' extern
|-FunctionDecl 0x56324b3acbe0 <line:4:1, col:61> col:13 used __VERIFIER_error 'void () __attribute__((noreturn))' extern
|-FunctionDecl 0x56324b3acd28 <line:5:1, col:99> col:6 used __VERIFIER_assert 'void (int)'
| |-ParmVarDecl 0x56324b3acc98 <col:24, col:28> col:28 used expression 'int'
| `-CompoundStmt 0x56324b3acf58 <col:40, col:99>
|   |-IfStmt 0x56324b3acf28 <col:42, col:88>
|   | |-UnaryOperator 0x56324b3ace08 <col:46, col:47> 'int' prefix '!' cannot overflow
|   | | `-ImplicitCastExpr 0x56324b3acdf0 <col:47> 'int' <LValueToRValue>
|   | |   `-DeclRefExpr 0x56324b3acdd0 <col:47> 'int' lvalue ParmVar 0x56324b3acc98 'expression' 'int'
|   | `-CompoundStmt 0x56324b3acf10 <col:59, col:88>
|   |   `-LabelStmt 0x56324b3acef8 <col:61, col:85> 'ERROR'
|   |     `-CallExpr 0x56324b3ace88 <col:68, col:85> 'void'
|   |       `-ImplicitCastExpr 0x56324b3ace70 <col:68> 'void (*)() __attribute__((noreturn))' <FunctionToPointerDecay>
|   |         `-DeclRefExpr 0x56324b3ace20 <col:68> 'void () __attribute__((noreturn))' Function 0x56324b3acbe0 '__VERIFIER_error' 'void () __attribute__((noreturn))'
|   |-NullStmt 0x56324b3acf40 <col:89>
|   `-ReturnStmt 0x56324b3acf48 <col:91>
|-FunctionDecl 0x56324b3acfa0 <line:6:1, col:37> col:13 used __VERIFIER_atomic_begin 'void ()' extern
|-FunctionDecl 0x56324b3ad060 <line:7:1, col:35> col:13 used __VERIFIER_atomic_end 'void ()' extern
|-FunctionDecl 0x56324b3ad3e0 <line:9:1, line:11:76> line:9:13 __assert_fail 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x56324b3ad118 <col:28, col:40> col:40 __assertion 'const char *'
| |-ParmVarDecl 0x56324b3ad198 <col:53, col:65> col:65 __file 'const char *'
| |-ParmVarDecl 0x56324b3ad218 <line:10:7, col:20> col:20 __line 'unsigned int'
| |-ParmVarDecl 0x56324b3ad298 <col:28, col:40> col:40 __function 'const char *'
| `-NoThrowAttr 0x56324b3ad4a0 <line:11:22>
|-FunctionDecl 0x56324b3d3520 <line:12:1, line:14:76> line:12:13 __assert_perror_fail 'void (int, const char *, unsigned int, const char *) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x56324b3ad510 <col:35, col:39> col:39 __errnum 'int'
| |-ParmVarDecl 0x56324b3ad590 <col:49, col:61> col:61 __file 'const char *'
| |-ParmVarDecl 0x56324b3d3350 <line:13:7, col:20> col:20 __line 'unsigned int'
| |-ParmVarDecl 0x56324b3d33d0 <col:28, col:40> col:40 __function 'const char *'
| `-NoThrowAttr 0x56324b3d35e0 <line:14:22>
|-FunctionDecl 0x56324b3d3890 <line:15:1, line:16:76> line:15:13 __assert 'void (const char *, const char *, int) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x56324b3d3650 <col:23, col:35> col:35 __assertion 'const char *'
| |-ParmVarDecl 0x56324b3d36d0 <col:48, col:60> col:60 __file 'const char *'
| |-ParmVarDecl 0x56324b3d3750 <col:68, col:72> col:72 __line 'int'
| `-NoThrowAttr 0x56324b3d3948 <line:16:22>
|-TypedefDecl 0x56324b3d39b8 <line:18:1, col:23> col:23 __u_char 'unsigned char'
| `-BuiltinType 0x56324b36cf70 'unsigned char'
|-TypedefDecl 0x56324b3d3a28 <line:19:1, col:28> col:28 __u_short 'unsigned short'
| `-BuiltinType 0x56324b36cf90 'unsigned short'
|-TypedefDecl 0x56324b3d3a98 <line:20:1, col:22> col:22 __u_int 'unsigned int'
| `-BuiltinType 0x56324b36cfb0 'unsigned int'
|-TypedefDecl 0x56324b3d3b08 <line:21:1, col:27> col:27 __u_long 'unsigned long'
| `-BuiltinType 0x56324b36cfd0 'unsigned long'
|-TypedefDecl 0x56324b3d3b78 <line:22:1, col:21> col:21 __int8_t 'signed char'
| `-BuiltinType 0x56324b36ced0 'signed char'
|-TypedefDecl 0x56324b3d3be8 <line:23:1, col:23> col:23 __uint8_t 'unsigned char'
| `-BuiltinType 0x56324b36cf70 'unsigned char'
|-TypedefDecl 0x56324b3d3c58 <line:24:1, col:26> col:26 __int16_t 'short'
| `-BuiltinType 0x56324b36cef0 'short'
|-TypedefDecl 0x56324b3d3cc8 <line:25:1, col:28> col:28 __uint16_t 'unsigned short'
| `-BuiltinType 0x56324b36cf90 'unsigned short'
|-TypedefDecl 0x56324b3d3d38 <line:26:1, col:20> col:20 __int32_t 'int'
| `-BuiltinType 0x56324b36cf10 'int'
|-TypedefDecl 0x56324b3d3da8 <line:27:1, col:22> col:22 __uint32_t 'unsigned int'
| `-BuiltinType 0x56324b36cfb0 'unsigned int'
|-TypedefDecl 0x56324b3d3e18 <line:28:1, col:25> col:25 __int64_t 'long'
| `-BuiltinType 0x56324b36cf30 'long'
|-TypedefDecl 0x56324b3d3e88 <line:29:1, col:27> col:27 referenced __uint64_t 'unsigned long'
| `-BuiltinType 0x56324b36cfd0 'unsigned long'
|-TypedefDecl 0x56324b3d3ef8 <line:30:1, col:18> col:18 referenced __quad_t 'long'
| `-BuiltinType 0x56324b36cf30 'long'
|-TypedefDecl 0x56324b3d3f68 <line:31:1, col:27> col:27 __u_quad_t 'unsigned long'
| `-BuiltinType 0x56324b36cfd0 'unsigned long'
|-TypedefDecl 0x56324b3d3fd8 <line:32:1, col:27> col:27 __dev_t 'unsigned long'
| `-BuiltinType 0x56324b36cfd0 'unsigned long'
|-TypedefDecl 0x56324b3d4048 <line:33:1, col:22> col:22 __uid_t 'unsigned int'
| `-BuiltinType 0x56324b36cfb0 'unsigned int'
|-TypedefDecl 0x56324b3d40b8 <line:34:1, col:22> col:22 __gid_t 'unsigned int'
| `-BuiltinType 0x56324b36cfb0 'unsigned int'
|-TypedefDecl 0x56324b3d4128 <line:35:1, col:27> col:27 __ino_t 'unsigned long'
| `-BuiltinType 0x56324b36cfd0 'unsigned long'
|-TypedefDecl 0x56324b3d4198 <line:36:1, col:27> col:27 __ino64_t 'unsigned long'
| `-BuiltinType 0x56324b36cfd0 'unsigned long'
|-TypedefDecl 0x56324b3d4208 <line:37:1, col:22> col:22 __mode_t 'unsigned int'
| `-BuiltinType 0x56324b36cfb0 'unsigned int'
|-TypedefDecl 0x56324b3d4278 <line:38:1, col:27> col:27 __nlink_t 'unsigned long'
| `-BuiltinType 0x56324b36cfd0 'unsigned long'
|-TypedefDecl 0x56324b3d42e8 <line:39:1, col:18> col:18 __off_t 'long'
| `-BuiltinType 0x56324b36cf30 'long'
|-TypedefDecl 0x56324b3d4378 <line:40:1, col:18> col:18 referenced __off64_t 'long'
| `-BuiltinType 0x56324b36cf30 'long'
|-TypedefDecl 0x56324b3d43e8 <line:41:1, col:13> col:13 referenced __pid_t 'int'
| `-BuiltinType 0x56324b36cf10 'int'
|-RecordDecl 0x56324b3d4440 <line:42:9, col:32> col:9 struct definition
| `-FieldDecl 0x56324b3d4588 <col:18, col:29> col:22 __val 'int [2]'
|-TypedefDecl 0x56324b3d4640 <col:1, col:34> col:34 __fsid_t 'struct __fsid_t':'__fsid_t'
| `-ElaboratedType 0x56324b3d45e0 'struct __fsid_t' sugar
|   `-RecordType 0x56324b3d44c0 '__fsid_t'
|     `-Record 0x56324b3d4440 ''
|-TypedefDecl 0x56324b3d46c8 <line:43:1, col:18> col:18 referenced __clock_t 'long'
| `-BuiltinType 0x56324b36cf30 'long'
|-TypedefDecl 0x56324b3d4738 <line:44:1, col:27> col:27 __rlim_t 'unsigned long'
| `-BuiltinType 0x56324b36cfd0 'unsigned long'
|-TypedefDecl 0x56324b3d47a8 <line:45:1, col:27> col:27 __rlim64_t 'unsigned long'
| `-BuiltinType 0x56324b36cfd0 'unsigned long'
|-TypedefDecl 0x56324b3d4818 <line:46:1, col:22> col:22 __id_t 'unsigned int'
| `-BuiltinType 0x56324b36cfb0 'unsigned int'
|-TypedefDecl 0x56324b3d4888 <line:47:1, col:18> col:18 referenced __time_t 'long'
| `-BuiltinType 0x56324b36cf30 'long'
|-TypedefDecl 0x56324b3d48f8 <line:48:1, col:22> col:22 __useconds_t 'unsigned int'
| `-BuiltinType 0x56324b36cfb0 'unsigned int'
|-TypedefDecl 0x56324b3d4968 <line:49:1, col:18> col:18 __suseconds_t 'long'
| `-BuiltinType 0x56324b36cf30 'long'
|-TypedefDecl 0x56324b3d49d8 <line:50:1, col:13> col:13 __daddr_t 'int'
| `-BuiltinType 0x56324b36cf10 'int'
|-TypedefDecl 0x56324b3d4a48 <line:51:1, col:13> col:13 __key_t 'int'
| `-BuiltinType 0x56324b36cf10 'int'
|-TypedefDecl 0x56324b3d4ab8 <line:52:1, col:13> col:13 referenced __clockid_t 'int'
| `-BuiltinType 0x56324b36cf10 'int'
|-TypedefDecl 0x56324b3d4b28 <line:53:1, col:16> col:16 referenced __timer_t 'void *'
| `-PointerType 0x56324b36d630 'void *'
|   `-BuiltinType 0x56324b36ce70 'void'
|-TypedefDecl 0x56324b3d4b98 <line:54:1, col:18> col:18 __blksize_t 'long'
| `-BuiltinType 0x56324b36cf30 'long'
|-TypedefDecl 0x56324b3d4c08 <line:55:1, col:18> col:18 __blkcnt_t 'long'
| `-BuiltinType 0x56324b36cf30 'long'
|-TypedefDecl 0x56324b3d4c78 <line:56:1, col:18> col:18 __blkcnt64_t 'long'
| `-BuiltinType 0x56324b36cf30 'long'
|-TypedefDecl 0x56324b3d4ce8 <line:57:1, col:27> col:27 __fsblkcnt_t 'unsigned long'
| `-BuiltinType 0x56324b36cfd0 'unsigned long'
|-TypedefDecl 0x56324b3d4d58 <line:58:1, col:27> col:27 __fsblkcnt64_t 'unsigned long'
| `-BuiltinType 0x56324b36cfd0 'unsigned long'
|-TypedefDecl 0x56324b3d4dc8 <line:59:1, col:27> col:27 __fsfilcnt_t 'unsigned long'
| `-BuiltinType 0x56324b36cfd0 'unsigned long'
|-TypedefDecl 0x56324b3d4e38 <line:60:1, col:27> col:27 __fsfilcnt64_t 'unsigned long'
| `-BuiltinType 0x56324b36cfd0 'unsigned long'
|-TypedefDecl 0x56324b3d4ea8 <line:61:1, col:18> col:18 __fsword_t 'long'
| `-BuiltinType 0x56324b36cf30 'long'
|-TypedefDecl 0x56324b3d4f18 <line:62:1, col:18> col:18 __ssize_t 'long'
| `-BuiltinType 0x56324b36cf30 'long'
|-TypedefDecl 0x56324b3d4f88 <line:63:1, col:18> col:18 referenced __syscall_slong_t 'long'
| `-BuiltinType 0x56324b36cf30 'long'
|-TypedefDecl 0x56324b3d4ff8 <line:64:1, col:27> col:27 __syscall_ulong_t 'unsigned long'
| `-BuiltinType 0x56324b36cfd0 'unsigned long'
|-TypedefDecl 0x56324b3d5088 <line:65:1, col:19> col:19 __loff_t '__off64_t':'long'
| `-TypedefType 0x56324b3d5050 '__off64_t' sugar
|   |-Typedef 0x56324b3d4378 '__off64_t'
|   `-BuiltinType 0x56324b36cf30 'long'
|-TypedefDecl 0x56324b3d5180 <line:66:1, col:19> col:19 __qaddr_t '__quad_t *'
| `-PointerType 0x56324b3d5140 '__quad_t *'
|   `-TypedefType 0x56324b3d50e0 '__quad_t' sugar
|     |-Typedef 0x56324b3d3ef8 '__quad_t'
|     `-BuiltinType 0x56324b36cf30 'long'
|-TypedefDecl 0x56324b3d51f0 <line:67:1, col:15> col:15 __caddr_t 'char *'
| `-PointerType 0x56324b36dab0 'char *'
|   `-BuiltinType 0x56324b36ceb0 'char'
|-TypedefDecl 0x56324b3d5260 <line:68:1, col:18> col:18 __intptr_t 'long'
| `-BuiltinType 0x56324b36cf30 'long'
|-TypedefDecl 0x56324b3d52d0 <line:69:1, col:22> col:22 __socklen_t 'unsigned int'
| `-BuiltinType 0x56324b36cfb0 'unsigned int'
|-FunctionDecl 0x56324b3d6458 <line:70:1, line:74:1> line:71:1 __bswap_32 'unsigned int (unsigned int)' static inline
| |-ParmVarDecl 0x56324b3d6380 <col:13, col:26> col:26 used __bsx 'unsigned int'
| `-CompoundStmt 0x56324b3d6768 <line:72:1, line:74:1>
|   `-ReturnStmt 0x56324b3d6758 <line:73:3, col:34>
|     `-CallExpr 0x56324b3d6718 <col:10, col:34> 'unsigned int'
|       |-ImplicitCastExpr 0x56324b3d6700 <col:10> 'unsigned int (*)(unsigned int)' <BuiltinFnToFnPtr>
|       | `-DeclRefExpr 0x56324b3d6690 <col:10> '<builtin fn type>' Function 0x56324b3d6500 '__builtin_bswap32' 'unsigned int (unsigned int)'
|       `-ImplicitCastExpr 0x56324b3d6740 <col:29> 'unsigned int' <LValueToRValue>
|         `-DeclRefExpr 0x56324b3d66b0 <col:29> 'unsigned int' lvalue ParmVar 0x56324b3d6380 '__bsx' 'unsigned int'
|-FunctionDecl 0x56324b3d6500 <col:10> col:10 implicit used __builtin_bswap32 'unsigned int (unsigned int)' extern
| |-ParmVarDecl 0x56324b3d65a0 <<invalid sloc>> <invalid sloc> 'unsigned int'
| |-NoThrowAttr 0x56324b3d6610 <col:10> Implicit
| `-ConstAttr 0x56324b3d6668 <col:10> Implicit
|-FunctionDecl 0x56324b3d68c0 <line:75:1, line:79:1> line:76:1 __bswap_64 '__uint64_t (__uint64_t)' static inline
| |-ParmVarDecl 0x56324b3d67b8 <col:13, col:24> col:24 used __bsx '__uint64_t':'unsigned long'
| `-CompoundStmt 0x56324b3d6bd8 <line:77:1, line:79:1>
|   `-ReturnStmt 0x56324b3d6bc8 <line:78:3, col:34>
|     `-CallExpr 0x56324b3d6b88 <col:10, col:34> 'unsigned long'
|       |-ImplicitCastExpr 0x56324b3d6b70 <col:10> 'unsigned long (*)(unsigned long)' <BuiltinFnToFnPtr>
|       | `-DeclRefExpr 0x56324b3d6af8 <col:10> '<builtin fn type>' Function 0x56324b3d6968 '__builtin_bswap64' 'unsigned long (unsigned long)'
|       `-ImplicitCastExpr 0x56324b3d6bb0 <col:29> '__uint64_t':'unsigned long' <LValueToRValue>
|         `-DeclRefExpr 0x56324b3d6b18 <col:29> '__uint64_t':'unsigned long' lvalue ParmVar 0x56324b3d67b8 '__bsx' '__uint64_t':'unsigned long'
|-FunctionDecl 0x56324b3d6968 <col:10> col:10 implicit used __builtin_bswap64 'unsigned long (unsigned long)' extern
| |-ParmVarDecl 0x56324b3d6a08 <<invalid sloc>> <invalid sloc> 'unsigned long'
| |-NoThrowAttr 0x56324b3d6a78 <col:10> Implicit
| `-ConstAttr 0x56324b3d6ad0 <col:10> Implicit
|-TypedefDecl 0x56324b3d6c08 <line:80:1, col:27> col:27 referenced size_t 'unsigned long'
| `-BuiltinType 0x56324b36cfd0 'unsigned long'
|-TypedefDecl 0x56324b3d6c98 <line:82:1, col:18> col:18 referenced time_t '__time_t':'long'
| `-TypedefType 0x56324b3d6c60 '__time_t' sugar
|   |-Typedef 0x56324b3d4888 '__time_t'
|   `-BuiltinType 0x56324b36cf30 'long'
|-RecordDecl 0x56324b3d6cf0 <line:85:1, line:89:3> line:85:8 struct timespec definition
| |-FieldDecl 0x56324b3d6da8 <line:87:5, col:14> col:14 tv_sec '__time_t':'long'
| `-FieldDecl 0x56324b3d6e38 <line:88:5, col:23> col:23 tv_nsec '__syscall_slong_t':'long'
|-TypedefDecl 0x56324b3d6ec8 <line:90:1, col:17> col:17 referenced pid_t '__pid_t':'int'
| `-TypedefType 0x56324b3d6e90 '__pid_t' sugar
|   |-Typedef 0x56324b3d43e8 '__pid_t'
|   `-BuiltinType 0x56324b36cf10 'int'
|-RecordDecl 0x56324b3d6f20 <line:91:1, line:94:3> line:91:8 struct sched_param definition
| `-FieldDecl 0x56324b3d6fe0 <line:93:5, col:9> col:9 __sched_priority 'int'
|-RecordDecl 0x56324b3d7030 <line:97:1, line:100:3> line:97:8 struct __sched_param definition
| `-FieldDecl 0x56324b3d70f0 <line:99:5, col:9> col:9 __sched_priority 'int'
|-TypedefDecl 0x56324b3d7158 <line:101:1, col:27> col:27 referenced __cpu_mask 'unsigned long'
| `-BuiltinType 0x56324b36cfd0 'unsigned long'
|-RecordDecl 0x56324b3d71b0 <line:102:9, line:105:1> line:102:9 struct definition
| `-FieldDecl 0x56324b3d8480 <line:104:3, col:53> col:14 __bits '__cpu_mask [64]'
|-TypedefDecl 0x56324b3d8530 <line:102:1, line:105:3> col:3 referenced cpu_set_t 'struct cpu_set_t':'cpu_set_t'
| `-ElaboratedType 0x56324b3d84d0 'struct cpu_set_t' sugar
|   `-RecordType 0x56324b3d7230 'cpu_set_t'
|     `-Record 0x56324b3d71b0 ''
|-FunctionDecl 0x56324b3d8808 <line:107:1, line:108:42> line:107:12 __sched_cpucount 'int (size_t, const cpu_set_t *)' extern
| |-ParmVarDecl 0x56324b3d85d8 <col:30, col:37> col:37 __setsize 'size_t':'unsigned long'
| |-ParmVarDecl 0x56324b3d86e0 <col:48, col:65> col:65 __setp 'const cpu_set_t *'
| `-NoThrowAttr 0x56324b3d88b8 <line:108:19>
|-FunctionDecl 0x56324b3d8a90 <line:109:1, col:92> col:19 __sched_cpualloc 'cpu_set_t *(size_t)' extern
| |-ParmVarDecl 0x56324b3d8920 <col:37, col:44> col:44 __count 'size_t':'unsigned long'
| `-NoThrowAttr 0x56324b3d8b38 <col:69>
|-FunctionDecl 0x56324b3d8cb0 <line:110:1, col:87> col:13 __sched_cpufree 'void (cpu_set_t *)' extern
| |-ParmVarDecl 0x56324b3d8ba0 <col:30, col:41> col:41 __set 'cpu_set_t *'
| `-NoThrowAttr 0x56324b3d8d58 <col:64>
|-FunctionDecl 0x56324b3d9018 <line:113:1, line:114:45> line:113:12 sched_setparam 'int (__pid_t, const struct sched_param *)' extern
| |-ParmVarDecl 0x56324b3d8dc0 <col:28, col:36> col:36 __pid '__pid_t':'int'
| |-ParmVarDecl 0x56324b3d8ef8 <col:43, col:69> col:69 __param 'const struct sched_param *'
| `-NoThrowAttr 0x56324b3d90c8 <line:114:22>
|-FunctionDecl 0x56324b3d93b0 <line:115:1, col:111> col:12 sched_getparam 'int (__pid_t, struct sched_param *)' extern
| |-ParmVarDecl 0x56324b3d9130 <col:28, col:36> col:36 __pid '__pid_t':'int'
| |-ParmVarDecl 0x56324b3d9228 <col:43, col:63> col:63 __param 'struct sched_param *'
| `-NoThrowAttr 0x56324b3d9460 <col:88>
|-FunctionDecl 0x56324b3d9718 <line:116:1, line:117:85> line:116:12 sched_setscheduler 'int (__pid_t, int, const struct sched_param *)' extern
| |-ParmVarDecl 0x56324b3d94c8 <col:32, col:40> col:40 __pid '__pid_t':'int'
| |-ParmVarDecl 0x56324b3d9548 <col:47, col:51> col:51 __policy 'int'
| |-ParmVarDecl 0x56324b3d95d8 <line:117:11, col:37> col:37 __param 'const struct sched_param *'
| `-NoThrowAttr 0x56324b3d97d0 <col:62>
|-FunctionDecl 0x56324b3d9948 <line:118:1, col:86> col:12 sched_getscheduler 'int (__pid_t)' extern
| |-ParmVarDecl 0x56324b3d9838 <col:32, col:40> col:40 __pid '__pid_t':'int'
| `-NoThrowAttr 0x56324b3d99f0 <col:63>
|-FunctionDecl 0x56324b3d9b18 <line:119:1, col:70> col:12 sched_yield 'int (void)' extern
| `-NoThrowAttr 0x56324b3d9bb8 <col:47>
|-FunctionDecl 0x56324b3d9cc0 <line:120:1, col:92> col:12 sched_get_priority_max 'int (int)' extern
| |-ParmVarDecl 0x56324b3d9c28 <col:36, col:40> col:40 __algorithm 'int'
| `-NoThrowAttr 0x56324b3d9d68 <col:69>
|-FunctionDecl 0x56324b3d9e70 <line:121:1, col:92> col:12 sched_get_priority_min 'int (int)' extern
| |-ParmVarDecl 0x56324b3d9dd8 <col:36, col:40> col:40 __algorithm 'int'
| `-NoThrowAttr 0x56324b3d9f18 <col:69>
|-FunctionDecl 0x56324b3da1d8 <line:122:1, col:111> col:12 sched_rr_get_interval 'int (__pid_t, struct timespec *)' extern
| |-ParmVarDecl 0x56324b3d9f80 <col:35, col:43> col:43 __pid '__pid_t':'int'
| |-ParmVarDecl 0x56324b3da0b8 <col:50, col:67> col:67 __t 'struct timespec *'
| `-NoThrowAttr 0x56324b3da288 <col:88>
|-TypedefDecl 0x56324b3da318 <line:126:1, col:19> col:19 referenced clock_t '__clock_t':'long'
| `-TypedefType 0x56324b3da2e0 '__clock_t' sugar
|   |-Typedef 0x56324b3d46c8 '__clock_t'
|   `-BuiltinType 0x56324b36cf30 'long'
|-TypedefDecl 0x56324b3da3c0 <line:129:1, col:21> col:21 referenced clockid_t '__clockid_t':'int'
| `-TypedefType 0x56324b3da370 '__clockid_t' sugar
|   |-Typedef 0x56324b3d4ab8 '__clockid_t'
|   `-BuiltinType 0x56324b36cf10 'int'
|-TypedefDecl 0x56324b3da458 <line:130:1, col:19> col:19 referenced timer_t '__timer_t':'void *'
| `-TypedefType 0x56324b3da420 '__timer_t' sugar
|   |-Typedef 0x56324b3d4b28 '__timer_t'
|   `-PointerType 0x56324b36d630 'void *'
|     `-BuiltinType 0x56324b36ce70 'void'
|-RecordDecl 0x56324b3da4b0 <line:132:1, line:145:1> line:132:8 struct tm definition
| |-FieldDecl 0x56324b3da570 <line:134:3, col:7> col:7 tm_sec 'int'
| |-FieldDecl 0x56324b3da5d8 <line:135:3, col:7> col:7 tm_min 'int'
| |-FieldDecl 0x56324b3da640 <line:136:3, col:7> col:7 tm_hour 'int'
| |-FieldDecl 0x56324b3da6a8 <line:137:3, col:7> col:7 tm_mday 'int'
| |-FieldDecl 0x56324b3da710 <line:138:3, col:7> col:7 tm_mon 'int'
| |-FieldDecl 0x56324b3da778 <line:139:3, col:7> col:7 tm_year 'int'
| |-FieldDecl 0x56324b3da7e0 <line:140:3, col:7> col:7 tm_wday 'int'
| |-FieldDecl 0x56324b3da848 <line:141:3, col:7> col:7 tm_yday 'int'
| |-FieldDecl 0x56324b3da8b0 <line:142:3, col:7> col:7 tm_isdst 'int'
| |-FieldDecl 0x56324b3da918 <line:143:3, col:12> col:12 tm_gmtoff 'long'
| `-FieldDecl 0x56324b3da980 <line:144:3, col:15> col:15 tm_zone 'const char *'
|-RecordDecl 0x56324b3da9d0 <line:148:1, line:152:3> line:148:8 struct itimerspec definition
| |-FieldDecl 0x56324b3daa98 <line:150:5, col:21> col:21 it_interval 'struct timespec':'struct timespec'
| `-FieldDecl 0x56324b3dab08 <line:151:5, col:21> col:21 it_value 'struct timespec':'struct timespec'
|-RecordDecl 0x56324b3dabb0 <line:153:1, col:8> col:8 struct sigevent
|-FunctionDecl 0x56324b3dad80 <line:155:1, col:68> col:16 clock 'clock_t (void)' extern
| `-NoThrowAttr 0x56324b3dae20 <col:45>
|-FunctionDecl 0x56324b3db000 <line:156:1, col:77> col:15 time 'time_t (time_t *)' extern
| |-ParmVarDecl 0x56324b3daef0 <col:21, col:29> col:29 __timer 'time_t *'
| `-NoThrowAttr 0x56324b3db0a8 <col:54>
|-FunctionDecl 0x56324b3db2a8 <line:157:1, line:158:73> line:157:15 difftime 'double (time_t, time_t)' extern
| |-ParmVarDecl 0x56324b3db110 <col:25, col:32> col:32 __time1 'time_t':'long'
| |-ParmVarDecl 0x56324b3db188 <col:41, col:48> col:48 __time0 'time_t':'long'
| |-NoThrowAttr 0x56324b3db358 <line:158:22>
| `-ConstAttr 0x56324b3dbff0 <col:63>
|-FunctionDecl 0x56324b3dc1f0 <line:159:1, col:79> col:15 mktime 'time_t (struct tm *)' extern
| |-ParmVarDecl 0x56324b3dc0e8 <col:23, col:34> col:34 __tp 'struct tm *'
| `-NoThrowAttr 0x56324b3dc298 <col:56>
|-FunctionDecl 0x56324b3dc640 <line:160:1, line:162:77> line:160:15 strftime 'size_t (char *restrict, size_t, const char *restrict, const struct tm *restrict)' extern
| |-ParmVarDecl 0x56324b3dc308 <col:25, col:42> col:42 __s 'char *restrict'
| |-ParmVarDecl 0x56324b3dc380 <col:47, col:54> col:54 __maxsize 'size_t':'unsigned long'
| |-ParmVarDecl 0x56324b3dc400 <line:161:4, col:27> col:27 __format 'const char *restrict'
| |-ParmVarDecl 0x56324b3dc4f8 <line:162:4, col:32> col:32 __tp 'const struct tm *restrict'
| `-NoThrowAttr 0x56324b3dc700 <col:54>
|-RecordDecl 0x56324b3dc758 <line:164:9, line:171:1> line:164:16 struct __locale_struct definition
| |-RecordDecl 0x56324b3dc808 parent 0x56324b36ce18 <line:166:3, col:10> col:10 struct __locale_data
| |-FieldDecl 0x56324b3dca68 <col:3, col:37> col:25 __locales 'struct __locale_data *[13]'
| |-FieldDecl 0x56324b3dcb08 <line:167:3, col:29> col:29 __ctype_b 'const unsigned short *'
| |-FieldDecl 0x56324b3dcb70 <line:168:3, col:14> col:14 __ctype_tolower 'const int *'
| |-FieldDecl 0x56324b3dcbd8 <line:169:3, col:14> col:14 __ctype_toupper 'const int *'
| `-FieldDecl 0x56324b3dccc8 <line:170:3, col:25> col:15 __names 'const char *[13]'
|-TypedefDecl 0x56324b3dcde8 <line:164:1, line:171:4> col:4 referenced __locale_t 'struct __locale_struct *'
| `-PointerType 0x56324b3dcd90 'struct __locale_struct *'
|   `-ElaboratedType 0x56324b3dcd20 'struct __locale_struct' sugar
|     `-RecordType 0x56324b3dc7e0 'struct __locale_struct'
|       `-Record 0x56324b3dc758 '__locale_struct'
|-TypedefDecl 0x56324b3dce98 <line:172:1, col:20> col:20 locale_t '__locale_t':'struct __locale_struct *'
| `-TypedefType 0x56324b3dce60 '__locale_t' sugar
|   |-Typedef 0x56324b3dcde8 '__locale_t'
|   `-PointerType 0x56324b3dcd90 'struct __locale_struct *'
|     `-ElaboratedType 0x56324b3dcd20 'struct __locale_struct' sugar
|       `-RecordType 0x56324b3dc7e0 'struct __locale_struct'
|         `-Record 0x56324b3dc758 '__locale_struct'
|-FunctionDecl 0x56324b3de2a0 <line:173:1, line:176:63> line:173:15 strftime_l 'size_t (char *restrict, size_t, const char *restrict, const struct tm *restrict, __locale_t)' extern
| |-ParmVarDecl 0x56324b3dcf08 <col:27, col:44> col:44 __s 'char *restrict'
| |-ParmVarDecl 0x56324b3dcf80 <col:49, col:56> col:56 __maxsize 'size_t':'unsigned long'
| |-ParmVarDecl 0x56324b3de028 <line:174:6, col:29> col:29 __format 'const char *restrict'
| |-ParmVarDecl 0x56324b3de0b8 <line:175:6, col:34> col:34 __tp 'const struct tm *restrict'
| |-ParmVarDecl 0x56324b3de130 <line:176:6, col:17> col:17 __loc '__locale_t':'struct __locale_struct *'
| `-NoThrowAttr 0x56324b3de368 <col:40>
|-FunctionDecl 0x56324b3de558 <line:178:1, col:89> col:19 gmtime 'struct tm *(const time_t *)' extern
| |-ParmVarDecl 0x56324b3de430 <col:27, col:41> col:41 __timer 'const time_t *'
| `-NoThrowAttr 0x56324b3de600 <col:66>
|-FunctionDecl 0x56324b3de710 <line:179:1, col:92> col:19 localtime 'struct tm *(const time_t *)' extern
| |-ParmVarDecl 0x56324b3de668 <col:30, col:44> col:44 __timer 'const time_t *'
| `-NoThrowAttr 0x56324b3de7b8 <col:69>
|-FunctionDecl 0x56324b3de9e8 <line:181:1, line:182:75> line:181:19 gmtime_r 'struct tm *(const time_t *restrict, struct tm *restrict)' extern
| |-ParmVarDecl 0x56324b3de820 <col:29, col:54> col:54 __timer 'const time_t *restrict'
| |-ParmVarDecl 0x56324b3de8b0 <line:182:8, col:30> col:30 __tp 'struct tm *restrict'
| `-NoThrowAttr 0x56324b3dea98 <col:52>
|-FunctionDecl 0x56324b3dec40 <line:183:1, line:184:78> line:183:19 localtime_r 'struct tm *(const time_t *restrict, struct tm *restrict)' extern
| |-ParmVarDecl 0x56324b3deb00 <col:32, col:57> col:57 __timer 'const time_t *restrict'
| |-ParmVarDecl 0x56324b3deb90 <line:184:11, col:33> col:33 __tp 'struct tm *restrict'
| `-NoThrowAttr 0x56324b3decf0 <col:55>
|-FunctionDecl 0x56324b3dee88 <line:186:1, col:85> col:14 asctime 'char *(const struct tm *)' extern
| |-ParmVarDecl 0x56324b3ded70 <col:23, col:40> col:40 __tp 'const struct tm *'
| `-NoThrowAttr 0x56324b3def30 <col:62>
|-FunctionDecl 0x56324b3df168 <line:187:1, col:83> col:14 ctime 'char *(const time_t *)' extern
| |-ParmVarDecl 0x56324b3def98 <col:21, col:35> col:35 __timer 'const time_t *'
| `-NoThrowAttr 0x56324b3df210 <col:60>
|-FunctionDecl 0x56324b3df438 <line:189:1, line:190:67> line:189:14 asctime_r 'char *(const struct tm *restrict, char *restrict)' extern
| |-ParmVarDecl 0x56324b3df290 <col:25, col:53> col:53 __tp 'const struct tm *restrict'
| |-ParmVarDecl 0x56324b3df310 <line:190:4, col:21> col:21 __buf 'char *restrict'
| `-NoThrowAttr 0x56324b3df4e8 <col:44>
|-FunctionDecl 0x56324b3df6f8 <line:191:1, line:192:72> line:191:14 ctime_r 'char *(const time_t *restrict, char *restrict)' extern
| |-ParmVarDecl 0x56324b3df550 <col:23, col:48> col:48 __timer 'const time_t *restrict'
| |-ParmVarDecl 0x56324b3df5d0 <line:192:9, col:26> col:26 __buf 'char *restrict'
| `-NoThrowAttr 0x56324b3df7a8 <col:49>
|-VarDecl 0x56324b3df8a8 <line:193:1, col:24> col:14 __tzname 'char *[2]' extern
|-VarDecl 0x56324b3df928 <line:194:1, col:12> col:12 __daylight 'int' extern
|-VarDecl 0x56324b3df9a8 <line:195:1, col:17> col:17 __timezone 'long' extern
|-VarDecl 0x56324b3dfa70 <line:196:1, col:22> col:14 tzname 'char *[2]' extern
|-FunctionDecl 0x56324b3dfba0 <line:197:1, col:65> col:13 tzset 'void (void)' extern
| `-NoThrowAttr 0x56324b3dfc40 <col:42>
|-VarDecl 0x56324b3dfcb0 <line:198:1, col:12> col:12 daylight 'int' extern
|-VarDecl 0x56324b3dfd30 <line:199:1, col:17> col:17 timezone 'long' extern
|-FunctionDecl 0x56324b3dfeb8 <line:200:1, col:80> col:12 stime 'int (const time_t *)' extern
| |-ParmVarDecl 0x56324b3dfda8 <col:19, col:33> col:33 __when 'const time_t *'
| `-NoThrowAttr 0x56324b3dff60 <col:57>
|-FunctionDecl 0x56324b3e00d0 <line:201:1, col:79> col:15 timegm 'time_t (struct tm *)' extern
| |-ParmVarDecl 0x56324b3dffe0 <col:23, col:34> col:34 __tp 'struct tm *'
| `-NoThrowAttr 0x56324b3e0178 <col:56>
|-FunctionDecl 0x56324b3e0288 <line:202:1, col:82> col:15 timelocal 'time_t (struct tm *)' extern
| |-ParmVarDecl 0x56324b3e01f8 <col:26, col:37> col:37 __tp 'struct tm *'
| `-NoThrowAttr 0x56324b3e0330 <col:59>
|-FunctionDecl 0x56324b3e0438 <line:203:1, col:99> col:12 dysize 'int (int)' extern
| |-ParmVarDecl 0x56324b3e03a0 <col:20, col:24> col:24 __year 'int'
| |-NoThrowAttr 0x56324b3e04e0 <col:48>
| `-ConstAttr 0x56324b3e0538 <col:89>
|-FunctionDecl 0x56324b3e0798 <line:204:1, line:205:37> line:204:12 nanosleep 'int (const struct timespec *, struct timespec *)' extern
| |-ParmVarDecl 0x56324b3e05e8 <col:23, col:46> col:46 __requested_time 'const struct timespec *'
| `-ParmVarDecl 0x56324b3e0678 <line:205:9, col:26> col:26 __remaining 'struct timespec *'
|-FunctionDecl 0x56324b3e09f8 <line:206:1, col:111> col:12 clock_getres 'int (clockid_t, struct timespec *)' extern
| |-ParmVarDecl 0x56324b3e0888 <col:26, col:36> col:36 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x56324b3e0918 <col:48, col:65> col:65 __res 'struct timespec *'
| `-NoThrowAttr 0x56324b3e0aa8 <col:88>
|-FunctionDecl 0x56324b3e0c40 <line:207:1, col:111> col:12 clock_gettime 'int (clockid_t, struct timespec *)' extern
| |-ParmVarDecl 0x56324b3e0b10 <col:27, col:37> col:37 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x56324b3e0ba0 <col:49, col:66> col:66 __tp 'struct timespec *'
| `-NoThrowAttr 0x56324b3e0cf0 <col:88>
|-FunctionDecl 0x56324b3e0f08 <line:208:1, line:209:45> line:208:12 clock_settime 'int (clockid_t, const struct timespec *)' extern
| |-ParmVarDecl 0x56324b3e0d58 <col:27, col:37> col:37 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x56324b3e0de8 <col:49, col:72> col:72 __tp 'const struct timespec *'
| `-NoThrowAttr 0x56324b3e0fb8 <line:209:22>
|-FunctionDecl 0x56324b3e1358 <line:210:1, line:212:30> line:210:12 clock_nanosleep 'int (clockid_t, int, const struct timespec *, struct timespec *)' extern
| |-ParmVarDecl 0x56324b3e1020 <col:29, col:39> col:39 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x56324b3e10e0 <col:51, col:55> col:55 __flags 'int'
| |-ParmVarDecl 0x56324b3e1170 <line:211:8, col:31> col:31 __req 'const struct timespec *'
| `-ParmVarDecl 0x56324b3e1200 <line:212:8, col:25> col:25 __rem 'struct timespec *'
|-FunctionDecl 0x56324b3e1658 <line:213:1, col:108> col:12 clock_getcpuclockid 'int (pid_t, clockid_t *)' extern
| |-ParmVarDecl 0x56324b3e1458 <col:33, col:39> col:39 __pid 'pid_t':'int'
| |-ParmVarDecl 0x56324b3e1530 <col:46, col:57> col:57 __clock_id 'clockid_t *'
| `-NoThrowAttr 0x56324b3e1708 <col:85>
|-FunctionDecl 0x56324b3e1af8 <line:214:1, line:216:75> line:214:12 timer_create 'int (clockid_t, struct sigevent *restrict, timer_t *restrict)' extern
| |-ParmVarDecl 0x56324b3e1770 <col:26, col:36> col:36 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x56324b3e18a8 <line:215:5, col:33> col:33 __evp 'struct sigevent *restrict'
| |-ParmVarDecl 0x56324b3e19b0 <line:216:5, col:25> col:25 __timerid 'timer_t *restrict'
| `-NoThrowAttr 0x56324b3e1bb0 <col:52>
|-FunctionDecl 0x56324b3e1d28 <line:217:1, col:84> col:12 timer_delete 'int (timer_t)' extern
| |-ParmVarDecl 0x56324b3e1c18 <col:26, col:34> col:34 __timerid 'timer_t':'void *'
| `-NoThrowAttr 0x56324b3e1dd0 <col:61>
|-FunctionDecl 0x56324b3e2248 <line:218:1, line:220:85> line:218:12 timer_settime 'int (timer_t, int, const struct itimerspec *restrict, struct itimerspec *restrict)' extern
| |-ParmVarDecl 0x56324b3e1e38 <col:27, col:35> col:35 __timerid 'timer_t':'void *'
| |-ParmVarDecl 0x56324b3e1eb8 <col:46, col:50> col:50 __flags 'int'
| |-ParmVarDecl 0x56324b3e1fe8 <line:219:6, col:42> col:42 __value 'const struct itimerspec *restrict'
| |-ParmVarDecl 0x56324b3e20f0 <line:220:6, col:36> col:36 __ovalue 'struct itimerspec *restrict'
| `-NoThrowAttr 0x56324b3e2308 <col:62>
|-FunctionDecl 0x56324b3e2528 <line:221:1, line:222:45> line:221:12 timer_gettime 'int (timer_t, struct itimerspec *)' extern
| |-ParmVarDecl 0x56324b3e2370 <col:27, col:35> col:35 __timerid 'timer_t':'void *'
| |-ParmVarDecl 0x56324b3e2400 <col:46, col:65> col:65 __value 'struct itimerspec *'
| `-NoThrowAttr 0x56324b3e25d8 <line:222:22>
|-FunctionDecl 0x56324b3e26d8 <line:223:1, col:88> col:12 timer_getoverrun 'int (timer_t)' extern
| |-ParmVarDecl 0x56324b3e2640 <col:30, col:38> col:38 __timerid 'timer_t':'void *'
| `-NoThrowAttr 0x56324b3e2780 <col:65>
|-TypedefDecl 0x56324b3e27f0 <line:225:1, col:27> col:27 referenced pthread_t 'unsigned long'
| `-BuiltinType 0x56324b36cfd0 'unsigned long'
|-RecordDecl 0x56324b3e2848 <line:226:1, line:230:1> line:226:7 union pthread_attr_t definition
| |-FieldDecl 0x56324b3e2990 <line:228:3, col:17> col:8 __size 'char [56]'
| `-FieldDecl 0x56324b3e29f8 <line:229:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x56324b3e2aa8 <line:231:1, col:30> col:30 referenced pthread_attr_t 'union pthread_attr_t':'union pthread_attr_t'
| `-ElaboratedType 0x56324b3e2a50 'union pthread_attr_t' sugar
|   `-RecordType 0x56324b3e28d0 'union pthread_attr_t'
|     `-Record 0x56324b3e2848 'pthread_attr_t'
|-RecordDecl 0x56324b3e2b00 <line:232:9, line:236:1> line:232:16 struct __pthread_internal_list definition
| |-FieldDecl 0x56324b3e2c78 <line:234:3, col:35> col:35 __prev 'struct __pthread_internal_list *'
| `-FieldDecl 0x56324b3e2cf0 <line:235:3, col:35> col:35 __next 'struct __pthread_internal_list *'
|-TypedefDecl 0x56324b3e2da0 <line:232:1, line:236:3> col:3 referenced __pthread_list_t 'struct __pthread_internal_list':'struct __pthread_internal_list'
| `-ElaboratedType 0x56324b3e2d40 'struct __pthread_internal_list' sugar
|   `-RecordType 0x56324b3e2b80 'struct __pthread_internal_list'
|     `-Record 0x56324b3e2b00 '__pthread_internal_list'
|-RecordDecl 0x56324b3e2e10 <line:237:9, line:251:1> line:237:9 union definition
| |-RecordDecl 0x56324b3e2eb8 parent 0x56324b36ce18 <line:239:3, line:248:3> line:239:10 struct __pthread_mutex_s definition
| | |-FieldDecl 0x56324b3e2f90 <line:241:5, col:9> col:9 __lock 'int'
| | |-FieldDecl 0x56324b3e2ff8 <line:242:5, col:18> col:18 __count 'unsigned int'
| | |-FieldDecl 0x56324b3e3060 <line:243:5, col:9> col:9 __owner 'int'
| | |-FieldDecl 0x56324b3e7110 <line:244:5, col:18> col:18 __nusers 'unsigned int'
| | |-FieldDecl 0x56324b3e7178 <line:245:5, col:9> col:9 __kind 'int'
| | |-FieldDecl 0x56324b3e71e0 <line:246:5, col:9> col:9 __spins 'int'
| | `-FieldDecl 0x56324b3e7268 <line:247:5, col:22> col:22 __list '__pthread_list_t':'struct __pthread_internal_list'
| |-FieldDecl 0x56324b3e7320 <line:239:3, line:248:5> col:5 __data 'struct __pthread_mutex_s':'struct __pthread_mutex_s'
| |-FieldDecl 0x56324b3e7410 <line:249:3, col:17> col:8 __size 'char [40]'
| `-FieldDecl 0x56324b3e7478 <line:250:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x56324b3e7600 <line:237:1, line:251:3> col:3 referenced pthread_mutex_t 'union pthread_mutex_t':'pthread_mutex_t'
| `-ElaboratedType 0x56324b3e75a0 'union pthread_mutex_t' sugar
|   `-RecordType 0x56324b3e2e90 'pthread_mutex_t'
|     `-Record 0x56324b3e2e10 ''
|-RecordDecl 0x56324b3e7670 <line:252:9, line:256:1> line:252:9 union definition
| |-FieldDecl 0x56324b3e77b0 <line:254:3, col:16> col:8 __size 'char [4]'
| `-FieldDecl 0x56324b3e7818 <line:255:3, col:7> col:7 __align 'int'
|-TypedefDecl 0x56324b3e78d0 <line:252:1, line:256:3> col:3 referenced pthread_mutexattr_t 'union pthread_mutexattr_t':'pthread_mutexattr_t'
| `-ElaboratedType 0x56324b3e7870 'union pthread_mutexattr_t' sugar
|   `-RecordType 0x56324b3e76f0 'pthread_mutexattr_t'
|     `-Record 0x56324b3e7670 ''
|-RecordDecl 0x56324b3e7940 <line:257:9, line:272:1> line:257:9 union definition
| |-RecordDecl 0x56324b3e79e8 <line:259:3, line:269:3> line:259:3 struct definition
| | |-FieldDecl 0x56324b3e7ab0 <line:261:5, col:9> col:9 __lock 'int'
| | |-FieldDecl 0x56324b3e7b18 <line:262:5, col:18> col:18 __futex 'unsigned int'
| | |-FieldDecl 0x56324b3e7b80 <line:263:19, col:42> col:42 __total_seq 'unsigned long long'
| | |-FieldDecl 0x56324b3e7be8 <line:264:19, col:42> col:42 __wakeup_seq 'unsigned long long'
| | |-FieldDecl 0x56324b3e7c50 <line:265:19, col:42> col:42 __woken_seq 'unsigned long long'
| | |-FieldDecl 0x56324b3e7cb8 <line:266:5, col:11> col:11 __mutex 'void *'
| | |-FieldDecl 0x56324b3e7d20 <line:267:5, col:18> col:18 __nwaiters 'unsigned int'
| | `-FieldDecl 0x56324b3e7d88 <line:268:5, col:18> col:18 __broadcast_seq 'unsigned int'
| |-FieldDecl 0x56324b3e7e40 <line:259:3, line:269:5> col:5 __data 'struct (anonymous struct at ./split_2/safe028_rmo.oepc_false-unreach-call.i:259:3)':'struct pthread_cond_t::(anonymous at ./split_2/safe028_rmo.oepc_false-unreach-call.i:259:3)'
| |-FieldDecl 0x56324b3e7f30 <line:270:3, col:17> col:8 __size 'char [48]'
| `-FieldDecl 0x56324b3e7f98 <line:271:17, col:31> col:31 __align 'long long'
|-TypedefDecl 0x56324b3e9130 <line:257:1, line:272:3> col:3 referenced pthread_cond_t 'union pthread_cond_t':'pthread_cond_t'
| `-ElaboratedType 0x56324b3e8070 'union pthread_cond_t' sugar
|   `-RecordType 0x56324b3e79c0 'pthread_cond_t'
|     `-Record 0x56324b3e7940 ''
|-RecordDecl 0x56324b3e91a0 <line:273:9, line:277:1> line:273:9 union definition
| |-FieldDecl 0x56324b3e92a0 <line:275:3, col:16> col:8 __size 'char [4]'
| `-FieldDecl 0x56324b3e9308 <line:276:3, col:7> col:7 __align 'int'
|-TypedefDecl 0x56324b3e93c0 <line:273:1, line:277:3> col:3 referenced pthread_condattr_t 'union pthread_condattr_t':'pthread_condattr_t'
| `-ElaboratedType 0x56324b3e9360 'union pthread_condattr_t' sugar
|   `-RecordType 0x56324b3e9220 'pthread_condattr_t'
|     `-Record 0x56324b3e91a0 ''
|-TypedefDecl 0x56324b3e9448 <line:278:1, col:22> col:22 referenced pthread_key_t 'unsigned int'
| `-BuiltinType 0x56324b36cfb0 'unsigned int'
|-TypedefDecl 0x56324b3e94b8 <line:279:1, col:13> col:13 referenced pthread_once_t 'int'
| `-BuiltinType 0x56324b36cf10 'int'
|-RecordDecl 0x56324b3e9510 <line:280:9, line:298:1> line:280:9 union definition
| |-RecordDecl 0x56324b3e95b8 <line:282:3, line:295:3> line:282:3 struct definition
| | |-FieldDecl 0x56324b3e9680 <line:284:5, col:9> col:9 __lock 'int'
| | |-FieldDecl 0x56324b3e96e8 <line:285:5, col:18> col:18 __nr_readers 'unsigned int'
| | |-FieldDecl 0x56324b3e9750 <line:286:5, col:18> col:18 __readers_wakeup 'unsigned int'
| | |-FieldDecl 0x56324b3e97b8 <line:287:5, col:18> col:18 __writer_wakeup 'unsigned int'
| | |-FieldDecl 0x56324b3e9820 <line:288:5, col:18> col:18 __nr_readers_queued 'unsigned int'
| | |-FieldDecl 0x56324b3e9888 <line:289:5, col:18> col:18 __nr_writers_queued 'unsigned int'
| | |-FieldDecl 0x56324b3e98f0 <line:290:5, col:9> col:9 __writer 'int'
| | |-FieldDecl 0x56324b3e9958 <line:291:5, col:9> col:9 __shared 'int'
| | |-FieldDecl 0x56324b3e99c0 <line:292:5, col:23> col:23 __pad1 'unsigned long'
| | |-FieldDecl 0x56324b3e9a28 <line:293:5, col:23> col:23 __pad2 'unsigned long'
| | `-FieldDecl 0x56324b3e9a90 <line:294:5, col:18> col:18 __flags 'unsigned int'
| |-FieldDecl 0x56324b3e9b40 <line:282:3, line:295:5> col:5 __data 'struct (anonymous struct at ./split_2/safe028_rmo.oepc_false-unreach-call.i:282:3)':'struct pthread_rwlock_t::(anonymous at ./split_2/safe028_rmo.oepc_false-unreach-call.i:282:3)'
| |-FieldDecl 0x56324b3e9be8 <line:296:3, col:17> col:8 __size 'char [56]'
| `-FieldDecl 0x56324b3e9c50 <line:297:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x56324b3e9da0 <line:280:1, line:298:3> col:3 referenced pthread_rwlock_t 'union pthread_rwlock_t':'pthread_rwlock_t'
| `-ElaboratedType 0x56324b3e9d40 'union pthread_rwlock_t' sugar
|   `-RecordType 0x56324b3e9590 'pthread_rwlock_t'
|     `-Record 0x56324b3e9510 ''
|-RecordDecl 0x56324b3e9e10 <line:299:9, line:303:1> line:299:9 union definition
| |-FieldDecl 0x56324b3e9f50 <line:301:3, col:16> col:8 __size 'char [8]'
| `-FieldDecl 0x56324b3e9fb8 <line:302:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x56324b3ea070 <line:299:1, line:303:3> col:3 referenced pthread_rwlockattr_t 'union pthread_rwlockattr_t':'pthread_rwlockattr_t'
| `-ElaboratedType 0x56324b3ea010 'union pthread_rwlockattr_t' sugar
|   `-RecordType 0x56324b3e9e90 'pthread_rwlockattr_t'
|     `-Record 0x56324b3e9e10 ''
|-TypedefDecl 0x56324b3eb140 <line:304:1, col:22> col:22 referenced pthread_spinlock_t 'volatile int'
| `-QualType 0x56324b36cf14 'volatile int' volatile
|   `-BuiltinType 0x56324b36cf10 'int'
|-RecordDecl 0x56324b3eb198 <line:305:9, line:309:1> line:305:9 union definition
| |-FieldDecl 0x56324b3eb2e0 <line:307:3, col:17> col:8 __size 'char [32]'
| `-FieldDecl 0x56324b3eb348 <line:308:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x56324b3eb400 <line:305:1, line:309:3> col:3 referenced pthread_barrier_t 'union pthread_barrier_t':'pthread_barrier_t'
| `-ElaboratedType 0x56324b3eb3a0 'union pthread_barrier_t' sugar
|   `-RecordType 0x56324b3eb220 'pthread_barrier_t'
|     `-Record 0x56324b3eb198 ''
|-RecordDecl 0x56324b3eb470 <line:310:9, line:314:1> line:310:9 union definition
| |-FieldDecl 0x56324b3eb570 <line:312:3, col:16> col:8 __size 'char [4]'
| `-FieldDecl 0x56324b3eb5d8 <line:313:3, col:7> col:7 __align 'int'
|-TypedefDecl 0x56324b3eb690 <line:310:1, line:314:3> col:3 referenced pthread_barrierattr_t 'union pthread_barrierattr_t':'pthread_barrierattr_t'
| `-ElaboratedType 0x56324b3eb630 'union pthread_barrierattr_t' sugar
|   `-RecordType 0x56324b3eb4f0 'pthread_barrierattr_t'
|     `-Record 0x56324b3eb470 ''
|-TypedefDecl 0x56324b3eb7a8 <line:315:1, col:29> col:18 referenced __jmp_buf 'long [8]'
| `-ConstantArrayType 0x56324b3eb740 'long [8]' 8 
|   `-BuiltinType 0x56324b36cf30 'long'
|-EnumDecl 0x56324b3eb800 <line:316:1, line:320:1> line:316:1
| |-EnumConstantDecl 0x56324b3eb8c8 <line:318:3> col:3 PTHREAD_CREATE_JOINABLE 'int'
| `-EnumConstantDecl 0x56324b3eb918 <line:319:3> col:3 PTHREAD_CREATE_DETACHED 'int'
|-EnumDecl 0x56324b3eb968 <line:321:1, line:332:1> line:321:1
| |-EnumConstantDecl 0x56324b3eba38 <line:323:3> col:3 referenced PTHREAD_MUTEX_TIMED_NP 'int'
| |-EnumConstantDecl 0x56324b3eba88 <line:324:3> col:3 referenced PTHREAD_MUTEX_RECURSIVE_NP 'int'
| |-EnumConstantDecl 0x56324b3ebad8 <line:325:3> col:3 referenced PTHREAD_MUTEX_ERRORCHECK_NP 'int'
| |-EnumConstantDecl 0x56324b3ebb28 <line:326:3> col:3 PTHREAD_MUTEX_ADAPTIVE_NP 'int'
| |-EnumConstantDecl 0x56324b3ebbb0 <line:328:3, col:26> col:3 referenced PTHREAD_MUTEX_NORMAL 'int'
| | `-ConstantExpr 0x56324b3ebb98 <col:26> 'int'
| |   `-DeclRefExpr 0x56324b3ebb78 <col:26> 'int' EnumConstant 0x56324b3eba38 'PTHREAD_MUTEX_TIMED_NP' 'int'
| |-EnumConstantDecl 0x56324b3ebc38 <line:329:3, col:29> col:3 PTHREAD_MUTEX_RECURSIVE 'int'
| | `-ConstantExpr 0x56324b3ebc20 <col:29> 'int'
| |   `-DeclRefExpr 0x56324b3ebc00 <col:29> 'int' EnumConstant 0x56324b3eba88 'PTHREAD_MUTEX_RECURSIVE_NP' 'int'
| |-EnumConstantDecl 0x56324b3ebcc0 <line:330:3, col:30> col:3 PTHREAD_MUTEX_ERRORCHECK 'int'
| | `-ConstantExpr 0x56324b3ebca8 <col:30> 'int'
| |   `-DeclRefExpr 0x56324b3ebc88 <col:30> 'int' EnumConstant 0x56324b3ebad8 'PTHREAD_MUTEX_ERRORCHECK_NP' 'int'
| `-EnumConstantDecl 0x56324b3ebd48 <line:331:3, col:27> col:3 PTHREAD_MUTEX_DEFAULT 'int'
|   `-ConstantExpr 0x56324b3ebd30 <col:27> 'int'
|     `-DeclRefExpr 0x56324b3ebd10 <col:27> 'int' EnumConstant 0x56324b3ebbb0 'PTHREAD_MUTEX_NORMAL' 'int'
|-EnumDecl 0x56324b3ebd98 <line:333:1, line:339:1> line:333:1
| |-EnumConstantDecl 0x56324b3ebe68 <line:335:3> col:3 referenced PTHREAD_MUTEX_STALLED 'int'
| |-EnumConstantDecl 0x56324b3ebef0 <line:336:3, col:30> col:3 PTHREAD_MUTEX_STALLED_NP 'int'
| | `-ConstantExpr 0x56324b3ebed8 <col:30> 'int'
| |   `-DeclRefExpr 0x56324b3ebeb8 <col:30> 'int' EnumConstant 0x56324b3ebe68 'PTHREAD_MUTEX_STALLED' 'int'
| |-EnumConstantDecl 0x56324b3ebf40 <line:337:3> col:3 referenced PTHREAD_MUTEX_ROBUST 'int'
| `-EnumConstantDecl 0x56324b3ebfc8 <line:338:3, col:29> col:3 PTHREAD_MUTEX_ROBUST_NP 'int'
|   `-ConstantExpr 0x56324b3ebfb0 <col:29> 'int'
|     `-DeclRefExpr 0x56324b3ebf90 <col:29> 'int' EnumConstant 0x56324b3ebf40 'PTHREAD_MUTEX_ROBUST' 'int'
|-EnumDecl 0x56324b3ec018 <line:340:1, line:345:1> line:340:1
| |-EnumConstantDecl 0x56324b3ec0e8 <line:342:3> col:3 PTHREAD_PRIO_NONE 'int'
| |-EnumConstantDecl 0x56324b3ec150 <line:343:3> col:3 PTHREAD_PRIO_INHERIT 'int'
| `-EnumConstantDecl 0x56324b3ec1a0 <line:344:3> col:3 PTHREAD_PRIO_PROTECT 'int'
|-EnumDecl 0x56324b3ec1f0 <line:346:1, line:352:1> line:346:1
| |-EnumConstantDecl 0x56324b3ec2b8 <line:348:3> col:3 referenced PTHREAD_RWLOCK_PREFER_READER_NP 'int'
| |-EnumConstantDecl 0x56324b3ec308 <line:349:3> col:3 PTHREAD_RWLOCK_PREFER_WRITER_NP 'int'
| |-EnumConstantDecl 0x56324b3ec358 <line:350:3> col:3 PTHREAD_RWLOCK_PREFER_WRITER_NONRECURSIVE_NP 'int'
| `-EnumConstantDecl 0x56324b3ec3e0 <line:351:3, col:31> col:3 PTHREAD_RWLOCK_DEFAULT_NP 'int'
|   `-ConstantExpr 0x56324b3ec3c8 <col:31> 'int'
|     `-DeclRefExpr 0x56324b3ec3a8 <col:31> 'int' EnumConstant 0x56324b3ec2b8 'PTHREAD_RWLOCK_PREFER_READER_NP' 'int'
|-EnumDecl 0x56324b3ec430 <line:353:1, line:357:1> line:353:1
| |-EnumConstantDecl 0x56324b3ec4f8 <line:355:3> col:3 PTHREAD_INHERIT_SCHED 'int'
| `-EnumConstantDecl 0x56324b3ec548 <line:356:3> col:3 PTHREAD_EXPLICIT_SCHED 'int'
|-EnumDecl 0x56324b3ec598 <line:358:1, line:362:1> line:358:1
| |-EnumConstantDecl 0x56324b3ec668 <line:360:3> col:3 PTHREAD_SCOPE_SYSTEM 'int'
| `-EnumConstantDecl 0x56324b3ec6b8 <line:361:3> col:3 PTHREAD_SCOPE_PROCESS 'int'
|-EnumDecl 0x56324b3ec708 <line:363:1, line:367:1> line:363:1
| |-EnumConstantDecl 0x56324b3ec7d8 <line:365:3> col:3 PTHREAD_PROCESS_PRIVATE 'int'
| `-EnumConstantDecl 0x56324b3ec828 <line:366:3> col:3 PTHREAD_PROCESS_SHARED 'int'
|-RecordDecl 0x56324b3ec878 <line:368:1, line:374:1> line:368:8 struct _pthread_cleanup_buffer definition
| |-FieldDecl 0x56324b3ecab8 <line:370:3, col:28> col:10 __routine 'void (*)(void *)'
| |-FieldDecl 0x56324b3ecb20 <line:371:3, col:9> col:9 __arg 'void *'
| |-FieldDecl 0x56324b3ecb88 <line:372:3, col:7> col:7 __canceltype 'int'
| `-FieldDecl 0x56324b3ecca8 <line:373:3, col:35> col:35 __prev 'struct _pthread_cleanup_buffer *'
|-EnumDecl 0x56324b3eccf8 <line:375:1, line:379:1> line:375:1
| |-EnumConstantDecl 0x56324b3ecdc8 <line:377:3> col:3 PTHREAD_CANCEL_ENABLE 'int'
| `-EnumConstantDecl 0x56324b3ece18 <line:378:3> col:3 PTHREAD_CANCEL_DISABLE 'int'
|-EnumDecl 0x56324b3ece68 <line:380:1, line:384:1> line:380:1
| |-EnumConstantDecl 0x56324b3ecf38 <line:382:3> col:3 PTHREAD_CANCEL_DEFERRED 'int'
| `-EnumConstantDecl 0x56324b3ecf88 <line:383:3> col:3 PTHREAD_CANCEL_ASYNCHRONOUS 'int'
|-FunctionDecl 0x56324b3ed5b8 <line:386:1, line:389:96> line:386:12 used pthread_create 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' extern
| |-ParmVarDecl 0x56324b3ed080 <col:28, col:50> col:50 __newthread 'pthread_t *restrict'
| |-ParmVarDecl 0x56324b3ed1a0 <line:387:7, col:40> col:40 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x56324b3ed3a0 <line:388:7, col:39> col:15 __start_routine 'void *(*)(void *)'
| |-ParmVarDecl 0x56324b3ed420 <line:389:7, col:24> col:24 __arg 'void *restrict'
| |-NoThrowAttr 0x56324b3ed678 <col:47>
| |-NonNullAttr 0x56324b3ed6d0 <col:77, col:94> 1 3
| `-CallbackAttr 0x56324b3ed708 <line:386:12> Implicit 2 3
|-FunctionDecl 0x56324b3ed830 <line:390:1, col:72> col:13 pthread_exit 'void (void *) __attribute__((noreturn))' extern
| `-ParmVarDecl 0x56324b3ed760 <col:27, col:33> col:33 __retval 'void *'
|-FunctionDecl 0x56324b3eda88 <line:391:1, col:64> col:12 pthread_join 'int (pthread_t, void **)' extern
| |-ParmVarDecl 0x56324b3ed8e8 <col:26, col:36> col:36 __th 'pthread_t':'unsigned long'
| `-ParmVarDecl 0x56324b3ed968 <col:42, col:49> col:49 __thread_return 'void **'
|-FunctionDecl 0x56324b3edc58 <line:392:1, col:83> col:12 pthread_detach 'int (pthread_t)' extern
| |-ParmVarDecl 0x56324b3edb48 <col:28, col:38> col:38 __th 'pthread_t':'unsigned long'
| `-NoThrowAttr 0x56324b3edd00 <col:60>
|-FunctionDecl 0x56324b3ede50 <line:393:1, col:105> col:18 pthread_self 'pthread_t (void)' extern
| |-NoThrowAttr 0x56324b3edef0 <col:54>
| `-ConstAttr 0x56324b3edf48 <col:95>
|-FunctionDecl 0x56324b3ef990 <line:394:1, line:395:70> line:394:12 pthread_equal 'int (pthread_t, pthread_t)' extern
| |-ParmVarDecl 0x56324b3edf80 <col:27, col:37> col:37 __thread1 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x56324b3edff8 <col:48, col:58> col:58 __thread2 'pthread_t':'unsigned long'
| |-NoThrowAttr 0x56324b3efa40 <line:395:19>
| `-ConstAttr 0x56324b3efa98 <col:60>
|-FunctionDecl 0x56324b3efc68 <line:396:1, col:128> col:12 pthread_attr_init 'int (pthread_attr_t *)' extern
| |-ParmVarDecl 0x56324b3efb30 <col:31, col:47> col:47 __attr 'pthread_attr_t *'
| |-NoThrowAttr 0x56324b3efd10 <col:71>
| `-NonNullAttr 0x56324b3efd68 <col:112, col:126> 1
|-FunctionDecl 0x56324b3efe70 <line:397:1, line:398:79> line:397:12 pthread_attr_destroy 'int (pthread_attr_t *)' extern
| |-ParmVarDecl 0x56324b3efdb8 <col:34, col:50> col:50 __attr 'pthread_attr_t *'
| |-NoThrowAttr 0x56324b3eff18 <line:398:22>
| `-NonNullAttr 0x56324b3eff70 <col:63, col:77> 1
|-FunctionDecl 0x56324b3f0198 <line:399:1, line:401:82> line:399:12 pthread_attr_getdetachstate 'int (const pthread_attr_t *, int *)' extern
| |-ParmVarDecl 0x56324b3effb8 <col:41, col:63> col:63 __attr 'const pthread_attr_t *'
| |-ParmVarDecl 0x56324b3f0038 <line:400:6, col:11> col:11 __detachstate 'int *'
| |-NoThrowAttr 0x56324b3f0248 <line:401:22>
| `-NonNullAttr 0x56324b3f02a0 <col:63, col:80> 1 2
|-FunctionDecl 0x56324b3f04a8 <line:402:1, line:404:79> line:402:12 pthread_attr_setdetachstate 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x56324b3f02e8 <col:41, col:57> col:57 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x56324b3f0368 <line:403:6, col:10> col:10 __detachstate 'int'
| |-NoThrowAttr 0x56324b3f0558 <line:404:22>
| `-NonNullAttr 0x56324b3f05b0 <col:63, col:77> 1
|-FunctionDecl 0x56324b3f0808 <line:405:1, line:407:82> line:405:12 pthread_attr_getguardsize 'int (const pthread_attr_t *, size_t *)' extern
| |-ParmVarDecl 0x56324b3f05f8 <col:39, col:61> col:61 __attr 'const pthread_attr_t *'
| |-ParmVarDecl 0x56324b3f06a0 <line:406:11, col:19> col:19 __guardsize 'size_t *'
| |-NoThrowAttr 0x56324b3f08b8 <line:407:22>
| `-NonNullAttr 0x56324b3f0910 <col:63, col:80> 1 2
|-FunctionDecl 0x56324b3f1b68 <line:408:1, line:410:79> line:408:12 pthread_attr_setguardsize 'int (pthread_attr_t *, size_t)' extern
| |-ParmVarDecl 0x56324b3f19b0 <col:39, col:55> col:55 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x56324b3f1a28 <line:409:11, col:18> col:18 __guardsize 'size_t':'unsigned long'
| |-NoThrowAttr 0x56324b3f1c18 <line:410:22>
| `-NonNullAttr 0x56324b3f1c70 <col:63, col:77> 1
|-FunctionDecl 0x56324b3f1ea8 <line:411:1, line:413:82> line:411:12 pthread_attr_getschedparam 'int (const pthread_attr_t *restrict, struct sched_param *restrict)' extern
| |-ParmVarDecl 0x56324b3f1cb8 <col:40, col:73> col:73 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x56324b3f1d48 <line:412:12, col:43> col:43 __param 'struct sched_param *restrict'
| |-NoThrowAttr 0x56324b3f1f58 <line:413:22>
| `-NonNullAttr 0x56324b3f1fb0 <col:63, col:80> 1 2
|-FunctionDecl 0x56324b3f21e8 <line:414:1, line:416:97> line:414:12 pthread_attr_setschedparam 'int (pthread_attr_t *restrict, const struct sched_param *restrict)' extern
| |-ParmVarDecl 0x56324b3f1ff8 <col:40, col:67> col:67 __attr 'pthread_attr_t *restrict'
| |-ParmVarDecl 0x56324b3f2088 <line:415:12, line:416:12> col:12 __param 'const struct sched_param *restrict'
| |-NoThrowAttr 0x56324b3f2298 <col:37>
| `-NonNullAttr 0x56324b3f22f0 <col:78, col:95> 1 2
|-FunctionDecl 0x56324b3f24d8 <line:417:1, line:419:82> line:417:12 pthread_attr_getschedpolicy 'int (const pthread_attr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x56324b3f2338 <col:41, line:418:6> col:6 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x56324b3f23b8 <col:14, col:30> col:30 __policy 'int *restrict'
| |-NoThrowAttr 0x56324b3f2588 <line:419:22>
| `-NonNullAttr 0x56324b3f25e0 <col:63, col:80> 1 2
|-FunctionDecl 0x56324b3f2768 <line:420:1, line:421:79> line:420:12 pthread_attr_setschedpolicy 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x56324b3f2628 <col:41, col:57> col:57 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x56324b3f26a8 <col:65, col:69> col:69 __policy 'int'
| |-NoThrowAttr 0x56324b3f2818 <line:421:22>
| `-NonNullAttr 0x56324b3f2870 <col:63, col:77> 1
|-FunctionDecl 0x56324b3f2a38 <line:422:1, line:424:82> line:422:12 pthread_attr_getinheritsched 'int (const pthread_attr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x56324b3f28b8 <col:42, line:423:7> col:7 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x56324b3f2938 <col:15, col:31> col:31 __inherit 'int *restrict'
| |-NoThrowAttr 0x56324b3f2ae8 <line:424:22>
| `-NonNullAttr 0x56324b3f2b40 <col:63, col:80> 1 2
|-FunctionDecl 0x56324b3f2cc8 <line:425:1, line:427:79> line:425:12 pthread_attr_setinheritsched 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x56324b3f2b88 <col:42, col:58> col:58 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x56324b3f2c08 <line:426:7, col:11> col:11 __inherit 'int'
| |-NoThrowAttr 0x56324b3f2d78 <line:427:22>
| `-NonNullAttr 0x56324b3f2dd0 <col:63, col:77> 1
|-FunctionDecl 0x56324b3f2f78 <line:428:1, line:430:82> line:428:12 pthread_attr_getscope 'int (const pthread_attr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x56324b3f2e18 <col:35, col:68> col:68 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x56324b3f2e98 <line:429:7, col:23> col:23 __scope 'int *restrict'
| |-NoThrowAttr 0x56324b3f3028 <line:430:22>
| `-NonNullAttr 0x56324b3f3080 <col:63, col:80> 1 2
|-FunctionDecl 0x56324b3f3208 <line:431:1, line:432:79> line:431:12 pthread_attr_setscope 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x56324b3f30c8 <col:35, col:51> col:51 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x56324b3f3148 <col:59, col:63> col:63 __scope 'int'
| |-NoThrowAttr 0x56324b3f32b8 <line:432:22>
| `-NonNullAttr 0x56324b3f3310 <col:63, col:77> 1
|-FunctionDecl 0x56324b3f3538 <line:433:1, line:435:115> line:433:12 pthread_attr_getstackaddr 'int (const pthread_attr_t *restrict, void **restrict)' extern
| |-ParmVarDecl 0x56324b3f3358 <col:39, line:434:11> col:11 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x56324b3f33d8 <col:19, col:37> col:37 __stackaddr 'void **restrict'
| |-NoThrowAttr 0x56324b3f35e8 <line:435:22>
| |-NonNullAttr 0x56324b3f3640 <col:63, col:80> 1 2
| `-DeprecatedAttr 0x56324b3f3678 <col:100> "" ""
|-FunctionDecl 0x56324b3f3888 <line:436:1, line:438:112> line:436:12 pthread_attr_setstackaddr 'int (pthread_attr_t *, void *)' extern
| |-ParmVarDecl 0x56324b3f36c8 <col:39, col:55> col:55 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x56324b3f3748 <line:437:11, col:17> col:17 __stackaddr 'void *'
| |-NoThrowAttr 0x56324b3f3938 <line:438:22>
| |-NonNullAttr 0x56324b3f3990 <col:63, col:77> 1
| `-DeprecatedAttr 0x56324b3f39d8 <col:97> "" ""
|-FunctionDecl 0x56324b3f3bc8 <line:439:1, line:441:82> line:439:12 pthread_attr_getstacksize 'int (const pthread_attr_t *restrict, size_t *restrict)' extern
| |-ParmVarDecl 0x56324b3f3a28 <col:39, line:440:11> col:11 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x56324b3f3aa0 <col:19, col:38> col:38 __stacksize 'size_t *restrict'
| |-NoThrowAttr 0x56324b3f3c78 <line:441:22>
| `-NonNullAttr 0x56324b3f3cd0 <col:63, col:80> 1 2
|-FunctionDecl 0x56324b3f3e50 <line:442:1, line:444:79> line:442:12 pthread_attr_setstacksize 'int (pthread_attr_t *, size_t)' extern
| |-ParmVarDecl 0x56324b3f3d18 <col:39, col:55> col:55 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x56324b3f3d90 <line:443:11, col:18> col:18 __stacksize 'size_t':'unsigned long'
| |-NoThrowAttr 0x56324b3f3f00 <line:444:22>
| `-NonNullAttr 0x56324b3f3f58 <col:63, col:77> 1
|-FunctionDecl 0x56324b3f4248 <line:445:1, line:448:85> line:445:12 pthread_attr_getstack 'int (const pthread_attr_t *restrict, void **restrict, size_t *restrict)' extern
| |-ParmVarDecl 0x56324b3f3fa8 <col:35, col:68> col:68 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x56324b3f4028 <line:446:7, col:25> col:25 __stackaddr 'void **restrict'
| |-ParmVarDecl 0x56324b3f40a0 <line:447:7, col:26> col:26 __stacksize 'size_t *restrict'
| |-NoThrowAttr 0x56324b3f4300 <line:448:22>
| `-NonNullAttr 0x56324b3f4358 <col:63, col:83> 1 2 3
|-FunctionDecl 0x56324b3f4608 <line:449:1, line:450:100> line:449:12 pthread_attr_setstack 'int (pthread_attr_t *, void *, size_t)' extern
| |-ParmVarDecl 0x56324b3f43b0 <col:35, col:51> col:51 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x56324b3f4430 <col:59, col:65> col:65 __stackaddr 'void *'
| |-ParmVarDecl 0x56324b3f44a8 <line:450:7, col:14> col:14 __stacksize 'size_t':'unsigned long'
| |-NoThrowAttr 0x56324b3f46c0 <col:43>
| `-NonNullAttr 0x56324b3f4718 <col:84, col:98> 1
|-FunctionDecl 0x56324b3f4a20 <line:451:1, line:453:79> line:451:12 pthread_setschedparam 'int (pthread_t, int, const struct sched_param *)' extern
| |-ParmVarDecl 0x56324b3f4768 <col:35, col:45> col:45 __target_thread 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x56324b3f47e8 <col:62, col:66> col:66 __policy 'int'
| |-ParmVarDecl 0x56324b3f4878 <line:452:7, col:33> col:33 __param 'const struct sched_param *'
| |-NoThrowAttr 0x56324b3f4ad8 <line:453:22>
| `-NonNullAttr 0x56324b3f4b30 <col:63, col:77> 3
|-FunctionDecl 0x56324b3f4e08 <line:454:1, line:457:82> line:454:12 pthread_getschedparam 'int (pthread_t, int *restrict, struct sched_param *restrict)' extern
| |-ParmVarDecl 0x56324b3f4b78 <col:35, col:45> col:45 __target_thread 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x56324b3f4bf8 <line:455:7, col:23> col:23 __policy 'int *restrict'
| |-ParmVarDecl 0x56324b3f4c88 <line:456:7, col:38> col:38 __param 'struct sched_param *restrict'
| |-NoThrowAttr 0x56324b3f4ec0 <line:457:22>
| `-NonNullAttr 0x56324b3f4f18 <col:63, col:80> 2 3
|-FunctionDecl 0x56324b3f5108 <line:458:1, line:459:45> line:458:12 pthread_setschedprio 'int (pthread_t, int)' extern
| |-ParmVarDecl 0x56324b3f4f68 <col:34, col:44> col:44 __target_thread 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x56324b3f4fe8 <col:61, col:65> col:65 __prio 'int'
| `-NoThrowAttr 0x56324b3f51b8 <line:459:22>
|-FunctionDecl 0x56324b3f5588 <line:460:1, line:461:71> line:460:12 pthread_once 'int (pthread_once_t *, void (*)(void))' extern
| |-ParmVarDecl 0x56324b3f5280 <col:26, col:42> col:42 __once_control 'pthread_once_t *'
| |-ParmVarDecl 0x56324b3f5420 <line:461:5, col:33> col:12 __init_routine 'void (*)(void)'
| `-NonNullAttr 0x56324b3f5638 <col:52, col:69> 1 2
|-FunctionDecl 0x56324b3f57e0 <line:462:1, col:64> col:12 pthread_setcancelstate 'int (int, int *)' extern
| |-ParmVarDecl 0x56324b3f56c0 <col:36, col:40> col:40 __state 'int'
| `-ParmVarDecl 0x56324b3f5740 <col:49, col:54> col:54 __oldstate 'int *'
|-FunctionDecl 0x56324b3f59f0 <line:463:1, col:61> col:12 pthread_setcanceltype 'int (int, int *)' extern
| |-ParmVarDecl 0x56324b3f58a8 <col:35, col:39> col:39 __type 'int'
| `-ParmVarDecl 0x56324b3f5928 <col:47, col:52> col:52 __oldtype 'int *'
|-FunctionDecl 0x56324b3f5b48 <line:464:1, col:42> col:12 pthread_cancel 'int (pthread_t)' extern
| `-ParmVarDecl 0x56324b3f5ab0 <col:28, col:38> col:38 __th 'pthread_t':'unsigned long'
|-FunctionDecl 0x56324b3f5c88 <line:465:1, col:37> col:13 pthread_testcancel 'void (void)' extern
|-RecordDecl 0x56324b3f5d28 <line:466:9, line:474:1> line:466:9 struct definition
| |-RecordDecl 0x56324b3f5dd8 <line:468:3, line:472:3> line:468:3 struct definition
| | |-FieldDecl 0x56324b3f5ec8 <line:470:5, col:15> col:15 __cancel_jmp_buf '__jmp_buf':'long [8]'
| | `-FieldDecl 0x56324b3f5f30 <line:471:5, col:9> col:9 __mask_was_saved 'int'
| |-FieldDecl 0x56324b3f6100 <line:468:3, line:472:23> col:5 __cancel_jmp_buf 'struct (anonymous struct at ./split_2/safe028_rmo.oepc_false-unreach-call.i:468:3) [1]'
| `-FieldDecl 0x56324b3f61f8 <line:473:3, col:16> col:9 __pad 'void *[4]'
|-TypedefDecl 0x56324b3f62b0 <line:466:1, line:474:3> col:3 referenced __pthread_unwind_buf_t 'struct __pthread_unwind_buf_t':'__pthread_unwind_buf_t'
| |-ElaboratedType 0x56324b3f6250 'struct __pthread_unwind_buf_t' sugar
| | `-RecordType 0x56324b3f5db0 '__pthread_unwind_buf_t'
| |   `-Record 0x56324b3f5d28 ''
| `-AlignedAttr 0x56324b3f6308 <col:42> aligned
|   `-<<<NULL>>>
|-RecordDecl 0x56324b3f6380 <line:475:1, line:481:1> line:475:8 struct __pthread_cleanup_frame definition
| |-FieldDecl 0x56324b3f64e0 <line:477:3, col:35> col:10 __cancel_routine 'void (*)(void *)'
| |-FieldDecl 0x56324b3f6548 <line:478:3, col:9> col:9 __cancel_arg 'void *'
| |-FieldDecl 0x56324b3f65b0 <line:479:3, col:7> col:7 __do_it 'int'
| `-FieldDecl 0x56324b3f6618 <line:480:3, col:7> col:7 __cancel_type 'int'
|-FunctionDecl 0x56324b3f6820 <line:482:1, col:69> col:13 __pthread_register_cancel 'void (__pthread_unwind_buf_t *)' extern
| `-ParmVarDecl 0x56324b3f6710 <col:40, col:64> col:64 __buf '__pthread_unwind_buf_t *'
|-FunctionDecl 0x56324b3f6a00 <line:484:1, col:71> col:13 __pthread_unregister_cancel 'void (__pthread_unwind_buf_t *)' extern
| `-ParmVarDecl 0x56324b3f68d8 <col:42, col:66> col:66 __buf '__pthread_unwind_buf_t *'
|-FunctionDecl 0x56324b3f6bc0 <line:486:1, line:488:31> line:486:13 __pthread_unwind_next 'void (__pthread_unwind_buf_t *) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x56324b3f6ab8 <col:36, col:60> col:60 __buf '__pthread_unwind_buf_t *'
| `-WeakAttr 0x56324b3f6c68 <line:488:22>
|-RecordDecl 0x56324b3f6cc0 <line:490:1, col:8> col:8 struct __jmp_buf_tag
|-FunctionDecl 0x56324b3f6fd8 <line:491:1, col:98> col:12 __sigsetjmp 'int (struct __jmp_buf_tag *, int)' extern
| |-ParmVarDecl 0x56324b3f6e38 <col:25, col:47> col:47 __env 'struct __jmp_buf_tag *'
| |-ParmVarDecl 0x56324b3f6eb8 <col:54, col:58> col:58 __savemask 'int'
| |-NoThrowAttr 0x56324b3f7088 <col:86>
| `-ReturnsTwiceAttr 0x56324b3f70e0 <col:12> Implicit
|-FunctionDecl 0x56324b3f7408 <line:492:1, line:494:79> line:492:12 pthread_mutex_init 'int (pthread_mutex_t *, const pthread_mutexattr_t *)' extern
| |-ParmVarDecl 0x56324b3f71b0 <col:32, col:49> col:49 __mutex 'pthread_mutex_t *'
| |-ParmVarDecl 0x56324b3f72c0 <line:493:11, col:38> col:38 __mutexattr 'const pthread_mutexattr_t *'
| |-NoThrowAttr 0x56324b3f74b8 <line:494:22>
| `-NonNullAttr 0x56324b3f7510 <col:63, col:77> 1
|-FunctionDecl 0x56324b3f7688 <line:495:1, line:496:79> line:495:12 pthread_mutex_destroy 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x56324b3f7558 <col:35, col:52> col:52 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x56324b3f7730 <line:496:22>
| `-NonNullAttr 0x56324b3f7788 <col:63, col:77> 1
|-FunctionDecl 0x56324b3f7890 <line:497:1, line:498:68> line:497:12 pthread_mutex_trylock 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x56324b3f77d8 <col:35, col:52> col:52 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x56324b3f7938 <line:498:22>
| `-NonNullAttr 0x56324b3f7990 <col:52, col:66> 1
|-FunctionDecl 0x56324b3f8ad8 <line:499:1, line:500:68> line:499:12 pthread_mutex_lock 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x56324b3f8a20 <col:32, col:49> col:49 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x56324b3f8b80 <line:500:22>
| `-NonNullAttr 0x56324b3f8bd8 <col:52, col:66> 1
|-FunctionDecl 0x56324b3f8e18 <line:501:1, line:503:85> line:501:12 pthread_mutex_timedlock 'int (pthread_mutex_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x56324b3f8c28 <col:37, col:65> col:65 __mutex 'pthread_mutex_t *restrict'
| |-ParmVarDecl 0x56324b3f8cb8 <line:502:9, line:503:9> col:9 __abstime 'const struct timespec *restrict'
| |-NoThrowAttr 0x56324b3f8ec8 <col:36>
| `-NonNullAttr 0x56324b3f8f20 <col:66, col:83> 1 2
|-FunctionDecl 0x56324b3f9020 <line:504:1, line:505:68> line:504:12 pthread_mutex_unlock 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x56324b3f8f68 <col:34, col:51> col:51 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x56324b3f90c8 <line:505:22>
| `-NonNullAttr 0x56324b3f9120 <col:52, col:66> 1
|-FunctionDecl 0x56324b3f93b8 <line:506:1, line:509:82> line:506:12 pthread_mutex_getprioceiling 'int (const pthread_mutex_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x56324b3f91d0 <col:42, line:507:18> col:18 __mutex 'const pthread_mutex_t *restrict'
| |-ParmVarDecl 0x56324b3f9250 <line:508:7, col:23> col:23 __prioceiling 'int *restrict'
| |-NoThrowAttr 0x56324b3f9468 <line:509:22>
| `-NonNullAttr 0x56324b3f94c0 <col:63, col:80> 1 2
|-FunctionDecl 0x56324b3f9788 <line:510:1, line:513:82> line:510:12 pthread_mutex_setprioceiling 'int (pthread_mutex_t *restrict, int, int *restrict)' extern
| |-ParmVarDecl 0x56324b3f9508 <col:42, col:70> col:70 __mutex 'pthread_mutex_t *restrict'
| |-ParmVarDecl 0x56324b3f9588 <line:511:7, col:11> col:11 __prioceiling 'int'
| |-ParmVarDecl 0x56324b3f9608 <line:512:7, col:23> col:23 __old_ceiling 'int *restrict'
| |-NoThrowAttr 0x56324b3f9840 <line:513:22>
| `-NonNullAttr 0x56324b3f9898 <col:63, col:80> 1 3
|-FunctionDecl 0x56324b3f9a30 <line:514:1, line:515:79> line:514:12 pthread_mutex_consistent 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x56324b3f98e8 <col:38, col:55> col:55 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x56324b3f9ad8 <line:515:22>
| `-NonNullAttr 0x56324b3f9b30 <col:63, col:77> 1
|-FunctionDecl 0x56324b3f9d18 <line:516:1, line:517:79> line:516:12 pthread_mutexattr_init 'int (pthread_mutexattr_t *)' extern
| |-ParmVarDecl 0x56324b3f9be0 <col:36, col:57> col:57 __attr 'pthread_mutexattr_t *'
| |-NoThrowAttr 0x56324b3f9dc0 <line:517:22>
| `-NonNullAttr 0x56324b3f9e18 <col:63, col:77> 1
|-FunctionDecl 0x56324b3f9f20 <line:518:1, line:519:79> line:518:12 pthread_mutexattr_destroy 'int (pthread_mutexattr_t *)' extern
| |-ParmVarDecl 0x56324b3f9e68 <col:39, col:60> col:60 __attr 'pthread_mutexattr_t *'
| |-NoThrowAttr 0x56324b3f9fc8 <line:519:22>
| `-NonNullAttr 0x56324b3fa020 <col:63, col:77> 1
|-FunctionDecl 0x56324b3fa248 <line:520:1, line:523:82> line:520:12 pthread_mutexattr_getpshared 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x56324b3fa068 <col:42, line:521:18> col:18 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x56324b3fa0e8 <line:522:7, col:23> col:23 __pshared 'int *restrict'
| |-NoThrowAttr 0x56324b3fa2f8 <line:523:22>
| `-NonNullAttr 0x56324b3fa350 <col:63, col:80> 1 2
|-FunctionDecl 0x56324b3fa558 <line:524:1, line:526:79> line:524:12 pthread_mutexattr_setpshared 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x56324b3fa398 <col:42, col:63> col:63 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x56324b3fa418 <line:525:7, col:11> col:11 __pshared 'int'
| |-NoThrowAttr 0x56324b3fa608 <line:526:22>
| `-NonNullAttr 0x56324b3fa660 <col:63, col:77> 1
|-FunctionDecl 0x56324b3fa808 <line:527:1, line:529:82> line:527:12 pthread_mutexattr_gettype 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x56324b3fa6a8 <col:39, line:528:11> col:11 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x56324b3fa728 <col:19, col:35> col:35 __kind 'int *restrict'
| |-NoThrowAttr 0x56324b3fa8b8 <line:529:22>
| `-NonNullAttr 0x56324b3fa910 <col:63, col:80> 1 2
|-FunctionDecl 0x56324b3fab00 <line:530:1, line:531:79> line:530:12 pthread_mutexattr_settype 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x56324b3fa958 <col:39, col:60> col:60 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x56324b3faa40 <col:68, col:72> col:72 __kind 'int'
| |-NoThrowAttr 0x56324b3fabb0 <line:531:22>
| `-NonNullAttr 0x56324b3fac08 <col:63, col:77> 1
|-FunctionDecl 0x56324b3fadb8 <line:532:1, line:535:82> line:532:12 pthread_mutexattr_getprotocol 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x56324b3fac58 <col:43, line:533:19> col:19 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x56324b3facd8 <line:534:8, col:24> col:24 __protocol 'int *restrict'
| |-NoThrowAttr 0x56324b3fae68 <line:535:22>
| `-NonNullAttr 0x56324b3faec0 <col:63, col:80> 1 2
|-FunctionDecl 0x56324b3fb048 <line:536:1, line:538:79> line:536:12 pthread_mutexattr_setprotocol 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x56324b3faf08 <col:43, col:64> col:64 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x56324b3faf88 <line:537:8, col:12> col:12 __protocol 'int'
| |-NoThrowAttr 0x56324b3fb0f8 <line:538:22>
| `-NonNullAttr 0x56324b3fb150 <col:63, col:77> 1
|-FunctionDecl 0x56324b3fb2f8 <line:539:1, line:542:82> line:539:12 pthread_mutexattr_getprioceiling 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x56324b3fb198 <col:46, line:540:22> col:22 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x56324b3fb218 <line:541:11, col:27> col:27 __prioceiling 'int *restrict'
| |-NoThrowAttr 0x56324b3fb3a8 <line:542:22>
| `-NonNullAttr 0x56324b3fb400 <col:63, col:80> 1 2
|-FunctionDecl 0x56324b3fb588 <line:543:1, line:545:79> line:543:12 pthread_mutexattr_setprioceiling 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x56324b3fb448 <col:46, col:67> col:67 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x56324b3fb4c8 <line:544:11, col:15> col:15 __prioceiling 'int'
| |-NoThrowAttr 0x56324b3fb638 <line:545:22>
| `-NonNullAttr 0x56324b3fb690 <col:63, col:77> 1
|-FunctionDecl 0x56324b3fb878 <line:546:1, line:548:82> line:546:12 pthread_mutexattr_getrobust 'int (const pthread_mutexattr_t *, int *)' extern
| |-ParmVarDecl 0x56324b3fb6d8 <col:41, col:68> col:68 __attr 'const pthread_mutexattr_t *'
| |-ParmVarDecl 0x56324b3fb758 <line:547:6, col:11> col:11 __robustness 'int *'
| |-NoThrowAttr 0x56324b3fb928 <line:548:22>
| `-NonNullAttr 0x56324b3fb980 <col:63, col:80> 1 2
|-FunctionDecl 0x56324b3fcb38 <line:549:1, line:551:79> line:549:12 pthread_mutexattr_setrobust 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x56324b3fb9c8 <col:41, col:62> col:62 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x56324b3fca78 <line:550:6, col:10> col:10 __robustness 'int'
| |-NoThrowAttr 0x56324b3fcbe8 <line:551:22>
| `-NonNullAttr 0x56324b3fcc40 <col:63, col:77> 1
|-FunctionDecl 0x56324b3fcf78 <line:552:1, line:554:86> line:552:12 pthread_rwlock_init 'int (pthread_rwlock_t *restrict, const pthread_rwlockattr_t *restrict)' extern
| |-ParmVarDecl 0x56324b3fcd20 <col:33, col:62> col:62 __rwlock 'pthread_rwlock_t *restrict'
| |-ParmVarDecl 0x56324b3fce30 <line:553:5, line:554:5> col:5 __attr 'const pthread_rwlockattr_t *restrict'
| |-NoThrowAttr 0x56324b3fd028 <col:29>
| `-NonNullAttr 0x56324b3fd080 <col:70, col:84> 1
|-FunctionDecl 0x56324b3fd1f8 <line:555:1, line:556:79> line:555:12 pthread_rwlock_destroy 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x56324b3fd0c8 <col:36, col:54> col:54 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x56324b3fd2a0 <line:556:22>
| `-NonNullAttr 0x56324b3fd2f8 <col:63, col:77> 1
|-FunctionDecl 0x56324b3fd400 <line:557:1, line:558:68> line:557:12 pthread_rwlock_rdlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x56324b3fd348 <col:35, col:53> col:53 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x56324b3fd4a8 <line:558:22>
| `-NonNullAttr 0x56324b3fd500 <col:52, col:66> 1
|-FunctionDecl 0x56324b3fd600 <line:559:1, line:560:65> line:559:12 pthread_rwlock_tryrdlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x56324b3fd548 <col:38, col:56> col:56 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x56324b3fd6a8 <line:560:19>
| `-NonNullAttr 0x56324b3fd700 <col:49, col:63> 1
|-FunctionDecl 0x56324b3fd938 <line:561:1, line:563:88> line:561:12 pthread_rwlock_timedrdlock 'int (pthread_rwlock_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x56324b3fd748 <col:40, col:69> col:69 __rwlock 'pthread_rwlock_t *restrict'
| |-ParmVarDecl 0x56324b3fd7d8 <line:562:12, line:563:12> col:12 __abstime 'const struct timespec *restrict'
| |-NoThrowAttr 0x56324b3fd9e8 <col:39>
| `-NonNullAttr 0x56324b3fda70 <col:69, col:86> 1 2
|-FunctionDecl 0x56324b3fdb70 <line:564:1, line:565:68> line:564:12 pthread_rwlock_wrlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x56324b3fdab8 <col:35, col:53> col:53 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x56324b3fdc18 <line:565:22>
| `-NonNullAttr 0x56324b3fdc70 <col:52, col:66> 1
|-FunctionDecl 0x56324b3fdd70 <line:566:1, line:567:68> line:566:12 pthread_rwlock_trywrlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x56324b3fdcb8 <col:38, col:56> col:56 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x56324b3fde18 <line:567:22>
| `-NonNullAttr 0x56324b3fde70 <col:52, col:66> 1
|-FunctionDecl 0x56324b3fe028 <line:568:1, line:570:88> line:568:12 pthread_rwlock_timedwrlock 'int (pthread_rwlock_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x56324b3fdeb8 <col:40, col:69> col:69 __rwlock 'pthread_rwlock_t *restrict'
| |-ParmVarDecl 0x56324b3fdf48 <line:569:12, line:570:12> col:12 __abstime 'const struct timespec *restrict'
| |-NoThrowAttr 0x56324b3fe0d8 <col:39>
| `-NonNullAttr 0x56324b3fe130 <col:69, col:86> 1 2
|-FunctionDecl 0x56324b3fe230 <line:571:1, line:572:68> line:571:12 pthread_rwlock_unlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x56324b3fe178 <col:35, col:53> col:53 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x56324b3fe2d8 <line:572:22>
| `-NonNullAttr 0x56324b3fe330 <col:52, col:66> 1
|-FunctionDecl 0x56324b3fe518 <line:573:1, line:574:79> line:573:12 pthread_rwlockattr_init 'int (pthread_rwlockattr_t *)' extern
| |-ParmVarDecl 0x56324b3fe3e0 <col:37, col:59> col:59 __attr 'pthread_rwlockattr_t *'
| |-NoThrowAttr 0x56324b3fe5c0 <line:574:22>
| `-NonNullAttr 0x56324b3fe618 <col:63, col:77> 1
|-FunctionDecl 0x56324b3fe720 <line:575:1, line:576:79> line:575:12 pthread_rwlockattr_destroy 'int (pthread_rwlockattr_t *)' extern
| |-ParmVarDecl 0x56324b3fe668 <col:40, col:62> col:62 __attr 'pthread_rwlockattr_t *'
| |-NoThrowAttr 0x56324b3fe7c8 <line:576:22>
| `-NonNullAttr 0x56324b3fe820 <col:63, col:77> 1
|-FunctionDecl 0x56324b3fea80 <line:577:1, line:580:82> line:577:12 pthread_rwlockattr_getpshared 'int (const pthread_rwlockattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x56324b3fe868 <col:43, line:578:19> col:19 __attr 'const pthread_rwlockattr_t *restrict'
| |-ParmVarDecl 0x56324b3fe8e8 <line:579:8, col:24> col:24 __pshared 'int *restrict'
| |-NoThrowAttr 0x56324b3feb30 <line:580:22>
| `-NonNullAttr 0x56324b3feb88 <col:63, col:80> 1 2
|-FunctionDecl 0x56324b3fed98 <line:581:1, line:583:79> line:581:12 pthread_rwlockattr_setpshared 'int (pthread_rwlockattr_t *, int)' extern
| |-ParmVarDecl 0x56324b3febd8 <col:43, col:65> col:65 __attr 'pthread_rwlockattr_t *'
| |-ParmVarDecl 0x56324b3fec58 <line:582:8, col:12> col:12 __pshared 'int'
| |-NoThrowAttr 0x56324b3fee48 <line:583:22>
| `-NonNullAttr 0x56324b3feea0 <col:63, col:77> 1
|-FunctionDecl 0x56324b3ff048 <line:584:1, line:587:82> line:584:12 pthread_rwlockattr_getkind_np 'int (const pthread_rwlockattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x56324b3feee8 <col:43, line:585:19> col:19 __attr 'const pthread_rwlockattr_t *restrict'
| |-ParmVarDecl 0x56324b3fef68 <line:586:8, col:24> col:24 __pref 'int *restrict'
| |-NoThrowAttr 0x56324b3ff0f8 <line:587:22>
| `-NonNullAttr 0x56324b3ff150 <col:63, col:80> 1 2
|-FunctionDecl 0x56324b3ff2d8 <line:588:1, line:589:93> line:588:12 pthread_rwlockattr_setkind_np 'int (pthread_rwlockattr_t *, int)' extern
| |-ParmVarDecl 0x56324b3ff198 <col:43, col:65> col:65 __attr 'pthread_rwlockattr_t *'
| |-ParmVarDecl 0x56324b3ff218 <line:589:8, col:12> col:12 __pref 'int'
| |-NoThrowAttr 0x56324b3ff388 <col:36>
| `-NonNullAttr 0x56324b3ff3e0 <col:77, col:91> 1
|-FunctionDecl 0x56324b3ff718 <line:590:1, line:592:79> line:590:12 pthread_cond_init 'int (pthread_cond_t *restrict, const pthread_condattr_t *restrict)' extern
| |-ParmVarDecl 0x56324b3ff4c0 <col:31, col:58> col:58 __cond 'pthread_cond_t *restrict'
| |-ParmVarDecl 0x56324b3ff5d0 <line:591:10, col:47> col:47 __cond_attr 'const pthread_condattr_t *restrict'
| |-NoThrowAttr 0x56324b3ff7c8 <line:592:22>
| `-NonNullAttr 0x56324b3ff820 <col:63, col:77> 1
|-FunctionDecl 0x56324b3ff998 <line:593:1, line:594:79> line:593:12 pthread_cond_destroy 'int (pthread_cond_t *)' extern
| |-ParmVarDecl 0x56324b3ff868 <col:34, col:50> col:50 __cond 'pthread_cond_t *'
| |-NoThrowAttr 0x56324b3ffa40 <line:594:22>
| `-NonNullAttr 0x56324b3ffac0 <col:63, col:77> 1
|-FunctionDecl 0x56324b3ffbc0 <line:595:1, line:596:68> line:595:12 pthread_cond_signal 'int (pthread_cond_t *)' extern
| |-ParmVarDecl 0x56324b3ffb08 <col:33, col:49> col:49 __cond 'pthread_cond_t *'
| |-NoThrowAttr 0x56324b3ffc68 <line:596:22>
| `-NonNullAttr 0x56324b3ffcc0 <col:52, col:66> 1
|-FunctionDecl 0x56324b3ffdc0 <line:597:1, line:598:68> line:597:12 pthread_cond_broadcast 'int (pthread_cond_t *)' extern
| |-ParmVarDecl 0x56324b3ffd08 <col:36, col:52> col:52 __cond 'pthread_cond_t *'
| |-NoThrowAttr 0x56324b3ffe68 <line:598:22>
| `-NonNullAttr 0x56324b3ffec0 <col:52, col:66> 1
|-FunctionDecl 0x56324b4000e8 <line:599:1, line:601:41> line:599:12 pthread_cond_wait 'int (pthread_cond_t *restrict, pthread_mutex_t *restrict)' extern
| |-ParmVarDecl 0x56324b3fff08 <col:31, col:58> col:58 __cond 'pthread_cond_t *restrict'
| |-ParmVarDecl 0x56324b3fff80 <line:600:10, col:38> col:38 __mutex 'pthread_mutex_t *restrict'
| `-NonNullAttr 0x56324b400198 <line:601:22, col:39> 1 2
|-FunctionDecl 0x56324b4004c8 <line:602:1, line:605:44> line:602:12 pthread_cond_timedwait 'int (pthread_cond_t *restrict, pthread_mutex_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x56324b400218 <col:36, col:63> col:63 __cond 'pthread_cond_t *restrict'
| |-ParmVarDecl 0x56324b400290 <line:603:8, col:36> col:36 __mutex 'pthread_mutex_t *restrict'
| |-ParmVarDecl 0x56324b400320 <line:604:8, col:42> col:42 __abstime 'const struct timespec *restrict'
| `-NonNullAttr 0x56324b400580 <line:605:22, col:42> 1 2 3
|-FunctionDecl 0x56324b400798 <line:606:1, line:607:79> line:606:12 pthread_condattr_init 'int (pthread_condattr_t *)' extern
| |-ParmVarDecl 0x56324b400660 <col:35, col:55> col:55 __attr 'pthread_condattr_t *'
| |-NoThrowAttr 0x56324b400840 <line:607:22>
| `-NonNullAttr 0x56324b400898 <col:63, col:77> 1
|-FunctionDecl 0x56324b4009a0 <line:608:1, line:609:79> line:608:12 pthread_condattr_destroy 'int (pthread_condattr_t *)' extern
| |-ParmVarDecl 0x56324b4008e8 <col:38, col:58> col:58 __attr 'pthread_condattr_t *'
| |-NoThrowAttr 0x56324b400a48 <line:609:22>
| `-NonNullAttr 0x56324b400ad0 <col:63, col:77> 1
|-FunctionDecl 0x56324b400cf8 <line:610:1, line:613:82> line:610:12 pthread_condattr_getpshared 'int (const pthread_condattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x56324b400b18 <col:41, line:611:17> col:17 __attr 'const pthread_condattr_t *restrict'
| |-ParmVarDecl 0x56324b400b98 <line:612:6, col:22> col:22 __pshared 'int *restrict'
| |-NoThrowAttr 0x56324b400da8 <line:613:22>
| `-NonNullAttr 0x56324b400e00 <col:63, col:80> 1 2
|-FunctionDecl 0x56324b401008 <line:614:1, line:615:94> line:614:12 pthread_condattr_setpshared 'int (pthread_condattr_t *, int)' extern
| |-ParmVarDecl 0x56324b400e48 <col:41, col:61> col:61 __attr 'pthread_condattr_t *'
| |-ParmVarDecl 0x56324b400ec8 <line:615:6, col:10> col:10 __pshared 'int'
| |-NoThrowAttr 0x56324b4010b8 <col:37>
| `-NonNullAttr 0x56324b401110 <col:78, col:92> 1
|-FunctionDecl 0x56324b401328 <line:616:1, line:619:82> line:616:12 pthread_condattr_getclock 'int (const pthread_condattr_t *restrict, __clockid_t *restrict)' extern
| |-ParmVarDecl 0x56324b401158 <col:39, line:617:22> col:22 __attr 'const pthread_condattr_t *restrict'
| |-ParmVarDecl 0x56324b401200 <line:618:11, col:35> col:35 __clock_id '__clockid_t *restrict'
| |-NoThrowAttr 0x56324b4013d8 <line:619:22>
| `-NonNullAttr 0x56324b401430 <col:63, col:80> 1 2
|-FunctionDecl 0x56324b4015f8 <line:620:1, line:622:79> line:620:12 pthread_condattr_setclock 'int (pthread_condattr_t *, __clockid_t)' extern
| |-ParmVarDecl 0x56324b401478 <col:39, col:59> col:59 __attr 'pthread_condattr_t *'
| |-ParmVarDecl 0x56324b4014f0 <line:621:11, col:23> col:23 __clock_id '__clockid_t':'int'
| |-NoThrowAttr 0x56324b4016a8 <line:622:22>
| `-NonNullAttr 0x56324b401700 <col:63, col:77> 1
|-FunctionDecl 0x56324b4019a8 <line:623:1, line:624:79> line:623:12 pthread_spin_init 'int (pthread_spinlock_t *, int)' extern
| |-ParmVarDecl 0x56324b4017e0 <col:31, col:51> col:51 __lock 'pthread_spinlock_t *'
| |-ParmVarDecl 0x56324b401860 <col:59, col:63> col:63 __pshared 'int'
| |-NoThrowAttr 0x56324b401a58 <line:624:22>
| `-NonNullAttr 0x56324b401ae0 <col:63, col:77> 1
|-FunctionDecl 0x56324b401c58 <line:625:1, line:626:79> line:625:12 pthread_spin_destroy 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x56324b401b28 <col:34, col:54> col:54 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x56324b401d00 <line:626:22>
| `-NonNullAttr 0x56324b401d58 <col:63, col:77> 1
|-FunctionDecl 0x56324b401e60 <line:627:1, line:628:68> line:627:12 pthread_spin_lock 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x56324b401da8 <col:31, col:51> col:51 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x56324b401f08 <line:628:22>
| `-NonNullAttr 0x56324b401f60 <col:52, col:66> 1
|-FunctionDecl 0x56324b402060 <line:629:1, line:630:68> line:629:12 pthread_spin_trylock 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x56324b401fa8 <col:34, col:54> col:54 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x56324b402108 <line:630:22>
| `-NonNullAttr 0x56324b402160 <col:52, col:66> 1
|-FunctionDecl 0x56324b402260 <line:631:1, line:632:68> line:631:12 pthread_spin_unlock 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x56324b4021a8 <col:33, col:53> col:53 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x56324b402308 <line:632:22>
| `-NonNullAttr 0x56324b402360 <col:52, col:66> 1
|-FunctionDecl 0x56324b402738 <line:633:1, line:636:79> line:633:12 pthread_barrier_init 'int (pthread_barrier_t *restrict, const pthread_barrierattr_t *restrict, unsigned int)' extern
| |-ParmVarDecl 0x56324b402440 <col:34, col:64> col:64 __barrier 'pthread_barrier_t *restrict'
| |-ParmVarDecl 0x56324b402550 <line:634:6, line:635:6> col:6 __attr 'const pthread_barrierattr_t *restrict'
| |-ParmVarDecl 0x56324b4025d0 <col:14, col:27> col:27 __count 'unsigned int'
| |-NoThrowAttr 0x56324b4027f0 <line:636:22>
| `-NonNullAttr 0x56324b402848 <col:63, col:77> 1
|-FunctionDecl 0x56324b4029c8 <line:637:1, line:638:79> line:637:12 pthread_barrier_destroy 'int (pthread_barrier_t *)' extern
| |-ParmVarDecl 0x56324b402898 <col:37, col:56> col:56 __barrier 'pthread_barrier_t *'
| |-NoThrowAttr 0x56324b402a70 <line:638:22>
| `-NonNullAttr 0x56324b403b00 <col:63, col:77> 1
|-FunctionDecl 0x56324b403c00 <line:639:1, line:640:68> line:639:12 pthread_barrier_wait 'int (pthread_barrier_t *)' extern
| |-ParmVarDecl 0x56324b403b48 <col:34, col:53> col:53 __barrier 'pthread_barrier_t *'
| |-NoThrowAttr 0x56324b403ca8 <line:640:22>
| `-NonNullAttr 0x56324b403d00 <col:52, col:66> 1
|-FunctionDecl 0x56324b403ee8 <line:641:1, line:642:79> line:641:12 pthread_barrierattr_init 'int (pthread_barrierattr_t *)' extern
| |-ParmVarDecl 0x56324b403db0 <col:38, col:61> col:61 __attr 'pthread_barrierattr_t *'
| |-NoThrowAttr 0x56324b403f90 <line:642:22>
| `-NonNullAttr 0x56324b403fe8 <col:63, col:77> 1
|-FunctionDecl 0x56324b4040f0 <line:643:1, line:644:79> line:643:12 pthread_barrierattr_destroy 'int (pthread_barrierattr_t *)' extern
| |-ParmVarDecl 0x56324b404038 <col:41, col:64> col:64 __attr 'pthread_barrierattr_t *'
| |-NoThrowAttr 0x56324b404198 <line:644:22>
| `-NonNullAttr 0x56324b4041f0 <col:63, col:77> 1
|-FunctionDecl 0x56324b404418 <line:645:1, line:648:82> line:645:12 pthread_barrierattr_getpshared 'int (const pthread_barrierattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x56324b404238 <col:44, line:646:20> col:20 __attr 'const pthread_barrierattr_t *restrict'
| |-ParmVarDecl 0x56324b4042b8 <line:647:9, col:25> col:25 __pshared 'int *restrict'
| |-NoThrowAttr 0x56324b4044c8 <line:648:22>
| `-NonNullAttr 0x56324b404520 <col:63, col:80> 1 2
|-FunctionDecl 0x56324b404728 <line:649:1, line:651:79> line:649:12 pthread_barrierattr_setpshared 'int (pthread_barrierattr_t *, int)' extern
| |-ParmVarDecl 0x56324b404568 <col:44, col:67> col:67 __attr 'pthread_barrierattr_t *'
| |-ParmVarDecl 0x56324b4045e8 <line:650:9, col:13> col:13 __pshared 'int'
| |-NoThrowAttr 0x56324b4047d8 <line:651:22>
| `-NonNullAttr 0x56324b404830 <col:63, col:77> 1
|-FunctionDecl 0x56324b404b98 <line:652:1, line:654:79> line:652:12 pthread_key_create 'int (pthread_key_t *, void (*)(void *))' extern
| |-ParmVarDecl 0x56324b404910 <col:32, col:47> col:47 __key 'pthread_key_t *'
| |-ParmVarDecl 0x56324b404a30 <line:653:11, col:43> col:18 __destr_function 'void (*)(void *)'
| |-NoThrowAttr 0x56324b404c48 <line:654:22>
| `-NonNullAttr 0x56324b404ca0 <col:63, col:77> 1
|-FunctionDecl 0x56324b404df8 <line:655:1, col:92> col:12 pthread_key_delete 'int (pthread_key_t)' extern
| |-ParmVarDecl 0x56324b404ce8 <col:32, col:46> col:46 __key 'pthread_key_t':'unsigned int'
| `-NoThrowAttr 0x56324b404ea0 <col:69>
|-FunctionDecl 0x56324b405018 <line:656:1, col:95> col:14 pthread_getspecific 'void *(pthread_key_t)' extern
| |-ParmVarDecl 0x56324b404f08 <col:35, col:49> col:49 __key 'pthread_key_t':'unsigned int'
| `-NoThrowAttr 0x56324b4050c0 <col:72>
|-FunctionDecl 0x56324b4052f8 <line:657:1, line:658:67> line:657:12 pthread_setspecific 'int (pthread_key_t, const void *)' extern
| |-ParmVarDecl 0x56324b405128 <col:33, col:47> col:47 __key 'pthread_key_t':'unsigned int'
| |-ParmVarDecl 0x56324b4051d8 <line:658:5, col:17> col:17 __pointer 'const void *'
| `-NoThrowAttr 0x56324b4053a8 <col:44>
|-FunctionDecl 0x56324b4055c8 <line:659:1, line:661:79> line:659:12 pthread_getcpuclockid 'int (pthread_t, __clockid_t *)' extern
| |-ParmVarDecl 0x56324b405410 <col:35, col:45> col:45 __thread_id 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x56324b405488 <line:660:7, col:20> col:20 __clock_id '__clockid_t *'
| |-NoThrowAttr 0x56324b405678 <line:661:22>
| `-NonNullAttr 0x56324b4056d0 <col:63, col:77> 2
|-FunctionDecl 0x56324b405b30 <line:662:1, line:664:70> line:662:12 pthread_atfork 'int (void (*)(void), void (*)(void), void (*)(void))' extern
| |-ParmVarDecl 0x56324b4057b0 <col:28, col:51> col:35 __prepare 'void (*)(void)'
| |-ParmVarDecl 0x56324b4058c0 <line:663:7, col:29> col:14 __parent 'void (*)(void)'
| |-ParmVarDecl 0x56324b4059d0 <line:664:7, col:28> col:14 __child 'void (*)(void)'
| `-NoThrowAttr 0x56324b405be8 <col:47>
|-FunctionDecl 0x56324b405cf0 <line:666:1, col:20> col:8 used P0 'void *(void *)'
| `-ParmVarDecl 0x56324b405c58 <col:11, col:17> col:17 arg 'void *'
|-FunctionDecl 0x56324b405e48 <line:667:1, col:20> col:8 used P1 'void *(void *)'
| `-ParmVarDecl 0x56324b405db0 <col:11, col:17> col:17 arg 'void *'
|-FunctionDecl 0x56324b405fa0 <line:668:1, col:20> col:8 used P2 'void *(void *)'
| `-ParmVarDecl 0x56324b405f08 <col:11, col:17> col:17 arg 'void *'
|-FunctionDecl 0x56324b406068 <line:669:1, col:12> col:6 fence 'void ()'
|-FunctionDecl 0x56324b406128 <line:670:1, col:12> col:6 isync 'void ()'
|-FunctionDecl 0x56324b4061e8 <line:671:1, col:14> col:6 lwfence 'void ()'
|-VarDecl 0x56324b4062a0 <line:672:1, col:5> col:5 used __unbuffered_cnt 'int'
|-VarDecl 0x56324b406320 prev 0x56324b4062a0 <line:673:1, col:24> col:5 used __unbuffered_cnt 'int' cinit
| `-IntegerLiteral 0x56324b406388 <col:24> 'int' 0
|-VarDecl 0x56324b4063c0 <line:674:1, col:5> col:5 used __unbuffered_p0_EAX 'int'
|-VarDecl 0x56324b406440 prev 0x56324b4063c0 <line:675:1, col:27> col:5 used __unbuffered_p0_EAX 'int' cinit
| `-IntegerLiteral 0x56324b4064a8 <col:27> 'int' 0
|-VarDecl 0x56324b4064e0 <line:676:1, col:5> col:5 used __unbuffered_p2_EAX 'int'
|-VarDecl 0x56324b406560 prev 0x56324b4064e0 <line:677:1, col:27> col:5 used __unbuffered_p2_EAX 'int' cinit
| `-IntegerLiteral 0x56324b4065c8 <col:27> 'int' 0
|-VarDecl 0x56324b4065f8 <line:678:1, col:7> col:7 __unbuffered_p2_EAX$flush_delayed '_Bool'
|-VarDecl 0x56324b406678 <line:679:1, col:5> col:5 __unbuffered_p2_EAX$mem_tmp 'int'
|-VarDecl 0x56324b4066f0 <line:680:1, col:7> col:7 __unbuffered_p2_EAX$r_buff0_thd0 '_Bool'
|-VarDecl 0x56324b406768 <line:681:1, col:7> col:7 __unbuffered_p2_EAX$r_buff0_thd1 '_Bool'
|-VarDecl 0x56324b4067e0 <line:682:1, col:7> col:7 __unbuffered_p2_EAX$r_buff0_thd2 '_Bool'
|-VarDecl 0x56324b406858 <line:683:1, col:7> col:7 __unbuffered_p2_EAX$r_buff0_thd3 '_Bool'
|-VarDecl 0x56324b4068d0 <line:684:1, col:7> col:7 __unbuffered_p2_EAX$r_buff1_thd0 '_Bool'
|-VarDecl 0x56324b406948 <line:685:1, col:7> col:7 __unbuffered_p2_EAX$r_buff1_thd1 '_Bool'
|-VarDecl 0x56324b4069c0 <line:686:1, col:7> col:7 __unbuffered_p2_EAX$r_buff1_thd2 '_Bool'
|-VarDecl 0x56324b406a38 <line:687:1, col:7> col:7 __unbuffered_p2_EAX$r_buff1_thd3 '_Bool'
|-VarDecl 0x56324b406b00 <line:688:1, col:7> col:7 used __unbuffered_p2_EAX$read_delayed '_Bool'
|-VarDecl 0x56324b406b80 <line:689:1, col:6> col:6 used __unbuffered_p2_EAX$read_delayed_var 'int *'
|-VarDecl 0x56324b406c00 <line:690:1, col:5> col:5 __unbuffered_p2_EAX$w_buff0 'int'
|-VarDecl 0x56324b406c78 <line:691:1, col:7> col:7 __unbuffered_p2_EAX$w_buff0_used '_Bool'
|-VarDecl 0x56324b406cf8 <line:692:1, col:5> col:5 __unbuffered_p2_EAX$w_buff1 'int'
|-VarDecl 0x56324b406d70 <line:693:1, col:7> col:7 __unbuffered_p2_EAX$w_buff1_used '_Bool'
|-VarDecl 0x56324b406df0 <line:694:1, col:5> col:5 used __unbuffered_p2_EBX 'int'
|-VarDecl 0x56324b406e70 prev 0x56324b406df0 <line:695:1, col:27> col:5 used __unbuffered_p2_EBX 'int' cinit
| `-IntegerLiteral 0x56324b406ed8 <col:27> 'int' 0
|-VarDecl 0x56324b406f08 <line:696:1, col:7> col:7 used main$tmp_guard0 '_Bool'
|-VarDecl 0x56324b406f80 <line:697:1, col:7> col:7 used main$tmp_guard1 '_Bool'
|-VarDecl 0x56324b407000 <line:698:1, col:5> col:5 used x 'int'
|-VarDecl 0x56324b407080 prev 0x56324b407000 <line:699:1, col:9> col:5 used x 'int' cinit
| `-IntegerLiteral 0x56324b4070e8 <col:9> 'int' 0
|-VarDecl 0x56324b407118 <line:700:1, col:7> col:7 used x$flush_delayed '_Bool'
|-VarDecl 0x56324b407198 <line:701:1, col:5> col:5 used x$mem_tmp 'int'
|-VarDecl 0x56324b407210 <line:702:1, col:7> col:7 used x$r_buff0_thd0 '_Bool'
|-VarDecl 0x56324b407288 <line:703:1, col:7> col:7 used x$r_buff0_thd1 '_Bool'
|-VarDecl 0x56324b407300 <line:704:1, col:7> col:7 used x$r_buff0_thd2 '_Bool'
|-VarDecl 0x56324b407378 <line:705:1, col:7> col:7 used x$r_buff0_thd3 '_Bool'
|-VarDecl 0x56324b4073f0 <line:706:1, col:7> col:7 used x$r_buff1_thd0 '_Bool'
|-VarDecl 0x56324b407468 <line:707:1, col:7> col:7 used x$r_buff1_thd1 '_Bool'
|-VarDecl 0x56324b4074e0 <line:708:1, col:7> col:7 used x$r_buff1_thd2 '_Bool'
|-VarDecl 0x56324b407558 <line:709:1, col:7> col:7 used x$r_buff1_thd3 '_Bool'
|-VarDecl 0x56324b4075d0 <line:710:1, col:7> col:7 x$read_delayed '_Bool'
|-VarDecl 0x56324b407650 <line:711:1, col:6> col:6 x$read_delayed_var 'int *'
|-VarDecl 0x56324b4076d0 <line:712:1, col:5> col:5 used x$w_buff0 'int'
|-VarDecl 0x56324b407748 <line:713:1, col:7> col:7 used x$w_buff0_used '_Bool'
|-VarDecl 0x56324b4077c8 <line:714:1, col:5> col:5 used x$w_buff1 'int'
|-VarDecl 0x56324b407840 <line:715:1, col:7> col:7 used x$w_buff1_used '_Bool'
|-VarDecl 0x56324b4078c0 <line:716:1, col:5> col:5 used y 'int'
|-VarDecl 0x56324b407940 prev 0x56324b4078c0 <line:717:1, col:9> col:5 used y 'int' cinit
| `-IntegerLiteral 0x56324b4079a8 <col:9> 'int' 0
|-VarDecl 0x56324b4079d8 <line:718:1, col:7> col:7 used weak$$choice0 '_Bool'
|-VarDecl 0x56324b407a50 <line:719:1, col:7> col:7 used weak$$choice1 '_Bool'
|-VarDecl 0x56324b408b20 <line:720:1, col:7> col:7 used weak$$choice2 '_Bool'
|-FunctionDecl 0x56324b408c38 prev 0x56324b405cf0 <line:721:1, line:750:1> line:721:8 used P0 'void *(void *)'
| |-ParmVarDecl 0x56324b408ba0 <col:11, col:17> col:17 arg 'void *'
| `-CompoundStmt 0x56324b40bc88 <line:722:1, line:750:1>
|   |-CallExpr 0x56324b408d48 <line:723:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x56324b408d30 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x56324b408ce0 <col:3> 'void ()' Function 0x56324b3acfa0 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x56324b408da8 <line:724:3, col:7> 'int' '='
|   | |-DeclRefExpr 0x56324b408d68 <col:3> 'int' lvalue Var 0x56324b407940 'y' 'int'
|   | `-IntegerLiteral 0x56324b408d88 <col:7> 'int' 1
|   |-CallExpr 0x56324b408e00 <line:725:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x56324b408de8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x56324b408dc8 <col:3> 'void ()' Function 0x56324b3ad060 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x56324b408e58 <line:726:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x56324b408e40 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x56324b408e20 <col:3> 'void ()' Function 0x56324b3acfa0 '__VERIFIER_atomic_begin' 'void ()'
|   |-CallExpr 0x56324b408eb0 <line:727:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x56324b408e98 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x56324b408e78 <col:3> 'void ()' Function 0x56324b3ad060 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x56324b408f08 <line:728:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x56324b408ef0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x56324b408ed0 <col:3> 'void ()' Function 0x56324b3acfa0 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x56324b408fd8 <line:729:3, col:42> '_Bool' '='
|   | |-DeclRefExpr 0x56324b408f28 <col:3> '_Bool' lvalue Var 0x56324b4079d8 'weak$$choice0' '_Bool'
|   | `-CallExpr 0x56324b408fb8 <col:19, col:42> '_Bool'
|   |   `-ImplicitCastExpr 0x56324b408fa0 <col:19> '_Bool (*)(void)' <FunctionToPointerDecay>
|   |     `-DeclRefExpr 0x56324b408f48 <col:19> '_Bool (void)' Function 0x56324b3ac770 '__VERIFIER_nondet_bool' '_Bool (void)'
|   |-BinaryOperator 0x56324b409070 <line:730:3, col:42> '_Bool' '='
|   | |-DeclRefExpr 0x56324b408ff8 <col:3> '_Bool' lvalue Var 0x56324b408b20 'weak$$choice2' '_Bool'
|   | `-CallExpr 0x56324b409050 <col:19, col:42> '_Bool'
|   |   `-ImplicitCastExpr 0x56324b409038 <col:19> '_Bool (*)(void)' <FunctionToPointerDecay>
|   |     `-DeclRefExpr 0x56324b409018 <col:19> '_Bool (void)' Function 0x56324b3ac770 '__VERIFIER_nondet_bool' '_Bool (void)'
|   |-BinaryOperator 0x56324b4090e8 <line:731:3, col:21> '_Bool' '='
|   | |-DeclRefExpr 0x56324b409090 <col:3> '_Bool' lvalue Var 0x56324b407118 'x$flush_delayed' '_Bool'
|   | `-ImplicitCastExpr 0x56324b4090d0 <col:21> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x56324b4090b0 <col:21> '_Bool' lvalue Var 0x56324b408b20 'weak$$choice2' '_Bool'
|   |-BinaryOperator 0x56324b409160 <line:732:3, col:15> 'int' '='
|   | |-DeclRefExpr 0x56324b409108 <col:3> 'int' lvalue Var 0x56324b407198 'x$mem_tmp' 'int'
|   | `-ImplicitCastExpr 0x56324b409148 <col:15> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x56324b409128 <col:15> 'int' lvalue Var 0x56324b407080 'x' 'int'
|   |-BinaryOperator 0x56324b409598 <line:733:3, col:162> 'int' '='
|   | |-DeclRefExpr 0x56324b409180 <col:3> 'int' lvalue Var 0x56324b407080 'x' 'int'
|   | `-ConditionalOperator 0x56324b409568 <col:7, col:162> 'int'
|   |   |-BinaryOperator 0x56324b409390 <col:7, col:84> 'int' '||'
|   |   | |-BinaryOperator 0x56324b4092b0 <col:7, col:46> 'int' '||'
|   |   | | |-UnaryOperator 0x56324b4091d8 <col:7, col:8> 'int' prefix '!' cannot overflow
|   |   | | | `-ImplicitCastExpr 0x56324b4091c0 <col:8> '_Bool' <LValueToRValue>
|   |   | | |   `-DeclRefExpr 0x56324b4091a0 <col:8> '_Bool' lvalue Var 0x56324b407748 'x$w_buff0_used' '_Bool'
|   |   | | `-BinaryOperator 0x56324b409290 <col:26, col:46> 'int' '&&'
|   |   | |   |-UnaryOperator 0x56324b409228 <col:26, col:27> 'int' prefix '!' cannot overflow
|   |   | |   | `-ImplicitCastExpr 0x56324b409210 <col:27> '_Bool' <LValueToRValue>
|   |   | |   |   `-DeclRefExpr 0x56324b4091f0 <col:27> '_Bool' lvalue Var 0x56324b407288 'x$r_buff0_thd1' '_Bool'
|   |   | |   `-UnaryOperator 0x56324b409278 <col:45, col:46> 'int' prefix '!' cannot overflow
|   |   | |     `-ImplicitCastExpr 0x56324b409260 <col:46> '_Bool' <LValueToRValue>
|   |   | |       `-DeclRefExpr 0x56324b409240 <col:46> '_Bool' lvalue Var 0x56324b407840 'x$w_buff1_used' '_Bool'
|   |   | `-BinaryOperator 0x56324b409370 <col:64, col:84> 'int' '&&'
|   |   |   |-UnaryOperator 0x56324b409308 <col:64, col:65> 'int' prefix '!' cannot overflow
|   |   |   | `-ImplicitCastExpr 0x56324b4092f0 <col:65> '_Bool' <LValueToRValue>
|   |   |   |   `-DeclRefExpr 0x56324b4092d0 <col:65> '_Bool' lvalue Var 0x56324b407288 'x$r_buff0_thd1' '_Bool'
|   |   |   `-UnaryOperator 0x56324b409358 <col:83, col:84> 'int' prefix '!' cannot overflow
|   |   |     `-ImplicitCastExpr 0x56324b409340 <col:84> '_Bool' <LValueToRValue>
|   |   |       `-DeclRefExpr 0x56324b409320 <col:84> '_Bool' lvalue Var 0x56324b407468 'x$r_buff1_thd1' '_Bool'
|   |   |-ImplicitCastExpr 0x56324b409550 <col:101> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x56324b4093b0 <col:101> 'int' lvalue Var 0x56324b407080 'x' 'int'
|   |   `-ParenExpr 0x56324b409530 <col:105, col:162> 'int'
|   |     `-ConditionalOperator 0x56324b409500 <col:106, col:153> 'int'
|   |       |-BinaryOperator 0x56324b409470 <col:106, col:124> 'int' '&&'
|   |       | |-ImplicitCastExpr 0x56324b409428 <col:106> 'int' <IntegralCast>
|   |       | | `-ImplicitCastExpr 0x56324b409410 <col:106> '_Bool' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x56324b4093d0 <col:106> '_Bool' lvalue Var 0x56324b407748 'x$w_buff0_used' '_Bool'
|   |       | `-ImplicitCastExpr 0x56324b409458 <col:124> 'int' <IntegralCast>
|   |       |   `-ImplicitCastExpr 0x56324b409440 <col:124> '_Bool' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x56324b4093f0 <col:124> '_Bool' lvalue Var 0x56324b407288 'x$r_buff0_thd1' '_Bool'
|   |       |-ImplicitCastExpr 0x56324b4094d0 <col:141> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x56324b409490 <col:141> 'int' lvalue Var 0x56324b4076d0 'x$w_buff0' 'int'
|   |       `-ImplicitCastExpr 0x56324b4094e8 <col:153> 'int' <LValueToRValue>
|   |         `-DeclRefExpr 0x56324b4094b0 <col:153> 'int' lvalue Var 0x56324b4077c8 'x$w_buff1' 'int'
|   |-BinaryOperator 0x56324b409aa8 <line:734:3, col:208> 'int' '='
|   | |-DeclRefExpr 0x56324b4095b8 <col:3> 'int' lvalue Var 0x56324b4076d0 'x$w_buff0' 'int'
|   | `-ConditionalOperator 0x56324b409a78 <col:15, col:208> 'int'
|   |   |-ImplicitCastExpr 0x56324b409a48 <col:15> 'int' <IntegralCast>
|   |   | `-ImplicitCastExpr 0x56324b409a30 <col:15> '_Bool' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x56324b4095d8 <col:15> '_Bool' lvalue Var 0x56324b408b20 'weak$$choice2' '_Bool'
|   |   |-ImplicitCastExpr 0x56324b409a60 <col:31> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x56324b4095f8 <col:31> 'int' lvalue Var 0x56324b4076d0 'x$w_buff0' 'int'
|   |   `-ParenExpr 0x56324b409a10 <col:43, col:208> 'int'
|   |     `-ConditionalOperator 0x56324b4099e0 <col:44, col:207> 'int'
|   |       |-BinaryOperator 0x56324b409808 <col:44, col:121> 'int' '||'
|   |       | |-BinaryOperator 0x56324b409728 <col:44, col:83> 'int' '||'
|   |       | | |-UnaryOperator 0x56324b409650 <col:44, col:45> 'int' prefix '!' cannot overflow
|   |       | | | `-ImplicitCastExpr 0x56324b409638 <col:45> '_Bool' <LValueToRValue>
|   |       | | |   `-DeclRefExpr 0x56324b409618 <col:45> '_Bool' lvalue Var 0x56324b407748 'x$w_buff0_used' '_Bool'
|   |       | | `-BinaryOperator 0x56324b409708 <col:63, col:83> 'int' '&&'
|   |       | |   |-UnaryOperator 0x56324b4096a0 <col:63, col:64> 'int' prefix '!' cannot overflow
|   |       | |   | `-ImplicitCastExpr 0x56324b409688 <col:64> '_Bool' <LValueToRValue>
|   |       | |   |   `-DeclRefExpr 0x56324b409668 <col:64> '_Bool' lvalue Var 0x56324b407288 'x$r_buff0_thd1' '_Bool'
|   |       | |   `-UnaryOperator 0x56324b4096f0 <col:82, col:83> 'int' prefix '!' cannot overflow
|   |       | |     `-ImplicitCastExpr 0x56324b4096d8 <col:83> '_Bool' <LValueToRValue>
|   |       | |       `-DeclRefExpr 0x56324b4096b8 <col:83> '_Bool' lvalue Var 0x56324b407840 'x$w_buff1_used' '_Bool'
|   |       | `-BinaryOperator 0x56324b4097e8 <col:101, col:121> 'int' '&&'
|   |       |   |-UnaryOperator 0x56324b409780 <col:101, col:102> 'int' prefix '!' cannot overflow
|   |       |   | `-ImplicitCastExpr 0x56324b409768 <col:102> '_Bool' <LValueToRValue>
|   |       |   |   `-DeclRefExpr 0x56324b409748 <col:102> '_Bool' lvalue Var 0x56324b407288 'x$r_buff0_thd1' '_Bool'
|   |       |   `-UnaryOperator 0x56324b4097d0 <col:120, col:121> 'int' prefix '!' cannot overflow
|   |       |     `-ImplicitCastExpr 0x56324b4097b8 <col:121> '_Bool' <LValueToRValue>
|   |       |       `-DeclRefExpr 0x56324b409798 <col:121> '_Bool' lvalue Var 0x56324b407468 'x$r_buff1_thd1' '_Bool'
|   |       |-ImplicitCastExpr 0x56324b4099c8 <col:138> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x56324b409828 <col:138> 'int' lvalue Var 0x56324b4076d0 'x$w_buff0' 'int'
|   |       `-ParenExpr 0x56324b4099a8 <col:150, col:207> 'int'
|   |         `-ConditionalOperator 0x56324b409978 <col:151, col:198> 'int'
|   |           |-BinaryOperator 0x56324b4098e8 <col:151, col:169> 'int' '&&'
|   |           | |-ImplicitCastExpr 0x56324b4098a0 <col:151> 'int' <IntegralCast>
|   |           | | `-ImplicitCastExpr 0x56324b409888 <col:151> '_Bool' <LValueToRValue>
|   |           | |   `-DeclRefExpr 0x56324b409848 <col:151> '_Bool' lvalue Var 0x56324b407748 'x$w_buff0_used' '_Bool'
|   |           | `-ImplicitCastExpr 0x56324b4098d0 <col:169> 'int' <IntegralCast>
|   |           |   `-ImplicitCastExpr 0x56324b4098b8 <col:169> '_Bool' <LValueToRValue>
|   |           |     `-DeclRefExpr 0x56324b409868 <col:169> '_Bool' lvalue Var 0x56324b407288 'x$r_buff0_thd1' '_Bool'
|   |           |-ImplicitCastExpr 0x56324b409948 <col:186> 'int' <LValueToRValue>
|   |           | `-DeclRefExpr 0x56324b409908 <col:186> 'int' lvalue Var 0x56324b4076d0 'x$w_buff0' 'int'
|   |           `-ImplicitCastExpr 0x56324b409960 <col:198> 'int' <LValueToRValue>
|   |             `-DeclRefExpr 0x56324b409928 <col:198> 'int' lvalue Var 0x56324b4076d0 'x$w_buff0' 'int'
|   |-BinaryOperator 0x56324b409fe0 <line:735:3, col:208> 'int' '='
|   | |-DeclRefExpr 0x56324b409ac8 <col:3> 'int' lvalue Var 0x56324b4077c8 'x$w_buff1' 'int'
|   | `-ConditionalOperator 0x56324b409fb0 <col:15, col:208> 'int'
|   |   |-ImplicitCastExpr 0x56324b409f80 <col:15> 'int' <IntegralCast>
|   |   | `-ImplicitCastExpr 0x56324b409f68 <col:15> '_Bool' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x56324b409ae8 <col:15> '_Bool' lvalue Var 0x56324b408b20 'weak$$choice2' '_Bool'
|   |   |-ImplicitCastExpr 0x56324b409f98 <col:31> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x56324b409b30 <col:31> 'int' lvalue Var 0x56324b4077c8 'x$w_buff1' 'int'
|   |   `-ParenExpr 0x56324b409f48 <col:43, col:208> 'int'
|   |     `-ConditionalOperator 0x56324b409f18 <col:44, col:207> 'int'
|   |       |-BinaryOperator 0x56324b409d40 <col:44, col:121> 'int' '||'
|   |       | |-BinaryOperator 0x56324b409c60 <col:44, col:83> 'int' '||'
|   |       | | |-UnaryOperator 0x56324b409b88 <col:44, col:45> 'int' prefix '!' cannot overflow
|   |       | | | `-ImplicitCastExpr 0x56324b409b70 <col:45> '_Bool' <LValueToRValue>
|   |       | | |   `-DeclRefExpr 0x56324b409b50 <col:45> '_Bool' lvalue Var 0x56324b407748 'x$w_buff0_used' '_Bool'
|   |       | | `-BinaryOperator 0x56324b409c40 <col:63, col:83> 'int' '&&'
|   |       | |   |-UnaryOperator 0x56324b409bd8 <col:63, col:64> 'int' prefix '!' cannot overflow
|   |       | |   | `-ImplicitCastExpr 0x56324b409bc0 <col:64> '_Bool' <LValueToRValue>
|   |       | |   |   `-DeclRefExpr 0x56324b409ba0 <col:64> '_Bool' lvalue Var 0x56324b407288 'x$r_buff0_thd1' '_Bool'
|   |       | |   `-UnaryOperator 0x56324b409c28 <col:82, col:83> 'int' prefix '!' cannot overflow
|   |       | |     `-ImplicitCastExpr 0x56324b409c10 <col:83> '_Bool' <LValueToRValue>
|   |       | |       `-DeclRefExpr 0x56324b409bf0 <col:83> '_Bool' lvalue Var 0x56324b407840 'x$w_buff1_used' '_Bool'
|   |       | `-BinaryOperator 0x56324b409d20 <col:101, col:121> 'int' '&&'
|   |       |   |-UnaryOperator 0x56324b409cb8 <col:101, col:102> 'int' prefix '!' cannot overflow
|   |       |   | `-ImplicitCastExpr 0x56324b409ca0 <col:102> '_Bool' <LValueToRValue>
|   |       |   |   `-DeclRefExpr 0x56324b409c80 <col:102> '_Bool' lvalue Var 0x56324b407288 'x$r_buff0_thd1' '_Bool'
|   |       |   `-UnaryOperator 0x56324b409d08 <col:120, col:121> 'int' prefix '!' cannot overflow
|   |       |     `-ImplicitCastExpr 0x56324b409cf0 <col:121> '_Bool' <LValueToRValue>
|   |       |       `-DeclRefExpr 0x56324b409cd0 <col:121> '_Bool' lvalue Var 0x56324b407468 'x$r_buff1_thd1' '_Bool'
|   |       |-ImplicitCastExpr 0x56324b409f00 <col:138> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x56324b409d60 <col:138> 'int' lvalue Var 0x56324b4077c8 'x$w_buff1' 'int'
|   |       `-ParenExpr 0x56324b409ee0 <col:150, col:207> 'int'
|   |         `-ConditionalOperator 0x56324b409eb0 <col:151, col:198> 'int'
|   |           |-BinaryOperator 0x56324b409e20 <col:151, col:169> 'int' '&&'
|   |           | |-ImplicitCastExpr 0x56324b409dd8 <col:151> 'int' <IntegralCast>
|   |           | | `-ImplicitCastExpr 0x56324b409dc0 <col:151> '_Bool' <LValueToRValue>
|   |           | |   `-DeclRefExpr 0x56324b409d80 <col:151> '_Bool' lvalue Var 0x56324b407748 'x$w_buff0_used' '_Bool'
|   |           | `-ImplicitCastExpr 0x56324b409e08 <col:169> 'int' <IntegralCast>
|   |           |   `-ImplicitCastExpr 0x56324b409df0 <col:169> '_Bool' <LValueToRValue>
|   |           |     `-DeclRefExpr 0x56324b409da0 <col:169> '_Bool' lvalue Var 0x56324b407288 'x$r_buff0_thd1' '_Bool'
|   |           |-ImplicitCastExpr 0x56324b409e80 <col:186> 'int' <LValueToRValue>
|   |           | `-DeclRefExpr 0x56324b409e40 <col:186> 'int' lvalue Var 0x56324b4077c8 'x$w_buff1' 'int'
|   |           `-ImplicitCastExpr 0x56324b409e98 <col:198> 'int' <LValueToRValue>
|   |             `-DeclRefExpr 0x56324b409e60 <col:198> 'int' lvalue Var 0x56324b4077c8 'x$w_buff1' 'int'
|   |-BinaryOperator 0x56324b40a588 <line:736:3, col:227> '_Bool' '='
|   | |-DeclRefExpr 0x56324b40a000 <col:3> '_Bool' lvalue Var 0x56324b407748 'x$w_buff0_used' '_Bool'
|   | `-ImplicitCastExpr 0x56324b40a570 <col:20, col:227> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x56324b40a540 <col:20, col:227> 'int'
|   |     |-ImplicitCastExpr 0x56324b40a4f8 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x56324b40a4e0 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x56324b40a020 <col:20> '_Bool' lvalue Var 0x56324b408b20 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x56324b40a528 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x56324b40a510 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x56324b40a040 <col:36> '_Bool' lvalue Var 0x56324b407748 'x$w_buff0_used' '_Bool'
|   |     `-ParenExpr 0x56324b40a4c0 <col:53, col:227> 'int'
|   |       `-ConditionalOperator 0x56324b40a490 <col:54, col:226> 'int'
|   |         |-BinaryOperator 0x56324b40a250 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x56324b40a170 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x56324b40a098 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x56324b40a080 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x56324b40a060 <col:55> '_Bool' lvalue Var 0x56324b407748 'x$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x56324b40a150 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x56324b40a0e8 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x56324b40a0d0 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x56324b40a0b0 <col:74> '_Bool' lvalue Var 0x56324b407288 'x$r_buff0_thd1' '_Bool'
|   |         | |   `-UnaryOperator 0x56324b40a138 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x56324b40a120 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x56324b40a100 <col:93> '_Bool' lvalue Var 0x56324b407840 'x$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x56324b40a230 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x56324b40a1c8 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x56324b40a1b0 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x56324b40a190 <col:112> '_Bool' lvalue Var 0x56324b407288 'x$r_buff0_thd1' '_Bool'
|   |         |   `-UnaryOperator 0x56324b40a218 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x56324b40a200 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x56324b40a1e0 <col:131> '_Bool' lvalue Var 0x56324b407468 'x$r_buff1_thd1' '_Bool'
|   |         |-ImplicitCastExpr 0x56324b40a478 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x56324b40a460 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x56324b40a270 <col:148> '_Bool' lvalue Var 0x56324b407748 'x$w_buff0_used' '_Bool'
|   |         `-ParenExpr 0x56324b40a440 <col:165, col:226> 'int'
|   |           `-ConditionalOperator 0x56324b40a410 <col:166, col:212> 'int'
|   |             |-BinaryOperator 0x56324b40a330 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x56324b40a2e8 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x56324b40a2d0 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x56324b40a290 <col:166> '_Bool' lvalue Var 0x56324b407748 'x$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x56324b40a318 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x56324b40a300 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x56324b40a2b0 <col:184> '_Bool' lvalue Var 0x56324b407288 'x$r_buff0_thd1' '_Bool'
|   |             |-ImplicitCastExpr 0x56324b40a3c8 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x56324b40a380 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x56324b40a350 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x56324b40a3f8 <col:212> 'int' <IntegralCast>
|   |               `-ImplicitCastExpr 0x56324b40a3e0 <col:212> '_Bool' <LValueToRValue>
|   |                 `-DeclRefExpr 0x56324b40a3a8 <col:212> '_Bool' lvalue Var 0x56324b407748 'x$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x56324b40ab88 <line:737:3, col:221> '_Bool' '='
|   | |-DeclRefExpr 0x56324b40a5a8 <col:3> '_Bool' lvalue Var 0x56324b407840 'x$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x56324b40ab70 <col:20, col:221> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x56324b40ab40 <col:20, col:221> 'int'
|   |     |-ImplicitCastExpr 0x56324b40aac0 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x56324b40aaa8 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x56324b40a5c8 <col:20> '_Bool' lvalue Var 0x56324b408b20 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x56324b40aaf0 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x56324b40aad8 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x56324b40a5e8 <col:36> '_Bool' lvalue Var 0x56324b407840 'x$w_buff1_used' '_Bool'
|   |     `-ParenExpr 0x56324b40aa88 <col:53, col:221> 'int'
|   |       `-ConditionalOperator 0x56324b40aa58 <col:54, col:220> 'int'
|   |         |-BinaryOperator 0x56324b40a7f8 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x56324b40a718 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x56324b40a640 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x56324b40a628 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x56324b40a608 <col:55> '_Bool' lvalue Var 0x56324b407748 'x$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x56324b40a6f8 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x56324b40a690 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x56324b40a678 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x56324b40a658 <col:74> '_Bool' lvalue Var 0x56324b407288 'x$r_buff0_thd1' '_Bool'
|   |         | |   `-UnaryOperator 0x56324b40a6e0 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x56324b40a6c8 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x56324b40a6a8 <col:93> '_Bool' lvalue Var 0x56324b407840 'x$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x56324b40a7d8 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x56324b40a770 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x56324b40a758 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x56324b40a738 <col:112> '_Bool' lvalue Var 0x56324b407288 'x$r_buff0_thd1' '_Bool'
|   |         |   `-UnaryOperator 0x56324b40a7c0 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x56324b40a7a8 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x56324b40a788 <col:131> '_Bool' lvalue Var 0x56324b407468 'x$r_buff1_thd1' '_Bool'
|   |         |-ImplicitCastExpr 0x56324b40aa40 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x56324b40aa28 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x56324b40a818 <col:148> '_Bool' lvalue Var 0x56324b407840 'x$w_buff1_used' '_Bool'
|   |         `-ParenExpr 0x56324b40aa08 <col:165, col:220> 'int'
|   |           `-ConditionalOperator 0x56324b40a9d8 <col:166, col:219> 'int'
|   |             |-BinaryOperator 0x56324b40a8d8 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x56324b40a890 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x56324b40a878 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x56324b40a838 <col:166> '_Bool' lvalue Var 0x56324b407748 'x$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x56324b40a8c0 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x56324b40a8a8 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x56324b40a858 <col:184> '_Bool' lvalue Var 0x56324b407288 'x$r_buff0_thd1' '_Bool'
|   |             |-ImplicitCastExpr 0x56324b40a9a8 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x56324b40a928 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x56324b40a8f8 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x56324b40a9c0 <col:212, col:219> 'int' <IntegralCast>
|   |               `-CStyleCastExpr 0x56324b40a980 <col:212, col:219> '_Bool' <IntegralToBoolean>
|   |                 `-IntegerLiteral 0x56324b40a950 <col:219> 'int' 0
|   |-BinaryOperator 0x56324b40b130 <line:738:3, col:227> '_Bool' '='
|   | |-DeclRefExpr 0x56324b40aba8 <col:3> '_Bool' lvalue Var 0x56324b407288 'x$r_buff0_thd1' '_Bool'
|   | `-ImplicitCastExpr 0x56324b40b118 <col:20, col:227> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x56324b40b0e8 <col:20, col:227> 'int'
|   |     |-ImplicitCastExpr 0x56324b40b0a0 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x56324b40b088 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x56324b40abc8 <col:20> '_Bool' lvalue Var 0x56324b408b20 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x56324b40b0d0 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x56324b40b0b8 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x56324b40abe8 <col:36> '_Bool' lvalue Var 0x56324b407288 'x$r_buff0_thd1' '_Bool'
|   |     `-ParenExpr 0x56324b40b068 <col:53, col:227> 'int'
|   |       `-ConditionalOperator 0x56324b40b038 <col:54, col:226> 'int'
|   |         |-BinaryOperator 0x56324b40adf8 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x56324b40ad18 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x56324b40ac40 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x56324b40ac28 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x56324b40ac08 <col:55> '_Bool' lvalue Var 0x56324b407748 'x$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x56324b40acf8 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x56324b40ac90 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x56324b40ac78 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x56324b40ac58 <col:74> '_Bool' lvalue Var 0x56324b407288 'x$r_buff0_thd1' '_Bool'
|   |         | |   `-UnaryOperator 0x56324b40ace0 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x56324b40acc8 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x56324b40aca8 <col:93> '_Bool' lvalue Var 0x56324b407840 'x$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x56324b40add8 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x56324b40ad70 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x56324b40ad58 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x56324b40ad38 <col:112> '_Bool' lvalue Var 0x56324b407288 'x$r_buff0_thd1' '_Bool'
|   |         |   `-UnaryOperator 0x56324b40adc0 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x56324b40ada8 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x56324b40ad88 <col:131> '_Bool' lvalue Var 0x56324b407468 'x$r_buff1_thd1' '_Bool'
|   |         |-ImplicitCastExpr 0x56324b40b020 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x56324b40b008 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x56324b40ae18 <col:148> '_Bool' lvalue Var 0x56324b407288 'x$r_buff0_thd1' '_Bool'
|   |         `-ParenExpr 0x56324b40afe8 <col:165, col:226> 'int'
|   |           `-ConditionalOperator 0x56324b40afb8 <col:166, col:212> 'int'
|   |             |-BinaryOperator 0x56324b40aed8 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x56324b40ae90 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x56324b40ae78 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x56324b40ae38 <col:166> '_Bool' lvalue Var 0x56324b407748 'x$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x56324b40aec0 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x56324b40aea8 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x56324b40ae58 <col:184> '_Bool' lvalue Var 0x56324b407288 'x$r_buff0_thd1' '_Bool'
|   |             |-ImplicitCastExpr 0x56324b40af70 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x56324b40af28 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x56324b40aef8 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x56324b40afa0 <col:212> 'int' <IntegralCast>
|   |               `-ImplicitCastExpr 0x56324b40af88 <col:212> '_Bool' <LValueToRValue>
|   |                 `-DeclRefExpr 0x56324b40af50 <col:212> '_Bool' lvalue Var 0x56324b407288 'x$r_buff0_thd1' '_Bool'
|   |-BinaryOperator 0x56324b40b6f8 <line:739:3, col:221> '_Bool' '='
|   | |-DeclRefExpr 0x56324b40b150 <col:3> '_Bool' lvalue Var 0x56324b407468 'x$r_buff1_thd1' '_Bool'
|   | `-ImplicitCastExpr 0x56324b40b6e0 <col:20, col:221> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x56324b40b6b0 <col:20, col:221> 'int'
|   |     |-ImplicitCastExpr 0x56324b40b668 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x56324b40b650 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x56324b40b170 <col:20> '_Bool' lvalue Var 0x56324b408b20 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x56324b40b698 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x56324b40b680 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x56324b40b190 <col:36> '_Bool' lvalue Var 0x56324b407468 'x$r_buff1_thd1' '_Bool'
|   |     `-ParenExpr 0x56324b40b630 <col:53, col:221> 'int'
|   |       `-ConditionalOperator 0x56324b40b600 <col:54, col:220> 'int'
|   |         |-BinaryOperator 0x56324b40b3a0 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x56324b40b2c0 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x56324b40b1e8 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x56324b40b1d0 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x56324b40b1b0 <col:55> '_Bool' lvalue Var 0x56324b407748 'x$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x56324b40b2a0 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x56324b40b238 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x56324b40b220 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x56324b40b200 <col:74> '_Bool' lvalue Var 0x56324b407288 'x$r_buff0_thd1' '_Bool'
|   |         | |   `-UnaryOperator 0x56324b40b288 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x56324b40b270 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x56324b40b250 <col:93> '_Bool' lvalue Var 0x56324b407840 'x$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x56324b40b380 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x56324b40b318 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x56324b40b300 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x56324b40b2e0 <col:112> '_Bool' lvalue Var 0x56324b407288 'x$r_buff0_thd1' '_Bool'
|   |         |   `-UnaryOperator 0x56324b40b368 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x56324b40b350 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x56324b40b330 <col:131> '_Bool' lvalue Var 0x56324b407468 'x$r_buff1_thd1' '_Bool'
|   |         |-ImplicitCastExpr 0x56324b40b5e8 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x56324b40b5d0 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x56324b40b3c0 <col:148> '_Bool' lvalue Var 0x56324b407468 'x$r_buff1_thd1' '_Bool'
|   |         `-ParenExpr 0x56324b40b5b0 <col:165, col:220> 'int'
|   |           `-ConditionalOperator 0x56324b40b580 <col:166, col:219> 'int'
|   |             |-BinaryOperator 0x56324b40b480 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x56324b40b438 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x56324b40b420 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x56324b40b3e0 <col:166> '_Bool' lvalue Var 0x56324b407748 'x$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x56324b40b468 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x56324b40b450 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x56324b40b400 <col:184> '_Bool' lvalue Var 0x56324b407288 'x$r_buff0_thd1' '_Bool'
|   |             |-ImplicitCastExpr 0x56324b40b550 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x56324b40b4d0 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x56324b40b4a0 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x56324b40b568 <col:212, col:219> 'int' <IntegralCast>
|   |               `-CStyleCastExpr 0x56324b40b528 <col:212, col:219> '_Bool' <IntegralToBoolean>
|   |                 `-IntegerLiteral 0x56324b40b4f8 <col:219> 'int' 0
|   |-BinaryOperator 0x56324b40b770 <line:740:3, col:25> 'int' '='
|   | |-DeclRefExpr 0x56324b40b718 <col:3> 'int' lvalue Var 0x56324b406440 '__unbuffered_p0_EAX' 'int'
|   | `-ImplicitCastExpr 0x56324b40b758 <col:25> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x56324b40b738 <col:25> 'int' lvalue Var 0x56324b407080 'x' 'int'
|   |-BinaryOperator 0x56324b40b8a0 <line:741:3, col:37> 'int' '='
|   | |-DeclRefExpr 0x56324b40b790 <col:3> 'int' lvalue Var 0x56324b407080 'x' 'int'
|   | `-ConditionalOperator 0x56324b40b870 <col:7, col:37> 'int'
|   |   |-ImplicitCastExpr 0x56324b40b828 <col:7> 'int' <IntegralCast>
|   |   | `-ImplicitCastExpr 0x56324b40b810 <col:7> '_Bool' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x56324b40b7b0 <col:7> '_Bool' lvalue Var 0x56324b407118 'x$flush_delayed' '_Bool'
|   |   |-ImplicitCastExpr 0x56324b40b840 <col:25> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x56324b40b7d0 <col:25> 'int' lvalue Var 0x56324b407198 'x$mem_tmp' 'int'
|   |   `-ImplicitCastExpr 0x56324b40b858 <col:37> 'int' <LValueToRValue>
|   |     `-DeclRefExpr 0x56324b40b7f0 <col:37> 'int' lvalue Var 0x56324b407080 'x' 'int'
|   |-BinaryOperator 0x56324b40b938 <line:742:3, col:28> '_Bool' '='
|   | |-DeclRefExpr 0x56324b40b8c0 <col:3> '_Bool' lvalue Var 0x56324b407118 'x$flush_delayed' '_Bool'
|   | `-CStyleCastExpr 0x56324b40b910 <col:21, col:28> '_Bool' <IntegralToBoolean>
|   |   `-IntegerLiteral 0x56324b40b8e0 <col:28> 'int' 0
|   |-CallExpr 0x56324b40b990 <line:743:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x56324b40b978 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x56324b40b958 <col:3> 'void ()' Function 0x56324b3ad060 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x56324b40b9e8 <line:744:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x56324b40b9d0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x56324b40b9b0 <col:3> 'void ()' Function 0x56324b3acfa0 '__VERIFIER_atomic_begin' 'void ()'
|   |-CallExpr 0x56324b40ba40 <line:745:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x56324b40ba28 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x56324b40ba08 <col:3> 'void ()' Function 0x56324b3ad060 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x56324b40ba98 <line:746:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x56324b40ba80 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x56324b40ba60 <col:3> 'void ()' Function 0x56324b3acfa0 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x56324b40bb70 <line:747:3, col:41> 'int' '='
|   | |-DeclRefExpr 0x56324b40bab8 <col:3> 'int' lvalue Var 0x56324b406320 '__unbuffered_cnt' 'int'
|   | `-BinaryOperator 0x56324b40bb50 <col:22, col:41> 'int' '+'
|   |   |-ImplicitCastExpr 0x56324b40bb18 <col:22> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x56324b40bad8 <col:22> 'int' lvalue Var 0x56324b406320 '__unbuffered_cnt' 'int'
|   |   `-IntegerLiteral 0x56324b40baf8 <col:41> 'int' 1
|   |-CallExpr 0x56324b40bbc8 <line:748:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x56324b40bbb0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x56324b40bb90 <col:3> 'void ()' Function 0x56324b3ad060 '__VERIFIER_atomic_end' 'void ()'
|   `-ReturnStmt 0x56324b40bc78 <line:749:3, col:36>
|     `-CallExpr 0x56324b40bc58 <col:10, col:36> 'void *'
|       `-ImplicitCastExpr 0x56324b40bc40 <col:10> 'void *(*)(void)' <FunctionToPointerDecay>
|         `-DeclRefExpr 0x56324b40bbe8 <col:10> 'void *(void)' Function 0x56324b3acab8 '__VERIFIER_nondet_pointer' 'void *(void)'
|-FunctionDecl 0x56324b40be20 prev 0x56324b405e48 <line:751:1, line:767:1> line:751:8 used P1 'void *(void *)'
| |-ParmVarDecl 0x56324b40bd88 <col:11, col:17> col:17 arg 'void *'
| `-CompoundStmt 0x56324b40cf38 <line:752:1, line:767:1>
|   |-CallExpr 0x56324b40bf00 <line:753:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x56324b40bee8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x56324b40bec8 <col:3> 'void ()' Function 0x56324b3acfa0 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x56324b40bf60 <line:754:3, col:7> 'int' '='
|   | |-DeclRefExpr 0x56324b40bf20 <col:3> 'int' lvalue Var 0x56324b407080 'x' 'int'
|   | `-IntegerLiteral 0x56324b40bf40 <col:7> 'int' 1
|   |-CallExpr 0x56324b40bfb8 <line:755:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x56324b40bfa0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x56324b40bf80 <col:3> 'void ()' Function 0x56324b3ad060 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x56324b40c010 <line:756:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x56324b40bff8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x56324b40bfd8 <col:3> 'void ()' Function 0x56324b3acfa0 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x56324b40c2f8 <line:757:3, col:103> 'int' '='
|   | |-DeclRefExpr 0x56324b40c030 <col:3> 'int' lvalue Var 0x56324b407080 'x' 'int'
|   | `-ConditionalOperator 0x56324b40c2c8 <col:7, col:103> 'int'
|   |   |-BinaryOperator 0x56324b40c0f0 <col:7, col:25> 'int' '&&'
|   |   | |-ImplicitCastExpr 0x56324b40c0a8 <col:7> 'int' <IntegralCast>
|   |   | | `-ImplicitCastExpr 0x56324b40c090 <col:7> '_Bool' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x56324b40c050 <col:7> '_Bool' lvalue Var 0x56324b407748 'x$w_buff0_used' '_Bool'
|   |   | `-ImplicitCastExpr 0x56324b40c0d8 <col:25> 'int' <IntegralCast>
|   |   |   `-ImplicitCastExpr 0x56324b40c0c0 <col:25> '_Bool' <LValueToRValue>
|   |   |     `-DeclRefExpr 0x56324b40c070 <col:25> '_Bool' lvalue Var 0x56324b407300 'x$r_buff0_thd2' '_Bool'
|   |   |-ImplicitCastExpr 0x56324b40c2b0 <col:42> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x56324b40c110 <col:42> 'int' lvalue Var 0x56324b4076d0 'x$w_buff0' 'int'
|   |   `-ParenExpr 0x56324b40c290 <col:54, col:103> 'int'
|   |     `-ConditionalOperator 0x56324b40c260 <col:55, col:102> 'int'
|   |       |-BinaryOperator 0x56324b40c1d0 <col:55, col:73> 'int' '&&'
|   |       | |-ImplicitCastExpr 0x56324b40c188 <col:55> 'int' <IntegralCast>
|   |       | | `-ImplicitCastExpr 0x56324b40c170 <col:55> '_Bool' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x56324b40c130 <col:55> '_Bool' lvalue Var 0x56324b407840 'x$w_buff1_used' '_Bool'
|   |       | `-ImplicitCastExpr 0x56324b40c1b8 <col:73> 'int' <IntegralCast>
|   |       |   `-ImplicitCastExpr 0x56324b40c1a0 <col:73> '_Bool' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x56324b40c150 <col:73> '_Bool' lvalue Var 0x56324b4074e0 'x$r_buff1_thd2' '_Bool'
|   |       |-ImplicitCastExpr 0x56324b40c230 <col:90> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x56324b40c1f0 <col:90> 'int' lvalue Var 0x56324b4077c8 'x$w_buff1' 'int'
|   |       `-ImplicitCastExpr 0x56324b40c248 <col:102> 'int' <LValueToRValue>
|   |         `-DeclRefExpr 0x56324b40c210 <col:102> 'int' lvalue Var 0x56324b407080 'x' 'int'
|   |-BinaryOperator 0x56324b40c500 <line:758:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x56324b40c318 <col:3> '_Bool' lvalue Var 0x56324b407748 'x$w_buff0_used' '_Bool'
|   | `-ImplicitCastExpr 0x56324b40c4e8 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x56324b40c4b8 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x56324b40c3d8 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x56324b40c390 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x56324b40c378 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x56324b40c338 <col:20> '_Bool' lvalue Var 0x56324b407748 'x$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x56324b40c3c0 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x56324b40c3a8 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x56324b40c358 <col:38> '_Bool' lvalue Var 0x56324b407300 'x$r_buff0_thd2' '_Bool'
|   |     |-ImplicitCastExpr 0x56324b40c470 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x56324b40c428 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x56324b40c3f8 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x56324b40c4a0 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x56324b40c488 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x56324b40c450 <col:66> '_Bool' lvalue Var 0x56324b407748 'x$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x56324b40c7e8 <line:759:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x56324b40c520 <col:3> '_Bool' lvalue Var 0x56324b407840 'x$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x56324b40c7d0 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x56324b40c7a0 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x56324b40c6c0 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x56324b40c5e0 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x56324b40c598 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x56324b40c580 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x56324b40c540 <col:20> '_Bool' lvalue Var 0x56324b407748 'x$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x56324b40c5c8 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x56324b40c5b0 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x56324b40c560 <col:38> '_Bool' lvalue Var 0x56324b407300 'x$r_buff0_thd2' '_Bool'
|   |     | `-BinaryOperator 0x56324b40c6a0 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x56324b40c658 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x56324b40c640 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x56324b40c600 <col:56> '_Bool' lvalue Var 0x56324b407840 'x$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x56324b40c688 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x56324b40c670 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x56324b40c620 <col:74> '_Bool' lvalue Var 0x56324b4074e0 'x$r_buff1_thd2' '_Bool'
|   |     |-ImplicitCastExpr 0x56324b40c758 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x56324b40c710 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x56324b40c6e0 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x56324b40c788 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x56324b40c770 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x56324b40c738 <col:102> '_Bool' lvalue Var 0x56324b407840 'x$w_buff1_used' '_Bool'
|   |-BinaryOperator 0x56324b40c9f0 <line:760:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x56324b40c808 <col:3> '_Bool' lvalue Var 0x56324b407300 'x$r_buff0_thd2' '_Bool'
|   | `-ImplicitCastExpr 0x56324b40c9d8 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x56324b40c9a8 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x56324b40c8c8 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x56324b40c880 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x56324b40c868 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x56324b40c828 <col:20> '_Bool' lvalue Var 0x56324b407748 'x$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x56324b40c8b0 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x56324b40c898 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x56324b40c848 <col:38> '_Bool' lvalue Var 0x56324b407300 'x$r_buff0_thd2' '_Bool'
|   |     |-ImplicitCastExpr 0x56324b40c960 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x56324b40c918 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x56324b40c8e8 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x56324b40c990 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x56324b40c978 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x56324b40c940 <col:66> '_Bool' lvalue Var 0x56324b407300 'x$r_buff0_thd2' '_Bool'
|   |-BinaryOperator 0x56324b40ccf0 <line:761:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x56324b40ca10 <col:3> '_Bool' lvalue Var 0x56324b4074e0 'x$r_buff1_thd2' '_Bool'
|   | `-ImplicitCastExpr 0x56324b40ccd8 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x56324b40cca8 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x56324b40cbc8 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x56324b40cad0 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x56324b40ca88 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x56324b40ca70 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x56324b40ca30 <col:20> '_Bool' lvalue Var 0x56324b407748 'x$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x56324b40cab8 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x56324b40caa0 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x56324b40ca50 <col:38> '_Bool' lvalue Var 0x56324b407300 'x$r_buff0_thd2' '_Bool'
|   |     | `-BinaryOperator 0x56324b40cba8 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x56324b40cb60 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x56324b40cb30 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x56324b40caf0 <col:56> '_Bool' lvalue Var 0x56324b407840 'x$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x56324b40cb90 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x56324b40cb78 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x56324b40cb10 <col:74> '_Bool' lvalue Var 0x56324b4074e0 'x$r_buff1_thd2' '_Bool'
|   |     |-ImplicitCastExpr 0x56324b40cc60 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x56324b40cc18 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x56324b40cbe8 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x56324b40cc90 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x56324b40cc78 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x56324b40cc40 <col:102> '_Bool' lvalue Var 0x56324b4074e0 'x$r_buff1_thd2' '_Bool'
|   |-CallExpr 0x56324b40cd48 <line:762:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x56324b40cd30 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x56324b40cd10 <col:3> 'void ()' Function 0x56324b3ad060 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x56324b40cda0 <line:763:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x56324b40cd88 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x56324b40cd68 <col:3> 'void ()' Function 0x56324b3acfa0 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x56324b40ce58 <line:764:3, col:41> 'int' '='
|   | |-DeclRefExpr 0x56324b40cdc0 <col:3> 'int' lvalue Var 0x56324b406320 '__unbuffered_cnt' 'int'
|   | `-BinaryOperator 0x56324b40ce38 <col:22, col:41> 'int' '+'
|   |   |-ImplicitCastExpr 0x56324b40ce20 <col:22> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x56324b40cde0 <col:22> 'int' lvalue Var 0x56324b406320 '__unbuffered_cnt' 'int'
|   |   `-IntegerLiteral 0x56324b40ce00 <col:41> 'int' 1
|   |-CallExpr 0x56324b40ceb0 <line:765:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x56324b40ce98 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x56324b40ce78 <col:3> 'void ()' Function 0x56324b3ad060 '__VERIFIER_atomic_end' 'void ()'
|   `-ReturnStmt 0x56324b40cf28 <line:766:3, col:36>
|     `-CallExpr 0x56324b40cf08 <col:10, col:36> 'void *'
|       `-ImplicitCastExpr 0x56324b40cef0 <col:10> 'void *(*)(void)' <FunctionToPointerDecay>
|         `-DeclRefExpr 0x56324b40ced0 <col:10> 'void *(void)' Function 0x56324b3acab8 '__VERIFIER_nondet_pointer' 'void *(void)'
|-FunctionDecl 0x56324b40d068 prev 0x56324b405fa0 <line:768:1, line:802:1> line:768:8 used P2 'void *(void *)'
| |-ParmVarDecl 0x56324b40cfd0 <col:11, col:17> col:17 arg 'void *'
| `-CompoundStmt 0x56324b410d50 <line:769:1, line:802:1>
|   |-CallExpr 0x56324b40d148 <line:770:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x56324b40d130 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x56324b40d110 <col:3> 'void ()' Function 0x56324b3acfa0 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x56324b40d1e0 <line:771:3, col:42> '_Bool' '='
|   | |-DeclRefExpr 0x56324b40d168 <col:3> '_Bool' lvalue Var 0x56324b4079d8 'weak$$choice0' '_Bool'
|   | `-CallExpr 0x56324b40d1c0 <col:19, col:42> '_Bool'
|   |   `-ImplicitCastExpr 0x56324b40d1a8 <col:19> '_Bool (*)(void)' <FunctionToPointerDecay>
|   |     `-DeclRefExpr 0x56324b40d188 <col:19> '_Bool (void)' Function 0x56324b3ac770 '__VERIFIER_nondet_bool' '_Bool (void)'
|   |-BinaryOperator 0x56324b40d278 <line:772:3, col:42> '_Bool' '='
|   | |-DeclRefExpr 0x56324b40d200 <col:3> '_Bool' lvalue Var 0x56324b408b20 'weak$$choice2' '_Bool'
|   | `-CallExpr 0x56324b40d258 <col:19, col:42> '_Bool'
|   |   `-ImplicitCastExpr 0x56324b40d240 <col:19> '_Bool (*)(void)' <FunctionToPointerDecay>
|   |     `-DeclRefExpr 0x56324b40d220 <col:19> '_Bool (void)' Function 0x56324b3ac770 '__VERIFIER_nondet_bool' '_Bool (void)'
|   |-BinaryOperator 0x56324b40d2f0 <line:773:3, col:21> '_Bool' '='
|   | |-DeclRefExpr 0x56324b40d298 <col:3> '_Bool' lvalue Var 0x56324b407118 'x$flush_delayed' '_Bool'
|   | `-ImplicitCastExpr 0x56324b40d2d8 <col:21> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x56324b40d2b8 <col:21> '_Bool' lvalue Var 0x56324b408b20 'weak$$choice2' '_Bool'
|   |-BinaryOperator 0x56324b40d368 <line:774:3, col:15> 'int' '='
|   | |-DeclRefExpr 0x56324b40d310 <col:3> 'int' lvalue Var 0x56324b407198 'x$mem_tmp' 'int'
|   | `-ImplicitCastExpr 0x56324b40d350 <col:15> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x56324b40d330 <col:15> 'int' lvalue Var 0x56324b407080 'x' 'int'
|   |-BinaryOperator 0x56324b40d7a0 <line:775:3, col:162> 'int' '='
|   | |-DeclRefExpr 0x56324b40d388 <col:3> 'int' lvalue Var 0x56324b407080 'x' 'int'
|   | `-ConditionalOperator 0x56324b40d770 <col:7, col:162> 'int'
|   |   |-BinaryOperator 0x56324b40d598 <col:7, col:84> 'int' '||'
|   |   | |-BinaryOperator 0x56324b40d4b8 <col:7, col:46> 'int' '||'
|   |   | | |-UnaryOperator 0x56324b40d3e0 <col:7, col:8> 'int' prefix '!' cannot overflow
|   |   | | | `-ImplicitCastExpr 0x56324b40d3c8 <col:8> '_Bool' <LValueToRValue>
|   |   | | |   `-DeclRefExpr 0x56324b40d3a8 <col:8> '_Bool' lvalue Var 0x56324b407748 'x$w_buff0_used' '_Bool'
|   |   | | `-BinaryOperator 0x56324b40d498 <col:26, col:46> 'int' '&&'
|   |   | |   |-UnaryOperator 0x56324b40d430 <col:26, col:27> 'int' prefix '!' cannot overflow
|   |   | |   | `-ImplicitCastExpr 0x56324b40d418 <col:27> '_Bool' <LValueToRValue>
|   |   | |   |   `-DeclRefExpr 0x56324b40d3f8 <col:27> '_Bool' lvalue Var 0x56324b407378 'x$r_buff0_thd3' '_Bool'
|   |   | |   `-UnaryOperator 0x56324b40d480 <col:45, col:46> 'int' prefix '!' cannot overflow
|   |   | |     `-ImplicitCastExpr 0x56324b40d468 <col:46> '_Bool' <LValueToRValue>
|   |   | |       `-DeclRefExpr 0x56324b40d448 <col:46> '_Bool' lvalue Var 0x56324b407840 'x$w_buff1_used' '_Bool'
|   |   | `-BinaryOperator 0x56324b40d578 <col:64, col:84> 'int' '&&'
|   |   |   |-UnaryOperator 0x56324b40d510 <col:64, col:65> 'int' prefix '!' cannot overflow
|   |   |   | `-ImplicitCastExpr 0x56324b40d4f8 <col:65> '_Bool' <LValueToRValue>
|   |   |   |   `-DeclRefExpr 0x56324b40d4d8 <col:65> '_Bool' lvalue Var 0x56324b407378 'x$r_buff0_thd3' '_Bool'
|   |   |   `-UnaryOperator 0x56324b40d560 <col:83, col:84> 'int' prefix '!' cannot overflow
|   |   |     `-ImplicitCastExpr 0x56324b40d548 <col:84> '_Bool' <LValueToRValue>
|   |   |       `-DeclRefExpr 0x56324b40d528 <col:84> '_Bool' lvalue Var 0x56324b407558 'x$r_buff1_thd3' '_Bool'
|   |   |-ImplicitCastExpr 0x56324b40d758 <col:101> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x56324b40d5b8 <col:101> 'int' lvalue Var 0x56324b407080 'x' 'int'
|   |   `-ParenExpr 0x56324b40d738 <col:105, col:162> 'int'
|   |     `-ConditionalOperator 0x56324b40d708 <col:106, col:153> 'int'
|   |       |-BinaryOperator 0x56324b40d678 <col:106, col:124> 'int' '&&'
|   |       | |-ImplicitCastExpr 0x56324b40d630 <col:106> 'int' <IntegralCast>
|   |       | | `-ImplicitCastExpr 0x56324b40d618 <col:106> '_Bool' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x56324b40d5d8 <col:106> '_Bool' lvalue Var 0x56324b407748 'x$w_buff0_used' '_Bool'
|   |       | `-ImplicitCastExpr 0x56324b40d660 <col:124> 'int' <IntegralCast>
|   |       |   `-ImplicitCastExpr 0x56324b40d648 <col:124> '_Bool' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x56324b40d5f8 <col:124> '_Bool' lvalue Var 0x56324b407378 'x$r_buff0_thd3' '_Bool'
|   |       |-ImplicitCastExpr 0x56324b40d6d8 <col:141> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x56324b40d698 <col:141> 'int' lvalue Var 0x56324b4076d0 'x$w_buff0' 'int'
|   |       `-ImplicitCastExpr 0x56324b40d6f0 <col:153> 'int' <LValueToRValue>
|   |         `-DeclRefExpr 0x56324b40d6b8 <col:153> 'int' lvalue Var 0x56324b4077c8 'x$w_buff1' 'int'
|   |-BinaryOperator 0x56324b40dcd0 <line:776:3, col:208> 'int' '='
|   | |-DeclRefExpr 0x56324b40d7c0 <col:3> 'int' lvalue Var 0x56324b4076d0 'x$w_buff0' 'int'
|   | `-ConditionalOperator 0x56324b40dca0 <col:15, col:208> 'int'
|   |   |-ImplicitCastExpr 0x56324b40dc70 <col:15> 'int' <IntegralCast>
|   |   | `-ImplicitCastExpr 0x56324b40dc58 <col:15> '_Bool' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x56324b40d7e0 <col:15> '_Bool' lvalue Var 0x56324b408b20 'weak$$choice2' '_Bool'
|   |   |-ImplicitCastExpr 0x56324b40dc88 <col:31> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x56324b40d800 <col:31> 'int' lvalue Var 0x56324b4076d0 'x$w_buff0' 'int'
|   |   `-ParenExpr 0x56324b40dc38 <col:43, col:208> 'int'
|   |     `-ConditionalOperator 0x56324b40dc08 <col:44, col:207> 'int'
|   |       |-BinaryOperator 0x56324b40da10 <col:44, col:121> 'int' '||'
|   |       | |-BinaryOperator 0x56324b40d930 <col:44, col:83> 'int' '||'
|   |       | | |-UnaryOperator 0x56324b40d858 <col:44, col:45> 'int' prefix '!' cannot overflow
|   |       | | | `-ImplicitCastExpr 0x56324b40d840 <col:45> '_Bool' <LValueToRValue>
|   |       | | |   `-DeclRefExpr 0x56324b40d820 <col:45> '_Bool' lvalue Var 0x56324b407748 'x$w_buff0_used' '_Bool'
|   |       | | `-BinaryOperator 0x56324b40d910 <col:63, col:83> 'int' '&&'
|   |       | |   |-UnaryOperator 0x56324b40d8a8 <col:63, col:64> 'int' prefix '!' cannot overflow
|   |       | |   | `-ImplicitCastExpr 0x56324b40d890 <col:64> '_Bool' <LValueToRValue>
|   |       | |   |   `-DeclRefExpr 0x56324b40d870 <col:64> '_Bool' lvalue Var 0x56324b407378 'x$r_buff0_thd3' '_Bool'
|   |       | |   `-UnaryOperator 0x56324b40d8f8 <col:82, col:83> 'int' prefix '!' cannot overflow
|   |       | |     `-ImplicitCastExpr 0x56324b40d8e0 <col:83> '_Bool' <LValueToRValue>
|   |       | |       `-DeclRefExpr 0x56324b40d8c0 <col:83> '_Bool' lvalue Var 0x56324b407840 'x$w_buff1_used' '_Bool'
|   |       | `-BinaryOperator 0x56324b40d9f0 <col:101, col:121> 'int' '&&'
|   |       |   |-UnaryOperator 0x56324b40d988 <col:101, col:102> 'int' prefix '!' cannot overflow
|   |       |   | `-ImplicitCastExpr 0x56324b40d970 <col:102> '_Bool' <LValueToRValue>
|   |       |   |   `-DeclRefExpr 0x56324b40d950 <col:102> '_Bool' lvalue Var 0x56324b407378 'x$r_buff0_thd3' '_Bool'
|   |       |   `-UnaryOperator 0x56324b40d9d8 <col:120, col:121> 'int' prefix '!' cannot overflow
|   |       |     `-ImplicitCastExpr 0x56324b40d9c0 <col:121> '_Bool' <LValueToRValue>
|   |       |       `-DeclRefExpr 0x56324b40d9a0 <col:121> '_Bool' lvalue Var 0x56324b407558 'x$r_buff1_thd3' '_Bool'
|   |       |-ImplicitCastExpr 0x56324b40dbf0 <col:138> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x56324b40da30 <col:138> 'int' lvalue Var 0x56324b4076d0 'x$w_buff0' 'int'
|   |       `-ParenExpr 0x56324b40dbd0 <col:150, col:207> 'int'
|   |         `-ConditionalOperator 0x56324b40dba0 <col:151, col:198> 'int'
|   |           |-BinaryOperator 0x56324b40daf0 <col:151, col:169> 'int' '&&'
|   |           | |-ImplicitCastExpr 0x56324b40daa8 <col:151> 'int' <IntegralCast>
|   |           | | `-ImplicitCastExpr 0x56324b40da90 <col:151> '_Bool' <LValueToRValue>
|   |           | |   `-DeclRefExpr 0x56324b40da50 <col:151> '_Bool' lvalue Var 0x56324b407748 'x$w_buff0_used' '_Bool'
|   |           | `-ImplicitCastExpr 0x56324b40dad8 <col:169> 'int' <IntegralCast>
|   |           |   `-ImplicitCastExpr 0x56324b40dac0 <col:169> '_Bool' <LValueToRValue>
|   |           |     `-DeclRefExpr 0x56324b40da70 <col:169> '_Bool' lvalue Var 0x56324b407378 'x$r_buff0_thd3' '_Bool'
|   |           |-ImplicitCastExpr 0x56324b40db70 <col:186> 'int' <LValueToRValue>
|   |           | `-DeclRefExpr 0x56324b40db10 <col:186> 'int' lvalue Var 0x56324b4076d0 'x$w_buff0' 'int'
|   |           `-ImplicitCastExpr 0x56324b40db88 <col:198> 'int' <LValueToRValue>
|   |             `-DeclRefExpr 0x56324b40db30 <col:198> 'int' lvalue Var 0x56324b4076d0 'x$w_buff0' 'int'
|   |-BinaryOperator 0x56324b40e1e0 <line:777:3, col:208> 'int' '='
|   | |-DeclRefExpr 0x56324b40dcf0 <col:3> 'int' lvalue Var 0x56324b4077c8 'x$w_buff1' 'int'
|   | `-ConditionalOperator 0x56324b40e1b0 <col:15, col:208> 'int'
|   |   |-ImplicitCastExpr 0x56324b40e180 <col:15> 'int' <IntegralCast>
|   |   | `-ImplicitCastExpr 0x56324b40e168 <col:15> '_Bool' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x56324b40dd10 <col:15> '_Bool' lvalue Var 0x56324b408b20 'weak$$choice2' '_Bool'
|   |   |-ImplicitCastExpr 0x56324b40e198 <col:31> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x56324b40dd30 <col:31> 'int' lvalue Var 0x56324b4077c8 'x$w_buff1' 'int'
|   |   `-ParenExpr 0x56324b40e148 <col:43, col:208> 'int'
|   |     `-ConditionalOperator 0x56324b40e118 <col:44, col:207> 'int'
|   |       |-BinaryOperator 0x56324b40df40 <col:44, col:121> 'int' '||'
|   |       | |-BinaryOperator 0x56324b40de60 <col:44, col:83> 'int' '||'
|   |       | | |-UnaryOperator 0x56324b40dd88 <col:44, col:45> 'int' prefix '!' cannot overflow
|   |       | | | `-ImplicitCastExpr 0x56324b40dd70 <col:45> '_Bool' <LValueToRValue>
|   |       | | |   `-DeclRefExpr 0x56324b40dd50 <col:45> '_Bool' lvalue Var 0x56324b407748 'x$w_buff0_used' '_Bool'
|   |       | | `-BinaryOperator 0x56324b40de40 <col:63, col:83> 'int' '&&'
|   |       | |   |-UnaryOperator 0x56324b40ddd8 <col:63, col:64> 'int' prefix '!' cannot overflow
|   |       | |   | `-ImplicitCastExpr 0x56324b40ddc0 <col:64> '_Bool' <LValueToRValue>
|   |       | |   |   `-DeclRefExpr 0x56324b40dda0 <col:64> '_Bool' lvalue Var 0x56324b407378 'x$r_buff0_thd3' '_Bool'
|   |       | |   `-UnaryOperator 0x56324b40de28 <col:82, col:83> 'int' prefix '!' cannot overflow
|   |       | |     `-ImplicitCastExpr 0x56324b40de10 <col:83> '_Bool' <LValueToRValue>
|   |       | |       `-DeclRefExpr 0x56324b40ddf0 <col:83> '_Bool' lvalue Var 0x56324b407840 'x$w_buff1_used' '_Bool'
|   |       | `-BinaryOperator 0x56324b40df20 <col:101, col:121> 'int' '&&'
|   |       |   |-UnaryOperator 0x56324b40deb8 <col:101, col:102> 'int' prefix '!' cannot overflow
|   |       |   | `-ImplicitCastExpr 0x56324b40dea0 <col:102> '_Bool' <LValueToRValue>
|   |       |   |   `-DeclRefExpr 0x56324b40de80 <col:102> '_Bool' lvalue Var 0x56324b407378 'x$r_buff0_thd3' '_Bool'
|   |       |   `-UnaryOperator 0x56324b40df08 <col:120, col:121> 'int' prefix '!' cannot overflow
|   |       |     `-ImplicitCastExpr 0x56324b40def0 <col:121> '_Bool' <LValueToRValue>
|   |       |       `-DeclRefExpr 0x56324b40ded0 <col:121> '_Bool' lvalue Var 0x56324b407558 'x$r_buff1_thd3' '_Bool'
|   |       |-ImplicitCastExpr 0x56324b40e100 <col:138> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x56324b40df60 <col:138> 'int' lvalue Var 0x56324b4077c8 'x$w_buff1' 'int'
|   |       `-ParenExpr 0x56324b40e0e0 <col:150, col:207> 'int'
|   |         `-ConditionalOperator 0x56324b40e0b0 <col:151, col:198> 'int'
|   |           |-BinaryOperator 0x56324b40e020 <col:151, col:169> 'int' '&&'
|   |           | |-ImplicitCastExpr 0x56324b40dfd8 <col:151> 'int' <IntegralCast>
|   |           | | `-ImplicitCastExpr 0x56324b40dfc0 <col:151> '_Bool' <LValueToRValue>
|   |           | |   `-DeclRefExpr 0x56324b40df80 <col:151> '_Bool' lvalue Var 0x56324b407748 'x$w_buff0_used' '_Bool'
|   |           | `-ImplicitCastExpr 0x56324b40e008 <col:169> 'int' <IntegralCast>
|   |           |   `-ImplicitCastExpr 0x56324b40dff0 <col:169> '_Bool' <LValueToRValue>
|   |           |     `-DeclRefExpr 0x56324b40dfa0 <col:169> '_Bool' lvalue Var 0x56324b407378 'x$r_buff0_thd3' '_Bool'
|   |           |-ImplicitCastExpr 0x56324b40e080 <col:186> 'int' <LValueToRValue>
|   |           | `-DeclRefExpr 0x56324b40e040 <col:186> 'int' lvalue Var 0x56324b4077c8 'x$w_buff1' 'int'
|   |           `-ImplicitCastExpr 0x56324b40e098 <col:198> 'int' <LValueToRValue>
|   |             `-DeclRefExpr 0x56324b40e060 <col:198> 'int' lvalue Var 0x56324b4077c8 'x$w_buff1' 'int'
|   |-BinaryOperator 0x56324b40e788 <line:778:3, col:227> '_Bool' '='
|   | |-DeclRefExpr 0x56324b40e200 <col:3> '_Bool' lvalue Var 0x56324b407748 'x$w_buff0_used' '_Bool'
|   | `-ImplicitCastExpr 0x56324b40e770 <col:20, col:227> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x56324b40e740 <col:20, col:227> 'int'
|   |     |-ImplicitCastExpr 0x56324b40e6f8 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x56324b40e6e0 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x56324b40e220 <col:20> '_Bool' lvalue Var 0x56324b408b20 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x56324b40e728 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x56324b40e710 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x56324b40e240 <col:36> '_Bool' lvalue Var 0x56324b407748 'x$w_buff0_used' '_Bool'
|   |     `-ParenExpr 0x56324b40e6c0 <col:53, col:227> 'int'
|   |       `-ConditionalOperator 0x56324b40e690 <col:54, col:226> 'int'
|   |         |-BinaryOperator 0x56324b40e450 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x56324b40e370 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x56324b40e298 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x56324b40e280 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x56324b40e260 <col:55> '_Bool' lvalue Var 0x56324b407748 'x$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x56324b40e350 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x56324b40e2e8 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x56324b40e2d0 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x56324b40e2b0 <col:74> '_Bool' lvalue Var 0x56324b407378 'x$r_buff0_thd3' '_Bool'
|   |         | |   `-UnaryOperator 0x56324b40e338 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x56324b40e320 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x56324b40e300 <col:93> '_Bool' lvalue Var 0x56324b407840 'x$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x56324b40e430 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x56324b40e3c8 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x56324b40e3b0 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x56324b40e390 <col:112> '_Bool' lvalue Var 0x56324b407378 'x$r_buff0_thd3' '_Bool'
|   |         |   `-UnaryOperator 0x56324b40e418 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x56324b40e400 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x56324b40e3e0 <col:131> '_Bool' lvalue Var 0x56324b407558 'x$r_buff1_thd3' '_Bool'
|   |         |-ImplicitCastExpr 0x56324b40e678 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x56324b40e660 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x56324b40e470 <col:148> '_Bool' lvalue Var 0x56324b407748 'x$w_buff0_used' '_Bool'
|   |         `-ParenExpr 0x56324b40e640 <col:165, col:226> 'int'
|   |           `-ConditionalOperator 0x56324b40e610 <col:166, col:212> 'int'
|   |             |-BinaryOperator 0x56324b40e530 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x56324b40e4e8 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x56324b40e4d0 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x56324b40e490 <col:166> '_Bool' lvalue Var 0x56324b407748 'x$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x56324b40e518 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x56324b40e500 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x56324b40e4b0 <col:184> '_Bool' lvalue Var 0x56324b407378 'x$r_buff0_thd3' '_Bool'
|   |             |-ImplicitCastExpr 0x56324b40e5c8 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x56324b40e580 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x56324b40e550 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x56324b40e5f8 <col:212> 'int' <IntegralCast>
|   |               `-ImplicitCastExpr 0x56324b40e5e0 <col:212> '_Bool' <LValueToRValue>
|   |                 `-DeclRefExpr 0x56324b40e5a8 <col:212> '_Bool' lvalue Var 0x56324b407748 'x$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x56324b40ed60 <line:779:3, col:221> '_Bool' '='
|   | |-DeclRefExpr 0x56324b40e7a8 <col:3> '_Bool' lvalue Var 0x56324b407840 'x$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x56324b40ed48 <col:20, col:221> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x56324b40ed18 <col:20, col:221> 'int'
|   |     |-ImplicitCastExpr 0x56324b40ecd0 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x56324b40ecb8 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x56324b40e7c8 <col:20> '_Bool' lvalue Var 0x56324b408b20 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x56324b40ed00 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x56324b40ece8 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x56324b40e7e8 <col:36> '_Bool' lvalue Var 0x56324b407840 'x$w_buff1_used' '_Bool'
|   |     `-ParenExpr 0x56324b40ec98 <col:53, col:221> 'int'
|   |       `-ConditionalOperator 0x56324b40ec68 <col:54, col:220> 'int'
|   |         |-BinaryOperator 0x56324b40e9f8 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x56324b40e918 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x56324b40e840 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x56324b40e828 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x56324b40e808 <col:55> '_Bool' lvalue Var 0x56324b407748 'x$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x56324b40e8f8 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x56324b40e890 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x56324b40e878 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x56324b40e858 <col:74> '_Bool' lvalue Var 0x56324b407378 'x$r_buff0_thd3' '_Bool'
|   |         | |   `-UnaryOperator 0x56324b40e8e0 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x56324b40e8c8 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x56324b40e8a8 <col:93> '_Bool' lvalue Var 0x56324b407840 'x$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x56324b40e9d8 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x56324b40e970 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x56324b40e958 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x56324b40e938 <col:112> '_Bool' lvalue Var 0x56324b407378 'x$r_buff0_thd3' '_Bool'
|   |         |   `-UnaryOperator 0x56324b40e9c0 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x56324b40e9a8 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x56324b40e988 <col:131> '_Bool' lvalue Var 0x56324b407558 'x$r_buff1_thd3' '_Bool'
|   |         |-ImplicitCastExpr 0x56324b40ec50 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x56324b40ec38 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x56324b40ea18 <col:148> '_Bool' lvalue Var 0x56324b407840 'x$w_buff1_used' '_Bool'
|   |         `-ParenExpr 0x56324b40ec18 <col:165, col:220> 'int'
|   |           `-ConditionalOperator 0x56324b40ebe8 <col:166, col:219> 'int'
|   |             |-BinaryOperator 0x56324b40ead8 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x56324b40ea90 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x56324b40ea78 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x56324b40ea38 <col:166> '_Bool' lvalue Var 0x56324b407748 'x$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x56324b40eac0 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x56324b40eaa8 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x56324b40ea58 <col:184> '_Bool' lvalue Var 0x56324b407378 'x$r_buff0_thd3' '_Bool'
|   |             |-ImplicitCastExpr 0x56324b40ebb8 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x56324b40eb28 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x56324b40eaf8 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x56324b40ebd0 <col:212, col:219> 'int' <IntegralCast>
|   |               `-CStyleCastExpr 0x56324b40eb90 <col:212, col:219> '_Bool' <IntegralToBoolean>
|   |                 `-IntegerLiteral 0x56324b40eb50 <col:219> 'int' 0
|   |-BinaryOperator 0x56324b40f308 <line:780:3, col:227> '_Bool' '='
|   | |-DeclRefExpr 0x56324b40ed80 <col:3> '_Bool' lvalue Var 0x56324b407378 'x$r_buff0_thd3' '_Bool'
|   | `-ImplicitCastExpr 0x56324b40f2f0 <col:20, col:227> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x56324b40f2c0 <col:20, col:227> 'int'
|   |     |-ImplicitCastExpr 0x56324b40f278 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x56324b40f260 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x56324b40eda0 <col:20> '_Bool' lvalue Var 0x56324b408b20 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x56324b40f2a8 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x56324b40f290 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x56324b40edc0 <col:36> '_Bool' lvalue Var 0x56324b407378 'x$r_buff0_thd3' '_Bool'
|   |     `-ParenExpr 0x56324b40f240 <col:53, col:227> 'int'
|   |       `-ConditionalOperator 0x56324b40f210 <col:54, col:226> 'int'
|   |         |-BinaryOperator 0x56324b40efd0 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x56324b40eef0 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x56324b40ee18 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x56324b40ee00 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x56324b40ede0 <col:55> '_Bool' lvalue Var 0x56324b407748 'x$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x56324b40eed0 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x56324b40ee68 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x56324b40ee50 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x56324b40ee30 <col:74> '_Bool' lvalue Var 0x56324b407378 'x$r_buff0_thd3' '_Bool'
|   |         | |   `-UnaryOperator 0x56324b40eeb8 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x56324b40eea0 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x56324b40ee80 <col:93> '_Bool' lvalue Var 0x56324b407840 'x$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x56324b40efb0 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x56324b40ef48 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x56324b40ef30 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x56324b40ef10 <col:112> '_Bool' lvalue Var 0x56324b407378 'x$r_buff0_thd3' '_Bool'
|   |         |   `-UnaryOperator 0x56324b40ef98 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x56324b40ef80 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x56324b40ef60 <col:131> '_Bool' lvalue Var 0x56324b407558 'x$r_buff1_thd3' '_Bool'
|   |         |-ImplicitCastExpr 0x56324b40f1f8 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x56324b40f1e0 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x56324b40eff0 <col:148> '_Bool' lvalue Var 0x56324b407378 'x$r_buff0_thd3' '_Bool'
|   |         `-ParenExpr 0x56324b40f1c0 <col:165, col:226> 'int'
|   |           `-ConditionalOperator 0x56324b40f190 <col:166, col:212> 'int'
|   |             |-BinaryOperator 0x56324b40f0b0 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x56324b40f068 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x56324b40f050 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x56324b40f010 <col:166> '_Bool' lvalue Var 0x56324b407748 'x$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x56324b40f098 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x56324b40f080 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x56324b40f030 <col:184> '_Bool' lvalue Var 0x56324b407378 'x$r_buff0_thd3' '_Bool'
|   |             |-ImplicitCastExpr 0x56324b40f148 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x56324b40f100 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x56324b40f0d0 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x56324b40f178 <col:212> 'int' <IntegralCast>
|   |               `-ImplicitCastExpr 0x56324b40f160 <col:212> '_Bool' <LValueToRValue>
|   |                 `-DeclRefExpr 0x56324b40f128 <col:212> '_Bool' lvalue Var 0x56324b407378 'x$r_buff0_thd3' '_Bool'
|   |-BinaryOperator 0x56324b40f8d0 <line:781:3, col:221> '_Bool' '='
|   | |-DeclRefExpr 0x56324b40f328 <col:3> '_Bool' lvalue Var 0x56324b407558 'x$r_buff1_thd3' '_Bool'
|   | `-ImplicitCastExpr 0x56324b40f8b8 <col:20, col:221> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x56324b40f888 <col:20, col:221> 'int'
|   |     |-ImplicitCastExpr 0x56324b40f840 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x56324b40f828 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x56324b40f348 <col:20> '_Bool' lvalue Var 0x56324b408b20 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x56324b40f870 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x56324b40f858 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x56324b40f368 <col:36> '_Bool' lvalue Var 0x56324b407558 'x$r_buff1_thd3' '_Bool'
|   |     `-ParenExpr 0x56324b40f808 <col:53, col:221> 'int'
|   |       `-ConditionalOperator 0x56324b40f7d8 <col:54, col:220> 'int'
|   |         |-BinaryOperator 0x56324b40f578 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x56324b40f498 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x56324b40f3c0 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x56324b40f3a8 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x56324b40f388 <col:55> '_Bool' lvalue Var 0x56324b407748 'x$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x56324b40f478 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x56324b40f410 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x56324b40f3f8 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x56324b40f3d8 <col:74> '_Bool' lvalue Var 0x56324b407378 'x$r_buff0_thd3' '_Bool'
|   |         | |   `-UnaryOperator 0x56324b40f460 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x56324b40f448 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x56324b40f428 <col:93> '_Bool' lvalue Var 0x56324b407840 'x$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x56324b40f558 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x56324b40f4f0 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x56324b40f4d8 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x56324b40f4b8 <col:112> '_Bool' lvalue Var 0x56324b407378 'x$r_buff0_thd3' '_Bool'
|   |         |   `-UnaryOperator 0x56324b40f540 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x56324b40f528 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x56324b40f508 <col:131> '_Bool' lvalue Var 0x56324b407558 'x$r_buff1_thd3' '_Bool'
|   |         |-ImplicitCastExpr 0x56324b40f7c0 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x56324b40f7a8 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x56324b40f598 <col:148> '_Bool' lvalue Var 0x56324b407558 'x$r_buff1_thd3' '_Bool'
|   |         `-ParenExpr 0x56324b40f788 <col:165, col:220> 'int'
|   |           `-ConditionalOperator 0x56324b40f758 <col:166, col:219> 'int'
|   |             |-BinaryOperator 0x56324b40f658 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x56324b40f610 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x56324b40f5f8 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x56324b40f5b8 <col:166> '_Bool' lvalue Var 0x56324b407748 'x$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x56324b40f640 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x56324b40f628 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x56324b40f5d8 <col:184> '_Bool' lvalue Var 0x56324b407378 'x$r_buff0_thd3' '_Bool'
|   |             |-ImplicitCastExpr 0x56324b40f728 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x56324b40f6a8 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x56324b40f678 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x56324b40f740 <col:212, col:219> 'int' <IntegralCast>
|   |               `-CStyleCastExpr 0x56324b40f700 <col:212, col:219> '_Bool' <IntegralToBoolean>
|   |                 `-IntegerLiteral 0x56324b40f6d0 <col:219> 'int' 0
|   |-BinaryOperator 0x56324b40f968 <line:782:3, col:45> '_Bool' '='
|   | |-DeclRefExpr 0x56324b40f8f0 <col:3> '_Bool' lvalue Var 0x56324b406b00 '__unbuffered_p2_EAX$read_delayed' '_Bool'
|   | `-CStyleCastExpr 0x56324b40f940 <col:38, col:45> '_Bool' <IntegralToBoolean>
|   |   `-IntegerLiteral 0x56324b40f910 <col:45> 'int' 1
|   |-BinaryOperator 0x56324b40f9e0 <line:783:3, col:43> 'int *' '='
|   | |-DeclRefExpr 0x56324b40f988 <col:3> 'int *' lvalue Var 0x56324b406b80 '__unbuffered_p2_EAX$read_delayed_var' 'int *'
|   | `-UnaryOperator 0x56324b40f9c8 <col:42, col:43> 'int *' prefix '&' cannot overflow
|   |   `-DeclRefExpr 0x56324b40f9a8 <col:43> 'int' lvalue Var 0x56324b407080 'x' 'int'
|   |-BinaryOperator 0x56324b40fa58 <line:784:3, col:25> 'int' '='
|   | |-DeclRefExpr 0x56324b40fa00 <col:3> 'int' lvalue Var 0x56324b406560 '__unbuffered_p2_EAX' 'int'
|   | `-ImplicitCastExpr 0x56324b40fa40 <col:25> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x56324b40fa20 <col:25> 'int' lvalue Var 0x56324b407080 'x' 'int'
|   |-BinaryOperator 0x56324b40fbc0 <line:785:3, col:37> 'int' '='
|   | |-DeclRefExpr 0x56324b40fa78 <col:3> 'int' lvalue Var 0x56324b407080 'x' 'int'
|   | `-ConditionalOperator 0x56324b40fb90 <col:7, col:37> 'int'
|   |   |-ImplicitCastExpr 0x56324b40fb10 <col:7> 'int' <IntegralCast>
|   |   | `-ImplicitCastExpr 0x56324b40faf8 <col:7> '_Bool' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x56324b40fa98 <col:7> '_Bool' lvalue Var 0x56324b407118 'x$flush_delayed' '_Bool'
|   |   |-ImplicitCastExpr 0x56324b40fb28 <col:25> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x56324b40fab8 <col:25> 'int' lvalue Var 0x56324b407198 'x$mem_tmp' 'int'
|   |   `-ImplicitCastExpr 0x56324b40fb40 <col:37> 'int' <LValueToRValue>
|   |     `-DeclRefExpr 0x56324b40fad8 <col:37> 'int' lvalue Var 0x56324b407080 'x' 'int'
|   |-BinaryOperator 0x56324b40fc58 <line:786:3, col:28> '_Bool' '='
|   | |-DeclRefExpr 0x56324b40fbe0 <col:3> '_Bool' lvalue Var 0x56324b407118 'x$flush_delayed' '_Bool'
|   | `-CStyleCastExpr 0x56324b40fc30 <col:21, col:28> '_Bool' <IntegralToBoolean>
|   |   `-IntegerLiteral 0x56324b40fc00 <col:28> 'int' 0
|   |-CallExpr 0x56324b40fcb0 <line:787:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x56324b40fc98 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x56324b40fc78 <col:3> 'void ()' Function 0x56324b3ad060 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x56324b40fd08 <line:788:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x56324b40fcf0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x56324b40fcd0 <col:3> 'void ()' Function 0x56324b3acfa0 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x56324b40fd80 <line:789:3, col:25> 'int' '='
|   | |-DeclRefExpr 0x56324b40fd28 <col:3> 'int' lvalue Var 0x56324b406e70 '__unbuffered_p2_EBX' 'int'
|   | `-ImplicitCastExpr 0x56324b40fd68 <col:25> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x56324b40fd48 <col:25> 'int' lvalue Var 0x56324b407940 'y' 'int'
|   |-CallExpr 0x56324b40fdd8 <line:790:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x56324b40fdc0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x56324b40fda0 <col:3> 'void ()' Function 0x56324b3ad060 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x56324b40fe30 <line:791:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x56324b40fe18 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x56324b40fdf8 <col:3> 'void ()' Function 0x56324b3acfa0 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x56324b410118 <line:792:3, col:103> 'int' '='
|   | |-DeclRefExpr 0x56324b40fe50 <col:3> 'int' lvalue Var 0x56324b407080 'x' 'int'
|   | `-ConditionalOperator 0x56324b4100e8 <col:7, col:103> 'int'
|   |   |-BinaryOperator 0x56324b40ff10 <col:7, col:25> 'int' '&&'
|   |   | |-ImplicitCastExpr 0x56324b40fec8 <col:7> 'int' <IntegralCast>
|   |   | | `-ImplicitCastExpr 0x56324b40feb0 <col:7> '_Bool' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x56324b40fe70 <col:7> '_Bool' lvalue Var 0x56324b407748 'x$w_buff0_used' '_Bool'
|   |   | `-ImplicitCastExpr 0x56324b40fef8 <col:25> 'int' <IntegralCast>
|   |   |   `-ImplicitCastExpr 0x56324b40fee0 <col:25> '_Bool' <LValueToRValue>
|   |   |     `-DeclRefExpr 0x56324b40fe90 <col:25> '_Bool' lvalue Var 0x56324b407378 'x$r_buff0_thd3' '_Bool'
|   |   |-ImplicitCastExpr 0x56324b4100d0 <col:42> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x56324b40ff30 <col:42> 'int' lvalue Var 0x56324b4076d0 'x$w_buff0' 'int'
|   |   `-ParenExpr 0x56324b4100b0 <col:54, col:103> 'int'
|   |     `-ConditionalOperator 0x56324b410080 <col:55, col:102> 'int'
|   |       |-BinaryOperator 0x56324b40fff0 <col:55, col:73> 'int' '&&'
|   |       | |-ImplicitCastExpr 0x56324b40ffa8 <col:55> 'int' <IntegralCast>
|   |       | | `-ImplicitCastExpr 0x56324b40ff90 <col:55> '_Bool' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x56324b40ff50 <col:55> '_Bool' lvalue Var 0x56324b407840 'x$w_buff1_used' '_Bool'
|   |       | `-ImplicitCastExpr 0x56324b40ffd8 <col:73> 'int' <IntegralCast>
|   |       |   `-ImplicitCastExpr 0x56324b40ffc0 <col:73> '_Bool' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x56324b40ff70 <col:73> '_Bool' lvalue Var 0x56324b407558 'x$r_buff1_thd3' '_Bool'
|   |       |-ImplicitCastExpr 0x56324b410050 <col:90> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x56324b410010 <col:90> 'int' lvalue Var 0x56324b4077c8 'x$w_buff1' 'int'
|   |       `-ImplicitCastExpr 0x56324b410068 <col:102> 'int' <LValueToRValue>
|   |         `-DeclRefExpr 0x56324b410030 <col:102> 'int' lvalue Var 0x56324b407080 'x' 'int'
|   |-BinaryOperator 0x56324b410320 <line:793:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x56324b410138 <col:3> '_Bool' lvalue Var 0x56324b407748 'x$w_buff0_used' '_Bool'
|   | `-ImplicitCastExpr 0x56324b410308 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x56324b4102d8 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x56324b4101f8 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x56324b4101b0 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x56324b410198 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x56324b410158 <col:20> '_Bool' lvalue Var 0x56324b407748 'x$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x56324b4101e0 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x56324b4101c8 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x56324b410178 <col:38> '_Bool' lvalue Var 0x56324b407378 'x$r_buff0_thd3' '_Bool'
|   |     |-ImplicitCastExpr 0x56324b410290 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x56324b410248 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x56324b410218 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x56324b4102c0 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x56324b4102a8 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x56324b410270 <col:66> '_Bool' lvalue Var 0x56324b407748 'x$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x56324b410608 <line:794:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x56324b410340 <col:3> '_Bool' lvalue Var 0x56324b407840 'x$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x56324b4105f0 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x56324b4105c0 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x56324b4104e0 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x56324b410400 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x56324b4103b8 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x56324b4103a0 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x56324b410360 <col:20> '_Bool' lvalue Var 0x56324b407748 'x$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x56324b4103e8 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x56324b4103d0 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x56324b410380 <col:38> '_Bool' lvalue Var 0x56324b407378 'x$r_buff0_thd3' '_Bool'
|   |     | `-BinaryOperator 0x56324b4104c0 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x56324b410478 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x56324b410460 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x56324b410420 <col:56> '_Bool' lvalue Var 0x56324b407840 'x$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x56324b4104a8 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x56324b410490 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x56324b410440 <col:74> '_Bool' lvalue Var 0x56324b407558 'x$r_buff1_thd3' '_Bool'
|   |     |-ImplicitCastExpr 0x56324b410578 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x56324b410530 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x56324b410500 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x56324b4105a8 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x56324b410590 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x56324b410558 <col:102> '_Bool' lvalue Var 0x56324b407840 'x$w_buff1_used' '_Bool'
|   |-BinaryOperator 0x56324b410810 <line:795:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x56324b410628 <col:3> '_Bool' lvalue Var 0x56324b407378 'x$r_buff0_thd3' '_Bool'
|   | `-ImplicitCastExpr 0x56324b4107f8 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x56324b4107c8 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x56324b4106e8 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x56324b4106a0 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x56324b410688 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x56324b410648 <col:20> '_Bool' lvalue Var 0x56324b407748 'x$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x56324b4106d0 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x56324b4106b8 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x56324b410668 <col:38> '_Bool' lvalue Var 0x56324b407378 'x$r_buff0_thd3' '_Bool'
|   |     |-ImplicitCastExpr 0x56324b410780 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x56324b410738 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x56324b410708 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x56324b4107b0 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x56324b410798 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x56324b410760 <col:66> '_Bool' lvalue Var 0x56324b407378 'x$r_buff0_thd3' '_Bool'
|   |-BinaryOperator 0x56324b410af8 <line:796:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x56324b410830 <col:3> '_Bool' lvalue Var 0x56324b407558 'x$r_buff1_thd3' '_Bool'
|   | `-ImplicitCastExpr 0x56324b410ae0 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x56324b410ab0 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x56324b4109d0 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x56324b4108f0 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x56324b4108a8 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x56324b410890 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x56324b410850 <col:20> '_Bool' lvalue Var 0x56324b407748 'x$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x56324b4108d8 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x56324b4108c0 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x56324b410870 <col:38> '_Bool' lvalue Var 0x56324b407378 'x$r_buff0_thd3' '_Bool'
|   |     | `-BinaryOperator 0x56324b4109b0 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x56324b410968 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x56324b410950 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x56324b410910 <col:56> '_Bool' lvalue Var 0x56324b407840 'x$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x56324b410998 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x56324b410980 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x56324b410930 <col:74> '_Bool' lvalue Var 0x56324b407558 'x$r_buff1_thd3' '_Bool'
|   |     |-ImplicitCastExpr 0x56324b410a68 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x56324b410a20 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x56324b4109f0 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x56324b410a98 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x56324b410a80 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x56324b410a48 <col:102> '_Bool' lvalue Var 0x56324b407558 'x$r_buff1_thd3' '_Bool'
|   |-CallExpr 0x56324b410b50 <line:797:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x56324b410b38 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x56324b410b18 <col:3> 'void ()' Function 0x56324b3ad060 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x56324b410bb8 <line:798:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x56324b410ba0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x56324b410b70 <col:3> 'void ()' Function 0x56324b3acfa0 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x56324b410c70 <line:799:3, col:41> 'int' '='
|   | |-DeclRefExpr 0x56324b410bd8 <col:3> 'int' lvalue Var 0x56324b406320 '__unbuffered_cnt' 'int'
|   | `-BinaryOperator 0x56324b410c50 <col:22, col:41> 'int' '+'
|   |   |-ImplicitCastExpr 0x56324b410c38 <col:22> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x56324b410bf8 <col:22> 'int' lvalue Var 0x56324b406320 '__unbuffered_cnt' 'int'
|   |   `-IntegerLiteral 0x56324b410c18 <col:41> 'int' 1
|   |-CallExpr 0x56324b410cc8 <line:800:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x56324b410cb0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x56324b410c90 <col:3> 'void ()' Function 0x56324b3ad060 '__VERIFIER_atomic_end' 'void ()'
|   `-ReturnStmt 0x56324b410d40 <line:801:3, col:36>
|     `-CallExpr 0x56324b410d20 <col:10, col:36> 'void *'
|       `-ImplicitCastExpr 0x56324b410d08 <col:10> 'void *(*)(void)' <FunctionToPointerDecay>
|         `-DeclRefExpr 0x56324b410ce8 <col:10> 'void *(void)' Function 0x56324b3acab8 '__VERIFIER_nondet_pointer' 'void *(void)'
|-FunctionDecl 0x56324b410e80 prev 0x56324b406068 <line:803:1, line:805:1> line:803:6 fence 'void ()'
| `-CompoundStmt 0x56324b410f20 <line:804:1, line:805:1>
|-FunctionDecl 0x56324b410f50 prev 0x56324b406128 <line:806:1, line:808:1> line:806:6 isync 'void ()'
| `-CompoundStmt 0x56324b410ff0 <line:807:1, line:808:1>
|-FunctionDecl 0x56324b411020 prev 0x56324b4061e8 <line:809:1, line:811:1> line:809:6 lwfence 'void ()'
| `-CompoundStmt 0x56324b4110c0 <line:810:1, line:811:1>
`-FunctionDecl 0x56324b411128 <line:812:1, line:838:1> line:812:5 main 'int ()'
  `-CompoundStmt 0x56324b413080 <line:813:1, line:838:1>
    |-DeclStmt 0x56324b411240 <line:814:3, col:18>
    | `-VarDecl 0x56324b4111d8 <col:3, col:13> col:13 used t2463 'pthread_t':'unsigned long'
    |-CallExpr 0x56324b411448 <line:815:3, col:54> 'int'
    | |-ImplicitCastExpr 0x56324b411430 <col:3> 'int (*)(pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x56324b411258 <col:3> 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' Function 0x56324b3ed5b8 'pthread_create' 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)'
    | |-UnaryOperator 0x56324b411298 <col:18, col:19> 'pthread_t *' prefix '&' cannot overflow
    | | `-DeclRefExpr 0x56324b411278 <col:19> 'pthread_t':'unsigned long' lvalue Var 0x56324b4111d8 't2463' 'pthread_t':'unsigned long'
    | |-ImplicitCastExpr 0x56324b411488 <col:26, col:36> 'const pthread_attr_t *' <NullToPointer>
    | | `-ParenExpr 0x56324b411310 <col:26, col:36> 'void *'
    | |   `-CStyleCastExpr 0x56324b4112e8 <col:27, col:35> 'void *' <NullToPointer>
    | |     `-IntegerLiteral 0x56324b4112b0 <col:35> 'int' 0
    | |-ImplicitCastExpr 0x56324b4114a0 <col:39> 'void *(*)(void *)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x56324b411330 <col:39> 'void *(void *)' Function 0x56324b408c38 'P0' 'void *(void *)'
    | `-ParenExpr 0x56324b4113b0 <col:43, col:53> 'void *'
    |   `-CStyleCastExpr 0x56324b411388 <col:44, col:52> 'void *' <NullToPointer>
    |     `-IntegerLiteral 0x56324b411350 <col:52> 'int' 0
    |-DeclStmt 0x56324b411530 <line:816:3, col:18>
    | `-VarDecl 0x56324b4114c8 <col:3, col:13> col:13 used t2464 'pthread_t':'unsigned long'
    |-CallExpr 0x56324b4116d8 <line:817:3, col:54> 'int'
    | |-ImplicitCastExpr 0x56324b4116c0 <col:3> 'int (*)(pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x56324b411548 <col:3> 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' Function 0x56324b3ed5b8 'pthread_create' 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)'
    | |-UnaryOperator 0x56324b411588 <col:18, col:19> 'pthread_t *' prefix '&' cannot overflow
    | | `-DeclRefExpr 0x56324b411568 <col:19> 'pthread_t':'unsigned long' lvalue Var 0x56324b4114c8 't2464' 'pthread_t':'unsigned long'
    | |-ImplicitCastExpr 0x56324b411718 <col:26, col:36> 'const pthread_attr_t *' <NullToPointer>
    | | `-ParenExpr 0x56324b411600 <col:26, col:36> 'void *'
    | |   `-CStyleCastExpr 0x56324b4115d8 <col:27, col:35> 'void *' <NullToPointer>
    | |     `-IntegerLiteral 0x56324b4115a0 <col:35> 'int' 0
    | |-ImplicitCastExpr 0x56324b411730 <col:39> 'void *(*)(void *)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x56324b411620 <col:39> 'void *(void *)' Function 0x56324b40be20 'P1' 'void *(void *)'
    | `-ParenExpr 0x56324b4116a0 <col:43, col:53> 'void *'
    |   `-CStyleCastExpr 0x56324b411678 <col:44, col:52> 'void *' <NullToPointer>
    |     `-IntegerLiteral 0x56324b411640 <col:52> 'int' 0
    |-DeclStmt 0x56324b4117c0 <line:818:3, col:18>
    | `-VarDecl 0x56324b411758 <col:3, col:13> col:13 used t2465 'pthread_t':'unsigned long'
    |-CallExpr 0x56324b411968 <line:819:3, col:54> 'int'
    | |-ImplicitCastExpr 0x56324b411950 <col:3> 'int (*)(pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x56324b4117d8 <col:3> 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' Function 0x56324b3ed5b8 'pthread_create' 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)'
    | |-UnaryOperator 0x56324b411818 <col:18, col:19> 'pthread_t *' prefix '&' cannot overflow
    | | `-DeclRefExpr 0x56324b4117f8 <col:19> 'pthread_t':'unsigned long' lvalue Var 0x56324b411758 't2465' 'pthread_t':'unsigned long'
    | |-ImplicitCastExpr 0x56324b4119a8 <col:26, col:36> 'const pthread_attr_t *' <NullToPointer>
    | | `-ParenExpr 0x56324b411890 <col:26, col:36> 'void *'
    | |   `-CStyleCastExpr 0x56324b411868 <col:27, col:35> 'void *' <NullToPointer>
    | |     `-IntegerLiteral 0x56324b411830 <col:35> 'int' 0
    | |-ImplicitCastExpr 0x56324b4119c0 <col:39> 'void *(*)(void *)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x56324b4118b0 <col:39> 'void *(void *)' Function 0x56324b40d068 'P2' 'void *(void *)'
    | `-ParenExpr 0x56324b411930 <col:43, col:53> 'void *'
    |   `-CStyleCastExpr 0x56324b411908 <col:44, col:52> 'void *' <NullToPointer>
    |     `-IntegerLiteral 0x56324b4118d0 <col:52> 'int' 0
    |-CallExpr 0x56324b411a10 <line:820:3, col:27> 'void'
    | `-ImplicitCastExpr 0x56324b4119f8 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x56324b4119d8 <col:3> 'void ()' Function 0x56324b3acfa0 '__VERIFIER_atomic_begin' 'void ()'
    |-BinaryOperator 0x56324b411ae0 <line:821:3, col:41> '_Bool' '='
    | |-DeclRefExpr 0x56324b411a30 <col:3> '_Bool' lvalue Var 0x56324b406f08 'main$tmp_guard0' '_Bool'
    | `-ImplicitCastExpr 0x56324b411ac8 <col:21, col:41> '_Bool' <IntegralToBoolean>
    |   `-BinaryOperator 0x56324b411aa8 <col:21, col:41> 'int' '=='
    |     |-ImplicitCastExpr 0x56324b411a90 <col:21> 'int' <LValueToRValue>
    |     | `-DeclRefExpr 0x56324b411a50 <col:21> 'int' lvalue Var 0x56324b406320 '__unbuffered_cnt' 'int'
    |     `-IntegerLiteral 0x56324b411a70 <col:41> 'int' 3
    |-CallExpr 0x56324b411b38 <line:822:3, col:25> 'void'
    | `-ImplicitCastExpr 0x56324b411b20 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x56324b411b00 <col:3> 'void ()' Function 0x56324b3ad060 '__VERIFIER_atomic_end' 'void ()'
    |-CallExpr 0x56324b411bf8 <line:823:3, col:36> 'void'
    | |-ImplicitCastExpr 0x56324b411be0 <col:3> 'void (*)(int)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x56324b411b58 <col:3> 'void (int)' Function 0x56324b3ac940 '__VERIFIER_assume' 'void (int)'
    | `-ImplicitCastExpr 0x56324b411c38 <col:21> 'int' <IntegralCast>
    |   `-ImplicitCastExpr 0x56324b411c20 <col:21> '_Bool' <LValueToRValue>
    |     `-DeclRefExpr 0x56324b411b78 <col:21> '_Bool' lvalue Var 0x56324b406f08 'main$tmp_guard0' '_Bool'
    |-CallExpr 0x56324b411c88 <line:824:3, col:27> 'void'
    | `-ImplicitCastExpr 0x56324b411c70 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x56324b411c50 <col:3> 'void ()' Function 0x56324b3acfa0 '__VERIFIER_atomic_begin' 'void ()'
    |-BinaryOperator 0x56324b411f70 <line:825:3, col:103> 'int' '='
    | |-DeclRefExpr 0x56324b411ca8 <col:3> 'int' lvalue Var 0x56324b407080 'x' 'int'
    | `-ConditionalOperator 0x56324b411f40 <col:7, col:103> 'int'
    |   |-BinaryOperator 0x56324b411d68 <col:7, col:25> 'int' '&&'
    |   | |-ImplicitCastExpr 0x56324b411d20 <col:7> 'int' <IntegralCast>
    |   | | `-ImplicitCastExpr 0x56324b411d08 <col:7> '_Bool' <LValueToRValue>
    |   | |   `-DeclRefExpr 0x56324b411cc8 <col:7> '_Bool' lvalue Var 0x56324b407748 'x$w_buff0_used' '_Bool'
    |   | `-ImplicitCastExpr 0x56324b411d50 <col:25> 'int' <IntegralCast>
    |   |   `-ImplicitCastExpr 0x56324b411d38 <col:25> '_Bool' <LValueToRValue>
    |   |     `-DeclRefExpr 0x56324b411ce8 <col:25> '_Bool' lvalue Var 0x56324b407210 'x$r_buff0_thd0' '_Bool'
    |   |-ImplicitCastExpr 0x56324b411f28 <col:42> 'int' <LValueToRValue>
    |   | `-DeclRefExpr 0x56324b411d88 <col:42> 'int' lvalue Var 0x56324b4076d0 'x$w_buff0' 'int'
    |   `-ParenExpr 0x56324b411f08 <col:54, col:103> 'int'
    |     `-ConditionalOperator 0x56324b411ed8 <col:55, col:102> 'int'
    |       |-BinaryOperator 0x56324b411e48 <col:55, col:73> 'int' '&&'
    |       | |-ImplicitCastExpr 0x56324b411e00 <col:55> 'int' <IntegralCast>
    |       | | `-ImplicitCastExpr 0x56324b411de8 <col:55> '_Bool' <LValueToRValue>
    |       | |   `-DeclRefExpr 0x56324b411da8 <col:55> '_Bool' lvalue Var 0x56324b407840 'x$w_buff1_used' '_Bool'
    |       | `-ImplicitCastExpr 0x56324b411e30 <col:73> 'int' <IntegralCast>
    |       |   `-ImplicitCastExpr 0x56324b411e18 <col:73> '_Bool' <LValueToRValue>
    |       |     `-DeclRefExpr 0x56324b411dc8 <col:73> '_Bool' lvalue Var 0x56324b4073f0 'x$r_buff1_thd0' '_Bool'
    |       |-ImplicitCastExpr 0x56324b411ea8 <col:90> 'int' <LValueToRValue>
    |       | `-DeclRefExpr 0x56324b411e68 <col:90> 'int' lvalue Var 0x56324b4077c8 'x$w_buff1' 'int'
    |       `-ImplicitCastExpr 0x56324b411ec0 <col:102> 'int' <LValueToRValue>
    |         `-DeclRefExpr 0x56324b411e88 <col:102> 'int' lvalue Var 0x56324b407080 'x' 'int'
    |-BinaryOperator 0x56324b412178 <line:826:3, col:66> '_Bool' '='
    | |-DeclRefExpr 0x56324b411f90 <col:3> '_Bool' lvalue Var 0x56324b407748 'x$w_buff0_used' '_Bool'
    | `-ImplicitCastExpr 0x56324b412160 <col:20, col:66> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x56324b412130 <col:20, col:66> 'int'
    |     |-BinaryOperator 0x56324b412050 <col:20, col:38> 'int' '&&'
    |     | |-ImplicitCastExpr 0x56324b412008 <col:20> 'int' <IntegralCast>
    |     | | `-ImplicitCastExpr 0x56324b411ff0 <col:20> '_Bool' <LValueToRValue>
    |     | |   `-DeclRefExpr 0x56324b411fb0 <col:20> '_Bool' lvalue Var 0x56324b407748 'x$w_buff0_used' '_Bool'
    |     | `-ImplicitCastExpr 0x56324b412038 <col:38> 'int' <IntegralCast>
    |     |   `-ImplicitCastExpr 0x56324b412020 <col:38> '_Bool' <LValueToRValue>
    |     |     `-DeclRefExpr 0x56324b411fd0 <col:38> '_Bool' lvalue Var 0x56324b407210 'x$r_buff0_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x56324b4120e8 <col:55, col:62> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x56324b4120a0 <col:55, col:62> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x56324b412070 <col:62> 'int' 0
    |     `-ImplicitCastExpr 0x56324b412118 <col:66> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x56324b412100 <col:66> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x56324b4120c8 <col:66> '_Bool' lvalue Var 0x56324b407748 'x$w_buff0_used' '_Bool'
    |-BinaryOperator 0x56324b412460 <line:827:3, col:102> '_Bool' '='
    | |-DeclRefExpr 0x56324b412198 <col:3> '_Bool' lvalue Var 0x56324b407840 'x$w_buff1_used' '_Bool'
    | `-ImplicitCastExpr 0x56324b412448 <col:20, col:102> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x56324b412418 <col:20, col:102> 'int'
    |     |-BinaryOperator 0x56324b412338 <col:20, col:74> 'int' '||'
    |     | |-BinaryOperator 0x56324b412258 <col:20, col:38> 'int' '&&'
    |     | | |-ImplicitCastExpr 0x56324b412210 <col:20> 'int' <IntegralCast>
    |     | | | `-ImplicitCastExpr 0x56324b4121f8 <col:20> '_Bool' <LValueToRValue>
    |     | | |   `-DeclRefExpr 0x56324b4121b8 <col:20> '_Bool' lvalue Var 0x56324b407748 'x$w_buff0_used' '_Bool'
    |     | | `-ImplicitCastExpr 0x56324b412240 <col:38> 'int' <IntegralCast>
    |     | |   `-ImplicitCastExpr 0x56324b412228 <col:38> '_Bool' <LValueToRValue>
    |     | |     `-DeclRefExpr 0x56324b4121d8 <col:38> '_Bool' lvalue Var 0x56324b407210 'x$r_buff0_thd0' '_Bool'
    |     | `-BinaryOperator 0x56324b412318 <col:56, col:74> 'int' '&&'
    |     |   |-ImplicitCastExpr 0x56324b4122d0 <col:56> 'int' <IntegralCast>
    |     |   | `-ImplicitCastExpr 0x56324b4122b8 <col:56> '_Bool' <LValueToRValue>
    |     |   |   `-DeclRefExpr 0x56324b412278 <col:56> '_Bool' lvalue Var 0x56324b407840 'x$w_buff1_used' '_Bool'
    |     |   `-ImplicitCastExpr 0x56324b412300 <col:74> 'int' <IntegralCast>
    |     |     `-ImplicitCastExpr 0x56324b4122e8 <col:74> '_Bool' <LValueToRValue>
    |     |       `-DeclRefExpr 0x56324b412298 <col:74> '_Bool' lvalue Var 0x56324b4073f0 'x$r_buff1_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x56324b4123d0 <col:91, col:98> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x56324b412388 <col:91, col:98> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x56324b412358 <col:98> 'int' 0
    |     `-ImplicitCastExpr 0x56324b412400 <col:102> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x56324b4123e8 <col:102> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x56324b4123b0 <col:102> '_Bool' lvalue Var 0x56324b407840 'x$w_buff1_used' '_Bool'
    |-BinaryOperator 0x56324b412668 <line:828:3, col:66> '_Bool' '='
    | |-DeclRefExpr 0x56324b412480 <col:3> '_Bool' lvalue Var 0x56324b407210 'x$r_buff0_thd0' '_Bool'
    | `-ImplicitCastExpr 0x56324b412650 <col:20, col:66> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x56324b412620 <col:20, col:66> 'int'
    |     |-BinaryOperator 0x56324b412540 <col:20, col:38> 'int' '&&'
    |     | |-ImplicitCastExpr 0x56324b4124f8 <col:20> 'int' <IntegralCast>
    |     | | `-ImplicitCastExpr 0x56324b4124e0 <col:20> '_Bool' <LValueToRValue>
    |     | |   `-DeclRefExpr 0x56324b4124a0 <col:20> '_Bool' lvalue Var 0x56324b407748 'x$w_buff0_used' '_Bool'
    |     | `-ImplicitCastExpr 0x56324b412528 <col:38> 'int' <IntegralCast>
    |     |   `-ImplicitCastExpr 0x56324b412510 <col:38> '_Bool' <LValueToRValue>
    |     |     `-DeclRefExpr 0x56324b4124c0 <col:38> '_Bool' lvalue Var 0x56324b407210 'x$r_buff0_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x56324b4125d8 <col:55, col:62> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x56324b412590 <col:55, col:62> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x56324b412560 <col:62> 'int' 0
    |     `-ImplicitCastExpr 0x56324b412608 <col:66> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x56324b4125f0 <col:66> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x56324b4125b8 <col:66> '_Bool' lvalue Var 0x56324b407210 'x$r_buff0_thd0' '_Bool'
    |-BinaryOperator 0x56324b412950 <line:829:3, col:102> '_Bool' '='
    | |-DeclRefExpr 0x56324b412688 <col:3> '_Bool' lvalue Var 0x56324b4073f0 'x$r_buff1_thd0' '_Bool'
    | `-ImplicitCastExpr 0x56324b412938 <col:20, col:102> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x56324b412908 <col:20, col:102> 'int'
    |     |-BinaryOperator 0x56324b412828 <col:20, col:74> 'int' '||'
    |     | |-BinaryOperator 0x56324b412748 <col:20, col:38> 'int' '&&'
    |     | | |-ImplicitCastExpr 0x56324b412700 <col:20> 'int' <IntegralCast>
    |     | | | `-ImplicitCastExpr 0x56324b4126e8 <col:20> '_Bool' <LValueToRValue>
    |     | | |   `-DeclRefExpr 0x56324b4126a8 <col:20> '_Bool' lvalue Var 0x56324b407748 'x$w_buff0_used' '_Bool'
    |     | | `-ImplicitCastExpr 0x56324b412730 <col:38> 'int' <IntegralCast>
    |     | |   `-ImplicitCastExpr 0x56324b412718 <col:38> '_Bool' <LValueToRValue>
    |     | |     `-DeclRefExpr 0x56324b4126c8 <col:38> '_Bool' lvalue Var 0x56324b407210 'x$r_buff0_thd0' '_Bool'
    |     | `-BinaryOperator 0x56324b412808 <col:56, col:74> 'int' '&&'
    |     |   |-ImplicitCastExpr 0x56324b4127c0 <col:56> 'int' <IntegralCast>
    |     |   | `-ImplicitCastExpr 0x56324b4127a8 <col:56> '_Bool' <LValueToRValue>
    |     |   |   `-DeclRefExpr 0x56324b412768 <col:56> '_Bool' lvalue Var 0x56324b407840 'x$w_buff1_used' '_Bool'
    |     |   `-ImplicitCastExpr 0x56324b4127f0 <col:74> 'int' <IntegralCast>
    |     |     `-ImplicitCastExpr 0x56324b4127d8 <col:74> '_Bool' <LValueToRValue>
    |     |       `-DeclRefExpr 0x56324b412788 <col:74> '_Bool' lvalue Var 0x56324b4073f0 'x$r_buff1_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x56324b4128c0 <col:91, col:98> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x56324b412878 <col:91, col:98> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x56324b412848 <col:98> 'int' 0
    |     `-ImplicitCastExpr 0x56324b4128f0 <col:102> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x56324b4128d8 <col:102> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x56324b4128a0 <col:102> '_Bool' lvalue Var 0x56324b4073f0 'x$r_buff1_thd0' '_Bool'
    |-CallExpr 0x56324b4129a8 <line:830:3, col:25> 'void'
    | `-ImplicitCastExpr 0x56324b412990 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x56324b412970 <col:3> 'void ()' Function 0x56324b3ad060 '__VERIFIER_atomic_end' 'void ()'
    |-CallExpr 0x56324b412a00 <line:831:3, col:27> 'void'
    | `-ImplicitCastExpr 0x56324b4129e8 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x56324b4129c8 <col:3> 'void ()' Function 0x56324b3acfa0 '__VERIFIER_atomic_begin' 'void ()'
    |-BinaryOperator 0x56324b412a98 <line:832:3, col:42> '_Bool' '='
    | |-DeclRefExpr 0x56324b412a20 <col:3> '_Bool' lvalue Var 0x56324b407a50 'weak$$choice1' '_Bool'
    | `-CallExpr 0x56324b412a78 <col:19, col:42> '_Bool'
    |   `-ImplicitCastExpr 0x56324b412a60 <col:19> '_Bool (*)(void)' <FunctionToPointerDecay>
    |     `-DeclRefExpr 0x56324b412a40 <col:19> '_Bool (void)' Function 0x56324b3ac770 '__VERIFIER_nondet_bool' '_Bool (void)'
    |-BinaryOperator 0x56324b412cf0 <line:833:3, col:140> 'int' '='
    | |-DeclRefExpr 0x56324b412ab8 <col:3> 'int' lvalue Var 0x56324b406560 '__unbuffered_p2_EAX' 'int'
    | `-ConditionalOperator 0x56324b412cc0 <col:25, col:140> 'int'
    |   |-ImplicitCastExpr 0x56324b412c90 <col:25> 'int' <IntegralCast>
    |   | `-ImplicitCastExpr 0x56324b412c78 <col:25> '_Bool' <LValueToRValue>
    |   |   `-DeclRefExpr 0x56324b412ad8 <col:25> '_Bool' lvalue Var 0x56324b406b00 '__unbuffered_p2_EAX$read_delayed' '_Bool'
    |   |-ParenExpr 0x56324b412c38 <col:60, col:136> 'int'
    |   | `-ConditionalOperator 0x56324b412c08 <col:61, col:117> 'int'
    |   |   |-ImplicitCastExpr 0x56324b412bc0 <col:61> 'int' <IntegralCast>
    |   |   | `-ImplicitCastExpr 0x56324b412b88 <col:61> '_Bool' <LValueToRValue>
    |   |   |   `-DeclRefExpr 0x56324b412af8 <col:61> '_Bool' lvalue Var 0x56324b407a50 'weak$$choice1' '_Bool'
    |   |   |-ImplicitCastExpr 0x56324b412bd8 <col:77, col:78> 'int' <LValueToRValue>
    |   |   | `-UnaryOperator 0x56324b412b50 <col:77, col:78> 'int' lvalue prefix '*' cannot overflow
    |   |   |   `-ImplicitCastExpr 0x56324b412b38 <col:78> 'int *' <LValueToRValue>
    |   |   |     `-DeclRefExpr 0x56324b412b18 <col:78> 'int *' lvalue Var 0x56324b406b80 '__unbuffered_p2_EAX$read_delayed_var' 'int *'
    |   |   `-ImplicitCastExpr 0x56324b412bf0 <col:117> 'int' <LValueToRValue>
    |   |     `-DeclRefExpr 0x56324b412b68 <col:117> 'int' lvalue Var 0x56324b406560 '__unbuffered_p2_EAX' 'int'
    |   `-ImplicitCastExpr 0x56324b412ca8 <col:140> 'int' <LValueToRValue>
    |     `-DeclRefExpr 0x56324b412c58 <col:140> 'int' lvalue Var 0x56324b406560 '__unbuffered_p2_EAX' 'int'
    |-BinaryOperator 0x56324b412f28 <line:834:3, col:103> '_Bool' '='
    | |-DeclRefExpr 0x56324b412d10 <col:3> '_Bool' lvalue Var 0x56324b406f80 'main$tmp_guard1' '_Bool'
    | `-ImplicitCastExpr 0x56324b412f10 <col:21, col:103> '_Bool' <IntegralToBoolean>
    |   `-UnaryOperator 0x56324b412ef8 <col:21, col:103> 'int' prefix '!' cannot overflow
    |     `-ParenExpr 0x56324b412ed8 <col:22, col:103> 'int'
    |       `-BinaryOperator 0x56324b412eb8 <col:23, col:102> 'int' '&&'
    |         |-BinaryOperator 0x56324b412e20 <col:23, col:74> 'int' '&&'
    |         | |-BinaryOperator 0x56324b412d88 <col:23, col:46> 'int' '=='
    |         | | |-ImplicitCastExpr 0x56324b412d70 <col:23> 'int' <LValueToRValue>
    |         | | | `-DeclRefExpr 0x56324b412d30 <col:23> 'int' lvalue Var 0x56324b406440 '__unbuffered_p0_EAX' 'int'
    |         | | `-IntegerLiteral 0x56324b412d50 <col:46> 'int' 0
    |         | `-BinaryOperator 0x56324b412e00 <col:51, col:74> 'int' '=='
    |         |   |-ImplicitCastExpr 0x56324b412de8 <col:51> 'int' <LValueToRValue>
    |         |   | `-DeclRefExpr 0x56324b412da8 <col:51> 'int' lvalue Var 0x56324b406560 '__unbuffered_p2_EAX' 'int'
    |         |   `-IntegerLiteral 0x56324b412dc8 <col:74> 'int' 1
    |         `-BinaryOperator 0x56324b412e98 <col:79, col:102> 'int' '=='
    |           |-ImplicitCastExpr 0x56324b412e80 <col:79> 'int' <LValueToRValue>
    |           | `-DeclRefExpr 0x56324b412e40 <col:79> 'int' lvalue Var 0x56324b406e70 '__unbuffered_p2_EBX' 'int'
    |           `-IntegerLiteral 0x56324b412e60 <col:102> 'int' 0
    |-CallExpr 0x56324b412f80 <line:835:3, col:25> 'void'
    | `-ImplicitCastExpr 0x56324b412f68 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x56324b412f48 <col:3> 'void ()' Function 0x56324b3ad060 '__VERIFIER_atomic_end' 'void ()'
    |-CallExpr 0x56324b412ff8 <line:836:3, col:36> 'void'
    | |-ImplicitCastExpr 0x56324b412fe0 <col:3> 'void (*)(int)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x56324b412fa0 <col:3> 'void (int)' Function 0x56324b3acd28 '__VERIFIER_assert' 'void (int)'
    | `-ImplicitCastExpr 0x56324b413038 <col:21> 'int' <IntegralCast>
    |   `-ImplicitCastExpr 0x56324b413020 <col:21> '_Bool' <LValueToRValue>
    |     `-DeclRefExpr 0x56324b412fc0 <col:21> '_Bool' lvalue Var 0x56324b406f80 'main$tmp_guard1' '_Bool'
    `-ReturnStmt 0x56324b413070 <line:837:3, col:10>
      `-IntegerLiteral 0x56324b413050 <col:10> 'int' 0
