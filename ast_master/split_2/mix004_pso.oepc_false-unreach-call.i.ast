TranslationUnitDecl 0x560d0687fe18 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x560d068806d8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x560d068803b0 '__int128'
|-TypedefDecl 0x560d06880748 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x560d068803d0 'unsigned __int128'
|-TypedefDecl 0x560d06880a50 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x560d06880820 'struct __NSConstantString_tag'
|   `-Record 0x560d068807a0 '__NSConstantString_tag'
|-TypedefDecl 0x560d06880af8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x560d06880ab0 'char *'
|   `-BuiltinType 0x560d0687feb0 'char'
|-TypedefDecl 0x560d068bf650 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'struct __va_list_tag [1]'
| `-ConstantArrayType 0x560d06880d90 'struct __va_list_tag [1]' 1 
|   `-RecordType 0x560d06880bd0 'struct __va_list_tag'
|     `-Record 0x560d06880b50 '__va_list_tag'
|-FunctionDecl 0x560d068bf790 <./split_2/mix004_pso.oepc_false-unreach-call.i:1:1, col:34> col:13 used __VERIFIER_assume 'void (int)' extern
| `-ParmVarDecl 0x560d068bf6c0 <col:31> col:34 'int'
|-FunctionDecl 0x560d068bf958 <line:2:1, col:45> col:15 used __VERIFIER_nondet_pointer 'void *(void)' extern
|-FunctionDecl 0x560d068bfa80 <line:3:1, col:61> col:13 used __VERIFIER_error 'void () __attribute__((noreturn))' extern
|-FunctionDecl 0x560d068bfbc8 <line:4:1, col:99> col:6 used __VERIFIER_assert 'void (int)'
| |-ParmVarDecl 0x560d068bfb38 <col:24, col:28> col:28 used expression 'int'
| `-CompoundStmt 0x560d068bfdf8 <col:40, col:99>
|   |-IfStmt 0x560d068bfdc8 <col:42, col:88>
|   | |-UnaryOperator 0x560d068bfca8 <col:46, col:47> 'int' prefix '!' cannot overflow
|   | | `-ImplicitCastExpr 0x560d068bfc90 <col:47> 'int' <LValueToRValue>
|   | |   `-DeclRefExpr 0x560d068bfc70 <col:47> 'int' lvalue ParmVar 0x560d068bfb38 'expression' 'int'
|   | `-CompoundStmt 0x560d068bfdb0 <col:59, col:88>
|   |   `-LabelStmt 0x560d068bfd98 <col:61, col:85> 'ERROR'
|   |     `-CallExpr 0x560d068bfd28 <col:68, col:85> 'void'
|   |       `-ImplicitCastExpr 0x560d068bfd10 <col:68> 'void (*)() __attribute__((noreturn))' <FunctionToPointerDecay>
|   |         `-DeclRefExpr 0x560d068bfcc0 <col:68> 'void () __attribute__((noreturn))' Function 0x560d068bfa80 '__VERIFIER_error' 'void () __attribute__((noreturn))'
|   |-NullStmt 0x560d068bfde0 <col:89>
|   `-ReturnStmt 0x560d068bfde8 <col:91>
|-FunctionDecl 0x560d068bfe40 <line:5:1, col:37> col:13 used __VERIFIER_atomic_begin 'void ()' extern
|-FunctionDecl 0x560d068bff00 <line:6:1, col:35> col:13 used __VERIFIER_atomic_end 'void ()' extern
|-FunctionDecl 0x560d068c0280 <line:8:1, line:10:76> line:8:13 __assert_fail 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x560d068bffb8 <col:28, col:40> col:40 __assertion 'const char *'
| |-ParmVarDecl 0x560d068c0038 <col:53, col:65> col:65 __file 'const char *'
| |-ParmVarDecl 0x560d068c00b8 <line:9:7, col:20> col:20 __line 'unsigned int'
| |-ParmVarDecl 0x560d068c0138 <col:28, col:40> col:40 __function 'const char *'
| `-NoThrowAttr 0x560d068c0340 <line:10:22>
|-FunctionDecl 0x560d068e6390 <line:11:1, line:13:76> line:11:13 __assert_perror_fail 'void (int, const char *, unsigned int, const char *) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x560d068c03b0 <col:35, col:39> col:39 __errnum 'int'
| |-ParmVarDecl 0x560d068c0430 <col:49, col:61> col:61 __file 'const char *'
| |-ParmVarDecl 0x560d068c04b0 <line:12:7, col:20> col:20 __line 'unsigned int'
| |-ParmVarDecl 0x560d068c0530 <col:28, col:40> col:40 __function 'const char *'
| `-NoThrowAttr 0x560d068e6450 <line:13:22>
|-FunctionDecl 0x560d068e6700 <line:14:1, line:15:76> line:14:13 __assert 'void (const char *, const char *, int) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x560d068e64c0 <col:23, col:35> col:35 __assertion 'const char *'
| |-ParmVarDecl 0x560d068e6540 <col:48, col:60> col:60 __file 'const char *'
| |-ParmVarDecl 0x560d068e65c0 <col:68, col:72> col:72 __line 'int'
| `-NoThrowAttr 0x560d068e67b8 <line:15:22>
|-TypedefDecl 0x560d068e6828 <line:17:1, col:23> col:23 __u_char 'unsigned char'
| `-BuiltinType 0x560d0687ff70 'unsigned char'
|-TypedefDecl 0x560d068e6898 <line:18:1, col:28> col:28 __u_short 'unsigned short'
| `-BuiltinType 0x560d0687ff90 'unsigned short'
|-TypedefDecl 0x560d068e6908 <line:19:1, col:22> col:22 __u_int 'unsigned int'
| `-BuiltinType 0x560d0687ffb0 'unsigned int'
|-TypedefDecl 0x560d068e6978 <line:20:1, col:27> col:27 __u_long 'unsigned long'
| `-BuiltinType 0x560d0687ffd0 'unsigned long'
|-TypedefDecl 0x560d068e69e8 <line:21:1, col:21> col:21 __int8_t 'signed char'
| `-BuiltinType 0x560d0687fed0 'signed char'
|-TypedefDecl 0x560d068e6a58 <line:22:1, col:23> col:23 __uint8_t 'unsigned char'
| `-BuiltinType 0x560d0687ff70 'unsigned char'
|-TypedefDecl 0x560d068e6ac8 <line:23:1, col:26> col:26 __int16_t 'short'
| `-BuiltinType 0x560d0687fef0 'short'
|-TypedefDecl 0x560d068e6b38 <line:24:1, col:28> col:28 __uint16_t 'unsigned short'
| `-BuiltinType 0x560d0687ff90 'unsigned short'
|-TypedefDecl 0x560d068e6ba8 <line:25:1, col:20> col:20 __int32_t 'int'
| `-BuiltinType 0x560d0687ff10 'int'
|-TypedefDecl 0x560d068e6c18 <line:26:1, col:22> col:22 __uint32_t 'unsigned int'
| `-BuiltinType 0x560d0687ffb0 'unsigned int'
|-TypedefDecl 0x560d068e6c88 <line:27:1, col:25> col:25 __int64_t 'long'
| `-BuiltinType 0x560d0687ff30 'long'
|-TypedefDecl 0x560d068e6cf8 <line:28:1, col:27> col:27 referenced __uint64_t 'unsigned long'
| `-BuiltinType 0x560d0687ffd0 'unsigned long'
|-TypedefDecl 0x560d068e6d68 <line:29:1, col:18> col:18 referenced __quad_t 'long'
| `-BuiltinType 0x560d0687ff30 'long'
|-TypedefDecl 0x560d068e6dd8 <line:30:1, col:27> col:27 __u_quad_t 'unsigned long'
| `-BuiltinType 0x560d0687ffd0 'unsigned long'
|-TypedefDecl 0x560d068e6e48 <line:31:1, col:27> col:27 __dev_t 'unsigned long'
| `-BuiltinType 0x560d0687ffd0 'unsigned long'
|-TypedefDecl 0x560d068e6eb8 <line:32:1, col:22> col:22 __uid_t 'unsigned int'
| `-BuiltinType 0x560d0687ffb0 'unsigned int'
|-TypedefDecl 0x560d068e6f28 <line:33:1, col:22> col:22 __gid_t 'unsigned int'
| `-BuiltinType 0x560d0687ffb0 'unsigned int'
|-TypedefDecl 0x560d068e6f98 <line:34:1, col:27> col:27 __ino_t 'unsigned long'
| `-BuiltinType 0x560d0687ffd0 'unsigned long'
|-TypedefDecl 0x560d068e7008 <line:35:1, col:27> col:27 __ino64_t 'unsigned long'
| `-BuiltinType 0x560d0687ffd0 'unsigned long'
|-TypedefDecl 0x560d068e7078 <line:36:1, col:22> col:22 __mode_t 'unsigned int'
| `-BuiltinType 0x560d0687ffb0 'unsigned int'
|-TypedefDecl 0x560d068e70e8 <line:37:1, col:27> col:27 __nlink_t 'unsigned long'
| `-BuiltinType 0x560d0687ffd0 'unsigned long'
|-TypedefDecl 0x560d068e7158 <line:38:1, col:18> col:18 __off_t 'long'
| `-BuiltinType 0x560d0687ff30 'long'
|-TypedefDecl 0x560d068e71c8 <line:39:1, col:18> col:18 referenced __off64_t 'long'
| `-BuiltinType 0x560d0687ff30 'long'
|-TypedefDecl 0x560d068e7238 <line:40:1, col:13> col:13 referenced __pid_t 'int'
| `-BuiltinType 0x560d0687ff10 'int'
|-RecordDecl 0x560d068e7290 <line:41:9, col:32> col:9 struct definition
| `-FieldDecl 0x560d068e7408 <col:18, col:29> col:22 __val 'int [2]'
|-TypedefDecl 0x560d068e74c0 <col:1, col:34> col:34 __fsid_t 'struct __fsid_t':'__fsid_t'
| `-ElaboratedType 0x560d068e7460 'struct __fsid_t' sugar
|   `-RecordType 0x560d068e7310 '__fsid_t'
|     `-Record 0x560d068e7290 ''
|-TypedefDecl 0x560d068e7548 <line:42:1, col:18> col:18 referenced __clock_t 'long'
| `-BuiltinType 0x560d0687ff30 'long'
|-TypedefDecl 0x560d068e75b8 <line:43:1, col:27> col:27 __rlim_t 'unsigned long'
| `-BuiltinType 0x560d0687ffd0 'unsigned long'
|-TypedefDecl 0x560d068e7628 <line:44:1, col:27> col:27 __rlim64_t 'unsigned long'
| `-BuiltinType 0x560d0687ffd0 'unsigned long'
|-TypedefDecl 0x560d068e7698 <line:45:1, col:22> col:22 __id_t 'unsigned int'
| `-BuiltinType 0x560d0687ffb0 'unsigned int'
|-TypedefDecl 0x560d068e7708 <line:46:1, col:18> col:18 referenced __time_t 'long'
| `-BuiltinType 0x560d0687ff30 'long'
|-TypedefDecl 0x560d068e7778 <line:47:1, col:22> col:22 __useconds_t 'unsigned int'
| `-BuiltinType 0x560d0687ffb0 'unsigned int'
|-TypedefDecl 0x560d068e77e8 <line:48:1, col:18> col:18 __suseconds_t 'long'
| `-BuiltinType 0x560d0687ff30 'long'
|-TypedefDecl 0x560d068e7858 <line:49:1, col:13> col:13 __daddr_t 'int'
| `-BuiltinType 0x560d0687ff10 'int'
|-TypedefDecl 0x560d068e78c8 <line:50:1, col:13> col:13 __key_t 'int'
| `-BuiltinType 0x560d0687ff10 'int'
|-TypedefDecl 0x560d068e7938 <line:51:1, col:13> col:13 referenced __clockid_t 'int'
| `-BuiltinType 0x560d0687ff10 'int'
|-TypedefDecl 0x560d068e79a8 <line:52:1, col:16> col:16 referenced __timer_t 'void *'
| `-PointerType 0x560d06880630 'void *'
|   `-BuiltinType 0x560d0687fe70 'void'
|-TypedefDecl 0x560d068e7a18 <line:53:1, col:18> col:18 __blksize_t 'long'
| `-BuiltinType 0x560d0687ff30 'long'
|-TypedefDecl 0x560d068e7a88 <line:54:1, col:18> col:18 __blkcnt_t 'long'
| `-BuiltinType 0x560d0687ff30 'long'
|-TypedefDecl 0x560d068e7af8 <line:55:1, col:18> col:18 __blkcnt64_t 'long'
| `-BuiltinType 0x560d0687ff30 'long'
|-TypedefDecl 0x560d068e7b68 <line:56:1, col:27> col:27 __fsblkcnt_t 'unsigned long'
| `-BuiltinType 0x560d0687ffd0 'unsigned long'
|-TypedefDecl 0x560d068e7bd8 <line:57:1, col:27> col:27 __fsblkcnt64_t 'unsigned long'
| `-BuiltinType 0x560d0687ffd0 'unsigned long'
|-TypedefDecl 0x560d068e7c48 <line:58:1, col:27> col:27 __fsfilcnt_t 'unsigned long'
| `-BuiltinType 0x560d0687ffd0 'unsigned long'
|-TypedefDecl 0x560d068e7cb8 <line:59:1, col:27> col:27 __fsfilcnt64_t 'unsigned long'
| `-BuiltinType 0x560d0687ffd0 'unsigned long'
|-TypedefDecl 0x560d068e7d28 <line:60:1, col:18> col:18 __fsword_t 'long'
| `-BuiltinType 0x560d0687ff30 'long'
|-TypedefDecl 0x560d068e7d98 <line:61:1, col:18> col:18 __ssize_t 'long'
| `-BuiltinType 0x560d0687ff30 'long'
|-TypedefDecl 0x560d068e7e08 <line:62:1, col:18> col:18 referenced __syscall_slong_t 'long'
| `-BuiltinType 0x560d0687ff30 'long'
|-TypedefDecl 0x560d068e7e78 <line:63:1, col:27> col:27 __syscall_ulong_t 'unsigned long'
| `-BuiltinType 0x560d0687ffd0 'unsigned long'
|-TypedefDecl 0x560d068e7f08 <line:64:1, col:19> col:19 __loff_t '__off64_t':'long'
| `-TypedefType 0x560d068e7ed0 '__off64_t' sugar
|   |-Typedef 0x560d068e71c8 '__off64_t'
|   `-BuiltinType 0x560d0687ff30 'long'
|-TypedefDecl 0x560d068e8000 <line:65:1, col:19> col:19 __qaddr_t '__quad_t *'
| `-PointerType 0x560d068e7fc0 '__quad_t *'
|   `-TypedefType 0x560d068e7f60 '__quad_t' sugar
|     |-Typedef 0x560d068e6d68 '__quad_t'
|     `-BuiltinType 0x560d0687ff30 'long'
|-TypedefDecl 0x560d068e8070 <line:66:1, col:15> col:15 __caddr_t 'char *'
| `-PointerType 0x560d06880ab0 'char *'
|   `-BuiltinType 0x560d0687feb0 'char'
|-TypedefDecl 0x560d068e80e0 <line:67:1, col:18> col:18 __intptr_t 'long'
| `-BuiltinType 0x560d0687ff30 'long'
|-TypedefDecl 0x560d068e8150 <line:68:1, col:22> col:22 __socklen_t 'unsigned int'
| `-BuiltinType 0x560d0687ffb0 'unsigned int'
|-FunctionDecl 0x560d068e8298 <line:69:1, line:73:1> line:70:1 __bswap_32 'unsigned int (unsigned int)' static inline
| |-ParmVarDecl 0x560d068e81c0 <col:13, col:26> col:26 used __bsx 'unsigned int'
| `-CompoundStmt 0x560d068e95e8 <line:71:1, line:73:1>
|   `-ReturnStmt 0x560d068e95d8 <line:72:3, col:34>
|     `-CallExpr 0x560d068e9598 <col:10, col:34> 'unsigned int'
|       |-ImplicitCastExpr 0x560d068e9580 <col:10> 'unsigned int (*)(unsigned int)' <BuiltinFnToFnPtr>
|       | `-DeclRefExpr 0x560d068e9510 <col:10> '<builtin fn type>' Function 0x560d068e9380 '__builtin_bswap32' 'unsigned int (unsigned int)'
|       `-ImplicitCastExpr 0x560d068e95c0 <col:29> 'unsigned int' <LValueToRValue>
|         `-DeclRefExpr 0x560d068e9530 <col:29> 'unsigned int' lvalue ParmVar 0x560d068e81c0 '__bsx' 'unsigned int'
|-FunctionDecl 0x560d068e9380 <col:10> col:10 implicit used __builtin_bswap32 'unsigned int (unsigned int)' extern
| |-ParmVarDecl 0x560d068e9420 <<invalid sloc>> <invalid sloc> 'unsigned int'
| |-NoThrowAttr 0x560d068e9490 <col:10> Implicit
| `-ConstAttr 0x560d068e94e8 <col:10> Implicit
|-FunctionDecl 0x560d068e9740 <line:74:1, line:78:1> line:75:1 __bswap_64 '__uint64_t (__uint64_t)' static inline
| |-ParmVarDecl 0x560d068e9638 <col:13, col:24> col:24 used __bsx '__uint64_t':'unsigned long'
| `-CompoundStmt 0x560d068e9a58 <line:76:1, line:78:1>
|   `-ReturnStmt 0x560d068e9a48 <line:77:3, col:34>
|     `-CallExpr 0x560d068e9a08 <col:10, col:34> 'unsigned long'
|       |-ImplicitCastExpr 0x560d068e99f0 <col:10> 'unsigned long (*)(unsigned long)' <BuiltinFnToFnPtr>
|       | `-DeclRefExpr 0x560d068e9978 <col:10> '<builtin fn type>' Function 0x560d068e97e8 '__builtin_bswap64' 'unsigned long (unsigned long)'
|       `-ImplicitCastExpr 0x560d068e9a30 <col:29> '__uint64_t':'unsigned long' <LValueToRValue>
|         `-DeclRefExpr 0x560d068e9998 <col:29> '__uint64_t':'unsigned long' lvalue ParmVar 0x560d068e9638 '__bsx' '__uint64_t':'unsigned long'
|-FunctionDecl 0x560d068e97e8 <col:10> col:10 implicit used __builtin_bswap64 'unsigned long (unsigned long)' extern
| |-ParmVarDecl 0x560d068e9888 <<invalid sloc>> <invalid sloc> 'unsigned long'
| |-NoThrowAttr 0x560d068e98f8 <col:10> Implicit
| `-ConstAttr 0x560d068e9950 <col:10> Implicit
|-TypedefDecl 0x560d068e9a88 <line:79:1, col:27> col:27 referenced size_t 'unsigned long'
| `-BuiltinType 0x560d0687ffd0 'unsigned long'
|-TypedefDecl 0x560d068e9b18 <line:81:1, col:18> col:18 referenced time_t '__time_t':'long'
| `-TypedefType 0x560d068e9ae0 '__time_t' sugar
|   |-Typedef 0x560d068e7708 '__time_t'
|   `-BuiltinType 0x560d0687ff30 'long'
|-RecordDecl 0x560d068e9b70 <line:84:1, line:88:3> line:84:8 struct timespec definition
| |-FieldDecl 0x560d068e9c28 <line:86:5, col:14> col:14 tv_sec '__time_t':'long'
| `-FieldDecl 0x560d068e9cb8 <line:87:5, col:23> col:23 tv_nsec '__syscall_slong_t':'long'
|-TypedefDecl 0x560d068e9d48 <line:89:1, col:17> col:17 referenced pid_t '__pid_t':'int'
| `-TypedefType 0x560d068e9d10 '__pid_t' sugar
|   |-Typedef 0x560d068e7238 '__pid_t'
|   `-BuiltinType 0x560d0687ff10 'int'
|-RecordDecl 0x560d068e9da0 <line:90:1, line:93:3> line:90:8 struct sched_param definition
| `-FieldDecl 0x560d068e9e60 <line:92:5, col:9> col:9 __sched_priority 'int'
|-RecordDecl 0x560d068e9eb0 <line:96:1, line:99:3> line:96:8 struct __sched_param definition
| `-FieldDecl 0x560d068e9f70 <line:98:5, col:9> col:9 __sched_priority 'int'
|-TypedefDecl 0x560d068e9fd8 <line:100:1, col:27> col:27 referenced __cpu_mask 'unsigned long'
| `-BuiltinType 0x560d0687ffd0 'unsigned long'
|-RecordDecl 0x560d068ea030 <line:101:9, line:104:1> line:101:9 struct definition
| `-FieldDecl 0x560d068ea2c0 <line:103:3, col:53> col:14 __bits '__cpu_mask [64]'
|-TypedefDecl 0x560d068eb3a0 <line:101:1, line:104:3> col:3 referenced cpu_set_t 'struct cpu_set_t':'cpu_set_t'
| `-ElaboratedType 0x560d068ea310 'struct cpu_set_t' sugar
|   `-RecordType 0x560d068ea0b0 'cpu_set_t'
|     `-Record 0x560d068ea030 ''
|-FunctionDecl 0x560d068eb678 <line:106:1, line:107:42> line:106:12 __sched_cpucount 'int (size_t, const cpu_set_t *)' extern
| |-ParmVarDecl 0x560d068eb448 <col:30, col:37> col:37 __setsize 'size_t':'unsigned long'
| |-ParmVarDecl 0x560d068eb550 <col:48, col:65> col:65 __setp 'const cpu_set_t *'
| `-NoThrowAttr 0x560d068eb728 <line:107:19>
|-FunctionDecl 0x560d068eb900 <line:108:1, col:92> col:19 __sched_cpualloc 'cpu_set_t *(size_t)' extern
| |-ParmVarDecl 0x560d068eb790 <col:37, col:44> col:44 __count 'size_t':'unsigned long'
| `-NoThrowAttr 0x560d068eb9a8 <col:69>
|-FunctionDecl 0x560d068ebb20 <line:109:1, col:87> col:13 __sched_cpufree 'void (cpu_set_t *)' extern
| |-ParmVarDecl 0x560d068eba10 <col:30, col:41> col:41 __set 'cpu_set_t *'
| `-NoThrowAttr 0x560d068ebbc8 <col:64>
|-FunctionDecl 0x560d068ebe88 <line:112:1, line:113:45> line:112:12 sched_setparam 'int (__pid_t, const struct sched_param *)' extern
| |-ParmVarDecl 0x560d068ebc30 <col:28, col:36> col:36 __pid '__pid_t':'int'
| |-ParmVarDecl 0x560d068ebd68 <col:43, col:69> col:69 __param 'const struct sched_param *'
| `-NoThrowAttr 0x560d068ebf38 <line:113:22>
|-FunctionDecl 0x560d068ec1b8 <line:114:1, col:111> col:12 sched_getparam 'int (__pid_t, struct sched_param *)' extern
| |-ParmVarDecl 0x560d068ebfa0 <col:28, col:36> col:36 __pid '__pid_t':'int'
| |-ParmVarDecl 0x560d068ec098 <col:43, col:63> col:63 __param 'struct sched_param *'
| `-NoThrowAttr 0x560d068ec268 <col:88>
|-FunctionDecl 0x560d068ec588 <line:115:1, line:116:85> line:115:12 sched_setscheduler 'int (__pid_t, int, const struct sched_param *)' extern
| |-ParmVarDecl 0x560d068ec2d0 <col:32, col:40> col:40 __pid '__pid_t':'int'
| |-ParmVarDecl 0x560d068ec3b0 <col:47, col:51> col:51 __policy 'int'
| |-ParmVarDecl 0x560d068ec440 <line:116:11, col:37> col:37 __param 'const struct sched_param *'
| `-NoThrowAttr 0x560d068ec640 <col:62>
|-FunctionDecl 0x560d068ec7b8 <line:117:1, col:86> col:12 sched_getscheduler 'int (__pid_t)' extern
| |-ParmVarDecl 0x560d068ec6a8 <col:32, col:40> col:40 __pid '__pid_t':'int'
| `-NoThrowAttr 0x560d068ec860 <col:63>
|-FunctionDecl 0x560d068ec988 <line:118:1, col:70> col:12 sched_yield 'int (void)' extern
| `-NoThrowAttr 0x560d068eca28 <col:47>
|-FunctionDecl 0x560d068ecb30 <line:119:1, col:92> col:12 sched_get_priority_max 'int (int)' extern
| |-ParmVarDecl 0x560d068eca98 <col:36, col:40> col:40 __algorithm 'int'
| `-NoThrowAttr 0x560d068ecbd8 <col:69>
|-FunctionDecl 0x560d068ecce0 <line:120:1, col:92> col:12 sched_get_priority_min 'int (int)' extern
| |-ParmVarDecl 0x560d068ecc48 <col:36, col:40> col:40 __algorithm 'int'
| `-NoThrowAttr 0x560d068ecd88 <col:69>
|-FunctionDecl 0x560d068ed048 <line:121:1, col:111> col:12 sched_rr_get_interval 'int (__pid_t, struct timespec *)' extern
| |-ParmVarDecl 0x560d068ecdf0 <col:35, col:43> col:43 __pid '__pid_t':'int'
| |-ParmVarDecl 0x560d068ecf28 <col:50, col:67> col:67 __t 'struct timespec *'
| `-NoThrowAttr 0x560d068ed0f8 <col:88>
|-TypedefDecl 0x560d068ed188 <line:125:1, col:19> col:19 referenced clock_t '__clock_t':'long'
| `-TypedefType 0x560d068ed150 '__clock_t' sugar
|   |-Typedef 0x560d068e7548 '__clock_t'
|   `-BuiltinType 0x560d0687ff30 'long'
|-TypedefDecl 0x560d068ed218 <line:128:1, col:21> col:21 referenced clockid_t '__clockid_t':'int'
| `-TypedefType 0x560d068ed1e0 '__clockid_t' sugar
|   |-Typedef 0x560d068e7938 '__clockid_t'
|   `-BuiltinType 0x560d0687ff10 'int'
|-TypedefDecl 0x560d068ed2a8 <line:129:1, col:19> col:19 referenced timer_t '__timer_t':'void *'
| `-TypedefType 0x560d068ed270 '__timer_t' sugar
|   |-Typedef 0x560d068e79a8 '__timer_t'
|   `-PointerType 0x560d06880630 'void *'
|     `-BuiltinType 0x560d0687fe70 'void'
|-RecordDecl 0x560d068ed300 <line:131:1, line:144:1> line:131:8 struct tm definition
| |-FieldDecl 0x560d068ed3d8 <line:133:3, col:7> col:7 tm_sec 'int'
| |-FieldDecl 0x560d068ed440 <line:134:3, col:7> col:7 tm_min 'int'
| |-FieldDecl 0x560d068ed4a8 <line:135:3, col:7> col:7 tm_hour 'int'
| |-FieldDecl 0x560d068ed510 <line:136:3, col:7> col:7 tm_mday 'int'
| |-FieldDecl 0x560d068ed578 <line:137:3, col:7> col:7 tm_mon 'int'
| |-FieldDecl 0x560d068ed5e0 <line:138:3, col:7> col:7 tm_year 'int'
| |-FieldDecl 0x560d068ed648 <line:139:3, col:7> col:7 tm_wday 'int'
| |-FieldDecl 0x560d068ed6b0 <line:140:3, col:7> col:7 tm_yday 'int'
| |-FieldDecl 0x560d068ed718 <line:141:3, col:7> col:7 tm_isdst 'int'
| |-FieldDecl 0x560d068ed780 <line:142:3, col:12> col:12 tm_gmtoff 'long'
| `-FieldDecl 0x560d068ed7e8 <line:143:3, col:15> col:15 tm_zone 'const char *'
|-RecordDecl 0x560d068ed838 <line:147:1, line:151:3> line:147:8 struct itimerspec definition
| |-FieldDecl 0x560d068ed908 <line:149:5, col:21> col:21 it_interval 'struct timespec':'struct timespec'
| `-FieldDecl 0x560d068ed978 <line:150:5, col:21> col:21 it_value 'struct timespec':'struct timespec'
|-RecordDecl 0x560d068eda20 <line:152:1, col:8> col:8 struct sigevent
|-FunctionDecl 0x560d068edbf0 <line:154:1, col:68> col:16 clock 'clock_t (void)' extern
| `-NoThrowAttr 0x560d068edc90 <col:45>
|-FunctionDecl 0x560d068ede70 <line:155:1, col:77> col:15 time 'time_t (time_t *)' extern
| |-ParmVarDecl 0x560d068edd60 <col:21, col:29> col:29 __timer 'time_t *'
| `-NoThrowAttr 0x560d068edf18 <col:54>
|-FunctionDecl 0x560d068ee118 <line:156:1, line:157:73> line:156:15 difftime 'double (time_t, time_t)' extern
| |-ParmVarDecl 0x560d068edf80 <col:25, col:32> col:32 __time1 'time_t':'long'
| |-ParmVarDecl 0x560d068edff8 <col:41, col:48> col:48 __time0 'time_t':'long'
| |-NoThrowAttr 0x560d068ee1c8 <line:157:22>
| `-ConstAttr 0x560d068ee220 <col:63>
|-FunctionDecl 0x560d068ef050 <line:158:1, col:79> col:15 mktime 'time_t (struct tm *)' extern
| |-ParmVarDecl 0x560d068ee318 <col:23, col:34> col:34 __tp 'struct tm *'
| `-NoThrowAttr 0x560d068ef0f8 <col:56>
|-FunctionDecl 0x560d068ef4a0 <line:159:1, line:161:77> line:159:15 strftime 'size_t (char *restrict, size_t, const char *restrict, const struct tm *restrict)' extern
| |-ParmVarDecl 0x560d068ef168 <col:25, col:42> col:42 __s 'char *restrict'
| |-ParmVarDecl 0x560d068ef1e0 <col:47, col:54> col:54 __maxsize 'size_t':'unsigned long'
| |-ParmVarDecl 0x560d068ef260 <line:160:4, col:27> col:27 __format 'const char *restrict'
| |-ParmVarDecl 0x560d068ef358 <line:161:4, col:32> col:32 __tp 'const struct tm *restrict'
| `-NoThrowAttr 0x560d068ef560 <col:54>
|-RecordDecl 0x560d068ef5b8 <line:163:9, line:170:1> line:163:16 struct __locale_struct definition
| |-RecordDecl 0x560d068ef668 parent 0x560d0687fe18 <line:165:3, col:10> col:10 struct __locale_data
| |-FieldDecl 0x560d068ef8c8 <col:3, col:37> col:25 __locales 'struct __locale_data *[13]'
| |-FieldDecl 0x560d068ef968 <line:166:3, col:29> col:29 __ctype_b 'const unsigned short *'
| |-FieldDecl 0x560d068ef9d0 <line:167:3, col:14> col:14 __ctype_tolower 'const int *'
| |-FieldDecl 0x560d068efa38 <line:168:3, col:14> col:14 __ctype_toupper 'const int *'
| `-FieldDecl 0x560d068efb28 <line:169:3, col:25> col:15 __names 'const char *[13]'
|-TypedefDecl 0x560d068efc48 <line:163:1, line:170:4> col:4 referenced __locale_t 'struct __locale_struct *'
| `-PointerType 0x560d068efbf0 'struct __locale_struct *'
|   `-ElaboratedType 0x560d068efb80 'struct __locale_struct' sugar
|     `-RecordType 0x560d068ef640 'struct __locale_struct'
|       `-Record 0x560d068ef5b8 '__locale_struct'
|-TypedefDecl 0x560d068efcf8 <line:171:1, col:20> col:20 locale_t '__locale_t':'struct __locale_struct *'
| `-TypedefType 0x560d068efcc0 '__locale_t' sugar
|   |-Typedef 0x560d068efc48 '__locale_t'
|   `-PointerType 0x560d068efbf0 'struct __locale_struct *'
|     `-ElaboratedType 0x560d068efb80 'struct __locale_struct' sugar
|       `-RecordType 0x560d068ef640 'struct __locale_struct'
|         `-Record 0x560d068ef5b8 '__locale_struct'
|-FunctionDecl 0x560d068f1110 <line:172:1, line:175:63> line:172:15 strftime_l 'size_t (char *restrict, size_t, const char *restrict, const struct tm *restrict, __locale_t)' extern
| |-ParmVarDecl 0x560d068efd68 <col:27, col:44> col:44 __s 'char *restrict'
| |-ParmVarDecl 0x560d068efde0 <col:49, col:56> col:56 __maxsize 'size_t':'unsigned long'
| |-ParmVarDecl 0x560d068efe60 <line:173:6, col:29> col:29 __format 'const char *restrict'
| |-ParmVarDecl 0x560d068efef0 <line:174:6, col:34> col:34 __tp 'const struct tm *restrict'
| |-ParmVarDecl 0x560d068eff68 <line:175:6, col:17> col:17 __loc '__locale_t':'struct __locale_struct *'
| `-NoThrowAttr 0x560d068f11d8 <col:40>
|-FunctionDecl 0x560d068f13c8 <line:177:1, col:89> col:19 gmtime 'struct tm *(const time_t *)' extern
| |-ParmVarDecl 0x560d068f12a0 <col:27, col:41> col:41 __timer 'const time_t *'
| `-NoThrowAttr 0x560d068f1470 <col:66>
|-FunctionDecl 0x560d068f1580 <line:178:1, col:92> col:19 localtime 'struct tm *(const time_t *)' extern
| |-ParmVarDecl 0x560d068f14d8 <col:30, col:44> col:44 __timer 'const time_t *'
| `-NoThrowAttr 0x560d068f1628 <col:69>
|-FunctionDecl 0x560d068f1858 <line:180:1, line:181:75> line:180:19 gmtime_r 'struct tm *(const time_t *restrict, struct tm *restrict)' extern
| |-ParmVarDecl 0x560d068f1690 <col:29, col:54> col:54 __timer 'const time_t *restrict'
| |-ParmVarDecl 0x560d068f1720 <line:181:8, col:30> col:30 __tp 'struct tm *restrict'
| `-NoThrowAttr 0x560d068f1908 <col:52>
|-FunctionDecl 0x560d068f1ab0 <line:182:1, line:183:78> line:182:19 localtime_r 'struct tm *(const time_t *restrict, struct tm *restrict)' extern
| |-ParmVarDecl 0x560d068f1970 <col:32, col:57> col:57 __timer 'const time_t *restrict'
| |-ParmVarDecl 0x560d068f1a00 <line:183:11, col:33> col:33 __tp 'struct tm *restrict'
| `-NoThrowAttr 0x560d068f1b60 <col:55>
|-FunctionDecl 0x560d068f1cf8 <line:185:1, col:85> col:14 asctime 'char *(const struct tm *)' extern
| |-ParmVarDecl 0x560d068f1be0 <col:23, col:40> col:40 __tp 'const struct tm *'
| `-NoThrowAttr 0x560d068f1da0 <col:62>
|-FunctionDecl 0x560d068f1f18 <line:186:1, col:83> col:14 ctime 'char *(const time_t *)' extern
| |-ParmVarDecl 0x560d068f1e08 <col:21, col:35> col:35 __timer 'const time_t *'
| `-NoThrowAttr 0x560d068f1fc0 <col:60>
|-FunctionDecl 0x560d068f22b8 <line:188:1, line:189:67> line:188:14 asctime_r 'char *(const struct tm *restrict, char *restrict)' extern
| |-ParmVarDecl 0x560d068f2118 <col:25, col:53> col:53 __tp 'const struct tm *restrict'
| |-ParmVarDecl 0x560d068f2198 <line:189:4, col:21> col:21 __buf 'char *restrict'
| `-NoThrowAttr 0x560d068f2368 <col:44>
|-FunctionDecl 0x560d068f2578 <line:190:1, line:191:72> line:190:14 ctime_r 'char *(const time_t *restrict, char *restrict)' extern
| |-ParmVarDecl 0x560d068f23d0 <col:23, col:48> col:48 __timer 'const time_t *restrict'
| |-ParmVarDecl 0x560d068f2450 <line:191:9, col:26> col:26 __buf 'char *restrict'
| `-NoThrowAttr 0x560d068f2628 <col:49>
|-VarDecl 0x560d068f2728 <line:192:1, col:24> col:14 __tzname 'char *[2]' extern
|-VarDecl 0x560d068f27a8 <line:193:1, col:12> col:12 __daylight 'int' extern
|-VarDecl 0x560d068f2828 <line:194:1, col:17> col:17 __timezone 'long' extern
|-VarDecl 0x560d068f28f0 <line:195:1, col:22> col:14 tzname 'char *[2]' extern
|-FunctionDecl 0x560d068f2a20 <line:196:1, col:65> col:13 tzset 'void (void)' extern
| `-NoThrowAttr 0x560d068f2ac0 <col:42>
|-VarDecl 0x560d068f2b30 <line:197:1, col:12> col:12 daylight 'int' extern
|-VarDecl 0x560d068f2bb0 <line:198:1, col:17> col:17 timezone 'long' extern
|-FunctionDecl 0x560d068f2d38 <line:199:1, col:80> col:12 stime 'int (const time_t *)' extern
| |-ParmVarDecl 0x560d068f2c28 <col:19, col:33> col:33 __when 'const time_t *'
| `-NoThrowAttr 0x560d068f2de0 <col:57>
|-FunctionDecl 0x560d068f2ef0 <line:200:1, col:79> col:15 timegm 'time_t (struct tm *)' extern
| |-ParmVarDecl 0x560d068f2e60 <col:23, col:34> col:34 __tp 'struct tm *'
| `-NoThrowAttr 0x560d068f2f98 <col:56>
|-FunctionDecl 0x560d068f30d0 <line:201:1, col:82> col:15 timelocal 'time_t (struct tm *)' extern
| |-ParmVarDecl 0x560d068f3018 <col:26, col:37> col:37 __tp 'struct tm *'
| `-NoThrowAttr 0x560d068f3178 <col:59>
|-FunctionDecl 0x560d068f3280 <line:202:1, col:99> col:12 dysize 'int (int)' extern
| |-ParmVarDecl 0x560d068f31e8 <col:20, col:24> col:24 __year 'int'
| |-NoThrowAttr 0x560d068f3328 <col:48>
| `-ConstAttr 0x560d068f3380 <col:89>
|-FunctionDecl 0x560d068f35e8 <line:203:1, line:204:37> line:203:12 nanosleep 'int (const struct timespec *, struct timespec *)' extern
| |-ParmVarDecl 0x560d068f3438 <col:23, col:46> col:46 __requested_time 'const struct timespec *'
| `-ParmVarDecl 0x560d068f34c8 <line:204:9, col:26> col:26 __remaining 'struct timespec *'
|-FunctionDecl 0x560d068f3848 <line:205:1, col:111> col:12 clock_getres 'int (clockid_t, struct timespec *)' extern
| |-ParmVarDecl 0x560d068f36d8 <col:26, col:36> col:36 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x560d068f3768 <col:48, col:65> col:65 __res 'struct timespec *'
| `-NoThrowAttr 0x560d068f38f8 <col:88>
|-FunctionDecl 0x560d068f3a90 <line:206:1, col:111> col:12 clock_gettime 'int (clockid_t, struct timespec *)' extern
| |-ParmVarDecl 0x560d068f3960 <col:27, col:37> col:37 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x560d068f39f0 <col:49, col:66> col:66 __tp 'struct timespec *'
| `-NoThrowAttr 0x560d068f3b40 <col:88>
|-FunctionDecl 0x560d068f3d58 <line:207:1, line:208:45> line:207:12 clock_settime 'int (clockid_t, const struct timespec *)' extern
| |-ParmVarDecl 0x560d068f3ba8 <col:27, col:37> col:37 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x560d068f3c38 <col:49, col:72> col:72 __tp 'const struct timespec *'
| `-NoThrowAttr 0x560d068f3e08 <line:208:22>
|-FunctionDecl 0x560d068f4178 <line:209:1, line:211:30> line:209:12 clock_nanosleep 'int (clockid_t, int, const struct timespec *, struct timespec *)' extern
| |-ParmVarDecl 0x560d068f3e70 <col:29, col:39> col:39 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x560d068f3ef0 <col:51, col:55> col:55 __flags 'int'
| |-ParmVarDecl 0x560d068f3f80 <line:210:8, col:31> col:31 __req 'const struct timespec *'
| `-ParmVarDecl 0x560d068f4010 <line:211:8, col:25> col:25 __rem 'struct timespec *'
|-FunctionDecl 0x560d068f4478 <line:212:1, col:108> col:12 clock_getcpuclockid 'int (pid_t, clockid_t *)' extern
| |-ParmVarDecl 0x560d068f4278 <col:33, col:39> col:39 __pid 'pid_t':'int'
| |-ParmVarDecl 0x560d068f4350 <col:46, col:57> col:57 __clock_id 'clockid_t *'
| `-NoThrowAttr 0x560d068f4528 <col:85>
|-FunctionDecl 0x560d068f4918 <line:213:1, line:215:75> line:213:12 timer_create 'int (clockid_t, struct sigevent *restrict, timer_t *restrict)' extern
| |-ParmVarDecl 0x560d068f4590 <col:26, col:36> col:36 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x560d068f46c8 <line:214:5, col:33> col:33 __evp 'struct sigevent *restrict'
| |-ParmVarDecl 0x560d068f47d0 <line:215:5, col:25> col:25 __timerid 'timer_t *restrict'
| `-NoThrowAttr 0x560d068f49d0 <col:52>
|-FunctionDecl 0x560d068f4b48 <line:216:1, col:84> col:12 timer_delete 'int (timer_t)' extern
| |-ParmVarDecl 0x560d068f4a38 <col:26, col:34> col:34 __timerid 'timer_t':'void *'
| `-NoThrowAttr 0x560d068f4bf0 <col:61>
|-FunctionDecl 0x560d068f50f0 <line:217:1, line:219:85> line:217:12 timer_settime 'int (timer_t, int, const struct itimerspec *restrict, struct itimerspec *restrict)' extern
| |-ParmVarDecl 0x560d068f4c58 <col:27, col:35> col:35 __timerid 'timer_t':'void *'
| |-ParmVarDecl 0x560d068f4cd8 <col:46, col:50> col:50 __flags 'int'
| |-ParmVarDecl 0x560d068f4e08 <line:218:6, col:42> col:42 __value 'const struct itimerspec *restrict'
| |-ParmVarDecl 0x560d068f4ef8 <line:219:6, col:36> col:36 __ovalue 'struct itimerspec *restrict'
| `-NoThrowAttr 0x560d068f51b0 <col:62>
|-FunctionDecl 0x560d068f53c8 <line:220:1, line:221:45> line:220:12 timer_gettime 'int (timer_t, struct itimerspec *)' extern
| |-ParmVarDecl 0x560d068f5218 <col:27, col:35> col:35 __timerid 'timer_t':'void *'
| |-ParmVarDecl 0x560d068f52a8 <col:46, col:65> col:65 __value 'struct itimerspec *'
| `-NoThrowAttr 0x560d068f5478 <line:221:22>
|-FunctionDecl 0x560d068f5578 <line:222:1, col:88> col:12 timer_getoverrun 'int (timer_t)' extern
| |-ParmVarDecl 0x560d068f54e0 <col:30, col:38> col:38 __timerid 'timer_t':'void *'
| `-NoThrowAttr 0x560d068f5620 <col:65>
|-TypedefDecl 0x560d068f5690 <line:224:1, col:27> col:27 referenced pthread_t 'unsigned long'
| `-BuiltinType 0x560d0687ffd0 'unsigned long'
|-RecordDecl 0x560d068f56e8 <line:225:1, line:229:1> line:225:7 union pthread_attr_t definition
| |-FieldDecl 0x560d068f5830 <line:227:3, col:17> col:8 __size 'char [56]'
| `-FieldDecl 0x560d068f5898 <line:228:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x560d068f5948 <line:230:1, col:30> col:30 referenced pthread_attr_t 'union pthread_attr_t':'union pthread_attr_t'
| `-ElaboratedType 0x560d068f58f0 'union pthread_attr_t' sugar
|   `-RecordType 0x560d068f5770 'union pthread_attr_t'
|     `-Record 0x560d068f56e8 'pthread_attr_t'
|-RecordDecl 0x560d068f59a0 <line:231:9, line:235:1> line:231:16 struct __pthread_internal_list definition
| |-FieldDecl 0x560d068f5b18 <line:233:3, col:35> col:35 __prev 'struct __pthread_internal_list *'
| `-FieldDecl 0x560d068f5b90 <line:234:3, col:35> col:35 __next 'struct __pthread_internal_list *'
|-TypedefDecl 0x560d068f5c40 <line:231:1, line:235:3> col:3 referenced __pthread_list_t 'struct __pthread_internal_list':'struct __pthread_internal_list'
| `-ElaboratedType 0x560d068f5be0 'struct __pthread_internal_list' sugar
|   `-RecordType 0x560d068f5a20 'struct __pthread_internal_list'
|     `-Record 0x560d068f59a0 '__pthread_internal_list'
|-RecordDecl 0x560d068f5cb0 <line:236:9, line:250:1> line:236:9 union definition
| |-RecordDecl 0x560d068f5d58 parent 0x560d0687fe18 <line:238:3, line:247:3> line:238:10 struct __pthread_mutex_s definition
| | |-FieldDecl 0x560d068f5e30 <line:240:5, col:9> col:9 __lock 'int'
| | |-FieldDecl 0x560d068f5e98 <line:241:5, col:18> col:18 __count 'unsigned int'
| | |-FieldDecl 0x560d068f5f00 <line:242:5, col:9> col:9 __owner 'int'
| | |-FieldDecl 0x560d068f5f68 <line:243:5, col:18> col:18 __nusers 'unsigned int'
| | |-FieldDecl 0x560d068f5fd0 <line:244:5, col:9> col:9 __kind 'int'
| | |-FieldDecl 0x560d068f6038 <line:245:5, col:9> col:9 __spins 'int'
| | `-FieldDecl 0x560d068fa110 <line:246:5, col:22> col:22 __list '__pthread_list_t':'struct __pthread_internal_list'
| |-FieldDecl 0x560d068fa1c0 <line:238:3, line:247:5> col:5 __data 'struct __pthread_mutex_s':'struct __pthread_mutex_s'
| |-FieldDecl 0x560d068fa2b0 <line:248:3, col:17> col:8 __size 'char [40]'
| `-FieldDecl 0x560d068fa318 <line:249:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x560d068fa4a0 <line:236:1, line:250:3> col:3 referenced pthread_mutex_t 'union pthread_mutex_t':'pthread_mutex_t'
| `-ElaboratedType 0x560d068fa440 'union pthread_mutex_t' sugar
|   `-RecordType 0x560d068f5d30 'pthread_mutex_t'
|     `-Record 0x560d068f5cb0 ''
|-RecordDecl 0x560d068fa510 <line:251:9, line:255:1> line:251:9 union definition
| |-FieldDecl 0x560d068fa650 <line:253:3, col:16> col:8 __size 'char [4]'
| `-FieldDecl 0x560d068fa6b8 <line:254:3, col:7> col:7 __align 'int'
|-TypedefDecl 0x560d068fa770 <line:251:1, line:255:3> col:3 referenced pthread_mutexattr_t 'union pthread_mutexattr_t':'pthread_mutexattr_t'
| `-ElaboratedType 0x560d068fa710 'union pthread_mutexattr_t' sugar
|   `-RecordType 0x560d068fa590 'pthread_mutexattr_t'
|     `-Record 0x560d068fa510 ''
|-RecordDecl 0x560d068fa7e0 <line:256:9, line:271:1> line:256:9 union definition
| |-RecordDecl 0x560d068fa888 <line:258:3, line:268:3> line:258:3 struct definition
| | |-FieldDecl 0x560d068fa950 <line:260:5, col:9> col:9 __lock 'int'
| | |-FieldDecl 0x560d068fa9b8 <line:261:5, col:18> col:18 __futex 'unsigned int'
| | |-FieldDecl 0x560d068faa20 <line:262:19, col:42> col:42 __total_seq 'unsigned long long'
| | |-FieldDecl 0x560d068faa88 <line:263:19, col:42> col:42 __wakeup_seq 'unsigned long long'
| | |-FieldDecl 0x560d068faaf0 <line:264:19, col:42> col:42 __woken_seq 'unsigned long long'
| | |-FieldDecl 0x560d068fab58 <line:265:5, col:11> col:11 __mutex 'void *'
| | |-FieldDecl 0x560d068fabc0 <line:266:5, col:18> col:18 __nwaiters 'unsigned int'
| | `-FieldDecl 0x560d068fac28 <line:267:5, col:18> col:18 __broadcast_seq 'unsigned int'
| |-FieldDecl 0x560d068face0 <line:258:3, line:268:5> col:5 __data 'struct (anonymous struct at ./split_2/mix004_pso.oepc_false-unreach-call.i:258:3)':'struct pthread_cond_t::(anonymous at ./split_2/mix004_pso.oepc_false-unreach-call.i:258:3)'
| |-FieldDecl 0x560d068fadd0 <line:269:3, col:17> col:8 __size 'char [48]'
| `-FieldDecl 0x560d068fae38 <line:270:17, col:31> col:31 __align 'long long'
|-TypedefDecl 0x560d068faf70 <line:256:1, line:271:3> col:3 referenced pthread_cond_t 'union pthread_cond_t':'pthread_cond_t'
| `-ElaboratedType 0x560d068faf10 'union pthread_cond_t' sugar
|   `-RecordType 0x560d068fa860 'pthread_cond_t'
|     `-Record 0x560d068fa7e0 ''
|-RecordDecl 0x560d068fafe0 <line:272:9, line:276:1> line:272:9 union definition
| |-FieldDecl 0x560d068fc130 <line:274:3, col:16> col:8 __size 'char [4]'
| `-FieldDecl 0x560d068fc198 <line:275:3, col:7> col:7 __align 'int'
|-TypedefDecl 0x560d068fc250 <line:272:1, line:276:3> col:3 referenced pthread_condattr_t 'union pthread_condattr_t':'pthread_condattr_t'
| `-ElaboratedType 0x560d068fc1f0 'union pthread_condattr_t' sugar
|   `-RecordType 0x560d068fb060 'pthread_condattr_t'
|     `-Record 0x560d068fafe0 ''
|-TypedefDecl 0x560d068fc2d8 <line:277:1, col:22> col:22 referenced pthread_key_t 'unsigned int'
| `-BuiltinType 0x560d0687ffb0 'unsigned int'
|-TypedefDecl 0x560d068fc348 <line:278:1, col:13> col:13 referenced pthread_once_t 'int'
| `-BuiltinType 0x560d0687ff10 'int'
|-RecordDecl 0x560d068fc3a0 <line:279:9, line:297:1> line:279:9 union definition
| |-RecordDecl 0x560d068fc448 <line:281:3, line:294:3> line:281:3 struct definition
| | |-FieldDecl 0x560d068fc510 <line:283:5, col:9> col:9 __lock 'int'
| | |-FieldDecl 0x560d068fc578 <line:284:5, col:18> col:18 __nr_readers 'unsigned int'
| | |-FieldDecl 0x560d068fc5e0 <line:285:5, col:18> col:18 __readers_wakeup 'unsigned int'
| | |-FieldDecl 0x560d068fc648 <line:286:5, col:18> col:18 __writer_wakeup 'unsigned int'
| | |-FieldDecl 0x560d068fc6b0 <line:287:5, col:18> col:18 __nr_readers_queued 'unsigned int'
| | |-FieldDecl 0x560d068fc718 <line:288:5, col:18> col:18 __nr_writers_queued 'unsigned int'
| | |-FieldDecl 0x560d068fc780 <line:289:5, col:9> col:9 __writer 'int'
| | |-FieldDecl 0x560d068fc7e8 <line:290:5, col:9> col:9 __shared 'int'
| | |-FieldDecl 0x560d068fc850 <line:291:5, col:23> col:23 __pad1 'unsigned long'
| | |-FieldDecl 0x560d068fc8b8 <line:292:5, col:23> col:23 __pad2 'unsigned long'
| | `-FieldDecl 0x560d068fc920 <line:293:5, col:18> col:18 __flags 'unsigned int'
| |-FieldDecl 0x560d068fc9d0 <line:281:3, line:294:5> col:5 __data 'struct (anonymous struct at ./split_2/mix004_pso.oepc_false-unreach-call.i:281:3)':'struct pthread_rwlock_t::(anonymous at ./split_2/mix004_pso.oepc_false-unreach-call.i:281:3)'
| |-FieldDecl 0x560d068fca78 <line:295:3, col:17> col:8 __size 'char [56]'
| `-FieldDecl 0x560d068fcae0 <line:296:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x560d068fcc30 <line:279:1, line:297:3> col:3 referenced pthread_rwlock_t 'union pthread_rwlock_t':'pthread_rwlock_t'
| `-ElaboratedType 0x560d068fcbd0 'union pthread_rwlock_t' sugar
|   `-RecordType 0x560d068fc420 'pthread_rwlock_t'
|     `-Record 0x560d068fc3a0 ''
|-RecordDecl 0x560d068fcca0 <line:298:9, line:302:1> line:298:9 union definition
| |-FieldDecl 0x560d068fcde0 <line:300:3, col:16> col:8 __size 'char [8]'
| `-FieldDecl 0x560d068fce48 <line:301:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x560d068fcf00 <line:298:1, line:302:3> col:3 referenced pthread_rwlockattr_t 'union pthread_rwlockattr_t':'pthread_rwlockattr_t'
| `-ElaboratedType 0x560d068fcea0 'union pthread_rwlockattr_t' sugar
|   `-RecordType 0x560d068fcd20 'pthread_rwlockattr_t'
|     `-Record 0x560d068fcca0 ''
|-TypedefDecl 0x560d068fcf88 <line:303:1, col:22> col:22 referenced pthread_spinlock_t 'volatile int'
| `-QualType 0x560d0687ff14 'volatile int' volatile
|   `-BuiltinType 0x560d0687ff10 'int'
|-RecordDecl 0x560d068fcfe0 <line:304:9, line:308:1> line:304:9 union definition
| |-FieldDecl 0x560d068fe140 <line:306:3, col:17> col:8 __size 'char [32]'
| `-FieldDecl 0x560d068fe1a8 <line:307:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x560d068fe260 <line:304:1, line:308:3> col:3 referenced pthread_barrier_t 'union pthread_barrier_t':'pthread_barrier_t'
| `-ElaboratedType 0x560d068fe200 'union pthread_barrier_t' sugar
|   `-RecordType 0x560d068fd060 'pthread_barrier_t'
|     `-Record 0x560d068fcfe0 ''
|-RecordDecl 0x560d068fe2d0 <line:309:9, line:313:1> line:309:9 union definition
| |-FieldDecl 0x560d068fe3d0 <line:311:3, col:16> col:8 __size 'char [4]'
| `-FieldDecl 0x560d068fe438 <line:312:3, col:7> col:7 __align 'int'
|-TypedefDecl 0x560d068fe4f0 <line:309:1, line:313:3> col:3 referenced pthread_barrierattr_t 'union pthread_barrierattr_t':'pthread_barrierattr_t'
| `-ElaboratedType 0x560d068fe490 'union pthread_barrierattr_t' sugar
|   `-RecordType 0x560d068fe350 'pthread_barrierattr_t'
|     `-Record 0x560d068fe2d0 ''
|-TypedefDecl 0x560d068fe608 <line:314:1, col:29> col:18 referenced __jmp_buf 'long [8]'
| `-ConstantArrayType 0x560d068fe5a0 'long [8]' 8 
|   `-BuiltinType 0x560d0687ff30 'long'
|-EnumDecl 0x560d068fe660 <line:315:1, line:319:1> line:315:1
| |-EnumConstantDecl 0x560d068fe728 <line:317:3> col:3 PTHREAD_CREATE_JOINABLE 'int'
| `-EnumConstantDecl 0x560d068fe778 <line:318:3> col:3 PTHREAD_CREATE_DETACHED 'int'
|-EnumDecl 0x560d068fe7c8 <line:320:1, line:331:1> line:320:1
| |-EnumConstantDecl 0x560d068fe898 <line:322:3> col:3 referenced PTHREAD_MUTEX_TIMED_NP 'int'
| |-EnumConstantDecl 0x560d068fe8e8 <line:323:3> col:3 referenced PTHREAD_MUTEX_RECURSIVE_NP 'int'
| |-EnumConstantDecl 0x560d068fe938 <line:324:3> col:3 referenced PTHREAD_MUTEX_ERRORCHECK_NP 'int'
| |-EnumConstantDecl 0x560d068fe988 <line:325:3> col:3 PTHREAD_MUTEX_ADAPTIVE_NP 'int'
| |-EnumConstantDecl 0x560d068fea10 <line:327:3, col:26> col:3 referenced PTHREAD_MUTEX_NORMAL 'int'
| | `-ConstantExpr 0x560d068fe9f8 <col:26> 'int'
| |   `-DeclRefExpr 0x560d068fe9d8 <col:26> 'int' EnumConstant 0x560d068fe898 'PTHREAD_MUTEX_TIMED_NP' 'int'
| |-EnumConstantDecl 0x560d068fea98 <line:328:3, col:29> col:3 PTHREAD_MUTEX_RECURSIVE 'int'
| | `-ConstantExpr 0x560d068fea80 <col:29> 'int'
| |   `-DeclRefExpr 0x560d068fea60 <col:29> 'int' EnumConstant 0x560d068fe8e8 'PTHREAD_MUTEX_RECURSIVE_NP' 'int'
| |-EnumConstantDecl 0x560d068feb20 <line:329:3, col:30> col:3 PTHREAD_MUTEX_ERRORCHECK 'int'
| | `-ConstantExpr 0x560d068feb08 <col:30> 'int'
| |   `-DeclRefExpr 0x560d068feae8 <col:30> 'int' EnumConstant 0x560d068fe938 'PTHREAD_MUTEX_ERRORCHECK_NP' 'int'
| `-EnumConstantDecl 0x560d068feba8 <line:330:3, col:27> col:3 PTHREAD_MUTEX_DEFAULT 'int'
|   `-ConstantExpr 0x560d068feb90 <col:27> 'int'
|     `-DeclRefExpr 0x560d068feb70 <col:27> 'int' EnumConstant 0x560d068fea10 'PTHREAD_MUTEX_NORMAL' 'int'
|-EnumDecl 0x560d068febf8 <line:332:1, line:338:1> line:332:1
| |-EnumConstantDecl 0x560d068fecc8 <line:334:3> col:3 referenced PTHREAD_MUTEX_STALLED 'int'
| |-EnumConstantDecl 0x560d068fed50 <line:335:3, col:30> col:3 PTHREAD_MUTEX_STALLED_NP 'int'
| | `-ConstantExpr 0x560d068fed38 <col:30> 'int'
| |   `-DeclRefExpr 0x560d068fed18 <col:30> 'int' EnumConstant 0x560d068fecc8 'PTHREAD_MUTEX_STALLED' 'int'
| |-EnumConstantDecl 0x560d068feda0 <line:336:3> col:3 referenced PTHREAD_MUTEX_ROBUST 'int'
| `-EnumConstantDecl 0x560d068fee28 <line:337:3, col:29> col:3 PTHREAD_MUTEX_ROBUST_NP 'int'
|   `-ConstantExpr 0x560d068fee10 <col:29> 'int'
|     `-DeclRefExpr 0x560d068fedf0 <col:29> 'int' EnumConstant 0x560d068feda0 'PTHREAD_MUTEX_ROBUST' 'int'
|-EnumDecl 0x560d068fee78 <line:339:1, line:344:1> line:339:1
| |-EnumConstantDecl 0x560d068fef48 <line:341:3> col:3 PTHREAD_PRIO_NONE 'int'
| |-EnumConstantDecl 0x560d068fef98 <line:342:3> col:3 PTHREAD_PRIO_INHERIT 'int'
| `-EnumConstantDecl 0x560d068fefe8 <line:343:3> col:3 PTHREAD_PRIO_PROTECT 'int'
|-EnumDecl 0x560d068ff038 <line:345:1, line:351:1> line:345:1
| |-EnumConstantDecl 0x560d068ff150 <line:347:3> col:3 referenced PTHREAD_RWLOCK_PREFER_READER_NP 'int'
| |-EnumConstantDecl 0x560d068ff1a0 <line:348:3> col:3 PTHREAD_RWLOCK_PREFER_WRITER_NP 'int'
| |-EnumConstantDecl 0x560d068ff1f0 <line:349:3> col:3 PTHREAD_RWLOCK_PREFER_WRITER_NONRECURSIVE_NP 'int'
| `-EnumConstantDecl 0x560d068ff278 <line:350:3, col:31> col:3 PTHREAD_RWLOCK_DEFAULT_NP 'int'
|   `-ConstantExpr 0x560d068ff260 <col:31> 'int'
|     `-DeclRefExpr 0x560d068ff240 <col:31> 'int' EnumConstant 0x560d068ff150 'PTHREAD_RWLOCK_PREFER_READER_NP' 'int'
|-EnumDecl 0x560d068ff2c8 <line:352:1, line:356:1> line:352:1
| |-EnumConstantDecl 0x560d068ff398 <line:354:3> col:3 PTHREAD_INHERIT_SCHED 'int'
| `-EnumConstantDecl 0x560d068ff3e8 <line:355:3> col:3 PTHREAD_EXPLICIT_SCHED 'int'
|-EnumDecl 0x560d068ff438 <line:357:1, line:361:1> line:357:1
| |-EnumConstantDecl 0x560d068ff508 <line:359:3> col:3 PTHREAD_SCOPE_SYSTEM 'int'
| `-EnumConstantDecl 0x560d068ff558 <line:360:3> col:3 PTHREAD_SCOPE_PROCESS 'int'
|-EnumDecl 0x560d068ff5a8 <line:362:1, line:366:1> line:362:1
| |-EnumConstantDecl 0x560d068ff678 <line:364:3> col:3 PTHREAD_PROCESS_PRIVATE 'int'
| `-EnumConstantDecl 0x560d068ff6c8 <line:365:3> col:3 PTHREAD_PROCESS_SHARED 'int'
|-RecordDecl 0x560d068ff718 <line:367:1, line:373:1> line:367:8 struct _pthread_cleanup_buffer definition
| |-FieldDecl 0x560d068ff958 <line:369:3, col:28> col:10 __routine 'void (*)(void *)'
| |-FieldDecl 0x560d068ff9c0 <line:370:3, col:9> col:9 __arg 'void *'
| |-FieldDecl 0x560d068ffa28 <line:371:3, col:7> col:7 __canceltype 'int'
| `-FieldDecl 0x560d068ffb48 <line:372:3, col:35> col:35 __prev 'struct _pthread_cleanup_buffer *'
|-EnumDecl 0x560d068ffb98 <line:374:1, line:378:1> line:374:1
| |-EnumConstantDecl 0x560d068ffc68 <line:376:3> col:3 PTHREAD_CANCEL_ENABLE 'int'
| `-EnumConstantDecl 0x560d068ffcb8 <line:377:3> col:3 PTHREAD_CANCEL_DISABLE 'int'
|-EnumDecl 0x560d068ffd08 <line:379:1, line:383:1> line:379:1
| |-EnumConstantDecl 0x560d068ffdd8 <line:381:3> col:3 PTHREAD_CANCEL_DEFERRED 'int'
| `-EnumConstantDecl 0x560d068ffe28 <line:382:3> col:3 PTHREAD_CANCEL_ASYNCHRONOUS 'int'
|-FunctionDecl 0x560d06900488 <line:385:1, line:388:96> line:385:12 used pthread_create 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' extern
| |-ParmVarDecl 0x560d068fff20 <col:28, col:50> col:50 __newthread 'pthread_t *restrict'
| |-ParmVarDecl 0x560d06900030 <line:386:7, col:40> col:40 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x560d06900270 <line:387:7, col:39> col:15 __start_routine 'void *(*)(void *)'
| |-ParmVarDecl 0x560d069002f0 <line:388:7, col:24> col:24 __arg 'void *restrict'
| |-NoThrowAttr 0x560d06900548 <col:47>
| |-NonNullAttr 0x560d069005a0 <col:77, col:94> 1 3
| `-CallbackAttr 0x560d069005d8 <line:385:12> Implicit 2 3
|-FunctionDecl 0x560d06900700 <line:389:1, col:72> col:13 pthread_exit 'void (void *) __attribute__((noreturn))' extern
| `-ParmVarDecl 0x560d06900630 <col:27, col:33> col:33 __retval 'void *'
|-FunctionDecl 0x560d06900958 <line:390:1, col:64> col:12 pthread_join 'int (pthread_t, void **)' extern
| |-ParmVarDecl 0x560d069007b8 <col:26, col:36> col:36 __th 'pthread_t':'unsigned long'
| `-ParmVarDecl 0x560d06900838 <col:42, col:49> col:49 __thread_return 'void **'
|-FunctionDecl 0x560d06900b28 <line:391:1, col:83> col:12 pthread_detach 'int (pthread_t)' extern
| |-ParmVarDecl 0x560d06900a18 <col:28, col:38> col:38 __th 'pthread_t':'unsigned long'
| `-NoThrowAttr 0x560d06900bd0 <col:60>
|-FunctionDecl 0x560d06900d20 <line:392:1, col:105> col:18 pthread_self 'pthread_t (void)' extern
| |-NoThrowAttr 0x560d06900dc0 <col:54>
| `-ConstAttr 0x560d06900e18 <col:95>
|-FunctionDecl 0x560d06900fe8 <line:393:1, line:394:70> line:393:12 pthread_equal 'int (pthread_t, pthread_t)' extern
| |-ParmVarDecl 0x560d06900e50 <col:27, col:37> col:37 __thread1 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x560d06900ec8 <col:48, col:58> col:58 __thread2 'pthread_t':'unsigned long'
| |-NoThrowAttr 0x560d06901098 <line:394:19>
| `-ConstAttr 0x560d069010f0 <col:60>
|-FunctionDecl 0x560d06902b08 <line:395:1, col:128> col:12 pthread_attr_init 'int (pthread_attr_t *)' extern
| |-ParmVarDecl 0x560d069029d0 <col:31, col:47> col:47 __attr 'pthread_attr_t *'
| |-NoThrowAttr 0x560d06902bb0 <col:71>
| `-NonNullAttr 0x560d06902c08 <col:112, col:126> 1
|-FunctionDecl 0x560d06902d10 <line:396:1, line:397:79> line:396:12 pthread_attr_destroy 'int (pthread_attr_t *)' extern
| |-ParmVarDecl 0x560d06902c58 <col:34, col:50> col:50 __attr 'pthread_attr_t *'
| |-NoThrowAttr 0x560d06902db8 <line:397:22>
| `-NonNullAttr 0x560d06902e10 <col:63, col:77> 1
|-FunctionDecl 0x560d06903038 <line:398:1, line:400:82> line:398:12 pthread_attr_getdetachstate 'int (const pthread_attr_t *, int *)' extern
| |-ParmVarDecl 0x560d06902e58 <col:41, col:63> col:63 __attr 'const pthread_attr_t *'
| |-ParmVarDecl 0x560d06902ed8 <line:399:6, col:11> col:11 __detachstate 'int *'
| |-NoThrowAttr 0x560d069030e8 <line:400:22>
| `-NonNullAttr 0x560d06903140 <col:63, col:80> 1 2
|-FunctionDecl 0x560d06903348 <line:401:1, line:403:79> line:401:12 pthread_attr_setdetachstate 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x560d06903188 <col:41, col:57> col:57 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x560d06903208 <line:402:6, col:10> col:10 __detachstate 'int'
| |-NoThrowAttr 0x560d069033f8 <line:403:22>
| `-NonNullAttr 0x560d06903450 <col:63, col:77> 1
|-FunctionDecl 0x560d069036a8 <line:404:1, line:406:82> line:404:12 pthread_attr_getguardsize 'int (const pthread_attr_t *, size_t *)' extern
| |-ParmVarDecl 0x560d06903498 <col:39, col:61> col:61 __attr 'const pthread_attr_t *'
| |-ParmVarDecl 0x560d06903540 <line:405:11, col:19> col:19 __guardsize 'size_t *'
| |-NoThrowAttr 0x560d06903758 <line:406:22>
| `-NonNullAttr 0x560d069037b0 <col:63, col:80> 1 2
|-FunctionDecl 0x560d069049e8 <line:407:1, line:409:79> line:407:12 pthread_attr_setguardsize 'int (pthread_attr_t *, size_t)' extern
| |-ParmVarDecl 0x560d069037f8 <col:39, col:55> col:55 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x560d06903870 <line:408:11, col:18> col:18 __guardsize 'size_t':'unsigned long'
| |-NoThrowAttr 0x560d06904a98 <line:409:22>
| `-NonNullAttr 0x560d06904af0 <col:63, col:77> 1
|-FunctionDecl 0x560d06904d28 <line:410:1, line:412:82> line:410:12 pthread_attr_getschedparam 'int (const pthread_attr_t *restrict, struct sched_param *restrict)' extern
| |-ParmVarDecl 0x560d06904b38 <col:40, col:73> col:73 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x560d06904bc8 <line:411:12, col:43> col:43 __param 'struct sched_param *restrict'
| |-NoThrowAttr 0x560d06904dd8 <line:412:22>
| `-NonNullAttr 0x560d06904e30 <col:63, col:80> 1 2
|-FunctionDecl 0x560d06905068 <line:413:1, line:415:97> line:413:12 pthread_attr_setschedparam 'int (pthread_attr_t *restrict, const struct sched_param *restrict)' extern
| |-ParmVarDecl 0x560d06904e78 <col:40, col:67> col:67 __attr 'pthread_attr_t *restrict'
| |-ParmVarDecl 0x560d06904f08 <line:414:12, line:415:12> col:12 __param 'const struct sched_param *restrict'
| |-NoThrowAttr 0x560d06905118 <col:37>
| `-NonNullAttr 0x560d06905170 <col:78, col:95> 1 2
|-FunctionDecl 0x560d06905358 <line:416:1, line:418:82> line:416:12 pthread_attr_getschedpolicy 'int (const pthread_attr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x560d069051b8 <col:41, line:417:6> col:6 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x560d06905238 <col:14, col:30> col:30 __policy 'int *restrict'
| |-NoThrowAttr 0x560d06905408 <line:418:22>
| `-NonNullAttr 0x560d06905460 <col:63, col:80> 1 2
|-FunctionDecl 0x560d069055e8 <line:419:1, line:420:79> line:419:12 pthread_attr_setschedpolicy 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x560d069054a8 <col:41, col:57> col:57 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x560d06905528 <col:65, col:69> col:69 __policy 'int'
| |-NoThrowAttr 0x560d06905698 <line:420:22>
| `-NonNullAttr 0x560d069056f0 <col:63, col:77> 1
|-FunctionDecl 0x560d06905898 <line:421:1, line:423:82> line:421:12 pthread_attr_getinheritsched 'int (const pthread_attr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x560d06905738 <col:42, line:422:7> col:7 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x560d069057b8 <col:15, col:31> col:31 __inherit 'int *restrict'
| |-NoThrowAttr 0x560d06905948 <line:423:22>
| `-NonNullAttr 0x560d069059c0 <col:63, col:80> 1 2
|-FunctionDecl 0x560d06905b48 <line:424:1, line:426:79> line:424:12 pthread_attr_setinheritsched 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x560d06905a08 <col:42, col:58> col:58 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x560d06905a88 <line:425:7, col:11> col:11 __inherit 'int'
| |-NoThrowAttr 0x560d06905bf8 <line:426:22>
| `-NonNullAttr 0x560d06905c50 <col:63, col:77> 1
|-FunctionDecl 0x560d06905df8 <line:427:1, line:429:82> line:427:12 pthread_attr_getscope 'int (const pthread_attr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x560d06905c98 <col:35, col:68> col:68 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x560d06905d18 <line:428:7, col:23> col:23 __scope 'int *restrict'
| |-NoThrowAttr 0x560d06905ea8 <line:429:22>
| `-NonNullAttr 0x560d06905f00 <col:63, col:80> 1 2
|-FunctionDecl 0x560d06906088 <line:430:1, line:431:79> line:430:12 pthread_attr_setscope 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x560d06905f48 <col:35, col:51> col:51 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x560d06905fc8 <col:59, col:63> col:63 __scope 'int'
| |-NoThrowAttr 0x560d06906138 <line:431:22>
| `-NonNullAttr 0x560d06906190 <col:63, col:77> 1
|-FunctionDecl 0x560d069063b8 <line:432:1, line:434:115> line:432:12 pthread_attr_getstackaddr 'int (const pthread_attr_t *restrict, void **restrict)' extern
| |-ParmVarDecl 0x560d069061d8 <col:39, line:433:11> col:11 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x560d06906258 <col:19, col:37> col:37 __stackaddr 'void **restrict'
| |-NoThrowAttr 0x560d06906468 <line:434:22>
| |-NonNullAttr 0x560d069064c0 <col:63, col:80> 1 2
| `-DeprecatedAttr 0x560d069064f8 <col:100> "" ""
|-FunctionDecl 0x560d06906708 <line:435:1, line:437:112> line:435:12 pthread_attr_setstackaddr 'int (pthread_attr_t *, void *)' extern
| |-ParmVarDecl 0x560d06906548 <col:39, col:55> col:55 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x560d069065c8 <line:436:11, col:17> col:17 __stackaddr 'void *'
| |-NoThrowAttr 0x560d069067b8 <line:437:22>
| |-NonNullAttr 0x560d06906810 <col:63, col:77> 1
| `-DeprecatedAttr 0x560d06906848 <col:97> "" ""
|-FunctionDecl 0x560d06906a48 <line:438:1, line:440:82> line:438:12 pthread_attr_getstacksize 'int (const pthread_attr_t *restrict, size_t *restrict)' extern
| |-ParmVarDecl 0x560d06906898 <col:39, line:439:11> col:11 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x560d06906910 <col:19, col:38> col:38 __stacksize 'size_t *restrict'
| |-NoThrowAttr 0x560d06906af8 <line:440:22>
| `-NonNullAttr 0x560d06906b50 <col:63, col:80> 1 2
|-FunctionDecl 0x560d06906cd0 <line:441:1, line:443:79> line:441:12 pthread_attr_setstacksize 'int (pthread_attr_t *, size_t)' extern
| |-ParmVarDecl 0x560d06906b98 <col:39, col:55> col:55 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x560d06906c10 <line:442:11, col:18> col:18 __stacksize 'size_t':'unsigned long'
| |-NoThrowAttr 0x560d06906d80 <line:443:22>
| `-NonNullAttr 0x560d06906dd8 <col:63, col:77> 1
|-FunctionDecl 0x560d069070c8 <line:444:1, line:447:85> line:444:12 pthread_attr_getstack 'int (const pthread_attr_t *restrict, void **restrict, size_t *restrict)' extern
| |-ParmVarDecl 0x560d06906e28 <col:35, col:68> col:68 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x560d06906ea8 <line:445:7, col:25> col:25 __stackaddr 'void **restrict'
| |-ParmVarDecl 0x560d06906f20 <line:446:7, col:26> col:26 __stacksize 'size_t *restrict'
| |-NoThrowAttr 0x560d06907180 <line:447:22>
| `-NonNullAttr 0x560d069071d8 <col:63, col:83> 1 2 3
|-FunctionDecl 0x560d06907488 <line:448:1, line:449:100> line:448:12 pthread_attr_setstack 'int (pthread_attr_t *, void *, size_t)' extern
| |-ParmVarDecl 0x560d06907230 <col:35, col:51> col:51 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x560d069072b0 <col:59, col:65> col:65 __stackaddr 'void *'
| |-ParmVarDecl 0x560d06907328 <line:449:7, col:14> col:14 __stacksize 'size_t':'unsigned long'
| |-NoThrowAttr 0x560d06907540 <col:43>
| `-NonNullAttr 0x560d06907598 <col:84, col:98> 1
|-FunctionDecl 0x560d06907858 <line:450:1, line:452:79> line:450:12 pthread_setschedparam 'int (pthread_t, int, const struct sched_param *)' extern
| |-ParmVarDecl 0x560d069075e8 <col:35, col:45> col:45 __target_thread 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x560d06907668 <col:62, col:66> col:66 __policy 'int'
| |-ParmVarDecl 0x560d069076f8 <line:451:7, col:33> col:33 __param 'const struct sched_param *'
| |-NoThrowAttr 0x560d06907910 <line:452:22>
| `-NonNullAttr 0x560d06907968 <col:63, col:77> 3
|-FunctionDecl 0x560d06907c78 <line:453:1, line:456:82> line:453:12 pthread_getschedparam 'int (pthread_t, int *restrict, struct sched_param *restrict)' extern
| |-ParmVarDecl 0x560d069079e0 <col:35, col:45> col:45 __target_thread 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x560d06907a60 <line:454:7, col:23> col:23 __policy 'int *restrict'
| |-ParmVarDecl 0x560d06907af0 <line:455:7, col:38> col:38 __param 'struct sched_param *restrict'
| |-NoThrowAttr 0x560d06907d30 <line:456:22>
| `-NonNullAttr 0x560d06907d88 <col:63, col:80> 2 3
|-FunctionDecl 0x560d06907f78 <line:457:1, line:458:45> line:457:12 pthread_setschedprio 'int (pthread_t, int)' extern
| |-ParmVarDecl 0x560d06907dd8 <col:34, col:44> col:44 __target_thread 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x560d06907e58 <col:61, col:65> col:65 __prio 'int'
| `-NoThrowAttr 0x560d06908028 <line:458:22>
|-FunctionDecl 0x560d069083f8 <line:459:1, line:460:71> line:459:12 pthread_once 'int (pthread_once_t *, void (*)(void))' extern
| |-ParmVarDecl 0x560d069080f0 <col:26, col:42> col:42 __once_control 'pthread_once_t *'
| |-ParmVarDecl 0x560d06908290 <line:460:5, col:33> col:12 __init_routine 'void (*)(void)'
| `-NonNullAttr 0x560d069084a8 <col:52, col:69> 1 2
|-FunctionDecl 0x560d06908650 <line:461:1, col:64> col:12 pthread_setcancelstate 'int (int, int *)' extern
| |-ParmVarDecl 0x560d06908530 <col:36, col:40> col:40 __state 'int'
| `-ParmVarDecl 0x560d069085b0 <col:49, col:54> col:54 __oldstate 'int *'
|-FunctionDecl 0x560d06908838 <line:462:1, col:61> col:12 pthread_setcanceltype 'int (int, int *)' extern
| |-ParmVarDecl 0x560d06908718 <col:35, col:39> col:39 __type 'int'
| `-ParmVarDecl 0x560d06908798 <col:47, col:52> col:52 __oldtype 'int *'
|-FunctionDecl 0x560d069089f0 <line:463:1, col:42> col:12 pthread_cancel 'int (pthread_t)' extern
| `-ParmVarDecl 0x560d069088f8 <col:28, col:38> col:38 __th 'pthread_t':'unsigned long'
|-FunctionDecl 0x560d06908b30 <line:464:1, col:37> col:13 pthread_testcancel 'void (void)' extern
|-RecordDecl 0x560d06908bd0 <line:465:9, line:473:1> line:465:9 struct definition
| |-RecordDecl 0x560d06908c78 <line:467:3, line:471:3> line:467:3 struct definition
| | |-FieldDecl 0x560d06908d68 <line:469:5, col:15> col:15 __cancel_jmp_buf '__jmp_buf':'long [8]'
| | `-FieldDecl 0x560d06908dd0 <line:470:5, col:9> col:9 __mask_was_saved 'int'
| |-FieldDecl 0x560d06908fa0 <line:467:3, line:471:23> col:5 __cancel_jmp_buf 'struct (anonymous struct at ./split_2/mix004_pso.oepc_false-unreach-call.i:467:3) [1]'
| `-FieldDecl 0x560d06909098 <line:472:3, col:16> col:9 __pad 'void *[4]'
|-TypedefDecl 0x560d06909150 <line:465:1, line:473:3> col:3 referenced __pthread_unwind_buf_t 'struct __pthread_unwind_buf_t':'__pthread_unwind_buf_t'
| |-ElaboratedType 0x560d069090f0 'struct __pthread_unwind_buf_t' sugar
| | `-RecordType 0x560d06908c50 '__pthread_unwind_buf_t'
| |   `-Record 0x560d06908bd0 ''
| `-AlignedAttr 0x560d069091a8 <col:42> aligned
|   `-<<<NULL>>>
|-RecordDecl 0x560d06909220 <line:474:1, line:480:1> line:474:8 struct __pthread_cleanup_frame definition
| |-FieldDecl 0x560d06909380 <line:476:3, col:35> col:10 __cancel_routine 'void (*)(void *)'
| |-FieldDecl 0x560d069093e8 <line:477:3, col:9> col:9 __cancel_arg 'void *'
| |-FieldDecl 0x560d06909450 <line:478:3, col:7> col:7 __do_it 'int'
| `-FieldDecl 0x560d069094b8 <line:479:3, col:7> col:7 __cancel_type 'int'
|-FunctionDecl 0x560d069096c0 <line:481:1, col:69> col:13 __pthread_register_cancel 'void (__pthread_unwind_buf_t *)' extern
| `-ParmVarDecl 0x560d069095b0 <col:40, col:64> col:64 __buf '__pthread_unwind_buf_t *'
|-FunctionDecl 0x560d06909808 <line:483:1, col:71> col:13 __pthread_unregister_cancel 'void (__pthread_unwind_buf_t *)' extern
| `-ParmVarDecl 0x560d06909778 <col:42, col:66> col:66 __buf '__pthread_unwind_buf_t *'
|-FunctionDecl 0x560d06909a00 <line:485:1, line:487:31> line:485:13 __pthread_unwind_next 'void (__pthread_unwind_buf_t *) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x560d069098c0 <col:36, col:60> col:60 __buf '__pthread_unwind_buf_t *'
| `-WeakAttr 0x560d06909aa8 <line:487:22>
|-RecordDecl 0x560d06909b00 <line:489:1, col:8> col:8 struct __jmp_buf_tag
|-FunctionDecl 0x560d06909e18 <line:490:1, col:98> col:12 __sigsetjmp 'int (struct __jmp_buf_tag *, int)' extern
| |-ParmVarDecl 0x560d06909c78 <col:25, col:47> col:47 __env 'struct __jmp_buf_tag *'
| |-ParmVarDecl 0x560d06909cf8 <col:54, col:58> col:58 __savemask 'int'
| |-NoThrowAttr 0x560d06909ec8 <col:86>
| `-ReturnsTwiceAttr 0x560d06909f20 <col:12> Implicit
|-FunctionDecl 0x560d0690a248 <line:491:1, line:493:79> line:491:12 pthread_mutex_init 'int (pthread_mutex_t *, const pthread_mutexattr_t *)' extern
| |-ParmVarDecl 0x560d06909ff0 <col:32, col:49> col:49 __mutex 'pthread_mutex_t *'
| |-ParmVarDecl 0x560d0690a100 <line:492:11, col:38> col:38 __mutexattr 'const pthread_mutexattr_t *'
| |-NoThrowAttr 0x560d0690a2f8 <line:493:22>
| `-NonNullAttr 0x560d0690a350 <col:63, col:77> 1
|-FunctionDecl 0x560d0690a4c8 <line:494:1, line:495:79> line:494:12 pthread_mutex_destroy 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x560d0690a398 <col:35, col:52> col:52 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x560d0690a570 <line:495:22>
| `-NonNullAttr 0x560d0690a5c8 <col:63, col:77> 1
|-FunctionDecl 0x560d0690a6d0 <line:496:1, line:497:68> line:496:12 pthread_mutex_trylock 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x560d0690a618 <col:35, col:52> col:52 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x560d0690a778 <line:497:22>
| `-NonNullAttr 0x560d0690a7d0 <col:52, col:66> 1
|-FunctionDecl 0x560d0690a8d0 <line:498:1, line:499:68> line:498:12 pthread_mutex_lock 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x560d0690a818 <col:32, col:49> col:49 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x560d0690a978 <line:499:22>
| `-NonNullAttr 0x560d0690a9d0 <col:52, col:66> 1
|-FunctionDecl 0x560d0690bc28 <line:500:1, line:502:85> line:500:12 pthread_mutex_timedlock 'int (pthread_mutex_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x560d0690ba38 <col:37, col:65> col:65 __mutex 'pthread_mutex_t *restrict'
| |-ParmVarDecl 0x560d0690bac8 <line:501:9, line:502:9> col:9 __abstime 'const struct timespec *restrict'
| |-NoThrowAttr 0x560d0690bcd8 <col:36>
| `-NonNullAttr 0x560d0690bd30 <col:66, col:83> 1 2
|-FunctionDecl 0x560d0690be30 <line:503:1, line:504:68> line:503:12 pthread_mutex_unlock 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x560d0690bd78 <col:34, col:51> col:51 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x560d0690bed8 <line:504:22>
| `-NonNullAttr 0x560d0690bf30 <col:52, col:66> 1
|-FunctionDecl 0x560d0690c1c8 <line:505:1, line:508:82> line:505:12 pthread_mutex_getprioceiling 'int (const pthread_mutex_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x560d0690bfe0 <col:42, line:506:18> col:18 __mutex 'const pthread_mutex_t *restrict'
| |-ParmVarDecl 0x560d0690c060 <line:507:7, col:23> col:23 __prioceiling 'int *restrict'
| |-NoThrowAttr 0x560d0690c278 <line:508:22>
| `-NonNullAttr 0x560d0690c2d0 <col:63, col:80> 1 2
|-FunctionDecl 0x560d0690c598 <line:509:1, line:512:82> line:509:12 pthread_mutex_setprioceiling 'int (pthread_mutex_t *restrict, int, int *restrict)' extern
| |-ParmVarDecl 0x560d0690c318 <col:42, col:70> col:70 __mutex 'pthread_mutex_t *restrict'
| |-ParmVarDecl 0x560d0690c398 <line:510:7, col:11> col:11 __prioceiling 'int'
| |-ParmVarDecl 0x560d0690c418 <line:511:7, col:23> col:23 __old_ceiling 'int *restrict'
| |-NoThrowAttr 0x560d0690c650 <line:512:22>
| `-NonNullAttr 0x560d0690c6a8 <col:63, col:80> 1 3
|-FunctionDecl 0x560d0690c7b0 <line:513:1, line:514:79> line:513:12 pthread_mutex_consistent 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x560d0690c6f8 <col:38, col:55> col:55 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x560d0690c858 <line:514:22>
| `-NonNullAttr 0x560d0690c8b0 <col:63, col:77> 1
|-FunctionDecl 0x560d0690cad8 <line:515:1, line:516:79> line:515:12 pthread_mutexattr_init 'int (pthread_mutexattr_t *)' extern
| |-ParmVarDecl 0x560d0690c960 <col:36, col:57> col:57 __attr 'pthread_mutexattr_t *'
| |-NoThrowAttr 0x560d0690cb80 <line:516:22>
| `-NonNullAttr 0x560d0690cbd8 <col:63, col:77> 1
|-FunctionDecl 0x560d0690cce0 <line:517:1, line:518:79> line:517:12 pthread_mutexattr_destroy 'int (pthread_mutexattr_t *)' extern
| |-ParmVarDecl 0x560d0690cc28 <col:39, col:60> col:60 __attr 'pthread_mutexattr_t *'
| |-NoThrowAttr 0x560d0690cd88 <line:518:22>
| `-NonNullAttr 0x560d0690cde0 <col:63, col:77> 1
|-FunctionDecl 0x560d0690d008 <line:519:1, line:522:82> line:519:12 pthread_mutexattr_getpshared 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x560d0690ce28 <col:42, line:520:18> col:18 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x560d0690cea8 <line:521:7, col:23> col:23 __pshared 'int *restrict'
| |-NoThrowAttr 0x560d0690d0b8 <line:522:22>
| `-NonNullAttr 0x560d0690d110 <col:63, col:80> 1 2
|-FunctionDecl 0x560d0690d318 <line:523:1, line:525:79> line:523:12 pthread_mutexattr_setpshared 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x560d0690d158 <col:42, col:63> col:63 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x560d0690d1d8 <line:524:7, col:11> col:11 __pshared 'int'
| |-NoThrowAttr 0x560d0690d3c8 <line:525:22>
| `-NonNullAttr 0x560d0690d420 <col:63, col:77> 1
|-FunctionDecl 0x560d0690d5c8 <line:526:1, line:528:82> line:526:12 pthread_mutexattr_gettype 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x560d0690d468 <col:39, line:527:11> col:11 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x560d0690d4e8 <col:19, col:35> col:35 __kind 'int *restrict'
| |-NoThrowAttr 0x560d0690d678 <line:528:22>
| `-NonNullAttr 0x560d0690d6d0 <col:63, col:80> 1 2
|-FunctionDecl 0x560d0690d858 <line:529:1, line:530:79> line:529:12 pthread_mutexattr_settype 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x560d0690d718 <col:39, col:60> col:60 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x560d0690d798 <col:68, col:72> col:72 __kind 'int'
| |-NoThrowAttr 0x560d0690d908 <line:530:22>
| `-NonNullAttr 0x560d0690d960 <col:63, col:77> 1
|-FunctionDecl 0x560d0690db20 <line:531:1, line:534:82> line:531:12 pthread_mutexattr_getprotocol 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x560d0690d9a8 <col:43, line:532:19> col:19 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x560d0690da40 <line:533:8, col:24> col:24 __protocol 'int *restrict'
| |-NoThrowAttr 0x560d0690dbd0 <line:534:22>
| `-NonNullAttr 0x560d0690dc28 <col:63, col:80> 1 2
|-FunctionDecl 0x560d0690ddb8 <line:535:1, line:537:79> line:535:12 pthread_mutexattr_setprotocol 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x560d0690dc78 <col:43, col:64> col:64 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x560d0690dcf8 <line:536:8, col:12> col:12 __protocol 'int'
| |-NoThrowAttr 0x560d0690de68 <line:537:22>
| `-NonNullAttr 0x560d0690dec0 <col:63, col:77> 1
|-FunctionDecl 0x560d0690e068 <line:538:1, line:541:82> line:538:12 pthread_mutexattr_getprioceiling 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x560d0690df08 <col:46, line:539:22> col:22 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x560d0690df88 <line:540:11, col:27> col:27 __prioceiling 'int *restrict'
| |-NoThrowAttr 0x560d0690e118 <line:541:22>
| `-NonNullAttr 0x560d0690e170 <col:63, col:80> 1 2
|-FunctionDecl 0x560d0690e2f8 <line:542:1, line:544:79> line:542:12 pthread_mutexattr_setprioceiling 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x560d0690e1b8 <col:46, col:67> col:67 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x560d0690e238 <line:543:11, col:15> col:15 __prioceiling 'int'
| |-NoThrowAttr 0x560d0690e3a8 <line:544:22>
| `-NonNullAttr 0x560d0690e400 <col:63, col:77> 1
|-FunctionDecl 0x560d0690e5e8 <line:545:1, line:547:82> line:545:12 pthread_mutexattr_getrobust 'int (const pthread_mutexattr_t *, int *)' extern
| |-ParmVarDecl 0x560d0690e448 <col:41, col:68> col:68 __attr 'const pthread_mutexattr_t *'
| |-ParmVarDecl 0x560d0690e4c8 <line:546:6, col:11> col:11 __robustness 'int *'
| |-NoThrowAttr 0x560d0690e698 <line:547:22>
| `-NonNullAttr 0x560d0690e6f0 <col:63, col:80> 1 2
|-FunctionDecl 0x560d0690e878 <line:548:1, line:550:79> line:548:12 pthread_mutexattr_setrobust 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x560d0690e738 <col:41, col:62> col:62 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x560d0690e7b8 <line:549:6, col:10> col:10 __robustness 'int'
| |-NoThrowAttr 0x560d0690e928 <line:550:22>
| `-NonNullAttr 0x560d0690e980 <col:63, col:77> 1
|-FunctionDecl 0x560d0690fcf8 <line:551:1, line:553:86> line:551:12 pthread_rwlock_init 'int (pthread_rwlock_t *restrict, const pthread_rwlockattr_t *restrict)' extern
| |-ParmVarDecl 0x560d0690faa0 <col:33, col:62> col:62 __rwlock 'pthread_rwlock_t *restrict'
| |-ParmVarDecl 0x560d0690fbb0 <line:552:5, line:553:5> col:5 __attr 'const pthread_rwlockattr_t *restrict'
| |-NoThrowAttr 0x560d0690fda8 <col:29>
| `-NonNullAttr 0x560d0690fe00 <col:70, col:84> 1
|-FunctionDecl 0x560d0690ff78 <line:554:1, line:555:79> line:554:12 pthread_rwlock_destroy 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x560d0690fe48 <col:36, col:54> col:54 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x560d06910020 <line:555:22>
| `-NonNullAttr 0x560d06910078 <col:63, col:77> 1
|-FunctionDecl 0x560d06910180 <line:556:1, line:557:68> line:556:12 pthread_rwlock_rdlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x560d069100c8 <col:35, col:53> col:53 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x560d06910228 <line:557:22>
| `-NonNullAttr 0x560d06910280 <col:52, col:66> 1
|-FunctionDecl 0x560d06910380 <line:558:1, line:559:65> line:558:12 pthread_rwlock_tryrdlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x560d069102c8 <col:38, col:56> col:56 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x560d06910428 <line:559:19>
| `-NonNullAttr 0x560d06910480 <col:49, col:63> 1
|-FunctionDecl 0x560d069106b8 <line:560:1, line:562:88> line:560:12 pthread_rwlock_timedrdlock 'int (pthread_rwlock_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x560d069104c8 <col:40, col:69> col:69 __rwlock 'pthread_rwlock_t *restrict'
| |-ParmVarDecl 0x560d06910558 <line:561:12, line:562:12> col:12 __abstime 'const struct timespec *restrict'
| |-NoThrowAttr 0x560d06910768 <col:39>
| `-NonNullAttr 0x560d069107c0 <col:69, col:86> 1 2
|-FunctionDecl 0x560d069108c0 <line:563:1, line:564:68> line:563:12 pthread_rwlock_wrlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x560d06910808 <col:35, col:53> col:53 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x560d06910968 <line:564:22>
| `-NonNullAttr 0x560d069109c0 <col:52, col:66> 1
|-FunctionDecl 0x560d06910b28 <line:565:1, line:566:68> line:565:12 pthread_rwlock_trywrlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x560d06910a70 <col:38, col:56> col:56 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x560d06910bd0 <line:566:22>
| `-NonNullAttr 0x560d06910c28 <col:52, col:66> 1
|-FunctionDecl 0x560d06910de8 <line:567:1, line:569:88> line:567:12 pthread_rwlock_timedwrlock 'int (pthread_rwlock_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x560d06910c78 <col:40, col:69> col:69 __rwlock 'pthread_rwlock_t *restrict'
| |-ParmVarDecl 0x560d06910d08 <line:568:12, line:569:12> col:12 __abstime 'const struct timespec *restrict'
| |-NoThrowAttr 0x560d06910e98 <col:39>
| `-NonNullAttr 0x560d06910ef0 <col:69, col:86> 1 2
|-FunctionDecl 0x560d06910ff0 <line:570:1, line:571:68> line:570:12 pthread_rwlock_unlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x560d06910f38 <col:35, col:53> col:53 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x560d06911098 <line:571:22>
| `-NonNullAttr 0x560d069110f0 <col:52, col:66> 1
|-FunctionDecl 0x560d069112d8 <line:572:1, line:573:79> line:572:12 pthread_rwlockattr_init 'int (pthread_rwlockattr_t *)' extern
| |-ParmVarDecl 0x560d069111a0 <col:37, col:59> col:59 __attr 'pthread_rwlockattr_t *'
| |-NoThrowAttr 0x560d06911380 <line:573:22>
| `-NonNullAttr 0x560d069113d8 <col:63, col:77> 1
|-FunctionDecl 0x560d069114e0 <line:574:1, line:575:79> line:574:12 pthread_rwlockattr_destroy 'int (pthread_rwlockattr_t *)' extern
| |-ParmVarDecl 0x560d06911428 <col:40, col:62> col:62 __attr 'pthread_rwlockattr_t *'
| |-NoThrowAttr 0x560d06911588 <line:575:22>
| `-NonNullAttr 0x560d069115e0 <col:63, col:77> 1
|-FunctionDecl 0x560d06911808 <line:576:1, line:579:82> line:576:12 pthread_rwlockattr_getpshared 'int (const pthread_rwlockattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x560d06911628 <col:43, line:577:19> col:19 __attr 'const pthread_rwlockattr_t *restrict'
| |-ParmVarDecl 0x560d069116a8 <line:578:8, col:24> col:24 __pshared 'int *restrict'
| |-NoThrowAttr 0x560d069118b8 <line:579:22>
| `-NonNullAttr 0x560d06911910 <col:63, col:80> 1 2
|-FunctionDecl 0x560d06911b38 <line:580:1, line:582:79> line:580:12 pthread_rwlockattr_setpshared 'int (pthread_rwlockattr_t *, int)' extern
| |-ParmVarDecl 0x560d06911958 <col:43, col:65> col:65 __attr 'pthread_rwlockattr_t *'
| |-ParmVarDecl 0x560d069119d8 <line:581:8, col:12> col:12 __pshared 'int'
| |-NoThrowAttr 0x560d06911be8 <line:582:22>
| `-NonNullAttr 0x560d06911c40 <col:63, col:77> 1
|-FunctionDecl 0x560d06911de8 <line:583:1, line:586:82> line:583:12 pthread_rwlockattr_getkind_np 'int (const pthread_rwlockattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x560d06911c88 <col:43, line:584:19> col:19 __attr 'const pthread_rwlockattr_t *restrict'
| |-ParmVarDecl 0x560d06911d08 <line:585:8, col:24> col:24 __pref 'int *restrict'
| |-NoThrowAttr 0x560d06911e98 <line:586:22>
| `-NonNullAttr 0x560d06911ef0 <col:63, col:80> 1 2
|-FunctionDecl 0x560d06912078 <line:587:1, line:588:93> line:587:12 pthread_rwlockattr_setkind_np 'int (pthread_rwlockattr_t *, int)' extern
| |-ParmVarDecl 0x560d06911f38 <col:43, col:65> col:65 __attr 'pthread_rwlockattr_t *'
| |-ParmVarDecl 0x560d06911fb8 <line:588:8, col:12> col:12 __pref 'int'
| |-NoThrowAttr 0x560d06912128 <col:36>
| `-NonNullAttr 0x560d06912180 <col:77, col:91> 1
|-FunctionDecl 0x560d069124b8 <line:589:1, line:591:79> line:589:12 pthread_cond_init 'int (pthread_cond_t *restrict, const pthread_condattr_t *restrict)' extern
| |-ParmVarDecl 0x560d06912260 <col:31, col:58> col:58 __cond 'pthread_cond_t *restrict'
| |-ParmVarDecl 0x560d06912370 <line:590:10, col:47> col:47 __cond_attr 'const pthread_condattr_t *restrict'
| |-NoThrowAttr 0x560d06912568 <line:591:22>
| `-NonNullAttr 0x560d069125c0 <col:63, col:77> 1
|-FunctionDecl 0x560d06912738 <line:592:1, line:593:79> line:592:12 pthread_cond_destroy 'int (pthread_cond_t *)' extern
| |-ParmVarDecl 0x560d06912608 <col:34, col:50> col:50 __cond 'pthread_cond_t *'
| |-NoThrowAttr 0x560d069127e0 <line:593:22>
| `-NonNullAttr 0x560d06912838 <col:63, col:77> 1
|-FunctionDecl 0x560d06912940 <line:594:1, line:595:68> line:594:12 pthread_cond_signal 'int (pthread_cond_t *)' extern
| |-ParmVarDecl 0x560d06912888 <col:33, col:49> col:49 __cond 'pthread_cond_t *'
| |-NoThrowAttr 0x560d069129e8 <line:595:22>
| `-NonNullAttr 0x560d06912a40 <col:52, col:66> 1
|-FunctionDecl 0x560d06912b58 <line:596:1, line:597:68> line:596:12 pthread_cond_broadcast 'int (pthread_cond_t *)' extern
| |-ParmVarDecl 0x560d06912aa0 <col:36, col:52> col:52 __cond 'pthread_cond_t *'
| |-NoThrowAttr 0x560d06912c00 <line:597:22>
| `-NonNullAttr 0x560d06912c58 <col:52, col:66> 1
|-FunctionDecl 0x560d06912e88 <line:598:1, line:600:41> line:598:12 pthread_cond_wait 'int (pthread_cond_t *restrict, pthread_mutex_t *restrict)' extern
| |-ParmVarDecl 0x560d06912ca8 <col:31, col:58> col:58 __cond 'pthread_cond_t *restrict'
| |-ParmVarDecl 0x560d06912d20 <line:599:10, col:38> col:38 __mutex 'pthread_mutex_t *restrict'
| `-NonNullAttr 0x560d06912f38 <line:600:22, col:39> 1 2
|-FunctionDecl 0x560d06913268 <line:601:1, line:604:44> line:601:12 pthread_cond_timedwait 'int (pthread_cond_t *restrict, pthread_mutex_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x560d06912fb8 <col:36, col:63> col:63 __cond 'pthread_cond_t *restrict'
| |-ParmVarDecl 0x560d06913030 <line:602:8, col:36> col:36 __mutex 'pthread_mutex_t *restrict'
| |-ParmVarDecl 0x560d069130c0 <line:603:8, col:42> col:42 __abstime 'const struct timespec *restrict'
| `-NonNullAttr 0x560d06913320 <line:604:22, col:42> 1 2 3
|-FunctionDecl 0x560d06913538 <line:605:1, line:606:79> line:605:12 pthread_condattr_init 'int (pthread_condattr_t *)' extern
| |-ParmVarDecl 0x560d06913400 <col:35, col:55> col:55 __attr 'pthread_condattr_t *'
| |-NoThrowAttr 0x560d069135e0 <line:606:22>
| `-NonNullAttr 0x560d06913638 <col:63, col:77> 1
|-FunctionDecl 0x560d06913740 <line:607:1, line:608:79> line:607:12 pthread_condattr_destroy 'int (pthread_condattr_t *)' extern
| |-ParmVarDecl 0x560d06913688 <col:38, col:58> col:58 __attr 'pthread_condattr_t *'
| |-NoThrowAttr 0x560d069137e8 <line:608:22>
| `-NonNullAttr 0x560d06913840 <col:63, col:77> 1
|-FunctionDecl 0x560d06913aa0 <line:609:1, line:612:82> line:609:12 pthread_condattr_getpshared 'int (const pthread_condattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x560d06913888 <col:41, line:610:17> col:17 __attr 'const pthread_condattr_t *restrict'
| |-ParmVarDecl 0x560d06913908 <line:611:6, col:22> col:22 __pshared 'int *restrict'
| |-NoThrowAttr 0x560d06913b50 <line:612:22>
| `-NonNullAttr 0x560d06913ba8 <col:63, col:80> 1 2
|-FunctionDecl 0x560d06913db8 <line:613:1, line:614:94> line:613:12 pthread_condattr_setpshared 'int (pthread_condattr_t *, int)' extern
| |-ParmVarDecl 0x560d06913bf8 <col:41, col:61> col:61 __attr 'pthread_condattr_t *'
| |-ParmVarDecl 0x560d06913c78 <line:614:6, col:10> col:10 __pshared 'int'
| |-NoThrowAttr 0x560d06913e68 <col:37>
| `-NonNullAttr 0x560d06913ec0 <col:78, col:92> 1
|-FunctionDecl 0x560d069140d8 <line:615:1, line:618:82> line:615:12 pthread_condattr_getclock 'int (const pthread_condattr_t *restrict, __clockid_t *restrict)' extern
| |-ParmVarDecl 0x560d06913f08 <col:39, line:616:22> col:22 __attr 'const pthread_condattr_t *restrict'
| |-ParmVarDecl 0x560d06913fb0 <line:617:11, col:35> col:35 __clock_id '__clockid_t *restrict'
| |-NoThrowAttr 0x560d06914188 <line:618:22>
| `-NonNullAttr 0x560d069141e0 <col:63, col:80> 1 2
|-FunctionDecl 0x560d069143a8 <line:619:1, line:621:79> line:619:12 pthread_condattr_setclock 'int (pthread_condattr_t *, __clockid_t)' extern
| |-ParmVarDecl 0x560d06914228 <col:39, col:59> col:59 __attr 'pthread_condattr_t *'
| |-ParmVarDecl 0x560d069142a0 <line:620:11, col:23> col:23 __clock_id '__clockid_t':'int'
| |-NoThrowAttr 0x560d06914458 <line:621:22>
| `-NonNullAttr 0x560d069144b0 <col:63, col:77> 1
|-FunctionDecl 0x560d06914758 <line:622:1, line:623:79> line:622:12 pthread_spin_init 'int (pthread_spinlock_t *, int)' extern
| |-ParmVarDecl 0x560d06914590 <col:31, col:51> col:51 __lock 'pthread_spinlock_t *'
| |-ParmVarDecl 0x560d06914610 <col:59, col:63> col:63 __pshared 'int'
| |-NoThrowAttr 0x560d06914808 <line:623:22>
| `-NonNullAttr 0x560d06914860 <col:63, col:77> 1
|-FunctionDecl 0x560d069149d8 <line:624:1, line:625:79> line:624:12 pthread_spin_destroy 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x560d069148a8 <col:34, col:54> col:54 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x560d06914ab0 <line:625:22>
| `-NonNullAttr 0x560d06914b08 <col:63, col:77> 1
|-FunctionDecl 0x560d06914c10 <line:626:1, line:627:68> line:626:12 pthread_spin_lock 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x560d06914b58 <col:31, col:51> col:51 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x560d06914cb8 <line:627:22>
| `-NonNullAttr 0x560d06914d10 <col:52, col:66> 1
|-FunctionDecl 0x560d06914e10 <line:628:1, line:629:68> line:628:12 pthread_spin_trylock 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x560d06914d58 <col:34, col:54> col:54 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x560d06914eb8 <line:629:22>
| `-NonNullAttr 0x560d06914f10 <col:52, col:66> 1
|-FunctionDecl 0x560d06915010 <line:630:1, line:631:68> line:630:12 pthread_spin_unlock 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x560d06914f58 <col:33, col:53> col:53 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x560d069150b8 <line:631:22>
| `-NonNullAttr 0x560d06915110 <col:52, col:66> 1
|-FunctionDecl 0x560d069154e8 <line:632:1, line:635:79> line:632:12 pthread_barrier_init 'int (pthread_barrier_t *restrict, const pthread_barrierattr_t *restrict, unsigned int)' extern
| |-ParmVarDecl 0x560d069151f0 <col:34, col:64> col:64 __barrier 'pthread_barrier_t *restrict'
| |-ParmVarDecl 0x560d06915300 <line:633:6, line:634:6> col:6 __attr 'const pthread_barrierattr_t *restrict'
| |-ParmVarDecl 0x560d06915380 <col:14, col:27> col:27 __count 'unsigned int'
| |-NoThrowAttr 0x560d069155a0 <line:635:22>
| `-NonNullAttr 0x560d069155f8 <col:63, col:77> 1
|-FunctionDecl 0x560d06915778 <line:636:1, line:637:79> line:636:12 pthread_barrier_destroy 'int (pthread_barrier_t *)' extern
| |-ParmVarDecl 0x560d06915648 <col:37, col:56> col:56 __barrier 'pthread_barrier_t *'
| |-NoThrowAttr 0x560d06915820 <line:637:22>
| `-NonNullAttr 0x560d06915878 <col:63, col:77> 1
|-FunctionDecl 0x560d06915980 <line:638:1, line:639:68> line:638:12 pthread_barrier_wait 'int (pthread_barrier_t *)' extern
| |-ParmVarDecl 0x560d069158c8 <col:34, col:53> col:53 __barrier 'pthread_barrier_t *'
| |-NoThrowAttr 0x560d06915a28 <line:639:22>
| `-NonNullAttr 0x560d06915a80 <col:52, col:66> 1
|-FunctionDecl 0x560d06916c88 <line:640:1, line:641:79> line:640:12 pthread_barrierattr_init 'int (pthread_barrierattr_t *)' extern
| |-ParmVarDecl 0x560d06916b50 <col:38, col:61> col:61 __attr 'pthread_barrierattr_t *'
| |-NoThrowAttr 0x560d06916d30 <line:641:22>
| `-NonNullAttr 0x560d06916d88 <col:63, col:77> 1
|-FunctionDecl 0x560d06916e90 <line:642:1, line:643:79> line:642:12 pthread_barrierattr_destroy 'int (pthread_barrierattr_t *)' extern
| |-ParmVarDecl 0x560d06916dd8 <col:41, col:64> col:64 __attr 'pthread_barrierattr_t *'
| |-NoThrowAttr 0x560d06916f38 <line:643:22>
| `-NonNullAttr 0x560d06916f90 <col:63, col:77> 1
|-FunctionDecl 0x560d069171b8 <line:644:1, line:647:82> line:644:12 pthread_barrierattr_getpshared 'int (const pthread_barrierattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x560d06916fd8 <col:44, line:645:20> col:20 __attr 'const pthread_barrierattr_t *restrict'
| |-ParmVarDecl 0x560d06917058 <line:646:9, col:25> col:25 __pshared 'int *restrict'
| |-NoThrowAttr 0x560d06917268 <line:647:22>
| `-NonNullAttr 0x560d069172c0 <col:63, col:80> 1 2
|-FunctionDecl 0x560d069174c8 <line:648:1, line:650:79> line:648:12 pthread_barrierattr_setpshared 'int (pthread_barrierattr_t *, int)' extern
| |-ParmVarDecl 0x560d06917308 <col:44, col:67> col:67 __attr 'pthread_barrierattr_t *'
| |-ParmVarDecl 0x560d06917388 <line:649:9, col:13> col:13 __pshared 'int'
| |-NoThrowAttr 0x560d06917578 <line:650:22>
| `-NonNullAttr 0x560d069175d0 <col:63, col:77> 1
|-FunctionDecl 0x560d06917918 <line:651:1, line:653:79> line:651:12 pthread_key_create 'int (pthread_key_t *, void (*)(void *))' extern
| |-ParmVarDecl 0x560d069176b0 <col:32, col:47> col:47 __key 'pthread_key_t *'
| |-ParmVarDecl 0x560d069177d0 <line:652:11, col:43> col:18 __destr_function 'void (*)(void *)'
| |-NoThrowAttr 0x560d069179c8 <line:653:22>
| `-NonNullAttr 0x560d06917a20 <col:63, col:77> 1
|-FunctionDecl 0x560d06917b88 <line:654:1, col:92> col:12 pthread_key_delete 'int (pthread_key_t)' extern
| |-ParmVarDecl 0x560d06917a68 <col:32, col:46> col:46 __key 'pthread_key_t':'unsigned int'
| `-NoThrowAttr 0x560d06917c30 <col:69>
|-FunctionDecl 0x560d06917da8 <line:655:1, col:95> col:14 pthread_getspecific 'void *(pthread_key_t)' extern
| |-ParmVarDecl 0x560d06917c98 <col:35, col:49> col:49 __key 'pthread_key_t':'unsigned int'
| `-NoThrowAttr 0x560d06917e50 <col:72>
|-FunctionDecl 0x560d06918088 <line:656:1, line:657:67> line:656:12 pthread_setspecific 'int (pthread_key_t, const void *)' extern
| |-ParmVarDecl 0x560d06917eb8 <col:33, col:47> col:47 __key 'pthread_key_t':'unsigned int'
| |-ParmVarDecl 0x560d06917f68 <line:657:5, col:17> col:17 __pointer 'const void *'
| `-NoThrowAttr 0x560d06918138 <col:44>
|-FunctionDecl 0x560d06918358 <line:658:1, line:660:79> line:658:12 pthread_getcpuclockid 'int (pthread_t, __clockid_t *)' extern
| |-ParmVarDecl 0x560d069181a0 <col:35, col:45> col:45 __thread_id 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x560d06918218 <line:659:7, col:20> col:20 __clock_id '__clockid_t *'
| |-NoThrowAttr 0x560d06918408 <line:660:22>
| `-NonNullAttr 0x560d06918460 <col:63, col:77> 2
|-FunctionDecl 0x560d069188a8 <line:661:1, line:663:70> line:661:12 pthread_atfork 'int (void (*)(void), void (*)(void), void (*)(void))' extern
| |-ParmVarDecl 0x560d06918540 <col:28, col:51> col:35 __prepare 'void (*)(void)'
| |-ParmVarDecl 0x560d06918650 <line:662:7, col:29> col:14 __parent 'void (*)(void)'
| |-ParmVarDecl 0x560d06918760 <line:663:7, col:28> col:14 __child 'void (*)(void)'
| `-NoThrowAttr 0x560d06918960 <col:47>
|-FunctionDecl 0x560d06918af0 <line:665:1, col:20> col:8 used P0 'void *(void *)'
| `-ParmVarDecl 0x560d069189d0 <col:11, col:17> col:17 arg 'void *'
|-FunctionDecl 0x560d06918c48 <line:666:1, col:20> col:8 used P1 'void *(void *)'
| `-ParmVarDecl 0x560d06918bb0 <col:11, col:17> col:17 arg 'void *'
|-FunctionDecl 0x560d06918da0 <line:667:1, col:20> col:8 used P2 'void *(void *)'
| `-ParmVarDecl 0x560d06918d08 <col:11, col:17> col:17 arg 'void *'
|-FunctionDecl 0x560d06918ef8 <line:668:1, col:20> col:8 used P3 'void *(void *)'
| `-ParmVarDecl 0x560d06918e60 <col:11, col:17> col:17 arg 'void *'
|-FunctionDecl 0x560d06918fc0 <line:669:1, col:12> col:6 fence 'void ()'
|-FunctionDecl 0x560d06919080 <line:670:1, col:12> col:6 isync 'void ()'
|-FunctionDecl 0x560d06919140 <line:671:1, col:14> col:6 lwfence 'void ()'
|-VarDecl 0x560d069191f8 <line:672:1, col:5> col:5 used __unbuffered_cnt 'int'
|-VarDecl 0x560d06919278 prev 0x560d069191f8 <line:673:1, col:24> col:5 used __unbuffered_cnt 'int' cinit
| `-IntegerLiteral 0x560d069192e0 <col:24> 'int' 0
|-VarDecl 0x560d06919318 <line:674:1, col:5> col:5 used __unbuffered_p0_EAX 'int'
|-VarDecl 0x560d06919398 prev 0x560d06919318 <line:675:1, col:27> col:5 used __unbuffered_p0_EAX 'int' cinit
| `-IntegerLiteral 0x560d06919400 <col:27> 'int' 0
|-VarDecl 0x560d06919438 <line:676:1, col:5> col:5 used __unbuffered_p1_EAX 'int'
|-VarDecl 0x560d069194b8 prev 0x560d06919438 <line:677:1, col:27> col:5 used __unbuffered_p1_EAX 'int' cinit
| `-IntegerLiteral 0x560d06919520 <col:27> 'int' 0
|-VarDecl 0x560d06919558 <line:678:1, col:5> col:5 used __unbuffered_p2_EAX 'int'
|-VarDecl 0x560d069195d8 prev 0x560d06919558 <line:679:1, col:27> col:5 used __unbuffered_p2_EAX 'int' cinit
| `-IntegerLiteral 0x560d06919640 <col:27> 'int' 0
|-VarDecl 0x560d06919678 <line:680:1, col:5> col:5 used __unbuffered_p2_EBX 'int'
|-VarDecl 0x560d069196f8 prev 0x560d06919678 <line:681:1, col:27> col:5 used __unbuffered_p2_EBX 'int' cinit
| `-IntegerLiteral 0x560d06919760 <col:27> 'int' 0
|-VarDecl 0x560d06919798 <line:682:1, col:5> col:5 used __unbuffered_p3_EAX 'int'
|-VarDecl 0x560d06919818 prev 0x560d06919798 <line:683:1, col:27> col:5 used __unbuffered_p3_EAX 'int' cinit
| `-IntegerLiteral 0x560d06919880 <col:27> 'int' 0
|-VarDecl 0x560d069198b8 <line:684:1, col:5> col:5 used __unbuffered_p3_EBX 'int'
|-VarDecl 0x560d06919938 prev 0x560d069198b8 <line:685:1, col:27> col:5 used __unbuffered_p3_EBX 'int' cinit
| `-IntegerLiteral 0x560d069199a0 <col:27> 'int' 0
|-VarDecl 0x560d069199d8 <line:686:1, col:5> col:5 used a 'int'
|-VarDecl 0x560d06919a58 prev 0x560d069199d8 <line:687:1, col:9> col:5 used a 'int' cinit
| `-IntegerLiteral 0x560d06919ac0 <col:9> 'int' 0
|-VarDecl 0x560d06919b00 <line:688:1, col:7> col:7 used a$flush_delayed '_Bool'
|-VarDecl 0x560d06919b80 <line:689:1, col:5> col:5 used a$mem_tmp 'int'
|-VarDecl 0x560d06919bf8 <line:690:1, col:7> col:7 used a$r_buff0_thd0 '_Bool'
|-VarDecl 0x560d06919c70 <line:691:1, col:7> col:7 used a$r_buff0_thd1 '_Bool'
|-VarDecl 0x560d06919ce8 <line:692:1, col:7> col:7 used a$r_buff0_thd2 '_Bool'
|-VarDecl 0x560d06919d60 <line:693:1, col:7> col:7 used a$r_buff0_thd3 '_Bool'
|-VarDecl 0x560d06919dd8 <line:694:1, col:7> col:7 used a$r_buff0_thd4 '_Bool'
|-VarDecl 0x560d06919e50 <line:695:1, col:7> col:7 used a$r_buff1_thd0 '_Bool'
|-VarDecl 0x560d06919ec8 <line:696:1, col:7> col:7 used a$r_buff1_thd1 '_Bool'
|-VarDecl 0x560d06919f40 <line:697:1, col:7> col:7 used a$r_buff1_thd2 '_Bool'
|-VarDecl 0x560d06919fb8 <line:698:1, col:7> col:7 used a$r_buff1_thd3 '_Bool'
|-VarDecl 0x560d0691a030 <line:699:1, col:7> col:7 used a$r_buff1_thd4 '_Bool'
|-VarDecl 0x560d0691a0a8 <line:700:1, col:7> col:7 a$read_delayed '_Bool'
|-VarDecl 0x560d0691a128 <line:701:1, col:6> col:6 a$read_delayed_var 'int *'
|-VarDecl 0x560d0691a1a8 <line:702:1, col:5> col:5 used a$w_buff0 'int'
|-VarDecl 0x560d0691a220 <line:703:1, col:7> col:7 used a$w_buff0_used '_Bool'
|-VarDecl 0x560d0691a2a0 <line:704:1, col:5> col:5 used a$w_buff1 'int'
|-VarDecl 0x560d0691a318 <line:705:1, col:7> col:7 used a$w_buff1_used '_Bool'
|-VarDecl 0x560d0691a390 <line:706:1, col:7> col:7 used main$tmp_guard0 '_Bool'
|-VarDecl 0x560d0691a408 <line:707:1, col:7> col:7 used main$tmp_guard1 '_Bool'
|-VarDecl 0x560d0691a488 <line:708:1, col:5> col:5 used x 'int'
|-VarDecl 0x560d0691a508 prev 0x560d0691a488 <line:709:1, col:9> col:5 used x 'int' cinit
| `-IntegerLiteral 0x560d0691a570 <col:9> 'int' 0
|-VarDecl 0x560d0691a5a8 <line:710:1, col:5> col:5 used y 'int'
|-VarDecl 0x560d0691a628 prev 0x560d0691a5a8 <line:711:1, col:9> col:5 used y 'int' cinit
| `-IntegerLiteral 0x560d0691a690 <col:9> 'int' 0
|-VarDecl 0x560d0691a6c8 <line:712:1, col:5> col:5 used z 'int'
|-VarDecl 0x560d0691a748 prev 0x560d0691a6c8 <line:713:1, col:9> col:5 used z 'int' cinit
| `-IntegerLiteral 0x560d0691a7b0 <col:9> 'int' 0
|-VarDecl 0x560d0691a7e0 <line:714:1, col:7> col:7 used weak$$choice0 '_Bool'
|-VarDecl 0x560d0691a858 <line:715:1, col:7> col:7 used weak$$choice2 '_Bool'
|-FunctionDecl 0x560d0691a970 prev 0x560d06918af0 <line:716:1, line:745:1> line:716:8 used P0 'void *(void *)'
| |-ParmVarDecl 0x560d0691a8d8 <col:11, col:17> col:17 arg 'void *'
| `-CompoundStmt 0x560d0691c228 <line:717:1, line:745:1>
|   |-CallExpr 0x560d0691aa88 <line:718:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x560d0691aa70 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x560d0691aa18 <col:3> 'void ()' Function 0x560d068bfe40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x560d0691ab10 <line:719:3, col:15> 'int' '='
|   | |-DeclRefExpr 0x560d0691aaa8 <col:3> 'int' lvalue Var 0x560d0691a2a0 'a$w_buff1' 'int'
|   | `-ImplicitCastExpr 0x560d0691aae8 <col:15> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x560d0691aac8 <col:15> 'int' lvalue Var 0x560d0691a1a8 'a$w_buff0' 'int'
|   |-BinaryOperator 0x560d0691ab70 <line:720:3, col:15> 'int' '='
|   | |-DeclRefExpr 0x560d0691ab30 <col:3> 'int' lvalue Var 0x560d0691a1a8 'a$w_buff0' 'int'
|   | `-IntegerLiteral 0x560d0691ab50 <col:15> 'int' 1
|   |-BinaryOperator 0x560d0691abe8 <line:721:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x560d0691ab90 <col:3> '_Bool' lvalue Var 0x560d0691a318 'a$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x560d0691abd0 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x560d0691abb0 <col:20> '_Bool' lvalue Var 0x560d0691a220 'a$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x560d0691ac80 <line:722:3, col:27> '_Bool' '='
|   | |-DeclRefExpr 0x560d0691ac08 <col:3> '_Bool' lvalue Var 0x560d0691a220 'a$w_buff0_used' '_Bool'
|   | `-CStyleCastExpr 0x560d0691ac58 <col:20, col:27> '_Bool' <IntegralToBoolean>
|   |   `-IntegerLiteral 0x560d0691ac28 <col:27> 'int' 1
|   |-CallExpr 0x560d0691ae08 <line:723:3, col:56> 'void'
|   | |-ImplicitCastExpr 0x560d0691adf0 <col:3> 'void (*)(int)' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x560d0691aca0 <col:3> 'void (int)' Function 0x560d068bfbc8 '__VERIFIER_assert' 'void (int)'
|   | `-UnaryOperator 0x560d0691ada0 <col:21, col:55> 'int' prefix '!' cannot overflow
|   |   `-ParenExpr 0x560d0691ad80 <col:22, col:55> 'int'
|   |     `-BinaryOperator 0x560d0691ad60 <col:23, col:41> 'int' '&&'
|   |       |-ImplicitCastExpr 0x560d0691ad18 <col:23> 'int' <IntegralCast>
|   |       | `-ImplicitCastExpr 0x560d0691ad00 <col:23> '_Bool' <LValueToRValue>
|   |       |   `-DeclRefExpr 0x560d0691acc0 <col:23> '_Bool' lvalue Var 0x560d0691a318 'a$w_buff1_used' '_Bool'
|   |       `-ImplicitCastExpr 0x560d0691ad48 <col:41> 'int' <IntegralCast>
|   |         `-ImplicitCastExpr 0x560d0691ad30 <col:41> '_Bool' <LValueToRValue>
|   |           `-DeclRefExpr 0x560d0691ace0 <col:41> '_Bool' lvalue Var 0x560d0691a220 'a$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x560d0691ae88 <line:724:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x560d0691ae30 <col:3> '_Bool' lvalue Var 0x560d06919e50 'a$r_buff1_thd0' '_Bool'
|   | `-ImplicitCastExpr 0x560d0691ae70 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x560d0691ae50 <col:20> '_Bool' lvalue Var 0x560d06919bf8 'a$r_buff0_thd0' '_Bool'
|   |-BinaryOperator 0x560d0691af00 <line:725:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x560d0691aea8 <col:3> '_Bool' lvalue Var 0x560d06919ec8 'a$r_buff1_thd1' '_Bool'
|   | `-ImplicitCastExpr 0x560d0691aee8 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x560d0691aec8 <col:20> '_Bool' lvalue Var 0x560d06919c70 'a$r_buff0_thd1' '_Bool'
|   |-BinaryOperator 0x560d0691af78 <line:726:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x560d0691af20 <col:3> '_Bool' lvalue Var 0x560d06919f40 'a$r_buff1_thd2' '_Bool'
|   | `-ImplicitCastExpr 0x560d0691af60 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x560d0691af40 <col:20> '_Bool' lvalue Var 0x560d06919ce8 'a$r_buff0_thd2' '_Bool'
|   |-BinaryOperator 0x560d0691aff0 <line:727:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x560d0691af98 <col:3> '_Bool' lvalue Var 0x560d06919fb8 'a$r_buff1_thd3' '_Bool'
|   | `-ImplicitCastExpr 0x560d0691afd8 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x560d0691afb8 <col:20> '_Bool' lvalue Var 0x560d06919d60 'a$r_buff0_thd3' '_Bool'
|   |-BinaryOperator 0x560d0691b068 <line:728:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x560d0691b010 <col:3> '_Bool' lvalue Var 0x560d0691a030 'a$r_buff1_thd4' '_Bool'
|   | `-ImplicitCastExpr 0x560d0691b050 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x560d0691b030 <col:20> '_Bool' lvalue Var 0x560d06919dd8 'a$r_buff0_thd4' '_Bool'
|   |-BinaryOperator 0x560d0691b100 <line:729:3, col:27> '_Bool' '='
|   | |-DeclRefExpr 0x560d0691b088 <col:3> '_Bool' lvalue Var 0x560d06919c70 'a$r_buff0_thd1' '_Bool'
|   | `-CStyleCastExpr 0x560d0691b0d8 <col:20, col:27> '_Bool' <IntegralToBoolean>
|   |   `-IntegerLiteral 0x560d0691b0a8 <col:27> 'int' 1
|   |-CallExpr 0x560d0691b158 <line:730:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x560d0691b140 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x560d0691b120 <col:3> 'void ()' Function 0x560d068bff00 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x560d0691b1b0 <line:731:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x560d0691b198 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x560d0691b178 <col:3> 'void ()' Function 0x560d068bfe40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x560d0691b228 <line:732:3, col:25> 'int' '='
|   | |-DeclRefExpr 0x560d0691b1d0 <col:3> 'int' lvalue Var 0x560d06919398 '__unbuffered_p0_EAX' 'int'
|   | `-ImplicitCastExpr 0x560d0691b210 <col:25> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x560d0691b1f0 <col:25> 'int' lvalue Var 0x560d0691a508 'x' 'int'
|   |-CallExpr 0x560d0691b280 <line:733:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x560d0691b268 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x560d0691b248 <col:3> 'void ()' Function 0x560d068bff00 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x560d0691b2d8 <line:734:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x560d0691b2c0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x560d0691b2a0 <col:3> 'void ()' Function 0x560d068bfe40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x560d0691b5c0 <line:735:3, col:103> 'int' '='
|   | |-DeclRefExpr 0x560d0691b2f8 <col:3> 'int' lvalue Var 0x560d06919a58 'a' 'int'
|   | `-ConditionalOperator 0x560d0691b590 <col:7, col:103> 'int'
|   |   |-BinaryOperator 0x560d0691b3b8 <col:7, col:25> 'int' '&&'
|   |   | |-ImplicitCastExpr 0x560d0691b370 <col:7> 'int' <IntegralCast>
|   |   | | `-ImplicitCastExpr 0x560d0691b358 <col:7> '_Bool' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x560d0691b318 <col:7> '_Bool' lvalue Var 0x560d0691a220 'a$w_buff0_used' '_Bool'
|   |   | `-ImplicitCastExpr 0x560d0691b3a0 <col:25> 'int' <IntegralCast>
|   |   |   `-ImplicitCastExpr 0x560d0691b388 <col:25> '_Bool' <LValueToRValue>
|   |   |     `-DeclRefExpr 0x560d0691b338 <col:25> '_Bool' lvalue Var 0x560d06919c70 'a$r_buff0_thd1' '_Bool'
|   |   |-ImplicitCastExpr 0x560d0691b578 <col:42> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x560d0691b3d8 <col:42> 'int' lvalue Var 0x560d0691a1a8 'a$w_buff0' 'int'
|   |   `-ParenExpr 0x560d0691b558 <col:54, col:103> 'int'
|   |     `-ConditionalOperator 0x560d0691b528 <col:55, col:102> 'int'
|   |       |-BinaryOperator 0x560d0691b498 <col:55, col:73> 'int' '&&'
|   |       | |-ImplicitCastExpr 0x560d0691b450 <col:55> 'int' <IntegralCast>
|   |       | | `-ImplicitCastExpr 0x560d0691b438 <col:55> '_Bool' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x560d0691b3f8 <col:55> '_Bool' lvalue Var 0x560d0691a318 'a$w_buff1_used' '_Bool'
|   |       | `-ImplicitCastExpr 0x560d0691b480 <col:73> 'int' <IntegralCast>
|   |       |   `-ImplicitCastExpr 0x560d0691b468 <col:73> '_Bool' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x560d0691b418 <col:73> '_Bool' lvalue Var 0x560d06919ec8 'a$r_buff1_thd1' '_Bool'
|   |       |-ImplicitCastExpr 0x560d0691b4f8 <col:90> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x560d0691b4b8 <col:90> 'int' lvalue Var 0x560d0691a2a0 'a$w_buff1' 'int'
|   |       `-ImplicitCastExpr 0x560d0691b510 <col:102> 'int' <LValueToRValue>
|   |         `-DeclRefExpr 0x560d0691b4d8 <col:102> 'int' lvalue Var 0x560d06919a58 'a' 'int'
|   |-BinaryOperator 0x560d0691b7c8 <line:736:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x560d0691b5e0 <col:3> '_Bool' lvalue Var 0x560d0691a220 'a$w_buff0_used' '_Bool'
|   | `-ImplicitCastExpr 0x560d0691b7b0 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x560d0691b780 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x560d0691b6a0 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x560d0691b658 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x560d0691b640 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x560d0691b600 <col:20> '_Bool' lvalue Var 0x560d0691a220 'a$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x560d0691b688 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x560d0691b670 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x560d0691b620 <col:38> '_Bool' lvalue Var 0x560d06919c70 'a$r_buff0_thd1' '_Bool'
|   |     |-ImplicitCastExpr 0x560d0691b738 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x560d0691b6f0 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x560d0691b6c0 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x560d0691b768 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x560d0691b750 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x560d0691b718 <col:66> '_Bool' lvalue Var 0x560d0691a220 'a$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x560d0691bab0 <line:737:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x560d0691b7e8 <col:3> '_Bool' lvalue Var 0x560d0691a318 'a$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x560d0691ba98 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x560d0691ba68 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x560d0691b988 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x560d0691b8a8 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x560d0691b860 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x560d0691b848 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x560d0691b808 <col:20> '_Bool' lvalue Var 0x560d0691a220 'a$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x560d0691b890 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x560d0691b878 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x560d0691b828 <col:38> '_Bool' lvalue Var 0x560d06919c70 'a$r_buff0_thd1' '_Bool'
|   |     | `-BinaryOperator 0x560d0691b968 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x560d0691b920 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x560d0691b908 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x560d0691b8c8 <col:56> '_Bool' lvalue Var 0x560d0691a318 'a$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x560d0691b950 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x560d0691b938 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x560d0691b8e8 <col:74> '_Bool' lvalue Var 0x560d06919ec8 'a$r_buff1_thd1' '_Bool'
|   |     |-ImplicitCastExpr 0x560d0691ba20 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x560d0691b9d8 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x560d0691b9a8 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x560d0691ba50 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x560d0691ba38 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x560d0691ba00 <col:102> '_Bool' lvalue Var 0x560d0691a318 'a$w_buff1_used' '_Bool'
|   |-BinaryOperator 0x560d0691bcc8 <line:738:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x560d0691bad0 <col:3> '_Bool' lvalue Var 0x560d06919c70 'a$r_buff0_thd1' '_Bool'
|   | `-ImplicitCastExpr 0x560d0691bcb0 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x560d0691bc80 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x560d0691bba0 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x560d0691bb58 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x560d0691bb40 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x560d0691baf0 <col:20> '_Bool' lvalue Var 0x560d0691a220 'a$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x560d0691bb88 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x560d0691bb70 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x560d0691bb20 <col:38> '_Bool' lvalue Var 0x560d06919c70 'a$r_buff0_thd1' '_Bool'
|   |     |-ImplicitCastExpr 0x560d0691bc38 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x560d0691bbf0 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x560d0691bbc0 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x560d0691bc68 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x560d0691bc50 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x560d0691bc18 <col:66> '_Bool' lvalue Var 0x560d06919c70 'a$r_buff0_thd1' '_Bool'
|   |-BinaryOperator 0x560d0691bfb0 <line:739:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x560d0691bce8 <col:3> '_Bool' lvalue Var 0x560d06919ec8 'a$r_buff1_thd1' '_Bool'
|   | `-ImplicitCastExpr 0x560d0691bf98 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x560d0691bf68 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x560d0691be88 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x560d0691bda8 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x560d0691bd60 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x560d0691bd48 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x560d0691bd08 <col:20> '_Bool' lvalue Var 0x560d0691a220 'a$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x560d0691bd90 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x560d0691bd78 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x560d0691bd28 <col:38> '_Bool' lvalue Var 0x560d06919c70 'a$r_buff0_thd1' '_Bool'
|   |     | `-BinaryOperator 0x560d0691be68 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x560d0691be20 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x560d0691be08 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x560d0691bdc8 <col:56> '_Bool' lvalue Var 0x560d0691a318 'a$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x560d0691be50 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x560d0691be38 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x560d0691bde8 <col:74> '_Bool' lvalue Var 0x560d06919ec8 'a$r_buff1_thd1' '_Bool'
|   |     |-ImplicitCastExpr 0x560d0691bf20 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x560d0691bed8 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x560d0691bea8 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x560d0691bf50 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x560d0691bf38 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x560d0691bf00 <col:102> '_Bool' lvalue Var 0x560d06919ec8 'a$r_buff1_thd1' '_Bool'
|   |-CallExpr 0x560d0691c008 <line:740:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x560d0691bff0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x560d0691bfd0 <col:3> 'void ()' Function 0x560d068bff00 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x560d0691c060 <line:741:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x560d0691c048 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x560d0691c028 <col:3> 'void ()' Function 0x560d068bfe40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x560d0691c118 <line:742:3, col:41> 'int' '='
|   | |-DeclRefExpr 0x560d0691c080 <col:3> 'int' lvalue Var 0x560d06919278 '__unbuffered_cnt' 'int'
|   | `-BinaryOperator 0x560d0691c0f8 <col:22, col:41> 'int' '+'
|   |   |-ImplicitCastExpr 0x560d0691c0e0 <col:22> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x560d0691c0a0 <col:22> 'int' lvalue Var 0x560d06919278 '__unbuffered_cnt' 'int'
|   |   `-IntegerLiteral 0x560d0691c0c0 <col:41> 'int' 1
|   |-CallExpr 0x560d0691c170 <line:743:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x560d0691c158 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x560d0691c138 <col:3> 'void ()' Function 0x560d068bff00 '__VERIFIER_atomic_end' 'void ()'
|   `-ReturnStmt 0x560d0691c218 <line:744:3, col:36>
|     `-CallExpr 0x560d0691c1f8 <col:10, col:36> 'void *'
|       `-ImplicitCastExpr 0x560d0691c1e0 <col:10> 'void *(*)(void)' <FunctionToPointerDecay>
|         `-DeclRefExpr 0x560d0691c190 <col:10> 'void *(void)' Function 0x560d068bf958 '__VERIFIER_nondet_pointer' 'void *(void)'
|-FunctionDecl 0x560d0691c3c0 prev 0x560d06918c48 <line:746:1, line:765:1> line:746:8 used P1 'void *(void *)'
| |-ParmVarDecl 0x560d0691c328 <col:11, col:17> col:17 arg 'void *'
| `-CompoundStmt 0x560d0691d600 <line:747:1, line:765:1>
|   |-CallExpr 0x560d0691c4a0 <line:748:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x560d0691c488 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x560d0691c468 <col:3> 'void ()' Function 0x560d068bfe40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x560d0691c500 <line:749:3, col:7> 'int' '='
|   | |-DeclRefExpr 0x560d0691c4c0 <col:3> 'int' lvalue Var 0x560d0691a508 'x' 'int'
|   | `-IntegerLiteral 0x560d0691c4e0 <col:7> 'int' 1
|   |-CallExpr 0x560d0691c558 <line:750:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x560d0691c540 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x560d0691c520 <col:3> 'void ()' Function 0x560d068bff00 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x560d0691c5b0 <line:751:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x560d0691c598 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x560d0691c578 <col:3> 'void ()' Function 0x560d068bfe40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x560d0691c628 <line:752:3, col:25> 'int' '='
|   | |-DeclRefExpr 0x560d0691c5d0 <col:3> 'int' lvalue Var 0x560d069194b8 '__unbuffered_p1_EAX' 'int'
|   | `-ImplicitCastExpr 0x560d0691c610 <col:25> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x560d0691c5f0 <col:25> 'int' lvalue Var 0x560d0691a628 'y' 'int'
|   |-CallExpr 0x560d0691c680 <line:753:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x560d0691c668 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x560d0691c648 <col:3> 'void ()' Function 0x560d068bff00 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x560d0691c6d8 <line:754:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x560d0691c6c0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x560d0691c6a0 <col:3> 'void ()' Function 0x560d068bfe40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x560d0691c9c0 <line:755:3, col:103> 'int' '='
|   | |-DeclRefExpr 0x560d0691c6f8 <col:3> 'int' lvalue Var 0x560d06919a58 'a' 'int'
|   | `-ConditionalOperator 0x560d0691c990 <col:7, col:103> 'int'
|   |   |-BinaryOperator 0x560d0691c7b8 <col:7, col:25> 'int' '&&'
|   |   | |-ImplicitCastExpr 0x560d0691c770 <col:7> 'int' <IntegralCast>
|   |   | | `-ImplicitCastExpr 0x560d0691c758 <col:7> '_Bool' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x560d0691c718 <col:7> '_Bool' lvalue Var 0x560d0691a220 'a$w_buff0_used' '_Bool'
|   |   | `-ImplicitCastExpr 0x560d0691c7a0 <col:25> 'int' <IntegralCast>
|   |   |   `-ImplicitCastExpr 0x560d0691c788 <col:25> '_Bool' <LValueToRValue>
|   |   |     `-DeclRefExpr 0x560d0691c738 <col:25> '_Bool' lvalue Var 0x560d06919ce8 'a$r_buff0_thd2' '_Bool'
|   |   |-ImplicitCastExpr 0x560d0691c978 <col:42> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x560d0691c7d8 <col:42> 'int' lvalue Var 0x560d0691a1a8 'a$w_buff0' 'int'
|   |   `-ParenExpr 0x560d0691c958 <col:54, col:103> 'int'
|   |     `-ConditionalOperator 0x560d0691c928 <col:55, col:102> 'int'
|   |       |-BinaryOperator 0x560d0691c898 <col:55, col:73> 'int' '&&'
|   |       | |-ImplicitCastExpr 0x560d0691c850 <col:55> 'int' <IntegralCast>
|   |       | | `-ImplicitCastExpr 0x560d0691c838 <col:55> '_Bool' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x560d0691c7f8 <col:55> '_Bool' lvalue Var 0x560d0691a318 'a$w_buff1_used' '_Bool'
|   |       | `-ImplicitCastExpr 0x560d0691c880 <col:73> 'int' <IntegralCast>
|   |       |   `-ImplicitCastExpr 0x560d0691c868 <col:73> '_Bool' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x560d0691c818 <col:73> '_Bool' lvalue Var 0x560d06919f40 'a$r_buff1_thd2' '_Bool'
|   |       |-ImplicitCastExpr 0x560d0691c8f8 <col:90> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x560d0691c8b8 <col:90> 'int' lvalue Var 0x560d0691a2a0 'a$w_buff1' 'int'
|   |       `-ImplicitCastExpr 0x560d0691c910 <col:102> 'int' <LValueToRValue>
|   |         `-DeclRefExpr 0x560d0691c8d8 <col:102> 'int' lvalue Var 0x560d06919a58 'a' 'int'
|   |-BinaryOperator 0x560d0691cbe0 <line:756:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x560d0691c9e0 <col:3> '_Bool' lvalue Var 0x560d0691a220 'a$w_buff0_used' '_Bool'
|   | `-ImplicitCastExpr 0x560d0691cbc8 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x560d0691cb98 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x560d0691caa0 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x560d0691ca58 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x560d0691ca40 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x560d0691ca00 <col:20> '_Bool' lvalue Var 0x560d0691a220 'a$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x560d0691ca88 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x560d0691ca70 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x560d0691ca20 <col:38> '_Bool' lvalue Var 0x560d06919ce8 'a$r_buff0_thd2' '_Bool'
|   |     |-ImplicitCastExpr 0x560d0691cb50 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x560d0691caf0 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x560d0691cac0 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x560d0691cb80 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x560d0691cb68 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x560d0691cb30 <col:66> '_Bool' lvalue Var 0x560d0691a220 'a$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x560d0691cec8 <line:757:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x560d0691cc00 <col:3> '_Bool' lvalue Var 0x560d0691a318 'a$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x560d0691ceb0 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x560d0691ce80 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x560d0691cda0 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x560d0691ccc0 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x560d0691cc78 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x560d0691cc60 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x560d0691cc20 <col:20> '_Bool' lvalue Var 0x560d0691a220 'a$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x560d0691cca8 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x560d0691cc90 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x560d0691cc40 <col:38> '_Bool' lvalue Var 0x560d06919ce8 'a$r_buff0_thd2' '_Bool'
|   |     | `-BinaryOperator 0x560d0691cd80 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x560d0691cd38 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x560d0691cd20 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x560d0691cce0 <col:56> '_Bool' lvalue Var 0x560d0691a318 'a$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x560d0691cd68 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x560d0691cd50 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x560d0691cd00 <col:74> '_Bool' lvalue Var 0x560d06919f40 'a$r_buff1_thd2' '_Bool'
|   |     |-ImplicitCastExpr 0x560d0691ce38 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x560d0691cdf0 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x560d0691cdc0 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x560d0691ce68 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x560d0691ce50 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x560d0691ce18 <col:102> '_Bool' lvalue Var 0x560d0691a318 'a$w_buff1_used' '_Bool'
|   |-BinaryOperator 0x560d0691d0d0 <line:758:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x560d0691cee8 <col:3> '_Bool' lvalue Var 0x560d06919ce8 'a$r_buff0_thd2' '_Bool'
|   | `-ImplicitCastExpr 0x560d0691d0b8 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x560d0691d088 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x560d0691cfa8 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x560d0691cf60 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x560d0691cf48 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x560d0691cf08 <col:20> '_Bool' lvalue Var 0x560d0691a220 'a$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x560d0691cf90 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x560d0691cf78 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x560d0691cf28 <col:38> '_Bool' lvalue Var 0x560d06919ce8 'a$r_buff0_thd2' '_Bool'
|   |     |-ImplicitCastExpr 0x560d0691d040 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x560d0691cff8 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x560d0691cfc8 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x560d0691d070 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x560d0691d058 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x560d0691d020 <col:66> '_Bool' lvalue Var 0x560d06919ce8 'a$r_buff0_thd2' '_Bool'
|   |-BinaryOperator 0x560d0691d3b8 <line:759:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x560d0691d0f0 <col:3> '_Bool' lvalue Var 0x560d06919f40 'a$r_buff1_thd2' '_Bool'
|   | `-ImplicitCastExpr 0x560d0691d3a0 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x560d0691d370 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x560d0691d290 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x560d0691d1b0 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x560d0691d168 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x560d0691d150 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x560d0691d110 <col:20> '_Bool' lvalue Var 0x560d0691a220 'a$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x560d0691d198 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x560d0691d180 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x560d0691d130 <col:38> '_Bool' lvalue Var 0x560d06919ce8 'a$r_buff0_thd2' '_Bool'
|   |     | `-BinaryOperator 0x560d0691d270 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x560d0691d228 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x560d0691d210 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x560d0691d1d0 <col:56> '_Bool' lvalue Var 0x560d0691a318 'a$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x560d0691d258 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x560d0691d240 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x560d0691d1f0 <col:74> '_Bool' lvalue Var 0x560d06919f40 'a$r_buff1_thd2' '_Bool'
|   |     |-ImplicitCastExpr 0x560d0691d328 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x560d0691d2e0 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x560d0691d2b0 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x560d0691d358 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x560d0691d340 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x560d0691d308 <col:102> '_Bool' lvalue Var 0x560d06919f40 'a$r_buff1_thd2' '_Bool'
|   |-CallExpr 0x560d0691d410 <line:760:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x560d0691d3f8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x560d0691d3d8 <col:3> 'void ()' Function 0x560d068bff00 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x560d0691d468 <line:761:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x560d0691d450 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x560d0691d430 <col:3> 'void ()' Function 0x560d068bfe40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x560d0691d520 <line:762:3, col:41> 'int' '='
|   | |-DeclRefExpr 0x560d0691d488 <col:3> 'int' lvalue Var 0x560d06919278 '__unbuffered_cnt' 'int'
|   | `-BinaryOperator 0x560d0691d500 <col:22, col:41> 'int' '+'
|   |   |-ImplicitCastExpr 0x560d0691d4e8 <col:22> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x560d0691d4a8 <col:22> 'int' lvalue Var 0x560d06919278 '__unbuffered_cnt' 'int'
|   |   `-IntegerLiteral 0x560d0691d4c8 <col:41> 'int' 1
|   |-CallExpr 0x560d0691d578 <line:763:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x560d0691d560 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x560d0691d540 <col:3> 'void ()' Function 0x560d068bff00 '__VERIFIER_atomic_end' 'void ()'
|   `-ReturnStmt 0x560d0691d5f0 <line:764:3, col:36>
|     `-CallExpr 0x560d0691d5d0 <col:10, col:36> 'void *'
|       `-ImplicitCastExpr 0x560d0691d5b8 <col:10> 'void *(*)(void)' <FunctionToPointerDecay>
|         `-DeclRefExpr 0x560d0691d598 <col:10> 'void *(void)' Function 0x560d068bf958 '__VERIFIER_nondet_pointer' 'void *(void)'
|-FunctionDecl 0x560d0691d748 prev 0x560d06918da0 <line:766:1, line:788:1> line:766:8 used P2 'void *(void *)'
| |-ParmVarDecl 0x560d0691d6b0 <col:11, col:17> col:17 arg 'void *'
| `-CompoundStmt 0x560d0691eb50 <line:767:1, line:788:1>
|   |-CallExpr 0x560d0691d828 <line:768:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x560d0691d810 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x560d0691d7f0 <col:3> 'void ()' Function 0x560d068bfe40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x560d0691d888 <line:769:3, col:7> 'int' '='
|   | |-DeclRefExpr 0x560d0691d848 <col:3> 'int' lvalue Var 0x560d0691a628 'y' 'int'
|   | `-IntegerLiteral 0x560d0691d868 <col:7> 'int' 1
|   |-CallExpr 0x560d0691d8e0 <line:770:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x560d0691d8c8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x560d0691d8a8 <col:3> 'void ()' Function 0x560d068bff00 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x560d0691d938 <line:771:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x560d0691d920 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x560d0691d900 <col:3> 'void ()' Function 0x560d068bfe40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x560d0691d9b0 <line:772:3, col:25> 'int' '='
|   | |-DeclRefExpr 0x560d0691d958 <col:3> 'int' lvalue Var 0x560d069195d8 '__unbuffered_p2_EAX' 'int'
|   | `-ImplicitCastExpr 0x560d0691d998 <col:25> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x560d0691d978 <col:25> 'int' lvalue Var 0x560d0691a628 'y' 'int'
|   |-CallExpr 0x560d0691da08 <line:773:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x560d0691d9f0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x560d0691d9d0 <col:3> 'void ()' Function 0x560d068bff00 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x560d0691da60 <line:774:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x560d0691da48 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x560d0691da28 <col:3> 'void ()' Function 0x560d068bfe40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x560d0691dad8 <line:775:3, col:25> 'int' '='
|   | |-DeclRefExpr 0x560d0691da80 <col:3> 'int' lvalue Var 0x560d069196f8 '__unbuffered_p2_EBX' 'int'
|   | `-ImplicitCastExpr 0x560d0691dac0 <col:25> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x560d0691daa0 <col:25> 'int' lvalue Var 0x560d0691a748 'z' 'int'
|   |-CallExpr 0x560d0691db40 <line:776:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x560d0691db18 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x560d0691daf8 <col:3> 'void ()' Function 0x560d068bff00 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x560d0691db98 <line:777:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x560d0691db80 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x560d0691db60 <col:3> 'void ()' Function 0x560d068bfe40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x560d0691de80 <line:778:3, col:103> 'int' '='
|   | |-DeclRefExpr 0x560d0691dbb8 <col:3> 'int' lvalue Var 0x560d06919a58 'a' 'int'
|   | `-ConditionalOperator 0x560d0691de50 <col:7, col:103> 'int'
|   |   |-BinaryOperator 0x560d0691dc78 <col:7, col:25> 'int' '&&'
|   |   | |-ImplicitCastExpr 0x560d0691dc30 <col:7> 'int' <IntegralCast>
|   |   | | `-ImplicitCastExpr 0x560d0691dc18 <col:7> '_Bool' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x560d0691dbd8 <col:7> '_Bool' lvalue Var 0x560d0691a220 'a$w_buff0_used' '_Bool'
|   |   | `-ImplicitCastExpr 0x560d0691dc60 <col:25> 'int' <IntegralCast>
|   |   |   `-ImplicitCastExpr 0x560d0691dc48 <col:25> '_Bool' <LValueToRValue>
|   |   |     `-DeclRefExpr 0x560d0691dbf8 <col:25> '_Bool' lvalue Var 0x560d06919d60 'a$r_buff0_thd3' '_Bool'
|   |   |-ImplicitCastExpr 0x560d0691de38 <col:42> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x560d0691dc98 <col:42> 'int' lvalue Var 0x560d0691a1a8 'a$w_buff0' 'int'
|   |   `-ParenExpr 0x560d0691de18 <col:54, col:103> 'int'
|   |     `-ConditionalOperator 0x560d0691dde8 <col:55, col:102> 'int'
|   |       |-BinaryOperator 0x560d0691dd58 <col:55, col:73> 'int' '&&'
|   |       | |-ImplicitCastExpr 0x560d0691dd10 <col:55> 'int' <IntegralCast>
|   |       | | `-ImplicitCastExpr 0x560d0691dcf8 <col:55> '_Bool' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x560d0691dcb8 <col:55> '_Bool' lvalue Var 0x560d0691a318 'a$w_buff1_used' '_Bool'
|   |       | `-ImplicitCastExpr 0x560d0691dd40 <col:73> 'int' <IntegralCast>
|   |       |   `-ImplicitCastExpr 0x560d0691dd28 <col:73> '_Bool' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x560d0691dcd8 <col:73> '_Bool' lvalue Var 0x560d06919fb8 'a$r_buff1_thd3' '_Bool'
|   |       |-ImplicitCastExpr 0x560d0691ddb8 <col:90> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x560d0691dd78 <col:90> 'int' lvalue Var 0x560d0691a2a0 'a$w_buff1' 'int'
|   |       `-ImplicitCastExpr 0x560d0691ddd0 <col:102> 'int' <LValueToRValue>
|   |         `-DeclRefExpr 0x560d0691dd98 <col:102> 'int' lvalue Var 0x560d06919a58 'a' 'int'
|   |-BinaryOperator 0x560d0691e088 <line:779:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x560d0691dea0 <col:3> '_Bool' lvalue Var 0x560d0691a220 'a$w_buff0_used' '_Bool'
|   | `-ImplicitCastExpr 0x560d0691e070 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x560d0691e040 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x560d0691df60 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x560d0691df18 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x560d0691df00 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x560d0691dec0 <col:20> '_Bool' lvalue Var 0x560d0691a220 'a$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x560d0691df48 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x560d0691df30 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x560d0691dee0 <col:38> '_Bool' lvalue Var 0x560d06919d60 'a$r_buff0_thd3' '_Bool'
|   |     |-ImplicitCastExpr 0x560d0691dff8 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x560d0691dfb0 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x560d0691df80 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x560d0691e028 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x560d0691e010 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x560d0691dfd8 <col:66> '_Bool' lvalue Var 0x560d0691a220 'a$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x560d0691e370 <line:780:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x560d0691e0a8 <col:3> '_Bool' lvalue Var 0x560d0691a318 'a$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x560d0691e358 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x560d0691e328 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x560d0691e248 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x560d0691e168 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x560d0691e120 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x560d0691e108 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x560d0691e0c8 <col:20> '_Bool' lvalue Var 0x560d0691a220 'a$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x560d0691e150 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x560d0691e138 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x560d0691e0e8 <col:38> '_Bool' lvalue Var 0x560d06919d60 'a$r_buff0_thd3' '_Bool'
|   |     | `-BinaryOperator 0x560d0691e228 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x560d0691e1e0 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x560d0691e1c8 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x560d0691e188 <col:56> '_Bool' lvalue Var 0x560d0691a318 'a$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x560d0691e210 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x560d0691e1f8 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x560d0691e1a8 <col:74> '_Bool' lvalue Var 0x560d06919fb8 'a$r_buff1_thd3' '_Bool'
|   |     |-ImplicitCastExpr 0x560d0691e2e0 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x560d0691e298 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x560d0691e268 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x560d0691e310 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x560d0691e2f8 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x560d0691e2c0 <col:102> '_Bool' lvalue Var 0x560d0691a318 'a$w_buff1_used' '_Bool'
|   |-BinaryOperator 0x560d0691e578 <line:781:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x560d0691e390 <col:3> '_Bool' lvalue Var 0x560d06919d60 'a$r_buff0_thd3' '_Bool'
|   | `-ImplicitCastExpr 0x560d0691e560 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x560d0691e530 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x560d0691e450 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x560d0691e408 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x560d0691e3f0 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x560d0691e3b0 <col:20> '_Bool' lvalue Var 0x560d0691a220 'a$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x560d0691e438 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x560d0691e420 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x560d0691e3d0 <col:38> '_Bool' lvalue Var 0x560d06919d60 'a$r_buff0_thd3' '_Bool'
|   |     |-ImplicitCastExpr 0x560d0691e4e8 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x560d0691e4a0 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x560d0691e470 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x560d0691e518 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x560d0691e500 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x560d0691e4c8 <col:66> '_Bool' lvalue Var 0x560d06919d60 'a$r_buff0_thd3' '_Bool'
|   |-BinaryOperator 0x560d0691e860 <line:782:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x560d0691e598 <col:3> '_Bool' lvalue Var 0x560d06919fb8 'a$r_buff1_thd3' '_Bool'
|   | `-ImplicitCastExpr 0x560d0691e848 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x560d0691e818 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x560d0691e738 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x560d0691e658 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x560d0691e610 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x560d0691e5f8 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x560d0691e5b8 <col:20> '_Bool' lvalue Var 0x560d0691a220 'a$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x560d0691e640 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x560d0691e628 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x560d0691e5d8 <col:38> '_Bool' lvalue Var 0x560d06919d60 'a$r_buff0_thd3' '_Bool'
|   |     | `-BinaryOperator 0x560d0691e718 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x560d0691e6d0 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x560d0691e6b8 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x560d0691e678 <col:56> '_Bool' lvalue Var 0x560d0691a318 'a$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x560d0691e700 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x560d0691e6e8 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x560d0691e698 <col:74> '_Bool' lvalue Var 0x560d06919fb8 'a$r_buff1_thd3' '_Bool'
|   |     |-ImplicitCastExpr 0x560d0691e7d0 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x560d0691e788 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x560d0691e758 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x560d0691e800 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x560d0691e7e8 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x560d0691e7b0 <col:102> '_Bool' lvalue Var 0x560d06919fb8 'a$r_buff1_thd3' '_Bool'
|   |-CallExpr 0x560d0691e8b8 <line:783:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x560d0691e8a0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x560d0691e880 <col:3> 'void ()' Function 0x560d068bff00 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x560d0691e910 <line:784:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x560d0691e8f8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x560d0691e8d8 <col:3> 'void ()' Function 0x560d068bfe40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x560d0691e9c8 <line:785:3, col:41> 'int' '='
|   | |-DeclRefExpr 0x560d0691e930 <col:3> 'int' lvalue Var 0x560d06919278 '__unbuffered_cnt' 'int'
|   | `-BinaryOperator 0x560d0691e9a8 <col:22, col:41> 'int' '+'
|   |   |-ImplicitCastExpr 0x560d0691e990 <col:22> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x560d0691e950 <col:22> 'int' lvalue Var 0x560d06919278 '__unbuffered_cnt' 'int'
|   |   `-IntegerLiteral 0x560d0691e970 <col:41> 'int' 1
|   |-CallExpr 0x560d0691ea20 <line:786:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x560d0691ea08 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x560d0691e9e8 <col:3> 'void ()' Function 0x560d068bff00 '__VERIFIER_atomic_end' 'void ()'
|   `-ReturnStmt 0x560d0691ea98 <line:787:3, col:36>
|     `-CallExpr 0x560d0691ea78 <col:10, col:36> 'void *'
|       `-ImplicitCastExpr 0x560d0691ea60 <col:10> 'void *(*)(void)' <FunctionToPointerDecay>
|         `-DeclRefExpr 0x560d0691ea40 <col:10> 'void *(void)' Function 0x560d068bf958 '__VERIFIER_nondet_pointer' 'void *(void)'
|-FunctionDecl 0x560d0691ecb0 prev 0x560d06918ef8 <line:789:1, line:824:1> line:789:8 used P3 'void *(void *)'
| |-ParmVarDecl 0x560d0691ec18 <col:11, col:17> col:17 arg 'void *'
| `-CompoundStmt 0x560d069229c8 <line:790:1, line:824:1>
|   |-CallExpr 0x560d0691ed90 <line:791:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x560d0691ed78 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x560d0691ed58 <col:3> 'void ()' Function 0x560d068bfe40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x560d0691edf0 <line:792:3, col:7> 'int' '='
|   | |-DeclRefExpr 0x560d0691edb0 <col:3> 'int' lvalue Var 0x560d0691a748 'z' 'int'
|   | `-IntegerLiteral 0x560d0691edd0 <col:7> 'int' 1
|   |-CallExpr 0x560d0691ee48 <line:793:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x560d0691ee30 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x560d0691ee10 <col:3> 'void ()' Function 0x560d068bff00 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x560d0691eea0 <line:794:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x560d0691ee88 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x560d0691ee68 <col:3> 'void ()' Function 0x560d068bfe40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x560d0691ef18 <line:795:3, col:25> 'int' '='
|   | |-DeclRefExpr 0x560d0691eec0 <col:3> 'int' lvalue Var 0x560d06919818 '__unbuffered_p3_EAX' 'int'
|   | `-ImplicitCastExpr 0x560d0691ef00 <col:25> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x560d0691eee0 <col:25> 'int' lvalue Var 0x560d0691a748 'z' 'int'
|   |-CallExpr 0x560d0691ef70 <line:796:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x560d0691ef58 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x560d0691ef38 <col:3> 'void ()' Function 0x560d068bff00 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x560d0691efc8 <line:797:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x560d0691efb0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x560d0691ef90 <col:3> 'void ()' Function 0x560d068bfe40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x560d0691f078 <line:798:3, col:45> '_Bool' '='
|   | |-DeclRefExpr 0x560d0691efe8 <col:3> '_Bool' lvalue Var 0x560d0691a7e0 'weak$$choice0' '_Bool'
|   | `-ImplicitCastExpr 0x560d0691f060 <col:19, col:45> '_Bool' <PointerToBoolean>
|   |   `-CallExpr 0x560d0691f040 <col:19, col:45> 'void *'
|   |     `-ImplicitCastExpr 0x560d0691f028 <col:19> 'void *(*)(void)' <FunctionToPointerDecay>
|   |       `-DeclRefExpr 0x560d0691f008 <col:19> 'void *(void)' Function 0x560d068bf958 '__VERIFIER_nondet_pointer' 'void *(void)'
|   |-BinaryOperator 0x560d0691f128 <line:799:3, col:45> '_Bool' '='
|   | |-DeclRefExpr 0x560d0691f098 <col:3> '_Bool' lvalue Var 0x560d0691a858 'weak$$choice2' '_Bool'
|   | `-ImplicitCastExpr 0x560d0691f110 <col:19, col:45> '_Bool' <PointerToBoolean>
|   |   `-CallExpr 0x560d0691f0f0 <col:19, col:45> 'void *'
|   |     `-ImplicitCastExpr 0x560d0691f0d8 <col:19> 'void *(*)(void)' <FunctionToPointerDecay>
|   |       `-DeclRefExpr 0x560d0691f0b8 <col:19> 'void *(void)' Function 0x560d068bf958 '__VERIFIER_nondet_pointer' 'void *(void)'
|   |-BinaryOperator 0x560d0691f1a0 <line:800:3, col:21> '_Bool' '='
|   | |-DeclRefExpr 0x560d0691f148 <col:3> '_Bool' lvalue Var 0x560d06919b00 'a$flush_delayed' '_Bool'
|   | `-ImplicitCastExpr 0x560d0691f188 <col:21> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x560d0691f168 <col:21> '_Bool' lvalue Var 0x560d0691a858 'weak$$choice2' '_Bool'
|   |-BinaryOperator 0x560d0691f218 <line:801:3, col:15> 'int' '='
|   | |-DeclRefExpr 0x560d0691f1c0 <col:3> 'int' lvalue Var 0x560d06919b80 'a$mem_tmp' 'int'
|   | `-ImplicitCastExpr 0x560d0691f200 <col:15> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x560d0691f1e0 <col:15> 'int' lvalue Var 0x560d06919a58 'a' 'int'
|   |-BinaryOperator 0x560d0691f650 <line:802:3, col:162> 'int' '='
|   | |-DeclRefExpr 0x560d0691f238 <col:3> 'int' lvalue Var 0x560d06919a58 'a' 'int'
|   | `-ConditionalOperator 0x560d0691f620 <col:7, col:162> 'int'
|   |   |-BinaryOperator 0x560d0691f448 <col:7, col:84> 'int' '||'
|   |   | |-BinaryOperator 0x560d0691f368 <col:7, col:46> 'int' '||'
|   |   | | |-UnaryOperator 0x560d0691f290 <col:7, col:8> 'int' prefix '!' cannot overflow
|   |   | | | `-ImplicitCastExpr 0x560d0691f278 <col:8> '_Bool' <LValueToRValue>
|   |   | | |   `-DeclRefExpr 0x560d0691f258 <col:8> '_Bool' lvalue Var 0x560d0691a220 'a$w_buff0_used' '_Bool'
|   |   | | `-BinaryOperator 0x560d0691f348 <col:26, col:46> 'int' '&&'
|   |   | |   |-UnaryOperator 0x560d0691f2e0 <col:26, col:27> 'int' prefix '!' cannot overflow
|   |   | |   | `-ImplicitCastExpr 0x560d0691f2c8 <col:27> '_Bool' <LValueToRValue>
|   |   | |   |   `-DeclRefExpr 0x560d0691f2a8 <col:27> '_Bool' lvalue Var 0x560d06919dd8 'a$r_buff0_thd4' '_Bool'
|   |   | |   `-UnaryOperator 0x560d0691f330 <col:45, col:46> 'int' prefix '!' cannot overflow
|   |   | |     `-ImplicitCastExpr 0x560d0691f318 <col:46> '_Bool' <LValueToRValue>
|   |   | |       `-DeclRefExpr 0x560d0691f2f8 <col:46> '_Bool' lvalue Var 0x560d0691a318 'a$w_buff1_used' '_Bool'
|   |   | `-BinaryOperator 0x560d0691f428 <col:64, col:84> 'int' '&&'
|   |   |   |-UnaryOperator 0x560d0691f3c0 <col:64, col:65> 'int' prefix '!' cannot overflow
|   |   |   | `-ImplicitCastExpr 0x560d0691f3a8 <col:65> '_Bool' <LValueToRValue>
|   |   |   |   `-DeclRefExpr 0x560d0691f388 <col:65> '_Bool' lvalue Var 0x560d06919dd8 'a$r_buff0_thd4' '_Bool'
|   |   |   `-UnaryOperator 0x560d0691f410 <col:83, col:84> 'int' prefix '!' cannot overflow
|   |   |     `-ImplicitCastExpr 0x560d0691f3f8 <col:84> '_Bool' <LValueToRValue>
|   |   |       `-DeclRefExpr 0x560d0691f3d8 <col:84> '_Bool' lvalue Var 0x560d0691a030 'a$r_buff1_thd4' '_Bool'
|   |   |-ImplicitCastExpr 0x560d0691f608 <col:101> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x560d0691f468 <col:101> 'int' lvalue Var 0x560d06919a58 'a' 'int'
|   |   `-ParenExpr 0x560d0691f5e8 <col:105, col:162> 'int'
|   |     `-ConditionalOperator 0x560d0691f5b8 <col:106, col:153> 'int'
|   |       |-BinaryOperator 0x560d0691f528 <col:106, col:124> 'int' '&&'
|   |       | |-ImplicitCastExpr 0x560d0691f4e0 <col:106> 'int' <IntegralCast>
|   |       | | `-ImplicitCastExpr 0x560d0691f4c8 <col:106> '_Bool' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x560d0691f488 <col:106> '_Bool' lvalue Var 0x560d0691a220 'a$w_buff0_used' '_Bool'
|   |       | `-ImplicitCastExpr 0x560d0691f510 <col:124> 'int' <IntegralCast>
|   |       |   `-ImplicitCastExpr 0x560d0691f4f8 <col:124> '_Bool' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x560d0691f4a8 <col:124> '_Bool' lvalue Var 0x560d06919dd8 'a$r_buff0_thd4' '_Bool'
|   |       |-ImplicitCastExpr 0x560d0691f588 <col:141> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x560d0691f548 <col:141> 'int' lvalue Var 0x560d0691a1a8 'a$w_buff0' 'int'
|   |       `-ImplicitCastExpr 0x560d0691f5a0 <col:153> 'int' <LValueToRValue>
|   |         `-DeclRefExpr 0x560d0691f568 <col:153> 'int' lvalue Var 0x560d0691a2a0 'a$w_buff1' 'int'
|   |-BinaryOperator 0x560d0691fb90 <line:803:3, col:208> 'int' '='
|   | |-DeclRefExpr 0x560d0691f670 <col:3> 'int' lvalue Var 0x560d0691a1a8 'a$w_buff0' 'int'
|   | `-ConditionalOperator 0x560d0691fb60 <col:15, col:208> 'int'
|   |   |-ImplicitCastExpr 0x560d0691fb00 <col:15> 'int' <IntegralCast>
|   |   | `-ImplicitCastExpr 0x560d0691fae8 <col:15> '_Bool' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x560d0691f690 <col:15> '_Bool' lvalue Var 0x560d0691a858 'weak$$choice2' '_Bool'
|   |   |-ImplicitCastExpr 0x560d0691fb18 <col:31> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x560d0691f6b0 <col:31> 'int' lvalue Var 0x560d0691a1a8 'a$w_buff0' 'int'
|   |   `-ParenExpr 0x560d0691fac8 <col:43, col:208> 'int'
|   |     `-ConditionalOperator 0x560d0691fa98 <col:44, col:207> 'int'
|   |       |-BinaryOperator 0x560d0691f8c0 <col:44, col:121> 'int' '||'
|   |       | |-BinaryOperator 0x560d0691f7e0 <col:44, col:83> 'int' '||'
|   |       | | |-UnaryOperator 0x560d0691f708 <col:44, col:45> 'int' prefix '!' cannot overflow
|   |       | | | `-ImplicitCastExpr 0x560d0691f6f0 <col:45> '_Bool' <LValueToRValue>
|   |       | | |   `-DeclRefExpr 0x560d0691f6d0 <col:45> '_Bool' lvalue Var 0x560d0691a220 'a$w_buff0_used' '_Bool'
|   |       | | `-BinaryOperator 0x560d0691f7c0 <col:63, col:83> 'int' '&&'
|   |       | |   |-UnaryOperator 0x560d0691f758 <col:63, col:64> 'int' prefix '!' cannot overflow
|   |       | |   | `-ImplicitCastExpr 0x560d0691f740 <col:64> '_Bool' <LValueToRValue>
|   |       | |   |   `-DeclRefExpr 0x560d0691f720 <col:64> '_Bool' lvalue Var 0x560d06919dd8 'a$r_buff0_thd4' '_Bool'
|   |       | |   `-UnaryOperator 0x560d0691f7a8 <col:82, col:83> 'int' prefix '!' cannot overflow
|   |       | |     `-ImplicitCastExpr 0x560d0691f790 <col:83> '_Bool' <LValueToRValue>
|   |       | |       `-DeclRefExpr 0x560d0691f770 <col:83> '_Bool' lvalue Var 0x560d0691a318 'a$w_buff1_used' '_Bool'
|   |       | `-BinaryOperator 0x560d0691f8a0 <col:101, col:121> 'int' '&&'
|   |       |   |-UnaryOperator 0x560d0691f838 <col:101, col:102> 'int' prefix '!' cannot overflow
|   |       |   | `-ImplicitCastExpr 0x560d0691f820 <col:102> '_Bool' <LValueToRValue>
|   |       |   |   `-DeclRefExpr 0x560d0691f800 <col:102> '_Bool' lvalue Var 0x560d06919dd8 'a$r_buff0_thd4' '_Bool'
|   |       |   `-UnaryOperator 0x560d0691f888 <col:120, col:121> 'int' prefix '!' cannot overflow
|   |       |     `-ImplicitCastExpr 0x560d0691f870 <col:121> '_Bool' <LValueToRValue>
|   |       |       `-DeclRefExpr 0x560d0691f850 <col:121> '_Bool' lvalue Var 0x560d0691a030 'a$r_buff1_thd4' '_Bool'
|   |       |-ImplicitCastExpr 0x560d0691fa80 <col:138> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x560d0691f8e0 <col:138> 'int' lvalue Var 0x560d0691a1a8 'a$w_buff0' 'int'
|   |       `-ParenExpr 0x560d0691fa60 <col:150, col:207> 'int'
|   |         `-ConditionalOperator 0x560d0691fa30 <col:151, col:198> 'int'
|   |           |-BinaryOperator 0x560d0691f9a0 <col:151, col:169> 'int' '&&'
|   |           | |-ImplicitCastExpr 0x560d0691f958 <col:151> 'int' <IntegralCast>
|   |           | | `-ImplicitCastExpr 0x560d0691f940 <col:151> '_Bool' <LValueToRValue>
|   |           | |   `-DeclRefExpr 0x560d0691f900 <col:151> '_Bool' lvalue Var 0x560d0691a220 'a$w_buff0_used' '_Bool'
|   |           | `-ImplicitCastExpr 0x560d0691f988 <col:169> 'int' <IntegralCast>
|   |           |   `-ImplicitCastExpr 0x560d0691f970 <col:169> '_Bool' <LValueToRValue>
|   |           |     `-DeclRefExpr 0x560d0691f920 <col:169> '_Bool' lvalue Var 0x560d06919dd8 'a$r_buff0_thd4' '_Bool'
|   |           |-ImplicitCastExpr 0x560d0691fa00 <col:186> 'int' <LValueToRValue>
|   |           | `-DeclRefExpr 0x560d0691f9c0 <col:186> 'int' lvalue Var 0x560d0691a1a8 'a$w_buff0' 'int'
|   |           `-ImplicitCastExpr 0x560d0691fa18 <col:198> 'int' <LValueToRValue>
|   |             `-DeclRefExpr 0x560d0691f9e0 <col:198> 'int' lvalue Var 0x560d0691a1a8 'a$w_buff0' 'int'
|   |-BinaryOperator 0x560d069200a0 <line:804:3, col:208> 'int' '='
|   | |-DeclRefExpr 0x560d0691fbb0 <col:3> 'int' lvalue Var 0x560d0691a2a0 'a$w_buff1' 'int'
|   | `-ConditionalOperator 0x560d06920070 <col:15, col:208> 'int'
|   |   |-ImplicitCastExpr 0x560d06920040 <col:15> 'int' <IntegralCast>
|   |   | `-ImplicitCastExpr 0x560d06920028 <col:15> '_Bool' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x560d0691fbd0 <col:15> '_Bool' lvalue Var 0x560d0691a858 'weak$$choice2' '_Bool'
|   |   |-ImplicitCastExpr 0x560d06920058 <col:31> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x560d0691fbf0 <col:31> 'int' lvalue Var 0x560d0691a2a0 'a$w_buff1' 'int'
|   |   `-ParenExpr 0x560d06920008 <col:43, col:208> 'int'
|   |     `-ConditionalOperator 0x560d0691ffd8 <col:44, col:207> 'int'
|   |       |-BinaryOperator 0x560d0691fe00 <col:44, col:121> 'int' '||'
|   |       | |-BinaryOperator 0x560d0691fd20 <col:44, col:83> 'int' '||'
|   |       | | |-UnaryOperator 0x560d0691fc48 <col:44, col:45> 'int' prefix '!' cannot overflow
|   |       | | | `-ImplicitCastExpr 0x560d0691fc30 <col:45> '_Bool' <LValueToRValue>
|   |       | | |   `-DeclRefExpr 0x560d0691fc10 <col:45> '_Bool' lvalue Var 0x560d0691a220 'a$w_buff0_used' '_Bool'
|   |       | | `-BinaryOperator 0x560d0691fd00 <col:63, col:83> 'int' '&&'
|   |       | |   |-UnaryOperator 0x560d0691fc98 <col:63, col:64> 'int' prefix '!' cannot overflow
|   |       | |   | `-ImplicitCastExpr 0x560d0691fc80 <col:64> '_Bool' <LValueToRValue>
|   |       | |   |   `-DeclRefExpr 0x560d0691fc60 <col:64> '_Bool' lvalue Var 0x560d06919dd8 'a$r_buff0_thd4' '_Bool'
|   |       | |   `-UnaryOperator 0x560d0691fce8 <col:82, col:83> 'int' prefix '!' cannot overflow
|   |       | |     `-ImplicitCastExpr 0x560d0691fcd0 <col:83> '_Bool' <LValueToRValue>
|   |       | |       `-DeclRefExpr 0x560d0691fcb0 <col:83> '_Bool' lvalue Var 0x560d0691a318 'a$w_buff1_used' '_Bool'
|   |       | `-BinaryOperator 0x560d0691fde0 <col:101, col:121> 'int' '&&'
|   |       |   |-UnaryOperator 0x560d0691fd78 <col:101, col:102> 'int' prefix '!' cannot overflow
|   |       |   | `-ImplicitCastExpr 0x560d0691fd60 <col:102> '_Bool' <LValueToRValue>
|   |       |   |   `-DeclRefExpr 0x560d0691fd40 <col:102> '_Bool' lvalue Var 0x560d06919dd8 'a$r_buff0_thd4' '_Bool'
|   |       |   `-UnaryOperator 0x560d0691fdc8 <col:120, col:121> 'int' prefix '!' cannot overflow
|   |       |     `-ImplicitCastExpr 0x560d0691fdb0 <col:121> '_Bool' <LValueToRValue>
|   |       |       `-DeclRefExpr 0x560d0691fd90 <col:121> '_Bool' lvalue Var 0x560d0691a030 'a$r_buff1_thd4' '_Bool'
|   |       |-ImplicitCastExpr 0x560d0691ffc0 <col:138> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x560d0691fe20 <col:138> 'int' lvalue Var 0x560d0691a2a0 'a$w_buff1' 'int'
|   |       `-ParenExpr 0x560d0691ffa0 <col:150, col:207> 'int'
|   |         `-ConditionalOperator 0x560d0691ff70 <col:151, col:198> 'int'
|   |           |-BinaryOperator 0x560d0691fee0 <col:151, col:169> 'int' '&&'
|   |           | |-ImplicitCastExpr 0x560d0691fe98 <col:151> 'int' <IntegralCast>
|   |           | | `-ImplicitCastExpr 0x560d0691fe80 <col:151> '_Bool' <LValueToRValue>
|   |           | |   `-DeclRefExpr 0x560d0691fe40 <col:151> '_Bool' lvalue Var 0x560d0691a220 'a$w_buff0_used' '_Bool'
|   |           | `-ImplicitCastExpr 0x560d0691fec8 <col:169> 'int' <IntegralCast>
|   |           |   `-ImplicitCastExpr 0x560d0691feb0 <col:169> '_Bool' <LValueToRValue>
|   |           |     `-DeclRefExpr 0x560d0691fe60 <col:169> '_Bool' lvalue Var 0x560d06919dd8 'a$r_buff0_thd4' '_Bool'
|   |           |-ImplicitCastExpr 0x560d0691ff40 <col:186> 'int' <LValueToRValue>
|   |           | `-DeclRefExpr 0x560d0691ff00 <col:186> 'int' lvalue Var 0x560d0691a2a0 'a$w_buff1' 'int'
|   |           `-ImplicitCastExpr 0x560d0691ff58 <col:198> 'int' <LValueToRValue>
|   |             `-DeclRefExpr 0x560d0691ff20 <col:198> 'int' lvalue Var 0x560d0691a2a0 'a$w_buff1' 'int'
|   |-BinaryOperator 0x560d06920648 <line:805:3, col:227> '_Bool' '='
|   | |-DeclRefExpr 0x560d069200c0 <col:3> '_Bool' lvalue Var 0x560d0691a220 'a$w_buff0_used' '_Bool'
|   | `-ImplicitCastExpr 0x560d06920630 <col:20, col:227> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x560d06920600 <col:20, col:227> 'int'
|   |     |-ImplicitCastExpr 0x560d069205b8 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x560d069205a0 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x560d069200e0 <col:20> '_Bool' lvalue Var 0x560d0691a858 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x560d069205e8 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x560d069205d0 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x560d06920100 <col:36> '_Bool' lvalue Var 0x560d0691a220 'a$w_buff0_used' '_Bool'
|   |     `-ParenExpr 0x560d06920580 <col:53, col:227> 'int'
|   |       `-ConditionalOperator 0x560d06920550 <col:54, col:226> 'int'
|   |         |-BinaryOperator 0x560d06920310 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x560d06920230 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x560d06920158 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x560d06920140 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x560d06920120 <col:55> '_Bool' lvalue Var 0x560d0691a220 'a$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x560d06920210 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x560d069201a8 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x560d06920190 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x560d06920170 <col:74> '_Bool' lvalue Var 0x560d06919dd8 'a$r_buff0_thd4' '_Bool'
|   |         | |   `-UnaryOperator 0x560d069201f8 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x560d069201e0 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x560d069201c0 <col:93> '_Bool' lvalue Var 0x560d0691a318 'a$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x560d069202f0 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x560d06920288 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x560d06920270 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x560d06920250 <col:112> '_Bool' lvalue Var 0x560d06919dd8 'a$r_buff0_thd4' '_Bool'
|   |         |   `-UnaryOperator 0x560d069202d8 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x560d069202c0 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x560d069202a0 <col:131> '_Bool' lvalue Var 0x560d0691a030 'a$r_buff1_thd4' '_Bool'
|   |         |-ImplicitCastExpr 0x560d06920538 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x560d06920520 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x560d06920330 <col:148> '_Bool' lvalue Var 0x560d0691a220 'a$w_buff0_used' '_Bool'
|   |         `-ParenExpr 0x560d06920500 <col:165, col:226> 'int'
|   |           `-ConditionalOperator 0x560d069204d0 <col:166, col:212> 'int'
|   |             |-BinaryOperator 0x560d069203f0 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x560d069203a8 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x560d06920390 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x560d06920350 <col:166> '_Bool' lvalue Var 0x560d0691a220 'a$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x560d069203d8 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x560d069203c0 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x560d06920370 <col:184> '_Bool' lvalue Var 0x560d06919dd8 'a$r_buff0_thd4' '_Bool'
|   |             |-ImplicitCastExpr 0x560d06920488 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x560d06920440 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x560d06920410 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x560d069204b8 <col:212> 'int' <IntegralCast>
|   |               `-ImplicitCastExpr 0x560d069204a0 <col:212> '_Bool' <LValueToRValue>
|   |                 `-DeclRefExpr 0x560d06920468 <col:212> '_Bool' lvalue Var 0x560d0691a220 'a$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x560d06920c38 <line:806:3, col:221> '_Bool' '='
|   | |-DeclRefExpr 0x560d06920668 <col:3> '_Bool' lvalue Var 0x560d0691a318 'a$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x560d06920c20 <col:20, col:221> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x560d06920bf0 <col:20, col:221> 'int'
|   |     |-ImplicitCastExpr 0x560d06920ba8 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x560d06920b90 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x560d06920688 <col:20> '_Bool' lvalue Var 0x560d0691a858 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x560d06920bd8 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x560d06920bc0 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x560d069206a8 <col:36> '_Bool' lvalue Var 0x560d0691a318 'a$w_buff1_used' '_Bool'
|   |     `-ParenExpr 0x560d06920b70 <col:53, col:221> 'int'
|   |       `-ConditionalOperator 0x560d06920b18 <col:54, col:220> 'int'
|   |         |-BinaryOperator 0x560d069208b8 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x560d069207d8 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x560d06920700 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x560d069206e8 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x560d069206c8 <col:55> '_Bool' lvalue Var 0x560d0691a220 'a$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x560d069207b8 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x560d06920750 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x560d06920738 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x560d06920718 <col:74> '_Bool' lvalue Var 0x560d06919dd8 'a$r_buff0_thd4' '_Bool'
|   |         | |   `-UnaryOperator 0x560d069207a0 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x560d06920788 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x560d06920768 <col:93> '_Bool' lvalue Var 0x560d0691a318 'a$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x560d06920898 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x560d06920830 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x560d06920818 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x560d069207f8 <col:112> '_Bool' lvalue Var 0x560d06919dd8 'a$r_buff0_thd4' '_Bool'
|   |         |   `-UnaryOperator 0x560d06920880 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x560d06920868 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x560d06920848 <col:131> '_Bool' lvalue Var 0x560d0691a030 'a$r_buff1_thd4' '_Bool'
|   |         |-ImplicitCastExpr 0x560d06920b00 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x560d06920ae8 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x560d069208d8 <col:148> '_Bool' lvalue Var 0x560d0691a318 'a$w_buff1_used' '_Bool'
|   |         `-ParenExpr 0x560d06920ac8 <col:165, col:220> 'int'
|   |           `-ConditionalOperator 0x560d06920a98 <col:166, col:219> 'int'
|   |             |-BinaryOperator 0x560d06920998 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x560d06920950 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x560d06920938 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x560d069208f8 <col:166> '_Bool' lvalue Var 0x560d0691a220 'a$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x560d06920980 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x560d06920968 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x560d06920918 <col:184> '_Bool' lvalue Var 0x560d06919dd8 'a$r_buff0_thd4' '_Bool'
|   |             |-ImplicitCastExpr 0x560d06920a68 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x560d069209e8 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x560d069209b8 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x560d06920a80 <col:212, col:219> 'int' <IntegralCast>
|   |               `-CStyleCastExpr 0x560d06920a40 <col:212, col:219> '_Bool' <IntegralToBoolean>
|   |                 `-IntegerLiteral 0x560d06920a10 <col:219> 'int' 0
|   |-BinaryOperator 0x560d069211e0 <line:807:3, col:227> '_Bool' '='
|   | |-DeclRefExpr 0x560d06920c58 <col:3> '_Bool' lvalue Var 0x560d06919dd8 'a$r_buff0_thd4' '_Bool'
|   | `-ImplicitCastExpr 0x560d069211c8 <col:20, col:227> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x560d06921198 <col:20, col:227> 'int'
|   |     |-ImplicitCastExpr 0x560d06921150 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x560d06921138 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x560d06920c78 <col:20> '_Bool' lvalue Var 0x560d0691a858 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x560d06921180 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x560d06921168 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x560d06920c98 <col:36> '_Bool' lvalue Var 0x560d06919dd8 'a$r_buff0_thd4' '_Bool'
|   |     `-ParenExpr 0x560d06921118 <col:53, col:227> 'int'
|   |       `-ConditionalOperator 0x560d069210e8 <col:54, col:226> 'int'
|   |         |-BinaryOperator 0x560d06920ea8 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x560d06920dc8 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x560d06920cf0 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x560d06920cd8 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x560d06920cb8 <col:55> '_Bool' lvalue Var 0x560d0691a220 'a$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x560d06920da8 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x560d06920d40 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x560d06920d28 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x560d06920d08 <col:74> '_Bool' lvalue Var 0x560d06919dd8 'a$r_buff0_thd4' '_Bool'
|   |         | |   `-UnaryOperator 0x560d06920d90 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x560d06920d78 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x560d06920d58 <col:93> '_Bool' lvalue Var 0x560d0691a318 'a$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x560d06920e88 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x560d06920e20 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x560d06920e08 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x560d06920de8 <col:112> '_Bool' lvalue Var 0x560d06919dd8 'a$r_buff0_thd4' '_Bool'
|   |         |   `-UnaryOperator 0x560d06920e70 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x560d06920e58 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x560d06920e38 <col:131> '_Bool' lvalue Var 0x560d0691a030 'a$r_buff1_thd4' '_Bool'
|   |         |-ImplicitCastExpr 0x560d069210d0 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x560d069210b8 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x560d06920ec8 <col:148> '_Bool' lvalue Var 0x560d06919dd8 'a$r_buff0_thd4' '_Bool'
|   |         `-ParenExpr 0x560d06921098 <col:165, col:226> 'int'
|   |           `-ConditionalOperator 0x560d06921068 <col:166, col:212> 'int'
|   |             |-BinaryOperator 0x560d06920f88 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x560d06920f40 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x560d06920f28 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x560d06920ee8 <col:166> '_Bool' lvalue Var 0x560d0691a220 'a$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x560d06920f70 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x560d06920f58 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x560d06920f08 <col:184> '_Bool' lvalue Var 0x560d06919dd8 'a$r_buff0_thd4' '_Bool'
|   |             |-ImplicitCastExpr 0x560d06921020 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x560d06920fd8 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x560d06920fa8 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x560d06921050 <col:212> 'int' <IntegralCast>
|   |               `-ImplicitCastExpr 0x560d06921038 <col:212> '_Bool' <LValueToRValue>
|   |                 `-DeclRefExpr 0x560d06921000 <col:212> '_Bool' lvalue Var 0x560d06919dd8 'a$r_buff0_thd4' '_Bool'
|   |-BinaryOperator 0x560d069217a8 <line:808:3, col:221> '_Bool' '='
|   | |-DeclRefExpr 0x560d06921200 <col:3> '_Bool' lvalue Var 0x560d0691a030 'a$r_buff1_thd4' '_Bool'
|   | `-ImplicitCastExpr 0x560d06921790 <col:20, col:221> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x560d06921760 <col:20, col:221> 'int'
|   |     |-ImplicitCastExpr 0x560d06921718 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x560d06921700 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x560d06921220 <col:20> '_Bool' lvalue Var 0x560d0691a858 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x560d06921748 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x560d06921730 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x560d06921240 <col:36> '_Bool' lvalue Var 0x560d0691a030 'a$r_buff1_thd4' '_Bool'
|   |     `-ParenExpr 0x560d069216e0 <col:53, col:221> 'int'
|   |       `-ConditionalOperator 0x560d069216b0 <col:54, col:220> 'int'
|   |         |-BinaryOperator 0x560d06921450 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x560d06921370 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x560d06921298 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x560d06921280 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x560d06921260 <col:55> '_Bool' lvalue Var 0x560d0691a220 'a$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x560d06921350 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x560d069212e8 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x560d069212d0 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x560d069212b0 <col:74> '_Bool' lvalue Var 0x560d06919dd8 'a$r_buff0_thd4' '_Bool'
|   |         | |   `-UnaryOperator 0x560d06921338 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x560d06921320 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x560d06921300 <col:93> '_Bool' lvalue Var 0x560d0691a318 'a$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x560d06921430 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x560d069213c8 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x560d069213b0 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x560d06921390 <col:112> '_Bool' lvalue Var 0x560d06919dd8 'a$r_buff0_thd4' '_Bool'
|   |         |   `-UnaryOperator 0x560d06921418 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x560d06921400 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x560d069213e0 <col:131> '_Bool' lvalue Var 0x560d0691a030 'a$r_buff1_thd4' '_Bool'
|   |         |-ImplicitCastExpr 0x560d06921698 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x560d06921680 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x560d06921470 <col:148> '_Bool' lvalue Var 0x560d0691a030 'a$r_buff1_thd4' '_Bool'
|   |         `-ParenExpr 0x560d06921660 <col:165, col:220> 'int'
|   |           `-ConditionalOperator 0x560d06921630 <col:166, col:219> 'int'
|   |             |-BinaryOperator 0x560d06921530 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x560d069214e8 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x560d069214d0 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x560d06921490 <col:166> '_Bool' lvalue Var 0x560d0691a220 'a$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x560d06921518 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x560d06921500 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x560d069214b0 <col:184> '_Bool' lvalue Var 0x560d06919dd8 'a$r_buff0_thd4' '_Bool'
|   |             |-ImplicitCastExpr 0x560d06921600 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x560d06921580 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x560d06921550 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x560d06921618 <col:212, col:219> 'int' <IntegralCast>
|   |               `-CStyleCastExpr 0x560d069215d8 <col:212, col:219> '_Bool' <IntegralToBoolean>
|   |                 `-IntegerLiteral 0x560d069215a8 <col:219> 'int' 0
|   |-BinaryOperator 0x560d06921820 <line:809:3, col:25> 'int' '='
|   | |-DeclRefExpr 0x560d069217c8 <col:3> 'int' lvalue Var 0x560d06919938 '__unbuffered_p3_EBX' 'int'
|   | `-ImplicitCastExpr 0x560d06921808 <col:25> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x560d069217e8 <col:25> 'int' lvalue Var 0x560d06919a58 'a' 'int'
|   |-BinaryOperator 0x560d06921950 <line:810:3, col:37> 'int' '='
|   | |-DeclRefExpr 0x560d06921840 <col:3> 'int' lvalue Var 0x560d06919a58 'a' 'int'
|   | `-ConditionalOperator 0x560d06921920 <col:7, col:37> 'int'
|   |   |-ImplicitCastExpr 0x560d069218d8 <col:7> 'int' <IntegralCast>
|   |   | `-ImplicitCastExpr 0x560d069218c0 <col:7> '_Bool' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x560d06921860 <col:7> '_Bool' lvalue Var 0x560d06919b00 'a$flush_delayed' '_Bool'
|   |   |-ImplicitCastExpr 0x560d069218f0 <col:25> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x560d06921880 <col:25> 'int' lvalue Var 0x560d06919b80 'a$mem_tmp' 'int'
|   |   `-ImplicitCastExpr 0x560d06921908 <col:37> 'int' <LValueToRValue>
|   |     `-DeclRefExpr 0x560d069218a0 <col:37> 'int' lvalue Var 0x560d06919a58 'a' 'int'
|   |-BinaryOperator 0x560d069219e8 <line:811:3, col:28> '_Bool' '='
|   | |-DeclRefExpr 0x560d06921970 <col:3> '_Bool' lvalue Var 0x560d06919b00 'a$flush_delayed' '_Bool'
|   | `-CStyleCastExpr 0x560d069219c0 <col:21, col:28> '_Bool' <IntegralToBoolean>
|   |   `-IntegerLiteral 0x560d06921990 <col:28> 'int' 0
|   |-CallExpr 0x560d06921a40 <line:812:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x560d06921a28 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x560d06921a08 <col:3> 'void ()' Function 0x560d068bff00 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x560d06921a98 <line:813:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x560d06921a80 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x560d06921a60 <col:3> 'void ()' Function 0x560d068bfe40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x560d06921da0 <line:814:3, col:103> 'int' '='
|   | |-DeclRefExpr 0x560d06921ab8 <col:3> 'int' lvalue Var 0x560d06919a58 'a' 'int'
|   | `-ConditionalOperator 0x560d06921d70 <col:7, col:103> 'int'
|   |   |-BinaryOperator 0x560d06921b98 <col:7, col:25> 'int' '&&'
|   |   | |-ImplicitCastExpr 0x560d06921b30 <col:7> 'int' <IntegralCast>
|   |   | | `-ImplicitCastExpr 0x560d06921b18 <col:7> '_Bool' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x560d06921ad8 <col:7> '_Bool' lvalue Var 0x560d0691a220 'a$w_buff0_used' '_Bool'
|   |   | `-ImplicitCastExpr 0x560d06921b80 <col:25> 'int' <IntegralCast>
|   |   |   `-ImplicitCastExpr 0x560d06921b48 <col:25> '_Bool' <LValueToRValue>
|   |   |     `-DeclRefExpr 0x560d06921af8 <col:25> '_Bool' lvalue Var 0x560d06919dd8 'a$r_buff0_thd4' '_Bool'
|   |   |-ImplicitCastExpr 0x560d06921d58 <col:42> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x560d06921bb8 <col:42> 'int' lvalue Var 0x560d0691a1a8 'a$w_buff0' 'int'
|   |   `-ParenExpr 0x560d06921d38 <col:54, col:103> 'int'
|   |     `-ConditionalOperator 0x560d06921d08 <col:55, col:102> 'int'
|   |       |-BinaryOperator 0x560d06921c78 <col:55, col:73> 'int' '&&'
|   |       | |-ImplicitCastExpr 0x560d06921c30 <col:55> 'int' <IntegralCast>
|   |       | | `-ImplicitCastExpr 0x560d06921c18 <col:55> '_Bool' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x560d06921bd8 <col:55> '_Bool' lvalue Var 0x560d0691a318 'a$w_buff1_used' '_Bool'
|   |       | `-ImplicitCastExpr 0x560d06921c60 <col:73> 'int' <IntegralCast>
|   |       |   `-ImplicitCastExpr 0x560d06921c48 <col:73> '_Bool' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x560d06921bf8 <col:73> '_Bool' lvalue Var 0x560d0691a030 'a$r_buff1_thd4' '_Bool'
|   |       |-ImplicitCastExpr 0x560d06921cd8 <col:90> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x560d06921c98 <col:90> 'int' lvalue Var 0x560d0691a2a0 'a$w_buff1' 'int'
|   |       `-ImplicitCastExpr 0x560d06921cf0 <col:102> 'int' <LValueToRValue>
|   |         `-DeclRefExpr 0x560d06921cb8 <col:102> 'int' lvalue Var 0x560d06919a58 'a' 'int'
|   |-BinaryOperator 0x560d06921fa8 <line:815:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x560d06921dc0 <col:3> '_Bool' lvalue Var 0x560d0691a220 'a$w_buff0_used' '_Bool'
|   | `-ImplicitCastExpr 0x560d06921f90 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x560d06921f60 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x560d06921e80 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x560d06921e38 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x560d06921e20 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x560d06921de0 <col:20> '_Bool' lvalue Var 0x560d0691a220 'a$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x560d06921e68 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x560d06921e50 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x560d06921e00 <col:38> '_Bool' lvalue Var 0x560d06919dd8 'a$r_buff0_thd4' '_Bool'
|   |     |-ImplicitCastExpr 0x560d06921f18 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x560d06921ed0 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x560d06921ea0 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x560d06921f48 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x560d06921f30 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x560d06921ef8 <col:66> '_Bool' lvalue Var 0x560d0691a220 'a$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x560d06922290 <line:816:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x560d06921fc8 <col:3> '_Bool' lvalue Var 0x560d0691a318 'a$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x560d06922278 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x560d06922248 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x560d06922168 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x560d06922088 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x560d06922040 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x560d06922028 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x560d06921fe8 <col:20> '_Bool' lvalue Var 0x560d0691a220 'a$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x560d06922070 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x560d06922058 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x560d06922008 <col:38> '_Bool' lvalue Var 0x560d06919dd8 'a$r_buff0_thd4' '_Bool'
|   |     | `-BinaryOperator 0x560d06922148 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x560d06922100 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x560d069220e8 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x560d069220a8 <col:56> '_Bool' lvalue Var 0x560d0691a318 'a$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x560d06922130 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x560d06922118 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x560d069220c8 <col:74> '_Bool' lvalue Var 0x560d0691a030 'a$r_buff1_thd4' '_Bool'
|   |     |-ImplicitCastExpr 0x560d06922200 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x560d069221b8 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x560d06922188 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x560d06922230 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x560d06922218 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x560d069221e0 <col:102> '_Bool' lvalue Var 0x560d0691a318 'a$w_buff1_used' '_Bool'
|   |-BinaryOperator 0x560d06922498 <line:817:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x560d069222b0 <col:3> '_Bool' lvalue Var 0x560d06919dd8 'a$r_buff0_thd4' '_Bool'
|   | `-ImplicitCastExpr 0x560d06922480 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x560d06922450 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x560d06922370 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x560d06922328 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x560d06922310 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x560d069222d0 <col:20> '_Bool' lvalue Var 0x560d0691a220 'a$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x560d06922358 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x560d06922340 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x560d069222f0 <col:38> '_Bool' lvalue Var 0x560d06919dd8 'a$r_buff0_thd4' '_Bool'
|   |     |-ImplicitCastExpr 0x560d06922408 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x560d069223c0 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x560d06922390 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x560d06922438 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x560d06922420 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x560d069223e8 <col:66> '_Bool' lvalue Var 0x560d06919dd8 'a$r_buff0_thd4' '_Bool'
|   |-BinaryOperator 0x560d06922780 <line:818:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x560d069224b8 <col:3> '_Bool' lvalue Var 0x560d0691a030 'a$r_buff1_thd4' '_Bool'
|   | `-ImplicitCastExpr 0x560d06922768 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x560d06922738 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x560d06922658 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x560d06922578 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x560d06922530 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x560d06922518 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x560d069224d8 <col:20> '_Bool' lvalue Var 0x560d0691a220 'a$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x560d06922560 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x560d06922548 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x560d069224f8 <col:38> '_Bool' lvalue Var 0x560d06919dd8 'a$r_buff0_thd4' '_Bool'
|   |     | `-BinaryOperator 0x560d06922638 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x560d069225f0 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x560d069225d8 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x560d06922598 <col:56> '_Bool' lvalue Var 0x560d0691a318 'a$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x560d06922620 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x560d06922608 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x560d069225b8 <col:74> '_Bool' lvalue Var 0x560d0691a030 'a$r_buff1_thd4' '_Bool'
|   |     |-ImplicitCastExpr 0x560d069226f0 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x560d069226a8 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x560d06922678 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x560d06922720 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x560d06922708 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x560d069226d0 <col:102> '_Bool' lvalue Var 0x560d0691a030 'a$r_buff1_thd4' '_Bool'
|   |-CallExpr 0x560d069227d8 <line:819:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x560d069227c0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x560d069227a0 <col:3> 'void ()' Function 0x560d068bff00 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x560d06922830 <line:820:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x560d06922818 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x560d069227f8 <col:3> 'void ()' Function 0x560d068bfe40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x560d069228e8 <line:821:3, col:41> 'int' '='
|   | |-DeclRefExpr 0x560d06922850 <col:3> 'int' lvalue Var 0x560d06919278 '__unbuffered_cnt' 'int'
|   | `-BinaryOperator 0x560d069228c8 <col:22, col:41> 'int' '+'
|   |   |-ImplicitCastExpr 0x560d069228b0 <col:22> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x560d06922870 <col:22> 'int' lvalue Var 0x560d06919278 '__unbuffered_cnt' 'int'
|   |   `-IntegerLiteral 0x560d06922890 <col:41> 'int' 1
|   |-CallExpr 0x560d06922940 <line:822:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x560d06922928 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x560d06922908 <col:3> 'void ()' Function 0x560d068bff00 '__VERIFIER_atomic_end' 'void ()'
|   `-ReturnStmt 0x560d069229b8 <line:823:3, col:36>
|     `-CallExpr 0x560d06922998 <col:10, col:36> 'void *'
|       `-ImplicitCastExpr 0x560d06922980 <col:10> 'void *(*)(void)' <FunctionToPointerDecay>
|         `-DeclRefExpr 0x560d06922960 <col:10> 'void *(void)' Function 0x560d068bf958 '__VERIFIER_nondet_pointer' 'void *(void)'
|-FunctionDecl 0x560d06922b90 prev 0x560d06918fc0 <line:825:1, line:827:1> line:825:6 fence 'void ()'
| `-CompoundStmt 0x560d06922c30 <line:826:1, line:827:1>
|-FunctionDecl 0x560d06922c60 prev 0x560d06919080 <line:828:1, line:830:1> line:828:6 isync 'void ()'
| `-CompoundStmt 0x560d06922d00 <line:829:1, line:830:1>
|-FunctionDecl 0x560d06922d30 prev 0x560d06919140 <line:831:1, line:833:1> line:831:6 lwfence 'void ()'
| `-CompoundStmt 0x560d06922dd0 <line:832:1, line:833:1>
`-FunctionDecl 0x560d06922e38 <line:834:1, line:860:1> line:834:5 main 'int ()'
  `-CompoundStmt 0x560d06924ee0 <line:835:1, line:860:1>
    |-DeclStmt 0x560d06922f50 <line:836:3, col:16>
    | `-VarDecl 0x560d06922ee8 <col:3, col:13> col:13 used t99 'pthread_t':'unsigned long'
    |-CallExpr 0x560d06923158 <line:837:3, col:52> 'int'
    | |-ImplicitCastExpr 0x560d06923140 <col:3> 'int (*)(pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x560d06922f68 <col:3> 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' Function 0x560d06900488 'pthread_create' 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)'
    | |-UnaryOperator 0x560d06922fa8 <col:18, col:19> 'pthread_t *' prefix '&' cannot overflow
    | | `-DeclRefExpr 0x560d06922f88 <col:19> 'pthread_t':'unsigned long' lvalue Var 0x560d06922ee8 't99' 'pthread_t':'unsigned long'
    | |-ImplicitCastExpr 0x560d06923198 <col:24, col:34> 'const pthread_attr_t *' <NullToPointer>
    | | `-ParenExpr 0x560d06923020 <col:24, col:34> 'void *'
    | |   `-CStyleCastExpr 0x560d06922ff8 <col:25, col:33> 'void *' <NullToPointer>
    | |     `-IntegerLiteral 0x560d06922fc0 <col:33> 'int' 0
    | |-ImplicitCastExpr 0x560d069231b0 <col:37> 'void *(*)(void *)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x560d06923040 <col:37> 'void *(void *)' Function 0x560d0691a970 'P0' 'void *(void *)'
    | `-ParenExpr 0x560d069230c0 <col:41, col:51> 'void *'
    |   `-CStyleCastExpr 0x560d06923098 <col:42, col:50> 'void *' <NullToPointer>
    |     `-IntegerLiteral 0x560d06923060 <col:50> 'int' 0
    |-DeclStmt 0x560d06923240 <line:838:3, col:17>
    | `-VarDecl 0x560d069231d8 <col:3, col:13> col:13 used t100 'pthread_t':'unsigned long'
    |-CallExpr 0x560d069233e8 <line:839:3, col:53> 'int'
    | |-ImplicitCastExpr 0x560d069233d0 <col:3> 'int (*)(pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x560d06923258 <col:3> 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' Function 0x560d06900488 'pthread_create' 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)'
    | |-UnaryOperator 0x560d06923298 <col:18, col:19> 'pthread_t *' prefix '&' cannot overflow
    | | `-DeclRefExpr 0x560d06923278 <col:19> 'pthread_t':'unsigned long' lvalue Var 0x560d069231d8 't100' 'pthread_t':'unsigned long'
    | |-ImplicitCastExpr 0x560d06923428 <col:25, col:35> 'const pthread_attr_t *' <NullToPointer>
    | | `-ParenExpr 0x560d06923310 <col:25, col:35> 'void *'
    | |   `-CStyleCastExpr 0x560d069232e8 <col:26, col:34> 'void *' <NullToPointer>
    | |     `-IntegerLiteral 0x560d069232b0 <col:34> 'int' 0
    | |-ImplicitCastExpr 0x560d06923440 <col:38> 'void *(*)(void *)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x560d06923330 <col:38> 'void *(void *)' Function 0x560d0691c3c0 'P1' 'void *(void *)'
    | `-ParenExpr 0x560d069233b0 <col:42, col:52> 'void *'
    |   `-CStyleCastExpr 0x560d06923388 <col:43, col:51> 'void *' <NullToPointer>
    |     `-IntegerLiteral 0x560d06923350 <col:51> 'int' 0
    |-DeclStmt 0x560d069234d0 <line:840:3, col:17>
    | `-VarDecl 0x560d06923468 <col:3, col:13> col:13 used t101 'pthread_t':'unsigned long'
    |-CallExpr 0x560d06923678 <line:841:3, col:53> 'int'
    | |-ImplicitCastExpr 0x560d06923660 <col:3> 'int (*)(pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x560d069234e8 <col:3> 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' Function 0x560d06900488 'pthread_create' 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)'
    | |-UnaryOperator 0x560d06923528 <col:18, col:19> 'pthread_t *' prefix '&' cannot overflow
    | | `-DeclRefExpr 0x560d06923508 <col:19> 'pthread_t':'unsigned long' lvalue Var 0x560d06923468 't101' 'pthread_t':'unsigned long'
    | |-ImplicitCastExpr 0x560d069236b8 <col:25, col:35> 'const pthread_attr_t *' <NullToPointer>
    | | `-ParenExpr 0x560d069235a0 <col:25, col:35> 'void *'
    | |   `-CStyleCastExpr 0x560d06923578 <col:26, col:34> 'void *' <NullToPointer>
    | |     `-IntegerLiteral 0x560d06923540 <col:34> 'int' 0
    | |-ImplicitCastExpr 0x560d069236d0 <col:38> 'void *(*)(void *)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x560d069235c0 <col:38> 'void *(void *)' Function 0x560d0691d748 'P2' 'void *(void *)'
    | `-ParenExpr 0x560d06923640 <col:42, col:52> 'void *'
    |   `-CStyleCastExpr 0x560d06923618 <col:43, col:51> 'void *' <NullToPointer>
    |     `-IntegerLiteral 0x560d069235e0 <col:51> 'int' 0
    |-DeclStmt 0x560d06923760 <line:842:3, col:17>
    | `-VarDecl 0x560d069236f8 <col:3, col:13> col:13 used t102 'pthread_t':'unsigned long'
    |-CallExpr 0x560d06923908 <line:843:3, col:53> 'int'
    | |-ImplicitCastExpr 0x560d069238f0 <col:3> 'int (*)(pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x560d06923778 <col:3> 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' Function 0x560d06900488 'pthread_create' 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)'
    | |-UnaryOperator 0x560d069237b8 <col:18, col:19> 'pthread_t *' prefix '&' cannot overflow
    | | `-DeclRefExpr 0x560d06923798 <col:19> 'pthread_t':'unsigned long' lvalue Var 0x560d069236f8 't102' 'pthread_t':'unsigned long'
    | |-ImplicitCastExpr 0x560d06923948 <col:25, col:35> 'const pthread_attr_t *' <NullToPointer>
    | | `-ParenExpr 0x560d06923830 <col:25, col:35> 'void *'
    | |   `-CStyleCastExpr 0x560d06923808 <col:26, col:34> 'void *' <NullToPointer>
    | |     `-IntegerLiteral 0x560d069237d0 <col:34> 'int' 0
    | |-ImplicitCastExpr 0x560d06923960 <col:38> 'void *(*)(void *)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x560d06923850 <col:38> 'void *(void *)' Function 0x560d0691ecb0 'P3' 'void *(void *)'
    | `-ParenExpr 0x560d069238d0 <col:42, col:52> 'void *'
    |   `-CStyleCastExpr 0x560d069238a8 <col:43, col:51> 'void *' <NullToPointer>
    |     `-IntegerLiteral 0x560d06923870 <col:51> 'int' 0
    |-CallExpr 0x560d069239b0 <line:844:3, col:27> 'void'
    | `-ImplicitCastExpr 0x560d06923998 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x560d06923978 <col:3> 'void ()' Function 0x560d068bfe40 '__VERIFIER_atomic_begin' 'void ()'
    |-BinaryOperator 0x560d06923a80 <line:845:3, col:41> '_Bool' '='
    | |-DeclRefExpr 0x560d069239d0 <col:3> '_Bool' lvalue Var 0x560d0691a390 'main$tmp_guard0' '_Bool'
    | `-ImplicitCastExpr 0x560d06923a68 <col:21, col:41> '_Bool' <IntegralToBoolean>
    |   `-BinaryOperator 0x560d06923a48 <col:21, col:41> 'int' '=='
    |     |-ImplicitCastExpr 0x560d06923a30 <col:21> 'int' <LValueToRValue>
    |     | `-DeclRefExpr 0x560d069239f0 <col:21> 'int' lvalue Var 0x560d06919278 '__unbuffered_cnt' 'int'
    |     `-IntegerLiteral 0x560d06923a10 <col:41> 'int' 4
    |-CallExpr 0x560d06923ad8 <line:846:3, col:25> 'void'
    | `-ImplicitCastExpr 0x560d06923ac0 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x560d06923aa0 <col:3> 'void ()' Function 0x560d068bff00 '__VERIFIER_atomic_end' 'void ()'
    |-CallExpr 0x560d06923b50 <line:847:3, col:36> 'void'
    | |-ImplicitCastExpr 0x560d06923b38 <col:3> 'void (*)(int)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x560d06923af8 <col:3> 'void (int)' Function 0x560d068bf790 '__VERIFIER_assume' 'void (int)'
    | `-ImplicitCastExpr 0x560d06923ba0 <col:21> 'int' <IntegralCast>
    |   `-ImplicitCastExpr 0x560d06923b78 <col:21> '_Bool' <LValueToRValue>
    |     `-DeclRefExpr 0x560d06923b18 <col:21> '_Bool' lvalue Var 0x560d0691a390 'main$tmp_guard0' '_Bool'
    |-CallExpr 0x560d06923bf0 <line:848:3, col:27> 'void'
    | `-ImplicitCastExpr 0x560d06923bd8 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x560d06923bb8 <col:3> 'void ()' Function 0x560d068bfe40 '__VERIFIER_atomic_begin' 'void ()'
    |-BinaryOperator 0x560d06923ed8 <line:849:3, col:103> 'int' '='
    | |-DeclRefExpr 0x560d06923c10 <col:3> 'int' lvalue Var 0x560d06919a58 'a' 'int'
    | `-ConditionalOperator 0x560d06923ea8 <col:7, col:103> 'int'
    |   |-BinaryOperator 0x560d06923cd0 <col:7, col:25> 'int' '&&'
    |   | |-ImplicitCastExpr 0x560d06923c88 <col:7> 'int' <IntegralCast>
    |   | | `-ImplicitCastExpr 0x560d06923c70 <col:7> '_Bool' <LValueToRValue>
    |   | |   `-DeclRefExpr 0x560d06923c30 <col:7> '_Bool' lvalue Var 0x560d0691a220 'a$w_buff0_used' '_Bool'
    |   | `-ImplicitCastExpr 0x560d06923cb8 <col:25> 'int' <IntegralCast>
    |   |   `-ImplicitCastExpr 0x560d06923ca0 <col:25> '_Bool' <LValueToRValue>
    |   |     `-DeclRefExpr 0x560d06923c50 <col:25> '_Bool' lvalue Var 0x560d06919bf8 'a$r_buff0_thd0' '_Bool'
    |   |-ImplicitCastExpr 0x560d06923e90 <col:42> 'int' <LValueToRValue>
    |   | `-DeclRefExpr 0x560d06923cf0 <col:42> 'int' lvalue Var 0x560d0691a1a8 'a$w_buff0' 'int'
    |   `-ParenExpr 0x560d06923e70 <col:54, col:103> 'int'
    |     `-ConditionalOperator 0x560d06923e40 <col:55, col:102> 'int'
    |       |-BinaryOperator 0x560d06923db0 <col:55, col:73> 'int' '&&'
    |       | |-ImplicitCastExpr 0x560d06923d68 <col:55> 'int' <IntegralCast>
    |       | | `-ImplicitCastExpr 0x560d06923d50 <col:55> '_Bool' <LValueToRValue>
    |       | |   `-DeclRefExpr 0x560d06923d10 <col:55> '_Bool' lvalue Var 0x560d0691a318 'a$w_buff1_used' '_Bool'
    |       | `-ImplicitCastExpr 0x560d06923d98 <col:73> 'int' <IntegralCast>
    |       |   `-ImplicitCastExpr 0x560d06923d80 <col:73> '_Bool' <LValueToRValue>
    |       |     `-DeclRefExpr 0x560d06923d30 <col:73> '_Bool' lvalue Var 0x560d06919e50 'a$r_buff1_thd0' '_Bool'
    |       |-ImplicitCastExpr 0x560d06923e10 <col:90> 'int' <LValueToRValue>
    |       | `-DeclRefExpr 0x560d06923dd0 <col:90> 'int' lvalue Var 0x560d0691a2a0 'a$w_buff1' 'int'
    |       `-ImplicitCastExpr 0x560d06923e28 <col:102> 'int' <LValueToRValue>
    |         `-DeclRefExpr 0x560d06923df0 <col:102> 'int' lvalue Var 0x560d06919a58 'a' 'int'
    |-BinaryOperator 0x560d069240e0 <line:850:3, col:66> '_Bool' '='
    | |-DeclRefExpr 0x560d06923ef8 <col:3> '_Bool' lvalue Var 0x560d0691a220 'a$w_buff0_used' '_Bool'
    | `-ImplicitCastExpr 0x560d069240c8 <col:20, col:66> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x560d06924098 <col:20, col:66> 'int'
    |     |-BinaryOperator 0x560d06923fb8 <col:20, col:38> 'int' '&&'
    |     | |-ImplicitCastExpr 0x560d06923f70 <col:20> 'int' <IntegralCast>
    |     | | `-ImplicitCastExpr 0x560d06923f58 <col:20> '_Bool' <LValueToRValue>
    |     | |   `-DeclRefExpr 0x560d06923f18 <col:20> '_Bool' lvalue Var 0x560d0691a220 'a$w_buff0_used' '_Bool'
    |     | `-ImplicitCastExpr 0x560d06923fa0 <col:38> 'int' <IntegralCast>
    |     |   `-ImplicitCastExpr 0x560d06923f88 <col:38> '_Bool' <LValueToRValue>
    |     |     `-DeclRefExpr 0x560d06923f38 <col:38> '_Bool' lvalue Var 0x560d06919bf8 'a$r_buff0_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x560d06924050 <col:55, col:62> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x560d06924008 <col:55, col:62> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x560d06923fd8 <col:62> 'int' 0
    |     `-ImplicitCastExpr 0x560d06924080 <col:66> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x560d06924068 <col:66> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x560d06924030 <col:66> '_Bool' lvalue Var 0x560d0691a220 'a$w_buff0_used' '_Bool'
    |-BinaryOperator 0x560d069243c8 <line:851:3, col:102> '_Bool' '='
    | |-DeclRefExpr 0x560d06924100 <col:3> '_Bool' lvalue Var 0x560d0691a318 'a$w_buff1_used' '_Bool'
    | `-ImplicitCastExpr 0x560d069243b0 <col:20, col:102> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x560d06924380 <col:20, col:102> 'int'
    |     |-BinaryOperator 0x560d069242a0 <col:20, col:74> 'int' '||'
    |     | |-BinaryOperator 0x560d069241c0 <col:20, col:38> 'int' '&&'
    |     | | |-ImplicitCastExpr 0x560d06924178 <col:20> 'int' <IntegralCast>
    |     | | | `-ImplicitCastExpr 0x560d06924160 <col:20> '_Bool' <LValueToRValue>
    |     | | |   `-DeclRefExpr 0x560d06924120 <col:20> '_Bool' lvalue Var 0x560d0691a220 'a$w_buff0_used' '_Bool'
    |     | | `-ImplicitCastExpr 0x560d069241a8 <col:38> 'int' <IntegralCast>
    |     | |   `-ImplicitCastExpr 0x560d06924190 <col:38> '_Bool' <LValueToRValue>
    |     | |     `-DeclRefExpr 0x560d06924140 <col:38> '_Bool' lvalue Var 0x560d06919bf8 'a$r_buff0_thd0' '_Bool'
    |     | `-BinaryOperator 0x560d06924280 <col:56, col:74> 'int' '&&'
    |     |   |-ImplicitCastExpr 0x560d06924238 <col:56> 'int' <IntegralCast>
    |     |   | `-ImplicitCastExpr 0x560d06924220 <col:56> '_Bool' <LValueToRValue>
    |     |   |   `-DeclRefExpr 0x560d069241e0 <col:56> '_Bool' lvalue Var 0x560d0691a318 'a$w_buff1_used' '_Bool'
    |     |   `-ImplicitCastExpr 0x560d06924268 <col:74> 'int' <IntegralCast>
    |     |     `-ImplicitCastExpr 0x560d06924250 <col:74> '_Bool' <LValueToRValue>
    |     |       `-DeclRefExpr 0x560d06924200 <col:74> '_Bool' lvalue Var 0x560d06919e50 'a$r_buff1_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x560d06924338 <col:91, col:98> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x560d069242f0 <col:91, col:98> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x560d069242c0 <col:98> 'int' 0
    |     `-ImplicitCastExpr 0x560d06924368 <col:102> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x560d06924350 <col:102> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x560d06924318 <col:102> '_Bool' lvalue Var 0x560d0691a318 'a$w_buff1_used' '_Bool'
    |-BinaryOperator 0x560d069245d0 <line:852:3, col:66> '_Bool' '='
    | |-DeclRefExpr 0x560d069243e8 <col:3> '_Bool' lvalue Var 0x560d06919bf8 'a$r_buff0_thd0' '_Bool'
    | `-ImplicitCastExpr 0x560d069245b8 <col:20, col:66> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x560d06924588 <col:20, col:66> 'int'
    |     |-BinaryOperator 0x560d069244a8 <col:20, col:38> 'int' '&&'
    |     | |-ImplicitCastExpr 0x560d06924460 <col:20> 'int' <IntegralCast>
    |     | | `-ImplicitCastExpr 0x560d06924448 <col:20> '_Bool' <LValueToRValue>
    |     | |   `-DeclRefExpr 0x560d06924408 <col:20> '_Bool' lvalue Var 0x560d0691a220 'a$w_buff0_used' '_Bool'
    |     | `-ImplicitCastExpr 0x560d06924490 <col:38> 'int' <IntegralCast>
    |     |   `-ImplicitCastExpr 0x560d06924478 <col:38> '_Bool' <LValueToRValue>
    |     |     `-DeclRefExpr 0x560d06924428 <col:38> '_Bool' lvalue Var 0x560d06919bf8 'a$r_buff0_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x560d06924540 <col:55, col:62> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x560d069244f8 <col:55, col:62> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x560d069244c8 <col:62> 'int' 0
    |     `-ImplicitCastExpr 0x560d06924570 <col:66> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x560d06924558 <col:66> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x560d06924520 <col:66> '_Bool' lvalue Var 0x560d06919bf8 'a$r_buff0_thd0' '_Bool'
    |-BinaryOperator 0x560d069248b8 <line:853:3, col:102> '_Bool' '='
    | |-DeclRefExpr 0x560d069245f0 <col:3> '_Bool' lvalue Var 0x560d06919e50 'a$r_buff1_thd0' '_Bool'
    | `-ImplicitCastExpr 0x560d069248a0 <col:20, col:102> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x560d06924870 <col:20, col:102> 'int'
    |     |-BinaryOperator 0x560d06924790 <col:20, col:74> 'int' '||'
    |     | |-BinaryOperator 0x560d069246b0 <col:20, col:38> 'int' '&&'
    |     | | |-ImplicitCastExpr 0x560d06924668 <col:20> 'int' <IntegralCast>
    |     | | | `-ImplicitCastExpr 0x560d06924650 <col:20> '_Bool' <LValueToRValue>
    |     | | |   `-DeclRefExpr 0x560d06924610 <col:20> '_Bool' lvalue Var 0x560d0691a220 'a$w_buff0_used' '_Bool'
    |     | | `-ImplicitCastExpr 0x560d06924698 <col:38> 'int' <IntegralCast>
    |     | |   `-ImplicitCastExpr 0x560d06924680 <col:38> '_Bool' <LValueToRValue>
    |     | |     `-DeclRefExpr 0x560d06924630 <col:38> '_Bool' lvalue Var 0x560d06919bf8 'a$r_buff0_thd0' '_Bool'
    |     | `-BinaryOperator 0x560d06924770 <col:56, col:74> 'int' '&&'
    |     |   |-ImplicitCastExpr 0x560d06924728 <col:56> 'int' <IntegralCast>
    |     |   | `-ImplicitCastExpr 0x560d06924710 <col:56> '_Bool' <LValueToRValue>
    |     |   |   `-DeclRefExpr 0x560d069246d0 <col:56> '_Bool' lvalue Var 0x560d0691a318 'a$w_buff1_used' '_Bool'
    |     |   `-ImplicitCastExpr 0x560d06924758 <col:74> 'int' <IntegralCast>
    |     |     `-ImplicitCastExpr 0x560d06924740 <col:74> '_Bool' <LValueToRValue>
    |     |       `-DeclRefExpr 0x560d069246f0 <col:74> '_Bool' lvalue Var 0x560d06919e50 'a$r_buff1_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x560d06924828 <col:91, col:98> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x560d069247e0 <col:91, col:98> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x560d069247b0 <col:98> 'int' 0
    |     `-ImplicitCastExpr 0x560d06924858 <col:102> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x560d06924840 <col:102> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x560d06924808 <col:102> '_Bool' lvalue Var 0x560d06919e50 'a$r_buff1_thd0' '_Bool'
    |-CallExpr 0x560d06924910 <line:854:3, col:25> 'void'
    | `-ImplicitCastExpr 0x560d069248f8 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x560d069248d8 <col:3> 'void ()' Function 0x560d068bff00 '__VERIFIER_atomic_end' 'void ()'
    |-CallExpr 0x560d06924968 <line:855:3, col:27> 'void'
    | `-ImplicitCastExpr 0x560d06924950 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x560d06924930 <col:3> 'void ()' Function 0x560d068bfe40 '__VERIFIER_atomic_begin' 'void ()'
    |-BinaryOperator 0x560d06924d88 <line:856:3, col:187> '_Bool' '='
    | |-DeclRefExpr 0x560d06924988 <col:3> '_Bool' lvalue Var 0x560d0691a408 'main$tmp_guard1' '_Bool'
    | `-ImplicitCastExpr 0x560d06924d70 <col:21, col:187> '_Bool' <IntegralToBoolean>
    |   `-UnaryOperator 0x560d06924d58 <col:21, col:187> 'int' prefix '!' cannot overflow
    |     `-ParenExpr 0x560d06924d38 <col:22, col:187> 'int'
    |       `-BinaryOperator 0x560d06924d18 <col:23, col:186> 'int' '&&'
    |         |-BinaryOperator 0x560d06924c80 <col:23, col:158> 'int' '&&'
    |         | |-BinaryOperator 0x560d06924be8 <col:23, col:130> 'int' '&&'
    |         | | |-BinaryOperator 0x560d06924b30 <col:23, col:102> 'int' '&&'
    |         | | | |-BinaryOperator 0x560d06924a98 <col:23, col:74> 'int' '&&'
    |         | | | | |-BinaryOperator 0x560d06924a00 <col:23, col:46> 'int' '=='
    |         | | | | | |-ImplicitCastExpr 0x560d069249e8 <col:23> 'int' <LValueToRValue>
    |         | | | | | | `-DeclRefExpr 0x560d069249a8 <col:23> 'int' lvalue Var 0x560d06919398 '__unbuffered_p0_EAX' 'int'
    |         | | | | | `-IntegerLiteral 0x560d069249c8 <col:46> 'int' 0
    |         | | | | `-BinaryOperator 0x560d06924a78 <col:51, col:74> 'int' '=='
    |         | | | |   |-ImplicitCastExpr 0x560d06924a60 <col:51> 'int' <LValueToRValue>
    |         | | | |   | `-DeclRefExpr 0x560d06924a20 <col:51> 'int' lvalue Var 0x560d069194b8 '__unbuffered_p1_EAX' 'int'
    |         | | | |   `-IntegerLiteral 0x560d06924a40 <col:74> 'int' 0
    |         | | | `-BinaryOperator 0x560d06924b10 <col:79, col:102> 'int' '=='
    |         | | |   |-ImplicitCastExpr 0x560d06924af8 <col:79> 'int' <LValueToRValue>
    |         | | |   | `-DeclRefExpr 0x560d06924ab8 <col:79> 'int' lvalue Var 0x560d069195d8 '__unbuffered_p2_EAX' 'int'
    |         | | |   `-IntegerLiteral 0x560d06924ad8 <col:102> 'int' 1
    |         | | `-BinaryOperator 0x560d06924bc8 <col:107, col:130> 'int' '=='
    |         | |   |-ImplicitCastExpr 0x560d06924bb0 <col:107> 'int' <LValueToRValue>
    |         | |   | `-DeclRefExpr 0x560d06924b50 <col:107> 'int' lvalue Var 0x560d069196f8 '__unbuffered_p2_EBX' 'int'
    |         | |   `-IntegerLiteral 0x560d06924b70 <col:130> 'int' 0
    |         | `-BinaryOperator 0x560d06924c60 <col:135, col:158> 'int' '=='
    |         |   |-ImplicitCastExpr 0x560d06924c48 <col:135> 'int' <LValueToRValue>
    |         |   | `-DeclRefExpr 0x560d06924c08 <col:135> 'int' lvalue Var 0x560d06919818 '__unbuffered_p3_EAX' 'int'
    |         |   `-IntegerLiteral 0x560d06924c28 <col:158> 'int' 1
    |         `-BinaryOperator 0x560d06924cf8 <col:163, col:186> 'int' '=='
    |           |-ImplicitCastExpr 0x560d06924ce0 <col:163> 'int' <LValueToRValue>
    |           | `-DeclRefExpr 0x560d06924ca0 <col:163> 'int' lvalue Var 0x560d06919938 '__unbuffered_p3_EBX' 'int'
    |           `-IntegerLiteral 0x560d06924cc0 <col:186> 'int' 0
    |-CallExpr 0x560d06924de0 <line:857:3, col:25> 'void'
    | `-ImplicitCastExpr 0x560d06924dc8 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x560d06924da8 <col:3> 'void ()' Function 0x560d068bff00 '__VERIFIER_atomic_end' 'void ()'
    |-CallExpr 0x560d06924e58 <line:858:3, col:36> 'void'
    | |-ImplicitCastExpr 0x560d06924e40 <col:3> 'void (*)(int)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x560d06924e00 <col:3> 'void (int)' Function 0x560d068bfbc8 '__VERIFIER_assert' 'void (int)'
    | `-ImplicitCastExpr 0x560d06924e98 <col:21> 'int' <IntegralCast>
    |   `-ImplicitCastExpr 0x560d06924e80 <col:21> '_Bool' <LValueToRValue>
    |     `-DeclRefExpr 0x560d06924e20 <col:21> '_Bool' lvalue Var 0x560d0691a408 'main$tmp_guard1' '_Bool'
    `-ReturnStmt 0x560d06924ed0 <line:859:3, col:10>
      `-IntegerLiteral 0x560d06924eb0 <col:10> 'int' 0
