TranslationUnitDecl 0x55976ba33e18 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x55976ba346d8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x55976ba343b0 '__int128'
|-TypedefDecl 0x55976ba34748 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x55976ba343d0 'unsigned __int128'
|-TypedefDecl 0x55976ba34a50 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x55976ba34820 'struct __NSConstantString_tag'
|   `-Record 0x55976ba347a0 '__NSConstantString_tag'
|-TypedefDecl 0x55976ba34af8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x55976ba34ab0 'char *'
|   `-BuiltinType 0x55976ba33eb0 'char'
|-TypedefDecl 0x55976ba73650 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'struct __va_list_tag [1]'
| `-ConstantArrayType 0x55976ba34d90 'struct __va_list_tag [1]' 1 
|   `-RecordType 0x55976ba34bd0 'struct __va_list_tag'
|     `-Record 0x55976ba34b50 '__va_list_tag'
|-FunctionDecl 0x55976ba73790 <./split_2/mix041_rmo.oepc_false-unreach-call.i:1:1, col:34> col:13 used __VERIFIER_assume 'void (int)' extern
| `-ParmVarDecl 0x55976ba736c0 <col:31> col:34 'int'
|-FunctionDecl 0x55976ba73958 <line:2:1, col:45> col:15 used __VERIFIER_nondet_pointer 'void *(void)' extern
|-FunctionDecl 0x55976ba73a80 <line:3:1, col:61> col:13 used __VERIFIER_error 'void () __attribute__((noreturn))' extern
|-FunctionDecl 0x55976ba73bc8 <line:4:1, col:99> col:6 used __VERIFIER_assert 'void (int)'
| |-ParmVarDecl 0x55976ba73b38 <col:24, col:28> col:28 used expression 'int'
| `-CompoundStmt 0x55976ba73df8 <col:40, col:99>
|   |-IfStmt 0x55976ba73dc8 <col:42, col:88>
|   | |-UnaryOperator 0x55976ba73ca8 <col:46, col:47> 'int' prefix '!' cannot overflow
|   | | `-ImplicitCastExpr 0x55976ba73c90 <col:47> 'int' <LValueToRValue>
|   | |   `-DeclRefExpr 0x55976ba73c70 <col:47> 'int' lvalue ParmVar 0x55976ba73b38 'expression' 'int'
|   | `-CompoundStmt 0x55976ba73db0 <col:59, col:88>
|   |   `-LabelStmt 0x55976ba73d98 <col:61, col:85> 'ERROR'
|   |     `-CallExpr 0x55976ba73d28 <col:68, col:85> 'void'
|   |       `-ImplicitCastExpr 0x55976ba73d10 <col:68> 'void (*)() __attribute__((noreturn))' <FunctionToPointerDecay>
|   |         `-DeclRefExpr 0x55976ba73cc0 <col:68> 'void () __attribute__((noreturn))' Function 0x55976ba73a80 '__VERIFIER_error' 'void () __attribute__((noreturn))'
|   |-NullStmt 0x55976ba73de0 <col:89>
|   `-ReturnStmt 0x55976ba73de8 <col:91>
|-FunctionDecl 0x55976ba73e40 <line:5:1, col:37> col:13 used __VERIFIER_atomic_begin 'void ()' extern
|-FunctionDecl 0x55976ba73f00 <line:6:1, col:35> col:13 used __VERIFIER_atomic_end 'void ()' extern
|-FunctionDecl 0x55976ba74280 <line:8:1, line:10:76> line:8:13 __assert_fail 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x55976ba73fb8 <col:28, col:40> col:40 __assertion 'const char *'
| |-ParmVarDecl 0x55976ba74038 <col:53, col:65> col:65 __file 'const char *'
| |-ParmVarDecl 0x55976ba740b8 <line:9:7, col:20> col:20 __line 'unsigned int'
| |-ParmVarDecl 0x55976ba74138 <col:28, col:40> col:40 __function 'const char *'
| `-NoThrowAttr 0x55976ba74340 <line:10:22>
|-FunctionDecl 0x55976ba9a390 <line:11:1, line:13:76> line:11:13 __assert_perror_fail 'void (int, const char *, unsigned int, const char *) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x55976ba743b0 <col:35, col:39> col:39 __errnum 'int'
| |-ParmVarDecl 0x55976ba74430 <col:49, col:61> col:61 __file 'const char *'
| |-ParmVarDecl 0x55976ba744b0 <line:12:7, col:20> col:20 __line 'unsigned int'
| |-ParmVarDecl 0x55976ba74530 <col:28, col:40> col:40 __function 'const char *'
| `-NoThrowAttr 0x55976ba9a450 <line:13:22>
|-FunctionDecl 0x55976ba9a700 <line:14:1, line:15:76> line:14:13 __assert 'void (const char *, const char *, int) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x55976ba9a4c0 <col:23, col:35> col:35 __assertion 'const char *'
| |-ParmVarDecl 0x55976ba9a540 <col:48, col:60> col:60 __file 'const char *'
| |-ParmVarDecl 0x55976ba9a5c0 <col:68, col:72> col:72 __line 'int'
| `-NoThrowAttr 0x55976ba9a7b8 <line:15:22>
|-TypedefDecl 0x55976ba9a828 <line:17:1, col:23> col:23 __u_char 'unsigned char'
| `-BuiltinType 0x55976ba33f70 'unsigned char'
|-TypedefDecl 0x55976ba9a898 <line:18:1, col:28> col:28 __u_short 'unsigned short'
| `-BuiltinType 0x55976ba33f90 'unsigned short'
|-TypedefDecl 0x55976ba9a908 <line:19:1, col:22> col:22 __u_int 'unsigned int'
| `-BuiltinType 0x55976ba33fb0 'unsigned int'
|-TypedefDecl 0x55976ba9a978 <line:20:1, col:27> col:27 __u_long 'unsigned long'
| `-BuiltinType 0x55976ba33fd0 'unsigned long'
|-TypedefDecl 0x55976ba9a9e8 <line:21:1, col:21> col:21 __int8_t 'signed char'
| `-BuiltinType 0x55976ba33ed0 'signed char'
|-TypedefDecl 0x55976ba9aa58 <line:22:1, col:23> col:23 __uint8_t 'unsigned char'
| `-BuiltinType 0x55976ba33f70 'unsigned char'
|-TypedefDecl 0x55976ba9aac8 <line:23:1, col:26> col:26 __int16_t 'short'
| `-BuiltinType 0x55976ba33ef0 'short'
|-TypedefDecl 0x55976ba9ab38 <line:24:1, col:28> col:28 __uint16_t 'unsigned short'
| `-BuiltinType 0x55976ba33f90 'unsigned short'
|-TypedefDecl 0x55976ba9aba8 <line:25:1, col:20> col:20 __int32_t 'int'
| `-BuiltinType 0x55976ba33f10 'int'
|-TypedefDecl 0x55976ba9ac18 <line:26:1, col:22> col:22 __uint32_t 'unsigned int'
| `-BuiltinType 0x55976ba33fb0 'unsigned int'
|-TypedefDecl 0x55976ba9ac88 <line:27:1, col:25> col:25 __int64_t 'long'
| `-BuiltinType 0x55976ba33f30 'long'
|-TypedefDecl 0x55976ba9acf8 <line:28:1, col:27> col:27 referenced __uint64_t 'unsigned long'
| `-BuiltinType 0x55976ba33fd0 'unsigned long'
|-TypedefDecl 0x55976ba9ad68 <line:29:1, col:18> col:18 referenced __quad_t 'long'
| `-BuiltinType 0x55976ba33f30 'long'
|-TypedefDecl 0x55976ba9add8 <line:30:1, col:27> col:27 __u_quad_t 'unsigned long'
| `-BuiltinType 0x55976ba33fd0 'unsigned long'
|-TypedefDecl 0x55976ba9ae48 <line:31:1, col:27> col:27 __dev_t 'unsigned long'
| `-BuiltinType 0x55976ba33fd0 'unsigned long'
|-TypedefDecl 0x55976ba9aeb8 <line:32:1, col:22> col:22 __uid_t 'unsigned int'
| `-BuiltinType 0x55976ba33fb0 'unsigned int'
|-TypedefDecl 0x55976ba9af28 <line:33:1, col:22> col:22 __gid_t 'unsigned int'
| `-BuiltinType 0x55976ba33fb0 'unsigned int'
|-TypedefDecl 0x55976ba9af98 <line:34:1, col:27> col:27 __ino_t 'unsigned long'
| `-BuiltinType 0x55976ba33fd0 'unsigned long'
|-TypedefDecl 0x55976ba9b008 <line:35:1, col:27> col:27 __ino64_t 'unsigned long'
| `-BuiltinType 0x55976ba33fd0 'unsigned long'
|-TypedefDecl 0x55976ba9b078 <line:36:1, col:22> col:22 __mode_t 'unsigned int'
| `-BuiltinType 0x55976ba33fb0 'unsigned int'
|-TypedefDecl 0x55976ba9b0e8 <line:37:1, col:27> col:27 __nlink_t 'unsigned long'
| `-BuiltinType 0x55976ba33fd0 'unsigned long'
|-TypedefDecl 0x55976ba9b158 <line:38:1, col:18> col:18 __off_t 'long'
| `-BuiltinType 0x55976ba33f30 'long'
|-TypedefDecl 0x55976ba9b1c8 <line:39:1, col:18> col:18 referenced __off64_t 'long'
| `-BuiltinType 0x55976ba33f30 'long'
|-TypedefDecl 0x55976ba9b238 <line:40:1, col:13> col:13 referenced __pid_t 'int'
| `-BuiltinType 0x55976ba33f10 'int'
|-RecordDecl 0x55976ba9b290 <line:41:9, col:32> col:9 struct definition
| `-FieldDecl 0x55976ba9b408 <col:18, col:29> col:22 __val 'int [2]'
|-TypedefDecl 0x55976ba9b4c0 <col:1, col:34> col:34 __fsid_t 'struct __fsid_t':'__fsid_t'
| `-ElaboratedType 0x55976ba9b460 'struct __fsid_t' sugar
|   `-RecordType 0x55976ba9b310 '__fsid_t'
|     `-Record 0x55976ba9b290 ''
|-TypedefDecl 0x55976ba9b548 <line:42:1, col:18> col:18 referenced __clock_t 'long'
| `-BuiltinType 0x55976ba33f30 'long'
|-TypedefDecl 0x55976ba9b5b8 <line:43:1, col:27> col:27 __rlim_t 'unsigned long'
| `-BuiltinType 0x55976ba33fd0 'unsigned long'
|-TypedefDecl 0x55976ba9b628 <line:44:1, col:27> col:27 __rlim64_t 'unsigned long'
| `-BuiltinType 0x55976ba33fd0 'unsigned long'
|-TypedefDecl 0x55976ba9b698 <line:45:1, col:22> col:22 __id_t 'unsigned int'
| `-BuiltinType 0x55976ba33fb0 'unsigned int'
|-TypedefDecl 0x55976ba9b708 <line:46:1, col:18> col:18 referenced __time_t 'long'
| `-BuiltinType 0x55976ba33f30 'long'
|-TypedefDecl 0x55976ba9b778 <line:47:1, col:22> col:22 __useconds_t 'unsigned int'
| `-BuiltinType 0x55976ba33fb0 'unsigned int'
|-TypedefDecl 0x55976ba9b7e8 <line:48:1, col:18> col:18 __suseconds_t 'long'
| `-BuiltinType 0x55976ba33f30 'long'
|-TypedefDecl 0x55976ba9b858 <line:49:1, col:13> col:13 __daddr_t 'int'
| `-BuiltinType 0x55976ba33f10 'int'
|-TypedefDecl 0x55976ba9b8c8 <line:50:1, col:13> col:13 __key_t 'int'
| `-BuiltinType 0x55976ba33f10 'int'
|-TypedefDecl 0x55976ba9b938 <line:51:1, col:13> col:13 referenced __clockid_t 'int'
| `-BuiltinType 0x55976ba33f10 'int'
|-TypedefDecl 0x55976ba9b9a8 <line:52:1, col:16> col:16 referenced __timer_t 'void *'
| `-PointerType 0x55976ba34630 'void *'
|   `-BuiltinType 0x55976ba33e70 'void'
|-TypedefDecl 0x55976ba9ba18 <line:53:1, col:18> col:18 __blksize_t 'long'
| `-BuiltinType 0x55976ba33f30 'long'
|-TypedefDecl 0x55976ba9ba88 <line:54:1, col:18> col:18 __blkcnt_t 'long'
| `-BuiltinType 0x55976ba33f30 'long'
|-TypedefDecl 0x55976ba9baf8 <line:55:1, col:18> col:18 __blkcnt64_t 'long'
| `-BuiltinType 0x55976ba33f30 'long'
|-TypedefDecl 0x55976ba9bb68 <line:56:1, col:27> col:27 __fsblkcnt_t 'unsigned long'
| `-BuiltinType 0x55976ba33fd0 'unsigned long'
|-TypedefDecl 0x55976ba9bbd8 <line:57:1, col:27> col:27 __fsblkcnt64_t 'unsigned long'
| `-BuiltinType 0x55976ba33fd0 'unsigned long'
|-TypedefDecl 0x55976ba9bc48 <line:58:1, col:27> col:27 __fsfilcnt_t 'unsigned long'
| `-BuiltinType 0x55976ba33fd0 'unsigned long'
|-TypedefDecl 0x55976ba9bcb8 <line:59:1, col:27> col:27 __fsfilcnt64_t 'unsigned long'
| `-BuiltinType 0x55976ba33fd0 'unsigned long'
|-TypedefDecl 0x55976ba9bd28 <line:60:1, col:18> col:18 __fsword_t 'long'
| `-BuiltinType 0x55976ba33f30 'long'
|-TypedefDecl 0x55976ba9bd98 <line:61:1, col:18> col:18 __ssize_t 'long'
| `-BuiltinType 0x55976ba33f30 'long'
|-TypedefDecl 0x55976ba9be08 <line:62:1, col:18> col:18 referenced __syscall_slong_t 'long'
| `-BuiltinType 0x55976ba33f30 'long'
|-TypedefDecl 0x55976ba9be78 <line:63:1, col:27> col:27 __syscall_ulong_t 'unsigned long'
| `-BuiltinType 0x55976ba33fd0 'unsigned long'
|-TypedefDecl 0x55976ba9bf08 <line:64:1, col:19> col:19 __loff_t '__off64_t':'long'
| `-TypedefType 0x55976ba9bed0 '__off64_t' sugar
|   |-Typedef 0x55976ba9b1c8 '__off64_t'
|   `-BuiltinType 0x55976ba33f30 'long'
|-TypedefDecl 0x55976ba9c000 <line:65:1, col:19> col:19 __qaddr_t '__quad_t *'
| `-PointerType 0x55976ba9bfc0 '__quad_t *'
|   `-TypedefType 0x55976ba9bf60 '__quad_t' sugar
|     |-Typedef 0x55976ba9ad68 '__quad_t'
|     `-BuiltinType 0x55976ba33f30 'long'
|-TypedefDecl 0x55976ba9c070 <line:66:1, col:15> col:15 __caddr_t 'char *'
| `-PointerType 0x55976ba34ab0 'char *'
|   `-BuiltinType 0x55976ba33eb0 'char'
|-TypedefDecl 0x55976ba9c0e0 <line:67:1, col:18> col:18 __intptr_t 'long'
| `-BuiltinType 0x55976ba33f30 'long'
|-TypedefDecl 0x55976ba9c150 <line:68:1, col:22> col:22 __socklen_t 'unsigned int'
| `-BuiltinType 0x55976ba33fb0 'unsigned int'
|-FunctionDecl 0x55976ba9c298 <line:69:1, line:73:1> line:70:1 __bswap_32 'unsigned int (unsigned int)' static inline
| |-ParmVarDecl 0x55976ba9c1c0 <col:13, col:26> col:26 used __bsx 'unsigned int'
| `-CompoundStmt 0x55976ba9d5e8 <line:71:1, line:73:1>
|   `-ReturnStmt 0x55976ba9d5d8 <line:72:3, col:34>
|     `-CallExpr 0x55976ba9d598 <col:10, col:34> 'unsigned int'
|       |-ImplicitCastExpr 0x55976ba9d580 <col:10> 'unsigned int (*)(unsigned int)' <BuiltinFnToFnPtr>
|       | `-DeclRefExpr 0x55976ba9d510 <col:10> '<builtin fn type>' Function 0x55976ba9d380 '__builtin_bswap32' 'unsigned int (unsigned int)'
|       `-ImplicitCastExpr 0x55976ba9d5c0 <col:29> 'unsigned int' <LValueToRValue>
|         `-DeclRefExpr 0x55976ba9d530 <col:29> 'unsigned int' lvalue ParmVar 0x55976ba9c1c0 '__bsx' 'unsigned int'
|-FunctionDecl 0x55976ba9d380 <col:10> col:10 implicit used __builtin_bswap32 'unsigned int (unsigned int)' extern
| |-ParmVarDecl 0x55976ba9d420 <<invalid sloc>> <invalid sloc> 'unsigned int'
| |-NoThrowAttr 0x55976ba9d490 <col:10> Implicit
| `-ConstAttr 0x55976ba9d4e8 <col:10> Implicit
|-FunctionDecl 0x55976ba9d740 <line:74:1, line:78:1> line:75:1 __bswap_64 '__uint64_t (__uint64_t)' static inline
| |-ParmVarDecl 0x55976ba9d638 <col:13, col:24> col:24 used __bsx '__uint64_t':'unsigned long'
| `-CompoundStmt 0x55976ba9da58 <line:76:1, line:78:1>
|   `-ReturnStmt 0x55976ba9da48 <line:77:3, col:34>
|     `-CallExpr 0x55976ba9da08 <col:10, col:34> 'unsigned long'
|       |-ImplicitCastExpr 0x55976ba9d9f0 <col:10> 'unsigned long (*)(unsigned long)' <BuiltinFnToFnPtr>
|       | `-DeclRefExpr 0x55976ba9d978 <col:10> '<builtin fn type>' Function 0x55976ba9d7e8 '__builtin_bswap64' 'unsigned long (unsigned long)'
|       `-ImplicitCastExpr 0x55976ba9da30 <col:29> '__uint64_t':'unsigned long' <LValueToRValue>
|         `-DeclRefExpr 0x55976ba9d998 <col:29> '__uint64_t':'unsigned long' lvalue ParmVar 0x55976ba9d638 '__bsx' '__uint64_t':'unsigned long'
|-FunctionDecl 0x55976ba9d7e8 <col:10> col:10 implicit used __builtin_bswap64 'unsigned long (unsigned long)' extern
| |-ParmVarDecl 0x55976ba9d888 <<invalid sloc>> <invalid sloc> 'unsigned long'
| |-NoThrowAttr 0x55976ba9d8f8 <col:10> Implicit
| `-ConstAttr 0x55976ba9d950 <col:10> Implicit
|-TypedefDecl 0x55976ba9da88 <line:79:1, col:27> col:27 referenced size_t 'unsigned long'
| `-BuiltinType 0x55976ba33fd0 'unsigned long'
|-TypedefDecl 0x55976ba9db18 <line:81:1, col:18> col:18 referenced time_t '__time_t':'long'
| `-TypedefType 0x55976ba9dae0 '__time_t' sugar
|   |-Typedef 0x55976ba9b708 '__time_t'
|   `-BuiltinType 0x55976ba33f30 'long'
|-RecordDecl 0x55976ba9db70 <line:84:1, line:88:3> line:84:8 struct timespec definition
| |-FieldDecl 0x55976ba9dc28 <line:86:5, col:14> col:14 tv_sec '__time_t':'long'
| `-FieldDecl 0x55976ba9dcb8 <line:87:5, col:23> col:23 tv_nsec '__syscall_slong_t':'long'
|-TypedefDecl 0x55976ba9dd48 <line:89:1, col:17> col:17 referenced pid_t '__pid_t':'int'
| `-TypedefType 0x55976ba9dd10 '__pid_t' sugar
|   |-Typedef 0x55976ba9b238 '__pid_t'
|   `-BuiltinType 0x55976ba33f10 'int'
|-RecordDecl 0x55976ba9dda0 <line:90:1, line:93:3> line:90:8 struct sched_param definition
| `-FieldDecl 0x55976ba9de60 <line:92:5, col:9> col:9 __sched_priority 'int'
|-RecordDecl 0x55976ba9deb0 <line:96:1, line:99:3> line:96:8 struct __sched_param definition
| `-FieldDecl 0x55976ba9df70 <line:98:5, col:9> col:9 __sched_priority 'int'
|-TypedefDecl 0x55976ba9dfd8 <line:100:1, col:27> col:27 referenced __cpu_mask 'unsigned long'
| `-BuiltinType 0x55976ba33fd0 'unsigned long'
|-RecordDecl 0x55976ba9e030 <line:101:9, line:104:1> line:101:9 struct definition
| `-FieldDecl 0x55976ba9e2c0 <line:103:3, col:53> col:14 __bits '__cpu_mask [64]'
|-TypedefDecl 0x55976ba9f3a0 <line:101:1, line:104:3> col:3 referenced cpu_set_t 'struct cpu_set_t':'cpu_set_t'
| `-ElaboratedType 0x55976ba9e310 'struct cpu_set_t' sugar
|   `-RecordType 0x55976ba9e0b0 'cpu_set_t'
|     `-Record 0x55976ba9e030 ''
|-FunctionDecl 0x55976ba9f678 <line:106:1, line:107:42> line:106:12 __sched_cpucount 'int (size_t, const cpu_set_t *)' extern
| |-ParmVarDecl 0x55976ba9f448 <col:30, col:37> col:37 __setsize 'size_t':'unsigned long'
| |-ParmVarDecl 0x55976ba9f550 <col:48, col:65> col:65 __setp 'const cpu_set_t *'
| `-NoThrowAttr 0x55976ba9f728 <line:107:19>
|-FunctionDecl 0x55976ba9f900 <line:108:1, col:92> col:19 __sched_cpualloc 'cpu_set_t *(size_t)' extern
| |-ParmVarDecl 0x55976ba9f790 <col:37, col:44> col:44 __count 'size_t':'unsigned long'
| `-NoThrowAttr 0x55976ba9f9a8 <col:69>
|-FunctionDecl 0x55976ba9fb20 <line:109:1, col:87> col:13 __sched_cpufree 'void (cpu_set_t *)' extern
| |-ParmVarDecl 0x55976ba9fa10 <col:30, col:41> col:41 __set 'cpu_set_t *'
| `-NoThrowAttr 0x55976ba9fbc8 <col:64>
|-FunctionDecl 0x55976ba9fe88 <line:112:1, line:113:45> line:112:12 sched_setparam 'int (__pid_t, const struct sched_param *)' extern
| |-ParmVarDecl 0x55976ba9fc30 <col:28, col:36> col:36 __pid '__pid_t':'int'
| |-ParmVarDecl 0x55976ba9fd68 <col:43, col:69> col:69 __param 'const struct sched_param *'
| `-NoThrowAttr 0x55976ba9ff38 <line:113:22>
|-FunctionDecl 0x55976baa01b8 <line:114:1, col:111> col:12 sched_getparam 'int (__pid_t, struct sched_param *)' extern
| |-ParmVarDecl 0x55976ba9ffa0 <col:28, col:36> col:36 __pid '__pid_t':'int'
| |-ParmVarDecl 0x55976baa0098 <col:43, col:63> col:63 __param 'struct sched_param *'
| `-NoThrowAttr 0x55976baa0268 <col:88>
|-FunctionDecl 0x55976baa0588 <line:115:1, line:116:85> line:115:12 sched_setscheduler 'int (__pid_t, int, const struct sched_param *)' extern
| |-ParmVarDecl 0x55976baa02d0 <col:32, col:40> col:40 __pid '__pid_t':'int'
| |-ParmVarDecl 0x55976baa03b0 <col:47, col:51> col:51 __policy 'int'
| |-ParmVarDecl 0x55976baa0440 <line:116:11, col:37> col:37 __param 'const struct sched_param *'
| `-NoThrowAttr 0x55976baa0640 <col:62>
|-FunctionDecl 0x55976baa07b8 <line:117:1, col:86> col:12 sched_getscheduler 'int (__pid_t)' extern
| |-ParmVarDecl 0x55976baa06a8 <col:32, col:40> col:40 __pid '__pid_t':'int'
| `-NoThrowAttr 0x55976baa0860 <col:63>
|-FunctionDecl 0x55976baa0988 <line:118:1, col:70> col:12 sched_yield 'int (void)' extern
| `-NoThrowAttr 0x55976baa0a28 <col:47>
|-FunctionDecl 0x55976baa0b30 <line:119:1, col:92> col:12 sched_get_priority_max 'int (int)' extern
| |-ParmVarDecl 0x55976baa0a98 <col:36, col:40> col:40 __algorithm 'int'
| `-NoThrowAttr 0x55976baa0bd8 <col:69>
|-FunctionDecl 0x55976baa0ce0 <line:120:1, col:92> col:12 sched_get_priority_min 'int (int)' extern
| |-ParmVarDecl 0x55976baa0c48 <col:36, col:40> col:40 __algorithm 'int'
| `-NoThrowAttr 0x55976baa0d88 <col:69>
|-FunctionDecl 0x55976baa1048 <line:121:1, col:111> col:12 sched_rr_get_interval 'int (__pid_t, struct timespec *)' extern
| |-ParmVarDecl 0x55976baa0df0 <col:35, col:43> col:43 __pid '__pid_t':'int'
| |-ParmVarDecl 0x55976baa0f28 <col:50, col:67> col:67 __t 'struct timespec *'
| `-NoThrowAttr 0x55976baa10f8 <col:88>
|-TypedefDecl 0x55976baa1188 <line:125:1, col:19> col:19 referenced clock_t '__clock_t':'long'
| `-TypedefType 0x55976baa1150 '__clock_t' sugar
|   |-Typedef 0x55976ba9b548 '__clock_t'
|   `-BuiltinType 0x55976ba33f30 'long'
|-TypedefDecl 0x55976baa1218 <line:128:1, col:21> col:21 referenced clockid_t '__clockid_t':'int'
| `-TypedefType 0x55976baa11e0 '__clockid_t' sugar
|   |-Typedef 0x55976ba9b938 '__clockid_t'
|   `-BuiltinType 0x55976ba33f10 'int'
|-TypedefDecl 0x55976baa12a8 <line:129:1, col:19> col:19 referenced timer_t '__timer_t':'void *'
| `-TypedefType 0x55976baa1270 '__timer_t' sugar
|   |-Typedef 0x55976ba9b9a8 '__timer_t'
|   `-PointerType 0x55976ba34630 'void *'
|     `-BuiltinType 0x55976ba33e70 'void'
|-RecordDecl 0x55976baa1300 <line:131:1, line:144:1> line:131:8 struct tm definition
| |-FieldDecl 0x55976baa13d8 <line:133:3, col:7> col:7 tm_sec 'int'
| |-FieldDecl 0x55976baa1440 <line:134:3, col:7> col:7 tm_min 'int'
| |-FieldDecl 0x55976baa14a8 <line:135:3, col:7> col:7 tm_hour 'int'
| |-FieldDecl 0x55976baa1510 <line:136:3, col:7> col:7 tm_mday 'int'
| |-FieldDecl 0x55976baa1578 <line:137:3, col:7> col:7 tm_mon 'int'
| |-FieldDecl 0x55976baa15e0 <line:138:3, col:7> col:7 tm_year 'int'
| |-FieldDecl 0x55976baa1648 <line:139:3, col:7> col:7 tm_wday 'int'
| |-FieldDecl 0x55976baa16b0 <line:140:3, col:7> col:7 tm_yday 'int'
| |-FieldDecl 0x55976baa1718 <line:141:3, col:7> col:7 tm_isdst 'int'
| |-FieldDecl 0x55976baa1780 <line:142:3, col:12> col:12 tm_gmtoff 'long'
| `-FieldDecl 0x55976baa17e8 <line:143:3, col:15> col:15 tm_zone 'const char *'
|-RecordDecl 0x55976baa1838 <line:147:1, line:151:3> line:147:8 struct itimerspec definition
| |-FieldDecl 0x55976baa1908 <line:149:5, col:21> col:21 it_interval 'struct timespec':'struct timespec'
| `-FieldDecl 0x55976baa1978 <line:150:5, col:21> col:21 it_value 'struct timespec':'struct timespec'
|-RecordDecl 0x55976baa1a20 <line:152:1, col:8> col:8 struct sigevent
|-FunctionDecl 0x55976baa1bf0 <line:154:1, col:68> col:16 clock 'clock_t (void)' extern
| `-NoThrowAttr 0x55976baa1c90 <col:45>
|-FunctionDecl 0x55976baa1e70 <line:155:1, col:77> col:15 time 'time_t (time_t *)' extern
| |-ParmVarDecl 0x55976baa1d60 <col:21, col:29> col:29 __timer 'time_t *'
| `-NoThrowAttr 0x55976baa1f18 <col:54>
|-FunctionDecl 0x55976baa2118 <line:156:1, line:157:73> line:156:15 difftime 'double (time_t, time_t)' extern
| |-ParmVarDecl 0x55976baa1f80 <col:25, col:32> col:32 __time1 'time_t':'long'
| |-ParmVarDecl 0x55976baa1ff8 <col:41, col:48> col:48 __time0 'time_t':'long'
| |-NoThrowAttr 0x55976baa21c8 <line:157:22>
| `-ConstAttr 0x55976baa2220 <col:63>
|-FunctionDecl 0x55976baa3050 <line:158:1, col:79> col:15 mktime 'time_t (struct tm *)' extern
| |-ParmVarDecl 0x55976baa2318 <col:23, col:34> col:34 __tp 'struct tm *'
| `-NoThrowAttr 0x55976baa30f8 <col:56>
|-FunctionDecl 0x55976baa34a0 <line:159:1, line:161:77> line:159:15 strftime 'size_t (char *restrict, size_t, const char *restrict, const struct tm *restrict)' extern
| |-ParmVarDecl 0x55976baa3168 <col:25, col:42> col:42 __s 'char *restrict'
| |-ParmVarDecl 0x55976baa31e0 <col:47, col:54> col:54 __maxsize 'size_t':'unsigned long'
| |-ParmVarDecl 0x55976baa3260 <line:160:4, col:27> col:27 __format 'const char *restrict'
| |-ParmVarDecl 0x55976baa3358 <line:161:4, col:32> col:32 __tp 'const struct tm *restrict'
| `-NoThrowAttr 0x55976baa3560 <col:54>
|-RecordDecl 0x55976baa35b8 <line:163:9, line:170:1> line:163:16 struct __locale_struct definition
| |-RecordDecl 0x55976baa3668 parent 0x55976ba33e18 <line:165:3, col:10> col:10 struct __locale_data
| |-FieldDecl 0x55976baa38c8 <col:3, col:37> col:25 __locales 'struct __locale_data *[13]'
| |-FieldDecl 0x55976baa3968 <line:166:3, col:29> col:29 __ctype_b 'const unsigned short *'
| |-FieldDecl 0x55976baa39d0 <line:167:3, col:14> col:14 __ctype_tolower 'const int *'
| |-FieldDecl 0x55976baa3a38 <line:168:3, col:14> col:14 __ctype_toupper 'const int *'
| `-FieldDecl 0x55976baa3b28 <line:169:3, col:25> col:15 __names 'const char *[13]'
|-TypedefDecl 0x55976baa3c48 <line:163:1, line:170:4> col:4 referenced __locale_t 'struct __locale_struct *'
| `-PointerType 0x55976baa3bf0 'struct __locale_struct *'
|   `-ElaboratedType 0x55976baa3b80 'struct __locale_struct' sugar
|     `-RecordType 0x55976baa3640 'struct __locale_struct'
|       `-Record 0x55976baa35b8 '__locale_struct'
|-TypedefDecl 0x55976baa3cf8 <line:171:1, col:20> col:20 locale_t '__locale_t':'struct __locale_struct *'
| `-TypedefType 0x55976baa3cc0 '__locale_t' sugar
|   |-Typedef 0x55976baa3c48 '__locale_t'
|   `-PointerType 0x55976baa3bf0 'struct __locale_struct *'
|     `-ElaboratedType 0x55976baa3b80 'struct __locale_struct' sugar
|       `-RecordType 0x55976baa3640 'struct __locale_struct'
|         `-Record 0x55976baa35b8 '__locale_struct'
|-FunctionDecl 0x55976baa5110 <line:172:1, line:175:63> line:172:15 strftime_l 'size_t (char *restrict, size_t, const char *restrict, const struct tm *restrict, __locale_t)' extern
| |-ParmVarDecl 0x55976baa3d68 <col:27, col:44> col:44 __s 'char *restrict'
| |-ParmVarDecl 0x55976baa3de0 <col:49, col:56> col:56 __maxsize 'size_t':'unsigned long'
| |-ParmVarDecl 0x55976baa3e60 <line:173:6, col:29> col:29 __format 'const char *restrict'
| |-ParmVarDecl 0x55976baa3ef0 <line:174:6, col:34> col:34 __tp 'const struct tm *restrict'
| |-ParmVarDecl 0x55976baa3f68 <line:175:6, col:17> col:17 __loc '__locale_t':'struct __locale_struct *'
| `-NoThrowAttr 0x55976baa51d8 <col:40>
|-FunctionDecl 0x55976baa53c8 <line:177:1, col:89> col:19 gmtime 'struct tm *(const time_t *)' extern
| |-ParmVarDecl 0x55976baa52a0 <col:27, col:41> col:41 __timer 'const time_t *'
| `-NoThrowAttr 0x55976baa5470 <col:66>
|-FunctionDecl 0x55976baa5580 <line:178:1, col:92> col:19 localtime 'struct tm *(const time_t *)' extern
| |-ParmVarDecl 0x55976baa54d8 <col:30, col:44> col:44 __timer 'const time_t *'
| `-NoThrowAttr 0x55976baa5628 <col:69>
|-FunctionDecl 0x55976baa5858 <line:180:1, line:181:75> line:180:19 gmtime_r 'struct tm *(const time_t *restrict, struct tm *restrict)' extern
| |-ParmVarDecl 0x55976baa5690 <col:29, col:54> col:54 __timer 'const time_t *restrict'
| |-ParmVarDecl 0x55976baa5720 <line:181:8, col:30> col:30 __tp 'struct tm *restrict'
| `-NoThrowAttr 0x55976baa5908 <col:52>
|-FunctionDecl 0x55976baa5ab0 <line:182:1, line:183:78> line:182:19 localtime_r 'struct tm *(const time_t *restrict, struct tm *restrict)' extern
| |-ParmVarDecl 0x55976baa5970 <col:32, col:57> col:57 __timer 'const time_t *restrict'
| |-ParmVarDecl 0x55976baa5a00 <line:183:11, col:33> col:33 __tp 'struct tm *restrict'
| `-NoThrowAttr 0x55976baa5b60 <col:55>
|-FunctionDecl 0x55976baa5cf8 <line:185:1, col:85> col:14 asctime 'char *(const struct tm *)' extern
| |-ParmVarDecl 0x55976baa5be0 <col:23, col:40> col:40 __tp 'const struct tm *'
| `-NoThrowAttr 0x55976baa5da0 <col:62>
|-FunctionDecl 0x55976baa5f18 <line:186:1, col:83> col:14 ctime 'char *(const time_t *)' extern
| |-ParmVarDecl 0x55976baa5e08 <col:21, col:35> col:35 __timer 'const time_t *'
| `-NoThrowAttr 0x55976baa5fc0 <col:60>
|-FunctionDecl 0x55976baa62b8 <line:188:1, line:189:67> line:188:14 asctime_r 'char *(const struct tm *restrict, char *restrict)' extern
| |-ParmVarDecl 0x55976baa6118 <col:25, col:53> col:53 __tp 'const struct tm *restrict'
| |-ParmVarDecl 0x55976baa6198 <line:189:4, col:21> col:21 __buf 'char *restrict'
| `-NoThrowAttr 0x55976baa6368 <col:44>
|-FunctionDecl 0x55976baa6578 <line:190:1, line:191:72> line:190:14 ctime_r 'char *(const time_t *restrict, char *restrict)' extern
| |-ParmVarDecl 0x55976baa63d0 <col:23, col:48> col:48 __timer 'const time_t *restrict'
| |-ParmVarDecl 0x55976baa6450 <line:191:9, col:26> col:26 __buf 'char *restrict'
| `-NoThrowAttr 0x55976baa6628 <col:49>
|-VarDecl 0x55976baa6728 <line:192:1, col:24> col:14 __tzname 'char *[2]' extern
|-VarDecl 0x55976baa67a8 <line:193:1, col:12> col:12 __daylight 'int' extern
|-VarDecl 0x55976baa6828 <line:194:1, col:17> col:17 __timezone 'long' extern
|-VarDecl 0x55976baa68f0 <line:195:1, col:22> col:14 tzname 'char *[2]' extern
|-FunctionDecl 0x55976baa6a20 <line:196:1, col:65> col:13 tzset 'void (void)' extern
| `-NoThrowAttr 0x55976baa6ac0 <col:42>
|-VarDecl 0x55976baa6b30 <line:197:1, col:12> col:12 daylight 'int' extern
|-VarDecl 0x55976baa6bb0 <line:198:1, col:17> col:17 timezone 'long' extern
|-FunctionDecl 0x55976baa6d38 <line:199:1, col:80> col:12 stime 'int (const time_t *)' extern
| |-ParmVarDecl 0x55976baa6c28 <col:19, col:33> col:33 __when 'const time_t *'
| `-NoThrowAttr 0x55976baa6de0 <col:57>
|-FunctionDecl 0x55976baa6ef0 <line:200:1, col:79> col:15 timegm 'time_t (struct tm *)' extern
| |-ParmVarDecl 0x55976baa6e60 <col:23, col:34> col:34 __tp 'struct tm *'
| `-NoThrowAttr 0x55976baa6f98 <col:56>
|-FunctionDecl 0x55976baa70d0 <line:201:1, col:82> col:15 timelocal 'time_t (struct tm *)' extern
| |-ParmVarDecl 0x55976baa7018 <col:26, col:37> col:37 __tp 'struct tm *'
| `-NoThrowAttr 0x55976baa7178 <col:59>
|-FunctionDecl 0x55976baa7280 <line:202:1, col:99> col:12 dysize 'int (int)' extern
| |-ParmVarDecl 0x55976baa71e8 <col:20, col:24> col:24 __year 'int'
| |-NoThrowAttr 0x55976baa7328 <col:48>
| `-ConstAttr 0x55976baa7380 <col:89>
|-FunctionDecl 0x55976baa75e8 <line:203:1, line:204:37> line:203:12 nanosleep 'int (const struct timespec *, struct timespec *)' extern
| |-ParmVarDecl 0x55976baa7438 <col:23, col:46> col:46 __requested_time 'const struct timespec *'
| `-ParmVarDecl 0x55976baa74c8 <line:204:9, col:26> col:26 __remaining 'struct timespec *'
|-FunctionDecl 0x55976baa7848 <line:205:1, col:111> col:12 clock_getres 'int (clockid_t, struct timespec *)' extern
| |-ParmVarDecl 0x55976baa76d8 <col:26, col:36> col:36 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x55976baa7768 <col:48, col:65> col:65 __res 'struct timespec *'
| `-NoThrowAttr 0x55976baa78f8 <col:88>
|-FunctionDecl 0x55976baa7a90 <line:206:1, col:111> col:12 clock_gettime 'int (clockid_t, struct timespec *)' extern
| |-ParmVarDecl 0x55976baa7960 <col:27, col:37> col:37 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x55976baa79f0 <col:49, col:66> col:66 __tp 'struct timespec *'
| `-NoThrowAttr 0x55976baa7b40 <col:88>
|-FunctionDecl 0x55976baa7d58 <line:207:1, line:208:45> line:207:12 clock_settime 'int (clockid_t, const struct timespec *)' extern
| |-ParmVarDecl 0x55976baa7ba8 <col:27, col:37> col:37 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x55976baa7c38 <col:49, col:72> col:72 __tp 'const struct timespec *'
| `-NoThrowAttr 0x55976baa7e08 <line:208:22>
|-FunctionDecl 0x55976baa8178 <line:209:1, line:211:30> line:209:12 clock_nanosleep 'int (clockid_t, int, const struct timespec *, struct timespec *)' extern
| |-ParmVarDecl 0x55976baa7e70 <col:29, col:39> col:39 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x55976baa7ef0 <col:51, col:55> col:55 __flags 'int'
| |-ParmVarDecl 0x55976baa7f80 <line:210:8, col:31> col:31 __req 'const struct timespec *'
| `-ParmVarDecl 0x55976baa8010 <line:211:8, col:25> col:25 __rem 'struct timespec *'
|-FunctionDecl 0x55976baa8478 <line:212:1, col:108> col:12 clock_getcpuclockid 'int (pid_t, clockid_t *)' extern
| |-ParmVarDecl 0x55976baa8278 <col:33, col:39> col:39 __pid 'pid_t':'int'
| |-ParmVarDecl 0x55976baa8350 <col:46, col:57> col:57 __clock_id 'clockid_t *'
| `-NoThrowAttr 0x55976baa8528 <col:85>
|-FunctionDecl 0x55976baa8918 <line:213:1, line:215:75> line:213:12 timer_create 'int (clockid_t, struct sigevent *restrict, timer_t *restrict)' extern
| |-ParmVarDecl 0x55976baa8590 <col:26, col:36> col:36 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x55976baa86c8 <line:214:5, col:33> col:33 __evp 'struct sigevent *restrict'
| |-ParmVarDecl 0x55976baa87d0 <line:215:5, col:25> col:25 __timerid 'timer_t *restrict'
| `-NoThrowAttr 0x55976baa89d0 <col:52>
|-FunctionDecl 0x55976baa8b48 <line:216:1, col:84> col:12 timer_delete 'int (timer_t)' extern
| |-ParmVarDecl 0x55976baa8a38 <col:26, col:34> col:34 __timerid 'timer_t':'void *'
| `-NoThrowAttr 0x55976baa8bf0 <col:61>
|-FunctionDecl 0x55976baa90f0 <line:217:1, line:219:85> line:217:12 timer_settime 'int (timer_t, int, const struct itimerspec *restrict, struct itimerspec *restrict)' extern
| |-ParmVarDecl 0x55976baa8c58 <col:27, col:35> col:35 __timerid 'timer_t':'void *'
| |-ParmVarDecl 0x55976baa8cd8 <col:46, col:50> col:50 __flags 'int'
| |-ParmVarDecl 0x55976baa8e08 <line:218:6, col:42> col:42 __value 'const struct itimerspec *restrict'
| |-ParmVarDecl 0x55976baa8ef8 <line:219:6, col:36> col:36 __ovalue 'struct itimerspec *restrict'
| `-NoThrowAttr 0x55976baa91b0 <col:62>
|-FunctionDecl 0x55976baa93c8 <line:220:1, line:221:45> line:220:12 timer_gettime 'int (timer_t, struct itimerspec *)' extern
| |-ParmVarDecl 0x55976baa9218 <col:27, col:35> col:35 __timerid 'timer_t':'void *'
| |-ParmVarDecl 0x55976baa92a8 <col:46, col:65> col:65 __value 'struct itimerspec *'
| `-NoThrowAttr 0x55976baa9478 <line:221:22>
|-FunctionDecl 0x55976baa9578 <line:222:1, col:88> col:12 timer_getoverrun 'int (timer_t)' extern
| |-ParmVarDecl 0x55976baa94e0 <col:30, col:38> col:38 __timerid 'timer_t':'void *'
| `-NoThrowAttr 0x55976baa9620 <col:65>
|-TypedefDecl 0x55976baa9690 <line:224:1, col:27> col:27 referenced pthread_t 'unsigned long'
| `-BuiltinType 0x55976ba33fd0 'unsigned long'
|-RecordDecl 0x55976baa96e8 <line:225:1, line:229:1> line:225:7 union pthread_attr_t definition
| |-FieldDecl 0x55976baa9830 <line:227:3, col:17> col:8 __size 'char [56]'
| `-FieldDecl 0x55976baa9898 <line:228:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x55976baa9948 <line:230:1, col:30> col:30 referenced pthread_attr_t 'union pthread_attr_t':'union pthread_attr_t'
| `-ElaboratedType 0x55976baa98f0 'union pthread_attr_t' sugar
|   `-RecordType 0x55976baa9770 'union pthread_attr_t'
|     `-Record 0x55976baa96e8 'pthread_attr_t'
|-RecordDecl 0x55976baa99a0 <line:231:9, line:235:1> line:231:16 struct __pthread_internal_list definition
| |-FieldDecl 0x55976baa9b18 <line:233:3, col:35> col:35 __prev 'struct __pthread_internal_list *'
| `-FieldDecl 0x55976baa9b90 <line:234:3, col:35> col:35 __next 'struct __pthread_internal_list *'
|-TypedefDecl 0x55976baa9c40 <line:231:1, line:235:3> col:3 referenced __pthread_list_t 'struct __pthread_internal_list':'struct __pthread_internal_list'
| `-ElaboratedType 0x55976baa9be0 'struct __pthread_internal_list' sugar
|   `-RecordType 0x55976baa9a20 'struct __pthread_internal_list'
|     `-Record 0x55976baa99a0 '__pthread_internal_list'
|-RecordDecl 0x55976baa9cb0 <line:236:9, line:250:1> line:236:9 union definition
| |-RecordDecl 0x55976baa9d58 parent 0x55976ba33e18 <line:238:3, line:247:3> line:238:10 struct __pthread_mutex_s definition
| | |-FieldDecl 0x55976baa9e30 <line:240:5, col:9> col:9 __lock 'int'
| | |-FieldDecl 0x55976baa9e98 <line:241:5, col:18> col:18 __count 'unsigned int'
| | |-FieldDecl 0x55976baa9f00 <line:242:5, col:9> col:9 __owner 'int'
| | |-FieldDecl 0x55976baa9f68 <line:243:5, col:18> col:18 __nusers 'unsigned int'
| | |-FieldDecl 0x55976baa9fd0 <line:244:5, col:9> col:9 __kind 'int'
| | |-FieldDecl 0x55976baaa038 <line:245:5, col:9> col:9 __spins 'int'
| | `-FieldDecl 0x55976baae110 <line:246:5, col:22> col:22 __list '__pthread_list_t':'struct __pthread_internal_list'
| |-FieldDecl 0x55976baae1c0 <line:238:3, line:247:5> col:5 __data 'struct __pthread_mutex_s':'struct __pthread_mutex_s'
| |-FieldDecl 0x55976baae2b0 <line:248:3, col:17> col:8 __size 'char [40]'
| `-FieldDecl 0x55976baae318 <line:249:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x55976baae4a0 <line:236:1, line:250:3> col:3 referenced pthread_mutex_t 'union pthread_mutex_t':'pthread_mutex_t'
| `-ElaboratedType 0x55976baae440 'union pthread_mutex_t' sugar
|   `-RecordType 0x55976baa9d30 'pthread_mutex_t'
|     `-Record 0x55976baa9cb0 ''
|-RecordDecl 0x55976baae510 <line:251:9, line:255:1> line:251:9 union definition
| |-FieldDecl 0x55976baae650 <line:253:3, col:16> col:8 __size 'char [4]'
| `-FieldDecl 0x55976baae6b8 <line:254:3, col:7> col:7 __align 'int'
|-TypedefDecl 0x55976baae770 <line:251:1, line:255:3> col:3 referenced pthread_mutexattr_t 'union pthread_mutexattr_t':'pthread_mutexattr_t'
| `-ElaboratedType 0x55976baae710 'union pthread_mutexattr_t' sugar
|   `-RecordType 0x55976baae590 'pthread_mutexattr_t'
|     `-Record 0x55976baae510 ''
|-RecordDecl 0x55976baae7e0 <line:256:9, line:271:1> line:256:9 union definition
| |-RecordDecl 0x55976baae888 <line:258:3, line:268:3> line:258:3 struct definition
| | |-FieldDecl 0x55976baae950 <line:260:5, col:9> col:9 __lock 'int'
| | |-FieldDecl 0x55976baae9b8 <line:261:5, col:18> col:18 __futex 'unsigned int'
| | |-FieldDecl 0x55976baaea20 <line:262:19, col:42> col:42 __total_seq 'unsigned long long'
| | |-FieldDecl 0x55976baaea88 <line:263:19, col:42> col:42 __wakeup_seq 'unsigned long long'
| | |-FieldDecl 0x55976baaeaf0 <line:264:19, col:42> col:42 __woken_seq 'unsigned long long'
| | |-FieldDecl 0x55976baaeb58 <line:265:5, col:11> col:11 __mutex 'void *'
| | |-FieldDecl 0x55976baaebc0 <line:266:5, col:18> col:18 __nwaiters 'unsigned int'
| | `-FieldDecl 0x55976baaec28 <line:267:5, col:18> col:18 __broadcast_seq 'unsigned int'
| |-FieldDecl 0x55976baaece0 <line:258:3, line:268:5> col:5 __data 'struct (anonymous struct at ./split_2/mix041_rmo.oepc_false-unreach-call.i:258:3)':'struct pthread_cond_t::(anonymous at ./split_2/mix041_rmo.oepc_false-unreach-call.i:258:3)'
| |-FieldDecl 0x55976baaedd0 <line:269:3, col:17> col:8 __size 'char [48]'
| `-FieldDecl 0x55976baaee38 <line:270:17, col:31> col:31 __align 'long long'
|-TypedefDecl 0x55976baaef70 <line:256:1, line:271:3> col:3 referenced pthread_cond_t 'union pthread_cond_t':'pthread_cond_t'
| `-ElaboratedType 0x55976baaef10 'union pthread_cond_t' sugar
|   `-RecordType 0x55976baae860 'pthread_cond_t'
|     `-Record 0x55976baae7e0 ''
|-RecordDecl 0x55976baaefe0 <line:272:9, line:276:1> line:272:9 union definition
| |-FieldDecl 0x55976bab0130 <line:274:3, col:16> col:8 __size 'char [4]'
| `-FieldDecl 0x55976bab0198 <line:275:3, col:7> col:7 __align 'int'
|-TypedefDecl 0x55976bab0250 <line:272:1, line:276:3> col:3 referenced pthread_condattr_t 'union pthread_condattr_t':'pthread_condattr_t'
| `-ElaboratedType 0x55976bab01f0 'union pthread_condattr_t' sugar
|   `-RecordType 0x55976baaf060 'pthread_condattr_t'
|     `-Record 0x55976baaefe0 ''
|-TypedefDecl 0x55976bab02d8 <line:277:1, col:22> col:22 referenced pthread_key_t 'unsigned int'
| `-BuiltinType 0x55976ba33fb0 'unsigned int'
|-TypedefDecl 0x55976bab0348 <line:278:1, col:13> col:13 referenced pthread_once_t 'int'
| `-BuiltinType 0x55976ba33f10 'int'
|-RecordDecl 0x55976bab03a0 <line:279:9, line:297:1> line:279:9 union definition
| |-RecordDecl 0x55976bab0448 <line:281:3, line:294:3> line:281:3 struct definition
| | |-FieldDecl 0x55976bab0510 <line:283:5, col:9> col:9 __lock 'int'
| | |-FieldDecl 0x55976bab0578 <line:284:5, col:18> col:18 __nr_readers 'unsigned int'
| | |-FieldDecl 0x55976bab05e0 <line:285:5, col:18> col:18 __readers_wakeup 'unsigned int'
| | |-FieldDecl 0x55976bab0648 <line:286:5, col:18> col:18 __writer_wakeup 'unsigned int'
| | |-FieldDecl 0x55976bab06b0 <line:287:5, col:18> col:18 __nr_readers_queued 'unsigned int'
| | |-FieldDecl 0x55976bab0718 <line:288:5, col:18> col:18 __nr_writers_queued 'unsigned int'
| | |-FieldDecl 0x55976bab0780 <line:289:5, col:9> col:9 __writer 'int'
| | |-FieldDecl 0x55976bab07e8 <line:290:5, col:9> col:9 __shared 'int'
| | |-FieldDecl 0x55976bab0850 <line:291:5, col:23> col:23 __pad1 'unsigned long'
| | |-FieldDecl 0x55976bab08b8 <line:292:5, col:23> col:23 __pad2 'unsigned long'
| | `-FieldDecl 0x55976bab0920 <line:293:5, col:18> col:18 __flags 'unsigned int'
| |-FieldDecl 0x55976bab09d0 <line:281:3, line:294:5> col:5 __data 'struct (anonymous struct at ./split_2/mix041_rmo.oepc_false-unreach-call.i:281:3)':'struct pthread_rwlock_t::(anonymous at ./split_2/mix041_rmo.oepc_false-unreach-call.i:281:3)'
| |-FieldDecl 0x55976bab0a78 <line:295:3, col:17> col:8 __size 'char [56]'
| `-FieldDecl 0x55976bab0ae0 <line:296:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x55976bab0c30 <line:279:1, line:297:3> col:3 referenced pthread_rwlock_t 'union pthread_rwlock_t':'pthread_rwlock_t'
| `-ElaboratedType 0x55976bab0bd0 'union pthread_rwlock_t' sugar
|   `-RecordType 0x55976bab0420 'pthread_rwlock_t'
|     `-Record 0x55976bab03a0 ''
|-RecordDecl 0x55976bab0ca0 <line:298:9, line:302:1> line:298:9 union definition
| |-FieldDecl 0x55976bab0de0 <line:300:3, col:16> col:8 __size 'char [8]'
| `-FieldDecl 0x55976bab0e48 <line:301:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x55976bab0f00 <line:298:1, line:302:3> col:3 referenced pthread_rwlockattr_t 'union pthread_rwlockattr_t':'pthread_rwlockattr_t'
| `-ElaboratedType 0x55976bab0ea0 'union pthread_rwlockattr_t' sugar
|   `-RecordType 0x55976bab0d20 'pthread_rwlockattr_t'
|     `-Record 0x55976bab0ca0 ''
|-TypedefDecl 0x55976bab0f88 <line:303:1, col:22> col:22 referenced pthread_spinlock_t 'volatile int'
| `-QualType 0x55976ba33f14 'volatile int' volatile
|   `-BuiltinType 0x55976ba33f10 'int'
|-RecordDecl 0x55976bab0fe0 <line:304:9, line:308:1> line:304:9 union definition
| |-FieldDecl 0x55976bab2140 <line:306:3, col:17> col:8 __size 'char [32]'
| `-FieldDecl 0x55976bab21a8 <line:307:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x55976bab2260 <line:304:1, line:308:3> col:3 referenced pthread_barrier_t 'union pthread_barrier_t':'pthread_barrier_t'
| `-ElaboratedType 0x55976bab2200 'union pthread_barrier_t' sugar
|   `-RecordType 0x55976bab1060 'pthread_barrier_t'
|     `-Record 0x55976bab0fe0 ''
|-RecordDecl 0x55976bab22d0 <line:309:9, line:313:1> line:309:9 union definition
| |-FieldDecl 0x55976bab23d0 <line:311:3, col:16> col:8 __size 'char [4]'
| `-FieldDecl 0x55976bab2438 <line:312:3, col:7> col:7 __align 'int'
|-TypedefDecl 0x55976bab24f0 <line:309:1, line:313:3> col:3 referenced pthread_barrierattr_t 'union pthread_barrierattr_t':'pthread_barrierattr_t'
| `-ElaboratedType 0x55976bab2490 'union pthread_barrierattr_t' sugar
|   `-RecordType 0x55976bab2350 'pthread_barrierattr_t'
|     `-Record 0x55976bab22d0 ''
|-TypedefDecl 0x55976bab2608 <line:314:1, col:29> col:18 referenced __jmp_buf 'long [8]'
| `-ConstantArrayType 0x55976bab25a0 'long [8]' 8 
|   `-BuiltinType 0x55976ba33f30 'long'
|-EnumDecl 0x55976bab2660 <line:315:1, line:319:1> line:315:1
| |-EnumConstantDecl 0x55976bab2728 <line:317:3> col:3 PTHREAD_CREATE_JOINABLE 'int'
| `-EnumConstantDecl 0x55976bab2778 <line:318:3> col:3 PTHREAD_CREATE_DETACHED 'int'
|-EnumDecl 0x55976bab27c8 <line:320:1, line:331:1> line:320:1
| |-EnumConstantDecl 0x55976bab2898 <line:322:3> col:3 referenced PTHREAD_MUTEX_TIMED_NP 'int'
| |-EnumConstantDecl 0x55976bab28e8 <line:323:3> col:3 referenced PTHREAD_MUTEX_RECURSIVE_NP 'int'
| |-EnumConstantDecl 0x55976bab2938 <line:324:3> col:3 referenced PTHREAD_MUTEX_ERRORCHECK_NP 'int'
| |-EnumConstantDecl 0x55976bab2988 <line:325:3> col:3 PTHREAD_MUTEX_ADAPTIVE_NP 'int'
| |-EnumConstantDecl 0x55976bab2a10 <line:327:3, col:26> col:3 referenced PTHREAD_MUTEX_NORMAL 'int'
| | `-ConstantExpr 0x55976bab29f8 <col:26> 'int'
| |   `-DeclRefExpr 0x55976bab29d8 <col:26> 'int' EnumConstant 0x55976bab2898 'PTHREAD_MUTEX_TIMED_NP' 'int'
| |-EnumConstantDecl 0x55976bab2a98 <line:328:3, col:29> col:3 PTHREAD_MUTEX_RECURSIVE 'int'
| | `-ConstantExpr 0x55976bab2a80 <col:29> 'int'
| |   `-DeclRefExpr 0x55976bab2a60 <col:29> 'int' EnumConstant 0x55976bab28e8 'PTHREAD_MUTEX_RECURSIVE_NP' 'int'
| |-EnumConstantDecl 0x55976bab2b20 <line:329:3, col:30> col:3 PTHREAD_MUTEX_ERRORCHECK 'int'
| | `-ConstantExpr 0x55976bab2b08 <col:30> 'int'
| |   `-DeclRefExpr 0x55976bab2ae8 <col:30> 'int' EnumConstant 0x55976bab2938 'PTHREAD_MUTEX_ERRORCHECK_NP' 'int'
| `-EnumConstantDecl 0x55976bab2ba8 <line:330:3, col:27> col:3 PTHREAD_MUTEX_DEFAULT 'int'
|   `-ConstantExpr 0x55976bab2b90 <col:27> 'int'
|     `-DeclRefExpr 0x55976bab2b70 <col:27> 'int' EnumConstant 0x55976bab2a10 'PTHREAD_MUTEX_NORMAL' 'int'
|-EnumDecl 0x55976bab2bf8 <line:332:1, line:338:1> line:332:1
| |-EnumConstantDecl 0x55976bab2cc8 <line:334:3> col:3 referenced PTHREAD_MUTEX_STALLED 'int'
| |-EnumConstantDecl 0x55976bab2d50 <line:335:3, col:30> col:3 PTHREAD_MUTEX_STALLED_NP 'int'
| | `-ConstantExpr 0x55976bab2d38 <col:30> 'int'
| |   `-DeclRefExpr 0x55976bab2d18 <col:30> 'int' EnumConstant 0x55976bab2cc8 'PTHREAD_MUTEX_STALLED' 'int'
| |-EnumConstantDecl 0x55976bab2da0 <line:336:3> col:3 referenced PTHREAD_MUTEX_ROBUST 'int'
| `-EnumConstantDecl 0x55976bab2e28 <line:337:3, col:29> col:3 PTHREAD_MUTEX_ROBUST_NP 'int'
|   `-ConstantExpr 0x55976bab2e10 <col:29> 'int'
|     `-DeclRefExpr 0x55976bab2df0 <col:29> 'int' EnumConstant 0x55976bab2da0 'PTHREAD_MUTEX_ROBUST' 'int'
|-EnumDecl 0x55976bab2e78 <line:339:1, line:344:1> line:339:1
| |-EnumConstantDecl 0x55976bab2f48 <line:341:3> col:3 PTHREAD_PRIO_NONE 'int'
| |-EnumConstantDecl 0x55976bab2f98 <line:342:3> col:3 PTHREAD_PRIO_INHERIT 'int'
| `-EnumConstantDecl 0x55976bab2fe8 <line:343:3> col:3 PTHREAD_PRIO_PROTECT 'int'
|-EnumDecl 0x55976bab3038 <line:345:1, line:351:1> line:345:1
| |-EnumConstantDecl 0x55976bab3150 <line:347:3> col:3 referenced PTHREAD_RWLOCK_PREFER_READER_NP 'int'
| |-EnumConstantDecl 0x55976bab31a0 <line:348:3> col:3 PTHREAD_RWLOCK_PREFER_WRITER_NP 'int'
| |-EnumConstantDecl 0x55976bab31f0 <line:349:3> col:3 PTHREAD_RWLOCK_PREFER_WRITER_NONRECURSIVE_NP 'int'
| `-EnumConstantDecl 0x55976bab3278 <line:350:3, col:31> col:3 PTHREAD_RWLOCK_DEFAULT_NP 'int'
|   `-ConstantExpr 0x55976bab3260 <col:31> 'int'
|     `-DeclRefExpr 0x55976bab3240 <col:31> 'int' EnumConstant 0x55976bab3150 'PTHREAD_RWLOCK_PREFER_READER_NP' 'int'
|-EnumDecl 0x55976bab32c8 <line:352:1, line:356:1> line:352:1
| |-EnumConstantDecl 0x55976bab3398 <line:354:3> col:3 PTHREAD_INHERIT_SCHED 'int'
| `-EnumConstantDecl 0x55976bab33e8 <line:355:3> col:3 PTHREAD_EXPLICIT_SCHED 'int'
|-EnumDecl 0x55976bab3438 <line:357:1, line:361:1> line:357:1
| |-EnumConstantDecl 0x55976bab3508 <line:359:3> col:3 PTHREAD_SCOPE_SYSTEM 'int'
| `-EnumConstantDecl 0x55976bab3558 <line:360:3> col:3 PTHREAD_SCOPE_PROCESS 'int'
|-EnumDecl 0x55976bab35a8 <line:362:1, line:366:1> line:362:1
| |-EnumConstantDecl 0x55976bab3678 <line:364:3> col:3 PTHREAD_PROCESS_PRIVATE 'int'
| `-EnumConstantDecl 0x55976bab36c8 <line:365:3> col:3 PTHREAD_PROCESS_SHARED 'int'
|-RecordDecl 0x55976bab3718 <line:367:1, line:373:1> line:367:8 struct _pthread_cleanup_buffer definition
| |-FieldDecl 0x55976bab3958 <line:369:3, col:28> col:10 __routine 'void (*)(void *)'
| |-FieldDecl 0x55976bab39c0 <line:370:3, col:9> col:9 __arg 'void *'
| |-FieldDecl 0x55976bab3a28 <line:371:3, col:7> col:7 __canceltype 'int'
| `-FieldDecl 0x55976bab3b48 <line:372:3, col:35> col:35 __prev 'struct _pthread_cleanup_buffer *'
|-EnumDecl 0x55976bab3b98 <line:374:1, line:378:1> line:374:1
| |-EnumConstantDecl 0x55976bab3c68 <line:376:3> col:3 PTHREAD_CANCEL_ENABLE 'int'
| `-EnumConstantDecl 0x55976bab3cb8 <line:377:3> col:3 PTHREAD_CANCEL_DISABLE 'int'
|-EnumDecl 0x55976bab3d08 <line:379:1, line:383:1> line:379:1
| |-EnumConstantDecl 0x55976bab3dd8 <line:381:3> col:3 PTHREAD_CANCEL_DEFERRED 'int'
| `-EnumConstantDecl 0x55976bab3e28 <line:382:3> col:3 PTHREAD_CANCEL_ASYNCHRONOUS 'int'
|-FunctionDecl 0x55976bab4488 <line:385:1, line:388:96> line:385:12 used pthread_create 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' extern
| |-ParmVarDecl 0x55976bab3f20 <col:28, col:50> col:50 __newthread 'pthread_t *restrict'
| |-ParmVarDecl 0x55976bab4030 <line:386:7, col:40> col:40 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x55976bab4270 <line:387:7, col:39> col:15 __start_routine 'void *(*)(void *)'
| |-ParmVarDecl 0x55976bab42f0 <line:388:7, col:24> col:24 __arg 'void *restrict'
| |-NoThrowAttr 0x55976bab4548 <col:47>
| |-NonNullAttr 0x55976bab45a0 <col:77, col:94> 1 3
| `-CallbackAttr 0x55976bab45d8 <line:385:12> Implicit 2 3
|-FunctionDecl 0x55976bab4700 <line:389:1, col:72> col:13 pthread_exit 'void (void *) __attribute__((noreturn))' extern
| `-ParmVarDecl 0x55976bab4630 <col:27, col:33> col:33 __retval 'void *'
|-FunctionDecl 0x55976bab4958 <line:390:1, col:64> col:12 pthread_join 'int (pthread_t, void **)' extern
| |-ParmVarDecl 0x55976bab47b8 <col:26, col:36> col:36 __th 'pthread_t':'unsigned long'
| `-ParmVarDecl 0x55976bab4838 <col:42, col:49> col:49 __thread_return 'void **'
|-FunctionDecl 0x55976bab4b28 <line:391:1, col:83> col:12 pthread_detach 'int (pthread_t)' extern
| |-ParmVarDecl 0x55976bab4a18 <col:28, col:38> col:38 __th 'pthread_t':'unsigned long'
| `-NoThrowAttr 0x55976bab4bd0 <col:60>
|-FunctionDecl 0x55976bab4d20 <line:392:1, col:105> col:18 pthread_self 'pthread_t (void)' extern
| |-NoThrowAttr 0x55976bab4dc0 <col:54>
| `-ConstAttr 0x55976bab4e18 <col:95>
|-FunctionDecl 0x55976bab4fe8 <line:393:1, line:394:70> line:393:12 pthread_equal 'int (pthread_t, pthread_t)' extern
| |-ParmVarDecl 0x55976bab4e50 <col:27, col:37> col:37 __thread1 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x55976bab4ec8 <col:48, col:58> col:58 __thread2 'pthread_t':'unsigned long'
| |-NoThrowAttr 0x55976bab5098 <line:394:19>
| `-ConstAttr 0x55976bab50f0 <col:60>
|-FunctionDecl 0x55976bab6b08 <line:395:1, col:128> col:12 pthread_attr_init 'int (pthread_attr_t *)' extern
| |-ParmVarDecl 0x55976bab69d0 <col:31, col:47> col:47 __attr 'pthread_attr_t *'
| |-NoThrowAttr 0x55976bab6bb0 <col:71>
| `-NonNullAttr 0x55976bab6c08 <col:112, col:126> 1
|-FunctionDecl 0x55976bab6d10 <line:396:1, line:397:79> line:396:12 pthread_attr_destroy 'int (pthread_attr_t *)' extern
| |-ParmVarDecl 0x55976bab6c58 <col:34, col:50> col:50 __attr 'pthread_attr_t *'
| |-NoThrowAttr 0x55976bab6db8 <line:397:22>
| `-NonNullAttr 0x55976bab6e10 <col:63, col:77> 1
|-FunctionDecl 0x55976bab7038 <line:398:1, line:400:82> line:398:12 pthread_attr_getdetachstate 'int (const pthread_attr_t *, int *)' extern
| |-ParmVarDecl 0x55976bab6e58 <col:41, col:63> col:63 __attr 'const pthread_attr_t *'
| |-ParmVarDecl 0x55976bab6ed8 <line:399:6, col:11> col:11 __detachstate 'int *'
| |-NoThrowAttr 0x55976bab70e8 <line:400:22>
| `-NonNullAttr 0x55976bab7140 <col:63, col:80> 1 2
|-FunctionDecl 0x55976bab7348 <line:401:1, line:403:79> line:401:12 pthread_attr_setdetachstate 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x55976bab7188 <col:41, col:57> col:57 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x55976bab7208 <line:402:6, col:10> col:10 __detachstate 'int'
| |-NoThrowAttr 0x55976bab73f8 <line:403:22>
| `-NonNullAttr 0x55976bab7450 <col:63, col:77> 1
|-FunctionDecl 0x55976bab76a8 <line:404:1, line:406:82> line:404:12 pthread_attr_getguardsize 'int (const pthread_attr_t *, size_t *)' extern
| |-ParmVarDecl 0x55976bab7498 <col:39, col:61> col:61 __attr 'const pthread_attr_t *'
| |-ParmVarDecl 0x55976bab7540 <line:405:11, col:19> col:19 __guardsize 'size_t *'
| |-NoThrowAttr 0x55976bab7758 <line:406:22>
| `-NonNullAttr 0x55976bab77b0 <col:63, col:80> 1 2
|-FunctionDecl 0x55976bab89e8 <line:407:1, line:409:79> line:407:12 pthread_attr_setguardsize 'int (pthread_attr_t *, size_t)' extern
| |-ParmVarDecl 0x55976bab77f8 <col:39, col:55> col:55 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x55976bab7870 <line:408:11, col:18> col:18 __guardsize 'size_t':'unsigned long'
| |-NoThrowAttr 0x55976bab8a98 <line:409:22>
| `-NonNullAttr 0x55976bab8af0 <col:63, col:77> 1
|-FunctionDecl 0x55976bab8d28 <line:410:1, line:412:82> line:410:12 pthread_attr_getschedparam 'int (const pthread_attr_t *restrict, struct sched_param *restrict)' extern
| |-ParmVarDecl 0x55976bab8b38 <col:40, col:73> col:73 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x55976bab8bc8 <line:411:12, col:43> col:43 __param 'struct sched_param *restrict'
| |-NoThrowAttr 0x55976bab8dd8 <line:412:22>
| `-NonNullAttr 0x55976bab8e30 <col:63, col:80> 1 2
|-FunctionDecl 0x55976bab9068 <line:413:1, line:415:97> line:413:12 pthread_attr_setschedparam 'int (pthread_attr_t *restrict, const struct sched_param *restrict)' extern
| |-ParmVarDecl 0x55976bab8e78 <col:40, col:67> col:67 __attr 'pthread_attr_t *restrict'
| |-ParmVarDecl 0x55976bab8f08 <line:414:12, line:415:12> col:12 __param 'const struct sched_param *restrict'
| |-NoThrowAttr 0x55976bab9118 <col:37>
| `-NonNullAttr 0x55976bab9170 <col:78, col:95> 1 2
|-FunctionDecl 0x55976bab9358 <line:416:1, line:418:82> line:416:12 pthread_attr_getschedpolicy 'int (const pthread_attr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x55976bab91b8 <col:41, line:417:6> col:6 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x55976bab9238 <col:14, col:30> col:30 __policy 'int *restrict'
| |-NoThrowAttr 0x55976bab9408 <line:418:22>
| `-NonNullAttr 0x55976bab9460 <col:63, col:80> 1 2
|-FunctionDecl 0x55976bab95e8 <line:419:1, line:420:79> line:419:12 pthread_attr_setschedpolicy 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x55976bab94a8 <col:41, col:57> col:57 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x55976bab9528 <col:65, col:69> col:69 __policy 'int'
| |-NoThrowAttr 0x55976bab9698 <line:420:22>
| `-NonNullAttr 0x55976bab96f0 <col:63, col:77> 1
|-FunctionDecl 0x55976bab9898 <line:421:1, line:423:82> line:421:12 pthread_attr_getinheritsched 'int (const pthread_attr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x55976bab9738 <col:42, line:422:7> col:7 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x55976bab97b8 <col:15, col:31> col:31 __inherit 'int *restrict'
| |-NoThrowAttr 0x55976bab9948 <line:423:22>
| `-NonNullAttr 0x55976bab99c0 <col:63, col:80> 1 2
|-FunctionDecl 0x55976bab9b48 <line:424:1, line:426:79> line:424:12 pthread_attr_setinheritsched 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x55976bab9a08 <col:42, col:58> col:58 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x55976bab9a88 <line:425:7, col:11> col:11 __inherit 'int'
| |-NoThrowAttr 0x55976bab9bf8 <line:426:22>
| `-NonNullAttr 0x55976bab9c50 <col:63, col:77> 1
|-FunctionDecl 0x55976bab9df8 <line:427:1, line:429:82> line:427:12 pthread_attr_getscope 'int (const pthread_attr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x55976bab9c98 <col:35, col:68> col:68 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x55976bab9d18 <line:428:7, col:23> col:23 __scope 'int *restrict'
| |-NoThrowAttr 0x55976bab9ea8 <line:429:22>
| `-NonNullAttr 0x55976bab9f00 <col:63, col:80> 1 2
|-FunctionDecl 0x55976baba088 <line:430:1, line:431:79> line:430:12 pthread_attr_setscope 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x55976bab9f48 <col:35, col:51> col:51 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x55976bab9fc8 <col:59, col:63> col:63 __scope 'int'
| |-NoThrowAttr 0x55976baba138 <line:431:22>
| `-NonNullAttr 0x55976baba190 <col:63, col:77> 1
|-FunctionDecl 0x55976baba3b8 <line:432:1, line:434:115> line:432:12 pthread_attr_getstackaddr 'int (const pthread_attr_t *restrict, void **restrict)' extern
| |-ParmVarDecl 0x55976baba1d8 <col:39, line:433:11> col:11 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x55976baba258 <col:19, col:37> col:37 __stackaddr 'void **restrict'
| |-NoThrowAttr 0x55976baba468 <line:434:22>
| |-NonNullAttr 0x55976baba4c0 <col:63, col:80> 1 2
| `-DeprecatedAttr 0x55976baba4f8 <col:100> "" ""
|-FunctionDecl 0x55976baba708 <line:435:1, line:437:112> line:435:12 pthread_attr_setstackaddr 'int (pthread_attr_t *, void *)' extern
| |-ParmVarDecl 0x55976baba548 <col:39, col:55> col:55 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x55976baba5c8 <line:436:11, col:17> col:17 __stackaddr 'void *'
| |-NoThrowAttr 0x55976baba7b8 <line:437:22>
| |-NonNullAttr 0x55976baba810 <col:63, col:77> 1
| `-DeprecatedAttr 0x55976baba848 <col:97> "" ""
|-FunctionDecl 0x55976babaa48 <line:438:1, line:440:82> line:438:12 pthread_attr_getstacksize 'int (const pthread_attr_t *restrict, size_t *restrict)' extern
| |-ParmVarDecl 0x55976baba898 <col:39, line:439:11> col:11 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x55976baba910 <col:19, col:38> col:38 __stacksize 'size_t *restrict'
| |-NoThrowAttr 0x55976babaaf8 <line:440:22>
| `-NonNullAttr 0x55976babab50 <col:63, col:80> 1 2
|-FunctionDecl 0x55976babacd0 <line:441:1, line:443:79> line:441:12 pthread_attr_setstacksize 'int (pthread_attr_t *, size_t)' extern
| |-ParmVarDecl 0x55976babab98 <col:39, col:55> col:55 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x55976babac10 <line:442:11, col:18> col:18 __stacksize 'size_t':'unsigned long'
| |-NoThrowAttr 0x55976babad80 <line:443:22>
| `-NonNullAttr 0x55976babadd8 <col:63, col:77> 1
|-FunctionDecl 0x55976babb0c8 <line:444:1, line:447:85> line:444:12 pthread_attr_getstack 'int (const pthread_attr_t *restrict, void **restrict, size_t *restrict)' extern
| |-ParmVarDecl 0x55976babae28 <col:35, col:68> col:68 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x55976babaea8 <line:445:7, col:25> col:25 __stackaddr 'void **restrict'
| |-ParmVarDecl 0x55976babaf20 <line:446:7, col:26> col:26 __stacksize 'size_t *restrict'
| |-NoThrowAttr 0x55976babb180 <line:447:22>
| `-NonNullAttr 0x55976babb1d8 <col:63, col:83> 1 2 3
|-FunctionDecl 0x55976babb488 <line:448:1, line:449:100> line:448:12 pthread_attr_setstack 'int (pthread_attr_t *, void *, size_t)' extern
| |-ParmVarDecl 0x55976babb230 <col:35, col:51> col:51 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x55976babb2b0 <col:59, col:65> col:65 __stackaddr 'void *'
| |-ParmVarDecl 0x55976babb328 <line:449:7, col:14> col:14 __stacksize 'size_t':'unsigned long'
| |-NoThrowAttr 0x55976babb540 <col:43>
| `-NonNullAttr 0x55976babb598 <col:84, col:98> 1
|-FunctionDecl 0x55976babb858 <line:450:1, line:452:79> line:450:12 pthread_setschedparam 'int (pthread_t, int, const struct sched_param *)' extern
| |-ParmVarDecl 0x55976babb5e8 <col:35, col:45> col:45 __target_thread 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x55976babb668 <col:62, col:66> col:66 __policy 'int'
| |-ParmVarDecl 0x55976babb6f8 <line:451:7, col:33> col:33 __param 'const struct sched_param *'
| |-NoThrowAttr 0x55976babb910 <line:452:22>
| `-NonNullAttr 0x55976babb968 <col:63, col:77> 3
|-FunctionDecl 0x55976babbc78 <line:453:1, line:456:82> line:453:12 pthread_getschedparam 'int (pthread_t, int *restrict, struct sched_param *restrict)' extern
| |-ParmVarDecl 0x55976babb9e0 <col:35, col:45> col:45 __target_thread 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x55976babba60 <line:454:7, col:23> col:23 __policy 'int *restrict'
| |-ParmVarDecl 0x55976babbaf0 <line:455:7, col:38> col:38 __param 'struct sched_param *restrict'
| |-NoThrowAttr 0x55976babbd30 <line:456:22>
| `-NonNullAttr 0x55976babbd88 <col:63, col:80> 2 3
|-FunctionDecl 0x55976babbf78 <line:457:1, line:458:45> line:457:12 pthread_setschedprio 'int (pthread_t, int)' extern
| |-ParmVarDecl 0x55976babbdd8 <col:34, col:44> col:44 __target_thread 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x55976babbe58 <col:61, col:65> col:65 __prio 'int'
| `-NoThrowAttr 0x55976babc028 <line:458:22>
|-FunctionDecl 0x55976babc3f8 <line:459:1, line:460:71> line:459:12 pthread_once 'int (pthread_once_t *, void (*)(void))' extern
| |-ParmVarDecl 0x55976babc0f0 <col:26, col:42> col:42 __once_control 'pthread_once_t *'
| |-ParmVarDecl 0x55976babc290 <line:460:5, col:33> col:12 __init_routine 'void (*)(void)'
| `-NonNullAttr 0x55976babc4a8 <col:52, col:69> 1 2
|-FunctionDecl 0x55976babc650 <line:461:1, col:64> col:12 pthread_setcancelstate 'int (int, int *)' extern
| |-ParmVarDecl 0x55976babc530 <col:36, col:40> col:40 __state 'int'
| `-ParmVarDecl 0x55976babc5b0 <col:49, col:54> col:54 __oldstate 'int *'
|-FunctionDecl 0x55976babc838 <line:462:1, col:61> col:12 pthread_setcanceltype 'int (int, int *)' extern
| |-ParmVarDecl 0x55976babc718 <col:35, col:39> col:39 __type 'int'
| `-ParmVarDecl 0x55976babc798 <col:47, col:52> col:52 __oldtype 'int *'
|-FunctionDecl 0x55976babc9f0 <line:463:1, col:42> col:12 pthread_cancel 'int (pthread_t)' extern
| `-ParmVarDecl 0x55976babc8f8 <col:28, col:38> col:38 __th 'pthread_t':'unsigned long'
|-FunctionDecl 0x55976babcb30 <line:464:1, col:37> col:13 pthread_testcancel 'void (void)' extern
|-RecordDecl 0x55976babcbd0 <line:465:9, line:473:1> line:465:9 struct definition
| |-RecordDecl 0x55976babcc78 <line:467:3, line:471:3> line:467:3 struct definition
| | |-FieldDecl 0x55976babcd68 <line:469:5, col:15> col:15 __cancel_jmp_buf '__jmp_buf':'long [8]'
| | `-FieldDecl 0x55976babcdd0 <line:470:5, col:9> col:9 __mask_was_saved 'int'
| |-FieldDecl 0x55976babcfa0 <line:467:3, line:471:23> col:5 __cancel_jmp_buf 'struct (anonymous struct at ./split_2/mix041_rmo.oepc_false-unreach-call.i:467:3) [1]'
| `-FieldDecl 0x55976babd098 <line:472:3, col:16> col:9 __pad 'void *[4]'
|-TypedefDecl 0x55976babd150 <line:465:1, line:473:3> col:3 referenced __pthread_unwind_buf_t 'struct __pthread_unwind_buf_t':'__pthread_unwind_buf_t'
| |-ElaboratedType 0x55976babd0f0 'struct __pthread_unwind_buf_t' sugar
| | `-RecordType 0x55976babcc50 '__pthread_unwind_buf_t'
| |   `-Record 0x55976babcbd0 ''
| `-AlignedAttr 0x55976babd1a8 <col:42> aligned
|   `-<<<NULL>>>
|-RecordDecl 0x55976babd220 <line:474:1, line:480:1> line:474:8 struct __pthread_cleanup_frame definition
| |-FieldDecl 0x55976babd380 <line:476:3, col:35> col:10 __cancel_routine 'void (*)(void *)'
| |-FieldDecl 0x55976babd3e8 <line:477:3, col:9> col:9 __cancel_arg 'void *'
| |-FieldDecl 0x55976babd450 <line:478:3, col:7> col:7 __do_it 'int'
| `-FieldDecl 0x55976babd4b8 <line:479:3, col:7> col:7 __cancel_type 'int'
|-FunctionDecl 0x55976babd6c0 <line:481:1, col:69> col:13 __pthread_register_cancel 'void (__pthread_unwind_buf_t *)' extern
| `-ParmVarDecl 0x55976babd5b0 <col:40, col:64> col:64 __buf '__pthread_unwind_buf_t *'
|-FunctionDecl 0x55976babd808 <line:483:1, col:71> col:13 __pthread_unregister_cancel 'void (__pthread_unwind_buf_t *)' extern
| `-ParmVarDecl 0x55976babd778 <col:42, col:66> col:66 __buf '__pthread_unwind_buf_t *'
|-FunctionDecl 0x55976babda00 <line:485:1, line:487:31> line:485:13 __pthread_unwind_next 'void (__pthread_unwind_buf_t *) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x55976babd8c0 <col:36, col:60> col:60 __buf '__pthread_unwind_buf_t *'
| `-WeakAttr 0x55976babdaa8 <line:487:22>
|-RecordDecl 0x55976babdb00 <line:489:1, col:8> col:8 struct __jmp_buf_tag
|-FunctionDecl 0x55976babde18 <line:490:1, col:98> col:12 __sigsetjmp 'int (struct __jmp_buf_tag *, int)' extern
| |-ParmVarDecl 0x55976babdc78 <col:25, col:47> col:47 __env 'struct __jmp_buf_tag *'
| |-ParmVarDecl 0x55976babdcf8 <col:54, col:58> col:58 __savemask 'int'
| |-NoThrowAttr 0x55976babdec8 <col:86>
| `-ReturnsTwiceAttr 0x55976babdf20 <col:12> Implicit
|-FunctionDecl 0x55976babe248 <line:491:1, line:493:79> line:491:12 pthread_mutex_init 'int (pthread_mutex_t *, const pthread_mutexattr_t *)' extern
| |-ParmVarDecl 0x55976babdff0 <col:32, col:49> col:49 __mutex 'pthread_mutex_t *'
| |-ParmVarDecl 0x55976babe100 <line:492:11, col:38> col:38 __mutexattr 'const pthread_mutexattr_t *'
| |-NoThrowAttr 0x55976babe2f8 <line:493:22>
| `-NonNullAttr 0x55976babe350 <col:63, col:77> 1
|-FunctionDecl 0x55976babe4c8 <line:494:1, line:495:79> line:494:12 pthread_mutex_destroy 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x55976babe398 <col:35, col:52> col:52 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x55976babe570 <line:495:22>
| `-NonNullAttr 0x55976babe5c8 <col:63, col:77> 1
|-FunctionDecl 0x55976babe6d0 <line:496:1, line:497:68> line:496:12 pthread_mutex_trylock 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x55976babe618 <col:35, col:52> col:52 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x55976babe778 <line:497:22>
| `-NonNullAttr 0x55976babe7d0 <col:52, col:66> 1
|-FunctionDecl 0x55976babe8d0 <line:498:1, line:499:68> line:498:12 pthread_mutex_lock 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x55976babe818 <col:32, col:49> col:49 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x55976babe978 <line:499:22>
| `-NonNullAttr 0x55976babe9d0 <col:52, col:66> 1
|-FunctionDecl 0x55976babfc28 <line:500:1, line:502:85> line:500:12 pthread_mutex_timedlock 'int (pthread_mutex_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x55976babfa38 <col:37, col:65> col:65 __mutex 'pthread_mutex_t *restrict'
| |-ParmVarDecl 0x55976babfac8 <line:501:9, line:502:9> col:9 __abstime 'const struct timespec *restrict'
| |-NoThrowAttr 0x55976babfcd8 <col:36>
| `-NonNullAttr 0x55976babfd30 <col:66, col:83> 1 2
|-FunctionDecl 0x55976babfe30 <line:503:1, line:504:68> line:503:12 pthread_mutex_unlock 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x55976babfd78 <col:34, col:51> col:51 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x55976babfed8 <line:504:22>
| `-NonNullAttr 0x55976babff30 <col:52, col:66> 1
|-FunctionDecl 0x55976bac01c8 <line:505:1, line:508:82> line:505:12 pthread_mutex_getprioceiling 'int (const pthread_mutex_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x55976babffe0 <col:42, line:506:18> col:18 __mutex 'const pthread_mutex_t *restrict'
| |-ParmVarDecl 0x55976bac0060 <line:507:7, col:23> col:23 __prioceiling 'int *restrict'
| |-NoThrowAttr 0x55976bac0278 <line:508:22>
| `-NonNullAttr 0x55976bac02d0 <col:63, col:80> 1 2
|-FunctionDecl 0x55976bac0598 <line:509:1, line:512:82> line:509:12 pthread_mutex_setprioceiling 'int (pthread_mutex_t *restrict, int, int *restrict)' extern
| |-ParmVarDecl 0x55976bac0318 <col:42, col:70> col:70 __mutex 'pthread_mutex_t *restrict'
| |-ParmVarDecl 0x55976bac0398 <line:510:7, col:11> col:11 __prioceiling 'int'
| |-ParmVarDecl 0x55976bac0418 <line:511:7, col:23> col:23 __old_ceiling 'int *restrict'
| |-NoThrowAttr 0x55976bac0650 <line:512:22>
| `-NonNullAttr 0x55976bac06a8 <col:63, col:80> 1 3
|-FunctionDecl 0x55976bac07b0 <line:513:1, line:514:79> line:513:12 pthread_mutex_consistent 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x55976bac06f8 <col:38, col:55> col:55 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x55976bac0858 <line:514:22>
| `-NonNullAttr 0x55976bac08b0 <col:63, col:77> 1
|-FunctionDecl 0x55976bac0ad8 <line:515:1, line:516:79> line:515:12 pthread_mutexattr_init 'int (pthread_mutexattr_t *)' extern
| |-ParmVarDecl 0x55976bac0960 <col:36, col:57> col:57 __attr 'pthread_mutexattr_t *'
| |-NoThrowAttr 0x55976bac0b80 <line:516:22>
| `-NonNullAttr 0x55976bac0bd8 <col:63, col:77> 1
|-FunctionDecl 0x55976bac0ce0 <line:517:1, line:518:79> line:517:12 pthread_mutexattr_destroy 'int (pthread_mutexattr_t *)' extern
| |-ParmVarDecl 0x55976bac0c28 <col:39, col:60> col:60 __attr 'pthread_mutexattr_t *'
| |-NoThrowAttr 0x55976bac0d88 <line:518:22>
| `-NonNullAttr 0x55976bac0de0 <col:63, col:77> 1
|-FunctionDecl 0x55976bac1008 <line:519:1, line:522:82> line:519:12 pthread_mutexattr_getpshared 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x55976bac0e28 <col:42, line:520:18> col:18 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x55976bac0ea8 <line:521:7, col:23> col:23 __pshared 'int *restrict'
| |-NoThrowAttr 0x55976bac10b8 <line:522:22>
| `-NonNullAttr 0x55976bac1110 <col:63, col:80> 1 2
|-FunctionDecl 0x55976bac1318 <line:523:1, line:525:79> line:523:12 pthread_mutexattr_setpshared 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x55976bac1158 <col:42, col:63> col:63 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x55976bac11d8 <line:524:7, col:11> col:11 __pshared 'int'
| |-NoThrowAttr 0x55976bac13c8 <line:525:22>
| `-NonNullAttr 0x55976bac1420 <col:63, col:77> 1
|-FunctionDecl 0x55976bac15c8 <line:526:1, line:528:82> line:526:12 pthread_mutexattr_gettype 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x55976bac1468 <col:39, line:527:11> col:11 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x55976bac14e8 <col:19, col:35> col:35 __kind 'int *restrict'
| |-NoThrowAttr 0x55976bac1678 <line:528:22>
| `-NonNullAttr 0x55976bac16d0 <col:63, col:80> 1 2
|-FunctionDecl 0x55976bac1858 <line:529:1, line:530:79> line:529:12 pthread_mutexattr_settype 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x55976bac1718 <col:39, col:60> col:60 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x55976bac1798 <col:68, col:72> col:72 __kind 'int'
| |-NoThrowAttr 0x55976bac1908 <line:530:22>
| `-NonNullAttr 0x55976bac1960 <col:63, col:77> 1
|-FunctionDecl 0x55976bac1b20 <line:531:1, line:534:82> line:531:12 pthread_mutexattr_getprotocol 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x55976bac19a8 <col:43, line:532:19> col:19 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x55976bac1a40 <line:533:8, col:24> col:24 __protocol 'int *restrict'
| |-NoThrowAttr 0x55976bac1bd0 <line:534:22>
| `-NonNullAttr 0x55976bac1c28 <col:63, col:80> 1 2
|-FunctionDecl 0x55976bac1db8 <line:535:1, line:537:79> line:535:12 pthread_mutexattr_setprotocol 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x55976bac1c78 <col:43, col:64> col:64 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x55976bac1cf8 <line:536:8, col:12> col:12 __protocol 'int'
| |-NoThrowAttr 0x55976bac1e68 <line:537:22>
| `-NonNullAttr 0x55976bac1ec0 <col:63, col:77> 1
|-FunctionDecl 0x55976bac2068 <line:538:1, line:541:82> line:538:12 pthread_mutexattr_getprioceiling 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x55976bac1f08 <col:46, line:539:22> col:22 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x55976bac1f88 <line:540:11, col:27> col:27 __prioceiling 'int *restrict'
| |-NoThrowAttr 0x55976bac2118 <line:541:22>
| `-NonNullAttr 0x55976bac2170 <col:63, col:80> 1 2
|-FunctionDecl 0x55976bac22f8 <line:542:1, line:544:79> line:542:12 pthread_mutexattr_setprioceiling 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x55976bac21b8 <col:46, col:67> col:67 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x55976bac2238 <line:543:11, col:15> col:15 __prioceiling 'int'
| |-NoThrowAttr 0x55976bac23a8 <line:544:22>
| `-NonNullAttr 0x55976bac2400 <col:63, col:77> 1
|-FunctionDecl 0x55976bac25e8 <line:545:1, line:547:82> line:545:12 pthread_mutexattr_getrobust 'int (const pthread_mutexattr_t *, int *)' extern
| |-ParmVarDecl 0x55976bac2448 <col:41, col:68> col:68 __attr 'const pthread_mutexattr_t *'
| |-ParmVarDecl 0x55976bac24c8 <line:546:6, col:11> col:11 __robustness 'int *'
| |-NoThrowAttr 0x55976bac2698 <line:547:22>
| `-NonNullAttr 0x55976bac26f0 <col:63, col:80> 1 2
|-FunctionDecl 0x55976bac2878 <line:548:1, line:550:79> line:548:12 pthread_mutexattr_setrobust 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x55976bac2738 <col:41, col:62> col:62 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x55976bac27b8 <line:549:6, col:10> col:10 __robustness 'int'
| |-NoThrowAttr 0x55976bac2928 <line:550:22>
| `-NonNullAttr 0x55976bac2980 <col:63, col:77> 1
|-FunctionDecl 0x55976bac3cf8 <line:551:1, line:553:86> line:551:12 pthread_rwlock_init 'int (pthread_rwlock_t *restrict, const pthread_rwlockattr_t *restrict)' extern
| |-ParmVarDecl 0x55976bac3aa0 <col:33, col:62> col:62 __rwlock 'pthread_rwlock_t *restrict'
| |-ParmVarDecl 0x55976bac3bb0 <line:552:5, line:553:5> col:5 __attr 'const pthread_rwlockattr_t *restrict'
| |-NoThrowAttr 0x55976bac3da8 <col:29>
| `-NonNullAttr 0x55976bac3e00 <col:70, col:84> 1
|-FunctionDecl 0x55976bac3f78 <line:554:1, line:555:79> line:554:12 pthread_rwlock_destroy 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x55976bac3e48 <col:36, col:54> col:54 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x55976bac4020 <line:555:22>
| `-NonNullAttr 0x55976bac4078 <col:63, col:77> 1
|-FunctionDecl 0x55976bac4180 <line:556:1, line:557:68> line:556:12 pthread_rwlock_rdlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x55976bac40c8 <col:35, col:53> col:53 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x55976bac4228 <line:557:22>
| `-NonNullAttr 0x55976bac4280 <col:52, col:66> 1
|-FunctionDecl 0x55976bac4380 <line:558:1, line:559:65> line:558:12 pthread_rwlock_tryrdlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x55976bac42c8 <col:38, col:56> col:56 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x55976bac4428 <line:559:19>
| `-NonNullAttr 0x55976bac4480 <col:49, col:63> 1
|-FunctionDecl 0x55976bac46b8 <line:560:1, line:562:88> line:560:12 pthread_rwlock_timedrdlock 'int (pthread_rwlock_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x55976bac44c8 <col:40, col:69> col:69 __rwlock 'pthread_rwlock_t *restrict'
| |-ParmVarDecl 0x55976bac4558 <line:561:12, line:562:12> col:12 __abstime 'const struct timespec *restrict'
| |-NoThrowAttr 0x55976bac4768 <col:39>
| `-NonNullAttr 0x55976bac47c0 <col:69, col:86> 1 2
|-FunctionDecl 0x55976bac48c0 <line:563:1, line:564:68> line:563:12 pthread_rwlock_wrlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x55976bac4808 <col:35, col:53> col:53 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x55976bac4968 <line:564:22>
| `-NonNullAttr 0x55976bac49c0 <col:52, col:66> 1
|-FunctionDecl 0x55976bac4b28 <line:565:1, line:566:68> line:565:12 pthread_rwlock_trywrlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x55976bac4a70 <col:38, col:56> col:56 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x55976bac4bd0 <line:566:22>
| `-NonNullAttr 0x55976bac4c28 <col:52, col:66> 1
|-FunctionDecl 0x55976bac4de8 <line:567:1, line:569:88> line:567:12 pthread_rwlock_timedwrlock 'int (pthread_rwlock_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x55976bac4c78 <col:40, col:69> col:69 __rwlock 'pthread_rwlock_t *restrict'
| |-ParmVarDecl 0x55976bac4d08 <line:568:12, line:569:12> col:12 __abstime 'const struct timespec *restrict'
| |-NoThrowAttr 0x55976bac4e98 <col:39>
| `-NonNullAttr 0x55976bac4ef0 <col:69, col:86> 1 2
|-FunctionDecl 0x55976bac4ff0 <line:570:1, line:571:68> line:570:12 pthread_rwlock_unlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x55976bac4f38 <col:35, col:53> col:53 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x55976bac5098 <line:571:22>
| `-NonNullAttr 0x55976bac50f0 <col:52, col:66> 1
|-FunctionDecl 0x55976bac52d8 <line:572:1, line:573:79> line:572:12 pthread_rwlockattr_init 'int (pthread_rwlockattr_t *)' extern
| |-ParmVarDecl 0x55976bac51a0 <col:37, col:59> col:59 __attr 'pthread_rwlockattr_t *'
| |-NoThrowAttr 0x55976bac5380 <line:573:22>
| `-NonNullAttr 0x55976bac53d8 <col:63, col:77> 1
|-FunctionDecl 0x55976bac54e0 <line:574:1, line:575:79> line:574:12 pthread_rwlockattr_destroy 'int (pthread_rwlockattr_t *)' extern
| |-ParmVarDecl 0x55976bac5428 <col:40, col:62> col:62 __attr 'pthread_rwlockattr_t *'
| |-NoThrowAttr 0x55976bac5588 <line:575:22>
| `-NonNullAttr 0x55976bac55e0 <col:63, col:77> 1
|-FunctionDecl 0x55976bac5808 <line:576:1, line:579:82> line:576:12 pthread_rwlockattr_getpshared 'int (const pthread_rwlockattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x55976bac5628 <col:43, line:577:19> col:19 __attr 'const pthread_rwlockattr_t *restrict'
| |-ParmVarDecl 0x55976bac56a8 <line:578:8, col:24> col:24 __pshared 'int *restrict'
| |-NoThrowAttr 0x55976bac58b8 <line:579:22>
| `-NonNullAttr 0x55976bac5910 <col:63, col:80> 1 2
|-FunctionDecl 0x55976bac5b38 <line:580:1, line:582:79> line:580:12 pthread_rwlockattr_setpshared 'int (pthread_rwlockattr_t *, int)' extern
| |-ParmVarDecl 0x55976bac5958 <col:43, col:65> col:65 __attr 'pthread_rwlockattr_t *'
| |-ParmVarDecl 0x55976bac59d8 <line:581:8, col:12> col:12 __pshared 'int'
| |-NoThrowAttr 0x55976bac5be8 <line:582:22>
| `-NonNullAttr 0x55976bac5c40 <col:63, col:77> 1
|-FunctionDecl 0x55976bac5de8 <line:583:1, line:586:82> line:583:12 pthread_rwlockattr_getkind_np 'int (const pthread_rwlockattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x55976bac5c88 <col:43, line:584:19> col:19 __attr 'const pthread_rwlockattr_t *restrict'
| |-ParmVarDecl 0x55976bac5d08 <line:585:8, col:24> col:24 __pref 'int *restrict'
| |-NoThrowAttr 0x55976bac5e98 <line:586:22>
| `-NonNullAttr 0x55976bac5ef0 <col:63, col:80> 1 2
|-FunctionDecl 0x55976bac6078 <line:587:1, line:588:93> line:587:12 pthread_rwlockattr_setkind_np 'int (pthread_rwlockattr_t *, int)' extern
| |-ParmVarDecl 0x55976bac5f38 <col:43, col:65> col:65 __attr 'pthread_rwlockattr_t *'
| |-ParmVarDecl 0x55976bac5fb8 <line:588:8, col:12> col:12 __pref 'int'
| |-NoThrowAttr 0x55976bac6128 <col:36>
| `-NonNullAttr 0x55976bac6180 <col:77, col:91> 1
|-FunctionDecl 0x55976bac64b8 <line:589:1, line:591:79> line:589:12 pthread_cond_init 'int (pthread_cond_t *restrict, const pthread_condattr_t *restrict)' extern
| |-ParmVarDecl 0x55976bac6260 <col:31, col:58> col:58 __cond 'pthread_cond_t *restrict'
| |-ParmVarDecl 0x55976bac6370 <line:590:10, col:47> col:47 __cond_attr 'const pthread_condattr_t *restrict'
| |-NoThrowAttr 0x55976bac6568 <line:591:22>
| `-NonNullAttr 0x55976bac65c0 <col:63, col:77> 1
|-FunctionDecl 0x55976bac6738 <line:592:1, line:593:79> line:592:12 pthread_cond_destroy 'int (pthread_cond_t *)' extern
| |-ParmVarDecl 0x55976bac6608 <col:34, col:50> col:50 __cond 'pthread_cond_t *'
| |-NoThrowAttr 0x55976bac67e0 <line:593:22>
| `-NonNullAttr 0x55976bac6838 <col:63, col:77> 1
|-FunctionDecl 0x55976bac6940 <line:594:1, line:595:68> line:594:12 pthread_cond_signal 'int (pthread_cond_t *)' extern
| |-ParmVarDecl 0x55976bac6888 <col:33, col:49> col:49 __cond 'pthread_cond_t *'
| |-NoThrowAttr 0x55976bac69e8 <line:595:22>
| `-NonNullAttr 0x55976bac6a40 <col:52, col:66> 1
|-FunctionDecl 0x55976bac6b58 <line:596:1, line:597:68> line:596:12 pthread_cond_broadcast 'int (pthread_cond_t *)' extern
| |-ParmVarDecl 0x55976bac6aa0 <col:36, col:52> col:52 __cond 'pthread_cond_t *'
| |-NoThrowAttr 0x55976bac6c00 <line:597:22>
| `-NonNullAttr 0x55976bac6c58 <col:52, col:66> 1
|-FunctionDecl 0x55976bac6e88 <line:598:1, line:600:41> line:598:12 pthread_cond_wait 'int (pthread_cond_t *restrict, pthread_mutex_t *restrict)' extern
| |-ParmVarDecl 0x55976bac6ca8 <col:31, col:58> col:58 __cond 'pthread_cond_t *restrict'
| |-ParmVarDecl 0x55976bac6d20 <line:599:10, col:38> col:38 __mutex 'pthread_mutex_t *restrict'
| `-NonNullAttr 0x55976bac6f38 <line:600:22, col:39> 1 2
|-FunctionDecl 0x55976bac7268 <line:601:1, line:604:44> line:601:12 pthread_cond_timedwait 'int (pthread_cond_t *restrict, pthread_mutex_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x55976bac6fb8 <col:36, col:63> col:63 __cond 'pthread_cond_t *restrict'
| |-ParmVarDecl 0x55976bac7030 <line:602:8, col:36> col:36 __mutex 'pthread_mutex_t *restrict'
| |-ParmVarDecl 0x55976bac70c0 <line:603:8, col:42> col:42 __abstime 'const struct timespec *restrict'
| `-NonNullAttr 0x55976bac7320 <line:604:22, col:42> 1 2 3
|-FunctionDecl 0x55976bac7538 <line:605:1, line:606:79> line:605:12 pthread_condattr_init 'int (pthread_condattr_t *)' extern
| |-ParmVarDecl 0x55976bac7400 <col:35, col:55> col:55 __attr 'pthread_condattr_t *'
| |-NoThrowAttr 0x55976bac75e0 <line:606:22>
| `-NonNullAttr 0x55976bac7638 <col:63, col:77> 1
|-FunctionDecl 0x55976bac7740 <line:607:1, line:608:79> line:607:12 pthread_condattr_destroy 'int (pthread_condattr_t *)' extern
| |-ParmVarDecl 0x55976bac7688 <col:38, col:58> col:58 __attr 'pthread_condattr_t *'
| |-NoThrowAttr 0x55976bac77e8 <line:608:22>
| `-NonNullAttr 0x55976bac7840 <col:63, col:77> 1
|-FunctionDecl 0x55976bac7aa0 <line:609:1, line:612:82> line:609:12 pthread_condattr_getpshared 'int (const pthread_condattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x55976bac7888 <col:41, line:610:17> col:17 __attr 'const pthread_condattr_t *restrict'
| |-ParmVarDecl 0x55976bac7908 <line:611:6, col:22> col:22 __pshared 'int *restrict'
| |-NoThrowAttr 0x55976bac7b50 <line:612:22>
| `-NonNullAttr 0x55976bac7ba8 <col:63, col:80> 1 2
|-FunctionDecl 0x55976bac7db8 <line:613:1, line:614:94> line:613:12 pthread_condattr_setpshared 'int (pthread_condattr_t *, int)' extern
| |-ParmVarDecl 0x55976bac7bf8 <col:41, col:61> col:61 __attr 'pthread_condattr_t *'
| |-ParmVarDecl 0x55976bac7c78 <line:614:6, col:10> col:10 __pshared 'int'
| |-NoThrowAttr 0x55976bac7e68 <col:37>
| `-NonNullAttr 0x55976bac7ec0 <col:78, col:92> 1
|-FunctionDecl 0x55976bac80d8 <line:615:1, line:618:82> line:615:12 pthread_condattr_getclock 'int (const pthread_condattr_t *restrict, __clockid_t *restrict)' extern
| |-ParmVarDecl 0x55976bac7f08 <col:39, line:616:22> col:22 __attr 'const pthread_condattr_t *restrict'
| |-ParmVarDecl 0x55976bac7fb0 <line:617:11, col:35> col:35 __clock_id '__clockid_t *restrict'
| |-NoThrowAttr 0x55976bac8188 <line:618:22>
| `-NonNullAttr 0x55976bac81e0 <col:63, col:80> 1 2
|-FunctionDecl 0x55976bac83a8 <line:619:1, line:621:79> line:619:12 pthread_condattr_setclock 'int (pthread_condattr_t *, __clockid_t)' extern
| |-ParmVarDecl 0x55976bac8228 <col:39, col:59> col:59 __attr 'pthread_condattr_t *'
| |-ParmVarDecl 0x55976bac82a0 <line:620:11, col:23> col:23 __clock_id '__clockid_t':'int'
| |-NoThrowAttr 0x55976bac8458 <line:621:22>
| `-NonNullAttr 0x55976bac84b0 <col:63, col:77> 1
|-FunctionDecl 0x55976bac8758 <line:622:1, line:623:79> line:622:12 pthread_spin_init 'int (pthread_spinlock_t *, int)' extern
| |-ParmVarDecl 0x55976bac8590 <col:31, col:51> col:51 __lock 'pthread_spinlock_t *'
| |-ParmVarDecl 0x55976bac8610 <col:59, col:63> col:63 __pshared 'int'
| |-NoThrowAttr 0x55976bac8808 <line:623:22>
| `-NonNullAttr 0x55976bac8860 <col:63, col:77> 1
|-FunctionDecl 0x55976bac89d8 <line:624:1, line:625:79> line:624:12 pthread_spin_destroy 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x55976bac88a8 <col:34, col:54> col:54 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x55976bac8ab0 <line:625:22>
| `-NonNullAttr 0x55976bac8b08 <col:63, col:77> 1
|-FunctionDecl 0x55976bac8c10 <line:626:1, line:627:68> line:626:12 pthread_spin_lock 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x55976bac8b58 <col:31, col:51> col:51 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x55976bac8cb8 <line:627:22>
| `-NonNullAttr 0x55976bac8d10 <col:52, col:66> 1
|-FunctionDecl 0x55976bac8e10 <line:628:1, line:629:68> line:628:12 pthread_spin_trylock 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x55976bac8d58 <col:34, col:54> col:54 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x55976bac8eb8 <line:629:22>
| `-NonNullAttr 0x55976bac8f10 <col:52, col:66> 1
|-FunctionDecl 0x55976bac9010 <line:630:1, line:631:68> line:630:12 pthread_spin_unlock 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x55976bac8f58 <col:33, col:53> col:53 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x55976bac90b8 <line:631:22>
| `-NonNullAttr 0x55976bac9110 <col:52, col:66> 1
|-FunctionDecl 0x55976bac94e8 <line:632:1, line:635:79> line:632:12 pthread_barrier_init 'int (pthread_barrier_t *restrict, const pthread_barrierattr_t *restrict, unsigned int)' extern
| |-ParmVarDecl 0x55976bac91f0 <col:34, col:64> col:64 __barrier 'pthread_barrier_t *restrict'
| |-ParmVarDecl 0x55976bac9300 <line:633:6, line:634:6> col:6 __attr 'const pthread_barrierattr_t *restrict'
| |-ParmVarDecl 0x55976bac9380 <col:14, col:27> col:27 __count 'unsigned int'
| |-NoThrowAttr 0x55976bac95a0 <line:635:22>
| `-NonNullAttr 0x55976bac95f8 <col:63, col:77> 1
|-FunctionDecl 0x55976bac9778 <line:636:1, line:637:79> line:636:12 pthread_barrier_destroy 'int (pthread_barrier_t *)' extern
| |-ParmVarDecl 0x55976bac9648 <col:37, col:56> col:56 __barrier 'pthread_barrier_t *'
| |-NoThrowAttr 0x55976bac9820 <line:637:22>
| `-NonNullAttr 0x55976bac9878 <col:63, col:77> 1
|-FunctionDecl 0x55976bac9980 <line:638:1, line:639:68> line:638:12 pthread_barrier_wait 'int (pthread_barrier_t *)' extern
| |-ParmVarDecl 0x55976bac98c8 <col:34, col:53> col:53 __barrier 'pthread_barrier_t *'
| |-NoThrowAttr 0x55976bac9a28 <line:639:22>
| `-NonNullAttr 0x55976bac9a80 <col:52, col:66> 1
|-FunctionDecl 0x55976bacac88 <line:640:1, line:641:79> line:640:12 pthread_barrierattr_init 'int (pthread_barrierattr_t *)' extern
| |-ParmVarDecl 0x55976bacab50 <col:38, col:61> col:61 __attr 'pthread_barrierattr_t *'
| |-NoThrowAttr 0x55976bacad30 <line:641:22>
| `-NonNullAttr 0x55976bacad88 <col:63, col:77> 1
|-FunctionDecl 0x55976bacae90 <line:642:1, line:643:79> line:642:12 pthread_barrierattr_destroy 'int (pthread_barrierattr_t *)' extern
| |-ParmVarDecl 0x55976bacadd8 <col:41, col:64> col:64 __attr 'pthread_barrierattr_t *'
| |-NoThrowAttr 0x55976bacaf38 <line:643:22>
| `-NonNullAttr 0x55976bacaf90 <col:63, col:77> 1
|-FunctionDecl 0x55976bacb1b8 <line:644:1, line:647:82> line:644:12 pthread_barrierattr_getpshared 'int (const pthread_barrierattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x55976bacafd8 <col:44, line:645:20> col:20 __attr 'const pthread_barrierattr_t *restrict'
| |-ParmVarDecl 0x55976bacb058 <line:646:9, col:25> col:25 __pshared 'int *restrict'
| |-NoThrowAttr 0x55976bacb268 <line:647:22>
| `-NonNullAttr 0x55976bacb2c0 <col:63, col:80> 1 2
|-FunctionDecl 0x55976bacb4c8 <line:648:1, line:650:79> line:648:12 pthread_barrierattr_setpshared 'int (pthread_barrierattr_t *, int)' extern
| |-ParmVarDecl 0x55976bacb308 <col:44, col:67> col:67 __attr 'pthread_barrierattr_t *'
| |-ParmVarDecl 0x55976bacb388 <line:649:9, col:13> col:13 __pshared 'int'
| |-NoThrowAttr 0x55976bacb578 <line:650:22>
| `-NonNullAttr 0x55976bacb5d0 <col:63, col:77> 1
|-FunctionDecl 0x55976bacb918 <line:651:1, line:653:79> line:651:12 pthread_key_create 'int (pthread_key_t *, void (*)(void *))' extern
| |-ParmVarDecl 0x55976bacb6b0 <col:32, col:47> col:47 __key 'pthread_key_t *'
| |-ParmVarDecl 0x55976bacb7d0 <line:652:11, col:43> col:18 __destr_function 'void (*)(void *)'
| |-NoThrowAttr 0x55976bacb9c8 <line:653:22>
| `-NonNullAttr 0x55976bacba20 <col:63, col:77> 1
|-FunctionDecl 0x55976bacbb88 <line:654:1, col:92> col:12 pthread_key_delete 'int (pthread_key_t)' extern
| |-ParmVarDecl 0x55976bacba68 <col:32, col:46> col:46 __key 'pthread_key_t':'unsigned int'
| `-NoThrowAttr 0x55976bacbc30 <col:69>
|-FunctionDecl 0x55976bacbda8 <line:655:1, col:95> col:14 pthread_getspecific 'void *(pthread_key_t)' extern
| |-ParmVarDecl 0x55976bacbc98 <col:35, col:49> col:49 __key 'pthread_key_t':'unsigned int'
| `-NoThrowAttr 0x55976bacbe50 <col:72>
|-FunctionDecl 0x55976bacc088 <line:656:1, line:657:67> line:656:12 pthread_setspecific 'int (pthread_key_t, const void *)' extern
| |-ParmVarDecl 0x55976bacbeb8 <col:33, col:47> col:47 __key 'pthread_key_t':'unsigned int'
| |-ParmVarDecl 0x55976bacbf68 <line:657:5, col:17> col:17 __pointer 'const void *'
| `-NoThrowAttr 0x55976bacc138 <col:44>
|-FunctionDecl 0x55976bacc358 <line:658:1, line:660:79> line:658:12 pthread_getcpuclockid 'int (pthread_t, __clockid_t *)' extern
| |-ParmVarDecl 0x55976bacc1a0 <col:35, col:45> col:45 __thread_id 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x55976bacc218 <line:659:7, col:20> col:20 __clock_id '__clockid_t *'
| |-NoThrowAttr 0x55976bacc408 <line:660:22>
| `-NonNullAttr 0x55976bacc460 <col:63, col:77> 2
|-FunctionDecl 0x55976bacc8a8 <line:661:1, line:663:70> line:661:12 pthread_atfork 'int (void (*)(void), void (*)(void), void (*)(void))' extern
| |-ParmVarDecl 0x55976bacc540 <col:28, col:51> col:35 __prepare 'void (*)(void)'
| |-ParmVarDecl 0x55976bacc650 <line:662:7, col:29> col:14 __parent 'void (*)(void)'
| |-ParmVarDecl 0x55976bacc760 <line:663:7, col:28> col:14 __child 'void (*)(void)'
| `-NoThrowAttr 0x55976bacc960 <col:47>
|-FunctionDecl 0x55976baccaf0 <line:665:1, col:20> col:8 used P0 'void *(void *)'
| `-ParmVarDecl 0x55976bacc9d0 <col:11, col:17> col:17 arg 'void *'
|-FunctionDecl 0x55976baccc48 <line:666:1, col:20> col:8 used P1 'void *(void *)'
| `-ParmVarDecl 0x55976baccbb0 <col:11, col:17> col:17 arg 'void *'
|-FunctionDecl 0x55976baccd10 <line:667:1, col:12> col:6 fence 'void ()'
|-FunctionDecl 0x55976baccdd0 <line:668:1, col:12> col:6 isync 'void ()'
|-FunctionDecl 0x55976bacce90 <line:669:1, col:14> col:6 lwfence 'void ()'
|-VarDecl 0x55976baccf48 <line:670:1, col:5> col:5 used __unbuffered_cnt 'int'
|-VarDecl 0x55976baccfc8 prev 0x55976baccf48 <line:671:1, col:24> col:5 used __unbuffered_cnt 'int' cinit
| `-IntegerLiteral 0x55976bacd030 <col:24> 'int' 0
|-VarDecl 0x55976bacd068 <line:672:1, col:5> col:5 used __unbuffered_p1_EAX 'int'
|-VarDecl 0x55976bacd0e8 prev 0x55976bacd068 <line:673:1, col:27> col:5 used __unbuffered_p1_EAX 'int' cinit
| `-IntegerLiteral 0x55976bacd150 <col:27> 'int' 0
|-VarDecl 0x55976bacd188 <line:674:1, col:5> col:5 used __unbuffered_p1_EBX 'int'
|-VarDecl 0x55976bacd208 prev 0x55976bacd188 <line:675:1, col:27> col:5 used __unbuffered_p1_EBX 'int' cinit
| `-IntegerLiteral 0x55976bacd270 <col:27> 'int' 0
|-VarDecl 0x55976bacd2a0 <line:676:1, col:7> col:7 used main$tmp_guard0 '_Bool'
|-VarDecl 0x55976bacd318 <line:677:1, col:7> col:7 used main$tmp_guard1 '_Bool'
|-VarDecl 0x55976bacd398 <line:678:1, col:5> col:5 used x 'int'
|-VarDecl 0x55976bacd418 prev 0x55976bacd398 <line:679:1, col:9> col:5 used x 'int' cinit
| `-IntegerLiteral 0x55976bacd480 <col:9> 'int' 0
|-VarDecl 0x55976bacd4b8 <line:680:1, col:5> col:5 used y 'int'
|-VarDecl 0x55976bacd538 prev 0x55976bacd4b8 <line:681:1, col:9> col:5 used y 'int' cinit
| `-IntegerLiteral 0x55976bacd5a0 <col:9> 'int' 0
|-VarDecl 0x55976bacd5d8 <line:682:1, col:5> col:5 used z 'int'
|-VarDecl 0x55976bacd658 prev 0x55976bacd5d8 <line:683:1, col:9> col:5 used z 'int' cinit
| `-IntegerLiteral 0x55976bacd6c0 <col:9> 'int' 0
|-VarDecl 0x55976bacd6f0 <line:684:1, col:7> col:7 used z$flush_delayed '_Bool'
|-VarDecl 0x55976bacd770 <line:685:1, col:5> col:5 used z$mem_tmp 'int'
|-VarDecl 0x55976bacd7e8 <line:686:1, col:7> col:7 used z$r_buff0_thd0 '_Bool'
|-VarDecl 0x55976bacd860 <line:687:1, col:7> col:7 used z$r_buff0_thd1 '_Bool'
|-VarDecl 0x55976bacd8d8 <line:688:1, col:7> col:7 used z$r_buff0_thd2 '_Bool'
|-VarDecl 0x55976bacd950 <line:689:1, col:7> col:7 used z$r_buff1_thd0 '_Bool'
|-VarDecl 0x55976bacd9c8 <line:690:1, col:7> col:7 used z$r_buff1_thd1 '_Bool'
|-VarDecl 0x55976bacda40 <line:691:1, col:7> col:7 used z$r_buff1_thd2 '_Bool'
|-VarDecl 0x55976bacdb00 <line:692:1, col:7> col:7 z$read_delayed '_Bool'
|-VarDecl 0x55976bacdb80 <line:693:1, col:6> col:6 z$read_delayed_var 'int *'
|-VarDecl 0x55976bacdc00 <line:694:1, col:5> col:5 used z$w_buff0 'int'
|-VarDecl 0x55976bacdc78 <line:695:1, col:7> col:7 used z$w_buff0_used '_Bool'
|-VarDecl 0x55976bacdcf8 <line:696:1, col:5> col:5 used z$w_buff1 'int'
|-VarDecl 0x55976bacdd70 <line:697:1, col:7> col:7 used z$w_buff1_used '_Bool'
|-VarDecl 0x55976bacdde8 <line:698:1, col:7> col:7 used weak$$choice0 '_Bool'
|-VarDecl 0x55976bacde60 <line:699:1, col:7> col:7 used weak$$choice2 '_Bool'
|-FunctionDecl 0x55976bacdf78 prev 0x55976baccaf0 <line:700:1, line:727:1> line:700:8 used P0 'void *(void *)'
| |-ParmVarDecl 0x55976bacdee0 <col:11, col:17> col:17 arg 'void *'
| `-CompoundStmt 0x55976bacf728 <line:701:1, line:727:1>
|   |-CallExpr 0x55976bace088 <line:702:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x55976bace070 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55976bace020 <col:3> 'void ()' Function 0x55976ba73e40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x55976bace100 <line:703:3, col:15> 'int' '='
|   | |-DeclRefExpr 0x55976bace0a8 <col:3> 'int' lvalue Var 0x55976bacdcf8 'z$w_buff1' 'int'
|   | `-ImplicitCastExpr 0x55976bace0e8 <col:15> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x55976bace0c8 <col:15> 'int' lvalue Var 0x55976bacdc00 'z$w_buff0' 'int'
|   |-BinaryOperator 0x55976bace160 <line:704:3, col:15> 'int' '='
|   | |-DeclRefExpr 0x55976bace120 <col:3> 'int' lvalue Var 0x55976bacdc00 'z$w_buff0' 'int'
|   | `-IntegerLiteral 0x55976bace140 <col:15> 'int' 1
|   |-BinaryOperator 0x55976bace1d8 <line:705:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x55976bace180 <col:3> '_Bool' lvalue Var 0x55976bacdd70 'z$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x55976bace1c0 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x55976bace1a0 <col:20> '_Bool' lvalue Var 0x55976bacdc78 'z$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x55976bace270 <line:706:3, col:27> '_Bool' '='
|   | |-DeclRefExpr 0x55976bace1f8 <col:3> '_Bool' lvalue Var 0x55976bacdc78 'z$w_buff0_used' '_Bool'
|   | `-CStyleCastExpr 0x55976bace248 <col:20, col:27> '_Bool' <IntegralToBoolean>
|   |   `-IntegerLiteral 0x55976bace218 <col:27> 'int' 1
|   |-CallExpr 0x55976bace3f8 <line:707:3, col:56> 'void'
|   | |-ImplicitCastExpr 0x55976bace3e0 <col:3> 'void (*)(int)' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x55976bace290 <col:3> 'void (int)' Function 0x55976ba73bc8 '__VERIFIER_assert' 'void (int)'
|   | `-UnaryOperator 0x55976bace390 <col:21, col:55> 'int' prefix '!' cannot overflow
|   |   `-ParenExpr 0x55976bace370 <col:22, col:55> 'int'
|   |     `-BinaryOperator 0x55976bace350 <col:23, col:41> 'int' '&&'
|   |       |-ImplicitCastExpr 0x55976bace308 <col:23> 'int' <IntegralCast>
|   |       | `-ImplicitCastExpr 0x55976bace2f0 <col:23> '_Bool' <LValueToRValue>
|   |       |   `-DeclRefExpr 0x55976bace2b0 <col:23> '_Bool' lvalue Var 0x55976bacdd70 'z$w_buff1_used' '_Bool'
|   |       `-ImplicitCastExpr 0x55976bace338 <col:41> 'int' <IntegralCast>
|   |         `-ImplicitCastExpr 0x55976bace320 <col:41> '_Bool' <LValueToRValue>
|   |           `-DeclRefExpr 0x55976bace2d0 <col:41> '_Bool' lvalue Var 0x55976bacdc78 'z$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x55976bace478 <line:708:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x55976bace420 <col:3> '_Bool' lvalue Var 0x55976bacd950 'z$r_buff1_thd0' '_Bool'
|   | `-ImplicitCastExpr 0x55976bace460 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x55976bace440 <col:20> '_Bool' lvalue Var 0x55976bacd7e8 'z$r_buff0_thd0' '_Bool'
|   |-BinaryOperator 0x55976bace4f0 <line:709:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x55976bace498 <col:3> '_Bool' lvalue Var 0x55976bacd9c8 'z$r_buff1_thd1' '_Bool'
|   | `-ImplicitCastExpr 0x55976bace4d8 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x55976bace4b8 <col:20> '_Bool' lvalue Var 0x55976bacd860 'z$r_buff0_thd1' '_Bool'
|   |-BinaryOperator 0x55976bace568 <line:710:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x55976bace510 <col:3> '_Bool' lvalue Var 0x55976bacda40 'z$r_buff1_thd2' '_Bool'
|   | `-ImplicitCastExpr 0x55976bace550 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x55976bace530 <col:20> '_Bool' lvalue Var 0x55976bacd8d8 'z$r_buff0_thd2' '_Bool'
|   |-BinaryOperator 0x55976bace600 <line:711:3, col:27> '_Bool' '='
|   | |-DeclRefExpr 0x55976bace588 <col:3> '_Bool' lvalue Var 0x55976bacd860 'z$r_buff0_thd1' '_Bool'
|   | `-CStyleCastExpr 0x55976bace5d8 <col:20, col:27> '_Bool' <IntegralToBoolean>
|   |   `-IntegerLiteral 0x55976bace5a8 <col:27> 'int' 1
|   |-CallExpr 0x55976bace658 <line:712:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x55976bace640 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55976bace620 <col:3> 'void ()' Function 0x55976ba73f00 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x55976bace6b0 <line:713:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x55976bace698 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55976bace678 <col:3> 'void ()' Function 0x55976ba73e40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x55976bace710 <line:714:3, col:7> 'int' '='
|   | |-DeclRefExpr 0x55976bace6d0 <col:3> 'int' lvalue Var 0x55976bacd418 'x' 'int'
|   | `-IntegerLiteral 0x55976bace6f0 <col:7> 'int' 1
|   |-CallExpr 0x55976bace768 <line:715:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x55976bace750 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55976bace730 <col:3> 'void ()' Function 0x55976ba73f00 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x55976bace7c0 <line:716:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x55976bace7a8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55976bace788 <col:3> 'void ()' Function 0x55976ba73e40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x55976baceaa8 <line:717:3, col:103> 'int' '='
|   | |-DeclRefExpr 0x55976bace7e0 <col:3> 'int' lvalue Var 0x55976bacd658 'z' 'int'
|   | `-ConditionalOperator 0x55976bacea78 <col:7, col:103> 'int'
|   |   |-BinaryOperator 0x55976bace8a0 <col:7, col:25> 'int' '&&'
|   |   | |-ImplicitCastExpr 0x55976bace858 <col:7> 'int' <IntegralCast>
|   |   | | `-ImplicitCastExpr 0x55976bace840 <col:7> '_Bool' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x55976bace800 <col:7> '_Bool' lvalue Var 0x55976bacdc78 'z$w_buff0_used' '_Bool'
|   |   | `-ImplicitCastExpr 0x55976bace888 <col:25> 'int' <IntegralCast>
|   |   |   `-ImplicitCastExpr 0x55976bace870 <col:25> '_Bool' <LValueToRValue>
|   |   |     `-DeclRefExpr 0x55976bace820 <col:25> '_Bool' lvalue Var 0x55976bacd860 'z$r_buff0_thd1' '_Bool'
|   |   |-ImplicitCastExpr 0x55976bacea60 <col:42> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x55976bace8c0 <col:42> 'int' lvalue Var 0x55976bacdc00 'z$w_buff0' 'int'
|   |   `-ParenExpr 0x55976bacea40 <col:54, col:103> 'int'
|   |     `-ConditionalOperator 0x55976bacea10 <col:55, col:102> 'int'
|   |       |-BinaryOperator 0x55976bace980 <col:55, col:73> 'int' '&&'
|   |       | |-ImplicitCastExpr 0x55976bace938 <col:55> 'int' <IntegralCast>
|   |       | | `-ImplicitCastExpr 0x55976bace920 <col:55> '_Bool' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x55976bace8e0 <col:55> '_Bool' lvalue Var 0x55976bacdd70 'z$w_buff1_used' '_Bool'
|   |       | `-ImplicitCastExpr 0x55976bace968 <col:73> 'int' <IntegralCast>
|   |       |   `-ImplicitCastExpr 0x55976bace950 <col:73> '_Bool' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x55976bace900 <col:73> '_Bool' lvalue Var 0x55976bacd9c8 'z$r_buff1_thd1' '_Bool'
|   |       |-ImplicitCastExpr 0x55976bace9e0 <col:90> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x55976bace9a0 <col:90> 'int' lvalue Var 0x55976bacdcf8 'z$w_buff1' 'int'
|   |       `-ImplicitCastExpr 0x55976bace9f8 <col:102> 'int' <LValueToRValue>
|   |         `-DeclRefExpr 0x55976bace9c0 <col:102> 'int' lvalue Var 0x55976bacd658 'z' 'int'
|   |-BinaryOperator 0x55976bacecd8 <line:718:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x55976baceac8 <col:3> '_Bool' lvalue Var 0x55976bacdc78 'z$w_buff0_used' '_Bool'
|   | `-ImplicitCastExpr 0x55976bacecc0 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55976bacec90 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x55976bacebb0 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x55976baceb68 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x55976baceb50 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x55976baceb10 <col:20> '_Bool' lvalue Var 0x55976bacdc78 'z$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x55976baceb98 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x55976baceb80 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x55976baceb30 <col:38> '_Bool' lvalue Var 0x55976bacd860 'z$r_buff0_thd1' '_Bool'
|   |     |-ImplicitCastExpr 0x55976bacec48 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x55976bacec00 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x55976bacebd0 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x55976bacec78 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x55976bacec60 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x55976bacec28 <col:66> '_Bool' lvalue Var 0x55976bacdc78 'z$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x55976bacefc0 <line:719:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x55976bacecf8 <col:3> '_Bool' lvalue Var 0x55976bacdd70 'z$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x55976bacefa8 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55976bacef78 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x55976bacee98 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x55976bacedb8 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x55976baced70 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x55976baced58 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x55976baced18 <col:20> '_Bool' lvalue Var 0x55976bacdc78 'z$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x55976baceda0 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x55976baced88 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x55976baced38 <col:38> '_Bool' lvalue Var 0x55976bacd860 'z$r_buff0_thd1' '_Bool'
|   |     | `-BinaryOperator 0x55976bacee78 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x55976bacee30 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x55976bacee18 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x55976bacedd8 <col:56> '_Bool' lvalue Var 0x55976bacdd70 'z$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x55976bacee60 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x55976bacee48 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x55976bacedf8 <col:74> '_Bool' lvalue Var 0x55976bacd9c8 'z$r_buff1_thd1' '_Bool'
|   |     |-ImplicitCastExpr 0x55976bacef30 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x55976baceee8 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x55976baceeb8 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x55976bacef60 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x55976bacef48 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x55976bacef10 <col:102> '_Bool' lvalue Var 0x55976bacdd70 'z$w_buff1_used' '_Bool'
|   |-BinaryOperator 0x55976bacf1c8 <line:720:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x55976bacefe0 <col:3> '_Bool' lvalue Var 0x55976bacd860 'z$r_buff0_thd1' '_Bool'
|   | `-ImplicitCastExpr 0x55976bacf1b0 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55976bacf180 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x55976bacf0a0 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x55976bacf058 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x55976bacf040 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x55976bacf000 <col:20> '_Bool' lvalue Var 0x55976bacdc78 'z$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x55976bacf088 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x55976bacf070 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x55976bacf020 <col:38> '_Bool' lvalue Var 0x55976bacd860 'z$r_buff0_thd1' '_Bool'
|   |     |-ImplicitCastExpr 0x55976bacf138 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x55976bacf0f0 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x55976bacf0c0 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x55976bacf168 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x55976bacf150 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x55976bacf118 <col:66> '_Bool' lvalue Var 0x55976bacd860 'z$r_buff0_thd1' '_Bool'
|   |-BinaryOperator 0x55976bacf4b0 <line:721:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x55976bacf1e8 <col:3> '_Bool' lvalue Var 0x55976bacd9c8 'z$r_buff1_thd1' '_Bool'
|   | `-ImplicitCastExpr 0x55976bacf498 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55976bacf468 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x55976bacf388 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x55976bacf2a8 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x55976bacf260 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x55976bacf248 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x55976bacf208 <col:20> '_Bool' lvalue Var 0x55976bacdc78 'z$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x55976bacf290 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x55976bacf278 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x55976bacf228 <col:38> '_Bool' lvalue Var 0x55976bacd860 'z$r_buff0_thd1' '_Bool'
|   |     | `-BinaryOperator 0x55976bacf368 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x55976bacf320 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x55976bacf308 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x55976bacf2c8 <col:56> '_Bool' lvalue Var 0x55976bacdd70 'z$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x55976bacf350 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x55976bacf338 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x55976bacf2e8 <col:74> '_Bool' lvalue Var 0x55976bacd9c8 'z$r_buff1_thd1' '_Bool'
|   |     |-ImplicitCastExpr 0x55976bacf420 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x55976bacf3d8 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x55976bacf3a8 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x55976bacf450 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x55976bacf438 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x55976bacf400 <col:102> '_Bool' lvalue Var 0x55976bacd9c8 'z$r_buff1_thd1' '_Bool'
|   |-CallExpr 0x55976bacf508 <line:722:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x55976bacf4f0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55976bacf4d0 <col:3> 'void ()' Function 0x55976ba73f00 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x55976bacf560 <line:723:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x55976bacf548 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55976bacf528 <col:3> 'void ()' Function 0x55976ba73e40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x55976bacf618 <line:724:3, col:41> 'int' '='
|   | |-DeclRefExpr 0x55976bacf580 <col:3> 'int' lvalue Var 0x55976baccfc8 '__unbuffered_cnt' 'int'
|   | `-BinaryOperator 0x55976bacf5f8 <col:22, col:41> 'int' '+'
|   |   |-ImplicitCastExpr 0x55976bacf5e0 <col:22> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x55976bacf5a0 <col:22> 'int' lvalue Var 0x55976baccfc8 '__unbuffered_cnt' 'int'
|   |   `-IntegerLiteral 0x55976bacf5c0 <col:41> 'int' 1
|   |-CallExpr 0x55976bacf670 <line:725:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x55976bacf658 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55976bacf638 <col:3> 'void ()' Function 0x55976ba73f00 '__VERIFIER_atomic_end' 'void ()'
|   `-ReturnStmt 0x55976bacf718 <line:726:3, col:36>
|     `-CallExpr 0x55976bacf6f8 <col:10, col:36> 'void *'
|       `-ImplicitCastExpr 0x55976bacf6e0 <col:10> 'void *(*)(void)' <FunctionToPointerDecay>
|         `-DeclRefExpr 0x55976bacf690 <col:10> 'void *(void)' Function 0x55976ba73958 '__VERIFIER_nondet_pointer' 'void *(void)'
|-FunctionDecl 0x55976bacf8b0 prev 0x55976baccc48 <line:728:1, line:766:1> line:728:8 used P1 'void *(void *)'
| |-ParmVarDecl 0x55976bacf818 <col:11, col:17> col:17 arg 'void *'
| `-CompoundStmt 0x55976bad36c8 <line:729:1, line:766:1>
|   |-CallExpr 0x55976bacf990 <line:730:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x55976bacf978 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55976bacf958 <col:3> 'void ()' Function 0x55976ba73e40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x55976bacf9f0 <line:731:3, col:7> 'int' '='
|   | |-DeclRefExpr 0x55976bacf9b0 <col:3> 'int' lvalue Var 0x55976bacd418 'x' 'int'
|   | `-IntegerLiteral 0x55976bacf9d0 <col:7> 'int' 2
|   |-CallExpr 0x55976bacfa48 <line:732:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x55976bacfa30 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55976bacfa10 <col:3> 'void ()' Function 0x55976ba73f00 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x55976bacfaa0 <line:733:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x55976bacfa88 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55976bacfa68 <col:3> 'void ()' Function 0x55976ba73e40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x55976bacfb20 <line:734:3, col:7> 'int' '='
|   | |-DeclRefExpr 0x55976bacfac0 <col:3> 'int' lvalue Var 0x55976bacd538 'y' 'int'
|   | `-IntegerLiteral 0x55976bacfae0 <col:7> 'int' 1
|   |-CallExpr 0x55976bacfb78 <line:735:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x55976bacfb60 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55976bacfb40 <col:3> 'void ()' Function 0x55976ba73f00 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x55976bacfbd0 <line:736:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x55976bacfbb8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55976bacfb98 <col:3> 'void ()' Function 0x55976ba73e40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x55976bacfc48 <line:737:3, col:25> 'int' '='
|   | |-DeclRefExpr 0x55976bacfbf0 <col:3> 'int' lvalue Var 0x55976bacd0e8 '__unbuffered_p1_EAX' 'int'
|   | `-ImplicitCastExpr 0x55976bacfc30 <col:25> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x55976bacfc10 <col:25> 'int' lvalue Var 0x55976bacd538 'y' 'int'
|   |-CallExpr 0x55976bacfca0 <line:738:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x55976bacfc88 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55976bacfc68 <col:3> 'void ()' Function 0x55976ba73f00 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x55976bacfcf8 <line:739:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x55976bacfce0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55976bacfcc0 <col:3> 'void ()' Function 0x55976ba73e40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x55976bacfda8 <line:740:3, col:45> '_Bool' '='
|   | |-DeclRefExpr 0x55976bacfd18 <col:3> '_Bool' lvalue Var 0x55976bacdde8 'weak$$choice0' '_Bool'
|   | `-ImplicitCastExpr 0x55976bacfd90 <col:19, col:45> '_Bool' <PointerToBoolean>
|   |   `-CallExpr 0x55976bacfd70 <col:19, col:45> 'void *'
|   |     `-ImplicitCastExpr 0x55976bacfd58 <col:19> 'void *(*)(void)' <FunctionToPointerDecay>
|   |       `-DeclRefExpr 0x55976bacfd38 <col:19> 'void *(void)' Function 0x55976ba73958 '__VERIFIER_nondet_pointer' 'void *(void)'
|   |-BinaryOperator 0x55976bacfe58 <line:741:3, col:45> '_Bool' '='
|   | |-DeclRefExpr 0x55976bacfdc8 <col:3> '_Bool' lvalue Var 0x55976bacde60 'weak$$choice2' '_Bool'
|   | `-ImplicitCastExpr 0x55976bacfe40 <col:19, col:45> '_Bool' <PointerToBoolean>
|   |   `-CallExpr 0x55976bacfe20 <col:19, col:45> 'void *'
|   |     `-ImplicitCastExpr 0x55976bacfe08 <col:19> 'void *(*)(void)' <FunctionToPointerDecay>
|   |       `-DeclRefExpr 0x55976bacfde8 <col:19> 'void *(void)' Function 0x55976ba73958 '__VERIFIER_nondet_pointer' 'void *(void)'
|   |-BinaryOperator 0x55976bacfed0 <line:742:3, col:21> '_Bool' '='
|   | |-DeclRefExpr 0x55976bacfe78 <col:3> '_Bool' lvalue Var 0x55976bacd6f0 'z$flush_delayed' '_Bool'
|   | `-ImplicitCastExpr 0x55976bacfeb8 <col:21> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x55976bacfe98 <col:21> '_Bool' lvalue Var 0x55976bacde60 'weak$$choice2' '_Bool'
|   |-BinaryOperator 0x55976bacff48 <line:743:3, col:15> 'int' '='
|   | |-DeclRefExpr 0x55976bacfef0 <col:3> 'int' lvalue Var 0x55976bacd770 'z$mem_tmp' 'int'
|   | `-ImplicitCastExpr 0x55976bacff30 <col:15> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x55976bacff10 <col:15> 'int' lvalue Var 0x55976bacd658 'z' 'int'
|   |-BinaryOperator 0x55976bad0380 <line:744:3, col:162> 'int' '='
|   | |-DeclRefExpr 0x55976bacff68 <col:3> 'int' lvalue Var 0x55976bacd658 'z' 'int'
|   | `-ConditionalOperator 0x55976bad0350 <col:7, col:162> 'int'
|   |   |-BinaryOperator 0x55976bad0178 <col:7, col:84> 'int' '||'
|   |   | |-BinaryOperator 0x55976bad0098 <col:7, col:46> 'int' '||'
|   |   | | |-UnaryOperator 0x55976bacffc0 <col:7, col:8> 'int' prefix '!' cannot overflow
|   |   | | | `-ImplicitCastExpr 0x55976bacffa8 <col:8> '_Bool' <LValueToRValue>
|   |   | | |   `-DeclRefExpr 0x55976bacff88 <col:8> '_Bool' lvalue Var 0x55976bacdc78 'z$w_buff0_used' '_Bool'
|   |   | | `-BinaryOperator 0x55976bad0078 <col:26, col:46> 'int' '&&'
|   |   | |   |-UnaryOperator 0x55976bad0010 <col:26, col:27> 'int' prefix '!' cannot overflow
|   |   | |   | `-ImplicitCastExpr 0x55976bacfff8 <col:27> '_Bool' <LValueToRValue>
|   |   | |   |   `-DeclRefExpr 0x55976bacffd8 <col:27> '_Bool' lvalue Var 0x55976bacd8d8 'z$r_buff0_thd2' '_Bool'
|   |   | |   `-UnaryOperator 0x55976bad0060 <col:45, col:46> 'int' prefix '!' cannot overflow
|   |   | |     `-ImplicitCastExpr 0x55976bad0048 <col:46> '_Bool' <LValueToRValue>
|   |   | |       `-DeclRefExpr 0x55976bad0028 <col:46> '_Bool' lvalue Var 0x55976bacdd70 'z$w_buff1_used' '_Bool'
|   |   | `-BinaryOperator 0x55976bad0158 <col:64, col:84> 'int' '&&'
|   |   |   |-UnaryOperator 0x55976bad00f0 <col:64, col:65> 'int' prefix '!' cannot overflow
|   |   |   | `-ImplicitCastExpr 0x55976bad00d8 <col:65> '_Bool' <LValueToRValue>
|   |   |   |   `-DeclRefExpr 0x55976bad00b8 <col:65> '_Bool' lvalue Var 0x55976bacd8d8 'z$r_buff0_thd2' '_Bool'
|   |   |   `-UnaryOperator 0x55976bad0140 <col:83, col:84> 'int' prefix '!' cannot overflow
|   |   |     `-ImplicitCastExpr 0x55976bad0128 <col:84> '_Bool' <LValueToRValue>
|   |   |       `-DeclRefExpr 0x55976bad0108 <col:84> '_Bool' lvalue Var 0x55976bacda40 'z$r_buff1_thd2' '_Bool'
|   |   |-ImplicitCastExpr 0x55976bad0338 <col:101> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x55976bad0198 <col:101> 'int' lvalue Var 0x55976bacd658 'z' 'int'
|   |   `-ParenExpr 0x55976bad0318 <col:105, col:162> 'int'
|   |     `-ConditionalOperator 0x55976bad02e8 <col:106, col:153> 'int'
|   |       |-BinaryOperator 0x55976bad0258 <col:106, col:124> 'int' '&&'
|   |       | |-ImplicitCastExpr 0x55976bad0210 <col:106> 'int' <IntegralCast>
|   |       | | `-ImplicitCastExpr 0x55976bad01f8 <col:106> '_Bool' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x55976bad01b8 <col:106> '_Bool' lvalue Var 0x55976bacdc78 'z$w_buff0_used' '_Bool'
|   |       | `-ImplicitCastExpr 0x55976bad0240 <col:124> 'int' <IntegralCast>
|   |       |   `-ImplicitCastExpr 0x55976bad0228 <col:124> '_Bool' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x55976bad01d8 <col:124> '_Bool' lvalue Var 0x55976bacd8d8 'z$r_buff0_thd2' '_Bool'
|   |       |-ImplicitCastExpr 0x55976bad02b8 <col:141> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x55976bad0278 <col:141> 'int' lvalue Var 0x55976bacdc00 'z$w_buff0' 'int'
|   |       `-ImplicitCastExpr 0x55976bad02d0 <col:153> 'int' <LValueToRValue>
|   |         `-DeclRefExpr 0x55976bad0298 <col:153> 'int' lvalue Var 0x55976bacdcf8 'z$w_buff1' 'int'
|   |-BinaryOperator 0x55976bad0890 <line:745:3, col:208> 'int' '='
|   | |-DeclRefExpr 0x55976bad03a0 <col:3> 'int' lvalue Var 0x55976bacdc00 'z$w_buff0' 'int'
|   | `-ConditionalOperator 0x55976bad0860 <col:15, col:208> 'int'
|   |   |-ImplicitCastExpr 0x55976bad0830 <col:15> 'int' <IntegralCast>
|   |   | `-ImplicitCastExpr 0x55976bad0818 <col:15> '_Bool' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x55976bad03c0 <col:15> '_Bool' lvalue Var 0x55976bacde60 'weak$$choice2' '_Bool'
|   |   |-ImplicitCastExpr 0x55976bad0848 <col:31> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x55976bad03e0 <col:31> 'int' lvalue Var 0x55976bacdc00 'z$w_buff0' 'int'
|   |   `-ParenExpr 0x55976bad07f8 <col:43, col:208> 'int'
|   |     `-ConditionalOperator 0x55976bad07c8 <col:44, col:207> 'int'
|   |       |-BinaryOperator 0x55976bad05f0 <col:44, col:121> 'int' '||'
|   |       | |-BinaryOperator 0x55976bad0510 <col:44, col:83> 'int' '||'
|   |       | | |-UnaryOperator 0x55976bad0438 <col:44, col:45> 'int' prefix '!' cannot overflow
|   |       | | | `-ImplicitCastExpr 0x55976bad0420 <col:45> '_Bool' <LValueToRValue>
|   |       | | |   `-DeclRefExpr 0x55976bad0400 <col:45> '_Bool' lvalue Var 0x55976bacdc78 'z$w_buff0_used' '_Bool'
|   |       | | `-BinaryOperator 0x55976bad04f0 <col:63, col:83> 'int' '&&'
|   |       | |   |-UnaryOperator 0x55976bad0488 <col:63, col:64> 'int' prefix '!' cannot overflow
|   |       | |   | `-ImplicitCastExpr 0x55976bad0470 <col:64> '_Bool' <LValueToRValue>
|   |       | |   |   `-DeclRefExpr 0x55976bad0450 <col:64> '_Bool' lvalue Var 0x55976bacd8d8 'z$r_buff0_thd2' '_Bool'
|   |       | |   `-UnaryOperator 0x55976bad04d8 <col:82, col:83> 'int' prefix '!' cannot overflow
|   |       | |     `-ImplicitCastExpr 0x55976bad04c0 <col:83> '_Bool' <LValueToRValue>
|   |       | |       `-DeclRefExpr 0x55976bad04a0 <col:83> '_Bool' lvalue Var 0x55976bacdd70 'z$w_buff1_used' '_Bool'
|   |       | `-BinaryOperator 0x55976bad05d0 <col:101, col:121> 'int' '&&'
|   |       |   |-UnaryOperator 0x55976bad0568 <col:101, col:102> 'int' prefix '!' cannot overflow
|   |       |   | `-ImplicitCastExpr 0x55976bad0550 <col:102> '_Bool' <LValueToRValue>
|   |       |   |   `-DeclRefExpr 0x55976bad0530 <col:102> '_Bool' lvalue Var 0x55976bacd8d8 'z$r_buff0_thd2' '_Bool'
|   |       |   `-UnaryOperator 0x55976bad05b8 <col:120, col:121> 'int' prefix '!' cannot overflow
|   |       |     `-ImplicitCastExpr 0x55976bad05a0 <col:121> '_Bool' <LValueToRValue>
|   |       |       `-DeclRefExpr 0x55976bad0580 <col:121> '_Bool' lvalue Var 0x55976bacda40 'z$r_buff1_thd2' '_Bool'
|   |       |-ImplicitCastExpr 0x55976bad07b0 <col:138> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x55976bad0610 <col:138> 'int' lvalue Var 0x55976bacdc00 'z$w_buff0' 'int'
|   |       `-ParenExpr 0x55976bad0790 <col:150, col:207> 'int'
|   |         `-ConditionalOperator 0x55976bad0760 <col:151, col:198> 'int'
|   |           |-BinaryOperator 0x55976bad06d0 <col:151, col:169> 'int' '&&'
|   |           | |-ImplicitCastExpr 0x55976bad0688 <col:151> 'int' <IntegralCast>
|   |           | | `-ImplicitCastExpr 0x55976bad0670 <col:151> '_Bool' <LValueToRValue>
|   |           | |   `-DeclRefExpr 0x55976bad0630 <col:151> '_Bool' lvalue Var 0x55976bacdc78 'z$w_buff0_used' '_Bool'
|   |           | `-ImplicitCastExpr 0x55976bad06b8 <col:169> 'int' <IntegralCast>
|   |           |   `-ImplicitCastExpr 0x55976bad06a0 <col:169> '_Bool' <LValueToRValue>
|   |           |     `-DeclRefExpr 0x55976bad0650 <col:169> '_Bool' lvalue Var 0x55976bacd8d8 'z$r_buff0_thd2' '_Bool'
|   |           |-ImplicitCastExpr 0x55976bad0730 <col:186> 'int' <LValueToRValue>
|   |           | `-DeclRefExpr 0x55976bad06f0 <col:186> 'int' lvalue Var 0x55976bacdc00 'z$w_buff0' 'int'
|   |           `-ImplicitCastExpr 0x55976bad0748 <col:198> 'int' <LValueToRValue>
|   |             `-DeclRefExpr 0x55976bad0710 <col:198> 'int' lvalue Var 0x55976bacdc00 'z$w_buff0' 'int'
|   |-BinaryOperator 0x55976bad0db0 <line:746:3, col:208> 'int' '='
|   | |-DeclRefExpr 0x55976bad08b0 <col:3> 'int' lvalue Var 0x55976bacdcf8 'z$w_buff1' 'int'
|   | `-ConditionalOperator 0x55976bad0d80 <col:15, col:208> 'int'
|   |   |-ImplicitCastExpr 0x55976bad0d50 <col:15> 'int' <IntegralCast>
|   |   | `-ImplicitCastExpr 0x55976bad0d38 <col:15> '_Bool' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x55976bad08d0 <col:15> '_Bool' lvalue Var 0x55976bacde60 'weak$$choice2' '_Bool'
|   |   |-ImplicitCastExpr 0x55976bad0d68 <col:31> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x55976bad08f0 <col:31> 'int' lvalue Var 0x55976bacdcf8 'z$w_buff1' 'int'
|   |   `-ParenExpr 0x55976bad0d18 <col:43, col:208> 'int'
|   |     `-ConditionalOperator 0x55976bad0ce8 <col:44, col:207> 'int'
|   |       |-BinaryOperator 0x55976bad0b00 <col:44, col:121> 'int' '||'
|   |       | |-BinaryOperator 0x55976bad0a20 <col:44, col:83> 'int' '||'
|   |       | | |-UnaryOperator 0x55976bad0948 <col:44, col:45> 'int' prefix '!' cannot overflow
|   |       | | | `-ImplicitCastExpr 0x55976bad0930 <col:45> '_Bool' <LValueToRValue>
|   |       | | |   `-DeclRefExpr 0x55976bad0910 <col:45> '_Bool' lvalue Var 0x55976bacdc78 'z$w_buff0_used' '_Bool'
|   |       | | `-BinaryOperator 0x55976bad0a00 <col:63, col:83> 'int' '&&'
|   |       | |   |-UnaryOperator 0x55976bad0998 <col:63, col:64> 'int' prefix '!' cannot overflow
|   |       | |   | `-ImplicitCastExpr 0x55976bad0980 <col:64> '_Bool' <LValueToRValue>
|   |       | |   |   `-DeclRefExpr 0x55976bad0960 <col:64> '_Bool' lvalue Var 0x55976bacd8d8 'z$r_buff0_thd2' '_Bool'
|   |       | |   `-UnaryOperator 0x55976bad09e8 <col:82, col:83> 'int' prefix '!' cannot overflow
|   |       | |     `-ImplicitCastExpr 0x55976bad09d0 <col:83> '_Bool' <LValueToRValue>
|   |       | |       `-DeclRefExpr 0x55976bad09b0 <col:83> '_Bool' lvalue Var 0x55976bacdd70 'z$w_buff1_used' '_Bool'
|   |       | `-BinaryOperator 0x55976bad0ae0 <col:101, col:121> 'int' '&&'
|   |       |   |-UnaryOperator 0x55976bad0a78 <col:101, col:102> 'int' prefix '!' cannot overflow
|   |       |   | `-ImplicitCastExpr 0x55976bad0a60 <col:102> '_Bool' <LValueToRValue>
|   |       |   |   `-DeclRefExpr 0x55976bad0a40 <col:102> '_Bool' lvalue Var 0x55976bacd8d8 'z$r_buff0_thd2' '_Bool'
|   |       |   `-UnaryOperator 0x55976bad0ac8 <col:120, col:121> 'int' prefix '!' cannot overflow
|   |       |     `-ImplicitCastExpr 0x55976bad0ab0 <col:121> '_Bool' <LValueToRValue>
|   |       |       `-DeclRefExpr 0x55976bad0a90 <col:121> '_Bool' lvalue Var 0x55976bacda40 'z$r_buff1_thd2' '_Bool'
|   |       |-ImplicitCastExpr 0x55976bad0cd0 <col:138> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x55976bad0b30 <col:138> 'int' lvalue Var 0x55976bacdcf8 'z$w_buff1' 'int'
|   |       `-ParenExpr 0x55976bad0cb0 <col:150, col:207> 'int'
|   |         `-ConditionalOperator 0x55976bad0c80 <col:151, col:198> 'int'
|   |           |-BinaryOperator 0x55976bad0bf0 <col:151, col:169> 'int' '&&'
|   |           | |-ImplicitCastExpr 0x55976bad0ba8 <col:151> 'int' <IntegralCast>
|   |           | | `-ImplicitCastExpr 0x55976bad0b90 <col:151> '_Bool' <LValueToRValue>
|   |           | |   `-DeclRefExpr 0x55976bad0b50 <col:151> '_Bool' lvalue Var 0x55976bacdc78 'z$w_buff0_used' '_Bool'
|   |           | `-ImplicitCastExpr 0x55976bad0bd8 <col:169> 'int' <IntegralCast>
|   |           |   `-ImplicitCastExpr 0x55976bad0bc0 <col:169> '_Bool' <LValueToRValue>
|   |           |     `-DeclRefExpr 0x55976bad0b70 <col:169> '_Bool' lvalue Var 0x55976bacd8d8 'z$r_buff0_thd2' '_Bool'
|   |           |-ImplicitCastExpr 0x55976bad0c50 <col:186> 'int' <LValueToRValue>
|   |           | `-DeclRefExpr 0x55976bad0c10 <col:186> 'int' lvalue Var 0x55976bacdcf8 'z$w_buff1' 'int'
|   |           `-ImplicitCastExpr 0x55976bad0c68 <col:198> 'int' <LValueToRValue>
|   |             `-DeclRefExpr 0x55976bad0c30 <col:198> 'int' lvalue Var 0x55976bacdcf8 'z$w_buff1' 'int'
|   |-BinaryOperator 0x55976bad1358 <line:747:3, col:227> '_Bool' '='
|   | |-DeclRefExpr 0x55976bad0dd0 <col:3> '_Bool' lvalue Var 0x55976bacdc78 'z$w_buff0_used' '_Bool'
|   | `-ImplicitCastExpr 0x55976bad1340 <col:20, col:227> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55976bad1310 <col:20, col:227> 'int'
|   |     |-ImplicitCastExpr 0x55976bad12c8 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x55976bad12b0 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x55976bad0df0 <col:20> '_Bool' lvalue Var 0x55976bacde60 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x55976bad12f8 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x55976bad12e0 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x55976bad0e10 <col:36> '_Bool' lvalue Var 0x55976bacdc78 'z$w_buff0_used' '_Bool'
|   |     `-ParenExpr 0x55976bad1290 <col:53, col:227> 'int'
|   |       `-ConditionalOperator 0x55976bad1260 <col:54, col:226> 'int'
|   |         |-BinaryOperator 0x55976bad1020 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x55976bad0f40 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x55976bad0e68 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x55976bad0e50 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x55976bad0e30 <col:55> '_Bool' lvalue Var 0x55976bacdc78 'z$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x55976bad0f20 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x55976bad0eb8 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x55976bad0ea0 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x55976bad0e80 <col:74> '_Bool' lvalue Var 0x55976bacd8d8 'z$r_buff0_thd2' '_Bool'
|   |         | |   `-UnaryOperator 0x55976bad0f08 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x55976bad0ef0 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x55976bad0ed0 <col:93> '_Bool' lvalue Var 0x55976bacdd70 'z$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x55976bad1000 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x55976bad0f98 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x55976bad0f80 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x55976bad0f60 <col:112> '_Bool' lvalue Var 0x55976bacd8d8 'z$r_buff0_thd2' '_Bool'
|   |         |   `-UnaryOperator 0x55976bad0fe8 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x55976bad0fd0 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x55976bad0fb0 <col:131> '_Bool' lvalue Var 0x55976bacda40 'z$r_buff1_thd2' '_Bool'
|   |         |-ImplicitCastExpr 0x55976bad1248 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x55976bad1230 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x55976bad1040 <col:148> '_Bool' lvalue Var 0x55976bacdc78 'z$w_buff0_used' '_Bool'
|   |         `-ParenExpr 0x55976bad1210 <col:165, col:226> 'int'
|   |           `-ConditionalOperator 0x55976bad11e0 <col:166, col:212> 'int'
|   |             |-BinaryOperator 0x55976bad1100 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x55976bad10b8 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x55976bad10a0 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x55976bad1060 <col:166> '_Bool' lvalue Var 0x55976bacdc78 'z$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x55976bad10e8 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x55976bad10d0 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x55976bad1080 <col:184> '_Bool' lvalue Var 0x55976bacd8d8 'z$r_buff0_thd2' '_Bool'
|   |             |-ImplicitCastExpr 0x55976bad1198 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x55976bad1150 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x55976bad1120 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x55976bad11c8 <col:212> 'int' <IntegralCast>
|   |               `-ImplicitCastExpr 0x55976bad11b0 <col:212> '_Bool' <LValueToRValue>
|   |                 `-DeclRefExpr 0x55976bad1178 <col:212> '_Bool' lvalue Var 0x55976bacdc78 'z$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x55976bad1920 <line:748:3, col:221> '_Bool' '='
|   | |-DeclRefExpr 0x55976bad1378 <col:3> '_Bool' lvalue Var 0x55976bacdd70 'z$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x55976bad1908 <col:20, col:221> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55976bad18d8 <col:20, col:221> 'int'
|   |     |-ImplicitCastExpr 0x55976bad1890 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x55976bad1878 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x55976bad1398 <col:20> '_Bool' lvalue Var 0x55976bacde60 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x55976bad18c0 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x55976bad18a8 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x55976bad13b8 <col:36> '_Bool' lvalue Var 0x55976bacdd70 'z$w_buff1_used' '_Bool'
|   |     `-ParenExpr 0x55976bad1858 <col:53, col:221> 'int'
|   |       `-ConditionalOperator 0x55976bad1828 <col:54, col:220> 'int'
|   |         |-BinaryOperator 0x55976bad15c8 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x55976bad14e8 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x55976bad1410 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x55976bad13f8 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x55976bad13d8 <col:55> '_Bool' lvalue Var 0x55976bacdc78 'z$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x55976bad14c8 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x55976bad1460 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x55976bad1448 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x55976bad1428 <col:74> '_Bool' lvalue Var 0x55976bacd8d8 'z$r_buff0_thd2' '_Bool'
|   |         | |   `-UnaryOperator 0x55976bad14b0 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x55976bad1498 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x55976bad1478 <col:93> '_Bool' lvalue Var 0x55976bacdd70 'z$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x55976bad15a8 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x55976bad1540 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x55976bad1528 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x55976bad1508 <col:112> '_Bool' lvalue Var 0x55976bacd8d8 'z$r_buff0_thd2' '_Bool'
|   |         |   `-UnaryOperator 0x55976bad1590 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x55976bad1578 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x55976bad1558 <col:131> '_Bool' lvalue Var 0x55976bacda40 'z$r_buff1_thd2' '_Bool'
|   |         |-ImplicitCastExpr 0x55976bad1810 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x55976bad17f8 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x55976bad15e8 <col:148> '_Bool' lvalue Var 0x55976bacdd70 'z$w_buff1_used' '_Bool'
|   |         `-ParenExpr 0x55976bad17d8 <col:165, col:220> 'int'
|   |           `-ConditionalOperator 0x55976bad17a8 <col:166, col:219> 'int'
|   |             |-BinaryOperator 0x55976bad16a8 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x55976bad1660 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x55976bad1648 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x55976bad1608 <col:166> '_Bool' lvalue Var 0x55976bacdc78 'z$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x55976bad1690 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x55976bad1678 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x55976bad1628 <col:184> '_Bool' lvalue Var 0x55976bacd8d8 'z$r_buff0_thd2' '_Bool'
|   |             |-ImplicitCastExpr 0x55976bad1778 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x55976bad16f8 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x55976bad16c8 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x55976bad1790 <col:212, col:219> 'int' <IntegralCast>
|   |               `-CStyleCastExpr 0x55976bad1750 <col:212, col:219> '_Bool' <IntegralToBoolean>
|   |                 `-IntegerLiteral 0x55976bad1720 <col:219> 'int' 0
|   |-BinaryOperator 0x55976bad1ee8 <line:749:3, col:227> '_Bool' '='
|   | |-DeclRefExpr 0x55976bad1940 <col:3> '_Bool' lvalue Var 0x55976bacd8d8 'z$r_buff0_thd2' '_Bool'
|   | `-ImplicitCastExpr 0x55976bad1ed0 <col:20, col:227> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55976bad1ea0 <col:20, col:227> 'int'
|   |     |-ImplicitCastExpr 0x55976bad1e58 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x55976bad1e40 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x55976bad1960 <col:20> '_Bool' lvalue Var 0x55976bacde60 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x55976bad1e88 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x55976bad1e70 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x55976bad1980 <col:36> '_Bool' lvalue Var 0x55976bacd8d8 'z$r_buff0_thd2' '_Bool'
|   |     `-ParenExpr 0x55976bad1e20 <col:53, col:227> 'int'
|   |       `-ConditionalOperator 0x55976bad1df0 <col:54, col:226> 'int'
|   |         |-BinaryOperator 0x55976bad1bb0 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x55976bad1ab0 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x55976bad19d8 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x55976bad19c0 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x55976bad19a0 <col:55> '_Bool' lvalue Var 0x55976bacdc78 'z$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x55976bad1a90 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x55976bad1a28 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x55976bad1a10 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x55976bad19f0 <col:74> '_Bool' lvalue Var 0x55976bacd8d8 'z$r_buff0_thd2' '_Bool'
|   |         | |   `-UnaryOperator 0x55976bad1a78 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x55976bad1a60 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x55976bad1a40 <col:93> '_Bool' lvalue Var 0x55976bacdd70 'z$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x55976bad1b90 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x55976bad1b08 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x55976bad1af0 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x55976bad1ad0 <col:112> '_Bool' lvalue Var 0x55976bacd8d8 'z$r_buff0_thd2' '_Bool'
|   |         |   `-UnaryOperator 0x55976bad1b78 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x55976bad1b60 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x55976bad1b40 <col:131> '_Bool' lvalue Var 0x55976bacda40 'z$r_buff1_thd2' '_Bool'
|   |         |-ImplicitCastExpr 0x55976bad1dd8 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x55976bad1dc0 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x55976bad1bd0 <col:148> '_Bool' lvalue Var 0x55976bacd8d8 'z$r_buff0_thd2' '_Bool'
|   |         `-ParenExpr 0x55976bad1da0 <col:165, col:226> 'int'
|   |           `-ConditionalOperator 0x55976bad1d70 <col:166, col:212> 'int'
|   |             |-BinaryOperator 0x55976bad1c90 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x55976bad1c48 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x55976bad1c30 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x55976bad1bf0 <col:166> '_Bool' lvalue Var 0x55976bacdc78 'z$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x55976bad1c78 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x55976bad1c60 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x55976bad1c10 <col:184> '_Bool' lvalue Var 0x55976bacd8d8 'z$r_buff0_thd2' '_Bool'
|   |             |-ImplicitCastExpr 0x55976bad1d28 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x55976bad1ce0 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x55976bad1cb0 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x55976bad1d58 <col:212> 'int' <IntegralCast>
|   |               `-ImplicitCastExpr 0x55976bad1d40 <col:212> '_Bool' <LValueToRValue>
|   |                 `-DeclRefExpr 0x55976bad1d08 <col:212> '_Bool' lvalue Var 0x55976bacd8d8 'z$r_buff0_thd2' '_Bool'
|   |-BinaryOperator 0x55976bad24b0 <line:750:3, col:221> '_Bool' '='
|   | |-DeclRefExpr 0x55976bad1f08 <col:3> '_Bool' lvalue Var 0x55976bacda40 'z$r_buff1_thd2' '_Bool'
|   | `-ImplicitCastExpr 0x55976bad2498 <col:20, col:221> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55976bad2468 <col:20, col:221> 'int'
|   |     |-ImplicitCastExpr 0x55976bad2420 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x55976bad2408 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x55976bad1f28 <col:20> '_Bool' lvalue Var 0x55976bacde60 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x55976bad2450 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x55976bad2438 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x55976bad1f48 <col:36> '_Bool' lvalue Var 0x55976bacda40 'z$r_buff1_thd2' '_Bool'
|   |     `-ParenExpr 0x55976bad23e8 <col:53, col:221> 'int'
|   |       `-ConditionalOperator 0x55976bad23b8 <col:54, col:220> 'int'
|   |         |-BinaryOperator 0x55976bad2158 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x55976bad2078 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x55976bad1fa0 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x55976bad1f88 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x55976bad1f68 <col:55> '_Bool' lvalue Var 0x55976bacdc78 'z$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x55976bad2058 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x55976bad1ff0 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x55976bad1fd8 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x55976bad1fb8 <col:74> '_Bool' lvalue Var 0x55976bacd8d8 'z$r_buff0_thd2' '_Bool'
|   |         | |   `-UnaryOperator 0x55976bad2040 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x55976bad2028 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x55976bad2008 <col:93> '_Bool' lvalue Var 0x55976bacdd70 'z$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x55976bad2138 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x55976bad20d0 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x55976bad20b8 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x55976bad2098 <col:112> '_Bool' lvalue Var 0x55976bacd8d8 'z$r_buff0_thd2' '_Bool'
|   |         |   `-UnaryOperator 0x55976bad2120 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x55976bad2108 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x55976bad20e8 <col:131> '_Bool' lvalue Var 0x55976bacda40 'z$r_buff1_thd2' '_Bool'
|   |         |-ImplicitCastExpr 0x55976bad23a0 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x55976bad2388 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x55976bad2178 <col:148> '_Bool' lvalue Var 0x55976bacda40 'z$r_buff1_thd2' '_Bool'
|   |         `-ParenExpr 0x55976bad2368 <col:165, col:220> 'int'
|   |           `-ConditionalOperator 0x55976bad2338 <col:166, col:219> 'int'
|   |             |-BinaryOperator 0x55976bad2238 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x55976bad21f0 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x55976bad21d8 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x55976bad2198 <col:166> '_Bool' lvalue Var 0x55976bacdc78 'z$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x55976bad2220 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x55976bad2208 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x55976bad21b8 <col:184> '_Bool' lvalue Var 0x55976bacd8d8 'z$r_buff0_thd2' '_Bool'
|   |             |-ImplicitCastExpr 0x55976bad2308 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x55976bad2288 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x55976bad2258 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x55976bad2320 <col:212, col:219> 'int' <IntegralCast>
|   |               `-CStyleCastExpr 0x55976bad22e0 <col:212, col:219> '_Bool' <IntegralToBoolean>
|   |                 `-IntegerLiteral 0x55976bad22b0 <col:219> 'int' 0
|   |-BinaryOperator 0x55976bad2528 <line:751:3, col:25> 'int' '='
|   | |-DeclRefExpr 0x55976bad24d0 <col:3> 'int' lvalue Var 0x55976bacd208 '__unbuffered_p1_EBX' 'int'
|   | `-ImplicitCastExpr 0x55976bad2510 <col:25> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x55976bad24f0 <col:25> 'int' lvalue Var 0x55976bacd658 'z' 'int'
|   |-BinaryOperator 0x55976bad2658 <line:752:3, col:37> 'int' '='
|   | |-DeclRefExpr 0x55976bad2548 <col:3> 'int' lvalue Var 0x55976bacd658 'z' 'int'
|   | `-ConditionalOperator 0x55976bad2628 <col:7, col:37> 'int'
|   |   |-ImplicitCastExpr 0x55976bad25e0 <col:7> 'int' <IntegralCast>
|   |   | `-ImplicitCastExpr 0x55976bad25c8 <col:7> '_Bool' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x55976bad2568 <col:7> '_Bool' lvalue Var 0x55976bacd6f0 'z$flush_delayed' '_Bool'
|   |   |-ImplicitCastExpr 0x55976bad25f8 <col:25> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x55976bad2588 <col:25> 'int' lvalue Var 0x55976bacd770 'z$mem_tmp' 'int'
|   |   `-ImplicitCastExpr 0x55976bad2610 <col:37> 'int' <LValueToRValue>
|   |     `-DeclRefExpr 0x55976bad25a8 <col:37> 'int' lvalue Var 0x55976bacd658 'z' 'int'
|   |-BinaryOperator 0x55976bad26f0 <line:753:3, col:28> '_Bool' '='
|   | |-DeclRefExpr 0x55976bad2678 <col:3> '_Bool' lvalue Var 0x55976bacd6f0 'z$flush_delayed' '_Bool'
|   | `-CStyleCastExpr 0x55976bad26c8 <col:21, col:28> '_Bool' <IntegralToBoolean>
|   |   `-IntegerLiteral 0x55976bad2698 <col:28> 'int' 0
|   |-CallExpr 0x55976bad2748 <line:754:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x55976bad2730 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55976bad2710 <col:3> 'void ()' Function 0x55976ba73f00 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x55976bad27a0 <line:755:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x55976bad2788 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55976bad2768 <col:3> 'void ()' Function 0x55976ba73e40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x55976bad2a88 <line:756:3, col:103> 'int' '='
|   | |-DeclRefExpr 0x55976bad27c0 <col:3> 'int' lvalue Var 0x55976bacd658 'z' 'int'
|   | `-ConditionalOperator 0x55976bad2a58 <col:7, col:103> 'int'
|   |   |-BinaryOperator 0x55976bad2880 <col:7, col:25> 'int' '&&'
|   |   | |-ImplicitCastExpr 0x55976bad2838 <col:7> 'int' <IntegralCast>
|   |   | | `-ImplicitCastExpr 0x55976bad2820 <col:7> '_Bool' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x55976bad27e0 <col:7> '_Bool' lvalue Var 0x55976bacdc78 'z$w_buff0_used' '_Bool'
|   |   | `-ImplicitCastExpr 0x55976bad2868 <col:25> 'int' <IntegralCast>
|   |   |   `-ImplicitCastExpr 0x55976bad2850 <col:25> '_Bool' <LValueToRValue>
|   |   |     `-DeclRefExpr 0x55976bad2800 <col:25> '_Bool' lvalue Var 0x55976bacd8d8 'z$r_buff0_thd2' '_Bool'
|   |   |-ImplicitCastExpr 0x55976bad2a40 <col:42> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x55976bad28a0 <col:42> 'int' lvalue Var 0x55976bacdc00 'z$w_buff0' 'int'
|   |   `-ParenExpr 0x55976bad2a20 <col:54, col:103> 'int'
|   |     `-ConditionalOperator 0x55976bad29f0 <col:55, col:102> 'int'
|   |       |-BinaryOperator 0x55976bad2960 <col:55, col:73> 'int' '&&'
|   |       | |-ImplicitCastExpr 0x55976bad2918 <col:55> 'int' <IntegralCast>
|   |       | | `-ImplicitCastExpr 0x55976bad2900 <col:55> '_Bool' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x55976bad28c0 <col:55> '_Bool' lvalue Var 0x55976bacdd70 'z$w_buff1_used' '_Bool'
|   |       | `-ImplicitCastExpr 0x55976bad2948 <col:73> 'int' <IntegralCast>
|   |       |   `-ImplicitCastExpr 0x55976bad2930 <col:73> '_Bool' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x55976bad28e0 <col:73> '_Bool' lvalue Var 0x55976bacda40 'z$r_buff1_thd2' '_Bool'
|   |       |-ImplicitCastExpr 0x55976bad29c0 <col:90> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x55976bad2980 <col:90> 'int' lvalue Var 0x55976bacdcf8 'z$w_buff1' 'int'
|   |       `-ImplicitCastExpr 0x55976bad29d8 <col:102> 'int' <LValueToRValue>
|   |         `-DeclRefExpr 0x55976bad29a0 <col:102> 'int' lvalue Var 0x55976bacd658 'z' 'int'
|   |-BinaryOperator 0x55976bad2ca8 <line:757:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x55976bad2aa8 <col:3> '_Bool' lvalue Var 0x55976bacdc78 'z$w_buff0_used' '_Bool'
|   | `-ImplicitCastExpr 0x55976bad2c90 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55976bad2c60 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x55976bad2b80 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x55976bad2b20 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x55976bad2b08 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x55976bad2ac8 <col:20> '_Bool' lvalue Var 0x55976bacdc78 'z$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x55976bad2b68 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x55976bad2b50 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x55976bad2ae8 <col:38> '_Bool' lvalue Var 0x55976bacd8d8 'z$r_buff0_thd2' '_Bool'
|   |     |-ImplicitCastExpr 0x55976bad2c18 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x55976bad2bd0 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x55976bad2ba0 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x55976bad2c48 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x55976bad2c30 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x55976bad2bf8 <col:66> '_Bool' lvalue Var 0x55976bacdc78 'z$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x55976bad2f90 <line:758:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x55976bad2cc8 <col:3> '_Bool' lvalue Var 0x55976bacdd70 'z$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x55976bad2f78 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55976bad2f48 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x55976bad2e68 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x55976bad2d88 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x55976bad2d40 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x55976bad2d28 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x55976bad2ce8 <col:20> '_Bool' lvalue Var 0x55976bacdc78 'z$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x55976bad2d70 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x55976bad2d58 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x55976bad2d08 <col:38> '_Bool' lvalue Var 0x55976bacd8d8 'z$r_buff0_thd2' '_Bool'
|   |     | `-BinaryOperator 0x55976bad2e48 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x55976bad2e00 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x55976bad2de8 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x55976bad2da8 <col:56> '_Bool' lvalue Var 0x55976bacdd70 'z$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x55976bad2e30 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x55976bad2e18 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x55976bad2dc8 <col:74> '_Bool' lvalue Var 0x55976bacda40 'z$r_buff1_thd2' '_Bool'
|   |     |-ImplicitCastExpr 0x55976bad2f00 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x55976bad2eb8 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x55976bad2e88 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x55976bad2f30 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x55976bad2f18 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x55976bad2ee0 <col:102> '_Bool' lvalue Var 0x55976bacdd70 'z$w_buff1_used' '_Bool'
|   |-BinaryOperator 0x55976bad3198 <line:759:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x55976bad2fb0 <col:3> '_Bool' lvalue Var 0x55976bacd8d8 'z$r_buff0_thd2' '_Bool'
|   | `-ImplicitCastExpr 0x55976bad3180 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55976bad3150 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x55976bad3070 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x55976bad3028 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x55976bad3010 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x55976bad2fd0 <col:20> '_Bool' lvalue Var 0x55976bacdc78 'z$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x55976bad3058 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x55976bad3040 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x55976bad2ff0 <col:38> '_Bool' lvalue Var 0x55976bacd8d8 'z$r_buff0_thd2' '_Bool'
|   |     |-ImplicitCastExpr 0x55976bad3108 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x55976bad30c0 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x55976bad3090 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x55976bad3138 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x55976bad3120 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x55976bad30e8 <col:66> '_Bool' lvalue Var 0x55976bacd8d8 'z$r_buff0_thd2' '_Bool'
|   |-BinaryOperator 0x55976bad3480 <line:760:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x55976bad31b8 <col:3> '_Bool' lvalue Var 0x55976bacda40 'z$r_buff1_thd2' '_Bool'
|   | `-ImplicitCastExpr 0x55976bad3468 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55976bad3438 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x55976bad3358 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x55976bad3278 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x55976bad3230 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x55976bad3218 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x55976bad31d8 <col:20> '_Bool' lvalue Var 0x55976bacdc78 'z$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x55976bad3260 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x55976bad3248 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x55976bad31f8 <col:38> '_Bool' lvalue Var 0x55976bacd8d8 'z$r_buff0_thd2' '_Bool'
|   |     | `-BinaryOperator 0x55976bad3338 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x55976bad32f0 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x55976bad32d8 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x55976bad3298 <col:56> '_Bool' lvalue Var 0x55976bacdd70 'z$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x55976bad3320 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x55976bad3308 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x55976bad32b8 <col:74> '_Bool' lvalue Var 0x55976bacda40 'z$r_buff1_thd2' '_Bool'
|   |     |-ImplicitCastExpr 0x55976bad33f0 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x55976bad33a8 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x55976bad3378 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x55976bad3420 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x55976bad3408 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x55976bad33d0 <col:102> '_Bool' lvalue Var 0x55976bacda40 'z$r_buff1_thd2' '_Bool'
|   |-CallExpr 0x55976bad34d8 <line:761:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x55976bad34c0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55976bad34a0 <col:3> 'void ()' Function 0x55976ba73f00 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x55976bad3530 <line:762:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x55976bad3518 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55976bad34f8 <col:3> 'void ()' Function 0x55976ba73e40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x55976bad35e8 <line:763:3, col:41> 'int' '='
|   | |-DeclRefExpr 0x55976bad3550 <col:3> 'int' lvalue Var 0x55976baccfc8 '__unbuffered_cnt' 'int'
|   | `-BinaryOperator 0x55976bad35c8 <col:22, col:41> 'int' '+'
|   |   |-ImplicitCastExpr 0x55976bad35b0 <col:22> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x55976bad3570 <col:22> 'int' lvalue Var 0x55976baccfc8 '__unbuffered_cnt' 'int'
|   |   `-IntegerLiteral 0x55976bad3590 <col:41> 'int' 1
|   |-CallExpr 0x55976bad3640 <line:764:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x55976bad3628 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55976bad3608 <col:3> 'void ()' Function 0x55976ba73f00 '__VERIFIER_atomic_end' 'void ()'
|   `-ReturnStmt 0x55976bad36b8 <line:765:3, col:36>
|     `-CallExpr 0x55976bad3698 <col:10, col:36> 'void *'
|       `-ImplicitCastExpr 0x55976bad3680 <col:10> 'void *(*)(void)' <FunctionToPointerDecay>
|         `-DeclRefExpr 0x55976bad3660 <col:10> 'void *(void)' Function 0x55976ba73958 '__VERIFIER_nondet_pointer' 'void *(void)'
|-FunctionDecl 0x55976bad3818 prev 0x55976baccd10 <line:767:1, line:769:1> line:767:6 fence 'void ()'
| `-CompoundStmt 0x55976bad38b8 <line:768:1, line:769:1>
|-FunctionDecl 0x55976bad38e8 prev 0x55976baccdd0 <line:770:1, line:772:1> line:770:6 isync 'void ()'
| `-CompoundStmt 0x55976bad3988 <line:771:1, line:772:1>
|-FunctionDecl 0x55976bad39b8 prev 0x55976bacce90 <line:773:1, line:775:1> line:773:6 lwfence 'void ()'
| `-CompoundStmt 0x55976bad3a58 <line:774:1, line:775:1>
`-FunctionDecl 0x55976bad3b60 <line:776:1, line:798:1> line:776:5 main 'int ()'
  `-CompoundStmt 0x55976bad5518 <line:777:1, line:798:1>
    |-DeclStmt 0x55976bad3c78 <line:778:3, col:18>
    | `-VarDecl 0x55976bad3c10 <col:3, col:13> col:13 used t1099 'pthread_t':'unsigned long'
    |-CallExpr 0x55976bad3e88 <line:779:3, col:54> 'int'
    | |-ImplicitCastExpr 0x55976bad3e70 <col:3> 'int (*)(pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x55976bad3c90 <col:3> 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' Function 0x55976bab4488 'pthread_create' 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)'
    | |-UnaryOperator 0x55976bad3cd0 <col:18, col:19> 'pthread_t *' prefix '&' cannot overflow
    | | `-DeclRefExpr 0x55976bad3cb0 <col:19> 'pthread_t':'unsigned long' lvalue Var 0x55976bad3c10 't1099' 'pthread_t':'unsigned long'
    | |-ImplicitCastExpr 0x55976bad3ec8 <col:26, col:36> 'const pthread_attr_t *' <NullToPointer>
    | | `-ParenExpr 0x55976bad3d48 <col:26, col:36> 'void *'
    | |   `-CStyleCastExpr 0x55976bad3d20 <col:27, col:35> 'void *' <NullToPointer>
    | |     `-IntegerLiteral 0x55976bad3ce8 <col:35> 'int' 0
    | |-ImplicitCastExpr 0x55976bad3ee0 <col:39> 'void *(*)(void *)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x55976bad3d68 <col:39> 'void *(void *)' Function 0x55976bacdf78 'P0' 'void *(void *)'
    | `-ParenExpr 0x55976bad3de8 <col:43, col:53> 'void *'
    |   `-CStyleCastExpr 0x55976bad3dc0 <col:44, col:52> 'void *' <NullToPointer>
    |     `-IntegerLiteral 0x55976bad3d88 <col:52> 'int' 0
    |-DeclStmt 0x55976bad3f70 <line:780:3, col:18>
    | `-VarDecl 0x55976bad3f08 <col:3, col:13> col:13 used t1100 'pthread_t':'unsigned long'
    |-CallExpr 0x55976bad4118 <line:781:3, col:54> 'int'
    | |-ImplicitCastExpr 0x55976bad4100 <col:3> 'int (*)(pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x55976bad3f88 <col:3> 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' Function 0x55976bab4488 'pthread_create' 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)'
    | |-UnaryOperator 0x55976bad3fc8 <col:18, col:19> 'pthread_t *' prefix '&' cannot overflow
    | | `-DeclRefExpr 0x55976bad3fa8 <col:19> 'pthread_t':'unsigned long' lvalue Var 0x55976bad3f08 't1100' 'pthread_t':'unsigned long'
    | |-ImplicitCastExpr 0x55976bad4158 <col:26, col:36> 'const pthread_attr_t *' <NullToPointer>
    | | `-ParenExpr 0x55976bad4040 <col:26, col:36> 'void *'
    | |   `-CStyleCastExpr 0x55976bad4018 <col:27, col:35> 'void *' <NullToPointer>
    | |     `-IntegerLiteral 0x55976bad3fe0 <col:35> 'int' 0
    | |-ImplicitCastExpr 0x55976bad4170 <col:39> 'void *(*)(void *)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x55976bad4060 <col:39> 'void *(void *)' Function 0x55976bacf8b0 'P1' 'void *(void *)'
    | `-ParenExpr 0x55976bad40e0 <col:43, col:53> 'void *'
    |   `-CStyleCastExpr 0x55976bad40b8 <col:44, col:52> 'void *' <NullToPointer>
    |     `-IntegerLiteral 0x55976bad4080 <col:52> 'int' 0
    |-CallExpr 0x55976bad41c0 <line:782:3, col:27> 'void'
    | `-ImplicitCastExpr 0x55976bad41a8 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x55976bad4188 <col:3> 'void ()' Function 0x55976ba73e40 '__VERIFIER_atomic_begin' 'void ()'
    |-BinaryOperator 0x55976bad4290 <line:783:3, col:41> '_Bool' '='
    | |-DeclRefExpr 0x55976bad41e0 <col:3> '_Bool' lvalue Var 0x55976bacd2a0 'main$tmp_guard0' '_Bool'
    | `-ImplicitCastExpr 0x55976bad4278 <col:21, col:41> '_Bool' <IntegralToBoolean>
    |   `-BinaryOperator 0x55976bad4258 <col:21, col:41> 'int' '=='
    |     |-ImplicitCastExpr 0x55976bad4240 <col:21> 'int' <LValueToRValue>
    |     | `-DeclRefExpr 0x55976bad4200 <col:21> 'int' lvalue Var 0x55976baccfc8 '__unbuffered_cnt' 'int'
    |     `-IntegerLiteral 0x55976bad4220 <col:41> 'int' 2
    |-CallExpr 0x55976bad42e8 <line:784:3, col:25> 'void'
    | `-ImplicitCastExpr 0x55976bad42d0 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x55976bad42b0 <col:3> 'void ()' Function 0x55976ba73f00 '__VERIFIER_atomic_end' 'void ()'
    |-CallExpr 0x55976bad4360 <line:785:3, col:36> 'void'
    | |-ImplicitCastExpr 0x55976bad4348 <col:3> 'void (*)(int)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x55976bad4308 <col:3> 'void (int)' Function 0x55976ba73790 '__VERIFIER_assume' 'void (int)'
    | `-ImplicitCastExpr 0x55976bad43a0 <col:21> 'int' <IntegralCast>
    |   `-ImplicitCastExpr 0x55976bad4388 <col:21> '_Bool' <LValueToRValue>
    |     `-DeclRefExpr 0x55976bad4328 <col:21> '_Bool' lvalue Var 0x55976bacd2a0 'main$tmp_guard0' '_Bool'
    |-CallExpr 0x55976bad43f0 <line:786:3, col:27> 'void'
    | `-ImplicitCastExpr 0x55976bad43d8 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x55976bad43b8 <col:3> 'void ()' Function 0x55976ba73e40 '__VERIFIER_atomic_begin' 'void ()'
    |-BinaryOperator 0x55976bad46d8 <line:787:3, col:103> 'int' '='
    | |-DeclRefExpr 0x55976bad4410 <col:3> 'int' lvalue Var 0x55976bacd658 'z' 'int'
    | `-ConditionalOperator 0x55976bad46a8 <col:7, col:103> 'int'
    |   |-BinaryOperator 0x55976bad44d0 <col:7, col:25> 'int' '&&'
    |   | |-ImplicitCastExpr 0x55976bad4488 <col:7> 'int' <IntegralCast>
    |   | | `-ImplicitCastExpr 0x55976bad4470 <col:7> '_Bool' <LValueToRValue>
    |   | |   `-DeclRefExpr 0x55976bad4430 <col:7> '_Bool' lvalue Var 0x55976bacdc78 'z$w_buff0_used' '_Bool'
    |   | `-ImplicitCastExpr 0x55976bad44b8 <col:25> 'int' <IntegralCast>
    |   |   `-ImplicitCastExpr 0x55976bad44a0 <col:25> '_Bool' <LValueToRValue>
    |   |     `-DeclRefExpr 0x55976bad4450 <col:25> '_Bool' lvalue Var 0x55976bacd7e8 'z$r_buff0_thd0' '_Bool'
    |   |-ImplicitCastExpr 0x55976bad4690 <col:42> 'int' <LValueToRValue>
    |   | `-DeclRefExpr 0x55976bad44f0 <col:42> 'int' lvalue Var 0x55976bacdc00 'z$w_buff0' 'int'
    |   `-ParenExpr 0x55976bad4670 <col:54, col:103> 'int'
    |     `-ConditionalOperator 0x55976bad4640 <col:55, col:102> 'int'
    |       |-BinaryOperator 0x55976bad45b0 <col:55, col:73> 'int' '&&'
    |       | |-ImplicitCastExpr 0x55976bad4568 <col:55> 'int' <IntegralCast>
    |       | | `-ImplicitCastExpr 0x55976bad4550 <col:55> '_Bool' <LValueToRValue>
    |       | |   `-DeclRefExpr 0x55976bad4510 <col:55> '_Bool' lvalue Var 0x55976bacdd70 'z$w_buff1_used' '_Bool'
    |       | `-ImplicitCastExpr 0x55976bad4598 <col:73> 'int' <IntegralCast>
    |       |   `-ImplicitCastExpr 0x55976bad4580 <col:73> '_Bool' <LValueToRValue>
    |       |     `-DeclRefExpr 0x55976bad4530 <col:73> '_Bool' lvalue Var 0x55976bacd950 'z$r_buff1_thd0' '_Bool'
    |       |-ImplicitCastExpr 0x55976bad4610 <col:90> 'int' <LValueToRValue>
    |       | `-DeclRefExpr 0x55976bad45d0 <col:90> 'int' lvalue Var 0x55976bacdcf8 'z$w_buff1' 'int'
    |       `-ImplicitCastExpr 0x55976bad4628 <col:102> 'int' <LValueToRValue>
    |         `-DeclRefExpr 0x55976bad45f0 <col:102> 'int' lvalue Var 0x55976bacd658 'z' 'int'
    |-BinaryOperator 0x55976bad48e0 <line:788:3, col:66> '_Bool' '='
    | |-DeclRefExpr 0x55976bad46f8 <col:3> '_Bool' lvalue Var 0x55976bacdc78 'z$w_buff0_used' '_Bool'
    | `-ImplicitCastExpr 0x55976bad48c8 <col:20, col:66> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x55976bad4898 <col:20, col:66> 'int'
    |     |-BinaryOperator 0x55976bad47b8 <col:20, col:38> 'int' '&&'
    |     | |-ImplicitCastExpr 0x55976bad4770 <col:20> 'int' <IntegralCast>
    |     | | `-ImplicitCastExpr 0x55976bad4758 <col:20> '_Bool' <LValueToRValue>
    |     | |   `-DeclRefExpr 0x55976bad4718 <col:20> '_Bool' lvalue Var 0x55976bacdc78 'z$w_buff0_used' '_Bool'
    |     | `-ImplicitCastExpr 0x55976bad47a0 <col:38> 'int' <IntegralCast>
    |     |   `-ImplicitCastExpr 0x55976bad4788 <col:38> '_Bool' <LValueToRValue>
    |     |     `-DeclRefExpr 0x55976bad4738 <col:38> '_Bool' lvalue Var 0x55976bacd7e8 'z$r_buff0_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x55976bad4850 <col:55, col:62> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x55976bad4808 <col:55, col:62> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x55976bad47d8 <col:62> 'int' 0
    |     `-ImplicitCastExpr 0x55976bad4880 <col:66> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x55976bad4868 <col:66> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x55976bad4830 <col:66> '_Bool' lvalue Var 0x55976bacdc78 'z$w_buff0_used' '_Bool'
    |-BinaryOperator 0x55976bad4be8 <line:789:3, col:102> '_Bool' '='
    | |-DeclRefExpr 0x55976bad4900 <col:3> '_Bool' lvalue Var 0x55976bacdd70 'z$w_buff1_used' '_Bool'
    | `-ImplicitCastExpr 0x55976bad4bd0 <col:20, col:102> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x55976bad4ba0 <col:20, col:102> 'int'
    |     |-BinaryOperator 0x55976bad4aa0 <col:20, col:74> 'int' '||'
    |     | |-BinaryOperator 0x55976bad49c0 <col:20, col:38> 'int' '&&'
    |     | | |-ImplicitCastExpr 0x55976bad4978 <col:20> 'int' <IntegralCast>
    |     | | | `-ImplicitCastExpr 0x55976bad4960 <col:20> '_Bool' <LValueToRValue>
    |     | | |   `-DeclRefExpr 0x55976bad4920 <col:20> '_Bool' lvalue Var 0x55976bacdc78 'z$w_buff0_used' '_Bool'
    |     | | `-ImplicitCastExpr 0x55976bad49a8 <col:38> 'int' <IntegralCast>
    |     | |   `-ImplicitCastExpr 0x55976bad4990 <col:38> '_Bool' <LValueToRValue>
    |     | |     `-DeclRefExpr 0x55976bad4940 <col:38> '_Bool' lvalue Var 0x55976bacd7e8 'z$r_buff0_thd0' '_Bool'
    |     | `-BinaryOperator 0x55976bad4a80 <col:56, col:74> 'int' '&&'
    |     |   |-ImplicitCastExpr 0x55976bad4a38 <col:56> 'int' <IntegralCast>
    |     |   | `-ImplicitCastExpr 0x55976bad4a20 <col:56> '_Bool' <LValueToRValue>
    |     |   |   `-DeclRefExpr 0x55976bad49e0 <col:56> '_Bool' lvalue Var 0x55976bacdd70 'z$w_buff1_used' '_Bool'
    |     |   `-ImplicitCastExpr 0x55976bad4a68 <col:74> 'int' <IntegralCast>
    |     |     `-ImplicitCastExpr 0x55976bad4a50 <col:74> '_Bool' <LValueToRValue>
    |     |       `-DeclRefExpr 0x55976bad4a00 <col:74> '_Bool' lvalue Var 0x55976bacd950 'z$r_buff1_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x55976bad4b38 <col:91, col:98> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x55976bad4af0 <col:91, col:98> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x55976bad4ac0 <col:98> 'int' 0
    |     `-ImplicitCastExpr 0x55976bad4b88 <col:102> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x55976bad4b70 <col:102> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x55976bad4b18 <col:102> '_Bool' lvalue Var 0x55976bacdd70 'z$w_buff1_used' '_Bool'
    |-BinaryOperator 0x55976bad4df0 <line:790:3, col:66> '_Bool' '='
    | |-DeclRefExpr 0x55976bad4c08 <col:3> '_Bool' lvalue Var 0x55976bacd7e8 'z$r_buff0_thd0' '_Bool'
    | `-ImplicitCastExpr 0x55976bad4dd8 <col:20, col:66> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x55976bad4da8 <col:20, col:66> 'int'
    |     |-BinaryOperator 0x55976bad4cc8 <col:20, col:38> 'int' '&&'
    |     | |-ImplicitCastExpr 0x55976bad4c80 <col:20> 'int' <IntegralCast>
    |     | | `-ImplicitCastExpr 0x55976bad4c68 <col:20> '_Bool' <LValueToRValue>
    |     | |   `-DeclRefExpr 0x55976bad4c28 <col:20> '_Bool' lvalue Var 0x55976bacdc78 'z$w_buff0_used' '_Bool'
    |     | `-ImplicitCastExpr 0x55976bad4cb0 <col:38> 'int' <IntegralCast>
    |     |   `-ImplicitCastExpr 0x55976bad4c98 <col:38> '_Bool' <LValueToRValue>
    |     |     `-DeclRefExpr 0x55976bad4c48 <col:38> '_Bool' lvalue Var 0x55976bacd7e8 'z$r_buff0_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x55976bad4d60 <col:55, col:62> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x55976bad4d18 <col:55, col:62> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x55976bad4ce8 <col:62> 'int' 0
    |     `-ImplicitCastExpr 0x55976bad4d90 <col:66> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x55976bad4d78 <col:66> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x55976bad4d40 <col:66> '_Bool' lvalue Var 0x55976bacd7e8 'z$r_buff0_thd0' '_Bool'
    |-BinaryOperator 0x55976bad50d8 <line:791:3, col:102> '_Bool' '='
    | |-DeclRefExpr 0x55976bad4e10 <col:3> '_Bool' lvalue Var 0x55976bacd950 'z$r_buff1_thd0' '_Bool'
    | `-ImplicitCastExpr 0x55976bad50c0 <col:20, col:102> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x55976bad5090 <col:20, col:102> 'int'
    |     |-BinaryOperator 0x55976bad4fb0 <col:20, col:74> 'int' '||'
    |     | |-BinaryOperator 0x55976bad4ed0 <col:20, col:38> 'int' '&&'
    |     | | |-ImplicitCastExpr 0x55976bad4e88 <col:20> 'int' <IntegralCast>
    |     | | | `-ImplicitCastExpr 0x55976bad4e70 <col:20> '_Bool' <LValueToRValue>
    |     | | |   `-DeclRefExpr 0x55976bad4e30 <col:20> '_Bool' lvalue Var 0x55976bacdc78 'z$w_buff0_used' '_Bool'
    |     | | `-ImplicitCastExpr 0x55976bad4eb8 <col:38> 'int' <IntegralCast>
    |     | |   `-ImplicitCastExpr 0x55976bad4ea0 <col:38> '_Bool' <LValueToRValue>
    |     | |     `-DeclRefExpr 0x55976bad4e50 <col:38> '_Bool' lvalue Var 0x55976bacd7e8 'z$r_buff0_thd0' '_Bool'
    |     | `-BinaryOperator 0x55976bad4f90 <col:56, col:74> 'int' '&&'
    |     |   |-ImplicitCastExpr 0x55976bad4f48 <col:56> 'int' <IntegralCast>
    |     |   | `-ImplicitCastExpr 0x55976bad4f30 <col:56> '_Bool' <LValueToRValue>
    |     |   |   `-DeclRefExpr 0x55976bad4ef0 <col:56> '_Bool' lvalue Var 0x55976bacdd70 'z$w_buff1_used' '_Bool'
    |     |   `-ImplicitCastExpr 0x55976bad4f78 <col:74> 'int' <IntegralCast>
    |     |     `-ImplicitCastExpr 0x55976bad4f60 <col:74> '_Bool' <LValueToRValue>
    |     |       `-DeclRefExpr 0x55976bad4f10 <col:74> '_Bool' lvalue Var 0x55976bacd950 'z$r_buff1_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x55976bad5048 <col:91, col:98> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x55976bad5000 <col:91, col:98> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x55976bad4fd0 <col:98> 'int' 0
    |     `-ImplicitCastExpr 0x55976bad5078 <col:102> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x55976bad5060 <col:102> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x55976bad5028 <col:102> '_Bool' lvalue Var 0x55976bacd950 'z$r_buff1_thd0' '_Bool'
    |-CallExpr 0x55976bad5130 <line:792:3, col:25> 'void'
    | `-ImplicitCastExpr 0x55976bad5118 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x55976bad50f8 <col:3> 'void ()' Function 0x55976ba73f00 '__VERIFIER_atomic_end' 'void ()'
    |-CallExpr 0x55976bad5188 <line:793:3, col:27> 'void'
    | `-ImplicitCastExpr 0x55976bad5170 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x55976bad5150 <col:3> 'void ()' Function 0x55976ba73e40 '__VERIFIER_atomic_begin' 'void ()'
    |-BinaryOperator 0x55976bad53c0 <line:794:3, col:85> '_Bool' '='
    | |-DeclRefExpr 0x55976bad51a8 <col:3> '_Bool' lvalue Var 0x55976bacd318 'main$tmp_guard1' '_Bool'
    | `-ImplicitCastExpr 0x55976bad53a8 <col:21, col:85> '_Bool' <IntegralToBoolean>
    |   `-UnaryOperator 0x55976bad5390 <col:21, col:85> 'int' prefix '!' cannot overflow
    |     `-ParenExpr 0x55976bad5370 <col:22, col:85> 'int'
    |       `-BinaryOperator 0x55976bad5350 <col:23, col:84> 'int' '&&'
    |         |-BinaryOperator 0x55976bad52b8 <col:23, col:56> 'int' '&&'
    |         | |-BinaryOperator 0x55976bad5220 <col:23, col:28> 'int' '=='
    |         | | |-ImplicitCastExpr 0x55976bad5208 <col:23> 'int' <LValueToRValue>
    |         | | | `-DeclRefExpr 0x55976bad51c8 <col:23> 'int' lvalue Var 0x55976bacd418 'x' 'int'
    |         | | `-IntegerLiteral 0x55976bad51e8 <col:28> 'int' 2
    |         | `-BinaryOperator 0x55976bad5298 <col:33, col:56> 'int' '=='
    |         |   |-ImplicitCastExpr 0x55976bad5280 <col:33> 'int' <LValueToRValue>
    |         |   | `-DeclRefExpr 0x55976bad5240 <col:33> 'int' lvalue Var 0x55976bacd0e8 '__unbuffered_p1_EAX' 'int'
    |         |   `-IntegerLiteral 0x55976bad5260 <col:56> 'int' 1
    |         `-BinaryOperator 0x55976bad5330 <col:61, col:84> 'int' '=='
    |           |-ImplicitCastExpr 0x55976bad5318 <col:61> 'int' <LValueToRValue>
    |           | `-DeclRefExpr 0x55976bad52d8 <col:61> 'int' lvalue Var 0x55976bacd208 '__unbuffered_p1_EBX' 'int'
    |           `-IntegerLiteral 0x55976bad52f8 <col:84> 'int' 0
    |-CallExpr 0x55976bad5418 <line:795:3, col:25> 'void'
    | `-ImplicitCastExpr 0x55976bad5400 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x55976bad53e0 <col:3> 'void ()' Function 0x55976ba73f00 '__VERIFIER_atomic_end' 'void ()'
    |-CallExpr 0x55976bad5490 <line:796:3, col:36> 'void'
    | |-ImplicitCastExpr 0x55976bad5478 <col:3> 'void (*)(int)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x55976bad5438 <col:3> 'void (int)' Function 0x55976ba73bc8 '__VERIFIER_assert' 'void (int)'
    | `-ImplicitCastExpr 0x55976bad54d0 <col:21> 'int' <IntegralCast>
    |   `-ImplicitCastExpr 0x55976bad54b8 <col:21> '_Bool' <LValueToRValue>
    |     `-DeclRefExpr 0x55976bad5458 <col:21> '_Bool' lvalue Var 0x55976bacd318 'main$tmp_guard1' '_Bool'
    `-ReturnStmt 0x55976bad5508 <line:797:3, col:10>
      `-IntegerLiteral 0x55976bad54e8 <col:10> 'int' 0
