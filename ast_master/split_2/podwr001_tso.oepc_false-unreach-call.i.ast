TranslationUnitDecl 0x56463c912e18 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x56463c9136d8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x56463c9133b0 '__int128'
|-TypedefDecl 0x56463c913748 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x56463c9133d0 'unsigned __int128'
|-TypedefDecl 0x56463c913a50 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x56463c913820 'struct __NSConstantString_tag'
|   `-Record 0x56463c9137a0 '__NSConstantString_tag'
|-TypedefDecl 0x56463c913af8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x56463c913ab0 'char *'
|   `-BuiltinType 0x56463c912eb0 'char'
|-TypedefDecl 0x56463c952650 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'struct __va_list_tag [1]'
| `-ConstantArrayType 0x56463c913d90 'struct __va_list_tag [1]' 1 
|   `-RecordType 0x56463c913bd0 'struct __va_list_tag'
|     `-Record 0x56463c913b50 '__va_list_tag'
|-FunctionDecl 0x56463c952790 <./split_2/podwr001_tso.oepc_false-unreach-call.i:1:1, col:34> col:13 used __VERIFIER_assume 'void (int)' extern
| `-ParmVarDecl 0x56463c9526c0 <col:31> col:34 'int'
|-FunctionDecl 0x56463c952958 <line:2:1, col:45> col:15 used __VERIFIER_nondet_pointer 'void *(void)' extern
|-FunctionDecl 0x56463c952a80 <line:3:1, col:61> col:13 used __VERIFIER_error 'void () __attribute__((noreturn))' extern
|-FunctionDecl 0x56463c952bc8 <line:4:1, col:99> col:6 used __VERIFIER_assert 'void (int)'
| |-ParmVarDecl 0x56463c952b38 <col:24, col:28> col:28 used expression 'int'
| `-CompoundStmt 0x56463c952df8 <col:40, col:99>
|   |-IfStmt 0x56463c952dc8 <col:42, col:88>
|   | |-UnaryOperator 0x56463c952ca8 <col:46, col:47> 'int' prefix '!' cannot overflow
|   | | `-ImplicitCastExpr 0x56463c952c90 <col:47> 'int' <LValueToRValue>
|   | |   `-DeclRefExpr 0x56463c952c70 <col:47> 'int' lvalue ParmVar 0x56463c952b38 'expression' 'int'
|   | `-CompoundStmt 0x56463c952db0 <col:59, col:88>
|   |   `-LabelStmt 0x56463c952d98 <col:61, col:85> 'ERROR'
|   |     `-CallExpr 0x56463c952d28 <col:68, col:85> 'void'
|   |       `-ImplicitCastExpr 0x56463c952d10 <col:68> 'void (*)() __attribute__((noreturn))' <FunctionToPointerDecay>
|   |         `-DeclRefExpr 0x56463c952cc0 <col:68> 'void () __attribute__((noreturn))' Function 0x56463c952a80 '__VERIFIER_error' 'void () __attribute__((noreturn))'
|   |-NullStmt 0x56463c952de0 <col:89>
|   `-ReturnStmt 0x56463c952de8 <col:91>
|-FunctionDecl 0x56463c952e40 <line:5:1, col:37> col:13 used __VERIFIER_atomic_begin 'void ()' extern
|-FunctionDecl 0x56463c952f00 <line:6:1, col:35> col:13 used __VERIFIER_atomic_end 'void ()' extern
|-FunctionDecl 0x56463c953280 <line:8:1, line:10:76> line:8:13 __assert_fail 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x56463c952fb8 <col:28, col:40> col:40 __assertion 'const char *'
| |-ParmVarDecl 0x56463c953038 <col:53, col:65> col:65 __file 'const char *'
| |-ParmVarDecl 0x56463c9530b8 <line:9:7, col:20> col:20 __line 'unsigned int'
| |-ParmVarDecl 0x56463c953138 <col:28, col:40> col:40 __function 'const char *'
| `-NoThrowAttr 0x56463c953340 <line:10:22>
|-FunctionDecl 0x56463c979390 <line:11:1, line:13:76> line:11:13 __assert_perror_fail 'void (int, const char *, unsigned int, const char *) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x56463c9533b0 <col:35, col:39> col:39 __errnum 'int'
| |-ParmVarDecl 0x56463c953430 <col:49, col:61> col:61 __file 'const char *'
| |-ParmVarDecl 0x56463c9534b0 <line:12:7, col:20> col:20 __line 'unsigned int'
| |-ParmVarDecl 0x56463c953530 <col:28, col:40> col:40 __function 'const char *'
| `-NoThrowAttr 0x56463c979450 <line:13:22>
|-FunctionDecl 0x56463c979700 <line:14:1, line:15:76> line:14:13 __assert 'void (const char *, const char *, int) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x56463c9794c0 <col:23, col:35> col:35 __assertion 'const char *'
| |-ParmVarDecl 0x56463c979540 <col:48, col:60> col:60 __file 'const char *'
| |-ParmVarDecl 0x56463c9795c0 <col:68, col:72> col:72 __line 'int'
| `-NoThrowAttr 0x56463c9797b8 <line:15:22>
|-TypedefDecl 0x56463c979828 <line:17:1, col:23> col:23 __u_char 'unsigned char'
| `-BuiltinType 0x56463c912f70 'unsigned char'
|-TypedefDecl 0x56463c979898 <line:18:1, col:28> col:28 __u_short 'unsigned short'
| `-BuiltinType 0x56463c912f90 'unsigned short'
|-TypedefDecl 0x56463c979908 <line:19:1, col:22> col:22 __u_int 'unsigned int'
| `-BuiltinType 0x56463c912fb0 'unsigned int'
|-TypedefDecl 0x56463c979978 <line:20:1, col:27> col:27 __u_long 'unsigned long'
| `-BuiltinType 0x56463c912fd0 'unsigned long'
|-TypedefDecl 0x56463c9799e8 <line:21:1, col:21> col:21 __int8_t 'signed char'
| `-BuiltinType 0x56463c912ed0 'signed char'
|-TypedefDecl 0x56463c979a58 <line:22:1, col:23> col:23 __uint8_t 'unsigned char'
| `-BuiltinType 0x56463c912f70 'unsigned char'
|-TypedefDecl 0x56463c979ac8 <line:23:1, col:26> col:26 __int16_t 'short'
| `-BuiltinType 0x56463c912ef0 'short'
|-TypedefDecl 0x56463c979b38 <line:24:1, col:28> col:28 __uint16_t 'unsigned short'
| `-BuiltinType 0x56463c912f90 'unsigned short'
|-TypedefDecl 0x56463c979ba8 <line:25:1, col:20> col:20 __int32_t 'int'
| `-BuiltinType 0x56463c912f10 'int'
|-TypedefDecl 0x56463c979c18 <line:26:1, col:22> col:22 __uint32_t 'unsigned int'
| `-BuiltinType 0x56463c912fb0 'unsigned int'
|-TypedefDecl 0x56463c979c88 <line:27:1, col:25> col:25 __int64_t 'long'
| `-BuiltinType 0x56463c912f30 'long'
|-TypedefDecl 0x56463c979cf8 <line:28:1, col:27> col:27 referenced __uint64_t 'unsigned long'
| `-BuiltinType 0x56463c912fd0 'unsigned long'
|-TypedefDecl 0x56463c979d68 <line:29:1, col:18> col:18 referenced __quad_t 'long'
| `-BuiltinType 0x56463c912f30 'long'
|-TypedefDecl 0x56463c979dd8 <line:30:1, col:27> col:27 __u_quad_t 'unsigned long'
| `-BuiltinType 0x56463c912fd0 'unsigned long'
|-TypedefDecl 0x56463c979e48 <line:31:1, col:27> col:27 __dev_t 'unsigned long'
| `-BuiltinType 0x56463c912fd0 'unsigned long'
|-TypedefDecl 0x56463c979eb8 <line:32:1, col:22> col:22 __uid_t 'unsigned int'
| `-BuiltinType 0x56463c912fb0 'unsigned int'
|-TypedefDecl 0x56463c979f28 <line:33:1, col:22> col:22 __gid_t 'unsigned int'
| `-BuiltinType 0x56463c912fb0 'unsigned int'
|-TypedefDecl 0x56463c979f98 <line:34:1, col:27> col:27 __ino_t 'unsigned long'
| `-BuiltinType 0x56463c912fd0 'unsigned long'
|-TypedefDecl 0x56463c97a008 <line:35:1, col:27> col:27 __ino64_t 'unsigned long'
| `-BuiltinType 0x56463c912fd0 'unsigned long'
|-TypedefDecl 0x56463c97a078 <line:36:1, col:22> col:22 __mode_t 'unsigned int'
| `-BuiltinType 0x56463c912fb0 'unsigned int'
|-TypedefDecl 0x56463c97a0e8 <line:37:1, col:27> col:27 __nlink_t 'unsigned long'
| `-BuiltinType 0x56463c912fd0 'unsigned long'
|-TypedefDecl 0x56463c97a158 <line:38:1, col:18> col:18 __off_t 'long'
| `-BuiltinType 0x56463c912f30 'long'
|-TypedefDecl 0x56463c97a1c8 <line:39:1, col:18> col:18 referenced __off64_t 'long'
| `-BuiltinType 0x56463c912f30 'long'
|-TypedefDecl 0x56463c97a238 <line:40:1, col:13> col:13 referenced __pid_t 'int'
| `-BuiltinType 0x56463c912f10 'int'
|-RecordDecl 0x56463c97a290 <line:41:9, col:32> col:9 struct definition
| `-FieldDecl 0x56463c97a408 <col:18, col:29> col:22 __val 'int [2]'
|-TypedefDecl 0x56463c97a4c0 <col:1, col:34> col:34 __fsid_t 'struct __fsid_t':'__fsid_t'
| `-ElaboratedType 0x56463c97a460 'struct __fsid_t' sugar
|   `-RecordType 0x56463c97a310 '__fsid_t'
|     `-Record 0x56463c97a290 ''
|-TypedefDecl 0x56463c97a548 <line:42:1, col:18> col:18 referenced __clock_t 'long'
| `-BuiltinType 0x56463c912f30 'long'
|-TypedefDecl 0x56463c97a5b8 <line:43:1, col:27> col:27 __rlim_t 'unsigned long'
| `-BuiltinType 0x56463c912fd0 'unsigned long'
|-TypedefDecl 0x56463c97a628 <line:44:1, col:27> col:27 __rlim64_t 'unsigned long'
| `-BuiltinType 0x56463c912fd0 'unsigned long'
|-TypedefDecl 0x56463c97a698 <line:45:1, col:22> col:22 __id_t 'unsigned int'
| `-BuiltinType 0x56463c912fb0 'unsigned int'
|-TypedefDecl 0x56463c97a708 <line:46:1, col:18> col:18 referenced __time_t 'long'
| `-BuiltinType 0x56463c912f30 'long'
|-TypedefDecl 0x56463c97a778 <line:47:1, col:22> col:22 __useconds_t 'unsigned int'
| `-BuiltinType 0x56463c912fb0 'unsigned int'
|-TypedefDecl 0x56463c97a7e8 <line:48:1, col:18> col:18 __suseconds_t 'long'
| `-BuiltinType 0x56463c912f30 'long'
|-TypedefDecl 0x56463c97a858 <line:49:1, col:13> col:13 __daddr_t 'int'
| `-BuiltinType 0x56463c912f10 'int'
|-TypedefDecl 0x56463c97a8c8 <line:50:1, col:13> col:13 __key_t 'int'
| `-BuiltinType 0x56463c912f10 'int'
|-TypedefDecl 0x56463c97a938 <line:51:1, col:13> col:13 referenced __clockid_t 'int'
| `-BuiltinType 0x56463c912f10 'int'
|-TypedefDecl 0x56463c97a9a8 <line:52:1, col:16> col:16 referenced __timer_t 'void *'
| `-PointerType 0x56463c913630 'void *'
|   `-BuiltinType 0x56463c912e70 'void'
|-TypedefDecl 0x56463c97aa18 <line:53:1, col:18> col:18 __blksize_t 'long'
| `-BuiltinType 0x56463c912f30 'long'
|-TypedefDecl 0x56463c97aa88 <line:54:1, col:18> col:18 __blkcnt_t 'long'
| `-BuiltinType 0x56463c912f30 'long'
|-TypedefDecl 0x56463c97aaf8 <line:55:1, col:18> col:18 __blkcnt64_t 'long'
| `-BuiltinType 0x56463c912f30 'long'
|-TypedefDecl 0x56463c97ab68 <line:56:1, col:27> col:27 __fsblkcnt_t 'unsigned long'
| `-BuiltinType 0x56463c912fd0 'unsigned long'
|-TypedefDecl 0x56463c97abd8 <line:57:1, col:27> col:27 __fsblkcnt64_t 'unsigned long'
| `-BuiltinType 0x56463c912fd0 'unsigned long'
|-TypedefDecl 0x56463c97ac48 <line:58:1, col:27> col:27 __fsfilcnt_t 'unsigned long'
| `-BuiltinType 0x56463c912fd0 'unsigned long'
|-TypedefDecl 0x56463c97acb8 <line:59:1, col:27> col:27 __fsfilcnt64_t 'unsigned long'
| `-BuiltinType 0x56463c912fd0 'unsigned long'
|-TypedefDecl 0x56463c97ad28 <line:60:1, col:18> col:18 __fsword_t 'long'
| `-BuiltinType 0x56463c912f30 'long'
|-TypedefDecl 0x56463c97ad98 <line:61:1, col:18> col:18 __ssize_t 'long'
| `-BuiltinType 0x56463c912f30 'long'
|-TypedefDecl 0x56463c97ae08 <line:62:1, col:18> col:18 referenced __syscall_slong_t 'long'
| `-BuiltinType 0x56463c912f30 'long'
|-TypedefDecl 0x56463c97ae78 <line:63:1, col:27> col:27 __syscall_ulong_t 'unsigned long'
| `-BuiltinType 0x56463c912fd0 'unsigned long'
|-TypedefDecl 0x56463c97af08 <line:64:1, col:19> col:19 __loff_t '__off64_t':'long'
| `-TypedefType 0x56463c97aed0 '__off64_t' sugar
|   |-Typedef 0x56463c97a1c8 '__off64_t'
|   `-BuiltinType 0x56463c912f30 'long'
|-TypedefDecl 0x56463c97b000 <line:65:1, col:19> col:19 __qaddr_t '__quad_t *'
| `-PointerType 0x56463c97afc0 '__quad_t *'
|   `-TypedefType 0x56463c97af60 '__quad_t' sugar
|     |-Typedef 0x56463c979d68 '__quad_t'
|     `-BuiltinType 0x56463c912f30 'long'
|-TypedefDecl 0x56463c97b070 <line:66:1, col:15> col:15 __caddr_t 'char *'
| `-PointerType 0x56463c913ab0 'char *'
|   `-BuiltinType 0x56463c912eb0 'char'
|-TypedefDecl 0x56463c97b0e0 <line:67:1, col:18> col:18 __intptr_t 'long'
| `-BuiltinType 0x56463c912f30 'long'
|-TypedefDecl 0x56463c97b150 <line:68:1, col:22> col:22 __socklen_t 'unsigned int'
| `-BuiltinType 0x56463c912fb0 'unsigned int'
|-FunctionDecl 0x56463c97b298 <line:69:1, line:73:1> line:70:1 __bswap_32 'unsigned int (unsigned int)' static inline
| |-ParmVarDecl 0x56463c97b1c0 <col:13, col:26> col:26 used __bsx 'unsigned int'
| `-CompoundStmt 0x56463c97c5e8 <line:71:1, line:73:1>
|   `-ReturnStmt 0x56463c97c5d8 <line:72:3, col:34>
|     `-CallExpr 0x56463c97c598 <col:10, col:34> 'unsigned int'
|       |-ImplicitCastExpr 0x56463c97c580 <col:10> 'unsigned int (*)(unsigned int)' <BuiltinFnToFnPtr>
|       | `-DeclRefExpr 0x56463c97c510 <col:10> '<builtin fn type>' Function 0x56463c97c380 '__builtin_bswap32' 'unsigned int (unsigned int)'
|       `-ImplicitCastExpr 0x56463c97c5c0 <col:29> 'unsigned int' <LValueToRValue>
|         `-DeclRefExpr 0x56463c97c530 <col:29> 'unsigned int' lvalue ParmVar 0x56463c97b1c0 '__bsx' 'unsigned int'
|-FunctionDecl 0x56463c97c380 <col:10> col:10 implicit used __builtin_bswap32 'unsigned int (unsigned int)' extern
| |-ParmVarDecl 0x56463c97c420 <<invalid sloc>> <invalid sloc> 'unsigned int'
| |-NoThrowAttr 0x56463c97c490 <col:10> Implicit
| `-ConstAttr 0x56463c97c4e8 <col:10> Implicit
|-FunctionDecl 0x56463c97c740 <line:74:1, line:78:1> line:75:1 __bswap_64 '__uint64_t (__uint64_t)' static inline
| |-ParmVarDecl 0x56463c97c638 <col:13, col:24> col:24 used __bsx '__uint64_t':'unsigned long'
| `-CompoundStmt 0x56463c97ca58 <line:76:1, line:78:1>
|   `-ReturnStmt 0x56463c97ca48 <line:77:3, col:34>
|     `-CallExpr 0x56463c97ca08 <col:10, col:34> 'unsigned long'
|       |-ImplicitCastExpr 0x56463c97c9f0 <col:10> 'unsigned long (*)(unsigned long)' <BuiltinFnToFnPtr>
|       | `-DeclRefExpr 0x56463c97c978 <col:10> '<builtin fn type>' Function 0x56463c97c7e8 '__builtin_bswap64' 'unsigned long (unsigned long)'
|       `-ImplicitCastExpr 0x56463c97ca30 <col:29> '__uint64_t':'unsigned long' <LValueToRValue>
|         `-DeclRefExpr 0x56463c97c998 <col:29> '__uint64_t':'unsigned long' lvalue ParmVar 0x56463c97c638 '__bsx' '__uint64_t':'unsigned long'
|-FunctionDecl 0x56463c97c7e8 <col:10> col:10 implicit used __builtin_bswap64 'unsigned long (unsigned long)' extern
| |-ParmVarDecl 0x56463c97c888 <<invalid sloc>> <invalid sloc> 'unsigned long'
| |-NoThrowAttr 0x56463c97c8f8 <col:10> Implicit
| `-ConstAttr 0x56463c97c950 <col:10> Implicit
|-TypedefDecl 0x56463c97ca88 <line:79:1, col:27> col:27 referenced size_t 'unsigned long'
| `-BuiltinType 0x56463c912fd0 'unsigned long'
|-TypedefDecl 0x56463c97cb18 <line:81:1, col:18> col:18 referenced time_t '__time_t':'long'
| `-TypedefType 0x56463c97cae0 '__time_t' sugar
|   |-Typedef 0x56463c97a708 '__time_t'
|   `-BuiltinType 0x56463c912f30 'long'
|-RecordDecl 0x56463c97cb70 <line:84:1, line:88:3> line:84:8 struct timespec definition
| |-FieldDecl 0x56463c97cc28 <line:86:5, col:14> col:14 tv_sec '__time_t':'long'
| `-FieldDecl 0x56463c97ccb8 <line:87:5, col:23> col:23 tv_nsec '__syscall_slong_t':'long'
|-TypedefDecl 0x56463c97cd48 <line:89:1, col:17> col:17 referenced pid_t '__pid_t':'int'
| `-TypedefType 0x56463c97cd10 '__pid_t' sugar
|   |-Typedef 0x56463c97a238 '__pid_t'
|   `-BuiltinType 0x56463c912f10 'int'
|-RecordDecl 0x56463c97cda0 <line:90:1, line:93:3> line:90:8 struct sched_param definition
| `-FieldDecl 0x56463c97ce60 <line:92:5, col:9> col:9 __sched_priority 'int'
|-RecordDecl 0x56463c97ceb0 <line:96:1, line:99:3> line:96:8 struct __sched_param definition
| `-FieldDecl 0x56463c97cf70 <line:98:5, col:9> col:9 __sched_priority 'int'
|-TypedefDecl 0x56463c97cfd8 <line:100:1, col:27> col:27 referenced __cpu_mask 'unsigned long'
| `-BuiltinType 0x56463c912fd0 'unsigned long'
|-RecordDecl 0x56463c97d030 <line:101:9, line:104:1> line:101:9 struct definition
| `-FieldDecl 0x56463c97d2c0 <line:103:3, col:53> col:14 __bits '__cpu_mask [64]'
|-TypedefDecl 0x56463c97e3a0 <line:101:1, line:104:3> col:3 referenced cpu_set_t 'struct cpu_set_t':'cpu_set_t'
| `-ElaboratedType 0x56463c97d310 'struct cpu_set_t' sugar
|   `-RecordType 0x56463c97d0b0 'cpu_set_t'
|     `-Record 0x56463c97d030 ''
|-FunctionDecl 0x56463c97e678 <line:106:1, line:107:42> line:106:12 __sched_cpucount 'int (size_t, const cpu_set_t *)' extern
| |-ParmVarDecl 0x56463c97e448 <col:30, col:37> col:37 __setsize 'size_t':'unsigned long'
| |-ParmVarDecl 0x56463c97e550 <col:48, col:65> col:65 __setp 'const cpu_set_t *'
| `-NoThrowAttr 0x56463c97e728 <line:107:19>
|-FunctionDecl 0x56463c97e900 <line:108:1, col:92> col:19 __sched_cpualloc 'cpu_set_t *(size_t)' extern
| |-ParmVarDecl 0x56463c97e790 <col:37, col:44> col:44 __count 'size_t':'unsigned long'
| `-NoThrowAttr 0x56463c97e9a8 <col:69>
|-FunctionDecl 0x56463c97eb20 <line:109:1, col:87> col:13 __sched_cpufree 'void (cpu_set_t *)' extern
| |-ParmVarDecl 0x56463c97ea10 <col:30, col:41> col:41 __set 'cpu_set_t *'
| `-NoThrowAttr 0x56463c97ebc8 <col:64>
|-FunctionDecl 0x56463c97ee88 <line:112:1, line:113:45> line:112:12 sched_setparam 'int (__pid_t, const struct sched_param *)' extern
| |-ParmVarDecl 0x56463c97ec30 <col:28, col:36> col:36 __pid '__pid_t':'int'
| |-ParmVarDecl 0x56463c97ed68 <col:43, col:69> col:69 __param 'const struct sched_param *'
| `-NoThrowAttr 0x56463c97ef38 <line:113:22>
|-FunctionDecl 0x56463c97f1b8 <line:114:1, col:111> col:12 sched_getparam 'int (__pid_t, struct sched_param *)' extern
| |-ParmVarDecl 0x56463c97efa0 <col:28, col:36> col:36 __pid '__pid_t':'int'
| |-ParmVarDecl 0x56463c97f098 <col:43, col:63> col:63 __param 'struct sched_param *'
| `-NoThrowAttr 0x56463c97f268 <col:88>
|-FunctionDecl 0x56463c97f588 <line:115:1, line:116:85> line:115:12 sched_setscheduler 'int (__pid_t, int, const struct sched_param *)' extern
| |-ParmVarDecl 0x56463c97f2d0 <col:32, col:40> col:40 __pid '__pid_t':'int'
| |-ParmVarDecl 0x56463c97f3b0 <col:47, col:51> col:51 __policy 'int'
| |-ParmVarDecl 0x56463c97f440 <line:116:11, col:37> col:37 __param 'const struct sched_param *'
| `-NoThrowAttr 0x56463c97f640 <col:62>
|-FunctionDecl 0x56463c97f7b8 <line:117:1, col:86> col:12 sched_getscheduler 'int (__pid_t)' extern
| |-ParmVarDecl 0x56463c97f6a8 <col:32, col:40> col:40 __pid '__pid_t':'int'
| `-NoThrowAttr 0x56463c97f860 <col:63>
|-FunctionDecl 0x56463c97f988 <line:118:1, col:70> col:12 sched_yield 'int (void)' extern
| `-NoThrowAttr 0x56463c97fa28 <col:47>
|-FunctionDecl 0x56463c97fb30 <line:119:1, col:92> col:12 sched_get_priority_max 'int (int)' extern
| |-ParmVarDecl 0x56463c97fa98 <col:36, col:40> col:40 __algorithm 'int'
| `-NoThrowAttr 0x56463c97fbd8 <col:69>
|-FunctionDecl 0x56463c97fce0 <line:120:1, col:92> col:12 sched_get_priority_min 'int (int)' extern
| |-ParmVarDecl 0x56463c97fc48 <col:36, col:40> col:40 __algorithm 'int'
| `-NoThrowAttr 0x56463c97fd88 <col:69>
|-FunctionDecl 0x56463c980048 <line:121:1, col:111> col:12 sched_rr_get_interval 'int (__pid_t, struct timespec *)' extern
| |-ParmVarDecl 0x56463c97fdf0 <col:35, col:43> col:43 __pid '__pid_t':'int'
| |-ParmVarDecl 0x56463c97ff28 <col:50, col:67> col:67 __t 'struct timespec *'
| `-NoThrowAttr 0x56463c9800f8 <col:88>
|-TypedefDecl 0x56463c980188 <line:125:1, col:19> col:19 referenced clock_t '__clock_t':'long'
| `-TypedefType 0x56463c980150 '__clock_t' sugar
|   |-Typedef 0x56463c97a548 '__clock_t'
|   `-BuiltinType 0x56463c912f30 'long'
|-TypedefDecl 0x56463c980218 <line:128:1, col:21> col:21 referenced clockid_t '__clockid_t':'int'
| `-TypedefType 0x56463c9801e0 '__clockid_t' sugar
|   |-Typedef 0x56463c97a938 '__clockid_t'
|   `-BuiltinType 0x56463c912f10 'int'
|-TypedefDecl 0x56463c9802a8 <line:129:1, col:19> col:19 referenced timer_t '__timer_t':'void *'
| `-TypedefType 0x56463c980270 '__timer_t' sugar
|   |-Typedef 0x56463c97a9a8 '__timer_t'
|   `-PointerType 0x56463c913630 'void *'
|     `-BuiltinType 0x56463c912e70 'void'
|-RecordDecl 0x56463c980300 <line:131:1, line:144:1> line:131:8 struct tm definition
| |-FieldDecl 0x56463c9803d8 <line:133:3, col:7> col:7 tm_sec 'int'
| |-FieldDecl 0x56463c980440 <line:134:3, col:7> col:7 tm_min 'int'
| |-FieldDecl 0x56463c9804a8 <line:135:3, col:7> col:7 tm_hour 'int'
| |-FieldDecl 0x56463c980510 <line:136:3, col:7> col:7 tm_mday 'int'
| |-FieldDecl 0x56463c980578 <line:137:3, col:7> col:7 tm_mon 'int'
| |-FieldDecl 0x56463c9805e0 <line:138:3, col:7> col:7 tm_year 'int'
| |-FieldDecl 0x56463c980648 <line:139:3, col:7> col:7 tm_wday 'int'
| |-FieldDecl 0x56463c9806b0 <line:140:3, col:7> col:7 tm_yday 'int'
| |-FieldDecl 0x56463c980718 <line:141:3, col:7> col:7 tm_isdst 'int'
| |-FieldDecl 0x56463c980780 <line:142:3, col:12> col:12 tm_gmtoff 'long'
| `-FieldDecl 0x56463c9807e8 <line:143:3, col:15> col:15 tm_zone 'const char *'
|-RecordDecl 0x56463c980838 <line:147:1, line:151:3> line:147:8 struct itimerspec definition
| |-FieldDecl 0x56463c980908 <line:149:5, col:21> col:21 it_interval 'struct timespec':'struct timespec'
| `-FieldDecl 0x56463c980978 <line:150:5, col:21> col:21 it_value 'struct timespec':'struct timespec'
|-RecordDecl 0x56463c980a20 <line:152:1, col:8> col:8 struct sigevent
|-FunctionDecl 0x56463c980bf0 <line:154:1, col:68> col:16 clock 'clock_t (void)' extern
| `-NoThrowAttr 0x56463c980c90 <col:45>
|-FunctionDecl 0x56463c980e70 <line:155:1, col:77> col:15 time 'time_t (time_t *)' extern
| |-ParmVarDecl 0x56463c980d60 <col:21, col:29> col:29 __timer 'time_t *'
| `-NoThrowAttr 0x56463c980f18 <col:54>
|-FunctionDecl 0x56463c981118 <line:156:1, line:157:73> line:156:15 difftime 'double (time_t, time_t)' extern
| |-ParmVarDecl 0x56463c980f80 <col:25, col:32> col:32 __time1 'time_t':'long'
| |-ParmVarDecl 0x56463c980ff8 <col:41, col:48> col:48 __time0 'time_t':'long'
| |-NoThrowAttr 0x56463c9811c8 <line:157:22>
| `-ConstAttr 0x56463c981220 <col:63>
|-FunctionDecl 0x56463c982050 <line:158:1, col:79> col:15 mktime 'time_t (struct tm *)' extern
| |-ParmVarDecl 0x56463c981318 <col:23, col:34> col:34 __tp 'struct tm *'
| `-NoThrowAttr 0x56463c9820f8 <col:56>
|-FunctionDecl 0x56463c9824a0 <line:159:1, line:161:77> line:159:15 strftime 'size_t (char *restrict, size_t, const char *restrict, const struct tm *restrict)' extern
| |-ParmVarDecl 0x56463c982168 <col:25, col:42> col:42 __s 'char *restrict'
| |-ParmVarDecl 0x56463c9821e0 <col:47, col:54> col:54 __maxsize 'size_t':'unsigned long'
| |-ParmVarDecl 0x56463c982260 <line:160:4, col:27> col:27 __format 'const char *restrict'
| |-ParmVarDecl 0x56463c982358 <line:161:4, col:32> col:32 __tp 'const struct tm *restrict'
| `-NoThrowAttr 0x56463c982560 <col:54>
|-RecordDecl 0x56463c9825b8 <line:163:9, line:170:1> line:163:16 struct __locale_struct definition
| |-RecordDecl 0x56463c982668 parent 0x56463c912e18 <line:165:3, col:10> col:10 struct __locale_data
| |-FieldDecl 0x56463c9828c8 <col:3, col:37> col:25 __locales 'struct __locale_data *[13]'
| |-FieldDecl 0x56463c982968 <line:166:3, col:29> col:29 __ctype_b 'const unsigned short *'
| |-FieldDecl 0x56463c9829d0 <line:167:3, col:14> col:14 __ctype_tolower 'const int *'
| |-FieldDecl 0x56463c982a38 <line:168:3, col:14> col:14 __ctype_toupper 'const int *'
| `-FieldDecl 0x56463c982b28 <line:169:3, col:25> col:15 __names 'const char *[13]'
|-TypedefDecl 0x56463c982c48 <line:163:1, line:170:4> col:4 referenced __locale_t 'struct __locale_struct *'
| `-PointerType 0x56463c982bf0 'struct __locale_struct *'
|   `-ElaboratedType 0x56463c982b80 'struct __locale_struct' sugar
|     `-RecordType 0x56463c982640 'struct __locale_struct'
|       `-Record 0x56463c9825b8 '__locale_struct'
|-TypedefDecl 0x56463c982cf8 <line:171:1, col:20> col:20 locale_t '__locale_t':'struct __locale_struct *'
| `-TypedefType 0x56463c982cc0 '__locale_t' sugar
|   |-Typedef 0x56463c982c48 '__locale_t'
|   `-PointerType 0x56463c982bf0 'struct __locale_struct *'
|     `-ElaboratedType 0x56463c982b80 'struct __locale_struct' sugar
|       `-RecordType 0x56463c982640 'struct __locale_struct'
|         `-Record 0x56463c9825b8 '__locale_struct'
|-FunctionDecl 0x56463c984110 <line:172:1, line:175:63> line:172:15 strftime_l 'size_t (char *restrict, size_t, const char *restrict, const struct tm *restrict, __locale_t)' extern
| |-ParmVarDecl 0x56463c982d68 <col:27, col:44> col:44 __s 'char *restrict'
| |-ParmVarDecl 0x56463c982de0 <col:49, col:56> col:56 __maxsize 'size_t':'unsigned long'
| |-ParmVarDecl 0x56463c982e60 <line:173:6, col:29> col:29 __format 'const char *restrict'
| |-ParmVarDecl 0x56463c982ef0 <line:174:6, col:34> col:34 __tp 'const struct tm *restrict'
| |-ParmVarDecl 0x56463c982f68 <line:175:6, col:17> col:17 __loc '__locale_t':'struct __locale_struct *'
| `-NoThrowAttr 0x56463c9841d8 <col:40>
|-FunctionDecl 0x56463c9843c8 <line:177:1, col:89> col:19 gmtime 'struct tm *(const time_t *)' extern
| |-ParmVarDecl 0x56463c9842a0 <col:27, col:41> col:41 __timer 'const time_t *'
| `-NoThrowAttr 0x56463c984470 <col:66>
|-FunctionDecl 0x56463c984580 <line:178:1, col:92> col:19 localtime 'struct tm *(const time_t *)' extern
| |-ParmVarDecl 0x56463c9844d8 <col:30, col:44> col:44 __timer 'const time_t *'
| `-NoThrowAttr 0x56463c984628 <col:69>
|-FunctionDecl 0x56463c984858 <line:180:1, line:181:75> line:180:19 gmtime_r 'struct tm *(const time_t *restrict, struct tm *restrict)' extern
| |-ParmVarDecl 0x56463c984690 <col:29, col:54> col:54 __timer 'const time_t *restrict'
| |-ParmVarDecl 0x56463c984720 <line:181:8, col:30> col:30 __tp 'struct tm *restrict'
| `-NoThrowAttr 0x56463c984908 <col:52>
|-FunctionDecl 0x56463c984ab0 <line:182:1, line:183:78> line:182:19 localtime_r 'struct tm *(const time_t *restrict, struct tm *restrict)' extern
| |-ParmVarDecl 0x56463c984970 <col:32, col:57> col:57 __timer 'const time_t *restrict'
| |-ParmVarDecl 0x56463c984a00 <line:183:11, col:33> col:33 __tp 'struct tm *restrict'
| `-NoThrowAttr 0x56463c984b60 <col:55>
|-FunctionDecl 0x56463c984cf8 <line:185:1, col:85> col:14 asctime 'char *(const struct tm *)' extern
| |-ParmVarDecl 0x56463c984be0 <col:23, col:40> col:40 __tp 'const struct tm *'
| `-NoThrowAttr 0x56463c984da0 <col:62>
|-FunctionDecl 0x56463c984f18 <line:186:1, col:83> col:14 ctime 'char *(const time_t *)' extern
| |-ParmVarDecl 0x56463c984e08 <col:21, col:35> col:35 __timer 'const time_t *'
| `-NoThrowAttr 0x56463c984fc0 <col:60>
|-FunctionDecl 0x56463c9852b8 <line:188:1, line:189:67> line:188:14 asctime_r 'char *(const struct tm *restrict, char *restrict)' extern
| |-ParmVarDecl 0x56463c985118 <col:25, col:53> col:53 __tp 'const struct tm *restrict'
| |-ParmVarDecl 0x56463c985198 <line:189:4, col:21> col:21 __buf 'char *restrict'
| `-NoThrowAttr 0x56463c985368 <col:44>
|-FunctionDecl 0x56463c985578 <line:190:1, line:191:72> line:190:14 ctime_r 'char *(const time_t *restrict, char *restrict)' extern
| |-ParmVarDecl 0x56463c9853d0 <col:23, col:48> col:48 __timer 'const time_t *restrict'
| |-ParmVarDecl 0x56463c985450 <line:191:9, col:26> col:26 __buf 'char *restrict'
| `-NoThrowAttr 0x56463c985628 <col:49>
|-VarDecl 0x56463c985728 <line:192:1, col:24> col:14 __tzname 'char *[2]' extern
|-VarDecl 0x56463c9857a8 <line:193:1, col:12> col:12 __daylight 'int' extern
|-VarDecl 0x56463c985828 <line:194:1, col:17> col:17 __timezone 'long' extern
|-VarDecl 0x56463c9858f0 <line:195:1, col:22> col:14 tzname 'char *[2]' extern
|-FunctionDecl 0x56463c985a20 <line:196:1, col:65> col:13 tzset 'void (void)' extern
| `-NoThrowAttr 0x56463c985ac0 <col:42>
|-VarDecl 0x56463c985b30 <line:197:1, col:12> col:12 daylight 'int' extern
|-VarDecl 0x56463c985bb0 <line:198:1, col:17> col:17 timezone 'long' extern
|-FunctionDecl 0x56463c985d38 <line:199:1, col:80> col:12 stime 'int (const time_t *)' extern
| |-ParmVarDecl 0x56463c985c28 <col:19, col:33> col:33 __when 'const time_t *'
| `-NoThrowAttr 0x56463c985de0 <col:57>
|-FunctionDecl 0x56463c985ef0 <line:200:1, col:79> col:15 timegm 'time_t (struct tm *)' extern
| |-ParmVarDecl 0x56463c985e60 <col:23, col:34> col:34 __tp 'struct tm *'
| `-NoThrowAttr 0x56463c985f98 <col:56>
|-FunctionDecl 0x56463c9860d0 <line:201:1, col:82> col:15 timelocal 'time_t (struct tm *)' extern
| |-ParmVarDecl 0x56463c986018 <col:26, col:37> col:37 __tp 'struct tm *'
| `-NoThrowAttr 0x56463c986178 <col:59>
|-FunctionDecl 0x56463c986280 <line:202:1, col:99> col:12 dysize 'int (int)' extern
| |-ParmVarDecl 0x56463c9861e8 <col:20, col:24> col:24 __year 'int'
| |-NoThrowAttr 0x56463c986328 <col:48>
| `-ConstAttr 0x56463c986380 <col:89>
|-FunctionDecl 0x56463c9865e8 <line:203:1, line:204:37> line:203:12 nanosleep 'int (const struct timespec *, struct timespec *)' extern
| |-ParmVarDecl 0x56463c986438 <col:23, col:46> col:46 __requested_time 'const struct timespec *'
| `-ParmVarDecl 0x56463c9864c8 <line:204:9, col:26> col:26 __remaining 'struct timespec *'
|-FunctionDecl 0x56463c986848 <line:205:1, col:111> col:12 clock_getres 'int (clockid_t, struct timespec *)' extern
| |-ParmVarDecl 0x56463c9866d8 <col:26, col:36> col:36 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x56463c986768 <col:48, col:65> col:65 __res 'struct timespec *'
| `-NoThrowAttr 0x56463c9868f8 <col:88>
|-FunctionDecl 0x56463c986a90 <line:206:1, col:111> col:12 clock_gettime 'int (clockid_t, struct timespec *)' extern
| |-ParmVarDecl 0x56463c986960 <col:27, col:37> col:37 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x56463c9869f0 <col:49, col:66> col:66 __tp 'struct timespec *'
| `-NoThrowAttr 0x56463c986b40 <col:88>
|-FunctionDecl 0x56463c986d58 <line:207:1, line:208:45> line:207:12 clock_settime 'int (clockid_t, const struct timespec *)' extern
| |-ParmVarDecl 0x56463c986ba8 <col:27, col:37> col:37 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x56463c986c38 <col:49, col:72> col:72 __tp 'const struct timespec *'
| `-NoThrowAttr 0x56463c986e08 <line:208:22>
|-FunctionDecl 0x56463c987178 <line:209:1, line:211:30> line:209:12 clock_nanosleep 'int (clockid_t, int, const struct timespec *, struct timespec *)' extern
| |-ParmVarDecl 0x56463c986e70 <col:29, col:39> col:39 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x56463c986ef0 <col:51, col:55> col:55 __flags 'int'
| |-ParmVarDecl 0x56463c986f80 <line:210:8, col:31> col:31 __req 'const struct timespec *'
| `-ParmVarDecl 0x56463c987010 <line:211:8, col:25> col:25 __rem 'struct timespec *'
|-FunctionDecl 0x56463c987478 <line:212:1, col:108> col:12 clock_getcpuclockid 'int (pid_t, clockid_t *)' extern
| |-ParmVarDecl 0x56463c987278 <col:33, col:39> col:39 __pid 'pid_t':'int'
| |-ParmVarDecl 0x56463c987350 <col:46, col:57> col:57 __clock_id 'clockid_t *'
| `-NoThrowAttr 0x56463c987528 <col:85>
|-FunctionDecl 0x56463c987918 <line:213:1, line:215:75> line:213:12 timer_create 'int (clockid_t, struct sigevent *restrict, timer_t *restrict)' extern
| |-ParmVarDecl 0x56463c987590 <col:26, col:36> col:36 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x56463c9876c8 <line:214:5, col:33> col:33 __evp 'struct sigevent *restrict'
| |-ParmVarDecl 0x56463c9877d0 <line:215:5, col:25> col:25 __timerid 'timer_t *restrict'
| `-NoThrowAttr 0x56463c9879d0 <col:52>
|-FunctionDecl 0x56463c987b48 <line:216:1, col:84> col:12 timer_delete 'int (timer_t)' extern
| |-ParmVarDecl 0x56463c987a38 <col:26, col:34> col:34 __timerid 'timer_t':'void *'
| `-NoThrowAttr 0x56463c987bf0 <col:61>
|-FunctionDecl 0x56463c9880f0 <line:217:1, line:219:85> line:217:12 timer_settime 'int (timer_t, int, const struct itimerspec *restrict, struct itimerspec *restrict)' extern
| |-ParmVarDecl 0x56463c987c58 <col:27, col:35> col:35 __timerid 'timer_t':'void *'
| |-ParmVarDecl 0x56463c987cd8 <col:46, col:50> col:50 __flags 'int'
| |-ParmVarDecl 0x56463c987e08 <line:218:6, col:42> col:42 __value 'const struct itimerspec *restrict'
| |-ParmVarDecl 0x56463c987ef8 <line:219:6, col:36> col:36 __ovalue 'struct itimerspec *restrict'
| `-NoThrowAttr 0x56463c9881b0 <col:62>
|-FunctionDecl 0x56463c9883c8 <line:220:1, line:221:45> line:220:12 timer_gettime 'int (timer_t, struct itimerspec *)' extern
| |-ParmVarDecl 0x56463c988218 <col:27, col:35> col:35 __timerid 'timer_t':'void *'
| |-ParmVarDecl 0x56463c9882a8 <col:46, col:65> col:65 __value 'struct itimerspec *'
| `-NoThrowAttr 0x56463c988478 <line:221:22>
|-FunctionDecl 0x56463c988578 <line:222:1, col:88> col:12 timer_getoverrun 'int (timer_t)' extern
| |-ParmVarDecl 0x56463c9884e0 <col:30, col:38> col:38 __timerid 'timer_t':'void *'
| `-NoThrowAttr 0x56463c988620 <col:65>
|-TypedefDecl 0x56463c988690 <line:224:1, col:27> col:27 referenced pthread_t 'unsigned long'
| `-BuiltinType 0x56463c912fd0 'unsigned long'
|-RecordDecl 0x56463c9886e8 <line:225:1, line:229:1> line:225:7 union pthread_attr_t definition
| |-FieldDecl 0x56463c988830 <line:227:3, col:17> col:8 __size 'char [56]'
| `-FieldDecl 0x56463c988898 <line:228:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x56463c988948 <line:230:1, col:30> col:30 referenced pthread_attr_t 'union pthread_attr_t':'union pthread_attr_t'
| `-ElaboratedType 0x56463c9888f0 'union pthread_attr_t' sugar
|   `-RecordType 0x56463c988770 'union pthread_attr_t'
|     `-Record 0x56463c9886e8 'pthread_attr_t'
|-RecordDecl 0x56463c9889a0 <line:231:9, line:235:1> line:231:16 struct __pthread_internal_list definition
| |-FieldDecl 0x56463c988b18 <line:233:3, col:35> col:35 __prev 'struct __pthread_internal_list *'
| `-FieldDecl 0x56463c988b90 <line:234:3, col:35> col:35 __next 'struct __pthread_internal_list *'
|-TypedefDecl 0x56463c988c40 <line:231:1, line:235:3> col:3 referenced __pthread_list_t 'struct __pthread_internal_list':'struct __pthread_internal_list'
| `-ElaboratedType 0x56463c988be0 'struct __pthread_internal_list' sugar
|   `-RecordType 0x56463c988a20 'struct __pthread_internal_list'
|     `-Record 0x56463c9889a0 '__pthread_internal_list'
|-RecordDecl 0x56463c988cb0 <line:236:9, line:250:1> line:236:9 union definition
| |-RecordDecl 0x56463c988d58 parent 0x56463c912e18 <line:238:3, line:247:3> line:238:10 struct __pthread_mutex_s definition
| | |-FieldDecl 0x56463c988e30 <line:240:5, col:9> col:9 __lock 'int'
| | |-FieldDecl 0x56463c988e98 <line:241:5, col:18> col:18 __count 'unsigned int'
| | |-FieldDecl 0x56463c988f00 <line:242:5, col:9> col:9 __owner 'int'
| | |-FieldDecl 0x56463c988f68 <line:243:5, col:18> col:18 __nusers 'unsigned int'
| | |-FieldDecl 0x56463c988fd0 <line:244:5, col:9> col:9 __kind 'int'
| | |-FieldDecl 0x56463c989038 <line:245:5, col:9> col:9 __spins 'int'
| | `-FieldDecl 0x56463c98d110 <line:246:5, col:22> col:22 __list '__pthread_list_t':'struct __pthread_internal_list'
| |-FieldDecl 0x56463c98d1c0 <line:238:3, line:247:5> col:5 __data 'struct __pthread_mutex_s':'struct __pthread_mutex_s'
| |-FieldDecl 0x56463c98d2b0 <line:248:3, col:17> col:8 __size 'char [40]'
| `-FieldDecl 0x56463c98d318 <line:249:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x56463c98d4a0 <line:236:1, line:250:3> col:3 referenced pthread_mutex_t 'union pthread_mutex_t':'pthread_mutex_t'
| `-ElaboratedType 0x56463c98d440 'union pthread_mutex_t' sugar
|   `-RecordType 0x56463c988d30 'pthread_mutex_t'
|     `-Record 0x56463c988cb0 ''
|-RecordDecl 0x56463c98d510 <line:251:9, line:255:1> line:251:9 union definition
| |-FieldDecl 0x56463c98d650 <line:253:3, col:16> col:8 __size 'char [4]'
| `-FieldDecl 0x56463c98d6b8 <line:254:3, col:7> col:7 __align 'int'
|-TypedefDecl 0x56463c98d770 <line:251:1, line:255:3> col:3 referenced pthread_mutexattr_t 'union pthread_mutexattr_t':'pthread_mutexattr_t'
| `-ElaboratedType 0x56463c98d710 'union pthread_mutexattr_t' sugar
|   `-RecordType 0x56463c98d590 'pthread_mutexattr_t'
|     `-Record 0x56463c98d510 ''
|-RecordDecl 0x56463c98d7e0 <line:256:9, line:271:1> line:256:9 union definition
| |-RecordDecl 0x56463c98d888 <line:258:3, line:268:3> line:258:3 struct definition
| | |-FieldDecl 0x56463c98d950 <line:260:5, col:9> col:9 __lock 'int'
| | |-FieldDecl 0x56463c98d9b8 <line:261:5, col:18> col:18 __futex 'unsigned int'
| | |-FieldDecl 0x56463c98da20 <line:262:19, col:42> col:42 __total_seq 'unsigned long long'
| | |-FieldDecl 0x56463c98da88 <line:263:19, col:42> col:42 __wakeup_seq 'unsigned long long'
| | |-FieldDecl 0x56463c98daf0 <line:264:19, col:42> col:42 __woken_seq 'unsigned long long'
| | |-FieldDecl 0x56463c98db58 <line:265:5, col:11> col:11 __mutex 'void *'
| | |-FieldDecl 0x56463c98dbc0 <line:266:5, col:18> col:18 __nwaiters 'unsigned int'
| | `-FieldDecl 0x56463c98dc28 <line:267:5, col:18> col:18 __broadcast_seq 'unsigned int'
| |-FieldDecl 0x56463c98dce0 <line:258:3, line:268:5> col:5 __data 'struct (anonymous struct at ./split_2/podwr001_tso.oepc_false-unreach-call.i:258:3)':'struct pthread_cond_t::(anonymous at ./split_2/podwr001_tso.oepc_false-unreach-call.i:258:3)'
| |-FieldDecl 0x56463c98ddd0 <line:269:3, col:17> col:8 __size 'char [48]'
| `-FieldDecl 0x56463c98de38 <line:270:17, col:31> col:31 __align 'long long'
|-TypedefDecl 0x56463c98df70 <line:256:1, line:271:3> col:3 referenced pthread_cond_t 'union pthread_cond_t':'pthread_cond_t'
| `-ElaboratedType 0x56463c98df10 'union pthread_cond_t' sugar
|   `-RecordType 0x56463c98d860 'pthread_cond_t'
|     `-Record 0x56463c98d7e0 ''
|-RecordDecl 0x56463c98dfe0 <line:272:9, line:276:1> line:272:9 union definition
| |-FieldDecl 0x56463c98f130 <line:274:3, col:16> col:8 __size 'char [4]'
| `-FieldDecl 0x56463c98f198 <line:275:3, col:7> col:7 __align 'int'
|-TypedefDecl 0x56463c98f250 <line:272:1, line:276:3> col:3 referenced pthread_condattr_t 'union pthread_condattr_t':'pthread_condattr_t'
| `-ElaboratedType 0x56463c98f1f0 'union pthread_condattr_t' sugar
|   `-RecordType 0x56463c98e060 'pthread_condattr_t'
|     `-Record 0x56463c98dfe0 ''
|-TypedefDecl 0x56463c98f2d8 <line:277:1, col:22> col:22 referenced pthread_key_t 'unsigned int'
| `-BuiltinType 0x56463c912fb0 'unsigned int'
|-TypedefDecl 0x56463c98f348 <line:278:1, col:13> col:13 referenced pthread_once_t 'int'
| `-BuiltinType 0x56463c912f10 'int'
|-RecordDecl 0x56463c98f3a0 <line:279:9, line:297:1> line:279:9 union definition
| |-RecordDecl 0x56463c98f448 <line:281:3, line:294:3> line:281:3 struct definition
| | |-FieldDecl 0x56463c98f510 <line:283:5, col:9> col:9 __lock 'int'
| | |-FieldDecl 0x56463c98f578 <line:284:5, col:18> col:18 __nr_readers 'unsigned int'
| | |-FieldDecl 0x56463c98f5e0 <line:285:5, col:18> col:18 __readers_wakeup 'unsigned int'
| | |-FieldDecl 0x56463c98f648 <line:286:5, col:18> col:18 __writer_wakeup 'unsigned int'
| | |-FieldDecl 0x56463c98f6b0 <line:287:5, col:18> col:18 __nr_readers_queued 'unsigned int'
| | |-FieldDecl 0x56463c98f718 <line:288:5, col:18> col:18 __nr_writers_queued 'unsigned int'
| | |-FieldDecl 0x56463c98f780 <line:289:5, col:9> col:9 __writer 'int'
| | |-FieldDecl 0x56463c98f7e8 <line:290:5, col:9> col:9 __shared 'int'
| | |-FieldDecl 0x56463c98f850 <line:291:5, col:23> col:23 __pad1 'unsigned long'
| | |-FieldDecl 0x56463c98f8b8 <line:292:5, col:23> col:23 __pad2 'unsigned long'
| | `-FieldDecl 0x56463c98f920 <line:293:5, col:18> col:18 __flags 'unsigned int'
| |-FieldDecl 0x56463c98f9d0 <line:281:3, line:294:5> col:5 __data 'struct (anonymous struct at ./split_2/podwr001_tso.oepc_false-unreach-call.i:281:3)':'struct pthread_rwlock_t::(anonymous at ./split_2/podwr001_tso.oepc_false-unreach-call.i:281:3)'
| |-FieldDecl 0x56463c98fa78 <line:295:3, col:17> col:8 __size 'char [56]'
| `-FieldDecl 0x56463c98fae0 <line:296:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x56463c98fc30 <line:279:1, line:297:3> col:3 referenced pthread_rwlock_t 'union pthread_rwlock_t':'pthread_rwlock_t'
| `-ElaboratedType 0x56463c98fbd0 'union pthread_rwlock_t' sugar
|   `-RecordType 0x56463c98f420 'pthread_rwlock_t'
|     `-Record 0x56463c98f3a0 ''
|-RecordDecl 0x56463c98fca0 <line:298:9, line:302:1> line:298:9 union definition
| |-FieldDecl 0x56463c98fde0 <line:300:3, col:16> col:8 __size 'char [8]'
| `-FieldDecl 0x56463c98fe48 <line:301:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x56463c98ff00 <line:298:1, line:302:3> col:3 referenced pthread_rwlockattr_t 'union pthread_rwlockattr_t':'pthread_rwlockattr_t'
| `-ElaboratedType 0x56463c98fea0 'union pthread_rwlockattr_t' sugar
|   `-RecordType 0x56463c98fd20 'pthread_rwlockattr_t'
|     `-Record 0x56463c98fca0 ''
|-TypedefDecl 0x56463c98ff88 <line:303:1, col:22> col:22 referenced pthread_spinlock_t 'volatile int'
| `-QualType 0x56463c912f14 'volatile int' volatile
|   `-BuiltinType 0x56463c912f10 'int'
|-RecordDecl 0x56463c98ffe0 <line:304:9, line:308:1> line:304:9 union definition
| |-FieldDecl 0x56463c991140 <line:306:3, col:17> col:8 __size 'char [32]'
| `-FieldDecl 0x56463c9911a8 <line:307:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x56463c991260 <line:304:1, line:308:3> col:3 referenced pthread_barrier_t 'union pthread_barrier_t':'pthread_barrier_t'
| `-ElaboratedType 0x56463c991200 'union pthread_barrier_t' sugar
|   `-RecordType 0x56463c990060 'pthread_barrier_t'
|     `-Record 0x56463c98ffe0 ''
|-RecordDecl 0x56463c9912d0 <line:309:9, line:313:1> line:309:9 union definition
| |-FieldDecl 0x56463c9913d0 <line:311:3, col:16> col:8 __size 'char [4]'
| `-FieldDecl 0x56463c991438 <line:312:3, col:7> col:7 __align 'int'
|-TypedefDecl 0x56463c9914f0 <line:309:1, line:313:3> col:3 referenced pthread_barrierattr_t 'union pthread_barrierattr_t':'pthread_barrierattr_t'
| `-ElaboratedType 0x56463c991490 'union pthread_barrierattr_t' sugar
|   `-RecordType 0x56463c991350 'pthread_barrierattr_t'
|     `-Record 0x56463c9912d0 ''
|-TypedefDecl 0x56463c991608 <line:314:1, col:29> col:18 referenced __jmp_buf 'long [8]'
| `-ConstantArrayType 0x56463c9915a0 'long [8]' 8 
|   `-BuiltinType 0x56463c912f30 'long'
|-EnumDecl 0x56463c991660 <line:315:1, line:319:1> line:315:1
| |-EnumConstantDecl 0x56463c991728 <line:317:3> col:3 PTHREAD_CREATE_JOINABLE 'int'
| `-EnumConstantDecl 0x56463c991778 <line:318:3> col:3 PTHREAD_CREATE_DETACHED 'int'
|-EnumDecl 0x56463c9917c8 <line:320:1, line:331:1> line:320:1
| |-EnumConstantDecl 0x56463c991898 <line:322:3> col:3 referenced PTHREAD_MUTEX_TIMED_NP 'int'
| |-EnumConstantDecl 0x56463c9918e8 <line:323:3> col:3 referenced PTHREAD_MUTEX_RECURSIVE_NP 'int'
| |-EnumConstantDecl 0x56463c991938 <line:324:3> col:3 referenced PTHREAD_MUTEX_ERRORCHECK_NP 'int'
| |-EnumConstantDecl 0x56463c991988 <line:325:3> col:3 PTHREAD_MUTEX_ADAPTIVE_NP 'int'
| |-EnumConstantDecl 0x56463c991a10 <line:327:3, col:26> col:3 referenced PTHREAD_MUTEX_NORMAL 'int'
| | `-ConstantExpr 0x56463c9919f8 <col:26> 'int'
| |   `-DeclRefExpr 0x56463c9919d8 <col:26> 'int' EnumConstant 0x56463c991898 'PTHREAD_MUTEX_TIMED_NP' 'int'
| |-EnumConstantDecl 0x56463c991a98 <line:328:3, col:29> col:3 PTHREAD_MUTEX_RECURSIVE 'int'
| | `-ConstantExpr 0x56463c991a80 <col:29> 'int'
| |   `-DeclRefExpr 0x56463c991a60 <col:29> 'int' EnumConstant 0x56463c9918e8 'PTHREAD_MUTEX_RECURSIVE_NP' 'int'
| |-EnumConstantDecl 0x56463c991b20 <line:329:3, col:30> col:3 PTHREAD_MUTEX_ERRORCHECK 'int'
| | `-ConstantExpr 0x56463c991b08 <col:30> 'int'
| |   `-DeclRefExpr 0x56463c991ae8 <col:30> 'int' EnumConstant 0x56463c991938 'PTHREAD_MUTEX_ERRORCHECK_NP' 'int'
| `-EnumConstantDecl 0x56463c991ba8 <line:330:3, col:27> col:3 PTHREAD_MUTEX_DEFAULT 'int'
|   `-ConstantExpr 0x56463c991b90 <col:27> 'int'
|     `-DeclRefExpr 0x56463c991b70 <col:27> 'int' EnumConstant 0x56463c991a10 'PTHREAD_MUTEX_NORMAL' 'int'
|-EnumDecl 0x56463c991bf8 <line:332:1, line:338:1> line:332:1
| |-EnumConstantDecl 0x56463c991cc8 <line:334:3> col:3 referenced PTHREAD_MUTEX_STALLED 'int'
| |-EnumConstantDecl 0x56463c991d50 <line:335:3, col:30> col:3 PTHREAD_MUTEX_STALLED_NP 'int'
| | `-ConstantExpr 0x56463c991d38 <col:30> 'int'
| |   `-DeclRefExpr 0x56463c991d18 <col:30> 'int' EnumConstant 0x56463c991cc8 'PTHREAD_MUTEX_STALLED' 'int'
| |-EnumConstantDecl 0x56463c991da0 <line:336:3> col:3 referenced PTHREAD_MUTEX_ROBUST 'int'
| `-EnumConstantDecl 0x56463c991e28 <line:337:3, col:29> col:3 PTHREAD_MUTEX_ROBUST_NP 'int'
|   `-ConstantExpr 0x56463c991e10 <col:29> 'int'
|     `-DeclRefExpr 0x56463c991df0 <col:29> 'int' EnumConstant 0x56463c991da0 'PTHREAD_MUTEX_ROBUST' 'int'
|-EnumDecl 0x56463c991e78 <line:339:1, line:344:1> line:339:1
| |-EnumConstantDecl 0x56463c991f48 <line:341:3> col:3 PTHREAD_PRIO_NONE 'int'
| |-EnumConstantDecl 0x56463c991f98 <line:342:3> col:3 PTHREAD_PRIO_INHERIT 'int'
| `-EnumConstantDecl 0x56463c991fe8 <line:343:3> col:3 PTHREAD_PRIO_PROTECT 'int'
|-EnumDecl 0x56463c992038 <line:345:1, line:351:1> line:345:1
| |-EnumConstantDecl 0x56463c992150 <line:347:3> col:3 referenced PTHREAD_RWLOCK_PREFER_READER_NP 'int'
| |-EnumConstantDecl 0x56463c9921a0 <line:348:3> col:3 PTHREAD_RWLOCK_PREFER_WRITER_NP 'int'
| |-EnumConstantDecl 0x56463c9921f0 <line:349:3> col:3 PTHREAD_RWLOCK_PREFER_WRITER_NONRECURSIVE_NP 'int'
| `-EnumConstantDecl 0x56463c992278 <line:350:3, col:31> col:3 PTHREAD_RWLOCK_DEFAULT_NP 'int'
|   `-ConstantExpr 0x56463c992260 <col:31> 'int'
|     `-DeclRefExpr 0x56463c992240 <col:31> 'int' EnumConstant 0x56463c992150 'PTHREAD_RWLOCK_PREFER_READER_NP' 'int'
|-EnumDecl 0x56463c9922c8 <line:352:1, line:356:1> line:352:1
| |-EnumConstantDecl 0x56463c992398 <line:354:3> col:3 PTHREAD_INHERIT_SCHED 'int'
| `-EnumConstantDecl 0x56463c9923e8 <line:355:3> col:3 PTHREAD_EXPLICIT_SCHED 'int'
|-EnumDecl 0x56463c992438 <line:357:1, line:361:1> line:357:1
| |-EnumConstantDecl 0x56463c992508 <line:359:3> col:3 PTHREAD_SCOPE_SYSTEM 'int'
| `-EnumConstantDecl 0x56463c992558 <line:360:3> col:3 PTHREAD_SCOPE_PROCESS 'int'
|-EnumDecl 0x56463c9925a8 <line:362:1, line:366:1> line:362:1
| |-EnumConstantDecl 0x56463c992678 <line:364:3> col:3 PTHREAD_PROCESS_PRIVATE 'int'
| `-EnumConstantDecl 0x56463c9926c8 <line:365:3> col:3 PTHREAD_PROCESS_SHARED 'int'
|-RecordDecl 0x56463c992718 <line:367:1, line:373:1> line:367:8 struct _pthread_cleanup_buffer definition
| |-FieldDecl 0x56463c992958 <line:369:3, col:28> col:10 __routine 'void (*)(void *)'
| |-FieldDecl 0x56463c9929c0 <line:370:3, col:9> col:9 __arg 'void *'
| |-FieldDecl 0x56463c992a28 <line:371:3, col:7> col:7 __canceltype 'int'
| `-FieldDecl 0x56463c992b48 <line:372:3, col:35> col:35 __prev 'struct _pthread_cleanup_buffer *'
|-EnumDecl 0x56463c992b98 <line:374:1, line:378:1> line:374:1
| |-EnumConstantDecl 0x56463c992c68 <line:376:3> col:3 PTHREAD_CANCEL_ENABLE 'int'
| `-EnumConstantDecl 0x56463c992cb8 <line:377:3> col:3 PTHREAD_CANCEL_DISABLE 'int'
|-EnumDecl 0x56463c992d08 <line:379:1, line:383:1> line:379:1
| |-EnumConstantDecl 0x56463c992dd8 <line:381:3> col:3 PTHREAD_CANCEL_DEFERRED 'int'
| `-EnumConstantDecl 0x56463c992e28 <line:382:3> col:3 PTHREAD_CANCEL_ASYNCHRONOUS 'int'
|-FunctionDecl 0x56463c993488 <line:385:1, line:388:96> line:385:12 used pthread_create 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' extern
| |-ParmVarDecl 0x56463c992f20 <col:28, col:50> col:50 __newthread 'pthread_t *restrict'
| |-ParmVarDecl 0x56463c993030 <line:386:7, col:40> col:40 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x56463c993270 <line:387:7, col:39> col:15 __start_routine 'void *(*)(void *)'
| |-ParmVarDecl 0x56463c9932f0 <line:388:7, col:24> col:24 __arg 'void *restrict'
| |-NoThrowAttr 0x56463c993548 <col:47>
| |-NonNullAttr 0x56463c9935a0 <col:77, col:94> 1 3
| `-CallbackAttr 0x56463c9935d8 <line:385:12> Implicit 2 3
|-FunctionDecl 0x56463c993700 <line:389:1, col:72> col:13 pthread_exit 'void (void *) __attribute__((noreturn))' extern
| `-ParmVarDecl 0x56463c993630 <col:27, col:33> col:33 __retval 'void *'
|-FunctionDecl 0x56463c993958 <line:390:1, col:64> col:12 pthread_join 'int (pthread_t, void **)' extern
| |-ParmVarDecl 0x56463c9937b8 <col:26, col:36> col:36 __th 'pthread_t':'unsigned long'
| `-ParmVarDecl 0x56463c993838 <col:42, col:49> col:49 __thread_return 'void **'
|-FunctionDecl 0x56463c993b28 <line:391:1, col:83> col:12 pthread_detach 'int (pthread_t)' extern
| |-ParmVarDecl 0x56463c993a18 <col:28, col:38> col:38 __th 'pthread_t':'unsigned long'
| `-NoThrowAttr 0x56463c993bd0 <col:60>
|-FunctionDecl 0x56463c993d20 <line:392:1, col:105> col:18 pthread_self 'pthread_t (void)' extern
| |-NoThrowAttr 0x56463c993dc0 <col:54>
| `-ConstAttr 0x56463c993e18 <col:95>
|-FunctionDecl 0x56463c993fe8 <line:393:1, line:394:70> line:393:12 pthread_equal 'int (pthread_t, pthread_t)' extern
| |-ParmVarDecl 0x56463c993e50 <col:27, col:37> col:37 __thread1 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x56463c993ec8 <col:48, col:58> col:58 __thread2 'pthread_t':'unsigned long'
| |-NoThrowAttr 0x56463c994098 <line:394:19>
| `-ConstAttr 0x56463c9940f0 <col:60>
|-FunctionDecl 0x56463c995b08 <line:395:1, col:128> col:12 pthread_attr_init 'int (pthread_attr_t *)' extern
| |-ParmVarDecl 0x56463c9959d0 <col:31, col:47> col:47 __attr 'pthread_attr_t *'
| |-NoThrowAttr 0x56463c995bb0 <col:71>
| `-NonNullAttr 0x56463c995c08 <col:112, col:126> 1
|-FunctionDecl 0x56463c995d10 <line:396:1, line:397:79> line:396:12 pthread_attr_destroy 'int (pthread_attr_t *)' extern
| |-ParmVarDecl 0x56463c995c58 <col:34, col:50> col:50 __attr 'pthread_attr_t *'
| |-NoThrowAttr 0x56463c995db8 <line:397:22>
| `-NonNullAttr 0x56463c995e10 <col:63, col:77> 1
|-FunctionDecl 0x56463c996038 <line:398:1, line:400:82> line:398:12 pthread_attr_getdetachstate 'int (const pthread_attr_t *, int *)' extern
| |-ParmVarDecl 0x56463c995e58 <col:41, col:63> col:63 __attr 'const pthread_attr_t *'
| |-ParmVarDecl 0x56463c995ed8 <line:399:6, col:11> col:11 __detachstate 'int *'
| |-NoThrowAttr 0x56463c9960e8 <line:400:22>
| `-NonNullAttr 0x56463c996140 <col:63, col:80> 1 2
|-FunctionDecl 0x56463c996348 <line:401:1, line:403:79> line:401:12 pthread_attr_setdetachstate 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x56463c996188 <col:41, col:57> col:57 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x56463c996208 <line:402:6, col:10> col:10 __detachstate 'int'
| |-NoThrowAttr 0x56463c9963f8 <line:403:22>
| `-NonNullAttr 0x56463c996450 <col:63, col:77> 1
|-FunctionDecl 0x56463c9966a8 <line:404:1, line:406:82> line:404:12 pthread_attr_getguardsize 'int (const pthread_attr_t *, size_t *)' extern
| |-ParmVarDecl 0x56463c996498 <col:39, col:61> col:61 __attr 'const pthread_attr_t *'
| |-ParmVarDecl 0x56463c996540 <line:405:11, col:19> col:19 __guardsize 'size_t *'
| |-NoThrowAttr 0x56463c996758 <line:406:22>
| `-NonNullAttr 0x56463c9967b0 <col:63, col:80> 1 2
|-FunctionDecl 0x56463c9979e8 <line:407:1, line:409:79> line:407:12 pthread_attr_setguardsize 'int (pthread_attr_t *, size_t)' extern
| |-ParmVarDecl 0x56463c9967f8 <col:39, col:55> col:55 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x56463c996870 <line:408:11, col:18> col:18 __guardsize 'size_t':'unsigned long'
| |-NoThrowAttr 0x56463c997a98 <line:409:22>
| `-NonNullAttr 0x56463c997af0 <col:63, col:77> 1
|-FunctionDecl 0x56463c997d28 <line:410:1, line:412:82> line:410:12 pthread_attr_getschedparam 'int (const pthread_attr_t *restrict, struct sched_param *restrict)' extern
| |-ParmVarDecl 0x56463c997b38 <col:40, col:73> col:73 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x56463c997bc8 <line:411:12, col:43> col:43 __param 'struct sched_param *restrict'
| |-NoThrowAttr 0x56463c997dd8 <line:412:22>
| `-NonNullAttr 0x56463c997e30 <col:63, col:80> 1 2
|-FunctionDecl 0x56463c998068 <line:413:1, line:415:97> line:413:12 pthread_attr_setschedparam 'int (pthread_attr_t *restrict, const struct sched_param *restrict)' extern
| |-ParmVarDecl 0x56463c997e78 <col:40, col:67> col:67 __attr 'pthread_attr_t *restrict'
| |-ParmVarDecl 0x56463c997f08 <line:414:12, line:415:12> col:12 __param 'const struct sched_param *restrict'
| |-NoThrowAttr 0x56463c998118 <col:37>
| `-NonNullAttr 0x56463c998170 <col:78, col:95> 1 2
|-FunctionDecl 0x56463c998358 <line:416:1, line:418:82> line:416:12 pthread_attr_getschedpolicy 'int (const pthread_attr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x56463c9981b8 <col:41, line:417:6> col:6 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x56463c998238 <col:14, col:30> col:30 __policy 'int *restrict'
| |-NoThrowAttr 0x56463c998408 <line:418:22>
| `-NonNullAttr 0x56463c998460 <col:63, col:80> 1 2
|-FunctionDecl 0x56463c9985e8 <line:419:1, line:420:79> line:419:12 pthread_attr_setschedpolicy 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x56463c9984a8 <col:41, col:57> col:57 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x56463c998528 <col:65, col:69> col:69 __policy 'int'
| |-NoThrowAttr 0x56463c998698 <line:420:22>
| `-NonNullAttr 0x56463c9986f0 <col:63, col:77> 1
|-FunctionDecl 0x56463c998898 <line:421:1, line:423:82> line:421:12 pthread_attr_getinheritsched 'int (const pthread_attr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x56463c998738 <col:42, line:422:7> col:7 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x56463c9987b8 <col:15, col:31> col:31 __inherit 'int *restrict'
| |-NoThrowAttr 0x56463c998948 <line:423:22>
| `-NonNullAttr 0x56463c9989c0 <col:63, col:80> 1 2
|-FunctionDecl 0x56463c998b48 <line:424:1, line:426:79> line:424:12 pthread_attr_setinheritsched 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x56463c998a08 <col:42, col:58> col:58 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x56463c998a88 <line:425:7, col:11> col:11 __inherit 'int'
| |-NoThrowAttr 0x56463c998bf8 <line:426:22>
| `-NonNullAttr 0x56463c998c50 <col:63, col:77> 1
|-FunctionDecl 0x56463c998df8 <line:427:1, line:429:82> line:427:12 pthread_attr_getscope 'int (const pthread_attr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x56463c998c98 <col:35, col:68> col:68 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x56463c998d18 <line:428:7, col:23> col:23 __scope 'int *restrict'
| |-NoThrowAttr 0x56463c998ea8 <line:429:22>
| `-NonNullAttr 0x56463c998f00 <col:63, col:80> 1 2
|-FunctionDecl 0x56463c999088 <line:430:1, line:431:79> line:430:12 pthread_attr_setscope 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x56463c998f48 <col:35, col:51> col:51 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x56463c998fc8 <col:59, col:63> col:63 __scope 'int'
| |-NoThrowAttr 0x56463c999138 <line:431:22>
| `-NonNullAttr 0x56463c999190 <col:63, col:77> 1
|-FunctionDecl 0x56463c9993b8 <line:432:1, line:434:115> line:432:12 pthread_attr_getstackaddr 'int (const pthread_attr_t *restrict, void **restrict)' extern
| |-ParmVarDecl 0x56463c9991d8 <col:39, line:433:11> col:11 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x56463c999258 <col:19, col:37> col:37 __stackaddr 'void **restrict'
| |-NoThrowAttr 0x56463c999468 <line:434:22>
| |-NonNullAttr 0x56463c9994c0 <col:63, col:80> 1 2
| `-DeprecatedAttr 0x56463c9994f8 <col:100> "" ""
|-FunctionDecl 0x56463c999708 <line:435:1, line:437:112> line:435:12 pthread_attr_setstackaddr 'int (pthread_attr_t *, void *)' extern
| |-ParmVarDecl 0x56463c999548 <col:39, col:55> col:55 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x56463c9995c8 <line:436:11, col:17> col:17 __stackaddr 'void *'
| |-NoThrowAttr 0x56463c9997b8 <line:437:22>
| |-NonNullAttr 0x56463c999810 <col:63, col:77> 1
| `-DeprecatedAttr 0x56463c999848 <col:97> "" ""
|-FunctionDecl 0x56463c999a48 <line:438:1, line:440:82> line:438:12 pthread_attr_getstacksize 'int (const pthread_attr_t *restrict, size_t *restrict)' extern
| |-ParmVarDecl 0x56463c999898 <col:39, line:439:11> col:11 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x56463c999910 <col:19, col:38> col:38 __stacksize 'size_t *restrict'
| |-NoThrowAttr 0x56463c999af8 <line:440:22>
| `-NonNullAttr 0x56463c999b50 <col:63, col:80> 1 2
|-FunctionDecl 0x56463c999cd0 <line:441:1, line:443:79> line:441:12 pthread_attr_setstacksize 'int (pthread_attr_t *, size_t)' extern
| |-ParmVarDecl 0x56463c999b98 <col:39, col:55> col:55 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x56463c999c10 <line:442:11, col:18> col:18 __stacksize 'size_t':'unsigned long'
| |-NoThrowAttr 0x56463c999d80 <line:443:22>
| `-NonNullAttr 0x56463c999dd8 <col:63, col:77> 1
|-FunctionDecl 0x56463c99a0c8 <line:444:1, line:447:85> line:444:12 pthread_attr_getstack 'int (const pthread_attr_t *restrict, void **restrict, size_t *restrict)' extern
| |-ParmVarDecl 0x56463c999e28 <col:35, col:68> col:68 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x56463c999ea8 <line:445:7, col:25> col:25 __stackaddr 'void **restrict'
| |-ParmVarDecl 0x56463c999f20 <line:446:7, col:26> col:26 __stacksize 'size_t *restrict'
| |-NoThrowAttr 0x56463c99a180 <line:447:22>
| `-NonNullAttr 0x56463c99a1d8 <col:63, col:83> 1 2 3
|-FunctionDecl 0x56463c99a488 <line:448:1, line:449:100> line:448:12 pthread_attr_setstack 'int (pthread_attr_t *, void *, size_t)' extern
| |-ParmVarDecl 0x56463c99a230 <col:35, col:51> col:51 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x56463c99a2b0 <col:59, col:65> col:65 __stackaddr 'void *'
| |-ParmVarDecl 0x56463c99a328 <line:449:7, col:14> col:14 __stacksize 'size_t':'unsigned long'
| |-NoThrowAttr 0x56463c99a540 <col:43>
| `-NonNullAttr 0x56463c99a598 <col:84, col:98> 1
|-FunctionDecl 0x56463c99a858 <line:450:1, line:452:79> line:450:12 pthread_setschedparam 'int (pthread_t, int, const struct sched_param *)' extern
| |-ParmVarDecl 0x56463c99a5e8 <col:35, col:45> col:45 __target_thread 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x56463c99a668 <col:62, col:66> col:66 __policy 'int'
| |-ParmVarDecl 0x56463c99a6f8 <line:451:7, col:33> col:33 __param 'const struct sched_param *'
| |-NoThrowAttr 0x56463c99a910 <line:452:22>
| `-NonNullAttr 0x56463c99a968 <col:63, col:77> 3
|-FunctionDecl 0x56463c99ac78 <line:453:1, line:456:82> line:453:12 pthread_getschedparam 'int (pthread_t, int *restrict, struct sched_param *restrict)' extern
| |-ParmVarDecl 0x56463c99a9e0 <col:35, col:45> col:45 __target_thread 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x56463c99aa60 <line:454:7, col:23> col:23 __policy 'int *restrict'
| |-ParmVarDecl 0x56463c99aaf0 <line:455:7, col:38> col:38 __param 'struct sched_param *restrict'
| |-NoThrowAttr 0x56463c99ad30 <line:456:22>
| `-NonNullAttr 0x56463c99ad88 <col:63, col:80> 2 3
|-FunctionDecl 0x56463c99af78 <line:457:1, line:458:45> line:457:12 pthread_setschedprio 'int (pthread_t, int)' extern
| |-ParmVarDecl 0x56463c99add8 <col:34, col:44> col:44 __target_thread 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x56463c99ae58 <col:61, col:65> col:65 __prio 'int'
| `-NoThrowAttr 0x56463c99b028 <line:458:22>
|-FunctionDecl 0x56463c99b3f8 <line:459:1, line:460:71> line:459:12 pthread_once 'int (pthread_once_t *, void (*)(void))' extern
| |-ParmVarDecl 0x56463c99b0f0 <col:26, col:42> col:42 __once_control 'pthread_once_t *'
| |-ParmVarDecl 0x56463c99b290 <line:460:5, col:33> col:12 __init_routine 'void (*)(void)'
| `-NonNullAttr 0x56463c99b4a8 <col:52, col:69> 1 2
|-FunctionDecl 0x56463c99b650 <line:461:1, col:64> col:12 pthread_setcancelstate 'int (int, int *)' extern
| |-ParmVarDecl 0x56463c99b530 <col:36, col:40> col:40 __state 'int'
| `-ParmVarDecl 0x56463c99b5b0 <col:49, col:54> col:54 __oldstate 'int *'
|-FunctionDecl 0x56463c99b838 <line:462:1, col:61> col:12 pthread_setcanceltype 'int (int, int *)' extern
| |-ParmVarDecl 0x56463c99b718 <col:35, col:39> col:39 __type 'int'
| `-ParmVarDecl 0x56463c99b798 <col:47, col:52> col:52 __oldtype 'int *'
|-FunctionDecl 0x56463c99b9f0 <line:463:1, col:42> col:12 pthread_cancel 'int (pthread_t)' extern
| `-ParmVarDecl 0x56463c99b8f8 <col:28, col:38> col:38 __th 'pthread_t':'unsigned long'
|-FunctionDecl 0x56463c99bb30 <line:464:1, col:37> col:13 pthread_testcancel 'void (void)' extern
|-RecordDecl 0x56463c99bbd0 <line:465:9, line:473:1> line:465:9 struct definition
| |-RecordDecl 0x56463c99bc78 <line:467:3, line:471:3> line:467:3 struct definition
| | |-FieldDecl 0x56463c99bd68 <line:469:5, col:15> col:15 __cancel_jmp_buf '__jmp_buf':'long [8]'
| | `-FieldDecl 0x56463c99bdd0 <line:470:5, col:9> col:9 __mask_was_saved 'int'
| |-FieldDecl 0x56463c99bfa0 <line:467:3, line:471:23> col:5 __cancel_jmp_buf 'struct (anonymous struct at ./split_2/podwr001_tso.oepc_false-unreach-call.i:467:3) [1]'
| `-FieldDecl 0x56463c99c098 <line:472:3, col:16> col:9 __pad 'void *[4]'
|-TypedefDecl 0x56463c99c150 <line:465:1, line:473:3> col:3 referenced __pthread_unwind_buf_t 'struct __pthread_unwind_buf_t':'__pthread_unwind_buf_t'
| |-ElaboratedType 0x56463c99c0f0 'struct __pthread_unwind_buf_t' sugar
| | `-RecordType 0x56463c99bc50 '__pthread_unwind_buf_t'
| |   `-Record 0x56463c99bbd0 ''
| `-AlignedAttr 0x56463c99c1a8 <col:42> aligned
|   `-<<<NULL>>>
|-RecordDecl 0x56463c99c220 <line:474:1, line:480:1> line:474:8 struct __pthread_cleanup_frame definition
| |-FieldDecl 0x56463c99c380 <line:476:3, col:35> col:10 __cancel_routine 'void (*)(void *)'
| |-FieldDecl 0x56463c99c3e8 <line:477:3, col:9> col:9 __cancel_arg 'void *'
| |-FieldDecl 0x56463c99c450 <line:478:3, col:7> col:7 __do_it 'int'
| `-FieldDecl 0x56463c99c4b8 <line:479:3, col:7> col:7 __cancel_type 'int'
|-FunctionDecl 0x56463c99c6c0 <line:481:1, col:69> col:13 __pthread_register_cancel 'void (__pthread_unwind_buf_t *)' extern
| `-ParmVarDecl 0x56463c99c5b0 <col:40, col:64> col:64 __buf '__pthread_unwind_buf_t *'
|-FunctionDecl 0x56463c99c808 <line:483:1, col:71> col:13 __pthread_unregister_cancel 'void (__pthread_unwind_buf_t *)' extern
| `-ParmVarDecl 0x56463c99c778 <col:42, col:66> col:66 __buf '__pthread_unwind_buf_t *'
|-FunctionDecl 0x56463c99ca00 <line:485:1, line:487:31> line:485:13 __pthread_unwind_next 'void (__pthread_unwind_buf_t *) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x56463c99c8c0 <col:36, col:60> col:60 __buf '__pthread_unwind_buf_t *'
| `-WeakAttr 0x56463c99caa8 <line:487:22>
|-RecordDecl 0x56463c99cb00 <line:489:1, col:8> col:8 struct __jmp_buf_tag
|-FunctionDecl 0x56463c99ce18 <line:490:1, col:98> col:12 __sigsetjmp 'int (struct __jmp_buf_tag *, int)' extern
| |-ParmVarDecl 0x56463c99cc78 <col:25, col:47> col:47 __env 'struct __jmp_buf_tag *'
| |-ParmVarDecl 0x56463c99ccf8 <col:54, col:58> col:58 __savemask 'int'
| |-NoThrowAttr 0x56463c99cec8 <col:86>
| `-ReturnsTwiceAttr 0x56463c99cf20 <col:12> Implicit
|-FunctionDecl 0x56463c99d248 <line:491:1, line:493:79> line:491:12 pthread_mutex_init 'int (pthread_mutex_t *, const pthread_mutexattr_t *)' extern
| |-ParmVarDecl 0x56463c99cff0 <col:32, col:49> col:49 __mutex 'pthread_mutex_t *'
| |-ParmVarDecl 0x56463c99d100 <line:492:11, col:38> col:38 __mutexattr 'const pthread_mutexattr_t *'
| |-NoThrowAttr 0x56463c99d2f8 <line:493:22>
| `-NonNullAttr 0x56463c99d350 <col:63, col:77> 1
|-FunctionDecl 0x56463c99d4c8 <line:494:1, line:495:79> line:494:12 pthread_mutex_destroy 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x56463c99d398 <col:35, col:52> col:52 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x56463c99d570 <line:495:22>
| `-NonNullAttr 0x56463c99d5c8 <col:63, col:77> 1
|-FunctionDecl 0x56463c99d6d0 <line:496:1, line:497:68> line:496:12 pthread_mutex_trylock 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x56463c99d618 <col:35, col:52> col:52 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x56463c99d778 <line:497:22>
| `-NonNullAttr 0x56463c99d7d0 <col:52, col:66> 1
|-FunctionDecl 0x56463c99d8d0 <line:498:1, line:499:68> line:498:12 pthread_mutex_lock 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x56463c99d818 <col:32, col:49> col:49 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x56463c99d978 <line:499:22>
| `-NonNullAttr 0x56463c99d9d0 <col:52, col:66> 1
|-FunctionDecl 0x56463c99ec28 <line:500:1, line:502:85> line:500:12 pthread_mutex_timedlock 'int (pthread_mutex_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x56463c99ea38 <col:37, col:65> col:65 __mutex 'pthread_mutex_t *restrict'
| |-ParmVarDecl 0x56463c99eac8 <line:501:9, line:502:9> col:9 __abstime 'const struct timespec *restrict'
| |-NoThrowAttr 0x56463c99ecd8 <col:36>
| `-NonNullAttr 0x56463c99ed30 <col:66, col:83> 1 2
|-FunctionDecl 0x56463c99ee30 <line:503:1, line:504:68> line:503:12 pthread_mutex_unlock 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x56463c99ed78 <col:34, col:51> col:51 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x56463c99eed8 <line:504:22>
| `-NonNullAttr 0x56463c99ef30 <col:52, col:66> 1
|-FunctionDecl 0x56463c99f1c8 <line:505:1, line:508:82> line:505:12 pthread_mutex_getprioceiling 'int (const pthread_mutex_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x56463c99efe0 <col:42, line:506:18> col:18 __mutex 'const pthread_mutex_t *restrict'
| |-ParmVarDecl 0x56463c99f060 <line:507:7, col:23> col:23 __prioceiling 'int *restrict'
| |-NoThrowAttr 0x56463c99f278 <line:508:22>
| `-NonNullAttr 0x56463c99f2d0 <col:63, col:80> 1 2
|-FunctionDecl 0x56463c99f598 <line:509:1, line:512:82> line:509:12 pthread_mutex_setprioceiling 'int (pthread_mutex_t *restrict, int, int *restrict)' extern
| |-ParmVarDecl 0x56463c99f318 <col:42, col:70> col:70 __mutex 'pthread_mutex_t *restrict'
| |-ParmVarDecl 0x56463c99f398 <line:510:7, col:11> col:11 __prioceiling 'int'
| |-ParmVarDecl 0x56463c99f418 <line:511:7, col:23> col:23 __old_ceiling 'int *restrict'
| |-NoThrowAttr 0x56463c99f650 <line:512:22>
| `-NonNullAttr 0x56463c99f6a8 <col:63, col:80> 1 3
|-FunctionDecl 0x56463c99f7b0 <line:513:1, line:514:79> line:513:12 pthread_mutex_consistent 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x56463c99f6f8 <col:38, col:55> col:55 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x56463c99f858 <line:514:22>
| `-NonNullAttr 0x56463c99f8b0 <col:63, col:77> 1
|-FunctionDecl 0x56463c99fad8 <line:515:1, line:516:79> line:515:12 pthread_mutexattr_init 'int (pthread_mutexattr_t *)' extern
| |-ParmVarDecl 0x56463c99f960 <col:36, col:57> col:57 __attr 'pthread_mutexattr_t *'
| |-NoThrowAttr 0x56463c99fb80 <line:516:22>
| `-NonNullAttr 0x56463c99fbd8 <col:63, col:77> 1
|-FunctionDecl 0x56463c99fce0 <line:517:1, line:518:79> line:517:12 pthread_mutexattr_destroy 'int (pthread_mutexattr_t *)' extern
| |-ParmVarDecl 0x56463c99fc28 <col:39, col:60> col:60 __attr 'pthread_mutexattr_t *'
| |-NoThrowAttr 0x56463c99fd88 <line:518:22>
| `-NonNullAttr 0x56463c99fde0 <col:63, col:77> 1
|-FunctionDecl 0x56463c9a0008 <line:519:1, line:522:82> line:519:12 pthread_mutexattr_getpshared 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x56463c99fe28 <col:42, line:520:18> col:18 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x56463c99fea8 <line:521:7, col:23> col:23 __pshared 'int *restrict'
| |-NoThrowAttr 0x56463c9a00b8 <line:522:22>
| `-NonNullAttr 0x56463c9a0110 <col:63, col:80> 1 2
|-FunctionDecl 0x56463c9a0318 <line:523:1, line:525:79> line:523:12 pthread_mutexattr_setpshared 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x56463c9a0158 <col:42, col:63> col:63 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x56463c9a01d8 <line:524:7, col:11> col:11 __pshared 'int'
| |-NoThrowAttr 0x56463c9a03c8 <line:525:22>
| `-NonNullAttr 0x56463c9a0420 <col:63, col:77> 1
|-FunctionDecl 0x56463c9a05c8 <line:526:1, line:528:82> line:526:12 pthread_mutexattr_gettype 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x56463c9a0468 <col:39, line:527:11> col:11 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x56463c9a04e8 <col:19, col:35> col:35 __kind 'int *restrict'
| |-NoThrowAttr 0x56463c9a0678 <line:528:22>
| `-NonNullAttr 0x56463c9a06d0 <col:63, col:80> 1 2
|-FunctionDecl 0x56463c9a0858 <line:529:1, line:530:79> line:529:12 pthread_mutexattr_settype 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x56463c9a0718 <col:39, col:60> col:60 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x56463c9a0798 <col:68, col:72> col:72 __kind 'int'
| |-NoThrowAttr 0x56463c9a0908 <line:530:22>
| `-NonNullAttr 0x56463c9a0960 <col:63, col:77> 1
|-FunctionDecl 0x56463c9a0b20 <line:531:1, line:534:82> line:531:12 pthread_mutexattr_getprotocol 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x56463c9a09a8 <col:43, line:532:19> col:19 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x56463c9a0a40 <line:533:8, col:24> col:24 __protocol 'int *restrict'
| |-NoThrowAttr 0x56463c9a0bd0 <line:534:22>
| `-NonNullAttr 0x56463c9a0c28 <col:63, col:80> 1 2
|-FunctionDecl 0x56463c9a0db8 <line:535:1, line:537:79> line:535:12 pthread_mutexattr_setprotocol 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x56463c9a0c78 <col:43, col:64> col:64 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x56463c9a0cf8 <line:536:8, col:12> col:12 __protocol 'int'
| |-NoThrowAttr 0x56463c9a0e68 <line:537:22>
| `-NonNullAttr 0x56463c9a0ec0 <col:63, col:77> 1
|-FunctionDecl 0x56463c9a1068 <line:538:1, line:541:82> line:538:12 pthread_mutexattr_getprioceiling 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x56463c9a0f08 <col:46, line:539:22> col:22 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x56463c9a0f88 <line:540:11, col:27> col:27 __prioceiling 'int *restrict'
| |-NoThrowAttr 0x56463c9a1118 <line:541:22>
| `-NonNullAttr 0x56463c9a1170 <col:63, col:80> 1 2
|-FunctionDecl 0x56463c9a12f8 <line:542:1, line:544:79> line:542:12 pthread_mutexattr_setprioceiling 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x56463c9a11b8 <col:46, col:67> col:67 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x56463c9a1238 <line:543:11, col:15> col:15 __prioceiling 'int'
| |-NoThrowAttr 0x56463c9a13a8 <line:544:22>
| `-NonNullAttr 0x56463c9a1400 <col:63, col:77> 1
|-FunctionDecl 0x56463c9a15e8 <line:545:1, line:547:82> line:545:12 pthread_mutexattr_getrobust 'int (const pthread_mutexattr_t *, int *)' extern
| |-ParmVarDecl 0x56463c9a1448 <col:41, col:68> col:68 __attr 'const pthread_mutexattr_t *'
| |-ParmVarDecl 0x56463c9a14c8 <line:546:6, col:11> col:11 __robustness 'int *'
| |-NoThrowAttr 0x56463c9a1698 <line:547:22>
| `-NonNullAttr 0x56463c9a16f0 <col:63, col:80> 1 2
|-FunctionDecl 0x56463c9a1878 <line:548:1, line:550:79> line:548:12 pthread_mutexattr_setrobust 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x56463c9a1738 <col:41, col:62> col:62 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x56463c9a17b8 <line:549:6, col:10> col:10 __robustness 'int'
| |-NoThrowAttr 0x56463c9a1928 <line:550:22>
| `-NonNullAttr 0x56463c9a1980 <col:63, col:77> 1
|-FunctionDecl 0x56463c9a2cf8 <line:551:1, line:553:86> line:551:12 pthread_rwlock_init 'int (pthread_rwlock_t *restrict, const pthread_rwlockattr_t *restrict)' extern
| |-ParmVarDecl 0x56463c9a2aa0 <col:33, col:62> col:62 __rwlock 'pthread_rwlock_t *restrict'
| |-ParmVarDecl 0x56463c9a2bb0 <line:552:5, line:553:5> col:5 __attr 'const pthread_rwlockattr_t *restrict'
| |-NoThrowAttr 0x56463c9a2da8 <col:29>
| `-NonNullAttr 0x56463c9a2e00 <col:70, col:84> 1
|-FunctionDecl 0x56463c9a2f78 <line:554:1, line:555:79> line:554:12 pthread_rwlock_destroy 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x56463c9a2e48 <col:36, col:54> col:54 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x56463c9a3020 <line:555:22>
| `-NonNullAttr 0x56463c9a3078 <col:63, col:77> 1
|-FunctionDecl 0x56463c9a3180 <line:556:1, line:557:68> line:556:12 pthread_rwlock_rdlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x56463c9a30c8 <col:35, col:53> col:53 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x56463c9a3228 <line:557:22>
| `-NonNullAttr 0x56463c9a3280 <col:52, col:66> 1
|-FunctionDecl 0x56463c9a3380 <line:558:1, line:559:65> line:558:12 pthread_rwlock_tryrdlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x56463c9a32c8 <col:38, col:56> col:56 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x56463c9a3428 <line:559:19>
| `-NonNullAttr 0x56463c9a3480 <col:49, col:63> 1
|-FunctionDecl 0x56463c9a36b8 <line:560:1, line:562:88> line:560:12 pthread_rwlock_timedrdlock 'int (pthread_rwlock_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x56463c9a34c8 <col:40, col:69> col:69 __rwlock 'pthread_rwlock_t *restrict'
| |-ParmVarDecl 0x56463c9a3558 <line:561:12, line:562:12> col:12 __abstime 'const struct timespec *restrict'
| |-NoThrowAttr 0x56463c9a3768 <col:39>
| `-NonNullAttr 0x56463c9a37c0 <col:69, col:86> 1 2
|-FunctionDecl 0x56463c9a38c0 <line:563:1, line:564:68> line:563:12 pthread_rwlock_wrlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x56463c9a3808 <col:35, col:53> col:53 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x56463c9a3968 <line:564:22>
| `-NonNullAttr 0x56463c9a39c0 <col:52, col:66> 1
|-FunctionDecl 0x56463c9a3b28 <line:565:1, line:566:68> line:565:12 pthread_rwlock_trywrlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x56463c9a3a70 <col:38, col:56> col:56 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x56463c9a3bd0 <line:566:22>
| `-NonNullAttr 0x56463c9a3c28 <col:52, col:66> 1
|-FunctionDecl 0x56463c9a3de8 <line:567:1, line:569:88> line:567:12 pthread_rwlock_timedwrlock 'int (pthread_rwlock_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x56463c9a3c78 <col:40, col:69> col:69 __rwlock 'pthread_rwlock_t *restrict'
| |-ParmVarDecl 0x56463c9a3d08 <line:568:12, line:569:12> col:12 __abstime 'const struct timespec *restrict'
| |-NoThrowAttr 0x56463c9a3e98 <col:39>
| `-NonNullAttr 0x56463c9a3ef0 <col:69, col:86> 1 2
|-FunctionDecl 0x56463c9a3ff0 <line:570:1, line:571:68> line:570:12 pthread_rwlock_unlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x56463c9a3f38 <col:35, col:53> col:53 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x56463c9a4098 <line:571:22>
| `-NonNullAttr 0x56463c9a40f0 <col:52, col:66> 1
|-FunctionDecl 0x56463c9a42d8 <line:572:1, line:573:79> line:572:12 pthread_rwlockattr_init 'int (pthread_rwlockattr_t *)' extern
| |-ParmVarDecl 0x56463c9a41a0 <col:37, col:59> col:59 __attr 'pthread_rwlockattr_t *'
| |-NoThrowAttr 0x56463c9a4380 <line:573:22>
| `-NonNullAttr 0x56463c9a43d8 <col:63, col:77> 1
|-FunctionDecl 0x56463c9a44e0 <line:574:1, line:575:79> line:574:12 pthread_rwlockattr_destroy 'int (pthread_rwlockattr_t *)' extern
| |-ParmVarDecl 0x56463c9a4428 <col:40, col:62> col:62 __attr 'pthread_rwlockattr_t *'
| |-NoThrowAttr 0x56463c9a4588 <line:575:22>
| `-NonNullAttr 0x56463c9a45e0 <col:63, col:77> 1
|-FunctionDecl 0x56463c9a4808 <line:576:1, line:579:82> line:576:12 pthread_rwlockattr_getpshared 'int (const pthread_rwlockattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x56463c9a4628 <col:43, line:577:19> col:19 __attr 'const pthread_rwlockattr_t *restrict'
| |-ParmVarDecl 0x56463c9a46a8 <line:578:8, col:24> col:24 __pshared 'int *restrict'
| |-NoThrowAttr 0x56463c9a48b8 <line:579:22>
| `-NonNullAttr 0x56463c9a4910 <col:63, col:80> 1 2
|-FunctionDecl 0x56463c9a4b38 <line:580:1, line:582:79> line:580:12 pthread_rwlockattr_setpshared 'int (pthread_rwlockattr_t *, int)' extern
| |-ParmVarDecl 0x56463c9a4958 <col:43, col:65> col:65 __attr 'pthread_rwlockattr_t *'
| |-ParmVarDecl 0x56463c9a49d8 <line:581:8, col:12> col:12 __pshared 'int'
| |-NoThrowAttr 0x56463c9a4be8 <line:582:22>
| `-NonNullAttr 0x56463c9a4c40 <col:63, col:77> 1
|-FunctionDecl 0x56463c9a4de8 <line:583:1, line:586:82> line:583:12 pthread_rwlockattr_getkind_np 'int (const pthread_rwlockattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x56463c9a4c88 <col:43, line:584:19> col:19 __attr 'const pthread_rwlockattr_t *restrict'
| |-ParmVarDecl 0x56463c9a4d08 <line:585:8, col:24> col:24 __pref 'int *restrict'
| |-NoThrowAttr 0x56463c9a4e98 <line:586:22>
| `-NonNullAttr 0x56463c9a4ef0 <col:63, col:80> 1 2
|-FunctionDecl 0x56463c9a5078 <line:587:1, line:588:93> line:587:12 pthread_rwlockattr_setkind_np 'int (pthread_rwlockattr_t *, int)' extern
| |-ParmVarDecl 0x56463c9a4f38 <col:43, col:65> col:65 __attr 'pthread_rwlockattr_t *'
| |-ParmVarDecl 0x56463c9a4fb8 <line:588:8, col:12> col:12 __pref 'int'
| |-NoThrowAttr 0x56463c9a5128 <col:36>
| `-NonNullAttr 0x56463c9a5180 <col:77, col:91> 1
|-FunctionDecl 0x56463c9a54b8 <line:589:1, line:591:79> line:589:12 pthread_cond_init 'int (pthread_cond_t *restrict, const pthread_condattr_t *restrict)' extern
| |-ParmVarDecl 0x56463c9a5260 <col:31, col:58> col:58 __cond 'pthread_cond_t *restrict'
| |-ParmVarDecl 0x56463c9a5370 <line:590:10, col:47> col:47 __cond_attr 'const pthread_condattr_t *restrict'
| |-NoThrowAttr 0x56463c9a5568 <line:591:22>
| `-NonNullAttr 0x56463c9a55c0 <col:63, col:77> 1
|-FunctionDecl 0x56463c9a5738 <line:592:1, line:593:79> line:592:12 pthread_cond_destroy 'int (pthread_cond_t *)' extern
| |-ParmVarDecl 0x56463c9a5608 <col:34, col:50> col:50 __cond 'pthread_cond_t *'
| |-NoThrowAttr 0x56463c9a57e0 <line:593:22>
| `-NonNullAttr 0x56463c9a5838 <col:63, col:77> 1
|-FunctionDecl 0x56463c9a5940 <line:594:1, line:595:68> line:594:12 pthread_cond_signal 'int (pthread_cond_t *)' extern
| |-ParmVarDecl 0x56463c9a5888 <col:33, col:49> col:49 __cond 'pthread_cond_t *'
| |-NoThrowAttr 0x56463c9a59e8 <line:595:22>
| `-NonNullAttr 0x56463c9a5a40 <col:52, col:66> 1
|-FunctionDecl 0x56463c9a5b58 <line:596:1, line:597:68> line:596:12 pthread_cond_broadcast 'int (pthread_cond_t *)' extern
| |-ParmVarDecl 0x56463c9a5aa0 <col:36, col:52> col:52 __cond 'pthread_cond_t *'
| |-NoThrowAttr 0x56463c9a5c00 <line:597:22>
| `-NonNullAttr 0x56463c9a5c58 <col:52, col:66> 1
|-FunctionDecl 0x56463c9a5e88 <line:598:1, line:600:41> line:598:12 pthread_cond_wait 'int (pthread_cond_t *restrict, pthread_mutex_t *restrict)' extern
| |-ParmVarDecl 0x56463c9a5ca8 <col:31, col:58> col:58 __cond 'pthread_cond_t *restrict'
| |-ParmVarDecl 0x56463c9a5d20 <line:599:10, col:38> col:38 __mutex 'pthread_mutex_t *restrict'
| `-NonNullAttr 0x56463c9a5f38 <line:600:22, col:39> 1 2
|-FunctionDecl 0x56463c9a6268 <line:601:1, line:604:44> line:601:12 pthread_cond_timedwait 'int (pthread_cond_t *restrict, pthread_mutex_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x56463c9a5fb8 <col:36, col:63> col:63 __cond 'pthread_cond_t *restrict'
| |-ParmVarDecl 0x56463c9a6030 <line:602:8, col:36> col:36 __mutex 'pthread_mutex_t *restrict'
| |-ParmVarDecl 0x56463c9a60c0 <line:603:8, col:42> col:42 __abstime 'const struct timespec *restrict'
| `-NonNullAttr 0x56463c9a6320 <line:604:22, col:42> 1 2 3
|-FunctionDecl 0x56463c9a6538 <line:605:1, line:606:79> line:605:12 pthread_condattr_init 'int (pthread_condattr_t *)' extern
| |-ParmVarDecl 0x56463c9a6400 <col:35, col:55> col:55 __attr 'pthread_condattr_t *'
| |-NoThrowAttr 0x56463c9a65e0 <line:606:22>
| `-NonNullAttr 0x56463c9a6638 <col:63, col:77> 1
|-FunctionDecl 0x56463c9a6740 <line:607:1, line:608:79> line:607:12 pthread_condattr_destroy 'int (pthread_condattr_t *)' extern
| |-ParmVarDecl 0x56463c9a6688 <col:38, col:58> col:58 __attr 'pthread_condattr_t *'
| |-NoThrowAttr 0x56463c9a67e8 <line:608:22>
| `-NonNullAttr 0x56463c9a6840 <col:63, col:77> 1
|-FunctionDecl 0x56463c9a6aa0 <line:609:1, line:612:82> line:609:12 pthread_condattr_getpshared 'int (const pthread_condattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x56463c9a6888 <col:41, line:610:17> col:17 __attr 'const pthread_condattr_t *restrict'
| |-ParmVarDecl 0x56463c9a6908 <line:611:6, col:22> col:22 __pshared 'int *restrict'
| |-NoThrowAttr 0x56463c9a6b50 <line:612:22>
| `-NonNullAttr 0x56463c9a6ba8 <col:63, col:80> 1 2
|-FunctionDecl 0x56463c9a6db8 <line:613:1, line:614:94> line:613:12 pthread_condattr_setpshared 'int (pthread_condattr_t *, int)' extern
| |-ParmVarDecl 0x56463c9a6bf8 <col:41, col:61> col:61 __attr 'pthread_condattr_t *'
| |-ParmVarDecl 0x56463c9a6c78 <line:614:6, col:10> col:10 __pshared 'int'
| |-NoThrowAttr 0x56463c9a6e68 <col:37>
| `-NonNullAttr 0x56463c9a6ec0 <col:78, col:92> 1
|-FunctionDecl 0x56463c9a70d8 <line:615:1, line:618:82> line:615:12 pthread_condattr_getclock 'int (const pthread_condattr_t *restrict, __clockid_t *restrict)' extern
| |-ParmVarDecl 0x56463c9a6f08 <col:39, line:616:22> col:22 __attr 'const pthread_condattr_t *restrict'
| |-ParmVarDecl 0x56463c9a6fb0 <line:617:11, col:35> col:35 __clock_id '__clockid_t *restrict'
| |-NoThrowAttr 0x56463c9a7188 <line:618:22>
| `-NonNullAttr 0x56463c9a71e0 <col:63, col:80> 1 2
|-FunctionDecl 0x56463c9a73a8 <line:619:1, line:621:79> line:619:12 pthread_condattr_setclock 'int (pthread_condattr_t *, __clockid_t)' extern
| |-ParmVarDecl 0x56463c9a7228 <col:39, col:59> col:59 __attr 'pthread_condattr_t *'
| |-ParmVarDecl 0x56463c9a72a0 <line:620:11, col:23> col:23 __clock_id '__clockid_t':'int'
| |-NoThrowAttr 0x56463c9a7458 <line:621:22>
| `-NonNullAttr 0x56463c9a74b0 <col:63, col:77> 1
|-FunctionDecl 0x56463c9a7758 <line:622:1, line:623:79> line:622:12 pthread_spin_init 'int (pthread_spinlock_t *, int)' extern
| |-ParmVarDecl 0x56463c9a7590 <col:31, col:51> col:51 __lock 'pthread_spinlock_t *'
| |-ParmVarDecl 0x56463c9a7610 <col:59, col:63> col:63 __pshared 'int'
| |-NoThrowAttr 0x56463c9a7808 <line:623:22>
| `-NonNullAttr 0x56463c9a7860 <col:63, col:77> 1
|-FunctionDecl 0x56463c9a79d8 <line:624:1, line:625:79> line:624:12 pthread_spin_destroy 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x56463c9a78a8 <col:34, col:54> col:54 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x56463c9a7ab0 <line:625:22>
| `-NonNullAttr 0x56463c9a7b08 <col:63, col:77> 1
|-FunctionDecl 0x56463c9a7c10 <line:626:1, line:627:68> line:626:12 pthread_spin_lock 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x56463c9a7b58 <col:31, col:51> col:51 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x56463c9a7cb8 <line:627:22>
| `-NonNullAttr 0x56463c9a7d10 <col:52, col:66> 1
|-FunctionDecl 0x56463c9a7e10 <line:628:1, line:629:68> line:628:12 pthread_spin_trylock 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x56463c9a7d58 <col:34, col:54> col:54 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x56463c9a7eb8 <line:629:22>
| `-NonNullAttr 0x56463c9a7f10 <col:52, col:66> 1
|-FunctionDecl 0x56463c9a8010 <line:630:1, line:631:68> line:630:12 pthread_spin_unlock 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x56463c9a7f58 <col:33, col:53> col:53 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x56463c9a80b8 <line:631:22>
| `-NonNullAttr 0x56463c9a8110 <col:52, col:66> 1
|-FunctionDecl 0x56463c9a84e8 <line:632:1, line:635:79> line:632:12 pthread_barrier_init 'int (pthread_barrier_t *restrict, const pthread_barrierattr_t *restrict, unsigned int)' extern
| |-ParmVarDecl 0x56463c9a81f0 <col:34, col:64> col:64 __barrier 'pthread_barrier_t *restrict'
| |-ParmVarDecl 0x56463c9a8300 <line:633:6, line:634:6> col:6 __attr 'const pthread_barrierattr_t *restrict'
| |-ParmVarDecl 0x56463c9a8380 <col:14, col:27> col:27 __count 'unsigned int'
| |-NoThrowAttr 0x56463c9a85a0 <line:635:22>
| `-NonNullAttr 0x56463c9a85f8 <col:63, col:77> 1
|-FunctionDecl 0x56463c9a8778 <line:636:1, line:637:79> line:636:12 pthread_barrier_destroy 'int (pthread_barrier_t *)' extern
| |-ParmVarDecl 0x56463c9a8648 <col:37, col:56> col:56 __barrier 'pthread_barrier_t *'
| |-NoThrowAttr 0x56463c9a8820 <line:637:22>
| `-NonNullAttr 0x56463c9a8878 <col:63, col:77> 1
|-FunctionDecl 0x56463c9a8980 <line:638:1, line:639:68> line:638:12 pthread_barrier_wait 'int (pthread_barrier_t *)' extern
| |-ParmVarDecl 0x56463c9a88c8 <col:34, col:53> col:53 __barrier 'pthread_barrier_t *'
| |-NoThrowAttr 0x56463c9a8a28 <line:639:22>
| `-NonNullAttr 0x56463c9a8a80 <col:52, col:66> 1
|-FunctionDecl 0x56463c9a9c88 <line:640:1, line:641:79> line:640:12 pthread_barrierattr_init 'int (pthread_barrierattr_t *)' extern
| |-ParmVarDecl 0x56463c9a9b50 <col:38, col:61> col:61 __attr 'pthread_barrierattr_t *'
| |-NoThrowAttr 0x56463c9a9d30 <line:641:22>
| `-NonNullAttr 0x56463c9a9d88 <col:63, col:77> 1
|-FunctionDecl 0x56463c9a9e90 <line:642:1, line:643:79> line:642:12 pthread_barrierattr_destroy 'int (pthread_barrierattr_t *)' extern
| |-ParmVarDecl 0x56463c9a9dd8 <col:41, col:64> col:64 __attr 'pthread_barrierattr_t *'
| |-NoThrowAttr 0x56463c9a9f38 <line:643:22>
| `-NonNullAttr 0x56463c9a9f90 <col:63, col:77> 1
|-FunctionDecl 0x56463c9aa1b8 <line:644:1, line:647:82> line:644:12 pthread_barrierattr_getpshared 'int (const pthread_barrierattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x56463c9a9fd8 <col:44, line:645:20> col:20 __attr 'const pthread_barrierattr_t *restrict'
| |-ParmVarDecl 0x56463c9aa058 <line:646:9, col:25> col:25 __pshared 'int *restrict'
| |-NoThrowAttr 0x56463c9aa268 <line:647:22>
| `-NonNullAttr 0x56463c9aa2c0 <col:63, col:80> 1 2
|-FunctionDecl 0x56463c9aa4c8 <line:648:1, line:650:79> line:648:12 pthread_barrierattr_setpshared 'int (pthread_barrierattr_t *, int)' extern
| |-ParmVarDecl 0x56463c9aa308 <col:44, col:67> col:67 __attr 'pthread_barrierattr_t *'
| |-ParmVarDecl 0x56463c9aa388 <line:649:9, col:13> col:13 __pshared 'int'
| |-NoThrowAttr 0x56463c9aa578 <line:650:22>
| `-NonNullAttr 0x56463c9aa5d0 <col:63, col:77> 1
|-FunctionDecl 0x56463c9aa918 <line:651:1, line:653:79> line:651:12 pthread_key_create 'int (pthread_key_t *, void (*)(void *))' extern
| |-ParmVarDecl 0x56463c9aa6b0 <col:32, col:47> col:47 __key 'pthread_key_t *'
| |-ParmVarDecl 0x56463c9aa7d0 <line:652:11, col:43> col:18 __destr_function 'void (*)(void *)'
| |-NoThrowAttr 0x56463c9aa9c8 <line:653:22>
| `-NonNullAttr 0x56463c9aaa20 <col:63, col:77> 1
|-FunctionDecl 0x56463c9aab88 <line:654:1, col:92> col:12 pthread_key_delete 'int (pthread_key_t)' extern
| |-ParmVarDecl 0x56463c9aaa68 <col:32, col:46> col:46 __key 'pthread_key_t':'unsigned int'
| `-NoThrowAttr 0x56463c9aac30 <col:69>
|-FunctionDecl 0x56463c9aada8 <line:655:1, col:95> col:14 pthread_getspecific 'void *(pthread_key_t)' extern
| |-ParmVarDecl 0x56463c9aac98 <col:35, col:49> col:49 __key 'pthread_key_t':'unsigned int'
| `-NoThrowAttr 0x56463c9aae50 <col:72>
|-FunctionDecl 0x56463c9ab088 <line:656:1, line:657:67> line:656:12 pthread_setspecific 'int (pthread_key_t, const void *)' extern
| |-ParmVarDecl 0x56463c9aaeb8 <col:33, col:47> col:47 __key 'pthread_key_t':'unsigned int'
| |-ParmVarDecl 0x56463c9aaf68 <line:657:5, col:17> col:17 __pointer 'const void *'
| `-NoThrowAttr 0x56463c9ab138 <col:44>
|-FunctionDecl 0x56463c9ab358 <line:658:1, line:660:79> line:658:12 pthread_getcpuclockid 'int (pthread_t, __clockid_t *)' extern
| |-ParmVarDecl 0x56463c9ab1a0 <col:35, col:45> col:45 __thread_id 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x56463c9ab218 <line:659:7, col:20> col:20 __clock_id '__clockid_t *'
| |-NoThrowAttr 0x56463c9ab408 <line:660:22>
| `-NonNullAttr 0x56463c9ab460 <col:63, col:77> 2
|-FunctionDecl 0x56463c9ab8a8 <line:661:1, line:663:70> line:661:12 pthread_atfork 'int (void (*)(void), void (*)(void), void (*)(void))' extern
| |-ParmVarDecl 0x56463c9ab540 <col:28, col:51> col:35 __prepare 'void (*)(void)'
| |-ParmVarDecl 0x56463c9ab650 <line:662:7, col:29> col:14 __parent 'void (*)(void)'
| |-ParmVarDecl 0x56463c9ab760 <line:663:7, col:28> col:14 __child 'void (*)(void)'
| `-NoThrowAttr 0x56463c9ab960 <col:47>
|-FunctionDecl 0x56463c9abaf0 <line:665:1, col:20> col:8 used P0 'void *(void *)'
| `-ParmVarDecl 0x56463c9ab9d0 <col:11, col:17> col:17 arg 'void *'
|-FunctionDecl 0x56463c9abc48 <line:666:1, col:20> col:8 used P1 'void *(void *)'
| `-ParmVarDecl 0x56463c9abbb0 <col:11, col:17> col:17 arg 'void *'
|-FunctionDecl 0x56463c9abda0 <line:667:1, col:20> col:8 used P2 'void *(void *)'
| `-ParmVarDecl 0x56463c9abd08 <col:11, col:17> col:17 arg 'void *'
|-FunctionDecl 0x56463c9abe68 <line:668:1, col:12> col:6 fence 'void ()'
|-FunctionDecl 0x56463c9abf28 <line:669:1, col:12> col:6 isync 'void ()'
|-FunctionDecl 0x56463c9abfe8 <line:670:1, col:14> col:6 lwfence 'void ()'
|-VarDecl 0x56463c9ac0a0 <line:671:1, col:5> col:5 used __unbuffered_cnt 'int'
|-VarDecl 0x56463c9ac120 prev 0x56463c9ac0a0 <line:672:1, col:24> col:5 used __unbuffered_cnt 'int' cinit
| `-IntegerLiteral 0x56463c9ac188 <col:24> 'int' 0
|-VarDecl 0x56463c9ac1c0 <line:673:1, col:5> col:5 used __unbuffered_p0_EAX 'int'
|-VarDecl 0x56463c9ac240 prev 0x56463c9ac1c0 <line:674:1, col:27> col:5 used __unbuffered_p0_EAX 'int' cinit
| `-IntegerLiteral 0x56463c9ac2a8 <col:27> 'int' 0
|-VarDecl 0x56463c9ac2e0 <line:675:1, col:5> col:5 used __unbuffered_p1_EAX 'int'
|-VarDecl 0x56463c9ac360 prev 0x56463c9ac2e0 <line:676:1, col:27> col:5 used __unbuffered_p1_EAX 'int' cinit
| `-IntegerLiteral 0x56463c9ac3c8 <col:27> 'int' 0
|-VarDecl 0x56463c9ac400 <line:677:1, col:5> col:5 used __unbuffered_p2_EAX 'int'
|-VarDecl 0x56463c9ac480 prev 0x56463c9ac400 <line:678:1, col:27> col:5 used __unbuffered_p2_EAX 'int' cinit
| `-IntegerLiteral 0x56463c9ac4e8 <col:27> 'int' 0
|-VarDecl 0x56463c9ac518 <line:679:1, col:7> col:7 used main$tmp_guard0 '_Bool'
|-VarDecl 0x56463c9ac590 <line:680:1, col:7> col:7 used main$tmp_guard1 '_Bool'
|-VarDecl 0x56463c9ac610 <line:681:1, col:5> col:5 used x 'int'
|-VarDecl 0x56463c9ac690 prev 0x56463c9ac610 <line:682:1, col:9> col:5 used x 'int' cinit
| `-IntegerLiteral 0x56463c9ac6f8 <col:9> 'int' 0
|-VarDecl 0x56463c9ac730 <line:683:1, col:5> col:5 used y 'int'
|-VarDecl 0x56463c9ac7b0 prev 0x56463c9ac730 <line:684:1, col:9> col:5 used y 'int' cinit
| `-IntegerLiteral 0x56463c9ac818 <col:9> 'int' 0
|-VarDecl 0x56463c9ac850 <line:685:1, col:5> col:5 used z 'int'
|-VarDecl 0x56463c9ac8d0 prev 0x56463c9ac850 <line:686:1, col:9> col:5 used z 'int' cinit
| `-IntegerLiteral 0x56463c9ac938 <col:9> 'int' 0
|-VarDecl 0x56463c9ac968 <line:687:1, col:7> col:7 used z$flush_delayed '_Bool'
|-VarDecl 0x56463c9ac9e8 <line:688:1, col:5> col:5 used z$mem_tmp 'int'
|-VarDecl 0x56463c9aca60 <line:689:1, col:7> col:7 used z$r_buff0_thd0 '_Bool'
|-VarDecl 0x56463c9acb00 <line:690:1, col:7> col:7 used z$r_buff0_thd1 '_Bool'
|-VarDecl 0x56463c9acb78 <line:691:1, col:7> col:7 used z$r_buff0_thd2 '_Bool'
|-VarDecl 0x56463c9acbf0 <line:692:1, col:7> col:7 used z$r_buff0_thd3 '_Bool'
|-VarDecl 0x56463c9acc68 <line:693:1, col:7> col:7 used z$r_buff1_thd0 '_Bool'
|-VarDecl 0x56463c9acce0 <line:694:1, col:7> col:7 used z$r_buff1_thd1 '_Bool'
|-VarDecl 0x56463c9acd58 <line:695:1, col:7> col:7 used z$r_buff1_thd2 '_Bool'
|-VarDecl 0x56463c9acdd0 <line:696:1, col:7> col:7 used z$r_buff1_thd3 '_Bool'
|-VarDecl 0x56463c9ace48 <line:697:1, col:7> col:7 z$read_delayed '_Bool'
|-VarDecl 0x56463c9acec8 <line:698:1, col:6> col:6 z$read_delayed_var 'int *'
|-VarDecl 0x56463c9acf48 <line:699:1, col:5> col:5 used z$w_buff0 'int'
|-VarDecl 0x56463c9acfc0 <line:700:1, col:7> col:7 used z$w_buff0_used '_Bool'
|-VarDecl 0x56463c9ad040 <line:701:1, col:5> col:5 used z$w_buff1 'int'
|-VarDecl 0x56463c9ad0b8 <line:702:1, col:7> col:7 used z$w_buff1_used '_Bool'
|-VarDecl 0x56463c9ad130 <line:703:1, col:7> col:7 used weak$$choice0 '_Bool'
|-VarDecl 0x56463c9ad1a8 <line:704:1, col:7> col:7 used weak$$choice2 '_Bool'
|-FunctionDecl 0x56463c9ad2c0 prev 0x56463c9abaf0 <line:705:1, line:733:1> line:705:8 used P0 'void *(void *)'
| |-ParmVarDecl 0x56463c9ad228 <col:11, col:17> col:17 arg 'void *'
| `-CompoundStmt 0x56463c9aeb20 <line:706:1, line:733:1>
|   |-CallExpr 0x56463c9ad3d8 <line:707:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x56463c9ad3c0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x56463c9ad368 <col:3> 'void ()' Function 0x56463c952e40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x56463c9ad450 <line:708:3, col:15> 'int' '='
|   | |-DeclRefExpr 0x56463c9ad3f8 <col:3> 'int' lvalue Var 0x56463c9ad040 'z$w_buff1' 'int'
|   | `-ImplicitCastExpr 0x56463c9ad438 <col:15> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x56463c9ad418 <col:15> 'int' lvalue Var 0x56463c9acf48 'z$w_buff0' 'int'
|   |-BinaryOperator 0x56463c9ad4b0 <line:709:3, col:15> 'int' '='
|   | |-DeclRefExpr 0x56463c9ad470 <col:3> 'int' lvalue Var 0x56463c9acf48 'z$w_buff0' 'int'
|   | `-IntegerLiteral 0x56463c9ad490 <col:15> 'int' 1
|   |-BinaryOperator 0x56463c9ad528 <line:710:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x56463c9ad4d0 <col:3> '_Bool' lvalue Var 0x56463c9ad0b8 'z$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x56463c9ad510 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x56463c9ad4f0 <col:20> '_Bool' lvalue Var 0x56463c9acfc0 'z$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x56463c9ad5c0 <line:711:3, col:27> '_Bool' '='
|   | |-DeclRefExpr 0x56463c9ad548 <col:3> '_Bool' lvalue Var 0x56463c9acfc0 'z$w_buff0_used' '_Bool'
|   | `-CStyleCastExpr 0x56463c9ad598 <col:20, col:27> '_Bool' <IntegralToBoolean>
|   |   `-IntegerLiteral 0x56463c9ad568 <col:27> 'int' 1
|   |-CallExpr 0x56463c9ad748 <line:712:3, col:56> 'void'
|   | |-ImplicitCastExpr 0x56463c9ad730 <col:3> 'void (*)(int)' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x56463c9ad5e0 <col:3> 'void (int)' Function 0x56463c952bc8 '__VERIFIER_assert' 'void (int)'
|   | `-UnaryOperator 0x56463c9ad6e0 <col:21, col:55> 'int' prefix '!' cannot overflow
|   |   `-ParenExpr 0x56463c9ad6c0 <col:22, col:55> 'int'
|   |     `-BinaryOperator 0x56463c9ad6a0 <col:23, col:41> 'int' '&&'
|   |       |-ImplicitCastExpr 0x56463c9ad658 <col:23> 'int' <IntegralCast>
|   |       | `-ImplicitCastExpr 0x56463c9ad640 <col:23> '_Bool' <LValueToRValue>
|   |       |   `-DeclRefExpr 0x56463c9ad600 <col:23> '_Bool' lvalue Var 0x56463c9ad0b8 'z$w_buff1_used' '_Bool'
|   |       `-ImplicitCastExpr 0x56463c9ad688 <col:41> 'int' <IntegralCast>
|   |         `-ImplicitCastExpr 0x56463c9ad670 <col:41> '_Bool' <LValueToRValue>
|   |           `-DeclRefExpr 0x56463c9ad620 <col:41> '_Bool' lvalue Var 0x56463c9acfc0 'z$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x56463c9ad7c8 <line:713:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x56463c9ad770 <col:3> '_Bool' lvalue Var 0x56463c9acc68 'z$r_buff1_thd0' '_Bool'
|   | `-ImplicitCastExpr 0x56463c9ad7b0 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x56463c9ad790 <col:20> '_Bool' lvalue Var 0x56463c9aca60 'z$r_buff0_thd0' '_Bool'
|   |-BinaryOperator 0x56463c9ad840 <line:714:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x56463c9ad7e8 <col:3> '_Bool' lvalue Var 0x56463c9acce0 'z$r_buff1_thd1' '_Bool'
|   | `-ImplicitCastExpr 0x56463c9ad828 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x56463c9ad808 <col:20> '_Bool' lvalue Var 0x56463c9acb00 'z$r_buff0_thd1' '_Bool'
|   |-BinaryOperator 0x56463c9ad8b8 <line:715:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x56463c9ad860 <col:3> '_Bool' lvalue Var 0x56463c9acd58 'z$r_buff1_thd2' '_Bool'
|   | `-ImplicitCastExpr 0x56463c9ad8a0 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x56463c9ad880 <col:20> '_Bool' lvalue Var 0x56463c9acb78 'z$r_buff0_thd2' '_Bool'
|   |-BinaryOperator 0x56463c9ad930 <line:716:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x56463c9ad8d8 <col:3> '_Bool' lvalue Var 0x56463c9acdd0 'z$r_buff1_thd3' '_Bool'
|   | `-ImplicitCastExpr 0x56463c9ad918 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x56463c9ad8f8 <col:20> '_Bool' lvalue Var 0x56463c9acbf0 'z$r_buff0_thd3' '_Bool'
|   |-BinaryOperator 0x56463c9ad9c8 <line:717:3, col:27> '_Bool' '='
|   | |-DeclRefExpr 0x56463c9ad950 <col:3> '_Bool' lvalue Var 0x56463c9acb00 'z$r_buff0_thd1' '_Bool'
|   | `-CStyleCastExpr 0x56463c9ad9a0 <col:20, col:27> '_Bool' <IntegralToBoolean>
|   |   `-IntegerLiteral 0x56463c9ad970 <col:27> 'int' 1
|   |-CallExpr 0x56463c9ada20 <line:718:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x56463c9ada08 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x56463c9ad9e8 <col:3> 'void ()' Function 0x56463c952f00 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x56463c9ada78 <line:719:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x56463c9ada60 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x56463c9ada40 <col:3> 'void ()' Function 0x56463c952e40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x56463c9adb10 <line:720:3, col:25> 'int' '='
|   | |-DeclRefExpr 0x56463c9ada98 <col:3> 'int' lvalue Var 0x56463c9ac240 '__unbuffered_p0_EAX' 'int'
|   | `-ImplicitCastExpr 0x56463c9adad8 <col:25> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x56463c9adab8 <col:25> 'int' lvalue Var 0x56463c9ac690 'x' 'int'
|   |-CallExpr 0x56463c9adb68 <line:721:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x56463c9adb50 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x56463c9adb30 <col:3> 'void ()' Function 0x56463c952f00 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x56463c9adbc0 <line:722:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x56463c9adba8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x56463c9adb88 <col:3> 'void ()' Function 0x56463c952e40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x56463c9adea8 <line:723:3, col:103> 'int' '='
|   | |-DeclRefExpr 0x56463c9adbe0 <col:3> 'int' lvalue Var 0x56463c9ac8d0 'z' 'int'
|   | `-ConditionalOperator 0x56463c9ade78 <col:7, col:103> 'int'
|   |   |-BinaryOperator 0x56463c9adca0 <col:7, col:25> 'int' '&&'
|   |   | |-ImplicitCastExpr 0x56463c9adc58 <col:7> 'int' <IntegralCast>
|   |   | | `-ImplicitCastExpr 0x56463c9adc40 <col:7> '_Bool' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x56463c9adc00 <col:7> '_Bool' lvalue Var 0x56463c9acfc0 'z$w_buff0_used' '_Bool'
|   |   | `-ImplicitCastExpr 0x56463c9adc88 <col:25> 'int' <IntegralCast>
|   |   |   `-ImplicitCastExpr 0x56463c9adc70 <col:25> '_Bool' <LValueToRValue>
|   |   |     `-DeclRefExpr 0x56463c9adc20 <col:25> '_Bool' lvalue Var 0x56463c9acb00 'z$r_buff0_thd1' '_Bool'
|   |   |-ImplicitCastExpr 0x56463c9ade60 <col:42> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x56463c9adcc0 <col:42> 'int' lvalue Var 0x56463c9acf48 'z$w_buff0' 'int'
|   |   `-ParenExpr 0x56463c9ade40 <col:54, col:103> 'int'
|   |     `-ConditionalOperator 0x56463c9ade10 <col:55, col:102> 'int'
|   |       |-BinaryOperator 0x56463c9add80 <col:55, col:73> 'int' '&&'
|   |       | |-ImplicitCastExpr 0x56463c9add38 <col:55> 'int' <IntegralCast>
|   |       | | `-ImplicitCastExpr 0x56463c9add20 <col:55> '_Bool' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x56463c9adce0 <col:55> '_Bool' lvalue Var 0x56463c9ad0b8 'z$w_buff1_used' '_Bool'
|   |       | `-ImplicitCastExpr 0x56463c9add68 <col:73> 'int' <IntegralCast>
|   |       |   `-ImplicitCastExpr 0x56463c9add50 <col:73> '_Bool' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x56463c9add00 <col:73> '_Bool' lvalue Var 0x56463c9acce0 'z$r_buff1_thd1' '_Bool'
|   |       |-ImplicitCastExpr 0x56463c9adde0 <col:90> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x56463c9adda0 <col:90> 'int' lvalue Var 0x56463c9ad040 'z$w_buff1' 'int'
|   |       `-ImplicitCastExpr 0x56463c9addf8 <col:102> 'int' <LValueToRValue>
|   |         `-DeclRefExpr 0x56463c9addc0 <col:102> 'int' lvalue Var 0x56463c9ac8d0 'z' 'int'
|   |-BinaryOperator 0x56463c9ae0b0 <line:724:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x56463c9adec8 <col:3> '_Bool' lvalue Var 0x56463c9acfc0 'z$w_buff0_used' '_Bool'
|   | `-ImplicitCastExpr 0x56463c9ae098 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x56463c9ae068 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x56463c9adf88 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x56463c9adf40 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x56463c9adf28 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x56463c9adee8 <col:20> '_Bool' lvalue Var 0x56463c9acfc0 'z$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x56463c9adf70 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x56463c9adf58 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x56463c9adf08 <col:38> '_Bool' lvalue Var 0x56463c9acb00 'z$r_buff0_thd1' '_Bool'
|   |     |-ImplicitCastExpr 0x56463c9ae020 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x56463c9adfd8 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x56463c9adfa8 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x56463c9ae050 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x56463c9ae038 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x56463c9ae000 <col:66> '_Bool' lvalue Var 0x56463c9acfc0 'z$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x56463c9ae398 <line:725:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x56463c9ae0d0 <col:3> '_Bool' lvalue Var 0x56463c9ad0b8 'z$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x56463c9ae380 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x56463c9ae350 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x56463c9ae270 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x56463c9ae190 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x56463c9ae148 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x56463c9ae130 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x56463c9ae0f0 <col:20> '_Bool' lvalue Var 0x56463c9acfc0 'z$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x56463c9ae178 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x56463c9ae160 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x56463c9ae110 <col:38> '_Bool' lvalue Var 0x56463c9acb00 'z$r_buff0_thd1' '_Bool'
|   |     | `-BinaryOperator 0x56463c9ae250 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x56463c9ae208 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x56463c9ae1f0 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x56463c9ae1b0 <col:56> '_Bool' lvalue Var 0x56463c9ad0b8 'z$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x56463c9ae238 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x56463c9ae220 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x56463c9ae1d0 <col:74> '_Bool' lvalue Var 0x56463c9acce0 'z$r_buff1_thd1' '_Bool'
|   |     |-ImplicitCastExpr 0x56463c9ae308 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x56463c9ae2c0 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x56463c9ae290 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x56463c9ae338 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x56463c9ae320 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x56463c9ae2e8 <col:102> '_Bool' lvalue Var 0x56463c9ad0b8 'z$w_buff1_used' '_Bool'
|   |-BinaryOperator 0x56463c9ae5a0 <line:726:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x56463c9ae3b8 <col:3> '_Bool' lvalue Var 0x56463c9acb00 'z$r_buff0_thd1' '_Bool'
|   | `-ImplicitCastExpr 0x56463c9ae588 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x56463c9ae558 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x56463c9ae478 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x56463c9ae430 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x56463c9ae418 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x56463c9ae3d8 <col:20> '_Bool' lvalue Var 0x56463c9acfc0 'z$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x56463c9ae460 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x56463c9ae448 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x56463c9ae3f8 <col:38> '_Bool' lvalue Var 0x56463c9acb00 'z$r_buff0_thd1' '_Bool'
|   |     |-ImplicitCastExpr 0x56463c9ae510 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x56463c9ae4c8 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x56463c9ae498 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x56463c9ae540 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x56463c9ae528 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x56463c9ae4f0 <col:66> '_Bool' lvalue Var 0x56463c9acb00 'z$r_buff0_thd1' '_Bool'
|   |-BinaryOperator 0x56463c9ae888 <line:727:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x56463c9ae5c0 <col:3> '_Bool' lvalue Var 0x56463c9acce0 'z$r_buff1_thd1' '_Bool'
|   | `-ImplicitCastExpr 0x56463c9ae870 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x56463c9ae840 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x56463c9ae760 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x56463c9ae680 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x56463c9ae638 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x56463c9ae620 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x56463c9ae5e0 <col:20> '_Bool' lvalue Var 0x56463c9acfc0 'z$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x56463c9ae668 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x56463c9ae650 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x56463c9ae600 <col:38> '_Bool' lvalue Var 0x56463c9acb00 'z$r_buff0_thd1' '_Bool'
|   |     | `-BinaryOperator 0x56463c9ae740 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x56463c9ae6f8 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x56463c9ae6e0 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x56463c9ae6a0 <col:56> '_Bool' lvalue Var 0x56463c9ad0b8 'z$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x56463c9ae728 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x56463c9ae710 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x56463c9ae6c0 <col:74> '_Bool' lvalue Var 0x56463c9acce0 'z$r_buff1_thd1' '_Bool'
|   |     |-ImplicitCastExpr 0x56463c9ae7f8 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x56463c9ae7b0 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x56463c9ae780 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x56463c9ae828 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x56463c9ae810 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x56463c9ae7d8 <col:102> '_Bool' lvalue Var 0x56463c9acce0 'z$r_buff1_thd1' '_Bool'
|   |-CallExpr 0x56463c9ae8e0 <line:728:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x56463c9ae8c8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x56463c9ae8a8 <col:3> 'void ()' Function 0x56463c952f00 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x56463c9ae938 <line:729:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x56463c9ae920 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x56463c9ae900 <col:3> 'void ()' Function 0x56463c952e40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x56463c9ae9f0 <line:730:3, col:41> 'int' '='
|   | |-DeclRefExpr 0x56463c9ae958 <col:3> 'int' lvalue Var 0x56463c9ac120 '__unbuffered_cnt' 'int'
|   | `-BinaryOperator 0x56463c9ae9d0 <col:22, col:41> 'int' '+'
|   |   |-ImplicitCastExpr 0x56463c9ae9b8 <col:22> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x56463c9ae978 <col:22> 'int' lvalue Var 0x56463c9ac120 '__unbuffered_cnt' 'int'
|   |   `-IntegerLiteral 0x56463c9ae998 <col:41> 'int' 1
|   |-CallExpr 0x56463c9aea48 <line:731:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x56463c9aea30 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x56463c9aea10 <col:3> 'void ()' Function 0x56463c952f00 '__VERIFIER_atomic_end' 'void ()'
|   `-ReturnStmt 0x56463c9aeaf8 <line:732:3, col:36>
|     `-CallExpr 0x56463c9aead8 <col:10, col:36> 'void *'
|       `-ImplicitCastExpr 0x56463c9aeac0 <col:10> 'void *(*)(void)' <FunctionToPointerDecay>
|         `-DeclRefExpr 0x56463c9aea68 <col:10> 'void *(void)' Function 0x56463c952958 '__VERIFIER_nondet_pointer' 'void *(void)'
|-FunctionDecl 0x56463c9aecb0 prev 0x56463c9abc48 <line:734:1, line:753:1> line:734:8 used P1 'void *(void *)'
| |-ParmVarDecl 0x56463c9aec18 <col:11, col:17> col:17 arg 'void *'
| `-CompoundStmt 0x56463c9afef0 <line:735:1, line:753:1>
|   |-CallExpr 0x56463c9aed90 <line:736:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x56463c9aed78 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x56463c9aed58 <col:3> 'void ()' Function 0x56463c952e40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x56463c9aedf0 <line:737:3, col:7> 'int' '='
|   | |-DeclRefExpr 0x56463c9aedb0 <col:3> 'int' lvalue Var 0x56463c9ac690 'x' 'int'
|   | `-IntegerLiteral 0x56463c9aedd0 <col:7> 'int' 1
|   |-CallExpr 0x56463c9aee48 <line:738:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x56463c9aee30 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x56463c9aee10 <col:3> 'void ()' Function 0x56463c952f00 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x56463c9aeea0 <line:739:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x56463c9aee88 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x56463c9aee68 <col:3> 'void ()' Function 0x56463c952e40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x56463c9aef18 <line:740:3, col:25> 'int' '='
|   | |-DeclRefExpr 0x56463c9aeec0 <col:3> 'int' lvalue Var 0x56463c9ac360 '__unbuffered_p1_EAX' 'int'
|   | `-ImplicitCastExpr 0x56463c9aef00 <col:25> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x56463c9aeee0 <col:25> 'int' lvalue Var 0x56463c9ac7b0 'y' 'int'
|   |-CallExpr 0x56463c9aef70 <line:741:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x56463c9aef58 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x56463c9aef38 <col:3> 'void ()' Function 0x56463c952f00 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x56463c9aefc8 <line:742:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x56463c9aefb0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x56463c9aef90 <col:3> 'void ()' Function 0x56463c952e40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x56463c9af2b0 <line:743:3, col:103> 'int' '='
|   | |-DeclRefExpr 0x56463c9aefe8 <col:3> 'int' lvalue Var 0x56463c9ac8d0 'z' 'int'
|   | `-ConditionalOperator 0x56463c9af280 <col:7, col:103> 'int'
|   |   |-BinaryOperator 0x56463c9af0a8 <col:7, col:25> 'int' '&&'
|   |   | |-ImplicitCastExpr 0x56463c9af060 <col:7> 'int' <IntegralCast>
|   |   | | `-ImplicitCastExpr 0x56463c9af048 <col:7> '_Bool' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x56463c9af008 <col:7> '_Bool' lvalue Var 0x56463c9acfc0 'z$w_buff0_used' '_Bool'
|   |   | `-ImplicitCastExpr 0x56463c9af090 <col:25> 'int' <IntegralCast>
|   |   |   `-ImplicitCastExpr 0x56463c9af078 <col:25> '_Bool' <LValueToRValue>
|   |   |     `-DeclRefExpr 0x56463c9af028 <col:25> '_Bool' lvalue Var 0x56463c9acb78 'z$r_buff0_thd2' '_Bool'
|   |   |-ImplicitCastExpr 0x56463c9af268 <col:42> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x56463c9af0c8 <col:42> 'int' lvalue Var 0x56463c9acf48 'z$w_buff0' 'int'
|   |   `-ParenExpr 0x56463c9af248 <col:54, col:103> 'int'
|   |     `-ConditionalOperator 0x56463c9af218 <col:55, col:102> 'int'
|   |       |-BinaryOperator 0x56463c9af188 <col:55, col:73> 'int' '&&'
|   |       | |-ImplicitCastExpr 0x56463c9af140 <col:55> 'int' <IntegralCast>
|   |       | | `-ImplicitCastExpr 0x56463c9af128 <col:55> '_Bool' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x56463c9af0e8 <col:55> '_Bool' lvalue Var 0x56463c9ad0b8 'z$w_buff1_used' '_Bool'
|   |       | `-ImplicitCastExpr 0x56463c9af170 <col:73> 'int' <IntegralCast>
|   |       |   `-ImplicitCastExpr 0x56463c9af158 <col:73> '_Bool' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x56463c9af108 <col:73> '_Bool' lvalue Var 0x56463c9acd58 'z$r_buff1_thd2' '_Bool'
|   |       |-ImplicitCastExpr 0x56463c9af1e8 <col:90> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x56463c9af1a8 <col:90> 'int' lvalue Var 0x56463c9ad040 'z$w_buff1' 'int'
|   |       `-ImplicitCastExpr 0x56463c9af200 <col:102> 'int' <LValueToRValue>
|   |         `-DeclRefExpr 0x56463c9af1c8 <col:102> 'int' lvalue Var 0x56463c9ac8d0 'z' 'int'
|   |-BinaryOperator 0x56463c9af4b8 <line:744:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x56463c9af2d0 <col:3> '_Bool' lvalue Var 0x56463c9acfc0 'z$w_buff0_used' '_Bool'
|   | `-ImplicitCastExpr 0x56463c9af4a0 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x56463c9af470 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x56463c9af390 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x56463c9af348 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x56463c9af330 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x56463c9af2f0 <col:20> '_Bool' lvalue Var 0x56463c9acfc0 'z$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x56463c9af378 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x56463c9af360 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x56463c9af310 <col:38> '_Bool' lvalue Var 0x56463c9acb78 'z$r_buff0_thd2' '_Bool'
|   |     |-ImplicitCastExpr 0x56463c9af428 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x56463c9af3e0 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x56463c9af3b0 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x56463c9af458 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x56463c9af440 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x56463c9af408 <col:66> '_Bool' lvalue Var 0x56463c9acfc0 'z$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x56463c9af7a0 <line:745:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x56463c9af4d8 <col:3> '_Bool' lvalue Var 0x56463c9ad0b8 'z$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x56463c9af788 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x56463c9af758 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x56463c9af678 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x56463c9af598 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x56463c9af550 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x56463c9af538 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x56463c9af4f8 <col:20> '_Bool' lvalue Var 0x56463c9acfc0 'z$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x56463c9af580 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x56463c9af568 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x56463c9af518 <col:38> '_Bool' lvalue Var 0x56463c9acb78 'z$r_buff0_thd2' '_Bool'
|   |     | `-BinaryOperator 0x56463c9af658 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x56463c9af610 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x56463c9af5f8 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x56463c9af5b8 <col:56> '_Bool' lvalue Var 0x56463c9ad0b8 'z$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x56463c9af640 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x56463c9af628 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x56463c9af5d8 <col:74> '_Bool' lvalue Var 0x56463c9acd58 'z$r_buff1_thd2' '_Bool'
|   |     |-ImplicitCastExpr 0x56463c9af710 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x56463c9af6c8 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x56463c9af698 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x56463c9af740 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x56463c9af728 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x56463c9af6f0 <col:102> '_Bool' lvalue Var 0x56463c9ad0b8 'z$w_buff1_used' '_Bool'
|   |-BinaryOperator 0x56463c9af9a8 <line:746:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x56463c9af7c0 <col:3> '_Bool' lvalue Var 0x56463c9acb78 'z$r_buff0_thd2' '_Bool'
|   | `-ImplicitCastExpr 0x56463c9af990 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x56463c9af960 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x56463c9af880 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x56463c9af838 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x56463c9af820 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x56463c9af7e0 <col:20> '_Bool' lvalue Var 0x56463c9acfc0 'z$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x56463c9af868 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x56463c9af850 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x56463c9af800 <col:38> '_Bool' lvalue Var 0x56463c9acb78 'z$r_buff0_thd2' '_Bool'
|   |     |-ImplicitCastExpr 0x56463c9af918 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x56463c9af8d0 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x56463c9af8a0 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x56463c9af948 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x56463c9af930 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x56463c9af8f8 <col:66> '_Bool' lvalue Var 0x56463c9acb78 'z$r_buff0_thd2' '_Bool'
|   |-BinaryOperator 0x56463c9afca8 <line:747:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x56463c9af9c8 <col:3> '_Bool' lvalue Var 0x56463c9acd58 'z$r_buff1_thd2' '_Bool'
|   | `-ImplicitCastExpr 0x56463c9afc90 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x56463c9afc60 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x56463c9afb80 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x56463c9afa88 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x56463c9afa40 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x56463c9afa28 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x56463c9af9e8 <col:20> '_Bool' lvalue Var 0x56463c9acfc0 'z$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x56463c9afa70 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x56463c9afa58 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x56463c9afa08 <col:38> '_Bool' lvalue Var 0x56463c9acb78 'z$r_buff0_thd2' '_Bool'
|   |     | `-BinaryOperator 0x56463c9afb60 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x56463c9afb00 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x56463c9afae8 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x56463c9afaa8 <col:56> '_Bool' lvalue Var 0x56463c9ad0b8 'z$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x56463c9afb48 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x56463c9afb30 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x56463c9afac8 <col:74> '_Bool' lvalue Var 0x56463c9acd58 'z$r_buff1_thd2' '_Bool'
|   |     |-ImplicitCastExpr 0x56463c9afc18 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x56463c9afbd0 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x56463c9afba0 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x56463c9afc48 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x56463c9afc30 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x56463c9afbf8 <col:102> '_Bool' lvalue Var 0x56463c9acd58 'z$r_buff1_thd2' '_Bool'
|   |-CallExpr 0x56463c9afd00 <line:748:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x56463c9afce8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x56463c9afcc8 <col:3> 'void ()' Function 0x56463c952f00 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x56463c9afd58 <line:749:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x56463c9afd40 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x56463c9afd20 <col:3> 'void ()' Function 0x56463c952e40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x56463c9afe10 <line:750:3, col:41> 'int' '='
|   | |-DeclRefExpr 0x56463c9afd78 <col:3> 'int' lvalue Var 0x56463c9ac120 '__unbuffered_cnt' 'int'
|   | `-BinaryOperator 0x56463c9afdf0 <col:22, col:41> 'int' '+'
|   |   |-ImplicitCastExpr 0x56463c9afdd8 <col:22> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x56463c9afd98 <col:22> 'int' lvalue Var 0x56463c9ac120 '__unbuffered_cnt' 'int'
|   |   `-IntegerLiteral 0x56463c9afdb8 <col:41> 'int' 1
|   |-CallExpr 0x56463c9afe68 <line:751:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x56463c9afe50 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x56463c9afe30 <col:3> 'void ()' Function 0x56463c952f00 '__VERIFIER_atomic_end' 'void ()'
|   `-ReturnStmt 0x56463c9afee0 <line:752:3, col:36>
|     `-CallExpr 0x56463c9afec0 <col:10, col:36> 'void *'
|       `-ImplicitCastExpr 0x56463c9afea8 <col:10> 'void *(*)(void)' <FunctionToPointerDecay>
|         `-DeclRefExpr 0x56463c9afe88 <col:10> 'void *(void)' Function 0x56463c952958 '__VERIFIER_nondet_pointer' 'void *(void)'
|-FunctionDecl 0x56463c9b0038 prev 0x56463c9abda0 <line:754:1, line:786:1> line:754:8 used P2 'void *(void *)'
| |-ParmVarDecl 0x56463c9affa0 <col:11, col:17> col:17 arg 'void *'
| `-CompoundStmt 0x56463c9b3c30 <line:755:1, line:786:1>
|   |-CallExpr 0x56463c9b0118 <line:756:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x56463c9b0100 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x56463c9b00e0 <col:3> 'void ()' Function 0x56463c952e40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x56463c9b0178 <line:757:3, col:7> 'int' '='
|   | |-DeclRefExpr 0x56463c9b0138 <col:3> 'int' lvalue Var 0x56463c9ac7b0 'y' 'int'
|   | `-IntegerLiteral 0x56463c9b0158 <col:7> 'int' 1
|   |-CallExpr 0x56463c9b01d0 <line:758:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x56463c9b01b8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x56463c9b0198 <col:3> 'void ()' Function 0x56463c952f00 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x56463c9b0228 <line:759:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x56463c9b0210 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x56463c9b01f0 <col:3> 'void ()' Function 0x56463c952e40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x56463c9b02d8 <line:760:3, col:45> '_Bool' '='
|   | |-DeclRefExpr 0x56463c9b0248 <col:3> '_Bool' lvalue Var 0x56463c9ad130 'weak$$choice0' '_Bool'
|   | `-ImplicitCastExpr 0x56463c9b02c0 <col:19, col:45> '_Bool' <PointerToBoolean>
|   |   `-CallExpr 0x56463c9b02a0 <col:19, col:45> 'void *'
|   |     `-ImplicitCastExpr 0x56463c9b0288 <col:19> 'void *(*)(void)' <FunctionToPointerDecay>
|   |       `-DeclRefExpr 0x56463c9b0268 <col:19> 'void *(void)' Function 0x56463c952958 '__VERIFIER_nondet_pointer' 'void *(void)'
|   |-BinaryOperator 0x56463c9b0388 <line:761:3, col:45> '_Bool' '='
|   | |-DeclRefExpr 0x56463c9b02f8 <col:3> '_Bool' lvalue Var 0x56463c9ad1a8 'weak$$choice2' '_Bool'
|   | `-ImplicitCastExpr 0x56463c9b0370 <col:19, col:45> '_Bool' <PointerToBoolean>
|   |   `-CallExpr 0x56463c9b0350 <col:19, col:45> 'void *'
|   |     `-ImplicitCastExpr 0x56463c9b0338 <col:19> 'void *(*)(void)' <FunctionToPointerDecay>
|   |       `-DeclRefExpr 0x56463c9b0318 <col:19> 'void *(void)' Function 0x56463c952958 '__VERIFIER_nondet_pointer' 'void *(void)'
|   |-BinaryOperator 0x56463c9b0400 <line:762:3, col:21> '_Bool' '='
|   | |-DeclRefExpr 0x56463c9b03a8 <col:3> '_Bool' lvalue Var 0x56463c9ac968 'z$flush_delayed' '_Bool'
|   | `-ImplicitCastExpr 0x56463c9b03e8 <col:21> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x56463c9b03c8 <col:21> '_Bool' lvalue Var 0x56463c9ad1a8 'weak$$choice2' '_Bool'
|   |-BinaryOperator 0x56463c9b0478 <line:763:3, col:15> 'int' '='
|   | |-DeclRefExpr 0x56463c9b0420 <col:3> 'int' lvalue Var 0x56463c9ac9e8 'z$mem_tmp' 'int'
|   | `-ImplicitCastExpr 0x56463c9b0460 <col:15> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x56463c9b0440 <col:15> 'int' lvalue Var 0x56463c9ac8d0 'z' 'int'
|   |-BinaryOperator 0x56463c9b08b0 <line:764:3, col:162> 'int' '='
|   | |-DeclRefExpr 0x56463c9b0498 <col:3> 'int' lvalue Var 0x56463c9ac8d0 'z' 'int'
|   | `-ConditionalOperator 0x56463c9b0880 <col:7, col:162> 'int'
|   |   |-BinaryOperator 0x56463c9b06a8 <col:7, col:84> 'int' '||'
|   |   | |-BinaryOperator 0x56463c9b05c8 <col:7, col:46> 'int' '||'
|   |   | | |-UnaryOperator 0x56463c9b04f0 <col:7, col:8> 'int' prefix '!' cannot overflow
|   |   | | | `-ImplicitCastExpr 0x56463c9b04d8 <col:8> '_Bool' <LValueToRValue>
|   |   | | |   `-DeclRefExpr 0x56463c9b04b8 <col:8> '_Bool' lvalue Var 0x56463c9acfc0 'z$w_buff0_used' '_Bool'
|   |   | | `-BinaryOperator 0x56463c9b05a8 <col:26, col:46> 'int' '&&'
|   |   | |   |-UnaryOperator 0x56463c9b0540 <col:26, col:27> 'int' prefix '!' cannot overflow
|   |   | |   | `-ImplicitCastExpr 0x56463c9b0528 <col:27> '_Bool' <LValueToRValue>
|   |   | |   |   `-DeclRefExpr 0x56463c9b0508 <col:27> '_Bool' lvalue Var 0x56463c9acbf0 'z$r_buff0_thd3' '_Bool'
|   |   | |   `-UnaryOperator 0x56463c9b0590 <col:45, col:46> 'int' prefix '!' cannot overflow
|   |   | |     `-ImplicitCastExpr 0x56463c9b0578 <col:46> '_Bool' <LValueToRValue>
|   |   | |       `-DeclRefExpr 0x56463c9b0558 <col:46> '_Bool' lvalue Var 0x56463c9ad0b8 'z$w_buff1_used' '_Bool'
|   |   | `-BinaryOperator 0x56463c9b0688 <col:64, col:84> 'int' '&&'
|   |   |   |-UnaryOperator 0x56463c9b0620 <col:64, col:65> 'int' prefix '!' cannot overflow
|   |   |   | `-ImplicitCastExpr 0x56463c9b0608 <col:65> '_Bool' <LValueToRValue>
|   |   |   |   `-DeclRefExpr 0x56463c9b05e8 <col:65> '_Bool' lvalue Var 0x56463c9acbf0 'z$r_buff0_thd3' '_Bool'
|   |   |   `-UnaryOperator 0x56463c9b0670 <col:83, col:84> 'int' prefix '!' cannot overflow
|   |   |     `-ImplicitCastExpr 0x56463c9b0658 <col:84> '_Bool' <LValueToRValue>
|   |   |       `-DeclRefExpr 0x56463c9b0638 <col:84> '_Bool' lvalue Var 0x56463c9acdd0 'z$r_buff1_thd3' '_Bool'
|   |   |-ImplicitCastExpr 0x56463c9b0868 <col:101> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x56463c9b06c8 <col:101> 'int' lvalue Var 0x56463c9ac8d0 'z' 'int'
|   |   `-ParenExpr 0x56463c9b0848 <col:105, col:162> 'int'
|   |     `-ConditionalOperator 0x56463c9b0818 <col:106, col:153> 'int'
|   |       |-BinaryOperator 0x56463c9b0788 <col:106, col:124> 'int' '&&'
|   |       | |-ImplicitCastExpr 0x56463c9b0740 <col:106> 'int' <IntegralCast>
|   |       | | `-ImplicitCastExpr 0x56463c9b0728 <col:106> '_Bool' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x56463c9b06e8 <col:106> '_Bool' lvalue Var 0x56463c9acfc0 'z$w_buff0_used' '_Bool'
|   |       | `-ImplicitCastExpr 0x56463c9b0770 <col:124> 'int' <IntegralCast>
|   |       |   `-ImplicitCastExpr 0x56463c9b0758 <col:124> '_Bool' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x56463c9b0708 <col:124> '_Bool' lvalue Var 0x56463c9acbf0 'z$r_buff0_thd3' '_Bool'
|   |       |-ImplicitCastExpr 0x56463c9b07e8 <col:141> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x56463c9b07a8 <col:141> 'int' lvalue Var 0x56463c9acf48 'z$w_buff0' 'int'
|   |       `-ImplicitCastExpr 0x56463c9b0800 <col:153> 'int' <LValueToRValue>
|   |         `-DeclRefExpr 0x56463c9b07c8 <col:153> 'int' lvalue Var 0x56463c9ad040 'z$w_buff1' 'int'
|   |-BinaryOperator 0x56463c9b0de0 <line:765:3, col:208> 'int' '='
|   | |-DeclRefExpr 0x56463c9b08d0 <col:3> 'int' lvalue Var 0x56463c9acf48 'z$w_buff0' 'int'
|   | `-ConditionalOperator 0x56463c9b0db0 <col:15, col:208> 'int'
|   |   |-ImplicitCastExpr 0x56463c9b0d80 <col:15> 'int' <IntegralCast>
|   |   | `-ImplicitCastExpr 0x56463c9b0d68 <col:15> '_Bool' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x56463c9b08f0 <col:15> '_Bool' lvalue Var 0x56463c9ad1a8 'weak$$choice2' '_Bool'
|   |   |-ImplicitCastExpr 0x56463c9b0d98 <col:31> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x56463c9b0910 <col:31> 'int' lvalue Var 0x56463c9acf48 'z$w_buff0' 'int'
|   |   `-ParenExpr 0x56463c9b0d48 <col:43, col:208> 'int'
|   |     `-ConditionalOperator 0x56463c9b0d18 <col:44, col:207> 'int'
|   |       |-BinaryOperator 0x56463c9b0b40 <col:44, col:121> 'int' '||'
|   |       | |-BinaryOperator 0x56463c9b0a40 <col:44, col:83> 'int' '||'
|   |       | | |-UnaryOperator 0x56463c9b0968 <col:44, col:45> 'int' prefix '!' cannot overflow
|   |       | | | `-ImplicitCastExpr 0x56463c9b0950 <col:45> '_Bool' <LValueToRValue>
|   |       | | |   `-DeclRefExpr 0x56463c9b0930 <col:45> '_Bool' lvalue Var 0x56463c9acfc0 'z$w_buff0_used' '_Bool'
|   |       | | `-BinaryOperator 0x56463c9b0a20 <col:63, col:83> 'int' '&&'
|   |       | |   |-UnaryOperator 0x56463c9b09b8 <col:63, col:64> 'int' prefix '!' cannot overflow
|   |       | |   | `-ImplicitCastExpr 0x56463c9b09a0 <col:64> '_Bool' <LValueToRValue>
|   |       | |   |   `-DeclRefExpr 0x56463c9b0980 <col:64> '_Bool' lvalue Var 0x56463c9acbf0 'z$r_buff0_thd3' '_Bool'
|   |       | |   `-UnaryOperator 0x56463c9b0a08 <col:82, col:83> 'int' prefix '!' cannot overflow
|   |       | |     `-ImplicitCastExpr 0x56463c9b09f0 <col:83> '_Bool' <LValueToRValue>
|   |       | |       `-DeclRefExpr 0x56463c9b09d0 <col:83> '_Bool' lvalue Var 0x56463c9ad0b8 'z$w_buff1_used' '_Bool'
|   |       | `-BinaryOperator 0x56463c9b0b00 <col:101, col:121> 'int' '&&'
|   |       |   |-UnaryOperator 0x56463c9b0a98 <col:101, col:102> 'int' prefix '!' cannot overflow
|   |       |   | `-ImplicitCastExpr 0x56463c9b0a80 <col:102> '_Bool' <LValueToRValue>
|   |       |   |   `-DeclRefExpr 0x56463c9b0a60 <col:102> '_Bool' lvalue Var 0x56463c9acbf0 'z$r_buff0_thd3' '_Bool'
|   |       |   `-UnaryOperator 0x56463c9b0ae8 <col:120, col:121> 'int' prefix '!' cannot overflow
|   |       |     `-ImplicitCastExpr 0x56463c9b0ad0 <col:121> '_Bool' <LValueToRValue>
|   |       |       `-DeclRefExpr 0x56463c9b0ab0 <col:121> '_Bool' lvalue Var 0x56463c9acdd0 'z$r_buff1_thd3' '_Bool'
|   |       |-ImplicitCastExpr 0x56463c9b0d00 <col:138> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x56463c9b0b60 <col:138> 'int' lvalue Var 0x56463c9acf48 'z$w_buff0' 'int'
|   |       `-ParenExpr 0x56463c9b0ce0 <col:150, col:207> 'int'
|   |         `-ConditionalOperator 0x56463c9b0cb0 <col:151, col:198> 'int'
|   |           |-BinaryOperator 0x56463c9b0c20 <col:151, col:169> 'int' '&&'
|   |           | |-ImplicitCastExpr 0x56463c9b0bd8 <col:151> 'int' <IntegralCast>
|   |           | | `-ImplicitCastExpr 0x56463c9b0bc0 <col:151> '_Bool' <LValueToRValue>
|   |           | |   `-DeclRefExpr 0x56463c9b0b80 <col:151> '_Bool' lvalue Var 0x56463c9acfc0 'z$w_buff0_used' '_Bool'
|   |           | `-ImplicitCastExpr 0x56463c9b0c08 <col:169> 'int' <IntegralCast>
|   |           |   `-ImplicitCastExpr 0x56463c9b0bf0 <col:169> '_Bool' <LValueToRValue>
|   |           |     `-DeclRefExpr 0x56463c9b0ba0 <col:169> '_Bool' lvalue Var 0x56463c9acbf0 'z$r_buff0_thd3' '_Bool'
|   |           |-ImplicitCastExpr 0x56463c9b0c80 <col:186> 'int' <LValueToRValue>
|   |           | `-DeclRefExpr 0x56463c9b0c40 <col:186> 'int' lvalue Var 0x56463c9acf48 'z$w_buff0' 'int'
|   |           `-ImplicitCastExpr 0x56463c9b0c98 <col:198> 'int' <LValueToRValue>
|   |             `-DeclRefExpr 0x56463c9b0c60 <col:198> 'int' lvalue Var 0x56463c9acf48 'z$w_buff0' 'int'
|   |-BinaryOperator 0x56463c9b12f0 <line:766:3, col:208> 'int' '='
|   | |-DeclRefExpr 0x56463c9b0e00 <col:3> 'int' lvalue Var 0x56463c9ad040 'z$w_buff1' 'int'
|   | `-ConditionalOperator 0x56463c9b12c0 <col:15, col:208> 'int'
|   |   |-ImplicitCastExpr 0x56463c9b1290 <col:15> 'int' <IntegralCast>
|   |   | `-ImplicitCastExpr 0x56463c9b1278 <col:15> '_Bool' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x56463c9b0e20 <col:15> '_Bool' lvalue Var 0x56463c9ad1a8 'weak$$choice2' '_Bool'
|   |   |-ImplicitCastExpr 0x56463c9b12a8 <col:31> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x56463c9b0e40 <col:31> 'int' lvalue Var 0x56463c9ad040 'z$w_buff1' 'int'
|   |   `-ParenExpr 0x56463c9b1258 <col:43, col:208> 'int'
|   |     `-ConditionalOperator 0x56463c9b1228 <col:44, col:207> 'int'
|   |       |-BinaryOperator 0x56463c9b1050 <col:44, col:121> 'int' '||'
|   |       | |-BinaryOperator 0x56463c9b0f70 <col:44, col:83> 'int' '||'
|   |       | | |-UnaryOperator 0x56463c9b0e98 <col:44, col:45> 'int' prefix '!' cannot overflow
|   |       | | | `-ImplicitCastExpr 0x56463c9b0e80 <col:45> '_Bool' <LValueToRValue>
|   |       | | |   `-DeclRefExpr 0x56463c9b0e60 <col:45> '_Bool' lvalue Var 0x56463c9acfc0 'z$w_buff0_used' '_Bool'
|   |       | | `-BinaryOperator 0x56463c9b0f50 <col:63, col:83> 'int' '&&'
|   |       | |   |-UnaryOperator 0x56463c9b0ee8 <col:63, col:64> 'int' prefix '!' cannot overflow
|   |       | |   | `-ImplicitCastExpr 0x56463c9b0ed0 <col:64> '_Bool' <LValueToRValue>
|   |       | |   |   `-DeclRefExpr 0x56463c9b0eb0 <col:64> '_Bool' lvalue Var 0x56463c9acbf0 'z$r_buff0_thd3' '_Bool'
|   |       | |   `-UnaryOperator 0x56463c9b0f38 <col:82, col:83> 'int' prefix '!' cannot overflow
|   |       | |     `-ImplicitCastExpr 0x56463c9b0f20 <col:83> '_Bool' <LValueToRValue>
|   |       | |       `-DeclRefExpr 0x56463c9b0f00 <col:83> '_Bool' lvalue Var 0x56463c9ad0b8 'z$w_buff1_used' '_Bool'
|   |       | `-BinaryOperator 0x56463c9b1030 <col:101, col:121> 'int' '&&'
|   |       |   |-UnaryOperator 0x56463c9b0fc8 <col:101, col:102> 'int' prefix '!' cannot overflow
|   |       |   | `-ImplicitCastExpr 0x56463c9b0fb0 <col:102> '_Bool' <LValueToRValue>
|   |       |   |   `-DeclRefExpr 0x56463c9b0f90 <col:102> '_Bool' lvalue Var 0x56463c9acbf0 'z$r_buff0_thd3' '_Bool'
|   |       |   `-UnaryOperator 0x56463c9b1018 <col:120, col:121> 'int' prefix '!' cannot overflow
|   |       |     `-ImplicitCastExpr 0x56463c9b1000 <col:121> '_Bool' <LValueToRValue>
|   |       |       `-DeclRefExpr 0x56463c9b0fe0 <col:121> '_Bool' lvalue Var 0x56463c9acdd0 'z$r_buff1_thd3' '_Bool'
|   |       |-ImplicitCastExpr 0x56463c9b1210 <col:138> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x56463c9b1070 <col:138> 'int' lvalue Var 0x56463c9ad040 'z$w_buff1' 'int'
|   |       `-ParenExpr 0x56463c9b11f0 <col:150, col:207> 'int'
|   |         `-ConditionalOperator 0x56463c9b11c0 <col:151, col:198> 'int'
|   |           |-BinaryOperator 0x56463c9b1130 <col:151, col:169> 'int' '&&'
|   |           | |-ImplicitCastExpr 0x56463c9b10e8 <col:151> 'int' <IntegralCast>
|   |           | | `-ImplicitCastExpr 0x56463c9b10d0 <col:151> '_Bool' <LValueToRValue>
|   |           | |   `-DeclRefExpr 0x56463c9b1090 <col:151> '_Bool' lvalue Var 0x56463c9acfc0 'z$w_buff0_used' '_Bool'
|   |           | `-ImplicitCastExpr 0x56463c9b1118 <col:169> 'int' <IntegralCast>
|   |           |   `-ImplicitCastExpr 0x56463c9b1100 <col:169> '_Bool' <LValueToRValue>
|   |           |     `-DeclRefExpr 0x56463c9b10b0 <col:169> '_Bool' lvalue Var 0x56463c9acbf0 'z$r_buff0_thd3' '_Bool'
|   |           |-ImplicitCastExpr 0x56463c9b1190 <col:186> 'int' <LValueToRValue>
|   |           | `-DeclRefExpr 0x56463c9b1150 <col:186> 'int' lvalue Var 0x56463c9ad040 'z$w_buff1' 'int'
|   |           `-ImplicitCastExpr 0x56463c9b11a8 <col:198> 'int' <LValueToRValue>
|   |             `-DeclRefExpr 0x56463c9b1170 <col:198> 'int' lvalue Var 0x56463c9ad040 'z$w_buff1' 'int'
|   |-BinaryOperator 0x56463c9b1898 <line:767:3, col:227> '_Bool' '='
|   | |-DeclRefExpr 0x56463c9b1310 <col:3> '_Bool' lvalue Var 0x56463c9acfc0 'z$w_buff0_used' '_Bool'
|   | `-ImplicitCastExpr 0x56463c9b1880 <col:20, col:227> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x56463c9b1850 <col:20, col:227> 'int'
|   |     |-ImplicitCastExpr 0x56463c9b1808 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x56463c9b17f0 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x56463c9b1330 <col:20> '_Bool' lvalue Var 0x56463c9ad1a8 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x56463c9b1838 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x56463c9b1820 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x56463c9b1350 <col:36> '_Bool' lvalue Var 0x56463c9acfc0 'z$w_buff0_used' '_Bool'
|   |     `-ParenExpr 0x56463c9b17d0 <col:53, col:227> 'int'
|   |       `-ConditionalOperator 0x56463c9b17a0 <col:54, col:226> 'int'
|   |         |-BinaryOperator 0x56463c9b1560 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x56463c9b1480 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x56463c9b13a8 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x56463c9b1390 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x56463c9b1370 <col:55> '_Bool' lvalue Var 0x56463c9acfc0 'z$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x56463c9b1460 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x56463c9b13f8 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x56463c9b13e0 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x56463c9b13c0 <col:74> '_Bool' lvalue Var 0x56463c9acbf0 'z$r_buff0_thd3' '_Bool'
|   |         | |   `-UnaryOperator 0x56463c9b1448 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x56463c9b1430 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x56463c9b1410 <col:93> '_Bool' lvalue Var 0x56463c9ad0b8 'z$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x56463c9b1540 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x56463c9b14d8 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x56463c9b14c0 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x56463c9b14a0 <col:112> '_Bool' lvalue Var 0x56463c9acbf0 'z$r_buff0_thd3' '_Bool'
|   |         |   `-UnaryOperator 0x56463c9b1528 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x56463c9b1510 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x56463c9b14f0 <col:131> '_Bool' lvalue Var 0x56463c9acdd0 'z$r_buff1_thd3' '_Bool'
|   |         |-ImplicitCastExpr 0x56463c9b1788 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x56463c9b1770 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x56463c9b1580 <col:148> '_Bool' lvalue Var 0x56463c9acfc0 'z$w_buff0_used' '_Bool'
|   |         `-ParenExpr 0x56463c9b1750 <col:165, col:226> 'int'
|   |           `-ConditionalOperator 0x56463c9b1720 <col:166, col:212> 'int'
|   |             |-BinaryOperator 0x56463c9b1640 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x56463c9b15f8 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x56463c9b15e0 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x56463c9b15a0 <col:166> '_Bool' lvalue Var 0x56463c9acfc0 'z$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x56463c9b1628 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x56463c9b1610 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x56463c9b15c0 <col:184> '_Bool' lvalue Var 0x56463c9acbf0 'z$r_buff0_thd3' '_Bool'
|   |             |-ImplicitCastExpr 0x56463c9b16d8 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x56463c9b1690 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x56463c9b1660 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x56463c9b1708 <col:212> 'int' <IntegralCast>
|   |               `-ImplicitCastExpr 0x56463c9b16f0 <col:212> '_Bool' <LValueToRValue>
|   |                 `-DeclRefExpr 0x56463c9b16b8 <col:212> '_Bool' lvalue Var 0x56463c9acfc0 'z$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x56463c9b1e88 <line:768:3, col:221> '_Bool' '='
|   | |-DeclRefExpr 0x56463c9b18b8 <col:3> '_Bool' lvalue Var 0x56463c9ad0b8 'z$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x56463c9b1e70 <col:20, col:221> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x56463c9b1e40 <col:20, col:221> 'int'
|   |     |-ImplicitCastExpr 0x56463c9b1df8 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x56463c9b1de0 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x56463c9b18d8 <col:20> '_Bool' lvalue Var 0x56463c9ad1a8 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x56463c9b1e28 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x56463c9b1e10 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x56463c9b18f8 <col:36> '_Bool' lvalue Var 0x56463c9ad0b8 'z$w_buff1_used' '_Bool'
|   |     `-ParenExpr 0x56463c9b1dc0 <col:53, col:221> 'int'
|   |       `-ConditionalOperator 0x56463c9b1d90 <col:54, col:220> 'int'
|   |         |-BinaryOperator 0x56463c9b1b08 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x56463c9b1a28 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x56463c9b1950 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x56463c9b1938 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x56463c9b1918 <col:55> '_Bool' lvalue Var 0x56463c9acfc0 'z$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x56463c9b1a08 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x56463c9b19a0 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x56463c9b1988 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x56463c9b1968 <col:74> '_Bool' lvalue Var 0x56463c9acbf0 'z$r_buff0_thd3' '_Bool'
|   |         | |   `-UnaryOperator 0x56463c9b19f0 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x56463c9b19d8 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x56463c9b19b8 <col:93> '_Bool' lvalue Var 0x56463c9ad0b8 'z$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x56463c9b1ae8 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x56463c9b1a80 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x56463c9b1a68 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x56463c9b1a48 <col:112> '_Bool' lvalue Var 0x56463c9acbf0 'z$r_buff0_thd3' '_Bool'
|   |         |   `-UnaryOperator 0x56463c9b1ad0 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x56463c9b1ab8 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x56463c9b1a98 <col:131> '_Bool' lvalue Var 0x56463c9acdd0 'z$r_buff1_thd3' '_Bool'
|   |         |-ImplicitCastExpr 0x56463c9b1d78 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x56463c9b1d60 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x56463c9b1b50 <col:148> '_Bool' lvalue Var 0x56463c9ad0b8 'z$w_buff1_used' '_Bool'
|   |         `-ParenExpr 0x56463c9b1d40 <col:165, col:220> 'int'
|   |           `-ConditionalOperator 0x56463c9b1d10 <col:166, col:219> 'int'
|   |             |-BinaryOperator 0x56463c9b1c10 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x56463c9b1bc8 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x56463c9b1bb0 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x56463c9b1b70 <col:166> '_Bool' lvalue Var 0x56463c9acfc0 'z$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x56463c9b1bf8 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x56463c9b1be0 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x56463c9b1b90 <col:184> '_Bool' lvalue Var 0x56463c9acbf0 'z$r_buff0_thd3' '_Bool'
|   |             |-ImplicitCastExpr 0x56463c9b1ce0 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x56463c9b1c60 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x56463c9b1c30 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x56463c9b1cf8 <col:212, col:219> 'int' <IntegralCast>
|   |               `-CStyleCastExpr 0x56463c9b1cb8 <col:212, col:219> '_Bool' <IntegralToBoolean>
|   |                 `-IntegerLiteral 0x56463c9b1c88 <col:219> 'int' 0
|   |-BinaryOperator 0x56463c9b2430 <line:769:3, col:227> '_Bool' '='
|   | |-DeclRefExpr 0x56463c9b1ea8 <col:3> '_Bool' lvalue Var 0x56463c9acbf0 'z$r_buff0_thd3' '_Bool'
|   | `-ImplicitCastExpr 0x56463c9b2418 <col:20, col:227> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x56463c9b23e8 <col:20, col:227> 'int'
|   |     |-ImplicitCastExpr 0x56463c9b23a0 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x56463c9b2388 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x56463c9b1ec8 <col:20> '_Bool' lvalue Var 0x56463c9ad1a8 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x56463c9b23d0 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x56463c9b23b8 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x56463c9b1ee8 <col:36> '_Bool' lvalue Var 0x56463c9acbf0 'z$r_buff0_thd3' '_Bool'
|   |     `-ParenExpr 0x56463c9b2368 <col:53, col:227> 'int'
|   |       `-ConditionalOperator 0x56463c9b2338 <col:54, col:226> 'int'
|   |         |-BinaryOperator 0x56463c9b20f8 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x56463c9b2018 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x56463c9b1f40 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x56463c9b1f28 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x56463c9b1f08 <col:55> '_Bool' lvalue Var 0x56463c9acfc0 'z$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x56463c9b1ff8 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x56463c9b1f90 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x56463c9b1f78 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x56463c9b1f58 <col:74> '_Bool' lvalue Var 0x56463c9acbf0 'z$r_buff0_thd3' '_Bool'
|   |         | |   `-UnaryOperator 0x56463c9b1fe0 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x56463c9b1fc8 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x56463c9b1fa8 <col:93> '_Bool' lvalue Var 0x56463c9ad0b8 'z$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x56463c9b20d8 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x56463c9b2070 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x56463c9b2058 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x56463c9b2038 <col:112> '_Bool' lvalue Var 0x56463c9acbf0 'z$r_buff0_thd3' '_Bool'
|   |         |   `-UnaryOperator 0x56463c9b20c0 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x56463c9b20a8 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x56463c9b2088 <col:131> '_Bool' lvalue Var 0x56463c9acdd0 'z$r_buff1_thd3' '_Bool'
|   |         |-ImplicitCastExpr 0x56463c9b2320 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x56463c9b2308 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x56463c9b2118 <col:148> '_Bool' lvalue Var 0x56463c9acbf0 'z$r_buff0_thd3' '_Bool'
|   |         `-ParenExpr 0x56463c9b22e8 <col:165, col:226> 'int'
|   |           `-ConditionalOperator 0x56463c9b22b8 <col:166, col:212> 'int'
|   |             |-BinaryOperator 0x56463c9b21d8 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x56463c9b2190 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x56463c9b2178 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x56463c9b2138 <col:166> '_Bool' lvalue Var 0x56463c9acfc0 'z$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x56463c9b21c0 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x56463c9b21a8 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x56463c9b2158 <col:184> '_Bool' lvalue Var 0x56463c9acbf0 'z$r_buff0_thd3' '_Bool'
|   |             |-ImplicitCastExpr 0x56463c9b2270 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x56463c9b2228 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x56463c9b21f8 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x56463c9b22a0 <col:212> 'int' <IntegralCast>
|   |               `-ImplicitCastExpr 0x56463c9b2288 <col:212> '_Bool' <LValueToRValue>
|   |                 `-DeclRefExpr 0x56463c9b2250 <col:212> '_Bool' lvalue Var 0x56463c9acbf0 'z$r_buff0_thd3' '_Bool'
|   |-BinaryOperator 0x56463c9b29f8 <line:770:3, col:221> '_Bool' '='
|   | |-DeclRefExpr 0x56463c9b2450 <col:3> '_Bool' lvalue Var 0x56463c9acdd0 'z$r_buff1_thd3' '_Bool'
|   | `-ImplicitCastExpr 0x56463c9b29e0 <col:20, col:221> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x56463c9b29b0 <col:20, col:221> 'int'
|   |     |-ImplicitCastExpr 0x56463c9b2968 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x56463c9b2950 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x56463c9b2470 <col:20> '_Bool' lvalue Var 0x56463c9ad1a8 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x56463c9b2998 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x56463c9b2980 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x56463c9b2490 <col:36> '_Bool' lvalue Var 0x56463c9acdd0 'z$r_buff1_thd3' '_Bool'
|   |     `-ParenExpr 0x56463c9b2930 <col:53, col:221> 'int'
|   |       `-ConditionalOperator 0x56463c9b2900 <col:54, col:220> 'int'
|   |         |-BinaryOperator 0x56463c9b26a0 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x56463c9b25c0 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x56463c9b24e8 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x56463c9b24d0 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x56463c9b24b0 <col:55> '_Bool' lvalue Var 0x56463c9acfc0 'z$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x56463c9b25a0 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x56463c9b2538 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x56463c9b2520 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x56463c9b2500 <col:74> '_Bool' lvalue Var 0x56463c9acbf0 'z$r_buff0_thd3' '_Bool'
|   |         | |   `-UnaryOperator 0x56463c9b2588 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x56463c9b2570 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x56463c9b2550 <col:93> '_Bool' lvalue Var 0x56463c9ad0b8 'z$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x56463c9b2680 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x56463c9b2618 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x56463c9b2600 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x56463c9b25e0 <col:112> '_Bool' lvalue Var 0x56463c9acbf0 'z$r_buff0_thd3' '_Bool'
|   |         |   `-UnaryOperator 0x56463c9b2668 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x56463c9b2650 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x56463c9b2630 <col:131> '_Bool' lvalue Var 0x56463c9acdd0 'z$r_buff1_thd3' '_Bool'
|   |         |-ImplicitCastExpr 0x56463c9b28e8 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x56463c9b28d0 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x56463c9b26c0 <col:148> '_Bool' lvalue Var 0x56463c9acdd0 'z$r_buff1_thd3' '_Bool'
|   |         `-ParenExpr 0x56463c9b28b0 <col:165, col:220> 'int'
|   |           `-ConditionalOperator 0x56463c9b2880 <col:166, col:219> 'int'
|   |             |-BinaryOperator 0x56463c9b2780 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x56463c9b2738 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x56463c9b2720 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x56463c9b26e0 <col:166> '_Bool' lvalue Var 0x56463c9acfc0 'z$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x56463c9b2768 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x56463c9b2750 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x56463c9b2700 <col:184> '_Bool' lvalue Var 0x56463c9acbf0 'z$r_buff0_thd3' '_Bool'
|   |             |-ImplicitCastExpr 0x56463c9b2850 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x56463c9b27d0 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x56463c9b27a0 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x56463c9b2868 <col:212, col:219> 'int' <IntegralCast>
|   |               `-CStyleCastExpr 0x56463c9b2828 <col:212, col:219> '_Bool' <IntegralToBoolean>
|   |                 `-IntegerLiteral 0x56463c9b27f8 <col:219> 'int' 0
|   |-BinaryOperator 0x56463c9b2a70 <line:771:3, col:25> 'int' '='
|   | |-DeclRefExpr 0x56463c9b2a18 <col:3> 'int' lvalue Var 0x56463c9ac480 '__unbuffered_p2_EAX' 'int'
|   | `-ImplicitCastExpr 0x56463c9b2a58 <col:25> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x56463c9b2a38 <col:25> 'int' lvalue Var 0x56463c9ac8d0 'z' 'int'
|   |-BinaryOperator 0x56463c9b2bc0 <line:772:3, col:37> 'int' '='
|   | |-DeclRefExpr 0x56463c9b2a90 <col:3> 'int' lvalue Var 0x56463c9ac8d0 'z' 'int'
|   | `-ConditionalOperator 0x56463c9b2b90 <col:7, col:37> 'int'
|   |   |-ImplicitCastExpr 0x56463c9b2b28 <col:7> 'int' <IntegralCast>
|   |   | `-ImplicitCastExpr 0x56463c9b2b10 <col:7> '_Bool' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x56463c9b2ab0 <col:7> '_Bool' lvalue Var 0x56463c9ac968 'z$flush_delayed' '_Bool'
|   |   |-ImplicitCastExpr 0x56463c9b2b60 <col:25> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x56463c9b2ad0 <col:25> 'int' lvalue Var 0x56463c9ac9e8 'z$mem_tmp' 'int'
|   |   `-ImplicitCastExpr 0x56463c9b2b78 <col:37> 'int' <LValueToRValue>
|   |     `-DeclRefExpr 0x56463c9b2af0 <col:37> 'int' lvalue Var 0x56463c9ac8d0 'z' 'int'
|   |-BinaryOperator 0x56463c9b2c58 <line:773:3, col:28> '_Bool' '='
|   | |-DeclRefExpr 0x56463c9b2be0 <col:3> '_Bool' lvalue Var 0x56463c9ac968 'z$flush_delayed' '_Bool'
|   | `-CStyleCastExpr 0x56463c9b2c30 <col:21, col:28> '_Bool' <IntegralToBoolean>
|   |   `-IntegerLiteral 0x56463c9b2c00 <col:28> 'int' 0
|   |-CallExpr 0x56463c9b2cb0 <line:774:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x56463c9b2c98 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x56463c9b2c78 <col:3> 'void ()' Function 0x56463c952f00 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x56463c9b2d08 <line:775:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x56463c9b2cf0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x56463c9b2cd0 <col:3> 'void ()' Function 0x56463c952e40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x56463c9b2ff0 <line:776:3, col:103> 'int' '='
|   | |-DeclRefExpr 0x56463c9b2d28 <col:3> 'int' lvalue Var 0x56463c9ac8d0 'z' 'int'
|   | `-ConditionalOperator 0x56463c9b2fc0 <col:7, col:103> 'int'
|   |   |-BinaryOperator 0x56463c9b2de8 <col:7, col:25> 'int' '&&'
|   |   | |-ImplicitCastExpr 0x56463c9b2da0 <col:7> 'int' <IntegralCast>
|   |   | | `-ImplicitCastExpr 0x56463c9b2d88 <col:7> '_Bool' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x56463c9b2d48 <col:7> '_Bool' lvalue Var 0x56463c9acfc0 'z$w_buff0_used' '_Bool'
|   |   | `-ImplicitCastExpr 0x56463c9b2dd0 <col:25> 'int' <IntegralCast>
|   |   |   `-ImplicitCastExpr 0x56463c9b2db8 <col:25> '_Bool' <LValueToRValue>
|   |   |     `-DeclRefExpr 0x56463c9b2d68 <col:25> '_Bool' lvalue Var 0x56463c9acbf0 'z$r_buff0_thd3' '_Bool'
|   |   |-ImplicitCastExpr 0x56463c9b2fa8 <col:42> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x56463c9b2e08 <col:42> 'int' lvalue Var 0x56463c9acf48 'z$w_buff0' 'int'
|   |   `-ParenExpr 0x56463c9b2f88 <col:54, col:103> 'int'
|   |     `-ConditionalOperator 0x56463c9b2f58 <col:55, col:102> 'int'
|   |       |-BinaryOperator 0x56463c9b2ec8 <col:55, col:73> 'int' '&&'
|   |       | |-ImplicitCastExpr 0x56463c9b2e80 <col:55> 'int' <IntegralCast>
|   |       | | `-ImplicitCastExpr 0x56463c9b2e68 <col:55> '_Bool' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x56463c9b2e28 <col:55> '_Bool' lvalue Var 0x56463c9ad0b8 'z$w_buff1_used' '_Bool'
|   |       | `-ImplicitCastExpr 0x56463c9b2eb0 <col:73> 'int' <IntegralCast>
|   |       |   `-ImplicitCastExpr 0x56463c9b2e98 <col:73> '_Bool' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x56463c9b2e48 <col:73> '_Bool' lvalue Var 0x56463c9acdd0 'z$r_buff1_thd3' '_Bool'
|   |       |-ImplicitCastExpr 0x56463c9b2f28 <col:90> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x56463c9b2ee8 <col:90> 'int' lvalue Var 0x56463c9ad040 'z$w_buff1' 'int'
|   |       `-ImplicitCastExpr 0x56463c9b2f40 <col:102> 'int' <LValueToRValue>
|   |         `-DeclRefExpr 0x56463c9b2f08 <col:102> 'int' lvalue Var 0x56463c9ac8d0 'z' 'int'
|   |-BinaryOperator 0x56463c9b31f8 <line:777:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x56463c9b3010 <col:3> '_Bool' lvalue Var 0x56463c9acfc0 'z$w_buff0_used' '_Bool'
|   | `-ImplicitCastExpr 0x56463c9b31e0 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x56463c9b31b0 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x56463c9b30d0 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x56463c9b3088 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x56463c9b3070 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x56463c9b3030 <col:20> '_Bool' lvalue Var 0x56463c9acfc0 'z$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x56463c9b30b8 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x56463c9b30a0 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x56463c9b3050 <col:38> '_Bool' lvalue Var 0x56463c9acbf0 'z$r_buff0_thd3' '_Bool'
|   |     |-ImplicitCastExpr 0x56463c9b3168 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x56463c9b3120 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x56463c9b30f0 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x56463c9b3198 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x56463c9b3180 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x56463c9b3148 <col:66> '_Bool' lvalue Var 0x56463c9acfc0 'z$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x56463c9b34e0 <line:778:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x56463c9b3218 <col:3> '_Bool' lvalue Var 0x56463c9ad0b8 'z$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x56463c9b34c8 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x56463c9b3498 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x56463c9b33b8 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x56463c9b32d8 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x56463c9b3290 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x56463c9b3278 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x56463c9b3238 <col:20> '_Bool' lvalue Var 0x56463c9acfc0 'z$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x56463c9b32c0 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x56463c9b32a8 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x56463c9b3258 <col:38> '_Bool' lvalue Var 0x56463c9acbf0 'z$r_buff0_thd3' '_Bool'
|   |     | `-BinaryOperator 0x56463c9b3398 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x56463c9b3350 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x56463c9b3338 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x56463c9b32f8 <col:56> '_Bool' lvalue Var 0x56463c9ad0b8 'z$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x56463c9b3380 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x56463c9b3368 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x56463c9b3318 <col:74> '_Bool' lvalue Var 0x56463c9acdd0 'z$r_buff1_thd3' '_Bool'
|   |     |-ImplicitCastExpr 0x56463c9b3450 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x56463c9b3408 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x56463c9b33d8 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x56463c9b3480 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x56463c9b3468 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x56463c9b3430 <col:102> '_Bool' lvalue Var 0x56463c9ad0b8 'z$w_buff1_used' '_Bool'
|   |-BinaryOperator 0x56463c9b36e8 <line:779:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x56463c9b3500 <col:3> '_Bool' lvalue Var 0x56463c9acbf0 'z$r_buff0_thd3' '_Bool'
|   | `-ImplicitCastExpr 0x56463c9b36d0 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x56463c9b36a0 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x56463c9b35c0 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x56463c9b3578 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x56463c9b3560 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x56463c9b3520 <col:20> '_Bool' lvalue Var 0x56463c9acfc0 'z$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x56463c9b35a8 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x56463c9b3590 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x56463c9b3540 <col:38> '_Bool' lvalue Var 0x56463c9acbf0 'z$r_buff0_thd3' '_Bool'
|   |     |-ImplicitCastExpr 0x56463c9b3658 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x56463c9b3610 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x56463c9b35e0 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x56463c9b3688 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x56463c9b3670 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x56463c9b3638 <col:66> '_Bool' lvalue Var 0x56463c9acbf0 'z$r_buff0_thd3' '_Bool'
|   |-BinaryOperator 0x56463c9b39d0 <line:780:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x56463c9b3708 <col:3> '_Bool' lvalue Var 0x56463c9acdd0 'z$r_buff1_thd3' '_Bool'
|   | `-ImplicitCastExpr 0x56463c9b39b8 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x56463c9b3988 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x56463c9b38a8 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x56463c9b37c8 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x56463c9b3780 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x56463c9b3768 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x56463c9b3728 <col:20> '_Bool' lvalue Var 0x56463c9acfc0 'z$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x56463c9b37b0 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x56463c9b3798 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x56463c9b3748 <col:38> '_Bool' lvalue Var 0x56463c9acbf0 'z$r_buff0_thd3' '_Bool'
|   |     | `-BinaryOperator 0x56463c9b3888 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x56463c9b3840 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x56463c9b3828 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x56463c9b37e8 <col:56> '_Bool' lvalue Var 0x56463c9ad0b8 'z$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x56463c9b3870 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x56463c9b3858 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x56463c9b3808 <col:74> '_Bool' lvalue Var 0x56463c9acdd0 'z$r_buff1_thd3' '_Bool'
|   |     |-ImplicitCastExpr 0x56463c9b3940 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x56463c9b38f8 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x56463c9b38c8 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x56463c9b3970 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x56463c9b3958 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x56463c9b3920 <col:102> '_Bool' lvalue Var 0x56463c9acdd0 'z$r_buff1_thd3' '_Bool'
|   |-CallExpr 0x56463c9b3a28 <line:781:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x56463c9b3a10 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x56463c9b39f0 <col:3> 'void ()' Function 0x56463c952f00 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x56463c9b3a80 <line:782:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x56463c9b3a68 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x56463c9b3a48 <col:3> 'void ()' Function 0x56463c952e40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x56463c9b3b38 <line:783:3, col:41> 'int' '='
|   | |-DeclRefExpr 0x56463c9b3aa0 <col:3> 'int' lvalue Var 0x56463c9ac120 '__unbuffered_cnt' 'int'
|   | `-BinaryOperator 0x56463c9b3b18 <col:22, col:41> 'int' '+'
|   |   |-ImplicitCastExpr 0x56463c9b3b00 <col:22> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x56463c9b3ac0 <col:22> 'int' lvalue Var 0x56463c9ac120 '__unbuffered_cnt' 'int'
|   |   `-IntegerLiteral 0x56463c9b3ae0 <col:41> 'int' 1
|   |-CallExpr 0x56463c9b3ba8 <line:784:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x56463c9b3b90 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x56463c9b3b70 <col:3> 'void ()' Function 0x56463c952f00 '__VERIFIER_atomic_end' 'void ()'
|   `-ReturnStmt 0x56463c9b3c20 <line:785:3, col:36>
|     `-CallExpr 0x56463c9b3c00 <col:10, col:36> 'void *'
|       `-ImplicitCastExpr 0x56463c9b3be8 <col:10> 'void *(*)(void)' <FunctionToPointerDecay>
|         `-DeclRefExpr 0x56463c9b3bc8 <col:10> 'void *(void)' Function 0x56463c952958 '__VERIFIER_nondet_pointer' 'void *(void)'
|-FunctionDecl 0x56463c9b3d50 prev 0x56463c9abe68 <line:787:1, line:789:1> line:787:6 fence 'void ()'
| `-CompoundStmt 0x56463c9b3df0 <line:788:1, line:789:1>
|-FunctionDecl 0x56463c9b3e20 prev 0x56463c9abf28 <line:790:1, line:792:1> line:790:6 isync 'void ()'
| `-CompoundStmt 0x56463c9b3ec0 <line:791:1, line:792:1>
|-FunctionDecl 0x56463c9b3ef0 prev 0x56463c9abfe8 <line:793:1, line:795:1> line:793:6 lwfence 'void ()'
| `-CompoundStmt 0x56463c9b3f90 <line:794:1, line:795:1>
`-FunctionDecl 0x56463c9b3ff8 <line:796:1, line:820:1> line:796:5 main 'int ()'
  `-CompoundStmt 0x56463c9b5c50 <line:797:1, line:820:1>
    |-DeclStmt 0x56463c9b4110 <line:798:3, col:18>
    | `-VarDecl 0x56463c9b40a8 <col:3, col:13> col:13 used t1581 'pthread_t':'unsigned long'
    |-CallExpr 0x56463c9b4318 <line:799:3, col:54> 'int'
    | |-ImplicitCastExpr 0x56463c9b4300 <col:3> 'int (*)(pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x56463c9b4128 <col:3> 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' Function 0x56463c993488 'pthread_create' 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)'
    | |-UnaryOperator 0x56463c9b4168 <col:18, col:19> 'pthread_t *' prefix '&' cannot overflow
    | | `-DeclRefExpr 0x56463c9b4148 <col:19> 'pthread_t':'unsigned long' lvalue Var 0x56463c9b40a8 't1581' 'pthread_t':'unsigned long'
    | |-ImplicitCastExpr 0x56463c9b4358 <col:26, col:36> 'const pthread_attr_t *' <NullToPointer>
    | | `-ParenExpr 0x56463c9b41e0 <col:26, col:36> 'void *'
    | |   `-CStyleCastExpr 0x56463c9b41b8 <col:27, col:35> 'void *' <NullToPointer>
    | |     `-IntegerLiteral 0x56463c9b4180 <col:35> 'int' 0
    | |-ImplicitCastExpr 0x56463c9b4370 <col:39> 'void *(*)(void *)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x56463c9b4200 <col:39> 'void *(void *)' Function 0x56463c9ad2c0 'P0' 'void *(void *)'
    | `-ParenExpr 0x56463c9b4280 <col:43, col:53> 'void *'
    |   `-CStyleCastExpr 0x56463c9b4258 <col:44, col:52> 'void *' <NullToPointer>
    |     `-IntegerLiteral 0x56463c9b4220 <col:52> 'int' 0
    |-DeclStmt 0x56463c9b4400 <line:800:3, col:18>
    | `-VarDecl 0x56463c9b4398 <col:3, col:13> col:13 used t1582 'pthread_t':'unsigned long'
    |-CallExpr 0x56463c9b45a8 <line:801:3, col:54> 'int'
    | |-ImplicitCastExpr 0x56463c9b4590 <col:3> 'int (*)(pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x56463c9b4418 <col:3> 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' Function 0x56463c993488 'pthread_create' 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)'
    | |-UnaryOperator 0x56463c9b4458 <col:18, col:19> 'pthread_t *' prefix '&' cannot overflow
    | | `-DeclRefExpr 0x56463c9b4438 <col:19> 'pthread_t':'unsigned long' lvalue Var 0x56463c9b4398 't1582' 'pthread_t':'unsigned long'
    | |-ImplicitCastExpr 0x56463c9b45e8 <col:26, col:36> 'const pthread_attr_t *' <NullToPointer>
    | | `-ParenExpr 0x56463c9b44d0 <col:26, col:36> 'void *'
    | |   `-CStyleCastExpr 0x56463c9b44a8 <col:27, col:35> 'void *' <NullToPointer>
    | |     `-IntegerLiteral 0x56463c9b4470 <col:35> 'int' 0
    | |-ImplicitCastExpr 0x56463c9b4600 <col:39> 'void *(*)(void *)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x56463c9b44f0 <col:39> 'void *(void *)' Function 0x56463c9aecb0 'P1' 'void *(void *)'
    | `-ParenExpr 0x56463c9b4570 <col:43, col:53> 'void *'
    |   `-CStyleCastExpr 0x56463c9b4548 <col:44, col:52> 'void *' <NullToPointer>
    |     `-IntegerLiteral 0x56463c9b4510 <col:52> 'int' 0
    |-DeclStmt 0x56463c9b4690 <line:802:3, col:18>
    | `-VarDecl 0x56463c9b4628 <col:3, col:13> col:13 used t1583 'pthread_t':'unsigned long'
    |-CallExpr 0x56463c9b4838 <line:803:3, col:54> 'int'
    | |-ImplicitCastExpr 0x56463c9b4820 <col:3> 'int (*)(pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x56463c9b46a8 <col:3> 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' Function 0x56463c993488 'pthread_create' 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)'
    | |-UnaryOperator 0x56463c9b46e8 <col:18, col:19> 'pthread_t *' prefix '&' cannot overflow
    | | `-DeclRefExpr 0x56463c9b46c8 <col:19> 'pthread_t':'unsigned long' lvalue Var 0x56463c9b4628 't1583' 'pthread_t':'unsigned long'
    | |-ImplicitCastExpr 0x56463c9b4878 <col:26, col:36> 'const pthread_attr_t *' <NullToPointer>
    | | `-ParenExpr 0x56463c9b4760 <col:26, col:36> 'void *'
    | |   `-CStyleCastExpr 0x56463c9b4738 <col:27, col:35> 'void *' <NullToPointer>
    | |     `-IntegerLiteral 0x56463c9b4700 <col:35> 'int' 0
    | |-ImplicitCastExpr 0x56463c9b4890 <col:39> 'void *(*)(void *)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x56463c9b4780 <col:39> 'void *(void *)' Function 0x56463c9b0038 'P2' 'void *(void *)'
    | `-ParenExpr 0x56463c9b4800 <col:43, col:53> 'void *'
    |   `-CStyleCastExpr 0x56463c9b47d8 <col:44, col:52> 'void *' <NullToPointer>
    |     `-IntegerLiteral 0x56463c9b47a0 <col:52> 'int' 0
    |-CallExpr 0x56463c9b48e0 <line:804:3, col:27> 'void'
    | `-ImplicitCastExpr 0x56463c9b48c8 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x56463c9b48a8 <col:3> 'void ()' Function 0x56463c952e40 '__VERIFIER_atomic_begin' 'void ()'
    |-BinaryOperator 0x56463c9b49b0 <line:805:3, col:41> '_Bool' '='
    | |-DeclRefExpr 0x56463c9b4900 <col:3> '_Bool' lvalue Var 0x56463c9ac518 'main$tmp_guard0' '_Bool'
    | `-ImplicitCastExpr 0x56463c9b4998 <col:21, col:41> '_Bool' <IntegralToBoolean>
    |   `-BinaryOperator 0x56463c9b4978 <col:21, col:41> 'int' '=='
    |     |-ImplicitCastExpr 0x56463c9b4960 <col:21> 'int' <LValueToRValue>
    |     | `-DeclRefExpr 0x56463c9b4920 <col:21> 'int' lvalue Var 0x56463c9ac120 '__unbuffered_cnt' 'int'
    |     `-IntegerLiteral 0x56463c9b4940 <col:41> 'int' 3
    |-CallExpr 0x56463c9b4a08 <line:806:3, col:25> 'void'
    | `-ImplicitCastExpr 0x56463c9b49f0 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x56463c9b49d0 <col:3> 'void ()' Function 0x56463c952f00 '__VERIFIER_atomic_end' 'void ()'
    |-CallExpr 0x56463c9b4a80 <line:807:3, col:36> 'void'
    | |-ImplicitCastExpr 0x56463c9b4a68 <col:3> 'void (*)(int)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x56463c9b4a28 <col:3> 'void (int)' Function 0x56463c952790 '__VERIFIER_assume' 'void (int)'
    | `-ImplicitCastExpr 0x56463c9b4ac0 <col:21> 'int' <IntegralCast>
    |   `-ImplicitCastExpr 0x56463c9b4aa8 <col:21> '_Bool' <LValueToRValue>
    |     `-DeclRefExpr 0x56463c9b4a48 <col:21> '_Bool' lvalue Var 0x56463c9ac518 'main$tmp_guard0' '_Bool'
    |-CallExpr 0x56463c9b4b10 <line:808:3, col:27> 'void'
    | `-ImplicitCastExpr 0x56463c9b4af8 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x56463c9b4ad8 <col:3> 'void ()' Function 0x56463c952e40 '__VERIFIER_atomic_begin' 'void ()'
    |-BinaryOperator 0x56463c9b4e08 <line:809:3, col:103> 'int' '='
    | |-DeclRefExpr 0x56463c9b4b30 <col:3> 'int' lvalue Var 0x56463c9ac8d0 'z' 'int'
    | `-ConditionalOperator 0x56463c9b4dd8 <col:7, col:103> 'int'
    |   |-BinaryOperator 0x56463c9b4c00 <col:7, col:25> 'int' '&&'
    |   | |-ImplicitCastExpr 0x56463c9b4bb8 <col:7> 'int' <IntegralCast>
    |   | | `-ImplicitCastExpr 0x56463c9b4ba0 <col:7> '_Bool' <LValueToRValue>
    |   | |   `-DeclRefExpr 0x56463c9b4b50 <col:7> '_Bool' lvalue Var 0x56463c9acfc0 'z$w_buff0_used' '_Bool'
    |   | `-ImplicitCastExpr 0x56463c9b4be8 <col:25> 'int' <IntegralCast>
    |   |   `-ImplicitCastExpr 0x56463c9b4bd0 <col:25> '_Bool' <LValueToRValue>
    |   |     `-DeclRefExpr 0x56463c9b4b80 <col:25> '_Bool' lvalue Var 0x56463c9aca60 'z$r_buff0_thd0' '_Bool'
    |   |-ImplicitCastExpr 0x56463c9b4dc0 <col:42> 'int' <LValueToRValue>
    |   | `-DeclRefExpr 0x56463c9b4c20 <col:42> 'int' lvalue Var 0x56463c9acf48 'z$w_buff0' 'int'
    |   `-ParenExpr 0x56463c9b4da0 <col:54, col:103> 'int'
    |     `-ConditionalOperator 0x56463c9b4d70 <col:55, col:102> 'int'
    |       |-BinaryOperator 0x56463c9b4ce0 <col:55, col:73> 'int' '&&'
    |       | |-ImplicitCastExpr 0x56463c9b4c98 <col:55> 'int' <IntegralCast>
    |       | | `-ImplicitCastExpr 0x56463c9b4c80 <col:55> '_Bool' <LValueToRValue>
    |       | |   `-DeclRefExpr 0x56463c9b4c40 <col:55> '_Bool' lvalue Var 0x56463c9ad0b8 'z$w_buff1_used' '_Bool'
    |       | `-ImplicitCastExpr 0x56463c9b4cc8 <col:73> 'int' <IntegralCast>
    |       |   `-ImplicitCastExpr 0x56463c9b4cb0 <col:73> '_Bool' <LValueToRValue>
    |       |     `-DeclRefExpr 0x56463c9b4c60 <col:73> '_Bool' lvalue Var 0x56463c9acc68 'z$r_buff1_thd0' '_Bool'
    |       |-ImplicitCastExpr 0x56463c9b4d40 <col:90> 'int' <LValueToRValue>
    |       | `-DeclRefExpr 0x56463c9b4d00 <col:90> 'int' lvalue Var 0x56463c9ad040 'z$w_buff1' 'int'
    |       `-ImplicitCastExpr 0x56463c9b4d58 <col:102> 'int' <LValueToRValue>
    |         `-DeclRefExpr 0x56463c9b4d20 <col:102> 'int' lvalue Var 0x56463c9ac8d0 'z' 'int'
    |-BinaryOperator 0x56463c9b5010 <line:810:3, col:66> '_Bool' '='
    | |-DeclRefExpr 0x56463c9b4e28 <col:3> '_Bool' lvalue Var 0x56463c9acfc0 'z$w_buff0_used' '_Bool'
    | `-ImplicitCastExpr 0x56463c9b4ff8 <col:20, col:66> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x56463c9b4fc8 <col:20, col:66> 'int'
    |     |-BinaryOperator 0x56463c9b4ee8 <col:20, col:38> 'int' '&&'
    |     | |-ImplicitCastExpr 0x56463c9b4ea0 <col:20> 'int' <IntegralCast>
    |     | | `-ImplicitCastExpr 0x56463c9b4e88 <col:20> '_Bool' <LValueToRValue>
    |     | |   `-DeclRefExpr 0x56463c9b4e48 <col:20> '_Bool' lvalue Var 0x56463c9acfc0 'z$w_buff0_used' '_Bool'
    |     | `-ImplicitCastExpr 0x56463c9b4ed0 <col:38> 'int' <IntegralCast>
    |     |   `-ImplicitCastExpr 0x56463c9b4eb8 <col:38> '_Bool' <LValueToRValue>
    |     |     `-DeclRefExpr 0x56463c9b4e68 <col:38> '_Bool' lvalue Var 0x56463c9aca60 'z$r_buff0_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x56463c9b4f80 <col:55, col:62> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x56463c9b4f38 <col:55, col:62> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x56463c9b4f08 <col:62> 'int' 0
    |     `-ImplicitCastExpr 0x56463c9b4fb0 <col:66> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x56463c9b4f98 <col:66> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x56463c9b4f60 <col:66> '_Bool' lvalue Var 0x56463c9acfc0 'z$w_buff0_used' '_Bool'
    |-BinaryOperator 0x56463c9b52f8 <line:811:3, col:102> '_Bool' '='
    | |-DeclRefExpr 0x56463c9b5030 <col:3> '_Bool' lvalue Var 0x56463c9ad0b8 'z$w_buff1_used' '_Bool'
    | `-ImplicitCastExpr 0x56463c9b52e0 <col:20, col:102> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x56463c9b52b0 <col:20, col:102> 'int'
    |     |-BinaryOperator 0x56463c9b51d0 <col:20, col:74> 'int' '||'
    |     | |-BinaryOperator 0x56463c9b50f0 <col:20, col:38> 'int' '&&'
    |     | | |-ImplicitCastExpr 0x56463c9b50a8 <col:20> 'int' <IntegralCast>
    |     | | | `-ImplicitCastExpr 0x56463c9b5090 <col:20> '_Bool' <LValueToRValue>
    |     | | |   `-DeclRefExpr 0x56463c9b5050 <col:20> '_Bool' lvalue Var 0x56463c9acfc0 'z$w_buff0_used' '_Bool'
    |     | | `-ImplicitCastExpr 0x56463c9b50d8 <col:38> 'int' <IntegralCast>
    |     | |   `-ImplicitCastExpr 0x56463c9b50c0 <col:38> '_Bool' <LValueToRValue>
    |     | |     `-DeclRefExpr 0x56463c9b5070 <col:38> '_Bool' lvalue Var 0x56463c9aca60 'z$r_buff0_thd0' '_Bool'
    |     | `-BinaryOperator 0x56463c9b51b0 <col:56, col:74> 'int' '&&'
    |     |   |-ImplicitCastExpr 0x56463c9b5168 <col:56> 'int' <IntegralCast>
    |     |   | `-ImplicitCastExpr 0x56463c9b5150 <col:56> '_Bool' <LValueToRValue>
    |     |   |   `-DeclRefExpr 0x56463c9b5110 <col:56> '_Bool' lvalue Var 0x56463c9ad0b8 'z$w_buff1_used' '_Bool'
    |     |   `-ImplicitCastExpr 0x56463c9b5198 <col:74> 'int' <IntegralCast>
    |     |     `-ImplicitCastExpr 0x56463c9b5180 <col:74> '_Bool' <LValueToRValue>
    |     |       `-DeclRefExpr 0x56463c9b5130 <col:74> '_Bool' lvalue Var 0x56463c9acc68 'z$r_buff1_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x56463c9b5268 <col:91, col:98> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x56463c9b5220 <col:91, col:98> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x56463c9b51f0 <col:98> 'int' 0
    |     `-ImplicitCastExpr 0x56463c9b5298 <col:102> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x56463c9b5280 <col:102> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x56463c9b5248 <col:102> '_Bool' lvalue Var 0x56463c9ad0b8 'z$w_buff1_used' '_Bool'
    |-BinaryOperator 0x56463c9b5500 <line:812:3, col:66> '_Bool' '='
    | |-DeclRefExpr 0x56463c9b5318 <col:3> '_Bool' lvalue Var 0x56463c9aca60 'z$r_buff0_thd0' '_Bool'
    | `-ImplicitCastExpr 0x56463c9b54e8 <col:20, col:66> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x56463c9b54b8 <col:20, col:66> 'int'
    |     |-BinaryOperator 0x56463c9b53d8 <col:20, col:38> 'int' '&&'
    |     | |-ImplicitCastExpr 0x56463c9b5390 <col:20> 'int' <IntegralCast>
    |     | | `-ImplicitCastExpr 0x56463c9b5378 <col:20> '_Bool' <LValueToRValue>
    |     | |   `-DeclRefExpr 0x56463c9b5338 <col:20> '_Bool' lvalue Var 0x56463c9acfc0 'z$w_buff0_used' '_Bool'
    |     | `-ImplicitCastExpr 0x56463c9b53c0 <col:38> 'int' <IntegralCast>
    |     |   `-ImplicitCastExpr 0x56463c9b53a8 <col:38> '_Bool' <LValueToRValue>
    |     |     `-DeclRefExpr 0x56463c9b5358 <col:38> '_Bool' lvalue Var 0x56463c9aca60 'z$r_buff0_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x56463c9b5470 <col:55, col:62> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x56463c9b5428 <col:55, col:62> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x56463c9b53f8 <col:62> 'int' 0
    |     `-ImplicitCastExpr 0x56463c9b54a0 <col:66> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x56463c9b5488 <col:66> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x56463c9b5450 <col:66> '_Bool' lvalue Var 0x56463c9aca60 'z$r_buff0_thd0' '_Bool'
    |-BinaryOperator 0x56463c9b57e8 <line:813:3, col:102> '_Bool' '='
    | |-DeclRefExpr 0x56463c9b5520 <col:3> '_Bool' lvalue Var 0x56463c9acc68 'z$r_buff1_thd0' '_Bool'
    | `-ImplicitCastExpr 0x56463c9b57d0 <col:20, col:102> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x56463c9b57a0 <col:20, col:102> 'int'
    |     |-BinaryOperator 0x56463c9b56c0 <col:20, col:74> 'int' '||'
    |     | |-BinaryOperator 0x56463c9b55e0 <col:20, col:38> 'int' '&&'
    |     | | |-ImplicitCastExpr 0x56463c9b5598 <col:20> 'int' <IntegralCast>
    |     | | | `-ImplicitCastExpr 0x56463c9b5580 <col:20> '_Bool' <LValueToRValue>
    |     | | |   `-DeclRefExpr 0x56463c9b5540 <col:20> '_Bool' lvalue Var 0x56463c9acfc0 'z$w_buff0_used' '_Bool'
    |     | | `-ImplicitCastExpr 0x56463c9b55c8 <col:38> 'int' <IntegralCast>
    |     | |   `-ImplicitCastExpr 0x56463c9b55b0 <col:38> '_Bool' <LValueToRValue>
    |     | |     `-DeclRefExpr 0x56463c9b5560 <col:38> '_Bool' lvalue Var 0x56463c9aca60 'z$r_buff0_thd0' '_Bool'
    |     | `-BinaryOperator 0x56463c9b56a0 <col:56, col:74> 'int' '&&'
    |     |   |-ImplicitCastExpr 0x56463c9b5658 <col:56> 'int' <IntegralCast>
    |     |   | `-ImplicitCastExpr 0x56463c9b5640 <col:56> '_Bool' <LValueToRValue>
    |     |   |   `-DeclRefExpr 0x56463c9b5600 <col:56> '_Bool' lvalue Var 0x56463c9ad0b8 'z$w_buff1_used' '_Bool'
    |     |   `-ImplicitCastExpr 0x56463c9b5688 <col:74> 'int' <IntegralCast>
    |     |     `-ImplicitCastExpr 0x56463c9b5670 <col:74> '_Bool' <LValueToRValue>
    |     |       `-DeclRefExpr 0x56463c9b5620 <col:74> '_Bool' lvalue Var 0x56463c9acc68 'z$r_buff1_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x56463c9b5758 <col:91, col:98> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x56463c9b5710 <col:91, col:98> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x56463c9b56e0 <col:98> 'int' 0
    |     `-ImplicitCastExpr 0x56463c9b5788 <col:102> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x56463c9b5770 <col:102> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x56463c9b5738 <col:102> '_Bool' lvalue Var 0x56463c9acc68 'z$r_buff1_thd0' '_Bool'
    |-CallExpr 0x56463c9b5840 <line:814:3, col:25> 'void'
    | `-ImplicitCastExpr 0x56463c9b5828 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x56463c9b5808 <col:3> 'void ()' Function 0x56463c952f00 '__VERIFIER_atomic_end' 'void ()'
    |-CallExpr 0x56463c9b5898 <line:815:3, col:27> 'void'
    | `-ImplicitCastExpr 0x56463c9b5880 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x56463c9b5860 <col:3> 'void ()' Function 0x56463c952e40 '__VERIFIER_atomic_begin' 'void ()'
    |-BinaryOperator 0x56463c9b5ad0 <line:816:3, col:103> '_Bool' '='
    | |-DeclRefExpr 0x56463c9b58b8 <col:3> '_Bool' lvalue Var 0x56463c9ac590 'main$tmp_guard1' '_Bool'
    | `-ImplicitCastExpr 0x56463c9b5ab8 <col:21, col:103> '_Bool' <IntegralToBoolean>
    |   `-UnaryOperator 0x56463c9b5aa0 <col:21, col:103> 'int' prefix '!' cannot overflow
    |     `-ParenExpr 0x56463c9b5a80 <col:22, col:103> 'int'
    |       `-BinaryOperator 0x56463c9b5a60 <col:23, col:102> 'int' '&&'
    |         |-BinaryOperator 0x56463c9b59c8 <col:23, col:74> 'int' '&&'
    |         | |-BinaryOperator 0x56463c9b5930 <col:23, col:46> 'int' '=='
    |         | | |-ImplicitCastExpr 0x56463c9b5918 <col:23> 'int' <LValueToRValue>
    |         | | | `-DeclRefExpr 0x56463c9b58d8 <col:23> 'int' lvalue Var 0x56463c9ac240 '__unbuffered_p0_EAX' 'int'
    |         | | `-IntegerLiteral 0x56463c9b58f8 <col:46> 'int' 0
    |         | `-BinaryOperator 0x56463c9b59a8 <col:51, col:74> 'int' '=='
    |         |   |-ImplicitCastExpr 0x56463c9b5990 <col:51> 'int' <LValueToRValue>
    |         |   | `-DeclRefExpr 0x56463c9b5950 <col:51> 'int' lvalue Var 0x56463c9ac360 '__unbuffered_p1_EAX' 'int'
    |         |   `-IntegerLiteral 0x56463c9b5970 <col:74> 'int' 0
    |         `-BinaryOperator 0x56463c9b5a40 <col:79, col:102> 'int' '=='
    |           |-ImplicitCastExpr 0x56463c9b5a28 <col:79> 'int' <LValueToRValue>
    |           | `-DeclRefExpr 0x56463c9b59e8 <col:79> 'int' lvalue Var 0x56463c9ac480 '__unbuffered_p2_EAX' 'int'
    |           `-IntegerLiteral 0x56463c9b5a08 <col:102> 'int' 0
    |-CallExpr 0x56463c9b5b28 <line:817:3, col:25> 'void'
    | `-ImplicitCastExpr 0x56463c9b5b10 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x56463c9b5af0 <col:3> 'void ()' Function 0x56463c952f00 '__VERIFIER_atomic_end' 'void ()'
    |-CallExpr 0x56463c9b5bc8 <line:818:3, col:36> 'void'
    | |-ImplicitCastExpr 0x56463c9b5bb0 <col:3> 'void (*)(int)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x56463c9b5b48 <col:3> 'void (int)' Function 0x56463c952bc8 '__VERIFIER_assert' 'void (int)'
    | `-ImplicitCastExpr 0x56463c9b5c08 <col:21> 'int' <IntegralCast>
    |   `-ImplicitCastExpr 0x56463c9b5bf0 <col:21> '_Bool' <LValueToRValue>
    |     `-DeclRefExpr 0x56463c9b5b90 <col:21> '_Bool' lvalue Var 0x56463c9ac590 'main$tmp_guard1' '_Bool'
    `-ReturnStmt 0x56463c9b5c40 <line:819:3, col:10>
      `-IntegerLiteral 0x56463c9b5c20 <col:10> 'int' 0
