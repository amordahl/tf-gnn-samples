TranslationUnitDecl 0x55755adf0e18 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x55755adf16d8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x55755adf13b0 '__int128'
|-TypedefDecl 0x55755adf1748 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x55755adf13d0 'unsigned __int128'
|-TypedefDecl 0x55755adf1a50 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x55755adf1820 'struct __NSConstantString_tag'
|   `-Record 0x55755adf17a0 '__NSConstantString_tag'
|-TypedefDecl 0x55755adf1af8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x55755adf1ab0 'char *'
|   `-BuiltinType 0x55755adf0eb0 'char'
|-TypedefDecl 0x55755ae30650 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'struct __va_list_tag [1]'
| `-ConstantArrayType 0x55755adf1d90 'struct __va_list_tag [1]' 1 
|   `-RecordType 0x55755adf1bd0 'struct __va_list_tag'
|     `-Record 0x55755adf1b50 '__va_list_tag'
|-FunctionDecl 0x55755ae30790 <./split_0/mix020_pso.opt_false-unreach-call.i:1:1, col:34> col:13 used __VERIFIER_assume 'void (int)' extern
| `-ParmVarDecl 0x55755ae306c0 <col:31> col:34 'int'
|-FunctionDecl 0x55755ae30958 <line:2:1, col:45> col:15 used __VERIFIER_nondet_pointer 'void *(void)' extern
|-FunctionDecl 0x55755ae30a80 <line:3:1, col:61> col:13 used __VERIFIER_error 'void () __attribute__((noreturn))' extern
|-FunctionDecl 0x55755ae30bc8 <line:4:1, col:99> col:6 used __VERIFIER_assert 'void (int)'
| |-ParmVarDecl 0x55755ae30b38 <col:24, col:28> col:28 used expression 'int'
| `-CompoundStmt 0x55755ae30df8 <col:40, col:99>
|   |-IfStmt 0x55755ae30dc8 <col:42, col:88>
|   | |-UnaryOperator 0x55755ae30ca8 <col:46, col:47> 'int' prefix '!' cannot overflow
|   | | `-ImplicitCastExpr 0x55755ae30c90 <col:47> 'int' <LValueToRValue>
|   | |   `-DeclRefExpr 0x55755ae30c70 <col:47> 'int' lvalue ParmVar 0x55755ae30b38 'expression' 'int'
|   | `-CompoundStmt 0x55755ae30db0 <col:59, col:88>
|   |   `-LabelStmt 0x55755ae30d98 <col:61, col:85> 'ERROR'
|   |     `-CallExpr 0x55755ae30d28 <col:68, col:85> 'void'
|   |       `-ImplicitCastExpr 0x55755ae30d10 <col:68> 'void (*)() __attribute__((noreturn))' <FunctionToPointerDecay>
|   |         `-DeclRefExpr 0x55755ae30cc0 <col:68> 'void () __attribute__((noreturn))' Function 0x55755ae30a80 '__VERIFIER_error' 'void () __attribute__((noreturn))'
|   |-NullStmt 0x55755ae30de0 <col:89>
|   `-ReturnStmt 0x55755ae30de8 <col:91>
|-FunctionDecl 0x55755ae30e40 <line:5:1, col:37> col:13 used __VERIFIER_atomic_begin 'void ()' extern
|-FunctionDecl 0x55755ae30f00 <line:6:1, col:35> col:13 used __VERIFIER_atomic_end 'void ()' extern
|-FunctionDecl 0x55755ae31280 <line:8:1, line:10:76> line:8:13 __assert_fail 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x55755ae30fb8 <col:28, col:40> col:40 __assertion 'const char *'
| |-ParmVarDecl 0x55755ae31038 <col:53, col:65> col:65 __file 'const char *'
| |-ParmVarDecl 0x55755ae310b8 <line:9:7, col:20> col:20 __line 'unsigned int'
| |-ParmVarDecl 0x55755ae31138 <col:28, col:40> col:40 __function 'const char *'
| `-NoThrowAttr 0x55755ae31340 <line:10:22>
|-FunctionDecl 0x55755ae57390 <line:11:1, line:13:76> line:11:13 __assert_perror_fail 'void (int, const char *, unsigned int, const char *) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x55755ae313b0 <col:35, col:39> col:39 __errnum 'int'
| |-ParmVarDecl 0x55755ae31430 <col:49, col:61> col:61 __file 'const char *'
| |-ParmVarDecl 0x55755ae314b0 <line:12:7, col:20> col:20 __line 'unsigned int'
| |-ParmVarDecl 0x55755ae31530 <col:28, col:40> col:40 __function 'const char *'
| `-NoThrowAttr 0x55755ae57450 <line:13:22>
|-FunctionDecl 0x55755ae57700 <line:14:1, line:15:76> line:14:13 __assert 'void (const char *, const char *, int) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x55755ae574c0 <col:23, col:35> col:35 __assertion 'const char *'
| |-ParmVarDecl 0x55755ae57540 <col:48, col:60> col:60 __file 'const char *'
| |-ParmVarDecl 0x55755ae575c0 <col:68, col:72> col:72 __line 'int'
| `-NoThrowAttr 0x55755ae577b8 <line:15:22>
|-TypedefDecl 0x55755ae57828 <line:17:1, col:23> col:23 __u_char 'unsigned char'
| `-BuiltinType 0x55755adf0f70 'unsigned char'
|-TypedefDecl 0x55755ae57898 <line:18:1, col:28> col:28 __u_short 'unsigned short'
| `-BuiltinType 0x55755adf0f90 'unsigned short'
|-TypedefDecl 0x55755ae57908 <line:19:1, col:22> col:22 __u_int 'unsigned int'
| `-BuiltinType 0x55755adf0fb0 'unsigned int'
|-TypedefDecl 0x55755ae57978 <line:20:1, col:27> col:27 __u_long 'unsigned long'
| `-BuiltinType 0x55755adf0fd0 'unsigned long'
|-TypedefDecl 0x55755ae579e8 <line:21:1, col:21> col:21 __int8_t 'signed char'
| `-BuiltinType 0x55755adf0ed0 'signed char'
|-TypedefDecl 0x55755ae57a58 <line:22:1, col:23> col:23 __uint8_t 'unsigned char'
| `-BuiltinType 0x55755adf0f70 'unsigned char'
|-TypedefDecl 0x55755ae57ac8 <line:23:1, col:26> col:26 __int16_t 'short'
| `-BuiltinType 0x55755adf0ef0 'short'
|-TypedefDecl 0x55755ae57b38 <line:24:1, col:28> col:28 __uint16_t 'unsigned short'
| `-BuiltinType 0x55755adf0f90 'unsigned short'
|-TypedefDecl 0x55755ae57ba8 <line:25:1, col:20> col:20 __int32_t 'int'
| `-BuiltinType 0x55755adf0f10 'int'
|-TypedefDecl 0x55755ae57c18 <line:26:1, col:22> col:22 __uint32_t 'unsigned int'
| `-BuiltinType 0x55755adf0fb0 'unsigned int'
|-TypedefDecl 0x55755ae57c88 <line:27:1, col:25> col:25 __int64_t 'long'
| `-BuiltinType 0x55755adf0f30 'long'
|-TypedefDecl 0x55755ae57cf8 <line:28:1, col:27> col:27 referenced __uint64_t 'unsigned long'
| `-BuiltinType 0x55755adf0fd0 'unsigned long'
|-TypedefDecl 0x55755ae57d68 <line:29:1, col:18> col:18 referenced __quad_t 'long'
| `-BuiltinType 0x55755adf0f30 'long'
|-TypedefDecl 0x55755ae57dd8 <line:30:1, col:27> col:27 __u_quad_t 'unsigned long'
| `-BuiltinType 0x55755adf0fd0 'unsigned long'
|-TypedefDecl 0x55755ae57e48 <line:31:1, col:27> col:27 __dev_t 'unsigned long'
| `-BuiltinType 0x55755adf0fd0 'unsigned long'
|-TypedefDecl 0x55755ae57eb8 <line:32:1, col:22> col:22 __uid_t 'unsigned int'
| `-BuiltinType 0x55755adf0fb0 'unsigned int'
|-TypedefDecl 0x55755ae57f28 <line:33:1, col:22> col:22 __gid_t 'unsigned int'
| `-BuiltinType 0x55755adf0fb0 'unsigned int'
|-TypedefDecl 0x55755ae57f98 <line:34:1, col:27> col:27 __ino_t 'unsigned long'
| `-BuiltinType 0x55755adf0fd0 'unsigned long'
|-TypedefDecl 0x55755ae58008 <line:35:1, col:27> col:27 __ino64_t 'unsigned long'
| `-BuiltinType 0x55755adf0fd0 'unsigned long'
|-TypedefDecl 0x55755ae58078 <line:36:1, col:22> col:22 __mode_t 'unsigned int'
| `-BuiltinType 0x55755adf0fb0 'unsigned int'
|-TypedefDecl 0x55755ae580e8 <line:37:1, col:27> col:27 __nlink_t 'unsigned long'
| `-BuiltinType 0x55755adf0fd0 'unsigned long'
|-TypedefDecl 0x55755ae58158 <line:38:1, col:18> col:18 __off_t 'long'
| `-BuiltinType 0x55755adf0f30 'long'
|-TypedefDecl 0x55755ae581c8 <line:39:1, col:18> col:18 referenced __off64_t 'long'
| `-BuiltinType 0x55755adf0f30 'long'
|-TypedefDecl 0x55755ae58238 <line:40:1, col:13> col:13 referenced __pid_t 'int'
| `-BuiltinType 0x55755adf0f10 'int'
|-RecordDecl 0x55755ae58290 <line:41:9, col:32> col:9 struct definition
| `-FieldDecl 0x55755ae58408 <col:18, col:29> col:22 __val 'int [2]'
|-TypedefDecl 0x55755ae584c0 <col:1, col:34> col:34 __fsid_t 'struct __fsid_t':'__fsid_t'
| `-ElaboratedType 0x55755ae58460 'struct __fsid_t' sugar
|   `-RecordType 0x55755ae58310 '__fsid_t'
|     `-Record 0x55755ae58290 ''
|-TypedefDecl 0x55755ae58548 <line:42:1, col:18> col:18 referenced __clock_t 'long'
| `-BuiltinType 0x55755adf0f30 'long'
|-TypedefDecl 0x55755ae585b8 <line:43:1, col:27> col:27 __rlim_t 'unsigned long'
| `-BuiltinType 0x55755adf0fd0 'unsigned long'
|-TypedefDecl 0x55755ae58628 <line:44:1, col:27> col:27 __rlim64_t 'unsigned long'
| `-BuiltinType 0x55755adf0fd0 'unsigned long'
|-TypedefDecl 0x55755ae58698 <line:45:1, col:22> col:22 __id_t 'unsigned int'
| `-BuiltinType 0x55755adf0fb0 'unsigned int'
|-TypedefDecl 0x55755ae58708 <line:46:1, col:18> col:18 referenced __time_t 'long'
| `-BuiltinType 0x55755adf0f30 'long'
|-TypedefDecl 0x55755ae58778 <line:47:1, col:22> col:22 __useconds_t 'unsigned int'
| `-BuiltinType 0x55755adf0fb0 'unsigned int'
|-TypedefDecl 0x55755ae587e8 <line:48:1, col:18> col:18 __suseconds_t 'long'
| `-BuiltinType 0x55755adf0f30 'long'
|-TypedefDecl 0x55755ae58858 <line:49:1, col:13> col:13 __daddr_t 'int'
| `-BuiltinType 0x55755adf0f10 'int'
|-TypedefDecl 0x55755ae588c8 <line:50:1, col:13> col:13 __key_t 'int'
| `-BuiltinType 0x55755adf0f10 'int'
|-TypedefDecl 0x55755ae58938 <line:51:1, col:13> col:13 referenced __clockid_t 'int'
| `-BuiltinType 0x55755adf0f10 'int'
|-TypedefDecl 0x55755ae589a8 <line:52:1, col:16> col:16 referenced __timer_t 'void *'
| `-PointerType 0x55755adf1630 'void *'
|   `-BuiltinType 0x55755adf0e70 'void'
|-TypedefDecl 0x55755ae58a18 <line:53:1, col:18> col:18 __blksize_t 'long'
| `-BuiltinType 0x55755adf0f30 'long'
|-TypedefDecl 0x55755ae58a88 <line:54:1, col:18> col:18 __blkcnt_t 'long'
| `-BuiltinType 0x55755adf0f30 'long'
|-TypedefDecl 0x55755ae58af8 <line:55:1, col:18> col:18 __blkcnt64_t 'long'
| `-BuiltinType 0x55755adf0f30 'long'
|-TypedefDecl 0x55755ae58b68 <line:56:1, col:27> col:27 __fsblkcnt_t 'unsigned long'
| `-BuiltinType 0x55755adf0fd0 'unsigned long'
|-TypedefDecl 0x55755ae58bd8 <line:57:1, col:27> col:27 __fsblkcnt64_t 'unsigned long'
| `-BuiltinType 0x55755adf0fd0 'unsigned long'
|-TypedefDecl 0x55755ae58c48 <line:58:1, col:27> col:27 __fsfilcnt_t 'unsigned long'
| `-BuiltinType 0x55755adf0fd0 'unsigned long'
|-TypedefDecl 0x55755ae58cb8 <line:59:1, col:27> col:27 __fsfilcnt64_t 'unsigned long'
| `-BuiltinType 0x55755adf0fd0 'unsigned long'
|-TypedefDecl 0x55755ae58d28 <line:60:1, col:18> col:18 __fsword_t 'long'
| `-BuiltinType 0x55755adf0f30 'long'
|-TypedefDecl 0x55755ae58d98 <line:61:1, col:18> col:18 __ssize_t 'long'
| `-BuiltinType 0x55755adf0f30 'long'
|-TypedefDecl 0x55755ae58e08 <line:62:1, col:18> col:18 referenced __syscall_slong_t 'long'
| `-BuiltinType 0x55755adf0f30 'long'
|-TypedefDecl 0x55755ae58e78 <line:63:1, col:27> col:27 __syscall_ulong_t 'unsigned long'
| `-BuiltinType 0x55755adf0fd0 'unsigned long'
|-TypedefDecl 0x55755ae58f08 <line:64:1, col:19> col:19 __loff_t '__off64_t':'long'
| `-TypedefType 0x55755ae58ed0 '__off64_t' sugar
|   |-Typedef 0x55755ae581c8 '__off64_t'
|   `-BuiltinType 0x55755adf0f30 'long'
|-TypedefDecl 0x55755ae59000 <line:65:1, col:19> col:19 __qaddr_t '__quad_t *'
| `-PointerType 0x55755ae58fc0 '__quad_t *'
|   `-TypedefType 0x55755ae58f60 '__quad_t' sugar
|     |-Typedef 0x55755ae57d68 '__quad_t'
|     `-BuiltinType 0x55755adf0f30 'long'
|-TypedefDecl 0x55755ae59070 <line:66:1, col:15> col:15 __caddr_t 'char *'
| `-PointerType 0x55755adf1ab0 'char *'
|   `-BuiltinType 0x55755adf0eb0 'char'
|-TypedefDecl 0x55755ae590e0 <line:67:1, col:18> col:18 __intptr_t 'long'
| `-BuiltinType 0x55755adf0f30 'long'
|-TypedefDecl 0x55755ae59150 <line:68:1, col:22> col:22 __socklen_t 'unsigned int'
| `-BuiltinType 0x55755adf0fb0 'unsigned int'
|-FunctionDecl 0x55755ae59298 <line:69:1, line:73:1> line:70:1 __bswap_32 'unsigned int (unsigned int)' static inline
| |-ParmVarDecl 0x55755ae591c0 <col:13, col:26> col:26 used __bsx 'unsigned int'
| `-CompoundStmt 0x55755ae5a5e8 <line:71:1, line:73:1>
|   `-ReturnStmt 0x55755ae5a5d8 <line:72:3, col:34>
|     `-CallExpr 0x55755ae5a598 <col:10, col:34> 'unsigned int'
|       |-ImplicitCastExpr 0x55755ae5a580 <col:10> 'unsigned int (*)(unsigned int)' <BuiltinFnToFnPtr>
|       | `-DeclRefExpr 0x55755ae5a510 <col:10> '<builtin fn type>' Function 0x55755ae5a380 '__builtin_bswap32' 'unsigned int (unsigned int)'
|       `-ImplicitCastExpr 0x55755ae5a5c0 <col:29> 'unsigned int' <LValueToRValue>
|         `-DeclRefExpr 0x55755ae5a530 <col:29> 'unsigned int' lvalue ParmVar 0x55755ae591c0 '__bsx' 'unsigned int'
|-FunctionDecl 0x55755ae5a380 <col:10> col:10 implicit used __builtin_bswap32 'unsigned int (unsigned int)' extern
| |-ParmVarDecl 0x55755ae5a420 <<invalid sloc>> <invalid sloc> 'unsigned int'
| |-NoThrowAttr 0x55755ae5a490 <col:10> Implicit
| `-ConstAttr 0x55755ae5a4e8 <col:10> Implicit
|-FunctionDecl 0x55755ae5a740 <line:74:1, line:78:1> line:75:1 __bswap_64 '__uint64_t (__uint64_t)' static inline
| |-ParmVarDecl 0x55755ae5a638 <col:13, col:24> col:24 used __bsx '__uint64_t':'unsigned long'
| `-CompoundStmt 0x55755ae5aa58 <line:76:1, line:78:1>
|   `-ReturnStmt 0x55755ae5aa48 <line:77:3, col:34>
|     `-CallExpr 0x55755ae5aa08 <col:10, col:34> 'unsigned long'
|       |-ImplicitCastExpr 0x55755ae5a9f0 <col:10> 'unsigned long (*)(unsigned long)' <BuiltinFnToFnPtr>
|       | `-DeclRefExpr 0x55755ae5a978 <col:10> '<builtin fn type>' Function 0x55755ae5a7e8 '__builtin_bswap64' 'unsigned long (unsigned long)'
|       `-ImplicitCastExpr 0x55755ae5aa30 <col:29> '__uint64_t':'unsigned long' <LValueToRValue>
|         `-DeclRefExpr 0x55755ae5a998 <col:29> '__uint64_t':'unsigned long' lvalue ParmVar 0x55755ae5a638 '__bsx' '__uint64_t':'unsigned long'
|-FunctionDecl 0x55755ae5a7e8 <col:10> col:10 implicit used __builtin_bswap64 'unsigned long (unsigned long)' extern
| |-ParmVarDecl 0x55755ae5a888 <<invalid sloc>> <invalid sloc> 'unsigned long'
| |-NoThrowAttr 0x55755ae5a8f8 <col:10> Implicit
| `-ConstAttr 0x55755ae5a950 <col:10> Implicit
|-TypedefDecl 0x55755ae5aa88 <line:79:1, col:27> col:27 referenced size_t 'unsigned long'
| `-BuiltinType 0x55755adf0fd0 'unsigned long'
|-TypedefDecl 0x55755ae5ab18 <line:81:1, col:18> col:18 referenced time_t '__time_t':'long'
| `-TypedefType 0x55755ae5aae0 '__time_t' sugar
|   |-Typedef 0x55755ae58708 '__time_t'
|   `-BuiltinType 0x55755adf0f30 'long'
|-RecordDecl 0x55755ae5ab70 <line:84:1, line:88:3> line:84:8 struct timespec definition
| |-FieldDecl 0x55755ae5ac28 <line:86:5, col:14> col:14 tv_sec '__time_t':'long'
| `-FieldDecl 0x55755ae5acb8 <line:87:5, col:23> col:23 tv_nsec '__syscall_slong_t':'long'
|-TypedefDecl 0x55755ae5ad48 <line:89:1, col:17> col:17 referenced pid_t '__pid_t':'int'
| `-TypedefType 0x55755ae5ad10 '__pid_t' sugar
|   |-Typedef 0x55755ae58238 '__pid_t'
|   `-BuiltinType 0x55755adf0f10 'int'
|-RecordDecl 0x55755ae5ada0 <line:90:1, line:93:3> line:90:8 struct sched_param definition
| `-FieldDecl 0x55755ae5ae60 <line:92:5, col:9> col:9 __sched_priority 'int'
|-RecordDecl 0x55755ae5aeb0 <line:96:1, line:99:3> line:96:8 struct __sched_param definition
| `-FieldDecl 0x55755ae5af70 <line:98:5, col:9> col:9 __sched_priority 'int'
|-TypedefDecl 0x55755ae5afd8 <line:100:1, col:27> col:27 referenced __cpu_mask 'unsigned long'
| `-BuiltinType 0x55755adf0fd0 'unsigned long'
|-RecordDecl 0x55755ae5b030 <line:101:9, line:104:1> line:101:9 struct definition
| `-FieldDecl 0x55755ae5b2c0 <line:103:3, col:53> col:14 __bits '__cpu_mask [64]'
|-TypedefDecl 0x55755ae5c3a0 <line:101:1, line:104:3> col:3 referenced cpu_set_t 'struct cpu_set_t':'cpu_set_t'
| `-ElaboratedType 0x55755ae5b310 'struct cpu_set_t' sugar
|   `-RecordType 0x55755ae5b0b0 'cpu_set_t'
|     `-Record 0x55755ae5b030 ''
|-FunctionDecl 0x55755ae5c678 <line:106:1, line:107:42> line:106:12 __sched_cpucount 'int (size_t, const cpu_set_t *)' extern
| |-ParmVarDecl 0x55755ae5c448 <col:30, col:37> col:37 __setsize 'size_t':'unsigned long'
| |-ParmVarDecl 0x55755ae5c550 <col:48, col:65> col:65 __setp 'const cpu_set_t *'
| `-NoThrowAttr 0x55755ae5c728 <line:107:19>
|-FunctionDecl 0x55755ae5c900 <line:108:1, col:92> col:19 __sched_cpualloc 'cpu_set_t *(size_t)' extern
| |-ParmVarDecl 0x55755ae5c790 <col:37, col:44> col:44 __count 'size_t':'unsigned long'
| `-NoThrowAttr 0x55755ae5c9a8 <col:69>
|-FunctionDecl 0x55755ae5cb20 <line:109:1, col:87> col:13 __sched_cpufree 'void (cpu_set_t *)' extern
| |-ParmVarDecl 0x55755ae5ca10 <col:30, col:41> col:41 __set 'cpu_set_t *'
| `-NoThrowAttr 0x55755ae5cbc8 <col:64>
|-FunctionDecl 0x55755ae5ce88 <line:112:1, line:113:45> line:112:12 sched_setparam 'int (__pid_t, const struct sched_param *)' extern
| |-ParmVarDecl 0x55755ae5cc30 <col:28, col:36> col:36 __pid '__pid_t':'int'
| |-ParmVarDecl 0x55755ae5cd68 <col:43, col:69> col:69 __param 'const struct sched_param *'
| `-NoThrowAttr 0x55755ae5cf38 <line:113:22>
|-FunctionDecl 0x55755ae5d1b8 <line:114:1, col:111> col:12 sched_getparam 'int (__pid_t, struct sched_param *)' extern
| |-ParmVarDecl 0x55755ae5cfa0 <col:28, col:36> col:36 __pid '__pid_t':'int'
| |-ParmVarDecl 0x55755ae5d098 <col:43, col:63> col:63 __param 'struct sched_param *'
| `-NoThrowAttr 0x55755ae5d268 <col:88>
|-FunctionDecl 0x55755ae5d588 <line:115:1, line:116:85> line:115:12 sched_setscheduler 'int (__pid_t, int, const struct sched_param *)' extern
| |-ParmVarDecl 0x55755ae5d2d0 <col:32, col:40> col:40 __pid '__pid_t':'int'
| |-ParmVarDecl 0x55755ae5d3b0 <col:47, col:51> col:51 __policy 'int'
| |-ParmVarDecl 0x55755ae5d440 <line:116:11, col:37> col:37 __param 'const struct sched_param *'
| `-NoThrowAttr 0x55755ae5d640 <col:62>
|-FunctionDecl 0x55755ae5d7b8 <line:117:1, col:86> col:12 sched_getscheduler 'int (__pid_t)' extern
| |-ParmVarDecl 0x55755ae5d6a8 <col:32, col:40> col:40 __pid '__pid_t':'int'
| `-NoThrowAttr 0x55755ae5d860 <col:63>
|-FunctionDecl 0x55755ae5d988 <line:118:1, col:70> col:12 sched_yield 'int (void)' extern
| `-NoThrowAttr 0x55755ae5da28 <col:47>
|-FunctionDecl 0x55755ae5db30 <line:119:1, col:92> col:12 sched_get_priority_max 'int (int)' extern
| |-ParmVarDecl 0x55755ae5da98 <col:36, col:40> col:40 __algorithm 'int'
| `-NoThrowAttr 0x55755ae5dbd8 <col:69>
|-FunctionDecl 0x55755ae5dce0 <line:120:1, col:92> col:12 sched_get_priority_min 'int (int)' extern
| |-ParmVarDecl 0x55755ae5dc48 <col:36, col:40> col:40 __algorithm 'int'
| `-NoThrowAttr 0x55755ae5dd88 <col:69>
|-FunctionDecl 0x55755ae5e048 <line:121:1, col:111> col:12 sched_rr_get_interval 'int (__pid_t, struct timespec *)' extern
| |-ParmVarDecl 0x55755ae5ddf0 <col:35, col:43> col:43 __pid '__pid_t':'int'
| |-ParmVarDecl 0x55755ae5df28 <col:50, col:67> col:67 __t 'struct timespec *'
| `-NoThrowAttr 0x55755ae5e0f8 <col:88>
|-TypedefDecl 0x55755ae5e188 <line:125:1, col:19> col:19 referenced clock_t '__clock_t':'long'
| `-TypedefType 0x55755ae5e150 '__clock_t' sugar
|   |-Typedef 0x55755ae58548 '__clock_t'
|   `-BuiltinType 0x55755adf0f30 'long'
|-TypedefDecl 0x55755ae5e218 <line:128:1, col:21> col:21 referenced clockid_t '__clockid_t':'int'
| `-TypedefType 0x55755ae5e1e0 '__clockid_t' sugar
|   |-Typedef 0x55755ae58938 '__clockid_t'
|   `-BuiltinType 0x55755adf0f10 'int'
|-TypedefDecl 0x55755ae5e2a8 <line:129:1, col:19> col:19 referenced timer_t '__timer_t':'void *'
| `-TypedefType 0x55755ae5e270 '__timer_t' sugar
|   |-Typedef 0x55755ae589a8 '__timer_t'
|   `-PointerType 0x55755adf1630 'void *'
|     `-BuiltinType 0x55755adf0e70 'void'
|-RecordDecl 0x55755ae5e300 <line:131:1, line:144:1> line:131:8 struct tm definition
| |-FieldDecl 0x55755ae5e3d8 <line:133:3, col:7> col:7 tm_sec 'int'
| |-FieldDecl 0x55755ae5e440 <line:134:3, col:7> col:7 tm_min 'int'
| |-FieldDecl 0x55755ae5e4a8 <line:135:3, col:7> col:7 tm_hour 'int'
| |-FieldDecl 0x55755ae5e510 <line:136:3, col:7> col:7 tm_mday 'int'
| |-FieldDecl 0x55755ae5e578 <line:137:3, col:7> col:7 tm_mon 'int'
| |-FieldDecl 0x55755ae5e5e0 <line:138:3, col:7> col:7 tm_year 'int'
| |-FieldDecl 0x55755ae5e648 <line:139:3, col:7> col:7 tm_wday 'int'
| |-FieldDecl 0x55755ae5e6b0 <line:140:3, col:7> col:7 tm_yday 'int'
| |-FieldDecl 0x55755ae5e718 <line:141:3, col:7> col:7 tm_isdst 'int'
| |-FieldDecl 0x55755ae5e780 <line:142:3, col:12> col:12 tm_gmtoff 'long'
| `-FieldDecl 0x55755ae5e7e8 <line:143:3, col:15> col:15 tm_zone 'const char *'
|-RecordDecl 0x55755ae5e838 <line:147:1, line:151:3> line:147:8 struct itimerspec definition
| |-FieldDecl 0x55755ae5e908 <line:149:5, col:21> col:21 it_interval 'struct timespec':'struct timespec'
| `-FieldDecl 0x55755ae5e978 <line:150:5, col:21> col:21 it_value 'struct timespec':'struct timespec'
|-RecordDecl 0x55755ae5ea20 <line:152:1, col:8> col:8 struct sigevent
|-FunctionDecl 0x55755ae5ebf0 <line:154:1, col:68> col:16 clock 'clock_t (void)' extern
| `-NoThrowAttr 0x55755ae5ec90 <col:45>
|-FunctionDecl 0x55755ae5ee70 <line:155:1, col:77> col:15 time 'time_t (time_t *)' extern
| |-ParmVarDecl 0x55755ae5ed60 <col:21, col:29> col:29 __timer 'time_t *'
| `-NoThrowAttr 0x55755ae5ef18 <col:54>
|-FunctionDecl 0x55755ae5f118 <line:156:1, line:157:73> line:156:15 difftime 'double (time_t, time_t)' extern
| |-ParmVarDecl 0x55755ae5ef80 <col:25, col:32> col:32 __time1 'time_t':'long'
| |-ParmVarDecl 0x55755ae5eff8 <col:41, col:48> col:48 __time0 'time_t':'long'
| |-NoThrowAttr 0x55755ae5f1c8 <line:157:22>
| `-ConstAttr 0x55755ae5f220 <col:63>
|-FunctionDecl 0x55755ae60050 <line:158:1, col:79> col:15 mktime 'time_t (struct tm *)' extern
| |-ParmVarDecl 0x55755ae5f318 <col:23, col:34> col:34 __tp 'struct tm *'
| `-NoThrowAttr 0x55755ae600f8 <col:56>
|-FunctionDecl 0x55755ae604a0 <line:159:1, line:161:77> line:159:15 strftime 'size_t (char *restrict, size_t, const char *restrict, const struct tm *restrict)' extern
| |-ParmVarDecl 0x55755ae60168 <col:25, col:42> col:42 __s 'char *restrict'
| |-ParmVarDecl 0x55755ae601e0 <col:47, col:54> col:54 __maxsize 'size_t':'unsigned long'
| |-ParmVarDecl 0x55755ae60260 <line:160:4, col:27> col:27 __format 'const char *restrict'
| |-ParmVarDecl 0x55755ae60358 <line:161:4, col:32> col:32 __tp 'const struct tm *restrict'
| `-NoThrowAttr 0x55755ae60560 <col:54>
|-RecordDecl 0x55755ae605b8 <line:163:9, line:170:1> line:163:16 struct __locale_struct definition
| |-RecordDecl 0x55755ae60668 parent 0x55755adf0e18 <line:165:3, col:10> col:10 struct __locale_data
| |-FieldDecl 0x55755ae608c8 <col:3, col:37> col:25 __locales 'struct __locale_data *[13]'
| |-FieldDecl 0x55755ae60968 <line:166:3, col:29> col:29 __ctype_b 'const unsigned short *'
| |-FieldDecl 0x55755ae609d0 <line:167:3, col:14> col:14 __ctype_tolower 'const int *'
| |-FieldDecl 0x55755ae60a38 <line:168:3, col:14> col:14 __ctype_toupper 'const int *'
| `-FieldDecl 0x55755ae60b28 <line:169:3, col:25> col:15 __names 'const char *[13]'
|-TypedefDecl 0x55755ae60c48 <line:163:1, line:170:4> col:4 referenced __locale_t 'struct __locale_struct *'
| `-PointerType 0x55755ae60bf0 'struct __locale_struct *'
|   `-ElaboratedType 0x55755ae60b80 'struct __locale_struct' sugar
|     `-RecordType 0x55755ae60640 'struct __locale_struct'
|       `-Record 0x55755ae605b8 '__locale_struct'
|-TypedefDecl 0x55755ae60cf8 <line:171:1, col:20> col:20 locale_t '__locale_t':'struct __locale_struct *'
| `-TypedefType 0x55755ae60cc0 '__locale_t' sugar
|   |-Typedef 0x55755ae60c48 '__locale_t'
|   `-PointerType 0x55755ae60bf0 'struct __locale_struct *'
|     `-ElaboratedType 0x55755ae60b80 'struct __locale_struct' sugar
|       `-RecordType 0x55755ae60640 'struct __locale_struct'
|         `-Record 0x55755ae605b8 '__locale_struct'
|-FunctionDecl 0x55755ae62110 <line:172:1, line:175:63> line:172:15 strftime_l 'size_t (char *restrict, size_t, const char *restrict, const struct tm *restrict, __locale_t)' extern
| |-ParmVarDecl 0x55755ae60d68 <col:27, col:44> col:44 __s 'char *restrict'
| |-ParmVarDecl 0x55755ae60de0 <col:49, col:56> col:56 __maxsize 'size_t':'unsigned long'
| |-ParmVarDecl 0x55755ae60e60 <line:173:6, col:29> col:29 __format 'const char *restrict'
| |-ParmVarDecl 0x55755ae60ef0 <line:174:6, col:34> col:34 __tp 'const struct tm *restrict'
| |-ParmVarDecl 0x55755ae60f68 <line:175:6, col:17> col:17 __loc '__locale_t':'struct __locale_struct *'
| `-NoThrowAttr 0x55755ae621d8 <col:40>
|-FunctionDecl 0x55755ae623c8 <line:177:1, col:89> col:19 gmtime 'struct tm *(const time_t *)' extern
| |-ParmVarDecl 0x55755ae622a0 <col:27, col:41> col:41 __timer 'const time_t *'
| `-NoThrowAttr 0x55755ae62470 <col:66>
|-FunctionDecl 0x55755ae62580 <line:178:1, col:92> col:19 localtime 'struct tm *(const time_t *)' extern
| |-ParmVarDecl 0x55755ae624d8 <col:30, col:44> col:44 __timer 'const time_t *'
| `-NoThrowAttr 0x55755ae62628 <col:69>
|-FunctionDecl 0x55755ae62858 <line:180:1, line:181:75> line:180:19 gmtime_r 'struct tm *(const time_t *restrict, struct tm *restrict)' extern
| |-ParmVarDecl 0x55755ae62690 <col:29, col:54> col:54 __timer 'const time_t *restrict'
| |-ParmVarDecl 0x55755ae62720 <line:181:8, col:30> col:30 __tp 'struct tm *restrict'
| `-NoThrowAttr 0x55755ae62908 <col:52>
|-FunctionDecl 0x55755ae62ab0 <line:182:1, line:183:78> line:182:19 localtime_r 'struct tm *(const time_t *restrict, struct tm *restrict)' extern
| |-ParmVarDecl 0x55755ae62970 <col:32, col:57> col:57 __timer 'const time_t *restrict'
| |-ParmVarDecl 0x55755ae62a00 <line:183:11, col:33> col:33 __tp 'struct tm *restrict'
| `-NoThrowAttr 0x55755ae62b60 <col:55>
|-FunctionDecl 0x55755ae62cf8 <line:185:1, col:85> col:14 asctime 'char *(const struct tm *)' extern
| |-ParmVarDecl 0x55755ae62be0 <col:23, col:40> col:40 __tp 'const struct tm *'
| `-NoThrowAttr 0x55755ae62da0 <col:62>
|-FunctionDecl 0x55755ae62f18 <line:186:1, col:83> col:14 ctime 'char *(const time_t *)' extern
| |-ParmVarDecl 0x55755ae62e08 <col:21, col:35> col:35 __timer 'const time_t *'
| `-NoThrowAttr 0x55755ae62fc0 <col:60>
|-FunctionDecl 0x55755ae632b8 <line:188:1, line:189:67> line:188:14 asctime_r 'char *(const struct tm *restrict, char *restrict)' extern
| |-ParmVarDecl 0x55755ae63118 <col:25, col:53> col:53 __tp 'const struct tm *restrict'
| |-ParmVarDecl 0x55755ae63198 <line:189:4, col:21> col:21 __buf 'char *restrict'
| `-NoThrowAttr 0x55755ae63368 <col:44>
|-FunctionDecl 0x55755ae63578 <line:190:1, line:191:72> line:190:14 ctime_r 'char *(const time_t *restrict, char *restrict)' extern
| |-ParmVarDecl 0x55755ae633d0 <col:23, col:48> col:48 __timer 'const time_t *restrict'
| |-ParmVarDecl 0x55755ae63450 <line:191:9, col:26> col:26 __buf 'char *restrict'
| `-NoThrowAttr 0x55755ae63628 <col:49>
|-VarDecl 0x55755ae63728 <line:192:1, col:24> col:14 __tzname 'char *[2]' extern
|-VarDecl 0x55755ae637a8 <line:193:1, col:12> col:12 __daylight 'int' extern
|-VarDecl 0x55755ae63828 <line:194:1, col:17> col:17 __timezone 'long' extern
|-VarDecl 0x55755ae638f0 <line:195:1, col:22> col:14 tzname 'char *[2]' extern
|-FunctionDecl 0x55755ae63a20 <line:196:1, col:65> col:13 tzset 'void (void)' extern
| `-NoThrowAttr 0x55755ae63ac0 <col:42>
|-VarDecl 0x55755ae63b30 <line:197:1, col:12> col:12 daylight 'int' extern
|-VarDecl 0x55755ae63bb0 <line:198:1, col:17> col:17 timezone 'long' extern
|-FunctionDecl 0x55755ae63d38 <line:199:1, col:80> col:12 stime 'int (const time_t *)' extern
| |-ParmVarDecl 0x55755ae63c28 <col:19, col:33> col:33 __when 'const time_t *'
| `-NoThrowAttr 0x55755ae63de0 <col:57>
|-FunctionDecl 0x55755ae63ef0 <line:200:1, col:79> col:15 timegm 'time_t (struct tm *)' extern
| |-ParmVarDecl 0x55755ae63e60 <col:23, col:34> col:34 __tp 'struct tm *'
| `-NoThrowAttr 0x55755ae63f98 <col:56>
|-FunctionDecl 0x55755ae640d0 <line:201:1, col:82> col:15 timelocal 'time_t (struct tm *)' extern
| |-ParmVarDecl 0x55755ae64018 <col:26, col:37> col:37 __tp 'struct tm *'
| `-NoThrowAttr 0x55755ae64178 <col:59>
|-FunctionDecl 0x55755ae64280 <line:202:1, col:99> col:12 dysize 'int (int)' extern
| |-ParmVarDecl 0x55755ae641e8 <col:20, col:24> col:24 __year 'int'
| |-NoThrowAttr 0x55755ae64328 <col:48>
| `-ConstAttr 0x55755ae64380 <col:89>
|-FunctionDecl 0x55755ae645e8 <line:203:1, line:204:37> line:203:12 nanosleep 'int (const struct timespec *, struct timespec *)' extern
| |-ParmVarDecl 0x55755ae64438 <col:23, col:46> col:46 __requested_time 'const struct timespec *'
| `-ParmVarDecl 0x55755ae644c8 <line:204:9, col:26> col:26 __remaining 'struct timespec *'
|-FunctionDecl 0x55755ae64848 <line:205:1, col:111> col:12 clock_getres 'int (clockid_t, struct timespec *)' extern
| |-ParmVarDecl 0x55755ae646d8 <col:26, col:36> col:36 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x55755ae64768 <col:48, col:65> col:65 __res 'struct timespec *'
| `-NoThrowAttr 0x55755ae648f8 <col:88>
|-FunctionDecl 0x55755ae64a90 <line:206:1, col:111> col:12 clock_gettime 'int (clockid_t, struct timespec *)' extern
| |-ParmVarDecl 0x55755ae64960 <col:27, col:37> col:37 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x55755ae649f0 <col:49, col:66> col:66 __tp 'struct timespec *'
| `-NoThrowAttr 0x55755ae64b40 <col:88>
|-FunctionDecl 0x55755ae64d58 <line:207:1, line:208:45> line:207:12 clock_settime 'int (clockid_t, const struct timespec *)' extern
| |-ParmVarDecl 0x55755ae64ba8 <col:27, col:37> col:37 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x55755ae64c38 <col:49, col:72> col:72 __tp 'const struct timespec *'
| `-NoThrowAttr 0x55755ae64e08 <line:208:22>
|-FunctionDecl 0x55755ae65178 <line:209:1, line:211:30> line:209:12 clock_nanosleep 'int (clockid_t, int, const struct timespec *, struct timespec *)' extern
| |-ParmVarDecl 0x55755ae64e70 <col:29, col:39> col:39 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x55755ae64ef0 <col:51, col:55> col:55 __flags 'int'
| |-ParmVarDecl 0x55755ae64f80 <line:210:8, col:31> col:31 __req 'const struct timespec *'
| `-ParmVarDecl 0x55755ae65010 <line:211:8, col:25> col:25 __rem 'struct timespec *'
|-FunctionDecl 0x55755ae65478 <line:212:1, col:108> col:12 clock_getcpuclockid 'int (pid_t, clockid_t *)' extern
| |-ParmVarDecl 0x55755ae65278 <col:33, col:39> col:39 __pid 'pid_t':'int'
| |-ParmVarDecl 0x55755ae65350 <col:46, col:57> col:57 __clock_id 'clockid_t *'
| `-NoThrowAttr 0x55755ae65528 <col:85>
|-FunctionDecl 0x55755ae65918 <line:213:1, line:215:75> line:213:12 timer_create 'int (clockid_t, struct sigevent *restrict, timer_t *restrict)' extern
| |-ParmVarDecl 0x55755ae65590 <col:26, col:36> col:36 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x55755ae656c8 <line:214:5, col:33> col:33 __evp 'struct sigevent *restrict'
| |-ParmVarDecl 0x55755ae657d0 <line:215:5, col:25> col:25 __timerid 'timer_t *restrict'
| `-NoThrowAttr 0x55755ae659d0 <col:52>
|-FunctionDecl 0x55755ae65b48 <line:216:1, col:84> col:12 timer_delete 'int (timer_t)' extern
| |-ParmVarDecl 0x55755ae65a38 <col:26, col:34> col:34 __timerid 'timer_t':'void *'
| `-NoThrowAttr 0x55755ae65bf0 <col:61>
|-FunctionDecl 0x55755ae660f0 <line:217:1, line:219:85> line:217:12 timer_settime 'int (timer_t, int, const struct itimerspec *restrict, struct itimerspec *restrict)' extern
| |-ParmVarDecl 0x55755ae65c58 <col:27, col:35> col:35 __timerid 'timer_t':'void *'
| |-ParmVarDecl 0x55755ae65cd8 <col:46, col:50> col:50 __flags 'int'
| |-ParmVarDecl 0x55755ae65e08 <line:218:6, col:42> col:42 __value 'const struct itimerspec *restrict'
| |-ParmVarDecl 0x55755ae65ef8 <line:219:6, col:36> col:36 __ovalue 'struct itimerspec *restrict'
| `-NoThrowAttr 0x55755ae661b0 <col:62>
|-FunctionDecl 0x55755ae663c8 <line:220:1, line:221:45> line:220:12 timer_gettime 'int (timer_t, struct itimerspec *)' extern
| |-ParmVarDecl 0x55755ae66218 <col:27, col:35> col:35 __timerid 'timer_t':'void *'
| |-ParmVarDecl 0x55755ae662a8 <col:46, col:65> col:65 __value 'struct itimerspec *'
| `-NoThrowAttr 0x55755ae66478 <line:221:22>
|-FunctionDecl 0x55755ae66578 <line:222:1, col:88> col:12 timer_getoverrun 'int (timer_t)' extern
| |-ParmVarDecl 0x55755ae664e0 <col:30, col:38> col:38 __timerid 'timer_t':'void *'
| `-NoThrowAttr 0x55755ae66620 <col:65>
|-TypedefDecl 0x55755ae66690 <line:224:1, col:27> col:27 referenced pthread_t 'unsigned long'
| `-BuiltinType 0x55755adf0fd0 'unsigned long'
|-RecordDecl 0x55755ae666e8 <line:225:1, line:229:1> line:225:7 union pthread_attr_t definition
| |-FieldDecl 0x55755ae66830 <line:227:3, col:17> col:8 __size 'char [56]'
| `-FieldDecl 0x55755ae66898 <line:228:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x55755ae66948 <line:230:1, col:30> col:30 referenced pthread_attr_t 'union pthread_attr_t':'union pthread_attr_t'
| `-ElaboratedType 0x55755ae668f0 'union pthread_attr_t' sugar
|   `-RecordType 0x55755ae66770 'union pthread_attr_t'
|     `-Record 0x55755ae666e8 'pthread_attr_t'
|-RecordDecl 0x55755ae669a0 <line:231:9, line:235:1> line:231:16 struct __pthread_internal_list definition
| |-FieldDecl 0x55755ae66b18 <line:233:3, col:35> col:35 __prev 'struct __pthread_internal_list *'
| `-FieldDecl 0x55755ae66b90 <line:234:3, col:35> col:35 __next 'struct __pthread_internal_list *'
|-TypedefDecl 0x55755ae66c40 <line:231:1, line:235:3> col:3 referenced __pthread_list_t 'struct __pthread_internal_list':'struct __pthread_internal_list'
| `-ElaboratedType 0x55755ae66be0 'struct __pthread_internal_list' sugar
|   `-RecordType 0x55755ae66a20 'struct __pthread_internal_list'
|     `-Record 0x55755ae669a0 '__pthread_internal_list'
|-RecordDecl 0x55755ae66cb0 <line:236:9, line:250:1> line:236:9 union definition
| |-RecordDecl 0x55755ae66d58 parent 0x55755adf0e18 <line:238:3, line:247:3> line:238:10 struct __pthread_mutex_s definition
| | |-FieldDecl 0x55755ae66e30 <line:240:5, col:9> col:9 __lock 'int'
| | |-FieldDecl 0x55755ae66e98 <line:241:5, col:18> col:18 __count 'unsigned int'
| | |-FieldDecl 0x55755ae66f00 <line:242:5, col:9> col:9 __owner 'int'
| | |-FieldDecl 0x55755ae66f68 <line:243:5, col:18> col:18 __nusers 'unsigned int'
| | |-FieldDecl 0x55755ae66fd0 <line:244:5, col:9> col:9 __kind 'int'
| | |-FieldDecl 0x55755ae67038 <line:245:5, col:9> col:9 __spins 'int'
| | `-FieldDecl 0x55755ae6b110 <line:246:5, col:22> col:22 __list '__pthread_list_t':'struct __pthread_internal_list'
| |-FieldDecl 0x55755ae6b1c0 <line:238:3, line:247:5> col:5 __data 'struct __pthread_mutex_s':'struct __pthread_mutex_s'
| |-FieldDecl 0x55755ae6b2b0 <line:248:3, col:17> col:8 __size 'char [40]'
| `-FieldDecl 0x55755ae6b318 <line:249:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x55755ae6b4a0 <line:236:1, line:250:3> col:3 referenced pthread_mutex_t 'union pthread_mutex_t':'pthread_mutex_t'
| `-ElaboratedType 0x55755ae6b440 'union pthread_mutex_t' sugar
|   `-RecordType 0x55755ae66d30 'pthread_mutex_t'
|     `-Record 0x55755ae66cb0 ''
|-RecordDecl 0x55755ae6b510 <line:251:9, line:255:1> line:251:9 union definition
| |-FieldDecl 0x55755ae6b650 <line:253:3, col:16> col:8 __size 'char [4]'
| `-FieldDecl 0x55755ae6b6b8 <line:254:3, col:7> col:7 __align 'int'
|-TypedefDecl 0x55755ae6b770 <line:251:1, line:255:3> col:3 referenced pthread_mutexattr_t 'union pthread_mutexattr_t':'pthread_mutexattr_t'
| `-ElaboratedType 0x55755ae6b710 'union pthread_mutexattr_t' sugar
|   `-RecordType 0x55755ae6b590 'pthread_mutexattr_t'
|     `-Record 0x55755ae6b510 ''
|-RecordDecl 0x55755ae6b7e0 <line:256:9, line:271:1> line:256:9 union definition
| |-RecordDecl 0x55755ae6b888 <line:258:3, line:268:3> line:258:3 struct definition
| | |-FieldDecl 0x55755ae6b950 <line:260:5, col:9> col:9 __lock 'int'
| | |-FieldDecl 0x55755ae6b9b8 <line:261:5, col:18> col:18 __futex 'unsigned int'
| | |-FieldDecl 0x55755ae6ba20 <line:262:19, col:42> col:42 __total_seq 'unsigned long long'
| | |-FieldDecl 0x55755ae6ba88 <line:263:19, col:42> col:42 __wakeup_seq 'unsigned long long'
| | |-FieldDecl 0x55755ae6baf0 <line:264:19, col:42> col:42 __woken_seq 'unsigned long long'
| | |-FieldDecl 0x55755ae6bb58 <line:265:5, col:11> col:11 __mutex 'void *'
| | |-FieldDecl 0x55755ae6bbc0 <line:266:5, col:18> col:18 __nwaiters 'unsigned int'
| | `-FieldDecl 0x55755ae6bc28 <line:267:5, col:18> col:18 __broadcast_seq 'unsigned int'
| |-FieldDecl 0x55755ae6bce0 <line:258:3, line:268:5> col:5 __data 'struct (anonymous struct at ./split_0/mix020_pso.opt_false-unreach-call.i:258:3)':'struct pthread_cond_t::(anonymous at ./split_0/mix020_pso.opt_false-unreach-call.i:258:3)'
| |-FieldDecl 0x55755ae6bdd0 <line:269:3, col:17> col:8 __size 'char [48]'
| `-FieldDecl 0x55755ae6be38 <line:270:17, col:31> col:31 __align 'long long'
|-TypedefDecl 0x55755ae6bf70 <line:256:1, line:271:3> col:3 referenced pthread_cond_t 'union pthread_cond_t':'pthread_cond_t'
| `-ElaboratedType 0x55755ae6bf10 'union pthread_cond_t' sugar
|   `-RecordType 0x55755ae6b860 'pthread_cond_t'
|     `-Record 0x55755ae6b7e0 ''
|-RecordDecl 0x55755ae6bfe0 <line:272:9, line:276:1> line:272:9 union definition
| |-FieldDecl 0x55755ae6d130 <line:274:3, col:16> col:8 __size 'char [4]'
| `-FieldDecl 0x55755ae6d198 <line:275:3, col:7> col:7 __align 'int'
|-TypedefDecl 0x55755ae6d250 <line:272:1, line:276:3> col:3 referenced pthread_condattr_t 'union pthread_condattr_t':'pthread_condattr_t'
| `-ElaboratedType 0x55755ae6d1f0 'union pthread_condattr_t' sugar
|   `-RecordType 0x55755ae6c060 'pthread_condattr_t'
|     `-Record 0x55755ae6bfe0 ''
|-TypedefDecl 0x55755ae6d2d8 <line:277:1, col:22> col:22 referenced pthread_key_t 'unsigned int'
| `-BuiltinType 0x55755adf0fb0 'unsigned int'
|-TypedefDecl 0x55755ae6d348 <line:278:1, col:13> col:13 referenced pthread_once_t 'int'
| `-BuiltinType 0x55755adf0f10 'int'
|-RecordDecl 0x55755ae6d3a0 <line:279:9, line:297:1> line:279:9 union definition
| |-RecordDecl 0x55755ae6d448 <line:281:3, line:294:3> line:281:3 struct definition
| | |-FieldDecl 0x55755ae6d510 <line:283:5, col:9> col:9 __lock 'int'
| | |-FieldDecl 0x55755ae6d578 <line:284:5, col:18> col:18 __nr_readers 'unsigned int'
| | |-FieldDecl 0x55755ae6d5e0 <line:285:5, col:18> col:18 __readers_wakeup 'unsigned int'
| | |-FieldDecl 0x55755ae6d648 <line:286:5, col:18> col:18 __writer_wakeup 'unsigned int'
| | |-FieldDecl 0x55755ae6d6b0 <line:287:5, col:18> col:18 __nr_readers_queued 'unsigned int'
| | |-FieldDecl 0x55755ae6d718 <line:288:5, col:18> col:18 __nr_writers_queued 'unsigned int'
| | |-FieldDecl 0x55755ae6d780 <line:289:5, col:9> col:9 __writer 'int'
| | |-FieldDecl 0x55755ae6d7e8 <line:290:5, col:9> col:9 __shared 'int'
| | |-FieldDecl 0x55755ae6d850 <line:291:5, col:23> col:23 __pad1 'unsigned long'
| | |-FieldDecl 0x55755ae6d8b8 <line:292:5, col:23> col:23 __pad2 'unsigned long'
| | `-FieldDecl 0x55755ae6d920 <line:293:5, col:18> col:18 __flags 'unsigned int'
| |-FieldDecl 0x55755ae6d9d0 <line:281:3, line:294:5> col:5 __data 'struct (anonymous struct at ./split_0/mix020_pso.opt_false-unreach-call.i:281:3)':'struct pthread_rwlock_t::(anonymous at ./split_0/mix020_pso.opt_false-unreach-call.i:281:3)'
| |-FieldDecl 0x55755ae6da78 <line:295:3, col:17> col:8 __size 'char [56]'
| `-FieldDecl 0x55755ae6dae0 <line:296:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x55755ae6dc30 <line:279:1, line:297:3> col:3 referenced pthread_rwlock_t 'union pthread_rwlock_t':'pthread_rwlock_t'
| `-ElaboratedType 0x55755ae6dbd0 'union pthread_rwlock_t' sugar
|   `-RecordType 0x55755ae6d420 'pthread_rwlock_t'
|     `-Record 0x55755ae6d3a0 ''
|-RecordDecl 0x55755ae6dca0 <line:298:9, line:302:1> line:298:9 union definition
| |-FieldDecl 0x55755ae6dde0 <line:300:3, col:16> col:8 __size 'char [8]'
| `-FieldDecl 0x55755ae6de48 <line:301:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x55755ae6df00 <line:298:1, line:302:3> col:3 referenced pthread_rwlockattr_t 'union pthread_rwlockattr_t':'pthread_rwlockattr_t'
| `-ElaboratedType 0x55755ae6dea0 'union pthread_rwlockattr_t' sugar
|   `-RecordType 0x55755ae6dd20 'pthread_rwlockattr_t'
|     `-Record 0x55755ae6dca0 ''
|-TypedefDecl 0x55755ae6df88 <line:303:1, col:22> col:22 referenced pthread_spinlock_t 'volatile int'
| `-QualType 0x55755adf0f14 'volatile int' volatile
|   `-BuiltinType 0x55755adf0f10 'int'
|-RecordDecl 0x55755ae6dfe0 <line:304:9, line:308:1> line:304:9 union definition
| |-FieldDecl 0x55755ae6f140 <line:306:3, col:17> col:8 __size 'char [32]'
| `-FieldDecl 0x55755ae6f1a8 <line:307:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x55755ae6f260 <line:304:1, line:308:3> col:3 referenced pthread_barrier_t 'union pthread_barrier_t':'pthread_barrier_t'
| `-ElaboratedType 0x55755ae6f200 'union pthread_barrier_t' sugar
|   `-RecordType 0x55755ae6e060 'pthread_barrier_t'
|     `-Record 0x55755ae6dfe0 ''
|-RecordDecl 0x55755ae6f2d0 <line:309:9, line:313:1> line:309:9 union definition
| |-FieldDecl 0x55755ae6f3d0 <line:311:3, col:16> col:8 __size 'char [4]'
| `-FieldDecl 0x55755ae6f438 <line:312:3, col:7> col:7 __align 'int'
|-TypedefDecl 0x55755ae6f4f0 <line:309:1, line:313:3> col:3 referenced pthread_barrierattr_t 'union pthread_barrierattr_t':'pthread_barrierattr_t'
| `-ElaboratedType 0x55755ae6f490 'union pthread_barrierattr_t' sugar
|   `-RecordType 0x55755ae6f350 'pthread_barrierattr_t'
|     `-Record 0x55755ae6f2d0 ''
|-TypedefDecl 0x55755ae6f608 <line:314:1, col:29> col:18 referenced __jmp_buf 'long [8]'
| `-ConstantArrayType 0x55755ae6f5a0 'long [8]' 8 
|   `-BuiltinType 0x55755adf0f30 'long'
|-EnumDecl 0x55755ae6f660 <line:315:1, line:319:1> line:315:1
| |-EnumConstantDecl 0x55755ae6f728 <line:317:3> col:3 PTHREAD_CREATE_JOINABLE 'int'
| `-EnumConstantDecl 0x55755ae6f778 <line:318:3> col:3 PTHREAD_CREATE_DETACHED 'int'
|-EnumDecl 0x55755ae6f7c8 <line:320:1, line:331:1> line:320:1
| |-EnumConstantDecl 0x55755ae6f898 <line:322:3> col:3 referenced PTHREAD_MUTEX_TIMED_NP 'int'
| |-EnumConstantDecl 0x55755ae6f8e8 <line:323:3> col:3 referenced PTHREAD_MUTEX_RECURSIVE_NP 'int'
| |-EnumConstantDecl 0x55755ae6f938 <line:324:3> col:3 referenced PTHREAD_MUTEX_ERRORCHECK_NP 'int'
| |-EnumConstantDecl 0x55755ae6f988 <line:325:3> col:3 PTHREAD_MUTEX_ADAPTIVE_NP 'int'
| |-EnumConstantDecl 0x55755ae6fa10 <line:327:3, col:26> col:3 referenced PTHREAD_MUTEX_NORMAL 'int'
| | `-ConstantExpr 0x55755ae6f9f8 <col:26> 'int'
| |   `-DeclRefExpr 0x55755ae6f9d8 <col:26> 'int' EnumConstant 0x55755ae6f898 'PTHREAD_MUTEX_TIMED_NP' 'int'
| |-EnumConstantDecl 0x55755ae6fa98 <line:328:3, col:29> col:3 PTHREAD_MUTEX_RECURSIVE 'int'
| | `-ConstantExpr 0x55755ae6fa80 <col:29> 'int'
| |   `-DeclRefExpr 0x55755ae6fa60 <col:29> 'int' EnumConstant 0x55755ae6f8e8 'PTHREAD_MUTEX_RECURSIVE_NP' 'int'
| |-EnumConstantDecl 0x55755ae6fb20 <line:329:3, col:30> col:3 PTHREAD_MUTEX_ERRORCHECK 'int'
| | `-ConstantExpr 0x55755ae6fb08 <col:30> 'int'
| |   `-DeclRefExpr 0x55755ae6fae8 <col:30> 'int' EnumConstant 0x55755ae6f938 'PTHREAD_MUTEX_ERRORCHECK_NP' 'int'
| `-EnumConstantDecl 0x55755ae6fba8 <line:330:3, col:27> col:3 PTHREAD_MUTEX_DEFAULT 'int'
|   `-ConstantExpr 0x55755ae6fb90 <col:27> 'int'
|     `-DeclRefExpr 0x55755ae6fb70 <col:27> 'int' EnumConstant 0x55755ae6fa10 'PTHREAD_MUTEX_NORMAL' 'int'
|-EnumDecl 0x55755ae6fbf8 <line:332:1, line:338:1> line:332:1
| |-EnumConstantDecl 0x55755ae6fcc8 <line:334:3> col:3 referenced PTHREAD_MUTEX_STALLED 'int'
| |-EnumConstantDecl 0x55755ae6fd50 <line:335:3, col:30> col:3 PTHREAD_MUTEX_STALLED_NP 'int'
| | `-ConstantExpr 0x55755ae6fd38 <col:30> 'int'
| |   `-DeclRefExpr 0x55755ae6fd18 <col:30> 'int' EnumConstant 0x55755ae6fcc8 'PTHREAD_MUTEX_STALLED' 'int'
| |-EnumConstantDecl 0x55755ae6fda0 <line:336:3> col:3 referenced PTHREAD_MUTEX_ROBUST 'int'
| `-EnumConstantDecl 0x55755ae6fe28 <line:337:3, col:29> col:3 PTHREAD_MUTEX_ROBUST_NP 'int'
|   `-ConstantExpr 0x55755ae6fe10 <col:29> 'int'
|     `-DeclRefExpr 0x55755ae6fdf0 <col:29> 'int' EnumConstant 0x55755ae6fda0 'PTHREAD_MUTEX_ROBUST' 'int'
|-EnumDecl 0x55755ae6fe78 <line:339:1, line:344:1> line:339:1
| |-EnumConstantDecl 0x55755ae6ff48 <line:341:3> col:3 PTHREAD_PRIO_NONE 'int'
| |-EnumConstantDecl 0x55755ae6ff98 <line:342:3> col:3 PTHREAD_PRIO_INHERIT 'int'
| `-EnumConstantDecl 0x55755ae6ffe8 <line:343:3> col:3 PTHREAD_PRIO_PROTECT 'int'
|-EnumDecl 0x55755ae70038 <line:345:1, line:351:1> line:345:1
| |-EnumConstantDecl 0x55755ae70150 <line:347:3> col:3 referenced PTHREAD_RWLOCK_PREFER_READER_NP 'int'
| |-EnumConstantDecl 0x55755ae701a0 <line:348:3> col:3 PTHREAD_RWLOCK_PREFER_WRITER_NP 'int'
| |-EnumConstantDecl 0x55755ae701f0 <line:349:3> col:3 PTHREAD_RWLOCK_PREFER_WRITER_NONRECURSIVE_NP 'int'
| `-EnumConstantDecl 0x55755ae70278 <line:350:3, col:31> col:3 PTHREAD_RWLOCK_DEFAULT_NP 'int'
|   `-ConstantExpr 0x55755ae70260 <col:31> 'int'
|     `-DeclRefExpr 0x55755ae70240 <col:31> 'int' EnumConstant 0x55755ae70150 'PTHREAD_RWLOCK_PREFER_READER_NP' 'int'
|-EnumDecl 0x55755ae702c8 <line:352:1, line:356:1> line:352:1
| |-EnumConstantDecl 0x55755ae70398 <line:354:3> col:3 PTHREAD_INHERIT_SCHED 'int'
| `-EnumConstantDecl 0x55755ae703e8 <line:355:3> col:3 PTHREAD_EXPLICIT_SCHED 'int'
|-EnumDecl 0x55755ae70438 <line:357:1, line:361:1> line:357:1
| |-EnumConstantDecl 0x55755ae70508 <line:359:3> col:3 PTHREAD_SCOPE_SYSTEM 'int'
| `-EnumConstantDecl 0x55755ae70558 <line:360:3> col:3 PTHREAD_SCOPE_PROCESS 'int'
|-EnumDecl 0x55755ae705a8 <line:362:1, line:366:1> line:362:1
| |-EnumConstantDecl 0x55755ae70678 <line:364:3> col:3 PTHREAD_PROCESS_PRIVATE 'int'
| `-EnumConstantDecl 0x55755ae706c8 <line:365:3> col:3 PTHREAD_PROCESS_SHARED 'int'
|-RecordDecl 0x55755ae70718 <line:367:1, line:373:1> line:367:8 struct _pthread_cleanup_buffer definition
| |-FieldDecl 0x55755ae70958 <line:369:3, col:28> col:10 __routine 'void (*)(void *)'
| |-FieldDecl 0x55755ae709c0 <line:370:3, col:9> col:9 __arg 'void *'
| |-FieldDecl 0x55755ae70a28 <line:371:3, col:7> col:7 __canceltype 'int'
| `-FieldDecl 0x55755ae70b48 <line:372:3, col:35> col:35 __prev 'struct _pthread_cleanup_buffer *'
|-EnumDecl 0x55755ae70b98 <line:374:1, line:378:1> line:374:1
| |-EnumConstantDecl 0x55755ae70c68 <line:376:3> col:3 PTHREAD_CANCEL_ENABLE 'int'
| `-EnumConstantDecl 0x55755ae70cb8 <line:377:3> col:3 PTHREAD_CANCEL_DISABLE 'int'
|-EnumDecl 0x55755ae70d08 <line:379:1, line:383:1> line:379:1
| |-EnumConstantDecl 0x55755ae70dd8 <line:381:3> col:3 PTHREAD_CANCEL_DEFERRED 'int'
| `-EnumConstantDecl 0x55755ae70e28 <line:382:3> col:3 PTHREAD_CANCEL_ASYNCHRONOUS 'int'
|-FunctionDecl 0x55755ae71488 <line:385:1, line:388:96> line:385:12 used pthread_create 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' extern
| |-ParmVarDecl 0x55755ae70f20 <col:28, col:50> col:50 __newthread 'pthread_t *restrict'
| |-ParmVarDecl 0x55755ae71030 <line:386:7, col:40> col:40 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x55755ae71270 <line:387:7, col:39> col:15 __start_routine 'void *(*)(void *)'
| |-ParmVarDecl 0x55755ae712f0 <line:388:7, col:24> col:24 __arg 'void *restrict'
| |-NoThrowAttr 0x55755ae71548 <col:47>
| |-NonNullAttr 0x55755ae715a0 <col:77, col:94> 1 3
| `-CallbackAttr 0x55755ae715d8 <line:385:12> Implicit 2 3
|-FunctionDecl 0x55755ae71700 <line:389:1, col:72> col:13 pthread_exit 'void (void *) __attribute__((noreturn))' extern
| `-ParmVarDecl 0x55755ae71630 <col:27, col:33> col:33 __retval 'void *'
|-FunctionDecl 0x55755ae71958 <line:390:1, col:64> col:12 pthread_join 'int (pthread_t, void **)' extern
| |-ParmVarDecl 0x55755ae717b8 <col:26, col:36> col:36 __th 'pthread_t':'unsigned long'
| `-ParmVarDecl 0x55755ae71838 <col:42, col:49> col:49 __thread_return 'void **'
|-FunctionDecl 0x55755ae71b28 <line:391:1, col:83> col:12 pthread_detach 'int (pthread_t)' extern
| |-ParmVarDecl 0x55755ae71a18 <col:28, col:38> col:38 __th 'pthread_t':'unsigned long'
| `-NoThrowAttr 0x55755ae71bd0 <col:60>
|-FunctionDecl 0x55755ae71d20 <line:392:1, col:105> col:18 pthread_self 'pthread_t (void)' extern
| |-NoThrowAttr 0x55755ae71dc0 <col:54>
| `-ConstAttr 0x55755ae71e18 <col:95>
|-FunctionDecl 0x55755ae71fe8 <line:393:1, line:394:70> line:393:12 pthread_equal 'int (pthread_t, pthread_t)' extern
| |-ParmVarDecl 0x55755ae71e50 <col:27, col:37> col:37 __thread1 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x55755ae71ec8 <col:48, col:58> col:58 __thread2 'pthread_t':'unsigned long'
| |-NoThrowAttr 0x55755ae72098 <line:394:19>
| `-ConstAttr 0x55755ae720f0 <col:60>
|-FunctionDecl 0x55755ae73b08 <line:395:1, col:128> col:12 pthread_attr_init 'int (pthread_attr_t *)' extern
| |-ParmVarDecl 0x55755ae739d0 <col:31, col:47> col:47 __attr 'pthread_attr_t *'
| |-NoThrowAttr 0x55755ae73bb0 <col:71>
| `-NonNullAttr 0x55755ae73c08 <col:112, col:126> 1
|-FunctionDecl 0x55755ae73d10 <line:396:1, line:397:79> line:396:12 pthread_attr_destroy 'int (pthread_attr_t *)' extern
| |-ParmVarDecl 0x55755ae73c58 <col:34, col:50> col:50 __attr 'pthread_attr_t *'
| |-NoThrowAttr 0x55755ae73db8 <line:397:22>
| `-NonNullAttr 0x55755ae73e10 <col:63, col:77> 1
|-FunctionDecl 0x55755ae74038 <line:398:1, line:400:82> line:398:12 pthread_attr_getdetachstate 'int (const pthread_attr_t *, int *)' extern
| |-ParmVarDecl 0x55755ae73e58 <col:41, col:63> col:63 __attr 'const pthread_attr_t *'
| |-ParmVarDecl 0x55755ae73ed8 <line:399:6, col:11> col:11 __detachstate 'int *'
| |-NoThrowAttr 0x55755ae740e8 <line:400:22>
| `-NonNullAttr 0x55755ae74140 <col:63, col:80> 1 2
|-FunctionDecl 0x55755ae74348 <line:401:1, line:403:79> line:401:12 pthread_attr_setdetachstate 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x55755ae74188 <col:41, col:57> col:57 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x55755ae74208 <line:402:6, col:10> col:10 __detachstate 'int'
| |-NoThrowAttr 0x55755ae743f8 <line:403:22>
| `-NonNullAttr 0x55755ae74450 <col:63, col:77> 1
|-FunctionDecl 0x55755ae746a8 <line:404:1, line:406:82> line:404:12 pthread_attr_getguardsize 'int (const pthread_attr_t *, size_t *)' extern
| |-ParmVarDecl 0x55755ae74498 <col:39, col:61> col:61 __attr 'const pthread_attr_t *'
| |-ParmVarDecl 0x55755ae74540 <line:405:11, col:19> col:19 __guardsize 'size_t *'
| |-NoThrowAttr 0x55755ae74758 <line:406:22>
| `-NonNullAttr 0x55755ae747b0 <col:63, col:80> 1 2
|-FunctionDecl 0x55755ae759e8 <line:407:1, line:409:79> line:407:12 pthread_attr_setguardsize 'int (pthread_attr_t *, size_t)' extern
| |-ParmVarDecl 0x55755ae747f8 <col:39, col:55> col:55 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x55755ae74870 <line:408:11, col:18> col:18 __guardsize 'size_t':'unsigned long'
| |-NoThrowAttr 0x55755ae75a98 <line:409:22>
| `-NonNullAttr 0x55755ae75af0 <col:63, col:77> 1
|-FunctionDecl 0x55755ae75d28 <line:410:1, line:412:82> line:410:12 pthread_attr_getschedparam 'int (const pthread_attr_t *restrict, struct sched_param *restrict)' extern
| |-ParmVarDecl 0x55755ae75b38 <col:40, col:73> col:73 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x55755ae75bc8 <line:411:12, col:43> col:43 __param 'struct sched_param *restrict'
| |-NoThrowAttr 0x55755ae75dd8 <line:412:22>
| `-NonNullAttr 0x55755ae75e30 <col:63, col:80> 1 2
|-FunctionDecl 0x55755ae76068 <line:413:1, line:415:97> line:413:12 pthread_attr_setschedparam 'int (pthread_attr_t *restrict, const struct sched_param *restrict)' extern
| |-ParmVarDecl 0x55755ae75e78 <col:40, col:67> col:67 __attr 'pthread_attr_t *restrict'
| |-ParmVarDecl 0x55755ae75f08 <line:414:12, line:415:12> col:12 __param 'const struct sched_param *restrict'
| |-NoThrowAttr 0x55755ae76118 <col:37>
| `-NonNullAttr 0x55755ae76170 <col:78, col:95> 1 2
|-FunctionDecl 0x55755ae76358 <line:416:1, line:418:82> line:416:12 pthread_attr_getschedpolicy 'int (const pthread_attr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x55755ae761b8 <col:41, line:417:6> col:6 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x55755ae76238 <col:14, col:30> col:30 __policy 'int *restrict'
| |-NoThrowAttr 0x55755ae76408 <line:418:22>
| `-NonNullAttr 0x55755ae76460 <col:63, col:80> 1 2
|-FunctionDecl 0x55755ae765e8 <line:419:1, line:420:79> line:419:12 pthread_attr_setschedpolicy 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x55755ae764a8 <col:41, col:57> col:57 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x55755ae76528 <col:65, col:69> col:69 __policy 'int'
| |-NoThrowAttr 0x55755ae76698 <line:420:22>
| `-NonNullAttr 0x55755ae766f0 <col:63, col:77> 1
|-FunctionDecl 0x55755ae76898 <line:421:1, line:423:82> line:421:12 pthread_attr_getinheritsched 'int (const pthread_attr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x55755ae76738 <col:42, line:422:7> col:7 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x55755ae767b8 <col:15, col:31> col:31 __inherit 'int *restrict'
| |-NoThrowAttr 0x55755ae76948 <line:423:22>
| `-NonNullAttr 0x55755ae769c0 <col:63, col:80> 1 2
|-FunctionDecl 0x55755ae76b48 <line:424:1, line:426:79> line:424:12 pthread_attr_setinheritsched 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x55755ae76a08 <col:42, col:58> col:58 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x55755ae76a88 <line:425:7, col:11> col:11 __inherit 'int'
| |-NoThrowAttr 0x55755ae76bf8 <line:426:22>
| `-NonNullAttr 0x55755ae76c50 <col:63, col:77> 1
|-FunctionDecl 0x55755ae76df8 <line:427:1, line:429:82> line:427:12 pthread_attr_getscope 'int (const pthread_attr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x55755ae76c98 <col:35, col:68> col:68 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x55755ae76d18 <line:428:7, col:23> col:23 __scope 'int *restrict'
| |-NoThrowAttr 0x55755ae76ea8 <line:429:22>
| `-NonNullAttr 0x55755ae76f00 <col:63, col:80> 1 2
|-FunctionDecl 0x55755ae77088 <line:430:1, line:431:79> line:430:12 pthread_attr_setscope 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x55755ae76f48 <col:35, col:51> col:51 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x55755ae76fc8 <col:59, col:63> col:63 __scope 'int'
| |-NoThrowAttr 0x55755ae77138 <line:431:22>
| `-NonNullAttr 0x55755ae77190 <col:63, col:77> 1
|-FunctionDecl 0x55755ae773b8 <line:432:1, line:434:115> line:432:12 pthread_attr_getstackaddr 'int (const pthread_attr_t *restrict, void **restrict)' extern
| |-ParmVarDecl 0x55755ae771d8 <col:39, line:433:11> col:11 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x55755ae77258 <col:19, col:37> col:37 __stackaddr 'void **restrict'
| |-NoThrowAttr 0x55755ae77468 <line:434:22>
| |-NonNullAttr 0x55755ae774c0 <col:63, col:80> 1 2
| `-DeprecatedAttr 0x55755ae774f8 <col:100> "" ""
|-FunctionDecl 0x55755ae77708 <line:435:1, line:437:112> line:435:12 pthread_attr_setstackaddr 'int (pthread_attr_t *, void *)' extern
| |-ParmVarDecl 0x55755ae77548 <col:39, col:55> col:55 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x55755ae775c8 <line:436:11, col:17> col:17 __stackaddr 'void *'
| |-NoThrowAttr 0x55755ae777b8 <line:437:22>
| |-NonNullAttr 0x55755ae77810 <col:63, col:77> 1
| `-DeprecatedAttr 0x55755ae77848 <col:97> "" ""
|-FunctionDecl 0x55755ae77a48 <line:438:1, line:440:82> line:438:12 pthread_attr_getstacksize 'int (const pthread_attr_t *restrict, size_t *restrict)' extern
| |-ParmVarDecl 0x55755ae77898 <col:39, line:439:11> col:11 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x55755ae77910 <col:19, col:38> col:38 __stacksize 'size_t *restrict'
| |-NoThrowAttr 0x55755ae77af8 <line:440:22>
| `-NonNullAttr 0x55755ae77b50 <col:63, col:80> 1 2
|-FunctionDecl 0x55755ae77cd0 <line:441:1, line:443:79> line:441:12 pthread_attr_setstacksize 'int (pthread_attr_t *, size_t)' extern
| |-ParmVarDecl 0x55755ae77b98 <col:39, col:55> col:55 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x55755ae77c10 <line:442:11, col:18> col:18 __stacksize 'size_t':'unsigned long'
| |-NoThrowAttr 0x55755ae77d80 <line:443:22>
| `-NonNullAttr 0x55755ae77dd8 <col:63, col:77> 1
|-FunctionDecl 0x55755ae780c8 <line:444:1, line:447:85> line:444:12 pthread_attr_getstack 'int (const pthread_attr_t *restrict, void **restrict, size_t *restrict)' extern
| |-ParmVarDecl 0x55755ae77e28 <col:35, col:68> col:68 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x55755ae77ea8 <line:445:7, col:25> col:25 __stackaddr 'void **restrict'
| |-ParmVarDecl 0x55755ae77f20 <line:446:7, col:26> col:26 __stacksize 'size_t *restrict'
| |-NoThrowAttr 0x55755ae78180 <line:447:22>
| `-NonNullAttr 0x55755ae781d8 <col:63, col:83> 1 2 3
|-FunctionDecl 0x55755ae78488 <line:448:1, line:449:100> line:448:12 pthread_attr_setstack 'int (pthread_attr_t *, void *, size_t)' extern
| |-ParmVarDecl 0x55755ae78230 <col:35, col:51> col:51 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x55755ae782b0 <col:59, col:65> col:65 __stackaddr 'void *'
| |-ParmVarDecl 0x55755ae78328 <line:449:7, col:14> col:14 __stacksize 'size_t':'unsigned long'
| |-NoThrowAttr 0x55755ae78540 <col:43>
| `-NonNullAttr 0x55755ae78598 <col:84, col:98> 1
|-FunctionDecl 0x55755ae78858 <line:450:1, line:452:79> line:450:12 pthread_setschedparam 'int (pthread_t, int, const struct sched_param *)' extern
| |-ParmVarDecl 0x55755ae785e8 <col:35, col:45> col:45 __target_thread 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x55755ae78668 <col:62, col:66> col:66 __policy 'int'
| |-ParmVarDecl 0x55755ae786f8 <line:451:7, col:33> col:33 __param 'const struct sched_param *'
| |-NoThrowAttr 0x55755ae78910 <line:452:22>
| `-NonNullAttr 0x55755ae78968 <col:63, col:77> 3
|-FunctionDecl 0x55755ae78c78 <line:453:1, line:456:82> line:453:12 pthread_getschedparam 'int (pthread_t, int *restrict, struct sched_param *restrict)' extern
| |-ParmVarDecl 0x55755ae789e0 <col:35, col:45> col:45 __target_thread 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x55755ae78a60 <line:454:7, col:23> col:23 __policy 'int *restrict'
| |-ParmVarDecl 0x55755ae78af0 <line:455:7, col:38> col:38 __param 'struct sched_param *restrict'
| |-NoThrowAttr 0x55755ae78d30 <line:456:22>
| `-NonNullAttr 0x55755ae78d88 <col:63, col:80> 2 3
|-FunctionDecl 0x55755ae78f78 <line:457:1, line:458:45> line:457:12 pthread_setschedprio 'int (pthread_t, int)' extern
| |-ParmVarDecl 0x55755ae78dd8 <col:34, col:44> col:44 __target_thread 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x55755ae78e58 <col:61, col:65> col:65 __prio 'int'
| `-NoThrowAttr 0x55755ae79028 <line:458:22>
|-FunctionDecl 0x55755ae793f8 <line:459:1, line:460:71> line:459:12 pthread_once 'int (pthread_once_t *, void (*)(void))' extern
| |-ParmVarDecl 0x55755ae790f0 <col:26, col:42> col:42 __once_control 'pthread_once_t *'
| |-ParmVarDecl 0x55755ae79290 <line:460:5, col:33> col:12 __init_routine 'void (*)(void)'
| `-NonNullAttr 0x55755ae794a8 <col:52, col:69> 1 2
|-FunctionDecl 0x55755ae79650 <line:461:1, col:64> col:12 pthread_setcancelstate 'int (int, int *)' extern
| |-ParmVarDecl 0x55755ae79530 <col:36, col:40> col:40 __state 'int'
| `-ParmVarDecl 0x55755ae795b0 <col:49, col:54> col:54 __oldstate 'int *'
|-FunctionDecl 0x55755ae79838 <line:462:1, col:61> col:12 pthread_setcanceltype 'int (int, int *)' extern
| |-ParmVarDecl 0x55755ae79718 <col:35, col:39> col:39 __type 'int'
| `-ParmVarDecl 0x55755ae79798 <col:47, col:52> col:52 __oldtype 'int *'
|-FunctionDecl 0x55755ae799f0 <line:463:1, col:42> col:12 pthread_cancel 'int (pthread_t)' extern
| `-ParmVarDecl 0x55755ae798f8 <col:28, col:38> col:38 __th 'pthread_t':'unsigned long'
|-FunctionDecl 0x55755ae79b30 <line:464:1, col:37> col:13 pthread_testcancel 'void (void)' extern
|-RecordDecl 0x55755ae79bd0 <line:465:9, line:473:1> line:465:9 struct definition
| |-RecordDecl 0x55755ae79c78 <line:467:3, line:471:3> line:467:3 struct definition
| | |-FieldDecl 0x55755ae79d68 <line:469:5, col:15> col:15 __cancel_jmp_buf '__jmp_buf':'long [8]'
| | `-FieldDecl 0x55755ae79dd0 <line:470:5, col:9> col:9 __mask_was_saved 'int'
| |-FieldDecl 0x55755ae79fa0 <line:467:3, line:471:23> col:5 __cancel_jmp_buf 'struct (anonymous struct at ./split_0/mix020_pso.opt_false-unreach-call.i:467:3) [1]'
| `-FieldDecl 0x55755ae7a098 <line:472:3, col:16> col:9 __pad 'void *[4]'
|-TypedefDecl 0x55755ae7a150 <line:465:1, line:473:3> col:3 referenced __pthread_unwind_buf_t 'struct __pthread_unwind_buf_t':'__pthread_unwind_buf_t'
| |-ElaboratedType 0x55755ae7a0f0 'struct __pthread_unwind_buf_t' sugar
| | `-RecordType 0x55755ae79c50 '__pthread_unwind_buf_t'
| |   `-Record 0x55755ae79bd0 ''
| `-AlignedAttr 0x55755ae7a1a8 <col:42> aligned
|   `-<<<NULL>>>
|-RecordDecl 0x55755ae7a220 <line:474:1, line:480:1> line:474:8 struct __pthread_cleanup_frame definition
| |-FieldDecl 0x55755ae7a380 <line:476:3, col:35> col:10 __cancel_routine 'void (*)(void *)'
| |-FieldDecl 0x55755ae7a3e8 <line:477:3, col:9> col:9 __cancel_arg 'void *'
| |-FieldDecl 0x55755ae7a450 <line:478:3, col:7> col:7 __do_it 'int'
| `-FieldDecl 0x55755ae7a4b8 <line:479:3, col:7> col:7 __cancel_type 'int'
|-FunctionDecl 0x55755ae7a6c0 <line:481:1, col:69> col:13 __pthread_register_cancel 'void (__pthread_unwind_buf_t *)' extern
| `-ParmVarDecl 0x55755ae7a5b0 <col:40, col:64> col:64 __buf '__pthread_unwind_buf_t *'
|-FunctionDecl 0x55755ae7a808 <line:483:1, col:71> col:13 __pthread_unregister_cancel 'void (__pthread_unwind_buf_t *)' extern
| `-ParmVarDecl 0x55755ae7a778 <col:42, col:66> col:66 __buf '__pthread_unwind_buf_t *'
|-FunctionDecl 0x55755ae7aa00 <line:485:1, line:487:31> line:485:13 __pthread_unwind_next 'void (__pthread_unwind_buf_t *) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x55755ae7a8c0 <col:36, col:60> col:60 __buf '__pthread_unwind_buf_t *'
| `-WeakAttr 0x55755ae7aaa8 <line:487:22>
|-RecordDecl 0x55755ae7ab00 <line:489:1, col:8> col:8 struct __jmp_buf_tag
|-FunctionDecl 0x55755ae7ae18 <line:490:1, col:98> col:12 __sigsetjmp 'int (struct __jmp_buf_tag *, int)' extern
| |-ParmVarDecl 0x55755ae7ac78 <col:25, col:47> col:47 __env 'struct __jmp_buf_tag *'
| |-ParmVarDecl 0x55755ae7acf8 <col:54, col:58> col:58 __savemask 'int'
| |-NoThrowAttr 0x55755ae7aec8 <col:86>
| `-ReturnsTwiceAttr 0x55755ae7af20 <col:12> Implicit
|-FunctionDecl 0x55755ae7b248 <line:491:1, line:493:79> line:491:12 pthread_mutex_init 'int (pthread_mutex_t *, const pthread_mutexattr_t *)' extern
| |-ParmVarDecl 0x55755ae7aff0 <col:32, col:49> col:49 __mutex 'pthread_mutex_t *'
| |-ParmVarDecl 0x55755ae7b100 <line:492:11, col:38> col:38 __mutexattr 'const pthread_mutexattr_t *'
| |-NoThrowAttr 0x55755ae7b2f8 <line:493:22>
| `-NonNullAttr 0x55755ae7b350 <col:63, col:77> 1
|-FunctionDecl 0x55755ae7b4c8 <line:494:1, line:495:79> line:494:12 pthread_mutex_destroy 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x55755ae7b398 <col:35, col:52> col:52 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x55755ae7b570 <line:495:22>
| `-NonNullAttr 0x55755ae7b5c8 <col:63, col:77> 1
|-FunctionDecl 0x55755ae7b6d0 <line:496:1, line:497:68> line:496:12 pthread_mutex_trylock 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x55755ae7b618 <col:35, col:52> col:52 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x55755ae7b778 <line:497:22>
| `-NonNullAttr 0x55755ae7b7d0 <col:52, col:66> 1
|-FunctionDecl 0x55755ae7b8d0 <line:498:1, line:499:68> line:498:12 pthread_mutex_lock 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x55755ae7b818 <col:32, col:49> col:49 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x55755ae7b978 <line:499:22>
| `-NonNullAttr 0x55755ae7b9d0 <col:52, col:66> 1
|-FunctionDecl 0x55755ae7cc28 <line:500:1, line:502:85> line:500:12 pthread_mutex_timedlock 'int (pthread_mutex_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x55755ae7ca38 <col:37, col:65> col:65 __mutex 'pthread_mutex_t *restrict'
| |-ParmVarDecl 0x55755ae7cac8 <line:501:9, line:502:9> col:9 __abstime 'const struct timespec *restrict'
| |-NoThrowAttr 0x55755ae7ccd8 <col:36>
| `-NonNullAttr 0x55755ae7cd30 <col:66, col:83> 1 2
|-FunctionDecl 0x55755ae7ce30 <line:503:1, line:504:68> line:503:12 pthread_mutex_unlock 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x55755ae7cd78 <col:34, col:51> col:51 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x55755ae7ced8 <line:504:22>
| `-NonNullAttr 0x55755ae7cf30 <col:52, col:66> 1
|-FunctionDecl 0x55755ae7d1c8 <line:505:1, line:508:82> line:505:12 pthread_mutex_getprioceiling 'int (const pthread_mutex_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x55755ae7cfe0 <col:42, line:506:18> col:18 __mutex 'const pthread_mutex_t *restrict'
| |-ParmVarDecl 0x55755ae7d060 <line:507:7, col:23> col:23 __prioceiling 'int *restrict'
| |-NoThrowAttr 0x55755ae7d278 <line:508:22>
| `-NonNullAttr 0x55755ae7d2d0 <col:63, col:80> 1 2
|-FunctionDecl 0x55755ae7d598 <line:509:1, line:512:82> line:509:12 pthread_mutex_setprioceiling 'int (pthread_mutex_t *restrict, int, int *restrict)' extern
| |-ParmVarDecl 0x55755ae7d318 <col:42, col:70> col:70 __mutex 'pthread_mutex_t *restrict'
| |-ParmVarDecl 0x55755ae7d398 <line:510:7, col:11> col:11 __prioceiling 'int'
| |-ParmVarDecl 0x55755ae7d418 <line:511:7, col:23> col:23 __old_ceiling 'int *restrict'
| |-NoThrowAttr 0x55755ae7d650 <line:512:22>
| `-NonNullAttr 0x55755ae7d6a8 <col:63, col:80> 1 3
|-FunctionDecl 0x55755ae7d7b0 <line:513:1, line:514:79> line:513:12 pthread_mutex_consistent 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x55755ae7d6f8 <col:38, col:55> col:55 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x55755ae7d858 <line:514:22>
| `-NonNullAttr 0x55755ae7d8b0 <col:63, col:77> 1
|-FunctionDecl 0x55755ae7dad8 <line:515:1, line:516:79> line:515:12 pthread_mutexattr_init 'int (pthread_mutexattr_t *)' extern
| |-ParmVarDecl 0x55755ae7d960 <col:36, col:57> col:57 __attr 'pthread_mutexattr_t *'
| |-NoThrowAttr 0x55755ae7db80 <line:516:22>
| `-NonNullAttr 0x55755ae7dbd8 <col:63, col:77> 1
|-FunctionDecl 0x55755ae7dce0 <line:517:1, line:518:79> line:517:12 pthread_mutexattr_destroy 'int (pthread_mutexattr_t *)' extern
| |-ParmVarDecl 0x55755ae7dc28 <col:39, col:60> col:60 __attr 'pthread_mutexattr_t *'
| |-NoThrowAttr 0x55755ae7dd88 <line:518:22>
| `-NonNullAttr 0x55755ae7dde0 <col:63, col:77> 1
|-FunctionDecl 0x55755ae7e008 <line:519:1, line:522:82> line:519:12 pthread_mutexattr_getpshared 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x55755ae7de28 <col:42, line:520:18> col:18 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x55755ae7dea8 <line:521:7, col:23> col:23 __pshared 'int *restrict'
| |-NoThrowAttr 0x55755ae7e0b8 <line:522:22>
| `-NonNullAttr 0x55755ae7e110 <col:63, col:80> 1 2
|-FunctionDecl 0x55755ae7e318 <line:523:1, line:525:79> line:523:12 pthread_mutexattr_setpshared 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x55755ae7e158 <col:42, col:63> col:63 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x55755ae7e1d8 <line:524:7, col:11> col:11 __pshared 'int'
| |-NoThrowAttr 0x55755ae7e3c8 <line:525:22>
| `-NonNullAttr 0x55755ae7e420 <col:63, col:77> 1
|-FunctionDecl 0x55755ae7e5c8 <line:526:1, line:528:82> line:526:12 pthread_mutexattr_gettype 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x55755ae7e468 <col:39, line:527:11> col:11 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x55755ae7e4e8 <col:19, col:35> col:35 __kind 'int *restrict'
| |-NoThrowAttr 0x55755ae7e678 <line:528:22>
| `-NonNullAttr 0x55755ae7e6d0 <col:63, col:80> 1 2
|-FunctionDecl 0x55755ae7e858 <line:529:1, line:530:79> line:529:12 pthread_mutexattr_settype 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x55755ae7e718 <col:39, col:60> col:60 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x55755ae7e798 <col:68, col:72> col:72 __kind 'int'
| |-NoThrowAttr 0x55755ae7e908 <line:530:22>
| `-NonNullAttr 0x55755ae7e960 <col:63, col:77> 1
|-FunctionDecl 0x55755ae7eb20 <line:531:1, line:534:82> line:531:12 pthread_mutexattr_getprotocol 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x55755ae7e9a8 <col:43, line:532:19> col:19 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x55755ae7ea40 <line:533:8, col:24> col:24 __protocol 'int *restrict'
| |-NoThrowAttr 0x55755ae7ebd0 <line:534:22>
| `-NonNullAttr 0x55755ae7ec28 <col:63, col:80> 1 2
|-FunctionDecl 0x55755ae7edb8 <line:535:1, line:537:79> line:535:12 pthread_mutexattr_setprotocol 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x55755ae7ec78 <col:43, col:64> col:64 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x55755ae7ecf8 <line:536:8, col:12> col:12 __protocol 'int'
| |-NoThrowAttr 0x55755ae7ee68 <line:537:22>
| `-NonNullAttr 0x55755ae7eec0 <col:63, col:77> 1
|-FunctionDecl 0x55755ae7f068 <line:538:1, line:541:82> line:538:12 pthread_mutexattr_getprioceiling 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x55755ae7ef08 <col:46, line:539:22> col:22 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x55755ae7ef88 <line:540:11, col:27> col:27 __prioceiling 'int *restrict'
| |-NoThrowAttr 0x55755ae7f118 <line:541:22>
| `-NonNullAttr 0x55755ae7f170 <col:63, col:80> 1 2
|-FunctionDecl 0x55755ae7f2f8 <line:542:1, line:544:79> line:542:12 pthread_mutexattr_setprioceiling 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x55755ae7f1b8 <col:46, col:67> col:67 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x55755ae7f238 <line:543:11, col:15> col:15 __prioceiling 'int'
| |-NoThrowAttr 0x55755ae7f3a8 <line:544:22>
| `-NonNullAttr 0x55755ae7f400 <col:63, col:77> 1
|-FunctionDecl 0x55755ae7f5e8 <line:545:1, line:547:82> line:545:12 pthread_mutexattr_getrobust 'int (const pthread_mutexattr_t *, int *)' extern
| |-ParmVarDecl 0x55755ae7f448 <col:41, col:68> col:68 __attr 'const pthread_mutexattr_t *'
| |-ParmVarDecl 0x55755ae7f4c8 <line:546:6, col:11> col:11 __robustness 'int *'
| |-NoThrowAttr 0x55755ae7f698 <line:547:22>
| `-NonNullAttr 0x55755ae7f6f0 <col:63, col:80> 1 2
|-FunctionDecl 0x55755ae7f878 <line:548:1, line:550:79> line:548:12 pthread_mutexattr_setrobust 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x55755ae7f738 <col:41, col:62> col:62 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x55755ae7f7b8 <line:549:6, col:10> col:10 __robustness 'int'
| |-NoThrowAttr 0x55755ae7f928 <line:550:22>
| `-NonNullAttr 0x55755ae7f980 <col:63, col:77> 1
|-FunctionDecl 0x55755ae80cf8 <line:551:1, line:553:86> line:551:12 pthread_rwlock_init 'int (pthread_rwlock_t *restrict, const pthread_rwlockattr_t *restrict)' extern
| |-ParmVarDecl 0x55755ae80aa0 <col:33, col:62> col:62 __rwlock 'pthread_rwlock_t *restrict'
| |-ParmVarDecl 0x55755ae80bb0 <line:552:5, line:553:5> col:5 __attr 'const pthread_rwlockattr_t *restrict'
| |-NoThrowAttr 0x55755ae80da8 <col:29>
| `-NonNullAttr 0x55755ae80e00 <col:70, col:84> 1
|-FunctionDecl 0x55755ae80f78 <line:554:1, line:555:79> line:554:12 pthread_rwlock_destroy 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x55755ae80e48 <col:36, col:54> col:54 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x55755ae81020 <line:555:22>
| `-NonNullAttr 0x55755ae81078 <col:63, col:77> 1
|-FunctionDecl 0x55755ae81180 <line:556:1, line:557:68> line:556:12 pthread_rwlock_rdlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x55755ae810c8 <col:35, col:53> col:53 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x55755ae81228 <line:557:22>
| `-NonNullAttr 0x55755ae81280 <col:52, col:66> 1
|-FunctionDecl 0x55755ae81380 <line:558:1, line:559:65> line:558:12 pthread_rwlock_tryrdlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x55755ae812c8 <col:38, col:56> col:56 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x55755ae81428 <line:559:19>
| `-NonNullAttr 0x55755ae81480 <col:49, col:63> 1
|-FunctionDecl 0x55755ae816b8 <line:560:1, line:562:88> line:560:12 pthread_rwlock_timedrdlock 'int (pthread_rwlock_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x55755ae814c8 <col:40, col:69> col:69 __rwlock 'pthread_rwlock_t *restrict'
| |-ParmVarDecl 0x55755ae81558 <line:561:12, line:562:12> col:12 __abstime 'const struct timespec *restrict'
| |-NoThrowAttr 0x55755ae81768 <col:39>
| `-NonNullAttr 0x55755ae817c0 <col:69, col:86> 1 2
|-FunctionDecl 0x55755ae818c0 <line:563:1, line:564:68> line:563:12 pthread_rwlock_wrlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x55755ae81808 <col:35, col:53> col:53 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x55755ae81968 <line:564:22>
| `-NonNullAttr 0x55755ae819c0 <col:52, col:66> 1
|-FunctionDecl 0x55755ae81b28 <line:565:1, line:566:68> line:565:12 pthread_rwlock_trywrlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x55755ae81a70 <col:38, col:56> col:56 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x55755ae81bd0 <line:566:22>
| `-NonNullAttr 0x55755ae81c28 <col:52, col:66> 1
|-FunctionDecl 0x55755ae81de8 <line:567:1, line:569:88> line:567:12 pthread_rwlock_timedwrlock 'int (pthread_rwlock_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x55755ae81c78 <col:40, col:69> col:69 __rwlock 'pthread_rwlock_t *restrict'
| |-ParmVarDecl 0x55755ae81d08 <line:568:12, line:569:12> col:12 __abstime 'const struct timespec *restrict'
| |-NoThrowAttr 0x55755ae81e98 <col:39>
| `-NonNullAttr 0x55755ae81ef0 <col:69, col:86> 1 2
|-FunctionDecl 0x55755ae81ff0 <line:570:1, line:571:68> line:570:12 pthread_rwlock_unlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x55755ae81f38 <col:35, col:53> col:53 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x55755ae82098 <line:571:22>
| `-NonNullAttr 0x55755ae820f0 <col:52, col:66> 1
|-FunctionDecl 0x55755ae822d8 <line:572:1, line:573:79> line:572:12 pthread_rwlockattr_init 'int (pthread_rwlockattr_t *)' extern
| |-ParmVarDecl 0x55755ae821a0 <col:37, col:59> col:59 __attr 'pthread_rwlockattr_t *'
| |-NoThrowAttr 0x55755ae82380 <line:573:22>
| `-NonNullAttr 0x55755ae823d8 <col:63, col:77> 1
|-FunctionDecl 0x55755ae824e0 <line:574:1, line:575:79> line:574:12 pthread_rwlockattr_destroy 'int (pthread_rwlockattr_t *)' extern
| |-ParmVarDecl 0x55755ae82428 <col:40, col:62> col:62 __attr 'pthread_rwlockattr_t *'
| |-NoThrowAttr 0x55755ae82588 <line:575:22>
| `-NonNullAttr 0x55755ae825e0 <col:63, col:77> 1
|-FunctionDecl 0x55755ae82808 <line:576:1, line:579:82> line:576:12 pthread_rwlockattr_getpshared 'int (const pthread_rwlockattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x55755ae82628 <col:43, line:577:19> col:19 __attr 'const pthread_rwlockattr_t *restrict'
| |-ParmVarDecl 0x55755ae826a8 <line:578:8, col:24> col:24 __pshared 'int *restrict'
| |-NoThrowAttr 0x55755ae828b8 <line:579:22>
| `-NonNullAttr 0x55755ae82910 <col:63, col:80> 1 2
|-FunctionDecl 0x55755ae82b38 <line:580:1, line:582:79> line:580:12 pthread_rwlockattr_setpshared 'int (pthread_rwlockattr_t *, int)' extern
| |-ParmVarDecl 0x55755ae82958 <col:43, col:65> col:65 __attr 'pthread_rwlockattr_t *'
| |-ParmVarDecl 0x55755ae829d8 <line:581:8, col:12> col:12 __pshared 'int'
| |-NoThrowAttr 0x55755ae82be8 <line:582:22>
| `-NonNullAttr 0x55755ae82c40 <col:63, col:77> 1
|-FunctionDecl 0x55755ae82de8 <line:583:1, line:586:82> line:583:12 pthread_rwlockattr_getkind_np 'int (const pthread_rwlockattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x55755ae82c88 <col:43, line:584:19> col:19 __attr 'const pthread_rwlockattr_t *restrict'
| |-ParmVarDecl 0x55755ae82d08 <line:585:8, col:24> col:24 __pref 'int *restrict'
| |-NoThrowAttr 0x55755ae82e98 <line:586:22>
| `-NonNullAttr 0x55755ae82ef0 <col:63, col:80> 1 2
|-FunctionDecl 0x55755ae83078 <line:587:1, line:588:93> line:587:12 pthread_rwlockattr_setkind_np 'int (pthread_rwlockattr_t *, int)' extern
| |-ParmVarDecl 0x55755ae82f38 <col:43, col:65> col:65 __attr 'pthread_rwlockattr_t *'
| |-ParmVarDecl 0x55755ae82fb8 <line:588:8, col:12> col:12 __pref 'int'
| |-NoThrowAttr 0x55755ae83128 <col:36>
| `-NonNullAttr 0x55755ae83180 <col:77, col:91> 1
|-FunctionDecl 0x55755ae834b8 <line:589:1, line:591:79> line:589:12 pthread_cond_init 'int (pthread_cond_t *restrict, const pthread_condattr_t *restrict)' extern
| |-ParmVarDecl 0x55755ae83260 <col:31, col:58> col:58 __cond 'pthread_cond_t *restrict'
| |-ParmVarDecl 0x55755ae83370 <line:590:10, col:47> col:47 __cond_attr 'const pthread_condattr_t *restrict'
| |-NoThrowAttr 0x55755ae83568 <line:591:22>
| `-NonNullAttr 0x55755ae835c0 <col:63, col:77> 1
|-FunctionDecl 0x55755ae83738 <line:592:1, line:593:79> line:592:12 pthread_cond_destroy 'int (pthread_cond_t *)' extern
| |-ParmVarDecl 0x55755ae83608 <col:34, col:50> col:50 __cond 'pthread_cond_t *'
| |-NoThrowAttr 0x55755ae837e0 <line:593:22>
| `-NonNullAttr 0x55755ae83838 <col:63, col:77> 1
|-FunctionDecl 0x55755ae83940 <line:594:1, line:595:68> line:594:12 pthread_cond_signal 'int (pthread_cond_t *)' extern
| |-ParmVarDecl 0x55755ae83888 <col:33, col:49> col:49 __cond 'pthread_cond_t *'
| |-NoThrowAttr 0x55755ae839e8 <line:595:22>
| `-NonNullAttr 0x55755ae83a40 <col:52, col:66> 1
|-FunctionDecl 0x55755ae83b58 <line:596:1, line:597:68> line:596:12 pthread_cond_broadcast 'int (pthread_cond_t *)' extern
| |-ParmVarDecl 0x55755ae83aa0 <col:36, col:52> col:52 __cond 'pthread_cond_t *'
| |-NoThrowAttr 0x55755ae83c00 <line:597:22>
| `-NonNullAttr 0x55755ae83c58 <col:52, col:66> 1
|-FunctionDecl 0x55755ae83e88 <line:598:1, line:600:41> line:598:12 pthread_cond_wait 'int (pthread_cond_t *restrict, pthread_mutex_t *restrict)' extern
| |-ParmVarDecl 0x55755ae83ca8 <col:31, col:58> col:58 __cond 'pthread_cond_t *restrict'
| |-ParmVarDecl 0x55755ae83d20 <line:599:10, col:38> col:38 __mutex 'pthread_mutex_t *restrict'
| `-NonNullAttr 0x55755ae83f38 <line:600:22, col:39> 1 2
|-FunctionDecl 0x55755ae84268 <line:601:1, line:604:44> line:601:12 pthread_cond_timedwait 'int (pthread_cond_t *restrict, pthread_mutex_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x55755ae83fb8 <col:36, col:63> col:63 __cond 'pthread_cond_t *restrict'
| |-ParmVarDecl 0x55755ae84030 <line:602:8, col:36> col:36 __mutex 'pthread_mutex_t *restrict'
| |-ParmVarDecl 0x55755ae840c0 <line:603:8, col:42> col:42 __abstime 'const struct timespec *restrict'
| `-NonNullAttr 0x55755ae84320 <line:604:22, col:42> 1 2 3
|-FunctionDecl 0x55755ae84538 <line:605:1, line:606:79> line:605:12 pthread_condattr_init 'int (pthread_condattr_t *)' extern
| |-ParmVarDecl 0x55755ae84400 <col:35, col:55> col:55 __attr 'pthread_condattr_t *'
| |-NoThrowAttr 0x55755ae845e0 <line:606:22>
| `-NonNullAttr 0x55755ae84638 <col:63, col:77> 1
|-FunctionDecl 0x55755ae84740 <line:607:1, line:608:79> line:607:12 pthread_condattr_destroy 'int (pthread_condattr_t *)' extern
| |-ParmVarDecl 0x55755ae84688 <col:38, col:58> col:58 __attr 'pthread_condattr_t *'
| |-NoThrowAttr 0x55755ae847e8 <line:608:22>
| `-NonNullAttr 0x55755ae84840 <col:63, col:77> 1
|-FunctionDecl 0x55755ae84aa0 <line:609:1, line:612:82> line:609:12 pthread_condattr_getpshared 'int (const pthread_condattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x55755ae84888 <col:41, line:610:17> col:17 __attr 'const pthread_condattr_t *restrict'
| |-ParmVarDecl 0x55755ae84908 <line:611:6, col:22> col:22 __pshared 'int *restrict'
| |-NoThrowAttr 0x55755ae84b50 <line:612:22>
| `-NonNullAttr 0x55755ae84ba8 <col:63, col:80> 1 2
|-FunctionDecl 0x55755ae84db8 <line:613:1, line:614:94> line:613:12 pthread_condattr_setpshared 'int (pthread_condattr_t *, int)' extern
| |-ParmVarDecl 0x55755ae84bf8 <col:41, col:61> col:61 __attr 'pthread_condattr_t *'
| |-ParmVarDecl 0x55755ae84c78 <line:614:6, col:10> col:10 __pshared 'int'
| |-NoThrowAttr 0x55755ae84e68 <col:37>
| `-NonNullAttr 0x55755ae84ec0 <col:78, col:92> 1
|-FunctionDecl 0x55755ae850d8 <line:615:1, line:618:82> line:615:12 pthread_condattr_getclock 'int (const pthread_condattr_t *restrict, __clockid_t *restrict)' extern
| |-ParmVarDecl 0x55755ae84f08 <col:39, line:616:22> col:22 __attr 'const pthread_condattr_t *restrict'
| |-ParmVarDecl 0x55755ae84fb0 <line:617:11, col:35> col:35 __clock_id '__clockid_t *restrict'
| |-NoThrowAttr 0x55755ae85188 <line:618:22>
| `-NonNullAttr 0x55755ae851e0 <col:63, col:80> 1 2
|-FunctionDecl 0x55755ae853a8 <line:619:1, line:621:79> line:619:12 pthread_condattr_setclock 'int (pthread_condattr_t *, __clockid_t)' extern
| |-ParmVarDecl 0x55755ae85228 <col:39, col:59> col:59 __attr 'pthread_condattr_t *'
| |-ParmVarDecl 0x55755ae852a0 <line:620:11, col:23> col:23 __clock_id '__clockid_t':'int'
| |-NoThrowAttr 0x55755ae85458 <line:621:22>
| `-NonNullAttr 0x55755ae854b0 <col:63, col:77> 1
|-FunctionDecl 0x55755ae85758 <line:622:1, line:623:79> line:622:12 pthread_spin_init 'int (pthread_spinlock_t *, int)' extern
| |-ParmVarDecl 0x55755ae85590 <col:31, col:51> col:51 __lock 'pthread_spinlock_t *'
| |-ParmVarDecl 0x55755ae85610 <col:59, col:63> col:63 __pshared 'int'
| |-NoThrowAttr 0x55755ae85808 <line:623:22>
| `-NonNullAttr 0x55755ae85860 <col:63, col:77> 1
|-FunctionDecl 0x55755ae859d8 <line:624:1, line:625:79> line:624:12 pthread_spin_destroy 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x55755ae858a8 <col:34, col:54> col:54 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x55755ae85ab0 <line:625:22>
| `-NonNullAttr 0x55755ae85b08 <col:63, col:77> 1
|-FunctionDecl 0x55755ae85c10 <line:626:1, line:627:68> line:626:12 pthread_spin_lock 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x55755ae85b58 <col:31, col:51> col:51 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x55755ae85cb8 <line:627:22>
| `-NonNullAttr 0x55755ae85d10 <col:52, col:66> 1
|-FunctionDecl 0x55755ae85e10 <line:628:1, line:629:68> line:628:12 pthread_spin_trylock 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x55755ae85d58 <col:34, col:54> col:54 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x55755ae85eb8 <line:629:22>
| `-NonNullAttr 0x55755ae85f10 <col:52, col:66> 1
|-FunctionDecl 0x55755ae86010 <line:630:1, line:631:68> line:630:12 pthread_spin_unlock 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x55755ae85f58 <col:33, col:53> col:53 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x55755ae860b8 <line:631:22>
| `-NonNullAttr 0x55755ae86110 <col:52, col:66> 1
|-FunctionDecl 0x55755ae864e8 <line:632:1, line:635:79> line:632:12 pthread_barrier_init 'int (pthread_barrier_t *restrict, const pthread_barrierattr_t *restrict, unsigned int)' extern
| |-ParmVarDecl 0x55755ae861f0 <col:34, col:64> col:64 __barrier 'pthread_barrier_t *restrict'
| |-ParmVarDecl 0x55755ae86300 <line:633:6, line:634:6> col:6 __attr 'const pthread_barrierattr_t *restrict'
| |-ParmVarDecl 0x55755ae86380 <col:14, col:27> col:27 __count 'unsigned int'
| |-NoThrowAttr 0x55755ae865a0 <line:635:22>
| `-NonNullAttr 0x55755ae865f8 <col:63, col:77> 1
|-FunctionDecl 0x55755ae86778 <line:636:1, line:637:79> line:636:12 pthread_barrier_destroy 'int (pthread_barrier_t *)' extern
| |-ParmVarDecl 0x55755ae86648 <col:37, col:56> col:56 __barrier 'pthread_barrier_t *'
| |-NoThrowAttr 0x55755ae86820 <line:637:22>
| `-NonNullAttr 0x55755ae86878 <col:63, col:77> 1
|-FunctionDecl 0x55755ae86980 <line:638:1, line:639:68> line:638:12 pthread_barrier_wait 'int (pthread_barrier_t *)' extern
| |-ParmVarDecl 0x55755ae868c8 <col:34, col:53> col:53 __barrier 'pthread_barrier_t *'
| |-NoThrowAttr 0x55755ae86a28 <line:639:22>
| `-NonNullAttr 0x55755ae86a80 <col:52, col:66> 1
|-FunctionDecl 0x55755ae87c88 <line:640:1, line:641:79> line:640:12 pthread_barrierattr_init 'int (pthread_barrierattr_t *)' extern
| |-ParmVarDecl 0x55755ae87b50 <col:38, col:61> col:61 __attr 'pthread_barrierattr_t *'
| |-NoThrowAttr 0x55755ae87d30 <line:641:22>
| `-NonNullAttr 0x55755ae87d88 <col:63, col:77> 1
|-FunctionDecl 0x55755ae87e90 <line:642:1, line:643:79> line:642:12 pthread_barrierattr_destroy 'int (pthread_barrierattr_t *)' extern
| |-ParmVarDecl 0x55755ae87dd8 <col:41, col:64> col:64 __attr 'pthread_barrierattr_t *'
| |-NoThrowAttr 0x55755ae87f38 <line:643:22>
| `-NonNullAttr 0x55755ae87f90 <col:63, col:77> 1
|-FunctionDecl 0x55755ae881b8 <line:644:1, line:647:82> line:644:12 pthread_barrierattr_getpshared 'int (const pthread_barrierattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x55755ae87fd8 <col:44, line:645:20> col:20 __attr 'const pthread_barrierattr_t *restrict'
| |-ParmVarDecl 0x55755ae88058 <line:646:9, col:25> col:25 __pshared 'int *restrict'
| |-NoThrowAttr 0x55755ae88268 <line:647:22>
| `-NonNullAttr 0x55755ae882c0 <col:63, col:80> 1 2
|-FunctionDecl 0x55755ae884c8 <line:648:1, line:650:79> line:648:12 pthread_barrierattr_setpshared 'int (pthread_barrierattr_t *, int)' extern
| |-ParmVarDecl 0x55755ae88308 <col:44, col:67> col:67 __attr 'pthread_barrierattr_t *'
| |-ParmVarDecl 0x55755ae88388 <line:649:9, col:13> col:13 __pshared 'int'
| |-NoThrowAttr 0x55755ae88578 <line:650:22>
| `-NonNullAttr 0x55755ae885d0 <col:63, col:77> 1
|-FunctionDecl 0x55755ae88918 <line:651:1, line:653:79> line:651:12 pthread_key_create 'int (pthread_key_t *, void (*)(void *))' extern
| |-ParmVarDecl 0x55755ae886b0 <col:32, col:47> col:47 __key 'pthread_key_t *'
| |-ParmVarDecl 0x55755ae887d0 <line:652:11, col:43> col:18 __destr_function 'void (*)(void *)'
| |-NoThrowAttr 0x55755ae889c8 <line:653:22>
| `-NonNullAttr 0x55755ae88a20 <col:63, col:77> 1
|-FunctionDecl 0x55755ae88b88 <line:654:1, col:92> col:12 pthread_key_delete 'int (pthread_key_t)' extern
| |-ParmVarDecl 0x55755ae88a68 <col:32, col:46> col:46 __key 'pthread_key_t':'unsigned int'
| `-NoThrowAttr 0x55755ae88c30 <col:69>
|-FunctionDecl 0x55755ae88da8 <line:655:1, col:95> col:14 pthread_getspecific 'void *(pthread_key_t)' extern
| |-ParmVarDecl 0x55755ae88c98 <col:35, col:49> col:49 __key 'pthread_key_t':'unsigned int'
| `-NoThrowAttr 0x55755ae88e50 <col:72>
|-FunctionDecl 0x55755ae89088 <line:656:1, line:657:67> line:656:12 pthread_setspecific 'int (pthread_key_t, const void *)' extern
| |-ParmVarDecl 0x55755ae88eb8 <col:33, col:47> col:47 __key 'pthread_key_t':'unsigned int'
| |-ParmVarDecl 0x55755ae88f68 <line:657:5, col:17> col:17 __pointer 'const void *'
| `-NoThrowAttr 0x55755ae89138 <col:44>
|-FunctionDecl 0x55755ae89358 <line:658:1, line:660:79> line:658:12 pthread_getcpuclockid 'int (pthread_t, __clockid_t *)' extern
| |-ParmVarDecl 0x55755ae891a0 <col:35, col:45> col:45 __thread_id 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x55755ae89218 <line:659:7, col:20> col:20 __clock_id '__clockid_t *'
| |-NoThrowAttr 0x55755ae89408 <line:660:22>
| `-NonNullAttr 0x55755ae89460 <col:63, col:77> 2
|-FunctionDecl 0x55755ae898a8 <line:661:1, line:663:70> line:661:12 pthread_atfork 'int (void (*)(void), void (*)(void), void (*)(void))' extern
| |-ParmVarDecl 0x55755ae89540 <col:28, col:51> col:35 __prepare 'void (*)(void)'
| |-ParmVarDecl 0x55755ae89650 <line:662:7, col:29> col:14 __parent 'void (*)(void)'
| |-ParmVarDecl 0x55755ae89760 <line:663:7, col:28> col:14 __child 'void (*)(void)'
| `-NoThrowAttr 0x55755ae89960 <col:47>
|-FunctionDecl 0x55755ae89af0 <line:665:1, col:20> col:8 used P0 'void *(void *)'
| `-ParmVarDecl 0x55755ae899d0 <col:11, col:17> col:17 arg 'void *'
|-FunctionDecl 0x55755ae89c48 <line:666:1, col:20> col:8 used P1 'void *(void *)'
| `-ParmVarDecl 0x55755ae89bb0 <col:11, col:17> col:17 arg 'void *'
|-FunctionDecl 0x55755ae89da0 <line:667:1, col:20> col:8 used P2 'void *(void *)'
| `-ParmVarDecl 0x55755ae89d08 <col:11, col:17> col:17 arg 'void *'
|-FunctionDecl 0x55755ae89ef8 <line:668:1, col:20> col:8 used P3 'void *(void *)'
| `-ParmVarDecl 0x55755ae89e60 <col:11, col:17> col:17 arg 'void *'
|-FunctionDecl 0x55755ae89fc0 <line:669:1, col:12> col:6 fence 'void ()'
|-FunctionDecl 0x55755ae8a080 <line:670:1, col:12> col:6 isync 'void ()'
|-FunctionDecl 0x55755ae8a140 <line:671:1, col:14> col:6 lwfence 'void ()'
|-VarDecl 0x55755ae8a1f8 <line:672:1, col:5> col:5 used __unbuffered_cnt 'int'
|-VarDecl 0x55755ae8a278 prev 0x55755ae8a1f8 <line:673:1, col:24> col:5 used __unbuffered_cnt 'int' cinit
| `-IntegerLiteral 0x55755ae8a2e0 <col:24> 'int' 0
|-VarDecl 0x55755ae8a318 <line:674:1, col:5> col:5 used __unbuffered_p0_EAX 'int'
|-VarDecl 0x55755ae8a398 prev 0x55755ae8a318 <line:675:1, col:27> col:5 used __unbuffered_p0_EAX 'int' cinit
| `-IntegerLiteral 0x55755ae8a400 <col:27> 'int' 0
|-VarDecl 0x55755ae8a438 <line:676:1, col:5> col:5 used __unbuffered_p2_EAX 'int'
|-VarDecl 0x55755ae8a4b8 prev 0x55755ae8a438 <line:677:1, col:27> col:5 used __unbuffered_p2_EAX 'int' cinit
| `-IntegerLiteral 0x55755ae8a520 <col:27> 'int' 0
|-VarDecl 0x55755ae8a558 <line:678:1, col:5> col:5 used __unbuffered_p3_EAX 'int'
|-VarDecl 0x55755ae8a5d8 prev 0x55755ae8a558 <line:679:1, col:27> col:5 used __unbuffered_p3_EAX 'int' cinit
| `-IntegerLiteral 0x55755ae8a640 <col:27> 'int' 0
|-VarDecl 0x55755ae8a678 <line:680:1, col:5> col:5 used __unbuffered_p3_EBX 'int'
|-VarDecl 0x55755ae8a6f8 prev 0x55755ae8a678 <line:681:1, col:27> col:5 used __unbuffered_p3_EBX 'int' cinit
| `-IntegerLiteral 0x55755ae8a760 <col:27> 'int' 0
|-VarDecl 0x55755ae8a798 <line:682:1, col:5> col:5 used a 'int'
|-VarDecl 0x55755ae8a818 prev 0x55755ae8a798 <line:683:1, col:9> col:5 used a 'int' cinit
| `-IntegerLiteral 0x55755ae8a880 <col:9> 'int' 0
|-VarDecl 0x55755ae8a8b0 <line:684:1, col:7> col:7 used main$tmp_guard0 '_Bool'
|-VarDecl 0x55755ae8a928 <line:685:1, col:7> col:7 used main$tmp_guard1 '_Bool'
|-VarDecl 0x55755ae8a9a8 <line:686:1, col:5> col:5 used x 'int'
|-VarDecl 0x55755ae8aa28 prev 0x55755ae8a9a8 <line:687:1, col:9> col:5 used x 'int' cinit
| `-IntegerLiteral 0x55755ae8aa90 <col:9> 'int' 0
|-VarDecl 0x55755ae8ab00 <line:688:1, col:5> col:5 used y 'int'
|-VarDecl 0x55755ae8ab80 prev 0x55755ae8ab00 <line:689:1, col:9> col:5 used y 'int' cinit
| `-IntegerLiteral 0x55755ae8abe8 <col:9> 'int' 0
|-VarDecl 0x55755ae8ac20 <line:690:1, col:5> col:5 used z 'int'
|-VarDecl 0x55755ae8aca0 prev 0x55755ae8ac20 <line:691:1, col:9> col:5 used z 'int' cinit
| `-IntegerLiteral 0x55755ae8ad08 <col:9> 'int' 0
|-VarDecl 0x55755ae8ad38 <line:692:1, col:7> col:7 used z$flush_delayed '_Bool'
|-VarDecl 0x55755ae8adb8 <line:693:1, col:5> col:5 used z$mem_tmp 'int'
|-VarDecl 0x55755ae8ae30 <line:694:1, col:7> col:7 used z$r_buff0_thd0 '_Bool'
|-VarDecl 0x55755ae8aea8 <line:695:1, col:7> col:7 used z$r_buff0_thd1 '_Bool'
|-VarDecl 0x55755ae8af20 <line:696:1, col:7> col:7 used z$r_buff0_thd2 '_Bool'
|-VarDecl 0x55755ae8af98 <line:697:1, col:7> col:7 used z$r_buff0_thd3 '_Bool'
|-VarDecl 0x55755ae8b010 <line:698:1, col:7> col:7 used z$r_buff0_thd4 '_Bool'
|-VarDecl 0x55755ae8b088 <line:699:1, col:7> col:7 used z$r_buff1_thd0 '_Bool'
|-VarDecl 0x55755ae8b100 <line:700:1, col:7> col:7 used z$r_buff1_thd1 '_Bool'
|-VarDecl 0x55755ae8b178 <line:701:1, col:7> col:7 used z$r_buff1_thd2 '_Bool'
|-VarDecl 0x55755ae8b1f0 <line:702:1, col:7> col:7 used z$r_buff1_thd3 '_Bool'
|-VarDecl 0x55755ae8b268 <line:703:1, col:7> col:7 used z$r_buff1_thd4 '_Bool'
|-VarDecl 0x55755ae8b2e0 <line:704:1, col:7> col:7 z$read_delayed '_Bool'
|-VarDecl 0x55755ae8b360 <line:705:1, col:6> col:6 z$read_delayed_var 'int *'
|-VarDecl 0x55755ae8b3e0 <line:706:1, col:5> col:5 used z$w_buff0 'int'
|-VarDecl 0x55755ae8b458 <line:707:1, col:7> col:7 used z$w_buff0_used '_Bool'
|-VarDecl 0x55755ae8b4d8 <line:708:1, col:5> col:5 used z$w_buff1 'int'
|-VarDecl 0x55755ae8b550 <line:709:1, col:7> col:7 used z$w_buff1_used '_Bool'
|-VarDecl 0x55755ae8b5c8 <line:710:1, col:7> col:7 used weak$$choice0 '_Bool'
|-VarDecl 0x55755ae8b640 <line:711:1, col:7> col:7 used weak$$choice2 '_Bool'
|-FunctionDecl 0x55755ae8b758 prev 0x55755ae89af0 <line:712:1, line:726:1> line:712:8 used P0 'void *(void *)'
| |-ParmVarDecl 0x55755ae8b6c0 <col:11, col:17> col:17 arg 'void *'
| `-CompoundStmt 0x55755ae8bd38 <line:713:1, line:726:1>
|   |-CallExpr 0x55755ae8b868 <line:714:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x55755ae8b850 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55755ae8b800 <col:3> 'void ()' Function 0x55755ae30e40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x55755ae8b8c8 <line:715:3, col:7> 'int' '='
|   | |-DeclRefExpr 0x55755ae8b888 <col:3> 'int' lvalue Var 0x55755ae8a818 'a' 'int'
|   | `-IntegerLiteral 0x55755ae8b8a8 <col:7> 'int' 1
|   |-CallExpr 0x55755ae8b920 <line:716:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x55755ae8b908 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55755ae8b8e8 <col:3> 'void ()' Function 0x55755ae30f00 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x55755ae8b978 <line:717:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x55755ae8b960 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55755ae8b940 <col:3> 'void ()' Function 0x55755ae30e40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x55755ae8b9f0 <line:718:3, col:25> 'int' '='
|   | |-DeclRefExpr 0x55755ae8b998 <col:3> 'int' lvalue Var 0x55755ae8a398 '__unbuffered_p0_EAX' 'int'
|   | `-ImplicitCastExpr 0x55755ae8b9d8 <col:25> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x55755ae8b9b8 <col:25> 'int' lvalue Var 0x55755ae8aa28 'x' 'int'
|   |-CallExpr 0x55755ae8ba48 <line:719:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x55755ae8ba30 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55755ae8ba10 <col:3> 'void ()' Function 0x55755ae30f00 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x55755ae8baa0 <line:720:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x55755ae8ba88 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55755ae8ba68 <col:3> 'void ()' Function 0x55755ae30e40 '__VERIFIER_atomic_begin' 'void ()'
|   |-CallExpr 0x55755ae8bb10 <line:721:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x55755ae8bae0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55755ae8bac0 <col:3> 'void ()' Function 0x55755ae30f00 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x55755ae8bb68 <line:722:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x55755ae8bb50 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55755ae8bb30 <col:3> 'void ()' Function 0x55755ae30e40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x55755ae8bc20 <line:723:3, col:41> 'int' '='
|   | |-DeclRefExpr 0x55755ae8bb88 <col:3> 'int' lvalue Var 0x55755ae8a278 '__unbuffered_cnt' 'int'
|   | `-BinaryOperator 0x55755ae8bc00 <col:22, col:41> 'int' '+'
|   |   |-ImplicitCastExpr 0x55755ae8bbe8 <col:22> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x55755ae8bba8 <col:22> 'int' lvalue Var 0x55755ae8a278 '__unbuffered_cnt' 'int'
|   |   `-IntegerLiteral 0x55755ae8bbc8 <col:41> 'int' 1
|   |-CallExpr 0x55755ae8bc78 <line:724:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x55755ae8bc60 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55755ae8bc40 <col:3> 'void ()' Function 0x55755ae30f00 '__VERIFIER_atomic_end' 'void ()'
|   `-ReturnStmt 0x55755ae8bd28 <line:725:3, col:36>
|     `-CallExpr 0x55755ae8bd08 <col:10, col:36> 'void *'
|       `-ImplicitCastExpr 0x55755ae8bcf0 <col:10> 'void *(*)(void)' <FunctionToPointerDecay>
|         `-DeclRefExpr 0x55755ae8bc98 <col:10> 'void *(void)' Function 0x55755ae30958 '__VERIFIER_nondet_pointer' 'void *(void)'
|-FunctionDecl 0x55755ae8be58 prev 0x55755ae89c48 <line:727:1, line:741:1> line:727:8 used P1 'void *(void *)'
| |-ParmVarDecl 0x55755ae8bdc0 <col:11, col:17> col:17 arg 'void *'
| `-CompoundStmt 0x55755ae8c3a0 <line:728:1, line:741:1>
|   |-CallExpr 0x55755ae8bf38 <line:729:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x55755ae8bf20 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55755ae8bf00 <col:3> 'void ()' Function 0x55755ae30e40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x55755ae8bf98 <line:730:3, col:7> 'int' '='
|   | |-DeclRefExpr 0x55755ae8bf58 <col:3> 'int' lvalue Var 0x55755ae8aa28 'x' 'int'
|   | `-IntegerLiteral 0x55755ae8bf78 <col:7> 'int' 1
|   |-CallExpr 0x55755ae8bff0 <line:731:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x55755ae8bfd8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55755ae8bfb8 <col:3> 'void ()' Function 0x55755ae30f00 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x55755ae8c048 <line:732:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x55755ae8c030 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55755ae8c010 <col:3> 'void ()' Function 0x55755ae30e40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x55755ae8c0a8 <line:733:3, col:7> 'int' '='
|   | |-DeclRefExpr 0x55755ae8c068 <col:3> 'int' lvalue Var 0x55755ae8ab80 'y' 'int'
|   | `-IntegerLiteral 0x55755ae8c088 <col:7> 'int' 1
|   |-CallExpr 0x55755ae8c100 <line:734:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x55755ae8c0e8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55755ae8c0c8 <col:3> 'void ()' Function 0x55755ae30f00 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x55755ae8c158 <line:735:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x55755ae8c140 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55755ae8c120 <col:3> 'void ()' Function 0x55755ae30e40 '__VERIFIER_atomic_begin' 'void ()'
|   |-CallExpr 0x55755ae8c1b0 <line:736:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x55755ae8c198 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55755ae8c178 <col:3> 'void ()' Function 0x55755ae30f00 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x55755ae8c208 <line:737:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x55755ae8c1f0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55755ae8c1d0 <col:3> 'void ()' Function 0x55755ae30e40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x55755ae8c2c0 <line:738:3, col:41> 'int' '='
|   | |-DeclRefExpr 0x55755ae8c228 <col:3> 'int' lvalue Var 0x55755ae8a278 '__unbuffered_cnt' 'int'
|   | `-BinaryOperator 0x55755ae8c2a0 <col:22, col:41> 'int' '+'
|   |   |-ImplicitCastExpr 0x55755ae8c288 <col:22> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x55755ae8c248 <col:22> 'int' lvalue Var 0x55755ae8a278 '__unbuffered_cnt' 'int'
|   |   `-IntegerLiteral 0x55755ae8c268 <col:41> 'int' 1
|   |-CallExpr 0x55755ae8c318 <line:739:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x55755ae8c300 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55755ae8c2e0 <col:3> 'void ()' Function 0x55755ae30f00 '__VERIFIER_atomic_end' 'void ()'
|   `-ReturnStmt 0x55755ae8c390 <line:740:3, col:36>
|     `-CallExpr 0x55755ae8c370 <col:10, col:36> 'void *'
|       `-ImplicitCastExpr 0x55755ae8c358 <col:10> 'void *(*)(void)' <FunctionToPointerDecay>
|         `-DeclRefExpr 0x55755ae8c338 <col:10> 'void *(void)' Function 0x55755ae30958 '__VERIFIER_nondet_pointer' 'void *(void)'
|-FunctionDecl 0x55755ae8c4c0 prev 0x55755ae89da0 <line:742:1, line:769:1> line:742:8 used P2 'void *(void *)'
| |-ParmVarDecl 0x55755ae8c428 <col:11, col:17> col:17 arg 'void *'
| `-CompoundStmt 0x55755ae8f3d0 <line:743:1, line:769:1>
|   |-CallExpr 0x55755ae8c5a0 <line:744:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x55755ae8c588 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55755ae8c568 <col:3> 'void ()' Function 0x55755ae30e40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x55755ae8c600 <line:745:3, col:7> 'int' '='
|   | |-DeclRefExpr 0x55755ae8c5c0 <col:3> 'int' lvalue Var 0x55755ae8ab80 'y' 'int'
|   | `-IntegerLiteral 0x55755ae8c5e0 <col:7> 'int' 2
|   |-CallExpr 0x55755ae8c658 <line:746:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x55755ae8c640 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55755ae8c620 <col:3> 'void ()' Function 0x55755ae30f00 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x55755ae8c6b0 <line:747:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x55755ae8c698 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55755ae8c678 <col:3> 'void ()' Function 0x55755ae30e40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x55755ae8c760 <line:748:3, col:45> '_Bool' '='
|   | |-DeclRefExpr 0x55755ae8c6d0 <col:3> '_Bool' lvalue Var 0x55755ae8b5c8 'weak$$choice0' '_Bool'
|   | `-ImplicitCastExpr 0x55755ae8c748 <col:19, col:45> '_Bool' <PointerToBoolean>
|   |   `-CallExpr 0x55755ae8c728 <col:19, col:45> 'void *'
|   |     `-ImplicitCastExpr 0x55755ae8c710 <col:19> 'void *(*)(void)' <FunctionToPointerDecay>
|   |       `-DeclRefExpr 0x55755ae8c6f0 <col:19> 'void *(void)' Function 0x55755ae30958 '__VERIFIER_nondet_pointer' 'void *(void)'
|   |-BinaryOperator 0x55755ae8c810 <line:749:3, col:45> '_Bool' '='
|   | |-DeclRefExpr 0x55755ae8c780 <col:3> '_Bool' lvalue Var 0x55755ae8b640 'weak$$choice2' '_Bool'
|   | `-ImplicitCastExpr 0x55755ae8c7f8 <col:19, col:45> '_Bool' <PointerToBoolean>
|   |   `-CallExpr 0x55755ae8c7d8 <col:19, col:45> 'void *'
|   |     `-ImplicitCastExpr 0x55755ae8c7c0 <col:19> 'void *(*)(void)' <FunctionToPointerDecay>
|   |       `-DeclRefExpr 0x55755ae8c7a0 <col:19> 'void *(void)' Function 0x55755ae30958 '__VERIFIER_nondet_pointer' 'void *(void)'
|   |-BinaryOperator 0x55755ae8c888 <line:750:3, col:21> '_Bool' '='
|   | |-DeclRefExpr 0x55755ae8c830 <col:3> '_Bool' lvalue Var 0x55755ae8ad38 'z$flush_delayed' '_Bool'
|   | `-ImplicitCastExpr 0x55755ae8c870 <col:21> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x55755ae8c850 <col:21> '_Bool' lvalue Var 0x55755ae8b640 'weak$$choice2' '_Bool'
|   |-BinaryOperator 0x55755ae8c900 <line:751:3, col:15> 'int' '='
|   | |-DeclRefExpr 0x55755ae8c8a8 <col:3> 'int' lvalue Var 0x55755ae8adb8 'z$mem_tmp' 'int'
|   | `-ImplicitCastExpr 0x55755ae8c8e8 <col:15> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x55755ae8c8c8 <col:15> 'int' lvalue Var 0x55755ae8aca0 'z' 'int'
|   |-BinaryOperator 0x55755ae8cd48 <line:752:3, col:162> 'int' '='
|   | |-DeclRefExpr 0x55755ae8c920 <col:3> 'int' lvalue Var 0x55755ae8aca0 'z' 'int'
|   | `-ConditionalOperator 0x55755ae8cd18 <col:7, col:162> 'int'
|   |   |-BinaryOperator 0x55755ae8cb40 <col:7, col:84> 'int' '||'
|   |   | |-BinaryOperator 0x55755ae8ca50 <col:7, col:46> 'int' '||'
|   |   | | |-UnaryOperator 0x55755ae8c978 <col:7, col:8> 'int' prefix '!' cannot overflow
|   |   | | | `-ImplicitCastExpr 0x55755ae8c960 <col:8> '_Bool' <LValueToRValue>
|   |   | | |   `-DeclRefExpr 0x55755ae8c940 <col:8> '_Bool' lvalue Var 0x55755ae8b458 'z$w_buff0_used' '_Bool'
|   |   | | `-BinaryOperator 0x55755ae8ca30 <col:26, col:46> 'int' '&&'
|   |   | |   |-UnaryOperator 0x55755ae8c9c8 <col:26, col:27> 'int' prefix '!' cannot overflow
|   |   | |   | `-ImplicitCastExpr 0x55755ae8c9b0 <col:27> '_Bool' <LValueToRValue>
|   |   | |   |   `-DeclRefExpr 0x55755ae8c990 <col:27> '_Bool' lvalue Var 0x55755ae8af98 'z$r_buff0_thd3' '_Bool'
|   |   | |   `-UnaryOperator 0x55755ae8ca18 <col:45, col:46> 'int' prefix '!' cannot overflow
|   |   | |     `-ImplicitCastExpr 0x55755ae8ca00 <col:46> '_Bool' <LValueToRValue>
|   |   | |       `-DeclRefExpr 0x55755ae8c9e0 <col:46> '_Bool' lvalue Var 0x55755ae8b550 'z$w_buff1_used' '_Bool'
|   |   | `-BinaryOperator 0x55755ae8cb20 <col:64, col:84> 'int' '&&'
|   |   |   |-UnaryOperator 0x55755ae8caa8 <col:64, col:65> 'int' prefix '!' cannot overflow
|   |   |   | `-ImplicitCastExpr 0x55755ae8ca90 <col:65> '_Bool' <LValueToRValue>
|   |   |   |   `-DeclRefExpr 0x55755ae8ca70 <col:65> '_Bool' lvalue Var 0x55755ae8af98 'z$r_buff0_thd3' '_Bool'
|   |   |   `-UnaryOperator 0x55755ae8caf8 <col:83, col:84> 'int' prefix '!' cannot overflow
|   |   |     `-ImplicitCastExpr 0x55755ae8cae0 <col:84> '_Bool' <LValueToRValue>
|   |   |       `-DeclRefExpr 0x55755ae8cac0 <col:84> '_Bool' lvalue Var 0x55755ae8b1f0 'z$r_buff1_thd3' '_Bool'
|   |   |-ImplicitCastExpr 0x55755ae8cd00 <col:101> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x55755ae8cb60 <col:101> 'int' lvalue Var 0x55755ae8aca0 'z' 'int'
|   |   `-ParenExpr 0x55755ae8cce0 <col:105, col:162> 'int'
|   |     `-ConditionalOperator 0x55755ae8ccb0 <col:106, col:153> 'int'
|   |       |-BinaryOperator 0x55755ae8cc20 <col:106, col:124> 'int' '&&'
|   |       | |-ImplicitCastExpr 0x55755ae8cbd8 <col:106> 'int' <IntegralCast>
|   |       | | `-ImplicitCastExpr 0x55755ae8cbc0 <col:106> '_Bool' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x55755ae8cb80 <col:106> '_Bool' lvalue Var 0x55755ae8b458 'z$w_buff0_used' '_Bool'
|   |       | `-ImplicitCastExpr 0x55755ae8cc08 <col:124> 'int' <IntegralCast>
|   |       |   `-ImplicitCastExpr 0x55755ae8cbf0 <col:124> '_Bool' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x55755ae8cba0 <col:124> '_Bool' lvalue Var 0x55755ae8af98 'z$r_buff0_thd3' '_Bool'
|   |       |-ImplicitCastExpr 0x55755ae8cc80 <col:141> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x55755ae8cc40 <col:141> 'int' lvalue Var 0x55755ae8b3e0 'z$w_buff0' 'int'
|   |       `-ImplicitCastExpr 0x55755ae8cc98 <col:153> 'int' <LValueToRValue>
|   |         `-DeclRefExpr 0x55755ae8cc60 <col:153> 'int' lvalue Var 0x55755ae8b4d8 'z$w_buff1' 'int'
|   |-BinaryOperator 0x55755ae8d258 <line:753:3, col:208> 'int' '='
|   | |-DeclRefExpr 0x55755ae8cd68 <col:3> 'int' lvalue Var 0x55755ae8b3e0 'z$w_buff0' 'int'
|   | `-ConditionalOperator 0x55755ae8d228 <col:15, col:208> 'int'
|   |   |-ImplicitCastExpr 0x55755ae8d1f8 <col:15> 'int' <IntegralCast>
|   |   | `-ImplicitCastExpr 0x55755ae8d1e0 <col:15> '_Bool' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x55755ae8cd88 <col:15> '_Bool' lvalue Var 0x55755ae8b640 'weak$$choice2' '_Bool'
|   |   |-ImplicitCastExpr 0x55755ae8d210 <col:31> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x55755ae8cda8 <col:31> 'int' lvalue Var 0x55755ae8b3e0 'z$w_buff0' 'int'
|   |   `-ParenExpr 0x55755ae8d1c0 <col:43, col:208> 'int'
|   |     `-ConditionalOperator 0x55755ae8d190 <col:44, col:207> 'int'
|   |       |-BinaryOperator 0x55755ae8cfb8 <col:44, col:121> 'int' '||'
|   |       | |-BinaryOperator 0x55755ae8ced8 <col:44, col:83> 'int' '||'
|   |       | | |-UnaryOperator 0x55755ae8ce00 <col:44, col:45> 'int' prefix '!' cannot overflow
|   |       | | | `-ImplicitCastExpr 0x55755ae8cde8 <col:45> '_Bool' <LValueToRValue>
|   |       | | |   `-DeclRefExpr 0x55755ae8cdc8 <col:45> '_Bool' lvalue Var 0x55755ae8b458 'z$w_buff0_used' '_Bool'
|   |       | | `-BinaryOperator 0x55755ae8ceb8 <col:63, col:83> 'int' '&&'
|   |       | |   |-UnaryOperator 0x55755ae8ce50 <col:63, col:64> 'int' prefix '!' cannot overflow
|   |       | |   | `-ImplicitCastExpr 0x55755ae8ce38 <col:64> '_Bool' <LValueToRValue>
|   |       | |   |   `-DeclRefExpr 0x55755ae8ce18 <col:64> '_Bool' lvalue Var 0x55755ae8af98 'z$r_buff0_thd3' '_Bool'
|   |       | |   `-UnaryOperator 0x55755ae8cea0 <col:82, col:83> 'int' prefix '!' cannot overflow
|   |       | |     `-ImplicitCastExpr 0x55755ae8ce88 <col:83> '_Bool' <LValueToRValue>
|   |       | |       `-DeclRefExpr 0x55755ae8ce68 <col:83> '_Bool' lvalue Var 0x55755ae8b550 'z$w_buff1_used' '_Bool'
|   |       | `-BinaryOperator 0x55755ae8cf98 <col:101, col:121> 'int' '&&'
|   |       |   |-UnaryOperator 0x55755ae8cf30 <col:101, col:102> 'int' prefix '!' cannot overflow
|   |       |   | `-ImplicitCastExpr 0x55755ae8cf18 <col:102> '_Bool' <LValueToRValue>
|   |       |   |   `-DeclRefExpr 0x55755ae8cef8 <col:102> '_Bool' lvalue Var 0x55755ae8af98 'z$r_buff0_thd3' '_Bool'
|   |       |   `-UnaryOperator 0x55755ae8cf80 <col:120, col:121> 'int' prefix '!' cannot overflow
|   |       |     `-ImplicitCastExpr 0x55755ae8cf68 <col:121> '_Bool' <LValueToRValue>
|   |       |       `-DeclRefExpr 0x55755ae8cf48 <col:121> '_Bool' lvalue Var 0x55755ae8b1f0 'z$r_buff1_thd3' '_Bool'
|   |       |-ImplicitCastExpr 0x55755ae8d178 <col:138> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x55755ae8cfd8 <col:138> 'int' lvalue Var 0x55755ae8b3e0 'z$w_buff0' 'int'
|   |       `-ParenExpr 0x55755ae8d158 <col:150, col:207> 'int'
|   |         `-ConditionalOperator 0x55755ae8d128 <col:151, col:198> 'int'
|   |           |-BinaryOperator 0x55755ae8d098 <col:151, col:169> 'int' '&&'
|   |           | |-ImplicitCastExpr 0x55755ae8d050 <col:151> 'int' <IntegralCast>
|   |           | | `-ImplicitCastExpr 0x55755ae8d038 <col:151> '_Bool' <LValueToRValue>
|   |           | |   `-DeclRefExpr 0x55755ae8cff8 <col:151> '_Bool' lvalue Var 0x55755ae8b458 'z$w_buff0_used' '_Bool'
|   |           | `-ImplicitCastExpr 0x55755ae8d080 <col:169> 'int' <IntegralCast>
|   |           |   `-ImplicitCastExpr 0x55755ae8d068 <col:169> '_Bool' <LValueToRValue>
|   |           |     `-DeclRefExpr 0x55755ae8d018 <col:169> '_Bool' lvalue Var 0x55755ae8af98 'z$r_buff0_thd3' '_Bool'
|   |           |-ImplicitCastExpr 0x55755ae8d0f8 <col:186> 'int' <LValueToRValue>
|   |           | `-DeclRefExpr 0x55755ae8d0b8 <col:186> 'int' lvalue Var 0x55755ae8b3e0 'z$w_buff0' 'int'
|   |           `-ImplicitCastExpr 0x55755ae8d110 <col:198> 'int' <LValueToRValue>
|   |             `-DeclRefExpr 0x55755ae8d0d8 <col:198> 'int' lvalue Var 0x55755ae8b3e0 'z$w_buff0' 'int'
|   |-BinaryOperator 0x55755ae8d768 <line:754:3, col:208> 'int' '='
|   | |-DeclRefExpr 0x55755ae8d278 <col:3> 'int' lvalue Var 0x55755ae8b4d8 'z$w_buff1' 'int'
|   | `-ConditionalOperator 0x55755ae8d738 <col:15, col:208> 'int'
|   |   |-ImplicitCastExpr 0x55755ae8d708 <col:15> 'int' <IntegralCast>
|   |   | `-ImplicitCastExpr 0x55755ae8d6f0 <col:15> '_Bool' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x55755ae8d298 <col:15> '_Bool' lvalue Var 0x55755ae8b640 'weak$$choice2' '_Bool'
|   |   |-ImplicitCastExpr 0x55755ae8d720 <col:31> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x55755ae8d2b8 <col:31> 'int' lvalue Var 0x55755ae8b4d8 'z$w_buff1' 'int'
|   |   `-ParenExpr 0x55755ae8d6d0 <col:43, col:208> 'int'
|   |     `-ConditionalOperator 0x55755ae8d6a0 <col:44, col:207> 'int'
|   |       |-BinaryOperator 0x55755ae8d4c8 <col:44, col:121> 'int' '||'
|   |       | |-BinaryOperator 0x55755ae8d3e8 <col:44, col:83> 'int' '||'
|   |       | | |-UnaryOperator 0x55755ae8d310 <col:44, col:45> 'int' prefix '!' cannot overflow
|   |       | | | `-ImplicitCastExpr 0x55755ae8d2f8 <col:45> '_Bool' <LValueToRValue>
|   |       | | |   `-DeclRefExpr 0x55755ae8d2d8 <col:45> '_Bool' lvalue Var 0x55755ae8b458 'z$w_buff0_used' '_Bool'
|   |       | | `-BinaryOperator 0x55755ae8d3c8 <col:63, col:83> 'int' '&&'
|   |       | |   |-UnaryOperator 0x55755ae8d360 <col:63, col:64> 'int' prefix '!' cannot overflow
|   |       | |   | `-ImplicitCastExpr 0x55755ae8d348 <col:64> '_Bool' <LValueToRValue>
|   |       | |   |   `-DeclRefExpr 0x55755ae8d328 <col:64> '_Bool' lvalue Var 0x55755ae8af98 'z$r_buff0_thd3' '_Bool'
|   |       | |   `-UnaryOperator 0x55755ae8d3b0 <col:82, col:83> 'int' prefix '!' cannot overflow
|   |       | |     `-ImplicitCastExpr 0x55755ae8d398 <col:83> '_Bool' <LValueToRValue>
|   |       | |       `-DeclRefExpr 0x55755ae8d378 <col:83> '_Bool' lvalue Var 0x55755ae8b550 'z$w_buff1_used' '_Bool'
|   |       | `-BinaryOperator 0x55755ae8d4a8 <col:101, col:121> 'int' '&&'
|   |       |   |-UnaryOperator 0x55755ae8d440 <col:101, col:102> 'int' prefix '!' cannot overflow
|   |       |   | `-ImplicitCastExpr 0x55755ae8d428 <col:102> '_Bool' <LValueToRValue>
|   |       |   |   `-DeclRefExpr 0x55755ae8d408 <col:102> '_Bool' lvalue Var 0x55755ae8af98 'z$r_buff0_thd3' '_Bool'
|   |       |   `-UnaryOperator 0x55755ae8d490 <col:120, col:121> 'int' prefix '!' cannot overflow
|   |       |     `-ImplicitCastExpr 0x55755ae8d478 <col:121> '_Bool' <LValueToRValue>
|   |       |       `-DeclRefExpr 0x55755ae8d458 <col:121> '_Bool' lvalue Var 0x55755ae8b1f0 'z$r_buff1_thd3' '_Bool'
|   |       |-ImplicitCastExpr 0x55755ae8d688 <col:138> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x55755ae8d4e8 <col:138> 'int' lvalue Var 0x55755ae8b4d8 'z$w_buff1' 'int'
|   |       `-ParenExpr 0x55755ae8d668 <col:150, col:207> 'int'
|   |         `-ConditionalOperator 0x55755ae8d638 <col:151, col:198> 'int'
|   |           |-BinaryOperator 0x55755ae8d5a8 <col:151, col:169> 'int' '&&'
|   |           | |-ImplicitCastExpr 0x55755ae8d560 <col:151> 'int' <IntegralCast>
|   |           | | `-ImplicitCastExpr 0x55755ae8d548 <col:151> '_Bool' <LValueToRValue>
|   |           | |   `-DeclRefExpr 0x55755ae8d508 <col:151> '_Bool' lvalue Var 0x55755ae8b458 'z$w_buff0_used' '_Bool'
|   |           | `-ImplicitCastExpr 0x55755ae8d590 <col:169> 'int' <IntegralCast>
|   |           |   `-ImplicitCastExpr 0x55755ae8d578 <col:169> '_Bool' <LValueToRValue>
|   |           |     `-DeclRefExpr 0x55755ae8d528 <col:169> '_Bool' lvalue Var 0x55755ae8af98 'z$r_buff0_thd3' '_Bool'
|   |           |-ImplicitCastExpr 0x55755ae8d608 <col:186> 'int' <LValueToRValue>
|   |           | `-DeclRefExpr 0x55755ae8d5c8 <col:186> 'int' lvalue Var 0x55755ae8b4d8 'z$w_buff1' 'int'
|   |           `-ImplicitCastExpr 0x55755ae8d620 <col:198> 'int' <LValueToRValue>
|   |             `-DeclRefExpr 0x55755ae8d5e8 <col:198> 'int' lvalue Var 0x55755ae8b4d8 'z$w_buff1' 'int'
|   |-BinaryOperator 0x55755ae8dd38 <line:755:3, col:227> '_Bool' '='
|   | |-DeclRefExpr 0x55755ae8d788 <col:3> '_Bool' lvalue Var 0x55755ae8b458 'z$w_buff0_used' '_Bool'
|   | `-ImplicitCastExpr 0x55755ae8dd20 <col:20, col:227> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55755ae8dcf0 <col:20, col:227> 'int'
|   |     |-ImplicitCastExpr 0x55755ae8dca8 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x55755ae8dc90 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x55755ae8d7a8 <col:20> '_Bool' lvalue Var 0x55755ae8b640 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x55755ae8dcd8 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x55755ae8dcc0 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x55755ae8d7c8 <col:36> '_Bool' lvalue Var 0x55755ae8b458 'z$w_buff0_used' '_Bool'
|   |     `-ParenExpr 0x55755ae8dc70 <col:53, col:227> 'int'
|   |       `-ConditionalOperator 0x55755ae8dc40 <col:54, col:226> 'int'
|   |         |-BinaryOperator 0x55755ae8d9d8 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x55755ae8d8f8 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x55755ae8d820 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x55755ae8d808 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x55755ae8d7e8 <col:55> '_Bool' lvalue Var 0x55755ae8b458 'z$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x55755ae8d8d8 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x55755ae8d870 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x55755ae8d858 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x55755ae8d838 <col:74> '_Bool' lvalue Var 0x55755ae8af98 'z$r_buff0_thd3' '_Bool'
|   |         | |   `-UnaryOperator 0x55755ae8d8c0 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x55755ae8d8a8 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x55755ae8d888 <col:93> '_Bool' lvalue Var 0x55755ae8b550 'z$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x55755ae8d9b8 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x55755ae8d950 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x55755ae8d938 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x55755ae8d918 <col:112> '_Bool' lvalue Var 0x55755ae8af98 'z$r_buff0_thd3' '_Bool'
|   |         |   `-UnaryOperator 0x55755ae8d9a0 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x55755ae8d988 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x55755ae8d968 <col:131> '_Bool' lvalue Var 0x55755ae8b1f0 'z$r_buff1_thd3' '_Bool'
|   |         |-ImplicitCastExpr 0x55755ae8dc28 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x55755ae8dc10 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x55755ae8d9f8 <col:148> '_Bool' lvalue Var 0x55755ae8b458 'z$w_buff0_used' '_Bool'
|   |         `-ParenExpr 0x55755ae8dbf0 <col:165, col:226> 'int'
|   |           `-ConditionalOperator 0x55755ae8dbc0 <col:166, col:212> 'int'
|   |             |-BinaryOperator 0x55755ae8dab8 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x55755ae8da70 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x55755ae8da58 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x55755ae8da18 <col:166> '_Bool' lvalue Var 0x55755ae8b458 'z$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x55755ae8daa0 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x55755ae8da88 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x55755ae8da38 <col:184> '_Bool' lvalue Var 0x55755ae8af98 'z$r_buff0_thd3' '_Bool'
|   |             |-ImplicitCastExpr 0x55755ae8db78 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x55755ae8db30 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x55755ae8dad8 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x55755ae8dba8 <col:212> 'int' <IntegralCast>
|   |               `-ImplicitCastExpr 0x55755ae8db90 <col:212> '_Bool' <LValueToRValue>
|   |                 `-DeclRefExpr 0x55755ae8db58 <col:212> '_Bool' lvalue Var 0x55755ae8b458 'z$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x55755ae8e300 <line:756:3, col:221> '_Bool' '='
|   | |-DeclRefExpr 0x55755ae8dd58 <col:3> '_Bool' lvalue Var 0x55755ae8b550 'z$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x55755ae8e2e8 <col:20, col:221> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55755ae8e2b8 <col:20, col:221> 'int'
|   |     |-ImplicitCastExpr 0x55755ae8e270 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x55755ae8e258 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x55755ae8dd78 <col:20> '_Bool' lvalue Var 0x55755ae8b640 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x55755ae8e2a0 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x55755ae8e288 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x55755ae8dd98 <col:36> '_Bool' lvalue Var 0x55755ae8b550 'z$w_buff1_used' '_Bool'
|   |     `-ParenExpr 0x55755ae8e238 <col:53, col:221> 'int'
|   |       `-ConditionalOperator 0x55755ae8e208 <col:54, col:220> 'int'
|   |         |-BinaryOperator 0x55755ae8dfa8 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x55755ae8dec8 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x55755ae8ddf0 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x55755ae8ddd8 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x55755ae8ddb8 <col:55> '_Bool' lvalue Var 0x55755ae8b458 'z$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x55755ae8dea8 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x55755ae8de40 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x55755ae8de28 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x55755ae8de08 <col:74> '_Bool' lvalue Var 0x55755ae8af98 'z$r_buff0_thd3' '_Bool'
|   |         | |   `-UnaryOperator 0x55755ae8de90 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x55755ae8de78 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x55755ae8de58 <col:93> '_Bool' lvalue Var 0x55755ae8b550 'z$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x55755ae8df88 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x55755ae8df20 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x55755ae8df08 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x55755ae8dee8 <col:112> '_Bool' lvalue Var 0x55755ae8af98 'z$r_buff0_thd3' '_Bool'
|   |         |   `-UnaryOperator 0x55755ae8df70 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x55755ae8df58 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x55755ae8df38 <col:131> '_Bool' lvalue Var 0x55755ae8b1f0 'z$r_buff1_thd3' '_Bool'
|   |         |-ImplicitCastExpr 0x55755ae8e1f0 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x55755ae8e1d8 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x55755ae8dfc8 <col:148> '_Bool' lvalue Var 0x55755ae8b550 'z$w_buff1_used' '_Bool'
|   |         `-ParenExpr 0x55755ae8e1b8 <col:165, col:220> 'int'
|   |           `-ConditionalOperator 0x55755ae8e188 <col:166, col:219> 'int'
|   |             |-BinaryOperator 0x55755ae8e088 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x55755ae8e040 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x55755ae8e028 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x55755ae8dfe8 <col:166> '_Bool' lvalue Var 0x55755ae8b458 'z$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x55755ae8e070 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x55755ae8e058 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x55755ae8e008 <col:184> '_Bool' lvalue Var 0x55755ae8af98 'z$r_buff0_thd3' '_Bool'
|   |             |-ImplicitCastExpr 0x55755ae8e158 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x55755ae8e0d8 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x55755ae8e0a8 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x55755ae8e170 <col:212, col:219> 'int' <IntegralCast>
|   |               `-CStyleCastExpr 0x55755ae8e130 <col:212, col:219> '_Bool' <IntegralToBoolean>
|   |                 `-IntegerLiteral 0x55755ae8e100 <col:219> 'int' 0
|   |-BinaryOperator 0x55755ae8e8a8 <line:757:3, col:227> '_Bool' '='
|   | |-DeclRefExpr 0x55755ae8e320 <col:3> '_Bool' lvalue Var 0x55755ae8af98 'z$r_buff0_thd3' '_Bool'
|   | `-ImplicitCastExpr 0x55755ae8e890 <col:20, col:227> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55755ae8e860 <col:20, col:227> 'int'
|   |     |-ImplicitCastExpr 0x55755ae8e818 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x55755ae8e800 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x55755ae8e340 <col:20> '_Bool' lvalue Var 0x55755ae8b640 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x55755ae8e848 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x55755ae8e830 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x55755ae8e360 <col:36> '_Bool' lvalue Var 0x55755ae8af98 'z$r_buff0_thd3' '_Bool'
|   |     `-ParenExpr 0x55755ae8e7e0 <col:53, col:227> 'int'
|   |       `-ConditionalOperator 0x55755ae8e7b0 <col:54, col:226> 'int'
|   |         |-BinaryOperator 0x55755ae8e570 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x55755ae8e490 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x55755ae8e3b8 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x55755ae8e3a0 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x55755ae8e380 <col:55> '_Bool' lvalue Var 0x55755ae8b458 'z$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x55755ae8e470 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x55755ae8e408 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x55755ae8e3f0 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x55755ae8e3d0 <col:74> '_Bool' lvalue Var 0x55755ae8af98 'z$r_buff0_thd3' '_Bool'
|   |         | |   `-UnaryOperator 0x55755ae8e458 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x55755ae8e440 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x55755ae8e420 <col:93> '_Bool' lvalue Var 0x55755ae8b550 'z$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x55755ae8e550 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x55755ae8e4e8 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x55755ae8e4d0 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x55755ae8e4b0 <col:112> '_Bool' lvalue Var 0x55755ae8af98 'z$r_buff0_thd3' '_Bool'
|   |         |   `-UnaryOperator 0x55755ae8e538 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x55755ae8e520 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x55755ae8e500 <col:131> '_Bool' lvalue Var 0x55755ae8b1f0 'z$r_buff1_thd3' '_Bool'
|   |         |-ImplicitCastExpr 0x55755ae8e798 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x55755ae8e780 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x55755ae8e590 <col:148> '_Bool' lvalue Var 0x55755ae8af98 'z$r_buff0_thd3' '_Bool'
|   |         `-ParenExpr 0x55755ae8e760 <col:165, col:226> 'int'
|   |           `-ConditionalOperator 0x55755ae8e730 <col:166, col:212> 'int'
|   |             |-BinaryOperator 0x55755ae8e650 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x55755ae8e608 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x55755ae8e5f0 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x55755ae8e5b0 <col:166> '_Bool' lvalue Var 0x55755ae8b458 'z$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x55755ae8e638 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x55755ae8e620 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x55755ae8e5d0 <col:184> '_Bool' lvalue Var 0x55755ae8af98 'z$r_buff0_thd3' '_Bool'
|   |             |-ImplicitCastExpr 0x55755ae8e6e8 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x55755ae8e6a0 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x55755ae8e670 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x55755ae8e718 <col:212> 'int' <IntegralCast>
|   |               `-ImplicitCastExpr 0x55755ae8e700 <col:212> '_Bool' <LValueToRValue>
|   |                 `-DeclRefExpr 0x55755ae8e6c8 <col:212> '_Bool' lvalue Var 0x55755ae8af98 'z$r_buff0_thd3' '_Bool'
|   |-BinaryOperator 0x55755ae8ee98 <line:758:3, col:221> '_Bool' '='
|   | |-DeclRefExpr 0x55755ae8e8c8 <col:3> '_Bool' lvalue Var 0x55755ae8b1f0 'z$r_buff1_thd3' '_Bool'
|   | `-ImplicitCastExpr 0x55755ae8ee80 <col:20, col:221> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55755ae8ee50 <col:20, col:221> 'int'
|   |     |-ImplicitCastExpr 0x55755ae8ee08 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x55755ae8edf0 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x55755ae8e8e8 <col:20> '_Bool' lvalue Var 0x55755ae8b640 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x55755ae8ee38 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x55755ae8ee20 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x55755ae8e908 <col:36> '_Bool' lvalue Var 0x55755ae8b1f0 'z$r_buff1_thd3' '_Bool'
|   |     `-ParenExpr 0x55755ae8edd0 <col:53, col:221> 'int'
|   |       `-ConditionalOperator 0x55755ae8eda0 <col:54, col:220> 'int'
|   |         |-BinaryOperator 0x55755ae8eb40 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x55755ae8ea38 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x55755ae8e960 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x55755ae8e948 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x55755ae8e928 <col:55> '_Bool' lvalue Var 0x55755ae8b458 'z$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x55755ae8ea18 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x55755ae8e9b0 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x55755ae8e998 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x55755ae8e978 <col:74> '_Bool' lvalue Var 0x55755ae8af98 'z$r_buff0_thd3' '_Bool'
|   |         | |   `-UnaryOperator 0x55755ae8ea00 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x55755ae8e9e8 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x55755ae8e9c8 <col:93> '_Bool' lvalue Var 0x55755ae8b550 'z$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x55755ae8eaf8 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x55755ae8ea90 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x55755ae8ea78 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x55755ae8ea58 <col:112> '_Bool' lvalue Var 0x55755ae8af98 'z$r_buff0_thd3' '_Bool'
|   |         |   `-UnaryOperator 0x55755ae8eae0 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x55755ae8eac8 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x55755ae8eaa8 <col:131> '_Bool' lvalue Var 0x55755ae8b1f0 'z$r_buff1_thd3' '_Bool'
|   |         |-ImplicitCastExpr 0x55755ae8ed88 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x55755ae8ed70 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x55755ae8eb60 <col:148> '_Bool' lvalue Var 0x55755ae8b1f0 'z$r_buff1_thd3' '_Bool'
|   |         `-ParenExpr 0x55755ae8ed50 <col:165, col:220> 'int'
|   |           `-ConditionalOperator 0x55755ae8ed20 <col:166, col:219> 'int'
|   |             |-BinaryOperator 0x55755ae8ec20 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x55755ae8ebd8 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x55755ae8ebc0 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x55755ae8eb80 <col:166> '_Bool' lvalue Var 0x55755ae8b458 'z$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x55755ae8ec08 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x55755ae8ebf0 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x55755ae8eba0 <col:184> '_Bool' lvalue Var 0x55755ae8af98 'z$r_buff0_thd3' '_Bool'
|   |             |-ImplicitCastExpr 0x55755ae8ecf0 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x55755ae8ec70 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x55755ae8ec40 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x55755ae8ed08 <col:212, col:219> 'int' <IntegralCast>
|   |               `-CStyleCastExpr 0x55755ae8ecc8 <col:212, col:219> '_Bool' <IntegralToBoolean>
|   |                 `-IntegerLiteral 0x55755ae8ec98 <col:219> 'int' 0
|   |-BinaryOperator 0x55755ae8ef10 <line:759:3, col:25> 'int' '='
|   | |-DeclRefExpr 0x55755ae8eeb8 <col:3> 'int' lvalue Var 0x55755ae8a4b8 '__unbuffered_p2_EAX' 'int'
|   | `-ImplicitCastExpr 0x55755ae8eef8 <col:25> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x55755ae8eed8 <col:25> 'int' lvalue Var 0x55755ae8aca0 'z' 'int'
|   |-BinaryOperator 0x55755ae8f040 <line:760:3, col:37> 'int' '='
|   | |-DeclRefExpr 0x55755ae8ef30 <col:3> 'int' lvalue Var 0x55755ae8aca0 'z' 'int'
|   | `-ConditionalOperator 0x55755ae8f010 <col:7, col:37> 'int'
|   |   |-ImplicitCastExpr 0x55755ae8efc8 <col:7> 'int' <IntegralCast>
|   |   | `-ImplicitCastExpr 0x55755ae8efb0 <col:7> '_Bool' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x55755ae8ef50 <col:7> '_Bool' lvalue Var 0x55755ae8ad38 'z$flush_delayed' '_Bool'
|   |   |-ImplicitCastExpr 0x55755ae8efe0 <col:25> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x55755ae8ef70 <col:25> 'int' lvalue Var 0x55755ae8adb8 'z$mem_tmp' 'int'
|   |   `-ImplicitCastExpr 0x55755ae8eff8 <col:37> 'int' <LValueToRValue>
|   |     `-DeclRefExpr 0x55755ae8ef90 <col:37> 'int' lvalue Var 0x55755ae8aca0 'z' 'int'
|   |-BinaryOperator 0x55755ae8f0d8 <line:761:3, col:28> '_Bool' '='
|   | |-DeclRefExpr 0x55755ae8f060 <col:3> '_Bool' lvalue Var 0x55755ae8ad38 'z$flush_delayed' '_Bool'
|   | `-CStyleCastExpr 0x55755ae8f0b0 <col:21, col:28> '_Bool' <IntegralToBoolean>
|   |   `-IntegerLiteral 0x55755ae8f080 <col:28> 'int' 0
|   |-CallExpr 0x55755ae8f130 <line:762:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x55755ae8f118 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55755ae8f0f8 <col:3> 'void ()' Function 0x55755ae30f00 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x55755ae8f188 <line:763:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x55755ae8f170 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55755ae8f150 <col:3> 'void ()' Function 0x55755ae30e40 '__VERIFIER_atomic_begin' 'void ()'
|   |-CallExpr 0x55755ae8f1e0 <line:764:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x55755ae8f1c8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55755ae8f1a8 <col:3> 'void ()' Function 0x55755ae30f00 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x55755ae8f238 <line:765:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x55755ae8f220 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55755ae8f200 <col:3> 'void ()' Function 0x55755ae30e40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x55755ae8f2f0 <line:766:3, col:41> 'int' '='
|   | |-DeclRefExpr 0x55755ae8f258 <col:3> 'int' lvalue Var 0x55755ae8a278 '__unbuffered_cnt' 'int'
|   | `-BinaryOperator 0x55755ae8f2d0 <col:22, col:41> 'int' '+'
|   |   |-ImplicitCastExpr 0x55755ae8f2b8 <col:22> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x55755ae8f278 <col:22> 'int' lvalue Var 0x55755ae8a278 '__unbuffered_cnt' 'int'
|   |   `-IntegerLiteral 0x55755ae8f298 <col:41> 'int' 1
|   |-CallExpr 0x55755ae8f348 <line:767:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x55755ae8f330 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55755ae8f310 <col:3> 'void ()' Function 0x55755ae30f00 '__VERIFIER_atomic_end' 'void ()'
|   `-ReturnStmt 0x55755ae8f3c0 <line:768:3, col:36>
|     `-CallExpr 0x55755ae8f3a0 <col:10, col:36> 'void *'
|       `-ImplicitCastExpr 0x55755ae8f388 <col:10> 'void *(*)(void)' <FunctionToPointerDecay>
|         `-DeclRefExpr 0x55755ae8f368 <col:10> 'void *(void)' Function 0x55755ae30958 '__VERIFIER_nondet_pointer' 'void *(void)'
|-FunctionDecl 0x55755ae8f558 prev 0x55755ae89ef8 <line:770:1, line:815:1> line:770:8 used P3 'void *(void *)'
| |-ParmVarDecl 0x55755ae8f4c0 <col:11, col:17> col:17 arg 'void *'
| `-CompoundStmt 0x55755ae93858 <line:771:1, line:815:1>
|   |-CallExpr 0x55755ae8f638 <line:772:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x55755ae8f620 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55755ae8f600 <col:3> 'void ()' Function 0x55755ae30e40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x55755ae8f6b0 <line:773:3, col:15> 'int' '='
|   | |-DeclRefExpr 0x55755ae8f658 <col:3> 'int' lvalue Var 0x55755ae8b4d8 'z$w_buff1' 'int'
|   | `-ImplicitCastExpr 0x55755ae8f698 <col:15> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x55755ae8f678 <col:15> 'int' lvalue Var 0x55755ae8b3e0 'z$w_buff0' 'int'
|   |-BinaryOperator 0x55755ae8f710 <line:774:3, col:15> 'int' '='
|   | |-DeclRefExpr 0x55755ae8f6d0 <col:3> 'int' lvalue Var 0x55755ae8b3e0 'z$w_buff0' 'int'
|   | `-IntegerLiteral 0x55755ae8f6f0 <col:15> 'int' 1
|   |-BinaryOperator 0x55755ae8f788 <line:775:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x55755ae8f730 <col:3> '_Bool' lvalue Var 0x55755ae8b550 'z$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x55755ae8f770 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x55755ae8f750 <col:20> '_Bool' lvalue Var 0x55755ae8b458 'z$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x55755ae8f820 <line:776:3, col:27> '_Bool' '='
|   | |-DeclRefExpr 0x55755ae8f7a8 <col:3> '_Bool' lvalue Var 0x55755ae8b458 'z$w_buff0_used' '_Bool'
|   | `-CStyleCastExpr 0x55755ae8f7f8 <col:20, col:27> '_Bool' <IntegralToBoolean>
|   |   `-IntegerLiteral 0x55755ae8f7c8 <col:27> 'int' 1
|   |-CallExpr 0x55755ae8f9a8 <line:777:3, col:56> 'void'
|   | |-ImplicitCastExpr 0x55755ae8f990 <col:3> 'void (*)(int)' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x55755ae8f840 <col:3> 'void (int)' Function 0x55755ae30bc8 '__VERIFIER_assert' 'void (int)'
|   | `-UnaryOperator 0x55755ae8f940 <col:21, col:55> 'int' prefix '!' cannot overflow
|   |   `-ParenExpr 0x55755ae8f920 <col:22, col:55> 'int'
|   |     `-BinaryOperator 0x55755ae8f900 <col:23, col:41> 'int' '&&'
|   |       |-ImplicitCastExpr 0x55755ae8f8b8 <col:23> 'int' <IntegralCast>
|   |       | `-ImplicitCastExpr 0x55755ae8f8a0 <col:23> '_Bool' <LValueToRValue>
|   |       |   `-DeclRefExpr 0x55755ae8f860 <col:23> '_Bool' lvalue Var 0x55755ae8b550 'z$w_buff1_used' '_Bool'
|   |       `-ImplicitCastExpr 0x55755ae8f8e8 <col:41> 'int' <IntegralCast>
|   |         `-ImplicitCastExpr 0x55755ae8f8d0 <col:41> '_Bool' <LValueToRValue>
|   |           `-DeclRefExpr 0x55755ae8f880 <col:41> '_Bool' lvalue Var 0x55755ae8b458 'z$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x55755ae8fa28 <line:778:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x55755ae8f9d0 <col:3> '_Bool' lvalue Var 0x55755ae8b088 'z$r_buff1_thd0' '_Bool'
|   | `-ImplicitCastExpr 0x55755ae8fa10 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x55755ae8f9f0 <col:20> '_Bool' lvalue Var 0x55755ae8ae30 'z$r_buff0_thd0' '_Bool'
|   |-BinaryOperator 0x55755ae8faa0 <line:779:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x55755ae8fa48 <col:3> '_Bool' lvalue Var 0x55755ae8b100 'z$r_buff1_thd1' '_Bool'
|   | `-ImplicitCastExpr 0x55755ae8fa88 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x55755ae8fa68 <col:20> '_Bool' lvalue Var 0x55755ae8aea8 'z$r_buff0_thd1' '_Bool'
|   |-BinaryOperator 0x55755ae8fb18 <line:780:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x55755ae8fac0 <col:3> '_Bool' lvalue Var 0x55755ae8b178 'z$r_buff1_thd2' '_Bool'
|   | `-ImplicitCastExpr 0x55755ae8fb00 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x55755ae8fae0 <col:20> '_Bool' lvalue Var 0x55755ae8af20 'z$r_buff0_thd2' '_Bool'
|   |-BinaryOperator 0x55755ae8fba8 <line:781:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x55755ae8fb50 <col:3> '_Bool' lvalue Var 0x55755ae8b1f0 'z$r_buff1_thd3' '_Bool'
|   | `-ImplicitCastExpr 0x55755ae8fb90 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x55755ae8fb70 <col:20> '_Bool' lvalue Var 0x55755ae8af98 'z$r_buff0_thd3' '_Bool'
|   |-BinaryOperator 0x55755ae8fc20 <line:782:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x55755ae8fbc8 <col:3> '_Bool' lvalue Var 0x55755ae8b268 'z$r_buff1_thd4' '_Bool'
|   | `-ImplicitCastExpr 0x55755ae8fc08 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x55755ae8fbe8 <col:20> '_Bool' lvalue Var 0x55755ae8b010 'z$r_buff0_thd4' '_Bool'
|   |-BinaryOperator 0x55755ae8fcb8 <line:783:3, col:27> '_Bool' '='
|   | |-DeclRefExpr 0x55755ae8fc40 <col:3> '_Bool' lvalue Var 0x55755ae8b010 'z$r_buff0_thd4' '_Bool'
|   | `-CStyleCastExpr 0x55755ae8fc90 <col:20, col:27> '_Bool' <IntegralToBoolean>
|   |   `-IntegerLiteral 0x55755ae8fc60 <col:27> 'int' 1
|   |-CallExpr 0x55755ae8fd10 <line:784:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x55755ae8fcf8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55755ae8fcd8 <col:3> 'void ()' Function 0x55755ae30f00 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x55755ae8fd68 <line:785:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x55755ae8fd50 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55755ae8fd30 <col:3> 'void ()' Function 0x55755ae30e40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x55755ae8fe18 <line:786:3, col:45> '_Bool' '='
|   | |-DeclRefExpr 0x55755ae8fd88 <col:3> '_Bool' lvalue Var 0x55755ae8b5c8 'weak$$choice0' '_Bool'
|   | `-ImplicitCastExpr 0x55755ae8fe00 <col:19, col:45> '_Bool' <PointerToBoolean>
|   |   `-CallExpr 0x55755ae8fde0 <col:19, col:45> 'void *'
|   |     `-ImplicitCastExpr 0x55755ae8fdc8 <col:19> 'void *(*)(void)' <FunctionToPointerDecay>
|   |       `-DeclRefExpr 0x55755ae8fda8 <col:19> 'void *(void)' Function 0x55755ae30958 '__VERIFIER_nondet_pointer' 'void *(void)'
|   |-BinaryOperator 0x55755ae8fec8 <line:787:3, col:45> '_Bool' '='
|   | |-DeclRefExpr 0x55755ae8fe38 <col:3> '_Bool' lvalue Var 0x55755ae8b640 'weak$$choice2' '_Bool'
|   | `-ImplicitCastExpr 0x55755ae8feb0 <col:19, col:45> '_Bool' <PointerToBoolean>
|   |   `-CallExpr 0x55755ae8fe90 <col:19, col:45> 'void *'
|   |     `-ImplicitCastExpr 0x55755ae8fe78 <col:19> 'void *(*)(void)' <FunctionToPointerDecay>
|   |       `-DeclRefExpr 0x55755ae8fe58 <col:19> 'void *(void)' Function 0x55755ae30958 '__VERIFIER_nondet_pointer' 'void *(void)'
|   |-BinaryOperator 0x55755ae8ff40 <line:788:3, col:21> '_Bool' '='
|   | |-DeclRefExpr 0x55755ae8fee8 <col:3> '_Bool' lvalue Var 0x55755ae8ad38 'z$flush_delayed' '_Bool'
|   | `-ImplicitCastExpr 0x55755ae8ff28 <col:21> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x55755ae8ff08 <col:21> '_Bool' lvalue Var 0x55755ae8b640 'weak$$choice2' '_Bool'
|   |-BinaryOperator 0x55755ae8ffb8 <line:789:3, col:15> 'int' '='
|   | |-DeclRefExpr 0x55755ae8ff60 <col:3> 'int' lvalue Var 0x55755ae8adb8 'z$mem_tmp' 'int'
|   | `-ImplicitCastExpr 0x55755ae8ffa0 <col:15> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x55755ae8ff80 <col:15> 'int' lvalue Var 0x55755ae8aca0 'z' 'int'
|   |-BinaryOperator 0x55755ae903f0 <line:790:3, col:162> 'int' '='
|   | |-DeclRefExpr 0x55755ae8ffd8 <col:3> 'int' lvalue Var 0x55755ae8aca0 'z' 'int'
|   | `-ConditionalOperator 0x55755ae903c0 <col:7, col:162> 'int'
|   |   |-BinaryOperator 0x55755ae901e8 <col:7, col:84> 'int' '||'
|   |   | |-BinaryOperator 0x55755ae90108 <col:7, col:46> 'int' '||'
|   |   | | |-UnaryOperator 0x55755ae90030 <col:7, col:8> 'int' prefix '!' cannot overflow
|   |   | | | `-ImplicitCastExpr 0x55755ae90018 <col:8> '_Bool' <LValueToRValue>
|   |   | | |   `-DeclRefExpr 0x55755ae8fff8 <col:8> '_Bool' lvalue Var 0x55755ae8b458 'z$w_buff0_used' '_Bool'
|   |   | | `-BinaryOperator 0x55755ae900e8 <col:26, col:46> 'int' '&&'
|   |   | |   |-UnaryOperator 0x55755ae90080 <col:26, col:27> 'int' prefix '!' cannot overflow
|   |   | |   | `-ImplicitCastExpr 0x55755ae90068 <col:27> '_Bool' <LValueToRValue>
|   |   | |   |   `-DeclRefExpr 0x55755ae90048 <col:27> '_Bool' lvalue Var 0x55755ae8b010 'z$r_buff0_thd4' '_Bool'
|   |   | |   `-UnaryOperator 0x55755ae900d0 <col:45, col:46> 'int' prefix '!' cannot overflow
|   |   | |     `-ImplicitCastExpr 0x55755ae900b8 <col:46> '_Bool' <LValueToRValue>
|   |   | |       `-DeclRefExpr 0x55755ae90098 <col:46> '_Bool' lvalue Var 0x55755ae8b550 'z$w_buff1_used' '_Bool'
|   |   | `-BinaryOperator 0x55755ae901c8 <col:64, col:84> 'int' '&&'
|   |   |   |-UnaryOperator 0x55755ae90160 <col:64, col:65> 'int' prefix '!' cannot overflow
|   |   |   | `-ImplicitCastExpr 0x55755ae90148 <col:65> '_Bool' <LValueToRValue>
|   |   |   |   `-DeclRefExpr 0x55755ae90128 <col:65> '_Bool' lvalue Var 0x55755ae8b010 'z$r_buff0_thd4' '_Bool'
|   |   |   `-UnaryOperator 0x55755ae901b0 <col:83, col:84> 'int' prefix '!' cannot overflow
|   |   |     `-ImplicitCastExpr 0x55755ae90198 <col:84> '_Bool' <LValueToRValue>
|   |   |       `-DeclRefExpr 0x55755ae90178 <col:84> '_Bool' lvalue Var 0x55755ae8b268 'z$r_buff1_thd4' '_Bool'
|   |   |-ImplicitCastExpr 0x55755ae903a8 <col:101> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x55755ae90208 <col:101> 'int' lvalue Var 0x55755ae8aca0 'z' 'int'
|   |   `-ParenExpr 0x55755ae90388 <col:105, col:162> 'int'
|   |     `-ConditionalOperator 0x55755ae90358 <col:106, col:153> 'int'
|   |       |-BinaryOperator 0x55755ae902c8 <col:106, col:124> 'int' '&&'
|   |       | |-ImplicitCastExpr 0x55755ae90280 <col:106> 'int' <IntegralCast>
|   |       | | `-ImplicitCastExpr 0x55755ae90268 <col:106> '_Bool' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x55755ae90228 <col:106> '_Bool' lvalue Var 0x55755ae8b458 'z$w_buff0_used' '_Bool'
|   |       | `-ImplicitCastExpr 0x55755ae902b0 <col:124> 'int' <IntegralCast>
|   |       |   `-ImplicitCastExpr 0x55755ae90298 <col:124> '_Bool' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x55755ae90248 <col:124> '_Bool' lvalue Var 0x55755ae8b010 'z$r_buff0_thd4' '_Bool'
|   |       |-ImplicitCastExpr 0x55755ae90328 <col:141> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x55755ae902e8 <col:141> 'int' lvalue Var 0x55755ae8b3e0 'z$w_buff0' 'int'
|   |       `-ImplicitCastExpr 0x55755ae90340 <col:153> 'int' <LValueToRValue>
|   |         `-DeclRefExpr 0x55755ae90308 <col:153> 'int' lvalue Var 0x55755ae8b4d8 'z$w_buff1' 'int'
|   |-BinaryOperator 0x55755ae90900 <line:791:3, col:208> 'int' '='
|   | |-DeclRefExpr 0x55755ae90410 <col:3> 'int' lvalue Var 0x55755ae8b3e0 'z$w_buff0' 'int'
|   | `-ConditionalOperator 0x55755ae908d0 <col:15, col:208> 'int'
|   |   |-ImplicitCastExpr 0x55755ae908a0 <col:15> 'int' <IntegralCast>
|   |   | `-ImplicitCastExpr 0x55755ae90888 <col:15> '_Bool' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x55755ae90430 <col:15> '_Bool' lvalue Var 0x55755ae8b640 'weak$$choice2' '_Bool'
|   |   |-ImplicitCastExpr 0x55755ae908b8 <col:31> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x55755ae90450 <col:31> 'int' lvalue Var 0x55755ae8b3e0 'z$w_buff0' 'int'
|   |   `-ParenExpr 0x55755ae90868 <col:43, col:208> 'int'
|   |     `-ConditionalOperator 0x55755ae90838 <col:44, col:207> 'int'
|   |       |-BinaryOperator 0x55755ae90660 <col:44, col:121> 'int' '||'
|   |       | |-BinaryOperator 0x55755ae90580 <col:44, col:83> 'int' '||'
|   |       | | |-UnaryOperator 0x55755ae904a8 <col:44, col:45> 'int' prefix '!' cannot overflow
|   |       | | | `-ImplicitCastExpr 0x55755ae90490 <col:45> '_Bool' <LValueToRValue>
|   |       | | |   `-DeclRefExpr 0x55755ae90470 <col:45> '_Bool' lvalue Var 0x55755ae8b458 'z$w_buff0_used' '_Bool'
|   |       | | `-BinaryOperator 0x55755ae90560 <col:63, col:83> 'int' '&&'
|   |       | |   |-UnaryOperator 0x55755ae904f8 <col:63, col:64> 'int' prefix '!' cannot overflow
|   |       | |   | `-ImplicitCastExpr 0x55755ae904e0 <col:64> '_Bool' <LValueToRValue>
|   |       | |   |   `-DeclRefExpr 0x55755ae904c0 <col:64> '_Bool' lvalue Var 0x55755ae8b010 'z$r_buff0_thd4' '_Bool'
|   |       | |   `-UnaryOperator 0x55755ae90548 <col:82, col:83> 'int' prefix '!' cannot overflow
|   |       | |     `-ImplicitCastExpr 0x55755ae90530 <col:83> '_Bool' <LValueToRValue>
|   |       | |       `-DeclRefExpr 0x55755ae90510 <col:83> '_Bool' lvalue Var 0x55755ae8b550 'z$w_buff1_used' '_Bool'
|   |       | `-BinaryOperator 0x55755ae90640 <col:101, col:121> 'int' '&&'
|   |       |   |-UnaryOperator 0x55755ae905d8 <col:101, col:102> 'int' prefix '!' cannot overflow
|   |       |   | `-ImplicitCastExpr 0x55755ae905c0 <col:102> '_Bool' <LValueToRValue>
|   |       |   |   `-DeclRefExpr 0x55755ae905a0 <col:102> '_Bool' lvalue Var 0x55755ae8b010 'z$r_buff0_thd4' '_Bool'
|   |       |   `-UnaryOperator 0x55755ae90628 <col:120, col:121> 'int' prefix '!' cannot overflow
|   |       |     `-ImplicitCastExpr 0x55755ae90610 <col:121> '_Bool' <LValueToRValue>
|   |       |       `-DeclRefExpr 0x55755ae905f0 <col:121> '_Bool' lvalue Var 0x55755ae8b268 'z$r_buff1_thd4' '_Bool'
|   |       |-ImplicitCastExpr 0x55755ae90820 <col:138> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x55755ae90680 <col:138> 'int' lvalue Var 0x55755ae8b3e0 'z$w_buff0' 'int'
|   |       `-ParenExpr 0x55755ae90800 <col:150, col:207> 'int'
|   |         `-ConditionalOperator 0x55755ae907d0 <col:151, col:198> 'int'
|   |           |-BinaryOperator 0x55755ae90740 <col:151, col:169> 'int' '&&'
|   |           | |-ImplicitCastExpr 0x55755ae906f8 <col:151> 'int' <IntegralCast>
|   |           | | `-ImplicitCastExpr 0x55755ae906e0 <col:151> '_Bool' <LValueToRValue>
|   |           | |   `-DeclRefExpr 0x55755ae906a0 <col:151> '_Bool' lvalue Var 0x55755ae8b458 'z$w_buff0_used' '_Bool'
|   |           | `-ImplicitCastExpr 0x55755ae90728 <col:169> 'int' <IntegralCast>
|   |           |   `-ImplicitCastExpr 0x55755ae90710 <col:169> '_Bool' <LValueToRValue>
|   |           |     `-DeclRefExpr 0x55755ae906c0 <col:169> '_Bool' lvalue Var 0x55755ae8b010 'z$r_buff0_thd4' '_Bool'
|   |           |-ImplicitCastExpr 0x55755ae907a0 <col:186> 'int' <LValueToRValue>
|   |           | `-DeclRefExpr 0x55755ae90760 <col:186> 'int' lvalue Var 0x55755ae8b3e0 'z$w_buff0' 'int'
|   |           `-ImplicitCastExpr 0x55755ae907b8 <col:198> 'int' <LValueToRValue>
|   |             `-DeclRefExpr 0x55755ae90780 <col:198> 'int' lvalue Var 0x55755ae8b3e0 'z$w_buff0' 'int'
|   |-BinaryOperator 0x55755ae90e20 <line:792:3, col:208> 'int' '='
|   | |-DeclRefExpr 0x55755ae90920 <col:3> 'int' lvalue Var 0x55755ae8b4d8 'z$w_buff1' 'int'
|   | `-ConditionalOperator 0x55755ae90df0 <col:15, col:208> 'int'
|   |   |-ImplicitCastExpr 0x55755ae90dc0 <col:15> 'int' <IntegralCast>
|   |   | `-ImplicitCastExpr 0x55755ae90da8 <col:15> '_Bool' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x55755ae90940 <col:15> '_Bool' lvalue Var 0x55755ae8b640 'weak$$choice2' '_Bool'
|   |   |-ImplicitCastExpr 0x55755ae90dd8 <col:31> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x55755ae90960 <col:31> 'int' lvalue Var 0x55755ae8b4d8 'z$w_buff1' 'int'
|   |   `-ParenExpr 0x55755ae90d88 <col:43, col:208> 'int'
|   |     `-ConditionalOperator 0x55755ae90d58 <col:44, col:207> 'int'
|   |       |-BinaryOperator 0x55755ae90b80 <col:44, col:121> 'int' '||'
|   |       | |-BinaryOperator 0x55755ae90a90 <col:44, col:83> 'int' '||'
|   |       | | |-UnaryOperator 0x55755ae909b8 <col:44, col:45> 'int' prefix '!' cannot overflow
|   |       | | | `-ImplicitCastExpr 0x55755ae909a0 <col:45> '_Bool' <LValueToRValue>
|   |       | | |   `-DeclRefExpr 0x55755ae90980 <col:45> '_Bool' lvalue Var 0x55755ae8b458 'z$w_buff0_used' '_Bool'
|   |       | | `-BinaryOperator 0x55755ae90a70 <col:63, col:83> 'int' '&&'
|   |       | |   |-UnaryOperator 0x55755ae90a08 <col:63, col:64> 'int' prefix '!' cannot overflow
|   |       | |   | `-ImplicitCastExpr 0x55755ae909f0 <col:64> '_Bool' <LValueToRValue>
|   |       | |   |   `-DeclRefExpr 0x55755ae909d0 <col:64> '_Bool' lvalue Var 0x55755ae8b010 'z$r_buff0_thd4' '_Bool'
|   |       | |   `-UnaryOperator 0x55755ae90a58 <col:82, col:83> 'int' prefix '!' cannot overflow
|   |       | |     `-ImplicitCastExpr 0x55755ae90a40 <col:83> '_Bool' <LValueToRValue>
|   |       | |       `-DeclRefExpr 0x55755ae90a20 <col:83> '_Bool' lvalue Var 0x55755ae8b550 'z$w_buff1_used' '_Bool'
|   |       | `-BinaryOperator 0x55755ae90b60 <col:101, col:121> 'int' '&&'
|   |       |   |-UnaryOperator 0x55755ae90ae8 <col:101, col:102> 'int' prefix '!' cannot overflow
|   |       |   | `-ImplicitCastExpr 0x55755ae90ad0 <col:102> '_Bool' <LValueToRValue>
|   |       |   |   `-DeclRefExpr 0x55755ae90ab0 <col:102> '_Bool' lvalue Var 0x55755ae8b010 'z$r_buff0_thd4' '_Bool'
|   |       |   `-UnaryOperator 0x55755ae90b38 <col:120, col:121> 'int' prefix '!' cannot overflow
|   |       |     `-ImplicitCastExpr 0x55755ae90b20 <col:121> '_Bool' <LValueToRValue>
|   |       |       `-DeclRefExpr 0x55755ae90b00 <col:121> '_Bool' lvalue Var 0x55755ae8b268 'z$r_buff1_thd4' '_Bool'
|   |       |-ImplicitCastExpr 0x55755ae90d40 <col:138> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x55755ae90ba0 <col:138> 'int' lvalue Var 0x55755ae8b4d8 'z$w_buff1' 'int'
|   |       `-ParenExpr 0x55755ae90d20 <col:150, col:207> 'int'
|   |         `-ConditionalOperator 0x55755ae90cf0 <col:151, col:198> 'int'
|   |           |-BinaryOperator 0x55755ae90c60 <col:151, col:169> 'int' '&&'
|   |           | |-ImplicitCastExpr 0x55755ae90c18 <col:151> 'int' <IntegralCast>
|   |           | | `-ImplicitCastExpr 0x55755ae90c00 <col:151> '_Bool' <LValueToRValue>
|   |           | |   `-DeclRefExpr 0x55755ae90bc0 <col:151> '_Bool' lvalue Var 0x55755ae8b458 'z$w_buff0_used' '_Bool'
|   |           | `-ImplicitCastExpr 0x55755ae90c48 <col:169> 'int' <IntegralCast>
|   |           |   `-ImplicitCastExpr 0x55755ae90c30 <col:169> '_Bool' <LValueToRValue>
|   |           |     `-DeclRefExpr 0x55755ae90be0 <col:169> '_Bool' lvalue Var 0x55755ae8b010 'z$r_buff0_thd4' '_Bool'
|   |           |-ImplicitCastExpr 0x55755ae90cc0 <col:186> 'int' <LValueToRValue>
|   |           | `-DeclRefExpr 0x55755ae90c80 <col:186> 'int' lvalue Var 0x55755ae8b4d8 'z$w_buff1' 'int'
|   |           `-ImplicitCastExpr 0x55755ae90cd8 <col:198> 'int' <LValueToRValue>
|   |             `-DeclRefExpr 0x55755ae90ca0 <col:198> 'int' lvalue Var 0x55755ae8b4d8 'z$w_buff1' 'int'
|   |-BinaryOperator 0x55755ae913c8 <line:793:3, col:227> '_Bool' '='
|   | |-DeclRefExpr 0x55755ae90e40 <col:3> '_Bool' lvalue Var 0x55755ae8b458 'z$w_buff0_used' '_Bool'
|   | `-ImplicitCastExpr 0x55755ae913b0 <col:20, col:227> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55755ae91380 <col:20, col:227> 'int'
|   |     |-ImplicitCastExpr 0x55755ae91338 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x55755ae91320 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x55755ae90e60 <col:20> '_Bool' lvalue Var 0x55755ae8b640 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x55755ae91368 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x55755ae91350 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x55755ae90e80 <col:36> '_Bool' lvalue Var 0x55755ae8b458 'z$w_buff0_used' '_Bool'
|   |     `-ParenExpr 0x55755ae91300 <col:53, col:227> 'int'
|   |       `-ConditionalOperator 0x55755ae912d0 <col:54, col:226> 'int'
|   |         |-BinaryOperator 0x55755ae91090 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x55755ae90fb0 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x55755ae90ed8 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x55755ae90ec0 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x55755ae90ea0 <col:55> '_Bool' lvalue Var 0x55755ae8b458 'z$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x55755ae90f90 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x55755ae90f28 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x55755ae90f10 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x55755ae90ef0 <col:74> '_Bool' lvalue Var 0x55755ae8b010 'z$r_buff0_thd4' '_Bool'
|   |         | |   `-UnaryOperator 0x55755ae90f78 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x55755ae90f60 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x55755ae90f40 <col:93> '_Bool' lvalue Var 0x55755ae8b550 'z$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x55755ae91070 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x55755ae91008 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x55755ae90ff0 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x55755ae90fd0 <col:112> '_Bool' lvalue Var 0x55755ae8b010 'z$r_buff0_thd4' '_Bool'
|   |         |   `-UnaryOperator 0x55755ae91058 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x55755ae91040 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x55755ae91020 <col:131> '_Bool' lvalue Var 0x55755ae8b268 'z$r_buff1_thd4' '_Bool'
|   |         |-ImplicitCastExpr 0x55755ae912b8 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x55755ae912a0 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x55755ae910b0 <col:148> '_Bool' lvalue Var 0x55755ae8b458 'z$w_buff0_used' '_Bool'
|   |         `-ParenExpr 0x55755ae91280 <col:165, col:226> 'int'
|   |           `-ConditionalOperator 0x55755ae91250 <col:166, col:212> 'int'
|   |             |-BinaryOperator 0x55755ae91170 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x55755ae91128 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x55755ae91110 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x55755ae910d0 <col:166> '_Bool' lvalue Var 0x55755ae8b458 'z$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x55755ae91158 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x55755ae91140 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x55755ae910f0 <col:184> '_Bool' lvalue Var 0x55755ae8b010 'z$r_buff0_thd4' '_Bool'
|   |             |-ImplicitCastExpr 0x55755ae91208 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x55755ae911c0 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x55755ae91190 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x55755ae91238 <col:212> 'int' <IntegralCast>
|   |               `-ImplicitCastExpr 0x55755ae91220 <col:212> '_Bool' <LValueToRValue>
|   |                 `-DeclRefExpr 0x55755ae911e8 <col:212> '_Bool' lvalue Var 0x55755ae8b458 'z$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x55755ae91990 <line:794:3, col:221> '_Bool' '='
|   | |-DeclRefExpr 0x55755ae913e8 <col:3> '_Bool' lvalue Var 0x55755ae8b550 'z$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x55755ae91978 <col:20, col:221> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55755ae91948 <col:20, col:221> 'int'
|   |     |-ImplicitCastExpr 0x55755ae91900 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x55755ae918e8 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x55755ae91408 <col:20> '_Bool' lvalue Var 0x55755ae8b640 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x55755ae91930 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x55755ae91918 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x55755ae91428 <col:36> '_Bool' lvalue Var 0x55755ae8b550 'z$w_buff1_used' '_Bool'
|   |     `-ParenExpr 0x55755ae918c8 <col:53, col:221> 'int'
|   |       `-ConditionalOperator 0x55755ae91898 <col:54, col:220> 'int'
|   |         |-BinaryOperator 0x55755ae91638 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x55755ae91558 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x55755ae91480 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x55755ae91468 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x55755ae91448 <col:55> '_Bool' lvalue Var 0x55755ae8b458 'z$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x55755ae91538 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x55755ae914d0 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x55755ae914b8 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x55755ae91498 <col:74> '_Bool' lvalue Var 0x55755ae8b010 'z$r_buff0_thd4' '_Bool'
|   |         | |   `-UnaryOperator 0x55755ae91520 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x55755ae91508 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x55755ae914e8 <col:93> '_Bool' lvalue Var 0x55755ae8b550 'z$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x55755ae91618 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x55755ae915b0 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x55755ae91598 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x55755ae91578 <col:112> '_Bool' lvalue Var 0x55755ae8b010 'z$r_buff0_thd4' '_Bool'
|   |         |   `-UnaryOperator 0x55755ae91600 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x55755ae915e8 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x55755ae915c8 <col:131> '_Bool' lvalue Var 0x55755ae8b268 'z$r_buff1_thd4' '_Bool'
|   |         |-ImplicitCastExpr 0x55755ae91880 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x55755ae91868 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x55755ae91658 <col:148> '_Bool' lvalue Var 0x55755ae8b550 'z$w_buff1_used' '_Bool'
|   |         `-ParenExpr 0x55755ae91848 <col:165, col:220> 'int'
|   |           `-ConditionalOperator 0x55755ae91818 <col:166, col:219> 'int'
|   |             |-BinaryOperator 0x55755ae91718 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x55755ae916d0 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x55755ae916b8 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x55755ae91678 <col:166> '_Bool' lvalue Var 0x55755ae8b458 'z$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x55755ae91700 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x55755ae916e8 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x55755ae91698 <col:184> '_Bool' lvalue Var 0x55755ae8b010 'z$r_buff0_thd4' '_Bool'
|   |             |-ImplicitCastExpr 0x55755ae917e8 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x55755ae91768 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x55755ae91738 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x55755ae91800 <col:212, col:219> 'int' <IntegralCast>
|   |               `-CStyleCastExpr 0x55755ae917c0 <col:212, col:219> '_Bool' <IntegralToBoolean>
|   |                 `-IntegerLiteral 0x55755ae91790 <col:219> 'int' 0
|   |-BinaryOperator 0x55755ae91f48 <line:795:3, col:227> '_Bool' '='
|   | |-DeclRefExpr 0x55755ae919b0 <col:3> '_Bool' lvalue Var 0x55755ae8b010 'z$r_buff0_thd4' '_Bool'
|   | `-ImplicitCastExpr 0x55755ae91f30 <col:20, col:227> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55755ae91f00 <col:20, col:227> 'int'
|   |     |-ImplicitCastExpr 0x55755ae91eb8 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x55755ae91ea0 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x55755ae919d0 <col:20> '_Bool' lvalue Var 0x55755ae8b640 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x55755ae91ee8 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x55755ae91ed0 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x55755ae919f0 <col:36> '_Bool' lvalue Var 0x55755ae8b010 'z$r_buff0_thd4' '_Bool'
|   |     `-ParenExpr 0x55755ae91e80 <col:53, col:227> 'int'
|   |       `-ConditionalOperator 0x55755ae91e50 <col:54, col:226> 'int'
|   |         |-BinaryOperator 0x55755ae91c10 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x55755ae91b20 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x55755ae91a48 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x55755ae91a30 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x55755ae91a10 <col:55> '_Bool' lvalue Var 0x55755ae8b458 'z$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x55755ae91b00 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x55755ae91a98 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x55755ae91a80 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x55755ae91a60 <col:74> '_Bool' lvalue Var 0x55755ae8b010 'z$r_buff0_thd4' '_Bool'
|   |         | |   `-UnaryOperator 0x55755ae91ae8 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x55755ae91ad0 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x55755ae91ab0 <col:93> '_Bool' lvalue Var 0x55755ae8b550 'z$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x55755ae91bf0 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x55755ae91b88 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x55755ae91b70 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x55755ae91b40 <col:112> '_Bool' lvalue Var 0x55755ae8b010 'z$r_buff0_thd4' '_Bool'
|   |         |   `-UnaryOperator 0x55755ae91bd8 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x55755ae91bc0 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x55755ae91ba0 <col:131> '_Bool' lvalue Var 0x55755ae8b268 'z$r_buff1_thd4' '_Bool'
|   |         |-ImplicitCastExpr 0x55755ae91e38 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x55755ae91e20 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x55755ae91c30 <col:148> '_Bool' lvalue Var 0x55755ae8b010 'z$r_buff0_thd4' '_Bool'
|   |         `-ParenExpr 0x55755ae91e00 <col:165, col:226> 'int'
|   |           `-ConditionalOperator 0x55755ae91dd0 <col:166, col:212> 'int'
|   |             |-BinaryOperator 0x55755ae91cf0 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x55755ae91ca8 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x55755ae91c90 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x55755ae91c50 <col:166> '_Bool' lvalue Var 0x55755ae8b458 'z$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x55755ae91cd8 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x55755ae91cc0 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x55755ae91c70 <col:184> '_Bool' lvalue Var 0x55755ae8b010 'z$r_buff0_thd4' '_Bool'
|   |             |-ImplicitCastExpr 0x55755ae91d88 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x55755ae91d40 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x55755ae91d10 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x55755ae91db8 <col:212> 'int' <IntegralCast>
|   |               `-ImplicitCastExpr 0x55755ae91da0 <col:212> '_Bool' <LValueToRValue>
|   |                 `-DeclRefExpr 0x55755ae91d68 <col:212> '_Bool' lvalue Var 0x55755ae8b010 'z$r_buff0_thd4' '_Bool'
|   |-BinaryOperator 0x55755ae92510 <line:796:3, col:221> '_Bool' '='
|   | |-DeclRefExpr 0x55755ae91f68 <col:3> '_Bool' lvalue Var 0x55755ae8b268 'z$r_buff1_thd4' '_Bool'
|   | `-ImplicitCastExpr 0x55755ae924f8 <col:20, col:221> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55755ae924c8 <col:20, col:221> 'int'
|   |     |-ImplicitCastExpr 0x55755ae92480 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x55755ae92468 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x55755ae91f88 <col:20> '_Bool' lvalue Var 0x55755ae8b640 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x55755ae924b0 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x55755ae92498 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x55755ae91fa8 <col:36> '_Bool' lvalue Var 0x55755ae8b268 'z$r_buff1_thd4' '_Bool'
|   |     `-ParenExpr 0x55755ae92448 <col:53, col:221> 'int'
|   |       `-ConditionalOperator 0x55755ae92418 <col:54, col:220> 'int'
|   |         |-BinaryOperator 0x55755ae921b8 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x55755ae920d8 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x55755ae92000 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x55755ae91fe8 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x55755ae91fc8 <col:55> '_Bool' lvalue Var 0x55755ae8b458 'z$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x55755ae920b8 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x55755ae92050 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x55755ae92038 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x55755ae92018 <col:74> '_Bool' lvalue Var 0x55755ae8b010 'z$r_buff0_thd4' '_Bool'
|   |         | |   `-UnaryOperator 0x55755ae920a0 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x55755ae92088 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x55755ae92068 <col:93> '_Bool' lvalue Var 0x55755ae8b550 'z$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x55755ae92198 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x55755ae92130 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x55755ae92118 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x55755ae920f8 <col:112> '_Bool' lvalue Var 0x55755ae8b010 'z$r_buff0_thd4' '_Bool'
|   |         |   `-UnaryOperator 0x55755ae92180 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x55755ae92168 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x55755ae92148 <col:131> '_Bool' lvalue Var 0x55755ae8b268 'z$r_buff1_thd4' '_Bool'
|   |         |-ImplicitCastExpr 0x55755ae92400 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x55755ae923e8 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x55755ae921d8 <col:148> '_Bool' lvalue Var 0x55755ae8b268 'z$r_buff1_thd4' '_Bool'
|   |         `-ParenExpr 0x55755ae923c8 <col:165, col:220> 'int'
|   |           `-ConditionalOperator 0x55755ae92398 <col:166, col:219> 'int'
|   |             |-BinaryOperator 0x55755ae92298 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x55755ae92250 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x55755ae92238 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x55755ae921f8 <col:166> '_Bool' lvalue Var 0x55755ae8b458 'z$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x55755ae92280 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x55755ae92268 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x55755ae92218 <col:184> '_Bool' lvalue Var 0x55755ae8b010 'z$r_buff0_thd4' '_Bool'
|   |             |-ImplicitCastExpr 0x55755ae92368 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x55755ae922e8 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x55755ae922b8 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x55755ae92380 <col:212, col:219> 'int' <IntegralCast>
|   |               `-CStyleCastExpr 0x55755ae92340 <col:212, col:219> '_Bool' <IntegralToBoolean>
|   |                 `-IntegerLiteral 0x55755ae92310 <col:219> 'int' 0
|   |-BinaryOperator 0x55755ae92588 <line:797:3, col:25> 'int' '='
|   | |-DeclRefExpr 0x55755ae92530 <col:3> 'int' lvalue Var 0x55755ae8a5d8 '__unbuffered_p3_EAX' 'int'
|   | `-ImplicitCastExpr 0x55755ae92570 <col:25> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x55755ae92550 <col:25> 'int' lvalue Var 0x55755ae8aca0 'z' 'int'
|   |-BinaryOperator 0x55755ae926b8 <line:798:3, col:37> 'int' '='
|   | |-DeclRefExpr 0x55755ae925a8 <col:3> 'int' lvalue Var 0x55755ae8aca0 'z' 'int'
|   | `-ConditionalOperator 0x55755ae92688 <col:7, col:37> 'int'
|   |   |-ImplicitCastExpr 0x55755ae92640 <col:7> 'int' <IntegralCast>
|   |   | `-ImplicitCastExpr 0x55755ae92628 <col:7> '_Bool' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x55755ae925c8 <col:7> '_Bool' lvalue Var 0x55755ae8ad38 'z$flush_delayed' '_Bool'
|   |   |-ImplicitCastExpr 0x55755ae92658 <col:25> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x55755ae925e8 <col:25> 'int' lvalue Var 0x55755ae8adb8 'z$mem_tmp' 'int'
|   |   `-ImplicitCastExpr 0x55755ae92670 <col:37> 'int' <LValueToRValue>
|   |     `-DeclRefExpr 0x55755ae92608 <col:37> 'int' lvalue Var 0x55755ae8aca0 'z' 'int'
|   |-BinaryOperator 0x55755ae92750 <line:799:3, col:28> '_Bool' '='
|   | |-DeclRefExpr 0x55755ae926d8 <col:3> '_Bool' lvalue Var 0x55755ae8ad38 'z$flush_delayed' '_Bool'
|   | `-CStyleCastExpr 0x55755ae92728 <col:21, col:28> '_Bool' <IntegralToBoolean>
|   |   `-IntegerLiteral 0x55755ae926f8 <col:28> 'int' 0
|   |-CallExpr 0x55755ae927a8 <line:800:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x55755ae92790 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55755ae92770 <col:3> 'void ()' Function 0x55755ae30f00 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x55755ae92800 <line:801:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x55755ae927e8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55755ae927c8 <col:3> 'void ()' Function 0x55755ae30e40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x55755ae92878 <line:802:3, col:25> 'int' '='
|   | |-DeclRefExpr 0x55755ae92820 <col:3> 'int' lvalue Var 0x55755ae8a6f8 '__unbuffered_p3_EBX' 'int'
|   | `-ImplicitCastExpr 0x55755ae92860 <col:25> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x55755ae92840 <col:25> 'int' lvalue Var 0x55755ae8a818 'a' 'int'
|   |-CallExpr 0x55755ae928d0 <line:803:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x55755ae928b8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55755ae92898 <col:3> 'void ()' Function 0x55755ae30f00 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x55755ae92928 <line:804:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x55755ae92910 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55755ae928f0 <col:3> 'void ()' Function 0x55755ae30e40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x55755ae92c30 <line:805:3, col:103> 'int' '='
|   | |-DeclRefExpr 0x55755ae92948 <col:3> 'int' lvalue Var 0x55755ae8aca0 'z' 'int'
|   | `-ConditionalOperator 0x55755ae92c00 <col:7, col:103> 'int'
|   |   |-BinaryOperator 0x55755ae92a08 <col:7, col:25> 'int' '&&'
|   |   | |-ImplicitCastExpr 0x55755ae929c0 <col:7> 'int' <IntegralCast>
|   |   | | `-ImplicitCastExpr 0x55755ae929a8 <col:7> '_Bool' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x55755ae92968 <col:7> '_Bool' lvalue Var 0x55755ae8b458 'z$w_buff0_used' '_Bool'
|   |   | `-ImplicitCastExpr 0x55755ae929f0 <col:25> 'int' <IntegralCast>
|   |   |   `-ImplicitCastExpr 0x55755ae929d8 <col:25> '_Bool' <LValueToRValue>
|   |   |     `-DeclRefExpr 0x55755ae92988 <col:25> '_Bool' lvalue Var 0x55755ae8b010 'z$r_buff0_thd4' '_Bool'
|   |   |-ImplicitCastExpr 0x55755ae92be8 <col:42> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x55755ae92a28 <col:42> 'int' lvalue Var 0x55755ae8b3e0 'z$w_buff0' 'int'
|   |   `-ParenExpr 0x55755ae92bc8 <col:54, col:103> 'int'
|   |     `-ConditionalOperator 0x55755ae92b98 <col:55, col:102> 'int'
|   |       |-BinaryOperator 0x55755ae92ae8 <col:55, col:73> 'int' '&&'
|   |       | |-ImplicitCastExpr 0x55755ae92aa0 <col:55> 'int' <IntegralCast>
|   |       | | `-ImplicitCastExpr 0x55755ae92a88 <col:55> '_Bool' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x55755ae92a48 <col:55> '_Bool' lvalue Var 0x55755ae8b550 'z$w_buff1_used' '_Bool'
|   |       | `-ImplicitCastExpr 0x55755ae92ad0 <col:73> 'int' <IntegralCast>
|   |       |   `-ImplicitCastExpr 0x55755ae92ab8 <col:73> '_Bool' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x55755ae92a68 <col:73> '_Bool' lvalue Var 0x55755ae8b268 'z$r_buff1_thd4' '_Bool'
|   |       |-ImplicitCastExpr 0x55755ae92b48 <col:90> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x55755ae92b08 <col:90> 'int' lvalue Var 0x55755ae8b4d8 'z$w_buff1' 'int'
|   |       `-ImplicitCastExpr 0x55755ae92b80 <col:102> 'int' <LValueToRValue>
|   |         `-DeclRefExpr 0x55755ae92b28 <col:102> 'int' lvalue Var 0x55755ae8aca0 'z' 'int'
|   |-BinaryOperator 0x55755ae92e38 <line:806:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x55755ae92c50 <col:3> '_Bool' lvalue Var 0x55755ae8b458 'z$w_buff0_used' '_Bool'
|   | `-ImplicitCastExpr 0x55755ae92e20 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55755ae92df0 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x55755ae92d10 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x55755ae92cc8 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x55755ae92cb0 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x55755ae92c70 <col:20> '_Bool' lvalue Var 0x55755ae8b458 'z$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x55755ae92cf8 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x55755ae92ce0 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x55755ae92c90 <col:38> '_Bool' lvalue Var 0x55755ae8b010 'z$r_buff0_thd4' '_Bool'
|   |     |-ImplicitCastExpr 0x55755ae92da8 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x55755ae92d60 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x55755ae92d30 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x55755ae92dd8 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x55755ae92dc0 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x55755ae92d88 <col:66> '_Bool' lvalue Var 0x55755ae8b458 'z$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x55755ae93120 <line:807:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x55755ae92e58 <col:3> '_Bool' lvalue Var 0x55755ae8b550 'z$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x55755ae93108 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55755ae930d8 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x55755ae92ff8 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x55755ae92f18 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x55755ae92ed0 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x55755ae92eb8 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x55755ae92e78 <col:20> '_Bool' lvalue Var 0x55755ae8b458 'z$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x55755ae92f00 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x55755ae92ee8 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x55755ae92e98 <col:38> '_Bool' lvalue Var 0x55755ae8b010 'z$r_buff0_thd4' '_Bool'
|   |     | `-BinaryOperator 0x55755ae92fd8 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x55755ae92f90 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x55755ae92f78 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x55755ae92f38 <col:56> '_Bool' lvalue Var 0x55755ae8b550 'z$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x55755ae92fc0 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x55755ae92fa8 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x55755ae92f58 <col:74> '_Bool' lvalue Var 0x55755ae8b268 'z$r_buff1_thd4' '_Bool'
|   |     |-ImplicitCastExpr 0x55755ae93090 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x55755ae93048 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x55755ae93018 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x55755ae930c0 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x55755ae930a8 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x55755ae93070 <col:102> '_Bool' lvalue Var 0x55755ae8b550 'z$w_buff1_used' '_Bool'
|   |-BinaryOperator 0x55755ae93328 <line:808:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x55755ae93140 <col:3> '_Bool' lvalue Var 0x55755ae8b010 'z$r_buff0_thd4' '_Bool'
|   | `-ImplicitCastExpr 0x55755ae93310 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55755ae932e0 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x55755ae93200 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x55755ae931b8 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x55755ae931a0 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x55755ae93160 <col:20> '_Bool' lvalue Var 0x55755ae8b458 'z$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x55755ae931e8 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x55755ae931d0 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x55755ae93180 <col:38> '_Bool' lvalue Var 0x55755ae8b010 'z$r_buff0_thd4' '_Bool'
|   |     |-ImplicitCastExpr 0x55755ae93298 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x55755ae93250 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x55755ae93220 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x55755ae932c8 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x55755ae932b0 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x55755ae93278 <col:66> '_Bool' lvalue Var 0x55755ae8b010 'z$r_buff0_thd4' '_Bool'
|   |-BinaryOperator 0x55755ae93610 <line:809:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x55755ae93348 <col:3> '_Bool' lvalue Var 0x55755ae8b268 'z$r_buff1_thd4' '_Bool'
|   | `-ImplicitCastExpr 0x55755ae935f8 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55755ae935c8 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x55755ae934e8 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x55755ae93408 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x55755ae933c0 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x55755ae933a8 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x55755ae93368 <col:20> '_Bool' lvalue Var 0x55755ae8b458 'z$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x55755ae933f0 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x55755ae933d8 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x55755ae93388 <col:38> '_Bool' lvalue Var 0x55755ae8b010 'z$r_buff0_thd4' '_Bool'
|   |     | `-BinaryOperator 0x55755ae934c8 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x55755ae93480 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x55755ae93468 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x55755ae93428 <col:56> '_Bool' lvalue Var 0x55755ae8b550 'z$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x55755ae934b0 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x55755ae93498 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x55755ae93448 <col:74> '_Bool' lvalue Var 0x55755ae8b268 'z$r_buff1_thd4' '_Bool'
|   |     |-ImplicitCastExpr 0x55755ae93580 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x55755ae93538 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x55755ae93508 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x55755ae935b0 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x55755ae93598 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x55755ae93560 <col:102> '_Bool' lvalue Var 0x55755ae8b268 'z$r_buff1_thd4' '_Bool'
|   |-CallExpr 0x55755ae93668 <line:810:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x55755ae93650 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55755ae93630 <col:3> 'void ()' Function 0x55755ae30f00 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x55755ae936c0 <line:811:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x55755ae936a8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55755ae93688 <col:3> 'void ()' Function 0x55755ae30e40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x55755ae93778 <line:812:3, col:41> 'int' '='
|   | |-DeclRefExpr 0x55755ae936e0 <col:3> 'int' lvalue Var 0x55755ae8a278 '__unbuffered_cnt' 'int'
|   | `-BinaryOperator 0x55755ae93758 <col:22, col:41> 'int' '+'
|   |   |-ImplicitCastExpr 0x55755ae93740 <col:22> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x55755ae93700 <col:22> 'int' lvalue Var 0x55755ae8a278 '__unbuffered_cnt' 'int'
|   |   `-IntegerLiteral 0x55755ae93720 <col:41> 'int' 1
|   |-CallExpr 0x55755ae937d0 <line:813:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x55755ae937b8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55755ae93798 <col:3> 'void ()' Function 0x55755ae30f00 '__VERIFIER_atomic_end' 'void ()'
|   `-ReturnStmt 0x55755ae93848 <line:814:3, col:36>
|     `-CallExpr 0x55755ae93828 <col:10, col:36> 'void *'
|       `-ImplicitCastExpr 0x55755ae93810 <col:10> 'void *(*)(void)' <FunctionToPointerDecay>
|         `-DeclRefExpr 0x55755ae937f0 <col:10> 'void *(void)' Function 0x55755ae30958 '__VERIFIER_nondet_pointer' 'void *(void)'
|-FunctionDecl 0x55755ae939e0 prev 0x55755ae89fc0 <line:816:1, line:818:1> line:816:6 fence 'void ()'
| `-CompoundStmt 0x55755ae93a80 <line:817:1, line:818:1>
|-FunctionDecl 0x55755ae93ab0 prev 0x55755ae8a080 <line:819:1, line:821:1> line:819:6 isync 'void ()'
| `-CompoundStmt 0x55755ae93b50 <line:820:1, line:821:1>
|-FunctionDecl 0x55755ae93b90 prev 0x55755ae8a140 <line:822:1, line:824:1> line:822:6 lwfence 'void ()'
| `-CompoundStmt 0x55755ae93c30 <line:823:1, line:824:1>
`-FunctionDecl 0x55755ae93c98 <line:825:1, line:851:1> line:825:5 main 'int ()'
  `-CompoundStmt 0x55755ae95cb0 <line:826:1, line:851:1>
    |-DeclStmt 0x55755ae93db0 <line:827:3, col:17>
    | `-VarDecl 0x55755ae93d48 <col:3, col:13> col:13 used t535 'pthread_t':'unsigned long'
    |-CallExpr 0x55755ae93fb8 <line:828:3, col:53> 'int'
    | |-ImplicitCastExpr 0x55755ae93fa0 <col:3> 'int (*)(pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x55755ae93dc8 <col:3> 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' Function 0x55755ae71488 'pthread_create' 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)'
    | |-UnaryOperator 0x55755ae93e08 <col:18, col:19> 'pthread_t *' prefix '&' cannot overflow
    | | `-DeclRefExpr 0x55755ae93de8 <col:19> 'pthread_t':'unsigned long' lvalue Var 0x55755ae93d48 't535' 'pthread_t':'unsigned long'
    | |-ImplicitCastExpr 0x55755ae93ff8 <col:25, col:35> 'const pthread_attr_t *' <NullToPointer>
    | | `-ParenExpr 0x55755ae93e80 <col:25, col:35> 'void *'
    | |   `-CStyleCastExpr 0x55755ae93e58 <col:26, col:34> 'void *' <NullToPointer>
    | |     `-IntegerLiteral 0x55755ae93e20 <col:34> 'int' 0
    | |-ImplicitCastExpr 0x55755ae94010 <col:38> 'void *(*)(void *)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x55755ae93ea0 <col:38> 'void *(void *)' Function 0x55755ae8b758 'P0' 'void *(void *)'
    | `-ParenExpr 0x55755ae93f20 <col:42, col:52> 'void *'
    |   `-CStyleCastExpr 0x55755ae93ef8 <col:43, col:51> 'void *' <NullToPointer>
    |     `-IntegerLiteral 0x55755ae93ec0 <col:51> 'int' 0
    |-DeclStmt 0x55755ae940a0 <line:829:3, col:17>
    | `-VarDecl 0x55755ae94038 <col:3, col:13> col:13 used t536 'pthread_t':'unsigned long'
    |-CallExpr 0x55755ae94248 <line:830:3, col:53> 'int'
    | |-ImplicitCastExpr 0x55755ae94230 <col:3> 'int (*)(pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x55755ae940b8 <col:3> 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' Function 0x55755ae71488 'pthread_create' 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)'
    | |-UnaryOperator 0x55755ae940f8 <col:18, col:19> 'pthread_t *' prefix '&' cannot overflow
    | | `-DeclRefExpr 0x55755ae940d8 <col:19> 'pthread_t':'unsigned long' lvalue Var 0x55755ae94038 't536' 'pthread_t':'unsigned long'
    | |-ImplicitCastExpr 0x55755ae94288 <col:25, col:35> 'const pthread_attr_t *' <NullToPointer>
    | | `-ParenExpr 0x55755ae94170 <col:25, col:35> 'void *'
    | |   `-CStyleCastExpr 0x55755ae94148 <col:26, col:34> 'void *' <NullToPointer>
    | |     `-IntegerLiteral 0x55755ae94110 <col:34> 'int' 0
    | |-ImplicitCastExpr 0x55755ae942a0 <col:38> 'void *(*)(void *)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x55755ae94190 <col:38> 'void *(void *)' Function 0x55755ae8be58 'P1' 'void *(void *)'
    | `-ParenExpr 0x55755ae94210 <col:42, col:52> 'void *'
    |   `-CStyleCastExpr 0x55755ae941e8 <col:43, col:51> 'void *' <NullToPointer>
    |     `-IntegerLiteral 0x55755ae941b0 <col:51> 'int' 0
    |-DeclStmt 0x55755ae94330 <line:831:3, col:17>
    | `-VarDecl 0x55755ae942c8 <col:3, col:13> col:13 used t537 'pthread_t':'unsigned long'
    |-CallExpr 0x55755ae944d8 <line:832:3, col:53> 'int'
    | |-ImplicitCastExpr 0x55755ae944c0 <col:3> 'int (*)(pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x55755ae94348 <col:3> 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' Function 0x55755ae71488 'pthread_create' 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)'
    | |-UnaryOperator 0x55755ae94388 <col:18, col:19> 'pthread_t *' prefix '&' cannot overflow
    | | `-DeclRefExpr 0x55755ae94368 <col:19> 'pthread_t':'unsigned long' lvalue Var 0x55755ae942c8 't537' 'pthread_t':'unsigned long'
    | |-ImplicitCastExpr 0x55755ae94518 <col:25, col:35> 'const pthread_attr_t *' <NullToPointer>
    | | `-ParenExpr 0x55755ae94400 <col:25, col:35> 'void *'
    | |   `-CStyleCastExpr 0x55755ae943d8 <col:26, col:34> 'void *' <NullToPointer>
    | |     `-IntegerLiteral 0x55755ae943a0 <col:34> 'int' 0
    | |-ImplicitCastExpr 0x55755ae94530 <col:38> 'void *(*)(void *)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x55755ae94420 <col:38> 'void *(void *)' Function 0x55755ae8c4c0 'P2' 'void *(void *)'
    | `-ParenExpr 0x55755ae944a0 <col:42, col:52> 'void *'
    |   `-CStyleCastExpr 0x55755ae94478 <col:43, col:51> 'void *' <NullToPointer>
    |     `-IntegerLiteral 0x55755ae94440 <col:51> 'int' 0
    |-DeclStmt 0x55755ae945c0 <line:833:3, col:17>
    | `-VarDecl 0x55755ae94558 <col:3, col:13> col:13 used t538 'pthread_t':'unsigned long'
    |-CallExpr 0x55755ae94768 <line:834:3, col:53> 'int'
    | |-ImplicitCastExpr 0x55755ae94750 <col:3> 'int (*)(pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x55755ae945d8 <col:3> 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' Function 0x55755ae71488 'pthread_create' 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)'
    | |-UnaryOperator 0x55755ae94618 <col:18, col:19> 'pthread_t *' prefix '&' cannot overflow
    | | `-DeclRefExpr 0x55755ae945f8 <col:19> 'pthread_t':'unsigned long' lvalue Var 0x55755ae94558 't538' 'pthread_t':'unsigned long'
    | |-ImplicitCastExpr 0x55755ae947a8 <col:25, col:35> 'const pthread_attr_t *' <NullToPointer>
    | | `-ParenExpr 0x55755ae94690 <col:25, col:35> 'void *'
    | |   `-CStyleCastExpr 0x55755ae94668 <col:26, col:34> 'void *' <NullToPointer>
    | |     `-IntegerLiteral 0x55755ae94630 <col:34> 'int' 0
    | |-ImplicitCastExpr 0x55755ae947c0 <col:38> 'void *(*)(void *)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x55755ae946b0 <col:38> 'void *(void *)' Function 0x55755ae8f558 'P3' 'void *(void *)'
    | `-ParenExpr 0x55755ae94730 <col:42, col:52> 'void *'
    |   `-CStyleCastExpr 0x55755ae94708 <col:43, col:51> 'void *' <NullToPointer>
    |     `-IntegerLiteral 0x55755ae946d0 <col:51> 'int' 0
    |-CallExpr 0x55755ae94810 <line:835:3, col:27> 'void'
    | `-ImplicitCastExpr 0x55755ae947f8 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x55755ae947d8 <col:3> 'void ()' Function 0x55755ae30e40 '__VERIFIER_atomic_begin' 'void ()'
    |-BinaryOperator 0x55755ae948e0 <line:836:3, col:41> '_Bool' '='
    | |-DeclRefExpr 0x55755ae94830 <col:3> '_Bool' lvalue Var 0x55755ae8a8b0 'main$tmp_guard0' '_Bool'
    | `-ImplicitCastExpr 0x55755ae948c8 <col:21, col:41> '_Bool' <IntegralToBoolean>
    |   `-BinaryOperator 0x55755ae948a8 <col:21, col:41> 'int' '=='
    |     |-ImplicitCastExpr 0x55755ae94890 <col:21> 'int' <LValueToRValue>
    |     | `-DeclRefExpr 0x55755ae94850 <col:21> 'int' lvalue Var 0x55755ae8a278 '__unbuffered_cnt' 'int'
    |     `-IntegerLiteral 0x55755ae94870 <col:41> 'int' 4
    |-CallExpr 0x55755ae94938 <line:837:3, col:25> 'void'
    | `-ImplicitCastExpr 0x55755ae94920 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x55755ae94900 <col:3> 'void ()' Function 0x55755ae30f00 '__VERIFIER_atomic_end' 'void ()'
    |-CallExpr 0x55755ae949b0 <line:838:3, col:36> 'void'
    | |-ImplicitCastExpr 0x55755ae94998 <col:3> 'void (*)(int)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x55755ae94958 <col:3> 'void (int)' Function 0x55755ae30790 '__VERIFIER_assume' 'void (int)'
    | `-ImplicitCastExpr 0x55755ae949f0 <col:21> 'int' <IntegralCast>
    |   `-ImplicitCastExpr 0x55755ae949d8 <col:21> '_Bool' <LValueToRValue>
    |     `-DeclRefExpr 0x55755ae94978 <col:21> '_Bool' lvalue Var 0x55755ae8a8b0 'main$tmp_guard0' '_Bool'
    |-CallExpr 0x55755ae94a40 <line:839:3, col:27> 'void'
    | `-ImplicitCastExpr 0x55755ae94a28 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x55755ae94a08 <col:3> 'void ()' Function 0x55755ae30e40 '__VERIFIER_atomic_begin' 'void ()'
    |-BinaryOperator 0x55755ae94d48 <line:840:3, col:103> 'int' '='
    | |-DeclRefExpr 0x55755ae94a60 <col:3> 'int' lvalue Var 0x55755ae8aca0 'z' 'int'
    | `-ConditionalOperator 0x55755ae94d18 <col:7, col:103> 'int'
    |   |-BinaryOperator 0x55755ae94b20 <col:7, col:25> 'int' '&&'
    |   | |-ImplicitCastExpr 0x55755ae94ad8 <col:7> 'int' <IntegralCast>
    |   | | `-ImplicitCastExpr 0x55755ae94ac0 <col:7> '_Bool' <LValueToRValue>
    |   | |   `-DeclRefExpr 0x55755ae94a80 <col:7> '_Bool' lvalue Var 0x55755ae8b458 'z$w_buff0_used' '_Bool'
    |   | `-ImplicitCastExpr 0x55755ae94b08 <col:25> 'int' <IntegralCast>
    |   |   `-ImplicitCastExpr 0x55755ae94af0 <col:25> '_Bool' <LValueToRValue>
    |   |     `-DeclRefExpr 0x55755ae94aa0 <col:25> '_Bool' lvalue Var 0x55755ae8ae30 'z$r_buff0_thd0' '_Bool'
    |   |-ImplicitCastExpr 0x55755ae94d00 <col:42> 'int' <LValueToRValue>
    |   | `-DeclRefExpr 0x55755ae94b40 <col:42> 'int' lvalue Var 0x55755ae8b3e0 'z$w_buff0' 'int'
    |   `-ParenExpr 0x55755ae94ce0 <col:54, col:103> 'int'
    |     `-ConditionalOperator 0x55755ae94cb0 <col:55, col:102> 'int'
    |       |-BinaryOperator 0x55755ae94c20 <col:55, col:73> 'int' '&&'
    |       | |-ImplicitCastExpr 0x55755ae94bd8 <col:55> 'int' <IntegralCast>
    |       | | `-ImplicitCastExpr 0x55755ae94bc0 <col:55> '_Bool' <LValueToRValue>
    |       | |   `-DeclRefExpr 0x55755ae94b60 <col:55> '_Bool' lvalue Var 0x55755ae8b550 'z$w_buff1_used' '_Bool'
    |       | `-ImplicitCastExpr 0x55755ae94c08 <col:73> 'int' <IntegralCast>
    |       |   `-ImplicitCastExpr 0x55755ae94bf0 <col:73> '_Bool' <LValueToRValue>
    |       |     `-DeclRefExpr 0x55755ae94ba0 <col:73> '_Bool' lvalue Var 0x55755ae8b088 'z$r_buff1_thd0' '_Bool'
    |       |-ImplicitCastExpr 0x55755ae94c80 <col:90> 'int' <LValueToRValue>
    |       | `-DeclRefExpr 0x55755ae94c40 <col:90> 'int' lvalue Var 0x55755ae8b4d8 'z$w_buff1' 'int'
    |       `-ImplicitCastExpr 0x55755ae94c98 <col:102> 'int' <LValueToRValue>
    |         `-DeclRefExpr 0x55755ae94c60 <col:102> 'int' lvalue Var 0x55755ae8aca0 'z' 'int'
    |-BinaryOperator 0x55755ae94f50 <line:841:3, col:66> '_Bool' '='
    | |-DeclRefExpr 0x55755ae94d68 <col:3> '_Bool' lvalue Var 0x55755ae8b458 'z$w_buff0_used' '_Bool'
    | `-ImplicitCastExpr 0x55755ae94f38 <col:20, col:66> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x55755ae94f08 <col:20, col:66> 'int'
    |     |-BinaryOperator 0x55755ae94e28 <col:20, col:38> 'int' '&&'
    |     | |-ImplicitCastExpr 0x55755ae94de0 <col:20> 'int' <IntegralCast>
    |     | | `-ImplicitCastExpr 0x55755ae94dc8 <col:20> '_Bool' <LValueToRValue>
    |     | |   `-DeclRefExpr 0x55755ae94d88 <col:20> '_Bool' lvalue Var 0x55755ae8b458 'z$w_buff0_used' '_Bool'
    |     | `-ImplicitCastExpr 0x55755ae94e10 <col:38> 'int' <IntegralCast>
    |     |   `-ImplicitCastExpr 0x55755ae94df8 <col:38> '_Bool' <LValueToRValue>
    |     |     `-DeclRefExpr 0x55755ae94da8 <col:38> '_Bool' lvalue Var 0x55755ae8ae30 'z$r_buff0_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x55755ae94ec0 <col:55, col:62> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x55755ae94e78 <col:55, col:62> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x55755ae94e48 <col:62> 'int' 0
    |     `-ImplicitCastExpr 0x55755ae94ef0 <col:66> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x55755ae94ed8 <col:66> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x55755ae94ea0 <col:66> '_Bool' lvalue Var 0x55755ae8b458 'z$w_buff0_used' '_Bool'
    |-BinaryOperator 0x55755ae95238 <line:842:3, col:102> '_Bool' '='
    | |-DeclRefExpr 0x55755ae94f70 <col:3> '_Bool' lvalue Var 0x55755ae8b550 'z$w_buff1_used' '_Bool'
    | `-ImplicitCastExpr 0x55755ae95220 <col:20, col:102> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x55755ae951f0 <col:20, col:102> 'int'
    |     |-BinaryOperator 0x55755ae95110 <col:20, col:74> 'int' '||'
    |     | |-BinaryOperator 0x55755ae95030 <col:20, col:38> 'int' '&&'
    |     | | |-ImplicitCastExpr 0x55755ae94fe8 <col:20> 'int' <IntegralCast>
    |     | | | `-ImplicitCastExpr 0x55755ae94fd0 <col:20> '_Bool' <LValueToRValue>
    |     | | |   `-DeclRefExpr 0x55755ae94f90 <col:20> '_Bool' lvalue Var 0x55755ae8b458 'z$w_buff0_used' '_Bool'
    |     | | `-ImplicitCastExpr 0x55755ae95018 <col:38> 'int' <IntegralCast>
    |     | |   `-ImplicitCastExpr 0x55755ae95000 <col:38> '_Bool' <LValueToRValue>
    |     | |     `-DeclRefExpr 0x55755ae94fb0 <col:38> '_Bool' lvalue Var 0x55755ae8ae30 'z$r_buff0_thd0' '_Bool'
    |     | `-BinaryOperator 0x55755ae950f0 <col:56, col:74> 'int' '&&'
    |     |   |-ImplicitCastExpr 0x55755ae950a8 <col:56> 'int' <IntegralCast>
    |     |   | `-ImplicitCastExpr 0x55755ae95090 <col:56> '_Bool' <LValueToRValue>
    |     |   |   `-DeclRefExpr 0x55755ae95050 <col:56> '_Bool' lvalue Var 0x55755ae8b550 'z$w_buff1_used' '_Bool'
    |     |   `-ImplicitCastExpr 0x55755ae950d8 <col:74> 'int' <IntegralCast>
    |     |     `-ImplicitCastExpr 0x55755ae950c0 <col:74> '_Bool' <LValueToRValue>
    |     |       `-DeclRefExpr 0x55755ae95070 <col:74> '_Bool' lvalue Var 0x55755ae8b088 'z$r_buff1_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x55755ae951a8 <col:91, col:98> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x55755ae95160 <col:91, col:98> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x55755ae95130 <col:98> 'int' 0
    |     `-ImplicitCastExpr 0x55755ae951d8 <col:102> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x55755ae951c0 <col:102> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x55755ae95188 <col:102> '_Bool' lvalue Var 0x55755ae8b550 'z$w_buff1_used' '_Bool'
    |-BinaryOperator 0x55755ae95440 <line:843:3, col:66> '_Bool' '='
    | |-DeclRefExpr 0x55755ae95258 <col:3> '_Bool' lvalue Var 0x55755ae8ae30 'z$r_buff0_thd0' '_Bool'
    | `-ImplicitCastExpr 0x55755ae95428 <col:20, col:66> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x55755ae953f8 <col:20, col:66> 'int'
    |     |-BinaryOperator 0x55755ae95318 <col:20, col:38> 'int' '&&'
    |     | |-ImplicitCastExpr 0x55755ae952d0 <col:20> 'int' <IntegralCast>
    |     | | `-ImplicitCastExpr 0x55755ae952b8 <col:20> '_Bool' <LValueToRValue>
    |     | |   `-DeclRefExpr 0x55755ae95278 <col:20> '_Bool' lvalue Var 0x55755ae8b458 'z$w_buff0_used' '_Bool'
    |     | `-ImplicitCastExpr 0x55755ae95300 <col:38> 'int' <IntegralCast>
    |     |   `-ImplicitCastExpr 0x55755ae952e8 <col:38> '_Bool' <LValueToRValue>
    |     |     `-DeclRefExpr 0x55755ae95298 <col:38> '_Bool' lvalue Var 0x55755ae8ae30 'z$r_buff0_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x55755ae953b0 <col:55, col:62> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x55755ae95368 <col:55, col:62> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x55755ae95338 <col:62> 'int' 0
    |     `-ImplicitCastExpr 0x55755ae953e0 <col:66> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x55755ae953c8 <col:66> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x55755ae95390 <col:66> '_Bool' lvalue Var 0x55755ae8ae30 'z$r_buff0_thd0' '_Bool'
    |-BinaryOperator 0x55755ae95728 <line:844:3, col:102> '_Bool' '='
    | |-DeclRefExpr 0x55755ae95460 <col:3> '_Bool' lvalue Var 0x55755ae8b088 'z$r_buff1_thd0' '_Bool'
    | `-ImplicitCastExpr 0x55755ae95710 <col:20, col:102> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x55755ae956e0 <col:20, col:102> 'int'
    |     |-BinaryOperator 0x55755ae95600 <col:20, col:74> 'int' '||'
    |     | |-BinaryOperator 0x55755ae95520 <col:20, col:38> 'int' '&&'
    |     | | |-ImplicitCastExpr 0x55755ae954d8 <col:20> 'int' <IntegralCast>
    |     | | | `-ImplicitCastExpr 0x55755ae954c0 <col:20> '_Bool' <LValueToRValue>
    |     | | |   `-DeclRefExpr 0x55755ae95480 <col:20> '_Bool' lvalue Var 0x55755ae8b458 'z$w_buff0_used' '_Bool'
    |     | | `-ImplicitCastExpr 0x55755ae95508 <col:38> 'int' <IntegralCast>
    |     | |   `-ImplicitCastExpr 0x55755ae954f0 <col:38> '_Bool' <LValueToRValue>
    |     | |     `-DeclRefExpr 0x55755ae954a0 <col:38> '_Bool' lvalue Var 0x55755ae8ae30 'z$r_buff0_thd0' '_Bool'
    |     | `-BinaryOperator 0x55755ae955e0 <col:56, col:74> 'int' '&&'
    |     |   |-ImplicitCastExpr 0x55755ae95598 <col:56> 'int' <IntegralCast>
    |     |   | `-ImplicitCastExpr 0x55755ae95580 <col:56> '_Bool' <LValueToRValue>
    |     |   |   `-DeclRefExpr 0x55755ae95540 <col:56> '_Bool' lvalue Var 0x55755ae8b550 'z$w_buff1_used' '_Bool'
    |     |   `-ImplicitCastExpr 0x55755ae955c8 <col:74> 'int' <IntegralCast>
    |     |     `-ImplicitCastExpr 0x55755ae955b0 <col:74> '_Bool' <LValueToRValue>
    |     |       `-DeclRefExpr 0x55755ae95560 <col:74> '_Bool' lvalue Var 0x55755ae8b088 'z$r_buff1_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x55755ae95698 <col:91, col:98> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x55755ae95650 <col:91, col:98> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x55755ae95620 <col:98> 'int' 0
    |     `-ImplicitCastExpr 0x55755ae956c8 <col:102> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x55755ae956b0 <col:102> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x55755ae95678 <col:102> '_Bool' lvalue Var 0x55755ae8b088 'z$r_buff1_thd0' '_Bool'
    |-CallExpr 0x55755ae95780 <line:845:3, col:25> 'void'
    | `-ImplicitCastExpr 0x55755ae95768 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x55755ae95748 <col:3> 'void ()' Function 0x55755ae30f00 '__VERIFIER_atomic_end' 'void ()'
    |-CallExpr 0x55755ae957d8 <line:846:3, col:27> 'void'
    | `-ImplicitCastExpr 0x55755ae957c0 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x55755ae957a0 <col:3> 'void ()' Function 0x55755ae30e40 '__VERIFIER_atomic_begin' 'void ()'
    |-BinaryOperator 0x55755ae95b40 <line:847:3, col:141> '_Bool' '='
    | |-DeclRefExpr 0x55755ae957f8 <col:3> '_Bool' lvalue Var 0x55755ae8a928 'main$tmp_guard1' '_Bool'
    | `-ImplicitCastExpr 0x55755ae95b28 <col:21, col:141> '_Bool' <IntegralToBoolean>
    |   `-UnaryOperator 0x55755ae95b10 <col:21, col:141> 'int' prefix '!' cannot overflow
    |     `-ParenExpr 0x55755ae95af0 <col:22, col:141> 'int'
    |       `-BinaryOperator 0x55755ae95ad0 <col:23, col:140> 'int' '&&'
    |         |-BinaryOperator 0x55755ae95a38 <col:23, col:112> 'int' '&&'
    |         | |-BinaryOperator 0x55755ae959a0 <col:23, col:84> 'int' '&&'
    |         | | |-BinaryOperator 0x55755ae95908 <col:23, col:56> 'int' '&&'
    |         | | | |-BinaryOperator 0x55755ae95870 <col:23, col:28> 'int' '=='
    |         | | | | |-ImplicitCastExpr 0x55755ae95858 <col:23> 'int' <LValueToRValue>
    |         | | | | | `-DeclRefExpr 0x55755ae95818 <col:23> 'int' lvalue Var 0x55755ae8ab80 'y' 'int'
    |         | | | | `-IntegerLiteral 0x55755ae95838 <col:28> 'int' 2
    |         | | | `-BinaryOperator 0x55755ae958e8 <col:33, col:56> 'int' '=='
    |         | | |   |-ImplicitCastExpr 0x55755ae958d0 <col:33> 'int' <LValueToRValue>
    |         | | |   | `-DeclRefExpr 0x55755ae95890 <col:33> 'int' lvalue Var 0x55755ae8a398 '__unbuffered_p0_EAX' 'int'
    |         | | |   `-IntegerLiteral 0x55755ae958b0 <col:56> 'int' 0
    |         | | `-BinaryOperator 0x55755ae95980 <col:61, col:84> 'int' '=='
    |         | |   |-ImplicitCastExpr 0x55755ae95968 <col:61> 'int' <LValueToRValue>
    |         | |   | `-DeclRefExpr 0x55755ae95928 <col:61> 'int' lvalue Var 0x55755ae8a4b8 '__unbuffered_p2_EAX' 'int'
    |         | |   `-IntegerLiteral 0x55755ae95948 <col:84> 'int' 0
    |         | `-BinaryOperator 0x55755ae95a18 <col:89, col:112> 'int' '=='
    |         |   |-ImplicitCastExpr 0x55755ae95a00 <col:89> 'int' <LValueToRValue>
    |         |   | `-DeclRefExpr 0x55755ae959c0 <col:89> 'int' lvalue Var 0x55755ae8a5d8 '__unbuffered_p3_EAX' 'int'
    |         |   `-IntegerLiteral 0x55755ae959e0 <col:112> 'int' 1
    |         `-BinaryOperator 0x55755ae95ab0 <col:117, col:140> 'int' '=='
    |           |-ImplicitCastExpr 0x55755ae95a98 <col:117> 'int' <LValueToRValue>
    |           | `-DeclRefExpr 0x55755ae95a58 <col:117> 'int' lvalue Var 0x55755ae8a6f8 '__unbuffered_p3_EBX' 'int'
    |           `-IntegerLiteral 0x55755ae95a78 <col:140> 'int' 0
    |-CallExpr 0x55755ae95bb0 <line:848:3, col:25> 'void'
    | `-ImplicitCastExpr 0x55755ae95b80 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x55755ae95b60 <col:3> 'void ()' Function 0x55755ae30f00 '__VERIFIER_atomic_end' 'void ()'
    |-CallExpr 0x55755ae95c28 <line:849:3, col:36> 'void'
    | |-ImplicitCastExpr 0x55755ae95c10 <col:3> 'void (*)(int)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x55755ae95bd0 <col:3> 'void (int)' Function 0x55755ae30bc8 '__VERIFIER_assert' 'void (int)'
    | `-ImplicitCastExpr 0x55755ae95c68 <col:21> 'int' <IntegralCast>
    |   `-ImplicitCastExpr 0x55755ae95c50 <col:21> '_Bool' <LValueToRValue>
    |     `-DeclRefExpr 0x55755ae95bf0 <col:21> '_Bool' lvalue Var 0x55755ae8a928 'main$tmp_guard1' '_Bool'
    `-ReturnStmt 0x55755ae95ca0 <line:850:3, col:10>
      `-IntegerLiteral 0x55755ae95c80 <col:10> 'int' 0
