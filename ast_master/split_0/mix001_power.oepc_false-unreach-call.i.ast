TranslationUnitDecl 0x5576dddb1e18 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x5576dddb26d8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x5576dddb23b0 '__int128'
|-TypedefDecl 0x5576dddb2748 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x5576dddb23d0 'unsigned __int128'
|-TypedefDecl 0x5576dddb2a50 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x5576dddb2820 'struct __NSConstantString_tag'
|   `-Record 0x5576dddb27a0 '__NSConstantString_tag'
|-TypedefDecl 0x5576dddb2af8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x5576dddb2ab0 'char *'
|   `-BuiltinType 0x5576dddb1eb0 'char'
|-TypedefDecl 0x5576dddf1650 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'struct __va_list_tag [1]'
| `-ConstantArrayType 0x5576dddb2d90 'struct __va_list_tag [1]' 1 
|   `-RecordType 0x5576dddb2bd0 'struct __va_list_tag'
|     `-Record 0x5576dddb2b50 '__va_list_tag'
|-FunctionDecl 0x5576dddf1770 <./split_0/mix001_power.oepc_false-unreach-call.i:1:1, col:41> col:14 used __VERIFIER_nondet_bool '_Bool (void)' extern
|-FunctionDecl 0x5576dddf1940 <line:2:1, col:34> col:13 used __VERIFIER_assume 'void (int)' extern
| `-ParmVarDecl 0x5576dddf1870 <col:31> col:34 'int'
|-FunctionDecl 0x5576dddf1ab8 <line:3:1, col:45> col:15 used __VERIFIER_nondet_pointer 'void *(void)' extern
|-FunctionDecl 0x5576dddf1be0 <line:4:1, col:61> col:13 used __VERIFIER_error 'void () __attribute__((noreturn))' extern
|-FunctionDecl 0x5576dddf1d28 <line:5:1, col:99> col:6 used __VERIFIER_assert 'void (int)'
| |-ParmVarDecl 0x5576dddf1c98 <col:24, col:28> col:28 used expression 'int'
| `-CompoundStmt 0x5576dddf1f58 <col:40, col:99>
|   |-IfStmt 0x5576dddf1f28 <col:42, col:88>
|   | |-UnaryOperator 0x5576dddf1e08 <col:46, col:47> 'int' prefix '!' cannot overflow
|   | | `-ImplicitCastExpr 0x5576dddf1df0 <col:47> 'int' <LValueToRValue>
|   | |   `-DeclRefExpr 0x5576dddf1dd0 <col:47> 'int' lvalue ParmVar 0x5576dddf1c98 'expression' 'int'
|   | `-CompoundStmt 0x5576dddf1f10 <col:59, col:88>
|   |   `-LabelStmt 0x5576dddf1ef8 <col:61, col:85> 'ERROR'
|   |     `-CallExpr 0x5576dddf1e88 <col:68, col:85> 'void'
|   |       `-ImplicitCastExpr 0x5576dddf1e70 <col:68> 'void (*)() __attribute__((noreturn))' <FunctionToPointerDecay>
|   |         `-DeclRefExpr 0x5576dddf1e20 <col:68> 'void () __attribute__((noreturn))' Function 0x5576dddf1be0 '__VERIFIER_error' 'void () __attribute__((noreturn))'
|   |-NullStmt 0x5576dddf1f40 <col:89>
|   `-ReturnStmt 0x5576dddf1f48 <col:91>
|-FunctionDecl 0x5576dddf1fa0 <line:6:1, col:37> col:13 used __VERIFIER_atomic_begin 'void ()' extern
|-FunctionDecl 0x5576dddf2060 <line:7:1, col:35> col:13 used __VERIFIER_atomic_end 'void ()' extern
|-FunctionDecl 0x5576dddf23e0 <line:9:1, line:11:76> line:9:13 __assert_fail 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x5576dddf2118 <col:28, col:40> col:40 __assertion 'const char *'
| |-ParmVarDecl 0x5576dddf2198 <col:53, col:65> col:65 __file 'const char *'
| |-ParmVarDecl 0x5576dddf2218 <line:10:7, col:20> col:20 __line 'unsigned int'
| |-ParmVarDecl 0x5576dddf2298 <col:28, col:40> col:40 __function 'const char *'
| `-NoThrowAttr 0x5576dddf24a0 <line:11:22>
|-FunctionDecl 0x5576dde18520 <line:12:1, line:14:76> line:12:13 __assert_perror_fail 'void (int, const char *, unsigned int, const char *) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x5576dddf2510 <col:35, col:39> col:39 __errnum 'int'
| |-ParmVarDecl 0x5576dddf2590 <col:49, col:61> col:61 __file 'const char *'
| |-ParmVarDecl 0x5576dde18350 <line:13:7, col:20> col:20 __line 'unsigned int'
| |-ParmVarDecl 0x5576dde183d0 <col:28, col:40> col:40 __function 'const char *'
| `-NoThrowAttr 0x5576dde185e0 <line:14:22>
|-FunctionDecl 0x5576dde18890 <line:15:1, line:16:76> line:15:13 __assert 'void (const char *, const char *, int) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x5576dde18650 <col:23, col:35> col:35 __assertion 'const char *'
| |-ParmVarDecl 0x5576dde186d0 <col:48, col:60> col:60 __file 'const char *'
| |-ParmVarDecl 0x5576dde18750 <col:68, col:72> col:72 __line 'int'
| `-NoThrowAttr 0x5576dde18948 <line:16:22>
|-TypedefDecl 0x5576dde189b8 <line:18:1, col:23> col:23 __u_char 'unsigned char'
| `-BuiltinType 0x5576dddb1f70 'unsigned char'
|-TypedefDecl 0x5576dde18a28 <line:19:1, col:28> col:28 __u_short 'unsigned short'
| `-BuiltinType 0x5576dddb1f90 'unsigned short'
|-TypedefDecl 0x5576dde18a98 <line:20:1, col:22> col:22 __u_int 'unsigned int'
| `-BuiltinType 0x5576dddb1fb0 'unsigned int'
|-TypedefDecl 0x5576dde18b08 <line:21:1, col:27> col:27 __u_long 'unsigned long'
| `-BuiltinType 0x5576dddb1fd0 'unsigned long'
|-TypedefDecl 0x5576dde18b78 <line:22:1, col:21> col:21 __int8_t 'signed char'
| `-BuiltinType 0x5576dddb1ed0 'signed char'
|-TypedefDecl 0x5576dde18be8 <line:23:1, col:23> col:23 __uint8_t 'unsigned char'
| `-BuiltinType 0x5576dddb1f70 'unsigned char'
|-TypedefDecl 0x5576dde18c58 <line:24:1, col:26> col:26 __int16_t 'short'
| `-BuiltinType 0x5576dddb1ef0 'short'
|-TypedefDecl 0x5576dde18cc8 <line:25:1, col:28> col:28 __uint16_t 'unsigned short'
| `-BuiltinType 0x5576dddb1f90 'unsigned short'
|-TypedefDecl 0x5576dde18d38 <line:26:1, col:20> col:20 __int32_t 'int'
| `-BuiltinType 0x5576dddb1f10 'int'
|-TypedefDecl 0x5576dde18da8 <line:27:1, col:22> col:22 __uint32_t 'unsigned int'
| `-BuiltinType 0x5576dddb1fb0 'unsigned int'
|-TypedefDecl 0x5576dde18e18 <line:28:1, col:25> col:25 __int64_t 'long'
| `-BuiltinType 0x5576dddb1f30 'long'
|-TypedefDecl 0x5576dde18e88 <line:29:1, col:27> col:27 referenced __uint64_t 'unsigned long'
| `-BuiltinType 0x5576dddb1fd0 'unsigned long'
|-TypedefDecl 0x5576dde18ef8 <line:30:1, col:18> col:18 referenced __quad_t 'long'
| `-BuiltinType 0x5576dddb1f30 'long'
|-TypedefDecl 0x5576dde18f68 <line:31:1, col:27> col:27 __u_quad_t 'unsigned long'
| `-BuiltinType 0x5576dddb1fd0 'unsigned long'
|-TypedefDecl 0x5576dde18fd8 <line:32:1, col:27> col:27 __dev_t 'unsigned long'
| `-BuiltinType 0x5576dddb1fd0 'unsigned long'
|-TypedefDecl 0x5576dde19048 <line:33:1, col:22> col:22 __uid_t 'unsigned int'
| `-BuiltinType 0x5576dddb1fb0 'unsigned int'
|-TypedefDecl 0x5576dde190b8 <line:34:1, col:22> col:22 __gid_t 'unsigned int'
| `-BuiltinType 0x5576dddb1fb0 'unsigned int'
|-TypedefDecl 0x5576dde19128 <line:35:1, col:27> col:27 __ino_t 'unsigned long'
| `-BuiltinType 0x5576dddb1fd0 'unsigned long'
|-TypedefDecl 0x5576dde19198 <line:36:1, col:27> col:27 __ino64_t 'unsigned long'
| `-BuiltinType 0x5576dddb1fd0 'unsigned long'
|-TypedefDecl 0x5576dde19208 <line:37:1, col:22> col:22 __mode_t 'unsigned int'
| `-BuiltinType 0x5576dddb1fb0 'unsigned int'
|-TypedefDecl 0x5576dde19278 <line:38:1, col:27> col:27 __nlink_t 'unsigned long'
| `-BuiltinType 0x5576dddb1fd0 'unsigned long'
|-TypedefDecl 0x5576dde192e8 <line:39:1, col:18> col:18 __off_t 'long'
| `-BuiltinType 0x5576dddb1f30 'long'
|-TypedefDecl 0x5576dde19378 <line:40:1, col:18> col:18 referenced __off64_t 'long'
| `-BuiltinType 0x5576dddb1f30 'long'
|-TypedefDecl 0x5576dde193e8 <line:41:1, col:13> col:13 referenced __pid_t 'int'
| `-BuiltinType 0x5576dddb1f10 'int'
|-RecordDecl 0x5576dde19440 <line:42:9, col:32> col:9 struct definition
| `-FieldDecl 0x5576dde19588 <col:18, col:29> col:22 __val 'int [2]'
|-TypedefDecl 0x5576dde19640 <col:1, col:34> col:34 __fsid_t 'struct __fsid_t':'__fsid_t'
| `-ElaboratedType 0x5576dde195e0 'struct __fsid_t' sugar
|   `-RecordType 0x5576dde194c0 '__fsid_t'
|     `-Record 0x5576dde19440 ''
|-TypedefDecl 0x5576dde196c8 <line:43:1, col:18> col:18 referenced __clock_t 'long'
| `-BuiltinType 0x5576dddb1f30 'long'
|-TypedefDecl 0x5576dde19738 <line:44:1, col:27> col:27 __rlim_t 'unsigned long'
| `-BuiltinType 0x5576dddb1fd0 'unsigned long'
|-TypedefDecl 0x5576dde197a8 <line:45:1, col:27> col:27 __rlim64_t 'unsigned long'
| `-BuiltinType 0x5576dddb1fd0 'unsigned long'
|-TypedefDecl 0x5576dde19818 <line:46:1, col:22> col:22 __id_t 'unsigned int'
| `-BuiltinType 0x5576dddb1fb0 'unsigned int'
|-TypedefDecl 0x5576dde19888 <line:47:1, col:18> col:18 referenced __time_t 'long'
| `-BuiltinType 0x5576dddb1f30 'long'
|-TypedefDecl 0x5576dde198f8 <line:48:1, col:22> col:22 __useconds_t 'unsigned int'
| `-BuiltinType 0x5576dddb1fb0 'unsigned int'
|-TypedefDecl 0x5576dde19968 <line:49:1, col:18> col:18 __suseconds_t 'long'
| `-BuiltinType 0x5576dddb1f30 'long'
|-TypedefDecl 0x5576dde199d8 <line:50:1, col:13> col:13 __daddr_t 'int'
| `-BuiltinType 0x5576dddb1f10 'int'
|-TypedefDecl 0x5576dde19a48 <line:51:1, col:13> col:13 __key_t 'int'
| `-BuiltinType 0x5576dddb1f10 'int'
|-TypedefDecl 0x5576dde19ab8 <line:52:1, col:13> col:13 referenced __clockid_t 'int'
| `-BuiltinType 0x5576dddb1f10 'int'
|-TypedefDecl 0x5576dde19b28 <line:53:1, col:16> col:16 referenced __timer_t 'void *'
| `-PointerType 0x5576dddb2630 'void *'
|   `-BuiltinType 0x5576dddb1e70 'void'
|-TypedefDecl 0x5576dde19b98 <line:54:1, col:18> col:18 __blksize_t 'long'
| `-BuiltinType 0x5576dddb1f30 'long'
|-TypedefDecl 0x5576dde19c08 <line:55:1, col:18> col:18 __blkcnt_t 'long'
| `-BuiltinType 0x5576dddb1f30 'long'
|-TypedefDecl 0x5576dde19c78 <line:56:1, col:18> col:18 __blkcnt64_t 'long'
| `-BuiltinType 0x5576dddb1f30 'long'
|-TypedefDecl 0x5576dde19ce8 <line:57:1, col:27> col:27 __fsblkcnt_t 'unsigned long'
| `-BuiltinType 0x5576dddb1fd0 'unsigned long'
|-TypedefDecl 0x5576dde19d58 <line:58:1, col:27> col:27 __fsblkcnt64_t 'unsigned long'
| `-BuiltinType 0x5576dddb1fd0 'unsigned long'
|-TypedefDecl 0x5576dde19dc8 <line:59:1, col:27> col:27 __fsfilcnt_t 'unsigned long'
| `-BuiltinType 0x5576dddb1fd0 'unsigned long'
|-TypedefDecl 0x5576dde19e38 <line:60:1, col:27> col:27 __fsfilcnt64_t 'unsigned long'
| `-BuiltinType 0x5576dddb1fd0 'unsigned long'
|-TypedefDecl 0x5576dde19ea8 <line:61:1, col:18> col:18 __fsword_t 'long'
| `-BuiltinType 0x5576dddb1f30 'long'
|-TypedefDecl 0x5576dde19f18 <line:62:1, col:18> col:18 __ssize_t 'long'
| `-BuiltinType 0x5576dddb1f30 'long'
|-TypedefDecl 0x5576dde19f88 <line:63:1, col:18> col:18 referenced __syscall_slong_t 'long'
| `-BuiltinType 0x5576dddb1f30 'long'
|-TypedefDecl 0x5576dde19ff8 <line:64:1, col:27> col:27 __syscall_ulong_t 'unsigned long'
| `-BuiltinType 0x5576dddb1fd0 'unsigned long'
|-TypedefDecl 0x5576dde1a088 <line:65:1, col:19> col:19 __loff_t '__off64_t':'long'
| `-TypedefType 0x5576dde1a050 '__off64_t' sugar
|   |-Typedef 0x5576dde19378 '__off64_t'
|   `-BuiltinType 0x5576dddb1f30 'long'
|-TypedefDecl 0x5576dde1a180 <line:66:1, col:19> col:19 __qaddr_t '__quad_t *'
| `-PointerType 0x5576dde1a140 '__quad_t *'
|   `-TypedefType 0x5576dde1a0e0 '__quad_t' sugar
|     |-Typedef 0x5576dde18ef8 '__quad_t'
|     `-BuiltinType 0x5576dddb1f30 'long'
|-TypedefDecl 0x5576dde1a1f0 <line:67:1, col:15> col:15 __caddr_t 'char *'
| `-PointerType 0x5576dddb2ab0 'char *'
|   `-BuiltinType 0x5576dddb1eb0 'char'
|-TypedefDecl 0x5576dde1a260 <line:68:1, col:18> col:18 __intptr_t 'long'
| `-BuiltinType 0x5576dddb1f30 'long'
|-TypedefDecl 0x5576dde1a2d0 <line:69:1, col:22> col:22 __socklen_t 'unsigned int'
| `-BuiltinType 0x5576dddb1fb0 'unsigned int'
|-FunctionDecl 0x5576dde1b458 <line:70:1, line:74:1> line:71:1 __bswap_32 'unsigned int (unsigned int)' static inline
| |-ParmVarDecl 0x5576dde1b380 <col:13, col:26> col:26 used __bsx 'unsigned int'
| `-CompoundStmt 0x5576dde1b768 <line:72:1, line:74:1>
|   `-ReturnStmt 0x5576dde1b758 <line:73:3, col:34>
|     `-CallExpr 0x5576dde1b718 <col:10, col:34> 'unsigned int'
|       |-ImplicitCastExpr 0x5576dde1b700 <col:10> 'unsigned int (*)(unsigned int)' <BuiltinFnToFnPtr>
|       | `-DeclRefExpr 0x5576dde1b690 <col:10> '<builtin fn type>' Function 0x5576dde1b500 '__builtin_bswap32' 'unsigned int (unsigned int)'
|       `-ImplicitCastExpr 0x5576dde1b740 <col:29> 'unsigned int' <LValueToRValue>
|         `-DeclRefExpr 0x5576dde1b6b0 <col:29> 'unsigned int' lvalue ParmVar 0x5576dde1b380 '__bsx' 'unsigned int'
|-FunctionDecl 0x5576dde1b500 <col:10> col:10 implicit used __builtin_bswap32 'unsigned int (unsigned int)' extern
| |-ParmVarDecl 0x5576dde1b5a0 <<invalid sloc>> <invalid sloc> 'unsigned int'
| |-NoThrowAttr 0x5576dde1b610 <col:10> Implicit
| `-ConstAttr 0x5576dde1b668 <col:10> Implicit
|-FunctionDecl 0x5576dde1b8c0 <line:75:1, line:79:1> line:76:1 __bswap_64 '__uint64_t (__uint64_t)' static inline
| |-ParmVarDecl 0x5576dde1b7b8 <col:13, col:24> col:24 used __bsx '__uint64_t':'unsigned long'
| `-CompoundStmt 0x5576dde1bbd8 <line:77:1, line:79:1>
|   `-ReturnStmt 0x5576dde1bbc8 <line:78:3, col:34>
|     `-CallExpr 0x5576dde1bb88 <col:10, col:34> 'unsigned long'
|       |-ImplicitCastExpr 0x5576dde1bb70 <col:10> 'unsigned long (*)(unsigned long)' <BuiltinFnToFnPtr>
|       | `-DeclRefExpr 0x5576dde1baf8 <col:10> '<builtin fn type>' Function 0x5576dde1b968 '__builtin_bswap64' 'unsigned long (unsigned long)'
|       `-ImplicitCastExpr 0x5576dde1bbb0 <col:29> '__uint64_t':'unsigned long' <LValueToRValue>
|         `-DeclRefExpr 0x5576dde1bb18 <col:29> '__uint64_t':'unsigned long' lvalue ParmVar 0x5576dde1b7b8 '__bsx' '__uint64_t':'unsigned long'
|-FunctionDecl 0x5576dde1b968 <col:10> col:10 implicit used __builtin_bswap64 'unsigned long (unsigned long)' extern
| |-ParmVarDecl 0x5576dde1ba08 <<invalid sloc>> <invalid sloc> 'unsigned long'
| |-NoThrowAttr 0x5576dde1ba78 <col:10> Implicit
| `-ConstAttr 0x5576dde1bad0 <col:10> Implicit
|-TypedefDecl 0x5576dde1bc08 <line:80:1, col:27> col:27 referenced size_t 'unsigned long'
| `-BuiltinType 0x5576dddb1fd0 'unsigned long'
|-TypedefDecl 0x5576dde1bc98 <line:82:1, col:18> col:18 referenced time_t '__time_t':'long'
| `-TypedefType 0x5576dde1bc60 '__time_t' sugar
|   |-Typedef 0x5576dde19888 '__time_t'
|   `-BuiltinType 0x5576dddb1f30 'long'
|-RecordDecl 0x5576dde1bcf0 <line:85:1, line:89:3> line:85:8 struct timespec definition
| |-FieldDecl 0x5576dde1bda8 <line:87:5, col:14> col:14 tv_sec '__time_t':'long'
| `-FieldDecl 0x5576dde1be38 <line:88:5, col:23> col:23 tv_nsec '__syscall_slong_t':'long'
|-TypedefDecl 0x5576dde1bec8 <line:90:1, col:17> col:17 referenced pid_t '__pid_t':'int'
| `-TypedefType 0x5576dde1be90 '__pid_t' sugar
|   |-Typedef 0x5576dde193e8 '__pid_t'
|   `-BuiltinType 0x5576dddb1f10 'int'
|-RecordDecl 0x5576dde1bf20 <line:91:1, line:94:3> line:91:8 struct sched_param definition
| `-FieldDecl 0x5576dde1bfe0 <line:93:5, col:9> col:9 __sched_priority 'int'
|-RecordDecl 0x5576dde1c030 <line:97:1, line:100:3> line:97:8 struct __sched_param definition
| `-FieldDecl 0x5576dde1c0f0 <line:99:5, col:9> col:9 __sched_priority 'int'
|-TypedefDecl 0x5576dde1c158 <line:101:1, col:27> col:27 referenced __cpu_mask 'unsigned long'
| `-BuiltinType 0x5576dddb1fd0 'unsigned long'
|-RecordDecl 0x5576dde1c1b0 <line:102:9, line:105:1> line:102:9 struct definition
| `-FieldDecl 0x5576dde1d480 <line:104:3, col:53> col:14 __bits '__cpu_mask [64]'
|-TypedefDecl 0x5576dde1d530 <line:102:1, line:105:3> col:3 referenced cpu_set_t 'struct cpu_set_t':'cpu_set_t'
| `-ElaboratedType 0x5576dde1d4d0 'struct cpu_set_t' sugar
|   `-RecordType 0x5576dde1c230 'cpu_set_t'
|     `-Record 0x5576dde1c1b0 ''
|-FunctionDecl 0x5576dde1d808 <line:107:1, line:108:42> line:107:12 __sched_cpucount 'int (size_t, const cpu_set_t *)' extern
| |-ParmVarDecl 0x5576dde1d5d8 <col:30, col:37> col:37 __setsize 'size_t':'unsigned long'
| |-ParmVarDecl 0x5576dde1d6e0 <col:48, col:65> col:65 __setp 'const cpu_set_t *'
| `-NoThrowAttr 0x5576dde1d8b8 <line:108:19>
|-FunctionDecl 0x5576dde1da90 <line:109:1, col:92> col:19 __sched_cpualloc 'cpu_set_t *(size_t)' extern
| |-ParmVarDecl 0x5576dde1d920 <col:37, col:44> col:44 __count 'size_t':'unsigned long'
| `-NoThrowAttr 0x5576dde1db38 <col:69>
|-FunctionDecl 0x5576dde1dcb0 <line:110:1, col:87> col:13 __sched_cpufree 'void (cpu_set_t *)' extern
| |-ParmVarDecl 0x5576dde1dba0 <col:30, col:41> col:41 __set 'cpu_set_t *'
| `-NoThrowAttr 0x5576dde1dd58 <col:64>
|-FunctionDecl 0x5576dde1e018 <line:113:1, line:114:45> line:113:12 sched_setparam 'int (__pid_t, const struct sched_param *)' extern
| |-ParmVarDecl 0x5576dde1ddc0 <col:28, col:36> col:36 __pid '__pid_t':'int'
| |-ParmVarDecl 0x5576dde1def8 <col:43, col:69> col:69 __param 'const struct sched_param *'
| `-NoThrowAttr 0x5576dde1e0c8 <line:114:22>
|-FunctionDecl 0x5576dde1e3b0 <line:115:1, col:111> col:12 sched_getparam 'int (__pid_t, struct sched_param *)' extern
| |-ParmVarDecl 0x5576dde1e130 <col:28, col:36> col:36 __pid '__pid_t':'int'
| |-ParmVarDecl 0x5576dde1e228 <col:43, col:63> col:63 __param 'struct sched_param *'
| `-NoThrowAttr 0x5576dde1e460 <col:88>
|-FunctionDecl 0x5576dde1e718 <line:116:1, line:117:85> line:116:12 sched_setscheduler 'int (__pid_t, int, const struct sched_param *)' extern
| |-ParmVarDecl 0x5576dde1e4c8 <col:32, col:40> col:40 __pid '__pid_t':'int'
| |-ParmVarDecl 0x5576dde1e548 <col:47, col:51> col:51 __policy 'int'
| |-ParmVarDecl 0x5576dde1e5d8 <line:117:11, col:37> col:37 __param 'const struct sched_param *'
| `-NoThrowAttr 0x5576dde1e7d0 <col:62>
|-FunctionDecl 0x5576dde1e948 <line:118:1, col:86> col:12 sched_getscheduler 'int (__pid_t)' extern
| |-ParmVarDecl 0x5576dde1e838 <col:32, col:40> col:40 __pid '__pid_t':'int'
| `-NoThrowAttr 0x5576dde1e9f0 <col:63>
|-FunctionDecl 0x5576dde1eb18 <line:119:1, col:70> col:12 sched_yield 'int (void)' extern
| `-NoThrowAttr 0x5576dde1ebb8 <col:47>
|-FunctionDecl 0x5576dde1ecc0 <line:120:1, col:92> col:12 sched_get_priority_max 'int (int)' extern
| |-ParmVarDecl 0x5576dde1ec28 <col:36, col:40> col:40 __algorithm 'int'
| `-NoThrowAttr 0x5576dde1ed68 <col:69>
|-FunctionDecl 0x5576dde1ee70 <line:121:1, col:92> col:12 sched_get_priority_min 'int (int)' extern
| |-ParmVarDecl 0x5576dde1edd8 <col:36, col:40> col:40 __algorithm 'int'
| `-NoThrowAttr 0x5576dde1ef18 <col:69>
|-FunctionDecl 0x5576dde1f1d8 <line:122:1, col:111> col:12 sched_rr_get_interval 'int (__pid_t, struct timespec *)' extern
| |-ParmVarDecl 0x5576dde1ef80 <col:35, col:43> col:43 __pid '__pid_t':'int'
| |-ParmVarDecl 0x5576dde1f0b8 <col:50, col:67> col:67 __t 'struct timespec *'
| `-NoThrowAttr 0x5576dde1f288 <col:88>
|-TypedefDecl 0x5576dde1f318 <line:126:1, col:19> col:19 referenced clock_t '__clock_t':'long'
| `-TypedefType 0x5576dde1f2e0 '__clock_t' sugar
|   |-Typedef 0x5576dde196c8 '__clock_t'
|   `-BuiltinType 0x5576dddb1f30 'long'
|-TypedefDecl 0x5576dde1f3c0 <line:129:1, col:21> col:21 referenced clockid_t '__clockid_t':'int'
| `-TypedefType 0x5576dde1f370 '__clockid_t' sugar
|   |-Typedef 0x5576dde19ab8 '__clockid_t'
|   `-BuiltinType 0x5576dddb1f10 'int'
|-TypedefDecl 0x5576dde1f458 <line:130:1, col:19> col:19 referenced timer_t '__timer_t':'void *'
| `-TypedefType 0x5576dde1f420 '__timer_t' sugar
|   |-Typedef 0x5576dde19b28 '__timer_t'
|   `-PointerType 0x5576dddb2630 'void *'
|     `-BuiltinType 0x5576dddb1e70 'void'
|-RecordDecl 0x5576dde1f4b0 <line:132:1, line:145:1> line:132:8 struct tm definition
| |-FieldDecl 0x5576dde1f570 <line:134:3, col:7> col:7 tm_sec 'int'
| |-FieldDecl 0x5576dde1f5d8 <line:135:3, col:7> col:7 tm_min 'int'
| |-FieldDecl 0x5576dde1f640 <line:136:3, col:7> col:7 tm_hour 'int'
| |-FieldDecl 0x5576dde1f6a8 <line:137:3, col:7> col:7 tm_mday 'int'
| |-FieldDecl 0x5576dde1f710 <line:138:3, col:7> col:7 tm_mon 'int'
| |-FieldDecl 0x5576dde1f778 <line:139:3, col:7> col:7 tm_year 'int'
| |-FieldDecl 0x5576dde1f7e0 <line:140:3, col:7> col:7 tm_wday 'int'
| |-FieldDecl 0x5576dde1f848 <line:141:3, col:7> col:7 tm_yday 'int'
| |-FieldDecl 0x5576dde1f8b0 <line:142:3, col:7> col:7 tm_isdst 'int'
| |-FieldDecl 0x5576dde1f918 <line:143:3, col:12> col:12 tm_gmtoff 'long'
| `-FieldDecl 0x5576dde1f980 <line:144:3, col:15> col:15 tm_zone 'const char *'
|-RecordDecl 0x5576dde1f9d0 <line:148:1, line:152:3> line:148:8 struct itimerspec definition
| |-FieldDecl 0x5576dde1fa98 <line:150:5, col:21> col:21 it_interval 'struct timespec':'struct timespec'
| `-FieldDecl 0x5576dde1fb08 <line:151:5, col:21> col:21 it_value 'struct timespec':'struct timespec'
|-RecordDecl 0x5576dde1fbb0 <line:153:1, col:8> col:8 struct sigevent
|-FunctionDecl 0x5576dde1fd80 <line:155:1, col:68> col:16 clock 'clock_t (void)' extern
| `-NoThrowAttr 0x5576dde1fe20 <col:45>
|-FunctionDecl 0x5576dde20000 <line:156:1, col:77> col:15 time 'time_t (time_t *)' extern
| |-ParmVarDecl 0x5576dde1fef0 <col:21, col:29> col:29 __timer 'time_t *'
| `-NoThrowAttr 0x5576dde200a8 <col:54>
|-FunctionDecl 0x5576dde202a8 <line:157:1, line:158:73> line:157:15 difftime 'double (time_t, time_t)' extern
| |-ParmVarDecl 0x5576dde20110 <col:25, col:32> col:32 __time1 'time_t':'long'
| |-ParmVarDecl 0x5576dde20188 <col:41, col:48> col:48 __time0 'time_t':'long'
| |-NoThrowAttr 0x5576dde20358 <line:158:22>
| `-ConstAttr 0x5576dde20ff0 <col:63>
|-FunctionDecl 0x5576dde211f0 <line:159:1, col:79> col:15 mktime 'time_t (struct tm *)' extern
| |-ParmVarDecl 0x5576dde210e8 <col:23, col:34> col:34 __tp 'struct tm *'
| `-NoThrowAttr 0x5576dde21298 <col:56>
|-FunctionDecl 0x5576dde21640 <line:160:1, line:162:77> line:160:15 strftime 'size_t (char *restrict, size_t, const char *restrict, const struct tm *restrict)' extern
| |-ParmVarDecl 0x5576dde21308 <col:25, col:42> col:42 __s 'char *restrict'
| |-ParmVarDecl 0x5576dde21380 <col:47, col:54> col:54 __maxsize 'size_t':'unsigned long'
| |-ParmVarDecl 0x5576dde21400 <line:161:4, col:27> col:27 __format 'const char *restrict'
| |-ParmVarDecl 0x5576dde214f8 <line:162:4, col:32> col:32 __tp 'const struct tm *restrict'
| `-NoThrowAttr 0x5576dde21700 <col:54>
|-RecordDecl 0x5576dde21758 <line:164:9, line:171:1> line:164:16 struct __locale_struct definition
| |-RecordDecl 0x5576dde21808 parent 0x5576dddb1e18 <line:166:3, col:10> col:10 struct __locale_data
| |-FieldDecl 0x5576dde21a68 <col:3, col:37> col:25 __locales 'struct __locale_data *[13]'
| |-FieldDecl 0x5576dde21b08 <line:167:3, col:29> col:29 __ctype_b 'const unsigned short *'
| |-FieldDecl 0x5576dde21b70 <line:168:3, col:14> col:14 __ctype_tolower 'const int *'
| |-FieldDecl 0x5576dde21bd8 <line:169:3, col:14> col:14 __ctype_toupper 'const int *'
| `-FieldDecl 0x5576dde21cc8 <line:170:3, col:25> col:15 __names 'const char *[13]'
|-TypedefDecl 0x5576dde21de8 <line:164:1, line:171:4> col:4 referenced __locale_t 'struct __locale_struct *'
| `-PointerType 0x5576dde21d90 'struct __locale_struct *'
|   `-ElaboratedType 0x5576dde21d20 'struct __locale_struct' sugar
|     `-RecordType 0x5576dde217e0 'struct __locale_struct'
|       `-Record 0x5576dde21758 '__locale_struct'
|-TypedefDecl 0x5576dde21e98 <line:172:1, col:20> col:20 locale_t '__locale_t':'struct __locale_struct *'
| `-TypedefType 0x5576dde21e60 '__locale_t' sugar
|   |-Typedef 0x5576dde21de8 '__locale_t'
|   `-PointerType 0x5576dde21d90 'struct __locale_struct *'
|     `-ElaboratedType 0x5576dde21d20 'struct __locale_struct' sugar
|       `-RecordType 0x5576dde217e0 'struct __locale_struct'
|         `-Record 0x5576dde21758 '__locale_struct'
|-FunctionDecl 0x5576dde232a0 <line:173:1, line:176:63> line:173:15 strftime_l 'size_t (char *restrict, size_t, const char *restrict, const struct tm *restrict, __locale_t)' extern
| |-ParmVarDecl 0x5576dde21f08 <col:27, col:44> col:44 __s 'char *restrict'
| |-ParmVarDecl 0x5576dde21f80 <col:49, col:56> col:56 __maxsize 'size_t':'unsigned long'
| |-ParmVarDecl 0x5576dde23028 <line:174:6, col:29> col:29 __format 'const char *restrict'
| |-ParmVarDecl 0x5576dde230b8 <line:175:6, col:34> col:34 __tp 'const struct tm *restrict'
| |-ParmVarDecl 0x5576dde23130 <line:176:6, col:17> col:17 __loc '__locale_t':'struct __locale_struct *'
| `-NoThrowAttr 0x5576dde23368 <col:40>
|-FunctionDecl 0x5576dde23558 <line:178:1, col:89> col:19 gmtime 'struct tm *(const time_t *)' extern
| |-ParmVarDecl 0x5576dde23430 <col:27, col:41> col:41 __timer 'const time_t *'
| `-NoThrowAttr 0x5576dde23600 <col:66>
|-FunctionDecl 0x5576dde23710 <line:179:1, col:92> col:19 localtime 'struct tm *(const time_t *)' extern
| |-ParmVarDecl 0x5576dde23668 <col:30, col:44> col:44 __timer 'const time_t *'
| `-NoThrowAttr 0x5576dde237b8 <col:69>
|-FunctionDecl 0x5576dde239e8 <line:181:1, line:182:75> line:181:19 gmtime_r 'struct tm *(const time_t *restrict, struct tm *restrict)' extern
| |-ParmVarDecl 0x5576dde23820 <col:29, col:54> col:54 __timer 'const time_t *restrict'
| |-ParmVarDecl 0x5576dde238b0 <line:182:8, col:30> col:30 __tp 'struct tm *restrict'
| `-NoThrowAttr 0x5576dde23a98 <col:52>
|-FunctionDecl 0x5576dde23c40 <line:183:1, line:184:78> line:183:19 localtime_r 'struct tm *(const time_t *restrict, struct tm *restrict)' extern
| |-ParmVarDecl 0x5576dde23b00 <col:32, col:57> col:57 __timer 'const time_t *restrict'
| |-ParmVarDecl 0x5576dde23b90 <line:184:11, col:33> col:33 __tp 'struct tm *restrict'
| `-NoThrowAttr 0x5576dde23cf0 <col:55>
|-FunctionDecl 0x5576dde23e88 <line:186:1, col:85> col:14 asctime 'char *(const struct tm *)' extern
| |-ParmVarDecl 0x5576dde23d70 <col:23, col:40> col:40 __tp 'const struct tm *'
| `-NoThrowAttr 0x5576dde23f30 <col:62>
|-FunctionDecl 0x5576dde24168 <line:187:1, col:83> col:14 ctime 'char *(const time_t *)' extern
| |-ParmVarDecl 0x5576dde23f98 <col:21, col:35> col:35 __timer 'const time_t *'
| `-NoThrowAttr 0x5576dde24210 <col:60>
|-FunctionDecl 0x5576dde24438 <line:189:1, line:190:67> line:189:14 asctime_r 'char *(const struct tm *restrict, char *restrict)' extern
| |-ParmVarDecl 0x5576dde24290 <col:25, col:53> col:53 __tp 'const struct tm *restrict'
| |-ParmVarDecl 0x5576dde24310 <line:190:4, col:21> col:21 __buf 'char *restrict'
| `-NoThrowAttr 0x5576dde244e8 <col:44>
|-FunctionDecl 0x5576dde246f8 <line:191:1, line:192:72> line:191:14 ctime_r 'char *(const time_t *restrict, char *restrict)' extern
| |-ParmVarDecl 0x5576dde24550 <col:23, col:48> col:48 __timer 'const time_t *restrict'
| |-ParmVarDecl 0x5576dde245d0 <line:192:9, col:26> col:26 __buf 'char *restrict'
| `-NoThrowAttr 0x5576dde247a8 <col:49>
|-VarDecl 0x5576dde248a8 <line:193:1, col:24> col:14 __tzname 'char *[2]' extern
|-VarDecl 0x5576dde24928 <line:194:1, col:12> col:12 __daylight 'int' extern
|-VarDecl 0x5576dde249a8 <line:195:1, col:17> col:17 __timezone 'long' extern
|-VarDecl 0x5576dde24a70 <line:196:1, col:22> col:14 tzname 'char *[2]' extern
|-FunctionDecl 0x5576dde24ba0 <line:197:1, col:65> col:13 tzset 'void (void)' extern
| `-NoThrowAttr 0x5576dde24c40 <col:42>
|-VarDecl 0x5576dde24cb0 <line:198:1, col:12> col:12 daylight 'int' extern
|-VarDecl 0x5576dde24d30 <line:199:1, col:17> col:17 timezone 'long' extern
|-FunctionDecl 0x5576dde24eb8 <line:200:1, col:80> col:12 stime 'int (const time_t *)' extern
| |-ParmVarDecl 0x5576dde24da8 <col:19, col:33> col:33 __when 'const time_t *'
| `-NoThrowAttr 0x5576dde24f60 <col:57>
|-FunctionDecl 0x5576dde250d0 <line:201:1, col:79> col:15 timegm 'time_t (struct tm *)' extern
| |-ParmVarDecl 0x5576dde24fe0 <col:23, col:34> col:34 __tp 'struct tm *'
| `-NoThrowAttr 0x5576dde25178 <col:56>
|-FunctionDecl 0x5576dde25288 <line:202:1, col:82> col:15 timelocal 'time_t (struct tm *)' extern
| |-ParmVarDecl 0x5576dde251f8 <col:26, col:37> col:37 __tp 'struct tm *'
| `-NoThrowAttr 0x5576dde25330 <col:59>
|-FunctionDecl 0x5576dde25438 <line:203:1, col:99> col:12 dysize 'int (int)' extern
| |-ParmVarDecl 0x5576dde253a0 <col:20, col:24> col:24 __year 'int'
| |-NoThrowAttr 0x5576dde254e0 <col:48>
| `-ConstAttr 0x5576dde25538 <col:89>
|-FunctionDecl 0x5576dde25798 <line:204:1, line:205:37> line:204:12 nanosleep 'int (const struct timespec *, struct timespec *)' extern
| |-ParmVarDecl 0x5576dde255e8 <col:23, col:46> col:46 __requested_time 'const struct timespec *'
| `-ParmVarDecl 0x5576dde25678 <line:205:9, col:26> col:26 __remaining 'struct timespec *'
|-FunctionDecl 0x5576dde259f8 <line:206:1, col:111> col:12 clock_getres 'int (clockid_t, struct timespec *)' extern
| |-ParmVarDecl 0x5576dde25888 <col:26, col:36> col:36 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x5576dde25918 <col:48, col:65> col:65 __res 'struct timespec *'
| `-NoThrowAttr 0x5576dde25aa8 <col:88>
|-FunctionDecl 0x5576dde25c40 <line:207:1, col:111> col:12 clock_gettime 'int (clockid_t, struct timespec *)' extern
| |-ParmVarDecl 0x5576dde25b10 <col:27, col:37> col:37 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x5576dde25ba0 <col:49, col:66> col:66 __tp 'struct timespec *'
| `-NoThrowAttr 0x5576dde25cf0 <col:88>
|-FunctionDecl 0x5576dde25f08 <line:208:1, line:209:45> line:208:12 clock_settime 'int (clockid_t, const struct timespec *)' extern
| |-ParmVarDecl 0x5576dde25d58 <col:27, col:37> col:37 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x5576dde25de8 <col:49, col:72> col:72 __tp 'const struct timespec *'
| `-NoThrowAttr 0x5576dde25fb8 <line:209:22>
|-FunctionDecl 0x5576dde26358 <line:210:1, line:212:30> line:210:12 clock_nanosleep 'int (clockid_t, int, const struct timespec *, struct timespec *)' extern
| |-ParmVarDecl 0x5576dde26020 <col:29, col:39> col:39 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x5576dde260e0 <col:51, col:55> col:55 __flags 'int'
| |-ParmVarDecl 0x5576dde26170 <line:211:8, col:31> col:31 __req 'const struct timespec *'
| `-ParmVarDecl 0x5576dde26200 <line:212:8, col:25> col:25 __rem 'struct timespec *'
|-FunctionDecl 0x5576dde26658 <line:213:1, col:108> col:12 clock_getcpuclockid 'int (pid_t, clockid_t *)' extern
| |-ParmVarDecl 0x5576dde26458 <col:33, col:39> col:39 __pid 'pid_t':'int'
| |-ParmVarDecl 0x5576dde26530 <col:46, col:57> col:57 __clock_id 'clockid_t *'
| `-NoThrowAttr 0x5576dde26708 <col:85>
|-FunctionDecl 0x5576dde26af8 <line:214:1, line:216:75> line:214:12 timer_create 'int (clockid_t, struct sigevent *restrict, timer_t *restrict)' extern
| |-ParmVarDecl 0x5576dde26770 <col:26, col:36> col:36 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x5576dde268a8 <line:215:5, col:33> col:33 __evp 'struct sigevent *restrict'
| |-ParmVarDecl 0x5576dde269b0 <line:216:5, col:25> col:25 __timerid 'timer_t *restrict'
| `-NoThrowAttr 0x5576dde26bb0 <col:52>
|-FunctionDecl 0x5576dde26d28 <line:217:1, col:84> col:12 timer_delete 'int (timer_t)' extern
| |-ParmVarDecl 0x5576dde26c18 <col:26, col:34> col:34 __timerid 'timer_t':'void *'
| `-NoThrowAttr 0x5576dde26dd0 <col:61>
|-FunctionDecl 0x5576dde27248 <line:218:1, line:220:85> line:218:12 timer_settime 'int (timer_t, int, const struct itimerspec *restrict, struct itimerspec *restrict)' extern
| |-ParmVarDecl 0x5576dde26e38 <col:27, col:35> col:35 __timerid 'timer_t':'void *'
| |-ParmVarDecl 0x5576dde26eb8 <col:46, col:50> col:50 __flags 'int'
| |-ParmVarDecl 0x5576dde26fe8 <line:219:6, col:42> col:42 __value 'const struct itimerspec *restrict'
| |-ParmVarDecl 0x5576dde270f0 <line:220:6, col:36> col:36 __ovalue 'struct itimerspec *restrict'
| `-NoThrowAttr 0x5576dde27308 <col:62>
|-FunctionDecl 0x5576dde27528 <line:221:1, line:222:45> line:221:12 timer_gettime 'int (timer_t, struct itimerspec *)' extern
| |-ParmVarDecl 0x5576dde27370 <col:27, col:35> col:35 __timerid 'timer_t':'void *'
| |-ParmVarDecl 0x5576dde27400 <col:46, col:65> col:65 __value 'struct itimerspec *'
| `-NoThrowAttr 0x5576dde275d8 <line:222:22>
|-FunctionDecl 0x5576dde276d8 <line:223:1, col:88> col:12 timer_getoverrun 'int (timer_t)' extern
| |-ParmVarDecl 0x5576dde27640 <col:30, col:38> col:38 __timerid 'timer_t':'void *'
| `-NoThrowAttr 0x5576dde27780 <col:65>
|-TypedefDecl 0x5576dde277f0 <line:225:1, col:27> col:27 referenced pthread_t 'unsigned long'
| `-BuiltinType 0x5576dddb1fd0 'unsigned long'
|-RecordDecl 0x5576dde27848 <line:226:1, line:230:1> line:226:7 union pthread_attr_t definition
| |-FieldDecl 0x5576dde27990 <line:228:3, col:17> col:8 __size 'char [56]'
| `-FieldDecl 0x5576dde279f8 <line:229:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x5576dde27aa8 <line:231:1, col:30> col:30 referenced pthread_attr_t 'union pthread_attr_t':'union pthread_attr_t'
| `-ElaboratedType 0x5576dde27a50 'union pthread_attr_t' sugar
|   `-RecordType 0x5576dde278d0 'union pthread_attr_t'
|     `-Record 0x5576dde27848 'pthread_attr_t'
|-RecordDecl 0x5576dde27b00 <line:232:9, line:236:1> line:232:16 struct __pthread_internal_list definition
| |-FieldDecl 0x5576dde27c78 <line:234:3, col:35> col:35 __prev 'struct __pthread_internal_list *'
| `-FieldDecl 0x5576dde27cf0 <line:235:3, col:35> col:35 __next 'struct __pthread_internal_list *'
|-TypedefDecl 0x5576dde27da0 <line:232:1, line:236:3> col:3 referenced __pthread_list_t 'struct __pthread_internal_list':'struct __pthread_internal_list'
| `-ElaboratedType 0x5576dde27d40 'struct __pthread_internal_list' sugar
|   `-RecordType 0x5576dde27b80 'struct __pthread_internal_list'
|     `-Record 0x5576dde27b00 '__pthread_internal_list'
|-RecordDecl 0x5576dde27e10 <line:237:9, line:251:1> line:237:9 union definition
| |-RecordDecl 0x5576dde27eb8 parent 0x5576dddb1e18 <line:239:3, line:248:3> line:239:10 struct __pthread_mutex_s definition
| | |-FieldDecl 0x5576dde27f90 <line:241:5, col:9> col:9 __lock 'int'
| | |-FieldDecl 0x5576dde27ff8 <line:242:5, col:18> col:18 __count 'unsigned int'
| | |-FieldDecl 0x5576dde28060 <line:243:5, col:9> col:9 __owner 'int'
| | |-FieldDecl 0x5576dde2c110 <line:244:5, col:18> col:18 __nusers 'unsigned int'
| | |-FieldDecl 0x5576dde2c178 <line:245:5, col:9> col:9 __kind 'int'
| | |-FieldDecl 0x5576dde2c1e0 <line:246:5, col:9> col:9 __spins 'int'
| | `-FieldDecl 0x5576dde2c268 <line:247:5, col:22> col:22 __list '__pthread_list_t':'struct __pthread_internal_list'
| |-FieldDecl 0x5576dde2c320 <line:239:3, line:248:5> col:5 __data 'struct __pthread_mutex_s':'struct __pthread_mutex_s'
| |-FieldDecl 0x5576dde2c410 <line:249:3, col:17> col:8 __size 'char [40]'
| `-FieldDecl 0x5576dde2c478 <line:250:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x5576dde2c600 <line:237:1, line:251:3> col:3 referenced pthread_mutex_t 'union pthread_mutex_t':'pthread_mutex_t'
| `-ElaboratedType 0x5576dde2c5a0 'union pthread_mutex_t' sugar
|   `-RecordType 0x5576dde27e90 'pthread_mutex_t'
|     `-Record 0x5576dde27e10 ''
|-RecordDecl 0x5576dde2c670 <line:252:9, line:256:1> line:252:9 union definition
| |-FieldDecl 0x5576dde2c7b0 <line:254:3, col:16> col:8 __size 'char [4]'
| `-FieldDecl 0x5576dde2c818 <line:255:3, col:7> col:7 __align 'int'
|-TypedefDecl 0x5576dde2c8d0 <line:252:1, line:256:3> col:3 referenced pthread_mutexattr_t 'union pthread_mutexattr_t':'pthread_mutexattr_t'
| `-ElaboratedType 0x5576dde2c870 'union pthread_mutexattr_t' sugar
|   `-RecordType 0x5576dde2c6f0 'pthread_mutexattr_t'
|     `-Record 0x5576dde2c670 ''
|-RecordDecl 0x5576dde2c940 <line:257:9, line:272:1> line:257:9 union definition
| |-RecordDecl 0x5576dde2c9e8 <line:259:3, line:269:3> line:259:3 struct definition
| | |-FieldDecl 0x5576dde2cab0 <line:261:5, col:9> col:9 __lock 'int'
| | |-FieldDecl 0x5576dde2cb18 <line:262:5, col:18> col:18 __futex 'unsigned int'
| | |-FieldDecl 0x5576dde2cb80 <line:263:19, col:42> col:42 __total_seq 'unsigned long long'
| | |-FieldDecl 0x5576dde2cbe8 <line:264:19, col:42> col:42 __wakeup_seq 'unsigned long long'
| | |-FieldDecl 0x5576dde2cc50 <line:265:19, col:42> col:42 __woken_seq 'unsigned long long'
| | |-FieldDecl 0x5576dde2ccb8 <line:266:5, col:11> col:11 __mutex 'void *'
| | |-FieldDecl 0x5576dde2cd20 <line:267:5, col:18> col:18 __nwaiters 'unsigned int'
| | `-FieldDecl 0x5576dde2cd88 <line:268:5, col:18> col:18 __broadcast_seq 'unsigned int'
| |-FieldDecl 0x5576dde2ce40 <line:259:3, line:269:5> col:5 __data 'struct (anonymous struct at ./split_0/mix001_power.oepc_false-unreach-call.i:259:3)':'struct pthread_cond_t::(anonymous at ./split_0/mix001_power.oepc_false-unreach-call.i:259:3)'
| |-FieldDecl 0x5576dde2cf30 <line:270:3, col:17> col:8 __size 'char [48]'
| `-FieldDecl 0x5576dde2cf98 <line:271:17, col:31> col:31 __align 'long long'
|-TypedefDecl 0x5576dde2e130 <line:257:1, line:272:3> col:3 referenced pthread_cond_t 'union pthread_cond_t':'pthread_cond_t'
| `-ElaboratedType 0x5576dde2d070 'union pthread_cond_t' sugar
|   `-RecordType 0x5576dde2c9c0 'pthread_cond_t'
|     `-Record 0x5576dde2c940 ''
|-RecordDecl 0x5576dde2e1a0 <line:273:9, line:277:1> line:273:9 union definition
| |-FieldDecl 0x5576dde2e2a0 <line:275:3, col:16> col:8 __size 'char [4]'
| `-FieldDecl 0x5576dde2e308 <line:276:3, col:7> col:7 __align 'int'
|-TypedefDecl 0x5576dde2e3c0 <line:273:1, line:277:3> col:3 referenced pthread_condattr_t 'union pthread_condattr_t':'pthread_condattr_t'
| `-ElaboratedType 0x5576dde2e360 'union pthread_condattr_t' sugar
|   `-RecordType 0x5576dde2e220 'pthread_condattr_t'
|     `-Record 0x5576dde2e1a0 ''
|-TypedefDecl 0x5576dde2e448 <line:278:1, col:22> col:22 referenced pthread_key_t 'unsigned int'
| `-BuiltinType 0x5576dddb1fb0 'unsigned int'
|-TypedefDecl 0x5576dde2e4b8 <line:279:1, col:13> col:13 referenced pthread_once_t 'int'
| `-BuiltinType 0x5576dddb1f10 'int'
|-RecordDecl 0x5576dde2e510 <line:280:9, line:298:1> line:280:9 union definition
| |-RecordDecl 0x5576dde2e5b8 <line:282:3, line:295:3> line:282:3 struct definition
| | |-FieldDecl 0x5576dde2e680 <line:284:5, col:9> col:9 __lock 'int'
| | |-FieldDecl 0x5576dde2e6e8 <line:285:5, col:18> col:18 __nr_readers 'unsigned int'
| | |-FieldDecl 0x5576dde2e750 <line:286:5, col:18> col:18 __readers_wakeup 'unsigned int'
| | |-FieldDecl 0x5576dde2e7b8 <line:287:5, col:18> col:18 __writer_wakeup 'unsigned int'
| | |-FieldDecl 0x5576dde2e820 <line:288:5, col:18> col:18 __nr_readers_queued 'unsigned int'
| | |-FieldDecl 0x5576dde2e888 <line:289:5, col:18> col:18 __nr_writers_queued 'unsigned int'
| | |-FieldDecl 0x5576dde2e8f0 <line:290:5, col:9> col:9 __writer 'int'
| | |-FieldDecl 0x5576dde2e958 <line:291:5, col:9> col:9 __shared 'int'
| | |-FieldDecl 0x5576dde2e9c0 <line:292:5, col:23> col:23 __pad1 'unsigned long'
| | |-FieldDecl 0x5576dde2ea28 <line:293:5, col:23> col:23 __pad2 'unsigned long'
| | `-FieldDecl 0x5576dde2ea90 <line:294:5, col:18> col:18 __flags 'unsigned int'
| |-FieldDecl 0x5576dde2eb40 <line:282:3, line:295:5> col:5 __data 'struct (anonymous struct at ./split_0/mix001_power.oepc_false-unreach-call.i:282:3)':'struct pthread_rwlock_t::(anonymous at ./split_0/mix001_power.oepc_false-unreach-call.i:282:3)'
| |-FieldDecl 0x5576dde2ebe8 <line:296:3, col:17> col:8 __size 'char [56]'
| `-FieldDecl 0x5576dde2ec50 <line:297:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x5576dde2eda0 <line:280:1, line:298:3> col:3 referenced pthread_rwlock_t 'union pthread_rwlock_t':'pthread_rwlock_t'
| `-ElaboratedType 0x5576dde2ed40 'union pthread_rwlock_t' sugar
|   `-RecordType 0x5576dde2e590 'pthread_rwlock_t'
|     `-Record 0x5576dde2e510 ''
|-RecordDecl 0x5576dde2ee10 <line:299:9, line:303:1> line:299:9 union definition
| |-FieldDecl 0x5576dde2ef50 <line:301:3, col:16> col:8 __size 'char [8]'
| `-FieldDecl 0x5576dde2efb8 <line:302:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x5576dde2f070 <line:299:1, line:303:3> col:3 referenced pthread_rwlockattr_t 'union pthread_rwlockattr_t':'pthread_rwlockattr_t'
| `-ElaboratedType 0x5576dde2f010 'union pthread_rwlockattr_t' sugar
|   `-RecordType 0x5576dde2ee90 'pthread_rwlockattr_t'
|     `-Record 0x5576dde2ee10 ''
|-TypedefDecl 0x5576dde30140 <line:304:1, col:22> col:22 referenced pthread_spinlock_t 'volatile int'
| `-QualType 0x5576dddb1f14 'volatile int' volatile
|   `-BuiltinType 0x5576dddb1f10 'int'
|-RecordDecl 0x5576dde30198 <line:305:9, line:309:1> line:305:9 union definition
| |-FieldDecl 0x5576dde302e0 <line:307:3, col:17> col:8 __size 'char [32]'
| `-FieldDecl 0x5576dde30348 <line:308:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x5576dde30400 <line:305:1, line:309:3> col:3 referenced pthread_barrier_t 'union pthread_barrier_t':'pthread_barrier_t'
| `-ElaboratedType 0x5576dde303a0 'union pthread_barrier_t' sugar
|   `-RecordType 0x5576dde30220 'pthread_barrier_t'
|     `-Record 0x5576dde30198 ''
|-RecordDecl 0x5576dde30470 <line:310:9, line:314:1> line:310:9 union definition
| |-FieldDecl 0x5576dde30570 <line:312:3, col:16> col:8 __size 'char [4]'
| `-FieldDecl 0x5576dde305d8 <line:313:3, col:7> col:7 __align 'int'
|-TypedefDecl 0x5576dde30690 <line:310:1, line:314:3> col:3 referenced pthread_barrierattr_t 'union pthread_barrierattr_t':'pthread_barrierattr_t'
| `-ElaboratedType 0x5576dde30630 'union pthread_barrierattr_t' sugar
|   `-RecordType 0x5576dde304f0 'pthread_barrierattr_t'
|     `-Record 0x5576dde30470 ''
|-TypedefDecl 0x5576dde307a8 <line:315:1, col:29> col:18 referenced __jmp_buf 'long [8]'
| `-ConstantArrayType 0x5576dde30740 'long [8]' 8 
|   `-BuiltinType 0x5576dddb1f30 'long'
|-EnumDecl 0x5576dde30800 <line:316:1, line:320:1> line:316:1
| |-EnumConstantDecl 0x5576dde308c8 <line:318:3> col:3 PTHREAD_CREATE_JOINABLE 'int'
| `-EnumConstantDecl 0x5576dde30918 <line:319:3> col:3 PTHREAD_CREATE_DETACHED 'int'
|-EnumDecl 0x5576dde30968 <line:321:1, line:332:1> line:321:1
| |-EnumConstantDecl 0x5576dde30a38 <line:323:3> col:3 referenced PTHREAD_MUTEX_TIMED_NP 'int'
| |-EnumConstantDecl 0x5576dde30a88 <line:324:3> col:3 referenced PTHREAD_MUTEX_RECURSIVE_NP 'int'
| |-EnumConstantDecl 0x5576dde30ad8 <line:325:3> col:3 referenced PTHREAD_MUTEX_ERRORCHECK_NP 'int'
| |-EnumConstantDecl 0x5576dde30b28 <line:326:3> col:3 PTHREAD_MUTEX_ADAPTIVE_NP 'int'
| |-EnumConstantDecl 0x5576dde30bb0 <line:328:3, col:26> col:3 referenced PTHREAD_MUTEX_NORMAL 'int'
| | `-ConstantExpr 0x5576dde30b98 <col:26> 'int'
| |   `-DeclRefExpr 0x5576dde30b78 <col:26> 'int' EnumConstant 0x5576dde30a38 'PTHREAD_MUTEX_TIMED_NP' 'int'
| |-EnumConstantDecl 0x5576dde30c38 <line:329:3, col:29> col:3 PTHREAD_MUTEX_RECURSIVE 'int'
| | `-ConstantExpr 0x5576dde30c20 <col:29> 'int'
| |   `-DeclRefExpr 0x5576dde30c00 <col:29> 'int' EnumConstant 0x5576dde30a88 'PTHREAD_MUTEX_RECURSIVE_NP' 'int'
| |-EnumConstantDecl 0x5576dde30cc0 <line:330:3, col:30> col:3 PTHREAD_MUTEX_ERRORCHECK 'int'
| | `-ConstantExpr 0x5576dde30ca8 <col:30> 'int'
| |   `-DeclRefExpr 0x5576dde30c88 <col:30> 'int' EnumConstant 0x5576dde30ad8 'PTHREAD_MUTEX_ERRORCHECK_NP' 'int'
| `-EnumConstantDecl 0x5576dde30d48 <line:331:3, col:27> col:3 PTHREAD_MUTEX_DEFAULT 'int'
|   `-ConstantExpr 0x5576dde30d30 <col:27> 'int'
|     `-DeclRefExpr 0x5576dde30d10 <col:27> 'int' EnumConstant 0x5576dde30bb0 'PTHREAD_MUTEX_NORMAL' 'int'
|-EnumDecl 0x5576dde30d98 <line:333:1, line:339:1> line:333:1
| |-EnumConstantDecl 0x5576dde30e68 <line:335:3> col:3 referenced PTHREAD_MUTEX_STALLED 'int'
| |-EnumConstantDecl 0x5576dde30ef0 <line:336:3, col:30> col:3 PTHREAD_MUTEX_STALLED_NP 'int'
| | `-ConstantExpr 0x5576dde30ed8 <col:30> 'int'
| |   `-DeclRefExpr 0x5576dde30eb8 <col:30> 'int' EnumConstant 0x5576dde30e68 'PTHREAD_MUTEX_STALLED' 'int'
| |-EnumConstantDecl 0x5576dde30f40 <line:337:3> col:3 referenced PTHREAD_MUTEX_ROBUST 'int'
| `-EnumConstantDecl 0x5576dde30fc8 <line:338:3, col:29> col:3 PTHREAD_MUTEX_ROBUST_NP 'int'
|   `-ConstantExpr 0x5576dde30fb0 <col:29> 'int'
|     `-DeclRefExpr 0x5576dde30f90 <col:29> 'int' EnumConstant 0x5576dde30f40 'PTHREAD_MUTEX_ROBUST' 'int'
|-EnumDecl 0x5576dde31018 <line:340:1, line:345:1> line:340:1
| |-EnumConstantDecl 0x5576dde310e8 <line:342:3> col:3 PTHREAD_PRIO_NONE 'int'
| |-EnumConstantDecl 0x5576dde31150 <line:343:3> col:3 PTHREAD_PRIO_INHERIT 'int'
| `-EnumConstantDecl 0x5576dde311a0 <line:344:3> col:3 PTHREAD_PRIO_PROTECT 'int'
|-EnumDecl 0x5576dde311f0 <line:346:1, line:352:1> line:346:1
| |-EnumConstantDecl 0x5576dde312b8 <line:348:3> col:3 referenced PTHREAD_RWLOCK_PREFER_READER_NP 'int'
| |-EnumConstantDecl 0x5576dde31308 <line:349:3> col:3 PTHREAD_RWLOCK_PREFER_WRITER_NP 'int'
| |-EnumConstantDecl 0x5576dde31358 <line:350:3> col:3 PTHREAD_RWLOCK_PREFER_WRITER_NONRECURSIVE_NP 'int'
| `-EnumConstantDecl 0x5576dde313e0 <line:351:3, col:31> col:3 PTHREAD_RWLOCK_DEFAULT_NP 'int'
|   `-ConstantExpr 0x5576dde313c8 <col:31> 'int'
|     `-DeclRefExpr 0x5576dde313a8 <col:31> 'int' EnumConstant 0x5576dde312b8 'PTHREAD_RWLOCK_PREFER_READER_NP' 'int'
|-EnumDecl 0x5576dde31430 <line:353:1, line:357:1> line:353:1
| |-EnumConstantDecl 0x5576dde314f8 <line:355:3> col:3 PTHREAD_INHERIT_SCHED 'int'
| `-EnumConstantDecl 0x5576dde31548 <line:356:3> col:3 PTHREAD_EXPLICIT_SCHED 'int'
|-EnumDecl 0x5576dde31598 <line:358:1, line:362:1> line:358:1
| |-EnumConstantDecl 0x5576dde31668 <line:360:3> col:3 PTHREAD_SCOPE_SYSTEM 'int'
| `-EnumConstantDecl 0x5576dde316b8 <line:361:3> col:3 PTHREAD_SCOPE_PROCESS 'int'
|-EnumDecl 0x5576dde31708 <line:363:1, line:367:1> line:363:1
| |-EnumConstantDecl 0x5576dde317d8 <line:365:3> col:3 PTHREAD_PROCESS_PRIVATE 'int'
| `-EnumConstantDecl 0x5576dde31828 <line:366:3> col:3 PTHREAD_PROCESS_SHARED 'int'
|-RecordDecl 0x5576dde31878 <line:368:1, line:374:1> line:368:8 struct _pthread_cleanup_buffer definition
| |-FieldDecl 0x5576dde31ab8 <line:370:3, col:28> col:10 __routine 'void (*)(void *)'
| |-FieldDecl 0x5576dde31b20 <line:371:3, col:9> col:9 __arg 'void *'
| |-FieldDecl 0x5576dde31b88 <line:372:3, col:7> col:7 __canceltype 'int'
| `-FieldDecl 0x5576dde31ca8 <line:373:3, col:35> col:35 __prev 'struct _pthread_cleanup_buffer *'
|-EnumDecl 0x5576dde31cf8 <line:375:1, line:379:1> line:375:1
| |-EnumConstantDecl 0x5576dde31dc8 <line:377:3> col:3 PTHREAD_CANCEL_ENABLE 'int'
| `-EnumConstantDecl 0x5576dde31e18 <line:378:3> col:3 PTHREAD_CANCEL_DISABLE 'int'
|-EnumDecl 0x5576dde31e68 <line:380:1, line:384:1> line:380:1
| |-EnumConstantDecl 0x5576dde31f38 <line:382:3> col:3 PTHREAD_CANCEL_DEFERRED 'int'
| `-EnumConstantDecl 0x5576dde31f88 <line:383:3> col:3 PTHREAD_CANCEL_ASYNCHRONOUS 'int'
|-FunctionDecl 0x5576dde325b8 <line:386:1, line:389:96> line:386:12 used pthread_create 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' extern
| |-ParmVarDecl 0x5576dde32080 <col:28, col:50> col:50 __newthread 'pthread_t *restrict'
| |-ParmVarDecl 0x5576dde321a0 <line:387:7, col:40> col:40 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x5576dde323a0 <line:388:7, col:39> col:15 __start_routine 'void *(*)(void *)'
| |-ParmVarDecl 0x5576dde32420 <line:389:7, col:24> col:24 __arg 'void *restrict'
| |-NoThrowAttr 0x5576dde32678 <col:47>
| |-NonNullAttr 0x5576dde326d0 <col:77, col:94> 1 3
| `-CallbackAttr 0x5576dde32708 <line:386:12> Implicit 2 3
|-FunctionDecl 0x5576dde32830 <line:390:1, col:72> col:13 pthread_exit 'void (void *) __attribute__((noreturn))' extern
| `-ParmVarDecl 0x5576dde32760 <col:27, col:33> col:33 __retval 'void *'
|-FunctionDecl 0x5576dde32a88 <line:391:1, col:64> col:12 pthread_join 'int (pthread_t, void **)' extern
| |-ParmVarDecl 0x5576dde328e8 <col:26, col:36> col:36 __th 'pthread_t':'unsigned long'
| `-ParmVarDecl 0x5576dde32968 <col:42, col:49> col:49 __thread_return 'void **'
|-FunctionDecl 0x5576dde32c58 <line:392:1, col:83> col:12 pthread_detach 'int (pthread_t)' extern
| |-ParmVarDecl 0x5576dde32b48 <col:28, col:38> col:38 __th 'pthread_t':'unsigned long'
| `-NoThrowAttr 0x5576dde32d00 <col:60>
|-FunctionDecl 0x5576dde32e50 <line:393:1, col:105> col:18 pthread_self 'pthread_t (void)' extern
| |-NoThrowAttr 0x5576dde32ef0 <col:54>
| `-ConstAttr 0x5576dde32f48 <col:95>
|-FunctionDecl 0x5576dde34990 <line:394:1, line:395:70> line:394:12 pthread_equal 'int (pthread_t, pthread_t)' extern
| |-ParmVarDecl 0x5576dde32f80 <col:27, col:37> col:37 __thread1 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x5576dde32ff8 <col:48, col:58> col:58 __thread2 'pthread_t':'unsigned long'
| |-NoThrowAttr 0x5576dde34a40 <line:395:19>
| `-ConstAttr 0x5576dde34a98 <col:60>
|-FunctionDecl 0x5576dde34c68 <line:396:1, col:128> col:12 pthread_attr_init 'int (pthread_attr_t *)' extern
| |-ParmVarDecl 0x5576dde34b30 <col:31, col:47> col:47 __attr 'pthread_attr_t *'
| |-NoThrowAttr 0x5576dde34d10 <col:71>
| `-NonNullAttr 0x5576dde34d68 <col:112, col:126> 1
|-FunctionDecl 0x5576dde34e70 <line:397:1, line:398:79> line:397:12 pthread_attr_destroy 'int (pthread_attr_t *)' extern
| |-ParmVarDecl 0x5576dde34db8 <col:34, col:50> col:50 __attr 'pthread_attr_t *'
| |-NoThrowAttr 0x5576dde34f18 <line:398:22>
| `-NonNullAttr 0x5576dde34f70 <col:63, col:77> 1
|-FunctionDecl 0x5576dde35198 <line:399:1, line:401:82> line:399:12 pthread_attr_getdetachstate 'int (const pthread_attr_t *, int *)' extern
| |-ParmVarDecl 0x5576dde34fb8 <col:41, col:63> col:63 __attr 'const pthread_attr_t *'
| |-ParmVarDecl 0x5576dde35038 <line:400:6, col:11> col:11 __detachstate 'int *'
| |-NoThrowAttr 0x5576dde35248 <line:401:22>
| `-NonNullAttr 0x5576dde352a0 <col:63, col:80> 1 2
|-FunctionDecl 0x5576dde354a8 <line:402:1, line:404:79> line:402:12 pthread_attr_setdetachstate 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x5576dde352e8 <col:41, col:57> col:57 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x5576dde35368 <line:403:6, col:10> col:10 __detachstate 'int'
| |-NoThrowAttr 0x5576dde35558 <line:404:22>
| `-NonNullAttr 0x5576dde355b0 <col:63, col:77> 1
|-FunctionDecl 0x5576dde35808 <line:405:1, line:407:82> line:405:12 pthread_attr_getguardsize 'int (const pthread_attr_t *, size_t *)' extern
| |-ParmVarDecl 0x5576dde355f8 <col:39, col:61> col:61 __attr 'const pthread_attr_t *'
| |-ParmVarDecl 0x5576dde356a0 <line:406:11, col:19> col:19 __guardsize 'size_t *'
| |-NoThrowAttr 0x5576dde358b8 <line:407:22>
| `-NonNullAttr 0x5576dde35910 <col:63, col:80> 1 2
|-FunctionDecl 0x5576dde36b68 <line:408:1, line:410:79> line:408:12 pthread_attr_setguardsize 'int (pthread_attr_t *, size_t)' extern
| |-ParmVarDecl 0x5576dde369b0 <col:39, col:55> col:55 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x5576dde36a28 <line:409:11, col:18> col:18 __guardsize 'size_t':'unsigned long'
| |-NoThrowAttr 0x5576dde36c18 <line:410:22>
| `-NonNullAttr 0x5576dde36c70 <col:63, col:77> 1
|-FunctionDecl 0x5576dde36ea8 <line:411:1, line:413:82> line:411:12 pthread_attr_getschedparam 'int (const pthread_attr_t *restrict, struct sched_param *restrict)' extern
| |-ParmVarDecl 0x5576dde36cb8 <col:40, col:73> col:73 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x5576dde36d48 <line:412:12, col:43> col:43 __param 'struct sched_param *restrict'
| |-NoThrowAttr 0x5576dde36f58 <line:413:22>
| `-NonNullAttr 0x5576dde36fb0 <col:63, col:80> 1 2
|-FunctionDecl 0x5576dde371e8 <line:414:1, line:416:97> line:414:12 pthread_attr_setschedparam 'int (pthread_attr_t *restrict, const struct sched_param *restrict)' extern
| |-ParmVarDecl 0x5576dde36ff8 <col:40, col:67> col:67 __attr 'pthread_attr_t *restrict'
| |-ParmVarDecl 0x5576dde37088 <line:415:12, line:416:12> col:12 __param 'const struct sched_param *restrict'
| |-NoThrowAttr 0x5576dde37298 <col:37>
| `-NonNullAttr 0x5576dde372f0 <col:78, col:95> 1 2
|-FunctionDecl 0x5576dde374d8 <line:417:1, line:419:82> line:417:12 pthread_attr_getschedpolicy 'int (const pthread_attr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x5576dde37338 <col:41, line:418:6> col:6 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x5576dde373b8 <col:14, col:30> col:30 __policy 'int *restrict'
| |-NoThrowAttr 0x5576dde37588 <line:419:22>
| `-NonNullAttr 0x5576dde375e0 <col:63, col:80> 1 2
|-FunctionDecl 0x5576dde37768 <line:420:1, line:421:79> line:420:12 pthread_attr_setschedpolicy 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x5576dde37628 <col:41, col:57> col:57 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x5576dde376a8 <col:65, col:69> col:69 __policy 'int'
| |-NoThrowAttr 0x5576dde37818 <line:421:22>
| `-NonNullAttr 0x5576dde37870 <col:63, col:77> 1
|-FunctionDecl 0x5576dde37a38 <line:422:1, line:424:82> line:422:12 pthread_attr_getinheritsched 'int (const pthread_attr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x5576dde378b8 <col:42, line:423:7> col:7 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x5576dde37938 <col:15, col:31> col:31 __inherit 'int *restrict'
| |-NoThrowAttr 0x5576dde37ae8 <line:424:22>
| `-NonNullAttr 0x5576dde37b40 <col:63, col:80> 1 2
|-FunctionDecl 0x5576dde37cc8 <line:425:1, line:427:79> line:425:12 pthread_attr_setinheritsched 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x5576dde37b88 <col:42, col:58> col:58 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x5576dde37c08 <line:426:7, col:11> col:11 __inherit 'int'
| |-NoThrowAttr 0x5576dde37d78 <line:427:22>
| `-NonNullAttr 0x5576dde37dd0 <col:63, col:77> 1
|-FunctionDecl 0x5576dde37f78 <line:428:1, line:430:82> line:428:12 pthread_attr_getscope 'int (const pthread_attr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x5576dde37e18 <col:35, col:68> col:68 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x5576dde37e98 <line:429:7, col:23> col:23 __scope 'int *restrict'
| |-NoThrowAttr 0x5576dde38028 <line:430:22>
| `-NonNullAttr 0x5576dde38080 <col:63, col:80> 1 2
|-FunctionDecl 0x5576dde38208 <line:431:1, line:432:79> line:431:12 pthread_attr_setscope 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x5576dde380c8 <col:35, col:51> col:51 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x5576dde38148 <col:59, col:63> col:63 __scope 'int'
| |-NoThrowAttr 0x5576dde382b8 <line:432:22>
| `-NonNullAttr 0x5576dde38310 <col:63, col:77> 1
|-FunctionDecl 0x5576dde38538 <line:433:1, line:435:115> line:433:12 pthread_attr_getstackaddr 'int (const pthread_attr_t *restrict, void **restrict)' extern
| |-ParmVarDecl 0x5576dde38358 <col:39, line:434:11> col:11 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x5576dde383d8 <col:19, col:37> col:37 __stackaddr 'void **restrict'
| |-NoThrowAttr 0x5576dde385e8 <line:435:22>
| |-NonNullAttr 0x5576dde38640 <col:63, col:80> 1 2
| `-DeprecatedAttr 0x5576dde38678 <col:100> "" ""
|-FunctionDecl 0x5576dde38888 <line:436:1, line:438:112> line:436:12 pthread_attr_setstackaddr 'int (pthread_attr_t *, void *)' extern
| |-ParmVarDecl 0x5576dde386c8 <col:39, col:55> col:55 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x5576dde38748 <line:437:11, col:17> col:17 __stackaddr 'void *'
| |-NoThrowAttr 0x5576dde38938 <line:438:22>
| |-NonNullAttr 0x5576dde38990 <col:63, col:77> 1
| `-DeprecatedAttr 0x5576dde389d8 <col:97> "" ""
|-FunctionDecl 0x5576dde38bc8 <line:439:1, line:441:82> line:439:12 pthread_attr_getstacksize 'int (const pthread_attr_t *restrict, size_t *restrict)' extern
| |-ParmVarDecl 0x5576dde38a28 <col:39, line:440:11> col:11 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x5576dde38aa0 <col:19, col:38> col:38 __stacksize 'size_t *restrict'
| |-NoThrowAttr 0x5576dde38c78 <line:441:22>
| `-NonNullAttr 0x5576dde38cd0 <col:63, col:80> 1 2
|-FunctionDecl 0x5576dde38e50 <line:442:1, line:444:79> line:442:12 pthread_attr_setstacksize 'int (pthread_attr_t *, size_t)' extern
| |-ParmVarDecl 0x5576dde38d18 <col:39, col:55> col:55 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x5576dde38d90 <line:443:11, col:18> col:18 __stacksize 'size_t':'unsigned long'
| |-NoThrowAttr 0x5576dde38f00 <line:444:22>
| `-NonNullAttr 0x5576dde38f58 <col:63, col:77> 1
|-FunctionDecl 0x5576dde39248 <line:445:1, line:448:85> line:445:12 pthread_attr_getstack 'int (const pthread_attr_t *restrict, void **restrict, size_t *restrict)' extern
| |-ParmVarDecl 0x5576dde38fa8 <col:35, col:68> col:68 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x5576dde39028 <line:446:7, col:25> col:25 __stackaddr 'void **restrict'
| |-ParmVarDecl 0x5576dde390a0 <line:447:7, col:26> col:26 __stacksize 'size_t *restrict'
| |-NoThrowAttr 0x5576dde39300 <line:448:22>
| `-NonNullAttr 0x5576dde39358 <col:63, col:83> 1 2 3
|-FunctionDecl 0x5576dde39608 <line:449:1, line:450:100> line:449:12 pthread_attr_setstack 'int (pthread_attr_t *, void *, size_t)' extern
| |-ParmVarDecl 0x5576dde393b0 <col:35, col:51> col:51 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x5576dde39430 <col:59, col:65> col:65 __stackaddr 'void *'
| |-ParmVarDecl 0x5576dde394a8 <line:450:7, col:14> col:14 __stacksize 'size_t':'unsigned long'
| |-NoThrowAttr 0x5576dde396c0 <col:43>
| `-NonNullAttr 0x5576dde39718 <col:84, col:98> 1
|-FunctionDecl 0x5576dde39a20 <line:451:1, line:453:79> line:451:12 pthread_setschedparam 'int (pthread_t, int, const struct sched_param *)' extern
| |-ParmVarDecl 0x5576dde39768 <col:35, col:45> col:45 __target_thread 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x5576dde397e8 <col:62, col:66> col:66 __policy 'int'
| |-ParmVarDecl 0x5576dde39878 <line:452:7, col:33> col:33 __param 'const struct sched_param *'
| |-NoThrowAttr 0x5576dde39ad8 <line:453:22>
| `-NonNullAttr 0x5576dde39b30 <col:63, col:77> 3
|-FunctionDecl 0x5576dde39e08 <line:454:1, line:457:82> line:454:12 pthread_getschedparam 'int (pthread_t, int *restrict, struct sched_param *restrict)' extern
| |-ParmVarDecl 0x5576dde39b78 <col:35, col:45> col:45 __target_thread 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x5576dde39bf8 <line:455:7, col:23> col:23 __policy 'int *restrict'
| |-ParmVarDecl 0x5576dde39c88 <line:456:7, col:38> col:38 __param 'struct sched_param *restrict'
| |-NoThrowAttr 0x5576dde39ec0 <line:457:22>
| `-NonNullAttr 0x5576dde39f18 <col:63, col:80> 2 3
|-FunctionDecl 0x5576dde3a108 <line:458:1, line:459:45> line:458:12 pthread_setschedprio 'int (pthread_t, int)' extern
| |-ParmVarDecl 0x5576dde39f68 <col:34, col:44> col:44 __target_thread 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x5576dde39fe8 <col:61, col:65> col:65 __prio 'int'
| `-NoThrowAttr 0x5576dde3a1b8 <line:459:22>
|-FunctionDecl 0x5576dde3a588 <line:460:1, line:461:71> line:460:12 pthread_once 'int (pthread_once_t *, void (*)(void))' extern
| |-ParmVarDecl 0x5576dde3a280 <col:26, col:42> col:42 __once_control 'pthread_once_t *'
| |-ParmVarDecl 0x5576dde3a420 <line:461:5, col:33> col:12 __init_routine 'void (*)(void)'
| `-NonNullAttr 0x5576dde3a638 <col:52, col:69> 1 2
|-FunctionDecl 0x5576dde3a7e0 <line:462:1, col:64> col:12 pthread_setcancelstate 'int (int, int *)' extern
| |-ParmVarDecl 0x5576dde3a6c0 <col:36, col:40> col:40 __state 'int'
| `-ParmVarDecl 0x5576dde3a740 <col:49, col:54> col:54 __oldstate 'int *'
|-FunctionDecl 0x5576dde3a9f0 <line:463:1, col:61> col:12 pthread_setcanceltype 'int (int, int *)' extern
| |-ParmVarDecl 0x5576dde3a8a8 <col:35, col:39> col:39 __type 'int'
| `-ParmVarDecl 0x5576dde3a928 <col:47, col:52> col:52 __oldtype 'int *'
|-FunctionDecl 0x5576dde3ab48 <line:464:1, col:42> col:12 pthread_cancel 'int (pthread_t)' extern
| `-ParmVarDecl 0x5576dde3aab0 <col:28, col:38> col:38 __th 'pthread_t':'unsigned long'
|-FunctionDecl 0x5576dde3ac88 <line:465:1, col:37> col:13 pthread_testcancel 'void (void)' extern
|-RecordDecl 0x5576dde3ad28 <line:466:9, line:474:1> line:466:9 struct definition
| |-RecordDecl 0x5576dde3add8 <line:468:3, line:472:3> line:468:3 struct definition
| | |-FieldDecl 0x5576dde3aec8 <line:470:5, col:15> col:15 __cancel_jmp_buf '__jmp_buf':'long [8]'
| | `-FieldDecl 0x5576dde3af30 <line:471:5, col:9> col:9 __mask_was_saved 'int'
| |-FieldDecl 0x5576dde3b100 <line:468:3, line:472:23> col:5 __cancel_jmp_buf 'struct (anonymous struct at ./split_0/mix001_power.oepc_false-unreach-call.i:468:3) [1]'
| `-FieldDecl 0x5576dde3b1f8 <line:473:3, col:16> col:9 __pad 'void *[4]'
|-TypedefDecl 0x5576dde3b2b0 <line:466:1, line:474:3> col:3 referenced __pthread_unwind_buf_t 'struct __pthread_unwind_buf_t':'__pthread_unwind_buf_t'
| |-ElaboratedType 0x5576dde3b250 'struct __pthread_unwind_buf_t' sugar
| | `-RecordType 0x5576dde3adb0 '__pthread_unwind_buf_t'
| |   `-Record 0x5576dde3ad28 ''
| `-AlignedAttr 0x5576dde3b308 <col:42> aligned
|   `-<<<NULL>>>
|-RecordDecl 0x5576dde3b380 <line:475:1, line:481:1> line:475:8 struct __pthread_cleanup_frame definition
| |-FieldDecl 0x5576dde3b4e0 <line:477:3, col:35> col:10 __cancel_routine 'void (*)(void *)'
| |-FieldDecl 0x5576dde3b548 <line:478:3, col:9> col:9 __cancel_arg 'void *'
| |-FieldDecl 0x5576dde3b5b0 <line:479:3, col:7> col:7 __do_it 'int'
| `-FieldDecl 0x5576dde3b618 <line:480:3, col:7> col:7 __cancel_type 'int'
|-FunctionDecl 0x5576dde3b820 <line:482:1, col:69> col:13 __pthread_register_cancel 'void (__pthread_unwind_buf_t *)' extern
| `-ParmVarDecl 0x5576dde3b710 <col:40, col:64> col:64 __buf '__pthread_unwind_buf_t *'
|-FunctionDecl 0x5576dde3ba00 <line:484:1, col:71> col:13 __pthread_unregister_cancel 'void (__pthread_unwind_buf_t *)' extern
| `-ParmVarDecl 0x5576dde3b8d8 <col:42, col:66> col:66 __buf '__pthread_unwind_buf_t *'
|-FunctionDecl 0x5576dde3bbc0 <line:486:1, line:488:31> line:486:13 __pthread_unwind_next 'void (__pthread_unwind_buf_t *) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x5576dde3bab8 <col:36, col:60> col:60 __buf '__pthread_unwind_buf_t *'
| `-WeakAttr 0x5576dde3bc68 <line:488:22>
|-RecordDecl 0x5576dde3bcc0 <line:490:1, col:8> col:8 struct __jmp_buf_tag
|-FunctionDecl 0x5576dde3bfd8 <line:491:1, col:98> col:12 __sigsetjmp 'int (struct __jmp_buf_tag *, int)' extern
| |-ParmVarDecl 0x5576dde3be38 <col:25, col:47> col:47 __env 'struct __jmp_buf_tag *'
| |-ParmVarDecl 0x5576dde3beb8 <col:54, col:58> col:58 __savemask 'int'
| |-NoThrowAttr 0x5576dde3c088 <col:86>
| `-ReturnsTwiceAttr 0x5576dde3c0e0 <col:12> Implicit
|-FunctionDecl 0x5576dde3c408 <line:492:1, line:494:79> line:492:12 pthread_mutex_init 'int (pthread_mutex_t *, const pthread_mutexattr_t *)' extern
| |-ParmVarDecl 0x5576dde3c1b0 <col:32, col:49> col:49 __mutex 'pthread_mutex_t *'
| |-ParmVarDecl 0x5576dde3c2c0 <line:493:11, col:38> col:38 __mutexattr 'const pthread_mutexattr_t *'
| |-NoThrowAttr 0x5576dde3c4b8 <line:494:22>
| `-NonNullAttr 0x5576dde3c510 <col:63, col:77> 1
|-FunctionDecl 0x5576dde3c688 <line:495:1, line:496:79> line:495:12 pthread_mutex_destroy 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x5576dde3c558 <col:35, col:52> col:52 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x5576dde3c730 <line:496:22>
| `-NonNullAttr 0x5576dde3c788 <col:63, col:77> 1
|-FunctionDecl 0x5576dde3c890 <line:497:1, line:498:68> line:497:12 pthread_mutex_trylock 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x5576dde3c7d8 <col:35, col:52> col:52 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x5576dde3c938 <line:498:22>
| `-NonNullAttr 0x5576dde3c990 <col:52, col:66> 1
|-FunctionDecl 0x5576dde3dad8 <line:499:1, line:500:68> line:499:12 pthread_mutex_lock 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x5576dde3da20 <col:32, col:49> col:49 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x5576dde3db80 <line:500:22>
| `-NonNullAttr 0x5576dde3dbd8 <col:52, col:66> 1
|-FunctionDecl 0x5576dde3de18 <line:501:1, line:503:85> line:501:12 pthread_mutex_timedlock 'int (pthread_mutex_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x5576dde3dc28 <col:37, col:65> col:65 __mutex 'pthread_mutex_t *restrict'
| |-ParmVarDecl 0x5576dde3dcb8 <line:502:9, line:503:9> col:9 __abstime 'const struct timespec *restrict'
| |-NoThrowAttr 0x5576dde3dec8 <col:36>
| `-NonNullAttr 0x5576dde3df20 <col:66, col:83> 1 2
|-FunctionDecl 0x5576dde3e020 <line:504:1, line:505:68> line:504:12 pthread_mutex_unlock 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x5576dde3df68 <col:34, col:51> col:51 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x5576dde3e0c8 <line:505:22>
| `-NonNullAttr 0x5576dde3e120 <col:52, col:66> 1
|-FunctionDecl 0x5576dde3e3b8 <line:506:1, line:509:82> line:506:12 pthread_mutex_getprioceiling 'int (const pthread_mutex_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x5576dde3e1d0 <col:42, line:507:18> col:18 __mutex 'const pthread_mutex_t *restrict'
| |-ParmVarDecl 0x5576dde3e250 <line:508:7, col:23> col:23 __prioceiling 'int *restrict'
| |-NoThrowAttr 0x5576dde3e468 <line:509:22>
| `-NonNullAttr 0x5576dde3e4c0 <col:63, col:80> 1 2
|-FunctionDecl 0x5576dde3e788 <line:510:1, line:513:82> line:510:12 pthread_mutex_setprioceiling 'int (pthread_mutex_t *restrict, int, int *restrict)' extern
| |-ParmVarDecl 0x5576dde3e508 <col:42, col:70> col:70 __mutex 'pthread_mutex_t *restrict'
| |-ParmVarDecl 0x5576dde3e588 <line:511:7, col:11> col:11 __prioceiling 'int'
| |-ParmVarDecl 0x5576dde3e608 <line:512:7, col:23> col:23 __old_ceiling 'int *restrict'
| |-NoThrowAttr 0x5576dde3e840 <line:513:22>
| `-NonNullAttr 0x5576dde3e898 <col:63, col:80> 1 3
|-FunctionDecl 0x5576dde3ea30 <line:514:1, line:515:79> line:514:12 pthread_mutex_consistent 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x5576dde3e8e8 <col:38, col:55> col:55 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x5576dde3ead8 <line:515:22>
| `-NonNullAttr 0x5576dde3eb30 <col:63, col:77> 1
|-FunctionDecl 0x5576dde3ed18 <line:516:1, line:517:79> line:516:12 pthread_mutexattr_init 'int (pthread_mutexattr_t *)' extern
| |-ParmVarDecl 0x5576dde3ebe0 <col:36, col:57> col:57 __attr 'pthread_mutexattr_t *'
| |-NoThrowAttr 0x5576dde3edc0 <line:517:22>
| `-NonNullAttr 0x5576dde3ee18 <col:63, col:77> 1
|-FunctionDecl 0x5576dde3ef20 <line:518:1, line:519:79> line:518:12 pthread_mutexattr_destroy 'int (pthread_mutexattr_t *)' extern
| |-ParmVarDecl 0x5576dde3ee68 <col:39, col:60> col:60 __attr 'pthread_mutexattr_t *'
| |-NoThrowAttr 0x5576dde3efc8 <line:519:22>
| `-NonNullAttr 0x5576dde3f020 <col:63, col:77> 1
|-FunctionDecl 0x5576dde3f248 <line:520:1, line:523:82> line:520:12 pthread_mutexattr_getpshared 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x5576dde3f068 <col:42, line:521:18> col:18 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x5576dde3f0e8 <line:522:7, col:23> col:23 __pshared 'int *restrict'
| |-NoThrowAttr 0x5576dde3f2f8 <line:523:22>
| `-NonNullAttr 0x5576dde3f350 <col:63, col:80> 1 2
|-FunctionDecl 0x5576dde3f558 <line:524:1, line:526:79> line:524:12 pthread_mutexattr_setpshared 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x5576dde3f398 <col:42, col:63> col:63 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x5576dde3f418 <line:525:7, col:11> col:11 __pshared 'int'
| |-NoThrowAttr 0x5576dde3f608 <line:526:22>
| `-NonNullAttr 0x5576dde3f660 <col:63, col:77> 1
|-FunctionDecl 0x5576dde3f808 <line:527:1, line:529:82> line:527:12 pthread_mutexattr_gettype 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x5576dde3f6a8 <col:39, line:528:11> col:11 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x5576dde3f728 <col:19, col:35> col:35 __kind 'int *restrict'
| |-NoThrowAttr 0x5576dde3f8b8 <line:529:22>
| `-NonNullAttr 0x5576dde3f910 <col:63, col:80> 1 2
|-FunctionDecl 0x5576dde3fb00 <line:530:1, line:531:79> line:530:12 pthread_mutexattr_settype 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x5576dde3f958 <col:39, col:60> col:60 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x5576dde3fa40 <col:68, col:72> col:72 __kind 'int'
| |-NoThrowAttr 0x5576dde3fbb0 <line:531:22>
| `-NonNullAttr 0x5576dde3fc08 <col:63, col:77> 1
|-FunctionDecl 0x5576dde3fdb8 <line:532:1, line:535:82> line:532:12 pthread_mutexattr_getprotocol 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x5576dde3fc58 <col:43, line:533:19> col:19 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x5576dde3fcd8 <line:534:8, col:24> col:24 __protocol 'int *restrict'
| |-NoThrowAttr 0x5576dde3fe68 <line:535:22>
| `-NonNullAttr 0x5576dde3fec0 <col:63, col:80> 1 2
|-FunctionDecl 0x5576dde40048 <line:536:1, line:538:79> line:536:12 pthread_mutexattr_setprotocol 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x5576dde3ff08 <col:43, col:64> col:64 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x5576dde3ff88 <line:537:8, col:12> col:12 __protocol 'int'
| |-NoThrowAttr 0x5576dde400f8 <line:538:22>
| `-NonNullAttr 0x5576dde40150 <col:63, col:77> 1
|-FunctionDecl 0x5576dde402f8 <line:539:1, line:542:82> line:539:12 pthread_mutexattr_getprioceiling 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x5576dde40198 <col:46, line:540:22> col:22 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x5576dde40218 <line:541:11, col:27> col:27 __prioceiling 'int *restrict'
| |-NoThrowAttr 0x5576dde403a8 <line:542:22>
| `-NonNullAttr 0x5576dde40400 <col:63, col:80> 1 2
|-FunctionDecl 0x5576dde40588 <line:543:1, line:545:79> line:543:12 pthread_mutexattr_setprioceiling 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x5576dde40448 <col:46, col:67> col:67 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x5576dde404c8 <line:544:11, col:15> col:15 __prioceiling 'int'
| |-NoThrowAttr 0x5576dde40638 <line:545:22>
| `-NonNullAttr 0x5576dde40690 <col:63, col:77> 1
|-FunctionDecl 0x5576dde40878 <line:546:1, line:548:82> line:546:12 pthread_mutexattr_getrobust 'int (const pthread_mutexattr_t *, int *)' extern
| |-ParmVarDecl 0x5576dde406d8 <col:41, col:68> col:68 __attr 'const pthread_mutexattr_t *'
| |-ParmVarDecl 0x5576dde40758 <line:547:6, col:11> col:11 __robustness 'int *'
| |-NoThrowAttr 0x5576dde40928 <line:548:22>
| `-NonNullAttr 0x5576dde40980 <col:63, col:80> 1 2
|-FunctionDecl 0x5576dde41b38 <line:549:1, line:551:79> line:549:12 pthread_mutexattr_setrobust 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x5576dde409c8 <col:41, col:62> col:62 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x5576dde41a78 <line:550:6, col:10> col:10 __robustness 'int'
| |-NoThrowAttr 0x5576dde41be8 <line:551:22>
| `-NonNullAttr 0x5576dde41c40 <col:63, col:77> 1
|-FunctionDecl 0x5576dde41f78 <line:552:1, line:554:86> line:552:12 pthread_rwlock_init 'int (pthread_rwlock_t *restrict, const pthread_rwlockattr_t *restrict)' extern
| |-ParmVarDecl 0x5576dde41d20 <col:33, col:62> col:62 __rwlock 'pthread_rwlock_t *restrict'
| |-ParmVarDecl 0x5576dde41e30 <line:553:5, line:554:5> col:5 __attr 'const pthread_rwlockattr_t *restrict'
| |-NoThrowAttr 0x5576dde42028 <col:29>
| `-NonNullAttr 0x5576dde42080 <col:70, col:84> 1
|-FunctionDecl 0x5576dde421f8 <line:555:1, line:556:79> line:555:12 pthread_rwlock_destroy 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x5576dde420c8 <col:36, col:54> col:54 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x5576dde422a0 <line:556:22>
| `-NonNullAttr 0x5576dde422f8 <col:63, col:77> 1
|-FunctionDecl 0x5576dde42400 <line:557:1, line:558:68> line:557:12 pthread_rwlock_rdlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x5576dde42348 <col:35, col:53> col:53 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x5576dde424a8 <line:558:22>
| `-NonNullAttr 0x5576dde42500 <col:52, col:66> 1
|-FunctionDecl 0x5576dde42600 <line:559:1, line:560:65> line:559:12 pthread_rwlock_tryrdlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x5576dde42548 <col:38, col:56> col:56 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x5576dde426a8 <line:560:19>
| `-NonNullAttr 0x5576dde42700 <col:49, col:63> 1
|-FunctionDecl 0x5576dde42938 <line:561:1, line:563:88> line:561:12 pthread_rwlock_timedrdlock 'int (pthread_rwlock_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x5576dde42748 <col:40, col:69> col:69 __rwlock 'pthread_rwlock_t *restrict'
| |-ParmVarDecl 0x5576dde427d8 <line:562:12, line:563:12> col:12 __abstime 'const struct timespec *restrict'
| |-NoThrowAttr 0x5576dde429e8 <col:39>
| `-NonNullAttr 0x5576dde42a70 <col:69, col:86> 1 2
|-FunctionDecl 0x5576dde42b70 <line:564:1, line:565:68> line:564:12 pthread_rwlock_wrlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x5576dde42ab8 <col:35, col:53> col:53 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x5576dde42c18 <line:565:22>
| `-NonNullAttr 0x5576dde42c70 <col:52, col:66> 1
|-FunctionDecl 0x5576dde42d70 <line:566:1, line:567:68> line:566:12 pthread_rwlock_trywrlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x5576dde42cb8 <col:38, col:56> col:56 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x5576dde42e18 <line:567:22>
| `-NonNullAttr 0x5576dde42e70 <col:52, col:66> 1
|-FunctionDecl 0x5576dde43028 <line:568:1, line:570:88> line:568:12 pthread_rwlock_timedwrlock 'int (pthread_rwlock_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x5576dde42eb8 <col:40, col:69> col:69 __rwlock 'pthread_rwlock_t *restrict'
| |-ParmVarDecl 0x5576dde42f48 <line:569:12, line:570:12> col:12 __abstime 'const struct timespec *restrict'
| |-NoThrowAttr 0x5576dde430d8 <col:39>
| `-NonNullAttr 0x5576dde43130 <col:69, col:86> 1 2
|-FunctionDecl 0x5576dde43230 <line:571:1, line:572:68> line:571:12 pthread_rwlock_unlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x5576dde43178 <col:35, col:53> col:53 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x5576dde432d8 <line:572:22>
| `-NonNullAttr 0x5576dde43330 <col:52, col:66> 1
|-FunctionDecl 0x5576dde43518 <line:573:1, line:574:79> line:573:12 pthread_rwlockattr_init 'int (pthread_rwlockattr_t *)' extern
| |-ParmVarDecl 0x5576dde433e0 <col:37, col:59> col:59 __attr 'pthread_rwlockattr_t *'
| |-NoThrowAttr 0x5576dde435c0 <line:574:22>
| `-NonNullAttr 0x5576dde43618 <col:63, col:77> 1
|-FunctionDecl 0x5576dde43720 <line:575:1, line:576:79> line:575:12 pthread_rwlockattr_destroy 'int (pthread_rwlockattr_t *)' extern
| |-ParmVarDecl 0x5576dde43668 <col:40, col:62> col:62 __attr 'pthread_rwlockattr_t *'
| |-NoThrowAttr 0x5576dde437c8 <line:576:22>
| `-NonNullAttr 0x5576dde43820 <col:63, col:77> 1
|-FunctionDecl 0x5576dde43a80 <line:577:1, line:580:82> line:577:12 pthread_rwlockattr_getpshared 'int (const pthread_rwlockattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x5576dde43868 <col:43, line:578:19> col:19 __attr 'const pthread_rwlockattr_t *restrict'
| |-ParmVarDecl 0x5576dde438e8 <line:579:8, col:24> col:24 __pshared 'int *restrict'
| |-NoThrowAttr 0x5576dde43b30 <line:580:22>
| `-NonNullAttr 0x5576dde43b88 <col:63, col:80> 1 2
|-FunctionDecl 0x5576dde43d98 <line:581:1, line:583:79> line:581:12 pthread_rwlockattr_setpshared 'int (pthread_rwlockattr_t *, int)' extern
| |-ParmVarDecl 0x5576dde43bd8 <col:43, col:65> col:65 __attr 'pthread_rwlockattr_t *'
| |-ParmVarDecl 0x5576dde43c58 <line:582:8, col:12> col:12 __pshared 'int'
| |-NoThrowAttr 0x5576dde43e48 <line:583:22>
| `-NonNullAttr 0x5576dde43ea0 <col:63, col:77> 1
|-FunctionDecl 0x5576dde44048 <line:584:1, line:587:82> line:584:12 pthread_rwlockattr_getkind_np 'int (const pthread_rwlockattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x5576dde43ee8 <col:43, line:585:19> col:19 __attr 'const pthread_rwlockattr_t *restrict'
| |-ParmVarDecl 0x5576dde43f68 <line:586:8, col:24> col:24 __pref 'int *restrict'
| |-NoThrowAttr 0x5576dde440f8 <line:587:22>
| `-NonNullAttr 0x5576dde44150 <col:63, col:80> 1 2
|-FunctionDecl 0x5576dde442d8 <line:588:1, line:589:93> line:588:12 pthread_rwlockattr_setkind_np 'int (pthread_rwlockattr_t *, int)' extern
| |-ParmVarDecl 0x5576dde44198 <col:43, col:65> col:65 __attr 'pthread_rwlockattr_t *'
| |-ParmVarDecl 0x5576dde44218 <line:589:8, col:12> col:12 __pref 'int'
| |-NoThrowAttr 0x5576dde44388 <col:36>
| `-NonNullAttr 0x5576dde443e0 <col:77, col:91> 1
|-FunctionDecl 0x5576dde44718 <line:590:1, line:592:79> line:590:12 pthread_cond_init 'int (pthread_cond_t *restrict, const pthread_condattr_t *restrict)' extern
| |-ParmVarDecl 0x5576dde444c0 <col:31, col:58> col:58 __cond 'pthread_cond_t *restrict'
| |-ParmVarDecl 0x5576dde445d0 <line:591:10, col:47> col:47 __cond_attr 'const pthread_condattr_t *restrict'
| |-NoThrowAttr 0x5576dde447c8 <line:592:22>
| `-NonNullAttr 0x5576dde44820 <col:63, col:77> 1
|-FunctionDecl 0x5576dde44998 <line:593:1, line:594:79> line:593:12 pthread_cond_destroy 'int (pthread_cond_t *)' extern
| |-ParmVarDecl 0x5576dde44868 <col:34, col:50> col:50 __cond 'pthread_cond_t *'
| |-NoThrowAttr 0x5576dde44a40 <line:594:22>
| `-NonNullAttr 0x5576dde44ac0 <col:63, col:77> 1
|-FunctionDecl 0x5576dde44bc0 <line:595:1, line:596:68> line:595:12 pthread_cond_signal 'int (pthread_cond_t *)' extern
| |-ParmVarDecl 0x5576dde44b08 <col:33, col:49> col:49 __cond 'pthread_cond_t *'
| |-NoThrowAttr 0x5576dde44c68 <line:596:22>
| `-NonNullAttr 0x5576dde44cc0 <col:52, col:66> 1
|-FunctionDecl 0x5576dde44dc0 <line:597:1, line:598:68> line:597:12 pthread_cond_broadcast 'int (pthread_cond_t *)' extern
| |-ParmVarDecl 0x5576dde44d08 <col:36, col:52> col:52 __cond 'pthread_cond_t *'
| |-NoThrowAttr 0x5576dde44e68 <line:598:22>
| `-NonNullAttr 0x5576dde44ec0 <col:52, col:66> 1
|-FunctionDecl 0x5576dde450e8 <line:599:1, line:601:41> line:599:12 pthread_cond_wait 'int (pthread_cond_t *restrict, pthread_mutex_t *restrict)' extern
| |-ParmVarDecl 0x5576dde44f08 <col:31, col:58> col:58 __cond 'pthread_cond_t *restrict'
| |-ParmVarDecl 0x5576dde44f80 <line:600:10, col:38> col:38 __mutex 'pthread_mutex_t *restrict'
| `-NonNullAttr 0x5576dde45198 <line:601:22, col:39> 1 2
|-FunctionDecl 0x5576dde454c8 <line:602:1, line:605:44> line:602:12 pthread_cond_timedwait 'int (pthread_cond_t *restrict, pthread_mutex_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x5576dde45218 <col:36, col:63> col:63 __cond 'pthread_cond_t *restrict'
| |-ParmVarDecl 0x5576dde45290 <line:603:8, col:36> col:36 __mutex 'pthread_mutex_t *restrict'
| |-ParmVarDecl 0x5576dde45320 <line:604:8, col:42> col:42 __abstime 'const struct timespec *restrict'
| `-NonNullAttr 0x5576dde45580 <line:605:22, col:42> 1 2 3
|-FunctionDecl 0x5576dde45798 <line:606:1, line:607:79> line:606:12 pthread_condattr_init 'int (pthread_condattr_t *)' extern
| |-ParmVarDecl 0x5576dde45660 <col:35, col:55> col:55 __attr 'pthread_condattr_t *'
| |-NoThrowAttr 0x5576dde45840 <line:607:22>
| `-NonNullAttr 0x5576dde45898 <col:63, col:77> 1
|-FunctionDecl 0x5576dde459a0 <line:608:1, line:609:79> line:608:12 pthread_condattr_destroy 'int (pthread_condattr_t *)' extern
| |-ParmVarDecl 0x5576dde458e8 <col:38, col:58> col:58 __attr 'pthread_condattr_t *'
| |-NoThrowAttr 0x5576dde45a48 <line:609:22>
| `-NonNullAttr 0x5576dde45ad0 <col:63, col:77> 1
|-FunctionDecl 0x5576dde45cf8 <line:610:1, line:613:82> line:610:12 pthread_condattr_getpshared 'int (const pthread_condattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x5576dde45b18 <col:41, line:611:17> col:17 __attr 'const pthread_condattr_t *restrict'
| |-ParmVarDecl 0x5576dde45b98 <line:612:6, col:22> col:22 __pshared 'int *restrict'
| |-NoThrowAttr 0x5576dde45da8 <line:613:22>
| `-NonNullAttr 0x5576dde45e00 <col:63, col:80> 1 2
|-FunctionDecl 0x5576dde46008 <line:614:1, line:615:94> line:614:12 pthread_condattr_setpshared 'int (pthread_condattr_t *, int)' extern
| |-ParmVarDecl 0x5576dde45e48 <col:41, col:61> col:61 __attr 'pthread_condattr_t *'
| |-ParmVarDecl 0x5576dde45ec8 <line:615:6, col:10> col:10 __pshared 'int'
| |-NoThrowAttr 0x5576dde460b8 <col:37>
| `-NonNullAttr 0x5576dde46110 <col:78, col:92> 1
|-FunctionDecl 0x5576dde46328 <line:616:1, line:619:82> line:616:12 pthread_condattr_getclock 'int (const pthread_condattr_t *restrict, __clockid_t *restrict)' extern
| |-ParmVarDecl 0x5576dde46158 <col:39, line:617:22> col:22 __attr 'const pthread_condattr_t *restrict'
| |-ParmVarDecl 0x5576dde46200 <line:618:11, col:35> col:35 __clock_id '__clockid_t *restrict'
| |-NoThrowAttr 0x5576dde463d8 <line:619:22>
| `-NonNullAttr 0x5576dde46430 <col:63, col:80> 1 2
|-FunctionDecl 0x5576dde465f8 <line:620:1, line:622:79> line:620:12 pthread_condattr_setclock 'int (pthread_condattr_t *, __clockid_t)' extern
| |-ParmVarDecl 0x5576dde46478 <col:39, col:59> col:59 __attr 'pthread_condattr_t *'
| |-ParmVarDecl 0x5576dde464f0 <line:621:11, col:23> col:23 __clock_id '__clockid_t':'int'
| |-NoThrowAttr 0x5576dde466a8 <line:622:22>
| `-NonNullAttr 0x5576dde46700 <col:63, col:77> 1
|-FunctionDecl 0x5576dde469a8 <line:623:1, line:624:79> line:623:12 pthread_spin_init 'int (pthread_spinlock_t *, int)' extern
| |-ParmVarDecl 0x5576dde467e0 <col:31, col:51> col:51 __lock 'pthread_spinlock_t *'
| |-ParmVarDecl 0x5576dde46860 <col:59, col:63> col:63 __pshared 'int'
| |-NoThrowAttr 0x5576dde46a58 <line:624:22>
| `-NonNullAttr 0x5576dde46ae0 <col:63, col:77> 1
|-FunctionDecl 0x5576dde46c58 <line:625:1, line:626:79> line:625:12 pthread_spin_destroy 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x5576dde46b28 <col:34, col:54> col:54 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x5576dde46d00 <line:626:22>
| `-NonNullAttr 0x5576dde46d58 <col:63, col:77> 1
|-FunctionDecl 0x5576dde46e60 <line:627:1, line:628:68> line:627:12 pthread_spin_lock 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x5576dde46da8 <col:31, col:51> col:51 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x5576dde46f08 <line:628:22>
| `-NonNullAttr 0x5576dde46f60 <col:52, col:66> 1
|-FunctionDecl 0x5576dde47060 <line:629:1, line:630:68> line:629:12 pthread_spin_trylock 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x5576dde46fa8 <col:34, col:54> col:54 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x5576dde47108 <line:630:22>
| `-NonNullAttr 0x5576dde47160 <col:52, col:66> 1
|-FunctionDecl 0x5576dde47260 <line:631:1, line:632:68> line:631:12 pthread_spin_unlock 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x5576dde471a8 <col:33, col:53> col:53 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x5576dde47308 <line:632:22>
| `-NonNullAttr 0x5576dde47360 <col:52, col:66> 1
|-FunctionDecl 0x5576dde47738 <line:633:1, line:636:79> line:633:12 pthread_barrier_init 'int (pthread_barrier_t *restrict, const pthread_barrierattr_t *restrict, unsigned int)' extern
| |-ParmVarDecl 0x5576dde47440 <col:34, col:64> col:64 __barrier 'pthread_barrier_t *restrict'
| |-ParmVarDecl 0x5576dde47550 <line:634:6, line:635:6> col:6 __attr 'const pthread_barrierattr_t *restrict'
| |-ParmVarDecl 0x5576dde475d0 <col:14, col:27> col:27 __count 'unsigned int'
| |-NoThrowAttr 0x5576dde477f0 <line:636:22>
| `-NonNullAttr 0x5576dde47848 <col:63, col:77> 1
|-FunctionDecl 0x5576dde479c8 <line:637:1, line:638:79> line:637:12 pthread_barrier_destroy 'int (pthread_barrier_t *)' extern
| |-ParmVarDecl 0x5576dde47898 <col:37, col:56> col:56 __barrier 'pthread_barrier_t *'
| |-NoThrowAttr 0x5576dde47a70 <line:638:22>
| `-NonNullAttr 0x5576dde48b00 <col:63, col:77> 1
|-FunctionDecl 0x5576dde48c00 <line:639:1, line:640:68> line:639:12 pthread_barrier_wait 'int (pthread_barrier_t *)' extern
| |-ParmVarDecl 0x5576dde48b48 <col:34, col:53> col:53 __barrier 'pthread_barrier_t *'
| |-NoThrowAttr 0x5576dde48ca8 <line:640:22>
| `-NonNullAttr 0x5576dde48d00 <col:52, col:66> 1
|-FunctionDecl 0x5576dde48ee8 <line:641:1, line:642:79> line:641:12 pthread_barrierattr_init 'int (pthread_barrierattr_t *)' extern
| |-ParmVarDecl 0x5576dde48db0 <col:38, col:61> col:61 __attr 'pthread_barrierattr_t *'
| |-NoThrowAttr 0x5576dde48f90 <line:642:22>
| `-NonNullAttr 0x5576dde48fe8 <col:63, col:77> 1
|-FunctionDecl 0x5576dde490f0 <line:643:1, line:644:79> line:643:12 pthread_barrierattr_destroy 'int (pthread_barrierattr_t *)' extern
| |-ParmVarDecl 0x5576dde49038 <col:41, col:64> col:64 __attr 'pthread_barrierattr_t *'
| |-NoThrowAttr 0x5576dde49198 <line:644:22>
| `-NonNullAttr 0x5576dde491f0 <col:63, col:77> 1
|-FunctionDecl 0x5576dde49418 <line:645:1, line:648:82> line:645:12 pthread_barrierattr_getpshared 'int (const pthread_barrierattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x5576dde49238 <col:44, line:646:20> col:20 __attr 'const pthread_barrierattr_t *restrict'
| |-ParmVarDecl 0x5576dde492b8 <line:647:9, col:25> col:25 __pshared 'int *restrict'
| |-NoThrowAttr 0x5576dde494c8 <line:648:22>
| `-NonNullAttr 0x5576dde49520 <col:63, col:80> 1 2
|-FunctionDecl 0x5576dde49728 <line:649:1, line:651:79> line:649:12 pthread_barrierattr_setpshared 'int (pthread_barrierattr_t *, int)' extern
| |-ParmVarDecl 0x5576dde49568 <col:44, col:67> col:67 __attr 'pthread_barrierattr_t *'
| |-ParmVarDecl 0x5576dde495e8 <line:650:9, col:13> col:13 __pshared 'int'
| |-NoThrowAttr 0x5576dde497d8 <line:651:22>
| `-NonNullAttr 0x5576dde49830 <col:63, col:77> 1
|-FunctionDecl 0x5576dde49b98 <line:652:1, line:654:79> line:652:12 pthread_key_create 'int (pthread_key_t *, void (*)(void *))' extern
| |-ParmVarDecl 0x5576dde49910 <col:32, col:47> col:47 __key 'pthread_key_t *'
| |-ParmVarDecl 0x5576dde49a30 <line:653:11, col:43> col:18 __destr_function 'void (*)(void *)'
| |-NoThrowAttr 0x5576dde49c48 <line:654:22>
| `-NonNullAttr 0x5576dde49ca0 <col:63, col:77> 1
|-FunctionDecl 0x5576dde49df8 <line:655:1, col:92> col:12 pthread_key_delete 'int (pthread_key_t)' extern
| |-ParmVarDecl 0x5576dde49ce8 <col:32, col:46> col:46 __key 'pthread_key_t':'unsigned int'
| `-NoThrowAttr 0x5576dde49ea0 <col:69>
|-FunctionDecl 0x5576dde4a018 <line:656:1, col:95> col:14 pthread_getspecific 'void *(pthread_key_t)' extern
| |-ParmVarDecl 0x5576dde49f08 <col:35, col:49> col:49 __key 'pthread_key_t':'unsigned int'
| `-NoThrowAttr 0x5576dde4a0c0 <col:72>
|-FunctionDecl 0x5576dde4a2f8 <line:657:1, line:658:67> line:657:12 pthread_setspecific 'int (pthread_key_t, const void *)' extern
| |-ParmVarDecl 0x5576dde4a128 <col:33, col:47> col:47 __key 'pthread_key_t':'unsigned int'
| |-ParmVarDecl 0x5576dde4a1d8 <line:658:5, col:17> col:17 __pointer 'const void *'
| `-NoThrowAttr 0x5576dde4a3a8 <col:44>
|-FunctionDecl 0x5576dde4a5c8 <line:659:1, line:661:79> line:659:12 pthread_getcpuclockid 'int (pthread_t, __clockid_t *)' extern
| |-ParmVarDecl 0x5576dde4a410 <col:35, col:45> col:45 __thread_id 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x5576dde4a488 <line:660:7, col:20> col:20 __clock_id '__clockid_t *'
| |-NoThrowAttr 0x5576dde4a678 <line:661:22>
| `-NonNullAttr 0x5576dde4a6d0 <col:63, col:77> 2
|-FunctionDecl 0x5576dde4ab30 <line:662:1, line:664:70> line:662:12 pthread_atfork 'int (void (*)(void), void (*)(void), void (*)(void))' extern
| |-ParmVarDecl 0x5576dde4a7b0 <col:28, col:51> col:35 __prepare 'void (*)(void)'
| |-ParmVarDecl 0x5576dde4a8c0 <line:663:7, col:29> col:14 __parent 'void (*)(void)'
| |-ParmVarDecl 0x5576dde4a9d0 <line:664:7, col:28> col:14 __child 'void (*)(void)'
| `-NoThrowAttr 0x5576dde4abe8 <col:47>
|-FunctionDecl 0x5576dde4acf0 <line:666:1, col:20> col:8 used P0 'void *(void *)'
| `-ParmVarDecl 0x5576dde4ac58 <col:11, col:17> col:17 arg 'void *'
|-FunctionDecl 0x5576dde4ae48 <line:667:1, col:20> col:8 used P1 'void *(void *)'
| `-ParmVarDecl 0x5576dde4adb0 <col:11, col:17> col:17 arg 'void *'
|-FunctionDecl 0x5576dde4afa0 <line:668:1, col:20> col:8 used P2 'void *(void *)'
| `-ParmVarDecl 0x5576dde4af08 <col:11, col:17> col:17 arg 'void *'
|-FunctionDecl 0x5576dde4b068 <line:669:1, col:12> col:6 fence 'void ()'
|-FunctionDecl 0x5576dde4b128 <line:670:1, col:12> col:6 isync 'void ()'
|-FunctionDecl 0x5576dde4b1e8 <line:671:1, col:14> col:6 lwfence 'void ()'
|-VarDecl 0x5576dde4b2a0 <line:672:1, col:5> col:5 used __unbuffered_cnt 'int'
|-VarDecl 0x5576dde4b320 prev 0x5576dde4b2a0 <line:673:1, col:24> col:5 used __unbuffered_cnt 'int' cinit
| `-IntegerLiteral 0x5576dde4b388 <col:24> 'int' 0
|-VarDecl 0x5576dde4b3c0 <line:674:1, col:5> col:5 used __unbuffered_p0_EAX 'int'
|-VarDecl 0x5576dde4b440 prev 0x5576dde4b3c0 <line:675:1, col:27> col:5 used __unbuffered_p0_EAX 'int' cinit
| `-IntegerLiteral 0x5576dde4b4a8 <col:27> 'int' 0
|-VarDecl 0x5576dde4b4e0 <line:676:1, col:5> col:5 used __unbuffered_p0_EBX 'int'
|-VarDecl 0x5576dde4b560 prev 0x5576dde4b4e0 <line:677:1, col:27> col:5 used __unbuffered_p0_EBX 'int' cinit
| `-IntegerLiteral 0x5576dde4b5c8 <col:27> 'int' 0
|-VarDecl 0x5576dde4b600 <line:678:1, col:5> col:5 used __unbuffered_p1_EAX 'int'
|-VarDecl 0x5576dde4b680 prev 0x5576dde4b600 <line:679:1, col:27> col:5 used __unbuffered_p1_EAX 'int' cinit
| `-IntegerLiteral 0x5576dde4b6e8 <col:27> 'int' 0
|-VarDecl 0x5576dde4b720 <line:680:1, col:5> col:5 used __unbuffered_p1_EBX 'int'
|-VarDecl 0x5576dde4b7a0 prev 0x5576dde4b720 <line:681:1, col:27> col:5 used __unbuffered_p1_EBX 'int' cinit
| `-IntegerLiteral 0x5576dde4b808 <col:27> 'int' 0
|-VarDecl 0x5576dde4b840 <line:682:1, col:5> col:5 used __unbuffered_p2_EAX 'int'
|-VarDecl 0x5576dde4b8c0 prev 0x5576dde4b840 <line:683:1, col:27> col:5 used __unbuffered_p2_EAX 'int' cinit
| `-IntegerLiteral 0x5576dde4b928 <col:27> 'int' 0
|-VarDecl 0x5576dde4b960 <line:684:1, col:5> col:5 used __unbuffered_p2_EBX 'int'
|-VarDecl 0x5576dde4b9e0 prev 0x5576dde4b960 <line:685:1, col:27> col:5 used __unbuffered_p2_EBX 'int' cinit
| `-IntegerLiteral 0x5576dde4ba48 <col:27> 'int' 0
|-VarDecl 0x5576dde4ba78 <line:686:1, col:7> col:7 used main$tmp_guard0 '_Bool'
|-VarDecl 0x5576dde4bb00 <line:687:1, col:7> col:7 used main$tmp_guard1 '_Bool'
|-VarDecl 0x5576dde4bb80 <line:688:1, col:5> col:5 used x 'int'
|-VarDecl 0x5576dde4bc00 prev 0x5576dde4bb80 <line:689:1, col:9> col:5 used x 'int' cinit
| `-IntegerLiteral 0x5576dde4bc68 <col:9> 'int' 0
|-VarDecl 0x5576dde4bca0 <line:690:1, col:5> col:5 used y 'int'
|-VarDecl 0x5576dde4bd20 prev 0x5576dde4bca0 <line:691:1, col:9> col:5 used y 'int' cinit
| `-IntegerLiteral 0x5576dde4bd88 <col:9> 'int' 0
|-VarDecl 0x5576dde4bdc0 <line:692:1, col:5> col:5 used z 'int'
|-VarDecl 0x5576dde4be40 prev 0x5576dde4bdc0 <line:693:1, col:9> col:5 used z 'int' cinit
| `-IntegerLiteral 0x5576dde4bea8 <col:9> 'int' 0
|-VarDecl 0x5576dde4bed8 <line:694:1, col:7> col:7 used z$flush_delayed '_Bool'
|-VarDecl 0x5576dde4bf58 <line:695:1, col:5> col:5 used z$mem_tmp 'int'
|-VarDecl 0x5576dde4bfd0 <line:696:1, col:7> col:7 used z$r_buff0_thd0 '_Bool'
|-VarDecl 0x5576dde4c048 <line:697:1, col:7> col:7 used z$r_buff0_thd1 '_Bool'
|-VarDecl 0x5576dde4c0c0 <line:698:1, col:7> col:7 used z$r_buff0_thd2 '_Bool'
|-VarDecl 0x5576dde4c138 <line:699:1, col:7> col:7 used z$r_buff0_thd3 '_Bool'
|-VarDecl 0x5576dde4c1b0 <line:700:1, col:7> col:7 used z$r_buff1_thd0 '_Bool'
|-VarDecl 0x5576dde4c228 <line:701:1, col:7> col:7 used z$r_buff1_thd1 '_Bool'
|-VarDecl 0x5576dde4c2a0 <line:702:1, col:7> col:7 used z$r_buff1_thd2 '_Bool'
|-VarDecl 0x5576dde4c318 <line:703:1, col:7> col:7 used z$r_buff1_thd3 '_Bool'
|-VarDecl 0x5576dde4c390 <line:704:1, col:7> col:7 z$read_delayed '_Bool'
|-VarDecl 0x5576dde4c410 <line:705:1, col:6> col:6 z$read_delayed_var 'int *'
|-VarDecl 0x5576dde4c490 <line:706:1, col:5> col:5 used z$w_buff0 'int'
|-VarDecl 0x5576dde4c508 <line:707:1, col:7> col:7 used z$w_buff0_used '_Bool'
|-VarDecl 0x5576dde4c588 <line:708:1, col:5> col:5 used z$w_buff1 'int'
|-VarDecl 0x5576dde4c600 <line:709:1, col:7> col:7 used z$w_buff1_used '_Bool'
|-VarDecl 0x5576dde4c678 <line:710:1, col:7> col:7 used weak$$choice0 '_Bool'
|-VarDecl 0x5576dde4c6f0 <line:711:1, col:7> col:7 used weak$$choice2 '_Bool'
|-FunctionDecl 0x5576dde4c808 prev 0x5576dde4acf0 <line:712:1, line:756:1> line:712:8 used P0 'void *(void *)'
| |-ParmVarDecl 0x5576dde4c770 <col:11, col:17> col:17 arg 'void *'
| `-CompoundStmt 0x5576dde50b50 <line:713:1, line:756:1>
|   |-CallExpr 0x5576dde4c918 <line:714:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x5576dde4c900 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5576dde4c8b0 <col:3> 'void ()' Function 0x5576dddf1fa0 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x5576dde4c990 <line:715:3, col:15> 'int' '='
|   | |-DeclRefExpr 0x5576dde4c938 <col:3> 'int' lvalue Var 0x5576dde4c588 'z$w_buff1' 'int'
|   | `-ImplicitCastExpr 0x5576dde4c978 <col:15> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x5576dde4c958 <col:15> 'int' lvalue Var 0x5576dde4c490 'z$w_buff0' 'int'
|   |-BinaryOperator 0x5576dde4c9f0 <line:716:3, col:15> 'int' '='
|   | |-DeclRefExpr 0x5576dde4c9b0 <col:3> 'int' lvalue Var 0x5576dde4c490 'z$w_buff0' 'int'
|   | `-IntegerLiteral 0x5576dde4c9d0 <col:15> 'int' 1
|   |-BinaryOperator 0x5576dde4ca68 <line:717:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x5576dde4ca10 <col:3> '_Bool' lvalue Var 0x5576dde4c600 'z$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x5576dde4ca50 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x5576dde4ca30 <col:20> '_Bool' lvalue Var 0x5576dde4c508 'z$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x5576dde4cb10 <line:718:3, col:27> '_Bool' '='
|   | |-DeclRefExpr 0x5576dde4ca88 <col:3> '_Bool' lvalue Var 0x5576dde4c508 'z$w_buff0_used' '_Bool'
|   | `-CStyleCastExpr 0x5576dde4cad8 <col:20, col:27> '_Bool' <IntegralToBoolean>
|   |   `-IntegerLiteral 0x5576dde4caa8 <col:27> 'int' 1
|   |-CallExpr 0x5576dde4cc98 <line:719:3, col:56> 'void'
|   | |-ImplicitCastExpr 0x5576dde4cc80 <col:3> 'void (*)(int)' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x5576dde4cb30 <col:3> 'void (int)' Function 0x5576dddf1d28 '__VERIFIER_assert' 'void (int)'
|   | `-UnaryOperator 0x5576dde4cc30 <col:21, col:55> 'int' prefix '!' cannot overflow
|   |   `-ParenExpr 0x5576dde4cc10 <col:22, col:55> 'int'
|   |     `-BinaryOperator 0x5576dde4cbf0 <col:23, col:41> 'int' '&&'
|   |       |-ImplicitCastExpr 0x5576dde4cba8 <col:23> 'int' <IntegralCast>
|   |       | `-ImplicitCastExpr 0x5576dde4cb90 <col:23> '_Bool' <LValueToRValue>
|   |       |   `-DeclRefExpr 0x5576dde4cb50 <col:23> '_Bool' lvalue Var 0x5576dde4c600 'z$w_buff1_used' '_Bool'
|   |       `-ImplicitCastExpr 0x5576dde4cbd8 <col:41> 'int' <IntegralCast>
|   |         `-ImplicitCastExpr 0x5576dde4cbc0 <col:41> '_Bool' <LValueToRValue>
|   |           `-DeclRefExpr 0x5576dde4cb70 <col:41> '_Bool' lvalue Var 0x5576dde4c508 'z$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x5576dde4cd18 <line:720:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x5576dde4ccc0 <col:3> '_Bool' lvalue Var 0x5576dde4c1b0 'z$r_buff1_thd0' '_Bool'
|   | `-ImplicitCastExpr 0x5576dde4cd00 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x5576dde4cce0 <col:20> '_Bool' lvalue Var 0x5576dde4bfd0 'z$r_buff0_thd0' '_Bool'
|   |-BinaryOperator 0x5576dde4cd90 <line:721:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x5576dde4cd38 <col:3> '_Bool' lvalue Var 0x5576dde4c228 'z$r_buff1_thd1' '_Bool'
|   | `-ImplicitCastExpr 0x5576dde4cd78 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x5576dde4cd58 <col:20> '_Bool' lvalue Var 0x5576dde4c048 'z$r_buff0_thd1' '_Bool'
|   |-BinaryOperator 0x5576dde4ce08 <line:722:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x5576dde4cdb0 <col:3> '_Bool' lvalue Var 0x5576dde4c2a0 'z$r_buff1_thd2' '_Bool'
|   | `-ImplicitCastExpr 0x5576dde4cdf0 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x5576dde4cdd0 <col:20> '_Bool' lvalue Var 0x5576dde4c0c0 'z$r_buff0_thd2' '_Bool'
|   |-BinaryOperator 0x5576dde4ce80 <line:723:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x5576dde4ce28 <col:3> '_Bool' lvalue Var 0x5576dde4c318 'z$r_buff1_thd3' '_Bool'
|   | `-ImplicitCastExpr 0x5576dde4ce68 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x5576dde4ce48 <col:20> '_Bool' lvalue Var 0x5576dde4c138 'z$r_buff0_thd3' '_Bool'
|   |-BinaryOperator 0x5576dde4cf18 <line:724:3, col:27> '_Bool' '='
|   | |-DeclRefExpr 0x5576dde4cea0 <col:3> '_Bool' lvalue Var 0x5576dde4c048 'z$r_buff0_thd1' '_Bool'
|   | `-CStyleCastExpr 0x5576dde4cef0 <col:20, col:27> '_Bool' <IntegralToBoolean>
|   |   `-IntegerLiteral 0x5576dde4cec0 <col:27> 'int' 1
|   |-CallExpr 0x5576dde4cf70 <line:725:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x5576dde4cf58 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5576dde4cf38 <col:3> 'void ()' Function 0x5576dddf2060 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x5576dde4cfc8 <line:726:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x5576dde4cfb0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5576dde4cf90 <col:3> 'void ()' Function 0x5576dddf1fa0 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x5576dde4d098 <line:727:3, col:42> '_Bool' '='
|   | |-DeclRefExpr 0x5576dde4cfe8 <col:3> '_Bool' lvalue Var 0x5576dde4c678 'weak$$choice0' '_Bool'
|   | `-CallExpr 0x5576dde4d078 <col:19, col:42> '_Bool'
|   |   `-ImplicitCastExpr 0x5576dde4d060 <col:19> '_Bool (*)(void)' <FunctionToPointerDecay>
|   |     `-DeclRefExpr 0x5576dde4d008 <col:19> '_Bool (void)' Function 0x5576dddf1770 '__VERIFIER_nondet_bool' '_Bool (void)'
|   |-BinaryOperator 0x5576dde4d130 <line:728:3, col:42> '_Bool' '='
|   | |-DeclRefExpr 0x5576dde4d0b8 <col:3> '_Bool' lvalue Var 0x5576dde4c6f0 'weak$$choice2' '_Bool'
|   | `-CallExpr 0x5576dde4d110 <col:19, col:42> '_Bool'
|   |   `-ImplicitCastExpr 0x5576dde4d0f8 <col:19> '_Bool (*)(void)' <FunctionToPointerDecay>
|   |     `-DeclRefExpr 0x5576dde4d0d8 <col:19> '_Bool (void)' Function 0x5576dddf1770 '__VERIFIER_nondet_bool' '_Bool (void)'
|   |-BinaryOperator 0x5576dde4d1a8 <line:729:3, col:21> '_Bool' '='
|   | |-DeclRefExpr 0x5576dde4d150 <col:3> '_Bool' lvalue Var 0x5576dde4bed8 'z$flush_delayed' '_Bool'
|   | `-ImplicitCastExpr 0x5576dde4d190 <col:21> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x5576dde4d170 <col:21> '_Bool' lvalue Var 0x5576dde4c6f0 'weak$$choice2' '_Bool'
|   |-BinaryOperator 0x5576dde4d220 <line:730:3, col:15> 'int' '='
|   | |-DeclRefExpr 0x5576dde4d1c8 <col:3> 'int' lvalue Var 0x5576dde4bf58 'z$mem_tmp' 'int'
|   | `-ImplicitCastExpr 0x5576dde4d208 <col:15> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x5576dde4d1e8 <col:15> 'int' lvalue Var 0x5576dde4be40 'z' 'int'
|   |-BinaryOperator 0x5576dde4d658 <line:731:3, col:162> 'int' '='
|   | |-DeclRefExpr 0x5576dde4d240 <col:3> 'int' lvalue Var 0x5576dde4be40 'z' 'int'
|   | `-ConditionalOperator 0x5576dde4d628 <col:7, col:162> 'int'
|   |   |-BinaryOperator 0x5576dde4d450 <col:7, col:84> 'int' '||'
|   |   | |-BinaryOperator 0x5576dde4d370 <col:7, col:46> 'int' '||'
|   |   | | |-UnaryOperator 0x5576dde4d298 <col:7, col:8> 'int' prefix '!' cannot overflow
|   |   | | | `-ImplicitCastExpr 0x5576dde4d280 <col:8> '_Bool' <LValueToRValue>
|   |   | | |   `-DeclRefExpr 0x5576dde4d260 <col:8> '_Bool' lvalue Var 0x5576dde4c508 'z$w_buff0_used' '_Bool'
|   |   | | `-BinaryOperator 0x5576dde4d350 <col:26, col:46> 'int' '&&'
|   |   | |   |-UnaryOperator 0x5576dde4d2e8 <col:26, col:27> 'int' prefix '!' cannot overflow
|   |   | |   | `-ImplicitCastExpr 0x5576dde4d2d0 <col:27> '_Bool' <LValueToRValue>
|   |   | |   |   `-DeclRefExpr 0x5576dde4d2b0 <col:27> '_Bool' lvalue Var 0x5576dde4c048 'z$r_buff0_thd1' '_Bool'
|   |   | |   `-UnaryOperator 0x5576dde4d338 <col:45, col:46> 'int' prefix '!' cannot overflow
|   |   | |     `-ImplicitCastExpr 0x5576dde4d320 <col:46> '_Bool' <LValueToRValue>
|   |   | |       `-DeclRefExpr 0x5576dde4d300 <col:46> '_Bool' lvalue Var 0x5576dde4c600 'z$w_buff1_used' '_Bool'
|   |   | `-BinaryOperator 0x5576dde4d430 <col:64, col:84> 'int' '&&'
|   |   |   |-UnaryOperator 0x5576dde4d3c8 <col:64, col:65> 'int' prefix '!' cannot overflow
|   |   |   | `-ImplicitCastExpr 0x5576dde4d3b0 <col:65> '_Bool' <LValueToRValue>
|   |   |   |   `-DeclRefExpr 0x5576dde4d390 <col:65> '_Bool' lvalue Var 0x5576dde4c048 'z$r_buff0_thd1' '_Bool'
|   |   |   `-UnaryOperator 0x5576dde4d418 <col:83, col:84> 'int' prefix '!' cannot overflow
|   |   |     `-ImplicitCastExpr 0x5576dde4d400 <col:84> '_Bool' <LValueToRValue>
|   |   |       `-DeclRefExpr 0x5576dde4d3e0 <col:84> '_Bool' lvalue Var 0x5576dde4c228 'z$r_buff1_thd1' '_Bool'
|   |   |-ImplicitCastExpr 0x5576dde4d610 <col:101> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x5576dde4d470 <col:101> 'int' lvalue Var 0x5576dde4be40 'z' 'int'
|   |   `-ParenExpr 0x5576dde4d5f0 <col:105, col:162> 'int'
|   |     `-ConditionalOperator 0x5576dde4d5c0 <col:106, col:153> 'int'
|   |       |-BinaryOperator 0x5576dde4d530 <col:106, col:124> 'int' '&&'
|   |       | |-ImplicitCastExpr 0x5576dde4d4e8 <col:106> 'int' <IntegralCast>
|   |       | | `-ImplicitCastExpr 0x5576dde4d4d0 <col:106> '_Bool' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x5576dde4d490 <col:106> '_Bool' lvalue Var 0x5576dde4c508 'z$w_buff0_used' '_Bool'
|   |       | `-ImplicitCastExpr 0x5576dde4d518 <col:124> 'int' <IntegralCast>
|   |       |   `-ImplicitCastExpr 0x5576dde4d500 <col:124> '_Bool' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x5576dde4d4b0 <col:124> '_Bool' lvalue Var 0x5576dde4c048 'z$r_buff0_thd1' '_Bool'
|   |       |-ImplicitCastExpr 0x5576dde4d590 <col:141> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x5576dde4d550 <col:141> 'int' lvalue Var 0x5576dde4c490 'z$w_buff0' 'int'
|   |       `-ImplicitCastExpr 0x5576dde4d5a8 <col:153> 'int' <LValueToRValue>
|   |         `-DeclRefExpr 0x5576dde4d570 <col:153> 'int' lvalue Var 0x5576dde4c588 'z$w_buff1' 'int'
|   |-BinaryOperator 0x5576dde4db80 <line:732:3, col:208> 'int' '='
|   | |-DeclRefExpr 0x5576dde4d678 <col:3> 'int' lvalue Var 0x5576dde4c490 'z$w_buff0' 'int'
|   | `-ConditionalOperator 0x5576dde4db50 <col:15, col:208> 'int'
|   |   |-ImplicitCastExpr 0x5576dde4db20 <col:15> 'int' <IntegralCast>
|   |   | `-ImplicitCastExpr 0x5576dde4daf0 <col:15> '_Bool' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x5576dde4d698 <col:15> '_Bool' lvalue Var 0x5576dde4c6f0 'weak$$choice2' '_Bool'
|   |   |-ImplicitCastExpr 0x5576dde4db38 <col:31> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x5576dde4d6b8 <col:31> 'int' lvalue Var 0x5576dde4c490 'z$w_buff0' 'int'
|   |   `-ParenExpr 0x5576dde4dad0 <col:43, col:208> 'int'
|   |     `-ConditionalOperator 0x5576dde4daa0 <col:44, col:207> 'int'
|   |       |-BinaryOperator 0x5576dde4d8c8 <col:44, col:121> 'int' '||'
|   |       | |-BinaryOperator 0x5576dde4d7e8 <col:44, col:83> 'int' '||'
|   |       | | |-UnaryOperator 0x5576dde4d710 <col:44, col:45> 'int' prefix '!' cannot overflow
|   |       | | | `-ImplicitCastExpr 0x5576dde4d6f8 <col:45> '_Bool' <LValueToRValue>
|   |       | | |   `-DeclRefExpr 0x5576dde4d6d8 <col:45> '_Bool' lvalue Var 0x5576dde4c508 'z$w_buff0_used' '_Bool'
|   |       | | `-BinaryOperator 0x5576dde4d7c8 <col:63, col:83> 'int' '&&'
|   |       | |   |-UnaryOperator 0x5576dde4d760 <col:63, col:64> 'int' prefix '!' cannot overflow
|   |       | |   | `-ImplicitCastExpr 0x5576dde4d748 <col:64> '_Bool' <LValueToRValue>
|   |       | |   |   `-DeclRefExpr 0x5576dde4d728 <col:64> '_Bool' lvalue Var 0x5576dde4c048 'z$r_buff0_thd1' '_Bool'
|   |       | |   `-UnaryOperator 0x5576dde4d7b0 <col:82, col:83> 'int' prefix '!' cannot overflow
|   |       | |     `-ImplicitCastExpr 0x5576dde4d798 <col:83> '_Bool' <LValueToRValue>
|   |       | |       `-DeclRefExpr 0x5576dde4d778 <col:83> '_Bool' lvalue Var 0x5576dde4c600 'z$w_buff1_used' '_Bool'
|   |       | `-BinaryOperator 0x5576dde4d8a8 <col:101, col:121> 'int' '&&'
|   |       |   |-UnaryOperator 0x5576dde4d840 <col:101, col:102> 'int' prefix '!' cannot overflow
|   |       |   | `-ImplicitCastExpr 0x5576dde4d828 <col:102> '_Bool' <LValueToRValue>
|   |       |   |   `-DeclRefExpr 0x5576dde4d808 <col:102> '_Bool' lvalue Var 0x5576dde4c048 'z$r_buff0_thd1' '_Bool'
|   |       |   `-UnaryOperator 0x5576dde4d890 <col:120, col:121> 'int' prefix '!' cannot overflow
|   |       |     `-ImplicitCastExpr 0x5576dde4d878 <col:121> '_Bool' <LValueToRValue>
|   |       |       `-DeclRefExpr 0x5576dde4d858 <col:121> '_Bool' lvalue Var 0x5576dde4c228 'z$r_buff1_thd1' '_Bool'
|   |       |-ImplicitCastExpr 0x5576dde4da88 <col:138> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x5576dde4d8e8 <col:138> 'int' lvalue Var 0x5576dde4c490 'z$w_buff0' 'int'
|   |       `-ParenExpr 0x5576dde4da68 <col:150, col:207> 'int'
|   |         `-ConditionalOperator 0x5576dde4da38 <col:151, col:198> 'int'
|   |           |-BinaryOperator 0x5576dde4d9a8 <col:151, col:169> 'int' '&&'
|   |           | |-ImplicitCastExpr 0x5576dde4d960 <col:151> 'int' <IntegralCast>
|   |           | | `-ImplicitCastExpr 0x5576dde4d948 <col:151> '_Bool' <LValueToRValue>
|   |           | |   `-DeclRefExpr 0x5576dde4d908 <col:151> '_Bool' lvalue Var 0x5576dde4c508 'z$w_buff0_used' '_Bool'
|   |           | `-ImplicitCastExpr 0x5576dde4d990 <col:169> 'int' <IntegralCast>
|   |           |   `-ImplicitCastExpr 0x5576dde4d978 <col:169> '_Bool' <LValueToRValue>
|   |           |     `-DeclRefExpr 0x5576dde4d928 <col:169> '_Bool' lvalue Var 0x5576dde4c048 'z$r_buff0_thd1' '_Bool'
|   |           |-ImplicitCastExpr 0x5576dde4da08 <col:186> 'int' <LValueToRValue>
|   |           | `-DeclRefExpr 0x5576dde4d9c8 <col:186> 'int' lvalue Var 0x5576dde4c490 'z$w_buff0' 'int'
|   |           `-ImplicitCastExpr 0x5576dde4da20 <col:198> 'int' <LValueToRValue>
|   |             `-DeclRefExpr 0x5576dde4d9e8 <col:198> 'int' lvalue Var 0x5576dde4c490 'z$w_buff0' 'int'
|   |-BinaryOperator 0x5576dde4e090 <line:733:3, col:208> 'int' '='
|   | |-DeclRefExpr 0x5576dde4dba0 <col:3> 'int' lvalue Var 0x5576dde4c588 'z$w_buff1' 'int'
|   | `-ConditionalOperator 0x5576dde4e060 <col:15, col:208> 'int'
|   |   |-ImplicitCastExpr 0x5576dde4e030 <col:15> 'int' <IntegralCast>
|   |   | `-ImplicitCastExpr 0x5576dde4e018 <col:15> '_Bool' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x5576dde4dbc0 <col:15> '_Bool' lvalue Var 0x5576dde4c6f0 'weak$$choice2' '_Bool'
|   |   |-ImplicitCastExpr 0x5576dde4e048 <col:31> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x5576dde4dbe0 <col:31> 'int' lvalue Var 0x5576dde4c588 'z$w_buff1' 'int'
|   |   `-ParenExpr 0x5576dde4dff8 <col:43, col:208> 'int'
|   |     `-ConditionalOperator 0x5576dde4dfc8 <col:44, col:207> 'int'
|   |       |-BinaryOperator 0x5576dde4ddf0 <col:44, col:121> 'int' '||'
|   |       | |-BinaryOperator 0x5576dde4dd10 <col:44, col:83> 'int' '||'
|   |       | | |-UnaryOperator 0x5576dde4dc38 <col:44, col:45> 'int' prefix '!' cannot overflow
|   |       | | | `-ImplicitCastExpr 0x5576dde4dc20 <col:45> '_Bool' <LValueToRValue>
|   |       | | |   `-DeclRefExpr 0x5576dde4dc00 <col:45> '_Bool' lvalue Var 0x5576dde4c508 'z$w_buff0_used' '_Bool'
|   |       | | `-BinaryOperator 0x5576dde4dcf0 <col:63, col:83> 'int' '&&'
|   |       | |   |-UnaryOperator 0x5576dde4dc88 <col:63, col:64> 'int' prefix '!' cannot overflow
|   |       | |   | `-ImplicitCastExpr 0x5576dde4dc70 <col:64> '_Bool' <LValueToRValue>
|   |       | |   |   `-DeclRefExpr 0x5576dde4dc50 <col:64> '_Bool' lvalue Var 0x5576dde4c048 'z$r_buff0_thd1' '_Bool'
|   |       | |   `-UnaryOperator 0x5576dde4dcd8 <col:82, col:83> 'int' prefix '!' cannot overflow
|   |       | |     `-ImplicitCastExpr 0x5576dde4dcc0 <col:83> '_Bool' <LValueToRValue>
|   |       | |       `-DeclRefExpr 0x5576dde4dca0 <col:83> '_Bool' lvalue Var 0x5576dde4c600 'z$w_buff1_used' '_Bool'
|   |       | `-BinaryOperator 0x5576dde4ddd0 <col:101, col:121> 'int' '&&'
|   |       |   |-UnaryOperator 0x5576dde4dd68 <col:101, col:102> 'int' prefix '!' cannot overflow
|   |       |   | `-ImplicitCastExpr 0x5576dde4dd50 <col:102> '_Bool' <LValueToRValue>
|   |       |   |   `-DeclRefExpr 0x5576dde4dd30 <col:102> '_Bool' lvalue Var 0x5576dde4c048 'z$r_buff0_thd1' '_Bool'
|   |       |   `-UnaryOperator 0x5576dde4ddb8 <col:120, col:121> 'int' prefix '!' cannot overflow
|   |       |     `-ImplicitCastExpr 0x5576dde4dda0 <col:121> '_Bool' <LValueToRValue>
|   |       |       `-DeclRefExpr 0x5576dde4dd80 <col:121> '_Bool' lvalue Var 0x5576dde4c228 'z$r_buff1_thd1' '_Bool'
|   |       |-ImplicitCastExpr 0x5576dde4dfb0 <col:138> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x5576dde4de10 <col:138> 'int' lvalue Var 0x5576dde4c588 'z$w_buff1' 'int'
|   |       `-ParenExpr 0x5576dde4df90 <col:150, col:207> 'int'
|   |         `-ConditionalOperator 0x5576dde4df60 <col:151, col:198> 'int'
|   |           |-BinaryOperator 0x5576dde4ded0 <col:151, col:169> 'int' '&&'
|   |           | |-ImplicitCastExpr 0x5576dde4de88 <col:151> 'int' <IntegralCast>
|   |           | | `-ImplicitCastExpr 0x5576dde4de70 <col:151> '_Bool' <LValueToRValue>
|   |           | |   `-DeclRefExpr 0x5576dde4de30 <col:151> '_Bool' lvalue Var 0x5576dde4c508 'z$w_buff0_used' '_Bool'
|   |           | `-ImplicitCastExpr 0x5576dde4deb8 <col:169> 'int' <IntegralCast>
|   |           |   `-ImplicitCastExpr 0x5576dde4dea0 <col:169> '_Bool' <LValueToRValue>
|   |           |     `-DeclRefExpr 0x5576dde4de50 <col:169> '_Bool' lvalue Var 0x5576dde4c048 'z$r_buff0_thd1' '_Bool'
|   |           |-ImplicitCastExpr 0x5576dde4df30 <col:186> 'int' <LValueToRValue>
|   |           | `-DeclRefExpr 0x5576dde4def0 <col:186> 'int' lvalue Var 0x5576dde4c588 'z$w_buff1' 'int'
|   |           `-ImplicitCastExpr 0x5576dde4df48 <col:198> 'int' <LValueToRValue>
|   |             `-DeclRefExpr 0x5576dde4df10 <col:198> 'int' lvalue Var 0x5576dde4c588 'z$w_buff1' 'int'
|   |-BinaryOperator 0x5576dde4e638 <line:734:3, col:227> '_Bool' '='
|   | |-DeclRefExpr 0x5576dde4e0b0 <col:3> '_Bool' lvalue Var 0x5576dde4c508 'z$w_buff0_used' '_Bool'
|   | `-ImplicitCastExpr 0x5576dde4e620 <col:20, col:227> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x5576dde4e5f0 <col:20, col:227> 'int'
|   |     |-ImplicitCastExpr 0x5576dde4e5a8 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x5576dde4e590 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x5576dde4e0d0 <col:20> '_Bool' lvalue Var 0x5576dde4c6f0 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x5576dde4e5d8 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x5576dde4e5c0 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x5576dde4e0f0 <col:36> '_Bool' lvalue Var 0x5576dde4c508 'z$w_buff0_used' '_Bool'
|   |     `-ParenExpr 0x5576dde4e570 <col:53, col:227> 'int'
|   |       `-ConditionalOperator 0x5576dde4e540 <col:54, col:226> 'int'
|   |         |-BinaryOperator 0x5576dde4e300 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x5576dde4e220 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x5576dde4e148 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x5576dde4e130 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x5576dde4e110 <col:55> '_Bool' lvalue Var 0x5576dde4c508 'z$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x5576dde4e200 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x5576dde4e198 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x5576dde4e180 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x5576dde4e160 <col:74> '_Bool' lvalue Var 0x5576dde4c048 'z$r_buff0_thd1' '_Bool'
|   |         | |   `-UnaryOperator 0x5576dde4e1e8 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x5576dde4e1d0 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x5576dde4e1b0 <col:93> '_Bool' lvalue Var 0x5576dde4c600 'z$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x5576dde4e2e0 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x5576dde4e278 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x5576dde4e260 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x5576dde4e240 <col:112> '_Bool' lvalue Var 0x5576dde4c048 'z$r_buff0_thd1' '_Bool'
|   |         |   `-UnaryOperator 0x5576dde4e2c8 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x5576dde4e2b0 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x5576dde4e290 <col:131> '_Bool' lvalue Var 0x5576dde4c228 'z$r_buff1_thd1' '_Bool'
|   |         |-ImplicitCastExpr 0x5576dde4e528 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x5576dde4e510 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x5576dde4e320 <col:148> '_Bool' lvalue Var 0x5576dde4c508 'z$w_buff0_used' '_Bool'
|   |         `-ParenExpr 0x5576dde4e4f0 <col:165, col:226> 'int'
|   |           `-ConditionalOperator 0x5576dde4e4c0 <col:166, col:212> 'int'
|   |             |-BinaryOperator 0x5576dde4e3e0 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x5576dde4e398 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x5576dde4e380 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x5576dde4e340 <col:166> '_Bool' lvalue Var 0x5576dde4c508 'z$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x5576dde4e3c8 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x5576dde4e3b0 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x5576dde4e360 <col:184> '_Bool' lvalue Var 0x5576dde4c048 'z$r_buff0_thd1' '_Bool'
|   |             |-ImplicitCastExpr 0x5576dde4e478 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x5576dde4e430 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x5576dde4e400 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x5576dde4e4a8 <col:212> 'int' <IntegralCast>
|   |               `-ImplicitCastExpr 0x5576dde4e490 <col:212> '_Bool' <LValueToRValue>
|   |                 `-DeclRefExpr 0x5576dde4e458 <col:212> '_Bool' lvalue Var 0x5576dde4c508 'z$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x5576dde4ec28 <line:735:3, col:221> '_Bool' '='
|   | |-DeclRefExpr 0x5576dde4e658 <col:3> '_Bool' lvalue Var 0x5576dde4c600 'z$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x5576dde4ec10 <col:20, col:221> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x5576dde4ebe0 <col:20, col:221> 'int'
|   |     |-ImplicitCastExpr 0x5576dde4eb98 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x5576dde4eb80 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x5576dde4e678 <col:20> '_Bool' lvalue Var 0x5576dde4c6f0 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x5576dde4ebc8 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x5576dde4ebb0 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x5576dde4e698 <col:36> '_Bool' lvalue Var 0x5576dde4c600 'z$w_buff1_used' '_Bool'
|   |     `-ParenExpr 0x5576dde4eb60 <col:53, col:221> 'int'
|   |       `-ConditionalOperator 0x5576dde4eb30 <col:54, col:220> 'int'
|   |         |-BinaryOperator 0x5576dde4e8a8 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x5576dde4e7c8 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x5576dde4e6f0 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x5576dde4e6d8 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x5576dde4e6b8 <col:55> '_Bool' lvalue Var 0x5576dde4c508 'z$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x5576dde4e7a8 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x5576dde4e740 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x5576dde4e728 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x5576dde4e708 <col:74> '_Bool' lvalue Var 0x5576dde4c048 'z$r_buff0_thd1' '_Bool'
|   |         | |   `-UnaryOperator 0x5576dde4e790 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x5576dde4e778 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x5576dde4e758 <col:93> '_Bool' lvalue Var 0x5576dde4c600 'z$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x5576dde4e888 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x5576dde4e820 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x5576dde4e808 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x5576dde4e7e8 <col:112> '_Bool' lvalue Var 0x5576dde4c048 'z$r_buff0_thd1' '_Bool'
|   |         |   `-UnaryOperator 0x5576dde4e870 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x5576dde4e858 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x5576dde4e838 <col:131> '_Bool' lvalue Var 0x5576dde4c228 'z$r_buff1_thd1' '_Bool'
|   |         |-ImplicitCastExpr 0x5576dde4eaf0 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x5576dde4ead8 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x5576dde4e8c8 <col:148> '_Bool' lvalue Var 0x5576dde4c600 'z$w_buff1_used' '_Bool'
|   |         `-ParenExpr 0x5576dde4eab8 <col:165, col:220> 'int'
|   |           `-ConditionalOperator 0x5576dde4ea88 <col:166, col:219> 'int'
|   |             |-BinaryOperator 0x5576dde4e988 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x5576dde4e940 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x5576dde4e928 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x5576dde4e8e8 <col:166> '_Bool' lvalue Var 0x5576dde4c508 'z$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x5576dde4e970 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x5576dde4e958 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x5576dde4e908 <col:184> '_Bool' lvalue Var 0x5576dde4c048 'z$r_buff0_thd1' '_Bool'
|   |             |-ImplicitCastExpr 0x5576dde4ea58 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x5576dde4e9d8 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x5576dde4e9a8 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x5576dde4ea70 <col:212, col:219> 'int' <IntegralCast>
|   |               `-CStyleCastExpr 0x5576dde4ea30 <col:212, col:219> '_Bool' <IntegralToBoolean>
|   |                 `-IntegerLiteral 0x5576dde4ea00 <col:219> 'int' 0
|   |-BinaryOperator 0x5576dde4f1d0 <line:736:3, col:227> '_Bool' '='
|   | |-DeclRefExpr 0x5576dde4ec48 <col:3> '_Bool' lvalue Var 0x5576dde4c048 'z$r_buff0_thd1' '_Bool'
|   | `-ImplicitCastExpr 0x5576dde4f1b8 <col:20, col:227> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x5576dde4f188 <col:20, col:227> 'int'
|   |     |-ImplicitCastExpr 0x5576dde4f140 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x5576dde4f128 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x5576dde4ec68 <col:20> '_Bool' lvalue Var 0x5576dde4c6f0 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x5576dde4f170 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x5576dde4f158 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x5576dde4ec88 <col:36> '_Bool' lvalue Var 0x5576dde4c048 'z$r_buff0_thd1' '_Bool'
|   |     `-ParenExpr 0x5576dde4f108 <col:53, col:227> 'int'
|   |       `-ConditionalOperator 0x5576dde4f0d8 <col:54, col:226> 'int'
|   |         |-BinaryOperator 0x5576dde4ee98 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x5576dde4edb8 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x5576dde4ece0 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x5576dde4ecc8 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x5576dde4eca8 <col:55> '_Bool' lvalue Var 0x5576dde4c508 'z$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x5576dde4ed98 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x5576dde4ed30 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x5576dde4ed18 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x5576dde4ecf8 <col:74> '_Bool' lvalue Var 0x5576dde4c048 'z$r_buff0_thd1' '_Bool'
|   |         | |   `-UnaryOperator 0x5576dde4ed80 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x5576dde4ed68 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x5576dde4ed48 <col:93> '_Bool' lvalue Var 0x5576dde4c600 'z$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x5576dde4ee78 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x5576dde4ee10 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x5576dde4edf8 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x5576dde4edd8 <col:112> '_Bool' lvalue Var 0x5576dde4c048 'z$r_buff0_thd1' '_Bool'
|   |         |   `-UnaryOperator 0x5576dde4ee60 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x5576dde4ee48 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x5576dde4ee28 <col:131> '_Bool' lvalue Var 0x5576dde4c228 'z$r_buff1_thd1' '_Bool'
|   |         |-ImplicitCastExpr 0x5576dde4f0c0 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x5576dde4f0a8 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x5576dde4eeb8 <col:148> '_Bool' lvalue Var 0x5576dde4c048 'z$r_buff0_thd1' '_Bool'
|   |         `-ParenExpr 0x5576dde4f088 <col:165, col:226> 'int'
|   |           `-ConditionalOperator 0x5576dde4f058 <col:166, col:212> 'int'
|   |             |-BinaryOperator 0x5576dde4ef78 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x5576dde4ef30 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x5576dde4ef18 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x5576dde4eed8 <col:166> '_Bool' lvalue Var 0x5576dde4c508 'z$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x5576dde4ef60 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x5576dde4ef48 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x5576dde4eef8 <col:184> '_Bool' lvalue Var 0x5576dde4c048 'z$r_buff0_thd1' '_Bool'
|   |             |-ImplicitCastExpr 0x5576dde4f010 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x5576dde4efc8 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x5576dde4ef98 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x5576dde4f040 <col:212> 'int' <IntegralCast>
|   |               `-ImplicitCastExpr 0x5576dde4f028 <col:212> '_Bool' <LValueToRValue>
|   |                 `-DeclRefExpr 0x5576dde4eff0 <col:212> '_Bool' lvalue Var 0x5576dde4c048 'z$r_buff0_thd1' '_Bool'
|   |-BinaryOperator 0x5576dde4f798 <line:737:3, col:221> '_Bool' '='
|   | |-DeclRefExpr 0x5576dde4f1f0 <col:3> '_Bool' lvalue Var 0x5576dde4c228 'z$r_buff1_thd1' '_Bool'
|   | `-ImplicitCastExpr 0x5576dde4f780 <col:20, col:221> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x5576dde4f750 <col:20, col:221> 'int'
|   |     |-ImplicitCastExpr 0x5576dde4f708 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x5576dde4f6f0 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x5576dde4f210 <col:20> '_Bool' lvalue Var 0x5576dde4c6f0 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x5576dde4f738 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x5576dde4f720 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x5576dde4f230 <col:36> '_Bool' lvalue Var 0x5576dde4c228 'z$r_buff1_thd1' '_Bool'
|   |     `-ParenExpr 0x5576dde4f6d0 <col:53, col:221> 'int'
|   |       `-ConditionalOperator 0x5576dde4f6a0 <col:54, col:220> 'int'
|   |         |-BinaryOperator 0x5576dde4f440 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x5576dde4f360 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x5576dde4f288 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x5576dde4f270 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x5576dde4f250 <col:55> '_Bool' lvalue Var 0x5576dde4c508 'z$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x5576dde4f340 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x5576dde4f2d8 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x5576dde4f2c0 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x5576dde4f2a0 <col:74> '_Bool' lvalue Var 0x5576dde4c048 'z$r_buff0_thd1' '_Bool'
|   |         | |   `-UnaryOperator 0x5576dde4f328 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x5576dde4f310 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x5576dde4f2f0 <col:93> '_Bool' lvalue Var 0x5576dde4c600 'z$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x5576dde4f420 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x5576dde4f3b8 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x5576dde4f3a0 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x5576dde4f380 <col:112> '_Bool' lvalue Var 0x5576dde4c048 'z$r_buff0_thd1' '_Bool'
|   |         |   `-UnaryOperator 0x5576dde4f408 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x5576dde4f3f0 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x5576dde4f3d0 <col:131> '_Bool' lvalue Var 0x5576dde4c228 'z$r_buff1_thd1' '_Bool'
|   |         |-ImplicitCastExpr 0x5576dde4f688 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x5576dde4f670 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x5576dde4f460 <col:148> '_Bool' lvalue Var 0x5576dde4c228 'z$r_buff1_thd1' '_Bool'
|   |         `-ParenExpr 0x5576dde4f650 <col:165, col:220> 'int'
|   |           `-ConditionalOperator 0x5576dde4f620 <col:166, col:219> 'int'
|   |             |-BinaryOperator 0x5576dde4f520 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x5576dde4f4d8 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x5576dde4f4c0 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x5576dde4f480 <col:166> '_Bool' lvalue Var 0x5576dde4c508 'z$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x5576dde4f508 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x5576dde4f4f0 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x5576dde4f4a0 <col:184> '_Bool' lvalue Var 0x5576dde4c048 'z$r_buff0_thd1' '_Bool'
|   |             |-ImplicitCastExpr 0x5576dde4f5f0 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x5576dde4f570 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x5576dde4f540 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x5576dde4f608 <col:212, col:219> 'int' <IntegralCast>
|   |               `-CStyleCastExpr 0x5576dde4f5c8 <col:212, col:219> '_Bool' <IntegralToBoolean>
|   |                 `-IntegerLiteral 0x5576dde4f598 <col:219> 'int' 0
|   |-BinaryOperator 0x5576dde4f810 <line:738:3, col:25> 'int' '='
|   | |-DeclRefExpr 0x5576dde4f7b8 <col:3> 'int' lvalue Var 0x5576dde4b440 '__unbuffered_p0_EAX' 'int'
|   | `-ImplicitCastExpr 0x5576dde4f7f8 <col:25> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x5576dde4f7d8 <col:25> 'int' lvalue Var 0x5576dde4be40 'z' 'int'
|   |-BinaryOperator 0x5576dde4f940 <line:739:3, col:37> 'int' '='
|   | |-DeclRefExpr 0x5576dde4f830 <col:3> 'int' lvalue Var 0x5576dde4be40 'z' 'int'
|   | `-ConditionalOperator 0x5576dde4f910 <col:7, col:37> 'int'
|   |   |-ImplicitCastExpr 0x5576dde4f8c8 <col:7> 'int' <IntegralCast>
|   |   | `-ImplicitCastExpr 0x5576dde4f8b0 <col:7> '_Bool' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x5576dde4f850 <col:7> '_Bool' lvalue Var 0x5576dde4bed8 'z$flush_delayed' '_Bool'
|   |   |-ImplicitCastExpr 0x5576dde4f8e0 <col:25> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x5576dde4f870 <col:25> 'int' lvalue Var 0x5576dde4bf58 'z$mem_tmp' 'int'
|   |   `-ImplicitCastExpr 0x5576dde4f8f8 <col:37> 'int' <LValueToRValue>
|   |     `-DeclRefExpr 0x5576dde4f890 <col:37> 'int' lvalue Var 0x5576dde4be40 'z' 'int'
|   |-BinaryOperator 0x5576dde4f9d8 <line:740:3, col:28> '_Bool' '='
|   | |-DeclRefExpr 0x5576dde4f960 <col:3> '_Bool' lvalue Var 0x5576dde4bed8 'z$flush_delayed' '_Bool'
|   | `-CStyleCastExpr 0x5576dde4f9b0 <col:21, col:28> '_Bool' <IntegralToBoolean>
|   |   `-IntegerLiteral 0x5576dde4f980 <col:28> 'int' 0
|   |-CallExpr 0x5576dde4fa30 <line:741:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x5576dde4fa18 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5576dde4f9f8 <col:3> 'void ()' Function 0x5576dddf2060 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x5576dde4fa88 <line:742:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x5576dde4fa70 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5576dde4fa50 <col:3> 'void ()' Function 0x5576dddf1fa0 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x5576dde4fb00 <line:743:3, col:25> 'int' '='
|   | |-DeclRefExpr 0x5576dde4faa8 <col:3> 'int' lvalue Var 0x5576dde4b560 '__unbuffered_p0_EBX' 'int'
|   | `-ImplicitCastExpr 0x5576dde4fae8 <col:25> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x5576dde4fac8 <col:25> 'int' lvalue Var 0x5576dde4bc00 'x' 'int'
|   |-CallExpr 0x5576dde4fb78 <line:744:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x5576dde4fb60 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5576dde4fb40 <col:3> 'void ()' Function 0x5576dddf2060 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x5576dde4fbd0 <line:745:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x5576dde4fbb8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5576dde4fb98 <col:3> 'void ()' Function 0x5576dddf1fa0 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x5576dde4feb8 <line:746:3, col:103> 'int' '='
|   | |-DeclRefExpr 0x5576dde4fbf0 <col:3> 'int' lvalue Var 0x5576dde4be40 'z' 'int'
|   | `-ConditionalOperator 0x5576dde4fe88 <col:7, col:103> 'int'
|   |   |-BinaryOperator 0x5576dde4fcb0 <col:7, col:25> 'int' '&&'
|   |   | |-ImplicitCastExpr 0x5576dde4fc68 <col:7> 'int' <IntegralCast>
|   |   | | `-ImplicitCastExpr 0x5576dde4fc50 <col:7> '_Bool' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x5576dde4fc10 <col:7> '_Bool' lvalue Var 0x5576dde4c508 'z$w_buff0_used' '_Bool'
|   |   | `-ImplicitCastExpr 0x5576dde4fc98 <col:25> 'int' <IntegralCast>
|   |   |   `-ImplicitCastExpr 0x5576dde4fc80 <col:25> '_Bool' <LValueToRValue>
|   |   |     `-DeclRefExpr 0x5576dde4fc30 <col:25> '_Bool' lvalue Var 0x5576dde4c048 'z$r_buff0_thd1' '_Bool'
|   |   |-ImplicitCastExpr 0x5576dde4fe70 <col:42> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x5576dde4fcd0 <col:42> 'int' lvalue Var 0x5576dde4c490 'z$w_buff0' 'int'
|   |   `-ParenExpr 0x5576dde4fe50 <col:54, col:103> 'int'
|   |     `-ConditionalOperator 0x5576dde4fe20 <col:55, col:102> 'int'
|   |       |-BinaryOperator 0x5576dde4fd90 <col:55, col:73> 'int' '&&'
|   |       | |-ImplicitCastExpr 0x5576dde4fd48 <col:55> 'int' <IntegralCast>
|   |       | | `-ImplicitCastExpr 0x5576dde4fd30 <col:55> '_Bool' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x5576dde4fcf0 <col:55> '_Bool' lvalue Var 0x5576dde4c600 'z$w_buff1_used' '_Bool'
|   |       | `-ImplicitCastExpr 0x5576dde4fd78 <col:73> 'int' <IntegralCast>
|   |       |   `-ImplicitCastExpr 0x5576dde4fd60 <col:73> '_Bool' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x5576dde4fd10 <col:73> '_Bool' lvalue Var 0x5576dde4c228 'z$r_buff1_thd1' '_Bool'
|   |       |-ImplicitCastExpr 0x5576dde4fdf0 <col:90> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x5576dde4fdb0 <col:90> 'int' lvalue Var 0x5576dde4c588 'z$w_buff1' 'int'
|   |       `-ImplicitCastExpr 0x5576dde4fe08 <col:102> 'int' <LValueToRValue>
|   |         `-DeclRefExpr 0x5576dde4fdd0 <col:102> 'int' lvalue Var 0x5576dde4be40 'z' 'int'
|   |-BinaryOperator 0x5576dde500c0 <line:747:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x5576dde4fed8 <col:3> '_Bool' lvalue Var 0x5576dde4c508 'z$w_buff0_used' '_Bool'
|   | `-ImplicitCastExpr 0x5576dde500a8 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x5576dde50078 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x5576dde4ff98 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x5576dde4ff50 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x5576dde4ff38 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x5576dde4fef8 <col:20> '_Bool' lvalue Var 0x5576dde4c508 'z$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x5576dde4ff80 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x5576dde4ff68 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x5576dde4ff18 <col:38> '_Bool' lvalue Var 0x5576dde4c048 'z$r_buff0_thd1' '_Bool'
|   |     |-ImplicitCastExpr 0x5576dde50030 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x5576dde4ffe8 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x5576dde4ffb8 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x5576dde50060 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x5576dde50048 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x5576dde50010 <col:66> '_Bool' lvalue Var 0x5576dde4c508 'z$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x5576dde503a8 <line:748:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x5576dde500e0 <col:3> '_Bool' lvalue Var 0x5576dde4c600 'z$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x5576dde50390 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x5576dde50360 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x5576dde50280 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x5576dde501a0 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x5576dde50158 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x5576dde50140 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x5576dde50100 <col:20> '_Bool' lvalue Var 0x5576dde4c508 'z$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x5576dde50188 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x5576dde50170 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x5576dde50120 <col:38> '_Bool' lvalue Var 0x5576dde4c048 'z$r_buff0_thd1' '_Bool'
|   |     | `-BinaryOperator 0x5576dde50260 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x5576dde50218 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x5576dde50200 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x5576dde501c0 <col:56> '_Bool' lvalue Var 0x5576dde4c600 'z$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x5576dde50248 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x5576dde50230 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x5576dde501e0 <col:74> '_Bool' lvalue Var 0x5576dde4c228 'z$r_buff1_thd1' '_Bool'
|   |     |-ImplicitCastExpr 0x5576dde50318 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x5576dde502d0 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x5576dde502a0 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x5576dde50348 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x5576dde50330 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x5576dde502f8 <col:102> '_Bool' lvalue Var 0x5576dde4c600 'z$w_buff1_used' '_Bool'
|   |-BinaryOperator 0x5576dde505b0 <line:749:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x5576dde503c8 <col:3> '_Bool' lvalue Var 0x5576dde4c048 'z$r_buff0_thd1' '_Bool'
|   | `-ImplicitCastExpr 0x5576dde50598 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x5576dde50568 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x5576dde50488 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x5576dde50440 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x5576dde50428 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x5576dde503e8 <col:20> '_Bool' lvalue Var 0x5576dde4c508 'z$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x5576dde50470 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x5576dde50458 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x5576dde50408 <col:38> '_Bool' lvalue Var 0x5576dde4c048 'z$r_buff0_thd1' '_Bool'
|   |     |-ImplicitCastExpr 0x5576dde50520 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x5576dde504d8 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x5576dde504a8 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x5576dde50550 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x5576dde50538 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x5576dde50500 <col:66> '_Bool' lvalue Var 0x5576dde4c048 'z$r_buff0_thd1' '_Bool'
|   |-BinaryOperator 0x5576dde50898 <line:750:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x5576dde505d0 <col:3> '_Bool' lvalue Var 0x5576dde4c228 'z$r_buff1_thd1' '_Bool'
|   | `-ImplicitCastExpr 0x5576dde50880 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x5576dde50850 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x5576dde50770 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x5576dde50690 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x5576dde50648 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x5576dde50630 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x5576dde505f0 <col:20> '_Bool' lvalue Var 0x5576dde4c508 'z$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x5576dde50678 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x5576dde50660 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x5576dde50610 <col:38> '_Bool' lvalue Var 0x5576dde4c048 'z$r_buff0_thd1' '_Bool'
|   |     | `-BinaryOperator 0x5576dde50750 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x5576dde50708 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x5576dde506f0 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x5576dde506b0 <col:56> '_Bool' lvalue Var 0x5576dde4c600 'z$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x5576dde50738 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x5576dde50720 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x5576dde506d0 <col:74> '_Bool' lvalue Var 0x5576dde4c228 'z$r_buff1_thd1' '_Bool'
|   |     |-ImplicitCastExpr 0x5576dde50808 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x5576dde507c0 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x5576dde50790 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x5576dde50838 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x5576dde50820 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x5576dde507e8 <col:102> '_Bool' lvalue Var 0x5576dde4c228 'z$r_buff1_thd1' '_Bool'
|   |-CallExpr 0x5576dde508f0 <line:751:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x5576dde508d8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5576dde508b8 <col:3> 'void ()' Function 0x5576dddf2060 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x5576dde50948 <line:752:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x5576dde50930 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5576dde50910 <col:3> 'void ()' Function 0x5576dddf1fa0 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x5576dde50a00 <line:753:3, col:41> 'int' '='
|   | |-DeclRefExpr 0x5576dde50968 <col:3> 'int' lvalue Var 0x5576dde4b320 '__unbuffered_cnt' 'int'
|   | `-BinaryOperator 0x5576dde509e0 <col:22, col:41> 'int' '+'
|   |   |-ImplicitCastExpr 0x5576dde509c8 <col:22> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x5576dde50988 <col:22> 'int' lvalue Var 0x5576dde4b320 '__unbuffered_cnt' 'int'
|   |   `-IntegerLiteral 0x5576dde509a8 <col:41> 'int' 1
|   |-CallExpr 0x5576dde50a58 <line:754:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x5576dde50a40 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5576dde50a20 <col:3> 'void ()' Function 0x5576dddf2060 '__VERIFIER_atomic_end' 'void ()'
|   `-ReturnStmt 0x5576dde50b08 <line:755:3, col:36>
|     `-CallExpr 0x5576dde50ae8 <col:10, col:36> 'void *'
|       `-ImplicitCastExpr 0x5576dde50ad0 <col:10> 'void *(*)(void)' <FunctionToPointerDecay>
|         `-DeclRefExpr 0x5576dde50a78 <col:10> 'void *(void)' Function 0x5576dddf1ab8 '__VERIFIER_nondet_pointer' 'void *(void)'
|-FunctionDecl 0x5576dde50d60 prev 0x5576dde4ae48 <line:757:1, line:779:1> line:757:8 used P1 'void *(void *)'
| |-ParmVarDecl 0x5576dde50cc8 <col:11, col:17> col:17 arg 'void *'
| `-CompoundStmt 0x5576dde520d8 <line:758:1, line:779:1>
|   |-CallExpr 0x5576dde50e40 <line:759:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x5576dde50e28 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5576dde50e08 <col:3> 'void ()' Function 0x5576dddf1fa0 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x5576dde50ea0 <line:760:3, col:7> 'int' '='
|   | |-DeclRefExpr 0x5576dde50e60 <col:3> 'int' lvalue Var 0x5576dde4bc00 'x' 'int'
|   | `-IntegerLiteral 0x5576dde50e80 <col:7> 'int' 1
|   |-CallExpr 0x5576dde50ef8 <line:761:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x5576dde50ee0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5576dde50ec0 <col:3> 'void ()' Function 0x5576dddf2060 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x5576dde50f50 <line:762:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x5576dde50f38 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5576dde50f18 <col:3> 'void ()' Function 0x5576dddf1fa0 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x5576dde50fc8 <line:763:3, col:25> 'int' '='
|   | |-DeclRefExpr 0x5576dde50f70 <col:3> 'int' lvalue Var 0x5576dde4b680 '__unbuffered_p1_EAX' 'int'
|   | `-ImplicitCastExpr 0x5576dde50fb0 <col:25> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x5576dde50f90 <col:25> 'int' lvalue Var 0x5576dde4bc00 'x' 'int'
|   |-CallExpr 0x5576dde51020 <line:764:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x5576dde51008 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5576dde50fe8 <col:3> 'void ()' Function 0x5576dddf2060 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x5576dde51078 <line:765:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x5576dde51060 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5576dde51040 <col:3> 'void ()' Function 0x5576dddf1fa0 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x5576dde510f0 <line:766:3, col:25> 'int' '='
|   | |-DeclRefExpr 0x5576dde51098 <col:3> 'int' lvalue Var 0x5576dde4b7a0 '__unbuffered_p1_EBX' 'int'
|   | `-ImplicitCastExpr 0x5576dde510d8 <col:25> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x5576dde510b8 <col:25> 'int' lvalue Var 0x5576dde4bd20 'y' 'int'
|   |-CallExpr 0x5576dde51148 <line:767:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x5576dde51130 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5576dde51110 <col:3> 'void ()' Function 0x5576dddf2060 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x5576dde511a0 <line:768:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x5576dde51188 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5576dde51168 <col:3> 'void ()' Function 0x5576dddf1fa0 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x5576dde51488 <line:769:3, col:103> 'int' '='
|   | |-DeclRefExpr 0x5576dde511c0 <col:3> 'int' lvalue Var 0x5576dde4be40 'z' 'int'
|   | `-ConditionalOperator 0x5576dde51458 <col:7, col:103> 'int'
|   |   |-BinaryOperator 0x5576dde51280 <col:7, col:25> 'int' '&&'
|   |   | |-ImplicitCastExpr 0x5576dde51238 <col:7> 'int' <IntegralCast>
|   |   | | `-ImplicitCastExpr 0x5576dde51220 <col:7> '_Bool' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x5576dde511e0 <col:7> '_Bool' lvalue Var 0x5576dde4c508 'z$w_buff0_used' '_Bool'
|   |   | `-ImplicitCastExpr 0x5576dde51268 <col:25> 'int' <IntegralCast>
|   |   |   `-ImplicitCastExpr 0x5576dde51250 <col:25> '_Bool' <LValueToRValue>
|   |   |     `-DeclRefExpr 0x5576dde51200 <col:25> '_Bool' lvalue Var 0x5576dde4c0c0 'z$r_buff0_thd2' '_Bool'
|   |   |-ImplicitCastExpr 0x5576dde51440 <col:42> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x5576dde512a0 <col:42> 'int' lvalue Var 0x5576dde4c490 'z$w_buff0' 'int'
|   |   `-ParenExpr 0x5576dde51420 <col:54, col:103> 'int'
|   |     `-ConditionalOperator 0x5576dde513f0 <col:55, col:102> 'int'
|   |       |-BinaryOperator 0x5576dde51360 <col:55, col:73> 'int' '&&'
|   |       | |-ImplicitCastExpr 0x5576dde51318 <col:55> 'int' <IntegralCast>
|   |       | | `-ImplicitCastExpr 0x5576dde51300 <col:55> '_Bool' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x5576dde512c0 <col:55> '_Bool' lvalue Var 0x5576dde4c600 'z$w_buff1_used' '_Bool'
|   |       | `-ImplicitCastExpr 0x5576dde51348 <col:73> 'int' <IntegralCast>
|   |       |   `-ImplicitCastExpr 0x5576dde51330 <col:73> '_Bool' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x5576dde512e0 <col:73> '_Bool' lvalue Var 0x5576dde4c2a0 'z$r_buff1_thd2' '_Bool'
|   |       |-ImplicitCastExpr 0x5576dde513c0 <col:90> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x5576dde51380 <col:90> 'int' lvalue Var 0x5576dde4c588 'z$w_buff1' 'int'
|   |       `-ImplicitCastExpr 0x5576dde513d8 <col:102> 'int' <LValueToRValue>
|   |         `-DeclRefExpr 0x5576dde513a0 <col:102> 'int' lvalue Var 0x5576dde4be40 'z' 'int'
|   |-BinaryOperator 0x5576dde51690 <line:770:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x5576dde514a8 <col:3> '_Bool' lvalue Var 0x5576dde4c508 'z$w_buff0_used' '_Bool'
|   | `-ImplicitCastExpr 0x5576dde51678 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x5576dde51648 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x5576dde51568 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x5576dde51520 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x5576dde51508 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x5576dde514c8 <col:20> '_Bool' lvalue Var 0x5576dde4c508 'z$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x5576dde51550 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x5576dde51538 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x5576dde514e8 <col:38> '_Bool' lvalue Var 0x5576dde4c0c0 'z$r_buff0_thd2' '_Bool'
|   |     |-ImplicitCastExpr 0x5576dde51600 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x5576dde515b8 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x5576dde51588 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x5576dde51630 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x5576dde51618 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x5576dde515e0 <col:66> '_Bool' lvalue Var 0x5576dde4c508 'z$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x5576dde51978 <line:771:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x5576dde516b0 <col:3> '_Bool' lvalue Var 0x5576dde4c600 'z$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x5576dde51960 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x5576dde51930 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x5576dde51850 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x5576dde51770 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x5576dde51728 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x5576dde51710 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x5576dde516d0 <col:20> '_Bool' lvalue Var 0x5576dde4c508 'z$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x5576dde51758 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x5576dde51740 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x5576dde516f0 <col:38> '_Bool' lvalue Var 0x5576dde4c0c0 'z$r_buff0_thd2' '_Bool'
|   |     | `-BinaryOperator 0x5576dde51830 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x5576dde517e8 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x5576dde517d0 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x5576dde51790 <col:56> '_Bool' lvalue Var 0x5576dde4c600 'z$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x5576dde51818 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x5576dde51800 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x5576dde517b0 <col:74> '_Bool' lvalue Var 0x5576dde4c2a0 'z$r_buff1_thd2' '_Bool'
|   |     |-ImplicitCastExpr 0x5576dde518e8 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x5576dde518a0 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x5576dde51870 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x5576dde51918 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x5576dde51900 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x5576dde518c8 <col:102> '_Bool' lvalue Var 0x5576dde4c600 'z$w_buff1_used' '_Bool'
|   |-BinaryOperator 0x5576dde51ba8 <line:772:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x5576dde51998 <col:3> '_Bool' lvalue Var 0x5576dde4c0c0 'z$r_buff0_thd2' '_Bool'
|   | `-ImplicitCastExpr 0x5576dde51b90 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x5576dde51b60 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x5576dde51a58 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x5576dde51a10 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x5576dde519f8 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x5576dde519b8 <col:20> '_Bool' lvalue Var 0x5576dde4c508 'z$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x5576dde51a40 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x5576dde51a28 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x5576dde519d8 <col:38> '_Bool' lvalue Var 0x5576dde4c0c0 'z$r_buff0_thd2' '_Bool'
|   |     |-ImplicitCastExpr 0x5576dde51af0 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x5576dde51aa8 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x5576dde51a78 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x5576dde51b20 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x5576dde51b08 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x5576dde51ad0 <col:66> '_Bool' lvalue Var 0x5576dde4c0c0 'z$r_buff0_thd2' '_Bool'
|   |-BinaryOperator 0x5576dde51e90 <line:773:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x5576dde51bc8 <col:3> '_Bool' lvalue Var 0x5576dde4c2a0 'z$r_buff1_thd2' '_Bool'
|   | `-ImplicitCastExpr 0x5576dde51e78 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x5576dde51e48 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x5576dde51d68 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x5576dde51c88 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x5576dde51c40 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x5576dde51c28 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x5576dde51be8 <col:20> '_Bool' lvalue Var 0x5576dde4c508 'z$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x5576dde51c70 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x5576dde51c58 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x5576dde51c08 <col:38> '_Bool' lvalue Var 0x5576dde4c0c0 'z$r_buff0_thd2' '_Bool'
|   |     | `-BinaryOperator 0x5576dde51d48 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x5576dde51d00 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x5576dde51ce8 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x5576dde51ca8 <col:56> '_Bool' lvalue Var 0x5576dde4c600 'z$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x5576dde51d30 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x5576dde51d18 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x5576dde51cc8 <col:74> '_Bool' lvalue Var 0x5576dde4c2a0 'z$r_buff1_thd2' '_Bool'
|   |     |-ImplicitCastExpr 0x5576dde51e00 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x5576dde51db8 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x5576dde51d88 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x5576dde51e30 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x5576dde51e18 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x5576dde51de0 <col:102> '_Bool' lvalue Var 0x5576dde4c2a0 'z$r_buff1_thd2' '_Bool'
|   |-CallExpr 0x5576dde51ee8 <line:774:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x5576dde51ed0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5576dde51eb0 <col:3> 'void ()' Function 0x5576dddf2060 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x5576dde51f40 <line:775:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x5576dde51f28 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5576dde51f08 <col:3> 'void ()' Function 0x5576dddf1fa0 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x5576dde51ff8 <line:776:3, col:41> 'int' '='
|   | |-DeclRefExpr 0x5576dde51f60 <col:3> 'int' lvalue Var 0x5576dde4b320 '__unbuffered_cnt' 'int'
|   | `-BinaryOperator 0x5576dde51fd8 <col:22, col:41> 'int' '+'
|   |   |-ImplicitCastExpr 0x5576dde51fc0 <col:22> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x5576dde51f80 <col:22> 'int' lvalue Var 0x5576dde4b320 '__unbuffered_cnt' 'int'
|   |   `-IntegerLiteral 0x5576dde51fa0 <col:41> 'int' 1
|   |-CallExpr 0x5576dde52050 <line:777:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x5576dde52038 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5576dde52018 <col:3> 'void ()' Function 0x5576dddf2060 '__VERIFIER_atomic_end' 'void ()'
|   `-ReturnStmt 0x5576dde520c8 <line:778:3, col:36>
|     `-CallExpr 0x5576dde520a8 <col:10, col:36> 'void *'
|       `-ImplicitCastExpr 0x5576dde52090 <col:10> 'void *(*)(void)' <FunctionToPointerDecay>
|         `-DeclRefExpr 0x5576dde52070 <col:10> 'void *(void)' Function 0x5576dddf1ab8 '__VERIFIER_nondet_pointer' 'void *(void)'
|-FunctionDecl 0x5576dde52238 prev 0x5576dde4afa0 <line:780:1, line:815:1> line:780:8 used P2 'void *(void *)'
| |-ParmVarDecl 0x5576dde521a0 <col:11, col:17> col:17 arg 'void *'
| `-CompoundStmt 0x5576dde55f30 <line:781:1, line:815:1>
|   |-CallExpr 0x5576dde52318 <line:782:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x5576dde52300 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5576dde522e0 <col:3> 'void ()' Function 0x5576dddf1fa0 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x5576dde52378 <line:783:3, col:7> 'int' '='
|   | |-DeclRefExpr 0x5576dde52338 <col:3> 'int' lvalue Var 0x5576dde4bd20 'y' 'int'
|   | `-IntegerLiteral 0x5576dde52358 <col:7> 'int' 1
|   |-CallExpr 0x5576dde523d0 <line:784:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x5576dde523b8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5576dde52398 <col:3> 'void ()' Function 0x5576dddf2060 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x5576dde52428 <line:785:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x5576dde52410 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5576dde523f0 <col:3> 'void ()' Function 0x5576dddf1fa0 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x5576dde524a0 <line:786:3, col:25> 'int' '='
|   | |-DeclRefExpr 0x5576dde52448 <col:3> 'int' lvalue Var 0x5576dde4b8c0 '__unbuffered_p2_EAX' 'int'
|   | `-ImplicitCastExpr 0x5576dde52488 <col:25> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x5576dde52468 <col:25> 'int' lvalue Var 0x5576dde4bd20 'y' 'int'
|   |-CallExpr 0x5576dde524f8 <line:787:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x5576dde524e0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5576dde524c0 <col:3> 'void ()' Function 0x5576dddf2060 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x5576dde52550 <line:788:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x5576dde52538 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5576dde52518 <col:3> 'void ()' Function 0x5576dddf1fa0 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x5576dde525e8 <line:789:3, col:42> '_Bool' '='
|   | |-DeclRefExpr 0x5576dde52570 <col:3> '_Bool' lvalue Var 0x5576dde4c678 'weak$$choice0' '_Bool'
|   | `-CallExpr 0x5576dde525c8 <col:19, col:42> '_Bool'
|   |   `-ImplicitCastExpr 0x5576dde525b0 <col:19> '_Bool (*)(void)' <FunctionToPointerDecay>
|   |     `-DeclRefExpr 0x5576dde52590 <col:19> '_Bool (void)' Function 0x5576dddf1770 '__VERIFIER_nondet_bool' '_Bool (void)'
|   |-BinaryOperator 0x5576dde52680 <line:790:3, col:42> '_Bool' '='
|   | |-DeclRefExpr 0x5576dde52608 <col:3> '_Bool' lvalue Var 0x5576dde4c6f0 'weak$$choice2' '_Bool'
|   | `-CallExpr 0x5576dde52660 <col:19, col:42> '_Bool'
|   |   `-ImplicitCastExpr 0x5576dde52648 <col:19> '_Bool (*)(void)' <FunctionToPointerDecay>
|   |     `-DeclRefExpr 0x5576dde52628 <col:19> '_Bool (void)' Function 0x5576dddf1770 '__VERIFIER_nondet_bool' '_Bool (void)'
|   |-BinaryOperator 0x5576dde526f8 <line:791:3, col:21> '_Bool' '='
|   | |-DeclRefExpr 0x5576dde526a0 <col:3> '_Bool' lvalue Var 0x5576dde4bed8 'z$flush_delayed' '_Bool'
|   | `-ImplicitCastExpr 0x5576dde526e0 <col:21> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x5576dde526c0 <col:21> '_Bool' lvalue Var 0x5576dde4c6f0 'weak$$choice2' '_Bool'
|   |-BinaryOperator 0x5576dde52770 <line:792:3, col:15> 'int' '='
|   | |-DeclRefExpr 0x5576dde52718 <col:3> 'int' lvalue Var 0x5576dde4bf58 'z$mem_tmp' 'int'
|   | `-ImplicitCastExpr 0x5576dde52758 <col:15> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x5576dde52738 <col:15> 'int' lvalue Var 0x5576dde4be40 'z' 'int'
|   |-BinaryOperator 0x5576dde52bb8 <line:793:3, col:162> 'int' '='
|   | |-DeclRefExpr 0x5576dde52790 <col:3> 'int' lvalue Var 0x5576dde4be40 'z' 'int'
|   | `-ConditionalOperator 0x5576dde52b88 <col:7, col:162> 'int'
|   |   |-BinaryOperator 0x5576dde529a0 <col:7, col:84> 'int' '||'
|   |   | |-BinaryOperator 0x5576dde528c0 <col:7, col:46> 'int' '||'
|   |   | | |-UnaryOperator 0x5576dde527e8 <col:7, col:8> 'int' prefix '!' cannot overflow
|   |   | | | `-ImplicitCastExpr 0x5576dde527d0 <col:8> '_Bool' <LValueToRValue>
|   |   | | |   `-DeclRefExpr 0x5576dde527b0 <col:8> '_Bool' lvalue Var 0x5576dde4c508 'z$w_buff0_used' '_Bool'
|   |   | | `-BinaryOperator 0x5576dde528a0 <col:26, col:46> 'int' '&&'
|   |   | |   |-UnaryOperator 0x5576dde52838 <col:26, col:27> 'int' prefix '!' cannot overflow
|   |   | |   | `-ImplicitCastExpr 0x5576dde52820 <col:27> '_Bool' <LValueToRValue>
|   |   | |   |   `-DeclRefExpr 0x5576dde52800 <col:27> '_Bool' lvalue Var 0x5576dde4c138 'z$r_buff0_thd3' '_Bool'
|   |   | |   `-UnaryOperator 0x5576dde52888 <col:45, col:46> 'int' prefix '!' cannot overflow
|   |   | |     `-ImplicitCastExpr 0x5576dde52870 <col:46> '_Bool' <LValueToRValue>
|   |   | |       `-DeclRefExpr 0x5576dde52850 <col:46> '_Bool' lvalue Var 0x5576dde4c600 'z$w_buff1_used' '_Bool'
|   |   | `-BinaryOperator 0x5576dde52980 <col:64, col:84> 'int' '&&'
|   |   |   |-UnaryOperator 0x5576dde52918 <col:64, col:65> 'int' prefix '!' cannot overflow
|   |   |   | `-ImplicitCastExpr 0x5576dde52900 <col:65> '_Bool' <LValueToRValue>
|   |   |   |   `-DeclRefExpr 0x5576dde528e0 <col:65> '_Bool' lvalue Var 0x5576dde4c138 'z$r_buff0_thd3' '_Bool'
|   |   |   `-UnaryOperator 0x5576dde52968 <col:83, col:84> 'int' prefix '!' cannot overflow
|   |   |     `-ImplicitCastExpr 0x5576dde52950 <col:84> '_Bool' <LValueToRValue>
|   |   |       `-DeclRefExpr 0x5576dde52930 <col:84> '_Bool' lvalue Var 0x5576dde4c318 'z$r_buff1_thd3' '_Bool'
|   |   |-ImplicitCastExpr 0x5576dde52b70 <col:101> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x5576dde529c0 <col:101> 'int' lvalue Var 0x5576dde4be40 'z' 'int'
|   |   `-ParenExpr 0x5576dde52b40 <col:105, col:162> 'int'
|   |     `-ConditionalOperator 0x5576dde52b10 <col:106, col:153> 'int'
|   |       |-BinaryOperator 0x5576dde52a80 <col:106, col:124> 'int' '&&'
|   |       | |-ImplicitCastExpr 0x5576dde52a38 <col:106> 'int' <IntegralCast>
|   |       | | `-ImplicitCastExpr 0x5576dde52a20 <col:106> '_Bool' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x5576dde529e0 <col:106> '_Bool' lvalue Var 0x5576dde4c508 'z$w_buff0_used' '_Bool'
|   |       | `-ImplicitCastExpr 0x5576dde52a68 <col:124> 'int' <IntegralCast>
|   |       |   `-ImplicitCastExpr 0x5576dde52a50 <col:124> '_Bool' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x5576dde52a00 <col:124> '_Bool' lvalue Var 0x5576dde4c138 'z$r_buff0_thd3' '_Bool'
|   |       |-ImplicitCastExpr 0x5576dde52ae0 <col:141> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x5576dde52aa0 <col:141> 'int' lvalue Var 0x5576dde4c490 'z$w_buff0' 'int'
|   |       `-ImplicitCastExpr 0x5576dde52af8 <col:153> 'int' <LValueToRValue>
|   |         `-DeclRefExpr 0x5576dde52ac0 <col:153> 'int' lvalue Var 0x5576dde4c588 'z$w_buff1' 'int'
|   |-BinaryOperator 0x5576dde530c8 <line:794:3, col:208> 'int' '='
|   | |-DeclRefExpr 0x5576dde52bd8 <col:3> 'int' lvalue Var 0x5576dde4c490 'z$w_buff0' 'int'
|   | `-ConditionalOperator 0x5576dde53098 <col:15, col:208> 'int'
|   |   |-ImplicitCastExpr 0x5576dde53068 <col:15> 'int' <IntegralCast>
|   |   | `-ImplicitCastExpr 0x5576dde53050 <col:15> '_Bool' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x5576dde52bf8 <col:15> '_Bool' lvalue Var 0x5576dde4c6f0 'weak$$choice2' '_Bool'
|   |   |-ImplicitCastExpr 0x5576dde53080 <col:31> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x5576dde52c18 <col:31> 'int' lvalue Var 0x5576dde4c490 'z$w_buff0' 'int'
|   |   `-ParenExpr 0x5576dde53030 <col:43, col:208> 'int'
|   |     `-ConditionalOperator 0x5576dde53000 <col:44, col:207> 'int'
|   |       |-BinaryOperator 0x5576dde52e28 <col:44, col:121> 'int' '||'
|   |       | |-BinaryOperator 0x5576dde52d48 <col:44, col:83> 'int' '||'
|   |       | | |-UnaryOperator 0x5576dde52c70 <col:44, col:45> 'int' prefix '!' cannot overflow
|   |       | | | `-ImplicitCastExpr 0x5576dde52c58 <col:45> '_Bool' <LValueToRValue>
|   |       | | |   `-DeclRefExpr 0x5576dde52c38 <col:45> '_Bool' lvalue Var 0x5576dde4c508 'z$w_buff0_used' '_Bool'
|   |       | | `-BinaryOperator 0x5576dde52d28 <col:63, col:83> 'int' '&&'
|   |       | |   |-UnaryOperator 0x5576dde52cc0 <col:63, col:64> 'int' prefix '!' cannot overflow
|   |       | |   | `-ImplicitCastExpr 0x5576dde52ca8 <col:64> '_Bool' <LValueToRValue>
|   |       | |   |   `-DeclRefExpr 0x5576dde52c88 <col:64> '_Bool' lvalue Var 0x5576dde4c138 'z$r_buff0_thd3' '_Bool'
|   |       | |   `-UnaryOperator 0x5576dde52d10 <col:82, col:83> 'int' prefix '!' cannot overflow
|   |       | |     `-ImplicitCastExpr 0x5576dde52cf8 <col:83> '_Bool' <LValueToRValue>
|   |       | |       `-DeclRefExpr 0x5576dde52cd8 <col:83> '_Bool' lvalue Var 0x5576dde4c600 'z$w_buff1_used' '_Bool'
|   |       | `-BinaryOperator 0x5576dde52e08 <col:101, col:121> 'int' '&&'
|   |       |   |-UnaryOperator 0x5576dde52da0 <col:101, col:102> 'int' prefix '!' cannot overflow
|   |       |   | `-ImplicitCastExpr 0x5576dde52d88 <col:102> '_Bool' <LValueToRValue>
|   |       |   |   `-DeclRefExpr 0x5576dde52d68 <col:102> '_Bool' lvalue Var 0x5576dde4c138 'z$r_buff0_thd3' '_Bool'
|   |       |   `-UnaryOperator 0x5576dde52df0 <col:120, col:121> 'int' prefix '!' cannot overflow
|   |       |     `-ImplicitCastExpr 0x5576dde52dd8 <col:121> '_Bool' <LValueToRValue>
|   |       |       `-DeclRefExpr 0x5576dde52db8 <col:121> '_Bool' lvalue Var 0x5576dde4c318 'z$r_buff1_thd3' '_Bool'
|   |       |-ImplicitCastExpr 0x5576dde52fe8 <col:138> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x5576dde52e48 <col:138> 'int' lvalue Var 0x5576dde4c490 'z$w_buff0' 'int'
|   |       `-ParenExpr 0x5576dde52fc8 <col:150, col:207> 'int'
|   |         `-ConditionalOperator 0x5576dde52f98 <col:151, col:198> 'int'
|   |           |-BinaryOperator 0x5576dde52f08 <col:151, col:169> 'int' '&&'
|   |           | |-ImplicitCastExpr 0x5576dde52ec0 <col:151> 'int' <IntegralCast>
|   |           | | `-ImplicitCastExpr 0x5576dde52ea8 <col:151> '_Bool' <LValueToRValue>
|   |           | |   `-DeclRefExpr 0x5576dde52e68 <col:151> '_Bool' lvalue Var 0x5576dde4c508 'z$w_buff0_used' '_Bool'
|   |           | `-ImplicitCastExpr 0x5576dde52ef0 <col:169> 'int' <IntegralCast>
|   |           |   `-ImplicitCastExpr 0x5576dde52ed8 <col:169> '_Bool' <LValueToRValue>
|   |           |     `-DeclRefExpr 0x5576dde52e88 <col:169> '_Bool' lvalue Var 0x5576dde4c138 'z$r_buff0_thd3' '_Bool'
|   |           |-ImplicitCastExpr 0x5576dde52f68 <col:186> 'int' <LValueToRValue>
|   |           | `-DeclRefExpr 0x5576dde52f28 <col:186> 'int' lvalue Var 0x5576dde4c490 'z$w_buff0' 'int'
|   |           `-ImplicitCastExpr 0x5576dde52f80 <col:198> 'int' <LValueToRValue>
|   |             `-DeclRefExpr 0x5576dde52f48 <col:198> 'int' lvalue Var 0x5576dde4c490 'z$w_buff0' 'int'
|   |-BinaryOperator 0x5576dde535d8 <line:795:3, col:208> 'int' '='
|   | |-DeclRefExpr 0x5576dde530e8 <col:3> 'int' lvalue Var 0x5576dde4c588 'z$w_buff1' 'int'
|   | `-ConditionalOperator 0x5576dde535a8 <col:15, col:208> 'int'
|   |   |-ImplicitCastExpr 0x5576dde53578 <col:15> 'int' <IntegralCast>
|   |   | `-ImplicitCastExpr 0x5576dde53560 <col:15> '_Bool' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x5576dde53108 <col:15> '_Bool' lvalue Var 0x5576dde4c6f0 'weak$$choice2' '_Bool'
|   |   |-ImplicitCastExpr 0x5576dde53590 <col:31> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x5576dde53128 <col:31> 'int' lvalue Var 0x5576dde4c588 'z$w_buff1' 'int'
|   |   `-ParenExpr 0x5576dde53540 <col:43, col:208> 'int'
|   |     `-ConditionalOperator 0x5576dde53510 <col:44, col:207> 'int'
|   |       |-BinaryOperator 0x5576dde53338 <col:44, col:121> 'int' '||'
|   |       | |-BinaryOperator 0x5576dde53258 <col:44, col:83> 'int' '||'
|   |       | | |-UnaryOperator 0x5576dde53180 <col:44, col:45> 'int' prefix '!' cannot overflow
|   |       | | | `-ImplicitCastExpr 0x5576dde53168 <col:45> '_Bool' <LValueToRValue>
|   |       | | |   `-DeclRefExpr 0x5576dde53148 <col:45> '_Bool' lvalue Var 0x5576dde4c508 'z$w_buff0_used' '_Bool'
|   |       | | `-BinaryOperator 0x5576dde53238 <col:63, col:83> 'int' '&&'
|   |       | |   |-UnaryOperator 0x5576dde531d0 <col:63, col:64> 'int' prefix '!' cannot overflow
|   |       | |   | `-ImplicitCastExpr 0x5576dde531b8 <col:64> '_Bool' <LValueToRValue>
|   |       | |   |   `-DeclRefExpr 0x5576dde53198 <col:64> '_Bool' lvalue Var 0x5576dde4c138 'z$r_buff0_thd3' '_Bool'
|   |       | |   `-UnaryOperator 0x5576dde53220 <col:82, col:83> 'int' prefix '!' cannot overflow
|   |       | |     `-ImplicitCastExpr 0x5576dde53208 <col:83> '_Bool' <LValueToRValue>
|   |       | |       `-DeclRefExpr 0x5576dde531e8 <col:83> '_Bool' lvalue Var 0x5576dde4c600 'z$w_buff1_used' '_Bool'
|   |       | `-BinaryOperator 0x5576dde53318 <col:101, col:121> 'int' '&&'
|   |       |   |-UnaryOperator 0x5576dde532b0 <col:101, col:102> 'int' prefix '!' cannot overflow
|   |       |   | `-ImplicitCastExpr 0x5576dde53298 <col:102> '_Bool' <LValueToRValue>
|   |       |   |   `-DeclRefExpr 0x5576dde53278 <col:102> '_Bool' lvalue Var 0x5576dde4c138 'z$r_buff0_thd3' '_Bool'
|   |       |   `-UnaryOperator 0x5576dde53300 <col:120, col:121> 'int' prefix '!' cannot overflow
|   |       |     `-ImplicitCastExpr 0x5576dde532e8 <col:121> '_Bool' <LValueToRValue>
|   |       |       `-DeclRefExpr 0x5576dde532c8 <col:121> '_Bool' lvalue Var 0x5576dde4c318 'z$r_buff1_thd3' '_Bool'
|   |       |-ImplicitCastExpr 0x5576dde534f8 <col:138> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x5576dde53358 <col:138> 'int' lvalue Var 0x5576dde4c588 'z$w_buff1' 'int'
|   |       `-ParenExpr 0x5576dde534d8 <col:150, col:207> 'int'
|   |         `-ConditionalOperator 0x5576dde534a8 <col:151, col:198> 'int'
|   |           |-BinaryOperator 0x5576dde53418 <col:151, col:169> 'int' '&&'
|   |           | |-ImplicitCastExpr 0x5576dde533d0 <col:151> 'int' <IntegralCast>
|   |           | | `-ImplicitCastExpr 0x5576dde533b8 <col:151> '_Bool' <LValueToRValue>
|   |           | |   `-DeclRefExpr 0x5576dde53378 <col:151> '_Bool' lvalue Var 0x5576dde4c508 'z$w_buff0_used' '_Bool'
|   |           | `-ImplicitCastExpr 0x5576dde53400 <col:169> 'int' <IntegralCast>
|   |           |   `-ImplicitCastExpr 0x5576dde533e8 <col:169> '_Bool' <LValueToRValue>
|   |           |     `-DeclRefExpr 0x5576dde53398 <col:169> '_Bool' lvalue Var 0x5576dde4c138 'z$r_buff0_thd3' '_Bool'
|   |           |-ImplicitCastExpr 0x5576dde53478 <col:186> 'int' <LValueToRValue>
|   |           | `-DeclRefExpr 0x5576dde53438 <col:186> 'int' lvalue Var 0x5576dde4c588 'z$w_buff1' 'int'
|   |           `-ImplicitCastExpr 0x5576dde53490 <col:198> 'int' <LValueToRValue>
|   |             `-DeclRefExpr 0x5576dde53458 <col:198> 'int' lvalue Var 0x5576dde4c588 'z$w_buff1' 'int'
|   |-BinaryOperator 0x5576dde53b98 <line:796:3, col:227> '_Bool' '='
|   | |-DeclRefExpr 0x5576dde535f8 <col:3> '_Bool' lvalue Var 0x5576dde4c508 'z$w_buff0_used' '_Bool'
|   | `-ImplicitCastExpr 0x5576dde53b80 <col:20, col:227> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x5576dde53b38 <col:20, col:227> 'int'
|   |     |-ImplicitCastExpr 0x5576dde53af0 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x5576dde53ad8 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x5576dde53618 <col:20> '_Bool' lvalue Var 0x5576dde4c6f0 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x5576dde53b20 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x5576dde53b08 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x5576dde53638 <col:36> '_Bool' lvalue Var 0x5576dde4c508 'z$w_buff0_used' '_Bool'
|   |     `-ParenExpr 0x5576dde53ab8 <col:53, col:227> 'int'
|   |       `-ConditionalOperator 0x5576dde53a88 <col:54, col:226> 'int'
|   |         |-BinaryOperator 0x5576dde53848 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x5576dde53768 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x5576dde53690 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x5576dde53678 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x5576dde53658 <col:55> '_Bool' lvalue Var 0x5576dde4c508 'z$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x5576dde53748 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x5576dde536e0 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x5576dde536c8 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x5576dde536a8 <col:74> '_Bool' lvalue Var 0x5576dde4c138 'z$r_buff0_thd3' '_Bool'
|   |         | |   `-UnaryOperator 0x5576dde53730 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x5576dde53718 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x5576dde536f8 <col:93> '_Bool' lvalue Var 0x5576dde4c600 'z$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x5576dde53828 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x5576dde537c0 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x5576dde537a8 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x5576dde53788 <col:112> '_Bool' lvalue Var 0x5576dde4c138 'z$r_buff0_thd3' '_Bool'
|   |         |   `-UnaryOperator 0x5576dde53810 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x5576dde537f8 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x5576dde537d8 <col:131> '_Bool' lvalue Var 0x5576dde4c318 'z$r_buff1_thd3' '_Bool'
|   |         |-ImplicitCastExpr 0x5576dde53a70 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x5576dde53a58 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x5576dde53868 <col:148> '_Bool' lvalue Var 0x5576dde4c508 'z$w_buff0_used' '_Bool'
|   |         `-ParenExpr 0x5576dde53a38 <col:165, col:226> 'int'
|   |           `-ConditionalOperator 0x5576dde53a08 <col:166, col:212> 'int'
|   |             |-BinaryOperator 0x5576dde53928 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x5576dde538e0 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x5576dde538c8 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x5576dde53888 <col:166> '_Bool' lvalue Var 0x5576dde4c508 'z$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x5576dde53910 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x5576dde538f8 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x5576dde538a8 <col:184> '_Bool' lvalue Var 0x5576dde4c138 'z$r_buff0_thd3' '_Bool'
|   |             |-ImplicitCastExpr 0x5576dde539c0 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x5576dde53978 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x5576dde53948 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x5576dde539f0 <col:212> 'int' <IntegralCast>
|   |               `-ImplicitCastExpr 0x5576dde539d8 <col:212> '_Bool' <LValueToRValue>
|   |                 `-DeclRefExpr 0x5576dde539a0 <col:212> '_Bool' lvalue Var 0x5576dde4c508 'z$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x5576dde54160 <line:797:3, col:221> '_Bool' '='
|   | |-DeclRefExpr 0x5576dde53bb8 <col:3> '_Bool' lvalue Var 0x5576dde4c600 'z$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x5576dde54148 <col:20, col:221> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x5576dde54118 <col:20, col:221> 'int'
|   |     |-ImplicitCastExpr 0x5576dde540d0 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x5576dde540b8 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x5576dde53bd8 <col:20> '_Bool' lvalue Var 0x5576dde4c6f0 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x5576dde54100 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x5576dde540e8 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x5576dde53bf8 <col:36> '_Bool' lvalue Var 0x5576dde4c600 'z$w_buff1_used' '_Bool'
|   |     `-ParenExpr 0x5576dde54098 <col:53, col:221> 'int'
|   |       `-ConditionalOperator 0x5576dde54068 <col:54, col:220> 'int'
|   |         |-BinaryOperator 0x5576dde53e08 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x5576dde53d28 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x5576dde53c50 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x5576dde53c38 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x5576dde53c18 <col:55> '_Bool' lvalue Var 0x5576dde4c508 'z$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x5576dde53d08 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x5576dde53ca0 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x5576dde53c88 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x5576dde53c68 <col:74> '_Bool' lvalue Var 0x5576dde4c138 'z$r_buff0_thd3' '_Bool'
|   |         | |   `-UnaryOperator 0x5576dde53cf0 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x5576dde53cd8 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x5576dde53cb8 <col:93> '_Bool' lvalue Var 0x5576dde4c600 'z$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x5576dde53de8 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x5576dde53d80 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x5576dde53d68 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x5576dde53d48 <col:112> '_Bool' lvalue Var 0x5576dde4c138 'z$r_buff0_thd3' '_Bool'
|   |         |   `-UnaryOperator 0x5576dde53dd0 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x5576dde53db8 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x5576dde53d98 <col:131> '_Bool' lvalue Var 0x5576dde4c318 'z$r_buff1_thd3' '_Bool'
|   |         |-ImplicitCastExpr 0x5576dde54050 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x5576dde54038 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x5576dde53e28 <col:148> '_Bool' lvalue Var 0x5576dde4c600 'z$w_buff1_used' '_Bool'
|   |         `-ParenExpr 0x5576dde54018 <col:165, col:220> 'int'
|   |           `-ConditionalOperator 0x5576dde53fe8 <col:166, col:219> 'int'
|   |             |-BinaryOperator 0x5576dde53ee8 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x5576dde53ea0 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x5576dde53e88 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x5576dde53e48 <col:166> '_Bool' lvalue Var 0x5576dde4c508 'z$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x5576dde53ed0 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x5576dde53eb8 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x5576dde53e68 <col:184> '_Bool' lvalue Var 0x5576dde4c138 'z$r_buff0_thd3' '_Bool'
|   |             |-ImplicitCastExpr 0x5576dde53fb8 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x5576dde53f38 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x5576dde53f08 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x5576dde53fd0 <col:212, col:219> 'int' <IntegralCast>
|   |               `-CStyleCastExpr 0x5576dde53f90 <col:212, col:219> '_Bool' <IntegralToBoolean>
|   |                 `-IntegerLiteral 0x5576dde53f60 <col:219> 'int' 0
|   |-BinaryOperator 0x5576dde54708 <line:798:3, col:227> '_Bool' '='
|   | |-DeclRefExpr 0x5576dde54180 <col:3> '_Bool' lvalue Var 0x5576dde4c138 'z$r_buff0_thd3' '_Bool'
|   | `-ImplicitCastExpr 0x5576dde546f0 <col:20, col:227> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x5576dde546c0 <col:20, col:227> 'int'
|   |     |-ImplicitCastExpr 0x5576dde54678 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x5576dde54660 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x5576dde541a0 <col:20> '_Bool' lvalue Var 0x5576dde4c6f0 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x5576dde546a8 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x5576dde54690 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x5576dde541c0 <col:36> '_Bool' lvalue Var 0x5576dde4c138 'z$r_buff0_thd3' '_Bool'
|   |     `-ParenExpr 0x5576dde54640 <col:53, col:227> 'int'
|   |       `-ConditionalOperator 0x5576dde54610 <col:54, col:226> 'int'
|   |         |-BinaryOperator 0x5576dde543d0 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x5576dde542f0 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x5576dde54218 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x5576dde54200 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x5576dde541e0 <col:55> '_Bool' lvalue Var 0x5576dde4c508 'z$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x5576dde542d0 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x5576dde54268 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x5576dde54250 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x5576dde54230 <col:74> '_Bool' lvalue Var 0x5576dde4c138 'z$r_buff0_thd3' '_Bool'
|   |         | |   `-UnaryOperator 0x5576dde542b8 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x5576dde542a0 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x5576dde54280 <col:93> '_Bool' lvalue Var 0x5576dde4c600 'z$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x5576dde543b0 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x5576dde54348 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x5576dde54330 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x5576dde54310 <col:112> '_Bool' lvalue Var 0x5576dde4c138 'z$r_buff0_thd3' '_Bool'
|   |         |   `-UnaryOperator 0x5576dde54398 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x5576dde54380 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x5576dde54360 <col:131> '_Bool' lvalue Var 0x5576dde4c318 'z$r_buff1_thd3' '_Bool'
|   |         |-ImplicitCastExpr 0x5576dde545f8 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x5576dde545e0 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x5576dde543f0 <col:148> '_Bool' lvalue Var 0x5576dde4c138 'z$r_buff0_thd3' '_Bool'
|   |         `-ParenExpr 0x5576dde545c0 <col:165, col:226> 'int'
|   |           `-ConditionalOperator 0x5576dde54590 <col:166, col:212> 'int'
|   |             |-BinaryOperator 0x5576dde544b0 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x5576dde54468 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x5576dde54450 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x5576dde54410 <col:166> '_Bool' lvalue Var 0x5576dde4c508 'z$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x5576dde54498 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x5576dde54480 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x5576dde54430 <col:184> '_Bool' lvalue Var 0x5576dde4c138 'z$r_buff0_thd3' '_Bool'
|   |             |-ImplicitCastExpr 0x5576dde54548 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x5576dde54500 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x5576dde544d0 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x5576dde54578 <col:212> 'int' <IntegralCast>
|   |               `-ImplicitCastExpr 0x5576dde54560 <col:212> '_Bool' <LValueToRValue>
|   |                 `-DeclRefExpr 0x5576dde54528 <col:212> '_Bool' lvalue Var 0x5576dde4c138 'z$r_buff0_thd3' '_Bool'
|   |-BinaryOperator 0x5576dde54d08 <line:799:3, col:221> '_Bool' '='
|   | |-DeclRefExpr 0x5576dde54728 <col:3> '_Bool' lvalue Var 0x5576dde4c318 'z$r_buff1_thd3' '_Bool'
|   | `-ImplicitCastExpr 0x5576dde54cf0 <col:20, col:221> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x5576dde54cc0 <col:20, col:221> 'int'
|   |     |-ImplicitCastExpr 0x5576dde54c78 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x5576dde54c60 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x5576dde54748 <col:20> '_Bool' lvalue Var 0x5576dde4c6f0 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x5576dde54ca8 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x5576dde54c90 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x5576dde54768 <col:36> '_Bool' lvalue Var 0x5576dde4c318 'z$r_buff1_thd3' '_Bool'
|   |     `-ParenExpr 0x5576dde54c40 <col:53, col:221> 'int'
|   |       `-ConditionalOperator 0x5576dde54c10 <col:54, col:220> 'int'
|   |         |-BinaryOperator 0x5576dde54978 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x5576dde54898 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x5576dde547c0 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x5576dde547a8 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x5576dde54788 <col:55> '_Bool' lvalue Var 0x5576dde4c508 'z$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x5576dde54878 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x5576dde54810 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x5576dde547f8 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x5576dde547d8 <col:74> '_Bool' lvalue Var 0x5576dde4c138 'z$r_buff0_thd3' '_Bool'
|   |         | |   `-UnaryOperator 0x5576dde54860 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x5576dde54848 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x5576dde54828 <col:93> '_Bool' lvalue Var 0x5576dde4c600 'z$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x5576dde54958 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x5576dde548f0 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x5576dde548d8 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x5576dde548b8 <col:112> '_Bool' lvalue Var 0x5576dde4c138 'z$r_buff0_thd3' '_Bool'
|   |         |   `-UnaryOperator 0x5576dde54940 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x5576dde54928 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x5576dde54908 <col:131> '_Bool' lvalue Var 0x5576dde4c318 'z$r_buff1_thd3' '_Bool'
|   |         |-ImplicitCastExpr 0x5576dde54bf8 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x5576dde54be0 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x5576dde54998 <col:148> '_Bool' lvalue Var 0x5576dde4c318 'z$r_buff1_thd3' '_Bool'
|   |         `-ParenExpr 0x5576dde54bc0 <col:165, col:220> 'int'
|   |           `-ConditionalOperator 0x5576dde54b90 <col:166, col:219> 'int'
|   |             |-BinaryOperator 0x5576dde54a58 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x5576dde54a10 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x5576dde549f8 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x5576dde549b8 <col:166> '_Bool' lvalue Var 0x5576dde4c508 'z$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x5576dde54a40 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x5576dde54a28 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x5576dde549d8 <col:184> '_Bool' lvalue Var 0x5576dde4c138 'z$r_buff0_thd3' '_Bool'
|   |             |-ImplicitCastExpr 0x5576dde54b28 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x5576dde54aa8 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x5576dde54a78 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x5576dde54b40 <col:212, col:219> 'int' <IntegralCast>
|   |               `-CStyleCastExpr 0x5576dde54b00 <col:212, col:219> '_Bool' <IntegralToBoolean>
|   |                 `-IntegerLiteral 0x5576dde54ad0 <col:219> 'int' 0
|   |-BinaryOperator 0x5576dde54d80 <line:800:3, col:25> 'int' '='
|   | |-DeclRefExpr 0x5576dde54d28 <col:3> 'int' lvalue Var 0x5576dde4b9e0 '__unbuffered_p2_EBX' 'int'
|   | `-ImplicitCastExpr 0x5576dde54d68 <col:25> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x5576dde54d48 <col:25> 'int' lvalue Var 0x5576dde4be40 'z' 'int'
|   |-BinaryOperator 0x5576dde54eb0 <line:801:3, col:37> 'int' '='
|   | |-DeclRefExpr 0x5576dde54da0 <col:3> 'int' lvalue Var 0x5576dde4be40 'z' 'int'
|   | `-ConditionalOperator 0x5576dde54e80 <col:7, col:37> 'int'
|   |   |-ImplicitCastExpr 0x5576dde54e38 <col:7> 'int' <IntegralCast>
|   |   | `-ImplicitCastExpr 0x5576dde54e20 <col:7> '_Bool' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x5576dde54dc0 <col:7> '_Bool' lvalue Var 0x5576dde4bed8 'z$flush_delayed' '_Bool'
|   |   |-ImplicitCastExpr 0x5576dde54e50 <col:25> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x5576dde54de0 <col:25> 'int' lvalue Var 0x5576dde4bf58 'z$mem_tmp' 'int'
|   |   `-ImplicitCastExpr 0x5576dde54e68 <col:37> 'int' <LValueToRValue>
|   |     `-DeclRefExpr 0x5576dde54e00 <col:37> 'int' lvalue Var 0x5576dde4be40 'z' 'int'
|   |-BinaryOperator 0x5576dde54f48 <line:802:3, col:28> '_Bool' '='
|   | |-DeclRefExpr 0x5576dde54ed0 <col:3> '_Bool' lvalue Var 0x5576dde4bed8 'z$flush_delayed' '_Bool'
|   | `-CStyleCastExpr 0x5576dde54f20 <col:21, col:28> '_Bool' <IntegralToBoolean>
|   |   `-IntegerLiteral 0x5576dde54ef0 <col:28> 'int' 0
|   |-CallExpr 0x5576dde54fa0 <line:803:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x5576dde54f88 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5576dde54f68 <col:3> 'void ()' Function 0x5576dddf2060 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x5576dde54ff8 <line:804:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x5576dde54fe0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5576dde54fc0 <col:3> 'void ()' Function 0x5576dddf1fa0 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x5576dde552e0 <line:805:3, col:103> 'int' '='
|   | |-DeclRefExpr 0x5576dde55018 <col:3> 'int' lvalue Var 0x5576dde4be40 'z' 'int'
|   | `-ConditionalOperator 0x5576dde552b0 <col:7, col:103> 'int'
|   |   |-BinaryOperator 0x5576dde550d8 <col:7, col:25> 'int' '&&'
|   |   | |-ImplicitCastExpr 0x5576dde55090 <col:7> 'int' <IntegralCast>
|   |   | | `-ImplicitCastExpr 0x5576dde55078 <col:7> '_Bool' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x5576dde55038 <col:7> '_Bool' lvalue Var 0x5576dde4c508 'z$w_buff0_used' '_Bool'
|   |   | `-ImplicitCastExpr 0x5576dde550c0 <col:25> 'int' <IntegralCast>
|   |   |   `-ImplicitCastExpr 0x5576dde550a8 <col:25> '_Bool' <LValueToRValue>
|   |   |     `-DeclRefExpr 0x5576dde55058 <col:25> '_Bool' lvalue Var 0x5576dde4c138 'z$r_buff0_thd3' '_Bool'
|   |   |-ImplicitCastExpr 0x5576dde55298 <col:42> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x5576dde550f8 <col:42> 'int' lvalue Var 0x5576dde4c490 'z$w_buff0' 'int'
|   |   `-ParenExpr 0x5576dde55278 <col:54, col:103> 'int'
|   |     `-ConditionalOperator 0x5576dde55248 <col:55, col:102> 'int'
|   |       |-BinaryOperator 0x5576dde551b8 <col:55, col:73> 'int' '&&'
|   |       | |-ImplicitCastExpr 0x5576dde55170 <col:55> 'int' <IntegralCast>
|   |       | | `-ImplicitCastExpr 0x5576dde55158 <col:55> '_Bool' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x5576dde55118 <col:55> '_Bool' lvalue Var 0x5576dde4c600 'z$w_buff1_used' '_Bool'
|   |       | `-ImplicitCastExpr 0x5576dde551a0 <col:73> 'int' <IntegralCast>
|   |       |   `-ImplicitCastExpr 0x5576dde55188 <col:73> '_Bool' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x5576dde55138 <col:73> '_Bool' lvalue Var 0x5576dde4c318 'z$r_buff1_thd3' '_Bool'
|   |       |-ImplicitCastExpr 0x5576dde55218 <col:90> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x5576dde551d8 <col:90> 'int' lvalue Var 0x5576dde4c588 'z$w_buff1' 'int'
|   |       `-ImplicitCastExpr 0x5576dde55230 <col:102> 'int' <LValueToRValue>
|   |         `-DeclRefExpr 0x5576dde551f8 <col:102> 'int' lvalue Var 0x5576dde4be40 'z' 'int'
|   |-BinaryOperator 0x5576dde554e8 <line:806:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x5576dde55300 <col:3> '_Bool' lvalue Var 0x5576dde4c508 'z$w_buff0_used' '_Bool'
|   | `-ImplicitCastExpr 0x5576dde554d0 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x5576dde554a0 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x5576dde553c0 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x5576dde55378 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x5576dde55360 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x5576dde55320 <col:20> '_Bool' lvalue Var 0x5576dde4c508 'z$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x5576dde553a8 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x5576dde55390 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x5576dde55340 <col:38> '_Bool' lvalue Var 0x5576dde4c138 'z$r_buff0_thd3' '_Bool'
|   |     |-ImplicitCastExpr 0x5576dde55458 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x5576dde55410 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x5576dde553e0 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x5576dde55488 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x5576dde55470 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x5576dde55438 <col:66> '_Bool' lvalue Var 0x5576dde4c508 'z$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x5576dde557d0 <line:807:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x5576dde55508 <col:3> '_Bool' lvalue Var 0x5576dde4c600 'z$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x5576dde557b8 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x5576dde55788 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x5576dde556a8 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x5576dde555c8 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x5576dde55580 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x5576dde55568 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x5576dde55528 <col:20> '_Bool' lvalue Var 0x5576dde4c508 'z$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x5576dde555b0 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x5576dde55598 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x5576dde55548 <col:38> '_Bool' lvalue Var 0x5576dde4c138 'z$r_buff0_thd3' '_Bool'
|   |     | `-BinaryOperator 0x5576dde55688 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x5576dde55640 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x5576dde55628 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x5576dde555e8 <col:56> '_Bool' lvalue Var 0x5576dde4c600 'z$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x5576dde55670 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x5576dde55658 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x5576dde55608 <col:74> '_Bool' lvalue Var 0x5576dde4c318 'z$r_buff1_thd3' '_Bool'
|   |     |-ImplicitCastExpr 0x5576dde55740 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x5576dde556f8 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x5576dde556c8 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x5576dde55770 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x5576dde55758 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x5576dde55720 <col:102> '_Bool' lvalue Var 0x5576dde4c600 'z$w_buff1_used' '_Bool'
|   |-BinaryOperator 0x5576dde559d8 <line:808:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x5576dde557f0 <col:3> '_Bool' lvalue Var 0x5576dde4c138 'z$r_buff0_thd3' '_Bool'
|   | `-ImplicitCastExpr 0x5576dde559c0 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x5576dde55990 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x5576dde558b0 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x5576dde55868 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x5576dde55850 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x5576dde55810 <col:20> '_Bool' lvalue Var 0x5576dde4c508 'z$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x5576dde55898 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x5576dde55880 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x5576dde55830 <col:38> '_Bool' lvalue Var 0x5576dde4c138 'z$r_buff0_thd3' '_Bool'
|   |     |-ImplicitCastExpr 0x5576dde55948 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x5576dde55900 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x5576dde558d0 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x5576dde55978 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x5576dde55960 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x5576dde55928 <col:66> '_Bool' lvalue Var 0x5576dde4c138 'z$r_buff0_thd3' '_Bool'
|   |-BinaryOperator 0x5576dde55ce8 <line:809:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x5576dde559f8 <col:3> '_Bool' lvalue Var 0x5576dde4c318 'z$r_buff1_thd3' '_Bool'
|   | `-ImplicitCastExpr 0x5576dde55cd0 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x5576dde55ca0 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x5576dde55bc0 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x5576dde55ab8 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x5576dde55a70 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x5576dde55a58 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x5576dde55a18 <col:20> '_Bool' lvalue Var 0x5576dde4c508 'z$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x5576dde55aa0 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x5576dde55a88 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x5576dde55a38 <col:38> '_Bool' lvalue Var 0x5576dde4c138 'z$r_buff0_thd3' '_Bool'
|   |     | `-BinaryOperator 0x5576dde55ba0 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x5576dde55b30 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x5576dde55b18 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x5576dde55ad8 <col:56> '_Bool' lvalue Var 0x5576dde4c600 'z$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x5576dde55b60 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x5576dde55b48 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x5576dde55af8 <col:74> '_Bool' lvalue Var 0x5576dde4c318 'z$r_buff1_thd3' '_Bool'
|   |     |-ImplicitCastExpr 0x5576dde55c58 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x5576dde55c10 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x5576dde55be0 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x5576dde55c88 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x5576dde55c70 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x5576dde55c38 <col:102> '_Bool' lvalue Var 0x5576dde4c318 'z$r_buff1_thd3' '_Bool'
|   |-CallExpr 0x5576dde55d40 <line:810:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x5576dde55d28 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5576dde55d08 <col:3> 'void ()' Function 0x5576dddf2060 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x5576dde55d98 <line:811:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x5576dde55d80 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5576dde55d60 <col:3> 'void ()' Function 0x5576dddf1fa0 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x5576dde55e50 <line:812:3, col:41> 'int' '='
|   | |-DeclRefExpr 0x5576dde55db8 <col:3> 'int' lvalue Var 0x5576dde4b320 '__unbuffered_cnt' 'int'
|   | `-BinaryOperator 0x5576dde55e30 <col:22, col:41> 'int' '+'
|   |   |-ImplicitCastExpr 0x5576dde55e18 <col:22> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x5576dde55dd8 <col:22> 'int' lvalue Var 0x5576dde4b320 '__unbuffered_cnt' 'int'
|   |   `-IntegerLiteral 0x5576dde55df8 <col:41> 'int' 1
|   |-CallExpr 0x5576dde55ea8 <line:813:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x5576dde55e90 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5576dde55e70 <col:3> 'void ()' Function 0x5576dddf2060 '__VERIFIER_atomic_end' 'void ()'
|   `-ReturnStmt 0x5576dde55f20 <line:814:3, col:36>
|     `-CallExpr 0x5576dde55f00 <col:10, col:36> 'void *'
|       `-ImplicitCastExpr 0x5576dde55ee8 <col:10> 'void *(*)(void)' <FunctionToPointerDecay>
|         `-DeclRefExpr 0x5576dde55ec8 <col:10> 'void *(void)' Function 0x5576dddf1ab8 '__VERIFIER_nondet_pointer' 'void *(void)'
|-FunctionDecl 0x5576dde56068 prev 0x5576dde4b068 <line:816:1, line:818:1> line:816:6 fence 'void ()'
| `-CompoundStmt 0x5576dde56108 <line:817:1, line:818:1>
|-FunctionDecl 0x5576dde56138 prev 0x5576dde4b128 <line:819:1, line:821:1> line:819:6 isync 'void ()'
| `-CompoundStmt 0x5576dde561d8 <line:820:1, line:821:1>
|-FunctionDecl 0x5576dde56208 prev 0x5576dde4b1e8 <line:822:1, line:824:1> line:822:6 lwfence 'void ()'
| `-CompoundStmt 0x5576dde562a8 <line:823:1, line:824:1>
`-FunctionDecl 0x5576dde56318 <line:825:1, line:849:1> line:825:5 main 'int ()'
  `-CompoundStmt 0x5576dde58130 <line:826:1, line:849:1>
    |-DeclStmt 0x5576dde56430 <line:827:3, col:16>
    | `-VarDecl 0x5576dde563c8 <col:3, col:13> col:13 used t16 'pthread_t':'unsigned long'
    |-CallExpr 0x5576dde56638 <line:828:3, col:52> 'int'
    | |-ImplicitCastExpr 0x5576dde56620 <col:3> 'int (*)(pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x5576dde56448 <col:3> 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' Function 0x5576dde325b8 'pthread_create' 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)'
    | |-UnaryOperator 0x5576dde56488 <col:18, col:19> 'pthread_t *' prefix '&' cannot overflow
    | | `-DeclRefExpr 0x5576dde56468 <col:19> 'pthread_t':'unsigned long' lvalue Var 0x5576dde563c8 't16' 'pthread_t':'unsigned long'
    | |-ImplicitCastExpr 0x5576dde56678 <col:24, col:34> 'const pthread_attr_t *' <NullToPointer>
    | | `-ParenExpr 0x5576dde56500 <col:24, col:34> 'void *'
    | |   `-CStyleCastExpr 0x5576dde564d8 <col:25, col:33> 'void *' <NullToPointer>
    | |     `-IntegerLiteral 0x5576dde564a0 <col:33> 'int' 0
    | |-ImplicitCastExpr 0x5576dde56690 <col:37> 'void *(*)(void *)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x5576dde56520 <col:37> 'void *(void *)' Function 0x5576dde4c808 'P0' 'void *(void *)'
    | `-ParenExpr 0x5576dde565a0 <col:41, col:51> 'void *'
    |   `-CStyleCastExpr 0x5576dde56578 <col:42, col:50> 'void *' <NullToPointer>
    |     `-IntegerLiteral 0x5576dde56540 <col:50> 'int' 0
    |-DeclStmt 0x5576dde56720 <line:829:3, col:16>
    | `-VarDecl 0x5576dde566b8 <col:3, col:13> col:13 used t17 'pthread_t':'unsigned long'
    |-CallExpr 0x5576dde568c8 <line:830:3, col:52> 'int'
    | |-ImplicitCastExpr 0x5576dde568b0 <col:3> 'int (*)(pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x5576dde56738 <col:3> 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' Function 0x5576dde325b8 'pthread_create' 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)'
    | |-UnaryOperator 0x5576dde56778 <col:18, col:19> 'pthread_t *' prefix '&' cannot overflow
    | | `-DeclRefExpr 0x5576dde56758 <col:19> 'pthread_t':'unsigned long' lvalue Var 0x5576dde566b8 't17' 'pthread_t':'unsigned long'
    | |-ImplicitCastExpr 0x5576dde56908 <col:24, col:34> 'const pthread_attr_t *' <NullToPointer>
    | | `-ParenExpr 0x5576dde567f0 <col:24, col:34> 'void *'
    | |   `-CStyleCastExpr 0x5576dde567c8 <col:25, col:33> 'void *' <NullToPointer>
    | |     `-IntegerLiteral 0x5576dde56790 <col:33> 'int' 0
    | |-ImplicitCastExpr 0x5576dde56920 <col:37> 'void *(*)(void *)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x5576dde56810 <col:37> 'void *(void *)' Function 0x5576dde50d60 'P1' 'void *(void *)'
    | `-ParenExpr 0x5576dde56890 <col:41, col:51> 'void *'
    |   `-CStyleCastExpr 0x5576dde56868 <col:42, col:50> 'void *' <NullToPointer>
    |     `-IntegerLiteral 0x5576dde56830 <col:50> 'int' 0
    |-DeclStmt 0x5576dde569b0 <line:831:3, col:16>
    | `-VarDecl 0x5576dde56948 <col:3, col:13> col:13 used t18 'pthread_t':'unsigned long'
    |-CallExpr 0x5576dde56b58 <line:832:3, col:52> 'int'
    | |-ImplicitCastExpr 0x5576dde56b40 <col:3> 'int (*)(pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x5576dde569c8 <col:3> 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' Function 0x5576dde325b8 'pthread_create' 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)'
    | |-UnaryOperator 0x5576dde56a08 <col:18, col:19> 'pthread_t *' prefix '&' cannot overflow
    | | `-DeclRefExpr 0x5576dde569e8 <col:19> 'pthread_t':'unsigned long' lvalue Var 0x5576dde56948 't18' 'pthread_t':'unsigned long'
    | |-ImplicitCastExpr 0x5576dde56bb0 <col:24, col:34> 'const pthread_attr_t *' <NullToPointer>
    | | `-ParenExpr 0x5576dde56a80 <col:24, col:34> 'void *'
    | |   `-CStyleCastExpr 0x5576dde56a58 <col:25, col:33> 'void *' <NullToPointer>
    | |     `-IntegerLiteral 0x5576dde56a20 <col:33> 'int' 0
    | |-ImplicitCastExpr 0x5576dde56bc8 <col:37> 'void *(*)(void *)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x5576dde56aa0 <col:37> 'void *(void *)' Function 0x5576dde52238 'P2' 'void *(void *)'
    | `-ParenExpr 0x5576dde56b20 <col:41, col:51> 'void *'
    |   `-CStyleCastExpr 0x5576dde56af8 <col:42, col:50> 'void *' <NullToPointer>
    |     `-IntegerLiteral 0x5576dde56ac0 <col:50> 'int' 0
    |-CallExpr 0x5576dde56c18 <line:833:3, col:27> 'void'
    | `-ImplicitCastExpr 0x5576dde56c00 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x5576dde56be0 <col:3> 'void ()' Function 0x5576dddf1fa0 '__VERIFIER_atomic_begin' 'void ()'
    |-BinaryOperator 0x5576dde56ce8 <line:834:3, col:41> '_Bool' '='
    | |-DeclRefExpr 0x5576dde56c38 <col:3> '_Bool' lvalue Var 0x5576dde4ba78 'main$tmp_guard0' '_Bool'
    | `-ImplicitCastExpr 0x5576dde56cd0 <col:21, col:41> '_Bool' <IntegralToBoolean>
    |   `-BinaryOperator 0x5576dde56cb0 <col:21, col:41> 'int' '=='
    |     |-ImplicitCastExpr 0x5576dde56c98 <col:21> 'int' <LValueToRValue>
    |     | `-DeclRefExpr 0x5576dde56c58 <col:21> 'int' lvalue Var 0x5576dde4b320 '__unbuffered_cnt' 'int'
    |     `-IntegerLiteral 0x5576dde56c78 <col:41> 'int' 3
    |-CallExpr 0x5576dde56d40 <line:835:3, col:25> 'void'
    | `-ImplicitCastExpr 0x5576dde56d28 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x5576dde56d08 <col:3> 'void ()' Function 0x5576dddf2060 '__VERIFIER_atomic_end' 'void ()'
    |-CallExpr 0x5576dde56db8 <line:836:3, col:36> 'void'
    | |-ImplicitCastExpr 0x5576dde56da0 <col:3> 'void (*)(int)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x5576dde56d60 <col:3> 'void (int)' Function 0x5576dddf1940 '__VERIFIER_assume' 'void (int)'
    | `-ImplicitCastExpr 0x5576dde56df8 <col:21> 'int' <IntegralCast>
    |   `-ImplicitCastExpr 0x5576dde56de0 <col:21> '_Bool' <LValueToRValue>
    |     `-DeclRefExpr 0x5576dde56d80 <col:21> '_Bool' lvalue Var 0x5576dde4ba78 'main$tmp_guard0' '_Bool'
    |-CallExpr 0x5576dde56e48 <line:837:3, col:27> 'void'
    | `-ImplicitCastExpr 0x5576dde56e30 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x5576dde56e10 <col:3> 'void ()' Function 0x5576dddf1fa0 '__VERIFIER_atomic_begin' 'void ()'
    |-BinaryOperator 0x5576dde57130 <line:838:3, col:103> 'int' '='
    | |-DeclRefExpr 0x5576dde56e68 <col:3> 'int' lvalue Var 0x5576dde4be40 'z' 'int'
    | `-ConditionalOperator 0x5576dde57100 <col:7, col:103> 'int'
    |   |-BinaryOperator 0x5576dde56f28 <col:7, col:25> 'int' '&&'
    |   | |-ImplicitCastExpr 0x5576dde56ee0 <col:7> 'int' <IntegralCast>
    |   | | `-ImplicitCastExpr 0x5576dde56ec8 <col:7> '_Bool' <LValueToRValue>
    |   | |   `-DeclRefExpr 0x5576dde56e88 <col:7> '_Bool' lvalue Var 0x5576dde4c508 'z$w_buff0_used' '_Bool'
    |   | `-ImplicitCastExpr 0x5576dde56f10 <col:25> 'int' <IntegralCast>
    |   |   `-ImplicitCastExpr 0x5576dde56ef8 <col:25> '_Bool' <LValueToRValue>
    |   |     `-DeclRefExpr 0x5576dde56ea8 <col:25> '_Bool' lvalue Var 0x5576dde4bfd0 'z$r_buff0_thd0' '_Bool'
    |   |-ImplicitCastExpr 0x5576dde570e8 <col:42> 'int' <LValueToRValue>
    |   | `-DeclRefExpr 0x5576dde56f48 <col:42> 'int' lvalue Var 0x5576dde4c490 'z$w_buff0' 'int'
    |   `-ParenExpr 0x5576dde570c8 <col:54, col:103> 'int'
    |     `-ConditionalOperator 0x5576dde57098 <col:55, col:102> 'int'
    |       |-BinaryOperator 0x5576dde57008 <col:55, col:73> 'int' '&&'
    |       | |-ImplicitCastExpr 0x5576dde56fc0 <col:55> 'int' <IntegralCast>
    |       | | `-ImplicitCastExpr 0x5576dde56fa8 <col:55> '_Bool' <LValueToRValue>
    |       | |   `-DeclRefExpr 0x5576dde56f68 <col:55> '_Bool' lvalue Var 0x5576dde4c600 'z$w_buff1_used' '_Bool'
    |       | `-ImplicitCastExpr 0x5576dde56ff0 <col:73> 'int' <IntegralCast>
    |       |   `-ImplicitCastExpr 0x5576dde56fd8 <col:73> '_Bool' <LValueToRValue>
    |       |     `-DeclRefExpr 0x5576dde56f88 <col:73> '_Bool' lvalue Var 0x5576dde4c1b0 'z$r_buff1_thd0' '_Bool'
    |       |-ImplicitCastExpr 0x5576dde57068 <col:90> 'int' <LValueToRValue>
    |       | `-DeclRefExpr 0x5576dde57028 <col:90> 'int' lvalue Var 0x5576dde4c588 'z$w_buff1' 'int'
    |       `-ImplicitCastExpr 0x5576dde57080 <col:102> 'int' <LValueToRValue>
    |         `-DeclRefExpr 0x5576dde57048 <col:102> 'int' lvalue Var 0x5576dde4be40 'z' 'int'
    |-BinaryOperator 0x5576dde57338 <line:839:3, col:66> '_Bool' '='
    | |-DeclRefExpr 0x5576dde57150 <col:3> '_Bool' lvalue Var 0x5576dde4c508 'z$w_buff0_used' '_Bool'
    | `-ImplicitCastExpr 0x5576dde57320 <col:20, col:66> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x5576dde572f0 <col:20, col:66> 'int'
    |     |-BinaryOperator 0x5576dde57210 <col:20, col:38> 'int' '&&'
    |     | |-ImplicitCastExpr 0x5576dde571c8 <col:20> 'int' <IntegralCast>
    |     | | `-ImplicitCastExpr 0x5576dde571b0 <col:20> '_Bool' <LValueToRValue>
    |     | |   `-DeclRefExpr 0x5576dde57170 <col:20> '_Bool' lvalue Var 0x5576dde4c508 'z$w_buff0_used' '_Bool'
    |     | `-ImplicitCastExpr 0x5576dde571f8 <col:38> 'int' <IntegralCast>
    |     |   `-ImplicitCastExpr 0x5576dde571e0 <col:38> '_Bool' <LValueToRValue>
    |     |     `-DeclRefExpr 0x5576dde57190 <col:38> '_Bool' lvalue Var 0x5576dde4bfd0 'z$r_buff0_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x5576dde572a8 <col:55, col:62> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x5576dde57260 <col:55, col:62> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x5576dde57230 <col:62> 'int' 0
    |     `-ImplicitCastExpr 0x5576dde572d8 <col:66> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x5576dde572c0 <col:66> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x5576dde57288 <col:66> '_Bool' lvalue Var 0x5576dde4c508 'z$w_buff0_used' '_Bool'
    |-BinaryOperator 0x5576dde57620 <line:840:3, col:102> '_Bool' '='
    | |-DeclRefExpr 0x5576dde57358 <col:3> '_Bool' lvalue Var 0x5576dde4c600 'z$w_buff1_used' '_Bool'
    | `-ImplicitCastExpr 0x5576dde57608 <col:20, col:102> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x5576dde575d8 <col:20, col:102> 'int'
    |     |-BinaryOperator 0x5576dde574f8 <col:20, col:74> 'int' '||'
    |     | |-BinaryOperator 0x5576dde57418 <col:20, col:38> 'int' '&&'
    |     | | |-ImplicitCastExpr 0x5576dde573d0 <col:20> 'int' <IntegralCast>
    |     | | | `-ImplicitCastExpr 0x5576dde573b8 <col:20> '_Bool' <LValueToRValue>
    |     | | |   `-DeclRefExpr 0x5576dde57378 <col:20> '_Bool' lvalue Var 0x5576dde4c508 'z$w_buff0_used' '_Bool'
    |     | | `-ImplicitCastExpr 0x5576dde57400 <col:38> 'int' <IntegralCast>
    |     | |   `-ImplicitCastExpr 0x5576dde573e8 <col:38> '_Bool' <LValueToRValue>
    |     | |     `-DeclRefExpr 0x5576dde57398 <col:38> '_Bool' lvalue Var 0x5576dde4bfd0 'z$r_buff0_thd0' '_Bool'
    |     | `-BinaryOperator 0x5576dde574d8 <col:56, col:74> 'int' '&&'
    |     |   |-ImplicitCastExpr 0x5576dde57490 <col:56> 'int' <IntegralCast>
    |     |   | `-ImplicitCastExpr 0x5576dde57478 <col:56> '_Bool' <LValueToRValue>
    |     |   |   `-DeclRefExpr 0x5576dde57438 <col:56> '_Bool' lvalue Var 0x5576dde4c600 'z$w_buff1_used' '_Bool'
    |     |   `-ImplicitCastExpr 0x5576dde574c0 <col:74> 'int' <IntegralCast>
    |     |     `-ImplicitCastExpr 0x5576dde574a8 <col:74> '_Bool' <LValueToRValue>
    |     |       `-DeclRefExpr 0x5576dde57458 <col:74> '_Bool' lvalue Var 0x5576dde4c1b0 'z$r_buff1_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x5576dde57590 <col:91, col:98> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x5576dde57548 <col:91, col:98> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x5576dde57518 <col:98> 'int' 0
    |     `-ImplicitCastExpr 0x5576dde575c0 <col:102> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x5576dde575a8 <col:102> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x5576dde57570 <col:102> '_Bool' lvalue Var 0x5576dde4c600 'z$w_buff1_used' '_Bool'
    |-BinaryOperator 0x5576dde57828 <line:841:3, col:66> '_Bool' '='
    | |-DeclRefExpr 0x5576dde57640 <col:3> '_Bool' lvalue Var 0x5576dde4bfd0 'z$r_buff0_thd0' '_Bool'
    | `-ImplicitCastExpr 0x5576dde57810 <col:20, col:66> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x5576dde577e0 <col:20, col:66> 'int'
    |     |-BinaryOperator 0x5576dde57700 <col:20, col:38> 'int' '&&'
    |     | |-ImplicitCastExpr 0x5576dde576b8 <col:20> 'int' <IntegralCast>
    |     | | `-ImplicitCastExpr 0x5576dde576a0 <col:20> '_Bool' <LValueToRValue>
    |     | |   `-DeclRefExpr 0x5576dde57660 <col:20> '_Bool' lvalue Var 0x5576dde4c508 'z$w_buff0_used' '_Bool'
    |     | `-ImplicitCastExpr 0x5576dde576e8 <col:38> 'int' <IntegralCast>
    |     |   `-ImplicitCastExpr 0x5576dde576d0 <col:38> '_Bool' <LValueToRValue>
    |     |     `-DeclRefExpr 0x5576dde57680 <col:38> '_Bool' lvalue Var 0x5576dde4bfd0 'z$r_buff0_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x5576dde57798 <col:55, col:62> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x5576dde57750 <col:55, col:62> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x5576dde57720 <col:62> 'int' 0
    |     `-ImplicitCastExpr 0x5576dde577c8 <col:66> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x5576dde577b0 <col:66> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x5576dde57778 <col:66> '_Bool' lvalue Var 0x5576dde4bfd0 'z$r_buff0_thd0' '_Bool'
    |-BinaryOperator 0x5576dde57b10 <line:842:3, col:102> '_Bool' '='
    | |-DeclRefExpr 0x5576dde57848 <col:3> '_Bool' lvalue Var 0x5576dde4c1b0 'z$r_buff1_thd0' '_Bool'
    | `-ImplicitCastExpr 0x5576dde57af8 <col:20, col:102> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x5576dde57ac8 <col:20, col:102> 'int'
    |     |-BinaryOperator 0x5576dde579e8 <col:20, col:74> 'int' '||'
    |     | |-BinaryOperator 0x5576dde57908 <col:20, col:38> 'int' '&&'
    |     | | |-ImplicitCastExpr 0x5576dde578c0 <col:20> 'int' <IntegralCast>
    |     | | | `-ImplicitCastExpr 0x5576dde578a8 <col:20> '_Bool' <LValueToRValue>
    |     | | |   `-DeclRefExpr 0x5576dde57868 <col:20> '_Bool' lvalue Var 0x5576dde4c508 'z$w_buff0_used' '_Bool'
    |     | | `-ImplicitCastExpr 0x5576dde578f0 <col:38> 'int' <IntegralCast>
    |     | |   `-ImplicitCastExpr 0x5576dde578d8 <col:38> '_Bool' <LValueToRValue>
    |     | |     `-DeclRefExpr 0x5576dde57888 <col:38> '_Bool' lvalue Var 0x5576dde4bfd0 'z$r_buff0_thd0' '_Bool'
    |     | `-BinaryOperator 0x5576dde579c8 <col:56, col:74> 'int' '&&'
    |     |   |-ImplicitCastExpr 0x5576dde57980 <col:56> 'int' <IntegralCast>
    |     |   | `-ImplicitCastExpr 0x5576dde57968 <col:56> '_Bool' <LValueToRValue>
    |     |   |   `-DeclRefExpr 0x5576dde57928 <col:56> '_Bool' lvalue Var 0x5576dde4c600 'z$w_buff1_used' '_Bool'
    |     |   `-ImplicitCastExpr 0x5576dde579b0 <col:74> 'int' <IntegralCast>
    |     |     `-ImplicitCastExpr 0x5576dde57998 <col:74> '_Bool' <LValueToRValue>
    |     |       `-DeclRefExpr 0x5576dde57948 <col:74> '_Bool' lvalue Var 0x5576dde4c1b0 'z$r_buff1_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x5576dde57a80 <col:91, col:98> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x5576dde57a38 <col:91, col:98> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x5576dde57a08 <col:98> 'int' 0
    |     `-ImplicitCastExpr 0x5576dde57ab0 <col:102> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x5576dde57a98 <col:102> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x5576dde57a60 <col:102> '_Bool' lvalue Var 0x5576dde4c1b0 'z$r_buff1_thd0' '_Bool'
    |-CallExpr 0x5576dde57b68 <line:843:3, col:25> 'void'
    | `-ImplicitCastExpr 0x5576dde57b50 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x5576dde57b30 <col:3> 'void ()' Function 0x5576dddf2060 '__VERIFIER_atomic_end' 'void ()'
    |-CallExpr 0x5576dde57bd8 <line:844:3, col:27> 'void'
    | `-ImplicitCastExpr 0x5576dde57bc0 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x5576dde57b88 <col:3> 'void ()' Function 0x5576dddf1fa0 '__VERIFIER_atomic_begin' 'void ()'
    |-BinaryOperator 0x5576dde57fd8 <line:845:3, col:187> '_Bool' '='
    | |-DeclRefExpr 0x5576dde57bf8 <col:3> '_Bool' lvalue Var 0x5576dde4bb00 'main$tmp_guard1' '_Bool'
    | `-ImplicitCastExpr 0x5576dde57fc0 <col:21, col:187> '_Bool' <IntegralToBoolean>
    |   `-UnaryOperator 0x5576dde57fa8 <col:21, col:187> 'int' prefix '!' cannot overflow
    |     `-ParenExpr 0x5576dde57f88 <col:22, col:187> 'int'
    |       `-BinaryOperator 0x5576dde57f68 <col:23, col:186> 'int' '&&'
    |         |-BinaryOperator 0x5576dde57ed0 <col:23, col:158> 'int' '&&'
    |         | |-BinaryOperator 0x5576dde57e38 <col:23, col:130> 'int' '&&'
    |         | | |-BinaryOperator 0x5576dde57da0 <col:23, col:102> 'int' '&&'
    |         | | | |-BinaryOperator 0x5576dde57d08 <col:23, col:74> 'int' '&&'
    |         | | | | |-BinaryOperator 0x5576dde57c70 <col:23, col:46> 'int' '=='
    |         | | | | | |-ImplicitCastExpr 0x5576dde57c58 <col:23> 'int' <LValueToRValue>
    |         | | | | | | `-DeclRefExpr 0x5576dde57c18 <col:23> 'int' lvalue Var 0x5576dde4b440 '__unbuffered_p0_EAX' 'int'
    |         | | | | | `-IntegerLiteral 0x5576dde57c38 <col:46> 'int' 1
    |         | | | | `-BinaryOperator 0x5576dde57ce8 <col:51, col:74> 'int' '=='
    |         | | | |   |-ImplicitCastExpr 0x5576dde57cd0 <col:51> 'int' <LValueToRValue>
    |         | | | |   | `-DeclRefExpr 0x5576dde57c90 <col:51> 'int' lvalue Var 0x5576dde4b560 '__unbuffered_p0_EBX' 'int'
    |         | | | |   `-IntegerLiteral 0x5576dde57cb0 <col:74> 'int' 0
    |         | | | `-BinaryOperator 0x5576dde57d80 <col:79, col:102> 'int' '=='
    |         | | |   |-ImplicitCastExpr 0x5576dde57d68 <col:79> 'int' <LValueToRValue>
    |         | | |   | `-DeclRefExpr 0x5576dde57d28 <col:79> 'int' lvalue Var 0x5576dde4b680 '__unbuffered_p1_EAX' 'int'
    |         | | |   `-IntegerLiteral 0x5576dde57d48 <col:102> 'int' 1
    |         | | `-BinaryOperator 0x5576dde57e18 <col:107, col:130> 'int' '=='
    |         | |   |-ImplicitCastExpr 0x5576dde57e00 <col:107> 'int' <LValueToRValue>
    |         | |   | `-DeclRefExpr 0x5576dde57dc0 <col:107> 'int' lvalue Var 0x5576dde4b7a0 '__unbuffered_p1_EBX' 'int'
    |         | |   `-IntegerLiteral 0x5576dde57de0 <col:130> 'int' 0
    |         | `-BinaryOperator 0x5576dde57eb0 <col:135, col:158> 'int' '=='
    |         |   |-ImplicitCastExpr 0x5576dde57e98 <col:135> 'int' <LValueToRValue>
    |         |   | `-DeclRefExpr 0x5576dde57e58 <col:135> 'int' lvalue Var 0x5576dde4b8c0 '__unbuffered_p2_EAX' 'int'
    |         |   `-IntegerLiteral 0x5576dde57e78 <col:158> 'int' 1
    |         `-BinaryOperator 0x5576dde57f48 <col:163, col:186> 'int' '=='
    |           |-ImplicitCastExpr 0x5576dde57f30 <col:163> 'int' <LValueToRValue>
    |           | `-DeclRefExpr 0x5576dde57ef0 <col:163> 'int' lvalue Var 0x5576dde4b9e0 '__unbuffered_p2_EBX' 'int'
    |           `-IntegerLiteral 0x5576dde57f10 <col:186> 'int' 0
    |-CallExpr 0x5576dde58030 <line:846:3, col:25> 'void'
    | `-ImplicitCastExpr 0x5576dde58018 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x5576dde57ff8 <col:3> 'void ()' Function 0x5576dddf2060 '__VERIFIER_atomic_end' 'void ()'
    |-CallExpr 0x5576dde580a8 <line:847:3, col:36> 'void'
    | |-ImplicitCastExpr 0x5576dde58090 <col:3> 'void (*)(int)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x5576dde58050 <col:3> 'void (int)' Function 0x5576dddf1d28 '__VERIFIER_assert' 'void (int)'
    | `-ImplicitCastExpr 0x5576dde580e8 <col:21> 'int' <IntegralCast>
    |   `-ImplicitCastExpr 0x5576dde580d0 <col:21> '_Bool' <LValueToRValue>
    |     `-DeclRefExpr 0x5576dde58070 <col:21> '_Bool' lvalue Var 0x5576dde4bb00 'main$tmp_guard1' '_Bool'
    `-ReturnStmt 0x5576dde58120 <line:848:3, col:10>
      `-IntegerLiteral 0x5576dde58100 <col:10> 'int' 0
