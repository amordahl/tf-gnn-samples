TranslationUnitDecl 0x562919701e18 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x5629197026d8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x5629197023b0 '__int128'
|-TypedefDecl 0x562919702748 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x5629197023d0 'unsigned __int128'
|-TypedefDecl 0x562919702a50 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x562919702820 'struct __NSConstantString_tag'
|   `-Record 0x5629197027a0 '__NSConstantString_tag'
|-TypedefDecl 0x562919702af8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x562919702ab0 'char *'
|   `-BuiltinType 0x562919701eb0 'char'
|-TypedefDecl 0x562919741650 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'struct __va_list_tag [1]'
| `-ConstantArrayType 0x562919702d90 'struct __va_list_tag [1]' 1 
|   `-RecordType 0x562919702bd0 'struct __va_list_tag'
|     `-Record 0x562919702b50 '__va_list_tag'
|-FunctionDecl 0x562919741790 <./split_0/mix037_power.oepc_false-unreach-call.i:1:1, col:34> col:13 used __VERIFIER_assume 'void (int)' extern
| `-ParmVarDecl 0x5629197416c0 <col:31> col:34 'int'
|-FunctionDecl 0x562919741958 <line:2:1, col:45> col:15 used __VERIFIER_nondet_pointer 'void *(void)' extern
|-FunctionDecl 0x562919741a80 <line:3:1, col:61> col:13 used __VERIFIER_error 'void () __attribute__((noreturn))' extern
|-FunctionDecl 0x562919741bc8 <line:4:1, col:99> col:6 used __VERIFIER_assert 'void (int)'
| |-ParmVarDecl 0x562919741b38 <col:24, col:28> col:28 used expression 'int'
| `-CompoundStmt 0x562919741df8 <col:40, col:99>
|   |-IfStmt 0x562919741dc8 <col:42, col:88>
|   | |-UnaryOperator 0x562919741ca8 <col:46, col:47> 'int' prefix '!' cannot overflow
|   | | `-ImplicitCastExpr 0x562919741c90 <col:47> 'int' <LValueToRValue>
|   | |   `-DeclRefExpr 0x562919741c70 <col:47> 'int' lvalue ParmVar 0x562919741b38 'expression' 'int'
|   | `-CompoundStmt 0x562919741db0 <col:59, col:88>
|   |   `-LabelStmt 0x562919741d98 <col:61, col:85> 'ERROR'
|   |     `-CallExpr 0x562919741d28 <col:68, col:85> 'void'
|   |       `-ImplicitCastExpr 0x562919741d10 <col:68> 'void (*)() __attribute__((noreturn))' <FunctionToPointerDecay>
|   |         `-DeclRefExpr 0x562919741cc0 <col:68> 'void () __attribute__((noreturn))' Function 0x562919741a80 '__VERIFIER_error' 'void () __attribute__((noreturn))'
|   |-NullStmt 0x562919741de0 <col:89>
|   `-ReturnStmt 0x562919741de8 <col:91>
|-FunctionDecl 0x562919741e40 <line:5:1, col:37> col:13 used __VERIFIER_atomic_begin 'void ()' extern
|-FunctionDecl 0x562919741f00 <line:6:1, col:35> col:13 used __VERIFIER_atomic_end 'void ()' extern
|-FunctionDecl 0x562919742280 <line:8:1, line:10:76> line:8:13 __assert_fail 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x562919741fb8 <col:28, col:40> col:40 __assertion 'const char *'
| |-ParmVarDecl 0x562919742038 <col:53, col:65> col:65 __file 'const char *'
| |-ParmVarDecl 0x5629197420b8 <line:9:7, col:20> col:20 __line 'unsigned int'
| |-ParmVarDecl 0x562919742138 <col:28, col:40> col:40 __function 'const char *'
| `-NoThrowAttr 0x562919742340 <line:10:22>
|-FunctionDecl 0x562919768390 <line:11:1, line:13:76> line:11:13 __assert_perror_fail 'void (int, const char *, unsigned int, const char *) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x5629197423b0 <col:35, col:39> col:39 __errnum 'int'
| |-ParmVarDecl 0x562919742430 <col:49, col:61> col:61 __file 'const char *'
| |-ParmVarDecl 0x5629197424b0 <line:12:7, col:20> col:20 __line 'unsigned int'
| |-ParmVarDecl 0x562919742530 <col:28, col:40> col:40 __function 'const char *'
| `-NoThrowAttr 0x562919768450 <line:13:22>
|-FunctionDecl 0x562919768700 <line:14:1, line:15:76> line:14:13 __assert 'void (const char *, const char *, int) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x5629197684c0 <col:23, col:35> col:35 __assertion 'const char *'
| |-ParmVarDecl 0x562919768540 <col:48, col:60> col:60 __file 'const char *'
| |-ParmVarDecl 0x5629197685c0 <col:68, col:72> col:72 __line 'int'
| `-NoThrowAttr 0x5629197687b8 <line:15:22>
|-TypedefDecl 0x562919768828 <line:17:1, col:23> col:23 __u_char 'unsigned char'
| `-BuiltinType 0x562919701f70 'unsigned char'
|-TypedefDecl 0x562919768898 <line:18:1, col:28> col:28 __u_short 'unsigned short'
| `-BuiltinType 0x562919701f90 'unsigned short'
|-TypedefDecl 0x562919768908 <line:19:1, col:22> col:22 __u_int 'unsigned int'
| `-BuiltinType 0x562919701fb0 'unsigned int'
|-TypedefDecl 0x562919768978 <line:20:1, col:27> col:27 __u_long 'unsigned long'
| `-BuiltinType 0x562919701fd0 'unsigned long'
|-TypedefDecl 0x5629197689e8 <line:21:1, col:21> col:21 __int8_t 'signed char'
| `-BuiltinType 0x562919701ed0 'signed char'
|-TypedefDecl 0x562919768a58 <line:22:1, col:23> col:23 __uint8_t 'unsigned char'
| `-BuiltinType 0x562919701f70 'unsigned char'
|-TypedefDecl 0x562919768ac8 <line:23:1, col:26> col:26 __int16_t 'short'
| `-BuiltinType 0x562919701ef0 'short'
|-TypedefDecl 0x562919768b38 <line:24:1, col:28> col:28 __uint16_t 'unsigned short'
| `-BuiltinType 0x562919701f90 'unsigned short'
|-TypedefDecl 0x562919768ba8 <line:25:1, col:20> col:20 __int32_t 'int'
| `-BuiltinType 0x562919701f10 'int'
|-TypedefDecl 0x562919768c18 <line:26:1, col:22> col:22 __uint32_t 'unsigned int'
| `-BuiltinType 0x562919701fb0 'unsigned int'
|-TypedefDecl 0x562919768c88 <line:27:1, col:25> col:25 __int64_t 'long'
| `-BuiltinType 0x562919701f30 'long'
|-TypedefDecl 0x562919768cf8 <line:28:1, col:27> col:27 referenced __uint64_t 'unsigned long'
| `-BuiltinType 0x562919701fd0 'unsigned long'
|-TypedefDecl 0x562919768d68 <line:29:1, col:18> col:18 referenced __quad_t 'long'
| `-BuiltinType 0x562919701f30 'long'
|-TypedefDecl 0x562919768dd8 <line:30:1, col:27> col:27 __u_quad_t 'unsigned long'
| `-BuiltinType 0x562919701fd0 'unsigned long'
|-TypedefDecl 0x562919768e48 <line:31:1, col:27> col:27 __dev_t 'unsigned long'
| `-BuiltinType 0x562919701fd0 'unsigned long'
|-TypedefDecl 0x562919768eb8 <line:32:1, col:22> col:22 __uid_t 'unsigned int'
| `-BuiltinType 0x562919701fb0 'unsigned int'
|-TypedefDecl 0x562919768f28 <line:33:1, col:22> col:22 __gid_t 'unsigned int'
| `-BuiltinType 0x562919701fb0 'unsigned int'
|-TypedefDecl 0x562919768f98 <line:34:1, col:27> col:27 __ino_t 'unsigned long'
| `-BuiltinType 0x562919701fd0 'unsigned long'
|-TypedefDecl 0x562919769008 <line:35:1, col:27> col:27 __ino64_t 'unsigned long'
| `-BuiltinType 0x562919701fd0 'unsigned long'
|-TypedefDecl 0x562919769078 <line:36:1, col:22> col:22 __mode_t 'unsigned int'
| `-BuiltinType 0x562919701fb0 'unsigned int'
|-TypedefDecl 0x5629197690e8 <line:37:1, col:27> col:27 __nlink_t 'unsigned long'
| `-BuiltinType 0x562919701fd0 'unsigned long'
|-TypedefDecl 0x562919769158 <line:38:1, col:18> col:18 __off_t 'long'
| `-BuiltinType 0x562919701f30 'long'
|-TypedefDecl 0x5629197691c8 <line:39:1, col:18> col:18 referenced __off64_t 'long'
| `-BuiltinType 0x562919701f30 'long'
|-TypedefDecl 0x562919769238 <line:40:1, col:13> col:13 referenced __pid_t 'int'
| `-BuiltinType 0x562919701f10 'int'
|-RecordDecl 0x562919769290 <line:41:9, col:32> col:9 struct definition
| `-FieldDecl 0x562919769408 <col:18, col:29> col:22 __val 'int [2]'
|-TypedefDecl 0x5629197694c0 <col:1, col:34> col:34 __fsid_t 'struct __fsid_t':'__fsid_t'
| `-ElaboratedType 0x562919769460 'struct __fsid_t' sugar
|   `-RecordType 0x562919769310 '__fsid_t'
|     `-Record 0x562919769290 ''
|-TypedefDecl 0x562919769548 <line:42:1, col:18> col:18 referenced __clock_t 'long'
| `-BuiltinType 0x562919701f30 'long'
|-TypedefDecl 0x5629197695b8 <line:43:1, col:27> col:27 __rlim_t 'unsigned long'
| `-BuiltinType 0x562919701fd0 'unsigned long'
|-TypedefDecl 0x562919769628 <line:44:1, col:27> col:27 __rlim64_t 'unsigned long'
| `-BuiltinType 0x562919701fd0 'unsigned long'
|-TypedefDecl 0x562919769698 <line:45:1, col:22> col:22 __id_t 'unsigned int'
| `-BuiltinType 0x562919701fb0 'unsigned int'
|-TypedefDecl 0x562919769708 <line:46:1, col:18> col:18 referenced __time_t 'long'
| `-BuiltinType 0x562919701f30 'long'
|-TypedefDecl 0x562919769778 <line:47:1, col:22> col:22 __useconds_t 'unsigned int'
| `-BuiltinType 0x562919701fb0 'unsigned int'
|-TypedefDecl 0x5629197697e8 <line:48:1, col:18> col:18 __suseconds_t 'long'
| `-BuiltinType 0x562919701f30 'long'
|-TypedefDecl 0x562919769858 <line:49:1, col:13> col:13 __daddr_t 'int'
| `-BuiltinType 0x562919701f10 'int'
|-TypedefDecl 0x5629197698c8 <line:50:1, col:13> col:13 __key_t 'int'
| `-BuiltinType 0x562919701f10 'int'
|-TypedefDecl 0x562919769938 <line:51:1, col:13> col:13 referenced __clockid_t 'int'
| `-BuiltinType 0x562919701f10 'int'
|-TypedefDecl 0x5629197699a8 <line:52:1, col:16> col:16 referenced __timer_t 'void *'
| `-PointerType 0x562919702630 'void *'
|   `-BuiltinType 0x562919701e70 'void'
|-TypedefDecl 0x562919769a18 <line:53:1, col:18> col:18 __blksize_t 'long'
| `-BuiltinType 0x562919701f30 'long'
|-TypedefDecl 0x562919769a88 <line:54:1, col:18> col:18 __blkcnt_t 'long'
| `-BuiltinType 0x562919701f30 'long'
|-TypedefDecl 0x562919769af8 <line:55:1, col:18> col:18 __blkcnt64_t 'long'
| `-BuiltinType 0x562919701f30 'long'
|-TypedefDecl 0x562919769b68 <line:56:1, col:27> col:27 __fsblkcnt_t 'unsigned long'
| `-BuiltinType 0x562919701fd0 'unsigned long'
|-TypedefDecl 0x562919769bd8 <line:57:1, col:27> col:27 __fsblkcnt64_t 'unsigned long'
| `-BuiltinType 0x562919701fd0 'unsigned long'
|-TypedefDecl 0x562919769c48 <line:58:1, col:27> col:27 __fsfilcnt_t 'unsigned long'
| `-BuiltinType 0x562919701fd0 'unsigned long'
|-TypedefDecl 0x562919769cb8 <line:59:1, col:27> col:27 __fsfilcnt64_t 'unsigned long'
| `-BuiltinType 0x562919701fd0 'unsigned long'
|-TypedefDecl 0x562919769d28 <line:60:1, col:18> col:18 __fsword_t 'long'
| `-BuiltinType 0x562919701f30 'long'
|-TypedefDecl 0x562919769d98 <line:61:1, col:18> col:18 __ssize_t 'long'
| `-BuiltinType 0x562919701f30 'long'
|-TypedefDecl 0x562919769e08 <line:62:1, col:18> col:18 referenced __syscall_slong_t 'long'
| `-BuiltinType 0x562919701f30 'long'
|-TypedefDecl 0x562919769e78 <line:63:1, col:27> col:27 __syscall_ulong_t 'unsigned long'
| `-BuiltinType 0x562919701fd0 'unsigned long'
|-TypedefDecl 0x562919769f08 <line:64:1, col:19> col:19 __loff_t '__off64_t':'long'
| `-TypedefType 0x562919769ed0 '__off64_t' sugar
|   |-Typedef 0x5629197691c8 '__off64_t'
|   `-BuiltinType 0x562919701f30 'long'
|-TypedefDecl 0x56291976a000 <line:65:1, col:19> col:19 __qaddr_t '__quad_t *'
| `-PointerType 0x562919769fc0 '__quad_t *'
|   `-TypedefType 0x562919769f60 '__quad_t' sugar
|     |-Typedef 0x562919768d68 '__quad_t'
|     `-BuiltinType 0x562919701f30 'long'
|-TypedefDecl 0x56291976a070 <line:66:1, col:15> col:15 __caddr_t 'char *'
| `-PointerType 0x562919702ab0 'char *'
|   `-BuiltinType 0x562919701eb0 'char'
|-TypedefDecl 0x56291976a0e0 <line:67:1, col:18> col:18 __intptr_t 'long'
| `-BuiltinType 0x562919701f30 'long'
|-TypedefDecl 0x56291976a150 <line:68:1, col:22> col:22 __socklen_t 'unsigned int'
| `-BuiltinType 0x562919701fb0 'unsigned int'
|-FunctionDecl 0x56291976a298 <line:69:1, line:73:1> line:70:1 __bswap_32 'unsigned int (unsigned int)' static inline
| |-ParmVarDecl 0x56291976a1c0 <col:13, col:26> col:26 used __bsx 'unsigned int'
| `-CompoundStmt 0x56291976b5e8 <line:71:1, line:73:1>
|   `-ReturnStmt 0x56291976b5d8 <line:72:3, col:34>
|     `-CallExpr 0x56291976b598 <col:10, col:34> 'unsigned int'
|       |-ImplicitCastExpr 0x56291976b580 <col:10> 'unsigned int (*)(unsigned int)' <BuiltinFnToFnPtr>
|       | `-DeclRefExpr 0x56291976b510 <col:10> '<builtin fn type>' Function 0x56291976b380 '__builtin_bswap32' 'unsigned int (unsigned int)'
|       `-ImplicitCastExpr 0x56291976b5c0 <col:29> 'unsigned int' <LValueToRValue>
|         `-DeclRefExpr 0x56291976b530 <col:29> 'unsigned int' lvalue ParmVar 0x56291976a1c0 '__bsx' 'unsigned int'
|-FunctionDecl 0x56291976b380 <col:10> col:10 implicit used __builtin_bswap32 'unsigned int (unsigned int)' extern
| |-ParmVarDecl 0x56291976b420 <<invalid sloc>> <invalid sloc> 'unsigned int'
| |-NoThrowAttr 0x56291976b490 <col:10> Implicit
| `-ConstAttr 0x56291976b4e8 <col:10> Implicit
|-FunctionDecl 0x56291976b740 <line:74:1, line:78:1> line:75:1 __bswap_64 '__uint64_t (__uint64_t)' static inline
| |-ParmVarDecl 0x56291976b638 <col:13, col:24> col:24 used __bsx '__uint64_t':'unsigned long'
| `-CompoundStmt 0x56291976ba58 <line:76:1, line:78:1>
|   `-ReturnStmt 0x56291976ba48 <line:77:3, col:34>
|     `-CallExpr 0x56291976ba08 <col:10, col:34> 'unsigned long'
|       |-ImplicitCastExpr 0x56291976b9f0 <col:10> 'unsigned long (*)(unsigned long)' <BuiltinFnToFnPtr>
|       | `-DeclRefExpr 0x56291976b978 <col:10> '<builtin fn type>' Function 0x56291976b7e8 '__builtin_bswap64' 'unsigned long (unsigned long)'
|       `-ImplicitCastExpr 0x56291976ba30 <col:29> '__uint64_t':'unsigned long' <LValueToRValue>
|         `-DeclRefExpr 0x56291976b998 <col:29> '__uint64_t':'unsigned long' lvalue ParmVar 0x56291976b638 '__bsx' '__uint64_t':'unsigned long'
|-FunctionDecl 0x56291976b7e8 <col:10> col:10 implicit used __builtin_bswap64 'unsigned long (unsigned long)' extern
| |-ParmVarDecl 0x56291976b888 <<invalid sloc>> <invalid sloc> 'unsigned long'
| |-NoThrowAttr 0x56291976b8f8 <col:10> Implicit
| `-ConstAttr 0x56291976b950 <col:10> Implicit
|-TypedefDecl 0x56291976ba88 <line:79:1, col:27> col:27 referenced size_t 'unsigned long'
| `-BuiltinType 0x562919701fd0 'unsigned long'
|-TypedefDecl 0x56291976bb18 <line:81:1, col:18> col:18 referenced time_t '__time_t':'long'
| `-TypedefType 0x56291976bae0 '__time_t' sugar
|   |-Typedef 0x562919769708 '__time_t'
|   `-BuiltinType 0x562919701f30 'long'
|-RecordDecl 0x56291976bb70 <line:84:1, line:88:3> line:84:8 struct timespec definition
| |-FieldDecl 0x56291976bc28 <line:86:5, col:14> col:14 tv_sec '__time_t':'long'
| `-FieldDecl 0x56291976bcb8 <line:87:5, col:23> col:23 tv_nsec '__syscall_slong_t':'long'
|-TypedefDecl 0x56291976bd48 <line:89:1, col:17> col:17 referenced pid_t '__pid_t':'int'
| `-TypedefType 0x56291976bd10 '__pid_t' sugar
|   |-Typedef 0x562919769238 '__pid_t'
|   `-BuiltinType 0x562919701f10 'int'
|-RecordDecl 0x56291976bda0 <line:90:1, line:93:3> line:90:8 struct sched_param definition
| `-FieldDecl 0x56291976be60 <line:92:5, col:9> col:9 __sched_priority 'int'
|-RecordDecl 0x56291976beb0 <line:96:1, line:99:3> line:96:8 struct __sched_param definition
| `-FieldDecl 0x56291976bf70 <line:98:5, col:9> col:9 __sched_priority 'int'
|-TypedefDecl 0x56291976bfd8 <line:100:1, col:27> col:27 referenced __cpu_mask 'unsigned long'
| `-BuiltinType 0x562919701fd0 'unsigned long'
|-RecordDecl 0x56291976c030 <line:101:9, line:104:1> line:101:9 struct definition
| `-FieldDecl 0x56291976c2c0 <line:103:3, col:53> col:14 __bits '__cpu_mask [64]'
|-TypedefDecl 0x56291976d3a0 <line:101:1, line:104:3> col:3 referenced cpu_set_t 'struct cpu_set_t':'cpu_set_t'
| `-ElaboratedType 0x56291976c310 'struct cpu_set_t' sugar
|   `-RecordType 0x56291976c0b0 'cpu_set_t'
|     `-Record 0x56291976c030 ''
|-FunctionDecl 0x56291976d678 <line:106:1, line:107:42> line:106:12 __sched_cpucount 'int (size_t, const cpu_set_t *)' extern
| |-ParmVarDecl 0x56291976d448 <col:30, col:37> col:37 __setsize 'size_t':'unsigned long'
| |-ParmVarDecl 0x56291976d550 <col:48, col:65> col:65 __setp 'const cpu_set_t *'
| `-NoThrowAttr 0x56291976d728 <line:107:19>
|-FunctionDecl 0x56291976d900 <line:108:1, col:92> col:19 __sched_cpualloc 'cpu_set_t *(size_t)' extern
| |-ParmVarDecl 0x56291976d790 <col:37, col:44> col:44 __count 'size_t':'unsigned long'
| `-NoThrowAttr 0x56291976d9a8 <col:69>
|-FunctionDecl 0x56291976db20 <line:109:1, col:87> col:13 __sched_cpufree 'void (cpu_set_t *)' extern
| |-ParmVarDecl 0x56291976da10 <col:30, col:41> col:41 __set 'cpu_set_t *'
| `-NoThrowAttr 0x56291976dbc8 <col:64>
|-FunctionDecl 0x56291976de88 <line:112:1, line:113:45> line:112:12 sched_setparam 'int (__pid_t, const struct sched_param *)' extern
| |-ParmVarDecl 0x56291976dc30 <col:28, col:36> col:36 __pid '__pid_t':'int'
| |-ParmVarDecl 0x56291976dd68 <col:43, col:69> col:69 __param 'const struct sched_param *'
| `-NoThrowAttr 0x56291976df38 <line:113:22>
|-FunctionDecl 0x56291976e1b8 <line:114:1, col:111> col:12 sched_getparam 'int (__pid_t, struct sched_param *)' extern
| |-ParmVarDecl 0x56291976dfa0 <col:28, col:36> col:36 __pid '__pid_t':'int'
| |-ParmVarDecl 0x56291976e098 <col:43, col:63> col:63 __param 'struct sched_param *'
| `-NoThrowAttr 0x56291976e268 <col:88>
|-FunctionDecl 0x56291976e588 <line:115:1, line:116:85> line:115:12 sched_setscheduler 'int (__pid_t, int, const struct sched_param *)' extern
| |-ParmVarDecl 0x56291976e2d0 <col:32, col:40> col:40 __pid '__pid_t':'int'
| |-ParmVarDecl 0x56291976e3b0 <col:47, col:51> col:51 __policy 'int'
| |-ParmVarDecl 0x56291976e440 <line:116:11, col:37> col:37 __param 'const struct sched_param *'
| `-NoThrowAttr 0x56291976e640 <col:62>
|-FunctionDecl 0x56291976e7b8 <line:117:1, col:86> col:12 sched_getscheduler 'int (__pid_t)' extern
| |-ParmVarDecl 0x56291976e6a8 <col:32, col:40> col:40 __pid '__pid_t':'int'
| `-NoThrowAttr 0x56291976e860 <col:63>
|-FunctionDecl 0x56291976e988 <line:118:1, col:70> col:12 sched_yield 'int (void)' extern
| `-NoThrowAttr 0x56291976ea28 <col:47>
|-FunctionDecl 0x56291976eb30 <line:119:1, col:92> col:12 sched_get_priority_max 'int (int)' extern
| |-ParmVarDecl 0x56291976ea98 <col:36, col:40> col:40 __algorithm 'int'
| `-NoThrowAttr 0x56291976ebd8 <col:69>
|-FunctionDecl 0x56291976ece0 <line:120:1, col:92> col:12 sched_get_priority_min 'int (int)' extern
| |-ParmVarDecl 0x56291976ec48 <col:36, col:40> col:40 __algorithm 'int'
| `-NoThrowAttr 0x56291976ed88 <col:69>
|-FunctionDecl 0x56291976f048 <line:121:1, col:111> col:12 sched_rr_get_interval 'int (__pid_t, struct timespec *)' extern
| |-ParmVarDecl 0x56291976edf0 <col:35, col:43> col:43 __pid '__pid_t':'int'
| |-ParmVarDecl 0x56291976ef28 <col:50, col:67> col:67 __t 'struct timespec *'
| `-NoThrowAttr 0x56291976f0f8 <col:88>
|-TypedefDecl 0x56291976f188 <line:125:1, col:19> col:19 referenced clock_t '__clock_t':'long'
| `-TypedefType 0x56291976f150 '__clock_t' sugar
|   |-Typedef 0x562919769548 '__clock_t'
|   `-BuiltinType 0x562919701f30 'long'
|-TypedefDecl 0x56291976f218 <line:128:1, col:21> col:21 referenced clockid_t '__clockid_t':'int'
| `-TypedefType 0x56291976f1e0 '__clockid_t' sugar
|   |-Typedef 0x562919769938 '__clockid_t'
|   `-BuiltinType 0x562919701f10 'int'
|-TypedefDecl 0x56291976f2a8 <line:129:1, col:19> col:19 referenced timer_t '__timer_t':'void *'
| `-TypedefType 0x56291976f270 '__timer_t' sugar
|   |-Typedef 0x5629197699a8 '__timer_t'
|   `-PointerType 0x562919702630 'void *'
|     `-BuiltinType 0x562919701e70 'void'
|-RecordDecl 0x56291976f300 <line:131:1, line:144:1> line:131:8 struct tm definition
| |-FieldDecl 0x56291976f3d8 <line:133:3, col:7> col:7 tm_sec 'int'
| |-FieldDecl 0x56291976f440 <line:134:3, col:7> col:7 tm_min 'int'
| |-FieldDecl 0x56291976f4a8 <line:135:3, col:7> col:7 tm_hour 'int'
| |-FieldDecl 0x56291976f510 <line:136:3, col:7> col:7 tm_mday 'int'
| |-FieldDecl 0x56291976f578 <line:137:3, col:7> col:7 tm_mon 'int'
| |-FieldDecl 0x56291976f5e0 <line:138:3, col:7> col:7 tm_year 'int'
| |-FieldDecl 0x56291976f648 <line:139:3, col:7> col:7 tm_wday 'int'
| |-FieldDecl 0x56291976f6b0 <line:140:3, col:7> col:7 tm_yday 'int'
| |-FieldDecl 0x56291976f718 <line:141:3, col:7> col:7 tm_isdst 'int'
| |-FieldDecl 0x56291976f780 <line:142:3, col:12> col:12 tm_gmtoff 'long'
| `-FieldDecl 0x56291976f7e8 <line:143:3, col:15> col:15 tm_zone 'const char *'
|-RecordDecl 0x56291976f838 <line:147:1, line:151:3> line:147:8 struct itimerspec definition
| |-FieldDecl 0x56291976f908 <line:149:5, col:21> col:21 it_interval 'struct timespec':'struct timespec'
| `-FieldDecl 0x56291976f978 <line:150:5, col:21> col:21 it_value 'struct timespec':'struct timespec'
|-RecordDecl 0x56291976fa20 <line:152:1, col:8> col:8 struct sigevent
|-FunctionDecl 0x56291976fbf0 <line:154:1, col:68> col:16 clock 'clock_t (void)' extern
| `-NoThrowAttr 0x56291976fc90 <col:45>
|-FunctionDecl 0x56291976fe70 <line:155:1, col:77> col:15 time 'time_t (time_t *)' extern
| |-ParmVarDecl 0x56291976fd60 <col:21, col:29> col:29 __timer 'time_t *'
| `-NoThrowAttr 0x56291976ff18 <col:54>
|-FunctionDecl 0x562919770118 <line:156:1, line:157:73> line:156:15 difftime 'double (time_t, time_t)' extern
| |-ParmVarDecl 0x56291976ff80 <col:25, col:32> col:32 __time1 'time_t':'long'
| |-ParmVarDecl 0x56291976fff8 <col:41, col:48> col:48 __time0 'time_t':'long'
| |-NoThrowAttr 0x5629197701c8 <line:157:22>
| `-ConstAttr 0x562919770220 <col:63>
|-FunctionDecl 0x562919771050 <line:158:1, col:79> col:15 mktime 'time_t (struct tm *)' extern
| |-ParmVarDecl 0x562919770318 <col:23, col:34> col:34 __tp 'struct tm *'
| `-NoThrowAttr 0x5629197710f8 <col:56>
|-FunctionDecl 0x5629197714a0 <line:159:1, line:161:77> line:159:15 strftime 'size_t (char *restrict, size_t, const char *restrict, const struct tm *restrict)' extern
| |-ParmVarDecl 0x562919771168 <col:25, col:42> col:42 __s 'char *restrict'
| |-ParmVarDecl 0x5629197711e0 <col:47, col:54> col:54 __maxsize 'size_t':'unsigned long'
| |-ParmVarDecl 0x562919771260 <line:160:4, col:27> col:27 __format 'const char *restrict'
| |-ParmVarDecl 0x562919771358 <line:161:4, col:32> col:32 __tp 'const struct tm *restrict'
| `-NoThrowAttr 0x562919771560 <col:54>
|-RecordDecl 0x5629197715b8 <line:163:9, line:170:1> line:163:16 struct __locale_struct definition
| |-RecordDecl 0x562919771668 parent 0x562919701e18 <line:165:3, col:10> col:10 struct __locale_data
| |-FieldDecl 0x5629197718c8 <col:3, col:37> col:25 __locales 'struct __locale_data *[13]'
| |-FieldDecl 0x562919771968 <line:166:3, col:29> col:29 __ctype_b 'const unsigned short *'
| |-FieldDecl 0x5629197719d0 <line:167:3, col:14> col:14 __ctype_tolower 'const int *'
| |-FieldDecl 0x562919771a38 <line:168:3, col:14> col:14 __ctype_toupper 'const int *'
| `-FieldDecl 0x562919771b28 <line:169:3, col:25> col:15 __names 'const char *[13]'
|-TypedefDecl 0x562919771c48 <line:163:1, line:170:4> col:4 referenced __locale_t 'struct __locale_struct *'
| `-PointerType 0x562919771bf0 'struct __locale_struct *'
|   `-ElaboratedType 0x562919771b80 'struct __locale_struct' sugar
|     `-RecordType 0x562919771640 'struct __locale_struct'
|       `-Record 0x5629197715b8 '__locale_struct'
|-TypedefDecl 0x562919771cf8 <line:171:1, col:20> col:20 locale_t '__locale_t':'struct __locale_struct *'
| `-TypedefType 0x562919771cc0 '__locale_t' sugar
|   |-Typedef 0x562919771c48 '__locale_t'
|   `-PointerType 0x562919771bf0 'struct __locale_struct *'
|     `-ElaboratedType 0x562919771b80 'struct __locale_struct' sugar
|       `-RecordType 0x562919771640 'struct __locale_struct'
|         `-Record 0x5629197715b8 '__locale_struct'
|-FunctionDecl 0x562919773110 <line:172:1, line:175:63> line:172:15 strftime_l 'size_t (char *restrict, size_t, const char *restrict, const struct tm *restrict, __locale_t)' extern
| |-ParmVarDecl 0x562919771d68 <col:27, col:44> col:44 __s 'char *restrict'
| |-ParmVarDecl 0x562919771de0 <col:49, col:56> col:56 __maxsize 'size_t':'unsigned long'
| |-ParmVarDecl 0x562919771e60 <line:173:6, col:29> col:29 __format 'const char *restrict'
| |-ParmVarDecl 0x562919771ef0 <line:174:6, col:34> col:34 __tp 'const struct tm *restrict'
| |-ParmVarDecl 0x562919771f68 <line:175:6, col:17> col:17 __loc '__locale_t':'struct __locale_struct *'
| `-NoThrowAttr 0x5629197731d8 <col:40>
|-FunctionDecl 0x5629197733c8 <line:177:1, col:89> col:19 gmtime 'struct tm *(const time_t *)' extern
| |-ParmVarDecl 0x5629197732a0 <col:27, col:41> col:41 __timer 'const time_t *'
| `-NoThrowAttr 0x562919773470 <col:66>
|-FunctionDecl 0x562919773580 <line:178:1, col:92> col:19 localtime 'struct tm *(const time_t *)' extern
| |-ParmVarDecl 0x5629197734d8 <col:30, col:44> col:44 __timer 'const time_t *'
| `-NoThrowAttr 0x562919773628 <col:69>
|-FunctionDecl 0x562919773858 <line:180:1, line:181:75> line:180:19 gmtime_r 'struct tm *(const time_t *restrict, struct tm *restrict)' extern
| |-ParmVarDecl 0x562919773690 <col:29, col:54> col:54 __timer 'const time_t *restrict'
| |-ParmVarDecl 0x562919773720 <line:181:8, col:30> col:30 __tp 'struct tm *restrict'
| `-NoThrowAttr 0x562919773908 <col:52>
|-FunctionDecl 0x562919773ab0 <line:182:1, line:183:78> line:182:19 localtime_r 'struct tm *(const time_t *restrict, struct tm *restrict)' extern
| |-ParmVarDecl 0x562919773970 <col:32, col:57> col:57 __timer 'const time_t *restrict'
| |-ParmVarDecl 0x562919773a00 <line:183:11, col:33> col:33 __tp 'struct tm *restrict'
| `-NoThrowAttr 0x562919773b60 <col:55>
|-FunctionDecl 0x562919773cf8 <line:185:1, col:85> col:14 asctime 'char *(const struct tm *)' extern
| |-ParmVarDecl 0x562919773be0 <col:23, col:40> col:40 __tp 'const struct tm *'
| `-NoThrowAttr 0x562919773da0 <col:62>
|-FunctionDecl 0x562919773f18 <line:186:1, col:83> col:14 ctime 'char *(const time_t *)' extern
| |-ParmVarDecl 0x562919773e08 <col:21, col:35> col:35 __timer 'const time_t *'
| `-NoThrowAttr 0x562919773fc0 <col:60>
|-FunctionDecl 0x5629197742b8 <line:188:1, line:189:67> line:188:14 asctime_r 'char *(const struct tm *restrict, char *restrict)' extern
| |-ParmVarDecl 0x562919774118 <col:25, col:53> col:53 __tp 'const struct tm *restrict'
| |-ParmVarDecl 0x562919774198 <line:189:4, col:21> col:21 __buf 'char *restrict'
| `-NoThrowAttr 0x562919774368 <col:44>
|-FunctionDecl 0x562919774578 <line:190:1, line:191:72> line:190:14 ctime_r 'char *(const time_t *restrict, char *restrict)' extern
| |-ParmVarDecl 0x5629197743d0 <col:23, col:48> col:48 __timer 'const time_t *restrict'
| |-ParmVarDecl 0x562919774450 <line:191:9, col:26> col:26 __buf 'char *restrict'
| `-NoThrowAttr 0x562919774628 <col:49>
|-VarDecl 0x562919774728 <line:192:1, col:24> col:14 __tzname 'char *[2]' extern
|-VarDecl 0x5629197747a8 <line:193:1, col:12> col:12 __daylight 'int' extern
|-VarDecl 0x562919774828 <line:194:1, col:17> col:17 __timezone 'long' extern
|-VarDecl 0x5629197748f0 <line:195:1, col:22> col:14 tzname 'char *[2]' extern
|-FunctionDecl 0x562919774a20 <line:196:1, col:65> col:13 tzset 'void (void)' extern
| `-NoThrowAttr 0x562919774ac0 <col:42>
|-VarDecl 0x562919774b30 <line:197:1, col:12> col:12 daylight 'int' extern
|-VarDecl 0x562919774bb0 <line:198:1, col:17> col:17 timezone 'long' extern
|-FunctionDecl 0x562919774d38 <line:199:1, col:80> col:12 stime 'int (const time_t *)' extern
| |-ParmVarDecl 0x562919774c28 <col:19, col:33> col:33 __when 'const time_t *'
| `-NoThrowAttr 0x562919774de0 <col:57>
|-FunctionDecl 0x562919774ef0 <line:200:1, col:79> col:15 timegm 'time_t (struct tm *)' extern
| |-ParmVarDecl 0x562919774e60 <col:23, col:34> col:34 __tp 'struct tm *'
| `-NoThrowAttr 0x562919774f98 <col:56>
|-FunctionDecl 0x5629197750d0 <line:201:1, col:82> col:15 timelocal 'time_t (struct tm *)' extern
| |-ParmVarDecl 0x562919775018 <col:26, col:37> col:37 __tp 'struct tm *'
| `-NoThrowAttr 0x562919775178 <col:59>
|-FunctionDecl 0x562919775280 <line:202:1, col:99> col:12 dysize 'int (int)' extern
| |-ParmVarDecl 0x5629197751e8 <col:20, col:24> col:24 __year 'int'
| |-NoThrowAttr 0x562919775328 <col:48>
| `-ConstAttr 0x562919775380 <col:89>
|-FunctionDecl 0x5629197755e8 <line:203:1, line:204:37> line:203:12 nanosleep 'int (const struct timespec *, struct timespec *)' extern
| |-ParmVarDecl 0x562919775438 <col:23, col:46> col:46 __requested_time 'const struct timespec *'
| `-ParmVarDecl 0x5629197754c8 <line:204:9, col:26> col:26 __remaining 'struct timespec *'
|-FunctionDecl 0x562919775848 <line:205:1, col:111> col:12 clock_getres 'int (clockid_t, struct timespec *)' extern
| |-ParmVarDecl 0x5629197756d8 <col:26, col:36> col:36 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x562919775768 <col:48, col:65> col:65 __res 'struct timespec *'
| `-NoThrowAttr 0x5629197758f8 <col:88>
|-FunctionDecl 0x562919775a90 <line:206:1, col:111> col:12 clock_gettime 'int (clockid_t, struct timespec *)' extern
| |-ParmVarDecl 0x562919775960 <col:27, col:37> col:37 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x5629197759f0 <col:49, col:66> col:66 __tp 'struct timespec *'
| `-NoThrowAttr 0x562919775b40 <col:88>
|-FunctionDecl 0x562919775d58 <line:207:1, line:208:45> line:207:12 clock_settime 'int (clockid_t, const struct timespec *)' extern
| |-ParmVarDecl 0x562919775ba8 <col:27, col:37> col:37 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x562919775c38 <col:49, col:72> col:72 __tp 'const struct timespec *'
| `-NoThrowAttr 0x562919775e08 <line:208:22>
|-FunctionDecl 0x562919776178 <line:209:1, line:211:30> line:209:12 clock_nanosleep 'int (clockid_t, int, const struct timespec *, struct timespec *)' extern
| |-ParmVarDecl 0x562919775e70 <col:29, col:39> col:39 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x562919775ef0 <col:51, col:55> col:55 __flags 'int'
| |-ParmVarDecl 0x562919775f80 <line:210:8, col:31> col:31 __req 'const struct timespec *'
| `-ParmVarDecl 0x562919776010 <line:211:8, col:25> col:25 __rem 'struct timespec *'
|-FunctionDecl 0x562919776478 <line:212:1, col:108> col:12 clock_getcpuclockid 'int (pid_t, clockid_t *)' extern
| |-ParmVarDecl 0x562919776278 <col:33, col:39> col:39 __pid 'pid_t':'int'
| |-ParmVarDecl 0x562919776350 <col:46, col:57> col:57 __clock_id 'clockid_t *'
| `-NoThrowAttr 0x562919776528 <col:85>
|-FunctionDecl 0x562919776918 <line:213:1, line:215:75> line:213:12 timer_create 'int (clockid_t, struct sigevent *restrict, timer_t *restrict)' extern
| |-ParmVarDecl 0x562919776590 <col:26, col:36> col:36 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x5629197766c8 <line:214:5, col:33> col:33 __evp 'struct sigevent *restrict'
| |-ParmVarDecl 0x5629197767d0 <line:215:5, col:25> col:25 __timerid 'timer_t *restrict'
| `-NoThrowAttr 0x5629197769d0 <col:52>
|-FunctionDecl 0x562919776b48 <line:216:1, col:84> col:12 timer_delete 'int (timer_t)' extern
| |-ParmVarDecl 0x562919776a38 <col:26, col:34> col:34 __timerid 'timer_t':'void *'
| `-NoThrowAttr 0x562919776bf0 <col:61>
|-FunctionDecl 0x5629197770f0 <line:217:1, line:219:85> line:217:12 timer_settime 'int (timer_t, int, const struct itimerspec *restrict, struct itimerspec *restrict)' extern
| |-ParmVarDecl 0x562919776c58 <col:27, col:35> col:35 __timerid 'timer_t':'void *'
| |-ParmVarDecl 0x562919776cd8 <col:46, col:50> col:50 __flags 'int'
| |-ParmVarDecl 0x562919776e08 <line:218:6, col:42> col:42 __value 'const struct itimerspec *restrict'
| |-ParmVarDecl 0x562919776ef8 <line:219:6, col:36> col:36 __ovalue 'struct itimerspec *restrict'
| `-NoThrowAttr 0x5629197771b0 <col:62>
|-FunctionDecl 0x5629197773c8 <line:220:1, line:221:45> line:220:12 timer_gettime 'int (timer_t, struct itimerspec *)' extern
| |-ParmVarDecl 0x562919777218 <col:27, col:35> col:35 __timerid 'timer_t':'void *'
| |-ParmVarDecl 0x5629197772a8 <col:46, col:65> col:65 __value 'struct itimerspec *'
| `-NoThrowAttr 0x562919777478 <line:221:22>
|-FunctionDecl 0x562919777578 <line:222:1, col:88> col:12 timer_getoverrun 'int (timer_t)' extern
| |-ParmVarDecl 0x5629197774e0 <col:30, col:38> col:38 __timerid 'timer_t':'void *'
| `-NoThrowAttr 0x562919777620 <col:65>
|-TypedefDecl 0x562919777690 <line:224:1, col:27> col:27 referenced pthread_t 'unsigned long'
| `-BuiltinType 0x562919701fd0 'unsigned long'
|-RecordDecl 0x5629197776e8 <line:225:1, line:229:1> line:225:7 union pthread_attr_t definition
| |-FieldDecl 0x562919777830 <line:227:3, col:17> col:8 __size 'char [56]'
| `-FieldDecl 0x562919777898 <line:228:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x562919777948 <line:230:1, col:30> col:30 referenced pthread_attr_t 'union pthread_attr_t':'union pthread_attr_t'
| `-ElaboratedType 0x5629197778f0 'union pthread_attr_t' sugar
|   `-RecordType 0x562919777770 'union pthread_attr_t'
|     `-Record 0x5629197776e8 'pthread_attr_t'
|-RecordDecl 0x5629197779a0 <line:231:9, line:235:1> line:231:16 struct __pthread_internal_list definition
| |-FieldDecl 0x562919777b18 <line:233:3, col:35> col:35 __prev 'struct __pthread_internal_list *'
| `-FieldDecl 0x562919777b90 <line:234:3, col:35> col:35 __next 'struct __pthread_internal_list *'
|-TypedefDecl 0x562919777c40 <line:231:1, line:235:3> col:3 referenced __pthread_list_t 'struct __pthread_internal_list':'struct __pthread_internal_list'
| `-ElaboratedType 0x562919777be0 'struct __pthread_internal_list' sugar
|   `-RecordType 0x562919777a20 'struct __pthread_internal_list'
|     `-Record 0x5629197779a0 '__pthread_internal_list'
|-RecordDecl 0x562919777cb0 <line:236:9, line:250:1> line:236:9 union definition
| |-RecordDecl 0x562919777d58 parent 0x562919701e18 <line:238:3, line:247:3> line:238:10 struct __pthread_mutex_s definition
| | |-FieldDecl 0x562919777e30 <line:240:5, col:9> col:9 __lock 'int'
| | |-FieldDecl 0x562919777e98 <line:241:5, col:18> col:18 __count 'unsigned int'
| | |-FieldDecl 0x562919777f00 <line:242:5, col:9> col:9 __owner 'int'
| | |-FieldDecl 0x562919777f68 <line:243:5, col:18> col:18 __nusers 'unsigned int'
| | |-FieldDecl 0x562919777fd0 <line:244:5, col:9> col:9 __kind 'int'
| | |-FieldDecl 0x562919778038 <line:245:5, col:9> col:9 __spins 'int'
| | `-FieldDecl 0x56291977c110 <line:246:5, col:22> col:22 __list '__pthread_list_t':'struct __pthread_internal_list'
| |-FieldDecl 0x56291977c1c0 <line:238:3, line:247:5> col:5 __data 'struct __pthread_mutex_s':'struct __pthread_mutex_s'
| |-FieldDecl 0x56291977c2b0 <line:248:3, col:17> col:8 __size 'char [40]'
| `-FieldDecl 0x56291977c318 <line:249:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x56291977c4a0 <line:236:1, line:250:3> col:3 referenced pthread_mutex_t 'union pthread_mutex_t':'pthread_mutex_t'
| `-ElaboratedType 0x56291977c440 'union pthread_mutex_t' sugar
|   `-RecordType 0x562919777d30 'pthread_mutex_t'
|     `-Record 0x562919777cb0 ''
|-RecordDecl 0x56291977c510 <line:251:9, line:255:1> line:251:9 union definition
| |-FieldDecl 0x56291977c650 <line:253:3, col:16> col:8 __size 'char [4]'
| `-FieldDecl 0x56291977c6b8 <line:254:3, col:7> col:7 __align 'int'
|-TypedefDecl 0x56291977c770 <line:251:1, line:255:3> col:3 referenced pthread_mutexattr_t 'union pthread_mutexattr_t':'pthread_mutexattr_t'
| `-ElaboratedType 0x56291977c710 'union pthread_mutexattr_t' sugar
|   `-RecordType 0x56291977c590 'pthread_mutexattr_t'
|     `-Record 0x56291977c510 ''
|-RecordDecl 0x56291977c7e0 <line:256:9, line:271:1> line:256:9 union definition
| |-RecordDecl 0x56291977c888 <line:258:3, line:268:3> line:258:3 struct definition
| | |-FieldDecl 0x56291977c950 <line:260:5, col:9> col:9 __lock 'int'
| | |-FieldDecl 0x56291977c9b8 <line:261:5, col:18> col:18 __futex 'unsigned int'
| | |-FieldDecl 0x56291977ca20 <line:262:19, col:42> col:42 __total_seq 'unsigned long long'
| | |-FieldDecl 0x56291977ca88 <line:263:19, col:42> col:42 __wakeup_seq 'unsigned long long'
| | |-FieldDecl 0x56291977caf0 <line:264:19, col:42> col:42 __woken_seq 'unsigned long long'
| | |-FieldDecl 0x56291977cb58 <line:265:5, col:11> col:11 __mutex 'void *'
| | |-FieldDecl 0x56291977cbc0 <line:266:5, col:18> col:18 __nwaiters 'unsigned int'
| | `-FieldDecl 0x56291977cc28 <line:267:5, col:18> col:18 __broadcast_seq 'unsigned int'
| |-FieldDecl 0x56291977cce0 <line:258:3, line:268:5> col:5 __data 'struct (anonymous struct at ./split_0/mix037_power.oepc_false-unreach-call.i:258:3)':'struct pthread_cond_t::(anonymous at ./split_0/mix037_power.oepc_false-unreach-call.i:258:3)'
| |-FieldDecl 0x56291977cdd0 <line:269:3, col:17> col:8 __size 'char [48]'
| `-FieldDecl 0x56291977ce38 <line:270:17, col:31> col:31 __align 'long long'
|-TypedefDecl 0x56291977cf70 <line:256:1, line:271:3> col:3 referenced pthread_cond_t 'union pthread_cond_t':'pthread_cond_t'
| `-ElaboratedType 0x56291977cf10 'union pthread_cond_t' sugar
|   `-RecordType 0x56291977c860 'pthread_cond_t'
|     `-Record 0x56291977c7e0 ''
|-RecordDecl 0x56291977cfe0 <line:272:9, line:276:1> line:272:9 union definition
| |-FieldDecl 0x56291977e130 <line:274:3, col:16> col:8 __size 'char [4]'
| `-FieldDecl 0x56291977e198 <line:275:3, col:7> col:7 __align 'int'
|-TypedefDecl 0x56291977e250 <line:272:1, line:276:3> col:3 referenced pthread_condattr_t 'union pthread_condattr_t':'pthread_condattr_t'
| `-ElaboratedType 0x56291977e1f0 'union pthread_condattr_t' sugar
|   `-RecordType 0x56291977d060 'pthread_condattr_t'
|     `-Record 0x56291977cfe0 ''
|-TypedefDecl 0x56291977e2d8 <line:277:1, col:22> col:22 referenced pthread_key_t 'unsigned int'
| `-BuiltinType 0x562919701fb0 'unsigned int'
|-TypedefDecl 0x56291977e348 <line:278:1, col:13> col:13 referenced pthread_once_t 'int'
| `-BuiltinType 0x562919701f10 'int'
|-RecordDecl 0x56291977e3a0 <line:279:9, line:297:1> line:279:9 union definition
| |-RecordDecl 0x56291977e448 <line:281:3, line:294:3> line:281:3 struct definition
| | |-FieldDecl 0x56291977e510 <line:283:5, col:9> col:9 __lock 'int'
| | |-FieldDecl 0x56291977e578 <line:284:5, col:18> col:18 __nr_readers 'unsigned int'
| | |-FieldDecl 0x56291977e5e0 <line:285:5, col:18> col:18 __readers_wakeup 'unsigned int'
| | |-FieldDecl 0x56291977e648 <line:286:5, col:18> col:18 __writer_wakeup 'unsigned int'
| | |-FieldDecl 0x56291977e6b0 <line:287:5, col:18> col:18 __nr_readers_queued 'unsigned int'
| | |-FieldDecl 0x56291977e718 <line:288:5, col:18> col:18 __nr_writers_queued 'unsigned int'
| | |-FieldDecl 0x56291977e780 <line:289:5, col:9> col:9 __writer 'int'
| | |-FieldDecl 0x56291977e7e8 <line:290:5, col:9> col:9 __shared 'int'
| | |-FieldDecl 0x56291977e850 <line:291:5, col:23> col:23 __pad1 'unsigned long'
| | |-FieldDecl 0x56291977e8b8 <line:292:5, col:23> col:23 __pad2 'unsigned long'
| | `-FieldDecl 0x56291977e920 <line:293:5, col:18> col:18 __flags 'unsigned int'
| |-FieldDecl 0x56291977e9d0 <line:281:3, line:294:5> col:5 __data 'struct (anonymous struct at ./split_0/mix037_power.oepc_false-unreach-call.i:281:3)':'struct pthread_rwlock_t::(anonymous at ./split_0/mix037_power.oepc_false-unreach-call.i:281:3)'
| |-FieldDecl 0x56291977ea78 <line:295:3, col:17> col:8 __size 'char [56]'
| `-FieldDecl 0x56291977eae0 <line:296:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x56291977ec30 <line:279:1, line:297:3> col:3 referenced pthread_rwlock_t 'union pthread_rwlock_t':'pthread_rwlock_t'
| `-ElaboratedType 0x56291977ebd0 'union pthread_rwlock_t' sugar
|   `-RecordType 0x56291977e420 'pthread_rwlock_t'
|     `-Record 0x56291977e3a0 ''
|-RecordDecl 0x56291977eca0 <line:298:9, line:302:1> line:298:9 union definition
| |-FieldDecl 0x56291977ede0 <line:300:3, col:16> col:8 __size 'char [8]'
| `-FieldDecl 0x56291977ee48 <line:301:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x56291977ef00 <line:298:1, line:302:3> col:3 referenced pthread_rwlockattr_t 'union pthread_rwlockattr_t':'pthread_rwlockattr_t'
| `-ElaboratedType 0x56291977eea0 'union pthread_rwlockattr_t' sugar
|   `-RecordType 0x56291977ed20 'pthread_rwlockattr_t'
|     `-Record 0x56291977eca0 ''
|-TypedefDecl 0x56291977ef88 <line:303:1, col:22> col:22 referenced pthread_spinlock_t 'volatile int'
| `-QualType 0x562919701f14 'volatile int' volatile
|   `-BuiltinType 0x562919701f10 'int'
|-RecordDecl 0x56291977efe0 <line:304:9, line:308:1> line:304:9 union definition
| |-FieldDecl 0x562919780140 <line:306:3, col:17> col:8 __size 'char [32]'
| `-FieldDecl 0x5629197801a8 <line:307:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x562919780260 <line:304:1, line:308:3> col:3 referenced pthread_barrier_t 'union pthread_barrier_t':'pthread_barrier_t'
| `-ElaboratedType 0x562919780200 'union pthread_barrier_t' sugar
|   `-RecordType 0x56291977f060 'pthread_barrier_t'
|     `-Record 0x56291977efe0 ''
|-RecordDecl 0x5629197802d0 <line:309:9, line:313:1> line:309:9 union definition
| |-FieldDecl 0x5629197803d0 <line:311:3, col:16> col:8 __size 'char [4]'
| `-FieldDecl 0x562919780438 <line:312:3, col:7> col:7 __align 'int'
|-TypedefDecl 0x5629197804f0 <line:309:1, line:313:3> col:3 referenced pthread_barrierattr_t 'union pthread_barrierattr_t':'pthread_barrierattr_t'
| `-ElaboratedType 0x562919780490 'union pthread_barrierattr_t' sugar
|   `-RecordType 0x562919780350 'pthread_barrierattr_t'
|     `-Record 0x5629197802d0 ''
|-TypedefDecl 0x562919780608 <line:314:1, col:29> col:18 referenced __jmp_buf 'long [8]'
| `-ConstantArrayType 0x5629197805a0 'long [8]' 8 
|   `-BuiltinType 0x562919701f30 'long'
|-EnumDecl 0x562919780660 <line:315:1, line:319:1> line:315:1
| |-EnumConstantDecl 0x562919780728 <line:317:3> col:3 PTHREAD_CREATE_JOINABLE 'int'
| `-EnumConstantDecl 0x562919780778 <line:318:3> col:3 PTHREAD_CREATE_DETACHED 'int'
|-EnumDecl 0x5629197807c8 <line:320:1, line:331:1> line:320:1
| |-EnumConstantDecl 0x562919780898 <line:322:3> col:3 referenced PTHREAD_MUTEX_TIMED_NP 'int'
| |-EnumConstantDecl 0x5629197808e8 <line:323:3> col:3 referenced PTHREAD_MUTEX_RECURSIVE_NP 'int'
| |-EnumConstantDecl 0x562919780938 <line:324:3> col:3 referenced PTHREAD_MUTEX_ERRORCHECK_NP 'int'
| |-EnumConstantDecl 0x562919780988 <line:325:3> col:3 PTHREAD_MUTEX_ADAPTIVE_NP 'int'
| |-EnumConstantDecl 0x562919780a10 <line:327:3, col:26> col:3 referenced PTHREAD_MUTEX_NORMAL 'int'
| | `-ConstantExpr 0x5629197809f8 <col:26> 'int'
| |   `-DeclRefExpr 0x5629197809d8 <col:26> 'int' EnumConstant 0x562919780898 'PTHREAD_MUTEX_TIMED_NP' 'int'
| |-EnumConstantDecl 0x562919780a98 <line:328:3, col:29> col:3 PTHREAD_MUTEX_RECURSIVE 'int'
| | `-ConstantExpr 0x562919780a80 <col:29> 'int'
| |   `-DeclRefExpr 0x562919780a60 <col:29> 'int' EnumConstant 0x5629197808e8 'PTHREAD_MUTEX_RECURSIVE_NP' 'int'
| |-EnumConstantDecl 0x562919780b20 <line:329:3, col:30> col:3 PTHREAD_MUTEX_ERRORCHECK 'int'
| | `-ConstantExpr 0x562919780b08 <col:30> 'int'
| |   `-DeclRefExpr 0x562919780ae8 <col:30> 'int' EnumConstant 0x562919780938 'PTHREAD_MUTEX_ERRORCHECK_NP' 'int'
| `-EnumConstantDecl 0x562919780ba8 <line:330:3, col:27> col:3 PTHREAD_MUTEX_DEFAULT 'int'
|   `-ConstantExpr 0x562919780b90 <col:27> 'int'
|     `-DeclRefExpr 0x562919780b70 <col:27> 'int' EnumConstant 0x562919780a10 'PTHREAD_MUTEX_NORMAL' 'int'
|-EnumDecl 0x562919780bf8 <line:332:1, line:338:1> line:332:1
| |-EnumConstantDecl 0x562919780cc8 <line:334:3> col:3 referenced PTHREAD_MUTEX_STALLED 'int'
| |-EnumConstantDecl 0x562919780d50 <line:335:3, col:30> col:3 PTHREAD_MUTEX_STALLED_NP 'int'
| | `-ConstantExpr 0x562919780d38 <col:30> 'int'
| |   `-DeclRefExpr 0x562919780d18 <col:30> 'int' EnumConstant 0x562919780cc8 'PTHREAD_MUTEX_STALLED' 'int'
| |-EnumConstantDecl 0x562919780da0 <line:336:3> col:3 referenced PTHREAD_MUTEX_ROBUST 'int'
| `-EnumConstantDecl 0x562919780e28 <line:337:3, col:29> col:3 PTHREAD_MUTEX_ROBUST_NP 'int'
|   `-ConstantExpr 0x562919780e10 <col:29> 'int'
|     `-DeclRefExpr 0x562919780df0 <col:29> 'int' EnumConstant 0x562919780da0 'PTHREAD_MUTEX_ROBUST' 'int'
|-EnumDecl 0x562919780e78 <line:339:1, line:344:1> line:339:1
| |-EnumConstantDecl 0x562919780f48 <line:341:3> col:3 PTHREAD_PRIO_NONE 'int'
| |-EnumConstantDecl 0x562919780f98 <line:342:3> col:3 PTHREAD_PRIO_INHERIT 'int'
| `-EnumConstantDecl 0x562919780fe8 <line:343:3> col:3 PTHREAD_PRIO_PROTECT 'int'
|-EnumDecl 0x562919781038 <line:345:1, line:351:1> line:345:1
| |-EnumConstantDecl 0x562919781150 <line:347:3> col:3 referenced PTHREAD_RWLOCK_PREFER_READER_NP 'int'
| |-EnumConstantDecl 0x5629197811a0 <line:348:3> col:3 PTHREAD_RWLOCK_PREFER_WRITER_NP 'int'
| |-EnumConstantDecl 0x5629197811f0 <line:349:3> col:3 PTHREAD_RWLOCK_PREFER_WRITER_NONRECURSIVE_NP 'int'
| `-EnumConstantDecl 0x562919781278 <line:350:3, col:31> col:3 PTHREAD_RWLOCK_DEFAULT_NP 'int'
|   `-ConstantExpr 0x562919781260 <col:31> 'int'
|     `-DeclRefExpr 0x562919781240 <col:31> 'int' EnumConstant 0x562919781150 'PTHREAD_RWLOCK_PREFER_READER_NP' 'int'
|-EnumDecl 0x5629197812c8 <line:352:1, line:356:1> line:352:1
| |-EnumConstantDecl 0x562919781398 <line:354:3> col:3 PTHREAD_INHERIT_SCHED 'int'
| `-EnumConstantDecl 0x5629197813e8 <line:355:3> col:3 PTHREAD_EXPLICIT_SCHED 'int'
|-EnumDecl 0x562919781438 <line:357:1, line:361:1> line:357:1
| |-EnumConstantDecl 0x562919781508 <line:359:3> col:3 PTHREAD_SCOPE_SYSTEM 'int'
| `-EnumConstantDecl 0x562919781558 <line:360:3> col:3 PTHREAD_SCOPE_PROCESS 'int'
|-EnumDecl 0x5629197815a8 <line:362:1, line:366:1> line:362:1
| |-EnumConstantDecl 0x562919781678 <line:364:3> col:3 PTHREAD_PROCESS_PRIVATE 'int'
| `-EnumConstantDecl 0x5629197816c8 <line:365:3> col:3 PTHREAD_PROCESS_SHARED 'int'
|-RecordDecl 0x562919781718 <line:367:1, line:373:1> line:367:8 struct _pthread_cleanup_buffer definition
| |-FieldDecl 0x562919781958 <line:369:3, col:28> col:10 __routine 'void (*)(void *)'
| |-FieldDecl 0x5629197819c0 <line:370:3, col:9> col:9 __arg 'void *'
| |-FieldDecl 0x562919781a28 <line:371:3, col:7> col:7 __canceltype 'int'
| `-FieldDecl 0x562919781b48 <line:372:3, col:35> col:35 __prev 'struct _pthread_cleanup_buffer *'
|-EnumDecl 0x562919781b98 <line:374:1, line:378:1> line:374:1
| |-EnumConstantDecl 0x562919781c68 <line:376:3> col:3 PTHREAD_CANCEL_ENABLE 'int'
| `-EnumConstantDecl 0x562919781cb8 <line:377:3> col:3 PTHREAD_CANCEL_DISABLE 'int'
|-EnumDecl 0x562919781d08 <line:379:1, line:383:1> line:379:1
| |-EnumConstantDecl 0x562919781dd8 <line:381:3> col:3 PTHREAD_CANCEL_DEFERRED 'int'
| `-EnumConstantDecl 0x562919781e28 <line:382:3> col:3 PTHREAD_CANCEL_ASYNCHRONOUS 'int'
|-FunctionDecl 0x562919782488 <line:385:1, line:388:96> line:385:12 used pthread_create 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' extern
| |-ParmVarDecl 0x562919781f20 <col:28, col:50> col:50 __newthread 'pthread_t *restrict'
| |-ParmVarDecl 0x562919782030 <line:386:7, col:40> col:40 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x562919782270 <line:387:7, col:39> col:15 __start_routine 'void *(*)(void *)'
| |-ParmVarDecl 0x5629197822f0 <line:388:7, col:24> col:24 __arg 'void *restrict'
| |-NoThrowAttr 0x562919782548 <col:47>
| |-NonNullAttr 0x5629197825a0 <col:77, col:94> 1 3
| `-CallbackAttr 0x5629197825d8 <line:385:12> Implicit 2 3
|-FunctionDecl 0x562919782700 <line:389:1, col:72> col:13 pthread_exit 'void (void *) __attribute__((noreturn))' extern
| `-ParmVarDecl 0x562919782630 <col:27, col:33> col:33 __retval 'void *'
|-FunctionDecl 0x562919782958 <line:390:1, col:64> col:12 pthread_join 'int (pthread_t, void **)' extern
| |-ParmVarDecl 0x5629197827b8 <col:26, col:36> col:36 __th 'pthread_t':'unsigned long'
| `-ParmVarDecl 0x562919782838 <col:42, col:49> col:49 __thread_return 'void **'
|-FunctionDecl 0x562919782b28 <line:391:1, col:83> col:12 pthread_detach 'int (pthread_t)' extern
| |-ParmVarDecl 0x562919782a18 <col:28, col:38> col:38 __th 'pthread_t':'unsigned long'
| `-NoThrowAttr 0x562919782bd0 <col:60>
|-FunctionDecl 0x562919782d20 <line:392:1, col:105> col:18 pthread_self 'pthread_t (void)' extern
| |-NoThrowAttr 0x562919782dc0 <col:54>
| `-ConstAttr 0x562919782e18 <col:95>
|-FunctionDecl 0x562919782fe8 <line:393:1, line:394:70> line:393:12 pthread_equal 'int (pthread_t, pthread_t)' extern
| |-ParmVarDecl 0x562919782e50 <col:27, col:37> col:37 __thread1 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x562919782ec8 <col:48, col:58> col:58 __thread2 'pthread_t':'unsigned long'
| |-NoThrowAttr 0x562919783098 <line:394:19>
| `-ConstAttr 0x5629197830f0 <col:60>
|-FunctionDecl 0x562919784b08 <line:395:1, col:128> col:12 pthread_attr_init 'int (pthread_attr_t *)' extern
| |-ParmVarDecl 0x5629197849d0 <col:31, col:47> col:47 __attr 'pthread_attr_t *'
| |-NoThrowAttr 0x562919784bb0 <col:71>
| `-NonNullAttr 0x562919784c08 <col:112, col:126> 1
|-FunctionDecl 0x562919784d10 <line:396:1, line:397:79> line:396:12 pthread_attr_destroy 'int (pthread_attr_t *)' extern
| |-ParmVarDecl 0x562919784c58 <col:34, col:50> col:50 __attr 'pthread_attr_t *'
| |-NoThrowAttr 0x562919784db8 <line:397:22>
| `-NonNullAttr 0x562919784e10 <col:63, col:77> 1
|-FunctionDecl 0x562919785038 <line:398:1, line:400:82> line:398:12 pthread_attr_getdetachstate 'int (const pthread_attr_t *, int *)' extern
| |-ParmVarDecl 0x562919784e58 <col:41, col:63> col:63 __attr 'const pthread_attr_t *'
| |-ParmVarDecl 0x562919784ed8 <line:399:6, col:11> col:11 __detachstate 'int *'
| |-NoThrowAttr 0x5629197850e8 <line:400:22>
| `-NonNullAttr 0x562919785140 <col:63, col:80> 1 2
|-FunctionDecl 0x562919785348 <line:401:1, line:403:79> line:401:12 pthread_attr_setdetachstate 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x562919785188 <col:41, col:57> col:57 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x562919785208 <line:402:6, col:10> col:10 __detachstate 'int'
| |-NoThrowAttr 0x5629197853f8 <line:403:22>
| `-NonNullAttr 0x562919785450 <col:63, col:77> 1
|-FunctionDecl 0x5629197856a8 <line:404:1, line:406:82> line:404:12 pthread_attr_getguardsize 'int (const pthread_attr_t *, size_t *)' extern
| |-ParmVarDecl 0x562919785498 <col:39, col:61> col:61 __attr 'const pthread_attr_t *'
| |-ParmVarDecl 0x562919785540 <line:405:11, col:19> col:19 __guardsize 'size_t *'
| |-NoThrowAttr 0x562919785758 <line:406:22>
| `-NonNullAttr 0x5629197857b0 <col:63, col:80> 1 2
|-FunctionDecl 0x5629197869e8 <line:407:1, line:409:79> line:407:12 pthread_attr_setguardsize 'int (pthread_attr_t *, size_t)' extern
| |-ParmVarDecl 0x5629197857f8 <col:39, col:55> col:55 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x562919785870 <line:408:11, col:18> col:18 __guardsize 'size_t':'unsigned long'
| |-NoThrowAttr 0x562919786a98 <line:409:22>
| `-NonNullAttr 0x562919786af0 <col:63, col:77> 1
|-FunctionDecl 0x562919786d28 <line:410:1, line:412:82> line:410:12 pthread_attr_getschedparam 'int (const pthread_attr_t *restrict, struct sched_param *restrict)' extern
| |-ParmVarDecl 0x562919786b38 <col:40, col:73> col:73 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x562919786bc8 <line:411:12, col:43> col:43 __param 'struct sched_param *restrict'
| |-NoThrowAttr 0x562919786dd8 <line:412:22>
| `-NonNullAttr 0x562919786e30 <col:63, col:80> 1 2
|-FunctionDecl 0x562919787068 <line:413:1, line:415:97> line:413:12 pthread_attr_setschedparam 'int (pthread_attr_t *restrict, const struct sched_param *restrict)' extern
| |-ParmVarDecl 0x562919786e78 <col:40, col:67> col:67 __attr 'pthread_attr_t *restrict'
| |-ParmVarDecl 0x562919786f08 <line:414:12, line:415:12> col:12 __param 'const struct sched_param *restrict'
| |-NoThrowAttr 0x562919787118 <col:37>
| `-NonNullAttr 0x562919787170 <col:78, col:95> 1 2
|-FunctionDecl 0x562919787358 <line:416:1, line:418:82> line:416:12 pthread_attr_getschedpolicy 'int (const pthread_attr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x5629197871b8 <col:41, line:417:6> col:6 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x562919787238 <col:14, col:30> col:30 __policy 'int *restrict'
| |-NoThrowAttr 0x562919787408 <line:418:22>
| `-NonNullAttr 0x562919787460 <col:63, col:80> 1 2
|-FunctionDecl 0x5629197875e8 <line:419:1, line:420:79> line:419:12 pthread_attr_setschedpolicy 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x5629197874a8 <col:41, col:57> col:57 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x562919787528 <col:65, col:69> col:69 __policy 'int'
| |-NoThrowAttr 0x562919787698 <line:420:22>
| `-NonNullAttr 0x5629197876f0 <col:63, col:77> 1
|-FunctionDecl 0x562919787898 <line:421:1, line:423:82> line:421:12 pthread_attr_getinheritsched 'int (const pthread_attr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x562919787738 <col:42, line:422:7> col:7 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x5629197877b8 <col:15, col:31> col:31 __inherit 'int *restrict'
| |-NoThrowAttr 0x562919787948 <line:423:22>
| `-NonNullAttr 0x5629197879c0 <col:63, col:80> 1 2
|-FunctionDecl 0x562919787b48 <line:424:1, line:426:79> line:424:12 pthread_attr_setinheritsched 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x562919787a08 <col:42, col:58> col:58 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x562919787a88 <line:425:7, col:11> col:11 __inherit 'int'
| |-NoThrowAttr 0x562919787bf8 <line:426:22>
| `-NonNullAttr 0x562919787c50 <col:63, col:77> 1
|-FunctionDecl 0x562919787df8 <line:427:1, line:429:82> line:427:12 pthread_attr_getscope 'int (const pthread_attr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x562919787c98 <col:35, col:68> col:68 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x562919787d18 <line:428:7, col:23> col:23 __scope 'int *restrict'
| |-NoThrowAttr 0x562919787ea8 <line:429:22>
| `-NonNullAttr 0x562919787f00 <col:63, col:80> 1 2
|-FunctionDecl 0x562919788088 <line:430:1, line:431:79> line:430:12 pthread_attr_setscope 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x562919787f48 <col:35, col:51> col:51 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x562919787fc8 <col:59, col:63> col:63 __scope 'int'
| |-NoThrowAttr 0x562919788138 <line:431:22>
| `-NonNullAttr 0x562919788190 <col:63, col:77> 1
|-FunctionDecl 0x5629197883b8 <line:432:1, line:434:115> line:432:12 pthread_attr_getstackaddr 'int (const pthread_attr_t *restrict, void **restrict)' extern
| |-ParmVarDecl 0x5629197881d8 <col:39, line:433:11> col:11 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x562919788258 <col:19, col:37> col:37 __stackaddr 'void **restrict'
| |-NoThrowAttr 0x562919788468 <line:434:22>
| |-NonNullAttr 0x5629197884c0 <col:63, col:80> 1 2
| `-DeprecatedAttr 0x5629197884f8 <col:100> "" ""
|-FunctionDecl 0x562919788708 <line:435:1, line:437:112> line:435:12 pthread_attr_setstackaddr 'int (pthread_attr_t *, void *)' extern
| |-ParmVarDecl 0x562919788548 <col:39, col:55> col:55 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x5629197885c8 <line:436:11, col:17> col:17 __stackaddr 'void *'
| |-NoThrowAttr 0x5629197887b8 <line:437:22>
| |-NonNullAttr 0x562919788810 <col:63, col:77> 1
| `-DeprecatedAttr 0x562919788848 <col:97> "" ""
|-FunctionDecl 0x562919788a48 <line:438:1, line:440:82> line:438:12 pthread_attr_getstacksize 'int (const pthread_attr_t *restrict, size_t *restrict)' extern
| |-ParmVarDecl 0x562919788898 <col:39, line:439:11> col:11 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x562919788910 <col:19, col:38> col:38 __stacksize 'size_t *restrict'
| |-NoThrowAttr 0x562919788af8 <line:440:22>
| `-NonNullAttr 0x562919788b50 <col:63, col:80> 1 2
|-FunctionDecl 0x562919788cd0 <line:441:1, line:443:79> line:441:12 pthread_attr_setstacksize 'int (pthread_attr_t *, size_t)' extern
| |-ParmVarDecl 0x562919788b98 <col:39, col:55> col:55 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x562919788c10 <line:442:11, col:18> col:18 __stacksize 'size_t':'unsigned long'
| |-NoThrowAttr 0x562919788d80 <line:443:22>
| `-NonNullAttr 0x562919788dd8 <col:63, col:77> 1
|-FunctionDecl 0x5629197890c8 <line:444:1, line:447:85> line:444:12 pthread_attr_getstack 'int (const pthread_attr_t *restrict, void **restrict, size_t *restrict)' extern
| |-ParmVarDecl 0x562919788e28 <col:35, col:68> col:68 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x562919788ea8 <line:445:7, col:25> col:25 __stackaddr 'void **restrict'
| |-ParmVarDecl 0x562919788f20 <line:446:7, col:26> col:26 __stacksize 'size_t *restrict'
| |-NoThrowAttr 0x562919789180 <line:447:22>
| `-NonNullAttr 0x5629197891d8 <col:63, col:83> 1 2 3
|-FunctionDecl 0x562919789488 <line:448:1, line:449:100> line:448:12 pthread_attr_setstack 'int (pthread_attr_t *, void *, size_t)' extern
| |-ParmVarDecl 0x562919789230 <col:35, col:51> col:51 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x5629197892b0 <col:59, col:65> col:65 __stackaddr 'void *'
| |-ParmVarDecl 0x562919789328 <line:449:7, col:14> col:14 __stacksize 'size_t':'unsigned long'
| |-NoThrowAttr 0x562919789540 <col:43>
| `-NonNullAttr 0x562919789598 <col:84, col:98> 1
|-FunctionDecl 0x562919789858 <line:450:1, line:452:79> line:450:12 pthread_setschedparam 'int (pthread_t, int, const struct sched_param *)' extern
| |-ParmVarDecl 0x5629197895e8 <col:35, col:45> col:45 __target_thread 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x562919789668 <col:62, col:66> col:66 __policy 'int'
| |-ParmVarDecl 0x5629197896f8 <line:451:7, col:33> col:33 __param 'const struct sched_param *'
| |-NoThrowAttr 0x562919789910 <line:452:22>
| `-NonNullAttr 0x562919789968 <col:63, col:77> 3
|-FunctionDecl 0x562919789c78 <line:453:1, line:456:82> line:453:12 pthread_getschedparam 'int (pthread_t, int *restrict, struct sched_param *restrict)' extern
| |-ParmVarDecl 0x5629197899e0 <col:35, col:45> col:45 __target_thread 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x562919789a60 <line:454:7, col:23> col:23 __policy 'int *restrict'
| |-ParmVarDecl 0x562919789af0 <line:455:7, col:38> col:38 __param 'struct sched_param *restrict'
| |-NoThrowAttr 0x562919789d30 <line:456:22>
| `-NonNullAttr 0x562919789d88 <col:63, col:80> 2 3
|-FunctionDecl 0x562919789f78 <line:457:1, line:458:45> line:457:12 pthread_setschedprio 'int (pthread_t, int)' extern
| |-ParmVarDecl 0x562919789dd8 <col:34, col:44> col:44 __target_thread 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x562919789e58 <col:61, col:65> col:65 __prio 'int'
| `-NoThrowAttr 0x56291978a028 <line:458:22>
|-FunctionDecl 0x56291978a3f8 <line:459:1, line:460:71> line:459:12 pthread_once 'int (pthread_once_t *, void (*)(void))' extern
| |-ParmVarDecl 0x56291978a0f0 <col:26, col:42> col:42 __once_control 'pthread_once_t *'
| |-ParmVarDecl 0x56291978a290 <line:460:5, col:33> col:12 __init_routine 'void (*)(void)'
| `-NonNullAttr 0x56291978a4a8 <col:52, col:69> 1 2
|-FunctionDecl 0x56291978a650 <line:461:1, col:64> col:12 pthread_setcancelstate 'int (int, int *)' extern
| |-ParmVarDecl 0x56291978a530 <col:36, col:40> col:40 __state 'int'
| `-ParmVarDecl 0x56291978a5b0 <col:49, col:54> col:54 __oldstate 'int *'
|-FunctionDecl 0x56291978a838 <line:462:1, col:61> col:12 pthread_setcanceltype 'int (int, int *)' extern
| |-ParmVarDecl 0x56291978a718 <col:35, col:39> col:39 __type 'int'
| `-ParmVarDecl 0x56291978a798 <col:47, col:52> col:52 __oldtype 'int *'
|-FunctionDecl 0x56291978a9f0 <line:463:1, col:42> col:12 pthread_cancel 'int (pthread_t)' extern
| `-ParmVarDecl 0x56291978a8f8 <col:28, col:38> col:38 __th 'pthread_t':'unsigned long'
|-FunctionDecl 0x56291978ab30 <line:464:1, col:37> col:13 pthread_testcancel 'void (void)' extern
|-RecordDecl 0x56291978abd0 <line:465:9, line:473:1> line:465:9 struct definition
| |-RecordDecl 0x56291978ac78 <line:467:3, line:471:3> line:467:3 struct definition
| | |-FieldDecl 0x56291978ad68 <line:469:5, col:15> col:15 __cancel_jmp_buf '__jmp_buf':'long [8]'
| | `-FieldDecl 0x56291978add0 <line:470:5, col:9> col:9 __mask_was_saved 'int'
| |-FieldDecl 0x56291978afa0 <line:467:3, line:471:23> col:5 __cancel_jmp_buf 'struct (anonymous struct at ./split_0/mix037_power.oepc_false-unreach-call.i:467:3) [1]'
| `-FieldDecl 0x56291978b098 <line:472:3, col:16> col:9 __pad 'void *[4]'
|-TypedefDecl 0x56291978b150 <line:465:1, line:473:3> col:3 referenced __pthread_unwind_buf_t 'struct __pthread_unwind_buf_t':'__pthread_unwind_buf_t'
| |-ElaboratedType 0x56291978b0f0 'struct __pthread_unwind_buf_t' sugar
| | `-RecordType 0x56291978ac50 '__pthread_unwind_buf_t'
| |   `-Record 0x56291978abd0 ''
| `-AlignedAttr 0x56291978b1a8 <col:42> aligned
|   `-<<<NULL>>>
|-RecordDecl 0x56291978b220 <line:474:1, line:480:1> line:474:8 struct __pthread_cleanup_frame definition
| |-FieldDecl 0x56291978b380 <line:476:3, col:35> col:10 __cancel_routine 'void (*)(void *)'
| |-FieldDecl 0x56291978b3e8 <line:477:3, col:9> col:9 __cancel_arg 'void *'
| |-FieldDecl 0x56291978b450 <line:478:3, col:7> col:7 __do_it 'int'
| `-FieldDecl 0x56291978b4b8 <line:479:3, col:7> col:7 __cancel_type 'int'
|-FunctionDecl 0x56291978b6c0 <line:481:1, col:69> col:13 __pthread_register_cancel 'void (__pthread_unwind_buf_t *)' extern
| `-ParmVarDecl 0x56291978b5b0 <col:40, col:64> col:64 __buf '__pthread_unwind_buf_t *'
|-FunctionDecl 0x56291978b808 <line:483:1, col:71> col:13 __pthread_unregister_cancel 'void (__pthread_unwind_buf_t *)' extern
| `-ParmVarDecl 0x56291978b778 <col:42, col:66> col:66 __buf '__pthread_unwind_buf_t *'
|-FunctionDecl 0x56291978ba00 <line:485:1, line:487:31> line:485:13 __pthread_unwind_next 'void (__pthread_unwind_buf_t *) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x56291978b8c0 <col:36, col:60> col:60 __buf '__pthread_unwind_buf_t *'
| `-WeakAttr 0x56291978baa8 <line:487:22>
|-RecordDecl 0x56291978bb00 <line:489:1, col:8> col:8 struct __jmp_buf_tag
|-FunctionDecl 0x56291978be18 <line:490:1, col:98> col:12 __sigsetjmp 'int (struct __jmp_buf_tag *, int)' extern
| |-ParmVarDecl 0x56291978bc78 <col:25, col:47> col:47 __env 'struct __jmp_buf_tag *'
| |-ParmVarDecl 0x56291978bcf8 <col:54, col:58> col:58 __savemask 'int'
| |-NoThrowAttr 0x56291978bec8 <col:86>
| `-ReturnsTwiceAttr 0x56291978bf20 <col:12> Implicit
|-FunctionDecl 0x56291978c248 <line:491:1, line:493:79> line:491:12 pthread_mutex_init 'int (pthread_mutex_t *, const pthread_mutexattr_t *)' extern
| |-ParmVarDecl 0x56291978bff0 <col:32, col:49> col:49 __mutex 'pthread_mutex_t *'
| |-ParmVarDecl 0x56291978c100 <line:492:11, col:38> col:38 __mutexattr 'const pthread_mutexattr_t *'
| |-NoThrowAttr 0x56291978c2f8 <line:493:22>
| `-NonNullAttr 0x56291978c350 <col:63, col:77> 1
|-FunctionDecl 0x56291978c4c8 <line:494:1, line:495:79> line:494:12 pthread_mutex_destroy 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x56291978c398 <col:35, col:52> col:52 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x56291978c570 <line:495:22>
| `-NonNullAttr 0x56291978c5c8 <col:63, col:77> 1
|-FunctionDecl 0x56291978c6d0 <line:496:1, line:497:68> line:496:12 pthread_mutex_trylock 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x56291978c618 <col:35, col:52> col:52 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x56291978c778 <line:497:22>
| `-NonNullAttr 0x56291978c7d0 <col:52, col:66> 1
|-FunctionDecl 0x56291978c8d0 <line:498:1, line:499:68> line:498:12 pthread_mutex_lock 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x56291978c818 <col:32, col:49> col:49 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x56291978c978 <line:499:22>
| `-NonNullAttr 0x56291978c9d0 <col:52, col:66> 1
|-FunctionDecl 0x56291978dc28 <line:500:1, line:502:85> line:500:12 pthread_mutex_timedlock 'int (pthread_mutex_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x56291978da38 <col:37, col:65> col:65 __mutex 'pthread_mutex_t *restrict'
| |-ParmVarDecl 0x56291978dac8 <line:501:9, line:502:9> col:9 __abstime 'const struct timespec *restrict'
| |-NoThrowAttr 0x56291978dcd8 <col:36>
| `-NonNullAttr 0x56291978dd30 <col:66, col:83> 1 2
|-FunctionDecl 0x56291978de30 <line:503:1, line:504:68> line:503:12 pthread_mutex_unlock 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x56291978dd78 <col:34, col:51> col:51 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x56291978ded8 <line:504:22>
| `-NonNullAttr 0x56291978df30 <col:52, col:66> 1
|-FunctionDecl 0x56291978e1c8 <line:505:1, line:508:82> line:505:12 pthread_mutex_getprioceiling 'int (const pthread_mutex_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x56291978dfe0 <col:42, line:506:18> col:18 __mutex 'const pthread_mutex_t *restrict'
| |-ParmVarDecl 0x56291978e060 <line:507:7, col:23> col:23 __prioceiling 'int *restrict'
| |-NoThrowAttr 0x56291978e278 <line:508:22>
| `-NonNullAttr 0x56291978e2d0 <col:63, col:80> 1 2
|-FunctionDecl 0x56291978e598 <line:509:1, line:512:82> line:509:12 pthread_mutex_setprioceiling 'int (pthread_mutex_t *restrict, int, int *restrict)' extern
| |-ParmVarDecl 0x56291978e318 <col:42, col:70> col:70 __mutex 'pthread_mutex_t *restrict'
| |-ParmVarDecl 0x56291978e398 <line:510:7, col:11> col:11 __prioceiling 'int'
| |-ParmVarDecl 0x56291978e418 <line:511:7, col:23> col:23 __old_ceiling 'int *restrict'
| |-NoThrowAttr 0x56291978e650 <line:512:22>
| `-NonNullAttr 0x56291978e6a8 <col:63, col:80> 1 3
|-FunctionDecl 0x56291978e7b0 <line:513:1, line:514:79> line:513:12 pthread_mutex_consistent 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x56291978e6f8 <col:38, col:55> col:55 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x56291978e858 <line:514:22>
| `-NonNullAttr 0x56291978e8b0 <col:63, col:77> 1
|-FunctionDecl 0x56291978ead8 <line:515:1, line:516:79> line:515:12 pthread_mutexattr_init 'int (pthread_mutexattr_t *)' extern
| |-ParmVarDecl 0x56291978e960 <col:36, col:57> col:57 __attr 'pthread_mutexattr_t *'
| |-NoThrowAttr 0x56291978eb80 <line:516:22>
| `-NonNullAttr 0x56291978ebd8 <col:63, col:77> 1
|-FunctionDecl 0x56291978ece0 <line:517:1, line:518:79> line:517:12 pthread_mutexattr_destroy 'int (pthread_mutexattr_t *)' extern
| |-ParmVarDecl 0x56291978ec28 <col:39, col:60> col:60 __attr 'pthread_mutexattr_t *'
| |-NoThrowAttr 0x56291978ed88 <line:518:22>
| `-NonNullAttr 0x56291978ede0 <col:63, col:77> 1
|-FunctionDecl 0x56291978f008 <line:519:1, line:522:82> line:519:12 pthread_mutexattr_getpshared 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x56291978ee28 <col:42, line:520:18> col:18 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x56291978eea8 <line:521:7, col:23> col:23 __pshared 'int *restrict'
| |-NoThrowAttr 0x56291978f0b8 <line:522:22>
| `-NonNullAttr 0x56291978f110 <col:63, col:80> 1 2
|-FunctionDecl 0x56291978f318 <line:523:1, line:525:79> line:523:12 pthread_mutexattr_setpshared 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x56291978f158 <col:42, col:63> col:63 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x56291978f1d8 <line:524:7, col:11> col:11 __pshared 'int'
| |-NoThrowAttr 0x56291978f3c8 <line:525:22>
| `-NonNullAttr 0x56291978f420 <col:63, col:77> 1
|-FunctionDecl 0x56291978f5c8 <line:526:1, line:528:82> line:526:12 pthread_mutexattr_gettype 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x56291978f468 <col:39, line:527:11> col:11 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x56291978f4e8 <col:19, col:35> col:35 __kind 'int *restrict'
| |-NoThrowAttr 0x56291978f678 <line:528:22>
| `-NonNullAttr 0x56291978f6d0 <col:63, col:80> 1 2
|-FunctionDecl 0x56291978f858 <line:529:1, line:530:79> line:529:12 pthread_mutexattr_settype 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x56291978f718 <col:39, col:60> col:60 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x56291978f798 <col:68, col:72> col:72 __kind 'int'
| |-NoThrowAttr 0x56291978f908 <line:530:22>
| `-NonNullAttr 0x56291978f960 <col:63, col:77> 1
|-FunctionDecl 0x56291978fb20 <line:531:1, line:534:82> line:531:12 pthread_mutexattr_getprotocol 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x56291978f9a8 <col:43, line:532:19> col:19 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x56291978fa40 <line:533:8, col:24> col:24 __protocol 'int *restrict'
| |-NoThrowAttr 0x56291978fbd0 <line:534:22>
| `-NonNullAttr 0x56291978fc28 <col:63, col:80> 1 2
|-FunctionDecl 0x56291978fdb8 <line:535:1, line:537:79> line:535:12 pthread_mutexattr_setprotocol 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x56291978fc78 <col:43, col:64> col:64 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x56291978fcf8 <line:536:8, col:12> col:12 __protocol 'int'
| |-NoThrowAttr 0x56291978fe68 <line:537:22>
| `-NonNullAttr 0x56291978fec0 <col:63, col:77> 1
|-FunctionDecl 0x562919790068 <line:538:1, line:541:82> line:538:12 pthread_mutexattr_getprioceiling 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x56291978ff08 <col:46, line:539:22> col:22 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x56291978ff88 <line:540:11, col:27> col:27 __prioceiling 'int *restrict'
| |-NoThrowAttr 0x562919790118 <line:541:22>
| `-NonNullAttr 0x562919790170 <col:63, col:80> 1 2
|-FunctionDecl 0x5629197902f8 <line:542:1, line:544:79> line:542:12 pthread_mutexattr_setprioceiling 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x5629197901b8 <col:46, col:67> col:67 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x562919790238 <line:543:11, col:15> col:15 __prioceiling 'int'
| |-NoThrowAttr 0x5629197903a8 <line:544:22>
| `-NonNullAttr 0x562919790400 <col:63, col:77> 1
|-FunctionDecl 0x5629197905e8 <line:545:1, line:547:82> line:545:12 pthread_mutexattr_getrobust 'int (const pthread_mutexattr_t *, int *)' extern
| |-ParmVarDecl 0x562919790448 <col:41, col:68> col:68 __attr 'const pthread_mutexattr_t *'
| |-ParmVarDecl 0x5629197904c8 <line:546:6, col:11> col:11 __robustness 'int *'
| |-NoThrowAttr 0x562919790698 <line:547:22>
| `-NonNullAttr 0x5629197906f0 <col:63, col:80> 1 2
|-FunctionDecl 0x562919790878 <line:548:1, line:550:79> line:548:12 pthread_mutexattr_setrobust 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x562919790738 <col:41, col:62> col:62 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x5629197907b8 <line:549:6, col:10> col:10 __robustness 'int'
| |-NoThrowAttr 0x562919790928 <line:550:22>
| `-NonNullAttr 0x562919790980 <col:63, col:77> 1
|-FunctionDecl 0x562919791cf8 <line:551:1, line:553:86> line:551:12 pthread_rwlock_init 'int (pthread_rwlock_t *restrict, const pthread_rwlockattr_t *restrict)' extern
| |-ParmVarDecl 0x562919791aa0 <col:33, col:62> col:62 __rwlock 'pthread_rwlock_t *restrict'
| |-ParmVarDecl 0x562919791bb0 <line:552:5, line:553:5> col:5 __attr 'const pthread_rwlockattr_t *restrict'
| |-NoThrowAttr 0x562919791da8 <col:29>
| `-NonNullAttr 0x562919791e00 <col:70, col:84> 1
|-FunctionDecl 0x562919791f78 <line:554:1, line:555:79> line:554:12 pthread_rwlock_destroy 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x562919791e48 <col:36, col:54> col:54 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x562919792020 <line:555:22>
| `-NonNullAttr 0x562919792078 <col:63, col:77> 1
|-FunctionDecl 0x562919792180 <line:556:1, line:557:68> line:556:12 pthread_rwlock_rdlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x5629197920c8 <col:35, col:53> col:53 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x562919792228 <line:557:22>
| `-NonNullAttr 0x562919792280 <col:52, col:66> 1
|-FunctionDecl 0x562919792380 <line:558:1, line:559:65> line:558:12 pthread_rwlock_tryrdlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x5629197922c8 <col:38, col:56> col:56 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x562919792428 <line:559:19>
| `-NonNullAttr 0x562919792480 <col:49, col:63> 1
|-FunctionDecl 0x5629197926b8 <line:560:1, line:562:88> line:560:12 pthread_rwlock_timedrdlock 'int (pthread_rwlock_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x5629197924c8 <col:40, col:69> col:69 __rwlock 'pthread_rwlock_t *restrict'
| |-ParmVarDecl 0x562919792558 <line:561:12, line:562:12> col:12 __abstime 'const struct timespec *restrict'
| |-NoThrowAttr 0x562919792768 <col:39>
| `-NonNullAttr 0x5629197927c0 <col:69, col:86> 1 2
|-FunctionDecl 0x5629197928c0 <line:563:1, line:564:68> line:563:12 pthread_rwlock_wrlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x562919792808 <col:35, col:53> col:53 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x562919792968 <line:564:22>
| `-NonNullAttr 0x5629197929c0 <col:52, col:66> 1
|-FunctionDecl 0x562919792b28 <line:565:1, line:566:68> line:565:12 pthread_rwlock_trywrlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x562919792a70 <col:38, col:56> col:56 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x562919792bd0 <line:566:22>
| `-NonNullAttr 0x562919792c28 <col:52, col:66> 1
|-FunctionDecl 0x562919792de8 <line:567:1, line:569:88> line:567:12 pthread_rwlock_timedwrlock 'int (pthread_rwlock_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x562919792c78 <col:40, col:69> col:69 __rwlock 'pthread_rwlock_t *restrict'
| |-ParmVarDecl 0x562919792d08 <line:568:12, line:569:12> col:12 __abstime 'const struct timespec *restrict'
| |-NoThrowAttr 0x562919792e98 <col:39>
| `-NonNullAttr 0x562919792ef0 <col:69, col:86> 1 2
|-FunctionDecl 0x562919792ff0 <line:570:1, line:571:68> line:570:12 pthread_rwlock_unlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x562919792f38 <col:35, col:53> col:53 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x562919793098 <line:571:22>
| `-NonNullAttr 0x5629197930f0 <col:52, col:66> 1
|-FunctionDecl 0x5629197932d8 <line:572:1, line:573:79> line:572:12 pthread_rwlockattr_init 'int (pthread_rwlockattr_t *)' extern
| |-ParmVarDecl 0x5629197931a0 <col:37, col:59> col:59 __attr 'pthread_rwlockattr_t *'
| |-NoThrowAttr 0x562919793380 <line:573:22>
| `-NonNullAttr 0x5629197933d8 <col:63, col:77> 1
|-FunctionDecl 0x5629197934e0 <line:574:1, line:575:79> line:574:12 pthread_rwlockattr_destroy 'int (pthread_rwlockattr_t *)' extern
| |-ParmVarDecl 0x562919793428 <col:40, col:62> col:62 __attr 'pthread_rwlockattr_t *'
| |-NoThrowAttr 0x562919793588 <line:575:22>
| `-NonNullAttr 0x5629197935e0 <col:63, col:77> 1
|-FunctionDecl 0x562919793808 <line:576:1, line:579:82> line:576:12 pthread_rwlockattr_getpshared 'int (const pthread_rwlockattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x562919793628 <col:43, line:577:19> col:19 __attr 'const pthread_rwlockattr_t *restrict'
| |-ParmVarDecl 0x5629197936a8 <line:578:8, col:24> col:24 __pshared 'int *restrict'
| |-NoThrowAttr 0x5629197938b8 <line:579:22>
| `-NonNullAttr 0x562919793910 <col:63, col:80> 1 2
|-FunctionDecl 0x562919793b38 <line:580:1, line:582:79> line:580:12 pthread_rwlockattr_setpshared 'int (pthread_rwlockattr_t *, int)' extern
| |-ParmVarDecl 0x562919793958 <col:43, col:65> col:65 __attr 'pthread_rwlockattr_t *'
| |-ParmVarDecl 0x5629197939d8 <line:581:8, col:12> col:12 __pshared 'int'
| |-NoThrowAttr 0x562919793be8 <line:582:22>
| `-NonNullAttr 0x562919793c40 <col:63, col:77> 1
|-FunctionDecl 0x562919793de8 <line:583:1, line:586:82> line:583:12 pthread_rwlockattr_getkind_np 'int (const pthread_rwlockattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x562919793c88 <col:43, line:584:19> col:19 __attr 'const pthread_rwlockattr_t *restrict'
| |-ParmVarDecl 0x562919793d08 <line:585:8, col:24> col:24 __pref 'int *restrict'
| |-NoThrowAttr 0x562919793e98 <line:586:22>
| `-NonNullAttr 0x562919793ef0 <col:63, col:80> 1 2
|-FunctionDecl 0x562919794078 <line:587:1, line:588:93> line:587:12 pthread_rwlockattr_setkind_np 'int (pthread_rwlockattr_t *, int)' extern
| |-ParmVarDecl 0x562919793f38 <col:43, col:65> col:65 __attr 'pthread_rwlockattr_t *'
| |-ParmVarDecl 0x562919793fb8 <line:588:8, col:12> col:12 __pref 'int'
| |-NoThrowAttr 0x562919794128 <col:36>
| `-NonNullAttr 0x562919794180 <col:77, col:91> 1
|-FunctionDecl 0x5629197944b8 <line:589:1, line:591:79> line:589:12 pthread_cond_init 'int (pthread_cond_t *restrict, const pthread_condattr_t *restrict)' extern
| |-ParmVarDecl 0x562919794260 <col:31, col:58> col:58 __cond 'pthread_cond_t *restrict'
| |-ParmVarDecl 0x562919794370 <line:590:10, col:47> col:47 __cond_attr 'const pthread_condattr_t *restrict'
| |-NoThrowAttr 0x562919794568 <line:591:22>
| `-NonNullAttr 0x5629197945c0 <col:63, col:77> 1
|-FunctionDecl 0x562919794738 <line:592:1, line:593:79> line:592:12 pthread_cond_destroy 'int (pthread_cond_t *)' extern
| |-ParmVarDecl 0x562919794608 <col:34, col:50> col:50 __cond 'pthread_cond_t *'
| |-NoThrowAttr 0x5629197947e0 <line:593:22>
| `-NonNullAttr 0x562919794838 <col:63, col:77> 1
|-FunctionDecl 0x562919794940 <line:594:1, line:595:68> line:594:12 pthread_cond_signal 'int (pthread_cond_t *)' extern
| |-ParmVarDecl 0x562919794888 <col:33, col:49> col:49 __cond 'pthread_cond_t *'
| |-NoThrowAttr 0x5629197949e8 <line:595:22>
| `-NonNullAttr 0x562919794a40 <col:52, col:66> 1
|-FunctionDecl 0x562919794b58 <line:596:1, line:597:68> line:596:12 pthread_cond_broadcast 'int (pthread_cond_t *)' extern
| |-ParmVarDecl 0x562919794aa0 <col:36, col:52> col:52 __cond 'pthread_cond_t *'
| |-NoThrowAttr 0x562919794c00 <line:597:22>
| `-NonNullAttr 0x562919794c58 <col:52, col:66> 1
|-FunctionDecl 0x562919794e88 <line:598:1, line:600:41> line:598:12 pthread_cond_wait 'int (pthread_cond_t *restrict, pthread_mutex_t *restrict)' extern
| |-ParmVarDecl 0x562919794ca8 <col:31, col:58> col:58 __cond 'pthread_cond_t *restrict'
| |-ParmVarDecl 0x562919794d20 <line:599:10, col:38> col:38 __mutex 'pthread_mutex_t *restrict'
| `-NonNullAttr 0x562919794f38 <line:600:22, col:39> 1 2
|-FunctionDecl 0x562919795268 <line:601:1, line:604:44> line:601:12 pthread_cond_timedwait 'int (pthread_cond_t *restrict, pthread_mutex_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x562919794fb8 <col:36, col:63> col:63 __cond 'pthread_cond_t *restrict'
| |-ParmVarDecl 0x562919795030 <line:602:8, col:36> col:36 __mutex 'pthread_mutex_t *restrict'
| |-ParmVarDecl 0x5629197950c0 <line:603:8, col:42> col:42 __abstime 'const struct timespec *restrict'
| `-NonNullAttr 0x562919795320 <line:604:22, col:42> 1 2 3
|-FunctionDecl 0x562919795538 <line:605:1, line:606:79> line:605:12 pthread_condattr_init 'int (pthread_condattr_t *)' extern
| |-ParmVarDecl 0x562919795400 <col:35, col:55> col:55 __attr 'pthread_condattr_t *'
| |-NoThrowAttr 0x5629197955e0 <line:606:22>
| `-NonNullAttr 0x562919795638 <col:63, col:77> 1
|-FunctionDecl 0x562919795740 <line:607:1, line:608:79> line:607:12 pthread_condattr_destroy 'int (pthread_condattr_t *)' extern
| |-ParmVarDecl 0x562919795688 <col:38, col:58> col:58 __attr 'pthread_condattr_t *'
| |-NoThrowAttr 0x5629197957e8 <line:608:22>
| `-NonNullAttr 0x562919795840 <col:63, col:77> 1
|-FunctionDecl 0x562919795aa0 <line:609:1, line:612:82> line:609:12 pthread_condattr_getpshared 'int (const pthread_condattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x562919795888 <col:41, line:610:17> col:17 __attr 'const pthread_condattr_t *restrict'
| |-ParmVarDecl 0x562919795908 <line:611:6, col:22> col:22 __pshared 'int *restrict'
| |-NoThrowAttr 0x562919795b50 <line:612:22>
| `-NonNullAttr 0x562919795ba8 <col:63, col:80> 1 2
|-FunctionDecl 0x562919795db8 <line:613:1, line:614:94> line:613:12 pthread_condattr_setpshared 'int (pthread_condattr_t *, int)' extern
| |-ParmVarDecl 0x562919795bf8 <col:41, col:61> col:61 __attr 'pthread_condattr_t *'
| |-ParmVarDecl 0x562919795c78 <line:614:6, col:10> col:10 __pshared 'int'
| |-NoThrowAttr 0x562919795e68 <col:37>
| `-NonNullAttr 0x562919795ec0 <col:78, col:92> 1
|-FunctionDecl 0x5629197960d8 <line:615:1, line:618:82> line:615:12 pthread_condattr_getclock 'int (const pthread_condattr_t *restrict, __clockid_t *restrict)' extern
| |-ParmVarDecl 0x562919795f08 <col:39, line:616:22> col:22 __attr 'const pthread_condattr_t *restrict'
| |-ParmVarDecl 0x562919795fb0 <line:617:11, col:35> col:35 __clock_id '__clockid_t *restrict'
| |-NoThrowAttr 0x562919796188 <line:618:22>
| `-NonNullAttr 0x5629197961e0 <col:63, col:80> 1 2
|-FunctionDecl 0x5629197963a8 <line:619:1, line:621:79> line:619:12 pthread_condattr_setclock 'int (pthread_condattr_t *, __clockid_t)' extern
| |-ParmVarDecl 0x562919796228 <col:39, col:59> col:59 __attr 'pthread_condattr_t *'
| |-ParmVarDecl 0x5629197962a0 <line:620:11, col:23> col:23 __clock_id '__clockid_t':'int'
| |-NoThrowAttr 0x562919796458 <line:621:22>
| `-NonNullAttr 0x5629197964b0 <col:63, col:77> 1
|-FunctionDecl 0x562919796758 <line:622:1, line:623:79> line:622:12 pthread_spin_init 'int (pthread_spinlock_t *, int)' extern
| |-ParmVarDecl 0x562919796590 <col:31, col:51> col:51 __lock 'pthread_spinlock_t *'
| |-ParmVarDecl 0x562919796610 <col:59, col:63> col:63 __pshared 'int'
| |-NoThrowAttr 0x562919796808 <line:623:22>
| `-NonNullAttr 0x562919796860 <col:63, col:77> 1
|-FunctionDecl 0x5629197969d8 <line:624:1, line:625:79> line:624:12 pthread_spin_destroy 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x5629197968a8 <col:34, col:54> col:54 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x562919796ab0 <line:625:22>
| `-NonNullAttr 0x562919796b08 <col:63, col:77> 1
|-FunctionDecl 0x562919796c10 <line:626:1, line:627:68> line:626:12 pthread_spin_lock 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x562919796b58 <col:31, col:51> col:51 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x562919796cb8 <line:627:22>
| `-NonNullAttr 0x562919796d10 <col:52, col:66> 1
|-FunctionDecl 0x562919796e10 <line:628:1, line:629:68> line:628:12 pthread_spin_trylock 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x562919796d58 <col:34, col:54> col:54 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x562919796eb8 <line:629:22>
| `-NonNullAttr 0x562919796f10 <col:52, col:66> 1
|-FunctionDecl 0x562919797010 <line:630:1, line:631:68> line:630:12 pthread_spin_unlock 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x562919796f58 <col:33, col:53> col:53 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x5629197970b8 <line:631:22>
| `-NonNullAttr 0x562919797110 <col:52, col:66> 1
|-FunctionDecl 0x5629197974e8 <line:632:1, line:635:79> line:632:12 pthread_barrier_init 'int (pthread_barrier_t *restrict, const pthread_barrierattr_t *restrict, unsigned int)' extern
| |-ParmVarDecl 0x5629197971f0 <col:34, col:64> col:64 __barrier 'pthread_barrier_t *restrict'
| |-ParmVarDecl 0x562919797300 <line:633:6, line:634:6> col:6 __attr 'const pthread_barrierattr_t *restrict'
| |-ParmVarDecl 0x562919797380 <col:14, col:27> col:27 __count 'unsigned int'
| |-NoThrowAttr 0x5629197975a0 <line:635:22>
| `-NonNullAttr 0x5629197975f8 <col:63, col:77> 1
|-FunctionDecl 0x562919797778 <line:636:1, line:637:79> line:636:12 pthread_barrier_destroy 'int (pthread_barrier_t *)' extern
| |-ParmVarDecl 0x562919797648 <col:37, col:56> col:56 __barrier 'pthread_barrier_t *'
| |-NoThrowAttr 0x562919797820 <line:637:22>
| `-NonNullAttr 0x562919797878 <col:63, col:77> 1
|-FunctionDecl 0x562919797980 <line:638:1, line:639:68> line:638:12 pthread_barrier_wait 'int (pthread_barrier_t *)' extern
| |-ParmVarDecl 0x5629197978c8 <col:34, col:53> col:53 __barrier 'pthread_barrier_t *'
| |-NoThrowAttr 0x562919797a28 <line:639:22>
| `-NonNullAttr 0x562919797a80 <col:52, col:66> 1
|-FunctionDecl 0x562919798c88 <line:640:1, line:641:79> line:640:12 pthread_barrierattr_init 'int (pthread_barrierattr_t *)' extern
| |-ParmVarDecl 0x562919798b50 <col:38, col:61> col:61 __attr 'pthread_barrierattr_t *'
| |-NoThrowAttr 0x562919798d30 <line:641:22>
| `-NonNullAttr 0x562919798d88 <col:63, col:77> 1
|-FunctionDecl 0x562919798e90 <line:642:1, line:643:79> line:642:12 pthread_barrierattr_destroy 'int (pthread_barrierattr_t *)' extern
| |-ParmVarDecl 0x562919798dd8 <col:41, col:64> col:64 __attr 'pthread_barrierattr_t *'
| |-NoThrowAttr 0x562919798f38 <line:643:22>
| `-NonNullAttr 0x562919798f90 <col:63, col:77> 1
|-FunctionDecl 0x5629197991b8 <line:644:1, line:647:82> line:644:12 pthread_barrierattr_getpshared 'int (const pthread_barrierattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x562919798fd8 <col:44, line:645:20> col:20 __attr 'const pthread_barrierattr_t *restrict'
| |-ParmVarDecl 0x562919799058 <line:646:9, col:25> col:25 __pshared 'int *restrict'
| |-NoThrowAttr 0x562919799268 <line:647:22>
| `-NonNullAttr 0x5629197992c0 <col:63, col:80> 1 2
|-FunctionDecl 0x5629197994c8 <line:648:1, line:650:79> line:648:12 pthread_barrierattr_setpshared 'int (pthread_barrierattr_t *, int)' extern
| |-ParmVarDecl 0x562919799308 <col:44, col:67> col:67 __attr 'pthread_barrierattr_t *'
| |-ParmVarDecl 0x562919799388 <line:649:9, col:13> col:13 __pshared 'int'
| |-NoThrowAttr 0x562919799578 <line:650:22>
| `-NonNullAttr 0x5629197995d0 <col:63, col:77> 1
|-FunctionDecl 0x562919799918 <line:651:1, line:653:79> line:651:12 pthread_key_create 'int (pthread_key_t *, void (*)(void *))' extern
| |-ParmVarDecl 0x5629197996b0 <col:32, col:47> col:47 __key 'pthread_key_t *'
| |-ParmVarDecl 0x5629197997d0 <line:652:11, col:43> col:18 __destr_function 'void (*)(void *)'
| |-NoThrowAttr 0x5629197999c8 <line:653:22>
| `-NonNullAttr 0x562919799a20 <col:63, col:77> 1
|-FunctionDecl 0x562919799b88 <line:654:1, col:92> col:12 pthread_key_delete 'int (pthread_key_t)' extern
| |-ParmVarDecl 0x562919799a68 <col:32, col:46> col:46 __key 'pthread_key_t':'unsigned int'
| `-NoThrowAttr 0x562919799c30 <col:69>
|-FunctionDecl 0x562919799da8 <line:655:1, col:95> col:14 pthread_getspecific 'void *(pthread_key_t)' extern
| |-ParmVarDecl 0x562919799c98 <col:35, col:49> col:49 __key 'pthread_key_t':'unsigned int'
| `-NoThrowAttr 0x562919799e50 <col:72>
|-FunctionDecl 0x56291979a088 <line:656:1, line:657:67> line:656:12 pthread_setspecific 'int (pthread_key_t, const void *)' extern
| |-ParmVarDecl 0x562919799eb8 <col:33, col:47> col:47 __key 'pthread_key_t':'unsigned int'
| |-ParmVarDecl 0x562919799f68 <line:657:5, col:17> col:17 __pointer 'const void *'
| `-NoThrowAttr 0x56291979a138 <col:44>
|-FunctionDecl 0x56291979a358 <line:658:1, line:660:79> line:658:12 pthread_getcpuclockid 'int (pthread_t, __clockid_t *)' extern
| |-ParmVarDecl 0x56291979a1a0 <col:35, col:45> col:45 __thread_id 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x56291979a218 <line:659:7, col:20> col:20 __clock_id '__clockid_t *'
| |-NoThrowAttr 0x56291979a408 <line:660:22>
| `-NonNullAttr 0x56291979a460 <col:63, col:77> 2
|-FunctionDecl 0x56291979a8a8 <line:661:1, line:663:70> line:661:12 pthread_atfork 'int (void (*)(void), void (*)(void), void (*)(void))' extern
| |-ParmVarDecl 0x56291979a540 <col:28, col:51> col:35 __prepare 'void (*)(void)'
| |-ParmVarDecl 0x56291979a650 <line:662:7, col:29> col:14 __parent 'void (*)(void)'
| |-ParmVarDecl 0x56291979a760 <line:663:7, col:28> col:14 __child 'void (*)(void)'
| `-NoThrowAttr 0x56291979a960 <col:47>
|-FunctionDecl 0x56291979aaf0 <line:665:1, col:20> col:8 used P0 'void *(void *)'
| `-ParmVarDecl 0x56291979a9d0 <col:11, col:17> col:17 arg 'void *'
|-FunctionDecl 0x56291979ac48 <line:666:1, col:20> col:8 used P1 'void *(void *)'
| `-ParmVarDecl 0x56291979abb0 <col:11, col:17> col:17 arg 'void *'
|-FunctionDecl 0x56291979ada0 <line:667:1, col:20> col:8 used P2 'void *(void *)'
| `-ParmVarDecl 0x56291979ad08 <col:11, col:17> col:17 arg 'void *'
|-FunctionDecl 0x56291979aef8 <line:668:1, col:20> col:8 used P3 'void *(void *)'
| `-ParmVarDecl 0x56291979ae60 <col:11, col:17> col:17 arg 'void *'
|-FunctionDecl 0x56291979afc0 <line:669:1, col:12> col:6 fence 'void ()'
|-FunctionDecl 0x56291979b080 <line:670:1, col:12> col:6 isync 'void ()'
|-FunctionDecl 0x56291979b140 <line:671:1, col:14> col:6 lwfence 'void ()'
|-VarDecl 0x56291979b1f8 <line:672:1, col:5> col:5 used __unbuffered_cnt 'int'
|-VarDecl 0x56291979b278 prev 0x56291979b1f8 <line:673:1, col:24> col:5 used __unbuffered_cnt 'int' cinit
| `-IntegerLiteral 0x56291979b2e0 <col:24> 'int' 0
|-VarDecl 0x56291979b318 <line:674:1, col:5> col:5 used __unbuffered_p1_EAX 'int'
|-VarDecl 0x56291979b398 prev 0x56291979b318 <line:675:1, col:27> col:5 used __unbuffered_p1_EAX 'int' cinit
| `-IntegerLiteral 0x56291979b400 <col:27> 'int' 0
|-VarDecl 0x56291979b438 <line:676:1, col:5> col:5 used __unbuffered_p2_EAX 'int'
|-VarDecl 0x56291979b4b8 prev 0x56291979b438 <line:677:1, col:27> col:5 used __unbuffered_p2_EAX 'int' cinit
| `-IntegerLiteral 0x56291979b520 <col:27> 'int' 0
|-VarDecl 0x56291979b558 <line:678:1, col:5> col:5 used __unbuffered_p3_EAX 'int'
|-VarDecl 0x56291979b5d8 prev 0x56291979b558 <line:679:1, col:27> col:5 used __unbuffered_p3_EAX 'int' cinit
| `-IntegerLiteral 0x56291979b640 <col:27> 'int' 0
|-VarDecl 0x56291979b678 <line:680:1, col:5> col:5 used __unbuffered_p3_EBX 'int'
|-VarDecl 0x56291979b6f8 prev 0x56291979b678 <line:681:1, col:27> col:5 used __unbuffered_p3_EBX 'int' cinit
| `-IntegerLiteral 0x56291979b760 <col:27> 'int' 0
|-VarDecl 0x56291979b798 <line:682:1, col:5> col:5 used a 'int'
|-VarDecl 0x56291979b818 prev 0x56291979b798 <line:683:1, col:9> col:5 used a 'int' cinit
| `-IntegerLiteral 0x56291979b880 <col:9> 'int' 0
|-VarDecl 0x56291979b8b8 <line:684:1, col:5> col:5 used b 'int'
|-VarDecl 0x56291979b938 prev 0x56291979b8b8 <line:685:1, col:9> col:5 used b 'int' cinit
| `-IntegerLiteral 0x56291979b9a0 <col:9> 'int' 0
|-VarDecl 0x56291979b9d0 <line:686:1, col:7> col:7 used b$flush_delayed '_Bool'
|-VarDecl 0x56291979ba50 <line:687:1, col:5> col:5 used b$mem_tmp 'int'
|-VarDecl 0x56291979bb00 <line:688:1, col:7> col:7 used b$r_buff0_thd0 '_Bool'
|-VarDecl 0x56291979bb78 <line:689:1, col:7> col:7 used b$r_buff0_thd1 '_Bool'
|-VarDecl 0x56291979bbf0 <line:690:1, col:7> col:7 used b$r_buff0_thd2 '_Bool'
|-VarDecl 0x56291979bc68 <line:691:1, col:7> col:7 used b$r_buff0_thd3 '_Bool'
|-VarDecl 0x56291979bce0 <line:692:1, col:7> col:7 used b$r_buff0_thd4 '_Bool'
|-VarDecl 0x56291979bd58 <line:693:1, col:7> col:7 used b$r_buff1_thd0 '_Bool'
|-VarDecl 0x56291979bdd0 <line:694:1, col:7> col:7 used b$r_buff1_thd1 '_Bool'
|-VarDecl 0x56291979be48 <line:695:1, col:7> col:7 used b$r_buff1_thd2 '_Bool'
|-VarDecl 0x56291979bec0 <line:696:1, col:7> col:7 used b$r_buff1_thd3 '_Bool'
|-VarDecl 0x56291979bf38 <line:697:1, col:7> col:7 used b$r_buff1_thd4 '_Bool'
|-VarDecl 0x56291979bfb0 <line:698:1, col:7> col:7 b$read_delayed '_Bool'
|-VarDecl 0x56291979c030 <line:699:1, col:6> col:6 b$read_delayed_var 'int *'
|-VarDecl 0x56291979c0b0 <line:700:1, col:5> col:5 used b$w_buff0 'int'
|-VarDecl 0x56291979c128 <line:701:1, col:7> col:7 used b$w_buff0_used '_Bool'
|-VarDecl 0x56291979c1a8 <line:702:1, col:5> col:5 used b$w_buff1 'int'
|-VarDecl 0x56291979c220 <line:703:1, col:7> col:7 used b$w_buff1_used '_Bool'
|-VarDecl 0x56291979c298 <line:704:1, col:7> col:7 used main$tmp_guard0 '_Bool'
|-VarDecl 0x56291979c310 <line:705:1, col:7> col:7 used main$tmp_guard1 '_Bool'
|-VarDecl 0x56291979c390 <line:706:1, col:5> col:5 used x 'int'
|-VarDecl 0x56291979c410 prev 0x56291979c390 <line:707:1, col:9> col:5 used x 'int' cinit
| `-IntegerLiteral 0x56291979c478 <col:9> 'int' 0
|-VarDecl 0x56291979c4b0 <line:708:1, col:5> col:5 used y 'int'
|-VarDecl 0x56291979c530 prev 0x56291979c4b0 <line:709:1, col:9> col:5 used y 'int' cinit
| `-IntegerLiteral 0x56291979c598 <col:9> 'int' 0
|-VarDecl 0x56291979c5d0 <line:710:1, col:5> col:5 used z 'int'
|-VarDecl 0x56291979c650 prev 0x56291979c5d0 <line:711:1, col:9> col:5 used z 'int' cinit
| `-IntegerLiteral 0x56291979c6b8 <col:9> 'int' 0
|-VarDecl 0x56291979c6e8 <line:712:1, col:7> col:7 used weak$$choice0 '_Bool'
|-VarDecl 0x56291979c760 <line:713:1, col:7> col:7 used weak$$choice2 '_Bool'
|-FunctionDecl 0x56291979c878 prev 0x56291979aaf0 <line:714:1, line:743:1> line:714:8 used P0 'void *(void *)'
| |-ParmVarDecl 0x56291979c7e0 <col:11, col:17> col:17 arg 'void *'
| `-CompoundStmt 0x56291979e118 <line:715:1, line:743:1>
|   |-CallExpr 0x56291979c988 <line:716:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x56291979c970 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x56291979c920 <col:3> 'void ()' Function 0x562919741e40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x56291979ca00 <line:717:3, col:15> 'int' '='
|   | |-DeclRefExpr 0x56291979c9a8 <col:3> 'int' lvalue Var 0x56291979c1a8 'b$w_buff1' 'int'
|   | `-ImplicitCastExpr 0x56291979c9e8 <col:15> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x56291979c9c8 <col:15> 'int' lvalue Var 0x56291979c0b0 'b$w_buff0' 'int'
|   |-BinaryOperator 0x56291979ca60 <line:718:3, col:15> 'int' '='
|   | |-DeclRefExpr 0x56291979ca20 <col:3> 'int' lvalue Var 0x56291979c0b0 'b$w_buff0' 'int'
|   | `-IntegerLiteral 0x56291979ca40 <col:15> 'int' 1
|   |-BinaryOperator 0x56291979cad8 <line:719:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x56291979ca80 <col:3> '_Bool' lvalue Var 0x56291979c220 'b$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x56291979cac0 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x56291979caa0 <col:20> '_Bool' lvalue Var 0x56291979c128 'b$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x56291979cb88 <line:720:3, col:27> '_Bool' '='
|   | |-DeclRefExpr 0x56291979cb10 <col:3> '_Bool' lvalue Var 0x56291979c128 'b$w_buff0_used' '_Bool'
|   | `-CStyleCastExpr 0x56291979cb60 <col:20, col:27> '_Bool' <IntegralToBoolean>
|   |   `-IntegerLiteral 0x56291979cb30 <col:27> 'int' 1
|   |-CallExpr 0x56291979cd08 <line:721:3, col:56> 'void'
|   | |-ImplicitCastExpr 0x56291979ccf0 <col:3> 'void (*)(int)' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x56291979cba8 <col:3> 'void (int)' Function 0x562919741bc8 '__VERIFIER_assert' 'void (int)'
|   | `-UnaryOperator 0x56291979cca8 <col:21, col:55> 'int' prefix '!' cannot overflow
|   |   `-ParenExpr 0x56291979cc88 <col:22, col:55> 'int'
|   |     `-BinaryOperator 0x56291979cc68 <col:23, col:41> 'int' '&&'
|   |       |-ImplicitCastExpr 0x56291979cc20 <col:23> 'int' <IntegralCast>
|   |       | `-ImplicitCastExpr 0x56291979cc08 <col:23> '_Bool' <LValueToRValue>
|   |       |   `-DeclRefExpr 0x56291979cbc8 <col:23> '_Bool' lvalue Var 0x56291979c220 'b$w_buff1_used' '_Bool'
|   |       `-ImplicitCastExpr 0x56291979cc50 <col:41> 'int' <IntegralCast>
|   |         `-ImplicitCastExpr 0x56291979cc38 <col:41> '_Bool' <LValueToRValue>
|   |           `-DeclRefExpr 0x56291979cbe8 <col:41> '_Bool' lvalue Var 0x56291979c128 'b$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x56291979cd88 <line:722:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x56291979cd30 <col:3> '_Bool' lvalue Var 0x56291979bd58 'b$r_buff1_thd0' '_Bool'
|   | `-ImplicitCastExpr 0x56291979cd70 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x56291979cd50 <col:20> '_Bool' lvalue Var 0x56291979bb00 'b$r_buff0_thd0' '_Bool'
|   |-BinaryOperator 0x56291979ce00 <line:723:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x56291979cda8 <col:3> '_Bool' lvalue Var 0x56291979bdd0 'b$r_buff1_thd1' '_Bool'
|   | `-ImplicitCastExpr 0x56291979cde8 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x56291979cdc8 <col:20> '_Bool' lvalue Var 0x56291979bb78 'b$r_buff0_thd1' '_Bool'
|   |-BinaryOperator 0x56291979ce78 <line:724:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x56291979ce20 <col:3> '_Bool' lvalue Var 0x56291979be48 'b$r_buff1_thd2' '_Bool'
|   | `-ImplicitCastExpr 0x56291979ce60 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x56291979ce40 <col:20> '_Bool' lvalue Var 0x56291979bbf0 'b$r_buff0_thd2' '_Bool'
|   |-BinaryOperator 0x56291979cef0 <line:725:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x56291979ce98 <col:3> '_Bool' lvalue Var 0x56291979bec0 'b$r_buff1_thd3' '_Bool'
|   | `-ImplicitCastExpr 0x56291979ced8 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x56291979ceb8 <col:20> '_Bool' lvalue Var 0x56291979bc68 'b$r_buff0_thd3' '_Bool'
|   |-BinaryOperator 0x56291979cf68 <line:726:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x56291979cf10 <col:3> '_Bool' lvalue Var 0x56291979bf38 'b$r_buff1_thd4' '_Bool'
|   | `-ImplicitCastExpr 0x56291979cf50 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x56291979cf30 <col:20> '_Bool' lvalue Var 0x56291979bce0 'b$r_buff0_thd4' '_Bool'
|   |-BinaryOperator 0x56291979d000 <line:727:3, col:27> '_Bool' '='
|   | |-DeclRefExpr 0x56291979cf88 <col:3> '_Bool' lvalue Var 0x56291979bb78 'b$r_buff0_thd1' '_Bool'
|   | `-CStyleCastExpr 0x56291979cfd8 <col:20, col:27> '_Bool' <IntegralToBoolean>
|   |   `-IntegerLiteral 0x56291979cfa8 <col:27> 'int' 1
|   |-CallExpr 0x56291979d058 <line:728:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x56291979d040 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x56291979d020 <col:3> 'void ()' Function 0x562919741f00 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x56291979d0b0 <line:729:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x56291979d098 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x56291979d078 <col:3> 'void ()' Function 0x562919741e40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x56291979d110 <line:730:3, col:7> 'int' '='
|   | |-DeclRefExpr 0x56291979d0d0 <col:3> 'int' lvalue Var 0x56291979c410 'x' 'int'
|   | `-IntegerLiteral 0x56291979d0f0 <col:7> 'int' 1
|   |-CallExpr 0x56291979d168 <line:731:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x56291979d150 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x56291979d130 <col:3> 'void ()' Function 0x562919741f00 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x56291979d1c0 <line:732:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x56291979d1a8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x56291979d188 <col:3> 'void ()' Function 0x562919741e40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x56291979d4a8 <line:733:3, col:103> 'int' '='
|   | |-DeclRefExpr 0x56291979d1e0 <col:3> 'int' lvalue Var 0x56291979b938 'b' 'int'
|   | `-ConditionalOperator 0x56291979d478 <col:7, col:103> 'int'
|   |   |-BinaryOperator 0x56291979d2a0 <col:7, col:25> 'int' '&&'
|   |   | |-ImplicitCastExpr 0x56291979d258 <col:7> 'int' <IntegralCast>
|   |   | | `-ImplicitCastExpr 0x56291979d240 <col:7> '_Bool' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x56291979d200 <col:7> '_Bool' lvalue Var 0x56291979c128 'b$w_buff0_used' '_Bool'
|   |   | `-ImplicitCastExpr 0x56291979d288 <col:25> 'int' <IntegralCast>
|   |   |   `-ImplicitCastExpr 0x56291979d270 <col:25> '_Bool' <LValueToRValue>
|   |   |     `-DeclRefExpr 0x56291979d220 <col:25> '_Bool' lvalue Var 0x56291979bb78 'b$r_buff0_thd1' '_Bool'
|   |   |-ImplicitCastExpr 0x56291979d460 <col:42> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x56291979d2c0 <col:42> 'int' lvalue Var 0x56291979c0b0 'b$w_buff0' 'int'
|   |   `-ParenExpr 0x56291979d440 <col:54, col:103> 'int'
|   |     `-ConditionalOperator 0x56291979d410 <col:55, col:102> 'int'
|   |       |-BinaryOperator 0x56291979d380 <col:55, col:73> 'int' '&&'
|   |       | |-ImplicitCastExpr 0x56291979d338 <col:55> 'int' <IntegralCast>
|   |       | | `-ImplicitCastExpr 0x56291979d320 <col:55> '_Bool' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x56291979d2e0 <col:55> '_Bool' lvalue Var 0x56291979c220 'b$w_buff1_used' '_Bool'
|   |       | `-ImplicitCastExpr 0x56291979d368 <col:73> 'int' <IntegralCast>
|   |       |   `-ImplicitCastExpr 0x56291979d350 <col:73> '_Bool' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x56291979d300 <col:73> '_Bool' lvalue Var 0x56291979bdd0 'b$r_buff1_thd1' '_Bool'
|   |       |-ImplicitCastExpr 0x56291979d3e0 <col:90> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x56291979d3a0 <col:90> 'int' lvalue Var 0x56291979c1a8 'b$w_buff1' 'int'
|   |       `-ImplicitCastExpr 0x56291979d3f8 <col:102> 'int' <LValueToRValue>
|   |         `-DeclRefExpr 0x56291979d3c0 <col:102> 'int' lvalue Var 0x56291979b938 'b' 'int'
|   |-BinaryOperator 0x56291979d6b0 <line:734:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x56291979d4c8 <col:3> '_Bool' lvalue Var 0x56291979c128 'b$w_buff0_used' '_Bool'
|   | `-ImplicitCastExpr 0x56291979d698 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x56291979d668 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x56291979d588 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x56291979d540 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x56291979d528 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x56291979d4e8 <col:20> '_Bool' lvalue Var 0x56291979c128 'b$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x56291979d570 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x56291979d558 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x56291979d508 <col:38> '_Bool' lvalue Var 0x56291979bb78 'b$r_buff0_thd1' '_Bool'
|   |     |-ImplicitCastExpr 0x56291979d620 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x56291979d5d8 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x56291979d5a8 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x56291979d650 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x56291979d638 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x56291979d600 <col:66> '_Bool' lvalue Var 0x56291979c128 'b$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x56291979d998 <line:735:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x56291979d6d0 <col:3> '_Bool' lvalue Var 0x56291979c220 'b$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x56291979d980 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x56291979d950 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x56291979d870 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x56291979d790 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x56291979d748 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x56291979d730 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x56291979d6f0 <col:20> '_Bool' lvalue Var 0x56291979c128 'b$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x56291979d778 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x56291979d760 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x56291979d710 <col:38> '_Bool' lvalue Var 0x56291979bb78 'b$r_buff0_thd1' '_Bool'
|   |     | `-BinaryOperator 0x56291979d850 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x56291979d808 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x56291979d7f0 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x56291979d7b0 <col:56> '_Bool' lvalue Var 0x56291979c220 'b$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x56291979d838 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x56291979d820 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x56291979d7d0 <col:74> '_Bool' lvalue Var 0x56291979bdd0 'b$r_buff1_thd1' '_Bool'
|   |     |-ImplicitCastExpr 0x56291979d908 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x56291979d8c0 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x56291979d890 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x56291979d938 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x56291979d920 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x56291979d8e8 <col:102> '_Bool' lvalue Var 0x56291979c220 'b$w_buff1_used' '_Bool'
|   |-BinaryOperator 0x56291979dbb0 <line:736:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x56291979d9b8 <col:3> '_Bool' lvalue Var 0x56291979bb78 'b$r_buff0_thd1' '_Bool'
|   | `-ImplicitCastExpr 0x56291979db98 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x56291979db68 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x56291979da78 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x56291979da30 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x56291979da18 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x56291979d9d8 <col:20> '_Bool' lvalue Var 0x56291979c128 'b$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x56291979da60 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x56291979da48 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x56291979d9f8 <col:38> '_Bool' lvalue Var 0x56291979bb78 'b$r_buff0_thd1' '_Bool'
|   |     |-ImplicitCastExpr 0x56291979db20 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x56291979dac8 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x56291979da98 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x56291979db50 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x56291979db38 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x56291979daf0 <col:66> '_Bool' lvalue Var 0x56291979bb78 'b$r_buff0_thd1' '_Bool'
|   |-BinaryOperator 0x56291979de98 <line:737:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x56291979dbd0 <col:3> '_Bool' lvalue Var 0x56291979bdd0 'b$r_buff1_thd1' '_Bool'
|   | `-ImplicitCastExpr 0x56291979de80 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x56291979de50 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x56291979dd70 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x56291979dc90 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x56291979dc48 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x56291979dc30 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x56291979dbf0 <col:20> '_Bool' lvalue Var 0x56291979c128 'b$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x56291979dc78 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x56291979dc60 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x56291979dc10 <col:38> '_Bool' lvalue Var 0x56291979bb78 'b$r_buff0_thd1' '_Bool'
|   |     | `-BinaryOperator 0x56291979dd50 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x56291979dd08 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x56291979dcf0 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x56291979dcb0 <col:56> '_Bool' lvalue Var 0x56291979c220 'b$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x56291979dd38 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x56291979dd20 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x56291979dcd0 <col:74> '_Bool' lvalue Var 0x56291979bdd0 'b$r_buff1_thd1' '_Bool'
|   |     |-ImplicitCastExpr 0x56291979de08 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x56291979ddc0 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x56291979dd90 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x56291979de38 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x56291979de20 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x56291979dde8 <col:102> '_Bool' lvalue Var 0x56291979bdd0 'b$r_buff1_thd1' '_Bool'
|   |-CallExpr 0x56291979def0 <line:738:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x56291979ded8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x56291979deb8 <col:3> 'void ()' Function 0x562919741f00 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x56291979df48 <line:739:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x56291979df30 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x56291979df10 <col:3> 'void ()' Function 0x562919741e40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x56291979e000 <line:740:3, col:41> 'int' '='
|   | |-DeclRefExpr 0x56291979df68 <col:3> 'int' lvalue Var 0x56291979b278 '__unbuffered_cnt' 'int'
|   | `-BinaryOperator 0x56291979dfe0 <col:22, col:41> 'int' '+'
|   |   |-ImplicitCastExpr 0x56291979dfc8 <col:22> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x56291979df88 <col:22> 'int' lvalue Var 0x56291979b278 '__unbuffered_cnt' 'int'
|   |   `-IntegerLiteral 0x56291979dfa8 <col:41> 'int' 1
|   |-CallExpr 0x56291979e058 <line:741:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x56291979e040 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x56291979e020 <col:3> 'void ()' Function 0x562919741f00 '__VERIFIER_atomic_end' 'void ()'
|   `-ReturnStmt 0x56291979e108 <line:742:3, col:36>
|     `-CallExpr 0x56291979e0e8 <col:10, col:36> 'void *'
|       `-ImplicitCastExpr 0x56291979e0d0 <col:10> 'void *(*)(void)' <FunctionToPointerDecay>
|         `-DeclRefExpr 0x56291979e078 <col:10> 'void *(void)' Function 0x562919741958 '__VERIFIER_nondet_pointer' 'void *(void)'
|-FunctionDecl 0x56291979e2b0 prev 0x56291979ac48 <line:744:1, line:763:1> line:744:8 used P1 'void *(void *)'
| |-ParmVarDecl 0x56291979e218 <col:11, col:17> col:17 arg 'void *'
| `-CompoundStmt 0x56291979f4f0 <line:745:1, line:763:1>
|   |-CallExpr 0x56291979e390 <line:746:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x56291979e378 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x56291979e358 <col:3> 'void ()' Function 0x562919741e40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x56291979e3f0 <line:747:3, col:7> 'int' '='
|   | |-DeclRefExpr 0x56291979e3b0 <col:3> 'int' lvalue Var 0x56291979c410 'x' 'int'
|   | `-IntegerLiteral 0x56291979e3d0 <col:7> 'int' 2
|   |-CallExpr 0x56291979e448 <line:748:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x56291979e430 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x56291979e410 <col:3> 'void ()' Function 0x562919741f00 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x56291979e4a0 <line:749:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x56291979e488 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x56291979e468 <col:3> 'void ()' Function 0x562919741e40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x56291979e518 <line:750:3, col:25> 'int' '='
|   | |-DeclRefExpr 0x56291979e4c0 <col:3> 'int' lvalue Var 0x56291979b398 '__unbuffered_p1_EAX' 'int'
|   | `-ImplicitCastExpr 0x56291979e500 <col:25> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x56291979e4e0 <col:25> 'int' lvalue Var 0x56291979c530 'y' 'int'
|   |-CallExpr 0x56291979e570 <line:751:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x56291979e558 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x56291979e538 <col:3> 'void ()' Function 0x562919741f00 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x56291979e5c8 <line:752:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x56291979e5b0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x56291979e590 <col:3> 'void ()' Function 0x562919741e40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x56291979e8b0 <line:753:3, col:103> 'int' '='
|   | |-DeclRefExpr 0x56291979e5e8 <col:3> 'int' lvalue Var 0x56291979b938 'b' 'int'
|   | `-ConditionalOperator 0x56291979e880 <col:7, col:103> 'int'
|   |   |-BinaryOperator 0x56291979e6a8 <col:7, col:25> 'int' '&&'
|   |   | |-ImplicitCastExpr 0x56291979e660 <col:7> 'int' <IntegralCast>
|   |   | | `-ImplicitCastExpr 0x56291979e648 <col:7> '_Bool' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x56291979e608 <col:7> '_Bool' lvalue Var 0x56291979c128 'b$w_buff0_used' '_Bool'
|   |   | `-ImplicitCastExpr 0x56291979e690 <col:25> 'int' <IntegralCast>
|   |   |   `-ImplicitCastExpr 0x56291979e678 <col:25> '_Bool' <LValueToRValue>
|   |   |     `-DeclRefExpr 0x56291979e628 <col:25> '_Bool' lvalue Var 0x56291979bbf0 'b$r_buff0_thd2' '_Bool'
|   |   |-ImplicitCastExpr 0x56291979e868 <col:42> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x56291979e6c8 <col:42> 'int' lvalue Var 0x56291979c0b0 'b$w_buff0' 'int'
|   |   `-ParenExpr 0x56291979e848 <col:54, col:103> 'int'
|   |     `-ConditionalOperator 0x56291979e818 <col:55, col:102> 'int'
|   |       |-BinaryOperator 0x56291979e788 <col:55, col:73> 'int' '&&'
|   |       | |-ImplicitCastExpr 0x56291979e740 <col:55> 'int' <IntegralCast>
|   |       | | `-ImplicitCastExpr 0x56291979e728 <col:55> '_Bool' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x56291979e6e8 <col:55> '_Bool' lvalue Var 0x56291979c220 'b$w_buff1_used' '_Bool'
|   |       | `-ImplicitCastExpr 0x56291979e770 <col:73> 'int' <IntegralCast>
|   |       |   `-ImplicitCastExpr 0x56291979e758 <col:73> '_Bool' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x56291979e708 <col:73> '_Bool' lvalue Var 0x56291979be48 'b$r_buff1_thd2' '_Bool'
|   |       |-ImplicitCastExpr 0x56291979e7e8 <col:90> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x56291979e7a8 <col:90> 'int' lvalue Var 0x56291979c1a8 'b$w_buff1' 'int'
|   |       `-ImplicitCastExpr 0x56291979e800 <col:102> 'int' <LValueToRValue>
|   |         `-DeclRefExpr 0x56291979e7c8 <col:102> 'int' lvalue Var 0x56291979b938 'b' 'int'
|   |-BinaryOperator 0x56291979eab8 <line:754:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x56291979e8d0 <col:3> '_Bool' lvalue Var 0x56291979c128 'b$w_buff0_used' '_Bool'
|   | `-ImplicitCastExpr 0x56291979eaa0 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x56291979ea70 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x56291979e990 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x56291979e948 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x56291979e930 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x56291979e8f0 <col:20> '_Bool' lvalue Var 0x56291979c128 'b$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x56291979e978 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x56291979e960 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x56291979e910 <col:38> '_Bool' lvalue Var 0x56291979bbf0 'b$r_buff0_thd2' '_Bool'
|   |     |-ImplicitCastExpr 0x56291979ea28 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x56291979e9e0 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x56291979e9b0 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x56291979ea58 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x56291979ea40 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x56291979ea08 <col:66> '_Bool' lvalue Var 0x56291979c128 'b$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x56291979edb8 <line:755:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x56291979ead8 <col:3> '_Bool' lvalue Var 0x56291979c220 'b$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x56291979eda0 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x56291979ed70 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x56291979ec90 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x56291979ebb0 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x56291979eb68 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x56291979eb50 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x56291979eaf8 <col:20> '_Bool' lvalue Var 0x56291979c128 'b$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x56291979eb98 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x56291979eb80 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x56291979eb30 <col:38> '_Bool' lvalue Var 0x56291979bbf0 'b$r_buff0_thd2' '_Bool'
|   |     | `-BinaryOperator 0x56291979ec70 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x56291979ec28 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x56291979ec10 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x56291979ebd0 <col:56> '_Bool' lvalue Var 0x56291979c220 'b$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x56291979ec58 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x56291979ec40 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x56291979ebf0 <col:74> '_Bool' lvalue Var 0x56291979be48 'b$r_buff1_thd2' '_Bool'
|   |     |-ImplicitCastExpr 0x56291979ed28 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x56291979ece0 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x56291979ecb0 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x56291979ed58 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x56291979ed40 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x56291979ed08 <col:102> '_Bool' lvalue Var 0x56291979c220 'b$w_buff1_used' '_Bool'
|   |-BinaryOperator 0x56291979efc0 <line:756:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x56291979edd8 <col:3> '_Bool' lvalue Var 0x56291979bbf0 'b$r_buff0_thd2' '_Bool'
|   | `-ImplicitCastExpr 0x56291979efa8 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x56291979ef78 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x56291979ee98 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x56291979ee50 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x56291979ee38 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x56291979edf8 <col:20> '_Bool' lvalue Var 0x56291979c128 'b$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x56291979ee80 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x56291979ee68 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x56291979ee18 <col:38> '_Bool' lvalue Var 0x56291979bbf0 'b$r_buff0_thd2' '_Bool'
|   |     |-ImplicitCastExpr 0x56291979ef30 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x56291979eee8 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x56291979eeb8 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x56291979ef60 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x56291979ef48 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x56291979ef10 <col:66> '_Bool' lvalue Var 0x56291979bbf0 'b$r_buff0_thd2' '_Bool'
|   |-BinaryOperator 0x56291979f2a8 <line:757:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x56291979efe0 <col:3> '_Bool' lvalue Var 0x56291979be48 'b$r_buff1_thd2' '_Bool'
|   | `-ImplicitCastExpr 0x56291979f290 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x56291979f260 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x56291979f180 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x56291979f0a0 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x56291979f058 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x56291979f040 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x56291979f000 <col:20> '_Bool' lvalue Var 0x56291979c128 'b$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x56291979f088 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x56291979f070 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x56291979f020 <col:38> '_Bool' lvalue Var 0x56291979bbf0 'b$r_buff0_thd2' '_Bool'
|   |     | `-BinaryOperator 0x56291979f160 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x56291979f118 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x56291979f100 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x56291979f0c0 <col:56> '_Bool' lvalue Var 0x56291979c220 'b$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x56291979f148 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x56291979f130 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x56291979f0e0 <col:74> '_Bool' lvalue Var 0x56291979be48 'b$r_buff1_thd2' '_Bool'
|   |     |-ImplicitCastExpr 0x56291979f218 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x56291979f1d0 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x56291979f1a0 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x56291979f248 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x56291979f230 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x56291979f1f8 <col:102> '_Bool' lvalue Var 0x56291979be48 'b$r_buff1_thd2' '_Bool'
|   |-CallExpr 0x56291979f300 <line:758:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x56291979f2e8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x56291979f2c8 <col:3> 'void ()' Function 0x562919741f00 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x56291979f358 <line:759:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x56291979f340 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x56291979f320 <col:3> 'void ()' Function 0x562919741e40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x56291979f410 <line:760:3, col:41> 'int' '='
|   | |-DeclRefExpr 0x56291979f378 <col:3> 'int' lvalue Var 0x56291979b278 '__unbuffered_cnt' 'int'
|   | `-BinaryOperator 0x56291979f3f0 <col:22, col:41> 'int' '+'
|   |   |-ImplicitCastExpr 0x56291979f3d8 <col:22> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x56291979f398 <col:22> 'int' lvalue Var 0x56291979b278 '__unbuffered_cnt' 'int'
|   |   `-IntegerLiteral 0x56291979f3b8 <col:41> 'int' 1
|   |-CallExpr 0x56291979f468 <line:761:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x56291979f450 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x56291979f430 <col:3> 'void ()' Function 0x562919741f00 '__VERIFIER_atomic_end' 'void ()'
|   `-ReturnStmt 0x56291979f4e0 <line:762:3, col:36>
|     `-CallExpr 0x56291979f4c0 <col:10, col:36> 'void *'
|       `-ImplicitCastExpr 0x56291979f4a8 <col:10> 'void *(*)(void)' <FunctionToPointerDecay>
|         `-DeclRefExpr 0x56291979f488 <col:10> 'void *(void)' Function 0x562919741958 '__VERIFIER_nondet_pointer' 'void *(void)'
|-FunctionDecl 0x56291979f638 prev 0x56291979ada0 <line:764:1, line:783:1> line:764:8 used P2 'void *(void *)'
| |-ParmVarDecl 0x56291979f5a0 <col:11, col:17> col:17 arg 'void *'
| `-CompoundStmt 0x5629197a0870 <line:765:1, line:783:1>
|   |-CallExpr 0x56291979f718 <line:766:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x56291979f700 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x56291979f6e0 <col:3> 'void ()' Function 0x562919741e40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x56291979f778 <line:767:3, col:7> 'int' '='
|   | |-DeclRefExpr 0x56291979f738 <col:3> 'int' lvalue Var 0x56291979c530 'y' 'int'
|   | `-IntegerLiteral 0x56291979f758 <col:7> 'int' 1
|   |-CallExpr 0x56291979f7d0 <line:768:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x56291979f7b8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x56291979f798 <col:3> 'void ()' Function 0x562919741f00 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x56291979f828 <line:769:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x56291979f810 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x56291979f7f0 <col:3> 'void ()' Function 0x562919741e40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x56291979f8a0 <line:770:3, col:25> 'int' '='
|   | |-DeclRefExpr 0x56291979f848 <col:3> 'int' lvalue Var 0x56291979b4b8 '__unbuffered_p2_EAX' 'int'
|   | `-ImplicitCastExpr 0x56291979f888 <col:25> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x56291979f868 <col:25> 'int' lvalue Var 0x56291979c650 'z' 'int'
|   |-CallExpr 0x56291979f8f8 <line:771:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x56291979f8e0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x56291979f8c0 <col:3> 'void ()' Function 0x562919741f00 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x56291979f950 <line:772:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x56291979f938 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x56291979f918 <col:3> 'void ()' Function 0x562919741e40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x56291979fc48 <line:773:3, col:103> 'int' '='
|   | |-DeclRefExpr 0x56291979f970 <col:3> 'int' lvalue Var 0x56291979b938 'b' 'int'
|   | `-ConditionalOperator 0x56291979fc18 <col:7, col:103> 'int'
|   |   |-BinaryOperator 0x56291979fa30 <col:7, col:25> 'int' '&&'
|   |   | |-ImplicitCastExpr 0x56291979f9e8 <col:7> 'int' <IntegralCast>
|   |   | | `-ImplicitCastExpr 0x56291979f9d0 <col:7> '_Bool' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x56291979f990 <col:7> '_Bool' lvalue Var 0x56291979c128 'b$w_buff0_used' '_Bool'
|   |   | `-ImplicitCastExpr 0x56291979fa18 <col:25> 'int' <IntegralCast>
|   |   |   `-ImplicitCastExpr 0x56291979fa00 <col:25> '_Bool' <LValueToRValue>
|   |   |     `-DeclRefExpr 0x56291979f9b0 <col:25> '_Bool' lvalue Var 0x56291979bc68 'b$r_buff0_thd3' '_Bool'
|   |   |-ImplicitCastExpr 0x56291979fc00 <col:42> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x56291979fa50 <col:42> 'int' lvalue Var 0x56291979c0b0 'b$w_buff0' 'int'
|   |   `-ParenExpr 0x56291979fbe0 <col:54, col:103> 'int'
|   |     `-ConditionalOperator 0x56291979fbb0 <col:55, col:102> 'int'
|   |       |-BinaryOperator 0x56291979fb10 <col:55, col:73> 'int' '&&'
|   |       | |-ImplicitCastExpr 0x56291979fac8 <col:55> 'int' <IntegralCast>
|   |       | | `-ImplicitCastExpr 0x56291979fab0 <col:55> '_Bool' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x56291979fa70 <col:55> '_Bool' lvalue Var 0x56291979c220 'b$w_buff1_used' '_Bool'
|   |       | `-ImplicitCastExpr 0x56291979faf8 <col:73> 'int' <IntegralCast>
|   |       |   `-ImplicitCastExpr 0x56291979fae0 <col:73> '_Bool' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x56291979fa90 <col:73> '_Bool' lvalue Var 0x56291979bec0 'b$r_buff1_thd3' '_Bool'
|   |       |-ImplicitCastExpr 0x56291979fb80 <col:90> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x56291979fb40 <col:90> 'int' lvalue Var 0x56291979c1a8 'b$w_buff1' 'int'
|   |       `-ImplicitCastExpr 0x56291979fb98 <col:102> 'int' <LValueToRValue>
|   |         `-DeclRefExpr 0x56291979fb60 <col:102> 'int' lvalue Var 0x56291979b938 'b' 'int'
|   |-BinaryOperator 0x56291979fe50 <line:774:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x56291979fc68 <col:3> '_Bool' lvalue Var 0x56291979c128 'b$w_buff0_used' '_Bool'
|   | `-ImplicitCastExpr 0x56291979fe38 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x56291979fe08 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x56291979fd28 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x56291979fce0 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x56291979fcc8 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x56291979fc88 <col:20> '_Bool' lvalue Var 0x56291979c128 'b$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x56291979fd10 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x56291979fcf8 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x56291979fca8 <col:38> '_Bool' lvalue Var 0x56291979bc68 'b$r_buff0_thd3' '_Bool'
|   |     |-ImplicitCastExpr 0x56291979fdc0 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x56291979fd78 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x56291979fd48 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x56291979fdf0 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x56291979fdd8 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x56291979fda0 <col:66> '_Bool' lvalue Var 0x56291979c128 'b$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x5629197a0138 <line:775:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x56291979fe70 <col:3> '_Bool' lvalue Var 0x56291979c220 'b$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x5629197a0120 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x5629197a00f0 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x5629197a0010 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x56291979ff30 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x56291979fee8 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x56291979fed0 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x56291979fe90 <col:20> '_Bool' lvalue Var 0x56291979c128 'b$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x56291979ff18 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x56291979ff00 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x56291979feb0 <col:38> '_Bool' lvalue Var 0x56291979bc68 'b$r_buff0_thd3' '_Bool'
|   |     | `-BinaryOperator 0x56291979fff0 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x56291979ffa8 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x56291979ff90 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x56291979ff50 <col:56> '_Bool' lvalue Var 0x56291979c220 'b$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x56291979ffd8 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x56291979ffc0 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x56291979ff70 <col:74> '_Bool' lvalue Var 0x56291979bec0 'b$r_buff1_thd3' '_Bool'
|   |     |-ImplicitCastExpr 0x5629197a00a8 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x5629197a0060 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x5629197a0030 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x5629197a00d8 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x5629197a00c0 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x5629197a0088 <col:102> '_Bool' lvalue Var 0x56291979c220 'b$w_buff1_used' '_Bool'
|   |-BinaryOperator 0x5629197a0340 <line:776:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x5629197a0158 <col:3> '_Bool' lvalue Var 0x56291979bc68 'b$r_buff0_thd3' '_Bool'
|   | `-ImplicitCastExpr 0x5629197a0328 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x5629197a02f8 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x5629197a0218 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x5629197a01d0 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x5629197a01b8 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x5629197a0178 <col:20> '_Bool' lvalue Var 0x56291979c128 'b$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x5629197a0200 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x5629197a01e8 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x5629197a0198 <col:38> '_Bool' lvalue Var 0x56291979bc68 'b$r_buff0_thd3' '_Bool'
|   |     |-ImplicitCastExpr 0x5629197a02b0 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x5629197a0268 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x5629197a0238 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x5629197a02e0 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x5629197a02c8 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x5629197a0290 <col:66> '_Bool' lvalue Var 0x56291979bc68 'b$r_buff0_thd3' '_Bool'
|   |-BinaryOperator 0x5629197a0628 <line:777:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x5629197a0360 <col:3> '_Bool' lvalue Var 0x56291979bec0 'b$r_buff1_thd3' '_Bool'
|   | `-ImplicitCastExpr 0x5629197a0610 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x5629197a05e0 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x5629197a0500 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x5629197a0420 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x5629197a03d8 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x5629197a03c0 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x5629197a0380 <col:20> '_Bool' lvalue Var 0x56291979c128 'b$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x5629197a0408 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x5629197a03f0 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x5629197a03a0 <col:38> '_Bool' lvalue Var 0x56291979bc68 'b$r_buff0_thd3' '_Bool'
|   |     | `-BinaryOperator 0x5629197a04e0 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x5629197a0498 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x5629197a0480 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x5629197a0440 <col:56> '_Bool' lvalue Var 0x56291979c220 'b$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x5629197a04c8 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x5629197a04b0 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x5629197a0460 <col:74> '_Bool' lvalue Var 0x56291979bec0 'b$r_buff1_thd3' '_Bool'
|   |     |-ImplicitCastExpr 0x5629197a0598 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x5629197a0550 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x5629197a0520 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x5629197a05c8 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x5629197a05b0 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x5629197a0578 <col:102> '_Bool' lvalue Var 0x56291979bec0 'b$r_buff1_thd3' '_Bool'
|   |-CallExpr 0x5629197a0680 <line:778:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x5629197a0668 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5629197a0648 <col:3> 'void ()' Function 0x562919741f00 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x5629197a06d8 <line:779:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x5629197a06c0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5629197a06a0 <col:3> 'void ()' Function 0x562919741e40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x5629197a0790 <line:780:3, col:41> 'int' '='
|   | |-DeclRefExpr 0x5629197a06f8 <col:3> 'int' lvalue Var 0x56291979b278 '__unbuffered_cnt' 'int'
|   | `-BinaryOperator 0x5629197a0770 <col:22, col:41> 'int' '+'
|   |   |-ImplicitCastExpr 0x5629197a0758 <col:22> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x5629197a0718 <col:22> 'int' lvalue Var 0x56291979b278 '__unbuffered_cnt' 'int'
|   |   `-IntegerLiteral 0x5629197a0738 <col:41> 'int' 1
|   |-CallExpr 0x5629197a07e8 <line:781:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x5629197a07d0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5629197a07b0 <col:3> 'void ()' Function 0x562919741f00 '__VERIFIER_atomic_end' 'void ()'
|   `-ReturnStmt 0x5629197a0860 <line:782:3, col:36>
|     `-CallExpr 0x5629197a0840 <col:10, col:36> 'void *'
|       `-ImplicitCastExpr 0x5629197a0828 <col:10> 'void *(*)(void)' <FunctionToPointerDecay>
|         `-DeclRefExpr 0x5629197a0808 <col:10> 'void *(void)' Function 0x562919741958 '__VERIFIER_nondet_pointer' 'void *(void)'
|-FunctionDecl 0x5629197a09b8 prev 0x56291979aef8 <line:784:1, line:822:1> line:784:8 used P3 'void *(void *)'
| |-ParmVarDecl 0x5629197a0920 <col:11, col:17> col:17 arg 'void *'
| `-CompoundStmt 0x5629197a47d8 <line:785:1, line:822:1>
|   |-CallExpr 0x5629197a0a98 <line:786:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x5629197a0a80 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5629197a0a60 <col:3> 'void ()' Function 0x562919741e40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x5629197a0af8 <line:787:3, col:7> 'int' '='
|   | |-DeclRefExpr 0x5629197a0ab8 <col:3> 'int' lvalue Var 0x56291979c650 'z' 'int'
|   | `-IntegerLiteral 0x5629197a0ad8 <col:7> 'int' 1
|   |-CallExpr 0x5629197a0b68 <line:788:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x5629197a0b50 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5629197a0b18 <col:3> 'void ()' Function 0x562919741f00 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x5629197a0bc0 <line:789:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x5629197a0ba8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5629197a0b88 <col:3> 'void ()' Function 0x562919741e40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x5629197a0c20 <line:790:3, col:7> 'int' '='
|   | |-DeclRefExpr 0x5629197a0be0 <col:3> 'int' lvalue Var 0x56291979b818 'a' 'int'
|   | `-IntegerLiteral 0x5629197a0c00 <col:7> 'int' 1
|   |-CallExpr 0x5629197a0c78 <line:791:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x5629197a0c60 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5629197a0c40 <col:3> 'void ()' Function 0x562919741f00 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x5629197a0cd0 <line:792:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x5629197a0cb8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5629197a0c98 <col:3> 'void ()' Function 0x562919741e40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x5629197a0d48 <line:793:3, col:25> 'int' '='
|   | |-DeclRefExpr 0x5629197a0cf0 <col:3> 'int' lvalue Var 0x56291979b5d8 '__unbuffered_p3_EAX' 'int'
|   | `-ImplicitCastExpr 0x5629197a0d30 <col:25> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x5629197a0d10 <col:25> 'int' lvalue Var 0x56291979b818 'a' 'int'
|   |-CallExpr 0x5629197a0da0 <line:794:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x5629197a0d88 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5629197a0d68 <col:3> 'void ()' Function 0x562919741f00 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x5629197a0df8 <line:795:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x5629197a0de0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5629197a0dc0 <col:3> 'void ()' Function 0x562919741e40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x5629197a0ea8 <line:796:3, col:45> '_Bool' '='
|   | |-DeclRefExpr 0x5629197a0e18 <col:3> '_Bool' lvalue Var 0x56291979c6e8 'weak$$choice0' '_Bool'
|   | `-ImplicitCastExpr 0x5629197a0e90 <col:19, col:45> '_Bool' <PointerToBoolean>
|   |   `-CallExpr 0x5629197a0e70 <col:19, col:45> 'void *'
|   |     `-ImplicitCastExpr 0x5629197a0e58 <col:19> 'void *(*)(void)' <FunctionToPointerDecay>
|   |       `-DeclRefExpr 0x5629197a0e38 <col:19> 'void *(void)' Function 0x562919741958 '__VERIFIER_nondet_pointer' 'void *(void)'
|   |-BinaryOperator 0x5629197a0f58 <line:797:3, col:45> '_Bool' '='
|   | |-DeclRefExpr 0x5629197a0ec8 <col:3> '_Bool' lvalue Var 0x56291979c760 'weak$$choice2' '_Bool'
|   | `-ImplicitCastExpr 0x5629197a0f40 <col:19, col:45> '_Bool' <PointerToBoolean>
|   |   `-CallExpr 0x5629197a0f20 <col:19, col:45> 'void *'
|   |     `-ImplicitCastExpr 0x5629197a0f08 <col:19> 'void *(*)(void)' <FunctionToPointerDecay>
|   |       `-DeclRefExpr 0x5629197a0ee8 <col:19> 'void *(void)' Function 0x562919741958 '__VERIFIER_nondet_pointer' 'void *(void)'
|   |-BinaryOperator 0x5629197a0fd0 <line:798:3, col:21> '_Bool' '='
|   | |-DeclRefExpr 0x5629197a0f78 <col:3> '_Bool' lvalue Var 0x56291979b9d0 'b$flush_delayed' '_Bool'
|   | `-ImplicitCastExpr 0x5629197a0fb8 <col:21> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x5629197a0f98 <col:21> '_Bool' lvalue Var 0x56291979c760 'weak$$choice2' '_Bool'
|   |-BinaryOperator 0x5629197a1048 <line:799:3, col:15> 'int' '='
|   | |-DeclRefExpr 0x5629197a0ff0 <col:3> 'int' lvalue Var 0x56291979ba50 'b$mem_tmp' 'int'
|   | `-ImplicitCastExpr 0x5629197a1030 <col:15> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x5629197a1010 <col:15> 'int' lvalue Var 0x56291979b938 'b' 'int'
|   |-BinaryOperator 0x5629197a1480 <line:800:3, col:162> 'int' '='
|   | |-DeclRefExpr 0x5629197a1068 <col:3> 'int' lvalue Var 0x56291979b938 'b' 'int'
|   | `-ConditionalOperator 0x5629197a1450 <col:7, col:162> 'int'
|   |   |-BinaryOperator 0x5629197a1278 <col:7, col:84> 'int' '||'
|   |   | |-BinaryOperator 0x5629197a1198 <col:7, col:46> 'int' '||'
|   |   | | |-UnaryOperator 0x5629197a10c0 <col:7, col:8> 'int' prefix '!' cannot overflow
|   |   | | | `-ImplicitCastExpr 0x5629197a10a8 <col:8> '_Bool' <LValueToRValue>
|   |   | | |   `-DeclRefExpr 0x5629197a1088 <col:8> '_Bool' lvalue Var 0x56291979c128 'b$w_buff0_used' '_Bool'
|   |   | | `-BinaryOperator 0x5629197a1178 <col:26, col:46> 'int' '&&'
|   |   | |   |-UnaryOperator 0x5629197a1110 <col:26, col:27> 'int' prefix '!' cannot overflow
|   |   | |   | `-ImplicitCastExpr 0x5629197a10f8 <col:27> '_Bool' <LValueToRValue>
|   |   | |   |   `-DeclRefExpr 0x5629197a10d8 <col:27> '_Bool' lvalue Var 0x56291979bce0 'b$r_buff0_thd4' '_Bool'
|   |   | |   `-UnaryOperator 0x5629197a1160 <col:45, col:46> 'int' prefix '!' cannot overflow
|   |   | |     `-ImplicitCastExpr 0x5629197a1148 <col:46> '_Bool' <LValueToRValue>
|   |   | |       `-DeclRefExpr 0x5629197a1128 <col:46> '_Bool' lvalue Var 0x56291979c220 'b$w_buff1_used' '_Bool'
|   |   | `-BinaryOperator 0x5629197a1258 <col:64, col:84> 'int' '&&'
|   |   |   |-UnaryOperator 0x5629197a11f0 <col:64, col:65> 'int' prefix '!' cannot overflow
|   |   |   | `-ImplicitCastExpr 0x5629197a11d8 <col:65> '_Bool' <LValueToRValue>
|   |   |   |   `-DeclRefExpr 0x5629197a11b8 <col:65> '_Bool' lvalue Var 0x56291979bce0 'b$r_buff0_thd4' '_Bool'
|   |   |   `-UnaryOperator 0x5629197a1240 <col:83, col:84> 'int' prefix '!' cannot overflow
|   |   |     `-ImplicitCastExpr 0x5629197a1228 <col:84> '_Bool' <LValueToRValue>
|   |   |       `-DeclRefExpr 0x5629197a1208 <col:84> '_Bool' lvalue Var 0x56291979bf38 'b$r_buff1_thd4' '_Bool'
|   |   |-ImplicitCastExpr 0x5629197a1438 <col:101> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x5629197a1298 <col:101> 'int' lvalue Var 0x56291979b938 'b' 'int'
|   |   `-ParenExpr 0x5629197a1418 <col:105, col:162> 'int'
|   |     `-ConditionalOperator 0x5629197a13e8 <col:106, col:153> 'int'
|   |       |-BinaryOperator 0x5629197a1358 <col:106, col:124> 'int' '&&'
|   |       | |-ImplicitCastExpr 0x5629197a1310 <col:106> 'int' <IntegralCast>
|   |       | | `-ImplicitCastExpr 0x5629197a12f8 <col:106> '_Bool' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x5629197a12b8 <col:106> '_Bool' lvalue Var 0x56291979c128 'b$w_buff0_used' '_Bool'
|   |       | `-ImplicitCastExpr 0x5629197a1340 <col:124> 'int' <IntegralCast>
|   |       |   `-ImplicitCastExpr 0x5629197a1328 <col:124> '_Bool' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x5629197a12d8 <col:124> '_Bool' lvalue Var 0x56291979bce0 'b$r_buff0_thd4' '_Bool'
|   |       |-ImplicitCastExpr 0x5629197a13b8 <col:141> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x5629197a1378 <col:141> 'int' lvalue Var 0x56291979c0b0 'b$w_buff0' 'int'
|   |       `-ImplicitCastExpr 0x5629197a13d0 <col:153> 'int' <LValueToRValue>
|   |         `-DeclRefExpr 0x5629197a1398 <col:153> 'int' lvalue Var 0x56291979c1a8 'b$w_buff1' 'int'
|   |-BinaryOperator 0x5629197a1990 <line:801:3, col:208> 'int' '='
|   | |-DeclRefExpr 0x5629197a14a0 <col:3> 'int' lvalue Var 0x56291979c0b0 'b$w_buff0' 'int'
|   | `-ConditionalOperator 0x5629197a1960 <col:15, col:208> 'int'
|   |   |-ImplicitCastExpr 0x5629197a1930 <col:15> 'int' <IntegralCast>
|   |   | `-ImplicitCastExpr 0x5629197a1918 <col:15> '_Bool' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x5629197a14c0 <col:15> '_Bool' lvalue Var 0x56291979c760 'weak$$choice2' '_Bool'
|   |   |-ImplicitCastExpr 0x5629197a1948 <col:31> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x5629197a14e0 <col:31> 'int' lvalue Var 0x56291979c0b0 'b$w_buff0' 'int'
|   |   `-ParenExpr 0x5629197a18f8 <col:43, col:208> 'int'
|   |     `-ConditionalOperator 0x5629197a18c8 <col:44, col:207> 'int'
|   |       |-BinaryOperator 0x5629197a16f0 <col:44, col:121> 'int' '||'
|   |       | |-BinaryOperator 0x5629197a1610 <col:44, col:83> 'int' '||'
|   |       | | |-UnaryOperator 0x5629197a1538 <col:44, col:45> 'int' prefix '!' cannot overflow
|   |       | | | `-ImplicitCastExpr 0x5629197a1520 <col:45> '_Bool' <LValueToRValue>
|   |       | | |   `-DeclRefExpr 0x5629197a1500 <col:45> '_Bool' lvalue Var 0x56291979c128 'b$w_buff0_used' '_Bool'
|   |       | | `-BinaryOperator 0x5629197a15f0 <col:63, col:83> 'int' '&&'
|   |       | |   |-UnaryOperator 0x5629197a1588 <col:63, col:64> 'int' prefix '!' cannot overflow
|   |       | |   | `-ImplicitCastExpr 0x5629197a1570 <col:64> '_Bool' <LValueToRValue>
|   |       | |   |   `-DeclRefExpr 0x5629197a1550 <col:64> '_Bool' lvalue Var 0x56291979bce0 'b$r_buff0_thd4' '_Bool'
|   |       | |   `-UnaryOperator 0x5629197a15d8 <col:82, col:83> 'int' prefix '!' cannot overflow
|   |       | |     `-ImplicitCastExpr 0x5629197a15c0 <col:83> '_Bool' <LValueToRValue>
|   |       | |       `-DeclRefExpr 0x5629197a15a0 <col:83> '_Bool' lvalue Var 0x56291979c220 'b$w_buff1_used' '_Bool'
|   |       | `-BinaryOperator 0x5629197a16d0 <col:101, col:121> 'int' '&&'
|   |       |   |-UnaryOperator 0x5629197a1668 <col:101, col:102> 'int' prefix '!' cannot overflow
|   |       |   | `-ImplicitCastExpr 0x5629197a1650 <col:102> '_Bool' <LValueToRValue>
|   |       |   |   `-DeclRefExpr 0x5629197a1630 <col:102> '_Bool' lvalue Var 0x56291979bce0 'b$r_buff0_thd4' '_Bool'
|   |       |   `-UnaryOperator 0x5629197a16b8 <col:120, col:121> 'int' prefix '!' cannot overflow
|   |       |     `-ImplicitCastExpr 0x5629197a16a0 <col:121> '_Bool' <LValueToRValue>
|   |       |       `-DeclRefExpr 0x5629197a1680 <col:121> '_Bool' lvalue Var 0x56291979bf38 'b$r_buff1_thd4' '_Bool'
|   |       |-ImplicitCastExpr 0x5629197a18b0 <col:138> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x5629197a1710 <col:138> 'int' lvalue Var 0x56291979c0b0 'b$w_buff0' 'int'
|   |       `-ParenExpr 0x5629197a1890 <col:150, col:207> 'int'
|   |         `-ConditionalOperator 0x5629197a1860 <col:151, col:198> 'int'
|   |           |-BinaryOperator 0x5629197a17d0 <col:151, col:169> 'int' '&&'
|   |           | |-ImplicitCastExpr 0x5629197a1788 <col:151> 'int' <IntegralCast>
|   |           | | `-ImplicitCastExpr 0x5629197a1770 <col:151> '_Bool' <LValueToRValue>
|   |           | |   `-DeclRefExpr 0x5629197a1730 <col:151> '_Bool' lvalue Var 0x56291979c128 'b$w_buff0_used' '_Bool'
|   |           | `-ImplicitCastExpr 0x5629197a17b8 <col:169> 'int' <IntegralCast>
|   |           |   `-ImplicitCastExpr 0x5629197a17a0 <col:169> '_Bool' <LValueToRValue>
|   |           |     `-DeclRefExpr 0x5629197a1750 <col:169> '_Bool' lvalue Var 0x56291979bce0 'b$r_buff0_thd4' '_Bool'
|   |           |-ImplicitCastExpr 0x5629197a1830 <col:186> 'int' <LValueToRValue>
|   |           | `-DeclRefExpr 0x5629197a17f0 <col:186> 'int' lvalue Var 0x56291979c0b0 'b$w_buff0' 'int'
|   |           `-ImplicitCastExpr 0x5629197a1848 <col:198> 'int' <LValueToRValue>
|   |             `-DeclRefExpr 0x5629197a1810 <col:198> 'int' lvalue Var 0x56291979c0b0 'b$w_buff0' 'int'
|   |-BinaryOperator 0x5629197a1ec0 <line:802:3, col:208> 'int' '='
|   | |-DeclRefExpr 0x5629197a19b0 <col:3> 'int' lvalue Var 0x56291979c1a8 'b$w_buff1' 'int'
|   | `-ConditionalOperator 0x5629197a1e90 <col:15, col:208> 'int'
|   |   |-ImplicitCastExpr 0x5629197a1e60 <col:15> 'int' <IntegralCast>
|   |   | `-ImplicitCastExpr 0x5629197a1e48 <col:15> '_Bool' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x5629197a19d0 <col:15> '_Bool' lvalue Var 0x56291979c760 'weak$$choice2' '_Bool'
|   |   |-ImplicitCastExpr 0x5629197a1e78 <col:31> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x5629197a19f0 <col:31> 'int' lvalue Var 0x56291979c1a8 'b$w_buff1' 'int'
|   |   `-ParenExpr 0x5629197a1e28 <col:43, col:208> 'int'
|   |     `-ConditionalOperator 0x5629197a1df8 <col:44, col:207> 'int'
|   |       |-BinaryOperator 0x5629197a1c20 <col:44, col:121> 'int' '||'
|   |       | |-BinaryOperator 0x5629197a1b20 <col:44, col:83> 'int' '||'
|   |       | | |-UnaryOperator 0x5629197a1a48 <col:44, col:45> 'int' prefix '!' cannot overflow
|   |       | | | `-ImplicitCastExpr 0x5629197a1a30 <col:45> '_Bool' <LValueToRValue>
|   |       | | |   `-DeclRefExpr 0x5629197a1a10 <col:45> '_Bool' lvalue Var 0x56291979c128 'b$w_buff0_used' '_Bool'
|   |       | | `-BinaryOperator 0x5629197a1b00 <col:63, col:83> 'int' '&&'
|   |       | |   |-UnaryOperator 0x5629197a1a98 <col:63, col:64> 'int' prefix '!' cannot overflow
|   |       | |   | `-ImplicitCastExpr 0x5629197a1a80 <col:64> '_Bool' <LValueToRValue>
|   |       | |   |   `-DeclRefExpr 0x5629197a1a60 <col:64> '_Bool' lvalue Var 0x56291979bce0 'b$r_buff0_thd4' '_Bool'
|   |       | |   `-UnaryOperator 0x5629197a1ae8 <col:82, col:83> 'int' prefix '!' cannot overflow
|   |       | |     `-ImplicitCastExpr 0x5629197a1ad0 <col:83> '_Bool' <LValueToRValue>
|   |       | |       `-DeclRefExpr 0x5629197a1ab0 <col:83> '_Bool' lvalue Var 0x56291979c220 'b$w_buff1_used' '_Bool'
|   |       | `-BinaryOperator 0x5629197a1c00 <col:101, col:121> 'int' '&&'
|   |       |   |-UnaryOperator 0x5629197a1b98 <col:101, col:102> 'int' prefix '!' cannot overflow
|   |       |   | `-ImplicitCastExpr 0x5629197a1b80 <col:102> '_Bool' <LValueToRValue>
|   |       |   |   `-DeclRefExpr 0x5629197a1b60 <col:102> '_Bool' lvalue Var 0x56291979bce0 'b$r_buff0_thd4' '_Bool'
|   |       |   `-UnaryOperator 0x5629197a1be8 <col:120, col:121> 'int' prefix '!' cannot overflow
|   |       |     `-ImplicitCastExpr 0x5629197a1bd0 <col:121> '_Bool' <LValueToRValue>
|   |       |       `-DeclRefExpr 0x5629197a1bb0 <col:121> '_Bool' lvalue Var 0x56291979bf38 'b$r_buff1_thd4' '_Bool'
|   |       |-ImplicitCastExpr 0x5629197a1de0 <col:138> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x5629197a1c40 <col:138> 'int' lvalue Var 0x56291979c1a8 'b$w_buff1' 'int'
|   |       `-ParenExpr 0x5629197a1dc0 <col:150, col:207> 'int'
|   |         `-ConditionalOperator 0x5629197a1d90 <col:151, col:198> 'int'
|   |           |-BinaryOperator 0x5629197a1d00 <col:151, col:169> 'int' '&&'
|   |           | |-ImplicitCastExpr 0x5629197a1cb8 <col:151> 'int' <IntegralCast>
|   |           | | `-ImplicitCastExpr 0x5629197a1ca0 <col:151> '_Bool' <LValueToRValue>
|   |           | |   `-DeclRefExpr 0x5629197a1c60 <col:151> '_Bool' lvalue Var 0x56291979c128 'b$w_buff0_used' '_Bool'
|   |           | `-ImplicitCastExpr 0x5629197a1ce8 <col:169> 'int' <IntegralCast>
|   |           |   `-ImplicitCastExpr 0x5629197a1cd0 <col:169> '_Bool' <LValueToRValue>
|   |           |     `-DeclRefExpr 0x5629197a1c80 <col:169> '_Bool' lvalue Var 0x56291979bce0 'b$r_buff0_thd4' '_Bool'
|   |           |-ImplicitCastExpr 0x5629197a1d60 <col:186> 'int' <LValueToRValue>
|   |           | `-DeclRefExpr 0x5629197a1d20 <col:186> 'int' lvalue Var 0x56291979c1a8 'b$w_buff1' 'int'
|   |           `-ImplicitCastExpr 0x5629197a1d78 <col:198> 'int' <LValueToRValue>
|   |             `-DeclRefExpr 0x5629197a1d40 <col:198> 'int' lvalue Var 0x56291979c1a8 'b$w_buff1' 'int'
|   |-BinaryOperator 0x5629197a2468 <line:803:3, col:227> '_Bool' '='
|   | |-DeclRefExpr 0x5629197a1ee0 <col:3> '_Bool' lvalue Var 0x56291979c128 'b$w_buff0_used' '_Bool'
|   | `-ImplicitCastExpr 0x5629197a2450 <col:20, col:227> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x5629197a2420 <col:20, col:227> 'int'
|   |     |-ImplicitCastExpr 0x5629197a23d8 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x5629197a23c0 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x5629197a1f00 <col:20> '_Bool' lvalue Var 0x56291979c760 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x5629197a2408 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x5629197a23f0 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x5629197a1f20 <col:36> '_Bool' lvalue Var 0x56291979c128 'b$w_buff0_used' '_Bool'
|   |     `-ParenExpr 0x5629197a23a0 <col:53, col:227> 'int'
|   |       `-ConditionalOperator 0x5629197a2370 <col:54, col:226> 'int'
|   |         |-BinaryOperator 0x5629197a2130 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x5629197a2050 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x5629197a1f78 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x5629197a1f60 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x5629197a1f40 <col:55> '_Bool' lvalue Var 0x56291979c128 'b$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x5629197a2030 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x5629197a1fc8 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x5629197a1fb0 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x5629197a1f90 <col:74> '_Bool' lvalue Var 0x56291979bce0 'b$r_buff0_thd4' '_Bool'
|   |         | |   `-UnaryOperator 0x5629197a2018 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x5629197a2000 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x5629197a1fe0 <col:93> '_Bool' lvalue Var 0x56291979c220 'b$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x5629197a2110 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x5629197a20a8 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x5629197a2090 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x5629197a2070 <col:112> '_Bool' lvalue Var 0x56291979bce0 'b$r_buff0_thd4' '_Bool'
|   |         |   `-UnaryOperator 0x5629197a20f8 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x5629197a20e0 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x5629197a20c0 <col:131> '_Bool' lvalue Var 0x56291979bf38 'b$r_buff1_thd4' '_Bool'
|   |         |-ImplicitCastExpr 0x5629197a2358 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x5629197a2340 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x5629197a2150 <col:148> '_Bool' lvalue Var 0x56291979c128 'b$w_buff0_used' '_Bool'
|   |         `-ParenExpr 0x5629197a2320 <col:165, col:226> 'int'
|   |           `-ConditionalOperator 0x5629197a22f0 <col:166, col:212> 'int'
|   |             |-BinaryOperator 0x5629197a2210 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x5629197a21c8 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x5629197a21b0 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x5629197a2170 <col:166> '_Bool' lvalue Var 0x56291979c128 'b$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x5629197a21f8 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x5629197a21e0 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x5629197a2190 <col:184> '_Bool' lvalue Var 0x56291979bce0 'b$r_buff0_thd4' '_Bool'
|   |             |-ImplicitCastExpr 0x5629197a22a8 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x5629197a2260 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x5629197a2230 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x5629197a22d8 <col:212> 'int' <IntegralCast>
|   |               `-ImplicitCastExpr 0x5629197a22c0 <col:212> '_Bool' <LValueToRValue>
|   |                 `-DeclRefExpr 0x5629197a2288 <col:212> '_Bool' lvalue Var 0x56291979c128 'b$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x5629197a2a30 <line:804:3, col:221> '_Bool' '='
|   | |-DeclRefExpr 0x5629197a2488 <col:3> '_Bool' lvalue Var 0x56291979c220 'b$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x5629197a2a18 <col:20, col:221> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x5629197a29e8 <col:20, col:221> 'int'
|   |     |-ImplicitCastExpr 0x5629197a29a0 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x5629197a2988 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x5629197a24a8 <col:20> '_Bool' lvalue Var 0x56291979c760 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x5629197a29d0 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x5629197a29b8 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x5629197a24c8 <col:36> '_Bool' lvalue Var 0x56291979c220 'b$w_buff1_used' '_Bool'
|   |     `-ParenExpr 0x5629197a2968 <col:53, col:221> 'int'
|   |       `-ConditionalOperator 0x5629197a2938 <col:54, col:220> 'int'
|   |         |-BinaryOperator 0x5629197a26d8 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x5629197a25f8 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x5629197a2520 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x5629197a2508 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x5629197a24e8 <col:55> '_Bool' lvalue Var 0x56291979c128 'b$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x5629197a25d8 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x5629197a2570 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x5629197a2558 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x5629197a2538 <col:74> '_Bool' lvalue Var 0x56291979bce0 'b$r_buff0_thd4' '_Bool'
|   |         | |   `-UnaryOperator 0x5629197a25c0 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x5629197a25a8 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x5629197a2588 <col:93> '_Bool' lvalue Var 0x56291979c220 'b$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x5629197a26b8 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x5629197a2650 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x5629197a2638 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x5629197a2618 <col:112> '_Bool' lvalue Var 0x56291979bce0 'b$r_buff0_thd4' '_Bool'
|   |         |   `-UnaryOperator 0x5629197a26a0 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x5629197a2688 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x5629197a2668 <col:131> '_Bool' lvalue Var 0x56291979bf38 'b$r_buff1_thd4' '_Bool'
|   |         |-ImplicitCastExpr 0x5629197a2920 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x5629197a2908 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x5629197a26f8 <col:148> '_Bool' lvalue Var 0x56291979c220 'b$w_buff1_used' '_Bool'
|   |         `-ParenExpr 0x5629197a28e8 <col:165, col:220> 'int'
|   |           `-ConditionalOperator 0x5629197a28b8 <col:166, col:219> 'int'
|   |             |-BinaryOperator 0x5629197a27b8 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x5629197a2770 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x5629197a2758 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x5629197a2718 <col:166> '_Bool' lvalue Var 0x56291979c128 'b$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x5629197a27a0 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x5629197a2788 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x5629197a2738 <col:184> '_Bool' lvalue Var 0x56291979bce0 'b$r_buff0_thd4' '_Bool'
|   |             |-ImplicitCastExpr 0x5629197a2888 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x5629197a2808 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x5629197a27d8 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x5629197a28a0 <col:212, col:219> 'int' <IntegralCast>
|   |               `-CStyleCastExpr 0x5629197a2860 <col:212, col:219> '_Bool' <IntegralToBoolean>
|   |                 `-IntegerLiteral 0x5629197a2830 <col:219> 'int' 0
|   |-BinaryOperator 0x5629197a2ff8 <line:805:3, col:227> '_Bool' '='
|   | |-DeclRefExpr 0x5629197a2a50 <col:3> '_Bool' lvalue Var 0x56291979bce0 'b$r_buff0_thd4' '_Bool'
|   | `-ImplicitCastExpr 0x5629197a2fe0 <col:20, col:227> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x5629197a2fb0 <col:20, col:227> 'int'
|   |     |-ImplicitCastExpr 0x5629197a2f68 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x5629197a2f50 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x5629197a2a70 <col:20> '_Bool' lvalue Var 0x56291979c760 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x5629197a2f98 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x5629197a2f80 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x5629197a2a90 <col:36> '_Bool' lvalue Var 0x56291979bce0 'b$r_buff0_thd4' '_Bool'
|   |     `-ParenExpr 0x5629197a2f30 <col:53, col:227> 'int'
|   |       `-ConditionalOperator 0x5629197a2f00 <col:54, col:226> 'int'
|   |         |-BinaryOperator 0x5629197a2cc0 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x5629197a2be0 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x5629197a2ae8 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x5629197a2ad0 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x5629197a2ab0 <col:55> '_Bool' lvalue Var 0x56291979c128 'b$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x5629197a2bc0 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x5629197a2b38 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x5629197a2b20 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x5629197a2b00 <col:74> '_Bool' lvalue Var 0x56291979bce0 'b$r_buff0_thd4' '_Bool'
|   |         | |   `-UnaryOperator 0x5629197a2ba8 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x5629197a2b90 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x5629197a2b70 <col:93> '_Bool' lvalue Var 0x56291979c220 'b$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x5629197a2ca0 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x5629197a2c38 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x5629197a2c20 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x5629197a2c00 <col:112> '_Bool' lvalue Var 0x56291979bce0 'b$r_buff0_thd4' '_Bool'
|   |         |   `-UnaryOperator 0x5629197a2c88 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x5629197a2c70 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x5629197a2c50 <col:131> '_Bool' lvalue Var 0x56291979bf38 'b$r_buff1_thd4' '_Bool'
|   |         |-ImplicitCastExpr 0x5629197a2ee8 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x5629197a2ed0 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x5629197a2ce0 <col:148> '_Bool' lvalue Var 0x56291979bce0 'b$r_buff0_thd4' '_Bool'
|   |         `-ParenExpr 0x5629197a2eb0 <col:165, col:226> 'int'
|   |           `-ConditionalOperator 0x5629197a2e80 <col:166, col:212> 'int'
|   |             |-BinaryOperator 0x5629197a2da0 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x5629197a2d58 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x5629197a2d40 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x5629197a2d00 <col:166> '_Bool' lvalue Var 0x56291979c128 'b$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x5629197a2d88 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x5629197a2d70 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x5629197a2d20 <col:184> '_Bool' lvalue Var 0x56291979bce0 'b$r_buff0_thd4' '_Bool'
|   |             |-ImplicitCastExpr 0x5629197a2e38 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x5629197a2df0 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x5629197a2dc0 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x5629197a2e68 <col:212> 'int' <IntegralCast>
|   |               `-ImplicitCastExpr 0x5629197a2e50 <col:212> '_Bool' <LValueToRValue>
|   |                 `-DeclRefExpr 0x5629197a2e18 <col:212> '_Bool' lvalue Var 0x56291979bce0 'b$r_buff0_thd4' '_Bool'
|   |-BinaryOperator 0x5629197a35c0 <line:806:3, col:221> '_Bool' '='
|   | |-DeclRefExpr 0x5629197a3018 <col:3> '_Bool' lvalue Var 0x56291979bf38 'b$r_buff1_thd4' '_Bool'
|   | `-ImplicitCastExpr 0x5629197a35a8 <col:20, col:221> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x5629197a3578 <col:20, col:221> 'int'
|   |     |-ImplicitCastExpr 0x5629197a3530 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x5629197a3518 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x5629197a3038 <col:20> '_Bool' lvalue Var 0x56291979c760 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x5629197a3560 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x5629197a3548 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x5629197a3058 <col:36> '_Bool' lvalue Var 0x56291979bf38 'b$r_buff1_thd4' '_Bool'
|   |     `-ParenExpr 0x5629197a34f8 <col:53, col:221> 'int'
|   |       `-ConditionalOperator 0x5629197a34c8 <col:54, col:220> 'int'
|   |         |-BinaryOperator 0x5629197a3268 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x5629197a3188 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x5629197a30b0 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x5629197a3098 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x5629197a3078 <col:55> '_Bool' lvalue Var 0x56291979c128 'b$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x5629197a3168 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x5629197a3100 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x5629197a30e8 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x5629197a30c8 <col:74> '_Bool' lvalue Var 0x56291979bce0 'b$r_buff0_thd4' '_Bool'
|   |         | |   `-UnaryOperator 0x5629197a3150 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x5629197a3138 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x5629197a3118 <col:93> '_Bool' lvalue Var 0x56291979c220 'b$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x5629197a3248 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x5629197a31e0 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x5629197a31c8 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x5629197a31a8 <col:112> '_Bool' lvalue Var 0x56291979bce0 'b$r_buff0_thd4' '_Bool'
|   |         |   `-UnaryOperator 0x5629197a3230 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x5629197a3218 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x5629197a31f8 <col:131> '_Bool' lvalue Var 0x56291979bf38 'b$r_buff1_thd4' '_Bool'
|   |         |-ImplicitCastExpr 0x5629197a34b0 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x5629197a3498 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x5629197a3288 <col:148> '_Bool' lvalue Var 0x56291979bf38 'b$r_buff1_thd4' '_Bool'
|   |         `-ParenExpr 0x5629197a3478 <col:165, col:220> 'int'
|   |           `-ConditionalOperator 0x5629197a3448 <col:166, col:219> 'int'
|   |             |-BinaryOperator 0x5629197a3348 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x5629197a3300 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x5629197a32e8 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x5629197a32a8 <col:166> '_Bool' lvalue Var 0x56291979c128 'b$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x5629197a3330 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x5629197a3318 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x5629197a32c8 <col:184> '_Bool' lvalue Var 0x56291979bce0 'b$r_buff0_thd4' '_Bool'
|   |             |-ImplicitCastExpr 0x5629197a3418 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x5629197a3398 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x5629197a3368 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x5629197a3430 <col:212, col:219> 'int' <IntegralCast>
|   |               `-CStyleCastExpr 0x5629197a33f0 <col:212, col:219> '_Bool' <IntegralToBoolean>
|   |                 `-IntegerLiteral 0x5629197a33c0 <col:219> 'int' 0
|   |-BinaryOperator 0x5629197a3638 <line:807:3, col:25> 'int' '='
|   | |-DeclRefExpr 0x5629197a35e0 <col:3> 'int' lvalue Var 0x56291979b6f8 '__unbuffered_p3_EBX' 'int'
|   | `-ImplicitCastExpr 0x5629197a3620 <col:25> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x5629197a3600 <col:25> 'int' lvalue Var 0x56291979b938 'b' 'int'
|   |-BinaryOperator 0x5629197a3768 <line:808:3, col:37> 'int' '='
|   | |-DeclRefExpr 0x5629197a3658 <col:3> 'int' lvalue Var 0x56291979b938 'b' 'int'
|   | `-ConditionalOperator 0x5629197a3738 <col:7, col:37> 'int'
|   |   |-ImplicitCastExpr 0x5629197a36f0 <col:7> 'int' <IntegralCast>
|   |   | `-ImplicitCastExpr 0x5629197a36d8 <col:7> '_Bool' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x5629197a3678 <col:7> '_Bool' lvalue Var 0x56291979b9d0 'b$flush_delayed' '_Bool'
|   |   |-ImplicitCastExpr 0x5629197a3708 <col:25> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x5629197a3698 <col:25> 'int' lvalue Var 0x56291979ba50 'b$mem_tmp' 'int'
|   |   `-ImplicitCastExpr 0x5629197a3720 <col:37> 'int' <LValueToRValue>
|   |     `-DeclRefExpr 0x5629197a36b8 <col:37> 'int' lvalue Var 0x56291979b938 'b' 'int'
|   |-BinaryOperator 0x5629197a3800 <line:809:3, col:28> '_Bool' '='
|   | |-DeclRefExpr 0x5629197a3788 <col:3> '_Bool' lvalue Var 0x56291979b9d0 'b$flush_delayed' '_Bool'
|   | `-CStyleCastExpr 0x5629197a37d8 <col:21, col:28> '_Bool' <IntegralToBoolean>
|   |   `-IntegerLiteral 0x5629197a37a8 <col:28> 'int' 0
|   |-CallExpr 0x5629197a3858 <line:810:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x5629197a3840 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5629197a3820 <col:3> 'void ()' Function 0x562919741f00 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x5629197a38b0 <line:811:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x5629197a3898 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5629197a3878 <col:3> 'void ()' Function 0x562919741e40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x5629197a3bb0 <line:812:3, col:103> 'int' '='
|   | |-DeclRefExpr 0x5629197a38d0 <col:3> 'int' lvalue Var 0x56291979b938 'b' 'int'
|   | `-ConditionalOperator 0x5629197a3b80 <col:7, col:103> 'int'
|   |   |-BinaryOperator 0x5629197a3990 <col:7, col:25> 'int' '&&'
|   |   | |-ImplicitCastExpr 0x5629197a3948 <col:7> 'int' <IntegralCast>
|   |   | | `-ImplicitCastExpr 0x5629197a3930 <col:7> '_Bool' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x5629197a38f0 <col:7> '_Bool' lvalue Var 0x56291979c128 'b$w_buff0_used' '_Bool'
|   |   | `-ImplicitCastExpr 0x5629197a3978 <col:25> 'int' <IntegralCast>
|   |   |   `-ImplicitCastExpr 0x5629197a3960 <col:25> '_Bool' <LValueToRValue>
|   |   |     `-DeclRefExpr 0x5629197a3910 <col:25> '_Bool' lvalue Var 0x56291979bce0 'b$r_buff0_thd4' '_Bool'
|   |   |-ImplicitCastExpr 0x5629197a3b50 <col:42> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x5629197a39b0 <col:42> 'int' lvalue Var 0x56291979c0b0 'b$w_buff0' 'int'
|   |   `-ParenExpr 0x5629197a3b30 <col:54, col:103> 'int'
|   |     `-ConditionalOperator 0x5629197a3b00 <col:55, col:102> 'int'
|   |       |-BinaryOperator 0x5629197a3a70 <col:55, col:73> 'int' '&&'
|   |       | |-ImplicitCastExpr 0x5629197a3a28 <col:55> 'int' <IntegralCast>
|   |       | | `-ImplicitCastExpr 0x5629197a3a10 <col:55> '_Bool' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x5629197a39d0 <col:55> '_Bool' lvalue Var 0x56291979c220 'b$w_buff1_used' '_Bool'
|   |       | `-ImplicitCastExpr 0x5629197a3a58 <col:73> 'int' <IntegralCast>
|   |       |   `-ImplicitCastExpr 0x5629197a3a40 <col:73> '_Bool' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x5629197a39f0 <col:73> '_Bool' lvalue Var 0x56291979bf38 'b$r_buff1_thd4' '_Bool'
|   |       |-ImplicitCastExpr 0x5629197a3ad0 <col:90> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x5629197a3a90 <col:90> 'int' lvalue Var 0x56291979c1a8 'b$w_buff1' 'int'
|   |       `-ImplicitCastExpr 0x5629197a3ae8 <col:102> 'int' <LValueToRValue>
|   |         `-DeclRefExpr 0x5629197a3ab0 <col:102> 'int' lvalue Var 0x56291979b938 'b' 'int'
|   |-BinaryOperator 0x5629197a3db8 <line:813:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x5629197a3bd0 <col:3> '_Bool' lvalue Var 0x56291979c128 'b$w_buff0_used' '_Bool'
|   | `-ImplicitCastExpr 0x5629197a3da0 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x5629197a3d70 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x5629197a3c90 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x5629197a3c48 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x5629197a3c30 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x5629197a3bf0 <col:20> '_Bool' lvalue Var 0x56291979c128 'b$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x5629197a3c78 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x5629197a3c60 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x5629197a3c10 <col:38> '_Bool' lvalue Var 0x56291979bce0 'b$r_buff0_thd4' '_Bool'
|   |     |-ImplicitCastExpr 0x5629197a3d28 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x5629197a3ce0 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x5629197a3cb0 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x5629197a3d58 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x5629197a3d40 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x5629197a3d08 <col:66> '_Bool' lvalue Var 0x56291979c128 'b$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x5629197a40a0 <line:814:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x5629197a3dd8 <col:3> '_Bool' lvalue Var 0x56291979c220 'b$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x5629197a4088 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x5629197a4058 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x5629197a3f78 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x5629197a3e98 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x5629197a3e50 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x5629197a3e38 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x5629197a3df8 <col:20> '_Bool' lvalue Var 0x56291979c128 'b$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x5629197a3e80 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x5629197a3e68 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x5629197a3e18 <col:38> '_Bool' lvalue Var 0x56291979bce0 'b$r_buff0_thd4' '_Bool'
|   |     | `-BinaryOperator 0x5629197a3f58 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x5629197a3f10 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x5629197a3ef8 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x5629197a3eb8 <col:56> '_Bool' lvalue Var 0x56291979c220 'b$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x5629197a3f40 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x5629197a3f28 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x5629197a3ed8 <col:74> '_Bool' lvalue Var 0x56291979bf38 'b$r_buff1_thd4' '_Bool'
|   |     |-ImplicitCastExpr 0x5629197a4010 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x5629197a3fc8 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x5629197a3f98 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x5629197a4040 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x5629197a4028 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x5629197a3ff0 <col:102> '_Bool' lvalue Var 0x56291979c220 'b$w_buff1_used' '_Bool'
|   |-BinaryOperator 0x5629197a42a8 <line:815:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x5629197a40c0 <col:3> '_Bool' lvalue Var 0x56291979bce0 'b$r_buff0_thd4' '_Bool'
|   | `-ImplicitCastExpr 0x5629197a4290 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x5629197a4260 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x5629197a4180 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x5629197a4138 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x5629197a4120 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x5629197a40e0 <col:20> '_Bool' lvalue Var 0x56291979c128 'b$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x5629197a4168 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x5629197a4150 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x5629197a4100 <col:38> '_Bool' lvalue Var 0x56291979bce0 'b$r_buff0_thd4' '_Bool'
|   |     |-ImplicitCastExpr 0x5629197a4218 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x5629197a41d0 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x5629197a41a0 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x5629197a4248 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x5629197a4230 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x5629197a41f8 <col:66> '_Bool' lvalue Var 0x56291979bce0 'b$r_buff0_thd4' '_Bool'
|   |-BinaryOperator 0x5629197a4590 <line:816:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x5629197a42c8 <col:3> '_Bool' lvalue Var 0x56291979bf38 'b$r_buff1_thd4' '_Bool'
|   | `-ImplicitCastExpr 0x5629197a4578 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x5629197a4548 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x5629197a4468 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x5629197a4388 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x5629197a4340 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x5629197a4328 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x5629197a42e8 <col:20> '_Bool' lvalue Var 0x56291979c128 'b$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x5629197a4370 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x5629197a4358 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x5629197a4308 <col:38> '_Bool' lvalue Var 0x56291979bce0 'b$r_buff0_thd4' '_Bool'
|   |     | `-BinaryOperator 0x5629197a4448 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x5629197a4400 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x5629197a43e8 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x5629197a43a8 <col:56> '_Bool' lvalue Var 0x56291979c220 'b$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x5629197a4430 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x5629197a4418 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x5629197a43c8 <col:74> '_Bool' lvalue Var 0x56291979bf38 'b$r_buff1_thd4' '_Bool'
|   |     |-ImplicitCastExpr 0x5629197a4500 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x5629197a44b8 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x5629197a4488 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x5629197a4530 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x5629197a4518 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x5629197a44e0 <col:102> '_Bool' lvalue Var 0x56291979bf38 'b$r_buff1_thd4' '_Bool'
|   |-CallExpr 0x5629197a45e8 <line:817:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x5629197a45d0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5629197a45b0 <col:3> 'void ()' Function 0x562919741f00 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x5629197a4640 <line:818:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x5629197a4628 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5629197a4608 <col:3> 'void ()' Function 0x562919741e40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x5629197a46f8 <line:819:3, col:41> 'int' '='
|   | |-DeclRefExpr 0x5629197a4660 <col:3> 'int' lvalue Var 0x56291979b278 '__unbuffered_cnt' 'int'
|   | `-BinaryOperator 0x5629197a46d8 <col:22, col:41> 'int' '+'
|   |   |-ImplicitCastExpr 0x5629197a46c0 <col:22> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x5629197a4680 <col:22> 'int' lvalue Var 0x56291979b278 '__unbuffered_cnt' 'int'
|   |   `-IntegerLiteral 0x5629197a46a0 <col:41> 'int' 1
|   |-CallExpr 0x5629197a4750 <line:820:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x5629197a4738 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5629197a4718 <col:3> 'void ()' Function 0x562919741f00 '__VERIFIER_atomic_end' 'void ()'
|   `-ReturnStmt 0x5629197a47c8 <line:821:3, col:36>
|     `-CallExpr 0x5629197a47a8 <col:10, col:36> 'void *'
|       `-ImplicitCastExpr 0x5629197a4790 <col:10> 'void *(*)(void)' <FunctionToPointerDecay>
|         `-DeclRefExpr 0x5629197a4770 <col:10> 'void *(void)' Function 0x562919741958 '__VERIFIER_nondet_pointer' 'void *(void)'
|-FunctionDecl 0x5629197a4928 prev 0x56291979afc0 <line:823:1, line:825:1> line:823:6 fence 'void ()'
| `-CompoundStmt 0x5629197a49c8 <line:824:1, line:825:1>
|-FunctionDecl 0x5629197a49f8 prev 0x56291979b080 <line:826:1, line:828:1> line:826:6 isync 'void ()'
| `-CompoundStmt 0x5629197a4a98 <line:827:1, line:828:1>
|-FunctionDecl 0x5629197a4ac8 prev 0x56291979b140 <line:829:1, line:831:1> line:829:6 lwfence 'void ()'
| `-CompoundStmt 0x5629197a4b68 <line:830:1, line:831:1>
`-FunctionDecl 0x5629197a4be8 <line:832:1, line:858:1> line:832:5 main 'int ()'
  `-CompoundStmt 0x5629197a6bf8 <line:833:1, line:858:1>
    |-DeclStmt 0x5629197a4d00 <line:834:3, col:17>
    | `-VarDecl 0x5629197a4c98 <col:3, col:13> col:13 used t971 'pthread_t':'unsigned long'
    |-CallExpr 0x5629197a4f08 <line:835:3, col:53> 'int'
    | |-ImplicitCastExpr 0x5629197a4ef0 <col:3> 'int (*)(pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x5629197a4d18 <col:3> 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' Function 0x562919782488 'pthread_create' 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)'
    | |-UnaryOperator 0x5629197a4d58 <col:18, col:19> 'pthread_t *' prefix '&' cannot overflow
    | | `-DeclRefExpr 0x5629197a4d38 <col:19> 'pthread_t':'unsigned long' lvalue Var 0x5629197a4c98 't971' 'pthread_t':'unsigned long'
    | |-ImplicitCastExpr 0x5629197a4f48 <col:25, col:35> 'const pthread_attr_t *' <NullToPointer>
    | | `-ParenExpr 0x5629197a4dd0 <col:25, col:35> 'void *'
    | |   `-CStyleCastExpr 0x5629197a4da8 <col:26, col:34> 'void *' <NullToPointer>
    | |     `-IntegerLiteral 0x5629197a4d70 <col:34> 'int' 0
    | |-ImplicitCastExpr 0x5629197a4f60 <col:38> 'void *(*)(void *)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x5629197a4df0 <col:38> 'void *(void *)' Function 0x56291979c878 'P0' 'void *(void *)'
    | `-ParenExpr 0x5629197a4e70 <col:42, col:52> 'void *'
    |   `-CStyleCastExpr 0x5629197a4e48 <col:43, col:51> 'void *' <NullToPointer>
    |     `-IntegerLiteral 0x5629197a4e10 <col:51> 'int' 0
    |-DeclStmt 0x5629197a4ff0 <line:836:3, col:17>
    | `-VarDecl 0x5629197a4f88 <col:3, col:13> col:13 used t972 'pthread_t':'unsigned long'
    |-CallExpr 0x5629197a5198 <line:837:3, col:53> 'int'
    | |-ImplicitCastExpr 0x5629197a5180 <col:3> 'int (*)(pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x5629197a5008 <col:3> 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' Function 0x562919782488 'pthread_create' 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)'
    | |-UnaryOperator 0x5629197a5048 <col:18, col:19> 'pthread_t *' prefix '&' cannot overflow
    | | `-DeclRefExpr 0x5629197a5028 <col:19> 'pthread_t':'unsigned long' lvalue Var 0x5629197a4f88 't972' 'pthread_t':'unsigned long'
    | |-ImplicitCastExpr 0x5629197a51d8 <col:25, col:35> 'const pthread_attr_t *' <NullToPointer>
    | | `-ParenExpr 0x5629197a50c0 <col:25, col:35> 'void *'
    | |   `-CStyleCastExpr 0x5629197a5098 <col:26, col:34> 'void *' <NullToPointer>
    | |     `-IntegerLiteral 0x5629197a5060 <col:34> 'int' 0
    | |-ImplicitCastExpr 0x5629197a51f0 <col:38> 'void *(*)(void *)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x5629197a50e0 <col:38> 'void *(void *)' Function 0x56291979e2b0 'P1' 'void *(void *)'
    | `-ParenExpr 0x5629197a5160 <col:42, col:52> 'void *'
    |   `-CStyleCastExpr 0x5629197a5138 <col:43, col:51> 'void *' <NullToPointer>
    |     `-IntegerLiteral 0x5629197a5100 <col:51> 'int' 0
    |-DeclStmt 0x5629197a5280 <line:838:3, col:17>
    | `-VarDecl 0x5629197a5218 <col:3, col:13> col:13 used t973 'pthread_t':'unsigned long'
    |-CallExpr 0x5629197a5428 <line:839:3, col:53> 'int'
    | |-ImplicitCastExpr 0x5629197a5410 <col:3> 'int (*)(pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x5629197a5298 <col:3> 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' Function 0x562919782488 'pthread_create' 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)'
    | |-UnaryOperator 0x5629197a52d8 <col:18, col:19> 'pthread_t *' prefix '&' cannot overflow
    | | `-DeclRefExpr 0x5629197a52b8 <col:19> 'pthread_t':'unsigned long' lvalue Var 0x5629197a5218 't973' 'pthread_t':'unsigned long'
    | |-ImplicitCastExpr 0x5629197a5468 <col:25, col:35> 'const pthread_attr_t *' <NullToPointer>
    | | `-ParenExpr 0x5629197a5350 <col:25, col:35> 'void *'
    | |   `-CStyleCastExpr 0x5629197a5328 <col:26, col:34> 'void *' <NullToPointer>
    | |     `-IntegerLiteral 0x5629197a52f0 <col:34> 'int' 0
    | |-ImplicitCastExpr 0x5629197a5480 <col:38> 'void *(*)(void *)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x5629197a5370 <col:38> 'void *(void *)' Function 0x56291979f638 'P2' 'void *(void *)'
    | `-ParenExpr 0x5629197a53f0 <col:42, col:52> 'void *'
    |   `-CStyleCastExpr 0x5629197a53c8 <col:43, col:51> 'void *' <NullToPointer>
    |     `-IntegerLiteral 0x5629197a5390 <col:51> 'int' 0
    |-DeclStmt 0x5629197a5510 <line:840:3, col:17>
    | `-VarDecl 0x5629197a54a8 <col:3, col:13> col:13 used t974 'pthread_t':'unsigned long'
    |-CallExpr 0x5629197a56b8 <line:841:3, col:53> 'int'
    | |-ImplicitCastExpr 0x5629197a56a0 <col:3> 'int (*)(pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x5629197a5528 <col:3> 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' Function 0x562919782488 'pthread_create' 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)'
    | |-UnaryOperator 0x5629197a5568 <col:18, col:19> 'pthread_t *' prefix '&' cannot overflow
    | | `-DeclRefExpr 0x5629197a5548 <col:19> 'pthread_t':'unsigned long' lvalue Var 0x5629197a54a8 't974' 'pthread_t':'unsigned long'
    | |-ImplicitCastExpr 0x5629197a56f8 <col:25, col:35> 'const pthread_attr_t *' <NullToPointer>
    | | `-ParenExpr 0x5629197a55e0 <col:25, col:35> 'void *'
    | |   `-CStyleCastExpr 0x5629197a55b8 <col:26, col:34> 'void *' <NullToPointer>
    | |     `-IntegerLiteral 0x5629197a5580 <col:34> 'int' 0
    | |-ImplicitCastExpr 0x5629197a5710 <col:38> 'void *(*)(void *)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x5629197a5600 <col:38> 'void *(void *)' Function 0x5629197a09b8 'P3' 'void *(void *)'
    | `-ParenExpr 0x5629197a5680 <col:42, col:52> 'void *'
    |   `-CStyleCastExpr 0x5629197a5658 <col:43, col:51> 'void *' <NullToPointer>
    |     `-IntegerLiteral 0x5629197a5620 <col:51> 'int' 0
    |-CallExpr 0x5629197a5760 <line:842:3, col:27> 'void'
    | `-ImplicitCastExpr 0x5629197a5748 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x5629197a5728 <col:3> 'void ()' Function 0x562919741e40 '__VERIFIER_atomic_begin' 'void ()'
    |-BinaryOperator 0x5629197a5830 <line:843:3, col:41> '_Bool' '='
    | |-DeclRefExpr 0x5629197a5780 <col:3> '_Bool' lvalue Var 0x56291979c298 'main$tmp_guard0' '_Bool'
    | `-ImplicitCastExpr 0x5629197a5818 <col:21, col:41> '_Bool' <IntegralToBoolean>
    |   `-BinaryOperator 0x5629197a57f8 <col:21, col:41> 'int' '=='
    |     |-ImplicitCastExpr 0x5629197a57e0 <col:21> 'int' <LValueToRValue>
    |     | `-DeclRefExpr 0x5629197a57a0 <col:21> 'int' lvalue Var 0x56291979b278 '__unbuffered_cnt' 'int'
    |     `-IntegerLiteral 0x5629197a57c0 <col:41> 'int' 4
    |-CallExpr 0x5629197a5888 <line:844:3, col:25> 'void'
    | `-ImplicitCastExpr 0x5629197a5870 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x5629197a5850 <col:3> 'void ()' Function 0x562919741f00 '__VERIFIER_atomic_end' 'void ()'
    |-CallExpr 0x5629197a5900 <line:845:3, col:36> 'void'
    | |-ImplicitCastExpr 0x5629197a58e8 <col:3> 'void (*)(int)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x5629197a58a8 <col:3> 'void (int)' Function 0x562919741790 '__VERIFIER_assume' 'void (int)'
    | `-ImplicitCastExpr 0x5629197a5940 <col:21> 'int' <IntegralCast>
    |   `-ImplicitCastExpr 0x5629197a5928 <col:21> '_Bool' <LValueToRValue>
    |     `-DeclRefExpr 0x5629197a58c8 <col:21> '_Bool' lvalue Var 0x56291979c298 'main$tmp_guard0' '_Bool'
    |-CallExpr 0x5629197a5990 <line:846:3, col:27> 'void'
    | `-ImplicitCastExpr 0x5629197a5978 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x5629197a5958 <col:3> 'void ()' Function 0x562919741e40 '__VERIFIER_atomic_begin' 'void ()'
    |-BinaryOperator 0x5629197a5c88 <line:847:3, col:103> 'int' '='
    | |-DeclRefExpr 0x5629197a59b0 <col:3> 'int' lvalue Var 0x56291979b938 'b' 'int'
    | `-ConditionalOperator 0x5629197a5c58 <col:7, col:103> 'int'
    |   |-BinaryOperator 0x5629197a5a70 <col:7, col:25> 'int' '&&'
    |   | |-ImplicitCastExpr 0x5629197a5a28 <col:7> 'int' <IntegralCast>
    |   | | `-ImplicitCastExpr 0x5629197a5a10 <col:7> '_Bool' <LValueToRValue>
    |   | |   `-DeclRefExpr 0x5629197a59d0 <col:7> '_Bool' lvalue Var 0x56291979c128 'b$w_buff0_used' '_Bool'
    |   | `-ImplicitCastExpr 0x5629197a5a58 <col:25> 'int' <IntegralCast>
    |   |   `-ImplicitCastExpr 0x5629197a5a40 <col:25> '_Bool' <LValueToRValue>
    |   |     `-DeclRefExpr 0x5629197a59f0 <col:25> '_Bool' lvalue Var 0x56291979bb00 'b$r_buff0_thd0' '_Bool'
    |   |-ImplicitCastExpr 0x5629197a5c40 <col:42> 'int' <LValueToRValue>
    |   | `-DeclRefExpr 0x5629197a5a90 <col:42> 'int' lvalue Var 0x56291979c0b0 'b$w_buff0' 'int'
    |   `-ParenExpr 0x5629197a5c20 <col:54, col:103> 'int'
    |     `-ConditionalOperator 0x5629197a5bf0 <col:55, col:102> 'int'
    |       |-BinaryOperator 0x5629197a5b50 <col:55, col:73> 'int' '&&'
    |       | |-ImplicitCastExpr 0x5629197a5b08 <col:55> 'int' <IntegralCast>
    |       | | `-ImplicitCastExpr 0x5629197a5af0 <col:55> '_Bool' <LValueToRValue>
    |       | |   `-DeclRefExpr 0x5629197a5ab0 <col:55> '_Bool' lvalue Var 0x56291979c220 'b$w_buff1_used' '_Bool'
    |       | `-ImplicitCastExpr 0x5629197a5b38 <col:73> 'int' <IntegralCast>
    |       |   `-ImplicitCastExpr 0x5629197a5b20 <col:73> '_Bool' <LValueToRValue>
    |       |     `-DeclRefExpr 0x5629197a5ad0 <col:73> '_Bool' lvalue Var 0x56291979bd58 'b$r_buff1_thd0' '_Bool'
    |       |-ImplicitCastExpr 0x5629197a5bc0 <col:90> 'int' <LValueToRValue>
    |       | `-DeclRefExpr 0x5629197a5b70 <col:90> 'int' lvalue Var 0x56291979c1a8 'b$w_buff1' 'int'
    |       `-ImplicitCastExpr 0x5629197a5bd8 <col:102> 'int' <LValueToRValue>
    |         `-DeclRefExpr 0x5629197a5ba0 <col:102> 'int' lvalue Var 0x56291979b938 'b' 'int'
    |-BinaryOperator 0x5629197a5e90 <line:848:3, col:66> '_Bool' '='
    | |-DeclRefExpr 0x5629197a5ca8 <col:3> '_Bool' lvalue Var 0x56291979c128 'b$w_buff0_used' '_Bool'
    | `-ImplicitCastExpr 0x5629197a5e78 <col:20, col:66> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x5629197a5e48 <col:20, col:66> 'int'
    |     |-BinaryOperator 0x5629197a5d68 <col:20, col:38> 'int' '&&'
    |     | |-ImplicitCastExpr 0x5629197a5d20 <col:20> 'int' <IntegralCast>
    |     | | `-ImplicitCastExpr 0x5629197a5d08 <col:20> '_Bool' <LValueToRValue>
    |     | |   `-DeclRefExpr 0x5629197a5cc8 <col:20> '_Bool' lvalue Var 0x56291979c128 'b$w_buff0_used' '_Bool'
    |     | `-ImplicitCastExpr 0x5629197a5d50 <col:38> 'int' <IntegralCast>
    |     |   `-ImplicitCastExpr 0x5629197a5d38 <col:38> '_Bool' <LValueToRValue>
    |     |     `-DeclRefExpr 0x5629197a5ce8 <col:38> '_Bool' lvalue Var 0x56291979bb00 'b$r_buff0_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x5629197a5e00 <col:55, col:62> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x5629197a5db8 <col:55, col:62> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x5629197a5d88 <col:62> 'int' 0
    |     `-ImplicitCastExpr 0x5629197a5e30 <col:66> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x5629197a5e18 <col:66> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x5629197a5de0 <col:66> '_Bool' lvalue Var 0x56291979c128 'b$w_buff0_used' '_Bool'
    |-BinaryOperator 0x5629197a6178 <line:849:3, col:102> '_Bool' '='
    | |-DeclRefExpr 0x5629197a5eb0 <col:3> '_Bool' lvalue Var 0x56291979c220 'b$w_buff1_used' '_Bool'
    | `-ImplicitCastExpr 0x5629197a6160 <col:20, col:102> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x5629197a6130 <col:20, col:102> 'int'
    |     |-BinaryOperator 0x5629197a6050 <col:20, col:74> 'int' '||'
    |     | |-BinaryOperator 0x5629197a5f70 <col:20, col:38> 'int' '&&'
    |     | | |-ImplicitCastExpr 0x5629197a5f28 <col:20> 'int' <IntegralCast>
    |     | | | `-ImplicitCastExpr 0x5629197a5f10 <col:20> '_Bool' <LValueToRValue>
    |     | | |   `-DeclRefExpr 0x5629197a5ed0 <col:20> '_Bool' lvalue Var 0x56291979c128 'b$w_buff0_used' '_Bool'
    |     | | `-ImplicitCastExpr 0x5629197a5f58 <col:38> 'int' <IntegralCast>
    |     | |   `-ImplicitCastExpr 0x5629197a5f40 <col:38> '_Bool' <LValueToRValue>
    |     | |     `-DeclRefExpr 0x5629197a5ef0 <col:38> '_Bool' lvalue Var 0x56291979bb00 'b$r_buff0_thd0' '_Bool'
    |     | `-BinaryOperator 0x5629197a6030 <col:56, col:74> 'int' '&&'
    |     |   |-ImplicitCastExpr 0x5629197a5fe8 <col:56> 'int' <IntegralCast>
    |     |   | `-ImplicitCastExpr 0x5629197a5fd0 <col:56> '_Bool' <LValueToRValue>
    |     |   |   `-DeclRefExpr 0x5629197a5f90 <col:56> '_Bool' lvalue Var 0x56291979c220 'b$w_buff1_used' '_Bool'
    |     |   `-ImplicitCastExpr 0x5629197a6018 <col:74> 'int' <IntegralCast>
    |     |     `-ImplicitCastExpr 0x5629197a6000 <col:74> '_Bool' <LValueToRValue>
    |     |       `-DeclRefExpr 0x5629197a5fb0 <col:74> '_Bool' lvalue Var 0x56291979bd58 'b$r_buff1_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x5629197a60e8 <col:91, col:98> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x5629197a60a0 <col:91, col:98> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x5629197a6070 <col:98> 'int' 0
    |     `-ImplicitCastExpr 0x5629197a6118 <col:102> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x5629197a6100 <col:102> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x5629197a60c8 <col:102> '_Bool' lvalue Var 0x56291979c220 'b$w_buff1_used' '_Bool'
    |-BinaryOperator 0x5629197a6380 <line:850:3, col:66> '_Bool' '='
    | |-DeclRefExpr 0x5629197a6198 <col:3> '_Bool' lvalue Var 0x56291979bb00 'b$r_buff0_thd0' '_Bool'
    | `-ImplicitCastExpr 0x5629197a6368 <col:20, col:66> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x5629197a6338 <col:20, col:66> 'int'
    |     |-BinaryOperator 0x5629197a6258 <col:20, col:38> 'int' '&&'
    |     | |-ImplicitCastExpr 0x5629197a6210 <col:20> 'int' <IntegralCast>
    |     | | `-ImplicitCastExpr 0x5629197a61f8 <col:20> '_Bool' <LValueToRValue>
    |     | |   `-DeclRefExpr 0x5629197a61b8 <col:20> '_Bool' lvalue Var 0x56291979c128 'b$w_buff0_used' '_Bool'
    |     | `-ImplicitCastExpr 0x5629197a6240 <col:38> 'int' <IntegralCast>
    |     |   `-ImplicitCastExpr 0x5629197a6228 <col:38> '_Bool' <LValueToRValue>
    |     |     `-DeclRefExpr 0x5629197a61d8 <col:38> '_Bool' lvalue Var 0x56291979bb00 'b$r_buff0_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x5629197a62f0 <col:55, col:62> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x5629197a62a8 <col:55, col:62> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x5629197a6278 <col:62> 'int' 0
    |     `-ImplicitCastExpr 0x5629197a6320 <col:66> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x5629197a6308 <col:66> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x5629197a62d0 <col:66> '_Bool' lvalue Var 0x56291979bb00 'b$r_buff0_thd0' '_Bool'
    |-BinaryOperator 0x5629197a6668 <line:851:3, col:102> '_Bool' '='
    | |-DeclRefExpr 0x5629197a63a0 <col:3> '_Bool' lvalue Var 0x56291979bd58 'b$r_buff1_thd0' '_Bool'
    | `-ImplicitCastExpr 0x5629197a6650 <col:20, col:102> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x5629197a6620 <col:20, col:102> 'int'
    |     |-BinaryOperator 0x5629197a6540 <col:20, col:74> 'int' '||'
    |     | |-BinaryOperator 0x5629197a6460 <col:20, col:38> 'int' '&&'
    |     | | |-ImplicitCastExpr 0x5629197a6418 <col:20> 'int' <IntegralCast>
    |     | | | `-ImplicitCastExpr 0x5629197a6400 <col:20> '_Bool' <LValueToRValue>
    |     | | |   `-DeclRefExpr 0x5629197a63c0 <col:20> '_Bool' lvalue Var 0x56291979c128 'b$w_buff0_used' '_Bool'
    |     | | `-ImplicitCastExpr 0x5629197a6448 <col:38> 'int' <IntegralCast>
    |     | |   `-ImplicitCastExpr 0x5629197a6430 <col:38> '_Bool' <LValueToRValue>
    |     | |     `-DeclRefExpr 0x5629197a63e0 <col:38> '_Bool' lvalue Var 0x56291979bb00 'b$r_buff0_thd0' '_Bool'
    |     | `-BinaryOperator 0x5629197a6520 <col:56, col:74> 'int' '&&'
    |     |   |-ImplicitCastExpr 0x5629197a64d8 <col:56> 'int' <IntegralCast>
    |     |   | `-ImplicitCastExpr 0x5629197a64c0 <col:56> '_Bool' <LValueToRValue>
    |     |   |   `-DeclRefExpr 0x5629197a6480 <col:56> '_Bool' lvalue Var 0x56291979c220 'b$w_buff1_used' '_Bool'
    |     |   `-ImplicitCastExpr 0x5629197a6508 <col:74> 'int' <IntegralCast>
    |     |     `-ImplicitCastExpr 0x5629197a64f0 <col:74> '_Bool' <LValueToRValue>
    |     |       `-DeclRefExpr 0x5629197a64a0 <col:74> '_Bool' lvalue Var 0x56291979bd58 'b$r_buff1_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x5629197a65d8 <col:91, col:98> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x5629197a6590 <col:91, col:98> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x5629197a6560 <col:98> 'int' 0
    |     `-ImplicitCastExpr 0x5629197a6608 <col:102> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x5629197a65f0 <col:102> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x5629197a65b8 <col:102> '_Bool' lvalue Var 0x56291979bd58 'b$r_buff1_thd0' '_Bool'
    |-CallExpr 0x5629197a66c0 <line:852:3, col:25> 'void'
    | `-ImplicitCastExpr 0x5629197a66a8 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x5629197a6688 <col:3> 'void ()' Function 0x562919741f00 '__VERIFIER_atomic_end' 'void ()'
    |-CallExpr 0x5629197a6718 <line:853:3, col:27> 'void'
    | `-ImplicitCastExpr 0x5629197a6700 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x5629197a66e0 <col:3> 'void ()' Function 0x562919741e40 '__VERIFIER_atomic_begin' 'void ()'
    |-BinaryOperator 0x5629197a6a80 <line:854:3, col:141> '_Bool' '='
    | |-DeclRefExpr 0x5629197a6738 <col:3> '_Bool' lvalue Var 0x56291979c310 'main$tmp_guard1' '_Bool'
    | `-ImplicitCastExpr 0x5629197a6a68 <col:21, col:141> '_Bool' <IntegralToBoolean>
    |   `-UnaryOperator 0x5629197a6a50 <col:21, col:141> 'int' prefix '!' cannot overflow
    |     `-ParenExpr 0x5629197a6a30 <col:22, col:141> 'int'
    |       `-BinaryOperator 0x5629197a6a10 <col:23, col:140> 'int' '&&'
    |         |-BinaryOperator 0x5629197a6978 <col:23, col:112> 'int' '&&'
    |         | |-BinaryOperator 0x5629197a68e0 <col:23, col:84> 'int' '&&'
    |         | | |-BinaryOperator 0x5629197a6848 <col:23, col:56> 'int' '&&'
    |         | | | |-BinaryOperator 0x5629197a67b0 <col:23, col:28> 'int' '=='
    |         | | | | |-ImplicitCastExpr 0x5629197a6798 <col:23> 'int' <LValueToRValue>
    |         | | | | | `-DeclRefExpr 0x5629197a6758 <col:23> 'int' lvalue Var 0x56291979c410 'x' 'int'
    |         | | | | `-IntegerLiteral 0x5629197a6778 <col:28> 'int' 2
    |         | | | `-BinaryOperator 0x5629197a6828 <col:33, col:56> 'int' '=='
    |         | | |   |-ImplicitCastExpr 0x5629197a6810 <col:33> 'int' <LValueToRValue>
    |         | | |   | `-DeclRefExpr 0x5629197a67d0 <col:33> 'int' lvalue Var 0x56291979b398 '__unbuffered_p1_EAX' 'int'
    |         | | |   `-IntegerLiteral 0x5629197a67f0 <col:56> 'int' 0
    |         | | `-BinaryOperator 0x5629197a68c0 <col:61, col:84> 'int' '=='
    |         | |   |-ImplicitCastExpr 0x5629197a68a8 <col:61> 'int' <LValueToRValue>
    |         | |   | `-DeclRefExpr 0x5629197a6868 <col:61> 'int' lvalue Var 0x56291979b4b8 '__unbuffered_p2_EAX' 'int'
    |         | |   `-IntegerLiteral 0x5629197a6888 <col:84> 'int' 0
    |         | `-BinaryOperator 0x5629197a6958 <col:89, col:112> 'int' '=='
    |         |   |-ImplicitCastExpr 0x5629197a6940 <col:89> 'int' <LValueToRValue>
    |         |   | `-DeclRefExpr 0x5629197a6900 <col:89> 'int' lvalue Var 0x56291979b5d8 '__unbuffered_p3_EAX' 'int'
    |         |   `-IntegerLiteral 0x5629197a6920 <col:112> 'int' 1
    |         `-BinaryOperator 0x5629197a69f0 <col:117, col:140> 'int' '=='
    |           |-ImplicitCastExpr 0x5629197a69d8 <col:117> 'int' <LValueToRValue>
    |           | `-DeclRefExpr 0x5629197a6998 <col:117> 'int' lvalue Var 0x56291979b6f8 '__unbuffered_p3_EBX' 'int'
    |           `-IntegerLiteral 0x5629197a69b8 <col:140> 'int' 0
    |-CallExpr 0x5629197a6ad8 <line:855:3, col:25> 'void'
    | `-ImplicitCastExpr 0x5629197a6ac0 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x5629197a6aa0 <col:3> 'void ()' Function 0x562919741f00 '__VERIFIER_atomic_end' 'void ()'
    |-CallExpr 0x5629197a6b50 <line:856:3, col:36> 'void'
    | |-ImplicitCastExpr 0x5629197a6b38 <col:3> 'void (*)(int)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x5629197a6af8 <col:3> 'void (int)' Function 0x562919741bc8 '__VERIFIER_assert' 'void (int)'
    | `-ImplicitCastExpr 0x5629197a6bb0 <col:21> 'int' <IntegralCast>
    |   `-ImplicitCastExpr 0x5629197a6b78 <col:21> '_Bool' <LValueToRValue>
    |     `-DeclRefExpr 0x5629197a6b18 <col:21> '_Bool' lvalue Var 0x56291979c310 'main$tmp_guard1' '_Bool'
    `-ReturnStmt 0x5629197a6be8 <line:857:3, col:10>
      `-IntegerLiteral 0x5629197a6bc8 <col:10> 'int' 0
