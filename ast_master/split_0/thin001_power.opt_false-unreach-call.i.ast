TranslationUnitDecl 0x561651509e18 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x56165150a6d8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x56165150a3b0 '__int128'
|-TypedefDecl 0x56165150a748 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x56165150a3d0 'unsigned __int128'
|-TypedefDecl 0x56165150aa50 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x56165150a820 'struct __NSConstantString_tag'
|   `-Record 0x56165150a7a0 '__NSConstantString_tag'
|-TypedefDecl 0x56165150aaf8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x56165150aab0 'char *'
|   `-BuiltinType 0x561651509eb0 'char'
|-TypedefDecl 0x561651549650 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'struct __va_list_tag [1]'
| `-ConstantArrayType 0x56165150ad90 'struct __va_list_tag [1]' 1 
|   `-RecordType 0x56165150abd0 'struct __va_list_tag'
|     `-Record 0x56165150ab50 '__va_list_tag'
|-FunctionDecl 0x561651549790 <./split_0/thin001_power.opt_false-unreach-call.i:1:1, col:34> col:13 used __VERIFIER_assume 'void (int)' extern
| `-ParmVarDecl 0x5616515496c0 <col:31> col:34 'int'
|-FunctionDecl 0x561651549958 <line:2:1, col:45> col:15 used __VERIFIER_nondet_pointer 'void *(void)' extern
|-FunctionDecl 0x561651549a80 <line:3:1, col:61> col:13 used __VERIFIER_error 'void () __attribute__((noreturn))' extern
|-FunctionDecl 0x561651549bc8 <line:4:1, col:99> col:6 used __VERIFIER_assert 'void (int)'
| |-ParmVarDecl 0x561651549b38 <col:24, col:28> col:28 used expression 'int'
| `-CompoundStmt 0x561651549df8 <col:40, col:99>
|   |-IfStmt 0x561651549dc8 <col:42, col:88>
|   | |-UnaryOperator 0x561651549ca8 <col:46, col:47> 'int' prefix '!' cannot overflow
|   | | `-ImplicitCastExpr 0x561651549c90 <col:47> 'int' <LValueToRValue>
|   | |   `-DeclRefExpr 0x561651549c70 <col:47> 'int' lvalue ParmVar 0x561651549b38 'expression' 'int'
|   | `-CompoundStmt 0x561651549db0 <col:59, col:88>
|   |   `-LabelStmt 0x561651549d98 <col:61, col:85> 'ERROR'
|   |     `-CallExpr 0x561651549d28 <col:68, col:85> 'void'
|   |       `-ImplicitCastExpr 0x561651549d10 <col:68> 'void (*)() __attribute__((noreturn))' <FunctionToPointerDecay>
|   |         `-DeclRefExpr 0x561651549cc0 <col:68> 'void () __attribute__((noreturn))' Function 0x561651549a80 '__VERIFIER_error' 'void () __attribute__((noreturn))'
|   |-NullStmt 0x561651549de0 <col:89>
|   `-ReturnStmt 0x561651549de8 <col:91>
|-FunctionDecl 0x561651549e40 <line:5:1, col:37> col:13 used __VERIFIER_atomic_begin 'void ()' extern
|-FunctionDecl 0x561651549f00 <line:6:1, col:35> col:13 used __VERIFIER_atomic_end 'void ()' extern
|-FunctionDecl 0x56165154a280 <line:8:1, line:10:76> line:8:13 __assert_fail 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x561651549fb8 <col:28, col:40> col:40 __assertion 'const char *'
| |-ParmVarDecl 0x56165154a038 <col:53, col:65> col:65 __file 'const char *'
| |-ParmVarDecl 0x56165154a0b8 <line:9:7, col:20> col:20 __line 'unsigned int'
| |-ParmVarDecl 0x56165154a138 <col:28, col:40> col:40 __function 'const char *'
| `-NoThrowAttr 0x56165154a340 <line:10:22>
|-FunctionDecl 0x561651570390 <line:11:1, line:13:76> line:11:13 __assert_perror_fail 'void (int, const char *, unsigned int, const char *) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x56165154a3b0 <col:35, col:39> col:39 __errnum 'int'
| |-ParmVarDecl 0x56165154a430 <col:49, col:61> col:61 __file 'const char *'
| |-ParmVarDecl 0x56165154a4b0 <line:12:7, col:20> col:20 __line 'unsigned int'
| |-ParmVarDecl 0x56165154a530 <col:28, col:40> col:40 __function 'const char *'
| `-NoThrowAttr 0x561651570450 <line:13:22>
|-FunctionDecl 0x561651570700 <line:14:1, line:15:76> line:14:13 __assert 'void (const char *, const char *, int) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x5616515704c0 <col:23, col:35> col:35 __assertion 'const char *'
| |-ParmVarDecl 0x561651570540 <col:48, col:60> col:60 __file 'const char *'
| |-ParmVarDecl 0x5616515705c0 <col:68, col:72> col:72 __line 'int'
| `-NoThrowAttr 0x5616515707b8 <line:15:22>
|-TypedefDecl 0x561651570828 <line:17:1, col:23> col:23 __u_char 'unsigned char'
| `-BuiltinType 0x561651509f70 'unsigned char'
|-TypedefDecl 0x561651570898 <line:18:1, col:28> col:28 __u_short 'unsigned short'
| `-BuiltinType 0x561651509f90 'unsigned short'
|-TypedefDecl 0x561651570908 <line:19:1, col:22> col:22 __u_int 'unsigned int'
| `-BuiltinType 0x561651509fb0 'unsigned int'
|-TypedefDecl 0x561651570978 <line:20:1, col:27> col:27 __u_long 'unsigned long'
| `-BuiltinType 0x561651509fd0 'unsigned long'
|-TypedefDecl 0x5616515709e8 <line:21:1, col:21> col:21 __int8_t 'signed char'
| `-BuiltinType 0x561651509ed0 'signed char'
|-TypedefDecl 0x561651570a58 <line:22:1, col:23> col:23 __uint8_t 'unsigned char'
| `-BuiltinType 0x561651509f70 'unsigned char'
|-TypedefDecl 0x561651570ac8 <line:23:1, col:26> col:26 __int16_t 'short'
| `-BuiltinType 0x561651509ef0 'short'
|-TypedefDecl 0x561651570b38 <line:24:1, col:28> col:28 __uint16_t 'unsigned short'
| `-BuiltinType 0x561651509f90 'unsigned short'
|-TypedefDecl 0x561651570ba8 <line:25:1, col:20> col:20 __int32_t 'int'
| `-BuiltinType 0x561651509f10 'int'
|-TypedefDecl 0x561651570c18 <line:26:1, col:22> col:22 __uint32_t 'unsigned int'
| `-BuiltinType 0x561651509fb0 'unsigned int'
|-TypedefDecl 0x561651570c88 <line:27:1, col:25> col:25 __int64_t 'long'
| `-BuiltinType 0x561651509f30 'long'
|-TypedefDecl 0x561651570cf8 <line:28:1, col:27> col:27 referenced __uint64_t 'unsigned long'
| `-BuiltinType 0x561651509fd0 'unsigned long'
|-TypedefDecl 0x561651570d68 <line:29:1, col:18> col:18 referenced __quad_t 'long'
| `-BuiltinType 0x561651509f30 'long'
|-TypedefDecl 0x561651570dd8 <line:30:1, col:27> col:27 __u_quad_t 'unsigned long'
| `-BuiltinType 0x561651509fd0 'unsigned long'
|-TypedefDecl 0x561651570e48 <line:31:1, col:27> col:27 __dev_t 'unsigned long'
| `-BuiltinType 0x561651509fd0 'unsigned long'
|-TypedefDecl 0x561651570eb8 <line:32:1, col:22> col:22 __uid_t 'unsigned int'
| `-BuiltinType 0x561651509fb0 'unsigned int'
|-TypedefDecl 0x561651570f28 <line:33:1, col:22> col:22 __gid_t 'unsigned int'
| `-BuiltinType 0x561651509fb0 'unsigned int'
|-TypedefDecl 0x561651570f98 <line:34:1, col:27> col:27 __ino_t 'unsigned long'
| `-BuiltinType 0x561651509fd0 'unsigned long'
|-TypedefDecl 0x561651571008 <line:35:1, col:27> col:27 __ino64_t 'unsigned long'
| `-BuiltinType 0x561651509fd0 'unsigned long'
|-TypedefDecl 0x561651571078 <line:36:1, col:22> col:22 __mode_t 'unsigned int'
| `-BuiltinType 0x561651509fb0 'unsigned int'
|-TypedefDecl 0x5616515710e8 <line:37:1, col:27> col:27 __nlink_t 'unsigned long'
| `-BuiltinType 0x561651509fd0 'unsigned long'
|-TypedefDecl 0x561651571158 <line:38:1, col:18> col:18 __off_t 'long'
| `-BuiltinType 0x561651509f30 'long'
|-TypedefDecl 0x5616515711c8 <line:39:1, col:18> col:18 referenced __off64_t 'long'
| `-BuiltinType 0x561651509f30 'long'
|-TypedefDecl 0x561651571238 <line:40:1, col:13> col:13 referenced __pid_t 'int'
| `-BuiltinType 0x561651509f10 'int'
|-RecordDecl 0x561651571290 <line:41:9, col:32> col:9 struct definition
| `-FieldDecl 0x561651571408 <col:18, col:29> col:22 __val 'int [2]'
|-TypedefDecl 0x5616515714c0 <col:1, col:34> col:34 __fsid_t 'struct __fsid_t':'__fsid_t'
| `-ElaboratedType 0x561651571460 'struct __fsid_t' sugar
|   `-RecordType 0x561651571310 '__fsid_t'
|     `-Record 0x561651571290 ''
|-TypedefDecl 0x561651571548 <line:42:1, col:18> col:18 referenced __clock_t 'long'
| `-BuiltinType 0x561651509f30 'long'
|-TypedefDecl 0x5616515715b8 <line:43:1, col:27> col:27 __rlim_t 'unsigned long'
| `-BuiltinType 0x561651509fd0 'unsigned long'
|-TypedefDecl 0x561651571628 <line:44:1, col:27> col:27 __rlim64_t 'unsigned long'
| `-BuiltinType 0x561651509fd0 'unsigned long'
|-TypedefDecl 0x561651571698 <line:45:1, col:22> col:22 __id_t 'unsigned int'
| `-BuiltinType 0x561651509fb0 'unsigned int'
|-TypedefDecl 0x561651571708 <line:46:1, col:18> col:18 referenced __time_t 'long'
| `-BuiltinType 0x561651509f30 'long'
|-TypedefDecl 0x561651571778 <line:47:1, col:22> col:22 __useconds_t 'unsigned int'
| `-BuiltinType 0x561651509fb0 'unsigned int'
|-TypedefDecl 0x5616515717e8 <line:48:1, col:18> col:18 __suseconds_t 'long'
| `-BuiltinType 0x561651509f30 'long'
|-TypedefDecl 0x561651571858 <line:49:1, col:13> col:13 __daddr_t 'int'
| `-BuiltinType 0x561651509f10 'int'
|-TypedefDecl 0x5616515718c8 <line:50:1, col:13> col:13 __key_t 'int'
| `-BuiltinType 0x561651509f10 'int'
|-TypedefDecl 0x561651571938 <line:51:1, col:13> col:13 referenced __clockid_t 'int'
| `-BuiltinType 0x561651509f10 'int'
|-TypedefDecl 0x5616515719a8 <line:52:1, col:16> col:16 referenced __timer_t 'void *'
| `-PointerType 0x56165150a630 'void *'
|   `-BuiltinType 0x561651509e70 'void'
|-TypedefDecl 0x561651571a18 <line:53:1, col:18> col:18 __blksize_t 'long'
| `-BuiltinType 0x561651509f30 'long'
|-TypedefDecl 0x561651571a88 <line:54:1, col:18> col:18 __blkcnt_t 'long'
| `-BuiltinType 0x561651509f30 'long'
|-TypedefDecl 0x561651571af8 <line:55:1, col:18> col:18 __blkcnt64_t 'long'
| `-BuiltinType 0x561651509f30 'long'
|-TypedefDecl 0x561651571b68 <line:56:1, col:27> col:27 __fsblkcnt_t 'unsigned long'
| `-BuiltinType 0x561651509fd0 'unsigned long'
|-TypedefDecl 0x561651571bd8 <line:57:1, col:27> col:27 __fsblkcnt64_t 'unsigned long'
| `-BuiltinType 0x561651509fd0 'unsigned long'
|-TypedefDecl 0x561651571c48 <line:58:1, col:27> col:27 __fsfilcnt_t 'unsigned long'
| `-BuiltinType 0x561651509fd0 'unsigned long'
|-TypedefDecl 0x561651571cb8 <line:59:1, col:27> col:27 __fsfilcnt64_t 'unsigned long'
| `-BuiltinType 0x561651509fd0 'unsigned long'
|-TypedefDecl 0x561651571d28 <line:60:1, col:18> col:18 __fsword_t 'long'
| `-BuiltinType 0x561651509f30 'long'
|-TypedefDecl 0x561651571d98 <line:61:1, col:18> col:18 __ssize_t 'long'
| `-BuiltinType 0x561651509f30 'long'
|-TypedefDecl 0x561651571e08 <line:62:1, col:18> col:18 referenced __syscall_slong_t 'long'
| `-BuiltinType 0x561651509f30 'long'
|-TypedefDecl 0x561651571e78 <line:63:1, col:27> col:27 __syscall_ulong_t 'unsigned long'
| `-BuiltinType 0x561651509fd0 'unsigned long'
|-TypedefDecl 0x561651571f08 <line:64:1, col:19> col:19 __loff_t '__off64_t':'long'
| `-TypedefType 0x561651571ed0 '__off64_t' sugar
|   |-Typedef 0x5616515711c8 '__off64_t'
|   `-BuiltinType 0x561651509f30 'long'
|-TypedefDecl 0x561651572000 <line:65:1, col:19> col:19 __qaddr_t '__quad_t *'
| `-PointerType 0x561651571fc0 '__quad_t *'
|   `-TypedefType 0x561651571f60 '__quad_t' sugar
|     |-Typedef 0x561651570d68 '__quad_t'
|     `-BuiltinType 0x561651509f30 'long'
|-TypedefDecl 0x561651572070 <line:66:1, col:15> col:15 __caddr_t 'char *'
| `-PointerType 0x56165150aab0 'char *'
|   `-BuiltinType 0x561651509eb0 'char'
|-TypedefDecl 0x5616515720e0 <line:67:1, col:18> col:18 __intptr_t 'long'
| `-BuiltinType 0x561651509f30 'long'
|-TypedefDecl 0x561651572150 <line:68:1, col:22> col:22 __socklen_t 'unsigned int'
| `-BuiltinType 0x561651509fb0 'unsigned int'
|-FunctionDecl 0x561651572298 <line:69:1, line:73:1> line:70:1 __bswap_32 'unsigned int (unsigned int)' static inline
| |-ParmVarDecl 0x5616515721c0 <col:13, col:26> col:26 used __bsx 'unsigned int'
| `-CompoundStmt 0x5616515735e8 <line:71:1, line:73:1>
|   `-ReturnStmt 0x5616515735d8 <line:72:3, col:34>
|     `-CallExpr 0x561651573598 <col:10, col:34> 'unsigned int'
|       |-ImplicitCastExpr 0x561651573580 <col:10> 'unsigned int (*)(unsigned int)' <BuiltinFnToFnPtr>
|       | `-DeclRefExpr 0x561651573510 <col:10> '<builtin fn type>' Function 0x561651573380 '__builtin_bswap32' 'unsigned int (unsigned int)'
|       `-ImplicitCastExpr 0x5616515735c0 <col:29> 'unsigned int' <LValueToRValue>
|         `-DeclRefExpr 0x561651573530 <col:29> 'unsigned int' lvalue ParmVar 0x5616515721c0 '__bsx' 'unsigned int'
|-FunctionDecl 0x561651573380 <col:10> col:10 implicit used __builtin_bswap32 'unsigned int (unsigned int)' extern
| |-ParmVarDecl 0x561651573420 <<invalid sloc>> <invalid sloc> 'unsigned int'
| |-NoThrowAttr 0x561651573490 <col:10> Implicit
| `-ConstAttr 0x5616515734e8 <col:10> Implicit
|-FunctionDecl 0x561651573740 <line:74:1, line:78:1> line:75:1 __bswap_64 '__uint64_t (__uint64_t)' static inline
| |-ParmVarDecl 0x561651573638 <col:13, col:24> col:24 used __bsx '__uint64_t':'unsigned long'
| `-CompoundStmt 0x561651573a58 <line:76:1, line:78:1>
|   `-ReturnStmt 0x561651573a48 <line:77:3, col:34>
|     `-CallExpr 0x561651573a08 <col:10, col:34> 'unsigned long'
|       |-ImplicitCastExpr 0x5616515739f0 <col:10> 'unsigned long (*)(unsigned long)' <BuiltinFnToFnPtr>
|       | `-DeclRefExpr 0x561651573978 <col:10> '<builtin fn type>' Function 0x5616515737e8 '__builtin_bswap64' 'unsigned long (unsigned long)'
|       `-ImplicitCastExpr 0x561651573a30 <col:29> '__uint64_t':'unsigned long' <LValueToRValue>
|         `-DeclRefExpr 0x561651573998 <col:29> '__uint64_t':'unsigned long' lvalue ParmVar 0x561651573638 '__bsx' '__uint64_t':'unsigned long'
|-FunctionDecl 0x5616515737e8 <col:10> col:10 implicit used __builtin_bswap64 'unsigned long (unsigned long)' extern
| |-ParmVarDecl 0x561651573888 <<invalid sloc>> <invalid sloc> 'unsigned long'
| |-NoThrowAttr 0x5616515738f8 <col:10> Implicit
| `-ConstAttr 0x561651573950 <col:10> Implicit
|-TypedefDecl 0x561651573a88 <line:79:1, col:27> col:27 referenced size_t 'unsigned long'
| `-BuiltinType 0x561651509fd0 'unsigned long'
|-TypedefDecl 0x561651573b18 <line:81:1, col:18> col:18 referenced time_t '__time_t':'long'
| `-TypedefType 0x561651573ae0 '__time_t' sugar
|   |-Typedef 0x561651571708 '__time_t'
|   `-BuiltinType 0x561651509f30 'long'
|-RecordDecl 0x561651573b70 <line:84:1, line:88:3> line:84:8 struct timespec definition
| |-FieldDecl 0x561651573c28 <line:86:5, col:14> col:14 tv_sec '__time_t':'long'
| `-FieldDecl 0x561651573cb8 <line:87:5, col:23> col:23 tv_nsec '__syscall_slong_t':'long'
|-TypedefDecl 0x561651573d48 <line:89:1, col:17> col:17 referenced pid_t '__pid_t':'int'
| `-TypedefType 0x561651573d10 '__pid_t' sugar
|   |-Typedef 0x561651571238 '__pid_t'
|   `-BuiltinType 0x561651509f10 'int'
|-RecordDecl 0x561651573da0 <line:90:1, line:93:3> line:90:8 struct sched_param definition
| `-FieldDecl 0x561651573e60 <line:92:5, col:9> col:9 __sched_priority 'int'
|-RecordDecl 0x561651573eb0 <line:96:1, line:99:3> line:96:8 struct __sched_param definition
| `-FieldDecl 0x561651573f70 <line:98:5, col:9> col:9 __sched_priority 'int'
|-TypedefDecl 0x561651573fd8 <line:100:1, col:27> col:27 referenced __cpu_mask 'unsigned long'
| `-BuiltinType 0x561651509fd0 'unsigned long'
|-RecordDecl 0x561651574030 <line:101:9, line:104:1> line:101:9 struct definition
| `-FieldDecl 0x5616515742c0 <line:103:3, col:53> col:14 __bits '__cpu_mask [64]'
|-TypedefDecl 0x5616515753a0 <line:101:1, line:104:3> col:3 referenced cpu_set_t 'struct cpu_set_t':'cpu_set_t'
| `-ElaboratedType 0x561651574310 'struct cpu_set_t' sugar
|   `-RecordType 0x5616515740b0 'cpu_set_t'
|     `-Record 0x561651574030 ''
|-FunctionDecl 0x561651575678 <line:106:1, line:107:42> line:106:12 __sched_cpucount 'int (size_t, const cpu_set_t *)' extern
| |-ParmVarDecl 0x561651575448 <col:30, col:37> col:37 __setsize 'size_t':'unsigned long'
| |-ParmVarDecl 0x561651575550 <col:48, col:65> col:65 __setp 'const cpu_set_t *'
| `-NoThrowAttr 0x561651575728 <line:107:19>
|-FunctionDecl 0x561651575900 <line:108:1, col:92> col:19 __sched_cpualloc 'cpu_set_t *(size_t)' extern
| |-ParmVarDecl 0x561651575790 <col:37, col:44> col:44 __count 'size_t':'unsigned long'
| `-NoThrowAttr 0x5616515759a8 <col:69>
|-FunctionDecl 0x561651575b20 <line:109:1, col:87> col:13 __sched_cpufree 'void (cpu_set_t *)' extern
| |-ParmVarDecl 0x561651575a10 <col:30, col:41> col:41 __set 'cpu_set_t *'
| `-NoThrowAttr 0x561651575bc8 <col:64>
|-FunctionDecl 0x561651575e88 <line:112:1, line:113:45> line:112:12 sched_setparam 'int (__pid_t, const struct sched_param *)' extern
| |-ParmVarDecl 0x561651575c30 <col:28, col:36> col:36 __pid '__pid_t':'int'
| |-ParmVarDecl 0x561651575d68 <col:43, col:69> col:69 __param 'const struct sched_param *'
| `-NoThrowAttr 0x561651575f38 <line:113:22>
|-FunctionDecl 0x5616515761b8 <line:114:1, col:111> col:12 sched_getparam 'int (__pid_t, struct sched_param *)' extern
| |-ParmVarDecl 0x561651575fa0 <col:28, col:36> col:36 __pid '__pid_t':'int'
| |-ParmVarDecl 0x561651576098 <col:43, col:63> col:63 __param 'struct sched_param *'
| `-NoThrowAttr 0x561651576268 <col:88>
|-FunctionDecl 0x561651576588 <line:115:1, line:116:85> line:115:12 sched_setscheduler 'int (__pid_t, int, const struct sched_param *)' extern
| |-ParmVarDecl 0x5616515762d0 <col:32, col:40> col:40 __pid '__pid_t':'int'
| |-ParmVarDecl 0x5616515763b0 <col:47, col:51> col:51 __policy 'int'
| |-ParmVarDecl 0x561651576440 <line:116:11, col:37> col:37 __param 'const struct sched_param *'
| `-NoThrowAttr 0x561651576640 <col:62>
|-FunctionDecl 0x5616515767b8 <line:117:1, col:86> col:12 sched_getscheduler 'int (__pid_t)' extern
| |-ParmVarDecl 0x5616515766a8 <col:32, col:40> col:40 __pid '__pid_t':'int'
| `-NoThrowAttr 0x561651576860 <col:63>
|-FunctionDecl 0x561651576988 <line:118:1, col:70> col:12 sched_yield 'int (void)' extern
| `-NoThrowAttr 0x561651576a28 <col:47>
|-FunctionDecl 0x561651576b30 <line:119:1, col:92> col:12 sched_get_priority_max 'int (int)' extern
| |-ParmVarDecl 0x561651576a98 <col:36, col:40> col:40 __algorithm 'int'
| `-NoThrowAttr 0x561651576bd8 <col:69>
|-FunctionDecl 0x561651576ce0 <line:120:1, col:92> col:12 sched_get_priority_min 'int (int)' extern
| |-ParmVarDecl 0x561651576c48 <col:36, col:40> col:40 __algorithm 'int'
| `-NoThrowAttr 0x561651576d88 <col:69>
|-FunctionDecl 0x561651577048 <line:121:1, col:111> col:12 sched_rr_get_interval 'int (__pid_t, struct timespec *)' extern
| |-ParmVarDecl 0x561651576df0 <col:35, col:43> col:43 __pid '__pid_t':'int'
| |-ParmVarDecl 0x561651576f28 <col:50, col:67> col:67 __t 'struct timespec *'
| `-NoThrowAttr 0x5616515770f8 <col:88>
|-TypedefDecl 0x561651577188 <line:125:1, col:19> col:19 referenced clock_t '__clock_t':'long'
| `-TypedefType 0x561651577150 '__clock_t' sugar
|   |-Typedef 0x561651571548 '__clock_t'
|   `-BuiltinType 0x561651509f30 'long'
|-TypedefDecl 0x561651577218 <line:128:1, col:21> col:21 referenced clockid_t '__clockid_t':'int'
| `-TypedefType 0x5616515771e0 '__clockid_t' sugar
|   |-Typedef 0x561651571938 '__clockid_t'
|   `-BuiltinType 0x561651509f10 'int'
|-TypedefDecl 0x5616515772a8 <line:129:1, col:19> col:19 referenced timer_t '__timer_t':'void *'
| `-TypedefType 0x561651577270 '__timer_t' sugar
|   |-Typedef 0x5616515719a8 '__timer_t'
|   `-PointerType 0x56165150a630 'void *'
|     `-BuiltinType 0x561651509e70 'void'
|-RecordDecl 0x561651577300 <line:131:1, line:144:1> line:131:8 struct tm definition
| |-FieldDecl 0x5616515773d8 <line:133:3, col:7> col:7 tm_sec 'int'
| |-FieldDecl 0x561651577440 <line:134:3, col:7> col:7 tm_min 'int'
| |-FieldDecl 0x5616515774a8 <line:135:3, col:7> col:7 tm_hour 'int'
| |-FieldDecl 0x561651577510 <line:136:3, col:7> col:7 tm_mday 'int'
| |-FieldDecl 0x561651577578 <line:137:3, col:7> col:7 tm_mon 'int'
| |-FieldDecl 0x5616515775e0 <line:138:3, col:7> col:7 tm_year 'int'
| |-FieldDecl 0x561651577648 <line:139:3, col:7> col:7 tm_wday 'int'
| |-FieldDecl 0x5616515776b0 <line:140:3, col:7> col:7 tm_yday 'int'
| |-FieldDecl 0x561651577718 <line:141:3, col:7> col:7 tm_isdst 'int'
| |-FieldDecl 0x561651577780 <line:142:3, col:12> col:12 tm_gmtoff 'long'
| `-FieldDecl 0x5616515777e8 <line:143:3, col:15> col:15 tm_zone 'const char *'
|-RecordDecl 0x561651577838 <line:147:1, line:151:3> line:147:8 struct itimerspec definition
| |-FieldDecl 0x561651577908 <line:149:5, col:21> col:21 it_interval 'struct timespec':'struct timespec'
| `-FieldDecl 0x561651577978 <line:150:5, col:21> col:21 it_value 'struct timespec':'struct timespec'
|-RecordDecl 0x561651577a20 <line:152:1, col:8> col:8 struct sigevent
|-FunctionDecl 0x561651577bf0 <line:154:1, col:68> col:16 clock 'clock_t (void)' extern
| `-NoThrowAttr 0x561651577c90 <col:45>
|-FunctionDecl 0x561651577e70 <line:155:1, col:77> col:15 time 'time_t (time_t *)' extern
| |-ParmVarDecl 0x561651577d60 <col:21, col:29> col:29 __timer 'time_t *'
| `-NoThrowAttr 0x561651577f18 <col:54>
|-FunctionDecl 0x561651578118 <line:156:1, line:157:73> line:156:15 difftime 'double (time_t, time_t)' extern
| |-ParmVarDecl 0x561651577f80 <col:25, col:32> col:32 __time1 'time_t':'long'
| |-ParmVarDecl 0x561651577ff8 <col:41, col:48> col:48 __time0 'time_t':'long'
| |-NoThrowAttr 0x5616515781c8 <line:157:22>
| `-ConstAttr 0x561651578220 <col:63>
|-FunctionDecl 0x561651579050 <line:158:1, col:79> col:15 mktime 'time_t (struct tm *)' extern
| |-ParmVarDecl 0x561651578318 <col:23, col:34> col:34 __tp 'struct tm *'
| `-NoThrowAttr 0x5616515790f8 <col:56>
|-FunctionDecl 0x5616515794a0 <line:159:1, line:161:77> line:159:15 strftime 'size_t (char *restrict, size_t, const char *restrict, const struct tm *restrict)' extern
| |-ParmVarDecl 0x561651579168 <col:25, col:42> col:42 __s 'char *restrict'
| |-ParmVarDecl 0x5616515791e0 <col:47, col:54> col:54 __maxsize 'size_t':'unsigned long'
| |-ParmVarDecl 0x561651579260 <line:160:4, col:27> col:27 __format 'const char *restrict'
| |-ParmVarDecl 0x561651579358 <line:161:4, col:32> col:32 __tp 'const struct tm *restrict'
| `-NoThrowAttr 0x561651579560 <col:54>
|-RecordDecl 0x5616515795b8 <line:163:9, line:170:1> line:163:16 struct __locale_struct definition
| |-RecordDecl 0x561651579668 parent 0x561651509e18 <line:165:3, col:10> col:10 struct __locale_data
| |-FieldDecl 0x5616515798c8 <col:3, col:37> col:25 __locales 'struct __locale_data *[13]'
| |-FieldDecl 0x561651579968 <line:166:3, col:29> col:29 __ctype_b 'const unsigned short *'
| |-FieldDecl 0x5616515799d0 <line:167:3, col:14> col:14 __ctype_tolower 'const int *'
| |-FieldDecl 0x561651579a38 <line:168:3, col:14> col:14 __ctype_toupper 'const int *'
| `-FieldDecl 0x561651579b28 <line:169:3, col:25> col:15 __names 'const char *[13]'
|-TypedefDecl 0x561651579c48 <line:163:1, line:170:4> col:4 referenced __locale_t 'struct __locale_struct *'
| `-PointerType 0x561651579bf0 'struct __locale_struct *'
|   `-ElaboratedType 0x561651579b80 'struct __locale_struct' sugar
|     `-RecordType 0x561651579640 'struct __locale_struct'
|       `-Record 0x5616515795b8 '__locale_struct'
|-TypedefDecl 0x561651579cf8 <line:171:1, col:20> col:20 locale_t '__locale_t':'struct __locale_struct *'
| `-TypedefType 0x561651579cc0 '__locale_t' sugar
|   |-Typedef 0x561651579c48 '__locale_t'
|   `-PointerType 0x561651579bf0 'struct __locale_struct *'
|     `-ElaboratedType 0x561651579b80 'struct __locale_struct' sugar
|       `-RecordType 0x561651579640 'struct __locale_struct'
|         `-Record 0x5616515795b8 '__locale_struct'
|-FunctionDecl 0x56165157b110 <line:172:1, line:175:63> line:172:15 strftime_l 'size_t (char *restrict, size_t, const char *restrict, const struct tm *restrict, __locale_t)' extern
| |-ParmVarDecl 0x561651579d68 <col:27, col:44> col:44 __s 'char *restrict'
| |-ParmVarDecl 0x561651579de0 <col:49, col:56> col:56 __maxsize 'size_t':'unsigned long'
| |-ParmVarDecl 0x561651579e60 <line:173:6, col:29> col:29 __format 'const char *restrict'
| |-ParmVarDecl 0x561651579ef0 <line:174:6, col:34> col:34 __tp 'const struct tm *restrict'
| |-ParmVarDecl 0x561651579f68 <line:175:6, col:17> col:17 __loc '__locale_t':'struct __locale_struct *'
| `-NoThrowAttr 0x56165157b1d8 <col:40>
|-FunctionDecl 0x56165157b3c8 <line:177:1, col:89> col:19 gmtime 'struct tm *(const time_t *)' extern
| |-ParmVarDecl 0x56165157b2a0 <col:27, col:41> col:41 __timer 'const time_t *'
| `-NoThrowAttr 0x56165157b470 <col:66>
|-FunctionDecl 0x56165157b580 <line:178:1, col:92> col:19 localtime 'struct tm *(const time_t *)' extern
| |-ParmVarDecl 0x56165157b4d8 <col:30, col:44> col:44 __timer 'const time_t *'
| `-NoThrowAttr 0x56165157b628 <col:69>
|-FunctionDecl 0x56165157b858 <line:180:1, line:181:75> line:180:19 gmtime_r 'struct tm *(const time_t *restrict, struct tm *restrict)' extern
| |-ParmVarDecl 0x56165157b690 <col:29, col:54> col:54 __timer 'const time_t *restrict'
| |-ParmVarDecl 0x56165157b720 <line:181:8, col:30> col:30 __tp 'struct tm *restrict'
| `-NoThrowAttr 0x56165157b908 <col:52>
|-FunctionDecl 0x56165157bab0 <line:182:1, line:183:78> line:182:19 localtime_r 'struct tm *(const time_t *restrict, struct tm *restrict)' extern
| |-ParmVarDecl 0x56165157b970 <col:32, col:57> col:57 __timer 'const time_t *restrict'
| |-ParmVarDecl 0x56165157ba00 <line:183:11, col:33> col:33 __tp 'struct tm *restrict'
| `-NoThrowAttr 0x56165157bb60 <col:55>
|-FunctionDecl 0x56165157bcf8 <line:185:1, col:85> col:14 asctime 'char *(const struct tm *)' extern
| |-ParmVarDecl 0x56165157bbe0 <col:23, col:40> col:40 __tp 'const struct tm *'
| `-NoThrowAttr 0x56165157bda0 <col:62>
|-FunctionDecl 0x56165157bf18 <line:186:1, col:83> col:14 ctime 'char *(const time_t *)' extern
| |-ParmVarDecl 0x56165157be08 <col:21, col:35> col:35 __timer 'const time_t *'
| `-NoThrowAttr 0x56165157bfc0 <col:60>
|-FunctionDecl 0x56165157c2b8 <line:188:1, line:189:67> line:188:14 asctime_r 'char *(const struct tm *restrict, char *restrict)' extern
| |-ParmVarDecl 0x56165157c118 <col:25, col:53> col:53 __tp 'const struct tm *restrict'
| |-ParmVarDecl 0x56165157c198 <line:189:4, col:21> col:21 __buf 'char *restrict'
| `-NoThrowAttr 0x56165157c368 <col:44>
|-FunctionDecl 0x56165157c578 <line:190:1, line:191:72> line:190:14 ctime_r 'char *(const time_t *restrict, char *restrict)' extern
| |-ParmVarDecl 0x56165157c3d0 <col:23, col:48> col:48 __timer 'const time_t *restrict'
| |-ParmVarDecl 0x56165157c450 <line:191:9, col:26> col:26 __buf 'char *restrict'
| `-NoThrowAttr 0x56165157c628 <col:49>
|-VarDecl 0x56165157c728 <line:192:1, col:24> col:14 __tzname 'char *[2]' extern
|-VarDecl 0x56165157c7a8 <line:193:1, col:12> col:12 __daylight 'int' extern
|-VarDecl 0x56165157c828 <line:194:1, col:17> col:17 __timezone 'long' extern
|-VarDecl 0x56165157c8f0 <line:195:1, col:22> col:14 tzname 'char *[2]' extern
|-FunctionDecl 0x56165157ca20 <line:196:1, col:65> col:13 tzset 'void (void)' extern
| `-NoThrowAttr 0x56165157cac0 <col:42>
|-VarDecl 0x56165157cb30 <line:197:1, col:12> col:12 daylight 'int' extern
|-VarDecl 0x56165157cbb0 <line:198:1, col:17> col:17 timezone 'long' extern
|-FunctionDecl 0x56165157cd38 <line:199:1, col:80> col:12 stime 'int (const time_t *)' extern
| |-ParmVarDecl 0x56165157cc28 <col:19, col:33> col:33 __when 'const time_t *'
| `-NoThrowAttr 0x56165157cde0 <col:57>
|-FunctionDecl 0x56165157cef0 <line:200:1, col:79> col:15 timegm 'time_t (struct tm *)' extern
| |-ParmVarDecl 0x56165157ce60 <col:23, col:34> col:34 __tp 'struct tm *'
| `-NoThrowAttr 0x56165157cf98 <col:56>
|-FunctionDecl 0x56165157d0d0 <line:201:1, col:82> col:15 timelocal 'time_t (struct tm *)' extern
| |-ParmVarDecl 0x56165157d018 <col:26, col:37> col:37 __tp 'struct tm *'
| `-NoThrowAttr 0x56165157d178 <col:59>
|-FunctionDecl 0x56165157d280 <line:202:1, col:99> col:12 dysize 'int (int)' extern
| |-ParmVarDecl 0x56165157d1e8 <col:20, col:24> col:24 __year 'int'
| |-NoThrowAttr 0x56165157d328 <col:48>
| `-ConstAttr 0x56165157d380 <col:89>
|-FunctionDecl 0x56165157d5e8 <line:203:1, line:204:37> line:203:12 nanosleep 'int (const struct timespec *, struct timespec *)' extern
| |-ParmVarDecl 0x56165157d438 <col:23, col:46> col:46 __requested_time 'const struct timespec *'
| `-ParmVarDecl 0x56165157d4c8 <line:204:9, col:26> col:26 __remaining 'struct timespec *'
|-FunctionDecl 0x56165157d848 <line:205:1, col:111> col:12 clock_getres 'int (clockid_t, struct timespec *)' extern
| |-ParmVarDecl 0x56165157d6d8 <col:26, col:36> col:36 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x56165157d768 <col:48, col:65> col:65 __res 'struct timespec *'
| `-NoThrowAttr 0x56165157d8f8 <col:88>
|-FunctionDecl 0x56165157da90 <line:206:1, col:111> col:12 clock_gettime 'int (clockid_t, struct timespec *)' extern
| |-ParmVarDecl 0x56165157d960 <col:27, col:37> col:37 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x56165157d9f0 <col:49, col:66> col:66 __tp 'struct timespec *'
| `-NoThrowAttr 0x56165157db40 <col:88>
|-FunctionDecl 0x56165157dd58 <line:207:1, line:208:45> line:207:12 clock_settime 'int (clockid_t, const struct timespec *)' extern
| |-ParmVarDecl 0x56165157dba8 <col:27, col:37> col:37 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x56165157dc38 <col:49, col:72> col:72 __tp 'const struct timespec *'
| `-NoThrowAttr 0x56165157de08 <line:208:22>
|-FunctionDecl 0x56165157e178 <line:209:1, line:211:30> line:209:12 clock_nanosleep 'int (clockid_t, int, const struct timespec *, struct timespec *)' extern
| |-ParmVarDecl 0x56165157de70 <col:29, col:39> col:39 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x56165157def0 <col:51, col:55> col:55 __flags 'int'
| |-ParmVarDecl 0x56165157df80 <line:210:8, col:31> col:31 __req 'const struct timespec *'
| `-ParmVarDecl 0x56165157e010 <line:211:8, col:25> col:25 __rem 'struct timespec *'
|-FunctionDecl 0x56165157e478 <line:212:1, col:108> col:12 clock_getcpuclockid 'int (pid_t, clockid_t *)' extern
| |-ParmVarDecl 0x56165157e278 <col:33, col:39> col:39 __pid 'pid_t':'int'
| |-ParmVarDecl 0x56165157e350 <col:46, col:57> col:57 __clock_id 'clockid_t *'
| `-NoThrowAttr 0x56165157e528 <col:85>
|-FunctionDecl 0x56165157e918 <line:213:1, line:215:75> line:213:12 timer_create 'int (clockid_t, struct sigevent *restrict, timer_t *restrict)' extern
| |-ParmVarDecl 0x56165157e590 <col:26, col:36> col:36 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x56165157e6c8 <line:214:5, col:33> col:33 __evp 'struct sigevent *restrict'
| |-ParmVarDecl 0x56165157e7d0 <line:215:5, col:25> col:25 __timerid 'timer_t *restrict'
| `-NoThrowAttr 0x56165157e9d0 <col:52>
|-FunctionDecl 0x56165157eb48 <line:216:1, col:84> col:12 timer_delete 'int (timer_t)' extern
| |-ParmVarDecl 0x56165157ea38 <col:26, col:34> col:34 __timerid 'timer_t':'void *'
| `-NoThrowAttr 0x56165157ebf0 <col:61>
|-FunctionDecl 0x56165157f0f0 <line:217:1, line:219:85> line:217:12 timer_settime 'int (timer_t, int, const struct itimerspec *restrict, struct itimerspec *restrict)' extern
| |-ParmVarDecl 0x56165157ec58 <col:27, col:35> col:35 __timerid 'timer_t':'void *'
| |-ParmVarDecl 0x56165157ecd8 <col:46, col:50> col:50 __flags 'int'
| |-ParmVarDecl 0x56165157ee08 <line:218:6, col:42> col:42 __value 'const struct itimerspec *restrict'
| |-ParmVarDecl 0x56165157eef8 <line:219:6, col:36> col:36 __ovalue 'struct itimerspec *restrict'
| `-NoThrowAttr 0x56165157f1b0 <col:62>
|-FunctionDecl 0x56165157f3c8 <line:220:1, line:221:45> line:220:12 timer_gettime 'int (timer_t, struct itimerspec *)' extern
| |-ParmVarDecl 0x56165157f218 <col:27, col:35> col:35 __timerid 'timer_t':'void *'
| |-ParmVarDecl 0x56165157f2a8 <col:46, col:65> col:65 __value 'struct itimerspec *'
| `-NoThrowAttr 0x56165157f478 <line:221:22>
|-FunctionDecl 0x56165157f578 <line:222:1, col:88> col:12 timer_getoverrun 'int (timer_t)' extern
| |-ParmVarDecl 0x56165157f4e0 <col:30, col:38> col:38 __timerid 'timer_t':'void *'
| `-NoThrowAttr 0x56165157f620 <col:65>
|-TypedefDecl 0x56165157f690 <line:224:1, col:27> col:27 referenced pthread_t 'unsigned long'
| `-BuiltinType 0x561651509fd0 'unsigned long'
|-RecordDecl 0x56165157f6e8 <line:225:1, line:229:1> line:225:7 union pthread_attr_t definition
| |-FieldDecl 0x56165157f830 <line:227:3, col:17> col:8 __size 'char [56]'
| `-FieldDecl 0x56165157f898 <line:228:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x56165157f948 <line:230:1, col:30> col:30 referenced pthread_attr_t 'union pthread_attr_t':'union pthread_attr_t'
| `-ElaboratedType 0x56165157f8f0 'union pthread_attr_t' sugar
|   `-RecordType 0x56165157f770 'union pthread_attr_t'
|     `-Record 0x56165157f6e8 'pthread_attr_t'
|-RecordDecl 0x56165157f9a0 <line:231:9, line:235:1> line:231:16 struct __pthread_internal_list definition
| |-FieldDecl 0x56165157fb18 <line:233:3, col:35> col:35 __prev 'struct __pthread_internal_list *'
| `-FieldDecl 0x56165157fb90 <line:234:3, col:35> col:35 __next 'struct __pthread_internal_list *'
|-TypedefDecl 0x56165157fc40 <line:231:1, line:235:3> col:3 referenced __pthread_list_t 'struct __pthread_internal_list':'struct __pthread_internal_list'
| `-ElaboratedType 0x56165157fbe0 'struct __pthread_internal_list' sugar
|   `-RecordType 0x56165157fa20 'struct __pthread_internal_list'
|     `-Record 0x56165157f9a0 '__pthread_internal_list'
|-RecordDecl 0x56165157fcb0 <line:236:9, line:250:1> line:236:9 union definition
| |-RecordDecl 0x56165157fd58 parent 0x561651509e18 <line:238:3, line:247:3> line:238:10 struct __pthread_mutex_s definition
| | |-FieldDecl 0x56165157fe30 <line:240:5, col:9> col:9 __lock 'int'
| | |-FieldDecl 0x56165157fe98 <line:241:5, col:18> col:18 __count 'unsigned int'
| | |-FieldDecl 0x56165157ff00 <line:242:5, col:9> col:9 __owner 'int'
| | |-FieldDecl 0x56165157ff68 <line:243:5, col:18> col:18 __nusers 'unsigned int'
| | |-FieldDecl 0x56165157ffd0 <line:244:5, col:9> col:9 __kind 'int'
| | |-FieldDecl 0x561651580038 <line:245:5, col:9> col:9 __spins 'int'
| | `-FieldDecl 0x561651584110 <line:246:5, col:22> col:22 __list '__pthread_list_t':'struct __pthread_internal_list'
| |-FieldDecl 0x5616515841c0 <line:238:3, line:247:5> col:5 __data 'struct __pthread_mutex_s':'struct __pthread_mutex_s'
| |-FieldDecl 0x5616515842b0 <line:248:3, col:17> col:8 __size 'char [40]'
| `-FieldDecl 0x561651584318 <line:249:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x5616515844a0 <line:236:1, line:250:3> col:3 referenced pthread_mutex_t 'union pthread_mutex_t':'pthread_mutex_t'
| `-ElaboratedType 0x561651584440 'union pthread_mutex_t' sugar
|   `-RecordType 0x56165157fd30 'pthread_mutex_t'
|     `-Record 0x56165157fcb0 ''
|-RecordDecl 0x561651584510 <line:251:9, line:255:1> line:251:9 union definition
| |-FieldDecl 0x561651584650 <line:253:3, col:16> col:8 __size 'char [4]'
| `-FieldDecl 0x5616515846b8 <line:254:3, col:7> col:7 __align 'int'
|-TypedefDecl 0x561651584770 <line:251:1, line:255:3> col:3 referenced pthread_mutexattr_t 'union pthread_mutexattr_t':'pthread_mutexattr_t'
| `-ElaboratedType 0x561651584710 'union pthread_mutexattr_t' sugar
|   `-RecordType 0x561651584590 'pthread_mutexattr_t'
|     `-Record 0x561651584510 ''
|-RecordDecl 0x5616515847e0 <line:256:9, line:271:1> line:256:9 union definition
| |-RecordDecl 0x561651584888 <line:258:3, line:268:3> line:258:3 struct definition
| | |-FieldDecl 0x561651584950 <line:260:5, col:9> col:9 __lock 'int'
| | |-FieldDecl 0x5616515849b8 <line:261:5, col:18> col:18 __futex 'unsigned int'
| | |-FieldDecl 0x561651584a20 <line:262:19, col:42> col:42 __total_seq 'unsigned long long'
| | |-FieldDecl 0x561651584a88 <line:263:19, col:42> col:42 __wakeup_seq 'unsigned long long'
| | |-FieldDecl 0x561651584af0 <line:264:19, col:42> col:42 __woken_seq 'unsigned long long'
| | |-FieldDecl 0x561651584b58 <line:265:5, col:11> col:11 __mutex 'void *'
| | |-FieldDecl 0x561651584bc0 <line:266:5, col:18> col:18 __nwaiters 'unsigned int'
| | `-FieldDecl 0x561651584c28 <line:267:5, col:18> col:18 __broadcast_seq 'unsigned int'
| |-FieldDecl 0x561651584ce0 <line:258:3, line:268:5> col:5 __data 'struct (anonymous struct at ./split_0/thin001_power.opt_false-unreach-call.i:258:3)':'struct pthread_cond_t::(anonymous at ./split_0/thin001_power.opt_false-unreach-call.i:258:3)'
| |-FieldDecl 0x561651584dd0 <line:269:3, col:17> col:8 __size 'char [48]'
| `-FieldDecl 0x561651584e38 <line:270:17, col:31> col:31 __align 'long long'
|-TypedefDecl 0x561651584f70 <line:256:1, line:271:3> col:3 referenced pthread_cond_t 'union pthread_cond_t':'pthread_cond_t'
| `-ElaboratedType 0x561651584f10 'union pthread_cond_t' sugar
|   `-RecordType 0x561651584860 'pthread_cond_t'
|     `-Record 0x5616515847e0 ''
|-RecordDecl 0x561651584fe0 <line:272:9, line:276:1> line:272:9 union definition
| |-FieldDecl 0x561651586130 <line:274:3, col:16> col:8 __size 'char [4]'
| `-FieldDecl 0x561651586198 <line:275:3, col:7> col:7 __align 'int'
|-TypedefDecl 0x561651586250 <line:272:1, line:276:3> col:3 referenced pthread_condattr_t 'union pthread_condattr_t':'pthread_condattr_t'
| `-ElaboratedType 0x5616515861f0 'union pthread_condattr_t' sugar
|   `-RecordType 0x561651585060 'pthread_condattr_t'
|     `-Record 0x561651584fe0 ''
|-TypedefDecl 0x5616515862d8 <line:277:1, col:22> col:22 referenced pthread_key_t 'unsigned int'
| `-BuiltinType 0x561651509fb0 'unsigned int'
|-TypedefDecl 0x561651586348 <line:278:1, col:13> col:13 referenced pthread_once_t 'int'
| `-BuiltinType 0x561651509f10 'int'
|-RecordDecl 0x5616515863a0 <line:279:9, line:297:1> line:279:9 union definition
| |-RecordDecl 0x561651586448 <line:281:3, line:294:3> line:281:3 struct definition
| | |-FieldDecl 0x561651586510 <line:283:5, col:9> col:9 __lock 'int'
| | |-FieldDecl 0x561651586578 <line:284:5, col:18> col:18 __nr_readers 'unsigned int'
| | |-FieldDecl 0x5616515865e0 <line:285:5, col:18> col:18 __readers_wakeup 'unsigned int'
| | |-FieldDecl 0x561651586648 <line:286:5, col:18> col:18 __writer_wakeup 'unsigned int'
| | |-FieldDecl 0x5616515866b0 <line:287:5, col:18> col:18 __nr_readers_queued 'unsigned int'
| | |-FieldDecl 0x561651586718 <line:288:5, col:18> col:18 __nr_writers_queued 'unsigned int'
| | |-FieldDecl 0x561651586780 <line:289:5, col:9> col:9 __writer 'int'
| | |-FieldDecl 0x5616515867e8 <line:290:5, col:9> col:9 __shared 'int'
| | |-FieldDecl 0x561651586850 <line:291:5, col:23> col:23 __pad1 'unsigned long'
| | |-FieldDecl 0x5616515868b8 <line:292:5, col:23> col:23 __pad2 'unsigned long'
| | `-FieldDecl 0x561651586920 <line:293:5, col:18> col:18 __flags 'unsigned int'
| |-FieldDecl 0x5616515869d0 <line:281:3, line:294:5> col:5 __data 'struct (anonymous struct at ./split_0/thin001_power.opt_false-unreach-call.i:281:3)':'struct pthread_rwlock_t::(anonymous at ./split_0/thin001_power.opt_false-unreach-call.i:281:3)'
| |-FieldDecl 0x561651586a78 <line:295:3, col:17> col:8 __size 'char [56]'
| `-FieldDecl 0x561651586ae0 <line:296:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x561651586c30 <line:279:1, line:297:3> col:3 referenced pthread_rwlock_t 'union pthread_rwlock_t':'pthread_rwlock_t'
| `-ElaboratedType 0x561651586bd0 'union pthread_rwlock_t' sugar
|   `-RecordType 0x561651586420 'pthread_rwlock_t'
|     `-Record 0x5616515863a0 ''
|-RecordDecl 0x561651586ca0 <line:298:9, line:302:1> line:298:9 union definition
| |-FieldDecl 0x561651586de0 <line:300:3, col:16> col:8 __size 'char [8]'
| `-FieldDecl 0x561651586e48 <line:301:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x561651586f00 <line:298:1, line:302:3> col:3 referenced pthread_rwlockattr_t 'union pthread_rwlockattr_t':'pthread_rwlockattr_t'
| `-ElaboratedType 0x561651586ea0 'union pthread_rwlockattr_t' sugar
|   `-RecordType 0x561651586d20 'pthread_rwlockattr_t'
|     `-Record 0x561651586ca0 ''
|-TypedefDecl 0x561651586f88 <line:303:1, col:22> col:22 referenced pthread_spinlock_t 'volatile int'
| `-QualType 0x561651509f14 'volatile int' volatile
|   `-BuiltinType 0x561651509f10 'int'
|-RecordDecl 0x561651586fe0 <line:304:9, line:308:1> line:304:9 union definition
| |-FieldDecl 0x561651588140 <line:306:3, col:17> col:8 __size 'char [32]'
| `-FieldDecl 0x5616515881a8 <line:307:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x561651588260 <line:304:1, line:308:3> col:3 referenced pthread_barrier_t 'union pthread_barrier_t':'pthread_barrier_t'
| `-ElaboratedType 0x561651588200 'union pthread_barrier_t' sugar
|   `-RecordType 0x561651587060 'pthread_barrier_t'
|     `-Record 0x561651586fe0 ''
|-RecordDecl 0x5616515882d0 <line:309:9, line:313:1> line:309:9 union definition
| |-FieldDecl 0x5616515883d0 <line:311:3, col:16> col:8 __size 'char [4]'
| `-FieldDecl 0x561651588438 <line:312:3, col:7> col:7 __align 'int'
|-TypedefDecl 0x5616515884f0 <line:309:1, line:313:3> col:3 referenced pthread_barrierattr_t 'union pthread_barrierattr_t':'pthread_barrierattr_t'
| `-ElaboratedType 0x561651588490 'union pthread_barrierattr_t' sugar
|   `-RecordType 0x561651588350 'pthread_barrierattr_t'
|     `-Record 0x5616515882d0 ''
|-TypedefDecl 0x561651588608 <line:314:1, col:29> col:18 referenced __jmp_buf 'long [8]'
| `-ConstantArrayType 0x5616515885a0 'long [8]' 8 
|   `-BuiltinType 0x561651509f30 'long'
|-EnumDecl 0x561651588660 <line:315:1, line:319:1> line:315:1
| |-EnumConstantDecl 0x561651588728 <line:317:3> col:3 PTHREAD_CREATE_JOINABLE 'int'
| `-EnumConstantDecl 0x561651588778 <line:318:3> col:3 PTHREAD_CREATE_DETACHED 'int'
|-EnumDecl 0x5616515887c8 <line:320:1, line:331:1> line:320:1
| |-EnumConstantDecl 0x561651588898 <line:322:3> col:3 referenced PTHREAD_MUTEX_TIMED_NP 'int'
| |-EnumConstantDecl 0x5616515888e8 <line:323:3> col:3 referenced PTHREAD_MUTEX_RECURSIVE_NP 'int'
| |-EnumConstantDecl 0x561651588938 <line:324:3> col:3 referenced PTHREAD_MUTEX_ERRORCHECK_NP 'int'
| |-EnumConstantDecl 0x561651588988 <line:325:3> col:3 PTHREAD_MUTEX_ADAPTIVE_NP 'int'
| |-EnumConstantDecl 0x561651588a10 <line:327:3, col:26> col:3 referenced PTHREAD_MUTEX_NORMAL 'int'
| | `-ConstantExpr 0x5616515889f8 <col:26> 'int'
| |   `-DeclRefExpr 0x5616515889d8 <col:26> 'int' EnumConstant 0x561651588898 'PTHREAD_MUTEX_TIMED_NP' 'int'
| |-EnumConstantDecl 0x561651588a98 <line:328:3, col:29> col:3 PTHREAD_MUTEX_RECURSIVE 'int'
| | `-ConstantExpr 0x561651588a80 <col:29> 'int'
| |   `-DeclRefExpr 0x561651588a60 <col:29> 'int' EnumConstant 0x5616515888e8 'PTHREAD_MUTEX_RECURSIVE_NP' 'int'
| |-EnumConstantDecl 0x561651588b20 <line:329:3, col:30> col:3 PTHREAD_MUTEX_ERRORCHECK 'int'
| | `-ConstantExpr 0x561651588b08 <col:30> 'int'
| |   `-DeclRefExpr 0x561651588ae8 <col:30> 'int' EnumConstant 0x561651588938 'PTHREAD_MUTEX_ERRORCHECK_NP' 'int'
| `-EnumConstantDecl 0x561651588ba8 <line:330:3, col:27> col:3 PTHREAD_MUTEX_DEFAULT 'int'
|   `-ConstantExpr 0x561651588b90 <col:27> 'int'
|     `-DeclRefExpr 0x561651588b70 <col:27> 'int' EnumConstant 0x561651588a10 'PTHREAD_MUTEX_NORMAL' 'int'
|-EnumDecl 0x561651588bf8 <line:332:1, line:338:1> line:332:1
| |-EnumConstantDecl 0x561651588cc8 <line:334:3> col:3 referenced PTHREAD_MUTEX_STALLED 'int'
| |-EnumConstantDecl 0x561651588d50 <line:335:3, col:30> col:3 PTHREAD_MUTEX_STALLED_NP 'int'
| | `-ConstantExpr 0x561651588d38 <col:30> 'int'
| |   `-DeclRefExpr 0x561651588d18 <col:30> 'int' EnumConstant 0x561651588cc8 'PTHREAD_MUTEX_STALLED' 'int'
| |-EnumConstantDecl 0x561651588da0 <line:336:3> col:3 referenced PTHREAD_MUTEX_ROBUST 'int'
| `-EnumConstantDecl 0x561651588e28 <line:337:3, col:29> col:3 PTHREAD_MUTEX_ROBUST_NP 'int'
|   `-ConstantExpr 0x561651588e10 <col:29> 'int'
|     `-DeclRefExpr 0x561651588df0 <col:29> 'int' EnumConstant 0x561651588da0 'PTHREAD_MUTEX_ROBUST' 'int'
|-EnumDecl 0x561651588e78 <line:339:1, line:344:1> line:339:1
| |-EnumConstantDecl 0x561651588f48 <line:341:3> col:3 PTHREAD_PRIO_NONE 'int'
| |-EnumConstantDecl 0x561651588f98 <line:342:3> col:3 PTHREAD_PRIO_INHERIT 'int'
| `-EnumConstantDecl 0x561651588fe8 <line:343:3> col:3 PTHREAD_PRIO_PROTECT 'int'
|-EnumDecl 0x561651589038 <line:345:1, line:351:1> line:345:1
| |-EnumConstantDecl 0x561651589150 <line:347:3> col:3 referenced PTHREAD_RWLOCK_PREFER_READER_NP 'int'
| |-EnumConstantDecl 0x5616515891a0 <line:348:3> col:3 PTHREAD_RWLOCK_PREFER_WRITER_NP 'int'
| |-EnumConstantDecl 0x5616515891f0 <line:349:3> col:3 PTHREAD_RWLOCK_PREFER_WRITER_NONRECURSIVE_NP 'int'
| `-EnumConstantDecl 0x561651589278 <line:350:3, col:31> col:3 PTHREAD_RWLOCK_DEFAULT_NP 'int'
|   `-ConstantExpr 0x561651589260 <col:31> 'int'
|     `-DeclRefExpr 0x561651589240 <col:31> 'int' EnumConstant 0x561651589150 'PTHREAD_RWLOCK_PREFER_READER_NP' 'int'
|-EnumDecl 0x5616515892c8 <line:352:1, line:356:1> line:352:1
| |-EnumConstantDecl 0x561651589398 <line:354:3> col:3 PTHREAD_INHERIT_SCHED 'int'
| `-EnumConstantDecl 0x5616515893e8 <line:355:3> col:3 PTHREAD_EXPLICIT_SCHED 'int'
|-EnumDecl 0x561651589438 <line:357:1, line:361:1> line:357:1
| |-EnumConstantDecl 0x561651589508 <line:359:3> col:3 PTHREAD_SCOPE_SYSTEM 'int'
| `-EnumConstantDecl 0x561651589558 <line:360:3> col:3 PTHREAD_SCOPE_PROCESS 'int'
|-EnumDecl 0x5616515895a8 <line:362:1, line:366:1> line:362:1
| |-EnumConstantDecl 0x561651589678 <line:364:3> col:3 PTHREAD_PROCESS_PRIVATE 'int'
| `-EnumConstantDecl 0x5616515896c8 <line:365:3> col:3 PTHREAD_PROCESS_SHARED 'int'
|-RecordDecl 0x561651589718 <line:367:1, line:373:1> line:367:8 struct _pthread_cleanup_buffer definition
| |-FieldDecl 0x561651589958 <line:369:3, col:28> col:10 __routine 'void (*)(void *)'
| |-FieldDecl 0x5616515899c0 <line:370:3, col:9> col:9 __arg 'void *'
| |-FieldDecl 0x561651589a28 <line:371:3, col:7> col:7 __canceltype 'int'
| `-FieldDecl 0x561651589b48 <line:372:3, col:35> col:35 __prev 'struct _pthread_cleanup_buffer *'
|-EnumDecl 0x561651589b98 <line:374:1, line:378:1> line:374:1
| |-EnumConstantDecl 0x561651589c68 <line:376:3> col:3 PTHREAD_CANCEL_ENABLE 'int'
| `-EnumConstantDecl 0x561651589cb8 <line:377:3> col:3 PTHREAD_CANCEL_DISABLE 'int'
|-EnumDecl 0x561651589d08 <line:379:1, line:383:1> line:379:1
| |-EnumConstantDecl 0x561651589dd8 <line:381:3> col:3 PTHREAD_CANCEL_DEFERRED 'int'
| `-EnumConstantDecl 0x561651589e28 <line:382:3> col:3 PTHREAD_CANCEL_ASYNCHRONOUS 'int'
|-FunctionDecl 0x56165158a488 <line:385:1, line:388:96> line:385:12 used pthread_create 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' extern
| |-ParmVarDecl 0x561651589f20 <col:28, col:50> col:50 __newthread 'pthread_t *restrict'
| |-ParmVarDecl 0x56165158a030 <line:386:7, col:40> col:40 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x56165158a270 <line:387:7, col:39> col:15 __start_routine 'void *(*)(void *)'
| |-ParmVarDecl 0x56165158a2f0 <line:388:7, col:24> col:24 __arg 'void *restrict'
| |-NoThrowAttr 0x56165158a548 <col:47>
| |-NonNullAttr 0x56165158a5a0 <col:77, col:94> 1 3
| `-CallbackAttr 0x56165158a5d8 <line:385:12> Implicit 2 3
|-FunctionDecl 0x56165158a700 <line:389:1, col:72> col:13 pthread_exit 'void (void *) __attribute__((noreturn))' extern
| `-ParmVarDecl 0x56165158a630 <col:27, col:33> col:33 __retval 'void *'
|-FunctionDecl 0x56165158a958 <line:390:1, col:64> col:12 pthread_join 'int (pthread_t, void **)' extern
| |-ParmVarDecl 0x56165158a7b8 <col:26, col:36> col:36 __th 'pthread_t':'unsigned long'
| `-ParmVarDecl 0x56165158a838 <col:42, col:49> col:49 __thread_return 'void **'
|-FunctionDecl 0x56165158ab28 <line:391:1, col:83> col:12 pthread_detach 'int (pthread_t)' extern
| |-ParmVarDecl 0x56165158aa18 <col:28, col:38> col:38 __th 'pthread_t':'unsigned long'
| `-NoThrowAttr 0x56165158abd0 <col:60>
|-FunctionDecl 0x56165158ad20 <line:392:1, col:105> col:18 pthread_self 'pthread_t (void)' extern
| |-NoThrowAttr 0x56165158adc0 <col:54>
| `-ConstAttr 0x56165158ae18 <col:95>
|-FunctionDecl 0x56165158afe8 <line:393:1, line:394:70> line:393:12 pthread_equal 'int (pthread_t, pthread_t)' extern
| |-ParmVarDecl 0x56165158ae50 <col:27, col:37> col:37 __thread1 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x56165158aec8 <col:48, col:58> col:58 __thread2 'pthread_t':'unsigned long'
| |-NoThrowAttr 0x56165158b098 <line:394:19>
| `-ConstAttr 0x56165158b0f0 <col:60>
|-FunctionDecl 0x56165158cb08 <line:395:1, col:128> col:12 pthread_attr_init 'int (pthread_attr_t *)' extern
| |-ParmVarDecl 0x56165158c9d0 <col:31, col:47> col:47 __attr 'pthread_attr_t *'
| |-NoThrowAttr 0x56165158cbb0 <col:71>
| `-NonNullAttr 0x56165158cc08 <col:112, col:126> 1
|-FunctionDecl 0x56165158cd10 <line:396:1, line:397:79> line:396:12 pthread_attr_destroy 'int (pthread_attr_t *)' extern
| |-ParmVarDecl 0x56165158cc58 <col:34, col:50> col:50 __attr 'pthread_attr_t *'
| |-NoThrowAttr 0x56165158cdb8 <line:397:22>
| `-NonNullAttr 0x56165158ce10 <col:63, col:77> 1
|-FunctionDecl 0x56165158d038 <line:398:1, line:400:82> line:398:12 pthread_attr_getdetachstate 'int (const pthread_attr_t *, int *)' extern
| |-ParmVarDecl 0x56165158ce58 <col:41, col:63> col:63 __attr 'const pthread_attr_t *'
| |-ParmVarDecl 0x56165158ced8 <line:399:6, col:11> col:11 __detachstate 'int *'
| |-NoThrowAttr 0x56165158d0e8 <line:400:22>
| `-NonNullAttr 0x56165158d140 <col:63, col:80> 1 2
|-FunctionDecl 0x56165158d348 <line:401:1, line:403:79> line:401:12 pthread_attr_setdetachstate 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x56165158d188 <col:41, col:57> col:57 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x56165158d208 <line:402:6, col:10> col:10 __detachstate 'int'
| |-NoThrowAttr 0x56165158d3f8 <line:403:22>
| `-NonNullAttr 0x56165158d450 <col:63, col:77> 1
|-FunctionDecl 0x56165158d6a8 <line:404:1, line:406:82> line:404:12 pthread_attr_getguardsize 'int (const pthread_attr_t *, size_t *)' extern
| |-ParmVarDecl 0x56165158d498 <col:39, col:61> col:61 __attr 'const pthread_attr_t *'
| |-ParmVarDecl 0x56165158d540 <line:405:11, col:19> col:19 __guardsize 'size_t *'
| |-NoThrowAttr 0x56165158d758 <line:406:22>
| `-NonNullAttr 0x56165158d7b0 <col:63, col:80> 1 2
|-FunctionDecl 0x56165158e9e8 <line:407:1, line:409:79> line:407:12 pthread_attr_setguardsize 'int (pthread_attr_t *, size_t)' extern
| |-ParmVarDecl 0x56165158d7f8 <col:39, col:55> col:55 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x56165158d870 <line:408:11, col:18> col:18 __guardsize 'size_t':'unsigned long'
| |-NoThrowAttr 0x56165158ea98 <line:409:22>
| `-NonNullAttr 0x56165158eaf0 <col:63, col:77> 1
|-FunctionDecl 0x56165158ed28 <line:410:1, line:412:82> line:410:12 pthread_attr_getschedparam 'int (const pthread_attr_t *restrict, struct sched_param *restrict)' extern
| |-ParmVarDecl 0x56165158eb38 <col:40, col:73> col:73 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x56165158ebc8 <line:411:12, col:43> col:43 __param 'struct sched_param *restrict'
| |-NoThrowAttr 0x56165158edd8 <line:412:22>
| `-NonNullAttr 0x56165158ee30 <col:63, col:80> 1 2
|-FunctionDecl 0x56165158f068 <line:413:1, line:415:97> line:413:12 pthread_attr_setschedparam 'int (pthread_attr_t *restrict, const struct sched_param *restrict)' extern
| |-ParmVarDecl 0x56165158ee78 <col:40, col:67> col:67 __attr 'pthread_attr_t *restrict'
| |-ParmVarDecl 0x56165158ef08 <line:414:12, line:415:12> col:12 __param 'const struct sched_param *restrict'
| |-NoThrowAttr 0x56165158f118 <col:37>
| `-NonNullAttr 0x56165158f170 <col:78, col:95> 1 2
|-FunctionDecl 0x56165158f358 <line:416:1, line:418:82> line:416:12 pthread_attr_getschedpolicy 'int (const pthread_attr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x56165158f1b8 <col:41, line:417:6> col:6 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x56165158f238 <col:14, col:30> col:30 __policy 'int *restrict'
| |-NoThrowAttr 0x56165158f408 <line:418:22>
| `-NonNullAttr 0x56165158f460 <col:63, col:80> 1 2
|-FunctionDecl 0x56165158f5e8 <line:419:1, line:420:79> line:419:12 pthread_attr_setschedpolicy 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x56165158f4a8 <col:41, col:57> col:57 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x56165158f528 <col:65, col:69> col:69 __policy 'int'
| |-NoThrowAttr 0x56165158f698 <line:420:22>
| `-NonNullAttr 0x56165158f6f0 <col:63, col:77> 1
|-FunctionDecl 0x56165158f898 <line:421:1, line:423:82> line:421:12 pthread_attr_getinheritsched 'int (const pthread_attr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x56165158f738 <col:42, line:422:7> col:7 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x56165158f7b8 <col:15, col:31> col:31 __inherit 'int *restrict'
| |-NoThrowAttr 0x56165158f948 <line:423:22>
| `-NonNullAttr 0x56165158f9c0 <col:63, col:80> 1 2
|-FunctionDecl 0x56165158fb48 <line:424:1, line:426:79> line:424:12 pthread_attr_setinheritsched 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x56165158fa08 <col:42, col:58> col:58 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x56165158fa88 <line:425:7, col:11> col:11 __inherit 'int'
| |-NoThrowAttr 0x56165158fbf8 <line:426:22>
| `-NonNullAttr 0x56165158fc50 <col:63, col:77> 1
|-FunctionDecl 0x56165158fdf8 <line:427:1, line:429:82> line:427:12 pthread_attr_getscope 'int (const pthread_attr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x56165158fc98 <col:35, col:68> col:68 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x56165158fd18 <line:428:7, col:23> col:23 __scope 'int *restrict'
| |-NoThrowAttr 0x56165158fea8 <line:429:22>
| `-NonNullAttr 0x56165158ff00 <col:63, col:80> 1 2
|-FunctionDecl 0x561651590088 <line:430:1, line:431:79> line:430:12 pthread_attr_setscope 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x56165158ff48 <col:35, col:51> col:51 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x56165158ffc8 <col:59, col:63> col:63 __scope 'int'
| |-NoThrowAttr 0x561651590138 <line:431:22>
| `-NonNullAttr 0x561651590190 <col:63, col:77> 1
|-FunctionDecl 0x5616515903b8 <line:432:1, line:434:115> line:432:12 pthread_attr_getstackaddr 'int (const pthread_attr_t *restrict, void **restrict)' extern
| |-ParmVarDecl 0x5616515901d8 <col:39, line:433:11> col:11 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x561651590258 <col:19, col:37> col:37 __stackaddr 'void **restrict'
| |-NoThrowAttr 0x561651590468 <line:434:22>
| |-NonNullAttr 0x5616515904c0 <col:63, col:80> 1 2
| `-DeprecatedAttr 0x5616515904f8 <col:100> "" ""
|-FunctionDecl 0x561651590708 <line:435:1, line:437:112> line:435:12 pthread_attr_setstackaddr 'int (pthread_attr_t *, void *)' extern
| |-ParmVarDecl 0x561651590548 <col:39, col:55> col:55 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x5616515905c8 <line:436:11, col:17> col:17 __stackaddr 'void *'
| |-NoThrowAttr 0x5616515907b8 <line:437:22>
| |-NonNullAttr 0x561651590810 <col:63, col:77> 1
| `-DeprecatedAttr 0x561651590848 <col:97> "" ""
|-FunctionDecl 0x561651590a48 <line:438:1, line:440:82> line:438:12 pthread_attr_getstacksize 'int (const pthread_attr_t *restrict, size_t *restrict)' extern
| |-ParmVarDecl 0x561651590898 <col:39, line:439:11> col:11 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x561651590910 <col:19, col:38> col:38 __stacksize 'size_t *restrict'
| |-NoThrowAttr 0x561651590af8 <line:440:22>
| `-NonNullAttr 0x561651590b50 <col:63, col:80> 1 2
|-FunctionDecl 0x561651590cd0 <line:441:1, line:443:79> line:441:12 pthread_attr_setstacksize 'int (pthread_attr_t *, size_t)' extern
| |-ParmVarDecl 0x561651590b98 <col:39, col:55> col:55 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x561651590c10 <line:442:11, col:18> col:18 __stacksize 'size_t':'unsigned long'
| |-NoThrowAttr 0x561651590d80 <line:443:22>
| `-NonNullAttr 0x561651590dd8 <col:63, col:77> 1
|-FunctionDecl 0x5616515910c8 <line:444:1, line:447:85> line:444:12 pthread_attr_getstack 'int (const pthread_attr_t *restrict, void **restrict, size_t *restrict)' extern
| |-ParmVarDecl 0x561651590e28 <col:35, col:68> col:68 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x561651590ea8 <line:445:7, col:25> col:25 __stackaddr 'void **restrict'
| |-ParmVarDecl 0x561651590f20 <line:446:7, col:26> col:26 __stacksize 'size_t *restrict'
| |-NoThrowAttr 0x561651591180 <line:447:22>
| `-NonNullAttr 0x5616515911d8 <col:63, col:83> 1 2 3
|-FunctionDecl 0x561651591488 <line:448:1, line:449:100> line:448:12 pthread_attr_setstack 'int (pthread_attr_t *, void *, size_t)' extern
| |-ParmVarDecl 0x561651591230 <col:35, col:51> col:51 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x5616515912b0 <col:59, col:65> col:65 __stackaddr 'void *'
| |-ParmVarDecl 0x561651591328 <line:449:7, col:14> col:14 __stacksize 'size_t':'unsigned long'
| |-NoThrowAttr 0x561651591540 <col:43>
| `-NonNullAttr 0x561651591598 <col:84, col:98> 1
|-FunctionDecl 0x561651591858 <line:450:1, line:452:79> line:450:12 pthread_setschedparam 'int (pthread_t, int, const struct sched_param *)' extern
| |-ParmVarDecl 0x5616515915e8 <col:35, col:45> col:45 __target_thread 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x561651591668 <col:62, col:66> col:66 __policy 'int'
| |-ParmVarDecl 0x5616515916f8 <line:451:7, col:33> col:33 __param 'const struct sched_param *'
| |-NoThrowAttr 0x561651591910 <line:452:22>
| `-NonNullAttr 0x561651591968 <col:63, col:77> 3
|-FunctionDecl 0x561651591c78 <line:453:1, line:456:82> line:453:12 pthread_getschedparam 'int (pthread_t, int *restrict, struct sched_param *restrict)' extern
| |-ParmVarDecl 0x5616515919e0 <col:35, col:45> col:45 __target_thread 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x561651591a60 <line:454:7, col:23> col:23 __policy 'int *restrict'
| |-ParmVarDecl 0x561651591af0 <line:455:7, col:38> col:38 __param 'struct sched_param *restrict'
| |-NoThrowAttr 0x561651591d30 <line:456:22>
| `-NonNullAttr 0x561651591d88 <col:63, col:80> 2 3
|-FunctionDecl 0x561651591f78 <line:457:1, line:458:45> line:457:12 pthread_setschedprio 'int (pthread_t, int)' extern
| |-ParmVarDecl 0x561651591dd8 <col:34, col:44> col:44 __target_thread 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x561651591e58 <col:61, col:65> col:65 __prio 'int'
| `-NoThrowAttr 0x561651592028 <line:458:22>
|-FunctionDecl 0x5616515923f8 <line:459:1, line:460:71> line:459:12 pthread_once 'int (pthread_once_t *, void (*)(void))' extern
| |-ParmVarDecl 0x5616515920f0 <col:26, col:42> col:42 __once_control 'pthread_once_t *'
| |-ParmVarDecl 0x561651592290 <line:460:5, col:33> col:12 __init_routine 'void (*)(void)'
| `-NonNullAttr 0x5616515924a8 <col:52, col:69> 1 2
|-FunctionDecl 0x561651592650 <line:461:1, col:64> col:12 pthread_setcancelstate 'int (int, int *)' extern
| |-ParmVarDecl 0x561651592530 <col:36, col:40> col:40 __state 'int'
| `-ParmVarDecl 0x5616515925b0 <col:49, col:54> col:54 __oldstate 'int *'
|-FunctionDecl 0x561651592838 <line:462:1, col:61> col:12 pthread_setcanceltype 'int (int, int *)' extern
| |-ParmVarDecl 0x561651592718 <col:35, col:39> col:39 __type 'int'
| `-ParmVarDecl 0x561651592798 <col:47, col:52> col:52 __oldtype 'int *'
|-FunctionDecl 0x5616515929f0 <line:463:1, col:42> col:12 pthread_cancel 'int (pthread_t)' extern
| `-ParmVarDecl 0x5616515928f8 <col:28, col:38> col:38 __th 'pthread_t':'unsigned long'
|-FunctionDecl 0x561651592b30 <line:464:1, col:37> col:13 pthread_testcancel 'void (void)' extern
|-RecordDecl 0x561651592bd0 <line:465:9, line:473:1> line:465:9 struct definition
| |-RecordDecl 0x561651592c78 <line:467:3, line:471:3> line:467:3 struct definition
| | |-FieldDecl 0x561651592d68 <line:469:5, col:15> col:15 __cancel_jmp_buf '__jmp_buf':'long [8]'
| | `-FieldDecl 0x561651592dd0 <line:470:5, col:9> col:9 __mask_was_saved 'int'
| |-FieldDecl 0x561651592fa0 <line:467:3, line:471:23> col:5 __cancel_jmp_buf 'struct (anonymous struct at ./split_0/thin001_power.opt_false-unreach-call.i:467:3) [1]'
| `-FieldDecl 0x561651593098 <line:472:3, col:16> col:9 __pad 'void *[4]'
|-TypedefDecl 0x561651593150 <line:465:1, line:473:3> col:3 referenced __pthread_unwind_buf_t 'struct __pthread_unwind_buf_t':'__pthread_unwind_buf_t'
| |-ElaboratedType 0x5616515930f0 'struct __pthread_unwind_buf_t' sugar
| | `-RecordType 0x561651592c50 '__pthread_unwind_buf_t'
| |   `-Record 0x561651592bd0 ''
| `-AlignedAttr 0x5616515931a8 <col:42> aligned
|   `-<<<NULL>>>
|-RecordDecl 0x561651593220 <line:474:1, line:480:1> line:474:8 struct __pthread_cleanup_frame definition
| |-FieldDecl 0x561651593380 <line:476:3, col:35> col:10 __cancel_routine 'void (*)(void *)'
| |-FieldDecl 0x5616515933e8 <line:477:3, col:9> col:9 __cancel_arg 'void *'
| |-FieldDecl 0x561651593450 <line:478:3, col:7> col:7 __do_it 'int'
| `-FieldDecl 0x5616515934b8 <line:479:3, col:7> col:7 __cancel_type 'int'
|-FunctionDecl 0x5616515936c0 <line:481:1, col:69> col:13 __pthread_register_cancel 'void (__pthread_unwind_buf_t *)' extern
| `-ParmVarDecl 0x5616515935b0 <col:40, col:64> col:64 __buf '__pthread_unwind_buf_t *'
|-FunctionDecl 0x561651593808 <line:483:1, col:71> col:13 __pthread_unregister_cancel 'void (__pthread_unwind_buf_t *)' extern
| `-ParmVarDecl 0x561651593778 <col:42, col:66> col:66 __buf '__pthread_unwind_buf_t *'
|-FunctionDecl 0x561651593a00 <line:485:1, line:487:31> line:485:13 __pthread_unwind_next 'void (__pthread_unwind_buf_t *) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x5616515938c0 <col:36, col:60> col:60 __buf '__pthread_unwind_buf_t *'
| `-WeakAttr 0x561651593aa8 <line:487:22>
|-RecordDecl 0x561651593b00 <line:489:1, col:8> col:8 struct __jmp_buf_tag
|-FunctionDecl 0x561651593e18 <line:490:1, col:98> col:12 __sigsetjmp 'int (struct __jmp_buf_tag *, int)' extern
| |-ParmVarDecl 0x561651593c78 <col:25, col:47> col:47 __env 'struct __jmp_buf_tag *'
| |-ParmVarDecl 0x561651593cf8 <col:54, col:58> col:58 __savemask 'int'
| |-NoThrowAttr 0x561651593ec8 <col:86>
| `-ReturnsTwiceAttr 0x561651593f20 <col:12> Implicit
|-FunctionDecl 0x561651594248 <line:491:1, line:493:79> line:491:12 pthread_mutex_init 'int (pthread_mutex_t *, const pthread_mutexattr_t *)' extern
| |-ParmVarDecl 0x561651593ff0 <col:32, col:49> col:49 __mutex 'pthread_mutex_t *'
| |-ParmVarDecl 0x561651594100 <line:492:11, col:38> col:38 __mutexattr 'const pthread_mutexattr_t *'
| |-NoThrowAttr 0x5616515942f8 <line:493:22>
| `-NonNullAttr 0x561651594350 <col:63, col:77> 1
|-FunctionDecl 0x5616515944c8 <line:494:1, line:495:79> line:494:12 pthread_mutex_destroy 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x561651594398 <col:35, col:52> col:52 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x561651594570 <line:495:22>
| `-NonNullAttr 0x5616515945c8 <col:63, col:77> 1
|-FunctionDecl 0x5616515946d0 <line:496:1, line:497:68> line:496:12 pthread_mutex_trylock 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x561651594618 <col:35, col:52> col:52 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x561651594778 <line:497:22>
| `-NonNullAttr 0x5616515947d0 <col:52, col:66> 1
|-FunctionDecl 0x5616515948d0 <line:498:1, line:499:68> line:498:12 pthread_mutex_lock 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x561651594818 <col:32, col:49> col:49 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x561651594978 <line:499:22>
| `-NonNullAttr 0x5616515949d0 <col:52, col:66> 1
|-FunctionDecl 0x561651595c28 <line:500:1, line:502:85> line:500:12 pthread_mutex_timedlock 'int (pthread_mutex_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x561651595a38 <col:37, col:65> col:65 __mutex 'pthread_mutex_t *restrict'
| |-ParmVarDecl 0x561651595ac8 <line:501:9, line:502:9> col:9 __abstime 'const struct timespec *restrict'
| |-NoThrowAttr 0x561651595cd8 <col:36>
| `-NonNullAttr 0x561651595d30 <col:66, col:83> 1 2
|-FunctionDecl 0x561651595e30 <line:503:1, line:504:68> line:503:12 pthread_mutex_unlock 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x561651595d78 <col:34, col:51> col:51 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x561651595ed8 <line:504:22>
| `-NonNullAttr 0x561651595f30 <col:52, col:66> 1
|-FunctionDecl 0x5616515961c8 <line:505:1, line:508:82> line:505:12 pthread_mutex_getprioceiling 'int (const pthread_mutex_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x561651595fe0 <col:42, line:506:18> col:18 __mutex 'const pthread_mutex_t *restrict'
| |-ParmVarDecl 0x561651596060 <line:507:7, col:23> col:23 __prioceiling 'int *restrict'
| |-NoThrowAttr 0x561651596278 <line:508:22>
| `-NonNullAttr 0x5616515962d0 <col:63, col:80> 1 2
|-FunctionDecl 0x561651596598 <line:509:1, line:512:82> line:509:12 pthread_mutex_setprioceiling 'int (pthread_mutex_t *restrict, int, int *restrict)' extern
| |-ParmVarDecl 0x561651596318 <col:42, col:70> col:70 __mutex 'pthread_mutex_t *restrict'
| |-ParmVarDecl 0x561651596398 <line:510:7, col:11> col:11 __prioceiling 'int'
| |-ParmVarDecl 0x561651596418 <line:511:7, col:23> col:23 __old_ceiling 'int *restrict'
| |-NoThrowAttr 0x561651596650 <line:512:22>
| `-NonNullAttr 0x5616515966a8 <col:63, col:80> 1 3
|-FunctionDecl 0x5616515967b0 <line:513:1, line:514:79> line:513:12 pthread_mutex_consistent 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x5616515966f8 <col:38, col:55> col:55 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x561651596858 <line:514:22>
| `-NonNullAttr 0x5616515968b0 <col:63, col:77> 1
|-FunctionDecl 0x561651596ad8 <line:515:1, line:516:79> line:515:12 pthread_mutexattr_init 'int (pthread_mutexattr_t *)' extern
| |-ParmVarDecl 0x561651596960 <col:36, col:57> col:57 __attr 'pthread_mutexattr_t *'
| |-NoThrowAttr 0x561651596b80 <line:516:22>
| `-NonNullAttr 0x561651596bd8 <col:63, col:77> 1
|-FunctionDecl 0x561651596ce0 <line:517:1, line:518:79> line:517:12 pthread_mutexattr_destroy 'int (pthread_mutexattr_t *)' extern
| |-ParmVarDecl 0x561651596c28 <col:39, col:60> col:60 __attr 'pthread_mutexattr_t *'
| |-NoThrowAttr 0x561651596d88 <line:518:22>
| `-NonNullAttr 0x561651596de0 <col:63, col:77> 1
|-FunctionDecl 0x561651597008 <line:519:1, line:522:82> line:519:12 pthread_mutexattr_getpshared 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x561651596e28 <col:42, line:520:18> col:18 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x561651596ea8 <line:521:7, col:23> col:23 __pshared 'int *restrict'
| |-NoThrowAttr 0x5616515970b8 <line:522:22>
| `-NonNullAttr 0x561651597110 <col:63, col:80> 1 2
|-FunctionDecl 0x561651597318 <line:523:1, line:525:79> line:523:12 pthread_mutexattr_setpshared 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x561651597158 <col:42, col:63> col:63 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x5616515971d8 <line:524:7, col:11> col:11 __pshared 'int'
| |-NoThrowAttr 0x5616515973c8 <line:525:22>
| `-NonNullAttr 0x561651597420 <col:63, col:77> 1
|-FunctionDecl 0x5616515975c8 <line:526:1, line:528:82> line:526:12 pthread_mutexattr_gettype 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x561651597468 <col:39, line:527:11> col:11 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x5616515974e8 <col:19, col:35> col:35 __kind 'int *restrict'
| |-NoThrowAttr 0x561651597678 <line:528:22>
| `-NonNullAttr 0x5616515976d0 <col:63, col:80> 1 2
|-FunctionDecl 0x561651597858 <line:529:1, line:530:79> line:529:12 pthread_mutexattr_settype 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x561651597718 <col:39, col:60> col:60 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x561651597798 <col:68, col:72> col:72 __kind 'int'
| |-NoThrowAttr 0x561651597908 <line:530:22>
| `-NonNullAttr 0x561651597960 <col:63, col:77> 1
|-FunctionDecl 0x561651597b20 <line:531:1, line:534:82> line:531:12 pthread_mutexattr_getprotocol 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x5616515979a8 <col:43, line:532:19> col:19 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x561651597a40 <line:533:8, col:24> col:24 __protocol 'int *restrict'
| |-NoThrowAttr 0x561651597bd0 <line:534:22>
| `-NonNullAttr 0x561651597c28 <col:63, col:80> 1 2
|-FunctionDecl 0x561651597db8 <line:535:1, line:537:79> line:535:12 pthread_mutexattr_setprotocol 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x561651597c78 <col:43, col:64> col:64 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x561651597cf8 <line:536:8, col:12> col:12 __protocol 'int'
| |-NoThrowAttr 0x561651597e68 <line:537:22>
| `-NonNullAttr 0x561651597ec0 <col:63, col:77> 1
|-FunctionDecl 0x561651598068 <line:538:1, line:541:82> line:538:12 pthread_mutexattr_getprioceiling 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x561651597f08 <col:46, line:539:22> col:22 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x561651597f88 <line:540:11, col:27> col:27 __prioceiling 'int *restrict'
| |-NoThrowAttr 0x561651598118 <line:541:22>
| `-NonNullAttr 0x561651598170 <col:63, col:80> 1 2
|-FunctionDecl 0x5616515982f8 <line:542:1, line:544:79> line:542:12 pthread_mutexattr_setprioceiling 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x5616515981b8 <col:46, col:67> col:67 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x561651598238 <line:543:11, col:15> col:15 __prioceiling 'int'
| |-NoThrowAttr 0x5616515983a8 <line:544:22>
| `-NonNullAttr 0x561651598400 <col:63, col:77> 1
|-FunctionDecl 0x5616515985e8 <line:545:1, line:547:82> line:545:12 pthread_mutexattr_getrobust 'int (const pthread_mutexattr_t *, int *)' extern
| |-ParmVarDecl 0x561651598448 <col:41, col:68> col:68 __attr 'const pthread_mutexattr_t *'
| |-ParmVarDecl 0x5616515984c8 <line:546:6, col:11> col:11 __robustness 'int *'
| |-NoThrowAttr 0x561651598698 <line:547:22>
| `-NonNullAttr 0x5616515986f0 <col:63, col:80> 1 2
|-FunctionDecl 0x561651598878 <line:548:1, line:550:79> line:548:12 pthread_mutexattr_setrobust 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x561651598738 <col:41, col:62> col:62 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x5616515987b8 <line:549:6, col:10> col:10 __robustness 'int'
| |-NoThrowAttr 0x561651598928 <line:550:22>
| `-NonNullAttr 0x561651598980 <col:63, col:77> 1
|-FunctionDecl 0x561651599cf8 <line:551:1, line:553:86> line:551:12 pthread_rwlock_init 'int (pthread_rwlock_t *restrict, const pthread_rwlockattr_t *restrict)' extern
| |-ParmVarDecl 0x561651599aa0 <col:33, col:62> col:62 __rwlock 'pthread_rwlock_t *restrict'
| |-ParmVarDecl 0x561651599bb0 <line:552:5, line:553:5> col:5 __attr 'const pthread_rwlockattr_t *restrict'
| |-NoThrowAttr 0x561651599da8 <col:29>
| `-NonNullAttr 0x561651599e00 <col:70, col:84> 1
|-FunctionDecl 0x561651599f78 <line:554:1, line:555:79> line:554:12 pthread_rwlock_destroy 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x561651599e48 <col:36, col:54> col:54 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x56165159a020 <line:555:22>
| `-NonNullAttr 0x56165159a078 <col:63, col:77> 1
|-FunctionDecl 0x56165159a180 <line:556:1, line:557:68> line:556:12 pthread_rwlock_rdlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x56165159a0c8 <col:35, col:53> col:53 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x56165159a228 <line:557:22>
| `-NonNullAttr 0x56165159a280 <col:52, col:66> 1
|-FunctionDecl 0x56165159a380 <line:558:1, line:559:65> line:558:12 pthread_rwlock_tryrdlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x56165159a2c8 <col:38, col:56> col:56 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x56165159a428 <line:559:19>
| `-NonNullAttr 0x56165159a480 <col:49, col:63> 1
|-FunctionDecl 0x56165159a6b8 <line:560:1, line:562:88> line:560:12 pthread_rwlock_timedrdlock 'int (pthread_rwlock_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x56165159a4c8 <col:40, col:69> col:69 __rwlock 'pthread_rwlock_t *restrict'
| |-ParmVarDecl 0x56165159a558 <line:561:12, line:562:12> col:12 __abstime 'const struct timespec *restrict'
| |-NoThrowAttr 0x56165159a768 <col:39>
| `-NonNullAttr 0x56165159a7c0 <col:69, col:86> 1 2
|-FunctionDecl 0x56165159a8c0 <line:563:1, line:564:68> line:563:12 pthread_rwlock_wrlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x56165159a808 <col:35, col:53> col:53 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x56165159a968 <line:564:22>
| `-NonNullAttr 0x56165159a9c0 <col:52, col:66> 1
|-FunctionDecl 0x56165159ab28 <line:565:1, line:566:68> line:565:12 pthread_rwlock_trywrlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x56165159aa70 <col:38, col:56> col:56 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x56165159abd0 <line:566:22>
| `-NonNullAttr 0x56165159ac28 <col:52, col:66> 1
|-FunctionDecl 0x56165159ade8 <line:567:1, line:569:88> line:567:12 pthread_rwlock_timedwrlock 'int (pthread_rwlock_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x56165159ac78 <col:40, col:69> col:69 __rwlock 'pthread_rwlock_t *restrict'
| |-ParmVarDecl 0x56165159ad08 <line:568:12, line:569:12> col:12 __abstime 'const struct timespec *restrict'
| |-NoThrowAttr 0x56165159ae98 <col:39>
| `-NonNullAttr 0x56165159aef0 <col:69, col:86> 1 2
|-FunctionDecl 0x56165159aff0 <line:570:1, line:571:68> line:570:12 pthread_rwlock_unlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x56165159af38 <col:35, col:53> col:53 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x56165159b098 <line:571:22>
| `-NonNullAttr 0x56165159b0f0 <col:52, col:66> 1
|-FunctionDecl 0x56165159b2d8 <line:572:1, line:573:79> line:572:12 pthread_rwlockattr_init 'int (pthread_rwlockattr_t *)' extern
| |-ParmVarDecl 0x56165159b1a0 <col:37, col:59> col:59 __attr 'pthread_rwlockattr_t *'
| |-NoThrowAttr 0x56165159b380 <line:573:22>
| `-NonNullAttr 0x56165159b3d8 <col:63, col:77> 1
|-FunctionDecl 0x56165159b4e0 <line:574:1, line:575:79> line:574:12 pthread_rwlockattr_destroy 'int (pthread_rwlockattr_t *)' extern
| |-ParmVarDecl 0x56165159b428 <col:40, col:62> col:62 __attr 'pthread_rwlockattr_t *'
| |-NoThrowAttr 0x56165159b588 <line:575:22>
| `-NonNullAttr 0x56165159b5e0 <col:63, col:77> 1
|-FunctionDecl 0x56165159b808 <line:576:1, line:579:82> line:576:12 pthread_rwlockattr_getpshared 'int (const pthread_rwlockattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x56165159b628 <col:43, line:577:19> col:19 __attr 'const pthread_rwlockattr_t *restrict'
| |-ParmVarDecl 0x56165159b6a8 <line:578:8, col:24> col:24 __pshared 'int *restrict'
| |-NoThrowAttr 0x56165159b8b8 <line:579:22>
| `-NonNullAttr 0x56165159b910 <col:63, col:80> 1 2
|-FunctionDecl 0x56165159bb38 <line:580:1, line:582:79> line:580:12 pthread_rwlockattr_setpshared 'int (pthread_rwlockattr_t *, int)' extern
| |-ParmVarDecl 0x56165159b958 <col:43, col:65> col:65 __attr 'pthread_rwlockattr_t *'
| |-ParmVarDecl 0x56165159b9d8 <line:581:8, col:12> col:12 __pshared 'int'
| |-NoThrowAttr 0x56165159bbe8 <line:582:22>
| `-NonNullAttr 0x56165159bc40 <col:63, col:77> 1
|-FunctionDecl 0x56165159bde8 <line:583:1, line:586:82> line:583:12 pthread_rwlockattr_getkind_np 'int (const pthread_rwlockattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x56165159bc88 <col:43, line:584:19> col:19 __attr 'const pthread_rwlockattr_t *restrict'
| |-ParmVarDecl 0x56165159bd08 <line:585:8, col:24> col:24 __pref 'int *restrict'
| |-NoThrowAttr 0x56165159be98 <line:586:22>
| `-NonNullAttr 0x56165159bef0 <col:63, col:80> 1 2
|-FunctionDecl 0x56165159c078 <line:587:1, line:588:93> line:587:12 pthread_rwlockattr_setkind_np 'int (pthread_rwlockattr_t *, int)' extern
| |-ParmVarDecl 0x56165159bf38 <col:43, col:65> col:65 __attr 'pthread_rwlockattr_t *'
| |-ParmVarDecl 0x56165159bfb8 <line:588:8, col:12> col:12 __pref 'int'
| |-NoThrowAttr 0x56165159c128 <col:36>
| `-NonNullAttr 0x56165159c180 <col:77, col:91> 1
|-FunctionDecl 0x56165159c4b8 <line:589:1, line:591:79> line:589:12 pthread_cond_init 'int (pthread_cond_t *restrict, const pthread_condattr_t *restrict)' extern
| |-ParmVarDecl 0x56165159c260 <col:31, col:58> col:58 __cond 'pthread_cond_t *restrict'
| |-ParmVarDecl 0x56165159c370 <line:590:10, col:47> col:47 __cond_attr 'const pthread_condattr_t *restrict'
| |-NoThrowAttr 0x56165159c568 <line:591:22>
| `-NonNullAttr 0x56165159c5c0 <col:63, col:77> 1
|-FunctionDecl 0x56165159c738 <line:592:1, line:593:79> line:592:12 pthread_cond_destroy 'int (pthread_cond_t *)' extern
| |-ParmVarDecl 0x56165159c608 <col:34, col:50> col:50 __cond 'pthread_cond_t *'
| |-NoThrowAttr 0x56165159c7e0 <line:593:22>
| `-NonNullAttr 0x56165159c838 <col:63, col:77> 1
|-FunctionDecl 0x56165159c940 <line:594:1, line:595:68> line:594:12 pthread_cond_signal 'int (pthread_cond_t *)' extern
| |-ParmVarDecl 0x56165159c888 <col:33, col:49> col:49 __cond 'pthread_cond_t *'
| |-NoThrowAttr 0x56165159c9e8 <line:595:22>
| `-NonNullAttr 0x56165159ca40 <col:52, col:66> 1
|-FunctionDecl 0x56165159cb58 <line:596:1, line:597:68> line:596:12 pthread_cond_broadcast 'int (pthread_cond_t *)' extern
| |-ParmVarDecl 0x56165159caa0 <col:36, col:52> col:52 __cond 'pthread_cond_t *'
| |-NoThrowAttr 0x56165159cc00 <line:597:22>
| `-NonNullAttr 0x56165159cc58 <col:52, col:66> 1
|-FunctionDecl 0x56165159ce88 <line:598:1, line:600:41> line:598:12 pthread_cond_wait 'int (pthread_cond_t *restrict, pthread_mutex_t *restrict)' extern
| |-ParmVarDecl 0x56165159cca8 <col:31, col:58> col:58 __cond 'pthread_cond_t *restrict'
| |-ParmVarDecl 0x56165159cd20 <line:599:10, col:38> col:38 __mutex 'pthread_mutex_t *restrict'
| `-NonNullAttr 0x56165159cf38 <line:600:22, col:39> 1 2
|-FunctionDecl 0x56165159d268 <line:601:1, line:604:44> line:601:12 pthread_cond_timedwait 'int (pthread_cond_t *restrict, pthread_mutex_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x56165159cfb8 <col:36, col:63> col:63 __cond 'pthread_cond_t *restrict'
| |-ParmVarDecl 0x56165159d030 <line:602:8, col:36> col:36 __mutex 'pthread_mutex_t *restrict'
| |-ParmVarDecl 0x56165159d0c0 <line:603:8, col:42> col:42 __abstime 'const struct timespec *restrict'
| `-NonNullAttr 0x56165159d320 <line:604:22, col:42> 1 2 3
|-FunctionDecl 0x56165159d538 <line:605:1, line:606:79> line:605:12 pthread_condattr_init 'int (pthread_condattr_t *)' extern
| |-ParmVarDecl 0x56165159d400 <col:35, col:55> col:55 __attr 'pthread_condattr_t *'
| |-NoThrowAttr 0x56165159d5e0 <line:606:22>
| `-NonNullAttr 0x56165159d638 <col:63, col:77> 1
|-FunctionDecl 0x56165159d740 <line:607:1, line:608:79> line:607:12 pthread_condattr_destroy 'int (pthread_condattr_t *)' extern
| |-ParmVarDecl 0x56165159d688 <col:38, col:58> col:58 __attr 'pthread_condattr_t *'
| |-NoThrowAttr 0x56165159d7e8 <line:608:22>
| `-NonNullAttr 0x56165159d840 <col:63, col:77> 1
|-FunctionDecl 0x56165159daa0 <line:609:1, line:612:82> line:609:12 pthread_condattr_getpshared 'int (const pthread_condattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x56165159d888 <col:41, line:610:17> col:17 __attr 'const pthread_condattr_t *restrict'
| |-ParmVarDecl 0x56165159d908 <line:611:6, col:22> col:22 __pshared 'int *restrict'
| |-NoThrowAttr 0x56165159db50 <line:612:22>
| `-NonNullAttr 0x56165159dba8 <col:63, col:80> 1 2
|-FunctionDecl 0x56165159ddb8 <line:613:1, line:614:94> line:613:12 pthread_condattr_setpshared 'int (pthread_condattr_t *, int)' extern
| |-ParmVarDecl 0x56165159dbf8 <col:41, col:61> col:61 __attr 'pthread_condattr_t *'
| |-ParmVarDecl 0x56165159dc78 <line:614:6, col:10> col:10 __pshared 'int'
| |-NoThrowAttr 0x56165159de68 <col:37>
| `-NonNullAttr 0x56165159dec0 <col:78, col:92> 1
|-FunctionDecl 0x56165159e0d8 <line:615:1, line:618:82> line:615:12 pthread_condattr_getclock 'int (const pthread_condattr_t *restrict, __clockid_t *restrict)' extern
| |-ParmVarDecl 0x56165159df08 <col:39, line:616:22> col:22 __attr 'const pthread_condattr_t *restrict'
| |-ParmVarDecl 0x56165159dfb0 <line:617:11, col:35> col:35 __clock_id '__clockid_t *restrict'
| |-NoThrowAttr 0x56165159e188 <line:618:22>
| `-NonNullAttr 0x56165159e1e0 <col:63, col:80> 1 2
|-FunctionDecl 0x56165159e3a8 <line:619:1, line:621:79> line:619:12 pthread_condattr_setclock 'int (pthread_condattr_t *, __clockid_t)' extern
| |-ParmVarDecl 0x56165159e228 <col:39, col:59> col:59 __attr 'pthread_condattr_t *'
| |-ParmVarDecl 0x56165159e2a0 <line:620:11, col:23> col:23 __clock_id '__clockid_t':'int'
| |-NoThrowAttr 0x56165159e458 <line:621:22>
| `-NonNullAttr 0x56165159e4b0 <col:63, col:77> 1
|-FunctionDecl 0x56165159e758 <line:622:1, line:623:79> line:622:12 pthread_spin_init 'int (pthread_spinlock_t *, int)' extern
| |-ParmVarDecl 0x56165159e590 <col:31, col:51> col:51 __lock 'pthread_spinlock_t *'
| |-ParmVarDecl 0x56165159e610 <col:59, col:63> col:63 __pshared 'int'
| |-NoThrowAttr 0x56165159e808 <line:623:22>
| `-NonNullAttr 0x56165159e860 <col:63, col:77> 1
|-FunctionDecl 0x56165159e9d8 <line:624:1, line:625:79> line:624:12 pthread_spin_destroy 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x56165159e8a8 <col:34, col:54> col:54 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x56165159eab0 <line:625:22>
| `-NonNullAttr 0x56165159eb08 <col:63, col:77> 1
|-FunctionDecl 0x56165159ec10 <line:626:1, line:627:68> line:626:12 pthread_spin_lock 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x56165159eb58 <col:31, col:51> col:51 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x56165159ecb8 <line:627:22>
| `-NonNullAttr 0x56165159ed10 <col:52, col:66> 1
|-FunctionDecl 0x56165159ee10 <line:628:1, line:629:68> line:628:12 pthread_spin_trylock 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x56165159ed58 <col:34, col:54> col:54 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x56165159eeb8 <line:629:22>
| `-NonNullAttr 0x56165159ef10 <col:52, col:66> 1
|-FunctionDecl 0x56165159f010 <line:630:1, line:631:68> line:630:12 pthread_spin_unlock 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x56165159ef58 <col:33, col:53> col:53 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x56165159f0b8 <line:631:22>
| `-NonNullAttr 0x56165159f110 <col:52, col:66> 1
|-FunctionDecl 0x56165159f4e8 <line:632:1, line:635:79> line:632:12 pthread_barrier_init 'int (pthread_barrier_t *restrict, const pthread_barrierattr_t *restrict, unsigned int)' extern
| |-ParmVarDecl 0x56165159f1f0 <col:34, col:64> col:64 __barrier 'pthread_barrier_t *restrict'
| |-ParmVarDecl 0x56165159f300 <line:633:6, line:634:6> col:6 __attr 'const pthread_barrierattr_t *restrict'
| |-ParmVarDecl 0x56165159f380 <col:14, col:27> col:27 __count 'unsigned int'
| |-NoThrowAttr 0x56165159f5a0 <line:635:22>
| `-NonNullAttr 0x56165159f5f8 <col:63, col:77> 1
|-FunctionDecl 0x56165159f778 <line:636:1, line:637:79> line:636:12 pthread_barrier_destroy 'int (pthread_barrier_t *)' extern
| |-ParmVarDecl 0x56165159f648 <col:37, col:56> col:56 __barrier 'pthread_barrier_t *'
| |-NoThrowAttr 0x56165159f820 <line:637:22>
| `-NonNullAttr 0x56165159f878 <col:63, col:77> 1
|-FunctionDecl 0x56165159f980 <line:638:1, line:639:68> line:638:12 pthread_barrier_wait 'int (pthread_barrier_t *)' extern
| |-ParmVarDecl 0x56165159f8c8 <col:34, col:53> col:53 __barrier 'pthread_barrier_t *'
| |-NoThrowAttr 0x56165159fa28 <line:639:22>
| `-NonNullAttr 0x56165159fa80 <col:52, col:66> 1
|-FunctionDecl 0x5616515a0c88 <line:640:1, line:641:79> line:640:12 pthread_barrierattr_init 'int (pthread_barrierattr_t *)' extern
| |-ParmVarDecl 0x5616515a0b50 <col:38, col:61> col:61 __attr 'pthread_barrierattr_t *'
| |-NoThrowAttr 0x5616515a0d30 <line:641:22>
| `-NonNullAttr 0x5616515a0d88 <col:63, col:77> 1
|-FunctionDecl 0x5616515a0e90 <line:642:1, line:643:79> line:642:12 pthread_barrierattr_destroy 'int (pthread_barrierattr_t *)' extern
| |-ParmVarDecl 0x5616515a0dd8 <col:41, col:64> col:64 __attr 'pthread_barrierattr_t *'
| |-NoThrowAttr 0x5616515a0f38 <line:643:22>
| `-NonNullAttr 0x5616515a0f90 <col:63, col:77> 1
|-FunctionDecl 0x5616515a11b8 <line:644:1, line:647:82> line:644:12 pthread_barrierattr_getpshared 'int (const pthread_barrierattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x5616515a0fd8 <col:44, line:645:20> col:20 __attr 'const pthread_barrierattr_t *restrict'
| |-ParmVarDecl 0x5616515a1058 <line:646:9, col:25> col:25 __pshared 'int *restrict'
| |-NoThrowAttr 0x5616515a1268 <line:647:22>
| `-NonNullAttr 0x5616515a12c0 <col:63, col:80> 1 2
|-FunctionDecl 0x5616515a14c8 <line:648:1, line:650:79> line:648:12 pthread_barrierattr_setpshared 'int (pthread_barrierattr_t *, int)' extern
| |-ParmVarDecl 0x5616515a1308 <col:44, col:67> col:67 __attr 'pthread_barrierattr_t *'
| |-ParmVarDecl 0x5616515a1388 <line:649:9, col:13> col:13 __pshared 'int'
| |-NoThrowAttr 0x5616515a1578 <line:650:22>
| `-NonNullAttr 0x5616515a15d0 <col:63, col:77> 1
|-FunctionDecl 0x5616515a1918 <line:651:1, line:653:79> line:651:12 pthread_key_create 'int (pthread_key_t *, void (*)(void *))' extern
| |-ParmVarDecl 0x5616515a16b0 <col:32, col:47> col:47 __key 'pthread_key_t *'
| |-ParmVarDecl 0x5616515a17d0 <line:652:11, col:43> col:18 __destr_function 'void (*)(void *)'
| |-NoThrowAttr 0x5616515a19c8 <line:653:22>
| `-NonNullAttr 0x5616515a1a20 <col:63, col:77> 1
|-FunctionDecl 0x5616515a1b88 <line:654:1, col:92> col:12 pthread_key_delete 'int (pthread_key_t)' extern
| |-ParmVarDecl 0x5616515a1a68 <col:32, col:46> col:46 __key 'pthread_key_t':'unsigned int'
| `-NoThrowAttr 0x5616515a1c30 <col:69>
|-FunctionDecl 0x5616515a1da8 <line:655:1, col:95> col:14 pthread_getspecific 'void *(pthread_key_t)' extern
| |-ParmVarDecl 0x5616515a1c98 <col:35, col:49> col:49 __key 'pthread_key_t':'unsigned int'
| `-NoThrowAttr 0x5616515a1e50 <col:72>
|-FunctionDecl 0x5616515a2088 <line:656:1, line:657:67> line:656:12 pthread_setspecific 'int (pthread_key_t, const void *)' extern
| |-ParmVarDecl 0x5616515a1eb8 <col:33, col:47> col:47 __key 'pthread_key_t':'unsigned int'
| |-ParmVarDecl 0x5616515a1f68 <line:657:5, col:17> col:17 __pointer 'const void *'
| `-NoThrowAttr 0x5616515a2138 <col:44>
|-FunctionDecl 0x5616515a2358 <line:658:1, line:660:79> line:658:12 pthread_getcpuclockid 'int (pthread_t, __clockid_t *)' extern
| |-ParmVarDecl 0x5616515a21a0 <col:35, col:45> col:45 __thread_id 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x5616515a2218 <line:659:7, col:20> col:20 __clock_id '__clockid_t *'
| |-NoThrowAttr 0x5616515a2408 <line:660:22>
| `-NonNullAttr 0x5616515a2460 <col:63, col:77> 2
|-FunctionDecl 0x5616515a28a8 <line:661:1, line:663:70> line:661:12 pthread_atfork 'int (void (*)(void), void (*)(void), void (*)(void))' extern
| |-ParmVarDecl 0x5616515a2540 <col:28, col:51> col:35 __prepare 'void (*)(void)'
| |-ParmVarDecl 0x5616515a2650 <line:662:7, col:29> col:14 __parent 'void (*)(void)'
| |-ParmVarDecl 0x5616515a2760 <line:663:7, col:28> col:14 __child 'void (*)(void)'
| `-NoThrowAttr 0x5616515a2960 <col:47>
|-FunctionDecl 0x5616515a2af0 <line:665:1, col:20> col:8 used P0 'void *(void *)'
| `-ParmVarDecl 0x5616515a29d0 <col:11, col:17> col:17 arg 'void *'
|-FunctionDecl 0x5616515a2c48 <line:666:1, col:20> col:8 used P1 'void *(void *)'
| `-ParmVarDecl 0x5616515a2bb0 <col:11, col:17> col:17 arg 'void *'
|-FunctionDecl 0x5616515a2da0 <line:667:1, col:20> col:8 used P2 'void *(void *)'
| `-ParmVarDecl 0x5616515a2d08 <col:11, col:17> col:17 arg 'void *'
|-FunctionDecl 0x5616515a2e68 <line:668:1, col:12> col:6 fence 'void ()'
|-FunctionDecl 0x5616515a2f28 <line:669:1, col:12> col:6 isync 'void ()'
|-FunctionDecl 0x5616515a2fe8 <line:670:1, col:14> col:6 lwfence 'void ()'
|-VarDecl 0x5616515a30a0 <line:671:1, col:5> col:5 used __unbuffered_cnt 'int'
|-VarDecl 0x5616515a3120 prev 0x5616515a30a0 <line:672:1, col:24> col:5 used __unbuffered_cnt 'int' cinit
| `-IntegerLiteral 0x5616515a3188 <col:24> 'int' 0
|-VarDecl 0x5616515a31c0 <line:673:1, col:5> col:5 used __unbuffered_p0_EAX 'int'
|-VarDecl 0x5616515a3240 prev 0x5616515a31c0 <line:674:1, col:27> col:5 used __unbuffered_p0_EAX 'int' cinit
| `-IntegerLiteral 0x5616515a32a8 <col:27> 'int' 0
|-VarDecl 0x5616515a32e0 <line:675:1, col:5> col:5 used __unbuffered_p1_EAX 'int'
|-VarDecl 0x5616515a3360 prev 0x5616515a32e0 <line:676:1, col:27> col:5 used __unbuffered_p1_EAX 'int' cinit
| `-IntegerLiteral 0x5616515a33c8 <col:27> 'int' 0
|-VarDecl 0x5616515a3400 <line:677:1, col:5> col:5 used __unbuffered_p2_EAX 'int'
|-VarDecl 0x5616515a3480 prev 0x5616515a3400 <line:678:1, col:27> col:5 used __unbuffered_p2_EAX 'int' cinit
| `-IntegerLiteral 0x5616515a34e8 <col:27> 'int' 0
|-VarDecl 0x5616515a3518 <line:679:1, col:7> col:7 __unbuffered_p2_EAX$flush_delayed '_Bool'
|-VarDecl 0x5616515a3598 <line:680:1, col:5> col:5 __unbuffered_p2_EAX$mem_tmp 'int'
|-VarDecl 0x5616515a3610 <line:681:1, col:7> col:7 __unbuffered_p2_EAX$r_buff0_thd0 '_Bool'
|-VarDecl 0x5616515a3688 <line:682:1, col:7> col:7 __unbuffered_p2_EAX$r_buff0_thd1 '_Bool'
|-VarDecl 0x5616515a3700 <line:683:1, col:7> col:7 __unbuffered_p2_EAX$r_buff0_thd2 '_Bool'
|-VarDecl 0x5616515a3778 <line:684:1, col:7> col:7 __unbuffered_p2_EAX$r_buff0_thd3 '_Bool'
|-VarDecl 0x5616515a37f0 <line:685:1, col:7> col:7 __unbuffered_p2_EAX$r_buff1_thd0 '_Bool'
|-VarDecl 0x5616515a3868 <line:686:1, col:7> col:7 __unbuffered_p2_EAX$r_buff1_thd1 '_Bool'
|-VarDecl 0x5616515a38e0 <line:687:1, col:7> col:7 __unbuffered_p2_EAX$r_buff1_thd2 '_Bool'
|-VarDecl 0x5616515a3958 <line:688:1, col:7> col:7 __unbuffered_p2_EAX$r_buff1_thd3 '_Bool'
|-VarDecl 0x5616515a39d0 <line:689:1, col:7> col:7 used __unbuffered_p2_EAX$read_delayed '_Bool'
|-VarDecl 0x5616515a3a50 <line:690:1, col:6> col:6 used __unbuffered_p2_EAX$read_delayed_var 'int *'
|-VarDecl 0x5616515a3b00 <line:691:1, col:5> col:5 __unbuffered_p2_EAX$w_buff0 'int'
|-VarDecl 0x5616515a3b78 <line:692:1, col:7> col:7 __unbuffered_p2_EAX$w_buff0_used '_Bool'
|-VarDecl 0x5616515a3bf8 <line:693:1, col:5> col:5 __unbuffered_p2_EAX$w_buff1 'int'
|-VarDecl 0x5616515a3c70 <line:694:1, col:7> col:7 __unbuffered_p2_EAX$w_buff1_used '_Bool'
|-VarDecl 0x5616515a3ce8 <line:695:1, col:7> col:7 used main$tmp_guard0 '_Bool'
|-VarDecl 0x5616515a3d60 <line:696:1, col:7> col:7 used main$tmp_guard1 '_Bool'
|-VarDecl 0x5616515a3de0 <line:697:1, col:5> col:5 used x 'int'
|-VarDecl 0x5616515a3e60 prev 0x5616515a3de0 <line:698:1, col:9> col:5 used x 'int' cinit
| `-IntegerLiteral 0x5616515a3ec8 <col:9> 'int' 0
|-VarDecl 0x5616515a3f00 <line:699:1, col:5> col:5 used y 'int'
|-VarDecl 0x5616515a3f80 prev 0x5616515a3f00 <line:700:1, col:9> col:5 used y 'int' cinit
| `-IntegerLiteral 0x5616515a3fe8 <col:9> 'int' 0
|-VarDecl 0x5616515a4018 <line:701:1, col:7> col:7 used y$flush_delayed '_Bool'
|-VarDecl 0x5616515a4098 <line:702:1, col:5> col:5 used y$mem_tmp 'int'
|-VarDecl 0x5616515a4110 <line:703:1, col:7> col:7 used y$r_buff0_thd0 '_Bool'
|-VarDecl 0x5616515a4188 <line:704:1, col:7> col:7 used y$r_buff0_thd1 '_Bool'
|-VarDecl 0x5616515a4200 <line:705:1, col:7> col:7 used y$r_buff0_thd2 '_Bool'
|-VarDecl 0x5616515a4278 <line:706:1, col:7> col:7 used y$r_buff0_thd3 '_Bool'
|-VarDecl 0x5616515a42f0 <line:707:1, col:7> col:7 used y$r_buff1_thd0 '_Bool'
|-VarDecl 0x5616515a4368 <line:708:1, col:7> col:7 used y$r_buff1_thd1 '_Bool'
|-VarDecl 0x5616515a43e0 <line:709:1, col:7> col:7 used y$r_buff1_thd2 '_Bool'
|-VarDecl 0x5616515a4458 <line:710:1, col:7> col:7 used y$r_buff1_thd3 '_Bool'
|-VarDecl 0x5616515a44d0 <line:711:1, col:7> col:7 y$read_delayed '_Bool'
|-VarDecl 0x5616515a4550 <line:712:1, col:6> col:6 y$read_delayed_var 'int *'
|-VarDecl 0x5616515a45d0 <line:713:1, col:5> col:5 used y$w_buff0 'int'
|-VarDecl 0x5616515a4648 <line:714:1, col:7> col:7 used y$w_buff0_used '_Bool'
|-VarDecl 0x5616515a46c8 <line:715:1, col:5> col:5 used y$w_buff1 'int'
|-VarDecl 0x5616515a4740 <line:716:1, col:7> col:7 used y$w_buff1_used '_Bool'
|-VarDecl 0x5616515a47c0 <line:717:1, col:5> col:5 used z 'int'
|-VarDecl 0x5616515a4840 prev 0x5616515a47c0 <line:718:1, col:9> col:5 used z 'int' cinit
| `-IntegerLiteral 0x5616515a48a8 <col:9> 'int' 0
|-VarDecl 0x5616515a48d8 <line:719:1, col:7> col:7 used weak$$choice0 '_Bool'
|-VarDecl 0x5616515a4950 <line:720:1, col:7> col:7 used weak$$choice1 '_Bool'
|-VarDecl 0x5616515a49c8 <line:721:1, col:7> col:7 used weak$$choice2 '_Bool'
|-FunctionDecl 0x5616515a5b20 prev 0x5616515a2af0 <line:722:1, line:736:1> line:722:8 used P0 'void *(void *)'
| |-ParmVarDecl 0x5616515a4a48 <col:11, col:17> col:17 arg 'void *'
| `-CompoundStmt 0x5616515a60e8 <line:723:1, line:736:1>
|   |-CallExpr 0x5616515a5c38 <line:724:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x5616515a5c20 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5616515a5bc8 <col:3> 'void ()' Function 0x561651549e40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x5616515a5cb0 <line:725:3, col:25> 'int' '='
|   | |-DeclRefExpr 0x5616515a5c58 <col:3> 'int' lvalue Var 0x5616515a3240 '__unbuffered_p0_EAX' 'int'
|   | `-ImplicitCastExpr 0x5616515a5c98 <col:25> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x5616515a5c78 <col:25> 'int' lvalue Var 0x5616515a4840 'z' 'int'
|   |-CallExpr 0x5616515a5d08 <line:726:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x5616515a5cf0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5616515a5cd0 <col:3> 'void ()' Function 0x561651549f00 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x5616515a5d60 <line:727:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x5616515a5d48 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5616515a5d28 <col:3> 'void ()' Function 0x561651549e40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x5616515a5dc0 <line:728:3, col:7> 'int' '='
|   | |-DeclRefExpr 0x5616515a5d80 <col:3> 'int' lvalue Var 0x5616515a3e60 'x' 'int'
|   | `-IntegerLiteral 0x5616515a5da0 <col:7> 'int' 1
|   |-CallExpr 0x5616515a5e18 <line:729:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x5616515a5e00 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5616515a5de0 <col:3> 'void ()' Function 0x561651549f00 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x5616515a5e70 <line:730:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x5616515a5e58 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5616515a5e38 <col:3> 'void ()' Function 0x561651549e40 '__VERIFIER_atomic_begin' 'void ()'
|   |-CallExpr 0x5616515a5ec8 <line:731:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x5616515a5eb0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5616515a5e90 <col:3> 'void ()' Function 0x561651549f00 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x5616515a5f20 <line:732:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x5616515a5f08 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5616515a5ee8 <col:3> 'void ()' Function 0x561651549e40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x5616515a5fd8 <line:733:3, col:41> 'int' '='
|   | |-DeclRefExpr 0x5616515a5f40 <col:3> 'int' lvalue Var 0x5616515a3120 '__unbuffered_cnt' 'int'
|   | `-BinaryOperator 0x5616515a5fb8 <col:22, col:41> 'int' '+'
|   |   |-ImplicitCastExpr 0x5616515a5fa0 <col:22> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x5616515a5f60 <col:22> 'int' lvalue Var 0x5616515a3120 '__unbuffered_cnt' 'int'
|   |   `-IntegerLiteral 0x5616515a5f80 <col:41> 'int' 1
|   |-CallExpr 0x5616515a6030 <line:734:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x5616515a6018 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5616515a5ff8 <col:3> 'void ()' Function 0x561651549f00 '__VERIFIER_atomic_end' 'void ()'
|   `-ReturnStmt 0x5616515a60d8 <line:735:3, col:36>
|     `-CallExpr 0x5616515a60b8 <col:10, col:36> 'void *'
|       `-ImplicitCastExpr 0x5616515a60a0 <col:10> 'void *(*)(void)' <FunctionToPointerDecay>
|         `-DeclRefExpr 0x5616515a6050 <col:10> 'void *(void)' Function 0x561651549958 '__VERIFIER_nondet_pointer' 'void *(void)'
|-FunctionDecl 0x5616515a6208 prev 0x5616515a2c48 <line:737:1, line:765:1> line:737:8 used P1 'void *(void *)'
| |-ParmVarDecl 0x5616515a6170 <col:11, col:17> col:17 arg 'void *'
| `-CompoundStmt 0x5616515a79e0 <line:738:1, line:765:1>
|   |-CallExpr 0x5616515a62e8 <line:739:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x5616515a62d0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5616515a62b0 <col:3> 'void ()' Function 0x561651549e40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x5616515a6360 <line:740:3, col:25> 'int' '='
|   | |-DeclRefExpr 0x5616515a6308 <col:3> 'int' lvalue Var 0x5616515a3360 '__unbuffered_p1_EAX' 'int'
|   | `-ImplicitCastExpr 0x5616515a6348 <col:25> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x5616515a6328 <col:25> 'int' lvalue Var 0x5616515a3e60 'x' 'int'
|   |-CallExpr 0x5616515a63b8 <line:741:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x5616515a63a0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5616515a6380 <col:3> 'void ()' Function 0x561651549f00 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x5616515a6410 <line:742:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x5616515a63f8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5616515a63d8 <col:3> 'void ()' Function 0x561651549e40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x5616515a6488 <line:743:3, col:15> 'int' '='
|   | |-DeclRefExpr 0x5616515a6430 <col:3> 'int' lvalue Var 0x5616515a46c8 'y$w_buff1' 'int'
|   | `-ImplicitCastExpr 0x5616515a6470 <col:15> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x5616515a6450 <col:15> 'int' lvalue Var 0x5616515a45d0 'y$w_buff0' 'int'
|   |-BinaryOperator 0x5616515a64e8 <line:744:3, col:15> 'int' '='
|   | |-DeclRefExpr 0x5616515a64a8 <col:3> 'int' lvalue Var 0x5616515a45d0 'y$w_buff0' 'int'
|   | `-IntegerLiteral 0x5616515a64c8 <col:15> 'int' 1
|   |-BinaryOperator 0x5616515a6560 <line:745:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x5616515a6508 <col:3> '_Bool' lvalue Var 0x5616515a4740 'y$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x5616515a6548 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x5616515a6528 <col:20> '_Bool' lvalue Var 0x5616515a4648 'y$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x5616515a65f8 <line:746:3, col:27> '_Bool' '='
|   | |-DeclRefExpr 0x5616515a6580 <col:3> '_Bool' lvalue Var 0x5616515a4648 'y$w_buff0_used' '_Bool'
|   | `-CStyleCastExpr 0x5616515a65d0 <col:20, col:27> '_Bool' <IntegralToBoolean>
|   |   `-IntegerLiteral 0x5616515a65a0 <col:27> 'int' 1
|   |-CallExpr 0x5616515a6778 <line:747:3, col:56> 'void'
|   | |-ImplicitCastExpr 0x5616515a6760 <col:3> 'void (*)(int)' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x5616515a6618 <col:3> 'void (int)' Function 0x561651549bc8 '__VERIFIER_assert' 'void (int)'
|   | `-UnaryOperator 0x5616515a6718 <col:21, col:55> 'int' prefix '!' cannot overflow
|   |   `-ParenExpr 0x5616515a66f8 <col:22, col:55> 'int'
|   |     `-BinaryOperator 0x5616515a66d8 <col:23, col:41> 'int' '&&'
|   |       |-ImplicitCastExpr 0x5616515a6690 <col:23> 'int' <IntegralCast>
|   |       | `-ImplicitCastExpr 0x5616515a6678 <col:23> '_Bool' <LValueToRValue>
|   |       |   `-DeclRefExpr 0x5616515a6638 <col:23> '_Bool' lvalue Var 0x5616515a4740 'y$w_buff1_used' '_Bool'
|   |       `-ImplicitCastExpr 0x5616515a66c0 <col:41> 'int' <IntegralCast>
|   |         `-ImplicitCastExpr 0x5616515a66a8 <col:41> '_Bool' <LValueToRValue>
|   |           `-DeclRefExpr 0x5616515a6658 <col:41> '_Bool' lvalue Var 0x5616515a4648 'y$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x5616515a67f8 <line:748:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x5616515a67a0 <col:3> '_Bool' lvalue Var 0x5616515a42f0 'y$r_buff1_thd0' '_Bool'
|   | `-ImplicitCastExpr 0x5616515a67e0 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x5616515a67c0 <col:20> '_Bool' lvalue Var 0x5616515a4110 'y$r_buff0_thd0' '_Bool'
|   |-BinaryOperator 0x5616515a6870 <line:749:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x5616515a6818 <col:3> '_Bool' lvalue Var 0x5616515a4368 'y$r_buff1_thd1' '_Bool'
|   | `-ImplicitCastExpr 0x5616515a6858 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x5616515a6838 <col:20> '_Bool' lvalue Var 0x5616515a4188 'y$r_buff0_thd1' '_Bool'
|   |-BinaryOperator 0x5616515a68e8 <line:750:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x5616515a6890 <col:3> '_Bool' lvalue Var 0x5616515a43e0 'y$r_buff1_thd2' '_Bool'
|   | `-ImplicitCastExpr 0x5616515a68d0 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x5616515a68b0 <col:20> '_Bool' lvalue Var 0x5616515a4200 'y$r_buff0_thd2' '_Bool'
|   |-BinaryOperator 0x5616515a6960 <line:751:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x5616515a6908 <col:3> '_Bool' lvalue Var 0x5616515a4458 'y$r_buff1_thd3' '_Bool'
|   | `-ImplicitCastExpr 0x5616515a6948 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x5616515a6928 <col:20> '_Bool' lvalue Var 0x5616515a4278 'y$r_buff0_thd3' '_Bool'
|   |-BinaryOperator 0x5616515a69f8 <line:752:3, col:27> '_Bool' '='
|   | |-DeclRefExpr 0x5616515a6980 <col:3> '_Bool' lvalue Var 0x5616515a4200 'y$r_buff0_thd2' '_Bool'
|   | `-CStyleCastExpr 0x5616515a69d0 <col:20, col:27> '_Bool' <IntegralToBoolean>
|   |   `-IntegerLiteral 0x5616515a69a0 <col:27> 'int' 1
|   |-CallExpr 0x5616515a6a50 <line:753:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x5616515a6a38 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5616515a6a18 <col:3> 'void ()' Function 0x561651549f00 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x5616515a6aa8 <line:754:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x5616515a6a90 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5616515a6a70 <col:3> 'void ()' Function 0x561651549e40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x5616515a6db8 <line:755:3, col:103> 'int' '='
|   | |-DeclRefExpr 0x5616515a6ac8 <col:3> 'int' lvalue Var 0x5616515a3f80 'y' 'int'
|   | `-ConditionalOperator 0x5616515a6d88 <col:7, col:103> 'int'
|   |   |-BinaryOperator 0x5616515a6bb0 <col:7, col:25> 'int' '&&'
|   |   | |-ImplicitCastExpr 0x5616515a6b68 <col:7> 'int' <IntegralCast>
|   |   | | `-ImplicitCastExpr 0x5616515a6b50 <col:7> '_Bool' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x5616515a6ae8 <col:7> '_Bool' lvalue Var 0x5616515a4648 'y$w_buff0_used' '_Bool'
|   |   | `-ImplicitCastExpr 0x5616515a6b98 <col:25> 'int' <IntegralCast>
|   |   |   `-ImplicitCastExpr 0x5616515a6b80 <col:25> '_Bool' <LValueToRValue>
|   |   |     `-DeclRefExpr 0x5616515a6b30 <col:25> '_Bool' lvalue Var 0x5616515a4200 'y$r_buff0_thd2' '_Bool'
|   |   |-ImplicitCastExpr 0x5616515a6d70 <col:42> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x5616515a6bd0 <col:42> 'int' lvalue Var 0x5616515a45d0 'y$w_buff0' 'int'
|   |   `-ParenExpr 0x5616515a6d50 <col:54, col:103> 'int'
|   |     `-ConditionalOperator 0x5616515a6d20 <col:55, col:102> 'int'
|   |       |-BinaryOperator 0x5616515a6c90 <col:55, col:73> 'int' '&&'
|   |       | |-ImplicitCastExpr 0x5616515a6c48 <col:55> 'int' <IntegralCast>
|   |       | | `-ImplicitCastExpr 0x5616515a6c30 <col:55> '_Bool' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x5616515a6bf0 <col:55> '_Bool' lvalue Var 0x5616515a4740 'y$w_buff1_used' '_Bool'
|   |       | `-ImplicitCastExpr 0x5616515a6c78 <col:73> 'int' <IntegralCast>
|   |       |   `-ImplicitCastExpr 0x5616515a6c60 <col:73> '_Bool' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x5616515a6c10 <col:73> '_Bool' lvalue Var 0x5616515a43e0 'y$r_buff1_thd2' '_Bool'
|   |       |-ImplicitCastExpr 0x5616515a6cf0 <col:90> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x5616515a6cb0 <col:90> 'int' lvalue Var 0x5616515a46c8 'y$w_buff1' 'int'
|   |       `-ImplicitCastExpr 0x5616515a6d08 <col:102> 'int' <LValueToRValue>
|   |         `-DeclRefExpr 0x5616515a6cd0 <col:102> 'int' lvalue Var 0x5616515a3f80 'y' 'int'
|   |-BinaryOperator 0x5616515a6fc0 <line:756:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x5616515a6dd8 <col:3> '_Bool' lvalue Var 0x5616515a4648 'y$w_buff0_used' '_Bool'
|   | `-ImplicitCastExpr 0x5616515a6fa8 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x5616515a6f78 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x5616515a6e98 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x5616515a6e50 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x5616515a6e38 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x5616515a6df8 <col:20> '_Bool' lvalue Var 0x5616515a4648 'y$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x5616515a6e80 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x5616515a6e68 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x5616515a6e18 <col:38> '_Bool' lvalue Var 0x5616515a4200 'y$r_buff0_thd2' '_Bool'
|   |     |-ImplicitCastExpr 0x5616515a6f30 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x5616515a6ee8 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x5616515a6eb8 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x5616515a6f60 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x5616515a6f48 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x5616515a6f10 <col:66> '_Bool' lvalue Var 0x5616515a4648 'y$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x5616515a72a8 <line:757:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x5616515a6fe0 <col:3> '_Bool' lvalue Var 0x5616515a4740 'y$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x5616515a7290 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x5616515a7260 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x5616515a7180 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x5616515a70a0 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x5616515a7058 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x5616515a7040 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x5616515a7000 <col:20> '_Bool' lvalue Var 0x5616515a4648 'y$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x5616515a7088 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x5616515a7070 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x5616515a7020 <col:38> '_Bool' lvalue Var 0x5616515a4200 'y$r_buff0_thd2' '_Bool'
|   |     | `-BinaryOperator 0x5616515a7160 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x5616515a7118 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x5616515a7100 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x5616515a70c0 <col:56> '_Bool' lvalue Var 0x5616515a4740 'y$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x5616515a7148 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x5616515a7130 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x5616515a70e0 <col:74> '_Bool' lvalue Var 0x5616515a43e0 'y$r_buff1_thd2' '_Bool'
|   |     |-ImplicitCastExpr 0x5616515a7218 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x5616515a71d0 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x5616515a71a0 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x5616515a7248 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x5616515a7230 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x5616515a71f8 <col:102> '_Bool' lvalue Var 0x5616515a4740 'y$w_buff1_used' '_Bool'
|   |-BinaryOperator 0x5616515a74b0 <line:758:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x5616515a72c8 <col:3> '_Bool' lvalue Var 0x5616515a4200 'y$r_buff0_thd2' '_Bool'
|   | `-ImplicitCastExpr 0x5616515a7498 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x5616515a7468 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x5616515a7388 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x5616515a7340 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x5616515a7328 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x5616515a72e8 <col:20> '_Bool' lvalue Var 0x5616515a4648 'y$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x5616515a7370 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x5616515a7358 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x5616515a7308 <col:38> '_Bool' lvalue Var 0x5616515a4200 'y$r_buff0_thd2' '_Bool'
|   |     |-ImplicitCastExpr 0x5616515a7420 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x5616515a73d8 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x5616515a73a8 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x5616515a7450 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x5616515a7438 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x5616515a7400 <col:66> '_Bool' lvalue Var 0x5616515a4200 'y$r_buff0_thd2' '_Bool'
|   |-BinaryOperator 0x5616515a7798 <line:759:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x5616515a74d0 <col:3> '_Bool' lvalue Var 0x5616515a43e0 'y$r_buff1_thd2' '_Bool'
|   | `-ImplicitCastExpr 0x5616515a7780 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x5616515a7750 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x5616515a7670 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x5616515a7590 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x5616515a7548 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x5616515a7530 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x5616515a74f0 <col:20> '_Bool' lvalue Var 0x5616515a4648 'y$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x5616515a7578 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x5616515a7560 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x5616515a7510 <col:38> '_Bool' lvalue Var 0x5616515a4200 'y$r_buff0_thd2' '_Bool'
|   |     | `-BinaryOperator 0x5616515a7650 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x5616515a7608 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x5616515a75f0 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x5616515a75b0 <col:56> '_Bool' lvalue Var 0x5616515a4740 'y$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x5616515a7638 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x5616515a7620 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x5616515a75d0 <col:74> '_Bool' lvalue Var 0x5616515a43e0 'y$r_buff1_thd2' '_Bool'
|   |     |-ImplicitCastExpr 0x5616515a7708 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x5616515a76c0 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x5616515a7690 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x5616515a7738 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x5616515a7720 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x5616515a76e8 <col:102> '_Bool' lvalue Var 0x5616515a43e0 'y$r_buff1_thd2' '_Bool'
|   |-CallExpr 0x5616515a77f0 <line:760:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x5616515a77d8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5616515a77b8 <col:3> 'void ()' Function 0x561651549f00 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x5616515a7848 <line:761:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x5616515a7830 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5616515a7810 <col:3> 'void ()' Function 0x561651549e40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x5616515a7900 <line:762:3, col:41> 'int' '='
|   | |-DeclRefExpr 0x5616515a7868 <col:3> 'int' lvalue Var 0x5616515a3120 '__unbuffered_cnt' 'int'
|   | `-BinaryOperator 0x5616515a78e0 <col:22, col:41> 'int' '+'
|   |   |-ImplicitCastExpr 0x5616515a78c8 <col:22> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x5616515a7888 <col:22> 'int' lvalue Var 0x5616515a3120 '__unbuffered_cnt' 'int'
|   |   `-IntegerLiteral 0x5616515a78a8 <col:41> 'int' 1
|   |-CallExpr 0x5616515a7958 <line:763:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x5616515a7940 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5616515a7920 <col:3> 'void ()' Function 0x561651549f00 '__VERIFIER_atomic_end' 'void ()'
|   `-ReturnStmt 0x5616515a79d0 <line:764:3, col:36>
|     `-CallExpr 0x5616515a79b0 <col:10, col:36> 'void *'
|       `-ImplicitCastExpr 0x5616515a7998 <col:10> 'void *(*)(void)' <FunctionToPointerDecay>
|         `-DeclRefExpr 0x5616515a7978 <col:10> 'void *(void)' Function 0x561651549958 '__VERIFIER_nondet_pointer' 'void *(void)'
|-FunctionDecl 0x5616515a7bd8 prev 0x5616515a2da0 <line:766:1, line:801:1> line:766:8 used P2 'void *(void *)'
| |-ParmVarDecl 0x5616515a7b40 <col:11, col:17> col:17 arg 'void *'
| `-CompoundStmt 0x5616515ad198 <line:767:1, line:801:1>
|   |-CallExpr 0x5616515a7cb8 <line:768:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x5616515a7ca0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5616515a7c80 <col:3> 'void ()' Function 0x561651549e40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x5616515a7d68 <line:769:3, col:45> '_Bool' '='
|   | |-DeclRefExpr 0x5616515a7cd8 <col:3> '_Bool' lvalue Var 0x5616515a48d8 'weak$$choice0' '_Bool'
|   | `-ImplicitCastExpr 0x5616515a7d50 <col:19, col:45> '_Bool' <PointerToBoolean>
|   |   `-CallExpr 0x5616515a7d30 <col:19, col:45> 'void *'
|   |     `-ImplicitCastExpr 0x5616515a7d18 <col:19> 'void *(*)(void)' <FunctionToPointerDecay>
|   |       `-DeclRefExpr 0x5616515a7cf8 <col:19> 'void *(void)' Function 0x561651549958 '__VERIFIER_nondet_pointer' 'void *(void)'
|   |-BinaryOperator 0x5616515a7e18 <line:770:3, col:45> '_Bool' '='
|   | |-DeclRefExpr 0x5616515a7d88 <col:3> '_Bool' lvalue Var 0x5616515a49c8 'weak$$choice2' '_Bool'
|   | `-ImplicitCastExpr 0x5616515a7e00 <col:19, col:45> '_Bool' <PointerToBoolean>
|   |   `-CallExpr 0x5616515a7de0 <col:19, col:45> 'void *'
|   |     `-ImplicitCastExpr 0x5616515a7dc8 <col:19> 'void *(*)(void)' <FunctionToPointerDecay>
|   |       `-DeclRefExpr 0x5616515a7da8 <col:19> 'void *(void)' Function 0x561651549958 '__VERIFIER_nondet_pointer' 'void *(void)'
|   |-BinaryOperator 0x5616515a7e90 <line:771:3, col:21> '_Bool' '='
|   | |-DeclRefExpr 0x5616515a7e38 <col:3> '_Bool' lvalue Var 0x5616515a4018 'y$flush_delayed' '_Bool'
|   | `-ImplicitCastExpr 0x5616515a7e78 <col:21> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x5616515a7e58 <col:21> '_Bool' lvalue Var 0x5616515a49c8 'weak$$choice2' '_Bool'
|   |-BinaryOperator 0x5616515a7f08 <line:772:3, col:15> 'int' '='
|   | |-DeclRefExpr 0x5616515a7eb0 <col:3> 'int' lvalue Var 0x5616515a4098 'y$mem_tmp' 'int'
|   | `-ImplicitCastExpr 0x5616515a7ef0 <col:15> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x5616515a7ed0 <col:15> 'int' lvalue Var 0x5616515a3f80 'y' 'int'
|   |-BinaryOperator 0x5616515a7fb8 <line:773:3, col:45> '_Bool' '='
|   | |-DeclRefExpr 0x5616515a7f28 <col:3> '_Bool' lvalue Var 0x5616515a4950 'weak$$choice1' '_Bool'
|   | `-ImplicitCastExpr 0x5616515a7fa0 <col:19, col:45> '_Bool' <PointerToBoolean>
|   |   `-CallExpr 0x5616515a7f80 <col:19, col:45> 'void *'
|   |     `-ImplicitCastExpr 0x5616515a7f68 <col:19> 'void *(*)(void)' <FunctionToPointerDecay>
|   |       `-DeclRefExpr 0x5616515a7f48 <col:19> 'void *(void)' Function 0x561651549958 '__VERIFIER_nondet_pointer' 'void *(void)'
|   |-BinaryOperator 0x5616515a89e0 <line:774:3, col:363> 'int' '='
|   | |-DeclRefExpr 0x5616515a7fd8 <col:3> 'int' lvalue Var 0x5616515a3f80 'y' 'int'
|   | `-ConditionalOperator 0x5616515a89b0 <col:7, col:363> 'int'
|   |   |-UnaryOperator 0x5616515a8030 <col:7, col:8> 'int' prefix '!' cannot overflow
|   |   | `-ImplicitCastExpr 0x5616515a8018 <col:8> '_Bool' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x5616515a7ff8 <col:8> '_Bool' lvalue Var 0x5616515a4648 'y$w_buff0_used' '_Bool'
|   |   |-ImplicitCastExpr 0x5616515a8998 <col:25> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x5616515a8048 <col:25> 'int' lvalue Var 0x5616515a3f80 'y' 'int'
|   |   `-ParenExpr 0x5616515a8978 <col:29, col:363> 'int'
|   |     `-ConditionalOperator 0x5616515a8948 <col:30, col:362> 'int'
|   |       |-BinaryOperator 0x5616515a8108 <col:30, col:48> 'int' '&&'
|   |       | |-ImplicitCastExpr 0x5616515a80c0 <col:30> 'int' <IntegralCast>
|   |       | | `-ImplicitCastExpr 0x5616515a80a8 <col:30> '_Bool' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x5616515a8068 <col:30> '_Bool' lvalue Var 0x5616515a4648 'y$w_buff0_used' '_Bool'
|   |       | `-ImplicitCastExpr 0x5616515a80f0 <col:48> 'int' <IntegralCast>
|   |       |   `-ImplicitCastExpr 0x5616515a80d8 <col:48> '_Bool' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x5616515a8088 <col:48> '_Bool' lvalue Var 0x5616515a4278 'y$r_buff0_thd3' '_Bool'
|   |       |-ImplicitCastExpr 0x5616515a8930 <col:65> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x5616515a8128 <col:65> 'int' lvalue Var 0x5616515a45d0 'y$w_buff0' 'int'
|   |       `-ParenExpr 0x5616515a8910 <col:77, col:362> 'int'
|   |         `-ConditionalOperator 0x5616515a88e0 <col:78, col:361> 'int'
|   |           |-BinaryOperator 0x5616515a82c8 <col:78, col:134> 'int' '&&'
|   |           | |-BinaryOperator 0x5616515a8258 <col:78, col:115> 'int' '&&'
|   |           | | |-BinaryOperator 0x5616515a81e8 <col:78, col:97> 'int' '&&'
|   |           | | | |-ImplicitCastExpr 0x5616515a81d0 <col:78> 'int' <IntegralCast>
|   |           | | | | `-ImplicitCastExpr 0x5616515a81b8 <col:78> '_Bool' <LValueToRValue>
|   |           | | | |   `-DeclRefExpr 0x5616515a8148 <col:78> '_Bool' lvalue Var 0x5616515a4648 'y$w_buff0_used' '_Bool'
|   |           | | | `-UnaryOperator 0x5616515a81a0 <col:96, col:97> 'int' prefix '!' cannot overflow
|   |           | | |   `-ImplicitCastExpr 0x5616515a8188 <col:97> '_Bool' <LValueToRValue>
|   |           | | |     `-DeclRefExpr 0x5616515a8168 <col:97> '_Bool' lvalue Var 0x5616515a4458 'y$r_buff1_thd3' '_Bool'
|   |           | | `-ImplicitCastExpr 0x5616515a8240 <col:115> 'int' <IntegralCast>
|   |           | |   `-ImplicitCastExpr 0x5616515a8228 <col:115> '_Bool' <LValueToRValue>
|   |           | |     `-DeclRefExpr 0x5616515a8208 <col:115> '_Bool' lvalue Var 0x5616515a4740 'y$w_buff1_used' '_Bool'
|   |           | `-UnaryOperator 0x5616515a82b0 <col:133, col:134> 'int' prefix '!' cannot overflow
|   |           |   `-ImplicitCastExpr 0x5616515a8298 <col:134> '_Bool' <LValueToRValue>
|   |           |     `-DeclRefExpr 0x5616515a8278 <col:134> '_Bool' lvalue Var 0x5616515a4278 'y$r_buff0_thd3' '_Bool'
|   |           |-ParenExpr 0x5616515a84b0 <col:151, col:211> 'int'
|   |           | `-ConditionalOperator 0x5616515a8480 <col:152, col:210> 'int'
|   |           |   |-ImplicitCastExpr 0x5616515a8450 <col:152> 'int' <IntegralCast>
|   |           |   | `-ImplicitCastExpr 0x5616515a8438 <col:152> '_Bool' <LValueToRValue>
|   |           |   |   `-DeclRefExpr 0x5616515a82e8 <col:152> '_Bool' lvalue Var 0x5616515a48d8 'weak$$choice0' '_Bool'
|   |           |   |-ImplicitCastExpr 0x5616515a8468 <col:168> 'int' <LValueToRValue>
|   |           |   | `-DeclRefExpr 0x5616515a8308 <col:168> 'int' lvalue Var 0x5616515a3f80 'y' 'int'
|   |           |   `-ParenExpr 0x5616515a8418 <col:172, col:210> 'int'
|   |           |     `-ConditionalOperator 0x5616515a83e8 <col:173, col:201> 'int'
|   |           |       |-ImplicitCastExpr 0x5616515a83a0 <col:173> 'int' <IntegralCast>
|   |           |       | `-ImplicitCastExpr 0x5616515a8388 <col:173> '_Bool' <LValueToRValue>
|   |           |       |   `-DeclRefExpr 0x5616515a8328 <col:173> '_Bool' lvalue Var 0x5616515a4950 'weak$$choice1' '_Bool'
|   |           |       |-ImplicitCastExpr 0x5616515a83b8 <col:189> 'int' <LValueToRValue>
|   |           |       | `-DeclRefExpr 0x5616515a8348 <col:189> 'int' lvalue Var 0x5616515a45d0 'y$w_buff0' 'int'
|   |           |       `-ImplicitCastExpr 0x5616515a83d0 <col:201> 'int' <LValueToRValue>
|   |           |         `-DeclRefExpr 0x5616515a8368 <col:201> 'int' lvalue Var 0x5616515a46c8 'y$w_buff1' 'int'
|   |           `-ParenExpr 0x5616515a88c0 <col:215, col:361> 'int'
|   |             `-ConditionalOperator 0x5616515a8890 <col:216, col:360> 'int'
|   |               |-BinaryOperator 0x5616515a8650 <col:216, col:271> 'int' '&&'
|   |               | |-BinaryOperator 0x5616515a85e0 <col:216, col:252> 'int' '&&'
|   |               | | |-BinaryOperator 0x5616515a8570 <col:216, col:234> 'int' '&&'
|   |               | | | |-ImplicitCastExpr 0x5616515a8528 <col:216> 'int' <IntegralCast>
|   |               | | | | `-ImplicitCastExpr 0x5616515a8510 <col:216> '_Bool' <LValueToRValue>
|   |               | | | |   `-DeclRefExpr 0x5616515a84d0 <col:216> '_Bool' lvalue Var 0x5616515a4648 'y$w_buff0_used' '_Bool'
|   |               | | | `-ImplicitCastExpr 0x5616515a8558 <col:234> 'int' <IntegralCast>
|   |               | | |   `-ImplicitCastExpr 0x5616515a8540 <col:234> '_Bool' <LValueToRValue>
|   |               | | |     `-DeclRefExpr 0x5616515a84f0 <col:234> '_Bool' lvalue Var 0x5616515a4458 'y$r_buff1_thd3' '_Bool'
|   |               | | `-ImplicitCastExpr 0x5616515a85c8 <col:252> 'int' <IntegralCast>
|   |               | |   `-ImplicitCastExpr 0x5616515a85b0 <col:252> '_Bool' <LValueToRValue>
|   |               | |     `-DeclRefExpr 0x5616515a8590 <col:252> '_Bool' lvalue Var 0x5616515a4740 'y$w_buff1_used' '_Bool'
|   |               | `-UnaryOperator 0x5616515a8638 <col:270, col:271> 'int' prefix '!' cannot overflow
|   |               |   `-ImplicitCastExpr 0x5616515a8620 <col:271> '_Bool' <LValueToRValue>
|   |               |     `-DeclRefExpr 0x5616515a8600 <col:271> '_Bool' lvalue Var 0x5616515a4278 'y$r_buff0_thd3' '_Bool'
|   |               |-ParenExpr 0x5616515a8760 <col:288, col:326> 'int'
|   |               | `-ConditionalOperator 0x5616515a8730 <col:289, col:317> 'int'
|   |               |   |-ImplicitCastExpr 0x5616515a86e8 <col:289> 'int' <IntegralCast>
|   |               |   | `-ImplicitCastExpr 0x5616515a86d0 <col:289> '_Bool' <LValueToRValue>
|   |               |   |   `-DeclRefExpr 0x5616515a8670 <col:289> '_Bool' lvalue Var 0x5616515a48d8 'weak$$choice0' '_Bool'
|   |               |   |-ImplicitCastExpr 0x5616515a8700 <col:305> 'int' <LValueToRValue>
|   |               |   | `-DeclRefExpr 0x5616515a8690 <col:305> 'int' lvalue Var 0x5616515a46c8 'y$w_buff1' 'int'
|   |               |   `-ImplicitCastExpr 0x5616515a8718 <col:317> 'int' <LValueToRValue>
|   |               |     `-DeclRefExpr 0x5616515a86b0 <col:317> 'int' lvalue Var 0x5616515a45d0 'y$w_buff0' 'int'
|   |               `-ParenExpr 0x5616515a8870 <col:330, col:360> 'int'
|   |                 `-ConditionalOperator 0x5616515a8840 <col:331, col:359> 'int'
|   |                   |-ImplicitCastExpr 0x5616515a87f8 <col:331> 'int' <IntegralCast>
|   |                   | `-ImplicitCastExpr 0x5616515a87e0 <col:331> '_Bool' <LValueToRValue>
|   |                   |   `-DeclRefExpr 0x5616515a8780 <col:331> '_Bool' lvalue Var 0x5616515a48d8 'weak$$choice0' '_Bool'
|   |                   |-ImplicitCastExpr 0x5616515a8810 <col:347> 'int' <LValueToRValue>
|   |                   | `-DeclRefExpr 0x5616515a87a0 <col:347> 'int' lvalue Var 0x5616515a45d0 'y$w_buff0' 'int'
|   |                   `-ImplicitCastExpr 0x5616515a8828 <col:359> 'int' <LValueToRValue>
|   |                     `-DeclRefExpr 0x5616515a87c0 <col:359> 'int' lvalue Var 0x5616515a3f80 'y' 'int'
|   |-BinaryOperator 0x5616515a9190 <line:775:3, col:305> 'int' '='
|   | |-DeclRefExpr 0x5616515a8a00 <col:3> 'int' lvalue Var 0x5616515a45d0 'y$w_buff0' 'int'
|   | `-ConditionalOperator 0x5616515a9160 <col:15, col:305> 'int'
|   |   |-ImplicitCastExpr 0x5616515a9130 <col:15> 'int' <IntegralCast>
|   |   | `-ImplicitCastExpr 0x5616515a9118 <col:15> '_Bool' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x5616515a8a20 <col:15> '_Bool' lvalue Var 0x5616515a49c8 'weak$$choice2' '_Bool'
|   |   |-ImplicitCastExpr 0x5616515a9148 <col:31> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x5616515a8a40 <col:31> 'int' lvalue Var 0x5616515a45d0 'y$w_buff0' 'int'
|   |   `-ParenExpr 0x5616515a90f8 <col:43, col:305> 'int'
|   |     `-ConditionalOperator 0x5616515a90c8 <col:44, col:304> 'int'
|   |       |-UnaryOperator 0x5616515a8a98 <col:44, col:45> 'int' prefix '!' cannot overflow
|   |       | `-ImplicitCastExpr 0x5616515a8a80 <col:45> '_Bool' <LValueToRValue>
|   |       |   `-DeclRefExpr 0x5616515a8a60 <col:45> '_Bool' lvalue Var 0x5616515a4648 'y$w_buff0_used' '_Bool'
|   |       |-ImplicitCastExpr 0x5616515a90b0 <col:62> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x5616515a8ab0 <col:62> 'int' lvalue Var 0x5616515a45d0 'y$w_buff0' 'int'
|   |       `-ParenExpr 0x5616515a9090 <col:74, col:304> 'int'
|   |         `-ConditionalOperator 0x5616515a9060 <col:75, col:303> 'int'
|   |           |-BinaryOperator 0x5616515a8b80 <col:75, col:93> 'int' '&&'
|   |           | |-ImplicitCastExpr 0x5616515a8b28 <col:75> 'int' <IntegralCast>
|   |           | | `-ImplicitCastExpr 0x5616515a8b10 <col:75> '_Bool' <LValueToRValue>
|   |           | |   `-DeclRefExpr 0x5616515a8ad0 <col:75> '_Bool' lvalue Var 0x5616515a4648 'y$w_buff0_used' '_Bool'
|   |           | `-ImplicitCastExpr 0x5616515a8b68 <col:93> 'int' <IntegralCast>
|   |           |   `-ImplicitCastExpr 0x5616515a8b50 <col:93> '_Bool' <LValueToRValue>
|   |           |     `-DeclRefExpr 0x5616515a8af0 <col:93> '_Bool' lvalue Var 0x5616515a4278 'y$r_buff0_thd3' '_Bool'
|   |           |-ImplicitCastExpr 0x5616515a9048 <col:110> 'int' <LValueToRValue>
|   |           | `-DeclRefExpr 0x5616515a8ba0 <col:110> 'int' lvalue Var 0x5616515a45d0 'y$w_buff0' 'int'
|   |           `-ParenExpr 0x5616515a9028 <col:122, col:303> 'int'
|   |             `-ConditionalOperator 0x5616515a8ff8 <col:123, col:302> 'int'
|   |               |-BinaryOperator 0x5616515a8d40 <col:123, col:179> 'int' '&&'
|   |               | |-BinaryOperator 0x5616515a8cd0 <col:123, col:160> 'int' '&&'
|   |               | | |-BinaryOperator 0x5616515a8c60 <col:123, col:142> 'int' '&&'
|   |               | | | |-ImplicitCastExpr 0x5616515a8c48 <col:123> 'int' <IntegralCast>
|   |               | | | | `-ImplicitCastExpr 0x5616515a8c30 <col:123> '_Bool' <LValueToRValue>
|   |               | | | |   `-DeclRefExpr 0x5616515a8bc0 <col:123> '_Bool' lvalue Var 0x5616515a4648 'y$w_buff0_used' '_Bool'
|   |               | | | `-UnaryOperator 0x5616515a8c18 <col:141, col:142> 'int' prefix '!' cannot overflow
|   |               | | |   `-ImplicitCastExpr 0x5616515a8c00 <col:142> '_Bool' <LValueToRValue>
|   |               | | |     `-DeclRefExpr 0x5616515a8be0 <col:142> '_Bool' lvalue Var 0x5616515a4458 'y$r_buff1_thd3' '_Bool'
|   |               | | `-ImplicitCastExpr 0x5616515a8cb8 <col:160> 'int' <IntegralCast>
|   |               | |   `-ImplicitCastExpr 0x5616515a8ca0 <col:160> '_Bool' <LValueToRValue>
|   |               | |     `-DeclRefExpr 0x5616515a8c80 <col:160> '_Bool' lvalue Var 0x5616515a4740 'y$w_buff1_used' '_Bool'
|   |               | `-UnaryOperator 0x5616515a8d28 <col:178, col:179> 'int' prefix '!' cannot overflow
|   |               |   `-ImplicitCastExpr 0x5616515a8d10 <col:179> '_Bool' <LValueToRValue>
|   |               |     `-DeclRefExpr 0x5616515a8cf0 <col:179> '_Bool' lvalue Var 0x5616515a4278 'y$r_buff0_thd3' '_Bool'
|   |               |-ImplicitCastExpr 0x5616515a8fe0 <col:196> 'int' <LValueToRValue>
|   |               | `-DeclRefExpr 0x5616515a8d60 <col:196> 'int' lvalue Var 0x5616515a45d0 'y$w_buff0' 'int'
|   |               `-ParenExpr 0x5616515a8fc0 <col:208, col:302> 'int'
|   |                 `-ConditionalOperator 0x5616515a8f90 <col:209, col:293> 'int'
|   |                   |-BinaryOperator 0x5616515a8f00 <col:209, col:264> 'int' '&&'
|   |                   | |-BinaryOperator 0x5616515a8e90 <col:209, col:245> 'int' '&&'
|   |                   | | |-BinaryOperator 0x5616515a8e20 <col:209, col:227> 'int' '&&'
|   |                   | | | |-ImplicitCastExpr 0x5616515a8dd8 <col:209> 'int' <IntegralCast>
|   |                   | | | | `-ImplicitCastExpr 0x5616515a8dc0 <col:209> '_Bool' <LValueToRValue>
|   |                   | | | |   `-DeclRefExpr 0x5616515a8d80 <col:209> '_Bool' lvalue Var 0x5616515a4648 'y$w_buff0_used' '_Bool'
|   |                   | | | `-ImplicitCastExpr 0x5616515a8e08 <col:227> 'int' <IntegralCast>
|   |                   | | |   `-ImplicitCastExpr 0x5616515a8df0 <col:227> '_Bool' <LValueToRValue>
|   |                   | | |     `-DeclRefExpr 0x5616515a8da0 <col:227> '_Bool' lvalue Var 0x5616515a4458 'y$r_buff1_thd3' '_Bool'
|   |                   | | `-ImplicitCastExpr 0x5616515a8e78 <col:245> 'int' <IntegralCast>
|   |                   | |   `-ImplicitCastExpr 0x5616515a8e60 <col:245> '_Bool' <LValueToRValue>
|   |                   | |     `-DeclRefExpr 0x5616515a8e40 <col:245> '_Bool' lvalue Var 0x5616515a4740 'y$w_buff1_used' '_Bool'
|   |                   | `-UnaryOperator 0x5616515a8ee8 <col:263, col:264> 'int' prefix '!' cannot overflow
|   |                   |   `-ImplicitCastExpr 0x5616515a8ed0 <col:264> '_Bool' <LValueToRValue>
|   |                   |     `-DeclRefExpr 0x5616515a8eb0 <col:264> '_Bool' lvalue Var 0x5616515a4278 'y$r_buff0_thd3' '_Bool'
|   |                   |-ImplicitCastExpr 0x5616515a8f60 <col:281> 'int' <LValueToRValue>
|   |                   | `-DeclRefExpr 0x5616515a8f20 <col:281> 'int' lvalue Var 0x5616515a45d0 'y$w_buff0' 'int'
|   |                   `-ImplicitCastExpr 0x5616515a8f78 <col:293> 'int' <LValueToRValue>
|   |                     `-DeclRefExpr 0x5616515a8f40 <col:293> 'int' lvalue Var 0x5616515a45d0 'y$w_buff0' 'int'
|   |-BinaryOperator 0x5616515a9930 <line:776:3, col:305> 'int' '='
|   | |-DeclRefExpr 0x5616515a91b0 <col:3> 'int' lvalue Var 0x5616515a46c8 'y$w_buff1' 'int'
|   | `-ConditionalOperator 0x5616515a9900 <col:15, col:305> 'int'
|   |   |-ImplicitCastExpr 0x5616515a98d0 <col:15> 'int' <IntegralCast>
|   |   | `-ImplicitCastExpr 0x5616515a98b8 <col:15> '_Bool' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x5616515a91d0 <col:15> '_Bool' lvalue Var 0x5616515a49c8 'weak$$choice2' '_Bool'
|   |   |-ImplicitCastExpr 0x5616515a98e8 <col:31> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x5616515a91f0 <col:31> 'int' lvalue Var 0x5616515a46c8 'y$w_buff1' 'int'
|   |   `-ParenExpr 0x5616515a9898 <col:43, col:305> 'int'
|   |     `-ConditionalOperator 0x5616515a9868 <col:44, col:304> 'int'
|   |       |-UnaryOperator 0x5616515a9248 <col:44, col:45> 'int' prefix '!' cannot overflow
|   |       | `-ImplicitCastExpr 0x5616515a9230 <col:45> '_Bool' <LValueToRValue>
|   |       |   `-DeclRefExpr 0x5616515a9210 <col:45> '_Bool' lvalue Var 0x5616515a4648 'y$w_buff0_used' '_Bool'
|   |       |-ImplicitCastExpr 0x5616515a9850 <col:62> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x5616515a9260 <col:62> 'int' lvalue Var 0x5616515a46c8 'y$w_buff1' 'int'
|   |       `-ParenExpr 0x5616515a9830 <col:74, col:304> 'int'
|   |         `-ConditionalOperator 0x5616515a9800 <col:75, col:303> 'int'
|   |           |-BinaryOperator 0x5616515a9320 <col:75, col:93> 'int' '&&'
|   |           | |-ImplicitCastExpr 0x5616515a92d8 <col:75> 'int' <IntegralCast>
|   |           | | `-ImplicitCastExpr 0x5616515a92c0 <col:75> '_Bool' <LValueToRValue>
|   |           | |   `-DeclRefExpr 0x5616515a9280 <col:75> '_Bool' lvalue Var 0x5616515a4648 'y$w_buff0_used' '_Bool'
|   |           | `-ImplicitCastExpr 0x5616515a9308 <col:93> 'int' <IntegralCast>
|   |           |   `-ImplicitCastExpr 0x5616515a92f0 <col:93> '_Bool' <LValueToRValue>
|   |           |     `-DeclRefExpr 0x5616515a92a0 <col:93> '_Bool' lvalue Var 0x5616515a4278 'y$r_buff0_thd3' '_Bool'
|   |           |-ImplicitCastExpr 0x5616515a97e8 <col:110> 'int' <LValueToRValue>
|   |           | `-DeclRefExpr 0x5616515a9340 <col:110> 'int' lvalue Var 0x5616515a46c8 'y$w_buff1' 'int'
|   |           `-ParenExpr 0x5616515a97c8 <col:122, col:303> 'int'
|   |             `-ConditionalOperator 0x5616515a9798 <col:123, col:302> 'int'
|   |               |-BinaryOperator 0x5616515a94e0 <col:123, col:179> 'int' '&&'
|   |               | |-BinaryOperator 0x5616515a9470 <col:123, col:160> 'int' '&&'
|   |               | | |-BinaryOperator 0x5616515a9400 <col:123, col:142> 'int' '&&'
|   |               | | | |-ImplicitCastExpr 0x5616515a93e8 <col:123> 'int' <IntegralCast>
|   |               | | | | `-ImplicitCastExpr 0x5616515a93d0 <col:123> '_Bool' <LValueToRValue>
|   |               | | | |   `-DeclRefExpr 0x5616515a9360 <col:123> '_Bool' lvalue Var 0x5616515a4648 'y$w_buff0_used' '_Bool'
|   |               | | | `-UnaryOperator 0x5616515a93b8 <col:141, col:142> 'int' prefix '!' cannot overflow
|   |               | | |   `-ImplicitCastExpr 0x5616515a93a0 <col:142> '_Bool' <LValueToRValue>
|   |               | | |     `-DeclRefExpr 0x5616515a9380 <col:142> '_Bool' lvalue Var 0x5616515a4458 'y$r_buff1_thd3' '_Bool'
|   |               | | `-ImplicitCastExpr 0x5616515a9458 <col:160> 'int' <IntegralCast>
|   |               | |   `-ImplicitCastExpr 0x5616515a9440 <col:160> '_Bool' <LValueToRValue>
|   |               | |     `-DeclRefExpr 0x5616515a9420 <col:160> '_Bool' lvalue Var 0x5616515a4740 'y$w_buff1_used' '_Bool'
|   |               | `-UnaryOperator 0x5616515a94c8 <col:178, col:179> 'int' prefix '!' cannot overflow
|   |               |   `-ImplicitCastExpr 0x5616515a94b0 <col:179> '_Bool' <LValueToRValue>
|   |               |     `-DeclRefExpr 0x5616515a9490 <col:179> '_Bool' lvalue Var 0x5616515a4278 'y$r_buff0_thd3' '_Bool'
|   |               |-ImplicitCastExpr 0x5616515a9780 <col:196> 'int' <LValueToRValue>
|   |               | `-DeclRefExpr 0x5616515a9500 <col:196> 'int' lvalue Var 0x5616515a46c8 'y$w_buff1' 'int'
|   |               `-ParenExpr 0x5616515a9760 <col:208, col:302> 'int'
|   |                 `-ConditionalOperator 0x5616515a9730 <col:209, col:293> 'int'
|   |                   |-BinaryOperator 0x5616515a96a0 <col:209, col:264> 'int' '&&'
|   |                   | |-BinaryOperator 0x5616515a9630 <col:209, col:245> 'int' '&&'
|   |                   | | |-BinaryOperator 0x5616515a95c0 <col:209, col:227> 'int' '&&'
|   |                   | | | |-ImplicitCastExpr 0x5616515a9578 <col:209> 'int' <IntegralCast>
|   |                   | | | | `-ImplicitCastExpr 0x5616515a9560 <col:209> '_Bool' <LValueToRValue>
|   |                   | | | |   `-DeclRefExpr 0x5616515a9520 <col:209> '_Bool' lvalue Var 0x5616515a4648 'y$w_buff0_used' '_Bool'
|   |                   | | | `-ImplicitCastExpr 0x5616515a95a8 <col:227> 'int' <IntegralCast>
|   |                   | | |   `-ImplicitCastExpr 0x5616515a9590 <col:227> '_Bool' <LValueToRValue>
|   |                   | | |     `-DeclRefExpr 0x5616515a9540 <col:227> '_Bool' lvalue Var 0x5616515a4458 'y$r_buff1_thd3' '_Bool'
|   |                   | | `-ImplicitCastExpr 0x5616515a9618 <col:245> 'int' <IntegralCast>
|   |                   | |   `-ImplicitCastExpr 0x5616515a9600 <col:245> '_Bool' <LValueToRValue>
|   |                   | |     `-DeclRefExpr 0x5616515a95e0 <col:245> '_Bool' lvalue Var 0x5616515a4740 'y$w_buff1_used' '_Bool'
|   |                   | `-UnaryOperator 0x5616515a9688 <col:263, col:264> 'int' prefix '!' cannot overflow
|   |                   |   `-ImplicitCastExpr 0x5616515a9670 <col:264> '_Bool' <LValueToRValue>
|   |                   |     `-DeclRefExpr 0x5616515a9650 <col:264> '_Bool' lvalue Var 0x5616515a4278 'y$r_buff0_thd3' '_Bool'
|   |                   |-ImplicitCastExpr 0x5616515a9700 <col:281> 'int' <LValueToRValue>
|   |                   | `-DeclRefExpr 0x5616515a96c0 <col:281> 'int' lvalue Var 0x5616515a46c8 'y$w_buff1' 'int'
|   |                   `-ImplicitCastExpr 0x5616515a9718 <col:293> 'int' <LValueToRValue>
|   |                     `-DeclRefExpr 0x5616515a96e0 <col:293> 'int' lvalue Var 0x5616515a46c8 'y$w_buff1' 'int'
|   |-BinaryOperator 0x5616515aa230 <line:777:3, col:349> '_Bool' '='
|   | |-DeclRefExpr 0x5616515a9950 <col:3> '_Bool' lvalue Var 0x5616515a4648 'y$w_buff0_used' '_Bool'
|   | `-ImplicitCastExpr 0x5616515aa218 <col:20, col:349> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x5616515aa1e8 <col:20, col:349> 'int'
|   |     |-ImplicitCastExpr 0x5616515aa1a0 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x5616515aa188 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x5616515a9970 <col:20> '_Bool' lvalue Var 0x5616515a49c8 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x5616515aa1d0 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x5616515aa1b8 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x5616515a9990 <col:36> '_Bool' lvalue Var 0x5616515a4648 'y$w_buff0_used' '_Bool'
|   |     `-ParenExpr 0x5616515aa168 <col:53, col:349> 'int'
|   |       `-ConditionalOperator 0x5616515aa138 <col:54, col:348> 'int'
|   |         |-UnaryOperator 0x5616515a99e8 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | `-ImplicitCastExpr 0x5616515a99d0 <col:55> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x5616515a99b0 <col:55> '_Bool' lvalue Var 0x5616515a4648 'y$w_buff0_used' '_Bool'
|   |         |-ImplicitCastExpr 0x5616515aa120 <col:72> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x5616515aa108 <col:72> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x5616515a9a00 <col:72> '_Bool' lvalue Var 0x5616515a4648 'y$w_buff0_used' '_Bool'
|   |         `-ParenExpr 0x5616515aa0e8 <col:89, col:348> 'int'
|   |           `-ConditionalOperator 0x5616515aa0b8 <col:90, col:347> 'int'
|   |             |-BinaryOperator 0x5616515a9ac0 <col:90, col:108> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x5616515a9a78 <col:90> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x5616515a9a60 <col:90> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x5616515a9a20 <col:90> '_Bool' lvalue Var 0x5616515a4648 'y$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x5616515a9aa8 <col:108> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x5616515a9a90 <col:108> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x5616515a9a40 <col:108> '_Bool' lvalue Var 0x5616515a4278 'y$r_buff0_thd3' '_Bool'
|   |             |-ImplicitCastExpr 0x5616515aa0a0 <col:125, col:132> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x5616515a9b10 <col:125, col:132> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x5616515a9ae0 <col:132> 'int' 0
|   |             `-ParenExpr 0x5616515aa080 <col:136, col:347> 'int'
|   |               `-ConditionalOperator 0x5616515aa050 <col:137, col:346> 'int'
|   |                 |-BinaryOperator 0x5616515a9ce0 <col:137, col:193> 'int' '&&'
|   |                 | |-BinaryOperator 0x5616515a9c70 <col:137, col:174> 'int' '&&'
|   |                 | | |-BinaryOperator 0x5616515a9c00 <col:137, col:156> 'int' '&&'
|   |                 | | | |-ImplicitCastExpr 0x5616515a9be8 <col:137> 'int' <IntegralCast>
|   |                 | | | | `-ImplicitCastExpr 0x5616515a9bd0 <col:137> '_Bool' <LValueToRValue>
|   |                 | | | |   `-DeclRefExpr 0x5616515a9b60 <col:137> '_Bool' lvalue Var 0x5616515a4648 'y$w_buff0_used' '_Bool'
|   |                 | | | `-UnaryOperator 0x5616515a9bb8 <col:155, col:156> 'int' prefix '!' cannot overflow
|   |                 | | |   `-ImplicitCastExpr 0x5616515a9ba0 <col:156> '_Bool' <LValueToRValue>
|   |                 | | |     `-DeclRefExpr 0x5616515a9b80 <col:156> '_Bool' lvalue Var 0x5616515a4458 'y$r_buff1_thd3' '_Bool'
|   |                 | | `-ImplicitCastExpr 0x5616515a9c58 <col:174> 'int' <IntegralCast>
|   |                 | |   `-ImplicitCastExpr 0x5616515a9c40 <col:174> '_Bool' <LValueToRValue>
|   |                 | |     `-DeclRefExpr 0x5616515a9c20 <col:174> '_Bool' lvalue Var 0x5616515a4740 'y$w_buff1_used' '_Bool'
|   |                 | `-UnaryOperator 0x5616515a9cc8 <col:192, col:193> 'int' prefix '!' cannot overflow
|   |                 |   `-ImplicitCastExpr 0x5616515a9cb0 <col:193> '_Bool' <LValueToRValue>
|   |                 |     `-DeclRefExpr 0x5616515a9c90 <col:193> '_Bool' lvalue Var 0x5616515a4278 'y$r_buff0_thd3' '_Bool'
|   |                 |-BinaryOperator 0x5616515a9da0 <col:210, col:228> 'int' '||'
|   |                 | |-ImplicitCastExpr 0x5616515a9d88 <col:210> 'int' <IntegralCast>
|   |                 | | `-ImplicitCastExpr 0x5616515a9d70 <col:210> '_Bool' <LValueToRValue>
|   |                 | |   `-DeclRefExpr 0x5616515a9d00 <col:210> '_Bool' lvalue Var 0x5616515a48d8 'weak$$choice0' '_Bool'
|   |                 | `-UnaryOperator 0x5616515a9d58 <col:227, col:228> 'int' prefix '!' cannot overflow
|   |                 |   `-ImplicitCastExpr 0x5616515a9d40 <col:228> '_Bool' <LValueToRValue>
|   |                 |     `-DeclRefExpr 0x5616515a9d20 <col:228> '_Bool' lvalue Var 0x5616515a4950 'weak$$choice1' '_Bool'
|   |                 `-ParenExpr 0x5616515aa030 <col:244, col:346> 'int'
|   |                   `-ConditionalOperator 0x5616515aa000 <col:245, col:333> 'int'
|   |                     |-BinaryOperator 0x5616515a9f40 <col:245, col:300> 'int' '&&'
|   |                     | |-BinaryOperator 0x5616515a9ed0 <col:245, col:281> 'int' '&&'
|   |                     | | |-BinaryOperator 0x5616515a9e60 <col:245, col:263> 'int' '&&'
|   |                     | | | |-ImplicitCastExpr 0x5616515a9e18 <col:245> 'int' <IntegralCast>
|   |                     | | | | `-ImplicitCastExpr 0x5616515a9e00 <col:245> '_Bool' <LValueToRValue>
|   |                     | | | |   `-DeclRefExpr 0x5616515a9dc0 <col:245> '_Bool' lvalue Var 0x5616515a4648 'y$w_buff0_used' '_Bool'
|   |                     | | | `-ImplicitCastExpr 0x5616515a9e48 <col:263> 'int' <IntegralCast>
|   |                     | | |   `-ImplicitCastExpr 0x5616515a9e30 <col:263> '_Bool' <LValueToRValue>
|   |                     | | |     `-DeclRefExpr 0x5616515a9de0 <col:263> '_Bool' lvalue Var 0x5616515a4458 'y$r_buff1_thd3' '_Bool'
|   |                     | | `-ImplicitCastExpr 0x5616515a9eb8 <col:281> 'int' <IntegralCast>
|   |                     | |   `-ImplicitCastExpr 0x5616515a9ea0 <col:281> '_Bool' <LValueToRValue>
|   |                     | |     `-DeclRefExpr 0x5616515a9e80 <col:281> '_Bool' lvalue Var 0x5616515a4740 'y$w_buff1_used' '_Bool'
|   |                     | `-UnaryOperator 0x5616515a9f28 <col:299, col:300> 'int' prefix '!' cannot overflow
|   |                     |   `-ImplicitCastExpr 0x5616515a9f10 <col:300> '_Bool' <LValueToRValue>
|   |                     |     `-DeclRefExpr 0x5616515a9ef0 <col:300> '_Bool' lvalue Var 0x5616515a4278 'y$r_buff0_thd3' '_Bool'
|   |                     |-ImplicitCastExpr 0x5616515a9fb8 <col:317> 'int' <IntegralCast>
|   |                     | `-ImplicitCastExpr 0x5616515a9fa0 <col:317> '_Bool' <LValueToRValue>
|   |                     |   `-DeclRefExpr 0x5616515a9f60 <col:317> '_Bool' lvalue Var 0x5616515a48d8 'weak$$choice0' '_Bool'
|   |                     `-ImplicitCastExpr 0x5616515a9fe8 <col:333> 'int' <IntegralCast>
|   |                       `-ImplicitCastExpr 0x5616515a9fd0 <col:333> '_Bool' <LValueToRValue>
|   |                         `-DeclRefExpr 0x5616515a9f80 <col:333> '_Bool' lvalue Var 0x5616515a48d8 'weak$$choice0' '_Bool'
|   |-BinaryOperator 0x5616515aaad8 <line:778:3, col:321> '_Bool' '='
|   | |-DeclRefExpr 0x5616515aa250 <col:3> '_Bool' lvalue Var 0x5616515a4740 'y$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x5616515aaac0 <col:20, col:321> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x5616515aaa90 <col:20, col:321> 'int'
|   |     |-ImplicitCastExpr 0x5616515aaa48 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x5616515aaa30 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x5616515aa270 <col:20> '_Bool' lvalue Var 0x5616515a49c8 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x5616515aaa78 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x5616515aaa60 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x5616515aa290 <col:36> '_Bool' lvalue Var 0x5616515a4740 'y$w_buff1_used' '_Bool'
|   |     `-ParenExpr 0x5616515aaa10 <col:53, col:321> 'int'
|   |       `-ConditionalOperator 0x5616515aa9e0 <col:54, col:320> 'int'
|   |         |-UnaryOperator 0x5616515aa2e8 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | `-ImplicitCastExpr 0x5616515aa2d0 <col:55> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x5616515aa2b0 <col:55> '_Bool' lvalue Var 0x5616515a4648 'y$w_buff0_used' '_Bool'
|   |         |-ImplicitCastExpr 0x5616515aa9c8 <col:72> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x5616515aa9b0 <col:72> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x5616515aa300 <col:72> '_Bool' lvalue Var 0x5616515a4740 'y$w_buff1_used' '_Bool'
|   |         `-ParenExpr 0x5616515aa990 <col:89, col:320> 'int'
|   |           `-ConditionalOperator 0x5616515aa960 <col:90, col:319> 'int'
|   |             |-BinaryOperator 0x5616515aa3c0 <col:90, col:108> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x5616515aa378 <col:90> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x5616515aa360 <col:90> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x5616515aa320 <col:90> '_Bool' lvalue Var 0x5616515a4648 'y$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x5616515aa3a8 <col:108> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x5616515aa390 <col:108> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x5616515aa340 <col:108> '_Bool' lvalue Var 0x5616515a4278 'y$r_buff0_thd3' '_Bool'
|   |             |-ImplicitCastExpr 0x5616515aa948 <col:125, col:132> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x5616515aa410 <col:125, col:132> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x5616515aa3e0 <col:132> 'int' 0
|   |             `-ParenExpr 0x5616515aa928 <col:136, col:319> 'int'
|   |               `-ConditionalOperator 0x5616515aa8f8 <col:137, col:318> 'int'
|   |                 |-BinaryOperator 0x5616515aa5b8 <col:137, col:193> 'int' '&&'
|   |                 | |-BinaryOperator 0x5616515aa548 <col:137, col:174> 'int' '&&'
|   |                 | | |-BinaryOperator 0x5616515aa4d8 <col:137, col:156> 'int' '&&'
|   |                 | | | |-ImplicitCastExpr 0x5616515aa4c0 <col:137> 'int' <IntegralCast>
|   |                 | | | | `-ImplicitCastExpr 0x5616515aa4a8 <col:137> '_Bool' <LValueToRValue>
|   |                 | | | |   `-DeclRefExpr 0x5616515aa438 <col:137> '_Bool' lvalue Var 0x5616515a4648 'y$w_buff0_used' '_Bool'
|   |                 | | | `-UnaryOperator 0x5616515aa490 <col:155, col:156> 'int' prefix '!' cannot overflow
|   |                 | | |   `-ImplicitCastExpr 0x5616515aa478 <col:156> '_Bool' <LValueToRValue>
|   |                 | | |     `-DeclRefExpr 0x5616515aa458 <col:156> '_Bool' lvalue Var 0x5616515a4458 'y$r_buff1_thd3' '_Bool'
|   |                 | | `-ImplicitCastExpr 0x5616515aa530 <col:174> 'int' <IntegralCast>
|   |                 | |   `-ImplicitCastExpr 0x5616515aa518 <col:174> '_Bool' <LValueToRValue>
|   |                 | |     `-DeclRefExpr 0x5616515aa4f8 <col:174> '_Bool' lvalue Var 0x5616515a4740 'y$w_buff1_used' '_Bool'
|   |                 | `-UnaryOperator 0x5616515aa5a0 <col:192, col:193> 'int' prefix '!' cannot overflow
|   |                 |   `-ImplicitCastExpr 0x5616515aa588 <col:193> '_Bool' <LValueToRValue>
|   |                 |     `-DeclRefExpr 0x5616515aa568 <col:193> '_Bool' lvalue Var 0x5616515a4278 'y$r_buff0_thd3' '_Bool'
|   |                 |-ImplicitCastExpr 0x5616515aa8e0 <col:210> 'int' <IntegralCast>
|   |                 | `-ImplicitCastExpr 0x5616515aa8c8 <col:210> '_Bool' <LValueToRValue>
|   |                 |   `-DeclRefExpr 0x5616515aa5d8 <col:210> '_Bool' lvalue Var 0x5616515a48d8 'weak$$choice0' '_Bool'
|   |                 `-ParenExpr 0x5616515aa8a8 <col:226, col:318> 'int'
|   |                   `-ConditionalOperator 0x5616515aa878 <col:227, col:317> 'int'
|   |                     |-BinaryOperator 0x5616515aa778 <col:227, col:282> 'int' '&&'
|   |                     | |-BinaryOperator 0x5616515aa708 <col:227, col:263> 'int' '&&'
|   |                     | | |-BinaryOperator 0x5616515aa698 <col:227, col:245> 'int' '&&'
|   |                     | | | |-ImplicitCastExpr 0x5616515aa650 <col:227> 'int' <IntegralCast>
|   |                     | | | | `-ImplicitCastExpr 0x5616515aa638 <col:227> '_Bool' <LValueToRValue>
|   |                     | | | |   `-DeclRefExpr 0x5616515aa5f8 <col:227> '_Bool' lvalue Var 0x5616515a4648 'y$w_buff0_used' '_Bool'
|   |                     | | | `-ImplicitCastExpr 0x5616515aa680 <col:245> 'int' <IntegralCast>
|   |                     | | |   `-ImplicitCastExpr 0x5616515aa668 <col:245> '_Bool' <LValueToRValue>
|   |                     | | |     `-DeclRefExpr 0x5616515aa618 <col:245> '_Bool' lvalue Var 0x5616515a4458 'y$r_buff1_thd3' '_Bool'
|   |                     | | `-ImplicitCastExpr 0x5616515aa6f0 <col:263> 'int' <IntegralCast>
|   |                     | |   `-ImplicitCastExpr 0x5616515aa6d8 <col:263> '_Bool' <LValueToRValue>
|   |                     | |     `-DeclRefExpr 0x5616515aa6b8 <col:263> '_Bool' lvalue Var 0x5616515a4740 'y$w_buff1_used' '_Bool'
|   |                     | `-UnaryOperator 0x5616515aa760 <col:281, col:282> 'int' prefix '!' cannot overflow
|   |                     |   `-ImplicitCastExpr 0x5616515aa748 <col:282> '_Bool' <LValueToRValue>
|   |                     |     `-DeclRefExpr 0x5616515aa728 <col:282> '_Bool' lvalue Var 0x5616515a4278 'y$r_buff0_thd3' '_Bool'
|   |                     |-ImplicitCastExpr 0x5616515aa848 <col:299, col:306> 'int' <IntegralCast>
|   |                     | `-CStyleCastExpr 0x5616515aa7c8 <col:299, col:306> '_Bool' <IntegralToBoolean>
|   |                     |   `-IntegerLiteral 0x5616515aa798 <col:306> 'int' 0
|   |                     `-ImplicitCastExpr 0x5616515aa860 <col:310, col:317> 'int' <IntegralCast>
|   |                       `-CStyleCastExpr 0x5616515aa820 <col:310, col:317> '_Bool' <IntegralToBoolean>
|   |                         `-IntegerLiteral 0x5616515aa7f0 <col:317> 'int' 0
|   |-BinaryOperator 0x5616515ab398 <line:779:3, col:322> '_Bool' '='
|   | |-DeclRefExpr 0x5616515aaaf8 <col:3> '_Bool' lvalue Var 0x5616515a4278 'y$r_buff0_thd3' '_Bool'
|   | `-ImplicitCastExpr 0x5616515ab380 <col:20, col:322> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x5616515ab350 <col:20, col:322> 'int'
|   |     |-ImplicitCastExpr 0x5616515ab308 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x5616515ab2f0 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x5616515aab18 <col:20> '_Bool' lvalue Var 0x5616515a49c8 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x5616515ab338 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x5616515ab320 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x5616515aab38 <col:36> '_Bool' lvalue Var 0x5616515a4278 'y$r_buff0_thd3' '_Bool'
|   |     `-ParenExpr 0x5616515ab2d0 <col:53, col:322> 'int'
|   |       `-ConditionalOperator 0x5616515ab2a0 <col:54, col:321> 'int'
|   |         |-UnaryOperator 0x5616515aaba8 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | `-ImplicitCastExpr 0x5616515aab90 <col:55> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x5616515aab70 <col:55> '_Bool' lvalue Var 0x5616515a4648 'y$w_buff0_used' '_Bool'
|   |         |-ImplicitCastExpr 0x5616515ab288 <col:72> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x5616515ab270 <col:72> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x5616515aabc0 <col:72> '_Bool' lvalue Var 0x5616515a4278 'y$r_buff0_thd3' '_Bool'
|   |         `-ParenExpr 0x5616515ab250 <col:89, col:321> 'int'
|   |           `-ConditionalOperator 0x5616515ab220 <col:90, col:320> 'int'
|   |             |-BinaryOperator 0x5616515aac80 <col:90, col:108> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x5616515aac38 <col:90> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x5616515aac20 <col:90> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x5616515aabe0 <col:90> '_Bool' lvalue Var 0x5616515a4648 'y$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x5616515aac68 <col:108> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x5616515aac50 <col:108> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x5616515aac00 <col:108> '_Bool' lvalue Var 0x5616515a4278 'y$r_buff0_thd3' '_Bool'
|   |             |-ImplicitCastExpr 0x5616515ab208 <col:125, col:132> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x5616515aacd0 <col:125, col:132> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x5616515aaca0 <col:132> 'int' 0
|   |             `-ParenExpr 0x5616515ab1e8 <col:136, col:320> 'int'
|   |               `-ConditionalOperator 0x5616515ab1b8 <col:137, col:319> 'int'
|   |                 |-BinaryOperator 0x5616515aae78 <col:137, col:193> 'int' '&&'
|   |                 | |-BinaryOperator 0x5616515aae08 <col:137, col:174> 'int' '&&'
|   |                 | | |-BinaryOperator 0x5616515aad98 <col:137, col:156> 'int' '&&'
|   |                 | | | |-ImplicitCastExpr 0x5616515aad80 <col:137> 'int' <IntegralCast>
|   |                 | | | | `-ImplicitCastExpr 0x5616515aad68 <col:137> '_Bool' <LValueToRValue>
|   |                 | | | |   `-DeclRefExpr 0x5616515aacf8 <col:137> '_Bool' lvalue Var 0x5616515a4648 'y$w_buff0_used' '_Bool'
|   |                 | | | `-UnaryOperator 0x5616515aad50 <col:155, col:156> 'int' prefix '!' cannot overflow
|   |                 | | |   `-ImplicitCastExpr 0x5616515aad38 <col:156> '_Bool' <LValueToRValue>
|   |                 | | |     `-DeclRefExpr 0x5616515aad18 <col:156> '_Bool' lvalue Var 0x5616515a4458 'y$r_buff1_thd3' '_Bool'
|   |                 | | `-ImplicitCastExpr 0x5616515aadf0 <col:174> 'int' <IntegralCast>
|   |                 | |   `-ImplicitCastExpr 0x5616515aadd8 <col:174> '_Bool' <LValueToRValue>
|   |                 | |     `-DeclRefExpr 0x5616515aadb8 <col:174> '_Bool' lvalue Var 0x5616515a4740 'y$w_buff1_used' '_Bool'
|   |                 | `-UnaryOperator 0x5616515aae60 <col:192, col:193> 'int' prefix '!' cannot overflow
|   |                 |   `-ImplicitCastExpr 0x5616515aae48 <col:193> '_Bool' <LValueToRValue>
|   |                 |     `-DeclRefExpr 0x5616515aae28 <col:193> '_Bool' lvalue Var 0x5616515a4278 'y$r_buff0_thd3' '_Bool'
|   |                 |-ImplicitCastExpr 0x5616515ab1a0 <col:210> 'int' <IntegralCast>
|   |                 | `-ImplicitCastExpr 0x5616515ab188 <col:210> '_Bool' <LValueToRValue>
|   |                 |   `-DeclRefExpr 0x5616515aae98 <col:210> '_Bool' lvalue Var 0x5616515a4278 'y$r_buff0_thd3' '_Bool'
|   |                 `-ParenExpr 0x5616515ab168 <col:227, col:319> 'int'
|   |                   `-ConditionalOperator 0x5616515ab138 <col:228, col:318> 'int'
|   |                     |-BinaryOperator 0x5616515ab038 <col:228, col:283> 'int' '&&'
|   |                     | |-BinaryOperator 0x5616515aafc8 <col:228, col:264> 'int' '&&'
|   |                     | | |-BinaryOperator 0x5616515aaf58 <col:228, col:246> 'int' '&&'
|   |                     | | | |-ImplicitCastExpr 0x5616515aaf10 <col:228> 'int' <IntegralCast>
|   |                     | | | | `-ImplicitCastExpr 0x5616515aaef8 <col:228> '_Bool' <LValueToRValue>
|   |                     | | | |   `-DeclRefExpr 0x5616515aaeb8 <col:228> '_Bool' lvalue Var 0x5616515a4648 'y$w_buff0_used' '_Bool'
|   |                     | | | `-ImplicitCastExpr 0x5616515aaf40 <col:246> 'int' <IntegralCast>
|   |                     | | |   `-ImplicitCastExpr 0x5616515aaf28 <col:246> '_Bool' <LValueToRValue>
|   |                     | | |     `-DeclRefExpr 0x5616515aaed8 <col:246> '_Bool' lvalue Var 0x5616515a4458 'y$r_buff1_thd3' '_Bool'
|   |                     | | `-ImplicitCastExpr 0x5616515aafb0 <col:264> 'int' <IntegralCast>
|   |                     | |   `-ImplicitCastExpr 0x5616515aaf98 <col:264> '_Bool' <LValueToRValue>
|   |                     | |     `-DeclRefExpr 0x5616515aaf78 <col:264> '_Bool' lvalue Var 0x5616515a4740 'y$w_buff1_used' '_Bool'
|   |                     | `-UnaryOperator 0x5616515ab020 <col:282, col:283> 'int' prefix '!' cannot overflow
|   |                     |   `-ImplicitCastExpr 0x5616515ab008 <col:283> '_Bool' <LValueToRValue>
|   |                     |     `-DeclRefExpr 0x5616515aafe8 <col:283> '_Bool' lvalue Var 0x5616515a4278 'y$r_buff0_thd3' '_Bool'
|   |                     |-ImplicitCastExpr 0x5616515ab108 <col:300, col:307> 'int' <IntegralCast>
|   |                     | `-CStyleCastExpr 0x5616515ab088 <col:300, col:307> '_Bool' <IntegralToBoolean>
|   |                     |   `-IntegerLiteral 0x5616515ab058 <col:307> 'int' 0
|   |                     `-ImplicitCastExpr 0x5616515ab120 <col:311, col:318> 'int' <IntegralCast>
|   |                       `-CStyleCastExpr 0x5616515ab0e0 <col:311, col:318> '_Bool' <IntegralToBoolean>
|   |                         `-IntegerLiteral 0x5616515ab0b0 <col:318> 'int' 0
|   |-BinaryOperator 0x5616515abd60 <line:780:3, col:351> '_Bool' '='
|   | |-DeclRefExpr 0x5616515ab3b8 <col:3> '_Bool' lvalue Var 0x5616515a4458 'y$r_buff1_thd3' '_Bool'
|   | `-ImplicitCastExpr 0x5616515abd48 <col:20, col:351> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x5616515abd18 <col:20, col:351> 'int'
|   |     |-ImplicitCastExpr 0x5616515abcd0 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x5616515abcb8 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x5616515ab3d8 <col:20> '_Bool' lvalue Var 0x5616515a49c8 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x5616515abd00 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x5616515abce8 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x5616515ab3f8 <col:36> '_Bool' lvalue Var 0x5616515a4458 'y$r_buff1_thd3' '_Bool'
|   |     `-ParenExpr 0x5616515abc98 <col:53, col:351> 'int'
|   |       `-ConditionalOperator 0x5616515abc68 <col:54, col:350> 'int'
|   |         |-UnaryOperator 0x5616515ab450 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | `-ImplicitCastExpr 0x5616515ab438 <col:55> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x5616515ab418 <col:55> '_Bool' lvalue Var 0x5616515a4648 'y$w_buff0_used' '_Bool'
|   |         |-ImplicitCastExpr 0x5616515abc50 <col:72> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x5616515abc38 <col:72> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x5616515ab468 <col:72> '_Bool' lvalue Var 0x5616515a4458 'y$r_buff1_thd3' '_Bool'
|   |         `-ParenExpr 0x5616515abc18 <col:89, col:350> 'int'
|   |           `-ConditionalOperator 0x5616515abbe8 <col:90, col:349> 'int'
|   |             |-BinaryOperator 0x5616515ab528 <col:90, col:108> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x5616515ab4e0 <col:90> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x5616515ab4c8 <col:90> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x5616515ab488 <col:90> '_Bool' lvalue Var 0x5616515a4648 'y$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x5616515ab510 <col:108> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x5616515ab4f8 <col:108> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x5616515ab4a8 <col:108> '_Bool' lvalue Var 0x5616515a4278 'y$r_buff0_thd3' '_Bool'
|   |             |-ImplicitCastExpr 0x5616515abbd0 <col:125, col:132> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x5616515ab578 <col:125, col:132> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x5616515ab548 <col:132> 'int' 0
|   |             `-ParenExpr 0x5616515abbb0 <col:136, col:349> 'int'
|   |               `-ConditionalOperator 0x5616515abb80 <col:137, col:348> 'int'
|   |                 |-BinaryOperator 0x5616515ab720 <col:137, col:193> 'int' '&&'
|   |                 | |-BinaryOperator 0x5616515ab6b0 <col:137, col:174> 'int' '&&'
|   |                 | | |-BinaryOperator 0x5616515ab640 <col:137, col:156> 'int' '&&'
|   |                 | | | |-ImplicitCastExpr 0x5616515ab628 <col:137> 'int' <IntegralCast>
|   |                 | | | | `-ImplicitCastExpr 0x5616515ab610 <col:137> '_Bool' <LValueToRValue>
|   |                 | | | |   `-DeclRefExpr 0x5616515ab5a0 <col:137> '_Bool' lvalue Var 0x5616515a4648 'y$w_buff0_used' '_Bool'
|   |                 | | | `-UnaryOperator 0x5616515ab5f8 <col:155, col:156> 'int' prefix '!' cannot overflow
|   |                 | | |   `-ImplicitCastExpr 0x5616515ab5e0 <col:156> '_Bool' <LValueToRValue>
|   |                 | | |     `-DeclRefExpr 0x5616515ab5c0 <col:156> '_Bool' lvalue Var 0x5616515a4458 'y$r_buff1_thd3' '_Bool'
|   |                 | | `-ImplicitCastExpr 0x5616515ab698 <col:174> 'int' <IntegralCast>
|   |                 | |   `-ImplicitCastExpr 0x5616515ab680 <col:174> '_Bool' <LValueToRValue>
|   |                 | |     `-DeclRefExpr 0x5616515ab660 <col:174> '_Bool' lvalue Var 0x5616515a4740 'y$w_buff1_used' '_Bool'
|   |                 | `-UnaryOperator 0x5616515ab708 <col:192, col:193> 'int' prefix '!' cannot overflow
|   |                 |   `-ImplicitCastExpr 0x5616515ab6f0 <col:193> '_Bool' <LValueToRValue>
|   |                 |     `-DeclRefExpr 0x5616515ab6d0 <col:193> '_Bool' lvalue Var 0x5616515a4278 'y$r_buff0_thd3' '_Bool'
|   |                 |-ParenExpr 0x5616515ab880 <col:210, col:252> 'int'
|   |                 | `-ConditionalOperator 0x5616515ab850 <col:211, col:251> 'int'
|   |                 |   |-ImplicitCastExpr 0x5616515ab7f0 <col:211> 'int' <IntegralCast>
|   |                 |   | `-ImplicitCastExpr 0x5616515ab7d8 <col:211> '_Bool' <LValueToRValue>
|   |                 |   |   `-DeclRefExpr 0x5616515ab740 <col:211> '_Bool' lvalue Var 0x5616515a48d8 'weak$$choice0' '_Bool'
|   |                 |   |-ImplicitCastExpr 0x5616515ab820 <col:227> 'int' <IntegralCast>
|   |                 |   | `-ImplicitCastExpr 0x5616515ab808 <col:227> '_Bool' <LValueToRValue>
|   |                 |   |   `-DeclRefExpr 0x5616515ab760 <col:227> '_Bool' lvalue Var 0x5616515a4458 'y$r_buff1_thd3' '_Bool'
|   |                 |   `-ImplicitCastExpr 0x5616515ab838 <col:244, col:251> 'int' <IntegralCast>
|   |                 |     `-CStyleCastExpr 0x5616515ab7b0 <col:244, col:251> '_Bool' <IntegralToBoolean>
|   |                 |       `-IntegerLiteral 0x5616515ab780 <col:251> 'int' 0
|   |                 `-ParenExpr 0x5616515abb50 <col:256, col:348> 'int'
|   |                   `-ConditionalOperator 0x5616515abb20 <col:257, col:347> 'int'
|   |                     |-BinaryOperator 0x5616515aba20 <col:257, col:312> 'int' '&&'
|   |                     | |-BinaryOperator 0x5616515ab9b0 <col:257, col:293> 'int' '&&'
|   |                     | | |-BinaryOperator 0x5616515ab940 <col:257, col:275> 'int' '&&'
|   |                     | | | |-ImplicitCastExpr 0x5616515ab8f8 <col:257> 'int' <IntegralCast>
|   |                     | | | | `-ImplicitCastExpr 0x5616515ab8e0 <col:257> '_Bool' <LValueToRValue>
|   |                     | | | |   `-DeclRefExpr 0x5616515ab8a0 <col:257> '_Bool' lvalue Var 0x5616515a4648 'y$w_buff0_used' '_Bool'
|   |                     | | | `-ImplicitCastExpr 0x5616515ab928 <col:275> 'int' <IntegralCast>
|   |                     | | |   `-ImplicitCastExpr 0x5616515ab910 <col:275> '_Bool' <LValueToRValue>
|   |                     | | |     `-DeclRefExpr 0x5616515ab8c0 <col:275> '_Bool' lvalue Var 0x5616515a4458 'y$r_buff1_thd3' '_Bool'
|   |                     | | `-ImplicitCastExpr 0x5616515ab998 <col:293> 'int' <IntegralCast>
|   |                     | |   `-ImplicitCastExpr 0x5616515ab980 <col:293> '_Bool' <LValueToRValue>
|   |                     | |     `-DeclRefExpr 0x5616515ab960 <col:293> '_Bool' lvalue Var 0x5616515a4740 'y$w_buff1_used' '_Bool'
|   |                     | `-UnaryOperator 0x5616515aba08 <col:311, col:312> 'int' prefix '!' cannot overflow
|   |                     |   `-ImplicitCastExpr 0x5616515ab9f0 <col:312> '_Bool' <LValueToRValue>
|   |                     |     `-DeclRefExpr 0x5616515ab9d0 <col:312> '_Bool' lvalue Var 0x5616515a4278 'y$r_buff0_thd3' '_Bool'
|   |                     |-ImplicitCastExpr 0x5616515abaf0 <col:329, col:336> 'int' <IntegralCast>
|   |                     | `-CStyleCastExpr 0x5616515aba70 <col:329, col:336> '_Bool' <IntegralToBoolean>
|   |                     |   `-IntegerLiteral 0x5616515aba40 <col:336> 'int' 0
|   |                     `-ImplicitCastExpr 0x5616515abb08 <col:340, col:347> 'int' <IntegralCast>
|   |                       `-CStyleCastExpr 0x5616515abac8 <col:340, col:347> '_Bool' <IntegralToBoolean>
|   |                         `-IntegerLiteral 0x5616515aba98 <col:347> 'int' 0
|   |-BinaryOperator 0x5616515abdf8 <line:781:3, col:45> '_Bool' '='
|   | |-DeclRefExpr 0x5616515abd80 <col:3> '_Bool' lvalue Var 0x5616515a39d0 '__unbuffered_p2_EAX$read_delayed' '_Bool'
|   | `-CStyleCastExpr 0x5616515abdd0 <col:38, col:45> '_Bool' <IntegralToBoolean>
|   |   `-IntegerLiteral 0x5616515abda0 <col:45> 'int' 1
|   |-BinaryOperator 0x5616515abe70 <line:782:3, col:43> 'int *' '='
|   | |-DeclRefExpr 0x5616515abe18 <col:3> 'int *' lvalue Var 0x5616515a3a50 '__unbuffered_p2_EAX$read_delayed_var' 'int *'
|   | `-UnaryOperator 0x5616515abe58 <col:42, col:43> 'int *' prefix '&' cannot overflow
|   |   `-DeclRefExpr 0x5616515abe38 <col:43> 'int' lvalue Var 0x5616515a3f80 'y' 'int'
|   |-BinaryOperator 0x5616515abee8 <line:783:3, col:25> 'int' '='
|   | |-DeclRefExpr 0x5616515abe90 <col:3> 'int' lvalue Var 0x5616515a3480 '__unbuffered_p2_EAX' 'int'
|   | `-ImplicitCastExpr 0x5616515abed0 <col:25> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x5616515abeb0 <col:25> 'int' lvalue Var 0x5616515a3f80 'y' 'int'
|   |-BinaryOperator 0x5616515ac018 <line:784:3, col:37> 'int' '='
|   | |-DeclRefExpr 0x5616515abf08 <col:3> 'int' lvalue Var 0x5616515a3f80 'y' 'int'
|   | `-ConditionalOperator 0x5616515abfe8 <col:7, col:37> 'int'
|   |   |-ImplicitCastExpr 0x5616515abfa0 <col:7> 'int' <IntegralCast>
|   |   | `-ImplicitCastExpr 0x5616515abf88 <col:7> '_Bool' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x5616515abf28 <col:7> '_Bool' lvalue Var 0x5616515a4018 'y$flush_delayed' '_Bool'
|   |   |-ImplicitCastExpr 0x5616515abfb8 <col:25> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x5616515abf48 <col:25> 'int' lvalue Var 0x5616515a4098 'y$mem_tmp' 'int'
|   |   `-ImplicitCastExpr 0x5616515abfd0 <col:37> 'int' <LValueToRValue>
|   |     `-DeclRefExpr 0x5616515abf68 <col:37> 'int' lvalue Var 0x5616515a3f80 'y' 'int'
|   |-BinaryOperator 0x5616515ac0b0 <line:785:3, col:28> '_Bool' '='
|   | |-DeclRefExpr 0x5616515ac038 <col:3> '_Bool' lvalue Var 0x5616515a4018 'y$flush_delayed' '_Bool'
|   | `-CStyleCastExpr 0x5616515ac088 <col:21, col:28> '_Bool' <IntegralToBoolean>
|   |   `-IntegerLiteral 0x5616515ac058 <col:28> 'int' 0
|   |-CallExpr 0x5616515ac108 <line:786:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x5616515ac0f0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5616515ac0d0 <col:3> 'void ()' Function 0x561651549f00 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x5616515ac160 <line:787:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x5616515ac148 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5616515ac128 <col:3> 'void ()' Function 0x561651549e40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x5616515ac1c0 <line:788:3, col:7> 'int' '='
|   | |-DeclRefExpr 0x5616515ac180 <col:3> 'int' lvalue Var 0x5616515a4840 'z' 'int'
|   | `-IntegerLiteral 0x5616515ac1a0 <col:7> 'int' 1
|   |-CallExpr 0x5616515ac218 <line:789:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x5616515ac200 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5616515ac1e0 <col:3> 'void ()' Function 0x561651549f00 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x5616515ac270 <line:790:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x5616515ac258 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5616515ac238 <col:3> 'void ()' Function 0x561651549e40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x5616515ac558 <line:791:3, col:103> 'int' '='
|   | |-DeclRefExpr 0x5616515ac290 <col:3> 'int' lvalue Var 0x5616515a3f80 'y' 'int'
|   | `-ConditionalOperator 0x5616515ac528 <col:7, col:103> 'int'
|   |   |-BinaryOperator 0x5616515ac350 <col:7, col:25> 'int' '&&'
|   |   | |-ImplicitCastExpr 0x5616515ac308 <col:7> 'int' <IntegralCast>
|   |   | | `-ImplicitCastExpr 0x5616515ac2f0 <col:7> '_Bool' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x5616515ac2b0 <col:7> '_Bool' lvalue Var 0x5616515a4648 'y$w_buff0_used' '_Bool'
|   |   | `-ImplicitCastExpr 0x5616515ac338 <col:25> 'int' <IntegralCast>
|   |   |   `-ImplicitCastExpr 0x5616515ac320 <col:25> '_Bool' <LValueToRValue>
|   |   |     `-DeclRefExpr 0x5616515ac2d0 <col:25> '_Bool' lvalue Var 0x5616515a4278 'y$r_buff0_thd3' '_Bool'
|   |   |-ImplicitCastExpr 0x5616515ac510 <col:42> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x5616515ac370 <col:42> 'int' lvalue Var 0x5616515a45d0 'y$w_buff0' 'int'
|   |   `-ParenExpr 0x5616515ac4f0 <col:54, col:103> 'int'
|   |     `-ConditionalOperator 0x5616515ac4c0 <col:55, col:102> 'int'
|   |       |-BinaryOperator 0x5616515ac430 <col:55, col:73> 'int' '&&'
|   |       | |-ImplicitCastExpr 0x5616515ac3e8 <col:55> 'int' <IntegralCast>
|   |       | | `-ImplicitCastExpr 0x5616515ac3d0 <col:55> '_Bool' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x5616515ac390 <col:55> '_Bool' lvalue Var 0x5616515a4740 'y$w_buff1_used' '_Bool'
|   |       | `-ImplicitCastExpr 0x5616515ac418 <col:73> 'int' <IntegralCast>
|   |       |   `-ImplicitCastExpr 0x5616515ac400 <col:73> '_Bool' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x5616515ac3b0 <col:73> '_Bool' lvalue Var 0x5616515a4458 'y$r_buff1_thd3' '_Bool'
|   |       |-ImplicitCastExpr 0x5616515ac490 <col:90> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x5616515ac450 <col:90> 'int' lvalue Var 0x5616515a46c8 'y$w_buff1' 'int'
|   |       `-ImplicitCastExpr 0x5616515ac4a8 <col:102> 'int' <LValueToRValue>
|   |         `-DeclRefExpr 0x5616515ac470 <col:102> 'int' lvalue Var 0x5616515a3f80 'y' 'int'
|   |-BinaryOperator 0x5616515ac760 <line:792:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x5616515ac578 <col:3> '_Bool' lvalue Var 0x5616515a4648 'y$w_buff0_used' '_Bool'
|   | `-ImplicitCastExpr 0x5616515ac748 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x5616515ac718 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x5616515ac638 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x5616515ac5f0 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x5616515ac5d8 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x5616515ac598 <col:20> '_Bool' lvalue Var 0x5616515a4648 'y$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x5616515ac620 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x5616515ac608 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x5616515ac5b8 <col:38> '_Bool' lvalue Var 0x5616515a4278 'y$r_buff0_thd3' '_Bool'
|   |     |-ImplicitCastExpr 0x5616515ac6d0 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x5616515ac688 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x5616515ac658 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x5616515ac700 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x5616515ac6e8 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x5616515ac6b0 <col:66> '_Bool' lvalue Var 0x5616515a4648 'y$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x5616515aca48 <line:793:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x5616515ac780 <col:3> '_Bool' lvalue Var 0x5616515a4740 'y$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x5616515aca30 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x5616515aca00 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x5616515ac920 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x5616515ac840 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x5616515ac7f8 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x5616515ac7e0 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x5616515ac7a0 <col:20> '_Bool' lvalue Var 0x5616515a4648 'y$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x5616515ac828 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x5616515ac810 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x5616515ac7c0 <col:38> '_Bool' lvalue Var 0x5616515a4278 'y$r_buff0_thd3' '_Bool'
|   |     | `-BinaryOperator 0x5616515ac900 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x5616515ac8b8 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x5616515ac8a0 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x5616515ac860 <col:56> '_Bool' lvalue Var 0x5616515a4740 'y$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x5616515ac8e8 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x5616515ac8d0 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x5616515ac880 <col:74> '_Bool' lvalue Var 0x5616515a4458 'y$r_buff1_thd3' '_Bool'
|   |     |-ImplicitCastExpr 0x5616515ac9b8 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x5616515ac970 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x5616515ac940 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x5616515ac9e8 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x5616515ac9d0 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x5616515ac998 <col:102> '_Bool' lvalue Var 0x5616515a4740 'y$w_buff1_used' '_Bool'
|   |-BinaryOperator 0x5616515acc68 <line:794:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x5616515aca68 <col:3> '_Bool' lvalue Var 0x5616515a4278 'y$r_buff0_thd3' '_Bool'
|   | `-ImplicitCastExpr 0x5616515acc50 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x5616515acc20 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x5616515acb28 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x5616515acae0 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x5616515acac8 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x5616515aca88 <col:20> '_Bool' lvalue Var 0x5616515a4648 'y$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x5616515acb10 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x5616515acaf8 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x5616515acaa8 <col:38> '_Bool' lvalue Var 0x5616515a4278 'y$r_buff0_thd3' '_Bool'
|   |     |-ImplicitCastExpr 0x5616515acbd8 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x5616515acb90 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x5616515acb48 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x5616515acc08 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x5616515acbf0 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x5616515acbb8 <col:66> '_Bool' lvalue Var 0x5616515a4278 'y$r_buff0_thd3' '_Bool'
|   |-BinaryOperator 0x5616515acf50 <line:795:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x5616515acc88 <col:3> '_Bool' lvalue Var 0x5616515a4458 'y$r_buff1_thd3' '_Bool'
|   | `-ImplicitCastExpr 0x5616515acf38 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x5616515acf08 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x5616515ace28 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x5616515acd48 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x5616515acd00 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x5616515acce8 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x5616515acca8 <col:20> '_Bool' lvalue Var 0x5616515a4648 'y$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x5616515acd30 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x5616515acd18 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x5616515accc8 <col:38> '_Bool' lvalue Var 0x5616515a4278 'y$r_buff0_thd3' '_Bool'
|   |     | `-BinaryOperator 0x5616515ace08 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x5616515acdc0 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x5616515acda8 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x5616515acd68 <col:56> '_Bool' lvalue Var 0x5616515a4740 'y$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x5616515acdf0 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x5616515acdd8 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x5616515acd88 <col:74> '_Bool' lvalue Var 0x5616515a4458 'y$r_buff1_thd3' '_Bool'
|   |     |-ImplicitCastExpr 0x5616515acec0 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x5616515ace78 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x5616515ace48 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x5616515acef0 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x5616515aced8 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x5616515acea0 <col:102> '_Bool' lvalue Var 0x5616515a4458 'y$r_buff1_thd3' '_Bool'
|   |-CallExpr 0x5616515acfa8 <line:796:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x5616515acf90 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5616515acf70 <col:3> 'void ()' Function 0x561651549f00 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x5616515ad000 <line:797:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x5616515acfe8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5616515acfc8 <col:3> 'void ()' Function 0x561651549e40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x5616515ad0b8 <line:798:3, col:41> 'int' '='
|   | |-DeclRefExpr 0x5616515ad020 <col:3> 'int' lvalue Var 0x5616515a3120 '__unbuffered_cnt' 'int'
|   | `-BinaryOperator 0x5616515ad098 <col:22, col:41> 'int' '+'
|   |   |-ImplicitCastExpr 0x5616515ad080 <col:22> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x5616515ad040 <col:22> 'int' lvalue Var 0x5616515a3120 '__unbuffered_cnt' 'int'
|   |   `-IntegerLiteral 0x5616515ad060 <col:41> 'int' 1
|   |-CallExpr 0x5616515ad110 <line:799:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x5616515ad0f8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5616515ad0d8 <col:3> 'void ()' Function 0x561651549f00 '__VERIFIER_atomic_end' 'void ()'
|   `-ReturnStmt 0x5616515ad188 <line:800:3, col:36>
|     `-CallExpr 0x5616515ad168 <col:10, col:36> 'void *'
|       `-ImplicitCastExpr 0x5616515ad150 <col:10> 'void *(*)(void)' <FunctionToPointerDecay>
|         `-DeclRefExpr 0x5616515ad130 <col:10> 'void *(void)' Function 0x561651549958 '__VERIFIER_nondet_pointer' 'void *(void)'
|-FunctionDecl 0x5616515ad2d0 prev 0x5616515a2e68 <line:802:1, line:804:1> line:802:6 fence 'void ()'
| `-CompoundStmt 0x5616515ad370 <line:803:1, line:804:1>
|-FunctionDecl 0x5616515ad3a0 prev 0x5616515a2f28 <line:805:1, line:807:1> line:805:6 isync 'void ()'
| `-CompoundStmt 0x5616515ad440 <line:806:1, line:807:1>
|-FunctionDecl 0x5616515ad470 prev 0x5616515a2fe8 <line:808:1, line:810:1> line:808:6 lwfence 'void ()'
| `-CompoundStmt 0x5616515ad510 <line:809:1, line:810:1>
`-FunctionDecl 0x5616515ad578 <line:811:1, line:837:1> line:811:5 main 'int ()'
  `-CompoundStmt 0x5616515af4c0 <line:812:1, line:837:1>
    |-DeclStmt 0x5616515ad690 <line:813:3, col:18>
    | `-VarDecl 0x5616515ad628 <col:3, col:13> col:13 used t2686 'pthread_t':'unsigned long'
    |-CallExpr 0x5616515ad898 <line:814:3, col:54> 'int'
    | |-ImplicitCastExpr 0x5616515ad880 <col:3> 'int (*)(pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x5616515ad6a8 <col:3> 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' Function 0x56165158a488 'pthread_create' 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)'
    | |-UnaryOperator 0x5616515ad6e8 <col:18, col:19> 'pthread_t *' prefix '&' cannot overflow
    | | `-DeclRefExpr 0x5616515ad6c8 <col:19> 'pthread_t':'unsigned long' lvalue Var 0x5616515ad628 't2686' 'pthread_t':'unsigned long'
    | |-ImplicitCastExpr 0x5616515ad8d8 <col:26, col:36> 'const pthread_attr_t *' <NullToPointer>
    | | `-ParenExpr 0x5616515ad760 <col:26, col:36> 'void *'
    | |   `-CStyleCastExpr 0x5616515ad738 <col:27, col:35> 'void *' <NullToPointer>
    | |     `-IntegerLiteral 0x5616515ad700 <col:35> 'int' 0
    | |-ImplicitCastExpr 0x5616515ad8f0 <col:39> 'void *(*)(void *)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x5616515ad780 <col:39> 'void *(void *)' Function 0x5616515a5b20 'P0' 'void *(void *)'
    | `-ParenExpr 0x5616515ad800 <col:43, col:53> 'void *'
    |   `-CStyleCastExpr 0x5616515ad7d8 <col:44, col:52> 'void *' <NullToPointer>
    |     `-IntegerLiteral 0x5616515ad7a0 <col:52> 'int' 0
    |-DeclStmt 0x5616515ad980 <line:815:3, col:18>
    | `-VarDecl 0x5616515ad918 <col:3, col:13> col:13 used t2687 'pthread_t':'unsigned long'
    |-CallExpr 0x5616515adb28 <line:816:3, col:54> 'int'
    | |-ImplicitCastExpr 0x5616515adb10 <col:3> 'int (*)(pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x5616515ad998 <col:3> 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' Function 0x56165158a488 'pthread_create' 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)'
    | |-UnaryOperator 0x5616515ad9d8 <col:18, col:19> 'pthread_t *' prefix '&' cannot overflow
    | | `-DeclRefExpr 0x5616515ad9b8 <col:19> 'pthread_t':'unsigned long' lvalue Var 0x5616515ad918 't2687' 'pthread_t':'unsigned long'
    | |-ImplicitCastExpr 0x5616515adb68 <col:26, col:36> 'const pthread_attr_t *' <NullToPointer>
    | | `-ParenExpr 0x5616515ada50 <col:26, col:36> 'void *'
    | |   `-CStyleCastExpr 0x5616515ada28 <col:27, col:35> 'void *' <NullToPointer>
    | |     `-IntegerLiteral 0x5616515ad9f0 <col:35> 'int' 0
    | |-ImplicitCastExpr 0x5616515adba0 <col:39> 'void *(*)(void *)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x5616515ada70 <col:39> 'void *(void *)' Function 0x5616515a6208 'P1' 'void *(void *)'
    | `-ParenExpr 0x5616515adaf0 <col:43, col:53> 'void *'
    |   `-CStyleCastExpr 0x5616515adac8 <col:44, col:52> 'void *' <NullToPointer>
    |     `-IntegerLiteral 0x5616515ada90 <col:52> 'int' 0
    |-DeclStmt 0x5616515adc30 <line:817:3, col:18>
    | `-VarDecl 0x5616515adbc8 <col:3, col:13> col:13 used t2688 'pthread_t':'unsigned long'
    |-CallExpr 0x5616515addd8 <line:818:3, col:54> 'int'
    | |-ImplicitCastExpr 0x5616515addc0 <col:3> 'int (*)(pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x5616515adc48 <col:3> 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' Function 0x56165158a488 'pthread_create' 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)'
    | |-UnaryOperator 0x5616515adc88 <col:18, col:19> 'pthread_t *' prefix '&' cannot overflow
    | | `-DeclRefExpr 0x5616515adc68 <col:19> 'pthread_t':'unsigned long' lvalue Var 0x5616515adbc8 't2688' 'pthread_t':'unsigned long'
    | |-ImplicitCastExpr 0x5616515ade18 <col:26, col:36> 'const pthread_attr_t *' <NullToPointer>
    | | `-ParenExpr 0x5616515add00 <col:26, col:36> 'void *'
    | |   `-CStyleCastExpr 0x5616515adcd8 <col:27, col:35> 'void *' <NullToPointer>
    | |     `-IntegerLiteral 0x5616515adca0 <col:35> 'int' 0
    | |-ImplicitCastExpr 0x5616515ade30 <col:39> 'void *(*)(void *)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x5616515add20 <col:39> 'void *(void *)' Function 0x5616515a7bd8 'P2' 'void *(void *)'
    | `-ParenExpr 0x5616515adda0 <col:43, col:53> 'void *'
    |   `-CStyleCastExpr 0x5616515add78 <col:44, col:52> 'void *' <NullToPointer>
    |     `-IntegerLiteral 0x5616515add40 <col:52> 'int' 0
    |-CallExpr 0x5616515ade80 <line:819:3, col:27> 'void'
    | `-ImplicitCastExpr 0x5616515ade68 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x5616515ade48 <col:3> 'void ()' Function 0x561651549e40 '__VERIFIER_atomic_begin' 'void ()'
    |-BinaryOperator 0x5616515adf50 <line:820:3, col:41> '_Bool' '='
    | |-DeclRefExpr 0x5616515adea0 <col:3> '_Bool' lvalue Var 0x5616515a3ce8 'main$tmp_guard0' '_Bool'
    | `-ImplicitCastExpr 0x5616515adf38 <col:21, col:41> '_Bool' <IntegralToBoolean>
    |   `-BinaryOperator 0x5616515adf18 <col:21, col:41> 'int' '=='
    |     |-ImplicitCastExpr 0x5616515adf00 <col:21> 'int' <LValueToRValue>
    |     | `-DeclRefExpr 0x5616515adec0 <col:21> 'int' lvalue Var 0x5616515a3120 '__unbuffered_cnt' 'int'
    |     `-IntegerLiteral 0x5616515adee0 <col:41> 'int' 3
    |-CallExpr 0x5616515adfa8 <line:821:3, col:25> 'void'
    | `-ImplicitCastExpr 0x5616515adf90 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x5616515adf70 <col:3> 'void ()' Function 0x561651549f00 '__VERIFIER_atomic_end' 'void ()'
    |-CallExpr 0x5616515ae020 <line:822:3, col:36> 'void'
    | |-ImplicitCastExpr 0x5616515ae008 <col:3> 'void (*)(int)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x5616515adfc8 <col:3> 'void (int)' Function 0x561651549790 '__VERIFIER_assume' 'void (int)'
    | `-ImplicitCastExpr 0x5616515ae060 <col:21> 'int' <IntegralCast>
    |   `-ImplicitCastExpr 0x5616515ae048 <col:21> '_Bool' <LValueToRValue>
    |     `-DeclRefExpr 0x5616515adfe8 <col:21> '_Bool' lvalue Var 0x5616515a3ce8 'main$tmp_guard0' '_Bool'
    |-CallExpr 0x5616515ae0b0 <line:823:3, col:27> 'void'
    | `-ImplicitCastExpr 0x5616515ae098 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x5616515ae078 <col:3> 'void ()' Function 0x561651549e40 '__VERIFIER_atomic_begin' 'void ()'
    |-BinaryOperator 0x5616515ae398 <line:824:3, col:103> 'int' '='
    | |-DeclRefExpr 0x5616515ae0d0 <col:3> 'int' lvalue Var 0x5616515a3f80 'y' 'int'
    | `-ConditionalOperator 0x5616515ae368 <col:7, col:103> 'int'
    |   |-BinaryOperator 0x5616515ae190 <col:7, col:25> 'int' '&&'
    |   | |-ImplicitCastExpr 0x5616515ae148 <col:7> 'int' <IntegralCast>
    |   | | `-ImplicitCastExpr 0x5616515ae130 <col:7> '_Bool' <LValueToRValue>
    |   | |   `-DeclRefExpr 0x5616515ae0f0 <col:7> '_Bool' lvalue Var 0x5616515a4648 'y$w_buff0_used' '_Bool'
    |   | `-ImplicitCastExpr 0x5616515ae178 <col:25> 'int' <IntegralCast>
    |   |   `-ImplicitCastExpr 0x5616515ae160 <col:25> '_Bool' <LValueToRValue>
    |   |     `-DeclRefExpr 0x5616515ae110 <col:25> '_Bool' lvalue Var 0x5616515a4110 'y$r_buff0_thd0' '_Bool'
    |   |-ImplicitCastExpr 0x5616515ae350 <col:42> 'int' <LValueToRValue>
    |   | `-DeclRefExpr 0x5616515ae1b0 <col:42> 'int' lvalue Var 0x5616515a45d0 'y$w_buff0' 'int'
    |   `-ParenExpr 0x5616515ae330 <col:54, col:103> 'int'
    |     `-ConditionalOperator 0x5616515ae300 <col:55, col:102> 'int'
    |       |-BinaryOperator 0x5616515ae270 <col:55, col:73> 'int' '&&'
    |       | |-ImplicitCastExpr 0x5616515ae228 <col:55> 'int' <IntegralCast>
    |       | | `-ImplicitCastExpr 0x5616515ae210 <col:55> '_Bool' <LValueToRValue>
    |       | |   `-DeclRefExpr 0x5616515ae1d0 <col:55> '_Bool' lvalue Var 0x5616515a4740 'y$w_buff1_used' '_Bool'
    |       | `-ImplicitCastExpr 0x5616515ae258 <col:73> 'int' <IntegralCast>
    |       |   `-ImplicitCastExpr 0x5616515ae240 <col:73> '_Bool' <LValueToRValue>
    |       |     `-DeclRefExpr 0x5616515ae1f0 <col:73> '_Bool' lvalue Var 0x5616515a42f0 'y$r_buff1_thd0' '_Bool'
    |       |-ImplicitCastExpr 0x5616515ae2d0 <col:90> 'int' <LValueToRValue>
    |       | `-DeclRefExpr 0x5616515ae290 <col:90> 'int' lvalue Var 0x5616515a46c8 'y$w_buff1' 'int'
    |       `-ImplicitCastExpr 0x5616515ae2e8 <col:102> 'int' <LValueToRValue>
    |         `-DeclRefExpr 0x5616515ae2b0 <col:102> 'int' lvalue Var 0x5616515a3f80 'y' 'int'
    |-BinaryOperator 0x5616515ae5a0 <line:825:3, col:66> '_Bool' '='
    | |-DeclRefExpr 0x5616515ae3b8 <col:3> '_Bool' lvalue Var 0x5616515a4648 'y$w_buff0_used' '_Bool'
    | `-ImplicitCastExpr 0x5616515ae588 <col:20, col:66> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x5616515ae558 <col:20, col:66> 'int'
    |     |-BinaryOperator 0x5616515ae478 <col:20, col:38> 'int' '&&'
    |     | |-ImplicitCastExpr 0x5616515ae430 <col:20> 'int' <IntegralCast>
    |     | | `-ImplicitCastExpr 0x5616515ae418 <col:20> '_Bool' <LValueToRValue>
    |     | |   `-DeclRefExpr 0x5616515ae3d8 <col:20> '_Bool' lvalue Var 0x5616515a4648 'y$w_buff0_used' '_Bool'
    |     | `-ImplicitCastExpr 0x5616515ae460 <col:38> 'int' <IntegralCast>
    |     |   `-ImplicitCastExpr 0x5616515ae448 <col:38> '_Bool' <LValueToRValue>
    |     |     `-DeclRefExpr 0x5616515ae3f8 <col:38> '_Bool' lvalue Var 0x5616515a4110 'y$r_buff0_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x5616515ae510 <col:55, col:62> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x5616515ae4c8 <col:55, col:62> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x5616515ae498 <col:62> 'int' 0
    |     `-ImplicitCastExpr 0x5616515ae540 <col:66> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x5616515ae528 <col:66> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x5616515ae4f0 <col:66> '_Bool' lvalue Var 0x5616515a4648 'y$w_buff0_used' '_Bool'
    |-BinaryOperator 0x5616515ae888 <line:826:3, col:102> '_Bool' '='
    | |-DeclRefExpr 0x5616515ae5c0 <col:3> '_Bool' lvalue Var 0x5616515a4740 'y$w_buff1_used' '_Bool'
    | `-ImplicitCastExpr 0x5616515ae870 <col:20, col:102> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x5616515ae840 <col:20, col:102> 'int'
    |     |-BinaryOperator 0x5616515ae760 <col:20, col:74> 'int' '||'
    |     | |-BinaryOperator 0x5616515ae680 <col:20, col:38> 'int' '&&'
    |     | | |-ImplicitCastExpr 0x5616515ae638 <col:20> 'int' <IntegralCast>
    |     | | | `-ImplicitCastExpr 0x5616515ae620 <col:20> '_Bool' <LValueToRValue>
    |     | | |   `-DeclRefExpr 0x5616515ae5e0 <col:20> '_Bool' lvalue Var 0x5616515a4648 'y$w_buff0_used' '_Bool'
    |     | | `-ImplicitCastExpr 0x5616515ae668 <col:38> 'int' <IntegralCast>
    |     | |   `-ImplicitCastExpr 0x5616515ae650 <col:38> '_Bool' <LValueToRValue>
    |     | |     `-DeclRefExpr 0x5616515ae600 <col:38> '_Bool' lvalue Var 0x5616515a4110 'y$r_buff0_thd0' '_Bool'
    |     | `-BinaryOperator 0x5616515ae740 <col:56, col:74> 'int' '&&'
    |     |   |-ImplicitCastExpr 0x5616515ae6f8 <col:56> 'int' <IntegralCast>
    |     |   | `-ImplicitCastExpr 0x5616515ae6e0 <col:56> '_Bool' <LValueToRValue>
    |     |   |   `-DeclRefExpr 0x5616515ae6a0 <col:56> '_Bool' lvalue Var 0x5616515a4740 'y$w_buff1_used' '_Bool'
    |     |   `-ImplicitCastExpr 0x5616515ae728 <col:74> 'int' <IntegralCast>
    |     |     `-ImplicitCastExpr 0x5616515ae710 <col:74> '_Bool' <LValueToRValue>
    |     |       `-DeclRefExpr 0x5616515ae6c0 <col:74> '_Bool' lvalue Var 0x5616515a42f0 'y$r_buff1_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x5616515ae7f8 <col:91, col:98> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x5616515ae7b0 <col:91, col:98> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x5616515ae780 <col:98> 'int' 0
    |     `-ImplicitCastExpr 0x5616515ae828 <col:102> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x5616515ae810 <col:102> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x5616515ae7d8 <col:102> '_Bool' lvalue Var 0x5616515a4740 'y$w_buff1_used' '_Bool'
    |-BinaryOperator 0x5616515aea90 <line:827:3, col:66> '_Bool' '='
    | |-DeclRefExpr 0x5616515ae8a8 <col:3> '_Bool' lvalue Var 0x5616515a4110 'y$r_buff0_thd0' '_Bool'
    | `-ImplicitCastExpr 0x5616515aea78 <col:20, col:66> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x5616515aea48 <col:20, col:66> 'int'
    |     |-BinaryOperator 0x5616515ae968 <col:20, col:38> 'int' '&&'
    |     | |-ImplicitCastExpr 0x5616515ae920 <col:20> 'int' <IntegralCast>
    |     | | `-ImplicitCastExpr 0x5616515ae908 <col:20> '_Bool' <LValueToRValue>
    |     | |   `-DeclRefExpr 0x5616515ae8c8 <col:20> '_Bool' lvalue Var 0x5616515a4648 'y$w_buff0_used' '_Bool'
    |     | `-ImplicitCastExpr 0x5616515ae950 <col:38> 'int' <IntegralCast>
    |     |   `-ImplicitCastExpr 0x5616515ae938 <col:38> '_Bool' <LValueToRValue>
    |     |     `-DeclRefExpr 0x5616515ae8e8 <col:38> '_Bool' lvalue Var 0x5616515a4110 'y$r_buff0_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x5616515aea00 <col:55, col:62> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x5616515ae9b8 <col:55, col:62> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x5616515ae988 <col:62> 'int' 0
    |     `-ImplicitCastExpr 0x5616515aea30 <col:66> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x5616515aea18 <col:66> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x5616515ae9e0 <col:66> '_Bool' lvalue Var 0x5616515a4110 'y$r_buff0_thd0' '_Bool'
    |-BinaryOperator 0x5616515aed98 <line:828:3, col:102> '_Bool' '='
    | |-DeclRefExpr 0x5616515aeab0 <col:3> '_Bool' lvalue Var 0x5616515a42f0 'y$r_buff1_thd0' '_Bool'
    | `-ImplicitCastExpr 0x5616515aed80 <col:20, col:102> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x5616515aed50 <col:20, col:102> 'int'
    |     |-BinaryOperator 0x5616515aec70 <col:20, col:74> 'int' '||'
    |     | |-BinaryOperator 0x5616515aeb70 <col:20, col:38> 'int' '&&'
    |     | | |-ImplicitCastExpr 0x5616515aeb28 <col:20> 'int' <IntegralCast>
    |     | | | `-ImplicitCastExpr 0x5616515aeb10 <col:20> '_Bool' <LValueToRValue>
    |     | | |   `-DeclRefExpr 0x5616515aead0 <col:20> '_Bool' lvalue Var 0x5616515a4648 'y$w_buff0_used' '_Bool'
    |     | | `-ImplicitCastExpr 0x5616515aeb58 <col:38> 'int' <IntegralCast>
    |     | |   `-ImplicitCastExpr 0x5616515aeb40 <col:38> '_Bool' <LValueToRValue>
    |     | |     `-DeclRefExpr 0x5616515aeaf0 <col:38> '_Bool' lvalue Var 0x5616515a4110 'y$r_buff0_thd0' '_Bool'
    |     | `-BinaryOperator 0x5616515aec50 <col:56, col:74> 'int' '&&'
    |     |   |-ImplicitCastExpr 0x5616515aec08 <col:56> 'int' <IntegralCast>
    |     |   | `-ImplicitCastExpr 0x5616515aebf0 <col:56> '_Bool' <LValueToRValue>
    |     |   |   `-DeclRefExpr 0x5616515aebb0 <col:56> '_Bool' lvalue Var 0x5616515a4740 'y$w_buff1_used' '_Bool'
    |     |   `-ImplicitCastExpr 0x5616515aec38 <col:74> 'int' <IntegralCast>
    |     |     `-ImplicitCastExpr 0x5616515aec20 <col:74> '_Bool' <LValueToRValue>
    |     |       `-DeclRefExpr 0x5616515aebd0 <col:74> '_Bool' lvalue Var 0x5616515a42f0 'y$r_buff1_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x5616515aed08 <col:91, col:98> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x5616515aecc0 <col:91, col:98> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x5616515aec90 <col:98> 'int' 0
    |     `-ImplicitCastExpr 0x5616515aed38 <col:102> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x5616515aed20 <col:102> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x5616515aece8 <col:102> '_Bool' lvalue Var 0x5616515a42f0 'y$r_buff1_thd0' '_Bool'
    |-CallExpr 0x5616515aedf0 <line:829:3, col:25> 'void'
    | `-ImplicitCastExpr 0x5616515aedd8 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x5616515aedb8 <col:3> 'void ()' Function 0x561651549f00 '__VERIFIER_atomic_end' 'void ()'
    |-CallExpr 0x5616515aee48 <line:830:3, col:27> 'void'
    | `-ImplicitCastExpr 0x5616515aee30 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x5616515aee10 <col:3> 'void ()' Function 0x561651549e40 '__VERIFIER_atomic_begin' 'void ()'
    |-BinaryOperator 0x5616515aeef8 <line:831:3, col:45> '_Bool' '='
    | |-DeclRefExpr 0x5616515aee68 <col:3> '_Bool' lvalue Var 0x5616515a4950 'weak$$choice1' '_Bool'
    | `-ImplicitCastExpr 0x5616515aeee0 <col:19, col:45> '_Bool' <PointerToBoolean>
    |   `-CallExpr 0x5616515aeec0 <col:19, col:45> 'void *'
    |     `-ImplicitCastExpr 0x5616515aeea8 <col:19> 'void *(*)(void)' <FunctionToPointerDecay>
    |       `-DeclRefExpr 0x5616515aee88 <col:19> 'void *(void)' Function 0x561651549958 '__VERIFIER_nondet_pointer' 'void *(void)'
    |-BinaryOperator 0x5616515af130 <line:832:3, col:140> 'int' '='
    | |-DeclRefExpr 0x5616515aef18 <col:3> 'int' lvalue Var 0x5616515a3480 '__unbuffered_p2_EAX' 'int'
    | `-ConditionalOperator 0x5616515af100 <col:25, col:140> 'int'
    |   |-ImplicitCastExpr 0x5616515af0d0 <col:25> 'int' <IntegralCast>
    |   | `-ImplicitCastExpr 0x5616515af0b8 <col:25> '_Bool' <LValueToRValue>
    |   |   `-DeclRefExpr 0x5616515aef38 <col:25> '_Bool' lvalue Var 0x5616515a39d0 '__unbuffered_p2_EAX$read_delayed' '_Bool'
    |   |-ParenExpr 0x5616515af078 <col:60, col:136> 'int'
    |   | `-ConditionalOperator 0x5616515af048 <col:61, col:117> 'int'
    |   |   |-ImplicitCastExpr 0x5616515af000 <col:61> 'int' <IntegralCast>
    |   |   | `-ImplicitCastExpr 0x5616515aefe8 <col:61> '_Bool' <LValueToRValue>
    |   |   |   `-DeclRefExpr 0x5616515aef58 <col:61> '_Bool' lvalue Var 0x5616515a4950 'weak$$choice1' '_Bool'
    |   |   |-ImplicitCastExpr 0x5616515af018 <col:77, col:78> 'int' <LValueToRValue>
    |   |   | `-UnaryOperator 0x5616515aefb0 <col:77, col:78> 'int' lvalue prefix '*' cannot overflow
    |   |   |   `-ImplicitCastExpr 0x5616515aef98 <col:78> 'int *' <LValueToRValue>
    |   |   |     `-DeclRefExpr 0x5616515aef78 <col:78> 'int *' lvalue Var 0x5616515a3a50 '__unbuffered_p2_EAX$read_delayed_var' 'int *'
    |   |   `-ImplicitCastExpr 0x5616515af030 <col:117> 'int' <LValueToRValue>
    |   |     `-DeclRefExpr 0x5616515aefc8 <col:117> 'int' lvalue Var 0x5616515a3480 '__unbuffered_p2_EAX' 'int'
    |   `-ImplicitCastExpr 0x5616515af0e8 <col:140> 'int' <LValueToRValue>
    |     `-DeclRefExpr 0x5616515af098 <col:140> 'int' lvalue Var 0x5616515a3480 '__unbuffered_p2_EAX' 'int'
    |-BinaryOperator 0x5616515af368 <line:833:3, col:103> '_Bool' '='
    | |-DeclRefExpr 0x5616515af150 <col:3> '_Bool' lvalue Var 0x5616515a3d60 'main$tmp_guard1' '_Bool'
    | `-ImplicitCastExpr 0x5616515af350 <col:21, col:103> '_Bool' <IntegralToBoolean>
    |   `-UnaryOperator 0x5616515af338 <col:21, col:103> 'int' prefix '!' cannot overflow
    |     `-ParenExpr 0x5616515af318 <col:22, col:103> 'int'
    |       `-BinaryOperator 0x5616515af2f8 <col:23, col:102> 'int' '&&'
    |         |-BinaryOperator 0x5616515af260 <col:23, col:74> 'int' '&&'
    |         | |-BinaryOperator 0x5616515af1c8 <col:23, col:46> 'int' '=='
    |         | | |-ImplicitCastExpr 0x5616515af1b0 <col:23> 'int' <LValueToRValue>
    |         | | | `-DeclRefExpr 0x5616515af170 <col:23> 'int' lvalue Var 0x5616515a3240 '__unbuffered_p0_EAX' 'int'
    |         | | `-IntegerLiteral 0x5616515af190 <col:46> 'int' 1
    |         | `-BinaryOperator 0x5616515af240 <col:51, col:74> 'int' '=='
    |         |   |-ImplicitCastExpr 0x5616515af228 <col:51> 'int' <LValueToRValue>
    |         |   | `-DeclRefExpr 0x5616515af1e8 <col:51> 'int' lvalue Var 0x5616515a3360 '__unbuffered_p1_EAX' 'int'
    |         |   `-IntegerLiteral 0x5616515af208 <col:74> 'int' 1
    |         `-BinaryOperator 0x5616515af2d8 <col:79, col:102> 'int' '=='
    |           |-ImplicitCastExpr 0x5616515af2c0 <col:79> 'int' <LValueToRValue>
    |           | `-DeclRefExpr 0x5616515af280 <col:79> 'int' lvalue Var 0x5616515a3480 '__unbuffered_p2_EAX' 'int'
    |           `-IntegerLiteral 0x5616515af2a0 <col:102> 'int' 1
    |-CallExpr 0x5616515af3c0 <line:834:3, col:25> 'void'
    | `-ImplicitCastExpr 0x5616515af3a8 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x5616515af388 <col:3> 'void ()' Function 0x561651549f00 '__VERIFIER_atomic_end' 'void ()'
    |-CallExpr 0x5616515af438 <line:835:3, col:36> 'void'
    | |-ImplicitCastExpr 0x5616515af420 <col:3> 'void (*)(int)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x5616515af3e0 <col:3> 'void (int)' Function 0x561651549bc8 '__VERIFIER_assert' 'void (int)'
    | `-ImplicitCastExpr 0x5616515af478 <col:21> 'int' <IntegralCast>
    |   `-ImplicitCastExpr 0x5616515af460 <col:21> '_Bool' <LValueToRValue>
    |     `-DeclRefExpr 0x5616515af400 <col:21> '_Bool' lvalue Var 0x5616515a3d60 'main$tmp_guard1' '_Bool'
    `-ReturnStmt 0x5616515af4b0 <line:836:3, col:10>
      `-IntegerLiteral 0x5616515af490 <col:10> 'int' 0
