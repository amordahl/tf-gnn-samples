TranslationUnitDecl 0x5607359c3e18 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x5607359c46d8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x5607359c43b0 '__int128'
|-TypedefDecl 0x5607359c4748 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x5607359c43d0 'unsigned __int128'
|-TypedefDecl 0x5607359c4a50 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x5607359c4820 'struct __NSConstantString_tag'
|   `-Record 0x5607359c47a0 '__NSConstantString_tag'
|-TypedefDecl 0x5607359c4af8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x5607359c4ab0 'char *'
|   `-BuiltinType 0x5607359c3eb0 'char'
|-TypedefDecl 0x560735a03650 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'struct __va_list_tag [1]'
| `-ConstantArrayType 0x5607359c4d90 'struct __va_list_tag [1]' 1 
|   `-RecordType 0x5607359c4bd0 'struct __va_list_tag'
|     `-Record 0x5607359c4b50 '__va_list_tag'
|-FunctionDecl 0x560735a03790 <./split_0/mix029_power.oepc_false-unreach-call.i:1:1, col:34> col:13 used __VERIFIER_assume 'void (int)' extern
| `-ParmVarDecl 0x560735a036c0 <col:31> col:34 'int'
|-FunctionDecl 0x560735a03958 <line:2:1, col:45> col:15 used __VERIFIER_nondet_pointer 'void *(void)' extern
|-FunctionDecl 0x560735a03a80 <line:3:1, col:61> col:13 used __VERIFIER_error 'void () __attribute__((noreturn))' extern
|-FunctionDecl 0x560735a03bc8 <line:4:1, col:99> col:6 used __VERIFIER_assert 'void (int)'
| |-ParmVarDecl 0x560735a03b38 <col:24, col:28> col:28 used expression 'int'
| `-CompoundStmt 0x560735a03df8 <col:40, col:99>
|   |-IfStmt 0x560735a03dc8 <col:42, col:88>
|   | |-UnaryOperator 0x560735a03ca8 <col:46, col:47> 'int' prefix '!' cannot overflow
|   | | `-ImplicitCastExpr 0x560735a03c90 <col:47> 'int' <LValueToRValue>
|   | |   `-DeclRefExpr 0x560735a03c70 <col:47> 'int' lvalue ParmVar 0x560735a03b38 'expression' 'int'
|   | `-CompoundStmt 0x560735a03db0 <col:59, col:88>
|   |   `-LabelStmt 0x560735a03d98 <col:61, col:85> 'ERROR'
|   |     `-CallExpr 0x560735a03d28 <col:68, col:85> 'void'
|   |       `-ImplicitCastExpr 0x560735a03d10 <col:68> 'void (*)() __attribute__((noreturn))' <FunctionToPointerDecay>
|   |         `-DeclRefExpr 0x560735a03cc0 <col:68> 'void () __attribute__((noreturn))' Function 0x560735a03a80 '__VERIFIER_error' 'void () __attribute__((noreturn))'
|   |-NullStmt 0x560735a03de0 <col:89>
|   `-ReturnStmt 0x560735a03de8 <col:91>
|-FunctionDecl 0x560735a03e40 <line:5:1, col:37> col:13 used __VERIFIER_atomic_begin 'void ()' extern
|-FunctionDecl 0x560735a03f00 <line:6:1, col:35> col:13 used __VERIFIER_atomic_end 'void ()' extern
|-FunctionDecl 0x560735a04280 <line:8:1, line:10:76> line:8:13 __assert_fail 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x560735a03fb8 <col:28, col:40> col:40 __assertion 'const char *'
| |-ParmVarDecl 0x560735a04038 <col:53, col:65> col:65 __file 'const char *'
| |-ParmVarDecl 0x560735a040b8 <line:9:7, col:20> col:20 __line 'unsigned int'
| |-ParmVarDecl 0x560735a04138 <col:28, col:40> col:40 __function 'const char *'
| `-NoThrowAttr 0x560735a04340 <line:10:22>
|-FunctionDecl 0x560735a2a390 <line:11:1, line:13:76> line:11:13 __assert_perror_fail 'void (int, const char *, unsigned int, const char *) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x560735a043b0 <col:35, col:39> col:39 __errnum 'int'
| |-ParmVarDecl 0x560735a04430 <col:49, col:61> col:61 __file 'const char *'
| |-ParmVarDecl 0x560735a044b0 <line:12:7, col:20> col:20 __line 'unsigned int'
| |-ParmVarDecl 0x560735a04530 <col:28, col:40> col:40 __function 'const char *'
| `-NoThrowAttr 0x560735a2a450 <line:13:22>
|-FunctionDecl 0x560735a2a700 <line:14:1, line:15:76> line:14:13 __assert 'void (const char *, const char *, int) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x560735a2a4c0 <col:23, col:35> col:35 __assertion 'const char *'
| |-ParmVarDecl 0x560735a2a540 <col:48, col:60> col:60 __file 'const char *'
| |-ParmVarDecl 0x560735a2a5c0 <col:68, col:72> col:72 __line 'int'
| `-NoThrowAttr 0x560735a2a7b8 <line:15:22>
|-TypedefDecl 0x560735a2a828 <line:17:1, col:23> col:23 __u_char 'unsigned char'
| `-BuiltinType 0x5607359c3f70 'unsigned char'
|-TypedefDecl 0x560735a2a898 <line:18:1, col:28> col:28 __u_short 'unsigned short'
| `-BuiltinType 0x5607359c3f90 'unsigned short'
|-TypedefDecl 0x560735a2a908 <line:19:1, col:22> col:22 __u_int 'unsigned int'
| `-BuiltinType 0x5607359c3fb0 'unsigned int'
|-TypedefDecl 0x560735a2a978 <line:20:1, col:27> col:27 __u_long 'unsigned long'
| `-BuiltinType 0x5607359c3fd0 'unsigned long'
|-TypedefDecl 0x560735a2a9e8 <line:21:1, col:21> col:21 __int8_t 'signed char'
| `-BuiltinType 0x5607359c3ed0 'signed char'
|-TypedefDecl 0x560735a2aa58 <line:22:1, col:23> col:23 __uint8_t 'unsigned char'
| `-BuiltinType 0x5607359c3f70 'unsigned char'
|-TypedefDecl 0x560735a2aac8 <line:23:1, col:26> col:26 __int16_t 'short'
| `-BuiltinType 0x5607359c3ef0 'short'
|-TypedefDecl 0x560735a2ab38 <line:24:1, col:28> col:28 __uint16_t 'unsigned short'
| `-BuiltinType 0x5607359c3f90 'unsigned short'
|-TypedefDecl 0x560735a2aba8 <line:25:1, col:20> col:20 __int32_t 'int'
| `-BuiltinType 0x5607359c3f10 'int'
|-TypedefDecl 0x560735a2ac18 <line:26:1, col:22> col:22 __uint32_t 'unsigned int'
| `-BuiltinType 0x5607359c3fb0 'unsigned int'
|-TypedefDecl 0x560735a2ac88 <line:27:1, col:25> col:25 __int64_t 'long'
| `-BuiltinType 0x5607359c3f30 'long'
|-TypedefDecl 0x560735a2acf8 <line:28:1, col:27> col:27 referenced __uint64_t 'unsigned long'
| `-BuiltinType 0x5607359c3fd0 'unsigned long'
|-TypedefDecl 0x560735a2ad68 <line:29:1, col:18> col:18 referenced __quad_t 'long'
| `-BuiltinType 0x5607359c3f30 'long'
|-TypedefDecl 0x560735a2add8 <line:30:1, col:27> col:27 __u_quad_t 'unsigned long'
| `-BuiltinType 0x5607359c3fd0 'unsigned long'
|-TypedefDecl 0x560735a2ae48 <line:31:1, col:27> col:27 __dev_t 'unsigned long'
| `-BuiltinType 0x5607359c3fd0 'unsigned long'
|-TypedefDecl 0x560735a2aeb8 <line:32:1, col:22> col:22 __uid_t 'unsigned int'
| `-BuiltinType 0x5607359c3fb0 'unsigned int'
|-TypedefDecl 0x560735a2af28 <line:33:1, col:22> col:22 __gid_t 'unsigned int'
| `-BuiltinType 0x5607359c3fb0 'unsigned int'
|-TypedefDecl 0x560735a2af98 <line:34:1, col:27> col:27 __ino_t 'unsigned long'
| `-BuiltinType 0x5607359c3fd0 'unsigned long'
|-TypedefDecl 0x560735a2b008 <line:35:1, col:27> col:27 __ino64_t 'unsigned long'
| `-BuiltinType 0x5607359c3fd0 'unsigned long'
|-TypedefDecl 0x560735a2b078 <line:36:1, col:22> col:22 __mode_t 'unsigned int'
| `-BuiltinType 0x5607359c3fb0 'unsigned int'
|-TypedefDecl 0x560735a2b0e8 <line:37:1, col:27> col:27 __nlink_t 'unsigned long'
| `-BuiltinType 0x5607359c3fd0 'unsigned long'
|-TypedefDecl 0x560735a2b158 <line:38:1, col:18> col:18 __off_t 'long'
| `-BuiltinType 0x5607359c3f30 'long'
|-TypedefDecl 0x560735a2b1c8 <line:39:1, col:18> col:18 referenced __off64_t 'long'
| `-BuiltinType 0x5607359c3f30 'long'
|-TypedefDecl 0x560735a2b238 <line:40:1, col:13> col:13 referenced __pid_t 'int'
| `-BuiltinType 0x5607359c3f10 'int'
|-RecordDecl 0x560735a2b290 <line:41:9, col:32> col:9 struct definition
| `-FieldDecl 0x560735a2b408 <col:18, col:29> col:22 __val 'int [2]'
|-TypedefDecl 0x560735a2b4c0 <col:1, col:34> col:34 __fsid_t 'struct __fsid_t':'__fsid_t'
| `-ElaboratedType 0x560735a2b460 'struct __fsid_t' sugar
|   `-RecordType 0x560735a2b310 '__fsid_t'
|     `-Record 0x560735a2b290 ''
|-TypedefDecl 0x560735a2b548 <line:42:1, col:18> col:18 referenced __clock_t 'long'
| `-BuiltinType 0x5607359c3f30 'long'
|-TypedefDecl 0x560735a2b5b8 <line:43:1, col:27> col:27 __rlim_t 'unsigned long'
| `-BuiltinType 0x5607359c3fd0 'unsigned long'
|-TypedefDecl 0x560735a2b628 <line:44:1, col:27> col:27 __rlim64_t 'unsigned long'
| `-BuiltinType 0x5607359c3fd0 'unsigned long'
|-TypedefDecl 0x560735a2b698 <line:45:1, col:22> col:22 __id_t 'unsigned int'
| `-BuiltinType 0x5607359c3fb0 'unsigned int'
|-TypedefDecl 0x560735a2b708 <line:46:1, col:18> col:18 referenced __time_t 'long'
| `-BuiltinType 0x5607359c3f30 'long'
|-TypedefDecl 0x560735a2b778 <line:47:1, col:22> col:22 __useconds_t 'unsigned int'
| `-BuiltinType 0x5607359c3fb0 'unsigned int'
|-TypedefDecl 0x560735a2b7e8 <line:48:1, col:18> col:18 __suseconds_t 'long'
| `-BuiltinType 0x5607359c3f30 'long'
|-TypedefDecl 0x560735a2b858 <line:49:1, col:13> col:13 __daddr_t 'int'
| `-BuiltinType 0x5607359c3f10 'int'
|-TypedefDecl 0x560735a2b8c8 <line:50:1, col:13> col:13 __key_t 'int'
| `-BuiltinType 0x5607359c3f10 'int'
|-TypedefDecl 0x560735a2b938 <line:51:1, col:13> col:13 referenced __clockid_t 'int'
| `-BuiltinType 0x5607359c3f10 'int'
|-TypedefDecl 0x560735a2b9a8 <line:52:1, col:16> col:16 referenced __timer_t 'void *'
| `-PointerType 0x5607359c4630 'void *'
|   `-BuiltinType 0x5607359c3e70 'void'
|-TypedefDecl 0x560735a2ba18 <line:53:1, col:18> col:18 __blksize_t 'long'
| `-BuiltinType 0x5607359c3f30 'long'
|-TypedefDecl 0x560735a2ba88 <line:54:1, col:18> col:18 __blkcnt_t 'long'
| `-BuiltinType 0x5607359c3f30 'long'
|-TypedefDecl 0x560735a2baf8 <line:55:1, col:18> col:18 __blkcnt64_t 'long'
| `-BuiltinType 0x5607359c3f30 'long'
|-TypedefDecl 0x560735a2bb68 <line:56:1, col:27> col:27 __fsblkcnt_t 'unsigned long'
| `-BuiltinType 0x5607359c3fd0 'unsigned long'
|-TypedefDecl 0x560735a2bbd8 <line:57:1, col:27> col:27 __fsblkcnt64_t 'unsigned long'
| `-BuiltinType 0x5607359c3fd0 'unsigned long'
|-TypedefDecl 0x560735a2bc48 <line:58:1, col:27> col:27 __fsfilcnt_t 'unsigned long'
| `-BuiltinType 0x5607359c3fd0 'unsigned long'
|-TypedefDecl 0x560735a2bcb8 <line:59:1, col:27> col:27 __fsfilcnt64_t 'unsigned long'
| `-BuiltinType 0x5607359c3fd0 'unsigned long'
|-TypedefDecl 0x560735a2bd28 <line:60:1, col:18> col:18 __fsword_t 'long'
| `-BuiltinType 0x5607359c3f30 'long'
|-TypedefDecl 0x560735a2bd98 <line:61:1, col:18> col:18 __ssize_t 'long'
| `-BuiltinType 0x5607359c3f30 'long'
|-TypedefDecl 0x560735a2be08 <line:62:1, col:18> col:18 referenced __syscall_slong_t 'long'
| `-BuiltinType 0x5607359c3f30 'long'
|-TypedefDecl 0x560735a2be78 <line:63:1, col:27> col:27 __syscall_ulong_t 'unsigned long'
| `-BuiltinType 0x5607359c3fd0 'unsigned long'
|-TypedefDecl 0x560735a2bf08 <line:64:1, col:19> col:19 __loff_t '__off64_t':'long'
| `-TypedefType 0x560735a2bed0 '__off64_t' sugar
|   |-Typedef 0x560735a2b1c8 '__off64_t'
|   `-BuiltinType 0x5607359c3f30 'long'
|-TypedefDecl 0x560735a2c000 <line:65:1, col:19> col:19 __qaddr_t '__quad_t *'
| `-PointerType 0x560735a2bfc0 '__quad_t *'
|   `-TypedefType 0x560735a2bf60 '__quad_t' sugar
|     |-Typedef 0x560735a2ad68 '__quad_t'
|     `-BuiltinType 0x5607359c3f30 'long'
|-TypedefDecl 0x560735a2c070 <line:66:1, col:15> col:15 __caddr_t 'char *'
| `-PointerType 0x5607359c4ab0 'char *'
|   `-BuiltinType 0x5607359c3eb0 'char'
|-TypedefDecl 0x560735a2c0e0 <line:67:1, col:18> col:18 __intptr_t 'long'
| `-BuiltinType 0x5607359c3f30 'long'
|-TypedefDecl 0x560735a2c150 <line:68:1, col:22> col:22 __socklen_t 'unsigned int'
| `-BuiltinType 0x5607359c3fb0 'unsigned int'
|-FunctionDecl 0x560735a2c298 <line:69:1, line:73:1> line:70:1 __bswap_32 'unsigned int (unsigned int)' static inline
| |-ParmVarDecl 0x560735a2c1c0 <col:13, col:26> col:26 used __bsx 'unsigned int'
| `-CompoundStmt 0x560735a2d5e8 <line:71:1, line:73:1>
|   `-ReturnStmt 0x560735a2d5d8 <line:72:3, col:34>
|     `-CallExpr 0x560735a2d598 <col:10, col:34> 'unsigned int'
|       |-ImplicitCastExpr 0x560735a2d580 <col:10> 'unsigned int (*)(unsigned int)' <BuiltinFnToFnPtr>
|       | `-DeclRefExpr 0x560735a2d510 <col:10> '<builtin fn type>' Function 0x560735a2d380 '__builtin_bswap32' 'unsigned int (unsigned int)'
|       `-ImplicitCastExpr 0x560735a2d5c0 <col:29> 'unsigned int' <LValueToRValue>
|         `-DeclRefExpr 0x560735a2d530 <col:29> 'unsigned int' lvalue ParmVar 0x560735a2c1c0 '__bsx' 'unsigned int'
|-FunctionDecl 0x560735a2d380 <col:10> col:10 implicit used __builtin_bswap32 'unsigned int (unsigned int)' extern
| |-ParmVarDecl 0x560735a2d420 <<invalid sloc>> <invalid sloc> 'unsigned int'
| |-NoThrowAttr 0x560735a2d490 <col:10> Implicit
| `-ConstAttr 0x560735a2d4e8 <col:10> Implicit
|-FunctionDecl 0x560735a2d740 <line:74:1, line:78:1> line:75:1 __bswap_64 '__uint64_t (__uint64_t)' static inline
| |-ParmVarDecl 0x560735a2d638 <col:13, col:24> col:24 used __bsx '__uint64_t':'unsigned long'
| `-CompoundStmt 0x560735a2da58 <line:76:1, line:78:1>
|   `-ReturnStmt 0x560735a2da48 <line:77:3, col:34>
|     `-CallExpr 0x560735a2da08 <col:10, col:34> 'unsigned long'
|       |-ImplicitCastExpr 0x560735a2d9f0 <col:10> 'unsigned long (*)(unsigned long)' <BuiltinFnToFnPtr>
|       | `-DeclRefExpr 0x560735a2d978 <col:10> '<builtin fn type>' Function 0x560735a2d7e8 '__builtin_bswap64' 'unsigned long (unsigned long)'
|       `-ImplicitCastExpr 0x560735a2da30 <col:29> '__uint64_t':'unsigned long' <LValueToRValue>
|         `-DeclRefExpr 0x560735a2d998 <col:29> '__uint64_t':'unsigned long' lvalue ParmVar 0x560735a2d638 '__bsx' '__uint64_t':'unsigned long'
|-FunctionDecl 0x560735a2d7e8 <col:10> col:10 implicit used __builtin_bswap64 'unsigned long (unsigned long)' extern
| |-ParmVarDecl 0x560735a2d888 <<invalid sloc>> <invalid sloc> 'unsigned long'
| |-NoThrowAttr 0x560735a2d8f8 <col:10> Implicit
| `-ConstAttr 0x560735a2d950 <col:10> Implicit
|-TypedefDecl 0x560735a2da88 <line:79:1, col:27> col:27 referenced size_t 'unsigned long'
| `-BuiltinType 0x5607359c3fd0 'unsigned long'
|-TypedefDecl 0x560735a2db18 <line:81:1, col:18> col:18 referenced time_t '__time_t':'long'
| `-TypedefType 0x560735a2dae0 '__time_t' sugar
|   |-Typedef 0x560735a2b708 '__time_t'
|   `-BuiltinType 0x5607359c3f30 'long'
|-RecordDecl 0x560735a2db70 <line:84:1, line:88:3> line:84:8 struct timespec definition
| |-FieldDecl 0x560735a2dc28 <line:86:5, col:14> col:14 tv_sec '__time_t':'long'
| `-FieldDecl 0x560735a2dcb8 <line:87:5, col:23> col:23 tv_nsec '__syscall_slong_t':'long'
|-TypedefDecl 0x560735a2dd48 <line:89:1, col:17> col:17 referenced pid_t '__pid_t':'int'
| `-TypedefType 0x560735a2dd10 '__pid_t' sugar
|   |-Typedef 0x560735a2b238 '__pid_t'
|   `-BuiltinType 0x5607359c3f10 'int'
|-RecordDecl 0x560735a2dda0 <line:90:1, line:93:3> line:90:8 struct sched_param definition
| `-FieldDecl 0x560735a2de60 <line:92:5, col:9> col:9 __sched_priority 'int'
|-RecordDecl 0x560735a2deb0 <line:96:1, line:99:3> line:96:8 struct __sched_param definition
| `-FieldDecl 0x560735a2df70 <line:98:5, col:9> col:9 __sched_priority 'int'
|-TypedefDecl 0x560735a2dfd8 <line:100:1, col:27> col:27 referenced __cpu_mask 'unsigned long'
| `-BuiltinType 0x5607359c3fd0 'unsigned long'
|-RecordDecl 0x560735a2e030 <line:101:9, line:104:1> line:101:9 struct definition
| `-FieldDecl 0x560735a2e2c0 <line:103:3, col:53> col:14 __bits '__cpu_mask [64]'
|-TypedefDecl 0x560735a2f3a0 <line:101:1, line:104:3> col:3 referenced cpu_set_t 'struct cpu_set_t':'cpu_set_t'
| `-ElaboratedType 0x560735a2e310 'struct cpu_set_t' sugar
|   `-RecordType 0x560735a2e0b0 'cpu_set_t'
|     `-Record 0x560735a2e030 ''
|-FunctionDecl 0x560735a2f678 <line:106:1, line:107:42> line:106:12 __sched_cpucount 'int (size_t, const cpu_set_t *)' extern
| |-ParmVarDecl 0x560735a2f448 <col:30, col:37> col:37 __setsize 'size_t':'unsigned long'
| |-ParmVarDecl 0x560735a2f550 <col:48, col:65> col:65 __setp 'const cpu_set_t *'
| `-NoThrowAttr 0x560735a2f728 <line:107:19>
|-FunctionDecl 0x560735a2f900 <line:108:1, col:92> col:19 __sched_cpualloc 'cpu_set_t *(size_t)' extern
| |-ParmVarDecl 0x560735a2f790 <col:37, col:44> col:44 __count 'size_t':'unsigned long'
| `-NoThrowAttr 0x560735a2f9a8 <col:69>
|-FunctionDecl 0x560735a2fb20 <line:109:1, col:87> col:13 __sched_cpufree 'void (cpu_set_t *)' extern
| |-ParmVarDecl 0x560735a2fa10 <col:30, col:41> col:41 __set 'cpu_set_t *'
| `-NoThrowAttr 0x560735a2fbc8 <col:64>
|-FunctionDecl 0x560735a2fe88 <line:112:1, line:113:45> line:112:12 sched_setparam 'int (__pid_t, const struct sched_param *)' extern
| |-ParmVarDecl 0x560735a2fc30 <col:28, col:36> col:36 __pid '__pid_t':'int'
| |-ParmVarDecl 0x560735a2fd68 <col:43, col:69> col:69 __param 'const struct sched_param *'
| `-NoThrowAttr 0x560735a2ff38 <line:113:22>
|-FunctionDecl 0x560735a301b8 <line:114:1, col:111> col:12 sched_getparam 'int (__pid_t, struct sched_param *)' extern
| |-ParmVarDecl 0x560735a2ffa0 <col:28, col:36> col:36 __pid '__pid_t':'int'
| |-ParmVarDecl 0x560735a30098 <col:43, col:63> col:63 __param 'struct sched_param *'
| `-NoThrowAttr 0x560735a30268 <col:88>
|-FunctionDecl 0x560735a30588 <line:115:1, line:116:85> line:115:12 sched_setscheduler 'int (__pid_t, int, const struct sched_param *)' extern
| |-ParmVarDecl 0x560735a302d0 <col:32, col:40> col:40 __pid '__pid_t':'int'
| |-ParmVarDecl 0x560735a303b0 <col:47, col:51> col:51 __policy 'int'
| |-ParmVarDecl 0x560735a30440 <line:116:11, col:37> col:37 __param 'const struct sched_param *'
| `-NoThrowAttr 0x560735a30640 <col:62>
|-FunctionDecl 0x560735a307b8 <line:117:1, col:86> col:12 sched_getscheduler 'int (__pid_t)' extern
| |-ParmVarDecl 0x560735a306a8 <col:32, col:40> col:40 __pid '__pid_t':'int'
| `-NoThrowAttr 0x560735a30860 <col:63>
|-FunctionDecl 0x560735a30988 <line:118:1, col:70> col:12 sched_yield 'int (void)' extern
| `-NoThrowAttr 0x560735a30a28 <col:47>
|-FunctionDecl 0x560735a30b30 <line:119:1, col:92> col:12 sched_get_priority_max 'int (int)' extern
| |-ParmVarDecl 0x560735a30a98 <col:36, col:40> col:40 __algorithm 'int'
| `-NoThrowAttr 0x560735a30bd8 <col:69>
|-FunctionDecl 0x560735a30ce0 <line:120:1, col:92> col:12 sched_get_priority_min 'int (int)' extern
| |-ParmVarDecl 0x560735a30c48 <col:36, col:40> col:40 __algorithm 'int'
| `-NoThrowAttr 0x560735a30d88 <col:69>
|-FunctionDecl 0x560735a31048 <line:121:1, col:111> col:12 sched_rr_get_interval 'int (__pid_t, struct timespec *)' extern
| |-ParmVarDecl 0x560735a30df0 <col:35, col:43> col:43 __pid '__pid_t':'int'
| |-ParmVarDecl 0x560735a30f28 <col:50, col:67> col:67 __t 'struct timespec *'
| `-NoThrowAttr 0x560735a310f8 <col:88>
|-TypedefDecl 0x560735a31188 <line:125:1, col:19> col:19 referenced clock_t '__clock_t':'long'
| `-TypedefType 0x560735a31150 '__clock_t' sugar
|   |-Typedef 0x560735a2b548 '__clock_t'
|   `-BuiltinType 0x5607359c3f30 'long'
|-TypedefDecl 0x560735a31218 <line:128:1, col:21> col:21 referenced clockid_t '__clockid_t':'int'
| `-TypedefType 0x560735a311e0 '__clockid_t' sugar
|   |-Typedef 0x560735a2b938 '__clockid_t'
|   `-BuiltinType 0x5607359c3f10 'int'
|-TypedefDecl 0x560735a312a8 <line:129:1, col:19> col:19 referenced timer_t '__timer_t':'void *'
| `-TypedefType 0x560735a31270 '__timer_t' sugar
|   |-Typedef 0x560735a2b9a8 '__timer_t'
|   `-PointerType 0x5607359c4630 'void *'
|     `-BuiltinType 0x5607359c3e70 'void'
|-RecordDecl 0x560735a31300 <line:131:1, line:144:1> line:131:8 struct tm definition
| |-FieldDecl 0x560735a313d8 <line:133:3, col:7> col:7 tm_sec 'int'
| |-FieldDecl 0x560735a31440 <line:134:3, col:7> col:7 tm_min 'int'
| |-FieldDecl 0x560735a314a8 <line:135:3, col:7> col:7 tm_hour 'int'
| |-FieldDecl 0x560735a31510 <line:136:3, col:7> col:7 tm_mday 'int'
| |-FieldDecl 0x560735a31578 <line:137:3, col:7> col:7 tm_mon 'int'
| |-FieldDecl 0x560735a315e0 <line:138:3, col:7> col:7 tm_year 'int'
| |-FieldDecl 0x560735a31648 <line:139:3, col:7> col:7 tm_wday 'int'
| |-FieldDecl 0x560735a316b0 <line:140:3, col:7> col:7 tm_yday 'int'
| |-FieldDecl 0x560735a31718 <line:141:3, col:7> col:7 tm_isdst 'int'
| |-FieldDecl 0x560735a31780 <line:142:3, col:12> col:12 tm_gmtoff 'long'
| `-FieldDecl 0x560735a317e8 <line:143:3, col:15> col:15 tm_zone 'const char *'
|-RecordDecl 0x560735a31838 <line:147:1, line:151:3> line:147:8 struct itimerspec definition
| |-FieldDecl 0x560735a31908 <line:149:5, col:21> col:21 it_interval 'struct timespec':'struct timespec'
| `-FieldDecl 0x560735a31978 <line:150:5, col:21> col:21 it_value 'struct timespec':'struct timespec'
|-RecordDecl 0x560735a31a20 <line:152:1, col:8> col:8 struct sigevent
|-FunctionDecl 0x560735a31bf0 <line:154:1, col:68> col:16 clock 'clock_t (void)' extern
| `-NoThrowAttr 0x560735a31c90 <col:45>
|-FunctionDecl 0x560735a31e70 <line:155:1, col:77> col:15 time 'time_t (time_t *)' extern
| |-ParmVarDecl 0x560735a31d60 <col:21, col:29> col:29 __timer 'time_t *'
| `-NoThrowAttr 0x560735a31f18 <col:54>
|-FunctionDecl 0x560735a32118 <line:156:1, line:157:73> line:156:15 difftime 'double (time_t, time_t)' extern
| |-ParmVarDecl 0x560735a31f80 <col:25, col:32> col:32 __time1 'time_t':'long'
| |-ParmVarDecl 0x560735a31ff8 <col:41, col:48> col:48 __time0 'time_t':'long'
| |-NoThrowAttr 0x560735a321c8 <line:157:22>
| `-ConstAttr 0x560735a32220 <col:63>
|-FunctionDecl 0x560735a33050 <line:158:1, col:79> col:15 mktime 'time_t (struct tm *)' extern
| |-ParmVarDecl 0x560735a32318 <col:23, col:34> col:34 __tp 'struct tm *'
| `-NoThrowAttr 0x560735a330f8 <col:56>
|-FunctionDecl 0x560735a334a0 <line:159:1, line:161:77> line:159:15 strftime 'size_t (char *restrict, size_t, const char *restrict, const struct tm *restrict)' extern
| |-ParmVarDecl 0x560735a33168 <col:25, col:42> col:42 __s 'char *restrict'
| |-ParmVarDecl 0x560735a331e0 <col:47, col:54> col:54 __maxsize 'size_t':'unsigned long'
| |-ParmVarDecl 0x560735a33260 <line:160:4, col:27> col:27 __format 'const char *restrict'
| |-ParmVarDecl 0x560735a33358 <line:161:4, col:32> col:32 __tp 'const struct tm *restrict'
| `-NoThrowAttr 0x560735a33560 <col:54>
|-RecordDecl 0x560735a335b8 <line:163:9, line:170:1> line:163:16 struct __locale_struct definition
| |-RecordDecl 0x560735a33668 parent 0x5607359c3e18 <line:165:3, col:10> col:10 struct __locale_data
| |-FieldDecl 0x560735a338c8 <col:3, col:37> col:25 __locales 'struct __locale_data *[13]'
| |-FieldDecl 0x560735a33968 <line:166:3, col:29> col:29 __ctype_b 'const unsigned short *'
| |-FieldDecl 0x560735a339d0 <line:167:3, col:14> col:14 __ctype_tolower 'const int *'
| |-FieldDecl 0x560735a33a38 <line:168:3, col:14> col:14 __ctype_toupper 'const int *'
| `-FieldDecl 0x560735a33b28 <line:169:3, col:25> col:15 __names 'const char *[13]'
|-TypedefDecl 0x560735a33c48 <line:163:1, line:170:4> col:4 referenced __locale_t 'struct __locale_struct *'
| `-PointerType 0x560735a33bf0 'struct __locale_struct *'
|   `-ElaboratedType 0x560735a33b80 'struct __locale_struct' sugar
|     `-RecordType 0x560735a33640 'struct __locale_struct'
|       `-Record 0x560735a335b8 '__locale_struct'
|-TypedefDecl 0x560735a33cf8 <line:171:1, col:20> col:20 locale_t '__locale_t':'struct __locale_struct *'
| `-TypedefType 0x560735a33cc0 '__locale_t' sugar
|   |-Typedef 0x560735a33c48 '__locale_t'
|   `-PointerType 0x560735a33bf0 'struct __locale_struct *'
|     `-ElaboratedType 0x560735a33b80 'struct __locale_struct' sugar
|       `-RecordType 0x560735a33640 'struct __locale_struct'
|         `-Record 0x560735a335b8 '__locale_struct'
|-FunctionDecl 0x560735a35110 <line:172:1, line:175:63> line:172:15 strftime_l 'size_t (char *restrict, size_t, const char *restrict, const struct tm *restrict, __locale_t)' extern
| |-ParmVarDecl 0x560735a33d68 <col:27, col:44> col:44 __s 'char *restrict'
| |-ParmVarDecl 0x560735a33de0 <col:49, col:56> col:56 __maxsize 'size_t':'unsigned long'
| |-ParmVarDecl 0x560735a33e60 <line:173:6, col:29> col:29 __format 'const char *restrict'
| |-ParmVarDecl 0x560735a33ef0 <line:174:6, col:34> col:34 __tp 'const struct tm *restrict'
| |-ParmVarDecl 0x560735a33f68 <line:175:6, col:17> col:17 __loc '__locale_t':'struct __locale_struct *'
| `-NoThrowAttr 0x560735a351d8 <col:40>
|-FunctionDecl 0x560735a353c8 <line:177:1, col:89> col:19 gmtime 'struct tm *(const time_t *)' extern
| |-ParmVarDecl 0x560735a352a0 <col:27, col:41> col:41 __timer 'const time_t *'
| `-NoThrowAttr 0x560735a35470 <col:66>
|-FunctionDecl 0x560735a35580 <line:178:1, col:92> col:19 localtime 'struct tm *(const time_t *)' extern
| |-ParmVarDecl 0x560735a354d8 <col:30, col:44> col:44 __timer 'const time_t *'
| `-NoThrowAttr 0x560735a35628 <col:69>
|-FunctionDecl 0x560735a35858 <line:180:1, line:181:75> line:180:19 gmtime_r 'struct tm *(const time_t *restrict, struct tm *restrict)' extern
| |-ParmVarDecl 0x560735a35690 <col:29, col:54> col:54 __timer 'const time_t *restrict'
| |-ParmVarDecl 0x560735a35720 <line:181:8, col:30> col:30 __tp 'struct tm *restrict'
| `-NoThrowAttr 0x560735a35908 <col:52>
|-FunctionDecl 0x560735a35ab0 <line:182:1, line:183:78> line:182:19 localtime_r 'struct tm *(const time_t *restrict, struct tm *restrict)' extern
| |-ParmVarDecl 0x560735a35970 <col:32, col:57> col:57 __timer 'const time_t *restrict'
| |-ParmVarDecl 0x560735a35a00 <line:183:11, col:33> col:33 __tp 'struct tm *restrict'
| `-NoThrowAttr 0x560735a35b60 <col:55>
|-FunctionDecl 0x560735a35cf8 <line:185:1, col:85> col:14 asctime 'char *(const struct tm *)' extern
| |-ParmVarDecl 0x560735a35be0 <col:23, col:40> col:40 __tp 'const struct tm *'
| `-NoThrowAttr 0x560735a35da0 <col:62>
|-FunctionDecl 0x560735a35f18 <line:186:1, col:83> col:14 ctime 'char *(const time_t *)' extern
| |-ParmVarDecl 0x560735a35e08 <col:21, col:35> col:35 __timer 'const time_t *'
| `-NoThrowAttr 0x560735a35fc0 <col:60>
|-FunctionDecl 0x560735a362b8 <line:188:1, line:189:67> line:188:14 asctime_r 'char *(const struct tm *restrict, char *restrict)' extern
| |-ParmVarDecl 0x560735a36118 <col:25, col:53> col:53 __tp 'const struct tm *restrict'
| |-ParmVarDecl 0x560735a36198 <line:189:4, col:21> col:21 __buf 'char *restrict'
| `-NoThrowAttr 0x560735a36368 <col:44>
|-FunctionDecl 0x560735a36578 <line:190:1, line:191:72> line:190:14 ctime_r 'char *(const time_t *restrict, char *restrict)' extern
| |-ParmVarDecl 0x560735a363d0 <col:23, col:48> col:48 __timer 'const time_t *restrict'
| |-ParmVarDecl 0x560735a36450 <line:191:9, col:26> col:26 __buf 'char *restrict'
| `-NoThrowAttr 0x560735a36628 <col:49>
|-VarDecl 0x560735a36728 <line:192:1, col:24> col:14 __tzname 'char *[2]' extern
|-VarDecl 0x560735a367a8 <line:193:1, col:12> col:12 __daylight 'int' extern
|-VarDecl 0x560735a36828 <line:194:1, col:17> col:17 __timezone 'long' extern
|-VarDecl 0x560735a368f0 <line:195:1, col:22> col:14 tzname 'char *[2]' extern
|-FunctionDecl 0x560735a36a20 <line:196:1, col:65> col:13 tzset 'void (void)' extern
| `-NoThrowAttr 0x560735a36ac0 <col:42>
|-VarDecl 0x560735a36b30 <line:197:1, col:12> col:12 daylight 'int' extern
|-VarDecl 0x560735a36bb0 <line:198:1, col:17> col:17 timezone 'long' extern
|-FunctionDecl 0x560735a36d38 <line:199:1, col:80> col:12 stime 'int (const time_t *)' extern
| |-ParmVarDecl 0x560735a36c28 <col:19, col:33> col:33 __when 'const time_t *'
| `-NoThrowAttr 0x560735a36de0 <col:57>
|-FunctionDecl 0x560735a36ef0 <line:200:1, col:79> col:15 timegm 'time_t (struct tm *)' extern
| |-ParmVarDecl 0x560735a36e60 <col:23, col:34> col:34 __tp 'struct tm *'
| `-NoThrowAttr 0x560735a36f98 <col:56>
|-FunctionDecl 0x560735a370d0 <line:201:1, col:82> col:15 timelocal 'time_t (struct tm *)' extern
| |-ParmVarDecl 0x560735a37018 <col:26, col:37> col:37 __tp 'struct tm *'
| `-NoThrowAttr 0x560735a37178 <col:59>
|-FunctionDecl 0x560735a37280 <line:202:1, col:99> col:12 dysize 'int (int)' extern
| |-ParmVarDecl 0x560735a371e8 <col:20, col:24> col:24 __year 'int'
| |-NoThrowAttr 0x560735a37328 <col:48>
| `-ConstAttr 0x560735a37380 <col:89>
|-FunctionDecl 0x560735a375e8 <line:203:1, line:204:37> line:203:12 nanosleep 'int (const struct timespec *, struct timespec *)' extern
| |-ParmVarDecl 0x560735a37438 <col:23, col:46> col:46 __requested_time 'const struct timespec *'
| `-ParmVarDecl 0x560735a374c8 <line:204:9, col:26> col:26 __remaining 'struct timespec *'
|-FunctionDecl 0x560735a37848 <line:205:1, col:111> col:12 clock_getres 'int (clockid_t, struct timespec *)' extern
| |-ParmVarDecl 0x560735a376d8 <col:26, col:36> col:36 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x560735a37768 <col:48, col:65> col:65 __res 'struct timespec *'
| `-NoThrowAttr 0x560735a378f8 <col:88>
|-FunctionDecl 0x560735a37a90 <line:206:1, col:111> col:12 clock_gettime 'int (clockid_t, struct timespec *)' extern
| |-ParmVarDecl 0x560735a37960 <col:27, col:37> col:37 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x560735a379f0 <col:49, col:66> col:66 __tp 'struct timespec *'
| `-NoThrowAttr 0x560735a37b40 <col:88>
|-FunctionDecl 0x560735a37d58 <line:207:1, line:208:45> line:207:12 clock_settime 'int (clockid_t, const struct timespec *)' extern
| |-ParmVarDecl 0x560735a37ba8 <col:27, col:37> col:37 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x560735a37c38 <col:49, col:72> col:72 __tp 'const struct timespec *'
| `-NoThrowAttr 0x560735a37e08 <line:208:22>
|-FunctionDecl 0x560735a38178 <line:209:1, line:211:30> line:209:12 clock_nanosleep 'int (clockid_t, int, const struct timespec *, struct timespec *)' extern
| |-ParmVarDecl 0x560735a37e70 <col:29, col:39> col:39 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x560735a37ef0 <col:51, col:55> col:55 __flags 'int'
| |-ParmVarDecl 0x560735a37f80 <line:210:8, col:31> col:31 __req 'const struct timespec *'
| `-ParmVarDecl 0x560735a38010 <line:211:8, col:25> col:25 __rem 'struct timespec *'
|-FunctionDecl 0x560735a38478 <line:212:1, col:108> col:12 clock_getcpuclockid 'int (pid_t, clockid_t *)' extern
| |-ParmVarDecl 0x560735a38278 <col:33, col:39> col:39 __pid 'pid_t':'int'
| |-ParmVarDecl 0x560735a38350 <col:46, col:57> col:57 __clock_id 'clockid_t *'
| `-NoThrowAttr 0x560735a38528 <col:85>
|-FunctionDecl 0x560735a38918 <line:213:1, line:215:75> line:213:12 timer_create 'int (clockid_t, struct sigevent *restrict, timer_t *restrict)' extern
| |-ParmVarDecl 0x560735a38590 <col:26, col:36> col:36 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x560735a386c8 <line:214:5, col:33> col:33 __evp 'struct sigevent *restrict'
| |-ParmVarDecl 0x560735a387d0 <line:215:5, col:25> col:25 __timerid 'timer_t *restrict'
| `-NoThrowAttr 0x560735a389d0 <col:52>
|-FunctionDecl 0x560735a38b48 <line:216:1, col:84> col:12 timer_delete 'int (timer_t)' extern
| |-ParmVarDecl 0x560735a38a38 <col:26, col:34> col:34 __timerid 'timer_t':'void *'
| `-NoThrowAttr 0x560735a38bf0 <col:61>
|-FunctionDecl 0x560735a390f0 <line:217:1, line:219:85> line:217:12 timer_settime 'int (timer_t, int, const struct itimerspec *restrict, struct itimerspec *restrict)' extern
| |-ParmVarDecl 0x560735a38c58 <col:27, col:35> col:35 __timerid 'timer_t':'void *'
| |-ParmVarDecl 0x560735a38cd8 <col:46, col:50> col:50 __flags 'int'
| |-ParmVarDecl 0x560735a38e08 <line:218:6, col:42> col:42 __value 'const struct itimerspec *restrict'
| |-ParmVarDecl 0x560735a38ef8 <line:219:6, col:36> col:36 __ovalue 'struct itimerspec *restrict'
| `-NoThrowAttr 0x560735a391b0 <col:62>
|-FunctionDecl 0x560735a393c8 <line:220:1, line:221:45> line:220:12 timer_gettime 'int (timer_t, struct itimerspec *)' extern
| |-ParmVarDecl 0x560735a39218 <col:27, col:35> col:35 __timerid 'timer_t':'void *'
| |-ParmVarDecl 0x560735a392a8 <col:46, col:65> col:65 __value 'struct itimerspec *'
| `-NoThrowAttr 0x560735a39478 <line:221:22>
|-FunctionDecl 0x560735a39578 <line:222:1, col:88> col:12 timer_getoverrun 'int (timer_t)' extern
| |-ParmVarDecl 0x560735a394e0 <col:30, col:38> col:38 __timerid 'timer_t':'void *'
| `-NoThrowAttr 0x560735a39620 <col:65>
|-TypedefDecl 0x560735a39690 <line:224:1, col:27> col:27 referenced pthread_t 'unsigned long'
| `-BuiltinType 0x5607359c3fd0 'unsigned long'
|-RecordDecl 0x560735a396e8 <line:225:1, line:229:1> line:225:7 union pthread_attr_t definition
| |-FieldDecl 0x560735a39830 <line:227:3, col:17> col:8 __size 'char [56]'
| `-FieldDecl 0x560735a39898 <line:228:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x560735a39948 <line:230:1, col:30> col:30 referenced pthread_attr_t 'union pthread_attr_t':'union pthread_attr_t'
| `-ElaboratedType 0x560735a398f0 'union pthread_attr_t' sugar
|   `-RecordType 0x560735a39770 'union pthread_attr_t'
|     `-Record 0x560735a396e8 'pthread_attr_t'
|-RecordDecl 0x560735a399a0 <line:231:9, line:235:1> line:231:16 struct __pthread_internal_list definition
| |-FieldDecl 0x560735a39b18 <line:233:3, col:35> col:35 __prev 'struct __pthread_internal_list *'
| `-FieldDecl 0x560735a39b90 <line:234:3, col:35> col:35 __next 'struct __pthread_internal_list *'
|-TypedefDecl 0x560735a39c40 <line:231:1, line:235:3> col:3 referenced __pthread_list_t 'struct __pthread_internal_list':'struct __pthread_internal_list'
| `-ElaboratedType 0x560735a39be0 'struct __pthread_internal_list' sugar
|   `-RecordType 0x560735a39a20 'struct __pthread_internal_list'
|     `-Record 0x560735a399a0 '__pthread_internal_list'
|-RecordDecl 0x560735a39cb0 <line:236:9, line:250:1> line:236:9 union definition
| |-RecordDecl 0x560735a39d58 parent 0x5607359c3e18 <line:238:3, line:247:3> line:238:10 struct __pthread_mutex_s definition
| | |-FieldDecl 0x560735a39e30 <line:240:5, col:9> col:9 __lock 'int'
| | |-FieldDecl 0x560735a39e98 <line:241:5, col:18> col:18 __count 'unsigned int'
| | |-FieldDecl 0x560735a39f00 <line:242:5, col:9> col:9 __owner 'int'
| | |-FieldDecl 0x560735a39f68 <line:243:5, col:18> col:18 __nusers 'unsigned int'
| | |-FieldDecl 0x560735a39fd0 <line:244:5, col:9> col:9 __kind 'int'
| | |-FieldDecl 0x560735a3a038 <line:245:5, col:9> col:9 __spins 'int'
| | `-FieldDecl 0x560735a3e110 <line:246:5, col:22> col:22 __list '__pthread_list_t':'struct __pthread_internal_list'
| |-FieldDecl 0x560735a3e1c0 <line:238:3, line:247:5> col:5 __data 'struct __pthread_mutex_s':'struct __pthread_mutex_s'
| |-FieldDecl 0x560735a3e2b0 <line:248:3, col:17> col:8 __size 'char [40]'
| `-FieldDecl 0x560735a3e318 <line:249:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x560735a3e4a0 <line:236:1, line:250:3> col:3 referenced pthread_mutex_t 'union pthread_mutex_t':'pthread_mutex_t'
| `-ElaboratedType 0x560735a3e440 'union pthread_mutex_t' sugar
|   `-RecordType 0x560735a39d30 'pthread_mutex_t'
|     `-Record 0x560735a39cb0 ''
|-RecordDecl 0x560735a3e510 <line:251:9, line:255:1> line:251:9 union definition
| |-FieldDecl 0x560735a3e650 <line:253:3, col:16> col:8 __size 'char [4]'
| `-FieldDecl 0x560735a3e6b8 <line:254:3, col:7> col:7 __align 'int'
|-TypedefDecl 0x560735a3e770 <line:251:1, line:255:3> col:3 referenced pthread_mutexattr_t 'union pthread_mutexattr_t':'pthread_mutexattr_t'
| `-ElaboratedType 0x560735a3e710 'union pthread_mutexattr_t' sugar
|   `-RecordType 0x560735a3e590 'pthread_mutexattr_t'
|     `-Record 0x560735a3e510 ''
|-RecordDecl 0x560735a3e7e0 <line:256:9, line:271:1> line:256:9 union definition
| |-RecordDecl 0x560735a3e888 <line:258:3, line:268:3> line:258:3 struct definition
| | |-FieldDecl 0x560735a3e950 <line:260:5, col:9> col:9 __lock 'int'
| | |-FieldDecl 0x560735a3e9b8 <line:261:5, col:18> col:18 __futex 'unsigned int'
| | |-FieldDecl 0x560735a3ea20 <line:262:19, col:42> col:42 __total_seq 'unsigned long long'
| | |-FieldDecl 0x560735a3ea88 <line:263:19, col:42> col:42 __wakeup_seq 'unsigned long long'
| | |-FieldDecl 0x560735a3eaf0 <line:264:19, col:42> col:42 __woken_seq 'unsigned long long'
| | |-FieldDecl 0x560735a3eb58 <line:265:5, col:11> col:11 __mutex 'void *'
| | |-FieldDecl 0x560735a3ebc0 <line:266:5, col:18> col:18 __nwaiters 'unsigned int'
| | `-FieldDecl 0x560735a3ec28 <line:267:5, col:18> col:18 __broadcast_seq 'unsigned int'
| |-FieldDecl 0x560735a3ece0 <line:258:3, line:268:5> col:5 __data 'struct (anonymous struct at ./split_0/mix029_power.oepc_false-unreach-call.i:258:3)':'struct pthread_cond_t::(anonymous at ./split_0/mix029_power.oepc_false-unreach-call.i:258:3)'
| |-FieldDecl 0x560735a3edd0 <line:269:3, col:17> col:8 __size 'char [48]'
| `-FieldDecl 0x560735a3ee38 <line:270:17, col:31> col:31 __align 'long long'
|-TypedefDecl 0x560735a3ef70 <line:256:1, line:271:3> col:3 referenced pthread_cond_t 'union pthread_cond_t':'pthread_cond_t'
| `-ElaboratedType 0x560735a3ef10 'union pthread_cond_t' sugar
|   `-RecordType 0x560735a3e860 'pthread_cond_t'
|     `-Record 0x560735a3e7e0 ''
|-RecordDecl 0x560735a3efe0 <line:272:9, line:276:1> line:272:9 union definition
| |-FieldDecl 0x560735a40130 <line:274:3, col:16> col:8 __size 'char [4]'
| `-FieldDecl 0x560735a40198 <line:275:3, col:7> col:7 __align 'int'
|-TypedefDecl 0x560735a40250 <line:272:1, line:276:3> col:3 referenced pthread_condattr_t 'union pthread_condattr_t':'pthread_condattr_t'
| `-ElaboratedType 0x560735a401f0 'union pthread_condattr_t' sugar
|   `-RecordType 0x560735a3f060 'pthread_condattr_t'
|     `-Record 0x560735a3efe0 ''
|-TypedefDecl 0x560735a402d8 <line:277:1, col:22> col:22 referenced pthread_key_t 'unsigned int'
| `-BuiltinType 0x5607359c3fb0 'unsigned int'
|-TypedefDecl 0x560735a40348 <line:278:1, col:13> col:13 referenced pthread_once_t 'int'
| `-BuiltinType 0x5607359c3f10 'int'
|-RecordDecl 0x560735a403a0 <line:279:9, line:297:1> line:279:9 union definition
| |-RecordDecl 0x560735a40448 <line:281:3, line:294:3> line:281:3 struct definition
| | |-FieldDecl 0x560735a40510 <line:283:5, col:9> col:9 __lock 'int'
| | |-FieldDecl 0x560735a40578 <line:284:5, col:18> col:18 __nr_readers 'unsigned int'
| | |-FieldDecl 0x560735a405e0 <line:285:5, col:18> col:18 __readers_wakeup 'unsigned int'
| | |-FieldDecl 0x560735a40648 <line:286:5, col:18> col:18 __writer_wakeup 'unsigned int'
| | |-FieldDecl 0x560735a406b0 <line:287:5, col:18> col:18 __nr_readers_queued 'unsigned int'
| | |-FieldDecl 0x560735a40718 <line:288:5, col:18> col:18 __nr_writers_queued 'unsigned int'
| | |-FieldDecl 0x560735a40780 <line:289:5, col:9> col:9 __writer 'int'
| | |-FieldDecl 0x560735a407e8 <line:290:5, col:9> col:9 __shared 'int'
| | |-FieldDecl 0x560735a40850 <line:291:5, col:23> col:23 __pad1 'unsigned long'
| | |-FieldDecl 0x560735a408b8 <line:292:5, col:23> col:23 __pad2 'unsigned long'
| | `-FieldDecl 0x560735a40920 <line:293:5, col:18> col:18 __flags 'unsigned int'
| |-FieldDecl 0x560735a409d0 <line:281:3, line:294:5> col:5 __data 'struct (anonymous struct at ./split_0/mix029_power.oepc_false-unreach-call.i:281:3)':'struct pthread_rwlock_t::(anonymous at ./split_0/mix029_power.oepc_false-unreach-call.i:281:3)'
| |-FieldDecl 0x560735a40a78 <line:295:3, col:17> col:8 __size 'char [56]'
| `-FieldDecl 0x560735a40ae0 <line:296:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x560735a40c30 <line:279:1, line:297:3> col:3 referenced pthread_rwlock_t 'union pthread_rwlock_t':'pthread_rwlock_t'
| `-ElaboratedType 0x560735a40bd0 'union pthread_rwlock_t' sugar
|   `-RecordType 0x560735a40420 'pthread_rwlock_t'
|     `-Record 0x560735a403a0 ''
|-RecordDecl 0x560735a40ca0 <line:298:9, line:302:1> line:298:9 union definition
| |-FieldDecl 0x560735a40de0 <line:300:3, col:16> col:8 __size 'char [8]'
| `-FieldDecl 0x560735a40e48 <line:301:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x560735a40f00 <line:298:1, line:302:3> col:3 referenced pthread_rwlockattr_t 'union pthread_rwlockattr_t':'pthread_rwlockattr_t'
| `-ElaboratedType 0x560735a40ea0 'union pthread_rwlockattr_t' sugar
|   `-RecordType 0x560735a40d20 'pthread_rwlockattr_t'
|     `-Record 0x560735a40ca0 ''
|-TypedefDecl 0x560735a40f88 <line:303:1, col:22> col:22 referenced pthread_spinlock_t 'volatile int'
| `-QualType 0x5607359c3f14 'volatile int' volatile
|   `-BuiltinType 0x5607359c3f10 'int'
|-RecordDecl 0x560735a40fe0 <line:304:9, line:308:1> line:304:9 union definition
| |-FieldDecl 0x560735a42140 <line:306:3, col:17> col:8 __size 'char [32]'
| `-FieldDecl 0x560735a421a8 <line:307:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x560735a42260 <line:304:1, line:308:3> col:3 referenced pthread_barrier_t 'union pthread_barrier_t':'pthread_barrier_t'
| `-ElaboratedType 0x560735a42200 'union pthread_barrier_t' sugar
|   `-RecordType 0x560735a41060 'pthread_barrier_t'
|     `-Record 0x560735a40fe0 ''
|-RecordDecl 0x560735a422d0 <line:309:9, line:313:1> line:309:9 union definition
| |-FieldDecl 0x560735a423d0 <line:311:3, col:16> col:8 __size 'char [4]'
| `-FieldDecl 0x560735a42438 <line:312:3, col:7> col:7 __align 'int'
|-TypedefDecl 0x560735a424f0 <line:309:1, line:313:3> col:3 referenced pthread_barrierattr_t 'union pthread_barrierattr_t':'pthread_barrierattr_t'
| `-ElaboratedType 0x560735a42490 'union pthread_barrierattr_t' sugar
|   `-RecordType 0x560735a42350 'pthread_barrierattr_t'
|     `-Record 0x560735a422d0 ''
|-TypedefDecl 0x560735a42608 <line:314:1, col:29> col:18 referenced __jmp_buf 'long [8]'
| `-ConstantArrayType 0x560735a425a0 'long [8]' 8 
|   `-BuiltinType 0x5607359c3f30 'long'
|-EnumDecl 0x560735a42660 <line:315:1, line:319:1> line:315:1
| |-EnumConstantDecl 0x560735a42728 <line:317:3> col:3 PTHREAD_CREATE_JOINABLE 'int'
| `-EnumConstantDecl 0x560735a42778 <line:318:3> col:3 PTHREAD_CREATE_DETACHED 'int'
|-EnumDecl 0x560735a427c8 <line:320:1, line:331:1> line:320:1
| |-EnumConstantDecl 0x560735a42898 <line:322:3> col:3 referenced PTHREAD_MUTEX_TIMED_NP 'int'
| |-EnumConstantDecl 0x560735a428e8 <line:323:3> col:3 referenced PTHREAD_MUTEX_RECURSIVE_NP 'int'
| |-EnumConstantDecl 0x560735a42938 <line:324:3> col:3 referenced PTHREAD_MUTEX_ERRORCHECK_NP 'int'
| |-EnumConstantDecl 0x560735a42988 <line:325:3> col:3 PTHREAD_MUTEX_ADAPTIVE_NP 'int'
| |-EnumConstantDecl 0x560735a42a10 <line:327:3, col:26> col:3 referenced PTHREAD_MUTEX_NORMAL 'int'
| | `-ConstantExpr 0x560735a429f8 <col:26> 'int'
| |   `-DeclRefExpr 0x560735a429d8 <col:26> 'int' EnumConstant 0x560735a42898 'PTHREAD_MUTEX_TIMED_NP' 'int'
| |-EnumConstantDecl 0x560735a42a98 <line:328:3, col:29> col:3 PTHREAD_MUTEX_RECURSIVE 'int'
| | `-ConstantExpr 0x560735a42a80 <col:29> 'int'
| |   `-DeclRefExpr 0x560735a42a60 <col:29> 'int' EnumConstant 0x560735a428e8 'PTHREAD_MUTEX_RECURSIVE_NP' 'int'
| |-EnumConstantDecl 0x560735a42b20 <line:329:3, col:30> col:3 PTHREAD_MUTEX_ERRORCHECK 'int'
| | `-ConstantExpr 0x560735a42b08 <col:30> 'int'
| |   `-DeclRefExpr 0x560735a42ae8 <col:30> 'int' EnumConstant 0x560735a42938 'PTHREAD_MUTEX_ERRORCHECK_NP' 'int'
| `-EnumConstantDecl 0x560735a42ba8 <line:330:3, col:27> col:3 PTHREAD_MUTEX_DEFAULT 'int'
|   `-ConstantExpr 0x560735a42b90 <col:27> 'int'
|     `-DeclRefExpr 0x560735a42b70 <col:27> 'int' EnumConstant 0x560735a42a10 'PTHREAD_MUTEX_NORMAL' 'int'
|-EnumDecl 0x560735a42bf8 <line:332:1, line:338:1> line:332:1
| |-EnumConstantDecl 0x560735a42cc8 <line:334:3> col:3 referenced PTHREAD_MUTEX_STALLED 'int'
| |-EnumConstantDecl 0x560735a42d50 <line:335:3, col:30> col:3 PTHREAD_MUTEX_STALLED_NP 'int'
| | `-ConstantExpr 0x560735a42d38 <col:30> 'int'
| |   `-DeclRefExpr 0x560735a42d18 <col:30> 'int' EnumConstant 0x560735a42cc8 'PTHREAD_MUTEX_STALLED' 'int'
| |-EnumConstantDecl 0x560735a42da0 <line:336:3> col:3 referenced PTHREAD_MUTEX_ROBUST 'int'
| `-EnumConstantDecl 0x560735a42e28 <line:337:3, col:29> col:3 PTHREAD_MUTEX_ROBUST_NP 'int'
|   `-ConstantExpr 0x560735a42e10 <col:29> 'int'
|     `-DeclRefExpr 0x560735a42df0 <col:29> 'int' EnumConstant 0x560735a42da0 'PTHREAD_MUTEX_ROBUST' 'int'
|-EnumDecl 0x560735a42e78 <line:339:1, line:344:1> line:339:1
| |-EnumConstantDecl 0x560735a42f48 <line:341:3> col:3 PTHREAD_PRIO_NONE 'int'
| |-EnumConstantDecl 0x560735a42f98 <line:342:3> col:3 PTHREAD_PRIO_INHERIT 'int'
| `-EnumConstantDecl 0x560735a42fe8 <line:343:3> col:3 PTHREAD_PRIO_PROTECT 'int'
|-EnumDecl 0x560735a43038 <line:345:1, line:351:1> line:345:1
| |-EnumConstantDecl 0x560735a43150 <line:347:3> col:3 referenced PTHREAD_RWLOCK_PREFER_READER_NP 'int'
| |-EnumConstantDecl 0x560735a431a0 <line:348:3> col:3 PTHREAD_RWLOCK_PREFER_WRITER_NP 'int'
| |-EnumConstantDecl 0x560735a431f0 <line:349:3> col:3 PTHREAD_RWLOCK_PREFER_WRITER_NONRECURSIVE_NP 'int'
| `-EnumConstantDecl 0x560735a43278 <line:350:3, col:31> col:3 PTHREAD_RWLOCK_DEFAULT_NP 'int'
|   `-ConstantExpr 0x560735a43260 <col:31> 'int'
|     `-DeclRefExpr 0x560735a43240 <col:31> 'int' EnumConstant 0x560735a43150 'PTHREAD_RWLOCK_PREFER_READER_NP' 'int'
|-EnumDecl 0x560735a432c8 <line:352:1, line:356:1> line:352:1
| |-EnumConstantDecl 0x560735a43398 <line:354:3> col:3 PTHREAD_INHERIT_SCHED 'int'
| `-EnumConstantDecl 0x560735a433e8 <line:355:3> col:3 PTHREAD_EXPLICIT_SCHED 'int'
|-EnumDecl 0x560735a43438 <line:357:1, line:361:1> line:357:1
| |-EnumConstantDecl 0x560735a43508 <line:359:3> col:3 PTHREAD_SCOPE_SYSTEM 'int'
| `-EnumConstantDecl 0x560735a43558 <line:360:3> col:3 PTHREAD_SCOPE_PROCESS 'int'
|-EnumDecl 0x560735a435a8 <line:362:1, line:366:1> line:362:1
| |-EnumConstantDecl 0x560735a43678 <line:364:3> col:3 PTHREAD_PROCESS_PRIVATE 'int'
| `-EnumConstantDecl 0x560735a436c8 <line:365:3> col:3 PTHREAD_PROCESS_SHARED 'int'
|-RecordDecl 0x560735a43718 <line:367:1, line:373:1> line:367:8 struct _pthread_cleanup_buffer definition
| |-FieldDecl 0x560735a43958 <line:369:3, col:28> col:10 __routine 'void (*)(void *)'
| |-FieldDecl 0x560735a439c0 <line:370:3, col:9> col:9 __arg 'void *'
| |-FieldDecl 0x560735a43a28 <line:371:3, col:7> col:7 __canceltype 'int'
| `-FieldDecl 0x560735a43b48 <line:372:3, col:35> col:35 __prev 'struct _pthread_cleanup_buffer *'
|-EnumDecl 0x560735a43b98 <line:374:1, line:378:1> line:374:1
| |-EnumConstantDecl 0x560735a43c68 <line:376:3> col:3 PTHREAD_CANCEL_ENABLE 'int'
| `-EnumConstantDecl 0x560735a43cb8 <line:377:3> col:3 PTHREAD_CANCEL_DISABLE 'int'
|-EnumDecl 0x560735a43d08 <line:379:1, line:383:1> line:379:1
| |-EnumConstantDecl 0x560735a43dd8 <line:381:3> col:3 PTHREAD_CANCEL_DEFERRED 'int'
| `-EnumConstantDecl 0x560735a43e28 <line:382:3> col:3 PTHREAD_CANCEL_ASYNCHRONOUS 'int'
|-FunctionDecl 0x560735a44488 <line:385:1, line:388:96> line:385:12 used pthread_create 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' extern
| |-ParmVarDecl 0x560735a43f20 <col:28, col:50> col:50 __newthread 'pthread_t *restrict'
| |-ParmVarDecl 0x560735a44030 <line:386:7, col:40> col:40 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x560735a44270 <line:387:7, col:39> col:15 __start_routine 'void *(*)(void *)'
| |-ParmVarDecl 0x560735a442f0 <line:388:7, col:24> col:24 __arg 'void *restrict'
| |-NoThrowAttr 0x560735a44548 <col:47>
| |-NonNullAttr 0x560735a445a0 <col:77, col:94> 1 3
| `-CallbackAttr 0x560735a445d8 <line:385:12> Implicit 2 3
|-FunctionDecl 0x560735a44700 <line:389:1, col:72> col:13 pthread_exit 'void (void *) __attribute__((noreturn))' extern
| `-ParmVarDecl 0x560735a44630 <col:27, col:33> col:33 __retval 'void *'
|-FunctionDecl 0x560735a44958 <line:390:1, col:64> col:12 pthread_join 'int (pthread_t, void **)' extern
| |-ParmVarDecl 0x560735a447b8 <col:26, col:36> col:36 __th 'pthread_t':'unsigned long'
| `-ParmVarDecl 0x560735a44838 <col:42, col:49> col:49 __thread_return 'void **'
|-FunctionDecl 0x560735a44b28 <line:391:1, col:83> col:12 pthread_detach 'int (pthread_t)' extern
| |-ParmVarDecl 0x560735a44a18 <col:28, col:38> col:38 __th 'pthread_t':'unsigned long'
| `-NoThrowAttr 0x560735a44bd0 <col:60>
|-FunctionDecl 0x560735a44d20 <line:392:1, col:105> col:18 pthread_self 'pthread_t (void)' extern
| |-NoThrowAttr 0x560735a44dc0 <col:54>
| `-ConstAttr 0x560735a44e18 <col:95>
|-FunctionDecl 0x560735a44fe8 <line:393:1, line:394:70> line:393:12 pthread_equal 'int (pthread_t, pthread_t)' extern
| |-ParmVarDecl 0x560735a44e50 <col:27, col:37> col:37 __thread1 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x560735a44ec8 <col:48, col:58> col:58 __thread2 'pthread_t':'unsigned long'
| |-NoThrowAttr 0x560735a45098 <line:394:19>
| `-ConstAttr 0x560735a450f0 <col:60>
|-FunctionDecl 0x560735a46b08 <line:395:1, col:128> col:12 pthread_attr_init 'int (pthread_attr_t *)' extern
| |-ParmVarDecl 0x560735a469d0 <col:31, col:47> col:47 __attr 'pthread_attr_t *'
| |-NoThrowAttr 0x560735a46bb0 <col:71>
| `-NonNullAttr 0x560735a46c08 <col:112, col:126> 1
|-FunctionDecl 0x560735a46d10 <line:396:1, line:397:79> line:396:12 pthread_attr_destroy 'int (pthread_attr_t *)' extern
| |-ParmVarDecl 0x560735a46c58 <col:34, col:50> col:50 __attr 'pthread_attr_t *'
| |-NoThrowAttr 0x560735a46db8 <line:397:22>
| `-NonNullAttr 0x560735a46e10 <col:63, col:77> 1
|-FunctionDecl 0x560735a47038 <line:398:1, line:400:82> line:398:12 pthread_attr_getdetachstate 'int (const pthread_attr_t *, int *)' extern
| |-ParmVarDecl 0x560735a46e58 <col:41, col:63> col:63 __attr 'const pthread_attr_t *'
| |-ParmVarDecl 0x560735a46ed8 <line:399:6, col:11> col:11 __detachstate 'int *'
| |-NoThrowAttr 0x560735a470e8 <line:400:22>
| `-NonNullAttr 0x560735a47140 <col:63, col:80> 1 2
|-FunctionDecl 0x560735a47348 <line:401:1, line:403:79> line:401:12 pthread_attr_setdetachstate 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x560735a47188 <col:41, col:57> col:57 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x560735a47208 <line:402:6, col:10> col:10 __detachstate 'int'
| |-NoThrowAttr 0x560735a473f8 <line:403:22>
| `-NonNullAttr 0x560735a47450 <col:63, col:77> 1
|-FunctionDecl 0x560735a476a8 <line:404:1, line:406:82> line:404:12 pthread_attr_getguardsize 'int (const pthread_attr_t *, size_t *)' extern
| |-ParmVarDecl 0x560735a47498 <col:39, col:61> col:61 __attr 'const pthread_attr_t *'
| |-ParmVarDecl 0x560735a47540 <line:405:11, col:19> col:19 __guardsize 'size_t *'
| |-NoThrowAttr 0x560735a47758 <line:406:22>
| `-NonNullAttr 0x560735a477b0 <col:63, col:80> 1 2
|-FunctionDecl 0x560735a489e8 <line:407:1, line:409:79> line:407:12 pthread_attr_setguardsize 'int (pthread_attr_t *, size_t)' extern
| |-ParmVarDecl 0x560735a477f8 <col:39, col:55> col:55 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x560735a47870 <line:408:11, col:18> col:18 __guardsize 'size_t':'unsigned long'
| |-NoThrowAttr 0x560735a48a98 <line:409:22>
| `-NonNullAttr 0x560735a48af0 <col:63, col:77> 1
|-FunctionDecl 0x560735a48d28 <line:410:1, line:412:82> line:410:12 pthread_attr_getschedparam 'int (const pthread_attr_t *restrict, struct sched_param *restrict)' extern
| |-ParmVarDecl 0x560735a48b38 <col:40, col:73> col:73 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x560735a48bc8 <line:411:12, col:43> col:43 __param 'struct sched_param *restrict'
| |-NoThrowAttr 0x560735a48dd8 <line:412:22>
| `-NonNullAttr 0x560735a48e30 <col:63, col:80> 1 2
|-FunctionDecl 0x560735a49068 <line:413:1, line:415:97> line:413:12 pthread_attr_setschedparam 'int (pthread_attr_t *restrict, const struct sched_param *restrict)' extern
| |-ParmVarDecl 0x560735a48e78 <col:40, col:67> col:67 __attr 'pthread_attr_t *restrict'
| |-ParmVarDecl 0x560735a48f08 <line:414:12, line:415:12> col:12 __param 'const struct sched_param *restrict'
| |-NoThrowAttr 0x560735a49118 <col:37>
| `-NonNullAttr 0x560735a49170 <col:78, col:95> 1 2
|-FunctionDecl 0x560735a49358 <line:416:1, line:418:82> line:416:12 pthread_attr_getschedpolicy 'int (const pthread_attr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x560735a491b8 <col:41, line:417:6> col:6 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x560735a49238 <col:14, col:30> col:30 __policy 'int *restrict'
| |-NoThrowAttr 0x560735a49408 <line:418:22>
| `-NonNullAttr 0x560735a49460 <col:63, col:80> 1 2
|-FunctionDecl 0x560735a495e8 <line:419:1, line:420:79> line:419:12 pthread_attr_setschedpolicy 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x560735a494a8 <col:41, col:57> col:57 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x560735a49528 <col:65, col:69> col:69 __policy 'int'
| |-NoThrowAttr 0x560735a49698 <line:420:22>
| `-NonNullAttr 0x560735a496f0 <col:63, col:77> 1
|-FunctionDecl 0x560735a49898 <line:421:1, line:423:82> line:421:12 pthread_attr_getinheritsched 'int (const pthread_attr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x560735a49738 <col:42, line:422:7> col:7 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x560735a497b8 <col:15, col:31> col:31 __inherit 'int *restrict'
| |-NoThrowAttr 0x560735a49948 <line:423:22>
| `-NonNullAttr 0x560735a499c0 <col:63, col:80> 1 2
|-FunctionDecl 0x560735a49b48 <line:424:1, line:426:79> line:424:12 pthread_attr_setinheritsched 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x560735a49a08 <col:42, col:58> col:58 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x560735a49a88 <line:425:7, col:11> col:11 __inherit 'int'
| |-NoThrowAttr 0x560735a49bf8 <line:426:22>
| `-NonNullAttr 0x560735a49c50 <col:63, col:77> 1
|-FunctionDecl 0x560735a49df8 <line:427:1, line:429:82> line:427:12 pthread_attr_getscope 'int (const pthread_attr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x560735a49c98 <col:35, col:68> col:68 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x560735a49d18 <line:428:7, col:23> col:23 __scope 'int *restrict'
| |-NoThrowAttr 0x560735a49ea8 <line:429:22>
| `-NonNullAttr 0x560735a49f00 <col:63, col:80> 1 2
|-FunctionDecl 0x560735a4a088 <line:430:1, line:431:79> line:430:12 pthread_attr_setscope 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x560735a49f48 <col:35, col:51> col:51 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x560735a49fc8 <col:59, col:63> col:63 __scope 'int'
| |-NoThrowAttr 0x560735a4a138 <line:431:22>
| `-NonNullAttr 0x560735a4a190 <col:63, col:77> 1
|-FunctionDecl 0x560735a4a3b8 <line:432:1, line:434:115> line:432:12 pthread_attr_getstackaddr 'int (const pthread_attr_t *restrict, void **restrict)' extern
| |-ParmVarDecl 0x560735a4a1d8 <col:39, line:433:11> col:11 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x560735a4a258 <col:19, col:37> col:37 __stackaddr 'void **restrict'
| |-NoThrowAttr 0x560735a4a468 <line:434:22>
| |-NonNullAttr 0x560735a4a4c0 <col:63, col:80> 1 2
| `-DeprecatedAttr 0x560735a4a4f8 <col:100> "" ""
|-FunctionDecl 0x560735a4a708 <line:435:1, line:437:112> line:435:12 pthread_attr_setstackaddr 'int (pthread_attr_t *, void *)' extern
| |-ParmVarDecl 0x560735a4a548 <col:39, col:55> col:55 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x560735a4a5c8 <line:436:11, col:17> col:17 __stackaddr 'void *'
| |-NoThrowAttr 0x560735a4a7b8 <line:437:22>
| |-NonNullAttr 0x560735a4a810 <col:63, col:77> 1
| `-DeprecatedAttr 0x560735a4a848 <col:97> "" ""
|-FunctionDecl 0x560735a4aa48 <line:438:1, line:440:82> line:438:12 pthread_attr_getstacksize 'int (const pthread_attr_t *restrict, size_t *restrict)' extern
| |-ParmVarDecl 0x560735a4a898 <col:39, line:439:11> col:11 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x560735a4a910 <col:19, col:38> col:38 __stacksize 'size_t *restrict'
| |-NoThrowAttr 0x560735a4aaf8 <line:440:22>
| `-NonNullAttr 0x560735a4ab50 <col:63, col:80> 1 2
|-FunctionDecl 0x560735a4acd0 <line:441:1, line:443:79> line:441:12 pthread_attr_setstacksize 'int (pthread_attr_t *, size_t)' extern
| |-ParmVarDecl 0x560735a4ab98 <col:39, col:55> col:55 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x560735a4ac10 <line:442:11, col:18> col:18 __stacksize 'size_t':'unsigned long'
| |-NoThrowAttr 0x560735a4ad80 <line:443:22>
| `-NonNullAttr 0x560735a4add8 <col:63, col:77> 1
|-FunctionDecl 0x560735a4b0c8 <line:444:1, line:447:85> line:444:12 pthread_attr_getstack 'int (const pthread_attr_t *restrict, void **restrict, size_t *restrict)' extern
| |-ParmVarDecl 0x560735a4ae28 <col:35, col:68> col:68 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x560735a4aea8 <line:445:7, col:25> col:25 __stackaddr 'void **restrict'
| |-ParmVarDecl 0x560735a4af20 <line:446:7, col:26> col:26 __stacksize 'size_t *restrict'
| |-NoThrowAttr 0x560735a4b180 <line:447:22>
| `-NonNullAttr 0x560735a4b1d8 <col:63, col:83> 1 2 3
|-FunctionDecl 0x560735a4b488 <line:448:1, line:449:100> line:448:12 pthread_attr_setstack 'int (pthread_attr_t *, void *, size_t)' extern
| |-ParmVarDecl 0x560735a4b230 <col:35, col:51> col:51 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x560735a4b2b0 <col:59, col:65> col:65 __stackaddr 'void *'
| |-ParmVarDecl 0x560735a4b328 <line:449:7, col:14> col:14 __stacksize 'size_t':'unsigned long'
| |-NoThrowAttr 0x560735a4b540 <col:43>
| `-NonNullAttr 0x560735a4b598 <col:84, col:98> 1
|-FunctionDecl 0x560735a4b858 <line:450:1, line:452:79> line:450:12 pthread_setschedparam 'int (pthread_t, int, const struct sched_param *)' extern
| |-ParmVarDecl 0x560735a4b5e8 <col:35, col:45> col:45 __target_thread 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x560735a4b668 <col:62, col:66> col:66 __policy 'int'
| |-ParmVarDecl 0x560735a4b6f8 <line:451:7, col:33> col:33 __param 'const struct sched_param *'
| |-NoThrowAttr 0x560735a4b910 <line:452:22>
| `-NonNullAttr 0x560735a4b968 <col:63, col:77> 3
|-FunctionDecl 0x560735a4bc78 <line:453:1, line:456:82> line:453:12 pthread_getschedparam 'int (pthread_t, int *restrict, struct sched_param *restrict)' extern
| |-ParmVarDecl 0x560735a4b9e0 <col:35, col:45> col:45 __target_thread 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x560735a4ba60 <line:454:7, col:23> col:23 __policy 'int *restrict'
| |-ParmVarDecl 0x560735a4baf0 <line:455:7, col:38> col:38 __param 'struct sched_param *restrict'
| |-NoThrowAttr 0x560735a4bd30 <line:456:22>
| `-NonNullAttr 0x560735a4bd88 <col:63, col:80> 2 3
|-FunctionDecl 0x560735a4bf78 <line:457:1, line:458:45> line:457:12 pthread_setschedprio 'int (pthread_t, int)' extern
| |-ParmVarDecl 0x560735a4bdd8 <col:34, col:44> col:44 __target_thread 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x560735a4be58 <col:61, col:65> col:65 __prio 'int'
| `-NoThrowAttr 0x560735a4c028 <line:458:22>
|-FunctionDecl 0x560735a4c3f8 <line:459:1, line:460:71> line:459:12 pthread_once 'int (pthread_once_t *, void (*)(void))' extern
| |-ParmVarDecl 0x560735a4c0f0 <col:26, col:42> col:42 __once_control 'pthread_once_t *'
| |-ParmVarDecl 0x560735a4c290 <line:460:5, col:33> col:12 __init_routine 'void (*)(void)'
| `-NonNullAttr 0x560735a4c4a8 <col:52, col:69> 1 2
|-FunctionDecl 0x560735a4c650 <line:461:1, col:64> col:12 pthread_setcancelstate 'int (int, int *)' extern
| |-ParmVarDecl 0x560735a4c530 <col:36, col:40> col:40 __state 'int'
| `-ParmVarDecl 0x560735a4c5b0 <col:49, col:54> col:54 __oldstate 'int *'
|-FunctionDecl 0x560735a4c838 <line:462:1, col:61> col:12 pthread_setcanceltype 'int (int, int *)' extern
| |-ParmVarDecl 0x560735a4c718 <col:35, col:39> col:39 __type 'int'
| `-ParmVarDecl 0x560735a4c798 <col:47, col:52> col:52 __oldtype 'int *'
|-FunctionDecl 0x560735a4c9f0 <line:463:1, col:42> col:12 pthread_cancel 'int (pthread_t)' extern
| `-ParmVarDecl 0x560735a4c8f8 <col:28, col:38> col:38 __th 'pthread_t':'unsigned long'
|-FunctionDecl 0x560735a4cb30 <line:464:1, col:37> col:13 pthread_testcancel 'void (void)' extern
|-RecordDecl 0x560735a4cbd0 <line:465:9, line:473:1> line:465:9 struct definition
| |-RecordDecl 0x560735a4cc78 <line:467:3, line:471:3> line:467:3 struct definition
| | |-FieldDecl 0x560735a4cd68 <line:469:5, col:15> col:15 __cancel_jmp_buf '__jmp_buf':'long [8]'
| | `-FieldDecl 0x560735a4cdd0 <line:470:5, col:9> col:9 __mask_was_saved 'int'
| |-FieldDecl 0x560735a4cfa0 <line:467:3, line:471:23> col:5 __cancel_jmp_buf 'struct (anonymous struct at ./split_0/mix029_power.oepc_false-unreach-call.i:467:3) [1]'
| `-FieldDecl 0x560735a4d098 <line:472:3, col:16> col:9 __pad 'void *[4]'
|-TypedefDecl 0x560735a4d150 <line:465:1, line:473:3> col:3 referenced __pthread_unwind_buf_t 'struct __pthread_unwind_buf_t':'__pthread_unwind_buf_t'
| |-ElaboratedType 0x560735a4d0f0 'struct __pthread_unwind_buf_t' sugar
| | `-RecordType 0x560735a4cc50 '__pthread_unwind_buf_t'
| |   `-Record 0x560735a4cbd0 ''
| `-AlignedAttr 0x560735a4d1a8 <col:42> aligned
|   `-<<<NULL>>>
|-RecordDecl 0x560735a4d220 <line:474:1, line:480:1> line:474:8 struct __pthread_cleanup_frame definition
| |-FieldDecl 0x560735a4d380 <line:476:3, col:35> col:10 __cancel_routine 'void (*)(void *)'
| |-FieldDecl 0x560735a4d3e8 <line:477:3, col:9> col:9 __cancel_arg 'void *'
| |-FieldDecl 0x560735a4d450 <line:478:3, col:7> col:7 __do_it 'int'
| `-FieldDecl 0x560735a4d4b8 <line:479:3, col:7> col:7 __cancel_type 'int'
|-FunctionDecl 0x560735a4d6c0 <line:481:1, col:69> col:13 __pthread_register_cancel 'void (__pthread_unwind_buf_t *)' extern
| `-ParmVarDecl 0x560735a4d5b0 <col:40, col:64> col:64 __buf '__pthread_unwind_buf_t *'
|-FunctionDecl 0x560735a4d808 <line:483:1, col:71> col:13 __pthread_unregister_cancel 'void (__pthread_unwind_buf_t *)' extern
| `-ParmVarDecl 0x560735a4d778 <col:42, col:66> col:66 __buf '__pthread_unwind_buf_t *'
|-FunctionDecl 0x560735a4da00 <line:485:1, line:487:31> line:485:13 __pthread_unwind_next 'void (__pthread_unwind_buf_t *) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x560735a4d8c0 <col:36, col:60> col:60 __buf '__pthread_unwind_buf_t *'
| `-WeakAttr 0x560735a4daa8 <line:487:22>
|-RecordDecl 0x560735a4db00 <line:489:1, col:8> col:8 struct __jmp_buf_tag
|-FunctionDecl 0x560735a4de18 <line:490:1, col:98> col:12 __sigsetjmp 'int (struct __jmp_buf_tag *, int)' extern
| |-ParmVarDecl 0x560735a4dc78 <col:25, col:47> col:47 __env 'struct __jmp_buf_tag *'
| |-ParmVarDecl 0x560735a4dcf8 <col:54, col:58> col:58 __savemask 'int'
| |-NoThrowAttr 0x560735a4dec8 <col:86>
| `-ReturnsTwiceAttr 0x560735a4df20 <col:12> Implicit
|-FunctionDecl 0x560735a4e248 <line:491:1, line:493:79> line:491:12 pthread_mutex_init 'int (pthread_mutex_t *, const pthread_mutexattr_t *)' extern
| |-ParmVarDecl 0x560735a4dff0 <col:32, col:49> col:49 __mutex 'pthread_mutex_t *'
| |-ParmVarDecl 0x560735a4e100 <line:492:11, col:38> col:38 __mutexattr 'const pthread_mutexattr_t *'
| |-NoThrowAttr 0x560735a4e2f8 <line:493:22>
| `-NonNullAttr 0x560735a4e350 <col:63, col:77> 1
|-FunctionDecl 0x560735a4e4c8 <line:494:1, line:495:79> line:494:12 pthread_mutex_destroy 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x560735a4e398 <col:35, col:52> col:52 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x560735a4e570 <line:495:22>
| `-NonNullAttr 0x560735a4e5c8 <col:63, col:77> 1
|-FunctionDecl 0x560735a4e6d0 <line:496:1, line:497:68> line:496:12 pthread_mutex_trylock 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x560735a4e618 <col:35, col:52> col:52 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x560735a4e778 <line:497:22>
| `-NonNullAttr 0x560735a4e7d0 <col:52, col:66> 1
|-FunctionDecl 0x560735a4e8d0 <line:498:1, line:499:68> line:498:12 pthread_mutex_lock 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x560735a4e818 <col:32, col:49> col:49 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x560735a4e978 <line:499:22>
| `-NonNullAttr 0x560735a4e9d0 <col:52, col:66> 1
|-FunctionDecl 0x560735a4fc28 <line:500:1, line:502:85> line:500:12 pthread_mutex_timedlock 'int (pthread_mutex_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x560735a4fa38 <col:37, col:65> col:65 __mutex 'pthread_mutex_t *restrict'
| |-ParmVarDecl 0x560735a4fac8 <line:501:9, line:502:9> col:9 __abstime 'const struct timespec *restrict'
| |-NoThrowAttr 0x560735a4fcd8 <col:36>
| `-NonNullAttr 0x560735a4fd30 <col:66, col:83> 1 2
|-FunctionDecl 0x560735a4fe30 <line:503:1, line:504:68> line:503:12 pthread_mutex_unlock 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x560735a4fd78 <col:34, col:51> col:51 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x560735a4fed8 <line:504:22>
| `-NonNullAttr 0x560735a4ff30 <col:52, col:66> 1
|-FunctionDecl 0x560735a501c8 <line:505:1, line:508:82> line:505:12 pthread_mutex_getprioceiling 'int (const pthread_mutex_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x560735a4ffe0 <col:42, line:506:18> col:18 __mutex 'const pthread_mutex_t *restrict'
| |-ParmVarDecl 0x560735a50060 <line:507:7, col:23> col:23 __prioceiling 'int *restrict'
| |-NoThrowAttr 0x560735a50278 <line:508:22>
| `-NonNullAttr 0x560735a502d0 <col:63, col:80> 1 2
|-FunctionDecl 0x560735a50598 <line:509:1, line:512:82> line:509:12 pthread_mutex_setprioceiling 'int (pthread_mutex_t *restrict, int, int *restrict)' extern
| |-ParmVarDecl 0x560735a50318 <col:42, col:70> col:70 __mutex 'pthread_mutex_t *restrict'
| |-ParmVarDecl 0x560735a50398 <line:510:7, col:11> col:11 __prioceiling 'int'
| |-ParmVarDecl 0x560735a50418 <line:511:7, col:23> col:23 __old_ceiling 'int *restrict'
| |-NoThrowAttr 0x560735a50650 <line:512:22>
| `-NonNullAttr 0x560735a506a8 <col:63, col:80> 1 3
|-FunctionDecl 0x560735a507b0 <line:513:1, line:514:79> line:513:12 pthread_mutex_consistent 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x560735a506f8 <col:38, col:55> col:55 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x560735a50858 <line:514:22>
| `-NonNullAttr 0x560735a508b0 <col:63, col:77> 1
|-FunctionDecl 0x560735a50ad8 <line:515:1, line:516:79> line:515:12 pthread_mutexattr_init 'int (pthread_mutexattr_t *)' extern
| |-ParmVarDecl 0x560735a50960 <col:36, col:57> col:57 __attr 'pthread_mutexattr_t *'
| |-NoThrowAttr 0x560735a50b80 <line:516:22>
| `-NonNullAttr 0x560735a50bd8 <col:63, col:77> 1
|-FunctionDecl 0x560735a50ce0 <line:517:1, line:518:79> line:517:12 pthread_mutexattr_destroy 'int (pthread_mutexattr_t *)' extern
| |-ParmVarDecl 0x560735a50c28 <col:39, col:60> col:60 __attr 'pthread_mutexattr_t *'
| |-NoThrowAttr 0x560735a50d88 <line:518:22>
| `-NonNullAttr 0x560735a50de0 <col:63, col:77> 1
|-FunctionDecl 0x560735a51008 <line:519:1, line:522:82> line:519:12 pthread_mutexattr_getpshared 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x560735a50e28 <col:42, line:520:18> col:18 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x560735a50ea8 <line:521:7, col:23> col:23 __pshared 'int *restrict'
| |-NoThrowAttr 0x560735a510b8 <line:522:22>
| `-NonNullAttr 0x560735a51110 <col:63, col:80> 1 2
|-FunctionDecl 0x560735a51318 <line:523:1, line:525:79> line:523:12 pthread_mutexattr_setpshared 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x560735a51158 <col:42, col:63> col:63 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x560735a511d8 <line:524:7, col:11> col:11 __pshared 'int'
| |-NoThrowAttr 0x560735a513c8 <line:525:22>
| `-NonNullAttr 0x560735a51420 <col:63, col:77> 1
|-FunctionDecl 0x560735a515c8 <line:526:1, line:528:82> line:526:12 pthread_mutexattr_gettype 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x560735a51468 <col:39, line:527:11> col:11 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x560735a514e8 <col:19, col:35> col:35 __kind 'int *restrict'
| |-NoThrowAttr 0x560735a51678 <line:528:22>
| `-NonNullAttr 0x560735a516d0 <col:63, col:80> 1 2
|-FunctionDecl 0x560735a51858 <line:529:1, line:530:79> line:529:12 pthread_mutexattr_settype 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x560735a51718 <col:39, col:60> col:60 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x560735a51798 <col:68, col:72> col:72 __kind 'int'
| |-NoThrowAttr 0x560735a51908 <line:530:22>
| `-NonNullAttr 0x560735a51960 <col:63, col:77> 1
|-FunctionDecl 0x560735a51b20 <line:531:1, line:534:82> line:531:12 pthread_mutexattr_getprotocol 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x560735a519a8 <col:43, line:532:19> col:19 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x560735a51a40 <line:533:8, col:24> col:24 __protocol 'int *restrict'
| |-NoThrowAttr 0x560735a51bd0 <line:534:22>
| `-NonNullAttr 0x560735a51c28 <col:63, col:80> 1 2
|-FunctionDecl 0x560735a51db8 <line:535:1, line:537:79> line:535:12 pthread_mutexattr_setprotocol 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x560735a51c78 <col:43, col:64> col:64 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x560735a51cf8 <line:536:8, col:12> col:12 __protocol 'int'
| |-NoThrowAttr 0x560735a51e68 <line:537:22>
| `-NonNullAttr 0x560735a51ec0 <col:63, col:77> 1
|-FunctionDecl 0x560735a52068 <line:538:1, line:541:82> line:538:12 pthread_mutexattr_getprioceiling 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x560735a51f08 <col:46, line:539:22> col:22 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x560735a51f88 <line:540:11, col:27> col:27 __prioceiling 'int *restrict'
| |-NoThrowAttr 0x560735a52118 <line:541:22>
| `-NonNullAttr 0x560735a52170 <col:63, col:80> 1 2
|-FunctionDecl 0x560735a522f8 <line:542:1, line:544:79> line:542:12 pthread_mutexattr_setprioceiling 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x560735a521b8 <col:46, col:67> col:67 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x560735a52238 <line:543:11, col:15> col:15 __prioceiling 'int'
| |-NoThrowAttr 0x560735a523a8 <line:544:22>
| `-NonNullAttr 0x560735a52400 <col:63, col:77> 1
|-FunctionDecl 0x560735a525e8 <line:545:1, line:547:82> line:545:12 pthread_mutexattr_getrobust 'int (const pthread_mutexattr_t *, int *)' extern
| |-ParmVarDecl 0x560735a52448 <col:41, col:68> col:68 __attr 'const pthread_mutexattr_t *'
| |-ParmVarDecl 0x560735a524c8 <line:546:6, col:11> col:11 __robustness 'int *'
| |-NoThrowAttr 0x560735a52698 <line:547:22>
| `-NonNullAttr 0x560735a526f0 <col:63, col:80> 1 2
|-FunctionDecl 0x560735a52878 <line:548:1, line:550:79> line:548:12 pthread_mutexattr_setrobust 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x560735a52738 <col:41, col:62> col:62 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x560735a527b8 <line:549:6, col:10> col:10 __robustness 'int'
| |-NoThrowAttr 0x560735a52928 <line:550:22>
| `-NonNullAttr 0x560735a52980 <col:63, col:77> 1
|-FunctionDecl 0x560735a53cf8 <line:551:1, line:553:86> line:551:12 pthread_rwlock_init 'int (pthread_rwlock_t *restrict, const pthread_rwlockattr_t *restrict)' extern
| |-ParmVarDecl 0x560735a53aa0 <col:33, col:62> col:62 __rwlock 'pthread_rwlock_t *restrict'
| |-ParmVarDecl 0x560735a53bb0 <line:552:5, line:553:5> col:5 __attr 'const pthread_rwlockattr_t *restrict'
| |-NoThrowAttr 0x560735a53da8 <col:29>
| `-NonNullAttr 0x560735a53e00 <col:70, col:84> 1
|-FunctionDecl 0x560735a53f78 <line:554:1, line:555:79> line:554:12 pthread_rwlock_destroy 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x560735a53e48 <col:36, col:54> col:54 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x560735a54020 <line:555:22>
| `-NonNullAttr 0x560735a54078 <col:63, col:77> 1
|-FunctionDecl 0x560735a54180 <line:556:1, line:557:68> line:556:12 pthread_rwlock_rdlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x560735a540c8 <col:35, col:53> col:53 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x560735a54228 <line:557:22>
| `-NonNullAttr 0x560735a54280 <col:52, col:66> 1
|-FunctionDecl 0x560735a54380 <line:558:1, line:559:65> line:558:12 pthread_rwlock_tryrdlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x560735a542c8 <col:38, col:56> col:56 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x560735a54428 <line:559:19>
| `-NonNullAttr 0x560735a54480 <col:49, col:63> 1
|-FunctionDecl 0x560735a546b8 <line:560:1, line:562:88> line:560:12 pthread_rwlock_timedrdlock 'int (pthread_rwlock_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x560735a544c8 <col:40, col:69> col:69 __rwlock 'pthread_rwlock_t *restrict'
| |-ParmVarDecl 0x560735a54558 <line:561:12, line:562:12> col:12 __abstime 'const struct timespec *restrict'
| |-NoThrowAttr 0x560735a54768 <col:39>
| `-NonNullAttr 0x560735a547c0 <col:69, col:86> 1 2
|-FunctionDecl 0x560735a548c0 <line:563:1, line:564:68> line:563:12 pthread_rwlock_wrlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x560735a54808 <col:35, col:53> col:53 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x560735a54968 <line:564:22>
| `-NonNullAttr 0x560735a549c0 <col:52, col:66> 1
|-FunctionDecl 0x560735a54b28 <line:565:1, line:566:68> line:565:12 pthread_rwlock_trywrlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x560735a54a70 <col:38, col:56> col:56 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x560735a54bd0 <line:566:22>
| `-NonNullAttr 0x560735a54c28 <col:52, col:66> 1
|-FunctionDecl 0x560735a54de8 <line:567:1, line:569:88> line:567:12 pthread_rwlock_timedwrlock 'int (pthread_rwlock_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x560735a54c78 <col:40, col:69> col:69 __rwlock 'pthread_rwlock_t *restrict'
| |-ParmVarDecl 0x560735a54d08 <line:568:12, line:569:12> col:12 __abstime 'const struct timespec *restrict'
| |-NoThrowAttr 0x560735a54e98 <col:39>
| `-NonNullAttr 0x560735a54ef0 <col:69, col:86> 1 2
|-FunctionDecl 0x560735a54ff0 <line:570:1, line:571:68> line:570:12 pthread_rwlock_unlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x560735a54f38 <col:35, col:53> col:53 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x560735a55098 <line:571:22>
| `-NonNullAttr 0x560735a550f0 <col:52, col:66> 1
|-FunctionDecl 0x560735a552d8 <line:572:1, line:573:79> line:572:12 pthread_rwlockattr_init 'int (pthread_rwlockattr_t *)' extern
| |-ParmVarDecl 0x560735a551a0 <col:37, col:59> col:59 __attr 'pthread_rwlockattr_t *'
| |-NoThrowAttr 0x560735a55380 <line:573:22>
| `-NonNullAttr 0x560735a553d8 <col:63, col:77> 1
|-FunctionDecl 0x560735a554e0 <line:574:1, line:575:79> line:574:12 pthread_rwlockattr_destroy 'int (pthread_rwlockattr_t *)' extern
| |-ParmVarDecl 0x560735a55428 <col:40, col:62> col:62 __attr 'pthread_rwlockattr_t *'
| |-NoThrowAttr 0x560735a55588 <line:575:22>
| `-NonNullAttr 0x560735a555e0 <col:63, col:77> 1
|-FunctionDecl 0x560735a55808 <line:576:1, line:579:82> line:576:12 pthread_rwlockattr_getpshared 'int (const pthread_rwlockattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x560735a55628 <col:43, line:577:19> col:19 __attr 'const pthread_rwlockattr_t *restrict'
| |-ParmVarDecl 0x560735a556a8 <line:578:8, col:24> col:24 __pshared 'int *restrict'
| |-NoThrowAttr 0x560735a558b8 <line:579:22>
| `-NonNullAttr 0x560735a55910 <col:63, col:80> 1 2
|-FunctionDecl 0x560735a55b38 <line:580:1, line:582:79> line:580:12 pthread_rwlockattr_setpshared 'int (pthread_rwlockattr_t *, int)' extern
| |-ParmVarDecl 0x560735a55958 <col:43, col:65> col:65 __attr 'pthread_rwlockattr_t *'
| |-ParmVarDecl 0x560735a559d8 <line:581:8, col:12> col:12 __pshared 'int'
| |-NoThrowAttr 0x560735a55be8 <line:582:22>
| `-NonNullAttr 0x560735a55c40 <col:63, col:77> 1
|-FunctionDecl 0x560735a55de8 <line:583:1, line:586:82> line:583:12 pthread_rwlockattr_getkind_np 'int (const pthread_rwlockattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x560735a55c88 <col:43, line:584:19> col:19 __attr 'const pthread_rwlockattr_t *restrict'
| |-ParmVarDecl 0x560735a55d08 <line:585:8, col:24> col:24 __pref 'int *restrict'
| |-NoThrowAttr 0x560735a55e98 <line:586:22>
| `-NonNullAttr 0x560735a55ef0 <col:63, col:80> 1 2
|-FunctionDecl 0x560735a56078 <line:587:1, line:588:93> line:587:12 pthread_rwlockattr_setkind_np 'int (pthread_rwlockattr_t *, int)' extern
| |-ParmVarDecl 0x560735a55f38 <col:43, col:65> col:65 __attr 'pthread_rwlockattr_t *'
| |-ParmVarDecl 0x560735a55fb8 <line:588:8, col:12> col:12 __pref 'int'
| |-NoThrowAttr 0x560735a56128 <col:36>
| `-NonNullAttr 0x560735a56180 <col:77, col:91> 1
|-FunctionDecl 0x560735a564b8 <line:589:1, line:591:79> line:589:12 pthread_cond_init 'int (pthread_cond_t *restrict, const pthread_condattr_t *restrict)' extern
| |-ParmVarDecl 0x560735a56260 <col:31, col:58> col:58 __cond 'pthread_cond_t *restrict'
| |-ParmVarDecl 0x560735a56370 <line:590:10, col:47> col:47 __cond_attr 'const pthread_condattr_t *restrict'
| |-NoThrowAttr 0x560735a56568 <line:591:22>
| `-NonNullAttr 0x560735a565c0 <col:63, col:77> 1
|-FunctionDecl 0x560735a56738 <line:592:1, line:593:79> line:592:12 pthread_cond_destroy 'int (pthread_cond_t *)' extern
| |-ParmVarDecl 0x560735a56608 <col:34, col:50> col:50 __cond 'pthread_cond_t *'
| |-NoThrowAttr 0x560735a567e0 <line:593:22>
| `-NonNullAttr 0x560735a56838 <col:63, col:77> 1
|-FunctionDecl 0x560735a56940 <line:594:1, line:595:68> line:594:12 pthread_cond_signal 'int (pthread_cond_t *)' extern
| |-ParmVarDecl 0x560735a56888 <col:33, col:49> col:49 __cond 'pthread_cond_t *'
| |-NoThrowAttr 0x560735a569e8 <line:595:22>
| `-NonNullAttr 0x560735a56a40 <col:52, col:66> 1
|-FunctionDecl 0x560735a56b58 <line:596:1, line:597:68> line:596:12 pthread_cond_broadcast 'int (pthread_cond_t *)' extern
| |-ParmVarDecl 0x560735a56aa0 <col:36, col:52> col:52 __cond 'pthread_cond_t *'
| |-NoThrowAttr 0x560735a56c00 <line:597:22>
| `-NonNullAttr 0x560735a56c58 <col:52, col:66> 1
|-FunctionDecl 0x560735a56e88 <line:598:1, line:600:41> line:598:12 pthread_cond_wait 'int (pthread_cond_t *restrict, pthread_mutex_t *restrict)' extern
| |-ParmVarDecl 0x560735a56ca8 <col:31, col:58> col:58 __cond 'pthread_cond_t *restrict'
| |-ParmVarDecl 0x560735a56d20 <line:599:10, col:38> col:38 __mutex 'pthread_mutex_t *restrict'
| `-NonNullAttr 0x560735a56f38 <line:600:22, col:39> 1 2
|-FunctionDecl 0x560735a57268 <line:601:1, line:604:44> line:601:12 pthread_cond_timedwait 'int (pthread_cond_t *restrict, pthread_mutex_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x560735a56fb8 <col:36, col:63> col:63 __cond 'pthread_cond_t *restrict'
| |-ParmVarDecl 0x560735a57030 <line:602:8, col:36> col:36 __mutex 'pthread_mutex_t *restrict'
| |-ParmVarDecl 0x560735a570c0 <line:603:8, col:42> col:42 __abstime 'const struct timespec *restrict'
| `-NonNullAttr 0x560735a57320 <line:604:22, col:42> 1 2 3
|-FunctionDecl 0x560735a57538 <line:605:1, line:606:79> line:605:12 pthread_condattr_init 'int (pthread_condattr_t *)' extern
| |-ParmVarDecl 0x560735a57400 <col:35, col:55> col:55 __attr 'pthread_condattr_t *'
| |-NoThrowAttr 0x560735a575e0 <line:606:22>
| `-NonNullAttr 0x560735a57638 <col:63, col:77> 1
|-FunctionDecl 0x560735a57740 <line:607:1, line:608:79> line:607:12 pthread_condattr_destroy 'int (pthread_condattr_t *)' extern
| |-ParmVarDecl 0x560735a57688 <col:38, col:58> col:58 __attr 'pthread_condattr_t *'
| |-NoThrowAttr 0x560735a577e8 <line:608:22>
| `-NonNullAttr 0x560735a57840 <col:63, col:77> 1
|-FunctionDecl 0x560735a57aa0 <line:609:1, line:612:82> line:609:12 pthread_condattr_getpshared 'int (const pthread_condattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x560735a57888 <col:41, line:610:17> col:17 __attr 'const pthread_condattr_t *restrict'
| |-ParmVarDecl 0x560735a57908 <line:611:6, col:22> col:22 __pshared 'int *restrict'
| |-NoThrowAttr 0x560735a57b50 <line:612:22>
| `-NonNullAttr 0x560735a57ba8 <col:63, col:80> 1 2
|-FunctionDecl 0x560735a57db8 <line:613:1, line:614:94> line:613:12 pthread_condattr_setpshared 'int (pthread_condattr_t *, int)' extern
| |-ParmVarDecl 0x560735a57bf8 <col:41, col:61> col:61 __attr 'pthread_condattr_t *'
| |-ParmVarDecl 0x560735a57c78 <line:614:6, col:10> col:10 __pshared 'int'
| |-NoThrowAttr 0x560735a57e68 <col:37>
| `-NonNullAttr 0x560735a57ec0 <col:78, col:92> 1
|-FunctionDecl 0x560735a580d8 <line:615:1, line:618:82> line:615:12 pthread_condattr_getclock 'int (const pthread_condattr_t *restrict, __clockid_t *restrict)' extern
| |-ParmVarDecl 0x560735a57f08 <col:39, line:616:22> col:22 __attr 'const pthread_condattr_t *restrict'
| |-ParmVarDecl 0x560735a57fb0 <line:617:11, col:35> col:35 __clock_id '__clockid_t *restrict'
| |-NoThrowAttr 0x560735a58188 <line:618:22>
| `-NonNullAttr 0x560735a581e0 <col:63, col:80> 1 2
|-FunctionDecl 0x560735a583a8 <line:619:1, line:621:79> line:619:12 pthread_condattr_setclock 'int (pthread_condattr_t *, __clockid_t)' extern
| |-ParmVarDecl 0x560735a58228 <col:39, col:59> col:59 __attr 'pthread_condattr_t *'
| |-ParmVarDecl 0x560735a582a0 <line:620:11, col:23> col:23 __clock_id '__clockid_t':'int'
| |-NoThrowAttr 0x560735a58458 <line:621:22>
| `-NonNullAttr 0x560735a584b0 <col:63, col:77> 1
|-FunctionDecl 0x560735a58758 <line:622:1, line:623:79> line:622:12 pthread_spin_init 'int (pthread_spinlock_t *, int)' extern
| |-ParmVarDecl 0x560735a58590 <col:31, col:51> col:51 __lock 'pthread_spinlock_t *'
| |-ParmVarDecl 0x560735a58610 <col:59, col:63> col:63 __pshared 'int'
| |-NoThrowAttr 0x560735a58808 <line:623:22>
| `-NonNullAttr 0x560735a58860 <col:63, col:77> 1
|-FunctionDecl 0x560735a589d8 <line:624:1, line:625:79> line:624:12 pthread_spin_destroy 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x560735a588a8 <col:34, col:54> col:54 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x560735a58ab0 <line:625:22>
| `-NonNullAttr 0x560735a58b08 <col:63, col:77> 1
|-FunctionDecl 0x560735a58c10 <line:626:1, line:627:68> line:626:12 pthread_spin_lock 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x560735a58b58 <col:31, col:51> col:51 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x560735a58cb8 <line:627:22>
| `-NonNullAttr 0x560735a58d10 <col:52, col:66> 1
|-FunctionDecl 0x560735a58e10 <line:628:1, line:629:68> line:628:12 pthread_spin_trylock 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x560735a58d58 <col:34, col:54> col:54 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x560735a58eb8 <line:629:22>
| `-NonNullAttr 0x560735a58f10 <col:52, col:66> 1
|-FunctionDecl 0x560735a59010 <line:630:1, line:631:68> line:630:12 pthread_spin_unlock 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x560735a58f58 <col:33, col:53> col:53 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x560735a590b8 <line:631:22>
| `-NonNullAttr 0x560735a59110 <col:52, col:66> 1
|-FunctionDecl 0x560735a594e8 <line:632:1, line:635:79> line:632:12 pthread_barrier_init 'int (pthread_barrier_t *restrict, const pthread_barrierattr_t *restrict, unsigned int)' extern
| |-ParmVarDecl 0x560735a591f0 <col:34, col:64> col:64 __barrier 'pthread_barrier_t *restrict'
| |-ParmVarDecl 0x560735a59300 <line:633:6, line:634:6> col:6 __attr 'const pthread_barrierattr_t *restrict'
| |-ParmVarDecl 0x560735a59380 <col:14, col:27> col:27 __count 'unsigned int'
| |-NoThrowAttr 0x560735a595a0 <line:635:22>
| `-NonNullAttr 0x560735a595f8 <col:63, col:77> 1
|-FunctionDecl 0x560735a59778 <line:636:1, line:637:79> line:636:12 pthread_barrier_destroy 'int (pthread_barrier_t *)' extern
| |-ParmVarDecl 0x560735a59648 <col:37, col:56> col:56 __barrier 'pthread_barrier_t *'
| |-NoThrowAttr 0x560735a59820 <line:637:22>
| `-NonNullAttr 0x560735a59878 <col:63, col:77> 1
|-FunctionDecl 0x560735a59980 <line:638:1, line:639:68> line:638:12 pthread_barrier_wait 'int (pthread_barrier_t *)' extern
| |-ParmVarDecl 0x560735a598c8 <col:34, col:53> col:53 __barrier 'pthread_barrier_t *'
| |-NoThrowAttr 0x560735a59a28 <line:639:22>
| `-NonNullAttr 0x560735a59a80 <col:52, col:66> 1
|-FunctionDecl 0x560735a5ac88 <line:640:1, line:641:79> line:640:12 pthread_barrierattr_init 'int (pthread_barrierattr_t *)' extern
| |-ParmVarDecl 0x560735a5ab50 <col:38, col:61> col:61 __attr 'pthread_barrierattr_t *'
| |-NoThrowAttr 0x560735a5ad30 <line:641:22>
| `-NonNullAttr 0x560735a5ad88 <col:63, col:77> 1
|-FunctionDecl 0x560735a5ae90 <line:642:1, line:643:79> line:642:12 pthread_barrierattr_destroy 'int (pthread_barrierattr_t *)' extern
| |-ParmVarDecl 0x560735a5add8 <col:41, col:64> col:64 __attr 'pthread_barrierattr_t *'
| |-NoThrowAttr 0x560735a5af38 <line:643:22>
| `-NonNullAttr 0x560735a5af90 <col:63, col:77> 1
|-FunctionDecl 0x560735a5b1b8 <line:644:1, line:647:82> line:644:12 pthread_barrierattr_getpshared 'int (const pthread_barrierattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x560735a5afd8 <col:44, line:645:20> col:20 __attr 'const pthread_barrierattr_t *restrict'
| |-ParmVarDecl 0x560735a5b058 <line:646:9, col:25> col:25 __pshared 'int *restrict'
| |-NoThrowAttr 0x560735a5b268 <line:647:22>
| `-NonNullAttr 0x560735a5b2c0 <col:63, col:80> 1 2
|-FunctionDecl 0x560735a5b4c8 <line:648:1, line:650:79> line:648:12 pthread_barrierattr_setpshared 'int (pthread_barrierattr_t *, int)' extern
| |-ParmVarDecl 0x560735a5b308 <col:44, col:67> col:67 __attr 'pthread_barrierattr_t *'
| |-ParmVarDecl 0x560735a5b388 <line:649:9, col:13> col:13 __pshared 'int'
| |-NoThrowAttr 0x560735a5b578 <line:650:22>
| `-NonNullAttr 0x560735a5b5d0 <col:63, col:77> 1
|-FunctionDecl 0x560735a5b918 <line:651:1, line:653:79> line:651:12 pthread_key_create 'int (pthread_key_t *, void (*)(void *))' extern
| |-ParmVarDecl 0x560735a5b6b0 <col:32, col:47> col:47 __key 'pthread_key_t *'
| |-ParmVarDecl 0x560735a5b7d0 <line:652:11, col:43> col:18 __destr_function 'void (*)(void *)'
| |-NoThrowAttr 0x560735a5b9c8 <line:653:22>
| `-NonNullAttr 0x560735a5ba20 <col:63, col:77> 1
|-FunctionDecl 0x560735a5bb88 <line:654:1, col:92> col:12 pthread_key_delete 'int (pthread_key_t)' extern
| |-ParmVarDecl 0x560735a5ba68 <col:32, col:46> col:46 __key 'pthread_key_t':'unsigned int'
| `-NoThrowAttr 0x560735a5bc30 <col:69>
|-FunctionDecl 0x560735a5bda8 <line:655:1, col:95> col:14 pthread_getspecific 'void *(pthread_key_t)' extern
| |-ParmVarDecl 0x560735a5bc98 <col:35, col:49> col:49 __key 'pthread_key_t':'unsigned int'
| `-NoThrowAttr 0x560735a5be50 <col:72>
|-FunctionDecl 0x560735a5c088 <line:656:1, line:657:67> line:656:12 pthread_setspecific 'int (pthread_key_t, const void *)' extern
| |-ParmVarDecl 0x560735a5beb8 <col:33, col:47> col:47 __key 'pthread_key_t':'unsigned int'
| |-ParmVarDecl 0x560735a5bf68 <line:657:5, col:17> col:17 __pointer 'const void *'
| `-NoThrowAttr 0x560735a5c138 <col:44>
|-FunctionDecl 0x560735a5c358 <line:658:1, line:660:79> line:658:12 pthread_getcpuclockid 'int (pthread_t, __clockid_t *)' extern
| |-ParmVarDecl 0x560735a5c1a0 <col:35, col:45> col:45 __thread_id 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x560735a5c218 <line:659:7, col:20> col:20 __clock_id '__clockid_t *'
| |-NoThrowAttr 0x560735a5c408 <line:660:22>
| `-NonNullAttr 0x560735a5c460 <col:63, col:77> 2
|-FunctionDecl 0x560735a5c8a8 <line:661:1, line:663:70> line:661:12 pthread_atfork 'int (void (*)(void), void (*)(void), void (*)(void))' extern
| |-ParmVarDecl 0x560735a5c540 <col:28, col:51> col:35 __prepare 'void (*)(void)'
| |-ParmVarDecl 0x560735a5c650 <line:662:7, col:29> col:14 __parent 'void (*)(void)'
| |-ParmVarDecl 0x560735a5c760 <line:663:7, col:28> col:14 __child 'void (*)(void)'
| `-NoThrowAttr 0x560735a5c960 <col:47>
|-FunctionDecl 0x560735a5caf0 <line:665:1, col:20> col:8 used P0 'void *(void *)'
| `-ParmVarDecl 0x560735a5c9d0 <col:11, col:17> col:17 arg 'void *'
|-FunctionDecl 0x560735a5cc48 <line:666:1, col:20> col:8 used P1 'void *(void *)'
| `-ParmVarDecl 0x560735a5cbb0 <col:11, col:17> col:17 arg 'void *'
|-FunctionDecl 0x560735a5cda0 <line:667:1, col:20> col:8 used P2 'void *(void *)'
| `-ParmVarDecl 0x560735a5cd08 <col:11, col:17> col:17 arg 'void *'
|-FunctionDecl 0x560735a5cef8 <line:668:1, col:20> col:8 used P3 'void *(void *)'
| `-ParmVarDecl 0x560735a5ce60 <col:11, col:17> col:17 arg 'void *'
|-FunctionDecl 0x560735a5cfc0 <line:669:1, col:12> col:6 fence 'void ()'
|-FunctionDecl 0x560735a5d080 <line:670:1, col:12> col:6 isync 'void ()'
|-FunctionDecl 0x560735a5d140 <line:671:1, col:14> col:6 lwfence 'void ()'
|-VarDecl 0x560735a5d1f8 <line:672:1, col:5> col:5 used __unbuffered_cnt 'int'
|-VarDecl 0x560735a5d278 prev 0x560735a5d1f8 <line:673:1, col:24> col:5 used __unbuffered_cnt 'int' cinit
| `-IntegerLiteral 0x560735a5d2e0 <col:24> 'int' 0
|-VarDecl 0x560735a5d318 <line:674:1, col:5> col:5 used __unbuffered_p0_EAX 'int'
|-VarDecl 0x560735a5d398 prev 0x560735a5d318 <line:675:1, col:27> col:5 used __unbuffered_p0_EAX 'int' cinit
| `-IntegerLiteral 0x560735a5d400 <col:27> 'int' 0
|-VarDecl 0x560735a5d438 <line:676:1, col:5> col:5 used __unbuffered_p3_EAX 'int'
|-VarDecl 0x560735a5d4b8 prev 0x560735a5d438 <line:677:1, col:27> col:5 used __unbuffered_p3_EAX 'int' cinit
| `-IntegerLiteral 0x560735a5d520 <col:27> 'int' 0
|-VarDecl 0x560735a5d558 <line:678:1, col:5> col:5 used __unbuffered_p3_EBX 'int'
|-VarDecl 0x560735a5d5d8 prev 0x560735a5d558 <line:679:1, col:27> col:5 used __unbuffered_p3_EBX 'int' cinit
| `-IntegerLiteral 0x560735a5d640 <col:27> 'int' 0
|-VarDecl 0x560735a5d678 <line:680:1, col:5> col:5 used a 'int'
|-VarDecl 0x560735a5d6f8 prev 0x560735a5d678 <line:681:1, col:9> col:5 used a 'int' cinit
| `-IntegerLiteral 0x560735a5d760 <col:9> 'int' 0
|-VarDecl 0x560735a5d790 <line:682:1, col:7> col:7 used a$flush_delayed '_Bool'
|-VarDecl 0x560735a5d810 <line:683:1, col:5> col:5 used a$mem_tmp 'int'
|-VarDecl 0x560735a5d888 <line:684:1, col:7> col:7 used a$r_buff0_thd0 '_Bool'
|-VarDecl 0x560735a5d900 <line:685:1, col:7> col:7 used a$r_buff0_thd1 '_Bool'
|-VarDecl 0x560735a5d978 <line:686:1, col:7> col:7 used a$r_buff0_thd2 '_Bool'
|-VarDecl 0x560735a5d9f0 <line:687:1, col:7> col:7 used a$r_buff0_thd3 '_Bool'
|-VarDecl 0x560735a5da68 <line:688:1, col:7> col:7 used a$r_buff0_thd4 '_Bool'
|-VarDecl 0x560735a5db00 <line:689:1, col:7> col:7 used a$r_buff1_thd0 '_Bool'
|-VarDecl 0x560735a5db78 <line:690:1, col:7> col:7 used a$r_buff1_thd1 '_Bool'
|-VarDecl 0x560735a5dbf0 <line:691:1, col:7> col:7 used a$r_buff1_thd2 '_Bool'
|-VarDecl 0x560735a5dc68 <line:692:1, col:7> col:7 used a$r_buff1_thd3 '_Bool'
|-VarDecl 0x560735a5dce0 <line:693:1, col:7> col:7 used a$r_buff1_thd4 '_Bool'
|-VarDecl 0x560735a5dd58 <line:694:1, col:7> col:7 a$read_delayed '_Bool'
|-VarDecl 0x560735a5ddd8 <line:695:1, col:6> col:6 a$read_delayed_var 'int *'
|-VarDecl 0x560735a5de58 <line:696:1, col:5> col:5 used a$w_buff0 'int'
|-VarDecl 0x560735a5ded0 <line:697:1, col:7> col:7 used a$w_buff0_used '_Bool'
|-VarDecl 0x560735a5df50 <line:698:1, col:5> col:5 used a$w_buff1 'int'
|-VarDecl 0x560735a5dfc8 <line:699:1, col:7> col:7 used a$w_buff1_used '_Bool'
|-VarDecl 0x560735a5e040 <line:700:1, col:7> col:7 used main$tmp_guard0 '_Bool'
|-VarDecl 0x560735a5e0b8 <line:701:1, col:7> col:7 used main$tmp_guard1 '_Bool'
|-VarDecl 0x560735a5e138 <line:702:1, col:5> col:5 used x 'int'
|-VarDecl 0x560735a5e1b8 prev 0x560735a5e138 <line:703:1, col:9> col:5 used x 'int' cinit
| `-IntegerLiteral 0x560735a5e220 <col:9> 'int' 0
|-VarDecl 0x560735a5e258 <line:704:1, col:5> col:5 used y 'int'
|-VarDecl 0x560735a5e2d8 prev 0x560735a5e258 <line:705:1, col:9> col:5 used y 'int' cinit
| `-IntegerLiteral 0x560735a5e340 <col:9> 'int' 0
|-VarDecl 0x560735a5e378 <line:706:1, col:5> col:5 used z 'int'
|-VarDecl 0x560735a5e3f8 prev 0x560735a5e378 <line:707:1, col:9> col:5 used z 'int' cinit
| `-IntegerLiteral 0x560735a5e460 <col:9> 'int' 0
|-VarDecl 0x560735a5e490 <line:708:1, col:7> col:7 used weak$$choice0 '_Bool'
|-VarDecl 0x560735a5e508 <line:709:1, col:7> col:7 used weak$$choice2 '_Bool'
|-FunctionDecl 0x560735a5e620 prev 0x560735a5caf0 <line:710:1, line:739:1> line:710:8 used P0 'void *(void *)'
| |-ParmVarDecl 0x560735a5e588 <col:11, col:17> col:17 arg 'void *'
| `-CompoundStmt 0x560735a5fef8 <line:711:1, line:739:1>
|   |-CallExpr 0x560735a5e738 <line:712:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x560735a5e720 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x560735a5e6c8 <col:3> 'void ()' Function 0x560735a03e40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x560735a5e7b0 <line:713:3, col:15> 'int' '='
|   | |-DeclRefExpr 0x560735a5e758 <col:3> 'int' lvalue Var 0x560735a5df50 'a$w_buff1' 'int'
|   | `-ImplicitCastExpr 0x560735a5e798 <col:15> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x560735a5e778 <col:15> 'int' lvalue Var 0x560735a5de58 'a$w_buff0' 'int'
|   |-BinaryOperator 0x560735a5e810 <line:714:3, col:15> 'int' '='
|   | |-DeclRefExpr 0x560735a5e7d0 <col:3> 'int' lvalue Var 0x560735a5de58 'a$w_buff0' 'int'
|   | `-IntegerLiteral 0x560735a5e7f0 <col:15> 'int' 1
|   |-BinaryOperator 0x560735a5e888 <line:715:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x560735a5e830 <col:3> '_Bool' lvalue Var 0x560735a5dfc8 'a$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x560735a5e870 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x560735a5e850 <col:20> '_Bool' lvalue Var 0x560735a5ded0 'a$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x560735a5e920 <line:716:3, col:27> '_Bool' '='
|   | |-DeclRefExpr 0x560735a5e8a8 <col:3> '_Bool' lvalue Var 0x560735a5ded0 'a$w_buff0_used' '_Bool'
|   | `-CStyleCastExpr 0x560735a5e8f8 <col:20, col:27> '_Bool' <IntegralToBoolean>
|   |   `-IntegerLiteral 0x560735a5e8c8 <col:27> 'int' 1
|   |-CallExpr 0x560735a5eaa8 <line:717:3, col:56> 'void'
|   | |-ImplicitCastExpr 0x560735a5ea90 <col:3> 'void (*)(int)' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x560735a5e940 <col:3> 'void (int)' Function 0x560735a03bc8 '__VERIFIER_assert' 'void (int)'
|   | `-UnaryOperator 0x560735a5ea40 <col:21, col:55> 'int' prefix '!' cannot overflow
|   |   `-ParenExpr 0x560735a5ea20 <col:22, col:55> 'int'
|   |     `-BinaryOperator 0x560735a5ea00 <col:23, col:41> 'int' '&&'
|   |       |-ImplicitCastExpr 0x560735a5e9b8 <col:23> 'int' <IntegralCast>
|   |       | `-ImplicitCastExpr 0x560735a5e9a0 <col:23> '_Bool' <LValueToRValue>
|   |       |   `-DeclRefExpr 0x560735a5e960 <col:23> '_Bool' lvalue Var 0x560735a5dfc8 'a$w_buff1_used' '_Bool'
|   |       `-ImplicitCastExpr 0x560735a5e9e8 <col:41> 'int' <IntegralCast>
|   |         `-ImplicitCastExpr 0x560735a5e9d0 <col:41> '_Bool' <LValueToRValue>
|   |           `-DeclRefExpr 0x560735a5e980 <col:41> '_Bool' lvalue Var 0x560735a5ded0 'a$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x560735a5eb48 <line:718:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x560735a5ead0 <col:3> '_Bool' lvalue Var 0x560735a5db00 'a$r_buff1_thd0' '_Bool'
|   | `-ImplicitCastExpr 0x560735a5eb30 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x560735a5eb10 <col:20> '_Bool' lvalue Var 0x560735a5d888 'a$r_buff0_thd0' '_Bool'
|   |-BinaryOperator 0x560735a5ebc0 <line:719:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x560735a5eb68 <col:3> '_Bool' lvalue Var 0x560735a5db78 'a$r_buff1_thd1' '_Bool'
|   | `-ImplicitCastExpr 0x560735a5eba8 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x560735a5eb88 <col:20> '_Bool' lvalue Var 0x560735a5d900 'a$r_buff0_thd1' '_Bool'
|   |-BinaryOperator 0x560735a5ec38 <line:720:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x560735a5ebe0 <col:3> '_Bool' lvalue Var 0x560735a5dbf0 'a$r_buff1_thd2' '_Bool'
|   | `-ImplicitCastExpr 0x560735a5ec20 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x560735a5ec00 <col:20> '_Bool' lvalue Var 0x560735a5d978 'a$r_buff0_thd2' '_Bool'
|   |-BinaryOperator 0x560735a5ecb0 <line:721:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x560735a5ec58 <col:3> '_Bool' lvalue Var 0x560735a5dc68 'a$r_buff1_thd3' '_Bool'
|   | `-ImplicitCastExpr 0x560735a5ec98 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x560735a5ec78 <col:20> '_Bool' lvalue Var 0x560735a5d9f0 'a$r_buff0_thd3' '_Bool'
|   |-BinaryOperator 0x560735a5ed28 <line:722:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x560735a5ecd0 <col:3> '_Bool' lvalue Var 0x560735a5dce0 'a$r_buff1_thd4' '_Bool'
|   | `-ImplicitCastExpr 0x560735a5ed10 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x560735a5ecf0 <col:20> '_Bool' lvalue Var 0x560735a5da68 'a$r_buff0_thd4' '_Bool'
|   |-BinaryOperator 0x560735a5edc0 <line:723:3, col:27> '_Bool' '='
|   | |-DeclRefExpr 0x560735a5ed48 <col:3> '_Bool' lvalue Var 0x560735a5d900 'a$r_buff0_thd1' '_Bool'
|   | `-CStyleCastExpr 0x560735a5ed98 <col:20, col:27> '_Bool' <IntegralToBoolean>
|   |   `-IntegerLiteral 0x560735a5ed68 <col:27> 'int' 1
|   |-CallExpr 0x560735a5ee18 <line:724:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x560735a5ee00 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x560735a5ede0 <col:3> 'void ()' Function 0x560735a03f00 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x560735a5ee70 <line:725:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x560735a5ee58 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x560735a5ee38 <col:3> 'void ()' Function 0x560735a03e40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x560735a5eee8 <line:726:3, col:25> 'int' '='
|   | |-DeclRefExpr 0x560735a5ee90 <col:3> 'int' lvalue Var 0x560735a5d398 '__unbuffered_p0_EAX' 'int'
|   | `-ImplicitCastExpr 0x560735a5eed0 <col:25> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x560735a5eeb0 <col:25> 'int' lvalue Var 0x560735a5e1b8 'x' 'int'
|   |-CallExpr 0x560735a5ef40 <line:727:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x560735a5ef28 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x560735a5ef08 <col:3> 'void ()' Function 0x560735a03f00 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x560735a5ef98 <line:728:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x560735a5ef80 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x560735a5ef60 <col:3> 'void ()' Function 0x560735a03e40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x560735a5f280 <line:729:3, col:103> 'int' '='
|   | |-DeclRefExpr 0x560735a5efb8 <col:3> 'int' lvalue Var 0x560735a5d6f8 'a' 'int'
|   | `-ConditionalOperator 0x560735a5f250 <col:7, col:103> 'int'
|   |   |-BinaryOperator 0x560735a5f078 <col:7, col:25> 'int' '&&'
|   |   | |-ImplicitCastExpr 0x560735a5f030 <col:7> 'int' <IntegralCast>
|   |   | | `-ImplicitCastExpr 0x560735a5f018 <col:7> '_Bool' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x560735a5efd8 <col:7> '_Bool' lvalue Var 0x560735a5ded0 'a$w_buff0_used' '_Bool'
|   |   | `-ImplicitCastExpr 0x560735a5f060 <col:25> 'int' <IntegralCast>
|   |   |   `-ImplicitCastExpr 0x560735a5f048 <col:25> '_Bool' <LValueToRValue>
|   |   |     `-DeclRefExpr 0x560735a5eff8 <col:25> '_Bool' lvalue Var 0x560735a5d900 'a$r_buff0_thd1' '_Bool'
|   |   |-ImplicitCastExpr 0x560735a5f238 <col:42> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x560735a5f098 <col:42> 'int' lvalue Var 0x560735a5de58 'a$w_buff0' 'int'
|   |   `-ParenExpr 0x560735a5f218 <col:54, col:103> 'int'
|   |     `-ConditionalOperator 0x560735a5f1e8 <col:55, col:102> 'int'
|   |       |-BinaryOperator 0x560735a5f158 <col:55, col:73> 'int' '&&'
|   |       | |-ImplicitCastExpr 0x560735a5f110 <col:55> 'int' <IntegralCast>
|   |       | | `-ImplicitCastExpr 0x560735a5f0f8 <col:55> '_Bool' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x560735a5f0b8 <col:55> '_Bool' lvalue Var 0x560735a5dfc8 'a$w_buff1_used' '_Bool'
|   |       | `-ImplicitCastExpr 0x560735a5f140 <col:73> 'int' <IntegralCast>
|   |       |   `-ImplicitCastExpr 0x560735a5f128 <col:73> '_Bool' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x560735a5f0d8 <col:73> '_Bool' lvalue Var 0x560735a5db78 'a$r_buff1_thd1' '_Bool'
|   |       |-ImplicitCastExpr 0x560735a5f1b8 <col:90> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x560735a5f178 <col:90> 'int' lvalue Var 0x560735a5df50 'a$w_buff1' 'int'
|   |       `-ImplicitCastExpr 0x560735a5f1d0 <col:102> 'int' <LValueToRValue>
|   |         `-DeclRefExpr 0x560735a5f198 <col:102> 'int' lvalue Var 0x560735a5d6f8 'a' 'int'
|   |-BinaryOperator 0x560735a5f488 <line:730:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x560735a5f2a0 <col:3> '_Bool' lvalue Var 0x560735a5ded0 'a$w_buff0_used' '_Bool'
|   | `-ImplicitCastExpr 0x560735a5f470 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x560735a5f440 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x560735a5f360 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x560735a5f318 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x560735a5f300 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x560735a5f2c0 <col:20> '_Bool' lvalue Var 0x560735a5ded0 'a$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x560735a5f348 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x560735a5f330 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x560735a5f2e0 <col:38> '_Bool' lvalue Var 0x560735a5d900 'a$r_buff0_thd1' '_Bool'
|   |     |-ImplicitCastExpr 0x560735a5f3f8 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x560735a5f3b0 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x560735a5f380 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x560735a5f428 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x560735a5f410 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x560735a5f3d8 <col:66> '_Bool' lvalue Var 0x560735a5ded0 'a$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x560735a5f770 <line:731:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x560735a5f4a8 <col:3> '_Bool' lvalue Var 0x560735a5dfc8 'a$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x560735a5f758 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x560735a5f728 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x560735a5f648 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x560735a5f568 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x560735a5f520 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x560735a5f508 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x560735a5f4c8 <col:20> '_Bool' lvalue Var 0x560735a5ded0 'a$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x560735a5f550 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x560735a5f538 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x560735a5f4e8 <col:38> '_Bool' lvalue Var 0x560735a5d900 'a$r_buff0_thd1' '_Bool'
|   |     | `-BinaryOperator 0x560735a5f628 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x560735a5f5e0 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x560735a5f5c8 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x560735a5f588 <col:56> '_Bool' lvalue Var 0x560735a5dfc8 'a$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x560735a5f610 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x560735a5f5f8 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x560735a5f5a8 <col:74> '_Bool' lvalue Var 0x560735a5db78 'a$r_buff1_thd1' '_Bool'
|   |     |-ImplicitCastExpr 0x560735a5f6e0 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x560735a5f698 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x560735a5f668 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x560735a5f710 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x560735a5f6f8 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x560735a5f6c0 <col:102> '_Bool' lvalue Var 0x560735a5dfc8 'a$w_buff1_used' '_Bool'
|   |-BinaryOperator 0x560735a5f978 <line:732:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x560735a5f790 <col:3> '_Bool' lvalue Var 0x560735a5d900 'a$r_buff0_thd1' '_Bool'
|   | `-ImplicitCastExpr 0x560735a5f960 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x560735a5f930 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x560735a5f850 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x560735a5f808 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x560735a5f7f0 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x560735a5f7b0 <col:20> '_Bool' lvalue Var 0x560735a5ded0 'a$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x560735a5f838 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x560735a5f820 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x560735a5f7d0 <col:38> '_Bool' lvalue Var 0x560735a5d900 'a$r_buff0_thd1' '_Bool'
|   |     |-ImplicitCastExpr 0x560735a5f8e8 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x560735a5f8a0 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x560735a5f870 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x560735a5f918 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x560735a5f900 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x560735a5f8c8 <col:66> '_Bool' lvalue Var 0x560735a5d900 'a$r_buff0_thd1' '_Bool'
|   |-BinaryOperator 0x560735a5fc80 <line:733:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x560735a5f998 <col:3> '_Bool' lvalue Var 0x560735a5db78 'a$r_buff1_thd1' '_Bool'
|   | `-ImplicitCastExpr 0x560735a5fc68 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x560735a5fc38 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x560735a5fb58 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x560735a5fa58 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x560735a5fa10 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x560735a5f9f8 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x560735a5f9b8 <col:20> '_Bool' lvalue Var 0x560735a5ded0 'a$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x560735a5fa40 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x560735a5fa28 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x560735a5f9d8 <col:38> '_Bool' lvalue Var 0x560735a5d900 'a$r_buff0_thd1' '_Bool'
|   |     | `-BinaryOperator 0x560735a5fb38 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x560735a5fad0 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x560735a5fab8 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x560735a5fa78 <col:56> '_Bool' lvalue Var 0x560735a5dfc8 'a$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x560735a5fb20 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x560735a5fae8 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x560735a5fa98 <col:74> '_Bool' lvalue Var 0x560735a5db78 'a$r_buff1_thd1' '_Bool'
|   |     |-ImplicitCastExpr 0x560735a5fbf0 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x560735a5fba8 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x560735a5fb78 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x560735a5fc20 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x560735a5fc08 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x560735a5fbd0 <col:102> '_Bool' lvalue Var 0x560735a5db78 'a$r_buff1_thd1' '_Bool'
|   |-CallExpr 0x560735a5fcd8 <line:734:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x560735a5fcc0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x560735a5fca0 <col:3> 'void ()' Function 0x560735a03f00 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x560735a5fd30 <line:735:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x560735a5fd18 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x560735a5fcf8 <col:3> 'void ()' Function 0x560735a03e40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x560735a5fde8 <line:736:3, col:41> 'int' '='
|   | |-DeclRefExpr 0x560735a5fd50 <col:3> 'int' lvalue Var 0x560735a5d278 '__unbuffered_cnt' 'int'
|   | `-BinaryOperator 0x560735a5fdc8 <col:22, col:41> 'int' '+'
|   |   |-ImplicitCastExpr 0x560735a5fdb0 <col:22> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x560735a5fd70 <col:22> 'int' lvalue Var 0x560735a5d278 '__unbuffered_cnt' 'int'
|   |   `-IntegerLiteral 0x560735a5fd90 <col:41> 'int' 1
|   |-CallExpr 0x560735a5fe40 <line:737:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x560735a5fe28 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x560735a5fe08 <col:3> 'void ()' Function 0x560735a03f00 '__VERIFIER_atomic_end' 'void ()'
|   `-ReturnStmt 0x560735a5fee8 <line:738:3, col:36>
|     `-CallExpr 0x560735a5fec8 <col:10, col:36> 'void *'
|       `-ImplicitCastExpr 0x560735a5feb0 <col:10> 'void *(*)(void)' <FunctionToPointerDecay>
|         `-DeclRefExpr 0x560735a5fe60 <col:10> 'void *(void)' Function 0x560735a03958 '__VERIFIER_nondet_pointer' 'void *(void)'
|-FunctionDecl 0x560735a60090 prev 0x560735a5cc48 <line:740:1, line:759:1> line:740:8 used P1 'void *(void *)'
| |-ParmVarDecl 0x560735a5fff8 <col:11, col:17> col:17 arg 'void *'
| `-CompoundStmt 0x560735a612b0 <line:741:1, line:759:1>
|   |-CallExpr 0x560735a60170 <line:742:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x560735a60158 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x560735a60138 <col:3> 'void ()' Function 0x560735a03e40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x560735a601d0 <line:743:3, col:7> 'int' '='
|   | |-DeclRefExpr 0x560735a60190 <col:3> 'int' lvalue Var 0x560735a5e1b8 'x' 'int'
|   | `-IntegerLiteral 0x560735a601b0 <col:7> 'int' 1
|   |-CallExpr 0x560735a60228 <line:744:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x560735a60210 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x560735a601f0 <col:3> 'void ()' Function 0x560735a03f00 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x560735a60280 <line:745:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x560735a60268 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x560735a60248 <col:3> 'void ()' Function 0x560735a03e40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x560735a602e0 <line:746:3, col:7> 'int' '='
|   | |-DeclRefExpr 0x560735a602a0 <col:3> 'int' lvalue Var 0x560735a5e2d8 'y' 'int'
|   | `-IntegerLiteral 0x560735a602c0 <col:7> 'int' 1
|   |-CallExpr 0x560735a60338 <line:747:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x560735a60320 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x560735a60300 <col:3> 'void ()' Function 0x560735a03f00 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x560735a60390 <line:748:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x560735a60378 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x560735a60358 <col:3> 'void ()' Function 0x560735a03e40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x560735a60678 <line:749:3, col:103> 'int' '='
|   | |-DeclRefExpr 0x560735a603b0 <col:3> 'int' lvalue Var 0x560735a5d6f8 'a' 'int'
|   | `-ConditionalOperator 0x560735a60648 <col:7, col:103> 'int'
|   |   |-BinaryOperator 0x560735a60470 <col:7, col:25> 'int' '&&'
|   |   | |-ImplicitCastExpr 0x560735a60428 <col:7> 'int' <IntegralCast>
|   |   | | `-ImplicitCastExpr 0x560735a60410 <col:7> '_Bool' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x560735a603d0 <col:7> '_Bool' lvalue Var 0x560735a5ded0 'a$w_buff0_used' '_Bool'
|   |   | `-ImplicitCastExpr 0x560735a60458 <col:25> 'int' <IntegralCast>
|   |   |   `-ImplicitCastExpr 0x560735a60440 <col:25> '_Bool' <LValueToRValue>
|   |   |     `-DeclRefExpr 0x560735a603f0 <col:25> '_Bool' lvalue Var 0x560735a5d978 'a$r_buff0_thd2' '_Bool'
|   |   |-ImplicitCastExpr 0x560735a60630 <col:42> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x560735a60490 <col:42> 'int' lvalue Var 0x560735a5de58 'a$w_buff0' 'int'
|   |   `-ParenExpr 0x560735a60610 <col:54, col:103> 'int'
|   |     `-ConditionalOperator 0x560735a605e0 <col:55, col:102> 'int'
|   |       |-BinaryOperator 0x560735a60550 <col:55, col:73> 'int' '&&'
|   |       | |-ImplicitCastExpr 0x560735a60508 <col:55> 'int' <IntegralCast>
|   |       | | `-ImplicitCastExpr 0x560735a604f0 <col:55> '_Bool' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x560735a604b0 <col:55> '_Bool' lvalue Var 0x560735a5dfc8 'a$w_buff1_used' '_Bool'
|   |       | `-ImplicitCastExpr 0x560735a60538 <col:73> 'int' <IntegralCast>
|   |       |   `-ImplicitCastExpr 0x560735a60520 <col:73> '_Bool' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x560735a604d0 <col:73> '_Bool' lvalue Var 0x560735a5dbf0 'a$r_buff1_thd2' '_Bool'
|   |       |-ImplicitCastExpr 0x560735a605b0 <col:90> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x560735a60570 <col:90> 'int' lvalue Var 0x560735a5df50 'a$w_buff1' 'int'
|   |       `-ImplicitCastExpr 0x560735a605c8 <col:102> 'int' <LValueToRValue>
|   |         `-DeclRefExpr 0x560735a60590 <col:102> 'int' lvalue Var 0x560735a5d6f8 'a' 'int'
|   |-BinaryOperator 0x560735a60880 <line:750:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x560735a60698 <col:3> '_Bool' lvalue Var 0x560735a5ded0 'a$w_buff0_used' '_Bool'
|   | `-ImplicitCastExpr 0x560735a60868 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x560735a60838 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x560735a60758 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x560735a60710 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x560735a606f8 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x560735a606b8 <col:20> '_Bool' lvalue Var 0x560735a5ded0 'a$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x560735a60740 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x560735a60728 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x560735a606d8 <col:38> '_Bool' lvalue Var 0x560735a5d978 'a$r_buff0_thd2' '_Bool'
|   |     |-ImplicitCastExpr 0x560735a607f0 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x560735a607a8 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x560735a60778 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x560735a60820 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x560735a60808 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x560735a607d0 <col:66> '_Bool' lvalue Var 0x560735a5ded0 'a$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x560735a60b78 <line:751:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x560735a608a0 <col:3> '_Bool' lvalue Var 0x560735a5dfc8 'a$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x560735a60b60 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x560735a60b30 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x560735a60a40 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x560735a60960 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x560735a60918 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x560735a60900 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x560735a608c0 <col:20> '_Bool' lvalue Var 0x560735a5ded0 'a$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x560735a60948 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x560735a60930 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x560735a608e0 <col:38> '_Bool' lvalue Var 0x560735a5d978 'a$r_buff0_thd2' '_Bool'
|   |     | `-BinaryOperator 0x560735a60a20 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x560735a609d8 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x560735a609c0 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x560735a60980 <col:56> '_Bool' lvalue Var 0x560735a5dfc8 'a$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x560735a60a08 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x560735a609f0 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x560735a609a0 <col:74> '_Bool' lvalue Var 0x560735a5dbf0 'a$r_buff1_thd2' '_Bool'
|   |     |-ImplicitCastExpr 0x560735a60ad8 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x560735a60a90 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x560735a60a60 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x560735a60b08 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x560735a60af0 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x560735a60ab8 <col:102> '_Bool' lvalue Var 0x560735a5dfc8 'a$w_buff1_used' '_Bool'
|   |-BinaryOperator 0x560735a60d80 <line:752:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x560735a60b98 <col:3> '_Bool' lvalue Var 0x560735a5d978 'a$r_buff0_thd2' '_Bool'
|   | `-ImplicitCastExpr 0x560735a60d68 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x560735a60d38 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x560735a60c58 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x560735a60c10 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x560735a60bf8 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x560735a60bb8 <col:20> '_Bool' lvalue Var 0x560735a5ded0 'a$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x560735a60c40 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x560735a60c28 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x560735a60bd8 <col:38> '_Bool' lvalue Var 0x560735a5d978 'a$r_buff0_thd2' '_Bool'
|   |     |-ImplicitCastExpr 0x560735a60cf0 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x560735a60ca8 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x560735a60c78 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x560735a60d20 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x560735a60d08 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x560735a60cd0 <col:66> '_Bool' lvalue Var 0x560735a5d978 'a$r_buff0_thd2' '_Bool'
|   |-BinaryOperator 0x560735a61068 <line:753:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x560735a60da0 <col:3> '_Bool' lvalue Var 0x560735a5dbf0 'a$r_buff1_thd2' '_Bool'
|   | `-ImplicitCastExpr 0x560735a61050 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x560735a61020 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x560735a60f40 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x560735a60e60 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x560735a60e18 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x560735a60e00 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x560735a60dc0 <col:20> '_Bool' lvalue Var 0x560735a5ded0 'a$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x560735a60e48 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x560735a60e30 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x560735a60de0 <col:38> '_Bool' lvalue Var 0x560735a5d978 'a$r_buff0_thd2' '_Bool'
|   |     | `-BinaryOperator 0x560735a60f20 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x560735a60ed8 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x560735a60ec0 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x560735a60e80 <col:56> '_Bool' lvalue Var 0x560735a5dfc8 'a$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x560735a60f08 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x560735a60ef0 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x560735a60ea0 <col:74> '_Bool' lvalue Var 0x560735a5dbf0 'a$r_buff1_thd2' '_Bool'
|   |     |-ImplicitCastExpr 0x560735a60fd8 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x560735a60f90 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x560735a60f60 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x560735a61008 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x560735a60ff0 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x560735a60fb8 <col:102> '_Bool' lvalue Var 0x560735a5dbf0 'a$r_buff1_thd2' '_Bool'
|   |-CallExpr 0x560735a610c0 <line:754:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x560735a610a8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x560735a61088 <col:3> 'void ()' Function 0x560735a03f00 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x560735a61118 <line:755:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x560735a61100 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x560735a610e0 <col:3> 'void ()' Function 0x560735a03e40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x560735a611d0 <line:756:3, col:41> 'int' '='
|   | |-DeclRefExpr 0x560735a61138 <col:3> 'int' lvalue Var 0x560735a5d278 '__unbuffered_cnt' 'int'
|   | `-BinaryOperator 0x560735a611b0 <col:22, col:41> 'int' '+'
|   |   |-ImplicitCastExpr 0x560735a61198 <col:22> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x560735a61158 <col:22> 'int' lvalue Var 0x560735a5d278 '__unbuffered_cnt' 'int'
|   |   `-IntegerLiteral 0x560735a61178 <col:41> 'int' 1
|   |-CallExpr 0x560735a61228 <line:757:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x560735a61210 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x560735a611f0 <col:3> 'void ()' Function 0x560735a03f00 '__VERIFIER_atomic_end' 'void ()'
|   `-ReturnStmt 0x560735a612a0 <line:758:3, col:36>
|     `-CallExpr 0x560735a61280 <col:10, col:36> 'void *'
|       `-ImplicitCastExpr 0x560735a61268 <col:10> 'void *(*)(void)' <FunctionToPointerDecay>
|         `-DeclRefExpr 0x560735a61248 <col:10> 'void *(void)' Function 0x560735a03958 '__VERIFIER_nondet_pointer' 'void *(void)'
|-FunctionDecl 0x560735a613f8 prev 0x560735a5cda0 <line:760:1, line:779:1> line:760:8 used P2 'void *(void *)'
| |-ParmVarDecl 0x560735a61360 <col:11, col:17> col:17 arg 'void *'
| `-CompoundStmt 0x560735a62638 <line:761:1, line:779:1>
|   |-CallExpr 0x560735a614d8 <line:762:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x560735a614c0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x560735a614a0 <col:3> 'void ()' Function 0x560735a03e40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x560735a61538 <line:763:3, col:7> 'int' '='
|   | |-DeclRefExpr 0x560735a614f8 <col:3> 'int' lvalue Var 0x560735a5e2d8 'y' 'int'
|   | `-IntegerLiteral 0x560735a61518 <col:7> 'int' 2
|   |-CallExpr 0x560735a61590 <line:764:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x560735a61578 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x560735a61558 <col:3> 'void ()' Function 0x560735a03f00 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x560735a615e8 <line:765:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x560735a615d0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x560735a615b0 <col:3> 'void ()' Function 0x560735a03e40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x560735a61648 <line:766:3, col:7> 'int' '='
|   | |-DeclRefExpr 0x560735a61608 <col:3> 'int' lvalue Var 0x560735a5e3f8 'z' 'int'
|   | `-IntegerLiteral 0x560735a61628 <col:7> 'int' 1
|   |-CallExpr 0x560735a616a0 <line:767:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x560735a61688 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x560735a61668 <col:3> 'void ()' Function 0x560735a03f00 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x560735a616f8 <line:768:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x560735a616e0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x560735a616c0 <col:3> 'void ()' Function 0x560735a03e40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x560735a619e0 <line:769:3, col:103> 'int' '='
|   | |-DeclRefExpr 0x560735a61718 <col:3> 'int' lvalue Var 0x560735a5d6f8 'a' 'int'
|   | `-ConditionalOperator 0x560735a619b0 <col:7, col:103> 'int'
|   |   |-BinaryOperator 0x560735a617d8 <col:7, col:25> 'int' '&&'
|   |   | |-ImplicitCastExpr 0x560735a61790 <col:7> 'int' <IntegralCast>
|   |   | | `-ImplicitCastExpr 0x560735a61778 <col:7> '_Bool' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x560735a61738 <col:7> '_Bool' lvalue Var 0x560735a5ded0 'a$w_buff0_used' '_Bool'
|   |   | `-ImplicitCastExpr 0x560735a617c0 <col:25> 'int' <IntegralCast>
|   |   |   `-ImplicitCastExpr 0x560735a617a8 <col:25> '_Bool' <LValueToRValue>
|   |   |     `-DeclRefExpr 0x560735a61758 <col:25> '_Bool' lvalue Var 0x560735a5d9f0 'a$r_buff0_thd3' '_Bool'
|   |   |-ImplicitCastExpr 0x560735a61998 <col:42> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x560735a617f8 <col:42> 'int' lvalue Var 0x560735a5de58 'a$w_buff0' 'int'
|   |   `-ParenExpr 0x560735a61978 <col:54, col:103> 'int'
|   |     `-ConditionalOperator 0x560735a61948 <col:55, col:102> 'int'
|   |       |-BinaryOperator 0x560735a618b8 <col:55, col:73> 'int' '&&'
|   |       | |-ImplicitCastExpr 0x560735a61870 <col:55> 'int' <IntegralCast>
|   |       | | `-ImplicitCastExpr 0x560735a61858 <col:55> '_Bool' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x560735a61818 <col:55> '_Bool' lvalue Var 0x560735a5dfc8 'a$w_buff1_used' '_Bool'
|   |       | `-ImplicitCastExpr 0x560735a618a0 <col:73> 'int' <IntegralCast>
|   |       |   `-ImplicitCastExpr 0x560735a61888 <col:73> '_Bool' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x560735a61838 <col:73> '_Bool' lvalue Var 0x560735a5dc68 'a$r_buff1_thd3' '_Bool'
|   |       |-ImplicitCastExpr 0x560735a61918 <col:90> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x560735a618d8 <col:90> 'int' lvalue Var 0x560735a5df50 'a$w_buff1' 'int'
|   |       `-ImplicitCastExpr 0x560735a61930 <col:102> 'int' <LValueToRValue>
|   |         `-DeclRefExpr 0x560735a618f8 <col:102> 'int' lvalue Var 0x560735a5d6f8 'a' 'int'
|   |-BinaryOperator 0x560735a61c18 <line:770:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x560735a61a00 <col:3> '_Bool' lvalue Var 0x560735a5ded0 'a$w_buff0_used' '_Bool'
|   | `-ImplicitCastExpr 0x560735a61c00 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x560735a61bd0 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x560735a61ac0 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x560735a61a78 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x560735a61a60 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x560735a61a20 <col:20> '_Bool' lvalue Var 0x560735a5ded0 'a$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x560735a61aa8 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x560735a61a90 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x560735a61a40 <col:38> '_Bool' lvalue Var 0x560735a5d9f0 'a$r_buff0_thd3' '_Bool'
|   |     |-ImplicitCastExpr 0x560735a61b88 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x560735a61b40 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x560735a61ae0 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x560735a61bb8 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x560735a61ba0 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x560735a61b68 <col:66> '_Bool' lvalue Var 0x560735a5ded0 'a$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x560735a61f00 <line:771:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x560735a61c38 <col:3> '_Bool' lvalue Var 0x560735a5dfc8 'a$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x560735a61ee8 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x560735a61eb8 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x560735a61dd8 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x560735a61cf8 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x560735a61cb0 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x560735a61c98 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x560735a61c58 <col:20> '_Bool' lvalue Var 0x560735a5ded0 'a$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x560735a61ce0 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x560735a61cc8 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x560735a61c78 <col:38> '_Bool' lvalue Var 0x560735a5d9f0 'a$r_buff0_thd3' '_Bool'
|   |     | `-BinaryOperator 0x560735a61db8 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x560735a61d70 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x560735a61d58 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x560735a61d18 <col:56> '_Bool' lvalue Var 0x560735a5dfc8 'a$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x560735a61da0 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x560735a61d88 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x560735a61d38 <col:74> '_Bool' lvalue Var 0x560735a5dc68 'a$r_buff1_thd3' '_Bool'
|   |     |-ImplicitCastExpr 0x560735a61e70 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x560735a61e28 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x560735a61df8 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x560735a61ea0 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x560735a61e88 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x560735a61e50 <col:102> '_Bool' lvalue Var 0x560735a5dfc8 'a$w_buff1_used' '_Bool'
|   |-BinaryOperator 0x560735a62108 <line:772:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x560735a61f20 <col:3> '_Bool' lvalue Var 0x560735a5d9f0 'a$r_buff0_thd3' '_Bool'
|   | `-ImplicitCastExpr 0x560735a620f0 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x560735a620c0 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x560735a61fe0 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x560735a61f98 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x560735a61f80 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x560735a61f40 <col:20> '_Bool' lvalue Var 0x560735a5ded0 'a$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x560735a61fc8 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x560735a61fb0 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x560735a61f60 <col:38> '_Bool' lvalue Var 0x560735a5d9f0 'a$r_buff0_thd3' '_Bool'
|   |     |-ImplicitCastExpr 0x560735a62078 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x560735a62030 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x560735a62000 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x560735a620a8 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x560735a62090 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x560735a62058 <col:66> '_Bool' lvalue Var 0x560735a5d9f0 'a$r_buff0_thd3' '_Bool'
|   |-BinaryOperator 0x560735a623f0 <line:773:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x560735a62128 <col:3> '_Bool' lvalue Var 0x560735a5dc68 'a$r_buff1_thd3' '_Bool'
|   | `-ImplicitCastExpr 0x560735a623d8 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x560735a623a8 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x560735a622c8 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x560735a621e8 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x560735a621a0 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x560735a62188 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x560735a62148 <col:20> '_Bool' lvalue Var 0x560735a5ded0 'a$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x560735a621d0 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x560735a621b8 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x560735a62168 <col:38> '_Bool' lvalue Var 0x560735a5d9f0 'a$r_buff0_thd3' '_Bool'
|   |     | `-BinaryOperator 0x560735a622a8 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x560735a62260 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x560735a62248 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x560735a62208 <col:56> '_Bool' lvalue Var 0x560735a5dfc8 'a$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x560735a62290 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x560735a62278 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x560735a62228 <col:74> '_Bool' lvalue Var 0x560735a5dc68 'a$r_buff1_thd3' '_Bool'
|   |     |-ImplicitCastExpr 0x560735a62360 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x560735a62318 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x560735a622e8 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x560735a62390 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x560735a62378 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x560735a62340 <col:102> '_Bool' lvalue Var 0x560735a5dc68 'a$r_buff1_thd3' '_Bool'
|   |-CallExpr 0x560735a62448 <line:774:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x560735a62430 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x560735a62410 <col:3> 'void ()' Function 0x560735a03f00 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x560735a624a0 <line:775:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x560735a62488 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x560735a62468 <col:3> 'void ()' Function 0x560735a03e40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x560735a62558 <line:776:3, col:41> 'int' '='
|   | |-DeclRefExpr 0x560735a624c0 <col:3> 'int' lvalue Var 0x560735a5d278 '__unbuffered_cnt' 'int'
|   | `-BinaryOperator 0x560735a62538 <col:22, col:41> 'int' '+'
|   |   |-ImplicitCastExpr 0x560735a62520 <col:22> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x560735a624e0 <col:22> 'int' lvalue Var 0x560735a5d278 '__unbuffered_cnt' 'int'
|   |   `-IntegerLiteral 0x560735a62500 <col:41> 'int' 1
|   |-CallExpr 0x560735a625b0 <line:777:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x560735a62598 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x560735a62578 <col:3> 'void ()' Function 0x560735a03f00 '__VERIFIER_atomic_end' 'void ()'
|   `-ReturnStmt 0x560735a62628 <line:778:3, col:36>
|     `-CallExpr 0x560735a62608 <col:10, col:36> 'void *'
|       `-ImplicitCastExpr 0x560735a625f0 <col:10> 'void *(*)(void)' <FunctionToPointerDecay>
|         `-DeclRefExpr 0x560735a625d0 <col:10> 'void *(void)' Function 0x560735a03958 '__VERIFIER_nondet_pointer' 'void *(void)'
|-FunctionDecl 0x560735a62780 prev 0x560735a5cef8 <line:780:1, line:815:1> line:780:8 used P3 'void *(void *)'
| |-ParmVarDecl 0x560735a626e8 <col:11, col:17> col:17 arg 'void *'
| `-CompoundStmt 0x560735a664a0 <line:781:1, line:815:1>
|   |-CallExpr 0x560735a62860 <line:782:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x560735a62848 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x560735a62828 <col:3> 'void ()' Function 0x560735a03e40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x560735a628c0 <line:783:3, col:7> 'int' '='
|   | |-DeclRefExpr 0x560735a62880 <col:3> 'int' lvalue Var 0x560735a5e3f8 'z' 'int'
|   | `-IntegerLiteral 0x560735a628a0 <col:7> 'int' 2
|   |-CallExpr 0x560735a62918 <line:784:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x560735a62900 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x560735a628e0 <col:3> 'void ()' Function 0x560735a03f00 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x560735a62970 <line:785:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x560735a62958 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x560735a62938 <col:3> 'void ()' Function 0x560735a03e40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x560735a629e8 <line:786:3, col:25> 'int' '='
|   | |-DeclRefExpr 0x560735a62990 <col:3> 'int' lvalue Var 0x560735a5d4b8 '__unbuffered_p3_EAX' 'int'
|   | `-ImplicitCastExpr 0x560735a629d0 <col:25> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x560735a629b0 <col:25> 'int' lvalue Var 0x560735a5e3f8 'z' 'int'
|   |-CallExpr 0x560735a62a40 <line:787:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x560735a62a28 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x560735a62a08 <col:3> 'void ()' Function 0x560735a03f00 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x560735a62a98 <line:788:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x560735a62a80 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x560735a62a60 <col:3> 'void ()' Function 0x560735a03e40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x560735a62b68 <line:789:3, col:45> '_Bool' '='
|   | |-DeclRefExpr 0x560735a62ab8 <col:3> '_Bool' lvalue Var 0x560735a5e490 'weak$$choice0' '_Bool'
|   | `-ImplicitCastExpr 0x560735a62b50 <col:19, col:45> '_Bool' <PointerToBoolean>
|   |   `-CallExpr 0x560735a62b10 <col:19, col:45> 'void *'
|   |     `-ImplicitCastExpr 0x560735a62af8 <col:19> 'void *(*)(void)' <FunctionToPointerDecay>
|   |       `-DeclRefExpr 0x560735a62ad8 <col:19> 'void *(void)' Function 0x560735a03958 '__VERIFIER_nondet_pointer' 'void *(void)'
|   |-BinaryOperator 0x560735a62c18 <line:790:3, col:45> '_Bool' '='
|   | |-DeclRefExpr 0x560735a62b88 <col:3> '_Bool' lvalue Var 0x560735a5e508 'weak$$choice2' '_Bool'
|   | `-ImplicitCastExpr 0x560735a62c00 <col:19, col:45> '_Bool' <PointerToBoolean>
|   |   `-CallExpr 0x560735a62be0 <col:19, col:45> 'void *'
|   |     `-ImplicitCastExpr 0x560735a62bc8 <col:19> 'void *(*)(void)' <FunctionToPointerDecay>
|   |       `-DeclRefExpr 0x560735a62ba8 <col:19> 'void *(void)' Function 0x560735a03958 '__VERIFIER_nondet_pointer' 'void *(void)'
|   |-BinaryOperator 0x560735a62c90 <line:791:3, col:21> '_Bool' '='
|   | |-DeclRefExpr 0x560735a62c38 <col:3> '_Bool' lvalue Var 0x560735a5d790 'a$flush_delayed' '_Bool'
|   | `-ImplicitCastExpr 0x560735a62c78 <col:21> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x560735a62c58 <col:21> '_Bool' lvalue Var 0x560735a5e508 'weak$$choice2' '_Bool'
|   |-BinaryOperator 0x560735a62d08 <line:792:3, col:15> 'int' '='
|   | |-DeclRefExpr 0x560735a62cb0 <col:3> 'int' lvalue Var 0x560735a5d810 'a$mem_tmp' 'int'
|   | `-ImplicitCastExpr 0x560735a62cf0 <col:15> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x560735a62cd0 <col:15> 'int' lvalue Var 0x560735a5d6f8 'a' 'int'
|   |-BinaryOperator 0x560735a63140 <line:793:3, col:162> 'int' '='
|   | |-DeclRefExpr 0x560735a62d28 <col:3> 'int' lvalue Var 0x560735a5d6f8 'a' 'int'
|   | `-ConditionalOperator 0x560735a63110 <col:7, col:162> 'int'
|   |   |-BinaryOperator 0x560735a62f38 <col:7, col:84> 'int' '||'
|   |   | |-BinaryOperator 0x560735a62e58 <col:7, col:46> 'int' '||'
|   |   | | |-UnaryOperator 0x560735a62d80 <col:7, col:8> 'int' prefix '!' cannot overflow
|   |   | | | `-ImplicitCastExpr 0x560735a62d68 <col:8> '_Bool' <LValueToRValue>
|   |   | | |   `-DeclRefExpr 0x560735a62d48 <col:8> '_Bool' lvalue Var 0x560735a5ded0 'a$w_buff0_used' '_Bool'
|   |   | | `-BinaryOperator 0x560735a62e38 <col:26, col:46> 'int' '&&'
|   |   | |   |-UnaryOperator 0x560735a62dd0 <col:26, col:27> 'int' prefix '!' cannot overflow
|   |   | |   | `-ImplicitCastExpr 0x560735a62db8 <col:27> '_Bool' <LValueToRValue>
|   |   | |   |   `-DeclRefExpr 0x560735a62d98 <col:27> '_Bool' lvalue Var 0x560735a5da68 'a$r_buff0_thd4' '_Bool'
|   |   | |   `-UnaryOperator 0x560735a62e20 <col:45, col:46> 'int' prefix '!' cannot overflow
|   |   | |     `-ImplicitCastExpr 0x560735a62e08 <col:46> '_Bool' <LValueToRValue>
|   |   | |       `-DeclRefExpr 0x560735a62de8 <col:46> '_Bool' lvalue Var 0x560735a5dfc8 'a$w_buff1_used' '_Bool'
|   |   | `-BinaryOperator 0x560735a62f18 <col:64, col:84> 'int' '&&'
|   |   |   |-UnaryOperator 0x560735a62eb0 <col:64, col:65> 'int' prefix '!' cannot overflow
|   |   |   | `-ImplicitCastExpr 0x560735a62e98 <col:65> '_Bool' <LValueToRValue>
|   |   |   |   `-DeclRefExpr 0x560735a62e78 <col:65> '_Bool' lvalue Var 0x560735a5da68 'a$r_buff0_thd4' '_Bool'
|   |   |   `-UnaryOperator 0x560735a62f00 <col:83, col:84> 'int' prefix '!' cannot overflow
|   |   |     `-ImplicitCastExpr 0x560735a62ee8 <col:84> '_Bool' <LValueToRValue>
|   |   |       `-DeclRefExpr 0x560735a62ec8 <col:84> '_Bool' lvalue Var 0x560735a5dce0 'a$r_buff1_thd4' '_Bool'
|   |   |-ImplicitCastExpr 0x560735a630f8 <col:101> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x560735a62f58 <col:101> 'int' lvalue Var 0x560735a5d6f8 'a' 'int'
|   |   `-ParenExpr 0x560735a630d8 <col:105, col:162> 'int'
|   |     `-ConditionalOperator 0x560735a630a8 <col:106, col:153> 'int'
|   |       |-BinaryOperator 0x560735a63018 <col:106, col:124> 'int' '&&'
|   |       | |-ImplicitCastExpr 0x560735a62fd0 <col:106> 'int' <IntegralCast>
|   |       | | `-ImplicitCastExpr 0x560735a62fb8 <col:106> '_Bool' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x560735a62f78 <col:106> '_Bool' lvalue Var 0x560735a5ded0 'a$w_buff0_used' '_Bool'
|   |       | `-ImplicitCastExpr 0x560735a63000 <col:124> 'int' <IntegralCast>
|   |       |   `-ImplicitCastExpr 0x560735a62fe8 <col:124> '_Bool' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x560735a62f98 <col:124> '_Bool' lvalue Var 0x560735a5da68 'a$r_buff0_thd4' '_Bool'
|   |       |-ImplicitCastExpr 0x560735a63078 <col:141> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x560735a63038 <col:141> 'int' lvalue Var 0x560735a5de58 'a$w_buff0' 'int'
|   |       `-ImplicitCastExpr 0x560735a63090 <col:153> 'int' <LValueToRValue>
|   |         `-DeclRefExpr 0x560735a63058 <col:153> 'int' lvalue Var 0x560735a5df50 'a$w_buff1' 'int'
|   |-BinaryOperator 0x560735a63650 <line:794:3, col:208> 'int' '='
|   | |-DeclRefExpr 0x560735a63160 <col:3> 'int' lvalue Var 0x560735a5de58 'a$w_buff0' 'int'
|   | `-ConditionalOperator 0x560735a63620 <col:15, col:208> 'int'
|   |   |-ImplicitCastExpr 0x560735a635f0 <col:15> 'int' <IntegralCast>
|   |   | `-ImplicitCastExpr 0x560735a635d8 <col:15> '_Bool' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x560735a63180 <col:15> '_Bool' lvalue Var 0x560735a5e508 'weak$$choice2' '_Bool'
|   |   |-ImplicitCastExpr 0x560735a63608 <col:31> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x560735a631a0 <col:31> 'int' lvalue Var 0x560735a5de58 'a$w_buff0' 'int'
|   |   `-ParenExpr 0x560735a635b8 <col:43, col:208> 'int'
|   |     `-ConditionalOperator 0x560735a63588 <col:44, col:207> 'int'
|   |       |-BinaryOperator 0x560735a633b0 <col:44, col:121> 'int' '||'
|   |       | |-BinaryOperator 0x560735a632d0 <col:44, col:83> 'int' '||'
|   |       | | |-UnaryOperator 0x560735a631f8 <col:44, col:45> 'int' prefix '!' cannot overflow
|   |       | | | `-ImplicitCastExpr 0x560735a631e0 <col:45> '_Bool' <LValueToRValue>
|   |       | | |   `-DeclRefExpr 0x560735a631c0 <col:45> '_Bool' lvalue Var 0x560735a5ded0 'a$w_buff0_used' '_Bool'
|   |       | | `-BinaryOperator 0x560735a632b0 <col:63, col:83> 'int' '&&'
|   |       | |   |-UnaryOperator 0x560735a63248 <col:63, col:64> 'int' prefix '!' cannot overflow
|   |       | |   | `-ImplicitCastExpr 0x560735a63230 <col:64> '_Bool' <LValueToRValue>
|   |       | |   |   `-DeclRefExpr 0x560735a63210 <col:64> '_Bool' lvalue Var 0x560735a5da68 'a$r_buff0_thd4' '_Bool'
|   |       | |   `-UnaryOperator 0x560735a63298 <col:82, col:83> 'int' prefix '!' cannot overflow
|   |       | |     `-ImplicitCastExpr 0x560735a63280 <col:83> '_Bool' <LValueToRValue>
|   |       | |       `-DeclRefExpr 0x560735a63260 <col:83> '_Bool' lvalue Var 0x560735a5dfc8 'a$w_buff1_used' '_Bool'
|   |       | `-BinaryOperator 0x560735a63390 <col:101, col:121> 'int' '&&'
|   |       |   |-UnaryOperator 0x560735a63328 <col:101, col:102> 'int' prefix '!' cannot overflow
|   |       |   | `-ImplicitCastExpr 0x560735a63310 <col:102> '_Bool' <LValueToRValue>
|   |       |   |   `-DeclRefExpr 0x560735a632f0 <col:102> '_Bool' lvalue Var 0x560735a5da68 'a$r_buff0_thd4' '_Bool'
|   |       |   `-UnaryOperator 0x560735a63378 <col:120, col:121> 'int' prefix '!' cannot overflow
|   |       |     `-ImplicitCastExpr 0x560735a63360 <col:121> '_Bool' <LValueToRValue>
|   |       |       `-DeclRefExpr 0x560735a63340 <col:121> '_Bool' lvalue Var 0x560735a5dce0 'a$r_buff1_thd4' '_Bool'
|   |       |-ImplicitCastExpr 0x560735a63570 <col:138> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x560735a633d0 <col:138> 'int' lvalue Var 0x560735a5de58 'a$w_buff0' 'int'
|   |       `-ParenExpr 0x560735a63550 <col:150, col:207> 'int'
|   |         `-ConditionalOperator 0x560735a63520 <col:151, col:198> 'int'
|   |           |-BinaryOperator 0x560735a63490 <col:151, col:169> 'int' '&&'
|   |           | |-ImplicitCastExpr 0x560735a63448 <col:151> 'int' <IntegralCast>
|   |           | | `-ImplicitCastExpr 0x560735a63430 <col:151> '_Bool' <LValueToRValue>
|   |           | |   `-DeclRefExpr 0x560735a633f0 <col:151> '_Bool' lvalue Var 0x560735a5ded0 'a$w_buff0_used' '_Bool'
|   |           | `-ImplicitCastExpr 0x560735a63478 <col:169> 'int' <IntegralCast>
|   |           |   `-ImplicitCastExpr 0x560735a63460 <col:169> '_Bool' <LValueToRValue>
|   |           |     `-DeclRefExpr 0x560735a63410 <col:169> '_Bool' lvalue Var 0x560735a5da68 'a$r_buff0_thd4' '_Bool'
|   |           |-ImplicitCastExpr 0x560735a634f0 <col:186> 'int' <LValueToRValue>
|   |           | `-DeclRefExpr 0x560735a634b0 <col:186> 'int' lvalue Var 0x560735a5de58 'a$w_buff0' 'int'
|   |           `-ImplicitCastExpr 0x560735a63508 <col:198> 'int' <LValueToRValue>
|   |             `-DeclRefExpr 0x560735a634d0 <col:198> 'int' lvalue Var 0x560735a5de58 'a$w_buff0' 'int'
|   |-BinaryOperator 0x560735a63b90 <line:795:3, col:208> 'int' '='
|   | |-DeclRefExpr 0x560735a63670 <col:3> 'int' lvalue Var 0x560735a5df50 'a$w_buff1' 'int'
|   | `-ConditionalOperator 0x560735a63b60 <col:15, col:208> 'int'
|   |   |-ImplicitCastExpr 0x560735a63b00 <col:15> 'int' <IntegralCast>
|   |   | `-ImplicitCastExpr 0x560735a63ae8 <col:15> '_Bool' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x560735a63690 <col:15> '_Bool' lvalue Var 0x560735a5e508 'weak$$choice2' '_Bool'
|   |   |-ImplicitCastExpr 0x560735a63b18 <col:31> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x560735a636b0 <col:31> 'int' lvalue Var 0x560735a5df50 'a$w_buff1' 'int'
|   |   `-ParenExpr 0x560735a63ac8 <col:43, col:208> 'int'
|   |     `-ConditionalOperator 0x560735a63a98 <col:44, col:207> 'int'
|   |       |-BinaryOperator 0x560735a638c0 <col:44, col:121> 'int' '||'
|   |       | |-BinaryOperator 0x560735a637e0 <col:44, col:83> 'int' '||'
|   |       | | |-UnaryOperator 0x560735a63708 <col:44, col:45> 'int' prefix '!' cannot overflow
|   |       | | | `-ImplicitCastExpr 0x560735a636f0 <col:45> '_Bool' <LValueToRValue>
|   |       | | |   `-DeclRefExpr 0x560735a636d0 <col:45> '_Bool' lvalue Var 0x560735a5ded0 'a$w_buff0_used' '_Bool'
|   |       | | `-BinaryOperator 0x560735a637c0 <col:63, col:83> 'int' '&&'
|   |       | |   |-UnaryOperator 0x560735a63758 <col:63, col:64> 'int' prefix '!' cannot overflow
|   |       | |   | `-ImplicitCastExpr 0x560735a63740 <col:64> '_Bool' <LValueToRValue>
|   |       | |   |   `-DeclRefExpr 0x560735a63720 <col:64> '_Bool' lvalue Var 0x560735a5da68 'a$r_buff0_thd4' '_Bool'
|   |       | |   `-UnaryOperator 0x560735a637a8 <col:82, col:83> 'int' prefix '!' cannot overflow
|   |       | |     `-ImplicitCastExpr 0x560735a63790 <col:83> '_Bool' <LValueToRValue>
|   |       | |       `-DeclRefExpr 0x560735a63770 <col:83> '_Bool' lvalue Var 0x560735a5dfc8 'a$w_buff1_used' '_Bool'
|   |       | `-BinaryOperator 0x560735a638a0 <col:101, col:121> 'int' '&&'
|   |       |   |-UnaryOperator 0x560735a63838 <col:101, col:102> 'int' prefix '!' cannot overflow
|   |       |   | `-ImplicitCastExpr 0x560735a63820 <col:102> '_Bool' <LValueToRValue>
|   |       |   |   `-DeclRefExpr 0x560735a63800 <col:102> '_Bool' lvalue Var 0x560735a5da68 'a$r_buff0_thd4' '_Bool'
|   |       |   `-UnaryOperator 0x560735a63888 <col:120, col:121> 'int' prefix '!' cannot overflow
|   |       |     `-ImplicitCastExpr 0x560735a63870 <col:121> '_Bool' <LValueToRValue>
|   |       |       `-DeclRefExpr 0x560735a63850 <col:121> '_Bool' lvalue Var 0x560735a5dce0 'a$r_buff1_thd4' '_Bool'
|   |       |-ImplicitCastExpr 0x560735a63a80 <col:138> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x560735a638e0 <col:138> 'int' lvalue Var 0x560735a5df50 'a$w_buff1' 'int'
|   |       `-ParenExpr 0x560735a63a60 <col:150, col:207> 'int'
|   |         `-ConditionalOperator 0x560735a63a30 <col:151, col:198> 'int'
|   |           |-BinaryOperator 0x560735a639a0 <col:151, col:169> 'int' '&&'
|   |           | |-ImplicitCastExpr 0x560735a63958 <col:151> 'int' <IntegralCast>
|   |           | | `-ImplicitCastExpr 0x560735a63940 <col:151> '_Bool' <LValueToRValue>
|   |           | |   `-DeclRefExpr 0x560735a63900 <col:151> '_Bool' lvalue Var 0x560735a5ded0 'a$w_buff0_used' '_Bool'
|   |           | `-ImplicitCastExpr 0x560735a63988 <col:169> 'int' <IntegralCast>
|   |           |   `-ImplicitCastExpr 0x560735a63970 <col:169> '_Bool' <LValueToRValue>
|   |           |     `-DeclRefExpr 0x560735a63920 <col:169> '_Bool' lvalue Var 0x560735a5da68 'a$r_buff0_thd4' '_Bool'
|   |           |-ImplicitCastExpr 0x560735a63a00 <col:186> 'int' <LValueToRValue>
|   |           | `-DeclRefExpr 0x560735a639c0 <col:186> 'int' lvalue Var 0x560735a5df50 'a$w_buff1' 'int'
|   |           `-ImplicitCastExpr 0x560735a63a18 <col:198> 'int' <LValueToRValue>
|   |             `-DeclRefExpr 0x560735a639e0 <col:198> 'int' lvalue Var 0x560735a5df50 'a$w_buff1' 'int'
|   |-BinaryOperator 0x560735a64138 <line:796:3, col:227> '_Bool' '='
|   | |-DeclRefExpr 0x560735a63bb0 <col:3> '_Bool' lvalue Var 0x560735a5ded0 'a$w_buff0_used' '_Bool'
|   | `-ImplicitCastExpr 0x560735a64120 <col:20, col:227> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x560735a640f0 <col:20, col:227> 'int'
|   |     |-ImplicitCastExpr 0x560735a640a8 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x560735a64090 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x560735a63bd0 <col:20> '_Bool' lvalue Var 0x560735a5e508 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x560735a640d8 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x560735a640c0 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x560735a63bf0 <col:36> '_Bool' lvalue Var 0x560735a5ded0 'a$w_buff0_used' '_Bool'
|   |     `-ParenExpr 0x560735a64070 <col:53, col:227> 'int'
|   |       `-ConditionalOperator 0x560735a64040 <col:54, col:226> 'int'
|   |         |-BinaryOperator 0x560735a63e00 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x560735a63d20 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x560735a63c48 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x560735a63c30 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x560735a63c10 <col:55> '_Bool' lvalue Var 0x560735a5ded0 'a$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x560735a63d00 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x560735a63c98 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x560735a63c80 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x560735a63c60 <col:74> '_Bool' lvalue Var 0x560735a5da68 'a$r_buff0_thd4' '_Bool'
|   |         | |   `-UnaryOperator 0x560735a63ce8 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x560735a63cd0 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x560735a63cb0 <col:93> '_Bool' lvalue Var 0x560735a5dfc8 'a$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x560735a63de0 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x560735a63d78 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x560735a63d60 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x560735a63d40 <col:112> '_Bool' lvalue Var 0x560735a5da68 'a$r_buff0_thd4' '_Bool'
|   |         |   `-UnaryOperator 0x560735a63dc8 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x560735a63db0 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x560735a63d90 <col:131> '_Bool' lvalue Var 0x560735a5dce0 'a$r_buff1_thd4' '_Bool'
|   |         |-ImplicitCastExpr 0x560735a64028 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x560735a64010 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x560735a63e20 <col:148> '_Bool' lvalue Var 0x560735a5ded0 'a$w_buff0_used' '_Bool'
|   |         `-ParenExpr 0x560735a63ff0 <col:165, col:226> 'int'
|   |           `-ConditionalOperator 0x560735a63fc0 <col:166, col:212> 'int'
|   |             |-BinaryOperator 0x560735a63ee0 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x560735a63e98 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x560735a63e80 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x560735a63e40 <col:166> '_Bool' lvalue Var 0x560735a5ded0 'a$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x560735a63ec8 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x560735a63eb0 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x560735a63e60 <col:184> '_Bool' lvalue Var 0x560735a5da68 'a$r_buff0_thd4' '_Bool'
|   |             |-ImplicitCastExpr 0x560735a63f78 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x560735a63f30 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x560735a63f00 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x560735a63fa8 <col:212> 'int' <IntegralCast>
|   |               `-ImplicitCastExpr 0x560735a63f90 <col:212> '_Bool' <LValueToRValue>
|   |                 `-DeclRefExpr 0x560735a63f58 <col:212> '_Bool' lvalue Var 0x560735a5ded0 'a$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x560735a64700 <line:797:3, col:221> '_Bool' '='
|   | |-DeclRefExpr 0x560735a64158 <col:3> '_Bool' lvalue Var 0x560735a5dfc8 'a$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x560735a646e8 <col:20, col:221> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x560735a646b8 <col:20, col:221> 'int'
|   |     |-ImplicitCastExpr 0x560735a64670 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x560735a64658 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x560735a64178 <col:20> '_Bool' lvalue Var 0x560735a5e508 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x560735a646a0 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x560735a64688 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x560735a64198 <col:36> '_Bool' lvalue Var 0x560735a5dfc8 'a$w_buff1_used' '_Bool'
|   |     `-ParenExpr 0x560735a64638 <col:53, col:221> 'int'
|   |       `-ConditionalOperator 0x560735a64608 <col:54, col:220> 'int'
|   |         |-BinaryOperator 0x560735a643a8 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x560735a642c8 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x560735a641f0 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x560735a641d8 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x560735a641b8 <col:55> '_Bool' lvalue Var 0x560735a5ded0 'a$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x560735a642a8 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x560735a64240 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x560735a64228 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x560735a64208 <col:74> '_Bool' lvalue Var 0x560735a5da68 'a$r_buff0_thd4' '_Bool'
|   |         | |   `-UnaryOperator 0x560735a64290 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x560735a64278 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x560735a64258 <col:93> '_Bool' lvalue Var 0x560735a5dfc8 'a$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x560735a64388 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x560735a64320 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x560735a64308 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x560735a642e8 <col:112> '_Bool' lvalue Var 0x560735a5da68 'a$r_buff0_thd4' '_Bool'
|   |         |   `-UnaryOperator 0x560735a64370 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x560735a64358 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x560735a64338 <col:131> '_Bool' lvalue Var 0x560735a5dce0 'a$r_buff1_thd4' '_Bool'
|   |         |-ImplicitCastExpr 0x560735a645f0 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x560735a645d8 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x560735a643c8 <col:148> '_Bool' lvalue Var 0x560735a5dfc8 'a$w_buff1_used' '_Bool'
|   |         `-ParenExpr 0x560735a645b8 <col:165, col:220> 'int'
|   |           `-ConditionalOperator 0x560735a64588 <col:166, col:219> 'int'
|   |             |-BinaryOperator 0x560735a64488 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x560735a64440 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x560735a64428 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x560735a643e8 <col:166> '_Bool' lvalue Var 0x560735a5ded0 'a$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x560735a64470 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x560735a64458 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x560735a64408 <col:184> '_Bool' lvalue Var 0x560735a5da68 'a$r_buff0_thd4' '_Bool'
|   |             |-ImplicitCastExpr 0x560735a64558 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x560735a644d8 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x560735a644a8 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x560735a64570 <col:212, col:219> 'int' <IntegralCast>
|   |               `-CStyleCastExpr 0x560735a64530 <col:212, col:219> '_Bool' <IntegralToBoolean>
|   |                 `-IntegerLiteral 0x560735a64500 <col:219> 'int' 0
|   |-BinaryOperator 0x560735a64cb8 <line:798:3, col:227> '_Bool' '='
|   | |-DeclRefExpr 0x560735a64720 <col:3> '_Bool' lvalue Var 0x560735a5da68 'a$r_buff0_thd4' '_Bool'
|   | `-ImplicitCastExpr 0x560735a64ca0 <col:20, col:227> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x560735a64c70 <col:20, col:227> 'int'
|   |     |-ImplicitCastExpr 0x560735a64c28 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x560735a64c10 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x560735a64740 <col:20> '_Bool' lvalue Var 0x560735a5e508 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x560735a64c58 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x560735a64c40 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x560735a64760 <col:36> '_Bool' lvalue Var 0x560735a5da68 'a$r_buff0_thd4' '_Bool'
|   |     `-ParenExpr 0x560735a64bf0 <col:53, col:227> 'int'
|   |       `-ConditionalOperator 0x560735a64bc0 <col:54, col:226> 'int'
|   |         |-BinaryOperator 0x560735a64970 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x560735a64890 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x560735a647b8 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x560735a647a0 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x560735a64780 <col:55> '_Bool' lvalue Var 0x560735a5ded0 'a$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x560735a64870 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x560735a64808 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x560735a647f0 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x560735a647d0 <col:74> '_Bool' lvalue Var 0x560735a5da68 'a$r_buff0_thd4' '_Bool'
|   |         | |   `-UnaryOperator 0x560735a64858 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x560735a64840 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x560735a64820 <col:93> '_Bool' lvalue Var 0x560735a5dfc8 'a$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x560735a64950 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x560735a648e8 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x560735a648d0 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x560735a648b0 <col:112> '_Bool' lvalue Var 0x560735a5da68 'a$r_buff0_thd4' '_Bool'
|   |         |   `-UnaryOperator 0x560735a64938 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x560735a64920 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x560735a64900 <col:131> '_Bool' lvalue Var 0x560735a5dce0 'a$r_buff1_thd4' '_Bool'
|   |         |-ImplicitCastExpr 0x560735a64ba8 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x560735a64b90 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x560735a64990 <col:148> '_Bool' lvalue Var 0x560735a5da68 'a$r_buff0_thd4' '_Bool'
|   |         `-ParenExpr 0x560735a64b70 <col:165, col:226> 'int'
|   |           `-ConditionalOperator 0x560735a64b30 <col:166, col:212> 'int'
|   |             |-BinaryOperator 0x560735a64a50 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x560735a64a08 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x560735a649f0 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x560735a649b0 <col:166> '_Bool' lvalue Var 0x560735a5ded0 'a$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x560735a64a38 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x560735a64a20 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x560735a649d0 <col:184> '_Bool' lvalue Var 0x560735a5da68 'a$r_buff0_thd4' '_Bool'
|   |             |-ImplicitCastExpr 0x560735a64ae8 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x560735a64aa0 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x560735a64a70 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x560735a64b18 <col:212> 'int' <IntegralCast>
|   |               `-ImplicitCastExpr 0x560735a64b00 <col:212> '_Bool' <LValueToRValue>
|   |                 `-DeclRefExpr 0x560735a64ac8 <col:212> '_Bool' lvalue Var 0x560735a5da68 'a$r_buff0_thd4' '_Bool'
|   |-BinaryOperator 0x560735a65280 <line:799:3, col:221> '_Bool' '='
|   | |-DeclRefExpr 0x560735a64cd8 <col:3> '_Bool' lvalue Var 0x560735a5dce0 'a$r_buff1_thd4' '_Bool'
|   | `-ImplicitCastExpr 0x560735a65268 <col:20, col:221> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x560735a65238 <col:20, col:221> 'int'
|   |     |-ImplicitCastExpr 0x560735a651f0 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x560735a651d8 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x560735a64cf8 <col:20> '_Bool' lvalue Var 0x560735a5e508 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x560735a65220 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x560735a65208 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x560735a64d18 <col:36> '_Bool' lvalue Var 0x560735a5dce0 'a$r_buff1_thd4' '_Bool'
|   |     `-ParenExpr 0x560735a651b8 <col:53, col:221> 'int'
|   |       `-ConditionalOperator 0x560735a65188 <col:54, col:220> 'int'
|   |         |-BinaryOperator 0x560735a64f28 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x560735a64e48 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x560735a64d70 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x560735a64d58 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x560735a64d38 <col:55> '_Bool' lvalue Var 0x560735a5ded0 'a$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x560735a64e28 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x560735a64dc0 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x560735a64da8 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x560735a64d88 <col:74> '_Bool' lvalue Var 0x560735a5da68 'a$r_buff0_thd4' '_Bool'
|   |         | |   `-UnaryOperator 0x560735a64e10 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x560735a64df8 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x560735a64dd8 <col:93> '_Bool' lvalue Var 0x560735a5dfc8 'a$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x560735a64f08 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x560735a64ea0 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x560735a64e88 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x560735a64e68 <col:112> '_Bool' lvalue Var 0x560735a5da68 'a$r_buff0_thd4' '_Bool'
|   |         |   `-UnaryOperator 0x560735a64ef0 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x560735a64ed8 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x560735a64eb8 <col:131> '_Bool' lvalue Var 0x560735a5dce0 'a$r_buff1_thd4' '_Bool'
|   |         |-ImplicitCastExpr 0x560735a65170 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x560735a65158 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x560735a64f48 <col:148> '_Bool' lvalue Var 0x560735a5dce0 'a$r_buff1_thd4' '_Bool'
|   |         `-ParenExpr 0x560735a65138 <col:165, col:220> 'int'
|   |           `-ConditionalOperator 0x560735a65108 <col:166, col:219> 'int'
|   |             |-BinaryOperator 0x560735a65008 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x560735a64fc0 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x560735a64fa8 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x560735a64f68 <col:166> '_Bool' lvalue Var 0x560735a5ded0 'a$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x560735a64ff0 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x560735a64fd8 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x560735a64f88 <col:184> '_Bool' lvalue Var 0x560735a5da68 'a$r_buff0_thd4' '_Bool'
|   |             |-ImplicitCastExpr 0x560735a650d8 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x560735a65058 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x560735a65028 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x560735a650f0 <col:212, col:219> 'int' <IntegralCast>
|   |               `-CStyleCastExpr 0x560735a650b0 <col:212, col:219> '_Bool' <IntegralToBoolean>
|   |                 `-IntegerLiteral 0x560735a65080 <col:219> 'int' 0
|   |-BinaryOperator 0x560735a652f8 <line:800:3, col:25> 'int' '='
|   | |-DeclRefExpr 0x560735a652a0 <col:3> 'int' lvalue Var 0x560735a5d5d8 '__unbuffered_p3_EBX' 'int'
|   | `-ImplicitCastExpr 0x560735a652e0 <col:25> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x560735a652c0 <col:25> 'int' lvalue Var 0x560735a5d6f8 'a' 'int'
|   |-BinaryOperator 0x560735a65428 <line:801:3, col:37> 'int' '='
|   | |-DeclRefExpr 0x560735a65318 <col:3> 'int' lvalue Var 0x560735a5d6f8 'a' 'int'
|   | `-ConditionalOperator 0x560735a653f8 <col:7, col:37> 'int'
|   |   |-ImplicitCastExpr 0x560735a653b0 <col:7> 'int' <IntegralCast>
|   |   | `-ImplicitCastExpr 0x560735a65398 <col:7> '_Bool' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x560735a65338 <col:7> '_Bool' lvalue Var 0x560735a5d790 'a$flush_delayed' '_Bool'
|   |   |-ImplicitCastExpr 0x560735a653c8 <col:25> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x560735a65358 <col:25> 'int' lvalue Var 0x560735a5d810 'a$mem_tmp' 'int'
|   |   `-ImplicitCastExpr 0x560735a653e0 <col:37> 'int' <LValueToRValue>
|   |     `-DeclRefExpr 0x560735a65378 <col:37> 'int' lvalue Var 0x560735a5d6f8 'a' 'int'
|   |-BinaryOperator 0x560735a654c0 <line:802:3, col:28> '_Bool' '='
|   | |-DeclRefExpr 0x560735a65448 <col:3> '_Bool' lvalue Var 0x560735a5d790 'a$flush_delayed' '_Bool'
|   | `-CStyleCastExpr 0x560735a65498 <col:21, col:28> '_Bool' <IntegralToBoolean>
|   |   `-IntegerLiteral 0x560735a65468 <col:28> 'int' 0
|   |-CallExpr 0x560735a65518 <line:803:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x560735a65500 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x560735a654e0 <col:3> 'void ()' Function 0x560735a03f00 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x560735a65570 <line:804:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x560735a65558 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x560735a65538 <col:3> 'void ()' Function 0x560735a03e40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x560735a65858 <line:805:3, col:103> 'int' '='
|   | |-DeclRefExpr 0x560735a65590 <col:3> 'int' lvalue Var 0x560735a5d6f8 'a' 'int'
|   | `-ConditionalOperator 0x560735a65828 <col:7, col:103> 'int'
|   |   |-BinaryOperator 0x560735a65650 <col:7, col:25> 'int' '&&'
|   |   | |-ImplicitCastExpr 0x560735a65608 <col:7> 'int' <IntegralCast>
|   |   | | `-ImplicitCastExpr 0x560735a655f0 <col:7> '_Bool' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x560735a655b0 <col:7> '_Bool' lvalue Var 0x560735a5ded0 'a$w_buff0_used' '_Bool'
|   |   | `-ImplicitCastExpr 0x560735a65638 <col:25> 'int' <IntegralCast>
|   |   |   `-ImplicitCastExpr 0x560735a65620 <col:25> '_Bool' <LValueToRValue>
|   |   |     `-DeclRefExpr 0x560735a655d0 <col:25> '_Bool' lvalue Var 0x560735a5da68 'a$r_buff0_thd4' '_Bool'
|   |   |-ImplicitCastExpr 0x560735a65810 <col:42> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x560735a65670 <col:42> 'int' lvalue Var 0x560735a5de58 'a$w_buff0' 'int'
|   |   `-ParenExpr 0x560735a657f0 <col:54, col:103> 'int'
|   |     `-ConditionalOperator 0x560735a657c0 <col:55, col:102> 'int'
|   |       |-BinaryOperator 0x560735a65730 <col:55, col:73> 'int' '&&'
|   |       | |-ImplicitCastExpr 0x560735a656e8 <col:55> 'int' <IntegralCast>
|   |       | | `-ImplicitCastExpr 0x560735a656d0 <col:55> '_Bool' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x560735a65690 <col:55> '_Bool' lvalue Var 0x560735a5dfc8 'a$w_buff1_used' '_Bool'
|   |       | `-ImplicitCastExpr 0x560735a65718 <col:73> 'int' <IntegralCast>
|   |       |   `-ImplicitCastExpr 0x560735a65700 <col:73> '_Bool' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x560735a656b0 <col:73> '_Bool' lvalue Var 0x560735a5dce0 'a$r_buff1_thd4' '_Bool'
|   |       |-ImplicitCastExpr 0x560735a65790 <col:90> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x560735a65750 <col:90> 'int' lvalue Var 0x560735a5df50 'a$w_buff1' 'int'
|   |       `-ImplicitCastExpr 0x560735a657a8 <col:102> 'int' <LValueToRValue>
|   |         `-DeclRefExpr 0x560735a65770 <col:102> 'int' lvalue Var 0x560735a5d6f8 'a' 'int'
|   |-BinaryOperator 0x560735a65a60 <line:806:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x560735a65878 <col:3> '_Bool' lvalue Var 0x560735a5ded0 'a$w_buff0_used' '_Bool'
|   | `-ImplicitCastExpr 0x560735a65a48 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x560735a65a18 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x560735a65938 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x560735a658f0 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x560735a658d8 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x560735a65898 <col:20> '_Bool' lvalue Var 0x560735a5ded0 'a$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x560735a65920 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x560735a65908 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x560735a658b8 <col:38> '_Bool' lvalue Var 0x560735a5da68 'a$r_buff0_thd4' '_Bool'
|   |     |-ImplicitCastExpr 0x560735a659d0 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x560735a65988 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x560735a65958 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x560735a65a00 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x560735a659e8 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x560735a659b0 <col:66> '_Bool' lvalue Var 0x560735a5ded0 'a$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x560735a65d68 <line:807:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x560735a65a80 <col:3> '_Bool' lvalue Var 0x560735a5dfc8 'a$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x560735a65d50 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x560735a65d20 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x560735a65c40 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x560735a65b40 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x560735a65af8 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x560735a65ae0 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x560735a65aa0 <col:20> '_Bool' lvalue Var 0x560735a5ded0 'a$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x560735a65b28 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x560735a65b10 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x560735a65ac0 <col:38> '_Bool' lvalue Var 0x560735a5da68 'a$r_buff0_thd4' '_Bool'
|   |     | `-BinaryOperator 0x560735a65c20 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x560735a65bd8 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x560735a65bc0 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x560735a65b80 <col:56> '_Bool' lvalue Var 0x560735a5dfc8 'a$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x560735a65c08 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x560735a65bf0 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x560735a65ba0 <col:74> '_Bool' lvalue Var 0x560735a5dce0 'a$r_buff1_thd4' '_Bool'
|   |     |-ImplicitCastExpr 0x560735a65cd8 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x560735a65c90 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x560735a65c60 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x560735a65d08 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x560735a65cf0 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x560735a65cb8 <col:102> '_Bool' lvalue Var 0x560735a5dfc8 'a$w_buff1_used' '_Bool'
|   |-BinaryOperator 0x560735a65f70 <line:808:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x560735a65d88 <col:3> '_Bool' lvalue Var 0x560735a5da68 'a$r_buff0_thd4' '_Bool'
|   | `-ImplicitCastExpr 0x560735a65f58 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x560735a65f28 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x560735a65e48 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x560735a65e00 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x560735a65de8 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x560735a65da8 <col:20> '_Bool' lvalue Var 0x560735a5ded0 'a$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x560735a65e30 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x560735a65e18 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x560735a65dc8 <col:38> '_Bool' lvalue Var 0x560735a5da68 'a$r_buff0_thd4' '_Bool'
|   |     |-ImplicitCastExpr 0x560735a65ee0 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x560735a65e98 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x560735a65e68 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x560735a65f10 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x560735a65ef8 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x560735a65ec0 <col:66> '_Bool' lvalue Var 0x560735a5da68 'a$r_buff0_thd4' '_Bool'
|   |-BinaryOperator 0x560735a66258 <line:809:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x560735a65f90 <col:3> '_Bool' lvalue Var 0x560735a5dce0 'a$r_buff1_thd4' '_Bool'
|   | `-ImplicitCastExpr 0x560735a66240 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x560735a66210 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x560735a66130 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x560735a66050 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x560735a66008 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x560735a65ff0 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x560735a65fb0 <col:20> '_Bool' lvalue Var 0x560735a5ded0 'a$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x560735a66038 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x560735a66020 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x560735a65fd0 <col:38> '_Bool' lvalue Var 0x560735a5da68 'a$r_buff0_thd4' '_Bool'
|   |     | `-BinaryOperator 0x560735a66110 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x560735a660c8 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x560735a660b0 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x560735a66070 <col:56> '_Bool' lvalue Var 0x560735a5dfc8 'a$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x560735a660f8 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x560735a660e0 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x560735a66090 <col:74> '_Bool' lvalue Var 0x560735a5dce0 'a$r_buff1_thd4' '_Bool'
|   |     |-ImplicitCastExpr 0x560735a661c8 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x560735a66180 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x560735a66150 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x560735a661f8 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x560735a661e0 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x560735a661a8 <col:102> '_Bool' lvalue Var 0x560735a5dce0 'a$r_buff1_thd4' '_Bool'
|   |-CallExpr 0x560735a662b0 <line:810:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x560735a66298 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x560735a66278 <col:3> 'void ()' Function 0x560735a03f00 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x560735a66308 <line:811:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x560735a662f0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x560735a662d0 <col:3> 'void ()' Function 0x560735a03e40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x560735a663c0 <line:812:3, col:41> 'int' '='
|   | |-DeclRefExpr 0x560735a66328 <col:3> 'int' lvalue Var 0x560735a5d278 '__unbuffered_cnt' 'int'
|   | `-BinaryOperator 0x560735a663a0 <col:22, col:41> 'int' '+'
|   |   |-ImplicitCastExpr 0x560735a66388 <col:22> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x560735a66348 <col:22> 'int' lvalue Var 0x560735a5d278 '__unbuffered_cnt' 'int'
|   |   `-IntegerLiteral 0x560735a66368 <col:41> 'int' 1
|   |-CallExpr 0x560735a66418 <line:813:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x560735a66400 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x560735a663e0 <col:3> 'void ()' Function 0x560735a03f00 '__VERIFIER_atomic_end' 'void ()'
|   `-ReturnStmt 0x560735a66490 <line:814:3, col:36>
|     `-CallExpr 0x560735a66470 <col:10, col:36> 'void *'
|       `-ImplicitCastExpr 0x560735a66458 <col:10> 'void *(*)(void)' <FunctionToPointerDecay>
|         `-DeclRefExpr 0x560735a66438 <col:10> 'void *(void)' Function 0x560735a03958 '__VERIFIER_nondet_pointer' 'void *(void)'
|-FunctionDecl 0x560735a665d8 prev 0x560735a5cfc0 <line:816:1, line:818:1> line:816:6 fence 'void ()'
| `-CompoundStmt 0x560735a66678 <line:817:1, line:818:1>
|-FunctionDecl 0x560735a666a8 prev 0x560735a5d080 <line:819:1, line:821:1> line:819:6 isync 'void ()'
| `-CompoundStmt 0x560735a66748 <line:820:1, line:821:1>
|-FunctionDecl 0x560735a66778 prev 0x560735a5d140 <line:822:1, line:824:1> line:822:6 lwfence 'void ()'
| `-CompoundStmt 0x560735a66818 <line:823:1, line:824:1>
`-FunctionDecl 0x560735a66888 <line:825:1, line:851:1> line:825:5 main 'int ()'
  `-CompoundStmt 0x560735a688a8 <line:826:1, line:851:1>
    |-DeclStmt 0x560735a669a0 <line:827:3, col:17>
    | `-VarDecl 0x560735a66938 <col:3, col:13> col:13 used t771 'pthread_t':'unsigned long'
    |-CallExpr 0x560735a66bd8 <line:828:3, col:53> 'int'
    | |-ImplicitCastExpr 0x560735a66bc0 <col:3> 'int (*)(pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x560735a669b8 <col:3> 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' Function 0x560735a44488 'pthread_create' 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)'
    | |-UnaryOperator 0x560735a669f8 <col:18, col:19> 'pthread_t *' prefix '&' cannot overflow
    | | `-DeclRefExpr 0x560735a669d8 <col:19> 'pthread_t':'unsigned long' lvalue Var 0x560735a66938 't771' 'pthread_t':'unsigned long'
    | |-ImplicitCastExpr 0x560735a66c18 <col:25, col:35> 'const pthread_attr_t *' <NullToPointer>
    | | `-ParenExpr 0x560735a66a70 <col:25, col:35> 'void *'
    | |   `-CStyleCastExpr 0x560735a66a48 <col:26, col:34> 'void *' <NullToPointer>
    | |     `-IntegerLiteral 0x560735a66a10 <col:34> 'int' 0
    | |-ImplicitCastExpr 0x560735a66c30 <col:38> 'void *(*)(void *)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x560735a66a90 <col:38> 'void *(void *)' Function 0x560735a5e620 'P0' 'void *(void *)'
    | `-ParenExpr 0x560735a66b10 <col:42, col:52> 'void *'
    |   `-CStyleCastExpr 0x560735a66ae8 <col:43, col:51> 'void *' <NullToPointer>
    |     `-IntegerLiteral 0x560735a66ab0 <col:51> 'int' 0
    |-DeclStmt 0x560735a66cc0 <line:829:3, col:17>
    | `-VarDecl 0x560735a66c58 <col:3, col:13> col:13 used t772 'pthread_t':'unsigned long'
    |-CallExpr 0x560735a66e68 <line:830:3, col:53> 'int'
    | |-ImplicitCastExpr 0x560735a66e50 <col:3> 'int (*)(pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x560735a66cd8 <col:3> 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' Function 0x560735a44488 'pthread_create' 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)'
    | |-UnaryOperator 0x560735a66d18 <col:18, col:19> 'pthread_t *' prefix '&' cannot overflow
    | | `-DeclRefExpr 0x560735a66cf8 <col:19> 'pthread_t':'unsigned long' lvalue Var 0x560735a66c58 't772' 'pthread_t':'unsigned long'
    | |-ImplicitCastExpr 0x560735a66ea8 <col:25, col:35> 'const pthread_attr_t *' <NullToPointer>
    | | `-ParenExpr 0x560735a66d90 <col:25, col:35> 'void *'
    | |   `-CStyleCastExpr 0x560735a66d68 <col:26, col:34> 'void *' <NullToPointer>
    | |     `-IntegerLiteral 0x560735a66d30 <col:34> 'int' 0
    | |-ImplicitCastExpr 0x560735a66ec0 <col:38> 'void *(*)(void *)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x560735a66db0 <col:38> 'void *(void *)' Function 0x560735a60090 'P1' 'void *(void *)'
    | `-ParenExpr 0x560735a66e30 <col:42, col:52> 'void *'
    |   `-CStyleCastExpr 0x560735a66e08 <col:43, col:51> 'void *' <NullToPointer>
    |     `-IntegerLiteral 0x560735a66dd0 <col:51> 'int' 0
    |-DeclStmt 0x560735a66f50 <line:831:3, col:17>
    | `-VarDecl 0x560735a66ee8 <col:3, col:13> col:13 used t773 'pthread_t':'unsigned long'
    |-CallExpr 0x560735a670f8 <line:832:3, col:53> 'int'
    | |-ImplicitCastExpr 0x560735a670e0 <col:3> 'int (*)(pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x560735a66f68 <col:3> 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' Function 0x560735a44488 'pthread_create' 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)'
    | |-UnaryOperator 0x560735a66fa8 <col:18, col:19> 'pthread_t *' prefix '&' cannot overflow
    | | `-DeclRefExpr 0x560735a66f88 <col:19> 'pthread_t':'unsigned long' lvalue Var 0x560735a66ee8 't773' 'pthread_t':'unsigned long'
    | |-ImplicitCastExpr 0x560735a67138 <col:25, col:35> 'const pthread_attr_t *' <NullToPointer>
    | | `-ParenExpr 0x560735a67020 <col:25, col:35> 'void *'
    | |   `-CStyleCastExpr 0x560735a66ff8 <col:26, col:34> 'void *' <NullToPointer>
    | |     `-IntegerLiteral 0x560735a66fc0 <col:34> 'int' 0
    | |-ImplicitCastExpr 0x560735a67150 <col:38> 'void *(*)(void *)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x560735a67040 <col:38> 'void *(void *)' Function 0x560735a613f8 'P2' 'void *(void *)'
    | `-ParenExpr 0x560735a670c0 <col:42, col:52> 'void *'
    |   `-CStyleCastExpr 0x560735a67098 <col:43, col:51> 'void *' <NullToPointer>
    |     `-IntegerLiteral 0x560735a67060 <col:51> 'int' 0
    |-DeclStmt 0x560735a671e0 <line:833:3, col:17>
    | `-VarDecl 0x560735a67178 <col:3, col:13> col:13 used t774 'pthread_t':'unsigned long'
    |-CallExpr 0x560735a67388 <line:834:3, col:53> 'int'
    | |-ImplicitCastExpr 0x560735a67370 <col:3> 'int (*)(pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x560735a671f8 <col:3> 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' Function 0x560735a44488 'pthread_create' 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)'
    | |-UnaryOperator 0x560735a67238 <col:18, col:19> 'pthread_t *' prefix '&' cannot overflow
    | | `-DeclRefExpr 0x560735a67218 <col:19> 'pthread_t':'unsigned long' lvalue Var 0x560735a67178 't774' 'pthread_t':'unsigned long'
    | |-ImplicitCastExpr 0x560735a673c8 <col:25, col:35> 'const pthread_attr_t *' <NullToPointer>
    | | `-ParenExpr 0x560735a672b0 <col:25, col:35> 'void *'
    | |   `-CStyleCastExpr 0x560735a67288 <col:26, col:34> 'void *' <NullToPointer>
    | |     `-IntegerLiteral 0x560735a67250 <col:34> 'int' 0
    | |-ImplicitCastExpr 0x560735a673e0 <col:38> 'void *(*)(void *)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x560735a672d0 <col:38> 'void *(void *)' Function 0x560735a62780 'P3' 'void *(void *)'
    | `-ParenExpr 0x560735a67350 <col:42, col:52> 'void *'
    |   `-CStyleCastExpr 0x560735a67328 <col:43, col:51> 'void *' <NullToPointer>
    |     `-IntegerLiteral 0x560735a672f0 <col:51> 'int' 0
    |-CallExpr 0x560735a67430 <line:835:3, col:27> 'void'
    | `-ImplicitCastExpr 0x560735a67418 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x560735a673f8 <col:3> 'void ()' Function 0x560735a03e40 '__VERIFIER_atomic_begin' 'void ()'
    |-BinaryOperator 0x560735a67500 <line:836:3, col:41> '_Bool' '='
    | |-DeclRefExpr 0x560735a67450 <col:3> '_Bool' lvalue Var 0x560735a5e040 'main$tmp_guard0' '_Bool'
    | `-ImplicitCastExpr 0x560735a674e8 <col:21, col:41> '_Bool' <IntegralToBoolean>
    |   `-BinaryOperator 0x560735a674c8 <col:21, col:41> 'int' '=='
    |     |-ImplicitCastExpr 0x560735a674b0 <col:21> 'int' <LValueToRValue>
    |     | `-DeclRefExpr 0x560735a67470 <col:21> 'int' lvalue Var 0x560735a5d278 '__unbuffered_cnt' 'int'
    |     `-IntegerLiteral 0x560735a67490 <col:41> 'int' 4
    |-CallExpr 0x560735a67558 <line:837:3, col:25> 'void'
    | `-ImplicitCastExpr 0x560735a67540 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x560735a67520 <col:3> 'void ()' Function 0x560735a03f00 '__VERIFIER_atomic_end' 'void ()'
    |-CallExpr 0x560735a675d0 <line:838:3, col:36> 'void'
    | |-ImplicitCastExpr 0x560735a675b8 <col:3> 'void (*)(int)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x560735a67578 <col:3> 'void (int)' Function 0x560735a03790 '__VERIFIER_assume' 'void (int)'
    | `-ImplicitCastExpr 0x560735a67610 <col:21> 'int' <IntegralCast>
    |   `-ImplicitCastExpr 0x560735a675f8 <col:21> '_Bool' <LValueToRValue>
    |     `-DeclRefExpr 0x560735a67598 <col:21> '_Bool' lvalue Var 0x560735a5e040 'main$tmp_guard0' '_Bool'
    |-CallExpr 0x560735a67660 <line:839:3, col:27> 'void'
    | `-ImplicitCastExpr 0x560735a67648 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x560735a67628 <col:3> 'void ()' Function 0x560735a03e40 '__VERIFIER_atomic_begin' 'void ()'
    |-BinaryOperator 0x560735a67948 <line:840:3, col:103> 'int' '='
    | |-DeclRefExpr 0x560735a67680 <col:3> 'int' lvalue Var 0x560735a5d6f8 'a' 'int'
    | `-ConditionalOperator 0x560735a67918 <col:7, col:103> 'int'
    |   |-BinaryOperator 0x560735a67740 <col:7, col:25> 'int' '&&'
    |   | |-ImplicitCastExpr 0x560735a676f8 <col:7> 'int' <IntegralCast>
    |   | | `-ImplicitCastExpr 0x560735a676e0 <col:7> '_Bool' <LValueToRValue>
    |   | |   `-DeclRefExpr 0x560735a676a0 <col:7> '_Bool' lvalue Var 0x560735a5ded0 'a$w_buff0_used' '_Bool'
    |   | `-ImplicitCastExpr 0x560735a67728 <col:25> 'int' <IntegralCast>
    |   |   `-ImplicitCastExpr 0x560735a67710 <col:25> '_Bool' <LValueToRValue>
    |   |     `-DeclRefExpr 0x560735a676c0 <col:25> '_Bool' lvalue Var 0x560735a5d888 'a$r_buff0_thd0' '_Bool'
    |   |-ImplicitCastExpr 0x560735a67900 <col:42> 'int' <LValueToRValue>
    |   | `-DeclRefExpr 0x560735a67760 <col:42> 'int' lvalue Var 0x560735a5de58 'a$w_buff0' 'int'
    |   `-ParenExpr 0x560735a678e0 <col:54, col:103> 'int'
    |     `-ConditionalOperator 0x560735a678b0 <col:55, col:102> 'int'
    |       |-BinaryOperator 0x560735a67820 <col:55, col:73> 'int' '&&'
    |       | |-ImplicitCastExpr 0x560735a677d8 <col:55> 'int' <IntegralCast>
    |       | | `-ImplicitCastExpr 0x560735a677c0 <col:55> '_Bool' <LValueToRValue>
    |       | |   `-DeclRefExpr 0x560735a67780 <col:55> '_Bool' lvalue Var 0x560735a5dfc8 'a$w_buff1_used' '_Bool'
    |       | `-ImplicitCastExpr 0x560735a67808 <col:73> 'int' <IntegralCast>
    |       |   `-ImplicitCastExpr 0x560735a677f0 <col:73> '_Bool' <LValueToRValue>
    |       |     `-DeclRefExpr 0x560735a677a0 <col:73> '_Bool' lvalue Var 0x560735a5db00 'a$r_buff1_thd0' '_Bool'
    |       |-ImplicitCastExpr 0x560735a67880 <col:90> 'int' <LValueToRValue>
    |       | `-DeclRefExpr 0x560735a67840 <col:90> 'int' lvalue Var 0x560735a5df50 'a$w_buff1' 'int'
    |       `-ImplicitCastExpr 0x560735a67898 <col:102> 'int' <LValueToRValue>
    |         `-DeclRefExpr 0x560735a67860 <col:102> 'int' lvalue Var 0x560735a5d6f8 'a' 'int'
    |-BinaryOperator 0x560735a67b50 <line:841:3, col:66> '_Bool' '='
    | |-DeclRefExpr 0x560735a67968 <col:3> '_Bool' lvalue Var 0x560735a5ded0 'a$w_buff0_used' '_Bool'
    | `-ImplicitCastExpr 0x560735a67b38 <col:20, col:66> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x560735a67b08 <col:20, col:66> 'int'
    |     |-BinaryOperator 0x560735a67a28 <col:20, col:38> 'int' '&&'
    |     | |-ImplicitCastExpr 0x560735a679e0 <col:20> 'int' <IntegralCast>
    |     | | `-ImplicitCastExpr 0x560735a679c8 <col:20> '_Bool' <LValueToRValue>
    |     | |   `-DeclRefExpr 0x560735a67988 <col:20> '_Bool' lvalue Var 0x560735a5ded0 'a$w_buff0_used' '_Bool'
    |     | `-ImplicitCastExpr 0x560735a67a10 <col:38> 'int' <IntegralCast>
    |     |   `-ImplicitCastExpr 0x560735a679f8 <col:38> '_Bool' <LValueToRValue>
    |     |     `-DeclRefExpr 0x560735a679a8 <col:38> '_Bool' lvalue Var 0x560735a5d888 'a$r_buff0_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x560735a67ac0 <col:55, col:62> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x560735a67a78 <col:55, col:62> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x560735a67a48 <col:62> 'int' 0
    |     `-ImplicitCastExpr 0x560735a67af0 <col:66> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x560735a67ad8 <col:66> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x560735a67aa0 <col:66> '_Bool' lvalue Var 0x560735a5ded0 'a$w_buff0_used' '_Bool'
    |-BinaryOperator 0x560735a67e48 <line:842:3, col:102> '_Bool' '='
    | |-DeclRefExpr 0x560735a67b70 <col:3> '_Bool' lvalue Var 0x560735a5dfc8 'a$w_buff1_used' '_Bool'
    | `-ImplicitCastExpr 0x560735a67e30 <col:20, col:102> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x560735a67e00 <col:20, col:102> 'int'
    |     |-BinaryOperator 0x560735a67d20 <col:20, col:74> 'int' '||'
    |     | |-BinaryOperator 0x560735a67c40 <col:20, col:38> 'int' '&&'
    |     | | |-ImplicitCastExpr 0x560735a67bf8 <col:20> 'int' <IntegralCast>
    |     | | | `-ImplicitCastExpr 0x560735a67be0 <col:20> '_Bool' <LValueToRValue>
    |     | | |   `-DeclRefExpr 0x560735a67ba0 <col:20> '_Bool' lvalue Var 0x560735a5ded0 'a$w_buff0_used' '_Bool'
    |     | | `-ImplicitCastExpr 0x560735a67c28 <col:38> 'int' <IntegralCast>
    |     | |   `-ImplicitCastExpr 0x560735a67c10 <col:38> '_Bool' <LValueToRValue>
    |     | |     `-DeclRefExpr 0x560735a67bc0 <col:38> '_Bool' lvalue Var 0x560735a5d888 'a$r_buff0_thd0' '_Bool'
    |     | `-BinaryOperator 0x560735a67d00 <col:56, col:74> 'int' '&&'
    |     |   |-ImplicitCastExpr 0x560735a67cb8 <col:56> 'int' <IntegralCast>
    |     |   | `-ImplicitCastExpr 0x560735a67ca0 <col:56> '_Bool' <LValueToRValue>
    |     |   |   `-DeclRefExpr 0x560735a67c60 <col:56> '_Bool' lvalue Var 0x560735a5dfc8 'a$w_buff1_used' '_Bool'
    |     |   `-ImplicitCastExpr 0x560735a67ce8 <col:74> 'int' <IntegralCast>
    |     |     `-ImplicitCastExpr 0x560735a67cd0 <col:74> '_Bool' <LValueToRValue>
    |     |       `-DeclRefExpr 0x560735a67c80 <col:74> '_Bool' lvalue Var 0x560735a5db00 'a$r_buff1_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x560735a67db8 <col:91, col:98> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x560735a67d70 <col:91, col:98> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x560735a67d40 <col:98> 'int' 0
    |     `-ImplicitCastExpr 0x560735a67de8 <col:102> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x560735a67dd0 <col:102> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x560735a67d98 <col:102> '_Bool' lvalue Var 0x560735a5dfc8 'a$w_buff1_used' '_Bool'
    |-BinaryOperator 0x560735a68050 <line:843:3, col:66> '_Bool' '='
    | |-DeclRefExpr 0x560735a67e68 <col:3> '_Bool' lvalue Var 0x560735a5d888 'a$r_buff0_thd0' '_Bool'
    | `-ImplicitCastExpr 0x560735a68038 <col:20, col:66> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x560735a68008 <col:20, col:66> 'int'
    |     |-BinaryOperator 0x560735a67f28 <col:20, col:38> 'int' '&&'
    |     | |-ImplicitCastExpr 0x560735a67ee0 <col:20> 'int' <IntegralCast>
    |     | | `-ImplicitCastExpr 0x560735a67ec8 <col:20> '_Bool' <LValueToRValue>
    |     | |   `-DeclRefExpr 0x560735a67e88 <col:20> '_Bool' lvalue Var 0x560735a5ded0 'a$w_buff0_used' '_Bool'
    |     | `-ImplicitCastExpr 0x560735a67f10 <col:38> 'int' <IntegralCast>
    |     |   `-ImplicitCastExpr 0x560735a67ef8 <col:38> '_Bool' <LValueToRValue>
    |     |     `-DeclRefExpr 0x560735a67ea8 <col:38> '_Bool' lvalue Var 0x560735a5d888 'a$r_buff0_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x560735a67fc0 <col:55, col:62> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x560735a67f78 <col:55, col:62> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x560735a67f48 <col:62> 'int' 0
    |     `-ImplicitCastExpr 0x560735a67ff0 <col:66> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x560735a67fd8 <col:66> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x560735a67fa0 <col:66> '_Bool' lvalue Var 0x560735a5d888 'a$r_buff0_thd0' '_Bool'
    |-BinaryOperator 0x560735a68338 <line:844:3, col:102> '_Bool' '='
    | |-DeclRefExpr 0x560735a68070 <col:3> '_Bool' lvalue Var 0x560735a5db00 'a$r_buff1_thd0' '_Bool'
    | `-ImplicitCastExpr 0x560735a68320 <col:20, col:102> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x560735a682f0 <col:20, col:102> 'int'
    |     |-BinaryOperator 0x560735a68210 <col:20, col:74> 'int' '||'
    |     | |-BinaryOperator 0x560735a68130 <col:20, col:38> 'int' '&&'
    |     | | |-ImplicitCastExpr 0x560735a680e8 <col:20> 'int' <IntegralCast>
    |     | | | `-ImplicitCastExpr 0x560735a680d0 <col:20> '_Bool' <LValueToRValue>
    |     | | |   `-DeclRefExpr 0x560735a68090 <col:20> '_Bool' lvalue Var 0x560735a5ded0 'a$w_buff0_used' '_Bool'
    |     | | `-ImplicitCastExpr 0x560735a68118 <col:38> 'int' <IntegralCast>
    |     | |   `-ImplicitCastExpr 0x560735a68100 <col:38> '_Bool' <LValueToRValue>
    |     | |     `-DeclRefExpr 0x560735a680b0 <col:38> '_Bool' lvalue Var 0x560735a5d888 'a$r_buff0_thd0' '_Bool'
    |     | `-BinaryOperator 0x560735a681f0 <col:56, col:74> 'int' '&&'
    |     |   |-ImplicitCastExpr 0x560735a681a8 <col:56> 'int' <IntegralCast>
    |     |   | `-ImplicitCastExpr 0x560735a68190 <col:56> '_Bool' <LValueToRValue>
    |     |   |   `-DeclRefExpr 0x560735a68150 <col:56> '_Bool' lvalue Var 0x560735a5dfc8 'a$w_buff1_used' '_Bool'
    |     |   `-ImplicitCastExpr 0x560735a681d8 <col:74> 'int' <IntegralCast>
    |     |     `-ImplicitCastExpr 0x560735a681c0 <col:74> '_Bool' <LValueToRValue>
    |     |       `-DeclRefExpr 0x560735a68170 <col:74> '_Bool' lvalue Var 0x560735a5db00 'a$r_buff1_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x560735a682a8 <col:91, col:98> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x560735a68260 <col:91, col:98> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x560735a68230 <col:98> 'int' 0
    |     `-ImplicitCastExpr 0x560735a682d8 <col:102> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x560735a682c0 <col:102> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x560735a68288 <col:102> '_Bool' lvalue Var 0x560735a5db00 'a$r_buff1_thd0' '_Bool'
    |-CallExpr 0x560735a68390 <line:845:3, col:25> 'void'
    | `-ImplicitCastExpr 0x560735a68378 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x560735a68358 <col:3> 'void ()' Function 0x560735a03f00 '__VERIFIER_atomic_end' 'void ()'
    |-CallExpr 0x560735a683e8 <line:846:3, col:27> 'void'
    | `-ImplicitCastExpr 0x560735a683d0 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x560735a683b0 <col:3> 'void ()' Function 0x560735a03e40 '__VERIFIER_atomic_begin' 'void ()'
    |-BinaryOperator 0x560735a68750 <line:847:3, col:123> '_Bool' '='
    | |-DeclRefExpr 0x560735a68408 <col:3> '_Bool' lvalue Var 0x560735a5e0b8 'main$tmp_guard1' '_Bool'
    | `-ImplicitCastExpr 0x560735a68738 <col:21, col:123> '_Bool' <IntegralToBoolean>
    |   `-UnaryOperator 0x560735a68720 <col:21, col:123> 'int' prefix '!' cannot overflow
    |     `-ParenExpr 0x560735a68700 <col:22, col:123> 'int'
    |       `-BinaryOperator 0x560735a686e0 <col:23, col:122> 'int' '&&'
    |         |-BinaryOperator 0x560735a68648 <col:23, col:94> 'int' '&&'
    |         | |-BinaryOperator 0x560735a685b0 <col:23, col:66> 'int' '&&'
    |         | | |-BinaryOperator 0x560735a68518 <col:23, col:38> 'int' '&&'
    |         | | | |-BinaryOperator 0x560735a68480 <col:23, col:28> 'int' '=='
    |         | | | | |-ImplicitCastExpr 0x560735a68468 <col:23> 'int' <LValueToRValue>
    |         | | | | | `-DeclRefExpr 0x560735a68428 <col:23> 'int' lvalue Var 0x560735a5e2d8 'y' 'int'
    |         | | | | `-IntegerLiteral 0x560735a68448 <col:28> 'int' 2
    |         | | | `-BinaryOperator 0x560735a684f8 <col:33, col:38> 'int' '=='
    |         | | |   |-ImplicitCastExpr 0x560735a684e0 <col:33> 'int' <LValueToRValue>
    |         | | |   | `-DeclRefExpr 0x560735a684a0 <col:33> 'int' lvalue Var 0x560735a5e3f8 'z' 'int'
    |         | | |   `-IntegerLiteral 0x560735a684c0 <col:38> 'int' 2
    |         | | `-BinaryOperator 0x560735a68590 <col:43, col:66> 'int' '=='
    |         | |   |-ImplicitCastExpr 0x560735a68578 <col:43> 'int' <LValueToRValue>
    |         | |   | `-DeclRefExpr 0x560735a68538 <col:43> 'int' lvalue Var 0x560735a5d398 '__unbuffered_p0_EAX' 'int'
    |         | |   `-IntegerLiteral 0x560735a68558 <col:66> 'int' 0
    |         | `-BinaryOperator 0x560735a68628 <col:71, col:94> 'int' '=='
    |         |   |-ImplicitCastExpr 0x560735a68610 <col:71> 'int' <LValueToRValue>
    |         |   | `-DeclRefExpr 0x560735a685d0 <col:71> 'int' lvalue Var 0x560735a5d4b8 '__unbuffered_p3_EAX' 'int'
    |         |   `-IntegerLiteral 0x560735a685f0 <col:94> 'int' 2
    |         `-BinaryOperator 0x560735a686c0 <col:99, col:122> 'int' '=='
    |           |-ImplicitCastExpr 0x560735a686a8 <col:99> 'int' <LValueToRValue>
    |           | `-DeclRefExpr 0x560735a68668 <col:99> 'int' lvalue Var 0x560735a5d5d8 '__unbuffered_p3_EBX' 'int'
    |           `-IntegerLiteral 0x560735a68688 <col:122> 'int' 0
    |-CallExpr 0x560735a687a8 <line:848:3, col:25> 'void'
    | `-ImplicitCastExpr 0x560735a68790 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x560735a68770 <col:3> 'void ()' Function 0x560735a03f00 '__VERIFIER_atomic_end' 'void ()'
    |-CallExpr 0x560735a68820 <line:849:3, col:36> 'void'
    | |-ImplicitCastExpr 0x560735a68808 <col:3> 'void (*)(int)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x560735a687c8 <col:3> 'void (int)' Function 0x560735a03bc8 '__VERIFIER_assert' 'void (int)'
    | `-ImplicitCastExpr 0x560735a68860 <col:21> 'int' <IntegralCast>
    |   `-ImplicitCastExpr 0x560735a68848 <col:21> '_Bool' <LValueToRValue>
    |     `-DeclRefExpr 0x560735a687e8 <col:21> '_Bool' lvalue Var 0x560735a5e0b8 'main$tmp_guard1' '_Bool'
    `-ReturnStmt 0x560735a68898 <line:850:3, col:10>
      `-IntegerLiteral 0x560735a68878 <col:10> 'int' 0
