TranslationUnitDecl 0x55f61647de18 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x55f61647e6d8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x55f61647e3b0 '__int128'
|-TypedefDecl 0x55f61647e748 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x55f61647e3d0 'unsigned __int128'
|-TypedefDecl 0x55f61647ea50 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x55f61647e820 'struct __NSConstantString_tag'
|   `-Record 0x55f61647e7a0 '__NSConstantString_tag'
|-TypedefDecl 0x55f61647eaf8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x55f61647eab0 'char *'
|   `-BuiltinType 0x55f61647deb0 'char'
|-TypedefDecl 0x55f6164bd650 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'struct __va_list_tag [1]'
| `-ConstantArrayType 0x55f61647ed90 'struct __va_list_tag [1]' 1 
|   `-RecordType 0x55f61647ebd0 'struct __va_list_tag'
|     `-Record 0x55f61647eb50 '__va_list_tag'
|-FunctionDecl 0x55f6164bd770 <./split_0/rfi005_tso.oepc_false-unreach-call.i:1:1, col:41> col:14 used __VERIFIER_nondet_bool '_Bool (void)' extern
|-FunctionDecl 0x55f6164bd940 <line:2:1, col:34> col:13 used __VERIFIER_assume 'void (int)' extern
| `-ParmVarDecl 0x55f6164bd870 <col:31> col:34 'int'
|-FunctionDecl 0x55f6164bdab8 <line:3:1, col:45> col:15 used __VERIFIER_nondet_pointer 'void *(void)' extern
|-FunctionDecl 0x55f6164bdbe0 <line:4:1, col:61> col:13 used __VERIFIER_error 'void () __attribute__((noreturn))' extern
|-FunctionDecl 0x55f6164bdd28 <line:5:1, col:99> col:6 used __VERIFIER_assert 'void (int)'
| |-ParmVarDecl 0x55f6164bdc98 <col:24, col:28> col:28 used expression 'int'
| `-CompoundStmt 0x55f6164bdf58 <col:40, col:99>
|   |-IfStmt 0x55f6164bdf28 <col:42, col:88>
|   | |-UnaryOperator 0x55f6164bde08 <col:46, col:47> 'int' prefix '!' cannot overflow
|   | | `-ImplicitCastExpr 0x55f6164bddf0 <col:47> 'int' <LValueToRValue>
|   | |   `-DeclRefExpr 0x55f6164bddd0 <col:47> 'int' lvalue ParmVar 0x55f6164bdc98 'expression' 'int'
|   | `-CompoundStmt 0x55f6164bdf10 <col:59, col:88>
|   |   `-LabelStmt 0x55f6164bdef8 <col:61, col:85> 'ERROR'
|   |     `-CallExpr 0x55f6164bde88 <col:68, col:85> 'void'
|   |       `-ImplicitCastExpr 0x55f6164bde70 <col:68> 'void (*)() __attribute__((noreturn))' <FunctionToPointerDecay>
|   |         `-DeclRefExpr 0x55f6164bde20 <col:68> 'void () __attribute__((noreturn))' Function 0x55f6164bdbe0 '__VERIFIER_error' 'void () __attribute__((noreturn))'
|   |-NullStmt 0x55f6164bdf40 <col:89>
|   `-ReturnStmt 0x55f6164bdf48 <col:91>
|-FunctionDecl 0x55f6164bdfa0 <line:6:1, col:37> col:13 used __VERIFIER_atomic_begin 'void ()' extern
|-FunctionDecl 0x55f6164be060 <line:7:1, col:35> col:13 used __VERIFIER_atomic_end 'void ()' extern
|-FunctionDecl 0x55f6164be3e0 <line:9:1, line:11:76> line:9:13 __assert_fail 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x55f6164be118 <col:28, col:40> col:40 __assertion 'const char *'
| |-ParmVarDecl 0x55f6164be198 <col:53, col:65> col:65 __file 'const char *'
| |-ParmVarDecl 0x55f6164be218 <line:10:7, col:20> col:20 __line 'unsigned int'
| |-ParmVarDecl 0x55f6164be298 <col:28, col:40> col:40 __function 'const char *'
| `-NoThrowAttr 0x55f6164be4a0 <line:11:22>
|-FunctionDecl 0x55f6164e4520 <line:12:1, line:14:76> line:12:13 __assert_perror_fail 'void (int, const char *, unsigned int, const char *) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x55f6164be510 <col:35, col:39> col:39 __errnum 'int'
| |-ParmVarDecl 0x55f6164be590 <col:49, col:61> col:61 __file 'const char *'
| |-ParmVarDecl 0x55f6164e4350 <line:13:7, col:20> col:20 __line 'unsigned int'
| |-ParmVarDecl 0x55f6164e43d0 <col:28, col:40> col:40 __function 'const char *'
| `-NoThrowAttr 0x55f6164e45e0 <line:14:22>
|-FunctionDecl 0x55f6164e4890 <line:15:1, line:16:76> line:15:13 __assert 'void (const char *, const char *, int) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x55f6164e4650 <col:23, col:35> col:35 __assertion 'const char *'
| |-ParmVarDecl 0x55f6164e46d0 <col:48, col:60> col:60 __file 'const char *'
| |-ParmVarDecl 0x55f6164e4750 <col:68, col:72> col:72 __line 'int'
| `-NoThrowAttr 0x55f6164e4948 <line:16:22>
|-TypedefDecl 0x55f6164e49b8 <line:18:1, col:23> col:23 __u_char 'unsigned char'
| `-BuiltinType 0x55f61647df70 'unsigned char'
|-TypedefDecl 0x55f6164e4a28 <line:19:1, col:28> col:28 __u_short 'unsigned short'
| `-BuiltinType 0x55f61647df90 'unsigned short'
|-TypedefDecl 0x55f6164e4a98 <line:20:1, col:22> col:22 __u_int 'unsigned int'
| `-BuiltinType 0x55f61647dfb0 'unsigned int'
|-TypedefDecl 0x55f6164e4b08 <line:21:1, col:27> col:27 __u_long 'unsigned long'
| `-BuiltinType 0x55f61647dfd0 'unsigned long'
|-TypedefDecl 0x55f6164e4b78 <line:22:1, col:21> col:21 __int8_t 'signed char'
| `-BuiltinType 0x55f61647ded0 'signed char'
|-TypedefDecl 0x55f6164e4be8 <line:23:1, col:23> col:23 __uint8_t 'unsigned char'
| `-BuiltinType 0x55f61647df70 'unsigned char'
|-TypedefDecl 0x55f6164e4c58 <line:24:1, col:26> col:26 __int16_t 'short'
| `-BuiltinType 0x55f61647def0 'short'
|-TypedefDecl 0x55f6164e4cc8 <line:25:1, col:28> col:28 __uint16_t 'unsigned short'
| `-BuiltinType 0x55f61647df90 'unsigned short'
|-TypedefDecl 0x55f6164e4d38 <line:26:1, col:20> col:20 __int32_t 'int'
| `-BuiltinType 0x55f61647df10 'int'
|-TypedefDecl 0x55f6164e4da8 <line:27:1, col:22> col:22 __uint32_t 'unsigned int'
| `-BuiltinType 0x55f61647dfb0 'unsigned int'
|-TypedefDecl 0x55f6164e4e18 <line:28:1, col:25> col:25 __int64_t 'long'
| `-BuiltinType 0x55f61647df30 'long'
|-TypedefDecl 0x55f6164e4e88 <line:29:1, col:27> col:27 referenced __uint64_t 'unsigned long'
| `-BuiltinType 0x55f61647dfd0 'unsigned long'
|-TypedefDecl 0x55f6164e4ef8 <line:30:1, col:18> col:18 referenced __quad_t 'long'
| `-BuiltinType 0x55f61647df30 'long'
|-TypedefDecl 0x55f6164e4f68 <line:31:1, col:27> col:27 __u_quad_t 'unsigned long'
| `-BuiltinType 0x55f61647dfd0 'unsigned long'
|-TypedefDecl 0x55f6164e4fd8 <line:32:1, col:27> col:27 __dev_t 'unsigned long'
| `-BuiltinType 0x55f61647dfd0 'unsigned long'
|-TypedefDecl 0x55f6164e5048 <line:33:1, col:22> col:22 __uid_t 'unsigned int'
| `-BuiltinType 0x55f61647dfb0 'unsigned int'
|-TypedefDecl 0x55f6164e50b8 <line:34:1, col:22> col:22 __gid_t 'unsigned int'
| `-BuiltinType 0x55f61647dfb0 'unsigned int'
|-TypedefDecl 0x55f6164e5128 <line:35:1, col:27> col:27 __ino_t 'unsigned long'
| `-BuiltinType 0x55f61647dfd0 'unsigned long'
|-TypedefDecl 0x55f6164e5198 <line:36:1, col:27> col:27 __ino64_t 'unsigned long'
| `-BuiltinType 0x55f61647dfd0 'unsigned long'
|-TypedefDecl 0x55f6164e5208 <line:37:1, col:22> col:22 __mode_t 'unsigned int'
| `-BuiltinType 0x55f61647dfb0 'unsigned int'
|-TypedefDecl 0x55f6164e5278 <line:38:1, col:27> col:27 __nlink_t 'unsigned long'
| `-BuiltinType 0x55f61647dfd0 'unsigned long'
|-TypedefDecl 0x55f6164e52e8 <line:39:1, col:18> col:18 __off_t 'long'
| `-BuiltinType 0x55f61647df30 'long'
|-TypedefDecl 0x55f6164e5378 <line:40:1, col:18> col:18 referenced __off64_t 'long'
| `-BuiltinType 0x55f61647df30 'long'
|-TypedefDecl 0x55f6164e53e8 <line:41:1, col:13> col:13 referenced __pid_t 'int'
| `-BuiltinType 0x55f61647df10 'int'
|-RecordDecl 0x55f6164e5440 <line:42:9, col:32> col:9 struct definition
| `-FieldDecl 0x55f6164e5588 <col:18, col:29> col:22 __val 'int [2]'
|-TypedefDecl 0x55f6164e5640 <col:1, col:34> col:34 __fsid_t 'struct __fsid_t':'__fsid_t'
| `-ElaboratedType 0x55f6164e55e0 'struct __fsid_t' sugar
|   `-RecordType 0x55f6164e54c0 '__fsid_t'
|     `-Record 0x55f6164e5440 ''
|-TypedefDecl 0x55f6164e56c8 <line:43:1, col:18> col:18 referenced __clock_t 'long'
| `-BuiltinType 0x55f61647df30 'long'
|-TypedefDecl 0x55f6164e5738 <line:44:1, col:27> col:27 __rlim_t 'unsigned long'
| `-BuiltinType 0x55f61647dfd0 'unsigned long'
|-TypedefDecl 0x55f6164e57a8 <line:45:1, col:27> col:27 __rlim64_t 'unsigned long'
| `-BuiltinType 0x55f61647dfd0 'unsigned long'
|-TypedefDecl 0x55f6164e5818 <line:46:1, col:22> col:22 __id_t 'unsigned int'
| `-BuiltinType 0x55f61647dfb0 'unsigned int'
|-TypedefDecl 0x55f6164e5888 <line:47:1, col:18> col:18 referenced __time_t 'long'
| `-BuiltinType 0x55f61647df30 'long'
|-TypedefDecl 0x55f6164e58f8 <line:48:1, col:22> col:22 __useconds_t 'unsigned int'
| `-BuiltinType 0x55f61647dfb0 'unsigned int'
|-TypedefDecl 0x55f6164e5968 <line:49:1, col:18> col:18 __suseconds_t 'long'
| `-BuiltinType 0x55f61647df30 'long'
|-TypedefDecl 0x55f6164e59d8 <line:50:1, col:13> col:13 __daddr_t 'int'
| `-BuiltinType 0x55f61647df10 'int'
|-TypedefDecl 0x55f6164e5a48 <line:51:1, col:13> col:13 __key_t 'int'
| `-BuiltinType 0x55f61647df10 'int'
|-TypedefDecl 0x55f6164e5ab8 <line:52:1, col:13> col:13 referenced __clockid_t 'int'
| `-BuiltinType 0x55f61647df10 'int'
|-TypedefDecl 0x55f6164e5b28 <line:53:1, col:16> col:16 referenced __timer_t 'void *'
| `-PointerType 0x55f61647e630 'void *'
|   `-BuiltinType 0x55f61647de70 'void'
|-TypedefDecl 0x55f6164e5b98 <line:54:1, col:18> col:18 __blksize_t 'long'
| `-BuiltinType 0x55f61647df30 'long'
|-TypedefDecl 0x55f6164e5c08 <line:55:1, col:18> col:18 __blkcnt_t 'long'
| `-BuiltinType 0x55f61647df30 'long'
|-TypedefDecl 0x55f6164e5c78 <line:56:1, col:18> col:18 __blkcnt64_t 'long'
| `-BuiltinType 0x55f61647df30 'long'
|-TypedefDecl 0x55f6164e5ce8 <line:57:1, col:27> col:27 __fsblkcnt_t 'unsigned long'
| `-BuiltinType 0x55f61647dfd0 'unsigned long'
|-TypedefDecl 0x55f6164e5d58 <line:58:1, col:27> col:27 __fsblkcnt64_t 'unsigned long'
| `-BuiltinType 0x55f61647dfd0 'unsigned long'
|-TypedefDecl 0x55f6164e5dc8 <line:59:1, col:27> col:27 __fsfilcnt_t 'unsigned long'
| `-BuiltinType 0x55f61647dfd0 'unsigned long'
|-TypedefDecl 0x55f6164e5e38 <line:60:1, col:27> col:27 __fsfilcnt64_t 'unsigned long'
| `-BuiltinType 0x55f61647dfd0 'unsigned long'
|-TypedefDecl 0x55f6164e5ea8 <line:61:1, col:18> col:18 __fsword_t 'long'
| `-BuiltinType 0x55f61647df30 'long'
|-TypedefDecl 0x55f6164e5f18 <line:62:1, col:18> col:18 __ssize_t 'long'
| `-BuiltinType 0x55f61647df30 'long'
|-TypedefDecl 0x55f6164e5f88 <line:63:1, col:18> col:18 referenced __syscall_slong_t 'long'
| `-BuiltinType 0x55f61647df30 'long'
|-TypedefDecl 0x55f6164e5ff8 <line:64:1, col:27> col:27 __syscall_ulong_t 'unsigned long'
| `-BuiltinType 0x55f61647dfd0 'unsigned long'
|-TypedefDecl 0x55f6164e6088 <line:65:1, col:19> col:19 __loff_t '__off64_t':'long'
| `-TypedefType 0x55f6164e6050 '__off64_t' sugar
|   |-Typedef 0x55f6164e5378 '__off64_t'
|   `-BuiltinType 0x55f61647df30 'long'
|-TypedefDecl 0x55f6164e6180 <line:66:1, col:19> col:19 __qaddr_t '__quad_t *'
| `-PointerType 0x55f6164e6140 '__quad_t *'
|   `-TypedefType 0x55f6164e60e0 '__quad_t' sugar
|     |-Typedef 0x55f6164e4ef8 '__quad_t'
|     `-BuiltinType 0x55f61647df30 'long'
|-TypedefDecl 0x55f6164e61f0 <line:67:1, col:15> col:15 __caddr_t 'char *'
| `-PointerType 0x55f61647eab0 'char *'
|   `-BuiltinType 0x55f61647deb0 'char'
|-TypedefDecl 0x55f6164e6260 <line:68:1, col:18> col:18 __intptr_t 'long'
| `-BuiltinType 0x55f61647df30 'long'
|-TypedefDecl 0x55f6164e62d0 <line:69:1, col:22> col:22 __socklen_t 'unsigned int'
| `-BuiltinType 0x55f61647dfb0 'unsigned int'
|-FunctionDecl 0x55f6164e7458 <line:70:1, line:74:1> line:71:1 __bswap_32 'unsigned int (unsigned int)' static inline
| |-ParmVarDecl 0x55f6164e7380 <col:13, col:26> col:26 used __bsx 'unsigned int'
| `-CompoundStmt 0x55f6164e7768 <line:72:1, line:74:1>
|   `-ReturnStmt 0x55f6164e7758 <line:73:3, col:34>
|     `-CallExpr 0x55f6164e7718 <col:10, col:34> 'unsigned int'
|       |-ImplicitCastExpr 0x55f6164e7700 <col:10> 'unsigned int (*)(unsigned int)' <BuiltinFnToFnPtr>
|       | `-DeclRefExpr 0x55f6164e7690 <col:10> '<builtin fn type>' Function 0x55f6164e7500 '__builtin_bswap32' 'unsigned int (unsigned int)'
|       `-ImplicitCastExpr 0x55f6164e7740 <col:29> 'unsigned int' <LValueToRValue>
|         `-DeclRefExpr 0x55f6164e76b0 <col:29> 'unsigned int' lvalue ParmVar 0x55f6164e7380 '__bsx' 'unsigned int'
|-FunctionDecl 0x55f6164e7500 <col:10> col:10 implicit used __builtin_bswap32 'unsigned int (unsigned int)' extern
| |-ParmVarDecl 0x55f6164e75a0 <<invalid sloc>> <invalid sloc> 'unsigned int'
| |-NoThrowAttr 0x55f6164e7610 <col:10> Implicit
| `-ConstAttr 0x55f6164e7668 <col:10> Implicit
|-FunctionDecl 0x55f6164e78c0 <line:75:1, line:79:1> line:76:1 __bswap_64 '__uint64_t (__uint64_t)' static inline
| |-ParmVarDecl 0x55f6164e77b8 <col:13, col:24> col:24 used __bsx '__uint64_t':'unsigned long'
| `-CompoundStmt 0x55f6164e7bd8 <line:77:1, line:79:1>
|   `-ReturnStmt 0x55f6164e7bc8 <line:78:3, col:34>
|     `-CallExpr 0x55f6164e7b88 <col:10, col:34> 'unsigned long'
|       |-ImplicitCastExpr 0x55f6164e7b70 <col:10> 'unsigned long (*)(unsigned long)' <BuiltinFnToFnPtr>
|       | `-DeclRefExpr 0x55f6164e7af8 <col:10> '<builtin fn type>' Function 0x55f6164e7968 '__builtin_bswap64' 'unsigned long (unsigned long)'
|       `-ImplicitCastExpr 0x55f6164e7bb0 <col:29> '__uint64_t':'unsigned long' <LValueToRValue>
|         `-DeclRefExpr 0x55f6164e7b18 <col:29> '__uint64_t':'unsigned long' lvalue ParmVar 0x55f6164e77b8 '__bsx' '__uint64_t':'unsigned long'
|-FunctionDecl 0x55f6164e7968 <col:10> col:10 implicit used __builtin_bswap64 'unsigned long (unsigned long)' extern
| |-ParmVarDecl 0x55f6164e7a08 <<invalid sloc>> <invalid sloc> 'unsigned long'
| |-NoThrowAttr 0x55f6164e7a78 <col:10> Implicit
| `-ConstAttr 0x55f6164e7ad0 <col:10> Implicit
|-TypedefDecl 0x55f6164e7c08 <line:80:1, col:27> col:27 referenced size_t 'unsigned long'
| `-BuiltinType 0x55f61647dfd0 'unsigned long'
|-TypedefDecl 0x55f6164e7c98 <line:82:1, col:18> col:18 referenced time_t '__time_t':'long'
| `-TypedefType 0x55f6164e7c60 '__time_t' sugar
|   |-Typedef 0x55f6164e5888 '__time_t'
|   `-BuiltinType 0x55f61647df30 'long'
|-RecordDecl 0x55f6164e7cf0 <line:85:1, line:89:3> line:85:8 struct timespec definition
| |-FieldDecl 0x55f6164e7da8 <line:87:5, col:14> col:14 tv_sec '__time_t':'long'
| `-FieldDecl 0x55f6164e7e38 <line:88:5, col:23> col:23 tv_nsec '__syscall_slong_t':'long'
|-TypedefDecl 0x55f6164e7ec8 <line:90:1, col:17> col:17 referenced pid_t '__pid_t':'int'
| `-TypedefType 0x55f6164e7e90 '__pid_t' sugar
|   |-Typedef 0x55f6164e53e8 '__pid_t'
|   `-BuiltinType 0x55f61647df10 'int'
|-RecordDecl 0x55f6164e7f20 <line:91:1, line:94:3> line:91:8 struct sched_param definition
| `-FieldDecl 0x55f6164e7fe0 <line:93:5, col:9> col:9 __sched_priority 'int'
|-RecordDecl 0x55f6164e8030 <line:97:1, line:100:3> line:97:8 struct __sched_param definition
| `-FieldDecl 0x55f6164e80f0 <line:99:5, col:9> col:9 __sched_priority 'int'
|-TypedefDecl 0x55f6164e8158 <line:101:1, col:27> col:27 referenced __cpu_mask 'unsigned long'
| `-BuiltinType 0x55f61647dfd0 'unsigned long'
|-RecordDecl 0x55f6164e81b0 <line:102:9, line:105:1> line:102:9 struct definition
| `-FieldDecl 0x55f6164e9480 <line:104:3, col:53> col:14 __bits '__cpu_mask [64]'
|-TypedefDecl 0x55f6164e9530 <line:102:1, line:105:3> col:3 referenced cpu_set_t 'struct cpu_set_t':'cpu_set_t'
| `-ElaboratedType 0x55f6164e94d0 'struct cpu_set_t' sugar
|   `-RecordType 0x55f6164e8230 'cpu_set_t'
|     `-Record 0x55f6164e81b0 ''
|-FunctionDecl 0x55f6164e9808 <line:107:1, line:108:42> line:107:12 __sched_cpucount 'int (size_t, const cpu_set_t *)' extern
| |-ParmVarDecl 0x55f6164e95d8 <col:30, col:37> col:37 __setsize 'size_t':'unsigned long'
| |-ParmVarDecl 0x55f6164e96e0 <col:48, col:65> col:65 __setp 'const cpu_set_t *'
| `-NoThrowAttr 0x55f6164e98b8 <line:108:19>
|-FunctionDecl 0x55f6164e9a90 <line:109:1, col:92> col:19 __sched_cpualloc 'cpu_set_t *(size_t)' extern
| |-ParmVarDecl 0x55f6164e9920 <col:37, col:44> col:44 __count 'size_t':'unsigned long'
| `-NoThrowAttr 0x55f6164e9b38 <col:69>
|-FunctionDecl 0x55f6164e9cb0 <line:110:1, col:87> col:13 __sched_cpufree 'void (cpu_set_t *)' extern
| |-ParmVarDecl 0x55f6164e9ba0 <col:30, col:41> col:41 __set 'cpu_set_t *'
| `-NoThrowAttr 0x55f6164e9d58 <col:64>
|-FunctionDecl 0x55f6164ea018 <line:113:1, line:114:45> line:113:12 sched_setparam 'int (__pid_t, const struct sched_param *)' extern
| |-ParmVarDecl 0x55f6164e9dc0 <col:28, col:36> col:36 __pid '__pid_t':'int'
| |-ParmVarDecl 0x55f6164e9ef8 <col:43, col:69> col:69 __param 'const struct sched_param *'
| `-NoThrowAttr 0x55f6164ea0c8 <line:114:22>
|-FunctionDecl 0x55f6164ea3b0 <line:115:1, col:111> col:12 sched_getparam 'int (__pid_t, struct sched_param *)' extern
| |-ParmVarDecl 0x55f6164ea130 <col:28, col:36> col:36 __pid '__pid_t':'int'
| |-ParmVarDecl 0x55f6164ea228 <col:43, col:63> col:63 __param 'struct sched_param *'
| `-NoThrowAttr 0x55f6164ea460 <col:88>
|-FunctionDecl 0x55f6164ea718 <line:116:1, line:117:85> line:116:12 sched_setscheduler 'int (__pid_t, int, const struct sched_param *)' extern
| |-ParmVarDecl 0x55f6164ea4c8 <col:32, col:40> col:40 __pid '__pid_t':'int'
| |-ParmVarDecl 0x55f6164ea548 <col:47, col:51> col:51 __policy 'int'
| |-ParmVarDecl 0x55f6164ea5d8 <line:117:11, col:37> col:37 __param 'const struct sched_param *'
| `-NoThrowAttr 0x55f6164ea7d0 <col:62>
|-FunctionDecl 0x55f6164ea948 <line:118:1, col:86> col:12 sched_getscheduler 'int (__pid_t)' extern
| |-ParmVarDecl 0x55f6164ea838 <col:32, col:40> col:40 __pid '__pid_t':'int'
| `-NoThrowAttr 0x55f6164ea9f0 <col:63>
|-FunctionDecl 0x55f6164eab18 <line:119:1, col:70> col:12 sched_yield 'int (void)' extern
| `-NoThrowAttr 0x55f6164eabb8 <col:47>
|-FunctionDecl 0x55f6164eacc0 <line:120:1, col:92> col:12 sched_get_priority_max 'int (int)' extern
| |-ParmVarDecl 0x55f6164eac28 <col:36, col:40> col:40 __algorithm 'int'
| `-NoThrowAttr 0x55f6164ead68 <col:69>
|-FunctionDecl 0x55f6164eae70 <line:121:1, col:92> col:12 sched_get_priority_min 'int (int)' extern
| |-ParmVarDecl 0x55f6164eadd8 <col:36, col:40> col:40 __algorithm 'int'
| `-NoThrowAttr 0x55f6164eaf18 <col:69>
|-FunctionDecl 0x55f6164eb1d8 <line:122:1, col:111> col:12 sched_rr_get_interval 'int (__pid_t, struct timespec *)' extern
| |-ParmVarDecl 0x55f6164eaf80 <col:35, col:43> col:43 __pid '__pid_t':'int'
| |-ParmVarDecl 0x55f6164eb0b8 <col:50, col:67> col:67 __t 'struct timespec *'
| `-NoThrowAttr 0x55f6164eb288 <col:88>
|-TypedefDecl 0x55f6164eb318 <line:126:1, col:19> col:19 referenced clock_t '__clock_t':'long'
| `-TypedefType 0x55f6164eb2e0 '__clock_t' sugar
|   |-Typedef 0x55f6164e56c8 '__clock_t'
|   `-BuiltinType 0x55f61647df30 'long'
|-TypedefDecl 0x55f6164eb3c0 <line:129:1, col:21> col:21 referenced clockid_t '__clockid_t':'int'
| `-TypedefType 0x55f6164eb370 '__clockid_t' sugar
|   |-Typedef 0x55f6164e5ab8 '__clockid_t'
|   `-BuiltinType 0x55f61647df10 'int'
|-TypedefDecl 0x55f6164eb458 <line:130:1, col:19> col:19 referenced timer_t '__timer_t':'void *'
| `-TypedefType 0x55f6164eb420 '__timer_t' sugar
|   |-Typedef 0x55f6164e5b28 '__timer_t'
|   `-PointerType 0x55f61647e630 'void *'
|     `-BuiltinType 0x55f61647de70 'void'
|-RecordDecl 0x55f6164eb4b0 <line:132:1, line:145:1> line:132:8 struct tm definition
| |-FieldDecl 0x55f6164eb570 <line:134:3, col:7> col:7 tm_sec 'int'
| |-FieldDecl 0x55f6164eb5d8 <line:135:3, col:7> col:7 tm_min 'int'
| |-FieldDecl 0x55f6164eb640 <line:136:3, col:7> col:7 tm_hour 'int'
| |-FieldDecl 0x55f6164eb6a8 <line:137:3, col:7> col:7 tm_mday 'int'
| |-FieldDecl 0x55f6164eb710 <line:138:3, col:7> col:7 tm_mon 'int'
| |-FieldDecl 0x55f6164eb778 <line:139:3, col:7> col:7 tm_year 'int'
| |-FieldDecl 0x55f6164eb7e0 <line:140:3, col:7> col:7 tm_wday 'int'
| |-FieldDecl 0x55f6164eb848 <line:141:3, col:7> col:7 tm_yday 'int'
| |-FieldDecl 0x55f6164eb8b0 <line:142:3, col:7> col:7 tm_isdst 'int'
| |-FieldDecl 0x55f6164eb918 <line:143:3, col:12> col:12 tm_gmtoff 'long'
| `-FieldDecl 0x55f6164eb980 <line:144:3, col:15> col:15 tm_zone 'const char *'
|-RecordDecl 0x55f6164eb9d0 <line:148:1, line:152:3> line:148:8 struct itimerspec definition
| |-FieldDecl 0x55f6164eba98 <line:150:5, col:21> col:21 it_interval 'struct timespec':'struct timespec'
| `-FieldDecl 0x55f6164ebb08 <line:151:5, col:21> col:21 it_value 'struct timespec':'struct timespec'
|-RecordDecl 0x55f6164ebbb0 <line:153:1, col:8> col:8 struct sigevent
|-FunctionDecl 0x55f6164ebd80 <line:155:1, col:68> col:16 clock 'clock_t (void)' extern
| `-NoThrowAttr 0x55f6164ebe20 <col:45>
|-FunctionDecl 0x55f6164ec000 <line:156:1, col:77> col:15 time 'time_t (time_t *)' extern
| |-ParmVarDecl 0x55f6164ebef0 <col:21, col:29> col:29 __timer 'time_t *'
| `-NoThrowAttr 0x55f6164ec0a8 <col:54>
|-FunctionDecl 0x55f6164ec2a8 <line:157:1, line:158:73> line:157:15 difftime 'double (time_t, time_t)' extern
| |-ParmVarDecl 0x55f6164ec110 <col:25, col:32> col:32 __time1 'time_t':'long'
| |-ParmVarDecl 0x55f6164ec188 <col:41, col:48> col:48 __time0 'time_t':'long'
| |-NoThrowAttr 0x55f6164ec358 <line:158:22>
| `-ConstAttr 0x55f6164ecff0 <col:63>
|-FunctionDecl 0x55f6164ed1f0 <line:159:1, col:79> col:15 mktime 'time_t (struct tm *)' extern
| |-ParmVarDecl 0x55f6164ed0e8 <col:23, col:34> col:34 __tp 'struct tm *'
| `-NoThrowAttr 0x55f6164ed298 <col:56>
|-FunctionDecl 0x55f6164ed640 <line:160:1, line:162:77> line:160:15 strftime 'size_t (char *restrict, size_t, const char *restrict, const struct tm *restrict)' extern
| |-ParmVarDecl 0x55f6164ed308 <col:25, col:42> col:42 __s 'char *restrict'
| |-ParmVarDecl 0x55f6164ed380 <col:47, col:54> col:54 __maxsize 'size_t':'unsigned long'
| |-ParmVarDecl 0x55f6164ed400 <line:161:4, col:27> col:27 __format 'const char *restrict'
| |-ParmVarDecl 0x55f6164ed4f8 <line:162:4, col:32> col:32 __tp 'const struct tm *restrict'
| `-NoThrowAttr 0x55f6164ed700 <col:54>
|-RecordDecl 0x55f6164ed758 <line:164:9, line:171:1> line:164:16 struct __locale_struct definition
| |-RecordDecl 0x55f6164ed808 parent 0x55f61647de18 <line:166:3, col:10> col:10 struct __locale_data
| |-FieldDecl 0x55f6164eda68 <col:3, col:37> col:25 __locales 'struct __locale_data *[13]'
| |-FieldDecl 0x55f6164edb08 <line:167:3, col:29> col:29 __ctype_b 'const unsigned short *'
| |-FieldDecl 0x55f6164edb70 <line:168:3, col:14> col:14 __ctype_tolower 'const int *'
| |-FieldDecl 0x55f6164edbd8 <line:169:3, col:14> col:14 __ctype_toupper 'const int *'
| `-FieldDecl 0x55f6164edcc8 <line:170:3, col:25> col:15 __names 'const char *[13]'
|-TypedefDecl 0x55f6164edde8 <line:164:1, line:171:4> col:4 referenced __locale_t 'struct __locale_struct *'
| `-PointerType 0x55f6164edd90 'struct __locale_struct *'
|   `-ElaboratedType 0x55f6164edd20 'struct __locale_struct' sugar
|     `-RecordType 0x55f6164ed7e0 'struct __locale_struct'
|       `-Record 0x55f6164ed758 '__locale_struct'
|-TypedefDecl 0x55f6164ede98 <line:172:1, col:20> col:20 locale_t '__locale_t':'struct __locale_struct *'
| `-TypedefType 0x55f6164ede60 '__locale_t' sugar
|   |-Typedef 0x55f6164edde8 '__locale_t'
|   `-PointerType 0x55f6164edd90 'struct __locale_struct *'
|     `-ElaboratedType 0x55f6164edd20 'struct __locale_struct' sugar
|       `-RecordType 0x55f6164ed7e0 'struct __locale_struct'
|         `-Record 0x55f6164ed758 '__locale_struct'
|-FunctionDecl 0x55f6164ef2a0 <line:173:1, line:176:63> line:173:15 strftime_l 'size_t (char *restrict, size_t, const char *restrict, const struct tm *restrict, __locale_t)' extern
| |-ParmVarDecl 0x55f6164edf08 <col:27, col:44> col:44 __s 'char *restrict'
| |-ParmVarDecl 0x55f6164edf80 <col:49, col:56> col:56 __maxsize 'size_t':'unsigned long'
| |-ParmVarDecl 0x55f6164ef028 <line:174:6, col:29> col:29 __format 'const char *restrict'
| |-ParmVarDecl 0x55f6164ef0b8 <line:175:6, col:34> col:34 __tp 'const struct tm *restrict'
| |-ParmVarDecl 0x55f6164ef130 <line:176:6, col:17> col:17 __loc '__locale_t':'struct __locale_struct *'
| `-NoThrowAttr 0x55f6164ef368 <col:40>
|-FunctionDecl 0x55f6164ef558 <line:178:1, col:89> col:19 gmtime 'struct tm *(const time_t *)' extern
| |-ParmVarDecl 0x55f6164ef430 <col:27, col:41> col:41 __timer 'const time_t *'
| `-NoThrowAttr 0x55f6164ef600 <col:66>
|-FunctionDecl 0x55f6164ef710 <line:179:1, col:92> col:19 localtime 'struct tm *(const time_t *)' extern
| |-ParmVarDecl 0x55f6164ef668 <col:30, col:44> col:44 __timer 'const time_t *'
| `-NoThrowAttr 0x55f6164ef7b8 <col:69>
|-FunctionDecl 0x55f6164ef9e8 <line:181:1, line:182:75> line:181:19 gmtime_r 'struct tm *(const time_t *restrict, struct tm *restrict)' extern
| |-ParmVarDecl 0x55f6164ef820 <col:29, col:54> col:54 __timer 'const time_t *restrict'
| |-ParmVarDecl 0x55f6164ef8b0 <line:182:8, col:30> col:30 __tp 'struct tm *restrict'
| `-NoThrowAttr 0x55f6164efa98 <col:52>
|-FunctionDecl 0x55f6164efc40 <line:183:1, line:184:78> line:183:19 localtime_r 'struct tm *(const time_t *restrict, struct tm *restrict)' extern
| |-ParmVarDecl 0x55f6164efb00 <col:32, col:57> col:57 __timer 'const time_t *restrict'
| |-ParmVarDecl 0x55f6164efb90 <line:184:11, col:33> col:33 __tp 'struct tm *restrict'
| `-NoThrowAttr 0x55f6164efcf0 <col:55>
|-FunctionDecl 0x55f6164efe88 <line:186:1, col:85> col:14 asctime 'char *(const struct tm *)' extern
| |-ParmVarDecl 0x55f6164efd70 <col:23, col:40> col:40 __tp 'const struct tm *'
| `-NoThrowAttr 0x55f6164eff30 <col:62>
|-FunctionDecl 0x55f6164f0168 <line:187:1, col:83> col:14 ctime 'char *(const time_t *)' extern
| |-ParmVarDecl 0x55f6164eff98 <col:21, col:35> col:35 __timer 'const time_t *'
| `-NoThrowAttr 0x55f6164f0210 <col:60>
|-FunctionDecl 0x55f6164f0438 <line:189:1, line:190:67> line:189:14 asctime_r 'char *(const struct tm *restrict, char *restrict)' extern
| |-ParmVarDecl 0x55f6164f0290 <col:25, col:53> col:53 __tp 'const struct tm *restrict'
| |-ParmVarDecl 0x55f6164f0310 <line:190:4, col:21> col:21 __buf 'char *restrict'
| `-NoThrowAttr 0x55f6164f04e8 <col:44>
|-FunctionDecl 0x55f6164f06f8 <line:191:1, line:192:72> line:191:14 ctime_r 'char *(const time_t *restrict, char *restrict)' extern
| |-ParmVarDecl 0x55f6164f0550 <col:23, col:48> col:48 __timer 'const time_t *restrict'
| |-ParmVarDecl 0x55f6164f05d0 <line:192:9, col:26> col:26 __buf 'char *restrict'
| `-NoThrowAttr 0x55f6164f07a8 <col:49>
|-VarDecl 0x55f6164f08a8 <line:193:1, col:24> col:14 __tzname 'char *[2]' extern
|-VarDecl 0x55f6164f0928 <line:194:1, col:12> col:12 __daylight 'int' extern
|-VarDecl 0x55f6164f09a8 <line:195:1, col:17> col:17 __timezone 'long' extern
|-VarDecl 0x55f6164f0a70 <line:196:1, col:22> col:14 tzname 'char *[2]' extern
|-FunctionDecl 0x55f6164f0ba0 <line:197:1, col:65> col:13 tzset 'void (void)' extern
| `-NoThrowAttr 0x55f6164f0c40 <col:42>
|-VarDecl 0x55f6164f0cb0 <line:198:1, col:12> col:12 daylight 'int' extern
|-VarDecl 0x55f6164f0d30 <line:199:1, col:17> col:17 timezone 'long' extern
|-FunctionDecl 0x55f6164f0eb8 <line:200:1, col:80> col:12 stime 'int (const time_t *)' extern
| |-ParmVarDecl 0x55f6164f0da8 <col:19, col:33> col:33 __when 'const time_t *'
| `-NoThrowAttr 0x55f6164f0f60 <col:57>
|-FunctionDecl 0x55f6164f10d0 <line:201:1, col:79> col:15 timegm 'time_t (struct tm *)' extern
| |-ParmVarDecl 0x55f6164f0fe0 <col:23, col:34> col:34 __tp 'struct tm *'
| `-NoThrowAttr 0x55f6164f1178 <col:56>
|-FunctionDecl 0x55f6164f1288 <line:202:1, col:82> col:15 timelocal 'time_t (struct tm *)' extern
| |-ParmVarDecl 0x55f6164f11f8 <col:26, col:37> col:37 __tp 'struct tm *'
| `-NoThrowAttr 0x55f6164f1330 <col:59>
|-FunctionDecl 0x55f6164f1438 <line:203:1, col:99> col:12 dysize 'int (int)' extern
| |-ParmVarDecl 0x55f6164f13a0 <col:20, col:24> col:24 __year 'int'
| |-NoThrowAttr 0x55f6164f14e0 <col:48>
| `-ConstAttr 0x55f6164f1538 <col:89>
|-FunctionDecl 0x55f6164f1798 <line:204:1, line:205:37> line:204:12 nanosleep 'int (const struct timespec *, struct timespec *)' extern
| |-ParmVarDecl 0x55f6164f15e8 <col:23, col:46> col:46 __requested_time 'const struct timespec *'
| `-ParmVarDecl 0x55f6164f1678 <line:205:9, col:26> col:26 __remaining 'struct timespec *'
|-FunctionDecl 0x55f6164f19f8 <line:206:1, col:111> col:12 clock_getres 'int (clockid_t, struct timespec *)' extern
| |-ParmVarDecl 0x55f6164f1888 <col:26, col:36> col:36 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x55f6164f1918 <col:48, col:65> col:65 __res 'struct timespec *'
| `-NoThrowAttr 0x55f6164f1aa8 <col:88>
|-FunctionDecl 0x55f6164f1c40 <line:207:1, col:111> col:12 clock_gettime 'int (clockid_t, struct timespec *)' extern
| |-ParmVarDecl 0x55f6164f1b10 <col:27, col:37> col:37 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x55f6164f1ba0 <col:49, col:66> col:66 __tp 'struct timespec *'
| `-NoThrowAttr 0x55f6164f1cf0 <col:88>
|-FunctionDecl 0x55f6164f1f08 <line:208:1, line:209:45> line:208:12 clock_settime 'int (clockid_t, const struct timespec *)' extern
| |-ParmVarDecl 0x55f6164f1d58 <col:27, col:37> col:37 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x55f6164f1de8 <col:49, col:72> col:72 __tp 'const struct timespec *'
| `-NoThrowAttr 0x55f6164f1fb8 <line:209:22>
|-FunctionDecl 0x55f6164f2358 <line:210:1, line:212:30> line:210:12 clock_nanosleep 'int (clockid_t, int, const struct timespec *, struct timespec *)' extern
| |-ParmVarDecl 0x55f6164f2020 <col:29, col:39> col:39 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x55f6164f20e0 <col:51, col:55> col:55 __flags 'int'
| |-ParmVarDecl 0x55f6164f2170 <line:211:8, col:31> col:31 __req 'const struct timespec *'
| `-ParmVarDecl 0x55f6164f2200 <line:212:8, col:25> col:25 __rem 'struct timespec *'
|-FunctionDecl 0x55f6164f2658 <line:213:1, col:108> col:12 clock_getcpuclockid 'int (pid_t, clockid_t *)' extern
| |-ParmVarDecl 0x55f6164f2458 <col:33, col:39> col:39 __pid 'pid_t':'int'
| |-ParmVarDecl 0x55f6164f2530 <col:46, col:57> col:57 __clock_id 'clockid_t *'
| `-NoThrowAttr 0x55f6164f2708 <col:85>
|-FunctionDecl 0x55f6164f2af8 <line:214:1, line:216:75> line:214:12 timer_create 'int (clockid_t, struct sigevent *restrict, timer_t *restrict)' extern
| |-ParmVarDecl 0x55f6164f2770 <col:26, col:36> col:36 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x55f6164f28a8 <line:215:5, col:33> col:33 __evp 'struct sigevent *restrict'
| |-ParmVarDecl 0x55f6164f29b0 <line:216:5, col:25> col:25 __timerid 'timer_t *restrict'
| `-NoThrowAttr 0x55f6164f2bb0 <col:52>
|-FunctionDecl 0x55f6164f2d28 <line:217:1, col:84> col:12 timer_delete 'int (timer_t)' extern
| |-ParmVarDecl 0x55f6164f2c18 <col:26, col:34> col:34 __timerid 'timer_t':'void *'
| `-NoThrowAttr 0x55f6164f2dd0 <col:61>
|-FunctionDecl 0x55f6164f3248 <line:218:1, line:220:85> line:218:12 timer_settime 'int (timer_t, int, const struct itimerspec *restrict, struct itimerspec *restrict)' extern
| |-ParmVarDecl 0x55f6164f2e38 <col:27, col:35> col:35 __timerid 'timer_t':'void *'
| |-ParmVarDecl 0x55f6164f2eb8 <col:46, col:50> col:50 __flags 'int'
| |-ParmVarDecl 0x55f6164f2fe8 <line:219:6, col:42> col:42 __value 'const struct itimerspec *restrict'
| |-ParmVarDecl 0x55f6164f30f0 <line:220:6, col:36> col:36 __ovalue 'struct itimerspec *restrict'
| `-NoThrowAttr 0x55f6164f3308 <col:62>
|-FunctionDecl 0x55f6164f3528 <line:221:1, line:222:45> line:221:12 timer_gettime 'int (timer_t, struct itimerspec *)' extern
| |-ParmVarDecl 0x55f6164f3370 <col:27, col:35> col:35 __timerid 'timer_t':'void *'
| |-ParmVarDecl 0x55f6164f3400 <col:46, col:65> col:65 __value 'struct itimerspec *'
| `-NoThrowAttr 0x55f6164f35d8 <line:222:22>
|-FunctionDecl 0x55f6164f36d8 <line:223:1, col:88> col:12 timer_getoverrun 'int (timer_t)' extern
| |-ParmVarDecl 0x55f6164f3640 <col:30, col:38> col:38 __timerid 'timer_t':'void *'
| `-NoThrowAttr 0x55f6164f3780 <col:65>
|-TypedefDecl 0x55f6164f37f0 <line:225:1, col:27> col:27 referenced pthread_t 'unsigned long'
| `-BuiltinType 0x55f61647dfd0 'unsigned long'
|-RecordDecl 0x55f6164f3848 <line:226:1, line:230:1> line:226:7 union pthread_attr_t definition
| |-FieldDecl 0x55f6164f3990 <line:228:3, col:17> col:8 __size 'char [56]'
| `-FieldDecl 0x55f6164f39f8 <line:229:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x55f6164f3aa8 <line:231:1, col:30> col:30 referenced pthread_attr_t 'union pthread_attr_t':'union pthread_attr_t'
| `-ElaboratedType 0x55f6164f3a50 'union pthread_attr_t' sugar
|   `-RecordType 0x55f6164f38d0 'union pthread_attr_t'
|     `-Record 0x55f6164f3848 'pthread_attr_t'
|-RecordDecl 0x55f6164f3b00 <line:232:9, line:236:1> line:232:16 struct __pthread_internal_list definition
| |-FieldDecl 0x55f6164f3c78 <line:234:3, col:35> col:35 __prev 'struct __pthread_internal_list *'
| `-FieldDecl 0x55f6164f3cf0 <line:235:3, col:35> col:35 __next 'struct __pthread_internal_list *'
|-TypedefDecl 0x55f6164f3da0 <line:232:1, line:236:3> col:3 referenced __pthread_list_t 'struct __pthread_internal_list':'struct __pthread_internal_list'
| `-ElaboratedType 0x55f6164f3d40 'struct __pthread_internal_list' sugar
|   `-RecordType 0x55f6164f3b80 'struct __pthread_internal_list'
|     `-Record 0x55f6164f3b00 '__pthread_internal_list'
|-RecordDecl 0x55f6164f3e10 <line:237:9, line:251:1> line:237:9 union definition
| |-RecordDecl 0x55f6164f3eb8 parent 0x55f61647de18 <line:239:3, line:248:3> line:239:10 struct __pthread_mutex_s definition
| | |-FieldDecl 0x55f6164f3f90 <line:241:5, col:9> col:9 __lock 'int'
| | |-FieldDecl 0x55f6164f3ff8 <line:242:5, col:18> col:18 __count 'unsigned int'
| | |-FieldDecl 0x55f6164f4060 <line:243:5, col:9> col:9 __owner 'int'
| | |-FieldDecl 0x55f6164f8110 <line:244:5, col:18> col:18 __nusers 'unsigned int'
| | |-FieldDecl 0x55f6164f8178 <line:245:5, col:9> col:9 __kind 'int'
| | |-FieldDecl 0x55f6164f81e0 <line:246:5, col:9> col:9 __spins 'int'
| | `-FieldDecl 0x55f6164f8268 <line:247:5, col:22> col:22 __list '__pthread_list_t':'struct __pthread_internal_list'
| |-FieldDecl 0x55f6164f8320 <line:239:3, line:248:5> col:5 __data 'struct __pthread_mutex_s':'struct __pthread_mutex_s'
| |-FieldDecl 0x55f6164f8410 <line:249:3, col:17> col:8 __size 'char [40]'
| `-FieldDecl 0x55f6164f8478 <line:250:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x55f6164f8600 <line:237:1, line:251:3> col:3 referenced pthread_mutex_t 'union pthread_mutex_t':'pthread_mutex_t'
| `-ElaboratedType 0x55f6164f85a0 'union pthread_mutex_t' sugar
|   `-RecordType 0x55f6164f3e90 'pthread_mutex_t'
|     `-Record 0x55f6164f3e10 ''
|-RecordDecl 0x55f6164f8670 <line:252:9, line:256:1> line:252:9 union definition
| |-FieldDecl 0x55f6164f87b0 <line:254:3, col:16> col:8 __size 'char [4]'
| `-FieldDecl 0x55f6164f8818 <line:255:3, col:7> col:7 __align 'int'
|-TypedefDecl 0x55f6164f88d0 <line:252:1, line:256:3> col:3 referenced pthread_mutexattr_t 'union pthread_mutexattr_t':'pthread_mutexattr_t'
| `-ElaboratedType 0x55f6164f8870 'union pthread_mutexattr_t' sugar
|   `-RecordType 0x55f6164f86f0 'pthread_mutexattr_t'
|     `-Record 0x55f6164f8670 ''
|-RecordDecl 0x55f6164f8940 <line:257:9, line:272:1> line:257:9 union definition
| |-RecordDecl 0x55f6164f89e8 <line:259:3, line:269:3> line:259:3 struct definition
| | |-FieldDecl 0x55f6164f8ab0 <line:261:5, col:9> col:9 __lock 'int'
| | |-FieldDecl 0x55f6164f8b18 <line:262:5, col:18> col:18 __futex 'unsigned int'
| | |-FieldDecl 0x55f6164f8b80 <line:263:19, col:42> col:42 __total_seq 'unsigned long long'
| | |-FieldDecl 0x55f6164f8be8 <line:264:19, col:42> col:42 __wakeup_seq 'unsigned long long'
| | |-FieldDecl 0x55f6164f8c50 <line:265:19, col:42> col:42 __woken_seq 'unsigned long long'
| | |-FieldDecl 0x55f6164f8cb8 <line:266:5, col:11> col:11 __mutex 'void *'
| | |-FieldDecl 0x55f6164f8d20 <line:267:5, col:18> col:18 __nwaiters 'unsigned int'
| | `-FieldDecl 0x55f6164f8d88 <line:268:5, col:18> col:18 __broadcast_seq 'unsigned int'
| |-FieldDecl 0x55f6164f8e40 <line:259:3, line:269:5> col:5 __data 'struct (anonymous struct at ./split_0/rfi005_tso.oepc_false-unreach-call.i:259:3)':'struct pthread_cond_t::(anonymous at ./split_0/rfi005_tso.oepc_false-unreach-call.i:259:3)'
| |-FieldDecl 0x55f6164f8f30 <line:270:3, col:17> col:8 __size 'char [48]'
| `-FieldDecl 0x55f6164f8f98 <line:271:17, col:31> col:31 __align 'long long'
|-TypedefDecl 0x55f6164fa130 <line:257:1, line:272:3> col:3 referenced pthread_cond_t 'union pthread_cond_t':'pthread_cond_t'
| `-ElaboratedType 0x55f6164f9070 'union pthread_cond_t' sugar
|   `-RecordType 0x55f6164f89c0 'pthread_cond_t'
|     `-Record 0x55f6164f8940 ''
|-RecordDecl 0x55f6164fa1a0 <line:273:9, line:277:1> line:273:9 union definition
| |-FieldDecl 0x55f6164fa2a0 <line:275:3, col:16> col:8 __size 'char [4]'
| `-FieldDecl 0x55f6164fa308 <line:276:3, col:7> col:7 __align 'int'
|-TypedefDecl 0x55f6164fa3c0 <line:273:1, line:277:3> col:3 referenced pthread_condattr_t 'union pthread_condattr_t':'pthread_condattr_t'
| `-ElaboratedType 0x55f6164fa360 'union pthread_condattr_t' sugar
|   `-RecordType 0x55f6164fa220 'pthread_condattr_t'
|     `-Record 0x55f6164fa1a0 ''
|-TypedefDecl 0x55f6164fa448 <line:278:1, col:22> col:22 referenced pthread_key_t 'unsigned int'
| `-BuiltinType 0x55f61647dfb0 'unsigned int'
|-TypedefDecl 0x55f6164fa4b8 <line:279:1, col:13> col:13 referenced pthread_once_t 'int'
| `-BuiltinType 0x55f61647df10 'int'
|-RecordDecl 0x55f6164fa510 <line:280:9, line:298:1> line:280:9 union definition
| |-RecordDecl 0x55f6164fa5b8 <line:282:3, line:295:3> line:282:3 struct definition
| | |-FieldDecl 0x55f6164fa680 <line:284:5, col:9> col:9 __lock 'int'
| | |-FieldDecl 0x55f6164fa6e8 <line:285:5, col:18> col:18 __nr_readers 'unsigned int'
| | |-FieldDecl 0x55f6164fa750 <line:286:5, col:18> col:18 __readers_wakeup 'unsigned int'
| | |-FieldDecl 0x55f6164fa7b8 <line:287:5, col:18> col:18 __writer_wakeup 'unsigned int'
| | |-FieldDecl 0x55f6164fa820 <line:288:5, col:18> col:18 __nr_readers_queued 'unsigned int'
| | |-FieldDecl 0x55f6164fa888 <line:289:5, col:18> col:18 __nr_writers_queued 'unsigned int'
| | |-FieldDecl 0x55f6164fa8f0 <line:290:5, col:9> col:9 __writer 'int'
| | |-FieldDecl 0x55f6164fa958 <line:291:5, col:9> col:9 __shared 'int'
| | |-FieldDecl 0x55f6164fa9c0 <line:292:5, col:23> col:23 __pad1 'unsigned long'
| | |-FieldDecl 0x55f6164faa28 <line:293:5, col:23> col:23 __pad2 'unsigned long'
| | `-FieldDecl 0x55f6164faa90 <line:294:5, col:18> col:18 __flags 'unsigned int'
| |-FieldDecl 0x55f6164fab40 <line:282:3, line:295:5> col:5 __data 'struct (anonymous struct at ./split_0/rfi005_tso.oepc_false-unreach-call.i:282:3)':'struct pthread_rwlock_t::(anonymous at ./split_0/rfi005_tso.oepc_false-unreach-call.i:282:3)'
| |-FieldDecl 0x55f6164fabe8 <line:296:3, col:17> col:8 __size 'char [56]'
| `-FieldDecl 0x55f6164fac50 <line:297:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x55f6164fada0 <line:280:1, line:298:3> col:3 referenced pthread_rwlock_t 'union pthread_rwlock_t':'pthread_rwlock_t'
| `-ElaboratedType 0x55f6164fad40 'union pthread_rwlock_t' sugar
|   `-RecordType 0x55f6164fa590 'pthread_rwlock_t'
|     `-Record 0x55f6164fa510 ''
|-RecordDecl 0x55f6164fae10 <line:299:9, line:303:1> line:299:9 union definition
| |-FieldDecl 0x55f6164faf50 <line:301:3, col:16> col:8 __size 'char [8]'
| `-FieldDecl 0x55f6164fafb8 <line:302:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x55f6164fb070 <line:299:1, line:303:3> col:3 referenced pthread_rwlockattr_t 'union pthread_rwlockattr_t':'pthread_rwlockattr_t'
| `-ElaboratedType 0x55f6164fb010 'union pthread_rwlockattr_t' sugar
|   `-RecordType 0x55f6164fae90 'pthread_rwlockattr_t'
|     `-Record 0x55f6164fae10 ''
|-TypedefDecl 0x55f6164fc140 <line:304:1, col:22> col:22 referenced pthread_spinlock_t 'volatile int'
| `-QualType 0x55f61647df14 'volatile int' volatile
|   `-BuiltinType 0x55f61647df10 'int'
|-RecordDecl 0x55f6164fc198 <line:305:9, line:309:1> line:305:9 union definition
| |-FieldDecl 0x55f6164fc2e0 <line:307:3, col:17> col:8 __size 'char [32]'
| `-FieldDecl 0x55f6164fc348 <line:308:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x55f6164fc400 <line:305:1, line:309:3> col:3 referenced pthread_barrier_t 'union pthread_barrier_t':'pthread_barrier_t'
| `-ElaboratedType 0x55f6164fc3a0 'union pthread_barrier_t' sugar
|   `-RecordType 0x55f6164fc220 'pthread_barrier_t'
|     `-Record 0x55f6164fc198 ''
|-RecordDecl 0x55f6164fc470 <line:310:9, line:314:1> line:310:9 union definition
| |-FieldDecl 0x55f6164fc570 <line:312:3, col:16> col:8 __size 'char [4]'
| `-FieldDecl 0x55f6164fc5d8 <line:313:3, col:7> col:7 __align 'int'
|-TypedefDecl 0x55f6164fc690 <line:310:1, line:314:3> col:3 referenced pthread_barrierattr_t 'union pthread_barrierattr_t':'pthread_barrierattr_t'
| `-ElaboratedType 0x55f6164fc630 'union pthread_barrierattr_t' sugar
|   `-RecordType 0x55f6164fc4f0 'pthread_barrierattr_t'
|     `-Record 0x55f6164fc470 ''
|-TypedefDecl 0x55f6164fc7a8 <line:315:1, col:29> col:18 referenced __jmp_buf 'long [8]'
| `-ConstantArrayType 0x55f6164fc740 'long [8]' 8 
|   `-BuiltinType 0x55f61647df30 'long'
|-EnumDecl 0x55f6164fc800 <line:316:1, line:320:1> line:316:1
| |-EnumConstantDecl 0x55f6164fc8c8 <line:318:3> col:3 PTHREAD_CREATE_JOINABLE 'int'
| `-EnumConstantDecl 0x55f6164fc918 <line:319:3> col:3 PTHREAD_CREATE_DETACHED 'int'
|-EnumDecl 0x55f6164fc968 <line:321:1, line:332:1> line:321:1
| |-EnumConstantDecl 0x55f6164fca38 <line:323:3> col:3 referenced PTHREAD_MUTEX_TIMED_NP 'int'
| |-EnumConstantDecl 0x55f6164fca88 <line:324:3> col:3 referenced PTHREAD_MUTEX_RECURSIVE_NP 'int'
| |-EnumConstantDecl 0x55f6164fcad8 <line:325:3> col:3 referenced PTHREAD_MUTEX_ERRORCHECK_NP 'int'
| |-EnumConstantDecl 0x55f6164fcb28 <line:326:3> col:3 PTHREAD_MUTEX_ADAPTIVE_NP 'int'
| |-EnumConstantDecl 0x55f6164fcbb0 <line:328:3, col:26> col:3 referenced PTHREAD_MUTEX_NORMAL 'int'
| | `-ConstantExpr 0x55f6164fcb98 <col:26> 'int'
| |   `-DeclRefExpr 0x55f6164fcb78 <col:26> 'int' EnumConstant 0x55f6164fca38 'PTHREAD_MUTEX_TIMED_NP' 'int'
| |-EnumConstantDecl 0x55f6164fcc38 <line:329:3, col:29> col:3 PTHREAD_MUTEX_RECURSIVE 'int'
| | `-ConstantExpr 0x55f6164fcc20 <col:29> 'int'
| |   `-DeclRefExpr 0x55f6164fcc00 <col:29> 'int' EnumConstant 0x55f6164fca88 'PTHREAD_MUTEX_RECURSIVE_NP' 'int'
| |-EnumConstantDecl 0x55f6164fccc0 <line:330:3, col:30> col:3 PTHREAD_MUTEX_ERRORCHECK 'int'
| | `-ConstantExpr 0x55f6164fcca8 <col:30> 'int'
| |   `-DeclRefExpr 0x55f6164fcc88 <col:30> 'int' EnumConstant 0x55f6164fcad8 'PTHREAD_MUTEX_ERRORCHECK_NP' 'int'
| `-EnumConstantDecl 0x55f6164fcd48 <line:331:3, col:27> col:3 PTHREAD_MUTEX_DEFAULT 'int'
|   `-ConstantExpr 0x55f6164fcd30 <col:27> 'int'
|     `-DeclRefExpr 0x55f6164fcd10 <col:27> 'int' EnumConstant 0x55f6164fcbb0 'PTHREAD_MUTEX_NORMAL' 'int'
|-EnumDecl 0x55f6164fcd98 <line:333:1, line:339:1> line:333:1
| |-EnumConstantDecl 0x55f6164fce68 <line:335:3> col:3 referenced PTHREAD_MUTEX_STALLED 'int'
| |-EnumConstantDecl 0x55f6164fcef0 <line:336:3, col:30> col:3 PTHREAD_MUTEX_STALLED_NP 'int'
| | `-ConstantExpr 0x55f6164fced8 <col:30> 'int'
| |   `-DeclRefExpr 0x55f6164fceb8 <col:30> 'int' EnumConstant 0x55f6164fce68 'PTHREAD_MUTEX_STALLED' 'int'
| |-EnumConstantDecl 0x55f6164fcf40 <line:337:3> col:3 referenced PTHREAD_MUTEX_ROBUST 'int'
| `-EnumConstantDecl 0x55f6164fcfc8 <line:338:3, col:29> col:3 PTHREAD_MUTEX_ROBUST_NP 'int'
|   `-ConstantExpr 0x55f6164fcfb0 <col:29> 'int'
|     `-DeclRefExpr 0x55f6164fcf90 <col:29> 'int' EnumConstant 0x55f6164fcf40 'PTHREAD_MUTEX_ROBUST' 'int'
|-EnumDecl 0x55f6164fd018 <line:340:1, line:345:1> line:340:1
| |-EnumConstantDecl 0x55f6164fd0e8 <line:342:3> col:3 PTHREAD_PRIO_NONE 'int'
| |-EnumConstantDecl 0x55f6164fd150 <line:343:3> col:3 PTHREAD_PRIO_INHERIT 'int'
| `-EnumConstantDecl 0x55f6164fd1a0 <line:344:3> col:3 PTHREAD_PRIO_PROTECT 'int'
|-EnumDecl 0x55f6164fd1f0 <line:346:1, line:352:1> line:346:1
| |-EnumConstantDecl 0x55f6164fd2b8 <line:348:3> col:3 referenced PTHREAD_RWLOCK_PREFER_READER_NP 'int'
| |-EnumConstantDecl 0x55f6164fd308 <line:349:3> col:3 PTHREAD_RWLOCK_PREFER_WRITER_NP 'int'
| |-EnumConstantDecl 0x55f6164fd358 <line:350:3> col:3 PTHREAD_RWLOCK_PREFER_WRITER_NONRECURSIVE_NP 'int'
| `-EnumConstantDecl 0x55f6164fd3e0 <line:351:3, col:31> col:3 PTHREAD_RWLOCK_DEFAULT_NP 'int'
|   `-ConstantExpr 0x55f6164fd3c8 <col:31> 'int'
|     `-DeclRefExpr 0x55f6164fd3a8 <col:31> 'int' EnumConstant 0x55f6164fd2b8 'PTHREAD_RWLOCK_PREFER_READER_NP' 'int'
|-EnumDecl 0x55f6164fd430 <line:353:1, line:357:1> line:353:1
| |-EnumConstantDecl 0x55f6164fd4f8 <line:355:3> col:3 PTHREAD_INHERIT_SCHED 'int'
| `-EnumConstantDecl 0x55f6164fd548 <line:356:3> col:3 PTHREAD_EXPLICIT_SCHED 'int'
|-EnumDecl 0x55f6164fd598 <line:358:1, line:362:1> line:358:1
| |-EnumConstantDecl 0x55f6164fd668 <line:360:3> col:3 PTHREAD_SCOPE_SYSTEM 'int'
| `-EnumConstantDecl 0x55f6164fd6b8 <line:361:3> col:3 PTHREAD_SCOPE_PROCESS 'int'
|-EnumDecl 0x55f6164fd708 <line:363:1, line:367:1> line:363:1
| |-EnumConstantDecl 0x55f6164fd7d8 <line:365:3> col:3 PTHREAD_PROCESS_PRIVATE 'int'
| `-EnumConstantDecl 0x55f6164fd828 <line:366:3> col:3 PTHREAD_PROCESS_SHARED 'int'
|-RecordDecl 0x55f6164fd878 <line:368:1, line:374:1> line:368:8 struct _pthread_cleanup_buffer definition
| |-FieldDecl 0x55f6164fdab8 <line:370:3, col:28> col:10 __routine 'void (*)(void *)'
| |-FieldDecl 0x55f6164fdb20 <line:371:3, col:9> col:9 __arg 'void *'
| |-FieldDecl 0x55f6164fdb88 <line:372:3, col:7> col:7 __canceltype 'int'
| `-FieldDecl 0x55f6164fdca8 <line:373:3, col:35> col:35 __prev 'struct _pthread_cleanup_buffer *'
|-EnumDecl 0x55f6164fdcf8 <line:375:1, line:379:1> line:375:1
| |-EnumConstantDecl 0x55f6164fddc8 <line:377:3> col:3 PTHREAD_CANCEL_ENABLE 'int'
| `-EnumConstantDecl 0x55f6164fde18 <line:378:3> col:3 PTHREAD_CANCEL_DISABLE 'int'
|-EnumDecl 0x55f6164fde68 <line:380:1, line:384:1> line:380:1
| |-EnumConstantDecl 0x55f6164fdf38 <line:382:3> col:3 PTHREAD_CANCEL_DEFERRED 'int'
| `-EnumConstantDecl 0x55f6164fdf88 <line:383:3> col:3 PTHREAD_CANCEL_ASYNCHRONOUS 'int'
|-FunctionDecl 0x55f6164fe5b8 <line:386:1, line:389:96> line:386:12 used pthread_create 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' extern
| |-ParmVarDecl 0x55f6164fe080 <col:28, col:50> col:50 __newthread 'pthread_t *restrict'
| |-ParmVarDecl 0x55f6164fe1a0 <line:387:7, col:40> col:40 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x55f6164fe3a0 <line:388:7, col:39> col:15 __start_routine 'void *(*)(void *)'
| |-ParmVarDecl 0x55f6164fe420 <line:389:7, col:24> col:24 __arg 'void *restrict'
| |-NoThrowAttr 0x55f6164fe678 <col:47>
| |-NonNullAttr 0x55f6164fe6d0 <col:77, col:94> 1 3
| `-CallbackAttr 0x55f6164fe708 <line:386:12> Implicit 2 3
|-FunctionDecl 0x55f6164fe830 <line:390:1, col:72> col:13 pthread_exit 'void (void *) __attribute__((noreturn))' extern
| `-ParmVarDecl 0x55f6164fe760 <col:27, col:33> col:33 __retval 'void *'
|-FunctionDecl 0x55f6164fea88 <line:391:1, col:64> col:12 pthread_join 'int (pthread_t, void **)' extern
| |-ParmVarDecl 0x55f6164fe8e8 <col:26, col:36> col:36 __th 'pthread_t':'unsigned long'
| `-ParmVarDecl 0x55f6164fe968 <col:42, col:49> col:49 __thread_return 'void **'
|-FunctionDecl 0x55f6164fec58 <line:392:1, col:83> col:12 pthread_detach 'int (pthread_t)' extern
| |-ParmVarDecl 0x55f6164feb48 <col:28, col:38> col:38 __th 'pthread_t':'unsigned long'
| `-NoThrowAttr 0x55f6164fed00 <col:60>
|-FunctionDecl 0x55f6164fee50 <line:393:1, col:105> col:18 pthread_self 'pthread_t (void)' extern
| |-NoThrowAttr 0x55f6164feef0 <col:54>
| `-ConstAttr 0x55f6164fef48 <col:95>
|-FunctionDecl 0x55f616500990 <line:394:1, line:395:70> line:394:12 pthread_equal 'int (pthread_t, pthread_t)' extern
| |-ParmVarDecl 0x55f6164fef80 <col:27, col:37> col:37 __thread1 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x55f6164feff8 <col:48, col:58> col:58 __thread2 'pthread_t':'unsigned long'
| |-NoThrowAttr 0x55f616500a40 <line:395:19>
| `-ConstAttr 0x55f616500a98 <col:60>
|-FunctionDecl 0x55f616500c68 <line:396:1, col:128> col:12 pthread_attr_init 'int (pthread_attr_t *)' extern
| |-ParmVarDecl 0x55f616500b30 <col:31, col:47> col:47 __attr 'pthread_attr_t *'
| |-NoThrowAttr 0x55f616500d10 <col:71>
| `-NonNullAttr 0x55f616500d68 <col:112, col:126> 1
|-FunctionDecl 0x55f616500e70 <line:397:1, line:398:79> line:397:12 pthread_attr_destroy 'int (pthread_attr_t *)' extern
| |-ParmVarDecl 0x55f616500db8 <col:34, col:50> col:50 __attr 'pthread_attr_t *'
| |-NoThrowAttr 0x55f616500f18 <line:398:22>
| `-NonNullAttr 0x55f616500f70 <col:63, col:77> 1
|-FunctionDecl 0x55f616501198 <line:399:1, line:401:82> line:399:12 pthread_attr_getdetachstate 'int (const pthread_attr_t *, int *)' extern
| |-ParmVarDecl 0x55f616500fb8 <col:41, col:63> col:63 __attr 'const pthread_attr_t *'
| |-ParmVarDecl 0x55f616501038 <line:400:6, col:11> col:11 __detachstate 'int *'
| |-NoThrowAttr 0x55f616501248 <line:401:22>
| `-NonNullAttr 0x55f6165012a0 <col:63, col:80> 1 2
|-FunctionDecl 0x55f6165014a8 <line:402:1, line:404:79> line:402:12 pthread_attr_setdetachstate 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x55f6165012e8 <col:41, col:57> col:57 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x55f616501368 <line:403:6, col:10> col:10 __detachstate 'int'
| |-NoThrowAttr 0x55f616501558 <line:404:22>
| `-NonNullAttr 0x55f6165015b0 <col:63, col:77> 1
|-FunctionDecl 0x55f616501808 <line:405:1, line:407:82> line:405:12 pthread_attr_getguardsize 'int (const pthread_attr_t *, size_t *)' extern
| |-ParmVarDecl 0x55f6165015f8 <col:39, col:61> col:61 __attr 'const pthread_attr_t *'
| |-ParmVarDecl 0x55f6165016a0 <line:406:11, col:19> col:19 __guardsize 'size_t *'
| |-NoThrowAttr 0x55f6165018b8 <line:407:22>
| `-NonNullAttr 0x55f616501910 <col:63, col:80> 1 2
|-FunctionDecl 0x55f616502b68 <line:408:1, line:410:79> line:408:12 pthread_attr_setguardsize 'int (pthread_attr_t *, size_t)' extern
| |-ParmVarDecl 0x55f6165029b0 <col:39, col:55> col:55 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x55f616502a28 <line:409:11, col:18> col:18 __guardsize 'size_t':'unsigned long'
| |-NoThrowAttr 0x55f616502c18 <line:410:22>
| `-NonNullAttr 0x55f616502c70 <col:63, col:77> 1
|-FunctionDecl 0x55f616502ea8 <line:411:1, line:413:82> line:411:12 pthread_attr_getschedparam 'int (const pthread_attr_t *restrict, struct sched_param *restrict)' extern
| |-ParmVarDecl 0x55f616502cb8 <col:40, col:73> col:73 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x55f616502d48 <line:412:12, col:43> col:43 __param 'struct sched_param *restrict'
| |-NoThrowAttr 0x55f616502f58 <line:413:22>
| `-NonNullAttr 0x55f616502fb0 <col:63, col:80> 1 2
|-FunctionDecl 0x55f6165031e8 <line:414:1, line:416:97> line:414:12 pthread_attr_setschedparam 'int (pthread_attr_t *restrict, const struct sched_param *restrict)' extern
| |-ParmVarDecl 0x55f616502ff8 <col:40, col:67> col:67 __attr 'pthread_attr_t *restrict'
| |-ParmVarDecl 0x55f616503088 <line:415:12, line:416:12> col:12 __param 'const struct sched_param *restrict'
| |-NoThrowAttr 0x55f616503298 <col:37>
| `-NonNullAttr 0x55f6165032f0 <col:78, col:95> 1 2
|-FunctionDecl 0x55f6165034d8 <line:417:1, line:419:82> line:417:12 pthread_attr_getschedpolicy 'int (const pthread_attr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x55f616503338 <col:41, line:418:6> col:6 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x55f6165033b8 <col:14, col:30> col:30 __policy 'int *restrict'
| |-NoThrowAttr 0x55f616503588 <line:419:22>
| `-NonNullAttr 0x55f6165035e0 <col:63, col:80> 1 2
|-FunctionDecl 0x55f616503768 <line:420:1, line:421:79> line:420:12 pthread_attr_setschedpolicy 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x55f616503628 <col:41, col:57> col:57 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x55f6165036a8 <col:65, col:69> col:69 __policy 'int'
| |-NoThrowAttr 0x55f616503818 <line:421:22>
| `-NonNullAttr 0x55f616503870 <col:63, col:77> 1
|-FunctionDecl 0x55f616503a38 <line:422:1, line:424:82> line:422:12 pthread_attr_getinheritsched 'int (const pthread_attr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x55f6165038b8 <col:42, line:423:7> col:7 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x55f616503938 <col:15, col:31> col:31 __inherit 'int *restrict'
| |-NoThrowAttr 0x55f616503ae8 <line:424:22>
| `-NonNullAttr 0x55f616503b40 <col:63, col:80> 1 2
|-FunctionDecl 0x55f616503cc8 <line:425:1, line:427:79> line:425:12 pthread_attr_setinheritsched 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x55f616503b88 <col:42, col:58> col:58 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x55f616503c08 <line:426:7, col:11> col:11 __inherit 'int'
| |-NoThrowAttr 0x55f616503d78 <line:427:22>
| `-NonNullAttr 0x55f616503dd0 <col:63, col:77> 1
|-FunctionDecl 0x55f616503f78 <line:428:1, line:430:82> line:428:12 pthread_attr_getscope 'int (const pthread_attr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x55f616503e18 <col:35, col:68> col:68 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x55f616503e98 <line:429:7, col:23> col:23 __scope 'int *restrict'
| |-NoThrowAttr 0x55f616504028 <line:430:22>
| `-NonNullAttr 0x55f616504080 <col:63, col:80> 1 2
|-FunctionDecl 0x55f616504208 <line:431:1, line:432:79> line:431:12 pthread_attr_setscope 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x55f6165040c8 <col:35, col:51> col:51 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x55f616504148 <col:59, col:63> col:63 __scope 'int'
| |-NoThrowAttr 0x55f6165042b8 <line:432:22>
| `-NonNullAttr 0x55f616504310 <col:63, col:77> 1
|-FunctionDecl 0x55f616504538 <line:433:1, line:435:115> line:433:12 pthread_attr_getstackaddr 'int (const pthread_attr_t *restrict, void **restrict)' extern
| |-ParmVarDecl 0x55f616504358 <col:39, line:434:11> col:11 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x55f6165043d8 <col:19, col:37> col:37 __stackaddr 'void **restrict'
| |-NoThrowAttr 0x55f6165045e8 <line:435:22>
| |-NonNullAttr 0x55f616504640 <col:63, col:80> 1 2
| `-DeprecatedAttr 0x55f616504678 <col:100> "" ""
|-FunctionDecl 0x55f616504888 <line:436:1, line:438:112> line:436:12 pthread_attr_setstackaddr 'int (pthread_attr_t *, void *)' extern
| |-ParmVarDecl 0x55f6165046c8 <col:39, col:55> col:55 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x55f616504748 <line:437:11, col:17> col:17 __stackaddr 'void *'
| |-NoThrowAttr 0x55f616504938 <line:438:22>
| |-NonNullAttr 0x55f616504990 <col:63, col:77> 1
| `-DeprecatedAttr 0x55f6165049d8 <col:97> "" ""
|-FunctionDecl 0x55f616504bc8 <line:439:1, line:441:82> line:439:12 pthread_attr_getstacksize 'int (const pthread_attr_t *restrict, size_t *restrict)' extern
| |-ParmVarDecl 0x55f616504a28 <col:39, line:440:11> col:11 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x55f616504aa0 <col:19, col:38> col:38 __stacksize 'size_t *restrict'
| |-NoThrowAttr 0x55f616504c78 <line:441:22>
| `-NonNullAttr 0x55f616504cd0 <col:63, col:80> 1 2
|-FunctionDecl 0x55f616504e50 <line:442:1, line:444:79> line:442:12 pthread_attr_setstacksize 'int (pthread_attr_t *, size_t)' extern
| |-ParmVarDecl 0x55f616504d18 <col:39, col:55> col:55 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x55f616504d90 <line:443:11, col:18> col:18 __stacksize 'size_t':'unsigned long'
| |-NoThrowAttr 0x55f616504f00 <line:444:22>
| `-NonNullAttr 0x55f616504f58 <col:63, col:77> 1
|-FunctionDecl 0x55f616505248 <line:445:1, line:448:85> line:445:12 pthread_attr_getstack 'int (const pthread_attr_t *restrict, void **restrict, size_t *restrict)' extern
| |-ParmVarDecl 0x55f616504fa8 <col:35, col:68> col:68 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x55f616505028 <line:446:7, col:25> col:25 __stackaddr 'void **restrict'
| |-ParmVarDecl 0x55f6165050a0 <line:447:7, col:26> col:26 __stacksize 'size_t *restrict'
| |-NoThrowAttr 0x55f616505300 <line:448:22>
| `-NonNullAttr 0x55f616505358 <col:63, col:83> 1 2 3
|-FunctionDecl 0x55f616505608 <line:449:1, line:450:100> line:449:12 pthread_attr_setstack 'int (pthread_attr_t *, void *, size_t)' extern
| |-ParmVarDecl 0x55f6165053b0 <col:35, col:51> col:51 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x55f616505430 <col:59, col:65> col:65 __stackaddr 'void *'
| |-ParmVarDecl 0x55f6165054a8 <line:450:7, col:14> col:14 __stacksize 'size_t':'unsigned long'
| |-NoThrowAttr 0x55f6165056c0 <col:43>
| `-NonNullAttr 0x55f616505718 <col:84, col:98> 1
|-FunctionDecl 0x55f616505a20 <line:451:1, line:453:79> line:451:12 pthread_setschedparam 'int (pthread_t, int, const struct sched_param *)' extern
| |-ParmVarDecl 0x55f616505768 <col:35, col:45> col:45 __target_thread 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x55f6165057e8 <col:62, col:66> col:66 __policy 'int'
| |-ParmVarDecl 0x55f616505878 <line:452:7, col:33> col:33 __param 'const struct sched_param *'
| |-NoThrowAttr 0x55f616505ad8 <line:453:22>
| `-NonNullAttr 0x55f616505b30 <col:63, col:77> 3
|-FunctionDecl 0x55f616505e08 <line:454:1, line:457:82> line:454:12 pthread_getschedparam 'int (pthread_t, int *restrict, struct sched_param *restrict)' extern
| |-ParmVarDecl 0x55f616505b78 <col:35, col:45> col:45 __target_thread 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x55f616505bf8 <line:455:7, col:23> col:23 __policy 'int *restrict'
| |-ParmVarDecl 0x55f616505c88 <line:456:7, col:38> col:38 __param 'struct sched_param *restrict'
| |-NoThrowAttr 0x55f616505ec0 <line:457:22>
| `-NonNullAttr 0x55f616505f18 <col:63, col:80> 2 3
|-FunctionDecl 0x55f616506108 <line:458:1, line:459:45> line:458:12 pthread_setschedprio 'int (pthread_t, int)' extern
| |-ParmVarDecl 0x55f616505f68 <col:34, col:44> col:44 __target_thread 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x55f616505fe8 <col:61, col:65> col:65 __prio 'int'
| `-NoThrowAttr 0x55f6165061b8 <line:459:22>
|-FunctionDecl 0x55f616506588 <line:460:1, line:461:71> line:460:12 pthread_once 'int (pthread_once_t *, void (*)(void))' extern
| |-ParmVarDecl 0x55f616506280 <col:26, col:42> col:42 __once_control 'pthread_once_t *'
| |-ParmVarDecl 0x55f616506420 <line:461:5, col:33> col:12 __init_routine 'void (*)(void)'
| `-NonNullAttr 0x55f616506638 <col:52, col:69> 1 2
|-FunctionDecl 0x55f6165067e0 <line:462:1, col:64> col:12 pthread_setcancelstate 'int (int, int *)' extern
| |-ParmVarDecl 0x55f6165066c0 <col:36, col:40> col:40 __state 'int'
| `-ParmVarDecl 0x55f616506740 <col:49, col:54> col:54 __oldstate 'int *'
|-FunctionDecl 0x55f6165069f0 <line:463:1, col:61> col:12 pthread_setcanceltype 'int (int, int *)' extern
| |-ParmVarDecl 0x55f6165068a8 <col:35, col:39> col:39 __type 'int'
| `-ParmVarDecl 0x55f616506928 <col:47, col:52> col:52 __oldtype 'int *'
|-FunctionDecl 0x55f616506b48 <line:464:1, col:42> col:12 pthread_cancel 'int (pthread_t)' extern
| `-ParmVarDecl 0x55f616506ab0 <col:28, col:38> col:38 __th 'pthread_t':'unsigned long'
|-FunctionDecl 0x55f616506c88 <line:465:1, col:37> col:13 pthread_testcancel 'void (void)' extern
|-RecordDecl 0x55f616506d28 <line:466:9, line:474:1> line:466:9 struct definition
| |-RecordDecl 0x55f616506dd8 <line:468:3, line:472:3> line:468:3 struct definition
| | |-FieldDecl 0x55f616506ec8 <line:470:5, col:15> col:15 __cancel_jmp_buf '__jmp_buf':'long [8]'
| | `-FieldDecl 0x55f616506f30 <line:471:5, col:9> col:9 __mask_was_saved 'int'
| |-FieldDecl 0x55f616507100 <line:468:3, line:472:23> col:5 __cancel_jmp_buf 'struct (anonymous struct at ./split_0/rfi005_tso.oepc_false-unreach-call.i:468:3) [1]'
| `-FieldDecl 0x55f6165071f8 <line:473:3, col:16> col:9 __pad 'void *[4]'
|-TypedefDecl 0x55f6165072b0 <line:466:1, line:474:3> col:3 referenced __pthread_unwind_buf_t 'struct __pthread_unwind_buf_t':'__pthread_unwind_buf_t'
| |-ElaboratedType 0x55f616507250 'struct __pthread_unwind_buf_t' sugar
| | `-RecordType 0x55f616506db0 '__pthread_unwind_buf_t'
| |   `-Record 0x55f616506d28 ''
| `-AlignedAttr 0x55f616507308 <col:42> aligned
|   `-<<<NULL>>>
|-RecordDecl 0x55f616507380 <line:475:1, line:481:1> line:475:8 struct __pthread_cleanup_frame definition
| |-FieldDecl 0x55f6165074e0 <line:477:3, col:35> col:10 __cancel_routine 'void (*)(void *)'
| |-FieldDecl 0x55f616507548 <line:478:3, col:9> col:9 __cancel_arg 'void *'
| |-FieldDecl 0x55f6165075b0 <line:479:3, col:7> col:7 __do_it 'int'
| `-FieldDecl 0x55f616507618 <line:480:3, col:7> col:7 __cancel_type 'int'
|-FunctionDecl 0x55f616507820 <line:482:1, col:69> col:13 __pthread_register_cancel 'void (__pthread_unwind_buf_t *)' extern
| `-ParmVarDecl 0x55f616507710 <col:40, col:64> col:64 __buf '__pthread_unwind_buf_t *'
|-FunctionDecl 0x55f616507a00 <line:484:1, col:71> col:13 __pthread_unregister_cancel 'void (__pthread_unwind_buf_t *)' extern
| `-ParmVarDecl 0x55f6165078d8 <col:42, col:66> col:66 __buf '__pthread_unwind_buf_t *'
|-FunctionDecl 0x55f616507bc0 <line:486:1, line:488:31> line:486:13 __pthread_unwind_next 'void (__pthread_unwind_buf_t *) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x55f616507ab8 <col:36, col:60> col:60 __buf '__pthread_unwind_buf_t *'
| `-WeakAttr 0x55f616507c68 <line:488:22>
|-RecordDecl 0x55f616507cc0 <line:490:1, col:8> col:8 struct __jmp_buf_tag
|-FunctionDecl 0x55f616507fd8 <line:491:1, col:98> col:12 __sigsetjmp 'int (struct __jmp_buf_tag *, int)' extern
| |-ParmVarDecl 0x55f616507e38 <col:25, col:47> col:47 __env 'struct __jmp_buf_tag *'
| |-ParmVarDecl 0x55f616507eb8 <col:54, col:58> col:58 __savemask 'int'
| |-NoThrowAttr 0x55f616508088 <col:86>
| `-ReturnsTwiceAttr 0x55f6165080e0 <col:12> Implicit
|-FunctionDecl 0x55f616508408 <line:492:1, line:494:79> line:492:12 pthread_mutex_init 'int (pthread_mutex_t *, const pthread_mutexattr_t *)' extern
| |-ParmVarDecl 0x55f6165081b0 <col:32, col:49> col:49 __mutex 'pthread_mutex_t *'
| |-ParmVarDecl 0x55f6165082c0 <line:493:11, col:38> col:38 __mutexattr 'const pthread_mutexattr_t *'
| |-NoThrowAttr 0x55f6165084b8 <line:494:22>
| `-NonNullAttr 0x55f616508510 <col:63, col:77> 1
|-FunctionDecl 0x55f616508688 <line:495:1, line:496:79> line:495:12 pthread_mutex_destroy 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x55f616508558 <col:35, col:52> col:52 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x55f616508730 <line:496:22>
| `-NonNullAttr 0x55f616508788 <col:63, col:77> 1
|-FunctionDecl 0x55f616508890 <line:497:1, line:498:68> line:497:12 pthread_mutex_trylock 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x55f6165087d8 <col:35, col:52> col:52 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x55f616508938 <line:498:22>
| `-NonNullAttr 0x55f616508990 <col:52, col:66> 1
|-FunctionDecl 0x55f616509ad8 <line:499:1, line:500:68> line:499:12 pthread_mutex_lock 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x55f616509a20 <col:32, col:49> col:49 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x55f616509b80 <line:500:22>
| `-NonNullAttr 0x55f616509bd8 <col:52, col:66> 1
|-FunctionDecl 0x55f616509e18 <line:501:1, line:503:85> line:501:12 pthread_mutex_timedlock 'int (pthread_mutex_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x55f616509c28 <col:37, col:65> col:65 __mutex 'pthread_mutex_t *restrict'
| |-ParmVarDecl 0x55f616509cb8 <line:502:9, line:503:9> col:9 __abstime 'const struct timespec *restrict'
| |-NoThrowAttr 0x55f616509ec8 <col:36>
| `-NonNullAttr 0x55f616509f20 <col:66, col:83> 1 2
|-FunctionDecl 0x55f61650a020 <line:504:1, line:505:68> line:504:12 pthread_mutex_unlock 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x55f616509f68 <col:34, col:51> col:51 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x55f61650a0c8 <line:505:22>
| `-NonNullAttr 0x55f61650a120 <col:52, col:66> 1
|-FunctionDecl 0x55f61650a3b8 <line:506:1, line:509:82> line:506:12 pthread_mutex_getprioceiling 'int (const pthread_mutex_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x55f61650a1d0 <col:42, line:507:18> col:18 __mutex 'const pthread_mutex_t *restrict'
| |-ParmVarDecl 0x55f61650a250 <line:508:7, col:23> col:23 __prioceiling 'int *restrict'
| |-NoThrowAttr 0x55f61650a468 <line:509:22>
| `-NonNullAttr 0x55f61650a4c0 <col:63, col:80> 1 2
|-FunctionDecl 0x55f61650a788 <line:510:1, line:513:82> line:510:12 pthread_mutex_setprioceiling 'int (pthread_mutex_t *restrict, int, int *restrict)' extern
| |-ParmVarDecl 0x55f61650a508 <col:42, col:70> col:70 __mutex 'pthread_mutex_t *restrict'
| |-ParmVarDecl 0x55f61650a588 <line:511:7, col:11> col:11 __prioceiling 'int'
| |-ParmVarDecl 0x55f61650a608 <line:512:7, col:23> col:23 __old_ceiling 'int *restrict'
| |-NoThrowAttr 0x55f61650a840 <line:513:22>
| `-NonNullAttr 0x55f61650a898 <col:63, col:80> 1 3
|-FunctionDecl 0x55f61650aa30 <line:514:1, line:515:79> line:514:12 pthread_mutex_consistent 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x55f61650a8e8 <col:38, col:55> col:55 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x55f61650aad8 <line:515:22>
| `-NonNullAttr 0x55f61650ab30 <col:63, col:77> 1
|-FunctionDecl 0x55f61650ad18 <line:516:1, line:517:79> line:516:12 pthread_mutexattr_init 'int (pthread_mutexattr_t *)' extern
| |-ParmVarDecl 0x55f61650abe0 <col:36, col:57> col:57 __attr 'pthread_mutexattr_t *'
| |-NoThrowAttr 0x55f61650adc0 <line:517:22>
| `-NonNullAttr 0x55f61650ae18 <col:63, col:77> 1
|-FunctionDecl 0x55f61650af20 <line:518:1, line:519:79> line:518:12 pthread_mutexattr_destroy 'int (pthread_mutexattr_t *)' extern
| |-ParmVarDecl 0x55f61650ae68 <col:39, col:60> col:60 __attr 'pthread_mutexattr_t *'
| |-NoThrowAttr 0x55f61650afc8 <line:519:22>
| `-NonNullAttr 0x55f61650b020 <col:63, col:77> 1
|-FunctionDecl 0x55f61650b248 <line:520:1, line:523:82> line:520:12 pthread_mutexattr_getpshared 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x55f61650b068 <col:42, line:521:18> col:18 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x55f61650b0e8 <line:522:7, col:23> col:23 __pshared 'int *restrict'
| |-NoThrowAttr 0x55f61650b2f8 <line:523:22>
| `-NonNullAttr 0x55f61650b350 <col:63, col:80> 1 2
|-FunctionDecl 0x55f61650b558 <line:524:1, line:526:79> line:524:12 pthread_mutexattr_setpshared 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x55f61650b398 <col:42, col:63> col:63 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x55f61650b418 <line:525:7, col:11> col:11 __pshared 'int'
| |-NoThrowAttr 0x55f61650b608 <line:526:22>
| `-NonNullAttr 0x55f61650b660 <col:63, col:77> 1
|-FunctionDecl 0x55f61650b808 <line:527:1, line:529:82> line:527:12 pthread_mutexattr_gettype 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x55f61650b6a8 <col:39, line:528:11> col:11 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x55f61650b728 <col:19, col:35> col:35 __kind 'int *restrict'
| |-NoThrowAttr 0x55f61650b8b8 <line:529:22>
| `-NonNullAttr 0x55f61650b910 <col:63, col:80> 1 2
|-FunctionDecl 0x55f61650bb00 <line:530:1, line:531:79> line:530:12 pthread_mutexattr_settype 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x55f61650b958 <col:39, col:60> col:60 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x55f61650ba40 <col:68, col:72> col:72 __kind 'int'
| |-NoThrowAttr 0x55f61650bbb0 <line:531:22>
| `-NonNullAttr 0x55f61650bc08 <col:63, col:77> 1
|-FunctionDecl 0x55f61650bdb8 <line:532:1, line:535:82> line:532:12 pthread_mutexattr_getprotocol 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x55f61650bc58 <col:43, line:533:19> col:19 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x55f61650bcd8 <line:534:8, col:24> col:24 __protocol 'int *restrict'
| |-NoThrowAttr 0x55f61650be68 <line:535:22>
| `-NonNullAttr 0x55f61650bec0 <col:63, col:80> 1 2
|-FunctionDecl 0x55f61650c048 <line:536:1, line:538:79> line:536:12 pthread_mutexattr_setprotocol 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x55f61650bf08 <col:43, col:64> col:64 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x55f61650bf88 <line:537:8, col:12> col:12 __protocol 'int'
| |-NoThrowAttr 0x55f61650c0f8 <line:538:22>
| `-NonNullAttr 0x55f61650c150 <col:63, col:77> 1
|-FunctionDecl 0x55f61650c2f8 <line:539:1, line:542:82> line:539:12 pthread_mutexattr_getprioceiling 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x55f61650c198 <col:46, line:540:22> col:22 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x55f61650c218 <line:541:11, col:27> col:27 __prioceiling 'int *restrict'
| |-NoThrowAttr 0x55f61650c3a8 <line:542:22>
| `-NonNullAttr 0x55f61650c400 <col:63, col:80> 1 2
|-FunctionDecl 0x55f61650c588 <line:543:1, line:545:79> line:543:12 pthread_mutexattr_setprioceiling 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x55f61650c448 <col:46, col:67> col:67 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x55f61650c4c8 <line:544:11, col:15> col:15 __prioceiling 'int'
| |-NoThrowAttr 0x55f61650c638 <line:545:22>
| `-NonNullAttr 0x55f61650c690 <col:63, col:77> 1
|-FunctionDecl 0x55f61650c878 <line:546:1, line:548:82> line:546:12 pthread_mutexattr_getrobust 'int (const pthread_mutexattr_t *, int *)' extern
| |-ParmVarDecl 0x55f61650c6d8 <col:41, col:68> col:68 __attr 'const pthread_mutexattr_t *'
| |-ParmVarDecl 0x55f61650c758 <line:547:6, col:11> col:11 __robustness 'int *'
| |-NoThrowAttr 0x55f61650c928 <line:548:22>
| `-NonNullAttr 0x55f61650c980 <col:63, col:80> 1 2
|-FunctionDecl 0x55f61650db38 <line:549:1, line:551:79> line:549:12 pthread_mutexattr_setrobust 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x55f61650c9c8 <col:41, col:62> col:62 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x55f61650da78 <line:550:6, col:10> col:10 __robustness 'int'
| |-NoThrowAttr 0x55f61650dbe8 <line:551:22>
| `-NonNullAttr 0x55f61650dc40 <col:63, col:77> 1
|-FunctionDecl 0x55f61650df78 <line:552:1, line:554:86> line:552:12 pthread_rwlock_init 'int (pthread_rwlock_t *restrict, const pthread_rwlockattr_t *restrict)' extern
| |-ParmVarDecl 0x55f61650dd20 <col:33, col:62> col:62 __rwlock 'pthread_rwlock_t *restrict'
| |-ParmVarDecl 0x55f61650de30 <line:553:5, line:554:5> col:5 __attr 'const pthread_rwlockattr_t *restrict'
| |-NoThrowAttr 0x55f61650e028 <col:29>
| `-NonNullAttr 0x55f61650e080 <col:70, col:84> 1
|-FunctionDecl 0x55f61650e1f8 <line:555:1, line:556:79> line:555:12 pthread_rwlock_destroy 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x55f61650e0c8 <col:36, col:54> col:54 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x55f61650e2a0 <line:556:22>
| `-NonNullAttr 0x55f61650e2f8 <col:63, col:77> 1
|-FunctionDecl 0x55f61650e400 <line:557:1, line:558:68> line:557:12 pthread_rwlock_rdlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x55f61650e348 <col:35, col:53> col:53 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x55f61650e4a8 <line:558:22>
| `-NonNullAttr 0x55f61650e500 <col:52, col:66> 1
|-FunctionDecl 0x55f61650e600 <line:559:1, line:560:65> line:559:12 pthread_rwlock_tryrdlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x55f61650e548 <col:38, col:56> col:56 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x55f61650e6a8 <line:560:19>
| `-NonNullAttr 0x55f61650e700 <col:49, col:63> 1
|-FunctionDecl 0x55f61650e938 <line:561:1, line:563:88> line:561:12 pthread_rwlock_timedrdlock 'int (pthread_rwlock_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x55f61650e748 <col:40, col:69> col:69 __rwlock 'pthread_rwlock_t *restrict'
| |-ParmVarDecl 0x55f61650e7d8 <line:562:12, line:563:12> col:12 __abstime 'const struct timespec *restrict'
| |-NoThrowAttr 0x55f61650e9e8 <col:39>
| `-NonNullAttr 0x55f61650ea70 <col:69, col:86> 1 2
|-FunctionDecl 0x55f61650eb70 <line:564:1, line:565:68> line:564:12 pthread_rwlock_wrlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x55f61650eab8 <col:35, col:53> col:53 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x55f61650ec18 <line:565:22>
| `-NonNullAttr 0x55f61650ec70 <col:52, col:66> 1
|-FunctionDecl 0x55f61650ed70 <line:566:1, line:567:68> line:566:12 pthread_rwlock_trywrlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x55f61650ecb8 <col:38, col:56> col:56 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x55f61650ee18 <line:567:22>
| `-NonNullAttr 0x55f61650ee70 <col:52, col:66> 1
|-FunctionDecl 0x55f61650f028 <line:568:1, line:570:88> line:568:12 pthread_rwlock_timedwrlock 'int (pthread_rwlock_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x55f61650eeb8 <col:40, col:69> col:69 __rwlock 'pthread_rwlock_t *restrict'
| |-ParmVarDecl 0x55f61650ef48 <line:569:12, line:570:12> col:12 __abstime 'const struct timespec *restrict'
| |-NoThrowAttr 0x55f61650f0d8 <col:39>
| `-NonNullAttr 0x55f61650f130 <col:69, col:86> 1 2
|-FunctionDecl 0x55f61650f230 <line:571:1, line:572:68> line:571:12 pthread_rwlock_unlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x55f61650f178 <col:35, col:53> col:53 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x55f61650f2d8 <line:572:22>
| `-NonNullAttr 0x55f61650f330 <col:52, col:66> 1
|-FunctionDecl 0x55f61650f518 <line:573:1, line:574:79> line:573:12 pthread_rwlockattr_init 'int (pthread_rwlockattr_t *)' extern
| |-ParmVarDecl 0x55f61650f3e0 <col:37, col:59> col:59 __attr 'pthread_rwlockattr_t *'
| |-NoThrowAttr 0x55f61650f5c0 <line:574:22>
| `-NonNullAttr 0x55f61650f618 <col:63, col:77> 1
|-FunctionDecl 0x55f61650f720 <line:575:1, line:576:79> line:575:12 pthread_rwlockattr_destroy 'int (pthread_rwlockattr_t *)' extern
| |-ParmVarDecl 0x55f61650f668 <col:40, col:62> col:62 __attr 'pthread_rwlockattr_t *'
| |-NoThrowAttr 0x55f61650f7c8 <line:576:22>
| `-NonNullAttr 0x55f61650f820 <col:63, col:77> 1
|-FunctionDecl 0x55f61650fa80 <line:577:1, line:580:82> line:577:12 pthread_rwlockattr_getpshared 'int (const pthread_rwlockattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x55f61650f868 <col:43, line:578:19> col:19 __attr 'const pthread_rwlockattr_t *restrict'
| |-ParmVarDecl 0x55f61650f8e8 <line:579:8, col:24> col:24 __pshared 'int *restrict'
| |-NoThrowAttr 0x55f61650fb30 <line:580:22>
| `-NonNullAttr 0x55f61650fb88 <col:63, col:80> 1 2
|-FunctionDecl 0x55f61650fd98 <line:581:1, line:583:79> line:581:12 pthread_rwlockattr_setpshared 'int (pthread_rwlockattr_t *, int)' extern
| |-ParmVarDecl 0x55f61650fbd8 <col:43, col:65> col:65 __attr 'pthread_rwlockattr_t *'
| |-ParmVarDecl 0x55f61650fc58 <line:582:8, col:12> col:12 __pshared 'int'
| |-NoThrowAttr 0x55f61650fe48 <line:583:22>
| `-NonNullAttr 0x55f61650fea0 <col:63, col:77> 1
|-FunctionDecl 0x55f616510048 <line:584:1, line:587:82> line:584:12 pthread_rwlockattr_getkind_np 'int (const pthread_rwlockattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x55f61650fee8 <col:43, line:585:19> col:19 __attr 'const pthread_rwlockattr_t *restrict'
| |-ParmVarDecl 0x55f61650ff68 <line:586:8, col:24> col:24 __pref 'int *restrict'
| |-NoThrowAttr 0x55f6165100f8 <line:587:22>
| `-NonNullAttr 0x55f616510150 <col:63, col:80> 1 2
|-FunctionDecl 0x55f6165102d8 <line:588:1, line:589:93> line:588:12 pthread_rwlockattr_setkind_np 'int (pthread_rwlockattr_t *, int)' extern
| |-ParmVarDecl 0x55f616510198 <col:43, col:65> col:65 __attr 'pthread_rwlockattr_t *'
| |-ParmVarDecl 0x55f616510218 <line:589:8, col:12> col:12 __pref 'int'
| |-NoThrowAttr 0x55f616510388 <col:36>
| `-NonNullAttr 0x55f6165103e0 <col:77, col:91> 1
|-FunctionDecl 0x55f616510718 <line:590:1, line:592:79> line:590:12 pthread_cond_init 'int (pthread_cond_t *restrict, const pthread_condattr_t *restrict)' extern
| |-ParmVarDecl 0x55f6165104c0 <col:31, col:58> col:58 __cond 'pthread_cond_t *restrict'
| |-ParmVarDecl 0x55f6165105d0 <line:591:10, col:47> col:47 __cond_attr 'const pthread_condattr_t *restrict'
| |-NoThrowAttr 0x55f6165107c8 <line:592:22>
| `-NonNullAttr 0x55f616510820 <col:63, col:77> 1
|-FunctionDecl 0x55f616510998 <line:593:1, line:594:79> line:593:12 pthread_cond_destroy 'int (pthread_cond_t *)' extern
| |-ParmVarDecl 0x55f616510868 <col:34, col:50> col:50 __cond 'pthread_cond_t *'
| |-NoThrowAttr 0x55f616510a40 <line:594:22>
| `-NonNullAttr 0x55f616510ac0 <col:63, col:77> 1
|-FunctionDecl 0x55f616510bc0 <line:595:1, line:596:68> line:595:12 pthread_cond_signal 'int (pthread_cond_t *)' extern
| |-ParmVarDecl 0x55f616510b08 <col:33, col:49> col:49 __cond 'pthread_cond_t *'
| |-NoThrowAttr 0x55f616510c68 <line:596:22>
| `-NonNullAttr 0x55f616510cc0 <col:52, col:66> 1
|-FunctionDecl 0x55f616510dc0 <line:597:1, line:598:68> line:597:12 pthread_cond_broadcast 'int (pthread_cond_t *)' extern
| |-ParmVarDecl 0x55f616510d08 <col:36, col:52> col:52 __cond 'pthread_cond_t *'
| |-NoThrowAttr 0x55f616510e68 <line:598:22>
| `-NonNullAttr 0x55f616510ec0 <col:52, col:66> 1
|-FunctionDecl 0x55f6165110e8 <line:599:1, line:601:41> line:599:12 pthread_cond_wait 'int (pthread_cond_t *restrict, pthread_mutex_t *restrict)' extern
| |-ParmVarDecl 0x55f616510f08 <col:31, col:58> col:58 __cond 'pthread_cond_t *restrict'
| |-ParmVarDecl 0x55f616510f80 <line:600:10, col:38> col:38 __mutex 'pthread_mutex_t *restrict'
| `-NonNullAttr 0x55f616511198 <line:601:22, col:39> 1 2
|-FunctionDecl 0x55f6165114c8 <line:602:1, line:605:44> line:602:12 pthread_cond_timedwait 'int (pthread_cond_t *restrict, pthread_mutex_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x55f616511218 <col:36, col:63> col:63 __cond 'pthread_cond_t *restrict'
| |-ParmVarDecl 0x55f616511290 <line:603:8, col:36> col:36 __mutex 'pthread_mutex_t *restrict'
| |-ParmVarDecl 0x55f616511320 <line:604:8, col:42> col:42 __abstime 'const struct timespec *restrict'
| `-NonNullAttr 0x55f616511580 <line:605:22, col:42> 1 2 3
|-FunctionDecl 0x55f616511798 <line:606:1, line:607:79> line:606:12 pthread_condattr_init 'int (pthread_condattr_t *)' extern
| |-ParmVarDecl 0x55f616511660 <col:35, col:55> col:55 __attr 'pthread_condattr_t *'
| |-NoThrowAttr 0x55f616511840 <line:607:22>
| `-NonNullAttr 0x55f616511898 <col:63, col:77> 1
|-FunctionDecl 0x55f6165119a0 <line:608:1, line:609:79> line:608:12 pthread_condattr_destroy 'int (pthread_condattr_t *)' extern
| |-ParmVarDecl 0x55f6165118e8 <col:38, col:58> col:58 __attr 'pthread_condattr_t *'
| |-NoThrowAttr 0x55f616511a48 <line:609:22>
| `-NonNullAttr 0x55f616511ad0 <col:63, col:77> 1
|-FunctionDecl 0x55f616511cf8 <line:610:1, line:613:82> line:610:12 pthread_condattr_getpshared 'int (const pthread_condattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x55f616511b18 <col:41, line:611:17> col:17 __attr 'const pthread_condattr_t *restrict'
| |-ParmVarDecl 0x55f616511b98 <line:612:6, col:22> col:22 __pshared 'int *restrict'
| |-NoThrowAttr 0x55f616511da8 <line:613:22>
| `-NonNullAttr 0x55f616511e00 <col:63, col:80> 1 2
|-FunctionDecl 0x55f616512008 <line:614:1, line:615:94> line:614:12 pthread_condattr_setpshared 'int (pthread_condattr_t *, int)' extern
| |-ParmVarDecl 0x55f616511e48 <col:41, col:61> col:61 __attr 'pthread_condattr_t *'
| |-ParmVarDecl 0x55f616511ec8 <line:615:6, col:10> col:10 __pshared 'int'
| |-NoThrowAttr 0x55f6165120b8 <col:37>
| `-NonNullAttr 0x55f616512110 <col:78, col:92> 1
|-FunctionDecl 0x55f616512328 <line:616:1, line:619:82> line:616:12 pthread_condattr_getclock 'int (const pthread_condattr_t *restrict, __clockid_t *restrict)' extern
| |-ParmVarDecl 0x55f616512158 <col:39, line:617:22> col:22 __attr 'const pthread_condattr_t *restrict'
| |-ParmVarDecl 0x55f616512200 <line:618:11, col:35> col:35 __clock_id '__clockid_t *restrict'
| |-NoThrowAttr 0x55f6165123d8 <line:619:22>
| `-NonNullAttr 0x55f616512430 <col:63, col:80> 1 2
|-FunctionDecl 0x55f6165125f8 <line:620:1, line:622:79> line:620:12 pthread_condattr_setclock 'int (pthread_condattr_t *, __clockid_t)' extern
| |-ParmVarDecl 0x55f616512478 <col:39, col:59> col:59 __attr 'pthread_condattr_t *'
| |-ParmVarDecl 0x55f6165124f0 <line:621:11, col:23> col:23 __clock_id '__clockid_t':'int'
| |-NoThrowAttr 0x55f6165126a8 <line:622:22>
| `-NonNullAttr 0x55f616512700 <col:63, col:77> 1
|-FunctionDecl 0x55f6165129a8 <line:623:1, line:624:79> line:623:12 pthread_spin_init 'int (pthread_spinlock_t *, int)' extern
| |-ParmVarDecl 0x55f6165127e0 <col:31, col:51> col:51 __lock 'pthread_spinlock_t *'
| |-ParmVarDecl 0x55f616512860 <col:59, col:63> col:63 __pshared 'int'
| |-NoThrowAttr 0x55f616512a58 <line:624:22>
| `-NonNullAttr 0x55f616512ae0 <col:63, col:77> 1
|-FunctionDecl 0x55f616512c58 <line:625:1, line:626:79> line:625:12 pthread_spin_destroy 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x55f616512b28 <col:34, col:54> col:54 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x55f616512d00 <line:626:22>
| `-NonNullAttr 0x55f616512d58 <col:63, col:77> 1
|-FunctionDecl 0x55f616512e60 <line:627:1, line:628:68> line:627:12 pthread_spin_lock 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x55f616512da8 <col:31, col:51> col:51 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x55f616512f08 <line:628:22>
| `-NonNullAttr 0x55f616512f60 <col:52, col:66> 1
|-FunctionDecl 0x55f616513060 <line:629:1, line:630:68> line:629:12 pthread_spin_trylock 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x55f616512fa8 <col:34, col:54> col:54 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x55f616513108 <line:630:22>
| `-NonNullAttr 0x55f616513160 <col:52, col:66> 1
|-FunctionDecl 0x55f616513260 <line:631:1, line:632:68> line:631:12 pthread_spin_unlock 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x55f6165131a8 <col:33, col:53> col:53 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x55f616513308 <line:632:22>
| `-NonNullAttr 0x55f616513360 <col:52, col:66> 1
|-FunctionDecl 0x55f616513738 <line:633:1, line:636:79> line:633:12 pthread_barrier_init 'int (pthread_barrier_t *restrict, const pthread_barrierattr_t *restrict, unsigned int)' extern
| |-ParmVarDecl 0x55f616513440 <col:34, col:64> col:64 __barrier 'pthread_barrier_t *restrict'
| |-ParmVarDecl 0x55f616513550 <line:634:6, line:635:6> col:6 __attr 'const pthread_barrierattr_t *restrict'
| |-ParmVarDecl 0x55f6165135d0 <col:14, col:27> col:27 __count 'unsigned int'
| |-NoThrowAttr 0x55f6165137f0 <line:636:22>
| `-NonNullAttr 0x55f616513848 <col:63, col:77> 1
|-FunctionDecl 0x55f6165139c8 <line:637:1, line:638:79> line:637:12 pthread_barrier_destroy 'int (pthread_barrier_t *)' extern
| |-ParmVarDecl 0x55f616513898 <col:37, col:56> col:56 __barrier 'pthread_barrier_t *'
| |-NoThrowAttr 0x55f616513a70 <line:638:22>
| `-NonNullAttr 0x55f616514b00 <col:63, col:77> 1
|-FunctionDecl 0x55f616514c00 <line:639:1, line:640:68> line:639:12 pthread_barrier_wait 'int (pthread_barrier_t *)' extern
| |-ParmVarDecl 0x55f616514b48 <col:34, col:53> col:53 __barrier 'pthread_barrier_t *'
| |-NoThrowAttr 0x55f616514ca8 <line:640:22>
| `-NonNullAttr 0x55f616514d00 <col:52, col:66> 1
|-FunctionDecl 0x55f616514ee8 <line:641:1, line:642:79> line:641:12 pthread_barrierattr_init 'int (pthread_barrierattr_t *)' extern
| |-ParmVarDecl 0x55f616514db0 <col:38, col:61> col:61 __attr 'pthread_barrierattr_t *'
| |-NoThrowAttr 0x55f616514f90 <line:642:22>
| `-NonNullAttr 0x55f616514fe8 <col:63, col:77> 1
|-FunctionDecl 0x55f6165150f0 <line:643:1, line:644:79> line:643:12 pthread_barrierattr_destroy 'int (pthread_barrierattr_t *)' extern
| |-ParmVarDecl 0x55f616515038 <col:41, col:64> col:64 __attr 'pthread_barrierattr_t *'
| |-NoThrowAttr 0x55f616515198 <line:644:22>
| `-NonNullAttr 0x55f6165151f0 <col:63, col:77> 1
|-FunctionDecl 0x55f616515418 <line:645:1, line:648:82> line:645:12 pthread_barrierattr_getpshared 'int (const pthread_barrierattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x55f616515238 <col:44, line:646:20> col:20 __attr 'const pthread_barrierattr_t *restrict'
| |-ParmVarDecl 0x55f6165152b8 <line:647:9, col:25> col:25 __pshared 'int *restrict'
| |-NoThrowAttr 0x55f6165154c8 <line:648:22>
| `-NonNullAttr 0x55f616515520 <col:63, col:80> 1 2
|-FunctionDecl 0x55f616515728 <line:649:1, line:651:79> line:649:12 pthread_barrierattr_setpshared 'int (pthread_barrierattr_t *, int)' extern
| |-ParmVarDecl 0x55f616515568 <col:44, col:67> col:67 __attr 'pthread_barrierattr_t *'
| |-ParmVarDecl 0x55f6165155e8 <line:650:9, col:13> col:13 __pshared 'int'
| |-NoThrowAttr 0x55f6165157d8 <line:651:22>
| `-NonNullAttr 0x55f616515830 <col:63, col:77> 1
|-FunctionDecl 0x55f616515b98 <line:652:1, line:654:79> line:652:12 pthread_key_create 'int (pthread_key_t *, void (*)(void *))' extern
| |-ParmVarDecl 0x55f616515910 <col:32, col:47> col:47 __key 'pthread_key_t *'
| |-ParmVarDecl 0x55f616515a30 <line:653:11, col:43> col:18 __destr_function 'void (*)(void *)'
| |-NoThrowAttr 0x55f616515c48 <line:654:22>
| `-NonNullAttr 0x55f616515ca0 <col:63, col:77> 1
|-FunctionDecl 0x55f616515df8 <line:655:1, col:92> col:12 pthread_key_delete 'int (pthread_key_t)' extern
| |-ParmVarDecl 0x55f616515ce8 <col:32, col:46> col:46 __key 'pthread_key_t':'unsigned int'
| `-NoThrowAttr 0x55f616515ea0 <col:69>
|-FunctionDecl 0x55f616516018 <line:656:1, col:95> col:14 pthread_getspecific 'void *(pthread_key_t)' extern
| |-ParmVarDecl 0x55f616515f08 <col:35, col:49> col:49 __key 'pthread_key_t':'unsigned int'
| `-NoThrowAttr 0x55f6165160c0 <col:72>
|-FunctionDecl 0x55f6165162f8 <line:657:1, line:658:67> line:657:12 pthread_setspecific 'int (pthread_key_t, const void *)' extern
| |-ParmVarDecl 0x55f616516128 <col:33, col:47> col:47 __key 'pthread_key_t':'unsigned int'
| |-ParmVarDecl 0x55f6165161d8 <line:658:5, col:17> col:17 __pointer 'const void *'
| `-NoThrowAttr 0x55f6165163a8 <col:44>
|-FunctionDecl 0x55f6165165c8 <line:659:1, line:661:79> line:659:12 pthread_getcpuclockid 'int (pthread_t, __clockid_t *)' extern
| |-ParmVarDecl 0x55f616516410 <col:35, col:45> col:45 __thread_id 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x55f616516488 <line:660:7, col:20> col:20 __clock_id '__clockid_t *'
| |-NoThrowAttr 0x55f616516678 <line:661:22>
| `-NonNullAttr 0x55f6165166d0 <col:63, col:77> 2
|-FunctionDecl 0x55f616516b30 <line:662:1, line:664:70> line:662:12 pthread_atfork 'int (void (*)(void), void (*)(void), void (*)(void))' extern
| |-ParmVarDecl 0x55f6165167b0 <col:28, col:51> col:35 __prepare 'void (*)(void)'
| |-ParmVarDecl 0x55f6165168c0 <line:663:7, col:29> col:14 __parent 'void (*)(void)'
| |-ParmVarDecl 0x55f6165169d0 <line:664:7, col:28> col:14 __child 'void (*)(void)'
| `-NoThrowAttr 0x55f616516be8 <col:47>
|-FunctionDecl 0x55f616516cf0 <line:666:1, col:20> col:8 used P0 'void *(void *)'
| `-ParmVarDecl 0x55f616516c58 <col:11, col:17> col:17 arg 'void *'
|-FunctionDecl 0x55f616516e48 <line:667:1, col:20> col:8 used P1 'void *(void *)'
| `-ParmVarDecl 0x55f616516db0 <col:11, col:17> col:17 arg 'void *'
|-FunctionDecl 0x55f616516f10 <line:668:1, col:12> col:6 fence 'void ()'
|-FunctionDecl 0x55f616516fd0 <line:669:1, col:12> col:6 isync 'void ()'
|-FunctionDecl 0x55f616517090 <line:670:1, col:14> col:6 lwfence 'void ()'
|-VarDecl 0x55f616517148 <line:671:1, col:5> col:5 used __unbuffered_cnt 'int'
|-VarDecl 0x55f6165171c8 prev 0x55f616517148 <line:672:1, col:24> col:5 used __unbuffered_cnt 'int' cinit
| `-IntegerLiteral 0x55f616517230 <col:24> 'int' 0
|-VarDecl 0x55f616517268 <line:673:1, col:5> col:5 used __unbuffered_p0_EAX 'int'
|-VarDecl 0x55f6165172e8 prev 0x55f616517268 <line:674:1, col:27> col:5 used __unbuffered_p0_EAX 'int' cinit
| `-IntegerLiteral 0x55f616517350 <col:27> 'int' 0
|-VarDecl 0x55f616517388 <line:675:1, col:5> col:5 used __unbuffered_p1_EAX 'int'
|-VarDecl 0x55f616517408 prev 0x55f616517388 <line:676:1, col:27> col:5 used __unbuffered_p1_EAX 'int' cinit
| `-IntegerLiteral 0x55f616517470 <col:27> 'int' 0
|-VarDecl 0x55f6165174a8 <line:677:1, col:5> col:5 used __unbuffered_p1_EBX 'int'
|-VarDecl 0x55f616517528 prev 0x55f6165174a8 <line:678:1, col:27> col:5 used __unbuffered_p1_EBX 'int' cinit
| `-IntegerLiteral 0x55f616517590 <col:27> 'int' 0
|-VarDecl 0x55f6165175c0 <line:679:1, col:7> col:7 used main$tmp_guard0 '_Bool'
|-VarDecl 0x55f616517638 <line:680:1, col:7> col:7 used main$tmp_guard1 '_Bool'
|-VarDecl 0x55f6165176b8 <line:681:1, col:5> col:5 used x 'int'
|-VarDecl 0x55f616517738 prev 0x55f6165176b8 <line:682:1, col:9> col:5 used x 'int' cinit
| `-IntegerLiteral 0x55f6165177a0 <col:9> 'int' 0
|-VarDecl 0x55f6165177d8 <line:683:1, col:5> col:5 used y 'int'
|-VarDecl 0x55f616517858 prev 0x55f6165177d8 <line:684:1, col:9> col:5 used y 'int' cinit
| `-IntegerLiteral 0x55f6165178c0 <col:9> 'int' 0
|-VarDecl 0x55f6165178f0 <line:685:1, col:7> col:7 used y$flush_delayed '_Bool'
|-VarDecl 0x55f616517970 <line:686:1, col:5> col:5 used y$mem_tmp 'int'
|-VarDecl 0x55f6165179e8 <line:687:1, col:7> col:7 used y$r_buff0_thd0 '_Bool'
|-VarDecl 0x55f616517a60 <line:688:1, col:7> col:7 used y$r_buff0_thd1 '_Bool'
|-VarDecl 0x55f616517b00 <line:689:1, col:7> col:7 used y$r_buff0_thd2 '_Bool'
|-VarDecl 0x55f616517b78 <line:690:1, col:7> col:7 used y$r_buff1_thd0 '_Bool'
|-VarDecl 0x55f616517bf0 <line:691:1, col:7> col:7 used y$r_buff1_thd1 '_Bool'
|-VarDecl 0x55f616517c68 <line:692:1, col:7> col:7 used y$r_buff1_thd2 '_Bool'
|-VarDecl 0x55f616517ce0 <line:693:1, col:7> col:7 y$read_delayed '_Bool'
|-VarDecl 0x55f616517d60 <line:694:1, col:6> col:6 y$read_delayed_var 'int *'
|-VarDecl 0x55f616517de0 <line:695:1, col:5> col:5 used y$w_buff0 'int'
|-VarDecl 0x55f616517e58 <line:696:1, col:7> col:7 used y$w_buff0_used '_Bool'
|-VarDecl 0x55f616517ed8 <line:697:1, col:5> col:5 used y$w_buff1 'int'
|-VarDecl 0x55f616517f50 <line:698:1, col:7> col:7 used y$w_buff1_used '_Bool'
|-VarDecl 0x55f616517fc8 <line:699:1, col:7> col:7 used weak$$choice0 '_Bool'
|-VarDecl 0x55f616518040 <line:700:1, col:7> col:7 used weak$$choice2 '_Bool'
|-FunctionDecl 0x55f616518158 prev 0x55f616516cf0 <line:701:1, line:730:1> line:701:8 used P0 'void *(void *)'
| |-ParmVarDecl 0x55f6165180c0 <col:11, col:17> col:17 arg 'void *'
| `-CompoundStmt 0x55f61651b198 <line:702:1, line:730:1>
|   |-CallExpr 0x55f616518268 <line:703:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x55f616518250 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55f616518200 <col:3> 'void ()' Function 0x55f6164bdfa0 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x55f6165182c8 <line:704:3, col:7> 'int' '='
|   | |-DeclRefExpr 0x55f616518288 <col:3> 'int' lvalue Var 0x55f616517738 'x' 'int'
|   | `-IntegerLiteral 0x55f6165182a8 <col:7> 'int' 1
|   |-CallExpr 0x55f616518320 <line:705:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x55f616518308 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55f6165182e8 <col:3> 'void ()' Function 0x55f6164be060 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x55f616518378 <line:706:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x55f616518360 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55f616518340 <col:3> 'void ()' Function 0x55f6164bdfa0 '__VERIFIER_atomic_begin' 'void ()'
|   |-CallExpr 0x55f6165183d0 <line:707:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x55f6165183b8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55f616518398 <col:3> 'void ()' Function 0x55f6164be060 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x55f616518428 <line:708:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x55f616518410 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55f6165183f0 <col:3> 'void ()' Function 0x55f6164bdfa0 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x55f6165184f8 <line:709:3, col:42> '_Bool' '='
|   | |-DeclRefExpr 0x55f616518448 <col:3> '_Bool' lvalue Var 0x55f616517fc8 'weak$$choice0' '_Bool'
|   | `-CallExpr 0x55f6165184d8 <col:19, col:42> '_Bool'
|   |   `-ImplicitCastExpr 0x55f6165184c0 <col:19> '_Bool (*)(void)' <FunctionToPointerDecay>
|   |     `-DeclRefExpr 0x55f616518468 <col:19> '_Bool (void)' Function 0x55f6164bd770 '__VERIFIER_nondet_bool' '_Bool (void)'
|   |-BinaryOperator 0x55f616518590 <line:710:3, col:42> '_Bool' '='
|   | |-DeclRefExpr 0x55f616518518 <col:3> '_Bool' lvalue Var 0x55f616518040 'weak$$choice2' '_Bool'
|   | `-CallExpr 0x55f616518570 <col:19, col:42> '_Bool'
|   |   `-ImplicitCastExpr 0x55f616518558 <col:19> '_Bool (*)(void)' <FunctionToPointerDecay>
|   |     `-DeclRefExpr 0x55f616518538 <col:19> '_Bool (void)' Function 0x55f6164bd770 '__VERIFIER_nondet_bool' '_Bool (void)'
|   |-BinaryOperator 0x55f616518608 <line:711:3, col:21> '_Bool' '='
|   | |-DeclRefExpr 0x55f6165185b0 <col:3> '_Bool' lvalue Var 0x55f6165178f0 'y$flush_delayed' '_Bool'
|   | `-ImplicitCastExpr 0x55f6165185f0 <col:21> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x55f6165185d0 <col:21> '_Bool' lvalue Var 0x55f616518040 'weak$$choice2' '_Bool'
|   |-BinaryOperator 0x55f616518680 <line:712:3, col:15> 'int' '='
|   | |-DeclRefExpr 0x55f616518628 <col:3> 'int' lvalue Var 0x55f616517970 'y$mem_tmp' 'int'
|   | `-ImplicitCastExpr 0x55f616518668 <col:15> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x55f616518648 <col:15> 'int' lvalue Var 0x55f616517858 'y' 'int'
|   |-BinaryOperator 0x55f616518ab8 <line:713:3, col:162> 'int' '='
|   | |-DeclRefExpr 0x55f6165186a0 <col:3> 'int' lvalue Var 0x55f616517858 'y' 'int'
|   | `-ConditionalOperator 0x55f616518a88 <col:7, col:162> 'int'
|   |   |-BinaryOperator 0x55f6165188b0 <col:7, col:84> 'int' '||'
|   |   | |-BinaryOperator 0x55f6165187d0 <col:7, col:46> 'int' '||'
|   |   | | |-UnaryOperator 0x55f6165186f8 <col:7, col:8> 'int' prefix '!' cannot overflow
|   |   | | | `-ImplicitCastExpr 0x55f6165186e0 <col:8> '_Bool' <LValueToRValue>
|   |   | | |   `-DeclRefExpr 0x55f6165186c0 <col:8> '_Bool' lvalue Var 0x55f616517e58 'y$w_buff0_used' '_Bool'
|   |   | | `-BinaryOperator 0x55f6165187b0 <col:26, col:46> 'int' '&&'
|   |   | |   |-UnaryOperator 0x55f616518748 <col:26, col:27> 'int' prefix '!' cannot overflow
|   |   | |   | `-ImplicitCastExpr 0x55f616518730 <col:27> '_Bool' <LValueToRValue>
|   |   | |   |   `-DeclRefExpr 0x55f616518710 <col:27> '_Bool' lvalue Var 0x55f616517a60 'y$r_buff0_thd1' '_Bool'
|   |   | |   `-UnaryOperator 0x55f616518798 <col:45, col:46> 'int' prefix '!' cannot overflow
|   |   | |     `-ImplicitCastExpr 0x55f616518780 <col:46> '_Bool' <LValueToRValue>
|   |   | |       `-DeclRefExpr 0x55f616518760 <col:46> '_Bool' lvalue Var 0x55f616517f50 'y$w_buff1_used' '_Bool'
|   |   | `-BinaryOperator 0x55f616518890 <col:64, col:84> 'int' '&&'
|   |   |   |-UnaryOperator 0x55f616518828 <col:64, col:65> 'int' prefix '!' cannot overflow
|   |   |   | `-ImplicitCastExpr 0x55f616518810 <col:65> '_Bool' <LValueToRValue>
|   |   |   |   `-DeclRefExpr 0x55f6165187f0 <col:65> '_Bool' lvalue Var 0x55f616517a60 'y$r_buff0_thd1' '_Bool'
|   |   |   `-UnaryOperator 0x55f616518878 <col:83, col:84> 'int' prefix '!' cannot overflow
|   |   |     `-ImplicitCastExpr 0x55f616518860 <col:84> '_Bool' <LValueToRValue>
|   |   |       `-DeclRefExpr 0x55f616518840 <col:84> '_Bool' lvalue Var 0x55f616517bf0 'y$r_buff1_thd1' '_Bool'
|   |   |-ImplicitCastExpr 0x55f616518a70 <col:101> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x55f6165188d0 <col:101> 'int' lvalue Var 0x55f616517858 'y' 'int'
|   |   `-ParenExpr 0x55f616518a50 <col:105, col:162> 'int'
|   |     `-ConditionalOperator 0x55f616518a20 <col:106, col:153> 'int'
|   |       |-BinaryOperator 0x55f616518990 <col:106, col:124> 'int' '&&'
|   |       | |-ImplicitCastExpr 0x55f616518948 <col:106> 'int' <IntegralCast>
|   |       | | `-ImplicitCastExpr 0x55f616518930 <col:106> '_Bool' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x55f6165188f0 <col:106> '_Bool' lvalue Var 0x55f616517e58 'y$w_buff0_used' '_Bool'
|   |       | `-ImplicitCastExpr 0x55f616518978 <col:124> 'int' <IntegralCast>
|   |       |   `-ImplicitCastExpr 0x55f616518960 <col:124> '_Bool' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x55f616518910 <col:124> '_Bool' lvalue Var 0x55f616517a60 'y$r_buff0_thd1' '_Bool'
|   |       |-ImplicitCastExpr 0x55f6165189f0 <col:141> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x55f6165189b0 <col:141> 'int' lvalue Var 0x55f616517de0 'y$w_buff0' 'int'
|   |       `-ImplicitCastExpr 0x55f616518a08 <col:153> 'int' <LValueToRValue>
|   |         `-DeclRefExpr 0x55f6165189d0 <col:153> 'int' lvalue Var 0x55f616517ed8 'y$w_buff1' 'int'
|   |-BinaryOperator 0x55f616518fe0 <line:714:3, col:208> 'int' '='
|   | |-DeclRefExpr 0x55f616518ad8 <col:3> 'int' lvalue Var 0x55f616517de0 'y$w_buff0' 'int'
|   | `-ConditionalOperator 0x55f616518fb0 <col:15, col:208> 'int'
|   |   |-ImplicitCastExpr 0x55f616518f80 <col:15> 'int' <IntegralCast>
|   |   | `-ImplicitCastExpr 0x55f616518f68 <col:15> '_Bool' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x55f616518b10 <col:15> '_Bool' lvalue Var 0x55f616518040 'weak$$choice2' '_Bool'
|   |   |-ImplicitCastExpr 0x55f616518f98 <col:31> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x55f616518b30 <col:31> 'int' lvalue Var 0x55f616517de0 'y$w_buff0' 'int'
|   |   `-ParenExpr 0x55f616518f48 <col:43, col:208> 'int'
|   |     `-ConditionalOperator 0x55f616518f18 <col:44, col:207> 'int'
|   |       |-BinaryOperator 0x55f616518d40 <col:44, col:121> 'int' '||'
|   |       | |-BinaryOperator 0x55f616518c60 <col:44, col:83> 'int' '||'
|   |       | | |-UnaryOperator 0x55f616518b88 <col:44, col:45> 'int' prefix '!' cannot overflow
|   |       | | | `-ImplicitCastExpr 0x55f616518b70 <col:45> '_Bool' <LValueToRValue>
|   |       | | |   `-DeclRefExpr 0x55f616518b50 <col:45> '_Bool' lvalue Var 0x55f616517e58 'y$w_buff0_used' '_Bool'
|   |       | | `-BinaryOperator 0x55f616518c40 <col:63, col:83> 'int' '&&'
|   |       | |   |-UnaryOperator 0x55f616518bd8 <col:63, col:64> 'int' prefix '!' cannot overflow
|   |       | |   | `-ImplicitCastExpr 0x55f616518bc0 <col:64> '_Bool' <LValueToRValue>
|   |       | |   |   `-DeclRefExpr 0x55f616518ba0 <col:64> '_Bool' lvalue Var 0x55f616517a60 'y$r_buff0_thd1' '_Bool'
|   |       | |   `-UnaryOperator 0x55f616518c28 <col:82, col:83> 'int' prefix '!' cannot overflow
|   |       | |     `-ImplicitCastExpr 0x55f616518c10 <col:83> '_Bool' <LValueToRValue>
|   |       | |       `-DeclRefExpr 0x55f616518bf0 <col:83> '_Bool' lvalue Var 0x55f616517f50 'y$w_buff1_used' '_Bool'
|   |       | `-BinaryOperator 0x55f616518d20 <col:101, col:121> 'int' '&&'
|   |       |   |-UnaryOperator 0x55f616518cb8 <col:101, col:102> 'int' prefix '!' cannot overflow
|   |       |   | `-ImplicitCastExpr 0x55f616518ca0 <col:102> '_Bool' <LValueToRValue>
|   |       |   |   `-DeclRefExpr 0x55f616518c80 <col:102> '_Bool' lvalue Var 0x55f616517a60 'y$r_buff0_thd1' '_Bool'
|   |       |   `-UnaryOperator 0x55f616518d08 <col:120, col:121> 'int' prefix '!' cannot overflow
|   |       |     `-ImplicitCastExpr 0x55f616518cf0 <col:121> '_Bool' <LValueToRValue>
|   |       |       `-DeclRefExpr 0x55f616518cd0 <col:121> '_Bool' lvalue Var 0x55f616517bf0 'y$r_buff1_thd1' '_Bool'
|   |       |-ImplicitCastExpr 0x55f616518f00 <col:138> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x55f616518d60 <col:138> 'int' lvalue Var 0x55f616517de0 'y$w_buff0' 'int'
|   |       `-ParenExpr 0x55f616518ee0 <col:150, col:207> 'int'
|   |         `-ConditionalOperator 0x55f616518eb0 <col:151, col:198> 'int'
|   |           |-BinaryOperator 0x55f616518e20 <col:151, col:169> 'int' '&&'
|   |           | |-ImplicitCastExpr 0x55f616518dd8 <col:151> 'int' <IntegralCast>
|   |           | | `-ImplicitCastExpr 0x55f616518dc0 <col:151> '_Bool' <LValueToRValue>
|   |           | |   `-DeclRefExpr 0x55f616518d80 <col:151> '_Bool' lvalue Var 0x55f616517e58 'y$w_buff0_used' '_Bool'
|   |           | `-ImplicitCastExpr 0x55f616518e08 <col:169> 'int' <IntegralCast>
|   |           |   `-ImplicitCastExpr 0x55f616518df0 <col:169> '_Bool' <LValueToRValue>
|   |           |     `-DeclRefExpr 0x55f616518da0 <col:169> '_Bool' lvalue Var 0x55f616517a60 'y$r_buff0_thd1' '_Bool'
|   |           |-ImplicitCastExpr 0x55f616518e80 <col:186> 'int' <LValueToRValue>
|   |           | `-DeclRefExpr 0x55f616518e40 <col:186> 'int' lvalue Var 0x55f616517de0 'y$w_buff0' 'int'
|   |           `-ImplicitCastExpr 0x55f616518e98 <col:198> 'int' <LValueToRValue>
|   |             `-DeclRefExpr 0x55f616518e60 <col:198> 'int' lvalue Var 0x55f616517de0 'y$w_buff0' 'int'
|   |-BinaryOperator 0x55f6165194f0 <line:715:3, col:208> 'int' '='
|   | |-DeclRefExpr 0x55f616519000 <col:3> 'int' lvalue Var 0x55f616517ed8 'y$w_buff1' 'int'
|   | `-ConditionalOperator 0x55f6165194c0 <col:15, col:208> 'int'
|   |   |-ImplicitCastExpr 0x55f616519490 <col:15> 'int' <IntegralCast>
|   |   | `-ImplicitCastExpr 0x55f616519478 <col:15> '_Bool' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x55f616519020 <col:15> '_Bool' lvalue Var 0x55f616518040 'weak$$choice2' '_Bool'
|   |   |-ImplicitCastExpr 0x55f6165194a8 <col:31> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x55f616519040 <col:31> 'int' lvalue Var 0x55f616517ed8 'y$w_buff1' 'int'
|   |   `-ParenExpr 0x55f616519458 <col:43, col:208> 'int'
|   |     `-ConditionalOperator 0x55f616519428 <col:44, col:207> 'int'
|   |       |-BinaryOperator 0x55f616519250 <col:44, col:121> 'int' '||'
|   |       | |-BinaryOperator 0x55f616519170 <col:44, col:83> 'int' '||'
|   |       | | |-UnaryOperator 0x55f616519098 <col:44, col:45> 'int' prefix '!' cannot overflow
|   |       | | | `-ImplicitCastExpr 0x55f616519080 <col:45> '_Bool' <LValueToRValue>
|   |       | | |   `-DeclRefExpr 0x55f616519060 <col:45> '_Bool' lvalue Var 0x55f616517e58 'y$w_buff0_used' '_Bool'
|   |       | | `-BinaryOperator 0x55f616519150 <col:63, col:83> 'int' '&&'
|   |       | |   |-UnaryOperator 0x55f6165190e8 <col:63, col:64> 'int' prefix '!' cannot overflow
|   |       | |   | `-ImplicitCastExpr 0x55f6165190d0 <col:64> '_Bool' <LValueToRValue>
|   |       | |   |   `-DeclRefExpr 0x55f6165190b0 <col:64> '_Bool' lvalue Var 0x55f616517a60 'y$r_buff0_thd1' '_Bool'
|   |       | |   `-UnaryOperator 0x55f616519138 <col:82, col:83> 'int' prefix '!' cannot overflow
|   |       | |     `-ImplicitCastExpr 0x55f616519120 <col:83> '_Bool' <LValueToRValue>
|   |       | |       `-DeclRefExpr 0x55f616519100 <col:83> '_Bool' lvalue Var 0x55f616517f50 'y$w_buff1_used' '_Bool'
|   |       | `-BinaryOperator 0x55f616519230 <col:101, col:121> 'int' '&&'
|   |       |   |-UnaryOperator 0x55f6165191c8 <col:101, col:102> 'int' prefix '!' cannot overflow
|   |       |   | `-ImplicitCastExpr 0x55f6165191b0 <col:102> '_Bool' <LValueToRValue>
|   |       |   |   `-DeclRefExpr 0x55f616519190 <col:102> '_Bool' lvalue Var 0x55f616517a60 'y$r_buff0_thd1' '_Bool'
|   |       |   `-UnaryOperator 0x55f616519218 <col:120, col:121> 'int' prefix '!' cannot overflow
|   |       |     `-ImplicitCastExpr 0x55f616519200 <col:121> '_Bool' <LValueToRValue>
|   |       |       `-DeclRefExpr 0x55f6165191e0 <col:121> '_Bool' lvalue Var 0x55f616517bf0 'y$r_buff1_thd1' '_Bool'
|   |       |-ImplicitCastExpr 0x55f616519410 <col:138> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x55f616519270 <col:138> 'int' lvalue Var 0x55f616517ed8 'y$w_buff1' 'int'
|   |       `-ParenExpr 0x55f6165193f0 <col:150, col:207> 'int'
|   |         `-ConditionalOperator 0x55f6165193c0 <col:151, col:198> 'int'
|   |           |-BinaryOperator 0x55f616519330 <col:151, col:169> 'int' '&&'
|   |           | |-ImplicitCastExpr 0x55f6165192e8 <col:151> 'int' <IntegralCast>
|   |           | | `-ImplicitCastExpr 0x55f6165192d0 <col:151> '_Bool' <LValueToRValue>
|   |           | |   `-DeclRefExpr 0x55f616519290 <col:151> '_Bool' lvalue Var 0x55f616517e58 'y$w_buff0_used' '_Bool'
|   |           | `-ImplicitCastExpr 0x55f616519318 <col:169> 'int' <IntegralCast>
|   |           |   `-ImplicitCastExpr 0x55f616519300 <col:169> '_Bool' <LValueToRValue>
|   |           |     `-DeclRefExpr 0x55f6165192b0 <col:169> '_Bool' lvalue Var 0x55f616517a60 'y$r_buff0_thd1' '_Bool'
|   |           |-ImplicitCastExpr 0x55f616519390 <col:186> 'int' <LValueToRValue>
|   |           | `-DeclRefExpr 0x55f616519350 <col:186> 'int' lvalue Var 0x55f616517ed8 'y$w_buff1' 'int'
|   |           `-ImplicitCastExpr 0x55f6165193a8 <col:198> 'int' <LValueToRValue>
|   |             `-DeclRefExpr 0x55f616519370 <col:198> 'int' lvalue Var 0x55f616517ed8 'y$w_buff1' 'int'
|   |-BinaryOperator 0x55f616519a98 <line:716:3, col:227> '_Bool' '='
|   | |-DeclRefExpr 0x55f616519510 <col:3> '_Bool' lvalue Var 0x55f616517e58 'y$w_buff0_used' '_Bool'
|   | `-ImplicitCastExpr 0x55f616519a80 <col:20, col:227> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55f616519a50 <col:20, col:227> 'int'
|   |     |-ImplicitCastExpr 0x55f616519a08 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x55f6165199f0 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x55f616519530 <col:20> '_Bool' lvalue Var 0x55f616518040 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x55f616519a38 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x55f616519a20 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x55f616519550 <col:36> '_Bool' lvalue Var 0x55f616517e58 'y$w_buff0_used' '_Bool'
|   |     `-ParenExpr 0x55f6165199d0 <col:53, col:227> 'int'
|   |       `-ConditionalOperator 0x55f6165199a0 <col:54, col:226> 'int'
|   |         |-BinaryOperator 0x55f616519760 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x55f616519680 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x55f6165195a8 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x55f616519590 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x55f616519570 <col:55> '_Bool' lvalue Var 0x55f616517e58 'y$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x55f616519660 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x55f6165195f8 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x55f6165195e0 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x55f6165195c0 <col:74> '_Bool' lvalue Var 0x55f616517a60 'y$r_buff0_thd1' '_Bool'
|   |         | |   `-UnaryOperator 0x55f616519648 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x55f616519630 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x55f616519610 <col:93> '_Bool' lvalue Var 0x55f616517f50 'y$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x55f616519740 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x55f6165196d8 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x55f6165196c0 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x55f6165196a0 <col:112> '_Bool' lvalue Var 0x55f616517a60 'y$r_buff0_thd1' '_Bool'
|   |         |   `-UnaryOperator 0x55f616519728 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x55f616519710 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x55f6165196f0 <col:131> '_Bool' lvalue Var 0x55f616517bf0 'y$r_buff1_thd1' '_Bool'
|   |         |-ImplicitCastExpr 0x55f616519988 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x55f616519970 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x55f616519780 <col:148> '_Bool' lvalue Var 0x55f616517e58 'y$w_buff0_used' '_Bool'
|   |         `-ParenExpr 0x55f616519950 <col:165, col:226> 'int'
|   |           `-ConditionalOperator 0x55f616519920 <col:166, col:212> 'int'
|   |             |-BinaryOperator 0x55f616519840 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x55f6165197f8 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x55f6165197e0 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x55f6165197a0 <col:166> '_Bool' lvalue Var 0x55f616517e58 'y$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x55f616519828 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x55f616519810 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x55f6165197c0 <col:184> '_Bool' lvalue Var 0x55f616517a60 'y$r_buff0_thd1' '_Bool'
|   |             |-ImplicitCastExpr 0x55f6165198d8 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x55f616519890 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x55f616519860 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x55f616519908 <col:212> 'int' <IntegralCast>
|   |               `-ImplicitCastExpr 0x55f6165198f0 <col:212> '_Bool' <LValueToRValue>
|   |                 `-DeclRefExpr 0x55f6165198b8 <col:212> '_Bool' lvalue Var 0x55f616517e58 'y$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x55f61651a088 <line:717:3, col:221> '_Bool' '='
|   | |-DeclRefExpr 0x55f616519ab8 <col:3> '_Bool' lvalue Var 0x55f616517f50 'y$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x55f61651a070 <col:20, col:221> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55f61651a040 <col:20, col:221> 'int'
|   |     |-ImplicitCastExpr 0x55f616519ff8 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x55f616519fe0 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x55f616519ad8 <col:20> '_Bool' lvalue Var 0x55f616518040 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x55f61651a028 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x55f61651a010 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x55f616519b20 <col:36> '_Bool' lvalue Var 0x55f616517f50 'y$w_buff1_used' '_Bool'
|   |     `-ParenExpr 0x55f616519fc0 <col:53, col:221> 'int'
|   |       `-ConditionalOperator 0x55f616519f90 <col:54, col:220> 'int'
|   |         |-BinaryOperator 0x55f616519d30 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x55f616519c50 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x55f616519b78 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x55f616519b60 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x55f616519b40 <col:55> '_Bool' lvalue Var 0x55f616517e58 'y$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x55f616519c30 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x55f616519bc8 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x55f616519bb0 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x55f616519b90 <col:74> '_Bool' lvalue Var 0x55f616517a60 'y$r_buff0_thd1' '_Bool'
|   |         | |   `-UnaryOperator 0x55f616519c18 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x55f616519c00 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x55f616519be0 <col:93> '_Bool' lvalue Var 0x55f616517f50 'y$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x55f616519d10 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x55f616519ca8 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x55f616519c90 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x55f616519c70 <col:112> '_Bool' lvalue Var 0x55f616517a60 'y$r_buff0_thd1' '_Bool'
|   |         |   `-UnaryOperator 0x55f616519cf8 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x55f616519ce0 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x55f616519cc0 <col:131> '_Bool' lvalue Var 0x55f616517bf0 'y$r_buff1_thd1' '_Bool'
|   |         |-ImplicitCastExpr 0x55f616519f78 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x55f616519f60 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x55f616519d50 <col:148> '_Bool' lvalue Var 0x55f616517f50 'y$w_buff1_used' '_Bool'
|   |         `-ParenExpr 0x55f616519f40 <col:165, col:220> 'int'
|   |           `-ConditionalOperator 0x55f616519f10 <col:166, col:219> 'int'
|   |             |-BinaryOperator 0x55f616519e10 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x55f616519dc8 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x55f616519db0 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x55f616519d70 <col:166> '_Bool' lvalue Var 0x55f616517e58 'y$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x55f616519df8 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x55f616519de0 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x55f616519d90 <col:184> '_Bool' lvalue Var 0x55f616517a60 'y$r_buff0_thd1' '_Bool'
|   |             |-ImplicitCastExpr 0x55f616519ee0 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x55f616519e60 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x55f616519e30 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x55f616519ef8 <col:212, col:219> 'int' <IntegralCast>
|   |               `-CStyleCastExpr 0x55f616519eb8 <col:212, col:219> '_Bool' <IntegralToBoolean>
|   |                 `-IntegerLiteral 0x55f616519e88 <col:219> 'int' 0
|   |-BinaryOperator 0x55f61651a630 <line:718:3, col:227> '_Bool' '='
|   | |-DeclRefExpr 0x55f61651a0a8 <col:3> '_Bool' lvalue Var 0x55f616517a60 'y$r_buff0_thd1' '_Bool'
|   | `-ImplicitCastExpr 0x55f61651a618 <col:20, col:227> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55f61651a5e8 <col:20, col:227> 'int'
|   |     |-ImplicitCastExpr 0x55f61651a5a0 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x55f61651a588 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x55f61651a0c8 <col:20> '_Bool' lvalue Var 0x55f616518040 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x55f61651a5d0 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x55f61651a5b8 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x55f61651a0e8 <col:36> '_Bool' lvalue Var 0x55f616517a60 'y$r_buff0_thd1' '_Bool'
|   |     `-ParenExpr 0x55f61651a568 <col:53, col:227> 'int'
|   |       `-ConditionalOperator 0x55f61651a538 <col:54, col:226> 'int'
|   |         |-BinaryOperator 0x55f61651a2f8 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x55f61651a218 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x55f61651a140 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x55f61651a128 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x55f61651a108 <col:55> '_Bool' lvalue Var 0x55f616517e58 'y$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x55f61651a1f8 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x55f61651a190 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x55f61651a178 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x55f61651a158 <col:74> '_Bool' lvalue Var 0x55f616517a60 'y$r_buff0_thd1' '_Bool'
|   |         | |   `-UnaryOperator 0x55f61651a1e0 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x55f61651a1c8 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x55f61651a1a8 <col:93> '_Bool' lvalue Var 0x55f616517f50 'y$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x55f61651a2d8 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x55f61651a270 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x55f61651a258 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x55f61651a238 <col:112> '_Bool' lvalue Var 0x55f616517a60 'y$r_buff0_thd1' '_Bool'
|   |         |   `-UnaryOperator 0x55f61651a2c0 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x55f61651a2a8 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x55f61651a288 <col:131> '_Bool' lvalue Var 0x55f616517bf0 'y$r_buff1_thd1' '_Bool'
|   |         |-ImplicitCastExpr 0x55f61651a520 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x55f61651a508 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x55f61651a318 <col:148> '_Bool' lvalue Var 0x55f616517a60 'y$r_buff0_thd1' '_Bool'
|   |         `-ParenExpr 0x55f61651a4e8 <col:165, col:226> 'int'
|   |           `-ConditionalOperator 0x55f61651a4b8 <col:166, col:212> 'int'
|   |             |-BinaryOperator 0x55f61651a3d8 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x55f61651a390 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x55f61651a378 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x55f61651a338 <col:166> '_Bool' lvalue Var 0x55f616517e58 'y$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x55f61651a3c0 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x55f61651a3a8 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x55f61651a358 <col:184> '_Bool' lvalue Var 0x55f616517a60 'y$r_buff0_thd1' '_Bool'
|   |             |-ImplicitCastExpr 0x55f61651a470 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x55f61651a428 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x55f61651a3f8 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x55f61651a4a0 <col:212> 'int' <IntegralCast>
|   |               `-ImplicitCastExpr 0x55f61651a488 <col:212> '_Bool' <LValueToRValue>
|   |                 `-DeclRefExpr 0x55f61651a450 <col:212> '_Bool' lvalue Var 0x55f616517a60 'y$r_buff0_thd1' '_Bool'
|   |-BinaryOperator 0x55f61651ac28 <line:719:3, col:221> '_Bool' '='
|   | |-DeclRefExpr 0x55f61651a650 <col:3> '_Bool' lvalue Var 0x55f616517bf0 'y$r_buff1_thd1' '_Bool'
|   | `-ImplicitCastExpr 0x55f61651ac10 <col:20, col:221> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55f61651abe0 <col:20, col:221> 'int'
|   |     |-ImplicitCastExpr 0x55f61651ab98 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x55f61651ab80 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x55f61651a670 <col:20> '_Bool' lvalue Var 0x55f616518040 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x55f61651abc8 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x55f61651abb0 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x55f61651a690 <col:36> '_Bool' lvalue Var 0x55f616517bf0 'y$r_buff1_thd1' '_Bool'
|   |     `-ParenExpr 0x55f61651ab60 <col:53, col:221> 'int'
|   |       `-ConditionalOperator 0x55f61651ab30 <col:54, col:220> 'int'
|   |         |-BinaryOperator 0x55f61651a8a0 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x55f61651a7c0 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x55f61651a6e8 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x55f61651a6d0 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x55f61651a6b0 <col:55> '_Bool' lvalue Var 0x55f616517e58 'y$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x55f61651a7a0 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x55f61651a738 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x55f61651a720 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x55f61651a700 <col:74> '_Bool' lvalue Var 0x55f616517a60 'y$r_buff0_thd1' '_Bool'
|   |         | |   `-UnaryOperator 0x55f61651a788 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x55f61651a770 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x55f61651a750 <col:93> '_Bool' lvalue Var 0x55f616517f50 'y$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x55f61651a880 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x55f61651a818 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x55f61651a800 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x55f61651a7e0 <col:112> '_Bool' lvalue Var 0x55f616517a60 'y$r_buff0_thd1' '_Bool'
|   |         |   `-UnaryOperator 0x55f61651a868 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x55f61651a850 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x55f61651a830 <col:131> '_Bool' lvalue Var 0x55f616517bf0 'y$r_buff1_thd1' '_Bool'
|   |         |-ImplicitCastExpr 0x55f61651aae8 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x55f61651aad0 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x55f61651a8c0 <col:148> '_Bool' lvalue Var 0x55f616517bf0 'y$r_buff1_thd1' '_Bool'
|   |         `-ParenExpr 0x55f61651aab0 <col:165, col:220> 'int'
|   |           `-ConditionalOperator 0x55f61651aa80 <col:166, col:219> 'int'
|   |             |-BinaryOperator 0x55f61651a980 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x55f61651a938 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x55f61651a920 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x55f61651a8e0 <col:166> '_Bool' lvalue Var 0x55f616517e58 'y$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x55f61651a968 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x55f61651a950 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x55f61651a900 <col:184> '_Bool' lvalue Var 0x55f616517a60 'y$r_buff0_thd1' '_Bool'
|   |             |-ImplicitCastExpr 0x55f61651aa50 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x55f61651a9d0 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x55f61651a9a0 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x55f61651aa68 <col:212, col:219> 'int' <IntegralCast>
|   |               `-CStyleCastExpr 0x55f61651aa28 <col:212, col:219> '_Bool' <IntegralToBoolean>
|   |                 `-IntegerLiteral 0x55f61651a9f8 <col:219> 'int' 0
|   |-BinaryOperator 0x55f61651aca0 <line:720:3, col:25> 'int' '='
|   | |-DeclRefExpr 0x55f61651ac48 <col:3> 'int' lvalue Var 0x55f6165172e8 '__unbuffered_p0_EAX' 'int'
|   | `-ImplicitCastExpr 0x55f61651ac88 <col:25> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x55f61651ac68 <col:25> 'int' lvalue Var 0x55f616517858 'y' 'int'
|   |-BinaryOperator 0x55f61651add0 <line:721:3, col:37> 'int' '='
|   | |-DeclRefExpr 0x55f61651acc0 <col:3> 'int' lvalue Var 0x55f616517858 'y' 'int'
|   | `-ConditionalOperator 0x55f61651ada0 <col:7, col:37> 'int'
|   |   |-ImplicitCastExpr 0x55f61651ad58 <col:7> 'int' <IntegralCast>
|   |   | `-ImplicitCastExpr 0x55f61651ad40 <col:7> '_Bool' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x55f61651ace0 <col:7> '_Bool' lvalue Var 0x55f6165178f0 'y$flush_delayed' '_Bool'
|   |   |-ImplicitCastExpr 0x55f61651ad70 <col:25> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x55f61651ad00 <col:25> 'int' lvalue Var 0x55f616517970 'y$mem_tmp' 'int'
|   |   `-ImplicitCastExpr 0x55f61651ad88 <col:37> 'int' <LValueToRValue>
|   |     `-DeclRefExpr 0x55f61651ad20 <col:37> 'int' lvalue Var 0x55f616517858 'y' 'int'
|   |-BinaryOperator 0x55f61651ae68 <line:722:3, col:28> '_Bool' '='
|   | |-DeclRefExpr 0x55f61651adf0 <col:3> '_Bool' lvalue Var 0x55f6165178f0 'y$flush_delayed' '_Bool'
|   | `-CStyleCastExpr 0x55f61651ae40 <col:21, col:28> '_Bool' <IntegralToBoolean>
|   |   `-IntegerLiteral 0x55f61651ae10 <col:28> 'int' 0
|   |-CallExpr 0x55f61651aec0 <line:723:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x55f61651aea8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55f61651ae88 <col:3> 'void ()' Function 0x55f6164be060 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x55f61651af18 <line:724:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x55f61651af00 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55f61651aee0 <col:3> 'void ()' Function 0x55f6164bdfa0 '__VERIFIER_atomic_begin' 'void ()'
|   |-CallExpr 0x55f61651af70 <line:725:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x55f61651af58 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55f61651af38 <col:3> 'void ()' Function 0x55f6164be060 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x55f61651afc8 <line:726:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x55f61651afb0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55f61651af90 <col:3> 'void ()' Function 0x55f6164bdfa0 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x55f61651b080 <line:727:3, col:41> 'int' '='
|   | |-DeclRefExpr 0x55f61651afe8 <col:3> 'int' lvalue Var 0x55f6165171c8 '__unbuffered_cnt' 'int'
|   | `-BinaryOperator 0x55f61651b060 <col:22, col:41> 'int' '+'
|   |   |-ImplicitCastExpr 0x55f61651b048 <col:22> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x55f61651b008 <col:22> 'int' lvalue Var 0x55f6165171c8 '__unbuffered_cnt' 'int'
|   |   `-IntegerLiteral 0x55f61651b028 <col:41> 'int' 1
|   |-CallExpr 0x55f61651b0d8 <line:728:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x55f61651b0c0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55f61651b0a0 <col:3> 'void ()' Function 0x55f6164be060 '__VERIFIER_atomic_end' 'void ()'
|   `-ReturnStmt 0x55f61651b188 <line:729:3, col:36>
|     `-CallExpr 0x55f61651b168 <col:10, col:36> 'void *'
|       `-ImplicitCastExpr 0x55f61651b150 <col:10> 'void *(*)(void)' <FunctionToPointerDecay>
|         `-DeclRefExpr 0x55f61651b0f8 <col:10> 'void *(void)' Function 0x55f6164bdab8 '__VERIFIER_nondet_pointer' 'void *(void)'
|-FunctionDecl 0x55f61651b330 prev 0x55f616516e48 <line:731:1, line:785:1> line:731:8 used P1 'void *(void *)'
| |-ParmVarDecl 0x55f61651b298 <col:11, col:17> col:17 arg 'void *'
| `-CompoundStmt 0x55f61651fb80 <line:732:1, line:785:1>
|   |-CallExpr 0x55f61651b410 <line:733:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x55f61651b3f8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55f61651b3d8 <col:3> 'void ()' Function 0x55f6164bdfa0 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x55f61651b488 <line:734:3, col:15> 'int' '='
|   | |-DeclRefExpr 0x55f61651b430 <col:3> 'int' lvalue Var 0x55f616517ed8 'y$w_buff1' 'int'
|   | `-ImplicitCastExpr 0x55f61651b470 <col:15> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x55f61651b450 <col:15> 'int' lvalue Var 0x55f616517de0 'y$w_buff0' 'int'
|   |-BinaryOperator 0x55f61651b4e8 <line:735:3, col:15> 'int' '='
|   | |-DeclRefExpr 0x55f61651b4a8 <col:3> 'int' lvalue Var 0x55f616517de0 'y$w_buff0' 'int'
|   | `-IntegerLiteral 0x55f61651b4c8 <col:15> 'int' 1
|   |-BinaryOperator 0x55f61651b560 <line:736:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x55f61651b508 <col:3> '_Bool' lvalue Var 0x55f616517f50 'y$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x55f61651b548 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x55f61651b528 <col:20> '_Bool' lvalue Var 0x55f616517e58 'y$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x55f61651b5f8 <line:737:3, col:27> '_Bool' '='
|   | |-DeclRefExpr 0x55f61651b580 <col:3> '_Bool' lvalue Var 0x55f616517e58 'y$w_buff0_used' '_Bool'
|   | `-CStyleCastExpr 0x55f61651b5d0 <col:20, col:27> '_Bool' <IntegralToBoolean>
|   |   `-IntegerLiteral 0x55f61651b5a0 <col:27> 'int' 1
|   |-CallExpr 0x55f61651b778 <line:738:3, col:56> 'void'
|   | |-ImplicitCastExpr 0x55f61651b760 <col:3> 'void (*)(int)' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x55f61651b618 <col:3> 'void (int)' Function 0x55f6164bdd28 '__VERIFIER_assert' 'void (int)'
|   | `-UnaryOperator 0x55f61651b718 <col:21, col:55> 'int' prefix '!' cannot overflow
|   |   `-ParenExpr 0x55f61651b6f8 <col:22, col:55> 'int'
|   |     `-BinaryOperator 0x55f61651b6d8 <col:23, col:41> 'int' '&&'
|   |       |-ImplicitCastExpr 0x55f61651b690 <col:23> 'int' <IntegralCast>
|   |       | `-ImplicitCastExpr 0x55f61651b678 <col:23> '_Bool' <LValueToRValue>
|   |       |   `-DeclRefExpr 0x55f61651b638 <col:23> '_Bool' lvalue Var 0x55f616517f50 'y$w_buff1_used' '_Bool'
|   |       `-ImplicitCastExpr 0x55f61651b6c0 <col:41> 'int' <IntegralCast>
|   |         `-ImplicitCastExpr 0x55f61651b6a8 <col:41> '_Bool' <LValueToRValue>
|   |           `-DeclRefExpr 0x55f61651b658 <col:41> '_Bool' lvalue Var 0x55f616517e58 'y$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x55f61651b7f8 <line:739:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x55f61651b7a0 <col:3> '_Bool' lvalue Var 0x55f616517b78 'y$r_buff1_thd0' '_Bool'
|   | `-ImplicitCastExpr 0x55f61651b7e0 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x55f61651b7c0 <col:20> '_Bool' lvalue Var 0x55f6165179e8 'y$r_buff0_thd0' '_Bool'
|   |-BinaryOperator 0x55f61651b870 <line:740:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x55f61651b818 <col:3> '_Bool' lvalue Var 0x55f616517bf0 'y$r_buff1_thd1' '_Bool'
|   | `-ImplicitCastExpr 0x55f61651b858 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x55f61651b838 <col:20> '_Bool' lvalue Var 0x55f616517a60 'y$r_buff0_thd1' '_Bool'
|   |-BinaryOperator 0x55f61651b8e8 <line:741:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x55f61651b890 <col:3> '_Bool' lvalue Var 0x55f616517c68 'y$r_buff1_thd2' '_Bool'
|   | `-ImplicitCastExpr 0x55f61651b8d0 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x55f61651b8b0 <col:20> '_Bool' lvalue Var 0x55f616517b00 'y$r_buff0_thd2' '_Bool'
|   |-BinaryOperator 0x55f61651b980 <line:742:3, col:27> '_Bool' '='
|   | |-DeclRefExpr 0x55f61651b908 <col:3> '_Bool' lvalue Var 0x55f616517b00 'y$r_buff0_thd2' '_Bool'
|   | `-CStyleCastExpr 0x55f61651b958 <col:20, col:27> '_Bool' <IntegralToBoolean>
|   |   `-IntegerLiteral 0x55f61651b928 <col:27> 'int' 1
|   |-CallExpr 0x55f61651b9d8 <line:743:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x55f61651b9c0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55f61651b9a0 <col:3> 'void ()' Function 0x55f6164be060 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x55f61651ba30 <line:744:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x55f61651ba18 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55f61651b9f8 <col:3> 'void ()' Function 0x55f6164bdfa0 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x55f61651baa8 <line:745:3, col:15> 'int' '='
|   | |-DeclRefExpr 0x55f61651ba50 <col:3> 'int' lvalue Var 0x55f616517ed8 'y$w_buff1' 'int'
|   | `-ImplicitCastExpr 0x55f61651ba90 <col:15> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x55f61651ba70 <col:15> 'int' lvalue Var 0x55f616517de0 'y$w_buff0' 'int'
|   |-BinaryOperator 0x55f61651bb08 <line:746:3, col:15> 'int' '='
|   | |-DeclRefExpr 0x55f61651bac8 <col:3> 'int' lvalue Var 0x55f616517de0 'y$w_buff0' 'int'
|   | `-IntegerLiteral 0x55f61651bae8 <col:15> 'int' 2
|   |-BinaryOperator 0x55f61651bb98 <line:747:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x55f61651bb40 <col:3> '_Bool' lvalue Var 0x55f616517f50 'y$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x55f61651bb80 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x55f61651bb60 <col:20> '_Bool' lvalue Var 0x55f616517e58 'y$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x55f61651bc30 <line:748:3, col:27> '_Bool' '='
|   | |-DeclRefExpr 0x55f61651bbb8 <col:3> '_Bool' lvalue Var 0x55f616517e58 'y$w_buff0_used' '_Bool'
|   | `-CStyleCastExpr 0x55f61651bc08 <col:20, col:27> '_Bool' <IntegralToBoolean>
|   |   `-IntegerLiteral 0x55f61651bbd8 <col:27> 'int' 1
|   |-CallExpr 0x55f61651bd80 <line:749:3, col:56> 'void'
|   | |-ImplicitCastExpr 0x55f61651bd68 <col:3> 'void (*)(int)' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x55f61651bc50 <col:3> 'void (int)' Function 0x55f6164bdd28 '__VERIFIER_assert' 'void (int)'
|   | `-UnaryOperator 0x55f61651bd50 <col:21, col:55> 'int' prefix '!' cannot overflow
|   |   `-ParenExpr 0x55f61651bd30 <col:22, col:55> 'int'
|   |     `-BinaryOperator 0x55f61651bd10 <col:23, col:41> 'int' '&&'
|   |       |-ImplicitCastExpr 0x55f61651bcc8 <col:23> 'int' <IntegralCast>
|   |       | `-ImplicitCastExpr 0x55f61651bcb0 <col:23> '_Bool' <LValueToRValue>
|   |       |   `-DeclRefExpr 0x55f61651bc70 <col:23> '_Bool' lvalue Var 0x55f616517f50 'y$w_buff1_used' '_Bool'
|   |       `-ImplicitCastExpr 0x55f61651bcf8 <col:41> 'int' <IntegralCast>
|   |         `-ImplicitCastExpr 0x55f61651bce0 <col:41> '_Bool' <LValueToRValue>
|   |           `-DeclRefExpr 0x55f61651bc90 <col:41> '_Bool' lvalue Var 0x55f616517e58 'y$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x55f61651be00 <line:750:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x55f61651bda8 <col:3> '_Bool' lvalue Var 0x55f616517b78 'y$r_buff1_thd0' '_Bool'
|   | `-ImplicitCastExpr 0x55f61651bde8 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x55f61651bdc8 <col:20> '_Bool' lvalue Var 0x55f6165179e8 'y$r_buff0_thd0' '_Bool'
|   |-BinaryOperator 0x55f61651be78 <line:751:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x55f61651be20 <col:3> '_Bool' lvalue Var 0x55f616517bf0 'y$r_buff1_thd1' '_Bool'
|   | `-ImplicitCastExpr 0x55f61651be60 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x55f61651be40 <col:20> '_Bool' lvalue Var 0x55f616517a60 'y$r_buff0_thd1' '_Bool'
|   |-BinaryOperator 0x55f61651bef0 <line:752:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x55f61651be98 <col:3> '_Bool' lvalue Var 0x55f616517c68 'y$r_buff1_thd2' '_Bool'
|   | `-ImplicitCastExpr 0x55f61651bed8 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x55f61651beb8 <col:20> '_Bool' lvalue Var 0x55f616517b00 'y$r_buff0_thd2' '_Bool'
|   |-BinaryOperator 0x55f61651bf88 <line:753:3, col:27> '_Bool' '='
|   | |-DeclRefExpr 0x55f61651bf10 <col:3> '_Bool' lvalue Var 0x55f616517b00 'y$r_buff0_thd2' '_Bool'
|   | `-CStyleCastExpr 0x55f61651bf60 <col:20, col:27> '_Bool' <IntegralToBoolean>
|   |   `-IntegerLiteral 0x55f61651bf30 <col:27> 'int' 1
|   |-CallExpr 0x55f61651bfe0 <line:754:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x55f61651bfc8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55f61651bfa8 <col:3> 'void ()' Function 0x55f6164be060 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x55f61651c038 <line:755:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x55f61651c020 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55f61651c000 <col:3> 'void ()' Function 0x55f6164bdfa0 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x55f61651c0d0 <line:756:3, col:42> '_Bool' '='
|   | |-DeclRefExpr 0x55f61651c058 <col:3> '_Bool' lvalue Var 0x55f616517fc8 'weak$$choice0' '_Bool'
|   | `-CallExpr 0x55f61651c0b0 <col:19, col:42> '_Bool'
|   |   `-ImplicitCastExpr 0x55f61651c098 <col:19> '_Bool (*)(void)' <FunctionToPointerDecay>
|   |     `-DeclRefExpr 0x55f61651c078 <col:19> '_Bool (void)' Function 0x55f6164bd770 '__VERIFIER_nondet_bool' '_Bool (void)'
|   |-BinaryOperator 0x55f61651c168 <line:757:3, col:42> '_Bool' '='
|   | |-DeclRefExpr 0x55f61651c0f0 <col:3> '_Bool' lvalue Var 0x55f616518040 'weak$$choice2' '_Bool'
|   | `-CallExpr 0x55f61651c148 <col:19, col:42> '_Bool'
|   |   `-ImplicitCastExpr 0x55f61651c130 <col:19> '_Bool (*)(void)' <FunctionToPointerDecay>
|   |     `-DeclRefExpr 0x55f61651c110 <col:19> '_Bool (void)' Function 0x55f6164bd770 '__VERIFIER_nondet_bool' '_Bool (void)'
|   |-BinaryOperator 0x55f61651c1e0 <line:758:3, col:21> '_Bool' '='
|   | |-DeclRefExpr 0x55f61651c188 <col:3> '_Bool' lvalue Var 0x55f6165178f0 'y$flush_delayed' '_Bool'
|   | `-ImplicitCastExpr 0x55f61651c1c8 <col:21> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x55f61651c1a8 <col:21> '_Bool' lvalue Var 0x55f616518040 'weak$$choice2' '_Bool'
|   |-BinaryOperator 0x55f61651c258 <line:759:3, col:15> 'int' '='
|   | |-DeclRefExpr 0x55f61651c200 <col:3> 'int' lvalue Var 0x55f616517970 'y$mem_tmp' 'int'
|   | `-ImplicitCastExpr 0x55f61651c240 <col:15> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x55f61651c220 <col:15> 'int' lvalue Var 0x55f616517858 'y' 'int'
|   |-BinaryOperator 0x55f61651c690 <line:760:3, col:162> 'int' '='
|   | |-DeclRefExpr 0x55f61651c278 <col:3> 'int' lvalue Var 0x55f616517858 'y' 'int'
|   | `-ConditionalOperator 0x55f61651c660 <col:7, col:162> 'int'
|   |   |-BinaryOperator 0x55f61651c488 <col:7, col:84> 'int' '||'
|   |   | |-BinaryOperator 0x55f61651c3a8 <col:7, col:46> 'int' '||'
|   |   | | |-UnaryOperator 0x55f61651c2d0 <col:7, col:8> 'int' prefix '!' cannot overflow
|   |   | | | `-ImplicitCastExpr 0x55f61651c2b8 <col:8> '_Bool' <LValueToRValue>
|   |   | | |   `-DeclRefExpr 0x55f61651c298 <col:8> '_Bool' lvalue Var 0x55f616517e58 'y$w_buff0_used' '_Bool'
|   |   | | `-BinaryOperator 0x55f61651c388 <col:26, col:46> 'int' '&&'
|   |   | |   |-UnaryOperator 0x55f61651c320 <col:26, col:27> 'int' prefix '!' cannot overflow
|   |   | |   | `-ImplicitCastExpr 0x55f61651c308 <col:27> '_Bool' <LValueToRValue>
|   |   | |   |   `-DeclRefExpr 0x55f61651c2e8 <col:27> '_Bool' lvalue Var 0x55f616517b00 'y$r_buff0_thd2' '_Bool'
|   |   | |   `-UnaryOperator 0x55f61651c370 <col:45, col:46> 'int' prefix '!' cannot overflow
|   |   | |     `-ImplicitCastExpr 0x55f61651c358 <col:46> '_Bool' <LValueToRValue>
|   |   | |       `-DeclRefExpr 0x55f61651c338 <col:46> '_Bool' lvalue Var 0x55f616517f50 'y$w_buff1_used' '_Bool'
|   |   | `-BinaryOperator 0x55f61651c468 <col:64, col:84> 'int' '&&'
|   |   |   |-UnaryOperator 0x55f61651c400 <col:64, col:65> 'int' prefix '!' cannot overflow
|   |   |   | `-ImplicitCastExpr 0x55f61651c3e8 <col:65> '_Bool' <LValueToRValue>
|   |   |   |   `-DeclRefExpr 0x55f61651c3c8 <col:65> '_Bool' lvalue Var 0x55f616517b00 'y$r_buff0_thd2' '_Bool'
|   |   |   `-UnaryOperator 0x55f61651c450 <col:83, col:84> 'int' prefix '!' cannot overflow
|   |   |     `-ImplicitCastExpr 0x55f61651c438 <col:84> '_Bool' <LValueToRValue>
|   |   |       `-DeclRefExpr 0x55f61651c418 <col:84> '_Bool' lvalue Var 0x55f616517c68 'y$r_buff1_thd2' '_Bool'
|   |   |-ImplicitCastExpr 0x55f61651c648 <col:101> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x55f61651c4a8 <col:101> 'int' lvalue Var 0x55f616517858 'y' 'int'
|   |   `-ParenExpr 0x55f61651c628 <col:105, col:162> 'int'
|   |     `-ConditionalOperator 0x55f61651c5f8 <col:106, col:153> 'int'
|   |       |-BinaryOperator 0x55f61651c568 <col:106, col:124> 'int' '&&'
|   |       | |-ImplicitCastExpr 0x55f61651c520 <col:106> 'int' <IntegralCast>
|   |       | | `-ImplicitCastExpr 0x55f61651c508 <col:106> '_Bool' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x55f61651c4c8 <col:106> '_Bool' lvalue Var 0x55f616517e58 'y$w_buff0_used' '_Bool'
|   |       | `-ImplicitCastExpr 0x55f61651c550 <col:124> 'int' <IntegralCast>
|   |       |   `-ImplicitCastExpr 0x55f61651c538 <col:124> '_Bool' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x55f61651c4e8 <col:124> '_Bool' lvalue Var 0x55f616517b00 'y$r_buff0_thd2' '_Bool'
|   |       |-ImplicitCastExpr 0x55f61651c5c8 <col:141> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x55f61651c588 <col:141> 'int' lvalue Var 0x55f616517de0 'y$w_buff0' 'int'
|   |       `-ImplicitCastExpr 0x55f61651c5e0 <col:153> 'int' <LValueToRValue>
|   |         `-DeclRefExpr 0x55f61651c5a8 <col:153> 'int' lvalue Var 0x55f616517ed8 'y$w_buff1' 'int'
|   |-BinaryOperator 0x55f61651cbb0 <line:761:3, col:208> 'int' '='
|   | |-DeclRefExpr 0x55f61651c6b0 <col:3> 'int' lvalue Var 0x55f616517de0 'y$w_buff0' 'int'
|   | `-ConditionalOperator 0x55f61651cb80 <col:15, col:208> 'int'
|   |   |-ImplicitCastExpr 0x55f61651cb50 <col:15> 'int' <IntegralCast>
|   |   | `-ImplicitCastExpr 0x55f61651cb28 <col:15> '_Bool' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x55f61651c6d0 <col:15> '_Bool' lvalue Var 0x55f616518040 'weak$$choice2' '_Bool'
|   |   |-ImplicitCastExpr 0x55f61651cb68 <col:31> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x55f61651c6f0 <col:31> 'int' lvalue Var 0x55f616517de0 'y$w_buff0' 'int'
|   |   `-ParenExpr 0x55f61651cb08 <col:43, col:208> 'int'
|   |     `-ConditionalOperator 0x55f61651cad8 <col:44, col:207> 'int'
|   |       |-BinaryOperator 0x55f61651c900 <col:44, col:121> 'int' '||'
|   |       | |-BinaryOperator 0x55f61651c820 <col:44, col:83> 'int' '||'
|   |       | | |-UnaryOperator 0x55f61651c748 <col:44, col:45> 'int' prefix '!' cannot overflow
|   |       | | | `-ImplicitCastExpr 0x55f61651c730 <col:45> '_Bool' <LValueToRValue>
|   |       | | |   `-DeclRefExpr 0x55f61651c710 <col:45> '_Bool' lvalue Var 0x55f616517e58 'y$w_buff0_used' '_Bool'
|   |       | | `-BinaryOperator 0x55f61651c800 <col:63, col:83> 'int' '&&'
|   |       | |   |-UnaryOperator 0x55f61651c798 <col:63, col:64> 'int' prefix '!' cannot overflow
|   |       | |   | `-ImplicitCastExpr 0x55f61651c780 <col:64> '_Bool' <LValueToRValue>
|   |       | |   |   `-DeclRefExpr 0x55f61651c760 <col:64> '_Bool' lvalue Var 0x55f616517b00 'y$r_buff0_thd2' '_Bool'
|   |       | |   `-UnaryOperator 0x55f61651c7e8 <col:82, col:83> 'int' prefix '!' cannot overflow
|   |       | |     `-ImplicitCastExpr 0x55f61651c7d0 <col:83> '_Bool' <LValueToRValue>
|   |       | |       `-DeclRefExpr 0x55f61651c7b0 <col:83> '_Bool' lvalue Var 0x55f616517f50 'y$w_buff1_used' '_Bool'
|   |       | `-BinaryOperator 0x55f61651c8e0 <col:101, col:121> 'int' '&&'
|   |       |   |-UnaryOperator 0x55f61651c878 <col:101, col:102> 'int' prefix '!' cannot overflow
|   |       |   | `-ImplicitCastExpr 0x55f61651c860 <col:102> '_Bool' <LValueToRValue>
|   |       |   |   `-DeclRefExpr 0x55f61651c840 <col:102> '_Bool' lvalue Var 0x55f616517b00 'y$r_buff0_thd2' '_Bool'
|   |       |   `-UnaryOperator 0x55f61651c8c8 <col:120, col:121> 'int' prefix '!' cannot overflow
|   |       |     `-ImplicitCastExpr 0x55f61651c8b0 <col:121> '_Bool' <LValueToRValue>
|   |       |       `-DeclRefExpr 0x55f61651c890 <col:121> '_Bool' lvalue Var 0x55f616517c68 'y$r_buff1_thd2' '_Bool'
|   |       |-ImplicitCastExpr 0x55f61651cac0 <col:138> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x55f61651c920 <col:138> 'int' lvalue Var 0x55f616517de0 'y$w_buff0' 'int'
|   |       `-ParenExpr 0x55f61651caa0 <col:150, col:207> 'int'
|   |         `-ConditionalOperator 0x55f61651ca70 <col:151, col:198> 'int'
|   |           |-BinaryOperator 0x55f61651c9e0 <col:151, col:169> 'int' '&&'
|   |           | |-ImplicitCastExpr 0x55f61651c998 <col:151> 'int' <IntegralCast>
|   |           | | `-ImplicitCastExpr 0x55f61651c980 <col:151> '_Bool' <LValueToRValue>
|   |           | |   `-DeclRefExpr 0x55f61651c940 <col:151> '_Bool' lvalue Var 0x55f616517e58 'y$w_buff0_used' '_Bool'
|   |           | `-ImplicitCastExpr 0x55f61651c9c8 <col:169> 'int' <IntegralCast>
|   |           |   `-ImplicitCastExpr 0x55f61651c9b0 <col:169> '_Bool' <LValueToRValue>
|   |           |     `-DeclRefExpr 0x55f61651c960 <col:169> '_Bool' lvalue Var 0x55f616517b00 'y$r_buff0_thd2' '_Bool'
|   |           |-ImplicitCastExpr 0x55f61651ca40 <col:186> 'int' <LValueToRValue>
|   |           | `-DeclRefExpr 0x55f61651ca00 <col:186> 'int' lvalue Var 0x55f616517de0 'y$w_buff0' 'int'
|   |           `-ImplicitCastExpr 0x55f61651ca58 <col:198> 'int' <LValueToRValue>
|   |             `-DeclRefExpr 0x55f61651ca20 <col:198> 'int' lvalue Var 0x55f616517de0 'y$w_buff0' 'int'
|   |-BinaryOperator 0x55f61651d0c0 <line:762:3, col:208> 'int' '='
|   | |-DeclRefExpr 0x55f61651cbd0 <col:3> 'int' lvalue Var 0x55f616517ed8 'y$w_buff1' 'int'
|   | `-ConditionalOperator 0x55f61651d090 <col:15, col:208> 'int'
|   |   |-ImplicitCastExpr 0x55f61651d060 <col:15> 'int' <IntegralCast>
|   |   | `-ImplicitCastExpr 0x55f61651d048 <col:15> '_Bool' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x55f61651cbf0 <col:15> '_Bool' lvalue Var 0x55f616518040 'weak$$choice2' '_Bool'
|   |   |-ImplicitCastExpr 0x55f61651d078 <col:31> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x55f61651cc10 <col:31> 'int' lvalue Var 0x55f616517ed8 'y$w_buff1' 'int'
|   |   `-ParenExpr 0x55f61651d028 <col:43, col:208> 'int'
|   |     `-ConditionalOperator 0x55f61651cff8 <col:44, col:207> 'int'
|   |       |-BinaryOperator 0x55f61651ce20 <col:44, col:121> 'int' '||'
|   |       | |-BinaryOperator 0x55f61651cd40 <col:44, col:83> 'int' '||'
|   |       | | |-UnaryOperator 0x55f61651cc68 <col:44, col:45> 'int' prefix '!' cannot overflow
|   |       | | | `-ImplicitCastExpr 0x55f61651cc50 <col:45> '_Bool' <LValueToRValue>
|   |       | | |   `-DeclRefExpr 0x55f61651cc30 <col:45> '_Bool' lvalue Var 0x55f616517e58 'y$w_buff0_used' '_Bool'
|   |       | | `-BinaryOperator 0x55f61651cd20 <col:63, col:83> 'int' '&&'
|   |       | |   |-UnaryOperator 0x55f61651ccb8 <col:63, col:64> 'int' prefix '!' cannot overflow
|   |       | |   | `-ImplicitCastExpr 0x55f61651cca0 <col:64> '_Bool' <LValueToRValue>
|   |       | |   |   `-DeclRefExpr 0x55f61651cc80 <col:64> '_Bool' lvalue Var 0x55f616517b00 'y$r_buff0_thd2' '_Bool'
|   |       | |   `-UnaryOperator 0x55f61651cd08 <col:82, col:83> 'int' prefix '!' cannot overflow
|   |       | |     `-ImplicitCastExpr 0x55f61651ccf0 <col:83> '_Bool' <LValueToRValue>
|   |       | |       `-DeclRefExpr 0x55f61651ccd0 <col:83> '_Bool' lvalue Var 0x55f616517f50 'y$w_buff1_used' '_Bool'
|   |       | `-BinaryOperator 0x55f61651ce00 <col:101, col:121> 'int' '&&'
|   |       |   |-UnaryOperator 0x55f61651cd98 <col:101, col:102> 'int' prefix '!' cannot overflow
|   |       |   | `-ImplicitCastExpr 0x55f61651cd80 <col:102> '_Bool' <LValueToRValue>
|   |       |   |   `-DeclRefExpr 0x55f61651cd60 <col:102> '_Bool' lvalue Var 0x55f616517b00 'y$r_buff0_thd2' '_Bool'
|   |       |   `-UnaryOperator 0x55f61651cde8 <col:120, col:121> 'int' prefix '!' cannot overflow
|   |       |     `-ImplicitCastExpr 0x55f61651cdd0 <col:121> '_Bool' <LValueToRValue>
|   |       |       `-DeclRefExpr 0x55f61651cdb0 <col:121> '_Bool' lvalue Var 0x55f616517c68 'y$r_buff1_thd2' '_Bool'
|   |       |-ImplicitCastExpr 0x55f61651cfe0 <col:138> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x55f61651ce40 <col:138> 'int' lvalue Var 0x55f616517ed8 'y$w_buff1' 'int'
|   |       `-ParenExpr 0x55f61651cfc0 <col:150, col:207> 'int'
|   |         `-ConditionalOperator 0x55f61651cf90 <col:151, col:198> 'int'
|   |           |-BinaryOperator 0x55f61651cf00 <col:151, col:169> 'int' '&&'
|   |           | |-ImplicitCastExpr 0x55f61651ceb8 <col:151> 'int' <IntegralCast>
|   |           | | `-ImplicitCastExpr 0x55f61651cea0 <col:151> '_Bool' <LValueToRValue>
|   |           | |   `-DeclRefExpr 0x55f61651ce60 <col:151> '_Bool' lvalue Var 0x55f616517e58 'y$w_buff0_used' '_Bool'
|   |           | `-ImplicitCastExpr 0x55f61651cee8 <col:169> 'int' <IntegralCast>
|   |           |   `-ImplicitCastExpr 0x55f61651ced0 <col:169> '_Bool' <LValueToRValue>
|   |           |     `-DeclRefExpr 0x55f61651ce80 <col:169> '_Bool' lvalue Var 0x55f616517b00 'y$r_buff0_thd2' '_Bool'
|   |           |-ImplicitCastExpr 0x55f61651cf60 <col:186> 'int' <LValueToRValue>
|   |           | `-DeclRefExpr 0x55f61651cf20 <col:186> 'int' lvalue Var 0x55f616517ed8 'y$w_buff1' 'int'
|   |           `-ImplicitCastExpr 0x55f61651cf78 <col:198> 'int' <LValueToRValue>
|   |             `-DeclRefExpr 0x55f61651cf40 <col:198> 'int' lvalue Var 0x55f616517ed8 'y$w_buff1' 'int'
|   |-BinaryOperator 0x55f61651d668 <line:763:3, col:227> '_Bool' '='
|   | |-DeclRefExpr 0x55f61651d0e0 <col:3> '_Bool' lvalue Var 0x55f616517e58 'y$w_buff0_used' '_Bool'
|   | `-ImplicitCastExpr 0x55f61651d650 <col:20, col:227> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55f61651d620 <col:20, col:227> 'int'
|   |     |-ImplicitCastExpr 0x55f61651d5d8 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x55f61651d5c0 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x55f61651d100 <col:20> '_Bool' lvalue Var 0x55f616518040 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x55f61651d608 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x55f61651d5f0 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x55f61651d120 <col:36> '_Bool' lvalue Var 0x55f616517e58 'y$w_buff0_used' '_Bool'
|   |     `-ParenExpr 0x55f61651d5a0 <col:53, col:227> 'int'
|   |       `-ConditionalOperator 0x55f61651d570 <col:54, col:226> 'int'
|   |         |-BinaryOperator 0x55f61651d330 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x55f61651d250 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x55f61651d178 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x55f61651d160 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x55f61651d140 <col:55> '_Bool' lvalue Var 0x55f616517e58 'y$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x55f61651d230 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x55f61651d1c8 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x55f61651d1b0 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x55f61651d190 <col:74> '_Bool' lvalue Var 0x55f616517b00 'y$r_buff0_thd2' '_Bool'
|   |         | |   `-UnaryOperator 0x55f61651d218 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x55f61651d200 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x55f61651d1e0 <col:93> '_Bool' lvalue Var 0x55f616517f50 'y$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x55f61651d310 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x55f61651d2a8 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x55f61651d290 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x55f61651d270 <col:112> '_Bool' lvalue Var 0x55f616517b00 'y$r_buff0_thd2' '_Bool'
|   |         |   `-UnaryOperator 0x55f61651d2f8 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x55f61651d2e0 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x55f61651d2c0 <col:131> '_Bool' lvalue Var 0x55f616517c68 'y$r_buff1_thd2' '_Bool'
|   |         |-ImplicitCastExpr 0x55f61651d558 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x55f61651d540 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x55f61651d350 <col:148> '_Bool' lvalue Var 0x55f616517e58 'y$w_buff0_used' '_Bool'
|   |         `-ParenExpr 0x55f61651d520 <col:165, col:226> 'int'
|   |           `-ConditionalOperator 0x55f61651d4f0 <col:166, col:212> 'int'
|   |             |-BinaryOperator 0x55f61651d410 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x55f61651d3c8 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x55f61651d3b0 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x55f61651d370 <col:166> '_Bool' lvalue Var 0x55f616517e58 'y$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x55f61651d3f8 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x55f61651d3e0 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x55f61651d390 <col:184> '_Bool' lvalue Var 0x55f616517b00 'y$r_buff0_thd2' '_Bool'
|   |             |-ImplicitCastExpr 0x55f61651d4a8 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x55f61651d460 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x55f61651d430 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x55f61651d4d8 <col:212> 'int' <IntegralCast>
|   |               `-ImplicitCastExpr 0x55f61651d4c0 <col:212> '_Bool' <LValueToRValue>
|   |                 `-DeclRefExpr 0x55f61651d488 <col:212> '_Bool' lvalue Var 0x55f616517e58 'y$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x55f61651dc58 <line:764:3, col:221> '_Bool' '='
|   | |-DeclRefExpr 0x55f61651d688 <col:3> '_Bool' lvalue Var 0x55f616517f50 'y$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x55f61651dc40 <col:20, col:221> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55f61651dc10 <col:20, col:221> 'int'
|   |     |-ImplicitCastExpr 0x55f61651dbc8 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x55f61651dbb0 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x55f61651d6a8 <col:20> '_Bool' lvalue Var 0x55f616518040 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x55f61651dbf8 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x55f61651dbe0 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x55f61651d6c8 <col:36> '_Bool' lvalue Var 0x55f616517f50 'y$w_buff1_used' '_Bool'
|   |     `-ParenExpr 0x55f61651db90 <col:53, col:221> 'int'
|   |       `-ConditionalOperator 0x55f61651db60 <col:54, col:220> 'int'
|   |         |-BinaryOperator 0x55f61651d8d8 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x55f61651d7f8 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x55f61651d720 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x55f61651d708 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x55f61651d6e8 <col:55> '_Bool' lvalue Var 0x55f616517e58 'y$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x55f61651d7d8 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x55f61651d770 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x55f61651d758 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x55f61651d738 <col:74> '_Bool' lvalue Var 0x55f616517b00 'y$r_buff0_thd2' '_Bool'
|   |         | |   `-UnaryOperator 0x55f61651d7c0 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x55f61651d7a8 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x55f61651d788 <col:93> '_Bool' lvalue Var 0x55f616517f50 'y$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x55f61651d8b8 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x55f61651d850 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x55f61651d838 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x55f61651d818 <col:112> '_Bool' lvalue Var 0x55f616517b00 'y$r_buff0_thd2' '_Bool'
|   |         |   `-UnaryOperator 0x55f61651d8a0 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x55f61651d888 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x55f61651d868 <col:131> '_Bool' lvalue Var 0x55f616517c68 'y$r_buff1_thd2' '_Bool'
|   |         |-ImplicitCastExpr 0x55f61651db20 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x55f61651db08 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x55f61651d8f8 <col:148> '_Bool' lvalue Var 0x55f616517f50 'y$w_buff1_used' '_Bool'
|   |         `-ParenExpr 0x55f61651dae8 <col:165, col:220> 'int'
|   |           `-ConditionalOperator 0x55f61651dab8 <col:166, col:219> 'int'
|   |             |-BinaryOperator 0x55f61651d9b8 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x55f61651d970 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x55f61651d958 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x55f61651d918 <col:166> '_Bool' lvalue Var 0x55f616517e58 'y$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x55f61651d9a0 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x55f61651d988 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x55f61651d938 <col:184> '_Bool' lvalue Var 0x55f616517b00 'y$r_buff0_thd2' '_Bool'
|   |             |-ImplicitCastExpr 0x55f61651da88 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x55f61651da08 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x55f61651d9d8 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x55f61651daa0 <col:212, col:219> 'int' <IntegralCast>
|   |               `-CStyleCastExpr 0x55f61651da60 <col:212, col:219> '_Bool' <IntegralToBoolean>
|   |                 `-IntegerLiteral 0x55f61651da30 <col:219> 'int' 0
|   |-BinaryOperator 0x55f61651e200 <line:765:3, col:227> '_Bool' '='
|   | |-DeclRefExpr 0x55f61651dc78 <col:3> '_Bool' lvalue Var 0x55f616517b00 'y$r_buff0_thd2' '_Bool'
|   | `-ImplicitCastExpr 0x55f61651e1e8 <col:20, col:227> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55f61651e1b8 <col:20, col:227> 'int'
|   |     |-ImplicitCastExpr 0x55f61651e170 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x55f61651e158 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x55f61651dc98 <col:20> '_Bool' lvalue Var 0x55f616518040 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x55f61651e1a0 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x55f61651e188 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x55f61651dcb8 <col:36> '_Bool' lvalue Var 0x55f616517b00 'y$r_buff0_thd2' '_Bool'
|   |     `-ParenExpr 0x55f61651e138 <col:53, col:227> 'int'
|   |       `-ConditionalOperator 0x55f61651e108 <col:54, col:226> 'int'
|   |         |-BinaryOperator 0x55f61651dec8 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x55f61651dde8 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x55f61651dd10 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x55f61651dcf8 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x55f61651dcd8 <col:55> '_Bool' lvalue Var 0x55f616517e58 'y$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x55f61651ddc8 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x55f61651dd60 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x55f61651dd48 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x55f61651dd28 <col:74> '_Bool' lvalue Var 0x55f616517b00 'y$r_buff0_thd2' '_Bool'
|   |         | |   `-UnaryOperator 0x55f61651ddb0 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x55f61651dd98 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x55f61651dd78 <col:93> '_Bool' lvalue Var 0x55f616517f50 'y$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x55f61651dea8 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x55f61651de40 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x55f61651de28 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x55f61651de08 <col:112> '_Bool' lvalue Var 0x55f616517b00 'y$r_buff0_thd2' '_Bool'
|   |         |   `-UnaryOperator 0x55f61651de90 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x55f61651de78 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x55f61651de58 <col:131> '_Bool' lvalue Var 0x55f616517c68 'y$r_buff1_thd2' '_Bool'
|   |         |-ImplicitCastExpr 0x55f61651e0f0 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x55f61651e0d8 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x55f61651dee8 <col:148> '_Bool' lvalue Var 0x55f616517b00 'y$r_buff0_thd2' '_Bool'
|   |         `-ParenExpr 0x55f61651e0b8 <col:165, col:226> 'int'
|   |           `-ConditionalOperator 0x55f61651e088 <col:166, col:212> 'int'
|   |             |-BinaryOperator 0x55f61651dfa8 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x55f61651df60 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x55f61651df48 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x55f61651df08 <col:166> '_Bool' lvalue Var 0x55f616517e58 'y$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x55f61651df90 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x55f61651df78 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x55f61651df28 <col:184> '_Bool' lvalue Var 0x55f616517b00 'y$r_buff0_thd2' '_Bool'
|   |             |-ImplicitCastExpr 0x55f61651e040 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x55f61651dff8 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x55f61651dfc8 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x55f61651e070 <col:212> 'int' <IntegralCast>
|   |               `-ImplicitCastExpr 0x55f61651e058 <col:212> '_Bool' <LValueToRValue>
|   |                 `-DeclRefExpr 0x55f61651e020 <col:212> '_Bool' lvalue Var 0x55f616517b00 'y$r_buff0_thd2' '_Bool'
|   |-BinaryOperator 0x55f61651e7c8 <line:766:3, col:221> '_Bool' '='
|   | |-DeclRefExpr 0x55f61651e220 <col:3> '_Bool' lvalue Var 0x55f616517c68 'y$r_buff1_thd2' '_Bool'
|   | `-ImplicitCastExpr 0x55f61651e7b0 <col:20, col:221> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55f61651e780 <col:20, col:221> 'int'
|   |     |-ImplicitCastExpr 0x55f61651e738 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x55f61651e720 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x55f61651e240 <col:20> '_Bool' lvalue Var 0x55f616518040 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x55f61651e768 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x55f61651e750 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x55f61651e260 <col:36> '_Bool' lvalue Var 0x55f616517c68 'y$r_buff1_thd2' '_Bool'
|   |     `-ParenExpr 0x55f61651e700 <col:53, col:221> 'int'
|   |       `-ConditionalOperator 0x55f61651e6d0 <col:54, col:220> 'int'
|   |         |-BinaryOperator 0x55f61651e470 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x55f61651e390 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x55f61651e2b8 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x55f61651e2a0 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x55f61651e280 <col:55> '_Bool' lvalue Var 0x55f616517e58 'y$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x55f61651e370 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x55f61651e308 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x55f61651e2f0 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x55f61651e2d0 <col:74> '_Bool' lvalue Var 0x55f616517b00 'y$r_buff0_thd2' '_Bool'
|   |         | |   `-UnaryOperator 0x55f61651e358 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x55f61651e340 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x55f61651e320 <col:93> '_Bool' lvalue Var 0x55f616517f50 'y$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x55f61651e450 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x55f61651e3e8 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x55f61651e3d0 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x55f61651e3b0 <col:112> '_Bool' lvalue Var 0x55f616517b00 'y$r_buff0_thd2' '_Bool'
|   |         |   `-UnaryOperator 0x55f61651e438 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x55f61651e420 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x55f61651e400 <col:131> '_Bool' lvalue Var 0x55f616517c68 'y$r_buff1_thd2' '_Bool'
|   |         |-ImplicitCastExpr 0x55f61651e6b8 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x55f61651e6a0 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x55f61651e490 <col:148> '_Bool' lvalue Var 0x55f616517c68 'y$r_buff1_thd2' '_Bool'
|   |         `-ParenExpr 0x55f61651e680 <col:165, col:220> 'int'
|   |           `-ConditionalOperator 0x55f61651e650 <col:166, col:219> 'int'
|   |             |-BinaryOperator 0x55f61651e550 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x55f61651e508 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x55f61651e4f0 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x55f61651e4b0 <col:166> '_Bool' lvalue Var 0x55f616517e58 'y$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x55f61651e538 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x55f61651e520 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x55f61651e4d0 <col:184> '_Bool' lvalue Var 0x55f616517b00 'y$r_buff0_thd2' '_Bool'
|   |             |-ImplicitCastExpr 0x55f61651e620 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x55f61651e5a0 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x55f61651e570 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x55f61651e638 <col:212, col:219> 'int' <IntegralCast>
|   |               `-CStyleCastExpr 0x55f61651e5f8 <col:212, col:219> '_Bool' <IntegralToBoolean>
|   |                 `-IntegerLiteral 0x55f61651e5c8 <col:219> 'int' 0
|   |-BinaryOperator 0x55f61651e840 <line:767:3, col:25> 'int' '='
|   | |-DeclRefExpr 0x55f61651e7e8 <col:3> 'int' lvalue Var 0x55f616517408 '__unbuffered_p1_EAX' 'int'
|   | `-ImplicitCastExpr 0x55f61651e828 <col:25> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x55f61651e808 <col:25> 'int' lvalue Var 0x55f616517858 'y' 'int'
|   |-BinaryOperator 0x55f61651e970 <line:768:3, col:37> 'int' '='
|   | |-DeclRefExpr 0x55f61651e860 <col:3> 'int' lvalue Var 0x55f616517858 'y' 'int'
|   | `-ConditionalOperator 0x55f61651e940 <col:7, col:37> 'int'
|   |   |-ImplicitCastExpr 0x55f61651e8f8 <col:7> 'int' <IntegralCast>
|   |   | `-ImplicitCastExpr 0x55f61651e8e0 <col:7> '_Bool' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x55f61651e880 <col:7> '_Bool' lvalue Var 0x55f6165178f0 'y$flush_delayed' '_Bool'
|   |   |-ImplicitCastExpr 0x55f61651e910 <col:25> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x55f61651e8a0 <col:25> 'int' lvalue Var 0x55f616517970 'y$mem_tmp' 'int'
|   |   `-ImplicitCastExpr 0x55f61651e928 <col:37> 'int' <LValueToRValue>
|   |     `-DeclRefExpr 0x55f61651e8c0 <col:37> 'int' lvalue Var 0x55f616517858 'y' 'int'
|   |-BinaryOperator 0x55f61651ea08 <line:769:3, col:28> '_Bool' '='
|   | |-DeclRefExpr 0x55f61651e990 <col:3> '_Bool' lvalue Var 0x55f6165178f0 'y$flush_delayed' '_Bool'
|   | `-CStyleCastExpr 0x55f61651e9e0 <col:21, col:28> '_Bool' <IntegralToBoolean>
|   |   `-IntegerLiteral 0x55f61651e9b0 <col:28> 'int' 0
|   |-CallExpr 0x55f61651ea60 <line:770:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x55f61651ea48 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55f61651ea28 <col:3> 'void ()' Function 0x55f6164be060 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x55f61651eab8 <line:771:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x55f61651eaa0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55f61651ea80 <col:3> 'void ()' Function 0x55f6164bdfa0 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x55f61651eb30 <line:772:3, col:25> 'int' '='
|   | |-DeclRefExpr 0x55f61651ead8 <col:3> 'int' lvalue Var 0x55f616517528 '__unbuffered_p1_EBX' 'int'
|   | `-ImplicitCastExpr 0x55f61651eb18 <col:25> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x55f61651eaf8 <col:25> 'int' lvalue Var 0x55f616517738 'x' 'int'
|   |-CallExpr 0x55f61651eba8 <line:773:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x55f61651eb90 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55f61651eb70 <col:3> 'void ()' Function 0x55f6164be060 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x55f61651ec00 <line:774:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x55f61651ebe8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55f61651ebc8 <col:3> 'void ()' Function 0x55f6164bdfa0 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x55f61651eee8 <line:775:3, col:103> 'int' '='
|   | |-DeclRefExpr 0x55f61651ec20 <col:3> 'int' lvalue Var 0x55f616517858 'y' 'int'
|   | `-ConditionalOperator 0x55f61651eeb8 <col:7, col:103> 'int'
|   |   |-BinaryOperator 0x55f61651ece0 <col:7, col:25> 'int' '&&'
|   |   | |-ImplicitCastExpr 0x55f61651ec98 <col:7> 'int' <IntegralCast>
|   |   | | `-ImplicitCastExpr 0x55f61651ec80 <col:7> '_Bool' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x55f61651ec40 <col:7> '_Bool' lvalue Var 0x55f616517e58 'y$w_buff0_used' '_Bool'
|   |   | `-ImplicitCastExpr 0x55f61651ecc8 <col:25> 'int' <IntegralCast>
|   |   |   `-ImplicitCastExpr 0x55f61651ecb0 <col:25> '_Bool' <LValueToRValue>
|   |   |     `-DeclRefExpr 0x55f61651ec60 <col:25> '_Bool' lvalue Var 0x55f616517b00 'y$r_buff0_thd2' '_Bool'
|   |   |-ImplicitCastExpr 0x55f61651eea0 <col:42> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x55f61651ed00 <col:42> 'int' lvalue Var 0x55f616517de0 'y$w_buff0' 'int'
|   |   `-ParenExpr 0x55f61651ee80 <col:54, col:103> 'int'
|   |     `-ConditionalOperator 0x55f61651ee50 <col:55, col:102> 'int'
|   |       |-BinaryOperator 0x55f61651edc0 <col:55, col:73> 'int' '&&'
|   |       | |-ImplicitCastExpr 0x55f61651ed78 <col:55> 'int' <IntegralCast>
|   |       | | `-ImplicitCastExpr 0x55f61651ed60 <col:55> '_Bool' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x55f61651ed20 <col:55> '_Bool' lvalue Var 0x55f616517f50 'y$w_buff1_used' '_Bool'
|   |       | `-ImplicitCastExpr 0x55f61651eda8 <col:73> 'int' <IntegralCast>
|   |       |   `-ImplicitCastExpr 0x55f61651ed90 <col:73> '_Bool' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x55f61651ed40 <col:73> '_Bool' lvalue Var 0x55f616517c68 'y$r_buff1_thd2' '_Bool'
|   |       |-ImplicitCastExpr 0x55f61651ee20 <col:90> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x55f61651ede0 <col:90> 'int' lvalue Var 0x55f616517ed8 'y$w_buff1' 'int'
|   |       `-ImplicitCastExpr 0x55f61651ee38 <col:102> 'int' <LValueToRValue>
|   |         `-DeclRefExpr 0x55f61651ee00 <col:102> 'int' lvalue Var 0x55f616517858 'y' 'int'
|   |-BinaryOperator 0x55f61651f0f0 <line:776:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x55f61651ef08 <col:3> '_Bool' lvalue Var 0x55f616517e58 'y$w_buff0_used' '_Bool'
|   | `-ImplicitCastExpr 0x55f61651f0d8 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55f61651f0a8 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x55f61651efc8 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x55f61651ef80 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x55f61651ef68 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x55f61651ef28 <col:20> '_Bool' lvalue Var 0x55f616517e58 'y$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x55f61651efb0 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x55f61651ef98 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x55f61651ef48 <col:38> '_Bool' lvalue Var 0x55f616517b00 'y$r_buff0_thd2' '_Bool'
|   |     |-ImplicitCastExpr 0x55f61651f060 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x55f61651f018 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x55f61651efe8 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x55f61651f090 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x55f61651f078 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x55f61651f040 <col:66> '_Bool' lvalue Var 0x55f616517e58 'y$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x55f61651f3d8 <line:777:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x55f61651f110 <col:3> '_Bool' lvalue Var 0x55f616517f50 'y$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x55f61651f3c0 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55f61651f390 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x55f61651f2b0 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x55f61651f1d0 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x55f61651f188 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x55f61651f170 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x55f61651f130 <col:20> '_Bool' lvalue Var 0x55f616517e58 'y$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x55f61651f1b8 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x55f61651f1a0 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x55f61651f150 <col:38> '_Bool' lvalue Var 0x55f616517b00 'y$r_buff0_thd2' '_Bool'
|   |     | `-BinaryOperator 0x55f61651f290 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x55f61651f248 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x55f61651f230 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x55f61651f1f0 <col:56> '_Bool' lvalue Var 0x55f616517f50 'y$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x55f61651f278 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x55f61651f260 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x55f61651f210 <col:74> '_Bool' lvalue Var 0x55f616517c68 'y$r_buff1_thd2' '_Bool'
|   |     |-ImplicitCastExpr 0x55f61651f348 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x55f61651f300 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x55f61651f2d0 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x55f61651f378 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x55f61651f360 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x55f61651f328 <col:102> '_Bool' lvalue Var 0x55f616517f50 'y$w_buff1_used' '_Bool'
|   |-BinaryOperator 0x55f61651f5e0 <line:778:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x55f61651f3f8 <col:3> '_Bool' lvalue Var 0x55f616517b00 'y$r_buff0_thd2' '_Bool'
|   | `-ImplicitCastExpr 0x55f61651f5c8 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55f61651f598 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x55f61651f4b8 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x55f61651f470 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x55f61651f458 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x55f61651f418 <col:20> '_Bool' lvalue Var 0x55f616517e58 'y$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x55f61651f4a0 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x55f61651f488 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x55f61651f438 <col:38> '_Bool' lvalue Var 0x55f616517b00 'y$r_buff0_thd2' '_Bool'
|   |     |-ImplicitCastExpr 0x55f61651f550 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x55f61651f508 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x55f61651f4d8 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x55f61651f580 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x55f61651f568 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x55f61651f530 <col:66> '_Bool' lvalue Var 0x55f616517b00 'y$r_buff0_thd2' '_Bool'
|   |-BinaryOperator 0x55f61651f8c8 <line:779:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x55f61651f600 <col:3> '_Bool' lvalue Var 0x55f616517c68 'y$r_buff1_thd2' '_Bool'
|   | `-ImplicitCastExpr 0x55f61651f8b0 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55f61651f880 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x55f61651f7a0 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x55f61651f6c0 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x55f61651f678 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x55f61651f660 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x55f61651f620 <col:20> '_Bool' lvalue Var 0x55f616517e58 'y$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x55f61651f6a8 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x55f61651f690 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x55f61651f640 <col:38> '_Bool' lvalue Var 0x55f616517b00 'y$r_buff0_thd2' '_Bool'
|   |     | `-BinaryOperator 0x55f61651f780 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x55f61651f738 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x55f61651f720 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x55f61651f6e0 <col:56> '_Bool' lvalue Var 0x55f616517f50 'y$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x55f61651f768 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x55f61651f750 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x55f61651f700 <col:74> '_Bool' lvalue Var 0x55f616517c68 'y$r_buff1_thd2' '_Bool'
|   |     |-ImplicitCastExpr 0x55f61651f838 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x55f61651f7f0 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x55f61651f7c0 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x55f61651f868 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x55f61651f850 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x55f61651f818 <col:102> '_Bool' lvalue Var 0x55f616517c68 'y$r_buff1_thd2' '_Bool'
|   |-CallExpr 0x55f61651f920 <line:780:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x55f61651f908 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55f61651f8e8 <col:3> 'void ()' Function 0x55f6164be060 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x55f61651f978 <line:781:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x55f61651f960 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55f61651f940 <col:3> 'void ()' Function 0x55f6164bdfa0 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x55f61651fa30 <line:782:3, col:41> 'int' '='
|   | |-DeclRefExpr 0x55f61651f998 <col:3> 'int' lvalue Var 0x55f6165171c8 '__unbuffered_cnt' 'int'
|   | `-BinaryOperator 0x55f61651fa10 <col:22, col:41> 'int' '+'
|   |   |-ImplicitCastExpr 0x55f61651f9f8 <col:22> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x55f61651f9b8 <col:22> 'int' lvalue Var 0x55f6165171c8 '__unbuffered_cnt' 'int'
|   |   `-IntegerLiteral 0x55f61651f9d8 <col:41> 'int' 1
|   |-CallExpr 0x55f61651fa88 <line:783:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x55f61651fa70 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55f61651fa50 <col:3> 'void ()' Function 0x55f6164be060 '__VERIFIER_atomic_end' 'void ()'
|   `-ReturnStmt 0x55f61651fb00 <line:784:3, col:36>
|     `-CallExpr 0x55f61651fae0 <col:10, col:36> 'void *'
|       `-ImplicitCastExpr 0x55f61651fac8 <col:10> 'void *(*)(void)' <FunctionToPointerDecay>
|         `-DeclRefExpr 0x55f61651faa8 <col:10> 'void *(void)' Function 0x55f6164bdab8 '__VERIFIER_nondet_pointer' 'void *(void)'
|-FunctionDecl 0x55f61651fd50 prev 0x55f616516f10 <line:786:1, line:788:1> line:786:6 fence 'void ()'
| `-CompoundStmt 0x55f61651fdf0 <line:787:1, line:788:1>
|-FunctionDecl 0x55f61651fe20 prev 0x55f616516fd0 <line:789:1, line:791:1> line:789:6 isync 'void ()'
| `-CompoundStmt 0x55f61651fec0 <line:790:1, line:791:1>
|-FunctionDecl 0x55f61651fef0 prev 0x55f616517090 <line:792:1, line:794:1> line:792:6 lwfence 'void ()'
| `-CompoundStmt 0x55f61651ff90 <line:793:1, line:794:1>
`-FunctionDecl 0x55f61651fff8 <line:795:1, line:830:1> line:795:5 main 'int ()'
  `-CompoundStmt 0x55f6165243b0 <line:796:1, line:830:1>
    |-DeclStmt 0x55f616520110 <line:797:3, col:18>
    | `-VarDecl 0x55f6165200a8 <col:3, col:13> col:13 used t1679 'pthread_t':'unsigned long'
    |-CallExpr 0x55f616520318 <line:798:3, col:54> 'int'
    | |-ImplicitCastExpr 0x55f616520300 <col:3> 'int (*)(pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x55f616520128 <col:3> 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' Function 0x55f6164fe5b8 'pthread_create' 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)'
    | |-UnaryOperator 0x55f616520168 <col:18, col:19> 'pthread_t *' prefix '&' cannot overflow
    | | `-DeclRefExpr 0x55f616520148 <col:19> 'pthread_t':'unsigned long' lvalue Var 0x55f6165200a8 't1679' 'pthread_t':'unsigned long'
    | |-ImplicitCastExpr 0x55f616520358 <col:26, col:36> 'const pthread_attr_t *' <NullToPointer>
    | | `-ParenExpr 0x55f6165201e0 <col:26, col:36> 'void *'
    | |   `-CStyleCastExpr 0x55f6165201b8 <col:27, col:35> 'void *' <NullToPointer>
    | |     `-IntegerLiteral 0x55f616520180 <col:35> 'int' 0
    | |-ImplicitCastExpr 0x55f616520370 <col:39> 'void *(*)(void *)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x55f616520200 <col:39> 'void *(void *)' Function 0x55f616518158 'P0' 'void *(void *)'
    | `-ParenExpr 0x55f616520280 <col:43, col:53> 'void *'
    |   `-CStyleCastExpr 0x55f616520258 <col:44, col:52> 'void *' <NullToPointer>
    |     `-IntegerLiteral 0x55f616520220 <col:52> 'int' 0
    |-DeclStmt 0x55f616520400 <line:799:3, col:18>
    | `-VarDecl 0x55f616520398 <col:3, col:13> col:13 used t1680 'pthread_t':'unsigned long'
    |-CallExpr 0x55f6165205a8 <line:800:3, col:54> 'int'
    | |-ImplicitCastExpr 0x55f616520590 <col:3> 'int (*)(pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x55f616520418 <col:3> 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' Function 0x55f6164fe5b8 'pthread_create' 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)'
    | |-UnaryOperator 0x55f616520458 <col:18, col:19> 'pthread_t *' prefix '&' cannot overflow
    | | `-DeclRefExpr 0x55f616520438 <col:19> 'pthread_t':'unsigned long' lvalue Var 0x55f616520398 't1680' 'pthread_t':'unsigned long'
    | |-ImplicitCastExpr 0x55f6165205e8 <col:26, col:36> 'const pthread_attr_t *' <NullToPointer>
    | | `-ParenExpr 0x55f6165204d0 <col:26, col:36> 'void *'
    | |   `-CStyleCastExpr 0x55f6165204a8 <col:27, col:35> 'void *' <NullToPointer>
    | |     `-IntegerLiteral 0x55f616520470 <col:35> 'int' 0
    | |-ImplicitCastExpr 0x55f616520600 <col:39> 'void *(*)(void *)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x55f6165204f0 <col:39> 'void *(void *)' Function 0x55f61651b330 'P1' 'void *(void *)'
    | `-ParenExpr 0x55f616520570 <col:43, col:53> 'void *'
    |   `-CStyleCastExpr 0x55f616520548 <col:44, col:52> 'void *' <NullToPointer>
    |     `-IntegerLiteral 0x55f616520510 <col:52> 'int' 0
    |-CallExpr 0x55f616520650 <line:801:3, col:27> 'void'
    | `-ImplicitCastExpr 0x55f616520638 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x55f616520618 <col:3> 'void ()' Function 0x55f6164bdfa0 '__VERIFIER_atomic_begin' 'void ()'
    |-BinaryOperator 0x55f616520720 <line:802:3, col:41> '_Bool' '='
    | |-DeclRefExpr 0x55f616520670 <col:3> '_Bool' lvalue Var 0x55f6165175c0 'main$tmp_guard0' '_Bool'
    | `-ImplicitCastExpr 0x55f616520708 <col:21, col:41> '_Bool' <IntegralToBoolean>
    |   `-BinaryOperator 0x55f6165206e8 <col:21, col:41> 'int' '=='
    |     |-ImplicitCastExpr 0x55f6165206d0 <col:21> 'int' <LValueToRValue>
    |     | `-DeclRefExpr 0x55f616520690 <col:21> 'int' lvalue Var 0x55f6165171c8 '__unbuffered_cnt' 'int'
    |     `-IntegerLiteral 0x55f6165206b0 <col:41> 'int' 2
    |-CallExpr 0x55f616520778 <line:803:3, col:25> 'void'
    | `-ImplicitCastExpr 0x55f616520760 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x55f616520740 <col:3> 'void ()' Function 0x55f6164be060 '__VERIFIER_atomic_end' 'void ()'
    |-CallExpr 0x55f6165207f0 <line:804:3, col:36> 'void'
    | |-ImplicitCastExpr 0x55f6165207d8 <col:3> 'void (*)(int)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x55f616520798 <col:3> 'void (int)' Function 0x55f6164bd940 '__VERIFIER_assume' 'void (int)'
    | `-ImplicitCastExpr 0x55f616520830 <col:21> 'int' <IntegralCast>
    |   `-ImplicitCastExpr 0x55f616520818 <col:21> '_Bool' <LValueToRValue>
    |     `-DeclRefExpr 0x55f6165207b8 <col:21> '_Bool' lvalue Var 0x55f6165175c0 'main$tmp_guard0' '_Bool'
    |-CallExpr 0x55f616520880 <line:805:3, col:27> 'void'
    | `-ImplicitCastExpr 0x55f616520868 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x55f616520848 <col:3> 'void ()' Function 0x55f6164bdfa0 '__VERIFIER_atomic_begin' 'void ()'
    |-BinaryOperator 0x55f616520b90 <line:806:3, col:103> 'int' '='
    | |-DeclRefExpr 0x55f6165208a0 <col:3> 'int' lvalue Var 0x55f616517858 'y' 'int'
    | `-ConditionalOperator 0x55f616520b38 <col:7, col:103> 'int'
    |   |-BinaryOperator 0x55f616520960 <col:7, col:25> 'int' '&&'
    |   | |-ImplicitCastExpr 0x55f616520918 <col:7> 'int' <IntegralCast>
    |   | | `-ImplicitCastExpr 0x55f616520900 <col:7> '_Bool' <LValueToRValue>
    |   | |   `-DeclRefExpr 0x55f6165208c0 <col:7> '_Bool' lvalue Var 0x55f616517e58 'y$w_buff0_used' '_Bool'
    |   | `-ImplicitCastExpr 0x55f616520948 <col:25> 'int' <IntegralCast>
    |   |   `-ImplicitCastExpr 0x55f616520930 <col:25> '_Bool' <LValueToRValue>
    |   |     `-DeclRefExpr 0x55f6165208e0 <col:25> '_Bool' lvalue Var 0x55f6165179e8 'y$r_buff0_thd0' '_Bool'
    |   |-ImplicitCastExpr 0x55f616520b20 <col:42> 'int' <LValueToRValue>
    |   | `-DeclRefExpr 0x55f616520980 <col:42> 'int' lvalue Var 0x55f616517de0 'y$w_buff0' 'int'
    |   `-ParenExpr 0x55f616520b00 <col:54, col:103> 'int'
    |     `-ConditionalOperator 0x55f616520ad0 <col:55, col:102> 'int'
    |       |-BinaryOperator 0x55f616520a40 <col:55, col:73> 'int' '&&'
    |       | |-ImplicitCastExpr 0x55f6165209f8 <col:55> 'int' <IntegralCast>
    |       | | `-ImplicitCastExpr 0x55f6165209e0 <col:55> '_Bool' <LValueToRValue>
    |       | |   `-DeclRefExpr 0x55f6165209a0 <col:55> '_Bool' lvalue Var 0x55f616517f50 'y$w_buff1_used' '_Bool'
    |       | `-ImplicitCastExpr 0x55f616520a28 <col:73> 'int' <IntegralCast>
    |       |   `-ImplicitCastExpr 0x55f616520a10 <col:73> '_Bool' <LValueToRValue>
    |       |     `-DeclRefExpr 0x55f6165209c0 <col:73> '_Bool' lvalue Var 0x55f616517b78 'y$r_buff1_thd0' '_Bool'
    |       |-ImplicitCastExpr 0x55f616520aa0 <col:90> 'int' <LValueToRValue>
    |       | `-DeclRefExpr 0x55f616520a60 <col:90> 'int' lvalue Var 0x55f616517ed8 'y$w_buff1' 'int'
    |       `-ImplicitCastExpr 0x55f616520ab8 <col:102> 'int' <LValueToRValue>
    |         `-DeclRefExpr 0x55f616520a80 <col:102> 'int' lvalue Var 0x55f616517858 'y' 'int'
    |-BinaryOperator 0x55f616520d98 <line:807:3, col:66> '_Bool' '='
    | |-DeclRefExpr 0x55f616520bb0 <col:3> '_Bool' lvalue Var 0x55f616517e58 'y$w_buff0_used' '_Bool'
    | `-ImplicitCastExpr 0x55f616520d80 <col:20, col:66> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x55f616520d50 <col:20, col:66> 'int'
    |     |-BinaryOperator 0x55f616520c70 <col:20, col:38> 'int' '&&'
    |     | |-ImplicitCastExpr 0x55f616520c28 <col:20> 'int' <IntegralCast>
    |     | | `-ImplicitCastExpr 0x55f616520c10 <col:20> '_Bool' <LValueToRValue>
    |     | |   `-DeclRefExpr 0x55f616520bd0 <col:20> '_Bool' lvalue Var 0x55f616517e58 'y$w_buff0_used' '_Bool'
    |     | `-ImplicitCastExpr 0x55f616520c58 <col:38> 'int' <IntegralCast>
    |     |   `-ImplicitCastExpr 0x55f616520c40 <col:38> '_Bool' <LValueToRValue>
    |     |     `-DeclRefExpr 0x55f616520bf0 <col:38> '_Bool' lvalue Var 0x55f6165179e8 'y$r_buff0_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x55f616520d08 <col:55, col:62> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x55f616520cc0 <col:55, col:62> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x55f616520c90 <col:62> 'int' 0
    |     `-ImplicitCastExpr 0x55f616520d38 <col:66> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x55f616520d20 <col:66> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x55f616520ce8 <col:66> '_Bool' lvalue Var 0x55f616517e58 'y$w_buff0_used' '_Bool'
    |-BinaryOperator 0x55f616521080 <line:808:3, col:102> '_Bool' '='
    | |-DeclRefExpr 0x55f616520db8 <col:3> '_Bool' lvalue Var 0x55f616517f50 'y$w_buff1_used' '_Bool'
    | `-ImplicitCastExpr 0x55f616521068 <col:20, col:102> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x55f616521038 <col:20, col:102> 'int'
    |     |-BinaryOperator 0x55f616520f58 <col:20, col:74> 'int' '||'
    |     | |-BinaryOperator 0x55f616520e78 <col:20, col:38> 'int' '&&'
    |     | | |-ImplicitCastExpr 0x55f616520e30 <col:20> 'int' <IntegralCast>
    |     | | | `-ImplicitCastExpr 0x55f616520e18 <col:20> '_Bool' <LValueToRValue>
    |     | | |   `-DeclRefExpr 0x55f616520dd8 <col:20> '_Bool' lvalue Var 0x55f616517e58 'y$w_buff0_used' '_Bool'
    |     | | `-ImplicitCastExpr 0x55f616520e60 <col:38> 'int' <IntegralCast>
    |     | |   `-ImplicitCastExpr 0x55f616520e48 <col:38> '_Bool' <LValueToRValue>
    |     | |     `-DeclRefExpr 0x55f616520df8 <col:38> '_Bool' lvalue Var 0x55f6165179e8 'y$r_buff0_thd0' '_Bool'
    |     | `-BinaryOperator 0x55f616520f38 <col:56, col:74> 'int' '&&'
    |     |   |-ImplicitCastExpr 0x55f616520ef0 <col:56> 'int' <IntegralCast>
    |     |   | `-ImplicitCastExpr 0x55f616520ed8 <col:56> '_Bool' <LValueToRValue>
    |     |   |   `-DeclRefExpr 0x55f616520e98 <col:56> '_Bool' lvalue Var 0x55f616517f50 'y$w_buff1_used' '_Bool'
    |     |   `-ImplicitCastExpr 0x55f616520f20 <col:74> 'int' <IntegralCast>
    |     |     `-ImplicitCastExpr 0x55f616520f08 <col:74> '_Bool' <LValueToRValue>
    |     |       `-DeclRefExpr 0x55f616520eb8 <col:74> '_Bool' lvalue Var 0x55f616517b78 'y$r_buff1_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x55f616520ff0 <col:91, col:98> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x55f616520fa8 <col:91, col:98> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x55f616520f78 <col:98> 'int' 0
    |     `-ImplicitCastExpr 0x55f616521020 <col:102> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x55f616521008 <col:102> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x55f616520fd0 <col:102> '_Bool' lvalue Var 0x55f616517f50 'y$w_buff1_used' '_Bool'
    |-BinaryOperator 0x55f616521288 <line:809:3, col:66> '_Bool' '='
    | |-DeclRefExpr 0x55f6165210a0 <col:3> '_Bool' lvalue Var 0x55f6165179e8 'y$r_buff0_thd0' '_Bool'
    | `-ImplicitCastExpr 0x55f616521270 <col:20, col:66> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x55f616521240 <col:20, col:66> 'int'
    |     |-BinaryOperator 0x55f616521160 <col:20, col:38> 'int' '&&'
    |     | |-ImplicitCastExpr 0x55f616521118 <col:20> 'int' <IntegralCast>
    |     | | `-ImplicitCastExpr 0x55f616521100 <col:20> '_Bool' <LValueToRValue>
    |     | |   `-DeclRefExpr 0x55f6165210c0 <col:20> '_Bool' lvalue Var 0x55f616517e58 'y$w_buff0_used' '_Bool'
    |     | `-ImplicitCastExpr 0x55f616521148 <col:38> 'int' <IntegralCast>
    |     |   `-ImplicitCastExpr 0x55f616521130 <col:38> '_Bool' <LValueToRValue>
    |     |     `-DeclRefExpr 0x55f6165210e0 <col:38> '_Bool' lvalue Var 0x55f6165179e8 'y$r_buff0_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x55f6165211f8 <col:55, col:62> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x55f6165211b0 <col:55, col:62> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x55f616521180 <col:62> 'int' 0
    |     `-ImplicitCastExpr 0x55f616521228 <col:66> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x55f616521210 <col:66> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x55f6165211d8 <col:66> '_Bool' lvalue Var 0x55f6165179e8 'y$r_buff0_thd0' '_Bool'
    |-BinaryOperator 0x55f616521570 <line:810:3, col:102> '_Bool' '='
    | |-DeclRefExpr 0x55f6165212a8 <col:3> '_Bool' lvalue Var 0x55f616517b78 'y$r_buff1_thd0' '_Bool'
    | `-ImplicitCastExpr 0x55f616521558 <col:20, col:102> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x55f616521528 <col:20, col:102> 'int'
    |     |-BinaryOperator 0x55f616521448 <col:20, col:74> 'int' '||'
    |     | |-BinaryOperator 0x55f616521368 <col:20, col:38> 'int' '&&'
    |     | | |-ImplicitCastExpr 0x55f616521320 <col:20> 'int' <IntegralCast>
    |     | | | `-ImplicitCastExpr 0x55f616521308 <col:20> '_Bool' <LValueToRValue>
    |     | | |   `-DeclRefExpr 0x55f6165212c8 <col:20> '_Bool' lvalue Var 0x55f616517e58 'y$w_buff0_used' '_Bool'
    |     | | `-ImplicitCastExpr 0x55f616521350 <col:38> 'int' <IntegralCast>
    |     | |   `-ImplicitCastExpr 0x55f616521338 <col:38> '_Bool' <LValueToRValue>
    |     | |     `-DeclRefExpr 0x55f6165212e8 <col:38> '_Bool' lvalue Var 0x55f6165179e8 'y$r_buff0_thd0' '_Bool'
    |     | `-BinaryOperator 0x55f616521428 <col:56, col:74> 'int' '&&'
    |     |   |-ImplicitCastExpr 0x55f6165213e0 <col:56> 'int' <IntegralCast>
    |     |   | `-ImplicitCastExpr 0x55f6165213c8 <col:56> '_Bool' <LValueToRValue>
    |     |   |   `-DeclRefExpr 0x55f616521388 <col:56> '_Bool' lvalue Var 0x55f616517f50 'y$w_buff1_used' '_Bool'
    |     |   `-ImplicitCastExpr 0x55f616521410 <col:74> 'int' <IntegralCast>
    |     |     `-ImplicitCastExpr 0x55f6165213f8 <col:74> '_Bool' <LValueToRValue>
    |     |       `-DeclRefExpr 0x55f6165213a8 <col:74> '_Bool' lvalue Var 0x55f616517b78 'y$r_buff1_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x55f6165214e0 <col:91, col:98> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x55f616521498 <col:91, col:98> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x55f616521468 <col:98> 'int' 0
    |     `-ImplicitCastExpr 0x55f616521510 <col:102> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x55f6165214f8 <col:102> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x55f6165214c0 <col:102> '_Bool' lvalue Var 0x55f616517b78 'y$r_buff1_thd0' '_Bool'
    |-CallExpr 0x55f6165215c8 <line:811:3, col:25> 'void'
    | `-ImplicitCastExpr 0x55f6165215b0 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x55f616521590 <col:3> 'void ()' Function 0x55f6164be060 '__VERIFIER_atomic_end' 'void ()'
    |-CallExpr 0x55f616521620 <line:812:3, col:27> 'void'
    | `-ImplicitCastExpr 0x55f616521608 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x55f6165215e8 <col:3> 'void ()' Function 0x55f6164bdfa0 '__VERIFIER_atomic_begin' 'void ()'
    |-BinaryOperator 0x55f6165216b8 <line:813:3, col:42> '_Bool' '='
    | |-DeclRefExpr 0x55f616521640 <col:3> '_Bool' lvalue Var 0x55f616517fc8 'weak$$choice0' '_Bool'
    | `-CallExpr 0x55f616521698 <col:19, col:42> '_Bool'
    |   `-ImplicitCastExpr 0x55f616521680 <col:19> '_Bool (*)(void)' <FunctionToPointerDecay>
    |     `-DeclRefExpr 0x55f616521660 <col:19> '_Bool (void)' Function 0x55f6164bd770 '__VERIFIER_nondet_bool' '_Bool (void)'
    |-BinaryOperator 0x55f616521750 <line:814:3, col:42> '_Bool' '='
    | |-DeclRefExpr 0x55f6165216d8 <col:3> '_Bool' lvalue Var 0x55f616518040 'weak$$choice2' '_Bool'
    | `-CallExpr 0x55f616521730 <col:19, col:42> '_Bool'
    |   `-ImplicitCastExpr 0x55f616521718 <col:19> '_Bool (*)(void)' <FunctionToPointerDecay>
    |     `-DeclRefExpr 0x55f6165216f8 <col:19> '_Bool (void)' Function 0x55f6164bd770 '__VERIFIER_nondet_bool' '_Bool (void)'
    |-BinaryOperator 0x55f6165217c8 <line:815:3, col:21> '_Bool' '='
    | |-DeclRefExpr 0x55f616521770 <col:3> '_Bool' lvalue Var 0x55f6165178f0 'y$flush_delayed' '_Bool'
    | `-ImplicitCastExpr 0x55f6165217b0 <col:21> '_Bool' <LValueToRValue>
    |   `-DeclRefExpr 0x55f616521790 <col:21> '_Bool' lvalue Var 0x55f616518040 'weak$$choice2' '_Bool'
    |-BinaryOperator 0x55f616521840 <line:816:3, col:15> 'int' '='
    | |-DeclRefExpr 0x55f6165217e8 <col:3> 'int' lvalue Var 0x55f616517970 'y$mem_tmp' 'int'
    | `-ImplicitCastExpr 0x55f616521828 <col:15> 'int' <LValueToRValue>
    |   `-DeclRefExpr 0x55f616521808 <col:15> 'int' lvalue Var 0x55f616517858 'y' 'int'
    |-BinaryOperator 0x55f616521c88 <line:817:3, col:162> 'int' '='
    | |-DeclRefExpr 0x55f616521860 <col:3> 'int' lvalue Var 0x55f616517858 'y' 'int'
    | `-ConditionalOperator 0x55f616521c58 <col:7, col:162> 'int'
    |   |-BinaryOperator 0x55f616521a70 <col:7, col:84> 'int' '||'
    |   | |-BinaryOperator 0x55f616521990 <col:7, col:46> 'int' '||'
    |   | | |-UnaryOperator 0x55f6165218b8 <col:7, col:8> 'int' prefix '!' cannot overflow
    |   | | | `-ImplicitCastExpr 0x55f6165218a0 <col:8> '_Bool' <LValueToRValue>
    |   | | |   `-DeclRefExpr 0x55f616521880 <col:8> '_Bool' lvalue Var 0x55f616517e58 'y$w_buff0_used' '_Bool'
    |   | | `-BinaryOperator 0x55f616521970 <col:26, col:46> 'int' '&&'
    |   | |   |-UnaryOperator 0x55f616521908 <col:26, col:27> 'int' prefix '!' cannot overflow
    |   | |   | `-ImplicitCastExpr 0x55f6165218f0 <col:27> '_Bool' <LValueToRValue>
    |   | |   |   `-DeclRefExpr 0x55f6165218d0 <col:27> '_Bool' lvalue Var 0x55f6165179e8 'y$r_buff0_thd0' '_Bool'
    |   | |   `-UnaryOperator 0x55f616521958 <col:45, col:46> 'int' prefix '!' cannot overflow
    |   | |     `-ImplicitCastExpr 0x55f616521940 <col:46> '_Bool' <LValueToRValue>
    |   | |       `-DeclRefExpr 0x55f616521920 <col:46> '_Bool' lvalue Var 0x55f616517f50 'y$w_buff1_used' '_Bool'
    |   | `-BinaryOperator 0x55f616521a50 <col:64, col:84> 'int' '&&'
    |   |   |-UnaryOperator 0x55f6165219e8 <col:64, col:65> 'int' prefix '!' cannot overflow
    |   |   | `-ImplicitCastExpr 0x55f6165219d0 <col:65> '_Bool' <LValueToRValue>
    |   |   |   `-DeclRefExpr 0x55f6165219b0 <col:65> '_Bool' lvalue Var 0x55f6165179e8 'y$r_buff0_thd0' '_Bool'
    |   |   `-UnaryOperator 0x55f616521a38 <col:83, col:84> 'int' prefix '!' cannot overflow
    |   |     `-ImplicitCastExpr 0x55f616521a20 <col:84> '_Bool' <LValueToRValue>
    |   |       `-DeclRefExpr 0x55f616521a00 <col:84> '_Bool' lvalue Var 0x55f616517b78 'y$r_buff1_thd0' '_Bool'
    |   |-ImplicitCastExpr 0x55f616521c40 <col:101> 'int' <LValueToRValue>
    |   | `-DeclRefExpr 0x55f616521a90 <col:101> 'int' lvalue Var 0x55f616517858 'y' 'int'
    |   `-ParenExpr 0x55f616521c20 <col:105, col:162> 'int'
    |     `-ConditionalOperator 0x55f616521bf0 <col:106, col:153> 'int'
    |       |-BinaryOperator 0x55f616521b50 <col:106, col:124> 'int' '&&'
    |       | |-ImplicitCastExpr 0x55f616521b08 <col:106> 'int' <IntegralCast>
    |       | | `-ImplicitCastExpr 0x55f616521af0 <col:106> '_Bool' <LValueToRValue>
    |       | |   `-DeclRefExpr 0x55f616521ab0 <col:106> '_Bool' lvalue Var 0x55f616517e58 'y$w_buff0_used' '_Bool'
    |       | `-ImplicitCastExpr 0x55f616521b38 <col:124> 'int' <IntegralCast>
    |       |   `-ImplicitCastExpr 0x55f616521b20 <col:124> '_Bool' <LValueToRValue>
    |       |     `-DeclRefExpr 0x55f616521ad0 <col:124> '_Bool' lvalue Var 0x55f6165179e8 'y$r_buff0_thd0' '_Bool'
    |       |-ImplicitCastExpr 0x55f616521bc0 <col:141> 'int' <LValueToRValue>
    |       | `-DeclRefExpr 0x55f616521b70 <col:141> 'int' lvalue Var 0x55f616517de0 'y$w_buff0' 'int'
    |       `-ImplicitCastExpr 0x55f616521bd8 <col:153> 'int' <LValueToRValue>
    |         `-DeclRefExpr 0x55f616521ba0 <col:153> 'int' lvalue Var 0x55f616517ed8 'y$w_buff1' 'int'
    |-BinaryOperator 0x55f616522198 <line:818:3, col:208> 'int' '='
    | |-DeclRefExpr 0x55f616521ca8 <col:3> 'int' lvalue Var 0x55f616517de0 'y$w_buff0' 'int'
    | `-ConditionalOperator 0x55f616522168 <col:15, col:208> 'int'
    |   |-ImplicitCastExpr 0x55f616522138 <col:15> 'int' <IntegralCast>
    |   | `-ImplicitCastExpr 0x55f616522120 <col:15> '_Bool' <LValueToRValue>
    |   |   `-DeclRefExpr 0x55f616521cc8 <col:15> '_Bool' lvalue Var 0x55f616518040 'weak$$choice2' '_Bool'
    |   |-ImplicitCastExpr 0x55f616522150 <col:31> 'int' <LValueToRValue>
    |   | `-DeclRefExpr 0x55f616521ce8 <col:31> 'int' lvalue Var 0x55f616517de0 'y$w_buff0' 'int'
    |   `-ParenExpr 0x55f616522100 <col:43, col:208> 'int'
    |     `-ConditionalOperator 0x55f6165220d0 <col:44, col:207> 'int'
    |       |-BinaryOperator 0x55f616521ef8 <col:44, col:121> 'int' '||'
    |       | |-BinaryOperator 0x55f616521e18 <col:44, col:83> 'int' '||'
    |       | | |-UnaryOperator 0x55f616521d40 <col:44, col:45> 'int' prefix '!' cannot overflow
    |       | | | `-ImplicitCastExpr 0x55f616521d28 <col:45> '_Bool' <LValueToRValue>
    |       | | |   `-DeclRefExpr 0x55f616521d08 <col:45> '_Bool' lvalue Var 0x55f616517e58 'y$w_buff0_used' '_Bool'
    |       | | `-BinaryOperator 0x55f616521df8 <col:63, col:83> 'int' '&&'
    |       | |   |-UnaryOperator 0x55f616521d90 <col:63, col:64> 'int' prefix '!' cannot overflow
    |       | |   | `-ImplicitCastExpr 0x55f616521d78 <col:64> '_Bool' <LValueToRValue>
    |       | |   |   `-DeclRefExpr 0x55f616521d58 <col:64> '_Bool' lvalue Var 0x55f6165179e8 'y$r_buff0_thd0' '_Bool'
    |       | |   `-UnaryOperator 0x55f616521de0 <col:82, col:83> 'int' prefix '!' cannot overflow
    |       | |     `-ImplicitCastExpr 0x55f616521dc8 <col:83> '_Bool' <LValueToRValue>
    |       | |       `-DeclRefExpr 0x55f616521da8 <col:83> '_Bool' lvalue Var 0x55f616517f50 'y$w_buff1_used' '_Bool'
    |       | `-BinaryOperator 0x55f616521ed8 <col:101, col:121> 'int' '&&'
    |       |   |-UnaryOperator 0x55f616521e70 <col:101, col:102> 'int' prefix '!' cannot overflow
    |       |   | `-ImplicitCastExpr 0x55f616521e58 <col:102> '_Bool' <LValueToRValue>
    |       |   |   `-DeclRefExpr 0x55f616521e38 <col:102> '_Bool' lvalue Var 0x55f6165179e8 'y$r_buff0_thd0' '_Bool'
    |       |   `-UnaryOperator 0x55f616521ec0 <col:120, col:121> 'int' prefix '!' cannot overflow
    |       |     `-ImplicitCastExpr 0x55f616521ea8 <col:121> '_Bool' <LValueToRValue>
    |       |       `-DeclRefExpr 0x55f616521e88 <col:121> '_Bool' lvalue Var 0x55f616517b78 'y$r_buff1_thd0' '_Bool'
    |       |-ImplicitCastExpr 0x55f6165220b8 <col:138> 'int' <LValueToRValue>
    |       | `-DeclRefExpr 0x55f616521f18 <col:138> 'int' lvalue Var 0x55f616517de0 'y$w_buff0' 'int'
    |       `-ParenExpr 0x55f616522098 <col:150, col:207> 'int'
    |         `-ConditionalOperator 0x55f616522068 <col:151, col:198> 'int'
    |           |-BinaryOperator 0x55f616521fd8 <col:151, col:169> 'int' '&&'
    |           | |-ImplicitCastExpr 0x55f616521f90 <col:151> 'int' <IntegralCast>
    |           | | `-ImplicitCastExpr 0x55f616521f78 <col:151> '_Bool' <LValueToRValue>
    |           | |   `-DeclRefExpr 0x55f616521f38 <col:151> '_Bool' lvalue Var 0x55f616517e58 'y$w_buff0_used' '_Bool'
    |           | `-ImplicitCastExpr 0x55f616521fc0 <col:169> 'int' <IntegralCast>
    |           |   `-ImplicitCastExpr 0x55f616521fa8 <col:169> '_Bool' <LValueToRValue>
    |           |     `-DeclRefExpr 0x55f616521f58 <col:169> '_Bool' lvalue Var 0x55f6165179e8 'y$r_buff0_thd0' '_Bool'
    |           |-ImplicitCastExpr 0x55f616522038 <col:186> 'int' <LValueToRValue>
    |           | `-DeclRefExpr 0x55f616521ff8 <col:186> 'int' lvalue Var 0x55f616517de0 'y$w_buff0' 'int'
    |           `-ImplicitCastExpr 0x55f616522050 <col:198> 'int' <LValueToRValue>
    |             `-DeclRefExpr 0x55f616522018 <col:198> 'int' lvalue Var 0x55f616517de0 'y$w_buff0' 'int'
    |-BinaryOperator 0x55f6165226a8 <line:819:3, col:208> 'int' '='
    | |-DeclRefExpr 0x55f6165221b8 <col:3> 'int' lvalue Var 0x55f616517ed8 'y$w_buff1' 'int'
    | `-ConditionalOperator 0x55f616522678 <col:15, col:208> 'int'
    |   |-ImplicitCastExpr 0x55f616522648 <col:15> 'int' <IntegralCast>
    |   | `-ImplicitCastExpr 0x55f616522630 <col:15> '_Bool' <LValueToRValue>
    |   |   `-DeclRefExpr 0x55f6165221d8 <col:15> '_Bool' lvalue Var 0x55f616518040 'weak$$choice2' '_Bool'
    |   |-ImplicitCastExpr 0x55f616522660 <col:31> 'int' <LValueToRValue>
    |   | `-DeclRefExpr 0x55f6165221f8 <col:31> 'int' lvalue Var 0x55f616517ed8 'y$w_buff1' 'int'
    |   `-ParenExpr 0x55f616522610 <col:43, col:208> 'int'
    |     `-ConditionalOperator 0x55f6165225e0 <col:44, col:207> 'int'
    |       |-BinaryOperator 0x55f616522408 <col:44, col:121> 'int' '||'
    |       | |-BinaryOperator 0x55f616522328 <col:44, col:83> 'int' '||'
    |       | | |-UnaryOperator 0x55f616522250 <col:44, col:45> 'int' prefix '!' cannot overflow
    |       | | | `-ImplicitCastExpr 0x55f616522238 <col:45> '_Bool' <LValueToRValue>
    |       | | |   `-DeclRefExpr 0x55f616522218 <col:45> '_Bool' lvalue Var 0x55f616517e58 'y$w_buff0_used' '_Bool'
    |       | | `-BinaryOperator 0x55f616522308 <col:63, col:83> 'int' '&&'
    |       | |   |-UnaryOperator 0x55f6165222a0 <col:63, col:64> 'int' prefix '!' cannot overflow
    |       | |   | `-ImplicitCastExpr 0x55f616522288 <col:64> '_Bool' <LValueToRValue>
    |       | |   |   `-DeclRefExpr 0x55f616522268 <col:64> '_Bool' lvalue Var 0x55f6165179e8 'y$r_buff0_thd0' '_Bool'
    |       | |   `-UnaryOperator 0x55f6165222f0 <col:82, col:83> 'int' prefix '!' cannot overflow
    |       | |     `-ImplicitCastExpr 0x55f6165222d8 <col:83> '_Bool' <LValueToRValue>
    |       | |       `-DeclRefExpr 0x55f6165222b8 <col:83> '_Bool' lvalue Var 0x55f616517f50 'y$w_buff1_used' '_Bool'
    |       | `-BinaryOperator 0x55f6165223e8 <col:101, col:121> 'int' '&&'
    |       |   |-UnaryOperator 0x55f616522380 <col:101, col:102> 'int' prefix '!' cannot overflow
    |       |   | `-ImplicitCastExpr 0x55f616522368 <col:102> '_Bool' <LValueToRValue>
    |       |   |   `-DeclRefExpr 0x55f616522348 <col:102> '_Bool' lvalue Var 0x55f6165179e8 'y$r_buff0_thd0' '_Bool'
    |       |   `-UnaryOperator 0x55f6165223d0 <col:120, col:121> 'int' prefix '!' cannot overflow
    |       |     `-ImplicitCastExpr 0x55f6165223b8 <col:121> '_Bool' <LValueToRValue>
    |       |       `-DeclRefExpr 0x55f616522398 <col:121> '_Bool' lvalue Var 0x55f616517b78 'y$r_buff1_thd0' '_Bool'
    |       |-ImplicitCastExpr 0x55f6165225c8 <col:138> 'int' <LValueToRValue>
    |       | `-DeclRefExpr 0x55f616522428 <col:138> 'int' lvalue Var 0x55f616517ed8 'y$w_buff1' 'int'
    |       `-ParenExpr 0x55f6165225a8 <col:150, col:207> 'int'
    |         `-ConditionalOperator 0x55f616522578 <col:151, col:198> 'int'
    |           |-BinaryOperator 0x55f6165224e8 <col:151, col:169> 'int' '&&'
    |           | |-ImplicitCastExpr 0x55f6165224a0 <col:151> 'int' <IntegralCast>
    |           | | `-ImplicitCastExpr 0x55f616522488 <col:151> '_Bool' <LValueToRValue>
    |           | |   `-DeclRefExpr 0x55f616522448 <col:151> '_Bool' lvalue Var 0x55f616517e58 'y$w_buff0_used' '_Bool'
    |           | `-ImplicitCastExpr 0x55f6165224d0 <col:169> 'int' <IntegralCast>
    |           |   `-ImplicitCastExpr 0x55f6165224b8 <col:169> '_Bool' <LValueToRValue>
    |           |     `-DeclRefExpr 0x55f616522468 <col:169> '_Bool' lvalue Var 0x55f6165179e8 'y$r_buff0_thd0' '_Bool'
    |           |-ImplicitCastExpr 0x55f616522548 <col:186> 'int' <LValueToRValue>
    |           | `-DeclRefExpr 0x55f616522508 <col:186> 'int' lvalue Var 0x55f616517ed8 'y$w_buff1' 'int'
    |           `-ImplicitCastExpr 0x55f616522560 <col:198> 'int' <LValueToRValue>
    |             `-DeclRefExpr 0x55f616522528 <col:198> 'int' lvalue Var 0x55f616517ed8 'y$w_buff1' 'int'
    |-BinaryOperator 0x55f616522c78 <line:820:3, col:227> '_Bool' '='
    | |-DeclRefExpr 0x55f6165226c8 <col:3> '_Bool' lvalue Var 0x55f616517e58 'y$w_buff0_used' '_Bool'
    | `-ImplicitCastExpr 0x55f616522c60 <col:20, col:227> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x55f616522c30 <col:20, col:227> 'int'
    |     |-ImplicitCastExpr 0x55f616522be8 <col:20> 'int' <IntegralCast>
    |     | `-ImplicitCastExpr 0x55f616522bd0 <col:20> '_Bool' <LValueToRValue>
    |     |   `-DeclRefExpr 0x55f6165226e8 <col:20> '_Bool' lvalue Var 0x55f616518040 'weak$$choice2' '_Bool'
    |     |-ImplicitCastExpr 0x55f616522c18 <col:36> 'int' <IntegralCast>
    |     | `-ImplicitCastExpr 0x55f616522c00 <col:36> '_Bool' <LValueToRValue>
    |     |   `-DeclRefExpr 0x55f616522708 <col:36> '_Bool' lvalue Var 0x55f616517e58 'y$w_buff0_used' '_Bool'
    |     `-ParenExpr 0x55f616522bb0 <col:53, col:227> 'int'
    |       `-ConditionalOperator 0x55f616522b58 <col:54, col:226> 'int'
    |         |-BinaryOperator 0x55f616522918 <col:54, col:131> 'int' '||'
    |         | |-BinaryOperator 0x55f616522838 <col:54, col:93> 'int' '||'
    |         | | |-UnaryOperator 0x55f616522760 <col:54, col:55> 'int' prefix '!' cannot overflow
    |         | | | `-ImplicitCastExpr 0x55f616522748 <col:55> '_Bool' <LValueToRValue>
    |         | | |   `-DeclRefExpr 0x55f616522728 <col:55> '_Bool' lvalue Var 0x55f616517e58 'y$w_buff0_used' '_Bool'
    |         | | `-BinaryOperator 0x55f616522818 <col:73, col:93> 'int' '&&'
    |         | |   |-UnaryOperator 0x55f6165227b0 <col:73, col:74> 'int' prefix '!' cannot overflow
    |         | |   | `-ImplicitCastExpr 0x55f616522798 <col:74> '_Bool' <LValueToRValue>
    |         | |   |   `-DeclRefExpr 0x55f616522778 <col:74> '_Bool' lvalue Var 0x55f6165179e8 'y$r_buff0_thd0' '_Bool'
    |         | |   `-UnaryOperator 0x55f616522800 <col:92, col:93> 'int' prefix '!' cannot overflow
    |         | |     `-ImplicitCastExpr 0x55f6165227e8 <col:93> '_Bool' <LValueToRValue>
    |         | |       `-DeclRefExpr 0x55f6165227c8 <col:93> '_Bool' lvalue Var 0x55f616517f50 'y$w_buff1_used' '_Bool'
    |         | `-BinaryOperator 0x55f6165228f8 <col:111, col:131> 'int' '&&'
    |         |   |-UnaryOperator 0x55f616522890 <col:111, col:112> 'int' prefix '!' cannot overflow
    |         |   | `-ImplicitCastExpr 0x55f616522878 <col:112> '_Bool' <LValueToRValue>
    |         |   |   `-DeclRefExpr 0x55f616522858 <col:112> '_Bool' lvalue Var 0x55f6165179e8 'y$r_buff0_thd0' '_Bool'
    |         |   `-UnaryOperator 0x55f6165228e0 <col:130, col:131> 'int' prefix '!' cannot overflow
    |         |     `-ImplicitCastExpr 0x55f6165228c8 <col:131> '_Bool' <LValueToRValue>
    |         |       `-DeclRefExpr 0x55f6165228a8 <col:131> '_Bool' lvalue Var 0x55f616517b78 'y$r_buff1_thd0' '_Bool'
    |         |-ImplicitCastExpr 0x55f616522b40 <col:148> 'int' <IntegralCast>
    |         | `-ImplicitCastExpr 0x55f616522b28 <col:148> '_Bool' <LValueToRValue>
    |         |   `-DeclRefExpr 0x55f616522938 <col:148> '_Bool' lvalue Var 0x55f616517e58 'y$w_buff0_used' '_Bool'
    |         `-ParenExpr 0x55f616522b08 <col:165, col:226> 'int'
    |           `-ConditionalOperator 0x55f616522ad8 <col:166, col:212> 'int'
    |             |-BinaryOperator 0x55f6165229f8 <col:166, col:184> 'int' '&&'
    |             | |-ImplicitCastExpr 0x55f6165229b0 <col:166> 'int' <IntegralCast>
    |             | | `-ImplicitCastExpr 0x55f616522998 <col:166> '_Bool' <LValueToRValue>
    |             | |   `-DeclRefExpr 0x55f616522958 <col:166> '_Bool' lvalue Var 0x55f616517e58 'y$w_buff0_used' '_Bool'
    |             | `-ImplicitCastExpr 0x55f6165229e0 <col:184> 'int' <IntegralCast>
    |             |   `-ImplicitCastExpr 0x55f6165229c8 <col:184> '_Bool' <LValueToRValue>
    |             |     `-DeclRefExpr 0x55f616522978 <col:184> '_Bool' lvalue Var 0x55f6165179e8 'y$r_buff0_thd0' '_Bool'
    |             |-ImplicitCastExpr 0x55f616522a90 <col:201, col:208> 'int' <IntegralCast>
    |             | `-CStyleCastExpr 0x55f616522a48 <col:201, col:208> '_Bool' <IntegralToBoolean>
    |             |   `-IntegerLiteral 0x55f616522a18 <col:208> 'int' 0
    |             `-ImplicitCastExpr 0x55f616522ac0 <col:212> 'int' <IntegralCast>
    |               `-ImplicitCastExpr 0x55f616522aa8 <col:212> '_Bool' <LValueToRValue>
    |                 `-DeclRefExpr 0x55f616522a70 <col:212> '_Bool' lvalue Var 0x55f616517e58 'y$w_buff0_used' '_Bool'
    |-BinaryOperator 0x55f616523240 <line:821:3, col:221> '_Bool' '='
    | |-DeclRefExpr 0x55f616522c98 <col:3> '_Bool' lvalue Var 0x55f616517f50 'y$w_buff1_used' '_Bool'
    | `-ImplicitCastExpr 0x55f616523228 <col:20, col:221> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x55f6165231f8 <col:20, col:221> 'int'
    |     |-ImplicitCastExpr 0x55f6165231b0 <col:20> 'int' <IntegralCast>
    |     | `-ImplicitCastExpr 0x55f616523198 <col:20> '_Bool' <LValueToRValue>
    |     |   `-DeclRefExpr 0x55f616522cb8 <col:20> '_Bool' lvalue Var 0x55f616518040 'weak$$choice2' '_Bool'
    |     |-ImplicitCastExpr 0x55f6165231e0 <col:36> 'int' <IntegralCast>
    |     | `-ImplicitCastExpr 0x55f6165231c8 <col:36> '_Bool' <LValueToRValue>
    |     |   `-DeclRefExpr 0x55f616522cd8 <col:36> '_Bool' lvalue Var 0x55f616517f50 'y$w_buff1_used' '_Bool'
    |     `-ParenExpr 0x55f616523178 <col:53, col:221> 'int'
    |       `-ConditionalOperator 0x55f616523148 <col:54, col:220> 'int'
    |         |-BinaryOperator 0x55f616522ee8 <col:54, col:131> 'int' '||'
    |         | |-BinaryOperator 0x55f616522e08 <col:54, col:93> 'int' '||'
    |         | | |-UnaryOperator 0x55f616522d30 <col:54, col:55> 'int' prefix '!' cannot overflow
    |         | | | `-ImplicitCastExpr 0x55f616522d18 <col:55> '_Bool' <LValueToRValue>
    |         | | |   `-DeclRefExpr 0x55f616522cf8 <col:55> '_Bool' lvalue Var 0x55f616517e58 'y$w_buff0_used' '_Bool'
    |         | | `-BinaryOperator 0x55f616522de8 <col:73, col:93> 'int' '&&'
    |         | |   |-UnaryOperator 0x55f616522d80 <col:73, col:74> 'int' prefix '!' cannot overflow
    |         | |   | `-ImplicitCastExpr 0x55f616522d68 <col:74> '_Bool' <LValueToRValue>
    |         | |   |   `-DeclRefExpr 0x55f616522d48 <col:74> '_Bool' lvalue Var 0x55f6165179e8 'y$r_buff0_thd0' '_Bool'
    |         | |   `-UnaryOperator 0x55f616522dd0 <col:92, col:93> 'int' prefix '!' cannot overflow
    |         | |     `-ImplicitCastExpr 0x55f616522db8 <col:93> '_Bool' <LValueToRValue>
    |         | |       `-DeclRefExpr 0x55f616522d98 <col:93> '_Bool' lvalue Var 0x55f616517f50 'y$w_buff1_used' '_Bool'
    |         | `-BinaryOperator 0x55f616522ec8 <col:111, col:131> 'int' '&&'
    |         |   |-UnaryOperator 0x55f616522e60 <col:111, col:112> 'int' prefix '!' cannot overflow
    |         |   | `-ImplicitCastExpr 0x55f616522e48 <col:112> '_Bool' <LValueToRValue>
    |         |   |   `-DeclRefExpr 0x55f616522e28 <col:112> '_Bool' lvalue Var 0x55f6165179e8 'y$r_buff0_thd0' '_Bool'
    |         |   `-UnaryOperator 0x55f616522eb0 <col:130, col:131> 'int' prefix '!' cannot overflow
    |         |     `-ImplicitCastExpr 0x55f616522e98 <col:131> '_Bool' <LValueToRValue>
    |         |       `-DeclRefExpr 0x55f616522e78 <col:131> '_Bool' lvalue Var 0x55f616517b78 'y$r_buff1_thd0' '_Bool'
    |         |-ImplicitCastExpr 0x55f616523130 <col:148> 'int' <IntegralCast>
    |         | `-ImplicitCastExpr 0x55f616523118 <col:148> '_Bool' <LValueToRValue>
    |         |   `-DeclRefExpr 0x55f616522f08 <col:148> '_Bool' lvalue Var 0x55f616517f50 'y$w_buff1_used' '_Bool'
    |         `-ParenExpr 0x55f6165230f8 <col:165, col:220> 'int'
    |           `-ConditionalOperator 0x55f6165230c8 <col:166, col:219> 'int'
    |             |-BinaryOperator 0x55f616522fc8 <col:166, col:184> 'int' '&&'
    |             | |-ImplicitCastExpr 0x55f616522f80 <col:166> 'int' <IntegralCast>
    |             | | `-ImplicitCastExpr 0x55f616522f68 <col:166> '_Bool' <LValueToRValue>
    |             | |   `-DeclRefExpr 0x55f616522f28 <col:166> '_Bool' lvalue Var 0x55f616517e58 'y$w_buff0_used' '_Bool'
    |             | `-ImplicitCastExpr 0x55f616522fb0 <col:184> 'int' <IntegralCast>
    |             |   `-ImplicitCastExpr 0x55f616522f98 <col:184> '_Bool' <LValueToRValue>
    |             |     `-DeclRefExpr 0x55f616522f48 <col:184> '_Bool' lvalue Var 0x55f6165179e8 'y$r_buff0_thd0' '_Bool'
    |             |-ImplicitCastExpr 0x55f616523098 <col:201, col:208> 'int' <IntegralCast>
    |             | `-CStyleCastExpr 0x55f616523018 <col:201, col:208> '_Bool' <IntegralToBoolean>
    |             |   `-IntegerLiteral 0x55f616522fe8 <col:208> 'int' 0
    |             `-ImplicitCastExpr 0x55f6165230b0 <col:212, col:219> 'int' <IntegralCast>
    |               `-CStyleCastExpr 0x55f616523070 <col:212, col:219> '_Bool' <IntegralToBoolean>
    |                 `-IntegerLiteral 0x55f616523040 <col:219> 'int' 0
    |-BinaryOperator 0x55f6165237e8 <line:822:3, col:227> '_Bool' '='
    | |-DeclRefExpr 0x55f616523260 <col:3> '_Bool' lvalue Var 0x55f6165179e8 'y$r_buff0_thd0' '_Bool'
    | `-ImplicitCastExpr 0x55f6165237d0 <col:20, col:227> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x55f6165237a0 <col:20, col:227> 'int'
    |     |-ImplicitCastExpr 0x55f616523758 <col:20> 'int' <IntegralCast>
    |     | `-ImplicitCastExpr 0x55f616523740 <col:20> '_Bool' <LValueToRValue>
    |     |   `-DeclRefExpr 0x55f616523280 <col:20> '_Bool' lvalue Var 0x55f616518040 'weak$$choice2' '_Bool'
    |     |-ImplicitCastExpr 0x55f616523788 <col:36> 'int' <IntegralCast>
    |     | `-ImplicitCastExpr 0x55f616523770 <col:36> '_Bool' <LValueToRValue>
    |     |   `-DeclRefExpr 0x55f6165232a0 <col:36> '_Bool' lvalue Var 0x55f6165179e8 'y$r_buff0_thd0' '_Bool'
    |     `-ParenExpr 0x55f616523720 <col:53, col:227> 'int'
    |       `-ConditionalOperator 0x55f6165236f0 <col:54, col:226> 'int'
    |         |-BinaryOperator 0x55f6165234b0 <col:54, col:131> 'int' '||'
    |         | |-BinaryOperator 0x55f6165233d0 <col:54, col:93> 'int' '||'
    |         | | |-UnaryOperator 0x55f6165232f8 <col:54, col:55> 'int' prefix '!' cannot overflow
    |         | | | `-ImplicitCastExpr 0x55f6165232e0 <col:55> '_Bool' <LValueToRValue>
    |         | | |   `-DeclRefExpr 0x55f6165232c0 <col:55> '_Bool' lvalue Var 0x55f616517e58 'y$w_buff0_used' '_Bool'
    |         | | `-BinaryOperator 0x55f6165233b0 <col:73, col:93> 'int' '&&'
    |         | |   |-UnaryOperator 0x55f616523348 <col:73, col:74> 'int' prefix '!' cannot overflow
    |         | |   | `-ImplicitCastExpr 0x55f616523330 <col:74> '_Bool' <LValueToRValue>
    |         | |   |   `-DeclRefExpr 0x55f616523310 <col:74> '_Bool' lvalue Var 0x55f6165179e8 'y$r_buff0_thd0' '_Bool'
    |         | |   `-UnaryOperator 0x55f616523398 <col:92, col:93> 'int' prefix '!' cannot overflow
    |         | |     `-ImplicitCastExpr 0x55f616523380 <col:93> '_Bool' <LValueToRValue>
    |         | |       `-DeclRefExpr 0x55f616523360 <col:93> '_Bool' lvalue Var 0x55f616517f50 'y$w_buff1_used' '_Bool'
    |         | `-BinaryOperator 0x55f616523490 <col:111, col:131> 'int' '&&'
    |         |   |-UnaryOperator 0x55f616523428 <col:111, col:112> 'int' prefix '!' cannot overflow
    |         |   | `-ImplicitCastExpr 0x55f616523410 <col:112> '_Bool' <LValueToRValue>
    |         |   |   `-DeclRefExpr 0x55f6165233f0 <col:112> '_Bool' lvalue Var 0x55f6165179e8 'y$r_buff0_thd0' '_Bool'
    |         |   `-UnaryOperator 0x55f616523478 <col:130, col:131> 'int' prefix '!' cannot overflow
    |         |     `-ImplicitCastExpr 0x55f616523460 <col:131> '_Bool' <LValueToRValue>
    |         |       `-DeclRefExpr 0x55f616523440 <col:131> '_Bool' lvalue Var 0x55f616517b78 'y$r_buff1_thd0' '_Bool'
    |         |-ImplicitCastExpr 0x55f6165236d8 <col:148> 'int' <IntegralCast>
    |         | `-ImplicitCastExpr 0x55f6165236c0 <col:148> '_Bool' <LValueToRValue>
    |         |   `-DeclRefExpr 0x55f6165234d0 <col:148> '_Bool' lvalue Var 0x55f6165179e8 'y$r_buff0_thd0' '_Bool'
    |         `-ParenExpr 0x55f6165236a0 <col:165, col:226> 'int'
    |           `-ConditionalOperator 0x55f616523670 <col:166, col:212> 'int'
    |             |-BinaryOperator 0x55f616523590 <col:166, col:184> 'int' '&&'
    |             | |-ImplicitCastExpr 0x55f616523548 <col:166> 'int' <IntegralCast>
    |             | | `-ImplicitCastExpr 0x55f616523530 <col:166> '_Bool' <LValueToRValue>
    |             | |   `-DeclRefExpr 0x55f6165234f0 <col:166> '_Bool' lvalue Var 0x55f616517e58 'y$w_buff0_used' '_Bool'
    |             | `-ImplicitCastExpr 0x55f616523578 <col:184> 'int' <IntegralCast>
    |             |   `-ImplicitCastExpr 0x55f616523560 <col:184> '_Bool' <LValueToRValue>
    |             |     `-DeclRefExpr 0x55f616523510 <col:184> '_Bool' lvalue Var 0x55f6165179e8 'y$r_buff0_thd0' '_Bool'
    |             |-ImplicitCastExpr 0x55f616523628 <col:201, col:208> 'int' <IntegralCast>
    |             | `-CStyleCastExpr 0x55f6165235e0 <col:201, col:208> '_Bool' <IntegralToBoolean>
    |             |   `-IntegerLiteral 0x55f6165235b0 <col:208> 'int' 0
    |             `-ImplicitCastExpr 0x55f616523658 <col:212> 'int' <IntegralCast>
    |               `-ImplicitCastExpr 0x55f616523640 <col:212> '_Bool' <LValueToRValue>
    |                 `-DeclRefExpr 0x55f616523608 <col:212> '_Bool' lvalue Var 0x55f6165179e8 'y$r_buff0_thd0' '_Bool'
    |-BinaryOperator 0x55f616523dc0 <line:823:3, col:221> '_Bool' '='
    | |-DeclRefExpr 0x55f616523808 <col:3> '_Bool' lvalue Var 0x55f616517b78 'y$r_buff1_thd0' '_Bool'
    | `-ImplicitCastExpr 0x55f616523da8 <col:20, col:221> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x55f616523d78 <col:20, col:221> 'int'
    |     |-ImplicitCastExpr 0x55f616523d30 <col:20> 'int' <IntegralCast>
    |     | `-ImplicitCastExpr 0x55f616523d18 <col:20> '_Bool' <LValueToRValue>
    |     |   `-DeclRefExpr 0x55f616523828 <col:20> '_Bool' lvalue Var 0x55f616518040 'weak$$choice2' '_Bool'
    |     |-ImplicitCastExpr 0x55f616523d60 <col:36> 'int' <IntegralCast>
    |     | `-ImplicitCastExpr 0x55f616523d48 <col:36> '_Bool' <LValueToRValue>
    |     |   `-DeclRefExpr 0x55f616523848 <col:36> '_Bool' lvalue Var 0x55f616517b78 'y$r_buff1_thd0' '_Bool'
    |     `-ParenExpr 0x55f616523cf8 <col:53, col:221> 'int'
    |       `-ConditionalOperator 0x55f616523cc8 <col:54, col:220> 'int'
    |         |-BinaryOperator 0x55f616523a58 <col:54, col:131> 'int' '||'
    |         | |-BinaryOperator 0x55f616523978 <col:54, col:93> 'int' '||'
    |         | | |-UnaryOperator 0x55f6165238a0 <col:54, col:55> 'int' prefix '!' cannot overflow
    |         | | | `-ImplicitCastExpr 0x55f616523888 <col:55> '_Bool' <LValueToRValue>
    |         | | |   `-DeclRefExpr 0x55f616523868 <col:55> '_Bool' lvalue Var 0x55f616517e58 'y$w_buff0_used' '_Bool'
    |         | | `-BinaryOperator 0x55f616523958 <col:73, col:93> 'int' '&&'
    |         | |   |-UnaryOperator 0x55f6165238f0 <col:73, col:74> 'int' prefix '!' cannot overflow
    |         | |   | `-ImplicitCastExpr 0x55f6165238d8 <col:74> '_Bool' <LValueToRValue>
    |         | |   |   `-DeclRefExpr 0x55f6165238b8 <col:74> '_Bool' lvalue Var 0x55f6165179e8 'y$r_buff0_thd0' '_Bool'
    |         | |   `-UnaryOperator 0x55f616523940 <col:92, col:93> 'int' prefix '!' cannot overflow
    |         | |     `-ImplicitCastExpr 0x55f616523928 <col:93> '_Bool' <LValueToRValue>
    |         | |       `-DeclRefExpr 0x55f616523908 <col:93> '_Bool' lvalue Var 0x55f616517f50 'y$w_buff1_used' '_Bool'
    |         | `-BinaryOperator 0x55f616523a38 <col:111, col:131> 'int' '&&'
    |         |   |-UnaryOperator 0x55f6165239d0 <col:111, col:112> 'int' prefix '!' cannot overflow
    |         |   | `-ImplicitCastExpr 0x55f6165239b8 <col:112> '_Bool' <LValueToRValue>
    |         |   |   `-DeclRefExpr 0x55f616523998 <col:112> '_Bool' lvalue Var 0x55f6165179e8 'y$r_buff0_thd0' '_Bool'
    |         |   `-UnaryOperator 0x55f616523a20 <col:130, col:131> 'int' prefix '!' cannot overflow
    |         |     `-ImplicitCastExpr 0x55f616523a08 <col:131> '_Bool' <LValueToRValue>
    |         |       `-DeclRefExpr 0x55f6165239e8 <col:131> '_Bool' lvalue Var 0x55f616517b78 'y$r_buff1_thd0' '_Bool'
    |         |-ImplicitCastExpr 0x55f616523cb0 <col:148> 'int' <IntegralCast>
    |         | `-ImplicitCastExpr 0x55f616523c98 <col:148> '_Bool' <LValueToRValue>
    |         |   `-DeclRefExpr 0x55f616523a78 <col:148> '_Bool' lvalue Var 0x55f616517b78 'y$r_buff1_thd0' '_Bool'
    |         `-ParenExpr 0x55f616523c78 <col:165, col:220> 'int'
    |           `-ConditionalOperator 0x55f616523c48 <col:166, col:219> 'int'
    |             |-BinaryOperator 0x55f616523b38 <col:166, col:184> 'int' '&&'
    |             | |-ImplicitCastExpr 0x55f616523af0 <col:166> 'int' <IntegralCast>
    |             | | `-ImplicitCastExpr 0x55f616523ad8 <col:166> '_Bool' <LValueToRValue>
    |             | |   `-DeclRefExpr 0x55f616523a98 <col:166> '_Bool' lvalue Var 0x55f616517e58 'y$w_buff0_used' '_Bool'
    |             | `-ImplicitCastExpr 0x55f616523b20 <col:184> 'int' <IntegralCast>
    |             |   `-ImplicitCastExpr 0x55f616523b08 <col:184> '_Bool' <LValueToRValue>
    |             |     `-DeclRefExpr 0x55f616523ab8 <col:184> '_Bool' lvalue Var 0x55f6165179e8 'y$r_buff0_thd0' '_Bool'
    |             |-ImplicitCastExpr 0x55f616523c18 <col:201, col:208> 'int' <IntegralCast>
    |             | `-CStyleCastExpr 0x55f616523b88 <col:201, col:208> '_Bool' <IntegralToBoolean>
    |             |   `-IntegerLiteral 0x55f616523b58 <col:208> 'int' 0
    |             `-ImplicitCastExpr 0x55f616523c30 <col:212, col:219> 'int' <IntegralCast>
    |               `-CStyleCastExpr 0x55f616523bf0 <col:212, col:219> '_Bool' <IntegralToBoolean>
    |                 `-IntegerLiteral 0x55f616523bc0 <col:219> 'int' 0
    |-BinaryOperator 0x55f616524090 <line:824:3, col:113> '_Bool' '='
    | |-DeclRefExpr 0x55f616523de0 <col:3> '_Bool' lvalue Var 0x55f616517638 'main$tmp_guard1' '_Bool'
    | `-ImplicitCastExpr 0x55f616524078 <col:21, col:113> '_Bool' <IntegralToBoolean>
    |   `-UnaryOperator 0x55f616524060 <col:21, col:113> 'int' prefix '!' cannot overflow
    |     `-ParenExpr 0x55f616524040 <col:22, col:113> 'int'
    |       `-BinaryOperator 0x55f616524020 <col:23, col:112> 'int' '&&'
    |         |-BinaryOperator 0x55f616523f88 <col:23, col:84> 'int' '&&'
    |         | |-BinaryOperator 0x55f616523ef0 <col:23, col:56> 'int' '&&'
    |         | | |-BinaryOperator 0x55f616523e58 <col:23, col:28> 'int' '=='
    |         | | | |-ImplicitCastExpr 0x55f616523e40 <col:23> 'int' <LValueToRValue>
    |         | | | | `-DeclRefExpr 0x55f616523e00 <col:23> 'int' lvalue Var 0x55f616517858 'y' 'int'
    |         | | | `-IntegerLiteral 0x55f616523e20 <col:28> 'int' 2
    |         | | `-BinaryOperator 0x55f616523ed0 <col:33, col:56> 'int' '=='
    |         | |   |-ImplicitCastExpr 0x55f616523eb8 <col:33> 'int' <LValueToRValue>
    |         | |   | `-DeclRefExpr 0x55f616523e78 <col:33> 'int' lvalue Var 0x55f6165172e8 '__unbuffered_p0_EAX' 'int'
    |         | |   `-IntegerLiteral 0x55f616523e98 <col:56> 'int' 0
    |         | `-BinaryOperator 0x55f616523f68 <col:61, col:84> 'int' '=='
    |         |   |-ImplicitCastExpr 0x55f616523f50 <col:61> 'int' <LValueToRValue>
    |         |   | `-DeclRefExpr 0x55f616523f10 <col:61> 'int' lvalue Var 0x55f616517408 '__unbuffered_p1_EAX' 'int'
    |         |   `-IntegerLiteral 0x55f616523f30 <col:84> 'int' 2
    |         `-BinaryOperator 0x55f616524000 <col:89, col:112> 'int' '=='
    |           |-ImplicitCastExpr 0x55f616523fe8 <col:89> 'int' <LValueToRValue>
    |           | `-DeclRefExpr 0x55f616523fa8 <col:89> 'int' lvalue Var 0x55f616517528 '__unbuffered_p1_EBX' 'int'
    |           `-IntegerLiteral 0x55f616523fc8 <col:112> 'int' 0
    |-BinaryOperator 0x55f6165241c0 <line:825:3, col:37> 'int' '='
    | |-DeclRefExpr 0x55f6165240b0 <col:3> 'int' lvalue Var 0x55f616517858 'y' 'int'
    | `-ConditionalOperator 0x55f616524190 <col:7, col:37> 'int'
    |   |-ImplicitCastExpr 0x55f616524148 <col:7> 'int' <IntegralCast>
    |   | `-ImplicitCastExpr 0x55f616524130 <col:7> '_Bool' <LValueToRValue>
    |   |   `-DeclRefExpr 0x55f6165240d0 <col:7> '_Bool' lvalue Var 0x55f6165178f0 'y$flush_delayed' '_Bool'
    |   |-ImplicitCastExpr 0x55f616524160 <col:25> 'int' <LValueToRValue>
    |   | `-DeclRefExpr 0x55f6165240f0 <col:25> 'int' lvalue Var 0x55f616517970 'y$mem_tmp' 'int'
    |   `-ImplicitCastExpr 0x55f616524178 <col:37> 'int' <LValueToRValue>
    |     `-DeclRefExpr 0x55f616524110 <col:37> 'int' lvalue Var 0x55f616517858 'y' 'int'
    |-BinaryOperator 0x55f616524258 <line:826:3, col:28> '_Bool' '='
    | |-DeclRefExpr 0x55f6165241e0 <col:3> '_Bool' lvalue Var 0x55f6165178f0 'y$flush_delayed' '_Bool'
    | `-CStyleCastExpr 0x55f616524230 <col:21, col:28> '_Bool' <IntegralToBoolean>
    |   `-IntegerLiteral 0x55f616524200 <col:28> 'int' 0
    |-CallExpr 0x55f6165242b0 <line:827:3, col:25> 'void'
    | `-ImplicitCastExpr 0x55f616524298 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x55f616524278 <col:3> 'void ()' Function 0x55f6164be060 '__VERIFIER_atomic_end' 'void ()'
    |-CallExpr 0x55f616524328 <line:828:3, col:36> 'void'
    | |-ImplicitCastExpr 0x55f616524310 <col:3> 'void (*)(int)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x55f6165242d0 <col:3> 'void (int)' Function 0x55f6164bdd28 '__VERIFIER_assert' 'void (int)'
    | `-ImplicitCastExpr 0x55f616524368 <col:21> 'int' <IntegralCast>
    |   `-ImplicitCastExpr 0x55f616524350 <col:21> '_Bool' <LValueToRValue>
    |     `-DeclRefExpr 0x55f6165242f0 <col:21> '_Bool' lvalue Var 0x55f616517638 'main$tmp_guard1' '_Bool'
    `-ReturnStmt 0x55f6165243a0 <line:829:3, col:10>
      `-IntegerLiteral 0x55f616524380 <col:10> 'int' 0
