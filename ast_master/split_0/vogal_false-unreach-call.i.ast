TranslationUnitDecl 0x56167824cdf8 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x56167824d6b8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x56167824d390 '__int128'
|-TypedefDecl 0x56167824d728 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x56167824d3b0 'unsigned __int128'
|-TypedefDecl 0x56167824da30 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x56167824d800 'struct __NSConstantString_tag'
|   `-Record 0x56167824d780 '__NSConstantString_tag'
|-TypedefDecl 0x56167824dad8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x56167824da90 'char *'
|   `-BuiltinType 0x56167824ce90 'char'
|-TypedefDecl 0x56167828ca70 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'struct __va_list_tag [1]'
| `-ConstantArrayType 0x56167824dd70 'struct __va_list_tag [1]' 1 
|   `-RecordType 0x56167824dbb0 'struct __va_list_tag'
|     `-Record 0x56167824db30 '__va_list_tag'
|-FunctionDecl 0x56167828cb50 <./split_0/vogal_false-unreach-call.i:1:1, col:61> col:13 used __VERIFIER_error 'void () __attribute__((noreturn))' extern
|-FunctionDecl 0x56167828cd20 <line:3:1, line:8:1> line:3:6 used __VERIFIER_assert 'void (int)'
| |-ParmVarDecl 0x56167828cc50 <col:24, col:28> col:28 used cond 'int'
| `-CompoundStmt 0x56167828cf70 <col:34, line:8:1>
|   |-IfStmt 0x56167828cf48 <line:4:3, line:6:3>
|   | |-UnaryOperator 0x56167828ce20 <line:4:7, col:13> 'int' prefix '!' cannot overflow
|   | | `-ImplicitCastExpr 0x56167828ce08 <col:8, col:13> 'int' <LValueToRValue>
|   | |   `-ParenExpr 0x56167828cde8 <col:8, col:13> 'int' lvalue
|   | |     `-DeclRefExpr 0x56167828cdc8 <col:9> 'int' lvalue ParmVar 0x56167828cc50 'cond' 'int'
|   | `-CompoundStmt 0x56167828cf30 <col:16, line:6:3>
|   |   `-LabelStmt 0x56167828cf18 <line:5:5, col:29> 'ERROR'
|   |     `-CallExpr 0x56167828cea8 <col:12, col:29> 'void'
|   |       `-ImplicitCastExpr 0x56167828ce90 <col:12> 'void (*)() __attribute__((noreturn))' <FunctionToPointerDecay>
|   |         `-DeclRefExpr 0x56167828ce38 <col:12> 'void () __attribute__((noreturn))' Function 0x56167828cb50 '__VERIFIER_error' 'void () __attribute__((noreturn))'
|   `-ReturnStmt 0x56167828cf60 <line:7:3>
|-FunctionDecl 0x56167828cfe0 <line:11:1, col:36> col:13 used __VERIFIER_nondet_char 'char ()' extern
`-FunctionDecl 0x56167828d158 <line:13:1, line:47:1> line:13:5 main 'int (void)'
  `-CompoundStmt 0x5616782b34b0 <line:14:1, line:47:1>
    |-DeclStmt 0x56167828d848 <line:15:3, col:89>
    | |-VarDecl 0x56167828d2d0 <col:3, col:25> col:8 used string_entrada 'char [10]'
    | `-VarDecl 0x56167828d390 <col:3, col:88> col:28 used vetor_vogais 'char [11]' cinit
    |   `-InitListExpr 0x56167828d5a8 <col:43, col:88> 'char [11]'
    |     |-ImplicitCastExpr 0x56167828d5e8 <col:44> 'char' <IntegralCast>
    |     | `-CharacterLiteral 0x56167828d3f8 <col:44> 'int' 97
    |     |-ImplicitCastExpr 0x56167828d608 <col:48> 'char' <IntegralCast>
    |     | `-CharacterLiteral 0x56167828d410 <col:48> 'int' 65
    |     |-ImplicitCastExpr 0x56167828d630 <col:52> 'char' <IntegralCast>
    |     | `-CharacterLiteral 0x56167828d428 <col:52> 'int' 101
    |     |-ImplicitCastExpr 0x56167828d668 <col:56> 'char' <IntegralCast>
    |     | `-CharacterLiteral 0x56167828d440 <col:56> 'int' 69
    |     |-ImplicitCastExpr 0x56167828d680 <col:60> 'char' <IntegralCast>
    |     | `-CharacterLiteral 0x56167828d458 <col:60> 'int' 105
    |     |-ImplicitCastExpr 0x56167828d6d8 <col:64> 'char' <IntegralCast>
    |     | `-CharacterLiteral 0x56167828d470 <col:64> 'int' 73
    |     |-ImplicitCastExpr 0x56167828d6f0 <col:68> 'char' <IntegralCast>
    |     | `-CharacterLiteral 0x56167828d488 <col:68> 'int' 111
    |     |-ImplicitCastExpr 0x56167828d708 <col:72> 'char' <IntegralCast>
    |     | `-CharacterLiteral 0x56167828d4a0 <col:72> 'int' 79
    |     |-ImplicitCastExpr 0x56167828d720 <col:76> 'char' <IntegralCast>
    |     | `-CharacterLiteral 0x56167828d4b8 <col:76> 'int' 117
    |     |-ImplicitCastExpr 0x56167828d7b8 <col:80> 'char' <IntegralCast>
    |     | `-CharacterLiteral 0x56167828d4d0 <col:80> 'int' 85
    |     `-ImplicitCastExpr 0x56167828d7d0 <col:84> 'char' <IntegralCast>
    |       `-CharacterLiteral 0x56167828d4e8 <col:84> 'int' 0
    |-NullStmt 0x56167828d860 <col:90>
    |-DeclStmt 0x5616782b1b50 <line:16:3, col:48>
    | |-VarDecl 0x56167828d880 <col:3, col:16> col:16 used i 'unsigned int'
    | |-VarDecl 0x56167828d900 <col:3, col:18> col:18 used j 'unsigned int'
    | |-VarDecl 0x56167828d980 <col:3, col:20> col:20 used cont 'unsigned int'
    | |-VarDecl 0x56167828da00 <col:3, col:26> col:26 tam_string 'unsigned int'
    | `-VarDecl 0x5616782b1ab8 <col:3, col:38> col:38 used n_caracter 'unsigned int'
    |-ForStmt 0x5616782b1de8 <line:18:3, line:19:48>
    | |-BinaryOperator 0x5616782b1bc0 <line:18:7, col:9> 'unsigned int' '='
    | | |-DeclRefExpr 0x5616782b1b68 <col:7> 'unsigned int' lvalue Var 0x56167828d880 'i' 'unsigned int'
    | | `-ImplicitCastExpr 0x5616782b1ba8 <col:9> 'unsigned int' <IntegralCast>
    | |   `-IntegerLiteral 0x5616782b1b88 <col:9> 'int' 0
    | |-<<<NULL>>>
    | |-BinaryOperator 0x5616782b1c50 <col:11, col:13> 'int' '<'
    | | |-ImplicitCastExpr 0x5616782b1c20 <col:11> 'unsigned int' <LValueToRValue>
    | | | `-DeclRefExpr 0x5616782b1be0 <col:11> 'unsigned int' lvalue Var 0x56167828d880 'i' 'unsigned int'
    | | `-ImplicitCastExpr 0x5616782b1c38 <col:13> 'unsigned int' <IntegralCast>
    | |   `-IntegerLiteral 0x5616782b1c00 <col:13> 'int' 10
    | |-UnaryOperator 0x5616782b1c90 <col:16, col:17> 'unsigned int' postfix '++'
    | | `-DeclRefExpr 0x5616782b1c70 <col:16> 'unsigned int' lvalue Var 0x56167828d880 'i' 'unsigned int'
    | `-BinaryOperator 0x5616782b1dc8 <line:19:5, col:48> 'char' '='
    |   |-ArraySubscriptExpr 0x5616782b1d18 <col:5, col:21> 'char' lvalue
    |   | |-ImplicitCastExpr 0x5616782b1ce8 <col:5> 'char *' <ArrayToPointerDecay>
    |   | | `-DeclRefExpr 0x5616782b1ca8 <col:5> 'char [10]' lvalue Var 0x56167828d2d0 'string_entrada' 'char [10]'
    |   | `-ImplicitCastExpr 0x5616782b1d00 <col:20> 'unsigned int' <LValueToRValue>
    |   |   `-DeclRefExpr 0x5616782b1cc8 <col:20> 'unsigned int' lvalue Var 0x56167828d880 'i' 'unsigned int'
    |   `-CallExpr 0x5616782b1da8 <col:25, col:48> 'char'
    |     `-ImplicitCastExpr 0x5616782b1d90 <col:25> 'char (*)()' <FunctionToPointerDecay>
    |       `-DeclRefExpr 0x5616782b1d38 <col:25> 'char ()' Function 0x56167828cfe0 '__VERIFIER_nondet_char' 'char ()'
    |-BinaryOperator 0x5616782b1f08 <line:21:3, col:25> 'char' '='
    | |-ArraySubscriptExpr 0x5616782b1eb8 <col:3, col:23> 'char' lvalue
    | | |-ImplicitCastExpr 0x5616782b1ea0 <col:3> 'char *' <ArrayToPointerDecay>
    | | | `-DeclRefExpr 0x5616782b1e20 <col:3> 'char [10]' lvalue Var 0x56167828d2d0 'string_entrada' 'char [10]'
    | | `-BinaryOperator 0x5616782b1e80 <col:18, col:22> 'int' '-'
    | |   |-IntegerLiteral 0x5616782b1e40 <col:18> 'int' 10
    | |   `-IntegerLiteral 0x5616782b1e60 <col:22> 'int' 1
    | `-ImplicitCastExpr 0x5616782b1ef0 <col:25> 'char' <IntegralCast>
    |   `-CharacterLiteral 0x5616782b1ed8 <col:25> 'int' 0
    |-BinaryOperator 0x5616782b1f80 <line:23:3, col:16> 'unsigned int' '='
    | |-DeclRefExpr 0x5616782b1f28 <col:3> 'unsigned int' lvalue Var 0x5616782b1ab8 'n_caracter' 'unsigned int'
    | `-ImplicitCastExpr 0x5616782b1f68 <col:16> 'unsigned int' <IntegralCast>
    |   `-IntegerLiteral 0x5616782b1f48 <col:16> 'int' 0
    |-WhileStmt 0x5616782b20d0 <line:24:3, line:25:15>
    | |-BinaryOperator 0x5616782b2078 <line:24:9, col:37> 'int' '!='
    | | |-ImplicitCastExpr 0x5616782b2060 <col:9, col:34> 'int' <IntegralCast>
    | | | `-ImplicitCastExpr 0x5616782b2048 <col:9, col:34> 'char' <LValueToRValue>
    | | |   `-ArraySubscriptExpr 0x5616782b2010 <col:9, col:34> 'char' lvalue
    | | |     |-ImplicitCastExpr 0x5616782b1fe0 <col:9> 'char *' <ArrayToPointerDecay>
    | | |     | `-DeclRefExpr 0x5616782b1fa0 <col:9> 'char [10]' lvalue Var 0x56167828d2d0 'string_entrada' 'char [10]'
    | | |     `-ImplicitCastExpr 0x5616782b1ff8 <col:24> 'unsigned int' <LValueToRValue>
    | | |       `-DeclRefExpr 0x5616782b1fc0 <col:24> 'unsigned int' lvalue Var 0x5616782b1ab8 'n_caracter' 'unsigned int'
    | | `-CharacterLiteral 0x5616782b2030 <col:37> 'int' 0
    | `-UnaryOperator 0x5616782b20b8 <line:25:5, col:15> 'unsigned int' postfix '++'
    |   `-DeclRefExpr 0x5616782b2098 <col:5> 'unsigned int' lvalue Var 0x5616782b1ab8 'n_caracter' 'unsigned int'
    |-BinaryOperator 0x5616782b2148 <line:27:3, col:10> 'unsigned int' '='
    | |-DeclRefExpr 0x5616782b20f0 <col:3> 'unsigned int' lvalue Var 0x56167828d980 'cont' 'unsigned int'
    | `-ImplicitCastExpr 0x5616782b2130 <col:10> 'unsigned int' <IntegralCast>
    |   `-IntegerLiteral 0x5616782b2110 <col:10> 'int' 0
    |-ForStmt 0x5616782b2610 <line:28:3, line:31:16>
    | |-BinaryOperator 0x5616782b21c0 <line:28:7, col:9> 'unsigned int' '='
    | | |-DeclRefExpr 0x5616782b2168 <col:7> 'unsigned int' lvalue Var 0x56167828d880 'i' 'unsigned int'
    | | `-ImplicitCastExpr 0x5616782b21a8 <col:9> 'unsigned int' <IntegralCast>
    | |   `-IntegerLiteral 0x5616782b2188 <col:9> 'int' 0
    | |-<<<NULL>>>
    | |-BinaryOperator 0x5616782b2250 <col:11, col:13> 'int' '<'
    | | |-ImplicitCastExpr 0x5616782b2220 <col:11> 'unsigned int' <LValueToRValue>
    | | | `-DeclRefExpr 0x5616782b21e0 <col:11> 'unsigned int' lvalue Var 0x56167828d880 'i' 'unsigned int'
    | | `-ImplicitCastExpr 0x5616782b2238 <col:13> 'unsigned int' <LValueToRValue>
    | |   `-DeclRefExpr 0x5616782b2200 <col:13> 'unsigned int' lvalue Var 0x5616782b1ab8 'n_caracter' 'unsigned int'
    | |-UnaryOperator 0x5616782b2290 <col:24, col:25> 'unsigned int' postfix '++'
    | | `-DeclRefExpr 0x5616782b2270 <col:24> 'unsigned int' lvalue Var 0x56167828d880 'i' 'unsigned int'
    | `-ForStmt 0x5616782b25d8 <line:29:6, line:31:16>
    |   |-BinaryOperator 0x5616782b2300 <line:29:10, col:12> 'unsigned int' '='
    |   | |-DeclRefExpr 0x5616782b22a8 <col:10> 'unsigned int' lvalue Var 0x56167828d900 'j' 'unsigned int'
    |   | `-ImplicitCastExpr 0x5616782b22e8 <col:12> 'unsigned int' <IntegralCast>
    |   |   `-IntegerLiteral 0x5616782b22c8 <col:12> 'int' 0
    |   |-<<<NULL>>>
    |   |-BinaryOperator 0x5616782b2390 <col:14, col:16> 'int' '<'
    |   | |-ImplicitCastExpr 0x5616782b2360 <col:14> 'unsigned int' <LValueToRValue>
    |   | | `-DeclRefExpr 0x5616782b2320 <col:14> 'unsigned int' lvalue Var 0x56167828d900 'j' 'unsigned int'
    |   | `-ImplicitCastExpr 0x5616782b2378 <col:16> 'unsigned int' <IntegralCast>
    |   |   `-IntegerLiteral 0x5616782b2340 <col:16> 'int' 8
    |   |-UnaryOperator 0x5616782b23d0 <col:18, col:19> 'unsigned int' postfix '++'
    |   | `-DeclRefExpr 0x5616782b23b0 <col:18> 'unsigned int' lvalue Var 0x56167828d900 'j' 'unsigned int'
    |   `-IfStmt 0x5616782b25c0 <line:30:9, line:31:16>
    |     |-BinaryOperator 0x5616782b2568 <line:30:12, col:47> 'int' '=='
    |     | |-ImplicitCastExpr 0x5616782b2538 <col:12, col:28> 'int' <IntegralCast>
    |     | | `-ImplicitCastExpr 0x5616782b2508 <col:12, col:28> 'char' <LValueToRValue>
    |     | |   `-ArraySubscriptExpr 0x5616782b2458 <col:12, col:28> 'char' lvalue
    |     | |     |-ImplicitCastExpr 0x5616782b2428 <col:12> 'char *' <ArrayToPointerDecay>
    |     | |     | `-DeclRefExpr 0x5616782b23e8 <col:12> 'char [10]' lvalue Var 0x56167828d2d0 'string_entrada' 'char [10]'
    |     | |     `-ImplicitCastExpr 0x5616782b2440 <col:27> 'unsigned int' <LValueToRValue>
    |     | |       `-DeclRefExpr 0x5616782b2408 <col:27> 'unsigned int' lvalue Var 0x56167828d880 'i' 'unsigned int'
    |     | `-ImplicitCastExpr 0x5616782b2550 <col:33, col:47> 'int' <IntegralCast>
    |     |   `-ImplicitCastExpr 0x5616782b2520 <col:33, col:47> 'char' <LValueToRValue>
    |     |     `-ArraySubscriptExpr 0x5616782b24e8 <col:33, col:47> 'char' lvalue
    |     |       |-ImplicitCastExpr 0x5616782b24b8 <col:33> 'char *' <ArrayToPointerDecay>
    |     |       | `-DeclRefExpr 0x5616782b2478 <col:33> 'char [11]' lvalue Var 0x56167828d390 'vetor_vogais' 'char [11]'
    |     |       `-ImplicitCastExpr 0x5616782b24d0 <col:46> 'unsigned int' <LValueToRValue>
    |     |         `-DeclRefExpr 0x5616782b2498 <col:46> 'unsigned int' lvalue Var 0x56167828d900 'j' 'unsigned int'
    |     `-UnaryOperator 0x5616782b25a8 <line:31:12, col:16> 'unsigned int' postfix '++'
    |       `-DeclRefExpr 0x5616782b2588 <col:12> 'unsigned int' lvalue Var 0x56167828d980 'cont' 'unsigned int'
    |-BinaryOperator 0x5616782b26a0 <line:33:3, col:5> 'unsigned int' '='
    | |-DeclRefExpr 0x5616782b2648 <col:3> 'unsigned int' lvalue Var 0x56167828d880 'i' 'unsigned int'
    | `-ImplicitCastExpr 0x5616782b2688 <col:5> 'unsigned int' <IntegralCast>
    |   `-IntegerLiteral 0x5616782b2668 <col:5> 'int' 0
    |-DeclStmt 0x5616782b2760 <line:34:3, col:19>
    | `-VarDecl 0x5616782b26d8 <col:3, col:18> col:7 used cont_aux 'int' cinit
    |   `-IntegerLiteral 0x5616782b2740 <col:18> 'int' 0
    |-WhileStmt 0x5616782b3320 <line:35:3, line:43:3>
    | |-BinaryOperator 0x5616782b2850 <line:35:9, col:28> 'int' '!='
    | | |-ImplicitCastExpr 0x5616782b2838 <col:9, col:25> 'int' <IntegralCast>
    | | | `-ImplicitCastExpr 0x5616782b2820 <col:9, col:25> 'char' <LValueToRValue>
    | | |   `-ArraySubscriptExpr 0x5616782b27e8 <col:9, col:25> 'char' lvalue
    | | |     |-ImplicitCastExpr 0x5616782b27b8 <col:9> 'char *' <ArrayToPointerDecay>
    | | |     | `-DeclRefExpr 0x5616782b2778 <col:9> 'char [10]' lvalue Var 0x56167828d2d0 'string_entrada' 'char [10]'
    | | |     `-ImplicitCastExpr 0x5616782b27d0 <col:24> 'unsigned int' <LValueToRValue>
    | | |       `-DeclRefExpr 0x5616782b2798 <col:24> 'unsigned int' lvalue Var 0x56167828d880 'i' 'unsigned int'
    | | `-CharacterLiteral 0x5616782b2808 <col:28> 'int' 0
    | `-CompoundStmt 0x5616782b3300 <line:36:3, line:43:3>
    |   |-ForStmt 0x5616782b3290 <line:37:5, line:41:5>
    |   | |-BinaryOperator 0x5616782b28c8 <line:37:9, col:11> 'unsigned int' '='
    |   | | |-DeclRefExpr 0x5616782b2870 <col:9> 'unsigned int' lvalue Var 0x56167828d900 'j' 'unsigned int'
    |   | | `-ImplicitCastExpr 0x5616782b28b0 <col:11> 'unsigned int' <IntegralCast>
    |   | |   `-IntegerLiteral 0x5616782b2890 <col:11> 'int' 0
    |   | |-<<<NULL>>>
    |   | |-BinaryOperator 0x5616782b2958 <col:13, col:15> 'int' '<'
    |   | | |-ImplicitCastExpr 0x5616782b2928 <col:13> 'unsigned int' <LValueToRValue>
    |   | | | `-DeclRefExpr 0x5616782b28e8 <col:13> 'unsigned int' lvalue Var 0x56167828d900 'j' 'unsigned int'
    |   | | `-ImplicitCastExpr 0x5616782b2940 <col:15> 'unsigned int' <IntegralCast>
    |   | |   `-IntegerLiteral 0x5616782b2908 <col:15> 'int' 10
    |   | |-UnaryOperator 0x5616782b2998 <col:18, col:19> 'unsigned int' postfix '++'
    |   | | `-DeclRefExpr 0x5616782b2978 <col:18> 'unsigned int' lvalue Var 0x56167828d900 'j' 'unsigned int'
    |   | `-CompoundStmt 0x5616782b3278 <line:38:5, line:41:5>
    |   |   `-IfStmt 0x5616782b3260 <line:39:9, line:40:20>
    |   |     |-BinaryOperator 0x5616782b3208 <line:39:12, col:47> 'int' '=='
    |   |     | |-ImplicitCastExpr 0x5616782b31d8 <col:12, col:28> 'int' <IntegralCast>
    |   |     | | `-ImplicitCastExpr 0x5616782b31a8 <col:12, col:28> 'char' <LValueToRValue>
    |   |     | |   `-ArraySubscriptExpr 0x5616782b2a20 <col:12, col:28> 'char' lvalue
    |   |     | |     |-ImplicitCastExpr 0x5616782b29f0 <col:12> 'char *' <ArrayToPointerDecay>
    |   |     | |     | `-DeclRefExpr 0x5616782b29b0 <col:12> 'char [10]' lvalue Var 0x56167828d2d0 'string_entrada' 'char [10]'
    |   |     | |     `-ImplicitCastExpr 0x5616782b2a08 <col:27> 'unsigned int' <LValueToRValue>
    |   |     | |       `-DeclRefExpr 0x5616782b29d0 <col:27> 'unsigned int' lvalue Var 0x56167828d880 'i' 'unsigned int'
    |   |     | `-ImplicitCastExpr 0x5616782b31f0 <col:33, col:47> 'int' <IntegralCast>
    |   |     |   `-ImplicitCastExpr 0x5616782b31c0 <col:33, col:47> 'char' <LValueToRValue>
    |   |     |     `-ArraySubscriptExpr 0x5616782b3188 <col:33, col:47> 'char' lvalue
    |   |     |       |-ImplicitCastExpr 0x5616782b2a80 <col:33> 'char *' <ArrayToPointerDecay>
    |   |     |       | `-DeclRefExpr 0x5616782b2a40 <col:33> 'char [11]' lvalue Var 0x56167828d390 'vetor_vogais' 'char [11]'
    |   |     |       `-ImplicitCastExpr 0x5616782b3170 <col:46> 'unsigned int' <LValueToRValue>
    |   |     |         `-DeclRefExpr 0x5616782b2a60 <col:46> 'unsigned int' lvalue Var 0x56167828d900 'j' 'unsigned int'
    |   |     `-UnaryOperator 0x5616782b3248 <line:40:12, col:20> 'int' postfix '++'
    |   |       `-DeclRefExpr 0x5616782b3228 <col:12> 'int' lvalue Var 0x5616782b26d8 'cont_aux' 'int'
    |   `-UnaryOperator 0x5616782b32e8 <line:42:5, col:6> 'unsigned int' postfix '++'
    |     `-DeclRefExpr 0x5616782b32c8 <col:5> 'unsigned int' lvalue Var 0x56167828d880 'i' 'unsigned int'
    |-CallExpr 0x5616782b3458 <line:44:3, col:35> 'void'
    | |-ImplicitCastExpr 0x5616782b3440 <col:3> 'void (*)(int)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x5616782b3340 <col:3> 'void (int)' Function 0x56167828cd20 '__VERIFIER_assert' 'void (int)'
    | `-BinaryOperator 0x5616782b33e8 <col:21, col:31> 'int' '=='
    |   |-ImplicitCastExpr 0x5616782b33d0 <col:21> 'unsigned int' <IntegralCast>
    |   | `-ImplicitCastExpr 0x5616782b33a0 <col:21> 'int' <LValueToRValue>
    |   |   `-DeclRefExpr 0x5616782b3360 <col:21> 'int' lvalue Var 0x5616782b26d8 'cont_aux' 'int'
    |   `-ImplicitCastExpr 0x5616782b33b8 <col:31> 'unsigned int' <LValueToRValue>
    |     `-DeclRefExpr 0x5616782b3380 <col:31> 'unsigned int' lvalue Var 0x56167828d980 'cont' 'unsigned int'
    `-ReturnStmt 0x5616782b34a0 <line:46:3, col:10>
      `-IntegerLiteral 0x5616782b3480 <col:10> 'int' 0
