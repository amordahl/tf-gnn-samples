TranslationUnitDecl 0x55cc0dbb0e18 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x55cc0dbb16d8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x55cc0dbb13b0 '__int128'
|-TypedefDecl 0x55cc0dbb1748 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x55cc0dbb13d0 'unsigned __int128'
|-TypedefDecl 0x55cc0dbb1a50 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x55cc0dbb1820 'struct __NSConstantString_tag'
|   `-Record 0x55cc0dbb17a0 '__NSConstantString_tag'
|-TypedefDecl 0x55cc0dbb1af8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x55cc0dbb1ab0 'char *'
|   `-BuiltinType 0x55cc0dbb0eb0 'char'
|-TypedefDecl 0x55cc0dbf0650 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'struct __va_list_tag [1]'
| `-ConstantArrayType 0x55cc0dbb1d90 'struct __va_list_tag [1]' 1 
|   `-RecordType 0x55cc0dbb1bd0 'struct __va_list_tag'
|     `-Record 0x55cc0dbb1b50 '__va_list_tag'
|-FunctionDecl 0x55cc0dbf0790 <./split_0/mix015_tso.opt_false-unreach-call.i:1:1, col:34> col:13 used __VERIFIER_assume 'void (int)' extern
| `-ParmVarDecl 0x55cc0dbf06c0 <col:31> col:34 'int'
|-FunctionDecl 0x55cc0dbf0958 <line:2:1, col:45> col:15 used __VERIFIER_nondet_pointer 'void *(void)' extern
|-FunctionDecl 0x55cc0dbf0a80 <line:3:1, col:61> col:13 used __VERIFIER_error 'void () __attribute__((noreturn))' extern
|-FunctionDecl 0x55cc0dbf0bc8 <line:4:1, col:99> col:6 used __VERIFIER_assert 'void (int)'
| |-ParmVarDecl 0x55cc0dbf0b38 <col:24, col:28> col:28 used expression 'int'
| `-CompoundStmt 0x55cc0dbf0df8 <col:40, col:99>
|   |-IfStmt 0x55cc0dbf0dc8 <col:42, col:88>
|   | |-UnaryOperator 0x55cc0dbf0ca8 <col:46, col:47> 'int' prefix '!' cannot overflow
|   | | `-ImplicitCastExpr 0x55cc0dbf0c90 <col:47> 'int' <LValueToRValue>
|   | |   `-DeclRefExpr 0x55cc0dbf0c70 <col:47> 'int' lvalue ParmVar 0x55cc0dbf0b38 'expression' 'int'
|   | `-CompoundStmt 0x55cc0dbf0db0 <col:59, col:88>
|   |   `-LabelStmt 0x55cc0dbf0d98 <col:61, col:85> 'ERROR'
|   |     `-CallExpr 0x55cc0dbf0d28 <col:68, col:85> 'void'
|   |       `-ImplicitCastExpr 0x55cc0dbf0d10 <col:68> 'void (*)() __attribute__((noreturn))' <FunctionToPointerDecay>
|   |         `-DeclRefExpr 0x55cc0dbf0cc0 <col:68> 'void () __attribute__((noreturn))' Function 0x55cc0dbf0a80 '__VERIFIER_error' 'void () __attribute__((noreturn))'
|   |-NullStmt 0x55cc0dbf0de0 <col:89>
|   `-ReturnStmt 0x55cc0dbf0de8 <col:91>
|-FunctionDecl 0x55cc0dbf0e40 <line:5:1, col:37> col:13 used __VERIFIER_atomic_begin 'void ()' extern
|-FunctionDecl 0x55cc0dbf0f00 <line:6:1, col:35> col:13 used __VERIFIER_atomic_end 'void ()' extern
|-FunctionDecl 0x55cc0dbf1280 <line:8:1, line:10:76> line:8:13 __assert_fail 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x55cc0dbf0fb8 <col:28, col:40> col:40 __assertion 'const char *'
| |-ParmVarDecl 0x55cc0dbf1038 <col:53, col:65> col:65 __file 'const char *'
| |-ParmVarDecl 0x55cc0dbf10b8 <line:9:7, col:20> col:20 __line 'unsigned int'
| |-ParmVarDecl 0x55cc0dbf1138 <col:28, col:40> col:40 __function 'const char *'
| `-NoThrowAttr 0x55cc0dbf1340 <line:10:22>
|-FunctionDecl 0x55cc0dc17390 <line:11:1, line:13:76> line:11:13 __assert_perror_fail 'void (int, const char *, unsigned int, const char *) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x55cc0dbf13b0 <col:35, col:39> col:39 __errnum 'int'
| |-ParmVarDecl 0x55cc0dbf1430 <col:49, col:61> col:61 __file 'const char *'
| |-ParmVarDecl 0x55cc0dbf14b0 <line:12:7, col:20> col:20 __line 'unsigned int'
| |-ParmVarDecl 0x55cc0dbf1530 <col:28, col:40> col:40 __function 'const char *'
| `-NoThrowAttr 0x55cc0dc17450 <line:13:22>
|-FunctionDecl 0x55cc0dc17700 <line:14:1, line:15:76> line:14:13 __assert 'void (const char *, const char *, int) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x55cc0dc174c0 <col:23, col:35> col:35 __assertion 'const char *'
| |-ParmVarDecl 0x55cc0dc17540 <col:48, col:60> col:60 __file 'const char *'
| |-ParmVarDecl 0x55cc0dc175c0 <col:68, col:72> col:72 __line 'int'
| `-NoThrowAttr 0x55cc0dc177b8 <line:15:22>
|-TypedefDecl 0x55cc0dc17828 <line:17:1, col:23> col:23 __u_char 'unsigned char'
| `-BuiltinType 0x55cc0dbb0f70 'unsigned char'
|-TypedefDecl 0x55cc0dc17898 <line:18:1, col:28> col:28 __u_short 'unsigned short'
| `-BuiltinType 0x55cc0dbb0f90 'unsigned short'
|-TypedefDecl 0x55cc0dc17908 <line:19:1, col:22> col:22 __u_int 'unsigned int'
| `-BuiltinType 0x55cc0dbb0fb0 'unsigned int'
|-TypedefDecl 0x55cc0dc17978 <line:20:1, col:27> col:27 __u_long 'unsigned long'
| `-BuiltinType 0x55cc0dbb0fd0 'unsigned long'
|-TypedefDecl 0x55cc0dc179e8 <line:21:1, col:21> col:21 __int8_t 'signed char'
| `-BuiltinType 0x55cc0dbb0ed0 'signed char'
|-TypedefDecl 0x55cc0dc17a58 <line:22:1, col:23> col:23 __uint8_t 'unsigned char'
| `-BuiltinType 0x55cc0dbb0f70 'unsigned char'
|-TypedefDecl 0x55cc0dc17ac8 <line:23:1, col:26> col:26 __int16_t 'short'
| `-BuiltinType 0x55cc0dbb0ef0 'short'
|-TypedefDecl 0x55cc0dc17b38 <line:24:1, col:28> col:28 __uint16_t 'unsigned short'
| `-BuiltinType 0x55cc0dbb0f90 'unsigned short'
|-TypedefDecl 0x55cc0dc17ba8 <line:25:1, col:20> col:20 __int32_t 'int'
| `-BuiltinType 0x55cc0dbb0f10 'int'
|-TypedefDecl 0x55cc0dc17c18 <line:26:1, col:22> col:22 __uint32_t 'unsigned int'
| `-BuiltinType 0x55cc0dbb0fb0 'unsigned int'
|-TypedefDecl 0x55cc0dc17c88 <line:27:1, col:25> col:25 __int64_t 'long'
| `-BuiltinType 0x55cc0dbb0f30 'long'
|-TypedefDecl 0x55cc0dc17cf8 <line:28:1, col:27> col:27 referenced __uint64_t 'unsigned long'
| `-BuiltinType 0x55cc0dbb0fd0 'unsigned long'
|-TypedefDecl 0x55cc0dc17d68 <line:29:1, col:18> col:18 referenced __quad_t 'long'
| `-BuiltinType 0x55cc0dbb0f30 'long'
|-TypedefDecl 0x55cc0dc17dd8 <line:30:1, col:27> col:27 __u_quad_t 'unsigned long'
| `-BuiltinType 0x55cc0dbb0fd0 'unsigned long'
|-TypedefDecl 0x55cc0dc17e48 <line:31:1, col:27> col:27 __dev_t 'unsigned long'
| `-BuiltinType 0x55cc0dbb0fd0 'unsigned long'
|-TypedefDecl 0x55cc0dc17eb8 <line:32:1, col:22> col:22 __uid_t 'unsigned int'
| `-BuiltinType 0x55cc0dbb0fb0 'unsigned int'
|-TypedefDecl 0x55cc0dc17f28 <line:33:1, col:22> col:22 __gid_t 'unsigned int'
| `-BuiltinType 0x55cc0dbb0fb0 'unsigned int'
|-TypedefDecl 0x55cc0dc17f98 <line:34:1, col:27> col:27 __ino_t 'unsigned long'
| `-BuiltinType 0x55cc0dbb0fd0 'unsigned long'
|-TypedefDecl 0x55cc0dc18008 <line:35:1, col:27> col:27 __ino64_t 'unsigned long'
| `-BuiltinType 0x55cc0dbb0fd0 'unsigned long'
|-TypedefDecl 0x55cc0dc18078 <line:36:1, col:22> col:22 __mode_t 'unsigned int'
| `-BuiltinType 0x55cc0dbb0fb0 'unsigned int'
|-TypedefDecl 0x55cc0dc180e8 <line:37:1, col:27> col:27 __nlink_t 'unsigned long'
| `-BuiltinType 0x55cc0dbb0fd0 'unsigned long'
|-TypedefDecl 0x55cc0dc18158 <line:38:1, col:18> col:18 __off_t 'long'
| `-BuiltinType 0x55cc0dbb0f30 'long'
|-TypedefDecl 0x55cc0dc181c8 <line:39:1, col:18> col:18 referenced __off64_t 'long'
| `-BuiltinType 0x55cc0dbb0f30 'long'
|-TypedefDecl 0x55cc0dc18238 <line:40:1, col:13> col:13 referenced __pid_t 'int'
| `-BuiltinType 0x55cc0dbb0f10 'int'
|-RecordDecl 0x55cc0dc18290 <line:41:9, col:32> col:9 struct definition
| `-FieldDecl 0x55cc0dc18408 <col:18, col:29> col:22 __val 'int [2]'
|-TypedefDecl 0x55cc0dc184c0 <col:1, col:34> col:34 __fsid_t 'struct __fsid_t':'__fsid_t'
| `-ElaboratedType 0x55cc0dc18460 'struct __fsid_t' sugar
|   `-RecordType 0x55cc0dc18310 '__fsid_t'
|     `-Record 0x55cc0dc18290 ''
|-TypedefDecl 0x55cc0dc18548 <line:42:1, col:18> col:18 referenced __clock_t 'long'
| `-BuiltinType 0x55cc0dbb0f30 'long'
|-TypedefDecl 0x55cc0dc185b8 <line:43:1, col:27> col:27 __rlim_t 'unsigned long'
| `-BuiltinType 0x55cc0dbb0fd0 'unsigned long'
|-TypedefDecl 0x55cc0dc18628 <line:44:1, col:27> col:27 __rlim64_t 'unsigned long'
| `-BuiltinType 0x55cc0dbb0fd0 'unsigned long'
|-TypedefDecl 0x55cc0dc18698 <line:45:1, col:22> col:22 __id_t 'unsigned int'
| `-BuiltinType 0x55cc0dbb0fb0 'unsigned int'
|-TypedefDecl 0x55cc0dc18708 <line:46:1, col:18> col:18 referenced __time_t 'long'
| `-BuiltinType 0x55cc0dbb0f30 'long'
|-TypedefDecl 0x55cc0dc18778 <line:47:1, col:22> col:22 __useconds_t 'unsigned int'
| `-BuiltinType 0x55cc0dbb0fb0 'unsigned int'
|-TypedefDecl 0x55cc0dc187e8 <line:48:1, col:18> col:18 __suseconds_t 'long'
| `-BuiltinType 0x55cc0dbb0f30 'long'
|-TypedefDecl 0x55cc0dc18858 <line:49:1, col:13> col:13 __daddr_t 'int'
| `-BuiltinType 0x55cc0dbb0f10 'int'
|-TypedefDecl 0x55cc0dc188c8 <line:50:1, col:13> col:13 __key_t 'int'
| `-BuiltinType 0x55cc0dbb0f10 'int'
|-TypedefDecl 0x55cc0dc18938 <line:51:1, col:13> col:13 referenced __clockid_t 'int'
| `-BuiltinType 0x55cc0dbb0f10 'int'
|-TypedefDecl 0x55cc0dc189a8 <line:52:1, col:16> col:16 referenced __timer_t 'void *'
| `-PointerType 0x55cc0dbb1630 'void *'
|   `-BuiltinType 0x55cc0dbb0e70 'void'
|-TypedefDecl 0x55cc0dc18a18 <line:53:1, col:18> col:18 __blksize_t 'long'
| `-BuiltinType 0x55cc0dbb0f30 'long'
|-TypedefDecl 0x55cc0dc18a88 <line:54:1, col:18> col:18 __blkcnt_t 'long'
| `-BuiltinType 0x55cc0dbb0f30 'long'
|-TypedefDecl 0x55cc0dc18af8 <line:55:1, col:18> col:18 __blkcnt64_t 'long'
| `-BuiltinType 0x55cc0dbb0f30 'long'
|-TypedefDecl 0x55cc0dc18b68 <line:56:1, col:27> col:27 __fsblkcnt_t 'unsigned long'
| `-BuiltinType 0x55cc0dbb0fd0 'unsigned long'
|-TypedefDecl 0x55cc0dc18bd8 <line:57:1, col:27> col:27 __fsblkcnt64_t 'unsigned long'
| `-BuiltinType 0x55cc0dbb0fd0 'unsigned long'
|-TypedefDecl 0x55cc0dc18c48 <line:58:1, col:27> col:27 __fsfilcnt_t 'unsigned long'
| `-BuiltinType 0x55cc0dbb0fd0 'unsigned long'
|-TypedefDecl 0x55cc0dc18cb8 <line:59:1, col:27> col:27 __fsfilcnt64_t 'unsigned long'
| `-BuiltinType 0x55cc0dbb0fd0 'unsigned long'
|-TypedefDecl 0x55cc0dc18d28 <line:60:1, col:18> col:18 __fsword_t 'long'
| `-BuiltinType 0x55cc0dbb0f30 'long'
|-TypedefDecl 0x55cc0dc18d98 <line:61:1, col:18> col:18 __ssize_t 'long'
| `-BuiltinType 0x55cc0dbb0f30 'long'
|-TypedefDecl 0x55cc0dc18e08 <line:62:1, col:18> col:18 referenced __syscall_slong_t 'long'
| `-BuiltinType 0x55cc0dbb0f30 'long'
|-TypedefDecl 0x55cc0dc18e78 <line:63:1, col:27> col:27 __syscall_ulong_t 'unsigned long'
| `-BuiltinType 0x55cc0dbb0fd0 'unsigned long'
|-TypedefDecl 0x55cc0dc18f08 <line:64:1, col:19> col:19 __loff_t '__off64_t':'long'
| `-TypedefType 0x55cc0dc18ed0 '__off64_t' sugar
|   |-Typedef 0x55cc0dc181c8 '__off64_t'
|   `-BuiltinType 0x55cc0dbb0f30 'long'
|-TypedefDecl 0x55cc0dc19000 <line:65:1, col:19> col:19 __qaddr_t '__quad_t *'
| `-PointerType 0x55cc0dc18fc0 '__quad_t *'
|   `-TypedefType 0x55cc0dc18f60 '__quad_t' sugar
|     |-Typedef 0x55cc0dc17d68 '__quad_t'
|     `-BuiltinType 0x55cc0dbb0f30 'long'
|-TypedefDecl 0x55cc0dc19070 <line:66:1, col:15> col:15 __caddr_t 'char *'
| `-PointerType 0x55cc0dbb1ab0 'char *'
|   `-BuiltinType 0x55cc0dbb0eb0 'char'
|-TypedefDecl 0x55cc0dc190e0 <line:67:1, col:18> col:18 __intptr_t 'long'
| `-BuiltinType 0x55cc0dbb0f30 'long'
|-TypedefDecl 0x55cc0dc19150 <line:68:1, col:22> col:22 __socklen_t 'unsigned int'
| `-BuiltinType 0x55cc0dbb0fb0 'unsigned int'
|-FunctionDecl 0x55cc0dc19298 <line:69:1, line:73:1> line:70:1 __bswap_32 'unsigned int (unsigned int)' static inline
| |-ParmVarDecl 0x55cc0dc191c0 <col:13, col:26> col:26 used __bsx 'unsigned int'
| `-CompoundStmt 0x55cc0dc1a5e8 <line:71:1, line:73:1>
|   `-ReturnStmt 0x55cc0dc1a5d8 <line:72:3, col:34>
|     `-CallExpr 0x55cc0dc1a598 <col:10, col:34> 'unsigned int'
|       |-ImplicitCastExpr 0x55cc0dc1a580 <col:10> 'unsigned int (*)(unsigned int)' <BuiltinFnToFnPtr>
|       | `-DeclRefExpr 0x55cc0dc1a510 <col:10> '<builtin fn type>' Function 0x55cc0dc1a380 '__builtin_bswap32' 'unsigned int (unsigned int)'
|       `-ImplicitCastExpr 0x55cc0dc1a5c0 <col:29> 'unsigned int' <LValueToRValue>
|         `-DeclRefExpr 0x55cc0dc1a530 <col:29> 'unsigned int' lvalue ParmVar 0x55cc0dc191c0 '__bsx' 'unsigned int'
|-FunctionDecl 0x55cc0dc1a380 <col:10> col:10 implicit used __builtin_bswap32 'unsigned int (unsigned int)' extern
| |-ParmVarDecl 0x55cc0dc1a420 <<invalid sloc>> <invalid sloc> 'unsigned int'
| |-NoThrowAttr 0x55cc0dc1a490 <col:10> Implicit
| `-ConstAttr 0x55cc0dc1a4e8 <col:10> Implicit
|-FunctionDecl 0x55cc0dc1a740 <line:74:1, line:78:1> line:75:1 __bswap_64 '__uint64_t (__uint64_t)' static inline
| |-ParmVarDecl 0x55cc0dc1a638 <col:13, col:24> col:24 used __bsx '__uint64_t':'unsigned long'
| `-CompoundStmt 0x55cc0dc1aa58 <line:76:1, line:78:1>
|   `-ReturnStmt 0x55cc0dc1aa48 <line:77:3, col:34>
|     `-CallExpr 0x55cc0dc1aa08 <col:10, col:34> 'unsigned long'
|       |-ImplicitCastExpr 0x55cc0dc1a9f0 <col:10> 'unsigned long (*)(unsigned long)' <BuiltinFnToFnPtr>
|       | `-DeclRefExpr 0x55cc0dc1a978 <col:10> '<builtin fn type>' Function 0x55cc0dc1a7e8 '__builtin_bswap64' 'unsigned long (unsigned long)'
|       `-ImplicitCastExpr 0x55cc0dc1aa30 <col:29> '__uint64_t':'unsigned long' <LValueToRValue>
|         `-DeclRefExpr 0x55cc0dc1a998 <col:29> '__uint64_t':'unsigned long' lvalue ParmVar 0x55cc0dc1a638 '__bsx' '__uint64_t':'unsigned long'
|-FunctionDecl 0x55cc0dc1a7e8 <col:10> col:10 implicit used __builtin_bswap64 'unsigned long (unsigned long)' extern
| |-ParmVarDecl 0x55cc0dc1a888 <<invalid sloc>> <invalid sloc> 'unsigned long'
| |-NoThrowAttr 0x55cc0dc1a8f8 <col:10> Implicit
| `-ConstAttr 0x55cc0dc1a950 <col:10> Implicit
|-TypedefDecl 0x55cc0dc1aa88 <line:79:1, col:27> col:27 referenced size_t 'unsigned long'
| `-BuiltinType 0x55cc0dbb0fd0 'unsigned long'
|-TypedefDecl 0x55cc0dc1ab18 <line:81:1, col:18> col:18 referenced time_t '__time_t':'long'
| `-TypedefType 0x55cc0dc1aae0 '__time_t' sugar
|   |-Typedef 0x55cc0dc18708 '__time_t'
|   `-BuiltinType 0x55cc0dbb0f30 'long'
|-RecordDecl 0x55cc0dc1ab70 <line:84:1, line:88:3> line:84:8 struct timespec definition
| |-FieldDecl 0x55cc0dc1ac28 <line:86:5, col:14> col:14 tv_sec '__time_t':'long'
| `-FieldDecl 0x55cc0dc1acb8 <line:87:5, col:23> col:23 tv_nsec '__syscall_slong_t':'long'
|-TypedefDecl 0x55cc0dc1ad48 <line:89:1, col:17> col:17 referenced pid_t '__pid_t':'int'
| `-TypedefType 0x55cc0dc1ad10 '__pid_t' sugar
|   |-Typedef 0x55cc0dc18238 '__pid_t'
|   `-BuiltinType 0x55cc0dbb0f10 'int'
|-RecordDecl 0x55cc0dc1ada0 <line:90:1, line:93:3> line:90:8 struct sched_param definition
| `-FieldDecl 0x55cc0dc1ae60 <line:92:5, col:9> col:9 __sched_priority 'int'
|-RecordDecl 0x55cc0dc1aeb0 <line:96:1, line:99:3> line:96:8 struct __sched_param definition
| `-FieldDecl 0x55cc0dc1af70 <line:98:5, col:9> col:9 __sched_priority 'int'
|-TypedefDecl 0x55cc0dc1afd8 <line:100:1, col:27> col:27 referenced __cpu_mask 'unsigned long'
| `-BuiltinType 0x55cc0dbb0fd0 'unsigned long'
|-RecordDecl 0x55cc0dc1b030 <line:101:9, line:104:1> line:101:9 struct definition
| `-FieldDecl 0x55cc0dc1b2c0 <line:103:3, col:53> col:14 __bits '__cpu_mask [64]'
|-TypedefDecl 0x55cc0dc1c3a0 <line:101:1, line:104:3> col:3 referenced cpu_set_t 'struct cpu_set_t':'cpu_set_t'
| `-ElaboratedType 0x55cc0dc1b310 'struct cpu_set_t' sugar
|   `-RecordType 0x55cc0dc1b0b0 'cpu_set_t'
|     `-Record 0x55cc0dc1b030 ''
|-FunctionDecl 0x55cc0dc1c678 <line:106:1, line:107:42> line:106:12 __sched_cpucount 'int (size_t, const cpu_set_t *)' extern
| |-ParmVarDecl 0x55cc0dc1c448 <col:30, col:37> col:37 __setsize 'size_t':'unsigned long'
| |-ParmVarDecl 0x55cc0dc1c550 <col:48, col:65> col:65 __setp 'const cpu_set_t *'
| `-NoThrowAttr 0x55cc0dc1c728 <line:107:19>
|-FunctionDecl 0x55cc0dc1c900 <line:108:1, col:92> col:19 __sched_cpualloc 'cpu_set_t *(size_t)' extern
| |-ParmVarDecl 0x55cc0dc1c790 <col:37, col:44> col:44 __count 'size_t':'unsigned long'
| `-NoThrowAttr 0x55cc0dc1c9a8 <col:69>
|-FunctionDecl 0x55cc0dc1cb20 <line:109:1, col:87> col:13 __sched_cpufree 'void (cpu_set_t *)' extern
| |-ParmVarDecl 0x55cc0dc1ca10 <col:30, col:41> col:41 __set 'cpu_set_t *'
| `-NoThrowAttr 0x55cc0dc1cbc8 <col:64>
|-FunctionDecl 0x55cc0dc1ce88 <line:112:1, line:113:45> line:112:12 sched_setparam 'int (__pid_t, const struct sched_param *)' extern
| |-ParmVarDecl 0x55cc0dc1cc30 <col:28, col:36> col:36 __pid '__pid_t':'int'
| |-ParmVarDecl 0x55cc0dc1cd68 <col:43, col:69> col:69 __param 'const struct sched_param *'
| `-NoThrowAttr 0x55cc0dc1cf38 <line:113:22>
|-FunctionDecl 0x55cc0dc1d1b8 <line:114:1, col:111> col:12 sched_getparam 'int (__pid_t, struct sched_param *)' extern
| |-ParmVarDecl 0x55cc0dc1cfa0 <col:28, col:36> col:36 __pid '__pid_t':'int'
| |-ParmVarDecl 0x55cc0dc1d098 <col:43, col:63> col:63 __param 'struct sched_param *'
| `-NoThrowAttr 0x55cc0dc1d268 <col:88>
|-FunctionDecl 0x55cc0dc1d588 <line:115:1, line:116:85> line:115:12 sched_setscheduler 'int (__pid_t, int, const struct sched_param *)' extern
| |-ParmVarDecl 0x55cc0dc1d2d0 <col:32, col:40> col:40 __pid '__pid_t':'int'
| |-ParmVarDecl 0x55cc0dc1d3b0 <col:47, col:51> col:51 __policy 'int'
| |-ParmVarDecl 0x55cc0dc1d440 <line:116:11, col:37> col:37 __param 'const struct sched_param *'
| `-NoThrowAttr 0x55cc0dc1d640 <col:62>
|-FunctionDecl 0x55cc0dc1d7b8 <line:117:1, col:86> col:12 sched_getscheduler 'int (__pid_t)' extern
| |-ParmVarDecl 0x55cc0dc1d6a8 <col:32, col:40> col:40 __pid '__pid_t':'int'
| `-NoThrowAttr 0x55cc0dc1d860 <col:63>
|-FunctionDecl 0x55cc0dc1d988 <line:118:1, col:70> col:12 sched_yield 'int (void)' extern
| `-NoThrowAttr 0x55cc0dc1da28 <col:47>
|-FunctionDecl 0x55cc0dc1db30 <line:119:1, col:92> col:12 sched_get_priority_max 'int (int)' extern
| |-ParmVarDecl 0x55cc0dc1da98 <col:36, col:40> col:40 __algorithm 'int'
| `-NoThrowAttr 0x55cc0dc1dbd8 <col:69>
|-FunctionDecl 0x55cc0dc1dce0 <line:120:1, col:92> col:12 sched_get_priority_min 'int (int)' extern
| |-ParmVarDecl 0x55cc0dc1dc48 <col:36, col:40> col:40 __algorithm 'int'
| `-NoThrowAttr 0x55cc0dc1dd88 <col:69>
|-FunctionDecl 0x55cc0dc1e048 <line:121:1, col:111> col:12 sched_rr_get_interval 'int (__pid_t, struct timespec *)' extern
| |-ParmVarDecl 0x55cc0dc1ddf0 <col:35, col:43> col:43 __pid '__pid_t':'int'
| |-ParmVarDecl 0x55cc0dc1df28 <col:50, col:67> col:67 __t 'struct timespec *'
| `-NoThrowAttr 0x55cc0dc1e0f8 <col:88>
|-TypedefDecl 0x55cc0dc1e188 <line:125:1, col:19> col:19 referenced clock_t '__clock_t':'long'
| `-TypedefType 0x55cc0dc1e150 '__clock_t' sugar
|   |-Typedef 0x55cc0dc18548 '__clock_t'
|   `-BuiltinType 0x55cc0dbb0f30 'long'
|-TypedefDecl 0x55cc0dc1e218 <line:128:1, col:21> col:21 referenced clockid_t '__clockid_t':'int'
| `-TypedefType 0x55cc0dc1e1e0 '__clockid_t' sugar
|   |-Typedef 0x55cc0dc18938 '__clockid_t'
|   `-BuiltinType 0x55cc0dbb0f10 'int'
|-TypedefDecl 0x55cc0dc1e2a8 <line:129:1, col:19> col:19 referenced timer_t '__timer_t':'void *'
| `-TypedefType 0x55cc0dc1e270 '__timer_t' sugar
|   |-Typedef 0x55cc0dc189a8 '__timer_t'
|   `-PointerType 0x55cc0dbb1630 'void *'
|     `-BuiltinType 0x55cc0dbb0e70 'void'
|-RecordDecl 0x55cc0dc1e300 <line:131:1, line:144:1> line:131:8 struct tm definition
| |-FieldDecl 0x55cc0dc1e3d8 <line:133:3, col:7> col:7 tm_sec 'int'
| |-FieldDecl 0x55cc0dc1e440 <line:134:3, col:7> col:7 tm_min 'int'
| |-FieldDecl 0x55cc0dc1e4a8 <line:135:3, col:7> col:7 tm_hour 'int'
| |-FieldDecl 0x55cc0dc1e510 <line:136:3, col:7> col:7 tm_mday 'int'
| |-FieldDecl 0x55cc0dc1e578 <line:137:3, col:7> col:7 tm_mon 'int'
| |-FieldDecl 0x55cc0dc1e5e0 <line:138:3, col:7> col:7 tm_year 'int'
| |-FieldDecl 0x55cc0dc1e648 <line:139:3, col:7> col:7 tm_wday 'int'
| |-FieldDecl 0x55cc0dc1e6b0 <line:140:3, col:7> col:7 tm_yday 'int'
| |-FieldDecl 0x55cc0dc1e718 <line:141:3, col:7> col:7 tm_isdst 'int'
| |-FieldDecl 0x55cc0dc1e780 <line:142:3, col:12> col:12 tm_gmtoff 'long'
| `-FieldDecl 0x55cc0dc1e7e8 <line:143:3, col:15> col:15 tm_zone 'const char *'
|-RecordDecl 0x55cc0dc1e838 <line:147:1, line:151:3> line:147:8 struct itimerspec definition
| |-FieldDecl 0x55cc0dc1e908 <line:149:5, col:21> col:21 it_interval 'struct timespec':'struct timespec'
| `-FieldDecl 0x55cc0dc1e978 <line:150:5, col:21> col:21 it_value 'struct timespec':'struct timespec'
|-RecordDecl 0x55cc0dc1ea20 <line:152:1, col:8> col:8 struct sigevent
|-FunctionDecl 0x55cc0dc1ebf0 <line:154:1, col:68> col:16 clock 'clock_t (void)' extern
| `-NoThrowAttr 0x55cc0dc1ec90 <col:45>
|-FunctionDecl 0x55cc0dc1ee70 <line:155:1, col:77> col:15 time 'time_t (time_t *)' extern
| |-ParmVarDecl 0x55cc0dc1ed60 <col:21, col:29> col:29 __timer 'time_t *'
| `-NoThrowAttr 0x55cc0dc1ef18 <col:54>
|-FunctionDecl 0x55cc0dc1f118 <line:156:1, line:157:73> line:156:15 difftime 'double (time_t, time_t)' extern
| |-ParmVarDecl 0x55cc0dc1ef80 <col:25, col:32> col:32 __time1 'time_t':'long'
| |-ParmVarDecl 0x55cc0dc1eff8 <col:41, col:48> col:48 __time0 'time_t':'long'
| |-NoThrowAttr 0x55cc0dc1f1c8 <line:157:22>
| `-ConstAttr 0x55cc0dc1f220 <col:63>
|-FunctionDecl 0x55cc0dc20050 <line:158:1, col:79> col:15 mktime 'time_t (struct tm *)' extern
| |-ParmVarDecl 0x55cc0dc1f318 <col:23, col:34> col:34 __tp 'struct tm *'
| `-NoThrowAttr 0x55cc0dc200f8 <col:56>
|-FunctionDecl 0x55cc0dc204a0 <line:159:1, line:161:77> line:159:15 strftime 'size_t (char *restrict, size_t, const char *restrict, const struct tm *restrict)' extern
| |-ParmVarDecl 0x55cc0dc20168 <col:25, col:42> col:42 __s 'char *restrict'
| |-ParmVarDecl 0x55cc0dc201e0 <col:47, col:54> col:54 __maxsize 'size_t':'unsigned long'
| |-ParmVarDecl 0x55cc0dc20260 <line:160:4, col:27> col:27 __format 'const char *restrict'
| |-ParmVarDecl 0x55cc0dc20358 <line:161:4, col:32> col:32 __tp 'const struct tm *restrict'
| `-NoThrowAttr 0x55cc0dc20560 <col:54>
|-RecordDecl 0x55cc0dc205b8 <line:163:9, line:170:1> line:163:16 struct __locale_struct definition
| |-RecordDecl 0x55cc0dc20668 parent 0x55cc0dbb0e18 <line:165:3, col:10> col:10 struct __locale_data
| |-FieldDecl 0x55cc0dc208c8 <col:3, col:37> col:25 __locales 'struct __locale_data *[13]'
| |-FieldDecl 0x55cc0dc20968 <line:166:3, col:29> col:29 __ctype_b 'const unsigned short *'
| |-FieldDecl 0x55cc0dc209d0 <line:167:3, col:14> col:14 __ctype_tolower 'const int *'
| |-FieldDecl 0x55cc0dc20a38 <line:168:3, col:14> col:14 __ctype_toupper 'const int *'
| `-FieldDecl 0x55cc0dc20b28 <line:169:3, col:25> col:15 __names 'const char *[13]'
|-TypedefDecl 0x55cc0dc20c48 <line:163:1, line:170:4> col:4 referenced __locale_t 'struct __locale_struct *'
| `-PointerType 0x55cc0dc20bf0 'struct __locale_struct *'
|   `-ElaboratedType 0x55cc0dc20b80 'struct __locale_struct' sugar
|     `-RecordType 0x55cc0dc20640 'struct __locale_struct'
|       `-Record 0x55cc0dc205b8 '__locale_struct'
|-TypedefDecl 0x55cc0dc20cf8 <line:171:1, col:20> col:20 locale_t '__locale_t':'struct __locale_struct *'
| `-TypedefType 0x55cc0dc20cc0 '__locale_t' sugar
|   |-Typedef 0x55cc0dc20c48 '__locale_t'
|   `-PointerType 0x55cc0dc20bf0 'struct __locale_struct *'
|     `-ElaboratedType 0x55cc0dc20b80 'struct __locale_struct' sugar
|       `-RecordType 0x55cc0dc20640 'struct __locale_struct'
|         `-Record 0x55cc0dc205b8 '__locale_struct'
|-FunctionDecl 0x55cc0dc22110 <line:172:1, line:175:63> line:172:15 strftime_l 'size_t (char *restrict, size_t, const char *restrict, const struct tm *restrict, __locale_t)' extern
| |-ParmVarDecl 0x55cc0dc20d68 <col:27, col:44> col:44 __s 'char *restrict'
| |-ParmVarDecl 0x55cc0dc20de0 <col:49, col:56> col:56 __maxsize 'size_t':'unsigned long'
| |-ParmVarDecl 0x55cc0dc20e60 <line:173:6, col:29> col:29 __format 'const char *restrict'
| |-ParmVarDecl 0x55cc0dc20ef0 <line:174:6, col:34> col:34 __tp 'const struct tm *restrict'
| |-ParmVarDecl 0x55cc0dc20f68 <line:175:6, col:17> col:17 __loc '__locale_t':'struct __locale_struct *'
| `-NoThrowAttr 0x55cc0dc221d8 <col:40>
|-FunctionDecl 0x55cc0dc223c8 <line:177:1, col:89> col:19 gmtime 'struct tm *(const time_t *)' extern
| |-ParmVarDecl 0x55cc0dc222a0 <col:27, col:41> col:41 __timer 'const time_t *'
| `-NoThrowAttr 0x55cc0dc22470 <col:66>
|-FunctionDecl 0x55cc0dc22580 <line:178:1, col:92> col:19 localtime 'struct tm *(const time_t *)' extern
| |-ParmVarDecl 0x55cc0dc224d8 <col:30, col:44> col:44 __timer 'const time_t *'
| `-NoThrowAttr 0x55cc0dc22628 <col:69>
|-FunctionDecl 0x55cc0dc22858 <line:180:1, line:181:75> line:180:19 gmtime_r 'struct tm *(const time_t *restrict, struct tm *restrict)' extern
| |-ParmVarDecl 0x55cc0dc22690 <col:29, col:54> col:54 __timer 'const time_t *restrict'
| |-ParmVarDecl 0x55cc0dc22720 <line:181:8, col:30> col:30 __tp 'struct tm *restrict'
| `-NoThrowAttr 0x55cc0dc22908 <col:52>
|-FunctionDecl 0x55cc0dc22ab0 <line:182:1, line:183:78> line:182:19 localtime_r 'struct tm *(const time_t *restrict, struct tm *restrict)' extern
| |-ParmVarDecl 0x55cc0dc22970 <col:32, col:57> col:57 __timer 'const time_t *restrict'
| |-ParmVarDecl 0x55cc0dc22a00 <line:183:11, col:33> col:33 __tp 'struct tm *restrict'
| `-NoThrowAttr 0x55cc0dc22b60 <col:55>
|-FunctionDecl 0x55cc0dc22cf8 <line:185:1, col:85> col:14 asctime 'char *(const struct tm *)' extern
| |-ParmVarDecl 0x55cc0dc22be0 <col:23, col:40> col:40 __tp 'const struct tm *'
| `-NoThrowAttr 0x55cc0dc22da0 <col:62>
|-FunctionDecl 0x55cc0dc22f18 <line:186:1, col:83> col:14 ctime 'char *(const time_t *)' extern
| |-ParmVarDecl 0x55cc0dc22e08 <col:21, col:35> col:35 __timer 'const time_t *'
| `-NoThrowAttr 0x55cc0dc22fc0 <col:60>
|-FunctionDecl 0x55cc0dc232b8 <line:188:1, line:189:67> line:188:14 asctime_r 'char *(const struct tm *restrict, char *restrict)' extern
| |-ParmVarDecl 0x55cc0dc23118 <col:25, col:53> col:53 __tp 'const struct tm *restrict'
| |-ParmVarDecl 0x55cc0dc23198 <line:189:4, col:21> col:21 __buf 'char *restrict'
| `-NoThrowAttr 0x55cc0dc23368 <col:44>
|-FunctionDecl 0x55cc0dc23578 <line:190:1, line:191:72> line:190:14 ctime_r 'char *(const time_t *restrict, char *restrict)' extern
| |-ParmVarDecl 0x55cc0dc233d0 <col:23, col:48> col:48 __timer 'const time_t *restrict'
| |-ParmVarDecl 0x55cc0dc23450 <line:191:9, col:26> col:26 __buf 'char *restrict'
| `-NoThrowAttr 0x55cc0dc23628 <col:49>
|-VarDecl 0x55cc0dc23728 <line:192:1, col:24> col:14 __tzname 'char *[2]' extern
|-VarDecl 0x55cc0dc237a8 <line:193:1, col:12> col:12 __daylight 'int' extern
|-VarDecl 0x55cc0dc23828 <line:194:1, col:17> col:17 __timezone 'long' extern
|-VarDecl 0x55cc0dc238f0 <line:195:1, col:22> col:14 tzname 'char *[2]' extern
|-FunctionDecl 0x55cc0dc23a20 <line:196:1, col:65> col:13 tzset 'void (void)' extern
| `-NoThrowAttr 0x55cc0dc23ac0 <col:42>
|-VarDecl 0x55cc0dc23b30 <line:197:1, col:12> col:12 daylight 'int' extern
|-VarDecl 0x55cc0dc23bb0 <line:198:1, col:17> col:17 timezone 'long' extern
|-FunctionDecl 0x55cc0dc23d38 <line:199:1, col:80> col:12 stime 'int (const time_t *)' extern
| |-ParmVarDecl 0x55cc0dc23c28 <col:19, col:33> col:33 __when 'const time_t *'
| `-NoThrowAttr 0x55cc0dc23de0 <col:57>
|-FunctionDecl 0x55cc0dc23ef0 <line:200:1, col:79> col:15 timegm 'time_t (struct tm *)' extern
| |-ParmVarDecl 0x55cc0dc23e60 <col:23, col:34> col:34 __tp 'struct tm *'
| `-NoThrowAttr 0x55cc0dc23f98 <col:56>
|-FunctionDecl 0x55cc0dc240d0 <line:201:1, col:82> col:15 timelocal 'time_t (struct tm *)' extern
| |-ParmVarDecl 0x55cc0dc24018 <col:26, col:37> col:37 __tp 'struct tm *'
| `-NoThrowAttr 0x55cc0dc24178 <col:59>
|-FunctionDecl 0x55cc0dc24280 <line:202:1, col:99> col:12 dysize 'int (int)' extern
| |-ParmVarDecl 0x55cc0dc241e8 <col:20, col:24> col:24 __year 'int'
| |-NoThrowAttr 0x55cc0dc24328 <col:48>
| `-ConstAttr 0x55cc0dc24380 <col:89>
|-FunctionDecl 0x55cc0dc245e8 <line:203:1, line:204:37> line:203:12 nanosleep 'int (const struct timespec *, struct timespec *)' extern
| |-ParmVarDecl 0x55cc0dc24438 <col:23, col:46> col:46 __requested_time 'const struct timespec *'
| `-ParmVarDecl 0x55cc0dc244c8 <line:204:9, col:26> col:26 __remaining 'struct timespec *'
|-FunctionDecl 0x55cc0dc24848 <line:205:1, col:111> col:12 clock_getres 'int (clockid_t, struct timespec *)' extern
| |-ParmVarDecl 0x55cc0dc246d8 <col:26, col:36> col:36 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x55cc0dc24768 <col:48, col:65> col:65 __res 'struct timespec *'
| `-NoThrowAttr 0x55cc0dc248f8 <col:88>
|-FunctionDecl 0x55cc0dc24a90 <line:206:1, col:111> col:12 clock_gettime 'int (clockid_t, struct timespec *)' extern
| |-ParmVarDecl 0x55cc0dc24960 <col:27, col:37> col:37 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x55cc0dc249f0 <col:49, col:66> col:66 __tp 'struct timespec *'
| `-NoThrowAttr 0x55cc0dc24b40 <col:88>
|-FunctionDecl 0x55cc0dc24d58 <line:207:1, line:208:45> line:207:12 clock_settime 'int (clockid_t, const struct timespec *)' extern
| |-ParmVarDecl 0x55cc0dc24ba8 <col:27, col:37> col:37 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x55cc0dc24c38 <col:49, col:72> col:72 __tp 'const struct timespec *'
| `-NoThrowAttr 0x55cc0dc24e08 <line:208:22>
|-FunctionDecl 0x55cc0dc25178 <line:209:1, line:211:30> line:209:12 clock_nanosleep 'int (clockid_t, int, const struct timespec *, struct timespec *)' extern
| |-ParmVarDecl 0x55cc0dc24e70 <col:29, col:39> col:39 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x55cc0dc24ef0 <col:51, col:55> col:55 __flags 'int'
| |-ParmVarDecl 0x55cc0dc24f80 <line:210:8, col:31> col:31 __req 'const struct timespec *'
| `-ParmVarDecl 0x55cc0dc25010 <line:211:8, col:25> col:25 __rem 'struct timespec *'
|-FunctionDecl 0x55cc0dc25478 <line:212:1, col:108> col:12 clock_getcpuclockid 'int (pid_t, clockid_t *)' extern
| |-ParmVarDecl 0x55cc0dc25278 <col:33, col:39> col:39 __pid 'pid_t':'int'
| |-ParmVarDecl 0x55cc0dc25350 <col:46, col:57> col:57 __clock_id 'clockid_t *'
| `-NoThrowAttr 0x55cc0dc25528 <col:85>
|-FunctionDecl 0x55cc0dc25918 <line:213:1, line:215:75> line:213:12 timer_create 'int (clockid_t, struct sigevent *restrict, timer_t *restrict)' extern
| |-ParmVarDecl 0x55cc0dc25590 <col:26, col:36> col:36 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x55cc0dc256c8 <line:214:5, col:33> col:33 __evp 'struct sigevent *restrict'
| |-ParmVarDecl 0x55cc0dc257d0 <line:215:5, col:25> col:25 __timerid 'timer_t *restrict'
| `-NoThrowAttr 0x55cc0dc259d0 <col:52>
|-FunctionDecl 0x55cc0dc25b48 <line:216:1, col:84> col:12 timer_delete 'int (timer_t)' extern
| |-ParmVarDecl 0x55cc0dc25a38 <col:26, col:34> col:34 __timerid 'timer_t':'void *'
| `-NoThrowAttr 0x55cc0dc25bf0 <col:61>
|-FunctionDecl 0x55cc0dc260f0 <line:217:1, line:219:85> line:217:12 timer_settime 'int (timer_t, int, const struct itimerspec *restrict, struct itimerspec *restrict)' extern
| |-ParmVarDecl 0x55cc0dc25c58 <col:27, col:35> col:35 __timerid 'timer_t':'void *'
| |-ParmVarDecl 0x55cc0dc25cd8 <col:46, col:50> col:50 __flags 'int'
| |-ParmVarDecl 0x55cc0dc25e08 <line:218:6, col:42> col:42 __value 'const struct itimerspec *restrict'
| |-ParmVarDecl 0x55cc0dc25ef8 <line:219:6, col:36> col:36 __ovalue 'struct itimerspec *restrict'
| `-NoThrowAttr 0x55cc0dc261b0 <col:62>
|-FunctionDecl 0x55cc0dc263c8 <line:220:1, line:221:45> line:220:12 timer_gettime 'int (timer_t, struct itimerspec *)' extern
| |-ParmVarDecl 0x55cc0dc26218 <col:27, col:35> col:35 __timerid 'timer_t':'void *'
| |-ParmVarDecl 0x55cc0dc262a8 <col:46, col:65> col:65 __value 'struct itimerspec *'
| `-NoThrowAttr 0x55cc0dc26478 <line:221:22>
|-FunctionDecl 0x55cc0dc26578 <line:222:1, col:88> col:12 timer_getoverrun 'int (timer_t)' extern
| |-ParmVarDecl 0x55cc0dc264e0 <col:30, col:38> col:38 __timerid 'timer_t':'void *'
| `-NoThrowAttr 0x55cc0dc26620 <col:65>
|-TypedefDecl 0x55cc0dc26690 <line:224:1, col:27> col:27 referenced pthread_t 'unsigned long'
| `-BuiltinType 0x55cc0dbb0fd0 'unsigned long'
|-RecordDecl 0x55cc0dc266e8 <line:225:1, line:229:1> line:225:7 union pthread_attr_t definition
| |-FieldDecl 0x55cc0dc26830 <line:227:3, col:17> col:8 __size 'char [56]'
| `-FieldDecl 0x55cc0dc26898 <line:228:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x55cc0dc26948 <line:230:1, col:30> col:30 referenced pthread_attr_t 'union pthread_attr_t':'union pthread_attr_t'
| `-ElaboratedType 0x55cc0dc268f0 'union pthread_attr_t' sugar
|   `-RecordType 0x55cc0dc26770 'union pthread_attr_t'
|     `-Record 0x55cc0dc266e8 'pthread_attr_t'
|-RecordDecl 0x55cc0dc269a0 <line:231:9, line:235:1> line:231:16 struct __pthread_internal_list definition
| |-FieldDecl 0x55cc0dc26b18 <line:233:3, col:35> col:35 __prev 'struct __pthread_internal_list *'
| `-FieldDecl 0x55cc0dc26b90 <line:234:3, col:35> col:35 __next 'struct __pthread_internal_list *'
|-TypedefDecl 0x55cc0dc26c40 <line:231:1, line:235:3> col:3 referenced __pthread_list_t 'struct __pthread_internal_list':'struct __pthread_internal_list'
| `-ElaboratedType 0x55cc0dc26be0 'struct __pthread_internal_list' sugar
|   `-RecordType 0x55cc0dc26a20 'struct __pthread_internal_list'
|     `-Record 0x55cc0dc269a0 '__pthread_internal_list'
|-RecordDecl 0x55cc0dc26cb0 <line:236:9, line:250:1> line:236:9 union definition
| |-RecordDecl 0x55cc0dc26d58 parent 0x55cc0dbb0e18 <line:238:3, line:247:3> line:238:10 struct __pthread_mutex_s definition
| | |-FieldDecl 0x55cc0dc26e30 <line:240:5, col:9> col:9 __lock 'int'
| | |-FieldDecl 0x55cc0dc26e98 <line:241:5, col:18> col:18 __count 'unsigned int'
| | |-FieldDecl 0x55cc0dc26f00 <line:242:5, col:9> col:9 __owner 'int'
| | |-FieldDecl 0x55cc0dc26f68 <line:243:5, col:18> col:18 __nusers 'unsigned int'
| | |-FieldDecl 0x55cc0dc26fd0 <line:244:5, col:9> col:9 __kind 'int'
| | |-FieldDecl 0x55cc0dc27038 <line:245:5, col:9> col:9 __spins 'int'
| | `-FieldDecl 0x55cc0dc2b110 <line:246:5, col:22> col:22 __list '__pthread_list_t':'struct __pthread_internal_list'
| |-FieldDecl 0x55cc0dc2b1c0 <line:238:3, line:247:5> col:5 __data 'struct __pthread_mutex_s':'struct __pthread_mutex_s'
| |-FieldDecl 0x55cc0dc2b2b0 <line:248:3, col:17> col:8 __size 'char [40]'
| `-FieldDecl 0x55cc0dc2b318 <line:249:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x55cc0dc2b4a0 <line:236:1, line:250:3> col:3 referenced pthread_mutex_t 'union pthread_mutex_t':'pthread_mutex_t'
| `-ElaboratedType 0x55cc0dc2b440 'union pthread_mutex_t' sugar
|   `-RecordType 0x55cc0dc26d30 'pthread_mutex_t'
|     `-Record 0x55cc0dc26cb0 ''
|-RecordDecl 0x55cc0dc2b510 <line:251:9, line:255:1> line:251:9 union definition
| |-FieldDecl 0x55cc0dc2b650 <line:253:3, col:16> col:8 __size 'char [4]'
| `-FieldDecl 0x55cc0dc2b6b8 <line:254:3, col:7> col:7 __align 'int'
|-TypedefDecl 0x55cc0dc2b770 <line:251:1, line:255:3> col:3 referenced pthread_mutexattr_t 'union pthread_mutexattr_t':'pthread_mutexattr_t'
| `-ElaboratedType 0x55cc0dc2b710 'union pthread_mutexattr_t' sugar
|   `-RecordType 0x55cc0dc2b590 'pthread_mutexattr_t'
|     `-Record 0x55cc0dc2b510 ''
|-RecordDecl 0x55cc0dc2b7e0 <line:256:9, line:271:1> line:256:9 union definition
| |-RecordDecl 0x55cc0dc2b888 <line:258:3, line:268:3> line:258:3 struct definition
| | |-FieldDecl 0x55cc0dc2b950 <line:260:5, col:9> col:9 __lock 'int'
| | |-FieldDecl 0x55cc0dc2b9b8 <line:261:5, col:18> col:18 __futex 'unsigned int'
| | |-FieldDecl 0x55cc0dc2ba20 <line:262:19, col:42> col:42 __total_seq 'unsigned long long'
| | |-FieldDecl 0x55cc0dc2ba88 <line:263:19, col:42> col:42 __wakeup_seq 'unsigned long long'
| | |-FieldDecl 0x55cc0dc2baf0 <line:264:19, col:42> col:42 __woken_seq 'unsigned long long'
| | |-FieldDecl 0x55cc0dc2bb58 <line:265:5, col:11> col:11 __mutex 'void *'
| | |-FieldDecl 0x55cc0dc2bbc0 <line:266:5, col:18> col:18 __nwaiters 'unsigned int'
| | `-FieldDecl 0x55cc0dc2bc28 <line:267:5, col:18> col:18 __broadcast_seq 'unsigned int'
| |-FieldDecl 0x55cc0dc2bce0 <line:258:3, line:268:5> col:5 __data 'struct (anonymous struct at ./split_0/mix015_tso.opt_false-unreach-call.i:258:3)':'struct pthread_cond_t::(anonymous at ./split_0/mix015_tso.opt_false-unreach-call.i:258:3)'
| |-FieldDecl 0x55cc0dc2bdd0 <line:269:3, col:17> col:8 __size 'char [48]'
| `-FieldDecl 0x55cc0dc2be38 <line:270:17, col:31> col:31 __align 'long long'
|-TypedefDecl 0x55cc0dc2bf70 <line:256:1, line:271:3> col:3 referenced pthread_cond_t 'union pthread_cond_t':'pthread_cond_t'
| `-ElaboratedType 0x55cc0dc2bf10 'union pthread_cond_t' sugar
|   `-RecordType 0x55cc0dc2b860 'pthread_cond_t'
|     `-Record 0x55cc0dc2b7e0 ''
|-RecordDecl 0x55cc0dc2bfe0 <line:272:9, line:276:1> line:272:9 union definition
| |-FieldDecl 0x55cc0dc2d130 <line:274:3, col:16> col:8 __size 'char [4]'
| `-FieldDecl 0x55cc0dc2d198 <line:275:3, col:7> col:7 __align 'int'
|-TypedefDecl 0x55cc0dc2d250 <line:272:1, line:276:3> col:3 referenced pthread_condattr_t 'union pthread_condattr_t':'pthread_condattr_t'
| `-ElaboratedType 0x55cc0dc2d1f0 'union pthread_condattr_t' sugar
|   `-RecordType 0x55cc0dc2c060 'pthread_condattr_t'
|     `-Record 0x55cc0dc2bfe0 ''
|-TypedefDecl 0x55cc0dc2d2d8 <line:277:1, col:22> col:22 referenced pthread_key_t 'unsigned int'
| `-BuiltinType 0x55cc0dbb0fb0 'unsigned int'
|-TypedefDecl 0x55cc0dc2d348 <line:278:1, col:13> col:13 referenced pthread_once_t 'int'
| `-BuiltinType 0x55cc0dbb0f10 'int'
|-RecordDecl 0x55cc0dc2d3a0 <line:279:9, line:297:1> line:279:9 union definition
| |-RecordDecl 0x55cc0dc2d448 <line:281:3, line:294:3> line:281:3 struct definition
| | |-FieldDecl 0x55cc0dc2d510 <line:283:5, col:9> col:9 __lock 'int'
| | |-FieldDecl 0x55cc0dc2d578 <line:284:5, col:18> col:18 __nr_readers 'unsigned int'
| | |-FieldDecl 0x55cc0dc2d5e0 <line:285:5, col:18> col:18 __readers_wakeup 'unsigned int'
| | |-FieldDecl 0x55cc0dc2d648 <line:286:5, col:18> col:18 __writer_wakeup 'unsigned int'
| | |-FieldDecl 0x55cc0dc2d6b0 <line:287:5, col:18> col:18 __nr_readers_queued 'unsigned int'
| | |-FieldDecl 0x55cc0dc2d718 <line:288:5, col:18> col:18 __nr_writers_queued 'unsigned int'
| | |-FieldDecl 0x55cc0dc2d780 <line:289:5, col:9> col:9 __writer 'int'
| | |-FieldDecl 0x55cc0dc2d7e8 <line:290:5, col:9> col:9 __shared 'int'
| | |-FieldDecl 0x55cc0dc2d850 <line:291:5, col:23> col:23 __pad1 'unsigned long'
| | |-FieldDecl 0x55cc0dc2d8b8 <line:292:5, col:23> col:23 __pad2 'unsigned long'
| | `-FieldDecl 0x55cc0dc2d920 <line:293:5, col:18> col:18 __flags 'unsigned int'
| |-FieldDecl 0x55cc0dc2d9d0 <line:281:3, line:294:5> col:5 __data 'struct (anonymous struct at ./split_0/mix015_tso.opt_false-unreach-call.i:281:3)':'struct pthread_rwlock_t::(anonymous at ./split_0/mix015_tso.opt_false-unreach-call.i:281:3)'
| |-FieldDecl 0x55cc0dc2da78 <line:295:3, col:17> col:8 __size 'char [56]'
| `-FieldDecl 0x55cc0dc2dae0 <line:296:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x55cc0dc2dc30 <line:279:1, line:297:3> col:3 referenced pthread_rwlock_t 'union pthread_rwlock_t':'pthread_rwlock_t'
| `-ElaboratedType 0x55cc0dc2dbd0 'union pthread_rwlock_t' sugar
|   `-RecordType 0x55cc0dc2d420 'pthread_rwlock_t'
|     `-Record 0x55cc0dc2d3a0 ''
|-RecordDecl 0x55cc0dc2dca0 <line:298:9, line:302:1> line:298:9 union definition
| |-FieldDecl 0x55cc0dc2dde0 <line:300:3, col:16> col:8 __size 'char [8]'
| `-FieldDecl 0x55cc0dc2de48 <line:301:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x55cc0dc2df00 <line:298:1, line:302:3> col:3 referenced pthread_rwlockattr_t 'union pthread_rwlockattr_t':'pthread_rwlockattr_t'
| `-ElaboratedType 0x55cc0dc2dea0 'union pthread_rwlockattr_t' sugar
|   `-RecordType 0x55cc0dc2dd20 'pthread_rwlockattr_t'
|     `-Record 0x55cc0dc2dca0 ''
|-TypedefDecl 0x55cc0dc2df88 <line:303:1, col:22> col:22 referenced pthread_spinlock_t 'volatile int'
| `-QualType 0x55cc0dbb0f14 'volatile int' volatile
|   `-BuiltinType 0x55cc0dbb0f10 'int'
|-RecordDecl 0x55cc0dc2dfe0 <line:304:9, line:308:1> line:304:9 union definition
| |-FieldDecl 0x55cc0dc2f140 <line:306:3, col:17> col:8 __size 'char [32]'
| `-FieldDecl 0x55cc0dc2f1a8 <line:307:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x55cc0dc2f260 <line:304:1, line:308:3> col:3 referenced pthread_barrier_t 'union pthread_barrier_t':'pthread_barrier_t'
| `-ElaboratedType 0x55cc0dc2f200 'union pthread_barrier_t' sugar
|   `-RecordType 0x55cc0dc2e060 'pthread_barrier_t'
|     `-Record 0x55cc0dc2dfe0 ''
|-RecordDecl 0x55cc0dc2f2d0 <line:309:9, line:313:1> line:309:9 union definition
| |-FieldDecl 0x55cc0dc2f3d0 <line:311:3, col:16> col:8 __size 'char [4]'
| `-FieldDecl 0x55cc0dc2f438 <line:312:3, col:7> col:7 __align 'int'
|-TypedefDecl 0x55cc0dc2f4f0 <line:309:1, line:313:3> col:3 referenced pthread_barrierattr_t 'union pthread_barrierattr_t':'pthread_barrierattr_t'
| `-ElaboratedType 0x55cc0dc2f490 'union pthread_barrierattr_t' sugar
|   `-RecordType 0x55cc0dc2f350 'pthread_barrierattr_t'
|     `-Record 0x55cc0dc2f2d0 ''
|-TypedefDecl 0x55cc0dc2f608 <line:314:1, col:29> col:18 referenced __jmp_buf 'long [8]'
| `-ConstantArrayType 0x55cc0dc2f5a0 'long [8]' 8 
|   `-BuiltinType 0x55cc0dbb0f30 'long'
|-EnumDecl 0x55cc0dc2f660 <line:315:1, line:319:1> line:315:1
| |-EnumConstantDecl 0x55cc0dc2f728 <line:317:3> col:3 PTHREAD_CREATE_JOINABLE 'int'
| `-EnumConstantDecl 0x55cc0dc2f778 <line:318:3> col:3 PTHREAD_CREATE_DETACHED 'int'
|-EnumDecl 0x55cc0dc2f7c8 <line:320:1, line:331:1> line:320:1
| |-EnumConstantDecl 0x55cc0dc2f898 <line:322:3> col:3 referenced PTHREAD_MUTEX_TIMED_NP 'int'
| |-EnumConstantDecl 0x55cc0dc2f8e8 <line:323:3> col:3 referenced PTHREAD_MUTEX_RECURSIVE_NP 'int'
| |-EnumConstantDecl 0x55cc0dc2f938 <line:324:3> col:3 referenced PTHREAD_MUTEX_ERRORCHECK_NP 'int'
| |-EnumConstantDecl 0x55cc0dc2f988 <line:325:3> col:3 PTHREAD_MUTEX_ADAPTIVE_NP 'int'
| |-EnumConstantDecl 0x55cc0dc2fa10 <line:327:3, col:26> col:3 referenced PTHREAD_MUTEX_NORMAL 'int'
| | `-ConstantExpr 0x55cc0dc2f9f8 <col:26> 'int'
| |   `-DeclRefExpr 0x55cc0dc2f9d8 <col:26> 'int' EnumConstant 0x55cc0dc2f898 'PTHREAD_MUTEX_TIMED_NP' 'int'
| |-EnumConstantDecl 0x55cc0dc2fa98 <line:328:3, col:29> col:3 PTHREAD_MUTEX_RECURSIVE 'int'
| | `-ConstantExpr 0x55cc0dc2fa80 <col:29> 'int'
| |   `-DeclRefExpr 0x55cc0dc2fa60 <col:29> 'int' EnumConstant 0x55cc0dc2f8e8 'PTHREAD_MUTEX_RECURSIVE_NP' 'int'
| |-EnumConstantDecl 0x55cc0dc2fb20 <line:329:3, col:30> col:3 PTHREAD_MUTEX_ERRORCHECK 'int'
| | `-ConstantExpr 0x55cc0dc2fb08 <col:30> 'int'
| |   `-DeclRefExpr 0x55cc0dc2fae8 <col:30> 'int' EnumConstant 0x55cc0dc2f938 'PTHREAD_MUTEX_ERRORCHECK_NP' 'int'
| `-EnumConstantDecl 0x55cc0dc2fba8 <line:330:3, col:27> col:3 PTHREAD_MUTEX_DEFAULT 'int'
|   `-ConstantExpr 0x55cc0dc2fb90 <col:27> 'int'
|     `-DeclRefExpr 0x55cc0dc2fb70 <col:27> 'int' EnumConstant 0x55cc0dc2fa10 'PTHREAD_MUTEX_NORMAL' 'int'
|-EnumDecl 0x55cc0dc2fbf8 <line:332:1, line:338:1> line:332:1
| |-EnumConstantDecl 0x55cc0dc2fcc8 <line:334:3> col:3 referenced PTHREAD_MUTEX_STALLED 'int'
| |-EnumConstantDecl 0x55cc0dc2fd50 <line:335:3, col:30> col:3 PTHREAD_MUTEX_STALLED_NP 'int'
| | `-ConstantExpr 0x55cc0dc2fd38 <col:30> 'int'
| |   `-DeclRefExpr 0x55cc0dc2fd18 <col:30> 'int' EnumConstant 0x55cc0dc2fcc8 'PTHREAD_MUTEX_STALLED' 'int'
| |-EnumConstantDecl 0x55cc0dc2fda0 <line:336:3> col:3 referenced PTHREAD_MUTEX_ROBUST 'int'
| `-EnumConstantDecl 0x55cc0dc2fe28 <line:337:3, col:29> col:3 PTHREAD_MUTEX_ROBUST_NP 'int'
|   `-ConstantExpr 0x55cc0dc2fe10 <col:29> 'int'
|     `-DeclRefExpr 0x55cc0dc2fdf0 <col:29> 'int' EnumConstant 0x55cc0dc2fda0 'PTHREAD_MUTEX_ROBUST' 'int'
|-EnumDecl 0x55cc0dc2fe78 <line:339:1, line:344:1> line:339:1
| |-EnumConstantDecl 0x55cc0dc2ff48 <line:341:3> col:3 PTHREAD_PRIO_NONE 'int'
| |-EnumConstantDecl 0x55cc0dc2ff98 <line:342:3> col:3 PTHREAD_PRIO_INHERIT 'int'
| `-EnumConstantDecl 0x55cc0dc2ffe8 <line:343:3> col:3 PTHREAD_PRIO_PROTECT 'int'
|-EnumDecl 0x55cc0dc30038 <line:345:1, line:351:1> line:345:1
| |-EnumConstantDecl 0x55cc0dc30150 <line:347:3> col:3 referenced PTHREAD_RWLOCK_PREFER_READER_NP 'int'
| |-EnumConstantDecl 0x55cc0dc301a0 <line:348:3> col:3 PTHREAD_RWLOCK_PREFER_WRITER_NP 'int'
| |-EnumConstantDecl 0x55cc0dc301f0 <line:349:3> col:3 PTHREAD_RWLOCK_PREFER_WRITER_NONRECURSIVE_NP 'int'
| `-EnumConstantDecl 0x55cc0dc30278 <line:350:3, col:31> col:3 PTHREAD_RWLOCK_DEFAULT_NP 'int'
|   `-ConstantExpr 0x55cc0dc30260 <col:31> 'int'
|     `-DeclRefExpr 0x55cc0dc30240 <col:31> 'int' EnumConstant 0x55cc0dc30150 'PTHREAD_RWLOCK_PREFER_READER_NP' 'int'
|-EnumDecl 0x55cc0dc302c8 <line:352:1, line:356:1> line:352:1
| |-EnumConstantDecl 0x55cc0dc30398 <line:354:3> col:3 PTHREAD_INHERIT_SCHED 'int'
| `-EnumConstantDecl 0x55cc0dc303e8 <line:355:3> col:3 PTHREAD_EXPLICIT_SCHED 'int'
|-EnumDecl 0x55cc0dc30438 <line:357:1, line:361:1> line:357:1
| |-EnumConstantDecl 0x55cc0dc30508 <line:359:3> col:3 PTHREAD_SCOPE_SYSTEM 'int'
| `-EnumConstantDecl 0x55cc0dc30558 <line:360:3> col:3 PTHREAD_SCOPE_PROCESS 'int'
|-EnumDecl 0x55cc0dc305a8 <line:362:1, line:366:1> line:362:1
| |-EnumConstantDecl 0x55cc0dc30678 <line:364:3> col:3 PTHREAD_PROCESS_PRIVATE 'int'
| `-EnumConstantDecl 0x55cc0dc306c8 <line:365:3> col:3 PTHREAD_PROCESS_SHARED 'int'
|-RecordDecl 0x55cc0dc30718 <line:367:1, line:373:1> line:367:8 struct _pthread_cleanup_buffer definition
| |-FieldDecl 0x55cc0dc30958 <line:369:3, col:28> col:10 __routine 'void (*)(void *)'
| |-FieldDecl 0x55cc0dc309c0 <line:370:3, col:9> col:9 __arg 'void *'
| |-FieldDecl 0x55cc0dc30a28 <line:371:3, col:7> col:7 __canceltype 'int'
| `-FieldDecl 0x55cc0dc30b48 <line:372:3, col:35> col:35 __prev 'struct _pthread_cleanup_buffer *'
|-EnumDecl 0x55cc0dc30b98 <line:374:1, line:378:1> line:374:1
| |-EnumConstantDecl 0x55cc0dc30c68 <line:376:3> col:3 PTHREAD_CANCEL_ENABLE 'int'
| `-EnumConstantDecl 0x55cc0dc30cb8 <line:377:3> col:3 PTHREAD_CANCEL_DISABLE 'int'
|-EnumDecl 0x55cc0dc30d08 <line:379:1, line:383:1> line:379:1
| |-EnumConstantDecl 0x55cc0dc30dd8 <line:381:3> col:3 PTHREAD_CANCEL_DEFERRED 'int'
| `-EnumConstantDecl 0x55cc0dc30e28 <line:382:3> col:3 PTHREAD_CANCEL_ASYNCHRONOUS 'int'
|-FunctionDecl 0x55cc0dc31488 <line:385:1, line:388:96> line:385:12 used pthread_create 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' extern
| |-ParmVarDecl 0x55cc0dc30f20 <col:28, col:50> col:50 __newthread 'pthread_t *restrict'
| |-ParmVarDecl 0x55cc0dc31030 <line:386:7, col:40> col:40 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x55cc0dc31270 <line:387:7, col:39> col:15 __start_routine 'void *(*)(void *)'
| |-ParmVarDecl 0x55cc0dc312f0 <line:388:7, col:24> col:24 __arg 'void *restrict'
| |-NoThrowAttr 0x55cc0dc31548 <col:47>
| |-NonNullAttr 0x55cc0dc315a0 <col:77, col:94> 1 3
| `-CallbackAttr 0x55cc0dc315d8 <line:385:12> Implicit 2 3
|-FunctionDecl 0x55cc0dc31700 <line:389:1, col:72> col:13 pthread_exit 'void (void *) __attribute__((noreturn))' extern
| `-ParmVarDecl 0x55cc0dc31630 <col:27, col:33> col:33 __retval 'void *'
|-FunctionDecl 0x55cc0dc31958 <line:390:1, col:64> col:12 pthread_join 'int (pthread_t, void **)' extern
| |-ParmVarDecl 0x55cc0dc317b8 <col:26, col:36> col:36 __th 'pthread_t':'unsigned long'
| `-ParmVarDecl 0x55cc0dc31838 <col:42, col:49> col:49 __thread_return 'void **'
|-FunctionDecl 0x55cc0dc31b28 <line:391:1, col:83> col:12 pthread_detach 'int (pthread_t)' extern
| |-ParmVarDecl 0x55cc0dc31a18 <col:28, col:38> col:38 __th 'pthread_t':'unsigned long'
| `-NoThrowAttr 0x55cc0dc31bd0 <col:60>
|-FunctionDecl 0x55cc0dc31d20 <line:392:1, col:105> col:18 pthread_self 'pthread_t (void)' extern
| |-NoThrowAttr 0x55cc0dc31dc0 <col:54>
| `-ConstAttr 0x55cc0dc31e18 <col:95>
|-FunctionDecl 0x55cc0dc31fe8 <line:393:1, line:394:70> line:393:12 pthread_equal 'int (pthread_t, pthread_t)' extern
| |-ParmVarDecl 0x55cc0dc31e50 <col:27, col:37> col:37 __thread1 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x55cc0dc31ec8 <col:48, col:58> col:58 __thread2 'pthread_t':'unsigned long'
| |-NoThrowAttr 0x55cc0dc32098 <line:394:19>
| `-ConstAttr 0x55cc0dc320f0 <col:60>
|-FunctionDecl 0x55cc0dc33b08 <line:395:1, col:128> col:12 pthread_attr_init 'int (pthread_attr_t *)' extern
| |-ParmVarDecl 0x55cc0dc339d0 <col:31, col:47> col:47 __attr 'pthread_attr_t *'
| |-NoThrowAttr 0x55cc0dc33bb0 <col:71>
| `-NonNullAttr 0x55cc0dc33c08 <col:112, col:126> 1
|-FunctionDecl 0x55cc0dc33d10 <line:396:1, line:397:79> line:396:12 pthread_attr_destroy 'int (pthread_attr_t *)' extern
| |-ParmVarDecl 0x55cc0dc33c58 <col:34, col:50> col:50 __attr 'pthread_attr_t *'
| |-NoThrowAttr 0x55cc0dc33db8 <line:397:22>
| `-NonNullAttr 0x55cc0dc33e10 <col:63, col:77> 1
|-FunctionDecl 0x55cc0dc34038 <line:398:1, line:400:82> line:398:12 pthread_attr_getdetachstate 'int (const pthread_attr_t *, int *)' extern
| |-ParmVarDecl 0x55cc0dc33e58 <col:41, col:63> col:63 __attr 'const pthread_attr_t *'
| |-ParmVarDecl 0x55cc0dc33ed8 <line:399:6, col:11> col:11 __detachstate 'int *'
| |-NoThrowAttr 0x55cc0dc340e8 <line:400:22>
| `-NonNullAttr 0x55cc0dc34140 <col:63, col:80> 1 2
|-FunctionDecl 0x55cc0dc34348 <line:401:1, line:403:79> line:401:12 pthread_attr_setdetachstate 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x55cc0dc34188 <col:41, col:57> col:57 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x55cc0dc34208 <line:402:6, col:10> col:10 __detachstate 'int'
| |-NoThrowAttr 0x55cc0dc343f8 <line:403:22>
| `-NonNullAttr 0x55cc0dc34450 <col:63, col:77> 1
|-FunctionDecl 0x55cc0dc346a8 <line:404:1, line:406:82> line:404:12 pthread_attr_getguardsize 'int (const pthread_attr_t *, size_t *)' extern
| |-ParmVarDecl 0x55cc0dc34498 <col:39, col:61> col:61 __attr 'const pthread_attr_t *'
| |-ParmVarDecl 0x55cc0dc34540 <line:405:11, col:19> col:19 __guardsize 'size_t *'
| |-NoThrowAttr 0x55cc0dc34758 <line:406:22>
| `-NonNullAttr 0x55cc0dc347b0 <col:63, col:80> 1 2
|-FunctionDecl 0x55cc0dc359e8 <line:407:1, line:409:79> line:407:12 pthread_attr_setguardsize 'int (pthread_attr_t *, size_t)' extern
| |-ParmVarDecl 0x55cc0dc347f8 <col:39, col:55> col:55 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x55cc0dc34870 <line:408:11, col:18> col:18 __guardsize 'size_t':'unsigned long'
| |-NoThrowAttr 0x55cc0dc35a98 <line:409:22>
| `-NonNullAttr 0x55cc0dc35af0 <col:63, col:77> 1
|-FunctionDecl 0x55cc0dc35d28 <line:410:1, line:412:82> line:410:12 pthread_attr_getschedparam 'int (const pthread_attr_t *restrict, struct sched_param *restrict)' extern
| |-ParmVarDecl 0x55cc0dc35b38 <col:40, col:73> col:73 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x55cc0dc35bc8 <line:411:12, col:43> col:43 __param 'struct sched_param *restrict'
| |-NoThrowAttr 0x55cc0dc35dd8 <line:412:22>
| `-NonNullAttr 0x55cc0dc35e30 <col:63, col:80> 1 2
|-FunctionDecl 0x55cc0dc36068 <line:413:1, line:415:97> line:413:12 pthread_attr_setschedparam 'int (pthread_attr_t *restrict, const struct sched_param *restrict)' extern
| |-ParmVarDecl 0x55cc0dc35e78 <col:40, col:67> col:67 __attr 'pthread_attr_t *restrict'
| |-ParmVarDecl 0x55cc0dc35f08 <line:414:12, line:415:12> col:12 __param 'const struct sched_param *restrict'
| |-NoThrowAttr 0x55cc0dc36118 <col:37>
| `-NonNullAttr 0x55cc0dc36170 <col:78, col:95> 1 2
|-FunctionDecl 0x55cc0dc36358 <line:416:1, line:418:82> line:416:12 pthread_attr_getschedpolicy 'int (const pthread_attr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x55cc0dc361b8 <col:41, line:417:6> col:6 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x55cc0dc36238 <col:14, col:30> col:30 __policy 'int *restrict'
| |-NoThrowAttr 0x55cc0dc36408 <line:418:22>
| `-NonNullAttr 0x55cc0dc36460 <col:63, col:80> 1 2
|-FunctionDecl 0x55cc0dc365e8 <line:419:1, line:420:79> line:419:12 pthread_attr_setschedpolicy 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x55cc0dc364a8 <col:41, col:57> col:57 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x55cc0dc36528 <col:65, col:69> col:69 __policy 'int'
| |-NoThrowAttr 0x55cc0dc36698 <line:420:22>
| `-NonNullAttr 0x55cc0dc366f0 <col:63, col:77> 1
|-FunctionDecl 0x55cc0dc36898 <line:421:1, line:423:82> line:421:12 pthread_attr_getinheritsched 'int (const pthread_attr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x55cc0dc36738 <col:42, line:422:7> col:7 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x55cc0dc367b8 <col:15, col:31> col:31 __inherit 'int *restrict'
| |-NoThrowAttr 0x55cc0dc36948 <line:423:22>
| `-NonNullAttr 0x55cc0dc369c0 <col:63, col:80> 1 2
|-FunctionDecl 0x55cc0dc36b48 <line:424:1, line:426:79> line:424:12 pthread_attr_setinheritsched 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x55cc0dc36a08 <col:42, col:58> col:58 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x55cc0dc36a88 <line:425:7, col:11> col:11 __inherit 'int'
| |-NoThrowAttr 0x55cc0dc36bf8 <line:426:22>
| `-NonNullAttr 0x55cc0dc36c50 <col:63, col:77> 1
|-FunctionDecl 0x55cc0dc36df8 <line:427:1, line:429:82> line:427:12 pthread_attr_getscope 'int (const pthread_attr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x55cc0dc36c98 <col:35, col:68> col:68 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x55cc0dc36d18 <line:428:7, col:23> col:23 __scope 'int *restrict'
| |-NoThrowAttr 0x55cc0dc36ea8 <line:429:22>
| `-NonNullAttr 0x55cc0dc36f00 <col:63, col:80> 1 2
|-FunctionDecl 0x55cc0dc37088 <line:430:1, line:431:79> line:430:12 pthread_attr_setscope 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x55cc0dc36f48 <col:35, col:51> col:51 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x55cc0dc36fc8 <col:59, col:63> col:63 __scope 'int'
| |-NoThrowAttr 0x55cc0dc37138 <line:431:22>
| `-NonNullAttr 0x55cc0dc37190 <col:63, col:77> 1
|-FunctionDecl 0x55cc0dc373b8 <line:432:1, line:434:115> line:432:12 pthread_attr_getstackaddr 'int (const pthread_attr_t *restrict, void **restrict)' extern
| |-ParmVarDecl 0x55cc0dc371d8 <col:39, line:433:11> col:11 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x55cc0dc37258 <col:19, col:37> col:37 __stackaddr 'void **restrict'
| |-NoThrowAttr 0x55cc0dc37468 <line:434:22>
| |-NonNullAttr 0x55cc0dc374c0 <col:63, col:80> 1 2
| `-DeprecatedAttr 0x55cc0dc374f8 <col:100> "" ""
|-FunctionDecl 0x55cc0dc37708 <line:435:1, line:437:112> line:435:12 pthread_attr_setstackaddr 'int (pthread_attr_t *, void *)' extern
| |-ParmVarDecl 0x55cc0dc37548 <col:39, col:55> col:55 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x55cc0dc375c8 <line:436:11, col:17> col:17 __stackaddr 'void *'
| |-NoThrowAttr 0x55cc0dc377b8 <line:437:22>
| |-NonNullAttr 0x55cc0dc37810 <col:63, col:77> 1
| `-DeprecatedAttr 0x55cc0dc37848 <col:97> "" ""
|-FunctionDecl 0x55cc0dc37a48 <line:438:1, line:440:82> line:438:12 pthread_attr_getstacksize 'int (const pthread_attr_t *restrict, size_t *restrict)' extern
| |-ParmVarDecl 0x55cc0dc37898 <col:39, line:439:11> col:11 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x55cc0dc37910 <col:19, col:38> col:38 __stacksize 'size_t *restrict'
| |-NoThrowAttr 0x55cc0dc37af8 <line:440:22>
| `-NonNullAttr 0x55cc0dc37b50 <col:63, col:80> 1 2
|-FunctionDecl 0x55cc0dc37cd0 <line:441:1, line:443:79> line:441:12 pthread_attr_setstacksize 'int (pthread_attr_t *, size_t)' extern
| |-ParmVarDecl 0x55cc0dc37b98 <col:39, col:55> col:55 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x55cc0dc37c10 <line:442:11, col:18> col:18 __stacksize 'size_t':'unsigned long'
| |-NoThrowAttr 0x55cc0dc37d80 <line:443:22>
| `-NonNullAttr 0x55cc0dc37dd8 <col:63, col:77> 1
|-FunctionDecl 0x55cc0dc380c8 <line:444:1, line:447:85> line:444:12 pthread_attr_getstack 'int (const pthread_attr_t *restrict, void **restrict, size_t *restrict)' extern
| |-ParmVarDecl 0x55cc0dc37e28 <col:35, col:68> col:68 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x55cc0dc37ea8 <line:445:7, col:25> col:25 __stackaddr 'void **restrict'
| |-ParmVarDecl 0x55cc0dc37f20 <line:446:7, col:26> col:26 __stacksize 'size_t *restrict'
| |-NoThrowAttr 0x55cc0dc38180 <line:447:22>
| `-NonNullAttr 0x55cc0dc381d8 <col:63, col:83> 1 2 3
|-FunctionDecl 0x55cc0dc38488 <line:448:1, line:449:100> line:448:12 pthread_attr_setstack 'int (pthread_attr_t *, void *, size_t)' extern
| |-ParmVarDecl 0x55cc0dc38230 <col:35, col:51> col:51 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x55cc0dc382b0 <col:59, col:65> col:65 __stackaddr 'void *'
| |-ParmVarDecl 0x55cc0dc38328 <line:449:7, col:14> col:14 __stacksize 'size_t':'unsigned long'
| |-NoThrowAttr 0x55cc0dc38540 <col:43>
| `-NonNullAttr 0x55cc0dc38598 <col:84, col:98> 1
|-FunctionDecl 0x55cc0dc38858 <line:450:1, line:452:79> line:450:12 pthread_setschedparam 'int (pthread_t, int, const struct sched_param *)' extern
| |-ParmVarDecl 0x55cc0dc385e8 <col:35, col:45> col:45 __target_thread 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x55cc0dc38668 <col:62, col:66> col:66 __policy 'int'
| |-ParmVarDecl 0x55cc0dc386f8 <line:451:7, col:33> col:33 __param 'const struct sched_param *'
| |-NoThrowAttr 0x55cc0dc38910 <line:452:22>
| `-NonNullAttr 0x55cc0dc38968 <col:63, col:77> 3
|-FunctionDecl 0x55cc0dc38c78 <line:453:1, line:456:82> line:453:12 pthread_getschedparam 'int (pthread_t, int *restrict, struct sched_param *restrict)' extern
| |-ParmVarDecl 0x55cc0dc389e0 <col:35, col:45> col:45 __target_thread 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x55cc0dc38a60 <line:454:7, col:23> col:23 __policy 'int *restrict'
| |-ParmVarDecl 0x55cc0dc38af0 <line:455:7, col:38> col:38 __param 'struct sched_param *restrict'
| |-NoThrowAttr 0x55cc0dc38d30 <line:456:22>
| `-NonNullAttr 0x55cc0dc38d88 <col:63, col:80> 2 3
|-FunctionDecl 0x55cc0dc38f78 <line:457:1, line:458:45> line:457:12 pthread_setschedprio 'int (pthread_t, int)' extern
| |-ParmVarDecl 0x55cc0dc38dd8 <col:34, col:44> col:44 __target_thread 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x55cc0dc38e58 <col:61, col:65> col:65 __prio 'int'
| `-NoThrowAttr 0x55cc0dc39028 <line:458:22>
|-FunctionDecl 0x55cc0dc393f8 <line:459:1, line:460:71> line:459:12 pthread_once 'int (pthread_once_t *, void (*)(void))' extern
| |-ParmVarDecl 0x55cc0dc390f0 <col:26, col:42> col:42 __once_control 'pthread_once_t *'
| |-ParmVarDecl 0x55cc0dc39290 <line:460:5, col:33> col:12 __init_routine 'void (*)(void)'
| `-NonNullAttr 0x55cc0dc394a8 <col:52, col:69> 1 2
|-FunctionDecl 0x55cc0dc39650 <line:461:1, col:64> col:12 pthread_setcancelstate 'int (int, int *)' extern
| |-ParmVarDecl 0x55cc0dc39530 <col:36, col:40> col:40 __state 'int'
| `-ParmVarDecl 0x55cc0dc395b0 <col:49, col:54> col:54 __oldstate 'int *'
|-FunctionDecl 0x55cc0dc39838 <line:462:1, col:61> col:12 pthread_setcanceltype 'int (int, int *)' extern
| |-ParmVarDecl 0x55cc0dc39718 <col:35, col:39> col:39 __type 'int'
| `-ParmVarDecl 0x55cc0dc39798 <col:47, col:52> col:52 __oldtype 'int *'
|-FunctionDecl 0x55cc0dc399f0 <line:463:1, col:42> col:12 pthread_cancel 'int (pthread_t)' extern
| `-ParmVarDecl 0x55cc0dc398f8 <col:28, col:38> col:38 __th 'pthread_t':'unsigned long'
|-FunctionDecl 0x55cc0dc39b30 <line:464:1, col:37> col:13 pthread_testcancel 'void (void)' extern
|-RecordDecl 0x55cc0dc39bd0 <line:465:9, line:473:1> line:465:9 struct definition
| |-RecordDecl 0x55cc0dc39c78 <line:467:3, line:471:3> line:467:3 struct definition
| | |-FieldDecl 0x55cc0dc39d68 <line:469:5, col:15> col:15 __cancel_jmp_buf '__jmp_buf':'long [8]'
| | `-FieldDecl 0x55cc0dc39dd0 <line:470:5, col:9> col:9 __mask_was_saved 'int'
| |-FieldDecl 0x55cc0dc39fa0 <line:467:3, line:471:23> col:5 __cancel_jmp_buf 'struct (anonymous struct at ./split_0/mix015_tso.opt_false-unreach-call.i:467:3) [1]'
| `-FieldDecl 0x55cc0dc3a098 <line:472:3, col:16> col:9 __pad 'void *[4]'
|-TypedefDecl 0x55cc0dc3a150 <line:465:1, line:473:3> col:3 referenced __pthread_unwind_buf_t 'struct __pthread_unwind_buf_t':'__pthread_unwind_buf_t'
| |-ElaboratedType 0x55cc0dc3a0f0 'struct __pthread_unwind_buf_t' sugar
| | `-RecordType 0x55cc0dc39c50 '__pthread_unwind_buf_t'
| |   `-Record 0x55cc0dc39bd0 ''
| `-AlignedAttr 0x55cc0dc3a1a8 <col:42> aligned
|   `-<<<NULL>>>
|-RecordDecl 0x55cc0dc3a220 <line:474:1, line:480:1> line:474:8 struct __pthread_cleanup_frame definition
| |-FieldDecl 0x55cc0dc3a380 <line:476:3, col:35> col:10 __cancel_routine 'void (*)(void *)'
| |-FieldDecl 0x55cc0dc3a3e8 <line:477:3, col:9> col:9 __cancel_arg 'void *'
| |-FieldDecl 0x55cc0dc3a450 <line:478:3, col:7> col:7 __do_it 'int'
| `-FieldDecl 0x55cc0dc3a4b8 <line:479:3, col:7> col:7 __cancel_type 'int'
|-FunctionDecl 0x55cc0dc3a6c0 <line:481:1, col:69> col:13 __pthread_register_cancel 'void (__pthread_unwind_buf_t *)' extern
| `-ParmVarDecl 0x55cc0dc3a5b0 <col:40, col:64> col:64 __buf '__pthread_unwind_buf_t *'
|-FunctionDecl 0x55cc0dc3a808 <line:483:1, col:71> col:13 __pthread_unregister_cancel 'void (__pthread_unwind_buf_t *)' extern
| `-ParmVarDecl 0x55cc0dc3a778 <col:42, col:66> col:66 __buf '__pthread_unwind_buf_t *'
|-FunctionDecl 0x55cc0dc3aa00 <line:485:1, line:487:31> line:485:13 __pthread_unwind_next 'void (__pthread_unwind_buf_t *) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x55cc0dc3a8c0 <col:36, col:60> col:60 __buf '__pthread_unwind_buf_t *'
| `-WeakAttr 0x55cc0dc3aaa8 <line:487:22>
|-RecordDecl 0x55cc0dc3ab00 <line:489:1, col:8> col:8 struct __jmp_buf_tag
|-FunctionDecl 0x55cc0dc3ae18 <line:490:1, col:98> col:12 __sigsetjmp 'int (struct __jmp_buf_tag *, int)' extern
| |-ParmVarDecl 0x55cc0dc3ac78 <col:25, col:47> col:47 __env 'struct __jmp_buf_tag *'
| |-ParmVarDecl 0x55cc0dc3acf8 <col:54, col:58> col:58 __savemask 'int'
| |-NoThrowAttr 0x55cc0dc3aec8 <col:86>
| `-ReturnsTwiceAttr 0x55cc0dc3af20 <col:12> Implicit
|-FunctionDecl 0x55cc0dc3b248 <line:491:1, line:493:79> line:491:12 pthread_mutex_init 'int (pthread_mutex_t *, const pthread_mutexattr_t *)' extern
| |-ParmVarDecl 0x55cc0dc3aff0 <col:32, col:49> col:49 __mutex 'pthread_mutex_t *'
| |-ParmVarDecl 0x55cc0dc3b100 <line:492:11, col:38> col:38 __mutexattr 'const pthread_mutexattr_t *'
| |-NoThrowAttr 0x55cc0dc3b2f8 <line:493:22>
| `-NonNullAttr 0x55cc0dc3b350 <col:63, col:77> 1
|-FunctionDecl 0x55cc0dc3b4c8 <line:494:1, line:495:79> line:494:12 pthread_mutex_destroy 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x55cc0dc3b398 <col:35, col:52> col:52 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x55cc0dc3b570 <line:495:22>
| `-NonNullAttr 0x55cc0dc3b5c8 <col:63, col:77> 1
|-FunctionDecl 0x55cc0dc3b6d0 <line:496:1, line:497:68> line:496:12 pthread_mutex_trylock 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x55cc0dc3b618 <col:35, col:52> col:52 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x55cc0dc3b778 <line:497:22>
| `-NonNullAttr 0x55cc0dc3b7d0 <col:52, col:66> 1
|-FunctionDecl 0x55cc0dc3b8d0 <line:498:1, line:499:68> line:498:12 pthread_mutex_lock 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x55cc0dc3b818 <col:32, col:49> col:49 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x55cc0dc3b978 <line:499:22>
| `-NonNullAttr 0x55cc0dc3b9d0 <col:52, col:66> 1
|-FunctionDecl 0x55cc0dc3cc28 <line:500:1, line:502:85> line:500:12 pthread_mutex_timedlock 'int (pthread_mutex_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x55cc0dc3ca38 <col:37, col:65> col:65 __mutex 'pthread_mutex_t *restrict'
| |-ParmVarDecl 0x55cc0dc3cac8 <line:501:9, line:502:9> col:9 __abstime 'const struct timespec *restrict'
| |-NoThrowAttr 0x55cc0dc3ccd8 <col:36>
| `-NonNullAttr 0x55cc0dc3cd30 <col:66, col:83> 1 2
|-FunctionDecl 0x55cc0dc3ce30 <line:503:1, line:504:68> line:503:12 pthread_mutex_unlock 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x55cc0dc3cd78 <col:34, col:51> col:51 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x55cc0dc3ced8 <line:504:22>
| `-NonNullAttr 0x55cc0dc3cf30 <col:52, col:66> 1
|-FunctionDecl 0x55cc0dc3d1c8 <line:505:1, line:508:82> line:505:12 pthread_mutex_getprioceiling 'int (const pthread_mutex_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x55cc0dc3cfe0 <col:42, line:506:18> col:18 __mutex 'const pthread_mutex_t *restrict'
| |-ParmVarDecl 0x55cc0dc3d060 <line:507:7, col:23> col:23 __prioceiling 'int *restrict'
| |-NoThrowAttr 0x55cc0dc3d278 <line:508:22>
| `-NonNullAttr 0x55cc0dc3d2d0 <col:63, col:80> 1 2
|-FunctionDecl 0x55cc0dc3d598 <line:509:1, line:512:82> line:509:12 pthread_mutex_setprioceiling 'int (pthread_mutex_t *restrict, int, int *restrict)' extern
| |-ParmVarDecl 0x55cc0dc3d318 <col:42, col:70> col:70 __mutex 'pthread_mutex_t *restrict'
| |-ParmVarDecl 0x55cc0dc3d398 <line:510:7, col:11> col:11 __prioceiling 'int'
| |-ParmVarDecl 0x55cc0dc3d418 <line:511:7, col:23> col:23 __old_ceiling 'int *restrict'
| |-NoThrowAttr 0x55cc0dc3d650 <line:512:22>
| `-NonNullAttr 0x55cc0dc3d6a8 <col:63, col:80> 1 3
|-FunctionDecl 0x55cc0dc3d7b0 <line:513:1, line:514:79> line:513:12 pthread_mutex_consistent 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x55cc0dc3d6f8 <col:38, col:55> col:55 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x55cc0dc3d858 <line:514:22>
| `-NonNullAttr 0x55cc0dc3d8b0 <col:63, col:77> 1
|-FunctionDecl 0x55cc0dc3dad8 <line:515:1, line:516:79> line:515:12 pthread_mutexattr_init 'int (pthread_mutexattr_t *)' extern
| |-ParmVarDecl 0x55cc0dc3d960 <col:36, col:57> col:57 __attr 'pthread_mutexattr_t *'
| |-NoThrowAttr 0x55cc0dc3db80 <line:516:22>
| `-NonNullAttr 0x55cc0dc3dbd8 <col:63, col:77> 1
|-FunctionDecl 0x55cc0dc3dce0 <line:517:1, line:518:79> line:517:12 pthread_mutexattr_destroy 'int (pthread_mutexattr_t *)' extern
| |-ParmVarDecl 0x55cc0dc3dc28 <col:39, col:60> col:60 __attr 'pthread_mutexattr_t *'
| |-NoThrowAttr 0x55cc0dc3dd88 <line:518:22>
| `-NonNullAttr 0x55cc0dc3dde0 <col:63, col:77> 1
|-FunctionDecl 0x55cc0dc3e008 <line:519:1, line:522:82> line:519:12 pthread_mutexattr_getpshared 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x55cc0dc3de28 <col:42, line:520:18> col:18 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x55cc0dc3dea8 <line:521:7, col:23> col:23 __pshared 'int *restrict'
| |-NoThrowAttr 0x55cc0dc3e0b8 <line:522:22>
| `-NonNullAttr 0x55cc0dc3e110 <col:63, col:80> 1 2
|-FunctionDecl 0x55cc0dc3e318 <line:523:1, line:525:79> line:523:12 pthread_mutexattr_setpshared 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x55cc0dc3e158 <col:42, col:63> col:63 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x55cc0dc3e1d8 <line:524:7, col:11> col:11 __pshared 'int'
| |-NoThrowAttr 0x55cc0dc3e3c8 <line:525:22>
| `-NonNullAttr 0x55cc0dc3e420 <col:63, col:77> 1
|-FunctionDecl 0x55cc0dc3e5c8 <line:526:1, line:528:82> line:526:12 pthread_mutexattr_gettype 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x55cc0dc3e468 <col:39, line:527:11> col:11 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x55cc0dc3e4e8 <col:19, col:35> col:35 __kind 'int *restrict'
| |-NoThrowAttr 0x55cc0dc3e678 <line:528:22>
| `-NonNullAttr 0x55cc0dc3e6d0 <col:63, col:80> 1 2
|-FunctionDecl 0x55cc0dc3e858 <line:529:1, line:530:79> line:529:12 pthread_mutexattr_settype 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x55cc0dc3e718 <col:39, col:60> col:60 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x55cc0dc3e798 <col:68, col:72> col:72 __kind 'int'
| |-NoThrowAttr 0x55cc0dc3e908 <line:530:22>
| `-NonNullAttr 0x55cc0dc3e960 <col:63, col:77> 1
|-FunctionDecl 0x55cc0dc3eb20 <line:531:1, line:534:82> line:531:12 pthread_mutexattr_getprotocol 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x55cc0dc3e9a8 <col:43, line:532:19> col:19 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x55cc0dc3ea40 <line:533:8, col:24> col:24 __protocol 'int *restrict'
| |-NoThrowAttr 0x55cc0dc3ebd0 <line:534:22>
| `-NonNullAttr 0x55cc0dc3ec28 <col:63, col:80> 1 2
|-FunctionDecl 0x55cc0dc3edb8 <line:535:1, line:537:79> line:535:12 pthread_mutexattr_setprotocol 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x55cc0dc3ec78 <col:43, col:64> col:64 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x55cc0dc3ecf8 <line:536:8, col:12> col:12 __protocol 'int'
| |-NoThrowAttr 0x55cc0dc3ee68 <line:537:22>
| `-NonNullAttr 0x55cc0dc3eec0 <col:63, col:77> 1
|-FunctionDecl 0x55cc0dc3f068 <line:538:1, line:541:82> line:538:12 pthread_mutexattr_getprioceiling 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x55cc0dc3ef08 <col:46, line:539:22> col:22 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x55cc0dc3ef88 <line:540:11, col:27> col:27 __prioceiling 'int *restrict'
| |-NoThrowAttr 0x55cc0dc3f118 <line:541:22>
| `-NonNullAttr 0x55cc0dc3f170 <col:63, col:80> 1 2
|-FunctionDecl 0x55cc0dc3f2f8 <line:542:1, line:544:79> line:542:12 pthread_mutexattr_setprioceiling 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x55cc0dc3f1b8 <col:46, col:67> col:67 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x55cc0dc3f238 <line:543:11, col:15> col:15 __prioceiling 'int'
| |-NoThrowAttr 0x55cc0dc3f3a8 <line:544:22>
| `-NonNullAttr 0x55cc0dc3f400 <col:63, col:77> 1
|-FunctionDecl 0x55cc0dc3f5e8 <line:545:1, line:547:82> line:545:12 pthread_mutexattr_getrobust 'int (const pthread_mutexattr_t *, int *)' extern
| |-ParmVarDecl 0x55cc0dc3f448 <col:41, col:68> col:68 __attr 'const pthread_mutexattr_t *'
| |-ParmVarDecl 0x55cc0dc3f4c8 <line:546:6, col:11> col:11 __robustness 'int *'
| |-NoThrowAttr 0x55cc0dc3f698 <line:547:22>
| `-NonNullAttr 0x55cc0dc3f6f0 <col:63, col:80> 1 2
|-FunctionDecl 0x55cc0dc3f878 <line:548:1, line:550:79> line:548:12 pthread_mutexattr_setrobust 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x55cc0dc3f738 <col:41, col:62> col:62 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x55cc0dc3f7b8 <line:549:6, col:10> col:10 __robustness 'int'
| |-NoThrowAttr 0x55cc0dc3f928 <line:550:22>
| `-NonNullAttr 0x55cc0dc3f980 <col:63, col:77> 1
|-FunctionDecl 0x55cc0dc40cf8 <line:551:1, line:553:86> line:551:12 pthread_rwlock_init 'int (pthread_rwlock_t *restrict, const pthread_rwlockattr_t *restrict)' extern
| |-ParmVarDecl 0x55cc0dc40aa0 <col:33, col:62> col:62 __rwlock 'pthread_rwlock_t *restrict'
| |-ParmVarDecl 0x55cc0dc40bb0 <line:552:5, line:553:5> col:5 __attr 'const pthread_rwlockattr_t *restrict'
| |-NoThrowAttr 0x55cc0dc40da8 <col:29>
| `-NonNullAttr 0x55cc0dc40e00 <col:70, col:84> 1
|-FunctionDecl 0x55cc0dc40f78 <line:554:1, line:555:79> line:554:12 pthread_rwlock_destroy 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x55cc0dc40e48 <col:36, col:54> col:54 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x55cc0dc41020 <line:555:22>
| `-NonNullAttr 0x55cc0dc41078 <col:63, col:77> 1
|-FunctionDecl 0x55cc0dc41180 <line:556:1, line:557:68> line:556:12 pthread_rwlock_rdlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x55cc0dc410c8 <col:35, col:53> col:53 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x55cc0dc41228 <line:557:22>
| `-NonNullAttr 0x55cc0dc41280 <col:52, col:66> 1
|-FunctionDecl 0x55cc0dc41380 <line:558:1, line:559:65> line:558:12 pthread_rwlock_tryrdlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x55cc0dc412c8 <col:38, col:56> col:56 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x55cc0dc41428 <line:559:19>
| `-NonNullAttr 0x55cc0dc41480 <col:49, col:63> 1
|-FunctionDecl 0x55cc0dc416b8 <line:560:1, line:562:88> line:560:12 pthread_rwlock_timedrdlock 'int (pthread_rwlock_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x55cc0dc414c8 <col:40, col:69> col:69 __rwlock 'pthread_rwlock_t *restrict'
| |-ParmVarDecl 0x55cc0dc41558 <line:561:12, line:562:12> col:12 __abstime 'const struct timespec *restrict'
| |-NoThrowAttr 0x55cc0dc41768 <col:39>
| `-NonNullAttr 0x55cc0dc417c0 <col:69, col:86> 1 2
|-FunctionDecl 0x55cc0dc418c0 <line:563:1, line:564:68> line:563:12 pthread_rwlock_wrlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x55cc0dc41808 <col:35, col:53> col:53 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x55cc0dc41968 <line:564:22>
| `-NonNullAttr 0x55cc0dc419c0 <col:52, col:66> 1
|-FunctionDecl 0x55cc0dc41b28 <line:565:1, line:566:68> line:565:12 pthread_rwlock_trywrlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x55cc0dc41a70 <col:38, col:56> col:56 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x55cc0dc41bd0 <line:566:22>
| `-NonNullAttr 0x55cc0dc41c28 <col:52, col:66> 1
|-FunctionDecl 0x55cc0dc41de8 <line:567:1, line:569:88> line:567:12 pthread_rwlock_timedwrlock 'int (pthread_rwlock_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x55cc0dc41c78 <col:40, col:69> col:69 __rwlock 'pthread_rwlock_t *restrict'
| |-ParmVarDecl 0x55cc0dc41d08 <line:568:12, line:569:12> col:12 __abstime 'const struct timespec *restrict'
| |-NoThrowAttr 0x55cc0dc41e98 <col:39>
| `-NonNullAttr 0x55cc0dc41ef0 <col:69, col:86> 1 2
|-FunctionDecl 0x55cc0dc41ff0 <line:570:1, line:571:68> line:570:12 pthread_rwlock_unlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x55cc0dc41f38 <col:35, col:53> col:53 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x55cc0dc42098 <line:571:22>
| `-NonNullAttr 0x55cc0dc420f0 <col:52, col:66> 1
|-FunctionDecl 0x55cc0dc422d8 <line:572:1, line:573:79> line:572:12 pthread_rwlockattr_init 'int (pthread_rwlockattr_t *)' extern
| |-ParmVarDecl 0x55cc0dc421a0 <col:37, col:59> col:59 __attr 'pthread_rwlockattr_t *'
| |-NoThrowAttr 0x55cc0dc42380 <line:573:22>
| `-NonNullAttr 0x55cc0dc423d8 <col:63, col:77> 1
|-FunctionDecl 0x55cc0dc424e0 <line:574:1, line:575:79> line:574:12 pthread_rwlockattr_destroy 'int (pthread_rwlockattr_t *)' extern
| |-ParmVarDecl 0x55cc0dc42428 <col:40, col:62> col:62 __attr 'pthread_rwlockattr_t *'
| |-NoThrowAttr 0x55cc0dc42588 <line:575:22>
| `-NonNullAttr 0x55cc0dc425e0 <col:63, col:77> 1
|-FunctionDecl 0x55cc0dc42808 <line:576:1, line:579:82> line:576:12 pthread_rwlockattr_getpshared 'int (const pthread_rwlockattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x55cc0dc42628 <col:43, line:577:19> col:19 __attr 'const pthread_rwlockattr_t *restrict'
| |-ParmVarDecl 0x55cc0dc426a8 <line:578:8, col:24> col:24 __pshared 'int *restrict'
| |-NoThrowAttr 0x55cc0dc428b8 <line:579:22>
| `-NonNullAttr 0x55cc0dc42910 <col:63, col:80> 1 2
|-FunctionDecl 0x55cc0dc42b38 <line:580:1, line:582:79> line:580:12 pthread_rwlockattr_setpshared 'int (pthread_rwlockattr_t *, int)' extern
| |-ParmVarDecl 0x55cc0dc42958 <col:43, col:65> col:65 __attr 'pthread_rwlockattr_t *'
| |-ParmVarDecl 0x55cc0dc429d8 <line:581:8, col:12> col:12 __pshared 'int'
| |-NoThrowAttr 0x55cc0dc42be8 <line:582:22>
| `-NonNullAttr 0x55cc0dc42c40 <col:63, col:77> 1
|-FunctionDecl 0x55cc0dc42de8 <line:583:1, line:586:82> line:583:12 pthread_rwlockattr_getkind_np 'int (const pthread_rwlockattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x55cc0dc42c88 <col:43, line:584:19> col:19 __attr 'const pthread_rwlockattr_t *restrict'
| |-ParmVarDecl 0x55cc0dc42d08 <line:585:8, col:24> col:24 __pref 'int *restrict'
| |-NoThrowAttr 0x55cc0dc42e98 <line:586:22>
| `-NonNullAttr 0x55cc0dc42ef0 <col:63, col:80> 1 2
|-FunctionDecl 0x55cc0dc43078 <line:587:1, line:588:93> line:587:12 pthread_rwlockattr_setkind_np 'int (pthread_rwlockattr_t *, int)' extern
| |-ParmVarDecl 0x55cc0dc42f38 <col:43, col:65> col:65 __attr 'pthread_rwlockattr_t *'
| |-ParmVarDecl 0x55cc0dc42fb8 <line:588:8, col:12> col:12 __pref 'int'
| |-NoThrowAttr 0x55cc0dc43128 <col:36>
| `-NonNullAttr 0x55cc0dc43180 <col:77, col:91> 1
|-FunctionDecl 0x55cc0dc434b8 <line:589:1, line:591:79> line:589:12 pthread_cond_init 'int (pthread_cond_t *restrict, const pthread_condattr_t *restrict)' extern
| |-ParmVarDecl 0x55cc0dc43260 <col:31, col:58> col:58 __cond 'pthread_cond_t *restrict'
| |-ParmVarDecl 0x55cc0dc43370 <line:590:10, col:47> col:47 __cond_attr 'const pthread_condattr_t *restrict'
| |-NoThrowAttr 0x55cc0dc43568 <line:591:22>
| `-NonNullAttr 0x55cc0dc435c0 <col:63, col:77> 1
|-FunctionDecl 0x55cc0dc43738 <line:592:1, line:593:79> line:592:12 pthread_cond_destroy 'int (pthread_cond_t *)' extern
| |-ParmVarDecl 0x55cc0dc43608 <col:34, col:50> col:50 __cond 'pthread_cond_t *'
| |-NoThrowAttr 0x55cc0dc437e0 <line:593:22>
| `-NonNullAttr 0x55cc0dc43838 <col:63, col:77> 1
|-FunctionDecl 0x55cc0dc43940 <line:594:1, line:595:68> line:594:12 pthread_cond_signal 'int (pthread_cond_t *)' extern
| |-ParmVarDecl 0x55cc0dc43888 <col:33, col:49> col:49 __cond 'pthread_cond_t *'
| |-NoThrowAttr 0x55cc0dc439e8 <line:595:22>
| `-NonNullAttr 0x55cc0dc43a40 <col:52, col:66> 1
|-FunctionDecl 0x55cc0dc43b58 <line:596:1, line:597:68> line:596:12 pthread_cond_broadcast 'int (pthread_cond_t *)' extern
| |-ParmVarDecl 0x55cc0dc43aa0 <col:36, col:52> col:52 __cond 'pthread_cond_t *'
| |-NoThrowAttr 0x55cc0dc43c00 <line:597:22>
| `-NonNullAttr 0x55cc0dc43c58 <col:52, col:66> 1
|-FunctionDecl 0x55cc0dc43e88 <line:598:1, line:600:41> line:598:12 pthread_cond_wait 'int (pthread_cond_t *restrict, pthread_mutex_t *restrict)' extern
| |-ParmVarDecl 0x55cc0dc43ca8 <col:31, col:58> col:58 __cond 'pthread_cond_t *restrict'
| |-ParmVarDecl 0x55cc0dc43d20 <line:599:10, col:38> col:38 __mutex 'pthread_mutex_t *restrict'
| `-NonNullAttr 0x55cc0dc43f38 <line:600:22, col:39> 1 2
|-FunctionDecl 0x55cc0dc44268 <line:601:1, line:604:44> line:601:12 pthread_cond_timedwait 'int (pthread_cond_t *restrict, pthread_mutex_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x55cc0dc43fb8 <col:36, col:63> col:63 __cond 'pthread_cond_t *restrict'
| |-ParmVarDecl 0x55cc0dc44030 <line:602:8, col:36> col:36 __mutex 'pthread_mutex_t *restrict'
| |-ParmVarDecl 0x55cc0dc440c0 <line:603:8, col:42> col:42 __abstime 'const struct timespec *restrict'
| `-NonNullAttr 0x55cc0dc44320 <line:604:22, col:42> 1 2 3
|-FunctionDecl 0x55cc0dc44538 <line:605:1, line:606:79> line:605:12 pthread_condattr_init 'int (pthread_condattr_t *)' extern
| |-ParmVarDecl 0x55cc0dc44400 <col:35, col:55> col:55 __attr 'pthread_condattr_t *'
| |-NoThrowAttr 0x55cc0dc445e0 <line:606:22>
| `-NonNullAttr 0x55cc0dc44638 <col:63, col:77> 1
|-FunctionDecl 0x55cc0dc44740 <line:607:1, line:608:79> line:607:12 pthread_condattr_destroy 'int (pthread_condattr_t *)' extern
| |-ParmVarDecl 0x55cc0dc44688 <col:38, col:58> col:58 __attr 'pthread_condattr_t *'
| |-NoThrowAttr 0x55cc0dc447e8 <line:608:22>
| `-NonNullAttr 0x55cc0dc44840 <col:63, col:77> 1
|-FunctionDecl 0x55cc0dc44aa0 <line:609:1, line:612:82> line:609:12 pthread_condattr_getpshared 'int (const pthread_condattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x55cc0dc44888 <col:41, line:610:17> col:17 __attr 'const pthread_condattr_t *restrict'
| |-ParmVarDecl 0x55cc0dc44908 <line:611:6, col:22> col:22 __pshared 'int *restrict'
| |-NoThrowAttr 0x55cc0dc44b50 <line:612:22>
| `-NonNullAttr 0x55cc0dc44ba8 <col:63, col:80> 1 2
|-FunctionDecl 0x55cc0dc44db8 <line:613:1, line:614:94> line:613:12 pthread_condattr_setpshared 'int (pthread_condattr_t *, int)' extern
| |-ParmVarDecl 0x55cc0dc44bf8 <col:41, col:61> col:61 __attr 'pthread_condattr_t *'
| |-ParmVarDecl 0x55cc0dc44c78 <line:614:6, col:10> col:10 __pshared 'int'
| |-NoThrowAttr 0x55cc0dc44e68 <col:37>
| `-NonNullAttr 0x55cc0dc44ec0 <col:78, col:92> 1
|-FunctionDecl 0x55cc0dc450d8 <line:615:1, line:618:82> line:615:12 pthread_condattr_getclock 'int (const pthread_condattr_t *restrict, __clockid_t *restrict)' extern
| |-ParmVarDecl 0x55cc0dc44f08 <col:39, line:616:22> col:22 __attr 'const pthread_condattr_t *restrict'
| |-ParmVarDecl 0x55cc0dc44fb0 <line:617:11, col:35> col:35 __clock_id '__clockid_t *restrict'
| |-NoThrowAttr 0x55cc0dc45188 <line:618:22>
| `-NonNullAttr 0x55cc0dc451e0 <col:63, col:80> 1 2
|-FunctionDecl 0x55cc0dc453a8 <line:619:1, line:621:79> line:619:12 pthread_condattr_setclock 'int (pthread_condattr_t *, __clockid_t)' extern
| |-ParmVarDecl 0x55cc0dc45228 <col:39, col:59> col:59 __attr 'pthread_condattr_t *'
| |-ParmVarDecl 0x55cc0dc452a0 <line:620:11, col:23> col:23 __clock_id '__clockid_t':'int'
| |-NoThrowAttr 0x55cc0dc45458 <line:621:22>
| `-NonNullAttr 0x55cc0dc454b0 <col:63, col:77> 1
|-FunctionDecl 0x55cc0dc45758 <line:622:1, line:623:79> line:622:12 pthread_spin_init 'int (pthread_spinlock_t *, int)' extern
| |-ParmVarDecl 0x55cc0dc45590 <col:31, col:51> col:51 __lock 'pthread_spinlock_t *'
| |-ParmVarDecl 0x55cc0dc45610 <col:59, col:63> col:63 __pshared 'int'
| |-NoThrowAttr 0x55cc0dc45808 <line:623:22>
| `-NonNullAttr 0x55cc0dc45860 <col:63, col:77> 1
|-FunctionDecl 0x55cc0dc459d8 <line:624:1, line:625:79> line:624:12 pthread_spin_destroy 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x55cc0dc458a8 <col:34, col:54> col:54 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x55cc0dc45ab0 <line:625:22>
| `-NonNullAttr 0x55cc0dc45b08 <col:63, col:77> 1
|-FunctionDecl 0x55cc0dc45c10 <line:626:1, line:627:68> line:626:12 pthread_spin_lock 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x55cc0dc45b58 <col:31, col:51> col:51 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x55cc0dc45cb8 <line:627:22>
| `-NonNullAttr 0x55cc0dc45d10 <col:52, col:66> 1
|-FunctionDecl 0x55cc0dc45e10 <line:628:1, line:629:68> line:628:12 pthread_spin_trylock 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x55cc0dc45d58 <col:34, col:54> col:54 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x55cc0dc45eb8 <line:629:22>
| `-NonNullAttr 0x55cc0dc45f10 <col:52, col:66> 1
|-FunctionDecl 0x55cc0dc46010 <line:630:1, line:631:68> line:630:12 pthread_spin_unlock 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x55cc0dc45f58 <col:33, col:53> col:53 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x55cc0dc460b8 <line:631:22>
| `-NonNullAttr 0x55cc0dc46110 <col:52, col:66> 1
|-FunctionDecl 0x55cc0dc464e8 <line:632:1, line:635:79> line:632:12 pthread_barrier_init 'int (pthread_barrier_t *restrict, const pthread_barrierattr_t *restrict, unsigned int)' extern
| |-ParmVarDecl 0x55cc0dc461f0 <col:34, col:64> col:64 __barrier 'pthread_barrier_t *restrict'
| |-ParmVarDecl 0x55cc0dc46300 <line:633:6, line:634:6> col:6 __attr 'const pthread_barrierattr_t *restrict'
| |-ParmVarDecl 0x55cc0dc46380 <col:14, col:27> col:27 __count 'unsigned int'
| |-NoThrowAttr 0x55cc0dc465a0 <line:635:22>
| `-NonNullAttr 0x55cc0dc465f8 <col:63, col:77> 1
|-FunctionDecl 0x55cc0dc46778 <line:636:1, line:637:79> line:636:12 pthread_barrier_destroy 'int (pthread_barrier_t *)' extern
| |-ParmVarDecl 0x55cc0dc46648 <col:37, col:56> col:56 __barrier 'pthread_barrier_t *'
| |-NoThrowAttr 0x55cc0dc46820 <line:637:22>
| `-NonNullAttr 0x55cc0dc46878 <col:63, col:77> 1
|-FunctionDecl 0x55cc0dc46980 <line:638:1, line:639:68> line:638:12 pthread_barrier_wait 'int (pthread_barrier_t *)' extern
| |-ParmVarDecl 0x55cc0dc468c8 <col:34, col:53> col:53 __barrier 'pthread_barrier_t *'
| |-NoThrowAttr 0x55cc0dc46a28 <line:639:22>
| `-NonNullAttr 0x55cc0dc46a80 <col:52, col:66> 1
|-FunctionDecl 0x55cc0dc47c88 <line:640:1, line:641:79> line:640:12 pthread_barrierattr_init 'int (pthread_barrierattr_t *)' extern
| |-ParmVarDecl 0x55cc0dc47b50 <col:38, col:61> col:61 __attr 'pthread_barrierattr_t *'
| |-NoThrowAttr 0x55cc0dc47d30 <line:641:22>
| `-NonNullAttr 0x55cc0dc47d88 <col:63, col:77> 1
|-FunctionDecl 0x55cc0dc47e90 <line:642:1, line:643:79> line:642:12 pthread_barrierattr_destroy 'int (pthread_barrierattr_t *)' extern
| |-ParmVarDecl 0x55cc0dc47dd8 <col:41, col:64> col:64 __attr 'pthread_barrierattr_t *'
| |-NoThrowAttr 0x55cc0dc47f38 <line:643:22>
| `-NonNullAttr 0x55cc0dc47f90 <col:63, col:77> 1
|-FunctionDecl 0x55cc0dc481b8 <line:644:1, line:647:82> line:644:12 pthread_barrierattr_getpshared 'int (const pthread_barrierattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x55cc0dc47fd8 <col:44, line:645:20> col:20 __attr 'const pthread_barrierattr_t *restrict'
| |-ParmVarDecl 0x55cc0dc48058 <line:646:9, col:25> col:25 __pshared 'int *restrict'
| |-NoThrowAttr 0x55cc0dc48268 <line:647:22>
| `-NonNullAttr 0x55cc0dc482c0 <col:63, col:80> 1 2
|-FunctionDecl 0x55cc0dc484c8 <line:648:1, line:650:79> line:648:12 pthread_barrierattr_setpshared 'int (pthread_barrierattr_t *, int)' extern
| |-ParmVarDecl 0x55cc0dc48308 <col:44, col:67> col:67 __attr 'pthread_barrierattr_t *'
| |-ParmVarDecl 0x55cc0dc48388 <line:649:9, col:13> col:13 __pshared 'int'
| |-NoThrowAttr 0x55cc0dc48578 <line:650:22>
| `-NonNullAttr 0x55cc0dc485d0 <col:63, col:77> 1
|-FunctionDecl 0x55cc0dc48918 <line:651:1, line:653:79> line:651:12 pthread_key_create 'int (pthread_key_t *, void (*)(void *))' extern
| |-ParmVarDecl 0x55cc0dc486b0 <col:32, col:47> col:47 __key 'pthread_key_t *'
| |-ParmVarDecl 0x55cc0dc487d0 <line:652:11, col:43> col:18 __destr_function 'void (*)(void *)'
| |-NoThrowAttr 0x55cc0dc489c8 <line:653:22>
| `-NonNullAttr 0x55cc0dc48a20 <col:63, col:77> 1
|-FunctionDecl 0x55cc0dc48b88 <line:654:1, col:92> col:12 pthread_key_delete 'int (pthread_key_t)' extern
| |-ParmVarDecl 0x55cc0dc48a68 <col:32, col:46> col:46 __key 'pthread_key_t':'unsigned int'
| `-NoThrowAttr 0x55cc0dc48c30 <col:69>
|-FunctionDecl 0x55cc0dc48da8 <line:655:1, col:95> col:14 pthread_getspecific 'void *(pthread_key_t)' extern
| |-ParmVarDecl 0x55cc0dc48c98 <col:35, col:49> col:49 __key 'pthread_key_t':'unsigned int'
| `-NoThrowAttr 0x55cc0dc48e50 <col:72>
|-FunctionDecl 0x55cc0dc49088 <line:656:1, line:657:67> line:656:12 pthread_setspecific 'int (pthread_key_t, const void *)' extern
| |-ParmVarDecl 0x55cc0dc48eb8 <col:33, col:47> col:47 __key 'pthread_key_t':'unsigned int'
| |-ParmVarDecl 0x55cc0dc48f68 <line:657:5, col:17> col:17 __pointer 'const void *'
| `-NoThrowAttr 0x55cc0dc49138 <col:44>
|-FunctionDecl 0x55cc0dc49358 <line:658:1, line:660:79> line:658:12 pthread_getcpuclockid 'int (pthread_t, __clockid_t *)' extern
| |-ParmVarDecl 0x55cc0dc491a0 <col:35, col:45> col:45 __thread_id 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x55cc0dc49218 <line:659:7, col:20> col:20 __clock_id '__clockid_t *'
| |-NoThrowAttr 0x55cc0dc49408 <line:660:22>
| `-NonNullAttr 0x55cc0dc49460 <col:63, col:77> 2
|-FunctionDecl 0x55cc0dc498a8 <line:661:1, line:663:70> line:661:12 pthread_atfork 'int (void (*)(void), void (*)(void), void (*)(void))' extern
| |-ParmVarDecl 0x55cc0dc49540 <col:28, col:51> col:35 __prepare 'void (*)(void)'
| |-ParmVarDecl 0x55cc0dc49650 <line:662:7, col:29> col:14 __parent 'void (*)(void)'
| |-ParmVarDecl 0x55cc0dc49760 <line:663:7, col:28> col:14 __child 'void (*)(void)'
| `-NoThrowAttr 0x55cc0dc49960 <col:47>
|-FunctionDecl 0x55cc0dc49af0 <line:665:1, col:20> col:8 used P0 'void *(void *)'
| `-ParmVarDecl 0x55cc0dc499d0 <col:11, col:17> col:17 arg 'void *'
|-FunctionDecl 0x55cc0dc49c48 <line:666:1, col:20> col:8 used P1 'void *(void *)'
| `-ParmVarDecl 0x55cc0dc49bb0 <col:11, col:17> col:17 arg 'void *'
|-FunctionDecl 0x55cc0dc49da0 <line:667:1, col:20> col:8 used P2 'void *(void *)'
| `-ParmVarDecl 0x55cc0dc49d08 <col:11, col:17> col:17 arg 'void *'
|-FunctionDecl 0x55cc0dc49e68 <line:668:1, col:12> col:6 fence 'void ()'
|-FunctionDecl 0x55cc0dc49f28 <line:669:1, col:12> col:6 isync 'void ()'
|-FunctionDecl 0x55cc0dc49fe8 <line:670:1, col:14> col:6 lwfence 'void ()'
|-VarDecl 0x55cc0dc4a0a0 <line:671:1, col:5> col:5 used __unbuffered_cnt 'int'
|-VarDecl 0x55cc0dc4a120 prev 0x55cc0dc4a0a0 <line:672:1, col:24> col:5 used __unbuffered_cnt 'int' cinit
| `-IntegerLiteral 0x55cc0dc4a188 <col:24> 'int' 0
|-VarDecl 0x55cc0dc4a1c0 <line:673:1, col:5> col:5 used __unbuffered_p0_EAX 'int'
|-VarDecl 0x55cc0dc4a240 prev 0x55cc0dc4a1c0 <line:674:1, col:27> col:5 used __unbuffered_p0_EAX 'int' cinit
| `-IntegerLiteral 0x55cc0dc4a2a8 <col:27> 'int' 0
|-VarDecl 0x55cc0dc4a2e0 <line:675:1, col:5> col:5 used __unbuffered_p0_EBX 'int'
|-VarDecl 0x55cc0dc4a360 prev 0x55cc0dc4a2e0 <line:676:1, col:27> col:5 used __unbuffered_p0_EBX 'int' cinit
| `-IntegerLiteral 0x55cc0dc4a3c8 <col:27> 'int' 0
|-VarDecl 0x55cc0dc4a400 <line:677:1, col:5> col:5 used __unbuffered_p1_EAX 'int'
|-VarDecl 0x55cc0dc4a480 prev 0x55cc0dc4a400 <line:678:1, col:27> col:5 used __unbuffered_p1_EAX 'int' cinit
| `-IntegerLiteral 0x55cc0dc4a4e8 <col:27> 'int' 0
|-VarDecl 0x55cc0dc4a520 <line:679:1, col:5> col:5 used __unbuffered_p2_EAX 'int'
|-VarDecl 0x55cc0dc4a5a0 prev 0x55cc0dc4a520 <line:680:1, col:27> col:5 used __unbuffered_p2_EAX 'int' cinit
| `-IntegerLiteral 0x55cc0dc4a608 <col:27> 'int' 0
|-VarDecl 0x55cc0dc4a640 <line:681:1, col:5> col:5 used __unbuffered_p2_EBX 'int'
|-VarDecl 0x55cc0dc4a6c0 prev 0x55cc0dc4a640 <line:682:1, col:27> col:5 used __unbuffered_p2_EBX 'int' cinit
| `-IntegerLiteral 0x55cc0dc4a728 <col:27> 'int' 0
|-VarDecl 0x55cc0dc4a760 <line:683:1, col:5> col:5 used a 'int'
|-VarDecl 0x55cc0dc4a7e0 prev 0x55cc0dc4a760 <line:684:1, col:9> col:5 used a 'int' cinit
| `-IntegerLiteral 0x55cc0dc4a848 <col:9> 'int' 0
|-VarDecl 0x55cc0dc4a878 <line:685:1, col:7> col:7 used main$tmp_guard0 '_Bool'
|-VarDecl 0x55cc0dc4a8f0 <line:686:1, col:7> col:7 used main$tmp_guard1 '_Bool'
|-VarDecl 0x55cc0dc4a970 <line:687:1, col:5> col:5 used x 'int'
|-VarDecl 0x55cc0dc4a9f0 prev 0x55cc0dc4a970 <line:688:1, col:9> col:5 used x 'int' cinit
| `-IntegerLiteral 0x55cc0dc4aa58 <col:9> 'int' 0
|-VarDecl 0x55cc0dc4ab00 <line:689:1, col:5> col:5 used y 'int'
|-VarDecl 0x55cc0dc4ab80 prev 0x55cc0dc4ab00 <line:690:1, col:9> col:5 used y 'int' cinit
| `-IntegerLiteral 0x55cc0dc4abe8 <col:9> 'int' 0
|-VarDecl 0x55cc0dc4ac20 <line:691:1, col:5> col:5 used z 'int'
|-VarDecl 0x55cc0dc4aca0 prev 0x55cc0dc4ac20 <line:692:1, col:9> col:5 used z 'int' cinit
| `-IntegerLiteral 0x55cc0dc4ad08 <col:9> 'int' 0
|-VarDecl 0x55cc0dc4ad38 <line:693:1, col:7> col:7 used z$flush_delayed '_Bool'
|-VarDecl 0x55cc0dc4adb8 <line:694:1, col:5> col:5 used z$mem_tmp 'int'
|-VarDecl 0x55cc0dc4ae30 <line:695:1, col:7> col:7 used z$r_buff0_thd0 '_Bool'
|-VarDecl 0x55cc0dc4aea8 <line:696:1, col:7> col:7 used z$r_buff0_thd1 '_Bool'
|-VarDecl 0x55cc0dc4af20 <line:697:1, col:7> col:7 used z$r_buff0_thd2 '_Bool'
|-VarDecl 0x55cc0dc4af98 <line:698:1, col:7> col:7 used z$r_buff0_thd3 '_Bool'
|-VarDecl 0x55cc0dc4b010 <line:699:1, col:7> col:7 used z$r_buff1_thd0 '_Bool'
|-VarDecl 0x55cc0dc4b088 <line:700:1, col:7> col:7 used z$r_buff1_thd1 '_Bool'
|-VarDecl 0x55cc0dc4b100 <line:701:1, col:7> col:7 used z$r_buff1_thd2 '_Bool'
|-VarDecl 0x55cc0dc4b178 <line:702:1, col:7> col:7 used z$r_buff1_thd3 '_Bool'
|-VarDecl 0x55cc0dc4b1f0 <line:703:1, col:7> col:7 z$read_delayed '_Bool'
|-VarDecl 0x55cc0dc4b270 <line:704:1, col:6> col:6 z$read_delayed_var 'int *'
|-VarDecl 0x55cc0dc4b2f0 <line:705:1, col:5> col:5 used z$w_buff0 'int'
|-VarDecl 0x55cc0dc4b368 <line:706:1, col:7> col:7 used z$w_buff0_used '_Bool'
|-VarDecl 0x55cc0dc4b3e8 <line:707:1, col:5> col:5 used z$w_buff1 'int'
|-VarDecl 0x55cc0dc4b460 <line:708:1, col:7> col:7 used z$w_buff1_used '_Bool'
|-VarDecl 0x55cc0dc4b4d8 <line:709:1, col:7> col:7 used weak$$choice0 '_Bool'
|-VarDecl 0x55cc0dc4b550 <line:710:1, col:7> col:7 used weak$$choice2 '_Bool'
|-FunctionDecl 0x55cc0dc4b668 prev 0x55cc0dc49af0 <line:711:1, line:731:1> line:711:8 used P0 'void *(void *)'
| |-ParmVarDecl 0x55cc0dc4b5d0 <col:11, col:17> col:17 arg 'void *'
| `-CompoundStmt 0x55cc0dc4be78 <line:712:1, line:731:1>
|   |-CallExpr 0x55cc0dc4b778 <line:713:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x55cc0dc4b760 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55cc0dc4b710 <col:3> 'void ()' Function 0x55cc0dbf0e40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x55cc0dc4b7d8 <line:714:3, col:7> 'int' '='
|   | |-DeclRefExpr 0x55cc0dc4b798 <col:3> 'int' lvalue Var 0x55cc0dc4a7e0 'a' 'int'
|   | `-IntegerLiteral 0x55cc0dc4b7b8 <col:7> 'int' 1
|   |-CallExpr 0x55cc0dc4b830 <line:715:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x55cc0dc4b818 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55cc0dc4b7f8 <col:3> 'void ()' Function 0x55cc0dbf0f00 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x55cc0dc4b888 <line:716:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x55cc0dc4b870 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55cc0dc4b850 <col:3> 'void ()' Function 0x55cc0dbf0e40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x55cc0dc4b8e8 <line:717:3, col:7> 'int' '='
|   | |-DeclRefExpr 0x55cc0dc4b8a8 <col:3> 'int' lvalue Var 0x55cc0dc4a9f0 'x' 'int'
|   | `-IntegerLiteral 0x55cc0dc4b8c8 <col:7> 'int' 1
|   |-CallExpr 0x55cc0dc4b940 <line:718:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x55cc0dc4b928 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55cc0dc4b908 <col:3> 'void ()' Function 0x55cc0dbf0f00 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x55cc0dc4b998 <line:719:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x55cc0dc4b980 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55cc0dc4b960 <col:3> 'void ()' Function 0x55cc0dbf0e40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x55cc0dc4ba10 <line:720:3, col:25> 'int' '='
|   | |-DeclRefExpr 0x55cc0dc4b9b8 <col:3> 'int' lvalue Var 0x55cc0dc4a240 '__unbuffered_p0_EAX' 'int'
|   | `-ImplicitCastExpr 0x55cc0dc4b9f8 <col:25> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x55cc0dc4b9d8 <col:25> 'int' lvalue Var 0x55cc0dc4a9f0 'x' 'int'
|   |-CallExpr 0x55cc0dc4ba68 <line:721:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x55cc0dc4ba50 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55cc0dc4ba30 <col:3> 'void ()' Function 0x55cc0dbf0f00 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x55cc0dc4bac0 <line:722:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x55cc0dc4baa8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55cc0dc4ba88 <col:3> 'void ()' Function 0x55cc0dbf0e40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x55cc0dc4bb48 <line:723:3, col:25> 'int' '='
|   | |-DeclRefExpr 0x55cc0dc4bae0 <col:3> 'int' lvalue Var 0x55cc0dc4a360 '__unbuffered_p0_EBX' 'int'
|   | `-ImplicitCastExpr 0x55cc0dc4bb30 <col:25> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x55cc0dc4bb10 <col:25> 'int' lvalue Var 0x55cc0dc4ab80 'y' 'int'
|   |-CallExpr 0x55cc0dc4bba0 <line:724:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x55cc0dc4bb88 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55cc0dc4bb68 <col:3> 'void ()' Function 0x55cc0dbf0f00 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x55cc0dc4bbf8 <line:725:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x55cc0dc4bbe0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55cc0dc4bbc0 <col:3> 'void ()' Function 0x55cc0dbf0e40 '__VERIFIER_atomic_begin' 'void ()'
|   |-CallExpr 0x55cc0dc4bc50 <line:726:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x55cc0dc4bc38 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55cc0dc4bc18 <col:3> 'void ()' Function 0x55cc0dbf0f00 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x55cc0dc4bca8 <line:727:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x55cc0dc4bc90 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55cc0dc4bc70 <col:3> 'void ()' Function 0x55cc0dbf0e40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x55cc0dc4bd60 <line:728:3, col:41> 'int' '='
|   | |-DeclRefExpr 0x55cc0dc4bcc8 <col:3> 'int' lvalue Var 0x55cc0dc4a120 '__unbuffered_cnt' 'int'
|   | `-BinaryOperator 0x55cc0dc4bd40 <col:22, col:41> 'int' '+'
|   |   |-ImplicitCastExpr 0x55cc0dc4bd28 <col:22> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x55cc0dc4bce8 <col:22> 'int' lvalue Var 0x55cc0dc4a120 '__unbuffered_cnt' 'int'
|   |   `-IntegerLiteral 0x55cc0dc4bd08 <col:41> 'int' 1
|   |-CallExpr 0x55cc0dc4bdb8 <line:729:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x55cc0dc4bda0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55cc0dc4bd80 <col:3> 'void ()' Function 0x55cc0dbf0f00 '__VERIFIER_atomic_end' 'void ()'
|   `-ReturnStmt 0x55cc0dc4be68 <line:730:3, col:36>
|     `-CallExpr 0x55cc0dc4be48 <col:10, col:36> 'void *'
|       `-ImplicitCastExpr 0x55cc0dc4be30 <col:10> 'void *(*)(void)' <FunctionToPointerDecay>
|         `-DeclRefExpr 0x55cc0dc4bdd8 <col:10> 'void *(void)' Function 0x55cc0dbf0958 '__VERIFIER_nondet_pointer' 'void *(void)'
|-FunctionDecl 0x55cc0dc4bfc8 prev 0x55cc0dc49c48 <line:732:1, line:759:1> line:732:8 used P1 'void *(void *)'
| |-ParmVarDecl 0x55cc0dc4bf30 <col:11, col:17> col:17 arg 'void *'
| `-CompoundStmt 0x55cc0dc4eeb0 <line:733:1, line:759:1>
|   |-CallExpr 0x55cc0dc4c0a8 <line:734:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x55cc0dc4c090 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55cc0dc4c070 <col:3> 'void ()' Function 0x55cc0dbf0e40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x55cc0dc4c108 <line:735:3, col:7> 'int' '='
|   | |-DeclRefExpr 0x55cc0dc4c0c8 <col:3> 'int' lvalue Var 0x55cc0dc4ab80 'y' 'int'
|   | `-IntegerLiteral 0x55cc0dc4c0e8 <col:7> 'int' 1
|   |-CallExpr 0x55cc0dc4c160 <line:736:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x55cc0dc4c148 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55cc0dc4c128 <col:3> 'void ()' Function 0x55cc0dbf0f00 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x55cc0dc4c1b8 <line:737:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x55cc0dc4c1a0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55cc0dc4c180 <col:3> 'void ()' Function 0x55cc0dbf0e40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x55cc0dc4c268 <line:738:3, col:45> '_Bool' '='
|   | |-DeclRefExpr 0x55cc0dc4c1d8 <col:3> '_Bool' lvalue Var 0x55cc0dc4b4d8 'weak$$choice0' '_Bool'
|   | `-ImplicitCastExpr 0x55cc0dc4c250 <col:19, col:45> '_Bool' <PointerToBoolean>
|   |   `-CallExpr 0x55cc0dc4c230 <col:19, col:45> 'void *'
|   |     `-ImplicitCastExpr 0x55cc0dc4c218 <col:19> 'void *(*)(void)' <FunctionToPointerDecay>
|   |       `-DeclRefExpr 0x55cc0dc4c1f8 <col:19> 'void *(void)' Function 0x55cc0dbf0958 '__VERIFIER_nondet_pointer' 'void *(void)'
|   |-BinaryOperator 0x55cc0dc4c318 <line:739:3, col:45> '_Bool' '='
|   | |-DeclRefExpr 0x55cc0dc4c288 <col:3> '_Bool' lvalue Var 0x55cc0dc4b550 'weak$$choice2' '_Bool'
|   | `-ImplicitCastExpr 0x55cc0dc4c300 <col:19, col:45> '_Bool' <PointerToBoolean>
|   |   `-CallExpr 0x55cc0dc4c2e0 <col:19, col:45> 'void *'
|   |     `-ImplicitCastExpr 0x55cc0dc4c2c8 <col:19> 'void *(*)(void)' <FunctionToPointerDecay>
|   |       `-DeclRefExpr 0x55cc0dc4c2a8 <col:19> 'void *(void)' Function 0x55cc0dbf0958 '__VERIFIER_nondet_pointer' 'void *(void)'
|   |-BinaryOperator 0x55cc0dc4c390 <line:740:3, col:21> '_Bool' '='
|   | |-DeclRefExpr 0x55cc0dc4c338 <col:3> '_Bool' lvalue Var 0x55cc0dc4ad38 'z$flush_delayed' '_Bool'
|   | `-ImplicitCastExpr 0x55cc0dc4c378 <col:21> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x55cc0dc4c358 <col:21> '_Bool' lvalue Var 0x55cc0dc4b550 'weak$$choice2' '_Bool'
|   |-BinaryOperator 0x55cc0dc4c408 <line:741:3, col:15> 'int' '='
|   | |-DeclRefExpr 0x55cc0dc4c3b0 <col:3> 'int' lvalue Var 0x55cc0dc4adb8 'z$mem_tmp' 'int'
|   | `-ImplicitCastExpr 0x55cc0dc4c3f0 <col:15> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x55cc0dc4c3d0 <col:15> 'int' lvalue Var 0x55cc0dc4aca0 'z' 'int'
|   |-BinaryOperator 0x55cc0dc4c840 <line:742:3, col:162> 'int' '='
|   | |-DeclRefExpr 0x55cc0dc4c428 <col:3> 'int' lvalue Var 0x55cc0dc4aca0 'z' 'int'
|   | `-ConditionalOperator 0x55cc0dc4c810 <col:7, col:162> 'int'
|   |   |-BinaryOperator 0x55cc0dc4c638 <col:7, col:84> 'int' '||'
|   |   | |-BinaryOperator 0x55cc0dc4c558 <col:7, col:46> 'int' '||'
|   |   | | |-UnaryOperator 0x55cc0dc4c480 <col:7, col:8> 'int' prefix '!' cannot overflow
|   |   | | | `-ImplicitCastExpr 0x55cc0dc4c468 <col:8> '_Bool' <LValueToRValue>
|   |   | | |   `-DeclRefExpr 0x55cc0dc4c448 <col:8> '_Bool' lvalue Var 0x55cc0dc4b368 'z$w_buff0_used' '_Bool'
|   |   | | `-BinaryOperator 0x55cc0dc4c538 <col:26, col:46> 'int' '&&'
|   |   | |   |-UnaryOperator 0x55cc0dc4c4d0 <col:26, col:27> 'int' prefix '!' cannot overflow
|   |   | |   | `-ImplicitCastExpr 0x55cc0dc4c4b8 <col:27> '_Bool' <LValueToRValue>
|   |   | |   |   `-DeclRefExpr 0x55cc0dc4c498 <col:27> '_Bool' lvalue Var 0x55cc0dc4af20 'z$r_buff0_thd2' '_Bool'
|   |   | |   `-UnaryOperator 0x55cc0dc4c520 <col:45, col:46> 'int' prefix '!' cannot overflow
|   |   | |     `-ImplicitCastExpr 0x55cc0dc4c508 <col:46> '_Bool' <LValueToRValue>
|   |   | |       `-DeclRefExpr 0x55cc0dc4c4e8 <col:46> '_Bool' lvalue Var 0x55cc0dc4b460 'z$w_buff1_used' '_Bool'
|   |   | `-BinaryOperator 0x55cc0dc4c618 <col:64, col:84> 'int' '&&'
|   |   |   |-UnaryOperator 0x55cc0dc4c5b0 <col:64, col:65> 'int' prefix '!' cannot overflow
|   |   |   | `-ImplicitCastExpr 0x55cc0dc4c598 <col:65> '_Bool' <LValueToRValue>
|   |   |   |   `-DeclRefExpr 0x55cc0dc4c578 <col:65> '_Bool' lvalue Var 0x55cc0dc4af20 'z$r_buff0_thd2' '_Bool'
|   |   |   `-UnaryOperator 0x55cc0dc4c600 <col:83, col:84> 'int' prefix '!' cannot overflow
|   |   |     `-ImplicitCastExpr 0x55cc0dc4c5e8 <col:84> '_Bool' <LValueToRValue>
|   |   |       `-DeclRefExpr 0x55cc0dc4c5c8 <col:84> '_Bool' lvalue Var 0x55cc0dc4b100 'z$r_buff1_thd2' '_Bool'
|   |   |-ImplicitCastExpr 0x55cc0dc4c7f8 <col:101> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x55cc0dc4c658 <col:101> 'int' lvalue Var 0x55cc0dc4aca0 'z' 'int'
|   |   `-ParenExpr 0x55cc0dc4c7d8 <col:105, col:162> 'int'
|   |     `-ConditionalOperator 0x55cc0dc4c7a8 <col:106, col:153> 'int'
|   |       |-BinaryOperator 0x55cc0dc4c718 <col:106, col:124> 'int' '&&'
|   |       | |-ImplicitCastExpr 0x55cc0dc4c6d0 <col:106> 'int' <IntegralCast>
|   |       | | `-ImplicitCastExpr 0x55cc0dc4c6b8 <col:106> '_Bool' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x55cc0dc4c678 <col:106> '_Bool' lvalue Var 0x55cc0dc4b368 'z$w_buff0_used' '_Bool'
|   |       | `-ImplicitCastExpr 0x55cc0dc4c700 <col:124> 'int' <IntegralCast>
|   |       |   `-ImplicitCastExpr 0x55cc0dc4c6e8 <col:124> '_Bool' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x55cc0dc4c698 <col:124> '_Bool' lvalue Var 0x55cc0dc4af20 'z$r_buff0_thd2' '_Bool'
|   |       |-ImplicitCastExpr 0x55cc0dc4c778 <col:141> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x55cc0dc4c738 <col:141> 'int' lvalue Var 0x55cc0dc4b2f0 'z$w_buff0' 'int'
|   |       `-ImplicitCastExpr 0x55cc0dc4c790 <col:153> 'int' <LValueToRValue>
|   |         `-DeclRefExpr 0x55cc0dc4c758 <col:153> 'int' lvalue Var 0x55cc0dc4b3e8 'z$w_buff1' 'int'
|   |-BinaryOperator 0x55cc0dc4cd60 <line:743:3, col:208> 'int' '='
|   | |-DeclRefExpr 0x55cc0dc4c860 <col:3> 'int' lvalue Var 0x55cc0dc4b2f0 'z$w_buff0' 'int'
|   | `-ConditionalOperator 0x55cc0dc4cd30 <col:15, col:208> 'int'
|   |   |-ImplicitCastExpr 0x55cc0dc4cd00 <col:15> 'int' <IntegralCast>
|   |   | `-ImplicitCastExpr 0x55cc0dc4cce8 <col:15> '_Bool' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x55cc0dc4c880 <col:15> '_Bool' lvalue Var 0x55cc0dc4b550 'weak$$choice2' '_Bool'
|   |   |-ImplicitCastExpr 0x55cc0dc4cd18 <col:31> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x55cc0dc4c8a0 <col:31> 'int' lvalue Var 0x55cc0dc4b2f0 'z$w_buff0' 'int'
|   |   `-ParenExpr 0x55cc0dc4ccc8 <col:43, col:208> 'int'
|   |     `-ConditionalOperator 0x55cc0dc4cc98 <col:44, col:207> 'int'
|   |       |-BinaryOperator 0x55cc0dc4cab0 <col:44, col:121> 'int' '||'
|   |       | |-BinaryOperator 0x55cc0dc4c9d0 <col:44, col:83> 'int' '||'
|   |       | | |-UnaryOperator 0x55cc0dc4c8f8 <col:44, col:45> 'int' prefix '!' cannot overflow
|   |       | | | `-ImplicitCastExpr 0x55cc0dc4c8e0 <col:45> '_Bool' <LValueToRValue>
|   |       | | |   `-DeclRefExpr 0x55cc0dc4c8c0 <col:45> '_Bool' lvalue Var 0x55cc0dc4b368 'z$w_buff0_used' '_Bool'
|   |       | | `-BinaryOperator 0x55cc0dc4c9b0 <col:63, col:83> 'int' '&&'
|   |       | |   |-UnaryOperator 0x55cc0dc4c948 <col:63, col:64> 'int' prefix '!' cannot overflow
|   |       | |   | `-ImplicitCastExpr 0x55cc0dc4c930 <col:64> '_Bool' <LValueToRValue>
|   |       | |   |   `-DeclRefExpr 0x55cc0dc4c910 <col:64> '_Bool' lvalue Var 0x55cc0dc4af20 'z$r_buff0_thd2' '_Bool'
|   |       | |   `-UnaryOperator 0x55cc0dc4c998 <col:82, col:83> 'int' prefix '!' cannot overflow
|   |       | |     `-ImplicitCastExpr 0x55cc0dc4c980 <col:83> '_Bool' <LValueToRValue>
|   |       | |       `-DeclRefExpr 0x55cc0dc4c960 <col:83> '_Bool' lvalue Var 0x55cc0dc4b460 'z$w_buff1_used' '_Bool'
|   |       | `-BinaryOperator 0x55cc0dc4ca90 <col:101, col:121> 'int' '&&'
|   |       |   |-UnaryOperator 0x55cc0dc4ca28 <col:101, col:102> 'int' prefix '!' cannot overflow
|   |       |   | `-ImplicitCastExpr 0x55cc0dc4ca10 <col:102> '_Bool' <LValueToRValue>
|   |       |   |   `-DeclRefExpr 0x55cc0dc4c9f0 <col:102> '_Bool' lvalue Var 0x55cc0dc4af20 'z$r_buff0_thd2' '_Bool'
|   |       |   `-UnaryOperator 0x55cc0dc4ca78 <col:120, col:121> 'int' prefix '!' cannot overflow
|   |       |     `-ImplicitCastExpr 0x55cc0dc4ca60 <col:121> '_Bool' <LValueToRValue>
|   |       |       `-DeclRefExpr 0x55cc0dc4ca40 <col:121> '_Bool' lvalue Var 0x55cc0dc4b100 'z$r_buff1_thd2' '_Bool'
|   |       |-ImplicitCastExpr 0x55cc0dc4cc80 <col:138> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x55cc0dc4cad0 <col:138> 'int' lvalue Var 0x55cc0dc4b2f0 'z$w_buff0' 'int'
|   |       `-ParenExpr 0x55cc0dc4cc60 <col:150, col:207> 'int'
|   |         `-ConditionalOperator 0x55cc0dc4cc30 <col:151, col:198> 'int'
|   |           |-BinaryOperator 0x55cc0dc4cba0 <col:151, col:169> 'int' '&&'
|   |           | |-ImplicitCastExpr 0x55cc0dc4cb58 <col:151> 'int' <IntegralCast>
|   |           | | `-ImplicitCastExpr 0x55cc0dc4cb40 <col:151> '_Bool' <LValueToRValue>
|   |           | |   `-DeclRefExpr 0x55cc0dc4caf0 <col:151> '_Bool' lvalue Var 0x55cc0dc4b368 'z$w_buff0_used' '_Bool'
|   |           | `-ImplicitCastExpr 0x55cc0dc4cb88 <col:169> 'int' <IntegralCast>
|   |           |   `-ImplicitCastExpr 0x55cc0dc4cb70 <col:169> '_Bool' <LValueToRValue>
|   |           |     `-DeclRefExpr 0x55cc0dc4cb20 <col:169> '_Bool' lvalue Var 0x55cc0dc4af20 'z$r_buff0_thd2' '_Bool'
|   |           |-ImplicitCastExpr 0x55cc0dc4cc00 <col:186> 'int' <LValueToRValue>
|   |           | `-DeclRefExpr 0x55cc0dc4cbc0 <col:186> 'int' lvalue Var 0x55cc0dc4b2f0 'z$w_buff0' 'int'
|   |           `-ImplicitCastExpr 0x55cc0dc4cc18 <col:198> 'int' <LValueToRValue>
|   |             `-DeclRefExpr 0x55cc0dc4cbe0 <col:198> 'int' lvalue Var 0x55cc0dc4b2f0 'z$w_buff0' 'int'
|   |-BinaryOperator 0x55cc0dc4d270 <line:744:3, col:208> 'int' '='
|   | |-DeclRefExpr 0x55cc0dc4cd80 <col:3> 'int' lvalue Var 0x55cc0dc4b3e8 'z$w_buff1' 'int'
|   | `-ConditionalOperator 0x55cc0dc4d240 <col:15, col:208> 'int'
|   |   |-ImplicitCastExpr 0x55cc0dc4d210 <col:15> 'int' <IntegralCast>
|   |   | `-ImplicitCastExpr 0x55cc0dc4d1f8 <col:15> '_Bool' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x55cc0dc4cda0 <col:15> '_Bool' lvalue Var 0x55cc0dc4b550 'weak$$choice2' '_Bool'
|   |   |-ImplicitCastExpr 0x55cc0dc4d228 <col:31> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x55cc0dc4cdc0 <col:31> 'int' lvalue Var 0x55cc0dc4b3e8 'z$w_buff1' 'int'
|   |   `-ParenExpr 0x55cc0dc4d1d8 <col:43, col:208> 'int'
|   |     `-ConditionalOperator 0x55cc0dc4d1a8 <col:44, col:207> 'int'
|   |       |-BinaryOperator 0x55cc0dc4cfd0 <col:44, col:121> 'int' '||'
|   |       | |-BinaryOperator 0x55cc0dc4cef0 <col:44, col:83> 'int' '||'
|   |       | | |-UnaryOperator 0x55cc0dc4ce18 <col:44, col:45> 'int' prefix '!' cannot overflow
|   |       | | | `-ImplicitCastExpr 0x55cc0dc4ce00 <col:45> '_Bool' <LValueToRValue>
|   |       | | |   `-DeclRefExpr 0x55cc0dc4cde0 <col:45> '_Bool' lvalue Var 0x55cc0dc4b368 'z$w_buff0_used' '_Bool'
|   |       | | `-BinaryOperator 0x55cc0dc4ced0 <col:63, col:83> 'int' '&&'
|   |       | |   |-UnaryOperator 0x55cc0dc4ce68 <col:63, col:64> 'int' prefix '!' cannot overflow
|   |       | |   | `-ImplicitCastExpr 0x55cc0dc4ce50 <col:64> '_Bool' <LValueToRValue>
|   |       | |   |   `-DeclRefExpr 0x55cc0dc4ce30 <col:64> '_Bool' lvalue Var 0x55cc0dc4af20 'z$r_buff0_thd2' '_Bool'
|   |       | |   `-UnaryOperator 0x55cc0dc4ceb8 <col:82, col:83> 'int' prefix '!' cannot overflow
|   |       | |     `-ImplicitCastExpr 0x55cc0dc4cea0 <col:83> '_Bool' <LValueToRValue>
|   |       | |       `-DeclRefExpr 0x55cc0dc4ce80 <col:83> '_Bool' lvalue Var 0x55cc0dc4b460 'z$w_buff1_used' '_Bool'
|   |       | `-BinaryOperator 0x55cc0dc4cfb0 <col:101, col:121> 'int' '&&'
|   |       |   |-UnaryOperator 0x55cc0dc4cf48 <col:101, col:102> 'int' prefix '!' cannot overflow
|   |       |   | `-ImplicitCastExpr 0x55cc0dc4cf30 <col:102> '_Bool' <LValueToRValue>
|   |       |   |   `-DeclRefExpr 0x55cc0dc4cf10 <col:102> '_Bool' lvalue Var 0x55cc0dc4af20 'z$r_buff0_thd2' '_Bool'
|   |       |   `-UnaryOperator 0x55cc0dc4cf98 <col:120, col:121> 'int' prefix '!' cannot overflow
|   |       |     `-ImplicitCastExpr 0x55cc0dc4cf80 <col:121> '_Bool' <LValueToRValue>
|   |       |       `-DeclRefExpr 0x55cc0dc4cf60 <col:121> '_Bool' lvalue Var 0x55cc0dc4b100 'z$r_buff1_thd2' '_Bool'
|   |       |-ImplicitCastExpr 0x55cc0dc4d190 <col:138> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x55cc0dc4cff0 <col:138> 'int' lvalue Var 0x55cc0dc4b3e8 'z$w_buff1' 'int'
|   |       `-ParenExpr 0x55cc0dc4d170 <col:150, col:207> 'int'
|   |         `-ConditionalOperator 0x55cc0dc4d140 <col:151, col:198> 'int'
|   |           |-BinaryOperator 0x55cc0dc4d0b0 <col:151, col:169> 'int' '&&'
|   |           | |-ImplicitCastExpr 0x55cc0dc4d068 <col:151> 'int' <IntegralCast>
|   |           | | `-ImplicitCastExpr 0x55cc0dc4d050 <col:151> '_Bool' <LValueToRValue>
|   |           | |   `-DeclRefExpr 0x55cc0dc4d010 <col:151> '_Bool' lvalue Var 0x55cc0dc4b368 'z$w_buff0_used' '_Bool'
|   |           | `-ImplicitCastExpr 0x55cc0dc4d098 <col:169> 'int' <IntegralCast>
|   |           |   `-ImplicitCastExpr 0x55cc0dc4d080 <col:169> '_Bool' <LValueToRValue>
|   |           |     `-DeclRefExpr 0x55cc0dc4d030 <col:169> '_Bool' lvalue Var 0x55cc0dc4af20 'z$r_buff0_thd2' '_Bool'
|   |           |-ImplicitCastExpr 0x55cc0dc4d110 <col:186> 'int' <LValueToRValue>
|   |           | `-DeclRefExpr 0x55cc0dc4d0d0 <col:186> 'int' lvalue Var 0x55cc0dc4b3e8 'z$w_buff1' 'int'
|   |           `-ImplicitCastExpr 0x55cc0dc4d128 <col:198> 'int' <LValueToRValue>
|   |             `-DeclRefExpr 0x55cc0dc4d0f0 <col:198> 'int' lvalue Var 0x55cc0dc4b3e8 'z$w_buff1' 'int'
|   |-BinaryOperator 0x55cc0dc4d818 <line:745:3, col:227> '_Bool' '='
|   | |-DeclRefExpr 0x55cc0dc4d290 <col:3> '_Bool' lvalue Var 0x55cc0dc4b368 'z$w_buff0_used' '_Bool'
|   | `-ImplicitCastExpr 0x55cc0dc4d800 <col:20, col:227> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55cc0dc4d7d0 <col:20, col:227> 'int'
|   |     |-ImplicitCastExpr 0x55cc0dc4d788 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x55cc0dc4d770 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x55cc0dc4d2b0 <col:20> '_Bool' lvalue Var 0x55cc0dc4b550 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x55cc0dc4d7b8 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x55cc0dc4d7a0 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x55cc0dc4d2d0 <col:36> '_Bool' lvalue Var 0x55cc0dc4b368 'z$w_buff0_used' '_Bool'
|   |     `-ParenExpr 0x55cc0dc4d750 <col:53, col:227> 'int'
|   |       `-ConditionalOperator 0x55cc0dc4d720 <col:54, col:226> 'int'
|   |         |-BinaryOperator 0x55cc0dc4d4e0 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x55cc0dc4d400 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x55cc0dc4d328 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x55cc0dc4d310 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x55cc0dc4d2f0 <col:55> '_Bool' lvalue Var 0x55cc0dc4b368 'z$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x55cc0dc4d3e0 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x55cc0dc4d378 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x55cc0dc4d360 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x55cc0dc4d340 <col:74> '_Bool' lvalue Var 0x55cc0dc4af20 'z$r_buff0_thd2' '_Bool'
|   |         | |   `-UnaryOperator 0x55cc0dc4d3c8 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x55cc0dc4d3b0 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x55cc0dc4d390 <col:93> '_Bool' lvalue Var 0x55cc0dc4b460 'z$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x55cc0dc4d4c0 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x55cc0dc4d458 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x55cc0dc4d440 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x55cc0dc4d420 <col:112> '_Bool' lvalue Var 0x55cc0dc4af20 'z$r_buff0_thd2' '_Bool'
|   |         |   `-UnaryOperator 0x55cc0dc4d4a8 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x55cc0dc4d490 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x55cc0dc4d470 <col:131> '_Bool' lvalue Var 0x55cc0dc4b100 'z$r_buff1_thd2' '_Bool'
|   |         |-ImplicitCastExpr 0x55cc0dc4d708 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x55cc0dc4d6f0 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x55cc0dc4d500 <col:148> '_Bool' lvalue Var 0x55cc0dc4b368 'z$w_buff0_used' '_Bool'
|   |         `-ParenExpr 0x55cc0dc4d6d0 <col:165, col:226> 'int'
|   |           `-ConditionalOperator 0x55cc0dc4d6a0 <col:166, col:212> 'int'
|   |             |-BinaryOperator 0x55cc0dc4d5c0 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x55cc0dc4d578 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x55cc0dc4d560 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x55cc0dc4d520 <col:166> '_Bool' lvalue Var 0x55cc0dc4b368 'z$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x55cc0dc4d5a8 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x55cc0dc4d590 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x55cc0dc4d540 <col:184> '_Bool' lvalue Var 0x55cc0dc4af20 'z$r_buff0_thd2' '_Bool'
|   |             |-ImplicitCastExpr 0x55cc0dc4d658 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x55cc0dc4d610 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x55cc0dc4d5e0 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x55cc0dc4d688 <col:212> 'int' <IntegralCast>
|   |               `-ImplicitCastExpr 0x55cc0dc4d670 <col:212> '_Bool' <LValueToRValue>
|   |                 `-DeclRefExpr 0x55cc0dc4d638 <col:212> '_Bool' lvalue Var 0x55cc0dc4b368 'z$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x55cc0dc4ddf0 <line:746:3, col:221> '_Bool' '='
|   | |-DeclRefExpr 0x55cc0dc4d838 <col:3> '_Bool' lvalue Var 0x55cc0dc4b460 'z$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x55cc0dc4ddd8 <col:20, col:221> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55cc0dc4dda8 <col:20, col:221> 'int'
|   |     |-ImplicitCastExpr 0x55cc0dc4dd60 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x55cc0dc4dd48 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x55cc0dc4d858 <col:20> '_Bool' lvalue Var 0x55cc0dc4b550 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x55cc0dc4dd90 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x55cc0dc4dd78 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x55cc0dc4d878 <col:36> '_Bool' lvalue Var 0x55cc0dc4b460 'z$w_buff1_used' '_Bool'
|   |     `-ParenExpr 0x55cc0dc4dd28 <col:53, col:221> 'int'
|   |       `-ConditionalOperator 0x55cc0dc4dcf8 <col:54, col:220> 'int'
|   |         |-BinaryOperator 0x55cc0dc4da88 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x55cc0dc4d9a8 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x55cc0dc4d8d0 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x55cc0dc4d8b8 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x55cc0dc4d898 <col:55> '_Bool' lvalue Var 0x55cc0dc4b368 'z$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x55cc0dc4d988 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x55cc0dc4d920 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x55cc0dc4d908 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x55cc0dc4d8e8 <col:74> '_Bool' lvalue Var 0x55cc0dc4af20 'z$r_buff0_thd2' '_Bool'
|   |         | |   `-UnaryOperator 0x55cc0dc4d970 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x55cc0dc4d958 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x55cc0dc4d938 <col:93> '_Bool' lvalue Var 0x55cc0dc4b460 'z$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x55cc0dc4da68 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x55cc0dc4da00 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x55cc0dc4d9e8 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x55cc0dc4d9c8 <col:112> '_Bool' lvalue Var 0x55cc0dc4af20 'z$r_buff0_thd2' '_Bool'
|   |         |   `-UnaryOperator 0x55cc0dc4da50 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x55cc0dc4da38 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x55cc0dc4da18 <col:131> '_Bool' lvalue Var 0x55cc0dc4b100 'z$r_buff1_thd2' '_Bool'
|   |         |-ImplicitCastExpr 0x55cc0dc4dce0 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x55cc0dc4dcc8 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x55cc0dc4daa8 <col:148> '_Bool' lvalue Var 0x55cc0dc4b460 'z$w_buff1_used' '_Bool'
|   |         `-ParenExpr 0x55cc0dc4dca8 <col:165, col:220> 'int'
|   |           `-ConditionalOperator 0x55cc0dc4dc78 <col:166, col:219> 'int'
|   |             |-BinaryOperator 0x55cc0dc4db78 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x55cc0dc4db30 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x55cc0dc4db08 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x55cc0dc4dac8 <col:166> '_Bool' lvalue Var 0x55cc0dc4b368 'z$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x55cc0dc4db60 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x55cc0dc4db48 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x55cc0dc4dae8 <col:184> '_Bool' lvalue Var 0x55cc0dc4af20 'z$r_buff0_thd2' '_Bool'
|   |             |-ImplicitCastExpr 0x55cc0dc4dc48 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x55cc0dc4dbc8 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x55cc0dc4db98 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x55cc0dc4dc60 <col:212, col:219> 'int' <IntegralCast>
|   |               `-CStyleCastExpr 0x55cc0dc4dc20 <col:212, col:219> '_Bool' <IntegralToBoolean>
|   |                 `-IntegerLiteral 0x55cc0dc4dbf0 <col:219> 'int' 0
|   |-BinaryOperator 0x55cc0dc4e398 <line:747:3, col:227> '_Bool' '='
|   | |-DeclRefExpr 0x55cc0dc4de10 <col:3> '_Bool' lvalue Var 0x55cc0dc4af20 'z$r_buff0_thd2' '_Bool'
|   | `-ImplicitCastExpr 0x55cc0dc4e380 <col:20, col:227> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55cc0dc4e350 <col:20, col:227> 'int'
|   |     |-ImplicitCastExpr 0x55cc0dc4e308 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x55cc0dc4e2f0 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x55cc0dc4de30 <col:20> '_Bool' lvalue Var 0x55cc0dc4b550 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x55cc0dc4e338 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x55cc0dc4e320 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x55cc0dc4de50 <col:36> '_Bool' lvalue Var 0x55cc0dc4af20 'z$r_buff0_thd2' '_Bool'
|   |     `-ParenExpr 0x55cc0dc4e2d0 <col:53, col:227> 'int'
|   |       `-ConditionalOperator 0x55cc0dc4e2a0 <col:54, col:226> 'int'
|   |         |-BinaryOperator 0x55cc0dc4e060 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x55cc0dc4df80 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x55cc0dc4dea8 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x55cc0dc4de90 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x55cc0dc4de70 <col:55> '_Bool' lvalue Var 0x55cc0dc4b368 'z$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x55cc0dc4df60 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x55cc0dc4def8 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x55cc0dc4dee0 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x55cc0dc4dec0 <col:74> '_Bool' lvalue Var 0x55cc0dc4af20 'z$r_buff0_thd2' '_Bool'
|   |         | |   `-UnaryOperator 0x55cc0dc4df48 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x55cc0dc4df30 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x55cc0dc4df10 <col:93> '_Bool' lvalue Var 0x55cc0dc4b460 'z$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x55cc0dc4e040 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x55cc0dc4dfd8 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x55cc0dc4dfc0 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x55cc0dc4dfa0 <col:112> '_Bool' lvalue Var 0x55cc0dc4af20 'z$r_buff0_thd2' '_Bool'
|   |         |   `-UnaryOperator 0x55cc0dc4e028 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x55cc0dc4e010 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x55cc0dc4dff0 <col:131> '_Bool' lvalue Var 0x55cc0dc4b100 'z$r_buff1_thd2' '_Bool'
|   |         |-ImplicitCastExpr 0x55cc0dc4e288 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x55cc0dc4e270 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x55cc0dc4e080 <col:148> '_Bool' lvalue Var 0x55cc0dc4af20 'z$r_buff0_thd2' '_Bool'
|   |         `-ParenExpr 0x55cc0dc4e250 <col:165, col:226> 'int'
|   |           `-ConditionalOperator 0x55cc0dc4e220 <col:166, col:212> 'int'
|   |             |-BinaryOperator 0x55cc0dc4e140 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x55cc0dc4e0f8 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x55cc0dc4e0e0 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x55cc0dc4e0a0 <col:166> '_Bool' lvalue Var 0x55cc0dc4b368 'z$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x55cc0dc4e128 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x55cc0dc4e110 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x55cc0dc4e0c0 <col:184> '_Bool' lvalue Var 0x55cc0dc4af20 'z$r_buff0_thd2' '_Bool'
|   |             |-ImplicitCastExpr 0x55cc0dc4e1d8 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x55cc0dc4e190 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x55cc0dc4e160 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x55cc0dc4e208 <col:212> 'int' <IntegralCast>
|   |               `-ImplicitCastExpr 0x55cc0dc4e1f0 <col:212> '_Bool' <LValueToRValue>
|   |                 `-DeclRefExpr 0x55cc0dc4e1b8 <col:212> '_Bool' lvalue Var 0x55cc0dc4af20 'z$r_buff0_thd2' '_Bool'
|   |-BinaryOperator 0x55cc0dc4e960 <line:748:3, col:221> '_Bool' '='
|   | |-DeclRefExpr 0x55cc0dc4e3b8 <col:3> '_Bool' lvalue Var 0x55cc0dc4b100 'z$r_buff1_thd2' '_Bool'
|   | `-ImplicitCastExpr 0x55cc0dc4e948 <col:20, col:221> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55cc0dc4e918 <col:20, col:221> 'int'
|   |     |-ImplicitCastExpr 0x55cc0dc4e8d0 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x55cc0dc4e8b8 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x55cc0dc4e3d8 <col:20> '_Bool' lvalue Var 0x55cc0dc4b550 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x55cc0dc4e900 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x55cc0dc4e8e8 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x55cc0dc4e3f8 <col:36> '_Bool' lvalue Var 0x55cc0dc4b100 'z$r_buff1_thd2' '_Bool'
|   |     `-ParenExpr 0x55cc0dc4e898 <col:53, col:221> 'int'
|   |       `-ConditionalOperator 0x55cc0dc4e868 <col:54, col:220> 'int'
|   |         |-BinaryOperator 0x55cc0dc4e608 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x55cc0dc4e528 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x55cc0dc4e450 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x55cc0dc4e438 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x55cc0dc4e418 <col:55> '_Bool' lvalue Var 0x55cc0dc4b368 'z$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x55cc0dc4e508 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x55cc0dc4e4a0 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x55cc0dc4e488 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x55cc0dc4e468 <col:74> '_Bool' lvalue Var 0x55cc0dc4af20 'z$r_buff0_thd2' '_Bool'
|   |         | |   `-UnaryOperator 0x55cc0dc4e4f0 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x55cc0dc4e4d8 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x55cc0dc4e4b8 <col:93> '_Bool' lvalue Var 0x55cc0dc4b460 'z$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x55cc0dc4e5e8 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x55cc0dc4e580 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x55cc0dc4e568 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x55cc0dc4e548 <col:112> '_Bool' lvalue Var 0x55cc0dc4af20 'z$r_buff0_thd2' '_Bool'
|   |         |   `-UnaryOperator 0x55cc0dc4e5d0 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x55cc0dc4e5b8 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x55cc0dc4e598 <col:131> '_Bool' lvalue Var 0x55cc0dc4b100 'z$r_buff1_thd2' '_Bool'
|   |         |-ImplicitCastExpr 0x55cc0dc4e850 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x55cc0dc4e838 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x55cc0dc4e628 <col:148> '_Bool' lvalue Var 0x55cc0dc4b100 'z$r_buff1_thd2' '_Bool'
|   |         `-ParenExpr 0x55cc0dc4e818 <col:165, col:220> 'int'
|   |           `-ConditionalOperator 0x55cc0dc4e7e8 <col:166, col:219> 'int'
|   |             |-BinaryOperator 0x55cc0dc4e6e8 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x55cc0dc4e6a0 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x55cc0dc4e688 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x55cc0dc4e648 <col:166> '_Bool' lvalue Var 0x55cc0dc4b368 'z$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x55cc0dc4e6d0 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x55cc0dc4e6b8 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x55cc0dc4e668 <col:184> '_Bool' lvalue Var 0x55cc0dc4af20 'z$r_buff0_thd2' '_Bool'
|   |             |-ImplicitCastExpr 0x55cc0dc4e7b8 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x55cc0dc4e738 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x55cc0dc4e708 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x55cc0dc4e7d0 <col:212, col:219> 'int' <IntegralCast>
|   |               `-CStyleCastExpr 0x55cc0dc4e790 <col:212, col:219> '_Bool' <IntegralToBoolean>
|   |                 `-IntegerLiteral 0x55cc0dc4e760 <col:219> 'int' 0
|   |-BinaryOperator 0x55cc0dc4e9d8 <line:749:3, col:25> 'int' '='
|   | |-DeclRefExpr 0x55cc0dc4e980 <col:3> 'int' lvalue Var 0x55cc0dc4a480 '__unbuffered_p1_EAX' 'int'
|   | `-ImplicitCastExpr 0x55cc0dc4e9c0 <col:25> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x55cc0dc4e9a0 <col:25> 'int' lvalue Var 0x55cc0dc4aca0 'z' 'int'
|   |-BinaryOperator 0x55cc0dc4eb08 <line:750:3, col:37> 'int' '='
|   | |-DeclRefExpr 0x55cc0dc4e9f8 <col:3> 'int' lvalue Var 0x55cc0dc4aca0 'z' 'int'
|   | `-ConditionalOperator 0x55cc0dc4ead8 <col:7, col:37> 'int'
|   |   |-ImplicitCastExpr 0x55cc0dc4ea90 <col:7> 'int' <IntegralCast>
|   |   | `-ImplicitCastExpr 0x55cc0dc4ea78 <col:7> '_Bool' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x55cc0dc4ea18 <col:7> '_Bool' lvalue Var 0x55cc0dc4ad38 'z$flush_delayed' '_Bool'
|   |   |-ImplicitCastExpr 0x55cc0dc4eaa8 <col:25> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x55cc0dc4ea38 <col:25> 'int' lvalue Var 0x55cc0dc4adb8 'z$mem_tmp' 'int'
|   |   `-ImplicitCastExpr 0x55cc0dc4eac0 <col:37> 'int' <LValueToRValue>
|   |     `-DeclRefExpr 0x55cc0dc4ea58 <col:37> 'int' lvalue Var 0x55cc0dc4aca0 'z' 'int'
|   |-BinaryOperator 0x55cc0dc4ebb8 <line:751:3, col:28> '_Bool' '='
|   | |-DeclRefExpr 0x55cc0dc4eb40 <col:3> '_Bool' lvalue Var 0x55cc0dc4ad38 'z$flush_delayed' '_Bool'
|   | `-CStyleCastExpr 0x55cc0dc4eb90 <col:21, col:28> '_Bool' <IntegralToBoolean>
|   |   `-IntegerLiteral 0x55cc0dc4eb60 <col:28> 'int' 0
|   |-CallExpr 0x55cc0dc4ec10 <line:752:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x55cc0dc4ebf8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55cc0dc4ebd8 <col:3> 'void ()' Function 0x55cc0dbf0f00 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x55cc0dc4ec68 <line:753:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x55cc0dc4ec50 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55cc0dc4ec30 <col:3> 'void ()' Function 0x55cc0dbf0e40 '__VERIFIER_atomic_begin' 'void ()'
|   |-CallExpr 0x55cc0dc4ecc0 <line:754:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x55cc0dc4eca8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55cc0dc4ec88 <col:3> 'void ()' Function 0x55cc0dbf0f00 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x55cc0dc4ed18 <line:755:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x55cc0dc4ed00 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55cc0dc4ece0 <col:3> 'void ()' Function 0x55cc0dbf0e40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x55cc0dc4edd0 <line:756:3, col:41> 'int' '='
|   | |-DeclRefExpr 0x55cc0dc4ed38 <col:3> 'int' lvalue Var 0x55cc0dc4a120 '__unbuffered_cnt' 'int'
|   | `-BinaryOperator 0x55cc0dc4edb0 <col:22, col:41> 'int' '+'
|   |   |-ImplicitCastExpr 0x55cc0dc4ed98 <col:22> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x55cc0dc4ed58 <col:22> 'int' lvalue Var 0x55cc0dc4a120 '__unbuffered_cnt' 'int'
|   |   `-IntegerLiteral 0x55cc0dc4ed78 <col:41> 'int' 1
|   |-CallExpr 0x55cc0dc4ee28 <line:757:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x55cc0dc4ee10 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55cc0dc4edf0 <col:3> 'void ()' Function 0x55cc0dbf0f00 '__VERIFIER_atomic_end' 'void ()'
|   `-ReturnStmt 0x55cc0dc4eea0 <line:758:3, col:36>
|     `-CallExpr 0x55cc0dc4ee80 <col:10, col:36> 'void *'
|       `-ImplicitCastExpr 0x55cc0dc4ee68 <col:10> 'void *(*)(void)' <FunctionToPointerDecay>
|         `-DeclRefExpr 0x55cc0dc4ee48 <col:10> 'void *(void)' Function 0x55cc0dbf0958 '__VERIFIER_nondet_pointer' 'void *(void)'
|-FunctionDecl 0x55cc0dc4f038 prev 0x55cc0dc49da0 <line:760:1, line:804:1> line:760:8 used P2 'void *(void *)'
| |-ParmVarDecl 0x55cc0dc4efa0 <col:11, col:17> col:17 arg 'void *'
| `-CompoundStmt 0x55cc0dc532d0 <line:761:1, line:804:1>
|   |-CallExpr 0x55cc0dc4f118 <line:762:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x55cc0dc4f100 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55cc0dc4f0e0 <col:3> 'void ()' Function 0x55cc0dbf0e40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x55cc0dc4f190 <line:763:3, col:15> 'int' '='
|   | |-DeclRefExpr 0x55cc0dc4f138 <col:3> 'int' lvalue Var 0x55cc0dc4b3e8 'z$w_buff1' 'int'
|   | `-ImplicitCastExpr 0x55cc0dc4f178 <col:15> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x55cc0dc4f158 <col:15> 'int' lvalue Var 0x55cc0dc4b2f0 'z$w_buff0' 'int'
|   |-BinaryOperator 0x55cc0dc4f1f0 <line:764:3, col:15> 'int' '='
|   | |-DeclRefExpr 0x55cc0dc4f1b0 <col:3> 'int' lvalue Var 0x55cc0dc4b2f0 'z$w_buff0' 'int'
|   | `-IntegerLiteral 0x55cc0dc4f1d0 <col:15> 'int' 1
|   |-BinaryOperator 0x55cc0dc4f268 <line:765:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x55cc0dc4f210 <col:3> '_Bool' lvalue Var 0x55cc0dc4b460 'z$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x55cc0dc4f250 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x55cc0dc4f230 <col:20> '_Bool' lvalue Var 0x55cc0dc4b368 'z$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x55cc0dc4f300 <line:766:3, col:27> '_Bool' '='
|   | |-DeclRefExpr 0x55cc0dc4f288 <col:3> '_Bool' lvalue Var 0x55cc0dc4b368 'z$w_buff0_used' '_Bool'
|   | `-CStyleCastExpr 0x55cc0dc4f2d8 <col:20, col:27> '_Bool' <IntegralToBoolean>
|   |   `-IntegerLiteral 0x55cc0dc4f2a8 <col:27> 'int' 1
|   |-CallExpr 0x55cc0dc4f488 <line:767:3, col:56> 'void'
|   | |-ImplicitCastExpr 0x55cc0dc4f470 <col:3> 'void (*)(int)' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x55cc0dc4f320 <col:3> 'void (int)' Function 0x55cc0dbf0bc8 '__VERIFIER_assert' 'void (int)'
|   | `-UnaryOperator 0x55cc0dc4f420 <col:21, col:55> 'int' prefix '!' cannot overflow
|   |   `-ParenExpr 0x55cc0dc4f400 <col:22, col:55> 'int'
|   |     `-BinaryOperator 0x55cc0dc4f3e0 <col:23, col:41> 'int' '&&'
|   |       |-ImplicitCastExpr 0x55cc0dc4f398 <col:23> 'int' <IntegralCast>
|   |       | `-ImplicitCastExpr 0x55cc0dc4f380 <col:23> '_Bool' <LValueToRValue>
|   |       |   `-DeclRefExpr 0x55cc0dc4f340 <col:23> '_Bool' lvalue Var 0x55cc0dc4b460 'z$w_buff1_used' '_Bool'
|   |       `-ImplicitCastExpr 0x55cc0dc4f3c8 <col:41> 'int' <IntegralCast>
|   |         `-ImplicitCastExpr 0x55cc0dc4f3b0 <col:41> '_Bool' <LValueToRValue>
|   |           `-DeclRefExpr 0x55cc0dc4f360 <col:41> '_Bool' lvalue Var 0x55cc0dc4b368 'z$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x55cc0dc4f508 <line:768:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x55cc0dc4f4b0 <col:3> '_Bool' lvalue Var 0x55cc0dc4b010 'z$r_buff1_thd0' '_Bool'
|   | `-ImplicitCastExpr 0x55cc0dc4f4f0 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x55cc0dc4f4d0 <col:20> '_Bool' lvalue Var 0x55cc0dc4ae30 'z$r_buff0_thd0' '_Bool'
|   |-BinaryOperator 0x55cc0dc4f580 <line:769:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x55cc0dc4f528 <col:3> '_Bool' lvalue Var 0x55cc0dc4b088 'z$r_buff1_thd1' '_Bool'
|   | `-ImplicitCastExpr 0x55cc0dc4f568 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x55cc0dc4f548 <col:20> '_Bool' lvalue Var 0x55cc0dc4aea8 'z$r_buff0_thd1' '_Bool'
|   |-BinaryOperator 0x55cc0dc4f5f8 <line:770:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x55cc0dc4f5a0 <col:3> '_Bool' lvalue Var 0x55cc0dc4b100 'z$r_buff1_thd2' '_Bool'
|   | `-ImplicitCastExpr 0x55cc0dc4f5e0 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x55cc0dc4f5c0 <col:20> '_Bool' lvalue Var 0x55cc0dc4af20 'z$r_buff0_thd2' '_Bool'
|   |-BinaryOperator 0x55cc0dc4f670 <line:771:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x55cc0dc4f618 <col:3> '_Bool' lvalue Var 0x55cc0dc4b178 'z$r_buff1_thd3' '_Bool'
|   | `-ImplicitCastExpr 0x55cc0dc4f658 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x55cc0dc4f638 <col:20> '_Bool' lvalue Var 0x55cc0dc4af98 'z$r_buff0_thd3' '_Bool'
|   |-BinaryOperator 0x55cc0dc4f708 <line:772:3, col:27> '_Bool' '='
|   | |-DeclRefExpr 0x55cc0dc4f690 <col:3> '_Bool' lvalue Var 0x55cc0dc4af98 'z$r_buff0_thd3' '_Bool'
|   | `-CStyleCastExpr 0x55cc0dc4f6e0 <col:20, col:27> '_Bool' <IntegralToBoolean>
|   |   `-IntegerLiteral 0x55cc0dc4f6b0 <col:27> 'int' 1
|   |-CallExpr 0x55cc0dc4f760 <line:773:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x55cc0dc4f748 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55cc0dc4f728 <col:3> 'void ()' Function 0x55cc0dbf0f00 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x55cc0dc4f7b8 <line:774:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x55cc0dc4f7a0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55cc0dc4f780 <col:3> 'void ()' Function 0x55cc0dbf0e40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x55cc0dc4f868 <line:775:3, col:45> '_Bool' '='
|   | |-DeclRefExpr 0x55cc0dc4f7d8 <col:3> '_Bool' lvalue Var 0x55cc0dc4b4d8 'weak$$choice0' '_Bool'
|   | `-ImplicitCastExpr 0x55cc0dc4f850 <col:19, col:45> '_Bool' <PointerToBoolean>
|   |   `-CallExpr 0x55cc0dc4f830 <col:19, col:45> 'void *'
|   |     `-ImplicitCastExpr 0x55cc0dc4f818 <col:19> 'void *(*)(void)' <FunctionToPointerDecay>
|   |       `-DeclRefExpr 0x55cc0dc4f7f8 <col:19> 'void *(void)' Function 0x55cc0dbf0958 '__VERIFIER_nondet_pointer' 'void *(void)'
|   |-BinaryOperator 0x55cc0dc4f918 <line:776:3, col:45> '_Bool' '='
|   | |-DeclRefExpr 0x55cc0dc4f888 <col:3> '_Bool' lvalue Var 0x55cc0dc4b550 'weak$$choice2' '_Bool'
|   | `-ImplicitCastExpr 0x55cc0dc4f900 <col:19, col:45> '_Bool' <PointerToBoolean>
|   |   `-CallExpr 0x55cc0dc4f8e0 <col:19, col:45> 'void *'
|   |     `-ImplicitCastExpr 0x55cc0dc4f8c8 <col:19> 'void *(*)(void)' <FunctionToPointerDecay>
|   |       `-DeclRefExpr 0x55cc0dc4f8a8 <col:19> 'void *(void)' Function 0x55cc0dbf0958 '__VERIFIER_nondet_pointer' 'void *(void)'
|   |-BinaryOperator 0x55cc0dc4f990 <line:777:3, col:21> '_Bool' '='
|   | |-DeclRefExpr 0x55cc0dc4f938 <col:3> '_Bool' lvalue Var 0x55cc0dc4ad38 'z$flush_delayed' '_Bool'
|   | `-ImplicitCastExpr 0x55cc0dc4f978 <col:21> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x55cc0dc4f958 <col:21> '_Bool' lvalue Var 0x55cc0dc4b550 'weak$$choice2' '_Bool'
|   |-BinaryOperator 0x55cc0dc4fa08 <line:778:3, col:15> 'int' '='
|   | |-DeclRefExpr 0x55cc0dc4f9b0 <col:3> 'int' lvalue Var 0x55cc0dc4adb8 'z$mem_tmp' 'int'
|   | `-ImplicitCastExpr 0x55cc0dc4f9f0 <col:15> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x55cc0dc4f9d0 <col:15> 'int' lvalue Var 0x55cc0dc4aca0 'z' 'int'
|   |-BinaryOperator 0x55cc0dc4fe58 <line:779:3, col:162> 'int' '='
|   | |-DeclRefExpr 0x55cc0dc4fa28 <col:3> 'int' lvalue Var 0x55cc0dc4aca0 'z' 'int'
|   | `-ConditionalOperator 0x55cc0dc4fe28 <col:7, col:162> 'int'
|   |   |-BinaryOperator 0x55cc0dc4fc50 <col:7, col:84> 'int' '||'
|   |   | |-BinaryOperator 0x55cc0dc4fb70 <col:7, col:46> 'int' '||'
|   |   | | |-UnaryOperator 0x55cc0dc4fa80 <col:7, col:8> 'int' prefix '!' cannot overflow
|   |   | | | `-ImplicitCastExpr 0x55cc0dc4fa68 <col:8> '_Bool' <LValueToRValue>
|   |   | | |   `-DeclRefExpr 0x55cc0dc4fa48 <col:8> '_Bool' lvalue Var 0x55cc0dc4b368 'z$w_buff0_used' '_Bool'
|   |   | | `-BinaryOperator 0x55cc0dc4fb50 <col:26, col:46> 'int' '&&'
|   |   | |   |-UnaryOperator 0x55cc0dc4fad0 <col:26, col:27> 'int' prefix '!' cannot overflow
|   |   | |   | `-ImplicitCastExpr 0x55cc0dc4fab8 <col:27> '_Bool' <LValueToRValue>
|   |   | |   |   `-DeclRefExpr 0x55cc0dc4fa98 <col:27> '_Bool' lvalue Var 0x55cc0dc4af98 'z$r_buff0_thd3' '_Bool'
|   |   | |   `-UnaryOperator 0x55cc0dc4fb20 <col:45, col:46> 'int' prefix '!' cannot overflow
|   |   | |     `-ImplicitCastExpr 0x55cc0dc4fb08 <col:46> '_Bool' <LValueToRValue>
|   |   | |       `-DeclRefExpr 0x55cc0dc4fae8 <col:46> '_Bool' lvalue Var 0x55cc0dc4b460 'z$w_buff1_used' '_Bool'
|   |   | `-BinaryOperator 0x55cc0dc4fc30 <col:64, col:84> 'int' '&&'
|   |   |   |-UnaryOperator 0x55cc0dc4fbc8 <col:64, col:65> 'int' prefix '!' cannot overflow
|   |   |   | `-ImplicitCastExpr 0x55cc0dc4fbb0 <col:65> '_Bool' <LValueToRValue>
|   |   |   |   `-DeclRefExpr 0x55cc0dc4fb90 <col:65> '_Bool' lvalue Var 0x55cc0dc4af98 'z$r_buff0_thd3' '_Bool'
|   |   |   `-UnaryOperator 0x55cc0dc4fc18 <col:83, col:84> 'int' prefix '!' cannot overflow
|   |   |     `-ImplicitCastExpr 0x55cc0dc4fc00 <col:84> '_Bool' <LValueToRValue>
|   |   |       `-DeclRefExpr 0x55cc0dc4fbe0 <col:84> '_Bool' lvalue Var 0x55cc0dc4b178 'z$r_buff1_thd3' '_Bool'
|   |   |-ImplicitCastExpr 0x55cc0dc4fe10 <col:101> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x55cc0dc4fc70 <col:101> 'int' lvalue Var 0x55cc0dc4aca0 'z' 'int'
|   |   `-ParenExpr 0x55cc0dc4fdf0 <col:105, col:162> 'int'
|   |     `-ConditionalOperator 0x55cc0dc4fdc0 <col:106, col:153> 'int'
|   |       |-BinaryOperator 0x55cc0dc4fd30 <col:106, col:124> 'int' '&&'
|   |       | |-ImplicitCastExpr 0x55cc0dc4fce8 <col:106> 'int' <IntegralCast>
|   |       | | `-ImplicitCastExpr 0x55cc0dc4fcd0 <col:106> '_Bool' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x55cc0dc4fc90 <col:106> '_Bool' lvalue Var 0x55cc0dc4b368 'z$w_buff0_used' '_Bool'
|   |       | `-ImplicitCastExpr 0x55cc0dc4fd18 <col:124> 'int' <IntegralCast>
|   |       |   `-ImplicitCastExpr 0x55cc0dc4fd00 <col:124> '_Bool' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x55cc0dc4fcb0 <col:124> '_Bool' lvalue Var 0x55cc0dc4af98 'z$r_buff0_thd3' '_Bool'
|   |       |-ImplicitCastExpr 0x55cc0dc4fd90 <col:141> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x55cc0dc4fd50 <col:141> 'int' lvalue Var 0x55cc0dc4b2f0 'z$w_buff0' 'int'
|   |       `-ImplicitCastExpr 0x55cc0dc4fda8 <col:153> 'int' <LValueToRValue>
|   |         `-DeclRefExpr 0x55cc0dc4fd70 <col:153> 'int' lvalue Var 0x55cc0dc4b3e8 'z$w_buff1' 'int'
|   |-BinaryOperator 0x55cc0dc50368 <line:780:3, col:208> 'int' '='
|   | |-DeclRefExpr 0x55cc0dc4fe78 <col:3> 'int' lvalue Var 0x55cc0dc4b2f0 'z$w_buff0' 'int'
|   | `-ConditionalOperator 0x55cc0dc50338 <col:15, col:208> 'int'
|   |   |-ImplicitCastExpr 0x55cc0dc50308 <col:15> 'int' <IntegralCast>
|   |   | `-ImplicitCastExpr 0x55cc0dc502f0 <col:15> '_Bool' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x55cc0dc4fe98 <col:15> '_Bool' lvalue Var 0x55cc0dc4b550 'weak$$choice2' '_Bool'
|   |   |-ImplicitCastExpr 0x55cc0dc50320 <col:31> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x55cc0dc4feb8 <col:31> 'int' lvalue Var 0x55cc0dc4b2f0 'z$w_buff0' 'int'
|   |   `-ParenExpr 0x55cc0dc502d0 <col:43, col:208> 'int'
|   |     `-ConditionalOperator 0x55cc0dc502a0 <col:44, col:207> 'int'
|   |       |-BinaryOperator 0x55cc0dc500c8 <col:44, col:121> 'int' '||'
|   |       | |-BinaryOperator 0x55cc0dc4ffe8 <col:44, col:83> 'int' '||'
|   |       | | |-UnaryOperator 0x55cc0dc4ff10 <col:44, col:45> 'int' prefix '!' cannot overflow
|   |       | | | `-ImplicitCastExpr 0x55cc0dc4fef8 <col:45> '_Bool' <LValueToRValue>
|   |       | | |   `-DeclRefExpr 0x55cc0dc4fed8 <col:45> '_Bool' lvalue Var 0x55cc0dc4b368 'z$w_buff0_used' '_Bool'
|   |       | | `-BinaryOperator 0x55cc0dc4ffc8 <col:63, col:83> 'int' '&&'
|   |       | |   |-UnaryOperator 0x55cc0dc4ff60 <col:63, col:64> 'int' prefix '!' cannot overflow
|   |       | |   | `-ImplicitCastExpr 0x55cc0dc4ff48 <col:64> '_Bool' <LValueToRValue>
|   |       | |   |   `-DeclRefExpr 0x55cc0dc4ff28 <col:64> '_Bool' lvalue Var 0x55cc0dc4af98 'z$r_buff0_thd3' '_Bool'
|   |       | |   `-UnaryOperator 0x55cc0dc4ffb0 <col:82, col:83> 'int' prefix '!' cannot overflow
|   |       | |     `-ImplicitCastExpr 0x55cc0dc4ff98 <col:83> '_Bool' <LValueToRValue>
|   |       | |       `-DeclRefExpr 0x55cc0dc4ff78 <col:83> '_Bool' lvalue Var 0x55cc0dc4b460 'z$w_buff1_used' '_Bool'
|   |       | `-BinaryOperator 0x55cc0dc500a8 <col:101, col:121> 'int' '&&'
|   |       |   |-UnaryOperator 0x55cc0dc50040 <col:101, col:102> 'int' prefix '!' cannot overflow
|   |       |   | `-ImplicitCastExpr 0x55cc0dc50028 <col:102> '_Bool' <LValueToRValue>
|   |       |   |   `-DeclRefExpr 0x55cc0dc50008 <col:102> '_Bool' lvalue Var 0x55cc0dc4af98 'z$r_buff0_thd3' '_Bool'
|   |       |   `-UnaryOperator 0x55cc0dc50090 <col:120, col:121> 'int' prefix '!' cannot overflow
|   |       |     `-ImplicitCastExpr 0x55cc0dc50078 <col:121> '_Bool' <LValueToRValue>
|   |       |       `-DeclRefExpr 0x55cc0dc50058 <col:121> '_Bool' lvalue Var 0x55cc0dc4b178 'z$r_buff1_thd3' '_Bool'
|   |       |-ImplicitCastExpr 0x55cc0dc50288 <col:138> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x55cc0dc500e8 <col:138> 'int' lvalue Var 0x55cc0dc4b2f0 'z$w_buff0' 'int'
|   |       `-ParenExpr 0x55cc0dc50268 <col:150, col:207> 'int'
|   |         `-ConditionalOperator 0x55cc0dc50238 <col:151, col:198> 'int'
|   |           |-BinaryOperator 0x55cc0dc501a8 <col:151, col:169> 'int' '&&'
|   |           | |-ImplicitCastExpr 0x55cc0dc50160 <col:151> 'int' <IntegralCast>
|   |           | | `-ImplicitCastExpr 0x55cc0dc50148 <col:151> '_Bool' <LValueToRValue>
|   |           | |   `-DeclRefExpr 0x55cc0dc50108 <col:151> '_Bool' lvalue Var 0x55cc0dc4b368 'z$w_buff0_used' '_Bool'
|   |           | `-ImplicitCastExpr 0x55cc0dc50190 <col:169> 'int' <IntegralCast>
|   |           |   `-ImplicitCastExpr 0x55cc0dc50178 <col:169> '_Bool' <LValueToRValue>
|   |           |     `-DeclRefExpr 0x55cc0dc50128 <col:169> '_Bool' lvalue Var 0x55cc0dc4af98 'z$r_buff0_thd3' '_Bool'
|   |           |-ImplicitCastExpr 0x55cc0dc50208 <col:186> 'int' <LValueToRValue>
|   |           | `-DeclRefExpr 0x55cc0dc501c8 <col:186> 'int' lvalue Var 0x55cc0dc4b2f0 'z$w_buff0' 'int'
|   |           `-ImplicitCastExpr 0x55cc0dc50220 <col:198> 'int' <LValueToRValue>
|   |             `-DeclRefExpr 0x55cc0dc501e8 <col:198> 'int' lvalue Var 0x55cc0dc4b2f0 'z$w_buff0' 'int'
|   |-BinaryOperator 0x55cc0dc50878 <line:781:3, col:208> 'int' '='
|   | |-DeclRefExpr 0x55cc0dc50388 <col:3> 'int' lvalue Var 0x55cc0dc4b3e8 'z$w_buff1' 'int'
|   | `-ConditionalOperator 0x55cc0dc50848 <col:15, col:208> 'int'
|   |   |-ImplicitCastExpr 0x55cc0dc50818 <col:15> 'int' <IntegralCast>
|   |   | `-ImplicitCastExpr 0x55cc0dc50800 <col:15> '_Bool' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x55cc0dc503a8 <col:15> '_Bool' lvalue Var 0x55cc0dc4b550 'weak$$choice2' '_Bool'
|   |   |-ImplicitCastExpr 0x55cc0dc50830 <col:31> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x55cc0dc503c8 <col:31> 'int' lvalue Var 0x55cc0dc4b3e8 'z$w_buff1' 'int'
|   |   `-ParenExpr 0x55cc0dc507e0 <col:43, col:208> 'int'
|   |     `-ConditionalOperator 0x55cc0dc507b0 <col:44, col:207> 'int'
|   |       |-BinaryOperator 0x55cc0dc505d8 <col:44, col:121> 'int' '||'
|   |       | |-BinaryOperator 0x55cc0dc504f8 <col:44, col:83> 'int' '||'
|   |       | | |-UnaryOperator 0x55cc0dc50420 <col:44, col:45> 'int' prefix '!' cannot overflow
|   |       | | | `-ImplicitCastExpr 0x55cc0dc50408 <col:45> '_Bool' <LValueToRValue>
|   |       | | |   `-DeclRefExpr 0x55cc0dc503e8 <col:45> '_Bool' lvalue Var 0x55cc0dc4b368 'z$w_buff0_used' '_Bool'
|   |       | | `-BinaryOperator 0x55cc0dc504d8 <col:63, col:83> 'int' '&&'
|   |       | |   |-UnaryOperator 0x55cc0dc50470 <col:63, col:64> 'int' prefix '!' cannot overflow
|   |       | |   | `-ImplicitCastExpr 0x55cc0dc50458 <col:64> '_Bool' <LValueToRValue>
|   |       | |   |   `-DeclRefExpr 0x55cc0dc50438 <col:64> '_Bool' lvalue Var 0x55cc0dc4af98 'z$r_buff0_thd3' '_Bool'
|   |       | |   `-UnaryOperator 0x55cc0dc504c0 <col:82, col:83> 'int' prefix '!' cannot overflow
|   |       | |     `-ImplicitCastExpr 0x55cc0dc504a8 <col:83> '_Bool' <LValueToRValue>
|   |       | |       `-DeclRefExpr 0x55cc0dc50488 <col:83> '_Bool' lvalue Var 0x55cc0dc4b460 'z$w_buff1_used' '_Bool'
|   |       | `-BinaryOperator 0x55cc0dc505b8 <col:101, col:121> 'int' '&&'
|   |       |   |-UnaryOperator 0x55cc0dc50550 <col:101, col:102> 'int' prefix '!' cannot overflow
|   |       |   | `-ImplicitCastExpr 0x55cc0dc50538 <col:102> '_Bool' <LValueToRValue>
|   |       |   |   `-DeclRefExpr 0x55cc0dc50518 <col:102> '_Bool' lvalue Var 0x55cc0dc4af98 'z$r_buff0_thd3' '_Bool'
|   |       |   `-UnaryOperator 0x55cc0dc505a0 <col:120, col:121> 'int' prefix '!' cannot overflow
|   |       |     `-ImplicitCastExpr 0x55cc0dc50588 <col:121> '_Bool' <LValueToRValue>
|   |       |       `-DeclRefExpr 0x55cc0dc50568 <col:121> '_Bool' lvalue Var 0x55cc0dc4b178 'z$r_buff1_thd3' '_Bool'
|   |       |-ImplicitCastExpr 0x55cc0dc50798 <col:138> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x55cc0dc505f8 <col:138> 'int' lvalue Var 0x55cc0dc4b3e8 'z$w_buff1' 'int'
|   |       `-ParenExpr 0x55cc0dc50778 <col:150, col:207> 'int'
|   |         `-ConditionalOperator 0x55cc0dc50748 <col:151, col:198> 'int'
|   |           |-BinaryOperator 0x55cc0dc506b8 <col:151, col:169> 'int' '&&'
|   |           | |-ImplicitCastExpr 0x55cc0dc50670 <col:151> 'int' <IntegralCast>
|   |           | | `-ImplicitCastExpr 0x55cc0dc50658 <col:151> '_Bool' <LValueToRValue>
|   |           | |   `-DeclRefExpr 0x55cc0dc50618 <col:151> '_Bool' lvalue Var 0x55cc0dc4b368 'z$w_buff0_used' '_Bool'
|   |           | `-ImplicitCastExpr 0x55cc0dc506a0 <col:169> 'int' <IntegralCast>
|   |           |   `-ImplicitCastExpr 0x55cc0dc50688 <col:169> '_Bool' <LValueToRValue>
|   |           |     `-DeclRefExpr 0x55cc0dc50638 <col:169> '_Bool' lvalue Var 0x55cc0dc4af98 'z$r_buff0_thd3' '_Bool'
|   |           |-ImplicitCastExpr 0x55cc0dc50718 <col:186> 'int' <LValueToRValue>
|   |           | `-DeclRefExpr 0x55cc0dc506d8 <col:186> 'int' lvalue Var 0x55cc0dc4b3e8 'z$w_buff1' 'int'
|   |           `-ImplicitCastExpr 0x55cc0dc50730 <col:198> 'int' <LValueToRValue>
|   |             `-DeclRefExpr 0x55cc0dc506f8 <col:198> 'int' lvalue Var 0x55cc0dc4b3e8 'z$w_buff1' 'int'
|   |-BinaryOperator 0x55cc0dc50e38 <line:782:3, col:227> '_Bool' '='
|   | |-DeclRefExpr 0x55cc0dc50898 <col:3> '_Bool' lvalue Var 0x55cc0dc4b368 'z$w_buff0_used' '_Bool'
|   | `-ImplicitCastExpr 0x55cc0dc50e20 <col:20, col:227> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55cc0dc50df0 <col:20, col:227> 'int'
|   |     |-ImplicitCastExpr 0x55cc0dc50da8 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x55cc0dc50d90 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x55cc0dc508b8 <col:20> '_Bool' lvalue Var 0x55cc0dc4b550 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x55cc0dc50dd8 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x55cc0dc50dc0 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x55cc0dc508d8 <col:36> '_Bool' lvalue Var 0x55cc0dc4b368 'z$w_buff0_used' '_Bool'
|   |     `-ParenExpr 0x55cc0dc50d70 <col:53, col:227> 'int'
|   |       `-ConditionalOperator 0x55cc0dc50d40 <col:54, col:226> 'int'
|   |         |-BinaryOperator 0x55cc0dc50ae8 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x55cc0dc50a08 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x55cc0dc50930 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x55cc0dc50918 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x55cc0dc508f8 <col:55> '_Bool' lvalue Var 0x55cc0dc4b368 'z$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x55cc0dc509e8 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x55cc0dc50980 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x55cc0dc50968 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x55cc0dc50948 <col:74> '_Bool' lvalue Var 0x55cc0dc4af98 'z$r_buff0_thd3' '_Bool'
|   |         | |   `-UnaryOperator 0x55cc0dc509d0 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x55cc0dc509b8 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x55cc0dc50998 <col:93> '_Bool' lvalue Var 0x55cc0dc4b460 'z$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x55cc0dc50ac8 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x55cc0dc50a60 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x55cc0dc50a48 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x55cc0dc50a28 <col:112> '_Bool' lvalue Var 0x55cc0dc4af98 'z$r_buff0_thd3' '_Bool'
|   |         |   `-UnaryOperator 0x55cc0dc50ab0 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x55cc0dc50a98 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x55cc0dc50a78 <col:131> '_Bool' lvalue Var 0x55cc0dc4b178 'z$r_buff1_thd3' '_Bool'
|   |         |-ImplicitCastExpr 0x55cc0dc50d28 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x55cc0dc50d10 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x55cc0dc50b08 <col:148> '_Bool' lvalue Var 0x55cc0dc4b368 'z$w_buff0_used' '_Bool'
|   |         `-ParenExpr 0x55cc0dc50cf0 <col:165, col:226> 'int'
|   |           `-ConditionalOperator 0x55cc0dc50cc0 <col:166, col:212> 'int'
|   |             |-BinaryOperator 0x55cc0dc50be0 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x55cc0dc50b98 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x55cc0dc50b80 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x55cc0dc50b28 <col:166> '_Bool' lvalue Var 0x55cc0dc4b368 'z$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x55cc0dc50bc8 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x55cc0dc50bb0 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x55cc0dc50b60 <col:184> '_Bool' lvalue Var 0x55cc0dc4af98 'z$r_buff0_thd3' '_Bool'
|   |             |-ImplicitCastExpr 0x55cc0dc50c78 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x55cc0dc50c30 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x55cc0dc50c00 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x55cc0dc50ca8 <col:212> 'int' <IntegralCast>
|   |               `-ImplicitCastExpr 0x55cc0dc50c90 <col:212> '_Bool' <LValueToRValue>
|   |                 `-DeclRefExpr 0x55cc0dc50c58 <col:212> '_Bool' lvalue Var 0x55cc0dc4b368 'z$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x55cc0dc51400 <line:783:3, col:221> '_Bool' '='
|   | |-DeclRefExpr 0x55cc0dc50e58 <col:3> '_Bool' lvalue Var 0x55cc0dc4b460 'z$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x55cc0dc513e8 <col:20, col:221> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55cc0dc513b8 <col:20, col:221> 'int'
|   |     |-ImplicitCastExpr 0x55cc0dc51370 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x55cc0dc51358 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x55cc0dc50e78 <col:20> '_Bool' lvalue Var 0x55cc0dc4b550 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x55cc0dc513a0 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x55cc0dc51388 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x55cc0dc50e98 <col:36> '_Bool' lvalue Var 0x55cc0dc4b460 'z$w_buff1_used' '_Bool'
|   |     `-ParenExpr 0x55cc0dc51338 <col:53, col:221> 'int'
|   |       `-ConditionalOperator 0x55cc0dc51308 <col:54, col:220> 'int'
|   |         |-BinaryOperator 0x55cc0dc510a8 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x55cc0dc50fc8 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x55cc0dc50ef0 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x55cc0dc50ed8 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x55cc0dc50eb8 <col:55> '_Bool' lvalue Var 0x55cc0dc4b368 'z$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x55cc0dc50fa8 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x55cc0dc50f40 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x55cc0dc50f28 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x55cc0dc50f08 <col:74> '_Bool' lvalue Var 0x55cc0dc4af98 'z$r_buff0_thd3' '_Bool'
|   |         | |   `-UnaryOperator 0x55cc0dc50f90 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x55cc0dc50f78 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x55cc0dc50f58 <col:93> '_Bool' lvalue Var 0x55cc0dc4b460 'z$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x55cc0dc51088 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x55cc0dc51020 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x55cc0dc51008 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x55cc0dc50fe8 <col:112> '_Bool' lvalue Var 0x55cc0dc4af98 'z$r_buff0_thd3' '_Bool'
|   |         |   `-UnaryOperator 0x55cc0dc51070 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x55cc0dc51058 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x55cc0dc51038 <col:131> '_Bool' lvalue Var 0x55cc0dc4b178 'z$r_buff1_thd3' '_Bool'
|   |         |-ImplicitCastExpr 0x55cc0dc512f0 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x55cc0dc512d8 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x55cc0dc510c8 <col:148> '_Bool' lvalue Var 0x55cc0dc4b460 'z$w_buff1_used' '_Bool'
|   |         `-ParenExpr 0x55cc0dc512b8 <col:165, col:220> 'int'
|   |           `-ConditionalOperator 0x55cc0dc51288 <col:166, col:219> 'int'
|   |             |-BinaryOperator 0x55cc0dc51188 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x55cc0dc51140 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x55cc0dc51128 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x55cc0dc510e8 <col:166> '_Bool' lvalue Var 0x55cc0dc4b368 'z$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x55cc0dc51170 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x55cc0dc51158 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x55cc0dc51108 <col:184> '_Bool' lvalue Var 0x55cc0dc4af98 'z$r_buff0_thd3' '_Bool'
|   |             |-ImplicitCastExpr 0x55cc0dc51258 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x55cc0dc511d8 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x55cc0dc511a8 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x55cc0dc51270 <col:212, col:219> 'int' <IntegralCast>
|   |               `-CStyleCastExpr 0x55cc0dc51230 <col:212, col:219> '_Bool' <IntegralToBoolean>
|   |                 `-IntegerLiteral 0x55cc0dc51200 <col:219> 'int' 0
|   |-BinaryOperator 0x55cc0dc519a8 <line:784:3, col:227> '_Bool' '='
|   | |-DeclRefExpr 0x55cc0dc51420 <col:3> '_Bool' lvalue Var 0x55cc0dc4af98 'z$r_buff0_thd3' '_Bool'
|   | `-ImplicitCastExpr 0x55cc0dc51990 <col:20, col:227> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55cc0dc51960 <col:20, col:227> 'int'
|   |     |-ImplicitCastExpr 0x55cc0dc51918 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x55cc0dc51900 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x55cc0dc51440 <col:20> '_Bool' lvalue Var 0x55cc0dc4b550 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x55cc0dc51948 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x55cc0dc51930 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x55cc0dc51460 <col:36> '_Bool' lvalue Var 0x55cc0dc4af98 'z$r_buff0_thd3' '_Bool'
|   |     `-ParenExpr 0x55cc0dc518e0 <col:53, col:227> 'int'
|   |       `-ConditionalOperator 0x55cc0dc518b0 <col:54, col:226> 'int'
|   |         |-BinaryOperator 0x55cc0dc51670 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x55cc0dc51590 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x55cc0dc514b8 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x55cc0dc514a0 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x55cc0dc51480 <col:55> '_Bool' lvalue Var 0x55cc0dc4b368 'z$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x55cc0dc51570 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x55cc0dc51508 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x55cc0dc514f0 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x55cc0dc514d0 <col:74> '_Bool' lvalue Var 0x55cc0dc4af98 'z$r_buff0_thd3' '_Bool'
|   |         | |   `-UnaryOperator 0x55cc0dc51558 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x55cc0dc51540 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x55cc0dc51520 <col:93> '_Bool' lvalue Var 0x55cc0dc4b460 'z$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x55cc0dc51650 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x55cc0dc515e8 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x55cc0dc515d0 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x55cc0dc515b0 <col:112> '_Bool' lvalue Var 0x55cc0dc4af98 'z$r_buff0_thd3' '_Bool'
|   |         |   `-UnaryOperator 0x55cc0dc51638 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x55cc0dc51620 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x55cc0dc51600 <col:131> '_Bool' lvalue Var 0x55cc0dc4b178 'z$r_buff1_thd3' '_Bool'
|   |         |-ImplicitCastExpr 0x55cc0dc51898 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x55cc0dc51880 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x55cc0dc51690 <col:148> '_Bool' lvalue Var 0x55cc0dc4af98 'z$r_buff0_thd3' '_Bool'
|   |         `-ParenExpr 0x55cc0dc51860 <col:165, col:226> 'int'
|   |           `-ConditionalOperator 0x55cc0dc51830 <col:166, col:212> 'int'
|   |             |-BinaryOperator 0x55cc0dc51750 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x55cc0dc51708 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x55cc0dc516f0 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x55cc0dc516b0 <col:166> '_Bool' lvalue Var 0x55cc0dc4b368 'z$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x55cc0dc51738 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x55cc0dc51720 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x55cc0dc516d0 <col:184> '_Bool' lvalue Var 0x55cc0dc4af98 'z$r_buff0_thd3' '_Bool'
|   |             |-ImplicitCastExpr 0x55cc0dc517e8 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x55cc0dc517a0 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x55cc0dc51770 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x55cc0dc51818 <col:212> 'int' <IntegralCast>
|   |               `-ImplicitCastExpr 0x55cc0dc51800 <col:212> '_Bool' <LValueToRValue>
|   |                 `-DeclRefExpr 0x55cc0dc517c8 <col:212> '_Bool' lvalue Var 0x55cc0dc4af98 'z$r_buff0_thd3' '_Bool'
|   |-BinaryOperator 0x55cc0dc51f88 <line:785:3, col:221> '_Bool' '='
|   | |-DeclRefExpr 0x55cc0dc519c8 <col:3> '_Bool' lvalue Var 0x55cc0dc4b178 'z$r_buff1_thd3' '_Bool'
|   | `-ImplicitCastExpr 0x55cc0dc51f70 <col:20, col:221> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55cc0dc51f40 <col:20, col:221> 'int'
|   |     |-ImplicitCastExpr 0x55cc0dc51ef8 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x55cc0dc51ee0 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x55cc0dc519e8 <col:20> '_Bool' lvalue Var 0x55cc0dc4b550 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x55cc0dc51f28 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x55cc0dc51f10 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x55cc0dc51a08 <col:36> '_Bool' lvalue Var 0x55cc0dc4b178 'z$r_buff1_thd3' '_Bool'
|   |     `-ParenExpr 0x55cc0dc51ec0 <col:53, col:221> 'int'
|   |       `-ConditionalOperator 0x55cc0dc51e90 <col:54, col:220> 'int'
|   |         |-BinaryOperator 0x55cc0dc51c30 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x55cc0dc51b38 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x55cc0dc51a60 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x55cc0dc51a48 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x55cc0dc51a28 <col:55> '_Bool' lvalue Var 0x55cc0dc4b368 'z$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x55cc0dc51b18 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x55cc0dc51ab0 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x55cc0dc51a98 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x55cc0dc51a78 <col:74> '_Bool' lvalue Var 0x55cc0dc4af98 'z$r_buff0_thd3' '_Bool'
|   |         | |   `-UnaryOperator 0x55cc0dc51b00 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x55cc0dc51ae8 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x55cc0dc51ac8 <col:93> '_Bool' lvalue Var 0x55cc0dc4b460 'z$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x55cc0dc51c10 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x55cc0dc51ba8 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x55cc0dc51b90 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x55cc0dc51b70 <col:112> '_Bool' lvalue Var 0x55cc0dc4af98 'z$r_buff0_thd3' '_Bool'
|   |         |   `-UnaryOperator 0x55cc0dc51bf8 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x55cc0dc51be0 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x55cc0dc51bc0 <col:131> '_Bool' lvalue Var 0x55cc0dc4b178 'z$r_buff1_thd3' '_Bool'
|   |         |-ImplicitCastExpr 0x55cc0dc51e78 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x55cc0dc51e60 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x55cc0dc51c50 <col:148> '_Bool' lvalue Var 0x55cc0dc4b178 'z$r_buff1_thd3' '_Bool'
|   |         `-ParenExpr 0x55cc0dc51e40 <col:165, col:220> 'int'
|   |           `-ConditionalOperator 0x55cc0dc51e10 <col:166, col:219> 'int'
|   |             |-BinaryOperator 0x55cc0dc51d10 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x55cc0dc51cc8 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x55cc0dc51cb0 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x55cc0dc51c70 <col:166> '_Bool' lvalue Var 0x55cc0dc4b368 'z$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x55cc0dc51cf8 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x55cc0dc51ce0 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x55cc0dc51c90 <col:184> '_Bool' lvalue Var 0x55cc0dc4af98 'z$r_buff0_thd3' '_Bool'
|   |             |-ImplicitCastExpr 0x55cc0dc51de0 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x55cc0dc51d60 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x55cc0dc51d30 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x55cc0dc51df8 <col:212, col:219> 'int' <IntegralCast>
|   |               `-CStyleCastExpr 0x55cc0dc51db8 <col:212, col:219> '_Bool' <IntegralToBoolean>
|   |                 `-IntegerLiteral 0x55cc0dc51d88 <col:219> 'int' 0
|   |-BinaryOperator 0x55cc0dc52000 <line:786:3, col:25> 'int' '='
|   | |-DeclRefExpr 0x55cc0dc51fa8 <col:3> 'int' lvalue Var 0x55cc0dc4a5a0 '__unbuffered_p2_EAX' 'int'
|   | `-ImplicitCastExpr 0x55cc0dc51fe8 <col:25> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x55cc0dc51fc8 <col:25> 'int' lvalue Var 0x55cc0dc4aca0 'z' 'int'
|   |-BinaryOperator 0x55cc0dc52130 <line:787:3, col:37> 'int' '='
|   | |-DeclRefExpr 0x55cc0dc52020 <col:3> 'int' lvalue Var 0x55cc0dc4aca0 'z' 'int'
|   | `-ConditionalOperator 0x55cc0dc52100 <col:7, col:37> 'int'
|   |   |-ImplicitCastExpr 0x55cc0dc520b8 <col:7> 'int' <IntegralCast>
|   |   | `-ImplicitCastExpr 0x55cc0dc520a0 <col:7> '_Bool' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x55cc0dc52040 <col:7> '_Bool' lvalue Var 0x55cc0dc4ad38 'z$flush_delayed' '_Bool'
|   |   |-ImplicitCastExpr 0x55cc0dc520d0 <col:25> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x55cc0dc52060 <col:25> 'int' lvalue Var 0x55cc0dc4adb8 'z$mem_tmp' 'int'
|   |   `-ImplicitCastExpr 0x55cc0dc520e8 <col:37> 'int' <LValueToRValue>
|   |     `-DeclRefExpr 0x55cc0dc52080 <col:37> 'int' lvalue Var 0x55cc0dc4aca0 'z' 'int'
|   |-BinaryOperator 0x55cc0dc521c8 <line:788:3, col:28> '_Bool' '='
|   | |-DeclRefExpr 0x55cc0dc52150 <col:3> '_Bool' lvalue Var 0x55cc0dc4ad38 'z$flush_delayed' '_Bool'
|   | `-CStyleCastExpr 0x55cc0dc521a0 <col:21, col:28> '_Bool' <IntegralToBoolean>
|   |   `-IntegerLiteral 0x55cc0dc52170 <col:28> 'int' 0
|   |-CallExpr 0x55cc0dc52220 <line:789:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x55cc0dc52208 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55cc0dc521e8 <col:3> 'void ()' Function 0x55cc0dbf0f00 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x55cc0dc52278 <line:790:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x55cc0dc52260 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55cc0dc52240 <col:3> 'void ()' Function 0x55cc0dbf0e40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x55cc0dc522f0 <line:791:3, col:25> 'int' '='
|   | |-DeclRefExpr 0x55cc0dc52298 <col:3> 'int' lvalue Var 0x55cc0dc4a6c0 '__unbuffered_p2_EBX' 'int'
|   | `-ImplicitCastExpr 0x55cc0dc522d8 <col:25> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x55cc0dc522b8 <col:25> 'int' lvalue Var 0x55cc0dc4a7e0 'a' 'int'
|   |-CallExpr 0x55cc0dc52348 <line:792:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x55cc0dc52330 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55cc0dc52310 <col:3> 'void ()' Function 0x55cc0dbf0f00 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x55cc0dc523a0 <line:793:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x55cc0dc52388 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55cc0dc52368 <col:3> 'void ()' Function 0x55cc0dbf0e40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x55cc0dc52688 <line:794:3, col:103> 'int' '='
|   | |-DeclRefExpr 0x55cc0dc523c0 <col:3> 'int' lvalue Var 0x55cc0dc4aca0 'z' 'int'
|   | `-ConditionalOperator 0x55cc0dc52658 <col:7, col:103> 'int'
|   |   |-BinaryOperator 0x55cc0dc52480 <col:7, col:25> 'int' '&&'
|   |   | |-ImplicitCastExpr 0x55cc0dc52438 <col:7> 'int' <IntegralCast>
|   |   | | `-ImplicitCastExpr 0x55cc0dc52420 <col:7> '_Bool' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x55cc0dc523e0 <col:7> '_Bool' lvalue Var 0x55cc0dc4b368 'z$w_buff0_used' '_Bool'
|   |   | `-ImplicitCastExpr 0x55cc0dc52468 <col:25> 'int' <IntegralCast>
|   |   |   `-ImplicitCastExpr 0x55cc0dc52450 <col:25> '_Bool' <LValueToRValue>
|   |   |     `-DeclRefExpr 0x55cc0dc52400 <col:25> '_Bool' lvalue Var 0x55cc0dc4af98 'z$r_buff0_thd3' '_Bool'
|   |   |-ImplicitCastExpr 0x55cc0dc52640 <col:42> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x55cc0dc524a0 <col:42> 'int' lvalue Var 0x55cc0dc4b2f0 'z$w_buff0' 'int'
|   |   `-ParenExpr 0x55cc0dc52620 <col:54, col:103> 'int'
|   |     `-ConditionalOperator 0x55cc0dc525f0 <col:55, col:102> 'int'
|   |       |-BinaryOperator 0x55cc0dc52560 <col:55, col:73> 'int' '&&'
|   |       | |-ImplicitCastExpr 0x55cc0dc52518 <col:55> 'int' <IntegralCast>
|   |       | | `-ImplicitCastExpr 0x55cc0dc52500 <col:55> '_Bool' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x55cc0dc524c0 <col:55> '_Bool' lvalue Var 0x55cc0dc4b460 'z$w_buff1_used' '_Bool'
|   |       | `-ImplicitCastExpr 0x55cc0dc52548 <col:73> 'int' <IntegralCast>
|   |       |   `-ImplicitCastExpr 0x55cc0dc52530 <col:73> '_Bool' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x55cc0dc524e0 <col:73> '_Bool' lvalue Var 0x55cc0dc4b178 'z$r_buff1_thd3' '_Bool'
|   |       |-ImplicitCastExpr 0x55cc0dc525c0 <col:90> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x55cc0dc52580 <col:90> 'int' lvalue Var 0x55cc0dc4b3e8 'z$w_buff1' 'int'
|   |       `-ImplicitCastExpr 0x55cc0dc525d8 <col:102> 'int' <LValueToRValue>
|   |         `-DeclRefExpr 0x55cc0dc525a0 <col:102> 'int' lvalue Var 0x55cc0dc4aca0 'z' 'int'
|   |-BinaryOperator 0x55cc0dc52890 <line:795:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x55cc0dc526a8 <col:3> '_Bool' lvalue Var 0x55cc0dc4b368 'z$w_buff0_used' '_Bool'
|   | `-ImplicitCastExpr 0x55cc0dc52878 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55cc0dc52848 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x55cc0dc52768 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x55cc0dc52720 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x55cc0dc52708 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x55cc0dc526c8 <col:20> '_Bool' lvalue Var 0x55cc0dc4b368 'z$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x55cc0dc52750 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x55cc0dc52738 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x55cc0dc526e8 <col:38> '_Bool' lvalue Var 0x55cc0dc4af98 'z$r_buff0_thd3' '_Bool'
|   |     |-ImplicitCastExpr 0x55cc0dc52800 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x55cc0dc527b8 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x55cc0dc52788 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x55cc0dc52830 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x55cc0dc52818 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x55cc0dc527e0 <col:66> '_Bool' lvalue Var 0x55cc0dc4b368 'z$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x55cc0dc52b98 <line:796:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x55cc0dc528b0 <col:3> '_Bool' lvalue Var 0x55cc0dc4b460 'z$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x55cc0dc52b80 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55cc0dc52b30 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x55cc0dc52a50 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x55cc0dc52970 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x55cc0dc52928 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x55cc0dc52910 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x55cc0dc528d0 <col:20> '_Bool' lvalue Var 0x55cc0dc4b368 'z$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x55cc0dc52958 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x55cc0dc52940 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x55cc0dc528f0 <col:38> '_Bool' lvalue Var 0x55cc0dc4af98 'z$r_buff0_thd3' '_Bool'
|   |     | `-BinaryOperator 0x55cc0dc52a30 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x55cc0dc529e8 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x55cc0dc529d0 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x55cc0dc52990 <col:56> '_Bool' lvalue Var 0x55cc0dc4b460 'z$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x55cc0dc52a18 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x55cc0dc52a00 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x55cc0dc529b0 <col:74> '_Bool' lvalue Var 0x55cc0dc4b178 'z$r_buff1_thd3' '_Bool'
|   |     |-ImplicitCastExpr 0x55cc0dc52ae8 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x55cc0dc52aa0 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x55cc0dc52a70 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x55cc0dc52b18 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x55cc0dc52b00 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x55cc0dc52ac8 <col:102> '_Bool' lvalue Var 0x55cc0dc4b460 'z$w_buff1_used' '_Bool'
|   |-BinaryOperator 0x55cc0dc52da0 <line:797:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x55cc0dc52bb8 <col:3> '_Bool' lvalue Var 0x55cc0dc4af98 'z$r_buff0_thd3' '_Bool'
|   | `-ImplicitCastExpr 0x55cc0dc52d88 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55cc0dc52d58 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x55cc0dc52c78 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x55cc0dc52c30 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x55cc0dc52c18 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x55cc0dc52bd8 <col:20> '_Bool' lvalue Var 0x55cc0dc4b368 'z$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x55cc0dc52c60 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x55cc0dc52c48 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x55cc0dc52bf8 <col:38> '_Bool' lvalue Var 0x55cc0dc4af98 'z$r_buff0_thd3' '_Bool'
|   |     |-ImplicitCastExpr 0x55cc0dc52d10 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x55cc0dc52cc8 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x55cc0dc52c98 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x55cc0dc52d40 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x55cc0dc52d28 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x55cc0dc52cf0 <col:66> '_Bool' lvalue Var 0x55cc0dc4af98 'z$r_buff0_thd3' '_Bool'
|   |-BinaryOperator 0x55cc0dc53088 <line:798:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x55cc0dc52dc0 <col:3> '_Bool' lvalue Var 0x55cc0dc4b178 'z$r_buff1_thd3' '_Bool'
|   | `-ImplicitCastExpr 0x55cc0dc53070 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55cc0dc53040 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x55cc0dc52f60 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x55cc0dc52e80 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x55cc0dc52e38 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x55cc0dc52e20 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x55cc0dc52de0 <col:20> '_Bool' lvalue Var 0x55cc0dc4b368 'z$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x55cc0dc52e68 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x55cc0dc52e50 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x55cc0dc52e00 <col:38> '_Bool' lvalue Var 0x55cc0dc4af98 'z$r_buff0_thd3' '_Bool'
|   |     | `-BinaryOperator 0x55cc0dc52f40 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x55cc0dc52ef8 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x55cc0dc52ee0 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x55cc0dc52ea0 <col:56> '_Bool' lvalue Var 0x55cc0dc4b460 'z$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x55cc0dc52f28 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x55cc0dc52f10 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x55cc0dc52ec0 <col:74> '_Bool' lvalue Var 0x55cc0dc4b178 'z$r_buff1_thd3' '_Bool'
|   |     |-ImplicitCastExpr 0x55cc0dc52ff8 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x55cc0dc52fb0 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x55cc0dc52f80 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x55cc0dc53028 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x55cc0dc53010 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x55cc0dc52fd8 <col:102> '_Bool' lvalue Var 0x55cc0dc4b178 'z$r_buff1_thd3' '_Bool'
|   |-CallExpr 0x55cc0dc530e0 <line:799:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x55cc0dc530c8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55cc0dc530a8 <col:3> 'void ()' Function 0x55cc0dbf0f00 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x55cc0dc53138 <line:800:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x55cc0dc53120 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55cc0dc53100 <col:3> 'void ()' Function 0x55cc0dbf0e40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x55cc0dc531f0 <line:801:3, col:41> 'int' '='
|   | |-DeclRefExpr 0x55cc0dc53158 <col:3> 'int' lvalue Var 0x55cc0dc4a120 '__unbuffered_cnt' 'int'
|   | `-BinaryOperator 0x55cc0dc531d0 <col:22, col:41> 'int' '+'
|   |   |-ImplicitCastExpr 0x55cc0dc531b8 <col:22> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x55cc0dc53178 <col:22> 'int' lvalue Var 0x55cc0dc4a120 '__unbuffered_cnt' 'int'
|   |   `-IntegerLiteral 0x55cc0dc53198 <col:41> 'int' 1
|   |-CallExpr 0x55cc0dc53248 <line:802:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x55cc0dc53230 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55cc0dc53210 <col:3> 'void ()' Function 0x55cc0dbf0f00 '__VERIFIER_atomic_end' 'void ()'
|   `-ReturnStmt 0x55cc0dc532c0 <line:803:3, col:36>
|     `-CallExpr 0x55cc0dc532a0 <col:10, col:36> 'void *'
|       `-ImplicitCastExpr 0x55cc0dc53288 <col:10> 'void *(*)(void)' <FunctionToPointerDecay>
|         `-DeclRefExpr 0x55cc0dc53268 <col:10> 'void *(void)' Function 0x55cc0dbf0958 '__VERIFIER_nondet_pointer' 'void *(void)'
|-FunctionDecl 0x55cc0dc53450 prev 0x55cc0dc49e68 <line:805:1, line:807:1> line:805:6 fence 'void ()'
| `-CompoundStmt 0x55cc0dc534f0 <line:806:1, line:807:1>
|-FunctionDecl 0x55cc0dc53520 prev 0x55cc0dc49f28 <line:808:1, line:810:1> line:808:6 isync 'void ()'
| `-CompoundStmt 0x55cc0dc535c0 <line:809:1, line:810:1>
|-FunctionDecl 0x55cc0dc535f0 prev 0x55cc0dc49fe8 <line:811:1, line:813:1> line:811:6 lwfence 'void ()'
| `-CompoundStmt 0x55cc0dc53690 <line:812:1, line:813:1>
`-FunctionDecl 0x55cc0dc536f8 <line:814:1, line:838:1> line:814:5 main 'int ()'
  `-CompoundStmt 0x55cc0dc55488 <line:815:1, line:838:1>
    |-DeclStmt 0x55cc0dc53810 <line:816:3, col:17>
    | `-VarDecl 0x55cc0dc537a8 <col:3, col:13> col:13 used t408 'pthread_t':'unsigned long'
    |-CallExpr 0x55cc0dc53a18 <line:817:3, col:53> 'int'
    | |-ImplicitCastExpr 0x55cc0dc53a00 <col:3> 'int (*)(pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x55cc0dc53828 <col:3> 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' Function 0x55cc0dc31488 'pthread_create' 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)'
    | |-UnaryOperator 0x55cc0dc53868 <col:18, col:19> 'pthread_t *' prefix '&' cannot overflow
    | | `-DeclRefExpr 0x55cc0dc53848 <col:19> 'pthread_t':'unsigned long' lvalue Var 0x55cc0dc537a8 't408' 'pthread_t':'unsigned long'
    | |-ImplicitCastExpr 0x55cc0dc53a58 <col:25, col:35> 'const pthread_attr_t *' <NullToPointer>
    | | `-ParenExpr 0x55cc0dc538e0 <col:25, col:35> 'void *'
    | |   `-CStyleCastExpr 0x55cc0dc538b8 <col:26, col:34> 'void *' <NullToPointer>
    | |     `-IntegerLiteral 0x55cc0dc53880 <col:34> 'int' 0
    | |-ImplicitCastExpr 0x55cc0dc53a70 <col:38> 'void *(*)(void *)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x55cc0dc53900 <col:38> 'void *(void *)' Function 0x55cc0dc4b668 'P0' 'void *(void *)'
    | `-ParenExpr 0x55cc0dc53980 <col:42, col:52> 'void *'
    |   `-CStyleCastExpr 0x55cc0dc53958 <col:43, col:51> 'void *' <NullToPointer>
    |     `-IntegerLiteral 0x55cc0dc53920 <col:51> 'int' 0
    |-DeclStmt 0x55cc0dc53b00 <line:818:3, col:17>
    | `-VarDecl 0x55cc0dc53a98 <col:3, col:13> col:13 used t409 'pthread_t':'unsigned long'
    |-CallExpr 0x55cc0dc53cc8 <line:819:3, col:53> 'int'
    | |-ImplicitCastExpr 0x55cc0dc53cb0 <col:3> 'int (*)(pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x55cc0dc53b18 <col:3> 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' Function 0x55cc0dc31488 'pthread_create' 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)'
    | |-UnaryOperator 0x55cc0dc53b58 <col:18, col:19> 'pthread_t *' prefix '&' cannot overflow
    | | `-DeclRefExpr 0x55cc0dc53b38 <col:19> 'pthread_t':'unsigned long' lvalue Var 0x55cc0dc53a98 't409' 'pthread_t':'unsigned long'
    | |-ImplicitCastExpr 0x55cc0dc53d08 <col:25, col:35> 'const pthread_attr_t *' <NullToPointer>
    | | `-ParenExpr 0x55cc0dc53bf0 <col:25, col:35> 'void *'
    | |   `-CStyleCastExpr 0x55cc0dc53bc8 <col:26, col:34> 'void *' <NullToPointer>
    | |     `-IntegerLiteral 0x55cc0dc53b90 <col:34> 'int' 0
    | |-ImplicitCastExpr 0x55cc0dc53d20 <col:38> 'void *(*)(void *)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x55cc0dc53c10 <col:38> 'void *(void *)' Function 0x55cc0dc4bfc8 'P1' 'void *(void *)'
    | `-ParenExpr 0x55cc0dc53c90 <col:42, col:52> 'void *'
    |   `-CStyleCastExpr 0x55cc0dc53c68 <col:43, col:51> 'void *' <NullToPointer>
    |     `-IntegerLiteral 0x55cc0dc53c30 <col:51> 'int' 0
    |-DeclStmt 0x55cc0dc53db0 <line:820:3, col:17>
    | `-VarDecl 0x55cc0dc53d48 <col:3, col:13> col:13 used t410 'pthread_t':'unsigned long'
    |-CallExpr 0x55cc0dc53f58 <line:821:3, col:53> 'int'
    | |-ImplicitCastExpr 0x55cc0dc53f40 <col:3> 'int (*)(pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x55cc0dc53dc8 <col:3> 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' Function 0x55cc0dc31488 'pthread_create' 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)'
    | |-UnaryOperator 0x55cc0dc53e08 <col:18, col:19> 'pthread_t *' prefix '&' cannot overflow
    | | `-DeclRefExpr 0x55cc0dc53de8 <col:19> 'pthread_t':'unsigned long' lvalue Var 0x55cc0dc53d48 't410' 'pthread_t':'unsigned long'
    | |-ImplicitCastExpr 0x55cc0dc53f98 <col:25, col:35> 'const pthread_attr_t *' <NullToPointer>
    | | `-ParenExpr 0x55cc0dc53e80 <col:25, col:35> 'void *'
    | |   `-CStyleCastExpr 0x55cc0dc53e58 <col:26, col:34> 'void *' <NullToPointer>
    | |     `-IntegerLiteral 0x55cc0dc53e20 <col:34> 'int' 0
    | |-ImplicitCastExpr 0x55cc0dc53fb0 <col:38> 'void *(*)(void *)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x55cc0dc53ea0 <col:38> 'void *(void *)' Function 0x55cc0dc4f038 'P2' 'void *(void *)'
    | `-ParenExpr 0x55cc0dc53f20 <col:42, col:52> 'void *'
    |   `-CStyleCastExpr 0x55cc0dc53ef8 <col:43, col:51> 'void *' <NullToPointer>
    |     `-IntegerLiteral 0x55cc0dc53ec0 <col:51> 'int' 0
    |-CallExpr 0x55cc0dc54000 <line:822:3, col:27> 'void'
    | `-ImplicitCastExpr 0x55cc0dc53fe8 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x55cc0dc53fc8 <col:3> 'void ()' Function 0x55cc0dbf0e40 '__VERIFIER_atomic_begin' 'void ()'
    |-BinaryOperator 0x55cc0dc540d0 <line:823:3, col:41> '_Bool' '='
    | |-DeclRefExpr 0x55cc0dc54020 <col:3> '_Bool' lvalue Var 0x55cc0dc4a878 'main$tmp_guard0' '_Bool'
    | `-ImplicitCastExpr 0x55cc0dc540b8 <col:21, col:41> '_Bool' <IntegralToBoolean>
    |   `-BinaryOperator 0x55cc0dc54098 <col:21, col:41> 'int' '=='
    |     |-ImplicitCastExpr 0x55cc0dc54080 <col:21> 'int' <LValueToRValue>
    |     | `-DeclRefExpr 0x55cc0dc54040 <col:21> 'int' lvalue Var 0x55cc0dc4a120 '__unbuffered_cnt' 'int'
    |     `-IntegerLiteral 0x55cc0dc54060 <col:41> 'int' 3
    |-CallExpr 0x55cc0dc54128 <line:824:3, col:25> 'void'
    | `-ImplicitCastExpr 0x55cc0dc54110 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x55cc0dc540f0 <col:3> 'void ()' Function 0x55cc0dbf0f00 '__VERIFIER_atomic_end' 'void ()'
    |-CallExpr 0x55cc0dc541a0 <line:825:3, col:36> 'void'
    | |-ImplicitCastExpr 0x55cc0dc54188 <col:3> 'void (*)(int)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x55cc0dc54148 <col:3> 'void (int)' Function 0x55cc0dbf0790 '__VERIFIER_assume' 'void (int)'
    | `-ImplicitCastExpr 0x55cc0dc541e0 <col:21> 'int' <IntegralCast>
    |   `-ImplicitCastExpr 0x55cc0dc541c8 <col:21> '_Bool' <LValueToRValue>
    |     `-DeclRefExpr 0x55cc0dc54168 <col:21> '_Bool' lvalue Var 0x55cc0dc4a878 'main$tmp_guard0' '_Bool'
    |-CallExpr 0x55cc0dc54230 <line:826:3, col:27> 'void'
    | `-ImplicitCastExpr 0x55cc0dc54218 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x55cc0dc541f8 <col:3> 'void ()' Function 0x55cc0dbf0e40 '__VERIFIER_atomic_begin' 'void ()'
    |-BinaryOperator 0x55cc0dc54518 <line:827:3, col:103> 'int' '='
    | |-DeclRefExpr 0x55cc0dc54250 <col:3> 'int' lvalue Var 0x55cc0dc4aca0 'z' 'int'
    | `-ConditionalOperator 0x55cc0dc544e8 <col:7, col:103> 'int'
    |   |-BinaryOperator 0x55cc0dc54310 <col:7, col:25> 'int' '&&'
    |   | |-ImplicitCastExpr 0x55cc0dc542c8 <col:7> 'int' <IntegralCast>
    |   | | `-ImplicitCastExpr 0x55cc0dc542b0 <col:7> '_Bool' <LValueToRValue>
    |   | |   `-DeclRefExpr 0x55cc0dc54270 <col:7> '_Bool' lvalue Var 0x55cc0dc4b368 'z$w_buff0_used' '_Bool'
    |   | `-ImplicitCastExpr 0x55cc0dc542f8 <col:25> 'int' <IntegralCast>
    |   |   `-ImplicitCastExpr 0x55cc0dc542e0 <col:25> '_Bool' <LValueToRValue>
    |   |     `-DeclRefExpr 0x55cc0dc54290 <col:25> '_Bool' lvalue Var 0x55cc0dc4ae30 'z$r_buff0_thd0' '_Bool'
    |   |-ImplicitCastExpr 0x55cc0dc544d0 <col:42> 'int' <LValueToRValue>
    |   | `-DeclRefExpr 0x55cc0dc54330 <col:42> 'int' lvalue Var 0x55cc0dc4b2f0 'z$w_buff0' 'int'
    |   `-ParenExpr 0x55cc0dc544b0 <col:54, col:103> 'int'
    |     `-ConditionalOperator 0x55cc0dc54480 <col:55, col:102> 'int'
    |       |-BinaryOperator 0x55cc0dc543f0 <col:55, col:73> 'int' '&&'
    |       | |-ImplicitCastExpr 0x55cc0dc543a8 <col:55> 'int' <IntegralCast>
    |       | | `-ImplicitCastExpr 0x55cc0dc54390 <col:55> '_Bool' <LValueToRValue>
    |       | |   `-DeclRefExpr 0x55cc0dc54350 <col:55> '_Bool' lvalue Var 0x55cc0dc4b460 'z$w_buff1_used' '_Bool'
    |       | `-ImplicitCastExpr 0x55cc0dc543d8 <col:73> 'int' <IntegralCast>
    |       |   `-ImplicitCastExpr 0x55cc0dc543c0 <col:73> '_Bool' <LValueToRValue>
    |       |     `-DeclRefExpr 0x55cc0dc54370 <col:73> '_Bool' lvalue Var 0x55cc0dc4b010 'z$r_buff1_thd0' '_Bool'
    |       |-ImplicitCastExpr 0x55cc0dc54450 <col:90> 'int' <LValueToRValue>
    |       | `-DeclRefExpr 0x55cc0dc54410 <col:90> 'int' lvalue Var 0x55cc0dc4b3e8 'z$w_buff1' 'int'
    |       `-ImplicitCastExpr 0x55cc0dc54468 <col:102> 'int' <LValueToRValue>
    |         `-DeclRefExpr 0x55cc0dc54430 <col:102> 'int' lvalue Var 0x55cc0dc4aca0 'z' 'int'
    |-BinaryOperator 0x55cc0dc54720 <line:828:3, col:66> '_Bool' '='
    | |-DeclRefExpr 0x55cc0dc54538 <col:3> '_Bool' lvalue Var 0x55cc0dc4b368 'z$w_buff0_used' '_Bool'
    | `-ImplicitCastExpr 0x55cc0dc54708 <col:20, col:66> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x55cc0dc546d8 <col:20, col:66> 'int'
    |     |-BinaryOperator 0x55cc0dc545f8 <col:20, col:38> 'int' '&&'
    |     | |-ImplicitCastExpr 0x55cc0dc545b0 <col:20> 'int' <IntegralCast>
    |     | | `-ImplicitCastExpr 0x55cc0dc54598 <col:20> '_Bool' <LValueToRValue>
    |     | |   `-DeclRefExpr 0x55cc0dc54558 <col:20> '_Bool' lvalue Var 0x55cc0dc4b368 'z$w_buff0_used' '_Bool'
    |     | `-ImplicitCastExpr 0x55cc0dc545e0 <col:38> 'int' <IntegralCast>
    |     |   `-ImplicitCastExpr 0x55cc0dc545c8 <col:38> '_Bool' <LValueToRValue>
    |     |     `-DeclRefExpr 0x55cc0dc54578 <col:38> '_Bool' lvalue Var 0x55cc0dc4ae30 'z$r_buff0_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x55cc0dc54690 <col:55, col:62> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x55cc0dc54648 <col:55, col:62> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x55cc0dc54618 <col:62> 'int' 0
    |     `-ImplicitCastExpr 0x55cc0dc546c0 <col:66> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x55cc0dc546a8 <col:66> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x55cc0dc54670 <col:66> '_Bool' lvalue Var 0x55cc0dc4b368 'z$w_buff0_used' '_Bool'
    |-BinaryOperator 0x55cc0dc54a08 <line:829:3, col:102> '_Bool' '='
    | |-DeclRefExpr 0x55cc0dc54740 <col:3> '_Bool' lvalue Var 0x55cc0dc4b460 'z$w_buff1_used' '_Bool'
    | `-ImplicitCastExpr 0x55cc0dc549f0 <col:20, col:102> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x55cc0dc549c0 <col:20, col:102> 'int'
    |     |-BinaryOperator 0x55cc0dc548e0 <col:20, col:74> 'int' '||'
    |     | |-BinaryOperator 0x55cc0dc54800 <col:20, col:38> 'int' '&&'
    |     | | |-ImplicitCastExpr 0x55cc0dc547b8 <col:20> 'int' <IntegralCast>
    |     | | | `-ImplicitCastExpr 0x55cc0dc547a0 <col:20> '_Bool' <LValueToRValue>
    |     | | |   `-DeclRefExpr 0x55cc0dc54760 <col:20> '_Bool' lvalue Var 0x55cc0dc4b368 'z$w_buff0_used' '_Bool'
    |     | | `-ImplicitCastExpr 0x55cc0dc547e8 <col:38> 'int' <IntegralCast>
    |     | |   `-ImplicitCastExpr 0x55cc0dc547d0 <col:38> '_Bool' <LValueToRValue>
    |     | |     `-DeclRefExpr 0x55cc0dc54780 <col:38> '_Bool' lvalue Var 0x55cc0dc4ae30 'z$r_buff0_thd0' '_Bool'
    |     | `-BinaryOperator 0x55cc0dc548c0 <col:56, col:74> 'int' '&&'
    |     |   |-ImplicitCastExpr 0x55cc0dc54878 <col:56> 'int' <IntegralCast>
    |     |   | `-ImplicitCastExpr 0x55cc0dc54860 <col:56> '_Bool' <LValueToRValue>
    |     |   |   `-DeclRefExpr 0x55cc0dc54820 <col:56> '_Bool' lvalue Var 0x55cc0dc4b460 'z$w_buff1_used' '_Bool'
    |     |   `-ImplicitCastExpr 0x55cc0dc548a8 <col:74> 'int' <IntegralCast>
    |     |     `-ImplicitCastExpr 0x55cc0dc54890 <col:74> '_Bool' <LValueToRValue>
    |     |       `-DeclRefExpr 0x55cc0dc54840 <col:74> '_Bool' lvalue Var 0x55cc0dc4b010 'z$r_buff1_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x55cc0dc54978 <col:91, col:98> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x55cc0dc54930 <col:91, col:98> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x55cc0dc54900 <col:98> 'int' 0
    |     `-ImplicitCastExpr 0x55cc0dc549a8 <col:102> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x55cc0dc54990 <col:102> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x55cc0dc54958 <col:102> '_Bool' lvalue Var 0x55cc0dc4b460 'z$w_buff1_used' '_Bool'
    |-BinaryOperator 0x55cc0dc54c30 <line:830:3, col:66> '_Bool' '='
    | |-DeclRefExpr 0x55cc0dc54a28 <col:3> '_Bool' lvalue Var 0x55cc0dc4ae30 'z$r_buff0_thd0' '_Bool'
    | `-ImplicitCastExpr 0x55cc0dc54c18 <col:20, col:66> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x55cc0dc54be8 <col:20, col:66> 'int'
    |     |-BinaryOperator 0x55cc0dc54ae8 <col:20, col:38> 'int' '&&'
    |     | |-ImplicitCastExpr 0x55cc0dc54aa0 <col:20> 'int' <IntegralCast>
    |     | | `-ImplicitCastExpr 0x55cc0dc54a88 <col:20> '_Bool' <LValueToRValue>
    |     | |   `-DeclRefExpr 0x55cc0dc54a48 <col:20> '_Bool' lvalue Var 0x55cc0dc4b368 'z$w_buff0_used' '_Bool'
    |     | `-ImplicitCastExpr 0x55cc0dc54ad0 <col:38> 'int' <IntegralCast>
    |     |   `-ImplicitCastExpr 0x55cc0dc54ab8 <col:38> '_Bool' <LValueToRValue>
    |     |     `-DeclRefExpr 0x55cc0dc54a68 <col:38> '_Bool' lvalue Var 0x55cc0dc4ae30 'z$r_buff0_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x55cc0dc54ba0 <col:55, col:62> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x55cc0dc54b38 <col:55, col:62> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x55cc0dc54b08 <col:62> 'int' 0
    |     `-ImplicitCastExpr 0x55cc0dc54bd0 <col:66> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x55cc0dc54bb8 <col:66> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x55cc0dc54b60 <col:66> '_Bool' lvalue Var 0x55cc0dc4ae30 'z$r_buff0_thd0' '_Bool'
    |-BinaryOperator 0x55cc0dc54f18 <line:831:3, col:102> '_Bool' '='
    | |-DeclRefExpr 0x55cc0dc54c50 <col:3> '_Bool' lvalue Var 0x55cc0dc4b010 'z$r_buff1_thd0' '_Bool'
    | `-ImplicitCastExpr 0x55cc0dc54f00 <col:20, col:102> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x55cc0dc54ed0 <col:20, col:102> 'int'
    |     |-BinaryOperator 0x55cc0dc54df0 <col:20, col:74> 'int' '||'
    |     | |-BinaryOperator 0x55cc0dc54d10 <col:20, col:38> 'int' '&&'
    |     | | |-ImplicitCastExpr 0x55cc0dc54cc8 <col:20> 'int' <IntegralCast>
    |     | | | `-ImplicitCastExpr 0x55cc0dc54cb0 <col:20> '_Bool' <LValueToRValue>
    |     | | |   `-DeclRefExpr 0x55cc0dc54c70 <col:20> '_Bool' lvalue Var 0x55cc0dc4b368 'z$w_buff0_used' '_Bool'
    |     | | `-ImplicitCastExpr 0x55cc0dc54cf8 <col:38> 'int' <IntegralCast>
    |     | |   `-ImplicitCastExpr 0x55cc0dc54ce0 <col:38> '_Bool' <LValueToRValue>
    |     | |     `-DeclRefExpr 0x55cc0dc54c90 <col:38> '_Bool' lvalue Var 0x55cc0dc4ae30 'z$r_buff0_thd0' '_Bool'
    |     | `-BinaryOperator 0x55cc0dc54dd0 <col:56, col:74> 'int' '&&'
    |     |   |-ImplicitCastExpr 0x55cc0dc54d88 <col:56> 'int' <IntegralCast>
    |     |   | `-ImplicitCastExpr 0x55cc0dc54d70 <col:56> '_Bool' <LValueToRValue>
    |     |   |   `-DeclRefExpr 0x55cc0dc54d30 <col:56> '_Bool' lvalue Var 0x55cc0dc4b460 'z$w_buff1_used' '_Bool'
    |     |   `-ImplicitCastExpr 0x55cc0dc54db8 <col:74> 'int' <IntegralCast>
    |     |     `-ImplicitCastExpr 0x55cc0dc54da0 <col:74> '_Bool' <LValueToRValue>
    |     |       `-DeclRefExpr 0x55cc0dc54d50 <col:74> '_Bool' lvalue Var 0x55cc0dc4b010 'z$r_buff1_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x55cc0dc54e88 <col:91, col:98> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x55cc0dc54e40 <col:91, col:98> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x55cc0dc54e10 <col:98> 'int' 0
    |     `-ImplicitCastExpr 0x55cc0dc54eb8 <col:102> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x55cc0dc54ea0 <col:102> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x55cc0dc54e68 <col:102> '_Bool' lvalue Var 0x55cc0dc4b010 'z$r_buff1_thd0' '_Bool'
    |-CallExpr 0x55cc0dc54f70 <line:832:3, col:25> 'void'
    | `-ImplicitCastExpr 0x55cc0dc54f58 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x55cc0dc54f38 <col:3> 'void ()' Function 0x55cc0dbf0f00 '__VERIFIER_atomic_end' 'void ()'
    |-CallExpr 0x55cc0dc54fc8 <line:833:3, col:27> 'void'
    | `-ImplicitCastExpr 0x55cc0dc54fb0 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x55cc0dc54f90 <col:3> 'void ()' Function 0x55cc0dbf0e40 '__VERIFIER_atomic_begin' 'void ()'
    |-BinaryOperator 0x55cc0dc55330 <line:834:3, col:159> '_Bool' '='
    | |-DeclRefExpr 0x55cc0dc54fe8 <col:3> '_Bool' lvalue Var 0x55cc0dc4a8f0 'main$tmp_guard1' '_Bool'
    | `-ImplicitCastExpr 0x55cc0dc55318 <col:21, col:159> '_Bool' <IntegralToBoolean>
    |   `-UnaryOperator 0x55cc0dc55300 <col:21, col:159> 'int' prefix '!' cannot overflow
    |     `-ParenExpr 0x55cc0dc552e0 <col:22, col:159> 'int'
    |       `-BinaryOperator 0x55cc0dc552c0 <col:23, col:158> 'int' '&&'
    |         |-BinaryOperator 0x55cc0dc55228 <col:23, col:130> 'int' '&&'
    |         | |-BinaryOperator 0x55cc0dc55190 <col:23, col:102> 'int' '&&'
    |         | | |-BinaryOperator 0x55cc0dc550f8 <col:23, col:74> 'int' '&&'
    |         | | | |-BinaryOperator 0x55cc0dc55060 <col:23, col:46> 'int' '=='
    |         | | | | |-ImplicitCastExpr 0x55cc0dc55048 <col:23> 'int' <LValueToRValue>
    |         | | | | | `-DeclRefExpr 0x55cc0dc55008 <col:23> 'int' lvalue Var 0x55cc0dc4a240 '__unbuffered_p0_EAX' 'int'
    |         | | | | `-IntegerLiteral 0x55cc0dc55028 <col:46> 'int' 1
    |         | | | `-BinaryOperator 0x55cc0dc550d8 <col:51, col:74> 'int' '=='
    |         | | |   |-ImplicitCastExpr 0x55cc0dc550c0 <col:51> 'int' <LValueToRValue>
    |         | | |   | `-DeclRefExpr 0x55cc0dc55080 <col:51> 'int' lvalue Var 0x55cc0dc4a360 '__unbuffered_p0_EBX' 'int'
    |         | | |   `-IntegerLiteral 0x55cc0dc550a0 <col:74> 'int' 0
    |         | | `-BinaryOperator 0x55cc0dc55170 <col:79, col:102> 'int' '=='
    |         | |   |-ImplicitCastExpr 0x55cc0dc55158 <col:79> 'int' <LValueToRValue>
    |         | |   | `-DeclRefExpr 0x55cc0dc55118 <col:79> 'int' lvalue Var 0x55cc0dc4a480 '__unbuffered_p1_EAX' 'int'
    |         | |   `-IntegerLiteral 0x55cc0dc55138 <col:102> 'int' 0
    |         | `-BinaryOperator 0x55cc0dc55208 <col:107, col:130> 'int' '=='
    |         |   |-ImplicitCastExpr 0x55cc0dc551f0 <col:107> 'int' <LValueToRValue>
    |         |   | `-DeclRefExpr 0x55cc0dc551b0 <col:107> 'int' lvalue Var 0x55cc0dc4a5a0 '__unbuffered_p2_EAX' 'int'
    |         |   `-IntegerLiteral 0x55cc0dc551d0 <col:130> 'int' 1
    |         `-BinaryOperator 0x55cc0dc552a0 <col:135, col:158> 'int' '=='
    |           |-ImplicitCastExpr 0x55cc0dc55288 <col:135> 'int' <LValueToRValue>
    |           | `-DeclRefExpr 0x55cc0dc55248 <col:135> 'int' lvalue Var 0x55cc0dc4a6c0 '__unbuffered_p2_EBX' 'int'
    |           `-IntegerLiteral 0x55cc0dc55268 <col:158> 'int' 0
    |-CallExpr 0x55cc0dc55388 <line:835:3, col:25> 'void'
    | `-ImplicitCastExpr 0x55cc0dc55370 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x55cc0dc55350 <col:3> 'void ()' Function 0x55cc0dbf0f00 '__VERIFIER_atomic_end' 'void ()'
    |-CallExpr 0x55cc0dc55400 <line:836:3, col:36> 'void'
    | |-ImplicitCastExpr 0x55cc0dc553e8 <col:3> 'void (*)(int)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x55cc0dc553a8 <col:3> 'void (int)' Function 0x55cc0dbf0bc8 '__VERIFIER_assert' 'void (int)'
    | `-ImplicitCastExpr 0x55cc0dc55440 <col:21> 'int' <IntegralCast>
    |   `-ImplicitCastExpr 0x55cc0dc55428 <col:21> '_Bool' <LValueToRValue>
    |     `-DeclRefExpr 0x55cc0dc553c8 <col:21> '_Bool' lvalue Var 0x55cc0dc4a8f0 'main$tmp_guard1' '_Bool'
    `-ReturnStmt 0x55cc0dc55478 <line:837:3, col:10>
      `-IntegerLiteral 0x55cc0dc55458 <col:10> 'int' 0
