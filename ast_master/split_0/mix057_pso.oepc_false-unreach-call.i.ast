TranslationUnitDecl 0x55985ad51e18 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x55985ad526d8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x55985ad523b0 '__int128'
|-TypedefDecl 0x55985ad52748 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x55985ad523d0 'unsigned __int128'
|-TypedefDecl 0x55985ad52a50 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x55985ad52820 'struct __NSConstantString_tag'
|   `-Record 0x55985ad527a0 '__NSConstantString_tag'
|-TypedefDecl 0x55985ad52af8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x55985ad52ab0 'char *'
|   `-BuiltinType 0x55985ad51eb0 'char'
|-TypedefDecl 0x55985ad91650 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'struct __va_list_tag [1]'
| `-ConstantArrayType 0x55985ad52d90 'struct __va_list_tag [1]' 1 
|   `-RecordType 0x55985ad52bd0 'struct __va_list_tag'
|     `-Record 0x55985ad52b50 '__va_list_tag'
|-FunctionDecl 0x55985ad91790 <./split_0/mix057_pso.oepc_false-unreach-call.i:1:1, col:34> col:13 used __VERIFIER_assume 'void (int)' extern
| `-ParmVarDecl 0x55985ad916c0 <col:31> col:34 'int'
|-FunctionDecl 0x55985ad91958 <line:2:1, col:45> col:15 used __VERIFIER_nondet_pointer 'void *(void)' extern
|-FunctionDecl 0x55985ad91a80 <line:3:1, col:61> col:13 used __VERIFIER_error 'void () __attribute__((noreturn))' extern
|-FunctionDecl 0x55985ad91bc8 <line:4:1, col:99> col:6 used __VERIFIER_assert 'void (int)'
| |-ParmVarDecl 0x55985ad91b38 <col:24, col:28> col:28 used expression 'int'
| `-CompoundStmt 0x55985ad91df8 <col:40, col:99>
|   |-IfStmt 0x55985ad91dc8 <col:42, col:88>
|   | |-UnaryOperator 0x55985ad91ca8 <col:46, col:47> 'int' prefix '!' cannot overflow
|   | | `-ImplicitCastExpr 0x55985ad91c90 <col:47> 'int' <LValueToRValue>
|   | |   `-DeclRefExpr 0x55985ad91c70 <col:47> 'int' lvalue ParmVar 0x55985ad91b38 'expression' 'int'
|   | `-CompoundStmt 0x55985ad91db0 <col:59, col:88>
|   |   `-LabelStmt 0x55985ad91d98 <col:61, col:85> 'ERROR'
|   |     `-CallExpr 0x55985ad91d28 <col:68, col:85> 'void'
|   |       `-ImplicitCastExpr 0x55985ad91d10 <col:68> 'void (*)() __attribute__((noreturn))' <FunctionToPointerDecay>
|   |         `-DeclRefExpr 0x55985ad91cc0 <col:68> 'void () __attribute__((noreturn))' Function 0x55985ad91a80 '__VERIFIER_error' 'void () __attribute__((noreturn))'
|   |-NullStmt 0x55985ad91de0 <col:89>
|   `-ReturnStmt 0x55985ad91de8 <col:91>
|-FunctionDecl 0x55985ad91e40 <line:5:1, col:37> col:13 used __VERIFIER_atomic_begin 'void ()' extern
|-FunctionDecl 0x55985ad91f00 <line:6:1, col:35> col:13 used __VERIFIER_atomic_end 'void ()' extern
|-FunctionDecl 0x55985ad92280 <line:8:1, line:10:76> line:8:13 __assert_fail 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x55985ad91fb8 <col:28, col:40> col:40 __assertion 'const char *'
| |-ParmVarDecl 0x55985ad92038 <col:53, col:65> col:65 __file 'const char *'
| |-ParmVarDecl 0x55985ad920b8 <line:9:7, col:20> col:20 __line 'unsigned int'
| |-ParmVarDecl 0x55985ad92138 <col:28, col:40> col:40 __function 'const char *'
| `-NoThrowAttr 0x55985ad92340 <line:10:22>
|-FunctionDecl 0x55985adb8390 <line:11:1, line:13:76> line:11:13 __assert_perror_fail 'void (int, const char *, unsigned int, const char *) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x55985ad923b0 <col:35, col:39> col:39 __errnum 'int'
| |-ParmVarDecl 0x55985ad92430 <col:49, col:61> col:61 __file 'const char *'
| |-ParmVarDecl 0x55985ad924b0 <line:12:7, col:20> col:20 __line 'unsigned int'
| |-ParmVarDecl 0x55985ad92530 <col:28, col:40> col:40 __function 'const char *'
| `-NoThrowAttr 0x55985adb8450 <line:13:22>
|-FunctionDecl 0x55985adb8700 <line:14:1, line:15:76> line:14:13 __assert 'void (const char *, const char *, int) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x55985adb84c0 <col:23, col:35> col:35 __assertion 'const char *'
| |-ParmVarDecl 0x55985adb8540 <col:48, col:60> col:60 __file 'const char *'
| |-ParmVarDecl 0x55985adb85c0 <col:68, col:72> col:72 __line 'int'
| `-NoThrowAttr 0x55985adb87b8 <line:15:22>
|-TypedefDecl 0x55985adb8828 <line:17:1, col:23> col:23 __u_char 'unsigned char'
| `-BuiltinType 0x55985ad51f70 'unsigned char'
|-TypedefDecl 0x55985adb8898 <line:18:1, col:28> col:28 __u_short 'unsigned short'
| `-BuiltinType 0x55985ad51f90 'unsigned short'
|-TypedefDecl 0x55985adb8908 <line:19:1, col:22> col:22 __u_int 'unsigned int'
| `-BuiltinType 0x55985ad51fb0 'unsigned int'
|-TypedefDecl 0x55985adb8978 <line:20:1, col:27> col:27 __u_long 'unsigned long'
| `-BuiltinType 0x55985ad51fd0 'unsigned long'
|-TypedefDecl 0x55985adb89e8 <line:21:1, col:21> col:21 __int8_t 'signed char'
| `-BuiltinType 0x55985ad51ed0 'signed char'
|-TypedefDecl 0x55985adb8a58 <line:22:1, col:23> col:23 __uint8_t 'unsigned char'
| `-BuiltinType 0x55985ad51f70 'unsigned char'
|-TypedefDecl 0x55985adb8ac8 <line:23:1, col:26> col:26 __int16_t 'short'
| `-BuiltinType 0x55985ad51ef0 'short'
|-TypedefDecl 0x55985adb8b38 <line:24:1, col:28> col:28 __uint16_t 'unsigned short'
| `-BuiltinType 0x55985ad51f90 'unsigned short'
|-TypedefDecl 0x55985adb8ba8 <line:25:1, col:20> col:20 __int32_t 'int'
| `-BuiltinType 0x55985ad51f10 'int'
|-TypedefDecl 0x55985adb8c18 <line:26:1, col:22> col:22 __uint32_t 'unsigned int'
| `-BuiltinType 0x55985ad51fb0 'unsigned int'
|-TypedefDecl 0x55985adb8c88 <line:27:1, col:25> col:25 __int64_t 'long'
| `-BuiltinType 0x55985ad51f30 'long'
|-TypedefDecl 0x55985adb8cf8 <line:28:1, col:27> col:27 referenced __uint64_t 'unsigned long'
| `-BuiltinType 0x55985ad51fd0 'unsigned long'
|-TypedefDecl 0x55985adb8d68 <line:29:1, col:18> col:18 referenced __quad_t 'long'
| `-BuiltinType 0x55985ad51f30 'long'
|-TypedefDecl 0x55985adb8dd8 <line:30:1, col:27> col:27 __u_quad_t 'unsigned long'
| `-BuiltinType 0x55985ad51fd0 'unsigned long'
|-TypedefDecl 0x55985adb8e48 <line:31:1, col:27> col:27 __dev_t 'unsigned long'
| `-BuiltinType 0x55985ad51fd0 'unsigned long'
|-TypedefDecl 0x55985adb8eb8 <line:32:1, col:22> col:22 __uid_t 'unsigned int'
| `-BuiltinType 0x55985ad51fb0 'unsigned int'
|-TypedefDecl 0x55985adb8f28 <line:33:1, col:22> col:22 __gid_t 'unsigned int'
| `-BuiltinType 0x55985ad51fb0 'unsigned int'
|-TypedefDecl 0x55985adb8f98 <line:34:1, col:27> col:27 __ino_t 'unsigned long'
| `-BuiltinType 0x55985ad51fd0 'unsigned long'
|-TypedefDecl 0x55985adb9008 <line:35:1, col:27> col:27 __ino64_t 'unsigned long'
| `-BuiltinType 0x55985ad51fd0 'unsigned long'
|-TypedefDecl 0x55985adb9078 <line:36:1, col:22> col:22 __mode_t 'unsigned int'
| `-BuiltinType 0x55985ad51fb0 'unsigned int'
|-TypedefDecl 0x55985adb90e8 <line:37:1, col:27> col:27 __nlink_t 'unsigned long'
| `-BuiltinType 0x55985ad51fd0 'unsigned long'
|-TypedefDecl 0x55985adb9158 <line:38:1, col:18> col:18 __off_t 'long'
| `-BuiltinType 0x55985ad51f30 'long'
|-TypedefDecl 0x55985adb91c8 <line:39:1, col:18> col:18 referenced __off64_t 'long'
| `-BuiltinType 0x55985ad51f30 'long'
|-TypedefDecl 0x55985adb9238 <line:40:1, col:13> col:13 referenced __pid_t 'int'
| `-BuiltinType 0x55985ad51f10 'int'
|-RecordDecl 0x55985adb9290 <line:41:9, col:32> col:9 struct definition
| `-FieldDecl 0x55985adb9408 <col:18, col:29> col:22 __val 'int [2]'
|-TypedefDecl 0x55985adb94c0 <col:1, col:34> col:34 __fsid_t 'struct __fsid_t':'__fsid_t'
| `-ElaboratedType 0x55985adb9460 'struct __fsid_t' sugar
|   `-RecordType 0x55985adb9310 '__fsid_t'
|     `-Record 0x55985adb9290 ''
|-TypedefDecl 0x55985adb9548 <line:42:1, col:18> col:18 referenced __clock_t 'long'
| `-BuiltinType 0x55985ad51f30 'long'
|-TypedefDecl 0x55985adb95b8 <line:43:1, col:27> col:27 __rlim_t 'unsigned long'
| `-BuiltinType 0x55985ad51fd0 'unsigned long'
|-TypedefDecl 0x55985adb9628 <line:44:1, col:27> col:27 __rlim64_t 'unsigned long'
| `-BuiltinType 0x55985ad51fd0 'unsigned long'
|-TypedefDecl 0x55985adb9698 <line:45:1, col:22> col:22 __id_t 'unsigned int'
| `-BuiltinType 0x55985ad51fb0 'unsigned int'
|-TypedefDecl 0x55985adb9708 <line:46:1, col:18> col:18 referenced __time_t 'long'
| `-BuiltinType 0x55985ad51f30 'long'
|-TypedefDecl 0x55985adb9778 <line:47:1, col:22> col:22 __useconds_t 'unsigned int'
| `-BuiltinType 0x55985ad51fb0 'unsigned int'
|-TypedefDecl 0x55985adb97e8 <line:48:1, col:18> col:18 __suseconds_t 'long'
| `-BuiltinType 0x55985ad51f30 'long'
|-TypedefDecl 0x55985adb9858 <line:49:1, col:13> col:13 __daddr_t 'int'
| `-BuiltinType 0x55985ad51f10 'int'
|-TypedefDecl 0x55985adb98c8 <line:50:1, col:13> col:13 __key_t 'int'
| `-BuiltinType 0x55985ad51f10 'int'
|-TypedefDecl 0x55985adb9938 <line:51:1, col:13> col:13 referenced __clockid_t 'int'
| `-BuiltinType 0x55985ad51f10 'int'
|-TypedefDecl 0x55985adb99a8 <line:52:1, col:16> col:16 referenced __timer_t 'void *'
| `-PointerType 0x55985ad52630 'void *'
|   `-BuiltinType 0x55985ad51e70 'void'
|-TypedefDecl 0x55985adb9a18 <line:53:1, col:18> col:18 __blksize_t 'long'
| `-BuiltinType 0x55985ad51f30 'long'
|-TypedefDecl 0x55985adb9a88 <line:54:1, col:18> col:18 __blkcnt_t 'long'
| `-BuiltinType 0x55985ad51f30 'long'
|-TypedefDecl 0x55985adb9af8 <line:55:1, col:18> col:18 __blkcnt64_t 'long'
| `-BuiltinType 0x55985ad51f30 'long'
|-TypedefDecl 0x55985adb9b68 <line:56:1, col:27> col:27 __fsblkcnt_t 'unsigned long'
| `-BuiltinType 0x55985ad51fd0 'unsigned long'
|-TypedefDecl 0x55985adb9bd8 <line:57:1, col:27> col:27 __fsblkcnt64_t 'unsigned long'
| `-BuiltinType 0x55985ad51fd0 'unsigned long'
|-TypedefDecl 0x55985adb9c48 <line:58:1, col:27> col:27 __fsfilcnt_t 'unsigned long'
| `-BuiltinType 0x55985ad51fd0 'unsigned long'
|-TypedefDecl 0x55985adb9cb8 <line:59:1, col:27> col:27 __fsfilcnt64_t 'unsigned long'
| `-BuiltinType 0x55985ad51fd0 'unsigned long'
|-TypedefDecl 0x55985adb9d28 <line:60:1, col:18> col:18 __fsword_t 'long'
| `-BuiltinType 0x55985ad51f30 'long'
|-TypedefDecl 0x55985adb9d98 <line:61:1, col:18> col:18 __ssize_t 'long'
| `-BuiltinType 0x55985ad51f30 'long'
|-TypedefDecl 0x55985adb9e08 <line:62:1, col:18> col:18 referenced __syscall_slong_t 'long'
| `-BuiltinType 0x55985ad51f30 'long'
|-TypedefDecl 0x55985adb9e78 <line:63:1, col:27> col:27 __syscall_ulong_t 'unsigned long'
| `-BuiltinType 0x55985ad51fd0 'unsigned long'
|-TypedefDecl 0x55985adb9f08 <line:64:1, col:19> col:19 __loff_t '__off64_t':'long'
| `-TypedefType 0x55985adb9ed0 '__off64_t' sugar
|   |-Typedef 0x55985adb91c8 '__off64_t'
|   `-BuiltinType 0x55985ad51f30 'long'
|-TypedefDecl 0x55985adba000 <line:65:1, col:19> col:19 __qaddr_t '__quad_t *'
| `-PointerType 0x55985adb9fc0 '__quad_t *'
|   `-TypedefType 0x55985adb9f60 '__quad_t' sugar
|     |-Typedef 0x55985adb8d68 '__quad_t'
|     `-BuiltinType 0x55985ad51f30 'long'
|-TypedefDecl 0x55985adba070 <line:66:1, col:15> col:15 __caddr_t 'char *'
| `-PointerType 0x55985ad52ab0 'char *'
|   `-BuiltinType 0x55985ad51eb0 'char'
|-TypedefDecl 0x55985adba0e0 <line:67:1, col:18> col:18 __intptr_t 'long'
| `-BuiltinType 0x55985ad51f30 'long'
|-TypedefDecl 0x55985adba150 <line:68:1, col:22> col:22 __socklen_t 'unsigned int'
| `-BuiltinType 0x55985ad51fb0 'unsigned int'
|-FunctionDecl 0x55985adba298 <line:69:1, line:73:1> line:70:1 __bswap_32 'unsigned int (unsigned int)' static inline
| |-ParmVarDecl 0x55985adba1c0 <col:13, col:26> col:26 used __bsx 'unsigned int'
| `-CompoundStmt 0x55985adbb5e8 <line:71:1, line:73:1>
|   `-ReturnStmt 0x55985adbb5d8 <line:72:3, col:34>
|     `-CallExpr 0x55985adbb598 <col:10, col:34> 'unsigned int'
|       |-ImplicitCastExpr 0x55985adbb580 <col:10> 'unsigned int (*)(unsigned int)' <BuiltinFnToFnPtr>
|       | `-DeclRefExpr 0x55985adbb510 <col:10> '<builtin fn type>' Function 0x55985adbb380 '__builtin_bswap32' 'unsigned int (unsigned int)'
|       `-ImplicitCastExpr 0x55985adbb5c0 <col:29> 'unsigned int' <LValueToRValue>
|         `-DeclRefExpr 0x55985adbb530 <col:29> 'unsigned int' lvalue ParmVar 0x55985adba1c0 '__bsx' 'unsigned int'
|-FunctionDecl 0x55985adbb380 <col:10> col:10 implicit used __builtin_bswap32 'unsigned int (unsigned int)' extern
| |-ParmVarDecl 0x55985adbb420 <<invalid sloc>> <invalid sloc> 'unsigned int'
| |-NoThrowAttr 0x55985adbb490 <col:10> Implicit
| `-ConstAttr 0x55985adbb4e8 <col:10> Implicit
|-FunctionDecl 0x55985adbb740 <line:74:1, line:78:1> line:75:1 __bswap_64 '__uint64_t (__uint64_t)' static inline
| |-ParmVarDecl 0x55985adbb638 <col:13, col:24> col:24 used __bsx '__uint64_t':'unsigned long'
| `-CompoundStmt 0x55985adbba58 <line:76:1, line:78:1>
|   `-ReturnStmt 0x55985adbba48 <line:77:3, col:34>
|     `-CallExpr 0x55985adbba08 <col:10, col:34> 'unsigned long'
|       |-ImplicitCastExpr 0x55985adbb9f0 <col:10> 'unsigned long (*)(unsigned long)' <BuiltinFnToFnPtr>
|       | `-DeclRefExpr 0x55985adbb978 <col:10> '<builtin fn type>' Function 0x55985adbb7e8 '__builtin_bswap64' 'unsigned long (unsigned long)'
|       `-ImplicitCastExpr 0x55985adbba30 <col:29> '__uint64_t':'unsigned long' <LValueToRValue>
|         `-DeclRefExpr 0x55985adbb998 <col:29> '__uint64_t':'unsigned long' lvalue ParmVar 0x55985adbb638 '__bsx' '__uint64_t':'unsigned long'
|-FunctionDecl 0x55985adbb7e8 <col:10> col:10 implicit used __builtin_bswap64 'unsigned long (unsigned long)' extern
| |-ParmVarDecl 0x55985adbb888 <<invalid sloc>> <invalid sloc> 'unsigned long'
| |-NoThrowAttr 0x55985adbb8f8 <col:10> Implicit
| `-ConstAttr 0x55985adbb950 <col:10> Implicit
|-TypedefDecl 0x55985adbba88 <line:79:1, col:27> col:27 referenced size_t 'unsigned long'
| `-BuiltinType 0x55985ad51fd0 'unsigned long'
|-TypedefDecl 0x55985adbbb18 <line:81:1, col:18> col:18 referenced time_t '__time_t':'long'
| `-TypedefType 0x55985adbbae0 '__time_t' sugar
|   |-Typedef 0x55985adb9708 '__time_t'
|   `-BuiltinType 0x55985ad51f30 'long'
|-RecordDecl 0x55985adbbb70 <line:84:1, line:88:3> line:84:8 struct timespec definition
| |-FieldDecl 0x55985adbbc28 <line:86:5, col:14> col:14 tv_sec '__time_t':'long'
| `-FieldDecl 0x55985adbbcb8 <line:87:5, col:23> col:23 tv_nsec '__syscall_slong_t':'long'
|-TypedefDecl 0x55985adbbd48 <line:89:1, col:17> col:17 referenced pid_t '__pid_t':'int'
| `-TypedefType 0x55985adbbd10 '__pid_t' sugar
|   |-Typedef 0x55985adb9238 '__pid_t'
|   `-BuiltinType 0x55985ad51f10 'int'
|-RecordDecl 0x55985adbbda0 <line:90:1, line:93:3> line:90:8 struct sched_param definition
| `-FieldDecl 0x55985adbbe60 <line:92:5, col:9> col:9 __sched_priority 'int'
|-RecordDecl 0x55985adbbeb0 <line:96:1, line:99:3> line:96:8 struct __sched_param definition
| `-FieldDecl 0x55985adbbf70 <line:98:5, col:9> col:9 __sched_priority 'int'
|-TypedefDecl 0x55985adbbfd8 <line:100:1, col:27> col:27 referenced __cpu_mask 'unsigned long'
| `-BuiltinType 0x55985ad51fd0 'unsigned long'
|-RecordDecl 0x55985adbc030 <line:101:9, line:104:1> line:101:9 struct definition
| `-FieldDecl 0x55985adbc2c0 <line:103:3, col:53> col:14 __bits '__cpu_mask [64]'
|-TypedefDecl 0x55985adbd3a0 <line:101:1, line:104:3> col:3 referenced cpu_set_t 'struct cpu_set_t':'cpu_set_t'
| `-ElaboratedType 0x55985adbc310 'struct cpu_set_t' sugar
|   `-RecordType 0x55985adbc0b0 'cpu_set_t'
|     `-Record 0x55985adbc030 ''
|-FunctionDecl 0x55985adbd678 <line:106:1, line:107:42> line:106:12 __sched_cpucount 'int (size_t, const cpu_set_t *)' extern
| |-ParmVarDecl 0x55985adbd448 <col:30, col:37> col:37 __setsize 'size_t':'unsigned long'
| |-ParmVarDecl 0x55985adbd550 <col:48, col:65> col:65 __setp 'const cpu_set_t *'
| `-NoThrowAttr 0x55985adbd728 <line:107:19>
|-FunctionDecl 0x55985adbd900 <line:108:1, col:92> col:19 __sched_cpualloc 'cpu_set_t *(size_t)' extern
| |-ParmVarDecl 0x55985adbd790 <col:37, col:44> col:44 __count 'size_t':'unsigned long'
| `-NoThrowAttr 0x55985adbd9a8 <col:69>
|-FunctionDecl 0x55985adbdb20 <line:109:1, col:87> col:13 __sched_cpufree 'void (cpu_set_t *)' extern
| |-ParmVarDecl 0x55985adbda10 <col:30, col:41> col:41 __set 'cpu_set_t *'
| `-NoThrowAttr 0x55985adbdbc8 <col:64>
|-FunctionDecl 0x55985adbde88 <line:112:1, line:113:45> line:112:12 sched_setparam 'int (__pid_t, const struct sched_param *)' extern
| |-ParmVarDecl 0x55985adbdc30 <col:28, col:36> col:36 __pid '__pid_t':'int'
| |-ParmVarDecl 0x55985adbdd68 <col:43, col:69> col:69 __param 'const struct sched_param *'
| `-NoThrowAttr 0x55985adbdf38 <line:113:22>
|-FunctionDecl 0x55985adbe1b8 <line:114:1, col:111> col:12 sched_getparam 'int (__pid_t, struct sched_param *)' extern
| |-ParmVarDecl 0x55985adbdfa0 <col:28, col:36> col:36 __pid '__pid_t':'int'
| |-ParmVarDecl 0x55985adbe098 <col:43, col:63> col:63 __param 'struct sched_param *'
| `-NoThrowAttr 0x55985adbe268 <col:88>
|-FunctionDecl 0x55985adbe588 <line:115:1, line:116:85> line:115:12 sched_setscheduler 'int (__pid_t, int, const struct sched_param *)' extern
| |-ParmVarDecl 0x55985adbe2d0 <col:32, col:40> col:40 __pid '__pid_t':'int'
| |-ParmVarDecl 0x55985adbe3b0 <col:47, col:51> col:51 __policy 'int'
| |-ParmVarDecl 0x55985adbe440 <line:116:11, col:37> col:37 __param 'const struct sched_param *'
| `-NoThrowAttr 0x55985adbe640 <col:62>
|-FunctionDecl 0x55985adbe7b8 <line:117:1, col:86> col:12 sched_getscheduler 'int (__pid_t)' extern
| |-ParmVarDecl 0x55985adbe6a8 <col:32, col:40> col:40 __pid '__pid_t':'int'
| `-NoThrowAttr 0x55985adbe860 <col:63>
|-FunctionDecl 0x55985adbe988 <line:118:1, col:70> col:12 sched_yield 'int (void)' extern
| `-NoThrowAttr 0x55985adbea28 <col:47>
|-FunctionDecl 0x55985adbeb30 <line:119:1, col:92> col:12 sched_get_priority_max 'int (int)' extern
| |-ParmVarDecl 0x55985adbea98 <col:36, col:40> col:40 __algorithm 'int'
| `-NoThrowAttr 0x55985adbebd8 <col:69>
|-FunctionDecl 0x55985adbece0 <line:120:1, col:92> col:12 sched_get_priority_min 'int (int)' extern
| |-ParmVarDecl 0x55985adbec48 <col:36, col:40> col:40 __algorithm 'int'
| `-NoThrowAttr 0x55985adbed88 <col:69>
|-FunctionDecl 0x55985adbf048 <line:121:1, col:111> col:12 sched_rr_get_interval 'int (__pid_t, struct timespec *)' extern
| |-ParmVarDecl 0x55985adbedf0 <col:35, col:43> col:43 __pid '__pid_t':'int'
| |-ParmVarDecl 0x55985adbef28 <col:50, col:67> col:67 __t 'struct timespec *'
| `-NoThrowAttr 0x55985adbf0f8 <col:88>
|-TypedefDecl 0x55985adbf188 <line:125:1, col:19> col:19 referenced clock_t '__clock_t':'long'
| `-TypedefType 0x55985adbf150 '__clock_t' sugar
|   |-Typedef 0x55985adb9548 '__clock_t'
|   `-BuiltinType 0x55985ad51f30 'long'
|-TypedefDecl 0x55985adbf218 <line:128:1, col:21> col:21 referenced clockid_t '__clockid_t':'int'
| `-TypedefType 0x55985adbf1e0 '__clockid_t' sugar
|   |-Typedef 0x55985adb9938 '__clockid_t'
|   `-BuiltinType 0x55985ad51f10 'int'
|-TypedefDecl 0x55985adbf2a8 <line:129:1, col:19> col:19 referenced timer_t '__timer_t':'void *'
| `-TypedefType 0x55985adbf270 '__timer_t' sugar
|   |-Typedef 0x55985adb99a8 '__timer_t'
|   `-PointerType 0x55985ad52630 'void *'
|     `-BuiltinType 0x55985ad51e70 'void'
|-RecordDecl 0x55985adbf300 <line:131:1, line:144:1> line:131:8 struct tm definition
| |-FieldDecl 0x55985adbf3d8 <line:133:3, col:7> col:7 tm_sec 'int'
| |-FieldDecl 0x55985adbf440 <line:134:3, col:7> col:7 tm_min 'int'
| |-FieldDecl 0x55985adbf4a8 <line:135:3, col:7> col:7 tm_hour 'int'
| |-FieldDecl 0x55985adbf510 <line:136:3, col:7> col:7 tm_mday 'int'
| |-FieldDecl 0x55985adbf578 <line:137:3, col:7> col:7 tm_mon 'int'
| |-FieldDecl 0x55985adbf5e0 <line:138:3, col:7> col:7 tm_year 'int'
| |-FieldDecl 0x55985adbf648 <line:139:3, col:7> col:7 tm_wday 'int'
| |-FieldDecl 0x55985adbf6b0 <line:140:3, col:7> col:7 tm_yday 'int'
| |-FieldDecl 0x55985adbf718 <line:141:3, col:7> col:7 tm_isdst 'int'
| |-FieldDecl 0x55985adbf780 <line:142:3, col:12> col:12 tm_gmtoff 'long'
| `-FieldDecl 0x55985adbf7e8 <line:143:3, col:15> col:15 tm_zone 'const char *'
|-RecordDecl 0x55985adbf838 <line:147:1, line:151:3> line:147:8 struct itimerspec definition
| |-FieldDecl 0x55985adbf908 <line:149:5, col:21> col:21 it_interval 'struct timespec':'struct timespec'
| `-FieldDecl 0x55985adbf978 <line:150:5, col:21> col:21 it_value 'struct timespec':'struct timespec'
|-RecordDecl 0x55985adbfa20 <line:152:1, col:8> col:8 struct sigevent
|-FunctionDecl 0x55985adbfbf0 <line:154:1, col:68> col:16 clock 'clock_t (void)' extern
| `-NoThrowAttr 0x55985adbfc90 <col:45>
|-FunctionDecl 0x55985adbfe70 <line:155:1, col:77> col:15 time 'time_t (time_t *)' extern
| |-ParmVarDecl 0x55985adbfd60 <col:21, col:29> col:29 __timer 'time_t *'
| `-NoThrowAttr 0x55985adbff18 <col:54>
|-FunctionDecl 0x55985adc0118 <line:156:1, line:157:73> line:156:15 difftime 'double (time_t, time_t)' extern
| |-ParmVarDecl 0x55985adbff80 <col:25, col:32> col:32 __time1 'time_t':'long'
| |-ParmVarDecl 0x55985adbfff8 <col:41, col:48> col:48 __time0 'time_t':'long'
| |-NoThrowAttr 0x55985adc01c8 <line:157:22>
| `-ConstAttr 0x55985adc0220 <col:63>
|-FunctionDecl 0x55985adc1050 <line:158:1, col:79> col:15 mktime 'time_t (struct tm *)' extern
| |-ParmVarDecl 0x55985adc0318 <col:23, col:34> col:34 __tp 'struct tm *'
| `-NoThrowAttr 0x55985adc10f8 <col:56>
|-FunctionDecl 0x55985adc14a0 <line:159:1, line:161:77> line:159:15 strftime 'size_t (char *restrict, size_t, const char *restrict, const struct tm *restrict)' extern
| |-ParmVarDecl 0x55985adc1168 <col:25, col:42> col:42 __s 'char *restrict'
| |-ParmVarDecl 0x55985adc11e0 <col:47, col:54> col:54 __maxsize 'size_t':'unsigned long'
| |-ParmVarDecl 0x55985adc1260 <line:160:4, col:27> col:27 __format 'const char *restrict'
| |-ParmVarDecl 0x55985adc1358 <line:161:4, col:32> col:32 __tp 'const struct tm *restrict'
| `-NoThrowAttr 0x55985adc1560 <col:54>
|-RecordDecl 0x55985adc15b8 <line:163:9, line:170:1> line:163:16 struct __locale_struct definition
| |-RecordDecl 0x55985adc1668 parent 0x55985ad51e18 <line:165:3, col:10> col:10 struct __locale_data
| |-FieldDecl 0x55985adc18c8 <col:3, col:37> col:25 __locales 'struct __locale_data *[13]'
| |-FieldDecl 0x55985adc1968 <line:166:3, col:29> col:29 __ctype_b 'const unsigned short *'
| |-FieldDecl 0x55985adc19d0 <line:167:3, col:14> col:14 __ctype_tolower 'const int *'
| |-FieldDecl 0x55985adc1a38 <line:168:3, col:14> col:14 __ctype_toupper 'const int *'
| `-FieldDecl 0x55985adc1b28 <line:169:3, col:25> col:15 __names 'const char *[13]'
|-TypedefDecl 0x55985adc1c48 <line:163:1, line:170:4> col:4 referenced __locale_t 'struct __locale_struct *'
| `-PointerType 0x55985adc1bf0 'struct __locale_struct *'
|   `-ElaboratedType 0x55985adc1b80 'struct __locale_struct' sugar
|     `-RecordType 0x55985adc1640 'struct __locale_struct'
|       `-Record 0x55985adc15b8 '__locale_struct'
|-TypedefDecl 0x55985adc1cf8 <line:171:1, col:20> col:20 locale_t '__locale_t':'struct __locale_struct *'
| `-TypedefType 0x55985adc1cc0 '__locale_t' sugar
|   |-Typedef 0x55985adc1c48 '__locale_t'
|   `-PointerType 0x55985adc1bf0 'struct __locale_struct *'
|     `-ElaboratedType 0x55985adc1b80 'struct __locale_struct' sugar
|       `-RecordType 0x55985adc1640 'struct __locale_struct'
|         `-Record 0x55985adc15b8 '__locale_struct'
|-FunctionDecl 0x55985adc3110 <line:172:1, line:175:63> line:172:15 strftime_l 'size_t (char *restrict, size_t, const char *restrict, const struct tm *restrict, __locale_t)' extern
| |-ParmVarDecl 0x55985adc1d68 <col:27, col:44> col:44 __s 'char *restrict'
| |-ParmVarDecl 0x55985adc1de0 <col:49, col:56> col:56 __maxsize 'size_t':'unsigned long'
| |-ParmVarDecl 0x55985adc1e60 <line:173:6, col:29> col:29 __format 'const char *restrict'
| |-ParmVarDecl 0x55985adc1ef0 <line:174:6, col:34> col:34 __tp 'const struct tm *restrict'
| |-ParmVarDecl 0x55985adc1f68 <line:175:6, col:17> col:17 __loc '__locale_t':'struct __locale_struct *'
| `-NoThrowAttr 0x55985adc31d8 <col:40>
|-FunctionDecl 0x55985adc33c8 <line:177:1, col:89> col:19 gmtime 'struct tm *(const time_t *)' extern
| |-ParmVarDecl 0x55985adc32a0 <col:27, col:41> col:41 __timer 'const time_t *'
| `-NoThrowAttr 0x55985adc3470 <col:66>
|-FunctionDecl 0x55985adc3580 <line:178:1, col:92> col:19 localtime 'struct tm *(const time_t *)' extern
| |-ParmVarDecl 0x55985adc34d8 <col:30, col:44> col:44 __timer 'const time_t *'
| `-NoThrowAttr 0x55985adc3628 <col:69>
|-FunctionDecl 0x55985adc3858 <line:180:1, line:181:75> line:180:19 gmtime_r 'struct tm *(const time_t *restrict, struct tm *restrict)' extern
| |-ParmVarDecl 0x55985adc3690 <col:29, col:54> col:54 __timer 'const time_t *restrict'
| |-ParmVarDecl 0x55985adc3720 <line:181:8, col:30> col:30 __tp 'struct tm *restrict'
| `-NoThrowAttr 0x55985adc3908 <col:52>
|-FunctionDecl 0x55985adc3ab0 <line:182:1, line:183:78> line:182:19 localtime_r 'struct tm *(const time_t *restrict, struct tm *restrict)' extern
| |-ParmVarDecl 0x55985adc3970 <col:32, col:57> col:57 __timer 'const time_t *restrict'
| |-ParmVarDecl 0x55985adc3a00 <line:183:11, col:33> col:33 __tp 'struct tm *restrict'
| `-NoThrowAttr 0x55985adc3b60 <col:55>
|-FunctionDecl 0x55985adc3cf8 <line:185:1, col:85> col:14 asctime 'char *(const struct tm *)' extern
| |-ParmVarDecl 0x55985adc3be0 <col:23, col:40> col:40 __tp 'const struct tm *'
| `-NoThrowAttr 0x55985adc3da0 <col:62>
|-FunctionDecl 0x55985adc3f18 <line:186:1, col:83> col:14 ctime 'char *(const time_t *)' extern
| |-ParmVarDecl 0x55985adc3e08 <col:21, col:35> col:35 __timer 'const time_t *'
| `-NoThrowAttr 0x55985adc3fc0 <col:60>
|-FunctionDecl 0x55985adc42b8 <line:188:1, line:189:67> line:188:14 asctime_r 'char *(const struct tm *restrict, char *restrict)' extern
| |-ParmVarDecl 0x55985adc4118 <col:25, col:53> col:53 __tp 'const struct tm *restrict'
| |-ParmVarDecl 0x55985adc4198 <line:189:4, col:21> col:21 __buf 'char *restrict'
| `-NoThrowAttr 0x55985adc4368 <col:44>
|-FunctionDecl 0x55985adc4578 <line:190:1, line:191:72> line:190:14 ctime_r 'char *(const time_t *restrict, char *restrict)' extern
| |-ParmVarDecl 0x55985adc43d0 <col:23, col:48> col:48 __timer 'const time_t *restrict'
| |-ParmVarDecl 0x55985adc4450 <line:191:9, col:26> col:26 __buf 'char *restrict'
| `-NoThrowAttr 0x55985adc4628 <col:49>
|-VarDecl 0x55985adc4728 <line:192:1, col:24> col:14 __tzname 'char *[2]' extern
|-VarDecl 0x55985adc47a8 <line:193:1, col:12> col:12 __daylight 'int' extern
|-VarDecl 0x55985adc4828 <line:194:1, col:17> col:17 __timezone 'long' extern
|-VarDecl 0x55985adc48f0 <line:195:1, col:22> col:14 tzname 'char *[2]' extern
|-FunctionDecl 0x55985adc4a20 <line:196:1, col:65> col:13 tzset 'void (void)' extern
| `-NoThrowAttr 0x55985adc4ac0 <col:42>
|-VarDecl 0x55985adc4b30 <line:197:1, col:12> col:12 daylight 'int' extern
|-VarDecl 0x55985adc4bb0 <line:198:1, col:17> col:17 timezone 'long' extern
|-FunctionDecl 0x55985adc4d38 <line:199:1, col:80> col:12 stime 'int (const time_t *)' extern
| |-ParmVarDecl 0x55985adc4c28 <col:19, col:33> col:33 __when 'const time_t *'
| `-NoThrowAttr 0x55985adc4de0 <col:57>
|-FunctionDecl 0x55985adc4ef0 <line:200:1, col:79> col:15 timegm 'time_t (struct tm *)' extern
| |-ParmVarDecl 0x55985adc4e60 <col:23, col:34> col:34 __tp 'struct tm *'
| `-NoThrowAttr 0x55985adc4f98 <col:56>
|-FunctionDecl 0x55985adc50d0 <line:201:1, col:82> col:15 timelocal 'time_t (struct tm *)' extern
| |-ParmVarDecl 0x55985adc5018 <col:26, col:37> col:37 __tp 'struct tm *'
| `-NoThrowAttr 0x55985adc5178 <col:59>
|-FunctionDecl 0x55985adc5280 <line:202:1, col:99> col:12 dysize 'int (int)' extern
| |-ParmVarDecl 0x55985adc51e8 <col:20, col:24> col:24 __year 'int'
| |-NoThrowAttr 0x55985adc5328 <col:48>
| `-ConstAttr 0x55985adc5380 <col:89>
|-FunctionDecl 0x55985adc55e8 <line:203:1, line:204:37> line:203:12 nanosleep 'int (const struct timespec *, struct timespec *)' extern
| |-ParmVarDecl 0x55985adc5438 <col:23, col:46> col:46 __requested_time 'const struct timespec *'
| `-ParmVarDecl 0x55985adc54c8 <line:204:9, col:26> col:26 __remaining 'struct timespec *'
|-FunctionDecl 0x55985adc5848 <line:205:1, col:111> col:12 clock_getres 'int (clockid_t, struct timespec *)' extern
| |-ParmVarDecl 0x55985adc56d8 <col:26, col:36> col:36 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x55985adc5768 <col:48, col:65> col:65 __res 'struct timespec *'
| `-NoThrowAttr 0x55985adc58f8 <col:88>
|-FunctionDecl 0x55985adc5a90 <line:206:1, col:111> col:12 clock_gettime 'int (clockid_t, struct timespec *)' extern
| |-ParmVarDecl 0x55985adc5960 <col:27, col:37> col:37 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x55985adc59f0 <col:49, col:66> col:66 __tp 'struct timespec *'
| `-NoThrowAttr 0x55985adc5b40 <col:88>
|-FunctionDecl 0x55985adc5d58 <line:207:1, line:208:45> line:207:12 clock_settime 'int (clockid_t, const struct timespec *)' extern
| |-ParmVarDecl 0x55985adc5ba8 <col:27, col:37> col:37 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x55985adc5c38 <col:49, col:72> col:72 __tp 'const struct timespec *'
| `-NoThrowAttr 0x55985adc5e08 <line:208:22>
|-FunctionDecl 0x55985adc6178 <line:209:1, line:211:30> line:209:12 clock_nanosleep 'int (clockid_t, int, const struct timespec *, struct timespec *)' extern
| |-ParmVarDecl 0x55985adc5e70 <col:29, col:39> col:39 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x55985adc5ef0 <col:51, col:55> col:55 __flags 'int'
| |-ParmVarDecl 0x55985adc5f80 <line:210:8, col:31> col:31 __req 'const struct timespec *'
| `-ParmVarDecl 0x55985adc6010 <line:211:8, col:25> col:25 __rem 'struct timespec *'
|-FunctionDecl 0x55985adc6478 <line:212:1, col:108> col:12 clock_getcpuclockid 'int (pid_t, clockid_t *)' extern
| |-ParmVarDecl 0x55985adc6278 <col:33, col:39> col:39 __pid 'pid_t':'int'
| |-ParmVarDecl 0x55985adc6350 <col:46, col:57> col:57 __clock_id 'clockid_t *'
| `-NoThrowAttr 0x55985adc6528 <col:85>
|-FunctionDecl 0x55985adc6918 <line:213:1, line:215:75> line:213:12 timer_create 'int (clockid_t, struct sigevent *restrict, timer_t *restrict)' extern
| |-ParmVarDecl 0x55985adc6590 <col:26, col:36> col:36 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x55985adc66c8 <line:214:5, col:33> col:33 __evp 'struct sigevent *restrict'
| |-ParmVarDecl 0x55985adc67d0 <line:215:5, col:25> col:25 __timerid 'timer_t *restrict'
| `-NoThrowAttr 0x55985adc69d0 <col:52>
|-FunctionDecl 0x55985adc6b48 <line:216:1, col:84> col:12 timer_delete 'int (timer_t)' extern
| |-ParmVarDecl 0x55985adc6a38 <col:26, col:34> col:34 __timerid 'timer_t':'void *'
| `-NoThrowAttr 0x55985adc6bf0 <col:61>
|-FunctionDecl 0x55985adc70f0 <line:217:1, line:219:85> line:217:12 timer_settime 'int (timer_t, int, const struct itimerspec *restrict, struct itimerspec *restrict)' extern
| |-ParmVarDecl 0x55985adc6c58 <col:27, col:35> col:35 __timerid 'timer_t':'void *'
| |-ParmVarDecl 0x55985adc6cd8 <col:46, col:50> col:50 __flags 'int'
| |-ParmVarDecl 0x55985adc6e08 <line:218:6, col:42> col:42 __value 'const struct itimerspec *restrict'
| |-ParmVarDecl 0x55985adc6ef8 <line:219:6, col:36> col:36 __ovalue 'struct itimerspec *restrict'
| `-NoThrowAttr 0x55985adc71b0 <col:62>
|-FunctionDecl 0x55985adc73c8 <line:220:1, line:221:45> line:220:12 timer_gettime 'int (timer_t, struct itimerspec *)' extern
| |-ParmVarDecl 0x55985adc7218 <col:27, col:35> col:35 __timerid 'timer_t':'void *'
| |-ParmVarDecl 0x55985adc72a8 <col:46, col:65> col:65 __value 'struct itimerspec *'
| `-NoThrowAttr 0x55985adc7478 <line:221:22>
|-FunctionDecl 0x55985adc7578 <line:222:1, col:88> col:12 timer_getoverrun 'int (timer_t)' extern
| |-ParmVarDecl 0x55985adc74e0 <col:30, col:38> col:38 __timerid 'timer_t':'void *'
| `-NoThrowAttr 0x55985adc7620 <col:65>
|-TypedefDecl 0x55985adc7690 <line:224:1, col:27> col:27 referenced pthread_t 'unsigned long'
| `-BuiltinType 0x55985ad51fd0 'unsigned long'
|-RecordDecl 0x55985adc76e8 <line:225:1, line:229:1> line:225:7 union pthread_attr_t definition
| |-FieldDecl 0x55985adc7830 <line:227:3, col:17> col:8 __size 'char [56]'
| `-FieldDecl 0x55985adc7898 <line:228:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x55985adc7948 <line:230:1, col:30> col:30 referenced pthread_attr_t 'union pthread_attr_t':'union pthread_attr_t'
| `-ElaboratedType 0x55985adc78f0 'union pthread_attr_t' sugar
|   `-RecordType 0x55985adc7770 'union pthread_attr_t'
|     `-Record 0x55985adc76e8 'pthread_attr_t'
|-RecordDecl 0x55985adc79a0 <line:231:9, line:235:1> line:231:16 struct __pthread_internal_list definition
| |-FieldDecl 0x55985adc7b18 <line:233:3, col:35> col:35 __prev 'struct __pthread_internal_list *'
| `-FieldDecl 0x55985adc7b90 <line:234:3, col:35> col:35 __next 'struct __pthread_internal_list *'
|-TypedefDecl 0x55985adc7c40 <line:231:1, line:235:3> col:3 referenced __pthread_list_t 'struct __pthread_internal_list':'struct __pthread_internal_list'
| `-ElaboratedType 0x55985adc7be0 'struct __pthread_internal_list' sugar
|   `-RecordType 0x55985adc7a20 'struct __pthread_internal_list'
|     `-Record 0x55985adc79a0 '__pthread_internal_list'
|-RecordDecl 0x55985adc7cb0 <line:236:9, line:250:1> line:236:9 union definition
| |-RecordDecl 0x55985adc7d58 parent 0x55985ad51e18 <line:238:3, line:247:3> line:238:10 struct __pthread_mutex_s definition
| | |-FieldDecl 0x55985adc7e30 <line:240:5, col:9> col:9 __lock 'int'
| | |-FieldDecl 0x55985adc7e98 <line:241:5, col:18> col:18 __count 'unsigned int'
| | |-FieldDecl 0x55985adc7f00 <line:242:5, col:9> col:9 __owner 'int'
| | |-FieldDecl 0x55985adc7f68 <line:243:5, col:18> col:18 __nusers 'unsigned int'
| | |-FieldDecl 0x55985adc7fd0 <line:244:5, col:9> col:9 __kind 'int'
| | |-FieldDecl 0x55985adc8038 <line:245:5, col:9> col:9 __spins 'int'
| | `-FieldDecl 0x55985adcc110 <line:246:5, col:22> col:22 __list '__pthread_list_t':'struct __pthread_internal_list'
| |-FieldDecl 0x55985adcc1c0 <line:238:3, line:247:5> col:5 __data 'struct __pthread_mutex_s':'struct __pthread_mutex_s'
| |-FieldDecl 0x55985adcc2b0 <line:248:3, col:17> col:8 __size 'char [40]'
| `-FieldDecl 0x55985adcc318 <line:249:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x55985adcc4a0 <line:236:1, line:250:3> col:3 referenced pthread_mutex_t 'union pthread_mutex_t':'pthread_mutex_t'
| `-ElaboratedType 0x55985adcc440 'union pthread_mutex_t' sugar
|   `-RecordType 0x55985adc7d30 'pthread_mutex_t'
|     `-Record 0x55985adc7cb0 ''
|-RecordDecl 0x55985adcc510 <line:251:9, line:255:1> line:251:9 union definition
| |-FieldDecl 0x55985adcc650 <line:253:3, col:16> col:8 __size 'char [4]'
| `-FieldDecl 0x55985adcc6b8 <line:254:3, col:7> col:7 __align 'int'
|-TypedefDecl 0x55985adcc770 <line:251:1, line:255:3> col:3 referenced pthread_mutexattr_t 'union pthread_mutexattr_t':'pthread_mutexattr_t'
| `-ElaboratedType 0x55985adcc710 'union pthread_mutexattr_t' sugar
|   `-RecordType 0x55985adcc590 'pthread_mutexattr_t'
|     `-Record 0x55985adcc510 ''
|-RecordDecl 0x55985adcc7e0 <line:256:9, line:271:1> line:256:9 union definition
| |-RecordDecl 0x55985adcc888 <line:258:3, line:268:3> line:258:3 struct definition
| | |-FieldDecl 0x55985adcc950 <line:260:5, col:9> col:9 __lock 'int'
| | |-FieldDecl 0x55985adcc9b8 <line:261:5, col:18> col:18 __futex 'unsigned int'
| | |-FieldDecl 0x55985adcca20 <line:262:19, col:42> col:42 __total_seq 'unsigned long long'
| | |-FieldDecl 0x55985adcca88 <line:263:19, col:42> col:42 __wakeup_seq 'unsigned long long'
| | |-FieldDecl 0x55985adccaf0 <line:264:19, col:42> col:42 __woken_seq 'unsigned long long'
| | |-FieldDecl 0x55985adccb58 <line:265:5, col:11> col:11 __mutex 'void *'
| | |-FieldDecl 0x55985adccbc0 <line:266:5, col:18> col:18 __nwaiters 'unsigned int'
| | `-FieldDecl 0x55985adccc28 <line:267:5, col:18> col:18 __broadcast_seq 'unsigned int'
| |-FieldDecl 0x55985adccce0 <line:258:3, line:268:5> col:5 __data 'struct (anonymous struct at ./split_0/mix057_pso.oepc_false-unreach-call.i:258:3)':'struct pthread_cond_t::(anonymous at ./split_0/mix057_pso.oepc_false-unreach-call.i:258:3)'
| |-FieldDecl 0x55985adccdd0 <line:269:3, col:17> col:8 __size 'char [48]'
| `-FieldDecl 0x55985adcce38 <line:270:17, col:31> col:31 __align 'long long'
|-TypedefDecl 0x55985adccf70 <line:256:1, line:271:3> col:3 referenced pthread_cond_t 'union pthread_cond_t':'pthread_cond_t'
| `-ElaboratedType 0x55985adccf10 'union pthread_cond_t' sugar
|   `-RecordType 0x55985adcc860 'pthread_cond_t'
|     `-Record 0x55985adcc7e0 ''
|-RecordDecl 0x55985adccfe0 <line:272:9, line:276:1> line:272:9 union definition
| |-FieldDecl 0x55985adce130 <line:274:3, col:16> col:8 __size 'char [4]'
| `-FieldDecl 0x55985adce198 <line:275:3, col:7> col:7 __align 'int'
|-TypedefDecl 0x55985adce250 <line:272:1, line:276:3> col:3 referenced pthread_condattr_t 'union pthread_condattr_t':'pthread_condattr_t'
| `-ElaboratedType 0x55985adce1f0 'union pthread_condattr_t' sugar
|   `-RecordType 0x55985adcd060 'pthread_condattr_t'
|     `-Record 0x55985adccfe0 ''
|-TypedefDecl 0x55985adce2d8 <line:277:1, col:22> col:22 referenced pthread_key_t 'unsigned int'
| `-BuiltinType 0x55985ad51fb0 'unsigned int'
|-TypedefDecl 0x55985adce348 <line:278:1, col:13> col:13 referenced pthread_once_t 'int'
| `-BuiltinType 0x55985ad51f10 'int'
|-RecordDecl 0x55985adce3a0 <line:279:9, line:297:1> line:279:9 union definition
| |-RecordDecl 0x55985adce448 <line:281:3, line:294:3> line:281:3 struct definition
| | |-FieldDecl 0x55985adce510 <line:283:5, col:9> col:9 __lock 'int'
| | |-FieldDecl 0x55985adce578 <line:284:5, col:18> col:18 __nr_readers 'unsigned int'
| | |-FieldDecl 0x55985adce5e0 <line:285:5, col:18> col:18 __readers_wakeup 'unsigned int'
| | |-FieldDecl 0x55985adce648 <line:286:5, col:18> col:18 __writer_wakeup 'unsigned int'
| | |-FieldDecl 0x55985adce6b0 <line:287:5, col:18> col:18 __nr_readers_queued 'unsigned int'
| | |-FieldDecl 0x55985adce718 <line:288:5, col:18> col:18 __nr_writers_queued 'unsigned int'
| | |-FieldDecl 0x55985adce780 <line:289:5, col:9> col:9 __writer 'int'
| | |-FieldDecl 0x55985adce7e8 <line:290:5, col:9> col:9 __shared 'int'
| | |-FieldDecl 0x55985adce850 <line:291:5, col:23> col:23 __pad1 'unsigned long'
| | |-FieldDecl 0x55985adce8b8 <line:292:5, col:23> col:23 __pad2 'unsigned long'
| | `-FieldDecl 0x55985adce920 <line:293:5, col:18> col:18 __flags 'unsigned int'
| |-FieldDecl 0x55985adce9d0 <line:281:3, line:294:5> col:5 __data 'struct (anonymous struct at ./split_0/mix057_pso.oepc_false-unreach-call.i:281:3)':'struct pthread_rwlock_t::(anonymous at ./split_0/mix057_pso.oepc_false-unreach-call.i:281:3)'
| |-FieldDecl 0x55985adcea78 <line:295:3, col:17> col:8 __size 'char [56]'
| `-FieldDecl 0x55985adceae0 <line:296:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x55985adcec30 <line:279:1, line:297:3> col:3 referenced pthread_rwlock_t 'union pthread_rwlock_t':'pthread_rwlock_t'
| `-ElaboratedType 0x55985adcebd0 'union pthread_rwlock_t' sugar
|   `-RecordType 0x55985adce420 'pthread_rwlock_t'
|     `-Record 0x55985adce3a0 ''
|-RecordDecl 0x55985adceca0 <line:298:9, line:302:1> line:298:9 union definition
| |-FieldDecl 0x55985adcede0 <line:300:3, col:16> col:8 __size 'char [8]'
| `-FieldDecl 0x55985adcee48 <line:301:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x55985adcef00 <line:298:1, line:302:3> col:3 referenced pthread_rwlockattr_t 'union pthread_rwlockattr_t':'pthread_rwlockattr_t'
| `-ElaboratedType 0x55985adceea0 'union pthread_rwlockattr_t' sugar
|   `-RecordType 0x55985adced20 'pthread_rwlockattr_t'
|     `-Record 0x55985adceca0 ''
|-TypedefDecl 0x55985adcef88 <line:303:1, col:22> col:22 referenced pthread_spinlock_t 'volatile int'
| `-QualType 0x55985ad51f14 'volatile int' volatile
|   `-BuiltinType 0x55985ad51f10 'int'
|-RecordDecl 0x55985adcefe0 <line:304:9, line:308:1> line:304:9 union definition
| |-FieldDecl 0x55985add0140 <line:306:3, col:17> col:8 __size 'char [32]'
| `-FieldDecl 0x55985add01a8 <line:307:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x55985add0260 <line:304:1, line:308:3> col:3 referenced pthread_barrier_t 'union pthread_barrier_t':'pthread_barrier_t'
| `-ElaboratedType 0x55985add0200 'union pthread_barrier_t' sugar
|   `-RecordType 0x55985adcf060 'pthread_barrier_t'
|     `-Record 0x55985adcefe0 ''
|-RecordDecl 0x55985add02d0 <line:309:9, line:313:1> line:309:9 union definition
| |-FieldDecl 0x55985add03d0 <line:311:3, col:16> col:8 __size 'char [4]'
| `-FieldDecl 0x55985add0438 <line:312:3, col:7> col:7 __align 'int'
|-TypedefDecl 0x55985add04f0 <line:309:1, line:313:3> col:3 referenced pthread_barrierattr_t 'union pthread_barrierattr_t':'pthread_barrierattr_t'
| `-ElaboratedType 0x55985add0490 'union pthread_barrierattr_t' sugar
|   `-RecordType 0x55985add0350 'pthread_barrierattr_t'
|     `-Record 0x55985add02d0 ''
|-TypedefDecl 0x55985add0608 <line:314:1, col:29> col:18 referenced __jmp_buf 'long [8]'
| `-ConstantArrayType 0x55985add05a0 'long [8]' 8 
|   `-BuiltinType 0x55985ad51f30 'long'
|-EnumDecl 0x55985add0660 <line:315:1, line:319:1> line:315:1
| |-EnumConstantDecl 0x55985add0728 <line:317:3> col:3 PTHREAD_CREATE_JOINABLE 'int'
| `-EnumConstantDecl 0x55985add0778 <line:318:3> col:3 PTHREAD_CREATE_DETACHED 'int'
|-EnumDecl 0x55985add07c8 <line:320:1, line:331:1> line:320:1
| |-EnumConstantDecl 0x55985add0898 <line:322:3> col:3 referenced PTHREAD_MUTEX_TIMED_NP 'int'
| |-EnumConstantDecl 0x55985add08e8 <line:323:3> col:3 referenced PTHREAD_MUTEX_RECURSIVE_NP 'int'
| |-EnumConstantDecl 0x55985add0938 <line:324:3> col:3 referenced PTHREAD_MUTEX_ERRORCHECK_NP 'int'
| |-EnumConstantDecl 0x55985add0988 <line:325:3> col:3 PTHREAD_MUTEX_ADAPTIVE_NP 'int'
| |-EnumConstantDecl 0x55985add0a10 <line:327:3, col:26> col:3 referenced PTHREAD_MUTEX_NORMAL 'int'
| | `-ConstantExpr 0x55985add09f8 <col:26> 'int'
| |   `-DeclRefExpr 0x55985add09d8 <col:26> 'int' EnumConstant 0x55985add0898 'PTHREAD_MUTEX_TIMED_NP' 'int'
| |-EnumConstantDecl 0x55985add0a98 <line:328:3, col:29> col:3 PTHREAD_MUTEX_RECURSIVE 'int'
| | `-ConstantExpr 0x55985add0a80 <col:29> 'int'
| |   `-DeclRefExpr 0x55985add0a60 <col:29> 'int' EnumConstant 0x55985add08e8 'PTHREAD_MUTEX_RECURSIVE_NP' 'int'
| |-EnumConstantDecl 0x55985add0b20 <line:329:3, col:30> col:3 PTHREAD_MUTEX_ERRORCHECK 'int'
| | `-ConstantExpr 0x55985add0b08 <col:30> 'int'
| |   `-DeclRefExpr 0x55985add0ae8 <col:30> 'int' EnumConstant 0x55985add0938 'PTHREAD_MUTEX_ERRORCHECK_NP' 'int'
| `-EnumConstantDecl 0x55985add0ba8 <line:330:3, col:27> col:3 PTHREAD_MUTEX_DEFAULT 'int'
|   `-ConstantExpr 0x55985add0b90 <col:27> 'int'
|     `-DeclRefExpr 0x55985add0b70 <col:27> 'int' EnumConstant 0x55985add0a10 'PTHREAD_MUTEX_NORMAL' 'int'
|-EnumDecl 0x55985add0bf8 <line:332:1, line:338:1> line:332:1
| |-EnumConstantDecl 0x55985add0cc8 <line:334:3> col:3 referenced PTHREAD_MUTEX_STALLED 'int'
| |-EnumConstantDecl 0x55985add0d50 <line:335:3, col:30> col:3 PTHREAD_MUTEX_STALLED_NP 'int'
| | `-ConstantExpr 0x55985add0d38 <col:30> 'int'
| |   `-DeclRefExpr 0x55985add0d18 <col:30> 'int' EnumConstant 0x55985add0cc8 'PTHREAD_MUTEX_STALLED' 'int'
| |-EnumConstantDecl 0x55985add0da0 <line:336:3> col:3 referenced PTHREAD_MUTEX_ROBUST 'int'
| `-EnumConstantDecl 0x55985add0e28 <line:337:3, col:29> col:3 PTHREAD_MUTEX_ROBUST_NP 'int'
|   `-ConstantExpr 0x55985add0e10 <col:29> 'int'
|     `-DeclRefExpr 0x55985add0df0 <col:29> 'int' EnumConstant 0x55985add0da0 'PTHREAD_MUTEX_ROBUST' 'int'
|-EnumDecl 0x55985add0e78 <line:339:1, line:344:1> line:339:1
| |-EnumConstantDecl 0x55985add0f48 <line:341:3> col:3 PTHREAD_PRIO_NONE 'int'
| |-EnumConstantDecl 0x55985add0f98 <line:342:3> col:3 PTHREAD_PRIO_INHERIT 'int'
| `-EnumConstantDecl 0x55985add0fe8 <line:343:3> col:3 PTHREAD_PRIO_PROTECT 'int'
|-EnumDecl 0x55985add1038 <line:345:1, line:351:1> line:345:1
| |-EnumConstantDecl 0x55985add1150 <line:347:3> col:3 referenced PTHREAD_RWLOCK_PREFER_READER_NP 'int'
| |-EnumConstantDecl 0x55985add11a0 <line:348:3> col:3 PTHREAD_RWLOCK_PREFER_WRITER_NP 'int'
| |-EnumConstantDecl 0x55985add11f0 <line:349:3> col:3 PTHREAD_RWLOCK_PREFER_WRITER_NONRECURSIVE_NP 'int'
| `-EnumConstantDecl 0x55985add1278 <line:350:3, col:31> col:3 PTHREAD_RWLOCK_DEFAULT_NP 'int'
|   `-ConstantExpr 0x55985add1260 <col:31> 'int'
|     `-DeclRefExpr 0x55985add1240 <col:31> 'int' EnumConstant 0x55985add1150 'PTHREAD_RWLOCK_PREFER_READER_NP' 'int'
|-EnumDecl 0x55985add12c8 <line:352:1, line:356:1> line:352:1
| |-EnumConstantDecl 0x55985add1398 <line:354:3> col:3 PTHREAD_INHERIT_SCHED 'int'
| `-EnumConstantDecl 0x55985add13e8 <line:355:3> col:3 PTHREAD_EXPLICIT_SCHED 'int'
|-EnumDecl 0x55985add1438 <line:357:1, line:361:1> line:357:1
| |-EnumConstantDecl 0x55985add1508 <line:359:3> col:3 PTHREAD_SCOPE_SYSTEM 'int'
| `-EnumConstantDecl 0x55985add1558 <line:360:3> col:3 PTHREAD_SCOPE_PROCESS 'int'
|-EnumDecl 0x55985add15a8 <line:362:1, line:366:1> line:362:1
| |-EnumConstantDecl 0x55985add1678 <line:364:3> col:3 PTHREAD_PROCESS_PRIVATE 'int'
| `-EnumConstantDecl 0x55985add16c8 <line:365:3> col:3 PTHREAD_PROCESS_SHARED 'int'
|-RecordDecl 0x55985add1718 <line:367:1, line:373:1> line:367:8 struct _pthread_cleanup_buffer definition
| |-FieldDecl 0x55985add1958 <line:369:3, col:28> col:10 __routine 'void (*)(void *)'
| |-FieldDecl 0x55985add19c0 <line:370:3, col:9> col:9 __arg 'void *'
| |-FieldDecl 0x55985add1a28 <line:371:3, col:7> col:7 __canceltype 'int'
| `-FieldDecl 0x55985add1b48 <line:372:3, col:35> col:35 __prev 'struct _pthread_cleanup_buffer *'
|-EnumDecl 0x55985add1b98 <line:374:1, line:378:1> line:374:1
| |-EnumConstantDecl 0x55985add1c68 <line:376:3> col:3 PTHREAD_CANCEL_ENABLE 'int'
| `-EnumConstantDecl 0x55985add1cb8 <line:377:3> col:3 PTHREAD_CANCEL_DISABLE 'int'
|-EnumDecl 0x55985add1d08 <line:379:1, line:383:1> line:379:1
| |-EnumConstantDecl 0x55985add1dd8 <line:381:3> col:3 PTHREAD_CANCEL_DEFERRED 'int'
| `-EnumConstantDecl 0x55985add1e28 <line:382:3> col:3 PTHREAD_CANCEL_ASYNCHRONOUS 'int'
|-FunctionDecl 0x55985add2488 <line:385:1, line:388:96> line:385:12 used pthread_create 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' extern
| |-ParmVarDecl 0x55985add1f20 <col:28, col:50> col:50 __newthread 'pthread_t *restrict'
| |-ParmVarDecl 0x55985add2030 <line:386:7, col:40> col:40 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x55985add2270 <line:387:7, col:39> col:15 __start_routine 'void *(*)(void *)'
| |-ParmVarDecl 0x55985add22f0 <line:388:7, col:24> col:24 __arg 'void *restrict'
| |-NoThrowAttr 0x55985add2548 <col:47>
| |-NonNullAttr 0x55985add25a0 <col:77, col:94> 1 3
| `-CallbackAttr 0x55985add25d8 <line:385:12> Implicit 2 3
|-FunctionDecl 0x55985add2700 <line:389:1, col:72> col:13 pthread_exit 'void (void *) __attribute__((noreturn))' extern
| `-ParmVarDecl 0x55985add2630 <col:27, col:33> col:33 __retval 'void *'
|-FunctionDecl 0x55985add2958 <line:390:1, col:64> col:12 pthread_join 'int (pthread_t, void **)' extern
| |-ParmVarDecl 0x55985add27b8 <col:26, col:36> col:36 __th 'pthread_t':'unsigned long'
| `-ParmVarDecl 0x55985add2838 <col:42, col:49> col:49 __thread_return 'void **'
|-FunctionDecl 0x55985add2b28 <line:391:1, col:83> col:12 pthread_detach 'int (pthread_t)' extern
| |-ParmVarDecl 0x55985add2a18 <col:28, col:38> col:38 __th 'pthread_t':'unsigned long'
| `-NoThrowAttr 0x55985add2bd0 <col:60>
|-FunctionDecl 0x55985add2d20 <line:392:1, col:105> col:18 pthread_self 'pthread_t (void)' extern
| |-NoThrowAttr 0x55985add2dc0 <col:54>
| `-ConstAttr 0x55985add2e18 <col:95>
|-FunctionDecl 0x55985add2fe8 <line:393:1, line:394:70> line:393:12 pthread_equal 'int (pthread_t, pthread_t)' extern
| |-ParmVarDecl 0x55985add2e50 <col:27, col:37> col:37 __thread1 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x55985add2ec8 <col:48, col:58> col:58 __thread2 'pthread_t':'unsigned long'
| |-NoThrowAttr 0x55985add3098 <line:394:19>
| `-ConstAttr 0x55985add30f0 <col:60>
|-FunctionDecl 0x55985add4b08 <line:395:1, col:128> col:12 pthread_attr_init 'int (pthread_attr_t *)' extern
| |-ParmVarDecl 0x55985add49d0 <col:31, col:47> col:47 __attr 'pthread_attr_t *'
| |-NoThrowAttr 0x55985add4bb0 <col:71>
| `-NonNullAttr 0x55985add4c08 <col:112, col:126> 1
|-FunctionDecl 0x55985add4d10 <line:396:1, line:397:79> line:396:12 pthread_attr_destroy 'int (pthread_attr_t *)' extern
| |-ParmVarDecl 0x55985add4c58 <col:34, col:50> col:50 __attr 'pthread_attr_t *'
| |-NoThrowAttr 0x55985add4db8 <line:397:22>
| `-NonNullAttr 0x55985add4e10 <col:63, col:77> 1
|-FunctionDecl 0x55985add5038 <line:398:1, line:400:82> line:398:12 pthread_attr_getdetachstate 'int (const pthread_attr_t *, int *)' extern
| |-ParmVarDecl 0x55985add4e58 <col:41, col:63> col:63 __attr 'const pthread_attr_t *'
| |-ParmVarDecl 0x55985add4ed8 <line:399:6, col:11> col:11 __detachstate 'int *'
| |-NoThrowAttr 0x55985add50e8 <line:400:22>
| `-NonNullAttr 0x55985add5140 <col:63, col:80> 1 2
|-FunctionDecl 0x55985add5348 <line:401:1, line:403:79> line:401:12 pthread_attr_setdetachstate 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x55985add5188 <col:41, col:57> col:57 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x55985add5208 <line:402:6, col:10> col:10 __detachstate 'int'
| |-NoThrowAttr 0x55985add53f8 <line:403:22>
| `-NonNullAttr 0x55985add5450 <col:63, col:77> 1
|-FunctionDecl 0x55985add56a8 <line:404:1, line:406:82> line:404:12 pthread_attr_getguardsize 'int (const pthread_attr_t *, size_t *)' extern
| |-ParmVarDecl 0x55985add5498 <col:39, col:61> col:61 __attr 'const pthread_attr_t *'
| |-ParmVarDecl 0x55985add5540 <line:405:11, col:19> col:19 __guardsize 'size_t *'
| |-NoThrowAttr 0x55985add5758 <line:406:22>
| `-NonNullAttr 0x55985add57b0 <col:63, col:80> 1 2
|-FunctionDecl 0x55985add69e8 <line:407:1, line:409:79> line:407:12 pthread_attr_setguardsize 'int (pthread_attr_t *, size_t)' extern
| |-ParmVarDecl 0x55985add57f8 <col:39, col:55> col:55 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x55985add5870 <line:408:11, col:18> col:18 __guardsize 'size_t':'unsigned long'
| |-NoThrowAttr 0x55985add6a98 <line:409:22>
| `-NonNullAttr 0x55985add6af0 <col:63, col:77> 1
|-FunctionDecl 0x55985add6d28 <line:410:1, line:412:82> line:410:12 pthread_attr_getschedparam 'int (const pthread_attr_t *restrict, struct sched_param *restrict)' extern
| |-ParmVarDecl 0x55985add6b38 <col:40, col:73> col:73 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x55985add6bc8 <line:411:12, col:43> col:43 __param 'struct sched_param *restrict'
| |-NoThrowAttr 0x55985add6dd8 <line:412:22>
| `-NonNullAttr 0x55985add6e30 <col:63, col:80> 1 2
|-FunctionDecl 0x55985add7068 <line:413:1, line:415:97> line:413:12 pthread_attr_setschedparam 'int (pthread_attr_t *restrict, const struct sched_param *restrict)' extern
| |-ParmVarDecl 0x55985add6e78 <col:40, col:67> col:67 __attr 'pthread_attr_t *restrict'
| |-ParmVarDecl 0x55985add6f08 <line:414:12, line:415:12> col:12 __param 'const struct sched_param *restrict'
| |-NoThrowAttr 0x55985add7118 <col:37>
| `-NonNullAttr 0x55985add7170 <col:78, col:95> 1 2
|-FunctionDecl 0x55985add7358 <line:416:1, line:418:82> line:416:12 pthread_attr_getschedpolicy 'int (const pthread_attr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x55985add71b8 <col:41, line:417:6> col:6 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x55985add7238 <col:14, col:30> col:30 __policy 'int *restrict'
| |-NoThrowAttr 0x55985add7408 <line:418:22>
| `-NonNullAttr 0x55985add7460 <col:63, col:80> 1 2
|-FunctionDecl 0x55985add75e8 <line:419:1, line:420:79> line:419:12 pthread_attr_setschedpolicy 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x55985add74a8 <col:41, col:57> col:57 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x55985add7528 <col:65, col:69> col:69 __policy 'int'
| |-NoThrowAttr 0x55985add7698 <line:420:22>
| `-NonNullAttr 0x55985add76f0 <col:63, col:77> 1
|-FunctionDecl 0x55985add7898 <line:421:1, line:423:82> line:421:12 pthread_attr_getinheritsched 'int (const pthread_attr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x55985add7738 <col:42, line:422:7> col:7 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x55985add77b8 <col:15, col:31> col:31 __inherit 'int *restrict'
| |-NoThrowAttr 0x55985add7948 <line:423:22>
| `-NonNullAttr 0x55985add79c0 <col:63, col:80> 1 2
|-FunctionDecl 0x55985add7b48 <line:424:1, line:426:79> line:424:12 pthread_attr_setinheritsched 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x55985add7a08 <col:42, col:58> col:58 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x55985add7a88 <line:425:7, col:11> col:11 __inherit 'int'
| |-NoThrowAttr 0x55985add7bf8 <line:426:22>
| `-NonNullAttr 0x55985add7c50 <col:63, col:77> 1
|-FunctionDecl 0x55985add7df8 <line:427:1, line:429:82> line:427:12 pthread_attr_getscope 'int (const pthread_attr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x55985add7c98 <col:35, col:68> col:68 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x55985add7d18 <line:428:7, col:23> col:23 __scope 'int *restrict'
| |-NoThrowAttr 0x55985add7ea8 <line:429:22>
| `-NonNullAttr 0x55985add7f00 <col:63, col:80> 1 2
|-FunctionDecl 0x55985add8088 <line:430:1, line:431:79> line:430:12 pthread_attr_setscope 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x55985add7f48 <col:35, col:51> col:51 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x55985add7fc8 <col:59, col:63> col:63 __scope 'int'
| |-NoThrowAttr 0x55985add8138 <line:431:22>
| `-NonNullAttr 0x55985add8190 <col:63, col:77> 1
|-FunctionDecl 0x55985add83b8 <line:432:1, line:434:115> line:432:12 pthread_attr_getstackaddr 'int (const pthread_attr_t *restrict, void **restrict)' extern
| |-ParmVarDecl 0x55985add81d8 <col:39, line:433:11> col:11 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x55985add8258 <col:19, col:37> col:37 __stackaddr 'void **restrict'
| |-NoThrowAttr 0x55985add8468 <line:434:22>
| |-NonNullAttr 0x55985add84c0 <col:63, col:80> 1 2
| `-DeprecatedAttr 0x55985add84f8 <col:100> "" ""
|-FunctionDecl 0x55985add8708 <line:435:1, line:437:112> line:435:12 pthread_attr_setstackaddr 'int (pthread_attr_t *, void *)' extern
| |-ParmVarDecl 0x55985add8548 <col:39, col:55> col:55 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x55985add85c8 <line:436:11, col:17> col:17 __stackaddr 'void *'
| |-NoThrowAttr 0x55985add87b8 <line:437:22>
| |-NonNullAttr 0x55985add8810 <col:63, col:77> 1
| `-DeprecatedAttr 0x55985add8848 <col:97> "" ""
|-FunctionDecl 0x55985add8a48 <line:438:1, line:440:82> line:438:12 pthread_attr_getstacksize 'int (const pthread_attr_t *restrict, size_t *restrict)' extern
| |-ParmVarDecl 0x55985add8898 <col:39, line:439:11> col:11 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x55985add8910 <col:19, col:38> col:38 __stacksize 'size_t *restrict'
| |-NoThrowAttr 0x55985add8af8 <line:440:22>
| `-NonNullAttr 0x55985add8b50 <col:63, col:80> 1 2
|-FunctionDecl 0x55985add8cd0 <line:441:1, line:443:79> line:441:12 pthread_attr_setstacksize 'int (pthread_attr_t *, size_t)' extern
| |-ParmVarDecl 0x55985add8b98 <col:39, col:55> col:55 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x55985add8c10 <line:442:11, col:18> col:18 __stacksize 'size_t':'unsigned long'
| |-NoThrowAttr 0x55985add8d80 <line:443:22>
| `-NonNullAttr 0x55985add8dd8 <col:63, col:77> 1
|-FunctionDecl 0x55985add90c8 <line:444:1, line:447:85> line:444:12 pthread_attr_getstack 'int (const pthread_attr_t *restrict, void **restrict, size_t *restrict)' extern
| |-ParmVarDecl 0x55985add8e28 <col:35, col:68> col:68 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x55985add8ea8 <line:445:7, col:25> col:25 __stackaddr 'void **restrict'
| |-ParmVarDecl 0x55985add8f20 <line:446:7, col:26> col:26 __stacksize 'size_t *restrict'
| |-NoThrowAttr 0x55985add9180 <line:447:22>
| `-NonNullAttr 0x55985add91d8 <col:63, col:83> 1 2 3
|-FunctionDecl 0x55985add9488 <line:448:1, line:449:100> line:448:12 pthread_attr_setstack 'int (pthread_attr_t *, void *, size_t)' extern
| |-ParmVarDecl 0x55985add9230 <col:35, col:51> col:51 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x55985add92b0 <col:59, col:65> col:65 __stackaddr 'void *'
| |-ParmVarDecl 0x55985add9328 <line:449:7, col:14> col:14 __stacksize 'size_t':'unsigned long'
| |-NoThrowAttr 0x55985add9540 <col:43>
| `-NonNullAttr 0x55985add9598 <col:84, col:98> 1
|-FunctionDecl 0x55985add9858 <line:450:1, line:452:79> line:450:12 pthread_setschedparam 'int (pthread_t, int, const struct sched_param *)' extern
| |-ParmVarDecl 0x55985add95e8 <col:35, col:45> col:45 __target_thread 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x55985add9668 <col:62, col:66> col:66 __policy 'int'
| |-ParmVarDecl 0x55985add96f8 <line:451:7, col:33> col:33 __param 'const struct sched_param *'
| |-NoThrowAttr 0x55985add9910 <line:452:22>
| `-NonNullAttr 0x55985add9968 <col:63, col:77> 3
|-FunctionDecl 0x55985add9c78 <line:453:1, line:456:82> line:453:12 pthread_getschedparam 'int (pthread_t, int *restrict, struct sched_param *restrict)' extern
| |-ParmVarDecl 0x55985add99e0 <col:35, col:45> col:45 __target_thread 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x55985add9a60 <line:454:7, col:23> col:23 __policy 'int *restrict'
| |-ParmVarDecl 0x55985add9af0 <line:455:7, col:38> col:38 __param 'struct sched_param *restrict'
| |-NoThrowAttr 0x55985add9d30 <line:456:22>
| `-NonNullAttr 0x55985add9d88 <col:63, col:80> 2 3
|-FunctionDecl 0x55985add9f78 <line:457:1, line:458:45> line:457:12 pthread_setschedprio 'int (pthread_t, int)' extern
| |-ParmVarDecl 0x55985add9dd8 <col:34, col:44> col:44 __target_thread 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x55985add9e58 <col:61, col:65> col:65 __prio 'int'
| `-NoThrowAttr 0x55985adda028 <line:458:22>
|-FunctionDecl 0x55985adda3f8 <line:459:1, line:460:71> line:459:12 pthread_once 'int (pthread_once_t *, void (*)(void))' extern
| |-ParmVarDecl 0x55985adda0f0 <col:26, col:42> col:42 __once_control 'pthread_once_t *'
| |-ParmVarDecl 0x55985adda290 <line:460:5, col:33> col:12 __init_routine 'void (*)(void)'
| `-NonNullAttr 0x55985adda4a8 <col:52, col:69> 1 2
|-FunctionDecl 0x55985adda650 <line:461:1, col:64> col:12 pthread_setcancelstate 'int (int, int *)' extern
| |-ParmVarDecl 0x55985adda530 <col:36, col:40> col:40 __state 'int'
| `-ParmVarDecl 0x55985adda5b0 <col:49, col:54> col:54 __oldstate 'int *'
|-FunctionDecl 0x55985adda838 <line:462:1, col:61> col:12 pthread_setcanceltype 'int (int, int *)' extern
| |-ParmVarDecl 0x55985adda718 <col:35, col:39> col:39 __type 'int'
| `-ParmVarDecl 0x55985adda798 <col:47, col:52> col:52 __oldtype 'int *'
|-FunctionDecl 0x55985adda9f0 <line:463:1, col:42> col:12 pthread_cancel 'int (pthread_t)' extern
| `-ParmVarDecl 0x55985adda8f8 <col:28, col:38> col:38 __th 'pthread_t':'unsigned long'
|-FunctionDecl 0x55985addab30 <line:464:1, col:37> col:13 pthread_testcancel 'void (void)' extern
|-RecordDecl 0x55985addabd0 <line:465:9, line:473:1> line:465:9 struct definition
| |-RecordDecl 0x55985addac78 <line:467:3, line:471:3> line:467:3 struct definition
| | |-FieldDecl 0x55985addad68 <line:469:5, col:15> col:15 __cancel_jmp_buf '__jmp_buf':'long [8]'
| | `-FieldDecl 0x55985addadd0 <line:470:5, col:9> col:9 __mask_was_saved 'int'
| |-FieldDecl 0x55985addafa0 <line:467:3, line:471:23> col:5 __cancel_jmp_buf 'struct (anonymous struct at ./split_0/mix057_pso.oepc_false-unreach-call.i:467:3) [1]'
| `-FieldDecl 0x55985addb098 <line:472:3, col:16> col:9 __pad 'void *[4]'
|-TypedefDecl 0x55985addb150 <line:465:1, line:473:3> col:3 referenced __pthread_unwind_buf_t 'struct __pthread_unwind_buf_t':'__pthread_unwind_buf_t'
| |-ElaboratedType 0x55985addb0f0 'struct __pthread_unwind_buf_t' sugar
| | `-RecordType 0x55985addac50 '__pthread_unwind_buf_t'
| |   `-Record 0x55985addabd0 ''
| `-AlignedAttr 0x55985addb1a8 <col:42> aligned
|   `-<<<NULL>>>
|-RecordDecl 0x55985addb220 <line:474:1, line:480:1> line:474:8 struct __pthread_cleanup_frame definition
| |-FieldDecl 0x55985addb380 <line:476:3, col:35> col:10 __cancel_routine 'void (*)(void *)'
| |-FieldDecl 0x55985addb3e8 <line:477:3, col:9> col:9 __cancel_arg 'void *'
| |-FieldDecl 0x55985addb450 <line:478:3, col:7> col:7 __do_it 'int'
| `-FieldDecl 0x55985addb4b8 <line:479:3, col:7> col:7 __cancel_type 'int'
|-FunctionDecl 0x55985addb6c0 <line:481:1, col:69> col:13 __pthread_register_cancel 'void (__pthread_unwind_buf_t *)' extern
| `-ParmVarDecl 0x55985addb5b0 <col:40, col:64> col:64 __buf '__pthread_unwind_buf_t *'
|-FunctionDecl 0x55985addb808 <line:483:1, col:71> col:13 __pthread_unregister_cancel 'void (__pthread_unwind_buf_t *)' extern
| `-ParmVarDecl 0x55985addb778 <col:42, col:66> col:66 __buf '__pthread_unwind_buf_t *'
|-FunctionDecl 0x55985addba00 <line:485:1, line:487:31> line:485:13 __pthread_unwind_next 'void (__pthread_unwind_buf_t *) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x55985addb8c0 <col:36, col:60> col:60 __buf '__pthread_unwind_buf_t *'
| `-WeakAttr 0x55985addbaa8 <line:487:22>
|-RecordDecl 0x55985addbb00 <line:489:1, col:8> col:8 struct __jmp_buf_tag
|-FunctionDecl 0x55985addbe18 <line:490:1, col:98> col:12 __sigsetjmp 'int (struct __jmp_buf_tag *, int)' extern
| |-ParmVarDecl 0x55985addbc78 <col:25, col:47> col:47 __env 'struct __jmp_buf_tag *'
| |-ParmVarDecl 0x55985addbcf8 <col:54, col:58> col:58 __savemask 'int'
| |-NoThrowAttr 0x55985addbec8 <col:86>
| `-ReturnsTwiceAttr 0x55985addbf20 <col:12> Implicit
|-FunctionDecl 0x55985addc248 <line:491:1, line:493:79> line:491:12 pthread_mutex_init 'int (pthread_mutex_t *, const pthread_mutexattr_t *)' extern
| |-ParmVarDecl 0x55985addbff0 <col:32, col:49> col:49 __mutex 'pthread_mutex_t *'
| |-ParmVarDecl 0x55985addc100 <line:492:11, col:38> col:38 __mutexattr 'const pthread_mutexattr_t *'
| |-NoThrowAttr 0x55985addc2f8 <line:493:22>
| `-NonNullAttr 0x55985addc350 <col:63, col:77> 1
|-FunctionDecl 0x55985addc4c8 <line:494:1, line:495:79> line:494:12 pthread_mutex_destroy 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x55985addc398 <col:35, col:52> col:52 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x55985addc570 <line:495:22>
| `-NonNullAttr 0x55985addc5c8 <col:63, col:77> 1
|-FunctionDecl 0x55985addc6d0 <line:496:1, line:497:68> line:496:12 pthread_mutex_trylock 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x55985addc618 <col:35, col:52> col:52 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x55985addc778 <line:497:22>
| `-NonNullAttr 0x55985addc7d0 <col:52, col:66> 1
|-FunctionDecl 0x55985addc8d0 <line:498:1, line:499:68> line:498:12 pthread_mutex_lock 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x55985addc818 <col:32, col:49> col:49 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x55985addc978 <line:499:22>
| `-NonNullAttr 0x55985addc9d0 <col:52, col:66> 1
|-FunctionDecl 0x55985adddc28 <line:500:1, line:502:85> line:500:12 pthread_mutex_timedlock 'int (pthread_mutex_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x55985addda38 <col:37, col:65> col:65 __mutex 'pthread_mutex_t *restrict'
| |-ParmVarDecl 0x55985adddac8 <line:501:9, line:502:9> col:9 __abstime 'const struct timespec *restrict'
| |-NoThrowAttr 0x55985adddcd8 <col:36>
| `-NonNullAttr 0x55985adddd30 <col:66, col:83> 1 2
|-FunctionDecl 0x55985addde30 <line:503:1, line:504:68> line:503:12 pthread_mutex_unlock 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x55985adddd78 <col:34, col:51> col:51 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x55985addded8 <line:504:22>
| `-NonNullAttr 0x55985adddf30 <col:52, col:66> 1
|-FunctionDecl 0x55985adde1c8 <line:505:1, line:508:82> line:505:12 pthread_mutex_getprioceiling 'int (const pthread_mutex_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x55985adddfe0 <col:42, line:506:18> col:18 __mutex 'const pthread_mutex_t *restrict'
| |-ParmVarDecl 0x55985adde060 <line:507:7, col:23> col:23 __prioceiling 'int *restrict'
| |-NoThrowAttr 0x55985adde278 <line:508:22>
| `-NonNullAttr 0x55985adde2d0 <col:63, col:80> 1 2
|-FunctionDecl 0x55985adde598 <line:509:1, line:512:82> line:509:12 pthread_mutex_setprioceiling 'int (pthread_mutex_t *restrict, int, int *restrict)' extern
| |-ParmVarDecl 0x55985adde318 <col:42, col:70> col:70 __mutex 'pthread_mutex_t *restrict'
| |-ParmVarDecl 0x55985adde398 <line:510:7, col:11> col:11 __prioceiling 'int'
| |-ParmVarDecl 0x55985adde418 <line:511:7, col:23> col:23 __old_ceiling 'int *restrict'
| |-NoThrowAttr 0x55985adde650 <line:512:22>
| `-NonNullAttr 0x55985adde6a8 <col:63, col:80> 1 3
|-FunctionDecl 0x55985adde7b0 <line:513:1, line:514:79> line:513:12 pthread_mutex_consistent 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x55985adde6f8 <col:38, col:55> col:55 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x55985adde858 <line:514:22>
| `-NonNullAttr 0x55985adde8b0 <col:63, col:77> 1
|-FunctionDecl 0x55985addead8 <line:515:1, line:516:79> line:515:12 pthread_mutexattr_init 'int (pthread_mutexattr_t *)' extern
| |-ParmVarDecl 0x55985adde960 <col:36, col:57> col:57 __attr 'pthread_mutexattr_t *'
| |-NoThrowAttr 0x55985addeb80 <line:516:22>
| `-NonNullAttr 0x55985addebd8 <col:63, col:77> 1
|-FunctionDecl 0x55985addece0 <line:517:1, line:518:79> line:517:12 pthread_mutexattr_destroy 'int (pthread_mutexattr_t *)' extern
| |-ParmVarDecl 0x55985addec28 <col:39, col:60> col:60 __attr 'pthread_mutexattr_t *'
| |-NoThrowAttr 0x55985added88 <line:518:22>
| `-NonNullAttr 0x55985addede0 <col:63, col:77> 1
|-FunctionDecl 0x55985addf008 <line:519:1, line:522:82> line:519:12 pthread_mutexattr_getpshared 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x55985addee28 <col:42, line:520:18> col:18 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x55985addeea8 <line:521:7, col:23> col:23 __pshared 'int *restrict'
| |-NoThrowAttr 0x55985addf0b8 <line:522:22>
| `-NonNullAttr 0x55985addf110 <col:63, col:80> 1 2
|-FunctionDecl 0x55985addf318 <line:523:1, line:525:79> line:523:12 pthread_mutexattr_setpshared 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x55985addf158 <col:42, col:63> col:63 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x55985addf1d8 <line:524:7, col:11> col:11 __pshared 'int'
| |-NoThrowAttr 0x55985addf3c8 <line:525:22>
| `-NonNullAttr 0x55985addf420 <col:63, col:77> 1
|-FunctionDecl 0x55985addf5c8 <line:526:1, line:528:82> line:526:12 pthread_mutexattr_gettype 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x55985addf468 <col:39, line:527:11> col:11 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x55985addf4e8 <col:19, col:35> col:35 __kind 'int *restrict'
| |-NoThrowAttr 0x55985addf678 <line:528:22>
| `-NonNullAttr 0x55985addf6d0 <col:63, col:80> 1 2
|-FunctionDecl 0x55985addf858 <line:529:1, line:530:79> line:529:12 pthread_mutexattr_settype 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x55985addf718 <col:39, col:60> col:60 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x55985addf798 <col:68, col:72> col:72 __kind 'int'
| |-NoThrowAttr 0x55985addf908 <line:530:22>
| `-NonNullAttr 0x55985addf960 <col:63, col:77> 1
|-FunctionDecl 0x55985addfb20 <line:531:1, line:534:82> line:531:12 pthread_mutexattr_getprotocol 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x55985addf9a8 <col:43, line:532:19> col:19 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x55985addfa40 <line:533:8, col:24> col:24 __protocol 'int *restrict'
| |-NoThrowAttr 0x55985addfbd0 <line:534:22>
| `-NonNullAttr 0x55985addfc28 <col:63, col:80> 1 2
|-FunctionDecl 0x55985addfdb8 <line:535:1, line:537:79> line:535:12 pthread_mutexattr_setprotocol 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x55985addfc78 <col:43, col:64> col:64 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x55985addfcf8 <line:536:8, col:12> col:12 __protocol 'int'
| |-NoThrowAttr 0x55985addfe68 <line:537:22>
| `-NonNullAttr 0x55985addfec0 <col:63, col:77> 1
|-FunctionDecl 0x55985ade0068 <line:538:1, line:541:82> line:538:12 pthread_mutexattr_getprioceiling 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x55985addff08 <col:46, line:539:22> col:22 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x55985addff88 <line:540:11, col:27> col:27 __prioceiling 'int *restrict'
| |-NoThrowAttr 0x55985ade0118 <line:541:22>
| `-NonNullAttr 0x55985ade0170 <col:63, col:80> 1 2
|-FunctionDecl 0x55985ade02f8 <line:542:1, line:544:79> line:542:12 pthread_mutexattr_setprioceiling 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x55985ade01b8 <col:46, col:67> col:67 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x55985ade0238 <line:543:11, col:15> col:15 __prioceiling 'int'
| |-NoThrowAttr 0x55985ade03a8 <line:544:22>
| `-NonNullAttr 0x55985ade0400 <col:63, col:77> 1
|-FunctionDecl 0x55985ade05e8 <line:545:1, line:547:82> line:545:12 pthread_mutexattr_getrobust 'int (const pthread_mutexattr_t *, int *)' extern
| |-ParmVarDecl 0x55985ade0448 <col:41, col:68> col:68 __attr 'const pthread_mutexattr_t *'
| |-ParmVarDecl 0x55985ade04c8 <line:546:6, col:11> col:11 __robustness 'int *'
| |-NoThrowAttr 0x55985ade0698 <line:547:22>
| `-NonNullAttr 0x55985ade06f0 <col:63, col:80> 1 2
|-FunctionDecl 0x55985ade0878 <line:548:1, line:550:79> line:548:12 pthread_mutexattr_setrobust 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x55985ade0738 <col:41, col:62> col:62 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x55985ade07b8 <line:549:6, col:10> col:10 __robustness 'int'
| |-NoThrowAttr 0x55985ade0928 <line:550:22>
| `-NonNullAttr 0x55985ade0980 <col:63, col:77> 1
|-FunctionDecl 0x55985ade1cf8 <line:551:1, line:553:86> line:551:12 pthread_rwlock_init 'int (pthread_rwlock_t *restrict, const pthread_rwlockattr_t *restrict)' extern
| |-ParmVarDecl 0x55985ade1aa0 <col:33, col:62> col:62 __rwlock 'pthread_rwlock_t *restrict'
| |-ParmVarDecl 0x55985ade1bb0 <line:552:5, line:553:5> col:5 __attr 'const pthread_rwlockattr_t *restrict'
| |-NoThrowAttr 0x55985ade1da8 <col:29>
| `-NonNullAttr 0x55985ade1e00 <col:70, col:84> 1
|-FunctionDecl 0x55985ade1f78 <line:554:1, line:555:79> line:554:12 pthread_rwlock_destroy 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x55985ade1e48 <col:36, col:54> col:54 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x55985ade2020 <line:555:22>
| `-NonNullAttr 0x55985ade2078 <col:63, col:77> 1
|-FunctionDecl 0x55985ade2180 <line:556:1, line:557:68> line:556:12 pthread_rwlock_rdlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x55985ade20c8 <col:35, col:53> col:53 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x55985ade2228 <line:557:22>
| `-NonNullAttr 0x55985ade2280 <col:52, col:66> 1
|-FunctionDecl 0x55985ade2380 <line:558:1, line:559:65> line:558:12 pthread_rwlock_tryrdlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x55985ade22c8 <col:38, col:56> col:56 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x55985ade2428 <line:559:19>
| `-NonNullAttr 0x55985ade2480 <col:49, col:63> 1
|-FunctionDecl 0x55985ade26b8 <line:560:1, line:562:88> line:560:12 pthread_rwlock_timedrdlock 'int (pthread_rwlock_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x55985ade24c8 <col:40, col:69> col:69 __rwlock 'pthread_rwlock_t *restrict'
| |-ParmVarDecl 0x55985ade2558 <line:561:12, line:562:12> col:12 __abstime 'const struct timespec *restrict'
| |-NoThrowAttr 0x55985ade2768 <col:39>
| `-NonNullAttr 0x55985ade27c0 <col:69, col:86> 1 2
|-FunctionDecl 0x55985ade28c0 <line:563:1, line:564:68> line:563:12 pthread_rwlock_wrlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x55985ade2808 <col:35, col:53> col:53 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x55985ade2968 <line:564:22>
| `-NonNullAttr 0x55985ade29c0 <col:52, col:66> 1
|-FunctionDecl 0x55985ade2b28 <line:565:1, line:566:68> line:565:12 pthread_rwlock_trywrlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x55985ade2a70 <col:38, col:56> col:56 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x55985ade2bd0 <line:566:22>
| `-NonNullAttr 0x55985ade2c28 <col:52, col:66> 1
|-FunctionDecl 0x55985ade2de8 <line:567:1, line:569:88> line:567:12 pthread_rwlock_timedwrlock 'int (pthread_rwlock_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x55985ade2c78 <col:40, col:69> col:69 __rwlock 'pthread_rwlock_t *restrict'
| |-ParmVarDecl 0x55985ade2d08 <line:568:12, line:569:12> col:12 __abstime 'const struct timespec *restrict'
| |-NoThrowAttr 0x55985ade2e98 <col:39>
| `-NonNullAttr 0x55985ade2ef0 <col:69, col:86> 1 2
|-FunctionDecl 0x55985ade2ff0 <line:570:1, line:571:68> line:570:12 pthread_rwlock_unlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x55985ade2f38 <col:35, col:53> col:53 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x55985ade3098 <line:571:22>
| `-NonNullAttr 0x55985ade30f0 <col:52, col:66> 1
|-FunctionDecl 0x55985ade32d8 <line:572:1, line:573:79> line:572:12 pthread_rwlockattr_init 'int (pthread_rwlockattr_t *)' extern
| |-ParmVarDecl 0x55985ade31a0 <col:37, col:59> col:59 __attr 'pthread_rwlockattr_t *'
| |-NoThrowAttr 0x55985ade3380 <line:573:22>
| `-NonNullAttr 0x55985ade33d8 <col:63, col:77> 1
|-FunctionDecl 0x55985ade34e0 <line:574:1, line:575:79> line:574:12 pthread_rwlockattr_destroy 'int (pthread_rwlockattr_t *)' extern
| |-ParmVarDecl 0x55985ade3428 <col:40, col:62> col:62 __attr 'pthread_rwlockattr_t *'
| |-NoThrowAttr 0x55985ade3588 <line:575:22>
| `-NonNullAttr 0x55985ade35e0 <col:63, col:77> 1
|-FunctionDecl 0x55985ade3808 <line:576:1, line:579:82> line:576:12 pthread_rwlockattr_getpshared 'int (const pthread_rwlockattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x55985ade3628 <col:43, line:577:19> col:19 __attr 'const pthread_rwlockattr_t *restrict'
| |-ParmVarDecl 0x55985ade36a8 <line:578:8, col:24> col:24 __pshared 'int *restrict'
| |-NoThrowAttr 0x55985ade38b8 <line:579:22>
| `-NonNullAttr 0x55985ade3910 <col:63, col:80> 1 2
|-FunctionDecl 0x55985ade3b38 <line:580:1, line:582:79> line:580:12 pthread_rwlockattr_setpshared 'int (pthread_rwlockattr_t *, int)' extern
| |-ParmVarDecl 0x55985ade3958 <col:43, col:65> col:65 __attr 'pthread_rwlockattr_t *'
| |-ParmVarDecl 0x55985ade39d8 <line:581:8, col:12> col:12 __pshared 'int'
| |-NoThrowAttr 0x55985ade3be8 <line:582:22>
| `-NonNullAttr 0x55985ade3c40 <col:63, col:77> 1
|-FunctionDecl 0x55985ade3de8 <line:583:1, line:586:82> line:583:12 pthread_rwlockattr_getkind_np 'int (const pthread_rwlockattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x55985ade3c88 <col:43, line:584:19> col:19 __attr 'const pthread_rwlockattr_t *restrict'
| |-ParmVarDecl 0x55985ade3d08 <line:585:8, col:24> col:24 __pref 'int *restrict'
| |-NoThrowAttr 0x55985ade3e98 <line:586:22>
| `-NonNullAttr 0x55985ade3ef0 <col:63, col:80> 1 2
|-FunctionDecl 0x55985ade4078 <line:587:1, line:588:93> line:587:12 pthread_rwlockattr_setkind_np 'int (pthread_rwlockattr_t *, int)' extern
| |-ParmVarDecl 0x55985ade3f38 <col:43, col:65> col:65 __attr 'pthread_rwlockattr_t *'
| |-ParmVarDecl 0x55985ade3fb8 <line:588:8, col:12> col:12 __pref 'int'
| |-NoThrowAttr 0x55985ade4128 <col:36>
| `-NonNullAttr 0x55985ade4180 <col:77, col:91> 1
|-FunctionDecl 0x55985ade44b8 <line:589:1, line:591:79> line:589:12 pthread_cond_init 'int (pthread_cond_t *restrict, const pthread_condattr_t *restrict)' extern
| |-ParmVarDecl 0x55985ade4260 <col:31, col:58> col:58 __cond 'pthread_cond_t *restrict'
| |-ParmVarDecl 0x55985ade4370 <line:590:10, col:47> col:47 __cond_attr 'const pthread_condattr_t *restrict'
| |-NoThrowAttr 0x55985ade4568 <line:591:22>
| `-NonNullAttr 0x55985ade45c0 <col:63, col:77> 1
|-FunctionDecl 0x55985ade4738 <line:592:1, line:593:79> line:592:12 pthread_cond_destroy 'int (pthread_cond_t *)' extern
| |-ParmVarDecl 0x55985ade4608 <col:34, col:50> col:50 __cond 'pthread_cond_t *'
| |-NoThrowAttr 0x55985ade47e0 <line:593:22>
| `-NonNullAttr 0x55985ade4838 <col:63, col:77> 1
|-FunctionDecl 0x55985ade4940 <line:594:1, line:595:68> line:594:12 pthread_cond_signal 'int (pthread_cond_t *)' extern
| |-ParmVarDecl 0x55985ade4888 <col:33, col:49> col:49 __cond 'pthread_cond_t *'
| |-NoThrowAttr 0x55985ade49e8 <line:595:22>
| `-NonNullAttr 0x55985ade4a40 <col:52, col:66> 1
|-FunctionDecl 0x55985ade4b58 <line:596:1, line:597:68> line:596:12 pthread_cond_broadcast 'int (pthread_cond_t *)' extern
| |-ParmVarDecl 0x55985ade4aa0 <col:36, col:52> col:52 __cond 'pthread_cond_t *'
| |-NoThrowAttr 0x55985ade4c00 <line:597:22>
| `-NonNullAttr 0x55985ade4c58 <col:52, col:66> 1
|-FunctionDecl 0x55985ade4e88 <line:598:1, line:600:41> line:598:12 pthread_cond_wait 'int (pthread_cond_t *restrict, pthread_mutex_t *restrict)' extern
| |-ParmVarDecl 0x55985ade4ca8 <col:31, col:58> col:58 __cond 'pthread_cond_t *restrict'
| |-ParmVarDecl 0x55985ade4d20 <line:599:10, col:38> col:38 __mutex 'pthread_mutex_t *restrict'
| `-NonNullAttr 0x55985ade4f38 <line:600:22, col:39> 1 2
|-FunctionDecl 0x55985ade5268 <line:601:1, line:604:44> line:601:12 pthread_cond_timedwait 'int (pthread_cond_t *restrict, pthread_mutex_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x55985ade4fb8 <col:36, col:63> col:63 __cond 'pthread_cond_t *restrict'
| |-ParmVarDecl 0x55985ade5030 <line:602:8, col:36> col:36 __mutex 'pthread_mutex_t *restrict'
| |-ParmVarDecl 0x55985ade50c0 <line:603:8, col:42> col:42 __abstime 'const struct timespec *restrict'
| `-NonNullAttr 0x55985ade5320 <line:604:22, col:42> 1 2 3
|-FunctionDecl 0x55985ade5538 <line:605:1, line:606:79> line:605:12 pthread_condattr_init 'int (pthread_condattr_t *)' extern
| |-ParmVarDecl 0x55985ade5400 <col:35, col:55> col:55 __attr 'pthread_condattr_t *'
| |-NoThrowAttr 0x55985ade55e0 <line:606:22>
| `-NonNullAttr 0x55985ade5638 <col:63, col:77> 1
|-FunctionDecl 0x55985ade5740 <line:607:1, line:608:79> line:607:12 pthread_condattr_destroy 'int (pthread_condattr_t *)' extern
| |-ParmVarDecl 0x55985ade5688 <col:38, col:58> col:58 __attr 'pthread_condattr_t *'
| |-NoThrowAttr 0x55985ade57e8 <line:608:22>
| `-NonNullAttr 0x55985ade5840 <col:63, col:77> 1
|-FunctionDecl 0x55985ade5aa0 <line:609:1, line:612:82> line:609:12 pthread_condattr_getpshared 'int (const pthread_condattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x55985ade5888 <col:41, line:610:17> col:17 __attr 'const pthread_condattr_t *restrict'
| |-ParmVarDecl 0x55985ade5908 <line:611:6, col:22> col:22 __pshared 'int *restrict'
| |-NoThrowAttr 0x55985ade5b50 <line:612:22>
| `-NonNullAttr 0x55985ade5ba8 <col:63, col:80> 1 2
|-FunctionDecl 0x55985ade5db8 <line:613:1, line:614:94> line:613:12 pthread_condattr_setpshared 'int (pthread_condattr_t *, int)' extern
| |-ParmVarDecl 0x55985ade5bf8 <col:41, col:61> col:61 __attr 'pthread_condattr_t *'
| |-ParmVarDecl 0x55985ade5c78 <line:614:6, col:10> col:10 __pshared 'int'
| |-NoThrowAttr 0x55985ade5e68 <col:37>
| `-NonNullAttr 0x55985ade5ec0 <col:78, col:92> 1
|-FunctionDecl 0x55985ade60d8 <line:615:1, line:618:82> line:615:12 pthread_condattr_getclock 'int (const pthread_condattr_t *restrict, __clockid_t *restrict)' extern
| |-ParmVarDecl 0x55985ade5f08 <col:39, line:616:22> col:22 __attr 'const pthread_condattr_t *restrict'
| |-ParmVarDecl 0x55985ade5fb0 <line:617:11, col:35> col:35 __clock_id '__clockid_t *restrict'
| |-NoThrowAttr 0x55985ade6188 <line:618:22>
| `-NonNullAttr 0x55985ade61e0 <col:63, col:80> 1 2
|-FunctionDecl 0x55985ade63a8 <line:619:1, line:621:79> line:619:12 pthread_condattr_setclock 'int (pthread_condattr_t *, __clockid_t)' extern
| |-ParmVarDecl 0x55985ade6228 <col:39, col:59> col:59 __attr 'pthread_condattr_t *'
| |-ParmVarDecl 0x55985ade62a0 <line:620:11, col:23> col:23 __clock_id '__clockid_t':'int'
| |-NoThrowAttr 0x55985ade6458 <line:621:22>
| `-NonNullAttr 0x55985ade64b0 <col:63, col:77> 1
|-FunctionDecl 0x55985ade6758 <line:622:1, line:623:79> line:622:12 pthread_spin_init 'int (pthread_spinlock_t *, int)' extern
| |-ParmVarDecl 0x55985ade6590 <col:31, col:51> col:51 __lock 'pthread_spinlock_t *'
| |-ParmVarDecl 0x55985ade6610 <col:59, col:63> col:63 __pshared 'int'
| |-NoThrowAttr 0x55985ade6808 <line:623:22>
| `-NonNullAttr 0x55985ade6860 <col:63, col:77> 1
|-FunctionDecl 0x55985ade69d8 <line:624:1, line:625:79> line:624:12 pthread_spin_destroy 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x55985ade68a8 <col:34, col:54> col:54 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x55985ade6ab0 <line:625:22>
| `-NonNullAttr 0x55985ade6b08 <col:63, col:77> 1
|-FunctionDecl 0x55985ade6c10 <line:626:1, line:627:68> line:626:12 pthread_spin_lock 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x55985ade6b58 <col:31, col:51> col:51 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x55985ade6cb8 <line:627:22>
| `-NonNullAttr 0x55985ade6d10 <col:52, col:66> 1
|-FunctionDecl 0x55985ade6e10 <line:628:1, line:629:68> line:628:12 pthread_spin_trylock 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x55985ade6d58 <col:34, col:54> col:54 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x55985ade6eb8 <line:629:22>
| `-NonNullAttr 0x55985ade6f10 <col:52, col:66> 1
|-FunctionDecl 0x55985ade7010 <line:630:1, line:631:68> line:630:12 pthread_spin_unlock 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x55985ade6f58 <col:33, col:53> col:53 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x55985ade70b8 <line:631:22>
| `-NonNullAttr 0x55985ade7110 <col:52, col:66> 1
|-FunctionDecl 0x55985ade74e8 <line:632:1, line:635:79> line:632:12 pthread_barrier_init 'int (pthread_barrier_t *restrict, const pthread_barrierattr_t *restrict, unsigned int)' extern
| |-ParmVarDecl 0x55985ade71f0 <col:34, col:64> col:64 __barrier 'pthread_barrier_t *restrict'
| |-ParmVarDecl 0x55985ade7300 <line:633:6, line:634:6> col:6 __attr 'const pthread_barrierattr_t *restrict'
| |-ParmVarDecl 0x55985ade7380 <col:14, col:27> col:27 __count 'unsigned int'
| |-NoThrowAttr 0x55985ade75a0 <line:635:22>
| `-NonNullAttr 0x55985ade75f8 <col:63, col:77> 1
|-FunctionDecl 0x55985ade7778 <line:636:1, line:637:79> line:636:12 pthread_barrier_destroy 'int (pthread_barrier_t *)' extern
| |-ParmVarDecl 0x55985ade7648 <col:37, col:56> col:56 __barrier 'pthread_barrier_t *'
| |-NoThrowAttr 0x55985ade7820 <line:637:22>
| `-NonNullAttr 0x55985ade7878 <col:63, col:77> 1
|-FunctionDecl 0x55985ade7980 <line:638:1, line:639:68> line:638:12 pthread_barrier_wait 'int (pthread_barrier_t *)' extern
| |-ParmVarDecl 0x55985ade78c8 <col:34, col:53> col:53 __barrier 'pthread_barrier_t *'
| |-NoThrowAttr 0x55985ade7a28 <line:639:22>
| `-NonNullAttr 0x55985ade7a80 <col:52, col:66> 1
|-FunctionDecl 0x55985ade8c88 <line:640:1, line:641:79> line:640:12 pthread_barrierattr_init 'int (pthread_barrierattr_t *)' extern
| |-ParmVarDecl 0x55985ade8b50 <col:38, col:61> col:61 __attr 'pthread_barrierattr_t *'
| |-NoThrowAttr 0x55985ade8d30 <line:641:22>
| `-NonNullAttr 0x55985ade8d88 <col:63, col:77> 1
|-FunctionDecl 0x55985ade8e90 <line:642:1, line:643:79> line:642:12 pthread_barrierattr_destroy 'int (pthread_barrierattr_t *)' extern
| |-ParmVarDecl 0x55985ade8dd8 <col:41, col:64> col:64 __attr 'pthread_barrierattr_t *'
| |-NoThrowAttr 0x55985ade8f38 <line:643:22>
| `-NonNullAttr 0x55985ade8f90 <col:63, col:77> 1
|-FunctionDecl 0x55985ade91b8 <line:644:1, line:647:82> line:644:12 pthread_barrierattr_getpshared 'int (const pthread_barrierattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x55985ade8fd8 <col:44, line:645:20> col:20 __attr 'const pthread_barrierattr_t *restrict'
| |-ParmVarDecl 0x55985ade9058 <line:646:9, col:25> col:25 __pshared 'int *restrict'
| |-NoThrowAttr 0x55985ade9268 <line:647:22>
| `-NonNullAttr 0x55985ade92c0 <col:63, col:80> 1 2
|-FunctionDecl 0x55985ade94c8 <line:648:1, line:650:79> line:648:12 pthread_barrierattr_setpshared 'int (pthread_barrierattr_t *, int)' extern
| |-ParmVarDecl 0x55985ade9308 <col:44, col:67> col:67 __attr 'pthread_barrierattr_t *'
| |-ParmVarDecl 0x55985ade9388 <line:649:9, col:13> col:13 __pshared 'int'
| |-NoThrowAttr 0x55985ade9578 <line:650:22>
| `-NonNullAttr 0x55985ade95d0 <col:63, col:77> 1
|-FunctionDecl 0x55985ade9918 <line:651:1, line:653:79> line:651:12 pthread_key_create 'int (pthread_key_t *, void (*)(void *))' extern
| |-ParmVarDecl 0x55985ade96b0 <col:32, col:47> col:47 __key 'pthread_key_t *'
| |-ParmVarDecl 0x55985ade97d0 <line:652:11, col:43> col:18 __destr_function 'void (*)(void *)'
| |-NoThrowAttr 0x55985ade99c8 <line:653:22>
| `-NonNullAttr 0x55985ade9a20 <col:63, col:77> 1
|-FunctionDecl 0x55985ade9b88 <line:654:1, col:92> col:12 pthread_key_delete 'int (pthread_key_t)' extern
| |-ParmVarDecl 0x55985ade9a68 <col:32, col:46> col:46 __key 'pthread_key_t':'unsigned int'
| `-NoThrowAttr 0x55985ade9c30 <col:69>
|-FunctionDecl 0x55985ade9da8 <line:655:1, col:95> col:14 pthread_getspecific 'void *(pthread_key_t)' extern
| |-ParmVarDecl 0x55985ade9c98 <col:35, col:49> col:49 __key 'pthread_key_t':'unsigned int'
| `-NoThrowAttr 0x55985ade9e50 <col:72>
|-FunctionDecl 0x55985adea088 <line:656:1, line:657:67> line:656:12 pthread_setspecific 'int (pthread_key_t, const void *)' extern
| |-ParmVarDecl 0x55985ade9eb8 <col:33, col:47> col:47 __key 'pthread_key_t':'unsigned int'
| |-ParmVarDecl 0x55985ade9f68 <line:657:5, col:17> col:17 __pointer 'const void *'
| `-NoThrowAttr 0x55985adea138 <col:44>
|-FunctionDecl 0x55985adea358 <line:658:1, line:660:79> line:658:12 pthread_getcpuclockid 'int (pthread_t, __clockid_t *)' extern
| |-ParmVarDecl 0x55985adea1a0 <col:35, col:45> col:45 __thread_id 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x55985adea218 <line:659:7, col:20> col:20 __clock_id '__clockid_t *'
| |-NoThrowAttr 0x55985adea408 <line:660:22>
| `-NonNullAttr 0x55985adea460 <col:63, col:77> 2
|-FunctionDecl 0x55985adea8a8 <line:661:1, line:663:70> line:661:12 pthread_atfork 'int (void (*)(void), void (*)(void), void (*)(void))' extern
| |-ParmVarDecl 0x55985adea540 <col:28, col:51> col:35 __prepare 'void (*)(void)'
| |-ParmVarDecl 0x55985adea650 <line:662:7, col:29> col:14 __parent 'void (*)(void)'
| |-ParmVarDecl 0x55985adea760 <line:663:7, col:28> col:14 __child 'void (*)(void)'
| `-NoThrowAttr 0x55985adea960 <col:47>
|-FunctionDecl 0x55985adeaaf0 <line:665:1, col:20> col:8 used P0 'void *(void *)'
| `-ParmVarDecl 0x55985adea9d0 <col:11, col:17> col:17 arg 'void *'
|-FunctionDecl 0x55985adeac48 <line:666:1, col:20> col:8 used P1 'void *(void *)'
| `-ParmVarDecl 0x55985adeabb0 <col:11, col:17> col:17 arg 'void *'
|-FunctionDecl 0x55985adeada0 <line:667:1, col:20> col:8 used P2 'void *(void *)'
| `-ParmVarDecl 0x55985adead08 <col:11, col:17> col:17 arg 'void *'
|-FunctionDecl 0x55985adeaef8 <line:668:1, col:20> col:8 used P3 'void *(void *)'
| `-ParmVarDecl 0x55985adeae60 <col:11, col:17> col:17 arg 'void *'
|-FunctionDecl 0x55985adeafc0 <line:669:1, col:12> col:6 fence 'void ()'
|-FunctionDecl 0x55985adeb080 <line:670:1, col:12> col:6 isync 'void ()'
|-FunctionDecl 0x55985adeb140 <line:671:1, col:14> col:6 lwfence 'void ()'
|-VarDecl 0x55985adeb1f8 <line:672:1, col:5> col:5 used __unbuffered_cnt 'int'
|-VarDecl 0x55985adeb278 prev 0x55985adeb1f8 <line:673:1, col:24> col:5 used __unbuffered_cnt 'int' cinit
| `-IntegerLiteral 0x55985adeb2e0 <col:24> 'int' 0
|-VarDecl 0x55985adeb318 <line:674:1, col:5> col:5 used __unbuffered_p3_EAX 'int'
|-VarDecl 0x55985adeb398 prev 0x55985adeb318 <line:675:1, col:27> col:5 used __unbuffered_p3_EAX 'int' cinit
| `-IntegerLiteral 0x55985adeb400 <col:27> 'int' 0
|-VarDecl 0x55985adeb438 <line:676:1, col:5> col:5 used a 'int'
|-VarDecl 0x55985adeb4b8 prev 0x55985adeb438 <line:677:1, col:9> col:5 used a 'int' cinit
| `-IntegerLiteral 0x55985adeb520 <col:9> 'int' 0
|-VarDecl 0x55985adeb550 <line:678:1, col:7> col:7 used a$flush_delayed '_Bool'
|-VarDecl 0x55985adeb5d0 <line:679:1, col:5> col:5 used a$mem_tmp 'int'
|-VarDecl 0x55985adeb648 <line:680:1, col:7> col:7 used a$r_buff0_thd0 '_Bool'
|-VarDecl 0x55985adeb6c0 <line:681:1, col:7> col:7 used a$r_buff0_thd1 '_Bool'
|-VarDecl 0x55985adeb738 <line:682:1, col:7> col:7 used a$r_buff0_thd2 '_Bool'
|-VarDecl 0x55985adeb7b0 <line:683:1, col:7> col:7 used a$r_buff0_thd3 '_Bool'
|-VarDecl 0x55985adeb828 <line:684:1, col:7> col:7 used a$r_buff0_thd4 '_Bool'
|-VarDecl 0x55985adeb8a0 <line:685:1, col:7> col:7 used a$r_buff1_thd0 '_Bool'
|-VarDecl 0x55985adeb918 <line:686:1, col:7> col:7 used a$r_buff1_thd1 '_Bool'
|-VarDecl 0x55985adeb990 <line:687:1, col:7> col:7 used a$r_buff1_thd2 '_Bool'
|-VarDecl 0x55985adeba08 <line:688:1, col:7> col:7 used a$r_buff1_thd3 '_Bool'
|-VarDecl 0x55985adeba80 <line:689:1, col:7> col:7 used a$r_buff1_thd4 '_Bool'
|-VarDecl 0x55985adebb10 <line:690:1, col:7> col:7 a$read_delayed '_Bool'
|-VarDecl 0x55985adebb90 <line:691:1, col:6> col:6 a$read_delayed_var 'int *'
|-VarDecl 0x55985adebc10 <line:692:1, col:5> col:5 used a$w_buff0 'int'
|-VarDecl 0x55985adebc88 <line:693:1, col:7> col:7 used a$w_buff0_used '_Bool'
|-VarDecl 0x55985adebd08 <line:694:1, col:5> col:5 used a$w_buff1 'int'
|-VarDecl 0x55985adebd80 <line:695:1, col:7> col:7 used a$w_buff1_used '_Bool'
|-VarDecl 0x55985adebdf8 <line:696:1, col:7> col:7 used main$tmp_guard0 '_Bool'
|-VarDecl 0x55985adebe70 <line:697:1, col:7> col:7 used main$tmp_guard1 '_Bool'
|-VarDecl 0x55985adebef0 <line:698:1, col:5> col:5 used x 'int'
|-VarDecl 0x55985adebf70 prev 0x55985adebef0 <line:699:1, col:9> col:5 used x 'int' cinit
| `-IntegerLiteral 0x55985adebfd8 <col:9> 'int' 0
|-VarDecl 0x55985adec010 <line:700:1, col:5> col:5 used y 'int'
|-VarDecl 0x55985adec090 prev 0x55985adec010 <line:701:1, col:9> col:5 used y 'int' cinit
| `-IntegerLiteral 0x55985adec0f8 <col:9> 'int' 0
|-VarDecl 0x55985adec130 <line:702:1, col:5> col:5 used z 'int'
|-VarDecl 0x55985adec1b0 prev 0x55985adec130 <line:703:1, col:9> col:5 used z 'int' cinit
| `-IntegerLiteral 0x55985adec218 <col:9> 'int' 0
|-VarDecl 0x55985adec248 <line:704:1, col:7> col:7 used weak$$choice0 '_Bool'
|-VarDecl 0x55985adec2c0 <line:705:1, col:7> col:7 used weak$$choice2 '_Bool'
|-FunctionDecl 0x55985adec3d8 prev 0x55985adeaaf0 <line:706:1, line:735:1> line:706:8 used P0 'void *(void *)'
| |-ParmVarDecl 0x55985adec340 <col:11, col:17> col:17 arg 'void *'
| `-CompoundStmt 0x55985adedc88 <line:707:1, line:735:1>
|   |-CallExpr 0x55985adec4e8 <line:708:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x55985adec4d0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55985adec480 <col:3> 'void ()' Function 0x55985ad91e40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x55985adec560 <line:709:3, col:15> 'int' '='
|   | |-DeclRefExpr 0x55985adec508 <col:3> 'int' lvalue Var 0x55985adebd08 'a$w_buff1' 'int'
|   | `-ImplicitCastExpr 0x55985adec548 <col:15> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x55985adec528 <col:15> 'int' lvalue Var 0x55985adebc10 'a$w_buff0' 'int'
|   |-BinaryOperator 0x55985adec5c0 <line:710:3, col:15> 'int' '='
|   | |-DeclRefExpr 0x55985adec580 <col:3> 'int' lvalue Var 0x55985adebc10 'a$w_buff0' 'int'
|   | `-IntegerLiteral 0x55985adec5a0 <col:15> 'int' 1
|   |-BinaryOperator 0x55985adec638 <line:711:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x55985adec5e0 <col:3> '_Bool' lvalue Var 0x55985adebd80 'a$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x55985adec620 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x55985adec600 <col:20> '_Bool' lvalue Var 0x55985adebc88 'a$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x55985adec6d0 <line:712:3, col:27> '_Bool' '='
|   | |-DeclRefExpr 0x55985adec658 <col:3> '_Bool' lvalue Var 0x55985adebc88 'a$w_buff0_used' '_Bool'
|   | `-CStyleCastExpr 0x55985adec6a8 <col:20, col:27> '_Bool' <IntegralToBoolean>
|   |   `-IntegerLiteral 0x55985adec678 <col:27> 'int' 1
|   |-CallExpr 0x55985adec858 <line:713:3, col:56> 'void'
|   | |-ImplicitCastExpr 0x55985adec840 <col:3> 'void (*)(int)' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x55985adec6f0 <col:3> 'void (int)' Function 0x55985ad91bc8 '__VERIFIER_assert' 'void (int)'
|   | `-UnaryOperator 0x55985adec7f0 <col:21, col:55> 'int' prefix '!' cannot overflow
|   |   `-ParenExpr 0x55985adec7d0 <col:22, col:55> 'int'
|   |     `-BinaryOperator 0x55985adec7b0 <col:23, col:41> 'int' '&&'
|   |       |-ImplicitCastExpr 0x55985adec768 <col:23> 'int' <IntegralCast>
|   |       | `-ImplicitCastExpr 0x55985adec750 <col:23> '_Bool' <LValueToRValue>
|   |       |   `-DeclRefExpr 0x55985adec710 <col:23> '_Bool' lvalue Var 0x55985adebd80 'a$w_buff1_used' '_Bool'
|   |       `-ImplicitCastExpr 0x55985adec798 <col:41> 'int' <IntegralCast>
|   |         `-ImplicitCastExpr 0x55985adec780 <col:41> '_Bool' <LValueToRValue>
|   |           `-DeclRefExpr 0x55985adec730 <col:41> '_Bool' lvalue Var 0x55985adebc88 'a$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x55985adec8d8 <line:714:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x55985adec880 <col:3> '_Bool' lvalue Var 0x55985adeb8a0 'a$r_buff1_thd0' '_Bool'
|   | `-ImplicitCastExpr 0x55985adec8c0 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x55985adec8a0 <col:20> '_Bool' lvalue Var 0x55985adeb648 'a$r_buff0_thd0' '_Bool'
|   |-BinaryOperator 0x55985adec950 <line:715:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x55985adec8f8 <col:3> '_Bool' lvalue Var 0x55985adeb918 'a$r_buff1_thd1' '_Bool'
|   | `-ImplicitCastExpr 0x55985adec938 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x55985adec918 <col:20> '_Bool' lvalue Var 0x55985adeb6c0 'a$r_buff0_thd1' '_Bool'
|   |-BinaryOperator 0x55985adec9c8 <line:716:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x55985adec970 <col:3> '_Bool' lvalue Var 0x55985adeb990 'a$r_buff1_thd2' '_Bool'
|   | `-ImplicitCastExpr 0x55985adec9b0 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x55985adec990 <col:20> '_Bool' lvalue Var 0x55985adeb738 'a$r_buff0_thd2' '_Bool'
|   |-BinaryOperator 0x55985adeca40 <line:717:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x55985adec9e8 <col:3> '_Bool' lvalue Var 0x55985adeba08 'a$r_buff1_thd3' '_Bool'
|   | `-ImplicitCastExpr 0x55985adeca28 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x55985adeca08 <col:20> '_Bool' lvalue Var 0x55985adeb7b0 'a$r_buff0_thd3' '_Bool'
|   |-BinaryOperator 0x55985adecab8 <line:718:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x55985adeca60 <col:3> '_Bool' lvalue Var 0x55985adeba80 'a$r_buff1_thd4' '_Bool'
|   | `-ImplicitCastExpr 0x55985adecaa0 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x55985adeca80 <col:20> '_Bool' lvalue Var 0x55985adeb828 'a$r_buff0_thd4' '_Bool'
|   |-BinaryOperator 0x55985adecb68 <line:719:3, col:27> '_Bool' '='
|   | |-DeclRefExpr 0x55985adecad8 <col:3> '_Bool' lvalue Var 0x55985adeb6c0 'a$r_buff0_thd1' '_Bool'
|   | `-CStyleCastExpr 0x55985adecb40 <col:20, col:27> '_Bool' <IntegralToBoolean>
|   |   `-IntegerLiteral 0x55985adecb10 <col:27> 'int' 1
|   |-CallExpr 0x55985adecbc0 <line:720:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x55985adecba8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55985adecb88 <col:3> 'void ()' Function 0x55985ad91f00 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x55985adecc18 <line:721:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x55985adecc00 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55985adecbe0 <col:3> 'void ()' Function 0x55985ad91e40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x55985adecc78 <line:722:3, col:7> 'int' '='
|   | |-DeclRefExpr 0x55985adecc38 <col:3> 'int' lvalue Var 0x55985adebf70 'x' 'int'
|   | `-IntegerLiteral 0x55985adecc58 <col:7> 'int' 1
|   |-CallExpr 0x55985adeccd0 <line:723:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x55985adeccb8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55985adecc98 <col:3> 'void ()' Function 0x55985ad91f00 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x55985adecd28 <line:724:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x55985adecd10 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55985adeccf0 <col:3> 'void ()' Function 0x55985ad91e40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x55985aded010 <line:725:3, col:103> 'int' '='
|   | |-DeclRefExpr 0x55985adecd48 <col:3> 'int' lvalue Var 0x55985adeb4b8 'a' 'int'
|   | `-ConditionalOperator 0x55985adecfe0 <col:7, col:103> 'int'
|   |   |-BinaryOperator 0x55985adece08 <col:7, col:25> 'int' '&&'
|   |   | |-ImplicitCastExpr 0x55985adecdc0 <col:7> 'int' <IntegralCast>
|   |   | | `-ImplicitCastExpr 0x55985adecda8 <col:7> '_Bool' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x55985adecd68 <col:7> '_Bool' lvalue Var 0x55985adebc88 'a$w_buff0_used' '_Bool'
|   |   | `-ImplicitCastExpr 0x55985adecdf0 <col:25> 'int' <IntegralCast>
|   |   |   `-ImplicitCastExpr 0x55985adecdd8 <col:25> '_Bool' <LValueToRValue>
|   |   |     `-DeclRefExpr 0x55985adecd88 <col:25> '_Bool' lvalue Var 0x55985adeb6c0 'a$r_buff0_thd1' '_Bool'
|   |   |-ImplicitCastExpr 0x55985adecfc8 <col:42> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x55985adece28 <col:42> 'int' lvalue Var 0x55985adebc10 'a$w_buff0' 'int'
|   |   `-ParenExpr 0x55985adecfa8 <col:54, col:103> 'int'
|   |     `-ConditionalOperator 0x55985adecf78 <col:55, col:102> 'int'
|   |       |-BinaryOperator 0x55985adecee8 <col:55, col:73> 'int' '&&'
|   |       | |-ImplicitCastExpr 0x55985adecea0 <col:55> 'int' <IntegralCast>
|   |       | | `-ImplicitCastExpr 0x55985adece88 <col:55> '_Bool' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x55985adece48 <col:55> '_Bool' lvalue Var 0x55985adebd80 'a$w_buff1_used' '_Bool'
|   |       | `-ImplicitCastExpr 0x55985adeced0 <col:73> 'int' <IntegralCast>
|   |       |   `-ImplicitCastExpr 0x55985adeceb8 <col:73> '_Bool' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x55985adece68 <col:73> '_Bool' lvalue Var 0x55985adeb918 'a$r_buff1_thd1' '_Bool'
|   |       |-ImplicitCastExpr 0x55985adecf48 <col:90> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x55985adecf08 <col:90> 'int' lvalue Var 0x55985adebd08 'a$w_buff1' 'int'
|   |       `-ImplicitCastExpr 0x55985adecf60 <col:102> 'int' <LValueToRValue>
|   |         `-DeclRefExpr 0x55985adecf28 <col:102> 'int' lvalue Var 0x55985adeb4b8 'a' 'int'
|   |-BinaryOperator 0x55985aded218 <line:726:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x55985aded030 <col:3> '_Bool' lvalue Var 0x55985adebc88 'a$w_buff0_used' '_Bool'
|   | `-ImplicitCastExpr 0x55985aded200 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55985aded1d0 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x55985aded0f0 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x55985aded0a8 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x55985aded090 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x55985aded050 <col:20> '_Bool' lvalue Var 0x55985adebc88 'a$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x55985aded0d8 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x55985aded0c0 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x55985aded070 <col:38> '_Bool' lvalue Var 0x55985adeb6c0 'a$r_buff0_thd1' '_Bool'
|   |     |-ImplicitCastExpr 0x55985aded188 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x55985aded140 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x55985aded110 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x55985aded1b8 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x55985aded1a0 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x55985aded168 <col:66> '_Bool' lvalue Var 0x55985adebc88 'a$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x55985aded500 <line:727:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x55985aded238 <col:3> '_Bool' lvalue Var 0x55985adebd80 'a$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x55985aded4e8 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55985aded4b8 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x55985aded3d8 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x55985aded2f8 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x55985aded2b0 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x55985aded298 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x55985aded258 <col:20> '_Bool' lvalue Var 0x55985adebc88 'a$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x55985aded2e0 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x55985aded2c8 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x55985aded278 <col:38> '_Bool' lvalue Var 0x55985adeb6c0 'a$r_buff0_thd1' '_Bool'
|   |     | `-BinaryOperator 0x55985aded3b8 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x55985aded370 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x55985aded358 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x55985aded318 <col:56> '_Bool' lvalue Var 0x55985adebd80 'a$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x55985aded3a0 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x55985aded388 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x55985aded338 <col:74> '_Bool' lvalue Var 0x55985adeb918 'a$r_buff1_thd1' '_Bool'
|   |     |-ImplicitCastExpr 0x55985aded470 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x55985aded428 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x55985aded3f8 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x55985aded4a0 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x55985aded488 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x55985aded450 <col:102> '_Bool' lvalue Var 0x55985adebd80 'a$w_buff1_used' '_Bool'
|   |-BinaryOperator 0x55985aded708 <line:728:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x55985aded520 <col:3> '_Bool' lvalue Var 0x55985adeb6c0 'a$r_buff0_thd1' '_Bool'
|   | `-ImplicitCastExpr 0x55985aded6f0 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55985aded6c0 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x55985aded5e0 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x55985aded598 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x55985aded580 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x55985aded540 <col:20> '_Bool' lvalue Var 0x55985adebc88 'a$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x55985aded5c8 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x55985aded5b0 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x55985aded560 <col:38> '_Bool' lvalue Var 0x55985adeb6c0 'a$r_buff0_thd1' '_Bool'
|   |     |-ImplicitCastExpr 0x55985aded678 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x55985aded630 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x55985aded600 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x55985aded6a8 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x55985aded690 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x55985aded658 <col:66> '_Bool' lvalue Var 0x55985adeb6c0 'a$r_buff0_thd1' '_Bool'
|   |-BinaryOperator 0x55985aded9f0 <line:729:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x55985aded728 <col:3> '_Bool' lvalue Var 0x55985adeb918 'a$r_buff1_thd1' '_Bool'
|   | `-ImplicitCastExpr 0x55985aded9d8 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55985aded9a8 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x55985aded8c8 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x55985aded7e8 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x55985aded7a0 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x55985aded788 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x55985aded748 <col:20> '_Bool' lvalue Var 0x55985adebc88 'a$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x55985aded7d0 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x55985aded7b8 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x55985aded768 <col:38> '_Bool' lvalue Var 0x55985adeb6c0 'a$r_buff0_thd1' '_Bool'
|   |     | `-BinaryOperator 0x55985aded8a8 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x55985aded860 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x55985aded848 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x55985aded808 <col:56> '_Bool' lvalue Var 0x55985adebd80 'a$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x55985aded890 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x55985aded878 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x55985aded828 <col:74> '_Bool' lvalue Var 0x55985adeb918 'a$r_buff1_thd1' '_Bool'
|   |     |-ImplicitCastExpr 0x55985aded960 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x55985aded918 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x55985aded8e8 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x55985aded990 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x55985aded978 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x55985aded940 <col:102> '_Bool' lvalue Var 0x55985adeb918 'a$r_buff1_thd1' '_Bool'
|   |-CallExpr 0x55985adeda48 <line:730:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x55985adeda30 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55985adeda10 <col:3> 'void ()' Function 0x55985ad91f00 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x55985adedaa0 <line:731:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x55985adeda88 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55985adeda68 <col:3> 'void ()' Function 0x55985ad91e40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x55985adedb78 <line:732:3, col:41> 'int' '='
|   | |-DeclRefExpr 0x55985adedac0 <col:3> 'int' lvalue Var 0x55985adeb278 '__unbuffered_cnt' 'int'
|   | `-BinaryOperator 0x55985adedb58 <col:22, col:41> 'int' '+'
|   |   |-ImplicitCastExpr 0x55985adedb40 <col:22> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x55985adedae0 <col:22> 'int' lvalue Var 0x55985adeb278 '__unbuffered_cnt' 'int'
|   |   `-IntegerLiteral 0x55985adedb20 <col:41> 'int' 1
|   |-CallExpr 0x55985adedbd0 <line:733:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x55985adedbb8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55985adedb98 <col:3> 'void ()' Function 0x55985ad91f00 '__VERIFIER_atomic_end' 'void ()'
|   `-ReturnStmt 0x55985adedc78 <line:734:3, col:36>
|     `-CallExpr 0x55985adedc58 <col:10, col:36> 'void *'
|       `-ImplicitCastExpr 0x55985adedc40 <col:10> 'void *(*)(void)' <FunctionToPointerDecay>
|         `-DeclRefExpr 0x55985adedbf0 <col:10> 'void *(void)' Function 0x55985ad91958 '__VERIFIER_nondet_pointer' 'void *(void)'
|-FunctionDecl 0x55985adede20 prev 0x55985adeac48 <line:736:1, line:755:1> line:736:8 used P1 'void *(void *)'
| |-ParmVarDecl 0x55985adedd88 <col:11, col:17> col:17 arg 'void *'
| `-CompoundStmt 0x55985adef040 <line:737:1, line:755:1>
|   |-CallExpr 0x55985adedf00 <line:738:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x55985adedee8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55985adedec8 <col:3> 'void ()' Function 0x55985ad91e40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x55985adedf60 <line:739:3, col:7> 'int' '='
|   | |-DeclRefExpr 0x55985adedf20 <col:3> 'int' lvalue Var 0x55985adebf70 'x' 'int'
|   | `-IntegerLiteral 0x55985adedf40 <col:7> 'int' 2
|   |-CallExpr 0x55985adedfb8 <line:740:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x55985adedfa0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55985adedf80 <col:3> 'void ()' Function 0x55985ad91f00 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x55985adee010 <line:741:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x55985adedff8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55985adedfd8 <col:3> 'void ()' Function 0x55985ad91e40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x55985adee070 <line:742:3, col:7> 'int' '='
|   | |-DeclRefExpr 0x55985adee030 <col:3> 'int' lvalue Var 0x55985adec090 'y' 'int'
|   | `-IntegerLiteral 0x55985adee050 <col:7> 'int' 1
|   |-CallExpr 0x55985adee0c8 <line:743:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x55985adee0b0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55985adee090 <col:3> 'void ()' Function 0x55985ad91f00 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x55985adee120 <line:744:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x55985adee108 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55985adee0e8 <col:3> 'void ()' Function 0x55985ad91e40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x55985adee408 <line:745:3, col:103> 'int' '='
|   | |-DeclRefExpr 0x55985adee140 <col:3> 'int' lvalue Var 0x55985adeb4b8 'a' 'int'
|   | `-ConditionalOperator 0x55985adee3d8 <col:7, col:103> 'int'
|   |   |-BinaryOperator 0x55985adee200 <col:7, col:25> 'int' '&&'
|   |   | |-ImplicitCastExpr 0x55985adee1b8 <col:7> 'int' <IntegralCast>
|   |   | | `-ImplicitCastExpr 0x55985adee1a0 <col:7> '_Bool' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x55985adee160 <col:7> '_Bool' lvalue Var 0x55985adebc88 'a$w_buff0_used' '_Bool'
|   |   | `-ImplicitCastExpr 0x55985adee1e8 <col:25> 'int' <IntegralCast>
|   |   |   `-ImplicitCastExpr 0x55985adee1d0 <col:25> '_Bool' <LValueToRValue>
|   |   |     `-DeclRefExpr 0x55985adee180 <col:25> '_Bool' lvalue Var 0x55985adeb738 'a$r_buff0_thd2' '_Bool'
|   |   |-ImplicitCastExpr 0x55985adee3c0 <col:42> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x55985adee220 <col:42> 'int' lvalue Var 0x55985adebc10 'a$w_buff0' 'int'
|   |   `-ParenExpr 0x55985adee3a0 <col:54, col:103> 'int'
|   |     `-ConditionalOperator 0x55985adee370 <col:55, col:102> 'int'
|   |       |-BinaryOperator 0x55985adee2e0 <col:55, col:73> 'int' '&&'
|   |       | |-ImplicitCastExpr 0x55985adee298 <col:55> 'int' <IntegralCast>
|   |       | | `-ImplicitCastExpr 0x55985adee280 <col:55> '_Bool' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x55985adee240 <col:55> '_Bool' lvalue Var 0x55985adebd80 'a$w_buff1_used' '_Bool'
|   |       | `-ImplicitCastExpr 0x55985adee2c8 <col:73> 'int' <IntegralCast>
|   |       |   `-ImplicitCastExpr 0x55985adee2b0 <col:73> '_Bool' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x55985adee260 <col:73> '_Bool' lvalue Var 0x55985adeb990 'a$r_buff1_thd2' '_Bool'
|   |       |-ImplicitCastExpr 0x55985adee340 <col:90> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x55985adee300 <col:90> 'int' lvalue Var 0x55985adebd08 'a$w_buff1' 'int'
|   |       `-ImplicitCastExpr 0x55985adee358 <col:102> 'int' <LValueToRValue>
|   |         `-DeclRefExpr 0x55985adee320 <col:102> 'int' lvalue Var 0x55985adeb4b8 'a' 'int'
|   |-BinaryOperator 0x55985adee610 <line:746:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x55985adee428 <col:3> '_Bool' lvalue Var 0x55985adebc88 'a$w_buff0_used' '_Bool'
|   | `-ImplicitCastExpr 0x55985adee5f8 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55985adee5c8 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x55985adee4e8 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x55985adee4a0 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x55985adee488 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x55985adee448 <col:20> '_Bool' lvalue Var 0x55985adebc88 'a$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x55985adee4d0 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x55985adee4b8 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x55985adee468 <col:38> '_Bool' lvalue Var 0x55985adeb738 'a$r_buff0_thd2' '_Bool'
|   |     |-ImplicitCastExpr 0x55985adee580 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x55985adee538 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x55985adee508 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x55985adee5b0 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x55985adee598 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x55985adee560 <col:66> '_Bool' lvalue Var 0x55985adebc88 'a$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x55985adee8f8 <line:747:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x55985adee630 <col:3> '_Bool' lvalue Var 0x55985adebd80 'a$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x55985adee8e0 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55985adee8b0 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x55985adee7d0 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x55985adee6f0 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x55985adee6a8 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x55985adee690 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x55985adee650 <col:20> '_Bool' lvalue Var 0x55985adebc88 'a$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x55985adee6d8 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x55985adee6c0 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x55985adee670 <col:38> '_Bool' lvalue Var 0x55985adeb738 'a$r_buff0_thd2' '_Bool'
|   |     | `-BinaryOperator 0x55985adee7b0 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x55985adee768 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x55985adee750 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x55985adee710 <col:56> '_Bool' lvalue Var 0x55985adebd80 'a$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x55985adee798 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x55985adee780 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x55985adee730 <col:74> '_Bool' lvalue Var 0x55985adeb990 'a$r_buff1_thd2' '_Bool'
|   |     |-ImplicitCastExpr 0x55985adee868 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x55985adee820 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x55985adee7f0 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x55985adee898 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x55985adee880 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x55985adee848 <col:102> '_Bool' lvalue Var 0x55985adebd80 'a$w_buff1_used' '_Bool'
|   |-BinaryOperator 0x55985adeeb00 <line:748:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x55985adee918 <col:3> '_Bool' lvalue Var 0x55985adeb738 'a$r_buff0_thd2' '_Bool'
|   | `-ImplicitCastExpr 0x55985adeeae8 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55985adeeab8 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x55985adee9d8 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x55985adee990 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x55985adee978 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x55985adee938 <col:20> '_Bool' lvalue Var 0x55985adebc88 'a$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x55985adee9c0 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x55985adee9a8 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x55985adee958 <col:38> '_Bool' lvalue Var 0x55985adeb738 'a$r_buff0_thd2' '_Bool'
|   |     |-ImplicitCastExpr 0x55985adeea70 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x55985adeea28 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x55985adee9f8 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x55985adeeaa0 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x55985adeea88 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x55985adeea50 <col:66> '_Bool' lvalue Var 0x55985adeb738 'a$r_buff0_thd2' '_Bool'
|   |-BinaryOperator 0x55985adeedf8 <line:749:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x55985adeeb30 <col:3> '_Bool' lvalue Var 0x55985adeb990 'a$r_buff1_thd2' '_Bool'
|   | `-ImplicitCastExpr 0x55985adeede0 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55985adeedb0 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x55985adeecd0 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x55985adeebf0 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x55985adeeba8 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x55985adeeb90 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x55985adeeb50 <col:20> '_Bool' lvalue Var 0x55985adebc88 'a$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x55985adeebd8 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x55985adeebc0 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x55985adeeb70 <col:38> '_Bool' lvalue Var 0x55985adeb738 'a$r_buff0_thd2' '_Bool'
|   |     | `-BinaryOperator 0x55985adeecb0 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x55985adeec68 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x55985adeec50 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x55985adeec10 <col:56> '_Bool' lvalue Var 0x55985adebd80 'a$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x55985adeec98 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x55985adeec80 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x55985adeec30 <col:74> '_Bool' lvalue Var 0x55985adeb990 'a$r_buff1_thd2' '_Bool'
|   |     |-ImplicitCastExpr 0x55985adeed68 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x55985adeed20 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x55985adeecf0 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x55985adeed98 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x55985adeed80 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x55985adeed48 <col:102> '_Bool' lvalue Var 0x55985adeb990 'a$r_buff1_thd2' '_Bool'
|   |-CallExpr 0x55985adeee50 <line:750:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x55985adeee38 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55985adeee18 <col:3> 'void ()' Function 0x55985ad91f00 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x55985adeeea8 <line:751:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x55985adeee90 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55985adeee70 <col:3> 'void ()' Function 0x55985ad91e40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x55985adeef60 <line:752:3, col:41> 'int' '='
|   | |-DeclRefExpr 0x55985adeeec8 <col:3> 'int' lvalue Var 0x55985adeb278 '__unbuffered_cnt' 'int'
|   | `-BinaryOperator 0x55985adeef40 <col:22, col:41> 'int' '+'
|   |   |-ImplicitCastExpr 0x55985adeef28 <col:22> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x55985adeeee8 <col:22> 'int' lvalue Var 0x55985adeb278 '__unbuffered_cnt' 'int'
|   |   `-IntegerLiteral 0x55985adeef08 <col:41> 'int' 1
|   |-CallExpr 0x55985adeefb8 <line:753:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x55985adeefa0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55985adeef80 <col:3> 'void ()' Function 0x55985ad91f00 '__VERIFIER_atomic_end' 'void ()'
|   `-ReturnStmt 0x55985adef030 <line:754:3, col:36>
|     `-CallExpr 0x55985adef010 <col:10, col:36> 'void *'
|       `-ImplicitCastExpr 0x55985adeeff8 <col:10> 'void *(*)(void)' <FunctionToPointerDecay>
|         `-DeclRefExpr 0x55985adeefd8 <col:10> 'void *(void)' Function 0x55985ad91958 '__VERIFIER_nondet_pointer' 'void *(void)'
|-FunctionDecl 0x55985adef188 prev 0x55985adeada0 <line:756:1, line:775:1> line:756:8 used P2 'void *(void *)'
| |-ParmVarDecl 0x55985adef0f0 <col:11, col:17> col:17 arg 'void *'
| `-CompoundStmt 0x55985adf03c0 <line:757:1, line:775:1>
|   |-CallExpr 0x55985adef268 <line:758:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x55985adef250 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55985adef230 <col:3> 'void ()' Function 0x55985ad91e40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x55985adef2c8 <line:759:3, col:7> 'int' '='
|   | |-DeclRefExpr 0x55985adef288 <col:3> 'int' lvalue Var 0x55985adec090 'y' 'int'
|   | `-IntegerLiteral 0x55985adef2a8 <col:7> 'int' 2
|   |-CallExpr 0x55985adef320 <line:760:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x55985adef308 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55985adef2e8 <col:3> 'void ()' Function 0x55985ad91f00 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x55985adef378 <line:761:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x55985adef360 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55985adef340 <col:3> 'void ()' Function 0x55985ad91e40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x55985adef3d8 <line:762:3, col:7> 'int' '='
|   | |-DeclRefExpr 0x55985adef398 <col:3> 'int' lvalue Var 0x55985adec1b0 'z' 'int'
|   | `-IntegerLiteral 0x55985adef3b8 <col:7> 'int' 1
|   |-CallExpr 0x55985adef430 <line:763:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x55985adef418 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55985adef3f8 <col:3> 'void ()' Function 0x55985ad91f00 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x55985adef488 <line:764:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x55985adef470 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55985adef450 <col:3> 'void ()' Function 0x55985ad91e40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x55985adef770 <line:765:3, col:103> 'int' '='
|   | |-DeclRefExpr 0x55985adef4a8 <col:3> 'int' lvalue Var 0x55985adeb4b8 'a' 'int'
|   | `-ConditionalOperator 0x55985adef740 <col:7, col:103> 'int'
|   |   |-BinaryOperator 0x55985adef568 <col:7, col:25> 'int' '&&'
|   |   | |-ImplicitCastExpr 0x55985adef520 <col:7> 'int' <IntegralCast>
|   |   | | `-ImplicitCastExpr 0x55985adef508 <col:7> '_Bool' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x55985adef4c8 <col:7> '_Bool' lvalue Var 0x55985adebc88 'a$w_buff0_used' '_Bool'
|   |   | `-ImplicitCastExpr 0x55985adef550 <col:25> 'int' <IntegralCast>
|   |   |   `-ImplicitCastExpr 0x55985adef538 <col:25> '_Bool' <LValueToRValue>
|   |   |     `-DeclRefExpr 0x55985adef4e8 <col:25> '_Bool' lvalue Var 0x55985adeb7b0 'a$r_buff0_thd3' '_Bool'
|   |   |-ImplicitCastExpr 0x55985adef728 <col:42> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x55985adef588 <col:42> 'int' lvalue Var 0x55985adebc10 'a$w_buff0' 'int'
|   |   `-ParenExpr 0x55985adef708 <col:54, col:103> 'int'
|   |     `-ConditionalOperator 0x55985adef6d8 <col:55, col:102> 'int'
|   |       |-BinaryOperator 0x55985adef648 <col:55, col:73> 'int' '&&'
|   |       | |-ImplicitCastExpr 0x55985adef600 <col:55> 'int' <IntegralCast>
|   |       | | `-ImplicitCastExpr 0x55985adef5e8 <col:55> '_Bool' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x55985adef5a8 <col:55> '_Bool' lvalue Var 0x55985adebd80 'a$w_buff1_used' '_Bool'
|   |       | `-ImplicitCastExpr 0x55985adef630 <col:73> 'int' <IntegralCast>
|   |       |   `-ImplicitCastExpr 0x55985adef618 <col:73> '_Bool' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x55985adef5c8 <col:73> '_Bool' lvalue Var 0x55985adeba08 'a$r_buff1_thd3' '_Bool'
|   |       |-ImplicitCastExpr 0x55985adef6a8 <col:90> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x55985adef668 <col:90> 'int' lvalue Var 0x55985adebd08 'a$w_buff1' 'int'
|   |       `-ImplicitCastExpr 0x55985adef6c0 <col:102> 'int' <LValueToRValue>
|   |         `-DeclRefExpr 0x55985adef688 <col:102> 'int' lvalue Var 0x55985adeb4b8 'a' 'int'
|   |-BinaryOperator 0x55985adef978 <line:766:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x55985adef790 <col:3> '_Bool' lvalue Var 0x55985adebc88 'a$w_buff0_used' '_Bool'
|   | `-ImplicitCastExpr 0x55985adef960 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55985adef930 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x55985adef850 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x55985adef808 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x55985adef7f0 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x55985adef7b0 <col:20> '_Bool' lvalue Var 0x55985adebc88 'a$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x55985adef838 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x55985adef820 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x55985adef7d0 <col:38> '_Bool' lvalue Var 0x55985adeb7b0 'a$r_buff0_thd3' '_Bool'
|   |     |-ImplicitCastExpr 0x55985adef8e8 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x55985adef8a0 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x55985adef870 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x55985adef918 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x55985adef900 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x55985adef8c8 <col:66> '_Bool' lvalue Var 0x55985adebc88 'a$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x55985adefc88 <line:767:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x55985adef998 <col:3> '_Bool' lvalue Var 0x55985adebd80 'a$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x55985adefc70 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55985adefc40 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x55985adefb60 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x55985adefa58 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x55985adefa10 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x55985adef9f8 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x55985adef9b8 <col:20> '_Bool' lvalue Var 0x55985adebc88 'a$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x55985adefa40 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x55985adefa28 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x55985adef9d8 <col:38> '_Bool' lvalue Var 0x55985adeb7b0 'a$r_buff0_thd3' '_Bool'
|   |     | `-BinaryOperator 0x55985adefb40 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x55985adefad0 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x55985adefab8 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x55985adefa78 <col:56> '_Bool' lvalue Var 0x55985adebd80 'a$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x55985adefb00 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x55985adefae8 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x55985adefa98 <col:74> '_Bool' lvalue Var 0x55985adeba08 'a$r_buff1_thd3' '_Bool'
|   |     |-ImplicitCastExpr 0x55985adefbf8 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x55985adefbb0 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x55985adefb80 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x55985adefc28 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x55985adefc10 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x55985adefbd8 <col:102> '_Bool' lvalue Var 0x55985adebd80 'a$w_buff1_used' '_Bool'
|   |-BinaryOperator 0x55985adefe90 <line:768:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x55985adefca8 <col:3> '_Bool' lvalue Var 0x55985adeb7b0 'a$r_buff0_thd3' '_Bool'
|   | `-ImplicitCastExpr 0x55985adefe78 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55985adefe48 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x55985adefd68 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x55985adefd20 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x55985adefd08 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x55985adefcc8 <col:20> '_Bool' lvalue Var 0x55985adebc88 'a$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x55985adefd50 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x55985adefd38 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x55985adefce8 <col:38> '_Bool' lvalue Var 0x55985adeb7b0 'a$r_buff0_thd3' '_Bool'
|   |     |-ImplicitCastExpr 0x55985adefe00 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x55985adefdb8 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x55985adefd88 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x55985adefe30 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x55985adefe18 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x55985adefde0 <col:66> '_Bool' lvalue Var 0x55985adeb7b0 'a$r_buff0_thd3' '_Bool'
|   |-BinaryOperator 0x55985adf0178 <line:769:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x55985adefeb0 <col:3> '_Bool' lvalue Var 0x55985adeba08 'a$r_buff1_thd3' '_Bool'
|   | `-ImplicitCastExpr 0x55985adf0160 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55985adf0130 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x55985adf0050 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x55985adeff70 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x55985adeff28 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x55985adeff10 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x55985adefed0 <col:20> '_Bool' lvalue Var 0x55985adebc88 'a$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x55985adeff58 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x55985adeff40 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x55985adefef0 <col:38> '_Bool' lvalue Var 0x55985adeb7b0 'a$r_buff0_thd3' '_Bool'
|   |     | `-BinaryOperator 0x55985adf0030 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x55985adeffe8 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x55985adeffd0 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x55985adeff90 <col:56> '_Bool' lvalue Var 0x55985adebd80 'a$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x55985adf0018 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x55985adf0000 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x55985adeffb0 <col:74> '_Bool' lvalue Var 0x55985adeba08 'a$r_buff1_thd3' '_Bool'
|   |     |-ImplicitCastExpr 0x55985adf00e8 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x55985adf00a0 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x55985adf0070 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x55985adf0118 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x55985adf0100 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x55985adf00c8 <col:102> '_Bool' lvalue Var 0x55985adeba08 'a$r_buff1_thd3' '_Bool'
|   |-CallExpr 0x55985adf01d0 <line:770:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x55985adf01b8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55985adf0198 <col:3> 'void ()' Function 0x55985ad91f00 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x55985adf0228 <line:771:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x55985adf0210 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55985adf01f0 <col:3> 'void ()' Function 0x55985ad91e40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x55985adf02e0 <line:772:3, col:41> 'int' '='
|   | |-DeclRefExpr 0x55985adf0248 <col:3> 'int' lvalue Var 0x55985adeb278 '__unbuffered_cnt' 'int'
|   | `-BinaryOperator 0x55985adf02c0 <col:22, col:41> 'int' '+'
|   |   |-ImplicitCastExpr 0x55985adf02a8 <col:22> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x55985adf0268 <col:22> 'int' lvalue Var 0x55985adeb278 '__unbuffered_cnt' 'int'
|   |   `-IntegerLiteral 0x55985adf0288 <col:41> 'int' 1
|   |-CallExpr 0x55985adf0338 <line:773:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x55985adf0320 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55985adf0300 <col:3> 'void ()' Function 0x55985ad91f00 '__VERIFIER_atomic_end' 'void ()'
|   `-ReturnStmt 0x55985adf03b0 <line:774:3, col:36>
|     `-CallExpr 0x55985adf0390 <col:10, col:36> 'void *'
|       `-ImplicitCastExpr 0x55985adf0378 <col:10> 'void *(*)(void)' <FunctionToPointerDecay>
|         `-DeclRefExpr 0x55985adf0358 <col:10> 'void *(void)' Function 0x55985ad91958 '__VERIFIER_nondet_pointer' 'void *(void)'
|-FunctionDecl 0x55985adf0508 prev 0x55985adeaef8 <line:776:1, line:808:1> line:776:8 used P3 'void *(void *)'
| |-ParmVarDecl 0x55985adf0470 <col:11, col:17> col:17 arg 'void *'
| `-CompoundStmt 0x55985adf40f8 <line:777:1, line:808:1>
|   |-CallExpr 0x55985adf05e8 <line:778:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x55985adf05d0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55985adf05b0 <col:3> 'void ()' Function 0x55985ad91e40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x55985adf0648 <line:779:3, col:7> 'int' '='
|   | |-DeclRefExpr 0x55985adf0608 <col:3> 'int' lvalue Var 0x55985adec1b0 'z' 'int'
|   | `-IntegerLiteral 0x55985adf0628 <col:7> 'int' 2
|   |-CallExpr 0x55985adf06a0 <line:780:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x55985adf0688 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55985adf0668 <col:3> 'void ()' Function 0x55985ad91f00 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x55985adf06f8 <line:781:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x55985adf06e0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55985adf06c0 <col:3> 'void ()' Function 0x55985ad91e40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x55985adf07a8 <line:782:3, col:45> '_Bool' '='
|   | |-DeclRefExpr 0x55985adf0718 <col:3> '_Bool' lvalue Var 0x55985adec248 'weak$$choice0' '_Bool'
|   | `-ImplicitCastExpr 0x55985adf0790 <col:19, col:45> '_Bool' <PointerToBoolean>
|   |   `-CallExpr 0x55985adf0770 <col:19, col:45> 'void *'
|   |     `-ImplicitCastExpr 0x55985adf0758 <col:19> 'void *(*)(void)' <FunctionToPointerDecay>
|   |       `-DeclRefExpr 0x55985adf0738 <col:19> 'void *(void)' Function 0x55985ad91958 '__VERIFIER_nondet_pointer' 'void *(void)'
|   |-BinaryOperator 0x55985adf0858 <line:783:3, col:45> '_Bool' '='
|   | |-DeclRefExpr 0x55985adf07c8 <col:3> '_Bool' lvalue Var 0x55985adec2c0 'weak$$choice2' '_Bool'
|   | `-ImplicitCastExpr 0x55985adf0840 <col:19, col:45> '_Bool' <PointerToBoolean>
|   |   `-CallExpr 0x55985adf0820 <col:19, col:45> 'void *'
|   |     `-ImplicitCastExpr 0x55985adf0808 <col:19> 'void *(*)(void)' <FunctionToPointerDecay>
|   |       `-DeclRefExpr 0x55985adf07e8 <col:19> 'void *(void)' Function 0x55985ad91958 '__VERIFIER_nondet_pointer' 'void *(void)'
|   |-BinaryOperator 0x55985adf08d0 <line:784:3, col:21> '_Bool' '='
|   | |-DeclRefExpr 0x55985adf0878 <col:3> '_Bool' lvalue Var 0x55985adeb550 'a$flush_delayed' '_Bool'
|   | `-ImplicitCastExpr 0x55985adf08b8 <col:21> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x55985adf0898 <col:21> '_Bool' lvalue Var 0x55985adec2c0 'weak$$choice2' '_Bool'
|   |-BinaryOperator 0x55985adf0948 <line:785:3, col:15> 'int' '='
|   | |-DeclRefExpr 0x55985adf08f0 <col:3> 'int' lvalue Var 0x55985adeb5d0 'a$mem_tmp' 'int'
|   | `-ImplicitCastExpr 0x55985adf0930 <col:15> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x55985adf0910 <col:15> 'int' lvalue Var 0x55985adeb4b8 'a' 'int'
|   |-BinaryOperator 0x55985adf0d90 <line:786:3, col:162> 'int' '='
|   | |-DeclRefExpr 0x55985adf0968 <col:3> 'int' lvalue Var 0x55985adeb4b8 'a' 'int'
|   | `-ConditionalOperator 0x55985adf0d60 <col:7, col:162> 'int'
|   |   |-BinaryOperator 0x55985adf0b88 <col:7, col:84> 'int' '||'
|   |   | |-BinaryOperator 0x55985adf0a98 <col:7, col:46> 'int' '||'
|   |   | | |-UnaryOperator 0x55985adf09c0 <col:7, col:8> 'int' prefix '!' cannot overflow
|   |   | | | `-ImplicitCastExpr 0x55985adf09a8 <col:8> '_Bool' <LValueToRValue>
|   |   | | |   `-DeclRefExpr 0x55985adf0988 <col:8> '_Bool' lvalue Var 0x55985adebc88 'a$w_buff0_used' '_Bool'
|   |   | | `-BinaryOperator 0x55985adf0a78 <col:26, col:46> 'int' '&&'
|   |   | |   |-UnaryOperator 0x55985adf0a10 <col:26, col:27> 'int' prefix '!' cannot overflow
|   |   | |   | `-ImplicitCastExpr 0x55985adf09f8 <col:27> '_Bool' <LValueToRValue>
|   |   | |   |   `-DeclRefExpr 0x55985adf09d8 <col:27> '_Bool' lvalue Var 0x55985adeb828 'a$r_buff0_thd4' '_Bool'
|   |   | |   `-UnaryOperator 0x55985adf0a60 <col:45, col:46> 'int' prefix '!' cannot overflow
|   |   | |     `-ImplicitCastExpr 0x55985adf0a48 <col:46> '_Bool' <LValueToRValue>
|   |   | |       `-DeclRefExpr 0x55985adf0a28 <col:46> '_Bool' lvalue Var 0x55985adebd80 'a$w_buff1_used' '_Bool'
|   |   | `-BinaryOperator 0x55985adf0b68 <col:64, col:84> 'int' '&&'
|   |   |   |-UnaryOperator 0x55985adf0af0 <col:64, col:65> 'int' prefix '!' cannot overflow
|   |   |   | `-ImplicitCastExpr 0x55985adf0ad8 <col:65> '_Bool' <LValueToRValue>
|   |   |   |   `-DeclRefExpr 0x55985adf0ab8 <col:65> '_Bool' lvalue Var 0x55985adeb828 'a$r_buff0_thd4' '_Bool'
|   |   |   `-UnaryOperator 0x55985adf0b50 <col:83, col:84> 'int' prefix '!' cannot overflow
|   |   |     `-ImplicitCastExpr 0x55985adf0b28 <col:84> '_Bool' <LValueToRValue>
|   |   |       `-DeclRefExpr 0x55985adf0b08 <col:84> '_Bool' lvalue Var 0x55985adeba80 'a$r_buff1_thd4' '_Bool'
|   |   |-ImplicitCastExpr 0x55985adf0d48 <col:101> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x55985adf0ba8 <col:101> 'int' lvalue Var 0x55985adeb4b8 'a' 'int'
|   |   `-ParenExpr 0x55985adf0d28 <col:105, col:162> 'int'
|   |     `-ConditionalOperator 0x55985adf0cf8 <col:106, col:153> 'int'
|   |       |-BinaryOperator 0x55985adf0c68 <col:106, col:124> 'int' '&&'
|   |       | |-ImplicitCastExpr 0x55985adf0c20 <col:106> 'int' <IntegralCast>
|   |       | | `-ImplicitCastExpr 0x55985adf0c08 <col:106> '_Bool' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x55985adf0bc8 <col:106> '_Bool' lvalue Var 0x55985adebc88 'a$w_buff0_used' '_Bool'
|   |       | `-ImplicitCastExpr 0x55985adf0c50 <col:124> 'int' <IntegralCast>
|   |       |   `-ImplicitCastExpr 0x55985adf0c38 <col:124> '_Bool' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x55985adf0be8 <col:124> '_Bool' lvalue Var 0x55985adeb828 'a$r_buff0_thd4' '_Bool'
|   |       |-ImplicitCastExpr 0x55985adf0cc8 <col:141> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x55985adf0c88 <col:141> 'int' lvalue Var 0x55985adebc10 'a$w_buff0' 'int'
|   |       `-ImplicitCastExpr 0x55985adf0ce0 <col:153> 'int' <LValueToRValue>
|   |         `-DeclRefExpr 0x55985adf0ca8 <col:153> 'int' lvalue Var 0x55985adebd08 'a$w_buff1' 'int'
|   |-BinaryOperator 0x55985adf12a0 <line:787:3, col:208> 'int' '='
|   | |-DeclRefExpr 0x55985adf0db0 <col:3> 'int' lvalue Var 0x55985adebc10 'a$w_buff0' 'int'
|   | `-ConditionalOperator 0x55985adf1270 <col:15, col:208> 'int'
|   |   |-ImplicitCastExpr 0x55985adf1240 <col:15> 'int' <IntegralCast>
|   |   | `-ImplicitCastExpr 0x55985adf1228 <col:15> '_Bool' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x55985adf0dd0 <col:15> '_Bool' lvalue Var 0x55985adec2c0 'weak$$choice2' '_Bool'
|   |   |-ImplicitCastExpr 0x55985adf1258 <col:31> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x55985adf0df0 <col:31> 'int' lvalue Var 0x55985adebc10 'a$w_buff0' 'int'
|   |   `-ParenExpr 0x55985adf1208 <col:43, col:208> 'int'
|   |     `-ConditionalOperator 0x55985adf11d8 <col:44, col:207> 'int'
|   |       |-BinaryOperator 0x55985adf1000 <col:44, col:121> 'int' '||'
|   |       | |-BinaryOperator 0x55985adf0f20 <col:44, col:83> 'int' '||'
|   |       | | |-UnaryOperator 0x55985adf0e48 <col:44, col:45> 'int' prefix '!' cannot overflow
|   |       | | | `-ImplicitCastExpr 0x55985adf0e30 <col:45> '_Bool' <LValueToRValue>
|   |       | | |   `-DeclRefExpr 0x55985adf0e10 <col:45> '_Bool' lvalue Var 0x55985adebc88 'a$w_buff0_used' '_Bool'
|   |       | | `-BinaryOperator 0x55985adf0f00 <col:63, col:83> 'int' '&&'
|   |       | |   |-UnaryOperator 0x55985adf0e98 <col:63, col:64> 'int' prefix '!' cannot overflow
|   |       | |   | `-ImplicitCastExpr 0x55985adf0e80 <col:64> '_Bool' <LValueToRValue>
|   |       | |   |   `-DeclRefExpr 0x55985adf0e60 <col:64> '_Bool' lvalue Var 0x55985adeb828 'a$r_buff0_thd4' '_Bool'
|   |       | |   `-UnaryOperator 0x55985adf0ee8 <col:82, col:83> 'int' prefix '!' cannot overflow
|   |       | |     `-ImplicitCastExpr 0x55985adf0ed0 <col:83> '_Bool' <LValueToRValue>
|   |       | |       `-DeclRefExpr 0x55985adf0eb0 <col:83> '_Bool' lvalue Var 0x55985adebd80 'a$w_buff1_used' '_Bool'
|   |       | `-BinaryOperator 0x55985adf0fe0 <col:101, col:121> 'int' '&&'
|   |       |   |-UnaryOperator 0x55985adf0f78 <col:101, col:102> 'int' prefix '!' cannot overflow
|   |       |   | `-ImplicitCastExpr 0x55985adf0f60 <col:102> '_Bool' <LValueToRValue>
|   |       |   |   `-DeclRefExpr 0x55985adf0f40 <col:102> '_Bool' lvalue Var 0x55985adeb828 'a$r_buff0_thd4' '_Bool'
|   |       |   `-UnaryOperator 0x55985adf0fc8 <col:120, col:121> 'int' prefix '!' cannot overflow
|   |       |     `-ImplicitCastExpr 0x55985adf0fb0 <col:121> '_Bool' <LValueToRValue>
|   |       |       `-DeclRefExpr 0x55985adf0f90 <col:121> '_Bool' lvalue Var 0x55985adeba80 'a$r_buff1_thd4' '_Bool'
|   |       |-ImplicitCastExpr 0x55985adf11c0 <col:138> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x55985adf1020 <col:138> 'int' lvalue Var 0x55985adebc10 'a$w_buff0' 'int'
|   |       `-ParenExpr 0x55985adf11a0 <col:150, col:207> 'int'
|   |         `-ConditionalOperator 0x55985adf1170 <col:151, col:198> 'int'
|   |           |-BinaryOperator 0x55985adf10e0 <col:151, col:169> 'int' '&&'
|   |           | |-ImplicitCastExpr 0x55985adf1098 <col:151> 'int' <IntegralCast>
|   |           | | `-ImplicitCastExpr 0x55985adf1080 <col:151> '_Bool' <LValueToRValue>
|   |           | |   `-DeclRefExpr 0x55985adf1040 <col:151> '_Bool' lvalue Var 0x55985adebc88 'a$w_buff0_used' '_Bool'
|   |           | `-ImplicitCastExpr 0x55985adf10c8 <col:169> 'int' <IntegralCast>
|   |           |   `-ImplicitCastExpr 0x55985adf10b0 <col:169> '_Bool' <LValueToRValue>
|   |           |     `-DeclRefExpr 0x55985adf1060 <col:169> '_Bool' lvalue Var 0x55985adeb828 'a$r_buff0_thd4' '_Bool'
|   |           |-ImplicitCastExpr 0x55985adf1140 <col:186> 'int' <LValueToRValue>
|   |           | `-DeclRefExpr 0x55985adf1100 <col:186> 'int' lvalue Var 0x55985adebc10 'a$w_buff0' 'int'
|   |           `-ImplicitCastExpr 0x55985adf1158 <col:198> 'int' <LValueToRValue>
|   |             `-DeclRefExpr 0x55985adf1120 <col:198> 'int' lvalue Var 0x55985adebc10 'a$w_buff0' 'int'
|   |-BinaryOperator 0x55985adf17b0 <line:788:3, col:208> 'int' '='
|   | |-DeclRefExpr 0x55985adf12c0 <col:3> 'int' lvalue Var 0x55985adebd08 'a$w_buff1' 'int'
|   | `-ConditionalOperator 0x55985adf1780 <col:15, col:208> 'int'
|   |   |-ImplicitCastExpr 0x55985adf1750 <col:15> 'int' <IntegralCast>
|   |   | `-ImplicitCastExpr 0x55985adf1738 <col:15> '_Bool' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x55985adf12e0 <col:15> '_Bool' lvalue Var 0x55985adec2c0 'weak$$choice2' '_Bool'
|   |   |-ImplicitCastExpr 0x55985adf1768 <col:31> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x55985adf1300 <col:31> 'int' lvalue Var 0x55985adebd08 'a$w_buff1' 'int'
|   |   `-ParenExpr 0x55985adf1718 <col:43, col:208> 'int'
|   |     `-ConditionalOperator 0x55985adf16e8 <col:44, col:207> 'int'
|   |       |-BinaryOperator 0x55985adf1510 <col:44, col:121> 'int' '||'
|   |       | |-BinaryOperator 0x55985adf1430 <col:44, col:83> 'int' '||'
|   |       | | |-UnaryOperator 0x55985adf1358 <col:44, col:45> 'int' prefix '!' cannot overflow
|   |       | | | `-ImplicitCastExpr 0x55985adf1340 <col:45> '_Bool' <LValueToRValue>
|   |       | | |   `-DeclRefExpr 0x55985adf1320 <col:45> '_Bool' lvalue Var 0x55985adebc88 'a$w_buff0_used' '_Bool'
|   |       | | `-BinaryOperator 0x55985adf1410 <col:63, col:83> 'int' '&&'
|   |       | |   |-UnaryOperator 0x55985adf13a8 <col:63, col:64> 'int' prefix '!' cannot overflow
|   |       | |   | `-ImplicitCastExpr 0x55985adf1390 <col:64> '_Bool' <LValueToRValue>
|   |       | |   |   `-DeclRefExpr 0x55985adf1370 <col:64> '_Bool' lvalue Var 0x55985adeb828 'a$r_buff0_thd4' '_Bool'
|   |       | |   `-UnaryOperator 0x55985adf13f8 <col:82, col:83> 'int' prefix '!' cannot overflow
|   |       | |     `-ImplicitCastExpr 0x55985adf13e0 <col:83> '_Bool' <LValueToRValue>
|   |       | |       `-DeclRefExpr 0x55985adf13c0 <col:83> '_Bool' lvalue Var 0x55985adebd80 'a$w_buff1_used' '_Bool'
|   |       | `-BinaryOperator 0x55985adf14f0 <col:101, col:121> 'int' '&&'
|   |       |   |-UnaryOperator 0x55985adf1488 <col:101, col:102> 'int' prefix '!' cannot overflow
|   |       |   | `-ImplicitCastExpr 0x55985adf1470 <col:102> '_Bool' <LValueToRValue>
|   |       |   |   `-DeclRefExpr 0x55985adf1450 <col:102> '_Bool' lvalue Var 0x55985adeb828 'a$r_buff0_thd4' '_Bool'
|   |       |   `-UnaryOperator 0x55985adf14d8 <col:120, col:121> 'int' prefix '!' cannot overflow
|   |       |     `-ImplicitCastExpr 0x55985adf14c0 <col:121> '_Bool' <LValueToRValue>
|   |       |       `-DeclRefExpr 0x55985adf14a0 <col:121> '_Bool' lvalue Var 0x55985adeba80 'a$r_buff1_thd4' '_Bool'
|   |       |-ImplicitCastExpr 0x55985adf16d0 <col:138> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x55985adf1530 <col:138> 'int' lvalue Var 0x55985adebd08 'a$w_buff1' 'int'
|   |       `-ParenExpr 0x55985adf16b0 <col:150, col:207> 'int'
|   |         `-ConditionalOperator 0x55985adf1680 <col:151, col:198> 'int'
|   |           |-BinaryOperator 0x55985adf15f0 <col:151, col:169> 'int' '&&'
|   |           | |-ImplicitCastExpr 0x55985adf15a8 <col:151> 'int' <IntegralCast>
|   |           | | `-ImplicitCastExpr 0x55985adf1590 <col:151> '_Bool' <LValueToRValue>
|   |           | |   `-DeclRefExpr 0x55985adf1550 <col:151> '_Bool' lvalue Var 0x55985adebc88 'a$w_buff0_used' '_Bool'
|   |           | `-ImplicitCastExpr 0x55985adf15d8 <col:169> 'int' <IntegralCast>
|   |           |   `-ImplicitCastExpr 0x55985adf15c0 <col:169> '_Bool' <LValueToRValue>
|   |           |     `-DeclRefExpr 0x55985adf1570 <col:169> '_Bool' lvalue Var 0x55985adeb828 'a$r_buff0_thd4' '_Bool'
|   |           |-ImplicitCastExpr 0x55985adf1650 <col:186> 'int' <LValueToRValue>
|   |           | `-DeclRefExpr 0x55985adf1610 <col:186> 'int' lvalue Var 0x55985adebd08 'a$w_buff1' 'int'
|   |           `-ImplicitCastExpr 0x55985adf1668 <col:198> 'int' <LValueToRValue>
|   |             `-DeclRefExpr 0x55985adf1630 <col:198> 'int' lvalue Var 0x55985adebd08 'a$w_buff1' 'int'
|   |-BinaryOperator 0x55985adf1d68 <line:789:3, col:227> '_Bool' '='
|   | |-DeclRefExpr 0x55985adf17d0 <col:3> '_Bool' lvalue Var 0x55985adebc88 'a$w_buff0_used' '_Bool'
|   | `-ImplicitCastExpr 0x55985adf1d50 <col:20, col:227> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55985adf1d20 <col:20, col:227> 'int'
|   |     |-ImplicitCastExpr 0x55985adf1cd8 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x55985adf1cc0 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x55985adf17f0 <col:20> '_Bool' lvalue Var 0x55985adec2c0 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x55985adf1d08 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x55985adf1cf0 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x55985adf1810 <col:36> '_Bool' lvalue Var 0x55985adebc88 'a$w_buff0_used' '_Bool'
|   |     `-ParenExpr 0x55985adf1ca0 <col:53, col:227> 'int'
|   |       `-ConditionalOperator 0x55985adf1c70 <col:54, col:226> 'int'
|   |         |-BinaryOperator 0x55985adf1a20 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x55985adf1940 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x55985adf1868 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x55985adf1850 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x55985adf1830 <col:55> '_Bool' lvalue Var 0x55985adebc88 'a$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x55985adf1920 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x55985adf18b8 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x55985adf18a0 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x55985adf1880 <col:74> '_Bool' lvalue Var 0x55985adeb828 'a$r_buff0_thd4' '_Bool'
|   |         | |   `-UnaryOperator 0x55985adf1908 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x55985adf18f0 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x55985adf18d0 <col:93> '_Bool' lvalue Var 0x55985adebd80 'a$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x55985adf1a00 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x55985adf1998 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x55985adf1980 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x55985adf1960 <col:112> '_Bool' lvalue Var 0x55985adeb828 'a$r_buff0_thd4' '_Bool'
|   |         |   `-UnaryOperator 0x55985adf19e8 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x55985adf19d0 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x55985adf19b0 <col:131> '_Bool' lvalue Var 0x55985adeba80 'a$r_buff1_thd4' '_Bool'
|   |         |-ImplicitCastExpr 0x55985adf1c58 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x55985adf1c40 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x55985adf1a40 <col:148> '_Bool' lvalue Var 0x55985adebc88 'a$w_buff0_used' '_Bool'
|   |         `-ParenExpr 0x55985adf1c20 <col:165, col:226> 'int'
|   |           `-ConditionalOperator 0x55985adf1bf0 <col:166, col:212> 'int'
|   |             |-BinaryOperator 0x55985adf1b00 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x55985adf1ab8 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x55985adf1aa0 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x55985adf1a60 <col:166> '_Bool' lvalue Var 0x55985adebc88 'a$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x55985adf1ae8 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x55985adf1ad0 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x55985adf1a80 <col:184> '_Bool' lvalue Var 0x55985adeb828 'a$r_buff0_thd4' '_Bool'
|   |             |-ImplicitCastExpr 0x55985adf1ba8 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x55985adf1b60 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x55985adf1b20 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x55985adf1bd8 <col:212> 'int' <IntegralCast>
|   |               `-ImplicitCastExpr 0x55985adf1bc0 <col:212> '_Bool' <LValueToRValue>
|   |                 `-DeclRefExpr 0x55985adf1b88 <col:212> '_Bool' lvalue Var 0x55985adebc88 'a$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x55985adf2330 <line:790:3, col:221> '_Bool' '='
|   | |-DeclRefExpr 0x55985adf1d88 <col:3> '_Bool' lvalue Var 0x55985adebd80 'a$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x55985adf2318 <col:20, col:221> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55985adf22e8 <col:20, col:221> 'int'
|   |     |-ImplicitCastExpr 0x55985adf22a0 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x55985adf2288 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x55985adf1da8 <col:20> '_Bool' lvalue Var 0x55985adec2c0 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x55985adf22d0 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x55985adf22b8 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x55985adf1dc8 <col:36> '_Bool' lvalue Var 0x55985adebd80 'a$w_buff1_used' '_Bool'
|   |     `-ParenExpr 0x55985adf2268 <col:53, col:221> 'int'
|   |       `-ConditionalOperator 0x55985adf2238 <col:54, col:220> 'int'
|   |         |-BinaryOperator 0x55985adf1fd8 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x55985adf1ef8 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x55985adf1e20 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x55985adf1e08 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x55985adf1de8 <col:55> '_Bool' lvalue Var 0x55985adebc88 'a$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x55985adf1ed8 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x55985adf1e70 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x55985adf1e58 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x55985adf1e38 <col:74> '_Bool' lvalue Var 0x55985adeb828 'a$r_buff0_thd4' '_Bool'
|   |         | |   `-UnaryOperator 0x55985adf1ec0 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x55985adf1ea8 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x55985adf1e88 <col:93> '_Bool' lvalue Var 0x55985adebd80 'a$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x55985adf1fb8 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x55985adf1f50 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x55985adf1f38 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x55985adf1f18 <col:112> '_Bool' lvalue Var 0x55985adeb828 'a$r_buff0_thd4' '_Bool'
|   |         |   `-UnaryOperator 0x55985adf1fa0 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x55985adf1f88 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x55985adf1f68 <col:131> '_Bool' lvalue Var 0x55985adeba80 'a$r_buff1_thd4' '_Bool'
|   |         |-ImplicitCastExpr 0x55985adf2220 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x55985adf2208 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x55985adf1ff8 <col:148> '_Bool' lvalue Var 0x55985adebd80 'a$w_buff1_used' '_Bool'
|   |         `-ParenExpr 0x55985adf21e8 <col:165, col:220> 'int'
|   |           `-ConditionalOperator 0x55985adf21b8 <col:166, col:219> 'int'
|   |             |-BinaryOperator 0x55985adf20b8 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x55985adf2070 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x55985adf2058 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x55985adf2018 <col:166> '_Bool' lvalue Var 0x55985adebc88 'a$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x55985adf20a0 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x55985adf2088 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x55985adf2038 <col:184> '_Bool' lvalue Var 0x55985adeb828 'a$r_buff0_thd4' '_Bool'
|   |             |-ImplicitCastExpr 0x55985adf2188 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x55985adf2108 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x55985adf20d8 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x55985adf21a0 <col:212, col:219> 'int' <IntegralCast>
|   |               `-CStyleCastExpr 0x55985adf2160 <col:212, col:219> '_Bool' <IntegralToBoolean>
|   |                 `-IntegerLiteral 0x55985adf2130 <col:219> 'int' 0
|   |-BinaryOperator 0x55985adf28d8 <line:791:3, col:227> '_Bool' '='
|   | |-DeclRefExpr 0x55985adf2350 <col:3> '_Bool' lvalue Var 0x55985adeb828 'a$r_buff0_thd4' '_Bool'
|   | `-ImplicitCastExpr 0x55985adf28c0 <col:20, col:227> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55985adf2890 <col:20, col:227> 'int'
|   |     |-ImplicitCastExpr 0x55985adf2848 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x55985adf2830 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x55985adf2370 <col:20> '_Bool' lvalue Var 0x55985adec2c0 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x55985adf2878 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x55985adf2860 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x55985adf2390 <col:36> '_Bool' lvalue Var 0x55985adeb828 'a$r_buff0_thd4' '_Bool'
|   |     `-ParenExpr 0x55985adf2810 <col:53, col:227> 'int'
|   |       `-ConditionalOperator 0x55985adf27e0 <col:54, col:226> 'int'
|   |         |-BinaryOperator 0x55985adf25a0 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x55985adf24c0 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x55985adf23e8 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x55985adf23d0 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x55985adf23b0 <col:55> '_Bool' lvalue Var 0x55985adebc88 'a$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x55985adf24a0 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x55985adf2438 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x55985adf2420 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x55985adf2400 <col:74> '_Bool' lvalue Var 0x55985adeb828 'a$r_buff0_thd4' '_Bool'
|   |         | |   `-UnaryOperator 0x55985adf2488 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x55985adf2470 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x55985adf2450 <col:93> '_Bool' lvalue Var 0x55985adebd80 'a$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x55985adf2580 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x55985adf2518 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x55985adf2500 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x55985adf24e0 <col:112> '_Bool' lvalue Var 0x55985adeb828 'a$r_buff0_thd4' '_Bool'
|   |         |   `-UnaryOperator 0x55985adf2568 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x55985adf2550 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x55985adf2530 <col:131> '_Bool' lvalue Var 0x55985adeba80 'a$r_buff1_thd4' '_Bool'
|   |         |-ImplicitCastExpr 0x55985adf27c8 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x55985adf27b0 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x55985adf25c0 <col:148> '_Bool' lvalue Var 0x55985adeb828 'a$r_buff0_thd4' '_Bool'
|   |         `-ParenExpr 0x55985adf2790 <col:165, col:226> 'int'
|   |           `-ConditionalOperator 0x55985adf2760 <col:166, col:212> 'int'
|   |             |-BinaryOperator 0x55985adf2680 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x55985adf2638 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x55985adf2620 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x55985adf25e0 <col:166> '_Bool' lvalue Var 0x55985adebc88 'a$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x55985adf2668 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x55985adf2650 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x55985adf2600 <col:184> '_Bool' lvalue Var 0x55985adeb828 'a$r_buff0_thd4' '_Bool'
|   |             |-ImplicitCastExpr 0x55985adf2718 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x55985adf26d0 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x55985adf26a0 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x55985adf2748 <col:212> 'int' <IntegralCast>
|   |               `-ImplicitCastExpr 0x55985adf2730 <col:212> '_Bool' <LValueToRValue>
|   |                 `-DeclRefExpr 0x55985adf26f8 <col:212> '_Bool' lvalue Var 0x55985adeb828 'a$r_buff0_thd4' '_Bool'
|   |-BinaryOperator 0x55985adf2ec8 <line:792:3, col:221> '_Bool' '='
|   | |-DeclRefExpr 0x55985adf28f8 <col:3> '_Bool' lvalue Var 0x55985adeba80 'a$r_buff1_thd4' '_Bool'
|   | `-ImplicitCastExpr 0x55985adf2eb0 <col:20, col:221> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55985adf2e80 <col:20, col:221> 'int'
|   |     |-ImplicitCastExpr 0x55985adf2e38 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x55985adf2e20 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x55985adf2918 <col:20> '_Bool' lvalue Var 0x55985adec2c0 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x55985adf2e68 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x55985adf2e50 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x55985adf2938 <col:36> '_Bool' lvalue Var 0x55985adeba80 'a$r_buff1_thd4' '_Bool'
|   |     `-ParenExpr 0x55985adf2e00 <col:53, col:221> 'int'
|   |       `-ConditionalOperator 0x55985adf2dd0 <col:54, col:220> 'int'
|   |         |-BinaryOperator 0x55985adf2b70 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x55985adf2a68 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x55985adf2990 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x55985adf2978 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x55985adf2958 <col:55> '_Bool' lvalue Var 0x55985adebc88 'a$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x55985adf2a48 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x55985adf29e0 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x55985adf29c8 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x55985adf29a8 <col:74> '_Bool' lvalue Var 0x55985adeb828 'a$r_buff0_thd4' '_Bool'
|   |         | |   `-UnaryOperator 0x55985adf2a30 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x55985adf2a18 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x55985adf29f8 <col:93> '_Bool' lvalue Var 0x55985adebd80 'a$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x55985adf2b28 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x55985adf2ac0 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x55985adf2aa8 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x55985adf2a88 <col:112> '_Bool' lvalue Var 0x55985adeb828 'a$r_buff0_thd4' '_Bool'
|   |         |   `-UnaryOperator 0x55985adf2b10 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x55985adf2af8 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x55985adf2ad8 <col:131> '_Bool' lvalue Var 0x55985adeba80 'a$r_buff1_thd4' '_Bool'
|   |         |-ImplicitCastExpr 0x55985adf2db8 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x55985adf2da0 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x55985adf2b90 <col:148> '_Bool' lvalue Var 0x55985adeba80 'a$r_buff1_thd4' '_Bool'
|   |         `-ParenExpr 0x55985adf2d80 <col:165, col:220> 'int'
|   |           `-ConditionalOperator 0x55985adf2d50 <col:166, col:219> 'int'
|   |             |-BinaryOperator 0x55985adf2c50 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x55985adf2c08 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x55985adf2bf0 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x55985adf2bb0 <col:166> '_Bool' lvalue Var 0x55985adebc88 'a$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x55985adf2c38 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x55985adf2c20 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x55985adf2bd0 <col:184> '_Bool' lvalue Var 0x55985adeb828 'a$r_buff0_thd4' '_Bool'
|   |             |-ImplicitCastExpr 0x55985adf2d20 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x55985adf2ca0 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x55985adf2c70 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x55985adf2d38 <col:212, col:219> 'int' <IntegralCast>
|   |               `-CStyleCastExpr 0x55985adf2cf8 <col:212, col:219> '_Bool' <IntegralToBoolean>
|   |                 `-IntegerLiteral 0x55985adf2cc8 <col:219> 'int' 0
|   |-BinaryOperator 0x55985adf2f40 <line:793:3, col:25> 'int' '='
|   | |-DeclRefExpr 0x55985adf2ee8 <col:3> 'int' lvalue Var 0x55985adeb398 '__unbuffered_p3_EAX' 'int'
|   | `-ImplicitCastExpr 0x55985adf2f28 <col:25> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x55985adf2f08 <col:25> 'int' lvalue Var 0x55985adeb4b8 'a' 'int'
|   |-BinaryOperator 0x55985adf3070 <line:794:3, col:37> 'int' '='
|   | |-DeclRefExpr 0x55985adf2f60 <col:3> 'int' lvalue Var 0x55985adeb4b8 'a' 'int'
|   | `-ConditionalOperator 0x55985adf3040 <col:7, col:37> 'int'
|   |   |-ImplicitCastExpr 0x55985adf2ff8 <col:7> 'int' <IntegralCast>
|   |   | `-ImplicitCastExpr 0x55985adf2fe0 <col:7> '_Bool' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x55985adf2f80 <col:7> '_Bool' lvalue Var 0x55985adeb550 'a$flush_delayed' '_Bool'
|   |   |-ImplicitCastExpr 0x55985adf3010 <col:25> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x55985adf2fa0 <col:25> 'int' lvalue Var 0x55985adeb5d0 'a$mem_tmp' 'int'
|   |   `-ImplicitCastExpr 0x55985adf3028 <col:37> 'int' <LValueToRValue>
|   |     `-DeclRefExpr 0x55985adf2fc0 <col:37> 'int' lvalue Var 0x55985adeb4b8 'a' 'int'
|   |-BinaryOperator 0x55985adf3108 <line:795:3, col:28> '_Bool' '='
|   | |-DeclRefExpr 0x55985adf3090 <col:3> '_Bool' lvalue Var 0x55985adeb550 'a$flush_delayed' '_Bool'
|   | `-CStyleCastExpr 0x55985adf30e0 <col:21, col:28> '_Bool' <IntegralToBoolean>
|   |   `-IntegerLiteral 0x55985adf30b0 <col:28> 'int' 0
|   |-CallExpr 0x55985adf3160 <line:796:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x55985adf3148 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55985adf3128 <col:3> 'void ()' Function 0x55985ad91f00 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x55985adf31b8 <line:797:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x55985adf31a0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55985adf3180 <col:3> 'void ()' Function 0x55985ad91e40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x55985adf34a0 <line:798:3, col:103> 'int' '='
|   | |-DeclRefExpr 0x55985adf31d8 <col:3> 'int' lvalue Var 0x55985adeb4b8 'a' 'int'
|   | `-ConditionalOperator 0x55985adf3470 <col:7, col:103> 'int'
|   |   |-BinaryOperator 0x55985adf3298 <col:7, col:25> 'int' '&&'
|   |   | |-ImplicitCastExpr 0x55985adf3250 <col:7> 'int' <IntegralCast>
|   |   | | `-ImplicitCastExpr 0x55985adf3238 <col:7> '_Bool' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x55985adf31f8 <col:7> '_Bool' lvalue Var 0x55985adebc88 'a$w_buff0_used' '_Bool'
|   |   | `-ImplicitCastExpr 0x55985adf3280 <col:25> 'int' <IntegralCast>
|   |   |   `-ImplicitCastExpr 0x55985adf3268 <col:25> '_Bool' <LValueToRValue>
|   |   |     `-DeclRefExpr 0x55985adf3218 <col:25> '_Bool' lvalue Var 0x55985adeb828 'a$r_buff0_thd4' '_Bool'
|   |   |-ImplicitCastExpr 0x55985adf3458 <col:42> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x55985adf32b8 <col:42> 'int' lvalue Var 0x55985adebc10 'a$w_buff0' 'int'
|   |   `-ParenExpr 0x55985adf3438 <col:54, col:103> 'int'
|   |     `-ConditionalOperator 0x55985adf3408 <col:55, col:102> 'int'
|   |       |-BinaryOperator 0x55985adf3378 <col:55, col:73> 'int' '&&'
|   |       | |-ImplicitCastExpr 0x55985adf3330 <col:55> 'int' <IntegralCast>
|   |       | | `-ImplicitCastExpr 0x55985adf3318 <col:55> '_Bool' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x55985adf32d8 <col:55> '_Bool' lvalue Var 0x55985adebd80 'a$w_buff1_used' '_Bool'
|   |       | `-ImplicitCastExpr 0x55985adf3360 <col:73> 'int' <IntegralCast>
|   |       |   `-ImplicitCastExpr 0x55985adf3348 <col:73> '_Bool' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x55985adf32f8 <col:73> '_Bool' lvalue Var 0x55985adeba80 'a$r_buff1_thd4' '_Bool'
|   |       |-ImplicitCastExpr 0x55985adf33d8 <col:90> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x55985adf3398 <col:90> 'int' lvalue Var 0x55985adebd08 'a$w_buff1' 'int'
|   |       `-ImplicitCastExpr 0x55985adf33f0 <col:102> 'int' <LValueToRValue>
|   |         `-DeclRefExpr 0x55985adf33b8 <col:102> 'int' lvalue Var 0x55985adeb4b8 'a' 'int'
|   |-BinaryOperator 0x55985adf36a8 <line:799:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x55985adf34c0 <col:3> '_Bool' lvalue Var 0x55985adebc88 'a$w_buff0_used' '_Bool'
|   | `-ImplicitCastExpr 0x55985adf3690 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55985adf3660 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x55985adf3580 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x55985adf3538 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x55985adf3520 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x55985adf34e0 <col:20> '_Bool' lvalue Var 0x55985adebc88 'a$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x55985adf3568 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x55985adf3550 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x55985adf3500 <col:38> '_Bool' lvalue Var 0x55985adeb828 'a$r_buff0_thd4' '_Bool'
|   |     |-ImplicitCastExpr 0x55985adf3618 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x55985adf35d0 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x55985adf35a0 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x55985adf3648 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x55985adf3630 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x55985adf35f8 <col:66> '_Bool' lvalue Var 0x55985adebc88 'a$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x55985adf3990 <line:800:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x55985adf36c8 <col:3> '_Bool' lvalue Var 0x55985adebd80 'a$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x55985adf3978 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55985adf3948 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x55985adf3868 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x55985adf3788 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x55985adf3740 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x55985adf3728 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x55985adf36e8 <col:20> '_Bool' lvalue Var 0x55985adebc88 'a$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x55985adf3770 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x55985adf3758 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x55985adf3708 <col:38> '_Bool' lvalue Var 0x55985adeb828 'a$r_buff0_thd4' '_Bool'
|   |     | `-BinaryOperator 0x55985adf3848 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x55985adf3800 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x55985adf37e8 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x55985adf37a8 <col:56> '_Bool' lvalue Var 0x55985adebd80 'a$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x55985adf3830 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x55985adf3818 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x55985adf37c8 <col:74> '_Bool' lvalue Var 0x55985adeba80 'a$r_buff1_thd4' '_Bool'
|   |     |-ImplicitCastExpr 0x55985adf3900 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x55985adf38b8 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x55985adf3888 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x55985adf3930 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x55985adf3918 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x55985adf38e0 <col:102> '_Bool' lvalue Var 0x55985adebd80 'a$w_buff1_used' '_Bool'
|   |-BinaryOperator 0x55985adf3bc8 <line:801:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x55985adf39b0 <col:3> '_Bool' lvalue Var 0x55985adeb828 'a$r_buff0_thd4' '_Bool'
|   | `-ImplicitCastExpr 0x55985adf3bb0 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55985adf3b80 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x55985adf3a70 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x55985adf3a28 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x55985adf3a10 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x55985adf39d0 <col:20> '_Bool' lvalue Var 0x55985adebc88 'a$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x55985adf3a58 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x55985adf3a40 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x55985adf39f0 <col:38> '_Bool' lvalue Var 0x55985adeb828 'a$r_buff0_thd4' '_Bool'
|   |     |-ImplicitCastExpr 0x55985adf3b08 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x55985adf3ac0 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x55985adf3a90 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x55985adf3b38 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x55985adf3b20 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x55985adf3ae8 <col:66> '_Bool' lvalue Var 0x55985adeb828 'a$r_buff0_thd4' '_Bool'
|   |-BinaryOperator 0x55985adf3eb0 <line:802:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x55985adf3be8 <col:3> '_Bool' lvalue Var 0x55985adeba80 'a$r_buff1_thd4' '_Bool'
|   | `-ImplicitCastExpr 0x55985adf3e98 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55985adf3e68 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x55985adf3d88 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x55985adf3ca8 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x55985adf3c60 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x55985adf3c48 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x55985adf3c08 <col:20> '_Bool' lvalue Var 0x55985adebc88 'a$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x55985adf3c90 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x55985adf3c78 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x55985adf3c28 <col:38> '_Bool' lvalue Var 0x55985adeb828 'a$r_buff0_thd4' '_Bool'
|   |     | `-BinaryOperator 0x55985adf3d68 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x55985adf3d20 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x55985adf3d08 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x55985adf3cc8 <col:56> '_Bool' lvalue Var 0x55985adebd80 'a$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x55985adf3d50 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x55985adf3d38 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x55985adf3ce8 <col:74> '_Bool' lvalue Var 0x55985adeba80 'a$r_buff1_thd4' '_Bool'
|   |     |-ImplicitCastExpr 0x55985adf3e20 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x55985adf3dd8 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x55985adf3da8 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x55985adf3e50 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x55985adf3e38 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x55985adf3e00 <col:102> '_Bool' lvalue Var 0x55985adeba80 'a$r_buff1_thd4' '_Bool'
|   |-CallExpr 0x55985adf3f08 <line:803:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x55985adf3ef0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55985adf3ed0 <col:3> 'void ()' Function 0x55985ad91f00 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x55985adf3f60 <line:804:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x55985adf3f48 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55985adf3f28 <col:3> 'void ()' Function 0x55985ad91e40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x55985adf4018 <line:805:3, col:41> 'int' '='
|   | |-DeclRefExpr 0x55985adf3f80 <col:3> 'int' lvalue Var 0x55985adeb278 '__unbuffered_cnt' 'int'
|   | `-BinaryOperator 0x55985adf3ff8 <col:22, col:41> 'int' '+'
|   |   |-ImplicitCastExpr 0x55985adf3fe0 <col:22> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x55985adf3fa0 <col:22> 'int' lvalue Var 0x55985adeb278 '__unbuffered_cnt' 'int'
|   |   `-IntegerLiteral 0x55985adf3fc0 <col:41> 'int' 1
|   |-CallExpr 0x55985adf4070 <line:806:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x55985adf4058 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55985adf4038 <col:3> 'void ()' Function 0x55985ad91f00 '__VERIFIER_atomic_end' 'void ()'
|   `-ReturnStmt 0x55985adf40e8 <line:807:3, col:36>
|     `-CallExpr 0x55985adf40c8 <col:10, col:36> 'void *'
|       `-ImplicitCastExpr 0x55985adf40b0 <col:10> 'void *(*)(void)' <FunctionToPointerDecay>
|         `-DeclRefExpr 0x55985adf4090 <col:10> 'void *(void)' Function 0x55985ad91958 '__VERIFIER_nondet_pointer' 'void *(void)'
|-FunctionDecl 0x55985adf4218 prev 0x55985adeafc0 <line:809:1, line:811:1> line:809:6 fence 'void ()'
| `-CompoundStmt 0x55985adf42b8 <line:810:1, line:811:1>
|-FunctionDecl 0x55985adf42e8 prev 0x55985adeb080 <line:812:1, line:814:1> line:812:6 isync 'void ()'
| `-CompoundStmt 0x55985adf4388 <line:813:1, line:814:1>
|-FunctionDecl 0x55985adf43b8 prev 0x55985adeb140 <line:815:1, line:817:1> line:815:6 lwfence 'void ()'
| `-CompoundStmt 0x55985adf4458 <line:816:1, line:817:1>
`-FunctionDecl 0x55985adf44c8 <line:818:1, line:844:1> line:818:5 main 'int ()'
  `-CompoundStmt 0x55985adf6438 <line:819:1, line:844:1>
    |-DeclStmt 0x55985adf45e0 <line:820:3, col:18>
    | `-VarDecl 0x55985adf4578 <col:3, col:13> col:13 used t1523 'pthread_t':'unsigned long'
    |-CallExpr 0x55985adf47e8 <line:821:3, col:54> 'int'
    | |-ImplicitCastExpr 0x55985adf47d0 <col:3> 'int (*)(pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x55985adf45f8 <col:3> 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' Function 0x55985add2488 'pthread_create' 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)'
    | |-UnaryOperator 0x55985adf4638 <col:18, col:19> 'pthread_t *' prefix '&' cannot overflow
    | | `-DeclRefExpr 0x55985adf4618 <col:19> 'pthread_t':'unsigned long' lvalue Var 0x55985adf4578 't1523' 'pthread_t':'unsigned long'
    | |-ImplicitCastExpr 0x55985adf4828 <col:26, col:36> 'const pthread_attr_t *' <NullToPointer>
    | | `-ParenExpr 0x55985adf46b0 <col:26, col:36> 'void *'
    | |   `-CStyleCastExpr 0x55985adf4688 <col:27, col:35> 'void *' <NullToPointer>
    | |     `-IntegerLiteral 0x55985adf4650 <col:35> 'int' 0
    | |-ImplicitCastExpr 0x55985adf4840 <col:39> 'void *(*)(void *)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x55985adf46d0 <col:39> 'void *(void *)' Function 0x55985adec3d8 'P0' 'void *(void *)'
    | `-ParenExpr 0x55985adf4750 <col:43, col:53> 'void *'
    |   `-CStyleCastExpr 0x55985adf4728 <col:44, col:52> 'void *' <NullToPointer>
    |     `-IntegerLiteral 0x55985adf46f0 <col:52> 'int' 0
    |-DeclStmt 0x55985adf48d0 <line:822:3, col:18>
    | `-VarDecl 0x55985adf4868 <col:3, col:13> col:13 used t1524 'pthread_t':'unsigned long'
    |-CallExpr 0x55985adf4a78 <line:823:3, col:54> 'int'
    | |-ImplicitCastExpr 0x55985adf4a60 <col:3> 'int (*)(pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x55985adf48e8 <col:3> 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' Function 0x55985add2488 'pthread_create' 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)'
    | |-UnaryOperator 0x55985adf4928 <col:18, col:19> 'pthread_t *' prefix '&' cannot overflow
    | | `-DeclRefExpr 0x55985adf4908 <col:19> 'pthread_t':'unsigned long' lvalue Var 0x55985adf4868 't1524' 'pthread_t':'unsigned long'
    | |-ImplicitCastExpr 0x55985adf4ab8 <col:26, col:36> 'const pthread_attr_t *' <NullToPointer>
    | | `-ParenExpr 0x55985adf49a0 <col:26, col:36> 'void *'
    | |   `-CStyleCastExpr 0x55985adf4978 <col:27, col:35> 'void *' <NullToPointer>
    | |     `-IntegerLiteral 0x55985adf4940 <col:35> 'int' 0
    | |-ImplicitCastExpr 0x55985adf4ad0 <col:39> 'void *(*)(void *)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x55985adf49c0 <col:39> 'void *(void *)' Function 0x55985adede20 'P1' 'void *(void *)'
    | `-ParenExpr 0x55985adf4a40 <col:43, col:53> 'void *'
    |   `-CStyleCastExpr 0x55985adf4a18 <col:44, col:52> 'void *' <NullToPointer>
    |     `-IntegerLiteral 0x55985adf49e0 <col:52> 'int' 0
    |-DeclStmt 0x55985adf4b60 <line:824:3, col:18>
    | `-VarDecl 0x55985adf4af8 <col:3, col:13> col:13 used t1525 'pthread_t':'unsigned long'
    |-CallExpr 0x55985adf4d20 <line:825:3, col:54> 'int'
    | |-ImplicitCastExpr 0x55985adf4d08 <col:3> 'int (*)(pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x55985adf4b90 <col:3> 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' Function 0x55985add2488 'pthread_create' 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)'
    | |-UnaryOperator 0x55985adf4bd0 <col:18, col:19> 'pthread_t *' prefix '&' cannot overflow
    | | `-DeclRefExpr 0x55985adf4bb0 <col:19> 'pthread_t':'unsigned long' lvalue Var 0x55985adf4af8 't1525' 'pthread_t':'unsigned long'
    | |-ImplicitCastExpr 0x55985adf4d60 <col:26, col:36> 'const pthread_attr_t *' <NullToPointer>
    | | `-ParenExpr 0x55985adf4c48 <col:26, col:36> 'void *'
    | |   `-CStyleCastExpr 0x55985adf4c20 <col:27, col:35> 'void *' <NullToPointer>
    | |     `-IntegerLiteral 0x55985adf4be8 <col:35> 'int' 0
    | |-ImplicitCastExpr 0x55985adf4d78 <col:39> 'void *(*)(void *)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x55985adf4c68 <col:39> 'void *(void *)' Function 0x55985adef188 'P2' 'void *(void *)'
    | `-ParenExpr 0x55985adf4ce8 <col:43, col:53> 'void *'
    |   `-CStyleCastExpr 0x55985adf4cc0 <col:44, col:52> 'void *' <NullToPointer>
    |     `-IntegerLiteral 0x55985adf4c88 <col:52> 'int' 0
    |-DeclStmt 0x55985adf4e08 <line:826:3, col:18>
    | `-VarDecl 0x55985adf4da0 <col:3, col:13> col:13 used t1526 'pthread_t':'unsigned long'
    |-CallExpr 0x55985adf4fb0 <line:827:3, col:54> 'int'
    | |-ImplicitCastExpr 0x55985adf4f98 <col:3> 'int (*)(pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x55985adf4e20 <col:3> 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' Function 0x55985add2488 'pthread_create' 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)'
    | |-UnaryOperator 0x55985adf4e60 <col:18, col:19> 'pthread_t *' prefix '&' cannot overflow
    | | `-DeclRefExpr 0x55985adf4e40 <col:19> 'pthread_t':'unsigned long' lvalue Var 0x55985adf4da0 't1526' 'pthread_t':'unsigned long'
    | |-ImplicitCastExpr 0x55985adf4ff0 <col:26, col:36> 'const pthread_attr_t *' <NullToPointer>
    | | `-ParenExpr 0x55985adf4ed8 <col:26, col:36> 'void *'
    | |   `-CStyleCastExpr 0x55985adf4eb0 <col:27, col:35> 'void *' <NullToPointer>
    | |     `-IntegerLiteral 0x55985adf4e78 <col:35> 'int' 0
    | |-ImplicitCastExpr 0x55985adf5008 <col:39> 'void *(*)(void *)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x55985adf4ef8 <col:39> 'void *(void *)' Function 0x55985adf0508 'P3' 'void *(void *)'
    | `-ParenExpr 0x55985adf4f78 <col:43, col:53> 'void *'
    |   `-CStyleCastExpr 0x55985adf4f50 <col:44, col:52> 'void *' <NullToPointer>
    |     `-IntegerLiteral 0x55985adf4f18 <col:52> 'int' 0
    |-CallExpr 0x55985adf5058 <line:828:3, col:27> 'void'
    | `-ImplicitCastExpr 0x55985adf5040 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x55985adf5020 <col:3> 'void ()' Function 0x55985ad91e40 '__VERIFIER_atomic_begin' 'void ()'
    |-BinaryOperator 0x55985adf5128 <line:829:3, col:41> '_Bool' '='
    | |-DeclRefExpr 0x55985adf5078 <col:3> '_Bool' lvalue Var 0x55985adebdf8 'main$tmp_guard0' '_Bool'
    | `-ImplicitCastExpr 0x55985adf5110 <col:21, col:41> '_Bool' <IntegralToBoolean>
    |   `-BinaryOperator 0x55985adf50f0 <col:21, col:41> 'int' '=='
    |     |-ImplicitCastExpr 0x55985adf50d8 <col:21> 'int' <LValueToRValue>
    |     | `-DeclRefExpr 0x55985adf5098 <col:21> 'int' lvalue Var 0x55985adeb278 '__unbuffered_cnt' 'int'
    |     `-IntegerLiteral 0x55985adf50b8 <col:41> 'int' 4
    |-CallExpr 0x55985adf5180 <line:830:3, col:25> 'void'
    | `-ImplicitCastExpr 0x55985adf5168 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x55985adf5148 <col:3> 'void ()' Function 0x55985ad91f00 '__VERIFIER_atomic_end' 'void ()'
    |-CallExpr 0x55985adf51f8 <line:831:3, col:36> 'void'
    | |-ImplicitCastExpr 0x55985adf51e0 <col:3> 'void (*)(int)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x55985adf51a0 <col:3> 'void (int)' Function 0x55985ad91790 '__VERIFIER_assume' 'void (int)'
    | `-ImplicitCastExpr 0x55985adf5238 <col:21> 'int' <IntegralCast>
    |   `-ImplicitCastExpr 0x55985adf5220 <col:21> '_Bool' <LValueToRValue>
    |     `-DeclRefExpr 0x55985adf51c0 <col:21> '_Bool' lvalue Var 0x55985adebdf8 'main$tmp_guard0' '_Bool'
    |-CallExpr 0x55985adf5288 <line:832:3, col:27> 'void'
    | `-ImplicitCastExpr 0x55985adf5270 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x55985adf5250 <col:3> 'void ()' Function 0x55985ad91e40 '__VERIFIER_atomic_begin' 'void ()'
    |-BinaryOperator 0x55985adf5570 <line:833:3, col:103> 'int' '='
    | |-DeclRefExpr 0x55985adf52a8 <col:3> 'int' lvalue Var 0x55985adeb4b8 'a' 'int'
    | `-ConditionalOperator 0x55985adf5540 <col:7, col:103> 'int'
    |   |-BinaryOperator 0x55985adf5368 <col:7, col:25> 'int' '&&'
    |   | |-ImplicitCastExpr 0x55985adf5320 <col:7> 'int' <IntegralCast>
    |   | | `-ImplicitCastExpr 0x55985adf5308 <col:7> '_Bool' <LValueToRValue>
    |   | |   `-DeclRefExpr 0x55985adf52c8 <col:7> '_Bool' lvalue Var 0x55985adebc88 'a$w_buff0_used' '_Bool'
    |   | `-ImplicitCastExpr 0x55985adf5350 <col:25> 'int' <IntegralCast>
    |   |   `-ImplicitCastExpr 0x55985adf5338 <col:25> '_Bool' <LValueToRValue>
    |   |     `-DeclRefExpr 0x55985adf52e8 <col:25> '_Bool' lvalue Var 0x55985adeb648 'a$r_buff0_thd0' '_Bool'
    |   |-ImplicitCastExpr 0x55985adf5528 <col:42> 'int' <LValueToRValue>
    |   | `-DeclRefExpr 0x55985adf5388 <col:42> 'int' lvalue Var 0x55985adebc10 'a$w_buff0' 'int'
    |   `-ParenExpr 0x55985adf5508 <col:54, col:103> 'int'
    |     `-ConditionalOperator 0x55985adf54d8 <col:55, col:102> 'int'
    |       |-BinaryOperator 0x55985adf5448 <col:55, col:73> 'int' '&&'
    |       | |-ImplicitCastExpr 0x55985adf5400 <col:55> 'int' <IntegralCast>
    |       | | `-ImplicitCastExpr 0x55985adf53e8 <col:55> '_Bool' <LValueToRValue>
    |       | |   `-DeclRefExpr 0x55985adf53a8 <col:55> '_Bool' lvalue Var 0x55985adebd80 'a$w_buff1_used' '_Bool'
    |       | `-ImplicitCastExpr 0x55985adf5430 <col:73> 'int' <IntegralCast>
    |       |   `-ImplicitCastExpr 0x55985adf5418 <col:73> '_Bool' <LValueToRValue>
    |       |     `-DeclRefExpr 0x55985adf53c8 <col:73> '_Bool' lvalue Var 0x55985adeb8a0 'a$r_buff1_thd0' '_Bool'
    |       |-ImplicitCastExpr 0x55985adf54a8 <col:90> 'int' <LValueToRValue>
    |       | `-DeclRefExpr 0x55985adf5468 <col:90> 'int' lvalue Var 0x55985adebd08 'a$w_buff1' 'int'
    |       `-ImplicitCastExpr 0x55985adf54c0 <col:102> 'int' <LValueToRValue>
    |         `-DeclRefExpr 0x55985adf5488 <col:102> 'int' lvalue Var 0x55985adeb4b8 'a' 'int'
    |-BinaryOperator 0x55985adf5778 <line:834:3, col:66> '_Bool' '='
    | |-DeclRefExpr 0x55985adf5590 <col:3> '_Bool' lvalue Var 0x55985adebc88 'a$w_buff0_used' '_Bool'
    | `-ImplicitCastExpr 0x55985adf5760 <col:20, col:66> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x55985adf5730 <col:20, col:66> 'int'
    |     |-BinaryOperator 0x55985adf5650 <col:20, col:38> 'int' '&&'
    |     | |-ImplicitCastExpr 0x55985adf5608 <col:20> 'int' <IntegralCast>
    |     | | `-ImplicitCastExpr 0x55985adf55f0 <col:20> '_Bool' <LValueToRValue>
    |     | |   `-DeclRefExpr 0x55985adf55b0 <col:20> '_Bool' lvalue Var 0x55985adebc88 'a$w_buff0_used' '_Bool'
    |     | `-ImplicitCastExpr 0x55985adf5638 <col:38> 'int' <IntegralCast>
    |     |   `-ImplicitCastExpr 0x55985adf5620 <col:38> '_Bool' <LValueToRValue>
    |     |     `-DeclRefExpr 0x55985adf55d0 <col:38> '_Bool' lvalue Var 0x55985adeb648 'a$r_buff0_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x55985adf56e8 <col:55, col:62> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x55985adf56a0 <col:55, col:62> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x55985adf5670 <col:62> 'int' 0
    |     `-ImplicitCastExpr 0x55985adf5718 <col:66> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x55985adf5700 <col:66> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x55985adf56c8 <col:66> '_Bool' lvalue Var 0x55985adebc88 'a$w_buff0_used' '_Bool'
    |-BinaryOperator 0x55985adf5a60 <line:835:3, col:102> '_Bool' '='
    | |-DeclRefExpr 0x55985adf5798 <col:3> '_Bool' lvalue Var 0x55985adebd80 'a$w_buff1_used' '_Bool'
    | `-ImplicitCastExpr 0x55985adf5a48 <col:20, col:102> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x55985adf5a18 <col:20, col:102> 'int'
    |     |-BinaryOperator 0x55985adf5938 <col:20, col:74> 'int' '||'
    |     | |-BinaryOperator 0x55985adf5858 <col:20, col:38> 'int' '&&'
    |     | | |-ImplicitCastExpr 0x55985adf5810 <col:20> 'int' <IntegralCast>
    |     | | | `-ImplicitCastExpr 0x55985adf57f8 <col:20> '_Bool' <LValueToRValue>
    |     | | |   `-DeclRefExpr 0x55985adf57b8 <col:20> '_Bool' lvalue Var 0x55985adebc88 'a$w_buff0_used' '_Bool'
    |     | | `-ImplicitCastExpr 0x55985adf5840 <col:38> 'int' <IntegralCast>
    |     | |   `-ImplicitCastExpr 0x55985adf5828 <col:38> '_Bool' <LValueToRValue>
    |     | |     `-DeclRefExpr 0x55985adf57d8 <col:38> '_Bool' lvalue Var 0x55985adeb648 'a$r_buff0_thd0' '_Bool'
    |     | `-BinaryOperator 0x55985adf5918 <col:56, col:74> 'int' '&&'
    |     |   |-ImplicitCastExpr 0x55985adf58d0 <col:56> 'int' <IntegralCast>
    |     |   | `-ImplicitCastExpr 0x55985adf58b8 <col:56> '_Bool' <LValueToRValue>
    |     |   |   `-DeclRefExpr 0x55985adf5878 <col:56> '_Bool' lvalue Var 0x55985adebd80 'a$w_buff1_used' '_Bool'
    |     |   `-ImplicitCastExpr 0x55985adf5900 <col:74> 'int' <IntegralCast>
    |     |     `-ImplicitCastExpr 0x55985adf58e8 <col:74> '_Bool' <LValueToRValue>
    |     |       `-DeclRefExpr 0x55985adf5898 <col:74> '_Bool' lvalue Var 0x55985adeb8a0 'a$r_buff1_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x55985adf59d0 <col:91, col:98> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x55985adf5988 <col:91, col:98> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x55985adf5958 <col:98> 'int' 0
    |     `-ImplicitCastExpr 0x55985adf5a00 <col:102> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x55985adf59e8 <col:102> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x55985adf59b0 <col:102> '_Bool' lvalue Var 0x55985adebd80 'a$w_buff1_used' '_Bool'
    |-BinaryOperator 0x55985adf5c78 <line:836:3, col:66> '_Bool' '='
    | |-DeclRefExpr 0x55985adf5a80 <col:3> '_Bool' lvalue Var 0x55985adeb648 'a$r_buff0_thd0' '_Bool'
    | `-ImplicitCastExpr 0x55985adf5c60 <col:20, col:66> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x55985adf5c30 <col:20, col:66> 'int'
    |     |-BinaryOperator 0x55985adf5b40 <col:20, col:38> 'int' '&&'
    |     | |-ImplicitCastExpr 0x55985adf5af8 <col:20> 'int' <IntegralCast>
    |     | | `-ImplicitCastExpr 0x55985adf5ae0 <col:20> '_Bool' <LValueToRValue>
    |     | |   `-DeclRefExpr 0x55985adf5aa0 <col:20> '_Bool' lvalue Var 0x55985adebc88 'a$w_buff0_used' '_Bool'
    |     | `-ImplicitCastExpr 0x55985adf5b28 <col:38> 'int' <IntegralCast>
    |     |   `-ImplicitCastExpr 0x55985adf5b10 <col:38> '_Bool' <LValueToRValue>
    |     |     `-DeclRefExpr 0x55985adf5ac0 <col:38> '_Bool' lvalue Var 0x55985adeb648 'a$r_buff0_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x55985adf5be8 <col:55, col:62> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x55985adf5ba0 <col:55, col:62> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x55985adf5b60 <col:62> 'int' 0
    |     `-ImplicitCastExpr 0x55985adf5c18 <col:66> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x55985adf5c00 <col:66> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x55985adf5bc8 <col:66> '_Bool' lvalue Var 0x55985adeb648 'a$r_buff0_thd0' '_Bool'
    |-BinaryOperator 0x55985adf5f60 <line:837:3, col:102> '_Bool' '='
    | |-DeclRefExpr 0x55985adf5c98 <col:3> '_Bool' lvalue Var 0x55985adeb8a0 'a$r_buff1_thd0' '_Bool'
    | `-ImplicitCastExpr 0x55985adf5f48 <col:20, col:102> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x55985adf5f18 <col:20, col:102> 'int'
    |     |-BinaryOperator 0x55985adf5e38 <col:20, col:74> 'int' '||'
    |     | |-BinaryOperator 0x55985adf5d58 <col:20, col:38> 'int' '&&'
    |     | | |-ImplicitCastExpr 0x55985adf5d10 <col:20> 'int' <IntegralCast>
    |     | | | `-ImplicitCastExpr 0x55985adf5cf8 <col:20> '_Bool' <LValueToRValue>
    |     | | |   `-DeclRefExpr 0x55985adf5cb8 <col:20> '_Bool' lvalue Var 0x55985adebc88 'a$w_buff0_used' '_Bool'
    |     | | `-ImplicitCastExpr 0x55985adf5d40 <col:38> 'int' <IntegralCast>
    |     | |   `-ImplicitCastExpr 0x55985adf5d28 <col:38> '_Bool' <LValueToRValue>
    |     | |     `-DeclRefExpr 0x55985adf5cd8 <col:38> '_Bool' lvalue Var 0x55985adeb648 'a$r_buff0_thd0' '_Bool'
    |     | `-BinaryOperator 0x55985adf5e18 <col:56, col:74> 'int' '&&'
    |     |   |-ImplicitCastExpr 0x55985adf5dd0 <col:56> 'int' <IntegralCast>
    |     |   | `-ImplicitCastExpr 0x55985adf5db8 <col:56> '_Bool' <LValueToRValue>
    |     |   |   `-DeclRefExpr 0x55985adf5d78 <col:56> '_Bool' lvalue Var 0x55985adebd80 'a$w_buff1_used' '_Bool'
    |     |   `-ImplicitCastExpr 0x55985adf5e00 <col:74> 'int' <IntegralCast>
    |     |     `-ImplicitCastExpr 0x55985adf5de8 <col:74> '_Bool' <LValueToRValue>
    |     |       `-DeclRefExpr 0x55985adf5d98 <col:74> '_Bool' lvalue Var 0x55985adeb8a0 'a$r_buff1_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x55985adf5ed0 <col:91, col:98> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x55985adf5e88 <col:91, col:98> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x55985adf5e58 <col:98> 'int' 0
    |     `-ImplicitCastExpr 0x55985adf5f00 <col:102> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x55985adf5ee8 <col:102> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x55985adf5eb0 <col:102> '_Bool' lvalue Var 0x55985adeb8a0 'a$r_buff1_thd0' '_Bool'
    |-CallExpr 0x55985adf5fb8 <line:838:3, col:25> 'void'
    | `-ImplicitCastExpr 0x55985adf5fa0 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x55985adf5f80 <col:3> 'void ()' Function 0x55985ad91f00 '__VERIFIER_atomic_end' 'void ()'
    |-CallExpr 0x55985adf6010 <line:839:3, col:27> 'void'
    | `-ImplicitCastExpr 0x55985adf5ff8 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x55985adf5fd8 <col:3> 'void ()' Function 0x55985ad91e40 '__VERIFIER_atomic_begin' 'void ()'
    |-BinaryOperator 0x55985adf62e0 <line:840:3, col:77> '_Bool' '='
    | |-DeclRefExpr 0x55985adf6030 <col:3> '_Bool' lvalue Var 0x55985adebe70 'main$tmp_guard1' '_Bool'
    | `-ImplicitCastExpr 0x55985adf62c8 <col:21, col:77> '_Bool' <IntegralToBoolean>
    |   `-UnaryOperator 0x55985adf62b0 <col:21, col:77> 'int' prefix '!' cannot overflow
    |     `-ParenExpr 0x55985adf6290 <col:22, col:77> 'int'
    |       `-BinaryOperator 0x55985adf6270 <col:23, col:76> 'int' '&&'
    |         |-BinaryOperator 0x55985adf61d8 <col:23, col:48> 'int' '&&'
    |         | |-BinaryOperator 0x55985adf6140 <col:23, col:38> 'int' '&&'
    |         | | |-BinaryOperator 0x55985adf60a8 <col:23, col:28> 'int' '=='
    |         | | | |-ImplicitCastExpr 0x55985adf6090 <col:23> 'int' <LValueToRValue>
    |         | | | | `-DeclRefExpr 0x55985adf6050 <col:23> 'int' lvalue Var 0x55985adebf70 'x' 'int'
    |         | | | `-IntegerLiteral 0x55985adf6070 <col:28> 'int' 2
    |         | | `-BinaryOperator 0x55985adf6120 <col:33, col:38> 'int' '=='
    |         | |   |-ImplicitCastExpr 0x55985adf6108 <col:33> 'int' <LValueToRValue>
    |         | |   | `-DeclRefExpr 0x55985adf60c8 <col:33> 'int' lvalue Var 0x55985adec090 'y' 'int'
    |         | |   `-IntegerLiteral 0x55985adf60e8 <col:38> 'int' 2
    |         | `-BinaryOperator 0x55985adf61b8 <col:43, col:48> 'int' '=='
    |         |   |-ImplicitCastExpr 0x55985adf61a0 <col:43> 'int' <LValueToRValue>
    |         |   | `-DeclRefExpr 0x55985adf6160 <col:43> 'int' lvalue Var 0x55985adec1b0 'z' 'int'
    |         |   `-IntegerLiteral 0x55985adf6180 <col:48> 'int' 2
    |         `-BinaryOperator 0x55985adf6250 <col:53, col:76> 'int' '=='
    |           |-ImplicitCastExpr 0x55985adf6238 <col:53> 'int' <LValueToRValue>
    |           | `-DeclRefExpr 0x55985adf61f8 <col:53> 'int' lvalue Var 0x55985adeb398 '__unbuffered_p3_EAX' 'int'
    |           `-IntegerLiteral 0x55985adf6218 <col:76> 'int' 0
    |-CallExpr 0x55985adf6338 <line:841:3, col:25> 'void'
    | `-ImplicitCastExpr 0x55985adf6320 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x55985adf6300 <col:3> 'void ()' Function 0x55985ad91f00 '__VERIFIER_atomic_end' 'void ()'
    |-CallExpr 0x55985adf63b0 <line:842:3, col:36> 'void'
    | |-ImplicitCastExpr 0x55985adf6398 <col:3> 'void (*)(int)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x55985adf6358 <col:3> 'void (int)' Function 0x55985ad91bc8 '__VERIFIER_assert' 'void (int)'
    | `-ImplicitCastExpr 0x55985adf63f0 <col:21> 'int' <IntegralCast>
    |   `-ImplicitCastExpr 0x55985adf63d8 <col:21> '_Bool' <LValueToRValue>
    |     `-DeclRefExpr 0x55985adf6378 <col:21> '_Bool' lvalue Var 0x55985adebe70 'main$tmp_guard1' '_Bool'
    `-ReturnStmt 0x55985adf6428 <line:843:3, col:10>
      `-IntegerLiteral 0x55985adf6408 <col:10> 'int' 0
