TranslationUnitDecl 0x55643e49de18 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x55643e49e6d8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x55643e49e3b0 '__int128'
|-TypedefDecl 0x55643e49e748 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x55643e49e3d0 'unsigned __int128'
|-TypedefDecl 0x55643e49ea50 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x55643e49e820 'struct __NSConstantString_tag'
|   `-Record 0x55643e49e7a0 '__NSConstantString_tag'
|-TypedefDecl 0x55643e49eaf8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x55643e49eab0 'char *'
|   `-BuiltinType 0x55643e49deb0 'char'
|-TypedefDecl 0x55643e4dd650 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'struct __va_list_tag [1]'
| `-ConstantArrayType 0x55643e49ed90 'struct __va_list_tag [1]' 1 
|   `-RecordType 0x55643e49ebd0 'struct __va_list_tag'
|     `-Record 0x55643e49eb50 '__va_list_tag'
|-FunctionDecl 0x55643e4dd790 <./split_0/safe021_pso.opt_false-unreach-call.i:1:1, col:34> col:13 used __VERIFIER_assume 'void (int)' extern
| `-ParmVarDecl 0x55643e4dd6c0 <col:31> col:34 'int'
|-FunctionDecl 0x55643e4dd958 <line:2:1, col:45> col:15 used __VERIFIER_nondet_pointer 'void *(void)' extern
|-FunctionDecl 0x55643e4dda80 <line:3:1, col:61> col:13 used __VERIFIER_error 'void () __attribute__((noreturn))' extern
|-FunctionDecl 0x55643e4ddbc8 <line:4:1, col:99> col:6 used __VERIFIER_assert 'void (int)'
| |-ParmVarDecl 0x55643e4ddb38 <col:24, col:28> col:28 used expression 'int'
| `-CompoundStmt 0x55643e4dddf8 <col:40, col:99>
|   |-IfStmt 0x55643e4dddc8 <col:42, col:88>
|   | |-UnaryOperator 0x55643e4ddca8 <col:46, col:47> 'int' prefix '!' cannot overflow
|   | | `-ImplicitCastExpr 0x55643e4ddc90 <col:47> 'int' <LValueToRValue>
|   | |   `-DeclRefExpr 0x55643e4ddc70 <col:47> 'int' lvalue ParmVar 0x55643e4ddb38 'expression' 'int'
|   | `-CompoundStmt 0x55643e4dddb0 <col:59, col:88>
|   |   `-LabelStmt 0x55643e4ddd98 <col:61, col:85> 'ERROR'
|   |     `-CallExpr 0x55643e4ddd28 <col:68, col:85> 'void'
|   |       `-ImplicitCastExpr 0x55643e4ddd10 <col:68> 'void (*)() __attribute__((noreturn))' <FunctionToPointerDecay>
|   |         `-DeclRefExpr 0x55643e4ddcc0 <col:68> 'void () __attribute__((noreturn))' Function 0x55643e4dda80 '__VERIFIER_error' 'void () __attribute__((noreturn))'
|   |-NullStmt 0x55643e4ddde0 <col:89>
|   `-ReturnStmt 0x55643e4ddde8 <col:91>
|-FunctionDecl 0x55643e4dde40 <line:5:1, col:37> col:13 used __VERIFIER_atomic_begin 'void ()' extern
|-FunctionDecl 0x55643e4ddf00 <line:6:1, col:35> col:13 used __VERIFIER_atomic_end 'void ()' extern
|-FunctionDecl 0x55643e4de280 <line:8:1, line:10:76> line:8:13 __assert_fail 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x55643e4ddfb8 <col:28, col:40> col:40 __assertion 'const char *'
| |-ParmVarDecl 0x55643e4de038 <col:53, col:65> col:65 __file 'const char *'
| |-ParmVarDecl 0x55643e4de0b8 <line:9:7, col:20> col:20 __line 'unsigned int'
| |-ParmVarDecl 0x55643e4de138 <col:28, col:40> col:40 __function 'const char *'
| `-NoThrowAttr 0x55643e4de340 <line:10:22>
|-FunctionDecl 0x55643e504390 <line:11:1, line:13:76> line:11:13 __assert_perror_fail 'void (int, const char *, unsigned int, const char *) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x55643e4de3b0 <col:35, col:39> col:39 __errnum 'int'
| |-ParmVarDecl 0x55643e4de430 <col:49, col:61> col:61 __file 'const char *'
| |-ParmVarDecl 0x55643e4de4b0 <line:12:7, col:20> col:20 __line 'unsigned int'
| |-ParmVarDecl 0x55643e4de530 <col:28, col:40> col:40 __function 'const char *'
| `-NoThrowAttr 0x55643e504450 <line:13:22>
|-FunctionDecl 0x55643e504700 <line:14:1, line:15:76> line:14:13 __assert 'void (const char *, const char *, int) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x55643e5044c0 <col:23, col:35> col:35 __assertion 'const char *'
| |-ParmVarDecl 0x55643e504540 <col:48, col:60> col:60 __file 'const char *'
| |-ParmVarDecl 0x55643e5045c0 <col:68, col:72> col:72 __line 'int'
| `-NoThrowAttr 0x55643e5047b8 <line:15:22>
|-TypedefDecl 0x55643e504828 <line:17:1, col:23> col:23 __u_char 'unsigned char'
| `-BuiltinType 0x55643e49df70 'unsigned char'
|-TypedefDecl 0x55643e504898 <line:18:1, col:28> col:28 __u_short 'unsigned short'
| `-BuiltinType 0x55643e49df90 'unsigned short'
|-TypedefDecl 0x55643e504908 <line:19:1, col:22> col:22 __u_int 'unsigned int'
| `-BuiltinType 0x55643e49dfb0 'unsigned int'
|-TypedefDecl 0x55643e504978 <line:20:1, col:27> col:27 __u_long 'unsigned long'
| `-BuiltinType 0x55643e49dfd0 'unsigned long'
|-TypedefDecl 0x55643e5049e8 <line:21:1, col:21> col:21 __int8_t 'signed char'
| `-BuiltinType 0x55643e49ded0 'signed char'
|-TypedefDecl 0x55643e504a58 <line:22:1, col:23> col:23 __uint8_t 'unsigned char'
| `-BuiltinType 0x55643e49df70 'unsigned char'
|-TypedefDecl 0x55643e504ac8 <line:23:1, col:26> col:26 __int16_t 'short'
| `-BuiltinType 0x55643e49def0 'short'
|-TypedefDecl 0x55643e504b38 <line:24:1, col:28> col:28 __uint16_t 'unsigned short'
| `-BuiltinType 0x55643e49df90 'unsigned short'
|-TypedefDecl 0x55643e504ba8 <line:25:1, col:20> col:20 __int32_t 'int'
| `-BuiltinType 0x55643e49df10 'int'
|-TypedefDecl 0x55643e504c18 <line:26:1, col:22> col:22 __uint32_t 'unsigned int'
| `-BuiltinType 0x55643e49dfb0 'unsigned int'
|-TypedefDecl 0x55643e504c88 <line:27:1, col:25> col:25 __int64_t 'long'
| `-BuiltinType 0x55643e49df30 'long'
|-TypedefDecl 0x55643e504cf8 <line:28:1, col:27> col:27 referenced __uint64_t 'unsigned long'
| `-BuiltinType 0x55643e49dfd0 'unsigned long'
|-TypedefDecl 0x55643e504d68 <line:29:1, col:18> col:18 referenced __quad_t 'long'
| `-BuiltinType 0x55643e49df30 'long'
|-TypedefDecl 0x55643e504dd8 <line:30:1, col:27> col:27 __u_quad_t 'unsigned long'
| `-BuiltinType 0x55643e49dfd0 'unsigned long'
|-TypedefDecl 0x55643e504e48 <line:31:1, col:27> col:27 __dev_t 'unsigned long'
| `-BuiltinType 0x55643e49dfd0 'unsigned long'
|-TypedefDecl 0x55643e504eb8 <line:32:1, col:22> col:22 __uid_t 'unsigned int'
| `-BuiltinType 0x55643e49dfb0 'unsigned int'
|-TypedefDecl 0x55643e504f28 <line:33:1, col:22> col:22 __gid_t 'unsigned int'
| `-BuiltinType 0x55643e49dfb0 'unsigned int'
|-TypedefDecl 0x55643e504f98 <line:34:1, col:27> col:27 __ino_t 'unsigned long'
| `-BuiltinType 0x55643e49dfd0 'unsigned long'
|-TypedefDecl 0x55643e505008 <line:35:1, col:27> col:27 __ino64_t 'unsigned long'
| `-BuiltinType 0x55643e49dfd0 'unsigned long'
|-TypedefDecl 0x55643e505078 <line:36:1, col:22> col:22 __mode_t 'unsigned int'
| `-BuiltinType 0x55643e49dfb0 'unsigned int'
|-TypedefDecl 0x55643e5050e8 <line:37:1, col:27> col:27 __nlink_t 'unsigned long'
| `-BuiltinType 0x55643e49dfd0 'unsigned long'
|-TypedefDecl 0x55643e505158 <line:38:1, col:18> col:18 __off_t 'long'
| `-BuiltinType 0x55643e49df30 'long'
|-TypedefDecl 0x55643e5051c8 <line:39:1, col:18> col:18 referenced __off64_t 'long'
| `-BuiltinType 0x55643e49df30 'long'
|-TypedefDecl 0x55643e505238 <line:40:1, col:13> col:13 referenced __pid_t 'int'
| `-BuiltinType 0x55643e49df10 'int'
|-RecordDecl 0x55643e505290 <line:41:9, col:32> col:9 struct definition
| `-FieldDecl 0x55643e505408 <col:18, col:29> col:22 __val 'int [2]'
|-TypedefDecl 0x55643e5054c0 <col:1, col:34> col:34 __fsid_t 'struct __fsid_t':'__fsid_t'
| `-ElaboratedType 0x55643e505460 'struct __fsid_t' sugar
|   `-RecordType 0x55643e505310 '__fsid_t'
|     `-Record 0x55643e505290 ''
|-TypedefDecl 0x55643e505548 <line:42:1, col:18> col:18 referenced __clock_t 'long'
| `-BuiltinType 0x55643e49df30 'long'
|-TypedefDecl 0x55643e5055b8 <line:43:1, col:27> col:27 __rlim_t 'unsigned long'
| `-BuiltinType 0x55643e49dfd0 'unsigned long'
|-TypedefDecl 0x55643e505628 <line:44:1, col:27> col:27 __rlim64_t 'unsigned long'
| `-BuiltinType 0x55643e49dfd0 'unsigned long'
|-TypedefDecl 0x55643e505698 <line:45:1, col:22> col:22 __id_t 'unsigned int'
| `-BuiltinType 0x55643e49dfb0 'unsigned int'
|-TypedefDecl 0x55643e505708 <line:46:1, col:18> col:18 referenced __time_t 'long'
| `-BuiltinType 0x55643e49df30 'long'
|-TypedefDecl 0x55643e505778 <line:47:1, col:22> col:22 __useconds_t 'unsigned int'
| `-BuiltinType 0x55643e49dfb0 'unsigned int'
|-TypedefDecl 0x55643e5057e8 <line:48:1, col:18> col:18 __suseconds_t 'long'
| `-BuiltinType 0x55643e49df30 'long'
|-TypedefDecl 0x55643e505858 <line:49:1, col:13> col:13 __daddr_t 'int'
| `-BuiltinType 0x55643e49df10 'int'
|-TypedefDecl 0x55643e5058c8 <line:50:1, col:13> col:13 __key_t 'int'
| `-BuiltinType 0x55643e49df10 'int'
|-TypedefDecl 0x55643e505938 <line:51:1, col:13> col:13 referenced __clockid_t 'int'
| `-BuiltinType 0x55643e49df10 'int'
|-TypedefDecl 0x55643e5059a8 <line:52:1, col:16> col:16 referenced __timer_t 'void *'
| `-PointerType 0x55643e49e630 'void *'
|   `-BuiltinType 0x55643e49de70 'void'
|-TypedefDecl 0x55643e505a18 <line:53:1, col:18> col:18 __blksize_t 'long'
| `-BuiltinType 0x55643e49df30 'long'
|-TypedefDecl 0x55643e505a88 <line:54:1, col:18> col:18 __blkcnt_t 'long'
| `-BuiltinType 0x55643e49df30 'long'
|-TypedefDecl 0x55643e505af8 <line:55:1, col:18> col:18 __blkcnt64_t 'long'
| `-BuiltinType 0x55643e49df30 'long'
|-TypedefDecl 0x55643e505b68 <line:56:1, col:27> col:27 __fsblkcnt_t 'unsigned long'
| `-BuiltinType 0x55643e49dfd0 'unsigned long'
|-TypedefDecl 0x55643e505bd8 <line:57:1, col:27> col:27 __fsblkcnt64_t 'unsigned long'
| `-BuiltinType 0x55643e49dfd0 'unsigned long'
|-TypedefDecl 0x55643e505c48 <line:58:1, col:27> col:27 __fsfilcnt_t 'unsigned long'
| `-BuiltinType 0x55643e49dfd0 'unsigned long'
|-TypedefDecl 0x55643e505cb8 <line:59:1, col:27> col:27 __fsfilcnt64_t 'unsigned long'
| `-BuiltinType 0x55643e49dfd0 'unsigned long'
|-TypedefDecl 0x55643e505d28 <line:60:1, col:18> col:18 __fsword_t 'long'
| `-BuiltinType 0x55643e49df30 'long'
|-TypedefDecl 0x55643e505d98 <line:61:1, col:18> col:18 __ssize_t 'long'
| `-BuiltinType 0x55643e49df30 'long'
|-TypedefDecl 0x55643e505e08 <line:62:1, col:18> col:18 referenced __syscall_slong_t 'long'
| `-BuiltinType 0x55643e49df30 'long'
|-TypedefDecl 0x55643e505e78 <line:63:1, col:27> col:27 __syscall_ulong_t 'unsigned long'
| `-BuiltinType 0x55643e49dfd0 'unsigned long'
|-TypedefDecl 0x55643e505f08 <line:64:1, col:19> col:19 __loff_t '__off64_t':'long'
| `-TypedefType 0x55643e505ed0 '__off64_t' sugar
|   |-Typedef 0x55643e5051c8 '__off64_t'
|   `-BuiltinType 0x55643e49df30 'long'
|-TypedefDecl 0x55643e506000 <line:65:1, col:19> col:19 __qaddr_t '__quad_t *'
| `-PointerType 0x55643e505fc0 '__quad_t *'
|   `-TypedefType 0x55643e505f60 '__quad_t' sugar
|     |-Typedef 0x55643e504d68 '__quad_t'
|     `-BuiltinType 0x55643e49df30 'long'
|-TypedefDecl 0x55643e506070 <line:66:1, col:15> col:15 __caddr_t 'char *'
| `-PointerType 0x55643e49eab0 'char *'
|   `-BuiltinType 0x55643e49deb0 'char'
|-TypedefDecl 0x55643e5060e0 <line:67:1, col:18> col:18 __intptr_t 'long'
| `-BuiltinType 0x55643e49df30 'long'
|-TypedefDecl 0x55643e506150 <line:68:1, col:22> col:22 __socklen_t 'unsigned int'
| `-BuiltinType 0x55643e49dfb0 'unsigned int'
|-FunctionDecl 0x55643e506298 <line:69:1, line:73:1> line:70:1 __bswap_32 'unsigned int (unsigned int)' static inline
| |-ParmVarDecl 0x55643e5061c0 <col:13, col:26> col:26 used __bsx 'unsigned int'
| `-CompoundStmt 0x55643e5075e8 <line:71:1, line:73:1>
|   `-ReturnStmt 0x55643e5075d8 <line:72:3, col:34>
|     `-CallExpr 0x55643e507598 <col:10, col:34> 'unsigned int'
|       |-ImplicitCastExpr 0x55643e507580 <col:10> 'unsigned int (*)(unsigned int)' <BuiltinFnToFnPtr>
|       | `-DeclRefExpr 0x55643e507510 <col:10> '<builtin fn type>' Function 0x55643e507380 '__builtin_bswap32' 'unsigned int (unsigned int)'
|       `-ImplicitCastExpr 0x55643e5075c0 <col:29> 'unsigned int' <LValueToRValue>
|         `-DeclRefExpr 0x55643e507530 <col:29> 'unsigned int' lvalue ParmVar 0x55643e5061c0 '__bsx' 'unsigned int'
|-FunctionDecl 0x55643e507380 <col:10> col:10 implicit used __builtin_bswap32 'unsigned int (unsigned int)' extern
| |-ParmVarDecl 0x55643e507420 <<invalid sloc>> <invalid sloc> 'unsigned int'
| |-NoThrowAttr 0x55643e507490 <col:10> Implicit
| `-ConstAttr 0x55643e5074e8 <col:10> Implicit
|-FunctionDecl 0x55643e507740 <line:74:1, line:78:1> line:75:1 __bswap_64 '__uint64_t (__uint64_t)' static inline
| |-ParmVarDecl 0x55643e507638 <col:13, col:24> col:24 used __bsx '__uint64_t':'unsigned long'
| `-CompoundStmt 0x55643e507a58 <line:76:1, line:78:1>
|   `-ReturnStmt 0x55643e507a48 <line:77:3, col:34>
|     `-CallExpr 0x55643e507a08 <col:10, col:34> 'unsigned long'
|       |-ImplicitCastExpr 0x55643e5079f0 <col:10> 'unsigned long (*)(unsigned long)' <BuiltinFnToFnPtr>
|       | `-DeclRefExpr 0x55643e507978 <col:10> '<builtin fn type>' Function 0x55643e5077e8 '__builtin_bswap64' 'unsigned long (unsigned long)'
|       `-ImplicitCastExpr 0x55643e507a30 <col:29> '__uint64_t':'unsigned long' <LValueToRValue>
|         `-DeclRefExpr 0x55643e507998 <col:29> '__uint64_t':'unsigned long' lvalue ParmVar 0x55643e507638 '__bsx' '__uint64_t':'unsigned long'
|-FunctionDecl 0x55643e5077e8 <col:10> col:10 implicit used __builtin_bswap64 'unsigned long (unsigned long)' extern
| |-ParmVarDecl 0x55643e507888 <<invalid sloc>> <invalid sloc> 'unsigned long'
| |-NoThrowAttr 0x55643e5078f8 <col:10> Implicit
| `-ConstAttr 0x55643e507950 <col:10> Implicit
|-TypedefDecl 0x55643e507a88 <line:79:1, col:27> col:27 referenced size_t 'unsigned long'
| `-BuiltinType 0x55643e49dfd0 'unsigned long'
|-TypedefDecl 0x55643e507b18 <line:81:1, col:18> col:18 referenced time_t '__time_t':'long'
| `-TypedefType 0x55643e507ae0 '__time_t' sugar
|   |-Typedef 0x55643e505708 '__time_t'
|   `-BuiltinType 0x55643e49df30 'long'
|-RecordDecl 0x55643e507b70 <line:84:1, line:88:3> line:84:8 struct timespec definition
| |-FieldDecl 0x55643e507c28 <line:86:5, col:14> col:14 tv_sec '__time_t':'long'
| `-FieldDecl 0x55643e507cb8 <line:87:5, col:23> col:23 tv_nsec '__syscall_slong_t':'long'
|-TypedefDecl 0x55643e507d48 <line:89:1, col:17> col:17 referenced pid_t '__pid_t':'int'
| `-TypedefType 0x55643e507d10 '__pid_t' sugar
|   |-Typedef 0x55643e505238 '__pid_t'
|   `-BuiltinType 0x55643e49df10 'int'
|-RecordDecl 0x55643e507da0 <line:90:1, line:93:3> line:90:8 struct sched_param definition
| `-FieldDecl 0x55643e507e60 <line:92:5, col:9> col:9 __sched_priority 'int'
|-RecordDecl 0x55643e507eb0 <line:96:1, line:99:3> line:96:8 struct __sched_param definition
| `-FieldDecl 0x55643e507f70 <line:98:5, col:9> col:9 __sched_priority 'int'
|-TypedefDecl 0x55643e507fd8 <line:100:1, col:27> col:27 referenced __cpu_mask 'unsigned long'
| `-BuiltinType 0x55643e49dfd0 'unsigned long'
|-RecordDecl 0x55643e508030 <line:101:9, line:104:1> line:101:9 struct definition
| `-FieldDecl 0x55643e5082c0 <line:103:3, col:53> col:14 __bits '__cpu_mask [64]'
|-TypedefDecl 0x55643e5093a0 <line:101:1, line:104:3> col:3 referenced cpu_set_t 'struct cpu_set_t':'cpu_set_t'
| `-ElaboratedType 0x55643e508310 'struct cpu_set_t' sugar
|   `-RecordType 0x55643e5080b0 'cpu_set_t'
|     `-Record 0x55643e508030 ''
|-FunctionDecl 0x55643e509678 <line:106:1, line:107:42> line:106:12 __sched_cpucount 'int (size_t, const cpu_set_t *)' extern
| |-ParmVarDecl 0x55643e509448 <col:30, col:37> col:37 __setsize 'size_t':'unsigned long'
| |-ParmVarDecl 0x55643e509550 <col:48, col:65> col:65 __setp 'const cpu_set_t *'
| `-NoThrowAttr 0x55643e509728 <line:107:19>
|-FunctionDecl 0x55643e509900 <line:108:1, col:92> col:19 __sched_cpualloc 'cpu_set_t *(size_t)' extern
| |-ParmVarDecl 0x55643e509790 <col:37, col:44> col:44 __count 'size_t':'unsigned long'
| `-NoThrowAttr 0x55643e5099a8 <col:69>
|-FunctionDecl 0x55643e509b20 <line:109:1, col:87> col:13 __sched_cpufree 'void (cpu_set_t *)' extern
| |-ParmVarDecl 0x55643e509a10 <col:30, col:41> col:41 __set 'cpu_set_t *'
| `-NoThrowAttr 0x55643e509bc8 <col:64>
|-FunctionDecl 0x55643e509e88 <line:112:1, line:113:45> line:112:12 sched_setparam 'int (__pid_t, const struct sched_param *)' extern
| |-ParmVarDecl 0x55643e509c30 <col:28, col:36> col:36 __pid '__pid_t':'int'
| |-ParmVarDecl 0x55643e509d68 <col:43, col:69> col:69 __param 'const struct sched_param *'
| `-NoThrowAttr 0x55643e509f38 <line:113:22>
|-FunctionDecl 0x55643e50a1b8 <line:114:1, col:111> col:12 sched_getparam 'int (__pid_t, struct sched_param *)' extern
| |-ParmVarDecl 0x55643e509fa0 <col:28, col:36> col:36 __pid '__pid_t':'int'
| |-ParmVarDecl 0x55643e50a098 <col:43, col:63> col:63 __param 'struct sched_param *'
| `-NoThrowAttr 0x55643e50a268 <col:88>
|-FunctionDecl 0x55643e50a588 <line:115:1, line:116:85> line:115:12 sched_setscheduler 'int (__pid_t, int, const struct sched_param *)' extern
| |-ParmVarDecl 0x55643e50a2d0 <col:32, col:40> col:40 __pid '__pid_t':'int'
| |-ParmVarDecl 0x55643e50a3b0 <col:47, col:51> col:51 __policy 'int'
| |-ParmVarDecl 0x55643e50a440 <line:116:11, col:37> col:37 __param 'const struct sched_param *'
| `-NoThrowAttr 0x55643e50a640 <col:62>
|-FunctionDecl 0x55643e50a7b8 <line:117:1, col:86> col:12 sched_getscheduler 'int (__pid_t)' extern
| |-ParmVarDecl 0x55643e50a6a8 <col:32, col:40> col:40 __pid '__pid_t':'int'
| `-NoThrowAttr 0x55643e50a860 <col:63>
|-FunctionDecl 0x55643e50a988 <line:118:1, col:70> col:12 sched_yield 'int (void)' extern
| `-NoThrowAttr 0x55643e50aa28 <col:47>
|-FunctionDecl 0x55643e50ab30 <line:119:1, col:92> col:12 sched_get_priority_max 'int (int)' extern
| |-ParmVarDecl 0x55643e50aa98 <col:36, col:40> col:40 __algorithm 'int'
| `-NoThrowAttr 0x55643e50abd8 <col:69>
|-FunctionDecl 0x55643e50ace0 <line:120:1, col:92> col:12 sched_get_priority_min 'int (int)' extern
| |-ParmVarDecl 0x55643e50ac48 <col:36, col:40> col:40 __algorithm 'int'
| `-NoThrowAttr 0x55643e50ad88 <col:69>
|-FunctionDecl 0x55643e50b048 <line:121:1, col:111> col:12 sched_rr_get_interval 'int (__pid_t, struct timespec *)' extern
| |-ParmVarDecl 0x55643e50adf0 <col:35, col:43> col:43 __pid '__pid_t':'int'
| |-ParmVarDecl 0x55643e50af28 <col:50, col:67> col:67 __t 'struct timespec *'
| `-NoThrowAttr 0x55643e50b0f8 <col:88>
|-TypedefDecl 0x55643e50b188 <line:125:1, col:19> col:19 referenced clock_t '__clock_t':'long'
| `-TypedefType 0x55643e50b150 '__clock_t' sugar
|   |-Typedef 0x55643e505548 '__clock_t'
|   `-BuiltinType 0x55643e49df30 'long'
|-TypedefDecl 0x55643e50b218 <line:128:1, col:21> col:21 referenced clockid_t '__clockid_t':'int'
| `-TypedefType 0x55643e50b1e0 '__clockid_t' sugar
|   |-Typedef 0x55643e505938 '__clockid_t'
|   `-BuiltinType 0x55643e49df10 'int'
|-TypedefDecl 0x55643e50b2a8 <line:129:1, col:19> col:19 referenced timer_t '__timer_t':'void *'
| `-TypedefType 0x55643e50b270 '__timer_t' sugar
|   |-Typedef 0x55643e5059a8 '__timer_t'
|   `-PointerType 0x55643e49e630 'void *'
|     `-BuiltinType 0x55643e49de70 'void'
|-RecordDecl 0x55643e50b300 <line:131:1, line:144:1> line:131:8 struct tm definition
| |-FieldDecl 0x55643e50b3d8 <line:133:3, col:7> col:7 tm_sec 'int'
| |-FieldDecl 0x55643e50b440 <line:134:3, col:7> col:7 tm_min 'int'
| |-FieldDecl 0x55643e50b4a8 <line:135:3, col:7> col:7 tm_hour 'int'
| |-FieldDecl 0x55643e50b510 <line:136:3, col:7> col:7 tm_mday 'int'
| |-FieldDecl 0x55643e50b578 <line:137:3, col:7> col:7 tm_mon 'int'
| |-FieldDecl 0x55643e50b5e0 <line:138:3, col:7> col:7 tm_year 'int'
| |-FieldDecl 0x55643e50b648 <line:139:3, col:7> col:7 tm_wday 'int'
| |-FieldDecl 0x55643e50b6b0 <line:140:3, col:7> col:7 tm_yday 'int'
| |-FieldDecl 0x55643e50b718 <line:141:3, col:7> col:7 tm_isdst 'int'
| |-FieldDecl 0x55643e50b780 <line:142:3, col:12> col:12 tm_gmtoff 'long'
| `-FieldDecl 0x55643e50b7e8 <line:143:3, col:15> col:15 tm_zone 'const char *'
|-RecordDecl 0x55643e50b838 <line:147:1, line:151:3> line:147:8 struct itimerspec definition
| |-FieldDecl 0x55643e50b908 <line:149:5, col:21> col:21 it_interval 'struct timespec':'struct timespec'
| `-FieldDecl 0x55643e50b978 <line:150:5, col:21> col:21 it_value 'struct timespec':'struct timespec'
|-RecordDecl 0x55643e50ba20 <line:152:1, col:8> col:8 struct sigevent
|-FunctionDecl 0x55643e50bbf0 <line:154:1, col:68> col:16 clock 'clock_t (void)' extern
| `-NoThrowAttr 0x55643e50bc90 <col:45>
|-FunctionDecl 0x55643e50be70 <line:155:1, col:77> col:15 time 'time_t (time_t *)' extern
| |-ParmVarDecl 0x55643e50bd60 <col:21, col:29> col:29 __timer 'time_t *'
| `-NoThrowAttr 0x55643e50bf18 <col:54>
|-FunctionDecl 0x55643e50c118 <line:156:1, line:157:73> line:156:15 difftime 'double (time_t, time_t)' extern
| |-ParmVarDecl 0x55643e50bf80 <col:25, col:32> col:32 __time1 'time_t':'long'
| |-ParmVarDecl 0x55643e50bff8 <col:41, col:48> col:48 __time0 'time_t':'long'
| |-NoThrowAttr 0x55643e50c1c8 <line:157:22>
| `-ConstAttr 0x55643e50c220 <col:63>
|-FunctionDecl 0x55643e50d050 <line:158:1, col:79> col:15 mktime 'time_t (struct tm *)' extern
| |-ParmVarDecl 0x55643e50c318 <col:23, col:34> col:34 __tp 'struct tm *'
| `-NoThrowAttr 0x55643e50d0f8 <col:56>
|-FunctionDecl 0x55643e50d4a0 <line:159:1, line:161:77> line:159:15 strftime 'size_t (char *restrict, size_t, const char *restrict, const struct tm *restrict)' extern
| |-ParmVarDecl 0x55643e50d168 <col:25, col:42> col:42 __s 'char *restrict'
| |-ParmVarDecl 0x55643e50d1e0 <col:47, col:54> col:54 __maxsize 'size_t':'unsigned long'
| |-ParmVarDecl 0x55643e50d260 <line:160:4, col:27> col:27 __format 'const char *restrict'
| |-ParmVarDecl 0x55643e50d358 <line:161:4, col:32> col:32 __tp 'const struct tm *restrict'
| `-NoThrowAttr 0x55643e50d560 <col:54>
|-RecordDecl 0x55643e50d5b8 <line:163:9, line:170:1> line:163:16 struct __locale_struct definition
| |-RecordDecl 0x55643e50d668 parent 0x55643e49de18 <line:165:3, col:10> col:10 struct __locale_data
| |-FieldDecl 0x55643e50d8c8 <col:3, col:37> col:25 __locales 'struct __locale_data *[13]'
| |-FieldDecl 0x55643e50d968 <line:166:3, col:29> col:29 __ctype_b 'const unsigned short *'
| |-FieldDecl 0x55643e50d9d0 <line:167:3, col:14> col:14 __ctype_tolower 'const int *'
| |-FieldDecl 0x55643e50da38 <line:168:3, col:14> col:14 __ctype_toupper 'const int *'
| `-FieldDecl 0x55643e50db28 <line:169:3, col:25> col:15 __names 'const char *[13]'
|-TypedefDecl 0x55643e50dc48 <line:163:1, line:170:4> col:4 referenced __locale_t 'struct __locale_struct *'
| `-PointerType 0x55643e50dbf0 'struct __locale_struct *'
|   `-ElaboratedType 0x55643e50db80 'struct __locale_struct' sugar
|     `-RecordType 0x55643e50d640 'struct __locale_struct'
|       `-Record 0x55643e50d5b8 '__locale_struct'
|-TypedefDecl 0x55643e50dcf8 <line:171:1, col:20> col:20 locale_t '__locale_t':'struct __locale_struct *'
| `-TypedefType 0x55643e50dcc0 '__locale_t' sugar
|   |-Typedef 0x55643e50dc48 '__locale_t'
|   `-PointerType 0x55643e50dbf0 'struct __locale_struct *'
|     `-ElaboratedType 0x55643e50db80 'struct __locale_struct' sugar
|       `-RecordType 0x55643e50d640 'struct __locale_struct'
|         `-Record 0x55643e50d5b8 '__locale_struct'
|-FunctionDecl 0x55643e50f110 <line:172:1, line:175:63> line:172:15 strftime_l 'size_t (char *restrict, size_t, const char *restrict, const struct tm *restrict, __locale_t)' extern
| |-ParmVarDecl 0x55643e50dd68 <col:27, col:44> col:44 __s 'char *restrict'
| |-ParmVarDecl 0x55643e50dde0 <col:49, col:56> col:56 __maxsize 'size_t':'unsigned long'
| |-ParmVarDecl 0x55643e50de60 <line:173:6, col:29> col:29 __format 'const char *restrict'
| |-ParmVarDecl 0x55643e50def0 <line:174:6, col:34> col:34 __tp 'const struct tm *restrict'
| |-ParmVarDecl 0x55643e50df68 <line:175:6, col:17> col:17 __loc '__locale_t':'struct __locale_struct *'
| `-NoThrowAttr 0x55643e50f1d8 <col:40>
|-FunctionDecl 0x55643e50f3c8 <line:177:1, col:89> col:19 gmtime 'struct tm *(const time_t *)' extern
| |-ParmVarDecl 0x55643e50f2a0 <col:27, col:41> col:41 __timer 'const time_t *'
| `-NoThrowAttr 0x55643e50f470 <col:66>
|-FunctionDecl 0x55643e50f580 <line:178:1, col:92> col:19 localtime 'struct tm *(const time_t *)' extern
| |-ParmVarDecl 0x55643e50f4d8 <col:30, col:44> col:44 __timer 'const time_t *'
| `-NoThrowAttr 0x55643e50f628 <col:69>
|-FunctionDecl 0x55643e50f858 <line:180:1, line:181:75> line:180:19 gmtime_r 'struct tm *(const time_t *restrict, struct tm *restrict)' extern
| |-ParmVarDecl 0x55643e50f690 <col:29, col:54> col:54 __timer 'const time_t *restrict'
| |-ParmVarDecl 0x55643e50f720 <line:181:8, col:30> col:30 __tp 'struct tm *restrict'
| `-NoThrowAttr 0x55643e50f908 <col:52>
|-FunctionDecl 0x55643e50fab0 <line:182:1, line:183:78> line:182:19 localtime_r 'struct tm *(const time_t *restrict, struct tm *restrict)' extern
| |-ParmVarDecl 0x55643e50f970 <col:32, col:57> col:57 __timer 'const time_t *restrict'
| |-ParmVarDecl 0x55643e50fa00 <line:183:11, col:33> col:33 __tp 'struct tm *restrict'
| `-NoThrowAttr 0x55643e50fb60 <col:55>
|-FunctionDecl 0x55643e50fcf8 <line:185:1, col:85> col:14 asctime 'char *(const struct tm *)' extern
| |-ParmVarDecl 0x55643e50fbe0 <col:23, col:40> col:40 __tp 'const struct tm *'
| `-NoThrowAttr 0x55643e50fda0 <col:62>
|-FunctionDecl 0x55643e50ff18 <line:186:1, col:83> col:14 ctime 'char *(const time_t *)' extern
| |-ParmVarDecl 0x55643e50fe08 <col:21, col:35> col:35 __timer 'const time_t *'
| `-NoThrowAttr 0x55643e50ffc0 <col:60>
|-FunctionDecl 0x55643e5102b8 <line:188:1, line:189:67> line:188:14 asctime_r 'char *(const struct tm *restrict, char *restrict)' extern
| |-ParmVarDecl 0x55643e510118 <col:25, col:53> col:53 __tp 'const struct tm *restrict'
| |-ParmVarDecl 0x55643e510198 <line:189:4, col:21> col:21 __buf 'char *restrict'
| `-NoThrowAttr 0x55643e510368 <col:44>
|-FunctionDecl 0x55643e510578 <line:190:1, line:191:72> line:190:14 ctime_r 'char *(const time_t *restrict, char *restrict)' extern
| |-ParmVarDecl 0x55643e5103d0 <col:23, col:48> col:48 __timer 'const time_t *restrict'
| |-ParmVarDecl 0x55643e510450 <line:191:9, col:26> col:26 __buf 'char *restrict'
| `-NoThrowAttr 0x55643e510628 <col:49>
|-VarDecl 0x55643e510728 <line:192:1, col:24> col:14 __tzname 'char *[2]' extern
|-VarDecl 0x55643e5107a8 <line:193:1, col:12> col:12 __daylight 'int' extern
|-VarDecl 0x55643e510828 <line:194:1, col:17> col:17 __timezone 'long' extern
|-VarDecl 0x55643e5108f0 <line:195:1, col:22> col:14 tzname 'char *[2]' extern
|-FunctionDecl 0x55643e510a20 <line:196:1, col:65> col:13 tzset 'void (void)' extern
| `-NoThrowAttr 0x55643e510ac0 <col:42>
|-VarDecl 0x55643e510b30 <line:197:1, col:12> col:12 daylight 'int' extern
|-VarDecl 0x55643e510bb0 <line:198:1, col:17> col:17 timezone 'long' extern
|-FunctionDecl 0x55643e510d38 <line:199:1, col:80> col:12 stime 'int (const time_t *)' extern
| |-ParmVarDecl 0x55643e510c28 <col:19, col:33> col:33 __when 'const time_t *'
| `-NoThrowAttr 0x55643e510de0 <col:57>
|-FunctionDecl 0x55643e510ef0 <line:200:1, col:79> col:15 timegm 'time_t (struct tm *)' extern
| |-ParmVarDecl 0x55643e510e60 <col:23, col:34> col:34 __tp 'struct tm *'
| `-NoThrowAttr 0x55643e510f98 <col:56>
|-FunctionDecl 0x55643e5110d0 <line:201:1, col:82> col:15 timelocal 'time_t (struct tm *)' extern
| |-ParmVarDecl 0x55643e511018 <col:26, col:37> col:37 __tp 'struct tm *'
| `-NoThrowAttr 0x55643e511178 <col:59>
|-FunctionDecl 0x55643e511280 <line:202:1, col:99> col:12 dysize 'int (int)' extern
| |-ParmVarDecl 0x55643e5111e8 <col:20, col:24> col:24 __year 'int'
| |-NoThrowAttr 0x55643e511328 <col:48>
| `-ConstAttr 0x55643e511380 <col:89>
|-FunctionDecl 0x55643e5115e8 <line:203:1, line:204:37> line:203:12 nanosleep 'int (const struct timespec *, struct timespec *)' extern
| |-ParmVarDecl 0x55643e511438 <col:23, col:46> col:46 __requested_time 'const struct timespec *'
| `-ParmVarDecl 0x55643e5114c8 <line:204:9, col:26> col:26 __remaining 'struct timespec *'
|-FunctionDecl 0x55643e511848 <line:205:1, col:111> col:12 clock_getres 'int (clockid_t, struct timespec *)' extern
| |-ParmVarDecl 0x55643e5116d8 <col:26, col:36> col:36 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x55643e511768 <col:48, col:65> col:65 __res 'struct timespec *'
| `-NoThrowAttr 0x55643e5118f8 <col:88>
|-FunctionDecl 0x55643e511a90 <line:206:1, col:111> col:12 clock_gettime 'int (clockid_t, struct timespec *)' extern
| |-ParmVarDecl 0x55643e511960 <col:27, col:37> col:37 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x55643e5119f0 <col:49, col:66> col:66 __tp 'struct timespec *'
| `-NoThrowAttr 0x55643e511b40 <col:88>
|-FunctionDecl 0x55643e511d58 <line:207:1, line:208:45> line:207:12 clock_settime 'int (clockid_t, const struct timespec *)' extern
| |-ParmVarDecl 0x55643e511ba8 <col:27, col:37> col:37 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x55643e511c38 <col:49, col:72> col:72 __tp 'const struct timespec *'
| `-NoThrowAttr 0x55643e511e08 <line:208:22>
|-FunctionDecl 0x55643e512178 <line:209:1, line:211:30> line:209:12 clock_nanosleep 'int (clockid_t, int, const struct timespec *, struct timespec *)' extern
| |-ParmVarDecl 0x55643e511e70 <col:29, col:39> col:39 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x55643e511ef0 <col:51, col:55> col:55 __flags 'int'
| |-ParmVarDecl 0x55643e511f80 <line:210:8, col:31> col:31 __req 'const struct timespec *'
| `-ParmVarDecl 0x55643e512010 <line:211:8, col:25> col:25 __rem 'struct timespec *'
|-FunctionDecl 0x55643e512478 <line:212:1, col:108> col:12 clock_getcpuclockid 'int (pid_t, clockid_t *)' extern
| |-ParmVarDecl 0x55643e512278 <col:33, col:39> col:39 __pid 'pid_t':'int'
| |-ParmVarDecl 0x55643e512350 <col:46, col:57> col:57 __clock_id 'clockid_t *'
| `-NoThrowAttr 0x55643e512528 <col:85>
|-FunctionDecl 0x55643e512918 <line:213:1, line:215:75> line:213:12 timer_create 'int (clockid_t, struct sigevent *restrict, timer_t *restrict)' extern
| |-ParmVarDecl 0x55643e512590 <col:26, col:36> col:36 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x55643e5126c8 <line:214:5, col:33> col:33 __evp 'struct sigevent *restrict'
| |-ParmVarDecl 0x55643e5127d0 <line:215:5, col:25> col:25 __timerid 'timer_t *restrict'
| `-NoThrowAttr 0x55643e5129d0 <col:52>
|-FunctionDecl 0x55643e512b48 <line:216:1, col:84> col:12 timer_delete 'int (timer_t)' extern
| |-ParmVarDecl 0x55643e512a38 <col:26, col:34> col:34 __timerid 'timer_t':'void *'
| `-NoThrowAttr 0x55643e512bf0 <col:61>
|-FunctionDecl 0x55643e5130f0 <line:217:1, line:219:85> line:217:12 timer_settime 'int (timer_t, int, const struct itimerspec *restrict, struct itimerspec *restrict)' extern
| |-ParmVarDecl 0x55643e512c58 <col:27, col:35> col:35 __timerid 'timer_t':'void *'
| |-ParmVarDecl 0x55643e512cd8 <col:46, col:50> col:50 __flags 'int'
| |-ParmVarDecl 0x55643e512e08 <line:218:6, col:42> col:42 __value 'const struct itimerspec *restrict'
| |-ParmVarDecl 0x55643e512ef8 <line:219:6, col:36> col:36 __ovalue 'struct itimerspec *restrict'
| `-NoThrowAttr 0x55643e5131b0 <col:62>
|-FunctionDecl 0x55643e5133c8 <line:220:1, line:221:45> line:220:12 timer_gettime 'int (timer_t, struct itimerspec *)' extern
| |-ParmVarDecl 0x55643e513218 <col:27, col:35> col:35 __timerid 'timer_t':'void *'
| |-ParmVarDecl 0x55643e5132a8 <col:46, col:65> col:65 __value 'struct itimerspec *'
| `-NoThrowAttr 0x55643e513478 <line:221:22>
|-FunctionDecl 0x55643e513578 <line:222:1, col:88> col:12 timer_getoverrun 'int (timer_t)' extern
| |-ParmVarDecl 0x55643e5134e0 <col:30, col:38> col:38 __timerid 'timer_t':'void *'
| `-NoThrowAttr 0x55643e513620 <col:65>
|-TypedefDecl 0x55643e513690 <line:224:1, col:27> col:27 referenced pthread_t 'unsigned long'
| `-BuiltinType 0x55643e49dfd0 'unsigned long'
|-RecordDecl 0x55643e5136e8 <line:225:1, line:229:1> line:225:7 union pthread_attr_t definition
| |-FieldDecl 0x55643e513830 <line:227:3, col:17> col:8 __size 'char [56]'
| `-FieldDecl 0x55643e513898 <line:228:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x55643e513948 <line:230:1, col:30> col:30 referenced pthread_attr_t 'union pthread_attr_t':'union pthread_attr_t'
| `-ElaboratedType 0x55643e5138f0 'union pthread_attr_t' sugar
|   `-RecordType 0x55643e513770 'union pthread_attr_t'
|     `-Record 0x55643e5136e8 'pthread_attr_t'
|-RecordDecl 0x55643e5139a0 <line:231:9, line:235:1> line:231:16 struct __pthread_internal_list definition
| |-FieldDecl 0x55643e513b18 <line:233:3, col:35> col:35 __prev 'struct __pthread_internal_list *'
| `-FieldDecl 0x55643e513b90 <line:234:3, col:35> col:35 __next 'struct __pthread_internal_list *'
|-TypedefDecl 0x55643e513c40 <line:231:1, line:235:3> col:3 referenced __pthread_list_t 'struct __pthread_internal_list':'struct __pthread_internal_list'
| `-ElaboratedType 0x55643e513be0 'struct __pthread_internal_list' sugar
|   `-RecordType 0x55643e513a20 'struct __pthread_internal_list'
|     `-Record 0x55643e5139a0 '__pthread_internal_list'
|-RecordDecl 0x55643e513cb0 <line:236:9, line:250:1> line:236:9 union definition
| |-RecordDecl 0x55643e513d58 parent 0x55643e49de18 <line:238:3, line:247:3> line:238:10 struct __pthread_mutex_s definition
| | |-FieldDecl 0x55643e513e30 <line:240:5, col:9> col:9 __lock 'int'
| | |-FieldDecl 0x55643e513e98 <line:241:5, col:18> col:18 __count 'unsigned int'
| | |-FieldDecl 0x55643e513f00 <line:242:5, col:9> col:9 __owner 'int'
| | |-FieldDecl 0x55643e513f68 <line:243:5, col:18> col:18 __nusers 'unsigned int'
| | |-FieldDecl 0x55643e513fd0 <line:244:5, col:9> col:9 __kind 'int'
| | |-FieldDecl 0x55643e514038 <line:245:5, col:9> col:9 __spins 'int'
| | `-FieldDecl 0x55643e518110 <line:246:5, col:22> col:22 __list '__pthread_list_t':'struct __pthread_internal_list'
| |-FieldDecl 0x55643e5181c0 <line:238:3, line:247:5> col:5 __data 'struct __pthread_mutex_s':'struct __pthread_mutex_s'
| |-FieldDecl 0x55643e5182b0 <line:248:3, col:17> col:8 __size 'char [40]'
| `-FieldDecl 0x55643e518318 <line:249:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x55643e5184a0 <line:236:1, line:250:3> col:3 referenced pthread_mutex_t 'union pthread_mutex_t':'pthread_mutex_t'
| `-ElaboratedType 0x55643e518440 'union pthread_mutex_t' sugar
|   `-RecordType 0x55643e513d30 'pthread_mutex_t'
|     `-Record 0x55643e513cb0 ''
|-RecordDecl 0x55643e518510 <line:251:9, line:255:1> line:251:9 union definition
| |-FieldDecl 0x55643e518650 <line:253:3, col:16> col:8 __size 'char [4]'
| `-FieldDecl 0x55643e5186b8 <line:254:3, col:7> col:7 __align 'int'
|-TypedefDecl 0x55643e518770 <line:251:1, line:255:3> col:3 referenced pthread_mutexattr_t 'union pthread_mutexattr_t':'pthread_mutexattr_t'
| `-ElaboratedType 0x55643e518710 'union pthread_mutexattr_t' sugar
|   `-RecordType 0x55643e518590 'pthread_mutexattr_t'
|     `-Record 0x55643e518510 ''
|-RecordDecl 0x55643e5187e0 <line:256:9, line:271:1> line:256:9 union definition
| |-RecordDecl 0x55643e518888 <line:258:3, line:268:3> line:258:3 struct definition
| | |-FieldDecl 0x55643e518950 <line:260:5, col:9> col:9 __lock 'int'
| | |-FieldDecl 0x55643e5189b8 <line:261:5, col:18> col:18 __futex 'unsigned int'
| | |-FieldDecl 0x55643e518a20 <line:262:19, col:42> col:42 __total_seq 'unsigned long long'
| | |-FieldDecl 0x55643e518a88 <line:263:19, col:42> col:42 __wakeup_seq 'unsigned long long'
| | |-FieldDecl 0x55643e518af0 <line:264:19, col:42> col:42 __woken_seq 'unsigned long long'
| | |-FieldDecl 0x55643e518b58 <line:265:5, col:11> col:11 __mutex 'void *'
| | |-FieldDecl 0x55643e518bc0 <line:266:5, col:18> col:18 __nwaiters 'unsigned int'
| | `-FieldDecl 0x55643e518c28 <line:267:5, col:18> col:18 __broadcast_seq 'unsigned int'
| |-FieldDecl 0x55643e518ce0 <line:258:3, line:268:5> col:5 __data 'struct (anonymous struct at ./split_0/safe021_pso.opt_false-unreach-call.i:258:3)':'struct pthread_cond_t::(anonymous at ./split_0/safe021_pso.opt_false-unreach-call.i:258:3)'
| |-FieldDecl 0x55643e518dd0 <line:269:3, col:17> col:8 __size 'char [48]'
| `-FieldDecl 0x55643e518e38 <line:270:17, col:31> col:31 __align 'long long'
|-TypedefDecl 0x55643e518f70 <line:256:1, line:271:3> col:3 referenced pthread_cond_t 'union pthread_cond_t':'pthread_cond_t'
| `-ElaboratedType 0x55643e518f10 'union pthread_cond_t' sugar
|   `-RecordType 0x55643e518860 'pthread_cond_t'
|     `-Record 0x55643e5187e0 ''
|-RecordDecl 0x55643e518fe0 <line:272:9, line:276:1> line:272:9 union definition
| |-FieldDecl 0x55643e51a130 <line:274:3, col:16> col:8 __size 'char [4]'
| `-FieldDecl 0x55643e51a198 <line:275:3, col:7> col:7 __align 'int'
|-TypedefDecl 0x55643e51a250 <line:272:1, line:276:3> col:3 referenced pthread_condattr_t 'union pthread_condattr_t':'pthread_condattr_t'
| `-ElaboratedType 0x55643e51a1f0 'union pthread_condattr_t' sugar
|   `-RecordType 0x55643e519060 'pthread_condattr_t'
|     `-Record 0x55643e518fe0 ''
|-TypedefDecl 0x55643e51a2d8 <line:277:1, col:22> col:22 referenced pthread_key_t 'unsigned int'
| `-BuiltinType 0x55643e49dfb0 'unsigned int'
|-TypedefDecl 0x55643e51a348 <line:278:1, col:13> col:13 referenced pthread_once_t 'int'
| `-BuiltinType 0x55643e49df10 'int'
|-RecordDecl 0x55643e51a3a0 <line:279:9, line:297:1> line:279:9 union definition
| |-RecordDecl 0x55643e51a448 <line:281:3, line:294:3> line:281:3 struct definition
| | |-FieldDecl 0x55643e51a510 <line:283:5, col:9> col:9 __lock 'int'
| | |-FieldDecl 0x55643e51a578 <line:284:5, col:18> col:18 __nr_readers 'unsigned int'
| | |-FieldDecl 0x55643e51a5e0 <line:285:5, col:18> col:18 __readers_wakeup 'unsigned int'
| | |-FieldDecl 0x55643e51a648 <line:286:5, col:18> col:18 __writer_wakeup 'unsigned int'
| | |-FieldDecl 0x55643e51a6b0 <line:287:5, col:18> col:18 __nr_readers_queued 'unsigned int'
| | |-FieldDecl 0x55643e51a718 <line:288:5, col:18> col:18 __nr_writers_queued 'unsigned int'
| | |-FieldDecl 0x55643e51a780 <line:289:5, col:9> col:9 __writer 'int'
| | |-FieldDecl 0x55643e51a7e8 <line:290:5, col:9> col:9 __shared 'int'
| | |-FieldDecl 0x55643e51a850 <line:291:5, col:23> col:23 __pad1 'unsigned long'
| | |-FieldDecl 0x55643e51a8b8 <line:292:5, col:23> col:23 __pad2 'unsigned long'
| | `-FieldDecl 0x55643e51a920 <line:293:5, col:18> col:18 __flags 'unsigned int'
| |-FieldDecl 0x55643e51a9d0 <line:281:3, line:294:5> col:5 __data 'struct (anonymous struct at ./split_0/safe021_pso.opt_false-unreach-call.i:281:3)':'struct pthread_rwlock_t::(anonymous at ./split_0/safe021_pso.opt_false-unreach-call.i:281:3)'
| |-FieldDecl 0x55643e51aa78 <line:295:3, col:17> col:8 __size 'char [56]'
| `-FieldDecl 0x55643e51aae0 <line:296:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x55643e51ac30 <line:279:1, line:297:3> col:3 referenced pthread_rwlock_t 'union pthread_rwlock_t':'pthread_rwlock_t'
| `-ElaboratedType 0x55643e51abd0 'union pthread_rwlock_t' sugar
|   `-RecordType 0x55643e51a420 'pthread_rwlock_t'
|     `-Record 0x55643e51a3a0 ''
|-RecordDecl 0x55643e51aca0 <line:298:9, line:302:1> line:298:9 union definition
| |-FieldDecl 0x55643e51ade0 <line:300:3, col:16> col:8 __size 'char [8]'
| `-FieldDecl 0x55643e51ae48 <line:301:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x55643e51af00 <line:298:1, line:302:3> col:3 referenced pthread_rwlockattr_t 'union pthread_rwlockattr_t':'pthread_rwlockattr_t'
| `-ElaboratedType 0x55643e51aea0 'union pthread_rwlockattr_t' sugar
|   `-RecordType 0x55643e51ad20 'pthread_rwlockattr_t'
|     `-Record 0x55643e51aca0 ''
|-TypedefDecl 0x55643e51af88 <line:303:1, col:22> col:22 referenced pthread_spinlock_t 'volatile int'
| `-QualType 0x55643e49df14 'volatile int' volatile
|   `-BuiltinType 0x55643e49df10 'int'
|-RecordDecl 0x55643e51afe0 <line:304:9, line:308:1> line:304:9 union definition
| |-FieldDecl 0x55643e51c140 <line:306:3, col:17> col:8 __size 'char [32]'
| `-FieldDecl 0x55643e51c1a8 <line:307:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x55643e51c260 <line:304:1, line:308:3> col:3 referenced pthread_barrier_t 'union pthread_barrier_t':'pthread_barrier_t'
| `-ElaboratedType 0x55643e51c200 'union pthread_barrier_t' sugar
|   `-RecordType 0x55643e51b060 'pthread_barrier_t'
|     `-Record 0x55643e51afe0 ''
|-RecordDecl 0x55643e51c2d0 <line:309:9, line:313:1> line:309:9 union definition
| |-FieldDecl 0x55643e51c3d0 <line:311:3, col:16> col:8 __size 'char [4]'
| `-FieldDecl 0x55643e51c438 <line:312:3, col:7> col:7 __align 'int'
|-TypedefDecl 0x55643e51c4f0 <line:309:1, line:313:3> col:3 referenced pthread_barrierattr_t 'union pthread_barrierattr_t':'pthread_barrierattr_t'
| `-ElaboratedType 0x55643e51c490 'union pthread_barrierattr_t' sugar
|   `-RecordType 0x55643e51c350 'pthread_barrierattr_t'
|     `-Record 0x55643e51c2d0 ''
|-TypedefDecl 0x55643e51c608 <line:314:1, col:29> col:18 referenced __jmp_buf 'long [8]'
| `-ConstantArrayType 0x55643e51c5a0 'long [8]' 8 
|   `-BuiltinType 0x55643e49df30 'long'
|-EnumDecl 0x55643e51c660 <line:315:1, line:319:1> line:315:1
| |-EnumConstantDecl 0x55643e51c728 <line:317:3> col:3 PTHREAD_CREATE_JOINABLE 'int'
| `-EnumConstantDecl 0x55643e51c778 <line:318:3> col:3 PTHREAD_CREATE_DETACHED 'int'
|-EnumDecl 0x55643e51c7c8 <line:320:1, line:331:1> line:320:1
| |-EnumConstantDecl 0x55643e51c898 <line:322:3> col:3 referenced PTHREAD_MUTEX_TIMED_NP 'int'
| |-EnumConstantDecl 0x55643e51c8e8 <line:323:3> col:3 referenced PTHREAD_MUTEX_RECURSIVE_NP 'int'
| |-EnumConstantDecl 0x55643e51c938 <line:324:3> col:3 referenced PTHREAD_MUTEX_ERRORCHECK_NP 'int'
| |-EnumConstantDecl 0x55643e51c988 <line:325:3> col:3 PTHREAD_MUTEX_ADAPTIVE_NP 'int'
| |-EnumConstantDecl 0x55643e51ca10 <line:327:3, col:26> col:3 referenced PTHREAD_MUTEX_NORMAL 'int'
| | `-ConstantExpr 0x55643e51c9f8 <col:26> 'int'
| |   `-DeclRefExpr 0x55643e51c9d8 <col:26> 'int' EnumConstant 0x55643e51c898 'PTHREAD_MUTEX_TIMED_NP' 'int'
| |-EnumConstantDecl 0x55643e51ca98 <line:328:3, col:29> col:3 PTHREAD_MUTEX_RECURSIVE 'int'
| | `-ConstantExpr 0x55643e51ca80 <col:29> 'int'
| |   `-DeclRefExpr 0x55643e51ca60 <col:29> 'int' EnumConstant 0x55643e51c8e8 'PTHREAD_MUTEX_RECURSIVE_NP' 'int'
| |-EnumConstantDecl 0x55643e51cb20 <line:329:3, col:30> col:3 PTHREAD_MUTEX_ERRORCHECK 'int'
| | `-ConstantExpr 0x55643e51cb08 <col:30> 'int'
| |   `-DeclRefExpr 0x55643e51cae8 <col:30> 'int' EnumConstant 0x55643e51c938 'PTHREAD_MUTEX_ERRORCHECK_NP' 'int'
| `-EnumConstantDecl 0x55643e51cba8 <line:330:3, col:27> col:3 PTHREAD_MUTEX_DEFAULT 'int'
|   `-ConstantExpr 0x55643e51cb90 <col:27> 'int'
|     `-DeclRefExpr 0x55643e51cb70 <col:27> 'int' EnumConstant 0x55643e51ca10 'PTHREAD_MUTEX_NORMAL' 'int'
|-EnumDecl 0x55643e51cbf8 <line:332:1, line:338:1> line:332:1
| |-EnumConstantDecl 0x55643e51ccc8 <line:334:3> col:3 referenced PTHREAD_MUTEX_STALLED 'int'
| |-EnumConstantDecl 0x55643e51cd50 <line:335:3, col:30> col:3 PTHREAD_MUTEX_STALLED_NP 'int'
| | `-ConstantExpr 0x55643e51cd38 <col:30> 'int'
| |   `-DeclRefExpr 0x55643e51cd18 <col:30> 'int' EnumConstant 0x55643e51ccc8 'PTHREAD_MUTEX_STALLED' 'int'
| |-EnumConstantDecl 0x55643e51cda0 <line:336:3> col:3 referenced PTHREAD_MUTEX_ROBUST 'int'
| `-EnumConstantDecl 0x55643e51ce28 <line:337:3, col:29> col:3 PTHREAD_MUTEX_ROBUST_NP 'int'
|   `-ConstantExpr 0x55643e51ce10 <col:29> 'int'
|     `-DeclRefExpr 0x55643e51cdf0 <col:29> 'int' EnumConstant 0x55643e51cda0 'PTHREAD_MUTEX_ROBUST' 'int'
|-EnumDecl 0x55643e51ce78 <line:339:1, line:344:1> line:339:1
| |-EnumConstantDecl 0x55643e51cf48 <line:341:3> col:3 PTHREAD_PRIO_NONE 'int'
| |-EnumConstantDecl 0x55643e51cf98 <line:342:3> col:3 PTHREAD_PRIO_INHERIT 'int'
| `-EnumConstantDecl 0x55643e51cfe8 <line:343:3> col:3 PTHREAD_PRIO_PROTECT 'int'
|-EnumDecl 0x55643e51d038 <line:345:1, line:351:1> line:345:1
| |-EnumConstantDecl 0x55643e51d150 <line:347:3> col:3 referenced PTHREAD_RWLOCK_PREFER_READER_NP 'int'
| |-EnumConstantDecl 0x55643e51d1a0 <line:348:3> col:3 PTHREAD_RWLOCK_PREFER_WRITER_NP 'int'
| |-EnumConstantDecl 0x55643e51d1f0 <line:349:3> col:3 PTHREAD_RWLOCK_PREFER_WRITER_NONRECURSIVE_NP 'int'
| `-EnumConstantDecl 0x55643e51d278 <line:350:3, col:31> col:3 PTHREAD_RWLOCK_DEFAULT_NP 'int'
|   `-ConstantExpr 0x55643e51d260 <col:31> 'int'
|     `-DeclRefExpr 0x55643e51d240 <col:31> 'int' EnumConstant 0x55643e51d150 'PTHREAD_RWLOCK_PREFER_READER_NP' 'int'
|-EnumDecl 0x55643e51d2c8 <line:352:1, line:356:1> line:352:1
| |-EnumConstantDecl 0x55643e51d398 <line:354:3> col:3 PTHREAD_INHERIT_SCHED 'int'
| `-EnumConstantDecl 0x55643e51d3e8 <line:355:3> col:3 PTHREAD_EXPLICIT_SCHED 'int'
|-EnumDecl 0x55643e51d438 <line:357:1, line:361:1> line:357:1
| |-EnumConstantDecl 0x55643e51d508 <line:359:3> col:3 PTHREAD_SCOPE_SYSTEM 'int'
| `-EnumConstantDecl 0x55643e51d558 <line:360:3> col:3 PTHREAD_SCOPE_PROCESS 'int'
|-EnumDecl 0x55643e51d5a8 <line:362:1, line:366:1> line:362:1
| |-EnumConstantDecl 0x55643e51d678 <line:364:3> col:3 PTHREAD_PROCESS_PRIVATE 'int'
| `-EnumConstantDecl 0x55643e51d6c8 <line:365:3> col:3 PTHREAD_PROCESS_SHARED 'int'
|-RecordDecl 0x55643e51d718 <line:367:1, line:373:1> line:367:8 struct _pthread_cleanup_buffer definition
| |-FieldDecl 0x55643e51d958 <line:369:3, col:28> col:10 __routine 'void (*)(void *)'
| |-FieldDecl 0x55643e51d9c0 <line:370:3, col:9> col:9 __arg 'void *'
| |-FieldDecl 0x55643e51da28 <line:371:3, col:7> col:7 __canceltype 'int'
| `-FieldDecl 0x55643e51db48 <line:372:3, col:35> col:35 __prev 'struct _pthread_cleanup_buffer *'
|-EnumDecl 0x55643e51db98 <line:374:1, line:378:1> line:374:1
| |-EnumConstantDecl 0x55643e51dc68 <line:376:3> col:3 PTHREAD_CANCEL_ENABLE 'int'
| `-EnumConstantDecl 0x55643e51dcb8 <line:377:3> col:3 PTHREAD_CANCEL_DISABLE 'int'
|-EnumDecl 0x55643e51dd08 <line:379:1, line:383:1> line:379:1
| |-EnumConstantDecl 0x55643e51ddd8 <line:381:3> col:3 PTHREAD_CANCEL_DEFERRED 'int'
| `-EnumConstantDecl 0x55643e51de28 <line:382:3> col:3 PTHREAD_CANCEL_ASYNCHRONOUS 'int'
|-FunctionDecl 0x55643e51e488 <line:385:1, line:388:96> line:385:12 used pthread_create 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' extern
| |-ParmVarDecl 0x55643e51df20 <col:28, col:50> col:50 __newthread 'pthread_t *restrict'
| |-ParmVarDecl 0x55643e51e030 <line:386:7, col:40> col:40 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x55643e51e270 <line:387:7, col:39> col:15 __start_routine 'void *(*)(void *)'
| |-ParmVarDecl 0x55643e51e2f0 <line:388:7, col:24> col:24 __arg 'void *restrict'
| |-NoThrowAttr 0x55643e51e548 <col:47>
| |-NonNullAttr 0x55643e51e5a0 <col:77, col:94> 1 3
| `-CallbackAttr 0x55643e51e5d8 <line:385:12> Implicit 2 3
|-FunctionDecl 0x55643e51e700 <line:389:1, col:72> col:13 pthread_exit 'void (void *) __attribute__((noreturn))' extern
| `-ParmVarDecl 0x55643e51e630 <col:27, col:33> col:33 __retval 'void *'
|-FunctionDecl 0x55643e51e958 <line:390:1, col:64> col:12 pthread_join 'int (pthread_t, void **)' extern
| |-ParmVarDecl 0x55643e51e7b8 <col:26, col:36> col:36 __th 'pthread_t':'unsigned long'
| `-ParmVarDecl 0x55643e51e838 <col:42, col:49> col:49 __thread_return 'void **'
|-FunctionDecl 0x55643e51eb28 <line:391:1, col:83> col:12 pthread_detach 'int (pthread_t)' extern
| |-ParmVarDecl 0x55643e51ea18 <col:28, col:38> col:38 __th 'pthread_t':'unsigned long'
| `-NoThrowAttr 0x55643e51ebd0 <col:60>
|-FunctionDecl 0x55643e51ed20 <line:392:1, col:105> col:18 pthread_self 'pthread_t (void)' extern
| |-NoThrowAttr 0x55643e51edc0 <col:54>
| `-ConstAttr 0x55643e51ee18 <col:95>
|-FunctionDecl 0x55643e51efe8 <line:393:1, line:394:70> line:393:12 pthread_equal 'int (pthread_t, pthread_t)' extern
| |-ParmVarDecl 0x55643e51ee50 <col:27, col:37> col:37 __thread1 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x55643e51eec8 <col:48, col:58> col:58 __thread2 'pthread_t':'unsigned long'
| |-NoThrowAttr 0x55643e51f098 <line:394:19>
| `-ConstAttr 0x55643e51f0f0 <col:60>
|-FunctionDecl 0x55643e520b08 <line:395:1, col:128> col:12 pthread_attr_init 'int (pthread_attr_t *)' extern
| |-ParmVarDecl 0x55643e5209d0 <col:31, col:47> col:47 __attr 'pthread_attr_t *'
| |-NoThrowAttr 0x55643e520bb0 <col:71>
| `-NonNullAttr 0x55643e520c08 <col:112, col:126> 1
|-FunctionDecl 0x55643e520d10 <line:396:1, line:397:79> line:396:12 pthread_attr_destroy 'int (pthread_attr_t *)' extern
| |-ParmVarDecl 0x55643e520c58 <col:34, col:50> col:50 __attr 'pthread_attr_t *'
| |-NoThrowAttr 0x55643e520db8 <line:397:22>
| `-NonNullAttr 0x55643e520e10 <col:63, col:77> 1
|-FunctionDecl 0x55643e521038 <line:398:1, line:400:82> line:398:12 pthread_attr_getdetachstate 'int (const pthread_attr_t *, int *)' extern
| |-ParmVarDecl 0x55643e520e58 <col:41, col:63> col:63 __attr 'const pthread_attr_t *'
| |-ParmVarDecl 0x55643e520ed8 <line:399:6, col:11> col:11 __detachstate 'int *'
| |-NoThrowAttr 0x55643e5210e8 <line:400:22>
| `-NonNullAttr 0x55643e521140 <col:63, col:80> 1 2
|-FunctionDecl 0x55643e521348 <line:401:1, line:403:79> line:401:12 pthread_attr_setdetachstate 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x55643e521188 <col:41, col:57> col:57 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x55643e521208 <line:402:6, col:10> col:10 __detachstate 'int'
| |-NoThrowAttr 0x55643e5213f8 <line:403:22>
| `-NonNullAttr 0x55643e521450 <col:63, col:77> 1
|-FunctionDecl 0x55643e5216a8 <line:404:1, line:406:82> line:404:12 pthread_attr_getguardsize 'int (const pthread_attr_t *, size_t *)' extern
| |-ParmVarDecl 0x55643e521498 <col:39, col:61> col:61 __attr 'const pthread_attr_t *'
| |-ParmVarDecl 0x55643e521540 <line:405:11, col:19> col:19 __guardsize 'size_t *'
| |-NoThrowAttr 0x55643e521758 <line:406:22>
| `-NonNullAttr 0x55643e5217b0 <col:63, col:80> 1 2
|-FunctionDecl 0x55643e5229e8 <line:407:1, line:409:79> line:407:12 pthread_attr_setguardsize 'int (pthread_attr_t *, size_t)' extern
| |-ParmVarDecl 0x55643e5217f8 <col:39, col:55> col:55 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x55643e521870 <line:408:11, col:18> col:18 __guardsize 'size_t':'unsigned long'
| |-NoThrowAttr 0x55643e522a98 <line:409:22>
| `-NonNullAttr 0x55643e522af0 <col:63, col:77> 1
|-FunctionDecl 0x55643e522d28 <line:410:1, line:412:82> line:410:12 pthread_attr_getschedparam 'int (const pthread_attr_t *restrict, struct sched_param *restrict)' extern
| |-ParmVarDecl 0x55643e522b38 <col:40, col:73> col:73 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x55643e522bc8 <line:411:12, col:43> col:43 __param 'struct sched_param *restrict'
| |-NoThrowAttr 0x55643e522dd8 <line:412:22>
| `-NonNullAttr 0x55643e522e30 <col:63, col:80> 1 2
|-FunctionDecl 0x55643e523068 <line:413:1, line:415:97> line:413:12 pthread_attr_setschedparam 'int (pthread_attr_t *restrict, const struct sched_param *restrict)' extern
| |-ParmVarDecl 0x55643e522e78 <col:40, col:67> col:67 __attr 'pthread_attr_t *restrict'
| |-ParmVarDecl 0x55643e522f08 <line:414:12, line:415:12> col:12 __param 'const struct sched_param *restrict'
| |-NoThrowAttr 0x55643e523118 <col:37>
| `-NonNullAttr 0x55643e523170 <col:78, col:95> 1 2
|-FunctionDecl 0x55643e523358 <line:416:1, line:418:82> line:416:12 pthread_attr_getschedpolicy 'int (const pthread_attr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x55643e5231b8 <col:41, line:417:6> col:6 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x55643e523238 <col:14, col:30> col:30 __policy 'int *restrict'
| |-NoThrowAttr 0x55643e523408 <line:418:22>
| `-NonNullAttr 0x55643e523460 <col:63, col:80> 1 2
|-FunctionDecl 0x55643e5235e8 <line:419:1, line:420:79> line:419:12 pthread_attr_setschedpolicy 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x55643e5234a8 <col:41, col:57> col:57 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x55643e523528 <col:65, col:69> col:69 __policy 'int'
| |-NoThrowAttr 0x55643e523698 <line:420:22>
| `-NonNullAttr 0x55643e5236f0 <col:63, col:77> 1
|-FunctionDecl 0x55643e523898 <line:421:1, line:423:82> line:421:12 pthread_attr_getinheritsched 'int (const pthread_attr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x55643e523738 <col:42, line:422:7> col:7 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x55643e5237b8 <col:15, col:31> col:31 __inherit 'int *restrict'
| |-NoThrowAttr 0x55643e523948 <line:423:22>
| `-NonNullAttr 0x55643e5239c0 <col:63, col:80> 1 2
|-FunctionDecl 0x55643e523b48 <line:424:1, line:426:79> line:424:12 pthread_attr_setinheritsched 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x55643e523a08 <col:42, col:58> col:58 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x55643e523a88 <line:425:7, col:11> col:11 __inherit 'int'
| |-NoThrowAttr 0x55643e523bf8 <line:426:22>
| `-NonNullAttr 0x55643e523c50 <col:63, col:77> 1
|-FunctionDecl 0x55643e523df8 <line:427:1, line:429:82> line:427:12 pthread_attr_getscope 'int (const pthread_attr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x55643e523c98 <col:35, col:68> col:68 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x55643e523d18 <line:428:7, col:23> col:23 __scope 'int *restrict'
| |-NoThrowAttr 0x55643e523ea8 <line:429:22>
| `-NonNullAttr 0x55643e523f00 <col:63, col:80> 1 2
|-FunctionDecl 0x55643e524088 <line:430:1, line:431:79> line:430:12 pthread_attr_setscope 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x55643e523f48 <col:35, col:51> col:51 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x55643e523fc8 <col:59, col:63> col:63 __scope 'int'
| |-NoThrowAttr 0x55643e524138 <line:431:22>
| `-NonNullAttr 0x55643e524190 <col:63, col:77> 1
|-FunctionDecl 0x55643e5243b8 <line:432:1, line:434:115> line:432:12 pthread_attr_getstackaddr 'int (const pthread_attr_t *restrict, void **restrict)' extern
| |-ParmVarDecl 0x55643e5241d8 <col:39, line:433:11> col:11 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x55643e524258 <col:19, col:37> col:37 __stackaddr 'void **restrict'
| |-NoThrowAttr 0x55643e524468 <line:434:22>
| |-NonNullAttr 0x55643e5244c0 <col:63, col:80> 1 2
| `-DeprecatedAttr 0x55643e5244f8 <col:100> "" ""
|-FunctionDecl 0x55643e524708 <line:435:1, line:437:112> line:435:12 pthread_attr_setstackaddr 'int (pthread_attr_t *, void *)' extern
| |-ParmVarDecl 0x55643e524548 <col:39, col:55> col:55 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x55643e5245c8 <line:436:11, col:17> col:17 __stackaddr 'void *'
| |-NoThrowAttr 0x55643e5247b8 <line:437:22>
| |-NonNullAttr 0x55643e524810 <col:63, col:77> 1
| `-DeprecatedAttr 0x55643e524848 <col:97> "" ""
|-FunctionDecl 0x55643e524a48 <line:438:1, line:440:82> line:438:12 pthread_attr_getstacksize 'int (const pthread_attr_t *restrict, size_t *restrict)' extern
| |-ParmVarDecl 0x55643e524898 <col:39, line:439:11> col:11 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x55643e524910 <col:19, col:38> col:38 __stacksize 'size_t *restrict'
| |-NoThrowAttr 0x55643e524af8 <line:440:22>
| `-NonNullAttr 0x55643e524b50 <col:63, col:80> 1 2
|-FunctionDecl 0x55643e524cd0 <line:441:1, line:443:79> line:441:12 pthread_attr_setstacksize 'int (pthread_attr_t *, size_t)' extern
| |-ParmVarDecl 0x55643e524b98 <col:39, col:55> col:55 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x55643e524c10 <line:442:11, col:18> col:18 __stacksize 'size_t':'unsigned long'
| |-NoThrowAttr 0x55643e524d80 <line:443:22>
| `-NonNullAttr 0x55643e524dd8 <col:63, col:77> 1
|-FunctionDecl 0x55643e5250c8 <line:444:1, line:447:85> line:444:12 pthread_attr_getstack 'int (const pthread_attr_t *restrict, void **restrict, size_t *restrict)' extern
| |-ParmVarDecl 0x55643e524e28 <col:35, col:68> col:68 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x55643e524ea8 <line:445:7, col:25> col:25 __stackaddr 'void **restrict'
| |-ParmVarDecl 0x55643e524f20 <line:446:7, col:26> col:26 __stacksize 'size_t *restrict'
| |-NoThrowAttr 0x55643e525180 <line:447:22>
| `-NonNullAttr 0x55643e5251d8 <col:63, col:83> 1 2 3
|-FunctionDecl 0x55643e525488 <line:448:1, line:449:100> line:448:12 pthread_attr_setstack 'int (pthread_attr_t *, void *, size_t)' extern
| |-ParmVarDecl 0x55643e525230 <col:35, col:51> col:51 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x55643e5252b0 <col:59, col:65> col:65 __stackaddr 'void *'
| |-ParmVarDecl 0x55643e525328 <line:449:7, col:14> col:14 __stacksize 'size_t':'unsigned long'
| |-NoThrowAttr 0x55643e525540 <col:43>
| `-NonNullAttr 0x55643e525598 <col:84, col:98> 1
|-FunctionDecl 0x55643e525858 <line:450:1, line:452:79> line:450:12 pthread_setschedparam 'int (pthread_t, int, const struct sched_param *)' extern
| |-ParmVarDecl 0x55643e5255e8 <col:35, col:45> col:45 __target_thread 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x55643e525668 <col:62, col:66> col:66 __policy 'int'
| |-ParmVarDecl 0x55643e5256f8 <line:451:7, col:33> col:33 __param 'const struct sched_param *'
| |-NoThrowAttr 0x55643e525910 <line:452:22>
| `-NonNullAttr 0x55643e525968 <col:63, col:77> 3
|-FunctionDecl 0x55643e525c78 <line:453:1, line:456:82> line:453:12 pthread_getschedparam 'int (pthread_t, int *restrict, struct sched_param *restrict)' extern
| |-ParmVarDecl 0x55643e5259e0 <col:35, col:45> col:45 __target_thread 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x55643e525a60 <line:454:7, col:23> col:23 __policy 'int *restrict'
| |-ParmVarDecl 0x55643e525af0 <line:455:7, col:38> col:38 __param 'struct sched_param *restrict'
| |-NoThrowAttr 0x55643e525d30 <line:456:22>
| `-NonNullAttr 0x55643e525d88 <col:63, col:80> 2 3
|-FunctionDecl 0x55643e525f78 <line:457:1, line:458:45> line:457:12 pthread_setschedprio 'int (pthread_t, int)' extern
| |-ParmVarDecl 0x55643e525dd8 <col:34, col:44> col:44 __target_thread 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x55643e525e58 <col:61, col:65> col:65 __prio 'int'
| `-NoThrowAttr 0x55643e526028 <line:458:22>
|-FunctionDecl 0x55643e5263f8 <line:459:1, line:460:71> line:459:12 pthread_once 'int (pthread_once_t *, void (*)(void))' extern
| |-ParmVarDecl 0x55643e5260f0 <col:26, col:42> col:42 __once_control 'pthread_once_t *'
| |-ParmVarDecl 0x55643e526290 <line:460:5, col:33> col:12 __init_routine 'void (*)(void)'
| `-NonNullAttr 0x55643e5264a8 <col:52, col:69> 1 2
|-FunctionDecl 0x55643e526650 <line:461:1, col:64> col:12 pthread_setcancelstate 'int (int, int *)' extern
| |-ParmVarDecl 0x55643e526530 <col:36, col:40> col:40 __state 'int'
| `-ParmVarDecl 0x55643e5265b0 <col:49, col:54> col:54 __oldstate 'int *'
|-FunctionDecl 0x55643e526838 <line:462:1, col:61> col:12 pthread_setcanceltype 'int (int, int *)' extern
| |-ParmVarDecl 0x55643e526718 <col:35, col:39> col:39 __type 'int'
| `-ParmVarDecl 0x55643e526798 <col:47, col:52> col:52 __oldtype 'int *'
|-FunctionDecl 0x55643e5269f0 <line:463:1, col:42> col:12 pthread_cancel 'int (pthread_t)' extern
| `-ParmVarDecl 0x55643e5268f8 <col:28, col:38> col:38 __th 'pthread_t':'unsigned long'
|-FunctionDecl 0x55643e526b30 <line:464:1, col:37> col:13 pthread_testcancel 'void (void)' extern
|-RecordDecl 0x55643e526bd0 <line:465:9, line:473:1> line:465:9 struct definition
| |-RecordDecl 0x55643e526c78 <line:467:3, line:471:3> line:467:3 struct definition
| | |-FieldDecl 0x55643e526d68 <line:469:5, col:15> col:15 __cancel_jmp_buf '__jmp_buf':'long [8]'
| | `-FieldDecl 0x55643e526dd0 <line:470:5, col:9> col:9 __mask_was_saved 'int'
| |-FieldDecl 0x55643e526fa0 <line:467:3, line:471:23> col:5 __cancel_jmp_buf 'struct (anonymous struct at ./split_0/safe021_pso.opt_false-unreach-call.i:467:3) [1]'
| `-FieldDecl 0x55643e527098 <line:472:3, col:16> col:9 __pad 'void *[4]'
|-TypedefDecl 0x55643e527150 <line:465:1, line:473:3> col:3 referenced __pthread_unwind_buf_t 'struct __pthread_unwind_buf_t':'__pthread_unwind_buf_t'
| |-ElaboratedType 0x55643e5270f0 'struct __pthread_unwind_buf_t' sugar
| | `-RecordType 0x55643e526c50 '__pthread_unwind_buf_t'
| |   `-Record 0x55643e526bd0 ''
| `-AlignedAttr 0x55643e5271a8 <col:42> aligned
|   `-<<<NULL>>>
|-RecordDecl 0x55643e527220 <line:474:1, line:480:1> line:474:8 struct __pthread_cleanup_frame definition
| |-FieldDecl 0x55643e527380 <line:476:3, col:35> col:10 __cancel_routine 'void (*)(void *)'
| |-FieldDecl 0x55643e5273e8 <line:477:3, col:9> col:9 __cancel_arg 'void *'
| |-FieldDecl 0x55643e527450 <line:478:3, col:7> col:7 __do_it 'int'
| `-FieldDecl 0x55643e5274b8 <line:479:3, col:7> col:7 __cancel_type 'int'
|-FunctionDecl 0x55643e5276c0 <line:481:1, col:69> col:13 __pthread_register_cancel 'void (__pthread_unwind_buf_t *)' extern
| `-ParmVarDecl 0x55643e5275b0 <col:40, col:64> col:64 __buf '__pthread_unwind_buf_t *'
|-FunctionDecl 0x55643e527808 <line:483:1, col:71> col:13 __pthread_unregister_cancel 'void (__pthread_unwind_buf_t *)' extern
| `-ParmVarDecl 0x55643e527778 <col:42, col:66> col:66 __buf '__pthread_unwind_buf_t *'
|-FunctionDecl 0x55643e527a00 <line:485:1, line:487:31> line:485:13 __pthread_unwind_next 'void (__pthread_unwind_buf_t *) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x55643e5278c0 <col:36, col:60> col:60 __buf '__pthread_unwind_buf_t *'
| `-WeakAttr 0x55643e527aa8 <line:487:22>
|-RecordDecl 0x55643e527b00 <line:489:1, col:8> col:8 struct __jmp_buf_tag
|-FunctionDecl 0x55643e527e18 <line:490:1, col:98> col:12 __sigsetjmp 'int (struct __jmp_buf_tag *, int)' extern
| |-ParmVarDecl 0x55643e527c78 <col:25, col:47> col:47 __env 'struct __jmp_buf_tag *'
| |-ParmVarDecl 0x55643e527cf8 <col:54, col:58> col:58 __savemask 'int'
| |-NoThrowAttr 0x55643e527ec8 <col:86>
| `-ReturnsTwiceAttr 0x55643e527f20 <col:12> Implicit
|-FunctionDecl 0x55643e528248 <line:491:1, line:493:79> line:491:12 pthread_mutex_init 'int (pthread_mutex_t *, const pthread_mutexattr_t *)' extern
| |-ParmVarDecl 0x55643e527ff0 <col:32, col:49> col:49 __mutex 'pthread_mutex_t *'
| |-ParmVarDecl 0x55643e528100 <line:492:11, col:38> col:38 __mutexattr 'const pthread_mutexattr_t *'
| |-NoThrowAttr 0x55643e5282f8 <line:493:22>
| `-NonNullAttr 0x55643e528350 <col:63, col:77> 1
|-FunctionDecl 0x55643e5284c8 <line:494:1, line:495:79> line:494:12 pthread_mutex_destroy 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x55643e528398 <col:35, col:52> col:52 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x55643e528570 <line:495:22>
| `-NonNullAttr 0x55643e5285c8 <col:63, col:77> 1
|-FunctionDecl 0x55643e5286d0 <line:496:1, line:497:68> line:496:12 pthread_mutex_trylock 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x55643e528618 <col:35, col:52> col:52 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x55643e528778 <line:497:22>
| `-NonNullAttr 0x55643e5287d0 <col:52, col:66> 1
|-FunctionDecl 0x55643e5288d0 <line:498:1, line:499:68> line:498:12 pthread_mutex_lock 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x55643e528818 <col:32, col:49> col:49 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x55643e528978 <line:499:22>
| `-NonNullAttr 0x55643e5289d0 <col:52, col:66> 1
|-FunctionDecl 0x55643e529c28 <line:500:1, line:502:85> line:500:12 pthread_mutex_timedlock 'int (pthread_mutex_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x55643e529a38 <col:37, col:65> col:65 __mutex 'pthread_mutex_t *restrict'
| |-ParmVarDecl 0x55643e529ac8 <line:501:9, line:502:9> col:9 __abstime 'const struct timespec *restrict'
| |-NoThrowAttr 0x55643e529cd8 <col:36>
| `-NonNullAttr 0x55643e529d30 <col:66, col:83> 1 2
|-FunctionDecl 0x55643e529e30 <line:503:1, line:504:68> line:503:12 pthread_mutex_unlock 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x55643e529d78 <col:34, col:51> col:51 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x55643e529ed8 <line:504:22>
| `-NonNullAttr 0x55643e529f30 <col:52, col:66> 1
|-FunctionDecl 0x55643e52a1c8 <line:505:1, line:508:82> line:505:12 pthread_mutex_getprioceiling 'int (const pthread_mutex_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x55643e529fe0 <col:42, line:506:18> col:18 __mutex 'const pthread_mutex_t *restrict'
| |-ParmVarDecl 0x55643e52a060 <line:507:7, col:23> col:23 __prioceiling 'int *restrict'
| |-NoThrowAttr 0x55643e52a278 <line:508:22>
| `-NonNullAttr 0x55643e52a2d0 <col:63, col:80> 1 2
|-FunctionDecl 0x55643e52a598 <line:509:1, line:512:82> line:509:12 pthread_mutex_setprioceiling 'int (pthread_mutex_t *restrict, int, int *restrict)' extern
| |-ParmVarDecl 0x55643e52a318 <col:42, col:70> col:70 __mutex 'pthread_mutex_t *restrict'
| |-ParmVarDecl 0x55643e52a398 <line:510:7, col:11> col:11 __prioceiling 'int'
| |-ParmVarDecl 0x55643e52a418 <line:511:7, col:23> col:23 __old_ceiling 'int *restrict'
| |-NoThrowAttr 0x55643e52a650 <line:512:22>
| `-NonNullAttr 0x55643e52a6a8 <col:63, col:80> 1 3
|-FunctionDecl 0x55643e52a7b0 <line:513:1, line:514:79> line:513:12 pthread_mutex_consistent 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x55643e52a6f8 <col:38, col:55> col:55 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x55643e52a858 <line:514:22>
| `-NonNullAttr 0x55643e52a8b0 <col:63, col:77> 1
|-FunctionDecl 0x55643e52aad8 <line:515:1, line:516:79> line:515:12 pthread_mutexattr_init 'int (pthread_mutexattr_t *)' extern
| |-ParmVarDecl 0x55643e52a960 <col:36, col:57> col:57 __attr 'pthread_mutexattr_t *'
| |-NoThrowAttr 0x55643e52ab80 <line:516:22>
| `-NonNullAttr 0x55643e52abd8 <col:63, col:77> 1
|-FunctionDecl 0x55643e52ace0 <line:517:1, line:518:79> line:517:12 pthread_mutexattr_destroy 'int (pthread_mutexattr_t *)' extern
| |-ParmVarDecl 0x55643e52ac28 <col:39, col:60> col:60 __attr 'pthread_mutexattr_t *'
| |-NoThrowAttr 0x55643e52ad88 <line:518:22>
| `-NonNullAttr 0x55643e52ade0 <col:63, col:77> 1
|-FunctionDecl 0x55643e52b008 <line:519:1, line:522:82> line:519:12 pthread_mutexattr_getpshared 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x55643e52ae28 <col:42, line:520:18> col:18 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x55643e52aea8 <line:521:7, col:23> col:23 __pshared 'int *restrict'
| |-NoThrowAttr 0x55643e52b0b8 <line:522:22>
| `-NonNullAttr 0x55643e52b110 <col:63, col:80> 1 2
|-FunctionDecl 0x55643e52b318 <line:523:1, line:525:79> line:523:12 pthread_mutexattr_setpshared 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x55643e52b158 <col:42, col:63> col:63 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x55643e52b1d8 <line:524:7, col:11> col:11 __pshared 'int'
| |-NoThrowAttr 0x55643e52b3c8 <line:525:22>
| `-NonNullAttr 0x55643e52b420 <col:63, col:77> 1
|-FunctionDecl 0x55643e52b5c8 <line:526:1, line:528:82> line:526:12 pthread_mutexattr_gettype 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x55643e52b468 <col:39, line:527:11> col:11 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x55643e52b4e8 <col:19, col:35> col:35 __kind 'int *restrict'
| |-NoThrowAttr 0x55643e52b678 <line:528:22>
| `-NonNullAttr 0x55643e52b6d0 <col:63, col:80> 1 2
|-FunctionDecl 0x55643e52b858 <line:529:1, line:530:79> line:529:12 pthread_mutexattr_settype 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x55643e52b718 <col:39, col:60> col:60 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x55643e52b798 <col:68, col:72> col:72 __kind 'int'
| |-NoThrowAttr 0x55643e52b908 <line:530:22>
| `-NonNullAttr 0x55643e52b960 <col:63, col:77> 1
|-FunctionDecl 0x55643e52bb20 <line:531:1, line:534:82> line:531:12 pthread_mutexattr_getprotocol 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x55643e52b9a8 <col:43, line:532:19> col:19 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x55643e52ba40 <line:533:8, col:24> col:24 __protocol 'int *restrict'
| |-NoThrowAttr 0x55643e52bbd0 <line:534:22>
| `-NonNullAttr 0x55643e52bc28 <col:63, col:80> 1 2
|-FunctionDecl 0x55643e52bdb8 <line:535:1, line:537:79> line:535:12 pthread_mutexattr_setprotocol 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x55643e52bc78 <col:43, col:64> col:64 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x55643e52bcf8 <line:536:8, col:12> col:12 __protocol 'int'
| |-NoThrowAttr 0x55643e52be68 <line:537:22>
| `-NonNullAttr 0x55643e52bec0 <col:63, col:77> 1
|-FunctionDecl 0x55643e52c068 <line:538:1, line:541:82> line:538:12 pthread_mutexattr_getprioceiling 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x55643e52bf08 <col:46, line:539:22> col:22 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x55643e52bf88 <line:540:11, col:27> col:27 __prioceiling 'int *restrict'
| |-NoThrowAttr 0x55643e52c118 <line:541:22>
| `-NonNullAttr 0x55643e52c170 <col:63, col:80> 1 2
|-FunctionDecl 0x55643e52c2f8 <line:542:1, line:544:79> line:542:12 pthread_mutexattr_setprioceiling 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x55643e52c1b8 <col:46, col:67> col:67 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x55643e52c238 <line:543:11, col:15> col:15 __prioceiling 'int'
| |-NoThrowAttr 0x55643e52c3a8 <line:544:22>
| `-NonNullAttr 0x55643e52c400 <col:63, col:77> 1
|-FunctionDecl 0x55643e52c5e8 <line:545:1, line:547:82> line:545:12 pthread_mutexattr_getrobust 'int (const pthread_mutexattr_t *, int *)' extern
| |-ParmVarDecl 0x55643e52c448 <col:41, col:68> col:68 __attr 'const pthread_mutexattr_t *'
| |-ParmVarDecl 0x55643e52c4c8 <line:546:6, col:11> col:11 __robustness 'int *'
| |-NoThrowAttr 0x55643e52c698 <line:547:22>
| `-NonNullAttr 0x55643e52c6f0 <col:63, col:80> 1 2
|-FunctionDecl 0x55643e52c878 <line:548:1, line:550:79> line:548:12 pthread_mutexattr_setrobust 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x55643e52c738 <col:41, col:62> col:62 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x55643e52c7b8 <line:549:6, col:10> col:10 __robustness 'int'
| |-NoThrowAttr 0x55643e52c928 <line:550:22>
| `-NonNullAttr 0x55643e52c980 <col:63, col:77> 1
|-FunctionDecl 0x55643e52dcf8 <line:551:1, line:553:86> line:551:12 pthread_rwlock_init 'int (pthread_rwlock_t *restrict, const pthread_rwlockattr_t *restrict)' extern
| |-ParmVarDecl 0x55643e52daa0 <col:33, col:62> col:62 __rwlock 'pthread_rwlock_t *restrict'
| |-ParmVarDecl 0x55643e52dbb0 <line:552:5, line:553:5> col:5 __attr 'const pthread_rwlockattr_t *restrict'
| |-NoThrowAttr 0x55643e52dda8 <col:29>
| `-NonNullAttr 0x55643e52de00 <col:70, col:84> 1
|-FunctionDecl 0x55643e52df78 <line:554:1, line:555:79> line:554:12 pthread_rwlock_destroy 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x55643e52de48 <col:36, col:54> col:54 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x55643e52e020 <line:555:22>
| `-NonNullAttr 0x55643e52e078 <col:63, col:77> 1
|-FunctionDecl 0x55643e52e180 <line:556:1, line:557:68> line:556:12 pthread_rwlock_rdlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x55643e52e0c8 <col:35, col:53> col:53 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x55643e52e228 <line:557:22>
| `-NonNullAttr 0x55643e52e280 <col:52, col:66> 1
|-FunctionDecl 0x55643e52e380 <line:558:1, line:559:65> line:558:12 pthread_rwlock_tryrdlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x55643e52e2c8 <col:38, col:56> col:56 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x55643e52e428 <line:559:19>
| `-NonNullAttr 0x55643e52e480 <col:49, col:63> 1
|-FunctionDecl 0x55643e52e6b8 <line:560:1, line:562:88> line:560:12 pthread_rwlock_timedrdlock 'int (pthread_rwlock_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x55643e52e4c8 <col:40, col:69> col:69 __rwlock 'pthread_rwlock_t *restrict'
| |-ParmVarDecl 0x55643e52e558 <line:561:12, line:562:12> col:12 __abstime 'const struct timespec *restrict'
| |-NoThrowAttr 0x55643e52e768 <col:39>
| `-NonNullAttr 0x55643e52e7c0 <col:69, col:86> 1 2
|-FunctionDecl 0x55643e52e8c0 <line:563:1, line:564:68> line:563:12 pthread_rwlock_wrlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x55643e52e808 <col:35, col:53> col:53 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x55643e52e968 <line:564:22>
| `-NonNullAttr 0x55643e52e9c0 <col:52, col:66> 1
|-FunctionDecl 0x55643e52eb28 <line:565:1, line:566:68> line:565:12 pthread_rwlock_trywrlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x55643e52ea70 <col:38, col:56> col:56 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x55643e52ebd0 <line:566:22>
| `-NonNullAttr 0x55643e52ec28 <col:52, col:66> 1
|-FunctionDecl 0x55643e52ede8 <line:567:1, line:569:88> line:567:12 pthread_rwlock_timedwrlock 'int (pthread_rwlock_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x55643e52ec78 <col:40, col:69> col:69 __rwlock 'pthread_rwlock_t *restrict'
| |-ParmVarDecl 0x55643e52ed08 <line:568:12, line:569:12> col:12 __abstime 'const struct timespec *restrict'
| |-NoThrowAttr 0x55643e52ee98 <col:39>
| `-NonNullAttr 0x55643e52eef0 <col:69, col:86> 1 2
|-FunctionDecl 0x55643e52eff0 <line:570:1, line:571:68> line:570:12 pthread_rwlock_unlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x55643e52ef38 <col:35, col:53> col:53 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x55643e52f098 <line:571:22>
| `-NonNullAttr 0x55643e52f0f0 <col:52, col:66> 1
|-FunctionDecl 0x55643e52f2d8 <line:572:1, line:573:79> line:572:12 pthread_rwlockattr_init 'int (pthread_rwlockattr_t *)' extern
| |-ParmVarDecl 0x55643e52f1a0 <col:37, col:59> col:59 __attr 'pthread_rwlockattr_t *'
| |-NoThrowAttr 0x55643e52f380 <line:573:22>
| `-NonNullAttr 0x55643e52f3d8 <col:63, col:77> 1
|-FunctionDecl 0x55643e52f4e0 <line:574:1, line:575:79> line:574:12 pthread_rwlockattr_destroy 'int (pthread_rwlockattr_t *)' extern
| |-ParmVarDecl 0x55643e52f428 <col:40, col:62> col:62 __attr 'pthread_rwlockattr_t *'
| |-NoThrowAttr 0x55643e52f588 <line:575:22>
| `-NonNullAttr 0x55643e52f5e0 <col:63, col:77> 1
|-FunctionDecl 0x55643e52f808 <line:576:1, line:579:82> line:576:12 pthread_rwlockattr_getpshared 'int (const pthread_rwlockattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x55643e52f628 <col:43, line:577:19> col:19 __attr 'const pthread_rwlockattr_t *restrict'
| |-ParmVarDecl 0x55643e52f6a8 <line:578:8, col:24> col:24 __pshared 'int *restrict'
| |-NoThrowAttr 0x55643e52f8b8 <line:579:22>
| `-NonNullAttr 0x55643e52f910 <col:63, col:80> 1 2
|-FunctionDecl 0x55643e52fb38 <line:580:1, line:582:79> line:580:12 pthread_rwlockattr_setpshared 'int (pthread_rwlockattr_t *, int)' extern
| |-ParmVarDecl 0x55643e52f958 <col:43, col:65> col:65 __attr 'pthread_rwlockattr_t *'
| |-ParmVarDecl 0x55643e52f9d8 <line:581:8, col:12> col:12 __pshared 'int'
| |-NoThrowAttr 0x55643e52fbe8 <line:582:22>
| `-NonNullAttr 0x55643e52fc40 <col:63, col:77> 1
|-FunctionDecl 0x55643e52fde8 <line:583:1, line:586:82> line:583:12 pthread_rwlockattr_getkind_np 'int (const pthread_rwlockattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x55643e52fc88 <col:43, line:584:19> col:19 __attr 'const pthread_rwlockattr_t *restrict'
| |-ParmVarDecl 0x55643e52fd08 <line:585:8, col:24> col:24 __pref 'int *restrict'
| |-NoThrowAttr 0x55643e52fe98 <line:586:22>
| `-NonNullAttr 0x55643e52fef0 <col:63, col:80> 1 2
|-FunctionDecl 0x55643e530078 <line:587:1, line:588:93> line:587:12 pthread_rwlockattr_setkind_np 'int (pthread_rwlockattr_t *, int)' extern
| |-ParmVarDecl 0x55643e52ff38 <col:43, col:65> col:65 __attr 'pthread_rwlockattr_t *'
| |-ParmVarDecl 0x55643e52ffb8 <line:588:8, col:12> col:12 __pref 'int'
| |-NoThrowAttr 0x55643e530128 <col:36>
| `-NonNullAttr 0x55643e530180 <col:77, col:91> 1
|-FunctionDecl 0x55643e5304b8 <line:589:1, line:591:79> line:589:12 pthread_cond_init 'int (pthread_cond_t *restrict, const pthread_condattr_t *restrict)' extern
| |-ParmVarDecl 0x55643e530260 <col:31, col:58> col:58 __cond 'pthread_cond_t *restrict'
| |-ParmVarDecl 0x55643e530370 <line:590:10, col:47> col:47 __cond_attr 'const pthread_condattr_t *restrict'
| |-NoThrowAttr 0x55643e530568 <line:591:22>
| `-NonNullAttr 0x55643e5305c0 <col:63, col:77> 1
|-FunctionDecl 0x55643e530738 <line:592:1, line:593:79> line:592:12 pthread_cond_destroy 'int (pthread_cond_t *)' extern
| |-ParmVarDecl 0x55643e530608 <col:34, col:50> col:50 __cond 'pthread_cond_t *'
| |-NoThrowAttr 0x55643e5307e0 <line:593:22>
| `-NonNullAttr 0x55643e530838 <col:63, col:77> 1
|-FunctionDecl 0x55643e530940 <line:594:1, line:595:68> line:594:12 pthread_cond_signal 'int (pthread_cond_t *)' extern
| |-ParmVarDecl 0x55643e530888 <col:33, col:49> col:49 __cond 'pthread_cond_t *'
| |-NoThrowAttr 0x55643e5309e8 <line:595:22>
| `-NonNullAttr 0x55643e530a40 <col:52, col:66> 1
|-FunctionDecl 0x55643e530b58 <line:596:1, line:597:68> line:596:12 pthread_cond_broadcast 'int (pthread_cond_t *)' extern
| |-ParmVarDecl 0x55643e530aa0 <col:36, col:52> col:52 __cond 'pthread_cond_t *'
| |-NoThrowAttr 0x55643e530c00 <line:597:22>
| `-NonNullAttr 0x55643e530c58 <col:52, col:66> 1
|-FunctionDecl 0x55643e530e88 <line:598:1, line:600:41> line:598:12 pthread_cond_wait 'int (pthread_cond_t *restrict, pthread_mutex_t *restrict)' extern
| |-ParmVarDecl 0x55643e530ca8 <col:31, col:58> col:58 __cond 'pthread_cond_t *restrict'
| |-ParmVarDecl 0x55643e530d20 <line:599:10, col:38> col:38 __mutex 'pthread_mutex_t *restrict'
| `-NonNullAttr 0x55643e530f38 <line:600:22, col:39> 1 2
|-FunctionDecl 0x55643e531268 <line:601:1, line:604:44> line:601:12 pthread_cond_timedwait 'int (pthread_cond_t *restrict, pthread_mutex_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x55643e530fb8 <col:36, col:63> col:63 __cond 'pthread_cond_t *restrict'
| |-ParmVarDecl 0x55643e531030 <line:602:8, col:36> col:36 __mutex 'pthread_mutex_t *restrict'
| |-ParmVarDecl 0x55643e5310c0 <line:603:8, col:42> col:42 __abstime 'const struct timespec *restrict'
| `-NonNullAttr 0x55643e531320 <line:604:22, col:42> 1 2 3
|-FunctionDecl 0x55643e531538 <line:605:1, line:606:79> line:605:12 pthread_condattr_init 'int (pthread_condattr_t *)' extern
| |-ParmVarDecl 0x55643e531400 <col:35, col:55> col:55 __attr 'pthread_condattr_t *'
| |-NoThrowAttr 0x55643e5315e0 <line:606:22>
| `-NonNullAttr 0x55643e531638 <col:63, col:77> 1
|-FunctionDecl 0x55643e531740 <line:607:1, line:608:79> line:607:12 pthread_condattr_destroy 'int (pthread_condattr_t *)' extern
| |-ParmVarDecl 0x55643e531688 <col:38, col:58> col:58 __attr 'pthread_condattr_t *'
| |-NoThrowAttr 0x55643e5317e8 <line:608:22>
| `-NonNullAttr 0x55643e531840 <col:63, col:77> 1
|-FunctionDecl 0x55643e531aa0 <line:609:1, line:612:82> line:609:12 pthread_condattr_getpshared 'int (const pthread_condattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x55643e531888 <col:41, line:610:17> col:17 __attr 'const pthread_condattr_t *restrict'
| |-ParmVarDecl 0x55643e531908 <line:611:6, col:22> col:22 __pshared 'int *restrict'
| |-NoThrowAttr 0x55643e531b50 <line:612:22>
| `-NonNullAttr 0x55643e531ba8 <col:63, col:80> 1 2
|-FunctionDecl 0x55643e531db8 <line:613:1, line:614:94> line:613:12 pthread_condattr_setpshared 'int (pthread_condattr_t *, int)' extern
| |-ParmVarDecl 0x55643e531bf8 <col:41, col:61> col:61 __attr 'pthread_condattr_t *'
| |-ParmVarDecl 0x55643e531c78 <line:614:6, col:10> col:10 __pshared 'int'
| |-NoThrowAttr 0x55643e531e68 <col:37>
| `-NonNullAttr 0x55643e531ec0 <col:78, col:92> 1
|-FunctionDecl 0x55643e5320d8 <line:615:1, line:618:82> line:615:12 pthread_condattr_getclock 'int (const pthread_condattr_t *restrict, __clockid_t *restrict)' extern
| |-ParmVarDecl 0x55643e531f08 <col:39, line:616:22> col:22 __attr 'const pthread_condattr_t *restrict'
| |-ParmVarDecl 0x55643e531fb0 <line:617:11, col:35> col:35 __clock_id '__clockid_t *restrict'
| |-NoThrowAttr 0x55643e532188 <line:618:22>
| `-NonNullAttr 0x55643e5321e0 <col:63, col:80> 1 2
|-FunctionDecl 0x55643e5323a8 <line:619:1, line:621:79> line:619:12 pthread_condattr_setclock 'int (pthread_condattr_t *, __clockid_t)' extern
| |-ParmVarDecl 0x55643e532228 <col:39, col:59> col:59 __attr 'pthread_condattr_t *'
| |-ParmVarDecl 0x55643e5322a0 <line:620:11, col:23> col:23 __clock_id '__clockid_t':'int'
| |-NoThrowAttr 0x55643e532458 <line:621:22>
| `-NonNullAttr 0x55643e5324b0 <col:63, col:77> 1
|-FunctionDecl 0x55643e532758 <line:622:1, line:623:79> line:622:12 pthread_spin_init 'int (pthread_spinlock_t *, int)' extern
| |-ParmVarDecl 0x55643e532590 <col:31, col:51> col:51 __lock 'pthread_spinlock_t *'
| |-ParmVarDecl 0x55643e532610 <col:59, col:63> col:63 __pshared 'int'
| |-NoThrowAttr 0x55643e532808 <line:623:22>
| `-NonNullAttr 0x55643e532860 <col:63, col:77> 1
|-FunctionDecl 0x55643e5329d8 <line:624:1, line:625:79> line:624:12 pthread_spin_destroy 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x55643e5328a8 <col:34, col:54> col:54 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x55643e532ab0 <line:625:22>
| `-NonNullAttr 0x55643e532b08 <col:63, col:77> 1
|-FunctionDecl 0x55643e532c10 <line:626:1, line:627:68> line:626:12 pthread_spin_lock 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x55643e532b58 <col:31, col:51> col:51 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x55643e532cb8 <line:627:22>
| `-NonNullAttr 0x55643e532d10 <col:52, col:66> 1
|-FunctionDecl 0x55643e532e10 <line:628:1, line:629:68> line:628:12 pthread_spin_trylock 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x55643e532d58 <col:34, col:54> col:54 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x55643e532eb8 <line:629:22>
| `-NonNullAttr 0x55643e532f10 <col:52, col:66> 1
|-FunctionDecl 0x55643e533010 <line:630:1, line:631:68> line:630:12 pthread_spin_unlock 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x55643e532f58 <col:33, col:53> col:53 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x55643e5330b8 <line:631:22>
| `-NonNullAttr 0x55643e533110 <col:52, col:66> 1
|-FunctionDecl 0x55643e5334e8 <line:632:1, line:635:79> line:632:12 pthread_barrier_init 'int (pthread_barrier_t *restrict, const pthread_barrierattr_t *restrict, unsigned int)' extern
| |-ParmVarDecl 0x55643e5331f0 <col:34, col:64> col:64 __barrier 'pthread_barrier_t *restrict'
| |-ParmVarDecl 0x55643e533300 <line:633:6, line:634:6> col:6 __attr 'const pthread_barrierattr_t *restrict'
| |-ParmVarDecl 0x55643e533380 <col:14, col:27> col:27 __count 'unsigned int'
| |-NoThrowAttr 0x55643e5335a0 <line:635:22>
| `-NonNullAttr 0x55643e5335f8 <col:63, col:77> 1
|-FunctionDecl 0x55643e533778 <line:636:1, line:637:79> line:636:12 pthread_barrier_destroy 'int (pthread_barrier_t *)' extern
| |-ParmVarDecl 0x55643e533648 <col:37, col:56> col:56 __barrier 'pthread_barrier_t *'
| |-NoThrowAttr 0x55643e533820 <line:637:22>
| `-NonNullAttr 0x55643e533878 <col:63, col:77> 1
|-FunctionDecl 0x55643e533980 <line:638:1, line:639:68> line:638:12 pthread_barrier_wait 'int (pthread_barrier_t *)' extern
| |-ParmVarDecl 0x55643e5338c8 <col:34, col:53> col:53 __barrier 'pthread_barrier_t *'
| |-NoThrowAttr 0x55643e533a28 <line:639:22>
| `-NonNullAttr 0x55643e533a80 <col:52, col:66> 1
|-FunctionDecl 0x55643e534c88 <line:640:1, line:641:79> line:640:12 pthread_barrierattr_init 'int (pthread_barrierattr_t *)' extern
| |-ParmVarDecl 0x55643e534b50 <col:38, col:61> col:61 __attr 'pthread_barrierattr_t *'
| |-NoThrowAttr 0x55643e534d30 <line:641:22>
| `-NonNullAttr 0x55643e534d88 <col:63, col:77> 1
|-FunctionDecl 0x55643e534e90 <line:642:1, line:643:79> line:642:12 pthread_barrierattr_destroy 'int (pthread_barrierattr_t *)' extern
| |-ParmVarDecl 0x55643e534dd8 <col:41, col:64> col:64 __attr 'pthread_barrierattr_t *'
| |-NoThrowAttr 0x55643e534f38 <line:643:22>
| `-NonNullAttr 0x55643e534f90 <col:63, col:77> 1
|-FunctionDecl 0x55643e5351b8 <line:644:1, line:647:82> line:644:12 pthread_barrierattr_getpshared 'int (const pthread_barrierattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x55643e534fd8 <col:44, line:645:20> col:20 __attr 'const pthread_barrierattr_t *restrict'
| |-ParmVarDecl 0x55643e535058 <line:646:9, col:25> col:25 __pshared 'int *restrict'
| |-NoThrowAttr 0x55643e535268 <line:647:22>
| `-NonNullAttr 0x55643e5352c0 <col:63, col:80> 1 2
|-FunctionDecl 0x55643e5354c8 <line:648:1, line:650:79> line:648:12 pthread_barrierattr_setpshared 'int (pthread_barrierattr_t *, int)' extern
| |-ParmVarDecl 0x55643e535308 <col:44, col:67> col:67 __attr 'pthread_barrierattr_t *'
| |-ParmVarDecl 0x55643e535388 <line:649:9, col:13> col:13 __pshared 'int'
| |-NoThrowAttr 0x55643e535578 <line:650:22>
| `-NonNullAttr 0x55643e5355d0 <col:63, col:77> 1
|-FunctionDecl 0x55643e535918 <line:651:1, line:653:79> line:651:12 pthread_key_create 'int (pthread_key_t *, void (*)(void *))' extern
| |-ParmVarDecl 0x55643e5356b0 <col:32, col:47> col:47 __key 'pthread_key_t *'
| |-ParmVarDecl 0x55643e5357d0 <line:652:11, col:43> col:18 __destr_function 'void (*)(void *)'
| |-NoThrowAttr 0x55643e5359c8 <line:653:22>
| `-NonNullAttr 0x55643e535a20 <col:63, col:77> 1
|-FunctionDecl 0x55643e535b88 <line:654:1, col:92> col:12 pthread_key_delete 'int (pthread_key_t)' extern
| |-ParmVarDecl 0x55643e535a68 <col:32, col:46> col:46 __key 'pthread_key_t':'unsigned int'
| `-NoThrowAttr 0x55643e535c30 <col:69>
|-FunctionDecl 0x55643e535da8 <line:655:1, col:95> col:14 pthread_getspecific 'void *(pthread_key_t)' extern
| |-ParmVarDecl 0x55643e535c98 <col:35, col:49> col:49 __key 'pthread_key_t':'unsigned int'
| `-NoThrowAttr 0x55643e535e50 <col:72>
|-FunctionDecl 0x55643e536088 <line:656:1, line:657:67> line:656:12 pthread_setspecific 'int (pthread_key_t, const void *)' extern
| |-ParmVarDecl 0x55643e535eb8 <col:33, col:47> col:47 __key 'pthread_key_t':'unsigned int'
| |-ParmVarDecl 0x55643e535f68 <line:657:5, col:17> col:17 __pointer 'const void *'
| `-NoThrowAttr 0x55643e536138 <col:44>
|-FunctionDecl 0x55643e536358 <line:658:1, line:660:79> line:658:12 pthread_getcpuclockid 'int (pthread_t, __clockid_t *)' extern
| |-ParmVarDecl 0x55643e5361a0 <col:35, col:45> col:45 __thread_id 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x55643e536218 <line:659:7, col:20> col:20 __clock_id '__clockid_t *'
| |-NoThrowAttr 0x55643e536408 <line:660:22>
| `-NonNullAttr 0x55643e536460 <col:63, col:77> 2
|-FunctionDecl 0x55643e5368a8 <line:661:1, line:663:70> line:661:12 pthread_atfork 'int (void (*)(void), void (*)(void), void (*)(void))' extern
| |-ParmVarDecl 0x55643e536540 <col:28, col:51> col:35 __prepare 'void (*)(void)'
| |-ParmVarDecl 0x55643e536650 <line:662:7, col:29> col:14 __parent 'void (*)(void)'
| |-ParmVarDecl 0x55643e536760 <line:663:7, col:28> col:14 __child 'void (*)(void)'
| `-NoThrowAttr 0x55643e536960 <col:47>
|-FunctionDecl 0x55643e536af0 <line:665:1, col:20> col:8 used P0 'void *(void *)'
| `-ParmVarDecl 0x55643e5369d0 <col:11, col:17> col:17 arg 'void *'
|-FunctionDecl 0x55643e536c48 <line:666:1, col:20> col:8 used P1 'void *(void *)'
| `-ParmVarDecl 0x55643e536bb0 <col:11, col:17> col:17 arg 'void *'
|-FunctionDecl 0x55643e536da0 <line:667:1, col:20> col:8 used P2 'void *(void *)'
| `-ParmVarDecl 0x55643e536d08 <col:11, col:17> col:17 arg 'void *'
|-FunctionDecl 0x55643e536e68 <line:668:1, col:12> col:6 fence 'void ()'
|-FunctionDecl 0x55643e536f28 <line:669:1, col:12> col:6 isync 'void ()'
|-FunctionDecl 0x55643e536fe8 <line:670:1, col:14> col:6 lwfence 'void ()'
|-VarDecl 0x55643e5370a0 <line:671:1, col:5> col:5 used __unbuffered_cnt 'int'
|-VarDecl 0x55643e537120 prev 0x55643e5370a0 <line:672:1, col:24> col:5 used __unbuffered_cnt 'int' cinit
| `-IntegerLiteral 0x55643e537188 <col:24> 'int' 0
|-VarDecl 0x55643e5371c0 <line:673:1, col:5> col:5 used __unbuffered_p2_EAX 'int'
|-VarDecl 0x55643e537240 prev 0x55643e5371c0 <line:674:1, col:27> col:5 used __unbuffered_p2_EAX 'int' cinit
| `-IntegerLiteral 0x55643e5372a8 <col:27> 'int' 0
|-VarDecl 0x55643e5372e0 <line:675:1, col:5> col:5 used __unbuffered_p2_EBX 'int'
|-VarDecl 0x55643e537360 prev 0x55643e5372e0 <line:676:1, col:27> col:5 used __unbuffered_p2_EBX 'int' cinit
| `-IntegerLiteral 0x55643e5373c8 <col:27> 'int' 0
|-VarDecl 0x55643e5373f8 <line:677:1, col:7> col:7 used main$tmp_guard0 '_Bool'
|-VarDecl 0x55643e537470 <line:678:1, col:7> col:7 used main$tmp_guard1 '_Bool'
|-VarDecl 0x55643e5374f0 <line:679:1, col:5> col:5 used x 'int'
|-VarDecl 0x55643e537570 prev 0x55643e5374f0 <line:680:1, col:9> col:5 used x 'int' cinit
| `-IntegerLiteral 0x55643e5375d8 <col:9> 'int' 0
|-VarDecl 0x55643e537608 <line:681:1, col:7> col:7 used x$flush_delayed '_Bool'
|-VarDecl 0x55643e537688 <line:682:1, col:5> col:5 used x$mem_tmp 'int'
|-VarDecl 0x55643e537700 <line:683:1, col:7> col:7 used x$r_buff0_thd0 '_Bool'
|-VarDecl 0x55643e537778 <line:684:1, col:7> col:7 used x$r_buff0_thd1 '_Bool'
|-VarDecl 0x55643e5377f0 <line:685:1, col:7> col:7 used x$r_buff0_thd2 '_Bool'
|-VarDecl 0x55643e537868 <line:686:1, col:7> col:7 used x$r_buff0_thd3 '_Bool'
|-VarDecl 0x55643e5378e0 <line:687:1, col:7> col:7 used x$r_buff1_thd0 '_Bool'
|-VarDecl 0x55643e537958 <line:688:1, col:7> col:7 used x$r_buff1_thd1 '_Bool'
|-VarDecl 0x55643e5379d0 <line:689:1, col:7> col:7 used x$r_buff1_thd2 '_Bool'
|-VarDecl 0x55643e537a48 <line:690:1, col:7> col:7 used x$r_buff1_thd3 '_Bool'
|-VarDecl 0x55643e537b00 <line:691:1, col:7> col:7 x$read_delayed '_Bool'
|-VarDecl 0x55643e537b80 <line:692:1, col:6> col:6 x$read_delayed_var 'int *'
|-VarDecl 0x55643e537c00 <line:693:1, col:5> col:5 used x$w_buff0 'int'
|-VarDecl 0x55643e537c78 <line:694:1, col:7> col:7 used x$w_buff0_used '_Bool'
|-VarDecl 0x55643e537cf8 <line:695:1, col:5> col:5 used x$w_buff1 'int'
|-VarDecl 0x55643e537d70 <line:696:1, col:7> col:7 used x$w_buff1_used '_Bool'
|-VarDecl 0x55643e537df0 <line:697:1, col:5> col:5 used y 'int'
|-VarDecl 0x55643e537e70 prev 0x55643e537df0 <line:698:1, col:9> col:5 used y 'int' cinit
| `-IntegerLiteral 0x55643e537ed8 <col:9> 'int' 0
|-VarDecl 0x55643e537f10 <line:699:1, col:5> col:5 used z 'int'
|-VarDecl 0x55643e537f90 prev 0x55643e537f10 <line:700:1, col:9> col:5 used z 'int' cinit
| `-IntegerLiteral 0x55643e537ff8 <col:9> 'int' 0
|-VarDecl 0x55643e538028 <line:701:1, col:7> col:7 used weak$$choice0 '_Bool'
|-VarDecl 0x55643e5380a0 <line:702:1, col:7> col:7 used weak$$choice2 '_Bool'
|-FunctionDecl 0x55643e5381b8 prev 0x55643e536af0 <line:703:1, line:722:1> line:703:8 used P0 'void *(void *)'
| |-ParmVarDecl 0x55643e538120 <col:11, col:17> col:17 arg 'void *'
| `-CompoundStmt 0x55643e539448 <line:704:1, line:722:1>
|   |-CallExpr 0x55643e5382c8 <line:705:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x55643e5382b0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55643e538260 <col:3> 'void ()' Function 0x55643e4dde40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x55643e538328 <line:706:3, col:7> 'int' '='
|   | |-DeclRefExpr 0x55643e5382e8 <col:3> 'int' lvalue Var 0x55643e537f90 'z' 'int'
|   | `-IntegerLiteral 0x55643e538308 <col:7> 'int' 1
|   |-CallExpr 0x55643e538380 <line:707:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x55643e538368 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55643e538348 <col:3> 'void ()' Function 0x55643e4ddf00 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x55643e5383d8 <line:708:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x55643e5383c0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55643e5383a0 <col:3> 'void ()' Function 0x55643e4dde40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x55643e538438 <line:709:3, col:7> 'int' '='
|   | |-DeclRefExpr 0x55643e5383f8 <col:3> 'int' lvalue Var 0x55643e537570 'x' 'int'
|   | `-IntegerLiteral 0x55643e538418 <col:7> 'int' 1
|   |-CallExpr 0x55643e538490 <line:710:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x55643e538478 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55643e538458 <col:3> 'void ()' Function 0x55643e4ddf00 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x55643e5384e8 <line:711:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x55643e5384d0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55643e5384b0 <col:3> 'void ()' Function 0x55643e4dde40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x55643e5387d0 <line:712:3, col:103> 'int' '='
|   | |-DeclRefExpr 0x55643e538508 <col:3> 'int' lvalue Var 0x55643e537570 'x' 'int'
|   | `-ConditionalOperator 0x55643e5387a0 <col:7, col:103> 'int'
|   |   |-BinaryOperator 0x55643e5385c8 <col:7, col:25> 'int' '&&'
|   |   | |-ImplicitCastExpr 0x55643e538580 <col:7> 'int' <IntegralCast>
|   |   | | `-ImplicitCastExpr 0x55643e538568 <col:7> '_Bool' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x55643e538528 <col:7> '_Bool' lvalue Var 0x55643e537c78 'x$w_buff0_used' '_Bool'
|   |   | `-ImplicitCastExpr 0x55643e5385b0 <col:25> 'int' <IntegralCast>
|   |   |   `-ImplicitCastExpr 0x55643e538598 <col:25> '_Bool' <LValueToRValue>
|   |   |     `-DeclRefExpr 0x55643e538548 <col:25> '_Bool' lvalue Var 0x55643e537778 'x$r_buff0_thd1' '_Bool'
|   |   |-ImplicitCastExpr 0x55643e538788 <col:42> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x55643e5385e8 <col:42> 'int' lvalue Var 0x55643e537c00 'x$w_buff0' 'int'
|   |   `-ParenExpr 0x55643e538768 <col:54, col:103> 'int'
|   |     `-ConditionalOperator 0x55643e538738 <col:55, col:102> 'int'
|   |       |-BinaryOperator 0x55643e5386a8 <col:55, col:73> 'int' '&&'
|   |       | |-ImplicitCastExpr 0x55643e538660 <col:55> 'int' <IntegralCast>
|   |       | | `-ImplicitCastExpr 0x55643e538648 <col:55> '_Bool' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x55643e538608 <col:55> '_Bool' lvalue Var 0x55643e537d70 'x$w_buff1_used' '_Bool'
|   |       | `-ImplicitCastExpr 0x55643e538690 <col:73> 'int' <IntegralCast>
|   |       |   `-ImplicitCastExpr 0x55643e538678 <col:73> '_Bool' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x55643e538628 <col:73> '_Bool' lvalue Var 0x55643e537958 'x$r_buff1_thd1' '_Bool'
|   |       |-ImplicitCastExpr 0x55643e538708 <col:90> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x55643e5386c8 <col:90> 'int' lvalue Var 0x55643e537cf8 'x$w_buff1' 'int'
|   |       `-ImplicitCastExpr 0x55643e538720 <col:102> 'int' <LValueToRValue>
|   |         `-DeclRefExpr 0x55643e5386e8 <col:102> 'int' lvalue Var 0x55643e537570 'x' 'int'
|   |-BinaryOperator 0x55643e5389d8 <line:713:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x55643e5387f0 <col:3> '_Bool' lvalue Var 0x55643e537c78 'x$w_buff0_used' '_Bool'
|   | `-ImplicitCastExpr 0x55643e5389c0 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55643e538990 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x55643e5388b0 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x55643e538868 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x55643e538850 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x55643e538810 <col:20> '_Bool' lvalue Var 0x55643e537c78 'x$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x55643e538898 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x55643e538880 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x55643e538830 <col:38> '_Bool' lvalue Var 0x55643e537778 'x$r_buff0_thd1' '_Bool'
|   |     |-ImplicitCastExpr 0x55643e538948 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x55643e538900 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x55643e5388d0 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x55643e538978 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x55643e538960 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x55643e538928 <col:66> '_Bool' lvalue Var 0x55643e537c78 'x$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x55643e538cd8 <line:714:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x55643e5389f8 <col:3> '_Bool' lvalue Var 0x55643e537d70 'x$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x55643e538cc0 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55643e538c90 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x55643e538bb0 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x55643e538ab8 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x55643e538a70 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x55643e538a58 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x55643e538a18 <col:20> '_Bool' lvalue Var 0x55643e537c78 'x$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x55643e538aa0 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x55643e538a88 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x55643e538a38 <col:38> '_Bool' lvalue Var 0x55643e537778 'x$r_buff0_thd1' '_Bool'
|   |     | `-BinaryOperator 0x55643e538b90 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x55643e538b48 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x55643e538b30 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x55643e538ad8 <col:56> '_Bool' lvalue Var 0x55643e537d70 'x$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x55643e538b78 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x55643e538b60 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x55643e538b10 <col:74> '_Bool' lvalue Var 0x55643e537958 'x$r_buff1_thd1' '_Bool'
|   |     |-ImplicitCastExpr 0x55643e538c48 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x55643e538c00 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x55643e538bd0 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x55643e538c78 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x55643e538c60 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x55643e538c28 <col:102> '_Bool' lvalue Var 0x55643e537d70 'x$w_buff1_used' '_Bool'
|   |-BinaryOperator 0x55643e538ee0 <line:715:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x55643e538cf8 <col:3> '_Bool' lvalue Var 0x55643e537778 'x$r_buff0_thd1' '_Bool'
|   | `-ImplicitCastExpr 0x55643e538ec8 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55643e538e98 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x55643e538db8 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x55643e538d70 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x55643e538d58 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x55643e538d18 <col:20> '_Bool' lvalue Var 0x55643e537c78 'x$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x55643e538da0 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x55643e538d88 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x55643e538d38 <col:38> '_Bool' lvalue Var 0x55643e537778 'x$r_buff0_thd1' '_Bool'
|   |     |-ImplicitCastExpr 0x55643e538e50 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x55643e538e08 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x55643e538dd8 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x55643e538e80 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x55643e538e68 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x55643e538e30 <col:66> '_Bool' lvalue Var 0x55643e537778 'x$r_buff0_thd1' '_Bool'
|   |-BinaryOperator 0x55643e5391c8 <line:716:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x55643e538f00 <col:3> '_Bool' lvalue Var 0x55643e537958 'x$r_buff1_thd1' '_Bool'
|   | `-ImplicitCastExpr 0x55643e5391b0 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55643e539180 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x55643e5390a0 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x55643e538fc0 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x55643e538f78 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x55643e538f60 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x55643e538f20 <col:20> '_Bool' lvalue Var 0x55643e537c78 'x$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x55643e538fa8 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x55643e538f90 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x55643e538f40 <col:38> '_Bool' lvalue Var 0x55643e537778 'x$r_buff0_thd1' '_Bool'
|   |     | `-BinaryOperator 0x55643e539080 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x55643e539038 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x55643e539020 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x55643e538fe0 <col:56> '_Bool' lvalue Var 0x55643e537d70 'x$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x55643e539068 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x55643e539050 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x55643e539000 <col:74> '_Bool' lvalue Var 0x55643e537958 'x$r_buff1_thd1' '_Bool'
|   |     |-ImplicitCastExpr 0x55643e539138 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x55643e5390f0 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x55643e5390c0 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x55643e539168 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x55643e539150 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x55643e539118 <col:102> '_Bool' lvalue Var 0x55643e537958 'x$r_buff1_thd1' '_Bool'
|   |-CallExpr 0x55643e539220 <line:717:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x55643e539208 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55643e5391e8 <col:3> 'void ()' Function 0x55643e4ddf00 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x55643e539278 <line:718:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x55643e539260 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55643e539240 <col:3> 'void ()' Function 0x55643e4dde40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x55643e539330 <line:719:3, col:41> 'int' '='
|   | |-DeclRefExpr 0x55643e539298 <col:3> 'int' lvalue Var 0x55643e537120 '__unbuffered_cnt' 'int'
|   | `-BinaryOperator 0x55643e539310 <col:22, col:41> 'int' '+'
|   |   |-ImplicitCastExpr 0x55643e5392f8 <col:22> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x55643e5392b8 <col:22> 'int' lvalue Var 0x55643e537120 '__unbuffered_cnt' 'int'
|   |   `-IntegerLiteral 0x55643e5392d8 <col:41> 'int' 1
|   |-CallExpr 0x55643e539388 <line:720:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x55643e539370 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55643e539350 <col:3> 'void ()' Function 0x55643e4ddf00 '__VERIFIER_atomic_end' 'void ()'
|   `-ReturnStmt 0x55643e539438 <line:721:3, col:36>
|     `-CallExpr 0x55643e539418 <col:10, col:36> 'void *'
|       `-ImplicitCastExpr 0x55643e539400 <col:10> 'void *(*)(void)' <FunctionToPointerDecay>
|         `-DeclRefExpr 0x55643e5393a8 <col:10> 'void *(void)' Function 0x55643e4dd958 '__VERIFIER_nondet_pointer' 'void *(void)'
|-FunctionDecl 0x55643e539590 prev 0x55643e536c48 <line:723:1, line:751:1> line:723:8 used P1 'void *(void *)'
| |-ParmVarDecl 0x55643e5394f8 <col:11, col:17> col:17 arg 'void *'
| `-CompoundStmt 0x55643e53ad58 <line:724:1, line:751:1>
|   |-CallExpr 0x55643e539670 <line:725:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x55643e539658 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55643e539638 <col:3> 'void ()' Function 0x55643e4dde40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x55643e5396e8 <line:726:3, col:15> 'int' '='
|   | |-DeclRefExpr 0x55643e539690 <col:3> 'int' lvalue Var 0x55643e537cf8 'x$w_buff1' 'int'
|   | `-ImplicitCastExpr 0x55643e5396d0 <col:15> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x55643e5396b0 <col:15> 'int' lvalue Var 0x55643e537c00 'x$w_buff0' 'int'
|   |-BinaryOperator 0x55643e539748 <line:727:3, col:15> 'int' '='
|   | |-DeclRefExpr 0x55643e539708 <col:3> 'int' lvalue Var 0x55643e537c00 'x$w_buff0' 'int'
|   | `-IntegerLiteral 0x55643e539728 <col:15> 'int' 2
|   |-BinaryOperator 0x55643e5397c0 <line:728:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x55643e539768 <col:3> '_Bool' lvalue Var 0x55643e537d70 'x$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x55643e5397a8 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x55643e539788 <col:20> '_Bool' lvalue Var 0x55643e537c78 'x$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x55643e539858 <line:729:3, col:27> '_Bool' '='
|   | |-DeclRefExpr 0x55643e5397e0 <col:3> '_Bool' lvalue Var 0x55643e537c78 'x$w_buff0_used' '_Bool'
|   | `-CStyleCastExpr 0x55643e539830 <col:20, col:27> '_Bool' <IntegralToBoolean>
|   |   `-IntegerLiteral 0x55643e539800 <col:27> 'int' 1
|   |-CallExpr 0x55643e5399d8 <line:730:3, col:56> 'void'
|   | |-ImplicitCastExpr 0x55643e5399c0 <col:3> 'void (*)(int)' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x55643e539878 <col:3> 'void (int)' Function 0x55643e4ddbc8 '__VERIFIER_assert' 'void (int)'
|   | `-UnaryOperator 0x55643e539978 <col:21, col:55> 'int' prefix '!' cannot overflow
|   |   `-ParenExpr 0x55643e539958 <col:22, col:55> 'int'
|   |     `-BinaryOperator 0x55643e539938 <col:23, col:41> 'int' '&&'
|   |       |-ImplicitCastExpr 0x55643e5398f0 <col:23> 'int' <IntegralCast>
|   |       | `-ImplicitCastExpr 0x55643e5398d8 <col:23> '_Bool' <LValueToRValue>
|   |       |   `-DeclRefExpr 0x55643e539898 <col:23> '_Bool' lvalue Var 0x55643e537d70 'x$w_buff1_used' '_Bool'
|   |       `-ImplicitCastExpr 0x55643e539920 <col:41> 'int' <IntegralCast>
|   |         `-ImplicitCastExpr 0x55643e539908 <col:41> '_Bool' <LValueToRValue>
|   |           `-DeclRefExpr 0x55643e5398b8 <col:41> '_Bool' lvalue Var 0x55643e537c78 'x$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x55643e539a58 <line:731:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x55643e539a00 <col:3> '_Bool' lvalue Var 0x55643e5378e0 'x$r_buff1_thd0' '_Bool'
|   | `-ImplicitCastExpr 0x55643e539a40 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x55643e539a20 <col:20> '_Bool' lvalue Var 0x55643e537700 'x$r_buff0_thd0' '_Bool'
|   |-BinaryOperator 0x55643e539ad0 <line:732:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x55643e539a78 <col:3> '_Bool' lvalue Var 0x55643e537958 'x$r_buff1_thd1' '_Bool'
|   | `-ImplicitCastExpr 0x55643e539ab8 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x55643e539a98 <col:20> '_Bool' lvalue Var 0x55643e537778 'x$r_buff0_thd1' '_Bool'
|   |-BinaryOperator 0x55643e539b58 <line:733:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x55643e539af0 <col:3> '_Bool' lvalue Var 0x55643e5379d0 'x$r_buff1_thd2' '_Bool'
|   | `-ImplicitCastExpr 0x55643e539b40 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x55643e539b20 <col:20> '_Bool' lvalue Var 0x55643e5377f0 'x$r_buff0_thd2' '_Bool'
|   |-BinaryOperator 0x55643e539bd0 <line:734:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x55643e539b78 <col:3> '_Bool' lvalue Var 0x55643e537a48 'x$r_buff1_thd3' '_Bool'
|   | `-ImplicitCastExpr 0x55643e539bb8 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x55643e539b98 <col:20> '_Bool' lvalue Var 0x55643e537868 'x$r_buff0_thd3' '_Bool'
|   |-BinaryOperator 0x55643e539c68 <line:735:3, col:27> '_Bool' '='
|   | |-DeclRefExpr 0x55643e539bf0 <col:3> '_Bool' lvalue Var 0x55643e5377f0 'x$r_buff0_thd2' '_Bool'
|   | `-CStyleCastExpr 0x55643e539c40 <col:20, col:27> '_Bool' <IntegralToBoolean>
|   |   `-IntegerLiteral 0x55643e539c10 <col:27> 'int' 1
|   |-CallExpr 0x55643e539cc0 <line:736:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x55643e539ca8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55643e539c88 <col:3> 'void ()' Function 0x55643e4ddf00 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x55643e539d18 <line:737:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x55643e539d00 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55643e539ce0 <col:3> 'void ()' Function 0x55643e4dde40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x55643e539d78 <line:738:3, col:7> 'int' '='
|   | |-DeclRefExpr 0x55643e539d38 <col:3> 'int' lvalue Var 0x55643e537e70 'y' 'int'
|   | `-IntegerLiteral 0x55643e539d58 <col:7> 'int' 1
|   |-CallExpr 0x55643e539dd0 <line:739:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x55643e539db8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55643e539d98 <col:3> 'void ()' Function 0x55643e4ddf00 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x55643e539e28 <line:740:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x55643e539e10 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55643e539df0 <col:3> 'void ()' Function 0x55643e4dde40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x55643e53a110 <line:741:3, col:103> 'int' '='
|   | |-DeclRefExpr 0x55643e539e48 <col:3> 'int' lvalue Var 0x55643e537570 'x' 'int'
|   | `-ConditionalOperator 0x55643e53a0e0 <col:7, col:103> 'int'
|   |   |-BinaryOperator 0x55643e539f08 <col:7, col:25> 'int' '&&'
|   |   | |-ImplicitCastExpr 0x55643e539ec0 <col:7> 'int' <IntegralCast>
|   |   | | `-ImplicitCastExpr 0x55643e539ea8 <col:7> '_Bool' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x55643e539e68 <col:7> '_Bool' lvalue Var 0x55643e537c78 'x$w_buff0_used' '_Bool'
|   |   | `-ImplicitCastExpr 0x55643e539ef0 <col:25> 'int' <IntegralCast>
|   |   |   `-ImplicitCastExpr 0x55643e539ed8 <col:25> '_Bool' <LValueToRValue>
|   |   |     `-DeclRefExpr 0x55643e539e88 <col:25> '_Bool' lvalue Var 0x55643e5377f0 'x$r_buff0_thd2' '_Bool'
|   |   |-ImplicitCastExpr 0x55643e53a0c8 <col:42> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x55643e539f28 <col:42> 'int' lvalue Var 0x55643e537c00 'x$w_buff0' 'int'
|   |   `-ParenExpr 0x55643e53a0a8 <col:54, col:103> 'int'
|   |     `-ConditionalOperator 0x55643e53a078 <col:55, col:102> 'int'
|   |       |-BinaryOperator 0x55643e539fe8 <col:55, col:73> 'int' '&&'
|   |       | |-ImplicitCastExpr 0x55643e539fa0 <col:55> 'int' <IntegralCast>
|   |       | | `-ImplicitCastExpr 0x55643e539f88 <col:55> '_Bool' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x55643e539f48 <col:55> '_Bool' lvalue Var 0x55643e537d70 'x$w_buff1_used' '_Bool'
|   |       | `-ImplicitCastExpr 0x55643e539fd0 <col:73> 'int' <IntegralCast>
|   |       |   `-ImplicitCastExpr 0x55643e539fb8 <col:73> '_Bool' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x55643e539f68 <col:73> '_Bool' lvalue Var 0x55643e5379d0 'x$r_buff1_thd2' '_Bool'
|   |       |-ImplicitCastExpr 0x55643e53a048 <col:90> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x55643e53a008 <col:90> 'int' lvalue Var 0x55643e537cf8 'x$w_buff1' 'int'
|   |       `-ImplicitCastExpr 0x55643e53a060 <col:102> 'int' <LValueToRValue>
|   |         `-DeclRefExpr 0x55643e53a028 <col:102> 'int' lvalue Var 0x55643e537570 'x' 'int'
|   |-BinaryOperator 0x55643e53a318 <line:742:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x55643e53a130 <col:3> '_Bool' lvalue Var 0x55643e537c78 'x$w_buff0_used' '_Bool'
|   | `-ImplicitCastExpr 0x55643e53a300 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55643e53a2d0 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x55643e53a1f0 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x55643e53a1a8 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x55643e53a190 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x55643e53a150 <col:20> '_Bool' lvalue Var 0x55643e537c78 'x$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x55643e53a1d8 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x55643e53a1c0 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x55643e53a170 <col:38> '_Bool' lvalue Var 0x55643e5377f0 'x$r_buff0_thd2' '_Bool'
|   |     |-ImplicitCastExpr 0x55643e53a288 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x55643e53a240 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x55643e53a210 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x55643e53a2b8 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x55643e53a2a0 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x55643e53a268 <col:66> '_Bool' lvalue Var 0x55643e537c78 'x$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x55643e53a600 <line:743:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x55643e53a338 <col:3> '_Bool' lvalue Var 0x55643e537d70 'x$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x55643e53a5e8 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55643e53a5b8 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x55643e53a4d8 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x55643e53a3f8 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x55643e53a3b0 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x55643e53a398 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x55643e53a358 <col:20> '_Bool' lvalue Var 0x55643e537c78 'x$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x55643e53a3e0 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x55643e53a3c8 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x55643e53a378 <col:38> '_Bool' lvalue Var 0x55643e5377f0 'x$r_buff0_thd2' '_Bool'
|   |     | `-BinaryOperator 0x55643e53a4b8 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x55643e53a470 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x55643e53a458 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x55643e53a418 <col:56> '_Bool' lvalue Var 0x55643e537d70 'x$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x55643e53a4a0 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x55643e53a488 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x55643e53a438 <col:74> '_Bool' lvalue Var 0x55643e5379d0 'x$r_buff1_thd2' '_Bool'
|   |     |-ImplicitCastExpr 0x55643e53a570 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x55643e53a528 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x55643e53a4f8 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x55643e53a5a0 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x55643e53a588 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x55643e53a550 <col:102> '_Bool' lvalue Var 0x55643e537d70 'x$w_buff1_used' '_Bool'
|   |-BinaryOperator 0x55643e53a808 <line:744:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x55643e53a620 <col:3> '_Bool' lvalue Var 0x55643e5377f0 'x$r_buff0_thd2' '_Bool'
|   | `-ImplicitCastExpr 0x55643e53a7f0 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55643e53a7c0 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x55643e53a6e0 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x55643e53a698 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x55643e53a680 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x55643e53a640 <col:20> '_Bool' lvalue Var 0x55643e537c78 'x$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x55643e53a6c8 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x55643e53a6b0 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x55643e53a660 <col:38> '_Bool' lvalue Var 0x55643e5377f0 'x$r_buff0_thd2' '_Bool'
|   |     |-ImplicitCastExpr 0x55643e53a778 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x55643e53a730 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x55643e53a700 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x55643e53a7a8 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x55643e53a790 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x55643e53a758 <col:66> '_Bool' lvalue Var 0x55643e5377f0 'x$r_buff0_thd2' '_Bool'
|   |-BinaryOperator 0x55643e53aaf0 <line:745:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x55643e53a828 <col:3> '_Bool' lvalue Var 0x55643e5379d0 'x$r_buff1_thd2' '_Bool'
|   | `-ImplicitCastExpr 0x55643e53aad8 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55643e53aaa8 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x55643e53a9c8 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x55643e53a8e8 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x55643e53a8a0 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x55643e53a888 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x55643e53a848 <col:20> '_Bool' lvalue Var 0x55643e537c78 'x$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x55643e53a8d0 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x55643e53a8b8 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x55643e53a868 <col:38> '_Bool' lvalue Var 0x55643e5377f0 'x$r_buff0_thd2' '_Bool'
|   |     | `-BinaryOperator 0x55643e53a9a8 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x55643e53a960 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x55643e53a948 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x55643e53a908 <col:56> '_Bool' lvalue Var 0x55643e537d70 'x$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x55643e53a990 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x55643e53a978 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x55643e53a928 <col:74> '_Bool' lvalue Var 0x55643e5379d0 'x$r_buff1_thd2' '_Bool'
|   |     |-ImplicitCastExpr 0x55643e53aa60 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x55643e53aa18 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x55643e53a9e8 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x55643e53aa90 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x55643e53aa78 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x55643e53aa40 <col:102> '_Bool' lvalue Var 0x55643e5379d0 'x$r_buff1_thd2' '_Bool'
|   |-CallExpr 0x55643e53ab68 <line:746:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x55643e53ab50 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55643e53ab30 <col:3> 'void ()' Function 0x55643e4ddf00 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x55643e53abc0 <line:747:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x55643e53aba8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55643e53ab88 <col:3> 'void ()' Function 0x55643e4dde40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x55643e53ac78 <line:748:3, col:41> 'int' '='
|   | |-DeclRefExpr 0x55643e53abe0 <col:3> 'int' lvalue Var 0x55643e537120 '__unbuffered_cnt' 'int'
|   | `-BinaryOperator 0x55643e53ac58 <col:22, col:41> 'int' '+'
|   |   |-ImplicitCastExpr 0x55643e53ac40 <col:22> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x55643e53ac00 <col:22> 'int' lvalue Var 0x55643e537120 '__unbuffered_cnt' 'int'
|   |   `-IntegerLiteral 0x55643e53ac20 <col:41> 'int' 1
|   |-CallExpr 0x55643e53acd0 <line:749:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x55643e53acb8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55643e53ac98 <col:3> 'void ()' Function 0x55643e4ddf00 '__VERIFIER_atomic_end' 'void ()'
|   `-ReturnStmt 0x55643e53ad48 <line:750:3, col:36>
|     `-CallExpr 0x55643e53ad28 <col:10, col:36> 'void *'
|       `-ImplicitCastExpr 0x55643e53ad10 <col:10> 'void *(*)(void)' <FunctionToPointerDecay>
|         `-DeclRefExpr 0x55643e53acf0 <col:10> 'void *(void)' Function 0x55643e4dd958 '__VERIFIER_nondet_pointer' 'void *(void)'
|-FunctionDecl 0x55643e53aee8 prev 0x55643e536da0 <line:752:1, line:771:1> line:752:8 used P2 'void *(void *)'
| |-ParmVarDecl 0x55643e53ae50 <col:11, col:17> col:17 arg 'void *'
| `-CompoundStmt 0x55643e53c148 <line:753:1, line:771:1>
|   |-CallExpr 0x55643e53afc8 <line:754:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x55643e53afb0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55643e53af90 <col:3> 'void ()' Function 0x55643e4dde40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x55643e53b040 <line:755:3, col:25> 'int' '='
|   | |-DeclRefExpr 0x55643e53afe8 <col:3> 'int' lvalue Var 0x55643e537240 '__unbuffered_p2_EAX' 'int'
|   | `-ImplicitCastExpr 0x55643e53b028 <col:25> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x55643e53b008 <col:25> 'int' lvalue Var 0x55643e537e70 'y' 'int'
|   |-CallExpr 0x55643e53b098 <line:756:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x55643e53b080 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55643e53b060 <col:3> 'void ()' Function 0x55643e4ddf00 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x55643e53b0f0 <line:757:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x55643e53b0d8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55643e53b0b8 <col:3> 'void ()' Function 0x55643e4dde40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x55643e53b168 <line:758:3, col:25> 'int' '='
|   | |-DeclRefExpr 0x55643e53b110 <col:3> 'int' lvalue Var 0x55643e537360 '__unbuffered_p2_EBX' 'int'
|   | `-ImplicitCastExpr 0x55643e53b150 <col:25> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x55643e53b130 <col:25> 'int' lvalue Var 0x55643e537f90 'z' 'int'
|   |-CallExpr 0x55643e53b1c0 <line:759:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x55643e53b1a8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55643e53b188 <col:3> 'void ()' Function 0x55643e4ddf00 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x55643e53b218 <line:760:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x55643e53b200 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55643e53b1e0 <col:3> 'void ()' Function 0x55643e4dde40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x55643e53b500 <line:761:3, col:103> 'int' '='
|   | |-DeclRefExpr 0x55643e53b238 <col:3> 'int' lvalue Var 0x55643e537570 'x' 'int'
|   | `-ConditionalOperator 0x55643e53b4d0 <col:7, col:103> 'int'
|   |   |-BinaryOperator 0x55643e53b2f8 <col:7, col:25> 'int' '&&'
|   |   | |-ImplicitCastExpr 0x55643e53b2b0 <col:7> 'int' <IntegralCast>
|   |   | | `-ImplicitCastExpr 0x55643e53b298 <col:7> '_Bool' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x55643e53b258 <col:7> '_Bool' lvalue Var 0x55643e537c78 'x$w_buff0_used' '_Bool'
|   |   | `-ImplicitCastExpr 0x55643e53b2e0 <col:25> 'int' <IntegralCast>
|   |   |   `-ImplicitCastExpr 0x55643e53b2c8 <col:25> '_Bool' <LValueToRValue>
|   |   |     `-DeclRefExpr 0x55643e53b278 <col:25> '_Bool' lvalue Var 0x55643e537868 'x$r_buff0_thd3' '_Bool'
|   |   |-ImplicitCastExpr 0x55643e53b4b8 <col:42> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x55643e53b318 <col:42> 'int' lvalue Var 0x55643e537c00 'x$w_buff0' 'int'
|   |   `-ParenExpr 0x55643e53b498 <col:54, col:103> 'int'
|   |     `-ConditionalOperator 0x55643e53b468 <col:55, col:102> 'int'
|   |       |-BinaryOperator 0x55643e53b3d8 <col:55, col:73> 'int' '&&'
|   |       | |-ImplicitCastExpr 0x55643e53b390 <col:55> 'int' <IntegralCast>
|   |       | | `-ImplicitCastExpr 0x55643e53b378 <col:55> '_Bool' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x55643e53b338 <col:55> '_Bool' lvalue Var 0x55643e537d70 'x$w_buff1_used' '_Bool'
|   |       | `-ImplicitCastExpr 0x55643e53b3c0 <col:73> 'int' <IntegralCast>
|   |       |   `-ImplicitCastExpr 0x55643e53b3a8 <col:73> '_Bool' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x55643e53b358 <col:73> '_Bool' lvalue Var 0x55643e537a48 'x$r_buff1_thd3' '_Bool'
|   |       |-ImplicitCastExpr 0x55643e53b438 <col:90> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x55643e53b3f8 <col:90> 'int' lvalue Var 0x55643e537cf8 'x$w_buff1' 'int'
|   |       `-ImplicitCastExpr 0x55643e53b450 <col:102> 'int' <LValueToRValue>
|   |         `-DeclRefExpr 0x55643e53b418 <col:102> 'int' lvalue Var 0x55643e537570 'x' 'int'
|   |-BinaryOperator 0x55643e53b708 <line:762:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x55643e53b520 <col:3> '_Bool' lvalue Var 0x55643e537c78 'x$w_buff0_used' '_Bool'
|   | `-ImplicitCastExpr 0x55643e53b6f0 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55643e53b6c0 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x55643e53b5e0 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x55643e53b598 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x55643e53b580 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x55643e53b540 <col:20> '_Bool' lvalue Var 0x55643e537c78 'x$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x55643e53b5c8 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x55643e53b5b0 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x55643e53b560 <col:38> '_Bool' lvalue Var 0x55643e537868 'x$r_buff0_thd3' '_Bool'
|   |     |-ImplicitCastExpr 0x55643e53b678 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x55643e53b630 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x55643e53b600 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x55643e53b6a8 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x55643e53b690 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x55643e53b658 <col:66> '_Bool' lvalue Var 0x55643e537c78 'x$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x55643e53b9f0 <line:763:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x55643e53b728 <col:3> '_Bool' lvalue Var 0x55643e537d70 'x$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x55643e53b9d8 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55643e53b9a8 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x55643e53b8c8 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x55643e53b7e8 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x55643e53b7a0 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x55643e53b788 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x55643e53b748 <col:20> '_Bool' lvalue Var 0x55643e537c78 'x$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x55643e53b7d0 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x55643e53b7b8 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x55643e53b768 <col:38> '_Bool' lvalue Var 0x55643e537868 'x$r_buff0_thd3' '_Bool'
|   |     | `-BinaryOperator 0x55643e53b8a8 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x55643e53b860 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x55643e53b848 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x55643e53b808 <col:56> '_Bool' lvalue Var 0x55643e537d70 'x$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x55643e53b890 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x55643e53b878 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x55643e53b828 <col:74> '_Bool' lvalue Var 0x55643e537a48 'x$r_buff1_thd3' '_Bool'
|   |     |-ImplicitCastExpr 0x55643e53b960 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x55643e53b918 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x55643e53b8e8 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x55643e53b990 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x55643e53b978 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x55643e53b940 <col:102> '_Bool' lvalue Var 0x55643e537d70 'x$w_buff1_used' '_Bool'
|   |-BinaryOperator 0x55643e53bc18 <line:764:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x55643e53ba10 <col:3> '_Bool' lvalue Var 0x55643e537868 'x$r_buff0_thd3' '_Bool'
|   | `-ImplicitCastExpr 0x55643e53bc00 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55643e53bbd0 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x55643e53bad0 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x55643e53ba88 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x55643e53ba70 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x55643e53ba30 <col:20> '_Bool' lvalue Var 0x55643e537c78 'x$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x55643e53bab8 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x55643e53baa0 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x55643e53ba50 <col:38> '_Bool' lvalue Var 0x55643e537868 'x$r_buff0_thd3' '_Bool'
|   |     |-ImplicitCastExpr 0x55643e53bb88 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x55643e53bb40 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x55643e53baf0 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x55643e53bbb8 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x55643e53bba0 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x55643e53bb68 <col:66> '_Bool' lvalue Var 0x55643e537868 'x$r_buff0_thd3' '_Bool'
|   |-BinaryOperator 0x55643e53bf00 <line:765:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x55643e53bc38 <col:3> '_Bool' lvalue Var 0x55643e537a48 'x$r_buff1_thd3' '_Bool'
|   | `-ImplicitCastExpr 0x55643e53bee8 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55643e53beb8 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x55643e53bdd8 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x55643e53bcf8 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x55643e53bcb0 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x55643e53bc98 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x55643e53bc58 <col:20> '_Bool' lvalue Var 0x55643e537c78 'x$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x55643e53bce0 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x55643e53bcc8 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x55643e53bc78 <col:38> '_Bool' lvalue Var 0x55643e537868 'x$r_buff0_thd3' '_Bool'
|   |     | `-BinaryOperator 0x55643e53bdb8 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x55643e53bd70 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x55643e53bd58 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x55643e53bd18 <col:56> '_Bool' lvalue Var 0x55643e537d70 'x$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x55643e53bda0 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x55643e53bd88 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x55643e53bd38 <col:74> '_Bool' lvalue Var 0x55643e537a48 'x$r_buff1_thd3' '_Bool'
|   |     |-ImplicitCastExpr 0x55643e53be70 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x55643e53be28 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x55643e53bdf8 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x55643e53bea0 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x55643e53be88 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x55643e53be50 <col:102> '_Bool' lvalue Var 0x55643e537a48 'x$r_buff1_thd3' '_Bool'
|   |-CallExpr 0x55643e53bf58 <line:766:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x55643e53bf40 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55643e53bf20 <col:3> 'void ()' Function 0x55643e4ddf00 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x55643e53bfb0 <line:767:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x55643e53bf98 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55643e53bf78 <col:3> 'void ()' Function 0x55643e4dde40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x55643e53c068 <line:768:3, col:41> 'int' '='
|   | |-DeclRefExpr 0x55643e53bfd0 <col:3> 'int' lvalue Var 0x55643e537120 '__unbuffered_cnt' 'int'
|   | `-BinaryOperator 0x55643e53c048 <col:22, col:41> 'int' '+'
|   |   |-ImplicitCastExpr 0x55643e53c030 <col:22> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x55643e53bff0 <col:22> 'int' lvalue Var 0x55643e537120 '__unbuffered_cnt' 'int'
|   |   `-IntegerLiteral 0x55643e53c010 <col:41> 'int' 1
|   |-CallExpr 0x55643e53c0c0 <line:769:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x55643e53c0a8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55643e53c088 <col:3> 'void ()' Function 0x55643e4ddf00 '__VERIFIER_atomic_end' 'void ()'
|   `-ReturnStmt 0x55643e53c138 <line:770:3, col:36>
|     `-CallExpr 0x55643e53c118 <col:10, col:36> 'void *'
|       `-ImplicitCastExpr 0x55643e53c100 <col:10> 'void *(*)(void)' <FunctionToPointerDecay>
|         `-DeclRefExpr 0x55643e53c0e0 <col:10> 'void *(void)' Function 0x55643e4dd958 '__VERIFIER_nondet_pointer' 'void *(void)'
|-FunctionDecl 0x55643e53c200 prev 0x55643e536e68 <line:772:1, line:774:1> line:772:6 fence 'void ()'
| `-CompoundStmt 0x55643e53c2a0 <line:773:1, line:774:1>
|-FunctionDecl 0x55643e53c2d0 prev 0x55643e536f28 <line:775:1, line:777:1> line:775:6 isync 'void ()'
| `-CompoundStmt 0x55643e53c370 <line:776:1, line:777:1>
|-FunctionDecl 0x55643e53c3a0 prev 0x55643e536fe8 <line:778:1, line:780:1> line:778:6 lwfence 'void ()'
| `-CompoundStmt 0x55643e53c440 <line:779:1, line:780:1>
`-FunctionDecl 0x55643e53c4a8 <line:781:1, line:818:1> line:781:5 main 'int ()'
  `-CompoundStmt 0x55643e540b90 <line:782:1, line:818:1>
    |-DeclStmt 0x55643e53c5c0 <line:783:3, col:18>
    | `-VarDecl 0x55643e53c558 <col:3, col:13> col:13 used t2292 'pthread_t':'unsigned long'
    |-CallExpr 0x55643e53c7c8 <line:784:3, col:54> 'int'
    | |-ImplicitCastExpr 0x55643e53c7b0 <col:3> 'int (*)(pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x55643e53c5d8 <col:3> 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' Function 0x55643e51e488 'pthread_create' 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)'
    | |-UnaryOperator 0x55643e53c618 <col:18, col:19> 'pthread_t *' prefix '&' cannot overflow
    | | `-DeclRefExpr 0x55643e53c5f8 <col:19> 'pthread_t':'unsigned long' lvalue Var 0x55643e53c558 't2292' 'pthread_t':'unsigned long'
    | |-ImplicitCastExpr 0x55643e53c808 <col:26, col:36> 'const pthread_attr_t *' <NullToPointer>
    | | `-ParenExpr 0x55643e53c690 <col:26, col:36> 'void *'
    | |   `-CStyleCastExpr 0x55643e53c668 <col:27, col:35> 'void *' <NullToPointer>
    | |     `-IntegerLiteral 0x55643e53c630 <col:35> 'int' 0
    | |-ImplicitCastExpr 0x55643e53c820 <col:39> 'void *(*)(void *)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x55643e53c6b0 <col:39> 'void *(void *)' Function 0x55643e5381b8 'P0' 'void *(void *)'
    | `-ParenExpr 0x55643e53c730 <col:43, col:53> 'void *'
    |   `-CStyleCastExpr 0x55643e53c708 <col:44, col:52> 'void *' <NullToPointer>
    |     `-IntegerLiteral 0x55643e53c6d0 <col:52> 'int' 0
    |-DeclStmt 0x55643e53c8b0 <line:785:3, col:18>
    | `-VarDecl 0x55643e53c848 <col:3, col:13> col:13 used t2293 'pthread_t':'unsigned long'
    |-CallExpr 0x55643e53ca58 <line:786:3, col:54> 'int'
    | |-ImplicitCastExpr 0x55643e53ca40 <col:3> 'int (*)(pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x55643e53c8c8 <col:3> 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' Function 0x55643e51e488 'pthread_create' 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)'
    | |-UnaryOperator 0x55643e53c908 <col:18, col:19> 'pthread_t *' prefix '&' cannot overflow
    | | `-DeclRefExpr 0x55643e53c8e8 <col:19> 'pthread_t':'unsigned long' lvalue Var 0x55643e53c848 't2293' 'pthread_t':'unsigned long'
    | |-ImplicitCastExpr 0x55643e53ca98 <col:26, col:36> 'const pthread_attr_t *' <NullToPointer>
    | | `-ParenExpr 0x55643e53c980 <col:26, col:36> 'void *'
    | |   `-CStyleCastExpr 0x55643e53c958 <col:27, col:35> 'void *' <NullToPointer>
    | |     `-IntegerLiteral 0x55643e53c920 <col:35> 'int' 0
    | |-ImplicitCastExpr 0x55643e53cab0 <col:39> 'void *(*)(void *)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x55643e53c9a0 <col:39> 'void *(void *)' Function 0x55643e539590 'P1' 'void *(void *)'
    | `-ParenExpr 0x55643e53ca20 <col:43, col:53> 'void *'
    |   `-CStyleCastExpr 0x55643e53c9f8 <col:44, col:52> 'void *' <NullToPointer>
    |     `-IntegerLiteral 0x55643e53c9c0 <col:52> 'int' 0
    |-DeclStmt 0x55643e53cb50 <line:787:3, col:18>
    | `-VarDecl 0x55643e53cad8 <col:3, col:13> col:13 used t2294 'pthread_t':'unsigned long'
    |-CallExpr 0x55643e53ccf8 <line:788:3, col:54> 'int'
    | |-ImplicitCastExpr 0x55643e53cce0 <col:3> 'int (*)(pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x55643e53cb68 <col:3> 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' Function 0x55643e51e488 'pthread_create' 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)'
    | |-UnaryOperator 0x55643e53cba8 <col:18, col:19> 'pthread_t *' prefix '&' cannot overflow
    | | `-DeclRefExpr 0x55643e53cb88 <col:19> 'pthread_t':'unsigned long' lvalue Var 0x55643e53cad8 't2294' 'pthread_t':'unsigned long'
    | |-ImplicitCastExpr 0x55643e53cd38 <col:26, col:36> 'const pthread_attr_t *' <NullToPointer>
    | | `-ParenExpr 0x55643e53cc20 <col:26, col:36> 'void *'
    | |   `-CStyleCastExpr 0x55643e53cbf8 <col:27, col:35> 'void *' <NullToPointer>
    | |     `-IntegerLiteral 0x55643e53cbc0 <col:35> 'int' 0
    | |-ImplicitCastExpr 0x55643e53cd50 <col:39> 'void *(*)(void *)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x55643e53cc40 <col:39> 'void *(void *)' Function 0x55643e53aee8 'P2' 'void *(void *)'
    | `-ParenExpr 0x55643e53ccc0 <col:43, col:53> 'void *'
    |   `-CStyleCastExpr 0x55643e53cc98 <col:44, col:52> 'void *' <NullToPointer>
    |     `-IntegerLiteral 0x55643e53cc60 <col:52> 'int' 0
    |-CallExpr 0x55643e53cda0 <line:789:3, col:27> 'void'
    | `-ImplicitCastExpr 0x55643e53cd88 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x55643e53cd68 <col:3> 'void ()' Function 0x55643e4dde40 '__VERIFIER_atomic_begin' 'void ()'
    |-BinaryOperator 0x55643e53ce70 <line:790:3, col:41> '_Bool' '='
    | |-DeclRefExpr 0x55643e53cdc0 <col:3> '_Bool' lvalue Var 0x55643e5373f8 'main$tmp_guard0' '_Bool'
    | `-ImplicitCastExpr 0x55643e53ce58 <col:21, col:41> '_Bool' <IntegralToBoolean>
    |   `-BinaryOperator 0x55643e53ce38 <col:21, col:41> 'int' '=='
    |     |-ImplicitCastExpr 0x55643e53ce20 <col:21> 'int' <LValueToRValue>
    |     | `-DeclRefExpr 0x55643e53cde0 <col:21> 'int' lvalue Var 0x55643e537120 '__unbuffered_cnt' 'int'
    |     `-IntegerLiteral 0x55643e53ce00 <col:41> 'int' 3
    |-CallExpr 0x55643e53cec8 <line:791:3, col:25> 'void'
    | `-ImplicitCastExpr 0x55643e53ceb0 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x55643e53ce90 <col:3> 'void ()' Function 0x55643e4ddf00 '__VERIFIER_atomic_end' 'void ()'
    |-CallExpr 0x55643e53cf40 <line:792:3, col:36> 'void'
    | |-ImplicitCastExpr 0x55643e53cf28 <col:3> 'void (*)(int)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x55643e53cee8 <col:3> 'void (int)' Function 0x55643e4dd790 '__VERIFIER_assume' 'void (int)'
    | `-ImplicitCastExpr 0x55643e53cf80 <col:21> 'int' <IntegralCast>
    |   `-ImplicitCastExpr 0x55643e53cf68 <col:21> '_Bool' <LValueToRValue>
    |     `-DeclRefExpr 0x55643e53cf08 <col:21> '_Bool' lvalue Var 0x55643e5373f8 'main$tmp_guard0' '_Bool'
    |-CallExpr 0x55643e53cfd0 <line:793:3, col:27> 'void'
    | `-ImplicitCastExpr 0x55643e53cfb8 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x55643e53cf98 <col:3> 'void ()' Function 0x55643e4dde40 '__VERIFIER_atomic_begin' 'void ()'
    |-BinaryOperator 0x55643e53d2b8 <line:794:3, col:103> 'int' '='
    | |-DeclRefExpr 0x55643e53cff0 <col:3> 'int' lvalue Var 0x55643e537570 'x' 'int'
    | `-ConditionalOperator 0x55643e53d288 <col:7, col:103> 'int'
    |   |-BinaryOperator 0x55643e53d0b0 <col:7, col:25> 'int' '&&'
    |   | |-ImplicitCastExpr 0x55643e53d068 <col:7> 'int' <IntegralCast>
    |   | | `-ImplicitCastExpr 0x55643e53d050 <col:7> '_Bool' <LValueToRValue>
    |   | |   `-DeclRefExpr 0x55643e53d010 <col:7> '_Bool' lvalue Var 0x55643e537c78 'x$w_buff0_used' '_Bool'
    |   | `-ImplicitCastExpr 0x55643e53d098 <col:25> 'int' <IntegralCast>
    |   |   `-ImplicitCastExpr 0x55643e53d080 <col:25> '_Bool' <LValueToRValue>
    |   |     `-DeclRefExpr 0x55643e53d030 <col:25> '_Bool' lvalue Var 0x55643e537700 'x$r_buff0_thd0' '_Bool'
    |   |-ImplicitCastExpr 0x55643e53d270 <col:42> 'int' <LValueToRValue>
    |   | `-DeclRefExpr 0x55643e53d0d0 <col:42> 'int' lvalue Var 0x55643e537c00 'x$w_buff0' 'int'
    |   `-ParenExpr 0x55643e53d250 <col:54, col:103> 'int'
    |     `-ConditionalOperator 0x55643e53d220 <col:55, col:102> 'int'
    |       |-BinaryOperator 0x55643e53d190 <col:55, col:73> 'int' '&&'
    |       | |-ImplicitCastExpr 0x55643e53d148 <col:55> 'int' <IntegralCast>
    |       | | `-ImplicitCastExpr 0x55643e53d130 <col:55> '_Bool' <LValueToRValue>
    |       | |   `-DeclRefExpr 0x55643e53d0f0 <col:55> '_Bool' lvalue Var 0x55643e537d70 'x$w_buff1_used' '_Bool'
    |       | `-ImplicitCastExpr 0x55643e53d178 <col:73> 'int' <IntegralCast>
    |       |   `-ImplicitCastExpr 0x55643e53d160 <col:73> '_Bool' <LValueToRValue>
    |       |     `-DeclRefExpr 0x55643e53d110 <col:73> '_Bool' lvalue Var 0x55643e5378e0 'x$r_buff1_thd0' '_Bool'
    |       |-ImplicitCastExpr 0x55643e53d1f0 <col:90> 'int' <LValueToRValue>
    |       | `-DeclRefExpr 0x55643e53d1b0 <col:90> 'int' lvalue Var 0x55643e537cf8 'x$w_buff1' 'int'
    |       `-ImplicitCastExpr 0x55643e53d208 <col:102> 'int' <LValueToRValue>
    |         `-DeclRefExpr 0x55643e53d1d0 <col:102> 'int' lvalue Var 0x55643e537570 'x' 'int'
    |-BinaryOperator 0x55643e53d4c0 <line:795:3, col:66> '_Bool' '='
    | |-DeclRefExpr 0x55643e53d2d8 <col:3> '_Bool' lvalue Var 0x55643e537c78 'x$w_buff0_used' '_Bool'
    | `-ImplicitCastExpr 0x55643e53d4a8 <col:20, col:66> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x55643e53d478 <col:20, col:66> 'int'
    |     |-BinaryOperator 0x55643e53d398 <col:20, col:38> 'int' '&&'
    |     | |-ImplicitCastExpr 0x55643e53d350 <col:20> 'int' <IntegralCast>
    |     | | `-ImplicitCastExpr 0x55643e53d338 <col:20> '_Bool' <LValueToRValue>
    |     | |   `-DeclRefExpr 0x55643e53d2f8 <col:20> '_Bool' lvalue Var 0x55643e537c78 'x$w_buff0_used' '_Bool'
    |     | `-ImplicitCastExpr 0x55643e53d380 <col:38> 'int' <IntegralCast>
    |     |   `-ImplicitCastExpr 0x55643e53d368 <col:38> '_Bool' <LValueToRValue>
    |     |     `-DeclRefExpr 0x55643e53d318 <col:38> '_Bool' lvalue Var 0x55643e537700 'x$r_buff0_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x55643e53d430 <col:55, col:62> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x55643e53d3e8 <col:55, col:62> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x55643e53d3b8 <col:62> 'int' 0
    |     `-ImplicitCastExpr 0x55643e53d460 <col:66> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x55643e53d448 <col:66> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x55643e53d410 <col:66> '_Bool' lvalue Var 0x55643e537c78 'x$w_buff0_used' '_Bool'
    |-BinaryOperator 0x55643e53d7a8 <line:796:3, col:102> '_Bool' '='
    | |-DeclRefExpr 0x55643e53d4e0 <col:3> '_Bool' lvalue Var 0x55643e537d70 'x$w_buff1_used' '_Bool'
    | `-ImplicitCastExpr 0x55643e53d790 <col:20, col:102> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x55643e53d760 <col:20, col:102> 'int'
    |     |-BinaryOperator 0x55643e53d680 <col:20, col:74> 'int' '||'
    |     | |-BinaryOperator 0x55643e53d5a0 <col:20, col:38> 'int' '&&'
    |     | | |-ImplicitCastExpr 0x55643e53d558 <col:20> 'int' <IntegralCast>
    |     | | | `-ImplicitCastExpr 0x55643e53d540 <col:20> '_Bool' <LValueToRValue>
    |     | | |   `-DeclRefExpr 0x55643e53d500 <col:20> '_Bool' lvalue Var 0x55643e537c78 'x$w_buff0_used' '_Bool'
    |     | | `-ImplicitCastExpr 0x55643e53d588 <col:38> 'int' <IntegralCast>
    |     | |   `-ImplicitCastExpr 0x55643e53d570 <col:38> '_Bool' <LValueToRValue>
    |     | |     `-DeclRefExpr 0x55643e53d520 <col:38> '_Bool' lvalue Var 0x55643e537700 'x$r_buff0_thd0' '_Bool'
    |     | `-BinaryOperator 0x55643e53d660 <col:56, col:74> 'int' '&&'
    |     |   |-ImplicitCastExpr 0x55643e53d618 <col:56> 'int' <IntegralCast>
    |     |   | `-ImplicitCastExpr 0x55643e53d600 <col:56> '_Bool' <LValueToRValue>
    |     |   |   `-DeclRefExpr 0x55643e53d5c0 <col:56> '_Bool' lvalue Var 0x55643e537d70 'x$w_buff1_used' '_Bool'
    |     |   `-ImplicitCastExpr 0x55643e53d648 <col:74> 'int' <IntegralCast>
    |     |     `-ImplicitCastExpr 0x55643e53d630 <col:74> '_Bool' <LValueToRValue>
    |     |       `-DeclRefExpr 0x55643e53d5e0 <col:74> '_Bool' lvalue Var 0x55643e5378e0 'x$r_buff1_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x55643e53d718 <col:91, col:98> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x55643e53d6d0 <col:91, col:98> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x55643e53d6a0 <col:98> 'int' 0
    |     `-ImplicitCastExpr 0x55643e53d748 <col:102> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x55643e53d730 <col:102> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x55643e53d6f8 <col:102> '_Bool' lvalue Var 0x55643e537d70 'x$w_buff1_used' '_Bool'
    |-BinaryOperator 0x55643e53d9b0 <line:797:3, col:66> '_Bool' '='
    | |-DeclRefExpr 0x55643e53d7c8 <col:3> '_Bool' lvalue Var 0x55643e537700 'x$r_buff0_thd0' '_Bool'
    | `-ImplicitCastExpr 0x55643e53d998 <col:20, col:66> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x55643e53d968 <col:20, col:66> 'int'
    |     |-BinaryOperator 0x55643e53d888 <col:20, col:38> 'int' '&&'
    |     | |-ImplicitCastExpr 0x55643e53d840 <col:20> 'int' <IntegralCast>
    |     | | `-ImplicitCastExpr 0x55643e53d828 <col:20> '_Bool' <LValueToRValue>
    |     | |   `-DeclRefExpr 0x55643e53d7e8 <col:20> '_Bool' lvalue Var 0x55643e537c78 'x$w_buff0_used' '_Bool'
    |     | `-ImplicitCastExpr 0x55643e53d870 <col:38> 'int' <IntegralCast>
    |     |   `-ImplicitCastExpr 0x55643e53d858 <col:38> '_Bool' <LValueToRValue>
    |     |     `-DeclRefExpr 0x55643e53d808 <col:38> '_Bool' lvalue Var 0x55643e537700 'x$r_buff0_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x55643e53d920 <col:55, col:62> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x55643e53d8d8 <col:55, col:62> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x55643e53d8a8 <col:62> 'int' 0
    |     `-ImplicitCastExpr 0x55643e53d950 <col:66> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x55643e53d938 <col:66> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x55643e53d900 <col:66> '_Bool' lvalue Var 0x55643e537700 'x$r_buff0_thd0' '_Bool'
    |-BinaryOperator 0x55643e53dca8 <line:798:3, col:102> '_Bool' '='
    | |-DeclRefExpr 0x55643e53d9d0 <col:3> '_Bool' lvalue Var 0x55643e5378e0 'x$r_buff1_thd0' '_Bool'
    | `-ImplicitCastExpr 0x55643e53dc90 <col:20, col:102> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x55643e53dc60 <col:20, col:102> 'int'
    |     |-BinaryOperator 0x55643e53db80 <col:20, col:74> 'int' '||'
    |     | |-BinaryOperator 0x55643e53da90 <col:20, col:38> 'int' '&&'
    |     | | |-ImplicitCastExpr 0x55643e53da48 <col:20> 'int' <IntegralCast>
    |     | | | `-ImplicitCastExpr 0x55643e53da30 <col:20> '_Bool' <LValueToRValue>
    |     | | |   `-DeclRefExpr 0x55643e53d9f0 <col:20> '_Bool' lvalue Var 0x55643e537c78 'x$w_buff0_used' '_Bool'
    |     | | `-ImplicitCastExpr 0x55643e53da78 <col:38> 'int' <IntegralCast>
    |     | |   `-ImplicitCastExpr 0x55643e53da60 <col:38> '_Bool' <LValueToRValue>
    |     | |     `-DeclRefExpr 0x55643e53da10 <col:38> '_Bool' lvalue Var 0x55643e537700 'x$r_buff0_thd0' '_Bool'
    |     | `-BinaryOperator 0x55643e53db60 <col:56, col:74> 'int' '&&'
    |     |   |-ImplicitCastExpr 0x55643e53db08 <col:56> 'int' <IntegralCast>
    |     |   | `-ImplicitCastExpr 0x55643e53daf0 <col:56> '_Bool' <LValueToRValue>
    |     |   |   `-DeclRefExpr 0x55643e53dab0 <col:56> '_Bool' lvalue Var 0x55643e537d70 'x$w_buff1_used' '_Bool'
    |     |   `-ImplicitCastExpr 0x55643e53db38 <col:74> 'int' <IntegralCast>
    |     |     `-ImplicitCastExpr 0x55643e53db20 <col:74> '_Bool' <LValueToRValue>
    |     |       `-DeclRefExpr 0x55643e53dad0 <col:74> '_Bool' lvalue Var 0x55643e5378e0 'x$r_buff1_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x55643e53dc18 <col:91, col:98> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x55643e53dbd0 <col:91, col:98> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x55643e53dba0 <col:98> 'int' 0
    |     `-ImplicitCastExpr 0x55643e53dc48 <col:102> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x55643e53dc30 <col:102> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x55643e53dbf8 <col:102> '_Bool' lvalue Var 0x55643e5378e0 'x$r_buff1_thd0' '_Bool'
    |-CallExpr 0x55643e53dd00 <line:799:3, col:25> 'void'
    | `-ImplicitCastExpr 0x55643e53dce8 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x55643e53dcc8 <col:3> 'void ()' Function 0x55643e4ddf00 '__VERIFIER_atomic_end' 'void ()'
    |-CallExpr 0x55643e53dd58 <line:800:3, col:27> 'void'
    | `-ImplicitCastExpr 0x55643e53dd40 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x55643e53dd20 <col:3> 'void ()' Function 0x55643e4dde40 '__VERIFIER_atomic_begin' 'void ()'
    |-BinaryOperator 0x55643e53de08 <line:801:3, col:45> '_Bool' '='
    | |-DeclRefExpr 0x55643e53dd78 <col:3> '_Bool' lvalue Var 0x55643e538028 'weak$$choice0' '_Bool'
    | `-ImplicitCastExpr 0x55643e53ddf0 <col:19, col:45> '_Bool' <PointerToBoolean>
    |   `-CallExpr 0x55643e53ddd0 <col:19, col:45> 'void *'
    |     `-ImplicitCastExpr 0x55643e53ddb8 <col:19> 'void *(*)(void)' <FunctionToPointerDecay>
    |       `-DeclRefExpr 0x55643e53dd98 <col:19> 'void *(void)' Function 0x55643e4dd958 '__VERIFIER_nondet_pointer' 'void *(void)'
    |-BinaryOperator 0x55643e53deb8 <line:802:3, col:45> '_Bool' '='
    | |-DeclRefExpr 0x55643e53de28 <col:3> '_Bool' lvalue Var 0x55643e5380a0 'weak$$choice2' '_Bool'
    | `-ImplicitCastExpr 0x55643e53dea0 <col:19, col:45> '_Bool' <PointerToBoolean>
    |   `-CallExpr 0x55643e53de80 <col:19, col:45> 'void *'
    |     `-ImplicitCastExpr 0x55643e53de68 <col:19> 'void *(*)(void)' <FunctionToPointerDecay>
    |       `-DeclRefExpr 0x55643e53de48 <col:19> 'void *(void)' Function 0x55643e4dd958 '__VERIFIER_nondet_pointer' 'void *(void)'
    |-BinaryOperator 0x55643e53df30 <line:803:3, col:21> '_Bool' '='
    | |-DeclRefExpr 0x55643e53ded8 <col:3> '_Bool' lvalue Var 0x55643e537608 'x$flush_delayed' '_Bool'
    | `-ImplicitCastExpr 0x55643e53df18 <col:21> '_Bool' <LValueToRValue>
    |   `-DeclRefExpr 0x55643e53def8 <col:21> '_Bool' lvalue Var 0x55643e5380a0 'weak$$choice2' '_Bool'
    |-BinaryOperator 0x55643e53dfa8 <line:804:3, col:15> 'int' '='
    | |-DeclRefExpr 0x55643e53df50 <col:3> 'int' lvalue Var 0x55643e537688 'x$mem_tmp' 'int'
    | `-ImplicitCastExpr 0x55643e53df90 <col:15> 'int' <LValueToRValue>
    |   `-DeclRefExpr 0x55643e53df70 <col:15> 'int' lvalue Var 0x55643e537570 'x' 'int'
    |-BinaryOperator 0x55643e53e3e0 <line:805:3, col:162> 'int' '='
    | |-DeclRefExpr 0x55643e53dfc8 <col:3> 'int' lvalue Var 0x55643e537570 'x' 'int'
    | `-ConditionalOperator 0x55643e53e3b0 <col:7, col:162> 'int'
    |   |-BinaryOperator 0x55643e53e1d8 <col:7, col:84> 'int' '||'
    |   | |-BinaryOperator 0x55643e53e0f8 <col:7, col:46> 'int' '||'
    |   | | |-UnaryOperator 0x55643e53e020 <col:7, col:8> 'int' prefix '!' cannot overflow
    |   | | | `-ImplicitCastExpr 0x55643e53e008 <col:8> '_Bool' <LValueToRValue>
    |   | | |   `-DeclRefExpr 0x55643e53dfe8 <col:8> '_Bool' lvalue Var 0x55643e537c78 'x$w_buff0_used' '_Bool'
    |   | | `-BinaryOperator 0x55643e53e0d8 <col:26, col:46> 'int' '&&'
    |   | |   |-UnaryOperator 0x55643e53e070 <col:26, col:27> 'int' prefix '!' cannot overflow
    |   | |   | `-ImplicitCastExpr 0x55643e53e058 <col:27> '_Bool' <LValueToRValue>
    |   | |   |   `-DeclRefExpr 0x55643e53e038 <col:27> '_Bool' lvalue Var 0x55643e537700 'x$r_buff0_thd0' '_Bool'
    |   | |   `-UnaryOperator 0x55643e53e0c0 <col:45, col:46> 'int' prefix '!' cannot overflow
    |   | |     `-ImplicitCastExpr 0x55643e53e0a8 <col:46> '_Bool' <LValueToRValue>
    |   | |       `-DeclRefExpr 0x55643e53e088 <col:46> '_Bool' lvalue Var 0x55643e537d70 'x$w_buff1_used' '_Bool'
    |   | `-BinaryOperator 0x55643e53e1b8 <col:64, col:84> 'int' '&&'
    |   |   |-UnaryOperator 0x55643e53e150 <col:64, col:65> 'int' prefix '!' cannot overflow
    |   |   | `-ImplicitCastExpr 0x55643e53e138 <col:65> '_Bool' <LValueToRValue>
    |   |   |   `-DeclRefExpr 0x55643e53e118 <col:65> '_Bool' lvalue Var 0x55643e537700 'x$r_buff0_thd0' '_Bool'
    |   |   `-UnaryOperator 0x55643e53e1a0 <col:83, col:84> 'int' prefix '!' cannot overflow
    |   |     `-ImplicitCastExpr 0x55643e53e188 <col:84> '_Bool' <LValueToRValue>
    |   |       `-DeclRefExpr 0x55643e53e168 <col:84> '_Bool' lvalue Var 0x55643e5378e0 'x$r_buff1_thd0' '_Bool'
    |   |-ImplicitCastExpr 0x55643e53e398 <col:101> 'int' <LValueToRValue>
    |   | `-DeclRefExpr 0x55643e53e1f8 <col:101> 'int' lvalue Var 0x55643e537570 'x' 'int'
    |   `-ParenExpr 0x55643e53e378 <col:105, col:162> 'int'
    |     `-ConditionalOperator 0x55643e53e348 <col:106, col:153> 'int'
    |       |-BinaryOperator 0x55643e53e2b8 <col:106, col:124> 'int' '&&'
    |       | |-ImplicitCastExpr 0x55643e53e270 <col:106> 'int' <IntegralCast>
    |       | | `-ImplicitCastExpr 0x55643e53e258 <col:106> '_Bool' <LValueToRValue>
    |       | |   `-DeclRefExpr 0x55643e53e218 <col:106> '_Bool' lvalue Var 0x55643e537c78 'x$w_buff0_used' '_Bool'
    |       | `-ImplicitCastExpr 0x55643e53e2a0 <col:124> 'int' <IntegralCast>
    |       |   `-ImplicitCastExpr 0x55643e53e288 <col:124> '_Bool' <LValueToRValue>
    |       |     `-DeclRefExpr 0x55643e53e238 <col:124> '_Bool' lvalue Var 0x55643e537700 'x$r_buff0_thd0' '_Bool'
    |       |-ImplicitCastExpr 0x55643e53e318 <col:141> 'int' <LValueToRValue>
    |       | `-DeclRefExpr 0x55643e53e2d8 <col:141> 'int' lvalue Var 0x55643e537c00 'x$w_buff0' 'int'
    |       `-ImplicitCastExpr 0x55643e53e330 <col:153> 'int' <LValueToRValue>
    |         `-DeclRefExpr 0x55643e53e2f8 <col:153> 'int' lvalue Var 0x55643e537cf8 'x$w_buff1' 'int'
    |-BinaryOperator 0x55643e53e8f0 <line:806:3, col:208> 'int' '='
    | |-DeclRefExpr 0x55643e53e400 <col:3> 'int' lvalue Var 0x55643e537c00 'x$w_buff0' 'int'
    | `-ConditionalOperator 0x55643e53e8c0 <col:15, col:208> 'int'
    |   |-ImplicitCastExpr 0x55643e53e890 <col:15> 'int' <IntegralCast>
    |   | `-ImplicitCastExpr 0x55643e53e878 <col:15> '_Bool' <LValueToRValue>
    |   |   `-DeclRefExpr 0x55643e53e420 <col:15> '_Bool' lvalue Var 0x55643e5380a0 'weak$$choice2' '_Bool'
    |   |-ImplicitCastExpr 0x55643e53e8a8 <col:31> 'int' <LValueToRValue>
    |   | `-DeclRefExpr 0x55643e53e440 <col:31> 'int' lvalue Var 0x55643e537c00 'x$w_buff0' 'int'
    |   `-ParenExpr 0x55643e53e858 <col:43, col:208> 'int'
    |     `-ConditionalOperator 0x55643e53e828 <col:44, col:207> 'int'
    |       |-BinaryOperator 0x55643e53e650 <col:44, col:121> 'int' '||'
    |       | |-BinaryOperator 0x55643e53e570 <col:44, col:83> 'int' '||'
    |       | | |-UnaryOperator 0x55643e53e498 <col:44, col:45> 'int' prefix '!' cannot overflow
    |       | | | `-ImplicitCastExpr 0x55643e53e480 <col:45> '_Bool' <LValueToRValue>
    |       | | |   `-DeclRefExpr 0x55643e53e460 <col:45> '_Bool' lvalue Var 0x55643e537c78 'x$w_buff0_used' '_Bool'
    |       | | `-BinaryOperator 0x55643e53e550 <col:63, col:83> 'int' '&&'
    |       | |   |-UnaryOperator 0x55643e53e4e8 <col:63, col:64> 'int' prefix '!' cannot overflow
    |       | |   | `-ImplicitCastExpr 0x55643e53e4d0 <col:64> '_Bool' <LValueToRValue>
    |       | |   |   `-DeclRefExpr 0x55643e53e4b0 <col:64> '_Bool' lvalue Var 0x55643e537700 'x$r_buff0_thd0' '_Bool'
    |       | |   `-UnaryOperator 0x55643e53e538 <col:82, col:83> 'int' prefix '!' cannot overflow
    |       | |     `-ImplicitCastExpr 0x55643e53e520 <col:83> '_Bool' <LValueToRValue>
    |       | |       `-DeclRefExpr 0x55643e53e500 <col:83> '_Bool' lvalue Var 0x55643e537d70 'x$w_buff1_used' '_Bool'
    |       | `-BinaryOperator 0x55643e53e630 <col:101, col:121> 'int' '&&'
    |       |   |-UnaryOperator 0x55643e53e5c8 <col:101, col:102> 'int' prefix '!' cannot overflow
    |       |   | `-ImplicitCastExpr 0x55643e53e5b0 <col:102> '_Bool' <LValueToRValue>
    |       |   |   `-DeclRefExpr 0x55643e53e590 <col:102> '_Bool' lvalue Var 0x55643e537700 'x$r_buff0_thd0' '_Bool'
    |       |   `-UnaryOperator 0x55643e53e618 <col:120, col:121> 'int' prefix '!' cannot overflow
    |       |     `-ImplicitCastExpr 0x55643e53e600 <col:121> '_Bool' <LValueToRValue>
    |       |       `-DeclRefExpr 0x55643e53e5e0 <col:121> '_Bool' lvalue Var 0x55643e5378e0 'x$r_buff1_thd0' '_Bool'
    |       |-ImplicitCastExpr 0x55643e53e810 <col:138> 'int' <LValueToRValue>
    |       | `-DeclRefExpr 0x55643e53e670 <col:138> 'int' lvalue Var 0x55643e537c00 'x$w_buff0' 'int'
    |       `-ParenExpr 0x55643e53e7f0 <col:150, col:207> 'int'
    |         `-ConditionalOperator 0x55643e53e7c0 <col:151, col:198> 'int'
    |           |-BinaryOperator 0x55643e53e730 <col:151, col:169> 'int' '&&'
    |           | |-ImplicitCastExpr 0x55643e53e6e8 <col:151> 'int' <IntegralCast>
    |           | | `-ImplicitCastExpr 0x55643e53e6d0 <col:151> '_Bool' <LValueToRValue>
    |           | |   `-DeclRefExpr 0x55643e53e690 <col:151> '_Bool' lvalue Var 0x55643e537c78 'x$w_buff0_used' '_Bool'
    |           | `-ImplicitCastExpr 0x55643e53e718 <col:169> 'int' <IntegralCast>
    |           |   `-ImplicitCastExpr 0x55643e53e700 <col:169> '_Bool' <LValueToRValue>
    |           |     `-DeclRefExpr 0x55643e53e6b0 <col:169> '_Bool' lvalue Var 0x55643e537700 'x$r_buff0_thd0' '_Bool'
    |           |-ImplicitCastExpr 0x55643e53e790 <col:186> 'int' <LValueToRValue>
    |           | `-DeclRefExpr 0x55643e53e750 <col:186> 'int' lvalue Var 0x55643e537c00 'x$w_buff0' 'int'
    |           `-ImplicitCastExpr 0x55643e53e7a8 <col:198> 'int' <LValueToRValue>
    |             `-DeclRefExpr 0x55643e53e770 <col:198> 'int' lvalue Var 0x55643e537c00 'x$w_buff0' 'int'
    |-BinaryOperator 0x55643e53ee10 <line:807:3, col:208> 'int' '='
    | |-DeclRefExpr 0x55643e53e910 <col:3> 'int' lvalue Var 0x55643e537cf8 'x$w_buff1' 'int'
    | `-ConditionalOperator 0x55643e53ede0 <col:15, col:208> 'int'
    |   |-ImplicitCastExpr 0x55643e53edb0 <col:15> 'int' <IntegralCast>
    |   | `-ImplicitCastExpr 0x55643e53ed98 <col:15> '_Bool' <LValueToRValue>
    |   |   `-DeclRefExpr 0x55643e53e930 <col:15> '_Bool' lvalue Var 0x55643e5380a0 'weak$$choice2' '_Bool'
    |   |-ImplicitCastExpr 0x55643e53edc8 <col:31> 'int' <LValueToRValue>
    |   | `-DeclRefExpr 0x55643e53e950 <col:31> 'int' lvalue Var 0x55643e537cf8 'x$w_buff1' 'int'
    |   `-ParenExpr 0x55643e53ed78 <col:43, col:208> 'int'
    |     `-ConditionalOperator 0x55643e53ed48 <col:44, col:207> 'int'
    |       |-BinaryOperator 0x55643e53eb70 <col:44, col:121> 'int' '||'
    |       | |-BinaryOperator 0x55643e53ea80 <col:44, col:83> 'int' '||'
    |       | | |-UnaryOperator 0x55643e53e9a8 <col:44, col:45> 'int' prefix '!' cannot overflow
    |       | | | `-ImplicitCastExpr 0x55643e53e990 <col:45> '_Bool' <LValueToRValue>
    |       | | |   `-DeclRefExpr 0x55643e53e970 <col:45> '_Bool' lvalue Var 0x55643e537c78 'x$w_buff0_used' '_Bool'
    |       | | `-BinaryOperator 0x55643e53ea60 <col:63, col:83> 'int' '&&'
    |       | |   |-UnaryOperator 0x55643e53e9f8 <col:63, col:64> 'int' prefix '!' cannot overflow
    |       | |   | `-ImplicitCastExpr 0x55643e53e9e0 <col:64> '_Bool' <LValueToRValue>
    |       | |   |   `-DeclRefExpr 0x55643e53e9c0 <col:64> '_Bool' lvalue Var 0x55643e537700 'x$r_buff0_thd0' '_Bool'
    |       | |   `-UnaryOperator 0x55643e53ea48 <col:82, col:83> 'int' prefix '!' cannot overflow
    |       | |     `-ImplicitCastExpr 0x55643e53ea30 <col:83> '_Bool' <LValueToRValue>
    |       | |       `-DeclRefExpr 0x55643e53ea10 <col:83> '_Bool' lvalue Var 0x55643e537d70 'x$w_buff1_used' '_Bool'
    |       | `-BinaryOperator 0x55643e53eb40 <col:101, col:121> 'int' '&&'
    |       |   |-UnaryOperator 0x55643e53ead8 <col:101, col:102> 'int' prefix '!' cannot overflow
    |       |   | `-ImplicitCastExpr 0x55643e53eac0 <col:102> '_Bool' <LValueToRValue>
    |       |   |   `-DeclRefExpr 0x55643e53eaa0 <col:102> '_Bool' lvalue Var 0x55643e537700 'x$r_buff0_thd0' '_Bool'
    |       |   `-UnaryOperator 0x55643e53eb28 <col:120, col:121> 'int' prefix '!' cannot overflow
    |       |     `-ImplicitCastExpr 0x55643e53eb10 <col:121> '_Bool' <LValueToRValue>
    |       |       `-DeclRefExpr 0x55643e53eaf0 <col:121> '_Bool' lvalue Var 0x55643e5378e0 'x$r_buff1_thd0' '_Bool'
    |       |-ImplicitCastExpr 0x55643e53ed30 <col:138> 'int' <LValueToRValue>
    |       | `-DeclRefExpr 0x55643e53eb90 <col:138> 'int' lvalue Var 0x55643e537cf8 'x$w_buff1' 'int'
    |       `-ParenExpr 0x55643e53ed10 <col:150, col:207> 'int'
    |         `-ConditionalOperator 0x55643e53ece0 <col:151, col:198> 'int'
    |           |-BinaryOperator 0x55643e53ec50 <col:151, col:169> 'int' '&&'
    |           | |-ImplicitCastExpr 0x55643e53ec08 <col:151> 'int' <IntegralCast>
    |           | | `-ImplicitCastExpr 0x55643e53ebf0 <col:151> '_Bool' <LValueToRValue>
    |           | |   `-DeclRefExpr 0x55643e53ebb0 <col:151> '_Bool' lvalue Var 0x55643e537c78 'x$w_buff0_used' '_Bool'
    |           | `-ImplicitCastExpr 0x55643e53ec38 <col:169> 'int' <IntegralCast>
    |           |   `-ImplicitCastExpr 0x55643e53ec20 <col:169> '_Bool' <LValueToRValue>
    |           |     `-DeclRefExpr 0x55643e53ebd0 <col:169> '_Bool' lvalue Var 0x55643e537700 'x$r_buff0_thd0' '_Bool'
    |           |-ImplicitCastExpr 0x55643e53ecb0 <col:186> 'int' <LValueToRValue>
    |           | `-DeclRefExpr 0x55643e53ec70 <col:186> 'int' lvalue Var 0x55643e537cf8 'x$w_buff1' 'int'
    |           `-ImplicitCastExpr 0x55643e53ecc8 <col:198> 'int' <LValueToRValue>
    |             `-DeclRefExpr 0x55643e53ec90 <col:198> 'int' lvalue Var 0x55643e537cf8 'x$w_buff1' 'int'
    |-BinaryOperator 0x55643e53f3b8 <line:808:3, col:227> '_Bool' '='
    | |-DeclRefExpr 0x55643e53ee30 <col:3> '_Bool' lvalue Var 0x55643e537c78 'x$w_buff0_used' '_Bool'
    | `-ImplicitCastExpr 0x55643e53f3a0 <col:20, col:227> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x55643e53f370 <col:20, col:227> 'int'
    |     |-ImplicitCastExpr 0x55643e53f328 <col:20> 'int' <IntegralCast>
    |     | `-ImplicitCastExpr 0x55643e53f310 <col:20> '_Bool' <LValueToRValue>
    |     |   `-DeclRefExpr 0x55643e53ee50 <col:20> '_Bool' lvalue Var 0x55643e5380a0 'weak$$choice2' '_Bool'
    |     |-ImplicitCastExpr 0x55643e53f358 <col:36> 'int' <IntegralCast>
    |     | `-ImplicitCastExpr 0x55643e53f340 <col:36> '_Bool' <LValueToRValue>
    |     |   `-DeclRefExpr 0x55643e53ee70 <col:36> '_Bool' lvalue Var 0x55643e537c78 'x$w_buff0_used' '_Bool'
    |     `-ParenExpr 0x55643e53f2f0 <col:53, col:227> 'int'
    |       `-ConditionalOperator 0x55643e53f2c0 <col:54, col:226> 'int'
    |         |-BinaryOperator 0x55643e53f080 <col:54, col:131> 'int' '||'
    |         | |-BinaryOperator 0x55643e53efa0 <col:54, col:93> 'int' '||'
    |         | | |-UnaryOperator 0x55643e53eec8 <col:54, col:55> 'int' prefix '!' cannot overflow
    |         | | | `-ImplicitCastExpr 0x55643e53eeb0 <col:55> '_Bool' <LValueToRValue>
    |         | | |   `-DeclRefExpr 0x55643e53ee90 <col:55> '_Bool' lvalue Var 0x55643e537c78 'x$w_buff0_used' '_Bool'
    |         | | `-BinaryOperator 0x55643e53ef80 <col:73, col:93> 'int' '&&'
    |         | |   |-UnaryOperator 0x55643e53ef18 <col:73, col:74> 'int' prefix '!' cannot overflow
    |         | |   | `-ImplicitCastExpr 0x55643e53ef00 <col:74> '_Bool' <LValueToRValue>
    |         | |   |   `-DeclRefExpr 0x55643e53eee0 <col:74> '_Bool' lvalue Var 0x55643e537700 'x$r_buff0_thd0' '_Bool'
    |         | |   `-UnaryOperator 0x55643e53ef68 <col:92, col:93> 'int' prefix '!' cannot overflow
    |         | |     `-ImplicitCastExpr 0x55643e53ef50 <col:93> '_Bool' <LValueToRValue>
    |         | |       `-DeclRefExpr 0x55643e53ef30 <col:93> '_Bool' lvalue Var 0x55643e537d70 'x$w_buff1_used' '_Bool'
    |         | `-BinaryOperator 0x55643e53f060 <col:111, col:131> 'int' '&&'
    |         |   |-UnaryOperator 0x55643e53eff8 <col:111, col:112> 'int' prefix '!' cannot overflow
    |         |   | `-ImplicitCastExpr 0x55643e53efe0 <col:112> '_Bool' <LValueToRValue>
    |         |   |   `-DeclRefExpr 0x55643e53efc0 <col:112> '_Bool' lvalue Var 0x55643e537700 'x$r_buff0_thd0' '_Bool'
    |         |   `-UnaryOperator 0x55643e53f048 <col:130, col:131> 'int' prefix '!' cannot overflow
    |         |     `-ImplicitCastExpr 0x55643e53f030 <col:131> '_Bool' <LValueToRValue>
    |         |       `-DeclRefExpr 0x55643e53f010 <col:131> '_Bool' lvalue Var 0x55643e5378e0 'x$r_buff1_thd0' '_Bool'
    |         |-ImplicitCastExpr 0x55643e53f2a8 <col:148> 'int' <IntegralCast>
    |         | `-ImplicitCastExpr 0x55643e53f290 <col:148> '_Bool' <LValueToRValue>
    |         |   `-DeclRefExpr 0x55643e53f0a0 <col:148> '_Bool' lvalue Var 0x55643e537c78 'x$w_buff0_used' '_Bool'
    |         `-ParenExpr 0x55643e53f270 <col:165, col:226> 'int'
    |           `-ConditionalOperator 0x55643e53f240 <col:166, col:212> 'int'
    |             |-BinaryOperator 0x55643e53f160 <col:166, col:184> 'int' '&&'
    |             | |-ImplicitCastExpr 0x55643e53f118 <col:166> 'int' <IntegralCast>
    |             | | `-ImplicitCastExpr 0x55643e53f100 <col:166> '_Bool' <LValueToRValue>
    |             | |   `-DeclRefExpr 0x55643e53f0c0 <col:166> '_Bool' lvalue Var 0x55643e537c78 'x$w_buff0_used' '_Bool'
    |             | `-ImplicitCastExpr 0x55643e53f148 <col:184> 'int' <IntegralCast>
    |             |   `-ImplicitCastExpr 0x55643e53f130 <col:184> '_Bool' <LValueToRValue>
    |             |     `-DeclRefExpr 0x55643e53f0e0 <col:184> '_Bool' lvalue Var 0x55643e537700 'x$r_buff0_thd0' '_Bool'
    |             |-ImplicitCastExpr 0x55643e53f1f8 <col:201, col:208> 'int' <IntegralCast>
    |             | `-CStyleCastExpr 0x55643e53f1b0 <col:201, col:208> '_Bool' <IntegralToBoolean>
    |             |   `-IntegerLiteral 0x55643e53f180 <col:208> 'int' 0
    |             `-ImplicitCastExpr 0x55643e53f228 <col:212> 'int' <IntegralCast>
    |               `-ImplicitCastExpr 0x55643e53f210 <col:212> '_Bool' <LValueToRValue>
    |                 `-DeclRefExpr 0x55643e53f1d8 <col:212> '_Bool' lvalue Var 0x55643e537c78 'x$w_buff0_used' '_Bool'
    |-BinaryOperator 0x55643e53f980 <line:809:3, col:221> '_Bool' '='
    | |-DeclRefExpr 0x55643e53f3d8 <col:3> '_Bool' lvalue Var 0x55643e537d70 'x$w_buff1_used' '_Bool'
    | `-ImplicitCastExpr 0x55643e53f968 <col:20, col:221> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x55643e53f938 <col:20, col:221> 'int'
    |     |-ImplicitCastExpr 0x55643e53f8f0 <col:20> 'int' <IntegralCast>
    |     | `-ImplicitCastExpr 0x55643e53f8d8 <col:20> '_Bool' <LValueToRValue>
    |     |   `-DeclRefExpr 0x55643e53f3f8 <col:20> '_Bool' lvalue Var 0x55643e5380a0 'weak$$choice2' '_Bool'
    |     |-ImplicitCastExpr 0x55643e53f920 <col:36> 'int' <IntegralCast>
    |     | `-ImplicitCastExpr 0x55643e53f908 <col:36> '_Bool' <LValueToRValue>
    |     |   `-DeclRefExpr 0x55643e53f418 <col:36> '_Bool' lvalue Var 0x55643e537d70 'x$w_buff1_used' '_Bool'
    |     `-ParenExpr 0x55643e53f8b8 <col:53, col:221> 'int'
    |       `-ConditionalOperator 0x55643e53f888 <col:54, col:220> 'int'
    |         |-BinaryOperator 0x55643e53f628 <col:54, col:131> 'int' '||'
    |         | |-BinaryOperator 0x55643e53f548 <col:54, col:93> 'int' '||'
    |         | | |-UnaryOperator 0x55643e53f470 <col:54, col:55> 'int' prefix '!' cannot overflow
    |         | | | `-ImplicitCastExpr 0x55643e53f458 <col:55> '_Bool' <LValueToRValue>
    |         | | |   `-DeclRefExpr 0x55643e53f438 <col:55> '_Bool' lvalue Var 0x55643e537c78 'x$w_buff0_used' '_Bool'
    |         | | `-BinaryOperator 0x55643e53f528 <col:73, col:93> 'int' '&&'
    |         | |   |-UnaryOperator 0x55643e53f4c0 <col:73, col:74> 'int' prefix '!' cannot overflow
    |         | |   | `-ImplicitCastExpr 0x55643e53f4a8 <col:74> '_Bool' <LValueToRValue>
    |         | |   |   `-DeclRefExpr 0x55643e53f488 <col:74> '_Bool' lvalue Var 0x55643e537700 'x$r_buff0_thd0' '_Bool'
    |         | |   `-UnaryOperator 0x55643e53f510 <col:92, col:93> 'int' prefix '!' cannot overflow
    |         | |     `-ImplicitCastExpr 0x55643e53f4f8 <col:93> '_Bool' <LValueToRValue>
    |         | |       `-DeclRefExpr 0x55643e53f4d8 <col:93> '_Bool' lvalue Var 0x55643e537d70 'x$w_buff1_used' '_Bool'
    |         | `-BinaryOperator 0x55643e53f608 <col:111, col:131> 'int' '&&'
    |         |   |-UnaryOperator 0x55643e53f5a0 <col:111, col:112> 'int' prefix '!' cannot overflow
    |         |   | `-ImplicitCastExpr 0x55643e53f588 <col:112> '_Bool' <LValueToRValue>
    |         |   |   `-DeclRefExpr 0x55643e53f568 <col:112> '_Bool' lvalue Var 0x55643e537700 'x$r_buff0_thd0' '_Bool'
    |         |   `-UnaryOperator 0x55643e53f5f0 <col:130, col:131> 'int' prefix '!' cannot overflow
    |         |     `-ImplicitCastExpr 0x55643e53f5d8 <col:131> '_Bool' <LValueToRValue>
    |         |       `-DeclRefExpr 0x55643e53f5b8 <col:131> '_Bool' lvalue Var 0x55643e5378e0 'x$r_buff1_thd0' '_Bool'
    |         |-ImplicitCastExpr 0x55643e53f870 <col:148> 'int' <IntegralCast>
    |         | `-ImplicitCastExpr 0x55643e53f858 <col:148> '_Bool' <LValueToRValue>
    |         |   `-DeclRefExpr 0x55643e53f648 <col:148> '_Bool' lvalue Var 0x55643e537d70 'x$w_buff1_used' '_Bool'
    |         `-ParenExpr 0x55643e53f838 <col:165, col:220> 'int'
    |           `-ConditionalOperator 0x55643e53f808 <col:166, col:219> 'int'
    |             |-BinaryOperator 0x55643e53f708 <col:166, col:184> 'int' '&&'
    |             | |-ImplicitCastExpr 0x55643e53f6c0 <col:166> 'int' <IntegralCast>
    |             | | `-ImplicitCastExpr 0x55643e53f6a8 <col:166> '_Bool' <LValueToRValue>
    |             | |   `-DeclRefExpr 0x55643e53f668 <col:166> '_Bool' lvalue Var 0x55643e537c78 'x$w_buff0_used' '_Bool'
    |             | `-ImplicitCastExpr 0x55643e53f6f0 <col:184> 'int' <IntegralCast>
    |             |   `-ImplicitCastExpr 0x55643e53f6d8 <col:184> '_Bool' <LValueToRValue>
    |             |     `-DeclRefExpr 0x55643e53f688 <col:184> '_Bool' lvalue Var 0x55643e537700 'x$r_buff0_thd0' '_Bool'
    |             |-ImplicitCastExpr 0x55643e53f7d8 <col:201, col:208> 'int' <IntegralCast>
    |             | `-CStyleCastExpr 0x55643e53f758 <col:201, col:208> '_Bool' <IntegralToBoolean>
    |             |   `-IntegerLiteral 0x55643e53f728 <col:208> 'int' 0
    |             `-ImplicitCastExpr 0x55643e53f7f0 <col:212, col:219> 'int' <IntegralCast>
    |               `-CStyleCastExpr 0x55643e53f7b0 <col:212, col:219> '_Bool' <IntegralToBoolean>
    |                 `-IntegerLiteral 0x55643e53f780 <col:219> 'int' 0
    |-BinaryOperator 0x55643e53ff40 <line:810:3, col:227> '_Bool' '='
    | |-DeclRefExpr 0x55643e53f9a0 <col:3> '_Bool' lvalue Var 0x55643e537700 'x$r_buff0_thd0' '_Bool'
    | `-ImplicitCastExpr 0x55643e53ff28 <col:20, col:227> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x55643e53fef8 <col:20, col:227> 'int'
    |     |-ImplicitCastExpr 0x55643e53feb0 <col:20> 'int' <IntegralCast>
    |     | `-ImplicitCastExpr 0x55643e53fe98 <col:20> '_Bool' <LValueToRValue>
    |     |   `-DeclRefExpr 0x55643e53f9c0 <col:20> '_Bool' lvalue Var 0x55643e5380a0 'weak$$choice2' '_Bool'
    |     |-ImplicitCastExpr 0x55643e53fee0 <col:36> 'int' <IntegralCast>
    |     | `-ImplicitCastExpr 0x55643e53fec8 <col:36> '_Bool' <LValueToRValue>
    |     |   `-DeclRefExpr 0x55643e53f9e0 <col:36> '_Bool' lvalue Var 0x55643e537700 'x$r_buff0_thd0' '_Bool'
    |     `-ParenExpr 0x55643e53fe78 <col:53, col:227> 'int'
    |       `-ConditionalOperator 0x55643e53fe48 <col:54, col:226> 'int'
    |         |-BinaryOperator 0x55643e53fc08 <col:54, col:131> 'int' '||'
    |         | |-BinaryOperator 0x55643e53fb10 <col:54, col:93> 'int' '||'
    |         | | |-UnaryOperator 0x55643e53fa38 <col:54, col:55> 'int' prefix '!' cannot overflow
    |         | | | `-ImplicitCastExpr 0x55643e53fa20 <col:55> '_Bool' <LValueToRValue>
    |         | | |   `-DeclRefExpr 0x55643e53fa00 <col:55> '_Bool' lvalue Var 0x55643e537c78 'x$w_buff0_used' '_Bool'
    |         | | `-BinaryOperator 0x55643e53faf0 <col:73, col:93> 'int' '&&'
    |         | |   |-UnaryOperator 0x55643e53fa88 <col:73, col:74> 'int' prefix '!' cannot overflow
    |         | |   | `-ImplicitCastExpr 0x55643e53fa70 <col:74> '_Bool' <LValueToRValue>
    |         | |   |   `-DeclRefExpr 0x55643e53fa50 <col:74> '_Bool' lvalue Var 0x55643e537700 'x$r_buff0_thd0' '_Bool'
    |         | |   `-UnaryOperator 0x55643e53fad8 <col:92, col:93> 'int' prefix '!' cannot overflow
    |         | |     `-ImplicitCastExpr 0x55643e53fac0 <col:93> '_Bool' <LValueToRValue>
    |         | |       `-DeclRefExpr 0x55643e53faa0 <col:93> '_Bool' lvalue Var 0x55643e537d70 'x$w_buff1_used' '_Bool'
    |         | `-BinaryOperator 0x55643e53fbe8 <col:111, col:131> 'int' '&&'
    |         |   |-UnaryOperator 0x55643e53fb80 <col:111, col:112> 'int' prefix '!' cannot overflow
    |         |   | `-ImplicitCastExpr 0x55643e53fb50 <col:112> '_Bool' <LValueToRValue>
    |         |   |   `-DeclRefExpr 0x55643e53fb30 <col:112> '_Bool' lvalue Var 0x55643e537700 'x$r_buff0_thd0' '_Bool'
    |         |   `-UnaryOperator 0x55643e53fbd0 <col:130, col:131> 'int' prefix '!' cannot overflow
    |         |     `-ImplicitCastExpr 0x55643e53fbb8 <col:131> '_Bool' <LValueToRValue>
    |         |       `-DeclRefExpr 0x55643e53fb98 <col:131> '_Bool' lvalue Var 0x55643e5378e0 'x$r_buff1_thd0' '_Bool'
    |         |-ImplicitCastExpr 0x55643e53fe30 <col:148> 'int' <IntegralCast>
    |         | `-ImplicitCastExpr 0x55643e53fe18 <col:148> '_Bool' <LValueToRValue>
    |         |   `-DeclRefExpr 0x55643e53fc28 <col:148> '_Bool' lvalue Var 0x55643e537700 'x$r_buff0_thd0' '_Bool'
    |         `-ParenExpr 0x55643e53fdf8 <col:165, col:226> 'int'
    |           `-ConditionalOperator 0x55643e53fdc8 <col:166, col:212> 'int'
    |             |-BinaryOperator 0x55643e53fce8 <col:166, col:184> 'int' '&&'
    |             | |-ImplicitCastExpr 0x55643e53fca0 <col:166> 'int' <IntegralCast>
    |             | | `-ImplicitCastExpr 0x55643e53fc88 <col:166> '_Bool' <LValueToRValue>
    |             | |   `-DeclRefExpr 0x55643e53fc48 <col:166> '_Bool' lvalue Var 0x55643e537c78 'x$w_buff0_used' '_Bool'
    |             | `-ImplicitCastExpr 0x55643e53fcd0 <col:184> 'int' <IntegralCast>
    |             |   `-ImplicitCastExpr 0x55643e53fcb8 <col:184> '_Bool' <LValueToRValue>
    |             |     `-DeclRefExpr 0x55643e53fc68 <col:184> '_Bool' lvalue Var 0x55643e537700 'x$r_buff0_thd0' '_Bool'
    |             |-ImplicitCastExpr 0x55643e53fd80 <col:201, col:208> 'int' <IntegralCast>
    |             | `-CStyleCastExpr 0x55643e53fd38 <col:201, col:208> '_Bool' <IntegralToBoolean>
    |             |   `-IntegerLiteral 0x55643e53fd08 <col:208> 'int' 0
    |             `-ImplicitCastExpr 0x55643e53fdb0 <col:212> 'int' <IntegralCast>
    |               `-ImplicitCastExpr 0x55643e53fd98 <col:212> '_Bool' <LValueToRValue>
    |                 `-DeclRefExpr 0x55643e53fd60 <col:212> '_Bool' lvalue Var 0x55643e537700 'x$r_buff0_thd0' '_Bool'
    |-BinaryOperator 0x55643e540508 <line:811:3, col:221> '_Bool' '='
    | |-DeclRefExpr 0x55643e53ff60 <col:3> '_Bool' lvalue Var 0x55643e5378e0 'x$r_buff1_thd0' '_Bool'
    | `-ImplicitCastExpr 0x55643e5404f0 <col:20, col:221> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x55643e5404c0 <col:20, col:221> 'int'
    |     |-ImplicitCastExpr 0x55643e540478 <col:20> 'int' <IntegralCast>
    |     | `-ImplicitCastExpr 0x55643e540460 <col:20> '_Bool' <LValueToRValue>
    |     |   `-DeclRefExpr 0x55643e53ff80 <col:20> '_Bool' lvalue Var 0x55643e5380a0 'weak$$choice2' '_Bool'
    |     |-ImplicitCastExpr 0x55643e5404a8 <col:36> 'int' <IntegralCast>
    |     | `-ImplicitCastExpr 0x55643e540490 <col:36> '_Bool' <LValueToRValue>
    |     |   `-DeclRefExpr 0x55643e53ffa0 <col:36> '_Bool' lvalue Var 0x55643e5378e0 'x$r_buff1_thd0' '_Bool'
    |     `-ParenExpr 0x55643e540440 <col:53, col:221> 'int'
    |       `-ConditionalOperator 0x55643e540410 <col:54, col:220> 'int'
    |         |-BinaryOperator 0x55643e5401b0 <col:54, col:131> 'int' '||'
    |         | |-BinaryOperator 0x55643e5400d0 <col:54, col:93> 'int' '||'
    |         | | |-UnaryOperator 0x55643e53fff8 <col:54, col:55> 'int' prefix '!' cannot overflow
    |         | | | `-ImplicitCastExpr 0x55643e53ffe0 <col:55> '_Bool' <LValueToRValue>
    |         | | |   `-DeclRefExpr 0x55643e53ffc0 <col:55> '_Bool' lvalue Var 0x55643e537c78 'x$w_buff0_used' '_Bool'
    |         | | `-BinaryOperator 0x55643e5400b0 <col:73, col:93> 'int' '&&'
    |         | |   |-UnaryOperator 0x55643e540048 <col:73, col:74> 'int' prefix '!' cannot overflow
    |         | |   | `-ImplicitCastExpr 0x55643e540030 <col:74> '_Bool' <LValueToRValue>
    |         | |   |   `-DeclRefExpr 0x55643e540010 <col:74> '_Bool' lvalue Var 0x55643e537700 'x$r_buff0_thd0' '_Bool'
    |         | |   `-UnaryOperator 0x55643e540098 <col:92, col:93> 'int' prefix '!' cannot overflow
    |         | |     `-ImplicitCastExpr 0x55643e540080 <col:93> '_Bool' <LValueToRValue>
    |         | |       `-DeclRefExpr 0x55643e540060 <col:93> '_Bool' lvalue Var 0x55643e537d70 'x$w_buff1_used' '_Bool'
    |         | `-BinaryOperator 0x55643e540190 <col:111, col:131> 'int' '&&'
    |         |   |-UnaryOperator 0x55643e540128 <col:111, col:112> 'int' prefix '!' cannot overflow
    |         |   | `-ImplicitCastExpr 0x55643e540110 <col:112> '_Bool' <LValueToRValue>
    |         |   |   `-DeclRefExpr 0x55643e5400f0 <col:112> '_Bool' lvalue Var 0x55643e537700 'x$r_buff0_thd0' '_Bool'
    |         |   `-UnaryOperator 0x55643e540178 <col:130, col:131> 'int' prefix '!' cannot overflow
    |         |     `-ImplicitCastExpr 0x55643e540160 <col:131> '_Bool' <LValueToRValue>
    |         |       `-DeclRefExpr 0x55643e540140 <col:131> '_Bool' lvalue Var 0x55643e5378e0 'x$r_buff1_thd0' '_Bool'
    |         |-ImplicitCastExpr 0x55643e5403f8 <col:148> 'int' <IntegralCast>
    |         | `-ImplicitCastExpr 0x55643e5403e0 <col:148> '_Bool' <LValueToRValue>
    |         |   `-DeclRefExpr 0x55643e5401d0 <col:148> '_Bool' lvalue Var 0x55643e5378e0 'x$r_buff1_thd0' '_Bool'
    |         `-ParenExpr 0x55643e5403c0 <col:165, col:220> 'int'
    |           `-ConditionalOperator 0x55643e540390 <col:166, col:219> 'int'
    |             |-BinaryOperator 0x55643e540290 <col:166, col:184> 'int' '&&'
    |             | |-ImplicitCastExpr 0x55643e540248 <col:166> 'int' <IntegralCast>
    |             | | `-ImplicitCastExpr 0x55643e540230 <col:166> '_Bool' <LValueToRValue>
    |             | |   `-DeclRefExpr 0x55643e5401f0 <col:166> '_Bool' lvalue Var 0x55643e537c78 'x$w_buff0_used' '_Bool'
    |             | `-ImplicitCastExpr 0x55643e540278 <col:184> 'int' <IntegralCast>
    |             |   `-ImplicitCastExpr 0x55643e540260 <col:184> '_Bool' <LValueToRValue>
    |             |     `-DeclRefExpr 0x55643e540210 <col:184> '_Bool' lvalue Var 0x55643e537700 'x$r_buff0_thd0' '_Bool'
    |             |-ImplicitCastExpr 0x55643e540360 <col:201, col:208> 'int' <IntegralCast>
    |             | `-CStyleCastExpr 0x55643e5402e0 <col:201, col:208> '_Bool' <IntegralToBoolean>
    |             |   `-IntegerLiteral 0x55643e5402b0 <col:208> 'int' 0
    |             `-ImplicitCastExpr 0x55643e540378 <col:212, col:219> 'int' <IntegralCast>
    |               `-CStyleCastExpr 0x55643e540338 <col:212, col:219> '_Bool' <IntegralToBoolean>
    |                 `-IntegerLiteral 0x55643e540308 <col:219> 'int' 0
    |-BinaryOperator 0x55643e540740 <line:812:3, col:85> '_Bool' '='
    | |-DeclRefExpr 0x55643e540528 <col:3> '_Bool' lvalue Var 0x55643e537470 'main$tmp_guard1' '_Bool'
    | `-ImplicitCastExpr 0x55643e540728 <col:21, col:85> '_Bool' <IntegralToBoolean>
    |   `-UnaryOperator 0x55643e540710 <col:21, col:85> 'int' prefix '!' cannot overflow
    |     `-ParenExpr 0x55643e5406f0 <col:22, col:85> 'int'
    |       `-BinaryOperator 0x55643e5406d0 <col:23, col:84> 'int' '&&'
    |         |-BinaryOperator 0x55643e540638 <col:23, col:56> 'int' '&&'
    |         | |-BinaryOperator 0x55643e5405a0 <col:23, col:28> 'int' '=='
    |         | | |-ImplicitCastExpr 0x55643e540588 <col:23> 'int' <LValueToRValue>
    |         | | | `-DeclRefExpr 0x55643e540548 <col:23> 'int' lvalue Var 0x55643e537570 'x' 'int'
    |         | | `-IntegerLiteral 0x55643e540568 <col:28> 'int' 2
    |         | `-BinaryOperator 0x55643e540618 <col:33, col:56> 'int' '=='
    |         |   |-ImplicitCastExpr 0x55643e540600 <col:33> 'int' <LValueToRValue>
    |         |   | `-DeclRefExpr 0x55643e5405c0 <col:33> 'int' lvalue Var 0x55643e537240 '__unbuffered_p2_EAX' 'int'
    |         |   `-IntegerLiteral 0x55643e5405e0 <col:56> 'int' 1
    |         `-BinaryOperator 0x55643e5406b0 <col:61, col:84> 'int' '=='
    |           |-ImplicitCastExpr 0x55643e540698 <col:61> 'int' <LValueToRValue>
    |           | `-DeclRefExpr 0x55643e540658 <col:61> 'int' lvalue Var 0x55643e537360 '__unbuffered_p2_EBX' 'int'
    |           `-IntegerLiteral 0x55643e540678 <col:84> 'int' 0
    |-BinaryOperator 0x55643e540870 <line:813:3, col:37> 'int' '='
    | |-DeclRefExpr 0x55643e540760 <col:3> 'int' lvalue Var 0x55643e537570 'x' 'int'
    | `-ConditionalOperator 0x55643e540840 <col:7, col:37> 'int'
    |   |-ImplicitCastExpr 0x55643e5407f8 <col:7> 'int' <IntegralCast>
    |   | `-ImplicitCastExpr 0x55643e5407e0 <col:7> '_Bool' <LValueToRValue>
    |   |   `-DeclRefExpr 0x55643e540780 <col:7> '_Bool' lvalue Var 0x55643e537608 'x$flush_delayed' '_Bool'
    |   |-ImplicitCastExpr 0x55643e540810 <col:25> 'int' <LValueToRValue>
    |   | `-DeclRefExpr 0x55643e5407a0 <col:25> 'int' lvalue Var 0x55643e537688 'x$mem_tmp' 'int'
    |   `-ImplicitCastExpr 0x55643e540828 <col:37> 'int' <LValueToRValue>
    |     `-DeclRefExpr 0x55643e5407c0 <col:37> 'int' lvalue Var 0x55643e537570 'x' 'int'
    |-BinaryOperator 0x55643e540908 <line:814:3, col:28> '_Bool' '='
    | |-DeclRefExpr 0x55643e540890 <col:3> '_Bool' lvalue Var 0x55643e537608 'x$flush_delayed' '_Bool'
    | `-CStyleCastExpr 0x55643e5408e0 <col:21, col:28> '_Bool' <IntegralToBoolean>
    |   `-IntegerLiteral 0x55643e5408b0 <col:28> 'int' 0
    |-CallExpr 0x55643e540960 <line:815:3, col:25> 'void'
    | `-ImplicitCastExpr 0x55643e540948 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x55643e540928 <col:3> 'void ()' Function 0x55643e4ddf00 '__VERIFIER_atomic_end' 'void ()'
    |-CallExpr 0x55643e5409d8 <line:816:3, col:36> 'void'
    | |-ImplicitCastExpr 0x55643e5409c0 <col:3> 'void (*)(int)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x55643e540980 <col:3> 'void (int)' Function 0x55643e4ddbc8 '__VERIFIER_assert' 'void (int)'
    | `-ImplicitCastExpr 0x55643e540a18 <col:21> 'int' <IntegralCast>
    |   `-ImplicitCastExpr 0x55643e540a00 <col:21> '_Bool' <LValueToRValue>
    |     `-DeclRefExpr 0x55643e5409a0 <col:21> '_Bool' lvalue Var 0x55643e537470 'main$tmp_guard1' '_Bool'
    `-ReturnStmt 0x55643e540a50 <line:817:3, col:10>
      `-IntegerLiteral 0x55643e540a30 <col:10> 'int' 0
