TranslationUnitDecl 0x56537c8fbe18 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x56537c8fc6d8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x56537c8fc3b0 '__int128'
|-TypedefDecl 0x56537c8fc748 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x56537c8fc3d0 'unsigned __int128'
|-TypedefDecl 0x56537c8fca50 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x56537c8fc820 'struct __NSConstantString_tag'
|   `-Record 0x56537c8fc7a0 '__NSConstantString_tag'
|-TypedefDecl 0x56537c8fcaf8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x56537c8fcab0 'char *'
|   `-BuiltinType 0x56537c8fbeb0 'char'
|-TypedefDecl 0x56537c93b650 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'struct __va_list_tag [1]'
| `-ConstantArrayType 0x56537c8fcd90 'struct __va_list_tag [1]' 1 
|   `-RecordType 0x56537c8fcbd0 'struct __va_list_tag'
|     `-Record 0x56537c8fcb50 '__va_list_tag'
|-FunctionDecl 0x56537c93b790 <./split_0/safe003_rmo.opt_false-unreach-call.i:1:1, col:34> col:13 used __VERIFIER_assume 'void (int)' extern
| `-ParmVarDecl 0x56537c93b6c0 <col:31> col:34 'int'
|-FunctionDecl 0x56537c93b958 <line:2:1, col:45> col:15 used __VERIFIER_nondet_pointer 'void *(void)' extern
|-FunctionDecl 0x56537c93ba80 <line:3:1, col:61> col:13 used __VERIFIER_error 'void () __attribute__((noreturn))' extern
|-FunctionDecl 0x56537c93bbc8 <line:4:1, col:99> col:6 used __VERIFIER_assert 'void (int)'
| |-ParmVarDecl 0x56537c93bb38 <col:24, col:28> col:28 used expression 'int'
| `-CompoundStmt 0x56537c93bdf8 <col:40, col:99>
|   |-IfStmt 0x56537c93bdc8 <col:42, col:88>
|   | |-UnaryOperator 0x56537c93bca8 <col:46, col:47> 'int' prefix '!' cannot overflow
|   | | `-ImplicitCastExpr 0x56537c93bc90 <col:47> 'int' <LValueToRValue>
|   | |   `-DeclRefExpr 0x56537c93bc70 <col:47> 'int' lvalue ParmVar 0x56537c93bb38 'expression' 'int'
|   | `-CompoundStmt 0x56537c93bdb0 <col:59, col:88>
|   |   `-LabelStmt 0x56537c93bd98 <col:61, col:85> 'ERROR'
|   |     `-CallExpr 0x56537c93bd28 <col:68, col:85> 'void'
|   |       `-ImplicitCastExpr 0x56537c93bd10 <col:68> 'void (*)() __attribute__((noreturn))' <FunctionToPointerDecay>
|   |         `-DeclRefExpr 0x56537c93bcc0 <col:68> 'void () __attribute__((noreturn))' Function 0x56537c93ba80 '__VERIFIER_error' 'void () __attribute__((noreturn))'
|   |-NullStmt 0x56537c93bde0 <col:89>
|   `-ReturnStmt 0x56537c93bde8 <col:91>
|-FunctionDecl 0x56537c93be40 <line:5:1, col:37> col:13 used __VERIFIER_atomic_begin 'void ()' extern
|-FunctionDecl 0x56537c93bf00 <line:6:1, col:35> col:13 used __VERIFIER_atomic_end 'void ()' extern
|-FunctionDecl 0x56537c93c280 <line:8:1, line:10:76> line:8:13 __assert_fail 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x56537c93bfb8 <col:28, col:40> col:40 __assertion 'const char *'
| |-ParmVarDecl 0x56537c93c038 <col:53, col:65> col:65 __file 'const char *'
| |-ParmVarDecl 0x56537c93c0b8 <line:9:7, col:20> col:20 __line 'unsigned int'
| |-ParmVarDecl 0x56537c93c138 <col:28, col:40> col:40 __function 'const char *'
| `-NoThrowAttr 0x56537c93c340 <line:10:22>
|-FunctionDecl 0x56537c962390 <line:11:1, line:13:76> line:11:13 __assert_perror_fail 'void (int, const char *, unsigned int, const char *) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x56537c93c3b0 <col:35, col:39> col:39 __errnum 'int'
| |-ParmVarDecl 0x56537c93c430 <col:49, col:61> col:61 __file 'const char *'
| |-ParmVarDecl 0x56537c93c4b0 <line:12:7, col:20> col:20 __line 'unsigned int'
| |-ParmVarDecl 0x56537c93c530 <col:28, col:40> col:40 __function 'const char *'
| `-NoThrowAttr 0x56537c962450 <line:13:22>
|-FunctionDecl 0x56537c962700 <line:14:1, line:15:76> line:14:13 __assert 'void (const char *, const char *, int) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x56537c9624c0 <col:23, col:35> col:35 __assertion 'const char *'
| |-ParmVarDecl 0x56537c962540 <col:48, col:60> col:60 __file 'const char *'
| |-ParmVarDecl 0x56537c9625c0 <col:68, col:72> col:72 __line 'int'
| `-NoThrowAttr 0x56537c9627b8 <line:15:22>
|-TypedefDecl 0x56537c962828 <line:17:1, col:23> col:23 __u_char 'unsigned char'
| `-BuiltinType 0x56537c8fbf70 'unsigned char'
|-TypedefDecl 0x56537c962898 <line:18:1, col:28> col:28 __u_short 'unsigned short'
| `-BuiltinType 0x56537c8fbf90 'unsigned short'
|-TypedefDecl 0x56537c962908 <line:19:1, col:22> col:22 __u_int 'unsigned int'
| `-BuiltinType 0x56537c8fbfb0 'unsigned int'
|-TypedefDecl 0x56537c962978 <line:20:1, col:27> col:27 __u_long 'unsigned long'
| `-BuiltinType 0x56537c8fbfd0 'unsigned long'
|-TypedefDecl 0x56537c9629e8 <line:21:1, col:21> col:21 __int8_t 'signed char'
| `-BuiltinType 0x56537c8fbed0 'signed char'
|-TypedefDecl 0x56537c962a58 <line:22:1, col:23> col:23 __uint8_t 'unsigned char'
| `-BuiltinType 0x56537c8fbf70 'unsigned char'
|-TypedefDecl 0x56537c962ac8 <line:23:1, col:26> col:26 __int16_t 'short'
| `-BuiltinType 0x56537c8fbef0 'short'
|-TypedefDecl 0x56537c962b38 <line:24:1, col:28> col:28 __uint16_t 'unsigned short'
| `-BuiltinType 0x56537c8fbf90 'unsigned short'
|-TypedefDecl 0x56537c962ba8 <line:25:1, col:20> col:20 __int32_t 'int'
| `-BuiltinType 0x56537c8fbf10 'int'
|-TypedefDecl 0x56537c962c18 <line:26:1, col:22> col:22 __uint32_t 'unsigned int'
| `-BuiltinType 0x56537c8fbfb0 'unsigned int'
|-TypedefDecl 0x56537c962c88 <line:27:1, col:25> col:25 __int64_t 'long'
| `-BuiltinType 0x56537c8fbf30 'long'
|-TypedefDecl 0x56537c962cf8 <line:28:1, col:27> col:27 referenced __uint64_t 'unsigned long'
| `-BuiltinType 0x56537c8fbfd0 'unsigned long'
|-TypedefDecl 0x56537c962d68 <line:29:1, col:18> col:18 referenced __quad_t 'long'
| `-BuiltinType 0x56537c8fbf30 'long'
|-TypedefDecl 0x56537c962dd8 <line:30:1, col:27> col:27 __u_quad_t 'unsigned long'
| `-BuiltinType 0x56537c8fbfd0 'unsigned long'
|-TypedefDecl 0x56537c962e48 <line:31:1, col:27> col:27 __dev_t 'unsigned long'
| `-BuiltinType 0x56537c8fbfd0 'unsigned long'
|-TypedefDecl 0x56537c962eb8 <line:32:1, col:22> col:22 __uid_t 'unsigned int'
| `-BuiltinType 0x56537c8fbfb0 'unsigned int'
|-TypedefDecl 0x56537c962f28 <line:33:1, col:22> col:22 __gid_t 'unsigned int'
| `-BuiltinType 0x56537c8fbfb0 'unsigned int'
|-TypedefDecl 0x56537c962f98 <line:34:1, col:27> col:27 __ino_t 'unsigned long'
| `-BuiltinType 0x56537c8fbfd0 'unsigned long'
|-TypedefDecl 0x56537c963008 <line:35:1, col:27> col:27 __ino64_t 'unsigned long'
| `-BuiltinType 0x56537c8fbfd0 'unsigned long'
|-TypedefDecl 0x56537c963078 <line:36:1, col:22> col:22 __mode_t 'unsigned int'
| `-BuiltinType 0x56537c8fbfb0 'unsigned int'
|-TypedefDecl 0x56537c9630e8 <line:37:1, col:27> col:27 __nlink_t 'unsigned long'
| `-BuiltinType 0x56537c8fbfd0 'unsigned long'
|-TypedefDecl 0x56537c963158 <line:38:1, col:18> col:18 __off_t 'long'
| `-BuiltinType 0x56537c8fbf30 'long'
|-TypedefDecl 0x56537c9631c8 <line:39:1, col:18> col:18 referenced __off64_t 'long'
| `-BuiltinType 0x56537c8fbf30 'long'
|-TypedefDecl 0x56537c963238 <line:40:1, col:13> col:13 referenced __pid_t 'int'
| `-BuiltinType 0x56537c8fbf10 'int'
|-RecordDecl 0x56537c963290 <line:41:9, col:32> col:9 struct definition
| `-FieldDecl 0x56537c963408 <col:18, col:29> col:22 __val 'int [2]'
|-TypedefDecl 0x56537c9634c0 <col:1, col:34> col:34 __fsid_t 'struct __fsid_t':'__fsid_t'
| `-ElaboratedType 0x56537c963460 'struct __fsid_t' sugar
|   `-RecordType 0x56537c963310 '__fsid_t'
|     `-Record 0x56537c963290 ''
|-TypedefDecl 0x56537c963548 <line:42:1, col:18> col:18 referenced __clock_t 'long'
| `-BuiltinType 0x56537c8fbf30 'long'
|-TypedefDecl 0x56537c9635b8 <line:43:1, col:27> col:27 __rlim_t 'unsigned long'
| `-BuiltinType 0x56537c8fbfd0 'unsigned long'
|-TypedefDecl 0x56537c963628 <line:44:1, col:27> col:27 __rlim64_t 'unsigned long'
| `-BuiltinType 0x56537c8fbfd0 'unsigned long'
|-TypedefDecl 0x56537c963698 <line:45:1, col:22> col:22 __id_t 'unsigned int'
| `-BuiltinType 0x56537c8fbfb0 'unsigned int'
|-TypedefDecl 0x56537c963708 <line:46:1, col:18> col:18 referenced __time_t 'long'
| `-BuiltinType 0x56537c8fbf30 'long'
|-TypedefDecl 0x56537c963778 <line:47:1, col:22> col:22 __useconds_t 'unsigned int'
| `-BuiltinType 0x56537c8fbfb0 'unsigned int'
|-TypedefDecl 0x56537c9637e8 <line:48:1, col:18> col:18 __suseconds_t 'long'
| `-BuiltinType 0x56537c8fbf30 'long'
|-TypedefDecl 0x56537c963858 <line:49:1, col:13> col:13 __daddr_t 'int'
| `-BuiltinType 0x56537c8fbf10 'int'
|-TypedefDecl 0x56537c9638c8 <line:50:1, col:13> col:13 __key_t 'int'
| `-BuiltinType 0x56537c8fbf10 'int'
|-TypedefDecl 0x56537c963938 <line:51:1, col:13> col:13 referenced __clockid_t 'int'
| `-BuiltinType 0x56537c8fbf10 'int'
|-TypedefDecl 0x56537c9639a8 <line:52:1, col:16> col:16 referenced __timer_t 'void *'
| `-PointerType 0x56537c8fc630 'void *'
|   `-BuiltinType 0x56537c8fbe70 'void'
|-TypedefDecl 0x56537c963a18 <line:53:1, col:18> col:18 __blksize_t 'long'
| `-BuiltinType 0x56537c8fbf30 'long'
|-TypedefDecl 0x56537c963a88 <line:54:1, col:18> col:18 __blkcnt_t 'long'
| `-BuiltinType 0x56537c8fbf30 'long'
|-TypedefDecl 0x56537c963af8 <line:55:1, col:18> col:18 __blkcnt64_t 'long'
| `-BuiltinType 0x56537c8fbf30 'long'
|-TypedefDecl 0x56537c963b68 <line:56:1, col:27> col:27 __fsblkcnt_t 'unsigned long'
| `-BuiltinType 0x56537c8fbfd0 'unsigned long'
|-TypedefDecl 0x56537c963bd8 <line:57:1, col:27> col:27 __fsblkcnt64_t 'unsigned long'
| `-BuiltinType 0x56537c8fbfd0 'unsigned long'
|-TypedefDecl 0x56537c963c48 <line:58:1, col:27> col:27 __fsfilcnt_t 'unsigned long'
| `-BuiltinType 0x56537c8fbfd0 'unsigned long'
|-TypedefDecl 0x56537c963cb8 <line:59:1, col:27> col:27 __fsfilcnt64_t 'unsigned long'
| `-BuiltinType 0x56537c8fbfd0 'unsigned long'
|-TypedefDecl 0x56537c963d28 <line:60:1, col:18> col:18 __fsword_t 'long'
| `-BuiltinType 0x56537c8fbf30 'long'
|-TypedefDecl 0x56537c963d98 <line:61:1, col:18> col:18 __ssize_t 'long'
| `-BuiltinType 0x56537c8fbf30 'long'
|-TypedefDecl 0x56537c963e08 <line:62:1, col:18> col:18 referenced __syscall_slong_t 'long'
| `-BuiltinType 0x56537c8fbf30 'long'
|-TypedefDecl 0x56537c963e78 <line:63:1, col:27> col:27 __syscall_ulong_t 'unsigned long'
| `-BuiltinType 0x56537c8fbfd0 'unsigned long'
|-TypedefDecl 0x56537c963f08 <line:64:1, col:19> col:19 __loff_t '__off64_t':'long'
| `-TypedefType 0x56537c963ed0 '__off64_t' sugar
|   |-Typedef 0x56537c9631c8 '__off64_t'
|   `-BuiltinType 0x56537c8fbf30 'long'
|-TypedefDecl 0x56537c964000 <line:65:1, col:19> col:19 __qaddr_t '__quad_t *'
| `-PointerType 0x56537c963fc0 '__quad_t *'
|   `-TypedefType 0x56537c963f60 '__quad_t' sugar
|     |-Typedef 0x56537c962d68 '__quad_t'
|     `-BuiltinType 0x56537c8fbf30 'long'
|-TypedefDecl 0x56537c964070 <line:66:1, col:15> col:15 __caddr_t 'char *'
| `-PointerType 0x56537c8fcab0 'char *'
|   `-BuiltinType 0x56537c8fbeb0 'char'
|-TypedefDecl 0x56537c9640e0 <line:67:1, col:18> col:18 __intptr_t 'long'
| `-BuiltinType 0x56537c8fbf30 'long'
|-TypedefDecl 0x56537c964150 <line:68:1, col:22> col:22 __socklen_t 'unsigned int'
| `-BuiltinType 0x56537c8fbfb0 'unsigned int'
|-FunctionDecl 0x56537c964298 <line:69:1, line:73:1> line:70:1 __bswap_32 'unsigned int (unsigned int)' static inline
| |-ParmVarDecl 0x56537c9641c0 <col:13, col:26> col:26 used __bsx 'unsigned int'
| `-CompoundStmt 0x56537c9655e8 <line:71:1, line:73:1>
|   `-ReturnStmt 0x56537c9655d8 <line:72:3, col:34>
|     `-CallExpr 0x56537c965598 <col:10, col:34> 'unsigned int'
|       |-ImplicitCastExpr 0x56537c965580 <col:10> 'unsigned int (*)(unsigned int)' <BuiltinFnToFnPtr>
|       | `-DeclRefExpr 0x56537c965510 <col:10> '<builtin fn type>' Function 0x56537c965380 '__builtin_bswap32' 'unsigned int (unsigned int)'
|       `-ImplicitCastExpr 0x56537c9655c0 <col:29> 'unsigned int' <LValueToRValue>
|         `-DeclRefExpr 0x56537c965530 <col:29> 'unsigned int' lvalue ParmVar 0x56537c9641c0 '__bsx' 'unsigned int'
|-FunctionDecl 0x56537c965380 <col:10> col:10 implicit used __builtin_bswap32 'unsigned int (unsigned int)' extern
| |-ParmVarDecl 0x56537c965420 <<invalid sloc>> <invalid sloc> 'unsigned int'
| |-NoThrowAttr 0x56537c965490 <col:10> Implicit
| `-ConstAttr 0x56537c9654e8 <col:10> Implicit
|-FunctionDecl 0x56537c965740 <line:74:1, line:78:1> line:75:1 __bswap_64 '__uint64_t (__uint64_t)' static inline
| |-ParmVarDecl 0x56537c965638 <col:13, col:24> col:24 used __bsx '__uint64_t':'unsigned long'
| `-CompoundStmt 0x56537c965a58 <line:76:1, line:78:1>
|   `-ReturnStmt 0x56537c965a48 <line:77:3, col:34>
|     `-CallExpr 0x56537c965a08 <col:10, col:34> 'unsigned long'
|       |-ImplicitCastExpr 0x56537c9659f0 <col:10> 'unsigned long (*)(unsigned long)' <BuiltinFnToFnPtr>
|       | `-DeclRefExpr 0x56537c965978 <col:10> '<builtin fn type>' Function 0x56537c9657e8 '__builtin_bswap64' 'unsigned long (unsigned long)'
|       `-ImplicitCastExpr 0x56537c965a30 <col:29> '__uint64_t':'unsigned long' <LValueToRValue>
|         `-DeclRefExpr 0x56537c965998 <col:29> '__uint64_t':'unsigned long' lvalue ParmVar 0x56537c965638 '__bsx' '__uint64_t':'unsigned long'
|-FunctionDecl 0x56537c9657e8 <col:10> col:10 implicit used __builtin_bswap64 'unsigned long (unsigned long)' extern
| |-ParmVarDecl 0x56537c965888 <<invalid sloc>> <invalid sloc> 'unsigned long'
| |-NoThrowAttr 0x56537c9658f8 <col:10> Implicit
| `-ConstAttr 0x56537c965950 <col:10> Implicit
|-TypedefDecl 0x56537c965a88 <line:79:1, col:27> col:27 referenced size_t 'unsigned long'
| `-BuiltinType 0x56537c8fbfd0 'unsigned long'
|-TypedefDecl 0x56537c965b18 <line:81:1, col:18> col:18 referenced time_t '__time_t':'long'
| `-TypedefType 0x56537c965ae0 '__time_t' sugar
|   |-Typedef 0x56537c963708 '__time_t'
|   `-BuiltinType 0x56537c8fbf30 'long'
|-RecordDecl 0x56537c965b70 <line:84:1, line:88:3> line:84:8 struct timespec definition
| |-FieldDecl 0x56537c965c28 <line:86:5, col:14> col:14 tv_sec '__time_t':'long'
| `-FieldDecl 0x56537c965cb8 <line:87:5, col:23> col:23 tv_nsec '__syscall_slong_t':'long'
|-TypedefDecl 0x56537c965d48 <line:89:1, col:17> col:17 referenced pid_t '__pid_t':'int'
| `-TypedefType 0x56537c965d10 '__pid_t' sugar
|   |-Typedef 0x56537c963238 '__pid_t'
|   `-BuiltinType 0x56537c8fbf10 'int'
|-RecordDecl 0x56537c965da0 <line:90:1, line:93:3> line:90:8 struct sched_param definition
| `-FieldDecl 0x56537c965e60 <line:92:5, col:9> col:9 __sched_priority 'int'
|-RecordDecl 0x56537c965eb0 <line:96:1, line:99:3> line:96:8 struct __sched_param definition
| `-FieldDecl 0x56537c965f70 <line:98:5, col:9> col:9 __sched_priority 'int'
|-TypedefDecl 0x56537c965fd8 <line:100:1, col:27> col:27 referenced __cpu_mask 'unsigned long'
| `-BuiltinType 0x56537c8fbfd0 'unsigned long'
|-RecordDecl 0x56537c966030 <line:101:9, line:104:1> line:101:9 struct definition
| `-FieldDecl 0x56537c9662c0 <line:103:3, col:53> col:14 __bits '__cpu_mask [64]'
|-TypedefDecl 0x56537c9673a0 <line:101:1, line:104:3> col:3 referenced cpu_set_t 'struct cpu_set_t':'cpu_set_t'
| `-ElaboratedType 0x56537c966310 'struct cpu_set_t' sugar
|   `-RecordType 0x56537c9660b0 'cpu_set_t'
|     `-Record 0x56537c966030 ''
|-FunctionDecl 0x56537c967678 <line:106:1, line:107:42> line:106:12 __sched_cpucount 'int (size_t, const cpu_set_t *)' extern
| |-ParmVarDecl 0x56537c967448 <col:30, col:37> col:37 __setsize 'size_t':'unsigned long'
| |-ParmVarDecl 0x56537c967550 <col:48, col:65> col:65 __setp 'const cpu_set_t *'
| `-NoThrowAttr 0x56537c967728 <line:107:19>
|-FunctionDecl 0x56537c967900 <line:108:1, col:92> col:19 __sched_cpualloc 'cpu_set_t *(size_t)' extern
| |-ParmVarDecl 0x56537c967790 <col:37, col:44> col:44 __count 'size_t':'unsigned long'
| `-NoThrowAttr 0x56537c9679a8 <col:69>
|-FunctionDecl 0x56537c967b20 <line:109:1, col:87> col:13 __sched_cpufree 'void (cpu_set_t *)' extern
| |-ParmVarDecl 0x56537c967a10 <col:30, col:41> col:41 __set 'cpu_set_t *'
| `-NoThrowAttr 0x56537c967bc8 <col:64>
|-FunctionDecl 0x56537c967e88 <line:112:1, line:113:45> line:112:12 sched_setparam 'int (__pid_t, const struct sched_param *)' extern
| |-ParmVarDecl 0x56537c967c30 <col:28, col:36> col:36 __pid '__pid_t':'int'
| |-ParmVarDecl 0x56537c967d68 <col:43, col:69> col:69 __param 'const struct sched_param *'
| `-NoThrowAttr 0x56537c967f38 <line:113:22>
|-FunctionDecl 0x56537c9681b8 <line:114:1, col:111> col:12 sched_getparam 'int (__pid_t, struct sched_param *)' extern
| |-ParmVarDecl 0x56537c967fa0 <col:28, col:36> col:36 __pid '__pid_t':'int'
| |-ParmVarDecl 0x56537c968098 <col:43, col:63> col:63 __param 'struct sched_param *'
| `-NoThrowAttr 0x56537c968268 <col:88>
|-FunctionDecl 0x56537c968588 <line:115:1, line:116:85> line:115:12 sched_setscheduler 'int (__pid_t, int, const struct sched_param *)' extern
| |-ParmVarDecl 0x56537c9682d0 <col:32, col:40> col:40 __pid '__pid_t':'int'
| |-ParmVarDecl 0x56537c9683b0 <col:47, col:51> col:51 __policy 'int'
| |-ParmVarDecl 0x56537c968440 <line:116:11, col:37> col:37 __param 'const struct sched_param *'
| `-NoThrowAttr 0x56537c968640 <col:62>
|-FunctionDecl 0x56537c9687b8 <line:117:1, col:86> col:12 sched_getscheduler 'int (__pid_t)' extern
| |-ParmVarDecl 0x56537c9686a8 <col:32, col:40> col:40 __pid '__pid_t':'int'
| `-NoThrowAttr 0x56537c968860 <col:63>
|-FunctionDecl 0x56537c968988 <line:118:1, col:70> col:12 sched_yield 'int (void)' extern
| `-NoThrowAttr 0x56537c968a28 <col:47>
|-FunctionDecl 0x56537c968b30 <line:119:1, col:92> col:12 sched_get_priority_max 'int (int)' extern
| |-ParmVarDecl 0x56537c968a98 <col:36, col:40> col:40 __algorithm 'int'
| `-NoThrowAttr 0x56537c968bd8 <col:69>
|-FunctionDecl 0x56537c968ce0 <line:120:1, col:92> col:12 sched_get_priority_min 'int (int)' extern
| |-ParmVarDecl 0x56537c968c48 <col:36, col:40> col:40 __algorithm 'int'
| `-NoThrowAttr 0x56537c968d88 <col:69>
|-FunctionDecl 0x56537c969048 <line:121:1, col:111> col:12 sched_rr_get_interval 'int (__pid_t, struct timespec *)' extern
| |-ParmVarDecl 0x56537c968df0 <col:35, col:43> col:43 __pid '__pid_t':'int'
| |-ParmVarDecl 0x56537c968f28 <col:50, col:67> col:67 __t 'struct timespec *'
| `-NoThrowAttr 0x56537c9690f8 <col:88>
|-TypedefDecl 0x56537c969188 <line:125:1, col:19> col:19 referenced clock_t '__clock_t':'long'
| `-TypedefType 0x56537c969150 '__clock_t' sugar
|   |-Typedef 0x56537c963548 '__clock_t'
|   `-BuiltinType 0x56537c8fbf30 'long'
|-TypedefDecl 0x56537c969218 <line:128:1, col:21> col:21 referenced clockid_t '__clockid_t':'int'
| `-TypedefType 0x56537c9691e0 '__clockid_t' sugar
|   |-Typedef 0x56537c963938 '__clockid_t'
|   `-BuiltinType 0x56537c8fbf10 'int'
|-TypedefDecl 0x56537c9692a8 <line:129:1, col:19> col:19 referenced timer_t '__timer_t':'void *'
| `-TypedefType 0x56537c969270 '__timer_t' sugar
|   |-Typedef 0x56537c9639a8 '__timer_t'
|   `-PointerType 0x56537c8fc630 'void *'
|     `-BuiltinType 0x56537c8fbe70 'void'
|-RecordDecl 0x56537c969300 <line:131:1, line:144:1> line:131:8 struct tm definition
| |-FieldDecl 0x56537c9693d8 <line:133:3, col:7> col:7 tm_sec 'int'
| |-FieldDecl 0x56537c969440 <line:134:3, col:7> col:7 tm_min 'int'
| |-FieldDecl 0x56537c9694a8 <line:135:3, col:7> col:7 tm_hour 'int'
| |-FieldDecl 0x56537c969510 <line:136:3, col:7> col:7 tm_mday 'int'
| |-FieldDecl 0x56537c969578 <line:137:3, col:7> col:7 tm_mon 'int'
| |-FieldDecl 0x56537c9695e0 <line:138:3, col:7> col:7 tm_year 'int'
| |-FieldDecl 0x56537c969648 <line:139:3, col:7> col:7 tm_wday 'int'
| |-FieldDecl 0x56537c9696b0 <line:140:3, col:7> col:7 tm_yday 'int'
| |-FieldDecl 0x56537c969718 <line:141:3, col:7> col:7 tm_isdst 'int'
| |-FieldDecl 0x56537c969780 <line:142:3, col:12> col:12 tm_gmtoff 'long'
| `-FieldDecl 0x56537c9697e8 <line:143:3, col:15> col:15 tm_zone 'const char *'
|-RecordDecl 0x56537c969838 <line:147:1, line:151:3> line:147:8 struct itimerspec definition
| |-FieldDecl 0x56537c969908 <line:149:5, col:21> col:21 it_interval 'struct timespec':'struct timespec'
| `-FieldDecl 0x56537c969978 <line:150:5, col:21> col:21 it_value 'struct timespec':'struct timespec'
|-RecordDecl 0x56537c969a20 <line:152:1, col:8> col:8 struct sigevent
|-FunctionDecl 0x56537c969bf0 <line:154:1, col:68> col:16 clock 'clock_t (void)' extern
| `-NoThrowAttr 0x56537c969c90 <col:45>
|-FunctionDecl 0x56537c969e70 <line:155:1, col:77> col:15 time 'time_t (time_t *)' extern
| |-ParmVarDecl 0x56537c969d60 <col:21, col:29> col:29 __timer 'time_t *'
| `-NoThrowAttr 0x56537c969f18 <col:54>
|-FunctionDecl 0x56537c96a118 <line:156:1, line:157:73> line:156:15 difftime 'double (time_t, time_t)' extern
| |-ParmVarDecl 0x56537c969f80 <col:25, col:32> col:32 __time1 'time_t':'long'
| |-ParmVarDecl 0x56537c969ff8 <col:41, col:48> col:48 __time0 'time_t':'long'
| |-NoThrowAttr 0x56537c96a1c8 <line:157:22>
| `-ConstAttr 0x56537c96a220 <col:63>
|-FunctionDecl 0x56537c96b050 <line:158:1, col:79> col:15 mktime 'time_t (struct tm *)' extern
| |-ParmVarDecl 0x56537c96a318 <col:23, col:34> col:34 __tp 'struct tm *'
| `-NoThrowAttr 0x56537c96b0f8 <col:56>
|-FunctionDecl 0x56537c96b4a0 <line:159:1, line:161:77> line:159:15 strftime 'size_t (char *restrict, size_t, const char *restrict, const struct tm *restrict)' extern
| |-ParmVarDecl 0x56537c96b168 <col:25, col:42> col:42 __s 'char *restrict'
| |-ParmVarDecl 0x56537c96b1e0 <col:47, col:54> col:54 __maxsize 'size_t':'unsigned long'
| |-ParmVarDecl 0x56537c96b260 <line:160:4, col:27> col:27 __format 'const char *restrict'
| |-ParmVarDecl 0x56537c96b358 <line:161:4, col:32> col:32 __tp 'const struct tm *restrict'
| `-NoThrowAttr 0x56537c96b560 <col:54>
|-RecordDecl 0x56537c96b5b8 <line:163:9, line:170:1> line:163:16 struct __locale_struct definition
| |-RecordDecl 0x56537c96b668 parent 0x56537c8fbe18 <line:165:3, col:10> col:10 struct __locale_data
| |-FieldDecl 0x56537c96b8c8 <col:3, col:37> col:25 __locales 'struct __locale_data *[13]'
| |-FieldDecl 0x56537c96b968 <line:166:3, col:29> col:29 __ctype_b 'const unsigned short *'
| |-FieldDecl 0x56537c96b9d0 <line:167:3, col:14> col:14 __ctype_tolower 'const int *'
| |-FieldDecl 0x56537c96ba38 <line:168:3, col:14> col:14 __ctype_toupper 'const int *'
| `-FieldDecl 0x56537c96bb28 <line:169:3, col:25> col:15 __names 'const char *[13]'
|-TypedefDecl 0x56537c96bc48 <line:163:1, line:170:4> col:4 referenced __locale_t 'struct __locale_struct *'
| `-PointerType 0x56537c96bbf0 'struct __locale_struct *'
|   `-ElaboratedType 0x56537c96bb80 'struct __locale_struct' sugar
|     `-RecordType 0x56537c96b640 'struct __locale_struct'
|       `-Record 0x56537c96b5b8 '__locale_struct'
|-TypedefDecl 0x56537c96bcf8 <line:171:1, col:20> col:20 locale_t '__locale_t':'struct __locale_struct *'
| `-TypedefType 0x56537c96bcc0 '__locale_t' sugar
|   |-Typedef 0x56537c96bc48 '__locale_t'
|   `-PointerType 0x56537c96bbf0 'struct __locale_struct *'
|     `-ElaboratedType 0x56537c96bb80 'struct __locale_struct' sugar
|       `-RecordType 0x56537c96b640 'struct __locale_struct'
|         `-Record 0x56537c96b5b8 '__locale_struct'
|-FunctionDecl 0x56537c96d110 <line:172:1, line:175:63> line:172:15 strftime_l 'size_t (char *restrict, size_t, const char *restrict, const struct tm *restrict, __locale_t)' extern
| |-ParmVarDecl 0x56537c96bd68 <col:27, col:44> col:44 __s 'char *restrict'
| |-ParmVarDecl 0x56537c96bde0 <col:49, col:56> col:56 __maxsize 'size_t':'unsigned long'
| |-ParmVarDecl 0x56537c96be60 <line:173:6, col:29> col:29 __format 'const char *restrict'
| |-ParmVarDecl 0x56537c96bef0 <line:174:6, col:34> col:34 __tp 'const struct tm *restrict'
| |-ParmVarDecl 0x56537c96bf68 <line:175:6, col:17> col:17 __loc '__locale_t':'struct __locale_struct *'
| `-NoThrowAttr 0x56537c96d1d8 <col:40>
|-FunctionDecl 0x56537c96d3c8 <line:177:1, col:89> col:19 gmtime 'struct tm *(const time_t *)' extern
| |-ParmVarDecl 0x56537c96d2a0 <col:27, col:41> col:41 __timer 'const time_t *'
| `-NoThrowAttr 0x56537c96d470 <col:66>
|-FunctionDecl 0x56537c96d580 <line:178:1, col:92> col:19 localtime 'struct tm *(const time_t *)' extern
| |-ParmVarDecl 0x56537c96d4d8 <col:30, col:44> col:44 __timer 'const time_t *'
| `-NoThrowAttr 0x56537c96d628 <col:69>
|-FunctionDecl 0x56537c96d858 <line:180:1, line:181:75> line:180:19 gmtime_r 'struct tm *(const time_t *restrict, struct tm *restrict)' extern
| |-ParmVarDecl 0x56537c96d690 <col:29, col:54> col:54 __timer 'const time_t *restrict'
| |-ParmVarDecl 0x56537c96d720 <line:181:8, col:30> col:30 __tp 'struct tm *restrict'
| `-NoThrowAttr 0x56537c96d908 <col:52>
|-FunctionDecl 0x56537c96dab0 <line:182:1, line:183:78> line:182:19 localtime_r 'struct tm *(const time_t *restrict, struct tm *restrict)' extern
| |-ParmVarDecl 0x56537c96d970 <col:32, col:57> col:57 __timer 'const time_t *restrict'
| |-ParmVarDecl 0x56537c96da00 <line:183:11, col:33> col:33 __tp 'struct tm *restrict'
| `-NoThrowAttr 0x56537c96db60 <col:55>
|-FunctionDecl 0x56537c96dcf8 <line:185:1, col:85> col:14 asctime 'char *(const struct tm *)' extern
| |-ParmVarDecl 0x56537c96dbe0 <col:23, col:40> col:40 __tp 'const struct tm *'
| `-NoThrowAttr 0x56537c96dda0 <col:62>
|-FunctionDecl 0x56537c96df18 <line:186:1, col:83> col:14 ctime 'char *(const time_t *)' extern
| |-ParmVarDecl 0x56537c96de08 <col:21, col:35> col:35 __timer 'const time_t *'
| `-NoThrowAttr 0x56537c96dfc0 <col:60>
|-FunctionDecl 0x56537c96e2b8 <line:188:1, line:189:67> line:188:14 asctime_r 'char *(const struct tm *restrict, char *restrict)' extern
| |-ParmVarDecl 0x56537c96e118 <col:25, col:53> col:53 __tp 'const struct tm *restrict'
| |-ParmVarDecl 0x56537c96e198 <line:189:4, col:21> col:21 __buf 'char *restrict'
| `-NoThrowAttr 0x56537c96e368 <col:44>
|-FunctionDecl 0x56537c96e578 <line:190:1, line:191:72> line:190:14 ctime_r 'char *(const time_t *restrict, char *restrict)' extern
| |-ParmVarDecl 0x56537c96e3d0 <col:23, col:48> col:48 __timer 'const time_t *restrict'
| |-ParmVarDecl 0x56537c96e450 <line:191:9, col:26> col:26 __buf 'char *restrict'
| `-NoThrowAttr 0x56537c96e628 <col:49>
|-VarDecl 0x56537c96e728 <line:192:1, col:24> col:14 __tzname 'char *[2]' extern
|-VarDecl 0x56537c96e7a8 <line:193:1, col:12> col:12 __daylight 'int' extern
|-VarDecl 0x56537c96e828 <line:194:1, col:17> col:17 __timezone 'long' extern
|-VarDecl 0x56537c96e8f0 <line:195:1, col:22> col:14 tzname 'char *[2]' extern
|-FunctionDecl 0x56537c96ea20 <line:196:1, col:65> col:13 tzset 'void (void)' extern
| `-NoThrowAttr 0x56537c96eac0 <col:42>
|-VarDecl 0x56537c96eb30 <line:197:1, col:12> col:12 daylight 'int' extern
|-VarDecl 0x56537c96ebb0 <line:198:1, col:17> col:17 timezone 'long' extern
|-FunctionDecl 0x56537c96ed38 <line:199:1, col:80> col:12 stime 'int (const time_t *)' extern
| |-ParmVarDecl 0x56537c96ec28 <col:19, col:33> col:33 __when 'const time_t *'
| `-NoThrowAttr 0x56537c96ede0 <col:57>
|-FunctionDecl 0x56537c96eef0 <line:200:1, col:79> col:15 timegm 'time_t (struct tm *)' extern
| |-ParmVarDecl 0x56537c96ee60 <col:23, col:34> col:34 __tp 'struct tm *'
| `-NoThrowAttr 0x56537c96ef98 <col:56>
|-FunctionDecl 0x56537c96f0d0 <line:201:1, col:82> col:15 timelocal 'time_t (struct tm *)' extern
| |-ParmVarDecl 0x56537c96f018 <col:26, col:37> col:37 __tp 'struct tm *'
| `-NoThrowAttr 0x56537c96f178 <col:59>
|-FunctionDecl 0x56537c96f280 <line:202:1, col:99> col:12 dysize 'int (int)' extern
| |-ParmVarDecl 0x56537c96f1e8 <col:20, col:24> col:24 __year 'int'
| |-NoThrowAttr 0x56537c96f328 <col:48>
| `-ConstAttr 0x56537c96f380 <col:89>
|-FunctionDecl 0x56537c96f5e8 <line:203:1, line:204:37> line:203:12 nanosleep 'int (const struct timespec *, struct timespec *)' extern
| |-ParmVarDecl 0x56537c96f438 <col:23, col:46> col:46 __requested_time 'const struct timespec *'
| `-ParmVarDecl 0x56537c96f4c8 <line:204:9, col:26> col:26 __remaining 'struct timespec *'
|-FunctionDecl 0x56537c96f848 <line:205:1, col:111> col:12 clock_getres 'int (clockid_t, struct timespec *)' extern
| |-ParmVarDecl 0x56537c96f6d8 <col:26, col:36> col:36 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x56537c96f768 <col:48, col:65> col:65 __res 'struct timespec *'
| `-NoThrowAttr 0x56537c96f8f8 <col:88>
|-FunctionDecl 0x56537c96fa90 <line:206:1, col:111> col:12 clock_gettime 'int (clockid_t, struct timespec *)' extern
| |-ParmVarDecl 0x56537c96f960 <col:27, col:37> col:37 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x56537c96f9f0 <col:49, col:66> col:66 __tp 'struct timespec *'
| `-NoThrowAttr 0x56537c96fb40 <col:88>
|-FunctionDecl 0x56537c96fd58 <line:207:1, line:208:45> line:207:12 clock_settime 'int (clockid_t, const struct timespec *)' extern
| |-ParmVarDecl 0x56537c96fba8 <col:27, col:37> col:37 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x56537c96fc38 <col:49, col:72> col:72 __tp 'const struct timespec *'
| `-NoThrowAttr 0x56537c96fe08 <line:208:22>
|-FunctionDecl 0x56537c970178 <line:209:1, line:211:30> line:209:12 clock_nanosleep 'int (clockid_t, int, const struct timespec *, struct timespec *)' extern
| |-ParmVarDecl 0x56537c96fe70 <col:29, col:39> col:39 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x56537c96fef0 <col:51, col:55> col:55 __flags 'int'
| |-ParmVarDecl 0x56537c96ff80 <line:210:8, col:31> col:31 __req 'const struct timespec *'
| `-ParmVarDecl 0x56537c970010 <line:211:8, col:25> col:25 __rem 'struct timespec *'
|-FunctionDecl 0x56537c970478 <line:212:1, col:108> col:12 clock_getcpuclockid 'int (pid_t, clockid_t *)' extern
| |-ParmVarDecl 0x56537c970278 <col:33, col:39> col:39 __pid 'pid_t':'int'
| |-ParmVarDecl 0x56537c970350 <col:46, col:57> col:57 __clock_id 'clockid_t *'
| `-NoThrowAttr 0x56537c970528 <col:85>
|-FunctionDecl 0x56537c970918 <line:213:1, line:215:75> line:213:12 timer_create 'int (clockid_t, struct sigevent *restrict, timer_t *restrict)' extern
| |-ParmVarDecl 0x56537c970590 <col:26, col:36> col:36 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x56537c9706c8 <line:214:5, col:33> col:33 __evp 'struct sigevent *restrict'
| |-ParmVarDecl 0x56537c9707d0 <line:215:5, col:25> col:25 __timerid 'timer_t *restrict'
| `-NoThrowAttr 0x56537c9709d0 <col:52>
|-FunctionDecl 0x56537c970b48 <line:216:1, col:84> col:12 timer_delete 'int (timer_t)' extern
| |-ParmVarDecl 0x56537c970a38 <col:26, col:34> col:34 __timerid 'timer_t':'void *'
| `-NoThrowAttr 0x56537c970bf0 <col:61>
|-FunctionDecl 0x56537c9710f0 <line:217:1, line:219:85> line:217:12 timer_settime 'int (timer_t, int, const struct itimerspec *restrict, struct itimerspec *restrict)' extern
| |-ParmVarDecl 0x56537c970c58 <col:27, col:35> col:35 __timerid 'timer_t':'void *'
| |-ParmVarDecl 0x56537c970cd8 <col:46, col:50> col:50 __flags 'int'
| |-ParmVarDecl 0x56537c970e08 <line:218:6, col:42> col:42 __value 'const struct itimerspec *restrict'
| |-ParmVarDecl 0x56537c970ef8 <line:219:6, col:36> col:36 __ovalue 'struct itimerspec *restrict'
| `-NoThrowAttr 0x56537c9711b0 <col:62>
|-FunctionDecl 0x56537c9713c8 <line:220:1, line:221:45> line:220:12 timer_gettime 'int (timer_t, struct itimerspec *)' extern
| |-ParmVarDecl 0x56537c971218 <col:27, col:35> col:35 __timerid 'timer_t':'void *'
| |-ParmVarDecl 0x56537c9712a8 <col:46, col:65> col:65 __value 'struct itimerspec *'
| `-NoThrowAttr 0x56537c971478 <line:221:22>
|-FunctionDecl 0x56537c971578 <line:222:1, col:88> col:12 timer_getoverrun 'int (timer_t)' extern
| |-ParmVarDecl 0x56537c9714e0 <col:30, col:38> col:38 __timerid 'timer_t':'void *'
| `-NoThrowAttr 0x56537c971620 <col:65>
|-TypedefDecl 0x56537c971690 <line:224:1, col:27> col:27 referenced pthread_t 'unsigned long'
| `-BuiltinType 0x56537c8fbfd0 'unsigned long'
|-RecordDecl 0x56537c9716e8 <line:225:1, line:229:1> line:225:7 union pthread_attr_t definition
| |-FieldDecl 0x56537c971830 <line:227:3, col:17> col:8 __size 'char [56]'
| `-FieldDecl 0x56537c971898 <line:228:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x56537c971948 <line:230:1, col:30> col:30 referenced pthread_attr_t 'union pthread_attr_t':'union pthread_attr_t'
| `-ElaboratedType 0x56537c9718f0 'union pthread_attr_t' sugar
|   `-RecordType 0x56537c971770 'union pthread_attr_t'
|     `-Record 0x56537c9716e8 'pthread_attr_t'
|-RecordDecl 0x56537c9719a0 <line:231:9, line:235:1> line:231:16 struct __pthread_internal_list definition
| |-FieldDecl 0x56537c971b18 <line:233:3, col:35> col:35 __prev 'struct __pthread_internal_list *'
| `-FieldDecl 0x56537c971b90 <line:234:3, col:35> col:35 __next 'struct __pthread_internal_list *'
|-TypedefDecl 0x56537c971c40 <line:231:1, line:235:3> col:3 referenced __pthread_list_t 'struct __pthread_internal_list':'struct __pthread_internal_list'
| `-ElaboratedType 0x56537c971be0 'struct __pthread_internal_list' sugar
|   `-RecordType 0x56537c971a20 'struct __pthread_internal_list'
|     `-Record 0x56537c9719a0 '__pthread_internal_list'
|-RecordDecl 0x56537c971cb0 <line:236:9, line:250:1> line:236:9 union definition
| |-RecordDecl 0x56537c971d58 parent 0x56537c8fbe18 <line:238:3, line:247:3> line:238:10 struct __pthread_mutex_s definition
| | |-FieldDecl 0x56537c971e30 <line:240:5, col:9> col:9 __lock 'int'
| | |-FieldDecl 0x56537c971e98 <line:241:5, col:18> col:18 __count 'unsigned int'
| | |-FieldDecl 0x56537c971f00 <line:242:5, col:9> col:9 __owner 'int'
| | |-FieldDecl 0x56537c971f68 <line:243:5, col:18> col:18 __nusers 'unsigned int'
| | |-FieldDecl 0x56537c971fd0 <line:244:5, col:9> col:9 __kind 'int'
| | |-FieldDecl 0x56537c972038 <line:245:5, col:9> col:9 __spins 'int'
| | `-FieldDecl 0x56537c976110 <line:246:5, col:22> col:22 __list '__pthread_list_t':'struct __pthread_internal_list'
| |-FieldDecl 0x56537c9761c0 <line:238:3, line:247:5> col:5 __data 'struct __pthread_mutex_s':'struct __pthread_mutex_s'
| |-FieldDecl 0x56537c9762b0 <line:248:3, col:17> col:8 __size 'char [40]'
| `-FieldDecl 0x56537c976318 <line:249:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x56537c9764a0 <line:236:1, line:250:3> col:3 referenced pthread_mutex_t 'union pthread_mutex_t':'pthread_mutex_t'
| `-ElaboratedType 0x56537c976440 'union pthread_mutex_t' sugar
|   `-RecordType 0x56537c971d30 'pthread_mutex_t'
|     `-Record 0x56537c971cb0 ''
|-RecordDecl 0x56537c976510 <line:251:9, line:255:1> line:251:9 union definition
| |-FieldDecl 0x56537c976650 <line:253:3, col:16> col:8 __size 'char [4]'
| `-FieldDecl 0x56537c9766b8 <line:254:3, col:7> col:7 __align 'int'
|-TypedefDecl 0x56537c976770 <line:251:1, line:255:3> col:3 referenced pthread_mutexattr_t 'union pthread_mutexattr_t':'pthread_mutexattr_t'
| `-ElaboratedType 0x56537c976710 'union pthread_mutexattr_t' sugar
|   `-RecordType 0x56537c976590 'pthread_mutexattr_t'
|     `-Record 0x56537c976510 ''
|-RecordDecl 0x56537c9767e0 <line:256:9, line:271:1> line:256:9 union definition
| |-RecordDecl 0x56537c976888 <line:258:3, line:268:3> line:258:3 struct definition
| | |-FieldDecl 0x56537c976950 <line:260:5, col:9> col:9 __lock 'int'
| | |-FieldDecl 0x56537c9769b8 <line:261:5, col:18> col:18 __futex 'unsigned int'
| | |-FieldDecl 0x56537c976a20 <line:262:19, col:42> col:42 __total_seq 'unsigned long long'
| | |-FieldDecl 0x56537c976a88 <line:263:19, col:42> col:42 __wakeup_seq 'unsigned long long'
| | |-FieldDecl 0x56537c976af0 <line:264:19, col:42> col:42 __woken_seq 'unsigned long long'
| | |-FieldDecl 0x56537c976b58 <line:265:5, col:11> col:11 __mutex 'void *'
| | |-FieldDecl 0x56537c976bc0 <line:266:5, col:18> col:18 __nwaiters 'unsigned int'
| | `-FieldDecl 0x56537c976c28 <line:267:5, col:18> col:18 __broadcast_seq 'unsigned int'
| |-FieldDecl 0x56537c976ce0 <line:258:3, line:268:5> col:5 __data 'struct (anonymous struct at ./split_0/safe003_rmo.opt_false-unreach-call.i:258:3)':'struct pthread_cond_t::(anonymous at ./split_0/safe003_rmo.opt_false-unreach-call.i:258:3)'
| |-FieldDecl 0x56537c976dd0 <line:269:3, col:17> col:8 __size 'char [48]'
| `-FieldDecl 0x56537c976e38 <line:270:17, col:31> col:31 __align 'long long'
|-TypedefDecl 0x56537c976f70 <line:256:1, line:271:3> col:3 referenced pthread_cond_t 'union pthread_cond_t':'pthread_cond_t'
| `-ElaboratedType 0x56537c976f10 'union pthread_cond_t' sugar
|   `-RecordType 0x56537c976860 'pthread_cond_t'
|     `-Record 0x56537c9767e0 ''
|-RecordDecl 0x56537c976fe0 <line:272:9, line:276:1> line:272:9 union definition
| |-FieldDecl 0x56537c978130 <line:274:3, col:16> col:8 __size 'char [4]'
| `-FieldDecl 0x56537c978198 <line:275:3, col:7> col:7 __align 'int'
|-TypedefDecl 0x56537c978250 <line:272:1, line:276:3> col:3 referenced pthread_condattr_t 'union pthread_condattr_t':'pthread_condattr_t'
| `-ElaboratedType 0x56537c9781f0 'union pthread_condattr_t' sugar
|   `-RecordType 0x56537c977060 'pthread_condattr_t'
|     `-Record 0x56537c976fe0 ''
|-TypedefDecl 0x56537c9782d8 <line:277:1, col:22> col:22 referenced pthread_key_t 'unsigned int'
| `-BuiltinType 0x56537c8fbfb0 'unsigned int'
|-TypedefDecl 0x56537c978348 <line:278:1, col:13> col:13 referenced pthread_once_t 'int'
| `-BuiltinType 0x56537c8fbf10 'int'
|-RecordDecl 0x56537c9783a0 <line:279:9, line:297:1> line:279:9 union definition
| |-RecordDecl 0x56537c978448 <line:281:3, line:294:3> line:281:3 struct definition
| | |-FieldDecl 0x56537c978510 <line:283:5, col:9> col:9 __lock 'int'
| | |-FieldDecl 0x56537c978578 <line:284:5, col:18> col:18 __nr_readers 'unsigned int'
| | |-FieldDecl 0x56537c9785e0 <line:285:5, col:18> col:18 __readers_wakeup 'unsigned int'
| | |-FieldDecl 0x56537c978648 <line:286:5, col:18> col:18 __writer_wakeup 'unsigned int'
| | |-FieldDecl 0x56537c9786b0 <line:287:5, col:18> col:18 __nr_readers_queued 'unsigned int'
| | |-FieldDecl 0x56537c978718 <line:288:5, col:18> col:18 __nr_writers_queued 'unsigned int'
| | |-FieldDecl 0x56537c978780 <line:289:5, col:9> col:9 __writer 'int'
| | |-FieldDecl 0x56537c9787e8 <line:290:5, col:9> col:9 __shared 'int'
| | |-FieldDecl 0x56537c978850 <line:291:5, col:23> col:23 __pad1 'unsigned long'
| | |-FieldDecl 0x56537c9788b8 <line:292:5, col:23> col:23 __pad2 'unsigned long'
| | `-FieldDecl 0x56537c978920 <line:293:5, col:18> col:18 __flags 'unsigned int'
| |-FieldDecl 0x56537c9789d0 <line:281:3, line:294:5> col:5 __data 'struct (anonymous struct at ./split_0/safe003_rmo.opt_false-unreach-call.i:281:3)':'struct pthread_rwlock_t::(anonymous at ./split_0/safe003_rmo.opt_false-unreach-call.i:281:3)'
| |-FieldDecl 0x56537c978a78 <line:295:3, col:17> col:8 __size 'char [56]'
| `-FieldDecl 0x56537c978ae0 <line:296:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x56537c978c30 <line:279:1, line:297:3> col:3 referenced pthread_rwlock_t 'union pthread_rwlock_t':'pthread_rwlock_t'
| `-ElaboratedType 0x56537c978bd0 'union pthread_rwlock_t' sugar
|   `-RecordType 0x56537c978420 'pthread_rwlock_t'
|     `-Record 0x56537c9783a0 ''
|-RecordDecl 0x56537c978ca0 <line:298:9, line:302:1> line:298:9 union definition
| |-FieldDecl 0x56537c978de0 <line:300:3, col:16> col:8 __size 'char [8]'
| `-FieldDecl 0x56537c978e48 <line:301:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x56537c978f00 <line:298:1, line:302:3> col:3 referenced pthread_rwlockattr_t 'union pthread_rwlockattr_t':'pthread_rwlockattr_t'
| `-ElaboratedType 0x56537c978ea0 'union pthread_rwlockattr_t' sugar
|   `-RecordType 0x56537c978d20 'pthread_rwlockattr_t'
|     `-Record 0x56537c978ca0 ''
|-TypedefDecl 0x56537c978f88 <line:303:1, col:22> col:22 referenced pthread_spinlock_t 'volatile int'
| `-QualType 0x56537c8fbf14 'volatile int' volatile
|   `-BuiltinType 0x56537c8fbf10 'int'
|-RecordDecl 0x56537c978fe0 <line:304:9, line:308:1> line:304:9 union definition
| |-FieldDecl 0x56537c97a140 <line:306:3, col:17> col:8 __size 'char [32]'
| `-FieldDecl 0x56537c97a1a8 <line:307:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x56537c97a260 <line:304:1, line:308:3> col:3 referenced pthread_barrier_t 'union pthread_barrier_t':'pthread_barrier_t'
| `-ElaboratedType 0x56537c97a200 'union pthread_barrier_t' sugar
|   `-RecordType 0x56537c979060 'pthread_barrier_t'
|     `-Record 0x56537c978fe0 ''
|-RecordDecl 0x56537c97a2d0 <line:309:9, line:313:1> line:309:9 union definition
| |-FieldDecl 0x56537c97a3d0 <line:311:3, col:16> col:8 __size 'char [4]'
| `-FieldDecl 0x56537c97a438 <line:312:3, col:7> col:7 __align 'int'
|-TypedefDecl 0x56537c97a4f0 <line:309:1, line:313:3> col:3 referenced pthread_barrierattr_t 'union pthread_barrierattr_t':'pthread_barrierattr_t'
| `-ElaboratedType 0x56537c97a490 'union pthread_barrierattr_t' sugar
|   `-RecordType 0x56537c97a350 'pthread_barrierattr_t'
|     `-Record 0x56537c97a2d0 ''
|-TypedefDecl 0x56537c97a608 <line:314:1, col:29> col:18 referenced __jmp_buf 'long [8]'
| `-ConstantArrayType 0x56537c97a5a0 'long [8]' 8 
|   `-BuiltinType 0x56537c8fbf30 'long'
|-EnumDecl 0x56537c97a660 <line:315:1, line:319:1> line:315:1
| |-EnumConstantDecl 0x56537c97a728 <line:317:3> col:3 PTHREAD_CREATE_JOINABLE 'int'
| `-EnumConstantDecl 0x56537c97a778 <line:318:3> col:3 PTHREAD_CREATE_DETACHED 'int'
|-EnumDecl 0x56537c97a7c8 <line:320:1, line:331:1> line:320:1
| |-EnumConstantDecl 0x56537c97a898 <line:322:3> col:3 referenced PTHREAD_MUTEX_TIMED_NP 'int'
| |-EnumConstantDecl 0x56537c97a8e8 <line:323:3> col:3 referenced PTHREAD_MUTEX_RECURSIVE_NP 'int'
| |-EnumConstantDecl 0x56537c97a938 <line:324:3> col:3 referenced PTHREAD_MUTEX_ERRORCHECK_NP 'int'
| |-EnumConstantDecl 0x56537c97a988 <line:325:3> col:3 PTHREAD_MUTEX_ADAPTIVE_NP 'int'
| |-EnumConstantDecl 0x56537c97aa10 <line:327:3, col:26> col:3 referenced PTHREAD_MUTEX_NORMAL 'int'
| | `-ConstantExpr 0x56537c97a9f8 <col:26> 'int'
| |   `-DeclRefExpr 0x56537c97a9d8 <col:26> 'int' EnumConstant 0x56537c97a898 'PTHREAD_MUTEX_TIMED_NP' 'int'
| |-EnumConstantDecl 0x56537c97aa98 <line:328:3, col:29> col:3 PTHREAD_MUTEX_RECURSIVE 'int'
| | `-ConstantExpr 0x56537c97aa80 <col:29> 'int'
| |   `-DeclRefExpr 0x56537c97aa60 <col:29> 'int' EnumConstant 0x56537c97a8e8 'PTHREAD_MUTEX_RECURSIVE_NP' 'int'
| |-EnumConstantDecl 0x56537c97ab20 <line:329:3, col:30> col:3 PTHREAD_MUTEX_ERRORCHECK 'int'
| | `-ConstantExpr 0x56537c97ab08 <col:30> 'int'
| |   `-DeclRefExpr 0x56537c97aae8 <col:30> 'int' EnumConstant 0x56537c97a938 'PTHREAD_MUTEX_ERRORCHECK_NP' 'int'
| `-EnumConstantDecl 0x56537c97aba8 <line:330:3, col:27> col:3 PTHREAD_MUTEX_DEFAULT 'int'
|   `-ConstantExpr 0x56537c97ab90 <col:27> 'int'
|     `-DeclRefExpr 0x56537c97ab70 <col:27> 'int' EnumConstant 0x56537c97aa10 'PTHREAD_MUTEX_NORMAL' 'int'
|-EnumDecl 0x56537c97abf8 <line:332:1, line:338:1> line:332:1
| |-EnumConstantDecl 0x56537c97acc8 <line:334:3> col:3 referenced PTHREAD_MUTEX_STALLED 'int'
| |-EnumConstantDecl 0x56537c97ad50 <line:335:3, col:30> col:3 PTHREAD_MUTEX_STALLED_NP 'int'
| | `-ConstantExpr 0x56537c97ad38 <col:30> 'int'
| |   `-DeclRefExpr 0x56537c97ad18 <col:30> 'int' EnumConstant 0x56537c97acc8 'PTHREAD_MUTEX_STALLED' 'int'
| |-EnumConstantDecl 0x56537c97ada0 <line:336:3> col:3 referenced PTHREAD_MUTEX_ROBUST 'int'
| `-EnumConstantDecl 0x56537c97ae28 <line:337:3, col:29> col:3 PTHREAD_MUTEX_ROBUST_NP 'int'
|   `-ConstantExpr 0x56537c97ae10 <col:29> 'int'
|     `-DeclRefExpr 0x56537c97adf0 <col:29> 'int' EnumConstant 0x56537c97ada0 'PTHREAD_MUTEX_ROBUST' 'int'
|-EnumDecl 0x56537c97ae78 <line:339:1, line:344:1> line:339:1
| |-EnumConstantDecl 0x56537c97af48 <line:341:3> col:3 PTHREAD_PRIO_NONE 'int'
| |-EnumConstantDecl 0x56537c97af98 <line:342:3> col:3 PTHREAD_PRIO_INHERIT 'int'
| `-EnumConstantDecl 0x56537c97afe8 <line:343:3> col:3 PTHREAD_PRIO_PROTECT 'int'
|-EnumDecl 0x56537c97b038 <line:345:1, line:351:1> line:345:1
| |-EnumConstantDecl 0x56537c97b150 <line:347:3> col:3 referenced PTHREAD_RWLOCK_PREFER_READER_NP 'int'
| |-EnumConstantDecl 0x56537c97b1a0 <line:348:3> col:3 PTHREAD_RWLOCK_PREFER_WRITER_NP 'int'
| |-EnumConstantDecl 0x56537c97b1f0 <line:349:3> col:3 PTHREAD_RWLOCK_PREFER_WRITER_NONRECURSIVE_NP 'int'
| `-EnumConstantDecl 0x56537c97b278 <line:350:3, col:31> col:3 PTHREAD_RWLOCK_DEFAULT_NP 'int'
|   `-ConstantExpr 0x56537c97b260 <col:31> 'int'
|     `-DeclRefExpr 0x56537c97b240 <col:31> 'int' EnumConstant 0x56537c97b150 'PTHREAD_RWLOCK_PREFER_READER_NP' 'int'
|-EnumDecl 0x56537c97b2c8 <line:352:1, line:356:1> line:352:1
| |-EnumConstantDecl 0x56537c97b398 <line:354:3> col:3 PTHREAD_INHERIT_SCHED 'int'
| `-EnumConstantDecl 0x56537c97b3e8 <line:355:3> col:3 PTHREAD_EXPLICIT_SCHED 'int'
|-EnumDecl 0x56537c97b438 <line:357:1, line:361:1> line:357:1
| |-EnumConstantDecl 0x56537c97b508 <line:359:3> col:3 PTHREAD_SCOPE_SYSTEM 'int'
| `-EnumConstantDecl 0x56537c97b558 <line:360:3> col:3 PTHREAD_SCOPE_PROCESS 'int'
|-EnumDecl 0x56537c97b5a8 <line:362:1, line:366:1> line:362:1
| |-EnumConstantDecl 0x56537c97b678 <line:364:3> col:3 PTHREAD_PROCESS_PRIVATE 'int'
| `-EnumConstantDecl 0x56537c97b6c8 <line:365:3> col:3 PTHREAD_PROCESS_SHARED 'int'
|-RecordDecl 0x56537c97b718 <line:367:1, line:373:1> line:367:8 struct _pthread_cleanup_buffer definition
| |-FieldDecl 0x56537c97b958 <line:369:3, col:28> col:10 __routine 'void (*)(void *)'
| |-FieldDecl 0x56537c97b9c0 <line:370:3, col:9> col:9 __arg 'void *'
| |-FieldDecl 0x56537c97ba28 <line:371:3, col:7> col:7 __canceltype 'int'
| `-FieldDecl 0x56537c97bb48 <line:372:3, col:35> col:35 __prev 'struct _pthread_cleanup_buffer *'
|-EnumDecl 0x56537c97bb98 <line:374:1, line:378:1> line:374:1
| |-EnumConstantDecl 0x56537c97bc68 <line:376:3> col:3 PTHREAD_CANCEL_ENABLE 'int'
| `-EnumConstantDecl 0x56537c97bcb8 <line:377:3> col:3 PTHREAD_CANCEL_DISABLE 'int'
|-EnumDecl 0x56537c97bd08 <line:379:1, line:383:1> line:379:1
| |-EnumConstantDecl 0x56537c97bdd8 <line:381:3> col:3 PTHREAD_CANCEL_DEFERRED 'int'
| `-EnumConstantDecl 0x56537c97be28 <line:382:3> col:3 PTHREAD_CANCEL_ASYNCHRONOUS 'int'
|-FunctionDecl 0x56537c97c488 <line:385:1, line:388:96> line:385:12 used pthread_create 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' extern
| |-ParmVarDecl 0x56537c97bf20 <col:28, col:50> col:50 __newthread 'pthread_t *restrict'
| |-ParmVarDecl 0x56537c97c030 <line:386:7, col:40> col:40 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x56537c97c270 <line:387:7, col:39> col:15 __start_routine 'void *(*)(void *)'
| |-ParmVarDecl 0x56537c97c2f0 <line:388:7, col:24> col:24 __arg 'void *restrict'
| |-NoThrowAttr 0x56537c97c548 <col:47>
| |-NonNullAttr 0x56537c97c5a0 <col:77, col:94> 1 3
| `-CallbackAttr 0x56537c97c5d8 <line:385:12> Implicit 2 3
|-FunctionDecl 0x56537c97c700 <line:389:1, col:72> col:13 pthread_exit 'void (void *) __attribute__((noreturn))' extern
| `-ParmVarDecl 0x56537c97c630 <col:27, col:33> col:33 __retval 'void *'
|-FunctionDecl 0x56537c97c958 <line:390:1, col:64> col:12 pthread_join 'int (pthread_t, void **)' extern
| |-ParmVarDecl 0x56537c97c7b8 <col:26, col:36> col:36 __th 'pthread_t':'unsigned long'
| `-ParmVarDecl 0x56537c97c838 <col:42, col:49> col:49 __thread_return 'void **'
|-FunctionDecl 0x56537c97cb28 <line:391:1, col:83> col:12 pthread_detach 'int (pthread_t)' extern
| |-ParmVarDecl 0x56537c97ca18 <col:28, col:38> col:38 __th 'pthread_t':'unsigned long'
| `-NoThrowAttr 0x56537c97cbd0 <col:60>
|-FunctionDecl 0x56537c97cd20 <line:392:1, col:105> col:18 pthread_self 'pthread_t (void)' extern
| |-NoThrowAttr 0x56537c97cdc0 <col:54>
| `-ConstAttr 0x56537c97ce18 <col:95>
|-FunctionDecl 0x56537c97cfe8 <line:393:1, line:394:70> line:393:12 pthread_equal 'int (pthread_t, pthread_t)' extern
| |-ParmVarDecl 0x56537c97ce50 <col:27, col:37> col:37 __thread1 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x56537c97cec8 <col:48, col:58> col:58 __thread2 'pthread_t':'unsigned long'
| |-NoThrowAttr 0x56537c97d098 <line:394:19>
| `-ConstAttr 0x56537c97d0f0 <col:60>
|-FunctionDecl 0x56537c97eb08 <line:395:1, col:128> col:12 pthread_attr_init 'int (pthread_attr_t *)' extern
| |-ParmVarDecl 0x56537c97e9d0 <col:31, col:47> col:47 __attr 'pthread_attr_t *'
| |-NoThrowAttr 0x56537c97ebb0 <col:71>
| `-NonNullAttr 0x56537c97ec08 <col:112, col:126> 1
|-FunctionDecl 0x56537c97ed10 <line:396:1, line:397:79> line:396:12 pthread_attr_destroy 'int (pthread_attr_t *)' extern
| |-ParmVarDecl 0x56537c97ec58 <col:34, col:50> col:50 __attr 'pthread_attr_t *'
| |-NoThrowAttr 0x56537c97edb8 <line:397:22>
| `-NonNullAttr 0x56537c97ee10 <col:63, col:77> 1
|-FunctionDecl 0x56537c97f038 <line:398:1, line:400:82> line:398:12 pthread_attr_getdetachstate 'int (const pthread_attr_t *, int *)' extern
| |-ParmVarDecl 0x56537c97ee58 <col:41, col:63> col:63 __attr 'const pthread_attr_t *'
| |-ParmVarDecl 0x56537c97eed8 <line:399:6, col:11> col:11 __detachstate 'int *'
| |-NoThrowAttr 0x56537c97f0e8 <line:400:22>
| `-NonNullAttr 0x56537c97f140 <col:63, col:80> 1 2
|-FunctionDecl 0x56537c97f348 <line:401:1, line:403:79> line:401:12 pthread_attr_setdetachstate 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x56537c97f188 <col:41, col:57> col:57 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x56537c97f208 <line:402:6, col:10> col:10 __detachstate 'int'
| |-NoThrowAttr 0x56537c97f3f8 <line:403:22>
| `-NonNullAttr 0x56537c97f450 <col:63, col:77> 1
|-FunctionDecl 0x56537c97f6a8 <line:404:1, line:406:82> line:404:12 pthread_attr_getguardsize 'int (const pthread_attr_t *, size_t *)' extern
| |-ParmVarDecl 0x56537c97f498 <col:39, col:61> col:61 __attr 'const pthread_attr_t *'
| |-ParmVarDecl 0x56537c97f540 <line:405:11, col:19> col:19 __guardsize 'size_t *'
| |-NoThrowAttr 0x56537c97f758 <line:406:22>
| `-NonNullAttr 0x56537c97f7b0 <col:63, col:80> 1 2
|-FunctionDecl 0x56537c9809e8 <line:407:1, line:409:79> line:407:12 pthread_attr_setguardsize 'int (pthread_attr_t *, size_t)' extern
| |-ParmVarDecl 0x56537c97f7f8 <col:39, col:55> col:55 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x56537c97f870 <line:408:11, col:18> col:18 __guardsize 'size_t':'unsigned long'
| |-NoThrowAttr 0x56537c980a98 <line:409:22>
| `-NonNullAttr 0x56537c980af0 <col:63, col:77> 1
|-FunctionDecl 0x56537c980d28 <line:410:1, line:412:82> line:410:12 pthread_attr_getschedparam 'int (const pthread_attr_t *restrict, struct sched_param *restrict)' extern
| |-ParmVarDecl 0x56537c980b38 <col:40, col:73> col:73 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x56537c980bc8 <line:411:12, col:43> col:43 __param 'struct sched_param *restrict'
| |-NoThrowAttr 0x56537c980dd8 <line:412:22>
| `-NonNullAttr 0x56537c980e30 <col:63, col:80> 1 2
|-FunctionDecl 0x56537c981068 <line:413:1, line:415:97> line:413:12 pthread_attr_setschedparam 'int (pthread_attr_t *restrict, const struct sched_param *restrict)' extern
| |-ParmVarDecl 0x56537c980e78 <col:40, col:67> col:67 __attr 'pthread_attr_t *restrict'
| |-ParmVarDecl 0x56537c980f08 <line:414:12, line:415:12> col:12 __param 'const struct sched_param *restrict'
| |-NoThrowAttr 0x56537c981118 <col:37>
| `-NonNullAttr 0x56537c981170 <col:78, col:95> 1 2
|-FunctionDecl 0x56537c981358 <line:416:1, line:418:82> line:416:12 pthread_attr_getschedpolicy 'int (const pthread_attr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x56537c9811b8 <col:41, line:417:6> col:6 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x56537c981238 <col:14, col:30> col:30 __policy 'int *restrict'
| |-NoThrowAttr 0x56537c981408 <line:418:22>
| `-NonNullAttr 0x56537c981460 <col:63, col:80> 1 2
|-FunctionDecl 0x56537c9815e8 <line:419:1, line:420:79> line:419:12 pthread_attr_setschedpolicy 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x56537c9814a8 <col:41, col:57> col:57 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x56537c981528 <col:65, col:69> col:69 __policy 'int'
| |-NoThrowAttr 0x56537c981698 <line:420:22>
| `-NonNullAttr 0x56537c9816f0 <col:63, col:77> 1
|-FunctionDecl 0x56537c981898 <line:421:1, line:423:82> line:421:12 pthread_attr_getinheritsched 'int (const pthread_attr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x56537c981738 <col:42, line:422:7> col:7 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x56537c9817b8 <col:15, col:31> col:31 __inherit 'int *restrict'
| |-NoThrowAttr 0x56537c981948 <line:423:22>
| `-NonNullAttr 0x56537c9819c0 <col:63, col:80> 1 2
|-FunctionDecl 0x56537c981b48 <line:424:1, line:426:79> line:424:12 pthread_attr_setinheritsched 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x56537c981a08 <col:42, col:58> col:58 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x56537c981a88 <line:425:7, col:11> col:11 __inherit 'int'
| |-NoThrowAttr 0x56537c981bf8 <line:426:22>
| `-NonNullAttr 0x56537c981c50 <col:63, col:77> 1
|-FunctionDecl 0x56537c981df8 <line:427:1, line:429:82> line:427:12 pthread_attr_getscope 'int (const pthread_attr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x56537c981c98 <col:35, col:68> col:68 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x56537c981d18 <line:428:7, col:23> col:23 __scope 'int *restrict'
| |-NoThrowAttr 0x56537c981ea8 <line:429:22>
| `-NonNullAttr 0x56537c981f00 <col:63, col:80> 1 2
|-FunctionDecl 0x56537c982088 <line:430:1, line:431:79> line:430:12 pthread_attr_setscope 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x56537c981f48 <col:35, col:51> col:51 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x56537c981fc8 <col:59, col:63> col:63 __scope 'int'
| |-NoThrowAttr 0x56537c982138 <line:431:22>
| `-NonNullAttr 0x56537c982190 <col:63, col:77> 1
|-FunctionDecl 0x56537c9823b8 <line:432:1, line:434:115> line:432:12 pthread_attr_getstackaddr 'int (const pthread_attr_t *restrict, void **restrict)' extern
| |-ParmVarDecl 0x56537c9821d8 <col:39, line:433:11> col:11 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x56537c982258 <col:19, col:37> col:37 __stackaddr 'void **restrict'
| |-NoThrowAttr 0x56537c982468 <line:434:22>
| |-NonNullAttr 0x56537c9824c0 <col:63, col:80> 1 2
| `-DeprecatedAttr 0x56537c9824f8 <col:100> "" ""
|-FunctionDecl 0x56537c982708 <line:435:1, line:437:112> line:435:12 pthread_attr_setstackaddr 'int (pthread_attr_t *, void *)' extern
| |-ParmVarDecl 0x56537c982548 <col:39, col:55> col:55 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x56537c9825c8 <line:436:11, col:17> col:17 __stackaddr 'void *'
| |-NoThrowAttr 0x56537c9827b8 <line:437:22>
| |-NonNullAttr 0x56537c982810 <col:63, col:77> 1
| `-DeprecatedAttr 0x56537c982848 <col:97> "" ""
|-FunctionDecl 0x56537c982a48 <line:438:1, line:440:82> line:438:12 pthread_attr_getstacksize 'int (const pthread_attr_t *restrict, size_t *restrict)' extern
| |-ParmVarDecl 0x56537c982898 <col:39, line:439:11> col:11 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x56537c982910 <col:19, col:38> col:38 __stacksize 'size_t *restrict'
| |-NoThrowAttr 0x56537c982af8 <line:440:22>
| `-NonNullAttr 0x56537c982b50 <col:63, col:80> 1 2
|-FunctionDecl 0x56537c982cd0 <line:441:1, line:443:79> line:441:12 pthread_attr_setstacksize 'int (pthread_attr_t *, size_t)' extern
| |-ParmVarDecl 0x56537c982b98 <col:39, col:55> col:55 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x56537c982c10 <line:442:11, col:18> col:18 __stacksize 'size_t':'unsigned long'
| |-NoThrowAttr 0x56537c982d80 <line:443:22>
| `-NonNullAttr 0x56537c982dd8 <col:63, col:77> 1
|-FunctionDecl 0x56537c9830c8 <line:444:1, line:447:85> line:444:12 pthread_attr_getstack 'int (const pthread_attr_t *restrict, void **restrict, size_t *restrict)' extern
| |-ParmVarDecl 0x56537c982e28 <col:35, col:68> col:68 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x56537c982ea8 <line:445:7, col:25> col:25 __stackaddr 'void **restrict'
| |-ParmVarDecl 0x56537c982f20 <line:446:7, col:26> col:26 __stacksize 'size_t *restrict'
| |-NoThrowAttr 0x56537c983180 <line:447:22>
| `-NonNullAttr 0x56537c9831d8 <col:63, col:83> 1 2 3
|-FunctionDecl 0x56537c983488 <line:448:1, line:449:100> line:448:12 pthread_attr_setstack 'int (pthread_attr_t *, void *, size_t)' extern
| |-ParmVarDecl 0x56537c983230 <col:35, col:51> col:51 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x56537c9832b0 <col:59, col:65> col:65 __stackaddr 'void *'
| |-ParmVarDecl 0x56537c983328 <line:449:7, col:14> col:14 __stacksize 'size_t':'unsigned long'
| |-NoThrowAttr 0x56537c983540 <col:43>
| `-NonNullAttr 0x56537c983598 <col:84, col:98> 1
|-FunctionDecl 0x56537c983858 <line:450:1, line:452:79> line:450:12 pthread_setschedparam 'int (pthread_t, int, const struct sched_param *)' extern
| |-ParmVarDecl 0x56537c9835e8 <col:35, col:45> col:45 __target_thread 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x56537c983668 <col:62, col:66> col:66 __policy 'int'
| |-ParmVarDecl 0x56537c9836f8 <line:451:7, col:33> col:33 __param 'const struct sched_param *'
| |-NoThrowAttr 0x56537c983910 <line:452:22>
| `-NonNullAttr 0x56537c983968 <col:63, col:77> 3
|-FunctionDecl 0x56537c983c78 <line:453:1, line:456:82> line:453:12 pthread_getschedparam 'int (pthread_t, int *restrict, struct sched_param *restrict)' extern
| |-ParmVarDecl 0x56537c9839e0 <col:35, col:45> col:45 __target_thread 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x56537c983a60 <line:454:7, col:23> col:23 __policy 'int *restrict'
| |-ParmVarDecl 0x56537c983af0 <line:455:7, col:38> col:38 __param 'struct sched_param *restrict'
| |-NoThrowAttr 0x56537c983d30 <line:456:22>
| `-NonNullAttr 0x56537c983d88 <col:63, col:80> 2 3
|-FunctionDecl 0x56537c983f78 <line:457:1, line:458:45> line:457:12 pthread_setschedprio 'int (pthread_t, int)' extern
| |-ParmVarDecl 0x56537c983dd8 <col:34, col:44> col:44 __target_thread 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x56537c983e58 <col:61, col:65> col:65 __prio 'int'
| `-NoThrowAttr 0x56537c984028 <line:458:22>
|-FunctionDecl 0x56537c9843f8 <line:459:1, line:460:71> line:459:12 pthread_once 'int (pthread_once_t *, void (*)(void))' extern
| |-ParmVarDecl 0x56537c9840f0 <col:26, col:42> col:42 __once_control 'pthread_once_t *'
| |-ParmVarDecl 0x56537c984290 <line:460:5, col:33> col:12 __init_routine 'void (*)(void)'
| `-NonNullAttr 0x56537c9844a8 <col:52, col:69> 1 2
|-FunctionDecl 0x56537c984650 <line:461:1, col:64> col:12 pthread_setcancelstate 'int (int, int *)' extern
| |-ParmVarDecl 0x56537c984530 <col:36, col:40> col:40 __state 'int'
| `-ParmVarDecl 0x56537c9845b0 <col:49, col:54> col:54 __oldstate 'int *'
|-FunctionDecl 0x56537c984838 <line:462:1, col:61> col:12 pthread_setcanceltype 'int (int, int *)' extern
| |-ParmVarDecl 0x56537c984718 <col:35, col:39> col:39 __type 'int'
| `-ParmVarDecl 0x56537c984798 <col:47, col:52> col:52 __oldtype 'int *'
|-FunctionDecl 0x56537c9849f0 <line:463:1, col:42> col:12 pthread_cancel 'int (pthread_t)' extern
| `-ParmVarDecl 0x56537c9848f8 <col:28, col:38> col:38 __th 'pthread_t':'unsigned long'
|-FunctionDecl 0x56537c984b30 <line:464:1, col:37> col:13 pthread_testcancel 'void (void)' extern
|-RecordDecl 0x56537c984bd0 <line:465:9, line:473:1> line:465:9 struct definition
| |-RecordDecl 0x56537c984c78 <line:467:3, line:471:3> line:467:3 struct definition
| | |-FieldDecl 0x56537c984d68 <line:469:5, col:15> col:15 __cancel_jmp_buf '__jmp_buf':'long [8]'
| | `-FieldDecl 0x56537c984dd0 <line:470:5, col:9> col:9 __mask_was_saved 'int'
| |-FieldDecl 0x56537c984fa0 <line:467:3, line:471:23> col:5 __cancel_jmp_buf 'struct (anonymous struct at ./split_0/safe003_rmo.opt_false-unreach-call.i:467:3) [1]'
| `-FieldDecl 0x56537c985098 <line:472:3, col:16> col:9 __pad 'void *[4]'
|-TypedefDecl 0x56537c985150 <line:465:1, line:473:3> col:3 referenced __pthread_unwind_buf_t 'struct __pthread_unwind_buf_t':'__pthread_unwind_buf_t'
| |-ElaboratedType 0x56537c9850f0 'struct __pthread_unwind_buf_t' sugar
| | `-RecordType 0x56537c984c50 '__pthread_unwind_buf_t'
| |   `-Record 0x56537c984bd0 ''
| `-AlignedAttr 0x56537c9851a8 <col:42> aligned
|   `-<<<NULL>>>
|-RecordDecl 0x56537c985220 <line:474:1, line:480:1> line:474:8 struct __pthread_cleanup_frame definition
| |-FieldDecl 0x56537c985380 <line:476:3, col:35> col:10 __cancel_routine 'void (*)(void *)'
| |-FieldDecl 0x56537c9853e8 <line:477:3, col:9> col:9 __cancel_arg 'void *'
| |-FieldDecl 0x56537c985450 <line:478:3, col:7> col:7 __do_it 'int'
| `-FieldDecl 0x56537c9854b8 <line:479:3, col:7> col:7 __cancel_type 'int'
|-FunctionDecl 0x56537c9856c0 <line:481:1, col:69> col:13 __pthread_register_cancel 'void (__pthread_unwind_buf_t *)' extern
| `-ParmVarDecl 0x56537c9855b0 <col:40, col:64> col:64 __buf '__pthread_unwind_buf_t *'
|-FunctionDecl 0x56537c985808 <line:483:1, col:71> col:13 __pthread_unregister_cancel 'void (__pthread_unwind_buf_t *)' extern
| `-ParmVarDecl 0x56537c985778 <col:42, col:66> col:66 __buf '__pthread_unwind_buf_t *'
|-FunctionDecl 0x56537c985a00 <line:485:1, line:487:31> line:485:13 __pthread_unwind_next 'void (__pthread_unwind_buf_t *) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x56537c9858c0 <col:36, col:60> col:60 __buf '__pthread_unwind_buf_t *'
| `-WeakAttr 0x56537c985aa8 <line:487:22>
|-RecordDecl 0x56537c985b00 <line:489:1, col:8> col:8 struct __jmp_buf_tag
|-FunctionDecl 0x56537c985e18 <line:490:1, col:98> col:12 __sigsetjmp 'int (struct __jmp_buf_tag *, int)' extern
| |-ParmVarDecl 0x56537c985c78 <col:25, col:47> col:47 __env 'struct __jmp_buf_tag *'
| |-ParmVarDecl 0x56537c985cf8 <col:54, col:58> col:58 __savemask 'int'
| |-NoThrowAttr 0x56537c985ec8 <col:86>
| `-ReturnsTwiceAttr 0x56537c985f20 <col:12> Implicit
|-FunctionDecl 0x56537c986248 <line:491:1, line:493:79> line:491:12 pthread_mutex_init 'int (pthread_mutex_t *, const pthread_mutexattr_t *)' extern
| |-ParmVarDecl 0x56537c985ff0 <col:32, col:49> col:49 __mutex 'pthread_mutex_t *'
| |-ParmVarDecl 0x56537c986100 <line:492:11, col:38> col:38 __mutexattr 'const pthread_mutexattr_t *'
| |-NoThrowAttr 0x56537c9862f8 <line:493:22>
| `-NonNullAttr 0x56537c986350 <col:63, col:77> 1
|-FunctionDecl 0x56537c9864c8 <line:494:1, line:495:79> line:494:12 pthread_mutex_destroy 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x56537c986398 <col:35, col:52> col:52 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x56537c986570 <line:495:22>
| `-NonNullAttr 0x56537c9865c8 <col:63, col:77> 1
|-FunctionDecl 0x56537c9866d0 <line:496:1, line:497:68> line:496:12 pthread_mutex_trylock 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x56537c986618 <col:35, col:52> col:52 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x56537c986778 <line:497:22>
| `-NonNullAttr 0x56537c9867d0 <col:52, col:66> 1
|-FunctionDecl 0x56537c9868d0 <line:498:1, line:499:68> line:498:12 pthread_mutex_lock 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x56537c986818 <col:32, col:49> col:49 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x56537c986978 <line:499:22>
| `-NonNullAttr 0x56537c9869d0 <col:52, col:66> 1
|-FunctionDecl 0x56537c987c28 <line:500:1, line:502:85> line:500:12 pthread_mutex_timedlock 'int (pthread_mutex_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x56537c987a38 <col:37, col:65> col:65 __mutex 'pthread_mutex_t *restrict'
| |-ParmVarDecl 0x56537c987ac8 <line:501:9, line:502:9> col:9 __abstime 'const struct timespec *restrict'
| |-NoThrowAttr 0x56537c987cd8 <col:36>
| `-NonNullAttr 0x56537c987d30 <col:66, col:83> 1 2
|-FunctionDecl 0x56537c987e30 <line:503:1, line:504:68> line:503:12 pthread_mutex_unlock 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x56537c987d78 <col:34, col:51> col:51 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x56537c987ed8 <line:504:22>
| `-NonNullAttr 0x56537c987f30 <col:52, col:66> 1
|-FunctionDecl 0x56537c9881c8 <line:505:1, line:508:82> line:505:12 pthread_mutex_getprioceiling 'int (const pthread_mutex_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x56537c987fe0 <col:42, line:506:18> col:18 __mutex 'const pthread_mutex_t *restrict'
| |-ParmVarDecl 0x56537c988060 <line:507:7, col:23> col:23 __prioceiling 'int *restrict'
| |-NoThrowAttr 0x56537c988278 <line:508:22>
| `-NonNullAttr 0x56537c9882d0 <col:63, col:80> 1 2
|-FunctionDecl 0x56537c988598 <line:509:1, line:512:82> line:509:12 pthread_mutex_setprioceiling 'int (pthread_mutex_t *restrict, int, int *restrict)' extern
| |-ParmVarDecl 0x56537c988318 <col:42, col:70> col:70 __mutex 'pthread_mutex_t *restrict'
| |-ParmVarDecl 0x56537c988398 <line:510:7, col:11> col:11 __prioceiling 'int'
| |-ParmVarDecl 0x56537c988418 <line:511:7, col:23> col:23 __old_ceiling 'int *restrict'
| |-NoThrowAttr 0x56537c988650 <line:512:22>
| `-NonNullAttr 0x56537c9886a8 <col:63, col:80> 1 3
|-FunctionDecl 0x56537c9887b0 <line:513:1, line:514:79> line:513:12 pthread_mutex_consistent 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x56537c9886f8 <col:38, col:55> col:55 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x56537c988858 <line:514:22>
| `-NonNullAttr 0x56537c9888b0 <col:63, col:77> 1
|-FunctionDecl 0x56537c988ad8 <line:515:1, line:516:79> line:515:12 pthread_mutexattr_init 'int (pthread_mutexattr_t *)' extern
| |-ParmVarDecl 0x56537c988960 <col:36, col:57> col:57 __attr 'pthread_mutexattr_t *'
| |-NoThrowAttr 0x56537c988b80 <line:516:22>
| `-NonNullAttr 0x56537c988bd8 <col:63, col:77> 1
|-FunctionDecl 0x56537c988ce0 <line:517:1, line:518:79> line:517:12 pthread_mutexattr_destroy 'int (pthread_mutexattr_t *)' extern
| |-ParmVarDecl 0x56537c988c28 <col:39, col:60> col:60 __attr 'pthread_mutexattr_t *'
| |-NoThrowAttr 0x56537c988d88 <line:518:22>
| `-NonNullAttr 0x56537c988de0 <col:63, col:77> 1
|-FunctionDecl 0x56537c989008 <line:519:1, line:522:82> line:519:12 pthread_mutexattr_getpshared 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x56537c988e28 <col:42, line:520:18> col:18 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x56537c988ea8 <line:521:7, col:23> col:23 __pshared 'int *restrict'
| |-NoThrowAttr 0x56537c9890b8 <line:522:22>
| `-NonNullAttr 0x56537c989110 <col:63, col:80> 1 2
|-FunctionDecl 0x56537c989318 <line:523:1, line:525:79> line:523:12 pthread_mutexattr_setpshared 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x56537c989158 <col:42, col:63> col:63 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x56537c9891d8 <line:524:7, col:11> col:11 __pshared 'int'
| |-NoThrowAttr 0x56537c9893c8 <line:525:22>
| `-NonNullAttr 0x56537c989420 <col:63, col:77> 1
|-FunctionDecl 0x56537c9895c8 <line:526:1, line:528:82> line:526:12 pthread_mutexattr_gettype 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x56537c989468 <col:39, line:527:11> col:11 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x56537c9894e8 <col:19, col:35> col:35 __kind 'int *restrict'
| |-NoThrowAttr 0x56537c989678 <line:528:22>
| `-NonNullAttr 0x56537c9896d0 <col:63, col:80> 1 2
|-FunctionDecl 0x56537c989858 <line:529:1, line:530:79> line:529:12 pthread_mutexattr_settype 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x56537c989718 <col:39, col:60> col:60 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x56537c989798 <col:68, col:72> col:72 __kind 'int'
| |-NoThrowAttr 0x56537c989908 <line:530:22>
| `-NonNullAttr 0x56537c989960 <col:63, col:77> 1
|-FunctionDecl 0x56537c989b20 <line:531:1, line:534:82> line:531:12 pthread_mutexattr_getprotocol 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x56537c9899a8 <col:43, line:532:19> col:19 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x56537c989a40 <line:533:8, col:24> col:24 __protocol 'int *restrict'
| |-NoThrowAttr 0x56537c989bd0 <line:534:22>
| `-NonNullAttr 0x56537c989c28 <col:63, col:80> 1 2
|-FunctionDecl 0x56537c989db8 <line:535:1, line:537:79> line:535:12 pthread_mutexattr_setprotocol 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x56537c989c78 <col:43, col:64> col:64 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x56537c989cf8 <line:536:8, col:12> col:12 __protocol 'int'
| |-NoThrowAttr 0x56537c989e68 <line:537:22>
| `-NonNullAttr 0x56537c989ec0 <col:63, col:77> 1
|-FunctionDecl 0x56537c98a068 <line:538:1, line:541:82> line:538:12 pthread_mutexattr_getprioceiling 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x56537c989f08 <col:46, line:539:22> col:22 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x56537c989f88 <line:540:11, col:27> col:27 __prioceiling 'int *restrict'
| |-NoThrowAttr 0x56537c98a118 <line:541:22>
| `-NonNullAttr 0x56537c98a170 <col:63, col:80> 1 2
|-FunctionDecl 0x56537c98a2f8 <line:542:1, line:544:79> line:542:12 pthread_mutexattr_setprioceiling 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x56537c98a1b8 <col:46, col:67> col:67 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x56537c98a238 <line:543:11, col:15> col:15 __prioceiling 'int'
| |-NoThrowAttr 0x56537c98a3a8 <line:544:22>
| `-NonNullAttr 0x56537c98a400 <col:63, col:77> 1
|-FunctionDecl 0x56537c98a5e8 <line:545:1, line:547:82> line:545:12 pthread_mutexattr_getrobust 'int (const pthread_mutexattr_t *, int *)' extern
| |-ParmVarDecl 0x56537c98a448 <col:41, col:68> col:68 __attr 'const pthread_mutexattr_t *'
| |-ParmVarDecl 0x56537c98a4c8 <line:546:6, col:11> col:11 __robustness 'int *'
| |-NoThrowAttr 0x56537c98a698 <line:547:22>
| `-NonNullAttr 0x56537c98a6f0 <col:63, col:80> 1 2
|-FunctionDecl 0x56537c98a878 <line:548:1, line:550:79> line:548:12 pthread_mutexattr_setrobust 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x56537c98a738 <col:41, col:62> col:62 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x56537c98a7b8 <line:549:6, col:10> col:10 __robustness 'int'
| |-NoThrowAttr 0x56537c98a928 <line:550:22>
| `-NonNullAttr 0x56537c98a980 <col:63, col:77> 1
|-FunctionDecl 0x56537c98bcf8 <line:551:1, line:553:86> line:551:12 pthread_rwlock_init 'int (pthread_rwlock_t *restrict, const pthread_rwlockattr_t *restrict)' extern
| |-ParmVarDecl 0x56537c98baa0 <col:33, col:62> col:62 __rwlock 'pthread_rwlock_t *restrict'
| |-ParmVarDecl 0x56537c98bbb0 <line:552:5, line:553:5> col:5 __attr 'const pthread_rwlockattr_t *restrict'
| |-NoThrowAttr 0x56537c98bda8 <col:29>
| `-NonNullAttr 0x56537c98be00 <col:70, col:84> 1
|-FunctionDecl 0x56537c98bf78 <line:554:1, line:555:79> line:554:12 pthread_rwlock_destroy 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x56537c98be48 <col:36, col:54> col:54 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x56537c98c020 <line:555:22>
| `-NonNullAttr 0x56537c98c078 <col:63, col:77> 1
|-FunctionDecl 0x56537c98c180 <line:556:1, line:557:68> line:556:12 pthread_rwlock_rdlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x56537c98c0c8 <col:35, col:53> col:53 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x56537c98c228 <line:557:22>
| `-NonNullAttr 0x56537c98c280 <col:52, col:66> 1
|-FunctionDecl 0x56537c98c380 <line:558:1, line:559:65> line:558:12 pthread_rwlock_tryrdlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x56537c98c2c8 <col:38, col:56> col:56 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x56537c98c428 <line:559:19>
| `-NonNullAttr 0x56537c98c480 <col:49, col:63> 1
|-FunctionDecl 0x56537c98c6b8 <line:560:1, line:562:88> line:560:12 pthread_rwlock_timedrdlock 'int (pthread_rwlock_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x56537c98c4c8 <col:40, col:69> col:69 __rwlock 'pthread_rwlock_t *restrict'
| |-ParmVarDecl 0x56537c98c558 <line:561:12, line:562:12> col:12 __abstime 'const struct timespec *restrict'
| |-NoThrowAttr 0x56537c98c768 <col:39>
| `-NonNullAttr 0x56537c98c7c0 <col:69, col:86> 1 2
|-FunctionDecl 0x56537c98c8c0 <line:563:1, line:564:68> line:563:12 pthread_rwlock_wrlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x56537c98c808 <col:35, col:53> col:53 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x56537c98c968 <line:564:22>
| `-NonNullAttr 0x56537c98c9c0 <col:52, col:66> 1
|-FunctionDecl 0x56537c98cb28 <line:565:1, line:566:68> line:565:12 pthread_rwlock_trywrlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x56537c98ca70 <col:38, col:56> col:56 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x56537c98cbd0 <line:566:22>
| `-NonNullAttr 0x56537c98cc28 <col:52, col:66> 1
|-FunctionDecl 0x56537c98cde8 <line:567:1, line:569:88> line:567:12 pthread_rwlock_timedwrlock 'int (pthread_rwlock_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x56537c98cc78 <col:40, col:69> col:69 __rwlock 'pthread_rwlock_t *restrict'
| |-ParmVarDecl 0x56537c98cd08 <line:568:12, line:569:12> col:12 __abstime 'const struct timespec *restrict'
| |-NoThrowAttr 0x56537c98ce98 <col:39>
| `-NonNullAttr 0x56537c98cef0 <col:69, col:86> 1 2
|-FunctionDecl 0x56537c98cff0 <line:570:1, line:571:68> line:570:12 pthread_rwlock_unlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x56537c98cf38 <col:35, col:53> col:53 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x56537c98d098 <line:571:22>
| `-NonNullAttr 0x56537c98d0f0 <col:52, col:66> 1
|-FunctionDecl 0x56537c98d2d8 <line:572:1, line:573:79> line:572:12 pthread_rwlockattr_init 'int (pthread_rwlockattr_t *)' extern
| |-ParmVarDecl 0x56537c98d1a0 <col:37, col:59> col:59 __attr 'pthread_rwlockattr_t *'
| |-NoThrowAttr 0x56537c98d380 <line:573:22>
| `-NonNullAttr 0x56537c98d3d8 <col:63, col:77> 1
|-FunctionDecl 0x56537c98d4e0 <line:574:1, line:575:79> line:574:12 pthread_rwlockattr_destroy 'int (pthread_rwlockattr_t *)' extern
| |-ParmVarDecl 0x56537c98d428 <col:40, col:62> col:62 __attr 'pthread_rwlockattr_t *'
| |-NoThrowAttr 0x56537c98d588 <line:575:22>
| `-NonNullAttr 0x56537c98d5e0 <col:63, col:77> 1
|-FunctionDecl 0x56537c98d808 <line:576:1, line:579:82> line:576:12 pthread_rwlockattr_getpshared 'int (const pthread_rwlockattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x56537c98d628 <col:43, line:577:19> col:19 __attr 'const pthread_rwlockattr_t *restrict'
| |-ParmVarDecl 0x56537c98d6a8 <line:578:8, col:24> col:24 __pshared 'int *restrict'
| |-NoThrowAttr 0x56537c98d8b8 <line:579:22>
| `-NonNullAttr 0x56537c98d910 <col:63, col:80> 1 2
|-FunctionDecl 0x56537c98db38 <line:580:1, line:582:79> line:580:12 pthread_rwlockattr_setpshared 'int (pthread_rwlockattr_t *, int)' extern
| |-ParmVarDecl 0x56537c98d958 <col:43, col:65> col:65 __attr 'pthread_rwlockattr_t *'
| |-ParmVarDecl 0x56537c98d9d8 <line:581:8, col:12> col:12 __pshared 'int'
| |-NoThrowAttr 0x56537c98dbe8 <line:582:22>
| `-NonNullAttr 0x56537c98dc40 <col:63, col:77> 1
|-FunctionDecl 0x56537c98dde8 <line:583:1, line:586:82> line:583:12 pthread_rwlockattr_getkind_np 'int (const pthread_rwlockattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x56537c98dc88 <col:43, line:584:19> col:19 __attr 'const pthread_rwlockattr_t *restrict'
| |-ParmVarDecl 0x56537c98dd08 <line:585:8, col:24> col:24 __pref 'int *restrict'
| |-NoThrowAttr 0x56537c98de98 <line:586:22>
| `-NonNullAttr 0x56537c98def0 <col:63, col:80> 1 2
|-FunctionDecl 0x56537c98e078 <line:587:1, line:588:93> line:587:12 pthread_rwlockattr_setkind_np 'int (pthread_rwlockattr_t *, int)' extern
| |-ParmVarDecl 0x56537c98df38 <col:43, col:65> col:65 __attr 'pthread_rwlockattr_t *'
| |-ParmVarDecl 0x56537c98dfb8 <line:588:8, col:12> col:12 __pref 'int'
| |-NoThrowAttr 0x56537c98e128 <col:36>
| `-NonNullAttr 0x56537c98e180 <col:77, col:91> 1
|-FunctionDecl 0x56537c98e4b8 <line:589:1, line:591:79> line:589:12 pthread_cond_init 'int (pthread_cond_t *restrict, const pthread_condattr_t *restrict)' extern
| |-ParmVarDecl 0x56537c98e260 <col:31, col:58> col:58 __cond 'pthread_cond_t *restrict'
| |-ParmVarDecl 0x56537c98e370 <line:590:10, col:47> col:47 __cond_attr 'const pthread_condattr_t *restrict'
| |-NoThrowAttr 0x56537c98e568 <line:591:22>
| `-NonNullAttr 0x56537c98e5c0 <col:63, col:77> 1
|-FunctionDecl 0x56537c98e738 <line:592:1, line:593:79> line:592:12 pthread_cond_destroy 'int (pthread_cond_t *)' extern
| |-ParmVarDecl 0x56537c98e608 <col:34, col:50> col:50 __cond 'pthread_cond_t *'
| |-NoThrowAttr 0x56537c98e7e0 <line:593:22>
| `-NonNullAttr 0x56537c98e838 <col:63, col:77> 1
|-FunctionDecl 0x56537c98e940 <line:594:1, line:595:68> line:594:12 pthread_cond_signal 'int (pthread_cond_t *)' extern
| |-ParmVarDecl 0x56537c98e888 <col:33, col:49> col:49 __cond 'pthread_cond_t *'
| |-NoThrowAttr 0x56537c98e9e8 <line:595:22>
| `-NonNullAttr 0x56537c98ea40 <col:52, col:66> 1
|-FunctionDecl 0x56537c98eb58 <line:596:1, line:597:68> line:596:12 pthread_cond_broadcast 'int (pthread_cond_t *)' extern
| |-ParmVarDecl 0x56537c98eaa0 <col:36, col:52> col:52 __cond 'pthread_cond_t *'
| |-NoThrowAttr 0x56537c98ec00 <line:597:22>
| `-NonNullAttr 0x56537c98ec58 <col:52, col:66> 1
|-FunctionDecl 0x56537c98ee88 <line:598:1, line:600:41> line:598:12 pthread_cond_wait 'int (pthread_cond_t *restrict, pthread_mutex_t *restrict)' extern
| |-ParmVarDecl 0x56537c98eca8 <col:31, col:58> col:58 __cond 'pthread_cond_t *restrict'
| |-ParmVarDecl 0x56537c98ed20 <line:599:10, col:38> col:38 __mutex 'pthread_mutex_t *restrict'
| `-NonNullAttr 0x56537c98ef38 <line:600:22, col:39> 1 2
|-FunctionDecl 0x56537c98f268 <line:601:1, line:604:44> line:601:12 pthread_cond_timedwait 'int (pthread_cond_t *restrict, pthread_mutex_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x56537c98efb8 <col:36, col:63> col:63 __cond 'pthread_cond_t *restrict'
| |-ParmVarDecl 0x56537c98f030 <line:602:8, col:36> col:36 __mutex 'pthread_mutex_t *restrict'
| |-ParmVarDecl 0x56537c98f0c0 <line:603:8, col:42> col:42 __abstime 'const struct timespec *restrict'
| `-NonNullAttr 0x56537c98f320 <line:604:22, col:42> 1 2 3
|-FunctionDecl 0x56537c98f538 <line:605:1, line:606:79> line:605:12 pthread_condattr_init 'int (pthread_condattr_t *)' extern
| |-ParmVarDecl 0x56537c98f400 <col:35, col:55> col:55 __attr 'pthread_condattr_t *'
| |-NoThrowAttr 0x56537c98f5e0 <line:606:22>
| `-NonNullAttr 0x56537c98f638 <col:63, col:77> 1
|-FunctionDecl 0x56537c98f740 <line:607:1, line:608:79> line:607:12 pthread_condattr_destroy 'int (pthread_condattr_t *)' extern
| |-ParmVarDecl 0x56537c98f688 <col:38, col:58> col:58 __attr 'pthread_condattr_t *'
| |-NoThrowAttr 0x56537c98f7e8 <line:608:22>
| `-NonNullAttr 0x56537c98f840 <col:63, col:77> 1
|-FunctionDecl 0x56537c98faa0 <line:609:1, line:612:82> line:609:12 pthread_condattr_getpshared 'int (const pthread_condattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x56537c98f888 <col:41, line:610:17> col:17 __attr 'const pthread_condattr_t *restrict'
| |-ParmVarDecl 0x56537c98f908 <line:611:6, col:22> col:22 __pshared 'int *restrict'
| |-NoThrowAttr 0x56537c98fb50 <line:612:22>
| `-NonNullAttr 0x56537c98fba8 <col:63, col:80> 1 2
|-FunctionDecl 0x56537c98fdb8 <line:613:1, line:614:94> line:613:12 pthread_condattr_setpshared 'int (pthread_condattr_t *, int)' extern
| |-ParmVarDecl 0x56537c98fbf8 <col:41, col:61> col:61 __attr 'pthread_condattr_t *'
| |-ParmVarDecl 0x56537c98fc78 <line:614:6, col:10> col:10 __pshared 'int'
| |-NoThrowAttr 0x56537c98fe68 <col:37>
| `-NonNullAttr 0x56537c98fec0 <col:78, col:92> 1
|-FunctionDecl 0x56537c9900d8 <line:615:1, line:618:82> line:615:12 pthread_condattr_getclock 'int (const pthread_condattr_t *restrict, __clockid_t *restrict)' extern
| |-ParmVarDecl 0x56537c98ff08 <col:39, line:616:22> col:22 __attr 'const pthread_condattr_t *restrict'
| |-ParmVarDecl 0x56537c98ffb0 <line:617:11, col:35> col:35 __clock_id '__clockid_t *restrict'
| |-NoThrowAttr 0x56537c990188 <line:618:22>
| `-NonNullAttr 0x56537c9901e0 <col:63, col:80> 1 2
|-FunctionDecl 0x56537c9903a8 <line:619:1, line:621:79> line:619:12 pthread_condattr_setclock 'int (pthread_condattr_t *, __clockid_t)' extern
| |-ParmVarDecl 0x56537c990228 <col:39, col:59> col:59 __attr 'pthread_condattr_t *'
| |-ParmVarDecl 0x56537c9902a0 <line:620:11, col:23> col:23 __clock_id '__clockid_t':'int'
| |-NoThrowAttr 0x56537c990458 <line:621:22>
| `-NonNullAttr 0x56537c9904b0 <col:63, col:77> 1
|-FunctionDecl 0x56537c990758 <line:622:1, line:623:79> line:622:12 pthread_spin_init 'int (pthread_spinlock_t *, int)' extern
| |-ParmVarDecl 0x56537c990590 <col:31, col:51> col:51 __lock 'pthread_spinlock_t *'
| |-ParmVarDecl 0x56537c990610 <col:59, col:63> col:63 __pshared 'int'
| |-NoThrowAttr 0x56537c990808 <line:623:22>
| `-NonNullAttr 0x56537c990860 <col:63, col:77> 1
|-FunctionDecl 0x56537c9909d8 <line:624:1, line:625:79> line:624:12 pthread_spin_destroy 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x56537c9908a8 <col:34, col:54> col:54 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x56537c990ab0 <line:625:22>
| `-NonNullAttr 0x56537c990b08 <col:63, col:77> 1
|-FunctionDecl 0x56537c990c10 <line:626:1, line:627:68> line:626:12 pthread_spin_lock 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x56537c990b58 <col:31, col:51> col:51 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x56537c990cb8 <line:627:22>
| `-NonNullAttr 0x56537c990d10 <col:52, col:66> 1
|-FunctionDecl 0x56537c990e10 <line:628:1, line:629:68> line:628:12 pthread_spin_trylock 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x56537c990d58 <col:34, col:54> col:54 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x56537c990eb8 <line:629:22>
| `-NonNullAttr 0x56537c990f10 <col:52, col:66> 1
|-FunctionDecl 0x56537c991010 <line:630:1, line:631:68> line:630:12 pthread_spin_unlock 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x56537c990f58 <col:33, col:53> col:53 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x56537c9910b8 <line:631:22>
| `-NonNullAttr 0x56537c991110 <col:52, col:66> 1
|-FunctionDecl 0x56537c9914e8 <line:632:1, line:635:79> line:632:12 pthread_barrier_init 'int (pthread_barrier_t *restrict, const pthread_barrierattr_t *restrict, unsigned int)' extern
| |-ParmVarDecl 0x56537c9911f0 <col:34, col:64> col:64 __barrier 'pthread_barrier_t *restrict'
| |-ParmVarDecl 0x56537c991300 <line:633:6, line:634:6> col:6 __attr 'const pthread_barrierattr_t *restrict'
| |-ParmVarDecl 0x56537c991380 <col:14, col:27> col:27 __count 'unsigned int'
| |-NoThrowAttr 0x56537c9915a0 <line:635:22>
| `-NonNullAttr 0x56537c9915f8 <col:63, col:77> 1
|-FunctionDecl 0x56537c991778 <line:636:1, line:637:79> line:636:12 pthread_barrier_destroy 'int (pthread_barrier_t *)' extern
| |-ParmVarDecl 0x56537c991648 <col:37, col:56> col:56 __barrier 'pthread_barrier_t *'
| |-NoThrowAttr 0x56537c991820 <line:637:22>
| `-NonNullAttr 0x56537c991878 <col:63, col:77> 1
|-FunctionDecl 0x56537c991980 <line:638:1, line:639:68> line:638:12 pthread_barrier_wait 'int (pthread_barrier_t *)' extern
| |-ParmVarDecl 0x56537c9918c8 <col:34, col:53> col:53 __barrier 'pthread_barrier_t *'
| |-NoThrowAttr 0x56537c991a28 <line:639:22>
| `-NonNullAttr 0x56537c991a80 <col:52, col:66> 1
|-FunctionDecl 0x56537c992c88 <line:640:1, line:641:79> line:640:12 pthread_barrierattr_init 'int (pthread_barrierattr_t *)' extern
| |-ParmVarDecl 0x56537c992b50 <col:38, col:61> col:61 __attr 'pthread_barrierattr_t *'
| |-NoThrowAttr 0x56537c992d30 <line:641:22>
| `-NonNullAttr 0x56537c992d88 <col:63, col:77> 1
|-FunctionDecl 0x56537c992e90 <line:642:1, line:643:79> line:642:12 pthread_barrierattr_destroy 'int (pthread_barrierattr_t *)' extern
| |-ParmVarDecl 0x56537c992dd8 <col:41, col:64> col:64 __attr 'pthread_barrierattr_t *'
| |-NoThrowAttr 0x56537c992f38 <line:643:22>
| `-NonNullAttr 0x56537c992f90 <col:63, col:77> 1
|-FunctionDecl 0x56537c9931b8 <line:644:1, line:647:82> line:644:12 pthread_barrierattr_getpshared 'int (const pthread_barrierattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x56537c992fd8 <col:44, line:645:20> col:20 __attr 'const pthread_barrierattr_t *restrict'
| |-ParmVarDecl 0x56537c993058 <line:646:9, col:25> col:25 __pshared 'int *restrict'
| |-NoThrowAttr 0x56537c993268 <line:647:22>
| `-NonNullAttr 0x56537c9932c0 <col:63, col:80> 1 2
|-FunctionDecl 0x56537c9934c8 <line:648:1, line:650:79> line:648:12 pthread_barrierattr_setpshared 'int (pthread_barrierattr_t *, int)' extern
| |-ParmVarDecl 0x56537c993308 <col:44, col:67> col:67 __attr 'pthread_barrierattr_t *'
| |-ParmVarDecl 0x56537c993388 <line:649:9, col:13> col:13 __pshared 'int'
| |-NoThrowAttr 0x56537c993578 <line:650:22>
| `-NonNullAttr 0x56537c9935d0 <col:63, col:77> 1
|-FunctionDecl 0x56537c993918 <line:651:1, line:653:79> line:651:12 pthread_key_create 'int (pthread_key_t *, void (*)(void *))' extern
| |-ParmVarDecl 0x56537c9936b0 <col:32, col:47> col:47 __key 'pthread_key_t *'
| |-ParmVarDecl 0x56537c9937d0 <line:652:11, col:43> col:18 __destr_function 'void (*)(void *)'
| |-NoThrowAttr 0x56537c9939c8 <line:653:22>
| `-NonNullAttr 0x56537c993a20 <col:63, col:77> 1
|-FunctionDecl 0x56537c993b88 <line:654:1, col:92> col:12 pthread_key_delete 'int (pthread_key_t)' extern
| |-ParmVarDecl 0x56537c993a68 <col:32, col:46> col:46 __key 'pthread_key_t':'unsigned int'
| `-NoThrowAttr 0x56537c993c30 <col:69>
|-FunctionDecl 0x56537c993da8 <line:655:1, col:95> col:14 pthread_getspecific 'void *(pthread_key_t)' extern
| |-ParmVarDecl 0x56537c993c98 <col:35, col:49> col:49 __key 'pthread_key_t':'unsigned int'
| `-NoThrowAttr 0x56537c993e50 <col:72>
|-FunctionDecl 0x56537c994088 <line:656:1, line:657:67> line:656:12 pthread_setspecific 'int (pthread_key_t, const void *)' extern
| |-ParmVarDecl 0x56537c993eb8 <col:33, col:47> col:47 __key 'pthread_key_t':'unsigned int'
| |-ParmVarDecl 0x56537c993f68 <line:657:5, col:17> col:17 __pointer 'const void *'
| `-NoThrowAttr 0x56537c994138 <col:44>
|-FunctionDecl 0x56537c994358 <line:658:1, line:660:79> line:658:12 pthread_getcpuclockid 'int (pthread_t, __clockid_t *)' extern
| |-ParmVarDecl 0x56537c9941a0 <col:35, col:45> col:45 __thread_id 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x56537c994218 <line:659:7, col:20> col:20 __clock_id '__clockid_t *'
| |-NoThrowAttr 0x56537c994408 <line:660:22>
| `-NonNullAttr 0x56537c994460 <col:63, col:77> 2
|-FunctionDecl 0x56537c9948a8 <line:661:1, line:663:70> line:661:12 pthread_atfork 'int (void (*)(void), void (*)(void), void (*)(void))' extern
| |-ParmVarDecl 0x56537c994540 <col:28, col:51> col:35 __prepare 'void (*)(void)'
| |-ParmVarDecl 0x56537c994650 <line:662:7, col:29> col:14 __parent 'void (*)(void)'
| |-ParmVarDecl 0x56537c994760 <line:663:7, col:28> col:14 __child 'void (*)(void)'
| `-NoThrowAttr 0x56537c994960 <col:47>
|-FunctionDecl 0x56537c994af0 <line:665:1, col:20> col:8 used P0 'void *(void *)'
| `-ParmVarDecl 0x56537c9949d0 <col:11, col:17> col:17 arg 'void *'
|-FunctionDecl 0x56537c994c48 <line:666:1, col:20> col:8 used P1 'void *(void *)'
| `-ParmVarDecl 0x56537c994bb0 <col:11, col:17> col:17 arg 'void *'
|-FunctionDecl 0x56537c994da0 <line:667:1, col:20> col:8 used P2 'void *(void *)'
| `-ParmVarDecl 0x56537c994d08 <col:11, col:17> col:17 arg 'void *'
|-FunctionDecl 0x56537c994e68 <line:668:1, col:12> col:6 fence 'void ()'
|-FunctionDecl 0x56537c994f28 <line:669:1, col:12> col:6 isync 'void ()'
|-FunctionDecl 0x56537c994fe8 <line:670:1, col:14> col:6 lwfence 'void ()'
|-VarDecl 0x56537c9950a0 <line:671:1, col:5> col:5 used __unbuffered_cnt 'int'
|-VarDecl 0x56537c995120 prev 0x56537c9950a0 <line:672:1, col:24> col:5 used __unbuffered_cnt 'int' cinit
| `-IntegerLiteral 0x56537c995188 <col:24> 'int' 0
|-VarDecl 0x56537c9951c0 <line:673:1, col:5> col:5 used __unbuffered_p1_EAX 'int'
|-VarDecl 0x56537c995240 prev 0x56537c9951c0 <line:674:1, col:27> col:5 used __unbuffered_p1_EAX 'int' cinit
| `-IntegerLiteral 0x56537c9952a8 <col:27> 'int' 0
|-VarDecl 0x56537c9952e0 <line:675:1, col:5> col:5 used __unbuffered_p2_EAX 'int'
|-VarDecl 0x56537c995360 prev 0x56537c9952e0 <line:676:1, col:27> col:5 used __unbuffered_p2_EAX 'int' cinit
| `-IntegerLiteral 0x56537c9953c8 <col:27> 'int' 0
|-VarDecl 0x56537c995400 <line:677:1, col:5> col:5 used __unbuffered_p2_EBX 'int'
|-VarDecl 0x56537c995480 prev 0x56537c995400 <line:678:1, col:27> col:5 used __unbuffered_p2_EBX 'int' cinit
| `-IntegerLiteral 0x56537c9954e8 <col:27> 'int' 0
|-VarDecl 0x56537c995518 <line:679:1, col:7> col:7 used main$tmp_guard0 '_Bool'
|-VarDecl 0x56537c995590 <line:680:1, col:7> col:7 used main$tmp_guard1 '_Bool'
|-VarDecl 0x56537c995610 <line:681:1, col:5> col:5 used x 'int'
|-VarDecl 0x56537c995690 prev 0x56537c995610 <line:682:1, col:9> col:5 used x 'int' cinit
| `-IntegerLiteral 0x56537c9956f8 <col:9> 'int' 0
|-VarDecl 0x56537c995730 <line:683:1, col:5> col:5 used y 'int'
|-VarDecl 0x56537c9957b0 prev 0x56537c995730 <line:684:1, col:9> col:5 used y 'int' cinit
| `-IntegerLiteral 0x56537c995818 <col:9> 'int' 0
|-VarDecl 0x56537c995848 <line:685:1, col:7> col:7 used y$flush_delayed '_Bool'
|-VarDecl 0x56537c9958c8 <line:686:1, col:5> col:5 used y$mem_tmp 'int'
|-VarDecl 0x56537c995940 <line:687:1, col:7> col:7 used y$r_buff0_thd0 '_Bool'
|-VarDecl 0x56537c9959b8 <line:688:1, col:7> col:7 used y$r_buff0_thd1 '_Bool'
|-VarDecl 0x56537c995a30 <line:689:1, col:7> col:7 used y$r_buff0_thd2 '_Bool'
|-VarDecl 0x56537c995b00 <line:690:1, col:7> col:7 used y$r_buff0_thd3 '_Bool'
|-VarDecl 0x56537c995b78 <line:691:1, col:7> col:7 used y$r_buff1_thd0 '_Bool'
|-VarDecl 0x56537c995bf0 <line:692:1, col:7> col:7 used y$r_buff1_thd1 '_Bool'
|-VarDecl 0x56537c995c68 <line:693:1, col:7> col:7 used y$r_buff1_thd2 '_Bool'
|-VarDecl 0x56537c995ce0 <line:694:1, col:7> col:7 used y$r_buff1_thd3 '_Bool'
|-VarDecl 0x56537c995d58 <line:695:1, col:7> col:7 y$read_delayed '_Bool'
|-VarDecl 0x56537c995dd8 <line:696:1, col:6> col:6 y$read_delayed_var 'int *'
|-VarDecl 0x56537c995e58 <line:697:1, col:5> col:5 used y$w_buff0 'int'
|-VarDecl 0x56537c995ed0 <line:698:1, col:7> col:7 used y$w_buff0_used '_Bool'
|-VarDecl 0x56537c995f50 <line:699:1, col:5> col:5 used y$w_buff1 'int'
|-VarDecl 0x56537c995fc8 <line:700:1, col:7> col:7 used y$w_buff1_used '_Bool'
|-VarDecl 0x56537c996040 <line:701:1, col:7> col:7 used weak$$choice0 '_Bool'
|-VarDecl 0x56537c9960b8 <line:702:1, col:7> col:7 used weak$$choice2 '_Bool'
|-FunctionDecl 0x56537c9961d0 prev 0x56537c994af0 <line:703:1, line:731:1> line:703:8 used P0 'void *(void *)'
| |-ParmVarDecl 0x56537c996138 <col:11, col:17> col:17 arg 'void *'
| `-CompoundStmt 0x56537c9979f8 <line:704:1, line:731:1>
|   |-CallExpr 0x56537c9962e8 <line:705:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x56537c9962d0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x56537c996278 <col:3> 'void ()' Function 0x56537c93be40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x56537c996360 <line:706:3, col:15> 'int' '='
|   | |-DeclRefExpr 0x56537c996308 <col:3> 'int' lvalue Var 0x56537c995f50 'y$w_buff1' 'int'
|   | `-ImplicitCastExpr 0x56537c996348 <col:15> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x56537c996328 <col:15> 'int' lvalue Var 0x56537c995e58 'y$w_buff0' 'int'
|   |-BinaryOperator 0x56537c9963c0 <line:707:3, col:15> 'int' '='
|   | |-DeclRefExpr 0x56537c996380 <col:3> 'int' lvalue Var 0x56537c995e58 'y$w_buff0' 'int'
|   | `-IntegerLiteral 0x56537c9963a0 <col:15> 'int' 2
|   |-BinaryOperator 0x56537c996438 <line:708:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x56537c9963e0 <col:3> '_Bool' lvalue Var 0x56537c995fc8 'y$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x56537c996420 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x56537c996400 <col:20> '_Bool' lvalue Var 0x56537c995ed0 'y$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x56537c9964d0 <line:709:3, col:27> '_Bool' '='
|   | |-DeclRefExpr 0x56537c996458 <col:3> '_Bool' lvalue Var 0x56537c995ed0 'y$w_buff0_used' '_Bool'
|   | `-CStyleCastExpr 0x56537c9964a8 <col:20, col:27> '_Bool' <IntegralToBoolean>
|   |   `-IntegerLiteral 0x56537c996478 <col:27> 'int' 1
|   |-CallExpr 0x56537c996658 <line:710:3, col:56> 'void'
|   | |-ImplicitCastExpr 0x56537c996640 <col:3> 'void (*)(int)' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x56537c9964f0 <col:3> 'void (int)' Function 0x56537c93bbc8 '__VERIFIER_assert' 'void (int)'
|   | `-UnaryOperator 0x56537c9965f0 <col:21, col:55> 'int' prefix '!' cannot overflow
|   |   `-ParenExpr 0x56537c9965d0 <col:22, col:55> 'int'
|   |     `-BinaryOperator 0x56537c9965b0 <col:23, col:41> 'int' '&&'
|   |       |-ImplicitCastExpr 0x56537c996568 <col:23> 'int' <IntegralCast>
|   |       | `-ImplicitCastExpr 0x56537c996550 <col:23> '_Bool' <LValueToRValue>
|   |       |   `-DeclRefExpr 0x56537c996510 <col:23> '_Bool' lvalue Var 0x56537c995fc8 'y$w_buff1_used' '_Bool'
|   |       `-ImplicitCastExpr 0x56537c996598 <col:41> 'int' <IntegralCast>
|   |         `-ImplicitCastExpr 0x56537c996580 <col:41> '_Bool' <LValueToRValue>
|   |           `-DeclRefExpr 0x56537c996530 <col:41> '_Bool' lvalue Var 0x56537c995ed0 'y$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x56537c9966d8 <line:711:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x56537c996680 <col:3> '_Bool' lvalue Var 0x56537c995b78 'y$r_buff1_thd0' '_Bool'
|   | `-ImplicitCastExpr 0x56537c9966c0 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x56537c9966a0 <col:20> '_Bool' lvalue Var 0x56537c995940 'y$r_buff0_thd0' '_Bool'
|   |-BinaryOperator 0x56537c996750 <line:712:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x56537c9966f8 <col:3> '_Bool' lvalue Var 0x56537c995bf0 'y$r_buff1_thd1' '_Bool'
|   | `-ImplicitCastExpr 0x56537c996738 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x56537c996718 <col:20> '_Bool' lvalue Var 0x56537c9959b8 'y$r_buff0_thd1' '_Bool'
|   |-BinaryOperator 0x56537c9967c8 <line:713:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x56537c996770 <col:3> '_Bool' lvalue Var 0x56537c995c68 'y$r_buff1_thd2' '_Bool'
|   | `-ImplicitCastExpr 0x56537c9967b0 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x56537c996790 <col:20> '_Bool' lvalue Var 0x56537c995a30 'y$r_buff0_thd2' '_Bool'
|   |-BinaryOperator 0x56537c996840 <line:714:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x56537c9967e8 <col:3> '_Bool' lvalue Var 0x56537c995ce0 'y$r_buff1_thd3' '_Bool'
|   | `-ImplicitCastExpr 0x56537c996828 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x56537c996808 <col:20> '_Bool' lvalue Var 0x56537c995b00 'y$r_buff0_thd3' '_Bool'
|   |-BinaryOperator 0x56537c9968d8 <line:715:3, col:27> '_Bool' '='
|   | |-DeclRefExpr 0x56537c996860 <col:3> '_Bool' lvalue Var 0x56537c9959b8 'y$r_buff0_thd1' '_Bool'
|   | `-CStyleCastExpr 0x56537c9968b0 <col:20, col:27> '_Bool' <IntegralToBoolean>
|   |   `-IntegerLiteral 0x56537c996880 <col:27> 'int' 1
|   |-CallExpr 0x56537c996930 <line:716:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x56537c996918 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x56537c9968f8 <col:3> 'void ()' Function 0x56537c93bf00 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x56537c996988 <line:717:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x56537c996970 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x56537c996950 <col:3> 'void ()' Function 0x56537c93be40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x56537c9969e8 <line:718:3, col:7> 'int' '='
|   | |-DeclRefExpr 0x56537c9969a8 <col:3> 'int' lvalue Var 0x56537c995690 'x' 'int'
|   | `-IntegerLiteral 0x56537c9969c8 <col:7> 'int' 1
|   |-CallExpr 0x56537c996a40 <line:719:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x56537c996a28 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x56537c996a08 <col:3> 'void ()' Function 0x56537c93bf00 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x56537c996a98 <line:720:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x56537c996a80 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x56537c996a60 <col:3> 'void ()' Function 0x56537c93be40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x56537c996d98 <line:721:3, col:103> 'int' '='
|   | |-DeclRefExpr 0x56537c996ab8 <col:3> 'int' lvalue Var 0x56537c9957b0 'y' 'int'
|   | `-ConditionalOperator 0x56537c996d68 <col:7, col:103> 'int'
|   |   |-BinaryOperator 0x56537c996b90 <col:7, col:25> 'int' '&&'
|   |   | |-ImplicitCastExpr 0x56537c996b48 <col:7> 'int' <IntegralCast>
|   |   | | `-ImplicitCastExpr 0x56537c996b30 <col:7> '_Bool' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x56537c996ad8 <col:7> '_Bool' lvalue Var 0x56537c995ed0 'y$w_buff0_used' '_Bool'
|   |   | `-ImplicitCastExpr 0x56537c996b78 <col:25> 'int' <IntegralCast>
|   |   |   `-ImplicitCastExpr 0x56537c996b60 <col:25> '_Bool' <LValueToRValue>
|   |   |     `-DeclRefExpr 0x56537c996b10 <col:25> '_Bool' lvalue Var 0x56537c9959b8 'y$r_buff0_thd1' '_Bool'
|   |   |-ImplicitCastExpr 0x56537c996d50 <col:42> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x56537c996bb0 <col:42> 'int' lvalue Var 0x56537c995e58 'y$w_buff0' 'int'
|   |   `-ParenExpr 0x56537c996d30 <col:54, col:103> 'int'
|   |     `-ConditionalOperator 0x56537c996d00 <col:55, col:102> 'int'
|   |       |-BinaryOperator 0x56537c996c70 <col:55, col:73> 'int' '&&'
|   |       | |-ImplicitCastExpr 0x56537c996c28 <col:55> 'int' <IntegralCast>
|   |       | | `-ImplicitCastExpr 0x56537c996c10 <col:55> '_Bool' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x56537c996bd0 <col:55> '_Bool' lvalue Var 0x56537c995fc8 'y$w_buff1_used' '_Bool'
|   |       | `-ImplicitCastExpr 0x56537c996c58 <col:73> 'int' <IntegralCast>
|   |       |   `-ImplicitCastExpr 0x56537c996c40 <col:73> '_Bool' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x56537c996bf0 <col:73> '_Bool' lvalue Var 0x56537c995bf0 'y$r_buff1_thd1' '_Bool'
|   |       |-ImplicitCastExpr 0x56537c996cd0 <col:90> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x56537c996c90 <col:90> 'int' lvalue Var 0x56537c995f50 'y$w_buff1' 'int'
|   |       `-ImplicitCastExpr 0x56537c996ce8 <col:102> 'int' <LValueToRValue>
|   |         `-DeclRefExpr 0x56537c996cb0 <col:102> 'int' lvalue Var 0x56537c9957b0 'y' 'int'
|   |-BinaryOperator 0x56537c996fa0 <line:722:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x56537c996db8 <col:3> '_Bool' lvalue Var 0x56537c995ed0 'y$w_buff0_used' '_Bool'
|   | `-ImplicitCastExpr 0x56537c996f88 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x56537c996f58 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x56537c996e78 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x56537c996e30 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x56537c996e18 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x56537c996dd8 <col:20> '_Bool' lvalue Var 0x56537c995ed0 'y$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x56537c996e60 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x56537c996e48 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x56537c996df8 <col:38> '_Bool' lvalue Var 0x56537c9959b8 'y$r_buff0_thd1' '_Bool'
|   |     |-ImplicitCastExpr 0x56537c996f10 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x56537c996ec8 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x56537c996e98 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x56537c996f40 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x56537c996f28 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x56537c996ef0 <col:66> '_Bool' lvalue Var 0x56537c995ed0 'y$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x56537c997288 <line:723:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x56537c996fc0 <col:3> '_Bool' lvalue Var 0x56537c995fc8 'y$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x56537c997270 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x56537c997240 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x56537c997160 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x56537c997080 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x56537c997038 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x56537c997020 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x56537c996fe0 <col:20> '_Bool' lvalue Var 0x56537c995ed0 'y$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x56537c997068 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x56537c997050 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x56537c997000 <col:38> '_Bool' lvalue Var 0x56537c9959b8 'y$r_buff0_thd1' '_Bool'
|   |     | `-BinaryOperator 0x56537c997140 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x56537c9970f8 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x56537c9970e0 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x56537c9970a0 <col:56> '_Bool' lvalue Var 0x56537c995fc8 'y$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x56537c997128 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x56537c997110 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x56537c9970c0 <col:74> '_Bool' lvalue Var 0x56537c995bf0 'y$r_buff1_thd1' '_Bool'
|   |     |-ImplicitCastExpr 0x56537c9971f8 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x56537c9971b0 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x56537c997180 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x56537c997228 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x56537c997210 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x56537c9971d8 <col:102> '_Bool' lvalue Var 0x56537c995fc8 'y$w_buff1_used' '_Bool'
|   |-BinaryOperator 0x56537c997490 <line:724:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x56537c9972a8 <col:3> '_Bool' lvalue Var 0x56537c9959b8 'y$r_buff0_thd1' '_Bool'
|   | `-ImplicitCastExpr 0x56537c997478 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x56537c997448 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x56537c997368 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x56537c997320 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x56537c997308 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x56537c9972c8 <col:20> '_Bool' lvalue Var 0x56537c995ed0 'y$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x56537c997350 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x56537c997338 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x56537c9972e8 <col:38> '_Bool' lvalue Var 0x56537c9959b8 'y$r_buff0_thd1' '_Bool'
|   |     |-ImplicitCastExpr 0x56537c997400 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x56537c9973b8 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x56537c997388 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x56537c997430 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x56537c997418 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x56537c9973e0 <col:66> '_Bool' lvalue Var 0x56537c9959b8 'y$r_buff0_thd1' '_Bool'
|   |-BinaryOperator 0x56537c997778 <line:725:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x56537c9974b0 <col:3> '_Bool' lvalue Var 0x56537c995bf0 'y$r_buff1_thd1' '_Bool'
|   | `-ImplicitCastExpr 0x56537c997760 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x56537c997730 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x56537c997650 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x56537c997570 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x56537c997528 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x56537c997510 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x56537c9974d0 <col:20> '_Bool' lvalue Var 0x56537c995ed0 'y$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x56537c997558 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x56537c997540 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x56537c9974f0 <col:38> '_Bool' lvalue Var 0x56537c9959b8 'y$r_buff0_thd1' '_Bool'
|   |     | `-BinaryOperator 0x56537c997630 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x56537c9975e8 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x56537c9975d0 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x56537c997590 <col:56> '_Bool' lvalue Var 0x56537c995fc8 'y$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x56537c997618 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x56537c997600 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x56537c9975b0 <col:74> '_Bool' lvalue Var 0x56537c995bf0 'y$r_buff1_thd1' '_Bool'
|   |     |-ImplicitCastExpr 0x56537c9976e8 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x56537c9976a0 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x56537c997670 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x56537c997718 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x56537c997700 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x56537c9976c8 <col:102> '_Bool' lvalue Var 0x56537c995bf0 'y$r_buff1_thd1' '_Bool'
|   |-CallExpr 0x56537c9977d0 <line:726:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x56537c9977b8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x56537c997798 <col:3> 'void ()' Function 0x56537c93bf00 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x56537c997828 <line:727:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x56537c997810 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x56537c9977f0 <col:3> 'void ()' Function 0x56537c93be40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x56537c9978e0 <line:728:3, col:41> 'int' '='
|   | |-DeclRefExpr 0x56537c997848 <col:3> 'int' lvalue Var 0x56537c995120 '__unbuffered_cnt' 'int'
|   | `-BinaryOperator 0x56537c9978c0 <col:22, col:41> 'int' '+'
|   |   |-ImplicitCastExpr 0x56537c9978a8 <col:22> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x56537c997868 <col:22> 'int' lvalue Var 0x56537c995120 '__unbuffered_cnt' 'int'
|   |   `-IntegerLiteral 0x56537c997888 <col:41> 'int' 1
|   |-CallExpr 0x56537c997938 <line:729:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x56537c997920 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x56537c997900 <col:3> 'void ()' Function 0x56537c93bf00 '__VERIFIER_atomic_end' 'void ()'
|   `-ReturnStmt 0x56537c9979e8 <line:730:3, col:36>
|     `-CallExpr 0x56537c9979c8 <col:10, col:36> 'void *'
|       `-ImplicitCastExpr 0x56537c9979b0 <col:10> 'void *(*)(void)' <FunctionToPointerDecay>
|         `-DeclRefExpr 0x56537c997958 <col:10> 'void *(void)' Function 0x56537c93b958 '__VERIFIER_nondet_pointer' 'void *(void)'
|-FunctionDecl 0x56537c997bb8 prev 0x56537c994c48 <line:732:1, line:751:1> line:732:8 used P1 'void *(void *)'
| |-ParmVarDecl 0x56537c997b20 <col:11, col:17> col:17 arg 'void *'
| `-CompoundStmt 0x56537c998df0 <line:733:1, line:751:1>
|   |-CallExpr 0x56537c997c98 <line:734:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x56537c997c80 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x56537c997c60 <col:3> 'void ()' Function 0x56537c93be40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x56537c997d10 <line:735:3, col:25> 'int' '='
|   | |-DeclRefExpr 0x56537c997cb8 <col:3> 'int' lvalue Var 0x56537c995240 '__unbuffered_p1_EAX' 'int'
|   | `-ImplicitCastExpr 0x56537c997cf8 <col:25> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x56537c997cd8 <col:25> 'int' lvalue Var 0x56537c995690 'x' 'int'
|   |-CallExpr 0x56537c997d68 <line:736:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x56537c997d50 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x56537c997d30 <col:3> 'void ()' Function 0x56537c93bf00 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x56537c997dc0 <line:737:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x56537c997da8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x56537c997d88 <col:3> 'void ()' Function 0x56537c93be40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x56537c997e20 <line:738:3, col:7> 'int' '='
|   | |-DeclRefExpr 0x56537c997de0 <col:3> 'int' lvalue Var 0x56537c9957b0 'y' 'int'
|   | `-IntegerLiteral 0x56537c997e00 <col:7> 'int' 1
|   |-CallExpr 0x56537c997e78 <line:739:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x56537c997e60 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x56537c997e40 <col:3> 'void ()' Function 0x56537c93bf00 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x56537c997ed0 <line:740:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x56537c997eb8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x56537c997e98 <col:3> 'void ()' Function 0x56537c93be40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x56537c9981b8 <line:741:3, col:103> 'int' '='
|   | |-DeclRefExpr 0x56537c997ef0 <col:3> 'int' lvalue Var 0x56537c9957b0 'y' 'int'
|   | `-ConditionalOperator 0x56537c998188 <col:7, col:103> 'int'
|   |   |-BinaryOperator 0x56537c997fb0 <col:7, col:25> 'int' '&&'
|   |   | |-ImplicitCastExpr 0x56537c997f68 <col:7> 'int' <IntegralCast>
|   |   | | `-ImplicitCastExpr 0x56537c997f50 <col:7> '_Bool' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x56537c997f10 <col:7> '_Bool' lvalue Var 0x56537c995ed0 'y$w_buff0_used' '_Bool'
|   |   | `-ImplicitCastExpr 0x56537c997f98 <col:25> 'int' <IntegralCast>
|   |   |   `-ImplicitCastExpr 0x56537c997f80 <col:25> '_Bool' <LValueToRValue>
|   |   |     `-DeclRefExpr 0x56537c997f30 <col:25> '_Bool' lvalue Var 0x56537c995a30 'y$r_buff0_thd2' '_Bool'
|   |   |-ImplicitCastExpr 0x56537c998170 <col:42> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x56537c997fd0 <col:42> 'int' lvalue Var 0x56537c995e58 'y$w_buff0' 'int'
|   |   `-ParenExpr 0x56537c998150 <col:54, col:103> 'int'
|   |     `-ConditionalOperator 0x56537c998120 <col:55, col:102> 'int'
|   |       |-BinaryOperator 0x56537c998090 <col:55, col:73> 'int' '&&'
|   |       | |-ImplicitCastExpr 0x56537c998048 <col:55> 'int' <IntegralCast>
|   |       | | `-ImplicitCastExpr 0x56537c998030 <col:55> '_Bool' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x56537c997ff0 <col:55> '_Bool' lvalue Var 0x56537c995fc8 'y$w_buff1_used' '_Bool'
|   |       | `-ImplicitCastExpr 0x56537c998078 <col:73> 'int' <IntegralCast>
|   |       |   `-ImplicitCastExpr 0x56537c998060 <col:73> '_Bool' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x56537c998010 <col:73> '_Bool' lvalue Var 0x56537c995c68 'y$r_buff1_thd2' '_Bool'
|   |       |-ImplicitCastExpr 0x56537c9980f0 <col:90> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x56537c9980b0 <col:90> 'int' lvalue Var 0x56537c995f50 'y$w_buff1' 'int'
|   |       `-ImplicitCastExpr 0x56537c998108 <col:102> 'int' <LValueToRValue>
|   |         `-DeclRefExpr 0x56537c9980d0 <col:102> 'int' lvalue Var 0x56537c9957b0 'y' 'int'
|   |-BinaryOperator 0x56537c9983c0 <line:742:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x56537c9981d8 <col:3> '_Bool' lvalue Var 0x56537c995ed0 'y$w_buff0_used' '_Bool'
|   | `-ImplicitCastExpr 0x56537c9983a8 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x56537c998378 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x56537c998298 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x56537c998250 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x56537c998238 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x56537c9981f8 <col:20> '_Bool' lvalue Var 0x56537c995ed0 'y$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x56537c998280 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x56537c998268 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x56537c998218 <col:38> '_Bool' lvalue Var 0x56537c995a30 'y$r_buff0_thd2' '_Bool'
|   |     |-ImplicitCastExpr 0x56537c998330 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x56537c9982e8 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x56537c9982b8 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x56537c998360 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x56537c998348 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x56537c998310 <col:66> '_Bool' lvalue Var 0x56537c995ed0 'y$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x56537c9986a8 <line:743:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x56537c9983e0 <col:3> '_Bool' lvalue Var 0x56537c995fc8 'y$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x56537c998690 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x56537c998660 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x56537c998580 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x56537c9984a0 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x56537c998458 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x56537c998440 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x56537c998400 <col:20> '_Bool' lvalue Var 0x56537c995ed0 'y$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x56537c998488 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x56537c998470 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x56537c998420 <col:38> '_Bool' lvalue Var 0x56537c995a30 'y$r_buff0_thd2' '_Bool'
|   |     | `-BinaryOperator 0x56537c998560 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x56537c998518 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x56537c998500 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x56537c9984c0 <col:56> '_Bool' lvalue Var 0x56537c995fc8 'y$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x56537c998548 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x56537c998530 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x56537c9984e0 <col:74> '_Bool' lvalue Var 0x56537c995c68 'y$r_buff1_thd2' '_Bool'
|   |     |-ImplicitCastExpr 0x56537c998618 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x56537c9985d0 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x56537c9985a0 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x56537c998648 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x56537c998630 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x56537c9985f8 <col:102> '_Bool' lvalue Var 0x56537c995fc8 'y$w_buff1_used' '_Bool'
|   |-BinaryOperator 0x56537c9988b0 <line:744:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x56537c9986c8 <col:3> '_Bool' lvalue Var 0x56537c995a30 'y$r_buff0_thd2' '_Bool'
|   | `-ImplicitCastExpr 0x56537c998898 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x56537c998868 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x56537c998788 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x56537c998740 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x56537c998728 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x56537c9986e8 <col:20> '_Bool' lvalue Var 0x56537c995ed0 'y$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x56537c998770 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x56537c998758 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x56537c998708 <col:38> '_Bool' lvalue Var 0x56537c995a30 'y$r_buff0_thd2' '_Bool'
|   |     |-ImplicitCastExpr 0x56537c998820 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x56537c9987d8 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x56537c9987a8 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x56537c998850 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x56537c998838 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x56537c998800 <col:66> '_Bool' lvalue Var 0x56537c995a30 'y$r_buff0_thd2' '_Bool'
|   |-BinaryOperator 0x56537c998ba8 <line:745:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x56537c9988d0 <col:3> '_Bool' lvalue Var 0x56537c995c68 'y$r_buff1_thd2' '_Bool'
|   | `-ImplicitCastExpr 0x56537c998b90 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x56537c998b60 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x56537c998a70 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x56537c998990 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x56537c998948 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x56537c998930 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x56537c9988f0 <col:20> '_Bool' lvalue Var 0x56537c995ed0 'y$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x56537c998978 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x56537c998960 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x56537c998910 <col:38> '_Bool' lvalue Var 0x56537c995a30 'y$r_buff0_thd2' '_Bool'
|   |     | `-BinaryOperator 0x56537c998a50 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x56537c998a08 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x56537c9989f0 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x56537c9989b0 <col:56> '_Bool' lvalue Var 0x56537c995fc8 'y$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x56537c998a38 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x56537c998a20 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x56537c9989d0 <col:74> '_Bool' lvalue Var 0x56537c995c68 'y$r_buff1_thd2' '_Bool'
|   |     |-ImplicitCastExpr 0x56537c998b08 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x56537c998ac0 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x56537c998a90 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x56537c998b48 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x56537c998b30 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x56537c998ae8 <col:102> '_Bool' lvalue Var 0x56537c995c68 'y$r_buff1_thd2' '_Bool'
|   |-CallExpr 0x56537c998c00 <line:746:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x56537c998be8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x56537c998bc8 <col:3> 'void ()' Function 0x56537c93bf00 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x56537c998c58 <line:747:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x56537c998c40 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x56537c998c20 <col:3> 'void ()' Function 0x56537c93be40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x56537c998d10 <line:748:3, col:41> 'int' '='
|   | |-DeclRefExpr 0x56537c998c78 <col:3> 'int' lvalue Var 0x56537c995120 '__unbuffered_cnt' 'int'
|   | `-BinaryOperator 0x56537c998cf0 <col:22, col:41> 'int' '+'
|   |   |-ImplicitCastExpr 0x56537c998cd8 <col:22> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x56537c998c98 <col:22> 'int' lvalue Var 0x56537c995120 '__unbuffered_cnt' 'int'
|   |   `-IntegerLiteral 0x56537c998cb8 <col:41> 'int' 1
|   |-CallExpr 0x56537c998d68 <line:749:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x56537c998d50 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x56537c998d30 <col:3> 'void ()' Function 0x56537c93bf00 '__VERIFIER_atomic_end' 'void ()'
|   `-ReturnStmt 0x56537c998de0 <line:750:3, col:36>
|     `-CallExpr 0x56537c998dc0 <col:10, col:36> 'void *'
|       `-ImplicitCastExpr 0x56537c998da8 <col:10> 'void *(*)(void)' <FunctionToPointerDecay>
|         `-DeclRefExpr 0x56537c998d88 <col:10> 'void *(void)' Function 0x56537c93b958 '__VERIFIER_nondet_pointer' 'void *(void)'
|-FunctionDecl 0x56537c998f38 prev 0x56537c994da0 <line:752:1, line:797:1> line:752:8 used P2 'void *(void *)'
| |-ParmVarDecl 0x56537c998ea0 <col:11, col:17> col:17 arg 'void *'
| `-CompoundStmt 0x56537c99f4b0 <line:753:1, line:797:1>
|   |-CallExpr 0x56537c999018 <line:754:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x56537c999000 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x56537c998fe0 <col:3> 'void ()' Function 0x56537c93be40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x56537c9990c8 <line:755:3, col:45> '_Bool' '='
|   | |-DeclRefExpr 0x56537c999038 <col:3> '_Bool' lvalue Var 0x56537c996040 'weak$$choice0' '_Bool'
|   | `-ImplicitCastExpr 0x56537c9990b0 <col:19, col:45> '_Bool' <PointerToBoolean>
|   |   `-CallExpr 0x56537c999090 <col:19, col:45> 'void *'
|   |     `-ImplicitCastExpr 0x56537c999078 <col:19> 'void *(*)(void)' <FunctionToPointerDecay>
|   |       `-DeclRefExpr 0x56537c999058 <col:19> 'void *(void)' Function 0x56537c93b958 '__VERIFIER_nondet_pointer' 'void *(void)'
|   |-BinaryOperator 0x56537c999178 <line:756:3, col:45> '_Bool' '='
|   | |-DeclRefExpr 0x56537c9990e8 <col:3> '_Bool' lvalue Var 0x56537c9960b8 'weak$$choice2' '_Bool'
|   | `-ImplicitCastExpr 0x56537c999160 <col:19, col:45> '_Bool' <PointerToBoolean>
|   |   `-CallExpr 0x56537c999140 <col:19, col:45> 'void *'
|   |     `-ImplicitCastExpr 0x56537c999128 <col:19> 'void *(*)(void)' <FunctionToPointerDecay>
|   |       `-DeclRefExpr 0x56537c999108 <col:19> 'void *(void)' Function 0x56537c93b958 '__VERIFIER_nondet_pointer' 'void *(void)'
|   |-BinaryOperator 0x56537c9991f0 <line:757:3, col:21> '_Bool' '='
|   | |-DeclRefExpr 0x56537c999198 <col:3> '_Bool' lvalue Var 0x56537c995848 'y$flush_delayed' '_Bool'
|   | `-ImplicitCastExpr 0x56537c9991d8 <col:21> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x56537c9991b8 <col:21> '_Bool' lvalue Var 0x56537c9960b8 'weak$$choice2' '_Bool'
|   |-BinaryOperator 0x56537c999268 <line:758:3, col:15> 'int' '='
|   | |-DeclRefExpr 0x56537c999210 <col:3> 'int' lvalue Var 0x56537c9958c8 'y$mem_tmp' 'int'
|   | `-ImplicitCastExpr 0x56537c999250 <col:15> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x56537c999230 <col:15> 'int' lvalue Var 0x56537c9957b0 'y' 'int'
|   |-BinaryOperator 0x56537c9996a0 <line:759:3, col:162> 'int' '='
|   | |-DeclRefExpr 0x56537c999288 <col:3> 'int' lvalue Var 0x56537c9957b0 'y' 'int'
|   | `-ConditionalOperator 0x56537c999670 <col:7, col:162> 'int'
|   |   |-BinaryOperator 0x56537c999498 <col:7, col:84> 'int' '||'
|   |   | |-BinaryOperator 0x56537c9993b8 <col:7, col:46> 'int' '||'
|   |   | | |-UnaryOperator 0x56537c9992e0 <col:7, col:8> 'int' prefix '!' cannot overflow
|   |   | | | `-ImplicitCastExpr 0x56537c9992c8 <col:8> '_Bool' <LValueToRValue>
|   |   | | |   `-DeclRefExpr 0x56537c9992a8 <col:8> '_Bool' lvalue Var 0x56537c995ed0 'y$w_buff0_used' '_Bool'
|   |   | | `-BinaryOperator 0x56537c999398 <col:26, col:46> 'int' '&&'
|   |   | |   |-UnaryOperator 0x56537c999330 <col:26, col:27> 'int' prefix '!' cannot overflow
|   |   | |   | `-ImplicitCastExpr 0x56537c999318 <col:27> '_Bool' <LValueToRValue>
|   |   | |   |   `-DeclRefExpr 0x56537c9992f8 <col:27> '_Bool' lvalue Var 0x56537c995b00 'y$r_buff0_thd3' '_Bool'
|   |   | |   `-UnaryOperator 0x56537c999380 <col:45, col:46> 'int' prefix '!' cannot overflow
|   |   | |     `-ImplicitCastExpr 0x56537c999368 <col:46> '_Bool' <LValueToRValue>
|   |   | |       `-DeclRefExpr 0x56537c999348 <col:46> '_Bool' lvalue Var 0x56537c995fc8 'y$w_buff1_used' '_Bool'
|   |   | `-BinaryOperator 0x56537c999478 <col:64, col:84> 'int' '&&'
|   |   |   |-UnaryOperator 0x56537c999410 <col:64, col:65> 'int' prefix '!' cannot overflow
|   |   |   | `-ImplicitCastExpr 0x56537c9993f8 <col:65> '_Bool' <LValueToRValue>
|   |   |   |   `-DeclRefExpr 0x56537c9993d8 <col:65> '_Bool' lvalue Var 0x56537c995b00 'y$r_buff0_thd3' '_Bool'
|   |   |   `-UnaryOperator 0x56537c999460 <col:83, col:84> 'int' prefix '!' cannot overflow
|   |   |     `-ImplicitCastExpr 0x56537c999448 <col:84> '_Bool' <LValueToRValue>
|   |   |       `-DeclRefExpr 0x56537c999428 <col:84> '_Bool' lvalue Var 0x56537c995ce0 'y$r_buff1_thd3' '_Bool'
|   |   |-ImplicitCastExpr 0x56537c999658 <col:101> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x56537c9994b8 <col:101> 'int' lvalue Var 0x56537c9957b0 'y' 'int'
|   |   `-ParenExpr 0x56537c999638 <col:105, col:162> 'int'
|   |     `-ConditionalOperator 0x56537c999608 <col:106, col:153> 'int'
|   |       |-BinaryOperator 0x56537c999578 <col:106, col:124> 'int' '&&'
|   |       | |-ImplicitCastExpr 0x56537c999530 <col:106> 'int' <IntegralCast>
|   |       | | `-ImplicitCastExpr 0x56537c999518 <col:106> '_Bool' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x56537c9994d8 <col:106> '_Bool' lvalue Var 0x56537c995ed0 'y$w_buff0_used' '_Bool'
|   |       | `-ImplicitCastExpr 0x56537c999560 <col:124> 'int' <IntegralCast>
|   |       |   `-ImplicitCastExpr 0x56537c999548 <col:124> '_Bool' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x56537c9994f8 <col:124> '_Bool' lvalue Var 0x56537c995b00 'y$r_buff0_thd3' '_Bool'
|   |       |-ImplicitCastExpr 0x56537c9995d8 <col:141> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x56537c999598 <col:141> 'int' lvalue Var 0x56537c995e58 'y$w_buff0' 'int'
|   |       `-ImplicitCastExpr 0x56537c9995f0 <col:153> 'int' <LValueToRValue>
|   |         `-DeclRefExpr 0x56537c9995b8 <col:153> 'int' lvalue Var 0x56537c995f50 'y$w_buff1' 'int'
|   |-BinaryOperator 0x56537c999bd8 <line:760:3, col:208> 'int' '='
|   | |-DeclRefExpr 0x56537c9996c0 <col:3> 'int' lvalue Var 0x56537c995e58 'y$w_buff0' 'int'
|   | `-ConditionalOperator 0x56537c999ba8 <col:15, col:208> 'int'
|   |   |-ImplicitCastExpr 0x56537c999b78 <col:15> 'int' <IntegralCast>
|   |   | `-ImplicitCastExpr 0x56537c999b60 <col:15> '_Bool' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x56537c9996e0 <col:15> '_Bool' lvalue Var 0x56537c9960b8 'weak$$choice2' '_Bool'
|   |   |-ImplicitCastExpr 0x56537c999b90 <col:31> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x56537c999700 <col:31> 'int' lvalue Var 0x56537c995e58 'y$w_buff0' 'int'
|   |   `-ParenExpr 0x56537c999b40 <col:43, col:208> 'int'
|   |     `-ConditionalOperator 0x56537c999ae8 <col:44, col:207> 'int'
|   |       |-BinaryOperator 0x56537c999910 <col:44, col:121> 'int' '||'
|   |       | |-BinaryOperator 0x56537c999830 <col:44, col:83> 'int' '||'
|   |       | | |-UnaryOperator 0x56537c999758 <col:44, col:45> 'int' prefix '!' cannot overflow
|   |       | | | `-ImplicitCastExpr 0x56537c999740 <col:45> '_Bool' <LValueToRValue>
|   |       | | |   `-DeclRefExpr 0x56537c999720 <col:45> '_Bool' lvalue Var 0x56537c995ed0 'y$w_buff0_used' '_Bool'
|   |       | | `-BinaryOperator 0x56537c999810 <col:63, col:83> 'int' '&&'
|   |       | |   |-UnaryOperator 0x56537c9997a8 <col:63, col:64> 'int' prefix '!' cannot overflow
|   |       | |   | `-ImplicitCastExpr 0x56537c999790 <col:64> '_Bool' <LValueToRValue>
|   |       | |   |   `-DeclRefExpr 0x56537c999770 <col:64> '_Bool' lvalue Var 0x56537c995b00 'y$r_buff0_thd3' '_Bool'
|   |       | |   `-UnaryOperator 0x56537c9997f8 <col:82, col:83> 'int' prefix '!' cannot overflow
|   |       | |     `-ImplicitCastExpr 0x56537c9997e0 <col:83> '_Bool' <LValueToRValue>
|   |       | |       `-DeclRefExpr 0x56537c9997c0 <col:83> '_Bool' lvalue Var 0x56537c995fc8 'y$w_buff1_used' '_Bool'
|   |       | `-BinaryOperator 0x56537c9998f0 <col:101, col:121> 'int' '&&'
|   |       |   |-UnaryOperator 0x56537c999888 <col:101, col:102> 'int' prefix '!' cannot overflow
|   |       |   | `-ImplicitCastExpr 0x56537c999870 <col:102> '_Bool' <LValueToRValue>
|   |       |   |   `-DeclRefExpr 0x56537c999850 <col:102> '_Bool' lvalue Var 0x56537c995b00 'y$r_buff0_thd3' '_Bool'
|   |       |   `-UnaryOperator 0x56537c9998d8 <col:120, col:121> 'int' prefix '!' cannot overflow
|   |       |     `-ImplicitCastExpr 0x56537c9998c0 <col:121> '_Bool' <LValueToRValue>
|   |       |       `-DeclRefExpr 0x56537c9998a0 <col:121> '_Bool' lvalue Var 0x56537c995ce0 'y$r_buff1_thd3' '_Bool'
|   |       |-ImplicitCastExpr 0x56537c999ad0 <col:138> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x56537c999930 <col:138> 'int' lvalue Var 0x56537c995e58 'y$w_buff0' 'int'
|   |       `-ParenExpr 0x56537c999ab0 <col:150, col:207> 'int'
|   |         `-ConditionalOperator 0x56537c999a80 <col:151, col:198> 'int'
|   |           |-BinaryOperator 0x56537c9999f0 <col:151, col:169> 'int' '&&'
|   |           | |-ImplicitCastExpr 0x56537c9999a8 <col:151> 'int' <IntegralCast>
|   |           | | `-ImplicitCastExpr 0x56537c999990 <col:151> '_Bool' <LValueToRValue>
|   |           | |   `-DeclRefExpr 0x56537c999950 <col:151> '_Bool' lvalue Var 0x56537c995ed0 'y$w_buff0_used' '_Bool'
|   |           | `-ImplicitCastExpr 0x56537c9999d8 <col:169> 'int' <IntegralCast>
|   |           |   `-ImplicitCastExpr 0x56537c9999c0 <col:169> '_Bool' <LValueToRValue>
|   |           |     `-DeclRefExpr 0x56537c999970 <col:169> '_Bool' lvalue Var 0x56537c995b00 'y$r_buff0_thd3' '_Bool'
|   |           |-ImplicitCastExpr 0x56537c999a50 <col:186> 'int' <LValueToRValue>
|   |           | `-DeclRefExpr 0x56537c999a10 <col:186> 'int' lvalue Var 0x56537c995e58 'y$w_buff0' 'int'
|   |           `-ImplicitCastExpr 0x56537c999a68 <col:198> 'int' <LValueToRValue>
|   |             `-DeclRefExpr 0x56537c999a30 <col:198> 'int' lvalue Var 0x56537c995e58 'y$w_buff0' 'int'
|   |-BinaryOperator 0x56537c99a0e8 <line:761:3, col:208> 'int' '='
|   | |-DeclRefExpr 0x56537c999bf8 <col:3> 'int' lvalue Var 0x56537c995f50 'y$w_buff1' 'int'
|   | `-ConditionalOperator 0x56537c99a0b8 <col:15, col:208> 'int'
|   |   |-ImplicitCastExpr 0x56537c99a088 <col:15> 'int' <IntegralCast>
|   |   | `-ImplicitCastExpr 0x56537c99a070 <col:15> '_Bool' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x56537c999c18 <col:15> '_Bool' lvalue Var 0x56537c9960b8 'weak$$choice2' '_Bool'
|   |   |-ImplicitCastExpr 0x56537c99a0a0 <col:31> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x56537c999c38 <col:31> 'int' lvalue Var 0x56537c995f50 'y$w_buff1' 'int'
|   |   `-ParenExpr 0x56537c99a050 <col:43, col:208> 'int'
|   |     `-ConditionalOperator 0x56537c99a020 <col:44, col:207> 'int'
|   |       |-BinaryOperator 0x56537c999e48 <col:44, col:121> 'int' '||'
|   |       | |-BinaryOperator 0x56537c999d68 <col:44, col:83> 'int' '||'
|   |       | | |-UnaryOperator 0x56537c999c90 <col:44, col:45> 'int' prefix '!' cannot overflow
|   |       | | | `-ImplicitCastExpr 0x56537c999c78 <col:45> '_Bool' <LValueToRValue>
|   |       | | |   `-DeclRefExpr 0x56537c999c58 <col:45> '_Bool' lvalue Var 0x56537c995ed0 'y$w_buff0_used' '_Bool'
|   |       | | `-BinaryOperator 0x56537c999d48 <col:63, col:83> 'int' '&&'
|   |       | |   |-UnaryOperator 0x56537c999ce0 <col:63, col:64> 'int' prefix '!' cannot overflow
|   |       | |   | `-ImplicitCastExpr 0x56537c999cc8 <col:64> '_Bool' <LValueToRValue>
|   |       | |   |   `-DeclRefExpr 0x56537c999ca8 <col:64> '_Bool' lvalue Var 0x56537c995b00 'y$r_buff0_thd3' '_Bool'
|   |       | |   `-UnaryOperator 0x56537c999d30 <col:82, col:83> 'int' prefix '!' cannot overflow
|   |       | |     `-ImplicitCastExpr 0x56537c999d18 <col:83> '_Bool' <LValueToRValue>
|   |       | |       `-DeclRefExpr 0x56537c999cf8 <col:83> '_Bool' lvalue Var 0x56537c995fc8 'y$w_buff1_used' '_Bool'
|   |       | `-BinaryOperator 0x56537c999e28 <col:101, col:121> 'int' '&&'
|   |       |   |-UnaryOperator 0x56537c999dc0 <col:101, col:102> 'int' prefix '!' cannot overflow
|   |       |   | `-ImplicitCastExpr 0x56537c999da8 <col:102> '_Bool' <LValueToRValue>
|   |       |   |   `-DeclRefExpr 0x56537c999d88 <col:102> '_Bool' lvalue Var 0x56537c995b00 'y$r_buff0_thd3' '_Bool'
|   |       |   `-UnaryOperator 0x56537c999e10 <col:120, col:121> 'int' prefix '!' cannot overflow
|   |       |     `-ImplicitCastExpr 0x56537c999df8 <col:121> '_Bool' <LValueToRValue>
|   |       |       `-DeclRefExpr 0x56537c999dd8 <col:121> '_Bool' lvalue Var 0x56537c995ce0 'y$r_buff1_thd3' '_Bool'
|   |       |-ImplicitCastExpr 0x56537c99a008 <col:138> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x56537c999e68 <col:138> 'int' lvalue Var 0x56537c995f50 'y$w_buff1' 'int'
|   |       `-ParenExpr 0x56537c999fe8 <col:150, col:207> 'int'
|   |         `-ConditionalOperator 0x56537c999fb8 <col:151, col:198> 'int'
|   |           |-BinaryOperator 0x56537c999f28 <col:151, col:169> 'int' '&&'
|   |           | |-ImplicitCastExpr 0x56537c999ee0 <col:151> 'int' <IntegralCast>
|   |           | | `-ImplicitCastExpr 0x56537c999ec8 <col:151> '_Bool' <LValueToRValue>
|   |           | |   `-DeclRefExpr 0x56537c999e88 <col:151> '_Bool' lvalue Var 0x56537c995ed0 'y$w_buff0_used' '_Bool'
|   |           | `-ImplicitCastExpr 0x56537c999f10 <col:169> 'int' <IntegralCast>
|   |           |   `-ImplicitCastExpr 0x56537c999ef8 <col:169> '_Bool' <LValueToRValue>
|   |           |     `-DeclRefExpr 0x56537c999ea8 <col:169> '_Bool' lvalue Var 0x56537c995b00 'y$r_buff0_thd3' '_Bool'
|   |           |-ImplicitCastExpr 0x56537c999f88 <col:186> 'int' <LValueToRValue>
|   |           | `-DeclRefExpr 0x56537c999f48 <col:186> 'int' lvalue Var 0x56537c995f50 'y$w_buff1' 'int'
|   |           `-ImplicitCastExpr 0x56537c999fa0 <col:198> 'int' <LValueToRValue>
|   |             `-DeclRefExpr 0x56537c999f68 <col:198> 'int' lvalue Var 0x56537c995f50 'y$w_buff1' 'int'
|   |-BinaryOperator 0x56537c99a690 <line:762:3, col:227> '_Bool' '='
|   | |-DeclRefExpr 0x56537c99a108 <col:3> '_Bool' lvalue Var 0x56537c995ed0 'y$w_buff0_used' '_Bool'
|   | `-ImplicitCastExpr 0x56537c99a678 <col:20, col:227> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x56537c99a648 <col:20, col:227> 'int'
|   |     |-ImplicitCastExpr 0x56537c99a600 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x56537c99a5e8 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x56537c99a128 <col:20> '_Bool' lvalue Var 0x56537c9960b8 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x56537c99a630 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x56537c99a618 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x56537c99a148 <col:36> '_Bool' lvalue Var 0x56537c995ed0 'y$w_buff0_used' '_Bool'
|   |     `-ParenExpr 0x56537c99a5c8 <col:53, col:227> 'int'
|   |       `-ConditionalOperator 0x56537c99a598 <col:54, col:226> 'int'
|   |         |-BinaryOperator 0x56537c99a358 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x56537c99a278 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x56537c99a1a0 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x56537c99a188 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x56537c99a168 <col:55> '_Bool' lvalue Var 0x56537c995ed0 'y$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x56537c99a258 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x56537c99a1f0 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x56537c99a1d8 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x56537c99a1b8 <col:74> '_Bool' lvalue Var 0x56537c995b00 'y$r_buff0_thd3' '_Bool'
|   |         | |   `-UnaryOperator 0x56537c99a240 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x56537c99a228 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x56537c99a208 <col:93> '_Bool' lvalue Var 0x56537c995fc8 'y$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x56537c99a338 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x56537c99a2d0 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x56537c99a2b8 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x56537c99a298 <col:112> '_Bool' lvalue Var 0x56537c995b00 'y$r_buff0_thd3' '_Bool'
|   |         |   `-UnaryOperator 0x56537c99a320 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x56537c99a308 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x56537c99a2e8 <col:131> '_Bool' lvalue Var 0x56537c995ce0 'y$r_buff1_thd3' '_Bool'
|   |         |-ImplicitCastExpr 0x56537c99a580 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x56537c99a568 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x56537c99a378 <col:148> '_Bool' lvalue Var 0x56537c995ed0 'y$w_buff0_used' '_Bool'
|   |         `-ParenExpr 0x56537c99a548 <col:165, col:226> 'int'
|   |           `-ConditionalOperator 0x56537c99a518 <col:166, col:212> 'int'
|   |             |-BinaryOperator 0x56537c99a438 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x56537c99a3f0 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x56537c99a3d8 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x56537c99a398 <col:166> '_Bool' lvalue Var 0x56537c995ed0 'y$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x56537c99a420 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x56537c99a408 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x56537c99a3b8 <col:184> '_Bool' lvalue Var 0x56537c995b00 'y$r_buff0_thd3' '_Bool'
|   |             |-ImplicitCastExpr 0x56537c99a4d0 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x56537c99a488 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x56537c99a458 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x56537c99a500 <col:212> 'int' <IntegralCast>
|   |               `-ImplicitCastExpr 0x56537c99a4e8 <col:212> '_Bool' <LValueToRValue>
|   |                 `-DeclRefExpr 0x56537c99a4b0 <col:212> '_Bool' lvalue Var 0x56537c995ed0 'y$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x56537c99ac78 <line:763:3, col:221> '_Bool' '='
|   | |-DeclRefExpr 0x56537c99a6b0 <col:3> '_Bool' lvalue Var 0x56537c995fc8 'y$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x56537c99ac60 <col:20, col:221> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x56537c99ac30 <col:20, col:221> 'int'
|   |     |-ImplicitCastExpr 0x56537c99abe8 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x56537c99abd0 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x56537c99a6d0 <col:20> '_Bool' lvalue Var 0x56537c9960b8 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x56537c99ac18 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x56537c99ac00 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x56537c99a6f0 <col:36> '_Bool' lvalue Var 0x56537c995fc8 'y$w_buff1_used' '_Bool'
|   |     `-ParenExpr 0x56537c99abb0 <col:53, col:221> 'int'
|   |       `-ConditionalOperator 0x56537c99ab80 <col:54, col:220> 'int'
|   |         |-BinaryOperator 0x56537c99a900 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x56537c99a820 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x56537c99a748 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x56537c99a730 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x56537c99a710 <col:55> '_Bool' lvalue Var 0x56537c995ed0 'y$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x56537c99a800 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x56537c99a798 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x56537c99a780 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x56537c99a760 <col:74> '_Bool' lvalue Var 0x56537c995b00 'y$r_buff0_thd3' '_Bool'
|   |         | |   `-UnaryOperator 0x56537c99a7e8 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x56537c99a7d0 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x56537c99a7b0 <col:93> '_Bool' lvalue Var 0x56537c995fc8 'y$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x56537c99a8e0 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x56537c99a878 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x56537c99a860 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x56537c99a840 <col:112> '_Bool' lvalue Var 0x56537c995b00 'y$r_buff0_thd3' '_Bool'
|   |         |   `-UnaryOperator 0x56537c99a8c8 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x56537c99a8b0 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x56537c99a890 <col:131> '_Bool' lvalue Var 0x56537c995ce0 'y$r_buff1_thd3' '_Bool'
|   |         |-ImplicitCastExpr 0x56537c99ab68 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x56537c99ab50 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x56537c99a920 <col:148> '_Bool' lvalue Var 0x56537c995fc8 'y$w_buff1_used' '_Bool'
|   |         `-ParenExpr 0x56537c99ab10 <col:165, col:220> 'int'
|   |           `-ConditionalOperator 0x56537c99aae0 <col:166, col:219> 'int'
|   |             |-BinaryOperator 0x56537c99a9e0 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x56537c99a998 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x56537c99a980 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x56537c99a940 <col:166> '_Bool' lvalue Var 0x56537c995ed0 'y$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x56537c99a9c8 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x56537c99a9b0 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x56537c99a960 <col:184> '_Bool' lvalue Var 0x56537c995b00 'y$r_buff0_thd3' '_Bool'
|   |             |-ImplicitCastExpr 0x56537c99aab0 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x56537c99aa30 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x56537c99aa00 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x56537c99aac8 <col:212, col:219> 'int' <IntegralCast>
|   |               `-CStyleCastExpr 0x56537c99aa88 <col:212, col:219> '_Bool' <IntegralToBoolean>
|   |                 `-IntegerLiteral 0x56537c99aa58 <col:219> 'int' 0
|   |-BinaryOperator 0x56537c99b220 <line:764:3, col:227> '_Bool' '='
|   | |-DeclRefExpr 0x56537c99ac98 <col:3> '_Bool' lvalue Var 0x56537c995b00 'y$r_buff0_thd3' '_Bool'
|   | `-ImplicitCastExpr 0x56537c99b208 <col:20, col:227> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x56537c99b1d8 <col:20, col:227> 'int'
|   |     |-ImplicitCastExpr 0x56537c99b190 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x56537c99b178 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x56537c99acb8 <col:20> '_Bool' lvalue Var 0x56537c9960b8 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x56537c99b1c0 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x56537c99b1a8 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x56537c99acd8 <col:36> '_Bool' lvalue Var 0x56537c995b00 'y$r_buff0_thd3' '_Bool'
|   |     `-ParenExpr 0x56537c99b158 <col:53, col:227> 'int'
|   |       `-ConditionalOperator 0x56537c99b128 <col:54, col:226> 'int'
|   |         |-BinaryOperator 0x56537c99aee8 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x56537c99ae08 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x56537c99ad30 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x56537c99ad18 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x56537c99acf8 <col:55> '_Bool' lvalue Var 0x56537c995ed0 'y$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x56537c99ade8 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x56537c99ad80 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x56537c99ad68 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x56537c99ad48 <col:74> '_Bool' lvalue Var 0x56537c995b00 'y$r_buff0_thd3' '_Bool'
|   |         | |   `-UnaryOperator 0x56537c99add0 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x56537c99adb8 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x56537c99ad98 <col:93> '_Bool' lvalue Var 0x56537c995fc8 'y$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x56537c99aec8 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x56537c99ae60 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x56537c99ae48 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x56537c99ae28 <col:112> '_Bool' lvalue Var 0x56537c995b00 'y$r_buff0_thd3' '_Bool'
|   |         |   `-UnaryOperator 0x56537c99aeb0 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x56537c99ae98 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x56537c99ae78 <col:131> '_Bool' lvalue Var 0x56537c995ce0 'y$r_buff1_thd3' '_Bool'
|   |         |-ImplicitCastExpr 0x56537c99b110 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x56537c99b0f8 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x56537c99af08 <col:148> '_Bool' lvalue Var 0x56537c995b00 'y$r_buff0_thd3' '_Bool'
|   |         `-ParenExpr 0x56537c99b0d8 <col:165, col:226> 'int'
|   |           `-ConditionalOperator 0x56537c99b0a8 <col:166, col:212> 'int'
|   |             |-BinaryOperator 0x56537c99afc8 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x56537c99af80 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x56537c99af68 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x56537c99af28 <col:166> '_Bool' lvalue Var 0x56537c995ed0 'y$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x56537c99afb0 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x56537c99af98 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x56537c99af48 <col:184> '_Bool' lvalue Var 0x56537c995b00 'y$r_buff0_thd3' '_Bool'
|   |             |-ImplicitCastExpr 0x56537c99b060 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x56537c99b018 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x56537c99afe8 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x56537c99b090 <col:212> 'int' <IntegralCast>
|   |               `-ImplicitCastExpr 0x56537c99b078 <col:212> '_Bool' <LValueToRValue>
|   |                 `-DeclRefExpr 0x56537c99b040 <col:212> '_Bool' lvalue Var 0x56537c995b00 'y$r_buff0_thd3' '_Bool'
|   |-BinaryOperator 0x56537c99b7e8 <line:765:3, col:221> '_Bool' '='
|   | |-DeclRefExpr 0x56537c99b240 <col:3> '_Bool' lvalue Var 0x56537c995ce0 'y$r_buff1_thd3' '_Bool'
|   | `-ImplicitCastExpr 0x56537c99b7d0 <col:20, col:221> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x56537c99b7a0 <col:20, col:221> 'int'
|   |     |-ImplicitCastExpr 0x56537c99b758 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x56537c99b740 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x56537c99b260 <col:20> '_Bool' lvalue Var 0x56537c9960b8 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x56537c99b788 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x56537c99b770 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x56537c99b280 <col:36> '_Bool' lvalue Var 0x56537c995ce0 'y$r_buff1_thd3' '_Bool'
|   |     `-ParenExpr 0x56537c99b720 <col:53, col:221> 'int'
|   |       `-ConditionalOperator 0x56537c99b6f0 <col:54, col:220> 'int'
|   |         |-BinaryOperator 0x56537c99b490 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x56537c99b3b0 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x56537c99b2d8 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x56537c99b2c0 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x56537c99b2a0 <col:55> '_Bool' lvalue Var 0x56537c995ed0 'y$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x56537c99b390 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x56537c99b328 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x56537c99b310 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x56537c99b2f0 <col:74> '_Bool' lvalue Var 0x56537c995b00 'y$r_buff0_thd3' '_Bool'
|   |         | |   `-UnaryOperator 0x56537c99b378 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x56537c99b360 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x56537c99b340 <col:93> '_Bool' lvalue Var 0x56537c995fc8 'y$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x56537c99b470 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x56537c99b408 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x56537c99b3f0 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x56537c99b3d0 <col:112> '_Bool' lvalue Var 0x56537c995b00 'y$r_buff0_thd3' '_Bool'
|   |         |   `-UnaryOperator 0x56537c99b458 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x56537c99b440 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x56537c99b420 <col:131> '_Bool' lvalue Var 0x56537c995ce0 'y$r_buff1_thd3' '_Bool'
|   |         |-ImplicitCastExpr 0x56537c99b6d8 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x56537c99b6c0 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x56537c99b4b0 <col:148> '_Bool' lvalue Var 0x56537c995ce0 'y$r_buff1_thd3' '_Bool'
|   |         `-ParenExpr 0x56537c99b6a0 <col:165, col:220> 'int'
|   |           `-ConditionalOperator 0x56537c99b670 <col:166, col:219> 'int'
|   |             |-BinaryOperator 0x56537c99b570 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x56537c99b528 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x56537c99b510 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x56537c99b4d0 <col:166> '_Bool' lvalue Var 0x56537c995ed0 'y$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x56537c99b558 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x56537c99b540 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x56537c99b4f0 <col:184> '_Bool' lvalue Var 0x56537c995b00 'y$r_buff0_thd3' '_Bool'
|   |             |-ImplicitCastExpr 0x56537c99b640 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x56537c99b5c0 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x56537c99b590 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x56537c99b658 <col:212, col:219> 'int' <IntegralCast>
|   |               `-CStyleCastExpr 0x56537c99b618 <col:212, col:219> '_Bool' <IntegralToBoolean>
|   |                 `-IntegerLiteral 0x56537c99b5e8 <col:219> 'int' 0
|   |-BinaryOperator 0x56537c99b860 <line:766:3, col:25> 'int' '='
|   | |-DeclRefExpr 0x56537c99b808 <col:3> 'int' lvalue Var 0x56537c995360 '__unbuffered_p2_EAX' 'int'
|   | `-ImplicitCastExpr 0x56537c99b848 <col:25> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x56537c99b828 <col:25> 'int' lvalue Var 0x56537c9957b0 'y' 'int'
|   |-BinaryOperator 0x56537c99b990 <line:767:3, col:37> 'int' '='
|   | |-DeclRefExpr 0x56537c99b880 <col:3> 'int' lvalue Var 0x56537c9957b0 'y' 'int'
|   | `-ConditionalOperator 0x56537c99b960 <col:7, col:37> 'int'
|   |   |-ImplicitCastExpr 0x56537c99b918 <col:7> 'int' <IntegralCast>
|   |   | `-ImplicitCastExpr 0x56537c99b900 <col:7> '_Bool' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x56537c99b8a0 <col:7> '_Bool' lvalue Var 0x56537c995848 'y$flush_delayed' '_Bool'
|   |   |-ImplicitCastExpr 0x56537c99b930 <col:25> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x56537c99b8c0 <col:25> 'int' lvalue Var 0x56537c9958c8 'y$mem_tmp' 'int'
|   |   `-ImplicitCastExpr 0x56537c99b948 <col:37> 'int' <LValueToRValue>
|   |     `-DeclRefExpr 0x56537c99b8e0 <col:37> 'int' lvalue Var 0x56537c9957b0 'y' 'int'
|   |-BinaryOperator 0x56537c99ba28 <line:768:3, col:28> '_Bool' '='
|   | |-DeclRefExpr 0x56537c99b9b0 <col:3> '_Bool' lvalue Var 0x56537c995848 'y$flush_delayed' '_Bool'
|   | `-CStyleCastExpr 0x56537c99ba00 <col:21, col:28> '_Bool' <IntegralToBoolean>
|   |   `-IntegerLiteral 0x56537c99b9d0 <col:28> 'int' 0
|   |-CallExpr 0x56537c99ba80 <line:769:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x56537c99ba68 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x56537c99ba48 <col:3> 'void ()' Function 0x56537c93bf00 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x56537c99bad8 <line:770:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x56537c99bac0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x56537c99baa0 <col:3> 'void ()' Function 0x56537c93be40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x56537c99bb98 <line:771:3, col:45> '_Bool' '='
|   | |-DeclRefExpr 0x56537c99baf8 <col:3> '_Bool' lvalue Var 0x56537c996040 'weak$$choice0' '_Bool'
|   | `-ImplicitCastExpr 0x56537c99bb80 <col:19, col:45> '_Bool' <PointerToBoolean>
|   |   `-CallExpr 0x56537c99bb60 <col:19, col:45> 'void *'
|   |     `-ImplicitCastExpr 0x56537c99bb38 <col:19> 'void *(*)(void)' <FunctionToPointerDecay>
|   |       `-DeclRefExpr 0x56537c99bb18 <col:19> 'void *(void)' Function 0x56537c93b958 '__VERIFIER_nondet_pointer' 'void *(void)'
|   |-BinaryOperator 0x56537c99bc48 <line:772:3, col:45> '_Bool' '='
|   | |-DeclRefExpr 0x56537c99bbb8 <col:3> '_Bool' lvalue Var 0x56537c9960b8 'weak$$choice2' '_Bool'
|   | `-ImplicitCastExpr 0x56537c99bc30 <col:19, col:45> '_Bool' <PointerToBoolean>
|   |   `-CallExpr 0x56537c99bc10 <col:19, col:45> 'void *'
|   |     `-ImplicitCastExpr 0x56537c99bbf8 <col:19> 'void *(*)(void)' <FunctionToPointerDecay>
|   |       `-DeclRefExpr 0x56537c99bbd8 <col:19> 'void *(void)' Function 0x56537c93b958 '__VERIFIER_nondet_pointer' 'void *(void)'
|   |-BinaryOperator 0x56537c99bcc0 <line:773:3, col:21> '_Bool' '='
|   | |-DeclRefExpr 0x56537c99bc68 <col:3> '_Bool' lvalue Var 0x56537c995848 'y$flush_delayed' '_Bool'
|   | `-ImplicitCastExpr 0x56537c99bca8 <col:21> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x56537c99bc88 <col:21> '_Bool' lvalue Var 0x56537c9960b8 'weak$$choice2' '_Bool'
|   |-BinaryOperator 0x56537c99bd38 <line:774:3, col:15> 'int' '='
|   | |-DeclRefExpr 0x56537c99bce0 <col:3> 'int' lvalue Var 0x56537c9958c8 'y$mem_tmp' 'int'
|   | `-ImplicitCastExpr 0x56537c99bd20 <col:15> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x56537c99bd00 <col:15> 'int' lvalue Var 0x56537c9957b0 'y' 'int'
|   |-BinaryOperator 0x56537c99c170 <line:775:3, col:162> 'int' '='
|   | |-DeclRefExpr 0x56537c99bd58 <col:3> 'int' lvalue Var 0x56537c9957b0 'y' 'int'
|   | `-ConditionalOperator 0x56537c99c140 <col:7, col:162> 'int'
|   |   |-BinaryOperator 0x56537c99bf68 <col:7, col:84> 'int' '||'
|   |   | |-BinaryOperator 0x56537c99be88 <col:7, col:46> 'int' '||'
|   |   | | |-UnaryOperator 0x56537c99bdb0 <col:7, col:8> 'int' prefix '!' cannot overflow
|   |   | | | `-ImplicitCastExpr 0x56537c99bd98 <col:8> '_Bool' <LValueToRValue>
|   |   | | |   `-DeclRefExpr 0x56537c99bd78 <col:8> '_Bool' lvalue Var 0x56537c995ed0 'y$w_buff0_used' '_Bool'
|   |   | | `-BinaryOperator 0x56537c99be68 <col:26, col:46> 'int' '&&'
|   |   | |   |-UnaryOperator 0x56537c99be00 <col:26, col:27> 'int' prefix '!' cannot overflow
|   |   | |   | `-ImplicitCastExpr 0x56537c99bde8 <col:27> '_Bool' <LValueToRValue>
|   |   | |   |   `-DeclRefExpr 0x56537c99bdc8 <col:27> '_Bool' lvalue Var 0x56537c995b00 'y$r_buff0_thd3' '_Bool'
|   |   | |   `-UnaryOperator 0x56537c99be50 <col:45, col:46> 'int' prefix '!' cannot overflow
|   |   | |     `-ImplicitCastExpr 0x56537c99be38 <col:46> '_Bool' <LValueToRValue>
|   |   | |       `-DeclRefExpr 0x56537c99be18 <col:46> '_Bool' lvalue Var 0x56537c995fc8 'y$w_buff1_used' '_Bool'
|   |   | `-BinaryOperator 0x56537c99bf48 <col:64, col:84> 'int' '&&'
|   |   |   |-UnaryOperator 0x56537c99bee0 <col:64, col:65> 'int' prefix '!' cannot overflow
|   |   |   | `-ImplicitCastExpr 0x56537c99bec8 <col:65> '_Bool' <LValueToRValue>
|   |   |   |   `-DeclRefExpr 0x56537c99bea8 <col:65> '_Bool' lvalue Var 0x56537c995b00 'y$r_buff0_thd3' '_Bool'
|   |   |   `-UnaryOperator 0x56537c99bf30 <col:83, col:84> 'int' prefix '!' cannot overflow
|   |   |     `-ImplicitCastExpr 0x56537c99bf18 <col:84> '_Bool' <LValueToRValue>
|   |   |       `-DeclRefExpr 0x56537c99bef8 <col:84> '_Bool' lvalue Var 0x56537c995ce0 'y$r_buff1_thd3' '_Bool'
|   |   |-ImplicitCastExpr 0x56537c99c128 <col:101> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x56537c99bf88 <col:101> 'int' lvalue Var 0x56537c9957b0 'y' 'int'
|   |   `-ParenExpr 0x56537c99c108 <col:105, col:162> 'int'
|   |     `-ConditionalOperator 0x56537c99c0d8 <col:106, col:153> 'int'
|   |       |-BinaryOperator 0x56537c99c048 <col:106, col:124> 'int' '&&'
|   |       | |-ImplicitCastExpr 0x56537c99c000 <col:106> 'int' <IntegralCast>
|   |       | | `-ImplicitCastExpr 0x56537c99bfe8 <col:106> '_Bool' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x56537c99bfa8 <col:106> '_Bool' lvalue Var 0x56537c995ed0 'y$w_buff0_used' '_Bool'
|   |       | `-ImplicitCastExpr 0x56537c99c030 <col:124> 'int' <IntegralCast>
|   |       |   `-ImplicitCastExpr 0x56537c99c018 <col:124> '_Bool' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x56537c99bfc8 <col:124> '_Bool' lvalue Var 0x56537c995b00 'y$r_buff0_thd3' '_Bool'
|   |       |-ImplicitCastExpr 0x56537c99c0a8 <col:141> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x56537c99c068 <col:141> 'int' lvalue Var 0x56537c995e58 'y$w_buff0' 'int'
|   |       `-ImplicitCastExpr 0x56537c99c0c0 <col:153> 'int' <LValueToRValue>
|   |         `-DeclRefExpr 0x56537c99c088 <col:153> 'int' lvalue Var 0x56537c995f50 'y$w_buff1' 'int'
|   |-BinaryOperator 0x56537c99c680 <line:776:3, col:208> 'int' '='
|   | |-DeclRefExpr 0x56537c99c190 <col:3> 'int' lvalue Var 0x56537c995e58 'y$w_buff0' 'int'
|   | `-ConditionalOperator 0x56537c99c650 <col:15, col:208> 'int'
|   |   |-ImplicitCastExpr 0x56537c99c620 <col:15> 'int' <IntegralCast>
|   |   | `-ImplicitCastExpr 0x56537c99c608 <col:15> '_Bool' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x56537c99c1b0 <col:15> '_Bool' lvalue Var 0x56537c9960b8 'weak$$choice2' '_Bool'
|   |   |-ImplicitCastExpr 0x56537c99c638 <col:31> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x56537c99c1d0 <col:31> 'int' lvalue Var 0x56537c995e58 'y$w_buff0' 'int'
|   |   `-ParenExpr 0x56537c99c5e8 <col:43, col:208> 'int'
|   |     `-ConditionalOperator 0x56537c99c5b8 <col:44, col:207> 'int'
|   |       |-BinaryOperator 0x56537c99c3e0 <col:44, col:121> 'int' '||'
|   |       | |-BinaryOperator 0x56537c99c300 <col:44, col:83> 'int' '||'
|   |       | | |-UnaryOperator 0x56537c99c228 <col:44, col:45> 'int' prefix '!' cannot overflow
|   |       | | | `-ImplicitCastExpr 0x56537c99c210 <col:45> '_Bool' <LValueToRValue>
|   |       | | |   `-DeclRefExpr 0x56537c99c1f0 <col:45> '_Bool' lvalue Var 0x56537c995ed0 'y$w_buff0_used' '_Bool'
|   |       | | `-BinaryOperator 0x56537c99c2e0 <col:63, col:83> 'int' '&&'
|   |       | |   |-UnaryOperator 0x56537c99c278 <col:63, col:64> 'int' prefix '!' cannot overflow
|   |       | |   | `-ImplicitCastExpr 0x56537c99c260 <col:64> '_Bool' <LValueToRValue>
|   |       | |   |   `-DeclRefExpr 0x56537c99c240 <col:64> '_Bool' lvalue Var 0x56537c995b00 'y$r_buff0_thd3' '_Bool'
|   |       | |   `-UnaryOperator 0x56537c99c2c8 <col:82, col:83> 'int' prefix '!' cannot overflow
|   |       | |     `-ImplicitCastExpr 0x56537c99c2b0 <col:83> '_Bool' <LValueToRValue>
|   |       | |       `-DeclRefExpr 0x56537c99c290 <col:83> '_Bool' lvalue Var 0x56537c995fc8 'y$w_buff1_used' '_Bool'
|   |       | `-BinaryOperator 0x56537c99c3c0 <col:101, col:121> 'int' '&&'
|   |       |   |-UnaryOperator 0x56537c99c358 <col:101, col:102> 'int' prefix '!' cannot overflow
|   |       |   | `-ImplicitCastExpr 0x56537c99c340 <col:102> '_Bool' <LValueToRValue>
|   |       |   |   `-DeclRefExpr 0x56537c99c320 <col:102> '_Bool' lvalue Var 0x56537c995b00 'y$r_buff0_thd3' '_Bool'
|   |       |   `-UnaryOperator 0x56537c99c3a8 <col:120, col:121> 'int' prefix '!' cannot overflow
|   |       |     `-ImplicitCastExpr 0x56537c99c390 <col:121> '_Bool' <LValueToRValue>
|   |       |       `-DeclRefExpr 0x56537c99c370 <col:121> '_Bool' lvalue Var 0x56537c995ce0 'y$r_buff1_thd3' '_Bool'
|   |       |-ImplicitCastExpr 0x56537c99c5a0 <col:138> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x56537c99c400 <col:138> 'int' lvalue Var 0x56537c995e58 'y$w_buff0' 'int'
|   |       `-ParenExpr 0x56537c99c580 <col:150, col:207> 'int'
|   |         `-ConditionalOperator 0x56537c99c550 <col:151, col:198> 'int'
|   |           |-BinaryOperator 0x56537c99c4c0 <col:151, col:169> 'int' '&&'
|   |           | |-ImplicitCastExpr 0x56537c99c478 <col:151> 'int' <IntegralCast>
|   |           | | `-ImplicitCastExpr 0x56537c99c460 <col:151> '_Bool' <LValueToRValue>
|   |           | |   `-DeclRefExpr 0x56537c99c420 <col:151> '_Bool' lvalue Var 0x56537c995ed0 'y$w_buff0_used' '_Bool'
|   |           | `-ImplicitCastExpr 0x56537c99c4a8 <col:169> 'int' <IntegralCast>
|   |           |   `-ImplicitCastExpr 0x56537c99c490 <col:169> '_Bool' <LValueToRValue>
|   |           |     `-DeclRefExpr 0x56537c99c440 <col:169> '_Bool' lvalue Var 0x56537c995b00 'y$r_buff0_thd3' '_Bool'
|   |           |-ImplicitCastExpr 0x56537c99c520 <col:186> 'int' <LValueToRValue>
|   |           | `-DeclRefExpr 0x56537c99c4e0 <col:186> 'int' lvalue Var 0x56537c995e58 'y$w_buff0' 'int'
|   |           `-ImplicitCastExpr 0x56537c99c538 <col:198> 'int' <LValueToRValue>
|   |             `-DeclRefExpr 0x56537c99c500 <col:198> 'int' lvalue Var 0x56537c995e58 'y$w_buff0' 'int'
|   |-BinaryOperator 0x56537c99cba0 <line:777:3, col:208> 'int' '='
|   | |-DeclRefExpr 0x56537c99c6a0 <col:3> 'int' lvalue Var 0x56537c995f50 'y$w_buff1' 'int'
|   | `-ConditionalOperator 0x56537c99cb70 <col:15, col:208> 'int'
|   |   |-ImplicitCastExpr 0x56537c99cb30 <col:15> 'int' <IntegralCast>
|   |   | `-ImplicitCastExpr 0x56537c99cb18 <col:15> '_Bool' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x56537c99c6c0 <col:15> '_Bool' lvalue Var 0x56537c9960b8 'weak$$choice2' '_Bool'
|   |   |-ImplicitCastExpr 0x56537c99cb48 <col:31> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x56537c99c6e0 <col:31> 'int' lvalue Var 0x56537c995f50 'y$w_buff1' 'int'
|   |   `-ParenExpr 0x56537c99caf8 <col:43, col:208> 'int'
|   |     `-ConditionalOperator 0x56537c99cac8 <col:44, col:207> 'int'
|   |       |-BinaryOperator 0x56537c99c8f0 <col:44, col:121> 'int' '||'
|   |       | |-BinaryOperator 0x56537c99c810 <col:44, col:83> 'int' '||'
|   |       | | |-UnaryOperator 0x56537c99c738 <col:44, col:45> 'int' prefix '!' cannot overflow
|   |       | | | `-ImplicitCastExpr 0x56537c99c720 <col:45> '_Bool' <LValueToRValue>
|   |       | | |   `-DeclRefExpr 0x56537c99c700 <col:45> '_Bool' lvalue Var 0x56537c995ed0 'y$w_buff0_used' '_Bool'
|   |       | | `-BinaryOperator 0x56537c99c7f0 <col:63, col:83> 'int' '&&'
|   |       | |   |-UnaryOperator 0x56537c99c788 <col:63, col:64> 'int' prefix '!' cannot overflow
|   |       | |   | `-ImplicitCastExpr 0x56537c99c770 <col:64> '_Bool' <LValueToRValue>
|   |       | |   |   `-DeclRefExpr 0x56537c99c750 <col:64> '_Bool' lvalue Var 0x56537c995b00 'y$r_buff0_thd3' '_Bool'
|   |       | |   `-UnaryOperator 0x56537c99c7d8 <col:82, col:83> 'int' prefix '!' cannot overflow
|   |       | |     `-ImplicitCastExpr 0x56537c99c7c0 <col:83> '_Bool' <LValueToRValue>
|   |       | |       `-DeclRefExpr 0x56537c99c7a0 <col:83> '_Bool' lvalue Var 0x56537c995fc8 'y$w_buff1_used' '_Bool'
|   |       | `-BinaryOperator 0x56537c99c8d0 <col:101, col:121> 'int' '&&'
|   |       |   |-UnaryOperator 0x56537c99c868 <col:101, col:102> 'int' prefix '!' cannot overflow
|   |       |   | `-ImplicitCastExpr 0x56537c99c850 <col:102> '_Bool' <LValueToRValue>
|   |       |   |   `-DeclRefExpr 0x56537c99c830 <col:102> '_Bool' lvalue Var 0x56537c995b00 'y$r_buff0_thd3' '_Bool'
|   |       |   `-UnaryOperator 0x56537c99c8b8 <col:120, col:121> 'int' prefix '!' cannot overflow
|   |       |     `-ImplicitCastExpr 0x56537c99c8a0 <col:121> '_Bool' <LValueToRValue>
|   |       |       `-DeclRefExpr 0x56537c99c880 <col:121> '_Bool' lvalue Var 0x56537c995ce0 'y$r_buff1_thd3' '_Bool'
|   |       |-ImplicitCastExpr 0x56537c99cab0 <col:138> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x56537c99c910 <col:138> 'int' lvalue Var 0x56537c995f50 'y$w_buff1' 'int'
|   |       `-ParenExpr 0x56537c99ca90 <col:150, col:207> 'int'
|   |         `-ConditionalOperator 0x56537c99ca60 <col:151, col:198> 'int'
|   |           |-BinaryOperator 0x56537c99c9d0 <col:151, col:169> 'int' '&&'
|   |           | |-ImplicitCastExpr 0x56537c99c988 <col:151> 'int' <IntegralCast>
|   |           | | `-ImplicitCastExpr 0x56537c99c970 <col:151> '_Bool' <LValueToRValue>
|   |           | |   `-DeclRefExpr 0x56537c99c930 <col:151> '_Bool' lvalue Var 0x56537c995ed0 'y$w_buff0_used' '_Bool'
|   |           | `-ImplicitCastExpr 0x56537c99c9b8 <col:169> 'int' <IntegralCast>
|   |           |   `-ImplicitCastExpr 0x56537c99c9a0 <col:169> '_Bool' <LValueToRValue>
|   |           |     `-DeclRefExpr 0x56537c99c950 <col:169> '_Bool' lvalue Var 0x56537c995b00 'y$r_buff0_thd3' '_Bool'
|   |           |-ImplicitCastExpr 0x56537c99ca30 <col:186> 'int' <LValueToRValue>
|   |           | `-DeclRefExpr 0x56537c99c9f0 <col:186> 'int' lvalue Var 0x56537c995f50 'y$w_buff1' 'int'
|   |           `-ImplicitCastExpr 0x56537c99ca48 <col:198> 'int' <LValueToRValue>
|   |             `-DeclRefExpr 0x56537c99ca10 <col:198> 'int' lvalue Var 0x56537c995f50 'y$w_buff1' 'int'
|   |-BinaryOperator 0x56537c99d148 <line:778:3, col:227> '_Bool' '='
|   | |-DeclRefExpr 0x56537c99cbc0 <col:3> '_Bool' lvalue Var 0x56537c995ed0 'y$w_buff0_used' '_Bool'
|   | `-ImplicitCastExpr 0x56537c99d130 <col:20, col:227> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x56537c99d100 <col:20, col:227> 'int'
|   |     |-ImplicitCastExpr 0x56537c99d0b8 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x56537c99d0a0 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x56537c99cbe0 <col:20> '_Bool' lvalue Var 0x56537c9960b8 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x56537c99d0e8 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x56537c99d0d0 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x56537c99cc00 <col:36> '_Bool' lvalue Var 0x56537c995ed0 'y$w_buff0_used' '_Bool'
|   |     `-ParenExpr 0x56537c99d080 <col:53, col:227> 'int'
|   |       `-ConditionalOperator 0x56537c99d050 <col:54, col:226> 'int'
|   |         |-BinaryOperator 0x56537c99ce10 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x56537c99cd30 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x56537c99cc58 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x56537c99cc40 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x56537c99cc20 <col:55> '_Bool' lvalue Var 0x56537c995ed0 'y$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x56537c99cd10 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x56537c99cca8 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x56537c99cc90 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x56537c99cc70 <col:74> '_Bool' lvalue Var 0x56537c995b00 'y$r_buff0_thd3' '_Bool'
|   |         | |   `-UnaryOperator 0x56537c99ccf8 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x56537c99cce0 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x56537c99ccc0 <col:93> '_Bool' lvalue Var 0x56537c995fc8 'y$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x56537c99cdf0 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x56537c99cd88 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x56537c99cd70 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x56537c99cd50 <col:112> '_Bool' lvalue Var 0x56537c995b00 'y$r_buff0_thd3' '_Bool'
|   |         |   `-UnaryOperator 0x56537c99cdd8 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x56537c99cdc0 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x56537c99cda0 <col:131> '_Bool' lvalue Var 0x56537c995ce0 'y$r_buff1_thd3' '_Bool'
|   |         |-ImplicitCastExpr 0x56537c99d038 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x56537c99d020 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x56537c99ce30 <col:148> '_Bool' lvalue Var 0x56537c995ed0 'y$w_buff0_used' '_Bool'
|   |         `-ParenExpr 0x56537c99d000 <col:165, col:226> 'int'
|   |           `-ConditionalOperator 0x56537c99cfd0 <col:166, col:212> 'int'
|   |             |-BinaryOperator 0x56537c99cef0 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x56537c99cea8 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x56537c99ce90 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x56537c99ce50 <col:166> '_Bool' lvalue Var 0x56537c995ed0 'y$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x56537c99ced8 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x56537c99cec0 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x56537c99ce70 <col:184> '_Bool' lvalue Var 0x56537c995b00 'y$r_buff0_thd3' '_Bool'
|   |             |-ImplicitCastExpr 0x56537c99cf88 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x56537c99cf40 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x56537c99cf10 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x56537c99cfb8 <col:212> 'int' <IntegralCast>
|   |               `-ImplicitCastExpr 0x56537c99cfa0 <col:212> '_Bool' <LValueToRValue>
|   |                 `-DeclRefExpr 0x56537c99cf68 <col:212> '_Bool' lvalue Var 0x56537c995ed0 'y$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x56537c99d710 <line:779:3, col:221> '_Bool' '='
|   | |-DeclRefExpr 0x56537c99d168 <col:3> '_Bool' lvalue Var 0x56537c995fc8 'y$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x56537c99d6f8 <col:20, col:221> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x56537c99d6c8 <col:20, col:221> 'int'
|   |     |-ImplicitCastExpr 0x56537c99d680 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x56537c99d668 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x56537c99d188 <col:20> '_Bool' lvalue Var 0x56537c9960b8 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x56537c99d6b0 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x56537c99d698 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x56537c99d1a8 <col:36> '_Bool' lvalue Var 0x56537c995fc8 'y$w_buff1_used' '_Bool'
|   |     `-ParenExpr 0x56537c99d648 <col:53, col:221> 'int'
|   |       `-ConditionalOperator 0x56537c99d618 <col:54, col:220> 'int'
|   |         |-BinaryOperator 0x56537c99d3b8 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x56537c99d2d8 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x56537c99d200 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x56537c99d1e8 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x56537c99d1c8 <col:55> '_Bool' lvalue Var 0x56537c995ed0 'y$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x56537c99d2b8 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x56537c99d250 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x56537c99d238 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x56537c99d218 <col:74> '_Bool' lvalue Var 0x56537c995b00 'y$r_buff0_thd3' '_Bool'
|   |         | |   `-UnaryOperator 0x56537c99d2a0 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x56537c99d288 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x56537c99d268 <col:93> '_Bool' lvalue Var 0x56537c995fc8 'y$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x56537c99d398 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x56537c99d330 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x56537c99d318 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x56537c99d2f8 <col:112> '_Bool' lvalue Var 0x56537c995b00 'y$r_buff0_thd3' '_Bool'
|   |         |   `-UnaryOperator 0x56537c99d380 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x56537c99d368 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x56537c99d348 <col:131> '_Bool' lvalue Var 0x56537c995ce0 'y$r_buff1_thd3' '_Bool'
|   |         |-ImplicitCastExpr 0x56537c99d600 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x56537c99d5e8 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x56537c99d3d8 <col:148> '_Bool' lvalue Var 0x56537c995fc8 'y$w_buff1_used' '_Bool'
|   |         `-ParenExpr 0x56537c99d5c8 <col:165, col:220> 'int'
|   |           `-ConditionalOperator 0x56537c99d598 <col:166, col:219> 'int'
|   |             |-BinaryOperator 0x56537c99d498 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x56537c99d450 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x56537c99d438 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x56537c99d3f8 <col:166> '_Bool' lvalue Var 0x56537c995ed0 'y$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x56537c99d480 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x56537c99d468 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x56537c99d418 <col:184> '_Bool' lvalue Var 0x56537c995b00 'y$r_buff0_thd3' '_Bool'
|   |             |-ImplicitCastExpr 0x56537c99d568 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x56537c99d4e8 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x56537c99d4b8 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x56537c99d580 <col:212, col:219> 'int' <IntegralCast>
|   |               `-CStyleCastExpr 0x56537c99d540 <col:212, col:219> '_Bool' <IntegralToBoolean>
|   |                 `-IntegerLiteral 0x56537c99d510 <col:219> 'int' 0
|   |-BinaryOperator 0x56537c99dcc8 <line:780:3, col:227> '_Bool' '='
|   | |-DeclRefExpr 0x56537c99d730 <col:3> '_Bool' lvalue Var 0x56537c995b00 'y$r_buff0_thd3' '_Bool'
|   | `-ImplicitCastExpr 0x56537c99dcb0 <col:20, col:227> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x56537c99dc80 <col:20, col:227> 'int'
|   |     |-ImplicitCastExpr 0x56537c99dc38 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x56537c99dc20 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x56537c99d750 <col:20> '_Bool' lvalue Var 0x56537c9960b8 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x56537c99dc68 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x56537c99dc50 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x56537c99d770 <col:36> '_Bool' lvalue Var 0x56537c995b00 'y$r_buff0_thd3' '_Bool'
|   |     `-ParenExpr 0x56537c99dc00 <col:53, col:227> 'int'
|   |       `-ConditionalOperator 0x56537c99dbd0 <col:54, col:226> 'int'
|   |         |-BinaryOperator 0x56537c99d980 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x56537c99d8a0 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x56537c99d7c8 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x56537c99d7b0 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x56537c99d790 <col:55> '_Bool' lvalue Var 0x56537c995ed0 'y$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x56537c99d880 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x56537c99d818 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x56537c99d800 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x56537c99d7e0 <col:74> '_Bool' lvalue Var 0x56537c995b00 'y$r_buff0_thd3' '_Bool'
|   |         | |   `-UnaryOperator 0x56537c99d868 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x56537c99d850 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x56537c99d830 <col:93> '_Bool' lvalue Var 0x56537c995fc8 'y$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x56537c99d960 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x56537c99d8f8 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x56537c99d8e0 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x56537c99d8c0 <col:112> '_Bool' lvalue Var 0x56537c995b00 'y$r_buff0_thd3' '_Bool'
|   |         |   `-UnaryOperator 0x56537c99d948 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x56537c99d930 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x56537c99d910 <col:131> '_Bool' lvalue Var 0x56537c995ce0 'y$r_buff1_thd3' '_Bool'
|   |         |-ImplicitCastExpr 0x56537c99dbb8 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x56537c99dba0 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x56537c99d9a0 <col:148> '_Bool' lvalue Var 0x56537c995b00 'y$r_buff0_thd3' '_Bool'
|   |         `-ParenExpr 0x56537c99db80 <col:165, col:226> 'int'
|   |           `-ConditionalOperator 0x56537c99db40 <col:166, col:212> 'int'
|   |             |-BinaryOperator 0x56537c99da60 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x56537c99da18 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x56537c99da00 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x56537c99d9c0 <col:166> '_Bool' lvalue Var 0x56537c995ed0 'y$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x56537c99da48 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x56537c99da30 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x56537c99d9e0 <col:184> '_Bool' lvalue Var 0x56537c995b00 'y$r_buff0_thd3' '_Bool'
|   |             |-ImplicitCastExpr 0x56537c99daf8 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x56537c99dab0 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x56537c99da80 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x56537c99db28 <col:212> 'int' <IntegralCast>
|   |               `-ImplicitCastExpr 0x56537c99db10 <col:212> '_Bool' <LValueToRValue>
|   |                 `-DeclRefExpr 0x56537c99dad8 <col:212> '_Bool' lvalue Var 0x56537c995b00 'y$r_buff0_thd3' '_Bool'
|   |-BinaryOperator 0x56537c99e290 <line:781:3, col:221> '_Bool' '='
|   | |-DeclRefExpr 0x56537c99dce8 <col:3> '_Bool' lvalue Var 0x56537c995ce0 'y$r_buff1_thd3' '_Bool'
|   | `-ImplicitCastExpr 0x56537c99e278 <col:20, col:221> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x56537c99e248 <col:20, col:221> 'int'
|   |     |-ImplicitCastExpr 0x56537c99e200 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x56537c99e1e8 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x56537c99dd08 <col:20> '_Bool' lvalue Var 0x56537c9960b8 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x56537c99e230 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x56537c99e218 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x56537c99dd28 <col:36> '_Bool' lvalue Var 0x56537c995ce0 'y$r_buff1_thd3' '_Bool'
|   |     `-ParenExpr 0x56537c99e1c8 <col:53, col:221> 'int'
|   |       `-ConditionalOperator 0x56537c99e198 <col:54, col:220> 'int'
|   |         |-BinaryOperator 0x56537c99df38 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x56537c99de58 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x56537c99dd80 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x56537c99dd68 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x56537c99dd48 <col:55> '_Bool' lvalue Var 0x56537c995ed0 'y$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x56537c99de38 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x56537c99ddd0 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x56537c99ddb8 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x56537c99dd98 <col:74> '_Bool' lvalue Var 0x56537c995b00 'y$r_buff0_thd3' '_Bool'
|   |         | |   `-UnaryOperator 0x56537c99de20 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x56537c99de08 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x56537c99dde8 <col:93> '_Bool' lvalue Var 0x56537c995fc8 'y$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x56537c99df18 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x56537c99deb0 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x56537c99de98 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x56537c99de78 <col:112> '_Bool' lvalue Var 0x56537c995b00 'y$r_buff0_thd3' '_Bool'
|   |         |   `-UnaryOperator 0x56537c99df00 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x56537c99dee8 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x56537c99dec8 <col:131> '_Bool' lvalue Var 0x56537c995ce0 'y$r_buff1_thd3' '_Bool'
|   |         |-ImplicitCastExpr 0x56537c99e180 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x56537c99e168 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x56537c99df58 <col:148> '_Bool' lvalue Var 0x56537c995ce0 'y$r_buff1_thd3' '_Bool'
|   |         `-ParenExpr 0x56537c99e148 <col:165, col:220> 'int'
|   |           `-ConditionalOperator 0x56537c99e118 <col:166, col:219> 'int'
|   |             |-BinaryOperator 0x56537c99e018 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x56537c99dfd0 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x56537c99dfb8 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x56537c99df78 <col:166> '_Bool' lvalue Var 0x56537c995ed0 'y$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x56537c99e000 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x56537c99dfe8 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x56537c99df98 <col:184> '_Bool' lvalue Var 0x56537c995b00 'y$r_buff0_thd3' '_Bool'
|   |             |-ImplicitCastExpr 0x56537c99e0e8 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x56537c99e068 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x56537c99e038 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x56537c99e100 <col:212, col:219> 'int' <IntegralCast>
|   |               `-CStyleCastExpr 0x56537c99e0c0 <col:212, col:219> '_Bool' <IntegralToBoolean>
|   |                 `-IntegerLiteral 0x56537c99e090 <col:219> 'int' 0
|   |-BinaryOperator 0x56537c99e308 <line:782:3, col:25> 'int' '='
|   | |-DeclRefExpr 0x56537c99e2b0 <col:3> 'int' lvalue Var 0x56537c995480 '__unbuffered_p2_EBX' 'int'
|   | `-ImplicitCastExpr 0x56537c99e2f0 <col:25> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x56537c99e2d0 <col:25> 'int' lvalue Var 0x56537c9957b0 'y' 'int'
|   |-BinaryOperator 0x56537c99e438 <line:783:3, col:37> 'int' '='
|   | |-DeclRefExpr 0x56537c99e328 <col:3> 'int' lvalue Var 0x56537c9957b0 'y' 'int'
|   | `-ConditionalOperator 0x56537c99e408 <col:7, col:37> 'int'
|   |   |-ImplicitCastExpr 0x56537c99e3c0 <col:7> 'int' <IntegralCast>
|   |   | `-ImplicitCastExpr 0x56537c99e3a8 <col:7> '_Bool' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x56537c99e348 <col:7> '_Bool' lvalue Var 0x56537c995848 'y$flush_delayed' '_Bool'
|   |   |-ImplicitCastExpr 0x56537c99e3d8 <col:25> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x56537c99e368 <col:25> 'int' lvalue Var 0x56537c9958c8 'y$mem_tmp' 'int'
|   |   `-ImplicitCastExpr 0x56537c99e3f0 <col:37> 'int' <LValueToRValue>
|   |     `-DeclRefExpr 0x56537c99e388 <col:37> 'int' lvalue Var 0x56537c9957b0 'y' 'int'
|   |-BinaryOperator 0x56537c99e4d0 <line:784:3, col:28> '_Bool' '='
|   | |-DeclRefExpr 0x56537c99e458 <col:3> '_Bool' lvalue Var 0x56537c995848 'y$flush_delayed' '_Bool'
|   | `-CStyleCastExpr 0x56537c99e4a8 <col:21, col:28> '_Bool' <IntegralToBoolean>
|   |   `-IntegerLiteral 0x56537c99e478 <col:28> 'int' 0
|   |-CallExpr 0x56537c99e528 <line:785:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x56537c99e510 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x56537c99e4f0 <col:3> 'void ()' Function 0x56537c93bf00 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x56537c99e580 <line:786:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x56537c99e568 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x56537c99e548 <col:3> 'void ()' Function 0x56537c93be40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x56537c99e868 <line:787:3, col:103> 'int' '='
|   | |-DeclRefExpr 0x56537c99e5a0 <col:3> 'int' lvalue Var 0x56537c9957b0 'y' 'int'
|   | `-ConditionalOperator 0x56537c99e838 <col:7, col:103> 'int'
|   |   |-BinaryOperator 0x56537c99e660 <col:7, col:25> 'int' '&&'
|   |   | |-ImplicitCastExpr 0x56537c99e618 <col:7> 'int' <IntegralCast>
|   |   | | `-ImplicitCastExpr 0x56537c99e600 <col:7> '_Bool' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x56537c99e5c0 <col:7> '_Bool' lvalue Var 0x56537c995ed0 'y$w_buff0_used' '_Bool'
|   |   | `-ImplicitCastExpr 0x56537c99e648 <col:25> 'int' <IntegralCast>
|   |   |   `-ImplicitCastExpr 0x56537c99e630 <col:25> '_Bool' <LValueToRValue>
|   |   |     `-DeclRefExpr 0x56537c99e5e0 <col:25> '_Bool' lvalue Var 0x56537c995b00 'y$r_buff0_thd3' '_Bool'
|   |   |-ImplicitCastExpr 0x56537c99e820 <col:42> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x56537c99e680 <col:42> 'int' lvalue Var 0x56537c995e58 'y$w_buff0' 'int'
|   |   `-ParenExpr 0x56537c99e800 <col:54, col:103> 'int'
|   |     `-ConditionalOperator 0x56537c99e7d0 <col:55, col:102> 'int'
|   |       |-BinaryOperator 0x56537c99e740 <col:55, col:73> 'int' '&&'
|   |       | |-ImplicitCastExpr 0x56537c99e6f8 <col:55> 'int' <IntegralCast>
|   |       | | `-ImplicitCastExpr 0x56537c99e6e0 <col:55> '_Bool' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x56537c99e6a0 <col:55> '_Bool' lvalue Var 0x56537c995fc8 'y$w_buff1_used' '_Bool'
|   |       | `-ImplicitCastExpr 0x56537c99e728 <col:73> 'int' <IntegralCast>
|   |       |   `-ImplicitCastExpr 0x56537c99e710 <col:73> '_Bool' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x56537c99e6c0 <col:73> '_Bool' lvalue Var 0x56537c995ce0 'y$r_buff1_thd3' '_Bool'
|   |       |-ImplicitCastExpr 0x56537c99e7a0 <col:90> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x56537c99e760 <col:90> 'int' lvalue Var 0x56537c995f50 'y$w_buff1' 'int'
|   |       `-ImplicitCastExpr 0x56537c99e7b8 <col:102> 'int' <LValueToRValue>
|   |         `-DeclRefExpr 0x56537c99e780 <col:102> 'int' lvalue Var 0x56537c9957b0 'y' 'int'
|   |-BinaryOperator 0x56537c99ea70 <line:788:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x56537c99e888 <col:3> '_Bool' lvalue Var 0x56537c995ed0 'y$w_buff0_used' '_Bool'
|   | `-ImplicitCastExpr 0x56537c99ea58 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x56537c99ea28 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x56537c99e948 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x56537c99e900 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x56537c99e8e8 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x56537c99e8a8 <col:20> '_Bool' lvalue Var 0x56537c995ed0 'y$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x56537c99e930 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x56537c99e918 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x56537c99e8c8 <col:38> '_Bool' lvalue Var 0x56537c995b00 'y$r_buff0_thd3' '_Bool'
|   |     |-ImplicitCastExpr 0x56537c99e9e0 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x56537c99e998 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x56537c99e968 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x56537c99ea10 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x56537c99e9f8 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x56537c99e9c0 <col:66> '_Bool' lvalue Var 0x56537c995ed0 'y$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x56537c99ed78 <line:789:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x56537c99ea90 <col:3> '_Bool' lvalue Var 0x56537c995fc8 'y$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x56537c99ed60 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x56537c99ed30 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x56537c99ec50 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x56537c99eb50 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x56537c99eb08 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x56537c99eaf0 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x56537c99eab0 <col:20> '_Bool' lvalue Var 0x56537c995ed0 'y$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x56537c99eb38 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x56537c99eb20 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x56537c99ead0 <col:38> '_Bool' lvalue Var 0x56537c995b00 'y$r_buff0_thd3' '_Bool'
|   |     | `-BinaryOperator 0x56537c99ec30 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x56537c99ebe8 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x56537c99ebd0 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x56537c99eb90 <col:56> '_Bool' lvalue Var 0x56537c995fc8 'y$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x56537c99ec18 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x56537c99ec00 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x56537c99ebb0 <col:74> '_Bool' lvalue Var 0x56537c995ce0 'y$r_buff1_thd3' '_Bool'
|   |     |-ImplicitCastExpr 0x56537c99ece8 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x56537c99eca0 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x56537c99ec70 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x56537c99ed18 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x56537c99ed00 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x56537c99ecc8 <col:102> '_Bool' lvalue Var 0x56537c995fc8 'y$w_buff1_used' '_Bool'
|   |-BinaryOperator 0x56537c99ef80 <line:790:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x56537c99ed98 <col:3> '_Bool' lvalue Var 0x56537c995b00 'y$r_buff0_thd3' '_Bool'
|   | `-ImplicitCastExpr 0x56537c99ef68 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x56537c99ef38 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x56537c99ee58 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x56537c99ee10 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x56537c99edf8 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x56537c99edb8 <col:20> '_Bool' lvalue Var 0x56537c995ed0 'y$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x56537c99ee40 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x56537c99ee28 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x56537c99edd8 <col:38> '_Bool' lvalue Var 0x56537c995b00 'y$r_buff0_thd3' '_Bool'
|   |     |-ImplicitCastExpr 0x56537c99eef0 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x56537c99eea8 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x56537c99ee78 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x56537c99ef20 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x56537c99ef08 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x56537c99eed0 <col:66> '_Bool' lvalue Var 0x56537c995b00 'y$r_buff0_thd3' '_Bool'
|   |-BinaryOperator 0x56537c99f268 <line:791:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x56537c99efa0 <col:3> '_Bool' lvalue Var 0x56537c995ce0 'y$r_buff1_thd3' '_Bool'
|   | `-ImplicitCastExpr 0x56537c99f250 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x56537c99f220 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x56537c99f140 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x56537c99f060 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x56537c99f018 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x56537c99f000 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x56537c99efc0 <col:20> '_Bool' lvalue Var 0x56537c995ed0 'y$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x56537c99f048 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x56537c99f030 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x56537c99efe0 <col:38> '_Bool' lvalue Var 0x56537c995b00 'y$r_buff0_thd3' '_Bool'
|   |     | `-BinaryOperator 0x56537c99f120 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x56537c99f0d8 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x56537c99f0c0 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x56537c99f080 <col:56> '_Bool' lvalue Var 0x56537c995fc8 'y$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x56537c99f108 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x56537c99f0f0 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x56537c99f0a0 <col:74> '_Bool' lvalue Var 0x56537c995ce0 'y$r_buff1_thd3' '_Bool'
|   |     |-ImplicitCastExpr 0x56537c99f1d8 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x56537c99f190 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x56537c99f160 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x56537c99f208 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x56537c99f1f0 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x56537c99f1b8 <col:102> '_Bool' lvalue Var 0x56537c995ce0 'y$r_buff1_thd3' '_Bool'
|   |-CallExpr 0x56537c99f2c0 <line:792:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x56537c99f2a8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x56537c99f288 <col:3> 'void ()' Function 0x56537c93bf00 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x56537c99f318 <line:793:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x56537c99f300 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x56537c99f2e0 <col:3> 'void ()' Function 0x56537c93be40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x56537c99f3d0 <line:794:3, col:41> 'int' '='
|   | |-DeclRefExpr 0x56537c99f338 <col:3> 'int' lvalue Var 0x56537c995120 '__unbuffered_cnt' 'int'
|   | `-BinaryOperator 0x56537c99f3b0 <col:22, col:41> 'int' '+'
|   |   |-ImplicitCastExpr 0x56537c99f398 <col:22> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x56537c99f358 <col:22> 'int' lvalue Var 0x56537c995120 '__unbuffered_cnt' 'int'
|   |   `-IntegerLiteral 0x56537c99f378 <col:41> 'int' 1
|   |-CallExpr 0x56537c99f428 <line:795:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x56537c99f410 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x56537c99f3f0 <col:3> 'void ()' Function 0x56537c93bf00 '__VERIFIER_atomic_end' 'void ()'
|   `-ReturnStmt 0x56537c99f4a0 <line:796:3, col:36>
|     `-CallExpr 0x56537c99f480 <col:10, col:36> 'void *'
|       `-ImplicitCastExpr 0x56537c99f468 <col:10> 'void *(*)(void)' <FunctionToPointerDecay>
|         `-DeclRefExpr 0x56537c99f448 <col:10> 'void *(void)' Function 0x56537c93b958 '__VERIFIER_nondet_pointer' 'void *(void)'
|-FunctionDecl 0x56537c99f638 prev 0x56537c994e68 <line:798:1, line:800:1> line:798:6 fence 'void ()'
| `-CompoundStmt 0x56537c99f6d8 <line:799:1, line:800:1>
|-FunctionDecl 0x56537c99f708 prev 0x56537c994f28 <line:801:1, line:803:1> line:801:6 isync 'void ()'
| `-CompoundStmt 0x56537c99f7a8 <line:802:1, line:803:1>
|-FunctionDecl 0x56537c99f7d8 prev 0x56537c994fe8 <line:804:1, line:806:1> line:804:6 lwfence 'void ()'
| `-CompoundStmt 0x56537c99f878 <line:805:1, line:806:1>
`-FunctionDecl 0x56537c99f8e8 <line:807:1, line:844:1> line:807:5 main 'int ()'
  `-CompoundStmt 0x56537c9a3f50 <line:808:1, line:844:1>
    |-DeclStmt 0x56537c99fa00 <line:809:3, col:18>
    | `-VarDecl 0x56537c99f998 <col:3, col:13> col:13 used t1866 'pthread_t':'unsigned long'
    |-CallExpr 0x56537c99fc18 <line:810:3, col:54> 'int'
    | |-ImplicitCastExpr 0x56537c99fc00 <col:3> 'int (*)(pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x56537c99fa18 <col:3> 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' Function 0x56537c97c488 'pthread_create' 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)'
    | |-UnaryOperator 0x56537c99fa58 <col:18, col:19> 'pthread_t *' prefix '&' cannot overflow
    | | `-DeclRefExpr 0x56537c99fa38 <col:19> 'pthread_t':'unsigned long' lvalue Var 0x56537c99f998 't1866' 'pthread_t':'unsigned long'
    | |-ImplicitCastExpr 0x56537c99fc58 <col:26, col:36> 'const pthread_attr_t *' <NullToPointer>
    | | `-ParenExpr 0x56537c99fad0 <col:26, col:36> 'void *'
    | |   `-CStyleCastExpr 0x56537c99faa8 <col:27, col:35> 'void *' <NullToPointer>
    | |     `-IntegerLiteral 0x56537c99fa70 <col:35> 'int' 0
    | |-ImplicitCastExpr 0x56537c99fc70 <col:39> 'void *(*)(void *)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x56537c99faf0 <col:39> 'void *(void *)' Function 0x56537c9961d0 'P0' 'void *(void *)'
    | `-ParenExpr 0x56537c99fb70 <col:43, col:53> 'void *'
    |   `-CStyleCastExpr 0x56537c99fb48 <col:44, col:52> 'void *' <NullToPointer>
    |     `-IntegerLiteral 0x56537c99fb10 <col:52> 'int' 0
    |-DeclStmt 0x56537c99fd00 <line:811:3, col:18>
    | `-VarDecl 0x56537c99fc98 <col:3, col:13> col:13 used t1867 'pthread_t':'unsigned long'
    |-CallExpr 0x56537c99fea8 <line:812:3, col:54> 'int'
    | |-ImplicitCastExpr 0x56537c99fe90 <col:3> 'int (*)(pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x56537c99fd18 <col:3> 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' Function 0x56537c97c488 'pthread_create' 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)'
    | |-UnaryOperator 0x56537c99fd58 <col:18, col:19> 'pthread_t *' prefix '&' cannot overflow
    | | `-DeclRefExpr 0x56537c99fd38 <col:19> 'pthread_t':'unsigned long' lvalue Var 0x56537c99fc98 't1867' 'pthread_t':'unsigned long'
    | |-ImplicitCastExpr 0x56537c99fee8 <col:26, col:36> 'const pthread_attr_t *' <NullToPointer>
    | | `-ParenExpr 0x56537c99fdd0 <col:26, col:36> 'void *'
    | |   `-CStyleCastExpr 0x56537c99fda8 <col:27, col:35> 'void *' <NullToPointer>
    | |     `-IntegerLiteral 0x56537c99fd70 <col:35> 'int' 0
    | |-ImplicitCastExpr 0x56537c99ff00 <col:39> 'void *(*)(void *)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x56537c99fdf0 <col:39> 'void *(void *)' Function 0x56537c997bb8 'P1' 'void *(void *)'
    | `-ParenExpr 0x56537c99fe70 <col:43, col:53> 'void *'
    |   `-CStyleCastExpr 0x56537c99fe48 <col:44, col:52> 'void *' <NullToPointer>
    |     `-IntegerLiteral 0x56537c99fe10 <col:52> 'int' 0
    |-DeclStmt 0x56537c99ff90 <line:813:3, col:18>
    | `-VarDecl 0x56537c99ff28 <col:3, col:13> col:13 used t1868 'pthread_t':'unsigned long'
    |-CallExpr 0x56537c9a0138 <line:814:3, col:54> 'int'
    | |-ImplicitCastExpr 0x56537c9a0120 <col:3> 'int (*)(pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x56537c99ffa8 <col:3> 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' Function 0x56537c97c488 'pthread_create' 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)'
    | |-UnaryOperator 0x56537c99ffe8 <col:18, col:19> 'pthread_t *' prefix '&' cannot overflow
    | | `-DeclRefExpr 0x56537c99ffc8 <col:19> 'pthread_t':'unsigned long' lvalue Var 0x56537c99ff28 't1868' 'pthread_t':'unsigned long'
    | |-ImplicitCastExpr 0x56537c9a0178 <col:26, col:36> 'const pthread_attr_t *' <NullToPointer>
    | | `-ParenExpr 0x56537c9a0060 <col:26, col:36> 'void *'
    | |   `-CStyleCastExpr 0x56537c9a0038 <col:27, col:35> 'void *' <NullToPointer>
    | |     `-IntegerLiteral 0x56537c9a0000 <col:35> 'int' 0
    | |-ImplicitCastExpr 0x56537c9a0190 <col:39> 'void *(*)(void *)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x56537c9a0080 <col:39> 'void *(void *)' Function 0x56537c998f38 'P2' 'void *(void *)'
    | `-ParenExpr 0x56537c9a0100 <col:43, col:53> 'void *'
    |   `-CStyleCastExpr 0x56537c9a00d8 <col:44, col:52> 'void *' <NullToPointer>
    |     `-IntegerLiteral 0x56537c9a00a0 <col:52> 'int' 0
    |-CallExpr 0x56537c9a01e0 <line:815:3, col:27> 'void'
    | `-ImplicitCastExpr 0x56537c9a01c8 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x56537c9a01a8 <col:3> 'void ()' Function 0x56537c93be40 '__VERIFIER_atomic_begin' 'void ()'
    |-BinaryOperator 0x56537c9a02b0 <line:816:3, col:41> '_Bool' '='
    | |-DeclRefExpr 0x56537c9a0200 <col:3> '_Bool' lvalue Var 0x56537c995518 'main$tmp_guard0' '_Bool'
    | `-ImplicitCastExpr 0x56537c9a0298 <col:21, col:41> '_Bool' <IntegralToBoolean>
    |   `-BinaryOperator 0x56537c9a0278 <col:21, col:41> 'int' '=='
    |     |-ImplicitCastExpr 0x56537c9a0260 <col:21> 'int' <LValueToRValue>
    |     | `-DeclRefExpr 0x56537c9a0220 <col:21> 'int' lvalue Var 0x56537c995120 '__unbuffered_cnt' 'int'
    |     `-IntegerLiteral 0x56537c9a0240 <col:41> 'int' 3
    |-CallExpr 0x56537c9a0308 <line:817:3, col:25> 'void'
    | `-ImplicitCastExpr 0x56537c9a02f0 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x56537c9a02d0 <col:3> 'void ()' Function 0x56537c93bf00 '__VERIFIER_atomic_end' 'void ()'
    |-CallExpr 0x56537c9a0380 <line:818:3, col:36> 'void'
    | |-ImplicitCastExpr 0x56537c9a0368 <col:3> 'void (*)(int)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x56537c9a0328 <col:3> 'void (int)' Function 0x56537c93b790 '__VERIFIER_assume' 'void (int)'
    | `-ImplicitCastExpr 0x56537c9a03c0 <col:21> 'int' <IntegralCast>
    |   `-ImplicitCastExpr 0x56537c9a03a8 <col:21> '_Bool' <LValueToRValue>
    |     `-DeclRefExpr 0x56537c9a0348 <col:21> '_Bool' lvalue Var 0x56537c995518 'main$tmp_guard0' '_Bool'
    |-CallExpr 0x56537c9a0410 <line:819:3, col:27> 'void'
    | `-ImplicitCastExpr 0x56537c9a03f8 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x56537c9a03d8 <col:3> 'void ()' Function 0x56537c93be40 '__VERIFIER_atomic_begin' 'void ()'
    |-BinaryOperator 0x56537c9a06f8 <line:820:3, col:103> 'int' '='
    | |-DeclRefExpr 0x56537c9a0430 <col:3> 'int' lvalue Var 0x56537c9957b0 'y' 'int'
    | `-ConditionalOperator 0x56537c9a06c8 <col:7, col:103> 'int'
    |   |-BinaryOperator 0x56537c9a04f0 <col:7, col:25> 'int' '&&'
    |   | |-ImplicitCastExpr 0x56537c9a04a8 <col:7> 'int' <IntegralCast>
    |   | | `-ImplicitCastExpr 0x56537c9a0490 <col:7> '_Bool' <LValueToRValue>
    |   | |   `-DeclRefExpr 0x56537c9a0450 <col:7> '_Bool' lvalue Var 0x56537c995ed0 'y$w_buff0_used' '_Bool'
    |   | `-ImplicitCastExpr 0x56537c9a04d8 <col:25> 'int' <IntegralCast>
    |   |   `-ImplicitCastExpr 0x56537c9a04c0 <col:25> '_Bool' <LValueToRValue>
    |   |     `-DeclRefExpr 0x56537c9a0470 <col:25> '_Bool' lvalue Var 0x56537c995940 'y$r_buff0_thd0' '_Bool'
    |   |-ImplicitCastExpr 0x56537c9a06b0 <col:42> 'int' <LValueToRValue>
    |   | `-DeclRefExpr 0x56537c9a0510 <col:42> 'int' lvalue Var 0x56537c995e58 'y$w_buff0' 'int'
    |   `-ParenExpr 0x56537c9a0690 <col:54, col:103> 'int'
    |     `-ConditionalOperator 0x56537c9a0660 <col:55, col:102> 'int'
    |       |-BinaryOperator 0x56537c9a05d0 <col:55, col:73> 'int' '&&'
    |       | |-ImplicitCastExpr 0x56537c9a0588 <col:55> 'int' <IntegralCast>
    |       | | `-ImplicitCastExpr 0x56537c9a0570 <col:55> '_Bool' <LValueToRValue>
    |       | |   `-DeclRefExpr 0x56537c9a0530 <col:55> '_Bool' lvalue Var 0x56537c995fc8 'y$w_buff1_used' '_Bool'
    |       | `-ImplicitCastExpr 0x56537c9a05b8 <col:73> 'int' <IntegralCast>
    |       |   `-ImplicitCastExpr 0x56537c9a05a0 <col:73> '_Bool' <LValueToRValue>
    |       |     `-DeclRefExpr 0x56537c9a0550 <col:73> '_Bool' lvalue Var 0x56537c995b78 'y$r_buff1_thd0' '_Bool'
    |       |-ImplicitCastExpr 0x56537c9a0630 <col:90> 'int' <LValueToRValue>
    |       | `-DeclRefExpr 0x56537c9a05f0 <col:90> 'int' lvalue Var 0x56537c995f50 'y$w_buff1' 'int'
    |       `-ImplicitCastExpr 0x56537c9a0648 <col:102> 'int' <LValueToRValue>
    |         `-DeclRefExpr 0x56537c9a0610 <col:102> 'int' lvalue Var 0x56537c9957b0 'y' 'int'
    |-BinaryOperator 0x56537c9a0900 <line:821:3, col:66> '_Bool' '='
    | |-DeclRefExpr 0x56537c9a0718 <col:3> '_Bool' lvalue Var 0x56537c995ed0 'y$w_buff0_used' '_Bool'
    | `-ImplicitCastExpr 0x56537c9a08e8 <col:20, col:66> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x56537c9a08b8 <col:20, col:66> 'int'
    |     |-BinaryOperator 0x56537c9a07d8 <col:20, col:38> 'int' '&&'
    |     | |-ImplicitCastExpr 0x56537c9a0790 <col:20> 'int' <IntegralCast>
    |     | | `-ImplicitCastExpr 0x56537c9a0778 <col:20> '_Bool' <LValueToRValue>
    |     | |   `-DeclRefExpr 0x56537c9a0738 <col:20> '_Bool' lvalue Var 0x56537c995ed0 'y$w_buff0_used' '_Bool'
    |     | `-ImplicitCastExpr 0x56537c9a07c0 <col:38> 'int' <IntegralCast>
    |     |   `-ImplicitCastExpr 0x56537c9a07a8 <col:38> '_Bool' <LValueToRValue>
    |     |     `-DeclRefExpr 0x56537c9a0758 <col:38> '_Bool' lvalue Var 0x56537c995940 'y$r_buff0_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x56537c9a0870 <col:55, col:62> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x56537c9a0828 <col:55, col:62> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x56537c9a07f8 <col:62> 'int' 0
    |     `-ImplicitCastExpr 0x56537c9a08a0 <col:66> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x56537c9a0888 <col:66> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x56537c9a0850 <col:66> '_Bool' lvalue Var 0x56537c995ed0 'y$w_buff0_used' '_Bool'
    |-BinaryOperator 0x56537c9a0bf8 <line:822:3, col:102> '_Bool' '='
    | |-DeclRefExpr 0x56537c9a0920 <col:3> '_Bool' lvalue Var 0x56537c995fc8 'y$w_buff1_used' '_Bool'
    | `-ImplicitCastExpr 0x56537c9a0be0 <col:20, col:102> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x56537c9a0bb0 <col:20, col:102> 'int'
    |     |-BinaryOperator 0x56537c9a0ac0 <col:20, col:74> 'int' '||'
    |     | |-BinaryOperator 0x56537c9a09e0 <col:20, col:38> 'int' '&&'
    |     | | |-ImplicitCastExpr 0x56537c9a0998 <col:20> 'int' <IntegralCast>
    |     | | | `-ImplicitCastExpr 0x56537c9a0980 <col:20> '_Bool' <LValueToRValue>
    |     | | |   `-DeclRefExpr 0x56537c9a0940 <col:20> '_Bool' lvalue Var 0x56537c995ed0 'y$w_buff0_used' '_Bool'
    |     | | `-ImplicitCastExpr 0x56537c9a09c8 <col:38> 'int' <IntegralCast>
    |     | |   `-ImplicitCastExpr 0x56537c9a09b0 <col:38> '_Bool' <LValueToRValue>
    |     | |     `-DeclRefExpr 0x56537c9a0960 <col:38> '_Bool' lvalue Var 0x56537c995940 'y$r_buff0_thd0' '_Bool'
    |     | `-BinaryOperator 0x56537c9a0aa0 <col:56, col:74> 'int' '&&'
    |     |   |-ImplicitCastExpr 0x56537c9a0a58 <col:56> 'int' <IntegralCast>
    |     |   | `-ImplicitCastExpr 0x56537c9a0a40 <col:56> '_Bool' <LValueToRValue>
    |     |   |   `-DeclRefExpr 0x56537c9a0a00 <col:56> '_Bool' lvalue Var 0x56537c995fc8 'y$w_buff1_used' '_Bool'
    |     |   `-ImplicitCastExpr 0x56537c9a0a88 <col:74> 'int' <IntegralCast>
    |     |     `-ImplicitCastExpr 0x56537c9a0a70 <col:74> '_Bool' <LValueToRValue>
    |     |       `-DeclRefExpr 0x56537c9a0a20 <col:74> '_Bool' lvalue Var 0x56537c995b78 'y$r_buff1_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x56537c9a0b58 <col:91, col:98> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x56537c9a0b10 <col:91, col:98> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x56537c9a0ae0 <col:98> 'int' 0
    |     `-ImplicitCastExpr 0x56537c9a0b88 <col:102> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x56537c9a0b70 <col:102> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x56537c9a0b38 <col:102> '_Bool' lvalue Var 0x56537c995fc8 'y$w_buff1_used' '_Bool'
    |-BinaryOperator 0x56537c9a0e00 <line:823:3, col:66> '_Bool' '='
    | |-DeclRefExpr 0x56537c9a0c18 <col:3> '_Bool' lvalue Var 0x56537c995940 'y$r_buff0_thd0' '_Bool'
    | `-ImplicitCastExpr 0x56537c9a0de8 <col:20, col:66> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x56537c9a0db8 <col:20, col:66> 'int'
    |     |-BinaryOperator 0x56537c9a0cd8 <col:20, col:38> 'int' '&&'
    |     | |-ImplicitCastExpr 0x56537c9a0c90 <col:20> 'int' <IntegralCast>
    |     | | `-ImplicitCastExpr 0x56537c9a0c78 <col:20> '_Bool' <LValueToRValue>
    |     | |   `-DeclRefExpr 0x56537c9a0c38 <col:20> '_Bool' lvalue Var 0x56537c995ed0 'y$w_buff0_used' '_Bool'
    |     | `-ImplicitCastExpr 0x56537c9a0cc0 <col:38> 'int' <IntegralCast>
    |     |   `-ImplicitCastExpr 0x56537c9a0ca8 <col:38> '_Bool' <LValueToRValue>
    |     |     `-DeclRefExpr 0x56537c9a0c58 <col:38> '_Bool' lvalue Var 0x56537c995940 'y$r_buff0_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x56537c9a0d70 <col:55, col:62> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x56537c9a0d28 <col:55, col:62> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x56537c9a0cf8 <col:62> 'int' 0
    |     `-ImplicitCastExpr 0x56537c9a0da0 <col:66> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x56537c9a0d88 <col:66> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x56537c9a0d50 <col:66> '_Bool' lvalue Var 0x56537c995940 'y$r_buff0_thd0' '_Bool'
    |-BinaryOperator 0x56537c9a10e8 <line:824:3, col:102> '_Bool' '='
    | |-DeclRefExpr 0x56537c9a0e20 <col:3> '_Bool' lvalue Var 0x56537c995b78 'y$r_buff1_thd0' '_Bool'
    | `-ImplicitCastExpr 0x56537c9a10d0 <col:20, col:102> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x56537c9a10a0 <col:20, col:102> 'int'
    |     |-BinaryOperator 0x56537c9a0fc0 <col:20, col:74> 'int' '||'
    |     | |-BinaryOperator 0x56537c9a0ee0 <col:20, col:38> 'int' '&&'
    |     | | |-ImplicitCastExpr 0x56537c9a0e98 <col:20> 'int' <IntegralCast>
    |     | | | `-ImplicitCastExpr 0x56537c9a0e80 <col:20> '_Bool' <LValueToRValue>
    |     | | |   `-DeclRefExpr 0x56537c9a0e40 <col:20> '_Bool' lvalue Var 0x56537c995ed0 'y$w_buff0_used' '_Bool'
    |     | | `-ImplicitCastExpr 0x56537c9a0ec8 <col:38> 'int' <IntegralCast>
    |     | |   `-ImplicitCastExpr 0x56537c9a0eb0 <col:38> '_Bool' <LValueToRValue>
    |     | |     `-DeclRefExpr 0x56537c9a0e60 <col:38> '_Bool' lvalue Var 0x56537c995940 'y$r_buff0_thd0' '_Bool'
    |     | `-BinaryOperator 0x56537c9a0fa0 <col:56, col:74> 'int' '&&'
    |     |   |-ImplicitCastExpr 0x56537c9a0f58 <col:56> 'int' <IntegralCast>
    |     |   | `-ImplicitCastExpr 0x56537c9a0f40 <col:56> '_Bool' <LValueToRValue>
    |     |   |   `-DeclRefExpr 0x56537c9a0f00 <col:56> '_Bool' lvalue Var 0x56537c995fc8 'y$w_buff1_used' '_Bool'
    |     |   `-ImplicitCastExpr 0x56537c9a0f88 <col:74> 'int' <IntegralCast>
    |     |     `-ImplicitCastExpr 0x56537c9a0f70 <col:74> '_Bool' <LValueToRValue>
    |     |       `-DeclRefExpr 0x56537c9a0f20 <col:74> '_Bool' lvalue Var 0x56537c995b78 'y$r_buff1_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x56537c9a1058 <col:91, col:98> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x56537c9a1010 <col:91, col:98> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x56537c9a0fe0 <col:98> 'int' 0
    |     `-ImplicitCastExpr 0x56537c9a1088 <col:102> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x56537c9a1070 <col:102> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x56537c9a1038 <col:102> '_Bool' lvalue Var 0x56537c995b78 'y$r_buff1_thd0' '_Bool'
    |-CallExpr 0x56537c9a1140 <line:825:3, col:25> 'void'
    | `-ImplicitCastExpr 0x56537c9a1128 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x56537c9a1108 <col:3> 'void ()' Function 0x56537c93bf00 '__VERIFIER_atomic_end' 'void ()'
    |-CallExpr 0x56537c9a1198 <line:826:3, col:27> 'void'
    | `-ImplicitCastExpr 0x56537c9a1180 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x56537c9a1160 <col:3> 'void ()' Function 0x56537c93be40 '__VERIFIER_atomic_begin' 'void ()'
    |-BinaryOperator 0x56537c9a1248 <line:827:3, col:45> '_Bool' '='
    | |-DeclRefExpr 0x56537c9a11b8 <col:3> '_Bool' lvalue Var 0x56537c996040 'weak$$choice0' '_Bool'
    | `-ImplicitCastExpr 0x56537c9a1230 <col:19, col:45> '_Bool' <PointerToBoolean>
    |   `-CallExpr 0x56537c9a1210 <col:19, col:45> 'void *'
    |     `-ImplicitCastExpr 0x56537c9a11f8 <col:19> 'void *(*)(void)' <FunctionToPointerDecay>
    |       `-DeclRefExpr 0x56537c9a11d8 <col:19> 'void *(void)' Function 0x56537c93b958 '__VERIFIER_nondet_pointer' 'void *(void)'
    |-BinaryOperator 0x56537c9a12f8 <line:828:3, col:45> '_Bool' '='
    | |-DeclRefExpr 0x56537c9a1268 <col:3> '_Bool' lvalue Var 0x56537c9960b8 'weak$$choice2' '_Bool'
    | `-ImplicitCastExpr 0x56537c9a12e0 <col:19, col:45> '_Bool' <PointerToBoolean>
    |   `-CallExpr 0x56537c9a12c0 <col:19, col:45> 'void *'
    |     `-ImplicitCastExpr 0x56537c9a12a8 <col:19> 'void *(*)(void)' <FunctionToPointerDecay>
    |       `-DeclRefExpr 0x56537c9a1288 <col:19> 'void *(void)' Function 0x56537c93b958 '__VERIFIER_nondet_pointer' 'void *(void)'
    |-BinaryOperator 0x56537c9a1370 <line:829:3, col:21> '_Bool' '='
    | |-DeclRefExpr 0x56537c9a1318 <col:3> '_Bool' lvalue Var 0x56537c995848 'y$flush_delayed' '_Bool'
    | `-ImplicitCastExpr 0x56537c9a1358 <col:21> '_Bool' <LValueToRValue>
    |   `-DeclRefExpr 0x56537c9a1338 <col:21> '_Bool' lvalue Var 0x56537c9960b8 'weak$$choice2' '_Bool'
    |-BinaryOperator 0x56537c9a13e8 <line:830:3, col:15> 'int' '='
    | |-DeclRefExpr 0x56537c9a1390 <col:3> 'int' lvalue Var 0x56537c9958c8 'y$mem_tmp' 'int'
    | `-ImplicitCastExpr 0x56537c9a13d0 <col:15> 'int' <LValueToRValue>
    |   `-DeclRefExpr 0x56537c9a13b0 <col:15> 'int' lvalue Var 0x56537c9957b0 'y' 'int'
    |-BinaryOperator 0x56537c9a1820 <line:831:3, col:162> 'int' '='
    | |-DeclRefExpr 0x56537c9a1408 <col:3> 'int' lvalue Var 0x56537c9957b0 'y' 'int'
    | `-ConditionalOperator 0x56537c9a17f0 <col:7, col:162> 'int'
    |   |-BinaryOperator 0x56537c9a1618 <col:7, col:84> 'int' '||'
    |   | |-BinaryOperator 0x56537c9a1538 <col:7, col:46> 'int' '||'
    |   | | |-UnaryOperator 0x56537c9a1460 <col:7, col:8> 'int' prefix '!' cannot overflow
    |   | | | `-ImplicitCastExpr 0x56537c9a1448 <col:8> '_Bool' <LValueToRValue>
    |   | | |   `-DeclRefExpr 0x56537c9a1428 <col:8> '_Bool' lvalue Var 0x56537c995ed0 'y$w_buff0_used' '_Bool'
    |   | | `-BinaryOperator 0x56537c9a1518 <col:26, col:46> 'int' '&&'
    |   | |   |-UnaryOperator 0x56537c9a14b0 <col:26, col:27> 'int' prefix '!' cannot overflow
    |   | |   | `-ImplicitCastExpr 0x56537c9a1498 <col:27> '_Bool' <LValueToRValue>
    |   | |   |   `-DeclRefExpr 0x56537c9a1478 <col:27> '_Bool' lvalue Var 0x56537c995940 'y$r_buff0_thd0' '_Bool'
    |   | |   `-UnaryOperator 0x56537c9a1500 <col:45, col:46> 'int' prefix '!' cannot overflow
    |   | |     `-ImplicitCastExpr 0x56537c9a14e8 <col:46> '_Bool' <LValueToRValue>
    |   | |       `-DeclRefExpr 0x56537c9a14c8 <col:46> '_Bool' lvalue Var 0x56537c995fc8 'y$w_buff1_used' '_Bool'
    |   | `-BinaryOperator 0x56537c9a15f8 <col:64, col:84> 'int' '&&'
    |   |   |-UnaryOperator 0x56537c9a1590 <col:64, col:65> 'int' prefix '!' cannot overflow
    |   |   | `-ImplicitCastExpr 0x56537c9a1578 <col:65> '_Bool' <LValueToRValue>
    |   |   |   `-DeclRefExpr 0x56537c9a1558 <col:65> '_Bool' lvalue Var 0x56537c995940 'y$r_buff0_thd0' '_Bool'
    |   |   `-UnaryOperator 0x56537c9a15e0 <col:83, col:84> 'int' prefix '!' cannot overflow
    |   |     `-ImplicitCastExpr 0x56537c9a15c8 <col:84> '_Bool' <LValueToRValue>
    |   |       `-DeclRefExpr 0x56537c9a15a8 <col:84> '_Bool' lvalue Var 0x56537c995b78 'y$r_buff1_thd0' '_Bool'
    |   |-ImplicitCastExpr 0x56537c9a17d8 <col:101> 'int' <LValueToRValue>
    |   | `-DeclRefExpr 0x56537c9a1638 <col:101> 'int' lvalue Var 0x56537c9957b0 'y' 'int'
    |   `-ParenExpr 0x56537c9a17b8 <col:105, col:162> 'int'
    |     `-ConditionalOperator 0x56537c9a1788 <col:106, col:153> 'int'
    |       |-BinaryOperator 0x56537c9a16f8 <col:106, col:124> 'int' '&&'
    |       | |-ImplicitCastExpr 0x56537c9a16b0 <col:106> 'int' <IntegralCast>
    |       | | `-ImplicitCastExpr 0x56537c9a1698 <col:106> '_Bool' <LValueToRValue>
    |       | |   `-DeclRefExpr 0x56537c9a1658 <col:106> '_Bool' lvalue Var 0x56537c995ed0 'y$w_buff0_used' '_Bool'
    |       | `-ImplicitCastExpr 0x56537c9a16e0 <col:124> 'int' <IntegralCast>
    |       |   `-ImplicitCastExpr 0x56537c9a16c8 <col:124> '_Bool' <LValueToRValue>
    |       |     `-DeclRefExpr 0x56537c9a1678 <col:124> '_Bool' lvalue Var 0x56537c995940 'y$r_buff0_thd0' '_Bool'
    |       |-ImplicitCastExpr 0x56537c9a1758 <col:141> 'int' <LValueToRValue>
    |       | `-DeclRefExpr 0x56537c9a1718 <col:141> 'int' lvalue Var 0x56537c995e58 'y$w_buff0' 'int'
    |       `-ImplicitCastExpr 0x56537c9a1770 <col:153> 'int' <LValueToRValue>
    |         `-DeclRefExpr 0x56537c9a1738 <col:153> 'int' lvalue Var 0x56537c995f50 'y$w_buff1' 'int'
    |-BinaryOperator 0x56537c9a1d40 <line:832:3, col:208> 'int' '='
    | |-DeclRefExpr 0x56537c9a1840 <col:3> 'int' lvalue Var 0x56537c995e58 'y$w_buff0' 'int'
    | `-ConditionalOperator 0x56537c9a1d10 <col:15, col:208> 'int'
    |   |-ImplicitCastExpr 0x56537c9a1ce0 <col:15> 'int' <IntegralCast>
    |   | `-ImplicitCastExpr 0x56537c9a1cc8 <col:15> '_Bool' <LValueToRValue>
    |   |   `-DeclRefExpr 0x56537c9a1860 <col:15> '_Bool' lvalue Var 0x56537c9960b8 'weak$$choice2' '_Bool'
    |   |-ImplicitCastExpr 0x56537c9a1cf8 <col:31> 'int' <LValueToRValue>
    |   | `-DeclRefExpr 0x56537c9a1880 <col:31> 'int' lvalue Var 0x56537c995e58 'y$w_buff0' 'int'
    |   `-ParenExpr 0x56537c9a1ca8 <col:43, col:208> 'int'
    |     `-ConditionalOperator 0x56537c9a1c78 <col:44, col:207> 'int'
    |       |-BinaryOperator 0x56537c9a1a90 <col:44, col:121> 'int' '||'
    |       | |-BinaryOperator 0x56537c9a19b0 <col:44, col:83> 'int' '||'
    |       | | |-UnaryOperator 0x56537c9a18d8 <col:44, col:45> 'int' prefix '!' cannot overflow
    |       | | | `-ImplicitCastExpr 0x56537c9a18c0 <col:45> '_Bool' <LValueToRValue>
    |       | | |   `-DeclRefExpr 0x56537c9a18a0 <col:45> '_Bool' lvalue Var 0x56537c995ed0 'y$w_buff0_used' '_Bool'
    |       | | `-BinaryOperator 0x56537c9a1990 <col:63, col:83> 'int' '&&'
    |       | |   |-UnaryOperator 0x56537c9a1928 <col:63, col:64> 'int' prefix '!' cannot overflow
    |       | |   | `-ImplicitCastExpr 0x56537c9a1910 <col:64> '_Bool' <LValueToRValue>
    |       | |   |   `-DeclRefExpr 0x56537c9a18f0 <col:64> '_Bool' lvalue Var 0x56537c995940 'y$r_buff0_thd0' '_Bool'
    |       | |   `-UnaryOperator 0x56537c9a1978 <col:82, col:83> 'int' prefix '!' cannot overflow
    |       | |     `-ImplicitCastExpr 0x56537c9a1960 <col:83> '_Bool' <LValueToRValue>
    |       | |       `-DeclRefExpr 0x56537c9a1940 <col:83> '_Bool' lvalue Var 0x56537c995fc8 'y$w_buff1_used' '_Bool'
    |       | `-BinaryOperator 0x56537c9a1a70 <col:101, col:121> 'int' '&&'
    |       |   |-UnaryOperator 0x56537c9a1a08 <col:101, col:102> 'int' prefix '!' cannot overflow
    |       |   | `-ImplicitCastExpr 0x56537c9a19f0 <col:102> '_Bool' <LValueToRValue>
    |       |   |   `-DeclRefExpr 0x56537c9a19d0 <col:102> '_Bool' lvalue Var 0x56537c995940 'y$r_buff0_thd0' '_Bool'
    |       |   `-UnaryOperator 0x56537c9a1a58 <col:120, col:121> 'int' prefix '!' cannot overflow
    |       |     `-ImplicitCastExpr 0x56537c9a1a40 <col:121> '_Bool' <LValueToRValue>
    |       |       `-DeclRefExpr 0x56537c9a1a20 <col:121> '_Bool' lvalue Var 0x56537c995b78 'y$r_buff1_thd0' '_Bool'
    |       |-ImplicitCastExpr 0x56537c9a1c60 <col:138> 'int' <LValueToRValue>
    |       | `-DeclRefExpr 0x56537c9a1ab0 <col:138> 'int' lvalue Var 0x56537c995e58 'y$w_buff0' 'int'
    |       `-ParenExpr 0x56537c9a1c40 <col:150, col:207> 'int'
    |         `-ConditionalOperator 0x56537c9a1c10 <col:151, col:198> 'int'
    |           |-BinaryOperator 0x56537c9a1b70 <col:151, col:169> 'int' '&&'
    |           | |-ImplicitCastExpr 0x56537c9a1b28 <col:151> 'int' <IntegralCast>
    |           | | `-ImplicitCastExpr 0x56537c9a1b10 <col:151> '_Bool' <LValueToRValue>
    |           | |   `-DeclRefExpr 0x56537c9a1ad0 <col:151> '_Bool' lvalue Var 0x56537c995ed0 'y$w_buff0_used' '_Bool'
    |           | `-ImplicitCastExpr 0x56537c9a1b58 <col:169> 'int' <IntegralCast>
    |           |   `-ImplicitCastExpr 0x56537c9a1b40 <col:169> '_Bool' <LValueToRValue>
    |           |     `-DeclRefExpr 0x56537c9a1af0 <col:169> '_Bool' lvalue Var 0x56537c995940 'y$r_buff0_thd0' '_Bool'
    |           |-ImplicitCastExpr 0x56537c9a1be0 <col:186> 'int' <LValueToRValue>
    |           | `-DeclRefExpr 0x56537c9a1b90 <col:186> 'int' lvalue Var 0x56537c995e58 'y$w_buff0' 'int'
    |           `-ImplicitCastExpr 0x56537c9a1bf8 <col:198> 'int' <LValueToRValue>
    |             `-DeclRefExpr 0x56537c9a1bc0 <col:198> 'int' lvalue Var 0x56537c995e58 'y$w_buff0' 'int'
    |-BinaryOperator 0x56537c9a2250 <line:833:3, col:208> 'int' '='
    | |-DeclRefExpr 0x56537c9a1d60 <col:3> 'int' lvalue Var 0x56537c995f50 'y$w_buff1' 'int'
    | `-ConditionalOperator 0x56537c9a2220 <col:15, col:208> 'int'
    |   |-ImplicitCastExpr 0x56537c9a21f0 <col:15> 'int' <IntegralCast>
    |   | `-ImplicitCastExpr 0x56537c9a21d8 <col:15> '_Bool' <LValueToRValue>
    |   |   `-DeclRefExpr 0x56537c9a1d80 <col:15> '_Bool' lvalue Var 0x56537c9960b8 'weak$$choice2' '_Bool'
    |   |-ImplicitCastExpr 0x56537c9a2208 <col:31> 'int' <LValueToRValue>
    |   | `-DeclRefExpr 0x56537c9a1da0 <col:31> 'int' lvalue Var 0x56537c995f50 'y$w_buff1' 'int'
    |   `-ParenExpr 0x56537c9a21b8 <col:43, col:208> 'int'
    |     `-ConditionalOperator 0x56537c9a2188 <col:44, col:207> 'int'
    |       |-BinaryOperator 0x56537c9a1fb0 <col:44, col:121> 'int' '||'
    |       | |-BinaryOperator 0x56537c9a1ed0 <col:44, col:83> 'int' '||'
    |       | | |-UnaryOperator 0x56537c9a1df8 <col:44, col:45> 'int' prefix '!' cannot overflow
    |       | | | `-ImplicitCastExpr 0x56537c9a1de0 <col:45> '_Bool' <LValueToRValue>
    |       | | |   `-DeclRefExpr 0x56537c9a1dc0 <col:45> '_Bool' lvalue Var 0x56537c995ed0 'y$w_buff0_used' '_Bool'
    |       | | `-BinaryOperator 0x56537c9a1eb0 <col:63, col:83> 'int' '&&'
    |       | |   |-UnaryOperator 0x56537c9a1e48 <col:63, col:64> 'int' prefix '!' cannot overflow
    |       | |   | `-ImplicitCastExpr 0x56537c9a1e30 <col:64> '_Bool' <LValueToRValue>
    |       | |   |   `-DeclRefExpr 0x56537c9a1e10 <col:64> '_Bool' lvalue Var 0x56537c995940 'y$r_buff0_thd0' '_Bool'
    |       | |   `-UnaryOperator 0x56537c9a1e98 <col:82, col:83> 'int' prefix '!' cannot overflow
    |       | |     `-ImplicitCastExpr 0x56537c9a1e80 <col:83> '_Bool' <LValueToRValue>
    |       | |       `-DeclRefExpr 0x56537c9a1e60 <col:83> '_Bool' lvalue Var 0x56537c995fc8 'y$w_buff1_used' '_Bool'
    |       | `-BinaryOperator 0x56537c9a1f90 <col:101, col:121> 'int' '&&'
    |       |   |-UnaryOperator 0x56537c9a1f28 <col:101, col:102> 'int' prefix '!' cannot overflow
    |       |   | `-ImplicitCastExpr 0x56537c9a1f10 <col:102> '_Bool' <LValueToRValue>
    |       |   |   `-DeclRefExpr 0x56537c9a1ef0 <col:102> '_Bool' lvalue Var 0x56537c995940 'y$r_buff0_thd0' '_Bool'
    |       |   `-UnaryOperator 0x56537c9a1f78 <col:120, col:121> 'int' prefix '!' cannot overflow
    |       |     `-ImplicitCastExpr 0x56537c9a1f60 <col:121> '_Bool' <LValueToRValue>
    |       |       `-DeclRefExpr 0x56537c9a1f40 <col:121> '_Bool' lvalue Var 0x56537c995b78 'y$r_buff1_thd0' '_Bool'
    |       |-ImplicitCastExpr 0x56537c9a2170 <col:138> 'int' <LValueToRValue>
    |       | `-DeclRefExpr 0x56537c9a1fd0 <col:138> 'int' lvalue Var 0x56537c995f50 'y$w_buff1' 'int'
    |       `-ParenExpr 0x56537c9a2150 <col:150, col:207> 'int'
    |         `-ConditionalOperator 0x56537c9a2120 <col:151, col:198> 'int'
    |           |-BinaryOperator 0x56537c9a2090 <col:151, col:169> 'int' '&&'
    |           | |-ImplicitCastExpr 0x56537c9a2048 <col:151> 'int' <IntegralCast>
    |           | | `-ImplicitCastExpr 0x56537c9a2030 <col:151> '_Bool' <LValueToRValue>
    |           | |   `-DeclRefExpr 0x56537c9a1ff0 <col:151> '_Bool' lvalue Var 0x56537c995ed0 'y$w_buff0_used' '_Bool'
    |           | `-ImplicitCastExpr 0x56537c9a2078 <col:169> 'int' <IntegralCast>
    |           |   `-ImplicitCastExpr 0x56537c9a2060 <col:169> '_Bool' <LValueToRValue>
    |           |     `-DeclRefExpr 0x56537c9a2010 <col:169> '_Bool' lvalue Var 0x56537c995940 'y$r_buff0_thd0' '_Bool'
    |           |-ImplicitCastExpr 0x56537c9a20f0 <col:186> 'int' <LValueToRValue>
    |           | `-DeclRefExpr 0x56537c9a20b0 <col:186> 'int' lvalue Var 0x56537c995f50 'y$w_buff1' 'int'
    |           `-ImplicitCastExpr 0x56537c9a2108 <col:198> 'int' <LValueToRValue>
    |             `-DeclRefExpr 0x56537c9a20d0 <col:198> 'int' lvalue Var 0x56537c995f50 'y$w_buff1' 'int'
    |-BinaryOperator 0x56537c9a27f8 <line:834:3, col:227> '_Bool' '='
    | |-DeclRefExpr 0x56537c9a2270 <col:3> '_Bool' lvalue Var 0x56537c995ed0 'y$w_buff0_used' '_Bool'
    | `-ImplicitCastExpr 0x56537c9a27e0 <col:20, col:227> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x56537c9a27b0 <col:20, col:227> 'int'
    |     |-ImplicitCastExpr 0x56537c9a2768 <col:20> 'int' <IntegralCast>
    |     | `-ImplicitCastExpr 0x56537c9a2750 <col:20> '_Bool' <LValueToRValue>
    |     |   `-DeclRefExpr 0x56537c9a2290 <col:20> '_Bool' lvalue Var 0x56537c9960b8 'weak$$choice2' '_Bool'
    |     |-ImplicitCastExpr 0x56537c9a2798 <col:36> 'int' <IntegralCast>
    |     | `-ImplicitCastExpr 0x56537c9a2780 <col:36> '_Bool' <LValueToRValue>
    |     |   `-DeclRefExpr 0x56537c9a22b0 <col:36> '_Bool' lvalue Var 0x56537c995ed0 'y$w_buff0_used' '_Bool'
    |     `-ParenExpr 0x56537c9a2730 <col:53, col:227> 'int'
    |       `-ConditionalOperator 0x56537c9a2700 <col:54, col:226> 'int'
    |         |-BinaryOperator 0x56537c9a24c0 <col:54, col:131> 'int' '||'
    |         | |-BinaryOperator 0x56537c9a23e0 <col:54, col:93> 'int' '||'
    |         | | |-UnaryOperator 0x56537c9a2308 <col:54, col:55> 'int' prefix '!' cannot overflow
    |         | | | `-ImplicitCastExpr 0x56537c9a22f0 <col:55> '_Bool' <LValueToRValue>
    |         | | |   `-DeclRefExpr 0x56537c9a22d0 <col:55> '_Bool' lvalue Var 0x56537c995ed0 'y$w_buff0_used' '_Bool'
    |         | | `-BinaryOperator 0x56537c9a23c0 <col:73, col:93> 'int' '&&'
    |         | |   |-UnaryOperator 0x56537c9a2358 <col:73, col:74> 'int' prefix '!' cannot overflow
    |         | |   | `-ImplicitCastExpr 0x56537c9a2340 <col:74> '_Bool' <LValueToRValue>
    |         | |   |   `-DeclRefExpr 0x56537c9a2320 <col:74> '_Bool' lvalue Var 0x56537c995940 'y$r_buff0_thd0' '_Bool'
    |         | |   `-UnaryOperator 0x56537c9a23a8 <col:92, col:93> 'int' prefix '!' cannot overflow
    |         | |     `-ImplicitCastExpr 0x56537c9a2390 <col:93> '_Bool' <LValueToRValue>
    |         | |       `-DeclRefExpr 0x56537c9a2370 <col:93> '_Bool' lvalue Var 0x56537c995fc8 'y$w_buff1_used' '_Bool'
    |         | `-BinaryOperator 0x56537c9a24a0 <col:111, col:131> 'int' '&&'
    |         |   |-UnaryOperator 0x56537c9a2438 <col:111, col:112> 'int' prefix '!' cannot overflow
    |         |   | `-ImplicitCastExpr 0x56537c9a2420 <col:112> '_Bool' <LValueToRValue>
    |         |   |   `-DeclRefExpr 0x56537c9a2400 <col:112> '_Bool' lvalue Var 0x56537c995940 'y$r_buff0_thd0' '_Bool'
    |         |   `-UnaryOperator 0x56537c9a2488 <col:130, col:131> 'int' prefix '!' cannot overflow
    |         |     `-ImplicitCastExpr 0x56537c9a2470 <col:131> '_Bool' <LValueToRValue>
    |         |       `-DeclRefExpr 0x56537c9a2450 <col:131> '_Bool' lvalue Var 0x56537c995b78 'y$r_buff1_thd0' '_Bool'
    |         |-ImplicitCastExpr 0x56537c9a26e8 <col:148> 'int' <IntegralCast>
    |         | `-ImplicitCastExpr 0x56537c9a26d0 <col:148> '_Bool' <LValueToRValue>
    |         |   `-DeclRefExpr 0x56537c9a24e0 <col:148> '_Bool' lvalue Var 0x56537c995ed0 'y$w_buff0_used' '_Bool'
    |         `-ParenExpr 0x56537c9a26b0 <col:165, col:226> 'int'
    |           `-ConditionalOperator 0x56537c9a2680 <col:166, col:212> 'int'
    |             |-BinaryOperator 0x56537c9a25a0 <col:166, col:184> 'int' '&&'
    |             | |-ImplicitCastExpr 0x56537c9a2558 <col:166> 'int' <IntegralCast>
    |             | | `-ImplicitCastExpr 0x56537c9a2540 <col:166> '_Bool' <LValueToRValue>
    |             | |   `-DeclRefExpr 0x56537c9a2500 <col:166> '_Bool' lvalue Var 0x56537c995ed0 'y$w_buff0_used' '_Bool'
    |             | `-ImplicitCastExpr 0x56537c9a2588 <col:184> 'int' <IntegralCast>
    |             |   `-ImplicitCastExpr 0x56537c9a2570 <col:184> '_Bool' <LValueToRValue>
    |             |     `-DeclRefExpr 0x56537c9a2520 <col:184> '_Bool' lvalue Var 0x56537c995940 'y$r_buff0_thd0' '_Bool'
    |             |-ImplicitCastExpr 0x56537c9a2638 <col:201, col:208> 'int' <IntegralCast>
    |             | `-CStyleCastExpr 0x56537c9a25f0 <col:201, col:208> '_Bool' <IntegralToBoolean>
    |             |   `-IntegerLiteral 0x56537c9a25c0 <col:208> 'int' 0
    |             `-ImplicitCastExpr 0x56537c9a2668 <col:212> 'int' <IntegralCast>
    |               `-ImplicitCastExpr 0x56537c9a2650 <col:212> '_Bool' <LValueToRValue>
    |                 `-DeclRefExpr 0x56537c9a2618 <col:212> '_Bool' lvalue Var 0x56537c995ed0 'y$w_buff0_used' '_Bool'
    |-BinaryOperator 0x56537c9a2dd0 <line:835:3, col:221> '_Bool' '='
    | |-DeclRefExpr 0x56537c9a2818 <col:3> '_Bool' lvalue Var 0x56537c995fc8 'y$w_buff1_used' '_Bool'
    | `-ImplicitCastExpr 0x56537c9a2db8 <col:20, col:221> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x56537c9a2d88 <col:20, col:221> 'int'
    |     |-ImplicitCastExpr 0x56537c9a2d40 <col:20> 'int' <IntegralCast>
    |     | `-ImplicitCastExpr 0x56537c9a2d28 <col:20> '_Bool' <LValueToRValue>
    |     |   `-DeclRefExpr 0x56537c9a2838 <col:20> '_Bool' lvalue Var 0x56537c9960b8 'weak$$choice2' '_Bool'
    |     |-ImplicitCastExpr 0x56537c9a2d70 <col:36> 'int' <IntegralCast>
    |     | `-ImplicitCastExpr 0x56537c9a2d58 <col:36> '_Bool' <LValueToRValue>
    |     |   `-DeclRefExpr 0x56537c9a2858 <col:36> '_Bool' lvalue Var 0x56537c995fc8 'y$w_buff1_used' '_Bool'
    |     `-ParenExpr 0x56537c9a2d08 <col:53, col:221> 'int'
    |       `-ConditionalOperator 0x56537c9a2cd8 <col:54, col:220> 'int'
    |         |-BinaryOperator 0x56537c9a2a68 <col:54, col:131> 'int' '||'
    |         | |-BinaryOperator 0x56537c9a2988 <col:54, col:93> 'int' '||'
    |         | | |-UnaryOperator 0x56537c9a28b0 <col:54, col:55> 'int' prefix '!' cannot overflow
    |         | | | `-ImplicitCastExpr 0x56537c9a2898 <col:55> '_Bool' <LValueToRValue>
    |         | | |   `-DeclRefExpr 0x56537c9a2878 <col:55> '_Bool' lvalue Var 0x56537c995ed0 'y$w_buff0_used' '_Bool'
    |         | | `-BinaryOperator 0x56537c9a2968 <col:73, col:93> 'int' '&&'
    |         | |   |-UnaryOperator 0x56537c9a2900 <col:73, col:74> 'int' prefix '!' cannot overflow
    |         | |   | `-ImplicitCastExpr 0x56537c9a28e8 <col:74> '_Bool' <LValueToRValue>
    |         | |   |   `-DeclRefExpr 0x56537c9a28c8 <col:74> '_Bool' lvalue Var 0x56537c995940 'y$r_buff0_thd0' '_Bool'
    |         | |   `-UnaryOperator 0x56537c9a2950 <col:92, col:93> 'int' prefix '!' cannot overflow
    |         | |     `-ImplicitCastExpr 0x56537c9a2938 <col:93> '_Bool' <LValueToRValue>
    |         | |       `-DeclRefExpr 0x56537c9a2918 <col:93> '_Bool' lvalue Var 0x56537c995fc8 'y$w_buff1_used' '_Bool'
    |         | `-BinaryOperator 0x56537c9a2a48 <col:111, col:131> 'int' '&&'
    |         |   |-UnaryOperator 0x56537c9a29e0 <col:111, col:112> 'int' prefix '!' cannot overflow
    |         |   | `-ImplicitCastExpr 0x56537c9a29c8 <col:112> '_Bool' <LValueToRValue>
    |         |   |   `-DeclRefExpr 0x56537c9a29a8 <col:112> '_Bool' lvalue Var 0x56537c995940 'y$r_buff0_thd0' '_Bool'
    |         |   `-UnaryOperator 0x56537c9a2a30 <col:130, col:131> 'int' prefix '!' cannot overflow
    |         |     `-ImplicitCastExpr 0x56537c9a2a18 <col:131> '_Bool' <LValueToRValue>
    |         |       `-DeclRefExpr 0x56537c9a29f8 <col:131> '_Bool' lvalue Var 0x56537c995b78 'y$r_buff1_thd0' '_Bool'
    |         |-ImplicitCastExpr 0x56537c9a2cc0 <col:148> 'int' <IntegralCast>
    |         | `-ImplicitCastExpr 0x56537c9a2ca8 <col:148> '_Bool' <LValueToRValue>
    |         |   `-DeclRefExpr 0x56537c9a2a88 <col:148> '_Bool' lvalue Var 0x56537c995fc8 'y$w_buff1_used' '_Bool'
    |         `-ParenExpr 0x56537c9a2c88 <col:165, col:220> 'int'
    |           `-ConditionalOperator 0x56537c9a2c58 <col:166, col:219> 'int'
    |             |-BinaryOperator 0x56537c9a2b48 <col:166, col:184> 'int' '&&'
    |             | |-ImplicitCastExpr 0x56537c9a2b00 <col:166> 'int' <IntegralCast>
    |             | | `-ImplicitCastExpr 0x56537c9a2ae8 <col:166> '_Bool' <LValueToRValue>
    |             | |   `-DeclRefExpr 0x56537c9a2aa8 <col:166> '_Bool' lvalue Var 0x56537c995ed0 'y$w_buff0_used' '_Bool'
    |             | `-ImplicitCastExpr 0x56537c9a2b30 <col:184> 'int' <IntegralCast>
    |             |   `-ImplicitCastExpr 0x56537c9a2b18 <col:184> '_Bool' <LValueToRValue>
    |             |     `-DeclRefExpr 0x56537c9a2ac8 <col:184> '_Bool' lvalue Var 0x56537c995940 'y$r_buff0_thd0' '_Bool'
    |             |-ImplicitCastExpr 0x56537c9a2c28 <col:201, col:208> 'int' <IntegralCast>
    |             | `-CStyleCastExpr 0x56537c9a2b98 <col:201, col:208> '_Bool' <IntegralToBoolean>
    |             |   `-IntegerLiteral 0x56537c9a2b68 <col:208> 'int' 0
    |             `-ImplicitCastExpr 0x56537c9a2c40 <col:212, col:219> 'int' <IntegralCast>
    |               `-CStyleCastExpr 0x56537c9a2c00 <col:212, col:219> '_Bool' <IntegralToBoolean>
    |                 `-IntegerLiteral 0x56537c9a2bd0 <col:219> 'int' 0
    |-BinaryOperator 0x56537c9a3378 <line:836:3, col:227> '_Bool' '='
    | |-DeclRefExpr 0x56537c9a2df0 <col:3> '_Bool' lvalue Var 0x56537c995940 'y$r_buff0_thd0' '_Bool'
    | `-ImplicitCastExpr 0x56537c9a3360 <col:20, col:227> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x56537c9a3330 <col:20, col:227> 'int'
    |     |-ImplicitCastExpr 0x56537c9a32e8 <col:20> 'int' <IntegralCast>
    |     | `-ImplicitCastExpr 0x56537c9a32d0 <col:20> '_Bool' <LValueToRValue>
    |     |   `-DeclRefExpr 0x56537c9a2e10 <col:20> '_Bool' lvalue Var 0x56537c9960b8 'weak$$choice2' '_Bool'
    |     |-ImplicitCastExpr 0x56537c9a3318 <col:36> 'int' <IntegralCast>
    |     | `-ImplicitCastExpr 0x56537c9a3300 <col:36> '_Bool' <LValueToRValue>
    |     |   `-DeclRefExpr 0x56537c9a2e30 <col:36> '_Bool' lvalue Var 0x56537c995940 'y$r_buff0_thd0' '_Bool'
    |     `-ParenExpr 0x56537c9a32b0 <col:53, col:227> 'int'
    |       `-ConditionalOperator 0x56537c9a3280 <col:54, col:226> 'int'
    |         |-BinaryOperator 0x56537c9a3040 <col:54, col:131> 'int' '||'
    |         | |-BinaryOperator 0x56537c9a2f60 <col:54, col:93> 'int' '||'
    |         | | |-UnaryOperator 0x56537c9a2e88 <col:54, col:55> 'int' prefix '!' cannot overflow
    |         | | | `-ImplicitCastExpr 0x56537c9a2e70 <col:55> '_Bool' <LValueToRValue>
    |         | | |   `-DeclRefExpr 0x56537c9a2e50 <col:55> '_Bool' lvalue Var 0x56537c995ed0 'y$w_buff0_used' '_Bool'
    |         | | `-BinaryOperator 0x56537c9a2f40 <col:73, col:93> 'int' '&&'
    |         | |   |-UnaryOperator 0x56537c9a2ed8 <col:73, col:74> 'int' prefix '!' cannot overflow
    |         | |   | `-ImplicitCastExpr 0x56537c9a2ec0 <col:74> '_Bool' <LValueToRValue>
    |         | |   |   `-DeclRefExpr 0x56537c9a2ea0 <col:74> '_Bool' lvalue Var 0x56537c995940 'y$r_buff0_thd0' '_Bool'
    |         | |   `-UnaryOperator 0x56537c9a2f28 <col:92, col:93> 'int' prefix '!' cannot overflow
    |         | |     `-ImplicitCastExpr 0x56537c9a2f10 <col:93> '_Bool' <LValueToRValue>
    |         | |       `-DeclRefExpr 0x56537c9a2ef0 <col:93> '_Bool' lvalue Var 0x56537c995fc8 'y$w_buff1_used' '_Bool'
    |         | `-BinaryOperator 0x56537c9a3020 <col:111, col:131> 'int' '&&'
    |         |   |-UnaryOperator 0x56537c9a2fb8 <col:111, col:112> 'int' prefix '!' cannot overflow
    |         |   | `-ImplicitCastExpr 0x56537c9a2fa0 <col:112> '_Bool' <LValueToRValue>
    |         |   |   `-DeclRefExpr 0x56537c9a2f80 <col:112> '_Bool' lvalue Var 0x56537c995940 'y$r_buff0_thd0' '_Bool'
    |         |   `-UnaryOperator 0x56537c9a3008 <col:130, col:131> 'int' prefix '!' cannot overflow
    |         |     `-ImplicitCastExpr 0x56537c9a2ff0 <col:131> '_Bool' <LValueToRValue>
    |         |       `-DeclRefExpr 0x56537c9a2fd0 <col:131> '_Bool' lvalue Var 0x56537c995b78 'y$r_buff1_thd0' '_Bool'
    |         |-ImplicitCastExpr 0x56537c9a3268 <col:148> 'int' <IntegralCast>
    |         | `-ImplicitCastExpr 0x56537c9a3250 <col:148> '_Bool' <LValueToRValue>
    |         |   `-DeclRefExpr 0x56537c9a3060 <col:148> '_Bool' lvalue Var 0x56537c995940 'y$r_buff0_thd0' '_Bool'
    |         `-ParenExpr 0x56537c9a3230 <col:165, col:226> 'int'
    |           `-ConditionalOperator 0x56537c9a3200 <col:166, col:212> 'int'
    |             |-BinaryOperator 0x56537c9a3120 <col:166, col:184> 'int' '&&'
    |             | |-ImplicitCastExpr 0x56537c9a30d8 <col:166> 'int' <IntegralCast>
    |             | | `-ImplicitCastExpr 0x56537c9a30c0 <col:166> '_Bool' <LValueToRValue>
    |             | |   `-DeclRefExpr 0x56537c9a3080 <col:166> '_Bool' lvalue Var 0x56537c995ed0 'y$w_buff0_used' '_Bool'
    |             | `-ImplicitCastExpr 0x56537c9a3108 <col:184> 'int' <IntegralCast>
    |             |   `-ImplicitCastExpr 0x56537c9a30f0 <col:184> '_Bool' <LValueToRValue>
    |             |     `-DeclRefExpr 0x56537c9a30a0 <col:184> '_Bool' lvalue Var 0x56537c995940 'y$r_buff0_thd0' '_Bool'
    |             |-ImplicitCastExpr 0x56537c9a31b8 <col:201, col:208> 'int' <IntegralCast>
    |             | `-CStyleCastExpr 0x56537c9a3170 <col:201, col:208> '_Bool' <IntegralToBoolean>
    |             |   `-IntegerLiteral 0x56537c9a3140 <col:208> 'int' 0
    |             `-ImplicitCastExpr 0x56537c9a31e8 <col:212> 'int' <IntegralCast>
    |               `-ImplicitCastExpr 0x56537c9a31d0 <col:212> '_Bool' <LValueToRValue>
    |                 `-DeclRefExpr 0x56537c9a3198 <col:212> '_Bool' lvalue Var 0x56537c995940 'y$r_buff0_thd0' '_Bool'
    |-BinaryOperator 0x56537c9a3940 <line:837:3, col:221> '_Bool' '='
    | |-DeclRefExpr 0x56537c9a3398 <col:3> '_Bool' lvalue Var 0x56537c995b78 'y$r_buff1_thd0' '_Bool'
    | `-ImplicitCastExpr 0x56537c9a3928 <col:20, col:221> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x56537c9a38f8 <col:20, col:221> 'int'
    |     |-ImplicitCastExpr 0x56537c9a38b0 <col:20> 'int' <IntegralCast>
    |     | `-ImplicitCastExpr 0x56537c9a3898 <col:20> '_Bool' <LValueToRValue>
    |     |   `-DeclRefExpr 0x56537c9a33b8 <col:20> '_Bool' lvalue Var 0x56537c9960b8 'weak$$choice2' '_Bool'
    |     |-ImplicitCastExpr 0x56537c9a38e0 <col:36> 'int' <IntegralCast>
    |     | `-ImplicitCastExpr 0x56537c9a38c8 <col:36> '_Bool' <LValueToRValue>
    |     |   `-DeclRefExpr 0x56537c9a33d8 <col:36> '_Bool' lvalue Var 0x56537c995b78 'y$r_buff1_thd0' '_Bool'
    |     `-ParenExpr 0x56537c9a3878 <col:53, col:221> 'int'
    |       `-ConditionalOperator 0x56537c9a3848 <col:54, col:220> 'int'
    |         |-BinaryOperator 0x56537c9a35e8 <col:54, col:131> 'int' '||'
    |         | |-BinaryOperator 0x56537c9a3508 <col:54, col:93> 'int' '||'
    |         | | |-UnaryOperator 0x56537c9a3430 <col:54, col:55> 'int' prefix '!' cannot overflow
    |         | | | `-ImplicitCastExpr 0x56537c9a3418 <col:55> '_Bool' <LValueToRValue>
    |         | | |   `-DeclRefExpr 0x56537c9a33f8 <col:55> '_Bool' lvalue Var 0x56537c995ed0 'y$w_buff0_used' '_Bool'
    |         | | `-BinaryOperator 0x56537c9a34e8 <col:73, col:93> 'int' '&&'
    |         | |   |-UnaryOperator 0x56537c9a3480 <col:73, col:74> 'int' prefix '!' cannot overflow
    |         | |   | `-ImplicitCastExpr 0x56537c9a3468 <col:74> '_Bool' <LValueToRValue>
    |         | |   |   `-DeclRefExpr 0x56537c9a3448 <col:74> '_Bool' lvalue Var 0x56537c995940 'y$r_buff0_thd0' '_Bool'
    |         | |   `-UnaryOperator 0x56537c9a34d0 <col:92, col:93> 'int' prefix '!' cannot overflow
    |         | |     `-ImplicitCastExpr 0x56537c9a34b8 <col:93> '_Bool' <LValueToRValue>
    |         | |       `-DeclRefExpr 0x56537c9a3498 <col:93> '_Bool' lvalue Var 0x56537c995fc8 'y$w_buff1_used' '_Bool'
    |         | `-BinaryOperator 0x56537c9a35c8 <col:111, col:131> 'int' '&&'
    |         |   |-UnaryOperator 0x56537c9a3560 <col:111, col:112> 'int' prefix '!' cannot overflow
    |         |   | `-ImplicitCastExpr 0x56537c9a3548 <col:112> '_Bool' <LValueToRValue>
    |         |   |   `-DeclRefExpr 0x56537c9a3528 <col:112> '_Bool' lvalue Var 0x56537c995940 'y$r_buff0_thd0' '_Bool'
    |         |   `-UnaryOperator 0x56537c9a35b0 <col:130, col:131> 'int' prefix '!' cannot overflow
    |         |     `-ImplicitCastExpr 0x56537c9a3598 <col:131> '_Bool' <LValueToRValue>
    |         |       `-DeclRefExpr 0x56537c9a3578 <col:131> '_Bool' lvalue Var 0x56537c995b78 'y$r_buff1_thd0' '_Bool'
    |         |-ImplicitCastExpr 0x56537c9a3830 <col:148> 'int' <IntegralCast>
    |         | `-ImplicitCastExpr 0x56537c9a3818 <col:148> '_Bool' <LValueToRValue>
    |         |   `-DeclRefExpr 0x56537c9a3608 <col:148> '_Bool' lvalue Var 0x56537c995b78 'y$r_buff1_thd0' '_Bool'
    |         `-ParenExpr 0x56537c9a37f8 <col:165, col:220> 'int'
    |           `-ConditionalOperator 0x56537c9a37c8 <col:166, col:219> 'int'
    |             |-BinaryOperator 0x56537c9a36c8 <col:166, col:184> 'int' '&&'
    |             | |-ImplicitCastExpr 0x56537c9a3680 <col:166> 'int' <IntegralCast>
    |             | | `-ImplicitCastExpr 0x56537c9a3668 <col:166> '_Bool' <LValueToRValue>
    |             | |   `-DeclRefExpr 0x56537c9a3628 <col:166> '_Bool' lvalue Var 0x56537c995ed0 'y$w_buff0_used' '_Bool'
    |             | `-ImplicitCastExpr 0x56537c9a36b0 <col:184> 'int' <IntegralCast>
    |             |   `-ImplicitCastExpr 0x56537c9a3698 <col:184> '_Bool' <LValueToRValue>
    |             |     `-DeclRefExpr 0x56537c9a3648 <col:184> '_Bool' lvalue Var 0x56537c995940 'y$r_buff0_thd0' '_Bool'
    |             |-ImplicitCastExpr 0x56537c9a3798 <col:201, col:208> 'int' <IntegralCast>
    |             | `-CStyleCastExpr 0x56537c9a3718 <col:201, col:208> '_Bool' <IntegralToBoolean>
    |             |   `-IntegerLiteral 0x56537c9a36e8 <col:208> 'int' 0
    |             `-ImplicitCastExpr 0x56537c9a37b0 <col:212, col:219> 'int' <IntegralCast>
    |               `-CStyleCastExpr 0x56537c9a3770 <col:212, col:219> '_Bool' <IntegralToBoolean>
    |                 `-IntegerLiteral 0x56537c9a3740 <col:219> 'int' 0
    |-BinaryOperator 0x56537c9a3c30 <line:838:3, col:113> '_Bool' '='
    | |-DeclRefExpr 0x56537c9a3960 <col:3> '_Bool' lvalue Var 0x56537c995590 'main$tmp_guard1' '_Bool'
    | `-ImplicitCastExpr 0x56537c9a3c18 <col:21, col:113> '_Bool' <IntegralToBoolean>
    |   `-UnaryOperator 0x56537c9a3c00 <col:21, col:113> 'int' prefix '!' cannot overflow
    |     `-ParenExpr 0x56537c9a3be0 <col:22, col:113> 'int'
    |       `-BinaryOperator 0x56537c9a3ba0 <col:23, col:112> 'int' '&&'
    |         |-BinaryOperator 0x56537c9a3b08 <col:23, col:84> 'int' '&&'
    |         | |-BinaryOperator 0x56537c9a3a70 <col:23, col:56> 'int' '&&'
    |         | | |-BinaryOperator 0x56537c9a39d8 <col:23, col:28> 'int' '=='
    |         | | | |-ImplicitCastExpr 0x56537c9a39c0 <col:23> 'int' <LValueToRValue>
    |         | | | | `-DeclRefExpr 0x56537c9a3980 <col:23> 'int' lvalue Var 0x56537c9957b0 'y' 'int'
    |         | | | `-IntegerLiteral 0x56537c9a39a0 <col:28> 'int' 2
    |         | | `-BinaryOperator 0x56537c9a3a50 <col:33, col:56> 'int' '=='
    |         | |   |-ImplicitCastExpr 0x56537c9a3a38 <col:33> 'int' <LValueToRValue>
    |         | |   | `-DeclRefExpr 0x56537c9a39f8 <col:33> 'int' lvalue Var 0x56537c995240 '__unbuffered_p1_EAX' 'int'
    |         | |   `-IntegerLiteral 0x56537c9a3a18 <col:56> 'int' 1
    |         | `-BinaryOperator 0x56537c9a3ae8 <col:61, col:84> 'int' '=='
    |         |   |-ImplicitCastExpr 0x56537c9a3ad0 <col:61> 'int' <LValueToRValue>
    |         |   | `-DeclRefExpr 0x56537c9a3a90 <col:61> 'int' lvalue Var 0x56537c995360 '__unbuffered_p2_EAX' 'int'
    |         |   `-IntegerLiteral 0x56537c9a3ab0 <col:84> 'int' 1
    |         `-BinaryOperator 0x56537c9a3b80 <col:89, col:112> 'int' '=='
    |           |-ImplicitCastExpr 0x56537c9a3b68 <col:89> 'int' <LValueToRValue>
    |           | `-DeclRefExpr 0x56537c9a3b28 <col:89> 'int' lvalue Var 0x56537c995480 '__unbuffered_p2_EBX' 'int'
    |           `-IntegerLiteral 0x56537c9a3b48 <col:112> 'int' 1
    |-BinaryOperator 0x56537c9a3d60 <line:839:3, col:37> 'int' '='
    | |-DeclRefExpr 0x56537c9a3c50 <col:3> 'int' lvalue Var 0x56537c9957b0 'y' 'int'
    | `-ConditionalOperator 0x56537c9a3d30 <col:7, col:37> 'int'
    |   |-ImplicitCastExpr 0x56537c9a3ce8 <col:7> 'int' <IntegralCast>
    |   | `-ImplicitCastExpr 0x56537c9a3cd0 <col:7> '_Bool' <LValueToRValue>
    |   |   `-DeclRefExpr 0x56537c9a3c70 <col:7> '_Bool' lvalue Var 0x56537c995848 'y$flush_delayed' '_Bool'
    |   |-ImplicitCastExpr 0x56537c9a3d00 <col:25> 'int' <LValueToRValue>
    |   | `-DeclRefExpr 0x56537c9a3c90 <col:25> 'int' lvalue Var 0x56537c9958c8 'y$mem_tmp' 'int'
    |   `-ImplicitCastExpr 0x56537c9a3d18 <col:37> 'int' <LValueToRValue>
    |     `-DeclRefExpr 0x56537c9a3cb0 <col:37> 'int' lvalue Var 0x56537c9957b0 'y' 'int'
    |-BinaryOperator 0x56537c9a3df8 <line:840:3, col:28> '_Bool' '='
    | |-DeclRefExpr 0x56537c9a3d80 <col:3> '_Bool' lvalue Var 0x56537c995848 'y$flush_delayed' '_Bool'
    | `-CStyleCastExpr 0x56537c9a3dd0 <col:21, col:28> '_Bool' <IntegralToBoolean>
    |   `-IntegerLiteral 0x56537c9a3da0 <col:28> 'int' 0
    |-CallExpr 0x56537c9a3e50 <line:841:3, col:25> 'void'
    | `-ImplicitCastExpr 0x56537c9a3e38 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x56537c9a3e18 <col:3> 'void ()' Function 0x56537c93bf00 '__VERIFIER_atomic_end' 'void ()'
    |-CallExpr 0x56537c9a3ec8 <line:842:3, col:36> 'void'
    | |-ImplicitCastExpr 0x56537c9a3eb0 <col:3> 'void (*)(int)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x56537c9a3e70 <col:3> 'void (int)' Function 0x56537c93bbc8 '__VERIFIER_assert' 'void (int)'
    | `-ImplicitCastExpr 0x56537c9a3f08 <col:21> 'int' <IntegralCast>
    |   `-ImplicitCastExpr 0x56537c9a3ef0 <col:21> '_Bool' <LValueToRValue>
    |     `-DeclRefExpr 0x56537c9a3e90 <col:21> '_Bool' lvalue Var 0x56537c995590 'main$tmp_guard1' '_Bool'
    `-ReturnStmt 0x56537c9a3f40 <line:843:3, col:10>
      `-IntegerLiteral 0x56537c9a3f20 <col:10> 'int' 0
