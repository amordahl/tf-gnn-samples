TranslationUnitDecl 0x559b93469e18 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x559b9346a6d8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x559b9346a3b0 '__int128'
|-TypedefDecl 0x559b9346a748 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x559b9346a3d0 'unsigned __int128'
|-TypedefDecl 0x559b9346aa50 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x559b9346a820 'struct __NSConstantString_tag'
|   `-Record 0x559b9346a7a0 '__NSConstantString_tag'
|-TypedefDecl 0x559b9346aaf8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x559b9346aab0 'char *'
|   `-BuiltinType 0x559b93469eb0 'char'
|-TypedefDecl 0x559b934a9650 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'struct __va_list_tag [1]'
| `-ConstantArrayType 0x559b9346ad90 'struct __va_list_tag [1]' 1 
|   `-RecordType 0x559b9346abd0 'struct __va_list_tag'
|     `-Record 0x559b9346ab50 '__va_list_tag'
|-FunctionDecl 0x559b934a9790 <./split_0/safe022_pso.opt_false-unreach-call.i:1:1, col:34> col:13 used __VERIFIER_assume 'void (int)' extern
| `-ParmVarDecl 0x559b934a96c0 <col:31> col:34 'int'
|-FunctionDecl 0x559b934a9958 <line:2:1, col:45> col:15 used __VERIFIER_nondet_pointer 'void *(void)' extern
|-FunctionDecl 0x559b934a9a80 <line:3:1, col:61> col:13 used __VERIFIER_error 'void () __attribute__((noreturn))' extern
|-FunctionDecl 0x559b934a9bc8 <line:4:1, col:99> col:6 used __VERIFIER_assert 'void (int)'
| |-ParmVarDecl 0x559b934a9b38 <col:24, col:28> col:28 used expression 'int'
| `-CompoundStmt 0x559b934a9df8 <col:40, col:99>
|   |-IfStmt 0x559b934a9dc8 <col:42, col:88>
|   | |-UnaryOperator 0x559b934a9ca8 <col:46, col:47> 'int' prefix '!' cannot overflow
|   | | `-ImplicitCastExpr 0x559b934a9c90 <col:47> 'int' <LValueToRValue>
|   | |   `-DeclRefExpr 0x559b934a9c70 <col:47> 'int' lvalue ParmVar 0x559b934a9b38 'expression' 'int'
|   | `-CompoundStmt 0x559b934a9db0 <col:59, col:88>
|   |   `-LabelStmt 0x559b934a9d98 <col:61, col:85> 'ERROR'
|   |     `-CallExpr 0x559b934a9d28 <col:68, col:85> 'void'
|   |       `-ImplicitCastExpr 0x559b934a9d10 <col:68> 'void (*)() __attribute__((noreturn))' <FunctionToPointerDecay>
|   |         `-DeclRefExpr 0x559b934a9cc0 <col:68> 'void () __attribute__((noreturn))' Function 0x559b934a9a80 '__VERIFIER_error' 'void () __attribute__((noreturn))'
|   |-NullStmt 0x559b934a9de0 <col:89>
|   `-ReturnStmt 0x559b934a9de8 <col:91>
|-FunctionDecl 0x559b934a9e40 <line:5:1, col:37> col:13 used __VERIFIER_atomic_begin 'void ()' extern
|-FunctionDecl 0x559b934a9f00 <line:6:1, col:35> col:13 used __VERIFIER_atomic_end 'void ()' extern
|-FunctionDecl 0x559b934aa280 <line:8:1, line:10:76> line:8:13 __assert_fail 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x559b934a9fb8 <col:28, col:40> col:40 __assertion 'const char *'
| |-ParmVarDecl 0x559b934aa038 <col:53, col:65> col:65 __file 'const char *'
| |-ParmVarDecl 0x559b934aa0b8 <line:9:7, col:20> col:20 __line 'unsigned int'
| |-ParmVarDecl 0x559b934aa138 <col:28, col:40> col:40 __function 'const char *'
| `-NoThrowAttr 0x559b934aa340 <line:10:22>
|-FunctionDecl 0x559b934d0390 <line:11:1, line:13:76> line:11:13 __assert_perror_fail 'void (int, const char *, unsigned int, const char *) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x559b934aa3b0 <col:35, col:39> col:39 __errnum 'int'
| |-ParmVarDecl 0x559b934aa430 <col:49, col:61> col:61 __file 'const char *'
| |-ParmVarDecl 0x559b934aa4b0 <line:12:7, col:20> col:20 __line 'unsigned int'
| |-ParmVarDecl 0x559b934aa530 <col:28, col:40> col:40 __function 'const char *'
| `-NoThrowAttr 0x559b934d0450 <line:13:22>
|-FunctionDecl 0x559b934d0700 <line:14:1, line:15:76> line:14:13 __assert 'void (const char *, const char *, int) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x559b934d04c0 <col:23, col:35> col:35 __assertion 'const char *'
| |-ParmVarDecl 0x559b934d0540 <col:48, col:60> col:60 __file 'const char *'
| |-ParmVarDecl 0x559b934d05c0 <col:68, col:72> col:72 __line 'int'
| `-NoThrowAttr 0x559b934d07b8 <line:15:22>
|-TypedefDecl 0x559b934d0828 <line:17:1, col:23> col:23 __u_char 'unsigned char'
| `-BuiltinType 0x559b93469f70 'unsigned char'
|-TypedefDecl 0x559b934d0898 <line:18:1, col:28> col:28 __u_short 'unsigned short'
| `-BuiltinType 0x559b93469f90 'unsigned short'
|-TypedefDecl 0x559b934d0908 <line:19:1, col:22> col:22 __u_int 'unsigned int'
| `-BuiltinType 0x559b93469fb0 'unsigned int'
|-TypedefDecl 0x559b934d0978 <line:20:1, col:27> col:27 __u_long 'unsigned long'
| `-BuiltinType 0x559b93469fd0 'unsigned long'
|-TypedefDecl 0x559b934d09e8 <line:21:1, col:21> col:21 __int8_t 'signed char'
| `-BuiltinType 0x559b93469ed0 'signed char'
|-TypedefDecl 0x559b934d0a58 <line:22:1, col:23> col:23 __uint8_t 'unsigned char'
| `-BuiltinType 0x559b93469f70 'unsigned char'
|-TypedefDecl 0x559b934d0ac8 <line:23:1, col:26> col:26 __int16_t 'short'
| `-BuiltinType 0x559b93469ef0 'short'
|-TypedefDecl 0x559b934d0b38 <line:24:1, col:28> col:28 __uint16_t 'unsigned short'
| `-BuiltinType 0x559b93469f90 'unsigned short'
|-TypedefDecl 0x559b934d0ba8 <line:25:1, col:20> col:20 __int32_t 'int'
| `-BuiltinType 0x559b93469f10 'int'
|-TypedefDecl 0x559b934d0c18 <line:26:1, col:22> col:22 __uint32_t 'unsigned int'
| `-BuiltinType 0x559b93469fb0 'unsigned int'
|-TypedefDecl 0x559b934d0c88 <line:27:1, col:25> col:25 __int64_t 'long'
| `-BuiltinType 0x559b93469f30 'long'
|-TypedefDecl 0x559b934d0cf8 <line:28:1, col:27> col:27 referenced __uint64_t 'unsigned long'
| `-BuiltinType 0x559b93469fd0 'unsigned long'
|-TypedefDecl 0x559b934d0d68 <line:29:1, col:18> col:18 referenced __quad_t 'long'
| `-BuiltinType 0x559b93469f30 'long'
|-TypedefDecl 0x559b934d0dd8 <line:30:1, col:27> col:27 __u_quad_t 'unsigned long'
| `-BuiltinType 0x559b93469fd0 'unsigned long'
|-TypedefDecl 0x559b934d0e48 <line:31:1, col:27> col:27 __dev_t 'unsigned long'
| `-BuiltinType 0x559b93469fd0 'unsigned long'
|-TypedefDecl 0x559b934d0eb8 <line:32:1, col:22> col:22 __uid_t 'unsigned int'
| `-BuiltinType 0x559b93469fb0 'unsigned int'
|-TypedefDecl 0x559b934d0f28 <line:33:1, col:22> col:22 __gid_t 'unsigned int'
| `-BuiltinType 0x559b93469fb0 'unsigned int'
|-TypedefDecl 0x559b934d0f98 <line:34:1, col:27> col:27 __ino_t 'unsigned long'
| `-BuiltinType 0x559b93469fd0 'unsigned long'
|-TypedefDecl 0x559b934d1008 <line:35:1, col:27> col:27 __ino64_t 'unsigned long'
| `-BuiltinType 0x559b93469fd0 'unsigned long'
|-TypedefDecl 0x559b934d1078 <line:36:1, col:22> col:22 __mode_t 'unsigned int'
| `-BuiltinType 0x559b93469fb0 'unsigned int'
|-TypedefDecl 0x559b934d10e8 <line:37:1, col:27> col:27 __nlink_t 'unsigned long'
| `-BuiltinType 0x559b93469fd0 'unsigned long'
|-TypedefDecl 0x559b934d1158 <line:38:1, col:18> col:18 __off_t 'long'
| `-BuiltinType 0x559b93469f30 'long'
|-TypedefDecl 0x559b934d11c8 <line:39:1, col:18> col:18 referenced __off64_t 'long'
| `-BuiltinType 0x559b93469f30 'long'
|-TypedefDecl 0x559b934d1238 <line:40:1, col:13> col:13 referenced __pid_t 'int'
| `-BuiltinType 0x559b93469f10 'int'
|-RecordDecl 0x559b934d1290 <line:41:9, col:32> col:9 struct definition
| `-FieldDecl 0x559b934d1408 <col:18, col:29> col:22 __val 'int [2]'
|-TypedefDecl 0x559b934d14c0 <col:1, col:34> col:34 __fsid_t 'struct __fsid_t':'__fsid_t'
| `-ElaboratedType 0x559b934d1460 'struct __fsid_t' sugar
|   `-RecordType 0x559b934d1310 '__fsid_t'
|     `-Record 0x559b934d1290 ''
|-TypedefDecl 0x559b934d1548 <line:42:1, col:18> col:18 referenced __clock_t 'long'
| `-BuiltinType 0x559b93469f30 'long'
|-TypedefDecl 0x559b934d15b8 <line:43:1, col:27> col:27 __rlim_t 'unsigned long'
| `-BuiltinType 0x559b93469fd0 'unsigned long'
|-TypedefDecl 0x559b934d1628 <line:44:1, col:27> col:27 __rlim64_t 'unsigned long'
| `-BuiltinType 0x559b93469fd0 'unsigned long'
|-TypedefDecl 0x559b934d1698 <line:45:1, col:22> col:22 __id_t 'unsigned int'
| `-BuiltinType 0x559b93469fb0 'unsigned int'
|-TypedefDecl 0x559b934d1708 <line:46:1, col:18> col:18 referenced __time_t 'long'
| `-BuiltinType 0x559b93469f30 'long'
|-TypedefDecl 0x559b934d1778 <line:47:1, col:22> col:22 __useconds_t 'unsigned int'
| `-BuiltinType 0x559b93469fb0 'unsigned int'
|-TypedefDecl 0x559b934d17e8 <line:48:1, col:18> col:18 __suseconds_t 'long'
| `-BuiltinType 0x559b93469f30 'long'
|-TypedefDecl 0x559b934d1858 <line:49:1, col:13> col:13 __daddr_t 'int'
| `-BuiltinType 0x559b93469f10 'int'
|-TypedefDecl 0x559b934d18c8 <line:50:1, col:13> col:13 __key_t 'int'
| `-BuiltinType 0x559b93469f10 'int'
|-TypedefDecl 0x559b934d1938 <line:51:1, col:13> col:13 referenced __clockid_t 'int'
| `-BuiltinType 0x559b93469f10 'int'
|-TypedefDecl 0x559b934d19a8 <line:52:1, col:16> col:16 referenced __timer_t 'void *'
| `-PointerType 0x559b9346a630 'void *'
|   `-BuiltinType 0x559b93469e70 'void'
|-TypedefDecl 0x559b934d1a18 <line:53:1, col:18> col:18 __blksize_t 'long'
| `-BuiltinType 0x559b93469f30 'long'
|-TypedefDecl 0x559b934d1a88 <line:54:1, col:18> col:18 __blkcnt_t 'long'
| `-BuiltinType 0x559b93469f30 'long'
|-TypedefDecl 0x559b934d1af8 <line:55:1, col:18> col:18 __blkcnt64_t 'long'
| `-BuiltinType 0x559b93469f30 'long'
|-TypedefDecl 0x559b934d1b68 <line:56:1, col:27> col:27 __fsblkcnt_t 'unsigned long'
| `-BuiltinType 0x559b93469fd0 'unsigned long'
|-TypedefDecl 0x559b934d1bd8 <line:57:1, col:27> col:27 __fsblkcnt64_t 'unsigned long'
| `-BuiltinType 0x559b93469fd0 'unsigned long'
|-TypedefDecl 0x559b934d1c48 <line:58:1, col:27> col:27 __fsfilcnt_t 'unsigned long'
| `-BuiltinType 0x559b93469fd0 'unsigned long'
|-TypedefDecl 0x559b934d1cb8 <line:59:1, col:27> col:27 __fsfilcnt64_t 'unsigned long'
| `-BuiltinType 0x559b93469fd0 'unsigned long'
|-TypedefDecl 0x559b934d1d28 <line:60:1, col:18> col:18 __fsword_t 'long'
| `-BuiltinType 0x559b93469f30 'long'
|-TypedefDecl 0x559b934d1d98 <line:61:1, col:18> col:18 __ssize_t 'long'
| `-BuiltinType 0x559b93469f30 'long'
|-TypedefDecl 0x559b934d1e08 <line:62:1, col:18> col:18 referenced __syscall_slong_t 'long'
| `-BuiltinType 0x559b93469f30 'long'
|-TypedefDecl 0x559b934d1e78 <line:63:1, col:27> col:27 __syscall_ulong_t 'unsigned long'
| `-BuiltinType 0x559b93469fd0 'unsigned long'
|-TypedefDecl 0x559b934d1f08 <line:64:1, col:19> col:19 __loff_t '__off64_t':'long'
| `-TypedefType 0x559b934d1ed0 '__off64_t' sugar
|   |-Typedef 0x559b934d11c8 '__off64_t'
|   `-BuiltinType 0x559b93469f30 'long'
|-TypedefDecl 0x559b934d2000 <line:65:1, col:19> col:19 __qaddr_t '__quad_t *'
| `-PointerType 0x559b934d1fc0 '__quad_t *'
|   `-TypedefType 0x559b934d1f60 '__quad_t' sugar
|     |-Typedef 0x559b934d0d68 '__quad_t'
|     `-BuiltinType 0x559b93469f30 'long'
|-TypedefDecl 0x559b934d2070 <line:66:1, col:15> col:15 __caddr_t 'char *'
| `-PointerType 0x559b9346aab0 'char *'
|   `-BuiltinType 0x559b93469eb0 'char'
|-TypedefDecl 0x559b934d20e0 <line:67:1, col:18> col:18 __intptr_t 'long'
| `-BuiltinType 0x559b93469f30 'long'
|-TypedefDecl 0x559b934d2150 <line:68:1, col:22> col:22 __socklen_t 'unsigned int'
| `-BuiltinType 0x559b93469fb0 'unsigned int'
|-FunctionDecl 0x559b934d2298 <line:69:1, line:73:1> line:70:1 __bswap_32 'unsigned int (unsigned int)' static inline
| |-ParmVarDecl 0x559b934d21c0 <col:13, col:26> col:26 used __bsx 'unsigned int'
| `-CompoundStmt 0x559b934d35e8 <line:71:1, line:73:1>
|   `-ReturnStmt 0x559b934d35d8 <line:72:3, col:34>
|     `-CallExpr 0x559b934d3598 <col:10, col:34> 'unsigned int'
|       |-ImplicitCastExpr 0x559b934d3580 <col:10> 'unsigned int (*)(unsigned int)' <BuiltinFnToFnPtr>
|       | `-DeclRefExpr 0x559b934d3510 <col:10> '<builtin fn type>' Function 0x559b934d3380 '__builtin_bswap32' 'unsigned int (unsigned int)'
|       `-ImplicitCastExpr 0x559b934d35c0 <col:29> 'unsigned int' <LValueToRValue>
|         `-DeclRefExpr 0x559b934d3530 <col:29> 'unsigned int' lvalue ParmVar 0x559b934d21c0 '__bsx' 'unsigned int'
|-FunctionDecl 0x559b934d3380 <col:10> col:10 implicit used __builtin_bswap32 'unsigned int (unsigned int)' extern
| |-ParmVarDecl 0x559b934d3420 <<invalid sloc>> <invalid sloc> 'unsigned int'
| |-NoThrowAttr 0x559b934d3490 <col:10> Implicit
| `-ConstAttr 0x559b934d34e8 <col:10> Implicit
|-FunctionDecl 0x559b934d3740 <line:74:1, line:78:1> line:75:1 __bswap_64 '__uint64_t (__uint64_t)' static inline
| |-ParmVarDecl 0x559b934d3638 <col:13, col:24> col:24 used __bsx '__uint64_t':'unsigned long'
| `-CompoundStmt 0x559b934d3a58 <line:76:1, line:78:1>
|   `-ReturnStmt 0x559b934d3a48 <line:77:3, col:34>
|     `-CallExpr 0x559b934d3a08 <col:10, col:34> 'unsigned long'
|       |-ImplicitCastExpr 0x559b934d39f0 <col:10> 'unsigned long (*)(unsigned long)' <BuiltinFnToFnPtr>
|       | `-DeclRefExpr 0x559b934d3978 <col:10> '<builtin fn type>' Function 0x559b934d37e8 '__builtin_bswap64' 'unsigned long (unsigned long)'
|       `-ImplicitCastExpr 0x559b934d3a30 <col:29> '__uint64_t':'unsigned long' <LValueToRValue>
|         `-DeclRefExpr 0x559b934d3998 <col:29> '__uint64_t':'unsigned long' lvalue ParmVar 0x559b934d3638 '__bsx' '__uint64_t':'unsigned long'
|-FunctionDecl 0x559b934d37e8 <col:10> col:10 implicit used __builtin_bswap64 'unsigned long (unsigned long)' extern
| |-ParmVarDecl 0x559b934d3888 <<invalid sloc>> <invalid sloc> 'unsigned long'
| |-NoThrowAttr 0x559b934d38f8 <col:10> Implicit
| `-ConstAttr 0x559b934d3950 <col:10> Implicit
|-TypedefDecl 0x559b934d3a88 <line:79:1, col:27> col:27 referenced size_t 'unsigned long'
| `-BuiltinType 0x559b93469fd0 'unsigned long'
|-TypedefDecl 0x559b934d3b18 <line:81:1, col:18> col:18 referenced time_t '__time_t':'long'
| `-TypedefType 0x559b934d3ae0 '__time_t' sugar
|   |-Typedef 0x559b934d1708 '__time_t'
|   `-BuiltinType 0x559b93469f30 'long'
|-RecordDecl 0x559b934d3b70 <line:84:1, line:88:3> line:84:8 struct timespec definition
| |-FieldDecl 0x559b934d3c28 <line:86:5, col:14> col:14 tv_sec '__time_t':'long'
| `-FieldDecl 0x559b934d3cb8 <line:87:5, col:23> col:23 tv_nsec '__syscall_slong_t':'long'
|-TypedefDecl 0x559b934d3d48 <line:89:1, col:17> col:17 referenced pid_t '__pid_t':'int'
| `-TypedefType 0x559b934d3d10 '__pid_t' sugar
|   |-Typedef 0x559b934d1238 '__pid_t'
|   `-BuiltinType 0x559b93469f10 'int'
|-RecordDecl 0x559b934d3da0 <line:90:1, line:93:3> line:90:8 struct sched_param definition
| `-FieldDecl 0x559b934d3e60 <line:92:5, col:9> col:9 __sched_priority 'int'
|-RecordDecl 0x559b934d3eb0 <line:96:1, line:99:3> line:96:8 struct __sched_param definition
| `-FieldDecl 0x559b934d3f70 <line:98:5, col:9> col:9 __sched_priority 'int'
|-TypedefDecl 0x559b934d3fd8 <line:100:1, col:27> col:27 referenced __cpu_mask 'unsigned long'
| `-BuiltinType 0x559b93469fd0 'unsigned long'
|-RecordDecl 0x559b934d4030 <line:101:9, line:104:1> line:101:9 struct definition
| `-FieldDecl 0x559b934d42c0 <line:103:3, col:53> col:14 __bits '__cpu_mask [64]'
|-TypedefDecl 0x559b934d53a0 <line:101:1, line:104:3> col:3 referenced cpu_set_t 'struct cpu_set_t':'cpu_set_t'
| `-ElaboratedType 0x559b934d4310 'struct cpu_set_t' sugar
|   `-RecordType 0x559b934d40b0 'cpu_set_t'
|     `-Record 0x559b934d4030 ''
|-FunctionDecl 0x559b934d5678 <line:106:1, line:107:42> line:106:12 __sched_cpucount 'int (size_t, const cpu_set_t *)' extern
| |-ParmVarDecl 0x559b934d5448 <col:30, col:37> col:37 __setsize 'size_t':'unsigned long'
| |-ParmVarDecl 0x559b934d5550 <col:48, col:65> col:65 __setp 'const cpu_set_t *'
| `-NoThrowAttr 0x559b934d5728 <line:107:19>
|-FunctionDecl 0x559b934d5900 <line:108:1, col:92> col:19 __sched_cpualloc 'cpu_set_t *(size_t)' extern
| |-ParmVarDecl 0x559b934d5790 <col:37, col:44> col:44 __count 'size_t':'unsigned long'
| `-NoThrowAttr 0x559b934d59a8 <col:69>
|-FunctionDecl 0x559b934d5b20 <line:109:1, col:87> col:13 __sched_cpufree 'void (cpu_set_t *)' extern
| |-ParmVarDecl 0x559b934d5a10 <col:30, col:41> col:41 __set 'cpu_set_t *'
| `-NoThrowAttr 0x559b934d5bc8 <col:64>
|-FunctionDecl 0x559b934d5e88 <line:112:1, line:113:45> line:112:12 sched_setparam 'int (__pid_t, const struct sched_param *)' extern
| |-ParmVarDecl 0x559b934d5c30 <col:28, col:36> col:36 __pid '__pid_t':'int'
| |-ParmVarDecl 0x559b934d5d68 <col:43, col:69> col:69 __param 'const struct sched_param *'
| `-NoThrowAttr 0x559b934d5f38 <line:113:22>
|-FunctionDecl 0x559b934d61b8 <line:114:1, col:111> col:12 sched_getparam 'int (__pid_t, struct sched_param *)' extern
| |-ParmVarDecl 0x559b934d5fa0 <col:28, col:36> col:36 __pid '__pid_t':'int'
| |-ParmVarDecl 0x559b934d6098 <col:43, col:63> col:63 __param 'struct sched_param *'
| `-NoThrowAttr 0x559b934d6268 <col:88>
|-FunctionDecl 0x559b934d6588 <line:115:1, line:116:85> line:115:12 sched_setscheduler 'int (__pid_t, int, const struct sched_param *)' extern
| |-ParmVarDecl 0x559b934d62d0 <col:32, col:40> col:40 __pid '__pid_t':'int'
| |-ParmVarDecl 0x559b934d63b0 <col:47, col:51> col:51 __policy 'int'
| |-ParmVarDecl 0x559b934d6440 <line:116:11, col:37> col:37 __param 'const struct sched_param *'
| `-NoThrowAttr 0x559b934d6640 <col:62>
|-FunctionDecl 0x559b934d67b8 <line:117:1, col:86> col:12 sched_getscheduler 'int (__pid_t)' extern
| |-ParmVarDecl 0x559b934d66a8 <col:32, col:40> col:40 __pid '__pid_t':'int'
| `-NoThrowAttr 0x559b934d6860 <col:63>
|-FunctionDecl 0x559b934d6988 <line:118:1, col:70> col:12 sched_yield 'int (void)' extern
| `-NoThrowAttr 0x559b934d6a28 <col:47>
|-FunctionDecl 0x559b934d6b30 <line:119:1, col:92> col:12 sched_get_priority_max 'int (int)' extern
| |-ParmVarDecl 0x559b934d6a98 <col:36, col:40> col:40 __algorithm 'int'
| `-NoThrowAttr 0x559b934d6bd8 <col:69>
|-FunctionDecl 0x559b934d6ce0 <line:120:1, col:92> col:12 sched_get_priority_min 'int (int)' extern
| |-ParmVarDecl 0x559b934d6c48 <col:36, col:40> col:40 __algorithm 'int'
| `-NoThrowAttr 0x559b934d6d88 <col:69>
|-FunctionDecl 0x559b934d7048 <line:121:1, col:111> col:12 sched_rr_get_interval 'int (__pid_t, struct timespec *)' extern
| |-ParmVarDecl 0x559b934d6df0 <col:35, col:43> col:43 __pid '__pid_t':'int'
| |-ParmVarDecl 0x559b934d6f28 <col:50, col:67> col:67 __t 'struct timespec *'
| `-NoThrowAttr 0x559b934d70f8 <col:88>
|-TypedefDecl 0x559b934d7188 <line:125:1, col:19> col:19 referenced clock_t '__clock_t':'long'
| `-TypedefType 0x559b934d7150 '__clock_t' sugar
|   |-Typedef 0x559b934d1548 '__clock_t'
|   `-BuiltinType 0x559b93469f30 'long'
|-TypedefDecl 0x559b934d7218 <line:128:1, col:21> col:21 referenced clockid_t '__clockid_t':'int'
| `-TypedefType 0x559b934d71e0 '__clockid_t' sugar
|   |-Typedef 0x559b934d1938 '__clockid_t'
|   `-BuiltinType 0x559b93469f10 'int'
|-TypedefDecl 0x559b934d72a8 <line:129:1, col:19> col:19 referenced timer_t '__timer_t':'void *'
| `-TypedefType 0x559b934d7270 '__timer_t' sugar
|   |-Typedef 0x559b934d19a8 '__timer_t'
|   `-PointerType 0x559b9346a630 'void *'
|     `-BuiltinType 0x559b93469e70 'void'
|-RecordDecl 0x559b934d7300 <line:131:1, line:144:1> line:131:8 struct tm definition
| |-FieldDecl 0x559b934d73d8 <line:133:3, col:7> col:7 tm_sec 'int'
| |-FieldDecl 0x559b934d7440 <line:134:3, col:7> col:7 tm_min 'int'
| |-FieldDecl 0x559b934d74a8 <line:135:3, col:7> col:7 tm_hour 'int'
| |-FieldDecl 0x559b934d7510 <line:136:3, col:7> col:7 tm_mday 'int'
| |-FieldDecl 0x559b934d7578 <line:137:3, col:7> col:7 tm_mon 'int'
| |-FieldDecl 0x559b934d75e0 <line:138:3, col:7> col:7 tm_year 'int'
| |-FieldDecl 0x559b934d7648 <line:139:3, col:7> col:7 tm_wday 'int'
| |-FieldDecl 0x559b934d76b0 <line:140:3, col:7> col:7 tm_yday 'int'
| |-FieldDecl 0x559b934d7718 <line:141:3, col:7> col:7 tm_isdst 'int'
| |-FieldDecl 0x559b934d7780 <line:142:3, col:12> col:12 tm_gmtoff 'long'
| `-FieldDecl 0x559b934d77e8 <line:143:3, col:15> col:15 tm_zone 'const char *'
|-RecordDecl 0x559b934d7838 <line:147:1, line:151:3> line:147:8 struct itimerspec definition
| |-FieldDecl 0x559b934d7908 <line:149:5, col:21> col:21 it_interval 'struct timespec':'struct timespec'
| `-FieldDecl 0x559b934d7978 <line:150:5, col:21> col:21 it_value 'struct timespec':'struct timespec'
|-RecordDecl 0x559b934d7a20 <line:152:1, col:8> col:8 struct sigevent
|-FunctionDecl 0x559b934d7bf0 <line:154:1, col:68> col:16 clock 'clock_t (void)' extern
| `-NoThrowAttr 0x559b934d7c90 <col:45>
|-FunctionDecl 0x559b934d7e70 <line:155:1, col:77> col:15 time 'time_t (time_t *)' extern
| |-ParmVarDecl 0x559b934d7d60 <col:21, col:29> col:29 __timer 'time_t *'
| `-NoThrowAttr 0x559b934d7f18 <col:54>
|-FunctionDecl 0x559b934d8118 <line:156:1, line:157:73> line:156:15 difftime 'double (time_t, time_t)' extern
| |-ParmVarDecl 0x559b934d7f80 <col:25, col:32> col:32 __time1 'time_t':'long'
| |-ParmVarDecl 0x559b934d7ff8 <col:41, col:48> col:48 __time0 'time_t':'long'
| |-NoThrowAttr 0x559b934d81c8 <line:157:22>
| `-ConstAttr 0x559b934d8220 <col:63>
|-FunctionDecl 0x559b934d9050 <line:158:1, col:79> col:15 mktime 'time_t (struct tm *)' extern
| |-ParmVarDecl 0x559b934d8318 <col:23, col:34> col:34 __tp 'struct tm *'
| `-NoThrowAttr 0x559b934d90f8 <col:56>
|-FunctionDecl 0x559b934d94a0 <line:159:1, line:161:77> line:159:15 strftime 'size_t (char *restrict, size_t, const char *restrict, const struct tm *restrict)' extern
| |-ParmVarDecl 0x559b934d9168 <col:25, col:42> col:42 __s 'char *restrict'
| |-ParmVarDecl 0x559b934d91e0 <col:47, col:54> col:54 __maxsize 'size_t':'unsigned long'
| |-ParmVarDecl 0x559b934d9260 <line:160:4, col:27> col:27 __format 'const char *restrict'
| |-ParmVarDecl 0x559b934d9358 <line:161:4, col:32> col:32 __tp 'const struct tm *restrict'
| `-NoThrowAttr 0x559b934d9560 <col:54>
|-RecordDecl 0x559b934d95b8 <line:163:9, line:170:1> line:163:16 struct __locale_struct definition
| |-RecordDecl 0x559b934d9668 parent 0x559b93469e18 <line:165:3, col:10> col:10 struct __locale_data
| |-FieldDecl 0x559b934d98c8 <col:3, col:37> col:25 __locales 'struct __locale_data *[13]'
| |-FieldDecl 0x559b934d9968 <line:166:3, col:29> col:29 __ctype_b 'const unsigned short *'
| |-FieldDecl 0x559b934d99d0 <line:167:3, col:14> col:14 __ctype_tolower 'const int *'
| |-FieldDecl 0x559b934d9a38 <line:168:3, col:14> col:14 __ctype_toupper 'const int *'
| `-FieldDecl 0x559b934d9b28 <line:169:3, col:25> col:15 __names 'const char *[13]'
|-TypedefDecl 0x559b934d9c48 <line:163:1, line:170:4> col:4 referenced __locale_t 'struct __locale_struct *'
| `-PointerType 0x559b934d9bf0 'struct __locale_struct *'
|   `-ElaboratedType 0x559b934d9b80 'struct __locale_struct' sugar
|     `-RecordType 0x559b934d9640 'struct __locale_struct'
|       `-Record 0x559b934d95b8 '__locale_struct'
|-TypedefDecl 0x559b934d9cf8 <line:171:1, col:20> col:20 locale_t '__locale_t':'struct __locale_struct *'
| `-TypedefType 0x559b934d9cc0 '__locale_t' sugar
|   |-Typedef 0x559b934d9c48 '__locale_t'
|   `-PointerType 0x559b934d9bf0 'struct __locale_struct *'
|     `-ElaboratedType 0x559b934d9b80 'struct __locale_struct' sugar
|       `-RecordType 0x559b934d9640 'struct __locale_struct'
|         `-Record 0x559b934d95b8 '__locale_struct'
|-FunctionDecl 0x559b934db110 <line:172:1, line:175:63> line:172:15 strftime_l 'size_t (char *restrict, size_t, const char *restrict, const struct tm *restrict, __locale_t)' extern
| |-ParmVarDecl 0x559b934d9d68 <col:27, col:44> col:44 __s 'char *restrict'
| |-ParmVarDecl 0x559b934d9de0 <col:49, col:56> col:56 __maxsize 'size_t':'unsigned long'
| |-ParmVarDecl 0x559b934d9e60 <line:173:6, col:29> col:29 __format 'const char *restrict'
| |-ParmVarDecl 0x559b934d9ef0 <line:174:6, col:34> col:34 __tp 'const struct tm *restrict'
| |-ParmVarDecl 0x559b934d9f68 <line:175:6, col:17> col:17 __loc '__locale_t':'struct __locale_struct *'
| `-NoThrowAttr 0x559b934db1d8 <col:40>
|-FunctionDecl 0x559b934db3c8 <line:177:1, col:89> col:19 gmtime 'struct tm *(const time_t *)' extern
| |-ParmVarDecl 0x559b934db2a0 <col:27, col:41> col:41 __timer 'const time_t *'
| `-NoThrowAttr 0x559b934db470 <col:66>
|-FunctionDecl 0x559b934db580 <line:178:1, col:92> col:19 localtime 'struct tm *(const time_t *)' extern
| |-ParmVarDecl 0x559b934db4d8 <col:30, col:44> col:44 __timer 'const time_t *'
| `-NoThrowAttr 0x559b934db628 <col:69>
|-FunctionDecl 0x559b934db858 <line:180:1, line:181:75> line:180:19 gmtime_r 'struct tm *(const time_t *restrict, struct tm *restrict)' extern
| |-ParmVarDecl 0x559b934db690 <col:29, col:54> col:54 __timer 'const time_t *restrict'
| |-ParmVarDecl 0x559b934db720 <line:181:8, col:30> col:30 __tp 'struct tm *restrict'
| `-NoThrowAttr 0x559b934db908 <col:52>
|-FunctionDecl 0x559b934dbab0 <line:182:1, line:183:78> line:182:19 localtime_r 'struct tm *(const time_t *restrict, struct tm *restrict)' extern
| |-ParmVarDecl 0x559b934db970 <col:32, col:57> col:57 __timer 'const time_t *restrict'
| |-ParmVarDecl 0x559b934dba00 <line:183:11, col:33> col:33 __tp 'struct tm *restrict'
| `-NoThrowAttr 0x559b934dbb60 <col:55>
|-FunctionDecl 0x559b934dbcf8 <line:185:1, col:85> col:14 asctime 'char *(const struct tm *)' extern
| |-ParmVarDecl 0x559b934dbbe0 <col:23, col:40> col:40 __tp 'const struct tm *'
| `-NoThrowAttr 0x559b934dbda0 <col:62>
|-FunctionDecl 0x559b934dbf18 <line:186:1, col:83> col:14 ctime 'char *(const time_t *)' extern
| |-ParmVarDecl 0x559b934dbe08 <col:21, col:35> col:35 __timer 'const time_t *'
| `-NoThrowAttr 0x559b934dbfc0 <col:60>
|-FunctionDecl 0x559b934dc2b8 <line:188:1, line:189:67> line:188:14 asctime_r 'char *(const struct tm *restrict, char *restrict)' extern
| |-ParmVarDecl 0x559b934dc118 <col:25, col:53> col:53 __tp 'const struct tm *restrict'
| |-ParmVarDecl 0x559b934dc198 <line:189:4, col:21> col:21 __buf 'char *restrict'
| `-NoThrowAttr 0x559b934dc368 <col:44>
|-FunctionDecl 0x559b934dc578 <line:190:1, line:191:72> line:190:14 ctime_r 'char *(const time_t *restrict, char *restrict)' extern
| |-ParmVarDecl 0x559b934dc3d0 <col:23, col:48> col:48 __timer 'const time_t *restrict'
| |-ParmVarDecl 0x559b934dc450 <line:191:9, col:26> col:26 __buf 'char *restrict'
| `-NoThrowAttr 0x559b934dc628 <col:49>
|-VarDecl 0x559b934dc728 <line:192:1, col:24> col:14 __tzname 'char *[2]' extern
|-VarDecl 0x559b934dc7a8 <line:193:1, col:12> col:12 __daylight 'int' extern
|-VarDecl 0x559b934dc828 <line:194:1, col:17> col:17 __timezone 'long' extern
|-VarDecl 0x559b934dc8f0 <line:195:1, col:22> col:14 tzname 'char *[2]' extern
|-FunctionDecl 0x559b934dca20 <line:196:1, col:65> col:13 tzset 'void (void)' extern
| `-NoThrowAttr 0x559b934dcac0 <col:42>
|-VarDecl 0x559b934dcb30 <line:197:1, col:12> col:12 daylight 'int' extern
|-VarDecl 0x559b934dcbb0 <line:198:1, col:17> col:17 timezone 'long' extern
|-FunctionDecl 0x559b934dcd38 <line:199:1, col:80> col:12 stime 'int (const time_t *)' extern
| |-ParmVarDecl 0x559b934dcc28 <col:19, col:33> col:33 __when 'const time_t *'
| `-NoThrowAttr 0x559b934dcde0 <col:57>
|-FunctionDecl 0x559b934dcef0 <line:200:1, col:79> col:15 timegm 'time_t (struct tm *)' extern
| |-ParmVarDecl 0x559b934dce60 <col:23, col:34> col:34 __tp 'struct tm *'
| `-NoThrowAttr 0x559b934dcf98 <col:56>
|-FunctionDecl 0x559b934dd0d0 <line:201:1, col:82> col:15 timelocal 'time_t (struct tm *)' extern
| |-ParmVarDecl 0x559b934dd018 <col:26, col:37> col:37 __tp 'struct tm *'
| `-NoThrowAttr 0x559b934dd178 <col:59>
|-FunctionDecl 0x559b934dd280 <line:202:1, col:99> col:12 dysize 'int (int)' extern
| |-ParmVarDecl 0x559b934dd1e8 <col:20, col:24> col:24 __year 'int'
| |-NoThrowAttr 0x559b934dd328 <col:48>
| `-ConstAttr 0x559b934dd380 <col:89>
|-FunctionDecl 0x559b934dd5e8 <line:203:1, line:204:37> line:203:12 nanosleep 'int (const struct timespec *, struct timespec *)' extern
| |-ParmVarDecl 0x559b934dd438 <col:23, col:46> col:46 __requested_time 'const struct timespec *'
| `-ParmVarDecl 0x559b934dd4c8 <line:204:9, col:26> col:26 __remaining 'struct timespec *'
|-FunctionDecl 0x559b934dd848 <line:205:1, col:111> col:12 clock_getres 'int (clockid_t, struct timespec *)' extern
| |-ParmVarDecl 0x559b934dd6d8 <col:26, col:36> col:36 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x559b934dd768 <col:48, col:65> col:65 __res 'struct timespec *'
| `-NoThrowAttr 0x559b934dd8f8 <col:88>
|-FunctionDecl 0x559b934dda90 <line:206:1, col:111> col:12 clock_gettime 'int (clockid_t, struct timespec *)' extern
| |-ParmVarDecl 0x559b934dd960 <col:27, col:37> col:37 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x559b934dd9f0 <col:49, col:66> col:66 __tp 'struct timespec *'
| `-NoThrowAttr 0x559b934ddb40 <col:88>
|-FunctionDecl 0x559b934ddd58 <line:207:1, line:208:45> line:207:12 clock_settime 'int (clockid_t, const struct timespec *)' extern
| |-ParmVarDecl 0x559b934ddba8 <col:27, col:37> col:37 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x559b934ddc38 <col:49, col:72> col:72 __tp 'const struct timespec *'
| `-NoThrowAttr 0x559b934dde08 <line:208:22>
|-FunctionDecl 0x559b934de178 <line:209:1, line:211:30> line:209:12 clock_nanosleep 'int (clockid_t, int, const struct timespec *, struct timespec *)' extern
| |-ParmVarDecl 0x559b934dde70 <col:29, col:39> col:39 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x559b934ddef0 <col:51, col:55> col:55 __flags 'int'
| |-ParmVarDecl 0x559b934ddf80 <line:210:8, col:31> col:31 __req 'const struct timespec *'
| `-ParmVarDecl 0x559b934de010 <line:211:8, col:25> col:25 __rem 'struct timespec *'
|-FunctionDecl 0x559b934de478 <line:212:1, col:108> col:12 clock_getcpuclockid 'int (pid_t, clockid_t *)' extern
| |-ParmVarDecl 0x559b934de278 <col:33, col:39> col:39 __pid 'pid_t':'int'
| |-ParmVarDecl 0x559b934de350 <col:46, col:57> col:57 __clock_id 'clockid_t *'
| `-NoThrowAttr 0x559b934de528 <col:85>
|-FunctionDecl 0x559b934de918 <line:213:1, line:215:75> line:213:12 timer_create 'int (clockid_t, struct sigevent *restrict, timer_t *restrict)' extern
| |-ParmVarDecl 0x559b934de590 <col:26, col:36> col:36 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x559b934de6c8 <line:214:5, col:33> col:33 __evp 'struct sigevent *restrict'
| |-ParmVarDecl 0x559b934de7d0 <line:215:5, col:25> col:25 __timerid 'timer_t *restrict'
| `-NoThrowAttr 0x559b934de9d0 <col:52>
|-FunctionDecl 0x559b934deb48 <line:216:1, col:84> col:12 timer_delete 'int (timer_t)' extern
| |-ParmVarDecl 0x559b934dea38 <col:26, col:34> col:34 __timerid 'timer_t':'void *'
| `-NoThrowAttr 0x559b934debf0 <col:61>
|-FunctionDecl 0x559b934df0f0 <line:217:1, line:219:85> line:217:12 timer_settime 'int (timer_t, int, const struct itimerspec *restrict, struct itimerspec *restrict)' extern
| |-ParmVarDecl 0x559b934dec58 <col:27, col:35> col:35 __timerid 'timer_t':'void *'
| |-ParmVarDecl 0x559b934decd8 <col:46, col:50> col:50 __flags 'int'
| |-ParmVarDecl 0x559b934dee08 <line:218:6, col:42> col:42 __value 'const struct itimerspec *restrict'
| |-ParmVarDecl 0x559b934deef8 <line:219:6, col:36> col:36 __ovalue 'struct itimerspec *restrict'
| `-NoThrowAttr 0x559b934df1b0 <col:62>
|-FunctionDecl 0x559b934df3c8 <line:220:1, line:221:45> line:220:12 timer_gettime 'int (timer_t, struct itimerspec *)' extern
| |-ParmVarDecl 0x559b934df218 <col:27, col:35> col:35 __timerid 'timer_t':'void *'
| |-ParmVarDecl 0x559b934df2a8 <col:46, col:65> col:65 __value 'struct itimerspec *'
| `-NoThrowAttr 0x559b934df478 <line:221:22>
|-FunctionDecl 0x559b934df578 <line:222:1, col:88> col:12 timer_getoverrun 'int (timer_t)' extern
| |-ParmVarDecl 0x559b934df4e0 <col:30, col:38> col:38 __timerid 'timer_t':'void *'
| `-NoThrowAttr 0x559b934df620 <col:65>
|-TypedefDecl 0x559b934df690 <line:224:1, col:27> col:27 referenced pthread_t 'unsigned long'
| `-BuiltinType 0x559b93469fd0 'unsigned long'
|-RecordDecl 0x559b934df6e8 <line:225:1, line:229:1> line:225:7 union pthread_attr_t definition
| |-FieldDecl 0x559b934df830 <line:227:3, col:17> col:8 __size 'char [56]'
| `-FieldDecl 0x559b934df898 <line:228:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x559b934df948 <line:230:1, col:30> col:30 referenced pthread_attr_t 'union pthread_attr_t':'union pthread_attr_t'
| `-ElaboratedType 0x559b934df8f0 'union pthread_attr_t' sugar
|   `-RecordType 0x559b934df770 'union pthread_attr_t'
|     `-Record 0x559b934df6e8 'pthread_attr_t'
|-RecordDecl 0x559b934df9a0 <line:231:9, line:235:1> line:231:16 struct __pthread_internal_list definition
| |-FieldDecl 0x559b934dfb18 <line:233:3, col:35> col:35 __prev 'struct __pthread_internal_list *'
| `-FieldDecl 0x559b934dfb90 <line:234:3, col:35> col:35 __next 'struct __pthread_internal_list *'
|-TypedefDecl 0x559b934dfc40 <line:231:1, line:235:3> col:3 referenced __pthread_list_t 'struct __pthread_internal_list':'struct __pthread_internal_list'
| `-ElaboratedType 0x559b934dfbe0 'struct __pthread_internal_list' sugar
|   `-RecordType 0x559b934dfa20 'struct __pthread_internal_list'
|     `-Record 0x559b934df9a0 '__pthread_internal_list'
|-RecordDecl 0x559b934dfcb0 <line:236:9, line:250:1> line:236:9 union definition
| |-RecordDecl 0x559b934dfd58 parent 0x559b93469e18 <line:238:3, line:247:3> line:238:10 struct __pthread_mutex_s definition
| | |-FieldDecl 0x559b934dfe30 <line:240:5, col:9> col:9 __lock 'int'
| | |-FieldDecl 0x559b934dfe98 <line:241:5, col:18> col:18 __count 'unsigned int'
| | |-FieldDecl 0x559b934dff00 <line:242:5, col:9> col:9 __owner 'int'
| | |-FieldDecl 0x559b934dff68 <line:243:5, col:18> col:18 __nusers 'unsigned int'
| | |-FieldDecl 0x559b934dffd0 <line:244:5, col:9> col:9 __kind 'int'
| | |-FieldDecl 0x559b934e0038 <line:245:5, col:9> col:9 __spins 'int'
| | `-FieldDecl 0x559b934e4110 <line:246:5, col:22> col:22 __list '__pthread_list_t':'struct __pthread_internal_list'
| |-FieldDecl 0x559b934e41c0 <line:238:3, line:247:5> col:5 __data 'struct __pthread_mutex_s':'struct __pthread_mutex_s'
| |-FieldDecl 0x559b934e42b0 <line:248:3, col:17> col:8 __size 'char [40]'
| `-FieldDecl 0x559b934e4318 <line:249:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x559b934e44a0 <line:236:1, line:250:3> col:3 referenced pthread_mutex_t 'union pthread_mutex_t':'pthread_mutex_t'
| `-ElaboratedType 0x559b934e4440 'union pthread_mutex_t' sugar
|   `-RecordType 0x559b934dfd30 'pthread_mutex_t'
|     `-Record 0x559b934dfcb0 ''
|-RecordDecl 0x559b934e4510 <line:251:9, line:255:1> line:251:9 union definition
| |-FieldDecl 0x559b934e4650 <line:253:3, col:16> col:8 __size 'char [4]'
| `-FieldDecl 0x559b934e46b8 <line:254:3, col:7> col:7 __align 'int'
|-TypedefDecl 0x559b934e4770 <line:251:1, line:255:3> col:3 referenced pthread_mutexattr_t 'union pthread_mutexattr_t':'pthread_mutexattr_t'
| `-ElaboratedType 0x559b934e4710 'union pthread_mutexattr_t' sugar
|   `-RecordType 0x559b934e4590 'pthread_mutexattr_t'
|     `-Record 0x559b934e4510 ''
|-RecordDecl 0x559b934e47e0 <line:256:9, line:271:1> line:256:9 union definition
| |-RecordDecl 0x559b934e4888 <line:258:3, line:268:3> line:258:3 struct definition
| | |-FieldDecl 0x559b934e4950 <line:260:5, col:9> col:9 __lock 'int'
| | |-FieldDecl 0x559b934e49b8 <line:261:5, col:18> col:18 __futex 'unsigned int'
| | |-FieldDecl 0x559b934e4a20 <line:262:19, col:42> col:42 __total_seq 'unsigned long long'
| | |-FieldDecl 0x559b934e4a88 <line:263:19, col:42> col:42 __wakeup_seq 'unsigned long long'
| | |-FieldDecl 0x559b934e4af0 <line:264:19, col:42> col:42 __woken_seq 'unsigned long long'
| | |-FieldDecl 0x559b934e4b58 <line:265:5, col:11> col:11 __mutex 'void *'
| | |-FieldDecl 0x559b934e4bc0 <line:266:5, col:18> col:18 __nwaiters 'unsigned int'
| | `-FieldDecl 0x559b934e4c28 <line:267:5, col:18> col:18 __broadcast_seq 'unsigned int'
| |-FieldDecl 0x559b934e4ce0 <line:258:3, line:268:5> col:5 __data 'struct (anonymous struct at ./split_0/safe022_pso.opt_false-unreach-call.i:258:3)':'struct pthread_cond_t::(anonymous at ./split_0/safe022_pso.opt_false-unreach-call.i:258:3)'
| |-FieldDecl 0x559b934e4dd0 <line:269:3, col:17> col:8 __size 'char [48]'
| `-FieldDecl 0x559b934e4e38 <line:270:17, col:31> col:31 __align 'long long'
|-TypedefDecl 0x559b934e4f70 <line:256:1, line:271:3> col:3 referenced pthread_cond_t 'union pthread_cond_t':'pthread_cond_t'
| `-ElaboratedType 0x559b934e4f10 'union pthread_cond_t' sugar
|   `-RecordType 0x559b934e4860 'pthread_cond_t'
|     `-Record 0x559b934e47e0 ''
|-RecordDecl 0x559b934e4fe0 <line:272:9, line:276:1> line:272:9 union definition
| |-FieldDecl 0x559b934e6130 <line:274:3, col:16> col:8 __size 'char [4]'
| `-FieldDecl 0x559b934e6198 <line:275:3, col:7> col:7 __align 'int'
|-TypedefDecl 0x559b934e6250 <line:272:1, line:276:3> col:3 referenced pthread_condattr_t 'union pthread_condattr_t':'pthread_condattr_t'
| `-ElaboratedType 0x559b934e61f0 'union pthread_condattr_t' sugar
|   `-RecordType 0x559b934e5060 'pthread_condattr_t'
|     `-Record 0x559b934e4fe0 ''
|-TypedefDecl 0x559b934e62d8 <line:277:1, col:22> col:22 referenced pthread_key_t 'unsigned int'
| `-BuiltinType 0x559b93469fb0 'unsigned int'
|-TypedefDecl 0x559b934e6348 <line:278:1, col:13> col:13 referenced pthread_once_t 'int'
| `-BuiltinType 0x559b93469f10 'int'
|-RecordDecl 0x559b934e63a0 <line:279:9, line:297:1> line:279:9 union definition
| |-RecordDecl 0x559b934e6448 <line:281:3, line:294:3> line:281:3 struct definition
| | |-FieldDecl 0x559b934e6510 <line:283:5, col:9> col:9 __lock 'int'
| | |-FieldDecl 0x559b934e6578 <line:284:5, col:18> col:18 __nr_readers 'unsigned int'
| | |-FieldDecl 0x559b934e65e0 <line:285:5, col:18> col:18 __readers_wakeup 'unsigned int'
| | |-FieldDecl 0x559b934e6648 <line:286:5, col:18> col:18 __writer_wakeup 'unsigned int'
| | |-FieldDecl 0x559b934e66b0 <line:287:5, col:18> col:18 __nr_readers_queued 'unsigned int'
| | |-FieldDecl 0x559b934e6718 <line:288:5, col:18> col:18 __nr_writers_queued 'unsigned int'
| | |-FieldDecl 0x559b934e6780 <line:289:5, col:9> col:9 __writer 'int'
| | |-FieldDecl 0x559b934e67e8 <line:290:5, col:9> col:9 __shared 'int'
| | |-FieldDecl 0x559b934e6850 <line:291:5, col:23> col:23 __pad1 'unsigned long'
| | |-FieldDecl 0x559b934e68b8 <line:292:5, col:23> col:23 __pad2 'unsigned long'
| | `-FieldDecl 0x559b934e6920 <line:293:5, col:18> col:18 __flags 'unsigned int'
| |-FieldDecl 0x559b934e69d0 <line:281:3, line:294:5> col:5 __data 'struct (anonymous struct at ./split_0/safe022_pso.opt_false-unreach-call.i:281:3)':'struct pthread_rwlock_t::(anonymous at ./split_0/safe022_pso.opt_false-unreach-call.i:281:3)'
| |-FieldDecl 0x559b934e6a78 <line:295:3, col:17> col:8 __size 'char [56]'
| `-FieldDecl 0x559b934e6ae0 <line:296:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x559b934e6c30 <line:279:1, line:297:3> col:3 referenced pthread_rwlock_t 'union pthread_rwlock_t':'pthread_rwlock_t'
| `-ElaboratedType 0x559b934e6bd0 'union pthread_rwlock_t' sugar
|   `-RecordType 0x559b934e6420 'pthread_rwlock_t'
|     `-Record 0x559b934e63a0 ''
|-RecordDecl 0x559b934e6ca0 <line:298:9, line:302:1> line:298:9 union definition
| |-FieldDecl 0x559b934e6de0 <line:300:3, col:16> col:8 __size 'char [8]'
| `-FieldDecl 0x559b934e6e48 <line:301:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x559b934e6f00 <line:298:1, line:302:3> col:3 referenced pthread_rwlockattr_t 'union pthread_rwlockattr_t':'pthread_rwlockattr_t'
| `-ElaboratedType 0x559b934e6ea0 'union pthread_rwlockattr_t' sugar
|   `-RecordType 0x559b934e6d20 'pthread_rwlockattr_t'
|     `-Record 0x559b934e6ca0 ''
|-TypedefDecl 0x559b934e6f88 <line:303:1, col:22> col:22 referenced pthread_spinlock_t 'volatile int'
| `-QualType 0x559b93469f14 'volatile int' volatile
|   `-BuiltinType 0x559b93469f10 'int'
|-RecordDecl 0x559b934e6fe0 <line:304:9, line:308:1> line:304:9 union definition
| |-FieldDecl 0x559b934e8140 <line:306:3, col:17> col:8 __size 'char [32]'
| `-FieldDecl 0x559b934e81a8 <line:307:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x559b934e8260 <line:304:1, line:308:3> col:3 referenced pthread_barrier_t 'union pthread_barrier_t':'pthread_barrier_t'
| `-ElaboratedType 0x559b934e8200 'union pthread_barrier_t' sugar
|   `-RecordType 0x559b934e7060 'pthread_barrier_t'
|     `-Record 0x559b934e6fe0 ''
|-RecordDecl 0x559b934e82d0 <line:309:9, line:313:1> line:309:9 union definition
| |-FieldDecl 0x559b934e83d0 <line:311:3, col:16> col:8 __size 'char [4]'
| `-FieldDecl 0x559b934e8438 <line:312:3, col:7> col:7 __align 'int'
|-TypedefDecl 0x559b934e84f0 <line:309:1, line:313:3> col:3 referenced pthread_barrierattr_t 'union pthread_barrierattr_t':'pthread_barrierattr_t'
| `-ElaboratedType 0x559b934e8490 'union pthread_barrierattr_t' sugar
|   `-RecordType 0x559b934e8350 'pthread_barrierattr_t'
|     `-Record 0x559b934e82d0 ''
|-TypedefDecl 0x559b934e8608 <line:314:1, col:29> col:18 referenced __jmp_buf 'long [8]'
| `-ConstantArrayType 0x559b934e85a0 'long [8]' 8 
|   `-BuiltinType 0x559b93469f30 'long'
|-EnumDecl 0x559b934e8660 <line:315:1, line:319:1> line:315:1
| |-EnumConstantDecl 0x559b934e8728 <line:317:3> col:3 PTHREAD_CREATE_JOINABLE 'int'
| `-EnumConstantDecl 0x559b934e8778 <line:318:3> col:3 PTHREAD_CREATE_DETACHED 'int'
|-EnumDecl 0x559b934e87c8 <line:320:1, line:331:1> line:320:1
| |-EnumConstantDecl 0x559b934e8898 <line:322:3> col:3 referenced PTHREAD_MUTEX_TIMED_NP 'int'
| |-EnumConstantDecl 0x559b934e88e8 <line:323:3> col:3 referenced PTHREAD_MUTEX_RECURSIVE_NP 'int'
| |-EnumConstantDecl 0x559b934e8938 <line:324:3> col:3 referenced PTHREAD_MUTEX_ERRORCHECK_NP 'int'
| |-EnumConstantDecl 0x559b934e8988 <line:325:3> col:3 PTHREAD_MUTEX_ADAPTIVE_NP 'int'
| |-EnumConstantDecl 0x559b934e8a10 <line:327:3, col:26> col:3 referenced PTHREAD_MUTEX_NORMAL 'int'
| | `-ConstantExpr 0x559b934e89f8 <col:26> 'int'
| |   `-DeclRefExpr 0x559b934e89d8 <col:26> 'int' EnumConstant 0x559b934e8898 'PTHREAD_MUTEX_TIMED_NP' 'int'
| |-EnumConstantDecl 0x559b934e8a98 <line:328:3, col:29> col:3 PTHREAD_MUTEX_RECURSIVE 'int'
| | `-ConstantExpr 0x559b934e8a80 <col:29> 'int'
| |   `-DeclRefExpr 0x559b934e8a60 <col:29> 'int' EnumConstant 0x559b934e88e8 'PTHREAD_MUTEX_RECURSIVE_NP' 'int'
| |-EnumConstantDecl 0x559b934e8b20 <line:329:3, col:30> col:3 PTHREAD_MUTEX_ERRORCHECK 'int'
| | `-ConstantExpr 0x559b934e8b08 <col:30> 'int'
| |   `-DeclRefExpr 0x559b934e8ae8 <col:30> 'int' EnumConstant 0x559b934e8938 'PTHREAD_MUTEX_ERRORCHECK_NP' 'int'
| `-EnumConstantDecl 0x559b934e8ba8 <line:330:3, col:27> col:3 PTHREAD_MUTEX_DEFAULT 'int'
|   `-ConstantExpr 0x559b934e8b90 <col:27> 'int'
|     `-DeclRefExpr 0x559b934e8b70 <col:27> 'int' EnumConstant 0x559b934e8a10 'PTHREAD_MUTEX_NORMAL' 'int'
|-EnumDecl 0x559b934e8bf8 <line:332:1, line:338:1> line:332:1
| |-EnumConstantDecl 0x559b934e8cc8 <line:334:3> col:3 referenced PTHREAD_MUTEX_STALLED 'int'
| |-EnumConstantDecl 0x559b934e8d50 <line:335:3, col:30> col:3 PTHREAD_MUTEX_STALLED_NP 'int'
| | `-ConstantExpr 0x559b934e8d38 <col:30> 'int'
| |   `-DeclRefExpr 0x559b934e8d18 <col:30> 'int' EnumConstant 0x559b934e8cc8 'PTHREAD_MUTEX_STALLED' 'int'
| |-EnumConstantDecl 0x559b934e8da0 <line:336:3> col:3 referenced PTHREAD_MUTEX_ROBUST 'int'
| `-EnumConstantDecl 0x559b934e8e28 <line:337:3, col:29> col:3 PTHREAD_MUTEX_ROBUST_NP 'int'
|   `-ConstantExpr 0x559b934e8e10 <col:29> 'int'
|     `-DeclRefExpr 0x559b934e8df0 <col:29> 'int' EnumConstant 0x559b934e8da0 'PTHREAD_MUTEX_ROBUST' 'int'
|-EnumDecl 0x559b934e8e78 <line:339:1, line:344:1> line:339:1
| |-EnumConstantDecl 0x559b934e8f48 <line:341:3> col:3 PTHREAD_PRIO_NONE 'int'
| |-EnumConstantDecl 0x559b934e8f98 <line:342:3> col:3 PTHREAD_PRIO_INHERIT 'int'
| `-EnumConstantDecl 0x559b934e8fe8 <line:343:3> col:3 PTHREAD_PRIO_PROTECT 'int'
|-EnumDecl 0x559b934e9038 <line:345:1, line:351:1> line:345:1
| |-EnumConstantDecl 0x559b934e9150 <line:347:3> col:3 referenced PTHREAD_RWLOCK_PREFER_READER_NP 'int'
| |-EnumConstantDecl 0x559b934e91a0 <line:348:3> col:3 PTHREAD_RWLOCK_PREFER_WRITER_NP 'int'
| |-EnumConstantDecl 0x559b934e91f0 <line:349:3> col:3 PTHREAD_RWLOCK_PREFER_WRITER_NONRECURSIVE_NP 'int'
| `-EnumConstantDecl 0x559b934e9278 <line:350:3, col:31> col:3 PTHREAD_RWLOCK_DEFAULT_NP 'int'
|   `-ConstantExpr 0x559b934e9260 <col:31> 'int'
|     `-DeclRefExpr 0x559b934e9240 <col:31> 'int' EnumConstant 0x559b934e9150 'PTHREAD_RWLOCK_PREFER_READER_NP' 'int'
|-EnumDecl 0x559b934e92c8 <line:352:1, line:356:1> line:352:1
| |-EnumConstantDecl 0x559b934e9398 <line:354:3> col:3 PTHREAD_INHERIT_SCHED 'int'
| `-EnumConstantDecl 0x559b934e93e8 <line:355:3> col:3 PTHREAD_EXPLICIT_SCHED 'int'
|-EnumDecl 0x559b934e9438 <line:357:1, line:361:1> line:357:1
| |-EnumConstantDecl 0x559b934e9508 <line:359:3> col:3 PTHREAD_SCOPE_SYSTEM 'int'
| `-EnumConstantDecl 0x559b934e9558 <line:360:3> col:3 PTHREAD_SCOPE_PROCESS 'int'
|-EnumDecl 0x559b934e95a8 <line:362:1, line:366:1> line:362:1
| |-EnumConstantDecl 0x559b934e9678 <line:364:3> col:3 PTHREAD_PROCESS_PRIVATE 'int'
| `-EnumConstantDecl 0x559b934e96c8 <line:365:3> col:3 PTHREAD_PROCESS_SHARED 'int'
|-RecordDecl 0x559b934e9718 <line:367:1, line:373:1> line:367:8 struct _pthread_cleanup_buffer definition
| |-FieldDecl 0x559b934e9958 <line:369:3, col:28> col:10 __routine 'void (*)(void *)'
| |-FieldDecl 0x559b934e99c0 <line:370:3, col:9> col:9 __arg 'void *'
| |-FieldDecl 0x559b934e9a28 <line:371:3, col:7> col:7 __canceltype 'int'
| `-FieldDecl 0x559b934e9b48 <line:372:3, col:35> col:35 __prev 'struct _pthread_cleanup_buffer *'
|-EnumDecl 0x559b934e9b98 <line:374:1, line:378:1> line:374:1
| |-EnumConstantDecl 0x559b934e9c68 <line:376:3> col:3 PTHREAD_CANCEL_ENABLE 'int'
| `-EnumConstantDecl 0x559b934e9cb8 <line:377:3> col:3 PTHREAD_CANCEL_DISABLE 'int'
|-EnumDecl 0x559b934e9d08 <line:379:1, line:383:1> line:379:1
| |-EnumConstantDecl 0x559b934e9dd8 <line:381:3> col:3 PTHREAD_CANCEL_DEFERRED 'int'
| `-EnumConstantDecl 0x559b934e9e28 <line:382:3> col:3 PTHREAD_CANCEL_ASYNCHRONOUS 'int'
|-FunctionDecl 0x559b934ea488 <line:385:1, line:388:96> line:385:12 used pthread_create 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' extern
| |-ParmVarDecl 0x559b934e9f20 <col:28, col:50> col:50 __newthread 'pthread_t *restrict'
| |-ParmVarDecl 0x559b934ea030 <line:386:7, col:40> col:40 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x559b934ea270 <line:387:7, col:39> col:15 __start_routine 'void *(*)(void *)'
| |-ParmVarDecl 0x559b934ea2f0 <line:388:7, col:24> col:24 __arg 'void *restrict'
| |-NoThrowAttr 0x559b934ea548 <col:47>
| |-NonNullAttr 0x559b934ea5a0 <col:77, col:94> 1 3
| `-CallbackAttr 0x559b934ea5d8 <line:385:12> Implicit 2 3
|-FunctionDecl 0x559b934ea700 <line:389:1, col:72> col:13 pthread_exit 'void (void *) __attribute__((noreturn))' extern
| `-ParmVarDecl 0x559b934ea630 <col:27, col:33> col:33 __retval 'void *'
|-FunctionDecl 0x559b934ea958 <line:390:1, col:64> col:12 pthread_join 'int (pthread_t, void **)' extern
| |-ParmVarDecl 0x559b934ea7b8 <col:26, col:36> col:36 __th 'pthread_t':'unsigned long'
| `-ParmVarDecl 0x559b934ea838 <col:42, col:49> col:49 __thread_return 'void **'
|-FunctionDecl 0x559b934eab28 <line:391:1, col:83> col:12 pthread_detach 'int (pthread_t)' extern
| |-ParmVarDecl 0x559b934eaa18 <col:28, col:38> col:38 __th 'pthread_t':'unsigned long'
| `-NoThrowAttr 0x559b934eabd0 <col:60>
|-FunctionDecl 0x559b934ead20 <line:392:1, col:105> col:18 pthread_self 'pthread_t (void)' extern
| |-NoThrowAttr 0x559b934eadc0 <col:54>
| `-ConstAttr 0x559b934eae18 <col:95>
|-FunctionDecl 0x559b934eafe8 <line:393:1, line:394:70> line:393:12 pthread_equal 'int (pthread_t, pthread_t)' extern
| |-ParmVarDecl 0x559b934eae50 <col:27, col:37> col:37 __thread1 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x559b934eaec8 <col:48, col:58> col:58 __thread2 'pthread_t':'unsigned long'
| |-NoThrowAttr 0x559b934eb098 <line:394:19>
| `-ConstAttr 0x559b934eb0f0 <col:60>
|-FunctionDecl 0x559b934ecb08 <line:395:1, col:128> col:12 pthread_attr_init 'int (pthread_attr_t *)' extern
| |-ParmVarDecl 0x559b934ec9d0 <col:31, col:47> col:47 __attr 'pthread_attr_t *'
| |-NoThrowAttr 0x559b934ecbb0 <col:71>
| `-NonNullAttr 0x559b934ecc08 <col:112, col:126> 1
|-FunctionDecl 0x559b934ecd10 <line:396:1, line:397:79> line:396:12 pthread_attr_destroy 'int (pthread_attr_t *)' extern
| |-ParmVarDecl 0x559b934ecc58 <col:34, col:50> col:50 __attr 'pthread_attr_t *'
| |-NoThrowAttr 0x559b934ecdb8 <line:397:22>
| `-NonNullAttr 0x559b934ece10 <col:63, col:77> 1
|-FunctionDecl 0x559b934ed038 <line:398:1, line:400:82> line:398:12 pthread_attr_getdetachstate 'int (const pthread_attr_t *, int *)' extern
| |-ParmVarDecl 0x559b934ece58 <col:41, col:63> col:63 __attr 'const pthread_attr_t *'
| |-ParmVarDecl 0x559b934eced8 <line:399:6, col:11> col:11 __detachstate 'int *'
| |-NoThrowAttr 0x559b934ed0e8 <line:400:22>
| `-NonNullAttr 0x559b934ed140 <col:63, col:80> 1 2
|-FunctionDecl 0x559b934ed348 <line:401:1, line:403:79> line:401:12 pthread_attr_setdetachstate 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x559b934ed188 <col:41, col:57> col:57 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x559b934ed208 <line:402:6, col:10> col:10 __detachstate 'int'
| |-NoThrowAttr 0x559b934ed3f8 <line:403:22>
| `-NonNullAttr 0x559b934ed450 <col:63, col:77> 1
|-FunctionDecl 0x559b934ed6a8 <line:404:1, line:406:82> line:404:12 pthread_attr_getguardsize 'int (const pthread_attr_t *, size_t *)' extern
| |-ParmVarDecl 0x559b934ed498 <col:39, col:61> col:61 __attr 'const pthread_attr_t *'
| |-ParmVarDecl 0x559b934ed540 <line:405:11, col:19> col:19 __guardsize 'size_t *'
| |-NoThrowAttr 0x559b934ed758 <line:406:22>
| `-NonNullAttr 0x559b934ed7b0 <col:63, col:80> 1 2
|-FunctionDecl 0x559b934ee9e8 <line:407:1, line:409:79> line:407:12 pthread_attr_setguardsize 'int (pthread_attr_t *, size_t)' extern
| |-ParmVarDecl 0x559b934ed7f8 <col:39, col:55> col:55 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x559b934ed870 <line:408:11, col:18> col:18 __guardsize 'size_t':'unsigned long'
| |-NoThrowAttr 0x559b934eea98 <line:409:22>
| `-NonNullAttr 0x559b934eeaf0 <col:63, col:77> 1
|-FunctionDecl 0x559b934eed28 <line:410:1, line:412:82> line:410:12 pthread_attr_getschedparam 'int (const pthread_attr_t *restrict, struct sched_param *restrict)' extern
| |-ParmVarDecl 0x559b934eeb38 <col:40, col:73> col:73 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x559b934eebc8 <line:411:12, col:43> col:43 __param 'struct sched_param *restrict'
| |-NoThrowAttr 0x559b934eedd8 <line:412:22>
| `-NonNullAttr 0x559b934eee30 <col:63, col:80> 1 2
|-FunctionDecl 0x559b934ef068 <line:413:1, line:415:97> line:413:12 pthread_attr_setschedparam 'int (pthread_attr_t *restrict, const struct sched_param *restrict)' extern
| |-ParmVarDecl 0x559b934eee78 <col:40, col:67> col:67 __attr 'pthread_attr_t *restrict'
| |-ParmVarDecl 0x559b934eef08 <line:414:12, line:415:12> col:12 __param 'const struct sched_param *restrict'
| |-NoThrowAttr 0x559b934ef118 <col:37>
| `-NonNullAttr 0x559b934ef170 <col:78, col:95> 1 2
|-FunctionDecl 0x559b934ef358 <line:416:1, line:418:82> line:416:12 pthread_attr_getschedpolicy 'int (const pthread_attr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x559b934ef1b8 <col:41, line:417:6> col:6 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x559b934ef238 <col:14, col:30> col:30 __policy 'int *restrict'
| |-NoThrowAttr 0x559b934ef408 <line:418:22>
| `-NonNullAttr 0x559b934ef460 <col:63, col:80> 1 2
|-FunctionDecl 0x559b934ef5e8 <line:419:1, line:420:79> line:419:12 pthread_attr_setschedpolicy 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x559b934ef4a8 <col:41, col:57> col:57 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x559b934ef528 <col:65, col:69> col:69 __policy 'int'
| |-NoThrowAttr 0x559b934ef698 <line:420:22>
| `-NonNullAttr 0x559b934ef6f0 <col:63, col:77> 1
|-FunctionDecl 0x559b934ef898 <line:421:1, line:423:82> line:421:12 pthread_attr_getinheritsched 'int (const pthread_attr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x559b934ef738 <col:42, line:422:7> col:7 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x559b934ef7b8 <col:15, col:31> col:31 __inherit 'int *restrict'
| |-NoThrowAttr 0x559b934ef948 <line:423:22>
| `-NonNullAttr 0x559b934ef9c0 <col:63, col:80> 1 2
|-FunctionDecl 0x559b934efb48 <line:424:1, line:426:79> line:424:12 pthread_attr_setinheritsched 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x559b934efa08 <col:42, col:58> col:58 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x559b934efa88 <line:425:7, col:11> col:11 __inherit 'int'
| |-NoThrowAttr 0x559b934efbf8 <line:426:22>
| `-NonNullAttr 0x559b934efc50 <col:63, col:77> 1
|-FunctionDecl 0x559b934efdf8 <line:427:1, line:429:82> line:427:12 pthread_attr_getscope 'int (const pthread_attr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x559b934efc98 <col:35, col:68> col:68 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x559b934efd18 <line:428:7, col:23> col:23 __scope 'int *restrict'
| |-NoThrowAttr 0x559b934efea8 <line:429:22>
| `-NonNullAttr 0x559b934eff00 <col:63, col:80> 1 2
|-FunctionDecl 0x559b934f0088 <line:430:1, line:431:79> line:430:12 pthread_attr_setscope 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x559b934eff48 <col:35, col:51> col:51 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x559b934effc8 <col:59, col:63> col:63 __scope 'int'
| |-NoThrowAttr 0x559b934f0138 <line:431:22>
| `-NonNullAttr 0x559b934f0190 <col:63, col:77> 1
|-FunctionDecl 0x559b934f03b8 <line:432:1, line:434:115> line:432:12 pthread_attr_getstackaddr 'int (const pthread_attr_t *restrict, void **restrict)' extern
| |-ParmVarDecl 0x559b934f01d8 <col:39, line:433:11> col:11 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x559b934f0258 <col:19, col:37> col:37 __stackaddr 'void **restrict'
| |-NoThrowAttr 0x559b934f0468 <line:434:22>
| |-NonNullAttr 0x559b934f04c0 <col:63, col:80> 1 2
| `-DeprecatedAttr 0x559b934f04f8 <col:100> "" ""
|-FunctionDecl 0x559b934f0708 <line:435:1, line:437:112> line:435:12 pthread_attr_setstackaddr 'int (pthread_attr_t *, void *)' extern
| |-ParmVarDecl 0x559b934f0548 <col:39, col:55> col:55 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x559b934f05c8 <line:436:11, col:17> col:17 __stackaddr 'void *'
| |-NoThrowAttr 0x559b934f07b8 <line:437:22>
| |-NonNullAttr 0x559b934f0810 <col:63, col:77> 1
| `-DeprecatedAttr 0x559b934f0848 <col:97> "" ""
|-FunctionDecl 0x559b934f0a48 <line:438:1, line:440:82> line:438:12 pthread_attr_getstacksize 'int (const pthread_attr_t *restrict, size_t *restrict)' extern
| |-ParmVarDecl 0x559b934f0898 <col:39, line:439:11> col:11 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x559b934f0910 <col:19, col:38> col:38 __stacksize 'size_t *restrict'
| |-NoThrowAttr 0x559b934f0af8 <line:440:22>
| `-NonNullAttr 0x559b934f0b50 <col:63, col:80> 1 2
|-FunctionDecl 0x559b934f0cd0 <line:441:1, line:443:79> line:441:12 pthread_attr_setstacksize 'int (pthread_attr_t *, size_t)' extern
| |-ParmVarDecl 0x559b934f0b98 <col:39, col:55> col:55 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x559b934f0c10 <line:442:11, col:18> col:18 __stacksize 'size_t':'unsigned long'
| |-NoThrowAttr 0x559b934f0d80 <line:443:22>
| `-NonNullAttr 0x559b934f0dd8 <col:63, col:77> 1
|-FunctionDecl 0x559b934f10c8 <line:444:1, line:447:85> line:444:12 pthread_attr_getstack 'int (const pthread_attr_t *restrict, void **restrict, size_t *restrict)' extern
| |-ParmVarDecl 0x559b934f0e28 <col:35, col:68> col:68 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x559b934f0ea8 <line:445:7, col:25> col:25 __stackaddr 'void **restrict'
| |-ParmVarDecl 0x559b934f0f20 <line:446:7, col:26> col:26 __stacksize 'size_t *restrict'
| |-NoThrowAttr 0x559b934f1180 <line:447:22>
| `-NonNullAttr 0x559b934f11d8 <col:63, col:83> 1 2 3
|-FunctionDecl 0x559b934f1488 <line:448:1, line:449:100> line:448:12 pthread_attr_setstack 'int (pthread_attr_t *, void *, size_t)' extern
| |-ParmVarDecl 0x559b934f1230 <col:35, col:51> col:51 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x559b934f12b0 <col:59, col:65> col:65 __stackaddr 'void *'
| |-ParmVarDecl 0x559b934f1328 <line:449:7, col:14> col:14 __stacksize 'size_t':'unsigned long'
| |-NoThrowAttr 0x559b934f1540 <col:43>
| `-NonNullAttr 0x559b934f1598 <col:84, col:98> 1
|-FunctionDecl 0x559b934f1858 <line:450:1, line:452:79> line:450:12 pthread_setschedparam 'int (pthread_t, int, const struct sched_param *)' extern
| |-ParmVarDecl 0x559b934f15e8 <col:35, col:45> col:45 __target_thread 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x559b934f1668 <col:62, col:66> col:66 __policy 'int'
| |-ParmVarDecl 0x559b934f16f8 <line:451:7, col:33> col:33 __param 'const struct sched_param *'
| |-NoThrowAttr 0x559b934f1910 <line:452:22>
| `-NonNullAttr 0x559b934f1968 <col:63, col:77> 3
|-FunctionDecl 0x559b934f1c78 <line:453:1, line:456:82> line:453:12 pthread_getschedparam 'int (pthread_t, int *restrict, struct sched_param *restrict)' extern
| |-ParmVarDecl 0x559b934f19e0 <col:35, col:45> col:45 __target_thread 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x559b934f1a60 <line:454:7, col:23> col:23 __policy 'int *restrict'
| |-ParmVarDecl 0x559b934f1af0 <line:455:7, col:38> col:38 __param 'struct sched_param *restrict'
| |-NoThrowAttr 0x559b934f1d30 <line:456:22>
| `-NonNullAttr 0x559b934f1d88 <col:63, col:80> 2 3
|-FunctionDecl 0x559b934f1f78 <line:457:1, line:458:45> line:457:12 pthread_setschedprio 'int (pthread_t, int)' extern
| |-ParmVarDecl 0x559b934f1dd8 <col:34, col:44> col:44 __target_thread 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x559b934f1e58 <col:61, col:65> col:65 __prio 'int'
| `-NoThrowAttr 0x559b934f2028 <line:458:22>
|-FunctionDecl 0x559b934f23f8 <line:459:1, line:460:71> line:459:12 pthread_once 'int (pthread_once_t *, void (*)(void))' extern
| |-ParmVarDecl 0x559b934f20f0 <col:26, col:42> col:42 __once_control 'pthread_once_t *'
| |-ParmVarDecl 0x559b934f2290 <line:460:5, col:33> col:12 __init_routine 'void (*)(void)'
| `-NonNullAttr 0x559b934f24a8 <col:52, col:69> 1 2
|-FunctionDecl 0x559b934f2650 <line:461:1, col:64> col:12 pthread_setcancelstate 'int (int, int *)' extern
| |-ParmVarDecl 0x559b934f2530 <col:36, col:40> col:40 __state 'int'
| `-ParmVarDecl 0x559b934f25b0 <col:49, col:54> col:54 __oldstate 'int *'
|-FunctionDecl 0x559b934f2838 <line:462:1, col:61> col:12 pthread_setcanceltype 'int (int, int *)' extern
| |-ParmVarDecl 0x559b934f2718 <col:35, col:39> col:39 __type 'int'
| `-ParmVarDecl 0x559b934f2798 <col:47, col:52> col:52 __oldtype 'int *'
|-FunctionDecl 0x559b934f29f0 <line:463:1, col:42> col:12 pthread_cancel 'int (pthread_t)' extern
| `-ParmVarDecl 0x559b934f28f8 <col:28, col:38> col:38 __th 'pthread_t':'unsigned long'
|-FunctionDecl 0x559b934f2b30 <line:464:1, col:37> col:13 pthread_testcancel 'void (void)' extern
|-RecordDecl 0x559b934f2bd0 <line:465:9, line:473:1> line:465:9 struct definition
| |-RecordDecl 0x559b934f2c78 <line:467:3, line:471:3> line:467:3 struct definition
| | |-FieldDecl 0x559b934f2d68 <line:469:5, col:15> col:15 __cancel_jmp_buf '__jmp_buf':'long [8]'
| | `-FieldDecl 0x559b934f2dd0 <line:470:5, col:9> col:9 __mask_was_saved 'int'
| |-FieldDecl 0x559b934f2fa0 <line:467:3, line:471:23> col:5 __cancel_jmp_buf 'struct (anonymous struct at ./split_0/safe022_pso.opt_false-unreach-call.i:467:3) [1]'
| `-FieldDecl 0x559b934f3098 <line:472:3, col:16> col:9 __pad 'void *[4]'
|-TypedefDecl 0x559b934f3150 <line:465:1, line:473:3> col:3 referenced __pthread_unwind_buf_t 'struct __pthread_unwind_buf_t':'__pthread_unwind_buf_t'
| |-ElaboratedType 0x559b934f30f0 'struct __pthread_unwind_buf_t' sugar
| | `-RecordType 0x559b934f2c50 '__pthread_unwind_buf_t'
| |   `-Record 0x559b934f2bd0 ''
| `-AlignedAttr 0x559b934f31a8 <col:42> aligned
|   `-<<<NULL>>>
|-RecordDecl 0x559b934f3220 <line:474:1, line:480:1> line:474:8 struct __pthread_cleanup_frame definition
| |-FieldDecl 0x559b934f3380 <line:476:3, col:35> col:10 __cancel_routine 'void (*)(void *)'
| |-FieldDecl 0x559b934f33e8 <line:477:3, col:9> col:9 __cancel_arg 'void *'
| |-FieldDecl 0x559b934f3450 <line:478:3, col:7> col:7 __do_it 'int'
| `-FieldDecl 0x559b934f34b8 <line:479:3, col:7> col:7 __cancel_type 'int'
|-FunctionDecl 0x559b934f36c0 <line:481:1, col:69> col:13 __pthread_register_cancel 'void (__pthread_unwind_buf_t *)' extern
| `-ParmVarDecl 0x559b934f35b0 <col:40, col:64> col:64 __buf '__pthread_unwind_buf_t *'
|-FunctionDecl 0x559b934f3808 <line:483:1, col:71> col:13 __pthread_unregister_cancel 'void (__pthread_unwind_buf_t *)' extern
| `-ParmVarDecl 0x559b934f3778 <col:42, col:66> col:66 __buf '__pthread_unwind_buf_t *'
|-FunctionDecl 0x559b934f3a00 <line:485:1, line:487:31> line:485:13 __pthread_unwind_next 'void (__pthread_unwind_buf_t *) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x559b934f38c0 <col:36, col:60> col:60 __buf '__pthread_unwind_buf_t *'
| `-WeakAttr 0x559b934f3aa8 <line:487:22>
|-RecordDecl 0x559b934f3b00 <line:489:1, col:8> col:8 struct __jmp_buf_tag
|-FunctionDecl 0x559b934f3e18 <line:490:1, col:98> col:12 __sigsetjmp 'int (struct __jmp_buf_tag *, int)' extern
| |-ParmVarDecl 0x559b934f3c78 <col:25, col:47> col:47 __env 'struct __jmp_buf_tag *'
| |-ParmVarDecl 0x559b934f3cf8 <col:54, col:58> col:58 __savemask 'int'
| |-NoThrowAttr 0x559b934f3ec8 <col:86>
| `-ReturnsTwiceAttr 0x559b934f3f20 <col:12> Implicit
|-FunctionDecl 0x559b934f4248 <line:491:1, line:493:79> line:491:12 pthread_mutex_init 'int (pthread_mutex_t *, const pthread_mutexattr_t *)' extern
| |-ParmVarDecl 0x559b934f3ff0 <col:32, col:49> col:49 __mutex 'pthread_mutex_t *'
| |-ParmVarDecl 0x559b934f4100 <line:492:11, col:38> col:38 __mutexattr 'const pthread_mutexattr_t *'
| |-NoThrowAttr 0x559b934f42f8 <line:493:22>
| `-NonNullAttr 0x559b934f4350 <col:63, col:77> 1
|-FunctionDecl 0x559b934f44c8 <line:494:1, line:495:79> line:494:12 pthread_mutex_destroy 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x559b934f4398 <col:35, col:52> col:52 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x559b934f4570 <line:495:22>
| `-NonNullAttr 0x559b934f45c8 <col:63, col:77> 1
|-FunctionDecl 0x559b934f46d0 <line:496:1, line:497:68> line:496:12 pthread_mutex_trylock 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x559b934f4618 <col:35, col:52> col:52 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x559b934f4778 <line:497:22>
| `-NonNullAttr 0x559b934f47d0 <col:52, col:66> 1
|-FunctionDecl 0x559b934f48d0 <line:498:1, line:499:68> line:498:12 pthread_mutex_lock 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x559b934f4818 <col:32, col:49> col:49 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x559b934f4978 <line:499:22>
| `-NonNullAttr 0x559b934f49d0 <col:52, col:66> 1
|-FunctionDecl 0x559b934f5c28 <line:500:1, line:502:85> line:500:12 pthread_mutex_timedlock 'int (pthread_mutex_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x559b934f5a38 <col:37, col:65> col:65 __mutex 'pthread_mutex_t *restrict'
| |-ParmVarDecl 0x559b934f5ac8 <line:501:9, line:502:9> col:9 __abstime 'const struct timespec *restrict'
| |-NoThrowAttr 0x559b934f5cd8 <col:36>
| `-NonNullAttr 0x559b934f5d30 <col:66, col:83> 1 2
|-FunctionDecl 0x559b934f5e30 <line:503:1, line:504:68> line:503:12 pthread_mutex_unlock 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x559b934f5d78 <col:34, col:51> col:51 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x559b934f5ed8 <line:504:22>
| `-NonNullAttr 0x559b934f5f30 <col:52, col:66> 1
|-FunctionDecl 0x559b934f61c8 <line:505:1, line:508:82> line:505:12 pthread_mutex_getprioceiling 'int (const pthread_mutex_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x559b934f5fe0 <col:42, line:506:18> col:18 __mutex 'const pthread_mutex_t *restrict'
| |-ParmVarDecl 0x559b934f6060 <line:507:7, col:23> col:23 __prioceiling 'int *restrict'
| |-NoThrowAttr 0x559b934f6278 <line:508:22>
| `-NonNullAttr 0x559b934f62d0 <col:63, col:80> 1 2
|-FunctionDecl 0x559b934f6598 <line:509:1, line:512:82> line:509:12 pthread_mutex_setprioceiling 'int (pthread_mutex_t *restrict, int, int *restrict)' extern
| |-ParmVarDecl 0x559b934f6318 <col:42, col:70> col:70 __mutex 'pthread_mutex_t *restrict'
| |-ParmVarDecl 0x559b934f6398 <line:510:7, col:11> col:11 __prioceiling 'int'
| |-ParmVarDecl 0x559b934f6418 <line:511:7, col:23> col:23 __old_ceiling 'int *restrict'
| |-NoThrowAttr 0x559b934f6650 <line:512:22>
| `-NonNullAttr 0x559b934f66a8 <col:63, col:80> 1 3
|-FunctionDecl 0x559b934f67b0 <line:513:1, line:514:79> line:513:12 pthread_mutex_consistent 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x559b934f66f8 <col:38, col:55> col:55 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x559b934f6858 <line:514:22>
| `-NonNullAttr 0x559b934f68b0 <col:63, col:77> 1
|-FunctionDecl 0x559b934f6ad8 <line:515:1, line:516:79> line:515:12 pthread_mutexattr_init 'int (pthread_mutexattr_t *)' extern
| |-ParmVarDecl 0x559b934f6960 <col:36, col:57> col:57 __attr 'pthread_mutexattr_t *'
| |-NoThrowAttr 0x559b934f6b80 <line:516:22>
| `-NonNullAttr 0x559b934f6bd8 <col:63, col:77> 1
|-FunctionDecl 0x559b934f6ce0 <line:517:1, line:518:79> line:517:12 pthread_mutexattr_destroy 'int (pthread_mutexattr_t *)' extern
| |-ParmVarDecl 0x559b934f6c28 <col:39, col:60> col:60 __attr 'pthread_mutexattr_t *'
| |-NoThrowAttr 0x559b934f6d88 <line:518:22>
| `-NonNullAttr 0x559b934f6de0 <col:63, col:77> 1
|-FunctionDecl 0x559b934f7008 <line:519:1, line:522:82> line:519:12 pthread_mutexattr_getpshared 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x559b934f6e28 <col:42, line:520:18> col:18 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x559b934f6ea8 <line:521:7, col:23> col:23 __pshared 'int *restrict'
| |-NoThrowAttr 0x559b934f70b8 <line:522:22>
| `-NonNullAttr 0x559b934f7110 <col:63, col:80> 1 2
|-FunctionDecl 0x559b934f7318 <line:523:1, line:525:79> line:523:12 pthread_mutexattr_setpshared 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x559b934f7158 <col:42, col:63> col:63 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x559b934f71d8 <line:524:7, col:11> col:11 __pshared 'int'
| |-NoThrowAttr 0x559b934f73c8 <line:525:22>
| `-NonNullAttr 0x559b934f7420 <col:63, col:77> 1
|-FunctionDecl 0x559b934f75c8 <line:526:1, line:528:82> line:526:12 pthread_mutexattr_gettype 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x559b934f7468 <col:39, line:527:11> col:11 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x559b934f74e8 <col:19, col:35> col:35 __kind 'int *restrict'
| |-NoThrowAttr 0x559b934f7678 <line:528:22>
| `-NonNullAttr 0x559b934f76d0 <col:63, col:80> 1 2
|-FunctionDecl 0x559b934f7858 <line:529:1, line:530:79> line:529:12 pthread_mutexattr_settype 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x559b934f7718 <col:39, col:60> col:60 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x559b934f7798 <col:68, col:72> col:72 __kind 'int'
| |-NoThrowAttr 0x559b934f7908 <line:530:22>
| `-NonNullAttr 0x559b934f7960 <col:63, col:77> 1
|-FunctionDecl 0x559b934f7b20 <line:531:1, line:534:82> line:531:12 pthread_mutexattr_getprotocol 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x559b934f79a8 <col:43, line:532:19> col:19 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x559b934f7a40 <line:533:8, col:24> col:24 __protocol 'int *restrict'
| |-NoThrowAttr 0x559b934f7bd0 <line:534:22>
| `-NonNullAttr 0x559b934f7c28 <col:63, col:80> 1 2
|-FunctionDecl 0x559b934f7db8 <line:535:1, line:537:79> line:535:12 pthread_mutexattr_setprotocol 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x559b934f7c78 <col:43, col:64> col:64 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x559b934f7cf8 <line:536:8, col:12> col:12 __protocol 'int'
| |-NoThrowAttr 0x559b934f7e68 <line:537:22>
| `-NonNullAttr 0x559b934f7ec0 <col:63, col:77> 1
|-FunctionDecl 0x559b934f8068 <line:538:1, line:541:82> line:538:12 pthread_mutexattr_getprioceiling 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x559b934f7f08 <col:46, line:539:22> col:22 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x559b934f7f88 <line:540:11, col:27> col:27 __prioceiling 'int *restrict'
| |-NoThrowAttr 0x559b934f8118 <line:541:22>
| `-NonNullAttr 0x559b934f8170 <col:63, col:80> 1 2
|-FunctionDecl 0x559b934f82f8 <line:542:1, line:544:79> line:542:12 pthread_mutexattr_setprioceiling 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x559b934f81b8 <col:46, col:67> col:67 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x559b934f8238 <line:543:11, col:15> col:15 __prioceiling 'int'
| |-NoThrowAttr 0x559b934f83a8 <line:544:22>
| `-NonNullAttr 0x559b934f8400 <col:63, col:77> 1
|-FunctionDecl 0x559b934f85e8 <line:545:1, line:547:82> line:545:12 pthread_mutexattr_getrobust 'int (const pthread_mutexattr_t *, int *)' extern
| |-ParmVarDecl 0x559b934f8448 <col:41, col:68> col:68 __attr 'const pthread_mutexattr_t *'
| |-ParmVarDecl 0x559b934f84c8 <line:546:6, col:11> col:11 __robustness 'int *'
| |-NoThrowAttr 0x559b934f8698 <line:547:22>
| `-NonNullAttr 0x559b934f86f0 <col:63, col:80> 1 2
|-FunctionDecl 0x559b934f8878 <line:548:1, line:550:79> line:548:12 pthread_mutexattr_setrobust 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x559b934f8738 <col:41, col:62> col:62 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x559b934f87b8 <line:549:6, col:10> col:10 __robustness 'int'
| |-NoThrowAttr 0x559b934f8928 <line:550:22>
| `-NonNullAttr 0x559b934f8980 <col:63, col:77> 1
|-FunctionDecl 0x559b934f9cf8 <line:551:1, line:553:86> line:551:12 pthread_rwlock_init 'int (pthread_rwlock_t *restrict, const pthread_rwlockattr_t *restrict)' extern
| |-ParmVarDecl 0x559b934f9aa0 <col:33, col:62> col:62 __rwlock 'pthread_rwlock_t *restrict'
| |-ParmVarDecl 0x559b934f9bb0 <line:552:5, line:553:5> col:5 __attr 'const pthread_rwlockattr_t *restrict'
| |-NoThrowAttr 0x559b934f9da8 <col:29>
| `-NonNullAttr 0x559b934f9e00 <col:70, col:84> 1
|-FunctionDecl 0x559b934f9f78 <line:554:1, line:555:79> line:554:12 pthread_rwlock_destroy 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x559b934f9e48 <col:36, col:54> col:54 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x559b934fa020 <line:555:22>
| `-NonNullAttr 0x559b934fa078 <col:63, col:77> 1
|-FunctionDecl 0x559b934fa180 <line:556:1, line:557:68> line:556:12 pthread_rwlock_rdlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x559b934fa0c8 <col:35, col:53> col:53 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x559b934fa228 <line:557:22>
| `-NonNullAttr 0x559b934fa280 <col:52, col:66> 1
|-FunctionDecl 0x559b934fa380 <line:558:1, line:559:65> line:558:12 pthread_rwlock_tryrdlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x559b934fa2c8 <col:38, col:56> col:56 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x559b934fa428 <line:559:19>
| `-NonNullAttr 0x559b934fa480 <col:49, col:63> 1
|-FunctionDecl 0x559b934fa6b8 <line:560:1, line:562:88> line:560:12 pthread_rwlock_timedrdlock 'int (pthread_rwlock_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x559b934fa4c8 <col:40, col:69> col:69 __rwlock 'pthread_rwlock_t *restrict'
| |-ParmVarDecl 0x559b934fa558 <line:561:12, line:562:12> col:12 __abstime 'const struct timespec *restrict'
| |-NoThrowAttr 0x559b934fa768 <col:39>
| `-NonNullAttr 0x559b934fa7c0 <col:69, col:86> 1 2
|-FunctionDecl 0x559b934fa8c0 <line:563:1, line:564:68> line:563:12 pthread_rwlock_wrlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x559b934fa808 <col:35, col:53> col:53 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x559b934fa968 <line:564:22>
| `-NonNullAttr 0x559b934fa9c0 <col:52, col:66> 1
|-FunctionDecl 0x559b934fab28 <line:565:1, line:566:68> line:565:12 pthread_rwlock_trywrlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x559b934faa70 <col:38, col:56> col:56 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x559b934fabd0 <line:566:22>
| `-NonNullAttr 0x559b934fac28 <col:52, col:66> 1
|-FunctionDecl 0x559b934fade8 <line:567:1, line:569:88> line:567:12 pthread_rwlock_timedwrlock 'int (pthread_rwlock_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x559b934fac78 <col:40, col:69> col:69 __rwlock 'pthread_rwlock_t *restrict'
| |-ParmVarDecl 0x559b934fad08 <line:568:12, line:569:12> col:12 __abstime 'const struct timespec *restrict'
| |-NoThrowAttr 0x559b934fae98 <col:39>
| `-NonNullAttr 0x559b934faef0 <col:69, col:86> 1 2
|-FunctionDecl 0x559b934faff0 <line:570:1, line:571:68> line:570:12 pthread_rwlock_unlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x559b934faf38 <col:35, col:53> col:53 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x559b934fb098 <line:571:22>
| `-NonNullAttr 0x559b934fb0f0 <col:52, col:66> 1
|-FunctionDecl 0x559b934fb2d8 <line:572:1, line:573:79> line:572:12 pthread_rwlockattr_init 'int (pthread_rwlockattr_t *)' extern
| |-ParmVarDecl 0x559b934fb1a0 <col:37, col:59> col:59 __attr 'pthread_rwlockattr_t *'
| |-NoThrowAttr 0x559b934fb380 <line:573:22>
| `-NonNullAttr 0x559b934fb3d8 <col:63, col:77> 1
|-FunctionDecl 0x559b934fb4e0 <line:574:1, line:575:79> line:574:12 pthread_rwlockattr_destroy 'int (pthread_rwlockattr_t *)' extern
| |-ParmVarDecl 0x559b934fb428 <col:40, col:62> col:62 __attr 'pthread_rwlockattr_t *'
| |-NoThrowAttr 0x559b934fb588 <line:575:22>
| `-NonNullAttr 0x559b934fb5e0 <col:63, col:77> 1
|-FunctionDecl 0x559b934fb808 <line:576:1, line:579:82> line:576:12 pthread_rwlockattr_getpshared 'int (const pthread_rwlockattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x559b934fb628 <col:43, line:577:19> col:19 __attr 'const pthread_rwlockattr_t *restrict'
| |-ParmVarDecl 0x559b934fb6a8 <line:578:8, col:24> col:24 __pshared 'int *restrict'
| |-NoThrowAttr 0x559b934fb8b8 <line:579:22>
| `-NonNullAttr 0x559b934fb910 <col:63, col:80> 1 2
|-FunctionDecl 0x559b934fbb38 <line:580:1, line:582:79> line:580:12 pthread_rwlockattr_setpshared 'int (pthread_rwlockattr_t *, int)' extern
| |-ParmVarDecl 0x559b934fb958 <col:43, col:65> col:65 __attr 'pthread_rwlockattr_t *'
| |-ParmVarDecl 0x559b934fb9d8 <line:581:8, col:12> col:12 __pshared 'int'
| |-NoThrowAttr 0x559b934fbbe8 <line:582:22>
| `-NonNullAttr 0x559b934fbc40 <col:63, col:77> 1
|-FunctionDecl 0x559b934fbde8 <line:583:1, line:586:82> line:583:12 pthread_rwlockattr_getkind_np 'int (const pthread_rwlockattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x559b934fbc88 <col:43, line:584:19> col:19 __attr 'const pthread_rwlockattr_t *restrict'
| |-ParmVarDecl 0x559b934fbd08 <line:585:8, col:24> col:24 __pref 'int *restrict'
| |-NoThrowAttr 0x559b934fbe98 <line:586:22>
| `-NonNullAttr 0x559b934fbef0 <col:63, col:80> 1 2
|-FunctionDecl 0x559b934fc078 <line:587:1, line:588:93> line:587:12 pthread_rwlockattr_setkind_np 'int (pthread_rwlockattr_t *, int)' extern
| |-ParmVarDecl 0x559b934fbf38 <col:43, col:65> col:65 __attr 'pthread_rwlockattr_t *'
| |-ParmVarDecl 0x559b934fbfb8 <line:588:8, col:12> col:12 __pref 'int'
| |-NoThrowAttr 0x559b934fc128 <col:36>
| `-NonNullAttr 0x559b934fc180 <col:77, col:91> 1
|-FunctionDecl 0x559b934fc4b8 <line:589:1, line:591:79> line:589:12 pthread_cond_init 'int (pthread_cond_t *restrict, const pthread_condattr_t *restrict)' extern
| |-ParmVarDecl 0x559b934fc260 <col:31, col:58> col:58 __cond 'pthread_cond_t *restrict'
| |-ParmVarDecl 0x559b934fc370 <line:590:10, col:47> col:47 __cond_attr 'const pthread_condattr_t *restrict'
| |-NoThrowAttr 0x559b934fc568 <line:591:22>
| `-NonNullAttr 0x559b934fc5c0 <col:63, col:77> 1
|-FunctionDecl 0x559b934fc738 <line:592:1, line:593:79> line:592:12 pthread_cond_destroy 'int (pthread_cond_t *)' extern
| |-ParmVarDecl 0x559b934fc608 <col:34, col:50> col:50 __cond 'pthread_cond_t *'
| |-NoThrowAttr 0x559b934fc7e0 <line:593:22>
| `-NonNullAttr 0x559b934fc838 <col:63, col:77> 1
|-FunctionDecl 0x559b934fc940 <line:594:1, line:595:68> line:594:12 pthread_cond_signal 'int (pthread_cond_t *)' extern
| |-ParmVarDecl 0x559b934fc888 <col:33, col:49> col:49 __cond 'pthread_cond_t *'
| |-NoThrowAttr 0x559b934fc9e8 <line:595:22>
| `-NonNullAttr 0x559b934fca40 <col:52, col:66> 1
|-FunctionDecl 0x559b934fcb58 <line:596:1, line:597:68> line:596:12 pthread_cond_broadcast 'int (pthread_cond_t *)' extern
| |-ParmVarDecl 0x559b934fcaa0 <col:36, col:52> col:52 __cond 'pthread_cond_t *'
| |-NoThrowAttr 0x559b934fcc00 <line:597:22>
| `-NonNullAttr 0x559b934fcc58 <col:52, col:66> 1
|-FunctionDecl 0x559b934fce88 <line:598:1, line:600:41> line:598:12 pthread_cond_wait 'int (pthread_cond_t *restrict, pthread_mutex_t *restrict)' extern
| |-ParmVarDecl 0x559b934fcca8 <col:31, col:58> col:58 __cond 'pthread_cond_t *restrict'
| |-ParmVarDecl 0x559b934fcd20 <line:599:10, col:38> col:38 __mutex 'pthread_mutex_t *restrict'
| `-NonNullAttr 0x559b934fcf38 <line:600:22, col:39> 1 2
|-FunctionDecl 0x559b934fd268 <line:601:1, line:604:44> line:601:12 pthread_cond_timedwait 'int (pthread_cond_t *restrict, pthread_mutex_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x559b934fcfb8 <col:36, col:63> col:63 __cond 'pthread_cond_t *restrict'
| |-ParmVarDecl 0x559b934fd030 <line:602:8, col:36> col:36 __mutex 'pthread_mutex_t *restrict'
| |-ParmVarDecl 0x559b934fd0c0 <line:603:8, col:42> col:42 __abstime 'const struct timespec *restrict'
| `-NonNullAttr 0x559b934fd320 <line:604:22, col:42> 1 2 3
|-FunctionDecl 0x559b934fd538 <line:605:1, line:606:79> line:605:12 pthread_condattr_init 'int (pthread_condattr_t *)' extern
| |-ParmVarDecl 0x559b934fd400 <col:35, col:55> col:55 __attr 'pthread_condattr_t *'
| |-NoThrowAttr 0x559b934fd5e0 <line:606:22>
| `-NonNullAttr 0x559b934fd638 <col:63, col:77> 1
|-FunctionDecl 0x559b934fd740 <line:607:1, line:608:79> line:607:12 pthread_condattr_destroy 'int (pthread_condattr_t *)' extern
| |-ParmVarDecl 0x559b934fd688 <col:38, col:58> col:58 __attr 'pthread_condattr_t *'
| |-NoThrowAttr 0x559b934fd7e8 <line:608:22>
| `-NonNullAttr 0x559b934fd840 <col:63, col:77> 1
|-FunctionDecl 0x559b934fdaa0 <line:609:1, line:612:82> line:609:12 pthread_condattr_getpshared 'int (const pthread_condattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x559b934fd888 <col:41, line:610:17> col:17 __attr 'const pthread_condattr_t *restrict'
| |-ParmVarDecl 0x559b934fd908 <line:611:6, col:22> col:22 __pshared 'int *restrict'
| |-NoThrowAttr 0x559b934fdb50 <line:612:22>
| `-NonNullAttr 0x559b934fdba8 <col:63, col:80> 1 2
|-FunctionDecl 0x559b934fddb8 <line:613:1, line:614:94> line:613:12 pthread_condattr_setpshared 'int (pthread_condattr_t *, int)' extern
| |-ParmVarDecl 0x559b934fdbf8 <col:41, col:61> col:61 __attr 'pthread_condattr_t *'
| |-ParmVarDecl 0x559b934fdc78 <line:614:6, col:10> col:10 __pshared 'int'
| |-NoThrowAttr 0x559b934fde68 <col:37>
| `-NonNullAttr 0x559b934fdec0 <col:78, col:92> 1
|-FunctionDecl 0x559b934fe0d8 <line:615:1, line:618:82> line:615:12 pthread_condattr_getclock 'int (const pthread_condattr_t *restrict, __clockid_t *restrict)' extern
| |-ParmVarDecl 0x559b934fdf08 <col:39, line:616:22> col:22 __attr 'const pthread_condattr_t *restrict'
| |-ParmVarDecl 0x559b934fdfb0 <line:617:11, col:35> col:35 __clock_id '__clockid_t *restrict'
| |-NoThrowAttr 0x559b934fe188 <line:618:22>
| `-NonNullAttr 0x559b934fe1e0 <col:63, col:80> 1 2
|-FunctionDecl 0x559b934fe3a8 <line:619:1, line:621:79> line:619:12 pthread_condattr_setclock 'int (pthread_condattr_t *, __clockid_t)' extern
| |-ParmVarDecl 0x559b934fe228 <col:39, col:59> col:59 __attr 'pthread_condattr_t *'
| |-ParmVarDecl 0x559b934fe2a0 <line:620:11, col:23> col:23 __clock_id '__clockid_t':'int'
| |-NoThrowAttr 0x559b934fe458 <line:621:22>
| `-NonNullAttr 0x559b934fe4b0 <col:63, col:77> 1
|-FunctionDecl 0x559b934fe758 <line:622:1, line:623:79> line:622:12 pthread_spin_init 'int (pthread_spinlock_t *, int)' extern
| |-ParmVarDecl 0x559b934fe590 <col:31, col:51> col:51 __lock 'pthread_spinlock_t *'
| |-ParmVarDecl 0x559b934fe610 <col:59, col:63> col:63 __pshared 'int'
| |-NoThrowAttr 0x559b934fe808 <line:623:22>
| `-NonNullAttr 0x559b934fe860 <col:63, col:77> 1
|-FunctionDecl 0x559b934fe9d8 <line:624:1, line:625:79> line:624:12 pthread_spin_destroy 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x559b934fe8a8 <col:34, col:54> col:54 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x559b934feab0 <line:625:22>
| `-NonNullAttr 0x559b934feb08 <col:63, col:77> 1
|-FunctionDecl 0x559b934fec10 <line:626:1, line:627:68> line:626:12 pthread_spin_lock 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x559b934feb58 <col:31, col:51> col:51 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x559b934fecb8 <line:627:22>
| `-NonNullAttr 0x559b934fed10 <col:52, col:66> 1
|-FunctionDecl 0x559b934fee10 <line:628:1, line:629:68> line:628:12 pthread_spin_trylock 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x559b934fed58 <col:34, col:54> col:54 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x559b934feeb8 <line:629:22>
| `-NonNullAttr 0x559b934fef10 <col:52, col:66> 1
|-FunctionDecl 0x559b934ff010 <line:630:1, line:631:68> line:630:12 pthread_spin_unlock 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x559b934fef58 <col:33, col:53> col:53 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x559b934ff0b8 <line:631:22>
| `-NonNullAttr 0x559b934ff110 <col:52, col:66> 1
|-FunctionDecl 0x559b934ff4e8 <line:632:1, line:635:79> line:632:12 pthread_barrier_init 'int (pthread_barrier_t *restrict, const pthread_barrierattr_t *restrict, unsigned int)' extern
| |-ParmVarDecl 0x559b934ff1f0 <col:34, col:64> col:64 __barrier 'pthread_barrier_t *restrict'
| |-ParmVarDecl 0x559b934ff300 <line:633:6, line:634:6> col:6 __attr 'const pthread_barrierattr_t *restrict'
| |-ParmVarDecl 0x559b934ff380 <col:14, col:27> col:27 __count 'unsigned int'
| |-NoThrowAttr 0x559b934ff5a0 <line:635:22>
| `-NonNullAttr 0x559b934ff5f8 <col:63, col:77> 1
|-FunctionDecl 0x559b934ff778 <line:636:1, line:637:79> line:636:12 pthread_barrier_destroy 'int (pthread_barrier_t *)' extern
| |-ParmVarDecl 0x559b934ff648 <col:37, col:56> col:56 __barrier 'pthread_barrier_t *'
| |-NoThrowAttr 0x559b934ff820 <line:637:22>
| `-NonNullAttr 0x559b934ff878 <col:63, col:77> 1
|-FunctionDecl 0x559b934ff980 <line:638:1, line:639:68> line:638:12 pthread_barrier_wait 'int (pthread_barrier_t *)' extern
| |-ParmVarDecl 0x559b934ff8c8 <col:34, col:53> col:53 __barrier 'pthread_barrier_t *'
| |-NoThrowAttr 0x559b934ffa28 <line:639:22>
| `-NonNullAttr 0x559b934ffa80 <col:52, col:66> 1
|-FunctionDecl 0x559b93500c88 <line:640:1, line:641:79> line:640:12 pthread_barrierattr_init 'int (pthread_barrierattr_t *)' extern
| |-ParmVarDecl 0x559b93500b50 <col:38, col:61> col:61 __attr 'pthread_barrierattr_t *'
| |-NoThrowAttr 0x559b93500d30 <line:641:22>
| `-NonNullAttr 0x559b93500d88 <col:63, col:77> 1
|-FunctionDecl 0x559b93500e90 <line:642:1, line:643:79> line:642:12 pthread_barrierattr_destroy 'int (pthread_barrierattr_t *)' extern
| |-ParmVarDecl 0x559b93500dd8 <col:41, col:64> col:64 __attr 'pthread_barrierattr_t *'
| |-NoThrowAttr 0x559b93500f38 <line:643:22>
| `-NonNullAttr 0x559b93500f90 <col:63, col:77> 1
|-FunctionDecl 0x559b935011b8 <line:644:1, line:647:82> line:644:12 pthread_barrierattr_getpshared 'int (const pthread_barrierattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x559b93500fd8 <col:44, line:645:20> col:20 __attr 'const pthread_barrierattr_t *restrict'
| |-ParmVarDecl 0x559b93501058 <line:646:9, col:25> col:25 __pshared 'int *restrict'
| |-NoThrowAttr 0x559b93501268 <line:647:22>
| `-NonNullAttr 0x559b935012c0 <col:63, col:80> 1 2
|-FunctionDecl 0x559b935014c8 <line:648:1, line:650:79> line:648:12 pthread_barrierattr_setpshared 'int (pthread_barrierattr_t *, int)' extern
| |-ParmVarDecl 0x559b93501308 <col:44, col:67> col:67 __attr 'pthread_barrierattr_t *'
| |-ParmVarDecl 0x559b93501388 <line:649:9, col:13> col:13 __pshared 'int'
| |-NoThrowAttr 0x559b93501578 <line:650:22>
| `-NonNullAttr 0x559b935015d0 <col:63, col:77> 1
|-FunctionDecl 0x559b93501918 <line:651:1, line:653:79> line:651:12 pthread_key_create 'int (pthread_key_t *, void (*)(void *))' extern
| |-ParmVarDecl 0x559b935016b0 <col:32, col:47> col:47 __key 'pthread_key_t *'
| |-ParmVarDecl 0x559b935017d0 <line:652:11, col:43> col:18 __destr_function 'void (*)(void *)'
| |-NoThrowAttr 0x559b935019c8 <line:653:22>
| `-NonNullAttr 0x559b93501a20 <col:63, col:77> 1
|-FunctionDecl 0x559b93501b88 <line:654:1, col:92> col:12 pthread_key_delete 'int (pthread_key_t)' extern
| |-ParmVarDecl 0x559b93501a68 <col:32, col:46> col:46 __key 'pthread_key_t':'unsigned int'
| `-NoThrowAttr 0x559b93501c30 <col:69>
|-FunctionDecl 0x559b93501da8 <line:655:1, col:95> col:14 pthread_getspecific 'void *(pthread_key_t)' extern
| |-ParmVarDecl 0x559b93501c98 <col:35, col:49> col:49 __key 'pthread_key_t':'unsigned int'
| `-NoThrowAttr 0x559b93501e50 <col:72>
|-FunctionDecl 0x559b93502088 <line:656:1, line:657:67> line:656:12 pthread_setspecific 'int (pthread_key_t, const void *)' extern
| |-ParmVarDecl 0x559b93501eb8 <col:33, col:47> col:47 __key 'pthread_key_t':'unsigned int'
| |-ParmVarDecl 0x559b93501f68 <line:657:5, col:17> col:17 __pointer 'const void *'
| `-NoThrowAttr 0x559b93502138 <col:44>
|-FunctionDecl 0x559b93502358 <line:658:1, line:660:79> line:658:12 pthread_getcpuclockid 'int (pthread_t, __clockid_t *)' extern
| |-ParmVarDecl 0x559b935021a0 <col:35, col:45> col:45 __thread_id 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x559b93502218 <line:659:7, col:20> col:20 __clock_id '__clockid_t *'
| |-NoThrowAttr 0x559b93502408 <line:660:22>
| `-NonNullAttr 0x559b93502460 <col:63, col:77> 2
|-FunctionDecl 0x559b935028a8 <line:661:1, line:663:70> line:661:12 pthread_atfork 'int (void (*)(void), void (*)(void), void (*)(void))' extern
| |-ParmVarDecl 0x559b93502540 <col:28, col:51> col:35 __prepare 'void (*)(void)'
| |-ParmVarDecl 0x559b93502650 <line:662:7, col:29> col:14 __parent 'void (*)(void)'
| |-ParmVarDecl 0x559b93502760 <line:663:7, col:28> col:14 __child 'void (*)(void)'
| `-NoThrowAttr 0x559b93502960 <col:47>
|-FunctionDecl 0x559b93502af0 <line:665:1, col:20> col:8 used P0 'void *(void *)'
| `-ParmVarDecl 0x559b935029d0 <col:11, col:17> col:17 arg 'void *'
|-FunctionDecl 0x559b93502c48 <line:666:1, col:20> col:8 used P1 'void *(void *)'
| `-ParmVarDecl 0x559b93502bb0 <col:11, col:17> col:17 arg 'void *'
|-FunctionDecl 0x559b93502d10 <line:667:1, col:12> col:6 fence 'void ()'
|-FunctionDecl 0x559b93502dd0 <line:668:1, col:12> col:6 isync 'void ()'
|-FunctionDecl 0x559b93502e90 <line:669:1, col:14> col:6 lwfence 'void ()'
|-VarDecl 0x559b93502f48 <line:670:1, col:5> col:5 used __unbuffered_cnt 'int'
|-VarDecl 0x559b93502fc8 prev 0x559b93502f48 <line:671:1, col:24> col:5 used __unbuffered_cnt 'int' cinit
| `-IntegerLiteral 0x559b93503030 <col:24> 'int' 0
|-VarDecl 0x559b93503068 <line:672:1, col:5> col:5 used __unbuffered_p1_EAX 'int'
|-VarDecl 0x559b935030e8 prev 0x559b93503068 <line:673:1, col:27> col:5 used __unbuffered_p1_EAX 'int' cinit
| `-IntegerLiteral 0x559b93503150 <col:27> 'int' 0
|-VarDecl 0x559b93503188 <line:674:1, col:5> col:5 used __unbuffered_p1_EBX 'int'
|-VarDecl 0x559b93503208 prev 0x559b93503188 <line:675:1, col:27> col:5 used __unbuffered_p1_EBX 'int' cinit
| `-IntegerLiteral 0x559b93503270 <col:27> 'int' 0
|-VarDecl 0x559b935032a0 <line:676:1, col:7> col:7 used main$tmp_guard0 '_Bool'
|-VarDecl 0x559b93503318 <line:677:1, col:7> col:7 used main$tmp_guard1 '_Bool'
|-VarDecl 0x559b93503398 <line:678:1, col:5> col:5 used x 'int'
|-VarDecl 0x559b93503418 prev 0x559b93503398 <line:679:1, col:9> col:5 used x 'int' cinit
| `-IntegerLiteral 0x559b93503480 <col:9> 'int' 0
|-VarDecl 0x559b935034b8 <line:680:1, col:5> col:5 used y 'int'
|-VarDecl 0x559b93503538 prev 0x559b935034b8 <line:681:1, col:9> col:5 used y 'int' cinit
| `-IntegerLiteral 0x559b935035a0 <col:9> 'int' 0
|-VarDecl 0x559b935035d0 <line:682:1, col:7> col:7 used y$flush_delayed '_Bool'
|-VarDecl 0x559b93503650 <line:683:1, col:5> col:5 used y$mem_tmp 'int'
|-VarDecl 0x559b935036c8 <line:684:1, col:7> col:7 used y$r_buff0_thd0 '_Bool'
|-VarDecl 0x559b93503740 <line:685:1, col:7> col:7 used y$r_buff0_thd1 '_Bool'
|-VarDecl 0x559b935037b8 <line:686:1, col:7> col:7 used y$r_buff0_thd2 '_Bool'
|-VarDecl 0x559b93503830 <line:687:1, col:7> col:7 used y$r_buff1_thd0 '_Bool'
|-VarDecl 0x559b935038a8 <line:688:1, col:7> col:7 used y$r_buff1_thd1 '_Bool'
|-VarDecl 0x559b93503920 <line:689:1, col:7> col:7 used y$r_buff1_thd2 '_Bool'
|-VarDecl 0x559b93503998 <line:690:1, col:7> col:7 y$read_delayed '_Bool'
|-VarDecl 0x559b93503a18 <line:691:1, col:6> col:6 y$read_delayed_var 'int *'
|-VarDecl 0x559b93503b00 <line:692:1, col:5> col:5 used y$w_buff0 'int'
|-VarDecl 0x559b93503b78 <line:693:1, col:7> col:7 used y$w_buff0_used '_Bool'
|-VarDecl 0x559b93503bf8 <line:694:1, col:5> col:5 used y$w_buff1 'int'
|-VarDecl 0x559b93503c70 <line:695:1, col:7> col:7 used y$w_buff1_used '_Bool'
|-VarDecl 0x559b93503ce8 <line:696:1, col:7> col:7 used weak$$choice0 '_Bool'
|-VarDecl 0x559b93503d60 <line:697:1, col:7> col:7 used weak$$choice2 '_Bool'
|-FunctionDecl 0x559b93503e78 prev 0x559b93502af0 <line:698:1, line:725:1> line:698:8 used P0 'void *(void *)'
| |-ParmVarDecl 0x559b93503de0 <col:11, col:17> col:17 arg 'void *'
| `-CompoundStmt 0x559b93505618 <line:699:1, line:725:1>
|   |-CallExpr 0x559b93503f88 <line:700:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x559b93503f70 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x559b93503f20 <col:3> 'void ()' Function 0x559b934a9e40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x559b93504000 <line:701:3, col:15> 'int' '='
|   | |-DeclRefExpr 0x559b93503fa8 <col:3> 'int' lvalue Var 0x559b93503bf8 'y$w_buff1' 'int'
|   | `-ImplicitCastExpr 0x559b93503fe8 <col:15> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x559b93503fc8 <col:15> 'int' lvalue Var 0x559b93503b00 'y$w_buff0' 'int'
|   |-BinaryOperator 0x559b93504060 <line:702:3, col:15> 'int' '='
|   | |-DeclRefExpr 0x559b93504020 <col:3> 'int' lvalue Var 0x559b93503b00 'y$w_buff0' 'int'
|   | `-IntegerLiteral 0x559b93504040 <col:15> 'int' 1
|   |-BinaryOperator 0x559b935040d8 <line:703:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x559b93504080 <col:3> '_Bool' lvalue Var 0x559b93503c70 'y$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x559b935040c0 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x559b935040a0 <col:20> '_Bool' lvalue Var 0x559b93503b78 'y$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x559b93504170 <line:704:3, col:27> '_Bool' '='
|   | |-DeclRefExpr 0x559b935040f8 <col:3> '_Bool' lvalue Var 0x559b93503b78 'y$w_buff0_used' '_Bool'
|   | `-CStyleCastExpr 0x559b93504148 <col:20, col:27> '_Bool' <IntegralToBoolean>
|   |   `-IntegerLiteral 0x559b93504118 <col:27> 'int' 1
|   |-CallExpr 0x559b935042f8 <line:705:3, col:56> 'void'
|   | |-ImplicitCastExpr 0x559b935042e0 <col:3> 'void (*)(int)' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x559b93504190 <col:3> 'void (int)' Function 0x559b934a9bc8 '__VERIFIER_assert' 'void (int)'
|   | `-UnaryOperator 0x559b93504290 <col:21, col:55> 'int' prefix '!' cannot overflow
|   |   `-ParenExpr 0x559b93504270 <col:22, col:55> 'int'
|   |     `-BinaryOperator 0x559b93504250 <col:23, col:41> 'int' '&&'
|   |       |-ImplicitCastExpr 0x559b93504208 <col:23> 'int' <IntegralCast>
|   |       | `-ImplicitCastExpr 0x559b935041f0 <col:23> '_Bool' <LValueToRValue>
|   |       |   `-DeclRefExpr 0x559b935041b0 <col:23> '_Bool' lvalue Var 0x559b93503c70 'y$w_buff1_used' '_Bool'
|   |       `-ImplicitCastExpr 0x559b93504238 <col:41> 'int' <IntegralCast>
|   |         `-ImplicitCastExpr 0x559b93504220 <col:41> '_Bool' <LValueToRValue>
|   |           `-DeclRefExpr 0x559b935041d0 <col:41> '_Bool' lvalue Var 0x559b93503b78 'y$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x559b93504378 <line:706:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x559b93504320 <col:3> '_Bool' lvalue Var 0x559b93503830 'y$r_buff1_thd0' '_Bool'
|   | `-ImplicitCastExpr 0x559b93504360 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x559b93504340 <col:20> '_Bool' lvalue Var 0x559b935036c8 'y$r_buff0_thd0' '_Bool'
|   |-BinaryOperator 0x559b935043f0 <line:707:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x559b93504398 <col:3> '_Bool' lvalue Var 0x559b935038a8 'y$r_buff1_thd1' '_Bool'
|   | `-ImplicitCastExpr 0x559b935043d8 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x559b935043b8 <col:20> '_Bool' lvalue Var 0x559b93503740 'y$r_buff0_thd1' '_Bool'
|   |-BinaryOperator 0x559b93504468 <line:708:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x559b93504410 <col:3> '_Bool' lvalue Var 0x559b93503920 'y$r_buff1_thd2' '_Bool'
|   | `-ImplicitCastExpr 0x559b93504450 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x559b93504430 <col:20> '_Bool' lvalue Var 0x559b935037b8 'y$r_buff0_thd2' '_Bool'
|   |-BinaryOperator 0x559b93504500 <line:709:3, col:27> '_Bool' '='
|   | |-DeclRefExpr 0x559b93504488 <col:3> '_Bool' lvalue Var 0x559b93503740 'y$r_buff0_thd1' '_Bool'
|   | `-CStyleCastExpr 0x559b935044d8 <col:20, col:27> '_Bool' <IntegralToBoolean>
|   |   `-IntegerLiteral 0x559b935044a8 <col:27> 'int' 1
|   |-CallExpr 0x559b93504558 <line:710:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x559b93504540 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x559b93504520 <col:3> 'void ()' Function 0x559b934a9f00 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x559b935045b0 <line:711:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x559b93504598 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x559b93504578 <col:3> 'void ()' Function 0x559b934a9e40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x559b93504610 <line:712:3, col:7> 'int' '='
|   | |-DeclRefExpr 0x559b935045d0 <col:3> 'int' lvalue Var 0x559b93503418 'x' 'int'
|   | `-IntegerLiteral 0x559b935045f0 <col:7> 'int' 1
|   |-CallExpr 0x559b93504668 <line:713:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x559b93504650 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x559b93504630 <col:3> 'void ()' Function 0x559b934a9f00 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x559b935046c0 <line:714:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x559b935046a8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x559b93504688 <col:3> 'void ()' Function 0x559b934a9e40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x559b935049a8 <line:715:3, col:103> 'int' '='
|   | |-DeclRefExpr 0x559b935046e0 <col:3> 'int' lvalue Var 0x559b93503538 'y' 'int'
|   | `-ConditionalOperator 0x559b93504978 <col:7, col:103> 'int'
|   |   |-BinaryOperator 0x559b935047a0 <col:7, col:25> 'int' '&&'
|   |   | |-ImplicitCastExpr 0x559b93504758 <col:7> 'int' <IntegralCast>
|   |   | | `-ImplicitCastExpr 0x559b93504740 <col:7> '_Bool' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x559b93504700 <col:7> '_Bool' lvalue Var 0x559b93503b78 'y$w_buff0_used' '_Bool'
|   |   | `-ImplicitCastExpr 0x559b93504788 <col:25> 'int' <IntegralCast>
|   |   |   `-ImplicitCastExpr 0x559b93504770 <col:25> '_Bool' <LValueToRValue>
|   |   |     `-DeclRefExpr 0x559b93504720 <col:25> '_Bool' lvalue Var 0x559b93503740 'y$r_buff0_thd1' '_Bool'
|   |   |-ImplicitCastExpr 0x559b93504960 <col:42> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x559b935047c0 <col:42> 'int' lvalue Var 0x559b93503b00 'y$w_buff0' 'int'
|   |   `-ParenExpr 0x559b93504940 <col:54, col:103> 'int'
|   |     `-ConditionalOperator 0x559b93504910 <col:55, col:102> 'int'
|   |       |-BinaryOperator 0x559b93504880 <col:55, col:73> 'int' '&&'
|   |       | |-ImplicitCastExpr 0x559b93504838 <col:55> 'int' <IntegralCast>
|   |       | | `-ImplicitCastExpr 0x559b93504820 <col:55> '_Bool' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x559b935047e0 <col:55> '_Bool' lvalue Var 0x559b93503c70 'y$w_buff1_used' '_Bool'
|   |       | `-ImplicitCastExpr 0x559b93504868 <col:73> 'int' <IntegralCast>
|   |       |   `-ImplicitCastExpr 0x559b93504850 <col:73> '_Bool' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x559b93504800 <col:73> '_Bool' lvalue Var 0x559b935038a8 'y$r_buff1_thd1' '_Bool'
|   |       |-ImplicitCastExpr 0x559b935048e0 <col:90> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x559b935048a0 <col:90> 'int' lvalue Var 0x559b93503bf8 'y$w_buff1' 'int'
|   |       `-ImplicitCastExpr 0x559b935048f8 <col:102> 'int' <LValueToRValue>
|   |         `-DeclRefExpr 0x559b935048c0 <col:102> 'int' lvalue Var 0x559b93503538 'y' 'int'
|   |-BinaryOperator 0x559b93504bc0 <line:716:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x559b935049c8 <col:3> '_Bool' lvalue Var 0x559b93503b78 'y$w_buff0_used' '_Bool'
|   | `-ImplicitCastExpr 0x559b93504ba8 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x559b93504b78 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x559b93504a88 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x559b93504a40 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x559b93504a28 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x559b935049e8 <col:20> '_Bool' lvalue Var 0x559b93503b78 'y$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x559b93504a70 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x559b93504a58 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x559b93504a08 <col:38> '_Bool' lvalue Var 0x559b93503740 'y$r_buff0_thd1' '_Bool'
|   |     |-ImplicitCastExpr 0x559b93504b30 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x559b93504ad8 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x559b93504aa8 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x559b93504b60 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x559b93504b48 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x559b93504b10 <col:66> '_Bool' lvalue Var 0x559b93503b78 'y$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x559b93504ea8 <line:717:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x559b93504be0 <col:3> '_Bool' lvalue Var 0x559b93503c70 'y$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x559b93504e90 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x559b93504e60 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x559b93504d80 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x559b93504ca0 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x559b93504c58 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x559b93504c40 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x559b93504c00 <col:20> '_Bool' lvalue Var 0x559b93503b78 'y$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x559b93504c88 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x559b93504c70 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x559b93504c20 <col:38> '_Bool' lvalue Var 0x559b93503740 'y$r_buff0_thd1' '_Bool'
|   |     | `-BinaryOperator 0x559b93504d60 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x559b93504d18 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x559b93504d00 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x559b93504cc0 <col:56> '_Bool' lvalue Var 0x559b93503c70 'y$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x559b93504d48 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x559b93504d30 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x559b93504ce0 <col:74> '_Bool' lvalue Var 0x559b935038a8 'y$r_buff1_thd1' '_Bool'
|   |     |-ImplicitCastExpr 0x559b93504e18 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x559b93504dd0 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x559b93504da0 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x559b93504e48 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x559b93504e30 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x559b93504df8 <col:102> '_Bool' lvalue Var 0x559b93503c70 'y$w_buff1_used' '_Bool'
|   |-BinaryOperator 0x559b935050b0 <line:718:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x559b93504ec8 <col:3> '_Bool' lvalue Var 0x559b93503740 'y$r_buff0_thd1' '_Bool'
|   | `-ImplicitCastExpr 0x559b93505098 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x559b93505068 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x559b93504f88 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x559b93504f40 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x559b93504f28 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x559b93504ee8 <col:20> '_Bool' lvalue Var 0x559b93503b78 'y$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x559b93504f70 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x559b93504f58 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x559b93504f08 <col:38> '_Bool' lvalue Var 0x559b93503740 'y$r_buff0_thd1' '_Bool'
|   |     |-ImplicitCastExpr 0x559b93505020 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x559b93504fd8 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x559b93504fa8 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x559b93505050 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x559b93505038 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x559b93505000 <col:66> '_Bool' lvalue Var 0x559b93503740 'y$r_buff0_thd1' '_Bool'
|   |-BinaryOperator 0x559b93505398 <line:719:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x559b935050d0 <col:3> '_Bool' lvalue Var 0x559b935038a8 'y$r_buff1_thd1' '_Bool'
|   | `-ImplicitCastExpr 0x559b93505380 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x559b93505350 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x559b93505270 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x559b93505190 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x559b93505148 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x559b93505130 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x559b935050f0 <col:20> '_Bool' lvalue Var 0x559b93503b78 'y$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x559b93505178 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x559b93505160 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x559b93505110 <col:38> '_Bool' lvalue Var 0x559b93503740 'y$r_buff0_thd1' '_Bool'
|   |     | `-BinaryOperator 0x559b93505250 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x559b93505208 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x559b935051f0 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x559b935051b0 <col:56> '_Bool' lvalue Var 0x559b93503c70 'y$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x559b93505238 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x559b93505220 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x559b935051d0 <col:74> '_Bool' lvalue Var 0x559b935038a8 'y$r_buff1_thd1' '_Bool'
|   |     |-ImplicitCastExpr 0x559b93505308 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x559b935052c0 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x559b93505290 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x559b93505338 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x559b93505320 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x559b935052e8 <col:102> '_Bool' lvalue Var 0x559b935038a8 'y$r_buff1_thd1' '_Bool'
|   |-CallExpr 0x559b935053f0 <line:720:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x559b935053d8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x559b935053b8 <col:3> 'void ()' Function 0x559b934a9f00 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x559b93505448 <line:721:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x559b93505430 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x559b93505410 <col:3> 'void ()' Function 0x559b934a9e40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x559b93505500 <line:722:3, col:41> 'int' '='
|   | |-DeclRefExpr 0x559b93505468 <col:3> 'int' lvalue Var 0x559b93502fc8 '__unbuffered_cnt' 'int'
|   | `-BinaryOperator 0x559b935054e0 <col:22, col:41> 'int' '+'
|   |   |-ImplicitCastExpr 0x559b935054c8 <col:22> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x559b93505488 <col:22> 'int' lvalue Var 0x559b93502fc8 '__unbuffered_cnt' 'int'
|   |   `-IntegerLiteral 0x559b935054a8 <col:41> 'int' 1
|   |-CallExpr 0x559b93505558 <line:723:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x559b93505540 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x559b93505520 <col:3> 'void ()' Function 0x559b934a9f00 '__VERIFIER_atomic_end' 'void ()'
|   `-ReturnStmt 0x559b93505608 <line:724:3, col:36>
|     `-CallExpr 0x559b935055e8 <col:10, col:36> 'void *'
|       `-ImplicitCastExpr 0x559b935055d0 <col:10> 'void *(*)(void)' <FunctionToPointerDecay>
|         `-DeclRefExpr 0x559b93505578 <col:10> 'void *(void)' Function 0x559b934a9958 '__VERIFIER_nondet_pointer' 'void *(void)'
|-FunctionDecl 0x559b935057a0 prev 0x559b93502c48 <line:726:1, line:758:1> line:726:8 used P1 'void *(void *)'
| |-ParmVarDecl 0x559b93505708 <col:11, col:17> col:17 arg 'void *'
| `-CompoundStmt 0x559b93509390 <line:727:1, line:758:1>
|   |-CallExpr 0x559b93505880 <line:728:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x559b93505868 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x559b93505848 <col:3> 'void ()' Function 0x559b934a9e40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x559b935058f8 <line:729:3, col:25> 'int' '='
|   | |-DeclRefExpr 0x559b935058a0 <col:3> 'int' lvalue Var 0x559b935030e8 '__unbuffered_p1_EAX' 'int'
|   | `-ImplicitCastExpr 0x559b935058e0 <col:25> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x559b935058c0 <col:25> 'int' lvalue Var 0x559b93503418 'x' 'int'
|   |-CallExpr 0x559b93505950 <line:730:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x559b93505938 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x559b93505918 <col:3> 'void ()' Function 0x559b934a9f00 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x559b935059a8 <line:731:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x559b93505990 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x559b93505970 <col:3> 'void ()' Function 0x559b934a9e40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x559b93505a58 <line:732:3, col:45> '_Bool' '='
|   | |-DeclRefExpr 0x559b935059c8 <col:3> '_Bool' lvalue Var 0x559b93503ce8 'weak$$choice0' '_Bool'
|   | `-ImplicitCastExpr 0x559b93505a40 <col:19, col:45> '_Bool' <PointerToBoolean>
|   |   `-CallExpr 0x559b93505a20 <col:19, col:45> 'void *'
|   |     `-ImplicitCastExpr 0x559b93505a08 <col:19> 'void *(*)(void)' <FunctionToPointerDecay>
|   |       `-DeclRefExpr 0x559b935059e8 <col:19> 'void *(void)' Function 0x559b934a9958 '__VERIFIER_nondet_pointer' 'void *(void)'
|   |-BinaryOperator 0x559b93505b20 <line:733:3, col:45> '_Bool' '='
|   | |-DeclRefExpr 0x559b93505a78 <col:3> '_Bool' lvalue Var 0x559b93503d60 'weak$$choice2' '_Bool'
|   | `-ImplicitCastExpr 0x559b93505af0 <col:19, col:45> '_Bool' <PointerToBoolean>
|   |   `-CallExpr 0x559b93505ad0 <col:19, col:45> 'void *'
|   |     `-ImplicitCastExpr 0x559b93505ab8 <col:19> 'void *(*)(void)' <FunctionToPointerDecay>
|   |       `-DeclRefExpr 0x559b93505a98 <col:19> 'void *(void)' Function 0x559b934a9958 '__VERIFIER_nondet_pointer' 'void *(void)'
|   |-BinaryOperator 0x559b93505b98 <line:734:3, col:21> '_Bool' '='
|   | |-DeclRefExpr 0x559b93505b40 <col:3> '_Bool' lvalue Var 0x559b935035d0 'y$flush_delayed' '_Bool'
|   | `-ImplicitCastExpr 0x559b93505b80 <col:21> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x559b93505b60 <col:21> '_Bool' lvalue Var 0x559b93503d60 'weak$$choice2' '_Bool'
|   |-BinaryOperator 0x559b93505c10 <line:735:3, col:15> 'int' '='
|   | |-DeclRefExpr 0x559b93505bb8 <col:3> 'int' lvalue Var 0x559b93503650 'y$mem_tmp' 'int'
|   | `-ImplicitCastExpr 0x559b93505bf8 <col:15> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x559b93505bd8 <col:15> 'int' lvalue Var 0x559b93503538 'y' 'int'
|   |-BinaryOperator 0x559b93506048 <line:736:3, col:162> 'int' '='
|   | |-DeclRefExpr 0x559b93505c30 <col:3> 'int' lvalue Var 0x559b93503538 'y' 'int'
|   | `-ConditionalOperator 0x559b93506018 <col:7, col:162> 'int'
|   |   |-BinaryOperator 0x559b93505e40 <col:7, col:84> 'int' '||'
|   |   | |-BinaryOperator 0x559b93505d60 <col:7, col:46> 'int' '||'
|   |   | | |-UnaryOperator 0x559b93505c88 <col:7, col:8> 'int' prefix '!' cannot overflow
|   |   | | | `-ImplicitCastExpr 0x559b93505c70 <col:8> '_Bool' <LValueToRValue>
|   |   | | |   `-DeclRefExpr 0x559b93505c50 <col:8> '_Bool' lvalue Var 0x559b93503b78 'y$w_buff0_used' '_Bool'
|   |   | | `-BinaryOperator 0x559b93505d40 <col:26, col:46> 'int' '&&'
|   |   | |   |-UnaryOperator 0x559b93505cd8 <col:26, col:27> 'int' prefix '!' cannot overflow
|   |   | |   | `-ImplicitCastExpr 0x559b93505cc0 <col:27> '_Bool' <LValueToRValue>
|   |   | |   |   `-DeclRefExpr 0x559b93505ca0 <col:27> '_Bool' lvalue Var 0x559b935037b8 'y$r_buff0_thd2' '_Bool'
|   |   | |   `-UnaryOperator 0x559b93505d28 <col:45, col:46> 'int' prefix '!' cannot overflow
|   |   | |     `-ImplicitCastExpr 0x559b93505d10 <col:46> '_Bool' <LValueToRValue>
|   |   | |       `-DeclRefExpr 0x559b93505cf0 <col:46> '_Bool' lvalue Var 0x559b93503c70 'y$w_buff1_used' '_Bool'
|   |   | `-BinaryOperator 0x559b93505e20 <col:64, col:84> 'int' '&&'
|   |   |   |-UnaryOperator 0x559b93505db8 <col:64, col:65> 'int' prefix '!' cannot overflow
|   |   |   | `-ImplicitCastExpr 0x559b93505da0 <col:65> '_Bool' <LValueToRValue>
|   |   |   |   `-DeclRefExpr 0x559b93505d80 <col:65> '_Bool' lvalue Var 0x559b935037b8 'y$r_buff0_thd2' '_Bool'
|   |   |   `-UnaryOperator 0x559b93505e08 <col:83, col:84> 'int' prefix '!' cannot overflow
|   |   |     `-ImplicitCastExpr 0x559b93505df0 <col:84> '_Bool' <LValueToRValue>
|   |   |       `-DeclRefExpr 0x559b93505dd0 <col:84> '_Bool' lvalue Var 0x559b93503920 'y$r_buff1_thd2' '_Bool'
|   |   |-ImplicitCastExpr 0x559b93506000 <col:101> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x559b93505e60 <col:101> 'int' lvalue Var 0x559b93503538 'y' 'int'
|   |   `-ParenExpr 0x559b93505fe0 <col:105, col:162> 'int'
|   |     `-ConditionalOperator 0x559b93505fb0 <col:106, col:153> 'int'
|   |       |-BinaryOperator 0x559b93505f20 <col:106, col:124> 'int' '&&'
|   |       | |-ImplicitCastExpr 0x559b93505ed8 <col:106> 'int' <IntegralCast>
|   |       | | `-ImplicitCastExpr 0x559b93505ec0 <col:106> '_Bool' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x559b93505e80 <col:106> '_Bool' lvalue Var 0x559b93503b78 'y$w_buff0_used' '_Bool'
|   |       | `-ImplicitCastExpr 0x559b93505f08 <col:124> 'int' <IntegralCast>
|   |       |   `-ImplicitCastExpr 0x559b93505ef0 <col:124> '_Bool' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x559b93505ea0 <col:124> '_Bool' lvalue Var 0x559b935037b8 'y$r_buff0_thd2' '_Bool'
|   |       |-ImplicitCastExpr 0x559b93505f80 <col:141> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x559b93505f40 <col:141> 'int' lvalue Var 0x559b93503b00 'y$w_buff0' 'int'
|   |       `-ImplicitCastExpr 0x559b93505f98 <col:153> 'int' <LValueToRValue>
|   |         `-DeclRefExpr 0x559b93505f60 <col:153> 'int' lvalue Var 0x559b93503bf8 'y$w_buff1' 'int'
|   |-BinaryOperator 0x559b93506558 <line:737:3, col:208> 'int' '='
|   | |-DeclRefExpr 0x559b93506068 <col:3> 'int' lvalue Var 0x559b93503b00 'y$w_buff0' 'int'
|   | `-ConditionalOperator 0x559b93506528 <col:15, col:208> 'int'
|   |   |-ImplicitCastExpr 0x559b935064f8 <col:15> 'int' <IntegralCast>
|   |   | `-ImplicitCastExpr 0x559b935064e0 <col:15> '_Bool' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x559b93506088 <col:15> '_Bool' lvalue Var 0x559b93503d60 'weak$$choice2' '_Bool'
|   |   |-ImplicitCastExpr 0x559b93506510 <col:31> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x559b935060a8 <col:31> 'int' lvalue Var 0x559b93503b00 'y$w_buff0' 'int'
|   |   `-ParenExpr 0x559b935064c0 <col:43, col:208> 'int'
|   |     `-ConditionalOperator 0x559b93506490 <col:44, col:207> 'int'
|   |       |-BinaryOperator 0x559b935062b8 <col:44, col:121> 'int' '||'
|   |       | |-BinaryOperator 0x559b935061d8 <col:44, col:83> 'int' '||'
|   |       | | |-UnaryOperator 0x559b93506100 <col:44, col:45> 'int' prefix '!' cannot overflow
|   |       | | | `-ImplicitCastExpr 0x559b935060e8 <col:45> '_Bool' <LValueToRValue>
|   |       | | |   `-DeclRefExpr 0x559b935060c8 <col:45> '_Bool' lvalue Var 0x559b93503b78 'y$w_buff0_used' '_Bool'
|   |       | | `-BinaryOperator 0x559b935061b8 <col:63, col:83> 'int' '&&'
|   |       | |   |-UnaryOperator 0x559b93506150 <col:63, col:64> 'int' prefix '!' cannot overflow
|   |       | |   | `-ImplicitCastExpr 0x559b93506138 <col:64> '_Bool' <LValueToRValue>
|   |       | |   |   `-DeclRefExpr 0x559b93506118 <col:64> '_Bool' lvalue Var 0x559b935037b8 'y$r_buff0_thd2' '_Bool'
|   |       | |   `-UnaryOperator 0x559b935061a0 <col:82, col:83> 'int' prefix '!' cannot overflow
|   |       | |     `-ImplicitCastExpr 0x559b93506188 <col:83> '_Bool' <LValueToRValue>
|   |       | |       `-DeclRefExpr 0x559b93506168 <col:83> '_Bool' lvalue Var 0x559b93503c70 'y$w_buff1_used' '_Bool'
|   |       | `-BinaryOperator 0x559b93506298 <col:101, col:121> 'int' '&&'
|   |       |   |-UnaryOperator 0x559b93506230 <col:101, col:102> 'int' prefix '!' cannot overflow
|   |       |   | `-ImplicitCastExpr 0x559b93506218 <col:102> '_Bool' <LValueToRValue>
|   |       |   |   `-DeclRefExpr 0x559b935061f8 <col:102> '_Bool' lvalue Var 0x559b935037b8 'y$r_buff0_thd2' '_Bool'
|   |       |   `-UnaryOperator 0x559b93506280 <col:120, col:121> 'int' prefix '!' cannot overflow
|   |       |     `-ImplicitCastExpr 0x559b93506268 <col:121> '_Bool' <LValueToRValue>
|   |       |       `-DeclRefExpr 0x559b93506248 <col:121> '_Bool' lvalue Var 0x559b93503920 'y$r_buff1_thd2' '_Bool'
|   |       |-ImplicitCastExpr 0x559b93506478 <col:138> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x559b935062d8 <col:138> 'int' lvalue Var 0x559b93503b00 'y$w_buff0' 'int'
|   |       `-ParenExpr 0x559b93506458 <col:150, col:207> 'int'
|   |         `-ConditionalOperator 0x559b93506428 <col:151, col:198> 'int'
|   |           |-BinaryOperator 0x559b93506398 <col:151, col:169> 'int' '&&'
|   |           | |-ImplicitCastExpr 0x559b93506350 <col:151> 'int' <IntegralCast>
|   |           | | `-ImplicitCastExpr 0x559b93506338 <col:151> '_Bool' <LValueToRValue>
|   |           | |   `-DeclRefExpr 0x559b935062f8 <col:151> '_Bool' lvalue Var 0x559b93503b78 'y$w_buff0_used' '_Bool'
|   |           | `-ImplicitCastExpr 0x559b93506380 <col:169> 'int' <IntegralCast>
|   |           |   `-ImplicitCastExpr 0x559b93506368 <col:169> '_Bool' <LValueToRValue>
|   |           |     `-DeclRefExpr 0x559b93506318 <col:169> '_Bool' lvalue Var 0x559b935037b8 'y$r_buff0_thd2' '_Bool'
|   |           |-ImplicitCastExpr 0x559b935063f8 <col:186> 'int' <LValueToRValue>
|   |           | `-DeclRefExpr 0x559b935063b8 <col:186> 'int' lvalue Var 0x559b93503b00 'y$w_buff0' 'int'
|   |           `-ImplicitCastExpr 0x559b93506410 <col:198> 'int' <LValueToRValue>
|   |             `-DeclRefExpr 0x559b935063d8 <col:198> 'int' lvalue Var 0x559b93503b00 'y$w_buff0' 'int'
|   |-BinaryOperator 0x559b93506a68 <line:738:3, col:208> 'int' '='
|   | |-DeclRefExpr 0x559b93506578 <col:3> 'int' lvalue Var 0x559b93503bf8 'y$w_buff1' 'int'
|   | `-ConditionalOperator 0x559b93506a38 <col:15, col:208> 'int'
|   |   |-ImplicitCastExpr 0x559b93506a08 <col:15> 'int' <IntegralCast>
|   |   | `-ImplicitCastExpr 0x559b935069f0 <col:15> '_Bool' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x559b93506598 <col:15> '_Bool' lvalue Var 0x559b93503d60 'weak$$choice2' '_Bool'
|   |   |-ImplicitCastExpr 0x559b93506a20 <col:31> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x559b935065b8 <col:31> 'int' lvalue Var 0x559b93503bf8 'y$w_buff1' 'int'
|   |   `-ParenExpr 0x559b935069d0 <col:43, col:208> 'int'
|   |     `-ConditionalOperator 0x559b935069a0 <col:44, col:207> 'int'
|   |       |-BinaryOperator 0x559b935067c8 <col:44, col:121> 'int' '||'
|   |       | |-BinaryOperator 0x559b935066e8 <col:44, col:83> 'int' '||'
|   |       | | |-UnaryOperator 0x559b93506610 <col:44, col:45> 'int' prefix '!' cannot overflow
|   |       | | | `-ImplicitCastExpr 0x559b935065f8 <col:45> '_Bool' <LValueToRValue>
|   |       | | |   `-DeclRefExpr 0x559b935065d8 <col:45> '_Bool' lvalue Var 0x559b93503b78 'y$w_buff0_used' '_Bool'
|   |       | | `-BinaryOperator 0x559b935066c8 <col:63, col:83> 'int' '&&'
|   |       | |   |-UnaryOperator 0x559b93506660 <col:63, col:64> 'int' prefix '!' cannot overflow
|   |       | |   | `-ImplicitCastExpr 0x559b93506648 <col:64> '_Bool' <LValueToRValue>
|   |       | |   |   `-DeclRefExpr 0x559b93506628 <col:64> '_Bool' lvalue Var 0x559b935037b8 'y$r_buff0_thd2' '_Bool'
|   |       | |   `-UnaryOperator 0x559b935066b0 <col:82, col:83> 'int' prefix '!' cannot overflow
|   |       | |     `-ImplicitCastExpr 0x559b93506698 <col:83> '_Bool' <LValueToRValue>
|   |       | |       `-DeclRefExpr 0x559b93506678 <col:83> '_Bool' lvalue Var 0x559b93503c70 'y$w_buff1_used' '_Bool'
|   |       | `-BinaryOperator 0x559b935067a8 <col:101, col:121> 'int' '&&'
|   |       |   |-UnaryOperator 0x559b93506740 <col:101, col:102> 'int' prefix '!' cannot overflow
|   |       |   | `-ImplicitCastExpr 0x559b93506728 <col:102> '_Bool' <LValueToRValue>
|   |       |   |   `-DeclRefExpr 0x559b93506708 <col:102> '_Bool' lvalue Var 0x559b935037b8 'y$r_buff0_thd2' '_Bool'
|   |       |   `-UnaryOperator 0x559b93506790 <col:120, col:121> 'int' prefix '!' cannot overflow
|   |       |     `-ImplicitCastExpr 0x559b93506778 <col:121> '_Bool' <LValueToRValue>
|   |       |       `-DeclRefExpr 0x559b93506758 <col:121> '_Bool' lvalue Var 0x559b93503920 'y$r_buff1_thd2' '_Bool'
|   |       |-ImplicitCastExpr 0x559b93506988 <col:138> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x559b935067e8 <col:138> 'int' lvalue Var 0x559b93503bf8 'y$w_buff1' 'int'
|   |       `-ParenExpr 0x559b93506968 <col:150, col:207> 'int'
|   |         `-ConditionalOperator 0x559b93506938 <col:151, col:198> 'int'
|   |           |-BinaryOperator 0x559b935068a8 <col:151, col:169> 'int' '&&'
|   |           | |-ImplicitCastExpr 0x559b93506860 <col:151> 'int' <IntegralCast>
|   |           | | `-ImplicitCastExpr 0x559b93506848 <col:151> '_Bool' <LValueToRValue>
|   |           | |   `-DeclRefExpr 0x559b93506808 <col:151> '_Bool' lvalue Var 0x559b93503b78 'y$w_buff0_used' '_Bool'
|   |           | `-ImplicitCastExpr 0x559b93506890 <col:169> 'int' <IntegralCast>
|   |           |   `-ImplicitCastExpr 0x559b93506878 <col:169> '_Bool' <LValueToRValue>
|   |           |     `-DeclRefExpr 0x559b93506828 <col:169> '_Bool' lvalue Var 0x559b935037b8 'y$r_buff0_thd2' '_Bool'
|   |           |-ImplicitCastExpr 0x559b93506908 <col:186> 'int' <LValueToRValue>
|   |           | `-DeclRefExpr 0x559b935068c8 <col:186> 'int' lvalue Var 0x559b93503bf8 'y$w_buff1' 'int'
|   |           `-ImplicitCastExpr 0x559b93506920 <col:198> 'int' <LValueToRValue>
|   |             `-DeclRefExpr 0x559b935068e8 <col:198> 'int' lvalue Var 0x559b93503bf8 'y$w_buff1' 'int'
|   |-BinaryOperator 0x559b93507020 <line:739:3, col:227> '_Bool' '='
|   | |-DeclRefExpr 0x559b93506a88 <col:3> '_Bool' lvalue Var 0x559b93503b78 'y$w_buff0_used' '_Bool'
|   | `-ImplicitCastExpr 0x559b93507008 <col:20, col:227> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x559b93506fd8 <col:20, col:227> 'int'
|   |     |-ImplicitCastExpr 0x559b93506f90 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x559b93506f78 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x559b93506aa8 <col:20> '_Bool' lvalue Var 0x559b93503d60 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x559b93506fc0 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x559b93506fa8 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x559b93506ac8 <col:36> '_Bool' lvalue Var 0x559b93503b78 'y$w_buff0_used' '_Bool'
|   |     `-ParenExpr 0x559b93506f58 <col:53, col:227> 'int'
|   |       `-ConditionalOperator 0x559b93506f28 <col:54, col:226> 'int'
|   |         |-BinaryOperator 0x559b93506ce8 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x559b93506c08 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x559b93506b30 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x559b93506b08 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x559b93506ae8 <col:55> '_Bool' lvalue Var 0x559b93503b78 'y$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x559b93506be8 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x559b93506b80 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x559b93506b68 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x559b93506b48 <col:74> '_Bool' lvalue Var 0x559b935037b8 'y$r_buff0_thd2' '_Bool'
|   |         | |   `-UnaryOperator 0x559b93506bd0 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x559b93506bb8 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x559b93506b98 <col:93> '_Bool' lvalue Var 0x559b93503c70 'y$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x559b93506cc8 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x559b93506c60 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x559b93506c48 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x559b93506c28 <col:112> '_Bool' lvalue Var 0x559b935037b8 'y$r_buff0_thd2' '_Bool'
|   |         |   `-UnaryOperator 0x559b93506cb0 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x559b93506c98 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x559b93506c78 <col:131> '_Bool' lvalue Var 0x559b93503920 'y$r_buff1_thd2' '_Bool'
|   |         |-ImplicitCastExpr 0x559b93506f10 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x559b93506ef8 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x559b93506d08 <col:148> '_Bool' lvalue Var 0x559b93503b78 'y$w_buff0_used' '_Bool'
|   |         `-ParenExpr 0x559b93506ed8 <col:165, col:226> 'int'
|   |           `-ConditionalOperator 0x559b93506ea8 <col:166, col:212> 'int'
|   |             |-BinaryOperator 0x559b93506dc8 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x559b93506d80 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x559b93506d68 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x559b93506d28 <col:166> '_Bool' lvalue Var 0x559b93503b78 'y$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x559b93506db0 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x559b93506d98 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x559b93506d48 <col:184> '_Bool' lvalue Var 0x559b935037b8 'y$r_buff0_thd2' '_Bool'
|   |             |-ImplicitCastExpr 0x559b93506e60 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x559b93506e18 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x559b93506de8 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x559b93506e90 <col:212> 'int' <IntegralCast>
|   |               `-ImplicitCastExpr 0x559b93506e78 <col:212> '_Bool' <LValueToRValue>
|   |                 `-DeclRefExpr 0x559b93506e40 <col:212> '_Bool' lvalue Var 0x559b93503b78 'y$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x559b935075e8 <line:740:3, col:221> '_Bool' '='
|   | |-DeclRefExpr 0x559b93507040 <col:3> '_Bool' lvalue Var 0x559b93503c70 'y$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x559b935075d0 <col:20, col:221> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x559b935075a0 <col:20, col:221> 'int'
|   |     |-ImplicitCastExpr 0x559b93507558 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x559b93507540 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x559b93507060 <col:20> '_Bool' lvalue Var 0x559b93503d60 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x559b93507588 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x559b93507570 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x559b93507080 <col:36> '_Bool' lvalue Var 0x559b93503c70 'y$w_buff1_used' '_Bool'
|   |     `-ParenExpr 0x559b93507520 <col:53, col:221> 'int'
|   |       `-ConditionalOperator 0x559b935074f0 <col:54, col:220> 'int'
|   |         |-BinaryOperator 0x559b93507290 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x559b935071b0 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x559b935070d8 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x559b935070c0 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x559b935070a0 <col:55> '_Bool' lvalue Var 0x559b93503b78 'y$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x559b93507190 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x559b93507128 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x559b93507110 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x559b935070f0 <col:74> '_Bool' lvalue Var 0x559b935037b8 'y$r_buff0_thd2' '_Bool'
|   |         | |   `-UnaryOperator 0x559b93507178 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x559b93507160 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x559b93507140 <col:93> '_Bool' lvalue Var 0x559b93503c70 'y$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x559b93507270 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x559b93507208 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x559b935071f0 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x559b935071d0 <col:112> '_Bool' lvalue Var 0x559b935037b8 'y$r_buff0_thd2' '_Bool'
|   |         |   `-UnaryOperator 0x559b93507258 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x559b93507240 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x559b93507220 <col:131> '_Bool' lvalue Var 0x559b93503920 'y$r_buff1_thd2' '_Bool'
|   |         |-ImplicitCastExpr 0x559b935074d8 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x559b935074c0 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x559b935072b0 <col:148> '_Bool' lvalue Var 0x559b93503c70 'y$w_buff1_used' '_Bool'
|   |         `-ParenExpr 0x559b935074a0 <col:165, col:220> 'int'
|   |           `-ConditionalOperator 0x559b93507470 <col:166, col:219> 'int'
|   |             |-BinaryOperator 0x559b93507370 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x559b93507328 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x559b93507310 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x559b935072d0 <col:166> '_Bool' lvalue Var 0x559b93503b78 'y$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x559b93507358 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x559b93507340 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x559b935072f0 <col:184> '_Bool' lvalue Var 0x559b935037b8 'y$r_buff0_thd2' '_Bool'
|   |             |-ImplicitCastExpr 0x559b93507440 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x559b935073c0 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x559b93507390 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x559b93507458 <col:212, col:219> 'int' <IntegralCast>
|   |               `-CStyleCastExpr 0x559b93507418 <col:212, col:219> '_Bool' <IntegralToBoolean>
|   |                 `-IntegerLiteral 0x559b935073e8 <col:219> 'int' 0
|   |-BinaryOperator 0x559b93507ba0 <line:741:3, col:227> '_Bool' '='
|   | |-DeclRefExpr 0x559b93507608 <col:3> '_Bool' lvalue Var 0x559b935037b8 'y$r_buff0_thd2' '_Bool'
|   | `-ImplicitCastExpr 0x559b93507b88 <col:20, col:227> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x559b93507b58 <col:20, col:227> 'int'
|   |     |-ImplicitCastExpr 0x559b93507b00 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x559b93507ae8 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x559b93507628 <col:20> '_Bool' lvalue Var 0x559b93503d60 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x559b93507b40 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x559b93507b18 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x559b93507648 <col:36> '_Bool' lvalue Var 0x559b935037b8 'y$r_buff0_thd2' '_Bool'
|   |     `-ParenExpr 0x559b93507ac8 <col:53, col:227> 'int'
|   |       `-ConditionalOperator 0x559b93507a98 <col:54, col:226> 'int'
|   |         |-BinaryOperator 0x559b93507858 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x559b93507778 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x559b935076a0 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x559b93507688 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x559b93507668 <col:55> '_Bool' lvalue Var 0x559b93503b78 'y$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x559b93507758 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x559b935076f0 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x559b935076d8 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x559b935076b8 <col:74> '_Bool' lvalue Var 0x559b935037b8 'y$r_buff0_thd2' '_Bool'
|   |         | |   `-UnaryOperator 0x559b93507740 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x559b93507728 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x559b93507708 <col:93> '_Bool' lvalue Var 0x559b93503c70 'y$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x559b93507838 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x559b935077d0 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x559b935077b8 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x559b93507798 <col:112> '_Bool' lvalue Var 0x559b935037b8 'y$r_buff0_thd2' '_Bool'
|   |         |   `-UnaryOperator 0x559b93507820 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x559b93507808 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x559b935077e8 <col:131> '_Bool' lvalue Var 0x559b93503920 'y$r_buff1_thd2' '_Bool'
|   |         |-ImplicitCastExpr 0x559b93507a80 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x559b93507a68 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x559b93507878 <col:148> '_Bool' lvalue Var 0x559b935037b8 'y$r_buff0_thd2' '_Bool'
|   |         `-ParenExpr 0x559b93507a48 <col:165, col:226> 'int'
|   |           `-ConditionalOperator 0x559b93507a18 <col:166, col:212> 'int'
|   |             |-BinaryOperator 0x559b93507938 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x559b935078f0 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x559b935078d8 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x559b93507898 <col:166> '_Bool' lvalue Var 0x559b93503b78 'y$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x559b93507920 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x559b93507908 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x559b935078b8 <col:184> '_Bool' lvalue Var 0x559b935037b8 'y$r_buff0_thd2' '_Bool'
|   |             |-ImplicitCastExpr 0x559b935079d0 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x559b93507988 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x559b93507958 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x559b93507a00 <col:212> 'int' <IntegralCast>
|   |               `-ImplicitCastExpr 0x559b935079e8 <col:212> '_Bool' <LValueToRValue>
|   |                 `-DeclRefExpr 0x559b935079b0 <col:212> '_Bool' lvalue Var 0x559b935037b8 'y$r_buff0_thd2' '_Bool'
|   |-BinaryOperator 0x559b93508168 <line:742:3, col:221> '_Bool' '='
|   | |-DeclRefExpr 0x559b93507bc0 <col:3> '_Bool' lvalue Var 0x559b93503920 'y$r_buff1_thd2' '_Bool'
|   | `-ImplicitCastExpr 0x559b93508150 <col:20, col:221> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x559b93508120 <col:20, col:221> 'int'
|   |     |-ImplicitCastExpr 0x559b935080d8 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x559b935080c0 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x559b93507be0 <col:20> '_Bool' lvalue Var 0x559b93503d60 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x559b93508108 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x559b935080f0 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x559b93507c00 <col:36> '_Bool' lvalue Var 0x559b93503920 'y$r_buff1_thd2' '_Bool'
|   |     `-ParenExpr 0x559b935080a0 <col:53, col:221> 'int'
|   |       `-ConditionalOperator 0x559b93508070 <col:54, col:220> 'int'
|   |         |-BinaryOperator 0x559b93507e10 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x559b93507d30 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x559b93507c58 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x559b93507c40 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x559b93507c20 <col:55> '_Bool' lvalue Var 0x559b93503b78 'y$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x559b93507d10 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x559b93507ca8 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x559b93507c90 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x559b93507c70 <col:74> '_Bool' lvalue Var 0x559b935037b8 'y$r_buff0_thd2' '_Bool'
|   |         | |   `-UnaryOperator 0x559b93507cf8 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x559b93507ce0 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x559b93507cc0 <col:93> '_Bool' lvalue Var 0x559b93503c70 'y$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x559b93507df0 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x559b93507d88 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x559b93507d70 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x559b93507d50 <col:112> '_Bool' lvalue Var 0x559b935037b8 'y$r_buff0_thd2' '_Bool'
|   |         |   `-UnaryOperator 0x559b93507dd8 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x559b93507dc0 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x559b93507da0 <col:131> '_Bool' lvalue Var 0x559b93503920 'y$r_buff1_thd2' '_Bool'
|   |         |-ImplicitCastExpr 0x559b93508058 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x559b93508040 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x559b93507e30 <col:148> '_Bool' lvalue Var 0x559b93503920 'y$r_buff1_thd2' '_Bool'
|   |         `-ParenExpr 0x559b93508020 <col:165, col:220> 'int'
|   |           `-ConditionalOperator 0x559b93507ff0 <col:166, col:219> 'int'
|   |             |-BinaryOperator 0x559b93507ef0 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x559b93507ea8 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x559b93507e90 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x559b93507e50 <col:166> '_Bool' lvalue Var 0x559b93503b78 'y$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x559b93507ed8 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x559b93507ec0 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x559b93507e70 <col:184> '_Bool' lvalue Var 0x559b935037b8 'y$r_buff0_thd2' '_Bool'
|   |             |-ImplicitCastExpr 0x559b93507fc0 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x559b93507f40 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x559b93507f10 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x559b93507fd8 <col:212, col:219> 'int' <IntegralCast>
|   |               `-CStyleCastExpr 0x559b93507f98 <col:212, col:219> '_Bool' <IntegralToBoolean>
|   |                 `-IntegerLiteral 0x559b93507f68 <col:219> 'int' 0
|   |-BinaryOperator 0x559b935081e0 <line:743:3, col:25> 'int' '='
|   | |-DeclRefExpr 0x559b93508188 <col:3> 'int' lvalue Var 0x559b93503208 '__unbuffered_p1_EBX' 'int'
|   | `-ImplicitCastExpr 0x559b935081c8 <col:25> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x559b935081a8 <col:25> 'int' lvalue Var 0x559b93503538 'y' 'int'
|   |-BinaryOperator 0x559b93508310 <line:744:3, col:37> 'int' '='
|   | |-DeclRefExpr 0x559b93508200 <col:3> 'int' lvalue Var 0x559b93503538 'y' 'int'
|   | `-ConditionalOperator 0x559b935082e0 <col:7, col:37> 'int'
|   |   |-ImplicitCastExpr 0x559b93508298 <col:7> 'int' <IntegralCast>
|   |   | `-ImplicitCastExpr 0x559b93508280 <col:7> '_Bool' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x559b93508220 <col:7> '_Bool' lvalue Var 0x559b935035d0 'y$flush_delayed' '_Bool'
|   |   |-ImplicitCastExpr 0x559b935082b0 <col:25> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x559b93508240 <col:25> 'int' lvalue Var 0x559b93503650 'y$mem_tmp' 'int'
|   |   `-ImplicitCastExpr 0x559b935082c8 <col:37> 'int' <LValueToRValue>
|   |     `-DeclRefExpr 0x559b93508260 <col:37> 'int' lvalue Var 0x559b93503538 'y' 'int'
|   |-BinaryOperator 0x559b935083a8 <line:745:3, col:28> '_Bool' '='
|   | |-DeclRefExpr 0x559b93508330 <col:3> '_Bool' lvalue Var 0x559b935035d0 'y$flush_delayed' '_Bool'
|   | `-CStyleCastExpr 0x559b93508380 <col:21, col:28> '_Bool' <IntegralToBoolean>
|   |   `-IntegerLiteral 0x559b93508350 <col:28> 'int' 0
|   |-CallExpr 0x559b93508400 <line:746:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x559b935083e8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x559b935083c8 <col:3> 'void ()' Function 0x559b934a9f00 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x559b93508458 <line:747:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x559b93508440 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x559b93508420 <col:3> 'void ()' Function 0x559b934a9e40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x559b93508740 <line:748:3, col:103> 'int' '='
|   | |-DeclRefExpr 0x559b93508478 <col:3> 'int' lvalue Var 0x559b93503538 'y' 'int'
|   | `-ConditionalOperator 0x559b93508710 <col:7, col:103> 'int'
|   |   |-BinaryOperator 0x559b93508538 <col:7, col:25> 'int' '&&'
|   |   | |-ImplicitCastExpr 0x559b935084f0 <col:7> 'int' <IntegralCast>
|   |   | | `-ImplicitCastExpr 0x559b935084d8 <col:7> '_Bool' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x559b93508498 <col:7> '_Bool' lvalue Var 0x559b93503b78 'y$w_buff0_used' '_Bool'
|   |   | `-ImplicitCastExpr 0x559b93508520 <col:25> 'int' <IntegralCast>
|   |   |   `-ImplicitCastExpr 0x559b93508508 <col:25> '_Bool' <LValueToRValue>
|   |   |     `-DeclRefExpr 0x559b935084b8 <col:25> '_Bool' lvalue Var 0x559b935037b8 'y$r_buff0_thd2' '_Bool'
|   |   |-ImplicitCastExpr 0x559b935086f8 <col:42> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x559b93508558 <col:42> 'int' lvalue Var 0x559b93503b00 'y$w_buff0' 'int'
|   |   `-ParenExpr 0x559b935086d8 <col:54, col:103> 'int'
|   |     `-ConditionalOperator 0x559b935086a8 <col:55, col:102> 'int'
|   |       |-BinaryOperator 0x559b93508618 <col:55, col:73> 'int' '&&'
|   |       | |-ImplicitCastExpr 0x559b935085d0 <col:55> 'int' <IntegralCast>
|   |       | | `-ImplicitCastExpr 0x559b935085b8 <col:55> '_Bool' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x559b93508578 <col:55> '_Bool' lvalue Var 0x559b93503c70 'y$w_buff1_used' '_Bool'
|   |       | `-ImplicitCastExpr 0x559b93508600 <col:73> 'int' <IntegralCast>
|   |       |   `-ImplicitCastExpr 0x559b935085e8 <col:73> '_Bool' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x559b93508598 <col:73> '_Bool' lvalue Var 0x559b93503920 'y$r_buff1_thd2' '_Bool'
|   |       |-ImplicitCastExpr 0x559b93508678 <col:90> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x559b93508638 <col:90> 'int' lvalue Var 0x559b93503bf8 'y$w_buff1' 'int'
|   |       `-ImplicitCastExpr 0x559b93508690 <col:102> 'int' <LValueToRValue>
|   |         `-DeclRefExpr 0x559b93508658 <col:102> 'int' lvalue Var 0x559b93503538 'y' 'int'
|   |-BinaryOperator 0x559b93508948 <line:749:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x559b93508760 <col:3> '_Bool' lvalue Var 0x559b93503b78 'y$w_buff0_used' '_Bool'
|   | `-ImplicitCastExpr 0x559b93508930 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x559b93508900 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x559b93508820 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x559b935087d8 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x559b935087c0 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x559b93508780 <col:20> '_Bool' lvalue Var 0x559b93503b78 'y$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x559b93508808 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x559b935087f0 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x559b935087a0 <col:38> '_Bool' lvalue Var 0x559b935037b8 'y$r_buff0_thd2' '_Bool'
|   |     |-ImplicitCastExpr 0x559b935088b8 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x559b93508870 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x559b93508840 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x559b935088e8 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x559b935088d0 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x559b93508898 <col:66> '_Bool' lvalue Var 0x559b93503b78 'y$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x559b93508c58 <line:750:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x559b93508968 <col:3> '_Bool' lvalue Var 0x559b93503c70 'y$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x559b93508c40 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x559b93508c10 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x559b93508b08 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x559b93508a28 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x559b935089e0 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x559b935089c8 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x559b93508988 <col:20> '_Bool' lvalue Var 0x559b93503b78 'y$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x559b93508a10 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x559b935089f8 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x559b935089a8 <col:38> '_Bool' lvalue Var 0x559b935037b8 'y$r_buff0_thd2' '_Bool'
|   |     | `-BinaryOperator 0x559b93508ae8 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x559b93508aa0 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x559b93508a88 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x559b93508a48 <col:56> '_Bool' lvalue Var 0x559b93503c70 'y$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x559b93508ad0 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x559b93508ab8 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x559b93508a68 <col:74> '_Bool' lvalue Var 0x559b93503920 'y$r_buff1_thd2' '_Bool'
|   |     |-ImplicitCastExpr 0x559b93508bc8 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x559b93508b80 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x559b93508b50 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x559b93508bf8 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x559b93508be0 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x559b93508ba8 <col:102> '_Bool' lvalue Var 0x559b93503c70 'y$w_buff1_used' '_Bool'
|   |-BinaryOperator 0x559b93508e60 <line:751:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x559b93508c78 <col:3> '_Bool' lvalue Var 0x559b935037b8 'y$r_buff0_thd2' '_Bool'
|   | `-ImplicitCastExpr 0x559b93508e48 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x559b93508e18 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x559b93508d38 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x559b93508cf0 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x559b93508cd8 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x559b93508c98 <col:20> '_Bool' lvalue Var 0x559b93503b78 'y$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x559b93508d20 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x559b93508d08 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x559b93508cb8 <col:38> '_Bool' lvalue Var 0x559b935037b8 'y$r_buff0_thd2' '_Bool'
|   |     |-ImplicitCastExpr 0x559b93508dd0 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x559b93508d88 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x559b93508d58 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x559b93508e00 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x559b93508de8 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x559b93508db0 <col:66> '_Bool' lvalue Var 0x559b935037b8 'y$r_buff0_thd2' '_Bool'
|   |-BinaryOperator 0x559b93509148 <line:752:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x559b93508e80 <col:3> '_Bool' lvalue Var 0x559b93503920 'y$r_buff1_thd2' '_Bool'
|   | `-ImplicitCastExpr 0x559b93509130 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x559b93509100 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x559b93509020 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x559b93508f40 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x559b93508ef8 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x559b93508ee0 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x559b93508ea0 <col:20> '_Bool' lvalue Var 0x559b93503b78 'y$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x559b93508f28 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x559b93508f10 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x559b93508ec0 <col:38> '_Bool' lvalue Var 0x559b935037b8 'y$r_buff0_thd2' '_Bool'
|   |     | `-BinaryOperator 0x559b93509000 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x559b93508fb8 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x559b93508fa0 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x559b93508f60 <col:56> '_Bool' lvalue Var 0x559b93503c70 'y$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x559b93508fe8 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x559b93508fd0 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x559b93508f80 <col:74> '_Bool' lvalue Var 0x559b93503920 'y$r_buff1_thd2' '_Bool'
|   |     |-ImplicitCastExpr 0x559b935090b8 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x559b93509070 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x559b93509040 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x559b935090e8 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x559b935090d0 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x559b93509098 <col:102> '_Bool' lvalue Var 0x559b93503920 'y$r_buff1_thd2' '_Bool'
|   |-CallExpr 0x559b935091a0 <line:753:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x559b93509188 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x559b93509168 <col:3> 'void ()' Function 0x559b934a9f00 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x559b935091f8 <line:754:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x559b935091e0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x559b935091c0 <col:3> 'void ()' Function 0x559b934a9e40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x559b935092b0 <line:755:3, col:41> 'int' '='
|   | |-DeclRefExpr 0x559b93509218 <col:3> 'int' lvalue Var 0x559b93502fc8 '__unbuffered_cnt' 'int'
|   | `-BinaryOperator 0x559b93509290 <col:22, col:41> 'int' '+'
|   |   |-ImplicitCastExpr 0x559b93509278 <col:22> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x559b93509238 <col:22> 'int' lvalue Var 0x559b93502fc8 '__unbuffered_cnt' 'int'
|   |   `-IntegerLiteral 0x559b93509258 <col:41> 'int' 1
|   |-CallExpr 0x559b93509308 <line:756:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x559b935092f0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x559b935092d0 <col:3> 'void ()' Function 0x559b934a9f00 '__VERIFIER_atomic_end' 'void ()'
|   `-ReturnStmt 0x559b93509380 <line:757:3, col:36>
|     `-CallExpr 0x559b93509360 <col:10, col:36> 'void *'
|       `-ImplicitCastExpr 0x559b93509348 <col:10> 'void *(*)(void)' <FunctionToPointerDecay>
|         `-DeclRefExpr 0x559b93509328 <col:10> 'void *(void)' Function 0x559b934a9958 '__VERIFIER_nondet_pointer' 'void *(void)'
|-FunctionDecl 0x559b935094b0 prev 0x559b93502d10 <line:759:1, line:761:1> line:759:6 fence 'void ()'
| `-CompoundStmt 0x559b93509550 <line:760:1, line:761:1>
|-FunctionDecl 0x559b93509580 prev 0x559b93502dd0 <line:762:1, line:764:1> line:762:6 isync 'void ()'
| `-CompoundStmt 0x559b93509620 <line:763:1, line:764:1>
|-FunctionDecl 0x559b93509650 prev 0x559b93502e90 <line:765:1, line:767:1> line:765:6 lwfence 'void ()'
| `-CompoundStmt 0x559b935096f0 <line:766:1, line:767:1>
`-FunctionDecl 0x559b93509758 <line:768:1, line:790:1> line:768:5 main 'int ()'
  `-CompoundStmt 0x559b9350b0e0 <line:769:1, line:790:1>
    |-DeclStmt 0x559b93509870 <line:770:3, col:18>
    | `-VarDecl 0x559b93509808 <col:3, col:13> col:13 used t2313 'pthread_t':'unsigned long'
    |-CallExpr 0x559b93509a78 <line:771:3, col:54> 'int'
    | |-ImplicitCastExpr 0x559b93509a60 <col:3> 'int (*)(pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x559b93509888 <col:3> 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' Function 0x559b934ea488 'pthread_create' 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)'
    | |-UnaryOperator 0x559b935098c8 <col:18, col:19> 'pthread_t *' prefix '&' cannot overflow
    | | `-DeclRefExpr 0x559b935098a8 <col:19> 'pthread_t':'unsigned long' lvalue Var 0x559b93509808 't2313' 'pthread_t':'unsigned long'
    | |-ImplicitCastExpr 0x559b93509ab8 <col:26, col:36> 'const pthread_attr_t *' <NullToPointer>
    | | `-ParenExpr 0x559b93509940 <col:26, col:36> 'void *'
    | |   `-CStyleCastExpr 0x559b93509918 <col:27, col:35> 'void *' <NullToPointer>
    | |     `-IntegerLiteral 0x559b935098e0 <col:35> 'int' 0
    | |-ImplicitCastExpr 0x559b93509ad0 <col:39> 'void *(*)(void *)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x559b93509960 <col:39> 'void *(void *)' Function 0x559b93503e78 'P0' 'void *(void *)'
    | `-ParenExpr 0x559b935099e0 <col:43, col:53> 'void *'
    |   `-CStyleCastExpr 0x559b935099b8 <col:44, col:52> 'void *' <NullToPointer>
    |     `-IntegerLiteral 0x559b93509980 <col:52> 'int' 0
    |-DeclStmt 0x559b93509bc8 <line:772:3, col:18>
    | `-VarDecl 0x559b93509b60 <col:3, col:13> col:13 used t2314 'pthread_t':'unsigned long'
    |-CallExpr 0x559b93509d70 <line:773:3, col:54> 'int'
    | |-ImplicitCastExpr 0x559b93509d58 <col:3> 'int (*)(pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x559b93509be0 <col:3> 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' Function 0x559b934ea488 'pthread_create' 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)'
    | |-UnaryOperator 0x559b93509c20 <col:18, col:19> 'pthread_t *' prefix '&' cannot overflow
    | | `-DeclRefExpr 0x559b93509c00 <col:19> 'pthread_t':'unsigned long' lvalue Var 0x559b93509b60 't2314' 'pthread_t':'unsigned long'
    | |-ImplicitCastExpr 0x559b93509db0 <col:26, col:36> 'const pthread_attr_t *' <NullToPointer>
    | | `-ParenExpr 0x559b93509c98 <col:26, col:36> 'void *'
    | |   `-CStyleCastExpr 0x559b93509c70 <col:27, col:35> 'void *' <NullToPointer>
    | |     `-IntegerLiteral 0x559b93509c38 <col:35> 'int' 0
    | |-ImplicitCastExpr 0x559b93509dc8 <col:39> 'void *(*)(void *)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x559b93509cb8 <col:39> 'void *(void *)' Function 0x559b935057a0 'P1' 'void *(void *)'
    | `-ParenExpr 0x559b93509d38 <col:43, col:53> 'void *'
    |   `-CStyleCastExpr 0x559b93509d10 <col:44, col:52> 'void *' <NullToPointer>
    |     `-IntegerLiteral 0x559b93509cd8 <col:52> 'int' 0
    |-CallExpr 0x559b93509e18 <line:774:3, col:27> 'void'
    | `-ImplicitCastExpr 0x559b93509e00 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x559b93509de0 <col:3> 'void ()' Function 0x559b934a9e40 '__VERIFIER_atomic_begin' 'void ()'
    |-BinaryOperator 0x559b93509ee8 <line:775:3, col:41> '_Bool' '='
    | |-DeclRefExpr 0x559b93509e38 <col:3> '_Bool' lvalue Var 0x559b935032a0 'main$tmp_guard0' '_Bool'
    | `-ImplicitCastExpr 0x559b93509ed0 <col:21, col:41> '_Bool' <IntegralToBoolean>
    |   `-BinaryOperator 0x559b93509eb0 <col:21, col:41> 'int' '=='
    |     |-ImplicitCastExpr 0x559b93509e98 <col:21> 'int' <LValueToRValue>
    |     | `-DeclRefExpr 0x559b93509e58 <col:21> 'int' lvalue Var 0x559b93502fc8 '__unbuffered_cnt' 'int'
    |     `-IntegerLiteral 0x559b93509e78 <col:41> 'int' 2
    |-CallExpr 0x559b93509f40 <line:776:3, col:25> 'void'
    | `-ImplicitCastExpr 0x559b93509f28 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x559b93509f08 <col:3> 'void ()' Function 0x559b934a9f00 '__VERIFIER_atomic_end' 'void ()'
    |-CallExpr 0x559b93509fb8 <line:777:3, col:36> 'void'
    | |-ImplicitCastExpr 0x559b93509fa0 <col:3> 'void (*)(int)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x559b93509f60 <col:3> 'void (int)' Function 0x559b934a9790 '__VERIFIER_assume' 'void (int)'
    | `-ImplicitCastExpr 0x559b93509ff8 <col:21> 'int' <IntegralCast>
    |   `-ImplicitCastExpr 0x559b93509fe0 <col:21> '_Bool' <LValueToRValue>
    |     `-DeclRefExpr 0x559b93509f80 <col:21> '_Bool' lvalue Var 0x559b935032a0 'main$tmp_guard0' '_Bool'
    |-CallExpr 0x559b9350a048 <line:778:3, col:27> 'void'
    | `-ImplicitCastExpr 0x559b9350a030 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x559b9350a010 <col:3> 'void ()' Function 0x559b934a9e40 '__VERIFIER_atomic_begin' 'void ()'
    |-BinaryOperator 0x559b9350a330 <line:779:3, col:103> 'int' '='
    | |-DeclRefExpr 0x559b9350a068 <col:3> 'int' lvalue Var 0x559b93503538 'y' 'int'
    | `-ConditionalOperator 0x559b9350a300 <col:7, col:103> 'int'
    |   |-BinaryOperator 0x559b9350a128 <col:7, col:25> 'int' '&&'
    |   | |-ImplicitCastExpr 0x559b9350a0e0 <col:7> 'int' <IntegralCast>
    |   | | `-ImplicitCastExpr 0x559b9350a0c8 <col:7> '_Bool' <LValueToRValue>
    |   | |   `-DeclRefExpr 0x559b9350a088 <col:7> '_Bool' lvalue Var 0x559b93503b78 'y$w_buff0_used' '_Bool'
    |   | `-ImplicitCastExpr 0x559b9350a110 <col:25> 'int' <IntegralCast>
    |   |   `-ImplicitCastExpr 0x559b9350a0f8 <col:25> '_Bool' <LValueToRValue>
    |   |     `-DeclRefExpr 0x559b9350a0a8 <col:25> '_Bool' lvalue Var 0x559b935036c8 'y$r_buff0_thd0' '_Bool'
    |   |-ImplicitCastExpr 0x559b9350a2e8 <col:42> 'int' <LValueToRValue>
    |   | `-DeclRefExpr 0x559b9350a148 <col:42> 'int' lvalue Var 0x559b93503b00 'y$w_buff0' 'int'
    |   `-ParenExpr 0x559b9350a2c8 <col:54, col:103> 'int'
    |     `-ConditionalOperator 0x559b9350a298 <col:55, col:102> 'int'
    |       |-BinaryOperator 0x559b9350a208 <col:55, col:73> 'int' '&&'
    |       | |-ImplicitCastExpr 0x559b9350a1c0 <col:55> 'int' <IntegralCast>
    |       | | `-ImplicitCastExpr 0x559b9350a1a8 <col:55> '_Bool' <LValueToRValue>
    |       | |   `-DeclRefExpr 0x559b9350a168 <col:55> '_Bool' lvalue Var 0x559b93503c70 'y$w_buff1_used' '_Bool'
    |       | `-ImplicitCastExpr 0x559b9350a1f0 <col:73> 'int' <IntegralCast>
    |       |   `-ImplicitCastExpr 0x559b9350a1d8 <col:73> '_Bool' <LValueToRValue>
    |       |     `-DeclRefExpr 0x559b9350a188 <col:73> '_Bool' lvalue Var 0x559b93503830 'y$r_buff1_thd0' '_Bool'
    |       |-ImplicitCastExpr 0x559b9350a268 <col:90> 'int' <LValueToRValue>
    |       | `-DeclRefExpr 0x559b9350a228 <col:90> 'int' lvalue Var 0x559b93503bf8 'y$w_buff1' 'int'
    |       `-ImplicitCastExpr 0x559b9350a280 <col:102> 'int' <LValueToRValue>
    |         `-DeclRefExpr 0x559b9350a248 <col:102> 'int' lvalue Var 0x559b93503538 'y' 'int'
    |-BinaryOperator 0x559b9350a538 <line:780:3, col:66> '_Bool' '='
    | |-DeclRefExpr 0x559b9350a350 <col:3> '_Bool' lvalue Var 0x559b93503b78 'y$w_buff0_used' '_Bool'
    | `-ImplicitCastExpr 0x559b9350a520 <col:20, col:66> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x559b9350a4f0 <col:20, col:66> 'int'
    |     |-BinaryOperator 0x559b9350a410 <col:20, col:38> 'int' '&&'
    |     | |-ImplicitCastExpr 0x559b9350a3c8 <col:20> 'int' <IntegralCast>
    |     | | `-ImplicitCastExpr 0x559b9350a3b0 <col:20> '_Bool' <LValueToRValue>
    |     | |   `-DeclRefExpr 0x559b9350a370 <col:20> '_Bool' lvalue Var 0x559b93503b78 'y$w_buff0_used' '_Bool'
    |     | `-ImplicitCastExpr 0x559b9350a3f8 <col:38> 'int' <IntegralCast>
    |     |   `-ImplicitCastExpr 0x559b9350a3e0 <col:38> '_Bool' <LValueToRValue>
    |     |     `-DeclRefExpr 0x559b9350a390 <col:38> '_Bool' lvalue Var 0x559b935036c8 'y$r_buff0_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x559b9350a4a8 <col:55, col:62> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x559b9350a460 <col:55, col:62> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x559b9350a430 <col:62> 'int' 0
    |     `-ImplicitCastExpr 0x559b9350a4d8 <col:66> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x559b9350a4c0 <col:66> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x559b9350a488 <col:66> '_Bool' lvalue Var 0x559b93503b78 'y$w_buff0_used' '_Bool'
    |-BinaryOperator 0x559b9350a820 <line:781:3, col:102> '_Bool' '='
    | |-DeclRefExpr 0x559b9350a558 <col:3> '_Bool' lvalue Var 0x559b93503c70 'y$w_buff1_used' '_Bool'
    | `-ImplicitCastExpr 0x559b9350a808 <col:20, col:102> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x559b9350a7d8 <col:20, col:102> 'int'
    |     |-BinaryOperator 0x559b9350a6f8 <col:20, col:74> 'int' '||'
    |     | |-BinaryOperator 0x559b9350a618 <col:20, col:38> 'int' '&&'
    |     | | |-ImplicitCastExpr 0x559b9350a5d0 <col:20> 'int' <IntegralCast>
    |     | | | `-ImplicitCastExpr 0x559b9350a5b8 <col:20> '_Bool' <LValueToRValue>
    |     | | |   `-DeclRefExpr 0x559b9350a578 <col:20> '_Bool' lvalue Var 0x559b93503b78 'y$w_buff0_used' '_Bool'
    |     | | `-ImplicitCastExpr 0x559b9350a600 <col:38> 'int' <IntegralCast>
    |     | |   `-ImplicitCastExpr 0x559b9350a5e8 <col:38> '_Bool' <LValueToRValue>
    |     | |     `-DeclRefExpr 0x559b9350a598 <col:38> '_Bool' lvalue Var 0x559b935036c8 'y$r_buff0_thd0' '_Bool'
    |     | `-BinaryOperator 0x559b9350a6d8 <col:56, col:74> 'int' '&&'
    |     |   |-ImplicitCastExpr 0x559b9350a690 <col:56> 'int' <IntegralCast>
    |     |   | `-ImplicitCastExpr 0x559b9350a678 <col:56> '_Bool' <LValueToRValue>
    |     |   |   `-DeclRefExpr 0x559b9350a638 <col:56> '_Bool' lvalue Var 0x559b93503c70 'y$w_buff1_used' '_Bool'
    |     |   `-ImplicitCastExpr 0x559b9350a6c0 <col:74> 'int' <IntegralCast>
    |     |     `-ImplicitCastExpr 0x559b9350a6a8 <col:74> '_Bool' <LValueToRValue>
    |     |       `-DeclRefExpr 0x559b9350a658 <col:74> '_Bool' lvalue Var 0x559b93503830 'y$r_buff1_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x559b9350a790 <col:91, col:98> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x559b9350a748 <col:91, col:98> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x559b9350a718 <col:98> 'int' 0
    |     `-ImplicitCastExpr 0x559b9350a7c0 <col:102> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x559b9350a7a8 <col:102> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x559b9350a770 <col:102> '_Bool' lvalue Var 0x559b93503c70 'y$w_buff1_used' '_Bool'
    |-BinaryOperator 0x559b9350aa28 <line:782:3, col:66> '_Bool' '='
    | |-DeclRefExpr 0x559b9350a840 <col:3> '_Bool' lvalue Var 0x559b935036c8 'y$r_buff0_thd0' '_Bool'
    | `-ImplicitCastExpr 0x559b9350aa10 <col:20, col:66> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x559b9350a9e0 <col:20, col:66> 'int'
    |     |-BinaryOperator 0x559b9350a900 <col:20, col:38> 'int' '&&'
    |     | |-ImplicitCastExpr 0x559b9350a8b8 <col:20> 'int' <IntegralCast>
    |     | | `-ImplicitCastExpr 0x559b9350a8a0 <col:20> '_Bool' <LValueToRValue>
    |     | |   `-DeclRefExpr 0x559b9350a860 <col:20> '_Bool' lvalue Var 0x559b93503b78 'y$w_buff0_used' '_Bool'
    |     | `-ImplicitCastExpr 0x559b9350a8e8 <col:38> 'int' <IntegralCast>
    |     |   `-ImplicitCastExpr 0x559b9350a8d0 <col:38> '_Bool' <LValueToRValue>
    |     |     `-DeclRefExpr 0x559b9350a880 <col:38> '_Bool' lvalue Var 0x559b935036c8 'y$r_buff0_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x559b9350a998 <col:55, col:62> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x559b9350a950 <col:55, col:62> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x559b9350a920 <col:62> 'int' 0
    |     `-ImplicitCastExpr 0x559b9350a9c8 <col:66> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x559b9350a9b0 <col:66> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x559b9350a978 <col:66> '_Bool' lvalue Var 0x559b935036c8 'y$r_buff0_thd0' '_Bool'
    |-BinaryOperator 0x559b9350ad38 <line:783:3, col:102> '_Bool' '='
    | |-DeclRefExpr 0x559b9350aa48 <col:3> '_Bool' lvalue Var 0x559b93503830 'y$r_buff1_thd0' '_Bool'
    | `-ImplicitCastExpr 0x559b9350ad20 <col:20, col:102> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x559b9350acf0 <col:20, col:102> 'int'
    |     |-BinaryOperator 0x559b9350ac10 <col:20, col:74> 'int' '||'
    |     | |-BinaryOperator 0x559b9350ab08 <col:20, col:38> 'int' '&&'
    |     | | |-ImplicitCastExpr 0x559b9350aac0 <col:20> 'int' <IntegralCast>
    |     | | | `-ImplicitCastExpr 0x559b9350aaa8 <col:20> '_Bool' <LValueToRValue>
    |     | | |   `-DeclRefExpr 0x559b9350aa68 <col:20> '_Bool' lvalue Var 0x559b93503b78 'y$w_buff0_used' '_Bool'
    |     | | `-ImplicitCastExpr 0x559b9350aaf0 <col:38> 'int' <IntegralCast>
    |     | |   `-ImplicitCastExpr 0x559b9350aad8 <col:38> '_Bool' <LValueToRValue>
    |     | |     `-DeclRefExpr 0x559b9350aa88 <col:38> '_Bool' lvalue Var 0x559b935036c8 'y$r_buff0_thd0' '_Bool'
    |     | `-BinaryOperator 0x559b9350abf0 <col:56, col:74> 'int' '&&'
    |     |   |-ImplicitCastExpr 0x559b9350aba8 <col:56> 'int' <IntegralCast>
    |     |   | `-ImplicitCastExpr 0x559b9350ab90 <col:56> '_Bool' <LValueToRValue>
    |     |   |   `-DeclRefExpr 0x559b9350ab28 <col:56> '_Bool' lvalue Var 0x559b93503c70 'y$w_buff1_used' '_Bool'
    |     |   `-ImplicitCastExpr 0x559b9350abd8 <col:74> 'int' <IntegralCast>
    |     |     `-ImplicitCastExpr 0x559b9350abc0 <col:74> '_Bool' <LValueToRValue>
    |     |       `-DeclRefExpr 0x559b9350ab70 <col:74> '_Bool' lvalue Var 0x559b93503830 'y$r_buff1_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x559b9350aca8 <col:91, col:98> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x559b9350ac60 <col:91, col:98> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x559b9350ac30 <col:98> 'int' 0
    |     `-ImplicitCastExpr 0x559b9350acd8 <col:102> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x559b9350acc0 <col:102> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x559b9350ac88 <col:102> '_Bool' lvalue Var 0x559b93503830 'y$r_buff1_thd0' '_Bool'
    |-CallExpr 0x559b9350ad90 <line:784:3, col:25> 'void'
    | `-ImplicitCastExpr 0x559b9350ad78 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x559b9350ad58 <col:3> 'void ()' Function 0x559b934a9f00 '__VERIFIER_atomic_end' 'void ()'
    |-CallExpr 0x559b9350ade8 <line:785:3, col:27> 'void'
    | `-ImplicitCastExpr 0x559b9350add0 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x559b9350adb0 <col:3> 'void ()' Function 0x559b934a9e40 '__VERIFIER_atomic_begin' 'void ()'
    |-BinaryOperator 0x559b9350af88 <line:786:3, col:75> '_Bool' '='
    | |-DeclRefExpr 0x559b9350ae08 <col:3> '_Bool' lvalue Var 0x559b93503318 'main$tmp_guard1' '_Bool'
    | `-ImplicitCastExpr 0x559b9350af70 <col:21, col:75> '_Bool' <IntegralToBoolean>
    |   `-UnaryOperator 0x559b9350af58 <col:21, col:75> 'int' prefix '!' cannot overflow
    |     `-ParenExpr 0x559b9350af38 <col:22, col:75> 'int'
    |       `-BinaryOperator 0x559b9350af18 <col:23, col:74> 'int' '&&'
    |         |-BinaryOperator 0x559b9350ae80 <col:23, col:46> 'int' '=='
    |         | |-ImplicitCastExpr 0x559b9350ae68 <col:23> 'int' <LValueToRValue>
    |         | | `-DeclRefExpr 0x559b9350ae28 <col:23> 'int' lvalue Var 0x559b935030e8 '__unbuffered_p1_EAX' 'int'
    |         | `-IntegerLiteral 0x559b9350ae48 <col:46> 'int' 1
    |         `-BinaryOperator 0x559b9350aef8 <col:51, col:74> 'int' '=='
    |           |-ImplicitCastExpr 0x559b9350aee0 <col:51> 'int' <LValueToRValue>
    |           | `-DeclRefExpr 0x559b9350aea0 <col:51> 'int' lvalue Var 0x559b93503208 '__unbuffered_p1_EBX' 'int'
    |           `-IntegerLiteral 0x559b9350aec0 <col:74> 'int' 0
    |-CallExpr 0x559b9350afe0 <line:787:3, col:25> 'void'
    | `-ImplicitCastExpr 0x559b9350afc8 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x559b9350afa8 <col:3> 'void ()' Function 0x559b934a9f00 '__VERIFIER_atomic_end' 'void ()'
    |-CallExpr 0x559b9350b058 <line:788:3, col:36> 'void'
    | |-ImplicitCastExpr 0x559b9350b040 <col:3> 'void (*)(int)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x559b9350b000 <col:3> 'void (int)' Function 0x559b934a9bc8 '__VERIFIER_assert' 'void (int)'
    | `-ImplicitCastExpr 0x559b9350b098 <col:21> 'int' <IntegralCast>
    |   `-ImplicitCastExpr 0x559b9350b080 <col:21> '_Bool' <LValueToRValue>
    |     `-DeclRefExpr 0x559b9350b020 <col:21> '_Bool' lvalue Var 0x559b93503318 'main$tmp_guard1' '_Bool'
    `-ReturnStmt 0x559b9350b0d0 <line:789:3, col:10>
      `-IntegerLiteral 0x559b9350b0b0 <col:10> 'int' 0
