TranslationUnitDecl 0x563e083b3e18 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x563e083b46d8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x563e083b43b0 '__int128'
|-TypedefDecl 0x563e083b4748 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x563e083b43d0 'unsigned __int128'
|-TypedefDecl 0x563e083b4a50 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x563e083b4820 'struct __NSConstantString_tag'
|   `-Record 0x563e083b47a0 '__NSConstantString_tag'
|-TypedefDecl 0x563e083b4af8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x563e083b4ab0 'char *'
|   `-BuiltinType 0x563e083b3eb0 'char'
|-TypedefDecl 0x563e083f3650 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'struct __va_list_tag [1]'
| `-ConstantArrayType 0x563e083b4d90 'struct __va_list_tag [1]' 1 
|   `-RecordType 0x563e083b4bd0 'struct __va_list_tag'
|     `-Record 0x563e083b4b50 '__va_list_tag'
|-FunctionDecl 0x563e083f3770 <./split_0/mix009_tso.opt_false-unreach-call.i:1:1, col:41> col:14 used __VERIFIER_nondet_bool '_Bool (void)' extern
|-FunctionDecl 0x563e083f3940 <line:2:1, col:34> col:13 used __VERIFIER_assume 'void (int)' extern
| `-ParmVarDecl 0x563e083f3870 <col:31> col:34 'int'
|-FunctionDecl 0x563e083f3ab8 <line:3:1, col:45> col:15 used __VERIFIER_nondet_pointer 'void *(void)' extern
|-FunctionDecl 0x563e083f3be0 <line:4:1, col:61> col:13 used __VERIFIER_error 'void () __attribute__((noreturn))' extern
|-FunctionDecl 0x563e083f3d28 <line:5:1, col:99> col:6 used __VERIFIER_assert 'void (int)'
| |-ParmVarDecl 0x563e083f3c98 <col:24, col:28> col:28 used expression 'int'
| `-CompoundStmt 0x563e083f3f58 <col:40, col:99>
|   |-IfStmt 0x563e083f3f28 <col:42, col:88>
|   | |-UnaryOperator 0x563e083f3e08 <col:46, col:47> 'int' prefix '!' cannot overflow
|   | | `-ImplicitCastExpr 0x563e083f3df0 <col:47> 'int' <LValueToRValue>
|   | |   `-DeclRefExpr 0x563e083f3dd0 <col:47> 'int' lvalue ParmVar 0x563e083f3c98 'expression' 'int'
|   | `-CompoundStmt 0x563e083f3f10 <col:59, col:88>
|   |   `-LabelStmt 0x563e083f3ef8 <col:61, col:85> 'ERROR'
|   |     `-CallExpr 0x563e083f3e88 <col:68, col:85> 'void'
|   |       `-ImplicitCastExpr 0x563e083f3e70 <col:68> 'void (*)() __attribute__((noreturn))' <FunctionToPointerDecay>
|   |         `-DeclRefExpr 0x563e083f3e20 <col:68> 'void () __attribute__((noreturn))' Function 0x563e083f3be0 '__VERIFIER_error' 'void () __attribute__((noreturn))'
|   |-NullStmt 0x563e083f3f40 <col:89>
|   `-ReturnStmt 0x563e083f3f48 <col:91>
|-FunctionDecl 0x563e083f3fa0 <line:6:1, col:37> col:13 used __VERIFIER_atomic_begin 'void ()' extern
|-FunctionDecl 0x563e083f4060 <line:7:1, col:35> col:13 used __VERIFIER_atomic_end 'void ()' extern
|-FunctionDecl 0x563e083f43e0 <line:9:1, line:11:76> line:9:13 __assert_fail 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x563e083f4118 <col:28, col:40> col:40 __assertion 'const char *'
| |-ParmVarDecl 0x563e083f4198 <col:53, col:65> col:65 __file 'const char *'
| |-ParmVarDecl 0x563e083f4218 <line:10:7, col:20> col:20 __line 'unsigned int'
| |-ParmVarDecl 0x563e083f4298 <col:28, col:40> col:40 __function 'const char *'
| `-NoThrowAttr 0x563e083f44a0 <line:11:22>
|-FunctionDecl 0x563e0841a520 <line:12:1, line:14:76> line:12:13 __assert_perror_fail 'void (int, const char *, unsigned int, const char *) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x563e083f4510 <col:35, col:39> col:39 __errnum 'int'
| |-ParmVarDecl 0x563e083f4590 <col:49, col:61> col:61 __file 'const char *'
| |-ParmVarDecl 0x563e0841a350 <line:13:7, col:20> col:20 __line 'unsigned int'
| |-ParmVarDecl 0x563e0841a3d0 <col:28, col:40> col:40 __function 'const char *'
| `-NoThrowAttr 0x563e0841a5e0 <line:14:22>
|-FunctionDecl 0x563e0841a890 <line:15:1, line:16:76> line:15:13 __assert 'void (const char *, const char *, int) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x563e0841a650 <col:23, col:35> col:35 __assertion 'const char *'
| |-ParmVarDecl 0x563e0841a6d0 <col:48, col:60> col:60 __file 'const char *'
| |-ParmVarDecl 0x563e0841a750 <col:68, col:72> col:72 __line 'int'
| `-NoThrowAttr 0x563e0841a948 <line:16:22>
|-TypedefDecl 0x563e0841a9b8 <line:18:1, col:23> col:23 __u_char 'unsigned char'
| `-BuiltinType 0x563e083b3f70 'unsigned char'
|-TypedefDecl 0x563e0841aa28 <line:19:1, col:28> col:28 __u_short 'unsigned short'
| `-BuiltinType 0x563e083b3f90 'unsigned short'
|-TypedefDecl 0x563e0841aa98 <line:20:1, col:22> col:22 __u_int 'unsigned int'
| `-BuiltinType 0x563e083b3fb0 'unsigned int'
|-TypedefDecl 0x563e0841ab08 <line:21:1, col:27> col:27 __u_long 'unsigned long'
| `-BuiltinType 0x563e083b3fd0 'unsigned long'
|-TypedefDecl 0x563e0841ab78 <line:22:1, col:21> col:21 __int8_t 'signed char'
| `-BuiltinType 0x563e083b3ed0 'signed char'
|-TypedefDecl 0x563e0841abe8 <line:23:1, col:23> col:23 __uint8_t 'unsigned char'
| `-BuiltinType 0x563e083b3f70 'unsigned char'
|-TypedefDecl 0x563e0841ac58 <line:24:1, col:26> col:26 __int16_t 'short'
| `-BuiltinType 0x563e083b3ef0 'short'
|-TypedefDecl 0x563e0841acc8 <line:25:1, col:28> col:28 __uint16_t 'unsigned short'
| `-BuiltinType 0x563e083b3f90 'unsigned short'
|-TypedefDecl 0x563e0841ad38 <line:26:1, col:20> col:20 __int32_t 'int'
| `-BuiltinType 0x563e083b3f10 'int'
|-TypedefDecl 0x563e0841ada8 <line:27:1, col:22> col:22 __uint32_t 'unsigned int'
| `-BuiltinType 0x563e083b3fb0 'unsigned int'
|-TypedefDecl 0x563e0841ae18 <line:28:1, col:25> col:25 __int64_t 'long'
| `-BuiltinType 0x563e083b3f30 'long'
|-TypedefDecl 0x563e0841ae88 <line:29:1, col:27> col:27 referenced __uint64_t 'unsigned long'
| `-BuiltinType 0x563e083b3fd0 'unsigned long'
|-TypedefDecl 0x563e0841aef8 <line:30:1, col:18> col:18 referenced __quad_t 'long'
| `-BuiltinType 0x563e083b3f30 'long'
|-TypedefDecl 0x563e0841af68 <line:31:1, col:27> col:27 __u_quad_t 'unsigned long'
| `-BuiltinType 0x563e083b3fd0 'unsigned long'
|-TypedefDecl 0x563e0841afd8 <line:32:1, col:27> col:27 __dev_t 'unsigned long'
| `-BuiltinType 0x563e083b3fd0 'unsigned long'
|-TypedefDecl 0x563e0841b048 <line:33:1, col:22> col:22 __uid_t 'unsigned int'
| `-BuiltinType 0x563e083b3fb0 'unsigned int'
|-TypedefDecl 0x563e0841b0b8 <line:34:1, col:22> col:22 __gid_t 'unsigned int'
| `-BuiltinType 0x563e083b3fb0 'unsigned int'
|-TypedefDecl 0x563e0841b128 <line:35:1, col:27> col:27 __ino_t 'unsigned long'
| `-BuiltinType 0x563e083b3fd0 'unsigned long'
|-TypedefDecl 0x563e0841b198 <line:36:1, col:27> col:27 __ino64_t 'unsigned long'
| `-BuiltinType 0x563e083b3fd0 'unsigned long'
|-TypedefDecl 0x563e0841b208 <line:37:1, col:22> col:22 __mode_t 'unsigned int'
| `-BuiltinType 0x563e083b3fb0 'unsigned int'
|-TypedefDecl 0x563e0841b278 <line:38:1, col:27> col:27 __nlink_t 'unsigned long'
| `-BuiltinType 0x563e083b3fd0 'unsigned long'
|-TypedefDecl 0x563e0841b2e8 <line:39:1, col:18> col:18 __off_t 'long'
| `-BuiltinType 0x563e083b3f30 'long'
|-TypedefDecl 0x563e0841b378 <line:40:1, col:18> col:18 referenced __off64_t 'long'
| `-BuiltinType 0x563e083b3f30 'long'
|-TypedefDecl 0x563e0841b3e8 <line:41:1, col:13> col:13 referenced __pid_t 'int'
| `-BuiltinType 0x563e083b3f10 'int'
|-RecordDecl 0x563e0841b440 <line:42:9, col:32> col:9 struct definition
| `-FieldDecl 0x563e0841b588 <col:18, col:29> col:22 __val 'int [2]'
|-TypedefDecl 0x563e0841b640 <col:1, col:34> col:34 __fsid_t 'struct __fsid_t':'__fsid_t'
| `-ElaboratedType 0x563e0841b5e0 'struct __fsid_t' sugar
|   `-RecordType 0x563e0841b4c0 '__fsid_t'
|     `-Record 0x563e0841b440 ''
|-TypedefDecl 0x563e0841b6c8 <line:43:1, col:18> col:18 referenced __clock_t 'long'
| `-BuiltinType 0x563e083b3f30 'long'
|-TypedefDecl 0x563e0841b738 <line:44:1, col:27> col:27 __rlim_t 'unsigned long'
| `-BuiltinType 0x563e083b3fd0 'unsigned long'
|-TypedefDecl 0x563e0841b7a8 <line:45:1, col:27> col:27 __rlim64_t 'unsigned long'
| `-BuiltinType 0x563e083b3fd0 'unsigned long'
|-TypedefDecl 0x563e0841b818 <line:46:1, col:22> col:22 __id_t 'unsigned int'
| `-BuiltinType 0x563e083b3fb0 'unsigned int'
|-TypedefDecl 0x563e0841b888 <line:47:1, col:18> col:18 referenced __time_t 'long'
| `-BuiltinType 0x563e083b3f30 'long'
|-TypedefDecl 0x563e0841b8f8 <line:48:1, col:22> col:22 __useconds_t 'unsigned int'
| `-BuiltinType 0x563e083b3fb0 'unsigned int'
|-TypedefDecl 0x563e0841b968 <line:49:1, col:18> col:18 __suseconds_t 'long'
| `-BuiltinType 0x563e083b3f30 'long'
|-TypedefDecl 0x563e0841b9d8 <line:50:1, col:13> col:13 __daddr_t 'int'
| `-BuiltinType 0x563e083b3f10 'int'
|-TypedefDecl 0x563e0841ba48 <line:51:1, col:13> col:13 __key_t 'int'
| `-BuiltinType 0x563e083b3f10 'int'
|-TypedefDecl 0x563e0841bab8 <line:52:1, col:13> col:13 referenced __clockid_t 'int'
| `-BuiltinType 0x563e083b3f10 'int'
|-TypedefDecl 0x563e0841bb28 <line:53:1, col:16> col:16 referenced __timer_t 'void *'
| `-PointerType 0x563e083b4630 'void *'
|   `-BuiltinType 0x563e083b3e70 'void'
|-TypedefDecl 0x563e0841bb98 <line:54:1, col:18> col:18 __blksize_t 'long'
| `-BuiltinType 0x563e083b3f30 'long'
|-TypedefDecl 0x563e0841bc08 <line:55:1, col:18> col:18 __blkcnt_t 'long'
| `-BuiltinType 0x563e083b3f30 'long'
|-TypedefDecl 0x563e0841bc78 <line:56:1, col:18> col:18 __blkcnt64_t 'long'
| `-BuiltinType 0x563e083b3f30 'long'
|-TypedefDecl 0x563e0841bce8 <line:57:1, col:27> col:27 __fsblkcnt_t 'unsigned long'
| `-BuiltinType 0x563e083b3fd0 'unsigned long'
|-TypedefDecl 0x563e0841bd58 <line:58:1, col:27> col:27 __fsblkcnt64_t 'unsigned long'
| `-BuiltinType 0x563e083b3fd0 'unsigned long'
|-TypedefDecl 0x563e0841bdc8 <line:59:1, col:27> col:27 __fsfilcnt_t 'unsigned long'
| `-BuiltinType 0x563e083b3fd0 'unsigned long'
|-TypedefDecl 0x563e0841be38 <line:60:1, col:27> col:27 __fsfilcnt64_t 'unsigned long'
| `-BuiltinType 0x563e083b3fd0 'unsigned long'
|-TypedefDecl 0x563e0841bea8 <line:61:1, col:18> col:18 __fsword_t 'long'
| `-BuiltinType 0x563e083b3f30 'long'
|-TypedefDecl 0x563e0841bf18 <line:62:1, col:18> col:18 __ssize_t 'long'
| `-BuiltinType 0x563e083b3f30 'long'
|-TypedefDecl 0x563e0841bf88 <line:63:1, col:18> col:18 referenced __syscall_slong_t 'long'
| `-BuiltinType 0x563e083b3f30 'long'
|-TypedefDecl 0x563e0841bff8 <line:64:1, col:27> col:27 __syscall_ulong_t 'unsigned long'
| `-BuiltinType 0x563e083b3fd0 'unsigned long'
|-TypedefDecl 0x563e0841c088 <line:65:1, col:19> col:19 __loff_t '__off64_t':'long'
| `-TypedefType 0x563e0841c050 '__off64_t' sugar
|   |-Typedef 0x563e0841b378 '__off64_t'
|   `-BuiltinType 0x563e083b3f30 'long'
|-TypedefDecl 0x563e0841c180 <line:66:1, col:19> col:19 __qaddr_t '__quad_t *'
| `-PointerType 0x563e0841c140 '__quad_t *'
|   `-TypedefType 0x563e0841c0e0 '__quad_t' sugar
|     |-Typedef 0x563e0841aef8 '__quad_t'
|     `-BuiltinType 0x563e083b3f30 'long'
|-TypedefDecl 0x563e0841c1f0 <line:67:1, col:15> col:15 __caddr_t 'char *'
| `-PointerType 0x563e083b4ab0 'char *'
|   `-BuiltinType 0x563e083b3eb0 'char'
|-TypedefDecl 0x563e0841c260 <line:68:1, col:18> col:18 __intptr_t 'long'
| `-BuiltinType 0x563e083b3f30 'long'
|-TypedefDecl 0x563e0841c2d0 <line:69:1, col:22> col:22 __socklen_t 'unsigned int'
| `-BuiltinType 0x563e083b3fb0 'unsigned int'
|-FunctionDecl 0x563e0841d458 <line:70:1, line:74:1> line:71:1 __bswap_32 'unsigned int (unsigned int)' static inline
| |-ParmVarDecl 0x563e0841d380 <col:13, col:26> col:26 used __bsx 'unsigned int'
| `-CompoundStmt 0x563e0841d768 <line:72:1, line:74:1>
|   `-ReturnStmt 0x563e0841d758 <line:73:3, col:34>
|     `-CallExpr 0x563e0841d718 <col:10, col:34> 'unsigned int'
|       |-ImplicitCastExpr 0x563e0841d700 <col:10> 'unsigned int (*)(unsigned int)' <BuiltinFnToFnPtr>
|       | `-DeclRefExpr 0x563e0841d690 <col:10> '<builtin fn type>' Function 0x563e0841d500 '__builtin_bswap32' 'unsigned int (unsigned int)'
|       `-ImplicitCastExpr 0x563e0841d740 <col:29> 'unsigned int' <LValueToRValue>
|         `-DeclRefExpr 0x563e0841d6b0 <col:29> 'unsigned int' lvalue ParmVar 0x563e0841d380 '__bsx' 'unsigned int'
|-FunctionDecl 0x563e0841d500 <col:10> col:10 implicit used __builtin_bswap32 'unsigned int (unsigned int)' extern
| |-ParmVarDecl 0x563e0841d5a0 <<invalid sloc>> <invalid sloc> 'unsigned int'
| |-NoThrowAttr 0x563e0841d610 <col:10> Implicit
| `-ConstAttr 0x563e0841d668 <col:10> Implicit
|-FunctionDecl 0x563e0841d8c0 <line:75:1, line:79:1> line:76:1 __bswap_64 '__uint64_t (__uint64_t)' static inline
| |-ParmVarDecl 0x563e0841d7b8 <col:13, col:24> col:24 used __bsx '__uint64_t':'unsigned long'
| `-CompoundStmt 0x563e0841dbd8 <line:77:1, line:79:1>
|   `-ReturnStmt 0x563e0841dbc8 <line:78:3, col:34>
|     `-CallExpr 0x563e0841db88 <col:10, col:34> 'unsigned long'
|       |-ImplicitCastExpr 0x563e0841db70 <col:10> 'unsigned long (*)(unsigned long)' <BuiltinFnToFnPtr>
|       | `-DeclRefExpr 0x563e0841daf8 <col:10> '<builtin fn type>' Function 0x563e0841d968 '__builtin_bswap64' 'unsigned long (unsigned long)'
|       `-ImplicitCastExpr 0x563e0841dbb0 <col:29> '__uint64_t':'unsigned long' <LValueToRValue>
|         `-DeclRefExpr 0x563e0841db18 <col:29> '__uint64_t':'unsigned long' lvalue ParmVar 0x563e0841d7b8 '__bsx' '__uint64_t':'unsigned long'
|-FunctionDecl 0x563e0841d968 <col:10> col:10 implicit used __builtin_bswap64 'unsigned long (unsigned long)' extern
| |-ParmVarDecl 0x563e0841da08 <<invalid sloc>> <invalid sloc> 'unsigned long'
| |-NoThrowAttr 0x563e0841da78 <col:10> Implicit
| `-ConstAttr 0x563e0841dad0 <col:10> Implicit
|-TypedefDecl 0x563e0841dc08 <line:80:1, col:27> col:27 referenced size_t 'unsigned long'
| `-BuiltinType 0x563e083b3fd0 'unsigned long'
|-TypedefDecl 0x563e0841dc98 <line:82:1, col:18> col:18 referenced time_t '__time_t':'long'
| `-TypedefType 0x563e0841dc60 '__time_t' sugar
|   |-Typedef 0x563e0841b888 '__time_t'
|   `-BuiltinType 0x563e083b3f30 'long'
|-RecordDecl 0x563e0841dcf0 <line:85:1, line:89:3> line:85:8 struct timespec definition
| |-FieldDecl 0x563e0841dda8 <line:87:5, col:14> col:14 tv_sec '__time_t':'long'
| `-FieldDecl 0x563e0841de38 <line:88:5, col:23> col:23 tv_nsec '__syscall_slong_t':'long'
|-TypedefDecl 0x563e0841dec8 <line:90:1, col:17> col:17 referenced pid_t '__pid_t':'int'
| `-TypedefType 0x563e0841de90 '__pid_t' sugar
|   |-Typedef 0x563e0841b3e8 '__pid_t'
|   `-BuiltinType 0x563e083b3f10 'int'
|-RecordDecl 0x563e0841df20 <line:91:1, line:94:3> line:91:8 struct sched_param definition
| `-FieldDecl 0x563e0841dfe0 <line:93:5, col:9> col:9 __sched_priority 'int'
|-RecordDecl 0x563e0841e030 <line:97:1, line:100:3> line:97:8 struct __sched_param definition
| `-FieldDecl 0x563e0841e0f0 <line:99:5, col:9> col:9 __sched_priority 'int'
|-TypedefDecl 0x563e0841e158 <line:101:1, col:27> col:27 referenced __cpu_mask 'unsigned long'
| `-BuiltinType 0x563e083b3fd0 'unsigned long'
|-RecordDecl 0x563e0841e1b0 <line:102:9, line:105:1> line:102:9 struct definition
| `-FieldDecl 0x563e0841f480 <line:104:3, col:53> col:14 __bits '__cpu_mask [64]'
|-TypedefDecl 0x563e0841f530 <line:102:1, line:105:3> col:3 referenced cpu_set_t 'struct cpu_set_t':'cpu_set_t'
| `-ElaboratedType 0x563e0841f4d0 'struct cpu_set_t' sugar
|   `-RecordType 0x563e0841e230 'cpu_set_t'
|     `-Record 0x563e0841e1b0 ''
|-FunctionDecl 0x563e0841f808 <line:107:1, line:108:42> line:107:12 __sched_cpucount 'int (size_t, const cpu_set_t *)' extern
| |-ParmVarDecl 0x563e0841f5d8 <col:30, col:37> col:37 __setsize 'size_t':'unsigned long'
| |-ParmVarDecl 0x563e0841f6e0 <col:48, col:65> col:65 __setp 'const cpu_set_t *'
| `-NoThrowAttr 0x563e0841f8b8 <line:108:19>
|-FunctionDecl 0x563e0841fa90 <line:109:1, col:92> col:19 __sched_cpualloc 'cpu_set_t *(size_t)' extern
| |-ParmVarDecl 0x563e0841f920 <col:37, col:44> col:44 __count 'size_t':'unsigned long'
| `-NoThrowAttr 0x563e0841fb38 <col:69>
|-FunctionDecl 0x563e0841fcb0 <line:110:1, col:87> col:13 __sched_cpufree 'void (cpu_set_t *)' extern
| |-ParmVarDecl 0x563e0841fba0 <col:30, col:41> col:41 __set 'cpu_set_t *'
| `-NoThrowAttr 0x563e0841fd58 <col:64>
|-FunctionDecl 0x563e08420018 <line:113:1, line:114:45> line:113:12 sched_setparam 'int (__pid_t, const struct sched_param *)' extern
| |-ParmVarDecl 0x563e0841fdc0 <col:28, col:36> col:36 __pid '__pid_t':'int'
| |-ParmVarDecl 0x563e0841fef8 <col:43, col:69> col:69 __param 'const struct sched_param *'
| `-NoThrowAttr 0x563e084200c8 <line:114:22>
|-FunctionDecl 0x563e084203b0 <line:115:1, col:111> col:12 sched_getparam 'int (__pid_t, struct sched_param *)' extern
| |-ParmVarDecl 0x563e08420130 <col:28, col:36> col:36 __pid '__pid_t':'int'
| |-ParmVarDecl 0x563e08420228 <col:43, col:63> col:63 __param 'struct sched_param *'
| `-NoThrowAttr 0x563e08420460 <col:88>
|-FunctionDecl 0x563e08420718 <line:116:1, line:117:85> line:116:12 sched_setscheduler 'int (__pid_t, int, const struct sched_param *)' extern
| |-ParmVarDecl 0x563e084204c8 <col:32, col:40> col:40 __pid '__pid_t':'int'
| |-ParmVarDecl 0x563e08420548 <col:47, col:51> col:51 __policy 'int'
| |-ParmVarDecl 0x563e084205d8 <line:117:11, col:37> col:37 __param 'const struct sched_param *'
| `-NoThrowAttr 0x563e084207d0 <col:62>
|-FunctionDecl 0x563e08420948 <line:118:1, col:86> col:12 sched_getscheduler 'int (__pid_t)' extern
| |-ParmVarDecl 0x563e08420838 <col:32, col:40> col:40 __pid '__pid_t':'int'
| `-NoThrowAttr 0x563e084209f0 <col:63>
|-FunctionDecl 0x563e08420b18 <line:119:1, col:70> col:12 sched_yield 'int (void)' extern
| `-NoThrowAttr 0x563e08420bb8 <col:47>
|-FunctionDecl 0x563e08420cc0 <line:120:1, col:92> col:12 sched_get_priority_max 'int (int)' extern
| |-ParmVarDecl 0x563e08420c28 <col:36, col:40> col:40 __algorithm 'int'
| `-NoThrowAttr 0x563e08420d68 <col:69>
|-FunctionDecl 0x563e08420e70 <line:121:1, col:92> col:12 sched_get_priority_min 'int (int)' extern
| |-ParmVarDecl 0x563e08420dd8 <col:36, col:40> col:40 __algorithm 'int'
| `-NoThrowAttr 0x563e08420f18 <col:69>
|-FunctionDecl 0x563e084211d8 <line:122:1, col:111> col:12 sched_rr_get_interval 'int (__pid_t, struct timespec *)' extern
| |-ParmVarDecl 0x563e08420f80 <col:35, col:43> col:43 __pid '__pid_t':'int'
| |-ParmVarDecl 0x563e084210b8 <col:50, col:67> col:67 __t 'struct timespec *'
| `-NoThrowAttr 0x563e08421288 <col:88>
|-TypedefDecl 0x563e08421318 <line:126:1, col:19> col:19 referenced clock_t '__clock_t':'long'
| `-TypedefType 0x563e084212e0 '__clock_t' sugar
|   |-Typedef 0x563e0841b6c8 '__clock_t'
|   `-BuiltinType 0x563e083b3f30 'long'
|-TypedefDecl 0x563e084213c0 <line:129:1, col:21> col:21 referenced clockid_t '__clockid_t':'int'
| `-TypedefType 0x563e08421370 '__clockid_t' sugar
|   |-Typedef 0x563e0841bab8 '__clockid_t'
|   `-BuiltinType 0x563e083b3f10 'int'
|-TypedefDecl 0x563e08421458 <line:130:1, col:19> col:19 referenced timer_t '__timer_t':'void *'
| `-TypedefType 0x563e08421420 '__timer_t' sugar
|   |-Typedef 0x563e0841bb28 '__timer_t'
|   `-PointerType 0x563e083b4630 'void *'
|     `-BuiltinType 0x563e083b3e70 'void'
|-RecordDecl 0x563e084214b0 <line:132:1, line:145:1> line:132:8 struct tm definition
| |-FieldDecl 0x563e08421570 <line:134:3, col:7> col:7 tm_sec 'int'
| |-FieldDecl 0x563e084215d8 <line:135:3, col:7> col:7 tm_min 'int'
| |-FieldDecl 0x563e08421640 <line:136:3, col:7> col:7 tm_hour 'int'
| |-FieldDecl 0x563e084216a8 <line:137:3, col:7> col:7 tm_mday 'int'
| |-FieldDecl 0x563e08421710 <line:138:3, col:7> col:7 tm_mon 'int'
| |-FieldDecl 0x563e08421778 <line:139:3, col:7> col:7 tm_year 'int'
| |-FieldDecl 0x563e084217e0 <line:140:3, col:7> col:7 tm_wday 'int'
| |-FieldDecl 0x563e08421848 <line:141:3, col:7> col:7 tm_yday 'int'
| |-FieldDecl 0x563e084218b0 <line:142:3, col:7> col:7 tm_isdst 'int'
| |-FieldDecl 0x563e08421918 <line:143:3, col:12> col:12 tm_gmtoff 'long'
| `-FieldDecl 0x563e08421980 <line:144:3, col:15> col:15 tm_zone 'const char *'
|-RecordDecl 0x563e084219d0 <line:148:1, line:152:3> line:148:8 struct itimerspec definition
| |-FieldDecl 0x563e08421a98 <line:150:5, col:21> col:21 it_interval 'struct timespec':'struct timespec'
| `-FieldDecl 0x563e08421b08 <line:151:5, col:21> col:21 it_value 'struct timespec':'struct timespec'
|-RecordDecl 0x563e08421bb0 <line:153:1, col:8> col:8 struct sigevent
|-FunctionDecl 0x563e08421d80 <line:155:1, col:68> col:16 clock 'clock_t (void)' extern
| `-NoThrowAttr 0x563e08421e20 <col:45>
|-FunctionDecl 0x563e08422000 <line:156:1, col:77> col:15 time 'time_t (time_t *)' extern
| |-ParmVarDecl 0x563e08421ef0 <col:21, col:29> col:29 __timer 'time_t *'
| `-NoThrowAttr 0x563e084220a8 <col:54>
|-FunctionDecl 0x563e084222a8 <line:157:1, line:158:73> line:157:15 difftime 'double (time_t, time_t)' extern
| |-ParmVarDecl 0x563e08422110 <col:25, col:32> col:32 __time1 'time_t':'long'
| |-ParmVarDecl 0x563e08422188 <col:41, col:48> col:48 __time0 'time_t':'long'
| |-NoThrowAttr 0x563e08422358 <line:158:22>
| `-ConstAttr 0x563e08422ff0 <col:63>
|-FunctionDecl 0x563e084231f0 <line:159:1, col:79> col:15 mktime 'time_t (struct tm *)' extern
| |-ParmVarDecl 0x563e084230e8 <col:23, col:34> col:34 __tp 'struct tm *'
| `-NoThrowAttr 0x563e08423298 <col:56>
|-FunctionDecl 0x563e08423640 <line:160:1, line:162:77> line:160:15 strftime 'size_t (char *restrict, size_t, const char *restrict, const struct tm *restrict)' extern
| |-ParmVarDecl 0x563e08423308 <col:25, col:42> col:42 __s 'char *restrict'
| |-ParmVarDecl 0x563e08423380 <col:47, col:54> col:54 __maxsize 'size_t':'unsigned long'
| |-ParmVarDecl 0x563e08423400 <line:161:4, col:27> col:27 __format 'const char *restrict'
| |-ParmVarDecl 0x563e084234f8 <line:162:4, col:32> col:32 __tp 'const struct tm *restrict'
| `-NoThrowAttr 0x563e08423700 <col:54>
|-RecordDecl 0x563e08423758 <line:164:9, line:171:1> line:164:16 struct __locale_struct definition
| |-RecordDecl 0x563e08423808 parent 0x563e083b3e18 <line:166:3, col:10> col:10 struct __locale_data
| |-FieldDecl 0x563e08423a68 <col:3, col:37> col:25 __locales 'struct __locale_data *[13]'
| |-FieldDecl 0x563e08423b08 <line:167:3, col:29> col:29 __ctype_b 'const unsigned short *'
| |-FieldDecl 0x563e08423b70 <line:168:3, col:14> col:14 __ctype_tolower 'const int *'
| |-FieldDecl 0x563e08423bd8 <line:169:3, col:14> col:14 __ctype_toupper 'const int *'
| `-FieldDecl 0x563e08423cc8 <line:170:3, col:25> col:15 __names 'const char *[13]'
|-TypedefDecl 0x563e08423de8 <line:164:1, line:171:4> col:4 referenced __locale_t 'struct __locale_struct *'
| `-PointerType 0x563e08423d90 'struct __locale_struct *'
|   `-ElaboratedType 0x563e08423d20 'struct __locale_struct' sugar
|     `-RecordType 0x563e084237e0 'struct __locale_struct'
|       `-Record 0x563e08423758 '__locale_struct'
|-TypedefDecl 0x563e08423e98 <line:172:1, col:20> col:20 locale_t '__locale_t':'struct __locale_struct *'
| `-TypedefType 0x563e08423e60 '__locale_t' sugar
|   |-Typedef 0x563e08423de8 '__locale_t'
|   `-PointerType 0x563e08423d90 'struct __locale_struct *'
|     `-ElaboratedType 0x563e08423d20 'struct __locale_struct' sugar
|       `-RecordType 0x563e084237e0 'struct __locale_struct'
|         `-Record 0x563e08423758 '__locale_struct'
|-FunctionDecl 0x563e084252a0 <line:173:1, line:176:63> line:173:15 strftime_l 'size_t (char *restrict, size_t, const char *restrict, const struct tm *restrict, __locale_t)' extern
| |-ParmVarDecl 0x563e08423f08 <col:27, col:44> col:44 __s 'char *restrict'
| |-ParmVarDecl 0x563e08423f80 <col:49, col:56> col:56 __maxsize 'size_t':'unsigned long'
| |-ParmVarDecl 0x563e08425028 <line:174:6, col:29> col:29 __format 'const char *restrict'
| |-ParmVarDecl 0x563e084250b8 <line:175:6, col:34> col:34 __tp 'const struct tm *restrict'
| |-ParmVarDecl 0x563e08425130 <line:176:6, col:17> col:17 __loc '__locale_t':'struct __locale_struct *'
| `-NoThrowAttr 0x563e08425368 <col:40>
|-FunctionDecl 0x563e08425558 <line:178:1, col:89> col:19 gmtime 'struct tm *(const time_t *)' extern
| |-ParmVarDecl 0x563e08425430 <col:27, col:41> col:41 __timer 'const time_t *'
| `-NoThrowAttr 0x563e08425600 <col:66>
|-FunctionDecl 0x563e08425710 <line:179:1, col:92> col:19 localtime 'struct tm *(const time_t *)' extern
| |-ParmVarDecl 0x563e08425668 <col:30, col:44> col:44 __timer 'const time_t *'
| `-NoThrowAttr 0x563e084257b8 <col:69>
|-FunctionDecl 0x563e084259e8 <line:181:1, line:182:75> line:181:19 gmtime_r 'struct tm *(const time_t *restrict, struct tm *restrict)' extern
| |-ParmVarDecl 0x563e08425820 <col:29, col:54> col:54 __timer 'const time_t *restrict'
| |-ParmVarDecl 0x563e084258b0 <line:182:8, col:30> col:30 __tp 'struct tm *restrict'
| `-NoThrowAttr 0x563e08425a98 <col:52>
|-FunctionDecl 0x563e08425c40 <line:183:1, line:184:78> line:183:19 localtime_r 'struct tm *(const time_t *restrict, struct tm *restrict)' extern
| |-ParmVarDecl 0x563e08425b00 <col:32, col:57> col:57 __timer 'const time_t *restrict'
| |-ParmVarDecl 0x563e08425b90 <line:184:11, col:33> col:33 __tp 'struct tm *restrict'
| `-NoThrowAttr 0x563e08425cf0 <col:55>
|-FunctionDecl 0x563e08425e88 <line:186:1, col:85> col:14 asctime 'char *(const struct tm *)' extern
| |-ParmVarDecl 0x563e08425d70 <col:23, col:40> col:40 __tp 'const struct tm *'
| `-NoThrowAttr 0x563e08425f30 <col:62>
|-FunctionDecl 0x563e08426168 <line:187:1, col:83> col:14 ctime 'char *(const time_t *)' extern
| |-ParmVarDecl 0x563e08425f98 <col:21, col:35> col:35 __timer 'const time_t *'
| `-NoThrowAttr 0x563e08426210 <col:60>
|-FunctionDecl 0x563e08426438 <line:189:1, line:190:67> line:189:14 asctime_r 'char *(const struct tm *restrict, char *restrict)' extern
| |-ParmVarDecl 0x563e08426290 <col:25, col:53> col:53 __tp 'const struct tm *restrict'
| |-ParmVarDecl 0x563e08426310 <line:190:4, col:21> col:21 __buf 'char *restrict'
| `-NoThrowAttr 0x563e084264e8 <col:44>
|-FunctionDecl 0x563e084266f8 <line:191:1, line:192:72> line:191:14 ctime_r 'char *(const time_t *restrict, char *restrict)' extern
| |-ParmVarDecl 0x563e08426550 <col:23, col:48> col:48 __timer 'const time_t *restrict'
| |-ParmVarDecl 0x563e084265d0 <line:192:9, col:26> col:26 __buf 'char *restrict'
| `-NoThrowAttr 0x563e084267a8 <col:49>
|-VarDecl 0x563e084268a8 <line:193:1, col:24> col:14 __tzname 'char *[2]' extern
|-VarDecl 0x563e08426928 <line:194:1, col:12> col:12 __daylight 'int' extern
|-VarDecl 0x563e084269a8 <line:195:1, col:17> col:17 __timezone 'long' extern
|-VarDecl 0x563e08426a70 <line:196:1, col:22> col:14 tzname 'char *[2]' extern
|-FunctionDecl 0x563e08426ba0 <line:197:1, col:65> col:13 tzset 'void (void)' extern
| `-NoThrowAttr 0x563e08426c40 <col:42>
|-VarDecl 0x563e08426cb0 <line:198:1, col:12> col:12 daylight 'int' extern
|-VarDecl 0x563e08426d30 <line:199:1, col:17> col:17 timezone 'long' extern
|-FunctionDecl 0x563e08426eb8 <line:200:1, col:80> col:12 stime 'int (const time_t *)' extern
| |-ParmVarDecl 0x563e08426da8 <col:19, col:33> col:33 __when 'const time_t *'
| `-NoThrowAttr 0x563e08426f60 <col:57>
|-FunctionDecl 0x563e084270d0 <line:201:1, col:79> col:15 timegm 'time_t (struct tm *)' extern
| |-ParmVarDecl 0x563e08426fe0 <col:23, col:34> col:34 __tp 'struct tm *'
| `-NoThrowAttr 0x563e08427178 <col:56>
|-FunctionDecl 0x563e08427288 <line:202:1, col:82> col:15 timelocal 'time_t (struct tm *)' extern
| |-ParmVarDecl 0x563e084271f8 <col:26, col:37> col:37 __tp 'struct tm *'
| `-NoThrowAttr 0x563e08427330 <col:59>
|-FunctionDecl 0x563e08427438 <line:203:1, col:99> col:12 dysize 'int (int)' extern
| |-ParmVarDecl 0x563e084273a0 <col:20, col:24> col:24 __year 'int'
| |-NoThrowAttr 0x563e084274e0 <col:48>
| `-ConstAttr 0x563e08427538 <col:89>
|-FunctionDecl 0x563e08427798 <line:204:1, line:205:37> line:204:12 nanosleep 'int (const struct timespec *, struct timespec *)' extern
| |-ParmVarDecl 0x563e084275e8 <col:23, col:46> col:46 __requested_time 'const struct timespec *'
| `-ParmVarDecl 0x563e08427678 <line:205:9, col:26> col:26 __remaining 'struct timespec *'
|-FunctionDecl 0x563e084279f8 <line:206:1, col:111> col:12 clock_getres 'int (clockid_t, struct timespec *)' extern
| |-ParmVarDecl 0x563e08427888 <col:26, col:36> col:36 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x563e08427918 <col:48, col:65> col:65 __res 'struct timespec *'
| `-NoThrowAttr 0x563e08427aa8 <col:88>
|-FunctionDecl 0x563e08427c40 <line:207:1, col:111> col:12 clock_gettime 'int (clockid_t, struct timespec *)' extern
| |-ParmVarDecl 0x563e08427b10 <col:27, col:37> col:37 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x563e08427ba0 <col:49, col:66> col:66 __tp 'struct timespec *'
| `-NoThrowAttr 0x563e08427cf0 <col:88>
|-FunctionDecl 0x563e08427f08 <line:208:1, line:209:45> line:208:12 clock_settime 'int (clockid_t, const struct timespec *)' extern
| |-ParmVarDecl 0x563e08427d58 <col:27, col:37> col:37 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x563e08427de8 <col:49, col:72> col:72 __tp 'const struct timespec *'
| `-NoThrowAttr 0x563e08427fb8 <line:209:22>
|-FunctionDecl 0x563e08428358 <line:210:1, line:212:30> line:210:12 clock_nanosleep 'int (clockid_t, int, const struct timespec *, struct timespec *)' extern
| |-ParmVarDecl 0x563e08428020 <col:29, col:39> col:39 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x563e084280e0 <col:51, col:55> col:55 __flags 'int'
| |-ParmVarDecl 0x563e08428170 <line:211:8, col:31> col:31 __req 'const struct timespec *'
| `-ParmVarDecl 0x563e08428200 <line:212:8, col:25> col:25 __rem 'struct timespec *'
|-FunctionDecl 0x563e08428658 <line:213:1, col:108> col:12 clock_getcpuclockid 'int (pid_t, clockid_t *)' extern
| |-ParmVarDecl 0x563e08428458 <col:33, col:39> col:39 __pid 'pid_t':'int'
| |-ParmVarDecl 0x563e08428530 <col:46, col:57> col:57 __clock_id 'clockid_t *'
| `-NoThrowAttr 0x563e08428708 <col:85>
|-FunctionDecl 0x563e08428af8 <line:214:1, line:216:75> line:214:12 timer_create 'int (clockid_t, struct sigevent *restrict, timer_t *restrict)' extern
| |-ParmVarDecl 0x563e08428770 <col:26, col:36> col:36 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x563e084288a8 <line:215:5, col:33> col:33 __evp 'struct sigevent *restrict'
| |-ParmVarDecl 0x563e084289b0 <line:216:5, col:25> col:25 __timerid 'timer_t *restrict'
| `-NoThrowAttr 0x563e08428bb0 <col:52>
|-FunctionDecl 0x563e08428d28 <line:217:1, col:84> col:12 timer_delete 'int (timer_t)' extern
| |-ParmVarDecl 0x563e08428c18 <col:26, col:34> col:34 __timerid 'timer_t':'void *'
| `-NoThrowAttr 0x563e08428dd0 <col:61>
|-FunctionDecl 0x563e08429248 <line:218:1, line:220:85> line:218:12 timer_settime 'int (timer_t, int, const struct itimerspec *restrict, struct itimerspec *restrict)' extern
| |-ParmVarDecl 0x563e08428e38 <col:27, col:35> col:35 __timerid 'timer_t':'void *'
| |-ParmVarDecl 0x563e08428eb8 <col:46, col:50> col:50 __flags 'int'
| |-ParmVarDecl 0x563e08428fe8 <line:219:6, col:42> col:42 __value 'const struct itimerspec *restrict'
| |-ParmVarDecl 0x563e084290f0 <line:220:6, col:36> col:36 __ovalue 'struct itimerspec *restrict'
| `-NoThrowAttr 0x563e08429308 <col:62>
|-FunctionDecl 0x563e08429528 <line:221:1, line:222:45> line:221:12 timer_gettime 'int (timer_t, struct itimerspec *)' extern
| |-ParmVarDecl 0x563e08429370 <col:27, col:35> col:35 __timerid 'timer_t':'void *'
| |-ParmVarDecl 0x563e08429400 <col:46, col:65> col:65 __value 'struct itimerspec *'
| `-NoThrowAttr 0x563e084295d8 <line:222:22>
|-FunctionDecl 0x563e084296d8 <line:223:1, col:88> col:12 timer_getoverrun 'int (timer_t)' extern
| |-ParmVarDecl 0x563e08429640 <col:30, col:38> col:38 __timerid 'timer_t':'void *'
| `-NoThrowAttr 0x563e08429780 <col:65>
|-TypedefDecl 0x563e084297f0 <line:225:1, col:27> col:27 referenced pthread_t 'unsigned long'
| `-BuiltinType 0x563e083b3fd0 'unsigned long'
|-RecordDecl 0x563e08429848 <line:226:1, line:230:1> line:226:7 union pthread_attr_t definition
| |-FieldDecl 0x563e08429990 <line:228:3, col:17> col:8 __size 'char [56]'
| `-FieldDecl 0x563e084299f8 <line:229:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x563e08429aa8 <line:231:1, col:30> col:30 referenced pthread_attr_t 'union pthread_attr_t':'union pthread_attr_t'
| `-ElaboratedType 0x563e08429a50 'union pthread_attr_t' sugar
|   `-RecordType 0x563e084298d0 'union pthread_attr_t'
|     `-Record 0x563e08429848 'pthread_attr_t'
|-RecordDecl 0x563e08429b00 <line:232:9, line:236:1> line:232:16 struct __pthread_internal_list definition
| |-FieldDecl 0x563e08429c78 <line:234:3, col:35> col:35 __prev 'struct __pthread_internal_list *'
| `-FieldDecl 0x563e08429cf0 <line:235:3, col:35> col:35 __next 'struct __pthread_internal_list *'
|-TypedefDecl 0x563e08429da0 <line:232:1, line:236:3> col:3 referenced __pthread_list_t 'struct __pthread_internal_list':'struct __pthread_internal_list'
| `-ElaboratedType 0x563e08429d40 'struct __pthread_internal_list' sugar
|   `-RecordType 0x563e08429b80 'struct __pthread_internal_list'
|     `-Record 0x563e08429b00 '__pthread_internal_list'
|-RecordDecl 0x563e08429e10 <line:237:9, line:251:1> line:237:9 union definition
| |-RecordDecl 0x563e08429eb8 parent 0x563e083b3e18 <line:239:3, line:248:3> line:239:10 struct __pthread_mutex_s definition
| | |-FieldDecl 0x563e08429f90 <line:241:5, col:9> col:9 __lock 'int'
| | |-FieldDecl 0x563e08429ff8 <line:242:5, col:18> col:18 __count 'unsigned int'
| | |-FieldDecl 0x563e0842a060 <line:243:5, col:9> col:9 __owner 'int'
| | |-FieldDecl 0x563e0842e110 <line:244:5, col:18> col:18 __nusers 'unsigned int'
| | |-FieldDecl 0x563e0842e178 <line:245:5, col:9> col:9 __kind 'int'
| | |-FieldDecl 0x563e0842e1e0 <line:246:5, col:9> col:9 __spins 'int'
| | `-FieldDecl 0x563e0842e268 <line:247:5, col:22> col:22 __list '__pthread_list_t':'struct __pthread_internal_list'
| |-FieldDecl 0x563e0842e320 <line:239:3, line:248:5> col:5 __data 'struct __pthread_mutex_s':'struct __pthread_mutex_s'
| |-FieldDecl 0x563e0842e410 <line:249:3, col:17> col:8 __size 'char [40]'
| `-FieldDecl 0x563e0842e478 <line:250:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x563e0842e600 <line:237:1, line:251:3> col:3 referenced pthread_mutex_t 'union pthread_mutex_t':'pthread_mutex_t'
| `-ElaboratedType 0x563e0842e5a0 'union pthread_mutex_t' sugar
|   `-RecordType 0x563e08429e90 'pthread_mutex_t'
|     `-Record 0x563e08429e10 ''
|-RecordDecl 0x563e0842e670 <line:252:9, line:256:1> line:252:9 union definition
| |-FieldDecl 0x563e0842e7b0 <line:254:3, col:16> col:8 __size 'char [4]'
| `-FieldDecl 0x563e0842e818 <line:255:3, col:7> col:7 __align 'int'
|-TypedefDecl 0x563e0842e8d0 <line:252:1, line:256:3> col:3 referenced pthread_mutexattr_t 'union pthread_mutexattr_t':'pthread_mutexattr_t'
| `-ElaboratedType 0x563e0842e870 'union pthread_mutexattr_t' sugar
|   `-RecordType 0x563e0842e6f0 'pthread_mutexattr_t'
|     `-Record 0x563e0842e670 ''
|-RecordDecl 0x563e0842e940 <line:257:9, line:272:1> line:257:9 union definition
| |-RecordDecl 0x563e0842e9e8 <line:259:3, line:269:3> line:259:3 struct definition
| | |-FieldDecl 0x563e0842eab0 <line:261:5, col:9> col:9 __lock 'int'
| | |-FieldDecl 0x563e0842eb18 <line:262:5, col:18> col:18 __futex 'unsigned int'
| | |-FieldDecl 0x563e0842eb80 <line:263:19, col:42> col:42 __total_seq 'unsigned long long'
| | |-FieldDecl 0x563e0842ebe8 <line:264:19, col:42> col:42 __wakeup_seq 'unsigned long long'
| | |-FieldDecl 0x563e0842ec50 <line:265:19, col:42> col:42 __woken_seq 'unsigned long long'
| | |-FieldDecl 0x563e0842ecb8 <line:266:5, col:11> col:11 __mutex 'void *'
| | |-FieldDecl 0x563e0842ed20 <line:267:5, col:18> col:18 __nwaiters 'unsigned int'
| | `-FieldDecl 0x563e0842ed88 <line:268:5, col:18> col:18 __broadcast_seq 'unsigned int'
| |-FieldDecl 0x563e0842ee40 <line:259:3, line:269:5> col:5 __data 'struct (anonymous struct at ./split_0/mix009_tso.opt_false-unreach-call.i:259:3)':'struct pthread_cond_t::(anonymous at ./split_0/mix009_tso.opt_false-unreach-call.i:259:3)'
| |-FieldDecl 0x563e0842ef30 <line:270:3, col:17> col:8 __size 'char [48]'
| `-FieldDecl 0x563e0842ef98 <line:271:17, col:31> col:31 __align 'long long'
|-TypedefDecl 0x563e08430130 <line:257:1, line:272:3> col:3 referenced pthread_cond_t 'union pthread_cond_t':'pthread_cond_t'
| `-ElaboratedType 0x563e0842f070 'union pthread_cond_t' sugar
|   `-RecordType 0x563e0842e9c0 'pthread_cond_t'
|     `-Record 0x563e0842e940 ''
|-RecordDecl 0x563e084301a0 <line:273:9, line:277:1> line:273:9 union definition
| |-FieldDecl 0x563e084302a0 <line:275:3, col:16> col:8 __size 'char [4]'
| `-FieldDecl 0x563e08430308 <line:276:3, col:7> col:7 __align 'int'
|-TypedefDecl 0x563e084303c0 <line:273:1, line:277:3> col:3 referenced pthread_condattr_t 'union pthread_condattr_t':'pthread_condattr_t'
| `-ElaboratedType 0x563e08430360 'union pthread_condattr_t' sugar
|   `-RecordType 0x563e08430220 'pthread_condattr_t'
|     `-Record 0x563e084301a0 ''
|-TypedefDecl 0x563e08430448 <line:278:1, col:22> col:22 referenced pthread_key_t 'unsigned int'
| `-BuiltinType 0x563e083b3fb0 'unsigned int'
|-TypedefDecl 0x563e084304b8 <line:279:1, col:13> col:13 referenced pthread_once_t 'int'
| `-BuiltinType 0x563e083b3f10 'int'
|-RecordDecl 0x563e08430510 <line:280:9, line:298:1> line:280:9 union definition
| |-RecordDecl 0x563e084305b8 <line:282:3, line:295:3> line:282:3 struct definition
| | |-FieldDecl 0x563e08430680 <line:284:5, col:9> col:9 __lock 'int'
| | |-FieldDecl 0x563e084306e8 <line:285:5, col:18> col:18 __nr_readers 'unsigned int'
| | |-FieldDecl 0x563e08430750 <line:286:5, col:18> col:18 __readers_wakeup 'unsigned int'
| | |-FieldDecl 0x563e084307b8 <line:287:5, col:18> col:18 __writer_wakeup 'unsigned int'
| | |-FieldDecl 0x563e08430820 <line:288:5, col:18> col:18 __nr_readers_queued 'unsigned int'
| | |-FieldDecl 0x563e08430888 <line:289:5, col:18> col:18 __nr_writers_queued 'unsigned int'
| | |-FieldDecl 0x563e084308f0 <line:290:5, col:9> col:9 __writer 'int'
| | |-FieldDecl 0x563e08430958 <line:291:5, col:9> col:9 __shared 'int'
| | |-FieldDecl 0x563e084309c0 <line:292:5, col:23> col:23 __pad1 'unsigned long'
| | |-FieldDecl 0x563e08430a28 <line:293:5, col:23> col:23 __pad2 'unsigned long'
| | `-FieldDecl 0x563e08430a90 <line:294:5, col:18> col:18 __flags 'unsigned int'
| |-FieldDecl 0x563e08430b40 <line:282:3, line:295:5> col:5 __data 'struct (anonymous struct at ./split_0/mix009_tso.opt_false-unreach-call.i:282:3)':'struct pthread_rwlock_t::(anonymous at ./split_0/mix009_tso.opt_false-unreach-call.i:282:3)'
| |-FieldDecl 0x563e08430be8 <line:296:3, col:17> col:8 __size 'char [56]'
| `-FieldDecl 0x563e08430c50 <line:297:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x563e08430da0 <line:280:1, line:298:3> col:3 referenced pthread_rwlock_t 'union pthread_rwlock_t':'pthread_rwlock_t'
| `-ElaboratedType 0x563e08430d40 'union pthread_rwlock_t' sugar
|   `-RecordType 0x563e08430590 'pthread_rwlock_t'
|     `-Record 0x563e08430510 ''
|-RecordDecl 0x563e08430e10 <line:299:9, line:303:1> line:299:9 union definition
| |-FieldDecl 0x563e08430f50 <line:301:3, col:16> col:8 __size 'char [8]'
| `-FieldDecl 0x563e08430fb8 <line:302:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x563e08431070 <line:299:1, line:303:3> col:3 referenced pthread_rwlockattr_t 'union pthread_rwlockattr_t':'pthread_rwlockattr_t'
| `-ElaboratedType 0x563e08431010 'union pthread_rwlockattr_t' sugar
|   `-RecordType 0x563e08430e90 'pthread_rwlockattr_t'
|     `-Record 0x563e08430e10 ''
|-TypedefDecl 0x563e08432140 <line:304:1, col:22> col:22 referenced pthread_spinlock_t 'volatile int'
| `-QualType 0x563e083b3f14 'volatile int' volatile
|   `-BuiltinType 0x563e083b3f10 'int'
|-RecordDecl 0x563e08432198 <line:305:9, line:309:1> line:305:9 union definition
| |-FieldDecl 0x563e084322e0 <line:307:3, col:17> col:8 __size 'char [32]'
| `-FieldDecl 0x563e08432348 <line:308:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x563e08432400 <line:305:1, line:309:3> col:3 referenced pthread_barrier_t 'union pthread_barrier_t':'pthread_barrier_t'
| `-ElaboratedType 0x563e084323a0 'union pthread_barrier_t' sugar
|   `-RecordType 0x563e08432220 'pthread_barrier_t'
|     `-Record 0x563e08432198 ''
|-RecordDecl 0x563e08432470 <line:310:9, line:314:1> line:310:9 union definition
| |-FieldDecl 0x563e08432570 <line:312:3, col:16> col:8 __size 'char [4]'
| `-FieldDecl 0x563e084325d8 <line:313:3, col:7> col:7 __align 'int'
|-TypedefDecl 0x563e08432690 <line:310:1, line:314:3> col:3 referenced pthread_barrierattr_t 'union pthread_barrierattr_t':'pthread_barrierattr_t'
| `-ElaboratedType 0x563e08432630 'union pthread_barrierattr_t' sugar
|   `-RecordType 0x563e084324f0 'pthread_barrierattr_t'
|     `-Record 0x563e08432470 ''
|-TypedefDecl 0x563e084327a8 <line:315:1, col:29> col:18 referenced __jmp_buf 'long [8]'
| `-ConstantArrayType 0x563e08432740 'long [8]' 8 
|   `-BuiltinType 0x563e083b3f30 'long'
|-EnumDecl 0x563e08432800 <line:316:1, line:320:1> line:316:1
| |-EnumConstantDecl 0x563e084328c8 <line:318:3> col:3 PTHREAD_CREATE_JOINABLE 'int'
| `-EnumConstantDecl 0x563e08432918 <line:319:3> col:3 PTHREAD_CREATE_DETACHED 'int'
|-EnumDecl 0x563e08432968 <line:321:1, line:332:1> line:321:1
| |-EnumConstantDecl 0x563e08432a38 <line:323:3> col:3 referenced PTHREAD_MUTEX_TIMED_NP 'int'
| |-EnumConstantDecl 0x563e08432a88 <line:324:3> col:3 referenced PTHREAD_MUTEX_RECURSIVE_NP 'int'
| |-EnumConstantDecl 0x563e08432ad8 <line:325:3> col:3 referenced PTHREAD_MUTEX_ERRORCHECK_NP 'int'
| |-EnumConstantDecl 0x563e08432b28 <line:326:3> col:3 PTHREAD_MUTEX_ADAPTIVE_NP 'int'
| |-EnumConstantDecl 0x563e08432bb0 <line:328:3, col:26> col:3 referenced PTHREAD_MUTEX_NORMAL 'int'
| | `-ConstantExpr 0x563e08432b98 <col:26> 'int'
| |   `-DeclRefExpr 0x563e08432b78 <col:26> 'int' EnumConstant 0x563e08432a38 'PTHREAD_MUTEX_TIMED_NP' 'int'
| |-EnumConstantDecl 0x563e08432c38 <line:329:3, col:29> col:3 PTHREAD_MUTEX_RECURSIVE 'int'
| | `-ConstantExpr 0x563e08432c20 <col:29> 'int'
| |   `-DeclRefExpr 0x563e08432c00 <col:29> 'int' EnumConstant 0x563e08432a88 'PTHREAD_MUTEX_RECURSIVE_NP' 'int'
| |-EnumConstantDecl 0x563e08432cc0 <line:330:3, col:30> col:3 PTHREAD_MUTEX_ERRORCHECK 'int'
| | `-ConstantExpr 0x563e08432ca8 <col:30> 'int'
| |   `-DeclRefExpr 0x563e08432c88 <col:30> 'int' EnumConstant 0x563e08432ad8 'PTHREAD_MUTEX_ERRORCHECK_NP' 'int'
| `-EnumConstantDecl 0x563e08432d48 <line:331:3, col:27> col:3 PTHREAD_MUTEX_DEFAULT 'int'
|   `-ConstantExpr 0x563e08432d30 <col:27> 'int'
|     `-DeclRefExpr 0x563e08432d10 <col:27> 'int' EnumConstant 0x563e08432bb0 'PTHREAD_MUTEX_NORMAL' 'int'
|-EnumDecl 0x563e08432d98 <line:333:1, line:339:1> line:333:1
| |-EnumConstantDecl 0x563e08432e68 <line:335:3> col:3 referenced PTHREAD_MUTEX_STALLED 'int'
| |-EnumConstantDecl 0x563e08432ef0 <line:336:3, col:30> col:3 PTHREAD_MUTEX_STALLED_NP 'int'
| | `-ConstantExpr 0x563e08432ed8 <col:30> 'int'
| |   `-DeclRefExpr 0x563e08432eb8 <col:30> 'int' EnumConstant 0x563e08432e68 'PTHREAD_MUTEX_STALLED' 'int'
| |-EnumConstantDecl 0x563e08432f40 <line:337:3> col:3 referenced PTHREAD_MUTEX_ROBUST 'int'
| `-EnumConstantDecl 0x563e08432fc8 <line:338:3, col:29> col:3 PTHREAD_MUTEX_ROBUST_NP 'int'
|   `-ConstantExpr 0x563e08432fb0 <col:29> 'int'
|     `-DeclRefExpr 0x563e08432f90 <col:29> 'int' EnumConstant 0x563e08432f40 'PTHREAD_MUTEX_ROBUST' 'int'
|-EnumDecl 0x563e08433018 <line:340:1, line:345:1> line:340:1
| |-EnumConstantDecl 0x563e084330e8 <line:342:3> col:3 PTHREAD_PRIO_NONE 'int'
| |-EnumConstantDecl 0x563e08433150 <line:343:3> col:3 PTHREAD_PRIO_INHERIT 'int'
| `-EnumConstantDecl 0x563e084331a0 <line:344:3> col:3 PTHREAD_PRIO_PROTECT 'int'
|-EnumDecl 0x563e084331f0 <line:346:1, line:352:1> line:346:1
| |-EnumConstantDecl 0x563e084332b8 <line:348:3> col:3 referenced PTHREAD_RWLOCK_PREFER_READER_NP 'int'
| |-EnumConstantDecl 0x563e08433308 <line:349:3> col:3 PTHREAD_RWLOCK_PREFER_WRITER_NP 'int'
| |-EnumConstantDecl 0x563e08433358 <line:350:3> col:3 PTHREAD_RWLOCK_PREFER_WRITER_NONRECURSIVE_NP 'int'
| `-EnumConstantDecl 0x563e084333e0 <line:351:3, col:31> col:3 PTHREAD_RWLOCK_DEFAULT_NP 'int'
|   `-ConstantExpr 0x563e084333c8 <col:31> 'int'
|     `-DeclRefExpr 0x563e084333a8 <col:31> 'int' EnumConstant 0x563e084332b8 'PTHREAD_RWLOCK_PREFER_READER_NP' 'int'
|-EnumDecl 0x563e08433430 <line:353:1, line:357:1> line:353:1
| |-EnumConstantDecl 0x563e084334f8 <line:355:3> col:3 PTHREAD_INHERIT_SCHED 'int'
| `-EnumConstantDecl 0x563e08433548 <line:356:3> col:3 PTHREAD_EXPLICIT_SCHED 'int'
|-EnumDecl 0x563e08433598 <line:358:1, line:362:1> line:358:1
| |-EnumConstantDecl 0x563e08433668 <line:360:3> col:3 PTHREAD_SCOPE_SYSTEM 'int'
| `-EnumConstantDecl 0x563e084336b8 <line:361:3> col:3 PTHREAD_SCOPE_PROCESS 'int'
|-EnumDecl 0x563e08433708 <line:363:1, line:367:1> line:363:1
| |-EnumConstantDecl 0x563e084337d8 <line:365:3> col:3 PTHREAD_PROCESS_PRIVATE 'int'
| `-EnumConstantDecl 0x563e08433828 <line:366:3> col:3 PTHREAD_PROCESS_SHARED 'int'
|-RecordDecl 0x563e08433878 <line:368:1, line:374:1> line:368:8 struct _pthread_cleanup_buffer definition
| |-FieldDecl 0x563e08433ab8 <line:370:3, col:28> col:10 __routine 'void (*)(void *)'
| |-FieldDecl 0x563e08433b20 <line:371:3, col:9> col:9 __arg 'void *'
| |-FieldDecl 0x563e08433b88 <line:372:3, col:7> col:7 __canceltype 'int'
| `-FieldDecl 0x563e08433ca8 <line:373:3, col:35> col:35 __prev 'struct _pthread_cleanup_buffer *'
|-EnumDecl 0x563e08433cf8 <line:375:1, line:379:1> line:375:1
| |-EnumConstantDecl 0x563e08433dc8 <line:377:3> col:3 PTHREAD_CANCEL_ENABLE 'int'
| `-EnumConstantDecl 0x563e08433e18 <line:378:3> col:3 PTHREAD_CANCEL_DISABLE 'int'
|-EnumDecl 0x563e08433e68 <line:380:1, line:384:1> line:380:1
| |-EnumConstantDecl 0x563e08433f38 <line:382:3> col:3 PTHREAD_CANCEL_DEFERRED 'int'
| `-EnumConstantDecl 0x563e08433f88 <line:383:3> col:3 PTHREAD_CANCEL_ASYNCHRONOUS 'int'
|-FunctionDecl 0x563e084345b8 <line:386:1, line:389:96> line:386:12 used pthread_create 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' extern
| |-ParmVarDecl 0x563e08434080 <col:28, col:50> col:50 __newthread 'pthread_t *restrict'
| |-ParmVarDecl 0x563e084341a0 <line:387:7, col:40> col:40 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x563e084343a0 <line:388:7, col:39> col:15 __start_routine 'void *(*)(void *)'
| |-ParmVarDecl 0x563e08434420 <line:389:7, col:24> col:24 __arg 'void *restrict'
| |-NoThrowAttr 0x563e08434678 <col:47>
| |-NonNullAttr 0x563e084346d0 <col:77, col:94> 1 3
| `-CallbackAttr 0x563e08434708 <line:386:12> Implicit 2 3
|-FunctionDecl 0x563e08434830 <line:390:1, col:72> col:13 pthread_exit 'void (void *) __attribute__((noreturn))' extern
| `-ParmVarDecl 0x563e08434760 <col:27, col:33> col:33 __retval 'void *'
|-FunctionDecl 0x563e08434a88 <line:391:1, col:64> col:12 pthread_join 'int (pthread_t, void **)' extern
| |-ParmVarDecl 0x563e084348e8 <col:26, col:36> col:36 __th 'pthread_t':'unsigned long'
| `-ParmVarDecl 0x563e08434968 <col:42, col:49> col:49 __thread_return 'void **'
|-FunctionDecl 0x563e08434c58 <line:392:1, col:83> col:12 pthread_detach 'int (pthread_t)' extern
| |-ParmVarDecl 0x563e08434b48 <col:28, col:38> col:38 __th 'pthread_t':'unsigned long'
| `-NoThrowAttr 0x563e08434d00 <col:60>
|-FunctionDecl 0x563e08434e50 <line:393:1, col:105> col:18 pthread_self 'pthread_t (void)' extern
| |-NoThrowAttr 0x563e08434ef0 <col:54>
| `-ConstAttr 0x563e08434f48 <col:95>
|-FunctionDecl 0x563e08436990 <line:394:1, line:395:70> line:394:12 pthread_equal 'int (pthread_t, pthread_t)' extern
| |-ParmVarDecl 0x563e08434f80 <col:27, col:37> col:37 __thread1 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x563e08434ff8 <col:48, col:58> col:58 __thread2 'pthread_t':'unsigned long'
| |-NoThrowAttr 0x563e08436a40 <line:395:19>
| `-ConstAttr 0x563e08436a98 <col:60>
|-FunctionDecl 0x563e08436c68 <line:396:1, col:128> col:12 pthread_attr_init 'int (pthread_attr_t *)' extern
| |-ParmVarDecl 0x563e08436b30 <col:31, col:47> col:47 __attr 'pthread_attr_t *'
| |-NoThrowAttr 0x563e08436d10 <col:71>
| `-NonNullAttr 0x563e08436d68 <col:112, col:126> 1
|-FunctionDecl 0x563e08436e70 <line:397:1, line:398:79> line:397:12 pthread_attr_destroy 'int (pthread_attr_t *)' extern
| |-ParmVarDecl 0x563e08436db8 <col:34, col:50> col:50 __attr 'pthread_attr_t *'
| |-NoThrowAttr 0x563e08436f18 <line:398:22>
| `-NonNullAttr 0x563e08436f70 <col:63, col:77> 1
|-FunctionDecl 0x563e08437198 <line:399:1, line:401:82> line:399:12 pthread_attr_getdetachstate 'int (const pthread_attr_t *, int *)' extern
| |-ParmVarDecl 0x563e08436fb8 <col:41, col:63> col:63 __attr 'const pthread_attr_t *'
| |-ParmVarDecl 0x563e08437038 <line:400:6, col:11> col:11 __detachstate 'int *'
| |-NoThrowAttr 0x563e08437248 <line:401:22>
| `-NonNullAttr 0x563e084372a0 <col:63, col:80> 1 2
|-FunctionDecl 0x563e084374a8 <line:402:1, line:404:79> line:402:12 pthread_attr_setdetachstate 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x563e084372e8 <col:41, col:57> col:57 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x563e08437368 <line:403:6, col:10> col:10 __detachstate 'int'
| |-NoThrowAttr 0x563e08437558 <line:404:22>
| `-NonNullAttr 0x563e084375b0 <col:63, col:77> 1
|-FunctionDecl 0x563e08437808 <line:405:1, line:407:82> line:405:12 pthread_attr_getguardsize 'int (const pthread_attr_t *, size_t *)' extern
| |-ParmVarDecl 0x563e084375f8 <col:39, col:61> col:61 __attr 'const pthread_attr_t *'
| |-ParmVarDecl 0x563e084376a0 <line:406:11, col:19> col:19 __guardsize 'size_t *'
| |-NoThrowAttr 0x563e084378b8 <line:407:22>
| `-NonNullAttr 0x563e08437910 <col:63, col:80> 1 2
|-FunctionDecl 0x563e08438b68 <line:408:1, line:410:79> line:408:12 pthread_attr_setguardsize 'int (pthread_attr_t *, size_t)' extern
| |-ParmVarDecl 0x563e084389b0 <col:39, col:55> col:55 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x563e08438a28 <line:409:11, col:18> col:18 __guardsize 'size_t':'unsigned long'
| |-NoThrowAttr 0x563e08438c18 <line:410:22>
| `-NonNullAttr 0x563e08438c70 <col:63, col:77> 1
|-FunctionDecl 0x563e08438ea8 <line:411:1, line:413:82> line:411:12 pthread_attr_getschedparam 'int (const pthread_attr_t *restrict, struct sched_param *restrict)' extern
| |-ParmVarDecl 0x563e08438cb8 <col:40, col:73> col:73 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x563e08438d48 <line:412:12, col:43> col:43 __param 'struct sched_param *restrict'
| |-NoThrowAttr 0x563e08438f58 <line:413:22>
| `-NonNullAttr 0x563e08438fb0 <col:63, col:80> 1 2
|-FunctionDecl 0x563e084391e8 <line:414:1, line:416:97> line:414:12 pthread_attr_setschedparam 'int (pthread_attr_t *restrict, const struct sched_param *restrict)' extern
| |-ParmVarDecl 0x563e08438ff8 <col:40, col:67> col:67 __attr 'pthread_attr_t *restrict'
| |-ParmVarDecl 0x563e08439088 <line:415:12, line:416:12> col:12 __param 'const struct sched_param *restrict'
| |-NoThrowAttr 0x563e08439298 <col:37>
| `-NonNullAttr 0x563e084392f0 <col:78, col:95> 1 2
|-FunctionDecl 0x563e084394d8 <line:417:1, line:419:82> line:417:12 pthread_attr_getschedpolicy 'int (const pthread_attr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x563e08439338 <col:41, line:418:6> col:6 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x563e084393b8 <col:14, col:30> col:30 __policy 'int *restrict'
| |-NoThrowAttr 0x563e08439588 <line:419:22>
| `-NonNullAttr 0x563e084395e0 <col:63, col:80> 1 2
|-FunctionDecl 0x563e08439768 <line:420:1, line:421:79> line:420:12 pthread_attr_setschedpolicy 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x563e08439628 <col:41, col:57> col:57 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x563e084396a8 <col:65, col:69> col:69 __policy 'int'
| |-NoThrowAttr 0x563e08439818 <line:421:22>
| `-NonNullAttr 0x563e08439870 <col:63, col:77> 1
|-FunctionDecl 0x563e08439a38 <line:422:1, line:424:82> line:422:12 pthread_attr_getinheritsched 'int (const pthread_attr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x563e084398b8 <col:42, line:423:7> col:7 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x563e08439938 <col:15, col:31> col:31 __inherit 'int *restrict'
| |-NoThrowAttr 0x563e08439ae8 <line:424:22>
| `-NonNullAttr 0x563e08439b40 <col:63, col:80> 1 2
|-FunctionDecl 0x563e08439cc8 <line:425:1, line:427:79> line:425:12 pthread_attr_setinheritsched 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x563e08439b88 <col:42, col:58> col:58 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x563e08439c08 <line:426:7, col:11> col:11 __inherit 'int'
| |-NoThrowAttr 0x563e08439d78 <line:427:22>
| `-NonNullAttr 0x563e08439dd0 <col:63, col:77> 1
|-FunctionDecl 0x563e08439f78 <line:428:1, line:430:82> line:428:12 pthread_attr_getscope 'int (const pthread_attr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x563e08439e18 <col:35, col:68> col:68 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x563e08439e98 <line:429:7, col:23> col:23 __scope 'int *restrict'
| |-NoThrowAttr 0x563e0843a028 <line:430:22>
| `-NonNullAttr 0x563e0843a080 <col:63, col:80> 1 2
|-FunctionDecl 0x563e0843a208 <line:431:1, line:432:79> line:431:12 pthread_attr_setscope 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x563e0843a0c8 <col:35, col:51> col:51 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x563e0843a148 <col:59, col:63> col:63 __scope 'int'
| |-NoThrowAttr 0x563e0843a2b8 <line:432:22>
| `-NonNullAttr 0x563e0843a310 <col:63, col:77> 1
|-FunctionDecl 0x563e0843a538 <line:433:1, line:435:115> line:433:12 pthread_attr_getstackaddr 'int (const pthread_attr_t *restrict, void **restrict)' extern
| |-ParmVarDecl 0x563e0843a358 <col:39, line:434:11> col:11 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x563e0843a3d8 <col:19, col:37> col:37 __stackaddr 'void **restrict'
| |-NoThrowAttr 0x563e0843a5e8 <line:435:22>
| |-NonNullAttr 0x563e0843a640 <col:63, col:80> 1 2
| `-DeprecatedAttr 0x563e0843a678 <col:100> "" ""
|-FunctionDecl 0x563e0843a888 <line:436:1, line:438:112> line:436:12 pthread_attr_setstackaddr 'int (pthread_attr_t *, void *)' extern
| |-ParmVarDecl 0x563e0843a6c8 <col:39, col:55> col:55 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x563e0843a748 <line:437:11, col:17> col:17 __stackaddr 'void *'
| |-NoThrowAttr 0x563e0843a938 <line:438:22>
| |-NonNullAttr 0x563e0843a990 <col:63, col:77> 1
| `-DeprecatedAttr 0x563e0843a9d8 <col:97> "" ""
|-FunctionDecl 0x563e0843abc8 <line:439:1, line:441:82> line:439:12 pthread_attr_getstacksize 'int (const pthread_attr_t *restrict, size_t *restrict)' extern
| |-ParmVarDecl 0x563e0843aa28 <col:39, line:440:11> col:11 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x563e0843aaa0 <col:19, col:38> col:38 __stacksize 'size_t *restrict'
| |-NoThrowAttr 0x563e0843ac78 <line:441:22>
| `-NonNullAttr 0x563e0843acd0 <col:63, col:80> 1 2
|-FunctionDecl 0x563e0843ae50 <line:442:1, line:444:79> line:442:12 pthread_attr_setstacksize 'int (pthread_attr_t *, size_t)' extern
| |-ParmVarDecl 0x563e0843ad18 <col:39, col:55> col:55 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x563e0843ad90 <line:443:11, col:18> col:18 __stacksize 'size_t':'unsigned long'
| |-NoThrowAttr 0x563e0843af00 <line:444:22>
| `-NonNullAttr 0x563e0843af58 <col:63, col:77> 1
|-FunctionDecl 0x563e0843b248 <line:445:1, line:448:85> line:445:12 pthread_attr_getstack 'int (const pthread_attr_t *restrict, void **restrict, size_t *restrict)' extern
| |-ParmVarDecl 0x563e0843afa8 <col:35, col:68> col:68 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x563e0843b028 <line:446:7, col:25> col:25 __stackaddr 'void **restrict'
| |-ParmVarDecl 0x563e0843b0a0 <line:447:7, col:26> col:26 __stacksize 'size_t *restrict'
| |-NoThrowAttr 0x563e0843b300 <line:448:22>
| `-NonNullAttr 0x563e0843b358 <col:63, col:83> 1 2 3
|-FunctionDecl 0x563e0843b608 <line:449:1, line:450:100> line:449:12 pthread_attr_setstack 'int (pthread_attr_t *, void *, size_t)' extern
| |-ParmVarDecl 0x563e0843b3b0 <col:35, col:51> col:51 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x563e0843b430 <col:59, col:65> col:65 __stackaddr 'void *'
| |-ParmVarDecl 0x563e0843b4a8 <line:450:7, col:14> col:14 __stacksize 'size_t':'unsigned long'
| |-NoThrowAttr 0x563e0843b6c0 <col:43>
| `-NonNullAttr 0x563e0843b718 <col:84, col:98> 1
|-FunctionDecl 0x563e0843ba20 <line:451:1, line:453:79> line:451:12 pthread_setschedparam 'int (pthread_t, int, const struct sched_param *)' extern
| |-ParmVarDecl 0x563e0843b768 <col:35, col:45> col:45 __target_thread 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x563e0843b7e8 <col:62, col:66> col:66 __policy 'int'
| |-ParmVarDecl 0x563e0843b878 <line:452:7, col:33> col:33 __param 'const struct sched_param *'
| |-NoThrowAttr 0x563e0843bad8 <line:453:22>
| `-NonNullAttr 0x563e0843bb30 <col:63, col:77> 3
|-FunctionDecl 0x563e0843be08 <line:454:1, line:457:82> line:454:12 pthread_getschedparam 'int (pthread_t, int *restrict, struct sched_param *restrict)' extern
| |-ParmVarDecl 0x563e0843bb78 <col:35, col:45> col:45 __target_thread 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x563e0843bbf8 <line:455:7, col:23> col:23 __policy 'int *restrict'
| |-ParmVarDecl 0x563e0843bc88 <line:456:7, col:38> col:38 __param 'struct sched_param *restrict'
| |-NoThrowAttr 0x563e0843bec0 <line:457:22>
| `-NonNullAttr 0x563e0843bf18 <col:63, col:80> 2 3
|-FunctionDecl 0x563e0843c108 <line:458:1, line:459:45> line:458:12 pthread_setschedprio 'int (pthread_t, int)' extern
| |-ParmVarDecl 0x563e0843bf68 <col:34, col:44> col:44 __target_thread 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x563e0843bfe8 <col:61, col:65> col:65 __prio 'int'
| `-NoThrowAttr 0x563e0843c1b8 <line:459:22>
|-FunctionDecl 0x563e0843c588 <line:460:1, line:461:71> line:460:12 pthread_once 'int (pthread_once_t *, void (*)(void))' extern
| |-ParmVarDecl 0x563e0843c280 <col:26, col:42> col:42 __once_control 'pthread_once_t *'
| |-ParmVarDecl 0x563e0843c420 <line:461:5, col:33> col:12 __init_routine 'void (*)(void)'
| `-NonNullAttr 0x563e0843c638 <col:52, col:69> 1 2
|-FunctionDecl 0x563e0843c7e0 <line:462:1, col:64> col:12 pthread_setcancelstate 'int (int, int *)' extern
| |-ParmVarDecl 0x563e0843c6c0 <col:36, col:40> col:40 __state 'int'
| `-ParmVarDecl 0x563e0843c740 <col:49, col:54> col:54 __oldstate 'int *'
|-FunctionDecl 0x563e0843c9f0 <line:463:1, col:61> col:12 pthread_setcanceltype 'int (int, int *)' extern
| |-ParmVarDecl 0x563e0843c8a8 <col:35, col:39> col:39 __type 'int'
| `-ParmVarDecl 0x563e0843c928 <col:47, col:52> col:52 __oldtype 'int *'
|-FunctionDecl 0x563e0843cb48 <line:464:1, col:42> col:12 pthread_cancel 'int (pthread_t)' extern
| `-ParmVarDecl 0x563e0843cab0 <col:28, col:38> col:38 __th 'pthread_t':'unsigned long'
|-FunctionDecl 0x563e0843cc88 <line:465:1, col:37> col:13 pthread_testcancel 'void (void)' extern
|-RecordDecl 0x563e0843cd28 <line:466:9, line:474:1> line:466:9 struct definition
| |-RecordDecl 0x563e0843cdd8 <line:468:3, line:472:3> line:468:3 struct definition
| | |-FieldDecl 0x563e0843cec8 <line:470:5, col:15> col:15 __cancel_jmp_buf '__jmp_buf':'long [8]'
| | `-FieldDecl 0x563e0843cf30 <line:471:5, col:9> col:9 __mask_was_saved 'int'
| |-FieldDecl 0x563e0843d100 <line:468:3, line:472:23> col:5 __cancel_jmp_buf 'struct (anonymous struct at ./split_0/mix009_tso.opt_false-unreach-call.i:468:3) [1]'
| `-FieldDecl 0x563e0843d1f8 <line:473:3, col:16> col:9 __pad 'void *[4]'
|-TypedefDecl 0x563e0843d2b0 <line:466:1, line:474:3> col:3 referenced __pthread_unwind_buf_t 'struct __pthread_unwind_buf_t':'__pthread_unwind_buf_t'
| |-ElaboratedType 0x563e0843d250 'struct __pthread_unwind_buf_t' sugar
| | `-RecordType 0x563e0843cdb0 '__pthread_unwind_buf_t'
| |   `-Record 0x563e0843cd28 ''
| `-AlignedAttr 0x563e0843d308 <col:42> aligned
|   `-<<<NULL>>>
|-RecordDecl 0x563e0843d380 <line:475:1, line:481:1> line:475:8 struct __pthread_cleanup_frame definition
| |-FieldDecl 0x563e0843d4e0 <line:477:3, col:35> col:10 __cancel_routine 'void (*)(void *)'
| |-FieldDecl 0x563e0843d548 <line:478:3, col:9> col:9 __cancel_arg 'void *'
| |-FieldDecl 0x563e0843d5b0 <line:479:3, col:7> col:7 __do_it 'int'
| `-FieldDecl 0x563e0843d618 <line:480:3, col:7> col:7 __cancel_type 'int'
|-FunctionDecl 0x563e0843d820 <line:482:1, col:69> col:13 __pthread_register_cancel 'void (__pthread_unwind_buf_t *)' extern
| `-ParmVarDecl 0x563e0843d710 <col:40, col:64> col:64 __buf '__pthread_unwind_buf_t *'
|-FunctionDecl 0x563e0843da00 <line:484:1, col:71> col:13 __pthread_unregister_cancel 'void (__pthread_unwind_buf_t *)' extern
| `-ParmVarDecl 0x563e0843d8d8 <col:42, col:66> col:66 __buf '__pthread_unwind_buf_t *'
|-FunctionDecl 0x563e0843dbc0 <line:486:1, line:488:31> line:486:13 __pthread_unwind_next 'void (__pthread_unwind_buf_t *) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x563e0843dab8 <col:36, col:60> col:60 __buf '__pthread_unwind_buf_t *'
| `-WeakAttr 0x563e0843dc68 <line:488:22>
|-RecordDecl 0x563e0843dcc0 <line:490:1, col:8> col:8 struct __jmp_buf_tag
|-FunctionDecl 0x563e0843dfd8 <line:491:1, col:98> col:12 __sigsetjmp 'int (struct __jmp_buf_tag *, int)' extern
| |-ParmVarDecl 0x563e0843de38 <col:25, col:47> col:47 __env 'struct __jmp_buf_tag *'
| |-ParmVarDecl 0x563e0843deb8 <col:54, col:58> col:58 __savemask 'int'
| |-NoThrowAttr 0x563e0843e088 <col:86>
| `-ReturnsTwiceAttr 0x563e0843e0e0 <col:12> Implicit
|-FunctionDecl 0x563e0843e408 <line:492:1, line:494:79> line:492:12 pthread_mutex_init 'int (pthread_mutex_t *, const pthread_mutexattr_t *)' extern
| |-ParmVarDecl 0x563e0843e1b0 <col:32, col:49> col:49 __mutex 'pthread_mutex_t *'
| |-ParmVarDecl 0x563e0843e2c0 <line:493:11, col:38> col:38 __mutexattr 'const pthread_mutexattr_t *'
| |-NoThrowAttr 0x563e0843e4b8 <line:494:22>
| `-NonNullAttr 0x563e0843e510 <col:63, col:77> 1
|-FunctionDecl 0x563e0843e688 <line:495:1, line:496:79> line:495:12 pthread_mutex_destroy 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x563e0843e558 <col:35, col:52> col:52 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x563e0843e730 <line:496:22>
| `-NonNullAttr 0x563e0843e788 <col:63, col:77> 1
|-FunctionDecl 0x563e0843e890 <line:497:1, line:498:68> line:497:12 pthread_mutex_trylock 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x563e0843e7d8 <col:35, col:52> col:52 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x563e0843e938 <line:498:22>
| `-NonNullAttr 0x563e0843e990 <col:52, col:66> 1
|-FunctionDecl 0x563e0843fad8 <line:499:1, line:500:68> line:499:12 pthread_mutex_lock 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x563e0843fa20 <col:32, col:49> col:49 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x563e0843fb80 <line:500:22>
| `-NonNullAttr 0x563e0843fbd8 <col:52, col:66> 1
|-FunctionDecl 0x563e0843fe18 <line:501:1, line:503:85> line:501:12 pthread_mutex_timedlock 'int (pthread_mutex_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x563e0843fc28 <col:37, col:65> col:65 __mutex 'pthread_mutex_t *restrict'
| |-ParmVarDecl 0x563e0843fcb8 <line:502:9, line:503:9> col:9 __abstime 'const struct timespec *restrict'
| |-NoThrowAttr 0x563e0843fec8 <col:36>
| `-NonNullAttr 0x563e0843ff20 <col:66, col:83> 1 2
|-FunctionDecl 0x563e08440020 <line:504:1, line:505:68> line:504:12 pthread_mutex_unlock 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x563e0843ff68 <col:34, col:51> col:51 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x563e084400c8 <line:505:22>
| `-NonNullAttr 0x563e08440120 <col:52, col:66> 1
|-FunctionDecl 0x563e084403b8 <line:506:1, line:509:82> line:506:12 pthread_mutex_getprioceiling 'int (const pthread_mutex_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x563e084401d0 <col:42, line:507:18> col:18 __mutex 'const pthread_mutex_t *restrict'
| |-ParmVarDecl 0x563e08440250 <line:508:7, col:23> col:23 __prioceiling 'int *restrict'
| |-NoThrowAttr 0x563e08440468 <line:509:22>
| `-NonNullAttr 0x563e084404c0 <col:63, col:80> 1 2
|-FunctionDecl 0x563e08440788 <line:510:1, line:513:82> line:510:12 pthread_mutex_setprioceiling 'int (pthread_mutex_t *restrict, int, int *restrict)' extern
| |-ParmVarDecl 0x563e08440508 <col:42, col:70> col:70 __mutex 'pthread_mutex_t *restrict'
| |-ParmVarDecl 0x563e08440588 <line:511:7, col:11> col:11 __prioceiling 'int'
| |-ParmVarDecl 0x563e08440608 <line:512:7, col:23> col:23 __old_ceiling 'int *restrict'
| |-NoThrowAttr 0x563e08440840 <line:513:22>
| `-NonNullAttr 0x563e08440898 <col:63, col:80> 1 3
|-FunctionDecl 0x563e08440a30 <line:514:1, line:515:79> line:514:12 pthread_mutex_consistent 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x563e084408e8 <col:38, col:55> col:55 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x563e08440ad8 <line:515:22>
| `-NonNullAttr 0x563e08440b30 <col:63, col:77> 1
|-FunctionDecl 0x563e08440d18 <line:516:1, line:517:79> line:516:12 pthread_mutexattr_init 'int (pthread_mutexattr_t *)' extern
| |-ParmVarDecl 0x563e08440be0 <col:36, col:57> col:57 __attr 'pthread_mutexattr_t *'
| |-NoThrowAttr 0x563e08440dc0 <line:517:22>
| `-NonNullAttr 0x563e08440e18 <col:63, col:77> 1
|-FunctionDecl 0x563e08440f20 <line:518:1, line:519:79> line:518:12 pthread_mutexattr_destroy 'int (pthread_mutexattr_t *)' extern
| |-ParmVarDecl 0x563e08440e68 <col:39, col:60> col:60 __attr 'pthread_mutexattr_t *'
| |-NoThrowAttr 0x563e08440fc8 <line:519:22>
| `-NonNullAttr 0x563e08441020 <col:63, col:77> 1
|-FunctionDecl 0x563e08441248 <line:520:1, line:523:82> line:520:12 pthread_mutexattr_getpshared 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x563e08441068 <col:42, line:521:18> col:18 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x563e084410e8 <line:522:7, col:23> col:23 __pshared 'int *restrict'
| |-NoThrowAttr 0x563e084412f8 <line:523:22>
| `-NonNullAttr 0x563e08441350 <col:63, col:80> 1 2
|-FunctionDecl 0x563e08441558 <line:524:1, line:526:79> line:524:12 pthread_mutexattr_setpshared 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x563e08441398 <col:42, col:63> col:63 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x563e08441418 <line:525:7, col:11> col:11 __pshared 'int'
| |-NoThrowAttr 0x563e08441608 <line:526:22>
| `-NonNullAttr 0x563e08441660 <col:63, col:77> 1
|-FunctionDecl 0x563e08441808 <line:527:1, line:529:82> line:527:12 pthread_mutexattr_gettype 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x563e084416a8 <col:39, line:528:11> col:11 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x563e08441728 <col:19, col:35> col:35 __kind 'int *restrict'
| |-NoThrowAttr 0x563e084418b8 <line:529:22>
| `-NonNullAttr 0x563e08441910 <col:63, col:80> 1 2
|-FunctionDecl 0x563e08441b00 <line:530:1, line:531:79> line:530:12 pthread_mutexattr_settype 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x563e08441958 <col:39, col:60> col:60 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x563e08441a40 <col:68, col:72> col:72 __kind 'int'
| |-NoThrowAttr 0x563e08441bb0 <line:531:22>
| `-NonNullAttr 0x563e08441c08 <col:63, col:77> 1
|-FunctionDecl 0x563e08441db8 <line:532:1, line:535:82> line:532:12 pthread_mutexattr_getprotocol 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x563e08441c58 <col:43, line:533:19> col:19 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x563e08441cd8 <line:534:8, col:24> col:24 __protocol 'int *restrict'
| |-NoThrowAttr 0x563e08441e68 <line:535:22>
| `-NonNullAttr 0x563e08441ec0 <col:63, col:80> 1 2
|-FunctionDecl 0x563e08442048 <line:536:1, line:538:79> line:536:12 pthread_mutexattr_setprotocol 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x563e08441f08 <col:43, col:64> col:64 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x563e08441f88 <line:537:8, col:12> col:12 __protocol 'int'
| |-NoThrowAttr 0x563e084420f8 <line:538:22>
| `-NonNullAttr 0x563e08442150 <col:63, col:77> 1
|-FunctionDecl 0x563e084422f8 <line:539:1, line:542:82> line:539:12 pthread_mutexattr_getprioceiling 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x563e08442198 <col:46, line:540:22> col:22 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x563e08442218 <line:541:11, col:27> col:27 __prioceiling 'int *restrict'
| |-NoThrowAttr 0x563e084423a8 <line:542:22>
| `-NonNullAttr 0x563e08442400 <col:63, col:80> 1 2
|-FunctionDecl 0x563e08442588 <line:543:1, line:545:79> line:543:12 pthread_mutexattr_setprioceiling 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x563e08442448 <col:46, col:67> col:67 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x563e084424c8 <line:544:11, col:15> col:15 __prioceiling 'int'
| |-NoThrowAttr 0x563e08442638 <line:545:22>
| `-NonNullAttr 0x563e08442690 <col:63, col:77> 1
|-FunctionDecl 0x563e08442878 <line:546:1, line:548:82> line:546:12 pthread_mutexattr_getrobust 'int (const pthread_mutexattr_t *, int *)' extern
| |-ParmVarDecl 0x563e084426d8 <col:41, col:68> col:68 __attr 'const pthread_mutexattr_t *'
| |-ParmVarDecl 0x563e08442758 <line:547:6, col:11> col:11 __robustness 'int *'
| |-NoThrowAttr 0x563e08442928 <line:548:22>
| `-NonNullAttr 0x563e08442980 <col:63, col:80> 1 2
|-FunctionDecl 0x563e08443b38 <line:549:1, line:551:79> line:549:12 pthread_mutexattr_setrobust 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x563e084429c8 <col:41, col:62> col:62 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x563e08443a78 <line:550:6, col:10> col:10 __robustness 'int'
| |-NoThrowAttr 0x563e08443be8 <line:551:22>
| `-NonNullAttr 0x563e08443c40 <col:63, col:77> 1
|-FunctionDecl 0x563e08443f78 <line:552:1, line:554:86> line:552:12 pthread_rwlock_init 'int (pthread_rwlock_t *restrict, const pthread_rwlockattr_t *restrict)' extern
| |-ParmVarDecl 0x563e08443d20 <col:33, col:62> col:62 __rwlock 'pthread_rwlock_t *restrict'
| |-ParmVarDecl 0x563e08443e30 <line:553:5, line:554:5> col:5 __attr 'const pthread_rwlockattr_t *restrict'
| |-NoThrowAttr 0x563e08444028 <col:29>
| `-NonNullAttr 0x563e08444080 <col:70, col:84> 1
|-FunctionDecl 0x563e084441f8 <line:555:1, line:556:79> line:555:12 pthread_rwlock_destroy 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x563e084440c8 <col:36, col:54> col:54 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x563e084442a0 <line:556:22>
| `-NonNullAttr 0x563e084442f8 <col:63, col:77> 1
|-FunctionDecl 0x563e08444400 <line:557:1, line:558:68> line:557:12 pthread_rwlock_rdlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x563e08444348 <col:35, col:53> col:53 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x563e084444a8 <line:558:22>
| `-NonNullAttr 0x563e08444500 <col:52, col:66> 1
|-FunctionDecl 0x563e08444600 <line:559:1, line:560:65> line:559:12 pthread_rwlock_tryrdlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x563e08444548 <col:38, col:56> col:56 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x563e084446a8 <line:560:19>
| `-NonNullAttr 0x563e08444700 <col:49, col:63> 1
|-FunctionDecl 0x563e08444938 <line:561:1, line:563:88> line:561:12 pthread_rwlock_timedrdlock 'int (pthread_rwlock_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x563e08444748 <col:40, col:69> col:69 __rwlock 'pthread_rwlock_t *restrict'
| |-ParmVarDecl 0x563e084447d8 <line:562:12, line:563:12> col:12 __abstime 'const struct timespec *restrict'
| |-NoThrowAttr 0x563e084449e8 <col:39>
| `-NonNullAttr 0x563e08444a70 <col:69, col:86> 1 2
|-FunctionDecl 0x563e08444b70 <line:564:1, line:565:68> line:564:12 pthread_rwlock_wrlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x563e08444ab8 <col:35, col:53> col:53 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x563e08444c18 <line:565:22>
| `-NonNullAttr 0x563e08444c70 <col:52, col:66> 1
|-FunctionDecl 0x563e08444d70 <line:566:1, line:567:68> line:566:12 pthread_rwlock_trywrlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x563e08444cb8 <col:38, col:56> col:56 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x563e08444e18 <line:567:22>
| `-NonNullAttr 0x563e08444e70 <col:52, col:66> 1
|-FunctionDecl 0x563e08445028 <line:568:1, line:570:88> line:568:12 pthread_rwlock_timedwrlock 'int (pthread_rwlock_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x563e08444eb8 <col:40, col:69> col:69 __rwlock 'pthread_rwlock_t *restrict'
| |-ParmVarDecl 0x563e08444f48 <line:569:12, line:570:12> col:12 __abstime 'const struct timespec *restrict'
| |-NoThrowAttr 0x563e084450d8 <col:39>
| `-NonNullAttr 0x563e08445130 <col:69, col:86> 1 2
|-FunctionDecl 0x563e08445230 <line:571:1, line:572:68> line:571:12 pthread_rwlock_unlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x563e08445178 <col:35, col:53> col:53 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x563e084452d8 <line:572:22>
| `-NonNullAttr 0x563e08445330 <col:52, col:66> 1
|-FunctionDecl 0x563e08445518 <line:573:1, line:574:79> line:573:12 pthread_rwlockattr_init 'int (pthread_rwlockattr_t *)' extern
| |-ParmVarDecl 0x563e084453e0 <col:37, col:59> col:59 __attr 'pthread_rwlockattr_t *'
| |-NoThrowAttr 0x563e084455c0 <line:574:22>
| `-NonNullAttr 0x563e08445618 <col:63, col:77> 1
|-FunctionDecl 0x563e08445720 <line:575:1, line:576:79> line:575:12 pthread_rwlockattr_destroy 'int (pthread_rwlockattr_t *)' extern
| |-ParmVarDecl 0x563e08445668 <col:40, col:62> col:62 __attr 'pthread_rwlockattr_t *'
| |-NoThrowAttr 0x563e084457c8 <line:576:22>
| `-NonNullAttr 0x563e08445820 <col:63, col:77> 1
|-FunctionDecl 0x563e08445a80 <line:577:1, line:580:82> line:577:12 pthread_rwlockattr_getpshared 'int (const pthread_rwlockattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x563e08445868 <col:43, line:578:19> col:19 __attr 'const pthread_rwlockattr_t *restrict'
| |-ParmVarDecl 0x563e084458e8 <line:579:8, col:24> col:24 __pshared 'int *restrict'
| |-NoThrowAttr 0x563e08445b30 <line:580:22>
| `-NonNullAttr 0x563e08445b88 <col:63, col:80> 1 2
|-FunctionDecl 0x563e08445d98 <line:581:1, line:583:79> line:581:12 pthread_rwlockattr_setpshared 'int (pthread_rwlockattr_t *, int)' extern
| |-ParmVarDecl 0x563e08445bd8 <col:43, col:65> col:65 __attr 'pthread_rwlockattr_t *'
| |-ParmVarDecl 0x563e08445c58 <line:582:8, col:12> col:12 __pshared 'int'
| |-NoThrowAttr 0x563e08445e48 <line:583:22>
| `-NonNullAttr 0x563e08445ea0 <col:63, col:77> 1
|-FunctionDecl 0x563e08446048 <line:584:1, line:587:82> line:584:12 pthread_rwlockattr_getkind_np 'int (const pthread_rwlockattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x563e08445ee8 <col:43, line:585:19> col:19 __attr 'const pthread_rwlockattr_t *restrict'
| |-ParmVarDecl 0x563e08445f68 <line:586:8, col:24> col:24 __pref 'int *restrict'
| |-NoThrowAttr 0x563e084460f8 <line:587:22>
| `-NonNullAttr 0x563e08446150 <col:63, col:80> 1 2
|-FunctionDecl 0x563e084462d8 <line:588:1, line:589:93> line:588:12 pthread_rwlockattr_setkind_np 'int (pthread_rwlockattr_t *, int)' extern
| |-ParmVarDecl 0x563e08446198 <col:43, col:65> col:65 __attr 'pthread_rwlockattr_t *'
| |-ParmVarDecl 0x563e08446218 <line:589:8, col:12> col:12 __pref 'int'
| |-NoThrowAttr 0x563e08446388 <col:36>
| `-NonNullAttr 0x563e084463e0 <col:77, col:91> 1
|-FunctionDecl 0x563e08446718 <line:590:1, line:592:79> line:590:12 pthread_cond_init 'int (pthread_cond_t *restrict, const pthread_condattr_t *restrict)' extern
| |-ParmVarDecl 0x563e084464c0 <col:31, col:58> col:58 __cond 'pthread_cond_t *restrict'
| |-ParmVarDecl 0x563e084465d0 <line:591:10, col:47> col:47 __cond_attr 'const pthread_condattr_t *restrict'
| |-NoThrowAttr 0x563e084467c8 <line:592:22>
| `-NonNullAttr 0x563e08446820 <col:63, col:77> 1
|-FunctionDecl 0x563e08446998 <line:593:1, line:594:79> line:593:12 pthread_cond_destroy 'int (pthread_cond_t *)' extern
| |-ParmVarDecl 0x563e08446868 <col:34, col:50> col:50 __cond 'pthread_cond_t *'
| |-NoThrowAttr 0x563e08446a40 <line:594:22>
| `-NonNullAttr 0x563e08446ac0 <col:63, col:77> 1
|-FunctionDecl 0x563e08446bc0 <line:595:1, line:596:68> line:595:12 pthread_cond_signal 'int (pthread_cond_t *)' extern
| |-ParmVarDecl 0x563e08446b08 <col:33, col:49> col:49 __cond 'pthread_cond_t *'
| |-NoThrowAttr 0x563e08446c68 <line:596:22>
| `-NonNullAttr 0x563e08446cc0 <col:52, col:66> 1
|-FunctionDecl 0x563e08446dc0 <line:597:1, line:598:68> line:597:12 pthread_cond_broadcast 'int (pthread_cond_t *)' extern
| |-ParmVarDecl 0x563e08446d08 <col:36, col:52> col:52 __cond 'pthread_cond_t *'
| |-NoThrowAttr 0x563e08446e68 <line:598:22>
| `-NonNullAttr 0x563e08446ec0 <col:52, col:66> 1
|-FunctionDecl 0x563e084470e8 <line:599:1, line:601:41> line:599:12 pthread_cond_wait 'int (pthread_cond_t *restrict, pthread_mutex_t *restrict)' extern
| |-ParmVarDecl 0x563e08446f08 <col:31, col:58> col:58 __cond 'pthread_cond_t *restrict'
| |-ParmVarDecl 0x563e08446f80 <line:600:10, col:38> col:38 __mutex 'pthread_mutex_t *restrict'
| `-NonNullAttr 0x563e08447198 <line:601:22, col:39> 1 2
|-FunctionDecl 0x563e084474c8 <line:602:1, line:605:44> line:602:12 pthread_cond_timedwait 'int (pthread_cond_t *restrict, pthread_mutex_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x563e08447218 <col:36, col:63> col:63 __cond 'pthread_cond_t *restrict'
| |-ParmVarDecl 0x563e08447290 <line:603:8, col:36> col:36 __mutex 'pthread_mutex_t *restrict'
| |-ParmVarDecl 0x563e08447320 <line:604:8, col:42> col:42 __abstime 'const struct timespec *restrict'
| `-NonNullAttr 0x563e08447580 <line:605:22, col:42> 1 2 3
|-FunctionDecl 0x563e08447798 <line:606:1, line:607:79> line:606:12 pthread_condattr_init 'int (pthread_condattr_t *)' extern
| |-ParmVarDecl 0x563e08447660 <col:35, col:55> col:55 __attr 'pthread_condattr_t *'
| |-NoThrowAttr 0x563e08447840 <line:607:22>
| `-NonNullAttr 0x563e08447898 <col:63, col:77> 1
|-FunctionDecl 0x563e084479a0 <line:608:1, line:609:79> line:608:12 pthread_condattr_destroy 'int (pthread_condattr_t *)' extern
| |-ParmVarDecl 0x563e084478e8 <col:38, col:58> col:58 __attr 'pthread_condattr_t *'
| |-NoThrowAttr 0x563e08447a48 <line:609:22>
| `-NonNullAttr 0x563e08447ad0 <col:63, col:77> 1
|-FunctionDecl 0x563e08447cf8 <line:610:1, line:613:82> line:610:12 pthread_condattr_getpshared 'int (const pthread_condattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x563e08447b18 <col:41, line:611:17> col:17 __attr 'const pthread_condattr_t *restrict'
| |-ParmVarDecl 0x563e08447b98 <line:612:6, col:22> col:22 __pshared 'int *restrict'
| |-NoThrowAttr 0x563e08447da8 <line:613:22>
| `-NonNullAttr 0x563e08447e00 <col:63, col:80> 1 2
|-FunctionDecl 0x563e08448008 <line:614:1, line:615:94> line:614:12 pthread_condattr_setpshared 'int (pthread_condattr_t *, int)' extern
| |-ParmVarDecl 0x563e08447e48 <col:41, col:61> col:61 __attr 'pthread_condattr_t *'
| |-ParmVarDecl 0x563e08447ec8 <line:615:6, col:10> col:10 __pshared 'int'
| |-NoThrowAttr 0x563e084480b8 <col:37>
| `-NonNullAttr 0x563e08448110 <col:78, col:92> 1
|-FunctionDecl 0x563e08448328 <line:616:1, line:619:82> line:616:12 pthread_condattr_getclock 'int (const pthread_condattr_t *restrict, __clockid_t *restrict)' extern
| |-ParmVarDecl 0x563e08448158 <col:39, line:617:22> col:22 __attr 'const pthread_condattr_t *restrict'
| |-ParmVarDecl 0x563e08448200 <line:618:11, col:35> col:35 __clock_id '__clockid_t *restrict'
| |-NoThrowAttr 0x563e084483d8 <line:619:22>
| `-NonNullAttr 0x563e08448430 <col:63, col:80> 1 2
|-FunctionDecl 0x563e084485f8 <line:620:1, line:622:79> line:620:12 pthread_condattr_setclock 'int (pthread_condattr_t *, __clockid_t)' extern
| |-ParmVarDecl 0x563e08448478 <col:39, col:59> col:59 __attr 'pthread_condattr_t *'
| |-ParmVarDecl 0x563e084484f0 <line:621:11, col:23> col:23 __clock_id '__clockid_t':'int'
| |-NoThrowAttr 0x563e084486a8 <line:622:22>
| `-NonNullAttr 0x563e08448700 <col:63, col:77> 1
|-FunctionDecl 0x563e084489a8 <line:623:1, line:624:79> line:623:12 pthread_spin_init 'int (pthread_spinlock_t *, int)' extern
| |-ParmVarDecl 0x563e084487e0 <col:31, col:51> col:51 __lock 'pthread_spinlock_t *'
| |-ParmVarDecl 0x563e08448860 <col:59, col:63> col:63 __pshared 'int'
| |-NoThrowAttr 0x563e08448a58 <line:624:22>
| `-NonNullAttr 0x563e08448ae0 <col:63, col:77> 1
|-FunctionDecl 0x563e08448c58 <line:625:1, line:626:79> line:625:12 pthread_spin_destroy 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x563e08448b28 <col:34, col:54> col:54 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x563e08448d00 <line:626:22>
| `-NonNullAttr 0x563e08448d58 <col:63, col:77> 1
|-FunctionDecl 0x563e08448e60 <line:627:1, line:628:68> line:627:12 pthread_spin_lock 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x563e08448da8 <col:31, col:51> col:51 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x563e08448f08 <line:628:22>
| `-NonNullAttr 0x563e08448f60 <col:52, col:66> 1
|-FunctionDecl 0x563e08449060 <line:629:1, line:630:68> line:629:12 pthread_spin_trylock 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x563e08448fa8 <col:34, col:54> col:54 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x563e08449108 <line:630:22>
| `-NonNullAttr 0x563e08449160 <col:52, col:66> 1
|-FunctionDecl 0x563e08449260 <line:631:1, line:632:68> line:631:12 pthread_spin_unlock 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x563e084491a8 <col:33, col:53> col:53 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x563e08449308 <line:632:22>
| `-NonNullAttr 0x563e08449360 <col:52, col:66> 1
|-FunctionDecl 0x563e08449738 <line:633:1, line:636:79> line:633:12 pthread_barrier_init 'int (pthread_barrier_t *restrict, const pthread_barrierattr_t *restrict, unsigned int)' extern
| |-ParmVarDecl 0x563e08449440 <col:34, col:64> col:64 __barrier 'pthread_barrier_t *restrict'
| |-ParmVarDecl 0x563e08449550 <line:634:6, line:635:6> col:6 __attr 'const pthread_barrierattr_t *restrict'
| |-ParmVarDecl 0x563e084495d0 <col:14, col:27> col:27 __count 'unsigned int'
| |-NoThrowAttr 0x563e084497f0 <line:636:22>
| `-NonNullAttr 0x563e08449848 <col:63, col:77> 1
|-FunctionDecl 0x563e084499c8 <line:637:1, line:638:79> line:637:12 pthread_barrier_destroy 'int (pthread_barrier_t *)' extern
| |-ParmVarDecl 0x563e08449898 <col:37, col:56> col:56 __barrier 'pthread_barrier_t *'
| |-NoThrowAttr 0x563e08449a70 <line:638:22>
| `-NonNullAttr 0x563e0844ab00 <col:63, col:77> 1
|-FunctionDecl 0x563e0844ac00 <line:639:1, line:640:68> line:639:12 pthread_barrier_wait 'int (pthread_barrier_t *)' extern
| |-ParmVarDecl 0x563e0844ab48 <col:34, col:53> col:53 __barrier 'pthread_barrier_t *'
| |-NoThrowAttr 0x563e0844aca8 <line:640:22>
| `-NonNullAttr 0x563e0844ad00 <col:52, col:66> 1
|-FunctionDecl 0x563e0844aee8 <line:641:1, line:642:79> line:641:12 pthread_barrierattr_init 'int (pthread_barrierattr_t *)' extern
| |-ParmVarDecl 0x563e0844adb0 <col:38, col:61> col:61 __attr 'pthread_barrierattr_t *'
| |-NoThrowAttr 0x563e0844af90 <line:642:22>
| `-NonNullAttr 0x563e0844afe8 <col:63, col:77> 1
|-FunctionDecl 0x563e0844b0f0 <line:643:1, line:644:79> line:643:12 pthread_barrierattr_destroy 'int (pthread_barrierattr_t *)' extern
| |-ParmVarDecl 0x563e0844b038 <col:41, col:64> col:64 __attr 'pthread_barrierattr_t *'
| |-NoThrowAttr 0x563e0844b198 <line:644:22>
| `-NonNullAttr 0x563e0844b1f0 <col:63, col:77> 1
|-FunctionDecl 0x563e0844b418 <line:645:1, line:648:82> line:645:12 pthread_barrierattr_getpshared 'int (const pthread_barrierattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x563e0844b238 <col:44, line:646:20> col:20 __attr 'const pthread_barrierattr_t *restrict'
| |-ParmVarDecl 0x563e0844b2b8 <line:647:9, col:25> col:25 __pshared 'int *restrict'
| |-NoThrowAttr 0x563e0844b4c8 <line:648:22>
| `-NonNullAttr 0x563e0844b520 <col:63, col:80> 1 2
|-FunctionDecl 0x563e0844b728 <line:649:1, line:651:79> line:649:12 pthread_barrierattr_setpshared 'int (pthread_barrierattr_t *, int)' extern
| |-ParmVarDecl 0x563e0844b568 <col:44, col:67> col:67 __attr 'pthread_barrierattr_t *'
| |-ParmVarDecl 0x563e0844b5e8 <line:650:9, col:13> col:13 __pshared 'int'
| |-NoThrowAttr 0x563e0844b7d8 <line:651:22>
| `-NonNullAttr 0x563e0844b830 <col:63, col:77> 1
|-FunctionDecl 0x563e0844bb98 <line:652:1, line:654:79> line:652:12 pthread_key_create 'int (pthread_key_t *, void (*)(void *))' extern
| |-ParmVarDecl 0x563e0844b910 <col:32, col:47> col:47 __key 'pthread_key_t *'
| |-ParmVarDecl 0x563e0844ba30 <line:653:11, col:43> col:18 __destr_function 'void (*)(void *)'
| |-NoThrowAttr 0x563e0844bc48 <line:654:22>
| `-NonNullAttr 0x563e0844bca0 <col:63, col:77> 1
|-FunctionDecl 0x563e0844bdf8 <line:655:1, col:92> col:12 pthread_key_delete 'int (pthread_key_t)' extern
| |-ParmVarDecl 0x563e0844bce8 <col:32, col:46> col:46 __key 'pthread_key_t':'unsigned int'
| `-NoThrowAttr 0x563e0844bea0 <col:69>
|-FunctionDecl 0x563e0844c018 <line:656:1, col:95> col:14 pthread_getspecific 'void *(pthread_key_t)' extern
| |-ParmVarDecl 0x563e0844bf08 <col:35, col:49> col:49 __key 'pthread_key_t':'unsigned int'
| `-NoThrowAttr 0x563e0844c0c0 <col:72>
|-FunctionDecl 0x563e0844c2f8 <line:657:1, line:658:67> line:657:12 pthread_setspecific 'int (pthread_key_t, const void *)' extern
| |-ParmVarDecl 0x563e0844c128 <col:33, col:47> col:47 __key 'pthread_key_t':'unsigned int'
| |-ParmVarDecl 0x563e0844c1d8 <line:658:5, col:17> col:17 __pointer 'const void *'
| `-NoThrowAttr 0x563e0844c3a8 <col:44>
|-FunctionDecl 0x563e0844c5c8 <line:659:1, line:661:79> line:659:12 pthread_getcpuclockid 'int (pthread_t, __clockid_t *)' extern
| |-ParmVarDecl 0x563e0844c410 <col:35, col:45> col:45 __thread_id 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x563e0844c488 <line:660:7, col:20> col:20 __clock_id '__clockid_t *'
| |-NoThrowAttr 0x563e0844c678 <line:661:22>
| `-NonNullAttr 0x563e0844c6d0 <col:63, col:77> 2
|-FunctionDecl 0x563e0844cb30 <line:662:1, line:664:70> line:662:12 pthread_atfork 'int (void (*)(void), void (*)(void), void (*)(void))' extern
| |-ParmVarDecl 0x563e0844c7b0 <col:28, col:51> col:35 __prepare 'void (*)(void)'
| |-ParmVarDecl 0x563e0844c8c0 <line:663:7, col:29> col:14 __parent 'void (*)(void)'
| |-ParmVarDecl 0x563e0844c9d0 <line:664:7, col:28> col:14 __child 'void (*)(void)'
| `-NoThrowAttr 0x563e0844cbe8 <col:47>
|-FunctionDecl 0x563e0844ccf0 <line:666:1, col:20> col:8 used P0 'void *(void *)'
| `-ParmVarDecl 0x563e0844cc58 <col:11, col:17> col:17 arg 'void *'
|-FunctionDecl 0x563e0844ce48 <line:667:1, col:20> col:8 used P1 'void *(void *)'
| `-ParmVarDecl 0x563e0844cdb0 <col:11, col:17> col:17 arg 'void *'
|-FunctionDecl 0x563e0844cf10 <line:668:1, col:12> col:6 fence 'void ()'
|-FunctionDecl 0x563e0844cfd0 <line:669:1, col:12> col:6 isync 'void ()'
|-FunctionDecl 0x563e0844d090 <line:670:1, col:14> col:6 lwfence 'void ()'
|-VarDecl 0x563e0844d148 <line:671:1, col:5> col:5 used __unbuffered_cnt 'int'
|-VarDecl 0x563e0844d1c8 prev 0x563e0844d148 <line:672:1, col:24> col:5 used __unbuffered_cnt 'int' cinit
| `-IntegerLiteral 0x563e0844d230 <col:24> 'int' 0
|-VarDecl 0x563e0844d268 <line:673:1, col:5> col:5 used __unbuffered_p0_EAX 'int'
|-VarDecl 0x563e0844d2e8 prev 0x563e0844d268 <line:674:1, col:27> col:5 used __unbuffered_p0_EAX 'int' cinit
| `-IntegerLiteral 0x563e0844d350 <col:27> 'int' 0
|-VarDecl 0x563e0844d388 <line:675:1, col:5> col:5 used __unbuffered_p0_EBX 'int'
|-VarDecl 0x563e0844d408 prev 0x563e0844d388 <line:676:1, col:27> col:5 used __unbuffered_p0_EBX 'int' cinit
| `-IntegerLiteral 0x563e0844d470 <col:27> 'int' 0
|-VarDecl 0x563e0844d4a8 <line:677:1, col:5> col:5 used __unbuffered_p1_EAX 'int'
|-VarDecl 0x563e0844d528 prev 0x563e0844d4a8 <line:678:1, col:27> col:5 used __unbuffered_p1_EAX 'int' cinit
| `-IntegerLiteral 0x563e0844d590 <col:27> 'int' 0
|-VarDecl 0x563e0844d5c8 <line:679:1, col:5> col:5 used __unbuffered_p1_EBX 'int'
|-VarDecl 0x563e0844d648 prev 0x563e0844d5c8 <line:680:1, col:27> col:5 used __unbuffered_p1_EBX 'int' cinit
| `-IntegerLiteral 0x563e0844d6b0 <col:27> 'int' 0
|-VarDecl 0x563e0844d6e0 <line:681:1, col:7> col:7 used main$tmp_guard0 '_Bool'
|-VarDecl 0x563e0844d758 <line:682:1, col:7> col:7 used main$tmp_guard1 '_Bool'
|-VarDecl 0x563e0844d7d8 <line:683:1, col:5> col:5 used x 'int'
|-VarDecl 0x563e0844d858 prev 0x563e0844d7d8 <line:684:1, col:9> col:5 used x 'int' cinit
| `-IntegerLiteral 0x563e0844d8c0 <col:9> 'int' 0
|-VarDecl 0x563e0844d8f8 <line:685:1, col:5> col:5 used y 'int'
|-VarDecl 0x563e0844d978 prev 0x563e0844d8f8 <line:686:1, col:9> col:5 used y 'int' cinit
| `-IntegerLiteral 0x563e0844d9e0 <col:9> 'int' 0
|-VarDecl 0x563e0844da10 <line:687:1, col:7> col:7 used y$flush_delayed '_Bool'
|-VarDecl 0x563e0844db00 <line:688:1, col:5> col:5 used y$mem_tmp 'int'
|-VarDecl 0x563e0844db78 <line:689:1, col:7> col:7 used y$r_buff0_thd0 '_Bool'
|-VarDecl 0x563e0844dbf0 <line:690:1, col:7> col:7 used y$r_buff0_thd1 '_Bool'
|-VarDecl 0x563e0844dc68 <line:691:1, col:7> col:7 used y$r_buff0_thd2 '_Bool'
|-VarDecl 0x563e0844dce0 <line:692:1, col:7> col:7 used y$r_buff1_thd0 '_Bool'
|-VarDecl 0x563e0844dd58 <line:693:1, col:7> col:7 used y$r_buff1_thd1 '_Bool'
|-VarDecl 0x563e0844ddd0 <line:694:1, col:7> col:7 used y$r_buff1_thd2 '_Bool'
|-VarDecl 0x563e0844de48 <line:695:1, col:7> col:7 y$read_delayed '_Bool'
|-VarDecl 0x563e0844dec8 <line:696:1, col:6> col:6 y$read_delayed_var 'int *'
|-VarDecl 0x563e0844df48 <line:697:1, col:5> col:5 used y$w_buff0 'int'
|-VarDecl 0x563e0844dfc0 <line:698:1, col:7> col:7 used y$w_buff0_used '_Bool'
|-VarDecl 0x563e0844e040 <line:699:1, col:5> col:5 used y$w_buff1 'int'
|-VarDecl 0x563e0844e0b8 <line:700:1, col:7> col:7 used y$w_buff1_used '_Bool'
|-VarDecl 0x563e0844e138 <line:701:1, col:5> col:5 used z 'int'
|-VarDecl 0x563e0844e1b8 prev 0x563e0844e138 <line:702:1, col:9> col:5 used z 'int' cinit
| `-IntegerLiteral 0x563e0844e220 <col:9> 'int' 0
|-VarDecl 0x563e0844e250 <line:703:1, col:7> col:7 used weak$$choice0 '_Bool'
|-VarDecl 0x563e0844e2c8 <line:704:1, col:7> col:7 used weak$$choice2 '_Bool'
|-FunctionDecl 0x563e0844e3e0 prev 0x563e0844ccf0 <line:705:1, line:738:1> line:705:8 used P0 'void *(void *)'
| |-ParmVarDecl 0x563e0844e348 <col:11, col:17> col:17 arg 'void *'
| `-CompoundStmt 0x563e08451598 <line:706:1, line:738:1>
|   |-CallExpr 0x563e0844e4f8 <line:707:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x563e0844e4e0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x563e0844e488 <col:3> 'void ()' Function 0x563e083f3fa0 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x563e0844e558 <line:708:3, col:7> 'int' '='
|   | |-DeclRefExpr 0x563e0844e518 <col:3> 'int' lvalue Var 0x563e0844e1b8 'z' 'int'
|   | `-IntegerLiteral 0x563e0844e538 <col:7> 'int' 1
|   |-CallExpr 0x563e0844e5b0 <line:709:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x563e0844e598 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x563e0844e578 <col:3> 'void ()' Function 0x563e083f4060 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x563e0844e608 <line:710:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x563e0844e5f0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x563e0844e5d0 <col:3> 'void ()' Function 0x563e083f3fa0 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x563e0844e668 <line:711:3, col:7> 'int' '='
|   | |-DeclRefExpr 0x563e0844e628 <col:3> 'int' lvalue Var 0x563e0844d858 'x' 'int'
|   | `-IntegerLiteral 0x563e0844e648 <col:7> 'int' 1
|   |-CallExpr 0x563e0844e6c0 <line:712:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x563e0844e6a8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x563e0844e688 <col:3> 'void ()' Function 0x563e083f4060 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x563e0844e718 <line:713:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x563e0844e700 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x563e0844e6e0 <col:3> 'void ()' Function 0x563e083f3fa0 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x563e0844e790 <line:714:3, col:25> 'int' '='
|   | |-DeclRefExpr 0x563e0844e738 <col:3> 'int' lvalue Var 0x563e0844d2e8 '__unbuffered_p0_EAX' 'int'
|   | `-ImplicitCastExpr 0x563e0844e778 <col:25> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x563e0844e758 <col:25> 'int' lvalue Var 0x563e0844d858 'x' 'int'
|   |-CallExpr 0x563e0844e7e8 <line:715:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x563e0844e7d0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x563e0844e7b0 <col:3> 'void ()' Function 0x563e083f4060 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x563e0844e840 <line:716:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x563e0844e828 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x563e0844e808 <col:3> 'void ()' Function 0x563e083f3fa0 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x563e0844e908 <line:717:3, col:42> '_Bool' '='
|   | |-DeclRefExpr 0x563e0844e860 <col:3> '_Bool' lvalue Var 0x563e0844e250 'weak$$choice0' '_Bool'
|   | `-CallExpr 0x563e0844e8e8 <col:19, col:42> '_Bool'
|   |   `-ImplicitCastExpr 0x563e0844e8d0 <col:19> '_Bool (*)(void)' <FunctionToPointerDecay>
|   |     `-DeclRefExpr 0x563e0844e880 <col:19> '_Bool (void)' Function 0x563e083f3770 '__VERIFIER_nondet_bool' '_Bool (void)'
|   |-BinaryOperator 0x563e0844e9a0 <line:718:3, col:42> '_Bool' '='
|   | |-DeclRefExpr 0x563e0844e928 <col:3> '_Bool' lvalue Var 0x563e0844e2c8 'weak$$choice2' '_Bool'
|   | `-CallExpr 0x563e0844e980 <col:19, col:42> '_Bool'
|   |   `-ImplicitCastExpr 0x563e0844e968 <col:19> '_Bool (*)(void)' <FunctionToPointerDecay>
|   |     `-DeclRefExpr 0x563e0844e948 <col:19> '_Bool (void)' Function 0x563e083f3770 '__VERIFIER_nondet_bool' '_Bool (void)'
|   |-BinaryOperator 0x563e0844ea18 <line:719:3, col:21> '_Bool' '='
|   | |-DeclRefExpr 0x563e0844e9c0 <col:3> '_Bool' lvalue Var 0x563e0844da10 'y$flush_delayed' '_Bool'
|   | `-ImplicitCastExpr 0x563e0844ea00 <col:21> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x563e0844e9e0 <col:21> '_Bool' lvalue Var 0x563e0844e2c8 'weak$$choice2' '_Bool'
|   |-BinaryOperator 0x563e0844ea90 <line:720:3, col:15> 'int' '='
|   | |-DeclRefExpr 0x563e0844ea38 <col:3> 'int' lvalue Var 0x563e0844db00 'y$mem_tmp' 'int'
|   | `-ImplicitCastExpr 0x563e0844ea78 <col:15> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x563e0844ea58 <col:15> 'int' lvalue Var 0x563e0844d978 'y' 'int'
|   |-BinaryOperator 0x563e0844eee8 <line:721:3, col:162> 'int' '='
|   | |-DeclRefExpr 0x563e0844eab0 <col:3> 'int' lvalue Var 0x563e0844d978 'y' 'int'
|   | `-ConditionalOperator 0x563e0844eeb8 <col:7, col:162> 'int'
|   |   |-BinaryOperator 0x563e0844ece0 <col:7, col:84> 'int' '||'
|   |   | |-BinaryOperator 0x563e0844ec00 <col:7, col:46> 'int' '||'
|   |   | | |-UnaryOperator 0x563e0844eb28 <col:7, col:8> 'int' prefix '!' cannot overflow
|   |   | | | `-ImplicitCastExpr 0x563e0844eb10 <col:8> '_Bool' <LValueToRValue>
|   |   | | |   `-DeclRefExpr 0x563e0844ead0 <col:8> '_Bool' lvalue Var 0x563e0844dfc0 'y$w_buff0_used' '_Bool'
|   |   | | `-BinaryOperator 0x563e0844ebe0 <col:26, col:46> 'int' '&&'
|   |   | |   |-UnaryOperator 0x563e0844eb78 <col:26, col:27> 'int' prefix '!' cannot overflow
|   |   | |   | `-ImplicitCastExpr 0x563e0844eb60 <col:27> '_Bool' <LValueToRValue>
|   |   | |   |   `-DeclRefExpr 0x563e0844eb40 <col:27> '_Bool' lvalue Var 0x563e0844dbf0 'y$r_buff0_thd1' '_Bool'
|   |   | |   `-UnaryOperator 0x563e0844ebc8 <col:45, col:46> 'int' prefix '!' cannot overflow
|   |   | |     `-ImplicitCastExpr 0x563e0844ebb0 <col:46> '_Bool' <LValueToRValue>
|   |   | |       `-DeclRefExpr 0x563e0844eb90 <col:46> '_Bool' lvalue Var 0x563e0844e0b8 'y$w_buff1_used' '_Bool'
|   |   | `-BinaryOperator 0x563e0844ecc0 <col:64, col:84> 'int' '&&'
|   |   |   |-UnaryOperator 0x563e0844ec58 <col:64, col:65> 'int' prefix '!' cannot overflow
|   |   |   | `-ImplicitCastExpr 0x563e0844ec40 <col:65> '_Bool' <LValueToRValue>
|   |   |   |   `-DeclRefExpr 0x563e0844ec20 <col:65> '_Bool' lvalue Var 0x563e0844dbf0 'y$r_buff0_thd1' '_Bool'
|   |   |   `-UnaryOperator 0x563e0844eca8 <col:83, col:84> 'int' prefix '!' cannot overflow
|   |   |     `-ImplicitCastExpr 0x563e0844ec90 <col:84> '_Bool' <LValueToRValue>
|   |   |       `-DeclRefExpr 0x563e0844ec70 <col:84> '_Bool' lvalue Var 0x563e0844dd58 'y$r_buff1_thd1' '_Bool'
|   |   |-ImplicitCastExpr 0x563e0844eea0 <col:101> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x563e0844ed00 <col:101> 'int' lvalue Var 0x563e0844d978 'y' 'int'
|   |   `-ParenExpr 0x563e0844ee80 <col:105, col:162> 'int'
|   |     `-ConditionalOperator 0x563e0844ee50 <col:106, col:153> 'int'
|   |       |-BinaryOperator 0x563e0844edc0 <col:106, col:124> 'int' '&&'
|   |       | |-ImplicitCastExpr 0x563e0844ed78 <col:106> 'int' <IntegralCast>
|   |       | | `-ImplicitCastExpr 0x563e0844ed60 <col:106> '_Bool' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x563e0844ed20 <col:106> '_Bool' lvalue Var 0x563e0844dfc0 'y$w_buff0_used' '_Bool'
|   |       | `-ImplicitCastExpr 0x563e0844eda8 <col:124> 'int' <IntegralCast>
|   |       |   `-ImplicitCastExpr 0x563e0844ed90 <col:124> '_Bool' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x563e0844ed40 <col:124> '_Bool' lvalue Var 0x563e0844dbf0 'y$r_buff0_thd1' '_Bool'
|   |       |-ImplicitCastExpr 0x563e0844ee20 <col:141> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x563e0844ede0 <col:141> 'int' lvalue Var 0x563e0844df48 'y$w_buff0' 'int'
|   |       `-ImplicitCastExpr 0x563e0844ee38 <col:153> 'int' <LValueToRValue>
|   |         `-DeclRefExpr 0x563e0844ee00 <col:153> 'int' lvalue Var 0x563e0844e040 'y$w_buff1' 'int'
|   |-BinaryOperator 0x563e0844f3f8 <line:722:3, col:208> 'int' '='
|   | |-DeclRefExpr 0x563e0844ef08 <col:3> 'int' lvalue Var 0x563e0844df48 'y$w_buff0' 'int'
|   | `-ConditionalOperator 0x563e0844f3c8 <col:15, col:208> 'int'
|   |   |-ImplicitCastExpr 0x563e0844f398 <col:15> 'int' <IntegralCast>
|   |   | `-ImplicitCastExpr 0x563e0844f380 <col:15> '_Bool' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x563e0844ef28 <col:15> '_Bool' lvalue Var 0x563e0844e2c8 'weak$$choice2' '_Bool'
|   |   |-ImplicitCastExpr 0x563e0844f3b0 <col:31> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x563e0844ef48 <col:31> 'int' lvalue Var 0x563e0844df48 'y$w_buff0' 'int'
|   |   `-ParenExpr 0x563e0844f360 <col:43, col:208> 'int'
|   |     `-ConditionalOperator 0x563e0844f330 <col:44, col:207> 'int'
|   |       |-BinaryOperator 0x563e0844f158 <col:44, col:121> 'int' '||'
|   |       | |-BinaryOperator 0x563e0844f078 <col:44, col:83> 'int' '||'
|   |       | | |-UnaryOperator 0x563e0844efa0 <col:44, col:45> 'int' prefix '!' cannot overflow
|   |       | | | `-ImplicitCastExpr 0x563e0844ef88 <col:45> '_Bool' <LValueToRValue>
|   |       | | |   `-DeclRefExpr 0x563e0844ef68 <col:45> '_Bool' lvalue Var 0x563e0844dfc0 'y$w_buff0_used' '_Bool'
|   |       | | `-BinaryOperator 0x563e0844f058 <col:63, col:83> 'int' '&&'
|   |       | |   |-UnaryOperator 0x563e0844eff0 <col:63, col:64> 'int' prefix '!' cannot overflow
|   |       | |   | `-ImplicitCastExpr 0x563e0844efd8 <col:64> '_Bool' <LValueToRValue>
|   |       | |   |   `-DeclRefExpr 0x563e0844efb8 <col:64> '_Bool' lvalue Var 0x563e0844dbf0 'y$r_buff0_thd1' '_Bool'
|   |       | |   `-UnaryOperator 0x563e0844f040 <col:82, col:83> 'int' prefix '!' cannot overflow
|   |       | |     `-ImplicitCastExpr 0x563e0844f028 <col:83> '_Bool' <LValueToRValue>
|   |       | |       `-DeclRefExpr 0x563e0844f008 <col:83> '_Bool' lvalue Var 0x563e0844e0b8 'y$w_buff1_used' '_Bool'
|   |       | `-BinaryOperator 0x563e0844f138 <col:101, col:121> 'int' '&&'
|   |       |   |-UnaryOperator 0x563e0844f0d0 <col:101, col:102> 'int' prefix '!' cannot overflow
|   |       |   | `-ImplicitCastExpr 0x563e0844f0b8 <col:102> '_Bool' <LValueToRValue>
|   |       |   |   `-DeclRefExpr 0x563e0844f098 <col:102> '_Bool' lvalue Var 0x563e0844dbf0 'y$r_buff0_thd1' '_Bool'
|   |       |   `-UnaryOperator 0x563e0844f120 <col:120, col:121> 'int' prefix '!' cannot overflow
|   |       |     `-ImplicitCastExpr 0x563e0844f108 <col:121> '_Bool' <LValueToRValue>
|   |       |       `-DeclRefExpr 0x563e0844f0e8 <col:121> '_Bool' lvalue Var 0x563e0844dd58 'y$r_buff1_thd1' '_Bool'
|   |       |-ImplicitCastExpr 0x563e0844f318 <col:138> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x563e0844f178 <col:138> 'int' lvalue Var 0x563e0844df48 'y$w_buff0' 'int'
|   |       `-ParenExpr 0x563e0844f2f8 <col:150, col:207> 'int'
|   |         `-ConditionalOperator 0x563e0844f2c8 <col:151, col:198> 'int'
|   |           |-BinaryOperator 0x563e0844f238 <col:151, col:169> 'int' '&&'
|   |           | |-ImplicitCastExpr 0x563e0844f1f0 <col:151> 'int' <IntegralCast>
|   |           | | `-ImplicitCastExpr 0x563e0844f1d8 <col:151> '_Bool' <LValueToRValue>
|   |           | |   `-DeclRefExpr 0x563e0844f198 <col:151> '_Bool' lvalue Var 0x563e0844dfc0 'y$w_buff0_used' '_Bool'
|   |           | `-ImplicitCastExpr 0x563e0844f220 <col:169> 'int' <IntegralCast>
|   |           |   `-ImplicitCastExpr 0x563e0844f208 <col:169> '_Bool' <LValueToRValue>
|   |           |     `-DeclRefExpr 0x563e0844f1b8 <col:169> '_Bool' lvalue Var 0x563e0844dbf0 'y$r_buff0_thd1' '_Bool'
|   |           |-ImplicitCastExpr 0x563e0844f298 <col:186> 'int' <LValueToRValue>
|   |           | `-DeclRefExpr 0x563e0844f258 <col:186> 'int' lvalue Var 0x563e0844df48 'y$w_buff0' 'int'
|   |           `-ImplicitCastExpr 0x563e0844f2b0 <col:198> 'int' <LValueToRValue>
|   |             `-DeclRefExpr 0x563e0844f278 <col:198> 'int' lvalue Var 0x563e0844df48 'y$w_buff0' 'int'
|   |-BinaryOperator 0x563e0844f908 <line:723:3, col:208> 'int' '='
|   | |-DeclRefExpr 0x563e0844f418 <col:3> 'int' lvalue Var 0x563e0844e040 'y$w_buff1' 'int'
|   | `-ConditionalOperator 0x563e0844f8d8 <col:15, col:208> 'int'
|   |   |-ImplicitCastExpr 0x563e0844f8a8 <col:15> 'int' <IntegralCast>
|   |   | `-ImplicitCastExpr 0x563e0844f890 <col:15> '_Bool' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x563e0844f438 <col:15> '_Bool' lvalue Var 0x563e0844e2c8 'weak$$choice2' '_Bool'
|   |   |-ImplicitCastExpr 0x563e0844f8c0 <col:31> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x563e0844f458 <col:31> 'int' lvalue Var 0x563e0844e040 'y$w_buff1' 'int'
|   |   `-ParenExpr 0x563e0844f870 <col:43, col:208> 'int'
|   |     `-ConditionalOperator 0x563e0844f840 <col:44, col:207> 'int'
|   |       |-BinaryOperator 0x563e0844f668 <col:44, col:121> 'int' '||'
|   |       | |-BinaryOperator 0x563e0844f588 <col:44, col:83> 'int' '||'
|   |       | | |-UnaryOperator 0x563e0844f4b0 <col:44, col:45> 'int' prefix '!' cannot overflow
|   |       | | | `-ImplicitCastExpr 0x563e0844f498 <col:45> '_Bool' <LValueToRValue>
|   |       | | |   `-DeclRefExpr 0x563e0844f478 <col:45> '_Bool' lvalue Var 0x563e0844dfc0 'y$w_buff0_used' '_Bool'
|   |       | | `-BinaryOperator 0x563e0844f568 <col:63, col:83> 'int' '&&'
|   |       | |   |-UnaryOperator 0x563e0844f500 <col:63, col:64> 'int' prefix '!' cannot overflow
|   |       | |   | `-ImplicitCastExpr 0x563e0844f4e8 <col:64> '_Bool' <LValueToRValue>
|   |       | |   |   `-DeclRefExpr 0x563e0844f4c8 <col:64> '_Bool' lvalue Var 0x563e0844dbf0 'y$r_buff0_thd1' '_Bool'
|   |       | |   `-UnaryOperator 0x563e0844f550 <col:82, col:83> 'int' prefix '!' cannot overflow
|   |       | |     `-ImplicitCastExpr 0x563e0844f538 <col:83> '_Bool' <LValueToRValue>
|   |       | |       `-DeclRefExpr 0x563e0844f518 <col:83> '_Bool' lvalue Var 0x563e0844e0b8 'y$w_buff1_used' '_Bool'
|   |       | `-BinaryOperator 0x563e0844f648 <col:101, col:121> 'int' '&&'
|   |       |   |-UnaryOperator 0x563e0844f5e0 <col:101, col:102> 'int' prefix '!' cannot overflow
|   |       |   | `-ImplicitCastExpr 0x563e0844f5c8 <col:102> '_Bool' <LValueToRValue>
|   |       |   |   `-DeclRefExpr 0x563e0844f5a8 <col:102> '_Bool' lvalue Var 0x563e0844dbf0 'y$r_buff0_thd1' '_Bool'
|   |       |   `-UnaryOperator 0x563e0844f630 <col:120, col:121> 'int' prefix '!' cannot overflow
|   |       |     `-ImplicitCastExpr 0x563e0844f618 <col:121> '_Bool' <LValueToRValue>
|   |       |       `-DeclRefExpr 0x563e0844f5f8 <col:121> '_Bool' lvalue Var 0x563e0844dd58 'y$r_buff1_thd1' '_Bool'
|   |       |-ImplicitCastExpr 0x563e0844f828 <col:138> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x563e0844f688 <col:138> 'int' lvalue Var 0x563e0844e040 'y$w_buff1' 'int'
|   |       `-ParenExpr 0x563e0844f808 <col:150, col:207> 'int'
|   |         `-ConditionalOperator 0x563e0844f7d8 <col:151, col:198> 'int'
|   |           |-BinaryOperator 0x563e0844f748 <col:151, col:169> 'int' '&&'
|   |           | |-ImplicitCastExpr 0x563e0844f700 <col:151> 'int' <IntegralCast>
|   |           | | `-ImplicitCastExpr 0x563e0844f6e8 <col:151> '_Bool' <LValueToRValue>
|   |           | |   `-DeclRefExpr 0x563e0844f6a8 <col:151> '_Bool' lvalue Var 0x563e0844dfc0 'y$w_buff0_used' '_Bool'
|   |           | `-ImplicitCastExpr 0x563e0844f730 <col:169> 'int' <IntegralCast>
|   |           |   `-ImplicitCastExpr 0x563e0844f718 <col:169> '_Bool' <LValueToRValue>
|   |           |     `-DeclRefExpr 0x563e0844f6c8 <col:169> '_Bool' lvalue Var 0x563e0844dbf0 'y$r_buff0_thd1' '_Bool'
|   |           |-ImplicitCastExpr 0x563e0844f7a8 <col:186> 'int' <LValueToRValue>
|   |           | `-DeclRefExpr 0x563e0844f768 <col:186> 'int' lvalue Var 0x563e0844e040 'y$w_buff1' 'int'
|   |           `-ImplicitCastExpr 0x563e0844f7c0 <col:198> 'int' <LValueToRValue>
|   |             `-DeclRefExpr 0x563e0844f788 <col:198> 'int' lvalue Var 0x563e0844e040 'y$w_buff1' 'int'
|   |-BinaryOperator 0x563e0844fec8 <line:724:3, col:227> '_Bool' '='
|   | |-DeclRefExpr 0x563e0844f928 <col:3> '_Bool' lvalue Var 0x563e0844dfc0 'y$w_buff0_used' '_Bool'
|   | `-ImplicitCastExpr 0x563e0844feb0 <col:20, col:227> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x563e0844fe80 <col:20, col:227> 'int'
|   |     |-ImplicitCastExpr 0x563e0844fe38 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x563e0844fe20 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x563e0844f948 <col:20> '_Bool' lvalue Var 0x563e0844e2c8 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x563e0844fe68 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x563e0844fe50 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x563e0844f968 <col:36> '_Bool' lvalue Var 0x563e0844dfc0 'y$w_buff0_used' '_Bool'
|   |     `-ParenExpr 0x563e0844fe00 <col:53, col:227> 'int'
|   |       `-ConditionalOperator 0x563e0844fdd0 <col:54, col:226> 'int'
|   |         |-BinaryOperator 0x563e0844fb90 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x563e0844fa98 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x563e0844f9c0 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x563e0844f9a8 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x563e0844f988 <col:55> '_Bool' lvalue Var 0x563e0844dfc0 'y$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x563e0844fa78 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x563e0844fa10 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x563e0844f9f8 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x563e0844f9d8 <col:74> '_Bool' lvalue Var 0x563e0844dbf0 'y$r_buff0_thd1' '_Bool'
|   |         | |   `-UnaryOperator 0x563e0844fa60 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x563e0844fa48 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x563e0844fa28 <col:93> '_Bool' lvalue Var 0x563e0844e0b8 'y$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x563e0844fb70 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x563e0844faf0 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x563e0844fad8 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x563e0844fab8 <col:112> '_Bool' lvalue Var 0x563e0844dbf0 'y$r_buff0_thd1' '_Bool'
|   |         |   `-UnaryOperator 0x563e0844fb58 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x563e0844fb40 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x563e0844fb20 <col:131> '_Bool' lvalue Var 0x563e0844dd58 'y$r_buff1_thd1' '_Bool'
|   |         |-ImplicitCastExpr 0x563e0844fdb8 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x563e0844fda0 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x563e0844fbb0 <col:148> '_Bool' lvalue Var 0x563e0844dfc0 'y$w_buff0_used' '_Bool'
|   |         `-ParenExpr 0x563e0844fd80 <col:165, col:226> 'int'
|   |           `-ConditionalOperator 0x563e0844fd50 <col:166, col:212> 'int'
|   |             |-BinaryOperator 0x563e0844fc70 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x563e0844fc28 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x563e0844fc10 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x563e0844fbd0 <col:166> '_Bool' lvalue Var 0x563e0844dfc0 'y$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x563e0844fc58 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x563e0844fc40 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x563e0844fbf0 <col:184> '_Bool' lvalue Var 0x563e0844dbf0 'y$r_buff0_thd1' '_Bool'
|   |             |-ImplicitCastExpr 0x563e0844fd08 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x563e0844fcc0 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x563e0844fc90 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x563e0844fd38 <col:212> 'int' <IntegralCast>
|   |               `-ImplicitCastExpr 0x563e0844fd20 <col:212> '_Bool' <LValueToRValue>
|   |                 `-DeclRefExpr 0x563e0844fce8 <col:212> '_Bool' lvalue Var 0x563e0844dfc0 'y$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x563e08450490 <line:725:3, col:221> '_Bool' '='
|   | |-DeclRefExpr 0x563e0844fee8 <col:3> '_Bool' lvalue Var 0x563e0844e0b8 'y$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x563e08450478 <col:20, col:221> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x563e08450448 <col:20, col:221> 'int'
|   |     |-ImplicitCastExpr 0x563e08450400 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x563e084503e8 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x563e0844ff08 <col:20> '_Bool' lvalue Var 0x563e0844e2c8 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x563e08450430 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x563e08450418 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x563e0844ff28 <col:36> '_Bool' lvalue Var 0x563e0844e0b8 'y$w_buff1_used' '_Bool'
|   |     `-ParenExpr 0x563e084503c8 <col:53, col:221> 'int'
|   |       `-ConditionalOperator 0x563e08450398 <col:54, col:220> 'int'
|   |         |-BinaryOperator 0x563e08450138 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x563e08450058 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x563e0844ff80 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x563e0844ff68 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x563e0844ff48 <col:55> '_Bool' lvalue Var 0x563e0844dfc0 'y$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x563e08450038 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x563e0844ffd0 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x563e0844ffb8 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x563e0844ff98 <col:74> '_Bool' lvalue Var 0x563e0844dbf0 'y$r_buff0_thd1' '_Bool'
|   |         | |   `-UnaryOperator 0x563e08450020 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x563e08450008 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x563e0844ffe8 <col:93> '_Bool' lvalue Var 0x563e0844e0b8 'y$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x563e08450118 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x563e084500b0 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x563e08450098 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x563e08450078 <col:112> '_Bool' lvalue Var 0x563e0844dbf0 'y$r_buff0_thd1' '_Bool'
|   |         |   `-UnaryOperator 0x563e08450100 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x563e084500e8 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x563e084500c8 <col:131> '_Bool' lvalue Var 0x563e0844dd58 'y$r_buff1_thd1' '_Bool'
|   |         |-ImplicitCastExpr 0x563e08450380 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x563e08450368 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x563e08450158 <col:148> '_Bool' lvalue Var 0x563e0844e0b8 'y$w_buff1_used' '_Bool'
|   |         `-ParenExpr 0x563e08450348 <col:165, col:220> 'int'
|   |           `-ConditionalOperator 0x563e08450318 <col:166, col:219> 'int'
|   |             |-BinaryOperator 0x563e08450218 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x563e084501d0 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x563e084501b8 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x563e08450178 <col:166> '_Bool' lvalue Var 0x563e0844dfc0 'y$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x563e08450200 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x563e084501e8 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x563e08450198 <col:184> '_Bool' lvalue Var 0x563e0844dbf0 'y$r_buff0_thd1' '_Bool'
|   |             |-ImplicitCastExpr 0x563e084502e8 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x563e08450268 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x563e08450238 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x563e08450300 <col:212, col:219> 'int' <IntegralCast>
|   |               `-CStyleCastExpr 0x563e084502c0 <col:212, col:219> '_Bool' <IntegralToBoolean>
|   |                 `-IntegerLiteral 0x563e08450290 <col:219> 'int' 0
|   |-BinaryOperator 0x563e08450a38 <line:726:3, col:227> '_Bool' '='
|   | |-DeclRefExpr 0x563e084504b0 <col:3> '_Bool' lvalue Var 0x563e0844dbf0 'y$r_buff0_thd1' '_Bool'
|   | `-ImplicitCastExpr 0x563e08450a20 <col:20, col:227> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x563e084509f0 <col:20, col:227> 'int'
|   |     |-ImplicitCastExpr 0x563e084509a8 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x563e08450990 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x563e084504d0 <col:20> '_Bool' lvalue Var 0x563e0844e2c8 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x563e084509d8 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x563e084509c0 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x563e084504f0 <col:36> '_Bool' lvalue Var 0x563e0844dbf0 'y$r_buff0_thd1' '_Bool'
|   |     `-ParenExpr 0x563e08450970 <col:53, col:227> 'int'
|   |       `-ConditionalOperator 0x563e08450940 <col:54, col:226> 'int'
|   |         |-BinaryOperator 0x563e08450700 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x563e08450620 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x563e08450548 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x563e08450530 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x563e08450510 <col:55> '_Bool' lvalue Var 0x563e0844dfc0 'y$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x563e08450600 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x563e08450598 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x563e08450580 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x563e08450560 <col:74> '_Bool' lvalue Var 0x563e0844dbf0 'y$r_buff0_thd1' '_Bool'
|   |         | |   `-UnaryOperator 0x563e084505e8 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x563e084505d0 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x563e084505b0 <col:93> '_Bool' lvalue Var 0x563e0844e0b8 'y$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x563e084506e0 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x563e08450678 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x563e08450660 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x563e08450640 <col:112> '_Bool' lvalue Var 0x563e0844dbf0 'y$r_buff0_thd1' '_Bool'
|   |         |   `-UnaryOperator 0x563e084506c8 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x563e084506b0 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x563e08450690 <col:131> '_Bool' lvalue Var 0x563e0844dd58 'y$r_buff1_thd1' '_Bool'
|   |         |-ImplicitCastExpr 0x563e08450928 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x563e08450910 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x563e08450720 <col:148> '_Bool' lvalue Var 0x563e0844dbf0 'y$r_buff0_thd1' '_Bool'
|   |         `-ParenExpr 0x563e084508f0 <col:165, col:226> 'int'
|   |           `-ConditionalOperator 0x563e084508c0 <col:166, col:212> 'int'
|   |             |-BinaryOperator 0x563e084507e0 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x563e08450798 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x563e08450780 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x563e08450740 <col:166> '_Bool' lvalue Var 0x563e0844dfc0 'y$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x563e084507c8 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x563e084507b0 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x563e08450760 <col:184> '_Bool' lvalue Var 0x563e0844dbf0 'y$r_buff0_thd1' '_Bool'
|   |             |-ImplicitCastExpr 0x563e08450878 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x563e08450830 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x563e08450800 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x563e084508a8 <col:212> 'int' <IntegralCast>
|   |               `-ImplicitCastExpr 0x563e08450890 <col:212> '_Bool' <LValueToRValue>
|   |                 `-DeclRefExpr 0x563e08450858 <col:212> '_Bool' lvalue Var 0x563e0844dbf0 'y$r_buff0_thd1' '_Bool'
|   |-BinaryOperator 0x563e08451028 <line:727:3, col:221> '_Bool' '='
|   | |-DeclRefExpr 0x563e08450a58 <col:3> '_Bool' lvalue Var 0x563e0844dd58 'y$r_buff1_thd1' '_Bool'
|   | `-ImplicitCastExpr 0x563e08451010 <col:20, col:221> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x563e08450fe0 <col:20, col:221> 'int'
|   |     |-ImplicitCastExpr 0x563e08450f98 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x563e08450f80 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x563e08450a78 <col:20> '_Bool' lvalue Var 0x563e0844e2c8 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x563e08450fc8 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x563e08450fb0 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x563e08450a98 <col:36> '_Bool' lvalue Var 0x563e0844dd58 'y$r_buff1_thd1' '_Bool'
|   |     `-ParenExpr 0x563e08450f60 <col:53, col:221> 'int'
|   |       `-ConditionalOperator 0x563e08450f30 <col:54, col:220> 'int'
|   |         |-BinaryOperator 0x563e08450cd0 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x563e08450bf0 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x563e08450af0 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x563e08450ad8 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x563e08450ab8 <col:55> '_Bool' lvalue Var 0x563e0844dfc0 'y$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x563e08450bd0 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x563e08450b68 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x563e08450b50 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x563e08450b30 <col:74> '_Bool' lvalue Var 0x563e0844dbf0 'y$r_buff0_thd1' '_Bool'
|   |         | |   `-UnaryOperator 0x563e08450bb8 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x563e08450ba0 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x563e08450b80 <col:93> '_Bool' lvalue Var 0x563e0844e0b8 'y$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x563e08450cb0 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x563e08450c48 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x563e08450c30 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x563e08450c10 <col:112> '_Bool' lvalue Var 0x563e0844dbf0 'y$r_buff0_thd1' '_Bool'
|   |         |   `-UnaryOperator 0x563e08450c98 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x563e08450c80 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x563e08450c60 <col:131> '_Bool' lvalue Var 0x563e0844dd58 'y$r_buff1_thd1' '_Bool'
|   |         |-ImplicitCastExpr 0x563e08450f18 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x563e08450f00 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x563e08450cf0 <col:148> '_Bool' lvalue Var 0x563e0844dd58 'y$r_buff1_thd1' '_Bool'
|   |         `-ParenExpr 0x563e08450ee0 <col:165, col:220> 'int'
|   |           `-ConditionalOperator 0x563e08450eb0 <col:166, col:219> 'int'
|   |             |-BinaryOperator 0x563e08450db0 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x563e08450d68 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x563e08450d50 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x563e08450d10 <col:166> '_Bool' lvalue Var 0x563e0844dfc0 'y$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x563e08450d98 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x563e08450d80 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x563e08450d30 <col:184> '_Bool' lvalue Var 0x563e0844dbf0 'y$r_buff0_thd1' '_Bool'
|   |             |-ImplicitCastExpr 0x563e08450e80 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x563e08450e00 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x563e08450dd0 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x563e08450e98 <col:212, col:219> 'int' <IntegralCast>
|   |               `-CStyleCastExpr 0x563e08450e58 <col:212, col:219> '_Bool' <IntegralToBoolean>
|   |                 `-IntegerLiteral 0x563e08450e28 <col:219> 'int' 0
|   |-BinaryOperator 0x563e084510a0 <line:728:3, col:25> 'int' '='
|   | |-DeclRefExpr 0x563e08451048 <col:3> 'int' lvalue Var 0x563e0844d408 '__unbuffered_p0_EBX' 'int'
|   | `-ImplicitCastExpr 0x563e08451088 <col:25> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x563e08451068 <col:25> 'int' lvalue Var 0x563e0844d978 'y' 'int'
|   |-BinaryOperator 0x563e084511d0 <line:729:3, col:37> 'int' '='
|   | |-DeclRefExpr 0x563e084510c0 <col:3> 'int' lvalue Var 0x563e0844d978 'y' 'int'
|   | `-ConditionalOperator 0x563e084511a0 <col:7, col:37> 'int'
|   |   |-ImplicitCastExpr 0x563e08451158 <col:7> 'int' <IntegralCast>
|   |   | `-ImplicitCastExpr 0x563e08451140 <col:7> '_Bool' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x563e084510e0 <col:7> '_Bool' lvalue Var 0x563e0844da10 'y$flush_delayed' '_Bool'
|   |   |-ImplicitCastExpr 0x563e08451170 <col:25> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x563e08451100 <col:25> 'int' lvalue Var 0x563e0844db00 'y$mem_tmp' 'int'
|   |   `-ImplicitCastExpr 0x563e08451188 <col:37> 'int' <LValueToRValue>
|   |     `-DeclRefExpr 0x563e08451120 <col:37> 'int' lvalue Var 0x563e0844d978 'y' 'int'
|   |-BinaryOperator 0x563e08451268 <line:730:3, col:28> '_Bool' '='
|   | |-DeclRefExpr 0x563e084511f0 <col:3> '_Bool' lvalue Var 0x563e0844da10 'y$flush_delayed' '_Bool'
|   | `-CStyleCastExpr 0x563e08451240 <col:21, col:28> '_Bool' <IntegralToBoolean>
|   |   `-IntegerLiteral 0x563e08451210 <col:28> 'int' 0
|   |-CallExpr 0x563e084512c0 <line:731:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x563e084512a8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x563e08451288 <col:3> 'void ()' Function 0x563e083f4060 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x563e08451318 <line:732:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x563e08451300 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x563e084512e0 <col:3> 'void ()' Function 0x563e083f3fa0 '__VERIFIER_atomic_begin' 'void ()'
|   |-CallExpr 0x563e08451370 <line:733:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x563e08451358 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x563e08451338 <col:3> 'void ()' Function 0x563e083f4060 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x563e084513c8 <line:734:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x563e084513b0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x563e08451390 <col:3> 'void ()' Function 0x563e083f3fa0 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x563e08451480 <line:735:3, col:41> 'int' '='
|   | |-DeclRefExpr 0x563e084513e8 <col:3> 'int' lvalue Var 0x563e0844d1c8 '__unbuffered_cnt' 'int'
|   | `-BinaryOperator 0x563e08451460 <col:22, col:41> 'int' '+'
|   |   |-ImplicitCastExpr 0x563e08451448 <col:22> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x563e08451408 <col:22> 'int' lvalue Var 0x563e0844d1c8 '__unbuffered_cnt' 'int'
|   |   `-IntegerLiteral 0x563e08451428 <col:41> 'int' 1
|   |-CallExpr 0x563e084514d8 <line:736:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x563e084514c0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x563e084514a0 <col:3> 'void ()' Function 0x563e083f4060 '__VERIFIER_atomic_end' 'void ()'
|   `-ReturnStmt 0x563e08451588 <line:737:3, col:36>
|     `-CallExpr 0x563e08451568 <col:10, col:36> 'void *'
|       `-ImplicitCastExpr 0x563e08451550 <col:10> 'void *(*)(void)' <FunctionToPointerDecay>
|         `-DeclRefExpr 0x563e084514f8 <col:10> 'void *(void)' Function 0x563e083f3ab8 '__VERIFIER_nondet_pointer' 'void *(void)'
|-FunctionDecl 0x563e08451750 prev 0x563e0844ce48 <line:739:1, line:782:1> line:739:8 used P1 'void *(void *)'
| |-ParmVarDecl 0x563e084516b8 <col:11, col:17> col:17 arg 'void *'
| `-CompoundStmt 0x563e08455940 <line:740:1, line:782:1>
|   |-CallExpr 0x563e08451830 <line:741:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x563e08451818 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x563e084517f8 <col:3> 'void ()' Function 0x563e083f3fa0 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x563e084518a8 <line:742:3, col:15> 'int' '='
|   | |-DeclRefExpr 0x563e08451850 <col:3> 'int' lvalue Var 0x563e0844e040 'y$w_buff1' 'int'
|   | `-ImplicitCastExpr 0x563e08451890 <col:15> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x563e08451870 <col:15> 'int' lvalue Var 0x563e0844df48 'y$w_buff0' 'int'
|   |-BinaryOperator 0x563e08451908 <line:743:3, col:15> 'int' '='
|   | |-DeclRefExpr 0x563e084518c8 <col:3> 'int' lvalue Var 0x563e0844df48 'y$w_buff0' 'int'
|   | `-IntegerLiteral 0x563e084518e8 <col:15> 'int' 1
|   |-BinaryOperator 0x563e08451980 <line:744:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x563e08451928 <col:3> '_Bool' lvalue Var 0x563e0844e0b8 'y$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x563e08451968 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x563e08451948 <col:20> '_Bool' lvalue Var 0x563e0844dfc0 'y$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x563e08451a18 <line:745:3, col:27> '_Bool' '='
|   | |-DeclRefExpr 0x563e084519a0 <col:3> '_Bool' lvalue Var 0x563e0844dfc0 'y$w_buff0_used' '_Bool'
|   | `-CStyleCastExpr 0x563e084519f0 <col:20, col:27> '_Bool' <IntegralToBoolean>
|   |   `-IntegerLiteral 0x563e084519c0 <col:27> 'int' 1
|   |-CallExpr 0x563e08451bc8 <line:746:3, col:56> 'void'
|   | |-ImplicitCastExpr 0x563e08451bb0 <col:3> 'void (*)(int)' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x563e08451a38 <col:3> 'void (int)' Function 0x563e083f3d28 '__VERIFIER_assert' 'void (int)'
|   | `-UnaryOperator 0x563e08451b60 <col:21, col:55> 'int' prefix '!' cannot overflow
|   |   `-ParenExpr 0x563e08451b40 <col:22, col:55> 'int'
|   |     `-BinaryOperator 0x563e08451af8 <col:23, col:41> 'int' '&&'
|   |       |-ImplicitCastExpr 0x563e08451ab0 <col:23> 'int' <IntegralCast>
|   |       | `-ImplicitCastExpr 0x563e08451a98 <col:23> '_Bool' <LValueToRValue>
|   |       |   `-DeclRefExpr 0x563e08451a58 <col:23> '_Bool' lvalue Var 0x563e0844e0b8 'y$w_buff1_used' '_Bool'
|   |       `-ImplicitCastExpr 0x563e08451ae0 <col:41> 'int' <IntegralCast>
|   |         `-ImplicitCastExpr 0x563e08451ac8 <col:41> '_Bool' <LValueToRValue>
|   |           `-DeclRefExpr 0x563e08451a78 <col:41> '_Bool' lvalue Var 0x563e0844dfc0 'y$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x563e08451c48 <line:747:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x563e08451bf0 <col:3> '_Bool' lvalue Var 0x563e0844dce0 'y$r_buff1_thd0' '_Bool'
|   | `-ImplicitCastExpr 0x563e08451c30 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x563e08451c10 <col:20> '_Bool' lvalue Var 0x563e0844db78 'y$r_buff0_thd0' '_Bool'
|   |-BinaryOperator 0x563e08451cc0 <line:748:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x563e08451c68 <col:3> '_Bool' lvalue Var 0x563e0844dd58 'y$r_buff1_thd1' '_Bool'
|   | `-ImplicitCastExpr 0x563e08451ca8 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x563e08451c88 <col:20> '_Bool' lvalue Var 0x563e0844dbf0 'y$r_buff0_thd1' '_Bool'
|   |-BinaryOperator 0x563e08451d38 <line:749:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x563e08451ce0 <col:3> '_Bool' lvalue Var 0x563e0844ddd0 'y$r_buff1_thd2' '_Bool'
|   | `-ImplicitCastExpr 0x563e08451d20 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x563e08451d00 <col:20> '_Bool' lvalue Var 0x563e0844dc68 'y$r_buff0_thd2' '_Bool'
|   |-BinaryOperator 0x563e08451dd0 <line:750:3, col:27> '_Bool' '='
|   | |-DeclRefExpr 0x563e08451d58 <col:3> '_Bool' lvalue Var 0x563e0844dc68 'y$r_buff0_thd2' '_Bool'
|   | `-CStyleCastExpr 0x563e08451da8 <col:20, col:27> '_Bool' <IntegralToBoolean>
|   |   `-IntegerLiteral 0x563e08451d78 <col:27> 'int' 1
|   |-CallExpr 0x563e08451e28 <line:751:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x563e08451e10 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x563e08451df0 <col:3> 'void ()' Function 0x563e083f4060 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x563e08451e80 <line:752:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x563e08451e68 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x563e08451e48 <col:3> 'void ()' Function 0x563e083f3fa0 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x563e08451f18 <line:753:3, col:42> '_Bool' '='
|   | |-DeclRefExpr 0x563e08451ea0 <col:3> '_Bool' lvalue Var 0x563e0844e250 'weak$$choice0' '_Bool'
|   | `-CallExpr 0x563e08451ef8 <col:19, col:42> '_Bool'
|   |   `-ImplicitCastExpr 0x563e08451ee0 <col:19> '_Bool (*)(void)' <FunctionToPointerDecay>
|   |     `-DeclRefExpr 0x563e08451ec0 <col:19> '_Bool (void)' Function 0x563e083f3770 '__VERIFIER_nondet_bool' '_Bool (void)'
|   |-BinaryOperator 0x563e08451fb0 <line:754:3, col:42> '_Bool' '='
|   | |-DeclRefExpr 0x563e08451f38 <col:3> '_Bool' lvalue Var 0x563e0844e2c8 'weak$$choice2' '_Bool'
|   | `-CallExpr 0x563e08451f90 <col:19, col:42> '_Bool'
|   |   `-ImplicitCastExpr 0x563e08451f78 <col:19> '_Bool (*)(void)' <FunctionToPointerDecay>
|   |     `-DeclRefExpr 0x563e08451f58 <col:19> '_Bool (void)' Function 0x563e083f3770 '__VERIFIER_nondet_bool' '_Bool (void)'
|   |-BinaryOperator 0x563e08452028 <line:755:3, col:21> '_Bool' '='
|   | |-DeclRefExpr 0x563e08451fd0 <col:3> '_Bool' lvalue Var 0x563e0844da10 'y$flush_delayed' '_Bool'
|   | `-ImplicitCastExpr 0x563e08452010 <col:21> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x563e08451ff0 <col:21> '_Bool' lvalue Var 0x563e0844e2c8 'weak$$choice2' '_Bool'
|   |-BinaryOperator 0x563e084520a0 <line:756:3, col:15> 'int' '='
|   | |-DeclRefExpr 0x563e08452048 <col:3> 'int' lvalue Var 0x563e0844db00 'y$mem_tmp' 'int'
|   | `-ImplicitCastExpr 0x563e08452088 <col:15> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x563e08452068 <col:15> 'int' lvalue Var 0x563e0844d978 'y' 'int'
|   |-BinaryOperator 0x563e084524d8 <line:757:3, col:162> 'int' '='
|   | |-DeclRefExpr 0x563e084520c0 <col:3> 'int' lvalue Var 0x563e0844d978 'y' 'int'
|   | `-ConditionalOperator 0x563e084524a8 <col:7, col:162> 'int'
|   |   |-BinaryOperator 0x563e084522d0 <col:7, col:84> 'int' '||'
|   |   | |-BinaryOperator 0x563e084521f0 <col:7, col:46> 'int' '||'
|   |   | | |-UnaryOperator 0x563e08452118 <col:7, col:8> 'int' prefix '!' cannot overflow
|   |   | | | `-ImplicitCastExpr 0x563e08452100 <col:8> '_Bool' <LValueToRValue>
|   |   | | |   `-DeclRefExpr 0x563e084520e0 <col:8> '_Bool' lvalue Var 0x563e0844dfc0 'y$w_buff0_used' '_Bool'
|   |   | | `-BinaryOperator 0x563e084521d0 <col:26, col:46> 'int' '&&'
|   |   | |   |-UnaryOperator 0x563e08452168 <col:26, col:27> 'int' prefix '!' cannot overflow
|   |   | |   | `-ImplicitCastExpr 0x563e08452150 <col:27> '_Bool' <LValueToRValue>
|   |   | |   |   `-DeclRefExpr 0x563e08452130 <col:27> '_Bool' lvalue Var 0x563e0844dc68 'y$r_buff0_thd2' '_Bool'
|   |   | |   `-UnaryOperator 0x563e084521b8 <col:45, col:46> 'int' prefix '!' cannot overflow
|   |   | |     `-ImplicitCastExpr 0x563e084521a0 <col:46> '_Bool' <LValueToRValue>
|   |   | |       `-DeclRefExpr 0x563e08452180 <col:46> '_Bool' lvalue Var 0x563e0844e0b8 'y$w_buff1_used' '_Bool'
|   |   | `-BinaryOperator 0x563e084522b0 <col:64, col:84> 'int' '&&'
|   |   |   |-UnaryOperator 0x563e08452248 <col:64, col:65> 'int' prefix '!' cannot overflow
|   |   |   | `-ImplicitCastExpr 0x563e08452230 <col:65> '_Bool' <LValueToRValue>
|   |   |   |   `-DeclRefExpr 0x563e08452210 <col:65> '_Bool' lvalue Var 0x563e0844dc68 'y$r_buff0_thd2' '_Bool'
|   |   |   `-UnaryOperator 0x563e08452298 <col:83, col:84> 'int' prefix '!' cannot overflow
|   |   |     `-ImplicitCastExpr 0x563e08452280 <col:84> '_Bool' <LValueToRValue>
|   |   |       `-DeclRefExpr 0x563e08452260 <col:84> '_Bool' lvalue Var 0x563e0844ddd0 'y$r_buff1_thd2' '_Bool'
|   |   |-ImplicitCastExpr 0x563e08452490 <col:101> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x563e084522f0 <col:101> 'int' lvalue Var 0x563e0844d978 'y' 'int'
|   |   `-ParenExpr 0x563e08452470 <col:105, col:162> 'int'
|   |     `-ConditionalOperator 0x563e08452440 <col:106, col:153> 'int'
|   |       |-BinaryOperator 0x563e084523b0 <col:106, col:124> 'int' '&&'
|   |       | |-ImplicitCastExpr 0x563e08452368 <col:106> 'int' <IntegralCast>
|   |       | | `-ImplicitCastExpr 0x563e08452350 <col:106> '_Bool' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x563e08452310 <col:106> '_Bool' lvalue Var 0x563e0844dfc0 'y$w_buff0_used' '_Bool'
|   |       | `-ImplicitCastExpr 0x563e08452398 <col:124> 'int' <IntegralCast>
|   |       |   `-ImplicitCastExpr 0x563e08452380 <col:124> '_Bool' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x563e08452330 <col:124> '_Bool' lvalue Var 0x563e0844dc68 'y$r_buff0_thd2' '_Bool'
|   |       |-ImplicitCastExpr 0x563e08452410 <col:141> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x563e084523d0 <col:141> 'int' lvalue Var 0x563e0844df48 'y$w_buff0' 'int'
|   |       `-ImplicitCastExpr 0x563e08452428 <col:153> 'int' <LValueToRValue>
|   |         `-DeclRefExpr 0x563e084523f0 <col:153> 'int' lvalue Var 0x563e0844e040 'y$w_buff1' 'int'
|   |-BinaryOperator 0x563e084529e8 <line:758:3, col:208> 'int' '='
|   | |-DeclRefExpr 0x563e084524f8 <col:3> 'int' lvalue Var 0x563e0844df48 'y$w_buff0' 'int'
|   | `-ConditionalOperator 0x563e084529b8 <col:15, col:208> 'int'
|   |   |-ImplicitCastExpr 0x563e08452988 <col:15> 'int' <IntegralCast>
|   |   | `-ImplicitCastExpr 0x563e08452970 <col:15> '_Bool' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x563e08452518 <col:15> '_Bool' lvalue Var 0x563e0844e2c8 'weak$$choice2' '_Bool'
|   |   |-ImplicitCastExpr 0x563e084529a0 <col:31> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x563e08452538 <col:31> 'int' lvalue Var 0x563e0844df48 'y$w_buff0' 'int'
|   |   `-ParenExpr 0x563e08452950 <col:43, col:208> 'int'
|   |     `-ConditionalOperator 0x563e08452920 <col:44, col:207> 'int'
|   |       |-BinaryOperator 0x563e08452748 <col:44, col:121> 'int' '||'
|   |       | |-BinaryOperator 0x563e08452668 <col:44, col:83> 'int' '||'
|   |       | | |-UnaryOperator 0x563e08452590 <col:44, col:45> 'int' prefix '!' cannot overflow
|   |       | | | `-ImplicitCastExpr 0x563e08452578 <col:45> '_Bool' <LValueToRValue>
|   |       | | |   `-DeclRefExpr 0x563e08452558 <col:45> '_Bool' lvalue Var 0x563e0844dfc0 'y$w_buff0_used' '_Bool'
|   |       | | `-BinaryOperator 0x563e08452648 <col:63, col:83> 'int' '&&'
|   |       | |   |-UnaryOperator 0x563e084525e0 <col:63, col:64> 'int' prefix '!' cannot overflow
|   |       | |   | `-ImplicitCastExpr 0x563e084525c8 <col:64> '_Bool' <LValueToRValue>
|   |       | |   |   `-DeclRefExpr 0x563e084525a8 <col:64> '_Bool' lvalue Var 0x563e0844dc68 'y$r_buff0_thd2' '_Bool'
|   |       | |   `-UnaryOperator 0x563e08452630 <col:82, col:83> 'int' prefix '!' cannot overflow
|   |       | |     `-ImplicitCastExpr 0x563e08452618 <col:83> '_Bool' <LValueToRValue>
|   |       | |       `-DeclRefExpr 0x563e084525f8 <col:83> '_Bool' lvalue Var 0x563e0844e0b8 'y$w_buff1_used' '_Bool'
|   |       | `-BinaryOperator 0x563e08452728 <col:101, col:121> 'int' '&&'
|   |       |   |-UnaryOperator 0x563e084526c0 <col:101, col:102> 'int' prefix '!' cannot overflow
|   |       |   | `-ImplicitCastExpr 0x563e084526a8 <col:102> '_Bool' <LValueToRValue>
|   |       |   |   `-DeclRefExpr 0x563e08452688 <col:102> '_Bool' lvalue Var 0x563e0844dc68 'y$r_buff0_thd2' '_Bool'
|   |       |   `-UnaryOperator 0x563e08452710 <col:120, col:121> 'int' prefix '!' cannot overflow
|   |       |     `-ImplicitCastExpr 0x563e084526f8 <col:121> '_Bool' <LValueToRValue>
|   |       |       `-DeclRefExpr 0x563e084526d8 <col:121> '_Bool' lvalue Var 0x563e0844ddd0 'y$r_buff1_thd2' '_Bool'
|   |       |-ImplicitCastExpr 0x563e08452908 <col:138> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x563e08452768 <col:138> 'int' lvalue Var 0x563e0844df48 'y$w_buff0' 'int'
|   |       `-ParenExpr 0x563e084528e8 <col:150, col:207> 'int'
|   |         `-ConditionalOperator 0x563e084528b8 <col:151, col:198> 'int'
|   |           |-BinaryOperator 0x563e08452828 <col:151, col:169> 'int' '&&'
|   |           | |-ImplicitCastExpr 0x563e084527e0 <col:151> 'int' <IntegralCast>
|   |           | | `-ImplicitCastExpr 0x563e084527c8 <col:151> '_Bool' <LValueToRValue>
|   |           | |   `-DeclRefExpr 0x563e08452788 <col:151> '_Bool' lvalue Var 0x563e0844dfc0 'y$w_buff0_used' '_Bool'
|   |           | `-ImplicitCastExpr 0x563e08452810 <col:169> 'int' <IntegralCast>
|   |           |   `-ImplicitCastExpr 0x563e084527f8 <col:169> '_Bool' <LValueToRValue>
|   |           |     `-DeclRefExpr 0x563e084527a8 <col:169> '_Bool' lvalue Var 0x563e0844dc68 'y$r_buff0_thd2' '_Bool'
|   |           |-ImplicitCastExpr 0x563e08452888 <col:186> 'int' <LValueToRValue>
|   |           | `-DeclRefExpr 0x563e08452848 <col:186> 'int' lvalue Var 0x563e0844df48 'y$w_buff0' 'int'
|   |           `-ImplicitCastExpr 0x563e084528a0 <col:198> 'int' <LValueToRValue>
|   |             `-DeclRefExpr 0x563e08452868 <col:198> 'int' lvalue Var 0x563e0844df48 'y$w_buff0' 'int'
|   |-BinaryOperator 0x563e08452f08 <line:759:3, col:208> 'int' '='
|   | |-DeclRefExpr 0x563e08452a08 <col:3> 'int' lvalue Var 0x563e0844e040 'y$w_buff1' 'int'
|   | `-ConditionalOperator 0x563e08452ed8 <col:15, col:208> 'int'
|   |   |-ImplicitCastExpr 0x563e08452ea8 <col:15> 'int' <IntegralCast>
|   |   | `-ImplicitCastExpr 0x563e08452e90 <col:15> '_Bool' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x563e08452a28 <col:15> '_Bool' lvalue Var 0x563e0844e2c8 'weak$$choice2' '_Bool'
|   |   |-ImplicitCastExpr 0x563e08452ec0 <col:31> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x563e08452a48 <col:31> 'int' lvalue Var 0x563e0844e040 'y$w_buff1' 'int'
|   |   `-ParenExpr 0x563e08452e70 <col:43, col:208> 'int'
|   |     `-ConditionalOperator 0x563e08452e40 <col:44, col:207> 'int'
|   |       |-BinaryOperator 0x563e08452c68 <col:44, col:121> 'int' '||'
|   |       | |-BinaryOperator 0x563e08452b88 <col:44, col:83> 'int' '||'
|   |       | | |-UnaryOperator 0x563e08452aa0 <col:44, col:45> 'int' prefix '!' cannot overflow
|   |       | | | `-ImplicitCastExpr 0x563e08452a88 <col:45> '_Bool' <LValueToRValue>
|   |       | | |   `-DeclRefExpr 0x563e08452a68 <col:45> '_Bool' lvalue Var 0x563e0844dfc0 'y$w_buff0_used' '_Bool'
|   |       | | `-BinaryOperator 0x563e08452b68 <col:63, col:83> 'int' '&&'
|   |       | |   |-UnaryOperator 0x563e08452af0 <col:63, col:64> 'int' prefix '!' cannot overflow
|   |       | |   | `-ImplicitCastExpr 0x563e08452ad8 <col:64> '_Bool' <LValueToRValue>
|   |       | |   |   `-DeclRefExpr 0x563e08452ab8 <col:64> '_Bool' lvalue Var 0x563e0844dc68 'y$r_buff0_thd2' '_Bool'
|   |       | |   `-UnaryOperator 0x563e08452b50 <col:82, col:83> 'int' prefix '!' cannot overflow
|   |       | |     `-ImplicitCastExpr 0x563e08452b28 <col:83> '_Bool' <LValueToRValue>
|   |       | |       `-DeclRefExpr 0x563e08452b08 <col:83> '_Bool' lvalue Var 0x563e0844e0b8 'y$w_buff1_used' '_Bool'
|   |       | `-BinaryOperator 0x563e08452c48 <col:101, col:121> 'int' '&&'
|   |       |   |-UnaryOperator 0x563e08452be0 <col:101, col:102> 'int' prefix '!' cannot overflow
|   |       |   | `-ImplicitCastExpr 0x563e08452bc8 <col:102> '_Bool' <LValueToRValue>
|   |       |   |   `-DeclRefExpr 0x563e08452ba8 <col:102> '_Bool' lvalue Var 0x563e0844dc68 'y$r_buff0_thd2' '_Bool'
|   |       |   `-UnaryOperator 0x563e08452c30 <col:120, col:121> 'int' prefix '!' cannot overflow
|   |       |     `-ImplicitCastExpr 0x563e08452c18 <col:121> '_Bool' <LValueToRValue>
|   |       |       `-DeclRefExpr 0x563e08452bf8 <col:121> '_Bool' lvalue Var 0x563e0844ddd0 'y$r_buff1_thd2' '_Bool'
|   |       |-ImplicitCastExpr 0x563e08452e28 <col:138> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x563e08452c88 <col:138> 'int' lvalue Var 0x563e0844e040 'y$w_buff1' 'int'
|   |       `-ParenExpr 0x563e08452e08 <col:150, col:207> 'int'
|   |         `-ConditionalOperator 0x563e08452dd8 <col:151, col:198> 'int'
|   |           |-BinaryOperator 0x563e08452d48 <col:151, col:169> 'int' '&&'
|   |           | |-ImplicitCastExpr 0x563e08452d00 <col:151> 'int' <IntegralCast>
|   |           | | `-ImplicitCastExpr 0x563e08452ce8 <col:151> '_Bool' <LValueToRValue>
|   |           | |   `-DeclRefExpr 0x563e08452ca8 <col:151> '_Bool' lvalue Var 0x563e0844dfc0 'y$w_buff0_used' '_Bool'
|   |           | `-ImplicitCastExpr 0x563e08452d30 <col:169> 'int' <IntegralCast>
|   |           |   `-ImplicitCastExpr 0x563e08452d18 <col:169> '_Bool' <LValueToRValue>
|   |           |     `-DeclRefExpr 0x563e08452cc8 <col:169> '_Bool' lvalue Var 0x563e0844dc68 'y$r_buff0_thd2' '_Bool'
|   |           |-ImplicitCastExpr 0x563e08452da8 <col:186> 'int' <LValueToRValue>
|   |           | `-DeclRefExpr 0x563e08452d68 <col:186> 'int' lvalue Var 0x563e0844e040 'y$w_buff1' 'int'
|   |           `-ImplicitCastExpr 0x563e08452dc0 <col:198> 'int' <LValueToRValue>
|   |             `-DeclRefExpr 0x563e08452d88 <col:198> 'int' lvalue Var 0x563e0844e040 'y$w_buff1' 'int'
|   |-BinaryOperator 0x563e084534b0 <line:760:3, col:227> '_Bool' '='
|   | |-DeclRefExpr 0x563e08452f28 <col:3> '_Bool' lvalue Var 0x563e0844dfc0 'y$w_buff0_used' '_Bool'
|   | `-ImplicitCastExpr 0x563e08453498 <col:20, col:227> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x563e08453468 <col:20, col:227> 'int'
|   |     |-ImplicitCastExpr 0x563e08453420 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x563e08453408 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x563e08452f48 <col:20> '_Bool' lvalue Var 0x563e0844e2c8 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x563e08453450 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x563e08453438 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x563e08452f68 <col:36> '_Bool' lvalue Var 0x563e0844dfc0 'y$w_buff0_used' '_Bool'
|   |     `-ParenExpr 0x563e084533e8 <col:53, col:227> 'int'
|   |       `-ConditionalOperator 0x563e084533b8 <col:54, col:226> 'int'
|   |         |-BinaryOperator 0x563e08453178 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x563e08453098 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x563e08452fc0 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x563e08452fa8 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x563e08452f88 <col:55> '_Bool' lvalue Var 0x563e0844dfc0 'y$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x563e08453078 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x563e08453010 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x563e08452ff8 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x563e08452fd8 <col:74> '_Bool' lvalue Var 0x563e0844dc68 'y$r_buff0_thd2' '_Bool'
|   |         | |   `-UnaryOperator 0x563e08453060 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x563e08453048 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x563e08453028 <col:93> '_Bool' lvalue Var 0x563e0844e0b8 'y$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x563e08453158 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x563e084530f0 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x563e084530d8 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x563e084530b8 <col:112> '_Bool' lvalue Var 0x563e0844dc68 'y$r_buff0_thd2' '_Bool'
|   |         |   `-UnaryOperator 0x563e08453140 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x563e08453128 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x563e08453108 <col:131> '_Bool' lvalue Var 0x563e0844ddd0 'y$r_buff1_thd2' '_Bool'
|   |         |-ImplicitCastExpr 0x563e084533a0 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x563e08453388 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x563e08453198 <col:148> '_Bool' lvalue Var 0x563e0844dfc0 'y$w_buff0_used' '_Bool'
|   |         `-ParenExpr 0x563e08453368 <col:165, col:226> 'int'
|   |           `-ConditionalOperator 0x563e08453338 <col:166, col:212> 'int'
|   |             |-BinaryOperator 0x563e08453258 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x563e08453210 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x563e084531f8 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x563e084531b8 <col:166> '_Bool' lvalue Var 0x563e0844dfc0 'y$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x563e08453240 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x563e08453228 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x563e084531d8 <col:184> '_Bool' lvalue Var 0x563e0844dc68 'y$r_buff0_thd2' '_Bool'
|   |             |-ImplicitCastExpr 0x563e084532f0 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x563e084532a8 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x563e08453278 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x563e08453320 <col:212> 'int' <IntegralCast>
|   |               `-ImplicitCastExpr 0x563e08453308 <col:212> '_Bool' <LValueToRValue>
|   |                 `-DeclRefExpr 0x563e084532d0 <col:212> '_Bool' lvalue Var 0x563e0844dfc0 'y$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x563e08453a78 <line:761:3, col:221> '_Bool' '='
|   | |-DeclRefExpr 0x563e084534d0 <col:3> '_Bool' lvalue Var 0x563e0844e0b8 'y$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x563e08453a60 <col:20, col:221> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x563e08453a30 <col:20, col:221> 'int'
|   |     |-ImplicitCastExpr 0x563e084539e8 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x563e084539d0 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x563e084534f0 <col:20> '_Bool' lvalue Var 0x563e0844e2c8 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x563e08453a18 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x563e08453a00 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x563e08453510 <col:36> '_Bool' lvalue Var 0x563e0844e0b8 'y$w_buff1_used' '_Bool'
|   |     `-ParenExpr 0x563e084539b0 <col:53, col:221> 'int'
|   |       `-ConditionalOperator 0x563e08453980 <col:54, col:220> 'int'
|   |         |-BinaryOperator 0x563e08453720 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x563e08453640 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x563e08453568 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x563e08453550 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x563e08453530 <col:55> '_Bool' lvalue Var 0x563e0844dfc0 'y$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x563e08453620 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x563e084535b8 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x563e084535a0 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x563e08453580 <col:74> '_Bool' lvalue Var 0x563e0844dc68 'y$r_buff0_thd2' '_Bool'
|   |         | |   `-UnaryOperator 0x563e08453608 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x563e084535f0 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x563e084535d0 <col:93> '_Bool' lvalue Var 0x563e0844e0b8 'y$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x563e08453700 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x563e08453698 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x563e08453680 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x563e08453660 <col:112> '_Bool' lvalue Var 0x563e0844dc68 'y$r_buff0_thd2' '_Bool'
|   |         |   `-UnaryOperator 0x563e084536e8 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x563e084536d0 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x563e084536b0 <col:131> '_Bool' lvalue Var 0x563e0844ddd0 'y$r_buff1_thd2' '_Bool'
|   |         |-ImplicitCastExpr 0x563e08453968 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x563e08453950 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x563e08453740 <col:148> '_Bool' lvalue Var 0x563e0844e0b8 'y$w_buff1_used' '_Bool'
|   |         `-ParenExpr 0x563e08453930 <col:165, col:220> 'int'
|   |           `-ConditionalOperator 0x563e08453900 <col:166, col:219> 'int'
|   |             |-BinaryOperator 0x563e08453800 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x563e084537b8 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x563e084537a0 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x563e08453760 <col:166> '_Bool' lvalue Var 0x563e0844dfc0 'y$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x563e084537e8 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x563e084537d0 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x563e08453780 <col:184> '_Bool' lvalue Var 0x563e0844dc68 'y$r_buff0_thd2' '_Bool'
|   |             |-ImplicitCastExpr 0x563e084538d0 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x563e08453850 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x563e08453820 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x563e084538e8 <col:212, col:219> 'int' <IntegralCast>
|   |               `-CStyleCastExpr 0x563e084538a8 <col:212, col:219> '_Bool' <IntegralToBoolean>
|   |                 `-IntegerLiteral 0x563e08453878 <col:219> 'int' 0
|   |-BinaryOperator 0x563e08454038 <line:762:3, col:227> '_Bool' '='
|   | |-DeclRefExpr 0x563e08453a98 <col:3> '_Bool' lvalue Var 0x563e0844dc68 'y$r_buff0_thd2' '_Bool'
|   | `-ImplicitCastExpr 0x563e08454020 <col:20, col:227> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x563e08453ff0 <col:20, col:227> 'int'
|   |     |-ImplicitCastExpr 0x563e08453fa8 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x563e08453f90 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x563e08453ab8 <col:20> '_Bool' lvalue Var 0x563e0844e2c8 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x563e08453fd8 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x563e08453fc0 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x563e08453ad8 <col:36> '_Bool' lvalue Var 0x563e0844dc68 'y$r_buff0_thd2' '_Bool'
|   |     `-ParenExpr 0x563e08453f70 <col:53, col:227> 'int'
|   |       `-ConditionalOperator 0x563e08453f40 <col:54, col:226> 'int'
|   |         |-BinaryOperator 0x563e08453d00 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x563e08453c20 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x563e08453b30 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x563e08453b18 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x563e08453af8 <col:55> '_Bool' lvalue Var 0x563e0844dfc0 'y$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x563e08453c00 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x563e08453b98 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x563e08453b80 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x563e08453b60 <col:74> '_Bool' lvalue Var 0x563e0844dc68 'y$r_buff0_thd2' '_Bool'
|   |         | |   `-UnaryOperator 0x563e08453be8 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x563e08453bd0 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x563e08453bb0 <col:93> '_Bool' lvalue Var 0x563e0844e0b8 'y$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x563e08453ce0 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x563e08453c78 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x563e08453c60 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x563e08453c40 <col:112> '_Bool' lvalue Var 0x563e0844dc68 'y$r_buff0_thd2' '_Bool'
|   |         |   `-UnaryOperator 0x563e08453cc8 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x563e08453cb0 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x563e08453c90 <col:131> '_Bool' lvalue Var 0x563e0844ddd0 'y$r_buff1_thd2' '_Bool'
|   |         |-ImplicitCastExpr 0x563e08453f28 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x563e08453f10 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x563e08453d20 <col:148> '_Bool' lvalue Var 0x563e0844dc68 'y$r_buff0_thd2' '_Bool'
|   |         `-ParenExpr 0x563e08453ef0 <col:165, col:226> 'int'
|   |           `-ConditionalOperator 0x563e08453ec0 <col:166, col:212> 'int'
|   |             |-BinaryOperator 0x563e08453de0 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x563e08453d98 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x563e08453d80 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x563e08453d40 <col:166> '_Bool' lvalue Var 0x563e0844dfc0 'y$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x563e08453dc8 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x563e08453db0 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x563e08453d60 <col:184> '_Bool' lvalue Var 0x563e0844dc68 'y$r_buff0_thd2' '_Bool'
|   |             |-ImplicitCastExpr 0x563e08453e78 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x563e08453e30 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x563e08453e00 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x563e08453ea8 <col:212> 'int' <IntegralCast>
|   |               `-ImplicitCastExpr 0x563e08453e90 <col:212> '_Bool' <LValueToRValue>
|   |                 `-DeclRefExpr 0x563e08453e58 <col:212> '_Bool' lvalue Var 0x563e0844dc68 'y$r_buff0_thd2' '_Bool'
|   |-BinaryOperator 0x563e08454600 <line:763:3, col:221> '_Bool' '='
|   | |-DeclRefExpr 0x563e08454058 <col:3> '_Bool' lvalue Var 0x563e0844ddd0 'y$r_buff1_thd2' '_Bool'
|   | `-ImplicitCastExpr 0x563e084545e8 <col:20, col:221> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x563e084545b8 <col:20, col:221> 'int'
|   |     |-ImplicitCastExpr 0x563e08454570 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x563e08454558 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x563e08454078 <col:20> '_Bool' lvalue Var 0x563e0844e2c8 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x563e084545a0 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x563e08454588 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x563e08454098 <col:36> '_Bool' lvalue Var 0x563e0844ddd0 'y$r_buff1_thd2' '_Bool'
|   |     `-ParenExpr 0x563e08454538 <col:53, col:221> 'int'
|   |       `-ConditionalOperator 0x563e08454508 <col:54, col:220> 'int'
|   |         |-BinaryOperator 0x563e084542a8 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x563e084541c8 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x563e084540f0 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x563e084540d8 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x563e084540b8 <col:55> '_Bool' lvalue Var 0x563e0844dfc0 'y$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x563e084541a8 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x563e08454140 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x563e08454128 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x563e08454108 <col:74> '_Bool' lvalue Var 0x563e0844dc68 'y$r_buff0_thd2' '_Bool'
|   |         | |   `-UnaryOperator 0x563e08454190 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x563e08454178 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x563e08454158 <col:93> '_Bool' lvalue Var 0x563e0844e0b8 'y$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x563e08454288 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x563e08454220 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x563e08454208 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x563e084541e8 <col:112> '_Bool' lvalue Var 0x563e0844dc68 'y$r_buff0_thd2' '_Bool'
|   |         |   `-UnaryOperator 0x563e08454270 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x563e08454258 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x563e08454238 <col:131> '_Bool' lvalue Var 0x563e0844ddd0 'y$r_buff1_thd2' '_Bool'
|   |         |-ImplicitCastExpr 0x563e084544f0 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x563e084544d8 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x563e084542c8 <col:148> '_Bool' lvalue Var 0x563e0844ddd0 'y$r_buff1_thd2' '_Bool'
|   |         `-ParenExpr 0x563e084544b8 <col:165, col:220> 'int'
|   |           `-ConditionalOperator 0x563e08454488 <col:166, col:219> 'int'
|   |             |-BinaryOperator 0x563e08454388 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x563e08454340 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x563e08454328 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x563e084542e8 <col:166> '_Bool' lvalue Var 0x563e0844dfc0 'y$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x563e08454370 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x563e08454358 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x563e08454308 <col:184> '_Bool' lvalue Var 0x563e0844dc68 'y$r_buff0_thd2' '_Bool'
|   |             |-ImplicitCastExpr 0x563e08454458 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x563e084543d8 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x563e084543a8 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x563e08454470 <col:212, col:219> 'int' <IntegralCast>
|   |               `-CStyleCastExpr 0x563e08454430 <col:212, col:219> '_Bool' <IntegralToBoolean>
|   |                 `-IntegerLiteral 0x563e08454400 <col:219> 'int' 0
|   |-BinaryOperator 0x563e08454678 <line:764:3, col:25> 'int' '='
|   | |-DeclRefExpr 0x563e08454620 <col:3> 'int' lvalue Var 0x563e0844d528 '__unbuffered_p1_EAX' 'int'
|   | `-ImplicitCastExpr 0x563e08454660 <col:25> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x563e08454640 <col:25> 'int' lvalue Var 0x563e0844d978 'y' 'int'
|   |-BinaryOperator 0x563e084547a8 <line:765:3, col:37> 'int' '='
|   | |-DeclRefExpr 0x563e08454698 <col:3> 'int' lvalue Var 0x563e0844d978 'y' 'int'
|   | `-ConditionalOperator 0x563e08454778 <col:7, col:37> 'int'
|   |   |-ImplicitCastExpr 0x563e08454730 <col:7> 'int' <IntegralCast>
|   |   | `-ImplicitCastExpr 0x563e08454718 <col:7> '_Bool' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x563e084546b8 <col:7> '_Bool' lvalue Var 0x563e0844da10 'y$flush_delayed' '_Bool'
|   |   |-ImplicitCastExpr 0x563e08454748 <col:25> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x563e084546d8 <col:25> 'int' lvalue Var 0x563e0844db00 'y$mem_tmp' 'int'
|   |   `-ImplicitCastExpr 0x563e08454760 <col:37> 'int' <LValueToRValue>
|   |     `-DeclRefExpr 0x563e084546f8 <col:37> 'int' lvalue Var 0x563e0844d978 'y' 'int'
|   |-BinaryOperator 0x563e08454840 <line:766:3, col:28> '_Bool' '='
|   | |-DeclRefExpr 0x563e084547c8 <col:3> '_Bool' lvalue Var 0x563e0844da10 'y$flush_delayed' '_Bool'
|   | `-CStyleCastExpr 0x563e08454818 <col:21, col:28> '_Bool' <IntegralToBoolean>
|   |   `-IntegerLiteral 0x563e084547e8 <col:28> 'int' 0
|   |-CallExpr 0x563e08454898 <line:767:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x563e08454880 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x563e08454860 <col:3> 'void ()' Function 0x563e083f4060 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x563e084548f0 <line:768:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x563e084548d8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x563e084548b8 <col:3> 'void ()' Function 0x563e083f3fa0 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x563e08454968 <line:769:3, col:25> 'int' '='
|   | |-DeclRefExpr 0x563e08454910 <col:3> 'int' lvalue Var 0x563e0844d648 '__unbuffered_p1_EBX' 'int'
|   | `-ImplicitCastExpr 0x563e08454950 <col:25> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x563e08454930 <col:25> 'int' lvalue Var 0x563e0844e1b8 'z' 'int'
|   |-CallExpr 0x563e084549c0 <line:770:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x563e084549a8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x563e08454988 <col:3> 'void ()' Function 0x563e083f4060 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x563e08454a18 <line:771:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x563e08454a00 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x563e084549e0 <col:3> 'void ()' Function 0x563e083f3fa0 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x563e08454d18 <line:772:3, col:103> 'int' '='
|   | |-DeclRefExpr 0x563e08454a38 <col:3> 'int' lvalue Var 0x563e0844d978 'y' 'int'
|   | `-ConditionalOperator 0x563e08454ce8 <col:7, col:103> 'int'
|   |   |-BinaryOperator 0x563e08454af8 <col:7, col:25> 'int' '&&'
|   |   | |-ImplicitCastExpr 0x563e08454ab0 <col:7> 'int' <IntegralCast>
|   |   | | `-ImplicitCastExpr 0x563e08454a98 <col:7> '_Bool' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x563e08454a58 <col:7> '_Bool' lvalue Var 0x563e0844dfc0 'y$w_buff0_used' '_Bool'
|   |   | `-ImplicitCastExpr 0x563e08454ae0 <col:25> 'int' <IntegralCast>
|   |   |   `-ImplicitCastExpr 0x563e08454ac8 <col:25> '_Bool' <LValueToRValue>
|   |   |     `-DeclRefExpr 0x563e08454a78 <col:25> '_Bool' lvalue Var 0x563e0844dc68 'y$r_buff0_thd2' '_Bool'
|   |   |-ImplicitCastExpr 0x563e08454cd0 <col:42> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x563e08454b18 <col:42> 'int' lvalue Var 0x563e0844df48 'y$w_buff0' 'int'
|   |   `-ParenExpr 0x563e08454cb0 <col:54, col:103> 'int'
|   |     `-ConditionalOperator 0x563e08454c80 <col:55, col:102> 'int'
|   |       |-BinaryOperator 0x563e08454bf0 <col:55, col:73> 'int' '&&'
|   |       | |-ImplicitCastExpr 0x563e08454ba8 <col:55> 'int' <IntegralCast>
|   |       | | `-ImplicitCastExpr 0x563e08454b90 <col:55> '_Bool' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x563e08454b38 <col:55> '_Bool' lvalue Var 0x563e0844e0b8 'y$w_buff1_used' '_Bool'
|   |       | `-ImplicitCastExpr 0x563e08454bd8 <col:73> 'int' <IntegralCast>
|   |       |   `-ImplicitCastExpr 0x563e08454bc0 <col:73> '_Bool' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x563e08454b70 <col:73> '_Bool' lvalue Var 0x563e0844ddd0 'y$r_buff1_thd2' '_Bool'
|   |       |-ImplicitCastExpr 0x563e08454c50 <col:90> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x563e08454c10 <col:90> 'int' lvalue Var 0x563e0844e040 'y$w_buff1' 'int'
|   |       `-ImplicitCastExpr 0x563e08454c68 <col:102> 'int' <LValueToRValue>
|   |         `-DeclRefExpr 0x563e08454c30 <col:102> 'int' lvalue Var 0x563e0844d978 'y' 'int'
|   |-BinaryOperator 0x563e08454f20 <line:773:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x563e08454d38 <col:3> '_Bool' lvalue Var 0x563e0844dfc0 'y$w_buff0_used' '_Bool'
|   | `-ImplicitCastExpr 0x563e08454f08 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x563e08454ed8 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x563e08454df8 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x563e08454db0 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x563e08454d98 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x563e08454d58 <col:20> '_Bool' lvalue Var 0x563e0844dfc0 'y$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x563e08454de0 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x563e08454dc8 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x563e08454d78 <col:38> '_Bool' lvalue Var 0x563e0844dc68 'y$r_buff0_thd2' '_Bool'
|   |     |-ImplicitCastExpr 0x563e08454e90 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x563e08454e48 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x563e08454e18 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x563e08454ec0 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x563e08454ea8 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x563e08454e70 <col:66> '_Bool' lvalue Var 0x563e0844dfc0 'y$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x563e08455208 <line:774:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x563e08454f40 <col:3> '_Bool' lvalue Var 0x563e0844e0b8 'y$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x563e084551f0 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x563e084551c0 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x563e084550e0 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x563e08455000 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x563e08454fb8 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x563e08454fa0 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x563e08454f60 <col:20> '_Bool' lvalue Var 0x563e0844dfc0 'y$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x563e08454fe8 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x563e08454fd0 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x563e08454f80 <col:38> '_Bool' lvalue Var 0x563e0844dc68 'y$r_buff0_thd2' '_Bool'
|   |     | `-BinaryOperator 0x563e084550c0 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x563e08455078 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x563e08455060 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x563e08455020 <col:56> '_Bool' lvalue Var 0x563e0844e0b8 'y$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x563e084550a8 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x563e08455090 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x563e08455040 <col:74> '_Bool' lvalue Var 0x563e0844ddd0 'y$r_buff1_thd2' '_Bool'
|   |     |-ImplicitCastExpr 0x563e08455178 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x563e08455130 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x563e08455100 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x563e084551a8 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x563e08455190 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x563e08455158 <col:102> '_Bool' lvalue Var 0x563e0844e0b8 'y$w_buff1_used' '_Bool'
|   |-BinaryOperator 0x563e08455410 <line:775:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x563e08455228 <col:3> '_Bool' lvalue Var 0x563e0844dc68 'y$r_buff0_thd2' '_Bool'
|   | `-ImplicitCastExpr 0x563e084553f8 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x563e084553c8 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x563e084552e8 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x563e084552a0 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x563e08455288 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x563e08455248 <col:20> '_Bool' lvalue Var 0x563e0844dfc0 'y$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x563e084552d0 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x563e084552b8 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x563e08455268 <col:38> '_Bool' lvalue Var 0x563e0844dc68 'y$r_buff0_thd2' '_Bool'
|   |     |-ImplicitCastExpr 0x563e08455380 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x563e08455338 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x563e08455308 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x563e084553b0 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x563e08455398 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x563e08455360 <col:66> '_Bool' lvalue Var 0x563e0844dc68 'y$r_buff0_thd2' '_Bool'
|   |-BinaryOperator 0x563e084556f8 <line:776:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x563e08455430 <col:3> '_Bool' lvalue Var 0x563e0844ddd0 'y$r_buff1_thd2' '_Bool'
|   | `-ImplicitCastExpr 0x563e084556e0 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x563e084556b0 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x563e084555d0 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x563e084554f0 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x563e084554a8 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x563e08455490 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x563e08455450 <col:20> '_Bool' lvalue Var 0x563e0844dfc0 'y$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x563e084554d8 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x563e084554c0 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x563e08455470 <col:38> '_Bool' lvalue Var 0x563e0844dc68 'y$r_buff0_thd2' '_Bool'
|   |     | `-BinaryOperator 0x563e084555b0 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x563e08455568 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x563e08455550 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x563e08455510 <col:56> '_Bool' lvalue Var 0x563e0844e0b8 'y$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x563e08455598 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x563e08455580 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x563e08455530 <col:74> '_Bool' lvalue Var 0x563e0844ddd0 'y$r_buff1_thd2' '_Bool'
|   |     |-ImplicitCastExpr 0x563e08455668 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x563e08455620 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x563e084555f0 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x563e08455698 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x563e08455680 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x563e08455648 <col:102> '_Bool' lvalue Var 0x563e0844ddd0 'y$r_buff1_thd2' '_Bool'
|   |-CallExpr 0x563e08455750 <line:777:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x563e08455738 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x563e08455718 <col:3> 'void ()' Function 0x563e083f4060 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x563e084557a8 <line:778:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x563e08455790 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x563e08455770 <col:3> 'void ()' Function 0x563e083f3fa0 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x563e08455860 <line:779:3, col:41> 'int' '='
|   | |-DeclRefExpr 0x563e084557c8 <col:3> 'int' lvalue Var 0x563e0844d1c8 '__unbuffered_cnt' 'int'
|   | `-BinaryOperator 0x563e08455840 <col:22, col:41> 'int' '+'
|   |   |-ImplicitCastExpr 0x563e08455828 <col:22> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x563e084557e8 <col:22> 'int' lvalue Var 0x563e0844d1c8 '__unbuffered_cnt' 'int'
|   |   `-IntegerLiteral 0x563e08455808 <col:41> 'int' 1
|   |-CallExpr 0x563e084558b8 <line:780:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x563e084558a0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x563e08455880 <col:3> 'void ()' Function 0x563e083f4060 '__VERIFIER_atomic_end' 'void ()'
|   `-ReturnStmt 0x563e08455930 <line:781:3, col:36>
|     `-CallExpr 0x563e08455910 <col:10, col:36> 'void *'
|       `-ImplicitCastExpr 0x563e084558f8 <col:10> 'void *(*)(void)' <FunctionToPointerDecay>
|         `-DeclRefExpr 0x563e084558d8 <col:10> 'void *(void)' Function 0x563e083f3ab8 '__VERIFIER_nondet_pointer' 'void *(void)'
|-FunctionDecl 0x563e08455ab8 prev 0x563e0844cf10 <line:783:1, line:785:1> line:783:6 fence 'void ()'
| `-CompoundStmt 0x563e08455b58 <line:784:1, line:785:1>
|-FunctionDecl 0x563e08455ba0 prev 0x563e0844cfd0 <line:786:1, line:788:1> line:786:6 isync 'void ()'
| `-CompoundStmt 0x563e08455c40 <line:787:1, line:788:1>
|-FunctionDecl 0x563e08455c70 prev 0x563e0844d090 <line:789:1, line:791:1> line:789:6 lwfence 'void ()'
| `-CompoundStmt 0x563e08455d10 <line:790:1, line:791:1>
`-FunctionDecl 0x563e08455d78 <line:792:1, line:814:1> line:792:5 main 'int ()'
  `-CompoundStmt 0x563e084577c0 <line:793:1, line:814:1>
    |-DeclStmt 0x563e08455e90 <line:794:3, col:17>
    | `-VarDecl 0x563e08455e28 <col:3, col:13> col:13 used t257 'pthread_t':'unsigned long'
    |-CallExpr 0x563e08456098 <line:795:3, col:53> 'int'
    | |-ImplicitCastExpr 0x563e08456080 <col:3> 'int (*)(pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x563e08455ea8 <col:3> 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' Function 0x563e084345b8 'pthread_create' 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)'
    | |-UnaryOperator 0x563e08455ee8 <col:18, col:19> 'pthread_t *' prefix '&' cannot overflow
    | | `-DeclRefExpr 0x563e08455ec8 <col:19> 'pthread_t':'unsigned long' lvalue Var 0x563e08455e28 't257' 'pthread_t':'unsigned long'
    | |-ImplicitCastExpr 0x563e084560d8 <col:25, col:35> 'const pthread_attr_t *' <NullToPointer>
    | | `-ParenExpr 0x563e08455f60 <col:25, col:35> 'void *'
    | |   `-CStyleCastExpr 0x563e08455f38 <col:26, col:34> 'void *' <NullToPointer>
    | |     `-IntegerLiteral 0x563e08455f00 <col:34> 'int' 0
    | |-ImplicitCastExpr 0x563e084560f0 <col:38> 'void *(*)(void *)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x563e08455f80 <col:38> 'void *(void *)' Function 0x563e0844e3e0 'P0' 'void *(void *)'
    | `-ParenExpr 0x563e08456000 <col:42, col:52> 'void *'
    |   `-CStyleCastExpr 0x563e08455fd8 <col:43, col:51> 'void *' <NullToPointer>
    |     `-IntegerLiteral 0x563e08455fa0 <col:51> 'int' 0
    |-DeclStmt 0x563e08456180 <line:796:3, col:17>
    | `-VarDecl 0x563e08456118 <col:3, col:13> col:13 used t258 'pthread_t':'unsigned long'
    |-CallExpr 0x563e08456328 <line:797:3, col:53> 'int'
    | |-ImplicitCastExpr 0x563e08456310 <col:3> 'int (*)(pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x563e08456198 <col:3> 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' Function 0x563e084345b8 'pthread_create' 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)'
    | |-UnaryOperator 0x563e084561d8 <col:18, col:19> 'pthread_t *' prefix '&' cannot overflow
    | | `-DeclRefExpr 0x563e084561b8 <col:19> 'pthread_t':'unsigned long' lvalue Var 0x563e08456118 't258' 'pthread_t':'unsigned long'
    | |-ImplicitCastExpr 0x563e08456368 <col:25, col:35> 'const pthread_attr_t *' <NullToPointer>
    | | `-ParenExpr 0x563e08456250 <col:25, col:35> 'void *'
    | |   `-CStyleCastExpr 0x563e08456228 <col:26, col:34> 'void *' <NullToPointer>
    | |     `-IntegerLiteral 0x563e084561f0 <col:34> 'int' 0
    | |-ImplicitCastExpr 0x563e08456380 <col:38> 'void *(*)(void *)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x563e08456270 <col:38> 'void *(void *)' Function 0x563e08451750 'P1' 'void *(void *)'
    | `-ParenExpr 0x563e084562f0 <col:42, col:52> 'void *'
    |   `-CStyleCastExpr 0x563e084562c8 <col:43, col:51> 'void *' <NullToPointer>
    |     `-IntegerLiteral 0x563e08456290 <col:51> 'int' 0
    |-CallExpr 0x563e084563d0 <line:798:3, col:27> 'void'
    | `-ImplicitCastExpr 0x563e084563b8 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x563e08456398 <col:3> 'void ()' Function 0x563e083f3fa0 '__VERIFIER_atomic_begin' 'void ()'
    |-BinaryOperator 0x563e084564a0 <line:799:3, col:41> '_Bool' '='
    | |-DeclRefExpr 0x563e084563f0 <col:3> '_Bool' lvalue Var 0x563e0844d6e0 'main$tmp_guard0' '_Bool'
    | `-ImplicitCastExpr 0x563e08456488 <col:21, col:41> '_Bool' <IntegralToBoolean>
    |   `-BinaryOperator 0x563e08456468 <col:21, col:41> 'int' '=='
    |     |-ImplicitCastExpr 0x563e08456450 <col:21> 'int' <LValueToRValue>
    |     | `-DeclRefExpr 0x563e08456410 <col:21> 'int' lvalue Var 0x563e0844d1c8 '__unbuffered_cnt' 'int'
    |     `-IntegerLiteral 0x563e08456430 <col:41> 'int' 2
    |-CallExpr 0x563e084564f8 <line:800:3, col:25> 'void'
    | `-ImplicitCastExpr 0x563e084564e0 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x563e084564c0 <col:3> 'void ()' Function 0x563e083f4060 '__VERIFIER_atomic_end' 'void ()'
    |-CallExpr 0x563e08456570 <line:801:3, col:36> 'void'
    | |-ImplicitCastExpr 0x563e08456558 <col:3> 'void (*)(int)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x563e08456518 <col:3> 'void (int)' Function 0x563e083f3940 '__VERIFIER_assume' 'void (int)'
    | `-ImplicitCastExpr 0x563e084565b0 <col:21> 'int' <IntegralCast>
    |   `-ImplicitCastExpr 0x563e08456598 <col:21> '_Bool' <LValueToRValue>
    |     `-DeclRefExpr 0x563e08456538 <col:21> '_Bool' lvalue Var 0x563e0844d6e0 'main$tmp_guard0' '_Bool'
    |-CallExpr 0x563e08456600 <line:802:3, col:27> 'void'
    | `-ImplicitCastExpr 0x563e084565e8 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x563e084565c8 <col:3> 'void ()' Function 0x563e083f3fa0 '__VERIFIER_atomic_begin' 'void ()'
    |-BinaryOperator 0x563e084568e8 <line:803:3, col:103> 'int' '='
    | |-DeclRefExpr 0x563e08456620 <col:3> 'int' lvalue Var 0x563e0844d978 'y' 'int'
    | `-ConditionalOperator 0x563e084568b8 <col:7, col:103> 'int'
    |   |-BinaryOperator 0x563e084566e0 <col:7, col:25> 'int' '&&'
    |   | |-ImplicitCastExpr 0x563e08456698 <col:7> 'int' <IntegralCast>
    |   | | `-ImplicitCastExpr 0x563e08456680 <col:7> '_Bool' <LValueToRValue>
    |   | |   `-DeclRefExpr 0x563e08456640 <col:7> '_Bool' lvalue Var 0x563e0844dfc0 'y$w_buff0_used' '_Bool'
    |   | `-ImplicitCastExpr 0x563e084566c8 <col:25> 'int' <IntegralCast>
    |   |   `-ImplicitCastExpr 0x563e084566b0 <col:25> '_Bool' <LValueToRValue>
    |   |     `-DeclRefExpr 0x563e08456660 <col:25> '_Bool' lvalue Var 0x563e0844db78 'y$r_buff0_thd0' '_Bool'
    |   |-ImplicitCastExpr 0x563e084568a0 <col:42> 'int' <LValueToRValue>
    |   | `-DeclRefExpr 0x563e08456700 <col:42> 'int' lvalue Var 0x563e0844df48 'y$w_buff0' 'int'
    |   `-ParenExpr 0x563e08456880 <col:54, col:103> 'int'
    |     `-ConditionalOperator 0x563e08456850 <col:55, col:102> 'int'
    |       |-BinaryOperator 0x563e084567c0 <col:55, col:73> 'int' '&&'
    |       | |-ImplicitCastExpr 0x563e08456778 <col:55> 'int' <IntegralCast>
    |       | | `-ImplicitCastExpr 0x563e08456760 <col:55> '_Bool' <LValueToRValue>
    |       | |   `-DeclRefExpr 0x563e08456720 <col:55> '_Bool' lvalue Var 0x563e0844e0b8 'y$w_buff1_used' '_Bool'
    |       | `-ImplicitCastExpr 0x563e084567a8 <col:73> 'int' <IntegralCast>
    |       |   `-ImplicitCastExpr 0x563e08456790 <col:73> '_Bool' <LValueToRValue>
    |       |     `-DeclRefExpr 0x563e08456740 <col:73> '_Bool' lvalue Var 0x563e0844dce0 'y$r_buff1_thd0' '_Bool'
    |       |-ImplicitCastExpr 0x563e08456820 <col:90> 'int' <LValueToRValue>
    |       | `-DeclRefExpr 0x563e084567e0 <col:90> 'int' lvalue Var 0x563e0844e040 'y$w_buff1' 'int'
    |       `-ImplicitCastExpr 0x563e08456838 <col:102> 'int' <LValueToRValue>
    |         `-DeclRefExpr 0x563e08456800 <col:102> 'int' lvalue Var 0x563e0844d978 'y' 'int'
    |-BinaryOperator 0x563e08456af0 <line:804:3, col:66> '_Bool' '='
    | |-DeclRefExpr 0x563e08456908 <col:3> '_Bool' lvalue Var 0x563e0844dfc0 'y$w_buff0_used' '_Bool'
    | `-ImplicitCastExpr 0x563e08456ad8 <col:20, col:66> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x563e08456aa8 <col:20, col:66> 'int'
    |     |-BinaryOperator 0x563e084569c8 <col:20, col:38> 'int' '&&'
    |     | |-ImplicitCastExpr 0x563e08456980 <col:20> 'int' <IntegralCast>
    |     | | `-ImplicitCastExpr 0x563e08456968 <col:20> '_Bool' <LValueToRValue>
    |     | |   `-DeclRefExpr 0x563e08456928 <col:20> '_Bool' lvalue Var 0x563e0844dfc0 'y$w_buff0_used' '_Bool'
    |     | `-ImplicitCastExpr 0x563e084569b0 <col:38> 'int' <IntegralCast>
    |     |   `-ImplicitCastExpr 0x563e08456998 <col:38> '_Bool' <LValueToRValue>
    |     |     `-DeclRefExpr 0x563e08456948 <col:38> '_Bool' lvalue Var 0x563e0844db78 'y$r_buff0_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x563e08456a60 <col:55, col:62> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x563e08456a18 <col:55, col:62> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x563e084569e8 <col:62> 'int' 0
    |     `-ImplicitCastExpr 0x563e08456a90 <col:66> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x563e08456a78 <col:66> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x563e08456a40 <col:66> '_Bool' lvalue Var 0x563e0844dfc0 'y$w_buff0_used' '_Bool'
    |-BinaryOperator 0x563e08456df8 <line:805:3, col:102> '_Bool' '='
    | |-DeclRefExpr 0x563e08456b10 <col:3> '_Bool' lvalue Var 0x563e0844e0b8 'y$w_buff1_used' '_Bool'
    | `-ImplicitCastExpr 0x563e08456de0 <col:20, col:102> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x563e08456db0 <col:20, col:102> 'int'
    |     |-BinaryOperator 0x563e08456cd0 <col:20, col:74> 'int' '||'
    |     | |-BinaryOperator 0x563e08456bf0 <col:20, col:38> 'int' '&&'
    |     | | |-ImplicitCastExpr 0x563e08456ba8 <col:20> 'int' <IntegralCast>
    |     | | | `-ImplicitCastExpr 0x563e08456b90 <col:20> '_Bool' <LValueToRValue>
    |     | | |   `-DeclRefExpr 0x563e08456b30 <col:20> '_Bool' lvalue Var 0x563e0844dfc0 'y$w_buff0_used' '_Bool'
    |     | | `-ImplicitCastExpr 0x563e08456bd8 <col:38> 'int' <IntegralCast>
    |     | |   `-ImplicitCastExpr 0x563e08456bc0 <col:38> '_Bool' <LValueToRValue>
    |     | |     `-DeclRefExpr 0x563e08456b50 <col:38> '_Bool' lvalue Var 0x563e0844db78 'y$r_buff0_thd0' '_Bool'
    |     | `-BinaryOperator 0x563e08456cb0 <col:56, col:74> 'int' '&&'
    |     |   |-ImplicitCastExpr 0x563e08456c68 <col:56> 'int' <IntegralCast>
    |     |   | `-ImplicitCastExpr 0x563e08456c50 <col:56> '_Bool' <LValueToRValue>
    |     |   |   `-DeclRefExpr 0x563e08456c10 <col:56> '_Bool' lvalue Var 0x563e0844e0b8 'y$w_buff1_used' '_Bool'
    |     |   `-ImplicitCastExpr 0x563e08456c98 <col:74> 'int' <IntegralCast>
    |     |     `-ImplicitCastExpr 0x563e08456c80 <col:74> '_Bool' <LValueToRValue>
    |     |       `-DeclRefExpr 0x563e08456c30 <col:74> '_Bool' lvalue Var 0x563e0844dce0 'y$r_buff1_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x563e08456d68 <col:91, col:98> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x563e08456d20 <col:91, col:98> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x563e08456cf0 <col:98> 'int' 0
    |     `-ImplicitCastExpr 0x563e08456d98 <col:102> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x563e08456d80 <col:102> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x563e08456d48 <col:102> '_Bool' lvalue Var 0x563e0844e0b8 'y$w_buff1_used' '_Bool'
    |-BinaryOperator 0x563e08457000 <line:806:3, col:66> '_Bool' '='
    | |-DeclRefExpr 0x563e08456e18 <col:3> '_Bool' lvalue Var 0x563e0844db78 'y$r_buff0_thd0' '_Bool'
    | `-ImplicitCastExpr 0x563e08456fe8 <col:20, col:66> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x563e08456fb8 <col:20, col:66> 'int'
    |     |-BinaryOperator 0x563e08456ed8 <col:20, col:38> 'int' '&&'
    |     | |-ImplicitCastExpr 0x563e08456e90 <col:20> 'int' <IntegralCast>
    |     | | `-ImplicitCastExpr 0x563e08456e78 <col:20> '_Bool' <LValueToRValue>
    |     | |   `-DeclRefExpr 0x563e08456e38 <col:20> '_Bool' lvalue Var 0x563e0844dfc0 'y$w_buff0_used' '_Bool'
    |     | `-ImplicitCastExpr 0x563e08456ec0 <col:38> 'int' <IntegralCast>
    |     |   `-ImplicitCastExpr 0x563e08456ea8 <col:38> '_Bool' <LValueToRValue>
    |     |     `-DeclRefExpr 0x563e08456e58 <col:38> '_Bool' lvalue Var 0x563e0844db78 'y$r_buff0_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x563e08456f70 <col:55, col:62> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x563e08456f28 <col:55, col:62> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x563e08456ef8 <col:62> 'int' 0
    |     `-ImplicitCastExpr 0x563e08456fa0 <col:66> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x563e08456f88 <col:66> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x563e08456f50 <col:66> '_Bool' lvalue Var 0x563e0844db78 'y$r_buff0_thd0' '_Bool'
    |-BinaryOperator 0x563e084572e8 <line:807:3, col:102> '_Bool' '='
    | |-DeclRefExpr 0x563e08457020 <col:3> '_Bool' lvalue Var 0x563e0844dce0 'y$r_buff1_thd0' '_Bool'
    | `-ImplicitCastExpr 0x563e084572d0 <col:20, col:102> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x563e084572a0 <col:20, col:102> 'int'
    |     |-BinaryOperator 0x563e084571c0 <col:20, col:74> 'int' '||'
    |     | |-BinaryOperator 0x563e084570e0 <col:20, col:38> 'int' '&&'
    |     | | |-ImplicitCastExpr 0x563e08457098 <col:20> 'int' <IntegralCast>
    |     | | | `-ImplicitCastExpr 0x563e08457080 <col:20> '_Bool' <LValueToRValue>
    |     | | |   `-DeclRefExpr 0x563e08457040 <col:20> '_Bool' lvalue Var 0x563e0844dfc0 'y$w_buff0_used' '_Bool'
    |     | | `-ImplicitCastExpr 0x563e084570c8 <col:38> 'int' <IntegralCast>
    |     | |   `-ImplicitCastExpr 0x563e084570b0 <col:38> '_Bool' <LValueToRValue>
    |     | |     `-DeclRefExpr 0x563e08457060 <col:38> '_Bool' lvalue Var 0x563e0844db78 'y$r_buff0_thd0' '_Bool'
    |     | `-BinaryOperator 0x563e084571a0 <col:56, col:74> 'int' '&&'
    |     |   |-ImplicitCastExpr 0x563e08457158 <col:56> 'int' <IntegralCast>
    |     |   | `-ImplicitCastExpr 0x563e08457140 <col:56> '_Bool' <LValueToRValue>
    |     |   |   `-DeclRefExpr 0x563e08457100 <col:56> '_Bool' lvalue Var 0x563e0844e0b8 'y$w_buff1_used' '_Bool'
    |     |   `-ImplicitCastExpr 0x563e08457188 <col:74> 'int' <IntegralCast>
    |     |     `-ImplicitCastExpr 0x563e08457170 <col:74> '_Bool' <LValueToRValue>
    |     |       `-DeclRefExpr 0x563e08457120 <col:74> '_Bool' lvalue Var 0x563e0844dce0 'y$r_buff1_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x563e08457258 <col:91, col:98> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x563e08457210 <col:91, col:98> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x563e084571e0 <col:98> 'int' 0
    |     `-ImplicitCastExpr 0x563e08457288 <col:102> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x563e08457270 <col:102> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x563e08457238 <col:102> '_Bool' lvalue Var 0x563e0844dce0 'y$r_buff1_thd0' '_Bool'
    |-CallExpr 0x563e08457340 <line:808:3, col:25> 'void'
    | `-ImplicitCastExpr 0x563e08457328 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x563e08457308 <col:3> 'void ()' Function 0x563e083f4060 '__VERIFIER_atomic_end' 'void ()'
    |-CallExpr 0x563e08457398 <line:809:3, col:27> 'void'
    | `-ImplicitCastExpr 0x563e08457380 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x563e08457360 <col:3> 'void ()' Function 0x563e083f3fa0 '__VERIFIER_atomic_begin' 'void ()'
    |-BinaryOperator 0x563e08457668 <line:810:3, col:131> '_Bool' '='
    | |-DeclRefExpr 0x563e084573b8 <col:3> '_Bool' lvalue Var 0x563e0844d758 'main$tmp_guard1' '_Bool'
    | `-ImplicitCastExpr 0x563e08457650 <col:21, col:131> '_Bool' <IntegralToBoolean>
    |   `-UnaryOperator 0x563e08457638 <col:21, col:131> 'int' prefix '!' cannot overflow
    |     `-ParenExpr 0x563e08457618 <col:22, col:131> 'int'
    |       `-BinaryOperator 0x563e084575f8 <col:23, col:130> 'int' '&&'
    |         |-BinaryOperator 0x563e08457560 <col:23, col:102> 'int' '&&'
    |         | |-BinaryOperator 0x563e084574c8 <col:23, col:74> 'int' '&&'
    |         | | |-BinaryOperator 0x563e08457430 <col:23, col:46> 'int' '=='
    |         | | | |-ImplicitCastExpr 0x563e08457418 <col:23> 'int' <LValueToRValue>
    |         | | | | `-DeclRefExpr 0x563e084573d8 <col:23> 'int' lvalue Var 0x563e0844d2e8 '__unbuffered_p0_EAX' 'int'
    |         | | | `-IntegerLiteral 0x563e084573f8 <col:46> 'int' 1
    |         | | `-BinaryOperator 0x563e084574a8 <col:51, col:74> 'int' '=='
    |         | |   |-ImplicitCastExpr 0x563e08457490 <col:51> 'int' <LValueToRValue>
    |         | |   | `-DeclRefExpr 0x563e08457450 <col:51> 'int' lvalue Var 0x563e0844d408 '__unbuffered_p0_EBX' 'int'
    |         | |   `-IntegerLiteral 0x563e08457470 <col:74> 'int' 0
    |         | `-BinaryOperator 0x563e08457540 <col:79, col:102> 'int' '=='
    |         |   |-ImplicitCastExpr 0x563e08457528 <col:79> 'int' <LValueToRValue>
    |         |   | `-DeclRefExpr 0x563e084574e8 <col:79> 'int' lvalue Var 0x563e0844d528 '__unbuffered_p1_EAX' 'int'
    |         |   `-IntegerLiteral 0x563e08457508 <col:102> 'int' 1
    |         `-BinaryOperator 0x563e084575d8 <col:107, col:130> 'int' '=='
    |           |-ImplicitCastExpr 0x563e084575c0 <col:107> 'int' <LValueToRValue>
    |           | `-DeclRefExpr 0x563e08457580 <col:107> 'int' lvalue Var 0x563e0844d648 '__unbuffered_p1_EBX' 'int'
    |           `-IntegerLiteral 0x563e084575a0 <col:130> 'int' 0
    |-CallExpr 0x563e084576c0 <line:811:3, col:25> 'void'
    | `-ImplicitCastExpr 0x563e084576a8 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x563e08457688 <col:3> 'void ()' Function 0x563e083f4060 '__VERIFIER_atomic_end' 'void ()'
    |-CallExpr 0x563e08457738 <line:812:3, col:36> 'void'
    | |-ImplicitCastExpr 0x563e08457720 <col:3> 'void (*)(int)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x563e084576e0 <col:3> 'void (int)' Function 0x563e083f3d28 '__VERIFIER_assert' 'void (int)'
    | `-ImplicitCastExpr 0x563e08457778 <col:21> 'int' <IntegralCast>
    |   `-ImplicitCastExpr 0x563e08457760 <col:21> '_Bool' <LValueToRValue>
    |     `-DeclRefExpr 0x563e08457700 <col:21> '_Bool' lvalue Var 0x563e0844d758 'main$tmp_guard1' '_Bool'
    `-ReturnStmt 0x563e084577b0 <line:813:3, col:10>
      `-IntegerLiteral 0x563e08457790 <col:10> 'int' 0
