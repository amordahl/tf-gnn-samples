TranslationUnitDecl 0x56236f6dae18 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x56236f6db6d8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x56236f6db3b0 '__int128'
|-TypedefDecl 0x56236f6db748 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x56236f6db3d0 'unsigned __int128'
|-TypedefDecl 0x56236f6dba50 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x56236f6db820 'struct __NSConstantString_tag'
|   `-Record 0x56236f6db7a0 '__NSConstantString_tag'
|-TypedefDecl 0x56236f6dbaf8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x56236f6dbab0 'char *'
|   `-BuiltinType 0x56236f6daeb0 'char'
|-TypedefDecl 0x56236f71a650 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'struct __va_list_tag [1]'
| `-ConstantArrayType 0x56236f6dbd90 'struct __va_list_tag [1]' 1 
|   `-RecordType 0x56236f6dbbd0 'struct __va_list_tag'
|     `-Record 0x56236f6dbb50 '__va_list_tag'
|-FunctionDecl 0x56236f71a790 <./split_9/rfi001_power.oepc_false-unreach-call.i:1:1, col:34> col:13 used __VERIFIER_assume 'void (int)' extern
| `-ParmVarDecl 0x56236f71a6c0 <col:31> col:34 'int'
|-FunctionDecl 0x56236f71a958 <line:2:1, col:45> col:15 used __VERIFIER_nondet_pointer 'void *(void)' extern
|-FunctionDecl 0x56236f71aa80 <line:3:1, col:61> col:13 used __VERIFIER_error 'void () __attribute__((noreturn))' extern
|-FunctionDecl 0x56236f71abc8 <line:4:1, col:99> col:6 used __VERIFIER_assert 'void (int)'
| |-ParmVarDecl 0x56236f71ab38 <col:24, col:28> col:28 used expression 'int'
| `-CompoundStmt 0x56236f71adf8 <col:40, col:99>
|   |-IfStmt 0x56236f71adc8 <col:42, col:88>
|   | |-UnaryOperator 0x56236f71aca8 <col:46, col:47> 'int' prefix '!' cannot overflow
|   | | `-ImplicitCastExpr 0x56236f71ac90 <col:47> 'int' <LValueToRValue>
|   | |   `-DeclRefExpr 0x56236f71ac70 <col:47> 'int' lvalue ParmVar 0x56236f71ab38 'expression' 'int'
|   | `-CompoundStmt 0x56236f71adb0 <col:59, col:88>
|   |   `-LabelStmt 0x56236f71ad98 <col:61, col:85> 'ERROR'
|   |     `-CallExpr 0x56236f71ad28 <col:68, col:85> 'void'
|   |       `-ImplicitCastExpr 0x56236f71ad10 <col:68> 'void (*)() __attribute__((noreturn))' <FunctionToPointerDecay>
|   |         `-DeclRefExpr 0x56236f71acc0 <col:68> 'void () __attribute__((noreturn))' Function 0x56236f71aa80 '__VERIFIER_error' 'void () __attribute__((noreturn))'
|   |-NullStmt 0x56236f71ade0 <col:89>
|   `-ReturnStmt 0x56236f71ade8 <col:91>
|-FunctionDecl 0x56236f71ae40 <line:5:1, col:37> col:13 used __VERIFIER_atomic_begin 'void ()' extern
|-FunctionDecl 0x56236f71af00 <line:6:1, col:35> col:13 used __VERIFIER_atomic_end 'void ()' extern
|-FunctionDecl 0x56236f71b280 <line:8:1, line:10:76> line:8:13 __assert_fail 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x56236f71afb8 <col:28, col:40> col:40 __assertion 'const char *'
| |-ParmVarDecl 0x56236f71b038 <col:53, col:65> col:65 __file 'const char *'
| |-ParmVarDecl 0x56236f71b0b8 <line:9:7, col:20> col:20 __line 'unsigned int'
| |-ParmVarDecl 0x56236f71b138 <col:28, col:40> col:40 __function 'const char *'
| `-NoThrowAttr 0x56236f71b340 <line:10:22>
|-FunctionDecl 0x56236f741390 <line:11:1, line:13:76> line:11:13 __assert_perror_fail 'void (int, const char *, unsigned int, const char *) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x56236f71b3b0 <col:35, col:39> col:39 __errnum 'int'
| |-ParmVarDecl 0x56236f71b430 <col:49, col:61> col:61 __file 'const char *'
| |-ParmVarDecl 0x56236f71b4b0 <line:12:7, col:20> col:20 __line 'unsigned int'
| |-ParmVarDecl 0x56236f71b530 <col:28, col:40> col:40 __function 'const char *'
| `-NoThrowAttr 0x56236f741450 <line:13:22>
|-FunctionDecl 0x56236f741700 <line:14:1, line:15:76> line:14:13 __assert 'void (const char *, const char *, int) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x56236f7414c0 <col:23, col:35> col:35 __assertion 'const char *'
| |-ParmVarDecl 0x56236f741540 <col:48, col:60> col:60 __file 'const char *'
| |-ParmVarDecl 0x56236f7415c0 <col:68, col:72> col:72 __line 'int'
| `-NoThrowAttr 0x56236f7417b8 <line:15:22>
|-TypedefDecl 0x56236f741828 <line:17:1, col:23> col:23 __u_char 'unsigned char'
| `-BuiltinType 0x56236f6daf70 'unsigned char'
|-TypedefDecl 0x56236f741898 <line:18:1, col:28> col:28 __u_short 'unsigned short'
| `-BuiltinType 0x56236f6daf90 'unsigned short'
|-TypedefDecl 0x56236f741908 <line:19:1, col:22> col:22 __u_int 'unsigned int'
| `-BuiltinType 0x56236f6dafb0 'unsigned int'
|-TypedefDecl 0x56236f741978 <line:20:1, col:27> col:27 __u_long 'unsigned long'
| `-BuiltinType 0x56236f6dafd0 'unsigned long'
|-TypedefDecl 0x56236f7419e8 <line:21:1, col:21> col:21 __int8_t 'signed char'
| `-BuiltinType 0x56236f6daed0 'signed char'
|-TypedefDecl 0x56236f741a58 <line:22:1, col:23> col:23 __uint8_t 'unsigned char'
| `-BuiltinType 0x56236f6daf70 'unsigned char'
|-TypedefDecl 0x56236f741ac8 <line:23:1, col:26> col:26 __int16_t 'short'
| `-BuiltinType 0x56236f6daef0 'short'
|-TypedefDecl 0x56236f741b38 <line:24:1, col:28> col:28 __uint16_t 'unsigned short'
| `-BuiltinType 0x56236f6daf90 'unsigned short'
|-TypedefDecl 0x56236f741ba8 <line:25:1, col:20> col:20 __int32_t 'int'
| `-BuiltinType 0x56236f6daf10 'int'
|-TypedefDecl 0x56236f741c18 <line:26:1, col:22> col:22 __uint32_t 'unsigned int'
| `-BuiltinType 0x56236f6dafb0 'unsigned int'
|-TypedefDecl 0x56236f741c88 <line:27:1, col:25> col:25 __int64_t 'long'
| `-BuiltinType 0x56236f6daf30 'long'
|-TypedefDecl 0x56236f741cf8 <line:28:1, col:27> col:27 referenced __uint64_t 'unsigned long'
| `-BuiltinType 0x56236f6dafd0 'unsigned long'
|-TypedefDecl 0x56236f741d68 <line:29:1, col:18> col:18 referenced __quad_t 'long'
| `-BuiltinType 0x56236f6daf30 'long'
|-TypedefDecl 0x56236f741dd8 <line:30:1, col:27> col:27 __u_quad_t 'unsigned long'
| `-BuiltinType 0x56236f6dafd0 'unsigned long'
|-TypedefDecl 0x56236f741e48 <line:31:1, col:27> col:27 __dev_t 'unsigned long'
| `-BuiltinType 0x56236f6dafd0 'unsigned long'
|-TypedefDecl 0x56236f741eb8 <line:32:1, col:22> col:22 __uid_t 'unsigned int'
| `-BuiltinType 0x56236f6dafb0 'unsigned int'
|-TypedefDecl 0x56236f741f28 <line:33:1, col:22> col:22 __gid_t 'unsigned int'
| `-BuiltinType 0x56236f6dafb0 'unsigned int'
|-TypedefDecl 0x56236f741f98 <line:34:1, col:27> col:27 __ino_t 'unsigned long'
| `-BuiltinType 0x56236f6dafd0 'unsigned long'
|-TypedefDecl 0x56236f742008 <line:35:1, col:27> col:27 __ino64_t 'unsigned long'
| `-BuiltinType 0x56236f6dafd0 'unsigned long'
|-TypedefDecl 0x56236f742078 <line:36:1, col:22> col:22 __mode_t 'unsigned int'
| `-BuiltinType 0x56236f6dafb0 'unsigned int'
|-TypedefDecl 0x56236f7420e8 <line:37:1, col:27> col:27 __nlink_t 'unsigned long'
| `-BuiltinType 0x56236f6dafd0 'unsigned long'
|-TypedefDecl 0x56236f742158 <line:38:1, col:18> col:18 __off_t 'long'
| `-BuiltinType 0x56236f6daf30 'long'
|-TypedefDecl 0x56236f7421c8 <line:39:1, col:18> col:18 referenced __off64_t 'long'
| `-BuiltinType 0x56236f6daf30 'long'
|-TypedefDecl 0x56236f742238 <line:40:1, col:13> col:13 referenced __pid_t 'int'
| `-BuiltinType 0x56236f6daf10 'int'
|-RecordDecl 0x56236f742290 <line:41:9, col:32> col:9 struct definition
| `-FieldDecl 0x56236f742408 <col:18, col:29> col:22 __val 'int [2]'
|-TypedefDecl 0x56236f7424c0 <col:1, col:34> col:34 __fsid_t 'struct __fsid_t':'__fsid_t'
| `-ElaboratedType 0x56236f742460 'struct __fsid_t' sugar
|   `-RecordType 0x56236f742310 '__fsid_t'
|     `-Record 0x56236f742290 ''
|-TypedefDecl 0x56236f742548 <line:42:1, col:18> col:18 referenced __clock_t 'long'
| `-BuiltinType 0x56236f6daf30 'long'
|-TypedefDecl 0x56236f7425b8 <line:43:1, col:27> col:27 __rlim_t 'unsigned long'
| `-BuiltinType 0x56236f6dafd0 'unsigned long'
|-TypedefDecl 0x56236f742628 <line:44:1, col:27> col:27 __rlim64_t 'unsigned long'
| `-BuiltinType 0x56236f6dafd0 'unsigned long'
|-TypedefDecl 0x56236f742698 <line:45:1, col:22> col:22 __id_t 'unsigned int'
| `-BuiltinType 0x56236f6dafb0 'unsigned int'
|-TypedefDecl 0x56236f742708 <line:46:1, col:18> col:18 referenced __time_t 'long'
| `-BuiltinType 0x56236f6daf30 'long'
|-TypedefDecl 0x56236f742778 <line:47:1, col:22> col:22 __useconds_t 'unsigned int'
| `-BuiltinType 0x56236f6dafb0 'unsigned int'
|-TypedefDecl 0x56236f7427e8 <line:48:1, col:18> col:18 __suseconds_t 'long'
| `-BuiltinType 0x56236f6daf30 'long'
|-TypedefDecl 0x56236f742858 <line:49:1, col:13> col:13 __daddr_t 'int'
| `-BuiltinType 0x56236f6daf10 'int'
|-TypedefDecl 0x56236f7428c8 <line:50:1, col:13> col:13 __key_t 'int'
| `-BuiltinType 0x56236f6daf10 'int'
|-TypedefDecl 0x56236f742938 <line:51:1, col:13> col:13 referenced __clockid_t 'int'
| `-BuiltinType 0x56236f6daf10 'int'
|-TypedefDecl 0x56236f7429a8 <line:52:1, col:16> col:16 referenced __timer_t 'void *'
| `-PointerType 0x56236f6db630 'void *'
|   `-BuiltinType 0x56236f6dae70 'void'
|-TypedefDecl 0x56236f742a18 <line:53:1, col:18> col:18 __blksize_t 'long'
| `-BuiltinType 0x56236f6daf30 'long'
|-TypedefDecl 0x56236f742a88 <line:54:1, col:18> col:18 __blkcnt_t 'long'
| `-BuiltinType 0x56236f6daf30 'long'
|-TypedefDecl 0x56236f742af8 <line:55:1, col:18> col:18 __blkcnt64_t 'long'
| `-BuiltinType 0x56236f6daf30 'long'
|-TypedefDecl 0x56236f742b68 <line:56:1, col:27> col:27 __fsblkcnt_t 'unsigned long'
| `-BuiltinType 0x56236f6dafd0 'unsigned long'
|-TypedefDecl 0x56236f742bd8 <line:57:1, col:27> col:27 __fsblkcnt64_t 'unsigned long'
| `-BuiltinType 0x56236f6dafd0 'unsigned long'
|-TypedefDecl 0x56236f742c48 <line:58:1, col:27> col:27 __fsfilcnt_t 'unsigned long'
| `-BuiltinType 0x56236f6dafd0 'unsigned long'
|-TypedefDecl 0x56236f742cb8 <line:59:1, col:27> col:27 __fsfilcnt64_t 'unsigned long'
| `-BuiltinType 0x56236f6dafd0 'unsigned long'
|-TypedefDecl 0x56236f742d28 <line:60:1, col:18> col:18 __fsword_t 'long'
| `-BuiltinType 0x56236f6daf30 'long'
|-TypedefDecl 0x56236f742d98 <line:61:1, col:18> col:18 __ssize_t 'long'
| `-BuiltinType 0x56236f6daf30 'long'
|-TypedefDecl 0x56236f742e08 <line:62:1, col:18> col:18 referenced __syscall_slong_t 'long'
| `-BuiltinType 0x56236f6daf30 'long'
|-TypedefDecl 0x56236f742e78 <line:63:1, col:27> col:27 __syscall_ulong_t 'unsigned long'
| `-BuiltinType 0x56236f6dafd0 'unsigned long'
|-TypedefDecl 0x56236f742f08 <line:64:1, col:19> col:19 __loff_t '__off64_t':'long'
| `-TypedefType 0x56236f742ed0 '__off64_t' sugar
|   |-Typedef 0x56236f7421c8 '__off64_t'
|   `-BuiltinType 0x56236f6daf30 'long'
|-TypedefDecl 0x56236f743000 <line:65:1, col:19> col:19 __qaddr_t '__quad_t *'
| `-PointerType 0x56236f742fc0 '__quad_t *'
|   `-TypedefType 0x56236f742f60 '__quad_t' sugar
|     |-Typedef 0x56236f741d68 '__quad_t'
|     `-BuiltinType 0x56236f6daf30 'long'
|-TypedefDecl 0x56236f743070 <line:66:1, col:15> col:15 __caddr_t 'char *'
| `-PointerType 0x56236f6dbab0 'char *'
|   `-BuiltinType 0x56236f6daeb0 'char'
|-TypedefDecl 0x56236f7430e0 <line:67:1, col:18> col:18 __intptr_t 'long'
| `-BuiltinType 0x56236f6daf30 'long'
|-TypedefDecl 0x56236f743150 <line:68:1, col:22> col:22 __socklen_t 'unsigned int'
| `-BuiltinType 0x56236f6dafb0 'unsigned int'
|-FunctionDecl 0x56236f743298 <line:69:1, line:73:1> line:70:1 __bswap_32 'unsigned int (unsigned int)' static inline
| |-ParmVarDecl 0x56236f7431c0 <col:13, col:26> col:26 used __bsx 'unsigned int'
| `-CompoundStmt 0x56236f7445e8 <line:71:1, line:73:1>
|   `-ReturnStmt 0x56236f7445d8 <line:72:3, col:34>
|     `-CallExpr 0x56236f744598 <col:10, col:34> 'unsigned int'
|       |-ImplicitCastExpr 0x56236f744580 <col:10> 'unsigned int (*)(unsigned int)' <BuiltinFnToFnPtr>
|       | `-DeclRefExpr 0x56236f744510 <col:10> '<builtin fn type>' Function 0x56236f744380 '__builtin_bswap32' 'unsigned int (unsigned int)'
|       `-ImplicitCastExpr 0x56236f7445c0 <col:29> 'unsigned int' <LValueToRValue>
|         `-DeclRefExpr 0x56236f744530 <col:29> 'unsigned int' lvalue ParmVar 0x56236f7431c0 '__bsx' 'unsigned int'
|-FunctionDecl 0x56236f744380 <col:10> col:10 implicit used __builtin_bswap32 'unsigned int (unsigned int)' extern
| |-ParmVarDecl 0x56236f744420 <<invalid sloc>> <invalid sloc> 'unsigned int'
| |-NoThrowAttr 0x56236f744490 <col:10> Implicit
| `-ConstAttr 0x56236f7444e8 <col:10> Implicit
|-FunctionDecl 0x56236f744740 <line:74:1, line:78:1> line:75:1 __bswap_64 '__uint64_t (__uint64_t)' static inline
| |-ParmVarDecl 0x56236f744638 <col:13, col:24> col:24 used __bsx '__uint64_t':'unsigned long'
| `-CompoundStmt 0x56236f744a58 <line:76:1, line:78:1>
|   `-ReturnStmt 0x56236f744a48 <line:77:3, col:34>
|     `-CallExpr 0x56236f744a08 <col:10, col:34> 'unsigned long'
|       |-ImplicitCastExpr 0x56236f7449f0 <col:10> 'unsigned long (*)(unsigned long)' <BuiltinFnToFnPtr>
|       | `-DeclRefExpr 0x56236f744978 <col:10> '<builtin fn type>' Function 0x56236f7447e8 '__builtin_bswap64' 'unsigned long (unsigned long)'
|       `-ImplicitCastExpr 0x56236f744a30 <col:29> '__uint64_t':'unsigned long' <LValueToRValue>
|         `-DeclRefExpr 0x56236f744998 <col:29> '__uint64_t':'unsigned long' lvalue ParmVar 0x56236f744638 '__bsx' '__uint64_t':'unsigned long'
|-FunctionDecl 0x56236f7447e8 <col:10> col:10 implicit used __builtin_bswap64 'unsigned long (unsigned long)' extern
| |-ParmVarDecl 0x56236f744888 <<invalid sloc>> <invalid sloc> 'unsigned long'
| |-NoThrowAttr 0x56236f7448f8 <col:10> Implicit
| `-ConstAttr 0x56236f744950 <col:10> Implicit
|-TypedefDecl 0x56236f744a88 <line:79:1, col:27> col:27 referenced size_t 'unsigned long'
| `-BuiltinType 0x56236f6dafd0 'unsigned long'
|-TypedefDecl 0x56236f744b18 <line:81:1, col:18> col:18 referenced time_t '__time_t':'long'
| `-TypedefType 0x56236f744ae0 '__time_t' sugar
|   |-Typedef 0x56236f742708 '__time_t'
|   `-BuiltinType 0x56236f6daf30 'long'
|-RecordDecl 0x56236f744b70 <line:84:1, line:88:3> line:84:8 struct timespec definition
| |-FieldDecl 0x56236f744c28 <line:86:5, col:14> col:14 tv_sec '__time_t':'long'
| `-FieldDecl 0x56236f744cb8 <line:87:5, col:23> col:23 tv_nsec '__syscall_slong_t':'long'
|-TypedefDecl 0x56236f744d48 <line:89:1, col:17> col:17 referenced pid_t '__pid_t':'int'
| `-TypedefType 0x56236f744d10 '__pid_t' sugar
|   |-Typedef 0x56236f742238 '__pid_t'
|   `-BuiltinType 0x56236f6daf10 'int'
|-RecordDecl 0x56236f744da0 <line:90:1, line:93:3> line:90:8 struct sched_param definition
| `-FieldDecl 0x56236f744e60 <line:92:5, col:9> col:9 __sched_priority 'int'
|-RecordDecl 0x56236f744eb0 <line:96:1, line:99:3> line:96:8 struct __sched_param definition
| `-FieldDecl 0x56236f744f70 <line:98:5, col:9> col:9 __sched_priority 'int'
|-TypedefDecl 0x56236f744fd8 <line:100:1, col:27> col:27 referenced __cpu_mask 'unsigned long'
| `-BuiltinType 0x56236f6dafd0 'unsigned long'
|-RecordDecl 0x56236f745030 <line:101:9, line:104:1> line:101:9 struct definition
| `-FieldDecl 0x56236f7452c0 <line:103:3, col:53> col:14 __bits '__cpu_mask [64]'
|-TypedefDecl 0x56236f7463a0 <line:101:1, line:104:3> col:3 referenced cpu_set_t 'struct cpu_set_t':'cpu_set_t'
| `-ElaboratedType 0x56236f745310 'struct cpu_set_t' sugar
|   `-RecordType 0x56236f7450b0 'cpu_set_t'
|     `-Record 0x56236f745030 ''
|-FunctionDecl 0x56236f746678 <line:106:1, line:107:42> line:106:12 __sched_cpucount 'int (size_t, const cpu_set_t *)' extern
| |-ParmVarDecl 0x56236f746448 <col:30, col:37> col:37 __setsize 'size_t':'unsigned long'
| |-ParmVarDecl 0x56236f746550 <col:48, col:65> col:65 __setp 'const cpu_set_t *'
| `-NoThrowAttr 0x56236f746728 <line:107:19>
|-FunctionDecl 0x56236f746900 <line:108:1, col:92> col:19 __sched_cpualloc 'cpu_set_t *(size_t)' extern
| |-ParmVarDecl 0x56236f746790 <col:37, col:44> col:44 __count 'size_t':'unsigned long'
| `-NoThrowAttr 0x56236f7469a8 <col:69>
|-FunctionDecl 0x56236f746b20 <line:109:1, col:87> col:13 __sched_cpufree 'void (cpu_set_t *)' extern
| |-ParmVarDecl 0x56236f746a10 <col:30, col:41> col:41 __set 'cpu_set_t *'
| `-NoThrowAttr 0x56236f746bc8 <col:64>
|-FunctionDecl 0x56236f746e88 <line:112:1, line:113:45> line:112:12 sched_setparam 'int (__pid_t, const struct sched_param *)' extern
| |-ParmVarDecl 0x56236f746c30 <col:28, col:36> col:36 __pid '__pid_t':'int'
| |-ParmVarDecl 0x56236f746d68 <col:43, col:69> col:69 __param 'const struct sched_param *'
| `-NoThrowAttr 0x56236f746f38 <line:113:22>
|-FunctionDecl 0x56236f7471b8 <line:114:1, col:111> col:12 sched_getparam 'int (__pid_t, struct sched_param *)' extern
| |-ParmVarDecl 0x56236f746fa0 <col:28, col:36> col:36 __pid '__pid_t':'int'
| |-ParmVarDecl 0x56236f747098 <col:43, col:63> col:63 __param 'struct sched_param *'
| `-NoThrowAttr 0x56236f747268 <col:88>
|-FunctionDecl 0x56236f747588 <line:115:1, line:116:85> line:115:12 sched_setscheduler 'int (__pid_t, int, const struct sched_param *)' extern
| |-ParmVarDecl 0x56236f7472d0 <col:32, col:40> col:40 __pid '__pid_t':'int'
| |-ParmVarDecl 0x56236f7473b0 <col:47, col:51> col:51 __policy 'int'
| |-ParmVarDecl 0x56236f747440 <line:116:11, col:37> col:37 __param 'const struct sched_param *'
| `-NoThrowAttr 0x56236f747640 <col:62>
|-FunctionDecl 0x56236f7477b8 <line:117:1, col:86> col:12 sched_getscheduler 'int (__pid_t)' extern
| |-ParmVarDecl 0x56236f7476a8 <col:32, col:40> col:40 __pid '__pid_t':'int'
| `-NoThrowAttr 0x56236f747860 <col:63>
|-FunctionDecl 0x56236f747988 <line:118:1, col:70> col:12 sched_yield 'int (void)' extern
| `-NoThrowAttr 0x56236f747a28 <col:47>
|-FunctionDecl 0x56236f747b30 <line:119:1, col:92> col:12 sched_get_priority_max 'int (int)' extern
| |-ParmVarDecl 0x56236f747a98 <col:36, col:40> col:40 __algorithm 'int'
| `-NoThrowAttr 0x56236f747bd8 <col:69>
|-FunctionDecl 0x56236f747ce0 <line:120:1, col:92> col:12 sched_get_priority_min 'int (int)' extern
| |-ParmVarDecl 0x56236f747c48 <col:36, col:40> col:40 __algorithm 'int'
| `-NoThrowAttr 0x56236f747d88 <col:69>
|-FunctionDecl 0x56236f748048 <line:121:1, col:111> col:12 sched_rr_get_interval 'int (__pid_t, struct timespec *)' extern
| |-ParmVarDecl 0x56236f747df0 <col:35, col:43> col:43 __pid '__pid_t':'int'
| |-ParmVarDecl 0x56236f747f28 <col:50, col:67> col:67 __t 'struct timespec *'
| `-NoThrowAttr 0x56236f7480f8 <col:88>
|-TypedefDecl 0x56236f748188 <line:125:1, col:19> col:19 referenced clock_t '__clock_t':'long'
| `-TypedefType 0x56236f748150 '__clock_t' sugar
|   |-Typedef 0x56236f742548 '__clock_t'
|   `-BuiltinType 0x56236f6daf30 'long'
|-TypedefDecl 0x56236f748218 <line:128:1, col:21> col:21 referenced clockid_t '__clockid_t':'int'
| `-TypedefType 0x56236f7481e0 '__clockid_t' sugar
|   |-Typedef 0x56236f742938 '__clockid_t'
|   `-BuiltinType 0x56236f6daf10 'int'
|-TypedefDecl 0x56236f7482a8 <line:129:1, col:19> col:19 referenced timer_t '__timer_t':'void *'
| `-TypedefType 0x56236f748270 '__timer_t' sugar
|   |-Typedef 0x56236f7429a8 '__timer_t'
|   `-PointerType 0x56236f6db630 'void *'
|     `-BuiltinType 0x56236f6dae70 'void'
|-RecordDecl 0x56236f748300 <line:131:1, line:144:1> line:131:8 struct tm definition
| |-FieldDecl 0x56236f7483d8 <line:133:3, col:7> col:7 tm_sec 'int'
| |-FieldDecl 0x56236f748440 <line:134:3, col:7> col:7 tm_min 'int'
| |-FieldDecl 0x56236f7484a8 <line:135:3, col:7> col:7 tm_hour 'int'
| |-FieldDecl 0x56236f748510 <line:136:3, col:7> col:7 tm_mday 'int'
| |-FieldDecl 0x56236f748578 <line:137:3, col:7> col:7 tm_mon 'int'
| |-FieldDecl 0x56236f7485e0 <line:138:3, col:7> col:7 tm_year 'int'
| |-FieldDecl 0x56236f748648 <line:139:3, col:7> col:7 tm_wday 'int'
| |-FieldDecl 0x56236f7486b0 <line:140:3, col:7> col:7 tm_yday 'int'
| |-FieldDecl 0x56236f748718 <line:141:3, col:7> col:7 tm_isdst 'int'
| |-FieldDecl 0x56236f748780 <line:142:3, col:12> col:12 tm_gmtoff 'long'
| `-FieldDecl 0x56236f7487e8 <line:143:3, col:15> col:15 tm_zone 'const char *'
|-RecordDecl 0x56236f748838 <line:147:1, line:151:3> line:147:8 struct itimerspec definition
| |-FieldDecl 0x56236f748908 <line:149:5, col:21> col:21 it_interval 'struct timespec':'struct timespec'
| `-FieldDecl 0x56236f748978 <line:150:5, col:21> col:21 it_value 'struct timespec':'struct timespec'
|-RecordDecl 0x56236f748a20 <line:152:1, col:8> col:8 struct sigevent
|-FunctionDecl 0x56236f748bf0 <line:154:1, col:68> col:16 clock 'clock_t (void)' extern
| `-NoThrowAttr 0x56236f748c90 <col:45>
|-FunctionDecl 0x56236f748e70 <line:155:1, col:77> col:15 time 'time_t (time_t *)' extern
| |-ParmVarDecl 0x56236f748d60 <col:21, col:29> col:29 __timer 'time_t *'
| `-NoThrowAttr 0x56236f748f18 <col:54>
|-FunctionDecl 0x56236f749118 <line:156:1, line:157:73> line:156:15 difftime 'double (time_t, time_t)' extern
| |-ParmVarDecl 0x56236f748f80 <col:25, col:32> col:32 __time1 'time_t':'long'
| |-ParmVarDecl 0x56236f748ff8 <col:41, col:48> col:48 __time0 'time_t':'long'
| |-NoThrowAttr 0x56236f7491c8 <line:157:22>
| `-ConstAttr 0x56236f749220 <col:63>
|-FunctionDecl 0x56236f74a050 <line:158:1, col:79> col:15 mktime 'time_t (struct tm *)' extern
| |-ParmVarDecl 0x56236f749318 <col:23, col:34> col:34 __tp 'struct tm *'
| `-NoThrowAttr 0x56236f74a0f8 <col:56>
|-FunctionDecl 0x56236f74a4a0 <line:159:1, line:161:77> line:159:15 strftime 'size_t (char *restrict, size_t, const char *restrict, const struct tm *restrict)' extern
| |-ParmVarDecl 0x56236f74a168 <col:25, col:42> col:42 __s 'char *restrict'
| |-ParmVarDecl 0x56236f74a1e0 <col:47, col:54> col:54 __maxsize 'size_t':'unsigned long'
| |-ParmVarDecl 0x56236f74a260 <line:160:4, col:27> col:27 __format 'const char *restrict'
| |-ParmVarDecl 0x56236f74a358 <line:161:4, col:32> col:32 __tp 'const struct tm *restrict'
| `-NoThrowAttr 0x56236f74a560 <col:54>
|-RecordDecl 0x56236f74a5b8 <line:163:9, line:170:1> line:163:16 struct __locale_struct definition
| |-RecordDecl 0x56236f74a668 parent 0x56236f6dae18 <line:165:3, col:10> col:10 struct __locale_data
| |-FieldDecl 0x56236f74a8c8 <col:3, col:37> col:25 __locales 'struct __locale_data *[13]'
| |-FieldDecl 0x56236f74a968 <line:166:3, col:29> col:29 __ctype_b 'const unsigned short *'
| |-FieldDecl 0x56236f74a9d0 <line:167:3, col:14> col:14 __ctype_tolower 'const int *'
| |-FieldDecl 0x56236f74aa38 <line:168:3, col:14> col:14 __ctype_toupper 'const int *'
| `-FieldDecl 0x56236f74ab28 <line:169:3, col:25> col:15 __names 'const char *[13]'
|-TypedefDecl 0x56236f74ac48 <line:163:1, line:170:4> col:4 referenced __locale_t 'struct __locale_struct *'
| `-PointerType 0x56236f74abf0 'struct __locale_struct *'
|   `-ElaboratedType 0x56236f74ab80 'struct __locale_struct' sugar
|     `-RecordType 0x56236f74a640 'struct __locale_struct'
|       `-Record 0x56236f74a5b8 '__locale_struct'
|-TypedefDecl 0x56236f74acf8 <line:171:1, col:20> col:20 locale_t '__locale_t':'struct __locale_struct *'
| `-TypedefType 0x56236f74acc0 '__locale_t' sugar
|   |-Typedef 0x56236f74ac48 '__locale_t'
|   `-PointerType 0x56236f74abf0 'struct __locale_struct *'
|     `-ElaboratedType 0x56236f74ab80 'struct __locale_struct' sugar
|       `-RecordType 0x56236f74a640 'struct __locale_struct'
|         `-Record 0x56236f74a5b8 '__locale_struct'
|-FunctionDecl 0x56236f74c110 <line:172:1, line:175:63> line:172:15 strftime_l 'size_t (char *restrict, size_t, const char *restrict, const struct tm *restrict, __locale_t)' extern
| |-ParmVarDecl 0x56236f74ad68 <col:27, col:44> col:44 __s 'char *restrict'
| |-ParmVarDecl 0x56236f74ade0 <col:49, col:56> col:56 __maxsize 'size_t':'unsigned long'
| |-ParmVarDecl 0x56236f74ae60 <line:173:6, col:29> col:29 __format 'const char *restrict'
| |-ParmVarDecl 0x56236f74aef0 <line:174:6, col:34> col:34 __tp 'const struct tm *restrict'
| |-ParmVarDecl 0x56236f74af68 <line:175:6, col:17> col:17 __loc '__locale_t':'struct __locale_struct *'
| `-NoThrowAttr 0x56236f74c1d8 <col:40>
|-FunctionDecl 0x56236f74c3c8 <line:177:1, col:89> col:19 gmtime 'struct tm *(const time_t *)' extern
| |-ParmVarDecl 0x56236f74c2a0 <col:27, col:41> col:41 __timer 'const time_t *'
| `-NoThrowAttr 0x56236f74c470 <col:66>
|-FunctionDecl 0x56236f74c580 <line:178:1, col:92> col:19 localtime 'struct tm *(const time_t *)' extern
| |-ParmVarDecl 0x56236f74c4d8 <col:30, col:44> col:44 __timer 'const time_t *'
| `-NoThrowAttr 0x56236f74c628 <col:69>
|-FunctionDecl 0x56236f74c858 <line:180:1, line:181:75> line:180:19 gmtime_r 'struct tm *(const time_t *restrict, struct tm *restrict)' extern
| |-ParmVarDecl 0x56236f74c690 <col:29, col:54> col:54 __timer 'const time_t *restrict'
| |-ParmVarDecl 0x56236f74c720 <line:181:8, col:30> col:30 __tp 'struct tm *restrict'
| `-NoThrowAttr 0x56236f74c908 <col:52>
|-FunctionDecl 0x56236f74cab0 <line:182:1, line:183:78> line:182:19 localtime_r 'struct tm *(const time_t *restrict, struct tm *restrict)' extern
| |-ParmVarDecl 0x56236f74c970 <col:32, col:57> col:57 __timer 'const time_t *restrict'
| |-ParmVarDecl 0x56236f74ca00 <line:183:11, col:33> col:33 __tp 'struct tm *restrict'
| `-NoThrowAttr 0x56236f74cb60 <col:55>
|-FunctionDecl 0x56236f74ccf8 <line:185:1, col:85> col:14 asctime 'char *(const struct tm *)' extern
| |-ParmVarDecl 0x56236f74cbe0 <col:23, col:40> col:40 __tp 'const struct tm *'
| `-NoThrowAttr 0x56236f74cda0 <col:62>
|-FunctionDecl 0x56236f74cf18 <line:186:1, col:83> col:14 ctime 'char *(const time_t *)' extern
| |-ParmVarDecl 0x56236f74ce08 <col:21, col:35> col:35 __timer 'const time_t *'
| `-NoThrowAttr 0x56236f74cfc0 <col:60>
|-FunctionDecl 0x56236f74d2b8 <line:188:1, line:189:67> line:188:14 asctime_r 'char *(const struct tm *restrict, char *restrict)' extern
| |-ParmVarDecl 0x56236f74d118 <col:25, col:53> col:53 __tp 'const struct tm *restrict'
| |-ParmVarDecl 0x56236f74d198 <line:189:4, col:21> col:21 __buf 'char *restrict'
| `-NoThrowAttr 0x56236f74d368 <col:44>
|-FunctionDecl 0x56236f74d578 <line:190:1, line:191:72> line:190:14 ctime_r 'char *(const time_t *restrict, char *restrict)' extern
| |-ParmVarDecl 0x56236f74d3d0 <col:23, col:48> col:48 __timer 'const time_t *restrict'
| |-ParmVarDecl 0x56236f74d450 <line:191:9, col:26> col:26 __buf 'char *restrict'
| `-NoThrowAttr 0x56236f74d628 <col:49>
|-VarDecl 0x56236f74d728 <line:192:1, col:24> col:14 __tzname 'char *[2]' extern
|-VarDecl 0x56236f74d7a8 <line:193:1, col:12> col:12 __daylight 'int' extern
|-VarDecl 0x56236f74d828 <line:194:1, col:17> col:17 __timezone 'long' extern
|-VarDecl 0x56236f74d8f0 <line:195:1, col:22> col:14 tzname 'char *[2]' extern
|-FunctionDecl 0x56236f74da20 <line:196:1, col:65> col:13 tzset 'void (void)' extern
| `-NoThrowAttr 0x56236f74dac0 <col:42>
|-VarDecl 0x56236f74db30 <line:197:1, col:12> col:12 daylight 'int' extern
|-VarDecl 0x56236f74dbb0 <line:198:1, col:17> col:17 timezone 'long' extern
|-FunctionDecl 0x56236f74dd38 <line:199:1, col:80> col:12 stime 'int (const time_t *)' extern
| |-ParmVarDecl 0x56236f74dc28 <col:19, col:33> col:33 __when 'const time_t *'
| `-NoThrowAttr 0x56236f74dde0 <col:57>
|-FunctionDecl 0x56236f74def0 <line:200:1, col:79> col:15 timegm 'time_t (struct tm *)' extern
| |-ParmVarDecl 0x56236f74de60 <col:23, col:34> col:34 __tp 'struct tm *'
| `-NoThrowAttr 0x56236f74df98 <col:56>
|-FunctionDecl 0x56236f74e0d0 <line:201:1, col:82> col:15 timelocal 'time_t (struct tm *)' extern
| |-ParmVarDecl 0x56236f74e018 <col:26, col:37> col:37 __tp 'struct tm *'
| `-NoThrowAttr 0x56236f74e178 <col:59>
|-FunctionDecl 0x56236f74e280 <line:202:1, col:99> col:12 dysize 'int (int)' extern
| |-ParmVarDecl 0x56236f74e1e8 <col:20, col:24> col:24 __year 'int'
| |-NoThrowAttr 0x56236f74e328 <col:48>
| `-ConstAttr 0x56236f74e380 <col:89>
|-FunctionDecl 0x56236f74e5e8 <line:203:1, line:204:37> line:203:12 nanosleep 'int (const struct timespec *, struct timespec *)' extern
| |-ParmVarDecl 0x56236f74e438 <col:23, col:46> col:46 __requested_time 'const struct timespec *'
| `-ParmVarDecl 0x56236f74e4c8 <line:204:9, col:26> col:26 __remaining 'struct timespec *'
|-FunctionDecl 0x56236f74e848 <line:205:1, col:111> col:12 clock_getres 'int (clockid_t, struct timespec *)' extern
| |-ParmVarDecl 0x56236f74e6d8 <col:26, col:36> col:36 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x56236f74e768 <col:48, col:65> col:65 __res 'struct timespec *'
| `-NoThrowAttr 0x56236f74e8f8 <col:88>
|-FunctionDecl 0x56236f74ea90 <line:206:1, col:111> col:12 clock_gettime 'int (clockid_t, struct timespec *)' extern
| |-ParmVarDecl 0x56236f74e960 <col:27, col:37> col:37 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x56236f74e9f0 <col:49, col:66> col:66 __tp 'struct timespec *'
| `-NoThrowAttr 0x56236f74eb40 <col:88>
|-FunctionDecl 0x56236f74ed58 <line:207:1, line:208:45> line:207:12 clock_settime 'int (clockid_t, const struct timespec *)' extern
| |-ParmVarDecl 0x56236f74eba8 <col:27, col:37> col:37 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x56236f74ec38 <col:49, col:72> col:72 __tp 'const struct timespec *'
| `-NoThrowAttr 0x56236f74ee08 <line:208:22>
|-FunctionDecl 0x56236f74f178 <line:209:1, line:211:30> line:209:12 clock_nanosleep 'int (clockid_t, int, const struct timespec *, struct timespec *)' extern
| |-ParmVarDecl 0x56236f74ee70 <col:29, col:39> col:39 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x56236f74eef0 <col:51, col:55> col:55 __flags 'int'
| |-ParmVarDecl 0x56236f74ef80 <line:210:8, col:31> col:31 __req 'const struct timespec *'
| `-ParmVarDecl 0x56236f74f010 <line:211:8, col:25> col:25 __rem 'struct timespec *'
|-FunctionDecl 0x56236f74f478 <line:212:1, col:108> col:12 clock_getcpuclockid 'int (pid_t, clockid_t *)' extern
| |-ParmVarDecl 0x56236f74f278 <col:33, col:39> col:39 __pid 'pid_t':'int'
| |-ParmVarDecl 0x56236f74f350 <col:46, col:57> col:57 __clock_id 'clockid_t *'
| `-NoThrowAttr 0x56236f74f528 <col:85>
|-FunctionDecl 0x56236f74f918 <line:213:1, line:215:75> line:213:12 timer_create 'int (clockid_t, struct sigevent *restrict, timer_t *restrict)' extern
| |-ParmVarDecl 0x56236f74f590 <col:26, col:36> col:36 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x56236f74f6c8 <line:214:5, col:33> col:33 __evp 'struct sigevent *restrict'
| |-ParmVarDecl 0x56236f74f7d0 <line:215:5, col:25> col:25 __timerid 'timer_t *restrict'
| `-NoThrowAttr 0x56236f74f9d0 <col:52>
|-FunctionDecl 0x56236f74fb48 <line:216:1, col:84> col:12 timer_delete 'int (timer_t)' extern
| |-ParmVarDecl 0x56236f74fa38 <col:26, col:34> col:34 __timerid 'timer_t':'void *'
| `-NoThrowAttr 0x56236f74fbf0 <col:61>
|-FunctionDecl 0x56236f7500f0 <line:217:1, line:219:85> line:217:12 timer_settime 'int (timer_t, int, const struct itimerspec *restrict, struct itimerspec *restrict)' extern
| |-ParmVarDecl 0x56236f74fc58 <col:27, col:35> col:35 __timerid 'timer_t':'void *'
| |-ParmVarDecl 0x56236f74fcd8 <col:46, col:50> col:50 __flags 'int'
| |-ParmVarDecl 0x56236f74fe08 <line:218:6, col:42> col:42 __value 'const struct itimerspec *restrict'
| |-ParmVarDecl 0x56236f74fef8 <line:219:6, col:36> col:36 __ovalue 'struct itimerspec *restrict'
| `-NoThrowAttr 0x56236f7501b0 <col:62>
|-FunctionDecl 0x56236f7503c8 <line:220:1, line:221:45> line:220:12 timer_gettime 'int (timer_t, struct itimerspec *)' extern
| |-ParmVarDecl 0x56236f750218 <col:27, col:35> col:35 __timerid 'timer_t':'void *'
| |-ParmVarDecl 0x56236f7502a8 <col:46, col:65> col:65 __value 'struct itimerspec *'
| `-NoThrowAttr 0x56236f750478 <line:221:22>
|-FunctionDecl 0x56236f750578 <line:222:1, col:88> col:12 timer_getoverrun 'int (timer_t)' extern
| |-ParmVarDecl 0x56236f7504e0 <col:30, col:38> col:38 __timerid 'timer_t':'void *'
| `-NoThrowAttr 0x56236f750620 <col:65>
|-TypedefDecl 0x56236f750690 <line:224:1, col:27> col:27 referenced pthread_t 'unsigned long'
| `-BuiltinType 0x56236f6dafd0 'unsigned long'
|-RecordDecl 0x56236f7506e8 <line:225:1, line:229:1> line:225:7 union pthread_attr_t definition
| |-FieldDecl 0x56236f750830 <line:227:3, col:17> col:8 __size 'char [56]'
| `-FieldDecl 0x56236f750898 <line:228:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x56236f750948 <line:230:1, col:30> col:30 referenced pthread_attr_t 'union pthread_attr_t':'union pthread_attr_t'
| `-ElaboratedType 0x56236f7508f0 'union pthread_attr_t' sugar
|   `-RecordType 0x56236f750770 'union pthread_attr_t'
|     `-Record 0x56236f7506e8 'pthread_attr_t'
|-RecordDecl 0x56236f7509a0 <line:231:9, line:235:1> line:231:16 struct __pthread_internal_list definition
| |-FieldDecl 0x56236f750b18 <line:233:3, col:35> col:35 __prev 'struct __pthread_internal_list *'
| `-FieldDecl 0x56236f750b90 <line:234:3, col:35> col:35 __next 'struct __pthread_internal_list *'
|-TypedefDecl 0x56236f750c40 <line:231:1, line:235:3> col:3 referenced __pthread_list_t 'struct __pthread_internal_list':'struct __pthread_internal_list'
| `-ElaboratedType 0x56236f750be0 'struct __pthread_internal_list' sugar
|   `-RecordType 0x56236f750a20 'struct __pthread_internal_list'
|     `-Record 0x56236f7509a0 '__pthread_internal_list'
|-RecordDecl 0x56236f750cb0 <line:236:9, line:250:1> line:236:9 union definition
| |-RecordDecl 0x56236f750d58 parent 0x56236f6dae18 <line:238:3, line:247:3> line:238:10 struct __pthread_mutex_s definition
| | |-FieldDecl 0x56236f750e30 <line:240:5, col:9> col:9 __lock 'int'
| | |-FieldDecl 0x56236f750e98 <line:241:5, col:18> col:18 __count 'unsigned int'
| | |-FieldDecl 0x56236f750f00 <line:242:5, col:9> col:9 __owner 'int'
| | |-FieldDecl 0x56236f750f68 <line:243:5, col:18> col:18 __nusers 'unsigned int'
| | |-FieldDecl 0x56236f750fd0 <line:244:5, col:9> col:9 __kind 'int'
| | |-FieldDecl 0x56236f751038 <line:245:5, col:9> col:9 __spins 'int'
| | `-FieldDecl 0x56236f755110 <line:246:5, col:22> col:22 __list '__pthread_list_t':'struct __pthread_internal_list'
| |-FieldDecl 0x56236f7551c0 <line:238:3, line:247:5> col:5 __data 'struct __pthread_mutex_s':'struct __pthread_mutex_s'
| |-FieldDecl 0x56236f7552b0 <line:248:3, col:17> col:8 __size 'char [40]'
| `-FieldDecl 0x56236f755318 <line:249:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x56236f7554a0 <line:236:1, line:250:3> col:3 referenced pthread_mutex_t 'union pthread_mutex_t':'pthread_mutex_t'
| `-ElaboratedType 0x56236f755440 'union pthread_mutex_t' sugar
|   `-RecordType 0x56236f750d30 'pthread_mutex_t'
|     `-Record 0x56236f750cb0 ''
|-RecordDecl 0x56236f755510 <line:251:9, line:255:1> line:251:9 union definition
| |-FieldDecl 0x56236f755650 <line:253:3, col:16> col:8 __size 'char [4]'
| `-FieldDecl 0x56236f7556b8 <line:254:3, col:7> col:7 __align 'int'
|-TypedefDecl 0x56236f755770 <line:251:1, line:255:3> col:3 referenced pthread_mutexattr_t 'union pthread_mutexattr_t':'pthread_mutexattr_t'
| `-ElaboratedType 0x56236f755710 'union pthread_mutexattr_t' sugar
|   `-RecordType 0x56236f755590 'pthread_mutexattr_t'
|     `-Record 0x56236f755510 ''
|-RecordDecl 0x56236f7557e0 <line:256:9, line:271:1> line:256:9 union definition
| |-RecordDecl 0x56236f755888 <line:258:3, line:268:3> line:258:3 struct definition
| | |-FieldDecl 0x56236f755950 <line:260:5, col:9> col:9 __lock 'int'
| | |-FieldDecl 0x56236f7559b8 <line:261:5, col:18> col:18 __futex 'unsigned int'
| | |-FieldDecl 0x56236f755a20 <line:262:19, col:42> col:42 __total_seq 'unsigned long long'
| | |-FieldDecl 0x56236f755a88 <line:263:19, col:42> col:42 __wakeup_seq 'unsigned long long'
| | |-FieldDecl 0x56236f755af0 <line:264:19, col:42> col:42 __woken_seq 'unsigned long long'
| | |-FieldDecl 0x56236f755b58 <line:265:5, col:11> col:11 __mutex 'void *'
| | |-FieldDecl 0x56236f755bc0 <line:266:5, col:18> col:18 __nwaiters 'unsigned int'
| | `-FieldDecl 0x56236f755c28 <line:267:5, col:18> col:18 __broadcast_seq 'unsigned int'
| |-FieldDecl 0x56236f755ce0 <line:258:3, line:268:5> col:5 __data 'struct (anonymous struct at ./split_9/rfi001_power.oepc_false-unreach-call.i:258:3)':'struct pthread_cond_t::(anonymous at ./split_9/rfi001_power.oepc_false-unreach-call.i:258:3)'
| |-FieldDecl 0x56236f755dd0 <line:269:3, col:17> col:8 __size 'char [48]'
| `-FieldDecl 0x56236f755e38 <line:270:17, col:31> col:31 __align 'long long'
|-TypedefDecl 0x56236f755f70 <line:256:1, line:271:3> col:3 referenced pthread_cond_t 'union pthread_cond_t':'pthread_cond_t'
| `-ElaboratedType 0x56236f755f10 'union pthread_cond_t' sugar
|   `-RecordType 0x56236f755860 'pthread_cond_t'
|     `-Record 0x56236f7557e0 ''
|-RecordDecl 0x56236f755fe0 <line:272:9, line:276:1> line:272:9 union definition
| |-FieldDecl 0x56236f757130 <line:274:3, col:16> col:8 __size 'char [4]'
| `-FieldDecl 0x56236f757198 <line:275:3, col:7> col:7 __align 'int'
|-TypedefDecl 0x56236f757250 <line:272:1, line:276:3> col:3 referenced pthread_condattr_t 'union pthread_condattr_t':'pthread_condattr_t'
| `-ElaboratedType 0x56236f7571f0 'union pthread_condattr_t' sugar
|   `-RecordType 0x56236f756060 'pthread_condattr_t'
|     `-Record 0x56236f755fe0 ''
|-TypedefDecl 0x56236f7572d8 <line:277:1, col:22> col:22 referenced pthread_key_t 'unsigned int'
| `-BuiltinType 0x56236f6dafb0 'unsigned int'
|-TypedefDecl 0x56236f757348 <line:278:1, col:13> col:13 referenced pthread_once_t 'int'
| `-BuiltinType 0x56236f6daf10 'int'
|-RecordDecl 0x56236f7573a0 <line:279:9, line:297:1> line:279:9 union definition
| |-RecordDecl 0x56236f757448 <line:281:3, line:294:3> line:281:3 struct definition
| | |-FieldDecl 0x56236f757510 <line:283:5, col:9> col:9 __lock 'int'
| | |-FieldDecl 0x56236f757578 <line:284:5, col:18> col:18 __nr_readers 'unsigned int'
| | |-FieldDecl 0x56236f7575e0 <line:285:5, col:18> col:18 __readers_wakeup 'unsigned int'
| | |-FieldDecl 0x56236f757648 <line:286:5, col:18> col:18 __writer_wakeup 'unsigned int'
| | |-FieldDecl 0x56236f7576b0 <line:287:5, col:18> col:18 __nr_readers_queued 'unsigned int'
| | |-FieldDecl 0x56236f757718 <line:288:5, col:18> col:18 __nr_writers_queued 'unsigned int'
| | |-FieldDecl 0x56236f757780 <line:289:5, col:9> col:9 __writer 'int'
| | |-FieldDecl 0x56236f7577e8 <line:290:5, col:9> col:9 __shared 'int'
| | |-FieldDecl 0x56236f757850 <line:291:5, col:23> col:23 __pad1 'unsigned long'
| | |-FieldDecl 0x56236f7578b8 <line:292:5, col:23> col:23 __pad2 'unsigned long'
| | `-FieldDecl 0x56236f757920 <line:293:5, col:18> col:18 __flags 'unsigned int'
| |-FieldDecl 0x56236f7579d0 <line:281:3, line:294:5> col:5 __data 'struct (anonymous struct at ./split_9/rfi001_power.oepc_false-unreach-call.i:281:3)':'struct pthread_rwlock_t::(anonymous at ./split_9/rfi001_power.oepc_false-unreach-call.i:281:3)'
| |-FieldDecl 0x56236f757a78 <line:295:3, col:17> col:8 __size 'char [56]'
| `-FieldDecl 0x56236f757ae0 <line:296:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x56236f757c30 <line:279:1, line:297:3> col:3 referenced pthread_rwlock_t 'union pthread_rwlock_t':'pthread_rwlock_t'
| `-ElaboratedType 0x56236f757bd0 'union pthread_rwlock_t' sugar
|   `-RecordType 0x56236f757420 'pthread_rwlock_t'
|     `-Record 0x56236f7573a0 ''
|-RecordDecl 0x56236f757ca0 <line:298:9, line:302:1> line:298:9 union definition
| |-FieldDecl 0x56236f757de0 <line:300:3, col:16> col:8 __size 'char [8]'
| `-FieldDecl 0x56236f757e48 <line:301:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x56236f757f00 <line:298:1, line:302:3> col:3 referenced pthread_rwlockattr_t 'union pthread_rwlockattr_t':'pthread_rwlockattr_t'
| `-ElaboratedType 0x56236f757ea0 'union pthread_rwlockattr_t' sugar
|   `-RecordType 0x56236f757d20 'pthread_rwlockattr_t'
|     `-Record 0x56236f757ca0 ''
|-TypedefDecl 0x56236f757f88 <line:303:1, col:22> col:22 referenced pthread_spinlock_t 'volatile int'
| `-QualType 0x56236f6daf14 'volatile int' volatile
|   `-BuiltinType 0x56236f6daf10 'int'
|-RecordDecl 0x56236f757fe0 <line:304:9, line:308:1> line:304:9 union definition
| |-FieldDecl 0x56236f759140 <line:306:3, col:17> col:8 __size 'char [32]'
| `-FieldDecl 0x56236f7591a8 <line:307:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x56236f759260 <line:304:1, line:308:3> col:3 referenced pthread_barrier_t 'union pthread_barrier_t':'pthread_barrier_t'
| `-ElaboratedType 0x56236f759200 'union pthread_barrier_t' sugar
|   `-RecordType 0x56236f758060 'pthread_barrier_t'
|     `-Record 0x56236f757fe0 ''
|-RecordDecl 0x56236f7592d0 <line:309:9, line:313:1> line:309:9 union definition
| |-FieldDecl 0x56236f7593d0 <line:311:3, col:16> col:8 __size 'char [4]'
| `-FieldDecl 0x56236f759438 <line:312:3, col:7> col:7 __align 'int'
|-TypedefDecl 0x56236f7594f0 <line:309:1, line:313:3> col:3 referenced pthread_barrierattr_t 'union pthread_barrierattr_t':'pthread_barrierattr_t'
| `-ElaboratedType 0x56236f759490 'union pthread_barrierattr_t' sugar
|   `-RecordType 0x56236f759350 'pthread_barrierattr_t'
|     `-Record 0x56236f7592d0 ''
|-TypedefDecl 0x56236f759608 <line:314:1, col:29> col:18 referenced __jmp_buf 'long [8]'
| `-ConstantArrayType 0x56236f7595a0 'long [8]' 8 
|   `-BuiltinType 0x56236f6daf30 'long'
|-EnumDecl 0x56236f759660 <line:315:1, line:319:1> line:315:1
| |-EnumConstantDecl 0x56236f759728 <line:317:3> col:3 PTHREAD_CREATE_JOINABLE 'int'
| `-EnumConstantDecl 0x56236f759778 <line:318:3> col:3 PTHREAD_CREATE_DETACHED 'int'
|-EnumDecl 0x56236f7597c8 <line:320:1, line:331:1> line:320:1
| |-EnumConstantDecl 0x56236f759898 <line:322:3> col:3 referenced PTHREAD_MUTEX_TIMED_NP 'int'
| |-EnumConstantDecl 0x56236f7598e8 <line:323:3> col:3 referenced PTHREAD_MUTEX_RECURSIVE_NP 'int'
| |-EnumConstantDecl 0x56236f759938 <line:324:3> col:3 referenced PTHREAD_MUTEX_ERRORCHECK_NP 'int'
| |-EnumConstantDecl 0x56236f759988 <line:325:3> col:3 PTHREAD_MUTEX_ADAPTIVE_NP 'int'
| |-EnumConstantDecl 0x56236f759a10 <line:327:3, col:26> col:3 referenced PTHREAD_MUTEX_NORMAL 'int'
| | `-ConstantExpr 0x56236f7599f8 <col:26> 'int'
| |   `-DeclRefExpr 0x56236f7599d8 <col:26> 'int' EnumConstant 0x56236f759898 'PTHREAD_MUTEX_TIMED_NP' 'int'
| |-EnumConstantDecl 0x56236f759a98 <line:328:3, col:29> col:3 PTHREAD_MUTEX_RECURSIVE 'int'
| | `-ConstantExpr 0x56236f759a80 <col:29> 'int'
| |   `-DeclRefExpr 0x56236f759a60 <col:29> 'int' EnumConstant 0x56236f7598e8 'PTHREAD_MUTEX_RECURSIVE_NP' 'int'
| |-EnumConstantDecl 0x56236f759b20 <line:329:3, col:30> col:3 PTHREAD_MUTEX_ERRORCHECK 'int'
| | `-ConstantExpr 0x56236f759b08 <col:30> 'int'
| |   `-DeclRefExpr 0x56236f759ae8 <col:30> 'int' EnumConstant 0x56236f759938 'PTHREAD_MUTEX_ERRORCHECK_NP' 'int'
| `-EnumConstantDecl 0x56236f759ba8 <line:330:3, col:27> col:3 PTHREAD_MUTEX_DEFAULT 'int'
|   `-ConstantExpr 0x56236f759b90 <col:27> 'int'
|     `-DeclRefExpr 0x56236f759b70 <col:27> 'int' EnumConstant 0x56236f759a10 'PTHREAD_MUTEX_NORMAL' 'int'
|-EnumDecl 0x56236f759bf8 <line:332:1, line:338:1> line:332:1
| |-EnumConstantDecl 0x56236f759cc8 <line:334:3> col:3 referenced PTHREAD_MUTEX_STALLED 'int'
| |-EnumConstantDecl 0x56236f759d50 <line:335:3, col:30> col:3 PTHREAD_MUTEX_STALLED_NP 'int'
| | `-ConstantExpr 0x56236f759d38 <col:30> 'int'
| |   `-DeclRefExpr 0x56236f759d18 <col:30> 'int' EnumConstant 0x56236f759cc8 'PTHREAD_MUTEX_STALLED' 'int'
| |-EnumConstantDecl 0x56236f759da0 <line:336:3> col:3 referenced PTHREAD_MUTEX_ROBUST 'int'
| `-EnumConstantDecl 0x56236f759e28 <line:337:3, col:29> col:3 PTHREAD_MUTEX_ROBUST_NP 'int'
|   `-ConstantExpr 0x56236f759e10 <col:29> 'int'
|     `-DeclRefExpr 0x56236f759df0 <col:29> 'int' EnumConstant 0x56236f759da0 'PTHREAD_MUTEX_ROBUST' 'int'
|-EnumDecl 0x56236f759e78 <line:339:1, line:344:1> line:339:1
| |-EnumConstantDecl 0x56236f759f48 <line:341:3> col:3 PTHREAD_PRIO_NONE 'int'
| |-EnumConstantDecl 0x56236f759f98 <line:342:3> col:3 PTHREAD_PRIO_INHERIT 'int'
| `-EnumConstantDecl 0x56236f759fe8 <line:343:3> col:3 PTHREAD_PRIO_PROTECT 'int'
|-EnumDecl 0x56236f75a038 <line:345:1, line:351:1> line:345:1
| |-EnumConstantDecl 0x56236f75a150 <line:347:3> col:3 referenced PTHREAD_RWLOCK_PREFER_READER_NP 'int'
| |-EnumConstantDecl 0x56236f75a1a0 <line:348:3> col:3 PTHREAD_RWLOCK_PREFER_WRITER_NP 'int'
| |-EnumConstantDecl 0x56236f75a1f0 <line:349:3> col:3 PTHREAD_RWLOCK_PREFER_WRITER_NONRECURSIVE_NP 'int'
| `-EnumConstantDecl 0x56236f75a278 <line:350:3, col:31> col:3 PTHREAD_RWLOCK_DEFAULT_NP 'int'
|   `-ConstantExpr 0x56236f75a260 <col:31> 'int'
|     `-DeclRefExpr 0x56236f75a240 <col:31> 'int' EnumConstant 0x56236f75a150 'PTHREAD_RWLOCK_PREFER_READER_NP' 'int'
|-EnumDecl 0x56236f75a2c8 <line:352:1, line:356:1> line:352:1
| |-EnumConstantDecl 0x56236f75a398 <line:354:3> col:3 PTHREAD_INHERIT_SCHED 'int'
| `-EnumConstantDecl 0x56236f75a3e8 <line:355:3> col:3 PTHREAD_EXPLICIT_SCHED 'int'
|-EnumDecl 0x56236f75a438 <line:357:1, line:361:1> line:357:1
| |-EnumConstantDecl 0x56236f75a508 <line:359:3> col:3 PTHREAD_SCOPE_SYSTEM 'int'
| `-EnumConstantDecl 0x56236f75a558 <line:360:3> col:3 PTHREAD_SCOPE_PROCESS 'int'
|-EnumDecl 0x56236f75a5a8 <line:362:1, line:366:1> line:362:1
| |-EnumConstantDecl 0x56236f75a678 <line:364:3> col:3 PTHREAD_PROCESS_PRIVATE 'int'
| `-EnumConstantDecl 0x56236f75a6c8 <line:365:3> col:3 PTHREAD_PROCESS_SHARED 'int'
|-RecordDecl 0x56236f75a718 <line:367:1, line:373:1> line:367:8 struct _pthread_cleanup_buffer definition
| |-FieldDecl 0x56236f75a958 <line:369:3, col:28> col:10 __routine 'void (*)(void *)'
| |-FieldDecl 0x56236f75a9c0 <line:370:3, col:9> col:9 __arg 'void *'
| |-FieldDecl 0x56236f75aa28 <line:371:3, col:7> col:7 __canceltype 'int'
| `-FieldDecl 0x56236f75ab48 <line:372:3, col:35> col:35 __prev 'struct _pthread_cleanup_buffer *'
|-EnumDecl 0x56236f75ab98 <line:374:1, line:378:1> line:374:1
| |-EnumConstantDecl 0x56236f75ac68 <line:376:3> col:3 PTHREAD_CANCEL_ENABLE 'int'
| `-EnumConstantDecl 0x56236f75acb8 <line:377:3> col:3 PTHREAD_CANCEL_DISABLE 'int'
|-EnumDecl 0x56236f75ad08 <line:379:1, line:383:1> line:379:1
| |-EnumConstantDecl 0x56236f75add8 <line:381:3> col:3 PTHREAD_CANCEL_DEFERRED 'int'
| `-EnumConstantDecl 0x56236f75ae28 <line:382:3> col:3 PTHREAD_CANCEL_ASYNCHRONOUS 'int'
|-FunctionDecl 0x56236f75b488 <line:385:1, line:388:96> line:385:12 used pthread_create 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' extern
| |-ParmVarDecl 0x56236f75af20 <col:28, col:50> col:50 __newthread 'pthread_t *restrict'
| |-ParmVarDecl 0x56236f75b030 <line:386:7, col:40> col:40 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x56236f75b270 <line:387:7, col:39> col:15 __start_routine 'void *(*)(void *)'
| |-ParmVarDecl 0x56236f75b2f0 <line:388:7, col:24> col:24 __arg 'void *restrict'
| |-NoThrowAttr 0x56236f75b548 <col:47>
| |-NonNullAttr 0x56236f75b5a0 <col:77, col:94> 1 3
| `-CallbackAttr 0x56236f75b5d8 <line:385:12> Implicit 2 3
|-FunctionDecl 0x56236f75b700 <line:389:1, col:72> col:13 pthread_exit 'void (void *) __attribute__((noreturn))' extern
| `-ParmVarDecl 0x56236f75b630 <col:27, col:33> col:33 __retval 'void *'
|-FunctionDecl 0x56236f75b958 <line:390:1, col:64> col:12 pthread_join 'int (pthread_t, void **)' extern
| |-ParmVarDecl 0x56236f75b7b8 <col:26, col:36> col:36 __th 'pthread_t':'unsigned long'
| `-ParmVarDecl 0x56236f75b838 <col:42, col:49> col:49 __thread_return 'void **'
|-FunctionDecl 0x56236f75bb28 <line:391:1, col:83> col:12 pthread_detach 'int (pthread_t)' extern
| |-ParmVarDecl 0x56236f75ba18 <col:28, col:38> col:38 __th 'pthread_t':'unsigned long'
| `-NoThrowAttr 0x56236f75bbd0 <col:60>
|-FunctionDecl 0x56236f75bd20 <line:392:1, col:105> col:18 pthread_self 'pthread_t (void)' extern
| |-NoThrowAttr 0x56236f75bdc0 <col:54>
| `-ConstAttr 0x56236f75be18 <col:95>
|-FunctionDecl 0x56236f75bfe8 <line:393:1, line:394:70> line:393:12 pthread_equal 'int (pthread_t, pthread_t)' extern
| |-ParmVarDecl 0x56236f75be50 <col:27, col:37> col:37 __thread1 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x56236f75bec8 <col:48, col:58> col:58 __thread2 'pthread_t':'unsigned long'
| |-NoThrowAttr 0x56236f75c098 <line:394:19>
| `-ConstAttr 0x56236f75c0f0 <col:60>
|-FunctionDecl 0x56236f75db08 <line:395:1, col:128> col:12 pthread_attr_init 'int (pthread_attr_t *)' extern
| |-ParmVarDecl 0x56236f75d9d0 <col:31, col:47> col:47 __attr 'pthread_attr_t *'
| |-NoThrowAttr 0x56236f75dbb0 <col:71>
| `-NonNullAttr 0x56236f75dc08 <col:112, col:126> 1
|-FunctionDecl 0x56236f75dd10 <line:396:1, line:397:79> line:396:12 pthread_attr_destroy 'int (pthread_attr_t *)' extern
| |-ParmVarDecl 0x56236f75dc58 <col:34, col:50> col:50 __attr 'pthread_attr_t *'
| |-NoThrowAttr 0x56236f75ddb8 <line:397:22>
| `-NonNullAttr 0x56236f75de10 <col:63, col:77> 1
|-FunctionDecl 0x56236f75e038 <line:398:1, line:400:82> line:398:12 pthread_attr_getdetachstate 'int (const pthread_attr_t *, int *)' extern
| |-ParmVarDecl 0x56236f75de58 <col:41, col:63> col:63 __attr 'const pthread_attr_t *'
| |-ParmVarDecl 0x56236f75ded8 <line:399:6, col:11> col:11 __detachstate 'int *'
| |-NoThrowAttr 0x56236f75e0e8 <line:400:22>
| `-NonNullAttr 0x56236f75e140 <col:63, col:80> 1 2
|-FunctionDecl 0x56236f75e348 <line:401:1, line:403:79> line:401:12 pthread_attr_setdetachstate 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x56236f75e188 <col:41, col:57> col:57 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x56236f75e208 <line:402:6, col:10> col:10 __detachstate 'int'
| |-NoThrowAttr 0x56236f75e3f8 <line:403:22>
| `-NonNullAttr 0x56236f75e450 <col:63, col:77> 1
|-FunctionDecl 0x56236f75e6a8 <line:404:1, line:406:82> line:404:12 pthread_attr_getguardsize 'int (const pthread_attr_t *, size_t *)' extern
| |-ParmVarDecl 0x56236f75e498 <col:39, col:61> col:61 __attr 'const pthread_attr_t *'
| |-ParmVarDecl 0x56236f75e540 <line:405:11, col:19> col:19 __guardsize 'size_t *'
| |-NoThrowAttr 0x56236f75e758 <line:406:22>
| `-NonNullAttr 0x56236f75e7b0 <col:63, col:80> 1 2
|-FunctionDecl 0x56236f75f9e8 <line:407:1, line:409:79> line:407:12 pthread_attr_setguardsize 'int (pthread_attr_t *, size_t)' extern
| |-ParmVarDecl 0x56236f75e7f8 <col:39, col:55> col:55 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x56236f75e870 <line:408:11, col:18> col:18 __guardsize 'size_t':'unsigned long'
| |-NoThrowAttr 0x56236f75fa98 <line:409:22>
| `-NonNullAttr 0x56236f75faf0 <col:63, col:77> 1
|-FunctionDecl 0x56236f75fd28 <line:410:1, line:412:82> line:410:12 pthread_attr_getschedparam 'int (const pthread_attr_t *restrict, struct sched_param *restrict)' extern
| |-ParmVarDecl 0x56236f75fb38 <col:40, col:73> col:73 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x56236f75fbc8 <line:411:12, col:43> col:43 __param 'struct sched_param *restrict'
| |-NoThrowAttr 0x56236f75fdd8 <line:412:22>
| `-NonNullAttr 0x56236f75fe30 <col:63, col:80> 1 2
|-FunctionDecl 0x56236f760068 <line:413:1, line:415:97> line:413:12 pthread_attr_setschedparam 'int (pthread_attr_t *restrict, const struct sched_param *restrict)' extern
| |-ParmVarDecl 0x56236f75fe78 <col:40, col:67> col:67 __attr 'pthread_attr_t *restrict'
| |-ParmVarDecl 0x56236f75ff08 <line:414:12, line:415:12> col:12 __param 'const struct sched_param *restrict'
| |-NoThrowAttr 0x56236f760118 <col:37>
| `-NonNullAttr 0x56236f760170 <col:78, col:95> 1 2
|-FunctionDecl 0x56236f760358 <line:416:1, line:418:82> line:416:12 pthread_attr_getschedpolicy 'int (const pthread_attr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x56236f7601b8 <col:41, line:417:6> col:6 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x56236f760238 <col:14, col:30> col:30 __policy 'int *restrict'
| |-NoThrowAttr 0x56236f760408 <line:418:22>
| `-NonNullAttr 0x56236f760460 <col:63, col:80> 1 2
|-FunctionDecl 0x56236f7605e8 <line:419:1, line:420:79> line:419:12 pthread_attr_setschedpolicy 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x56236f7604a8 <col:41, col:57> col:57 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x56236f760528 <col:65, col:69> col:69 __policy 'int'
| |-NoThrowAttr 0x56236f760698 <line:420:22>
| `-NonNullAttr 0x56236f7606f0 <col:63, col:77> 1
|-FunctionDecl 0x56236f760898 <line:421:1, line:423:82> line:421:12 pthread_attr_getinheritsched 'int (const pthread_attr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x56236f760738 <col:42, line:422:7> col:7 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x56236f7607b8 <col:15, col:31> col:31 __inherit 'int *restrict'
| |-NoThrowAttr 0x56236f760948 <line:423:22>
| `-NonNullAttr 0x56236f7609c0 <col:63, col:80> 1 2
|-FunctionDecl 0x56236f760b48 <line:424:1, line:426:79> line:424:12 pthread_attr_setinheritsched 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x56236f760a08 <col:42, col:58> col:58 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x56236f760a88 <line:425:7, col:11> col:11 __inherit 'int'
| |-NoThrowAttr 0x56236f760bf8 <line:426:22>
| `-NonNullAttr 0x56236f760c50 <col:63, col:77> 1
|-FunctionDecl 0x56236f760df8 <line:427:1, line:429:82> line:427:12 pthread_attr_getscope 'int (const pthread_attr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x56236f760c98 <col:35, col:68> col:68 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x56236f760d18 <line:428:7, col:23> col:23 __scope 'int *restrict'
| |-NoThrowAttr 0x56236f760ea8 <line:429:22>
| `-NonNullAttr 0x56236f760f00 <col:63, col:80> 1 2
|-FunctionDecl 0x56236f761088 <line:430:1, line:431:79> line:430:12 pthread_attr_setscope 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x56236f760f48 <col:35, col:51> col:51 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x56236f760fc8 <col:59, col:63> col:63 __scope 'int'
| |-NoThrowAttr 0x56236f761138 <line:431:22>
| `-NonNullAttr 0x56236f761190 <col:63, col:77> 1
|-FunctionDecl 0x56236f7613b8 <line:432:1, line:434:115> line:432:12 pthread_attr_getstackaddr 'int (const pthread_attr_t *restrict, void **restrict)' extern
| |-ParmVarDecl 0x56236f7611d8 <col:39, line:433:11> col:11 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x56236f761258 <col:19, col:37> col:37 __stackaddr 'void **restrict'
| |-NoThrowAttr 0x56236f761468 <line:434:22>
| |-NonNullAttr 0x56236f7614c0 <col:63, col:80> 1 2
| `-DeprecatedAttr 0x56236f7614f8 <col:100> "" ""
|-FunctionDecl 0x56236f761708 <line:435:1, line:437:112> line:435:12 pthread_attr_setstackaddr 'int (pthread_attr_t *, void *)' extern
| |-ParmVarDecl 0x56236f761548 <col:39, col:55> col:55 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x56236f7615c8 <line:436:11, col:17> col:17 __stackaddr 'void *'
| |-NoThrowAttr 0x56236f7617b8 <line:437:22>
| |-NonNullAttr 0x56236f761810 <col:63, col:77> 1
| `-DeprecatedAttr 0x56236f761848 <col:97> "" ""
|-FunctionDecl 0x56236f761a48 <line:438:1, line:440:82> line:438:12 pthread_attr_getstacksize 'int (const pthread_attr_t *restrict, size_t *restrict)' extern
| |-ParmVarDecl 0x56236f761898 <col:39, line:439:11> col:11 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x56236f761910 <col:19, col:38> col:38 __stacksize 'size_t *restrict'
| |-NoThrowAttr 0x56236f761af8 <line:440:22>
| `-NonNullAttr 0x56236f761b50 <col:63, col:80> 1 2
|-FunctionDecl 0x56236f761cd0 <line:441:1, line:443:79> line:441:12 pthread_attr_setstacksize 'int (pthread_attr_t *, size_t)' extern
| |-ParmVarDecl 0x56236f761b98 <col:39, col:55> col:55 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x56236f761c10 <line:442:11, col:18> col:18 __stacksize 'size_t':'unsigned long'
| |-NoThrowAttr 0x56236f761d80 <line:443:22>
| `-NonNullAttr 0x56236f761dd8 <col:63, col:77> 1
|-FunctionDecl 0x56236f7620c8 <line:444:1, line:447:85> line:444:12 pthread_attr_getstack 'int (const pthread_attr_t *restrict, void **restrict, size_t *restrict)' extern
| |-ParmVarDecl 0x56236f761e28 <col:35, col:68> col:68 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x56236f761ea8 <line:445:7, col:25> col:25 __stackaddr 'void **restrict'
| |-ParmVarDecl 0x56236f761f20 <line:446:7, col:26> col:26 __stacksize 'size_t *restrict'
| |-NoThrowAttr 0x56236f762180 <line:447:22>
| `-NonNullAttr 0x56236f7621d8 <col:63, col:83> 1 2 3
|-FunctionDecl 0x56236f762488 <line:448:1, line:449:100> line:448:12 pthread_attr_setstack 'int (pthread_attr_t *, void *, size_t)' extern
| |-ParmVarDecl 0x56236f762230 <col:35, col:51> col:51 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x56236f7622b0 <col:59, col:65> col:65 __stackaddr 'void *'
| |-ParmVarDecl 0x56236f762328 <line:449:7, col:14> col:14 __stacksize 'size_t':'unsigned long'
| |-NoThrowAttr 0x56236f762540 <col:43>
| `-NonNullAttr 0x56236f762598 <col:84, col:98> 1
|-FunctionDecl 0x56236f762858 <line:450:1, line:452:79> line:450:12 pthread_setschedparam 'int (pthread_t, int, const struct sched_param *)' extern
| |-ParmVarDecl 0x56236f7625e8 <col:35, col:45> col:45 __target_thread 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x56236f762668 <col:62, col:66> col:66 __policy 'int'
| |-ParmVarDecl 0x56236f7626f8 <line:451:7, col:33> col:33 __param 'const struct sched_param *'
| |-NoThrowAttr 0x56236f762910 <line:452:22>
| `-NonNullAttr 0x56236f762968 <col:63, col:77> 3
|-FunctionDecl 0x56236f762c78 <line:453:1, line:456:82> line:453:12 pthread_getschedparam 'int (pthread_t, int *restrict, struct sched_param *restrict)' extern
| |-ParmVarDecl 0x56236f7629e0 <col:35, col:45> col:45 __target_thread 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x56236f762a60 <line:454:7, col:23> col:23 __policy 'int *restrict'
| |-ParmVarDecl 0x56236f762af0 <line:455:7, col:38> col:38 __param 'struct sched_param *restrict'
| |-NoThrowAttr 0x56236f762d30 <line:456:22>
| `-NonNullAttr 0x56236f762d88 <col:63, col:80> 2 3
|-FunctionDecl 0x56236f762f78 <line:457:1, line:458:45> line:457:12 pthread_setschedprio 'int (pthread_t, int)' extern
| |-ParmVarDecl 0x56236f762dd8 <col:34, col:44> col:44 __target_thread 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x56236f762e58 <col:61, col:65> col:65 __prio 'int'
| `-NoThrowAttr 0x56236f763028 <line:458:22>
|-FunctionDecl 0x56236f7633f8 <line:459:1, line:460:71> line:459:12 pthread_once 'int (pthread_once_t *, void (*)(void))' extern
| |-ParmVarDecl 0x56236f7630f0 <col:26, col:42> col:42 __once_control 'pthread_once_t *'
| |-ParmVarDecl 0x56236f763290 <line:460:5, col:33> col:12 __init_routine 'void (*)(void)'
| `-NonNullAttr 0x56236f7634a8 <col:52, col:69> 1 2
|-FunctionDecl 0x56236f763650 <line:461:1, col:64> col:12 pthread_setcancelstate 'int (int, int *)' extern
| |-ParmVarDecl 0x56236f763530 <col:36, col:40> col:40 __state 'int'
| `-ParmVarDecl 0x56236f7635b0 <col:49, col:54> col:54 __oldstate 'int *'
|-FunctionDecl 0x56236f763838 <line:462:1, col:61> col:12 pthread_setcanceltype 'int (int, int *)' extern
| |-ParmVarDecl 0x56236f763718 <col:35, col:39> col:39 __type 'int'
| `-ParmVarDecl 0x56236f763798 <col:47, col:52> col:52 __oldtype 'int *'
|-FunctionDecl 0x56236f7639f0 <line:463:1, col:42> col:12 pthread_cancel 'int (pthread_t)' extern
| `-ParmVarDecl 0x56236f7638f8 <col:28, col:38> col:38 __th 'pthread_t':'unsigned long'
|-FunctionDecl 0x56236f763b30 <line:464:1, col:37> col:13 pthread_testcancel 'void (void)' extern
|-RecordDecl 0x56236f763bd0 <line:465:9, line:473:1> line:465:9 struct definition
| |-RecordDecl 0x56236f763c78 <line:467:3, line:471:3> line:467:3 struct definition
| | |-FieldDecl 0x56236f763d68 <line:469:5, col:15> col:15 __cancel_jmp_buf '__jmp_buf':'long [8]'
| | `-FieldDecl 0x56236f763dd0 <line:470:5, col:9> col:9 __mask_was_saved 'int'
| |-FieldDecl 0x56236f763fa0 <line:467:3, line:471:23> col:5 __cancel_jmp_buf 'struct (anonymous struct at ./split_9/rfi001_power.oepc_false-unreach-call.i:467:3) [1]'
| `-FieldDecl 0x56236f764098 <line:472:3, col:16> col:9 __pad 'void *[4]'
|-TypedefDecl 0x56236f764150 <line:465:1, line:473:3> col:3 referenced __pthread_unwind_buf_t 'struct __pthread_unwind_buf_t':'__pthread_unwind_buf_t'
| |-ElaboratedType 0x56236f7640f0 'struct __pthread_unwind_buf_t' sugar
| | `-RecordType 0x56236f763c50 '__pthread_unwind_buf_t'
| |   `-Record 0x56236f763bd0 ''
| `-AlignedAttr 0x56236f7641a8 <col:42> aligned
|   `-<<<NULL>>>
|-RecordDecl 0x56236f764220 <line:474:1, line:480:1> line:474:8 struct __pthread_cleanup_frame definition
| |-FieldDecl 0x56236f764380 <line:476:3, col:35> col:10 __cancel_routine 'void (*)(void *)'
| |-FieldDecl 0x56236f7643e8 <line:477:3, col:9> col:9 __cancel_arg 'void *'
| |-FieldDecl 0x56236f764450 <line:478:3, col:7> col:7 __do_it 'int'
| `-FieldDecl 0x56236f7644b8 <line:479:3, col:7> col:7 __cancel_type 'int'
|-FunctionDecl 0x56236f7646c0 <line:481:1, col:69> col:13 __pthread_register_cancel 'void (__pthread_unwind_buf_t *)' extern
| `-ParmVarDecl 0x56236f7645b0 <col:40, col:64> col:64 __buf '__pthread_unwind_buf_t *'
|-FunctionDecl 0x56236f764808 <line:483:1, col:71> col:13 __pthread_unregister_cancel 'void (__pthread_unwind_buf_t *)' extern
| `-ParmVarDecl 0x56236f764778 <col:42, col:66> col:66 __buf '__pthread_unwind_buf_t *'
|-FunctionDecl 0x56236f764a00 <line:485:1, line:487:31> line:485:13 __pthread_unwind_next 'void (__pthread_unwind_buf_t *) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x56236f7648c0 <col:36, col:60> col:60 __buf '__pthread_unwind_buf_t *'
| `-WeakAttr 0x56236f764aa8 <line:487:22>
|-RecordDecl 0x56236f764b00 <line:489:1, col:8> col:8 struct __jmp_buf_tag
|-FunctionDecl 0x56236f764e18 <line:490:1, col:98> col:12 __sigsetjmp 'int (struct __jmp_buf_tag *, int)' extern
| |-ParmVarDecl 0x56236f764c78 <col:25, col:47> col:47 __env 'struct __jmp_buf_tag *'
| |-ParmVarDecl 0x56236f764cf8 <col:54, col:58> col:58 __savemask 'int'
| |-NoThrowAttr 0x56236f764ec8 <col:86>
| `-ReturnsTwiceAttr 0x56236f764f20 <col:12> Implicit
|-FunctionDecl 0x56236f765248 <line:491:1, line:493:79> line:491:12 pthread_mutex_init 'int (pthread_mutex_t *, const pthread_mutexattr_t *)' extern
| |-ParmVarDecl 0x56236f764ff0 <col:32, col:49> col:49 __mutex 'pthread_mutex_t *'
| |-ParmVarDecl 0x56236f765100 <line:492:11, col:38> col:38 __mutexattr 'const pthread_mutexattr_t *'
| |-NoThrowAttr 0x56236f7652f8 <line:493:22>
| `-NonNullAttr 0x56236f765350 <col:63, col:77> 1
|-FunctionDecl 0x56236f7654c8 <line:494:1, line:495:79> line:494:12 pthread_mutex_destroy 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x56236f765398 <col:35, col:52> col:52 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x56236f765570 <line:495:22>
| `-NonNullAttr 0x56236f7655c8 <col:63, col:77> 1
|-FunctionDecl 0x56236f7656d0 <line:496:1, line:497:68> line:496:12 pthread_mutex_trylock 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x56236f765618 <col:35, col:52> col:52 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x56236f765778 <line:497:22>
| `-NonNullAttr 0x56236f7657d0 <col:52, col:66> 1
|-FunctionDecl 0x56236f7658d0 <line:498:1, line:499:68> line:498:12 pthread_mutex_lock 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x56236f765818 <col:32, col:49> col:49 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x56236f765978 <line:499:22>
| `-NonNullAttr 0x56236f7659d0 <col:52, col:66> 1
|-FunctionDecl 0x56236f766c28 <line:500:1, line:502:85> line:500:12 pthread_mutex_timedlock 'int (pthread_mutex_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x56236f766a38 <col:37, col:65> col:65 __mutex 'pthread_mutex_t *restrict'
| |-ParmVarDecl 0x56236f766ac8 <line:501:9, line:502:9> col:9 __abstime 'const struct timespec *restrict'
| |-NoThrowAttr 0x56236f766cd8 <col:36>
| `-NonNullAttr 0x56236f766d30 <col:66, col:83> 1 2
|-FunctionDecl 0x56236f766e30 <line:503:1, line:504:68> line:503:12 pthread_mutex_unlock 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x56236f766d78 <col:34, col:51> col:51 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x56236f766ed8 <line:504:22>
| `-NonNullAttr 0x56236f766f30 <col:52, col:66> 1
|-FunctionDecl 0x56236f7671c8 <line:505:1, line:508:82> line:505:12 pthread_mutex_getprioceiling 'int (const pthread_mutex_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x56236f766fe0 <col:42, line:506:18> col:18 __mutex 'const pthread_mutex_t *restrict'
| |-ParmVarDecl 0x56236f767060 <line:507:7, col:23> col:23 __prioceiling 'int *restrict'
| |-NoThrowAttr 0x56236f767278 <line:508:22>
| `-NonNullAttr 0x56236f7672d0 <col:63, col:80> 1 2
|-FunctionDecl 0x56236f767598 <line:509:1, line:512:82> line:509:12 pthread_mutex_setprioceiling 'int (pthread_mutex_t *restrict, int, int *restrict)' extern
| |-ParmVarDecl 0x56236f767318 <col:42, col:70> col:70 __mutex 'pthread_mutex_t *restrict'
| |-ParmVarDecl 0x56236f767398 <line:510:7, col:11> col:11 __prioceiling 'int'
| |-ParmVarDecl 0x56236f767418 <line:511:7, col:23> col:23 __old_ceiling 'int *restrict'
| |-NoThrowAttr 0x56236f767650 <line:512:22>
| `-NonNullAttr 0x56236f7676a8 <col:63, col:80> 1 3
|-FunctionDecl 0x56236f7677b0 <line:513:1, line:514:79> line:513:12 pthread_mutex_consistent 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x56236f7676f8 <col:38, col:55> col:55 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x56236f767858 <line:514:22>
| `-NonNullAttr 0x56236f7678b0 <col:63, col:77> 1
|-FunctionDecl 0x56236f767ad8 <line:515:1, line:516:79> line:515:12 pthread_mutexattr_init 'int (pthread_mutexattr_t *)' extern
| |-ParmVarDecl 0x56236f767960 <col:36, col:57> col:57 __attr 'pthread_mutexattr_t *'
| |-NoThrowAttr 0x56236f767b80 <line:516:22>
| `-NonNullAttr 0x56236f767bd8 <col:63, col:77> 1
|-FunctionDecl 0x56236f767ce0 <line:517:1, line:518:79> line:517:12 pthread_mutexattr_destroy 'int (pthread_mutexattr_t *)' extern
| |-ParmVarDecl 0x56236f767c28 <col:39, col:60> col:60 __attr 'pthread_mutexattr_t *'
| |-NoThrowAttr 0x56236f767d88 <line:518:22>
| `-NonNullAttr 0x56236f767de0 <col:63, col:77> 1
|-FunctionDecl 0x56236f768008 <line:519:1, line:522:82> line:519:12 pthread_mutexattr_getpshared 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x56236f767e28 <col:42, line:520:18> col:18 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x56236f767ea8 <line:521:7, col:23> col:23 __pshared 'int *restrict'
| |-NoThrowAttr 0x56236f7680b8 <line:522:22>
| `-NonNullAttr 0x56236f768110 <col:63, col:80> 1 2
|-FunctionDecl 0x56236f768318 <line:523:1, line:525:79> line:523:12 pthread_mutexattr_setpshared 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x56236f768158 <col:42, col:63> col:63 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x56236f7681d8 <line:524:7, col:11> col:11 __pshared 'int'
| |-NoThrowAttr 0x56236f7683c8 <line:525:22>
| `-NonNullAttr 0x56236f768420 <col:63, col:77> 1
|-FunctionDecl 0x56236f7685c8 <line:526:1, line:528:82> line:526:12 pthread_mutexattr_gettype 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x56236f768468 <col:39, line:527:11> col:11 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x56236f7684e8 <col:19, col:35> col:35 __kind 'int *restrict'
| |-NoThrowAttr 0x56236f768678 <line:528:22>
| `-NonNullAttr 0x56236f7686d0 <col:63, col:80> 1 2
|-FunctionDecl 0x56236f768858 <line:529:1, line:530:79> line:529:12 pthread_mutexattr_settype 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x56236f768718 <col:39, col:60> col:60 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x56236f768798 <col:68, col:72> col:72 __kind 'int'
| |-NoThrowAttr 0x56236f768908 <line:530:22>
| `-NonNullAttr 0x56236f768960 <col:63, col:77> 1
|-FunctionDecl 0x56236f768b20 <line:531:1, line:534:82> line:531:12 pthread_mutexattr_getprotocol 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x56236f7689a8 <col:43, line:532:19> col:19 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x56236f768a40 <line:533:8, col:24> col:24 __protocol 'int *restrict'
| |-NoThrowAttr 0x56236f768bd0 <line:534:22>
| `-NonNullAttr 0x56236f768c28 <col:63, col:80> 1 2
|-FunctionDecl 0x56236f768db8 <line:535:1, line:537:79> line:535:12 pthread_mutexattr_setprotocol 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x56236f768c78 <col:43, col:64> col:64 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x56236f768cf8 <line:536:8, col:12> col:12 __protocol 'int'
| |-NoThrowAttr 0x56236f768e68 <line:537:22>
| `-NonNullAttr 0x56236f768ec0 <col:63, col:77> 1
|-FunctionDecl 0x56236f769068 <line:538:1, line:541:82> line:538:12 pthread_mutexattr_getprioceiling 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x56236f768f08 <col:46, line:539:22> col:22 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x56236f768f88 <line:540:11, col:27> col:27 __prioceiling 'int *restrict'
| |-NoThrowAttr 0x56236f769118 <line:541:22>
| `-NonNullAttr 0x56236f769170 <col:63, col:80> 1 2
|-FunctionDecl 0x56236f7692f8 <line:542:1, line:544:79> line:542:12 pthread_mutexattr_setprioceiling 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x56236f7691b8 <col:46, col:67> col:67 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x56236f769238 <line:543:11, col:15> col:15 __prioceiling 'int'
| |-NoThrowAttr 0x56236f7693a8 <line:544:22>
| `-NonNullAttr 0x56236f769400 <col:63, col:77> 1
|-FunctionDecl 0x56236f7695e8 <line:545:1, line:547:82> line:545:12 pthread_mutexattr_getrobust 'int (const pthread_mutexattr_t *, int *)' extern
| |-ParmVarDecl 0x56236f769448 <col:41, col:68> col:68 __attr 'const pthread_mutexattr_t *'
| |-ParmVarDecl 0x56236f7694c8 <line:546:6, col:11> col:11 __robustness 'int *'
| |-NoThrowAttr 0x56236f769698 <line:547:22>
| `-NonNullAttr 0x56236f7696f0 <col:63, col:80> 1 2
|-FunctionDecl 0x56236f769878 <line:548:1, line:550:79> line:548:12 pthread_mutexattr_setrobust 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x56236f769738 <col:41, col:62> col:62 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x56236f7697b8 <line:549:6, col:10> col:10 __robustness 'int'
| |-NoThrowAttr 0x56236f769928 <line:550:22>
| `-NonNullAttr 0x56236f769980 <col:63, col:77> 1
|-FunctionDecl 0x56236f76acf8 <line:551:1, line:553:86> line:551:12 pthread_rwlock_init 'int (pthread_rwlock_t *restrict, const pthread_rwlockattr_t *restrict)' extern
| |-ParmVarDecl 0x56236f76aaa0 <col:33, col:62> col:62 __rwlock 'pthread_rwlock_t *restrict'
| |-ParmVarDecl 0x56236f76abb0 <line:552:5, line:553:5> col:5 __attr 'const pthread_rwlockattr_t *restrict'
| |-NoThrowAttr 0x56236f76ada8 <col:29>
| `-NonNullAttr 0x56236f76ae00 <col:70, col:84> 1
|-FunctionDecl 0x56236f76af78 <line:554:1, line:555:79> line:554:12 pthread_rwlock_destroy 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x56236f76ae48 <col:36, col:54> col:54 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x56236f76b020 <line:555:22>
| `-NonNullAttr 0x56236f76b078 <col:63, col:77> 1
|-FunctionDecl 0x56236f76b180 <line:556:1, line:557:68> line:556:12 pthread_rwlock_rdlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x56236f76b0c8 <col:35, col:53> col:53 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x56236f76b228 <line:557:22>
| `-NonNullAttr 0x56236f76b280 <col:52, col:66> 1
|-FunctionDecl 0x56236f76b380 <line:558:1, line:559:65> line:558:12 pthread_rwlock_tryrdlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x56236f76b2c8 <col:38, col:56> col:56 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x56236f76b428 <line:559:19>
| `-NonNullAttr 0x56236f76b480 <col:49, col:63> 1
|-FunctionDecl 0x56236f76b6b8 <line:560:1, line:562:88> line:560:12 pthread_rwlock_timedrdlock 'int (pthread_rwlock_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x56236f76b4c8 <col:40, col:69> col:69 __rwlock 'pthread_rwlock_t *restrict'
| |-ParmVarDecl 0x56236f76b558 <line:561:12, line:562:12> col:12 __abstime 'const struct timespec *restrict'
| |-NoThrowAttr 0x56236f76b768 <col:39>
| `-NonNullAttr 0x56236f76b7c0 <col:69, col:86> 1 2
|-FunctionDecl 0x56236f76b8c0 <line:563:1, line:564:68> line:563:12 pthread_rwlock_wrlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x56236f76b808 <col:35, col:53> col:53 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x56236f76b968 <line:564:22>
| `-NonNullAttr 0x56236f76b9c0 <col:52, col:66> 1
|-FunctionDecl 0x56236f76bb28 <line:565:1, line:566:68> line:565:12 pthread_rwlock_trywrlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x56236f76ba70 <col:38, col:56> col:56 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x56236f76bbd0 <line:566:22>
| `-NonNullAttr 0x56236f76bc28 <col:52, col:66> 1
|-FunctionDecl 0x56236f76bde8 <line:567:1, line:569:88> line:567:12 pthread_rwlock_timedwrlock 'int (pthread_rwlock_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x56236f76bc78 <col:40, col:69> col:69 __rwlock 'pthread_rwlock_t *restrict'
| |-ParmVarDecl 0x56236f76bd08 <line:568:12, line:569:12> col:12 __abstime 'const struct timespec *restrict'
| |-NoThrowAttr 0x56236f76be98 <col:39>
| `-NonNullAttr 0x56236f76bef0 <col:69, col:86> 1 2
|-FunctionDecl 0x56236f76bff0 <line:570:1, line:571:68> line:570:12 pthread_rwlock_unlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x56236f76bf38 <col:35, col:53> col:53 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x56236f76c098 <line:571:22>
| `-NonNullAttr 0x56236f76c0f0 <col:52, col:66> 1
|-FunctionDecl 0x56236f76c2d8 <line:572:1, line:573:79> line:572:12 pthread_rwlockattr_init 'int (pthread_rwlockattr_t *)' extern
| |-ParmVarDecl 0x56236f76c1a0 <col:37, col:59> col:59 __attr 'pthread_rwlockattr_t *'
| |-NoThrowAttr 0x56236f76c380 <line:573:22>
| `-NonNullAttr 0x56236f76c3d8 <col:63, col:77> 1
|-FunctionDecl 0x56236f76c4e0 <line:574:1, line:575:79> line:574:12 pthread_rwlockattr_destroy 'int (pthread_rwlockattr_t *)' extern
| |-ParmVarDecl 0x56236f76c428 <col:40, col:62> col:62 __attr 'pthread_rwlockattr_t *'
| |-NoThrowAttr 0x56236f76c588 <line:575:22>
| `-NonNullAttr 0x56236f76c5e0 <col:63, col:77> 1
|-FunctionDecl 0x56236f76c808 <line:576:1, line:579:82> line:576:12 pthread_rwlockattr_getpshared 'int (const pthread_rwlockattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x56236f76c628 <col:43, line:577:19> col:19 __attr 'const pthread_rwlockattr_t *restrict'
| |-ParmVarDecl 0x56236f76c6a8 <line:578:8, col:24> col:24 __pshared 'int *restrict'
| |-NoThrowAttr 0x56236f76c8b8 <line:579:22>
| `-NonNullAttr 0x56236f76c910 <col:63, col:80> 1 2
|-FunctionDecl 0x56236f76cb38 <line:580:1, line:582:79> line:580:12 pthread_rwlockattr_setpshared 'int (pthread_rwlockattr_t *, int)' extern
| |-ParmVarDecl 0x56236f76c958 <col:43, col:65> col:65 __attr 'pthread_rwlockattr_t *'
| |-ParmVarDecl 0x56236f76c9d8 <line:581:8, col:12> col:12 __pshared 'int'
| |-NoThrowAttr 0x56236f76cbe8 <line:582:22>
| `-NonNullAttr 0x56236f76cc40 <col:63, col:77> 1
|-FunctionDecl 0x56236f76cde8 <line:583:1, line:586:82> line:583:12 pthread_rwlockattr_getkind_np 'int (const pthread_rwlockattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x56236f76cc88 <col:43, line:584:19> col:19 __attr 'const pthread_rwlockattr_t *restrict'
| |-ParmVarDecl 0x56236f76cd08 <line:585:8, col:24> col:24 __pref 'int *restrict'
| |-NoThrowAttr 0x56236f76ce98 <line:586:22>
| `-NonNullAttr 0x56236f76cef0 <col:63, col:80> 1 2
|-FunctionDecl 0x56236f76d078 <line:587:1, line:588:93> line:587:12 pthread_rwlockattr_setkind_np 'int (pthread_rwlockattr_t *, int)' extern
| |-ParmVarDecl 0x56236f76cf38 <col:43, col:65> col:65 __attr 'pthread_rwlockattr_t *'
| |-ParmVarDecl 0x56236f76cfb8 <line:588:8, col:12> col:12 __pref 'int'
| |-NoThrowAttr 0x56236f76d128 <col:36>
| `-NonNullAttr 0x56236f76d180 <col:77, col:91> 1
|-FunctionDecl 0x56236f76d4b8 <line:589:1, line:591:79> line:589:12 pthread_cond_init 'int (pthread_cond_t *restrict, const pthread_condattr_t *restrict)' extern
| |-ParmVarDecl 0x56236f76d260 <col:31, col:58> col:58 __cond 'pthread_cond_t *restrict'
| |-ParmVarDecl 0x56236f76d370 <line:590:10, col:47> col:47 __cond_attr 'const pthread_condattr_t *restrict'
| |-NoThrowAttr 0x56236f76d568 <line:591:22>
| `-NonNullAttr 0x56236f76d5c0 <col:63, col:77> 1
|-FunctionDecl 0x56236f76d738 <line:592:1, line:593:79> line:592:12 pthread_cond_destroy 'int (pthread_cond_t *)' extern
| |-ParmVarDecl 0x56236f76d608 <col:34, col:50> col:50 __cond 'pthread_cond_t *'
| |-NoThrowAttr 0x56236f76d7e0 <line:593:22>
| `-NonNullAttr 0x56236f76d838 <col:63, col:77> 1
|-FunctionDecl 0x56236f76d940 <line:594:1, line:595:68> line:594:12 pthread_cond_signal 'int (pthread_cond_t *)' extern
| |-ParmVarDecl 0x56236f76d888 <col:33, col:49> col:49 __cond 'pthread_cond_t *'
| |-NoThrowAttr 0x56236f76d9e8 <line:595:22>
| `-NonNullAttr 0x56236f76da40 <col:52, col:66> 1
|-FunctionDecl 0x56236f76db58 <line:596:1, line:597:68> line:596:12 pthread_cond_broadcast 'int (pthread_cond_t *)' extern
| |-ParmVarDecl 0x56236f76daa0 <col:36, col:52> col:52 __cond 'pthread_cond_t *'
| |-NoThrowAttr 0x56236f76dc00 <line:597:22>
| `-NonNullAttr 0x56236f76dc58 <col:52, col:66> 1
|-FunctionDecl 0x56236f76de88 <line:598:1, line:600:41> line:598:12 pthread_cond_wait 'int (pthread_cond_t *restrict, pthread_mutex_t *restrict)' extern
| |-ParmVarDecl 0x56236f76dca8 <col:31, col:58> col:58 __cond 'pthread_cond_t *restrict'
| |-ParmVarDecl 0x56236f76dd20 <line:599:10, col:38> col:38 __mutex 'pthread_mutex_t *restrict'
| `-NonNullAttr 0x56236f76df38 <line:600:22, col:39> 1 2
|-FunctionDecl 0x56236f76e268 <line:601:1, line:604:44> line:601:12 pthread_cond_timedwait 'int (pthread_cond_t *restrict, pthread_mutex_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x56236f76dfb8 <col:36, col:63> col:63 __cond 'pthread_cond_t *restrict'
| |-ParmVarDecl 0x56236f76e030 <line:602:8, col:36> col:36 __mutex 'pthread_mutex_t *restrict'
| |-ParmVarDecl 0x56236f76e0c0 <line:603:8, col:42> col:42 __abstime 'const struct timespec *restrict'
| `-NonNullAttr 0x56236f76e320 <line:604:22, col:42> 1 2 3
|-FunctionDecl 0x56236f76e538 <line:605:1, line:606:79> line:605:12 pthread_condattr_init 'int (pthread_condattr_t *)' extern
| |-ParmVarDecl 0x56236f76e400 <col:35, col:55> col:55 __attr 'pthread_condattr_t *'
| |-NoThrowAttr 0x56236f76e5e0 <line:606:22>
| `-NonNullAttr 0x56236f76e638 <col:63, col:77> 1
|-FunctionDecl 0x56236f76e740 <line:607:1, line:608:79> line:607:12 pthread_condattr_destroy 'int (pthread_condattr_t *)' extern
| |-ParmVarDecl 0x56236f76e688 <col:38, col:58> col:58 __attr 'pthread_condattr_t *'
| |-NoThrowAttr 0x56236f76e7e8 <line:608:22>
| `-NonNullAttr 0x56236f76e840 <col:63, col:77> 1
|-FunctionDecl 0x56236f76eaa0 <line:609:1, line:612:82> line:609:12 pthread_condattr_getpshared 'int (const pthread_condattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x56236f76e888 <col:41, line:610:17> col:17 __attr 'const pthread_condattr_t *restrict'
| |-ParmVarDecl 0x56236f76e908 <line:611:6, col:22> col:22 __pshared 'int *restrict'
| |-NoThrowAttr 0x56236f76eb50 <line:612:22>
| `-NonNullAttr 0x56236f76eba8 <col:63, col:80> 1 2
|-FunctionDecl 0x56236f76edb8 <line:613:1, line:614:94> line:613:12 pthread_condattr_setpshared 'int (pthread_condattr_t *, int)' extern
| |-ParmVarDecl 0x56236f76ebf8 <col:41, col:61> col:61 __attr 'pthread_condattr_t *'
| |-ParmVarDecl 0x56236f76ec78 <line:614:6, col:10> col:10 __pshared 'int'
| |-NoThrowAttr 0x56236f76ee68 <col:37>
| `-NonNullAttr 0x56236f76eec0 <col:78, col:92> 1
|-FunctionDecl 0x56236f76f0d8 <line:615:1, line:618:82> line:615:12 pthread_condattr_getclock 'int (const pthread_condattr_t *restrict, __clockid_t *restrict)' extern
| |-ParmVarDecl 0x56236f76ef08 <col:39, line:616:22> col:22 __attr 'const pthread_condattr_t *restrict'
| |-ParmVarDecl 0x56236f76efb0 <line:617:11, col:35> col:35 __clock_id '__clockid_t *restrict'
| |-NoThrowAttr 0x56236f76f188 <line:618:22>
| `-NonNullAttr 0x56236f76f1e0 <col:63, col:80> 1 2
|-FunctionDecl 0x56236f76f3a8 <line:619:1, line:621:79> line:619:12 pthread_condattr_setclock 'int (pthread_condattr_t *, __clockid_t)' extern
| |-ParmVarDecl 0x56236f76f228 <col:39, col:59> col:59 __attr 'pthread_condattr_t *'
| |-ParmVarDecl 0x56236f76f2a0 <line:620:11, col:23> col:23 __clock_id '__clockid_t':'int'
| |-NoThrowAttr 0x56236f76f458 <line:621:22>
| `-NonNullAttr 0x56236f76f4b0 <col:63, col:77> 1
|-FunctionDecl 0x56236f76f758 <line:622:1, line:623:79> line:622:12 pthread_spin_init 'int (pthread_spinlock_t *, int)' extern
| |-ParmVarDecl 0x56236f76f590 <col:31, col:51> col:51 __lock 'pthread_spinlock_t *'
| |-ParmVarDecl 0x56236f76f610 <col:59, col:63> col:63 __pshared 'int'
| |-NoThrowAttr 0x56236f76f808 <line:623:22>
| `-NonNullAttr 0x56236f76f860 <col:63, col:77> 1
|-FunctionDecl 0x56236f76f9d8 <line:624:1, line:625:79> line:624:12 pthread_spin_destroy 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x56236f76f8a8 <col:34, col:54> col:54 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x56236f76fab0 <line:625:22>
| `-NonNullAttr 0x56236f76fb08 <col:63, col:77> 1
|-FunctionDecl 0x56236f76fc10 <line:626:1, line:627:68> line:626:12 pthread_spin_lock 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x56236f76fb58 <col:31, col:51> col:51 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x56236f76fcb8 <line:627:22>
| `-NonNullAttr 0x56236f76fd10 <col:52, col:66> 1
|-FunctionDecl 0x56236f76fe10 <line:628:1, line:629:68> line:628:12 pthread_spin_trylock 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x56236f76fd58 <col:34, col:54> col:54 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x56236f76feb8 <line:629:22>
| `-NonNullAttr 0x56236f76ff10 <col:52, col:66> 1
|-FunctionDecl 0x56236f770010 <line:630:1, line:631:68> line:630:12 pthread_spin_unlock 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x56236f76ff58 <col:33, col:53> col:53 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x56236f7700b8 <line:631:22>
| `-NonNullAttr 0x56236f770110 <col:52, col:66> 1
|-FunctionDecl 0x56236f7704e8 <line:632:1, line:635:79> line:632:12 pthread_barrier_init 'int (pthread_barrier_t *restrict, const pthread_barrierattr_t *restrict, unsigned int)' extern
| |-ParmVarDecl 0x56236f7701f0 <col:34, col:64> col:64 __barrier 'pthread_barrier_t *restrict'
| |-ParmVarDecl 0x56236f770300 <line:633:6, line:634:6> col:6 __attr 'const pthread_barrierattr_t *restrict'
| |-ParmVarDecl 0x56236f770380 <col:14, col:27> col:27 __count 'unsigned int'
| |-NoThrowAttr 0x56236f7705a0 <line:635:22>
| `-NonNullAttr 0x56236f7705f8 <col:63, col:77> 1
|-FunctionDecl 0x56236f770778 <line:636:1, line:637:79> line:636:12 pthread_barrier_destroy 'int (pthread_barrier_t *)' extern
| |-ParmVarDecl 0x56236f770648 <col:37, col:56> col:56 __barrier 'pthread_barrier_t *'
| |-NoThrowAttr 0x56236f770820 <line:637:22>
| `-NonNullAttr 0x56236f770878 <col:63, col:77> 1
|-FunctionDecl 0x56236f770980 <line:638:1, line:639:68> line:638:12 pthread_barrier_wait 'int (pthread_barrier_t *)' extern
| |-ParmVarDecl 0x56236f7708c8 <col:34, col:53> col:53 __barrier 'pthread_barrier_t *'
| |-NoThrowAttr 0x56236f770a28 <line:639:22>
| `-NonNullAttr 0x56236f770a80 <col:52, col:66> 1
|-FunctionDecl 0x56236f771c88 <line:640:1, line:641:79> line:640:12 pthread_barrierattr_init 'int (pthread_barrierattr_t *)' extern
| |-ParmVarDecl 0x56236f771b50 <col:38, col:61> col:61 __attr 'pthread_barrierattr_t *'
| |-NoThrowAttr 0x56236f771d30 <line:641:22>
| `-NonNullAttr 0x56236f771d88 <col:63, col:77> 1
|-FunctionDecl 0x56236f771e90 <line:642:1, line:643:79> line:642:12 pthread_barrierattr_destroy 'int (pthread_barrierattr_t *)' extern
| |-ParmVarDecl 0x56236f771dd8 <col:41, col:64> col:64 __attr 'pthread_barrierattr_t *'
| |-NoThrowAttr 0x56236f771f38 <line:643:22>
| `-NonNullAttr 0x56236f771f90 <col:63, col:77> 1
|-FunctionDecl 0x56236f7721b8 <line:644:1, line:647:82> line:644:12 pthread_barrierattr_getpshared 'int (const pthread_barrierattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x56236f771fd8 <col:44, line:645:20> col:20 __attr 'const pthread_barrierattr_t *restrict'
| |-ParmVarDecl 0x56236f772058 <line:646:9, col:25> col:25 __pshared 'int *restrict'
| |-NoThrowAttr 0x56236f772268 <line:647:22>
| `-NonNullAttr 0x56236f7722c0 <col:63, col:80> 1 2
|-FunctionDecl 0x56236f7724c8 <line:648:1, line:650:79> line:648:12 pthread_barrierattr_setpshared 'int (pthread_barrierattr_t *, int)' extern
| |-ParmVarDecl 0x56236f772308 <col:44, col:67> col:67 __attr 'pthread_barrierattr_t *'
| |-ParmVarDecl 0x56236f772388 <line:649:9, col:13> col:13 __pshared 'int'
| |-NoThrowAttr 0x56236f772578 <line:650:22>
| `-NonNullAttr 0x56236f7725d0 <col:63, col:77> 1
|-FunctionDecl 0x56236f772918 <line:651:1, line:653:79> line:651:12 pthread_key_create 'int (pthread_key_t *, void (*)(void *))' extern
| |-ParmVarDecl 0x56236f7726b0 <col:32, col:47> col:47 __key 'pthread_key_t *'
| |-ParmVarDecl 0x56236f7727d0 <line:652:11, col:43> col:18 __destr_function 'void (*)(void *)'
| |-NoThrowAttr 0x56236f7729c8 <line:653:22>
| `-NonNullAttr 0x56236f772a20 <col:63, col:77> 1
|-FunctionDecl 0x56236f772b88 <line:654:1, col:92> col:12 pthread_key_delete 'int (pthread_key_t)' extern
| |-ParmVarDecl 0x56236f772a68 <col:32, col:46> col:46 __key 'pthread_key_t':'unsigned int'
| `-NoThrowAttr 0x56236f772c30 <col:69>
|-FunctionDecl 0x56236f772da8 <line:655:1, col:95> col:14 pthread_getspecific 'void *(pthread_key_t)' extern
| |-ParmVarDecl 0x56236f772c98 <col:35, col:49> col:49 __key 'pthread_key_t':'unsigned int'
| `-NoThrowAttr 0x56236f772e50 <col:72>
|-FunctionDecl 0x56236f773088 <line:656:1, line:657:67> line:656:12 pthread_setspecific 'int (pthread_key_t, const void *)' extern
| |-ParmVarDecl 0x56236f772eb8 <col:33, col:47> col:47 __key 'pthread_key_t':'unsigned int'
| |-ParmVarDecl 0x56236f772f68 <line:657:5, col:17> col:17 __pointer 'const void *'
| `-NoThrowAttr 0x56236f773138 <col:44>
|-FunctionDecl 0x56236f773358 <line:658:1, line:660:79> line:658:12 pthread_getcpuclockid 'int (pthread_t, __clockid_t *)' extern
| |-ParmVarDecl 0x56236f7731a0 <col:35, col:45> col:45 __thread_id 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x56236f773218 <line:659:7, col:20> col:20 __clock_id '__clockid_t *'
| |-NoThrowAttr 0x56236f773408 <line:660:22>
| `-NonNullAttr 0x56236f773460 <col:63, col:77> 2
|-FunctionDecl 0x56236f7738a8 <line:661:1, line:663:70> line:661:12 pthread_atfork 'int (void (*)(void), void (*)(void), void (*)(void))' extern
| |-ParmVarDecl 0x56236f773540 <col:28, col:51> col:35 __prepare 'void (*)(void)'
| |-ParmVarDecl 0x56236f773650 <line:662:7, col:29> col:14 __parent 'void (*)(void)'
| |-ParmVarDecl 0x56236f773760 <line:663:7, col:28> col:14 __child 'void (*)(void)'
| `-NoThrowAttr 0x56236f773960 <col:47>
|-FunctionDecl 0x56236f773af0 <line:665:1, col:20> col:8 used P0 'void *(void *)'
| `-ParmVarDecl 0x56236f7739d0 <col:11, col:17> col:17 arg 'void *'
|-FunctionDecl 0x56236f773c48 <line:666:1, col:20> col:8 used P1 'void *(void *)'
| `-ParmVarDecl 0x56236f773bb0 <col:11, col:17> col:17 arg 'void *'
|-FunctionDecl 0x56236f773d10 <line:667:1, col:12> col:6 fence 'void ()'
|-FunctionDecl 0x56236f773dd0 <line:668:1, col:12> col:6 isync 'void ()'
|-FunctionDecl 0x56236f773e90 <line:669:1, col:14> col:6 lwfence 'void ()'
|-VarDecl 0x56236f773f48 <line:670:1, col:5> col:5 used __unbuffered_cnt 'int'
|-VarDecl 0x56236f773fc8 prev 0x56236f773f48 <line:671:1, col:24> col:5 used __unbuffered_cnt 'int' cinit
| `-IntegerLiteral 0x56236f774030 <col:24> 'int' 0
|-VarDecl 0x56236f774068 <line:672:1, col:5> col:5 used __unbuffered_p1_EAX 'int'
|-VarDecl 0x56236f7740e8 prev 0x56236f774068 <line:673:1, col:27> col:5 used __unbuffered_p1_EAX 'int' cinit
| `-IntegerLiteral 0x56236f774150 <col:27> 'int' 0
|-VarDecl 0x56236f774188 <line:674:1, col:5> col:5 used __unbuffered_p1_EBX 'int'
|-VarDecl 0x56236f774208 prev 0x56236f774188 <line:675:1, col:27> col:5 used __unbuffered_p1_EBX 'int' cinit
| `-IntegerLiteral 0x56236f774270 <col:27> 'int' 0
|-VarDecl 0x56236f7742a0 <line:676:1, col:7> col:7 used main$tmp_guard0 '_Bool'
|-VarDecl 0x56236f774318 <line:677:1, col:7> col:7 used main$tmp_guard1 '_Bool'
|-VarDecl 0x56236f774398 <line:678:1, col:5> col:5 used x 'int'
|-VarDecl 0x56236f774418 prev 0x56236f774398 <line:679:1, col:9> col:5 used x 'int' cinit
| `-IntegerLiteral 0x56236f774480 <col:9> 'int' 0
|-VarDecl 0x56236f7744b0 <line:680:1, col:7> col:7 used x$flush_delayed '_Bool'
|-VarDecl 0x56236f774530 <line:681:1, col:5> col:5 used x$mem_tmp 'int'
|-VarDecl 0x56236f7745a8 <line:682:1, col:7> col:7 used x$r_buff0_thd0 '_Bool'
|-VarDecl 0x56236f774620 <line:683:1, col:7> col:7 used x$r_buff0_thd1 '_Bool'
|-VarDecl 0x56236f774698 <line:684:1, col:7> col:7 used x$r_buff0_thd2 '_Bool'
|-VarDecl 0x56236f774710 <line:685:1, col:7> col:7 used x$r_buff1_thd0 '_Bool'
|-VarDecl 0x56236f774788 <line:686:1, col:7> col:7 used x$r_buff1_thd1 '_Bool'
|-VarDecl 0x56236f774800 <line:687:1, col:7> col:7 used x$r_buff1_thd2 '_Bool'
|-VarDecl 0x56236f774878 <line:688:1, col:7> col:7 x$read_delayed '_Bool'
|-VarDecl 0x56236f7748f8 <line:689:1, col:6> col:6 x$read_delayed_var 'int *'
|-VarDecl 0x56236f774978 <line:690:1, col:5> col:5 used x$w_buff0 'int'
|-VarDecl 0x56236f7749f0 <line:691:1, col:7> col:7 used x$w_buff0_used '_Bool'
|-VarDecl 0x56236f774a70 <line:692:1, col:5> col:5 used x$w_buff1 'int'
|-VarDecl 0x56236f774b00 <line:693:1, col:7> col:7 used x$w_buff1_used '_Bool'
|-VarDecl 0x56236f774b80 <line:694:1, col:5> col:5 used y 'int'
|-VarDecl 0x56236f774c00 prev 0x56236f774b80 <line:695:1, col:9> col:5 used y 'int' cinit
| `-IntegerLiteral 0x56236f774c68 <col:9> 'int' 0
|-VarDecl 0x56236f774ca0 <line:696:1, col:5> col:5 used z 'int'
|-VarDecl 0x56236f774d20 prev 0x56236f774ca0 <line:697:1, col:9> col:5 used z 'int' cinit
| `-IntegerLiteral 0x56236f774d88 <col:9> 'int' 0
|-VarDecl 0x56236f774db8 <line:698:1, col:7> col:7 used weak$$choice0 '_Bool'
|-VarDecl 0x56236f774e30 <line:699:1, col:7> col:7 used weak$$choice2 '_Bool'
|-FunctionDecl 0x56236f774f48 prev 0x56236f773af0 <line:700:1, line:727:1> line:700:8 used P0 'void *(void *)'
| |-ParmVarDecl 0x56236f774eb0 <col:11, col:17> col:17 arg 'void *'
| `-CompoundStmt 0x56236f7766e8 <line:701:1, line:727:1>
|   |-CallExpr 0x56236f775058 <line:702:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x56236f775040 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x56236f774ff0 <col:3> 'void ()' Function 0x56236f71ae40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x56236f7750d0 <line:703:3, col:15> 'int' '='
|   | |-DeclRefExpr 0x56236f775078 <col:3> 'int' lvalue Var 0x56236f774a70 'x$w_buff1' 'int'
|   | `-ImplicitCastExpr 0x56236f7750b8 <col:15> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x56236f775098 <col:15> 'int' lvalue Var 0x56236f774978 'x$w_buff0' 'int'
|   |-BinaryOperator 0x56236f775130 <line:704:3, col:15> 'int' '='
|   | |-DeclRefExpr 0x56236f7750f0 <col:3> 'int' lvalue Var 0x56236f774978 'x$w_buff0' 'int'
|   | `-IntegerLiteral 0x56236f775110 <col:15> 'int' 1
|   |-BinaryOperator 0x56236f7751a8 <line:705:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x56236f775150 <col:3> '_Bool' lvalue Var 0x56236f774b00 'x$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x56236f775190 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x56236f775170 <col:20> '_Bool' lvalue Var 0x56236f7749f0 'x$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x56236f775240 <line:706:3, col:27> '_Bool' '='
|   | |-DeclRefExpr 0x56236f7751c8 <col:3> '_Bool' lvalue Var 0x56236f7749f0 'x$w_buff0_used' '_Bool'
|   | `-CStyleCastExpr 0x56236f775218 <col:20, col:27> '_Bool' <IntegralToBoolean>
|   |   `-IntegerLiteral 0x56236f7751e8 <col:27> 'int' 1
|   |-CallExpr 0x56236f7753c8 <line:707:3, col:56> 'void'
|   | |-ImplicitCastExpr 0x56236f7753b0 <col:3> 'void (*)(int)' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x56236f775260 <col:3> 'void (int)' Function 0x56236f71abc8 '__VERIFIER_assert' 'void (int)'
|   | `-UnaryOperator 0x56236f775360 <col:21, col:55> 'int' prefix '!' cannot overflow
|   |   `-ParenExpr 0x56236f775340 <col:22, col:55> 'int'
|   |     `-BinaryOperator 0x56236f775320 <col:23, col:41> 'int' '&&'
|   |       |-ImplicitCastExpr 0x56236f7752d8 <col:23> 'int' <IntegralCast>
|   |       | `-ImplicitCastExpr 0x56236f7752c0 <col:23> '_Bool' <LValueToRValue>
|   |       |   `-DeclRefExpr 0x56236f775280 <col:23> '_Bool' lvalue Var 0x56236f774b00 'x$w_buff1_used' '_Bool'
|   |       `-ImplicitCastExpr 0x56236f775308 <col:41> 'int' <IntegralCast>
|   |         `-ImplicitCastExpr 0x56236f7752f0 <col:41> '_Bool' <LValueToRValue>
|   |           `-DeclRefExpr 0x56236f7752a0 <col:41> '_Bool' lvalue Var 0x56236f7749f0 'x$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x56236f775448 <line:708:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x56236f7753f0 <col:3> '_Bool' lvalue Var 0x56236f774710 'x$r_buff1_thd0' '_Bool'
|   | `-ImplicitCastExpr 0x56236f775430 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x56236f775410 <col:20> '_Bool' lvalue Var 0x56236f7745a8 'x$r_buff0_thd0' '_Bool'
|   |-BinaryOperator 0x56236f7754c0 <line:709:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x56236f775468 <col:3> '_Bool' lvalue Var 0x56236f774788 'x$r_buff1_thd1' '_Bool'
|   | `-ImplicitCastExpr 0x56236f7754a8 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x56236f775488 <col:20> '_Bool' lvalue Var 0x56236f774620 'x$r_buff0_thd1' '_Bool'
|   |-BinaryOperator 0x56236f775538 <line:710:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x56236f7754e0 <col:3> '_Bool' lvalue Var 0x56236f774800 'x$r_buff1_thd2' '_Bool'
|   | `-ImplicitCastExpr 0x56236f775520 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x56236f775500 <col:20> '_Bool' lvalue Var 0x56236f774698 'x$r_buff0_thd2' '_Bool'
|   |-BinaryOperator 0x56236f7755d0 <line:711:3, col:27> '_Bool' '='
|   | |-DeclRefExpr 0x56236f775558 <col:3> '_Bool' lvalue Var 0x56236f774620 'x$r_buff0_thd1' '_Bool'
|   | `-CStyleCastExpr 0x56236f7755a8 <col:20, col:27> '_Bool' <IntegralToBoolean>
|   |   `-IntegerLiteral 0x56236f775578 <col:27> 'int' 1
|   |-CallExpr 0x56236f775628 <line:712:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x56236f775610 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x56236f7755f0 <col:3> 'void ()' Function 0x56236f71af00 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x56236f775680 <line:713:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x56236f775668 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x56236f775648 <col:3> 'void ()' Function 0x56236f71ae40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x56236f7756e0 <line:714:3, col:7> 'int' '='
|   | |-DeclRefExpr 0x56236f7756a0 <col:3> 'int' lvalue Var 0x56236f774c00 'y' 'int'
|   | `-IntegerLiteral 0x56236f7756c0 <col:7> 'int' 1
|   |-CallExpr 0x56236f775738 <line:715:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x56236f775720 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x56236f775700 <col:3> 'void ()' Function 0x56236f71af00 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x56236f775790 <line:716:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x56236f775778 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x56236f775758 <col:3> 'void ()' Function 0x56236f71ae40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x56236f775a78 <line:717:3, col:103> 'int' '='
|   | |-DeclRefExpr 0x56236f7757b0 <col:3> 'int' lvalue Var 0x56236f774418 'x' 'int'
|   | `-ConditionalOperator 0x56236f775a48 <col:7, col:103> 'int'
|   |   |-BinaryOperator 0x56236f775870 <col:7, col:25> 'int' '&&'
|   |   | |-ImplicitCastExpr 0x56236f775828 <col:7> 'int' <IntegralCast>
|   |   | | `-ImplicitCastExpr 0x56236f775810 <col:7> '_Bool' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x56236f7757d0 <col:7> '_Bool' lvalue Var 0x56236f7749f0 'x$w_buff0_used' '_Bool'
|   |   | `-ImplicitCastExpr 0x56236f775858 <col:25> 'int' <IntegralCast>
|   |   |   `-ImplicitCastExpr 0x56236f775840 <col:25> '_Bool' <LValueToRValue>
|   |   |     `-DeclRefExpr 0x56236f7757f0 <col:25> '_Bool' lvalue Var 0x56236f774620 'x$r_buff0_thd1' '_Bool'
|   |   |-ImplicitCastExpr 0x56236f775a30 <col:42> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x56236f775890 <col:42> 'int' lvalue Var 0x56236f774978 'x$w_buff0' 'int'
|   |   `-ParenExpr 0x56236f775a10 <col:54, col:103> 'int'
|   |     `-ConditionalOperator 0x56236f7759e0 <col:55, col:102> 'int'
|   |       |-BinaryOperator 0x56236f775950 <col:55, col:73> 'int' '&&'
|   |       | |-ImplicitCastExpr 0x56236f775908 <col:55> 'int' <IntegralCast>
|   |       | | `-ImplicitCastExpr 0x56236f7758f0 <col:55> '_Bool' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x56236f7758b0 <col:55> '_Bool' lvalue Var 0x56236f774b00 'x$w_buff1_used' '_Bool'
|   |       | `-ImplicitCastExpr 0x56236f775938 <col:73> 'int' <IntegralCast>
|   |       |   `-ImplicitCastExpr 0x56236f775920 <col:73> '_Bool' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x56236f7758d0 <col:73> '_Bool' lvalue Var 0x56236f774788 'x$r_buff1_thd1' '_Bool'
|   |       |-ImplicitCastExpr 0x56236f7759b0 <col:90> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x56236f775970 <col:90> 'int' lvalue Var 0x56236f774a70 'x$w_buff1' 'int'
|   |       `-ImplicitCastExpr 0x56236f7759c8 <col:102> 'int' <LValueToRValue>
|   |         `-DeclRefExpr 0x56236f775990 <col:102> 'int' lvalue Var 0x56236f774418 'x' 'int'
|   |-BinaryOperator 0x56236f775c98 <line:718:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x56236f775a98 <col:3> '_Bool' lvalue Var 0x56236f7749f0 'x$w_buff0_used' '_Bool'
|   | `-ImplicitCastExpr 0x56236f775c80 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x56236f775c50 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x56236f775b70 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x56236f775b28 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x56236f775b10 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x56236f775ab8 <col:20> '_Bool' lvalue Var 0x56236f7749f0 'x$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x56236f775b58 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x56236f775b40 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x56236f775ad8 <col:38> '_Bool' lvalue Var 0x56236f774620 'x$r_buff0_thd1' '_Bool'
|   |     |-ImplicitCastExpr 0x56236f775c08 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x56236f775bc0 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x56236f775b90 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x56236f775c38 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x56236f775c20 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x56236f775be8 <col:66> '_Bool' lvalue Var 0x56236f7749f0 'x$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x56236f775f80 <line:719:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x56236f775cb8 <col:3> '_Bool' lvalue Var 0x56236f774b00 'x$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x56236f775f68 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x56236f775f38 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x56236f775e58 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x56236f775d78 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x56236f775d30 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x56236f775d18 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x56236f775cd8 <col:20> '_Bool' lvalue Var 0x56236f7749f0 'x$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x56236f775d60 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x56236f775d48 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x56236f775cf8 <col:38> '_Bool' lvalue Var 0x56236f774620 'x$r_buff0_thd1' '_Bool'
|   |     | `-BinaryOperator 0x56236f775e38 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x56236f775df0 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x56236f775dd8 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x56236f775d98 <col:56> '_Bool' lvalue Var 0x56236f774b00 'x$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x56236f775e20 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x56236f775e08 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x56236f775db8 <col:74> '_Bool' lvalue Var 0x56236f774788 'x$r_buff1_thd1' '_Bool'
|   |     |-ImplicitCastExpr 0x56236f775ef0 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x56236f775ea8 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x56236f775e78 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x56236f775f20 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x56236f775f08 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x56236f775ed0 <col:102> '_Bool' lvalue Var 0x56236f774b00 'x$w_buff1_used' '_Bool'
|   |-BinaryOperator 0x56236f776188 <line:720:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x56236f775fa0 <col:3> '_Bool' lvalue Var 0x56236f774620 'x$r_buff0_thd1' '_Bool'
|   | `-ImplicitCastExpr 0x56236f776170 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x56236f776140 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x56236f776060 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x56236f776018 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x56236f776000 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x56236f775fc0 <col:20> '_Bool' lvalue Var 0x56236f7749f0 'x$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x56236f776048 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x56236f776030 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x56236f775fe0 <col:38> '_Bool' lvalue Var 0x56236f774620 'x$r_buff0_thd1' '_Bool'
|   |     |-ImplicitCastExpr 0x56236f7760f8 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x56236f7760b0 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x56236f776080 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x56236f776128 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x56236f776110 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x56236f7760d8 <col:66> '_Bool' lvalue Var 0x56236f774620 'x$r_buff0_thd1' '_Bool'
|   |-BinaryOperator 0x56236f776470 <line:721:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x56236f7761a8 <col:3> '_Bool' lvalue Var 0x56236f774788 'x$r_buff1_thd1' '_Bool'
|   | `-ImplicitCastExpr 0x56236f776458 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x56236f776428 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x56236f776348 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x56236f776268 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x56236f776220 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x56236f776208 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x56236f7761c8 <col:20> '_Bool' lvalue Var 0x56236f7749f0 'x$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x56236f776250 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x56236f776238 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x56236f7761e8 <col:38> '_Bool' lvalue Var 0x56236f774620 'x$r_buff0_thd1' '_Bool'
|   |     | `-BinaryOperator 0x56236f776328 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x56236f7762e0 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x56236f7762c8 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x56236f776288 <col:56> '_Bool' lvalue Var 0x56236f774b00 'x$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x56236f776310 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x56236f7762f8 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x56236f7762a8 <col:74> '_Bool' lvalue Var 0x56236f774788 'x$r_buff1_thd1' '_Bool'
|   |     |-ImplicitCastExpr 0x56236f7763e0 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x56236f776398 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x56236f776368 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x56236f776410 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x56236f7763f8 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x56236f7763c0 <col:102> '_Bool' lvalue Var 0x56236f774788 'x$r_buff1_thd1' '_Bool'
|   |-CallExpr 0x56236f7764c8 <line:722:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x56236f7764b0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x56236f776490 <col:3> 'void ()' Function 0x56236f71af00 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x56236f776520 <line:723:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x56236f776508 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x56236f7764e8 <col:3> 'void ()' Function 0x56236f71ae40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x56236f7765d8 <line:724:3, col:41> 'int' '='
|   | |-DeclRefExpr 0x56236f776540 <col:3> 'int' lvalue Var 0x56236f773fc8 '__unbuffered_cnt' 'int'
|   | `-BinaryOperator 0x56236f7765b8 <col:22, col:41> 'int' '+'
|   |   |-ImplicitCastExpr 0x56236f7765a0 <col:22> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x56236f776560 <col:22> 'int' lvalue Var 0x56236f773fc8 '__unbuffered_cnt' 'int'
|   |   `-IntegerLiteral 0x56236f776580 <col:41> 'int' 1
|   |-CallExpr 0x56236f776630 <line:725:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x56236f776618 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x56236f7765f8 <col:3> 'void ()' Function 0x56236f71af00 '__VERIFIER_atomic_end' 'void ()'
|   `-ReturnStmt 0x56236f7766d8 <line:726:3, col:36>
|     `-CallExpr 0x56236f7766b8 <col:10, col:36> 'void *'
|       `-ImplicitCastExpr 0x56236f7766a0 <col:10> 'void *(*)(void)' <FunctionToPointerDecay>
|         `-DeclRefExpr 0x56236f776650 <col:10> 'void *(void)' Function 0x56236f71a958 '__VERIFIER_nondet_pointer' 'void *(void)'
|-FunctionDecl 0x56236f776870 prev 0x56236f773c48 <line:728:1, line:766:1> line:728:8 used P1 'void *(void *)'
| |-ParmVarDecl 0x56236f7767d8 <col:11, col:17> col:17 arg 'void *'
| `-CompoundStmt 0x56236f77a678 <line:729:1, line:766:1>
|   |-CallExpr 0x56236f776950 <line:730:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x56236f776938 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x56236f776918 <col:3> 'void ()' Function 0x56236f71ae40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x56236f7769b0 <line:731:3, col:7> 'int' '='
|   | |-DeclRefExpr 0x56236f776970 <col:3> 'int' lvalue Var 0x56236f774c00 'y' 'int'
|   | `-IntegerLiteral 0x56236f776990 <col:7> 'int' 2
|   |-CallExpr 0x56236f776a08 <line:732:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x56236f7769f0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x56236f7769d0 <col:3> 'void ()' Function 0x56236f71af00 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x56236f776a60 <line:733:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x56236f776a48 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x56236f776a28 <col:3> 'void ()' Function 0x56236f71ae40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x56236f776ac0 <line:734:3, col:7> 'int' '='
|   | |-DeclRefExpr 0x56236f776a80 <col:3> 'int' lvalue Var 0x56236f774d20 'z' 'int'
|   | `-IntegerLiteral 0x56236f776aa0 <col:7> 'int' 1
|   |-CallExpr 0x56236f776b38 <line:735:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x56236f776b20 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x56236f776ae0 <col:3> 'void ()' Function 0x56236f71af00 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x56236f776b90 <line:736:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x56236f776b78 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x56236f776b58 <col:3> 'void ()' Function 0x56236f71ae40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x56236f776c08 <line:737:3, col:25> 'int' '='
|   | |-DeclRefExpr 0x56236f776bb0 <col:3> 'int' lvalue Var 0x56236f7740e8 '__unbuffered_p1_EAX' 'int'
|   | `-ImplicitCastExpr 0x56236f776bf0 <col:25> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x56236f776bd0 <col:25> 'int' lvalue Var 0x56236f774d20 'z' 'int'
|   |-CallExpr 0x56236f776c60 <line:738:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x56236f776c48 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x56236f776c28 <col:3> 'void ()' Function 0x56236f71af00 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x56236f776cb8 <line:739:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x56236f776ca0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x56236f776c80 <col:3> 'void ()' Function 0x56236f71ae40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x56236f776d68 <line:740:3, col:45> '_Bool' '='
|   | |-DeclRefExpr 0x56236f776cd8 <col:3> '_Bool' lvalue Var 0x56236f774db8 'weak$$choice0' '_Bool'
|   | `-ImplicitCastExpr 0x56236f776d50 <col:19, col:45> '_Bool' <PointerToBoolean>
|   |   `-CallExpr 0x56236f776d30 <col:19, col:45> 'void *'
|   |     `-ImplicitCastExpr 0x56236f776d18 <col:19> 'void *(*)(void)' <FunctionToPointerDecay>
|   |       `-DeclRefExpr 0x56236f776cf8 <col:19> 'void *(void)' Function 0x56236f71a958 '__VERIFIER_nondet_pointer' 'void *(void)'
|   |-BinaryOperator 0x56236f776e18 <line:741:3, col:45> '_Bool' '='
|   | |-DeclRefExpr 0x56236f776d88 <col:3> '_Bool' lvalue Var 0x56236f774e30 'weak$$choice2' '_Bool'
|   | `-ImplicitCastExpr 0x56236f776e00 <col:19, col:45> '_Bool' <PointerToBoolean>
|   |   `-CallExpr 0x56236f776de0 <col:19, col:45> 'void *'
|   |     `-ImplicitCastExpr 0x56236f776dc8 <col:19> 'void *(*)(void)' <FunctionToPointerDecay>
|   |       `-DeclRefExpr 0x56236f776da8 <col:19> 'void *(void)' Function 0x56236f71a958 '__VERIFIER_nondet_pointer' 'void *(void)'
|   |-BinaryOperator 0x56236f776e90 <line:742:3, col:21> '_Bool' '='
|   | |-DeclRefExpr 0x56236f776e38 <col:3> '_Bool' lvalue Var 0x56236f7744b0 'x$flush_delayed' '_Bool'
|   | `-ImplicitCastExpr 0x56236f776e78 <col:21> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x56236f776e58 <col:21> '_Bool' lvalue Var 0x56236f774e30 'weak$$choice2' '_Bool'
|   |-BinaryOperator 0x56236f776f08 <line:743:3, col:15> 'int' '='
|   | |-DeclRefExpr 0x56236f776eb0 <col:3> 'int' lvalue Var 0x56236f774530 'x$mem_tmp' 'int'
|   | `-ImplicitCastExpr 0x56236f776ef0 <col:15> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x56236f776ed0 <col:15> 'int' lvalue Var 0x56236f774418 'x' 'int'
|   |-BinaryOperator 0x56236f777340 <line:744:3, col:162> 'int' '='
|   | |-DeclRefExpr 0x56236f776f28 <col:3> 'int' lvalue Var 0x56236f774418 'x' 'int'
|   | `-ConditionalOperator 0x56236f777310 <col:7, col:162> 'int'
|   |   |-BinaryOperator 0x56236f777138 <col:7, col:84> 'int' '||'
|   |   | |-BinaryOperator 0x56236f777058 <col:7, col:46> 'int' '||'
|   |   | | |-UnaryOperator 0x56236f776f80 <col:7, col:8> 'int' prefix '!' cannot overflow
|   |   | | | `-ImplicitCastExpr 0x56236f776f68 <col:8> '_Bool' <LValueToRValue>
|   |   | | |   `-DeclRefExpr 0x56236f776f48 <col:8> '_Bool' lvalue Var 0x56236f7749f0 'x$w_buff0_used' '_Bool'
|   |   | | `-BinaryOperator 0x56236f777038 <col:26, col:46> 'int' '&&'
|   |   | |   |-UnaryOperator 0x56236f776fd0 <col:26, col:27> 'int' prefix '!' cannot overflow
|   |   | |   | `-ImplicitCastExpr 0x56236f776fb8 <col:27> '_Bool' <LValueToRValue>
|   |   | |   |   `-DeclRefExpr 0x56236f776f98 <col:27> '_Bool' lvalue Var 0x56236f774698 'x$r_buff0_thd2' '_Bool'
|   |   | |   `-UnaryOperator 0x56236f777020 <col:45, col:46> 'int' prefix '!' cannot overflow
|   |   | |     `-ImplicitCastExpr 0x56236f777008 <col:46> '_Bool' <LValueToRValue>
|   |   | |       `-DeclRefExpr 0x56236f776fe8 <col:46> '_Bool' lvalue Var 0x56236f774b00 'x$w_buff1_used' '_Bool'
|   |   | `-BinaryOperator 0x56236f777118 <col:64, col:84> 'int' '&&'
|   |   |   |-UnaryOperator 0x56236f7770b0 <col:64, col:65> 'int' prefix '!' cannot overflow
|   |   |   | `-ImplicitCastExpr 0x56236f777098 <col:65> '_Bool' <LValueToRValue>
|   |   |   |   `-DeclRefExpr 0x56236f777078 <col:65> '_Bool' lvalue Var 0x56236f774698 'x$r_buff0_thd2' '_Bool'
|   |   |   `-UnaryOperator 0x56236f777100 <col:83, col:84> 'int' prefix '!' cannot overflow
|   |   |     `-ImplicitCastExpr 0x56236f7770e8 <col:84> '_Bool' <LValueToRValue>
|   |   |       `-DeclRefExpr 0x56236f7770c8 <col:84> '_Bool' lvalue Var 0x56236f774800 'x$r_buff1_thd2' '_Bool'
|   |   |-ImplicitCastExpr 0x56236f7772f8 <col:101> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x56236f777158 <col:101> 'int' lvalue Var 0x56236f774418 'x' 'int'
|   |   `-ParenExpr 0x56236f7772d8 <col:105, col:162> 'int'
|   |     `-ConditionalOperator 0x56236f7772a8 <col:106, col:153> 'int'
|   |       |-BinaryOperator 0x56236f777218 <col:106, col:124> 'int' '&&'
|   |       | |-ImplicitCastExpr 0x56236f7771d0 <col:106> 'int' <IntegralCast>
|   |       | | `-ImplicitCastExpr 0x56236f7771b8 <col:106> '_Bool' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x56236f777178 <col:106> '_Bool' lvalue Var 0x56236f7749f0 'x$w_buff0_used' '_Bool'
|   |       | `-ImplicitCastExpr 0x56236f777200 <col:124> 'int' <IntegralCast>
|   |       |   `-ImplicitCastExpr 0x56236f7771e8 <col:124> '_Bool' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x56236f777198 <col:124> '_Bool' lvalue Var 0x56236f774698 'x$r_buff0_thd2' '_Bool'
|   |       |-ImplicitCastExpr 0x56236f777278 <col:141> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x56236f777238 <col:141> 'int' lvalue Var 0x56236f774978 'x$w_buff0' 'int'
|   |       `-ImplicitCastExpr 0x56236f777290 <col:153> 'int' <LValueToRValue>
|   |         `-DeclRefExpr 0x56236f777258 <col:153> 'int' lvalue Var 0x56236f774a70 'x$w_buff1' 'int'
|   |-BinaryOperator 0x56236f777850 <line:745:3, col:208> 'int' '='
|   | |-DeclRefExpr 0x56236f777360 <col:3> 'int' lvalue Var 0x56236f774978 'x$w_buff0' 'int'
|   | `-ConditionalOperator 0x56236f777820 <col:15, col:208> 'int'
|   |   |-ImplicitCastExpr 0x56236f7777f0 <col:15> 'int' <IntegralCast>
|   |   | `-ImplicitCastExpr 0x56236f7777d8 <col:15> '_Bool' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x56236f777380 <col:15> '_Bool' lvalue Var 0x56236f774e30 'weak$$choice2' '_Bool'
|   |   |-ImplicitCastExpr 0x56236f777808 <col:31> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x56236f7773a0 <col:31> 'int' lvalue Var 0x56236f774978 'x$w_buff0' 'int'
|   |   `-ParenExpr 0x56236f7777b8 <col:43, col:208> 'int'
|   |     `-ConditionalOperator 0x56236f777788 <col:44, col:207> 'int'
|   |       |-BinaryOperator 0x56236f7775b0 <col:44, col:121> 'int' '||'
|   |       | |-BinaryOperator 0x56236f7774d0 <col:44, col:83> 'int' '||'
|   |       | | |-UnaryOperator 0x56236f7773f8 <col:44, col:45> 'int' prefix '!' cannot overflow
|   |       | | | `-ImplicitCastExpr 0x56236f7773e0 <col:45> '_Bool' <LValueToRValue>
|   |       | | |   `-DeclRefExpr 0x56236f7773c0 <col:45> '_Bool' lvalue Var 0x56236f7749f0 'x$w_buff0_used' '_Bool'
|   |       | | `-BinaryOperator 0x56236f7774b0 <col:63, col:83> 'int' '&&'
|   |       | |   |-UnaryOperator 0x56236f777448 <col:63, col:64> 'int' prefix '!' cannot overflow
|   |       | |   | `-ImplicitCastExpr 0x56236f777430 <col:64> '_Bool' <LValueToRValue>
|   |       | |   |   `-DeclRefExpr 0x56236f777410 <col:64> '_Bool' lvalue Var 0x56236f774698 'x$r_buff0_thd2' '_Bool'
|   |       | |   `-UnaryOperator 0x56236f777498 <col:82, col:83> 'int' prefix '!' cannot overflow
|   |       | |     `-ImplicitCastExpr 0x56236f777480 <col:83> '_Bool' <LValueToRValue>
|   |       | |       `-DeclRefExpr 0x56236f777460 <col:83> '_Bool' lvalue Var 0x56236f774b00 'x$w_buff1_used' '_Bool'
|   |       | `-BinaryOperator 0x56236f777590 <col:101, col:121> 'int' '&&'
|   |       |   |-UnaryOperator 0x56236f777528 <col:101, col:102> 'int' prefix '!' cannot overflow
|   |       |   | `-ImplicitCastExpr 0x56236f777510 <col:102> '_Bool' <LValueToRValue>
|   |       |   |   `-DeclRefExpr 0x56236f7774f0 <col:102> '_Bool' lvalue Var 0x56236f774698 'x$r_buff0_thd2' '_Bool'
|   |       |   `-UnaryOperator 0x56236f777578 <col:120, col:121> 'int' prefix '!' cannot overflow
|   |       |     `-ImplicitCastExpr 0x56236f777560 <col:121> '_Bool' <LValueToRValue>
|   |       |       `-DeclRefExpr 0x56236f777540 <col:121> '_Bool' lvalue Var 0x56236f774800 'x$r_buff1_thd2' '_Bool'
|   |       |-ImplicitCastExpr 0x56236f777770 <col:138> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x56236f7775d0 <col:138> 'int' lvalue Var 0x56236f774978 'x$w_buff0' 'int'
|   |       `-ParenExpr 0x56236f777750 <col:150, col:207> 'int'
|   |         `-ConditionalOperator 0x56236f777720 <col:151, col:198> 'int'
|   |           |-BinaryOperator 0x56236f777690 <col:151, col:169> 'int' '&&'
|   |           | |-ImplicitCastExpr 0x56236f777648 <col:151> 'int' <IntegralCast>
|   |           | | `-ImplicitCastExpr 0x56236f777630 <col:151> '_Bool' <LValueToRValue>
|   |           | |   `-DeclRefExpr 0x56236f7775f0 <col:151> '_Bool' lvalue Var 0x56236f7749f0 'x$w_buff0_used' '_Bool'
|   |           | `-ImplicitCastExpr 0x56236f777678 <col:169> 'int' <IntegralCast>
|   |           |   `-ImplicitCastExpr 0x56236f777660 <col:169> '_Bool' <LValueToRValue>
|   |           |     `-DeclRefExpr 0x56236f777610 <col:169> '_Bool' lvalue Var 0x56236f774698 'x$r_buff0_thd2' '_Bool'
|   |           |-ImplicitCastExpr 0x56236f7776f0 <col:186> 'int' <LValueToRValue>
|   |           | `-DeclRefExpr 0x56236f7776b0 <col:186> 'int' lvalue Var 0x56236f774978 'x$w_buff0' 'int'
|   |           `-ImplicitCastExpr 0x56236f777708 <col:198> 'int' <LValueToRValue>
|   |             `-DeclRefExpr 0x56236f7776d0 <col:198> 'int' lvalue Var 0x56236f774978 'x$w_buff0' 'int'
|   |-BinaryOperator 0x56236f777d70 <line:746:3, col:208> 'int' '='
|   | |-DeclRefExpr 0x56236f777870 <col:3> 'int' lvalue Var 0x56236f774a70 'x$w_buff1' 'int'
|   | `-ConditionalOperator 0x56236f777d40 <col:15, col:208> 'int'
|   |   |-ImplicitCastExpr 0x56236f777d10 <col:15> 'int' <IntegralCast>
|   |   | `-ImplicitCastExpr 0x56236f777cf8 <col:15> '_Bool' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x56236f777890 <col:15> '_Bool' lvalue Var 0x56236f774e30 'weak$$choice2' '_Bool'
|   |   |-ImplicitCastExpr 0x56236f777d28 <col:31> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x56236f7778b0 <col:31> 'int' lvalue Var 0x56236f774a70 'x$w_buff1' 'int'
|   |   `-ParenExpr 0x56236f777cd8 <col:43, col:208> 'int'
|   |     `-ConditionalOperator 0x56236f777ca8 <col:44, col:207> 'int'
|   |       |-BinaryOperator 0x56236f777ac0 <col:44, col:121> 'int' '||'
|   |       | |-BinaryOperator 0x56236f7779e0 <col:44, col:83> 'int' '||'
|   |       | | |-UnaryOperator 0x56236f777908 <col:44, col:45> 'int' prefix '!' cannot overflow
|   |       | | | `-ImplicitCastExpr 0x56236f7778f0 <col:45> '_Bool' <LValueToRValue>
|   |       | | |   `-DeclRefExpr 0x56236f7778d0 <col:45> '_Bool' lvalue Var 0x56236f7749f0 'x$w_buff0_used' '_Bool'
|   |       | | `-BinaryOperator 0x56236f7779c0 <col:63, col:83> 'int' '&&'
|   |       | |   |-UnaryOperator 0x56236f777958 <col:63, col:64> 'int' prefix '!' cannot overflow
|   |       | |   | `-ImplicitCastExpr 0x56236f777940 <col:64> '_Bool' <LValueToRValue>
|   |       | |   |   `-DeclRefExpr 0x56236f777920 <col:64> '_Bool' lvalue Var 0x56236f774698 'x$r_buff0_thd2' '_Bool'
|   |       | |   `-UnaryOperator 0x56236f7779a8 <col:82, col:83> 'int' prefix '!' cannot overflow
|   |       | |     `-ImplicitCastExpr 0x56236f777990 <col:83> '_Bool' <LValueToRValue>
|   |       | |       `-DeclRefExpr 0x56236f777970 <col:83> '_Bool' lvalue Var 0x56236f774b00 'x$w_buff1_used' '_Bool'
|   |       | `-BinaryOperator 0x56236f777aa0 <col:101, col:121> 'int' '&&'
|   |       |   |-UnaryOperator 0x56236f777a38 <col:101, col:102> 'int' prefix '!' cannot overflow
|   |       |   | `-ImplicitCastExpr 0x56236f777a20 <col:102> '_Bool' <LValueToRValue>
|   |       |   |   `-DeclRefExpr 0x56236f777a00 <col:102> '_Bool' lvalue Var 0x56236f774698 'x$r_buff0_thd2' '_Bool'
|   |       |   `-UnaryOperator 0x56236f777a88 <col:120, col:121> 'int' prefix '!' cannot overflow
|   |       |     `-ImplicitCastExpr 0x56236f777a70 <col:121> '_Bool' <LValueToRValue>
|   |       |       `-DeclRefExpr 0x56236f777a50 <col:121> '_Bool' lvalue Var 0x56236f774800 'x$r_buff1_thd2' '_Bool'
|   |       |-ImplicitCastExpr 0x56236f777c90 <col:138> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x56236f777ae0 <col:138> 'int' lvalue Var 0x56236f774a70 'x$w_buff1' 'int'
|   |       `-ParenExpr 0x56236f777c70 <col:150, col:207> 'int'
|   |         `-ConditionalOperator 0x56236f777c40 <col:151, col:198> 'int'
|   |           |-BinaryOperator 0x56236f777bb0 <col:151, col:169> 'int' '&&'
|   |           | |-ImplicitCastExpr 0x56236f777b68 <col:151> 'int' <IntegralCast>
|   |           | | `-ImplicitCastExpr 0x56236f777b50 <col:151> '_Bool' <LValueToRValue>
|   |           | |   `-DeclRefExpr 0x56236f777b00 <col:151> '_Bool' lvalue Var 0x56236f7749f0 'x$w_buff0_used' '_Bool'
|   |           | `-ImplicitCastExpr 0x56236f777b98 <col:169> 'int' <IntegralCast>
|   |           |   `-ImplicitCastExpr 0x56236f777b80 <col:169> '_Bool' <LValueToRValue>
|   |           |     `-DeclRefExpr 0x56236f777b30 <col:169> '_Bool' lvalue Var 0x56236f774698 'x$r_buff0_thd2' '_Bool'
|   |           |-ImplicitCastExpr 0x56236f777c10 <col:186> 'int' <LValueToRValue>
|   |           | `-DeclRefExpr 0x56236f777bd0 <col:186> 'int' lvalue Var 0x56236f774a70 'x$w_buff1' 'int'
|   |           `-ImplicitCastExpr 0x56236f777c28 <col:198> 'int' <LValueToRValue>
|   |             `-DeclRefExpr 0x56236f777bf0 <col:198> 'int' lvalue Var 0x56236f774a70 'x$w_buff1' 'int'
|   |-BinaryOperator 0x56236f778318 <line:747:3, col:227> '_Bool' '='
|   | |-DeclRefExpr 0x56236f777d90 <col:3> '_Bool' lvalue Var 0x56236f7749f0 'x$w_buff0_used' '_Bool'
|   | `-ImplicitCastExpr 0x56236f778300 <col:20, col:227> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x56236f7782d0 <col:20, col:227> 'int'
|   |     |-ImplicitCastExpr 0x56236f778288 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x56236f778270 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x56236f777db0 <col:20> '_Bool' lvalue Var 0x56236f774e30 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x56236f7782b8 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x56236f7782a0 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x56236f777dd0 <col:36> '_Bool' lvalue Var 0x56236f7749f0 'x$w_buff0_used' '_Bool'
|   |     `-ParenExpr 0x56236f778250 <col:53, col:227> 'int'
|   |       `-ConditionalOperator 0x56236f778220 <col:54, col:226> 'int'
|   |         |-BinaryOperator 0x56236f777fe0 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x56236f777f00 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x56236f777e28 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x56236f777e10 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x56236f777df0 <col:55> '_Bool' lvalue Var 0x56236f7749f0 'x$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x56236f777ee0 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x56236f777e78 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x56236f777e60 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x56236f777e40 <col:74> '_Bool' lvalue Var 0x56236f774698 'x$r_buff0_thd2' '_Bool'
|   |         | |   `-UnaryOperator 0x56236f777ec8 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x56236f777eb0 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x56236f777e90 <col:93> '_Bool' lvalue Var 0x56236f774b00 'x$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x56236f777fc0 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x56236f777f58 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x56236f777f40 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x56236f777f20 <col:112> '_Bool' lvalue Var 0x56236f774698 'x$r_buff0_thd2' '_Bool'
|   |         |   `-UnaryOperator 0x56236f777fa8 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x56236f777f90 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x56236f777f70 <col:131> '_Bool' lvalue Var 0x56236f774800 'x$r_buff1_thd2' '_Bool'
|   |         |-ImplicitCastExpr 0x56236f778208 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x56236f7781f0 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x56236f778000 <col:148> '_Bool' lvalue Var 0x56236f7749f0 'x$w_buff0_used' '_Bool'
|   |         `-ParenExpr 0x56236f7781d0 <col:165, col:226> 'int'
|   |           `-ConditionalOperator 0x56236f7781a0 <col:166, col:212> 'int'
|   |             |-BinaryOperator 0x56236f7780c0 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x56236f778078 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x56236f778060 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x56236f778020 <col:166> '_Bool' lvalue Var 0x56236f7749f0 'x$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x56236f7780a8 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x56236f778090 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x56236f778040 <col:184> '_Bool' lvalue Var 0x56236f774698 'x$r_buff0_thd2' '_Bool'
|   |             |-ImplicitCastExpr 0x56236f778158 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x56236f778110 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x56236f7780e0 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x56236f778188 <col:212> 'int' <IntegralCast>
|   |               `-ImplicitCastExpr 0x56236f778170 <col:212> '_Bool' <LValueToRValue>
|   |                 `-DeclRefExpr 0x56236f778138 <col:212> '_Bool' lvalue Var 0x56236f7749f0 'x$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x56236f7788e0 <line:748:3, col:221> '_Bool' '='
|   | |-DeclRefExpr 0x56236f778338 <col:3> '_Bool' lvalue Var 0x56236f774b00 'x$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x56236f7788c8 <col:20, col:221> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x56236f778898 <col:20, col:221> 'int'
|   |     |-ImplicitCastExpr 0x56236f778850 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x56236f778838 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x56236f778358 <col:20> '_Bool' lvalue Var 0x56236f774e30 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x56236f778880 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x56236f778868 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x56236f778378 <col:36> '_Bool' lvalue Var 0x56236f774b00 'x$w_buff1_used' '_Bool'
|   |     `-ParenExpr 0x56236f778818 <col:53, col:221> 'int'
|   |       `-ConditionalOperator 0x56236f7787e8 <col:54, col:220> 'int'
|   |         |-BinaryOperator 0x56236f778588 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x56236f7784a8 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x56236f7783d0 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x56236f7783b8 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x56236f778398 <col:55> '_Bool' lvalue Var 0x56236f7749f0 'x$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x56236f778488 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x56236f778420 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x56236f778408 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x56236f7783e8 <col:74> '_Bool' lvalue Var 0x56236f774698 'x$r_buff0_thd2' '_Bool'
|   |         | |   `-UnaryOperator 0x56236f778470 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x56236f778458 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x56236f778438 <col:93> '_Bool' lvalue Var 0x56236f774b00 'x$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x56236f778568 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x56236f778500 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x56236f7784e8 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x56236f7784c8 <col:112> '_Bool' lvalue Var 0x56236f774698 'x$r_buff0_thd2' '_Bool'
|   |         |   `-UnaryOperator 0x56236f778550 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x56236f778538 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x56236f778518 <col:131> '_Bool' lvalue Var 0x56236f774800 'x$r_buff1_thd2' '_Bool'
|   |         |-ImplicitCastExpr 0x56236f7787d0 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x56236f7787b8 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x56236f7785a8 <col:148> '_Bool' lvalue Var 0x56236f774b00 'x$w_buff1_used' '_Bool'
|   |         `-ParenExpr 0x56236f778798 <col:165, col:220> 'int'
|   |           `-ConditionalOperator 0x56236f778768 <col:166, col:219> 'int'
|   |             |-BinaryOperator 0x56236f778668 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x56236f778620 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x56236f778608 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x56236f7785c8 <col:166> '_Bool' lvalue Var 0x56236f7749f0 'x$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x56236f778650 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x56236f778638 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x56236f7785e8 <col:184> '_Bool' lvalue Var 0x56236f774698 'x$r_buff0_thd2' '_Bool'
|   |             |-ImplicitCastExpr 0x56236f778738 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x56236f7786b8 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x56236f778688 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x56236f778750 <col:212, col:219> 'int' <IntegralCast>
|   |               `-CStyleCastExpr 0x56236f778710 <col:212, col:219> '_Bool' <IntegralToBoolean>
|   |                 `-IntegerLiteral 0x56236f7786e0 <col:219> 'int' 0
|   |-BinaryOperator 0x56236f778e98 <line:749:3, col:227> '_Bool' '='
|   | |-DeclRefExpr 0x56236f778900 <col:3> '_Bool' lvalue Var 0x56236f774698 'x$r_buff0_thd2' '_Bool'
|   | `-ImplicitCastExpr 0x56236f778e80 <col:20, col:227> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x56236f778e50 <col:20, col:227> 'int'
|   |     |-ImplicitCastExpr 0x56236f778e08 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x56236f778df0 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x56236f778920 <col:20> '_Bool' lvalue Var 0x56236f774e30 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x56236f778e38 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x56236f778e20 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x56236f778940 <col:36> '_Bool' lvalue Var 0x56236f774698 'x$r_buff0_thd2' '_Bool'
|   |     `-ParenExpr 0x56236f778dd0 <col:53, col:227> 'int'
|   |       `-ConditionalOperator 0x56236f778da0 <col:54, col:226> 'int'
|   |         |-BinaryOperator 0x56236f778b60 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x56236f778a70 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x56236f778998 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x56236f778980 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x56236f778960 <col:55> '_Bool' lvalue Var 0x56236f7749f0 'x$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x56236f778a50 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x56236f7789e8 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x56236f7789d0 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x56236f7789b0 <col:74> '_Bool' lvalue Var 0x56236f774698 'x$r_buff0_thd2' '_Bool'
|   |         | |   `-UnaryOperator 0x56236f778a38 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x56236f778a20 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x56236f778a00 <col:93> '_Bool' lvalue Var 0x56236f774b00 'x$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x56236f778b40 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x56236f778ac8 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x56236f778ab0 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x56236f778a90 <col:112> '_Bool' lvalue Var 0x56236f774698 'x$r_buff0_thd2' '_Bool'
|   |         |   `-UnaryOperator 0x56236f778b18 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x56236f778b00 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x56236f778ae0 <col:131> '_Bool' lvalue Var 0x56236f774800 'x$r_buff1_thd2' '_Bool'
|   |         |-ImplicitCastExpr 0x56236f778d88 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x56236f778d70 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x56236f778b80 <col:148> '_Bool' lvalue Var 0x56236f774698 'x$r_buff0_thd2' '_Bool'
|   |         `-ParenExpr 0x56236f778d50 <col:165, col:226> 'int'
|   |           `-ConditionalOperator 0x56236f778d20 <col:166, col:212> 'int'
|   |             |-BinaryOperator 0x56236f778c40 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x56236f778bf8 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x56236f778be0 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x56236f778ba0 <col:166> '_Bool' lvalue Var 0x56236f7749f0 'x$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x56236f778c28 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x56236f778c10 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x56236f778bc0 <col:184> '_Bool' lvalue Var 0x56236f774698 'x$r_buff0_thd2' '_Bool'
|   |             |-ImplicitCastExpr 0x56236f778cd8 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x56236f778c90 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x56236f778c60 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x56236f778d08 <col:212> 'int' <IntegralCast>
|   |               `-ImplicitCastExpr 0x56236f778cf0 <col:212> '_Bool' <LValueToRValue>
|   |                 `-DeclRefExpr 0x56236f778cb8 <col:212> '_Bool' lvalue Var 0x56236f774698 'x$r_buff0_thd2' '_Bool'
|   |-BinaryOperator 0x56236f779460 <line:750:3, col:221> '_Bool' '='
|   | |-DeclRefExpr 0x56236f778eb8 <col:3> '_Bool' lvalue Var 0x56236f774800 'x$r_buff1_thd2' '_Bool'
|   | `-ImplicitCastExpr 0x56236f779448 <col:20, col:221> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x56236f779418 <col:20, col:221> 'int'
|   |     |-ImplicitCastExpr 0x56236f7793d0 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x56236f7793b8 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x56236f778ed8 <col:20> '_Bool' lvalue Var 0x56236f774e30 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x56236f779400 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x56236f7793e8 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x56236f778ef8 <col:36> '_Bool' lvalue Var 0x56236f774800 'x$r_buff1_thd2' '_Bool'
|   |     `-ParenExpr 0x56236f779398 <col:53, col:221> 'int'
|   |       `-ConditionalOperator 0x56236f779368 <col:54, col:220> 'int'
|   |         |-BinaryOperator 0x56236f779108 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x56236f779028 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x56236f778f50 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x56236f778f38 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x56236f778f18 <col:55> '_Bool' lvalue Var 0x56236f7749f0 'x$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x56236f779008 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x56236f778fa0 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x56236f778f88 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x56236f778f68 <col:74> '_Bool' lvalue Var 0x56236f774698 'x$r_buff0_thd2' '_Bool'
|   |         | |   `-UnaryOperator 0x56236f778ff0 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x56236f778fd8 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x56236f778fb8 <col:93> '_Bool' lvalue Var 0x56236f774b00 'x$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x56236f7790e8 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x56236f779080 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x56236f779068 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x56236f779048 <col:112> '_Bool' lvalue Var 0x56236f774698 'x$r_buff0_thd2' '_Bool'
|   |         |   `-UnaryOperator 0x56236f7790d0 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x56236f7790b8 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x56236f779098 <col:131> '_Bool' lvalue Var 0x56236f774800 'x$r_buff1_thd2' '_Bool'
|   |         |-ImplicitCastExpr 0x56236f779350 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x56236f779338 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x56236f779128 <col:148> '_Bool' lvalue Var 0x56236f774800 'x$r_buff1_thd2' '_Bool'
|   |         `-ParenExpr 0x56236f779318 <col:165, col:220> 'int'
|   |           `-ConditionalOperator 0x56236f7792e8 <col:166, col:219> 'int'
|   |             |-BinaryOperator 0x56236f7791e8 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x56236f7791a0 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x56236f779188 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x56236f779148 <col:166> '_Bool' lvalue Var 0x56236f7749f0 'x$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x56236f7791d0 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x56236f7791b8 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x56236f779168 <col:184> '_Bool' lvalue Var 0x56236f774698 'x$r_buff0_thd2' '_Bool'
|   |             |-ImplicitCastExpr 0x56236f7792b8 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x56236f779238 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x56236f779208 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x56236f7792d0 <col:212, col:219> 'int' <IntegralCast>
|   |               `-CStyleCastExpr 0x56236f779290 <col:212, col:219> '_Bool' <IntegralToBoolean>
|   |                 `-IntegerLiteral 0x56236f779260 <col:219> 'int' 0
|   |-BinaryOperator 0x56236f7794d8 <line:751:3, col:25> 'int' '='
|   | |-DeclRefExpr 0x56236f779480 <col:3> 'int' lvalue Var 0x56236f774208 '__unbuffered_p1_EBX' 'int'
|   | `-ImplicitCastExpr 0x56236f7794c0 <col:25> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x56236f7794a0 <col:25> 'int' lvalue Var 0x56236f774418 'x' 'int'
|   |-BinaryOperator 0x56236f779608 <line:752:3, col:37> 'int' '='
|   | |-DeclRefExpr 0x56236f7794f8 <col:3> 'int' lvalue Var 0x56236f774418 'x' 'int'
|   | `-ConditionalOperator 0x56236f7795d8 <col:7, col:37> 'int'
|   |   |-ImplicitCastExpr 0x56236f779590 <col:7> 'int' <IntegralCast>
|   |   | `-ImplicitCastExpr 0x56236f779578 <col:7> '_Bool' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x56236f779518 <col:7> '_Bool' lvalue Var 0x56236f7744b0 'x$flush_delayed' '_Bool'
|   |   |-ImplicitCastExpr 0x56236f7795a8 <col:25> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x56236f779538 <col:25> 'int' lvalue Var 0x56236f774530 'x$mem_tmp' 'int'
|   |   `-ImplicitCastExpr 0x56236f7795c0 <col:37> 'int' <LValueToRValue>
|   |     `-DeclRefExpr 0x56236f779558 <col:37> 'int' lvalue Var 0x56236f774418 'x' 'int'
|   |-BinaryOperator 0x56236f7796a0 <line:753:3, col:28> '_Bool' '='
|   | |-DeclRefExpr 0x56236f779628 <col:3> '_Bool' lvalue Var 0x56236f7744b0 'x$flush_delayed' '_Bool'
|   | `-CStyleCastExpr 0x56236f779678 <col:21, col:28> '_Bool' <IntegralToBoolean>
|   |   `-IntegerLiteral 0x56236f779648 <col:28> 'int' 0
|   |-CallExpr 0x56236f7796f8 <line:754:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x56236f7796e0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x56236f7796c0 <col:3> 'void ()' Function 0x56236f71af00 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x56236f779750 <line:755:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x56236f779738 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x56236f779718 <col:3> 'void ()' Function 0x56236f71ae40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x56236f779a38 <line:756:3, col:103> 'int' '='
|   | |-DeclRefExpr 0x56236f779770 <col:3> 'int' lvalue Var 0x56236f774418 'x' 'int'
|   | `-ConditionalOperator 0x56236f779a08 <col:7, col:103> 'int'
|   |   |-BinaryOperator 0x56236f779830 <col:7, col:25> 'int' '&&'
|   |   | |-ImplicitCastExpr 0x56236f7797e8 <col:7> 'int' <IntegralCast>
|   |   | | `-ImplicitCastExpr 0x56236f7797d0 <col:7> '_Bool' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x56236f779790 <col:7> '_Bool' lvalue Var 0x56236f7749f0 'x$w_buff0_used' '_Bool'
|   |   | `-ImplicitCastExpr 0x56236f779818 <col:25> 'int' <IntegralCast>
|   |   |   `-ImplicitCastExpr 0x56236f779800 <col:25> '_Bool' <LValueToRValue>
|   |   |     `-DeclRefExpr 0x56236f7797b0 <col:25> '_Bool' lvalue Var 0x56236f774698 'x$r_buff0_thd2' '_Bool'
|   |   |-ImplicitCastExpr 0x56236f7799f0 <col:42> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x56236f779850 <col:42> 'int' lvalue Var 0x56236f774978 'x$w_buff0' 'int'
|   |   `-ParenExpr 0x56236f7799d0 <col:54, col:103> 'int'
|   |     `-ConditionalOperator 0x56236f7799a0 <col:55, col:102> 'int'
|   |       |-BinaryOperator 0x56236f779910 <col:55, col:73> 'int' '&&'
|   |       | |-ImplicitCastExpr 0x56236f7798c8 <col:55> 'int' <IntegralCast>
|   |       | | `-ImplicitCastExpr 0x56236f7798b0 <col:55> '_Bool' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x56236f779870 <col:55> '_Bool' lvalue Var 0x56236f774b00 'x$w_buff1_used' '_Bool'
|   |       | `-ImplicitCastExpr 0x56236f7798f8 <col:73> 'int' <IntegralCast>
|   |       |   `-ImplicitCastExpr 0x56236f7798e0 <col:73> '_Bool' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x56236f779890 <col:73> '_Bool' lvalue Var 0x56236f774800 'x$r_buff1_thd2' '_Bool'
|   |       |-ImplicitCastExpr 0x56236f779970 <col:90> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x56236f779930 <col:90> 'int' lvalue Var 0x56236f774a70 'x$w_buff1' 'int'
|   |       `-ImplicitCastExpr 0x56236f779988 <col:102> 'int' <LValueToRValue>
|   |         `-DeclRefExpr 0x56236f779950 <col:102> 'int' lvalue Var 0x56236f774418 'x' 'int'
|   |-BinaryOperator 0x56236f779c58 <line:757:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x56236f779a58 <col:3> '_Bool' lvalue Var 0x56236f7749f0 'x$w_buff0_used' '_Bool'
|   | `-ImplicitCastExpr 0x56236f779c40 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x56236f779c10 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x56236f779b18 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x56236f779ad0 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x56236f779ab8 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x56236f779a78 <col:20> '_Bool' lvalue Var 0x56236f7749f0 'x$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x56236f779b00 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x56236f779ae8 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x56236f779a98 <col:38> '_Bool' lvalue Var 0x56236f774698 'x$r_buff0_thd2' '_Bool'
|   |     |-ImplicitCastExpr 0x56236f779bc8 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x56236f779b80 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x56236f779b50 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x56236f779bf8 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x56236f779be0 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x56236f779ba8 <col:66> '_Bool' lvalue Var 0x56236f7749f0 'x$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x56236f779f40 <line:758:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x56236f779c78 <col:3> '_Bool' lvalue Var 0x56236f774b00 'x$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x56236f779f28 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x56236f779ef8 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x56236f779e18 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x56236f779d38 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x56236f779cf0 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x56236f779cd8 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x56236f779c98 <col:20> '_Bool' lvalue Var 0x56236f7749f0 'x$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x56236f779d20 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x56236f779d08 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x56236f779cb8 <col:38> '_Bool' lvalue Var 0x56236f774698 'x$r_buff0_thd2' '_Bool'
|   |     | `-BinaryOperator 0x56236f779df8 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x56236f779db0 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x56236f779d98 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x56236f779d58 <col:56> '_Bool' lvalue Var 0x56236f774b00 'x$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x56236f779de0 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x56236f779dc8 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x56236f779d78 <col:74> '_Bool' lvalue Var 0x56236f774800 'x$r_buff1_thd2' '_Bool'
|   |     |-ImplicitCastExpr 0x56236f779eb0 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x56236f779e68 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x56236f779e38 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x56236f779ee0 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x56236f779ec8 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x56236f779e90 <col:102> '_Bool' lvalue Var 0x56236f774b00 'x$w_buff1_used' '_Bool'
|   |-BinaryOperator 0x56236f77a148 <line:759:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x56236f779f60 <col:3> '_Bool' lvalue Var 0x56236f774698 'x$r_buff0_thd2' '_Bool'
|   | `-ImplicitCastExpr 0x56236f77a130 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x56236f77a100 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x56236f77a020 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x56236f779fd8 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x56236f779fc0 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x56236f779f80 <col:20> '_Bool' lvalue Var 0x56236f7749f0 'x$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x56236f77a008 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x56236f779ff0 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x56236f779fa0 <col:38> '_Bool' lvalue Var 0x56236f774698 'x$r_buff0_thd2' '_Bool'
|   |     |-ImplicitCastExpr 0x56236f77a0b8 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x56236f77a070 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x56236f77a040 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x56236f77a0e8 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x56236f77a0d0 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x56236f77a098 <col:66> '_Bool' lvalue Var 0x56236f774698 'x$r_buff0_thd2' '_Bool'
|   |-BinaryOperator 0x56236f77a430 <line:760:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x56236f77a168 <col:3> '_Bool' lvalue Var 0x56236f774800 'x$r_buff1_thd2' '_Bool'
|   | `-ImplicitCastExpr 0x56236f77a418 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x56236f77a3e8 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x56236f77a308 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x56236f77a228 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x56236f77a1e0 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x56236f77a1c8 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x56236f77a188 <col:20> '_Bool' lvalue Var 0x56236f7749f0 'x$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x56236f77a210 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x56236f77a1f8 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x56236f77a1a8 <col:38> '_Bool' lvalue Var 0x56236f774698 'x$r_buff0_thd2' '_Bool'
|   |     | `-BinaryOperator 0x56236f77a2e8 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x56236f77a2a0 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x56236f77a288 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x56236f77a248 <col:56> '_Bool' lvalue Var 0x56236f774b00 'x$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x56236f77a2d0 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x56236f77a2b8 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x56236f77a268 <col:74> '_Bool' lvalue Var 0x56236f774800 'x$r_buff1_thd2' '_Bool'
|   |     |-ImplicitCastExpr 0x56236f77a3a0 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x56236f77a358 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x56236f77a328 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x56236f77a3d0 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x56236f77a3b8 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x56236f77a380 <col:102> '_Bool' lvalue Var 0x56236f774800 'x$r_buff1_thd2' '_Bool'
|   |-CallExpr 0x56236f77a488 <line:761:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x56236f77a470 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x56236f77a450 <col:3> 'void ()' Function 0x56236f71af00 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x56236f77a4e0 <line:762:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x56236f77a4c8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x56236f77a4a8 <col:3> 'void ()' Function 0x56236f71ae40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x56236f77a598 <line:763:3, col:41> 'int' '='
|   | |-DeclRefExpr 0x56236f77a500 <col:3> 'int' lvalue Var 0x56236f773fc8 '__unbuffered_cnt' 'int'
|   | `-BinaryOperator 0x56236f77a578 <col:22, col:41> 'int' '+'
|   |   |-ImplicitCastExpr 0x56236f77a560 <col:22> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x56236f77a520 <col:22> 'int' lvalue Var 0x56236f773fc8 '__unbuffered_cnt' 'int'
|   |   `-IntegerLiteral 0x56236f77a540 <col:41> 'int' 1
|   |-CallExpr 0x56236f77a5f0 <line:764:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x56236f77a5d8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x56236f77a5b8 <col:3> 'void ()' Function 0x56236f71af00 '__VERIFIER_atomic_end' 'void ()'
|   `-ReturnStmt 0x56236f77a668 <line:765:3, col:36>
|     `-CallExpr 0x56236f77a648 <col:10, col:36> 'void *'
|       `-ImplicitCastExpr 0x56236f77a630 <col:10> 'void *(*)(void)' <FunctionToPointerDecay>
|         `-DeclRefExpr 0x56236f77a610 <col:10> 'void *(void)' Function 0x56236f71a958 '__VERIFIER_nondet_pointer' 'void *(void)'
|-FunctionDecl 0x56236f77a7c8 prev 0x56236f773d10 <line:767:1, line:769:1> line:767:6 fence 'void ()'
| `-CompoundStmt 0x56236f77a868 <line:768:1, line:769:1>
|-FunctionDecl 0x56236f77a898 prev 0x56236f773dd0 <line:770:1, line:772:1> line:770:6 isync 'void ()'
| `-CompoundStmt 0x56236f77a938 <line:771:1, line:772:1>
|-FunctionDecl 0x56236f77a968 prev 0x56236f773e90 <line:773:1, line:775:1> line:773:6 lwfence 'void ()'
| `-CompoundStmt 0x56236f77aa08 <line:774:1, line:775:1>
`-FunctionDecl 0x56236f77aa78 <line:776:1, line:798:1> line:776:5 main 'int ()'
  `-CompoundStmt 0x56236f77c460 <line:777:1, line:798:1>
    |-DeclStmt 0x56236f77abc8 <line:778:3, col:18>
    | `-VarDecl 0x56236f77ab60 <col:3, col:13> col:13 used t1603 'pthread_t':'unsigned long'
    |-CallExpr 0x56236f77add8 <line:779:3, col:54> 'int'
    | |-ImplicitCastExpr 0x56236f77adc0 <col:3> 'int (*)(pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x56236f77abe0 <col:3> 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' Function 0x56236f75b488 'pthread_create' 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)'
    | |-UnaryOperator 0x56236f77ac20 <col:18, col:19> 'pthread_t *' prefix '&' cannot overflow
    | | `-DeclRefExpr 0x56236f77ac00 <col:19> 'pthread_t':'unsigned long' lvalue Var 0x56236f77ab60 't1603' 'pthread_t':'unsigned long'
    | |-ImplicitCastExpr 0x56236f77ae18 <col:26, col:36> 'const pthread_attr_t *' <NullToPointer>
    | | `-ParenExpr 0x56236f77ac98 <col:26, col:36> 'void *'
    | |   `-CStyleCastExpr 0x56236f77ac70 <col:27, col:35> 'void *' <NullToPointer>
    | |     `-IntegerLiteral 0x56236f77ac38 <col:35> 'int' 0
    | |-ImplicitCastExpr 0x56236f77ae30 <col:39> 'void *(*)(void *)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x56236f77acb8 <col:39> 'void *(void *)' Function 0x56236f774f48 'P0' 'void *(void *)'
    | `-ParenExpr 0x56236f77ad38 <col:43, col:53> 'void *'
    |   `-CStyleCastExpr 0x56236f77ad10 <col:44, col:52> 'void *' <NullToPointer>
    |     `-IntegerLiteral 0x56236f77acd8 <col:52> 'int' 0
    |-DeclStmt 0x56236f77aec0 <line:780:3, col:18>
    | `-VarDecl 0x56236f77ae58 <col:3, col:13> col:13 used t1604 'pthread_t':'unsigned long'
    |-CallExpr 0x56236f77b068 <line:781:3, col:54> 'int'
    | |-ImplicitCastExpr 0x56236f77b050 <col:3> 'int (*)(pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x56236f77aed8 <col:3> 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' Function 0x56236f75b488 'pthread_create' 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)'
    | |-UnaryOperator 0x56236f77af18 <col:18, col:19> 'pthread_t *' prefix '&' cannot overflow
    | | `-DeclRefExpr 0x56236f77aef8 <col:19> 'pthread_t':'unsigned long' lvalue Var 0x56236f77ae58 't1604' 'pthread_t':'unsigned long'
    | |-ImplicitCastExpr 0x56236f77b0a8 <col:26, col:36> 'const pthread_attr_t *' <NullToPointer>
    | | `-ParenExpr 0x56236f77af90 <col:26, col:36> 'void *'
    | |   `-CStyleCastExpr 0x56236f77af68 <col:27, col:35> 'void *' <NullToPointer>
    | |     `-IntegerLiteral 0x56236f77af30 <col:35> 'int' 0
    | |-ImplicitCastExpr 0x56236f77b0c0 <col:39> 'void *(*)(void *)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x56236f77afb0 <col:39> 'void *(void *)' Function 0x56236f776870 'P1' 'void *(void *)'
    | `-ParenExpr 0x56236f77b030 <col:43, col:53> 'void *'
    |   `-CStyleCastExpr 0x56236f77b008 <col:44, col:52> 'void *' <NullToPointer>
    |     `-IntegerLiteral 0x56236f77afd0 <col:52> 'int' 0
    |-CallExpr 0x56236f77b110 <line:782:3, col:27> 'void'
    | `-ImplicitCastExpr 0x56236f77b0f8 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x56236f77b0d8 <col:3> 'void ()' Function 0x56236f71ae40 '__VERIFIER_atomic_begin' 'void ()'
    |-BinaryOperator 0x56236f77b1e0 <line:783:3, col:41> '_Bool' '='
    | |-DeclRefExpr 0x56236f77b130 <col:3> '_Bool' lvalue Var 0x56236f7742a0 'main$tmp_guard0' '_Bool'
    | `-ImplicitCastExpr 0x56236f77b1c8 <col:21, col:41> '_Bool' <IntegralToBoolean>
    |   `-BinaryOperator 0x56236f77b1a8 <col:21, col:41> 'int' '=='
    |     |-ImplicitCastExpr 0x56236f77b190 <col:21> 'int' <LValueToRValue>
    |     | `-DeclRefExpr 0x56236f77b150 <col:21> 'int' lvalue Var 0x56236f773fc8 '__unbuffered_cnt' 'int'
    |     `-IntegerLiteral 0x56236f77b170 <col:41> 'int' 2
    |-CallExpr 0x56236f77b238 <line:784:3, col:25> 'void'
    | `-ImplicitCastExpr 0x56236f77b220 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x56236f77b200 <col:3> 'void ()' Function 0x56236f71af00 '__VERIFIER_atomic_end' 'void ()'
    |-CallExpr 0x56236f77b2b0 <line:785:3, col:36> 'void'
    | |-ImplicitCastExpr 0x56236f77b298 <col:3> 'void (*)(int)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x56236f77b258 <col:3> 'void (int)' Function 0x56236f71a790 '__VERIFIER_assume' 'void (int)'
    | `-ImplicitCastExpr 0x56236f77b2f0 <col:21> 'int' <IntegralCast>
    |   `-ImplicitCastExpr 0x56236f77b2d8 <col:21> '_Bool' <LValueToRValue>
    |     `-DeclRefExpr 0x56236f77b278 <col:21> '_Bool' lvalue Var 0x56236f7742a0 'main$tmp_guard0' '_Bool'
    |-CallExpr 0x56236f77b340 <line:786:3, col:27> 'void'
    | `-ImplicitCastExpr 0x56236f77b328 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x56236f77b308 <col:3> 'void ()' Function 0x56236f71ae40 '__VERIFIER_atomic_begin' 'void ()'
    |-BinaryOperator 0x56236f77b628 <line:787:3, col:103> 'int' '='
    | |-DeclRefExpr 0x56236f77b360 <col:3> 'int' lvalue Var 0x56236f774418 'x' 'int'
    | `-ConditionalOperator 0x56236f77b5f8 <col:7, col:103> 'int'
    |   |-BinaryOperator 0x56236f77b420 <col:7, col:25> 'int' '&&'
    |   | |-ImplicitCastExpr 0x56236f77b3d8 <col:7> 'int' <IntegralCast>
    |   | | `-ImplicitCastExpr 0x56236f77b3c0 <col:7> '_Bool' <LValueToRValue>
    |   | |   `-DeclRefExpr 0x56236f77b380 <col:7> '_Bool' lvalue Var 0x56236f7749f0 'x$w_buff0_used' '_Bool'
    |   | `-ImplicitCastExpr 0x56236f77b408 <col:25> 'int' <IntegralCast>
    |   |   `-ImplicitCastExpr 0x56236f77b3f0 <col:25> '_Bool' <LValueToRValue>
    |   |     `-DeclRefExpr 0x56236f77b3a0 <col:25> '_Bool' lvalue Var 0x56236f7745a8 'x$r_buff0_thd0' '_Bool'
    |   |-ImplicitCastExpr 0x56236f77b5e0 <col:42> 'int' <LValueToRValue>
    |   | `-DeclRefExpr 0x56236f77b440 <col:42> 'int' lvalue Var 0x56236f774978 'x$w_buff0' 'int'
    |   `-ParenExpr 0x56236f77b5c0 <col:54, col:103> 'int'
    |     `-ConditionalOperator 0x56236f77b590 <col:55, col:102> 'int'
    |       |-BinaryOperator 0x56236f77b500 <col:55, col:73> 'int' '&&'
    |       | |-ImplicitCastExpr 0x56236f77b4b8 <col:55> 'int' <IntegralCast>
    |       | | `-ImplicitCastExpr 0x56236f77b4a0 <col:55> '_Bool' <LValueToRValue>
    |       | |   `-DeclRefExpr 0x56236f77b460 <col:55> '_Bool' lvalue Var 0x56236f774b00 'x$w_buff1_used' '_Bool'
    |       | `-ImplicitCastExpr 0x56236f77b4e8 <col:73> 'int' <IntegralCast>
    |       |   `-ImplicitCastExpr 0x56236f77b4d0 <col:73> '_Bool' <LValueToRValue>
    |       |     `-DeclRefExpr 0x56236f77b480 <col:73> '_Bool' lvalue Var 0x56236f774710 'x$r_buff1_thd0' '_Bool'
    |       |-ImplicitCastExpr 0x56236f77b560 <col:90> 'int' <LValueToRValue>
    |       | `-DeclRefExpr 0x56236f77b520 <col:90> 'int' lvalue Var 0x56236f774a70 'x$w_buff1' 'int'
    |       `-ImplicitCastExpr 0x56236f77b578 <col:102> 'int' <LValueToRValue>
    |         `-DeclRefExpr 0x56236f77b540 <col:102> 'int' lvalue Var 0x56236f774418 'x' 'int'
    |-BinaryOperator 0x56236f77b830 <line:788:3, col:66> '_Bool' '='
    | |-DeclRefExpr 0x56236f77b648 <col:3> '_Bool' lvalue Var 0x56236f7749f0 'x$w_buff0_used' '_Bool'
    | `-ImplicitCastExpr 0x56236f77b818 <col:20, col:66> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x56236f77b7e8 <col:20, col:66> 'int'
    |     |-BinaryOperator 0x56236f77b708 <col:20, col:38> 'int' '&&'
    |     | |-ImplicitCastExpr 0x56236f77b6c0 <col:20> 'int' <IntegralCast>
    |     | | `-ImplicitCastExpr 0x56236f77b6a8 <col:20> '_Bool' <LValueToRValue>
    |     | |   `-DeclRefExpr 0x56236f77b668 <col:20> '_Bool' lvalue Var 0x56236f7749f0 'x$w_buff0_used' '_Bool'
    |     | `-ImplicitCastExpr 0x56236f77b6f0 <col:38> 'int' <IntegralCast>
    |     |   `-ImplicitCastExpr 0x56236f77b6d8 <col:38> '_Bool' <LValueToRValue>
    |     |     `-DeclRefExpr 0x56236f77b688 <col:38> '_Bool' lvalue Var 0x56236f7745a8 'x$r_buff0_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x56236f77b7a0 <col:55, col:62> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x56236f77b758 <col:55, col:62> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x56236f77b728 <col:62> 'int' 0
    |     `-ImplicitCastExpr 0x56236f77b7d0 <col:66> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x56236f77b7b8 <col:66> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x56236f77b780 <col:66> '_Bool' lvalue Var 0x56236f7749f0 'x$w_buff0_used' '_Bool'
    |-BinaryOperator 0x56236f77bb18 <line:789:3, col:102> '_Bool' '='
    | |-DeclRefExpr 0x56236f77b850 <col:3> '_Bool' lvalue Var 0x56236f774b00 'x$w_buff1_used' '_Bool'
    | `-ImplicitCastExpr 0x56236f77bb00 <col:20, col:102> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x56236f77bad0 <col:20, col:102> 'int'
    |     |-BinaryOperator 0x56236f77b9f0 <col:20, col:74> 'int' '||'
    |     | |-BinaryOperator 0x56236f77b910 <col:20, col:38> 'int' '&&'
    |     | | |-ImplicitCastExpr 0x56236f77b8c8 <col:20> 'int' <IntegralCast>
    |     | | | `-ImplicitCastExpr 0x56236f77b8b0 <col:20> '_Bool' <LValueToRValue>
    |     | | |   `-DeclRefExpr 0x56236f77b870 <col:20> '_Bool' lvalue Var 0x56236f7749f0 'x$w_buff0_used' '_Bool'
    |     | | `-ImplicitCastExpr 0x56236f77b8f8 <col:38> 'int' <IntegralCast>
    |     | |   `-ImplicitCastExpr 0x56236f77b8e0 <col:38> '_Bool' <LValueToRValue>
    |     | |     `-DeclRefExpr 0x56236f77b890 <col:38> '_Bool' lvalue Var 0x56236f7745a8 'x$r_buff0_thd0' '_Bool'
    |     | `-BinaryOperator 0x56236f77b9d0 <col:56, col:74> 'int' '&&'
    |     |   |-ImplicitCastExpr 0x56236f77b988 <col:56> 'int' <IntegralCast>
    |     |   | `-ImplicitCastExpr 0x56236f77b970 <col:56> '_Bool' <LValueToRValue>
    |     |   |   `-DeclRefExpr 0x56236f77b930 <col:56> '_Bool' lvalue Var 0x56236f774b00 'x$w_buff1_used' '_Bool'
    |     |   `-ImplicitCastExpr 0x56236f77b9b8 <col:74> 'int' <IntegralCast>
    |     |     `-ImplicitCastExpr 0x56236f77b9a0 <col:74> '_Bool' <LValueToRValue>
    |     |       `-DeclRefExpr 0x56236f77b950 <col:74> '_Bool' lvalue Var 0x56236f774710 'x$r_buff1_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x56236f77ba88 <col:91, col:98> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x56236f77ba40 <col:91, col:98> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x56236f77ba10 <col:98> 'int' 0
    |     `-ImplicitCastExpr 0x56236f77bab8 <col:102> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x56236f77baa0 <col:102> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x56236f77ba68 <col:102> '_Bool' lvalue Var 0x56236f774b00 'x$w_buff1_used' '_Bool'
    |-BinaryOperator 0x56236f77bd38 <line:790:3, col:66> '_Bool' '='
    | |-DeclRefExpr 0x56236f77bb38 <col:3> '_Bool' lvalue Var 0x56236f7745a8 'x$r_buff0_thd0' '_Bool'
    | `-ImplicitCastExpr 0x56236f77bd20 <col:20, col:66> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x56236f77bcf0 <col:20, col:66> 'int'
    |     |-BinaryOperator 0x56236f77bc10 <col:20, col:38> 'int' '&&'
    |     | |-ImplicitCastExpr 0x56236f77bbc8 <col:20> 'int' <IntegralCast>
    |     | | `-ImplicitCastExpr 0x56236f77bbb0 <col:20> '_Bool' <LValueToRValue>
    |     | |   `-DeclRefExpr 0x56236f77bb70 <col:20> '_Bool' lvalue Var 0x56236f7749f0 'x$w_buff0_used' '_Bool'
    |     | `-ImplicitCastExpr 0x56236f77bbf8 <col:38> 'int' <IntegralCast>
    |     |   `-ImplicitCastExpr 0x56236f77bbe0 <col:38> '_Bool' <LValueToRValue>
    |     |     `-DeclRefExpr 0x56236f77bb90 <col:38> '_Bool' lvalue Var 0x56236f7745a8 'x$r_buff0_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x56236f77bca8 <col:55, col:62> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x56236f77bc60 <col:55, col:62> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x56236f77bc30 <col:62> 'int' 0
    |     `-ImplicitCastExpr 0x56236f77bcd8 <col:66> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x56236f77bcc0 <col:66> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x56236f77bc88 <col:66> '_Bool' lvalue Var 0x56236f7745a8 'x$r_buff0_thd0' '_Bool'
    |-BinaryOperator 0x56236f77c020 <line:791:3, col:102> '_Bool' '='
    | |-DeclRefExpr 0x56236f77bd58 <col:3> '_Bool' lvalue Var 0x56236f774710 'x$r_buff1_thd0' '_Bool'
    | `-ImplicitCastExpr 0x56236f77c008 <col:20, col:102> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x56236f77bfd8 <col:20, col:102> 'int'
    |     |-BinaryOperator 0x56236f77bef8 <col:20, col:74> 'int' '||'
    |     | |-BinaryOperator 0x56236f77be18 <col:20, col:38> 'int' '&&'
    |     | | |-ImplicitCastExpr 0x56236f77bdd0 <col:20> 'int' <IntegralCast>
    |     | | | `-ImplicitCastExpr 0x56236f77bdb8 <col:20> '_Bool' <LValueToRValue>
    |     | | |   `-DeclRefExpr 0x56236f77bd78 <col:20> '_Bool' lvalue Var 0x56236f7749f0 'x$w_buff0_used' '_Bool'
    |     | | `-ImplicitCastExpr 0x56236f77be00 <col:38> 'int' <IntegralCast>
    |     | |   `-ImplicitCastExpr 0x56236f77bde8 <col:38> '_Bool' <LValueToRValue>
    |     | |     `-DeclRefExpr 0x56236f77bd98 <col:38> '_Bool' lvalue Var 0x56236f7745a8 'x$r_buff0_thd0' '_Bool'
    |     | `-BinaryOperator 0x56236f77bed8 <col:56, col:74> 'int' '&&'
    |     |   |-ImplicitCastExpr 0x56236f77be90 <col:56> 'int' <IntegralCast>
    |     |   | `-ImplicitCastExpr 0x56236f77be78 <col:56> '_Bool' <LValueToRValue>
    |     |   |   `-DeclRefExpr 0x56236f77be38 <col:56> '_Bool' lvalue Var 0x56236f774b00 'x$w_buff1_used' '_Bool'
    |     |   `-ImplicitCastExpr 0x56236f77bec0 <col:74> 'int' <IntegralCast>
    |     |     `-ImplicitCastExpr 0x56236f77bea8 <col:74> '_Bool' <LValueToRValue>
    |     |       `-DeclRefExpr 0x56236f77be58 <col:74> '_Bool' lvalue Var 0x56236f774710 'x$r_buff1_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x56236f77bf90 <col:91, col:98> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x56236f77bf48 <col:91, col:98> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x56236f77bf18 <col:98> 'int' 0
    |     `-ImplicitCastExpr 0x56236f77bfc0 <col:102> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x56236f77bfa8 <col:102> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x56236f77bf70 <col:102> '_Bool' lvalue Var 0x56236f774710 'x$r_buff1_thd0' '_Bool'
    |-CallExpr 0x56236f77c078 <line:792:3, col:25> 'void'
    | `-ImplicitCastExpr 0x56236f77c060 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x56236f77c040 <col:3> 'void ()' Function 0x56236f71af00 '__VERIFIER_atomic_end' 'void ()'
    |-CallExpr 0x56236f77c0d0 <line:793:3, col:27> 'void'
    | `-ImplicitCastExpr 0x56236f77c0b8 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x56236f77c098 <col:3> 'void ()' Function 0x56236f71ae40 '__VERIFIER_atomic_begin' 'void ()'
    |-BinaryOperator 0x56236f77c308 <line:794:3, col:85> '_Bool' '='
    | |-DeclRefExpr 0x56236f77c0f0 <col:3> '_Bool' lvalue Var 0x56236f774318 'main$tmp_guard1' '_Bool'
    | `-ImplicitCastExpr 0x56236f77c2f0 <col:21, col:85> '_Bool' <IntegralToBoolean>
    |   `-UnaryOperator 0x56236f77c2d8 <col:21, col:85> 'int' prefix '!' cannot overflow
    |     `-ParenExpr 0x56236f77c2b8 <col:22, col:85> 'int'
    |       `-BinaryOperator 0x56236f77c298 <col:23, col:84> 'int' '&&'
    |         |-BinaryOperator 0x56236f77c200 <col:23, col:56> 'int' '&&'
    |         | |-BinaryOperator 0x56236f77c168 <col:23, col:28> 'int' '=='
    |         | | |-ImplicitCastExpr 0x56236f77c150 <col:23> 'int' <LValueToRValue>
    |         | | | `-DeclRefExpr 0x56236f77c110 <col:23> 'int' lvalue Var 0x56236f774c00 'y' 'int'
    |         | | `-IntegerLiteral 0x56236f77c130 <col:28> 'int' 2
    |         | `-BinaryOperator 0x56236f77c1e0 <col:33, col:56> 'int' '=='
    |         |   |-ImplicitCastExpr 0x56236f77c1c8 <col:33> 'int' <LValueToRValue>
    |         |   | `-DeclRefExpr 0x56236f77c188 <col:33> 'int' lvalue Var 0x56236f7740e8 '__unbuffered_p1_EAX' 'int'
    |         |   `-IntegerLiteral 0x56236f77c1a8 <col:56> 'int' 1
    |         `-BinaryOperator 0x56236f77c278 <col:61, col:84> 'int' '=='
    |           |-ImplicitCastExpr 0x56236f77c260 <col:61> 'int' <LValueToRValue>
    |           | `-DeclRefExpr 0x56236f77c220 <col:61> 'int' lvalue Var 0x56236f774208 '__unbuffered_p1_EBX' 'int'
    |           `-IntegerLiteral 0x56236f77c240 <col:84> 'int' 0
    |-CallExpr 0x56236f77c360 <line:795:3, col:25> 'void'
    | `-ImplicitCastExpr 0x56236f77c348 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x56236f77c328 <col:3> 'void ()' Function 0x56236f71af00 '__VERIFIER_atomic_end' 'void ()'
    |-CallExpr 0x56236f77c3d8 <line:796:3, col:36> 'void'
    | |-ImplicitCastExpr 0x56236f77c3c0 <col:3> 'void (*)(int)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x56236f77c380 <col:3> 'void (int)' Function 0x56236f71abc8 '__VERIFIER_assert' 'void (int)'
    | `-ImplicitCastExpr 0x56236f77c418 <col:21> 'int' <IntegralCast>
    |   `-ImplicitCastExpr 0x56236f77c400 <col:21> '_Bool' <LValueToRValue>
    |     `-DeclRefExpr 0x56236f77c3a0 <col:21> '_Bool' lvalue Var 0x56236f774318 'main$tmp_guard1' '_Bool'
    `-ReturnStmt 0x56236f77c450 <line:797:3, col:10>
      `-IntegerLiteral 0x56236f77c430 <col:10> 'int' 0
