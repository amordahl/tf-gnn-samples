TranslationUnitDecl 0x5578bb0a4e18 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x5578bb0a56d8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x5578bb0a53b0 '__int128'
|-TypedefDecl 0x5578bb0a5748 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x5578bb0a53d0 'unsigned __int128'
|-TypedefDecl 0x5578bb0a5a50 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x5578bb0a5820 'struct __NSConstantString_tag'
|   `-Record 0x5578bb0a57a0 '__NSConstantString_tag'
|-TypedefDecl 0x5578bb0a5af8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x5578bb0a5ab0 'char *'
|   `-BuiltinType 0x5578bb0a4eb0 'char'
|-TypedefDecl 0x5578bb0e4650 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'struct __va_list_tag [1]'
| `-ConstantArrayType 0x5578bb0a5d90 'struct __va_list_tag [1]' 1 
|   `-RecordType 0x5578bb0a5bd0 'struct __va_list_tag'
|     `-Record 0x5578bb0a5b50 '__va_list_tag'
|-FunctionDecl 0x5578bb0e4790 <./split_9/mix003_tso.opt_false-unreach-call.i:1:1, col:34> col:13 used __VERIFIER_assume 'void (int)' extern
| `-ParmVarDecl 0x5578bb0e46c0 <col:31> col:34 'int'
|-FunctionDecl 0x5578bb0e4958 <line:2:1, col:45> col:15 used __VERIFIER_nondet_pointer 'void *(void)' extern
|-FunctionDecl 0x5578bb0e4a80 <line:3:1, col:61> col:13 used __VERIFIER_error 'void () __attribute__((noreturn))' extern
|-FunctionDecl 0x5578bb0e4bc8 <line:4:1, col:99> col:6 used __VERIFIER_assert 'void (int)'
| |-ParmVarDecl 0x5578bb0e4b38 <col:24, col:28> col:28 used expression 'int'
| `-CompoundStmt 0x5578bb0e4df8 <col:40, col:99>
|   |-IfStmt 0x5578bb0e4dc8 <col:42, col:88>
|   | |-UnaryOperator 0x5578bb0e4ca8 <col:46, col:47> 'int' prefix '!' cannot overflow
|   | | `-ImplicitCastExpr 0x5578bb0e4c90 <col:47> 'int' <LValueToRValue>
|   | |   `-DeclRefExpr 0x5578bb0e4c70 <col:47> 'int' lvalue ParmVar 0x5578bb0e4b38 'expression' 'int'
|   | `-CompoundStmt 0x5578bb0e4db0 <col:59, col:88>
|   |   `-LabelStmt 0x5578bb0e4d98 <col:61, col:85> 'ERROR'
|   |     `-CallExpr 0x5578bb0e4d28 <col:68, col:85> 'void'
|   |       `-ImplicitCastExpr 0x5578bb0e4d10 <col:68> 'void (*)() __attribute__((noreturn))' <FunctionToPointerDecay>
|   |         `-DeclRefExpr 0x5578bb0e4cc0 <col:68> 'void () __attribute__((noreturn))' Function 0x5578bb0e4a80 '__VERIFIER_error' 'void () __attribute__((noreturn))'
|   |-NullStmt 0x5578bb0e4de0 <col:89>
|   `-ReturnStmt 0x5578bb0e4de8 <col:91>
|-FunctionDecl 0x5578bb0e4e40 <line:5:1, col:37> col:13 used __VERIFIER_atomic_begin 'void ()' extern
|-FunctionDecl 0x5578bb0e4f00 <line:6:1, col:35> col:13 used __VERIFIER_atomic_end 'void ()' extern
|-FunctionDecl 0x5578bb0e5280 <line:8:1, line:10:76> line:8:13 __assert_fail 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x5578bb0e4fb8 <col:28, col:40> col:40 __assertion 'const char *'
| |-ParmVarDecl 0x5578bb0e5038 <col:53, col:65> col:65 __file 'const char *'
| |-ParmVarDecl 0x5578bb0e50b8 <line:9:7, col:20> col:20 __line 'unsigned int'
| |-ParmVarDecl 0x5578bb0e5138 <col:28, col:40> col:40 __function 'const char *'
| `-NoThrowAttr 0x5578bb0e5340 <line:10:22>
|-FunctionDecl 0x5578bb10b390 <line:11:1, line:13:76> line:11:13 __assert_perror_fail 'void (int, const char *, unsigned int, const char *) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x5578bb0e53b0 <col:35, col:39> col:39 __errnum 'int'
| |-ParmVarDecl 0x5578bb0e5430 <col:49, col:61> col:61 __file 'const char *'
| |-ParmVarDecl 0x5578bb0e54b0 <line:12:7, col:20> col:20 __line 'unsigned int'
| |-ParmVarDecl 0x5578bb0e5530 <col:28, col:40> col:40 __function 'const char *'
| `-NoThrowAttr 0x5578bb10b450 <line:13:22>
|-FunctionDecl 0x5578bb10b700 <line:14:1, line:15:76> line:14:13 __assert 'void (const char *, const char *, int) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x5578bb10b4c0 <col:23, col:35> col:35 __assertion 'const char *'
| |-ParmVarDecl 0x5578bb10b540 <col:48, col:60> col:60 __file 'const char *'
| |-ParmVarDecl 0x5578bb10b5c0 <col:68, col:72> col:72 __line 'int'
| `-NoThrowAttr 0x5578bb10b7b8 <line:15:22>
|-TypedefDecl 0x5578bb10b828 <line:17:1, col:23> col:23 __u_char 'unsigned char'
| `-BuiltinType 0x5578bb0a4f70 'unsigned char'
|-TypedefDecl 0x5578bb10b898 <line:18:1, col:28> col:28 __u_short 'unsigned short'
| `-BuiltinType 0x5578bb0a4f90 'unsigned short'
|-TypedefDecl 0x5578bb10b908 <line:19:1, col:22> col:22 __u_int 'unsigned int'
| `-BuiltinType 0x5578bb0a4fb0 'unsigned int'
|-TypedefDecl 0x5578bb10b978 <line:20:1, col:27> col:27 __u_long 'unsigned long'
| `-BuiltinType 0x5578bb0a4fd0 'unsigned long'
|-TypedefDecl 0x5578bb10b9e8 <line:21:1, col:21> col:21 __int8_t 'signed char'
| `-BuiltinType 0x5578bb0a4ed0 'signed char'
|-TypedefDecl 0x5578bb10ba58 <line:22:1, col:23> col:23 __uint8_t 'unsigned char'
| `-BuiltinType 0x5578bb0a4f70 'unsigned char'
|-TypedefDecl 0x5578bb10bac8 <line:23:1, col:26> col:26 __int16_t 'short'
| `-BuiltinType 0x5578bb0a4ef0 'short'
|-TypedefDecl 0x5578bb10bb38 <line:24:1, col:28> col:28 __uint16_t 'unsigned short'
| `-BuiltinType 0x5578bb0a4f90 'unsigned short'
|-TypedefDecl 0x5578bb10bba8 <line:25:1, col:20> col:20 __int32_t 'int'
| `-BuiltinType 0x5578bb0a4f10 'int'
|-TypedefDecl 0x5578bb10bc18 <line:26:1, col:22> col:22 __uint32_t 'unsigned int'
| `-BuiltinType 0x5578bb0a4fb0 'unsigned int'
|-TypedefDecl 0x5578bb10bc88 <line:27:1, col:25> col:25 __int64_t 'long'
| `-BuiltinType 0x5578bb0a4f30 'long'
|-TypedefDecl 0x5578bb10bcf8 <line:28:1, col:27> col:27 referenced __uint64_t 'unsigned long'
| `-BuiltinType 0x5578bb0a4fd0 'unsigned long'
|-TypedefDecl 0x5578bb10bd68 <line:29:1, col:18> col:18 referenced __quad_t 'long'
| `-BuiltinType 0x5578bb0a4f30 'long'
|-TypedefDecl 0x5578bb10bdd8 <line:30:1, col:27> col:27 __u_quad_t 'unsigned long'
| `-BuiltinType 0x5578bb0a4fd0 'unsigned long'
|-TypedefDecl 0x5578bb10be48 <line:31:1, col:27> col:27 __dev_t 'unsigned long'
| `-BuiltinType 0x5578bb0a4fd0 'unsigned long'
|-TypedefDecl 0x5578bb10beb8 <line:32:1, col:22> col:22 __uid_t 'unsigned int'
| `-BuiltinType 0x5578bb0a4fb0 'unsigned int'
|-TypedefDecl 0x5578bb10bf28 <line:33:1, col:22> col:22 __gid_t 'unsigned int'
| `-BuiltinType 0x5578bb0a4fb0 'unsigned int'
|-TypedefDecl 0x5578bb10bf98 <line:34:1, col:27> col:27 __ino_t 'unsigned long'
| `-BuiltinType 0x5578bb0a4fd0 'unsigned long'
|-TypedefDecl 0x5578bb10c008 <line:35:1, col:27> col:27 __ino64_t 'unsigned long'
| `-BuiltinType 0x5578bb0a4fd0 'unsigned long'
|-TypedefDecl 0x5578bb10c078 <line:36:1, col:22> col:22 __mode_t 'unsigned int'
| `-BuiltinType 0x5578bb0a4fb0 'unsigned int'
|-TypedefDecl 0x5578bb10c0e8 <line:37:1, col:27> col:27 __nlink_t 'unsigned long'
| `-BuiltinType 0x5578bb0a4fd0 'unsigned long'
|-TypedefDecl 0x5578bb10c158 <line:38:1, col:18> col:18 __off_t 'long'
| `-BuiltinType 0x5578bb0a4f30 'long'
|-TypedefDecl 0x5578bb10c1c8 <line:39:1, col:18> col:18 referenced __off64_t 'long'
| `-BuiltinType 0x5578bb0a4f30 'long'
|-TypedefDecl 0x5578bb10c238 <line:40:1, col:13> col:13 referenced __pid_t 'int'
| `-BuiltinType 0x5578bb0a4f10 'int'
|-RecordDecl 0x5578bb10c290 <line:41:9, col:32> col:9 struct definition
| `-FieldDecl 0x5578bb10c408 <col:18, col:29> col:22 __val 'int [2]'
|-TypedefDecl 0x5578bb10c4c0 <col:1, col:34> col:34 __fsid_t 'struct __fsid_t':'__fsid_t'
| `-ElaboratedType 0x5578bb10c460 'struct __fsid_t' sugar
|   `-RecordType 0x5578bb10c310 '__fsid_t'
|     `-Record 0x5578bb10c290 ''
|-TypedefDecl 0x5578bb10c548 <line:42:1, col:18> col:18 referenced __clock_t 'long'
| `-BuiltinType 0x5578bb0a4f30 'long'
|-TypedefDecl 0x5578bb10c5b8 <line:43:1, col:27> col:27 __rlim_t 'unsigned long'
| `-BuiltinType 0x5578bb0a4fd0 'unsigned long'
|-TypedefDecl 0x5578bb10c628 <line:44:1, col:27> col:27 __rlim64_t 'unsigned long'
| `-BuiltinType 0x5578bb0a4fd0 'unsigned long'
|-TypedefDecl 0x5578bb10c698 <line:45:1, col:22> col:22 __id_t 'unsigned int'
| `-BuiltinType 0x5578bb0a4fb0 'unsigned int'
|-TypedefDecl 0x5578bb10c708 <line:46:1, col:18> col:18 referenced __time_t 'long'
| `-BuiltinType 0x5578bb0a4f30 'long'
|-TypedefDecl 0x5578bb10c778 <line:47:1, col:22> col:22 __useconds_t 'unsigned int'
| `-BuiltinType 0x5578bb0a4fb0 'unsigned int'
|-TypedefDecl 0x5578bb10c7e8 <line:48:1, col:18> col:18 __suseconds_t 'long'
| `-BuiltinType 0x5578bb0a4f30 'long'
|-TypedefDecl 0x5578bb10c858 <line:49:1, col:13> col:13 __daddr_t 'int'
| `-BuiltinType 0x5578bb0a4f10 'int'
|-TypedefDecl 0x5578bb10c8c8 <line:50:1, col:13> col:13 __key_t 'int'
| `-BuiltinType 0x5578bb0a4f10 'int'
|-TypedefDecl 0x5578bb10c938 <line:51:1, col:13> col:13 referenced __clockid_t 'int'
| `-BuiltinType 0x5578bb0a4f10 'int'
|-TypedefDecl 0x5578bb10c9a8 <line:52:1, col:16> col:16 referenced __timer_t 'void *'
| `-PointerType 0x5578bb0a5630 'void *'
|   `-BuiltinType 0x5578bb0a4e70 'void'
|-TypedefDecl 0x5578bb10ca18 <line:53:1, col:18> col:18 __blksize_t 'long'
| `-BuiltinType 0x5578bb0a4f30 'long'
|-TypedefDecl 0x5578bb10ca88 <line:54:1, col:18> col:18 __blkcnt_t 'long'
| `-BuiltinType 0x5578bb0a4f30 'long'
|-TypedefDecl 0x5578bb10caf8 <line:55:1, col:18> col:18 __blkcnt64_t 'long'
| `-BuiltinType 0x5578bb0a4f30 'long'
|-TypedefDecl 0x5578bb10cb68 <line:56:1, col:27> col:27 __fsblkcnt_t 'unsigned long'
| `-BuiltinType 0x5578bb0a4fd0 'unsigned long'
|-TypedefDecl 0x5578bb10cbd8 <line:57:1, col:27> col:27 __fsblkcnt64_t 'unsigned long'
| `-BuiltinType 0x5578bb0a4fd0 'unsigned long'
|-TypedefDecl 0x5578bb10cc48 <line:58:1, col:27> col:27 __fsfilcnt_t 'unsigned long'
| `-BuiltinType 0x5578bb0a4fd0 'unsigned long'
|-TypedefDecl 0x5578bb10ccb8 <line:59:1, col:27> col:27 __fsfilcnt64_t 'unsigned long'
| `-BuiltinType 0x5578bb0a4fd0 'unsigned long'
|-TypedefDecl 0x5578bb10cd28 <line:60:1, col:18> col:18 __fsword_t 'long'
| `-BuiltinType 0x5578bb0a4f30 'long'
|-TypedefDecl 0x5578bb10cd98 <line:61:1, col:18> col:18 __ssize_t 'long'
| `-BuiltinType 0x5578bb0a4f30 'long'
|-TypedefDecl 0x5578bb10ce08 <line:62:1, col:18> col:18 referenced __syscall_slong_t 'long'
| `-BuiltinType 0x5578bb0a4f30 'long'
|-TypedefDecl 0x5578bb10ce78 <line:63:1, col:27> col:27 __syscall_ulong_t 'unsigned long'
| `-BuiltinType 0x5578bb0a4fd0 'unsigned long'
|-TypedefDecl 0x5578bb10cf08 <line:64:1, col:19> col:19 __loff_t '__off64_t':'long'
| `-TypedefType 0x5578bb10ced0 '__off64_t' sugar
|   |-Typedef 0x5578bb10c1c8 '__off64_t'
|   `-BuiltinType 0x5578bb0a4f30 'long'
|-TypedefDecl 0x5578bb10d000 <line:65:1, col:19> col:19 __qaddr_t '__quad_t *'
| `-PointerType 0x5578bb10cfc0 '__quad_t *'
|   `-TypedefType 0x5578bb10cf60 '__quad_t' sugar
|     |-Typedef 0x5578bb10bd68 '__quad_t'
|     `-BuiltinType 0x5578bb0a4f30 'long'
|-TypedefDecl 0x5578bb10d070 <line:66:1, col:15> col:15 __caddr_t 'char *'
| `-PointerType 0x5578bb0a5ab0 'char *'
|   `-BuiltinType 0x5578bb0a4eb0 'char'
|-TypedefDecl 0x5578bb10d0e0 <line:67:1, col:18> col:18 __intptr_t 'long'
| `-BuiltinType 0x5578bb0a4f30 'long'
|-TypedefDecl 0x5578bb10d150 <line:68:1, col:22> col:22 __socklen_t 'unsigned int'
| `-BuiltinType 0x5578bb0a4fb0 'unsigned int'
|-FunctionDecl 0x5578bb10d298 <line:69:1, line:73:1> line:70:1 __bswap_32 'unsigned int (unsigned int)' static inline
| |-ParmVarDecl 0x5578bb10d1c0 <col:13, col:26> col:26 used __bsx 'unsigned int'
| `-CompoundStmt 0x5578bb10e5e8 <line:71:1, line:73:1>
|   `-ReturnStmt 0x5578bb10e5d8 <line:72:3, col:34>
|     `-CallExpr 0x5578bb10e598 <col:10, col:34> 'unsigned int'
|       |-ImplicitCastExpr 0x5578bb10e580 <col:10> 'unsigned int (*)(unsigned int)' <BuiltinFnToFnPtr>
|       | `-DeclRefExpr 0x5578bb10e510 <col:10> '<builtin fn type>' Function 0x5578bb10e380 '__builtin_bswap32' 'unsigned int (unsigned int)'
|       `-ImplicitCastExpr 0x5578bb10e5c0 <col:29> 'unsigned int' <LValueToRValue>
|         `-DeclRefExpr 0x5578bb10e530 <col:29> 'unsigned int' lvalue ParmVar 0x5578bb10d1c0 '__bsx' 'unsigned int'
|-FunctionDecl 0x5578bb10e380 <col:10> col:10 implicit used __builtin_bswap32 'unsigned int (unsigned int)' extern
| |-ParmVarDecl 0x5578bb10e420 <<invalid sloc>> <invalid sloc> 'unsigned int'
| |-NoThrowAttr 0x5578bb10e490 <col:10> Implicit
| `-ConstAttr 0x5578bb10e4e8 <col:10> Implicit
|-FunctionDecl 0x5578bb10e740 <line:74:1, line:78:1> line:75:1 __bswap_64 '__uint64_t (__uint64_t)' static inline
| |-ParmVarDecl 0x5578bb10e638 <col:13, col:24> col:24 used __bsx '__uint64_t':'unsigned long'
| `-CompoundStmt 0x5578bb10ea58 <line:76:1, line:78:1>
|   `-ReturnStmt 0x5578bb10ea48 <line:77:3, col:34>
|     `-CallExpr 0x5578bb10ea08 <col:10, col:34> 'unsigned long'
|       |-ImplicitCastExpr 0x5578bb10e9f0 <col:10> 'unsigned long (*)(unsigned long)' <BuiltinFnToFnPtr>
|       | `-DeclRefExpr 0x5578bb10e978 <col:10> '<builtin fn type>' Function 0x5578bb10e7e8 '__builtin_bswap64' 'unsigned long (unsigned long)'
|       `-ImplicitCastExpr 0x5578bb10ea30 <col:29> '__uint64_t':'unsigned long' <LValueToRValue>
|         `-DeclRefExpr 0x5578bb10e998 <col:29> '__uint64_t':'unsigned long' lvalue ParmVar 0x5578bb10e638 '__bsx' '__uint64_t':'unsigned long'
|-FunctionDecl 0x5578bb10e7e8 <col:10> col:10 implicit used __builtin_bswap64 'unsigned long (unsigned long)' extern
| |-ParmVarDecl 0x5578bb10e888 <<invalid sloc>> <invalid sloc> 'unsigned long'
| |-NoThrowAttr 0x5578bb10e8f8 <col:10> Implicit
| `-ConstAttr 0x5578bb10e950 <col:10> Implicit
|-TypedefDecl 0x5578bb10ea88 <line:79:1, col:27> col:27 referenced size_t 'unsigned long'
| `-BuiltinType 0x5578bb0a4fd0 'unsigned long'
|-TypedefDecl 0x5578bb10eb18 <line:81:1, col:18> col:18 referenced time_t '__time_t':'long'
| `-TypedefType 0x5578bb10eae0 '__time_t' sugar
|   |-Typedef 0x5578bb10c708 '__time_t'
|   `-BuiltinType 0x5578bb0a4f30 'long'
|-RecordDecl 0x5578bb10eb70 <line:84:1, line:88:3> line:84:8 struct timespec definition
| |-FieldDecl 0x5578bb10ec28 <line:86:5, col:14> col:14 tv_sec '__time_t':'long'
| `-FieldDecl 0x5578bb10ecb8 <line:87:5, col:23> col:23 tv_nsec '__syscall_slong_t':'long'
|-TypedefDecl 0x5578bb10ed48 <line:89:1, col:17> col:17 referenced pid_t '__pid_t':'int'
| `-TypedefType 0x5578bb10ed10 '__pid_t' sugar
|   |-Typedef 0x5578bb10c238 '__pid_t'
|   `-BuiltinType 0x5578bb0a4f10 'int'
|-RecordDecl 0x5578bb10eda0 <line:90:1, line:93:3> line:90:8 struct sched_param definition
| `-FieldDecl 0x5578bb10ee60 <line:92:5, col:9> col:9 __sched_priority 'int'
|-RecordDecl 0x5578bb10eeb0 <line:96:1, line:99:3> line:96:8 struct __sched_param definition
| `-FieldDecl 0x5578bb10ef70 <line:98:5, col:9> col:9 __sched_priority 'int'
|-TypedefDecl 0x5578bb10efd8 <line:100:1, col:27> col:27 referenced __cpu_mask 'unsigned long'
| `-BuiltinType 0x5578bb0a4fd0 'unsigned long'
|-RecordDecl 0x5578bb10f030 <line:101:9, line:104:1> line:101:9 struct definition
| `-FieldDecl 0x5578bb10f2c0 <line:103:3, col:53> col:14 __bits '__cpu_mask [64]'
|-TypedefDecl 0x5578bb1103a0 <line:101:1, line:104:3> col:3 referenced cpu_set_t 'struct cpu_set_t':'cpu_set_t'
| `-ElaboratedType 0x5578bb10f310 'struct cpu_set_t' sugar
|   `-RecordType 0x5578bb10f0b0 'cpu_set_t'
|     `-Record 0x5578bb10f030 ''
|-FunctionDecl 0x5578bb110678 <line:106:1, line:107:42> line:106:12 __sched_cpucount 'int (size_t, const cpu_set_t *)' extern
| |-ParmVarDecl 0x5578bb110448 <col:30, col:37> col:37 __setsize 'size_t':'unsigned long'
| |-ParmVarDecl 0x5578bb110550 <col:48, col:65> col:65 __setp 'const cpu_set_t *'
| `-NoThrowAttr 0x5578bb110728 <line:107:19>
|-FunctionDecl 0x5578bb110900 <line:108:1, col:92> col:19 __sched_cpualloc 'cpu_set_t *(size_t)' extern
| |-ParmVarDecl 0x5578bb110790 <col:37, col:44> col:44 __count 'size_t':'unsigned long'
| `-NoThrowAttr 0x5578bb1109a8 <col:69>
|-FunctionDecl 0x5578bb110b20 <line:109:1, col:87> col:13 __sched_cpufree 'void (cpu_set_t *)' extern
| |-ParmVarDecl 0x5578bb110a10 <col:30, col:41> col:41 __set 'cpu_set_t *'
| `-NoThrowAttr 0x5578bb110bc8 <col:64>
|-FunctionDecl 0x5578bb110e88 <line:112:1, line:113:45> line:112:12 sched_setparam 'int (__pid_t, const struct sched_param *)' extern
| |-ParmVarDecl 0x5578bb110c30 <col:28, col:36> col:36 __pid '__pid_t':'int'
| |-ParmVarDecl 0x5578bb110d68 <col:43, col:69> col:69 __param 'const struct sched_param *'
| `-NoThrowAttr 0x5578bb110f38 <line:113:22>
|-FunctionDecl 0x5578bb1111b8 <line:114:1, col:111> col:12 sched_getparam 'int (__pid_t, struct sched_param *)' extern
| |-ParmVarDecl 0x5578bb110fa0 <col:28, col:36> col:36 __pid '__pid_t':'int'
| |-ParmVarDecl 0x5578bb111098 <col:43, col:63> col:63 __param 'struct sched_param *'
| `-NoThrowAttr 0x5578bb111268 <col:88>
|-FunctionDecl 0x5578bb111588 <line:115:1, line:116:85> line:115:12 sched_setscheduler 'int (__pid_t, int, const struct sched_param *)' extern
| |-ParmVarDecl 0x5578bb1112d0 <col:32, col:40> col:40 __pid '__pid_t':'int'
| |-ParmVarDecl 0x5578bb1113b0 <col:47, col:51> col:51 __policy 'int'
| |-ParmVarDecl 0x5578bb111440 <line:116:11, col:37> col:37 __param 'const struct sched_param *'
| `-NoThrowAttr 0x5578bb111640 <col:62>
|-FunctionDecl 0x5578bb1117b8 <line:117:1, col:86> col:12 sched_getscheduler 'int (__pid_t)' extern
| |-ParmVarDecl 0x5578bb1116a8 <col:32, col:40> col:40 __pid '__pid_t':'int'
| `-NoThrowAttr 0x5578bb111860 <col:63>
|-FunctionDecl 0x5578bb111988 <line:118:1, col:70> col:12 sched_yield 'int (void)' extern
| `-NoThrowAttr 0x5578bb111a28 <col:47>
|-FunctionDecl 0x5578bb111b30 <line:119:1, col:92> col:12 sched_get_priority_max 'int (int)' extern
| |-ParmVarDecl 0x5578bb111a98 <col:36, col:40> col:40 __algorithm 'int'
| `-NoThrowAttr 0x5578bb111bd8 <col:69>
|-FunctionDecl 0x5578bb111ce0 <line:120:1, col:92> col:12 sched_get_priority_min 'int (int)' extern
| |-ParmVarDecl 0x5578bb111c48 <col:36, col:40> col:40 __algorithm 'int'
| `-NoThrowAttr 0x5578bb111d88 <col:69>
|-FunctionDecl 0x5578bb112048 <line:121:1, col:111> col:12 sched_rr_get_interval 'int (__pid_t, struct timespec *)' extern
| |-ParmVarDecl 0x5578bb111df0 <col:35, col:43> col:43 __pid '__pid_t':'int'
| |-ParmVarDecl 0x5578bb111f28 <col:50, col:67> col:67 __t 'struct timespec *'
| `-NoThrowAttr 0x5578bb1120f8 <col:88>
|-TypedefDecl 0x5578bb112188 <line:125:1, col:19> col:19 referenced clock_t '__clock_t':'long'
| `-TypedefType 0x5578bb112150 '__clock_t' sugar
|   |-Typedef 0x5578bb10c548 '__clock_t'
|   `-BuiltinType 0x5578bb0a4f30 'long'
|-TypedefDecl 0x5578bb112218 <line:128:1, col:21> col:21 referenced clockid_t '__clockid_t':'int'
| `-TypedefType 0x5578bb1121e0 '__clockid_t' sugar
|   |-Typedef 0x5578bb10c938 '__clockid_t'
|   `-BuiltinType 0x5578bb0a4f10 'int'
|-TypedefDecl 0x5578bb1122a8 <line:129:1, col:19> col:19 referenced timer_t '__timer_t':'void *'
| `-TypedefType 0x5578bb112270 '__timer_t' sugar
|   |-Typedef 0x5578bb10c9a8 '__timer_t'
|   `-PointerType 0x5578bb0a5630 'void *'
|     `-BuiltinType 0x5578bb0a4e70 'void'
|-RecordDecl 0x5578bb112300 <line:131:1, line:144:1> line:131:8 struct tm definition
| |-FieldDecl 0x5578bb1123d8 <line:133:3, col:7> col:7 tm_sec 'int'
| |-FieldDecl 0x5578bb112440 <line:134:3, col:7> col:7 tm_min 'int'
| |-FieldDecl 0x5578bb1124a8 <line:135:3, col:7> col:7 tm_hour 'int'
| |-FieldDecl 0x5578bb112510 <line:136:3, col:7> col:7 tm_mday 'int'
| |-FieldDecl 0x5578bb112578 <line:137:3, col:7> col:7 tm_mon 'int'
| |-FieldDecl 0x5578bb1125e0 <line:138:3, col:7> col:7 tm_year 'int'
| |-FieldDecl 0x5578bb112648 <line:139:3, col:7> col:7 tm_wday 'int'
| |-FieldDecl 0x5578bb1126b0 <line:140:3, col:7> col:7 tm_yday 'int'
| |-FieldDecl 0x5578bb112718 <line:141:3, col:7> col:7 tm_isdst 'int'
| |-FieldDecl 0x5578bb112780 <line:142:3, col:12> col:12 tm_gmtoff 'long'
| `-FieldDecl 0x5578bb1127e8 <line:143:3, col:15> col:15 tm_zone 'const char *'
|-RecordDecl 0x5578bb112838 <line:147:1, line:151:3> line:147:8 struct itimerspec definition
| |-FieldDecl 0x5578bb112908 <line:149:5, col:21> col:21 it_interval 'struct timespec':'struct timespec'
| `-FieldDecl 0x5578bb112978 <line:150:5, col:21> col:21 it_value 'struct timespec':'struct timespec'
|-RecordDecl 0x5578bb112a20 <line:152:1, col:8> col:8 struct sigevent
|-FunctionDecl 0x5578bb112bf0 <line:154:1, col:68> col:16 clock 'clock_t (void)' extern
| `-NoThrowAttr 0x5578bb112c90 <col:45>
|-FunctionDecl 0x5578bb112e70 <line:155:1, col:77> col:15 time 'time_t (time_t *)' extern
| |-ParmVarDecl 0x5578bb112d60 <col:21, col:29> col:29 __timer 'time_t *'
| `-NoThrowAttr 0x5578bb112f18 <col:54>
|-FunctionDecl 0x5578bb113118 <line:156:1, line:157:73> line:156:15 difftime 'double (time_t, time_t)' extern
| |-ParmVarDecl 0x5578bb112f80 <col:25, col:32> col:32 __time1 'time_t':'long'
| |-ParmVarDecl 0x5578bb112ff8 <col:41, col:48> col:48 __time0 'time_t':'long'
| |-NoThrowAttr 0x5578bb1131c8 <line:157:22>
| `-ConstAttr 0x5578bb113220 <col:63>
|-FunctionDecl 0x5578bb114050 <line:158:1, col:79> col:15 mktime 'time_t (struct tm *)' extern
| |-ParmVarDecl 0x5578bb113318 <col:23, col:34> col:34 __tp 'struct tm *'
| `-NoThrowAttr 0x5578bb1140f8 <col:56>
|-FunctionDecl 0x5578bb1144a0 <line:159:1, line:161:77> line:159:15 strftime 'size_t (char *restrict, size_t, const char *restrict, const struct tm *restrict)' extern
| |-ParmVarDecl 0x5578bb114168 <col:25, col:42> col:42 __s 'char *restrict'
| |-ParmVarDecl 0x5578bb1141e0 <col:47, col:54> col:54 __maxsize 'size_t':'unsigned long'
| |-ParmVarDecl 0x5578bb114260 <line:160:4, col:27> col:27 __format 'const char *restrict'
| |-ParmVarDecl 0x5578bb114358 <line:161:4, col:32> col:32 __tp 'const struct tm *restrict'
| `-NoThrowAttr 0x5578bb114560 <col:54>
|-RecordDecl 0x5578bb1145b8 <line:163:9, line:170:1> line:163:16 struct __locale_struct definition
| |-RecordDecl 0x5578bb114668 parent 0x5578bb0a4e18 <line:165:3, col:10> col:10 struct __locale_data
| |-FieldDecl 0x5578bb1148c8 <col:3, col:37> col:25 __locales 'struct __locale_data *[13]'
| |-FieldDecl 0x5578bb114968 <line:166:3, col:29> col:29 __ctype_b 'const unsigned short *'
| |-FieldDecl 0x5578bb1149d0 <line:167:3, col:14> col:14 __ctype_tolower 'const int *'
| |-FieldDecl 0x5578bb114a38 <line:168:3, col:14> col:14 __ctype_toupper 'const int *'
| `-FieldDecl 0x5578bb114b28 <line:169:3, col:25> col:15 __names 'const char *[13]'
|-TypedefDecl 0x5578bb114c48 <line:163:1, line:170:4> col:4 referenced __locale_t 'struct __locale_struct *'
| `-PointerType 0x5578bb114bf0 'struct __locale_struct *'
|   `-ElaboratedType 0x5578bb114b80 'struct __locale_struct' sugar
|     `-RecordType 0x5578bb114640 'struct __locale_struct'
|       `-Record 0x5578bb1145b8 '__locale_struct'
|-TypedefDecl 0x5578bb114cf8 <line:171:1, col:20> col:20 locale_t '__locale_t':'struct __locale_struct *'
| `-TypedefType 0x5578bb114cc0 '__locale_t' sugar
|   |-Typedef 0x5578bb114c48 '__locale_t'
|   `-PointerType 0x5578bb114bf0 'struct __locale_struct *'
|     `-ElaboratedType 0x5578bb114b80 'struct __locale_struct' sugar
|       `-RecordType 0x5578bb114640 'struct __locale_struct'
|         `-Record 0x5578bb1145b8 '__locale_struct'
|-FunctionDecl 0x5578bb116110 <line:172:1, line:175:63> line:172:15 strftime_l 'size_t (char *restrict, size_t, const char *restrict, const struct tm *restrict, __locale_t)' extern
| |-ParmVarDecl 0x5578bb114d68 <col:27, col:44> col:44 __s 'char *restrict'
| |-ParmVarDecl 0x5578bb114de0 <col:49, col:56> col:56 __maxsize 'size_t':'unsigned long'
| |-ParmVarDecl 0x5578bb114e60 <line:173:6, col:29> col:29 __format 'const char *restrict'
| |-ParmVarDecl 0x5578bb114ef0 <line:174:6, col:34> col:34 __tp 'const struct tm *restrict'
| |-ParmVarDecl 0x5578bb114f68 <line:175:6, col:17> col:17 __loc '__locale_t':'struct __locale_struct *'
| `-NoThrowAttr 0x5578bb1161d8 <col:40>
|-FunctionDecl 0x5578bb1163c8 <line:177:1, col:89> col:19 gmtime 'struct tm *(const time_t *)' extern
| |-ParmVarDecl 0x5578bb1162a0 <col:27, col:41> col:41 __timer 'const time_t *'
| `-NoThrowAttr 0x5578bb116470 <col:66>
|-FunctionDecl 0x5578bb116580 <line:178:1, col:92> col:19 localtime 'struct tm *(const time_t *)' extern
| |-ParmVarDecl 0x5578bb1164d8 <col:30, col:44> col:44 __timer 'const time_t *'
| `-NoThrowAttr 0x5578bb116628 <col:69>
|-FunctionDecl 0x5578bb116858 <line:180:1, line:181:75> line:180:19 gmtime_r 'struct tm *(const time_t *restrict, struct tm *restrict)' extern
| |-ParmVarDecl 0x5578bb116690 <col:29, col:54> col:54 __timer 'const time_t *restrict'
| |-ParmVarDecl 0x5578bb116720 <line:181:8, col:30> col:30 __tp 'struct tm *restrict'
| `-NoThrowAttr 0x5578bb116908 <col:52>
|-FunctionDecl 0x5578bb116ab0 <line:182:1, line:183:78> line:182:19 localtime_r 'struct tm *(const time_t *restrict, struct tm *restrict)' extern
| |-ParmVarDecl 0x5578bb116970 <col:32, col:57> col:57 __timer 'const time_t *restrict'
| |-ParmVarDecl 0x5578bb116a00 <line:183:11, col:33> col:33 __tp 'struct tm *restrict'
| `-NoThrowAttr 0x5578bb116b60 <col:55>
|-FunctionDecl 0x5578bb116cf8 <line:185:1, col:85> col:14 asctime 'char *(const struct tm *)' extern
| |-ParmVarDecl 0x5578bb116be0 <col:23, col:40> col:40 __tp 'const struct tm *'
| `-NoThrowAttr 0x5578bb116da0 <col:62>
|-FunctionDecl 0x5578bb116f18 <line:186:1, col:83> col:14 ctime 'char *(const time_t *)' extern
| |-ParmVarDecl 0x5578bb116e08 <col:21, col:35> col:35 __timer 'const time_t *'
| `-NoThrowAttr 0x5578bb116fc0 <col:60>
|-FunctionDecl 0x5578bb1172b8 <line:188:1, line:189:67> line:188:14 asctime_r 'char *(const struct tm *restrict, char *restrict)' extern
| |-ParmVarDecl 0x5578bb117118 <col:25, col:53> col:53 __tp 'const struct tm *restrict'
| |-ParmVarDecl 0x5578bb117198 <line:189:4, col:21> col:21 __buf 'char *restrict'
| `-NoThrowAttr 0x5578bb117368 <col:44>
|-FunctionDecl 0x5578bb117578 <line:190:1, line:191:72> line:190:14 ctime_r 'char *(const time_t *restrict, char *restrict)' extern
| |-ParmVarDecl 0x5578bb1173d0 <col:23, col:48> col:48 __timer 'const time_t *restrict'
| |-ParmVarDecl 0x5578bb117450 <line:191:9, col:26> col:26 __buf 'char *restrict'
| `-NoThrowAttr 0x5578bb117628 <col:49>
|-VarDecl 0x5578bb117728 <line:192:1, col:24> col:14 __tzname 'char *[2]' extern
|-VarDecl 0x5578bb1177a8 <line:193:1, col:12> col:12 __daylight 'int' extern
|-VarDecl 0x5578bb117828 <line:194:1, col:17> col:17 __timezone 'long' extern
|-VarDecl 0x5578bb1178f0 <line:195:1, col:22> col:14 tzname 'char *[2]' extern
|-FunctionDecl 0x5578bb117a20 <line:196:1, col:65> col:13 tzset 'void (void)' extern
| `-NoThrowAttr 0x5578bb117ac0 <col:42>
|-VarDecl 0x5578bb117b30 <line:197:1, col:12> col:12 daylight 'int' extern
|-VarDecl 0x5578bb117bb0 <line:198:1, col:17> col:17 timezone 'long' extern
|-FunctionDecl 0x5578bb117d38 <line:199:1, col:80> col:12 stime 'int (const time_t *)' extern
| |-ParmVarDecl 0x5578bb117c28 <col:19, col:33> col:33 __when 'const time_t *'
| `-NoThrowAttr 0x5578bb117de0 <col:57>
|-FunctionDecl 0x5578bb117ef0 <line:200:1, col:79> col:15 timegm 'time_t (struct tm *)' extern
| |-ParmVarDecl 0x5578bb117e60 <col:23, col:34> col:34 __tp 'struct tm *'
| `-NoThrowAttr 0x5578bb117f98 <col:56>
|-FunctionDecl 0x5578bb1180d0 <line:201:1, col:82> col:15 timelocal 'time_t (struct tm *)' extern
| |-ParmVarDecl 0x5578bb118018 <col:26, col:37> col:37 __tp 'struct tm *'
| `-NoThrowAttr 0x5578bb118178 <col:59>
|-FunctionDecl 0x5578bb118280 <line:202:1, col:99> col:12 dysize 'int (int)' extern
| |-ParmVarDecl 0x5578bb1181e8 <col:20, col:24> col:24 __year 'int'
| |-NoThrowAttr 0x5578bb118328 <col:48>
| `-ConstAttr 0x5578bb118380 <col:89>
|-FunctionDecl 0x5578bb1185e8 <line:203:1, line:204:37> line:203:12 nanosleep 'int (const struct timespec *, struct timespec *)' extern
| |-ParmVarDecl 0x5578bb118438 <col:23, col:46> col:46 __requested_time 'const struct timespec *'
| `-ParmVarDecl 0x5578bb1184c8 <line:204:9, col:26> col:26 __remaining 'struct timespec *'
|-FunctionDecl 0x5578bb118848 <line:205:1, col:111> col:12 clock_getres 'int (clockid_t, struct timespec *)' extern
| |-ParmVarDecl 0x5578bb1186d8 <col:26, col:36> col:36 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x5578bb118768 <col:48, col:65> col:65 __res 'struct timespec *'
| `-NoThrowAttr 0x5578bb1188f8 <col:88>
|-FunctionDecl 0x5578bb118a90 <line:206:1, col:111> col:12 clock_gettime 'int (clockid_t, struct timespec *)' extern
| |-ParmVarDecl 0x5578bb118960 <col:27, col:37> col:37 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x5578bb1189f0 <col:49, col:66> col:66 __tp 'struct timespec *'
| `-NoThrowAttr 0x5578bb118b40 <col:88>
|-FunctionDecl 0x5578bb118d58 <line:207:1, line:208:45> line:207:12 clock_settime 'int (clockid_t, const struct timespec *)' extern
| |-ParmVarDecl 0x5578bb118ba8 <col:27, col:37> col:37 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x5578bb118c38 <col:49, col:72> col:72 __tp 'const struct timespec *'
| `-NoThrowAttr 0x5578bb118e08 <line:208:22>
|-FunctionDecl 0x5578bb119178 <line:209:1, line:211:30> line:209:12 clock_nanosleep 'int (clockid_t, int, const struct timespec *, struct timespec *)' extern
| |-ParmVarDecl 0x5578bb118e70 <col:29, col:39> col:39 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x5578bb118ef0 <col:51, col:55> col:55 __flags 'int'
| |-ParmVarDecl 0x5578bb118f80 <line:210:8, col:31> col:31 __req 'const struct timespec *'
| `-ParmVarDecl 0x5578bb119010 <line:211:8, col:25> col:25 __rem 'struct timespec *'
|-FunctionDecl 0x5578bb119478 <line:212:1, col:108> col:12 clock_getcpuclockid 'int (pid_t, clockid_t *)' extern
| |-ParmVarDecl 0x5578bb119278 <col:33, col:39> col:39 __pid 'pid_t':'int'
| |-ParmVarDecl 0x5578bb119350 <col:46, col:57> col:57 __clock_id 'clockid_t *'
| `-NoThrowAttr 0x5578bb119528 <col:85>
|-FunctionDecl 0x5578bb119918 <line:213:1, line:215:75> line:213:12 timer_create 'int (clockid_t, struct sigevent *restrict, timer_t *restrict)' extern
| |-ParmVarDecl 0x5578bb119590 <col:26, col:36> col:36 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x5578bb1196c8 <line:214:5, col:33> col:33 __evp 'struct sigevent *restrict'
| |-ParmVarDecl 0x5578bb1197d0 <line:215:5, col:25> col:25 __timerid 'timer_t *restrict'
| `-NoThrowAttr 0x5578bb1199d0 <col:52>
|-FunctionDecl 0x5578bb119b48 <line:216:1, col:84> col:12 timer_delete 'int (timer_t)' extern
| |-ParmVarDecl 0x5578bb119a38 <col:26, col:34> col:34 __timerid 'timer_t':'void *'
| `-NoThrowAttr 0x5578bb119bf0 <col:61>
|-FunctionDecl 0x5578bb11a0f0 <line:217:1, line:219:85> line:217:12 timer_settime 'int (timer_t, int, const struct itimerspec *restrict, struct itimerspec *restrict)' extern
| |-ParmVarDecl 0x5578bb119c58 <col:27, col:35> col:35 __timerid 'timer_t':'void *'
| |-ParmVarDecl 0x5578bb119cd8 <col:46, col:50> col:50 __flags 'int'
| |-ParmVarDecl 0x5578bb119e08 <line:218:6, col:42> col:42 __value 'const struct itimerspec *restrict'
| |-ParmVarDecl 0x5578bb119ef8 <line:219:6, col:36> col:36 __ovalue 'struct itimerspec *restrict'
| `-NoThrowAttr 0x5578bb11a1b0 <col:62>
|-FunctionDecl 0x5578bb11a3c8 <line:220:1, line:221:45> line:220:12 timer_gettime 'int (timer_t, struct itimerspec *)' extern
| |-ParmVarDecl 0x5578bb11a218 <col:27, col:35> col:35 __timerid 'timer_t':'void *'
| |-ParmVarDecl 0x5578bb11a2a8 <col:46, col:65> col:65 __value 'struct itimerspec *'
| `-NoThrowAttr 0x5578bb11a478 <line:221:22>
|-FunctionDecl 0x5578bb11a578 <line:222:1, col:88> col:12 timer_getoverrun 'int (timer_t)' extern
| |-ParmVarDecl 0x5578bb11a4e0 <col:30, col:38> col:38 __timerid 'timer_t':'void *'
| `-NoThrowAttr 0x5578bb11a620 <col:65>
|-TypedefDecl 0x5578bb11a690 <line:224:1, col:27> col:27 referenced pthread_t 'unsigned long'
| `-BuiltinType 0x5578bb0a4fd0 'unsigned long'
|-RecordDecl 0x5578bb11a6e8 <line:225:1, line:229:1> line:225:7 union pthread_attr_t definition
| |-FieldDecl 0x5578bb11a830 <line:227:3, col:17> col:8 __size 'char [56]'
| `-FieldDecl 0x5578bb11a898 <line:228:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x5578bb11a948 <line:230:1, col:30> col:30 referenced pthread_attr_t 'union pthread_attr_t':'union pthread_attr_t'
| `-ElaboratedType 0x5578bb11a8f0 'union pthread_attr_t' sugar
|   `-RecordType 0x5578bb11a770 'union pthread_attr_t'
|     `-Record 0x5578bb11a6e8 'pthread_attr_t'
|-RecordDecl 0x5578bb11a9a0 <line:231:9, line:235:1> line:231:16 struct __pthread_internal_list definition
| |-FieldDecl 0x5578bb11ab18 <line:233:3, col:35> col:35 __prev 'struct __pthread_internal_list *'
| `-FieldDecl 0x5578bb11ab90 <line:234:3, col:35> col:35 __next 'struct __pthread_internal_list *'
|-TypedefDecl 0x5578bb11ac40 <line:231:1, line:235:3> col:3 referenced __pthread_list_t 'struct __pthread_internal_list':'struct __pthread_internal_list'
| `-ElaboratedType 0x5578bb11abe0 'struct __pthread_internal_list' sugar
|   `-RecordType 0x5578bb11aa20 'struct __pthread_internal_list'
|     `-Record 0x5578bb11a9a0 '__pthread_internal_list'
|-RecordDecl 0x5578bb11acb0 <line:236:9, line:250:1> line:236:9 union definition
| |-RecordDecl 0x5578bb11ad58 parent 0x5578bb0a4e18 <line:238:3, line:247:3> line:238:10 struct __pthread_mutex_s definition
| | |-FieldDecl 0x5578bb11ae30 <line:240:5, col:9> col:9 __lock 'int'
| | |-FieldDecl 0x5578bb11ae98 <line:241:5, col:18> col:18 __count 'unsigned int'
| | |-FieldDecl 0x5578bb11af00 <line:242:5, col:9> col:9 __owner 'int'
| | |-FieldDecl 0x5578bb11af68 <line:243:5, col:18> col:18 __nusers 'unsigned int'
| | |-FieldDecl 0x5578bb11afd0 <line:244:5, col:9> col:9 __kind 'int'
| | |-FieldDecl 0x5578bb11b038 <line:245:5, col:9> col:9 __spins 'int'
| | `-FieldDecl 0x5578bb11f110 <line:246:5, col:22> col:22 __list '__pthread_list_t':'struct __pthread_internal_list'
| |-FieldDecl 0x5578bb11f1c0 <line:238:3, line:247:5> col:5 __data 'struct __pthread_mutex_s':'struct __pthread_mutex_s'
| |-FieldDecl 0x5578bb11f2b0 <line:248:3, col:17> col:8 __size 'char [40]'
| `-FieldDecl 0x5578bb11f318 <line:249:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x5578bb11f4a0 <line:236:1, line:250:3> col:3 referenced pthread_mutex_t 'union pthread_mutex_t':'pthread_mutex_t'
| `-ElaboratedType 0x5578bb11f440 'union pthread_mutex_t' sugar
|   `-RecordType 0x5578bb11ad30 'pthread_mutex_t'
|     `-Record 0x5578bb11acb0 ''
|-RecordDecl 0x5578bb11f510 <line:251:9, line:255:1> line:251:9 union definition
| |-FieldDecl 0x5578bb11f650 <line:253:3, col:16> col:8 __size 'char [4]'
| `-FieldDecl 0x5578bb11f6b8 <line:254:3, col:7> col:7 __align 'int'
|-TypedefDecl 0x5578bb11f770 <line:251:1, line:255:3> col:3 referenced pthread_mutexattr_t 'union pthread_mutexattr_t':'pthread_mutexattr_t'
| `-ElaboratedType 0x5578bb11f710 'union pthread_mutexattr_t' sugar
|   `-RecordType 0x5578bb11f590 'pthread_mutexattr_t'
|     `-Record 0x5578bb11f510 ''
|-RecordDecl 0x5578bb11f7e0 <line:256:9, line:271:1> line:256:9 union definition
| |-RecordDecl 0x5578bb11f888 <line:258:3, line:268:3> line:258:3 struct definition
| | |-FieldDecl 0x5578bb11f950 <line:260:5, col:9> col:9 __lock 'int'
| | |-FieldDecl 0x5578bb11f9b8 <line:261:5, col:18> col:18 __futex 'unsigned int'
| | |-FieldDecl 0x5578bb11fa20 <line:262:19, col:42> col:42 __total_seq 'unsigned long long'
| | |-FieldDecl 0x5578bb11fa88 <line:263:19, col:42> col:42 __wakeup_seq 'unsigned long long'
| | |-FieldDecl 0x5578bb11faf0 <line:264:19, col:42> col:42 __woken_seq 'unsigned long long'
| | |-FieldDecl 0x5578bb11fb58 <line:265:5, col:11> col:11 __mutex 'void *'
| | |-FieldDecl 0x5578bb11fbc0 <line:266:5, col:18> col:18 __nwaiters 'unsigned int'
| | `-FieldDecl 0x5578bb11fc28 <line:267:5, col:18> col:18 __broadcast_seq 'unsigned int'
| |-FieldDecl 0x5578bb11fce0 <line:258:3, line:268:5> col:5 __data 'struct (anonymous struct at ./split_9/mix003_tso.opt_false-unreach-call.i:258:3)':'struct pthread_cond_t::(anonymous at ./split_9/mix003_tso.opt_false-unreach-call.i:258:3)'
| |-FieldDecl 0x5578bb11fdd0 <line:269:3, col:17> col:8 __size 'char [48]'
| `-FieldDecl 0x5578bb11fe38 <line:270:17, col:31> col:31 __align 'long long'
|-TypedefDecl 0x5578bb11ff70 <line:256:1, line:271:3> col:3 referenced pthread_cond_t 'union pthread_cond_t':'pthread_cond_t'
| `-ElaboratedType 0x5578bb11ff10 'union pthread_cond_t' sugar
|   `-RecordType 0x5578bb11f860 'pthread_cond_t'
|     `-Record 0x5578bb11f7e0 ''
|-RecordDecl 0x5578bb11ffe0 <line:272:9, line:276:1> line:272:9 union definition
| |-FieldDecl 0x5578bb121130 <line:274:3, col:16> col:8 __size 'char [4]'
| `-FieldDecl 0x5578bb121198 <line:275:3, col:7> col:7 __align 'int'
|-TypedefDecl 0x5578bb121250 <line:272:1, line:276:3> col:3 referenced pthread_condattr_t 'union pthread_condattr_t':'pthread_condattr_t'
| `-ElaboratedType 0x5578bb1211f0 'union pthread_condattr_t' sugar
|   `-RecordType 0x5578bb120060 'pthread_condattr_t'
|     `-Record 0x5578bb11ffe0 ''
|-TypedefDecl 0x5578bb1212d8 <line:277:1, col:22> col:22 referenced pthread_key_t 'unsigned int'
| `-BuiltinType 0x5578bb0a4fb0 'unsigned int'
|-TypedefDecl 0x5578bb121348 <line:278:1, col:13> col:13 referenced pthread_once_t 'int'
| `-BuiltinType 0x5578bb0a4f10 'int'
|-RecordDecl 0x5578bb1213a0 <line:279:9, line:297:1> line:279:9 union definition
| |-RecordDecl 0x5578bb121448 <line:281:3, line:294:3> line:281:3 struct definition
| | |-FieldDecl 0x5578bb121510 <line:283:5, col:9> col:9 __lock 'int'
| | |-FieldDecl 0x5578bb121578 <line:284:5, col:18> col:18 __nr_readers 'unsigned int'
| | |-FieldDecl 0x5578bb1215e0 <line:285:5, col:18> col:18 __readers_wakeup 'unsigned int'
| | |-FieldDecl 0x5578bb121648 <line:286:5, col:18> col:18 __writer_wakeup 'unsigned int'
| | |-FieldDecl 0x5578bb1216b0 <line:287:5, col:18> col:18 __nr_readers_queued 'unsigned int'
| | |-FieldDecl 0x5578bb121718 <line:288:5, col:18> col:18 __nr_writers_queued 'unsigned int'
| | |-FieldDecl 0x5578bb121780 <line:289:5, col:9> col:9 __writer 'int'
| | |-FieldDecl 0x5578bb1217e8 <line:290:5, col:9> col:9 __shared 'int'
| | |-FieldDecl 0x5578bb121850 <line:291:5, col:23> col:23 __pad1 'unsigned long'
| | |-FieldDecl 0x5578bb1218b8 <line:292:5, col:23> col:23 __pad2 'unsigned long'
| | `-FieldDecl 0x5578bb121920 <line:293:5, col:18> col:18 __flags 'unsigned int'
| |-FieldDecl 0x5578bb1219d0 <line:281:3, line:294:5> col:5 __data 'struct (anonymous struct at ./split_9/mix003_tso.opt_false-unreach-call.i:281:3)':'struct pthread_rwlock_t::(anonymous at ./split_9/mix003_tso.opt_false-unreach-call.i:281:3)'
| |-FieldDecl 0x5578bb121a78 <line:295:3, col:17> col:8 __size 'char [56]'
| `-FieldDecl 0x5578bb121ae0 <line:296:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x5578bb121c30 <line:279:1, line:297:3> col:3 referenced pthread_rwlock_t 'union pthread_rwlock_t':'pthread_rwlock_t'
| `-ElaboratedType 0x5578bb121bd0 'union pthread_rwlock_t' sugar
|   `-RecordType 0x5578bb121420 'pthread_rwlock_t'
|     `-Record 0x5578bb1213a0 ''
|-RecordDecl 0x5578bb121ca0 <line:298:9, line:302:1> line:298:9 union definition
| |-FieldDecl 0x5578bb121de0 <line:300:3, col:16> col:8 __size 'char [8]'
| `-FieldDecl 0x5578bb121e48 <line:301:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x5578bb121f00 <line:298:1, line:302:3> col:3 referenced pthread_rwlockattr_t 'union pthread_rwlockattr_t':'pthread_rwlockattr_t'
| `-ElaboratedType 0x5578bb121ea0 'union pthread_rwlockattr_t' sugar
|   `-RecordType 0x5578bb121d20 'pthread_rwlockattr_t'
|     `-Record 0x5578bb121ca0 ''
|-TypedefDecl 0x5578bb121f88 <line:303:1, col:22> col:22 referenced pthread_spinlock_t 'volatile int'
| `-QualType 0x5578bb0a4f14 'volatile int' volatile
|   `-BuiltinType 0x5578bb0a4f10 'int'
|-RecordDecl 0x5578bb121fe0 <line:304:9, line:308:1> line:304:9 union definition
| |-FieldDecl 0x5578bb123140 <line:306:3, col:17> col:8 __size 'char [32]'
| `-FieldDecl 0x5578bb1231a8 <line:307:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x5578bb123260 <line:304:1, line:308:3> col:3 referenced pthread_barrier_t 'union pthread_barrier_t':'pthread_barrier_t'
| `-ElaboratedType 0x5578bb123200 'union pthread_barrier_t' sugar
|   `-RecordType 0x5578bb122060 'pthread_barrier_t'
|     `-Record 0x5578bb121fe0 ''
|-RecordDecl 0x5578bb1232d0 <line:309:9, line:313:1> line:309:9 union definition
| |-FieldDecl 0x5578bb1233d0 <line:311:3, col:16> col:8 __size 'char [4]'
| `-FieldDecl 0x5578bb123438 <line:312:3, col:7> col:7 __align 'int'
|-TypedefDecl 0x5578bb1234f0 <line:309:1, line:313:3> col:3 referenced pthread_barrierattr_t 'union pthread_barrierattr_t':'pthread_barrierattr_t'
| `-ElaboratedType 0x5578bb123490 'union pthread_barrierattr_t' sugar
|   `-RecordType 0x5578bb123350 'pthread_barrierattr_t'
|     `-Record 0x5578bb1232d0 ''
|-TypedefDecl 0x5578bb123608 <line:314:1, col:29> col:18 referenced __jmp_buf 'long [8]'
| `-ConstantArrayType 0x5578bb1235a0 'long [8]' 8 
|   `-BuiltinType 0x5578bb0a4f30 'long'
|-EnumDecl 0x5578bb123660 <line:315:1, line:319:1> line:315:1
| |-EnumConstantDecl 0x5578bb123728 <line:317:3> col:3 PTHREAD_CREATE_JOINABLE 'int'
| `-EnumConstantDecl 0x5578bb123778 <line:318:3> col:3 PTHREAD_CREATE_DETACHED 'int'
|-EnumDecl 0x5578bb1237c8 <line:320:1, line:331:1> line:320:1
| |-EnumConstantDecl 0x5578bb123898 <line:322:3> col:3 referenced PTHREAD_MUTEX_TIMED_NP 'int'
| |-EnumConstantDecl 0x5578bb1238e8 <line:323:3> col:3 referenced PTHREAD_MUTEX_RECURSIVE_NP 'int'
| |-EnumConstantDecl 0x5578bb123938 <line:324:3> col:3 referenced PTHREAD_MUTEX_ERRORCHECK_NP 'int'
| |-EnumConstantDecl 0x5578bb123988 <line:325:3> col:3 PTHREAD_MUTEX_ADAPTIVE_NP 'int'
| |-EnumConstantDecl 0x5578bb123a10 <line:327:3, col:26> col:3 referenced PTHREAD_MUTEX_NORMAL 'int'
| | `-ConstantExpr 0x5578bb1239f8 <col:26> 'int'
| |   `-DeclRefExpr 0x5578bb1239d8 <col:26> 'int' EnumConstant 0x5578bb123898 'PTHREAD_MUTEX_TIMED_NP' 'int'
| |-EnumConstantDecl 0x5578bb123a98 <line:328:3, col:29> col:3 PTHREAD_MUTEX_RECURSIVE 'int'
| | `-ConstantExpr 0x5578bb123a80 <col:29> 'int'
| |   `-DeclRefExpr 0x5578bb123a60 <col:29> 'int' EnumConstant 0x5578bb1238e8 'PTHREAD_MUTEX_RECURSIVE_NP' 'int'
| |-EnumConstantDecl 0x5578bb123b20 <line:329:3, col:30> col:3 PTHREAD_MUTEX_ERRORCHECK 'int'
| | `-ConstantExpr 0x5578bb123b08 <col:30> 'int'
| |   `-DeclRefExpr 0x5578bb123ae8 <col:30> 'int' EnumConstant 0x5578bb123938 'PTHREAD_MUTEX_ERRORCHECK_NP' 'int'
| `-EnumConstantDecl 0x5578bb123ba8 <line:330:3, col:27> col:3 PTHREAD_MUTEX_DEFAULT 'int'
|   `-ConstantExpr 0x5578bb123b90 <col:27> 'int'
|     `-DeclRefExpr 0x5578bb123b70 <col:27> 'int' EnumConstant 0x5578bb123a10 'PTHREAD_MUTEX_NORMAL' 'int'
|-EnumDecl 0x5578bb123bf8 <line:332:1, line:338:1> line:332:1
| |-EnumConstantDecl 0x5578bb123cc8 <line:334:3> col:3 referenced PTHREAD_MUTEX_STALLED 'int'
| |-EnumConstantDecl 0x5578bb123d50 <line:335:3, col:30> col:3 PTHREAD_MUTEX_STALLED_NP 'int'
| | `-ConstantExpr 0x5578bb123d38 <col:30> 'int'
| |   `-DeclRefExpr 0x5578bb123d18 <col:30> 'int' EnumConstant 0x5578bb123cc8 'PTHREAD_MUTEX_STALLED' 'int'
| |-EnumConstantDecl 0x5578bb123da0 <line:336:3> col:3 referenced PTHREAD_MUTEX_ROBUST 'int'
| `-EnumConstantDecl 0x5578bb123e28 <line:337:3, col:29> col:3 PTHREAD_MUTEX_ROBUST_NP 'int'
|   `-ConstantExpr 0x5578bb123e10 <col:29> 'int'
|     `-DeclRefExpr 0x5578bb123df0 <col:29> 'int' EnumConstant 0x5578bb123da0 'PTHREAD_MUTEX_ROBUST' 'int'
|-EnumDecl 0x5578bb123e78 <line:339:1, line:344:1> line:339:1
| |-EnumConstantDecl 0x5578bb123f48 <line:341:3> col:3 PTHREAD_PRIO_NONE 'int'
| |-EnumConstantDecl 0x5578bb123f98 <line:342:3> col:3 PTHREAD_PRIO_INHERIT 'int'
| `-EnumConstantDecl 0x5578bb123fe8 <line:343:3> col:3 PTHREAD_PRIO_PROTECT 'int'
|-EnumDecl 0x5578bb124038 <line:345:1, line:351:1> line:345:1
| |-EnumConstantDecl 0x5578bb124150 <line:347:3> col:3 referenced PTHREAD_RWLOCK_PREFER_READER_NP 'int'
| |-EnumConstantDecl 0x5578bb1241a0 <line:348:3> col:3 PTHREAD_RWLOCK_PREFER_WRITER_NP 'int'
| |-EnumConstantDecl 0x5578bb1241f0 <line:349:3> col:3 PTHREAD_RWLOCK_PREFER_WRITER_NONRECURSIVE_NP 'int'
| `-EnumConstantDecl 0x5578bb124278 <line:350:3, col:31> col:3 PTHREAD_RWLOCK_DEFAULT_NP 'int'
|   `-ConstantExpr 0x5578bb124260 <col:31> 'int'
|     `-DeclRefExpr 0x5578bb124240 <col:31> 'int' EnumConstant 0x5578bb124150 'PTHREAD_RWLOCK_PREFER_READER_NP' 'int'
|-EnumDecl 0x5578bb1242c8 <line:352:1, line:356:1> line:352:1
| |-EnumConstantDecl 0x5578bb124398 <line:354:3> col:3 PTHREAD_INHERIT_SCHED 'int'
| `-EnumConstantDecl 0x5578bb1243e8 <line:355:3> col:3 PTHREAD_EXPLICIT_SCHED 'int'
|-EnumDecl 0x5578bb124438 <line:357:1, line:361:1> line:357:1
| |-EnumConstantDecl 0x5578bb124508 <line:359:3> col:3 PTHREAD_SCOPE_SYSTEM 'int'
| `-EnumConstantDecl 0x5578bb124558 <line:360:3> col:3 PTHREAD_SCOPE_PROCESS 'int'
|-EnumDecl 0x5578bb1245a8 <line:362:1, line:366:1> line:362:1
| |-EnumConstantDecl 0x5578bb124678 <line:364:3> col:3 PTHREAD_PROCESS_PRIVATE 'int'
| `-EnumConstantDecl 0x5578bb1246c8 <line:365:3> col:3 PTHREAD_PROCESS_SHARED 'int'
|-RecordDecl 0x5578bb124718 <line:367:1, line:373:1> line:367:8 struct _pthread_cleanup_buffer definition
| |-FieldDecl 0x5578bb124958 <line:369:3, col:28> col:10 __routine 'void (*)(void *)'
| |-FieldDecl 0x5578bb1249c0 <line:370:3, col:9> col:9 __arg 'void *'
| |-FieldDecl 0x5578bb124a28 <line:371:3, col:7> col:7 __canceltype 'int'
| `-FieldDecl 0x5578bb124b48 <line:372:3, col:35> col:35 __prev 'struct _pthread_cleanup_buffer *'
|-EnumDecl 0x5578bb124b98 <line:374:1, line:378:1> line:374:1
| |-EnumConstantDecl 0x5578bb124c68 <line:376:3> col:3 PTHREAD_CANCEL_ENABLE 'int'
| `-EnumConstantDecl 0x5578bb124cb8 <line:377:3> col:3 PTHREAD_CANCEL_DISABLE 'int'
|-EnumDecl 0x5578bb124d08 <line:379:1, line:383:1> line:379:1
| |-EnumConstantDecl 0x5578bb124dd8 <line:381:3> col:3 PTHREAD_CANCEL_DEFERRED 'int'
| `-EnumConstantDecl 0x5578bb124e28 <line:382:3> col:3 PTHREAD_CANCEL_ASYNCHRONOUS 'int'
|-FunctionDecl 0x5578bb125488 <line:385:1, line:388:96> line:385:12 used pthread_create 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' extern
| |-ParmVarDecl 0x5578bb124f20 <col:28, col:50> col:50 __newthread 'pthread_t *restrict'
| |-ParmVarDecl 0x5578bb125030 <line:386:7, col:40> col:40 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x5578bb125270 <line:387:7, col:39> col:15 __start_routine 'void *(*)(void *)'
| |-ParmVarDecl 0x5578bb1252f0 <line:388:7, col:24> col:24 __arg 'void *restrict'
| |-NoThrowAttr 0x5578bb125548 <col:47>
| |-NonNullAttr 0x5578bb1255a0 <col:77, col:94> 1 3
| `-CallbackAttr 0x5578bb1255d8 <line:385:12> Implicit 2 3
|-FunctionDecl 0x5578bb125700 <line:389:1, col:72> col:13 pthread_exit 'void (void *) __attribute__((noreturn))' extern
| `-ParmVarDecl 0x5578bb125630 <col:27, col:33> col:33 __retval 'void *'
|-FunctionDecl 0x5578bb125958 <line:390:1, col:64> col:12 pthread_join 'int (pthread_t, void **)' extern
| |-ParmVarDecl 0x5578bb1257b8 <col:26, col:36> col:36 __th 'pthread_t':'unsigned long'
| `-ParmVarDecl 0x5578bb125838 <col:42, col:49> col:49 __thread_return 'void **'
|-FunctionDecl 0x5578bb125b28 <line:391:1, col:83> col:12 pthread_detach 'int (pthread_t)' extern
| |-ParmVarDecl 0x5578bb125a18 <col:28, col:38> col:38 __th 'pthread_t':'unsigned long'
| `-NoThrowAttr 0x5578bb125bd0 <col:60>
|-FunctionDecl 0x5578bb125d20 <line:392:1, col:105> col:18 pthread_self 'pthread_t (void)' extern
| |-NoThrowAttr 0x5578bb125dc0 <col:54>
| `-ConstAttr 0x5578bb125e18 <col:95>
|-FunctionDecl 0x5578bb125fe8 <line:393:1, line:394:70> line:393:12 pthread_equal 'int (pthread_t, pthread_t)' extern
| |-ParmVarDecl 0x5578bb125e50 <col:27, col:37> col:37 __thread1 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x5578bb125ec8 <col:48, col:58> col:58 __thread2 'pthread_t':'unsigned long'
| |-NoThrowAttr 0x5578bb126098 <line:394:19>
| `-ConstAttr 0x5578bb1260f0 <col:60>
|-FunctionDecl 0x5578bb127b08 <line:395:1, col:128> col:12 pthread_attr_init 'int (pthread_attr_t *)' extern
| |-ParmVarDecl 0x5578bb1279d0 <col:31, col:47> col:47 __attr 'pthread_attr_t *'
| |-NoThrowAttr 0x5578bb127bb0 <col:71>
| `-NonNullAttr 0x5578bb127c08 <col:112, col:126> 1
|-FunctionDecl 0x5578bb127d10 <line:396:1, line:397:79> line:396:12 pthread_attr_destroy 'int (pthread_attr_t *)' extern
| |-ParmVarDecl 0x5578bb127c58 <col:34, col:50> col:50 __attr 'pthread_attr_t *'
| |-NoThrowAttr 0x5578bb127db8 <line:397:22>
| `-NonNullAttr 0x5578bb127e10 <col:63, col:77> 1
|-FunctionDecl 0x5578bb128038 <line:398:1, line:400:82> line:398:12 pthread_attr_getdetachstate 'int (const pthread_attr_t *, int *)' extern
| |-ParmVarDecl 0x5578bb127e58 <col:41, col:63> col:63 __attr 'const pthread_attr_t *'
| |-ParmVarDecl 0x5578bb127ed8 <line:399:6, col:11> col:11 __detachstate 'int *'
| |-NoThrowAttr 0x5578bb1280e8 <line:400:22>
| `-NonNullAttr 0x5578bb128140 <col:63, col:80> 1 2
|-FunctionDecl 0x5578bb128348 <line:401:1, line:403:79> line:401:12 pthread_attr_setdetachstate 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x5578bb128188 <col:41, col:57> col:57 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x5578bb128208 <line:402:6, col:10> col:10 __detachstate 'int'
| |-NoThrowAttr 0x5578bb1283f8 <line:403:22>
| `-NonNullAttr 0x5578bb128450 <col:63, col:77> 1
|-FunctionDecl 0x5578bb1286a8 <line:404:1, line:406:82> line:404:12 pthread_attr_getguardsize 'int (const pthread_attr_t *, size_t *)' extern
| |-ParmVarDecl 0x5578bb128498 <col:39, col:61> col:61 __attr 'const pthread_attr_t *'
| |-ParmVarDecl 0x5578bb128540 <line:405:11, col:19> col:19 __guardsize 'size_t *'
| |-NoThrowAttr 0x5578bb128758 <line:406:22>
| `-NonNullAttr 0x5578bb1287b0 <col:63, col:80> 1 2
|-FunctionDecl 0x5578bb1299e8 <line:407:1, line:409:79> line:407:12 pthread_attr_setguardsize 'int (pthread_attr_t *, size_t)' extern
| |-ParmVarDecl 0x5578bb1287f8 <col:39, col:55> col:55 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x5578bb128870 <line:408:11, col:18> col:18 __guardsize 'size_t':'unsigned long'
| |-NoThrowAttr 0x5578bb129a98 <line:409:22>
| `-NonNullAttr 0x5578bb129af0 <col:63, col:77> 1
|-FunctionDecl 0x5578bb129d28 <line:410:1, line:412:82> line:410:12 pthread_attr_getschedparam 'int (const pthread_attr_t *restrict, struct sched_param *restrict)' extern
| |-ParmVarDecl 0x5578bb129b38 <col:40, col:73> col:73 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x5578bb129bc8 <line:411:12, col:43> col:43 __param 'struct sched_param *restrict'
| |-NoThrowAttr 0x5578bb129dd8 <line:412:22>
| `-NonNullAttr 0x5578bb129e30 <col:63, col:80> 1 2
|-FunctionDecl 0x5578bb12a068 <line:413:1, line:415:97> line:413:12 pthread_attr_setschedparam 'int (pthread_attr_t *restrict, const struct sched_param *restrict)' extern
| |-ParmVarDecl 0x5578bb129e78 <col:40, col:67> col:67 __attr 'pthread_attr_t *restrict'
| |-ParmVarDecl 0x5578bb129f08 <line:414:12, line:415:12> col:12 __param 'const struct sched_param *restrict'
| |-NoThrowAttr 0x5578bb12a118 <col:37>
| `-NonNullAttr 0x5578bb12a170 <col:78, col:95> 1 2
|-FunctionDecl 0x5578bb12a358 <line:416:1, line:418:82> line:416:12 pthread_attr_getschedpolicy 'int (const pthread_attr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x5578bb12a1b8 <col:41, line:417:6> col:6 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x5578bb12a238 <col:14, col:30> col:30 __policy 'int *restrict'
| |-NoThrowAttr 0x5578bb12a408 <line:418:22>
| `-NonNullAttr 0x5578bb12a460 <col:63, col:80> 1 2
|-FunctionDecl 0x5578bb12a5e8 <line:419:1, line:420:79> line:419:12 pthread_attr_setschedpolicy 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x5578bb12a4a8 <col:41, col:57> col:57 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x5578bb12a528 <col:65, col:69> col:69 __policy 'int'
| |-NoThrowAttr 0x5578bb12a698 <line:420:22>
| `-NonNullAttr 0x5578bb12a6f0 <col:63, col:77> 1
|-FunctionDecl 0x5578bb12a898 <line:421:1, line:423:82> line:421:12 pthread_attr_getinheritsched 'int (const pthread_attr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x5578bb12a738 <col:42, line:422:7> col:7 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x5578bb12a7b8 <col:15, col:31> col:31 __inherit 'int *restrict'
| |-NoThrowAttr 0x5578bb12a948 <line:423:22>
| `-NonNullAttr 0x5578bb12a9c0 <col:63, col:80> 1 2
|-FunctionDecl 0x5578bb12ab48 <line:424:1, line:426:79> line:424:12 pthread_attr_setinheritsched 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x5578bb12aa08 <col:42, col:58> col:58 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x5578bb12aa88 <line:425:7, col:11> col:11 __inherit 'int'
| |-NoThrowAttr 0x5578bb12abf8 <line:426:22>
| `-NonNullAttr 0x5578bb12ac50 <col:63, col:77> 1
|-FunctionDecl 0x5578bb12adf8 <line:427:1, line:429:82> line:427:12 pthread_attr_getscope 'int (const pthread_attr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x5578bb12ac98 <col:35, col:68> col:68 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x5578bb12ad18 <line:428:7, col:23> col:23 __scope 'int *restrict'
| |-NoThrowAttr 0x5578bb12aea8 <line:429:22>
| `-NonNullAttr 0x5578bb12af00 <col:63, col:80> 1 2
|-FunctionDecl 0x5578bb12b088 <line:430:1, line:431:79> line:430:12 pthread_attr_setscope 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x5578bb12af48 <col:35, col:51> col:51 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x5578bb12afc8 <col:59, col:63> col:63 __scope 'int'
| |-NoThrowAttr 0x5578bb12b138 <line:431:22>
| `-NonNullAttr 0x5578bb12b190 <col:63, col:77> 1
|-FunctionDecl 0x5578bb12b3b8 <line:432:1, line:434:115> line:432:12 pthread_attr_getstackaddr 'int (const pthread_attr_t *restrict, void **restrict)' extern
| |-ParmVarDecl 0x5578bb12b1d8 <col:39, line:433:11> col:11 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x5578bb12b258 <col:19, col:37> col:37 __stackaddr 'void **restrict'
| |-NoThrowAttr 0x5578bb12b468 <line:434:22>
| |-NonNullAttr 0x5578bb12b4c0 <col:63, col:80> 1 2
| `-DeprecatedAttr 0x5578bb12b4f8 <col:100> "" ""
|-FunctionDecl 0x5578bb12b708 <line:435:1, line:437:112> line:435:12 pthread_attr_setstackaddr 'int (pthread_attr_t *, void *)' extern
| |-ParmVarDecl 0x5578bb12b548 <col:39, col:55> col:55 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x5578bb12b5c8 <line:436:11, col:17> col:17 __stackaddr 'void *'
| |-NoThrowAttr 0x5578bb12b7b8 <line:437:22>
| |-NonNullAttr 0x5578bb12b810 <col:63, col:77> 1
| `-DeprecatedAttr 0x5578bb12b848 <col:97> "" ""
|-FunctionDecl 0x5578bb12ba48 <line:438:1, line:440:82> line:438:12 pthread_attr_getstacksize 'int (const pthread_attr_t *restrict, size_t *restrict)' extern
| |-ParmVarDecl 0x5578bb12b898 <col:39, line:439:11> col:11 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x5578bb12b910 <col:19, col:38> col:38 __stacksize 'size_t *restrict'
| |-NoThrowAttr 0x5578bb12baf8 <line:440:22>
| `-NonNullAttr 0x5578bb12bb50 <col:63, col:80> 1 2
|-FunctionDecl 0x5578bb12bcd0 <line:441:1, line:443:79> line:441:12 pthread_attr_setstacksize 'int (pthread_attr_t *, size_t)' extern
| |-ParmVarDecl 0x5578bb12bb98 <col:39, col:55> col:55 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x5578bb12bc10 <line:442:11, col:18> col:18 __stacksize 'size_t':'unsigned long'
| |-NoThrowAttr 0x5578bb12bd80 <line:443:22>
| `-NonNullAttr 0x5578bb12bdd8 <col:63, col:77> 1
|-FunctionDecl 0x5578bb12c0c8 <line:444:1, line:447:85> line:444:12 pthread_attr_getstack 'int (const pthread_attr_t *restrict, void **restrict, size_t *restrict)' extern
| |-ParmVarDecl 0x5578bb12be28 <col:35, col:68> col:68 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x5578bb12bea8 <line:445:7, col:25> col:25 __stackaddr 'void **restrict'
| |-ParmVarDecl 0x5578bb12bf20 <line:446:7, col:26> col:26 __stacksize 'size_t *restrict'
| |-NoThrowAttr 0x5578bb12c180 <line:447:22>
| `-NonNullAttr 0x5578bb12c1d8 <col:63, col:83> 1 2 3
|-FunctionDecl 0x5578bb12c488 <line:448:1, line:449:100> line:448:12 pthread_attr_setstack 'int (pthread_attr_t *, void *, size_t)' extern
| |-ParmVarDecl 0x5578bb12c230 <col:35, col:51> col:51 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x5578bb12c2b0 <col:59, col:65> col:65 __stackaddr 'void *'
| |-ParmVarDecl 0x5578bb12c328 <line:449:7, col:14> col:14 __stacksize 'size_t':'unsigned long'
| |-NoThrowAttr 0x5578bb12c540 <col:43>
| `-NonNullAttr 0x5578bb12c598 <col:84, col:98> 1
|-FunctionDecl 0x5578bb12c858 <line:450:1, line:452:79> line:450:12 pthread_setschedparam 'int (pthread_t, int, const struct sched_param *)' extern
| |-ParmVarDecl 0x5578bb12c5e8 <col:35, col:45> col:45 __target_thread 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x5578bb12c668 <col:62, col:66> col:66 __policy 'int'
| |-ParmVarDecl 0x5578bb12c6f8 <line:451:7, col:33> col:33 __param 'const struct sched_param *'
| |-NoThrowAttr 0x5578bb12c910 <line:452:22>
| `-NonNullAttr 0x5578bb12c968 <col:63, col:77> 3
|-FunctionDecl 0x5578bb12cc78 <line:453:1, line:456:82> line:453:12 pthread_getschedparam 'int (pthread_t, int *restrict, struct sched_param *restrict)' extern
| |-ParmVarDecl 0x5578bb12c9e0 <col:35, col:45> col:45 __target_thread 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x5578bb12ca60 <line:454:7, col:23> col:23 __policy 'int *restrict'
| |-ParmVarDecl 0x5578bb12caf0 <line:455:7, col:38> col:38 __param 'struct sched_param *restrict'
| |-NoThrowAttr 0x5578bb12cd30 <line:456:22>
| `-NonNullAttr 0x5578bb12cd88 <col:63, col:80> 2 3
|-FunctionDecl 0x5578bb12cf78 <line:457:1, line:458:45> line:457:12 pthread_setschedprio 'int (pthread_t, int)' extern
| |-ParmVarDecl 0x5578bb12cdd8 <col:34, col:44> col:44 __target_thread 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x5578bb12ce58 <col:61, col:65> col:65 __prio 'int'
| `-NoThrowAttr 0x5578bb12d028 <line:458:22>
|-FunctionDecl 0x5578bb12d3f8 <line:459:1, line:460:71> line:459:12 pthread_once 'int (pthread_once_t *, void (*)(void))' extern
| |-ParmVarDecl 0x5578bb12d0f0 <col:26, col:42> col:42 __once_control 'pthread_once_t *'
| |-ParmVarDecl 0x5578bb12d290 <line:460:5, col:33> col:12 __init_routine 'void (*)(void)'
| `-NonNullAttr 0x5578bb12d4a8 <col:52, col:69> 1 2
|-FunctionDecl 0x5578bb12d650 <line:461:1, col:64> col:12 pthread_setcancelstate 'int (int, int *)' extern
| |-ParmVarDecl 0x5578bb12d530 <col:36, col:40> col:40 __state 'int'
| `-ParmVarDecl 0x5578bb12d5b0 <col:49, col:54> col:54 __oldstate 'int *'
|-FunctionDecl 0x5578bb12d838 <line:462:1, col:61> col:12 pthread_setcanceltype 'int (int, int *)' extern
| |-ParmVarDecl 0x5578bb12d718 <col:35, col:39> col:39 __type 'int'
| `-ParmVarDecl 0x5578bb12d798 <col:47, col:52> col:52 __oldtype 'int *'
|-FunctionDecl 0x5578bb12d9f0 <line:463:1, col:42> col:12 pthread_cancel 'int (pthread_t)' extern
| `-ParmVarDecl 0x5578bb12d8f8 <col:28, col:38> col:38 __th 'pthread_t':'unsigned long'
|-FunctionDecl 0x5578bb12db30 <line:464:1, col:37> col:13 pthread_testcancel 'void (void)' extern
|-RecordDecl 0x5578bb12dbd0 <line:465:9, line:473:1> line:465:9 struct definition
| |-RecordDecl 0x5578bb12dc78 <line:467:3, line:471:3> line:467:3 struct definition
| | |-FieldDecl 0x5578bb12dd68 <line:469:5, col:15> col:15 __cancel_jmp_buf '__jmp_buf':'long [8]'
| | `-FieldDecl 0x5578bb12ddd0 <line:470:5, col:9> col:9 __mask_was_saved 'int'
| |-FieldDecl 0x5578bb12dfa0 <line:467:3, line:471:23> col:5 __cancel_jmp_buf 'struct (anonymous struct at ./split_9/mix003_tso.opt_false-unreach-call.i:467:3) [1]'
| `-FieldDecl 0x5578bb12e098 <line:472:3, col:16> col:9 __pad 'void *[4]'
|-TypedefDecl 0x5578bb12e150 <line:465:1, line:473:3> col:3 referenced __pthread_unwind_buf_t 'struct __pthread_unwind_buf_t':'__pthread_unwind_buf_t'
| |-ElaboratedType 0x5578bb12e0f0 'struct __pthread_unwind_buf_t' sugar
| | `-RecordType 0x5578bb12dc50 '__pthread_unwind_buf_t'
| |   `-Record 0x5578bb12dbd0 ''
| `-AlignedAttr 0x5578bb12e1a8 <col:42> aligned
|   `-<<<NULL>>>
|-RecordDecl 0x5578bb12e220 <line:474:1, line:480:1> line:474:8 struct __pthread_cleanup_frame definition
| |-FieldDecl 0x5578bb12e380 <line:476:3, col:35> col:10 __cancel_routine 'void (*)(void *)'
| |-FieldDecl 0x5578bb12e3e8 <line:477:3, col:9> col:9 __cancel_arg 'void *'
| |-FieldDecl 0x5578bb12e450 <line:478:3, col:7> col:7 __do_it 'int'
| `-FieldDecl 0x5578bb12e4b8 <line:479:3, col:7> col:7 __cancel_type 'int'
|-FunctionDecl 0x5578bb12e6c0 <line:481:1, col:69> col:13 __pthread_register_cancel 'void (__pthread_unwind_buf_t *)' extern
| `-ParmVarDecl 0x5578bb12e5b0 <col:40, col:64> col:64 __buf '__pthread_unwind_buf_t *'
|-FunctionDecl 0x5578bb12e808 <line:483:1, col:71> col:13 __pthread_unregister_cancel 'void (__pthread_unwind_buf_t *)' extern
| `-ParmVarDecl 0x5578bb12e778 <col:42, col:66> col:66 __buf '__pthread_unwind_buf_t *'
|-FunctionDecl 0x5578bb12ea00 <line:485:1, line:487:31> line:485:13 __pthread_unwind_next 'void (__pthread_unwind_buf_t *) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x5578bb12e8c0 <col:36, col:60> col:60 __buf '__pthread_unwind_buf_t *'
| `-WeakAttr 0x5578bb12eaa8 <line:487:22>
|-RecordDecl 0x5578bb12eb00 <line:489:1, col:8> col:8 struct __jmp_buf_tag
|-FunctionDecl 0x5578bb12ee18 <line:490:1, col:98> col:12 __sigsetjmp 'int (struct __jmp_buf_tag *, int)' extern
| |-ParmVarDecl 0x5578bb12ec78 <col:25, col:47> col:47 __env 'struct __jmp_buf_tag *'
| |-ParmVarDecl 0x5578bb12ecf8 <col:54, col:58> col:58 __savemask 'int'
| |-NoThrowAttr 0x5578bb12eec8 <col:86>
| `-ReturnsTwiceAttr 0x5578bb12ef20 <col:12> Implicit
|-FunctionDecl 0x5578bb12f248 <line:491:1, line:493:79> line:491:12 pthread_mutex_init 'int (pthread_mutex_t *, const pthread_mutexattr_t *)' extern
| |-ParmVarDecl 0x5578bb12eff0 <col:32, col:49> col:49 __mutex 'pthread_mutex_t *'
| |-ParmVarDecl 0x5578bb12f100 <line:492:11, col:38> col:38 __mutexattr 'const pthread_mutexattr_t *'
| |-NoThrowAttr 0x5578bb12f2f8 <line:493:22>
| `-NonNullAttr 0x5578bb12f350 <col:63, col:77> 1
|-FunctionDecl 0x5578bb12f4c8 <line:494:1, line:495:79> line:494:12 pthread_mutex_destroy 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x5578bb12f398 <col:35, col:52> col:52 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x5578bb12f570 <line:495:22>
| `-NonNullAttr 0x5578bb12f5c8 <col:63, col:77> 1
|-FunctionDecl 0x5578bb12f6d0 <line:496:1, line:497:68> line:496:12 pthread_mutex_trylock 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x5578bb12f618 <col:35, col:52> col:52 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x5578bb12f778 <line:497:22>
| `-NonNullAttr 0x5578bb12f7d0 <col:52, col:66> 1
|-FunctionDecl 0x5578bb12f8d0 <line:498:1, line:499:68> line:498:12 pthread_mutex_lock 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x5578bb12f818 <col:32, col:49> col:49 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x5578bb12f978 <line:499:22>
| `-NonNullAttr 0x5578bb12f9d0 <col:52, col:66> 1
|-FunctionDecl 0x5578bb130c28 <line:500:1, line:502:85> line:500:12 pthread_mutex_timedlock 'int (pthread_mutex_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x5578bb130a38 <col:37, col:65> col:65 __mutex 'pthread_mutex_t *restrict'
| |-ParmVarDecl 0x5578bb130ac8 <line:501:9, line:502:9> col:9 __abstime 'const struct timespec *restrict'
| |-NoThrowAttr 0x5578bb130cd8 <col:36>
| `-NonNullAttr 0x5578bb130d30 <col:66, col:83> 1 2
|-FunctionDecl 0x5578bb130e30 <line:503:1, line:504:68> line:503:12 pthread_mutex_unlock 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x5578bb130d78 <col:34, col:51> col:51 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x5578bb130ed8 <line:504:22>
| `-NonNullAttr 0x5578bb130f30 <col:52, col:66> 1
|-FunctionDecl 0x5578bb1311c8 <line:505:1, line:508:82> line:505:12 pthread_mutex_getprioceiling 'int (const pthread_mutex_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x5578bb130fe0 <col:42, line:506:18> col:18 __mutex 'const pthread_mutex_t *restrict'
| |-ParmVarDecl 0x5578bb131060 <line:507:7, col:23> col:23 __prioceiling 'int *restrict'
| |-NoThrowAttr 0x5578bb131278 <line:508:22>
| `-NonNullAttr 0x5578bb1312d0 <col:63, col:80> 1 2
|-FunctionDecl 0x5578bb131598 <line:509:1, line:512:82> line:509:12 pthread_mutex_setprioceiling 'int (pthread_mutex_t *restrict, int, int *restrict)' extern
| |-ParmVarDecl 0x5578bb131318 <col:42, col:70> col:70 __mutex 'pthread_mutex_t *restrict'
| |-ParmVarDecl 0x5578bb131398 <line:510:7, col:11> col:11 __prioceiling 'int'
| |-ParmVarDecl 0x5578bb131418 <line:511:7, col:23> col:23 __old_ceiling 'int *restrict'
| |-NoThrowAttr 0x5578bb131650 <line:512:22>
| `-NonNullAttr 0x5578bb1316a8 <col:63, col:80> 1 3
|-FunctionDecl 0x5578bb1317b0 <line:513:1, line:514:79> line:513:12 pthread_mutex_consistent 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x5578bb1316f8 <col:38, col:55> col:55 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x5578bb131858 <line:514:22>
| `-NonNullAttr 0x5578bb1318b0 <col:63, col:77> 1
|-FunctionDecl 0x5578bb131ad8 <line:515:1, line:516:79> line:515:12 pthread_mutexattr_init 'int (pthread_mutexattr_t *)' extern
| |-ParmVarDecl 0x5578bb131960 <col:36, col:57> col:57 __attr 'pthread_mutexattr_t *'
| |-NoThrowAttr 0x5578bb131b80 <line:516:22>
| `-NonNullAttr 0x5578bb131bd8 <col:63, col:77> 1
|-FunctionDecl 0x5578bb131ce0 <line:517:1, line:518:79> line:517:12 pthread_mutexattr_destroy 'int (pthread_mutexattr_t *)' extern
| |-ParmVarDecl 0x5578bb131c28 <col:39, col:60> col:60 __attr 'pthread_mutexattr_t *'
| |-NoThrowAttr 0x5578bb131d88 <line:518:22>
| `-NonNullAttr 0x5578bb131de0 <col:63, col:77> 1
|-FunctionDecl 0x5578bb132008 <line:519:1, line:522:82> line:519:12 pthread_mutexattr_getpshared 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x5578bb131e28 <col:42, line:520:18> col:18 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x5578bb131ea8 <line:521:7, col:23> col:23 __pshared 'int *restrict'
| |-NoThrowAttr 0x5578bb1320b8 <line:522:22>
| `-NonNullAttr 0x5578bb132110 <col:63, col:80> 1 2
|-FunctionDecl 0x5578bb132318 <line:523:1, line:525:79> line:523:12 pthread_mutexattr_setpshared 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x5578bb132158 <col:42, col:63> col:63 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x5578bb1321d8 <line:524:7, col:11> col:11 __pshared 'int'
| |-NoThrowAttr 0x5578bb1323c8 <line:525:22>
| `-NonNullAttr 0x5578bb132420 <col:63, col:77> 1
|-FunctionDecl 0x5578bb1325c8 <line:526:1, line:528:82> line:526:12 pthread_mutexattr_gettype 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x5578bb132468 <col:39, line:527:11> col:11 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x5578bb1324e8 <col:19, col:35> col:35 __kind 'int *restrict'
| |-NoThrowAttr 0x5578bb132678 <line:528:22>
| `-NonNullAttr 0x5578bb1326d0 <col:63, col:80> 1 2
|-FunctionDecl 0x5578bb132858 <line:529:1, line:530:79> line:529:12 pthread_mutexattr_settype 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x5578bb132718 <col:39, col:60> col:60 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x5578bb132798 <col:68, col:72> col:72 __kind 'int'
| |-NoThrowAttr 0x5578bb132908 <line:530:22>
| `-NonNullAttr 0x5578bb132960 <col:63, col:77> 1
|-FunctionDecl 0x5578bb132b20 <line:531:1, line:534:82> line:531:12 pthread_mutexattr_getprotocol 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x5578bb1329a8 <col:43, line:532:19> col:19 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x5578bb132a40 <line:533:8, col:24> col:24 __protocol 'int *restrict'
| |-NoThrowAttr 0x5578bb132bd0 <line:534:22>
| `-NonNullAttr 0x5578bb132c28 <col:63, col:80> 1 2
|-FunctionDecl 0x5578bb132db8 <line:535:1, line:537:79> line:535:12 pthread_mutexattr_setprotocol 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x5578bb132c78 <col:43, col:64> col:64 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x5578bb132cf8 <line:536:8, col:12> col:12 __protocol 'int'
| |-NoThrowAttr 0x5578bb132e68 <line:537:22>
| `-NonNullAttr 0x5578bb132ec0 <col:63, col:77> 1
|-FunctionDecl 0x5578bb133068 <line:538:1, line:541:82> line:538:12 pthread_mutexattr_getprioceiling 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x5578bb132f08 <col:46, line:539:22> col:22 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x5578bb132f88 <line:540:11, col:27> col:27 __prioceiling 'int *restrict'
| |-NoThrowAttr 0x5578bb133118 <line:541:22>
| `-NonNullAttr 0x5578bb133170 <col:63, col:80> 1 2
|-FunctionDecl 0x5578bb1332f8 <line:542:1, line:544:79> line:542:12 pthread_mutexattr_setprioceiling 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x5578bb1331b8 <col:46, col:67> col:67 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x5578bb133238 <line:543:11, col:15> col:15 __prioceiling 'int'
| |-NoThrowAttr 0x5578bb1333a8 <line:544:22>
| `-NonNullAttr 0x5578bb133400 <col:63, col:77> 1
|-FunctionDecl 0x5578bb1335e8 <line:545:1, line:547:82> line:545:12 pthread_mutexattr_getrobust 'int (const pthread_mutexattr_t *, int *)' extern
| |-ParmVarDecl 0x5578bb133448 <col:41, col:68> col:68 __attr 'const pthread_mutexattr_t *'
| |-ParmVarDecl 0x5578bb1334c8 <line:546:6, col:11> col:11 __robustness 'int *'
| |-NoThrowAttr 0x5578bb133698 <line:547:22>
| `-NonNullAttr 0x5578bb1336f0 <col:63, col:80> 1 2
|-FunctionDecl 0x5578bb133878 <line:548:1, line:550:79> line:548:12 pthread_mutexattr_setrobust 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x5578bb133738 <col:41, col:62> col:62 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x5578bb1337b8 <line:549:6, col:10> col:10 __robustness 'int'
| |-NoThrowAttr 0x5578bb133928 <line:550:22>
| `-NonNullAttr 0x5578bb133980 <col:63, col:77> 1
|-FunctionDecl 0x5578bb134cf8 <line:551:1, line:553:86> line:551:12 pthread_rwlock_init 'int (pthread_rwlock_t *restrict, const pthread_rwlockattr_t *restrict)' extern
| |-ParmVarDecl 0x5578bb134aa0 <col:33, col:62> col:62 __rwlock 'pthread_rwlock_t *restrict'
| |-ParmVarDecl 0x5578bb134bb0 <line:552:5, line:553:5> col:5 __attr 'const pthread_rwlockattr_t *restrict'
| |-NoThrowAttr 0x5578bb134da8 <col:29>
| `-NonNullAttr 0x5578bb134e00 <col:70, col:84> 1
|-FunctionDecl 0x5578bb134f78 <line:554:1, line:555:79> line:554:12 pthread_rwlock_destroy 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x5578bb134e48 <col:36, col:54> col:54 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x5578bb135020 <line:555:22>
| `-NonNullAttr 0x5578bb135078 <col:63, col:77> 1
|-FunctionDecl 0x5578bb135180 <line:556:1, line:557:68> line:556:12 pthread_rwlock_rdlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x5578bb1350c8 <col:35, col:53> col:53 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x5578bb135228 <line:557:22>
| `-NonNullAttr 0x5578bb135280 <col:52, col:66> 1
|-FunctionDecl 0x5578bb135380 <line:558:1, line:559:65> line:558:12 pthread_rwlock_tryrdlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x5578bb1352c8 <col:38, col:56> col:56 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x5578bb135428 <line:559:19>
| `-NonNullAttr 0x5578bb135480 <col:49, col:63> 1
|-FunctionDecl 0x5578bb1356b8 <line:560:1, line:562:88> line:560:12 pthread_rwlock_timedrdlock 'int (pthread_rwlock_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x5578bb1354c8 <col:40, col:69> col:69 __rwlock 'pthread_rwlock_t *restrict'
| |-ParmVarDecl 0x5578bb135558 <line:561:12, line:562:12> col:12 __abstime 'const struct timespec *restrict'
| |-NoThrowAttr 0x5578bb135768 <col:39>
| `-NonNullAttr 0x5578bb1357c0 <col:69, col:86> 1 2
|-FunctionDecl 0x5578bb1358c0 <line:563:1, line:564:68> line:563:12 pthread_rwlock_wrlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x5578bb135808 <col:35, col:53> col:53 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x5578bb135968 <line:564:22>
| `-NonNullAttr 0x5578bb1359c0 <col:52, col:66> 1
|-FunctionDecl 0x5578bb135b28 <line:565:1, line:566:68> line:565:12 pthread_rwlock_trywrlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x5578bb135a70 <col:38, col:56> col:56 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x5578bb135bd0 <line:566:22>
| `-NonNullAttr 0x5578bb135c28 <col:52, col:66> 1
|-FunctionDecl 0x5578bb135de8 <line:567:1, line:569:88> line:567:12 pthread_rwlock_timedwrlock 'int (pthread_rwlock_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x5578bb135c78 <col:40, col:69> col:69 __rwlock 'pthread_rwlock_t *restrict'
| |-ParmVarDecl 0x5578bb135d08 <line:568:12, line:569:12> col:12 __abstime 'const struct timespec *restrict'
| |-NoThrowAttr 0x5578bb135e98 <col:39>
| `-NonNullAttr 0x5578bb135ef0 <col:69, col:86> 1 2
|-FunctionDecl 0x5578bb135ff0 <line:570:1, line:571:68> line:570:12 pthread_rwlock_unlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x5578bb135f38 <col:35, col:53> col:53 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x5578bb136098 <line:571:22>
| `-NonNullAttr 0x5578bb1360f0 <col:52, col:66> 1
|-FunctionDecl 0x5578bb1362d8 <line:572:1, line:573:79> line:572:12 pthread_rwlockattr_init 'int (pthread_rwlockattr_t *)' extern
| |-ParmVarDecl 0x5578bb1361a0 <col:37, col:59> col:59 __attr 'pthread_rwlockattr_t *'
| |-NoThrowAttr 0x5578bb136380 <line:573:22>
| `-NonNullAttr 0x5578bb1363d8 <col:63, col:77> 1
|-FunctionDecl 0x5578bb1364e0 <line:574:1, line:575:79> line:574:12 pthread_rwlockattr_destroy 'int (pthread_rwlockattr_t *)' extern
| |-ParmVarDecl 0x5578bb136428 <col:40, col:62> col:62 __attr 'pthread_rwlockattr_t *'
| |-NoThrowAttr 0x5578bb136588 <line:575:22>
| `-NonNullAttr 0x5578bb1365e0 <col:63, col:77> 1
|-FunctionDecl 0x5578bb136808 <line:576:1, line:579:82> line:576:12 pthread_rwlockattr_getpshared 'int (const pthread_rwlockattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x5578bb136628 <col:43, line:577:19> col:19 __attr 'const pthread_rwlockattr_t *restrict'
| |-ParmVarDecl 0x5578bb1366a8 <line:578:8, col:24> col:24 __pshared 'int *restrict'
| |-NoThrowAttr 0x5578bb1368b8 <line:579:22>
| `-NonNullAttr 0x5578bb136910 <col:63, col:80> 1 2
|-FunctionDecl 0x5578bb136b38 <line:580:1, line:582:79> line:580:12 pthread_rwlockattr_setpshared 'int (pthread_rwlockattr_t *, int)' extern
| |-ParmVarDecl 0x5578bb136958 <col:43, col:65> col:65 __attr 'pthread_rwlockattr_t *'
| |-ParmVarDecl 0x5578bb1369d8 <line:581:8, col:12> col:12 __pshared 'int'
| |-NoThrowAttr 0x5578bb136be8 <line:582:22>
| `-NonNullAttr 0x5578bb136c40 <col:63, col:77> 1
|-FunctionDecl 0x5578bb136de8 <line:583:1, line:586:82> line:583:12 pthread_rwlockattr_getkind_np 'int (const pthread_rwlockattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x5578bb136c88 <col:43, line:584:19> col:19 __attr 'const pthread_rwlockattr_t *restrict'
| |-ParmVarDecl 0x5578bb136d08 <line:585:8, col:24> col:24 __pref 'int *restrict'
| |-NoThrowAttr 0x5578bb136e98 <line:586:22>
| `-NonNullAttr 0x5578bb136ef0 <col:63, col:80> 1 2
|-FunctionDecl 0x5578bb137078 <line:587:1, line:588:93> line:587:12 pthread_rwlockattr_setkind_np 'int (pthread_rwlockattr_t *, int)' extern
| |-ParmVarDecl 0x5578bb136f38 <col:43, col:65> col:65 __attr 'pthread_rwlockattr_t *'
| |-ParmVarDecl 0x5578bb136fb8 <line:588:8, col:12> col:12 __pref 'int'
| |-NoThrowAttr 0x5578bb137128 <col:36>
| `-NonNullAttr 0x5578bb137180 <col:77, col:91> 1
|-FunctionDecl 0x5578bb1374b8 <line:589:1, line:591:79> line:589:12 pthread_cond_init 'int (pthread_cond_t *restrict, const pthread_condattr_t *restrict)' extern
| |-ParmVarDecl 0x5578bb137260 <col:31, col:58> col:58 __cond 'pthread_cond_t *restrict'
| |-ParmVarDecl 0x5578bb137370 <line:590:10, col:47> col:47 __cond_attr 'const pthread_condattr_t *restrict'
| |-NoThrowAttr 0x5578bb137568 <line:591:22>
| `-NonNullAttr 0x5578bb1375c0 <col:63, col:77> 1
|-FunctionDecl 0x5578bb137738 <line:592:1, line:593:79> line:592:12 pthread_cond_destroy 'int (pthread_cond_t *)' extern
| |-ParmVarDecl 0x5578bb137608 <col:34, col:50> col:50 __cond 'pthread_cond_t *'
| |-NoThrowAttr 0x5578bb1377e0 <line:593:22>
| `-NonNullAttr 0x5578bb137838 <col:63, col:77> 1
|-FunctionDecl 0x5578bb137940 <line:594:1, line:595:68> line:594:12 pthread_cond_signal 'int (pthread_cond_t *)' extern
| |-ParmVarDecl 0x5578bb137888 <col:33, col:49> col:49 __cond 'pthread_cond_t *'
| |-NoThrowAttr 0x5578bb1379e8 <line:595:22>
| `-NonNullAttr 0x5578bb137a40 <col:52, col:66> 1
|-FunctionDecl 0x5578bb137b58 <line:596:1, line:597:68> line:596:12 pthread_cond_broadcast 'int (pthread_cond_t *)' extern
| |-ParmVarDecl 0x5578bb137aa0 <col:36, col:52> col:52 __cond 'pthread_cond_t *'
| |-NoThrowAttr 0x5578bb137c00 <line:597:22>
| `-NonNullAttr 0x5578bb137c58 <col:52, col:66> 1
|-FunctionDecl 0x5578bb137e88 <line:598:1, line:600:41> line:598:12 pthread_cond_wait 'int (pthread_cond_t *restrict, pthread_mutex_t *restrict)' extern
| |-ParmVarDecl 0x5578bb137ca8 <col:31, col:58> col:58 __cond 'pthread_cond_t *restrict'
| |-ParmVarDecl 0x5578bb137d20 <line:599:10, col:38> col:38 __mutex 'pthread_mutex_t *restrict'
| `-NonNullAttr 0x5578bb137f38 <line:600:22, col:39> 1 2
|-FunctionDecl 0x5578bb138268 <line:601:1, line:604:44> line:601:12 pthread_cond_timedwait 'int (pthread_cond_t *restrict, pthread_mutex_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x5578bb137fb8 <col:36, col:63> col:63 __cond 'pthread_cond_t *restrict'
| |-ParmVarDecl 0x5578bb138030 <line:602:8, col:36> col:36 __mutex 'pthread_mutex_t *restrict'
| |-ParmVarDecl 0x5578bb1380c0 <line:603:8, col:42> col:42 __abstime 'const struct timespec *restrict'
| `-NonNullAttr 0x5578bb138320 <line:604:22, col:42> 1 2 3
|-FunctionDecl 0x5578bb138538 <line:605:1, line:606:79> line:605:12 pthread_condattr_init 'int (pthread_condattr_t *)' extern
| |-ParmVarDecl 0x5578bb138400 <col:35, col:55> col:55 __attr 'pthread_condattr_t *'
| |-NoThrowAttr 0x5578bb1385e0 <line:606:22>
| `-NonNullAttr 0x5578bb138638 <col:63, col:77> 1
|-FunctionDecl 0x5578bb138740 <line:607:1, line:608:79> line:607:12 pthread_condattr_destroy 'int (pthread_condattr_t *)' extern
| |-ParmVarDecl 0x5578bb138688 <col:38, col:58> col:58 __attr 'pthread_condattr_t *'
| |-NoThrowAttr 0x5578bb1387e8 <line:608:22>
| `-NonNullAttr 0x5578bb138840 <col:63, col:77> 1
|-FunctionDecl 0x5578bb138aa0 <line:609:1, line:612:82> line:609:12 pthread_condattr_getpshared 'int (const pthread_condattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x5578bb138888 <col:41, line:610:17> col:17 __attr 'const pthread_condattr_t *restrict'
| |-ParmVarDecl 0x5578bb138908 <line:611:6, col:22> col:22 __pshared 'int *restrict'
| |-NoThrowAttr 0x5578bb138b50 <line:612:22>
| `-NonNullAttr 0x5578bb138ba8 <col:63, col:80> 1 2
|-FunctionDecl 0x5578bb138db8 <line:613:1, line:614:94> line:613:12 pthread_condattr_setpshared 'int (pthread_condattr_t *, int)' extern
| |-ParmVarDecl 0x5578bb138bf8 <col:41, col:61> col:61 __attr 'pthread_condattr_t *'
| |-ParmVarDecl 0x5578bb138c78 <line:614:6, col:10> col:10 __pshared 'int'
| |-NoThrowAttr 0x5578bb138e68 <col:37>
| `-NonNullAttr 0x5578bb138ec0 <col:78, col:92> 1
|-FunctionDecl 0x5578bb1390d8 <line:615:1, line:618:82> line:615:12 pthread_condattr_getclock 'int (const pthread_condattr_t *restrict, __clockid_t *restrict)' extern
| |-ParmVarDecl 0x5578bb138f08 <col:39, line:616:22> col:22 __attr 'const pthread_condattr_t *restrict'
| |-ParmVarDecl 0x5578bb138fb0 <line:617:11, col:35> col:35 __clock_id '__clockid_t *restrict'
| |-NoThrowAttr 0x5578bb139188 <line:618:22>
| `-NonNullAttr 0x5578bb1391e0 <col:63, col:80> 1 2
|-FunctionDecl 0x5578bb1393a8 <line:619:1, line:621:79> line:619:12 pthread_condattr_setclock 'int (pthread_condattr_t *, __clockid_t)' extern
| |-ParmVarDecl 0x5578bb139228 <col:39, col:59> col:59 __attr 'pthread_condattr_t *'
| |-ParmVarDecl 0x5578bb1392a0 <line:620:11, col:23> col:23 __clock_id '__clockid_t':'int'
| |-NoThrowAttr 0x5578bb139458 <line:621:22>
| `-NonNullAttr 0x5578bb1394b0 <col:63, col:77> 1
|-FunctionDecl 0x5578bb139758 <line:622:1, line:623:79> line:622:12 pthread_spin_init 'int (pthread_spinlock_t *, int)' extern
| |-ParmVarDecl 0x5578bb139590 <col:31, col:51> col:51 __lock 'pthread_spinlock_t *'
| |-ParmVarDecl 0x5578bb139610 <col:59, col:63> col:63 __pshared 'int'
| |-NoThrowAttr 0x5578bb139808 <line:623:22>
| `-NonNullAttr 0x5578bb139860 <col:63, col:77> 1
|-FunctionDecl 0x5578bb1399d8 <line:624:1, line:625:79> line:624:12 pthread_spin_destroy 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x5578bb1398a8 <col:34, col:54> col:54 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x5578bb139ab0 <line:625:22>
| `-NonNullAttr 0x5578bb139b08 <col:63, col:77> 1
|-FunctionDecl 0x5578bb139c10 <line:626:1, line:627:68> line:626:12 pthread_spin_lock 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x5578bb139b58 <col:31, col:51> col:51 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x5578bb139cb8 <line:627:22>
| `-NonNullAttr 0x5578bb139d10 <col:52, col:66> 1
|-FunctionDecl 0x5578bb139e10 <line:628:1, line:629:68> line:628:12 pthread_spin_trylock 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x5578bb139d58 <col:34, col:54> col:54 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x5578bb139eb8 <line:629:22>
| `-NonNullAttr 0x5578bb139f10 <col:52, col:66> 1
|-FunctionDecl 0x5578bb13a010 <line:630:1, line:631:68> line:630:12 pthread_spin_unlock 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x5578bb139f58 <col:33, col:53> col:53 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x5578bb13a0b8 <line:631:22>
| `-NonNullAttr 0x5578bb13a110 <col:52, col:66> 1
|-FunctionDecl 0x5578bb13a4e8 <line:632:1, line:635:79> line:632:12 pthread_barrier_init 'int (pthread_barrier_t *restrict, const pthread_barrierattr_t *restrict, unsigned int)' extern
| |-ParmVarDecl 0x5578bb13a1f0 <col:34, col:64> col:64 __barrier 'pthread_barrier_t *restrict'
| |-ParmVarDecl 0x5578bb13a300 <line:633:6, line:634:6> col:6 __attr 'const pthread_barrierattr_t *restrict'
| |-ParmVarDecl 0x5578bb13a380 <col:14, col:27> col:27 __count 'unsigned int'
| |-NoThrowAttr 0x5578bb13a5a0 <line:635:22>
| `-NonNullAttr 0x5578bb13a5f8 <col:63, col:77> 1
|-FunctionDecl 0x5578bb13a778 <line:636:1, line:637:79> line:636:12 pthread_barrier_destroy 'int (pthread_barrier_t *)' extern
| |-ParmVarDecl 0x5578bb13a648 <col:37, col:56> col:56 __barrier 'pthread_barrier_t *'
| |-NoThrowAttr 0x5578bb13a820 <line:637:22>
| `-NonNullAttr 0x5578bb13a878 <col:63, col:77> 1
|-FunctionDecl 0x5578bb13a980 <line:638:1, line:639:68> line:638:12 pthread_barrier_wait 'int (pthread_barrier_t *)' extern
| |-ParmVarDecl 0x5578bb13a8c8 <col:34, col:53> col:53 __barrier 'pthread_barrier_t *'
| |-NoThrowAttr 0x5578bb13aa28 <line:639:22>
| `-NonNullAttr 0x5578bb13aa80 <col:52, col:66> 1
|-FunctionDecl 0x5578bb13bc88 <line:640:1, line:641:79> line:640:12 pthread_barrierattr_init 'int (pthread_barrierattr_t *)' extern
| |-ParmVarDecl 0x5578bb13bb50 <col:38, col:61> col:61 __attr 'pthread_barrierattr_t *'
| |-NoThrowAttr 0x5578bb13bd30 <line:641:22>
| `-NonNullAttr 0x5578bb13bd88 <col:63, col:77> 1
|-FunctionDecl 0x5578bb13be90 <line:642:1, line:643:79> line:642:12 pthread_barrierattr_destroy 'int (pthread_barrierattr_t *)' extern
| |-ParmVarDecl 0x5578bb13bdd8 <col:41, col:64> col:64 __attr 'pthread_barrierattr_t *'
| |-NoThrowAttr 0x5578bb13bf38 <line:643:22>
| `-NonNullAttr 0x5578bb13bf90 <col:63, col:77> 1
|-FunctionDecl 0x5578bb13c1b8 <line:644:1, line:647:82> line:644:12 pthread_barrierattr_getpshared 'int (const pthread_barrierattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x5578bb13bfd8 <col:44, line:645:20> col:20 __attr 'const pthread_barrierattr_t *restrict'
| |-ParmVarDecl 0x5578bb13c058 <line:646:9, col:25> col:25 __pshared 'int *restrict'
| |-NoThrowAttr 0x5578bb13c268 <line:647:22>
| `-NonNullAttr 0x5578bb13c2c0 <col:63, col:80> 1 2
|-FunctionDecl 0x5578bb13c4c8 <line:648:1, line:650:79> line:648:12 pthread_barrierattr_setpshared 'int (pthread_barrierattr_t *, int)' extern
| |-ParmVarDecl 0x5578bb13c308 <col:44, col:67> col:67 __attr 'pthread_barrierattr_t *'
| |-ParmVarDecl 0x5578bb13c388 <line:649:9, col:13> col:13 __pshared 'int'
| |-NoThrowAttr 0x5578bb13c578 <line:650:22>
| `-NonNullAttr 0x5578bb13c5d0 <col:63, col:77> 1
|-FunctionDecl 0x5578bb13c918 <line:651:1, line:653:79> line:651:12 pthread_key_create 'int (pthread_key_t *, void (*)(void *))' extern
| |-ParmVarDecl 0x5578bb13c6b0 <col:32, col:47> col:47 __key 'pthread_key_t *'
| |-ParmVarDecl 0x5578bb13c7d0 <line:652:11, col:43> col:18 __destr_function 'void (*)(void *)'
| |-NoThrowAttr 0x5578bb13c9c8 <line:653:22>
| `-NonNullAttr 0x5578bb13ca20 <col:63, col:77> 1
|-FunctionDecl 0x5578bb13cb88 <line:654:1, col:92> col:12 pthread_key_delete 'int (pthread_key_t)' extern
| |-ParmVarDecl 0x5578bb13ca68 <col:32, col:46> col:46 __key 'pthread_key_t':'unsigned int'
| `-NoThrowAttr 0x5578bb13cc30 <col:69>
|-FunctionDecl 0x5578bb13cda8 <line:655:1, col:95> col:14 pthread_getspecific 'void *(pthread_key_t)' extern
| |-ParmVarDecl 0x5578bb13cc98 <col:35, col:49> col:49 __key 'pthread_key_t':'unsigned int'
| `-NoThrowAttr 0x5578bb13ce50 <col:72>
|-FunctionDecl 0x5578bb13d088 <line:656:1, line:657:67> line:656:12 pthread_setspecific 'int (pthread_key_t, const void *)' extern
| |-ParmVarDecl 0x5578bb13ceb8 <col:33, col:47> col:47 __key 'pthread_key_t':'unsigned int'
| |-ParmVarDecl 0x5578bb13cf68 <line:657:5, col:17> col:17 __pointer 'const void *'
| `-NoThrowAttr 0x5578bb13d138 <col:44>
|-FunctionDecl 0x5578bb13d358 <line:658:1, line:660:79> line:658:12 pthread_getcpuclockid 'int (pthread_t, __clockid_t *)' extern
| |-ParmVarDecl 0x5578bb13d1a0 <col:35, col:45> col:45 __thread_id 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x5578bb13d218 <line:659:7, col:20> col:20 __clock_id '__clockid_t *'
| |-NoThrowAttr 0x5578bb13d408 <line:660:22>
| `-NonNullAttr 0x5578bb13d460 <col:63, col:77> 2
|-FunctionDecl 0x5578bb13d8a8 <line:661:1, line:663:70> line:661:12 pthread_atfork 'int (void (*)(void), void (*)(void), void (*)(void))' extern
| |-ParmVarDecl 0x5578bb13d540 <col:28, col:51> col:35 __prepare 'void (*)(void)'
| |-ParmVarDecl 0x5578bb13d650 <line:662:7, col:29> col:14 __parent 'void (*)(void)'
| |-ParmVarDecl 0x5578bb13d760 <line:663:7, col:28> col:14 __child 'void (*)(void)'
| `-NoThrowAttr 0x5578bb13d960 <col:47>
|-FunctionDecl 0x5578bb13daf0 <line:665:1, col:20> col:8 used P0 'void *(void *)'
| `-ParmVarDecl 0x5578bb13d9d0 <col:11, col:17> col:17 arg 'void *'
|-FunctionDecl 0x5578bb13dc48 <line:666:1, col:20> col:8 used P1 'void *(void *)'
| `-ParmVarDecl 0x5578bb13dbb0 <col:11, col:17> col:17 arg 'void *'
|-FunctionDecl 0x5578bb13dda0 <line:667:1, col:20> col:8 used P2 'void *(void *)'
| `-ParmVarDecl 0x5578bb13dd08 <col:11, col:17> col:17 arg 'void *'
|-FunctionDecl 0x5578bb13de68 <line:668:1, col:12> col:6 fence 'void ()'
|-FunctionDecl 0x5578bb13df28 <line:669:1, col:12> col:6 isync 'void ()'
|-FunctionDecl 0x5578bb13dfe8 <line:670:1, col:14> col:6 lwfence 'void ()'
|-VarDecl 0x5578bb13e0a0 <line:671:1, col:5> col:5 used __unbuffered_cnt 'int'
|-VarDecl 0x5578bb13e120 prev 0x5578bb13e0a0 <line:672:1, col:24> col:5 used __unbuffered_cnt 'int' cinit
| `-IntegerLiteral 0x5578bb13e188 <col:24> 'int' 0
|-VarDecl 0x5578bb13e1c0 <line:673:1, col:5> col:5 used __unbuffered_p0_EAX 'int'
|-VarDecl 0x5578bb13e240 prev 0x5578bb13e1c0 <line:674:1, col:27> col:5 used __unbuffered_p0_EAX 'int' cinit
| `-IntegerLiteral 0x5578bb13e2a8 <col:27> 'int' 0
|-VarDecl 0x5578bb13e2e0 <line:675:1, col:5> col:5 used __unbuffered_p1_EAX 'int'
|-VarDecl 0x5578bb13e360 prev 0x5578bb13e2e0 <line:676:1, col:27> col:5 used __unbuffered_p1_EAX 'int' cinit
| `-IntegerLiteral 0x5578bb13e3c8 <col:27> 'int' 0
|-VarDecl 0x5578bb13e400 <line:677:1, col:5> col:5 used __unbuffered_p1_EBX 'int'
|-VarDecl 0x5578bb13e480 prev 0x5578bb13e400 <line:678:1, col:27> col:5 used __unbuffered_p1_EBX 'int' cinit
| `-IntegerLiteral 0x5578bb13e4e8 <col:27> 'int' 0
|-VarDecl 0x5578bb13e520 <line:679:1, col:5> col:5 used __unbuffered_p2_EAX 'int'
|-VarDecl 0x5578bb13e5a0 prev 0x5578bb13e520 <line:680:1, col:27> col:5 used __unbuffered_p2_EAX 'int' cinit
| `-IntegerLiteral 0x5578bb13e608 <col:27> 'int' 0
|-VarDecl 0x5578bb13e640 <line:681:1, col:5> col:5 used __unbuffered_p2_EBX 'int'
|-VarDecl 0x5578bb13e6c0 prev 0x5578bb13e640 <line:682:1, col:27> col:5 used __unbuffered_p2_EBX 'int' cinit
| `-IntegerLiteral 0x5578bb13e728 <col:27> 'int' 0
|-VarDecl 0x5578bb13e758 <line:683:1, col:7> col:7 used main$tmp_guard0 '_Bool'
|-VarDecl 0x5578bb13e7d0 <line:684:1, col:7> col:7 used main$tmp_guard1 '_Bool'
|-VarDecl 0x5578bb13e850 <line:685:1, col:5> col:5 used x 'int'
|-VarDecl 0x5578bb13e8d0 prev 0x5578bb13e850 <line:686:1, col:9> col:5 used x 'int' cinit
| `-IntegerLiteral 0x5578bb13e938 <col:9> 'int' 0
|-VarDecl 0x5578bb13e970 <line:687:1, col:5> col:5 used y 'int'
|-VarDecl 0x5578bb13e9f0 prev 0x5578bb13e970 <line:688:1, col:9> col:5 used y 'int' cinit
| `-IntegerLiteral 0x5578bb13ea58 <col:9> 'int' 0
|-VarDecl 0x5578bb13ea88 <line:689:1, col:7> col:7 used y$flush_delayed '_Bool'
|-VarDecl 0x5578bb13eb18 <line:690:1, col:5> col:5 used y$mem_tmp 'int'
|-VarDecl 0x5578bb13eb90 <line:691:1, col:7> col:7 used y$r_buff0_thd0 '_Bool'
|-VarDecl 0x5578bb13ec08 <line:692:1, col:7> col:7 used y$r_buff0_thd1 '_Bool'
|-VarDecl 0x5578bb13ec80 <line:693:1, col:7> col:7 used y$r_buff0_thd2 '_Bool'
|-VarDecl 0x5578bb13ecf8 <line:694:1, col:7> col:7 used y$r_buff0_thd3 '_Bool'
|-VarDecl 0x5578bb13ed70 <line:695:1, col:7> col:7 used y$r_buff1_thd0 '_Bool'
|-VarDecl 0x5578bb13ede8 <line:696:1, col:7> col:7 used y$r_buff1_thd1 '_Bool'
|-VarDecl 0x5578bb13ee60 <line:697:1, col:7> col:7 used y$r_buff1_thd2 '_Bool'
|-VarDecl 0x5578bb13eed8 <line:698:1, col:7> col:7 used y$r_buff1_thd3 '_Bool'
|-VarDecl 0x5578bb13ef50 <line:699:1, col:7> col:7 y$read_delayed '_Bool'
|-VarDecl 0x5578bb13efd0 <line:700:1, col:6> col:6 y$read_delayed_var 'int *'
|-VarDecl 0x5578bb13f050 <line:701:1, col:5> col:5 used y$w_buff0 'int'
|-VarDecl 0x5578bb13f0c8 <line:702:1, col:7> col:7 used y$w_buff0_used '_Bool'
|-VarDecl 0x5578bb13f148 <line:703:1, col:5> col:5 used y$w_buff1 'int'
|-VarDecl 0x5578bb13f1c0 <line:704:1, col:7> col:7 used y$w_buff1_used '_Bool'
|-VarDecl 0x5578bb13f240 <line:705:1, col:5> col:5 used z 'int'
|-VarDecl 0x5578bb13f2c0 prev 0x5578bb13f240 <line:706:1, col:9> col:5 used z 'int' cinit
| `-IntegerLiteral 0x5578bb13f328 <col:9> 'int' 0
|-VarDecl 0x5578bb13f358 <line:707:1, col:7> col:7 used weak$$choice0 '_Bool'
|-VarDecl 0x5578bb13f3d0 <line:708:1, col:7> col:7 used weak$$choice2 '_Bool'
|-FunctionDecl 0x5578bb13f4e8 prev 0x5578bb13daf0 <line:709:1, line:723:1> line:709:8 used P0 'void *(void *)'
| |-ParmVarDecl 0x5578bb13f450 <col:11, col:17> col:17 arg 'void *'
| `-CompoundStmt 0x5578bb13fb10 <line:710:1, line:723:1>
|   |-CallExpr 0x5578bb13f5f8 <line:711:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x5578bb13f5e0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5578bb13f590 <col:3> 'void ()' Function 0x5578bb0e4e40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x5578bb13f658 <line:712:3, col:7> 'int' '='
|   | |-DeclRefExpr 0x5578bb13f618 <col:3> 'int' lvalue Var 0x5578bb13f2c0 'z' 'int'
|   | `-IntegerLiteral 0x5578bb13f638 <col:7> 'int' 1
|   |-CallExpr 0x5578bb13f6b0 <line:713:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x5578bb13f698 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5578bb13f678 <col:3> 'void ()' Function 0x5578bb0e4f00 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x5578bb13f708 <line:714:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x5578bb13f6f0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5578bb13f6d0 <col:3> 'void ()' Function 0x5578bb0e4e40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x5578bb13f780 <line:715:3, col:25> 'int' '='
|   | |-DeclRefExpr 0x5578bb13f728 <col:3> 'int' lvalue Var 0x5578bb13e240 '__unbuffered_p0_EAX' 'int'
|   | `-ImplicitCastExpr 0x5578bb13f768 <col:25> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x5578bb13f748 <col:25> 'int' lvalue Var 0x5578bb13e8d0 'x' 'int'
|   |-CallExpr 0x5578bb13f7d8 <line:716:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x5578bb13f7c0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5578bb13f7a0 <col:3> 'void ()' Function 0x5578bb0e4f00 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x5578bb13f830 <line:717:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x5578bb13f818 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5578bb13f7f8 <col:3> 'void ()' Function 0x5578bb0e4e40 '__VERIFIER_atomic_begin' 'void ()'
|   |-CallExpr 0x5578bb13f888 <line:718:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x5578bb13f870 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5578bb13f850 <col:3> 'void ()' Function 0x5578bb0e4f00 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x5578bb13f8e0 <line:719:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x5578bb13f8c8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5578bb13f8a8 <col:3> 'void ()' Function 0x5578bb0e4e40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x5578bb13f998 <line:720:3, col:41> 'int' '='
|   | |-DeclRefExpr 0x5578bb13f900 <col:3> 'int' lvalue Var 0x5578bb13e120 '__unbuffered_cnt' 'int'
|   | `-BinaryOperator 0x5578bb13f978 <col:22, col:41> 'int' '+'
|   |   |-ImplicitCastExpr 0x5578bb13f960 <col:22> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x5578bb13f920 <col:22> 'int' lvalue Var 0x5578bb13e120 '__unbuffered_cnt' 'int'
|   |   `-IntegerLiteral 0x5578bb13f940 <col:41> 'int' 1
|   |-CallExpr 0x5578bb13f9f0 <line:721:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x5578bb13f9d8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5578bb13f9b8 <col:3> 'void ()' Function 0x5578bb0e4f00 '__VERIFIER_atomic_end' 'void ()'
|   `-ReturnStmt 0x5578bb13fa98 <line:722:3, col:36>
|     `-CallExpr 0x5578bb13fa78 <col:10, col:36> 'void *'
|       `-ImplicitCastExpr 0x5578bb13fa60 <col:10> 'void *(*)(void)' <FunctionToPointerDecay>
|         `-DeclRefExpr 0x5578bb13fa10 <col:10> 'void *(void)' Function 0x5578bb0e4958 '__VERIFIER_nondet_pointer' 'void *(void)'
|-FunctionDecl 0x5578bb13fc30 prev 0x5578bb13dc48 <line:724:1, line:754:1> line:724:8 used P1 'void *(void *)'
| |-ParmVarDecl 0x5578bb13fb98 <col:11, col:17> col:17 arg 'void *'
| `-CompoundStmt 0x5578bb142c58 <line:725:1, line:754:1>
|   |-CallExpr 0x5578bb13fd10 <line:726:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x5578bb13fcf8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5578bb13fcd8 <col:3> 'void ()' Function 0x5578bb0e4e40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x5578bb13fd70 <line:727:3, col:7> 'int' '='
|   | |-DeclRefExpr 0x5578bb13fd30 <col:3> 'int' lvalue Var 0x5578bb13e8d0 'x' 'int'
|   | `-IntegerLiteral 0x5578bb13fd50 <col:7> 'int' 1
|   |-CallExpr 0x5578bb13fdc8 <line:728:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x5578bb13fdb0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5578bb13fd90 <col:3> 'void ()' Function 0x5578bb0e4f00 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x5578bb13fe20 <line:729:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x5578bb13fe08 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5578bb13fde8 <col:3> 'void ()' Function 0x5578bb0e4e40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x5578bb13fe98 <line:730:3, col:25> 'int' '='
|   | |-DeclRefExpr 0x5578bb13fe40 <col:3> 'int' lvalue Var 0x5578bb13e360 '__unbuffered_p1_EAX' 'int'
|   | `-ImplicitCastExpr 0x5578bb13fe80 <col:25> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x5578bb13fe60 <col:25> 'int' lvalue Var 0x5578bb13e8d0 'x' 'int'
|   |-CallExpr 0x5578bb13fef0 <line:731:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x5578bb13fed8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5578bb13feb8 <col:3> 'void ()' Function 0x5578bb0e4f00 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x5578bb13ff48 <line:732:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x5578bb13ff30 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5578bb13ff10 <col:3> 'void ()' Function 0x5578bb0e4e40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x5578bb13fff8 <line:733:3, col:45> '_Bool' '='
|   | |-DeclRefExpr 0x5578bb13ff68 <col:3> '_Bool' lvalue Var 0x5578bb13f358 'weak$$choice0' '_Bool'
|   | `-ImplicitCastExpr 0x5578bb13ffe0 <col:19, col:45> '_Bool' <PointerToBoolean>
|   |   `-CallExpr 0x5578bb13ffc0 <col:19, col:45> 'void *'
|   |     `-ImplicitCastExpr 0x5578bb13ffa8 <col:19> 'void *(*)(void)' <FunctionToPointerDecay>
|   |       `-DeclRefExpr 0x5578bb13ff88 <col:19> 'void *(void)' Function 0x5578bb0e4958 '__VERIFIER_nondet_pointer' 'void *(void)'
|   |-BinaryOperator 0x5578bb1400a8 <line:734:3, col:45> '_Bool' '='
|   | |-DeclRefExpr 0x5578bb140018 <col:3> '_Bool' lvalue Var 0x5578bb13f3d0 'weak$$choice2' '_Bool'
|   | `-ImplicitCastExpr 0x5578bb140090 <col:19, col:45> '_Bool' <PointerToBoolean>
|   |   `-CallExpr 0x5578bb140070 <col:19, col:45> 'void *'
|   |     `-ImplicitCastExpr 0x5578bb140058 <col:19> 'void *(*)(void)' <FunctionToPointerDecay>
|   |       `-DeclRefExpr 0x5578bb140038 <col:19> 'void *(void)' Function 0x5578bb0e4958 '__VERIFIER_nondet_pointer' 'void *(void)'
|   |-BinaryOperator 0x5578bb140120 <line:735:3, col:21> '_Bool' '='
|   | |-DeclRefExpr 0x5578bb1400c8 <col:3> '_Bool' lvalue Var 0x5578bb13ea88 'y$flush_delayed' '_Bool'
|   | `-ImplicitCastExpr 0x5578bb140108 <col:21> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x5578bb1400e8 <col:21> '_Bool' lvalue Var 0x5578bb13f3d0 'weak$$choice2' '_Bool'
|   |-BinaryOperator 0x5578bb140198 <line:736:3, col:15> 'int' '='
|   | |-DeclRefExpr 0x5578bb140140 <col:3> 'int' lvalue Var 0x5578bb13eb18 'y$mem_tmp' 'int'
|   | `-ImplicitCastExpr 0x5578bb140180 <col:15> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x5578bb140160 <col:15> 'int' lvalue Var 0x5578bb13e9f0 'y' 'int'
|   |-BinaryOperator 0x5578bb1405d0 <line:737:3, col:162> 'int' '='
|   | |-DeclRefExpr 0x5578bb1401b8 <col:3> 'int' lvalue Var 0x5578bb13e9f0 'y' 'int'
|   | `-ConditionalOperator 0x5578bb1405a0 <col:7, col:162> 'int'
|   |   |-BinaryOperator 0x5578bb1403c8 <col:7, col:84> 'int' '||'
|   |   | |-BinaryOperator 0x5578bb1402e8 <col:7, col:46> 'int' '||'
|   |   | | |-UnaryOperator 0x5578bb140210 <col:7, col:8> 'int' prefix '!' cannot overflow
|   |   | | | `-ImplicitCastExpr 0x5578bb1401f8 <col:8> '_Bool' <LValueToRValue>
|   |   | | |   `-DeclRefExpr 0x5578bb1401d8 <col:8> '_Bool' lvalue Var 0x5578bb13f0c8 'y$w_buff0_used' '_Bool'
|   |   | | `-BinaryOperator 0x5578bb1402c8 <col:26, col:46> 'int' '&&'
|   |   | |   |-UnaryOperator 0x5578bb140260 <col:26, col:27> 'int' prefix '!' cannot overflow
|   |   | |   | `-ImplicitCastExpr 0x5578bb140248 <col:27> '_Bool' <LValueToRValue>
|   |   | |   |   `-DeclRefExpr 0x5578bb140228 <col:27> '_Bool' lvalue Var 0x5578bb13ec80 'y$r_buff0_thd2' '_Bool'
|   |   | |   `-UnaryOperator 0x5578bb1402b0 <col:45, col:46> 'int' prefix '!' cannot overflow
|   |   | |     `-ImplicitCastExpr 0x5578bb140298 <col:46> '_Bool' <LValueToRValue>
|   |   | |       `-DeclRefExpr 0x5578bb140278 <col:46> '_Bool' lvalue Var 0x5578bb13f1c0 'y$w_buff1_used' '_Bool'
|   |   | `-BinaryOperator 0x5578bb1403a8 <col:64, col:84> 'int' '&&'
|   |   |   |-UnaryOperator 0x5578bb140340 <col:64, col:65> 'int' prefix '!' cannot overflow
|   |   |   | `-ImplicitCastExpr 0x5578bb140328 <col:65> '_Bool' <LValueToRValue>
|   |   |   |   `-DeclRefExpr 0x5578bb140308 <col:65> '_Bool' lvalue Var 0x5578bb13ec80 'y$r_buff0_thd2' '_Bool'
|   |   |   `-UnaryOperator 0x5578bb140390 <col:83, col:84> 'int' prefix '!' cannot overflow
|   |   |     `-ImplicitCastExpr 0x5578bb140378 <col:84> '_Bool' <LValueToRValue>
|   |   |       `-DeclRefExpr 0x5578bb140358 <col:84> '_Bool' lvalue Var 0x5578bb13ee60 'y$r_buff1_thd2' '_Bool'
|   |   |-ImplicitCastExpr 0x5578bb140588 <col:101> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x5578bb1403e8 <col:101> 'int' lvalue Var 0x5578bb13e9f0 'y' 'int'
|   |   `-ParenExpr 0x5578bb140568 <col:105, col:162> 'int'
|   |     `-ConditionalOperator 0x5578bb140538 <col:106, col:153> 'int'
|   |       |-BinaryOperator 0x5578bb1404a8 <col:106, col:124> 'int' '&&'
|   |       | |-ImplicitCastExpr 0x5578bb140460 <col:106> 'int' <IntegralCast>
|   |       | | `-ImplicitCastExpr 0x5578bb140448 <col:106> '_Bool' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x5578bb140408 <col:106> '_Bool' lvalue Var 0x5578bb13f0c8 'y$w_buff0_used' '_Bool'
|   |       | `-ImplicitCastExpr 0x5578bb140490 <col:124> 'int' <IntegralCast>
|   |       |   `-ImplicitCastExpr 0x5578bb140478 <col:124> '_Bool' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x5578bb140428 <col:124> '_Bool' lvalue Var 0x5578bb13ec80 'y$r_buff0_thd2' '_Bool'
|   |       |-ImplicitCastExpr 0x5578bb140508 <col:141> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x5578bb1404c8 <col:141> 'int' lvalue Var 0x5578bb13f050 'y$w_buff0' 'int'
|   |       `-ImplicitCastExpr 0x5578bb140520 <col:153> 'int' <LValueToRValue>
|   |         `-DeclRefExpr 0x5578bb1404e8 <col:153> 'int' lvalue Var 0x5578bb13f148 'y$w_buff1' 'int'
|   |-BinaryOperator 0x5578bb140ae0 <line:738:3, col:208> 'int' '='
|   | |-DeclRefExpr 0x5578bb1405f0 <col:3> 'int' lvalue Var 0x5578bb13f050 'y$w_buff0' 'int'
|   | `-ConditionalOperator 0x5578bb140ab0 <col:15, col:208> 'int'
|   |   |-ImplicitCastExpr 0x5578bb140a80 <col:15> 'int' <IntegralCast>
|   |   | `-ImplicitCastExpr 0x5578bb140a68 <col:15> '_Bool' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x5578bb140610 <col:15> '_Bool' lvalue Var 0x5578bb13f3d0 'weak$$choice2' '_Bool'
|   |   |-ImplicitCastExpr 0x5578bb140a98 <col:31> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x5578bb140630 <col:31> 'int' lvalue Var 0x5578bb13f050 'y$w_buff0' 'int'
|   |   `-ParenExpr 0x5578bb140a48 <col:43, col:208> 'int'
|   |     `-ConditionalOperator 0x5578bb140a18 <col:44, col:207> 'int'
|   |       |-BinaryOperator 0x5578bb140840 <col:44, col:121> 'int' '||'
|   |       | |-BinaryOperator 0x5578bb140760 <col:44, col:83> 'int' '||'
|   |       | | |-UnaryOperator 0x5578bb140688 <col:44, col:45> 'int' prefix '!' cannot overflow
|   |       | | | `-ImplicitCastExpr 0x5578bb140670 <col:45> '_Bool' <LValueToRValue>
|   |       | | |   `-DeclRefExpr 0x5578bb140650 <col:45> '_Bool' lvalue Var 0x5578bb13f0c8 'y$w_buff0_used' '_Bool'
|   |       | | `-BinaryOperator 0x5578bb140740 <col:63, col:83> 'int' '&&'
|   |       | |   |-UnaryOperator 0x5578bb1406d8 <col:63, col:64> 'int' prefix '!' cannot overflow
|   |       | |   | `-ImplicitCastExpr 0x5578bb1406c0 <col:64> '_Bool' <LValueToRValue>
|   |       | |   |   `-DeclRefExpr 0x5578bb1406a0 <col:64> '_Bool' lvalue Var 0x5578bb13ec80 'y$r_buff0_thd2' '_Bool'
|   |       | |   `-UnaryOperator 0x5578bb140728 <col:82, col:83> 'int' prefix '!' cannot overflow
|   |       | |     `-ImplicitCastExpr 0x5578bb140710 <col:83> '_Bool' <LValueToRValue>
|   |       | |       `-DeclRefExpr 0x5578bb1406f0 <col:83> '_Bool' lvalue Var 0x5578bb13f1c0 'y$w_buff1_used' '_Bool'
|   |       | `-BinaryOperator 0x5578bb140820 <col:101, col:121> 'int' '&&'
|   |       |   |-UnaryOperator 0x5578bb1407b8 <col:101, col:102> 'int' prefix '!' cannot overflow
|   |       |   | `-ImplicitCastExpr 0x5578bb1407a0 <col:102> '_Bool' <LValueToRValue>
|   |       |   |   `-DeclRefExpr 0x5578bb140780 <col:102> '_Bool' lvalue Var 0x5578bb13ec80 'y$r_buff0_thd2' '_Bool'
|   |       |   `-UnaryOperator 0x5578bb140808 <col:120, col:121> 'int' prefix '!' cannot overflow
|   |       |     `-ImplicitCastExpr 0x5578bb1407f0 <col:121> '_Bool' <LValueToRValue>
|   |       |       `-DeclRefExpr 0x5578bb1407d0 <col:121> '_Bool' lvalue Var 0x5578bb13ee60 'y$r_buff1_thd2' '_Bool'
|   |       |-ImplicitCastExpr 0x5578bb140a00 <col:138> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x5578bb140860 <col:138> 'int' lvalue Var 0x5578bb13f050 'y$w_buff0' 'int'
|   |       `-ParenExpr 0x5578bb1409e0 <col:150, col:207> 'int'
|   |         `-ConditionalOperator 0x5578bb1409b0 <col:151, col:198> 'int'
|   |           |-BinaryOperator 0x5578bb140920 <col:151, col:169> 'int' '&&'
|   |           | |-ImplicitCastExpr 0x5578bb1408d8 <col:151> 'int' <IntegralCast>
|   |           | | `-ImplicitCastExpr 0x5578bb1408c0 <col:151> '_Bool' <LValueToRValue>
|   |           | |   `-DeclRefExpr 0x5578bb140880 <col:151> '_Bool' lvalue Var 0x5578bb13f0c8 'y$w_buff0_used' '_Bool'
|   |           | `-ImplicitCastExpr 0x5578bb140908 <col:169> 'int' <IntegralCast>
|   |           |   `-ImplicitCastExpr 0x5578bb1408f0 <col:169> '_Bool' <LValueToRValue>
|   |           |     `-DeclRefExpr 0x5578bb1408a0 <col:169> '_Bool' lvalue Var 0x5578bb13ec80 'y$r_buff0_thd2' '_Bool'
|   |           |-ImplicitCastExpr 0x5578bb140980 <col:186> 'int' <LValueToRValue>
|   |           | `-DeclRefExpr 0x5578bb140940 <col:186> 'int' lvalue Var 0x5578bb13f050 'y$w_buff0' 'int'
|   |           `-ImplicitCastExpr 0x5578bb140998 <col:198> 'int' <LValueToRValue>
|   |             `-DeclRefExpr 0x5578bb140960 <col:198> 'int' lvalue Var 0x5578bb13f050 'y$w_buff0' 'int'
|   |-BinaryOperator 0x5578bb141010 <line:739:3, col:208> 'int' '='
|   | |-DeclRefExpr 0x5578bb140b20 <col:3> 'int' lvalue Var 0x5578bb13f148 'y$w_buff1' 'int'
|   | `-ConditionalOperator 0x5578bb140fe0 <col:15, col:208> 'int'
|   |   |-ImplicitCastExpr 0x5578bb140fb0 <col:15> 'int' <IntegralCast>
|   |   | `-ImplicitCastExpr 0x5578bb140f98 <col:15> '_Bool' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x5578bb140b40 <col:15> '_Bool' lvalue Var 0x5578bb13f3d0 'weak$$choice2' '_Bool'
|   |   |-ImplicitCastExpr 0x5578bb140fc8 <col:31> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x5578bb140b60 <col:31> 'int' lvalue Var 0x5578bb13f148 'y$w_buff1' 'int'
|   |   `-ParenExpr 0x5578bb140f78 <col:43, col:208> 'int'
|   |     `-ConditionalOperator 0x5578bb140f48 <col:44, col:207> 'int'
|   |       |-BinaryOperator 0x5578bb140d70 <col:44, col:121> 'int' '||'
|   |       | |-BinaryOperator 0x5578bb140c90 <col:44, col:83> 'int' '||'
|   |       | | |-UnaryOperator 0x5578bb140bb8 <col:44, col:45> 'int' prefix '!' cannot overflow
|   |       | | | `-ImplicitCastExpr 0x5578bb140ba0 <col:45> '_Bool' <LValueToRValue>
|   |       | | |   `-DeclRefExpr 0x5578bb140b80 <col:45> '_Bool' lvalue Var 0x5578bb13f0c8 'y$w_buff0_used' '_Bool'
|   |       | | `-BinaryOperator 0x5578bb140c70 <col:63, col:83> 'int' '&&'
|   |       | |   |-UnaryOperator 0x5578bb140c08 <col:63, col:64> 'int' prefix '!' cannot overflow
|   |       | |   | `-ImplicitCastExpr 0x5578bb140bf0 <col:64> '_Bool' <LValueToRValue>
|   |       | |   |   `-DeclRefExpr 0x5578bb140bd0 <col:64> '_Bool' lvalue Var 0x5578bb13ec80 'y$r_buff0_thd2' '_Bool'
|   |       | |   `-UnaryOperator 0x5578bb140c58 <col:82, col:83> 'int' prefix '!' cannot overflow
|   |       | |     `-ImplicitCastExpr 0x5578bb140c40 <col:83> '_Bool' <LValueToRValue>
|   |       | |       `-DeclRefExpr 0x5578bb140c20 <col:83> '_Bool' lvalue Var 0x5578bb13f1c0 'y$w_buff1_used' '_Bool'
|   |       | `-BinaryOperator 0x5578bb140d50 <col:101, col:121> 'int' '&&'
|   |       |   |-UnaryOperator 0x5578bb140ce8 <col:101, col:102> 'int' prefix '!' cannot overflow
|   |       |   | `-ImplicitCastExpr 0x5578bb140cd0 <col:102> '_Bool' <LValueToRValue>
|   |       |   |   `-DeclRefExpr 0x5578bb140cb0 <col:102> '_Bool' lvalue Var 0x5578bb13ec80 'y$r_buff0_thd2' '_Bool'
|   |       |   `-UnaryOperator 0x5578bb140d38 <col:120, col:121> 'int' prefix '!' cannot overflow
|   |       |     `-ImplicitCastExpr 0x5578bb140d20 <col:121> '_Bool' <LValueToRValue>
|   |       |       `-DeclRefExpr 0x5578bb140d00 <col:121> '_Bool' lvalue Var 0x5578bb13ee60 'y$r_buff1_thd2' '_Bool'
|   |       |-ImplicitCastExpr 0x5578bb140f30 <col:138> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x5578bb140d90 <col:138> 'int' lvalue Var 0x5578bb13f148 'y$w_buff1' 'int'
|   |       `-ParenExpr 0x5578bb140f10 <col:150, col:207> 'int'
|   |         `-ConditionalOperator 0x5578bb140ee0 <col:151, col:198> 'int'
|   |           |-BinaryOperator 0x5578bb140e50 <col:151, col:169> 'int' '&&'
|   |           | |-ImplicitCastExpr 0x5578bb140e08 <col:151> 'int' <IntegralCast>
|   |           | | `-ImplicitCastExpr 0x5578bb140df0 <col:151> '_Bool' <LValueToRValue>
|   |           | |   `-DeclRefExpr 0x5578bb140db0 <col:151> '_Bool' lvalue Var 0x5578bb13f0c8 'y$w_buff0_used' '_Bool'
|   |           | `-ImplicitCastExpr 0x5578bb140e38 <col:169> 'int' <IntegralCast>
|   |           |   `-ImplicitCastExpr 0x5578bb140e20 <col:169> '_Bool' <LValueToRValue>
|   |           |     `-DeclRefExpr 0x5578bb140dd0 <col:169> '_Bool' lvalue Var 0x5578bb13ec80 'y$r_buff0_thd2' '_Bool'
|   |           |-ImplicitCastExpr 0x5578bb140eb0 <col:186> 'int' <LValueToRValue>
|   |           | `-DeclRefExpr 0x5578bb140e70 <col:186> 'int' lvalue Var 0x5578bb13f148 'y$w_buff1' 'int'
|   |           `-ImplicitCastExpr 0x5578bb140ec8 <col:198> 'int' <LValueToRValue>
|   |             `-DeclRefExpr 0x5578bb140e90 <col:198> 'int' lvalue Var 0x5578bb13f148 'y$w_buff1' 'int'
|   |-BinaryOperator 0x5578bb1415b8 <line:740:3, col:227> '_Bool' '='
|   | |-DeclRefExpr 0x5578bb141030 <col:3> '_Bool' lvalue Var 0x5578bb13f0c8 'y$w_buff0_used' '_Bool'
|   | `-ImplicitCastExpr 0x5578bb1415a0 <col:20, col:227> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x5578bb141570 <col:20, col:227> 'int'
|   |     |-ImplicitCastExpr 0x5578bb141528 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x5578bb141510 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x5578bb141050 <col:20> '_Bool' lvalue Var 0x5578bb13f3d0 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x5578bb141558 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x5578bb141540 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x5578bb141070 <col:36> '_Bool' lvalue Var 0x5578bb13f0c8 'y$w_buff0_used' '_Bool'
|   |     `-ParenExpr 0x5578bb1414f0 <col:53, col:227> 'int'
|   |       `-ConditionalOperator 0x5578bb1414c0 <col:54, col:226> 'int'
|   |         |-BinaryOperator 0x5578bb141280 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x5578bb1411a0 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x5578bb1410c8 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x5578bb1410b0 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x5578bb141090 <col:55> '_Bool' lvalue Var 0x5578bb13f0c8 'y$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x5578bb141180 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x5578bb141118 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x5578bb141100 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x5578bb1410e0 <col:74> '_Bool' lvalue Var 0x5578bb13ec80 'y$r_buff0_thd2' '_Bool'
|   |         | |   `-UnaryOperator 0x5578bb141168 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x5578bb141150 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x5578bb141130 <col:93> '_Bool' lvalue Var 0x5578bb13f1c0 'y$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x5578bb141260 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x5578bb1411f8 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x5578bb1411e0 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x5578bb1411c0 <col:112> '_Bool' lvalue Var 0x5578bb13ec80 'y$r_buff0_thd2' '_Bool'
|   |         |   `-UnaryOperator 0x5578bb141248 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x5578bb141230 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x5578bb141210 <col:131> '_Bool' lvalue Var 0x5578bb13ee60 'y$r_buff1_thd2' '_Bool'
|   |         |-ImplicitCastExpr 0x5578bb1414a8 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x5578bb141490 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x5578bb1412a0 <col:148> '_Bool' lvalue Var 0x5578bb13f0c8 'y$w_buff0_used' '_Bool'
|   |         `-ParenExpr 0x5578bb141470 <col:165, col:226> 'int'
|   |           `-ConditionalOperator 0x5578bb141440 <col:166, col:212> 'int'
|   |             |-BinaryOperator 0x5578bb141360 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x5578bb141318 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x5578bb141300 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x5578bb1412c0 <col:166> '_Bool' lvalue Var 0x5578bb13f0c8 'y$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x5578bb141348 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x5578bb141330 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x5578bb1412e0 <col:184> '_Bool' lvalue Var 0x5578bb13ec80 'y$r_buff0_thd2' '_Bool'
|   |             |-ImplicitCastExpr 0x5578bb1413f8 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x5578bb1413b0 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x5578bb141380 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x5578bb141428 <col:212> 'int' <IntegralCast>
|   |               `-ImplicitCastExpr 0x5578bb141410 <col:212> '_Bool' <LValueToRValue>
|   |                 `-DeclRefExpr 0x5578bb1413d8 <col:212> '_Bool' lvalue Var 0x5578bb13f0c8 'y$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x5578bb141b90 <line:741:3, col:221> '_Bool' '='
|   | |-DeclRefExpr 0x5578bb1415d8 <col:3> '_Bool' lvalue Var 0x5578bb13f1c0 'y$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x5578bb141b78 <col:20, col:221> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x5578bb141b48 <col:20, col:221> 'int'
|   |     |-ImplicitCastExpr 0x5578bb141af0 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x5578bb141ad8 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x5578bb1415f8 <col:20> '_Bool' lvalue Var 0x5578bb13f3d0 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x5578bb141b30 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x5578bb141b08 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x5578bb141618 <col:36> '_Bool' lvalue Var 0x5578bb13f1c0 'y$w_buff1_used' '_Bool'
|   |     `-ParenExpr 0x5578bb141ab8 <col:53, col:221> 'int'
|   |       `-ConditionalOperator 0x5578bb141a88 <col:54, col:220> 'int'
|   |         |-BinaryOperator 0x5578bb141828 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x5578bb141748 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x5578bb141670 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x5578bb141658 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x5578bb141638 <col:55> '_Bool' lvalue Var 0x5578bb13f0c8 'y$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x5578bb141728 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x5578bb1416c0 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x5578bb1416a8 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x5578bb141688 <col:74> '_Bool' lvalue Var 0x5578bb13ec80 'y$r_buff0_thd2' '_Bool'
|   |         | |   `-UnaryOperator 0x5578bb141710 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x5578bb1416f8 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x5578bb1416d8 <col:93> '_Bool' lvalue Var 0x5578bb13f1c0 'y$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x5578bb141808 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x5578bb1417a0 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x5578bb141788 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x5578bb141768 <col:112> '_Bool' lvalue Var 0x5578bb13ec80 'y$r_buff0_thd2' '_Bool'
|   |         |   `-UnaryOperator 0x5578bb1417f0 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x5578bb1417d8 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x5578bb1417b8 <col:131> '_Bool' lvalue Var 0x5578bb13ee60 'y$r_buff1_thd2' '_Bool'
|   |         |-ImplicitCastExpr 0x5578bb141a70 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x5578bb141a58 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x5578bb141848 <col:148> '_Bool' lvalue Var 0x5578bb13f1c0 'y$w_buff1_used' '_Bool'
|   |         `-ParenExpr 0x5578bb141a38 <col:165, col:220> 'int'
|   |           `-ConditionalOperator 0x5578bb141a08 <col:166, col:219> 'int'
|   |             |-BinaryOperator 0x5578bb141908 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x5578bb1418c0 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x5578bb1418a8 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x5578bb141868 <col:166> '_Bool' lvalue Var 0x5578bb13f0c8 'y$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x5578bb1418f0 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x5578bb1418d8 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x5578bb141888 <col:184> '_Bool' lvalue Var 0x5578bb13ec80 'y$r_buff0_thd2' '_Bool'
|   |             |-ImplicitCastExpr 0x5578bb1419d8 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x5578bb141958 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x5578bb141928 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x5578bb1419f0 <col:212, col:219> 'int' <IntegralCast>
|   |               `-CStyleCastExpr 0x5578bb1419b0 <col:212, col:219> '_Bool' <IntegralToBoolean>
|   |                 `-IntegerLiteral 0x5578bb141980 <col:219> 'int' 0
|   |-BinaryOperator 0x5578bb142138 <line:742:3, col:227> '_Bool' '='
|   | |-DeclRefExpr 0x5578bb141bb0 <col:3> '_Bool' lvalue Var 0x5578bb13ec80 'y$r_buff0_thd2' '_Bool'
|   | `-ImplicitCastExpr 0x5578bb142120 <col:20, col:227> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x5578bb1420f0 <col:20, col:227> 'int'
|   |     |-ImplicitCastExpr 0x5578bb1420a8 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x5578bb142090 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x5578bb141bd0 <col:20> '_Bool' lvalue Var 0x5578bb13f3d0 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x5578bb1420d8 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x5578bb1420c0 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x5578bb141bf0 <col:36> '_Bool' lvalue Var 0x5578bb13ec80 'y$r_buff0_thd2' '_Bool'
|   |     `-ParenExpr 0x5578bb142070 <col:53, col:227> 'int'
|   |       `-ConditionalOperator 0x5578bb142040 <col:54, col:226> 'int'
|   |         |-BinaryOperator 0x5578bb141e00 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x5578bb141d20 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x5578bb141c48 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x5578bb141c30 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x5578bb141c10 <col:55> '_Bool' lvalue Var 0x5578bb13f0c8 'y$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x5578bb141d00 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x5578bb141c98 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x5578bb141c80 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x5578bb141c60 <col:74> '_Bool' lvalue Var 0x5578bb13ec80 'y$r_buff0_thd2' '_Bool'
|   |         | |   `-UnaryOperator 0x5578bb141ce8 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x5578bb141cd0 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x5578bb141cb0 <col:93> '_Bool' lvalue Var 0x5578bb13f1c0 'y$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x5578bb141de0 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x5578bb141d78 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x5578bb141d60 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x5578bb141d40 <col:112> '_Bool' lvalue Var 0x5578bb13ec80 'y$r_buff0_thd2' '_Bool'
|   |         |   `-UnaryOperator 0x5578bb141dc8 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x5578bb141db0 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x5578bb141d90 <col:131> '_Bool' lvalue Var 0x5578bb13ee60 'y$r_buff1_thd2' '_Bool'
|   |         |-ImplicitCastExpr 0x5578bb142028 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x5578bb142010 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x5578bb141e20 <col:148> '_Bool' lvalue Var 0x5578bb13ec80 'y$r_buff0_thd2' '_Bool'
|   |         `-ParenExpr 0x5578bb141ff0 <col:165, col:226> 'int'
|   |           `-ConditionalOperator 0x5578bb141fc0 <col:166, col:212> 'int'
|   |             |-BinaryOperator 0x5578bb141ee0 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x5578bb141e98 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x5578bb141e80 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x5578bb141e40 <col:166> '_Bool' lvalue Var 0x5578bb13f0c8 'y$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x5578bb141ec8 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x5578bb141eb0 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x5578bb141e60 <col:184> '_Bool' lvalue Var 0x5578bb13ec80 'y$r_buff0_thd2' '_Bool'
|   |             |-ImplicitCastExpr 0x5578bb141f78 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x5578bb141f30 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x5578bb141f00 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x5578bb141fa8 <col:212> 'int' <IntegralCast>
|   |               `-ImplicitCastExpr 0x5578bb141f90 <col:212> '_Bool' <LValueToRValue>
|   |                 `-DeclRefExpr 0x5578bb141f58 <col:212> '_Bool' lvalue Var 0x5578bb13ec80 'y$r_buff0_thd2' '_Bool'
|   |-BinaryOperator 0x5578bb142700 <line:743:3, col:221> '_Bool' '='
|   | |-DeclRefExpr 0x5578bb142158 <col:3> '_Bool' lvalue Var 0x5578bb13ee60 'y$r_buff1_thd2' '_Bool'
|   | `-ImplicitCastExpr 0x5578bb1426e8 <col:20, col:221> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x5578bb1426b8 <col:20, col:221> 'int'
|   |     |-ImplicitCastExpr 0x5578bb142670 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x5578bb142658 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x5578bb142178 <col:20> '_Bool' lvalue Var 0x5578bb13f3d0 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x5578bb1426a0 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x5578bb142688 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x5578bb142198 <col:36> '_Bool' lvalue Var 0x5578bb13ee60 'y$r_buff1_thd2' '_Bool'
|   |     `-ParenExpr 0x5578bb142638 <col:53, col:221> 'int'
|   |       `-ConditionalOperator 0x5578bb142608 <col:54, col:220> 'int'
|   |         |-BinaryOperator 0x5578bb1423a8 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x5578bb1422c8 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x5578bb1421f0 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x5578bb1421d8 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x5578bb1421b8 <col:55> '_Bool' lvalue Var 0x5578bb13f0c8 'y$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x5578bb1422a8 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x5578bb142240 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x5578bb142228 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x5578bb142208 <col:74> '_Bool' lvalue Var 0x5578bb13ec80 'y$r_buff0_thd2' '_Bool'
|   |         | |   `-UnaryOperator 0x5578bb142290 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x5578bb142278 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x5578bb142258 <col:93> '_Bool' lvalue Var 0x5578bb13f1c0 'y$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x5578bb142388 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x5578bb142320 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x5578bb142308 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x5578bb1422e8 <col:112> '_Bool' lvalue Var 0x5578bb13ec80 'y$r_buff0_thd2' '_Bool'
|   |         |   `-UnaryOperator 0x5578bb142370 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x5578bb142358 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x5578bb142338 <col:131> '_Bool' lvalue Var 0x5578bb13ee60 'y$r_buff1_thd2' '_Bool'
|   |         |-ImplicitCastExpr 0x5578bb1425f0 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x5578bb1425d8 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x5578bb1423c8 <col:148> '_Bool' lvalue Var 0x5578bb13ee60 'y$r_buff1_thd2' '_Bool'
|   |         `-ParenExpr 0x5578bb1425b8 <col:165, col:220> 'int'
|   |           `-ConditionalOperator 0x5578bb142588 <col:166, col:219> 'int'
|   |             |-BinaryOperator 0x5578bb142488 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x5578bb142440 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x5578bb142428 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x5578bb1423e8 <col:166> '_Bool' lvalue Var 0x5578bb13f0c8 'y$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x5578bb142470 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x5578bb142458 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x5578bb142408 <col:184> '_Bool' lvalue Var 0x5578bb13ec80 'y$r_buff0_thd2' '_Bool'
|   |             |-ImplicitCastExpr 0x5578bb142558 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x5578bb1424d8 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x5578bb1424a8 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x5578bb142570 <col:212, col:219> 'int' <IntegralCast>
|   |               `-CStyleCastExpr 0x5578bb142530 <col:212, col:219> '_Bool' <IntegralToBoolean>
|   |                 `-IntegerLiteral 0x5578bb142500 <col:219> 'int' 0
|   |-BinaryOperator 0x5578bb142778 <line:744:3, col:25> 'int' '='
|   | |-DeclRefExpr 0x5578bb142720 <col:3> 'int' lvalue Var 0x5578bb13e480 '__unbuffered_p1_EBX' 'int'
|   | `-ImplicitCastExpr 0x5578bb142760 <col:25> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x5578bb142740 <col:25> 'int' lvalue Var 0x5578bb13e9f0 'y' 'int'
|   |-BinaryOperator 0x5578bb1428a8 <line:745:3, col:37> 'int' '='
|   | |-DeclRefExpr 0x5578bb142798 <col:3> 'int' lvalue Var 0x5578bb13e9f0 'y' 'int'
|   | `-ConditionalOperator 0x5578bb142878 <col:7, col:37> 'int'
|   |   |-ImplicitCastExpr 0x5578bb142830 <col:7> 'int' <IntegralCast>
|   |   | `-ImplicitCastExpr 0x5578bb142818 <col:7> '_Bool' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x5578bb1427b8 <col:7> '_Bool' lvalue Var 0x5578bb13ea88 'y$flush_delayed' '_Bool'
|   |   |-ImplicitCastExpr 0x5578bb142848 <col:25> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x5578bb1427d8 <col:25> 'int' lvalue Var 0x5578bb13eb18 'y$mem_tmp' 'int'
|   |   `-ImplicitCastExpr 0x5578bb142860 <col:37> 'int' <LValueToRValue>
|   |     `-DeclRefExpr 0x5578bb1427f8 <col:37> 'int' lvalue Var 0x5578bb13e9f0 'y' 'int'
|   |-BinaryOperator 0x5578bb142940 <line:746:3, col:28> '_Bool' '='
|   | |-DeclRefExpr 0x5578bb1428c8 <col:3> '_Bool' lvalue Var 0x5578bb13ea88 'y$flush_delayed' '_Bool'
|   | `-CStyleCastExpr 0x5578bb142918 <col:21, col:28> '_Bool' <IntegralToBoolean>
|   |   `-IntegerLiteral 0x5578bb1428e8 <col:28> 'int' 0
|   |-CallExpr 0x5578bb142998 <line:747:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x5578bb142980 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5578bb142960 <col:3> 'void ()' Function 0x5578bb0e4f00 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x5578bb1429f0 <line:748:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x5578bb1429d8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5578bb1429b8 <col:3> 'void ()' Function 0x5578bb0e4e40 '__VERIFIER_atomic_begin' 'void ()'
|   |-CallExpr 0x5578bb142a48 <line:749:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x5578bb142a30 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5578bb142a10 <col:3> 'void ()' Function 0x5578bb0e4f00 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x5578bb142aa0 <line:750:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x5578bb142a88 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5578bb142a68 <col:3> 'void ()' Function 0x5578bb0e4e40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x5578bb142b78 <line:751:3, col:41> 'int' '='
|   | |-DeclRefExpr 0x5578bb142ac0 <col:3> 'int' lvalue Var 0x5578bb13e120 '__unbuffered_cnt' 'int'
|   | `-BinaryOperator 0x5578bb142b58 <col:22, col:41> 'int' '+'
|   |   |-ImplicitCastExpr 0x5578bb142b40 <col:22> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x5578bb142ae0 <col:22> 'int' lvalue Var 0x5578bb13e120 '__unbuffered_cnt' 'int'
|   |   `-IntegerLiteral 0x5578bb142b00 <col:41> 'int' 1
|   |-CallExpr 0x5578bb142bd0 <line:752:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x5578bb142bb8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5578bb142b98 <col:3> 'void ()' Function 0x5578bb0e4f00 '__VERIFIER_atomic_end' 'void ()'
|   `-ReturnStmt 0x5578bb142c48 <line:753:3, col:36>
|     `-CallExpr 0x5578bb142c28 <col:10, col:36> 'void *'
|       `-ImplicitCastExpr 0x5578bb142c10 <col:10> 'void *(*)(void)' <FunctionToPointerDecay>
|         `-DeclRefExpr 0x5578bb142bf0 <col:10> 'void *(void)' Function 0x5578bb0e4958 '__VERIFIER_nondet_pointer' 'void *(void)'
|-FunctionDecl 0x5578bb142df8 prev 0x5578bb13dda0 <line:755:1, line:799:1> line:755:8 used P2 'void *(void *)'
| |-ParmVarDecl 0x5578bb142d60 <col:11, col:17> col:17 arg 'void *'
| `-CompoundStmt 0x5578bb147090 <line:756:1, line:799:1>
|   |-CallExpr 0x5578bb142ed8 <line:757:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x5578bb142ec0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5578bb142ea0 <col:3> 'void ()' Function 0x5578bb0e4e40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x5578bb142f50 <line:758:3, col:15> 'int' '='
|   | |-DeclRefExpr 0x5578bb142ef8 <col:3> 'int' lvalue Var 0x5578bb13f148 'y$w_buff1' 'int'
|   | `-ImplicitCastExpr 0x5578bb142f38 <col:15> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x5578bb142f18 <col:15> 'int' lvalue Var 0x5578bb13f050 'y$w_buff0' 'int'
|   |-BinaryOperator 0x5578bb142fb0 <line:759:3, col:15> 'int' '='
|   | |-DeclRefExpr 0x5578bb142f70 <col:3> 'int' lvalue Var 0x5578bb13f050 'y$w_buff0' 'int'
|   | `-IntegerLiteral 0x5578bb142f90 <col:15> 'int' 1
|   |-BinaryOperator 0x5578bb143028 <line:760:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x5578bb142fd0 <col:3> '_Bool' lvalue Var 0x5578bb13f1c0 'y$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x5578bb143010 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x5578bb142ff0 <col:20> '_Bool' lvalue Var 0x5578bb13f0c8 'y$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x5578bb1430c0 <line:761:3, col:27> '_Bool' '='
|   | |-DeclRefExpr 0x5578bb143048 <col:3> '_Bool' lvalue Var 0x5578bb13f0c8 'y$w_buff0_used' '_Bool'
|   | `-CStyleCastExpr 0x5578bb143098 <col:20, col:27> '_Bool' <IntegralToBoolean>
|   |   `-IntegerLiteral 0x5578bb143068 <col:27> 'int' 1
|   |-CallExpr 0x5578bb143248 <line:762:3, col:56> 'void'
|   | |-ImplicitCastExpr 0x5578bb143230 <col:3> 'void (*)(int)' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x5578bb1430e0 <col:3> 'void (int)' Function 0x5578bb0e4bc8 '__VERIFIER_assert' 'void (int)'
|   | `-UnaryOperator 0x5578bb1431e0 <col:21, col:55> 'int' prefix '!' cannot overflow
|   |   `-ParenExpr 0x5578bb1431c0 <col:22, col:55> 'int'
|   |     `-BinaryOperator 0x5578bb1431a0 <col:23, col:41> 'int' '&&'
|   |       |-ImplicitCastExpr 0x5578bb143158 <col:23> 'int' <IntegralCast>
|   |       | `-ImplicitCastExpr 0x5578bb143140 <col:23> '_Bool' <LValueToRValue>
|   |       |   `-DeclRefExpr 0x5578bb143100 <col:23> '_Bool' lvalue Var 0x5578bb13f1c0 'y$w_buff1_used' '_Bool'
|   |       `-ImplicitCastExpr 0x5578bb143188 <col:41> 'int' <IntegralCast>
|   |         `-ImplicitCastExpr 0x5578bb143170 <col:41> '_Bool' <LValueToRValue>
|   |           `-DeclRefExpr 0x5578bb143120 <col:41> '_Bool' lvalue Var 0x5578bb13f0c8 'y$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x5578bb1432c8 <line:763:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x5578bb143270 <col:3> '_Bool' lvalue Var 0x5578bb13ed70 'y$r_buff1_thd0' '_Bool'
|   | `-ImplicitCastExpr 0x5578bb1432b0 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x5578bb143290 <col:20> '_Bool' lvalue Var 0x5578bb13eb90 'y$r_buff0_thd0' '_Bool'
|   |-BinaryOperator 0x5578bb143340 <line:764:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x5578bb1432e8 <col:3> '_Bool' lvalue Var 0x5578bb13ede8 'y$r_buff1_thd1' '_Bool'
|   | `-ImplicitCastExpr 0x5578bb143328 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x5578bb143308 <col:20> '_Bool' lvalue Var 0x5578bb13ec08 'y$r_buff0_thd1' '_Bool'
|   |-BinaryOperator 0x5578bb1433b8 <line:765:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x5578bb143360 <col:3> '_Bool' lvalue Var 0x5578bb13ee60 'y$r_buff1_thd2' '_Bool'
|   | `-ImplicitCastExpr 0x5578bb1433a0 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x5578bb143380 <col:20> '_Bool' lvalue Var 0x5578bb13ec80 'y$r_buff0_thd2' '_Bool'
|   |-BinaryOperator 0x5578bb143430 <line:766:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x5578bb1433d8 <col:3> '_Bool' lvalue Var 0x5578bb13eed8 'y$r_buff1_thd3' '_Bool'
|   | `-ImplicitCastExpr 0x5578bb143418 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x5578bb1433f8 <col:20> '_Bool' lvalue Var 0x5578bb13ecf8 'y$r_buff0_thd3' '_Bool'
|   |-BinaryOperator 0x5578bb1434c8 <line:767:3, col:27> '_Bool' '='
|   | |-DeclRefExpr 0x5578bb143450 <col:3> '_Bool' lvalue Var 0x5578bb13ecf8 'y$r_buff0_thd3' '_Bool'
|   | `-CStyleCastExpr 0x5578bb1434a0 <col:20, col:27> '_Bool' <IntegralToBoolean>
|   |   `-IntegerLiteral 0x5578bb143470 <col:27> 'int' 1
|   |-CallExpr 0x5578bb143520 <line:768:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x5578bb143508 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5578bb1434e8 <col:3> 'void ()' Function 0x5578bb0e4f00 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x5578bb143578 <line:769:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x5578bb143560 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5578bb143540 <col:3> 'void ()' Function 0x5578bb0e4e40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x5578bb143628 <line:770:3, col:45> '_Bool' '='
|   | |-DeclRefExpr 0x5578bb143598 <col:3> '_Bool' lvalue Var 0x5578bb13f358 'weak$$choice0' '_Bool'
|   | `-ImplicitCastExpr 0x5578bb143610 <col:19, col:45> '_Bool' <PointerToBoolean>
|   |   `-CallExpr 0x5578bb1435f0 <col:19, col:45> 'void *'
|   |     `-ImplicitCastExpr 0x5578bb1435d8 <col:19> 'void *(*)(void)' <FunctionToPointerDecay>
|   |       `-DeclRefExpr 0x5578bb1435b8 <col:19> 'void *(void)' Function 0x5578bb0e4958 '__VERIFIER_nondet_pointer' 'void *(void)'
|   |-BinaryOperator 0x5578bb1436d8 <line:771:3, col:45> '_Bool' '='
|   | |-DeclRefExpr 0x5578bb143648 <col:3> '_Bool' lvalue Var 0x5578bb13f3d0 'weak$$choice2' '_Bool'
|   | `-ImplicitCastExpr 0x5578bb1436c0 <col:19, col:45> '_Bool' <PointerToBoolean>
|   |   `-CallExpr 0x5578bb1436a0 <col:19, col:45> 'void *'
|   |     `-ImplicitCastExpr 0x5578bb143688 <col:19> 'void *(*)(void)' <FunctionToPointerDecay>
|   |       `-DeclRefExpr 0x5578bb143668 <col:19> 'void *(void)' Function 0x5578bb0e4958 '__VERIFIER_nondet_pointer' 'void *(void)'
|   |-BinaryOperator 0x5578bb143750 <line:772:3, col:21> '_Bool' '='
|   | |-DeclRefExpr 0x5578bb1436f8 <col:3> '_Bool' lvalue Var 0x5578bb13ea88 'y$flush_delayed' '_Bool'
|   | `-ImplicitCastExpr 0x5578bb143738 <col:21> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x5578bb143718 <col:21> '_Bool' lvalue Var 0x5578bb13f3d0 'weak$$choice2' '_Bool'
|   |-BinaryOperator 0x5578bb1437c8 <line:773:3, col:15> 'int' '='
|   | |-DeclRefExpr 0x5578bb143770 <col:3> 'int' lvalue Var 0x5578bb13eb18 'y$mem_tmp' 'int'
|   | `-ImplicitCastExpr 0x5578bb1437b0 <col:15> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x5578bb143790 <col:15> 'int' lvalue Var 0x5578bb13e9f0 'y' 'int'
|   |-BinaryOperator 0x5578bb143c18 <line:774:3, col:162> 'int' '='
|   | |-DeclRefExpr 0x5578bb1437e8 <col:3> 'int' lvalue Var 0x5578bb13e9f0 'y' 'int'
|   | `-ConditionalOperator 0x5578bb143be8 <col:7, col:162> 'int'
|   |   |-BinaryOperator 0x5578bb1439f8 <col:7, col:84> 'int' '||'
|   |   | |-BinaryOperator 0x5578bb143918 <col:7, col:46> 'int' '||'
|   |   | | |-UnaryOperator 0x5578bb143840 <col:7, col:8> 'int' prefix '!' cannot overflow
|   |   | | | `-ImplicitCastExpr 0x5578bb143828 <col:8> '_Bool' <LValueToRValue>
|   |   | | |   `-DeclRefExpr 0x5578bb143808 <col:8> '_Bool' lvalue Var 0x5578bb13f0c8 'y$w_buff0_used' '_Bool'
|   |   | | `-BinaryOperator 0x5578bb1438f8 <col:26, col:46> 'int' '&&'
|   |   | |   |-UnaryOperator 0x5578bb143890 <col:26, col:27> 'int' prefix '!' cannot overflow
|   |   | |   | `-ImplicitCastExpr 0x5578bb143878 <col:27> '_Bool' <LValueToRValue>
|   |   | |   |   `-DeclRefExpr 0x5578bb143858 <col:27> '_Bool' lvalue Var 0x5578bb13ecf8 'y$r_buff0_thd3' '_Bool'
|   |   | |   `-UnaryOperator 0x5578bb1438e0 <col:45, col:46> 'int' prefix '!' cannot overflow
|   |   | |     `-ImplicitCastExpr 0x5578bb1438c8 <col:46> '_Bool' <LValueToRValue>
|   |   | |       `-DeclRefExpr 0x5578bb1438a8 <col:46> '_Bool' lvalue Var 0x5578bb13f1c0 'y$w_buff1_used' '_Bool'
|   |   | `-BinaryOperator 0x5578bb1439d8 <col:64, col:84> 'int' '&&'
|   |   |   |-UnaryOperator 0x5578bb143970 <col:64, col:65> 'int' prefix '!' cannot overflow
|   |   |   | `-ImplicitCastExpr 0x5578bb143958 <col:65> '_Bool' <LValueToRValue>
|   |   |   |   `-DeclRefExpr 0x5578bb143938 <col:65> '_Bool' lvalue Var 0x5578bb13ecf8 'y$r_buff0_thd3' '_Bool'
|   |   |   `-UnaryOperator 0x5578bb1439c0 <col:83, col:84> 'int' prefix '!' cannot overflow
|   |   |     `-ImplicitCastExpr 0x5578bb1439a8 <col:84> '_Bool' <LValueToRValue>
|   |   |       `-DeclRefExpr 0x5578bb143988 <col:84> '_Bool' lvalue Var 0x5578bb13eed8 'y$r_buff1_thd3' '_Bool'
|   |   |-ImplicitCastExpr 0x5578bb143bd0 <col:101> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x5578bb143a18 <col:101> 'int' lvalue Var 0x5578bb13e9f0 'y' 'int'
|   |   `-ParenExpr 0x5578bb143bb0 <col:105, col:162> 'int'
|   |     `-ConditionalOperator 0x5578bb143b80 <col:106, col:153> 'int'
|   |       |-BinaryOperator 0x5578bb143ad8 <col:106, col:124> 'int' '&&'
|   |       | |-ImplicitCastExpr 0x5578bb143a90 <col:106> 'int' <IntegralCast>
|   |       | | `-ImplicitCastExpr 0x5578bb143a78 <col:106> '_Bool' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x5578bb143a38 <col:106> '_Bool' lvalue Var 0x5578bb13f0c8 'y$w_buff0_used' '_Bool'
|   |       | `-ImplicitCastExpr 0x5578bb143ac0 <col:124> 'int' <IntegralCast>
|   |       |   `-ImplicitCastExpr 0x5578bb143aa8 <col:124> '_Bool' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x5578bb143a58 <col:124> '_Bool' lvalue Var 0x5578bb13ecf8 'y$r_buff0_thd3' '_Bool'
|   |       |-ImplicitCastExpr 0x5578bb143b50 <col:141> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x5578bb143af8 <col:141> 'int' lvalue Var 0x5578bb13f050 'y$w_buff0' 'int'
|   |       `-ImplicitCastExpr 0x5578bb143b68 <col:153> 'int' <LValueToRValue>
|   |         `-DeclRefExpr 0x5578bb143b18 <col:153> 'int' lvalue Var 0x5578bb13f148 'y$w_buff1' 'int'
|   |-BinaryOperator 0x5578bb144128 <line:775:3, col:208> 'int' '='
|   | |-DeclRefExpr 0x5578bb143c38 <col:3> 'int' lvalue Var 0x5578bb13f050 'y$w_buff0' 'int'
|   | `-ConditionalOperator 0x5578bb1440f8 <col:15, col:208> 'int'
|   |   |-ImplicitCastExpr 0x5578bb1440c8 <col:15> 'int' <IntegralCast>
|   |   | `-ImplicitCastExpr 0x5578bb1440b0 <col:15> '_Bool' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x5578bb143c58 <col:15> '_Bool' lvalue Var 0x5578bb13f3d0 'weak$$choice2' '_Bool'
|   |   |-ImplicitCastExpr 0x5578bb1440e0 <col:31> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x5578bb143c78 <col:31> 'int' lvalue Var 0x5578bb13f050 'y$w_buff0' 'int'
|   |   `-ParenExpr 0x5578bb144090 <col:43, col:208> 'int'
|   |     `-ConditionalOperator 0x5578bb144060 <col:44, col:207> 'int'
|   |       |-BinaryOperator 0x5578bb143e88 <col:44, col:121> 'int' '||'
|   |       | |-BinaryOperator 0x5578bb143da8 <col:44, col:83> 'int' '||'
|   |       | | |-UnaryOperator 0x5578bb143cd0 <col:44, col:45> 'int' prefix '!' cannot overflow
|   |       | | | `-ImplicitCastExpr 0x5578bb143cb8 <col:45> '_Bool' <LValueToRValue>
|   |       | | |   `-DeclRefExpr 0x5578bb143c98 <col:45> '_Bool' lvalue Var 0x5578bb13f0c8 'y$w_buff0_used' '_Bool'
|   |       | | `-BinaryOperator 0x5578bb143d88 <col:63, col:83> 'int' '&&'
|   |       | |   |-UnaryOperator 0x5578bb143d20 <col:63, col:64> 'int' prefix '!' cannot overflow
|   |       | |   | `-ImplicitCastExpr 0x5578bb143d08 <col:64> '_Bool' <LValueToRValue>
|   |       | |   |   `-DeclRefExpr 0x5578bb143ce8 <col:64> '_Bool' lvalue Var 0x5578bb13ecf8 'y$r_buff0_thd3' '_Bool'
|   |       | |   `-UnaryOperator 0x5578bb143d70 <col:82, col:83> 'int' prefix '!' cannot overflow
|   |       | |     `-ImplicitCastExpr 0x5578bb143d58 <col:83> '_Bool' <LValueToRValue>
|   |       | |       `-DeclRefExpr 0x5578bb143d38 <col:83> '_Bool' lvalue Var 0x5578bb13f1c0 'y$w_buff1_used' '_Bool'
|   |       | `-BinaryOperator 0x5578bb143e68 <col:101, col:121> 'int' '&&'
|   |       |   |-UnaryOperator 0x5578bb143e00 <col:101, col:102> 'int' prefix '!' cannot overflow
|   |       |   | `-ImplicitCastExpr 0x5578bb143de8 <col:102> '_Bool' <LValueToRValue>
|   |       |   |   `-DeclRefExpr 0x5578bb143dc8 <col:102> '_Bool' lvalue Var 0x5578bb13ecf8 'y$r_buff0_thd3' '_Bool'
|   |       |   `-UnaryOperator 0x5578bb143e50 <col:120, col:121> 'int' prefix '!' cannot overflow
|   |       |     `-ImplicitCastExpr 0x5578bb143e38 <col:121> '_Bool' <LValueToRValue>
|   |       |       `-DeclRefExpr 0x5578bb143e18 <col:121> '_Bool' lvalue Var 0x5578bb13eed8 'y$r_buff1_thd3' '_Bool'
|   |       |-ImplicitCastExpr 0x5578bb144048 <col:138> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x5578bb143ea8 <col:138> 'int' lvalue Var 0x5578bb13f050 'y$w_buff0' 'int'
|   |       `-ParenExpr 0x5578bb144028 <col:150, col:207> 'int'
|   |         `-ConditionalOperator 0x5578bb143ff8 <col:151, col:198> 'int'
|   |           |-BinaryOperator 0x5578bb143f68 <col:151, col:169> 'int' '&&'
|   |           | |-ImplicitCastExpr 0x5578bb143f20 <col:151> 'int' <IntegralCast>
|   |           | | `-ImplicitCastExpr 0x5578bb143f08 <col:151> '_Bool' <LValueToRValue>
|   |           | |   `-DeclRefExpr 0x5578bb143ec8 <col:151> '_Bool' lvalue Var 0x5578bb13f0c8 'y$w_buff0_used' '_Bool'
|   |           | `-ImplicitCastExpr 0x5578bb143f50 <col:169> 'int' <IntegralCast>
|   |           |   `-ImplicitCastExpr 0x5578bb143f38 <col:169> '_Bool' <LValueToRValue>
|   |           |     `-DeclRefExpr 0x5578bb143ee8 <col:169> '_Bool' lvalue Var 0x5578bb13ecf8 'y$r_buff0_thd3' '_Bool'
|   |           |-ImplicitCastExpr 0x5578bb143fc8 <col:186> 'int' <LValueToRValue>
|   |           | `-DeclRefExpr 0x5578bb143f88 <col:186> 'int' lvalue Var 0x5578bb13f050 'y$w_buff0' 'int'
|   |           `-ImplicitCastExpr 0x5578bb143fe0 <col:198> 'int' <LValueToRValue>
|   |             `-DeclRefExpr 0x5578bb143fa8 <col:198> 'int' lvalue Var 0x5578bb13f050 'y$w_buff0' 'int'
|   |-BinaryOperator 0x5578bb144638 <line:776:3, col:208> 'int' '='
|   | |-DeclRefExpr 0x5578bb144148 <col:3> 'int' lvalue Var 0x5578bb13f148 'y$w_buff1' 'int'
|   | `-ConditionalOperator 0x5578bb144608 <col:15, col:208> 'int'
|   |   |-ImplicitCastExpr 0x5578bb1445d8 <col:15> 'int' <IntegralCast>
|   |   | `-ImplicitCastExpr 0x5578bb1445c0 <col:15> '_Bool' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x5578bb144168 <col:15> '_Bool' lvalue Var 0x5578bb13f3d0 'weak$$choice2' '_Bool'
|   |   |-ImplicitCastExpr 0x5578bb1445f0 <col:31> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x5578bb144188 <col:31> 'int' lvalue Var 0x5578bb13f148 'y$w_buff1' 'int'
|   |   `-ParenExpr 0x5578bb1445a0 <col:43, col:208> 'int'
|   |     `-ConditionalOperator 0x5578bb144570 <col:44, col:207> 'int'
|   |       |-BinaryOperator 0x5578bb144398 <col:44, col:121> 'int' '||'
|   |       | |-BinaryOperator 0x5578bb1442b8 <col:44, col:83> 'int' '||'
|   |       | | |-UnaryOperator 0x5578bb1441e0 <col:44, col:45> 'int' prefix '!' cannot overflow
|   |       | | | `-ImplicitCastExpr 0x5578bb1441c8 <col:45> '_Bool' <LValueToRValue>
|   |       | | |   `-DeclRefExpr 0x5578bb1441a8 <col:45> '_Bool' lvalue Var 0x5578bb13f0c8 'y$w_buff0_used' '_Bool'
|   |       | | `-BinaryOperator 0x5578bb144298 <col:63, col:83> 'int' '&&'
|   |       | |   |-UnaryOperator 0x5578bb144230 <col:63, col:64> 'int' prefix '!' cannot overflow
|   |       | |   | `-ImplicitCastExpr 0x5578bb144218 <col:64> '_Bool' <LValueToRValue>
|   |       | |   |   `-DeclRefExpr 0x5578bb1441f8 <col:64> '_Bool' lvalue Var 0x5578bb13ecf8 'y$r_buff0_thd3' '_Bool'
|   |       | |   `-UnaryOperator 0x5578bb144280 <col:82, col:83> 'int' prefix '!' cannot overflow
|   |       | |     `-ImplicitCastExpr 0x5578bb144268 <col:83> '_Bool' <LValueToRValue>
|   |       | |       `-DeclRefExpr 0x5578bb144248 <col:83> '_Bool' lvalue Var 0x5578bb13f1c0 'y$w_buff1_used' '_Bool'
|   |       | `-BinaryOperator 0x5578bb144378 <col:101, col:121> 'int' '&&'
|   |       |   |-UnaryOperator 0x5578bb144310 <col:101, col:102> 'int' prefix '!' cannot overflow
|   |       |   | `-ImplicitCastExpr 0x5578bb1442f8 <col:102> '_Bool' <LValueToRValue>
|   |       |   |   `-DeclRefExpr 0x5578bb1442d8 <col:102> '_Bool' lvalue Var 0x5578bb13ecf8 'y$r_buff0_thd3' '_Bool'
|   |       |   `-UnaryOperator 0x5578bb144360 <col:120, col:121> 'int' prefix '!' cannot overflow
|   |       |     `-ImplicitCastExpr 0x5578bb144348 <col:121> '_Bool' <LValueToRValue>
|   |       |       `-DeclRefExpr 0x5578bb144328 <col:121> '_Bool' lvalue Var 0x5578bb13eed8 'y$r_buff1_thd3' '_Bool'
|   |       |-ImplicitCastExpr 0x5578bb144558 <col:138> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x5578bb1443b8 <col:138> 'int' lvalue Var 0x5578bb13f148 'y$w_buff1' 'int'
|   |       `-ParenExpr 0x5578bb144538 <col:150, col:207> 'int'
|   |         `-ConditionalOperator 0x5578bb144508 <col:151, col:198> 'int'
|   |           |-BinaryOperator 0x5578bb144478 <col:151, col:169> 'int' '&&'
|   |           | |-ImplicitCastExpr 0x5578bb144430 <col:151> 'int' <IntegralCast>
|   |           | | `-ImplicitCastExpr 0x5578bb144418 <col:151> '_Bool' <LValueToRValue>
|   |           | |   `-DeclRefExpr 0x5578bb1443d8 <col:151> '_Bool' lvalue Var 0x5578bb13f0c8 'y$w_buff0_used' '_Bool'
|   |           | `-ImplicitCastExpr 0x5578bb144460 <col:169> 'int' <IntegralCast>
|   |           |   `-ImplicitCastExpr 0x5578bb144448 <col:169> '_Bool' <LValueToRValue>
|   |           |     `-DeclRefExpr 0x5578bb1443f8 <col:169> '_Bool' lvalue Var 0x5578bb13ecf8 'y$r_buff0_thd3' '_Bool'
|   |           |-ImplicitCastExpr 0x5578bb1444d8 <col:186> 'int' <LValueToRValue>
|   |           | `-DeclRefExpr 0x5578bb144498 <col:186> 'int' lvalue Var 0x5578bb13f148 'y$w_buff1' 'int'
|   |           `-ImplicitCastExpr 0x5578bb1444f0 <col:198> 'int' <LValueToRValue>
|   |             `-DeclRefExpr 0x5578bb1444b8 <col:198> 'int' lvalue Var 0x5578bb13f148 'y$w_buff1' 'int'
|   |-BinaryOperator 0x5578bb144bf0 <line:777:3, col:227> '_Bool' '='
|   | |-DeclRefExpr 0x5578bb144658 <col:3> '_Bool' lvalue Var 0x5578bb13f0c8 'y$w_buff0_used' '_Bool'
|   | `-ImplicitCastExpr 0x5578bb144bd8 <col:20, col:227> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x5578bb144ba8 <col:20, col:227> 'int'
|   |     |-ImplicitCastExpr 0x5578bb144b60 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x5578bb144b38 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x5578bb144678 <col:20> '_Bool' lvalue Var 0x5578bb13f3d0 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x5578bb144b90 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x5578bb144b78 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x5578bb144698 <col:36> '_Bool' lvalue Var 0x5578bb13f0c8 'y$w_buff0_used' '_Bool'
|   |     `-ParenExpr 0x5578bb144b18 <col:53, col:227> 'int'
|   |       `-ConditionalOperator 0x5578bb144ae8 <col:54, col:226> 'int'
|   |         |-BinaryOperator 0x5578bb1448a8 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x5578bb1447c8 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x5578bb1446f0 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x5578bb1446d8 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x5578bb1446b8 <col:55> '_Bool' lvalue Var 0x5578bb13f0c8 'y$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x5578bb1447a8 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x5578bb144740 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x5578bb144728 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x5578bb144708 <col:74> '_Bool' lvalue Var 0x5578bb13ecf8 'y$r_buff0_thd3' '_Bool'
|   |         | |   `-UnaryOperator 0x5578bb144790 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x5578bb144778 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x5578bb144758 <col:93> '_Bool' lvalue Var 0x5578bb13f1c0 'y$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x5578bb144888 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x5578bb144820 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x5578bb144808 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x5578bb1447e8 <col:112> '_Bool' lvalue Var 0x5578bb13ecf8 'y$r_buff0_thd3' '_Bool'
|   |         |   `-UnaryOperator 0x5578bb144870 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x5578bb144858 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x5578bb144838 <col:131> '_Bool' lvalue Var 0x5578bb13eed8 'y$r_buff1_thd3' '_Bool'
|   |         |-ImplicitCastExpr 0x5578bb144ad0 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x5578bb144ab8 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x5578bb1448c8 <col:148> '_Bool' lvalue Var 0x5578bb13f0c8 'y$w_buff0_used' '_Bool'
|   |         `-ParenExpr 0x5578bb144a98 <col:165, col:226> 'int'
|   |           `-ConditionalOperator 0x5578bb144a68 <col:166, col:212> 'int'
|   |             |-BinaryOperator 0x5578bb144988 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x5578bb144940 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x5578bb144928 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x5578bb1448e8 <col:166> '_Bool' lvalue Var 0x5578bb13f0c8 'y$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x5578bb144970 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x5578bb144958 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x5578bb144908 <col:184> '_Bool' lvalue Var 0x5578bb13ecf8 'y$r_buff0_thd3' '_Bool'
|   |             |-ImplicitCastExpr 0x5578bb144a20 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x5578bb1449d8 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x5578bb1449a8 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x5578bb144a50 <col:212> 'int' <IntegralCast>
|   |               `-ImplicitCastExpr 0x5578bb144a38 <col:212> '_Bool' <LValueToRValue>
|   |                 `-DeclRefExpr 0x5578bb144a00 <col:212> '_Bool' lvalue Var 0x5578bb13f0c8 'y$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x5578bb1451b8 <line:778:3, col:221> '_Bool' '='
|   | |-DeclRefExpr 0x5578bb144c10 <col:3> '_Bool' lvalue Var 0x5578bb13f1c0 'y$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x5578bb1451a0 <col:20, col:221> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x5578bb145170 <col:20, col:221> 'int'
|   |     |-ImplicitCastExpr 0x5578bb145128 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x5578bb145110 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x5578bb144c30 <col:20> '_Bool' lvalue Var 0x5578bb13f3d0 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x5578bb145158 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x5578bb145140 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x5578bb144c50 <col:36> '_Bool' lvalue Var 0x5578bb13f1c0 'y$w_buff1_used' '_Bool'
|   |     `-ParenExpr 0x5578bb1450f0 <col:53, col:221> 'int'
|   |       `-ConditionalOperator 0x5578bb1450c0 <col:54, col:220> 'int'
|   |         |-BinaryOperator 0x5578bb144e60 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x5578bb144d80 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x5578bb144ca8 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x5578bb144c90 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x5578bb144c70 <col:55> '_Bool' lvalue Var 0x5578bb13f0c8 'y$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x5578bb144d60 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x5578bb144cf8 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x5578bb144ce0 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x5578bb144cc0 <col:74> '_Bool' lvalue Var 0x5578bb13ecf8 'y$r_buff0_thd3' '_Bool'
|   |         | |   `-UnaryOperator 0x5578bb144d48 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x5578bb144d30 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x5578bb144d10 <col:93> '_Bool' lvalue Var 0x5578bb13f1c0 'y$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x5578bb144e40 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x5578bb144dd8 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x5578bb144dc0 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x5578bb144da0 <col:112> '_Bool' lvalue Var 0x5578bb13ecf8 'y$r_buff0_thd3' '_Bool'
|   |         |   `-UnaryOperator 0x5578bb144e28 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x5578bb144e10 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x5578bb144df0 <col:131> '_Bool' lvalue Var 0x5578bb13eed8 'y$r_buff1_thd3' '_Bool'
|   |         |-ImplicitCastExpr 0x5578bb1450a8 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x5578bb145090 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x5578bb144e80 <col:148> '_Bool' lvalue Var 0x5578bb13f1c0 'y$w_buff1_used' '_Bool'
|   |         `-ParenExpr 0x5578bb145070 <col:165, col:220> 'int'
|   |           `-ConditionalOperator 0x5578bb145040 <col:166, col:219> 'int'
|   |             |-BinaryOperator 0x5578bb144f40 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x5578bb144ef8 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x5578bb144ee0 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x5578bb144ea0 <col:166> '_Bool' lvalue Var 0x5578bb13f0c8 'y$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x5578bb144f28 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x5578bb144f10 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x5578bb144ec0 <col:184> '_Bool' lvalue Var 0x5578bb13ecf8 'y$r_buff0_thd3' '_Bool'
|   |             |-ImplicitCastExpr 0x5578bb145010 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x5578bb144f90 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x5578bb144f60 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x5578bb145028 <col:212, col:219> 'int' <IntegralCast>
|   |               `-CStyleCastExpr 0x5578bb144fe8 <col:212, col:219> '_Bool' <IntegralToBoolean>
|   |                 `-IntegerLiteral 0x5578bb144fb8 <col:219> 'int' 0
|   |-BinaryOperator 0x5578bb145760 <line:779:3, col:227> '_Bool' '='
|   | |-DeclRefExpr 0x5578bb1451d8 <col:3> '_Bool' lvalue Var 0x5578bb13ecf8 'y$r_buff0_thd3' '_Bool'
|   | `-ImplicitCastExpr 0x5578bb145748 <col:20, col:227> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x5578bb145718 <col:20, col:227> 'int'
|   |     |-ImplicitCastExpr 0x5578bb1456d0 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x5578bb1456b8 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x5578bb1451f8 <col:20> '_Bool' lvalue Var 0x5578bb13f3d0 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x5578bb145700 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x5578bb1456e8 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x5578bb145218 <col:36> '_Bool' lvalue Var 0x5578bb13ecf8 'y$r_buff0_thd3' '_Bool'
|   |     `-ParenExpr 0x5578bb145698 <col:53, col:227> 'int'
|   |       `-ConditionalOperator 0x5578bb145668 <col:54, col:226> 'int'
|   |         |-BinaryOperator 0x5578bb145428 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x5578bb145348 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x5578bb145270 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x5578bb145258 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x5578bb145238 <col:55> '_Bool' lvalue Var 0x5578bb13f0c8 'y$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x5578bb145328 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x5578bb1452c0 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x5578bb1452a8 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x5578bb145288 <col:74> '_Bool' lvalue Var 0x5578bb13ecf8 'y$r_buff0_thd3' '_Bool'
|   |         | |   `-UnaryOperator 0x5578bb145310 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x5578bb1452f8 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x5578bb1452d8 <col:93> '_Bool' lvalue Var 0x5578bb13f1c0 'y$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x5578bb145408 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x5578bb1453a0 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x5578bb145388 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x5578bb145368 <col:112> '_Bool' lvalue Var 0x5578bb13ecf8 'y$r_buff0_thd3' '_Bool'
|   |         |   `-UnaryOperator 0x5578bb1453f0 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x5578bb1453d8 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x5578bb1453b8 <col:131> '_Bool' lvalue Var 0x5578bb13eed8 'y$r_buff1_thd3' '_Bool'
|   |         |-ImplicitCastExpr 0x5578bb145650 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x5578bb145638 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x5578bb145448 <col:148> '_Bool' lvalue Var 0x5578bb13ecf8 'y$r_buff0_thd3' '_Bool'
|   |         `-ParenExpr 0x5578bb145618 <col:165, col:226> 'int'
|   |           `-ConditionalOperator 0x5578bb1455e8 <col:166, col:212> 'int'
|   |             |-BinaryOperator 0x5578bb145508 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x5578bb1454c0 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x5578bb1454a8 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x5578bb145468 <col:166> '_Bool' lvalue Var 0x5578bb13f0c8 'y$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x5578bb1454f0 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x5578bb1454d8 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x5578bb145488 <col:184> '_Bool' lvalue Var 0x5578bb13ecf8 'y$r_buff0_thd3' '_Bool'
|   |             |-ImplicitCastExpr 0x5578bb1455a0 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x5578bb145558 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x5578bb145528 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x5578bb1455d0 <col:212> 'int' <IntegralCast>
|   |               `-ImplicitCastExpr 0x5578bb1455b8 <col:212> '_Bool' <LValueToRValue>
|   |                 `-DeclRefExpr 0x5578bb145580 <col:212> '_Bool' lvalue Var 0x5578bb13ecf8 'y$r_buff0_thd3' '_Bool'
|   |-BinaryOperator 0x5578bb145d40 <line:780:3, col:221> '_Bool' '='
|   | |-DeclRefExpr 0x5578bb145780 <col:3> '_Bool' lvalue Var 0x5578bb13eed8 'y$r_buff1_thd3' '_Bool'
|   | `-ImplicitCastExpr 0x5578bb145d28 <col:20, col:221> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x5578bb145cf8 <col:20, col:221> 'int'
|   |     |-ImplicitCastExpr 0x5578bb145cb0 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x5578bb145c98 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x5578bb1457a0 <col:20> '_Bool' lvalue Var 0x5578bb13f3d0 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x5578bb145ce0 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x5578bb145cc8 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x5578bb1457c0 <col:36> '_Bool' lvalue Var 0x5578bb13eed8 'y$r_buff1_thd3' '_Bool'
|   |     `-ParenExpr 0x5578bb145c78 <col:53, col:221> 'int'
|   |       `-ConditionalOperator 0x5578bb145c48 <col:54, col:220> 'int'
|   |         |-BinaryOperator 0x5578bb1459d0 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x5578bb1458f0 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x5578bb145818 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x5578bb145800 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x5578bb1457e0 <col:55> '_Bool' lvalue Var 0x5578bb13f0c8 'y$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x5578bb1458d0 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x5578bb145868 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x5578bb145850 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x5578bb145830 <col:74> '_Bool' lvalue Var 0x5578bb13ecf8 'y$r_buff0_thd3' '_Bool'
|   |         | |   `-UnaryOperator 0x5578bb1458b8 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x5578bb1458a0 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x5578bb145880 <col:93> '_Bool' lvalue Var 0x5578bb13f1c0 'y$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x5578bb1459b0 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x5578bb145948 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x5578bb145930 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x5578bb145910 <col:112> '_Bool' lvalue Var 0x5578bb13ecf8 'y$r_buff0_thd3' '_Bool'
|   |         |   `-UnaryOperator 0x5578bb145998 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x5578bb145980 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x5578bb145960 <col:131> '_Bool' lvalue Var 0x5578bb13eed8 'y$r_buff1_thd3' '_Bool'
|   |         |-ImplicitCastExpr 0x5578bb145c30 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x5578bb145c18 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x5578bb1459f0 <col:148> '_Bool' lvalue Var 0x5578bb13eed8 'y$r_buff1_thd3' '_Bool'
|   |         `-ParenExpr 0x5578bb145bf8 <col:165, col:220> 'int'
|   |           `-ConditionalOperator 0x5578bb145bc8 <col:166, col:219> 'int'
|   |             |-BinaryOperator 0x5578bb145ab0 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x5578bb145a68 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x5578bb145a50 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x5578bb145a10 <col:166> '_Bool' lvalue Var 0x5578bb13f0c8 'y$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x5578bb145a98 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x5578bb145a80 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x5578bb145a30 <col:184> '_Bool' lvalue Var 0x5578bb13ecf8 'y$r_buff0_thd3' '_Bool'
|   |             |-ImplicitCastExpr 0x5578bb145b98 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x5578bb145b00 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x5578bb145ad0 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x5578bb145bb0 <col:212, col:219> 'int' <IntegralCast>
|   |               `-CStyleCastExpr 0x5578bb145b70 <col:212, col:219> '_Bool' <IntegralToBoolean>
|   |                 `-IntegerLiteral 0x5578bb145b28 <col:219> 'int' 0
|   |-BinaryOperator 0x5578bb145db8 <line:781:3, col:25> 'int' '='
|   | |-DeclRefExpr 0x5578bb145d60 <col:3> 'int' lvalue Var 0x5578bb13e5a0 '__unbuffered_p2_EAX' 'int'
|   | `-ImplicitCastExpr 0x5578bb145da0 <col:25> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x5578bb145d80 <col:25> 'int' lvalue Var 0x5578bb13e9f0 'y' 'int'
|   |-BinaryOperator 0x5578bb145ee8 <line:782:3, col:37> 'int' '='
|   | |-DeclRefExpr 0x5578bb145dd8 <col:3> 'int' lvalue Var 0x5578bb13e9f0 'y' 'int'
|   | `-ConditionalOperator 0x5578bb145eb8 <col:7, col:37> 'int'
|   |   |-ImplicitCastExpr 0x5578bb145e70 <col:7> 'int' <IntegralCast>
|   |   | `-ImplicitCastExpr 0x5578bb145e58 <col:7> '_Bool' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x5578bb145df8 <col:7> '_Bool' lvalue Var 0x5578bb13ea88 'y$flush_delayed' '_Bool'
|   |   |-ImplicitCastExpr 0x5578bb145e88 <col:25> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x5578bb145e18 <col:25> 'int' lvalue Var 0x5578bb13eb18 'y$mem_tmp' 'int'
|   |   `-ImplicitCastExpr 0x5578bb145ea0 <col:37> 'int' <LValueToRValue>
|   |     `-DeclRefExpr 0x5578bb145e38 <col:37> 'int' lvalue Var 0x5578bb13e9f0 'y' 'int'
|   |-BinaryOperator 0x5578bb145f80 <line:783:3, col:28> '_Bool' '='
|   | |-DeclRefExpr 0x5578bb145f08 <col:3> '_Bool' lvalue Var 0x5578bb13ea88 'y$flush_delayed' '_Bool'
|   | `-CStyleCastExpr 0x5578bb145f58 <col:21, col:28> '_Bool' <IntegralToBoolean>
|   |   `-IntegerLiteral 0x5578bb145f28 <col:28> 'int' 0
|   |-CallExpr 0x5578bb145fd8 <line:784:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x5578bb145fc0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5578bb145fa0 <col:3> 'void ()' Function 0x5578bb0e4f00 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x5578bb146030 <line:785:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x5578bb146018 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5578bb145ff8 <col:3> 'void ()' Function 0x5578bb0e4e40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x5578bb1460a8 <line:786:3, col:25> 'int' '='
|   | |-DeclRefExpr 0x5578bb146050 <col:3> 'int' lvalue Var 0x5578bb13e6c0 '__unbuffered_p2_EBX' 'int'
|   | `-ImplicitCastExpr 0x5578bb146090 <col:25> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x5578bb146070 <col:25> 'int' lvalue Var 0x5578bb13f2c0 'z' 'int'
|   |-CallExpr 0x5578bb146100 <line:787:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x5578bb1460e8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5578bb1460c8 <col:3> 'void ()' Function 0x5578bb0e4f00 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x5578bb146158 <line:788:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x5578bb146140 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5578bb146120 <col:3> 'void ()' Function 0x5578bb0e4e40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x5578bb146440 <line:789:3, col:103> 'int' '='
|   | |-DeclRefExpr 0x5578bb146178 <col:3> 'int' lvalue Var 0x5578bb13e9f0 'y' 'int'
|   | `-ConditionalOperator 0x5578bb146410 <col:7, col:103> 'int'
|   |   |-BinaryOperator 0x5578bb146238 <col:7, col:25> 'int' '&&'
|   |   | |-ImplicitCastExpr 0x5578bb1461f0 <col:7> 'int' <IntegralCast>
|   |   | | `-ImplicitCastExpr 0x5578bb1461d8 <col:7> '_Bool' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x5578bb146198 <col:7> '_Bool' lvalue Var 0x5578bb13f0c8 'y$w_buff0_used' '_Bool'
|   |   | `-ImplicitCastExpr 0x5578bb146220 <col:25> 'int' <IntegralCast>
|   |   |   `-ImplicitCastExpr 0x5578bb146208 <col:25> '_Bool' <LValueToRValue>
|   |   |     `-DeclRefExpr 0x5578bb1461b8 <col:25> '_Bool' lvalue Var 0x5578bb13ecf8 'y$r_buff0_thd3' '_Bool'
|   |   |-ImplicitCastExpr 0x5578bb1463f8 <col:42> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x5578bb146258 <col:42> 'int' lvalue Var 0x5578bb13f050 'y$w_buff0' 'int'
|   |   `-ParenExpr 0x5578bb1463d8 <col:54, col:103> 'int'
|   |     `-ConditionalOperator 0x5578bb1463a8 <col:55, col:102> 'int'
|   |       |-BinaryOperator 0x5578bb146318 <col:55, col:73> 'int' '&&'
|   |       | |-ImplicitCastExpr 0x5578bb1462d0 <col:55> 'int' <IntegralCast>
|   |       | | `-ImplicitCastExpr 0x5578bb1462b8 <col:55> '_Bool' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x5578bb146278 <col:55> '_Bool' lvalue Var 0x5578bb13f1c0 'y$w_buff1_used' '_Bool'
|   |       | `-ImplicitCastExpr 0x5578bb146300 <col:73> 'int' <IntegralCast>
|   |       |   `-ImplicitCastExpr 0x5578bb1462e8 <col:73> '_Bool' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x5578bb146298 <col:73> '_Bool' lvalue Var 0x5578bb13eed8 'y$r_buff1_thd3' '_Bool'
|   |       |-ImplicitCastExpr 0x5578bb146378 <col:90> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x5578bb146338 <col:90> 'int' lvalue Var 0x5578bb13f148 'y$w_buff1' 'int'
|   |       `-ImplicitCastExpr 0x5578bb146390 <col:102> 'int' <LValueToRValue>
|   |         `-DeclRefExpr 0x5578bb146358 <col:102> 'int' lvalue Var 0x5578bb13e9f0 'y' 'int'
|   |-BinaryOperator 0x5578bb146648 <line:790:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x5578bb146460 <col:3> '_Bool' lvalue Var 0x5578bb13f0c8 'y$w_buff0_used' '_Bool'
|   | `-ImplicitCastExpr 0x5578bb146630 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x5578bb146600 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x5578bb146520 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x5578bb1464d8 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x5578bb1464c0 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x5578bb146480 <col:20> '_Bool' lvalue Var 0x5578bb13f0c8 'y$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x5578bb146508 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x5578bb1464f0 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x5578bb1464a0 <col:38> '_Bool' lvalue Var 0x5578bb13ecf8 'y$r_buff0_thd3' '_Bool'
|   |     |-ImplicitCastExpr 0x5578bb1465b8 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x5578bb146570 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x5578bb146540 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x5578bb1465e8 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x5578bb1465d0 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x5578bb146598 <col:66> '_Bool' lvalue Var 0x5578bb13f0c8 'y$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x5578bb146930 <line:791:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x5578bb146668 <col:3> '_Bool' lvalue Var 0x5578bb13f1c0 'y$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x5578bb146918 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x5578bb1468e8 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x5578bb146808 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x5578bb146728 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x5578bb1466e0 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x5578bb1466c8 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x5578bb146688 <col:20> '_Bool' lvalue Var 0x5578bb13f0c8 'y$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x5578bb146710 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x5578bb1466f8 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x5578bb1466a8 <col:38> '_Bool' lvalue Var 0x5578bb13ecf8 'y$r_buff0_thd3' '_Bool'
|   |     | `-BinaryOperator 0x5578bb1467e8 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x5578bb1467a0 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x5578bb146788 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x5578bb146748 <col:56> '_Bool' lvalue Var 0x5578bb13f1c0 'y$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x5578bb1467d0 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x5578bb1467b8 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x5578bb146768 <col:74> '_Bool' lvalue Var 0x5578bb13eed8 'y$r_buff1_thd3' '_Bool'
|   |     |-ImplicitCastExpr 0x5578bb1468a0 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x5578bb146858 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x5578bb146828 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x5578bb1468d0 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x5578bb1468b8 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x5578bb146880 <col:102> '_Bool' lvalue Var 0x5578bb13f1c0 'y$w_buff1_used' '_Bool'
|   |-BinaryOperator 0x5578bb146b38 <line:792:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x5578bb146950 <col:3> '_Bool' lvalue Var 0x5578bb13ecf8 'y$r_buff0_thd3' '_Bool'
|   | `-ImplicitCastExpr 0x5578bb146b20 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x5578bb146af0 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x5578bb146a10 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x5578bb1469c8 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x5578bb1469b0 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x5578bb146970 <col:20> '_Bool' lvalue Var 0x5578bb13f0c8 'y$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x5578bb1469f8 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x5578bb1469e0 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x5578bb146990 <col:38> '_Bool' lvalue Var 0x5578bb13ecf8 'y$r_buff0_thd3' '_Bool'
|   |     |-ImplicitCastExpr 0x5578bb146aa8 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x5578bb146a60 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x5578bb146a30 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x5578bb146ad8 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x5578bb146ac0 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x5578bb146a88 <col:66> '_Bool' lvalue Var 0x5578bb13ecf8 'y$r_buff0_thd3' '_Bool'
|   |-BinaryOperator 0x5578bb146e48 <line:793:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x5578bb146b80 <col:3> '_Bool' lvalue Var 0x5578bb13eed8 'y$r_buff1_thd3' '_Bool'
|   | `-ImplicitCastExpr 0x5578bb146e30 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x5578bb146e00 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x5578bb146d20 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x5578bb146c40 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x5578bb146bf8 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x5578bb146be0 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x5578bb146ba0 <col:20> '_Bool' lvalue Var 0x5578bb13f0c8 'y$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x5578bb146c28 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x5578bb146c10 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x5578bb146bc0 <col:38> '_Bool' lvalue Var 0x5578bb13ecf8 'y$r_buff0_thd3' '_Bool'
|   |     | `-BinaryOperator 0x5578bb146d00 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x5578bb146cb8 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x5578bb146ca0 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x5578bb146c60 <col:56> '_Bool' lvalue Var 0x5578bb13f1c0 'y$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x5578bb146ce8 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x5578bb146cd0 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x5578bb146c80 <col:74> '_Bool' lvalue Var 0x5578bb13eed8 'y$r_buff1_thd3' '_Bool'
|   |     |-ImplicitCastExpr 0x5578bb146db8 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x5578bb146d70 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x5578bb146d40 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x5578bb146de8 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x5578bb146dd0 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x5578bb146d98 <col:102> '_Bool' lvalue Var 0x5578bb13eed8 'y$r_buff1_thd3' '_Bool'
|   |-CallExpr 0x5578bb146ea0 <line:794:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x5578bb146e88 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5578bb146e68 <col:3> 'void ()' Function 0x5578bb0e4f00 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x5578bb146ef8 <line:795:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x5578bb146ee0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5578bb146ec0 <col:3> 'void ()' Function 0x5578bb0e4e40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x5578bb146fb0 <line:796:3, col:41> 'int' '='
|   | |-DeclRefExpr 0x5578bb146f18 <col:3> 'int' lvalue Var 0x5578bb13e120 '__unbuffered_cnt' 'int'
|   | `-BinaryOperator 0x5578bb146f90 <col:22, col:41> 'int' '+'
|   |   |-ImplicitCastExpr 0x5578bb146f78 <col:22> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x5578bb146f38 <col:22> 'int' lvalue Var 0x5578bb13e120 '__unbuffered_cnt' 'int'
|   |   `-IntegerLiteral 0x5578bb146f58 <col:41> 'int' 1
|   |-CallExpr 0x5578bb147008 <line:797:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x5578bb146ff0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5578bb146fd0 <col:3> 'void ()' Function 0x5578bb0e4f00 '__VERIFIER_atomic_end' 'void ()'
|   `-ReturnStmt 0x5578bb147080 <line:798:3, col:36>
|     `-CallExpr 0x5578bb147060 <col:10, col:36> 'void *'
|       `-ImplicitCastExpr 0x5578bb147048 <col:10> 'void *(*)(void)' <FunctionToPointerDecay>
|         `-DeclRefExpr 0x5578bb147028 <col:10> 'void *(void)' Function 0x5578bb0e4958 '__VERIFIER_nondet_pointer' 'void *(void)'
|-FunctionDecl 0x5578bb147210 prev 0x5578bb13de68 <line:800:1, line:802:1> line:800:6 fence 'void ()'
| `-CompoundStmt 0x5578bb1472b0 <line:801:1, line:802:1>
|-FunctionDecl 0x5578bb1472e0 prev 0x5578bb13df28 <line:803:1, line:805:1> line:803:6 isync 'void ()'
| `-CompoundStmt 0x5578bb147380 <line:804:1, line:805:1>
|-FunctionDecl 0x5578bb1473b0 prev 0x5578bb13dfe8 <line:806:1, line:808:1> line:806:6 lwfence 'void ()'
| `-CompoundStmt 0x5578bb147450 <line:807:1, line:808:1>
`-FunctionDecl 0x5578bb1474b8 <line:809:1, line:833:1> line:809:5 main 'int ()'
  `-CompoundStmt 0x5578bb149258 <line:810:1, line:833:1>
    |-DeclStmt 0x5578bb1475d0 <line:811:3, col:16>
    | `-VarDecl 0x5578bb147568 <col:3, col:13> col:13 used t88 'pthread_t':'unsigned long'
    |-CallExpr 0x5578bb1477d8 <line:812:3, col:52> 'int'
    | |-ImplicitCastExpr 0x5578bb1477c0 <col:3> 'int (*)(pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x5578bb1475e8 <col:3> 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' Function 0x5578bb125488 'pthread_create' 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)'
    | |-UnaryOperator 0x5578bb147628 <col:18, col:19> 'pthread_t *' prefix '&' cannot overflow
    | | `-DeclRefExpr 0x5578bb147608 <col:19> 'pthread_t':'unsigned long' lvalue Var 0x5578bb147568 't88' 'pthread_t':'unsigned long'
    | |-ImplicitCastExpr 0x5578bb147818 <col:24, col:34> 'const pthread_attr_t *' <NullToPointer>
    | | `-ParenExpr 0x5578bb1476a0 <col:24, col:34> 'void *'
    | |   `-CStyleCastExpr 0x5578bb147678 <col:25, col:33> 'void *' <NullToPointer>
    | |     `-IntegerLiteral 0x5578bb147640 <col:33> 'int' 0
    | |-ImplicitCastExpr 0x5578bb147830 <col:37> 'void *(*)(void *)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x5578bb1476c0 <col:37> 'void *(void *)' Function 0x5578bb13f4e8 'P0' 'void *(void *)'
    | `-ParenExpr 0x5578bb147740 <col:41, col:51> 'void *'
    |   `-CStyleCastExpr 0x5578bb147718 <col:42, col:50> 'void *' <NullToPointer>
    |     `-IntegerLiteral 0x5578bb1476e0 <col:50> 'int' 0
    |-DeclStmt 0x5578bb1478c0 <line:813:3, col:16>
    | `-VarDecl 0x5578bb147858 <col:3, col:13> col:13 used t89 'pthread_t':'unsigned long'
    |-CallExpr 0x5578bb147a68 <line:814:3, col:52> 'int'
    | |-ImplicitCastExpr 0x5578bb147a50 <col:3> 'int (*)(pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x5578bb1478d8 <col:3> 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' Function 0x5578bb125488 'pthread_create' 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)'
    | |-UnaryOperator 0x5578bb147918 <col:18, col:19> 'pthread_t *' prefix '&' cannot overflow
    | | `-DeclRefExpr 0x5578bb1478f8 <col:19> 'pthread_t':'unsigned long' lvalue Var 0x5578bb147858 't89' 'pthread_t':'unsigned long'
    | |-ImplicitCastExpr 0x5578bb147aa8 <col:24, col:34> 'const pthread_attr_t *' <NullToPointer>
    | | `-ParenExpr 0x5578bb147990 <col:24, col:34> 'void *'
    | |   `-CStyleCastExpr 0x5578bb147968 <col:25, col:33> 'void *' <NullToPointer>
    | |     `-IntegerLiteral 0x5578bb147930 <col:33> 'int' 0
    | |-ImplicitCastExpr 0x5578bb147ac0 <col:37> 'void *(*)(void *)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x5578bb1479b0 <col:37> 'void *(void *)' Function 0x5578bb13fc30 'P1' 'void *(void *)'
    | `-ParenExpr 0x5578bb147a30 <col:41, col:51> 'void *'
    |   `-CStyleCastExpr 0x5578bb147a08 <col:42, col:50> 'void *' <NullToPointer>
    |     `-IntegerLiteral 0x5578bb1479d0 <col:50> 'int' 0
    |-DeclStmt 0x5578bb147b50 <line:815:3, col:16>
    | `-VarDecl 0x5578bb147ae8 <col:3, col:13> col:13 used t90 'pthread_t':'unsigned long'
    |-CallExpr 0x5578bb147d20 <line:816:3, col:52> 'int'
    | |-ImplicitCastExpr 0x5578bb147d08 <col:3> 'int (*)(pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x5578bb147b90 <col:3> 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' Function 0x5578bb125488 'pthread_create' 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)'
    | |-UnaryOperator 0x5578bb147bd0 <col:18, col:19> 'pthread_t *' prefix '&' cannot overflow
    | | `-DeclRefExpr 0x5578bb147bb0 <col:19> 'pthread_t':'unsigned long' lvalue Var 0x5578bb147ae8 't90' 'pthread_t':'unsigned long'
    | |-ImplicitCastExpr 0x5578bb147d60 <col:24, col:34> 'const pthread_attr_t *' <NullToPointer>
    | | `-ParenExpr 0x5578bb147c48 <col:24, col:34> 'void *'
    | |   `-CStyleCastExpr 0x5578bb147c20 <col:25, col:33> 'void *' <NullToPointer>
    | |     `-IntegerLiteral 0x5578bb147be8 <col:33> 'int' 0
    | |-ImplicitCastExpr 0x5578bb147d78 <col:37> 'void *(*)(void *)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x5578bb147c68 <col:37> 'void *(void *)' Function 0x5578bb142df8 'P2' 'void *(void *)'
    | `-ParenExpr 0x5578bb147ce8 <col:41, col:51> 'void *'
    |   `-CStyleCastExpr 0x5578bb147cc0 <col:42, col:50> 'void *' <NullToPointer>
    |     `-IntegerLiteral 0x5578bb147c88 <col:50> 'int' 0
    |-CallExpr 0x5578bb147dc8 <line:817:3, col:27> 'void'
    | `-ImplicitCastExpr 0x5578bb147db0 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x5578bb147d90 <col:3> 'void ()' Function 0x5578bb0e4e40 '__VERIFIER_atomic_begin' 'void ()'
    |-BinaryOperator 0x5578bb147e98 <line:818:3, col:41> '_Bool' '='
    | |-DeclRefExpr 0x5578bb147de8 <col:3> '_Bool' lvalue Var 0x5578bb13e758 'main$tmp_guard0' '_Bool'
    | `-ImplicitCastExpr 0x5578bb147e80 <col:21, col:41> '_Bool' <IntegralToBoolean>
    |   `-BinaryOperator 0x5578bb147e60 <col:21, col:41> 'int' '=='
    |     |-ImplicitCastExpr 0x5578bb147e48 <col:21> 'int' <LValueToRValue>
    |     | `-DeclRefExpr 0x5578bb147e08 <col:21> 'int' lvalue Var 0x5578bb13e120 '__unbuffered_cnt' 'int'
    |     `-IntegerLiteral 0x5578bb147e28 <col:41> 'int' 3
    |-CallExpr 0x5578bb147ef0 <line:819:3, col:25> 'void'
    | `-ImplicitCastExpr 0x5578bb147ed8 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x5578bb147eb8 <col:3> 'void ()' Function 0x5578bb0e4f00 '__VERIFIER_atomic_end' 'void ()'
    |-CallExpr 0x5578bb147f68 <line:820:3, col:36> 'void'
    | |-ImplicitCastExpr 0x5578bb147f50 <col:3> 'void (*)(int)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x5578bb147f10 <col:3> 'void (int)' Function 0x5578bb0e4790 '__VERIFIER_assume' 'void (int)'
    | `-ImplicitCastExpr 0x5578bb147fa8 <col:21> 'int' <IntegralCast>
    |   `-ImplicitCastExpr 0x5578bb147f90 <col:21> '_Bool' <LValueToRValue>
    |     `-DeclRefExpr 0x5578bb147f30 <col:21> '_Bool' lvalue Var 0x5578bb13e758 'main$tmp_guard0' '_Bool'
    |-CallExpr 0x5578bb147ff8 <line:821:3, col:27> 'void'
    | `-ImplicitCastExpr 0x5578bb147fe0 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x5578bb147fc0 <col:3> 'void ()' Function 0x5578bb0e4e40 '__VERIFIER_atomic_begin' 'void ()'
    |-BinaryOperator 0x5578bb1482e0 <line:822:3, col:103> 'int' '='
    | |-DeclRefExpr 0x5578bb148018 <col:3> 'int' lvalue Var 0x5578bb13e9f0 'y' 'int'
    | `-ConditionalOperator 0x5578bb1482b0 <col:7, col:103> 'int'
    |   |-BinaryOperator 0x5578bb1480d8 <col:7, col:25> 'int' '&&'
    |   | |-ImplicitCastExpr 0x5578bb148090 <col:7> 'int' <IntegralCast>
    |   | | `-ImplicitCastExpr 0x5578bb148078 <col:7> '_Bool' <LValueToRValue>
    |   | |   `-DeclRefExpr 0x5578bb148038 <col:7> '_Bool' lvalue Var 0x5578bb13f0c8 'y$w_buff0_used' '_Bool'
    |   | `-ImplicitCastExpr 0x5578bb1480c0 <col:25> 'int' <IntegralCast>
    |   |   `-ImplicitCastExpr 0x5578bb1480a8 <col:25> '_Bool' <LValueToRValue>
    |   |     `-DeclRefExpr 0x5578bb148058 <col:25> '_Bool' lvalue Var 0x5578bb13eb90 'y$r_buff0_thd0' '_Bool'
    |   |-ImplicitCastExpr 0x5578bb148298 <col:42> 'int' <LValueToRValue>
    |   | `-DeclRefExpr 0x5578bb1480f8 <col:42> 'int' lvalue Var 0x5578bb13f050 'y$w_buff0' 'int'
    |   `-ParenExpr 0x5578bb148278 <col:54, col:103> 'int'
    |     `-ConditionalOperator 0x5578bb148248 <col:55, col:102> 'int'
    |       |-BinaryOperator 0x5578bb1481b8 <col:55, col:73> 'int' '&&'
    |       | |-ImplicitCastExpr 0x5578bb148170 <col:55> 'int' <IntegralCast>
    |       | | `-ImplicitCastExpr 0x5578bb148158 <col:55> '_Bool' <LValueToRValue>
    |       | |   `-DeclRefExpr 0x5578bb148118 <col:55> '_Bool' lvalue Var 0x5578bb13f1c0 'y$w_buff1_used' '_Bool'
    |       | `-ImplicitCastExpr 0x5578bb1481a0 <col:73> 'int' <IntegralCast>
    |       |   `-ImplicitCastExpr 0x5578bb148188 <col:73> '_Bool' <LValueToRValue>
    |       |     `-DeclRefExpr 0x5578bb148138 <col:73> '_Bool' lvalue Var 0x5578bb13ed70 'y$r_buff1_thd0' '_Bool'
    |       |-ImplicitCastExpr 0x5578bb148218 <col:90> 'int' <LValueToRValue>
    |       | `-DeclRefExpr 0x5578bb1481d8 <col:90> 'int' lvalue Var 0x5578bb13f148 'y$w_buff1' 'int'
    |       `-ImplicitCastExpr 0x5578bb148230 <col:102> 'int' <LValueToRValue>
    |         `-DeclRefExpr 0x5578bb1481f8 <col:102> 'int' lvalue Var 0x5578bb13e9f0 'y' 'int'
    |-BinaryOperator 0x5578bb1484e8 <line:823:3, col:66> '_Bool' '='
    | |-DeclRefExpr 0x5578bb148300 <col:3> '_Bool' lvalue Var 0x5578bb13f0c8 'y$w_buff0_used' '_Bool'
    | `-ImplicitCastExpr 0x5578bb1484d0 <col:20, col:66> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x5578bb1484a0 <col:20, col:66> 'int'
    |     |-BinaryOperator 0x5578bb1483c0 <col:20, col:38> 'int' '&&'
    |     | |-ImplicitCastExpr 0x5578bb148378 <col:20> 'int' <IntegralCast>
    |     | | `-ImplicitCastExpr 0x5578bb148360 <col:20> '_Bool' <LValueToRValue>
    |     | |   `-DeclRefExpr 0x5578bb148320 <col:20> '_Bool' lvalue Var 0x5578bb13f0c8 'y$w_buff0_used' '_Bool'
    |     | `-ImplicitCastExpr 0x5578bb1483a8 <col:38> 'int' <IntegralCast>
    |     |   `-ImplicitCastExpr 0x5578bb148390 <col:38> '_Bool' <LValueToRValue>
    |     |     `-DeclRefExpr 0x5578bb148340 <col:38> '_Bool' lvalue Var 0x5578bb13eb90 'y$r_buff0_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x5578bb148458 <col:55, col:62> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x5578bb148410 <col:55, col:62> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x5578bb1483e0 <col:62> 'int' 0
    |     `-ImplicitCastExpr 0x5578bb148488 <col:66> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x5578bb148470 <col:66> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x5578bb148438 <col:66> '_Bool' lvalue Var 0x5578bb13f0c8 'y$w_buff0_used' '_Bool'
    |-BinaryOperator 0x5578bb1487d0 <line:824:3, col:102> '_Bool' '='
    | |-DeclRefExpr 0x5578bb148508 <col:3> '_Bool' lvalue Var 0x5578bb13f1c0 'y$w_buff1_used' '_Bool'
    | `-ImplicitCastExpr 0x5578bb1487b8 <col:20, col:102> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x5578bb148788 <col:20, col:102> 'int'
    |     |-BinaryOperator 0x5578bb1486a8 <col:20, col:74> 'int' '||'
    |     | |-BinaryOperator 0x5578bb1485c8 <col:20, col:38> 'int' '&&'
    |     | | |-ImplicitCastExpr 0x5578bb148580 <col:20> 'int' <IntegralCast>
    |     | | | `-ImplicitCastExpr 0x5578bb148568 <col:20> '_Bool' <LValueToRValue>
    |     | | |   `-DeclRefExpr 0x5578bb148528 <col:20> '_Bool' lvalue Var 0x5578bb13f0c8 'y$w_buff0_used' '_Bool'
    |     | | `-ImplicitCastExpr 0x5578bb1485b0 <col:38> 'int' <IntegralCast>
    |     | |   `-ImplicitCastExpr 0x5578bb148598 <col:38> '_Bool' <LValueToRValue>
    |     | |     `-DeclRefExpr 0x5578bb148548 <col:38> '_Bool' lvalue Var 0x5578bb13eb90 'y$r_buff0_thd0' '_Bool'
    |     | `-BinaryOperator 0x5578bb148688 <col:56, col:74> 'int' '&&'
    |     |   |-ImplicitCastExpr 0x5578bb148640 <col:56> 'int' <IntegralCast>
    |     |   | `-ImplicitCastExpr 0x5578bb148628 <col:56> '_Bool' <LValueToRValue>
    |     |   |   `-DeclRefExpr 0x5578bb1485e8 <col:56> '_Bool' lvalue Var 0x5578bb13f1c0 'y$w_buff1_used' '_Bool'
    |     |   `-ImplicitCastExpr 0x5578bb148670 <col:74> 'int' <IntegralCast>
    |     |     `-ImplicitCastExpr 0x5578bb148658 <col:74> '_Bool' <LValueToRValue>
    |     |       `-DeclRefExpr 0x5578bb148608 <col:74> '_Bool' lvalue Var 0x5578bb13ed70 'y$r_buff1_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x5578bb148740 <col:91, col:98> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x5578bb1486f8 <col:91, col:98> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x5578bb1486c8 <col:98> 'int' 0
    |     `-ImplicitCastExpr 0x5578bb148770 <col:102> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x5578bb148758 <col:102> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x5578bb148720 <col:102> '_Bool' lvalue Var 0x5578bb13f1c0 'y$w_buff1_used' '_Bool'
    |-BinaryOperator 0x5578bb1489d8 <line:825:3, col:66> '_Bool' '='
    | |-DeclRefExpr 0x5578bb1487f0 <col:3> '_Bool' lvalue Var 0x5578bb13eb90 'y$r_buff0_thd0' '_Bool'
    | `-ImplicitCastExpr 0x5578bb1489c0 <col:20, col:66> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x5578bb148990 <col:20, col:66> 'int'
    |     |-BinaryOperator 0x5578bb1488b0 <col:20, col:38> 'int' '&&'
    |     | |-ImplicitCastExpr 0x5578bb148868 <col:20> 'int' <IntegralCast>
    |     | | `-ImplicitCastExpr 0x5578bb148850 <col:20> '_Bool' <LValueToRValue>
    |     | |   `-DeclRefExpr 0x5578bb148810 <col:20> '_Bool' lvalue Var 0x5578bb13f0c8 'y$w_buff0_used' '_Bool'
    |     | `-ImplicitCastExpr 0x5578bb148898 <col:38> 'int' <IntegralCast>
    |     |   `-ImplicitCastExpr 0x5578bb148880 <col:38> '_Bool' <LValueToRValue>
    |     |     `-DeclRefExpr 0x5578bb148830 <col:38> '_Bool' lvalue Var 0x5578bb13eb90 'y$r_buff0_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x5578bb148948 <col:55, col:62> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x5578bb148900 <col:55, col:62> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x5578bb1488d0 <col:62> 'int' 0
    |     `-ImplicitCastExpr 0x5578bb148978 <col:66> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x5578bb148960 <col:66> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x5578bb148928 <col:66> '_Bool' lvalue Var 0x5578bb13eb90 'y$r_buff0_thd0' '_Bool'
    |-BinaryOperator 0x5578bb148ce8 <line:826:3, col:102> '_Bool' '='
    | |-DeclRefExpr 0x5578bb1489f8 <col:3> '_Bool' lvalue Var 0x5578bb13ed70 'y$r_buff1_thd0' '_Bool'
    | `-ImplicitCastExpr 0x5578bb148cd0 <col:20, col:102> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x5578bb148ca0 <col:20, col:102> 'int'
    |     |-BinaryOperator 0x5578bb148bc0 <col:20, col:74> 'int' '||'
    |     | |-BinaryOperator 0x5578bb148ab8 <col:20, col:38> 'int' '&&'
    |     | | |-ImplicitCastExpr 0x5578bb148a70 <col:20> 'int' <IntegralCast>
    |     | | | `-ImplicitCastExpr 0x5578bb148a58 <col:20> '_Bool' <LValueToRValue>
    |     | | |   `-DeclRefExpr 0x5578bb148a18 <col:20> '_Bool' lvalue Var 0x5578bb13f0c8 'y$w_buff0_used' '_Bool'
    |     | | `-ImplicitCastExpr 0x5578bb148aa0 <col:38> 'int' <IntegralCast>
    |     | |   `-ImplicitCastExpr 0x5578bb148a88 <col:38> '_Bool' <LValueToRValue>
    |     | |     `-DeclRefExpr 0x5578bb148a38 <col:38> '_Bool' lvalue Var 0x5578bb13eb90 'y$r_buff0_thd0' '_Bool'
    |     | `-BinaryOperator 0x5578bb148ba0 <col:56, col:74> 'int' '&&'
    |     |   |-ImplicitCastExpr 0x5578bb148b30 <col:56> 'int' <IntegralCast>
    |     |   | `-ImplicitCastExpr 0x5578bb148b18 <col:56> '_Bool' <LValueToRValue>
    |     |   |   `-DeclRefExpr 0x5578bb148ad8 <col:56> '_Bool' lvalue Var 0x5578bb13f1c0 'y$w_buff1_used' '_Bool'
    |     |   `-ImplicitCastExpr 0x5578bb148b60 <col:74> 'int' <IntegralCast>
    |     |     `-ImplicitCastExpr 0x5578bb148b48 <col:74> '_Bool' <LValueToRValue>
    |     |       `-DeclRefExpr 0x5578bb148af8 <col:74> '_Bool' lvalue Var 0x5578bb13ed70 'y$r_buff1_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x5578bb148c58 <col:91, col:98> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x5578bb148c10 <col:91, col:98> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x5578bb148be0 <col:98> 'int' 0
    |     `-ImplicitCastExpr 0x5578bb148c88 <col:102> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x5578bb148c70 <col:102> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x5578bb148c38 <col:102> '_Bool' lvalue Var 0x5578bb13ed70 'y$r_buff1_thd0' '_Bool'
    |-CallExpr 0x5578bb148d40 <line:827:3, col:25> 'void'
    | `-ImplicitCastExpr 0x5578bb148d28 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x5578bb148d08 <col:3> 'void ()' Function 0x5578bb0e4f00 '__VERIFIER_atomic_end' 'void ()'
    |-CallExpr 0x5578bb148d98 <line:828:3, col:27> 'void'
    | `-ImplicitCastExpr 0x5578bb148d80 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x5578bb148d60 <col:3> 'void ()' Function 0x5578bb0e4e40 '__VERIFIER_atomic_begin' 'void ()'
    |-BinaryOperator 0x5578bb149100 <line:829:3, col:159> '_Bool' '='
    | |-DeclRefExpr 0x5578bb148db8 <col:3> '_Bool' lvalue Var 0x5578bb13e7d0 'main$tmp_guard1' '_Bool'
    | `-ImplicitCastExpr 0x5578bb1490e8 <col:21, col:159> '_Bool' <IntegralToBoolean>
    |   `-UnaryOperator 0x5578bb1490d0 <col:21, col:159> 'int' prefix '!' cannot overflow
    |     `-ParenExpr 0x5578bb1490b0 <col:22, col:159> 'int'
    |       `-BinaryOperator 0x5578bb149090 <col:23, col:158> 'int' '&&'
    |         |-BinaryOperator 0x5578bb148ff8 <col:23, col:130> 'int' '&&'
    |         | |-BinaryOperator 0x5578bb148f60 <col:23, col:102> 'int' '&&'
    |         | | |-BinaryOperator 0x5578bb148ec8 <col:23, col:74> 'int' '&&'
    |         | | | |-BinaryOperator 0x5578bb148e30 <col:23, col:46> 'int' '=='
    |         | | | | |-ImplicitCastExpr 0x5578bb148e18 <col:23> 'int' <LValueToRValue>
    |         | | | | | `-DeclRefExpr 0x5578bb148dd8 <col:23> 'int' lvalue Var 0x5578bb13e240 '__unbuffered_p0_EAX' 'int'
    |         | | | | `-IntegerLiteral 0x5578bb148df8 <col:46> 'int' 0
    |         | | | `-BinaryOperator 0x5578bb148ea8 <col:51, col:74> 'int' '=='
    |         | | |   |-ImplicitCastExpr 0x5578bb148e90 <col:51> 'int' <LValueToRValue>
    |         | | |   | `-DeclRefExpr 0x5578bb148e50 <col:51> 'int' lvalue Var 0x5578bb13e360 '__unbuffered_p1_EAX' 'int'
    |         | | |   `-IntegerLiteral 0x5578bb148e70 <col:74> 'int' 1
    |         | | `-BinaryOperator 0x5578bb148f40 <col:79, col:102> 'int' '=='
    |         | |   |-ImplicitCastExpr 0x5578bb148f28 <col:79> 'int' <LValueToRValue>
    |         | |   | `-DeclRefExpr 0x5578bb148ee8 <col:79> 'int' lvalue Var 0x5578bb13e480 '__unbuffered_p1_EBX' 'int'
    |         | |   `-IntegerLiteral 0x5578bb148f08 <col:102> 'int' 0
    |         | `-BinaryOperator 0x5578bb148fd8 <col:107, col:130> 'int' '=='
    |         |   |-ImplicitCastExpr 0x5578bb148fc0 <col:107> 'int' <LValueToRValue>
    |         |   | `-DeclRefExpr 0x5578bb148f80 <col:107> 'int' lvalue Var 0x5578bb13e5a0 '__unbuffered_p2_EAX' 'int'
    |         |   `-IntegerLiteral 0x5578bb148fa0 <col:130> 'int' 1
    |         `-BinaryOperator 0x5578bb149070 <col:135, col:158> 'int' '=='
    |           |-ImplicitCastExpr 0x5578bb149058 <col:135> 'int' <LValueToRValue>
    |           | `-DeclRefExpr 0x5578bb149018 <col:135> 'int' lvalue Var 0x5578bb13e6c0 '__unbuffered_p2_EBX' 'int'
    |           `-IntegerLiteral 0x5578bb149038 <col:158> 'int' 0
    |-CallExpr 0x5578bb149158 <line:830:3, col:25> 'void'
    | `-ImplicitCastExpr 0x5578bb149140 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x5578bb149120 <col:3> 'void ()' Function 0x5578bb0e4f00 '__VERIFIER_atomic_end' 'void ()'
    |-CallExpr 0x5578bb1491d0 <line:831:3, col:36> 'void'
    | |-ImplicitCastExpr 0x5578bb1491b8 <col:3> 'void (*)(int)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x5578bb149178 <col:3> 'void (int)' Function 0x5578bb0e4bc8 '__VERIFIER_assert' 'void (int)'
    | `-ImplicitCastExpr 0x5578bb149210 <col:21> 'int' <IntegralCast>
    |   `-ImplicitCastExpr 0x5578bb1491f8 <col:21> '_Bool' <LValueToRValue>
    |     `-DeclRefExpr 0x5578bb149198 <col:21> '_Bool' lvalue Var 0x5578bb13e7d0 'main$tmp_guard1' '_Bool'
    `-ReturnStmt 0x5578bb149248 <line:832:3, col:10>
      `-IntegerLiteral 0x5578bb149228 <col:10> 'int' 0
