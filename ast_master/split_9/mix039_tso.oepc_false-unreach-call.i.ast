TranslationUnitDecl 0x559bb17dde18 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x559bb17de6d8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x559bb17de3b0 '__int128'
|-TypedefDecl 0x559bb17de748 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x559bb17de3d0 'unsigned __int128'
|-TypedefDecl 0x559bb17dea50 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x559bb17de820 'struct __NSConstantString_tag'
|   `-Record 0x559bb17de7a0 '__NSConstantString_tag'
|-TypedefDecl 0x559bb17deaf8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x559bb17deab0 'char *'
|   `-BuiltinType 0x559bb17ddeb0 'char'
|-TypedefDecl 0x559bb181d650 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'struct __va_list_tag [1]'
| `-ConstantArrayType 0x559bb17ded90 'struct __va_list_tag [1]' 1 
|   `-RecordType 0x559bb17debd0 'struct __va_list_tag'
|     `-Record 0x559bb17deb50 '__va_list_tag'
|-FunctionDecl 0x559bb181d790 <./split_9/mix039_tso.oepc_false-unreach-call.i:1:1, col:34> col:13 used __VERIFIER_assume 'void (int)' extern
| `-ParmVarDecl 0x559bb181d6c0 <col:31> col:34 'int'
|-FunctionDecl 0x559bb181d958 <line:2:1, col:45> col:15 used __VERIFIER_nondet_pointer 'void *(void)' extern
|-FunctionDecl 0x559bb181da80 <line:3:1, col:61> col:13 used __VERIFIER_error 'void () __attribute__((noreturn))' extern
|-FunctionDecl 0x559bb181dbc8 <line:4:1, col:99> col:6 used __VERIFIER_assert 'void (int)'
| |-ParmVarDecl 0x559bb181db38 <col:24, col:28> col:28 used expression 'int'
| `-CompoundStmt 0x559bb181ddf8 <col:40, col:99>
|   |-IfStmt 0x559bb181ddc8 <col:42, col:88>
|   | |-UnaryOperator 0x559bb181dca8 <col:46, col:47> 'int' prefix '!' cannot overflow
|   | | `-ImplicitCastExpr 0x559bb181dc90 <col:47> 'int' <LValueToRValue>
|   | |   `-DeclRefExpr 0x559bb181dc70 <col:47> 'int' lvalue ParmVar 0x559bb181db38 'expression' 'int'
|   | `-CompoundStmt 0x559bb181ddb0 <col:59, col:88>
|   |   `-LabelStmt 0x559bb181dd98 <col:61, col:85> 'ERROR'
|   |     `-CallExpr 0x559bb181dd28 <col:68, col:85> 'void'
|   |       `-ImplicitCastExpr 0x559bb181dd10 <col:68> 'void (*)() __attribute__((noreturn))' <FunctionToPointerDecay>
|   |         `-DeclRefExpr 0x559bb181dcc0 <col:68> 'void () __attribute__((noreturn))' Function 0x559bb181da80 '__VERIFIER_error' 'void () __attribute__((noreturn))'
|   |-NullStmt 0x559bb181dde0 <col:89>
|   `-ReturnStmt 0x559bb181dde8 <col:91>
|-FunctionDecl 0x559bb181de40 <line:5:1, col:37> col:13 used __VERIFIER_atomic_begin 'void ()' extern
|-FunctionDecl 0x559bb181df00 <line:6:1, col:35> col:13 used __VERIFIER_atomic_end 'void ()' extern
|-FunctionDecl 0x559bb181e280 <line:8:1, line:10:76> line:8:13 __assert_fail 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x559bb181dfb8 <col:28, col:40> col:40 __assertion 'const char *'
| |-ParmVarDecl 0x559bb181e038 <col:53, col:65> col:65 __file 'const char *'
| |-ParmVarDecl 0x559bb181e0b8 <line:9:7, col:20> col:20 __line 'unsigned int'
| |-ParmVarDecl 0x559bb181e138 <col:28, col:40> col:40 __function 'const char *'
| `-NoThrowAttr 0x559bb181e340 <line:10:22>
|-FunctionDecl 0x559bb1844390 <line:11:1, line:13:76> line:11:13 __assert_perror_fail 'void (int, const char *, unsigned int, const char *) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x559bb181e3b0 <col:35, col:39> col:39 __errnum 'int'
| |-ParmVarDecl 0x559bb181e430 <col:49, col:61> col:61 __file 'const char *'
| |-ParmVarDecl 0x559bb181e4b0 <line:12:7, col:20> col:20 __line 'unsigned int'
| |-ParmVarDecl 0x559bb181e530 <col:28, col:40> col:40 __function 'const char *'
| `-NoThrowAttr 0x559bb1844450 <line:13:22>
|-FunctionDecl 0x559bb1844700 <line:14:1, line:15:76> line:14:13 __assert 'void (const char *, const char *, int) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x559bb18444c0 <col:23, col:35> col:35 __assertion 'const char *'
| |-ParmVarDecl 0x559bb1844540 <col:48, col:60> col:60 __file 'const char *'
| |-ParmVarDecl 0x559bb18445c0 <col:68, col:72> col:72 __line 'int'
| `-NoThrowAttr 0x559bb18447b8 <line:15:22>
|-TypedefDecl 0x559bb1844828 <line:17:1, col:23> col:23 __u_char 'unsigned char'
| `-BuiltinType 0x559bb17ddf70 'unsigned char'
|-TypedefDecl 0x559bb1844898 <line:18:1, col:28> col:28 __u_short 'unsigned short'
| `-BuiltinType 0x559bb17ddf90 'unsigned short'
|-TypedefDecl 0x559bb1844908 <line:19:1, col:22> col:22 __u_int 'unsigned int'
| `-BuiltinType 0x559bb17ddfb0 'unsigned int'
|-TypedefDecl 0x559bb1844978 <line:20:1, col:27> col:27 __u_long 'unsigned long'
| `-BuiltinType 0x559bb17ddfd0 'unsigned long'
|-TypedefDecl 0x559bb18449e8 <line:21:1, col:21> col:21 __int8_t 'signed char'
| `-BuiltinType 0x559bb17dded0 'signed char'
|-TypedefDecl 0x559bb1844a58 <line:22:1, col:23> col:23 __uint8_t 'unsigned char'
| `-BuiltinType 0x559bb17ddf70 'unsigned char'
|-TypedefDecl 0x559bb1844ac8 <line:23:1, col:26> col:26 __int16_t 'short'
| `-BuiltinType 0x559bb17ddef0 'short'
|-TypedefDecl 0x559bb1844b38 <line:24:1, col:28> col:28 __uint16_t 'unsigned short'
| `-BuiltinType 0x559bb17ddf90 'unsigned short'
|-TypedefDecl 0x559bb1844ba8 <line:25:1, col:20> col:20 __int32_t 'int'
| `-BuiltinType 0x559bb17ddf10 'int'
|-TypedefDecl 0x559bb1844c18 <line:26:1, col:22> col:22 __uint32_t 'unsigned int'
| `-BuiltinType 0x559bb17ddfb0 'unsigned int'
|-TypedefDecl 0x559bb1844c88 <line:27:1, col:25> col:25 __int64_t 'long'
| `-BuiltinType 0x559bb17ddf30 'long'
|-TypedefDecl 0x559bb1844cf8 <line:28:1, col:27> col:27 referenced __uint64_t 'unsigned long'
| `-BuiltinType 0x559bb17ddfd0 'unsigned long'
|-TypedefDecl 0x559bb1844d68 <line:29:1, col:18> col:18 referenced __quad_t 'long'
| `-BuiltinType 0x559bb17ddf30 'long'
|-TypedefDecl 0x559bb1844dd8 <line:30:1, col:27> col:27 __u_quad_t 'unsigned long'
| `-BuiltinType 0x559bb17ddfd0 'unsigned long'
|-TypedefDecl 0x559bb1844e48 <line:31:1, col:27> col:27 __dev_t 'unsigned long'
| `-BuiltinType 0x559bb17ddfd0 'unsigned long'
|-TypedefDecl 0x559bb1844eb8 <line:32:1, col:22> col:22 __uid_t 'unsigned int'
| `-BuiltinType 0x559bb17ddfb0 'unsigned int'
|-TypedefDecl 0x559bb1844f28 <line:33:1, col:22> col:22 __gid_t 'unsigned int'
| `-BuiltinType 0x559bb17ddfb0 'unsigned int'
|-TypedefDecl 0x559bb1844f98 <line:34:1, col:27> col:27 __ino_t 'unsigned long'
| `-BuiltinType 0x559bb17ddfd0 'unsigned long'
|-TypedefDecl 0x559bb1845008 <line:35:1, col:27> col:27 __ino64_t 'unsigned long'
| `-BuiltinType 0x559bb17ddfd0 'unsigned long'
|-TypedefDecl 0x559bb1845078 <line:36:1, col:22> col:22 __mode_t 'unsigned int'
| `-BuiltinType 0x559bb17ddfb0 'unsigned int'
|-TypedefDecl 0x559bb18450e8 <line:37:1, col:27> col:27 __nlink_t 'unsigned long'
| `-BuiltinType 0x559bb17ddfd0 'unsigned long'
|-TypedefDecl 0x559bb1845158 <line:38:1, col:18> col:18 __off_t 'long'
| `-BuiltinType 0x559bb17ddf30 'long'
|-TypedefDecl 0x559bb18451c8 <line:39:1, col:18> col:18 referenced __off64_t 'long'
| `-BuiltinType 0x559bb17ddf30 'long'
|-TypedefDecl 0x559bb1845238 <line:40:1, col:13> col:13 referenced __pid_t 'int'
| `-BuiltinType 0x559bb17ddf10 'int'
|-RecordDecl 0x559bb1845290 <line:41:9, col:32> col:9 struct definition
| `-FieldDecl 0x559bb1845408 <col:18, col:29> col:22 __val 'int [2]'
|-TypedefDecl 0x559bb18454c0 <col:1, col:34> col:34 __fsid_t 'struct __fsid_t':'__fsid_t'
| `-ElaboratedType 0x559bb1845460 'struct __fsid_t' sugar
|   `-RecordType 0x559bb1845310 '__fsid_t'
|     `-Record 0x559bb1845290 ''
|-TypedefDecl 0x559bb1845548 <line:42:1, col:18> col:18 referenced __clock_t 'long'
| `-BuiltinType 0x559bb17ddf30 'long'
|-TypedefDecl 0x559bb18455b8 <line:43:1, col:27> col:27 __rlim_t 'unsigned long'
| `-BuiltinType 0x559bb17ddfd0 'unsigned long'
|-TypedefDecl 0x559bb1845628 <line:44:1, col:27> col:27 __rlim64_t 'unsigned long'
| `-BuiltinType 0x559bb17ddfd0 'unsigned long'
|-TypedefDecl 0x559bb1845698 <line:45:1, col:22> col:22 __id_t 'unsigned int'
| `-BuiltinType 0x559bb17ddfb0 'unsigned int'
|-TypedefDecl 0x559bb1845708 <line:46:1, col:18> col:18 referenced __time_t 'long'
| `-BuiltinType 0x559bb17ddf30 'long'
|-TypedefDecl 0x559bb1845778 <line:47:1, col:22> col:22 __useconds_t 'unsigned int'
| `-BuiltinType 0x559bb17ddfb0 'unsigned int'
|-TypedefDecl 0x559bb18457e8 <line:48:1, col:18> col:18 __suseconds_t 'long'
| `-BuiltinType 0x559bb17ddf30 'long'
|-TypedefDecl 0x559bb1845858 <line:49:1, col:13> col:13 __daddr_t 'int'
| `-BuiltinType 0x559bb17ddf10 'int'
|-TypedefDecl 0x559bb18458c8 <line:50:1, col:13> col:13 __key_t 'int'
| `-BuiltinType 0x559bb17ddf10 'int'
|-TypedefDecl 0x559bb1845938 <line:51:1, col:13> col:13 referenced __clockid_t 'int'
| `-BuiltinType 0x559bb17ddf10 'int'
|-TypedefDecl 0x559bb18459a8 <line:52:1, col:16> col:16 referenced __timer_t 'void *'
| `-PointerType 0x559bb17de630 'void *'
|   `-BuiltinType 0x559bb17dde70 'void'
|-TypedefDecl 0x559bb1845a18 <line:53:1, col:18> col:18 __blksize_t 'long'
| `-BuiltinType 0x559bb17ddf30 'long'
|-TypedefDecl 0x559bb1845a88 <line:54:1, col:18> col:18 __blkcnt_t 'long'
| `-BuiltinType 0x559bb17ddf30 'long'
|-TypedefDecl 0x559bb1845af8 <line:55:1, col:18> col:18 __blkcnt64_t 'long'
| `-BuiltinType 0x559bb17ddf30 'long'
|-TypedefDecl 0x559bb1845b68 <line:56:1, col:27> col:27 __fsblkcnt_t 'unsigned long'
| `-BuiltinType 0x559bb17ddfd0 'unsigned long'
|-TypedefDecl 0x559bb1845bd8 <line:57:1, col:27> col:27 __fsblkcnt64_t 'unsigned long'
| `-BuiltinType 0x559bb17ddfd0 'unsigned long'
|-TypedefDecl 0x559bb1845c48 <line:58:1, col:27> col:27 __fsfilcnt_t 'unsigned long'
| `-BuiltinType 0x559bb17ddfd0 'unsigned long'
|-TypedefDecl 0x559bb1845cb8 <line:59:1, col:27> col:27 __fsfilcnt64_t 'unsigned long'
| `-BuiltinType 0x559bb17ddfd0 'unsigned long'
|-TypedefDecl 0x559bb1845d28 <line:60:1, col:18> col:18 __fsword_t 'long'
| `-BuiltinType 0x559bb17ddf30 'long'
|-TypedefDecl 0x559bb1845d98 <line:61:1, col:18> col:18 __ssize_t 'long'
| `-BuiltinType 0x559bb17ddf30 'long'
|-TypedefDecl 0x559bb1845e08 <line:62:1, col:18> col:18 referenced __syscall_slong_t 'long'
| `-BuiltinType 0x559bb17ddf30 'long'
|-TypedefDecl 0x559bb1845e78 <line:63:1, col:27> col:27 __syscall_ulong_t 'unsigned long'
| `-BuiltinType 0x559bb17ddfd0 'unsigned long'
|-TypedefDecl 0x559bb1845f08 <line:64:1, col:19> col:19 __loff_t '__off64_t':'long'
| `-TypedefType 0x559bb1845ed0 '__off64_t' sugar
|   |-Typedef 0x559bb18451c8 '__off64_t'
|   `-BuiltinType 0x559bb17ddf30 'long'
|-TypedefDecl 0x559bb1846000 <line:65:1, col:19> col:19 __qaddr_t '__quad_t *'
| `-PointerType 0x559bb1845fc0 '__quad_t *'
|   `-TypedefType 0x559bb1845f60 '__quad_t' sugar
|     |-Typedef 0x559bb1844d68 '__quad_t'
|     `-BuiltinType 0x559bb17ddf30 'long'
|-TypedefDecl 0x559bb1846070 <line:66:1, col:15> col:15 __caddr_t 'char *'
| `-PointerType 0x559bb17deab0 'char *'
|   `-BuiltinType 0x559bb17ddeb0 'char'
|-TypedefDecl 0x559bb18460e0 <line:67:1, col:18> col:18 __intptr_t 'long'
| `-BuiltinType 0x559bb17ddf30 'long'
|-TypedefDecl 0x559bb1846150 <line:68:1, col:22> col:22 __socklen_t 'unsigned int'
| `-BuiltinType 0x559bb17ddfb0 'unsigned int'
|-FunctionDecl 0x559bb1846298 <line:69:1, line:73:1> line:70:1 __bswap_32 'unsigned int (unsigned int)' static inline
| |-ParmVarDecl 0x559bb18461c0 <col:13, col:26> col:26 used __bsx 'unsigned int'
| `-CompoundStmt 0x559bb18475e8 <line:71:1, line:73:1>
|   `-ReturnStmt 0x559bb18475d8 <line:72:3, col:34>
|     `-CallExpr 0x559bb1847598 <col:10, col:34> 'unsigned int'
|       |-ImplicitCastExpr 0x559bb1847580 <col:10> 'unsigned int (*)(unsigned int)' <BuiltinFnToFnPtr>
|       | `-DeclRefExpr 0x559bb1847510 <col:10> '<builtin fn type>' Function 0x559bb1847380 '__builtin_bswap32' 'unsigned int (unsigned int)'
|       `-ImplicitCastExpr 0x559bb18475c0 <col:29> 'unsigned int' <LValueToRValue>
|         `-DeclRefExpr 0x559bb1847530 <col:29> 'unsigned int' lvalue ParmVar 0x559bb18461c0 '__bsx' 'unsigned int'
|-FunctionDecl 0x559bb1847380 <col:10> col:10 implicit used __builtin_bswap32 'unsigned int (unsigned int)' extern
| |-ParmVarDecl 0x559bb1847420 <<invalid sloc>> <invalid sloc> 'unsigned int'
| |-NoThrowAttr 0x559bb1847490 <col:10> Implicit
| `-ConstAttr 0x559bb18474e8 <col:10> Implicit
|-FunctionDecl 0x559bb1847740 <line:74:1, line:78:1> line:75:1 __bswap_64 '__uint64_t (__uint64_t)' static inline
| |-ParmVarDecl 0x559bb1847638 <col:13, col:24> col:24 used __bsx '__uint64_t':'unsigned long'
| `-CompoundStmt 0x559bb1847a58 <line:76:1, line:78:1>
|   `-ReturnStmt 0x559bb1847a48 <line:77:3, col:34>
|     `-CallExpr 0x559bb1847a08 <col:10, col:34> 'unsigned long'
|       |-ImplicitCastExpr 0x559bb18479f0 <col:10> 'unsigned long (*)(unsigned long)' <BuiltinFnToFnPtr>
|       | `-DeclRefExpr 0x559bb1847978 <col:10> '<builtin fn type>' Function 0x559bb18477e8 '__builtin_bswap64' 'unsigned long (unsigned long)'
|       `-ImplicitCastExpr 0x559bb1847a30 <col:29> '__uint64_t':'unsigned long' <LValueToRValue>
|         `-DeclRefExpr 0x559bb1847998 <col:29> '__uint64_t':'unsigned long' lvalue ParmVar 0x559bb1847638 '__bsx' '__uint64_t':'unsigned long'
|-FunctionDecl 0x559bb18477e8 <col:10> col:10 implicit used __builtin_bswap64 'unsigned long (unsigned long)' extern
| |-ParmVarDecl 0x559bb1847888 <<invalid sloc>> <invalid sloc> 'unsigned long'
| |-NoThrowAttr 0x559bb18478f8 <col:10> Implicit
| `-ConstAttr 0x559bb1847950 <col:10> Implicit
|-TypedefDecl 0x559bb1847a88 <line:79:1, col:27> col:27 referenced size_t 'unsigned long'
| `-BuiltinType 0x559bb17ddfd0 'unsigned long'
|-TypedefDecl 0x559bb1847b18 <line:81:1, col:18> col:18 referenced time_t '__time_t':'long'
| `-TypedefType 0x559bb1847ae0 '__time_t' sugar
|   |-Typedef 0x559bb1845708 '__time_t'
|   `-BuiltinType 0x559bb17ddf30 'long'
|-RecordDecl 0x559bb1847b70 <line:84:1, line:88:3> line:84:8 struct timespec definition
| |-FieldDecl 0x559bb1847c28 <line:86:5, col:14> col:14 tv_sec '__time_t':'long'
| `-FieldDecl 0x559bb1847cb8 <line:87:5, col:23> col:23 tv_nsec '__syscall_slong_t':'long'
|-TypedefDecl 0x559bb1847d48 <line:89:1, col:17> col:17 referenced pid_t '__pid_t':'int'
| `-TypedefType 0x559bb1847d10 '__pid_t' sugar
|   |-Typedef 0x559bb1845238 '__pid_t'
|   `-BuiltinType 0x559bb17ddf10 'int'
|-RecordDecl 0x559bb1847da0 <line:90:1, line:93:3> line:90:8 struct sched_param definition
| `-FieldDecl 0x559bb1847e60 <line:92:5, col:9> col:9 __sched_priority 'int'
|-RecordDecl 0x559bb1847eb0 <line:96:1, line:99:3> line:96:8 struct __sched_param definition
| `-FieldDecl 0x559bb1847f70 <line:98:5, col:9> col:9 __sched_priority 'int'
|-TypedefDecl 0x559bb1847fd8 <line:100:1, col:27> col:27 referenced __cpu_mask 'unsigned long'
| `-BuiltinType 0x559bb17ddfd0 'unsigned long'
|-RecordDecl 0x559bb1848030 <line:101:9, line:104:1> line:101:9 struct definition
| `-FieldDecl 0x559bb18482c0 <line:103:3, col:53> col:14 __bits '__cpu_mask [64]'
|-TypedefDecl 0x559bb18493a0 <line:101:1, line:104:3> col:3 referenced cpu_set_t 'struct cpu_set_t':'cpu_set_t'
| `-ElaboratedType 0x559bb1848310 'struct cpu_set_t' sugar
|   `-RecordType 0x559bb18480b0 'cpu_set_t'
|     `-Record 0x559bb1848030 ''
|-FunctionDecl 0x559bb1849678 <line:106:1, line:107:42> line:106:12 __sched_cpucount 'int (size_t, const cpu_set_t *)' extern
| |-ParmVarDecl 0x559bb1849448 <col:30, col:37> col:37 __setsize 'size_t':'unsigned long'
| |-ParmVarDecl 0x559bb1849550 <col:48, col:65> col:65 __setp 'const cpu_set_t *'
| `-NoThrowAttr 0x559bb1849728 <line:107:19>
|-FunctionDecl 0x559bb1849900 <line:108:1, col:92> col:19 __sched_cpualloc 'cpu_set_t *(size_t)' extern
| |-ParmVarDecl 0x559bb1849790 <col:37, col:44> col:44 __count 'size_t':'unsigned long'
| `-NoThrowAttr 0x559bb18499a8 <col:69>
|-FunctionDecl 0x559bb1849b20 <line:109:1, col:87> col:13 __sched_cpufree 'void (cpu_set_t *)' extern
| |-ParmVarDecl 0x559bb1849a10 <col:30, col:41> col:41 __set 'cpu_set_t *'
| `-NoThrowAttr 0x559bb1849bc8 <col:64>
|-FunctionDecl 0x559bb1849e88 <line:112:1, line:113:45> line:112:12 sched_setparam 'int (__pid_t, const struct sched_param *)' extern
| |-ParmVarDecl 0x559bb1849c30 <col:28, col:36> col:36 __pid '__pid_t':'int'
| |-ParmVarDecl 0x559bb1849d68 <col:43, col:69> col:69 __param 'const struct sched_param *'
| `-NoThrowAttr 0x559bb1849f38 <line:113:22>
|-FunctionDecl 0x559bb184a1b8 <line:114:1, col:111> col:12 sched_getparam 'int (__pid_t, struct sched_param *)' extern
| |-ParmVarDecl 0x559bb1849fa0 <col:28, col:36> col:36 __pid '__pid_t':'int'
| |-ParmVarDecl 0x559bb184a098 <col:43, col:63> col:63 __param 'struct sched_param *'
| `-NoThrowAttr 0x559bb184a268 <col:88>
|-FunctionDecl 0x559bb184a588 <line:115:1, line:116:85> line:115:12 sched_setscheduler 'int (__pid_t, int, const struct sched_param *)' extern
| |-ParmVarDecl 0x559bb184a2d0 <col:32, col:40> col:40 __pid '__pid_t':'int'
| |-ParmVarDecl 0x559bb184a3b0 <col:47, col:51> col:51 __policy 'int'
| |-ParmVarDecl 0x559bb184a440 <line:116:11, col:37> col:37 __param 'const struct sched_param *'
| `-NoThrowAttr 0x559bb184a640 <col:62>
|-FunctionDecl 0x559bb184a7b8 <line:117:1, col:86> col:12 sched_getscheduler 'int (__pid_t)' extern
| |-ParmVarDecl 0x559bb184a6a8 <col:32, col:40> col:40 __pid '__pid_t':'int'
| `-NoThrowAttr 0x559bb184a860 <col:63>
|-FunctionDecl 0x559bb184a988 <line:118:1, col:70> col:12 sched_yield 'int (void)' extern
| `-NoThrowAttr 0x559bb184aa28 <col:47>
|-FunctionDecl 0x559bb184ab30 <line:119:1, col:92> col:12 sched_get_priority_max 'int (int)' extern
| |-ParmVarDecl 0x559bb184aa98 <col:36, col:40> col:40 __algorithm 'int'
| `-NoThrowAttr 0x559bb184abd8 <col:69>
|-FunctionDecl 0x559bb184ace0 <line:120:1, col:92> col:12 sched_get_priority_min 'int (int)' extern
| |-ParmVarDecl 0x559bb184ac48 <col:36, col:40> col:40 __algorithm 'int'
| `-NoThrowAttr 0x559bb184ad88 <col:69>
|-FunctionDecl 0x559bb184b048 <line:121:1, col:111> col:12 sched_rr_get_interval 'int (__pid_t, struct timespec *)' extern
| |-ParmVarDecl 0x559bb184adf0 <col:35, col:43> col:43 __pid '__pid_t':'int'
| |-ParmVarDecl 0x559bb184af28 <col:50, col:67> col:67 __t 'struct timespec *'
| `-NoThrowAttr 0x559bb184b0f8 <col:88>
|-TypedefDecl 0x559bb184b188 <line:125:1, col:19> col:19 referenced clock_t '__clock_t':'long'
| `-TypedefType 0x559bb184b150 '__clock_t' sugar
|   |-Typedef 0x559bb1845548 '__clock_t'
|   `-BuiltinType 0x559bb17ddf30 'long'
|-TypedefDecl 0x559bb184b218 <line:128:1, col:21> col:21 referenced clockid_t '__clockid_t':'int'
| `-TypedefType 0x559bb184b1e0 '__clockid_t' sugar
|   |-Typedef 0x559bb1845938 '__clockid_t'
|   `-BuiltinType 0x559bb17ddf10 'int'
|-TypedefDecl 0x559bb184b2a8 <line:129:1, col:19> col:19 referenced timer_t '__timer_t':'void *'
| `-TypedefType 0x559bb184b270 '__timer_t' sugar
|   |-Typedef 0x559bb18459a8 '__timer_t'
|   `-PointerType 0x559bb17de630 'void *'
|     `-BuiltinType 0x559bb17dde70 'void'
|-RecordDecl 0x559bb184b300 <line:131:1, line:144:1> line:131:8 struct tm definition
| |-FieldDecl 0x559bb184b3d8 <line:133:3, col:7> col:7 tm_sec 'int'
| |-FieldDecl 0x559bb184b440 <line:134:3, col:7> col:7 tm_min 'int'
| |-FieldDecl 0x559bb184b4a8 <line:135:3, col:7> col:7 tm_hour 'int'
| |-FieldDecl 0x559bb184b510 <line:136:3, col:7> col:7 tm_mday 'int'
| |-FieldDecl 0x559bb184b578 <line:137:3, col:7> col:7 tm_mon 'int'
| |-FieldDecl 0x559bb184b5e0 <line:138:3, col:7> col:7 tm_year 'int'
| |-FieldDecl 0x559bb184b648 <line:139:3, col:7> col:7 tm_wday 'int'
| |-FieldDecl 0x559bb184b6b0 <line:140:3, col:7> col:7 tm_yday 'int'
| |-FieldDecl 0x559bb184b718 <line:141:3, col:7> col:7 tm_isdst 'int'
| |-FieldDecl 0x559bb184b780 <line:142:3, col:12> col:12 tm_gmtoff 'long'
| `-FieldDecl 0x559bb184b7e8 <line:143:3, col:15> col:15 tm_zone 'const char *'
|-RecordDecl 0x559bb184b838 <line:147:1, line:151:3> line:147:8 struct itimerspec definition
| |-FieldDecl 0x559bb184b908 <line:149:5, col:21> col:21 it_interval 'struct timespec':'struct timespec'
| `-FieldDecl 0x559bb184b978 <line:150:5, col:21> col:21 it_value 'struct timespec':'struct timespec'
|-RecordDecl 0x559bb184ba20 <line:152:1, col:8> col:8 struct sigevent
|-FunctionDecl 0x559bb184bbf0 <line:154:1, col:68> col:16 clock 'clock_t (void)' extern
| `-NoThrowAttr 0x559bb184bc90 <col:45>
|-FunctionDecl 0x559bb184be70 <line:155:1, col:77> col:15 time 'time_t (time_t *)' extern
| |-ParmVarDecl 0x559bb184bd60 <col:21, col:29> col:29 __timer 'time_t *'
| `-NoThrowAttr 0x559bb184bf18 <col:54>
|-FunctionDecl 0x559bb184c118 <line:156:1, line:157:73> line:156:15 difftime 'double (time_t, time_t)' extern
| |-ParmVarDecl 0x559bb184bf80 <col:25, col:32> col:32 __time1 'time_t':'long'
| |-ParmVarDecl 0x559bb184bff8 <col:41, col:48> col:48 __time0 'time_t':'long'
| |-NoThrowAttr 0x559bb184c1c8 <line:157:22>
| `-ConstAttr 0x559bb184c220 <col:63>
|-FunctionDecl 0x559bb184d050 <line:158:1, col:79> col:15 mktime 'time_t (struct tm *)' extern
| |-ParmVarDecl 0x559bb184c318 <col:23, col:34> col:34 __tp 'struct tm *'
| `-NoThrowAttr 0x559bb184d0f8 <col:56>
|-FunctionDecl 0x559bb184d4a0 <line:159:1, line:161:77> line:159:15 strftime 'size_t (char *restrict, size_t, const char *restrict, const struct tm *restrict)' extern
| |-ParmVarDecl 0x559bb184d168 <col:25, col:42> col:42 __s 'char *restrict'
| |-ParmVarDecl 0x559bb184d1e0 <col:47, col:54> col:54 __maxsize 'size_t':'unsigned long'
| |-ParmVarDecl 0x559bb184d260 <line:160:4, col:27> col:27 __format 'const char *restrict'
| |-ParmVarDecl 0x559bb184d358 <line:161:4, col:32> col:32 __tp 'const struct tm *restrict'
| `-NoThrowAttr 0x559bb184d560 <col:54>
|-RecordDecl 0x559bb184d5b8 <line:163:9, line:170:1> line:163:16 struct __locale_struct definition
| |-RecordDecl 0x559bb184d668 parent 0x559bb17dde18 <line:165:3, col:10> col:10 struct __locale_data
| |-FieldDecl 0x559bb184d8c8 <col:3, col:37> col:25 __locales 'struct __locale_data *[13]'
| |-FieldDecl 0x559bb184d968 <line:166:3, col:29> col:29 __ctype_b 'const unsigned short *'
| |-FieldDecl 0x559bb184d9d0 <line:167:3, col:14> col:14 __ctype_tolower 'const int *'
| |-FieldDecl 0x559bb184da38 <line:168:3, col:14> col:14 __ctype_toupper 'const int *'
| `-FieldDecl 0x559bb184db28 <line:169:3, col:25> col:15 __names 'const char *[13]'
|-TypedefDecl 0x559bb184dc48 <line:163:1, line:170:4> col:4 referenced __locale_t 'struct __locale_struct *'
| `-PointerType 0x559bb184dbf0 'struct __locale_struct *'
|   `-ElaboratedType 0x559bb184db80 'struct __locale_struct' sugar
|     `-RecordType 0x559bb184d640 'struct __locale_struct'
|       `-Record 0x559bb184d5b8 '__locale_struct'
|-TypedefDecl 0x559bb184dcf8 <line:171:1, col:20> col:20 locale_t '__locale_t':'struct __locale_struct *'
| `-TypedefType 0x559bb184dcc0 '__locale_t' sugar
|   |-Typedef 0x559bb184dc48 '__locale_t'
|   `-PointerType 0x559bb184dbf0 'struct __locale_struct *'
|     `-ElaboratedType 0x559bb184db80 'struct __locale_struct' sugar
|       `-RecordType 0x559bb184d640 'struct __locale_struct'
|         `-Record 0x559bb184d5b8 '__locale_struct'
|-FunctionDecl 0x559bb184f110 <line:172:1, line:175:63> line:172:15 strftime_l 'size_t (char *restrict, size_t, const char *restrict, const struct tm *restrict, __locale_t)' extern
| |-ParmVarDecl 0x559bb184dd68 <col:27, col:44> col:44 __s 'char *restrict'
| |-ParmVarDecl 0x559bb184dde0 <col:49, col:56> col:56 __maxsize 'size_t':'unsigned long'
| |-ParmVarDecl 0x559bb184de60 <line:173:6, col:29> col:29 __format 'const char *restrict'
| |-ParmVarDecl 0x559bb184def0 <line:174:6, col:34> col:34 __tp 'const struct tm *restrict'
| |-ParmVarDecl 0x559bb184df68 <line:175:6, col:17> col:17 __loc '__locale_t':'struct __locale_struct *'
| `-NoThrowAttr 0x559bb184f1d8 <col:40>
|-FunctionDecl 0x559bb184f3c8 <line:177:1, col:89> col:19 gmtime 'struct tm *(const time_t *)' extern
| |-ParmVarDecl 0x559bb184f2a0 <col:27, col:41> col:41 __timer 'const time_t *'
| `-NoThrowAttr 0x559bb184f470 <col:66>
|-FunctionDecl 0x559bb184f580 <line:178:1, col:92> col:19 localtime 'struct tm *(const time_t *)' extern
| |-ParmVarDecl 0x559bb184f4d8 <col:30, col:44> col:44 __timer 'const time_t *'
| `-NoThrowAttr 0x559bb184f628 <col:69>
|-FunctionDecl 0x559bb184f858 <line:180:1, line:181:75> line:180:19 gmtime_r 'struct tm *(const time_t *restrict, struct tm *restrict)' extern
| |-ParmVarDecl 0x559bb184f690 <col:29, col:54> col:54 __timer 'const time_t *restrict'
| |-ParmVarDecl 0x559bb184f720 <line:181:8, col:30> col:30 __tp 'struct tm *restrict'
| `-NoThrowAttr 0x559bb184f908 <col:52>
|-FunctionDecl 0x559bb184fab0 <line:182:1, line:183:78> line:182:19 localtime_r 'struct tm *(const time_t *restrict, struct tm *restrict)' extern
| |-ParmVarDecl 0x559bb184f970 <col:32, col:57> col:57 __timer 'const time_t *restrict'
| |-ParmVarDecl 0x559bb184fa00 <line:183:11, col:33> col:33 __tp 'struct tm *restrict'
| `-NoThrowAttr 0x559bb184fb60 <col:55>
|-FunctionDecl 0x559bb184fcf8 <line:185:1, col:85> col:14 asctime 'char *(const struct tm *)' extern
| |-ParmVarDecl 0x559bb184fbe0 <col:23, col:40> col:40 __tp 'const struct tm *'
| `-NoThrowAttr 0x559bb184fda0 <col:62>
|-FunctionDecl 0x559bb184ff18 <line:186:1, col:83> col:14 ctime 'char *(const time_t *)' extern
| |-ParmVarDecl 0x559bb184fe08 <col:21, col:35> col:35 __timer 'const time_t *'
| `-NoThrowAttr 0x559bb184ffc0 <col:60>
|-FunctionDecl 0x559bb18502b8 <line:188:1, line:189:67> line:188:14 asctime_r 'char *(const struct tm *restrict, char *restrict)' extern
| |-ParmVarDecl 0x559bb1850118 <col:25, col:53> col:53 __tp 'const struct tm *restrict'
| |-ParmVarDecl 0x559bb1850198 <line:189:4, col:21> col:21 __buf 'char *restrict'
| `-NoThrowAttr 0x559bb1850368 <col:44>
|-FunctionDecl 0x559bb1850578 <line:190:1, line:191:72> line:190:14 ctime_r 'char *(const time_t *restrict, char *restrict)' extern
| |-ParmVarDecl 0x559bb18503d0 <col:23, col:48> col:48 __timer 'const time_t *restrict'
| |-ParmVarDecl 0x559bb1850450 <line:191:9, col:26> col:26 __buf 'char *restrict'
| `-NoThrowAttr 0x559bb1850628 <col:49>
|-VarDecl 0x559bb1850728 <line:192:1, col:24> col:14 __tzname 'char *[2]' extern
|-VarDecl 0x559bb18507a8 <line:193:1, col:12> col:12 __daylight 'int' extern
|-VarDecl 0x559bb1850828 <line:194:1, col:17> col:17 __timezone 'long' extern
|-VarDecl 0x559bb18508f0 <line:195:1, col:22> col:14 tzname 'char *[2]' extern
|-FunctionDecl 0x559bb1850a20 <line:196:1, col:65> col:13 tzset 'void (void)' extern
| `-NoThrowAttr 0x559bb1850ac0 <col:42>
|-VarDecl 0x559bb1850b30 <line:197:1, col:12> col:12 daylight 'int' extern
|-VarDecl 0x559bb1850bb0 <line:198:1, col:17> col:17 timezone 'long' extern
|-FunctionDecl 0x559bb1850d38 <line:199:1, col:80> col:12 stime 'int (const time_t *)' extern
| |-ParmVarDecl 0x559bb1850c28 <col:19, col:33> col:33 __when 'const time_t *'
| `-NoThrowAttr 0x559bb1850de0 <col:57>
|-FunctionDecl 0x559bb1850ef0 <line:200:1, col:79> col:15 timegm 'time_t (struct tm *)' extern
| |-ParmVarDecl 0x559bb1850e60 <col:23, col:34> col:34 __tp 'struct tm *'
| `-NoThrowAttr 0x559bb1850f98 <col:56>
|-FunctionDecl 0x559bb18510d0 <line:201:1, col:82> col:15 timelocal 'time_t (struct tm *)' extern
| |-ParmVarDecl 0x559bb1851018 <col:26, col:37> col:37 __tp 'struct tm *'
| `-NoThrowAttr 0x559bb1851178 <col:59>
|-FunctionDecl 0x559bb1851280 <line:202:1, col:99> col:12 dysize 'int (int)' extern
| |-ParmVarDecl 0x559bb18511e8 <col:20, col:24> col:24 __year 'int'
| |-NoThrowAttr 0x559bb1851328 <col:48>
| `-ConstAttr 0x559bb1851380 <col:89>
|-FunctionDecl 0x559bb18515e8 <line:203:1, line:204:37> line:203:12 nanosleep 'int (const struct timespec *, struct timespec *)' extern
| |-ParmVarDecl 0x559bb1851438 <col:23, col:46> col:46 __requested_time 'const struct timespec *'
| `-ParmVarDecl 0x559bb18514c8 <line:204:9, col:26> col:26 __remaining 'struct timespec *'
|-FunctionDecl 0x559bb1851848 <line:205:1, col:111> col:12 clock_getres 'int (clockid_t, struct timespec *)' extern
| |-ParmVarDecl 0x559bb18516d8 <col:26, col:36> col:36 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x559bb1851768 <col:48, col:65> col:65 __res 'struct timespec *'
| `-NoThrowAttr 0x559bb18518f8 <col:88>
|-FunctionDecl 0x559bb1851a90 <line:206:1, col:111> col:12 clock_gettime 'int (clockid_t, struct timespec *)' extern
| |-ParmVarDecl 0x559bb1851960 <col:27, col:37> col:37 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x559bb18519f0 <col:49, col:66> col:66 __tp 'struct timespec *'
| `-NoThrowAttr 0x559bb1851b40 <col:88>
|-FunctionDecl 0x559bb1851d58 <line:207:1, line:208:45> line:207:12 clock_settime 'int (clockid_t, const struct timespec *)' extern
| |-ParmVarDecl 0x559bb1851ba8 <col:27, col:37> col:37 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x559bb1851c38 <col:49, col:72> col:72 __tp 'const struct timespec *'
| `-NoThrowAttr 0x559bb1851e08 <line:208:22>
|-FunctionDecl 0x559bb1852178 <line:209:1, line:211:30> line:209:12 clock_nanosleep 'int (clockid_t, int, const struct timespec *, struct timespec *)' extern
| |-ParmVarDecl 0x559bb1851e70 <col:29, col:39> col:39 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x559bb1851ef0 <col:51, col:55> col:55 __flags 'int'
| |-ParmVarDecl 0x559bb1851f80 <line:210:8, col:31> col:31 __req 'const struct timespec *'
| `-ParmVarDecl 0x559bb1852010 <line:211:8, col:25> col:25 __rem 'struct timespec *'
|-FunctionDecl 0x559bb1852478 <line:212:1, col:108> col:12 clock_getcpuclockid 'int (pid_t, clockid_t *)' extern
| |-ParmVarDecl 0x559bb1852278 <col:33, col:39> col:39 __pid 'pid_t':'int'
| |-ParmVarDecl 0x559bb1852350 <col:46, col:57> col:57 __clock_id 'clockid_t *'
| `-NoThrowAttr 0x559bb1852528 <col:85>
|-FunctionDecl 0x559bb1852918 <line:213:1, line:215:75> line:213:12 timer_create 'int (clockid_t, struct sigevent *restrict, timer_t *restrict)' extern
| |-ParmVarDecl 0x559bb1852590 <col:26, col:36> col:36 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x559bb18526c8 <line:214:5, col:33> col:33 __evp 'struct sigevent *restrict'
| |-ParmVarDecl 0x559bb18527d0 <line:215:5, col:25> col:25 __timerid 'timer_t *restrict'
| `-NoThrowAttr 0x559bb18529d0 <col:52>
|-FunctionDecl 0x559bb1852b48 <line:216:1, col:84> col:12 timer_delete 'int (timer_t)' extern
| |-ParmVarDecl 0x559bb1852a38 <col:26, col:34> col:34 __timerid 'timer_t':'void *'
| `-NoThrowAttr 0x559bb1852bf0 <col:61>
|-FunctionDecl 0x559bb18530f0 <line:217:1, line:219:85> line:217:12 timer_settime 'int (timer_t, int, const struct itimerspec *restrict, struct itimerspec *restrict)' extern
| |-ParmVarDecl 0x559bb1852c58 <col:27, col:35> col:35 __timerid 'timer_t':'void *'
| |-ParmVarDecl 0x559bb1852cd8 <col:46, col:50> col:50 __flags 'int'
| |-ParmVarDecl 0x559bb1852e08 <line:218:6, col:42> col:42 __value 'const struct itimerspec *restrict'
| |-ParmVarDecl 0x559bb1852ef8 <line:219:6, col:36> col:36 __ovalue 'struct itimerspec *restrict'
| `-NoThrowAttr 0x559bb18531b0 <col:62>
|-FunctionDecl 0x559bb18533c8 <line:220:1, line:221:45> line:220:12 timer_gettime 'int (timer_t, struct itimerspec *)' extern
| |-ParmVarDecl 0x559bb1853218 <col:27, col:35> col:35 __timerid 'timer_t':'void *'
| |-ParmVarDecl 0x559bb18532a8 <col:46, col:65> col:65 __value 'struct itimerspec *'
| `-NoThrowAttr 0x559bb1853478 <line:221:22>
|-FunctionDecl 0x559bb1853578 <line:222:1, col:88> col:12 timer_getoverrun 'int (timer_t)' extern
| |-ParmVarDecl 0x559bb18534e0 <col:30, col:38> col:38 __timerid 'timer_t':'void *'
| `-NoThrowAttr 0x559bb1853620 <col:65>
|-TypedefDecl 0x559bb1853690 <line:224:1, col:27> col:27 referenced pthread_t 'unsigned long'
| `-BuiltinType 0x559bb17ddfd0 'unsigned long'
|-RecordDecl 0x559bb18536e8 <line:225:1, line:229:1> line:225:7 union pthread_attr_t definition
| |-FieldDecl 0x559bb1853830 <line:227:3, col:17> col:8 __size 'char [56]'
| `-FieldDecl 0x559bb1853898 <line:228:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x559bb1853948 <line:230:1, col:30> col:30 referenced pthread_attr_t 'union pthread_attr_t':'union pthread_attr_t'
| `-ElaboratedType 0x559bb18538f0 'union pthread_attr_t' sugar
|   `-RecordType 0x559bb1853770 'union pthread_attr_t'
|     `-Record 0x559bb18536e8 'pthread_attr_t'
|-RecordDecl 0x559bb18539a0 <line:231:9, line:235:1> line:231:16 struct __pthread_internal_list definition
| |-FieldDecl 0x559bb1853b18 <line:233:3, col:35> col:35 __prev 'struct __pthread_internal_list *'
| `-FieldDecl 0x559bb1853b90 <line:234:3, col:35> col:35 __next 'struct __pthread_internal_list *'
|-TypedefDecl 0x559bb1853c40 <line:231:1, line:235:3> col:3 referenced __pthread_list_t 'struct __pthread_internal_list':'struct __pthread_internal_list'
| `-ElaboratedType 0x559bb1853be0 'struct __pthread_internal_list' sugar
|   `-RecordType 0x559bb1853a20 'struct __pthread_internal_list'
|     `-Record 0x559bb18539a0 '__pthread_internal_list'
|-RecordDecl 0x559bb1853cb0 <line:236:9, line:250:1> line:236:9 union definition
| |-RecordDecl 0x559bb1853d58 parent 0x559bb17dde18 <line:238:3, line:247:3> line:238:10 struct __pthread_mutex_s definition
| | |-FieldDecl 0x559bb1853e30 <line:240:5, col:9> col:9 __lock 'int'
| | |-FieldDecl 0x559bb1853e98 <line:241:5, col:18> col:18 __count 'unsigned int'
| | |-FieldDecl 0x559bb1853f00 <line:242:5, col:9> col:9 __owner 'int'
| | |-FieldDecl 0x559bb1853f68 <line:243:5, col:18> col:18 __nusers 'unsigned int'
| | |-FieldDecl 0x559bb1853fd0 <line:244:5, col:9> col:9 __kind 'int'
| | |-FieldDecl 0x559bb1854038 <line:245:5, col:9> col:9 __spins 'int'
| | `-FieldDecl 0x559bb1858110 <line:246:5, col:22> col:22 __list '__pthread_list_t':'struct __pthread_internal_list'
| |-FieldDecl 0x559bb18581c0 <line:238:3, line:247:5> col:5 __data 'struct __pthread_mutex_s':'struct __pthread_mutex_s'
| |-FieldDecl 0x559bb18582b0 <line:248:3, col:17> col:8 __size 'char [40]'
| `-FieldDecl 0x559bb1858318 <line:249:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x559bb18584a0 <line:236:1, line:250:3> col:3 referenced pthread_mutex_t 'union pthread_mutex_t':'pthread_mutex_t'
| `-ElaboratedType 0x559bb1858440 'union pthread_mutex_t' sugar
|   `-RecordType 0x559bb1853d30 'pthread_mutex_t'
|     `-Record 0x559bb1853cb0 ''
|-RecordDecl 0x559bb1858510 <line:251:9, line:255:1> line:251:9 union definition
| |-FieldDecl 0x559bb1858650 <line:253:3, col:16> col:8 __size 'char [4]'
| `-FieldDecl 0x559bb18586b8 <line:254:3, col:7> col:7 __align 'int'
|-TypedefDecl 0x559bb1858770 <line:251:1, line:255:3> col:3 referenced pthread_mutexattr_t 'union pthread_mutexattr_t':'pthread_mutexattr_t'
| `-ElaboratedType 0x559bb1858710 'union pthread_mutexattr_t' sugar
|   `-RecordType 0x559bb1858590 'pthread_mutexattr_t'
|     `-Record 0x559bb1858510 ''
|-RecordDecl 0x559bb18587e0 <line:256:9, line:271:1> line:256:9 union definition
| |-RecordDecl 0x559bb1858888 <line:258:3, line:268:3> line:258:3 struct definition
| | |-FieldDecl 0x559bb1858950 <line:260:5, col:9> col:9 __lock 'int'
| | |-FieldDecl 0x559bb18589b8 <line:261:5, col:18> col:18 __futex 'unsigned int'
| | |-FieldDecl 0x559bb1858a20 <line:262:19, col:42> col:42 __total_seq 'unsigned long long'
| | |-FieldDecl 0x559bb1858a88 <line:263:19, col:42> col:42 __wakeup_seq 'unsigned long long'
| | |-FieldDecl 0x559bb1858af0 <line:264:19, col:42> col:42 __woken_seq 'unsigned long long'
| | |-FieldDecl 0x559bb1858b58 <line:265:5, col:11> col:11 __mutex 'void *'
| | |-FieldDecl 0x559bb1858bc0 <line:266:5, col:18> col:18 __nwaiters 'unsigned int'
| | `-FieldDecl 0x559bb1858c28 <line:267:5, col:18> col:18 __broadcast_seq 'unsigned int'
| |-FieldDecl 0x559bb1858ce0 <line:258:3, line:268:5> col:5 __data 'struct (anonymous struct at ./split_9/mix039_tso.oepc_false-unreach-call.i:258:3)':'struct pthread_cond_t::(anonymous at ./split_9/mix039_tso.oepc_false-unreach-call.i:258:3)'
| |-FieldDecl 0x559bb1858dd0 <line:269:3, col:17> col:8 __size 'char [48]'
| `-FieldDecl 0x559bb1858e38 <line:270:17, col:31> col:31 __align 'long long'
|-TypedefDecl 0x559bb1858f70 <line:256:1, line:271:3> col:3 referenced pthread_cond_t 'union pthread_cond_t':'pthread_cond_t'
| `-ElaboratedType 0x559bb1858f10 'union pthread_cond_t' sugar
|   `-RecordType 0x559bb1858860 'pthread_cond_t'
|     `-Record 0x559bb18587e0 ''
|-RecordDecl 0x559bb1858fe0 <line:272:9, line:276:1> line:272:9 union definition
| |-FieldDecl 0x559bb185a130 <line:274:3, col:16> col:8 __size 'char [4]'
| `-FieldDecl 0x559bb185a198 <line:275:3, col:7> col:7 __align 'int'
|-TypedefDecl 0x559bb185a250 <line:272:1, line:276:3> col:3 referenced pthread_condattr_t 'union pthread_condattr_t':'pthread_condattr_t'
| `-ElaboratedType 0x559bb185a1f0 'union pthread_condattr_t' sugar
|   `-RecordType 0x559bb1859060 'pthread_condattr_t'
|     `-Record 0x559bb1858fe0 ''
|-TypedefDecl 0x559bb185a2d8 <line:277:1, col:22> col:22 referenced pthread_key_t 'unsigned int'
| `-BuiltinType 0x559bb17ddfb0 'unsigned int'
|-TypedefDecl 0x559bb185a348 <line:278:1, col:13> col:13 referenced pthread_once_t 'int'
| `-BuiltinType 0x559bb17ddf10 'int'
|-RecordDecl 0x559bb185a3a0 <line:279:9, line:297:1> line:279:9 union definition
| |-RecordDecl 0x559bb185a448 <line:281:3, line:294:3> line:281:3 struct definition
| | |-FieldDecl 0x559bb185a510 <line:283:5, col:9> col:9 __lock 'int'
| | |-FieldDecl 0x559bb185a578 <line:284:5, col:18> col:18 __nr_readers 'unsigned int'
| | |-FieldDecl 0x559bb185a5e0 <line:285:5, col:18> col:18 __readers_wakeup 'unsigned int'
| | |-FieldDecl 0x559bb185a648 <line:286:5, col:18> col:18 __writer_wakeup 'unsigned int'
| | |-FieldDecl 0x559bb185a6b0 <line:287:5, col:18> col:18 __nr_readers_queued 'unsigned int'
| | |-FieldDecl 0x559bb185a718 <line:288:5, col:18> col:18 __nr_writers_queued 'unsigned int'
| | |-FieldDecl 0x559bb185a780 <line:289:5, col:9> col:9 __writer 'int'
| | |-FieldDecl 0x559bb185a7e8 <line:290:5, col:9> col:9 __shared 'int'
| | |-FieldDecl 0x559bb185a850 <line:291:5, col:23> col:23 __pad1 'unsigned long'
| | |-FieldDecl 0x559bb185a8b8 <line:292:5, col:23> col:23 __pad2 'unsigned long'
| | `-FieldDecl 0x559bb185a920 <line:293:5, col:18> col:18 __flags 'unsigned int'
| |-FieldDecl 0x559bb185a9d0 <line:281:3, line:294:5> col:5 __data 'struct (anonymous struct at ./split_9/mix039_tso.oepc_false-unreach-call.i:281:3)':'struct pthread_rwlock_t::(anonymous at ./split_9/mix039_tso.oepc_false-unreach-call.i:281:3)'
| |-FieldDecl 0x559bb185aa78 <line:295:3, col:17> col:8 __size 'char [56]'
| `-FieldDecl 0x559bb185aae0 <line:296:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x559bb185ac30 <line:279:1, line:297:3> col:3 referenced pthread_rwlock_t 'union pthread_rwlock_t':'pthread_rwlock_t'
| `-ElaboratedType 0x559bb185abd0 'union pthread_rwlock_t' sugar
|   `-RecordType 0x559bb185a420 'pthread_rwlock_t'
|     `-Record 0x559bb185a3a0 ''
|-RecordDecl 0x559bb185aca0 <line:298:9, line:302:1> line:298:9 union definition
| |-FieldDecl 0x559bb185ade0 <line:300:3, col:16> col:8 __size 'char [8]'
| `-FieldDecl 0x559bb185ae48 <line:301:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x559bb185af00 <line:298:1, line:302:3> col:3 referenced pthread_rwlockattr_t 'union pthread_rwlockattr_t':'pthread_rwlockattr_t'
| `-ElaboratedType 0x559bb185aea0 'union pthread_rwlockattr_t' sugar
|   `-RecordType 0x559bb185ad20 'pthread_rwlockattr_t'
|     `-Record 0x559bb185aca0 ''
|-TypedefDecl 0x559bb185af88 <line:303:1, col:22> col:22 referenced pthread_spinlock_t 'volatile int'
| `-QualType 0x559bb17ddf14 'volatile int' volatile
|   `-BuiltinType 0x559bb17ddf10 'int'
|-RecordDecl 0x559bb185afe0 <line:304:9, line:308:1> line:304:9 union definition
| |-FieldDecl 0x559bb185c140 <line:306:3, col:17> col:8 __size 'char [32]'
| `-FieldDecl 0x559bb185c1a8 <line:307:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x559bb185c260 <line:304:1, line:308:3> col:3 referenced pthread_barrier_t 'union pthread_barrier_t':'pthread_barrier_t'
| `-ElaboratedType 0x559bb185c200 'union pthread_barrier_t' sugar
|   `-RecordType 0x559bb185b060 'pthread_barrier_t'
|     `-Record 0x559bb185afe0 ''
|-RecordDecl 0x559bb185c2d0 <line:309:9, line:313:1> line:309:9 union definition
| |-FieldDecl 0x559bb185c3d0 <line:311:3, col:16> col:8 __size 'char [4]'
| `-FieldDecl 0x559bb185c438 <line:312:3, col:7> col:7 __align 'int'
|-TypedefDecl 0x559bb185c4f0 <line:309:1, line:313:3> col:3 referenced pthread_barrierattr_t 'union pthread_barrierattr_t':'pthread_barrierattr_t'
| `-ElaboratedType 0x559bb185c490 'union pthread_barrierattr_t' sugar
|   `-RecordType 0x559bb185c350 'pthread_barrierattr_t'
|     `-Record 0x559bb185c2d0 ''
|-TypedefDecl 0x559bb185c608 <line:314:1, col:29> col:18 referenced __jmp_buf 'long [8]'
| `-ConstantArrayType 0x559bb185c5a0 'long [8]' 8 
|   `-BuiltinType 0x559bb17ddf30 'long'
|-EnumDecl 0x559bb185c660 <line:315:1, line:319:1> line:315:1
| |-EnumConstantDecl 0x559bb185c728 <line:317:3> col:3 PTHREAD_CREATE_JOINABLE 'int'
| `-EnumConstantDecl 0x559bb185c778 <line:318:3> col:3 PTHREAD_CREATE_DETACHED 'int'
|-EnumDecl 0x559bb185c7c8 <line:320:1, line:331:1> line:320:1
| |-EnumConstantDecl 0x559bb185c898 <line:322:3> col:3 referenced PTHREAD_MUTEX_TIMED_NP 'int'
| |-EnumConstantDecl 0x559bb185c8e8 <line:323:3> col:3 referenced PTHREAD_MUTEX_RECURSIVE_NP 'int'
| |-EnumConstantDecl 0x559bb185c938 <line:324:3> col:3 referenced PTHREAD_MUTEX_ERRORCHECK_NP 'int'
| |-EnumConstantDecl 0x559bb185c988 <line:325:3> col:3 PTHREAD_MUTEX_ADAPTIVE_NP 'int'
| |-EnumConstantDecl 0x559bb185ca10 <line:327:3, col:26> col:3 referenced PTHREAD_MUTEX_NORMAL 'int'
| | `-ConstantExpr 0x559bb185c9f8 <col:26> 'int'
| |   `-DeclRefExpr 0x559bb185c9d8 <col:26> 'int' EnumConstant 0x559bb185c898 'PTHREAD_MUTEX_TIMED_NP' 'int'
| |-EnumConstantDecl 0x559bb185ca98 <line:328:3, col:29> col:3 PTHREAD_MUTEX_RECURSIVE 'int'
| | `-ConstantExpr 0x559bb185ca80 <col:29> 'int'
| |   `-DeclRefExpr 0x559bb185ca60 <col:29> 'int' EnumConstant 0x559bb185c8e8 'PTHREAD_MUTEX_RECURSIVE_NP' 'int'
| |-EnumConstantDecl 0x559bb185cb20 <line:329:3, col:30> col:3 PTHREAD_MUTEX_ERRORCHECK 'int'
| | `-ConstantExpr 0x559bb185cb08 <col:30> 'int'
| |   `-DeclRefExpr 0x559bb185cae8 <col:30> 'int' EnumConstant 0x559bb185c938 'PTHREAD_MUTEX_ERRORCHECK_NP' 'int'
| `-EnumConstantDecl 0x559bb185cba8 <line:330:3, col:27> col:3 PTHREAD_MUTEX_DEFAULT 'int'
|   `-ConstantExpr 0x559bb185cb90 <col:27> 'int'
|     `-DeclRefExpr 0x559bb185cb70 <col:27> 'int' EnumConstant 0x559bb185ca10 'PTHREAD_MUTEX_NORMAL' 'int'
|-EnumDecl 0x559bb185cbf8 <line:332:1, line:338:1> line:332:1
| |-EnumConstantDecl 0x559bb185ccc8 <line:334:3> col:3 referenced PTHREAD_MUTEX_STALLED 'int'
| |-EnumConstantDecl 0x559bb185cd50 <line:335:3, col:30> col:3 PTHREAD_MUTEX_STALLED_NP 'int'
| | `-ConstantExpr 0x559bb185cd38 <col:30> 'int'
| |   `-DeclRefExpr 0x559bb185cd18 <col:30> 'int' EnumConstant 0x559bb185ccc8 'PTHREAD_MUTEX_STALLED' 'int'
| |-EnumConstantDecl 0x559bb185cda0 <line:336:3> col:3 referenced PTHREAD_MUTEX_ROBUST 'int'
| `-EnumConstantDecl 0x559bb185ce28 <line:337:3, col:29> col:3 PTHREAD_MUTEX_ROBUST_NP 'int'
|   `-ConstantExpr 0x559bb185ce10 <col:29> 'int'
|     `-DeclRefExpr 0x559bb185cdf0 <col:29> 'int' EnumConstant 0x559bb185cda0 'PTHREAD_MUTEX_ROBUST' 'int'
|-EnumDecl 0x559bb185ce78 <line:339:1, line:344:1> line:339:1
| |-EnumConstantDecl 0x559bb185cf48 <line:341:3> col:3 PTHREAD_PRIO_NONE 'int'
| |-EnumConstantDecl 0x559bb185cf98 <line:342:3> col:3 PTHREAD_PRIO_INHERIT 'int'
| `-EnumConstantDecl 0x559bb185cfe8 <line:343:3> col:3 PTHREAD_PRIO_PROTECT 'int'
|-EnumDecl 0x559bb185d038 <line:345:1, line:351:1> line:345:1
| |-EnumConstantDecl 0x559bb185d150 <line:347:3> col:3 referenced PTHREAD_RWLOCK_PREFER_READER_NP 'int'
| |-EnumConstantDecl 0x559bb185d1a0 <line:348:3> col:3 PTHREAD_RWLOCK_PREFER_WRITER_NP 'int'
| |-EnumConstantDecl 0x559bb185d1f0 <line:349:3> col:3 PTHREAD_RWLOCK_PREFER_WRITER_NONRECURSIVE_NP 'int'
| `-EnumConstantDecl 0x559bb185d278 <line:350:3, col:31> col:3 PTHREAD_RWLOCK_DEFAULT_NP 'int'
|   `-ConstantExpr 0x559bb185d260 <col:31> 'int'
|     `-DeclRefExpr 0x559bb185d240 <col:31> 'int' EnumConstant 0x559bb185d150 'PTHREAD_RWLOCK_PREFER_READER_NP' 'int'
|-EnumDecl 0x559bb185d2c8 <line:352:1, line:356:1> line:352:1
| |-EnumConstantDecl 0x559bb185d398 <line:354:3> col:3 PTHREAD_INHERIT_SCHED 'int'
| `-EnumConstantDecl 0x559bb185d3e8 <line:355:3> col:3 PTHREAD_EXPLICIT_SCHED 'int'
|-EnumDecl 0x559bb185d438 <line:357:1, line:361:1> line:357:1
| |-EnumConstantDecl 0x559bb185d508 <line:359:3> col:3 PTHREAD_SCOPE_SYSTEM 'int'
| `-EnumConstantDecl 0x559bb185d558 <line:360:3> col:3 PTHREAD_SCOPE_PROCESS 'int'
|-EnumDecl 0x559bb185d5a8 <line:362:1, line:366:1> line:362:1
| |-EnumConstantDecl 0x559bb185d678 <line:364:3> col:3 PTHREAD_PROCESS_PRIVATE 'int'
| `-EnumConstantDecl 0x559bb185d6c8 <line:365:3> col:3 PTHREAD_PROCESS_SHARED 'int'
|-RecordDecl 0x559bb185d718 <line:367:1, line:373:1> line:367:8 struct _pthread_cleanup_buffer definition
| |-FieldDecl 0x559bb185d958 <line:369:3, col:28> col:10 __routine 'void (*)(void *)'
| |-FieldDecl 0x559bb185d9c0 <line:370:3, col:9> col:9 __arg 'void *'
| |-FieldDecl 0x559bb185da28 <line:371:3, col:7> col:7 __canceltype 'int'
| `-FieldDecl 0x559bb185db48 <line:372:3, col:35> col:35 __prev 'struct _pthread_cleanup_buffer *'
|-EnumDecl 0x559bb185db98 <line:374:1, line:378:1> line:374:1
| |-EnumConstantDecl 0x559bb185dc68 <line:376:3> col:3 PTHREAD_CANCEL_ENABLE 'int'
| `-EnumConstantDecl 0x559bb185dcb8 <line:377:3> col:3 PTHREAD_CANCEL_DISABLE 'int'
|-EnumDecl 0x559bb185dd08 <line:379:1, line:383:1> line:379:1
| |-EnumConstantDecl 0x559bb185ddd8 <line:381:3> col:3 PTHREAD_CANCEL_DEFERRED 'int'
| `-EnumConstantDecl 0x559bb185de28 <line:382:3> col:3 PTHREAD_CANCEL_ASYNCHRONOUS 'int'
|-FunctionDecl 0x559bb185e488 <line:385:1, line:388:96> line:385:12 used pthread_create 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' extern
| |-ParmVarDecl 0x559bb185df20 <col:28, col:50> col:50 __newthread 'pthread_t *restrict'
| |-ParmVarDecl 0x559bb185e030 <line:386:7, col:40> col:40 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x559bb185e270 <line:387:7, col:39> col:15 __start_routine 'void *(*)(void *)'
| |-ParmVarDecl 0x559bb185e2f0 <line:388:7, col:24> col:24 __arg 'void *restrict'
| |-NoThrowAttr 0x559bb185e548 <col:47>
| |-NonNullAttr 0x559bb185e5a0 <col:77, col:94> 1 3
| `-CallbackAttr 0x559bb185e5d8 <line:385:12> Implicit 2 3
|-FunctionDecl 0x559bb185e700 <line:389:1, col:72> col:13 pthread_exit 'void (void *) __attribute__((noreturn))' extern
| `-ParmVarDecl 0x559bb185e630 <col:27, col:33> col:33 __retval 'void *'
|-FunctionDecl 0x559bb185e958 <line:390:1, col:64> col:12 pthread_join 'int (pthread_t, void **)' extern
| |-ParmVarDecl 0x559bb185e7b8 <col:26, col:36> col:36 __th 'pthread_t':'unsigned long'
| `-ParmVarDecl 0x559bb185e838 <col:42, col:49> col:49 __thread_return 'void **'
|-FunctionDecl 0x559bb185eb28 <line:391:1, col:83> col:12 pthread_detach 'int (pthread_t)' extern
| |-ParmVarDecl 0x559bb185ea18 <col:28, col:38> col:38 __th 'pthread_t':'unsigned long'
| `-NoThrowAttr 0x559bb185ebd0 <col:60>
|-FunctionDecl 0x559bb185ed20 <line:392:1, col:105> col:18 pthread_self 'pthread_t (void)' extern
| |-NoThrowAttr 0x559bb185edc0 <col:54>
| `-ConstAttr 0x559bb185ee18 <col:95>
|-FunctionDecl 0x559bb185efe8 <line:393:1, line:394:70> line:393:12 pthread_equal 'int (pthread_t, pthread_t)' extern
| |-ParmVarDecl 0x559bb185ee50 <col:27, col:37> col:37 __thread1 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x559bb185eec8 <col:48, col:58> col:58 __thread2 'pthread_t':'unsigned long'
| |-NoThrowAttr 0x559bb185f098 <line:394:19>
| `-ConstAttr 0x559bb185f0f0 <col:60>
|-FunctionDecl 0x559bb1860b08 <line:395:1, col:128> col:12 pthread_attr_init 'int (pthread_attr_t *)' extern
| |-ParmVarDecl 0x559bb18609d0 <col:31, col:47> col:47 __attr 'pthread_attr_t *'
| |-NoThrowAttr 0x559bb1860bb0 <col:71>
| `-NonNullAttr 0x559bb1860c08 <col:112, col:126> 1
|-FunctionDecl 0x559bb1860d10 <line:396:1, line:397:79> line:396:12 pthread_attr_destroy 'int (pthread_attr_t *)' extern
| |-ParmVarDecl 0x559bb1860c58 <col:34, col:50> col:50 __attr 'pthread_attr_t *'
| |-NoThrowAttr 0x559bb1860db8 <line:397:22>
| `-NonNullAttr 0x559bb1860e10 <col:63, col:77> 1
|-FunctionDecl 0x559bb1861038 <line:398:1, line:400:82> line:398:12 pthread_attr_getdetachstate 'int (const pthread_attr_t *, int *)' extern
| |-ParmVarDecl 0x559bb1860e58 <col:41, col:63> col:63 __attr 'const pthread_attr_t *'
| |-ParmVarDecl 0x559bb1860ed8 <line:399:6, col:11> col:11 __detachstate 'int *'
| |-NoThrowAttr 0x559bb18610e8 <line:400:22>
| `-NonNullAttr 0x559bb1861140 <col:63, col:80> 1 2
|-FunctionDecl 0x559bb1861348 <line:401:1, line:403:79> line:401:12 pthread_attr_setdetachstate 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x559bb1861188 <col:41, col:57> col:57 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x559bb1861208 <line:402:6, col:10> col:10 __detachstate 'int'
| |-NoThrowAttr 0x559bb18613f8 <line:403:22>
| `-NonNullAttr 0x559bb1861450 <col:63, col:77> 1
|-FunctionDecl 0x559bb18616a8 <line:404:1, line:406:82> line:404:12 pthread_attr_getguardsize 'int (const pthread_attr_t *, size_t *)' extern
| |-ParmVarDecl 0x559bb1861498 <col:39, col:61> col:61 __attr 'const pthread_attr_t *'
| |-ParmVarDecl 0x559bb1861540 <line:405:11, col:19> col:19 __guardsize 'size_t *'
| |-NoThrowAttr 0x559bb1861758 <line:406:22>
| `-NonNullAttr 0x559bb18617b0 <col:63, col:80> 1 2
|-FunctionDecl 0x559bb18629e8 <line:407:1, line:409:79> line:407:12 pthread_attr_setguardsize 'int (pthread_attr_t *, size_t)' extern
| |-ParmVarDecl 0x559bb18617f8 <col:39, col:55> col:55 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x559bb1861870 <line:408:11, col:18> col:18 __guardsize 'size_t':'unsigned long'
| |-NoThrowAttr 0x559bb1862a98 <line:409:22>
| `-NonNullAttr 0x559bb1862af0 <col:63, col:77> 1
|-FunctionDecl 0x559bb1862d28 <line:410:1, line:412:82> line:410:12 pthread_attr_getschedparam 'int (const pthread_attr_t *restrict, struct sched_param *restrict)' extern
| |-ParmVarDecl 0x559bb1862b38 <col:40, col:73> col:73 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x559bb1862bc8 <line:411:12, col:43> col:43 __param 'struct sched_param *restrict'
| |-NoThrowAttr 0x559bb1862dd8 <line:412:22>
| `-NonNullAttr 0x559bb1862e30 <col:63, col:80> 1 2
|-FunctionDecl 0x559bb1863068 <line:413:1, line:415:97> line:413:12 pthread_attr_setschedparam 'int (pthread_attr_t *restrict, const struct sched_param *restrict)' extern
| |-ParmVarDecl 0x559bb1862e78 <col:40, col:67> col:67 __attr 'pthread_attr_t *restrict'
| |-ParmVarDecl 0x559bb1862f08 <line:414:12, line:415:12> col:12 __param 'const struct sched_param *restrict'
| |-NoThrowAttr 0x559bb1863118 <col:37>
| `-NonNullAttr 0x559bb1863170 <col:78, col:95> 1 2
|-FunctionDecl 0x559bb1863358 <line:416:1, line:418:82> line:416:12 pthread_attr_getschedpolicy 'int (const pthread_attr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x559bb18631b8 <col:41, line:417:6> col:6 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x559bb1863238 <col:14, col:30> col:30 __policy 'int *restrict'
| |-NoThrowAttr 0x559bb1863408 <line:418:22>
| `-NonNullAttr 0x559bb1863460 <col:63, col:80> 1 2
|-FunctionDecl 0x559bb18635e8 <line:419:1, line:420:79> line:419:12 pthread_attr_setschedpolicy 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x559bb18634a8 <col:41, col:57> col:57 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x559bb1863528 <col:65, col:69> col:69 __policy 'int'
| |-NoThrowAttr 0x559bb1863698 <line:420:22>
| `-NonNullAttr 0x559bb18636f0 <col:63, col:77> 1
|-FunctionDecl 0x559bb1863898 <line:421:1, line:423:82> line:421:12 pthread_attr_getinheritsched 'int (const pthread_attr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x559bb1863738 <col:42, line:422:7> col:7 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x559bb18637b8 <col:15, col:31> col:31 __inherit 'int *restrict'
| |-NoThrowAttr 0x559bb1863948 <line:423:22>
| `-NonNullAttr 0x559bb18639c0 <col:63, col:80> 1 2
|-FunctionDecl 0x559bb1863b48 <line:424:1, line:426:79> line:424:12 pthread_attr_setinheritsched 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x559bb1863a08 <col:42, col:58> col:58 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x559bb1863a88 <line:425:7, col:11> col:11 __inherit 'int'
| |-NoThrowAttr 0x559bb1863bf8 <line:426:22>
| `-NonNullAttr 0x559bb1863c50 <col:63, col:77> 1
|-FunctionDecl 0x559bb1863df8 <line:427:1, line:429:82> line:427:12 pthread_attr_getscope 'int (const pthread_attr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x559bb1863c98 <col:35, col:68> col:68 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x559bb1863d18 <line:428:7, col:23> col:23 __scope 'int *restrict'
| |-NoThrowAttr 0x559bb1863ea8 <line:429:22>
| `-NonNullAttr 0x559bb1863f00 <col:63, col:80> 1 2
|-FunctionDecl 0x559bb1864088 <line:430:1, line:431:79> line:430:12 pthread_attr_setscope 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x559bb1863f48 <col:35, col:51> col:51 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x559bb1863fc8 <col:59, col:63> col:63 __scope 'int'
| |-NoThrowAttr 0x559bb1864138 <line:431:22>
| `-NonNullAttr 0x559bb1864190 <col:63, col:77> 1
|-FunctionDecl 0x559bb18643b8 <line:432:1, line:434:115> line:432:12 pthread_attr_getstackaddr 'int (const pthread_attr_t *restrict, void **restrict)' extern
| |-ParmVarDecl 0x559bb18641d8 <col:39, line:433:11> col:11 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x559bb1864258 <col:19, col:37> col:37 __stackaddr 'void **restrict'
| |-NoThrowAttr 0x559bb1864468 <line:434:22>
| |-NonNullAttr 0x559bb18644c0 <col:63, col:80> 1 2
| `-DeprecatedAttr 0x559bb18644f8 <col:100> "" ""
|-FunctionDecl 0x559bb1864708 <line:435:1, line:437:112> line:435:12 pthread_attr_setstackaddr 'int (pthread_attr_t *, void *)' extern
| |-ParmVarDecl 0x559bb1864548 <col:39, col:55> col:55 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x559bb18645c8 <line:436:11, col:17> col:17 __stackaddr 'void *'
| |-NoThrowAttr 0x559bb18647b8 <line:437:22>
| |-NonNullAttr 0x559bb1864810 <col:63, col:77> 1
| `-DeprecatedAttr 0x559bb1864848 <col:97> "" ""
|-FunctionDecl 0x559bb1864a48 <line:438:1, line:440:82> line:438:12 pthread_attr_getstacksize 'int (const pthread_attr_t *restrict, size_t *restrict)' extern
| |-ParmVarDecl 0x559bb1864898 <col:39, line:439:11> col:11 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x559bb1864910 <col:19, col:38> col:38 __stacksize 'size_t *restrict'
| |-NoThrowAttr 0x559bb1864af8 <line:440:22>
| `-NonNullAttr 0x559bb1864b50 <col:63, col:80> 1 2
|-FunctionDecl 0x559bb1864cd0 <line:441:1, line:443:79> line:441:12 pthread_attr_setstacksize 'int (pthread_attr_t *, size_t)' extern
| |-ParmVarDecl 0x559bb1864b98 <col:39, col:55> col:55 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x559bb1864c10 <line:442:11, col:18> col:18 __stacksize 'size_t':'unsigned long'
| |-NoThrowAttr 0x559bb1864d80 <line:443:22>
| `-NonNullAttr 0x559bb1864dd8 <col:63, col:77> 1
|-FunctionDecl 0x559bb18650c8 <line:444:1, line:447:85> line:444:12 pthread_attr_getstack 'int (const pthread_attr_t *restrict, void **restrict, size_t *restrict)' extern
| |-ParmVarDecl 0x559bb1864e28 <col:35, col:68> col:68 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x559bb1864ea8 <line:445:7, col:25> col:25 __stackaddr 'void **restrict'
| |-ParmVarDecl 0x559bb1864f20 <line:446:7, col:26> col:26 __stacksize 'size_t *restrict'
| |-NoThrowAttr 0x559bb1865180 <line:447:22>
| `-NonNullAttr 0x559bb18651d8 <col:63, col:83> 1 2 3
|-FunctionDecl 0x559bb1865488 <line:448:1, line:449:100> line:448:12 pthread_attr_setstack 'int (pthread_attr_t *, void *, size_t)' extern
| |-ParmVarDecl 0x559bb1865230 <col:35, col:51> col:51 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x559bb18652b0 <col:59, col:65> col:65 __stackaddr 'void *'
| |-ParmVarDecl 0x559bb1865328 <line:449:7, col:14> col:14 __stacksize 'size_t':'unsigned long'
| |-NoThrowAttr 0x559bb1865540 <col:43>
| `-NonNullAttr 0x559bb1865598 <col:84, col:98> 1
|-FunctionDecl 0x559bb1865858 <line:450:1, line:452:79> line:450:12 pthread_setschedparam 'int (pthread_t, int, const struct sched_param *)' extern
| |-ParmVarDecl 0x559bb18655e8 <col:35, col:45> col:45 __target_thread 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x559bb1865668 <col:62, col:66> col:66 __policy 'int'
| |-ParmVarDecl 0x559bb18656f8 <line:451:7, col:33> col:33 __param 'const struct sched_param *'
| |-NoThrowAttr 0x559bb1865910 <line:452:22>
| `-NonNullAttr 0x559bb1865968 <col:63, col:77> 3
|-FunctionDecl 0x559bb1865c78 <line:453:1, line:456:82> line:453:12 pthread_getschedparam 'int (pthread_t, int *restrict, struct sched_param *restrict)' extern
| |-ParmVarDecl 0x559bb18659e0 <col:35, col:45> col:45 __target_thread 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x559bb1865a60 <line:454:7, col:23> col:23 __policy 'int *restrict'
| |-ParmVarDecl 0x559bb1865af0 <line:455:7, col:38> col:38 __param 'struct sched_param *restrict'
| |-NoThrowAttr 0x559bb1865d30 <line:456:22>
| `-NonNullAttr 0x559bb1865d88 <col:63, col:80> 2 3
|-FunctionDecl 0x559bb1865f78 <line:457:1, line:458:45> line:457:12 pthread_setschedprio 'int (pthread_t, int)' extern
| |-ParmVarDecl 0x559bb1865dd8 <col:34, col:44> col:44 __target_thread 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x559bb1865e58 <col:61, col:65> col:65 __prio 'int'
| `-NoThrowAttr 0x559bb1866028 <line:458:22>
|-FunctionDecl 0x559bb18663f8 <line:459:1, line:460:71> line:459:12 pthread_once 'int (pthread_once_t *, void (*)(void))' extern
| |-ParmVarDecl 0x559bb18660f0 <col:26, col:42> col:42 __once_control 'pthread_once_t *'
| |-ParmVarDecl 0x559bb1866290 <line:460:5, col:33> col:12 __init_routine 'void (*)(void)'
| `-NonNullAttr 0x559bb18664a8 <col:52, col:69> 1 2
|-FunctionDecl 0x559bb1866650 <line:461:1, col:64> col:12 pthread_setcancelstate 'int (int, int *)' extern
| |-ParmVarDecl 0x559bb1866530 <col:36, col:40> col:40 __state 'int'
| `-ParmVarDecl 0x559bb18665b0 <col:49, col:54> col:54 __oldstate 'int *'
|-FunctionDecl 0x559bb1866838 <line:462:1, col:61> col:12 pthread_setcanceltype 'int (int, int *)' extern
| |-ParmVarDecl 0x559bb1866718 <col:35, col:39> col:39 __type 'int'
| `-ParmVarDecl 0x559bb1866798 <col:47, col:52> col:52 __oldtype 'int *'
|-FunctionDecl 0x559bb18669f0 <line:463:1, col:42> col:12 pthread_cancel 'int (pthread_t)' extern
| `-ParmVarDecl 0x559bb18668f8 <col:28, col:38> col:38 __th 'pthread_t':'unsigned long'
|-FunctionDecl 0x559bb1866b30 <line:464:1, col:37> col:13 pthread_testcancel 'void (void)' extern
|-RecordDecl 0x559bb1866bd0 <line:465:9, line:473:1> line:465:9 struct definition
| |-RecordDecl 0x559bb1866c78 <line:467:3, line:471:3> line:467:3 struct definition
| | |-FieldDecl 0x559bb1866d68 <line:469:5, col:15> col:15 __cancel_jmp_buf '__jmp_buf':'long [8]'
| | `-FieldDecl 0x559bb1866dd0 <line:470:5, col:9> col:9 __mask_was_saved 'int'
| |-FieldDecl 0x559bb1866fa0 <line:467:3, line:471:23> col:5 __cancel_jmp_buf 'struct (anonymous struct at ./split_9/mix039_tso.oepc_false-unreach-call.i:467:3) [1]'
| `-FieldDecl 0x559bb1867098 <line:472:3, col:16> col:9 __pad 'void *[4]'
|-TypedefDecl 0x559bb1867150 <line:465:1, line:473:3> col:3 referenced __pthread_unwind_buf_t 'struct __pthread_unwind_buf_t':'__pthread_unwind_buf_t'
| |-ElaboratedType 0x559bb18670f0 'struct __pthread_unwind_buf_t' sugar
| | `-RecordType 0x559bb1866c50 '__pthread_unwind_buf_t'
| |   `-Record 0x559bb1866bd0 ''
| `-AlignedAttr 0x559bb18671a8 <col:42> aligned
|   `-<<<NULL>>>
|-RecordDecl 0x559bb1867220 <line:474:1, line:480:1> line:474:8 struct __pthread_cleanup_frame definition
| |-FieldDecl 0x559bb1867380 <line:476:3, col:35> col:10 __cancel_routine 'void (*)(void *)'
| |-FieldDecl 0x559bb18673e8 <line:477:3, col:9> col:9 __cancel_arg 'void *'
| |-FieldDecl 0x559bb1867450 <line:478:3, col:7> col:7 __do_it 'int'
| `-FieldDecl 0x559bb18674b8 <line:479:3, col:7> col:7 __cancel_type 'int'
|-FunctionDecl 0x559bb18676c0 <line:481:1, col:69> col:13 __pthread_register_cancel 'void (__pthread_unwind_buf_t *)' extern
| `-ParmVarDecl 0x559bb18675b0 <col:40, col:64> col:64 __buf '__pthread_unwind_buf_t *'
|-FunctionDecl 0x559bb1867808 <line:483:1, col:71> col:13 __pthread_unregister_cancel 'void (__pthread_unwind_buf_t *)' extern
| `-ParmVarDecl 0x559bb1867778 <col:42, col:66> col:66 __buf '__pthread_unwind_buf_t *'
|-FunctionDecl 0x559bb1867a00 <line:485:1, line:487:31> line:485:13 __pthread_unwind_next 'void (__pthread_unwind_buf_t *) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x559bb18678c0 <col:36, col:60> col:60 __buf '__pthread_unwind_buf_t *'
| `-WeakAttr 0x559bb1867aa8 <line:487:22>
|-RecordDecl 0x559bb1867b00 <line:489:1, col:8> col:8 struct __jmp_buf_tag
|-FunctionDecl 0x559bb1867e18 <line:490:1, col:98> col:12 __sigsetjmp 'int (struct __jmp_buf_tag *, int)' extern
| |-ParmVarDecl 0x559bb1867c78 <col:25, col:47> col:47 __env 'struct __jmp_buf_tag *'
| |-ParmVarDecl 0x559bb1867cf8 <col:54, col:58> col:58 __savemask 'int'
| |-NoThrowAttr 0x559bb1867ec8 <col:86>
| `-ReturnsTwiceAttr 0x559bb1867f20 <col:12> Implicit
|-FunctionDecl 0x559bb1868248 <line:491:1, line:493:79> line:491:12 pthread_mutex_init 'int (pthread_mutex_t *, const pthread_mutexattr_t *)' extern
| |-ParmVarDecl 0x559bb1867ff0 <col:32, col:49> col:49 __mutex 'pthread_mutex_t *'
| |-ParmVarDecl 0x559bb1868100 <line:492:11, col:38> col:38 __mutexattr 'const pthread_mutexattr_t *'
| |-NoThrowAttr 0x559bb18682f8 <line:493:22>
| `-NonNullAttr 0x559bb1868350 <col:63, col:77> 1
|-FunctionDecl 0x559bb18684c8 <line:494:1, line:495:79> line:494:12 pthread_mutex_destroy 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x559bb1868398 <col:35, col:52> col:52 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x559bb1868570 <line:495:22>
| `-NonNullAttr 0x559bb18685c8 <col:63, col:77> 1
|-FunctionDecl 0x559bb18686d0 <line:496:1, line:497:68> line:496:12 pthread_mutex_trylock 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x559bb1868618 <col:35, col:52> col:52 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x559bb1868778 <line:497:22>
| `-NonNullAttr 0x559bb18687d0 <col:52, col:66> 1
|-FunctionDecl 0x559bb18688d0 <line:498:1, line:499:68> line:498:12 pthread_mutex_lock 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x559bb1868818 <col:32, col:49> col:49 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x559bb1868978 <line:499:22>
| `-NonNullAttr 0x559bb18689d0 <col:52, col:66> 1
|-FunctionDecl 0x559bb1869c28 <line:500:1, line:502:85> line:500:12 pthread_mutex_timedlock 'int (pthread_mutex_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x559bb1869a38 <col:37, col:65> col:65 __mutex 'pthread_mutex_t *restrict'
| |-ParmVarDecl 0x559bb1869ac8 <line:501:9, line:502:9> col:9 __abstime 'const struct timespec *restrict'
| |-NoThrowAttr 0x559bb1869cd8 <col:36>
| `-NonNullAttr 0x559bb1869d30 <col:66, col:83> 1 2
|-FunctionDecl 0x559bb1869e30 <line:503:1, line:504:68> line:503:12 pthread_mutex_unlock 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x559bb1869d78 <col:34, col:51> col:51 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x559bb1869ed8 <line:504:22>
| `-NonNullAttr 0x559bb1869f30 <col:52, col:66> 1
|-FunctionDecl 0x559bb186a1c8 <line:505:1, line:508:82> line:505:12 pthread_mutex_getprioceiling 'int (const pthread_mutex_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x559bb1869fe0 <col:42, line:506:18> col:18 __mutex 'const pthread_mutex_t *restrict'
| |-ParmVarDecl 0x559bb186a060 <line:507:7, col:23> col:23 __prioceiling 'int *restrict'
| |-NoThrowAttr 0x559bb186a278 <line:508:22>
| `-NonNullAttr 0x559bb186a2d0 <col:63, col:80> 1 2
|-FunctionDecl 0x559bb186a598 <line:509:1, line:512:82> line:509:12 pthread_mutex_setprioceiling 'int (pthread_mutex_t *restrict, int, int *restrict)' extern
| |-ParmVarDecl 0x559bb186a318 <col:42, col:70> col:70 __mutex 'pthread_mutex_t *restrict'
| |-ParmVarDecl 0x559bb186a398 <line:510:7, col:11> col:11 __prioceiling 'int'
| |-ParmVarDecl 0x559bb186a418 <line:511:7, col:23> col:23 __old_ceiling 'int *restrict'
| |-NoThrowAttr 0x559bb186a650 <line:512:22>
| `-NonNullAttr 0x559bb186a6a8 <col:63, col:80> 1 3
|-FunctionDecl 0x559bb186a7b0 <line:513:1, line:514:79> line:513:12 pthread_mutex_consistent 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x559bb186a6f8 <col:38, col:55> col:55 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x559bb186a858 <line:514:22>
| `-NonNullAttr 0x559bb186a8b0 <col:63, col:77> 1
|-FunctionDecl 0x559bb186aad8 <line:515:1, line:516:79> line:515:12 pthread_mutexattr_init 'int (pthread_mutexattr_t *)' extern
| |-ParmVarDecl 0x559bb186a960 <col:36, col:57> col:57 __attr 'pthread_mutexattr_t *'
| |-NoThrowAttr 0x559bb186ab80 <line:516:22>
| `-NonNullAttr 0x559bb186abd8 <col:63, col:77> 1
|-FunctionDecl 0x559bb186ace0 <line:517:1, line:518:79> line:517:12 pthread_mutexattr_destroy 'int (pthread_mutexattr_t *)' extern
| |-ParmVarDecl 0x559bb186ac28 <col:39, col:60> col:60 __attr 'pthread_mutexattr_t *'
| |-NoThrowAttr 0x559bb186ad88 <line:518:22>
| `-NonNullAttr 0x559bb186ade0 <col:63, col:77> 1
|-FunctionDecl 0x559bb186b008 <line:519:1, line:522:82> line:519:12 pthread_mutexattr_getpshared 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x559bb186ae28 <col:42, line:520:18> col:18 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x559bb186aea8 <line:521:7, col:23> col:23 __pshared 'int *restrict'
| |-NoThrowAttr 0x559bb186b0b8 <line:522:22>
| `-NonNullAttr 0x559bb186b110 <col:63, col:80> 1 2
|-FunctionDecl 0x559bb186b318 <line:523:1, line:525:79> line:523:12 pthread_mutexattr_setpshared 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x559bb186b158 <col:42, col:63> col:63 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x559bb186b1d8 <line:524:7, col:11> col:11 __pshared 'int'
| |-NoThrowAttr 0x559bb186b3c8 <line:525:22>
| `-NonNullAttr 0x559bb186b420 <col:63, col:77> 1
|-FunctionDecl 0x559bb186b5c8 <line:526:1, line:528:82> line:526:12 pthread_mutexattr_gettype 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x559bb186b468 <col:39, line:527:11> col:11 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x559bb186b4e8 <col:19, col:35> col:35 __kind 'int *restrict'
| |-NoThrowAttr 0x559bb186b678 <line:528:22>
| `-NonNullAttr 0x559bb186b6d0 <col:63, col:80> 1 2
|-FunctionDecl 0x559bb186b858 <line:529:1, line:530:79> line:529:12 pthread_mutexattr_settype 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x559bb186b718 <col:39, col:60> col:60 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x559bb186b798 <col:68, col:72> col:72 __kind 'int'
| |-NoThrowAttr 0x559bb186b908 <line:530:22>
| `-NonNullAttr 0x559bb186b960 <col:63, col:77> 1
|-FunctionDecl 0x559bb186bb20 <line:531:1, line:534:82> line:531:12 pthread_mutexattr_getprotocol 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x559bb186b9a8 <col:43, line:532:19> col:19 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x559bb186ba40 <line:533:8, col:24> col:24 __protocol 'int *restrict'
| |-NoThrowAttr 0x559bb186bbd0 <line:534:22>
| `-NonNullAttr 0x559bb186bc28 <col:63, col:80> 1 2
|-FunctionDecl 0x559bb186bdb8 <line:535:1, line:537:79> line:535:12 pthread_mutexattr_setprotocol 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x559bb186bc78 <col:43, col:64> col:64 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x559bb186bcf8 <line:536:8, col:12> col:12 __protocol 'int'
| |-NoThrowAttr 0x559bb186be68 <line:537:22>
| `-NonNullAttr 0x559bb186bec0 <col:63, col:77> 1
|-FunctionDecl 0x559bb186c068 <line:538:1, line:541:82> line:538:12 pthread_mutexattr_getprioceiling 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x559bb186bf08 <col:46, line:539:22> col:22 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x559bb186bf88 <line:540:11, col:27> col:27 __prioceiling 'int *restrict'
| |-NoThrowAttr 0x559bb186c118 <line:541:22>
| `-NonNullAttr 0x559bb186c170 <col:63, col:80> 1 2
|-FunctionDecl 0x559bb186c2f8 <line:542:1, line:544:79> line:542:12 pthread_mutexattr_setprioceiling 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x559bb186c1b8 <col:46, col:67> col:67 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x559bb186c238 <line:543:11, col:15> col:15 __prioceiling 'int'
| |-NoThrowAttr 0x559bb186c3a8 <line:544:22>
| `-NonNullAttr 0x559bb186c400 <col:63, col:77> 1
|-FunctionDecl 0x559bb186c5e8 <line:545:1, line:547:82> line:545:12 pthread_mutexattr_getrobust 'int (const pthread_mutexattr_t *, int *)' extern
| |-ParmVarDecl 0x559bb186c448 <col:41, col:68> col:68 __attr 'const pthread_mutexattr_t *'
| |-ParmVarDecl 0x559bb186c4c8 <line:546:6, col:11> col:11 __robustness 'int *'
| |-NoThrowAttr 0x559bb186c698 <line:547:22>
| `-NonNullAttr 0x559bb186c6f0 <col:63, col:80> 1 2
|-FunctionDecl 0x559bb186c878 <line:548:1, line:550:79> line:548:12 pthread_mutexattr_setrobust 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x559bb186c738 <col:41, col:62> col:62 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x559bb186c7b8 <line:549:6, col:10> col:10 __robustness 'int'
| |-NoThrowAttr 0x559bb186c928 <line:550:22>
| `-NonNullAttr 0x559bb186c980 <col:63, col:77> 1
|-FunctionDecl 0x559bb186dcf8 <line:551:1, line:553:86> line:551:12 pthread_rwlock_init 'int (pthread_rwlock_t *restrict, const pthread_rwlockattr_t *restrict)' extern
| |-ParmVarDecl 0x559bb186daa0 <col:33, col:62> col:62 __rwlock 'pthread_rwlock_t *restrict'
| |-ParmVarDecl 0x559bb186dbb0 <line:552:5, line:553:5> col:5 __attr 'const pthread_rwlockattr_t *restrict'
| |-NoThrowAttr 0x559bb186dda8 <col:29>
| `-NonNullAttr 0x559bb186de00 <col:70, col:84> 1
|-FunctionDecl 0x559bb186df78 <line:554:1, line:555:79> line:554:12 pthread_rwlock_destroy 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x559bb186de48 <col:36, col:54> col:54 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x559bb186e020 <line:555:22>
| `-NonNullAttr 0x559bb186e078 <col:63, col:77> 1
|-FunctionDecl 0x559bb186e180 <line:556:1, line:557:68> line:556:12 pthread_rwlock_rdlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x559bb186e0c8 <col:35, col:53> col:53 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x559bb186e228 <line:557:22>
| `-NonNullAttr 0x559bb186e280 <col:52, col:66> 1
|-FunctionDecl 0x559bb186e380 <line:558:1, line:559:65> line:558:12 pthread_rwlock_tryrdlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x559bb186e2c8 <col:38, col:56> col:56 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x559bb186e428 <line:559:19>
| `-NonNullAttr 0x559bb186e480 <col:49, col:63> 1
|-FunctionDecl 0x559bb186e6b8 <line:560:1, line:562:88> line:560:12 pthread_rwlock_timedrdlock 'int (pthread_rwlock_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x559bb186e4c8 <col:40, col:69> col:69 __rwlock 'pthread_rwlock_t *restrict'
| |-ParmVarDecl 0x559bb186e558 <line:561:12, line:562:12> col:12 __abstime 'const struct timespec *restrict'
| |-NoThrowAttr 0x559bb186e768 <col:39>
| `-NonNullAttr 0x559bb186e7c0 <col:69, col:86> 1 2
|-FunctionDecl 0x559bb186e8c0 <line:563:1, line:564:68> line:563:12 pthread_rwlock_wrlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x559bb186e808 <col:35, col:53> col:53 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x559bb186e968 <line:564:22>
| `-NonNullAttr 0x559bb186e9c0 <col:52, col:66> 1
|-FunctionDecl 0x559bb186eb28 <line:565:1, line:566:68> line:565:12 pthread_rwlock_trywrlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x559bb186ea70 <col:38, col:56> col:56 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x559bb186ebd0 <line:566:22>
| `-NonNullAttr 0x559bb186ec28 <col:52, col:66> 1
|-FunctionDecl 0x559bb186ede8 <line:567:1, line:569:88> line:567:12 pthread_rwlock_timedwrlock 'int (pthread_rwlock_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x559bb186ec78 <col:40, col:69> col:69 __rwlock 'pthread_rwlock_t *restrict'
| |-ParmVarDecl 0x559bb186ed08 <line:568:12, line:569:12> col:12 __abstime 'const struct timespec *restrict'
| |-NoThrowAttr 0x559bb186ee98 <col:39>
| `-NonNullAttr 0x559bb186eef0 <col:69, col:86> 1 2
|-FunctionDecl 0x559bb186eff0 <line:570:1, line:571:68> line:570:12 pthread_rwlock_unlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x559bb186ef38 <col:35, col:53> col:53 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x559bb186f098 <line:571:22>
| `-NonNullAttr 0x559bb186f0f0 <col:52, col:66> 1
|-FunctionDecl 0x559bb186f2d8 <line:572:1, line:573:79> line:572:12 pthread_rwlockattr_init 'int (pthread_rwlockattr_t *)' extern
| |-ParmVarDecl 0x559bb186f1a0 <col:37, col:59> col:59 __attr 'pthread_rwlockattr_t *'
| |-NoThrowAttr 0x559bb186f380 <line:573:22>
| `-NonNullAttr 0x559bb186f3d8 <col:63, col:77> 1
|-FunctionDecl 0x559bb186f4e0 <line:574:1, line:575:79> line:574:12 pthread_rwlockattr_destroy 'int (pthread_rwlockattr_t *)' extern
| |-ParmVarDecl 0x559bb186f428 <col:40, col:62> col:62 __attr 'pthread_rwlockattr_t *'
| |-NoThrowAttr 0x559bb186f588 <line:575:22>
| `-NonNullAttr 0x559bb186f5e0 <col:63, col:77> 1
|-FunctionDecl 0x559bb186f808 <line:576:1, line:579:82> line:576:12 pthread_rwlockattr_getpshared 'int (const pthread_rwlockattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x559bb186f628 <col:43, line:577:19> col:19 __attr 'const pthread_rwlockattr_t *restrict'
| |-ParmVarDecl 0x559bb186f6a8 <line:578:8, col:24> col:24 __pshared 'int *restrict'
| |-NoThrowAttr 0x559bb186f8b8 <line:579:22>
| `-NonNullAttr 0x559bb186f910 <col:63, col:80> 1 2
|-FunctionDecl 0x559bb186fb38 <line:580:1, line:582:79> line:580:12 pthread_rwlockattr_setpshared 'int (pthread_rwlockattr_t *, int)' extern
| |-ParmVarDecl 0x559bb186f958 <col:43, col:65> col:65 __attr 'pthread_rwlockattr_t *'
| |-ParmVarDecl 0x559bb186f9d8 <line:581:8, col:12> col:12 __pshared 'int'
| |-NoThrowAttr 0x559bb186fbe8 <line:582:22>
| `-NonNullAttr 0x559bb186fc40 <col:63, col:77> 1
|-FunctionDecl 0x559bb186fde8 <line:583:1, line:586:82> line:583:12 pthread_rwlockattr_getkind_np 'int (const pthread_rwlockattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x559bb186fc88 <col:43, line:584:19> col:19 __attr 'const pthread_rwlockattr_t *restrict'
| |-ParmVarDecl 0x559bb186fd08 <line:585:8, col:24> col:24 __pref 'int *restrict'
| |-NoThrowAttr 0x559bb186fe98 <line:586:22>
| `-NonNullAttr 0x559bb186fef0 <col:63, col:80> 1 2
|-FunctionDecl 0x559bb1870078 <line:587:1, line:588:93> line:587:12 pthread_rwlockattr_setkind_np 'int (pthread_rwlockattr_t *, int)' extern
| |-ParmVarDecl 0x559bb186ff38 <col:43, col:65> col:65 __attr 'pthread_rwlockattr_t *'
| |-ParmVarDecl 0x559bb186ffb8 <line:588:8, col:12> col:12 __pref 'int'
| |-NoThrowAttr 0x559bb1870128 <col:36>
| `-NonNullAttr 0x559bb1870180 <col:77, col:91> 1
|-FunctionDecl 0x559bb18704b8 <line:589:1, line:591:79> line:589:12 pthread_cond_init 'int (pthread_cond_t *restrict, const pthread_condattr_t *restrict)' extern
| |-ParmVarDecl 0x559bb1870260 <col:31, col:58> col:58 __cond 'pthread_cond_t *restrict'
| |-ParmVarDecl 0x559bb1870370 <line:590:10, col:47> col:47 __cond_attr 'const pthread_condattr_t *restrict'
| |-NoThrowAttr 0x559bb1870568 <line:591:22>
| `-NonNullAttr 0x559bb18705c0 <col:63, col:77> 1
|-FunctionDecl 0x559bb1870738 <line:592:1, line:593:79> line:592:12 pthread_cond_destroy 'int (pthread_cond_t *)' extern
| |-ParmVarDecl 0x559bb1870608 <col:34, col:50> col:50 __cond 'pthread_cond_t *'
| |-NoThrowAttr 0x559bb18707e0 <line:593:22>
| `-NonNullAttr 0x559bb1870838 <col:63, col:77> 1
|-FunctionDecl 0x559bb1870940 <line:594:1, line:595:68> line:594:12 pthread_cond_signal 'int (pthread_cond_t *)' extern
| |-ParmVarDecl 0x559bb1870888 <col:33, col:49> col:49 __cond 'pthread_cond_t *'
| |-NoThrowAttr 0x559bb18709e8 <line:595:22>
| `-NonNullAttr 0x559bb1870a40 <col:52, col:66> 1
|-FunctionDecl 0x559bb1870b58 <line:596:1, line:597:68> line:596:12 pthread_cond_broadcast 'int (pthread_cond_t *)' extern
| |-ParmVarDecl 0x559bb1870aa0 <col:36, col:52> col:52 __cond 'pthread_cond_t *'
| |-NoThrowAttr 0x559bb1870c00 <line:597:22>
| `-NonNullAttr 0x559bb1870c58 <col:52, col:66> 1
|-FunctionDecl 0x559bb1870e88 <line:598:1, line:600:41> line:598:12 pthread_cond_wait 'int (pthread_cond_t *restrict, pthread_mutex_t *restrict)' extern
| |-ParmVarDecl 0x559bb1870ca8 <col:31, col:58> col:58 __cond 'pthread_cond_t *restrict'
| |-ParmVarDecl 0x559bb1870d20 <line:599:10, col:38> col:38 __mutex 'pthread_mutex_t *restrict'
| `-NonNullAttr 0x559bb1870f38 <line:600:22, col:39> 1 2
|-FunctionDecl 0x559bb1871268 <line:601:1, line:604:44> line:601:12 pthread_cond_timedwait 'int (pthread_cond_t *restrict, pthread_mutex_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x559bb1870fb8 <col:36, col:63> col:63 __cond 'pthread_cond_t *restrict'
| |-ParmVarDecl 0x559bb1871030 <line:602:8, col:36> col:36 __mutex 'pthread_mutex_t *restrict'
| |-ParmVarDecl 0x559bb18710c0 <line:603:8, col:42> col:42 __abstime 'const struct timespec *restrict'
| `-NonNullAttr 0x559bb1871320 <line:604:22, col:42> 1 2 3
|-FunctionDecl 0x559bb1871538 <line:605:1, line:606:79> line:605:12 pthread_condattr_init 'int (pthread_condattr_t *)' extern
| |-ParmVarDecl 0x559bb1871400 <col:35, col:55> col:55 __attr 'pthread_condattr_t *'
| |-NoThrowAttr 0x559bb18715e0 <line:606:22>
| `-NonNullAttr 0x559bb1871638 <col:63, col:77> 1
|-FunctionDecl 0x559bb1871740 <line:607:1, line:608:79> line:607:12 pthread_condattr_destroy 'int (pthread_condattr_t *)' extern
| |-ParmVarDecl 0x559bb1871688 <col:38, col:58> col:58 __attr 'pthread_condattr_t *'
| |-NoThrowAttr 0x559bb18717e8 <line:608:22>
| `-NonNullAttr 0x559bb1871840 <col:63, col:77> 1
|-FunctionDecl 0x559bb1871aa0 <line:609:1, line:612:82> line:609:12 pthread_condattr_getpshared 'int (const pthread_condattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x559bb1871888 <col:41, line:610:17> col:17 __attr 'const pthread_condattr_t *restrict'
| |-ParmVarDecl 0x559bb1871908 <line:611:6, col:22> col:22 __pshared 'int *restrict'
| |-NoThrowAttr 0x559bb1871b50 <line:612:22>
| `-NonNullAttr 0x559bb1871ba8 <col:63, col:80> 1 2
|-FunctionDecl 0x559bb1871db8 <line:613:1, line:614:94> line:613:12 pthread_condattr_setpshared 'int (pthread_condattr_t *, int)' extern
| |-ParmVarDecl 0x559bb1871bf8 <col:41, col:61> col:61 __attr 'pthread_condattr_t *'
| |-ParmVarDecl 0x559bb1871c78 <line:614:6, col:10> col:10 __pshared 'int'
| |-NoThrowAttr 0x559bb1871e68 <col:37>
| `-NonNullAttr 0x559bb1871ec0 <col:78, col:92> 1
|-FunctionDecl 0x559bb18720d8 <line:615:1, line:618:82> line:615:12 pthread_condattr_getclock 'int (const pthread_condattr_t *restrict, __clockid_t *restrict)' extern
| |-ParmVarDecl 0x559bb1871f08 <col:39, line:616:22> col:22 __attr 'const pthread_condattr_t *restrict'
| |-ParmVarDecl 0x559bb1871fb0 <line:617:11, col:35> col:35 __clock_id '__clockid_t *restrict'
| |-NoThrowAttr 0x559bb1872188 <line:618:22>
| `-NonNullAttr 0x559bb18721e0 <col:63, col:80> 1 2
|-FunctionDecl 0x559bb18723a8 <line:619:1, line:621:79> line:619:12 pthread_condattr_setclock 'int (pthread_condattr_t *, __clockid_t)' extern
| |-ParmVarDecl 0x559bb1872228 <col:39, col:59> col:59 __attr 'pthread_condattr_t *'
| |-ParmVarDecl 0x559bb18722a0 <line:620:11, col:23> col:23 __clock_id '__clockid_t':'int'
| |-NoThrowAttr 0x559bb1872458 <line:621:22>
| `-NonNullAttr 0x559bb18724b0 <col:63, col:77> 1
|-FunctionDecl 0x559bb1872758 <line:622:1, line:623:79> line:622:12 pthread_spin_init 'int (pthread_spinlock_t *, int)' extern
| |-ParmVarDecl 0x559bb1872590 <col:31, col:51> col:51 __lock 'pthread_spinlock_t *'
| |-ParmVarDecl 0x559bb1872610 <col:59, col:63> col:63 __pshared 'int'
| |-NoThrowAttr 0x559bb1872808 <line:623:22>
| `-NonNullAttr 0x559bb1872860 <col:63, col:77> 1
|-FunctionDecl 0x559bb18729d8 <line:624:1, line:625:79> line:624:12 pthread_spin_destroy 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x559bb18728a8 <col:34, col:54> col:54 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x559bb1872ab0 <line:625:22>
| `-NonNullAttr 0x559bb1872b08 <col:63, col:77> 1
|-FunctionDecl 0x559bb1872c10 <line:626:1, line:627:68> line:626:12 pthread_spin_lock 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x559bb1872b58 <col:31, col:51> col:51 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x559bb1872cb8 <line:627:22>
| `-NonNullAttr 0x559bb1872d10 <col:52, col:66> 1
|-FunctionDecl 0x559bb1872e10 <line:628:1, line:629:68> line:628:12 pthread_spin_trylock 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x559bb1872d58 <col:34, col:54> col:54 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x559bb1872eb8 <line:629:22>
| `-NonNullAttr 0x559bb1872f10 <col:52, col:66> 1
|-FunctionDecl 0x559bb1873010 <line:630:1, line:631:68> line:630:12 pthread_spin_unlock 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x559bb1872f58 <col:33, col:53> col:53 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x559bb18730b8 <line:631:22>
| `-NonNullAttr 0x559bb1873110 <col:52, col:66> 1
|-FunctionDecl 0x559bb18734e8 <line:632:1, line:635:79> line:632:12 pthread_barrier_init 'int (pthread_barrier_t *restrict, const pthread_barrierattr_t *restrict, unsigned int)' extern
| |-ParmVarDecl 0x559bb18731f0 <col:34, col:64> col:64 __barrier 'pthread_barrier_t *restrict'
| |-ParmVarDecl 0x559bb1873300 <line:633:6, line:634:6> col:6 __attr 'const pthread_barrierattr_t *restrict'
| |-ParmVarDecl 0x559bb1873380 <col:14, col:27> col:27 __count 'unsigned int'
| |-NoThrowAttr 0x559bb18735a0 <line:635:22>
| `-NonNullAttr 0x559bb18735f8 <col:63, col:77> 1
|-FunctionDecl 0x559bb1873778 <line:636:1, line:637:79> line:636:12 pthread_barrier_destroy 'int (pthread_barrier_t *)' extern
| |-ParmVarDecl 0x559bb1873648 <col:37, col:56> col:56 __barrier 'pthread_barrier_t *'
| |-NoThrowAttr 0x559bb1873820 <line:637:22>
| `-NonNullAttr 0x559bb1873878 <col:63, col:77> 1
|-FunctionDecl 0x559bb1873980 <line:638:1, line:639:68> line:638:12 pthread_barrier_wait 'int (pthread_barrier_t *)' extern
| |-ParmVarDecl 0x559bb18738c8 <col:34, col:53> col:53 __barrier 'pthread_barrier_t *'
| |-NoThrowAttr 0x559bb1873a28 <line:639:22>
| `-NonNullAttr 0x559bb1873a80 <col:52, col:66> 1
|-FunctionDecl 0x559bb1874c88 <line:640:1, line:641:79> line:640:12 pthread_barrierattr_init 'int (pthread_barrierattr_t *)' extern
| |-ParmVarDecl 0x559bb1874b50 <col:38, col:61> col:61 __attr 'pthread_barrierattr_t *'
| |-NoThrowAttr 0x559bb1874d30 <line:641:22>
| `-NonNullAttr 0x559bb1874d88 <col:63, col:77> 1
|-FunctionDecl 0x559bb1874e90 <line:642:1, line:643:79> line:642:12 pthread_barrierattr_destroy 'int (pthread_barrierattr_t *)' extern
| |-ParmVarDecl 0x559bb1874dd8 <col:41, col:64> col:64 __attr 'pthread_barrierattr_t *'
| |-NoThrowAttr 0x559bb1874f38 <line:643:22>
| `-NonNullAttr 0x559bb1874f90 <col:63, col:77> 1
|-FunctionDecl 0x559bb18751b8 <line:644:1, line:647:82> line:644:12 pthread_barrierattr_getpshared 'int (const pthread_barrierattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x559bb1874fd8 <col:44, line:645:20> col:20 __attr 'const pthread_barrierattr_t *restrict'
| |-ParmVarDecl 0x559bb1875058 <line:646:9, col:25> col:25 __pshared 'int *restrict'
| |-NoThrowAttr 0x559bb1875268 <line:647:22>
| `-NonNullAttr 0x559bb18752c0 <col:63, col:80> 1 2
|-FunctionDecl 0x559bb18754c8 <line:648:1, line:650:79> line:648:12 pthread_barrierattr_setpshared 'int (pthread_barrierattr_t *, int)' extern
| |-ParmVarDecl 0x559bb1875308 <col:44, col:67> col:67 __attr 'pthread_barrierattr_t *'
| |-ParmVarDecl 0x559bb1875388 <line:649:9, col:13> col:13 __pshared 'int'
| |-NoThrowAttr 0x559bb1875578 <line:650:22>
| `-NonNullAttr 0x559bb18755d0 <col:63, col:77> 1
|-FunctionDecl 0x559bb1875918 <line:651:1, line:653:79> line:651:12 pthread_key_create 'int (pthread_key_t *, void (*)(void *))' extern
| |-ParmVarDecl 0x559bb18756b0 <col:32, col:47> col:47 __key 'pthread_key_t *'
| |-ParmVarDecl 0x559bb18757d0 <line:652:11, col:43> col:18 __destr_function 'void (*)(void *)'
| |-NoThrowAttr 0x559bb18759c8 <line:653:22>
| `-NonNullAttr 0x559bb1875a20 <col:63, col:77> 1
|-FunctionDecl 0x559bb1875b88 <line:654:1, col:92> col:12 pthread_key_delete 'int (pthread_key_t)' extern
| |-ParmVarDecl 0x559bb1875a68 <col:32, col:46> col:46 __key 'pthread_key_t':'unsigned int'
| `-NoThrowAttr 0x559bb1875c30 <col:69>
|-FunctionDecl 0x559bb1875da8 <line:655:1, col:95> col:14 pthread_getspecific 'void *(pthread_key_t)' extern
| |-ParmVarDecl 0x559bb1875c98 <col:35, col:49> col:49 __key 'pthread_key_t':'unsigned int'
| `-NoThrowAttr 0x559bb1875e50 <col:72>
|-FunctionDecl 0x559bb1876088 <line:656:1, line:657:67> line:656:12 pthread_setspecific 'int (pthread_key_t, const void *)' extern
| |-ParmVarDecl 0x559bb1875eb8 <col:33, col:47> col:47 __key 'pthread_key_t':'unsigned int'
| |-ParmVarDecl 0x559bb1875f68 <line:657:5, col:17> col:17 __pointer 'const void *'
| `-NoThrowAttr 0x559bb1876138 <col:44>
|-FunctionDecl 0x559bb1876358 <line:658:1, line:660:79> line:658:12 pthread_getcpuclockid 'int (pthread_t, __clockid_t *)' extern
| |-ParmVarDecl 0x559bb18761a0 <col:35, col:45> col:45 __thread_id 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x559bb1876218 <line:659:7, col:20> col:20 __clock_id '__clockid_t *'
| |-NoThrowAttr 0x559bb1876408 <line:660:22>
| `-NonNullAttr 0x559bb1876460 <col:63, col:77> 2
|-FunctionDecl 0x559bb18768a8 <line:661:1, line:663:70> line:661:12 pthread_atfork 'int (void (*)(void), void (*)(void), void (*)(void))' extern
| |-ParmVarDecl 0x559bb1876540 <col:28, col:51> col:35 __prepare 'void (*)(void)'
| |-ParmVarDecl 0x559bb1876650 <line:662:7, col:29> col:14 __parent 'void (*)(void)'
| |-ParmVarDecl 0x559bb1876760 <line:663:7, col:28> col:14 __child 'void (*)(void)'
| `-NoThrowAttr 0x559bb1876960 <col:47>
|-FunctionDecl 0x559bb1876af0 <line:665:1, col:20> col:8 used P0 'void *(void *)'
| `-ParmVarDecl 0x559bb18769d0 <col:11, col:17> col:17 arg 'void *'
|-FunctionDecl 0x559bb1876c48 <line:666:1, col:20> col:8 used P1 'void *(void *)'
| `-ParmVarDecl 0x559bb1876bb0 <col:11, col:17> col:17 arg 'void *'
|-FunctionDecl 0x559bb1876da0 <line:667:1, col:20> col:8 used P2 'void *(void *)'
| `-ParmVarDecl 0x559bb1876d08 <col:11, col:17> col:17 arg 'void *'
|-FunctionDecl 0x559bb1876ef8 <line:668:1, col:20> col:8 used P3 'void *(void *)'
| `-ParmVarDecl 0x559bb1876e60 <col:11, col:17> col:17 arg 'void *'
|-FunctionDecl 0x559bb1876fc0 <line:669:1, col:12> col:6 fence 'void ()'
|-FunctionDecl 0x559bb1877080 <line:670:1, col:12> col:6 isync 'void ()'
|-FunctionDecl 0x559bb1877140 <line:671:1, col:14> col:6 lwfence 'void ()'
|-VarDecl 0x559bb18771f8 <line:672:1, col:5> col:5 used __unbuffered_cnt 'int'
|-VarDecl 0x559bb1877278 prev 0x559bb18771f8 <line:673:1, col:24> col:5 used __unbuffered_cnt 'int' cinit
| `-IntegerLiteral 0x559bb18772e0 <col:24> 'int' 0
|-VarDecl 0x559bb1877318 <line:674:1, col:5> col:5 used __unbuffered_p0_EAX 'int'
|-VarDecl 0x559bb1877398 prev 0x559bb1877318 <line:675:1, col:27> col:5 used __unbuffered_p0_EAX 'int' cinit
| `-IntegerLiteral 0x559bb1877400 <col:27> 'int' 0
|-VarDecl 0x559bb1877438 <line:676:1, col:5> col:5 used __unbuffered_p2_EAX 'int'
|-VarDecl 0x559bb18774b8 prev 0x559bb1877438 <line:677:1, col:27> col:5 used __unbuffered_p2_EAX 'int' cinit
| `-IntegerLiteral 0x559bb1877520 <col:27> 'int' 0
|-VarDecl 0x559bb1877558 <line:678:1, col:5> col:5 used __unbuffered_p3_EAX 'int'
|-VarDecl 0x559bb18775d8 prev 0x559bb1877558 <line:679:1, col:27> col:5 used __unbuffered_p3_EAX 'int' cinit
| `-IntegerLiteral 0x559bb1877640 <col:27> 'int' 0
|-VarDecl 0x559bb1877678 <line:680:1, col:5> col:5 used __unbuffered_p3_EBX 'int'
|-VarDecl 0x559bb18776f8 prev 0x559bb1877678 <line:681:1, col:27> col:5 used __unbuffered_p3_EBX 'int' cinit
| `-IntegerLiteral 0x559bb1877760 <col:27> 'int' 0
|-VarDecl 0x559bb1877798 <line:682:1, col:5> col:5 used a 'int'
|-VarDecl 0x559bb1877818 prev 0x559bb1877798 <line:683:1, col:9> col:5 used a 'int' cinit
| `-IntegerLiteral 0x559bb1877880 <col:9> 'int' 0
|-VarDecl 0x559bb18778b8 <line:684:1, col:5> col:5 used b 'int'
|-VarDecl 0x559bb1877938 prev 0x559bb18778b8 <line:685:1, col:9> col:5 used b 'int' cinit
| `-IntegerLiteral 0x559bb18779a0 <col:9> 'int' 0
|-VarDecl 0x559bb18779d0 <line:686:1, col:7> col:7 used b$flush_delayed '_Bool'
|-VarDecl 0x559bb1877a50 <line:687:1, col:5> col:5 used b$mem_tmp 'int'
|-VarDecl 0x559bb1877b00 <line:688:1, col:7> col:7 used b$r_buff0_thd0 '_Bool'
|-VarDecl 0x559bb1877b78 <line:689:1, col:7> col:7 used b$r_buff0_thd1 '_Bool'
|-VarDecl 0x559bb1877bf0 <line:690:1, col:7> col:7 used b$r_buff0_thd2 '_Bool'
|-VarDecl 0x559bb1877c68 <line:691:1, col:7> col:7 used b$r_buff0_thd3 '_Bool'
|-VarDecl 0x559bb1877ce0 <line:692:1, col:7> col:7 used b$r_buff0_thd4 '_Bool'
|-VarDecl 0x559bb1877d58 <line:693:1, col:7> col:7 used b$r_buff1_thd0 '_Bool'
|-VarDecl 0x559bb1877dd0 <line:694:1, col:7> col:7 used b$r_buff1_thd1 '_Bool'
|-VarDecl 0x559bb1877e48 <line:695:1, col:7> col:7 used b$r_buff1_thd2 '_Bool'
|-VarDecl 0x559bb1877ec0 <line:696:1, col:7> col:7 used b$r_buff1_thd3 '_Bool'
|-VarDecl 0x559bb1877f38 <line:697:1, col:7> col:7 used b$r_buff1_thd4 '_Bool'
|-VarDecl 0x559bb1877fb0 <line:698:1, col:7> col:7 b$read_delayed '_Bool'
|-VarDecl 0x559bb1878030 <line:699:1, col:6> col:6 b$read_delayed_var 'int *'
|-VarDecl 0x559bb18780b0 <line:700:1, col:5> col:5 used b$w_buff0 'int'
|-VarDecl 0x559bb1878128 <line:701:1, col:7> col:7 used b$w_buff0_used '_Bool'
|-VarDecl 0x559bb18781a8 <line:702:1, col:5> col:5 used b$w_buff1 'int'
|-VarDecl 0x559bb1878220 <line:703:1, col:7> col:7 used b$w_buff1_used '_Bool'
|-VarDecl 0x559bb1878298 <line:704:1, col:7> col:7 used main$tmp_guard0 '_Bool'
|-VarDecl 0x559bb1878310 <line:705:1, col:7> col:7 used main$tmp_guard1 '_Bool'
|-VarDecl 0x559bb1878390 <line:706:1, col:5> col:5 used x 'int'
|-VarDecl 0x559bb1878410 prev 0x559bb1878390 <line:707:1, col:9> col:5 used x 'int' cinit
| `-IntegerLiteral 0x559bb1878478 <col:9> 'int' 0
|-VarDecl 0x559bb18784b0 <line:708:1, col:5> col:5 used y 'int'
|-VarDecl 0x559bb1878530 prev 0x559bb18784b0 <line:709:1, col:9> col:5 used y 'int' cinit
| `-IntegerLiteral 0x559bb1878598 <col:9> 'int' 0
|-VarDecl 0x559bb18785d0 <line:710:1, col:5> col:5 used z 'int'
|-VarDecl 0x559bb1878650 prev 0x559bb18785d0 <line:711:1, col:9> col:5 used z 'int' cinit
| `-IntegerLiteral 0x559bb18786b8 <col:9> 'int' 0
|-VarDecl 0x559bb18786e8 <line:712:1, col:7> col:7 used weak$$choice0 '_Bool'
|-VarDecl 0x559bb1878760 <line:713:1, col:7> col:7 used weak$$choice2 '_Bool'
|-FunctionDecl 0x559bb1878878 prev 0x559bb1876af0 <line:714:1, line:743:1> line:714:8 used P0 'void *(void *)'
| |-ParmVarDecl 0x559bb18787e0 <col:11, col:17> col:17 arg 'void *'
| `-CompoundStmt 0x559bb187a138 <line:715:1, line:743:1>
|   |-CallExpr 0x559bb1878988 <line:716:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x559bb1878970 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x559bb1878920 <col:3> 'void ()' Function 0x559bb181de40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x559bb1878a00 <line:717:3, col:15> 'int' '='
|   | |-DeclRefExpr 0x559bb18789a8 <col:3> 'int' lvalue Var 0x559bb18781a8 'b$w_buff1' 'int'
|   | `-ImplicitCastExpr 0x559bb18789e8 <col:15> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x559bb18789c8 <col:15> 'int' lvalue Var 0x559bb18780b0 'b$w_buff0' 'int'
|   |-BinaryOperator 0x559bb1878a60 <line:718:3, col:15> 'int' '='
|   | |-DeclRefExpr 0x559bb1878a20 <col:3> 'int' lvalue Var 0x559bb18780b0 'b$w_buff0' 'int'
|   | `-IntegerLiteral 0x559bb1878a40 <col:15> 'int' 1
|   |-BinaryOperator 0x559bb1878ad8 <line:719:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x559bb1878a80 <col:3> '_Bool' lvalue Var 0x559bb1878220 'b$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x559bb1878ac0 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x559bb1878aa0 <col:20> '_Bool' lvalue Var 0x559bb1878128 'b$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x559bb1878b88 <line:720:3, col:27> '_Bool' '='
|   | |-DeclRefExpr 0x559bb1878b10 <col:3> '_Bool' lvalue Var 0x559bb1878128 'b$w_buff0_used' '_Bool'
|   | `-CStyleCastExpr 0x559bb1878b60 <col:20, col:27> '_Bool' <IntegralToBoolean>
|   |   `-IntegerLiteral 0x559bb1878b30 <col:27> 'int' 1
|   |-CallExpr 0x559bb1878d08 <line:721:3, col:56> 'void'
|   | |-ImplicitCastExpr 0x559bb1878cf0 <col:3> 'void (*)(int)' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x559bb1878ba8 <col:3> 'void (int)' Function 0x559bb181dbc8 '__VERIFIER_assert' 'void (int)'
|   | `-UnaryOperator 0x559bb1878ca8 <col:21, col:55> 'int' prefix '!' cannot overflow
|   |   `-ParenExpr 0x559bb1878c88 <col:22, col:55> 'int'
|   |     `-BinaryOperator 0x559bb1878c68 <col:23, col:41> 'int' '&&'
|   |       |-ImplicitCastExpr 0x559bb1878c20 <col:23> 'int' <IntegralCast>
|   |       | `-ImplicitCastExpr 0x559bb1878c08 <col:23> '_Bool' <LValueToRValue>
|   |       |   `-DeclRefExpr 0x559bb1878bc8 <col:23> '_Bool' lvalue Var 0x559bb1878220 'b$w_buff1_used' '_Bool'
|   |       `-ImplicitCastExpr 0x559bb1878c50 <col:41> 'int' <IntegralCast>
|   |         `-ImplicitCastExpr 0x559bb1878c38 <col:41> '_Bool' <LValueToRValue>
|   |           `-DeclRefExpr 0x559bb1878be8 <col:41> '_Bool' lvalue Var 0x559bb1878128 'b$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x559bb1878d88 <line:722:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x559bb1878d30 <col:3> '_Bool' lvalue Var 0x559bb1877d58 'b$r_buff1_thd0' '_Bool'
|   | `-ImplicitCastExpr 0x559bb1878d70 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x559bb1878d50 <col:20> '_Bool' lvalue Var 0x559bb1877b00 'b$r_buff0_thd0' '_Bool'
|   |-BinaryOperator 0x559bb1878e00 <line:723:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x559bb1878da8 <col:3> '_Bool' lvalue Var 0x559bb1877dd0 'b$r_buff1_thd1' '_Bool'
|   | `-ImplicitCastExpr 0x559bb1878de8 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x559bb1878dc8 <col:20> '_Bool' lvalue Var 0x559bb1877b78 'b$r_buff0_thd1' '_Bool'
|   |-BinaryOperator 0x559bb1878e78 <line:724:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x559bb1878e20 <col:3> '_Bool' lvalue Var 0x559bb1877e48 'b$r_buff1_thd2' '_Bool'
|   | `-ImplicitCastExpr 0x559bb1878e60 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x559bb1878e40 <col:20> '_Bool' lvalue Var 0x559bb1877bf0 'b$r_buff0_thd2' '_Bool'
|   |-BinaryOperator 0x559bb1878ef0 <line:725:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x559bb1878e98 <col:3> '_Bool' lvalue Var 0x559bb1877ec0 'b$r_buff1_thd3' '_Bool'
|   | `-ImplicitCastExpr 0x559bb1878ed8 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x559bb1878eb8 <col:20> '_Bool' lvalue Var 0x559bb1877c68 'b$r_buff0_thd3' '_Bool'
|   |-BinaryOperator 0x559bb1878f68 <line:726:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x559bb1878f10 <col:3> '_Bool' lvalue Var 0x559bb1877f38 'b$r_buff1_thd4' '_Bool'
|   | `-ImplicitCastExpr 0x559bb1878f50 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x559bb1878f30 <col:20> '_Bool' lvalue Var 0x559bb1877ce0 'b$r_buff0_thd4' '_Bool'
|   |-BinaryOperator 0x559bb1879000 <line:727:3, col:27> '_Bool' '='
|   | |-DeclRefExpr 0x559bb1878f88 <col:3> '_Bool' lvalue Var 0x559bb1877b78 'b$r_buff0_thd1' '_Bool'
|   | `-CStyleCastExpr 0x559bb1878fd8 <col:20, col:27> '_Bool' <IntegralToBoolean>
|   |   `-IntegerLiteral 0x559bb1878fa8 <col:27> 'int' 1
|   |-CallExpr 0x559bb1879058 <line:728:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x559bb1879040 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x559bb1879020 <col:3> 'void ()' Function 0x559bb181df00 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x559bb18790b0 <line:729:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x559bb1879098 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x559bb1879078 <col:3> 'void ()' Function 0x559bb181de40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x559bb1879128 <line:730:3, col:25> 'int' '='
|   | |-DeclRefExpr 0x559bb18790d0 <col:3> 'int' lvalue Var 0x559bb1877398 '__unbuffered_p0_EAX' 'int'
|   | `-ImplicitCastExpr 0x559bb1879110 <col:25> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x559bb18790f0 <col:25> 'int' lvalue Var 0x559bb1878410 'x' 'int'
|   |-CallExpr 0x559bb1879180 <line:731:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x559bb1879168 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x559bb1879148 <col:3> 'void ()' Function 0x559bb181df00 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x559bb18791d8 <line:732:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x559bb18791c0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x559bb18791a0 <col:3> 'void ()' Function 0x559bb181de40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x559bb18794c0 <line:733:3, col:103> 'int' '='
|   | |-DeclRefExpr 0x559bb18791f8 <col:3> 'int' lvalue Var 0x559bb1877938 'b' 'int'
|   | `-ConditionalOperator 0x559bb1879490 <col:7, col:103> 'int'
|   |   |-BinaryOperator 0x559bb18792b8 <col:7, col:25> 'int' '&&'
|   |   | |-ImplicitCastExpr 0x559bb1879270 <col:7> 'int' <IntegralCast>
|   |   | | `-ImplicitCastExpr 0x559bb1879258 <col:7> '_Bool' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x559bb1879218 <col:7> '_Bool' lvalue Var 0x559bb1878128 'b$w_buff0_used' '_Bool'
|   |   | `-ImplicitCastExpr 0x559bb18792a0 <col:25> 'int' <IntegralCast>
|   |   |   `-ImplicitCastExpr 0x559bb1879288 <col:25> '_Bool' <LValueToRValue>
|   |   |     `-DeclRefExpr 0x559bb1879238 <col:25> '_Bool' lvalue Var 0x559bb1877b78 'b$r_buff0_thd1' '_Bool'
|   |   |-ImplicitCastExpr 0x559bb1879478 <col:42> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x559bb18792d8 <col:42> 'int' lvalue Var 0x559bb18780b0 'b$w_buff0' 'int'
|   |   `-ParenExpr 0x559bb1879458 <col:54, col:103> 'int'
|   |     `-ConditionalOperator 0x559bb1879428 <col:55, col:102> 'int'
|   |       |-BinaryOperator 0x559bb1879398 <col:55, col:73> 'int' '&&'
|   |       | |-ImplicitCastExpr 0x559bb1879350 <col:55> 'int' <IntegralCast>
|   |       | | `-ImplicitCastExpr 0x559bb1879338 <col:55> '_Bool' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x559bb18792f8 <col:55> '_Bool' lvalue Var 0x559bb1878220 'b$w_buff1_used' '_Bool'
|   |       | `-ImplicitCastExpr 0x559bb1879380 <col:73> 'int' <IntegralCast>
|   |       |   `-ImplicitCastExpr 0x559bb1879368 <col:73> '_Bool' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x559bb1879318 <col:73> '_Bool' lvalue Var 0x559bb1877dd0 'b$r_buff1_thd1' '_Bool'
|   |       |-ImplicitCastExpr 0x559bb18793f8 <col:90> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x559bb18793b8 <col:90> 'int' lvalue Var 0x559bb18781a8 'b$w_buff1' 'int'
|   |       `-ImplicitCastExpr 0x559bb1879410 <col:102> 'int' <LValueToRValue>
|   |         `-DeclRefExpr 0x559bb18793d8 <col:102> 'int' lvalue Var 0x559bb1877938 'b' 'int'
|   |-BinaryOperator 0x559bb18796c8 <line:734:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x559bb18794e0 <col:3> '_Bool' lvalue Var 0x559bb1878128 'b$w_buff0_used' '_Bool'
|   | `-ImplicitCastExpr 0x559bb18796b0 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x559bb1879680 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x559bb18795a0 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x559bb1879558 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x559bb1879540 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x559bb1879500 <col:20> '_Bool' lvalue Var 0x559bb1878128 'b$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x559bb1879588 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x559bb1879570 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x559bb1879520 <col:38> '_Bool' lvalue Var 0x559bb1877b78 'b$r_buff0_thd1' '_Bool'
|   |     |-ImplicitCastExpr 0x559bb1879638 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x559bb18795f0 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x559bb18795c0 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x559bb1879668 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x559bb1879650 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x559bb1879618 <col:66> '_Bool' lvalue Var 0x559bb1878128 'b$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x559bb18799b0 <line:735:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x559bb18796e8 <col:3> '_Bool' lvalue Var 0x559bb1878220 'b$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x559bb1879998 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x559bb1879968 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x559bb1879888 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x559bb18797a8 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x559bb1879760 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x559bb1879748 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x559bb1879708 <col:20> '_Bool' lvalue Var 0x559bb1878128 'b$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x559bb1879790 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x559bb1879778 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x559bb1879728 <col:38> '_Bool' lvalue Var 0x559bb1877b78 'b$r_buff0_thd1' '_Bool'
|   |     | `-BinaryOperator 0x559bb1879868 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x559bb1879820 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x559bb1879808 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x559bb18797c8 <col:56> '_Bool' lvalue Var 0x559bb1878220 'b$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x559bb1879850 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x559bb1879838 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x559bb18797e8 <col:74> '_Bool' lvalue Var 0x559bb1877dd0 'b$r_buff1_thd1' '_Bool'
|   |     |-ImplicitCastExpr 0x559bb1879920 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x559bb18798d8 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x559bb18798a8 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x559bb1879950 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x559bb1879938 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x559bb1879900 <col:102> '_Bool' lvalue Var 0x559bb1878220 'b$w_buff1_used' '_Bool'
|   |-BinaryOperator 0x559bb1879bd0 <line:736:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x559bb18799d0 <col:3> '_Bool' lvalue Var 0x559bb1877b78 'b$r_buff0_thd1' '_Bool'
|   | `-ImplicitCastExpr 0x559bb1879bb8 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x559bb1879b88 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x559bb1879a90 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x559bb1879a48 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x559bb1879a30 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x559bb18799f0 <col:20> '_Bool' lvalue Var 0x559bb1878128 'b$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x559bb1879a78 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x559bb1879a60 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x559bb1879a10 <col:38> '_Bool' lvalue Var 0x559bb1877b78 'b$r_buff0_thd1' '_Bool'
|   |     |-ImplicitCastExpr 0x559bb1879b40 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x559bb1879ae0 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x559bb1879ab0 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x559bb1879b70 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x559bb1879b58 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x559bb1879b20 <col:66> '_Bool' lvalue Var 0x559bb1877b78 'b$r_buff0_thd1' '_Bool'
|   |-BinaryOperator 0x559bb1879eb8 <line:737:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x559bb1879bf0 <col:3> '_Bool' lvalue Var 0x559bb1877dd0 'b$r_buff1_thd1' '_Bool'
|   | `-ImplicitCastExpr 0x559bb1879ea0 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x559bb1879e70 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x559bb1879d90 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x559bb1879cb0 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x559bb1879c68 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x559bb1879c50 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x559bb1879c10 <col:20> '_Bool' lvalue Var 0x559bb1878128 'b$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x559bb1879c98 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x559bb1879c80 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x559bb1879c30 <col:38> '_Bool' lvalue Var 0x559bb1877b78 'b$r_buff0_thd1' '_Bool'
|   |     | `-BinaryOperator 0x559bb1879d70 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x559bb1879d28 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x559bb1879d10 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x559bb1879cd0 <col:56> '_Bool' lvalue Var 0x559bb1878220 'b$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x559bb1879d58 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x559bb1879d40 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x559bb1879cf0 <col:74> '_Bool' lvalue Var 0x559bb1877dd0 'b$r_buff1_thd1' '_Bool'
|   |     |-ImplicitCastExpr 0x559bb1879e28 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x559bb1879de0 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x559bb1879db0 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x559bb1879e58 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x559bb1879e40 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x559bb1879e08 <col:102> '_Bool' lvalue Var 0x559bb1877dd0 'b$r_buff1_thd1' '_Bool'
|   |-CallExpr 0x559bb1879f10 <line:738:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x559bb1879ef8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x559bb1879ed8 <col:3> 'void ()' Function 0x559bb181df00 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x559bb1879f68 <line:739:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x559bb1879f50 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x559bb1879f30 <col:3> 'void ()' Function 0x559bb181de40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x559bb187a020 <line:740:3, col:41> 'int' '='
|   | |-DeclRefExpr 0x559bb1879f88 <col:3> 'int' lvalue Var 0x559bb1877278 '__unbuffered_cnt' 'int'
|   | `-BinaryOperator 0x559bb187a000 <col:22, col:41> 'int' '+'
|   |   |-ImplicitCastExpr 0x559bb1879fe8 <col:22> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x559bb1879fa8 <col:22> 'int' lvalue Var 0x559bb1877278 '__unbuffered_cnt' 'int'
|   |   `-IntegerLiteral 0x559bb1879fc8 <col:41> 'int' 1
|   |-CallExpr 0x559bb187a078 <line:741:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x559bb187a060 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x559bb187a040 <col:3> 'void ()' Function 0x559bb181df00 '__VERIFIER_atomic_end' 'void ()'
|   `-ReturnStmt 0x559bb187a128 <line:742:3, col:36>
|     `-CallExpr 0x559bb187a108 <col:10, col:36> 'void *'
|       `-ImplicitCastExpr 0x559bb187a0f0 <col:10> 'void *(*)(void)' <FunctionToPointerDecay>
|         `-DeclRefExpr 0x559bb187a098 <col:10> 'void *(void)' Function 0x559bb181d958 '__VERIFIER_nondet_pointer' 'void *(void)'
|-FunctionDecl 0x559bb187a2d0 prev 0x559bb1876c48 <line:744:1, line:763:1> line:744:8 used P1 'void *(void *)'
| |-ParmVarDecl 0x559bb187a238 <col:11, col:17> col:17 arg 'void *'
| `-CompoundStmt 0x559bb187b4f0 <line:745:1, line:763:1>
|   |-CallExpr 0x559bb187a3b0 <line:746:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x559bb187a398 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x559bb187a378 <col:3> 'void ()' Function 0x559bb181de40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x559bb187a410 <line:747:3, col:7> 'int' '='
|   | |-DeclRefExpr 0x559bb187a3d0 <col:3> 'int' lvalue Var 0x559bb1878410 'x' 'int'
|   | `-IntegerLiteral 0x559bb187a3f0 <col:7> 'int' 1
|   |-CallExpr 0x559bb187a468 <line:748:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x559bb187a450 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x559bb187a430 <col:3> 'void ()' Function 0x559bb181df00 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x559bb187a4c0 <line:749:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x559bb187a4a8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x559bb187a488 <col:3> 'void ()' Function 0x559bb181de40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x559bb187a520 <line:750:3, col:7> 'int' '='
|   | |-DeclRefExpr 0x559bb187a4e0 <col:3> 'int' lvalue Var 0x559bb1878530 'y' 'int'
|   | `-IntegerLiteral 0x559bb187a500 <col:7> 'int' 1
|   |-CallExpr 0x559bb187a578 <line:751:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x559bb187a560 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x559bb187a540 <col:3> 'void ()' Function 0x559bb181df00 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x559bb187a5d0 <line:752:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x559bb187a5b8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x559bb187a598 <col:3> 'void ()' Function 0x559bb181de40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x559bb187a8b8 <line:753:3, col:103> 'int' '='
|   | |-DeclRefExpr 0x559bb187a5f0 <col:3> 'int' lvalue Var 0x559bb1877938 'b' 'int'
|   | `-ConditionalOperator 0x559bb187a888 <col:7, col:103> 'int'
|   |   |-BinaryOperator 0x559bb187a6b0 <col:7, col:25> 'int' '&&'
|   |   | |-ImplicitCastExpr 0x559bb187a668 <col:7> 'int' <IntegralCast>
|   |   | | `-ImplicitCastExpr 0x559bb187a650 <col:7> '_Bool' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x559bb187a610 <col:7> '_Bool' lvalue Var 0x559bb1878128 'b$w_buff0_used' '_Bool'
|   |   | `-ImplicitCastExpr 0x559bb187a698 <col:25> 'int' <IntegralCast>
|   |   |   `-ImplicitCastExpr 0x559bb187a680 <col:25> '_Bool' <LValueToRValue>
|   |   |     `-DeclRefExpr 0x559bb187a630 <col:25> '_Bool' lvalue Var 0x559bb1877bf0 'b$r_buff0_thd2' '_Bool'
|   |   |-ImplicitCastExpr 0x559bb187a870 <col:42> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x559bb187a6d0 <col:42> 'int' lvalue Var 0x559bb18780b0 'b$w_buff0' 'int'
|   |   `-ParenExpr 0x559bb187a850 <col:54, col:103> 'int'
|   |     `-ConditionalOperator 0x559bb187a820 <col:55, col:102> 'int'
|   |       |-BinaryOperator 0x559bb187a790 <col:55, col:73> 'int' '&&'
|   |       | |-ImplicitCastExpr 0x559bb187a748 <col:55> 'int' <IntegralCast>
|   |       | | `-ImplicitCastExpr 0x559bb187a730 <col:55> '_Bool' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x559bb187a6f0 <col:55> '_Bool' lvalue Var 0x559bb1878220 'b$w_buff1_used' '_Bool'
|   |       | `-ImplicitCastExpr 0x559bb187a778 <col:73> 'int' <IntegralCast>
|   |       |   `-ImplicitCastExpr 0x559bb187a760 <col:73> '_Bool' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x559bb187a710 <col:73> '_Bool' lvalue Var 0x559bb1877e48 'b$r_buff1_thd2' '_Bool'
|   |       |-ImplicitCastExpr 0x559bb187a7f0 <col:90> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x559bb187a7b0 <col:90> 'int' lvalue Var 0x559bb18781a8 'b$w_buff1' 'int'
|   |       `-ImplicitCastExpr 0x559bb187a808 <col:102> 'int' <LValueToRValue>
|   |         `-DeclRefExpr 0x559bb187a7d0 <col:102> 'int' lvalue Var 0x559bb1877938 'b' 'int'
|   |-BinaryOperator 0x559bb187aac0 <line:754:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x559bb187a8d8 <col:3> '_Bool' lvalue Var 0x559bb1878128 'b$w_buff0_used' '_Bool'
|   | `-ImplicitCastExpr 0x559bb187aaa8 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x559bb187aa78 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x559bb187a998 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x559bb187a950 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x559bb187a938 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x559bb187a8f8 <col:20> '_Bool' lvalue Var 0x559bb1878128 'b$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x559bb187a980 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x559bb187a968 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x559bb187a918 <col:38> '_Bool' lvalue Var 0x559bb1877bf0 'b$r_buff0_thd2' '_Bool'
|   |     |-ImplicitCastExpr 0x559bb187aa30 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x559bb187a9e8 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x559bb187a9b8 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x559bb187aa60 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x559bb187aa48 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x559bb187aa10 <col:66> '_Bool' lvalue Var 0x559bb1878128 'b$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x559bb187adb8 <line:755:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x559bb187aae0 <col:3> '_Bool' lvalue Var 0x559bb1878220 'b$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x559bb187ada0 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x559bb187ad70 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x559bb187ac90 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x559bb187abb0 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x559bb187ab68 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x559bb187ab50 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x559bb187ab00 <col:20> '_Bool' lvalue Var 0x559bb1878128 'b$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x559bb187ab98 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x559bb187ab80 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x559bb187ab30 <col:38> '_Bool' lvalue Var 0x559bb1877bf0 'b$r_buff0_thd2' '_Bool'
|   |     | `-BinaryOperator 0x559bb187ac70 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x559bb187ac28 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x559bb187ac10 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x559bb187abd0 <col:56> '_Bool' lvalue Var 0x559bb1878220 'b$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x559bb187ac58 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x559bb187ac40 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x559bb187abf0 <col:74> '_Bool' lvalue Var 0x559bb1877e48 'b$r_buff1_thd2' '_Bool'
|   |     |-ImplicitCastExpr 0x559bb187ad28 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x559bb187ace0 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x559bb187acb0 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x559bb187ad58 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x559bb187ad40 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x559bb187ad08 <col:102> '_Bool' lvalue Var 0x559bb1878220 'b$w_buff1_used' '_Bool'
|   |-BinaryOperator 0x559bb187afc0 <line:756:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x559bb187add8 <col:3> '_Bool' lvalue Var 0x559bb1877bf0 'b$r_buff0_thd2' '_Bool'
|   | `-ImplicitCastExpr 0x559bb187afa8 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x559bb187af78 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x559bb187ae98 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x559bb187ae50 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x559bb187ae38 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x559bb187adf8 <col:20> '_Bool' lvalue Var 0x559bb1878128 'b$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x559bb187ae80 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x559bb187ae68 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x559bb187ae18 <col:38> '_Bool' lvalue Var 0x559bb1877bf0 'b$r_buff0_thd2' '_Bool'
|   |     |-ImplicitCastExpr 0x559bb187af30 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x559bb187aee8 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x559bb187aeb8 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x559bb187af60 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x559bb187af48 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x559bb187af10 <col:66> '_Bool' lvalue Var 0x559bb1877bf0 'b$r_buff0_thd2' '_Bool'
|   |-BinaryOperator 0x559bb187b2a8 <line:757:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x559bb187afe0 <col:3> '_Bool' lvalue Var 0x559bb1877e48 'b$r_buff1_thd2' '_Bool'
|   | `-ImplicitCastExpr 0x559bb187b290 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x559bb187b260 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x559bb187b180 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x559bb187b0a0 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x559bb187b058 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x559bb187b040 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x559bb187b000 <col:20> '_Bool' lvalue Var 0x559bb1878128 'b$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x559bb187b088 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x559bb187b070 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x559bb187b020 <col:38> '_Bool' lvalue Var 0x559bb1877bf0 'b$r_buff0_thd2' '_Bool'
|   |     | `-BinaryOperator 0x559bb187b160 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x559bb187b118 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x559bb187b100 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x559bb187b0c0 <col:56> '_Bool' lvalue Var 0x559bb1878220 'b$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x559bb187b148 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x559bb187b130 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x559bb187b0e0 <col:74> '_Bool' lvalue Var 0x559bb1877e48 'b$r_buff1_thd2' '_Bool'
|   |     |-ImplicitCastExpr 0x559bb187b218 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x559bb187b1d0 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x559bb187b1a0 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x559bb187b248 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x559bb187b230 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x559bb187b1f8 <col:102> '_Bool' lvalue Var 0x559bb1877e48 'b$r_buff1_thd2' '_Bool'
|   |-CallExpr 0x559bb187b300 <line:758:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x559bb187b2e8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x559bb187b2c8 <col:3> 'void ()' Function 0x559bb181df00 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x559bb187b358 <line:759:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x559bb187b340 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x559bb187b320 <col:3> 'void ()' Function 0x559bb181de40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x559bb187b410 <line:760:3, col:41> 'int' '='
|   | |-DeclRefExpr 0x559bb187b378 <col:3> 'int' lvalue Var 0x559bb1877278 '__unbuffered_cnt' 'int'
|   | `-BinaryOperator 0x559bb187b3f0 <col:22, col:41> 'int' '+'
|   |   |-ImplicitCastExpr 0x559bb187b3d8 <col:22> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x559bb187b398 <col:22> 'int' lvalue Var 0x559bb1877278 '__unbuffered_cnt' 'int'
|   |   `-IntegerLiteral 0x559bb187b3b8 <col:41> 'int' 1
|   |-CallExpr 0x559bb187b468 <line:761:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x559bb187b450 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x559bb187b430 <col:3> 'void ()' Function 0x559bb181df00 '__VERIFIER_atomic_end' 'void ()'
|   `-ReturnStmt 0x559bb187b4e0 <line:762:3, col:36>
|     `-CallExpr 0x559bb187b4c0 <col:10, col:36> 'void *'
|       `-ImplicitCastExpr 0x559bb187b4a8 <col:10> 'void *(*)(void)' <FunctionToPointerDecay>
|         `-DeclRefExpr 0x559bb187b488 <col:10> 'void *(void)' Function 0x559bb181d958 '__VERIFIER_nondet_pointer' 'void *(void)'
|-FunctionDecl 0x559bb187b638 prev 0x559bb1876da0 <line:764:1, line:783:1> line:764:8 used P2 'void *(void *)'
| |-ParmVarDecl 0x559bb187b5a0 <col:11, col:17> col:17 arg 'void *'
| `-CompoundStmt 0x559bb187c870 <line:765:1, line:783:1>
|   |-CallExpr 0x559bb187b718 <line:766:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x559bb187b700 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x559bb187b6e0 <col:3> 'void ()' Function 0x559bb181de40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x559bb187b778 <line:767:3, col:7> 'int' '='
|   | |-DeclRefExpr 0x559bb187b738 <col:3> 'int' lvalue Var 0x559bb1878530 'y' 'int'
|   | `-IntegerLiteral 0x559bb187b758 <col:7> 'int' 2
|   |-CallExpr 0x559bb187b7d0 <line:768:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x559bb187b7b8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x559bb187b798 <col:3> 'void ()' Function 0x559bb181df00 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x559bb187b828 <line:769:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x559bb187b810 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x559bb187b7f0 <col:3> 'void ()' Function 0x559bb181de40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x559bb187b8a0 <line:770:3, col:25> 'int' '='
|   | |-DeclRefExpr 0x559bb187b848 <col:3> 'int' lvalue Var 0x559bb18774b8 '__unbuffered_p2_EAX' 'int'
|   | `-ImplicitCastExpr 0x559bb187b888 <col:25> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x559bb187b868 <col:25> 'int' lvalue Var 0x559bb1878650 'z' 'int'
|   |-CallExpr 0x559bb187b8f8 <line:771:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x559bb187b8e0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x559bb187b8c0 <col:3> 'void ()' Function 0x559bb181df00 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x559bb187b950 <line:772:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x559bb187b938 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x559bb187b918 <col:3> 'void ()' Function 0x559bb181de40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x559bb187bc48 <line:773:3, col:103> 'int' '='
|   | |-DeclRefExpr 0x559bb187b970 <col:3> 'int' lvalue Var 0x559bb1877938 'b' 'int'
|   | `-ConditionalOperator 0x559bb187bc18 <col:7, col:103> 'int'
|   |   |-BinaryOperator 0x559bb187ba30 <col:7, col:25> 'int' '&&'
|   |   | |-ImplicitCastExpr 0x559bb187b9e8 <col:7> 'int' <IntegralCast>
|   |   | | `-ImplicitCastExpr 0x559bb187b9d0 <col:7> '_Bool' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x559bb187b990 <col:7> '_Bool' lvalue Var 0x559bb1878128 'b$w_buff0_used' '_Bool'
|   |   | `-ImplicitCastExpr 0x559bb187ba18 <col:25> 'int' <IntegralCast>
|   |   |   `-ImplicitCastExpr 0x559bb187ba00 <col:25> '_Bool' <LValueToRValue>
|   |   |     `-DeclRefExpr 0x559bb187b9b0 <col:25> '_Bool' lvalue Var 0x559bb1877c68 'b$r_buff0_thd3' '_Bool'
|   |   |-ImplicitCastExpr 0x559bb187bc00 <col:42> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x559bb187ba50 <col:42> 'int' lvalue Var 0x559bb18780b0 'b$w_buff0' 'int'
|   |   `-ParenExpr 0x559bb187bbe0 <col:54, col:103> 'int'
|   |     `-ConditionalOperator 0x559bb187bbb0 <col:55, col:102> 'int'
|   |       |-BinaryOperator 0x559bb187bb10 <col:55, col:73> 'int' '&&'
|   |       | |-ImplicitCastExpr 0x559bb187bac8 <col:55> 'int' <IntegralCast>
|   |       | | `-ImplicitCastExpr 0x559bb187bab0 <col:55> '_Bool' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x559bb187ba70 <col:55> '_Bool' lvalue Var 0x559bb1878220 'b$w_buff1_used' '_Bool'
|   |       | `-ImplicitCastExpr 0x559bb187baf8 <col:73> 'int' <IntegralCast>
|   |       |   `-ImplicitCastExpr 0x559bb187bae0 <col:73> '_Bool' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x559bb187ba90 <col:73> '_Bool' lvalue Var 0x559bb1877ec0 'b$r_buff1_thd3' '_Bool'
|   |       |-ImplicitCastExpr 0x559bb187bb80 <col:90> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x559bb187bb40 <col:90> 'int' lvalue Var 0x559bb18781a8 'b$w_buff1' 'int'
|   |       `-ImplicitCastExpr 0x559bb187bb98 <col:102> 'int' <LValueToRValue>
|   |         `-DeclRefExpr 0x559bb187bb60 <col:102> 'int' lvalue Var 0x559bb1877938 'b' 'int'
|   |-BinaryOperator 0x559bb187be50 <line:774:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x559bb187bc68 <col:3> '_Bool' lvalue Var 0x559bb1878128 'b$w_buff0_used' '_Bool'
|   | `-ImplicitCastExpr 0x559bb187be38 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x559bb187be08 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x559bb187bd28 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x559bb187bce0 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x559bb187bcc8 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x559bb187bc88 <col:20> '_Bool' lvalue Var 0x559bb1878128 'b$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x559bb187bd10 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x559bb187bcf8 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x559bb187bca8 <col:38> '_Bool' lvalue Var 0x559bb1877c68 'b$r_buff0_thd3' '_Bool'
|   |     |-ImplicitCastExpr 0x559bb187bdc0 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x559bb187bd78 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x559bb187bd48 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x559bb187bdf0 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x559bb187bdd8 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x559bb187bda0 <col:66> '_Bool' lvalue Var 0x559bb1878128 'b$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x559bb187c138 <line:775:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x559bb187be70 <col:3> '_Bool' lvalue Var 0x559bb1878220 'b$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x559bb187c120 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x559bb187c0f0 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x559bb187c010 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x559bb187bf30 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x559bb187bee8 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x559bb187bed0 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x559bb187be90 <col:20> '_Bool' lvalue Var 0x559bb1878128 'b$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x559bb187bf18 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x559bb187bf00 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x559bb187beb0 <col:38> '_Bool' lvalue Var 0x559bb1877c68 'b$r_buff0_thd3' '_Bool'
|   |     | `-BinaryOperator 0x559bb187bff0 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x559bb187bfa8 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x559bb187bf90 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x559bb187bf50 <col:56> '_Bool' lvalue Var 0x559bb1878220 'b$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x559bb187bfd8 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x559bb187bfc0 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x559bb187bf70 <col:74> '_Bool' lvalue Var 0x559bb1877ec0 'b$r_buff1_thd3' '_Bool'
|   |     |-ImplicitCastExpr 0x559bb187c0a8 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x559bb187c060 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x559bb187c030 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x559bb187c0d8 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x559bb187c0c0 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x559bb187c088 <col:102> '_Bool' lvalue Var 0x559bb1878220 'b$w_buff1_used' '_Bool'
|   |-BinaryOperator 0x559bb187c340 <line:776:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x559bb187c158 <col:3> '_Bool' lvalue Var 0x559bb1877c68 'b$r_buff0_thd3' '_Bool'
|   | `-ImplicitCastExpr 0x559bb187c328 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x559bb187c2f8 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x559bb187c218 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x559bb187c1d0 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x559bb187c1b8 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x559bb187c178 <col:20> '_Bool' lvalue Var 0x559bb1878128 'b$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x559bb187c200 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x559bb187c1e8 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x559bb187c198 <col:38> '_Bool' lvalue Var 0x559bb1877c68 'b$r_buff0_thd3' '_Bool'
|   |     |-ImplicitCastExpr 0x559bb187c2b0 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x559bb187c268 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x559bb187c238 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x559bb187c2e0 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x559bb187c2c8 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x559bb187c290 <col:66> '_Bool' lvalue Var 0x559bb1877c68 'b$r_buff0_thd3' '_Bool'
|   |-BinaryOperator 0x559bb187c628 <line:777:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x559bb187c360 <col:3> '_Bool' lvalue Var 0x559bb1877ec0 'b$r_buff1_thd3' '_Bool'
|   | `-ImplicitCastExpr 0x559bb187c610 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x559bb187c5e0 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x559bb187c500 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x559bb187c420 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x559bb187c3d8 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x559bb187c3c0 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x559bb187c380 <col:20> '_Bool' lvalue Var 0x559bb1878128 'b$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x559bb187c408 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x559bb187c3f0 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x559bb187c3a0 <col:38> '_Bool' lvalue Var 0x559bb1877c68 'b$r_buff0_thd3' '_Bool'
|   |     | `-BinaryOperator 0x559bb187c4e0 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x559bb187c498 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x559bb187c480 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x559bb187c440 <col:56> '_Bool' lvalue Var 0x559bb1878220 'b$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x559bb187c4c8 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x559bb187c4b0 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x559bb187c460 <col:74> '_Bool' lvalue Var 0x559bb1877ec0 'b$r_buff1_thd3' '_Bool'
|   |     |-ImplicitCastExpr 0x559bb187c598 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x559bb187c550 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x559bb187c520 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x559bb187c5c8 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x559bb187c5b0 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x559bb187c578 <col:102> '_Bool' lvalue Var 0x559bb1877ec0 'b$r_buff1_thd3' '_Bool'
|   |-CallExpr 0x559bb187c680 <line:778:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x559bb187c668 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x559bb187c648 <col:3> 'void ()' Function 0x559bb181df00 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x559bb187c6d8 <line:779:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x559bb187c6c0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x559bb187c6a0 <col:3> 'void ()' Function 0x559bb181de40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x559bb187c790 <line:780:3, col:41> 'int' '='
|   | |-DeclRefExpr 0x559bb187c6f8 <col:3> 'int' lvalue Var 0x559bb1877278 '__unbuffered_cnt' 'int'
|   | `-BinaryOperator 0x559bb187c770 <col:22, col:41> 'int' '+'
|   |   |-ImplicitCastExpr 0x559bb187c758 <col:22> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x559bb187c718 <col:22> 'int' lvalue Var 0x559bb1877278 '__unbuffered_cnt' 'int'
|   |   `-IntegerLiteral 0x559bb187c738 <col:41> 'int' 1
|   |-CallExpr 0x559bb187c7e8 <line:781:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x559bb187c7d0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x559bb187c7b0 <col:3> 'void ()' Function 0x559bb181df00 '__VERIFIER_atomic_end' 'void ()'
|   `-ReturnStmt 0x559bb187c860 <line:782:3, col:36>
|     `-CallExpr 0x559bb187c840 <col:10, col:36> 'void *'
|       `-ImplicitCastExpr 0x559bb187c828 <col:10> 'void *(*)(void)' <FunctionToPointerDecay>
|         `-DeclRefExpr 0x559bb187c808 <col:10> 'void *(void)' Function 0x559bb181d958 '__VERIFIER_nondet_pointer' 'void *(void)'
|-FunctionDecl 0x559bb187c9b8 prev 0x559bb1876ef8 <line:784:1, line:822:1> line:784:8 used P3 'void *(void *)'
| |-ParmVarDecl 0x559bb187c920 <col:11, col:17> col:17 arg 'void *'
| `-CompoundStmt 0x559bb18807d8 <line:785:1, line:822:1>
|   |-CallExpr 0x559bb187ca98 <line:786:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x559bb187ca80 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x559bb187ca60 <col:3> 'void ()' Function 0x559bb181de40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x559bb187caf8 <line:787:3, col:7> 'int' '='
|   | |-DeclRefExpr 0x559bb187cab8 <col:3> 'int' lvalue Var 0x559bb1878650 'z' 'int'
|   | `-IntegerLiteral 0x559bb187cad8 <col:7> 'int' 1
|   |-CallExpr 0x559bb187cb68 <line:788:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x559bb187cb50 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x559bb187cb18 <col:3> 'void ()' Function 0x559bb181df00 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x559bb187cbc0 <line:789:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x559bb187cba8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x559bb187cb88 <col:3> 'void ()' Function 0x559bb181de40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x559bb187cc20 <line:790:3, col:7> 'int' '='
|   | |-DeclRefExpr 0x559bb187cbe0 <col:3> 'int' lvalue Var 0x559bb1877818 'a' 'int'
|   | `-IntegerLiteral 0x559bb187cc00 <col:7> 'int' 1
|   |-CallExpr 0x559bb187cc78 <line:791:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x559bb187cc60 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x559bb187cc40 <col:3> 'void ()' Function 0x559bb181df00 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x559bb187ccd0 <line:792:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x559bb187ccb8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x559bb187cc98 <col:3> 'void ()' Function 0x559bb181de40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x559bb187cd48 <line:793:3, col:25> 'int' '='
|   | |-DeclRefExpr 0x559bb187ccf0 <col:3> 'int' lvalue Var 0x559bb18775d8 '__unbuffered_p3_EAX' 'int'
|   | `-ImplicitCastExpr 0x559bb187cd30 <col:25> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x559bb187cd10 <col:25> 'int' lvalue Var 0x559bb1877818 'a' 'int'
|   |-CallExpr 0x559bb187cda0 <line:794:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x559bb187cd88 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x559bb187cd68 <col:3> 'void ()' Function 0x559bb181df00 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x559bb187cdf8 <line:795:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x559bb187cde0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x559bb187cdc0 <col:3> 'void ()' Function 0x559bb181de40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x559bb187cea8 <line:796:3, col:45> '_Bool' '='
|   | |-DeclRefExpr 0x559bb187ce18 <col:3> '_Bool' lvalue Var 0x559bb18786e8 'weak$$choice0' '_Bool'
|   | `-ImplicitCastExpr 0x559bb187ce90 <col:19, col:45> '_Bool' <PointerToBoolean>
|   |   `-CallExpr 0x559bb187ce70 <col:19, col:45> 'void *'
|   |     `-ImplicitCastExpr 0x559bb187ce58 <col:19> 'void *(*)(void)' <FunctionToPointerDecay>
|   |       `-DeclRefExpr 0x559bb187ce38 <col:19> 'void *(void)' Function 0x559bb181d958 '__VERIFIER_nondet_pointer' 'void *(void)'
|   |-BinaryOperator 0x559bb187cf58 <line:797:3, col:45> '_Bool' '='
|   | |-DeclRefExpr 0x559bb187cec8 <col:3> '_Bool' lvalue Var 0x559bb1878760 'weak$$choice2' '_Bool'
|   | `-ImplicitCastExpr 0x559bb187cf40 <col:19, col:45> '_Bool' <PointerToBoolean>
|   |   `-CallExpr 0x559bb187cf20 <col:19, col:45> 'void *'
|   |     `-ImplicitCastExpr 0x559bb187cf08 <col:19> 'void *(*)(void)' <FunctionToPointerDecay>
|   |       `-DeclRefExpr 0x559bb187cee8 <col:19> 'void *(void)' Function 0x559bb181d958 '__VERIFIER_nondet_pointer' 'void *(void)'
|   |-BinaryOperator 0x559bb187cfd0 <line:798:3, col:21> '_Bool' '='
|   | |-DeclRefExpr 0x559bb187cf78 <col:3> '_Bool' lvalue Var 0x559bb18779d0 'b$flush_delayed' '_Bool'
|   | `-ImplicitCastExpr 0x559bb187cfb8 <col:21> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x559bb187cf98 <col:21> '_Bool' lvalue Var 0x559bb1878760 'weak$$choice2' '_Bool'
|   |-BinaryOperator 0x559bb187d048 <line:799:3, col:15> 'int' '='
|   | |-DeclRefExpr 0x559bb187cff0 <col:3> 'int' lvalue Var 0x559bb1877a50 'b$mem_tmp' 'int'
|   | `-ImplicitCastExpr 0x559bb187d030 <col:15> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x559bb187d010 <col:15> 'int' lvalue Var 0x559bb1877938 'b' 'int'
|   |-BinaryOperator 0x559bb187d480 <line:800:3, col:162> 'int' '='
|   | |-DeclRefExpr 0x559bb187d068 <col:3> 'int' lvalue Var 0x559bb1877938 'b' 'int'
|   | `-ConditionalOperator 0x559bb187d450 <col:7, col:162> 'int'
|   |   |-BinaryOperator 0x559bb187d278 <col:7, col:84> 'int' '||'
|   |   | |-BinaryOperator 0x559bb187d198 <col:7, col:46> 'int' '||'
|   |   | | |-UnaryOperator 0x559bb187d0c0 <col:7, col:8> 'int' prefix '!' cannot overflow
|   |   | | | `-ImplicitCastExpr 0x559bb187d0a8 <col:8> '_Bool' <LValueToRValue>
|   |   | | |   `-DeclRefExpr 0x559bb187d088 <col:8> '_Bool' lvalue Var 0x559bb1878128 'b$w_buff0_used' '_Bool'
|   |   | | `-BinaryOperator 0x559bb187d178 <col:26, col:46> 'int' '&&'
|   |   | |   |-UnaryOperator 0x559bb187d110 <col:26, col:27> 'int' prefix '!' cannot overflow
|   |   | |   | `-ImplicitCastExpr 0x559bb187d0f8 <col:27> '_Bool' <LValueToRValue>
|   |   | |   |   `-DeclRefExpr 0x559bb187d0d8 <col:27> '_Bool' lvalue Var 0x559bb1877ce0 'b$r_buff0_thd4' '_Bool'
|   |   | |   `-UnaryOperator 0x559bb187d160 <col:45, col:46> 'int' prefix '!' cannot overflow
|   |   | |     `-ImplicitCastExpr 0x559bb187d148 <col:46> '_Bool' <LValueToRValue>
|   |   | |       `-DeclRefExpr 0x559bb187d128 <col:46> '_Bool' lvalue Var 0x559bb1878220 'b$w_buff1_used' '_Bool'
|   |   | `-BinaryOperator 0x559bb187d258 <col:64, col:84> 'int' '&&'
|   |   |   |-UnaryOperator 0x559bb187d1f0 <col:64, col:65> 'int' prefix '!' cannot overflow
|   |   |   | `-ImplicitCastExpr 0x559bb187d1d8 <col:65> '_Bool' <LValueToRValue>
|   |   |   |   `-DeclRefExpr 0x559bb187d1b8 <col:65> '_Bool' lvalue Var 0x559bb1877ce0 'b$r_buff0_thd4' '_Bool'
|   |   |   `-UnaryOperator 0x559bb187d240 <col:83, col:84> 'int' prefix '!' cannot overflow
|   |   |     `-ImplicitCastExpr 0x559bb187d228 <col:84> '_Bool' <LValueToRValue>
|   |   |       `-DeclRefExpr 0x559bb187d208 <col:84> '_Bool' lvalue Var 0x559bb1877f38 'b$r_buff1_thd4' '_Bool'
|   |   |-ImplicitCastExpr 0x559bb187d438 <col:101> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x559bb187d298 <col:101> 'int' lvalue Var 0x559bb1877938 'b' 'int'
|   |   `-ParenExpr 0x559bb187d418 <col:105, col:162> 'int'
|   |     `-ConditionalOperator 0x559bb187d3e8 <col:106, col:153> 'int'
|   |       |-BinaryOperator 0x559bb187d358 <col:106, col:124> 'int' '&&'
|   |       | |-ImplicitCastExpr 0x559bb187d310 <col:106> 'int' <IntegralCast>
|   |       | | `-ImplicitCastExpr 0x559bb187d2f8 <col:106> '_Bool' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x559bb187d2b8 <col:106> '_Bool' lvalue Var 0x559bb1878128 'b$w_buff0_used' '_Bool'
|   |       | `-ImplicitCastExpr 0x559bb187d340 <col:124> 'int' <IntegralCast>
|   |       |   `-ImplicitCastExpr 0x559bb187d328 <col:124> '_Bool' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x559bb187d2d8 <col:124> '_Bool' lvalue Var 0x559bb1877ce0 'b$r_buff0_thd4' '_Bool'
|   |       |-ImplicitCastExpr 0x559bb187d3b8 <col:141> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x559bb187d378 <col:141> 'int' lvalue Var 0x559bb18780b0 'b$w_buff0' 'int'
|   |       `-ImplicitCastExpr 0x559bb187d3d0 <col:153> 'int' <LValueToRValue>
|   |         `-DeclRefExpr 0x559bb187d398 <col:153> 'int' lvalue Var 0x559bb18781a8 'b$w_buff1' 'int'
|   |-BinaryOperator 0x559bb187d990 <line:801:3, col:208> 'int' '='
|   | |-DeclRefExpr 0x559bb187d4a0 <col:3> 'int' lvalue Var 0x559bb18780b0 'b$w_buff0' 'int'
|   | `-ConditionalOperator 0x559bb187d960 <col:15, col:208> 'int'
|   |   |-ImplicitCastExpr 0x559bb187d930 <col:15> 'int' <IntegralCast>
|   |   | `-ImplicitCastExpr 0x559bb187d918 <col:15> '_Bool' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x559bb187d4c0 <col:15> '_Bool' lvalue Var 0x559bb1878760 'weak$$choice2' '_Bool'
|   |   |-ImplicitCastExpr 0x559bb187d948 <col:31> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x559bb187d4e0 <col:31> 'int' lvalue Var 0x559bb18780b0 'b$w_buff0' 'int'
|   |   `-ParenExpr 0x559bb187d8f8 <col:43, col:208> 'int'
|   |     `-ConditionalOperator 0x559bb187d8c8 <col:44, col:207> 'int'
|   |       |-BinaryOperator 0x559bb187d6f0 <col:44, col:121> 'int' '||'
|   |       | |-BinaryOperator 0x559bb187d610 <col:44, col:83> 'int' '||'
|   |       | | |-UnaryOperator 0x559bb187d538 <col:44, col:45> 'int' prefix '!' cannot overflow
|   |       | | | `-ImplicitCastExpr 0x559bb187d520 <col:45> '_Bool' <LValueToRValue>
|   |       | | |   `-DeclRefExpr 0x559bb187d500 <col:45> '_Bool' lvalue Var 0x559bb1878128 'b$w_buff0_used' '_Bool'
|   |       | | `-BinaryOperator 0x559bb187d5f0 <col:63, col:83> 'int' '&&'
|   |       | |   |-UnaryOperator 0x559bb187d588 <col:63, col:64> 'int' prefix '!' cannot overflow
|   |       | |   | `-ImplicitCastExpr 0x559bb187d570 <col:64> '_Bool' <LValueToRValue>
|   |       | |   |   `-DeclRefExpr 0x559bb187d550 <col:64> '_Bool' lvalue Var 0x559bb1877ce0 'b$r_buff0_thd4' '_Bool'
|   |       | |   `-UnaryOperator 0x559bb187d5d8 <col:82, col:83> 'int' prefix '!' cannot overflow
|   |       | |     `-ImplicitCastExpr 0x559bb187d5c0 <col:83> '_Bool' <LValueToRValue>
|   |       | |       `-DeclRefExpr 0x559bb187d5a0 <col:83> '_Bool' lvalue Var 0x559bb1878220 'b$w_buff1_used' '_Bool'
|   |       | `-BinaryOperator 0x559bb187d6d0 <col:101, col:121> 'int' '&&'
|   |       |   |-UnaryOperator 0x559bb187d668 <col:101, col:102> 'int' prefix '!' cannot overflow
|   |       |   | `-ImplicitCastExpr 0x559bb187d650 <col:102> '_Bool' <LValueToRValue>
|   |       |   |   `-DeclRefExpr 0x559bb187d630 <col:102> '_Bool' lvalue Var 0x559bb1877ce0 'b$r_buff0_thd4' '_Bool'
|   |       |   `-UnaryOperator 0x559bb187d6b8 <col:120, col:121> 'int' prefix '!' cannot overflow
|   |       |     `-ImplicitCastExpr 0x559bb187d6a0 <col:121> '_Bool' <LValueToRValue>
|   |       |       `-DeclRefExpr 0x559bb187d680 <col:121> '_Bool' lvalue Var 0x559bb1877f38 'b$r_buff1_thd4' '_Bool'
|   |       |-ImplicitCastExpr 0x559bb187d8b0 <col:138> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x559bb187d710 <col:138> 'int' lvalue Var 0x559bb18780b0 'b$w_buff0' 'int'
|   |       `-ParenExpr 0x559bb187d890 <col:150, col:207> 'int'
|   |         `-ConditionalOperator 0x559bb187d860 <col:151, col:198> 'int'
|   |           |-BinaryOperator 0x559bb187d7d0 <col:151, col:169> 'int' '&&'
|   |           | |-ImplicitCastExpr 0x559bb187d788 <col:151> 'int' <IntegralCast>
|   |           | | `-ImplicitCastExpr 0x559bb187d770 <col:151> '_Bool' <LValueToRValue>
|   |           | |   `-DeclRefExpr 0x559bb187d730 <col:151> '_Bool' lvalue Var 0x559bb1878128 'b$w_buff0_used' '_Bool'
|   |           | `-ImplicitCastExpr 0x559bb187d7b8 <col:169> 'int' <IntegralCast>
|   |           |   `-ImplicitCastExpr 0x559bb187d7a0 <col:169> '_Bool' <LValueToRValue>
|   |           |     `-DeclRefExpr 0x559bb187d750 <col:169> '_Bool' lvalue Var 0x559bb1877ce0 'b$r_buff0_thd4' '_Bool'
|   |           |-ImplicitCastExpr 0x559bb187d830 <col:186> 'int' <LValueToRValue>
|   |           | `-DeclRefExpr 0x559bb187d7f0 <col:186> 'int' lvalue Var 0x559bb18780b0 'b$w_buff0' 'int'
|   |           `-ImplicitCastExpr 0x559bb187d848 <col:198> 'int' <LValueToRValue>
|   |             `-DeclRefExpr 0x559bb187d810 <col:198> 'int' lvalue Var 0x559bb18780b0 'b$w_buff0' 'int'
|   |-BinaryOperator 0x559bb187dec0 <line:802:3, col:208> 'int' '='
|   | |-DeclRefExpr 0x559bb187d9b0 <col:3> 'int' lvalue Var 0x559bb18781a8 'b$w_buff1' 'int'
|   | `-ConditionalOperator 0x559bb187de90 <col:15, col:208> 'int'
|   |   |-ImplicitCastExpr 0x559bb187de60 <col:15> 'int' <IntegralCast>
|   |   | `-ImplicitCastExpr 0x559bb187de48 <col:15> '_Bool' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x559bb187d9d0 <col:15> '_Bool' lvalue Var 0x559bb1878760 'weak$$choice2' '_Bool'
|   |   |-ImplicitCastExpr 0x559bb187de78 <col:31> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x559bb187d9f0 <col:31> 'int' lvalue Var 0x559bb18781a8 'b$w_buff1' 'int'
|   |   `-ParenExpr 0x559bb187de28 <col:43, col:208> 'int'
|   |     `-ConditionalOperator 0x559bb187ddf8 <col:44, col:207> 'int'
|   |       |-BinaryOperator 0x559bb187dc20 <col:44, col:121> 'int' '||'
|   |       | |-BinaryOperator 0x559bb187db20 <col:44, col:83> 'int' '||'
|   |       | | |-UnaryOperator 0x559bb187da48 <col:44, col:45> 'int' prefix '!' cannot overflow
|   |       | | | `-ImplicitCastExpr 0x559bb187da30 <col:45> '_Bool' <LValueToRValue>
|   |       | | |   `-DeclRefExpr 0x559bb187da10 <col:45> '_Bool' lvalue Var 0x559bb1878128 'b$w_buff0_used' '_Bool'
|   |       | | `-BinaryOperator 0x559bb187db00 <col:63, col:83> 'int' '&&'
|   |       | |   |-UnaryOperator 0x559bb187da98 <col:63, col:64> 'int' prefix '!' cannot overflow
|   |       | |   | `-ImplicitCastExpr 0x559bb187da80 <col:64> '_Bool' <LValueToRValue>
|   |       | |   |   `-DeclRefExpr 0x559bb187da60 <col:64> '_Bool' lvalue Var 0x559bb1877ce0 'b$r_buff0_thd4' '_Bool'
|   |       | |   `-UnaryOperator 0x559bb187dae8 <col:82, col:83> 'int' prefix '!' cannot overflow
|   |       | |     `-ImplicitCastExpr 0x559bb187dad0 <col:83> '_Bool' <LValueToRValue>
|   |       | |       `-DeclRefExpr 0x559bb187dab0 <col:83> '_Bool' lvalue Var 0x559bb1878220 'b$w_buff1_used' '_Bool'
|   |       | `-BinaryOperator 0x559bb187dc00 <col:101, col:121> 'int' '&&'
|   |       |   |-UnaryOperator 0x559bb187db98 <col:101, col:102> 'int' prefix '!' cannot overflow
|   |       |   | `-ImplicitCastExpr 0x559bb187db80 <col:102> '_Bool' <LValueToRValue>
|   |       |   |   `-DeclRefExpr 0x559bb187db60 <col:102> '_Bool' lvalue Var 0x559bb1877ce0 'b$r_buff0_thd4' '_Bool'
|   |       |   `-UnaryOperator 0x559bb187dbe8 <col:120, col:121> 'int' prefix '!' cannot overflow
|   |       |     `-ImplicitCastExpr 0x559bb187dbd0 <col:121> '_Bool' <LValueToRValue>
|   |       |       `-DeclRefExpr 0x559bb187dbb0 <col:121> '_Bool' lvalue Var 0x559bb1877f38 'b$r_buff1_thd4' '_Bool'
|   |       |-ImplicitCastExpr 0x559bb187dde0 <col:138> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x559bb187dc40 <col:138> 'int' lvalue Var 0x559bb18781a8 'b$w_buff1' 'int'
|   |       `-ParenExpr 0x559bb187ddc0 <col:150, col:207> 'int'
|   |         `-ConditionalOperator 0x559bb187dd90 <col:151, col:198> 'int'
|   |           |-BinaryOperator 0x559bb187dd00 <col:151, col:169> 'int' '&&'
|   |           | |-ImplicitCastExpr 0x559bb187dcb8 <col:151> 'int' <IntegralCast>
|   |           | | `-ImplicitCastExpr 0x559bb187dca0 <col:151> '_Bool' <LValueToRValue>
|   |           | |   `-DeclRefExpr 0x559bb187dc60 <col:151> '_Bool' lvalue Var 0x559bb1878128 'b$w_buff0_used' '_Bool'
|   |           | `-ImplicitCastExpr 0x559bb187dce8 <col:169> 'int' <IntegralCast>
|   |           |   `-ImplicitCastExpr 0x559bb187dcd0 <col:169> '_Bool' <LValueToRValue>
|   |           |     `-DeclRefExpr 0x559bb187dc80 <col:169> '_Bool' lvalue Var 0x559bb1877ce0 'b$r_buff0_thd4' '_Bool'
|   |           |-ImplicitCastExpr 0x559bb187dd60 <col:186> 'int' <LValueToRValue>
|   |           | `-DeclRefExpr 0x559bb187dd20 <col:186> 'int' lvalue Var 0x559bb18781a8 'b$w_buff1' 'int'
|   |           `-ImplicitCastExpr 0x559bb187dd78 <col:198> 'int' <LValueToRValue>
|   |             `-DeclRefExpr 0x559bb187dd40 <col:198> 'int' lvalue Var 0x559bb18781a8 'b$w_buff1' 'int'
|   |-BinaryOperator 0x559bb187e468 <line:803:3, col:227> '_Bool' '='
|   | |-DeclRefExpr 0x559bb187dee0 <col:3> '_Bool' lvalue Var 0x559bb1878128 'b$w_buff0_used' '_Bool'
|   | `-ImplicitCastExpr 0x559bb187e450 <col:20, col:227> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x559bb187e420 <col:20, col:227> 'int'
|   |     |-ImplicitCastExpr 0x559bb187e3d8 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x559bb187e3c0 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x559bb187df00 <col:20> '_Bool' lvalue Var 0x559bb1878760 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x559bb187e408 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x559bb187e3f0 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x559bb187df20 <col:36> '_Bool' lvalue Var 0x559bb1878128 'b$w_buff0_used' '_Bool'
|   |     `-ParenExpr 0x559bb187e3a0 <col:53, col:227> 'int'
|   |       `-ConditionalOperator 0x559bb187e370 <col:54, col:226> 'int'
|   |         |-BinaryOperator 0x559bb187e130 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x559bb187e050 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x559bb187df78 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x559bb187df60 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x559bb187df40 <col:55> '_Bool' lvalue Var 0x559bb1878128 'b$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x559bb187e030 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x559bb187dfc8 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x559bb187dfb0 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x559bb187df90 <col:74> '_Bool' lvalue Var 0x559bb1877ce0 'b$r_buff0_thd4' '_Bool'
|   |         | |   `-UnaryOperator 0x559bb187e018 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x559bb187e000 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x559bb187dfe0 <col:93> '_Bool' lvalue Var 0x559bb1878220 'b$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x559bb187e110 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x559bb187e0a8 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x559bb187e090 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x559bb187e070 <col:112> '_Bool' lvalue Var 0x559bb1877ce0 'b$r_buff0_thd4' '_Bool'
|   |         |   `-UnaryOperator 0x559bb187e0f8 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x559bb187e0e0 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x559bb187e0c0 <col:131> '_Bool' lvalue Var 0x559bb1877f38 'b$r_buff1_thd4' '_Bool'
|   |         |-ImplicitCastExpr 0x559bb187e358 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x559bb187e340 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x559bb187e150 <col:148> '_Bool' lvalue Var 0x559bb1878128 'b$w_buff0_used' '_Bool'
|   |         `-ParenExpr 0x559bb187e320 <col:165, col:226> 'int'
|   |           `-ConditionalOperator 0x559bb187e2f0 <col:166, col:212> 'int'
|   |             |-BinaryOperator 0x559bb187e210 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x559bb187e1c8 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x559bb187e1b0 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x559bb187e170 <col:166> '_Bool' lvalue Var 0x559bb1878128 'b$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x559bb187e1f8 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x559bb187e1e0 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x559bb187e190 <col:184> '_Bool' lvalue Var 0x559bb1877ce0 'b$r_buff0_thd4' '_Bool'
|   |             |-ImplicitCastExpr 0x559bb187e2a8 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x559bb187e260 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x559bb187e230 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x559bb187e2d8 <col:212> 'int' <IntegralCast>
|   |               `-ImplicitCastExpr 0x559bb187e2c0 <col:212> '_Bool' <LValueToRValue>
|   |                 `-DeclRefExpr 0x559bb187e288 <col:212> '_Bool' lvalue Var 0x559bb1878128 'b$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x559bb187ea30 <line:804:3, col:221> '_Bool' '='
|   | |-DeclRefExpr 0x559bb187e488 <col:3> '_Bool' lvalue Var 0x559bb1878220 'b$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x559bb187ea18 <col:20, col:221> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x559bb187e9e8 <col:20, col:221> 'int'
|   |     |-ImplicitCastExpr 0x559bb187e9a0 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x559bb187e988 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x559bb187e4a8 <col:20> '_Bool' lvalue Var 0x559bb1878760 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x559bb187e9d0 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x559bb187e9b8 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x559bb187e4c8 <col:36> '_Bool' lvalue Var 0x559bb1878220 'b$w_buff1_used' '_Bool'
|   |     `-ParenExpr 0x559bb187e968 <col:53, col:221> 'int'
|   |       `-ConditionalOperator 0x559bb187e938 <col:54, col:220> 'int'
|   |         |-BinaryOperator 0x559bb187e6d8 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x559bb187e5f8 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x559bb187e520 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x559bb187e508 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x559bb187e4e8 <col:55> '_Bool' lvalue Var 0x559bb1878128 'b$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x559bb187e5d8 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x559bb187e570 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x559bb187e558 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x559bb187e538 <col:74> '_Bool' lvalue Var 0x559bb1877ce0 'b$r_buff0_thd4' '_Bool'
|   |         | |   `-UnaryOperator 0x559bb187e5c0 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x559bb187e5a8 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x559bb187e588 <col:93> '_Bool' lvalue Var 0x559bb1878220 'b$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x559bb187e6b8 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x559bb187e650 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x559bb187e638 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x559bb187e618 <col:112> '_Bool' lvalue Var 0x559bb1877ce0 'b$r_buff0_thd4' '_Bool'
|   |         |   `-UnaryOperator 0x559bb187e6a0 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x559bb187e688 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x559bb187e668 <col:131> '_Bool' lvalue Var 0x559bb1877f38 'b$r_buff1_thd4' '_Bool'
|   |         |-ImplicitCastExpr 0x559bb187e920 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x559bb187e908 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x559bb187e6f8 <col:148> '_Bool' lvalue Var 0x559bb1878220 'b$w_buff1_used' '_Bool'
|   |         `-ParenExpr 0x559bb187e8e8 <col:165, col:220> 'int'
|   |           `-ConditionalOperator 0x559bb187e8b8 <col:166, col:219> 'int'
|   |             |-BinaryOperator 0x559bb187e7b8 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x559bb187e770 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x559bb187e758 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x559bb187e718 <col:166> '_Bool' lvalue Var 0x559bb1878128 'b$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x559bb187e7a0 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x559bb187e788 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x559bb187e738 <col:184> '_Bool' lvalue Var 0x559bb1877ce0 'b$r_buff0_thd4' '_Bool'
|   |             |-ImplicitCastExpr 0x559bb187e888 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x559bb187e808 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x559bb187e7d8 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x559bb187e8a0 <col:212, col:219> 'int' <IntegralCast>
|   |               `-CStyleCastExpr 0x559bb187e860 <col:212, col:219> '_Bool' <IntegralToBoolean>
|   |                 `-IntegerLiteral 0x559bb187e830 <col:219> 'int' 0
|   |-BinaryOperator 0x559bb187eff8 <line:805:3, col:227> '_Bool' '='
|   | |-DeclRefExpr 0x559bb187ea50 <col:3> '_Bool' lvalue Var 0x559bb1877ce0 'b$r_buff0_thd4' '_Bool'
|   | `-ImplicitCastExpr 0x559bb187efe0 <col:20, col:227> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x559bb187efb0 <col:20, col:227> 'int'
|   |     |-ImplicitCastExpr 0x559bb187ef68 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x559bb187ef50 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x559bb187ea70 <col:20> '_Bool' lvalue Var 0x559bb1878760 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x559bb187ef98 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x559bb187ef80 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x559bb187ea90 <col:36> '_Bool' lvalue Var 0x559bb1877ce0 'b$r_buff0_thd4' '_Bool'
|   |     `-ParenExpr 0x559bb187ef30 <col:53, col:227> 'int'
|   |       `-ConditionalOperator 0x559bb187ef00 <col:54, col:226> 'int'
|   |         |-BinaryOperator 0x559bb187ecc0 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x559bb187ebe0 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x559bb187eae8 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x559bb187ead0 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x559bb187eab0 <col:55> '_Bool' lvalue Var 0x559bb1878128 'b$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x559bb187ebc0 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x559bb187eb38 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x559bb187eb20 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x559bb187eb00 <col:74> '_Bool' lvalue Var 0x559bb1877ce0 'b$r_buff0_thd4' '_Bool'
|   |         | |   `-UnaryOperator 0x559bb187eba8 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x559bb187eb90 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x559bb187eb70 <col:93> '_Bool' lvalue Var 0x559bb1878220 'b$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x559bb187eca0 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x559bb187ec38 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x559bb187ec20 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x559bb187ec00 <col:112> '_Bool' lvalue Var 0x559bb1877ce0 'b$r_buff0_thd4' '_Bool'
|   |         |   `-UnaryOperator 0x559bb187ec88 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x559bb187ec70 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x559bb187ec50 <col:131> '_Bool' lvalue Var 0x559bb1877f38 'b$r_buff1_thd4' '_Bool'
|   |         |-ImplicitCastExpr 0x559bb187eee8 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x559bb187eed0 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x559bb187ece0 <col:148> '_Bool' lvalue Var 0x559bb1877ce0 'b$r_buff0_thd4' '_Bool'
|   |         `-ParenExpr 0x559bb187eeb0 <col:165, col:226> 'int'
|   |           `-ConditionalOperator 0x559bb187ee80 <col:166, col:212> 'int'
|   |             |-BinaryOperator 0x559bb187eda0 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x559bb187ed58 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x559bb187ed40 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x559bb187ed00 <col:166> '_Bool' lvalue Var 0x559bb1878128 'b$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x559bb187ed88 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x559bb187ed70 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x559bb187ed20 <col:184> '_Bool' lvalue Var 0x559bb1877ce0 'b$r_buff0_thd4' '_Bool'
|   |             |-ImplicitCastExpr 0x559bb187ee38 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x559bb187edf0 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x559bb187edc0 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x559bb187ee68 <col:212> 'int' <IntegralCast>
|   |               `-ImplicitCastExpr 0x559bb187ee50 <col:212> '_Bool' <LValueToRValue>
|   |                 `-DeclRefExpr 0x559bb187ee18 <col:212> '_Bool' lvalue Var 0x559bb1877ce0 'b$r_buff0_thd4' '_Bool'
|   |-BinaryOperator 0x559bb187f5c0 <line:806:3, col:221> '_Bool' '='
|   | |-DeclRefExpr 0x559bb187f018 <col:3> '_Bool' lvalue Var 0x559bb1877f38 'b$r_buff1_thd4' '_Bool'
|   | `-ImplicitCastExpr 0x559bb187f5a8 <col:20, col:221> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x559bb187f578 <col:20, col:221> 'int'
|   |     |-ImplicitCastExpr 0x559bb187f530 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x559bb187f518 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x559bb187f038 <col:20> '_Bool' lvalue Var 0x559bb1878760 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x559bb187f560 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x559bb187f548 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x559bb187f058 <col:36> '_Bool' lvalue Var 0x559bb1877f38 'b$r_buff1_thd4' '_Bool'
|   |     `-ParenExpr 0x559bb187f4f8 <col:53, col:221> 'int'
|   |       `-ConditionalOperator 0x559bb187f4c8 <col:54, col:220> 'int'
|   |         |-BinaryOperator 0x559bb187f268 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x559bb187f188 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x559bb187f0b0 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x559bb187f098 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x559bb187f078 <col:55> '_Bool' lvalue Var 0x559bb1878128 'b$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x559bb187f168 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x559bb187f100 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x559bb187f0e8 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x559bb187f0c8 <col:74> '_Bool' lvalue Var 0x559bb1877ce0 'b$r_buff0_thd4' '_Bool'
|   |         | |   `-UnaryOperator 0x559bb187f150 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x559bb187f138 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x559bb187f118 <col:93> '_Bool' lvalue Var 0x559bb1878220 'b$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x559bb187f248 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x559bb187f1e0 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x559bb187f1c8 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x559bb187f1a8 <col:112> '_Bool' lvalue Var 0x559bb1877ce0 'b$r_buff0_thd4' '_Bool'
|   |         |   `-UnaryOperator 0x559bb187f230 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x559bb187f218 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x559bb187f1f8 <col:131> '_Bool' lvalue Var 0x559bb1877f38 'b$r_buff1_thd4' '_Bool'
|   |         |-ImplicitCastExpr 0x559bb187f4b0 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x559bb187f498 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x559bb187f288 <col:148> '_Bool' lvalue Var 0x559bb1877f38 'b$r_buff1_thd4' '_Bool'
|   |         `-ParenExpr 0x559bb187f478 <col:165, col:220> 'int'
|   |           `-ConditionalOperator 0x559bb187f448 <col:166, col:219> 'int'
|   |             |-BinaryOperator 0x559bb187f348 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x559bb187f300 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x559bb187f2e8 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x559bb187f2a8 <col:166> '_Bool' lvalue Var 0x559bb1878128 'b$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x559bb187f330 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x559bb187f318 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x559bb187f2c8 <col:184> '_Bool' lvalue Var 0x559bb1877ce0 'b$r_buff0_thd4' '_Bool'
|   |             |-ImplicitCastExpr 0x559bb187f418 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x559bb187f398 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x559bb187f368 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x559bb187f430 <col:212, col:219> 'int' <IntegralCast>
|   |               `-CStyleCastExpr 0x559bb187f3f0 <col:212, col:219> '_Bool' <IntegralToBoolean>
|   |                 `-IntegerLiteral 0x559bb187f3c0 <col:219> 'int' 0
|   |-BinaryOperator 0x559bb187f638 <line:807:3, col:25> 'int' '='
|   | |-DeclRefExpr 0x559bb187f5e0 <col:3> 'int' lvalue Var 0x559bb18776f8 '__unbuffered_p3_EBX' 'int'
|   | `-ImplicitCastExpr 0x559bb187f620 <col:25> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x559bb187f600 <col:25> 'int' lvalue Var 0x559bb1877938 'b' 'int'
|   |-BinaryOperator 0x559bb187f768 <line:808:3, col:37> 'int' '='
|   | |-DeclRefExpr 0x559bb187f658 <col:3> 'int' lvalue Var 0x559bb1877938 'b' 'int'
|   | `-ConditionalOperator 0x559bb187f738 <col:7, col:37> 'int'
|   |   |-ImplicitCastExpr 0x559bb187f6f0 <col:7> 'int' <IntegralCast>
|   |   | `-ImplicitCastExpr 0x559bb187f6d8 <col:7> '_Bool' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x559bb187f678 <col:7> '_Bool' lvalue Var 0x559bb18779d0 'b$flush_delayed' '_Bool'
|   |   |-ImplicitCastExpr 0x559bb187f708 <col:25> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x559bb187f698 <col:25> 'int' lvalue Var 0x559bb1877a50 'b$mem_tmp' 'int'
|   |   `-ImplicitCastExpr 0x559bb187f720 <col:37> 'int' <LValueToRValue>
|   |     `-DeclRefExpr 0x559bb187f6b8 <col:37> 'int' lvalue Var 0x559bb1877938 'b' 'int'
|   |-BinaryOperator 0x559bb187f800 <line:809:3, col:28> '_Bool' '='
|   | |-DeclRefExpr 0x559bb187f788 <col:3> '_Bool' lvalue Var 0x559bb18779d0 'b$flush_delayed' '_Bool'
|   | `-CStyleCastExpr 0x559bb187f7d8 <col:21, col:28> '_Bool' <IntegralToBoolean>
|   |   `-IntegerLiteral 0x559bb187f7a8 <col:28> 'int' 0
|   |-CallExpr 0x559bb187f858 <line:810:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x559bb187f840 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x559bb187f820 <col:3> 'void ()' Function 0x559bb181df00 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x559bb187f8b0 <line:811:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x559bb187f898 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x559bb187f878 <col:3> 'void ()' Function 0x559bb181de40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x559bb187fbb0 <line:812:3, col:103> 'int' '='
|   | |-DeclRefExpr 0x559bb187f8d0 <col:3> 'int' lvalue Var 0x559bb1877938 'b' 'int'
|   | `-ConditionalOperator 0x559bb187fb80 <col:7, col:103> 'int'
|   |   |-BinaryOperator 0x559bb187f990 <col:7, col:25> 'int' '&&'
|   |   | |-ImplicitCastExpr 0x559bb187f948 <col:7> 'int' <IntegralCast>
|   |   | | `-ImplicitCastExpr 0x559bb187f930 <col:7> '_Bool' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x559bb187f8f0 <col:7> '_Bool' lvalue Var 0x559bb1878128 'b$w_buff0_used' '_Bool'
|   |   | `-ImplicitCastExpr 0x559bb187f978 <col:25> 'int' <IntegralCast>
|   |   |   `-ImplicitCastExpr 0x559bb187f960 <col:25> '_Bool' <LValueToRValue>
|   |   |     `-DeclRefExpr 0x559bb187f910 <col:25> '_Bool' lvalue Var 0x559bb1877ce0 'b$r_buff0_thd4' '_Bool'
|   |   |-ImplicitCastExpr 0x559bb187fb50 <col:42> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x559bb187f9b0 <col:42> 'int' lvalue Var 0x559bb18780b0 'b$w_buff0' 'int'
|   |   `-ParenExpr 0x559bb187fb30 <col:54, col:103> 'int'
|   |     `-ConditionalOperator 0x559bb187fb00 <col:55, col:102> 'int'
|   |       |-BinaryOperator 0x559bb187fa70 <col:55, col:73> 'int' '&&'
|   |       | |-ImplicitCastExpr 0x559bb187fa28 <col:55> 'int' <IntegralCast>
|   |       | | `-ImplicitCastExpr 0x559bb187fa10 <col:55> '_Bool' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x559bb187f9d0 <col:55> '_Bool' lvalue Var 0x559bb1878220 'b$w_buff1_used' '_Bool'
|   |       | `-ImplicitCastExpr 0x559bb187fa58 <col:73> 'int' <IntegralCast>
|   |       |   `-ImplicitCastExpr 0x559bb187fa40 <col:73> '_Bool' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x559bb187f9f0 <col:73> '_Bool' lvalue Var 0x559bb1877f38 'b$r_buff1_thd4' '_Bool'
|   |       |-ImplicitCastExpr 0x559bb187fad0 <col:90> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x559bb187fa90 <col:90> 'int' lvalue Var 0x559bb18781a8 'b$w_buff1' 'int'
|   |       `-ImplicitCastExpr 0x559bb187fae8 <col:102> 'int' <LValueToRValue>
|   |         `-DeclRefExpr 0x559bb187fab0 <col:102> 'int' lvalue Var 0x559bb1877938 'b' 'int'
|   |-BinaryOperator 0x559bb187fdb8 <line:813:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x559bb187fbd0 <col:3> '_Bool' lvalue Var 0x559bb1878128 'b$w_buff0_used' '_Bool'
|   | `-ImplicitCastExpr 0x559bb187fda0 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x559bb187fd70 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x559bb187fc90 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x559bb187fc48 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x559bb187fc30 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x559bb187fbf0 <col:20> '_Bool' lvalue Var 0x559bb1878128 'b$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x559bb187fc78 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x559bb187fc60 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x559bb187fc10 <col:38> '_Bool' lvalue Var 0x559bb1877ce0 'b$r_buff0_thd4' '_Bool'
|   |     |-ImplicitCastExpr 0x559bb187fd28 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x559bb187fce0 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x559bb187fcb0 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x559bb187fd58 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x559bb187fd40 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x559bb187fd08 <col:66> '_Bool' lvalue Var 0x559bb1878128 'b$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x559bb18800a0 <line:814:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x559bb187fdd8 <col:3> '_Bool' lvalue Var 0x559bb1878220 'b$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x559bb1880088 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x559bb1880058 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x559bb187ff78 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x559bb187fe98 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x559bb187fe50 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x559bb187fe38 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x559bb187fdf8 <col:20> '_Bool' lvalue Var 0x559bb1878128 'b$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x559bb187fe80 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x559bb187fe68 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x559bb187fe18 <col:38> '_Bool' lvalue Var 0x559bb1877ce0 'b$r_buff0_thd4' '_Bool'
|   |     | `-BinaryOperator 0x559bb187ff58 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x559bb187ff10 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x559bb187fef8 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x559bb187feb8 <col:56> '_Bool' lvalue Var 0x559bb1878220 'b$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x559bb187ff40 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x559bb187ff28 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x559bb187fed8 <col:74> '_Bool' lvalue Var 0x559bb1877f38 'b$r_buff1_thd4' '_Bool'
|   |     |-ImplicitCastExpr 0x559bb1880010 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x559bb187ffc8 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x559bb187ff98 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x559bb1880040 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x559bb1880028 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x559bb187fff0 <col:102> '_Bool' lvalue Var 0x559bb1878220 'b$w_buff1_used' '_Bool'
|   |-BinaryOperator 0x559bb18802a8 <line:815:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x559bb18800c0 <col:3> '_Bool' lvalue Var 0x559bb1877ce0 'b$r_buff0_thd4' '_Bool'
|   | `-ImplicitCastExpr 0x559bb1880290 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x559bb1880260 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x559bb1880180 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x559bb1880138 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x559bb1880120 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x559bb18800e0 <col:20> '_Bool' lvalue Var 0x559bb1878128 'b$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x559bb1880168 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x559bb1880150 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x559bb1880100 <col:38> '_Bool' lvalue Var 0x559bb1877ce0 'b$r_buff0_thd4' '_Bool'
|   |     |-ImplicitCastExpr 0x559bb1880218 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x559bb18801d0 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x559bb18801a0 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x559bb1880248 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x559bb1880230 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x559bb18801f8 <col:66> '_Bool' lvalue Var 0x559bb1877ce0 'b$r_buff0_thd4' '_Bool'
|   |-BinaryOperator 0x559bb1880590 <line:816:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x559bb18802c8 <col:3> '_Bool' lvalue Var 0x559bb1877f38 'b$r_buff1_thd4' '_Bool'
|   | `-ImplicitCastExpr 0x559bb1880578 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x559bb1880548 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x559bb1880468 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x559bb1880388 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x559bb1880340 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x559bb1880328 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x559bb18802e8 <col:20> '_Bool' lvalue Var 0x559bb1878128 'b$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x559bb1880370 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x559bb1880358 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x559bb1880308 <col:38> '_Bool' lvalue Var 0x559bb1877ce0 'b$r_buff0_thd4' '_Bool'
|   |     | `-BinaryOperator 0x559bb1880448 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x559bb1880400 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x559bb18803e8 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x559bb18803a8 <col:56> '_Bool' lvalue Var 0x559bb1878220 'b$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x559bb1880430 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x559bb1880418 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x559bb18803c8 <col:74> '_Bool' lvalue Var 0x559bb1877f38 'b$r_buff1_thd4' '_Bool'
|   |     |-ImplicitCastExpr 0x559bb1880500 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x559bb18804b8 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x559bb1880488 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x559bb1880530 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x559bb1880518 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x559bb18804e0 <col:102> '_Bool' lvalue Var 0x559bb1877f38 'b$r_buff1_thd4' '_Bool'
|   |-CallExpr 0x559bb18805e8 <line:817:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x559bb18805d0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x559bb18805b0 <col:3> 'void ()' Function 0x559bb181df00 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x559bb1880640 <line:818:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x559bb1880628 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x559bb1880608 <col:3> 'void ()' Function 0x559bb181de40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x559bb18806f8 <line:819:3, col:41> 'int' '='
|   | |-DeclRefExpr 0x559bb1880660 <col:3> 'int' lvalue Var 0x559bb1877278 '__unbuffered_cnt' 'int'
|   | `-BinaryOperator 0x559bb18806d8 <col:22, col:41> 'int' '+'
|   |   |-ImplicitCastExpr 0x559bb18806c0 <col:22> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x559bb1880680 <col:22> 'int' lvalue Var 0x559bb1877278 '__unbuffered_cnt' 'int'
|   |   `-IntegerLiteral 0x559bb18806a0 <col:41> 'int' 1
|   |-CallExpr 0x559bb1880750 <line:820:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x559bb1880738 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x559bb1880718 <col:3> 'void ()' Function 0x559bb181df00 '__VERIFIER_atomic_end' 'void ()'
|   `-ReturnStmt 0x559bb18807c8 <line:821:3, col:36>
|     `-CallExpr 0x559bb18807a8 <col:10, col:36> 'void *'
|       `-ImplicitCastExpr 0x559bb1880790 <col:10> 'void *(*)(void)' <FunctionToPointerDecay>
|         `-DeclRefExpr 0x559bb1880770 <col:10> 'void *(void)' Function 0x559bb181d958 '__VERIFIER_nondet_pointer' 'void *(void)'
|-FunctionDecl 0x559bb1880928 prev 0x559bb1876fc0 <line:823:1, line:825:1> line:823:6 fence 'void ()'
| `-CompoundStmt 0x559bb18809c8 <line:824:1, line:825:1>
|-FunctionDecl 0x559bb18809f8 prev 0x559bb1877080 <line:826:1, line:828:1> line:826:6 isync 'void ()'
| `-CompoundStmt 0x559bb1880a98 <line:827:1, line:828:1>
|-FunctionDecl 0x559bb1880ac8 prev 0x559bb1877140 <line:829:1, line:831:1> line:829:6 lwfence 'void ()'
| `-CompoundStmt 0x559bb1880b68 <line:830:1, line:831:1>
`-FunctionDecl 0x559bb1880be8 <line:832:1, line:858:1> line:832:5 main 'int ()'
  `-CompoundStmt 0x559bb1882bf8 <line:833:1, line:858:1>
    |-DeclStmt 0x559bb1880d00 <line:834:3, col:18>
    | `-VarDecl 0x559bb1880c98 <col:3, col:13> col:13 used t1051 'pthread_t':'unsigned long'
    |-CallExpr 0x559bb1880f08 <line:835:3, col:54> 'int'
    | |-ImplicitCastExpr 0x559bb1880ef0 <col:3> 'int (*)(pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x559bb1880d18 <col:3> 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' Function 0x559bb185e488 'pthread_create' 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)'
    | |-UnaryOperator 0x559bb1880d58 <col:18, col:19> 'pthread_t *' prefix '&' cannot overflow
    | | `-DeclRefExpr 0x559bb1880d38 <col:19> 'pthread_t':'unsigned long' lvalue Var 0x559bb1880c98 't1051' 'pthread_t':'unsigned long'
    | |-ImplicitCastExpr 0x559bb1880f48 <col:26, col:36> 'const pthread_attr_t *' <NullToPointer>
    | | `-ParenExpr 0x559bb1880dd0 <col:26, col:36> 'void *'
    | |   `-CStyleCastExpr 0x559bb1880da8 <col:27, col:35> 'void *' <NullToPointer>
    | |     `-IntegerLiteral 0x559bb1880d70 <col:35> 'int' 0
    | |-ImplicitCastExpr 0x559bb1880f60 <col:39> 'void *(*)(void *)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x559bb1880df0 <col:39> 'void *(void *)' Function 0x559bb1878878 'P0' 'void *(void *)'
    | `-ParenExpr 0x559bb1880e70 <col:43, col:53> 'void *'
    |   `-CStyleCastExpr 0x559bb1880e48 <col:44, col:52> 'void *' <NullToPointer>
    |     `-IntegerLiteral 0x559bb1880e10 <col:52> 'int' 0
    |-DeclStmt 0x559bb1880ff0 <line:836:3, col:18>
    | `-VarDecl 0x559bb1880f88 <col:3, col:13> col:13 used t1052 'pthread_t':'unsigned long'
    |-CallExpr 0x559bb1881198 <line:837:3, col:54> 'int'
    | |-ImplicitCastExpr 0x559bb1881180 <col:3> 'int (*)(pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x559bb1881008 <col:3> 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' Function 0x559bb185e488 'pthread_create' 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)'
    | |-UnaryOperator 0x559bb1881048 <col:18, col:19> 'pthread_t *' prefix '&' cannot overflow
    | | `-DeclRefExpr 0x559bb1881028 <col:19> 'pthread_t':'unsigned long' lvalue Var 0x559bb1880f88 't1052' 'pthread_t':'unsigned long'
    | |-ImplicitCastExpr 0x559bb18811d8 <col:26, col:36> 'const pthread_attr_t *' <NullToPointer>
    | | `-ParenExpr 0x559bb18810c0 <col:26, col:36> 'void *'
    | |   `-CStyleCastExpr 0x559bb1881098 <col:27, col:35> 'void *' <NullToPointer>
    | |     `-IntegerLiteral 0x559bb1881060 <col:35> 'int' 0
    | |-ImplicitCastExpr 0x559bb18811f0 <col:39> 'void *(*)(void *)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x559bb18810e0 <col:39> 'void *(void *)' Function 0x559bb187a2d0 'P1' 'void *(void *)'
    | `-ParenExpr 0x559bb1881160 <col:43, col:53> 'void *'
    |   `-CStyleCastExpr 0x559bb1881138 <col:44, col:52> 'void *' <NullToPointer>
    |     `-IntegerLiteral 0x559bb1881100 <col:52> 'int' 0
    |-DeclStmt 0x559bb1881280 <line:838:3, col:18>
    | `-VarDecl 0x559bb1881218 <col:3, col:13> col:13 used t1053 'pthread_t':'unsigned long'
    |-CallExpr 0x559bb1881428 <line:839:3, col:54> 'int'
    | |-ImplicitCastExpr 0x559bb1881410 <col:3> 'int (*)(pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x559bb1881298 <col:3> 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' Function 0x559bb185e488 'pthread_create' 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)'
    | |-UnaryOperator 0x559bb18812d8 <col:18, col:19> 'pthread_t *' prefix '&' cannot overflow
    | | `-DeclRefExpr 0x559bb18812b8 <col:19> 'pthread_t':'unsigned long' lvalue Var 0x559bb1881218 't1053' 'pthread_t':'unsigned long'
    | |-ImplicitCastExpr 0x559bb1881468 <col:26, col:36> 'const pthread_attr_t *' <NullToPointer>
    | | `-ParenExpr 0x559bb1881350 <col:26, col:36> 'void *'
    | |   `-CStyleCastExpr 0x559bb1881328 <col:27, col:35> 'void *' <NullToPointer>
    | |     `-IntegerLiteral 0x559bb18812f0 <col:35> 'int' 0
    | |-ImplicitCastExpr 0x559bb1881480 <col:39> 'void *(*)(void *)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x559bb1881370 <col:39> 'void *(void *)' Function 0x559bb187b638 'P2' 'void *(void *)'
    | `-ParenExpr 0x559bb18813f0 <col:43, col:53> 'void *'
    |   `-CStyleCastExpr 0x559bb18813c8 <col:44, col:52> 'void *' <NullToPointer>
    |     `-IntegerLiteral 0x559bb1881390 <col:52> 'int' 0
    |-DeclStmt 0x559bb1881510 <line:840:3, col:18>
    | `-VarDecl 0x559bb18814a8 <col:3, col:13> col:13 used t1054 'pthread_t':'unsigned long'
    |-CallExpr 0x559bb18816b8 <line:841:3, col:54> 'int'
    | |-ImplicitCastExpr 0x559bb18816a0 <col:3> 'int (*)(pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x559bb1881528 <col:3> 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' Function 0x559bb185e488 'pthread_create' 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)'
    | |-UnaryOperator 0x559bb1881568 <col:18, col:19> 'pthread_t *' prefix '&' cannot overflow
    | | `-DeclRefExpr 0x559bb1881548 <col:19> 'pthread_t':'unsigned long' lvalue Var 0x559bb18814a8 't1054' 'pthread_t':'unsigned long'
    | |-ImplicitCastExpr 0x559bb18816f8 <col:26, col:36> 'const pthread_attr_t *' <NullToPointer>
    | | `-ParenExpr 0x559bb18815e0 <col:26, col:36> 'void *'
    | |   `-CStyleCastExpr 0x559bb18815b8 <col:27, col:35> 'void *' <NullToPointer>
    | |     `-IntegerLiteral 0x559bb1881580 <col:35> 'int' 0
    | |-ImplicitCastExpr 0x559bb1881710 <col:39> 'void *(*)(void *)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x559bb1881600 <col:39> 'void *(void *)' Function 0x559bb187c9b8 'P3' 'void *(void *)'
    | `-ParenExpr 0x559bb1881680 <col:43, col:53> 'void *'
    |   `-CStyleCastExpr 0x559bb1881658 <col:44, col:52> 'void *' <NullToPointer>
    |     `-IntegerLiteral 0x559bb1881620 <col:52> 'int' 0
    |-CallExpr 0x559bb1881760 <line:842:3, col:27> 'void'
    | `-ImplicitCastExpr 0x559bb1881748 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x559bb1881728 <col:3> 'void ()' Function 0x559bb181de40 '__VERIFIER_atomic_begin' 'void ()'
    |-BinaryOperator 0x559bb1881830 <line:843:3, col:41> '_Bool' '='
    | |-DeclRefExpr 0x559bb1881780 <col:3> '_Bool' lvalue Var 0x559bb1878298 'main$tmp_guard0' '_Bool'
    | `-ImplicitCastExpr 0x559bb1881818 <col:21, col:41> '_Bool' <IntegralToBoolean>
    |   `-BinaryOperator 0x559bb18817f8 <col:21, col:41> 'int' '=='
    |     |-ImplicitCastExpr 0x559bb18817e0 <col:21> 'int' <LValueToRValue>
    |     | `-DeclRefExpr 0x559bb18817a0 <col:21> 'int' lvalue Var 0x559bb1877278 '__unbuffered_cnt' 'int'
    |     `-IntegerLiteral 0x559bb18817c0 <col:41> 'int' 4
    |-CallExpr 0x559bb1881888 <line:844:3, col:25> 'void'
    | `-ImplicitCastExpr 0x559bb1881870 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x559bb1881850 <col:3> 'void ()' Function 0x559bb181df00 '__VERIFIER_atomic_end' 'void ()'
    |-CallExpr 0x559bb1881900 <line:845:3, col:36> 'void'
    | |-ImplicitCastExpr 0x559bb18818e8 <col:3> 'void (*)(int)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x559bb18818a8 <col:3> 'void (int)' Function 0x559bb181d790 '__VERIFIER_assume' 'void (int)'
    | `-ImplicitCastExpr 0x559bb1881940 <col:21> 'int' <IntegralCast>
    |   `-ImplicitCastExpr 0x559bb1881928 <col:21> '_Bool' <LValueToRValue>
    |     `-DeclRefExpr 0x559bb18818c8 <col:21> '_Bool' lvalue Var 0x559bb1878298 'main$tmp_guard0' '_Bool'
    |-CallExpr 0x559bb1881990 <line:846:3, col:27> 'void'
    | `-ImplicitCastExpr 0x559bb1881978 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x559bb1881958 <col:3> 'void ()' Function 0x559bb181de40 '__VERIFIER_atomic_begin' 'void ()'
    |-BinaryOperator 0x559bb1881c88 <line:847:3, col:103> 'int' '='
    | |-DeclRefExpr 0x559bb18819b0 <col:3> 'int' lvalue Var 0x559bb1877938 'b' 'int'
    | `-ConditionalOperator 0x559bb1881c58 <col:7, col:103> 'int'
    |   |-BinaryOperator 0x559bb1881a70 <col:7, col:25> 'int' '&&'
    |   | |-ImplicitCastExpr 0x559bb1881a28 <col:7> 'int' <IntegralCast>
    |   | | `-ImplicitCastExpr 0x559bb1881a10 <col:7> '_Bool' <LValueToRValue>
    |   | |   `-DeclRefExpr 0x559bb18819d0 <col:7> '_Bool' lvalue Var 0x559bb1878128 'b$w_buff0_used' '_Bool'
    |   | `-ImplicitCastExpr 0x559bb1881a58 <col:25> 'int' <IntegralCast>
    |   |   `-ImplicitCastExpr 0x559bb1881a40 <col:25> '_Bool' <LValueToRValue>
    |   |     `-DeclRefExpr 0x559bb18819f0 <col:25> '_Bool' lvalue Var 0x559bb1877b00 'b$r_buff0_thd0' '_Bool'
    |   |-ImplicitCastExpr 0x559bb1881c40 <col:42> 'int' <LValueToRValue>
    |   | `-DeclRefExpr 0x559bb1881a90 <col:42> 'int' lvalue Var 0x559bb18780b0 'b$w_buff0' 'int'
    |   `-ParenExpr 0x559bb1881c20 <col:54, col:103> 'int'
    |     `-ConditionalOperator 0x559bb1881bf0 <col:55, col:102> 'int'
    |       |-BinaryOperator 0x559bb1881b50 <col:55, col:73> 'int' '&&'
    |       | |-ImplicitCastExpr 0x559bb1881b08 <col:55> 'int' <IntegralCast>
    |       | | `-ImplicitCastExpr 0x559bb1881af0 <col:55> '_Bool' <LValueToRValue>
    |       | |   `-DeclRefExpr 0x559bb1881ab0 <col:55> '_Bool' lvalue Var 0x559bb1878220 'b$w_buff1_used' '_Bool'
    |       | `-ImplicitCastExpr 0x559bb1881b38 <col:73> 'int' <IntegralCast>
    |       |   `-ImplicitCastExpr 0x559bb1881b20 <col:73> '_Bool' <LValueToRValue>
    |       |     `-DeclRefExpr 0x559bb1881ad0 <col:73> '_Bool' lvalue Var 0x559bb1877d58 'b$r_buff1_thd0' '_Bool'
    |       |-ImplicitCastExpr 0x559bb1881bc0 <col:90> 'int' <LValueToRValue>
    |       | `-DeclRefExpr 0x559bb1881b70 <col:90> 'int' lvalue Var 0x559bb18781a8 'b$w_buff1' 'int'
    |       `-ImplicitCastExpr 0x559bb1881bd8 <col:102> 'int' <LValueToRValue>
    |         `-DeclRefExpr 0x559bb1881ba0 <col:102> 'int' lvalue Var 0x559bb1877938 'b' 'int'
    |-BinaryOperator 0x559bb1881e90 <line:848:3, col:66> '_Bool' '='
    | |-DeclRefExpr 0x559bb1881ca8 <col:3> '_Bool' lvalue Var 0x559bb1878128 'b$w_buff0_used' '_Bool'
    | `-ImplicitCastExpr 0x559bb1881e78 <col:20, col:66> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x559bb1881e48 <col:20, col:66> 'int'
    |     |-BinaryOperator 0x559bb1881d68 <col:20, col:38> 'int' '&&'
    |     | |-ImplicitCastExpr 0x559bb1881d20 <col:20> 'int' <IntegralCast>
    |     | | `-ImplicitCastExpr 0x559bb1881d08 <col:20> '_Bool' <LValueToRValue>
    |     | |   `-DeclRefExpr 0x559bb1881cc8 <col:20> '_Bool' lvalue Var 0x559bb1878128 'b$w_buff0_used' '_Bool'
    |     | `-ImplicitCastExpr 0x559bb1881d50 <col:38> 'int' <IntegralCast>
    |     |   `-ImplicitCastExpr 0x559bb1881d38 <col:38> '_Bool' <LValueToRValue>
    |     |     `-DeclRefExpr 0x559bb1881ce8 <col:38> '_Bool' lvalue Var 0x559bb1877b00 'b$r_buff0_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x559bb1881e00 <col:55, col:62> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x559bb1881db8 <col:55, col:62> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x559bb1881d88 <col:62> 'int' 0
    |     `-ImplicitCastExpr 0x559bb1881e30 <col:66> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x559bb1881e18 <col:66> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x559bb1881de0 <col:66> '_Bool' lvalue Var 0x559bb1878128 'b$w_buff0_used' '_Bool'
    |-BinaryOperator 0x559bb1882178 <line:849:3, col:102> '_Bool' '='
    | |-DeclRefExpr 0x559bb1881eb0 <col:3> '_Bool' lvalue Var 0x559bb1878220 'b$w_buff1_used' '_Bool'
    | `-ImplicitCastExpr 0x559bb1882160 <col:20, col:102> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x559bb1882130 <col:20, col:102> 'int'
    |     |-BinaryOperator 0x559bb1882050 <col:20, col:74> 'int' '||'
    |     | |-BinaryOperator 0x559bb1881f70 <col:20, col:38> 'int' '&&'
    |     | | |-ImplicitCastExpr 0x559bb1881f28 <col:20> 'int' <IntegralCast>
    |     | | | `-ImplicitCastExpr 0x559bb1881f10 <col:20> '_Bool' <LValueToRValue>
    |     | | |   `-DeclRefExpr 0x559bb1881ed0 <col:20> '_Bool' lvalue Var 0x559bb1878128 'b$w_buff0_used' '_Bool'
    |     | | `-ImplicitCastExpr 0x559bb1881f58 <col:38> 'int' <IntegralCast>
    |     | |   `-ImplicitCastExpr 0x559bb1881f40 <col:38> '_Bool' <LValueToRValue>
    |     | |     `-DeclRefExpr 0x559bb1881ef0 <col:38> '_Bool' lvalue Var 0x559bb1877b00 'b$r_buff0_thd0' '_Bool'
    |     | `-BinaryOperator 0x559bb1882030 <col:56, col:74> 'int' '&&'
    |     |   |-ImplicitCastExpr 0x559bb1881fe8 <col:56> 'int' <IntegralCast>
    |     |   | `-ImplicitCastExpr 0x559bb1881fd0 <col:56> '_Bool' <LValueToRValue>
    |     |   |   `-DeclRefExpr 0x559bb1881f90 <col:56> '_Bool' lvalue Var 0x559bb1878220 'b$w_buff1_used' '_Bool'
    |     |   `-ImplicitCastExpr 0x559bb1882018 <col:74> 'int' <IntegralCast>
    |     |     `-ImplicitCastExpr 0x559bb1882000 <col:74> '_Bool' <LValueToRValue>
    |     |       `-DeclRefExpr 0x559bb1881fb0 <col:74> '_Bool' lvalue Var 0x559bb1877d58 'b$r_buff1_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x559bb18820e8 <col:91, col:98> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x559bb18820a0 <col:91, col:98> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x559bb1882070 <col:98> 'int' 0
    |     `-ImplicitCastExpr 0x559bb1882118 <col:102> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x559bb1882100 <col:102> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x559bb18820c8 <col:102> '_Bool' lvalue Var 0x559bb1878220 'b$w_buff1_used' '_Bool'
    |-BinaryOperator 0x559bb1882380 <line:850:3, col:66> '_Bool' '='
    | |-DeclRefExpr 0x559bb1882198 <col:3> '_Bool' lvalue Var 0x559bb1877b00 'b$r_buff0_thd0' '_Bool'
    | `-ImplicitCastExpr 0x559bb1882368 <col:20, col:66> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x559bb1882338 <col:20, col:66> 'int'
    |     |-BinaryOperator 0x559bb1882258 <col:20, col:38> 'int' '&&'
    |     | |-ImplicitCastExpr 0x559bb1882210 <col:20> 'int' <IntegralCast>
    |     | | `-ImplicitCastExpr 0x559bb18821f8 <col:20> '_Bool' <LValueToRValue>
    |     | |   `-DeclRefExpr 0x559bb18821b8 <col:20> '_Bool' lvalue Var 0x559bb1878128 'b$w_buff0_used' '_Bool'
    |     | `-ImplicitCastExpr 0x559bb1882240 <col:38> 'int' <IntegralCast>
    |     |   `-ImplicitCastExpr 0x559bb1882228 <col:38> '_Bool' <LValueToRValue>
    |     |     `-DeclRefExpr 0x559bb18821d8 <col:38> '_Bool' lvalue Var 0x559bb1877b00 'b$r_buff0_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x559bb18822f0 <col:55, col:62> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x559bb18822a8 <col:55, col:62> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x559bb1882278 <col:62> 'int' 0
    |     `-ImplicitCastExpr 0x559bb1882320 <col:66> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x559bb1882308 <col:66> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x559bb18822d0 <col:66> '_Bool' lvalue Var 0x559bb1877b00 'b$r_buff0_thd0' '_Bool'
    |-BinaryOperator 0x559bb1882668 <line:851:3, col:102> '_Bool' '='
    | |-DeclRefExpr 0x559bb18823a0 <col:3> '_Bool' lvalue Var 0x559bb1877d58 'b$r_buff1_thd0' '_Bool'
    | `-ImplicitCastExpr 0x559bb1882650 <col:20, col:102> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x559bb1882620 <col:20, col:102> 'int'
    |     |-BinaryOperator 0x559bb1882540 <col:20, col:74> 'int' '||'
    |     | |-BinaryOperator 0x559bb1882460 <col:20, col:38> 'int' '&&'
    |     | | |-ImplicitCastExpr 0x559bb1882418 <col:20> 'int' <IntegralCast>
    |     | | | `-ImplicitCastExpr 0x559bb1882400 <col:20> '_Bool' <LValueToRValue>
    |     | | |   `-DeclRefExpr 0x559bb18823c0 <col:20> '_Bool' lvalue Var 0x559bb1878128 'b$w_buff0_used' '_Bool'
    |     | | `-ImplicitCastExpr 0x559bb1882448 <col:38> 'int' <IntegralCast>
    |     | |   `-ImplicitCastExpr 0x559bb1882430 <col:38> '_Bool' <LValueToRValue>
    |     | |     `-DeclRefExpr 0x559bb18823e0 <col:38> '_Bool' lvalue Var 0x559bb1877b00 'b$r_buff0_thd0' '_Bool'
    |     | `-BinaryOperator 0x559bb1882520 <col:56, col:74> 'int' '&&'
    |     |   |-ImplicitCastExpr 0x559bb18824d8 <col:56> 'int' <IntegralCast>
    |     |   | `-ImplicitCastExpr 0x559bb18824c0 <col:56> '_Bool' <LValueToRValue>
    |     |   |   `-DeclRefExpr 0x559bb1882480 <col:56> '_Bool' lvalue Var 0x559bb1878220 'b$w_buff1_used' '_Bool'
    |     |   `-ImplicitCastExpr 0x559bb1882508 <col:74> 'int' <IntegralCast>
    |     |     `-ImplicitCastExpr 0x559bb18824f0 <col:74> '_Bool' <LValueToRValue>
    |     |       `-DeclRefExpr 0x559bb18824a0 <col:74> '_Bool' lvalue Var 0x559bb1877d58 'b$r_buff1_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x559bb18825d8 <col:91, col:98> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x559bb1882590 <col:91, col:98> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x559bb1882560 <col:98> 'int' 0
    |     `-ImplicitCastExpr 0x559bb1882608 <col:102> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x559bb18825f0 <col:102> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x559bb18825b8 <col:102> '_Bool' lvalue Var 0x559bb1877d58 'b$r_buff1_thd0' '_Bool'
    |-CallExpr 0x559bb18826c0 <line:852:3, col:25> 'void'
    | `-ImplicitCastExpr 0x559bb18826a8 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x559bb1882688 <col:3> 'void ()' Function 0x559bb181df00 '__VERIFIER_atomic_end' 'void ()'
    |-CallExpr 0x559bb1882718 <line:853:3, col:27> 'void'
    | `-ImplicitCastExpr 0x559bb1882700 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x559bb18826e0 <col:3> 'void ()' Function 0x559bb181de40 '__VERIFIER_atomic_begin' 'void ()'
    |-BinaryOperator 0x559bb1882a80 <line:854:3, col:141> '_Bool' '='
    | |-DeclRefExpr 0x559bb1882738 <col:3> '_Bool' lvalue Var 0x559bb1878310 'main$tmp_guard1' '_Bool'
    | `-ImplicitCastExpr 0x559bb1882a68 <col:21, col:141> '_Bool' <IntegralToBoolean>
    |   `-UnaryOperator 0x559bb1882a50 <col:21, col:141> 'int' prefix '!' cannot overflow
    |     `-ParenExpr 0x559bb1882a30 <col:22, col:141> 'int'
    |       `-BinaryOperator 0x559bb1882a10 <col:23, col:140> 'int' '&&'
    |         |-BinaryOperator 0x559bb1882978 <col:23, col:112> 'int' '&&'
    |         | |-BinaryOperator 0x559bb18828e0 <col:23, col:84> 'int' '&&'
    |         | | |-BinaryOperator 0x559bb1882848 <col:23, col:56> 'int' '&&'
    |         | | | |-BinaryOperator 0x559bb18827b0 <col:23, col:28> 'int' '=='
    |         | | | | |-ImplicitCastExpr 0x559bb1882798 <col:23> 'int' <LValueToRValue>
    |         | | | | | `-DeclRefExpr 0x559bb1882758 <col:23> 'int' lvalue Var 0x559bb1878530 'y' 'int'
    |         | | | | `-IntegerLiteral 0x559bb1882778 <col:28> 'int' 2
    |         | | | `-BinaryOperator 0x559bb1882828 <col:33, col:56> 'int' '=='
    |         | | |   |-ImplicitCastExpr 0x559bb1882810 <col:33> 'int' <LValueToRValue>
    |         | | |   | `-DeclRefExpr 0x559bb18827d0 <col:33> 'int' lvalue Var 0x559bb1877398 '__unbuffered_p0_EAX' 'int'
    |         | | |   `-IntegerLiteral 0x559bb18827f0 <col:56> 'int' 0
    |         | | `-BinaryOperator 0x559bb18828c0 <col:61, col:84> 'int' '=='
    |         | |   |-ImplicitCastExpr 0x559bb18828a8 <col:61> 'int' <LValueToRValue>
    |         | |   | `-DeclRefExpr 0x559bb1882868 <col:61> 'int' lvalue Var 0x559bb18774b8 '__unbuffered_p2_EAX' 'int'
    |         | |   `-IntegerLiteral 0x559bb1882888 <col:84> 'int' 0
    |         | `-BinaryOperator 0x559bb1882958 <col:89, col:112> 'int' '=='
    |         |   |-ImplicitCastExpr 0x559bb1882940 <col:89> 'int' <LValueToRValue>
    |         |   | `-DeclRefExpr 0x559bb1882900 <col:89> 'int' lvalue Var 0x559bb18775d8 '__unbuffered_p3_EAX' 'int'
    |         |   `-IntegerLiteral 0x559bb1882920 <col:112> 'int' 1
    |         `-BinaryOperator 0x559bb18829f0 <col:117, col:140> 'int' '=='
    |           |-ImplicitCastExpr 0x559bb18829d8 <col:117> 'int' <LValueToRValue>
    |           | `-DeclRefExpr 0x559bb1882998 <col:117> 'int' lvalue Var 0x559bb18776f8 '__unbuffered_p3_EBX' 'int'
    |           `-IntegerLiteral 0x559bb18829b8 <col:140> 'int' 0
    |-CallExpr 0x559bb1882ad8 <line:855:3, col:25> 'void'
    | `-ImplicitCastExpr 0x559bb1882ac0 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x559bb1882aa0 <col:3> 'void ()' Function 0x559bb181df00 '__VERIFIER_atomic_end' 'void ()'
    |-CallExpr 0x559bb1882b50 <line:856:3, col:36> 'void'
    | |-ImplicitCastExpr 0x559bb1882b38 <col:3> 'void (*)(int)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x559bb1882af8 <col:3> 'void (int)' Function 0x559bb181dbc8 '__VERIFIER_assert' 'void (int)'
    | `-ImplicitCastExpr 0x559bb1882bb0 <col:21> 'int' <IntegralCast>
    |   `-ImplicitCastExpr 0x559bb1882b78 <col:21> '_Bool' <LValueToRValue>
    |     `-DeclRefExpr 0x559bb1882b18 <col:21> '_Bool' lvalue Var 0x559bb1878310 'main$tmp_guard1' '_Bool'
    `-ReturnStmt 0x559bb1882be8 <line:857:3, col:10>
      `-IntegerLiteral 0x559bb1882bc8 <col:10> 'int' 0
