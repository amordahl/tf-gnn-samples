TranslationUnitDecl 0x557fd9f3ee18 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x557fd9f3f6d8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x557fd9f3f3b0 '__int128'
|-TypedefDecl 0x557fd9f3f748 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x557fd9f3f3d0 'unsigned __int128'
|-TypedefDecl 0x557fd9f3fa50 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x557fd9f3f820 'struct __NSConstantString_tag'
|   `-Record 0x557fd9f3f7a0 '__NSConstantString_tag'
|-TypedefDecl 0x557fd9f3faf8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x557fd9f3fab0 'char *'
|   `-BuiltinType 0x557fd9f3eeb0 'char'
|-TypedefDecl 0x557fd9f7e650 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'struct __va_list_tag [1]'
| `-ConstantArrayType 0x557fd9f3fd90 'struct __va_list_tag [1]' 1 
|   `-RecordType 0x557fd9f3fbd0 'struct __va_list_tag'
|     `-Record 0x557fd9f3fb50 '__va_list_tag'
|-FunctionDecl 0x557fd9f7e790 <./split_9/safe000_power.opt_false-unreach-call.i:1:1, col:34> col:13 used __VERIFIER_assume 'void (int)' extern
| `-ParmVarDecl 0x557fd9f7e6c0 <col:31> col:34 'int'
|-FunctionDecl 0x557fd9f7e958 <line:2:1, col:45> col:15 used __VERIFIER_nondet_pointer 'void *(void)' extern
|-FunctionDecl 0x557fd9f7ea80 <line:3:1, col:61> col:13 used __VERIFIER_error 'void () __attribute__((noreturn))' extern
|-FunctionDecl 0x557fd9f7ebc8 <line:4:1, col:99> col:6 used __VERIFIER_assert 'void (int)'
| |-ParmVarDecl 0x557fd9f7eb38 <col:24, col:28> col:28 used expression 'int'
| `-CompoundStmt 0x557fd9f7edf8 <col:40, col:99>
|   |-IfStmt 0x557fd9f7edc8 <col:42, col:88>
|   | |-UnaryOperator 0x557fd9f7eca8 <col:46, col:47> 'int' prefix '!' cannot overflow
|   | | `-ImplicitCastExpr 0x557fd9f7ec90 <col:47> 'int' <LValueToRValue>
|   | |   `-DeclRefExpr 0x557fd9f7ec70 <col:47> 'int' lvalue ParmVar 0x557fd9f7eb38 'expression' 'int'
|   | `-CompoundStmt 0x557fd9f7edb0 <col:59, col:88>
|   |   `-LabelStmt 0x557fd9f7ed98 <col:61, col:85> 'ERROR'
|   |     `-CallExpr 0x557fd9f7ed28 <col:68, col:85> 'void'
|   |       `-ImplicitCastExpr 0x557fd9f7ed10 <col:68> 'void (*)() __attribute__((noreturn))' <FunctionToPointerDecay>
|   |         `-DeclRefExpr 0x557fd9f7ecc0 <col:68> 'void () __attribute__((noreturn))' Function 0x557fd9f7ea80 '__VERIFIER_error' 'void () __attribute__((noreturn))'
|   |-NullStmt 0x557fd9f7ede0 <col:89>
|   `-ReturnStmt 0x557fd9f7ede8 <col:91>
|-FunctionDecl 0x557fd9f7ee40 <line:5:1, col:37> col:13 used __VERIFIER_atomic_begin 'void ()' extern
|-FunctionDecl 0x557fd9f7ef00 <line:6:1, col:35> col:13 used __VERIFIER_atomic_end 'void ()' extern
|-FunctionDecl 0x557fd9f7f280 <line:8:1, line:10:76> line:8:13 __assert_fail 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x557fd9f7efb8 <col:28, col:40> col:40 __assertion 'const char *'
| |-ParmVarDecl 0x557fd9f7f038 <col:53, col:65> col:65 __file 'const char *'
| |-ParmVarDecl 0x557fd9f7f0b8 <line:9:7, col:20> col:20 __line 'unsigned int'
| |-ParmVarDecl 0x557fd9f7f138 <col:28, col:40> col:40 __function 'const char *'
| `-NoThrowAttr 0x557fd9f7f340 <line:10:22>
|-FunctionDecl 0x557fd9fa5390 <line:11:1, line:13:76> line:11:13 __assert_perror_fail 'void (int, const char *, unsigned int, const char *) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x557fd9f7f3b0 <col:35, col:39> col:39 __errnum 'int'
| |-ParmVarDecl 0x557fd9f7f430 <col:49, col:61> col:61 __file 'const char *'
| |-ParmVarDecl 0x557fd9f7f4b0 <line:12:7, col:20> col:20 __line 'unsigned int'
| |-ParmVarDecl 0x557fd9f7f530 <col:28, col:40> col:40 __function 'const char *'
| `-NoThrowAttr 0x557fd9fa5450 <line:13:22>
|-FunctionDecl 0x557fd9fa5700 <line:14:1, line:15:76> line:14:13 __assert 'void (const char *, const char *, int) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x557fd9fa54c0 <col:23, col:35> col:35 __assertion 'const char *'
| |-ParmVarDecl 0x557fd9fa5540 <col:48, col:60> col:60 __file 'const char *'
| |-ParmVarDecl 0x557fd9fa55c0 <col:68, col:72> col:72 __line 'int'
| `-NoThrowAttr 0x557fd9fa57b8 <line:15:22>
|-TypedefDecl 0x557fd9fa5828 <line:17:1, col:23> col:23 __u_char 'unsigned char'
| `-BuiltinType 0x557fd9f3ef70 'unsigned char'
|-TypedefDecl 0x557fd9fa5898 <line:18:1, col:28> col:28 __u_short 'unsigned short'
| `-BuiltinType 0x557fd9f3ef90 'unsigned short'
|-TypedefDecl 0x557fd9fa5908 <line:19:1, col:22> col:22 __u_int 'unsigned int'
| `-BuiltinType 0x557fd9f3efb0 'unsigned int'
|-TypedefDecl 0x557fd9fa5978 <line:20:1, col:27> col:27 __u_long 'unsigned long'
| `-BuiltinType 0x557fd9f3efd0 'unsigned long'
|-TypedefDecl 0x557fd9fa59e8 <line:21:1, col:21> col:21 __int8_t 'signed char'
| `-BuiltinType 0x557fd9f3eed0 'signed char'
|-TypedefDecl 0x557fd9fa5a58 <line:22:1, col:23> col:23 __uint8_t 'unsigned char'
| `-BuiltinType 0x557fd9f3ef70 'unsigned char'
|-TypedefDecl 0x557fd9fa5ac8 <line:23:1, col:26> col:26 __int16_t 'short'
| `-BuiltinType 0x557fd9f3eef0 'short'
|-TypedefDecl 0x557fd9fa5b38 <line:24:1, col:28> col:28 __uint16_t 'unsigned short'
| `-BuiltinType 0x557fd9f3ef90 'unsigned short'
|-TypedefDecl 0x557fd9fa5ba8 <line:25:1, col:20> col:20 __int32_t 'int'
| `-BuiltinType 0x557fd9f3ef10 'int'
|-TypedefDecl 0x557fd9fa5c18 <line:26:1, col:22> col:22 __uint32_t 'unsigned int'
| `-BuiltinType 0x557fd9f3efb0 'unsigned int'
|-TypedefDecl 0x557fd9fa5c88 <line:27:1, col:25> col:25 __int64_t 'long'
| `-BuiltinType 0x557fd9f3ef30 'long'
|-TypedefDecl 0x557fd9fa5cf8 <line:28:1, col:27> col:27 referenced __uint64_t 'unsigned long'
| `-BuiltinType 0x557fd9f3efd0 'unsigned long'
|-TypedefDecl 0x557fd9fa5d68 <line:29:1, col:18> col:18 referenced __quad_t 'long'
| `-BuiltinType 0x557fd9f3ef30 'long'
|-TypedefDecl 0x557fd9fa5dd8 <line:30:1, col:27> col:27 __u_quad_t 'unsigned long'
| `-BuiltinType 0x557fd9f3efd0 'unsigned long'
|-TypedefDecl 0x557fd9fa5e48 <line:31:1, col:27> col:27 __dev_t 'unsigned long'
| `-BuiltinType 0x557fd9f3efd0 'unsigned long'
|-TypedefDecl 0x557fd9fa5eb8 <line:32:1, col:22> col:22 __uid_t 'unsigned int'
| `-BuiltinType 0x557fd9f3efb0 'unsigned int'
|-TypedefDecl 0x557fd9fa5f28 <line:33:1, col:22> col:22 __gid_t 'unsigned int'
| `-BuiltinType 0x557fd9f3efb0 'unsigned int'
|-TypedefDecl 0x557fd9fa5f98 <line:34:1, col:27> col:27 __ino_t 'unsigned long'
| `-BuiltinType 0x557fd9f3efd0 'unsigned long'
|-TypedefDecl 0x557fd9fa6008 <line:35:1, col:27> col:27 __ino64_t 'unsigned long'
| `-BuiltinType 0x557fd9f3efd0 'unsigned long'
|-TypedefDecl 0x557fd9fa6078 <line:36:1, col:22> col:22 __mode_t 'unsigned int'
| `-BuiltinType 0x557fd9f3efb0 'unsigned int'
|-TypedefDecl 0x557fd9fa60e8 <line:37:1, col:27> col:27 __nlink_t 'unsigned long'
| `-BuiltinType 0x557fd9f3efd0 'unsigned long'
|-TypedefDecl 0x557fd9fa6158 <line:38:1, col:18> col:18 __off_t 'long'
| `-BuiltinType 0x557fd9f3ef30 'long'
|-TypedefDecl 0x557fd9fa61c8 <line:39:1, col:18> col:18 referenced __off64_t 'long'
| `-BuiltinType 0x557fd9f3ef30 'long'
|-TypedefDecl 0x557fd9fa6238 <line:40:1, col:13> col:13 referenced __pid_t 'int'
| `-BuiltinType 0x557fd9f3ef10 'int'
|-RecordDecl 0x557fd9fa6290 <line:41:9, col:32> col:9 struct definition
| `-FieldDecl 0x557fd9fa6408 <col:18, col:29> col:22 __val 'int [2]'
|-TypedefDecl 0x557fd9fa64c0 <col:1, col:34> col:34 __fsid_t 'struct __fsid_t':'__fsid_t'
| `-ElaboratedType 0x557fd9fa6460 'struct __fsid_t' sugar
|   `-RecordType 0x557fd9fa6310 '__fsid_t'
|     `-Record 0x557fd9fa6290 ''
|-TypedefDecl 0x557fd9fa6548 <line:42:1, col:18> col:18 referenced __clock_t 'long'
| `-BuiltinType 0x557fd9f3ef30 'long'
|-TypedefDecl 0x557fd9fa65b8 <line:43:1, col:27> col:27 __rlim_t 'unsigned long'
| `-BuiltinType 0x557fd9f3efd0 'unsigned long'
|-TypedefDecl 0x557fd9fa6628 <line:44:1, col:27> col:27 __rlim64_t 'unsigned long'
| `-BuiltinType 0x557fd9f3efd0 'unsigned long'
|-TypedefDecl 0x557fd9fa6698 <line:45:1, col:22> col:22 __id_t 'unsigned int'
| `-BuiltinType 0x557fd9f3efb0 'unsigned int'
|-TypedefDecl 0x557fd9fa6708 <line:46:1, col:18> col:18 referenced __time_t 'long'
| `-BuiltinType 0x557fd9f3ef30 'long'
|-TypedefDecl 0x557fd9fa6778 <line:47:1, col:22> col:22 __useconds_t 'unsigned int'
| `-BuiltinType 0x557fd9f3efb0 'unsigned int'
|-TypedefDecl 0x557fd9fa67e8 <line:48:1, col:18> col:18 __suseconds_t 'long'
| `-BuiltinType 0x557fd9f3ef30 'long'
|-TypedefDecl 0x557fd9fa6858 <line:49:1, col:13> col:13 __daddr_t 'int'
| `-BuiltinType 0x557fd9f3ef10 'int'
|-TypedefDecl 0x557fd9fa68c8 <line:50:1, col:13> col:13 __key_t 'int'
| `-BuiltinType 0x557fd9f3ef10 'int'
|-TypedefDecl 0x557fd9fa6938 <line:51:1, col:13> col:13 referenced __clockid_t 'int'
| `-BuiltinType 0x557fd9f3ef10 'int'
|-TypedefDecl 0x557fd9fa69a8 <line:52:1, col:16> col:16 referenced __timer_t 'void *'
| `-PointerType 0x557fd9f3f630 'void *'
|   `-BuiltinType 0x557fd9f3ee70 'void'
|-TypedefDecl 0x557fd9fa6a18 <line:53:1, col:18> col:18 __blksize_t 'long'
| `-BuiltinType 0x557fd9f3ef30 'long'
|-TypedefDecl 0x557fd9fa6a88 <line:54:1, col:18> col:18 __blkcnt_t 'long'
| `-BuiltinType 0x557fd9f3ef30 'long'
|-TypedefDecl 0x557fd9fa6af8 <line:55:1, col:18> col:18 __blkcnt64_t 'long'
| `-BuiltinType 0x557fd9f3ef30 'long'
|-TypedefDecl 0x557fd9fa6b68 <line:56:1, col:27> col:27 __fsblkcnt_t 'unsigned long'
| `-BuiltinType 0x557fd9f3efd0 'unsigned long'
|-TypedefDecl 0x557fd9fa6bd8 <line:57:1, col:27> col:27 __fsblkcnt64_t 'unsigned long'
| `-BuiltinType 0x557fd9f3efd0 'unsigned long'
|-TypedefDecl 0x557fd9fa6c48 <line:58:1, col:27> col:27 __fsfilcnt_t 'unsigned long'
| `-BuiltinType 0x557fd9f3efd0 'unsigned long'
|-TypedefDecl 0x557fd9fa6cb8 <line:59:1, col:27> col:27 __fsfilcnt64_t 'unsigned long'
| `-BuiltinType 0x557fd9f3efd0 'unsigned long'
|-TypedefDecl 0x557fd9fa6d28 <line:60:1, col:18> col:18 __fsword_t 'long'
| `-BuiltinType 0x557fd9f3ef30 'long'
|-TypedefDecl 0x557fd9fa6d98 <line:61:1, col:18> col:18 __ssize_t 'long'
| `-BuiltinType 0x557fd9f3ef30 'long'
|-TypedefDecl 0x557fd9fa6e08 <line:62:1, col:18> col:18 referenced __syscall_slong_t 'long'
| `-BuiltinType 0x557fd9f3ef30 'long'
|-TypedefDecl 0x557fd9fa6e78 <line:63:1, col:27> col:27 __syscall_ulong_t 'unsigned long'
| `-BuiltinType 0x557fd9f3efd0 'unsigned long'
|-TypedefDecl 0x557fd9fa6f08 <line:64:1, col:19> col:19 __loff_t '__off64_t':'long'
| `-TypedefType 0x557fd9fa6ed0 '__off64_t' sugar
|   |-Typedef 0x557fd9fa61c8 '__off64_t'
|   `-BuiltinType 0x557fd9f3ef30 'long'
|-TypedefDecl 0x557fd9fa7000 <line:65:1, col:19> col:19 __qaddr_t '__quad_t *'
| `-PointerType 0x557fd9fa6fc0 '__quad_t *'
|   `-TypedefType 0x557fd9fa6f60 '__quad_t' sugar
|     |-Typedef 0x557fd9fa5d68 '__quad_t'
|     `-BuiltinType 0x557fd9f3ef30 'long'
|-TypedefDecl 0x557fd9fa7070 <line:66:1, col:15> col:15 __caddr_t 'char *'
| `-PointerType 0x557fd9f3fab0 'char *'
|   `-BuiltinType 0x557fd9f3eeb0 'char'
|-TypedefDecl 0x557fd9fa70e0 <line:67:1, col:18> col:18 __intptr_t 'long'
| `-BuiltinType 0x557fd9f3ef30 'long'
|-TypedefDecl 0x557fd9fa7150 <line:68:1, col:22> col:22 __socklen_t 'unsigned int'
| `-BuiltinType 0x557fd9f3efb0 'unsigned int'
|-FunctionDecl 0x557fd9fa7298 <line:69:1, line:73:1> line:70:1 __bswap_32 'unsigned int (unsigned int)' static inline
| |-ParmVarDecl 0x557fd9fa71c0 <col:13, col:26> col:26 used __bsx 'unsigned int'
| `-CompoundStmt 0x557fd9fa85e8 <line:71:1, line:73:1>
|   `-ReturnStmt 0x557fd9fa85d8 <line:72:3, col:34>
|     `-CallExpr 0x557fd9fa8598 <col:10, col:34> 'unsigned int'
|       |-ImplicitCastExpr 0x557fd9fa8580 <col:10> 'unsigned int (*)(unsigned int)' <BuiltinFnToFnPtr>
|       | `-DeclRefExpr 0x557fd9fa8510 <col:10> '<builtin fn type>' Function 0x557fd9fa8380 '__builtin_bswap32' 'unsigned int (unsigned int)'
|       `-ImplicitCastExpr 0x557fd9fa85c0 <col:29> 'unsigned int' <LValueToRValue>
|         `-DeclRefExpr 0x557fd9fa8530 <col:29> 'unsigned int' lvalue ParmVar 0x557fd9fa71c0 '__bsx' 'unsigned int'
|-FunctionDecl 0x557fd9fa8380 <col:10> col:10 implicit used __builtin_bswap32 'unsigned int (unsigned int)' extern
| |-ParmVarDecl 0x557fd9fa8420 <<invalid sloc>> <invalid sloc> 'unsigned int'
| |-NoThrowAttr 0x557fd9fa8490 <col:10> Implicit
| `-ConstAttr 0x557fd9fa84e8 <col:10> Implicit
|-FunctionDecl 0x557fd9fa8740 <line:74:1, line:78:1> line:75:1 __bswap_64 '__uint64_t (__uint64_t)' static inline
| |-ParmVarDecl 0x557fd9fa8638 <col:13, col:24> col:24 used __bsx '__uint64_t':'unsigned long'
| `-CompoundStmt 0x557fd9fa8a58 <line:76:1, line:78:1>
|   `-ReturnStmt 0x557fd9fa8a48 <line:77:3, col:34>
|     `-CallExpr 0x557fd9fa8a08 <col:10, col:34> 'unsigned long'
|       |-ImplicitCastExpr 0x557fd9fa89f0 <col:10> 'unsigned long (*)(unsigned long)' <BuiltinFnToFnPtr>
|       | `-DeclRefExpr 0x557fd9fa8978 <col:10> '<builtin fn type>' Function 0x557fd9fa87e8 '__builtin_bswap64' 'unsigned long (unsigned long)'
|       `-ImplicitCastExpr 0x557fd9fa8a30 <col:29> '__uint64_t':'unsigned long' <LValueToRValue>
|         `-DeclRefExpr 0x557fd9fa8998 <col:29> '__uint64_t':'unsigned long' lvalue ParmVar 0x557fd9fa8638 '__bsx' '__uint64_t':'unsigned long'
|-FunctionDecl 0x557fd9fa87e8 <col:10> col:10 implicit used __builtin_bswap64 'unsigned long (unsigned long)' extern
| |-ParmVarDecl 0x557fd9fa8888 <<invalid sloc>> <invalid sloc> 'unsigned long'
| |-NoThrowAttr 0x557fd9fa88f8 <col:10> Implicit
| `-ConstAttr 0x557fd9fa8950 <col:10> Implicit
|-TypedefDecl 0x557fd9fa8a88 <line:79:1, col:27> col:27 referenced size_t 'unsigned long'
| `-BuiltinType 0x557fd9f3efd0 'unsigned long'
|-TypedefDecl 0x557fd9fa8b18 <line:81:1, col:18> col:18 referenced time_t '__time_t':'long'
| `-TypedefType 0x557fd9fa8ae0 '__time_t' sugar
|   |-Typedef 0x557fd9fa6708 '__time_t'
|   `-BuiltinType 0x557fd9f3ef30 'long'
|-RecordDecl 0x557fd9fa8b70 <line:84:1, line:88:3> line:84:8 struct timespec definition
| |-FieldDecl 0x557fd9fa8c28 <line:86:5, col:14> col:14 tv_sec '__time_t':'long'
| `-FieldDecl 0x557fd9fa8cb8 <line:87:5, col:23> col:23 tv_nsec '__syscall_slong_t':'long'
|-TypedefDecl 0x557fd9fa8d48 <line:89:1, col:17> col:17 referenced pid_t '__pid_t':'int'
| `-TypedefType 0x557fd9fa8d10 '__pid_t' sugar
|   |-Typedef 0x557fd9fa6238 '__pid_t'
|   `-BuiltinType 0x557fd9f3ef10 'int'
|-RecordDecl 0x557fd9fa8da0 <line:90:1, line:93:3> line:90:8 struct sched_param definition
| `-FieldDecl 0x557fd9fa8e60 <line:92:5, col:9> col:9 __sched_priority 'int'
|-RecordDecl 0x557fd9fa8eb0 <line:96:1, line:99:3> line:96:8 struct __sched_param definition
| `-FieldDecl 0x557fd9fa8f70 <line:98:5, col:9> col:9 __sched_priority 'int'
|-TypedefDecl 0x557fd9fa8fd8 <line:100:1, col:27> col:27 referenced __cpu_mask 'unsigned long'
| `-BuiltinType 0x557fd9f3efd0 'unsigned long'
|-RecordDecl 0x557fd9fa9030 <line:101:9, line:104:1> line:101:9 struct definition
| `-FieldDecl 0x557fd9fa92c0 <line:103:3, col:53> col:14 __bits '__cpu_mask [64]'
|-TypedefDecl 0x557fd9faa3a0 <line:101:1, line:104:3> col:3 referenced cpu_set_t 'struct cpu_set_t':'cpu_set_t'
| `-ElaboratedType 0x557fd9fa9310 'struct cpu_set_t' sugar
|   `-RecordType 0x557fd9fa90b0 'cpu_set_t'
|     `-Record 0x557fd9fa9030 ''
|-FunctionDecl 0x557fd9faa678 <line:106:1, line:107:42> line:106:12 __sched_cpucount 'int (size_t, const cpu_set_t *)' extern
| |-ParmVarDecl 0x557fd9faa448 <col:30, col:37> col:37 __setsize 'size_t':'unsigned long'
| |-ParmVarDecl 0x557fd9faa550 <col:48, col:65> col:65 __setp 'const cpu_set_t *'
| `-NoThrowAttr 0x557fd9faa728 <line:107:19>
|-FunctionDecl 0x557fd9faa900 <line:108:1, col:92> col:19 __sched_cpualloc 'cpu_set_t *(size_t)' extern
| |-ParmVarDecl 0x557fd9faa790 <col:37, col:44> col:44 __count 'size_t':'unsigned long'
| `-NoThrowAttr 0x557fd9faa9a8 <col:69>
|-FunctionDecl 0x557fd9faab20 <line:109:1, col:87> col:13 __sched_cpufree 'void (cpu_set_t *)' extern
| |-ParmVarDecl 0x557fd9faaa10 <col:30, col:41> col:41 __set 'cpu_set_t *'
| `-NoThrowAttr 0x557fd9faabc8 <col:64>
|-FunctionDecl 0x557fd9faae88 <line:112:1, line:113:45> line:112:12 sched_setparam 'int (__pid_t, const struct sched_param *)' extern
| |-ParmVarDecl 0x557fd9faac30 <col:28, col:36> col:36 __pid '__pid_t':'int'
| |-ParmVarDecl 0x557fd9faad68 <col:43, col:69> col:69 __param 'const struct sched_param *'
| `-NoThrowAttr 0x557fd9faaf38 <line:113:22>
|-FunctionDecl 0x557fd9fab1b8 <line:114:1, col:111> col:12 sched_getparam 'int (__pid_t, struct sched_param *)' extern
| |-ParmVarDecl 0x557fd9faafa0 <col:28, col:36> col:36 __pid '__pid_t':'int'
| |-ParmVarDecl 0x557fd9fab098 <col:43, col:63> col:63 __param 'struct sched_param *'
| `-NoThrowAttr 0x557fd9fab268 <col:88>
|-FunctionDecl 0x557fd9fab588 <line:115:1, line:116:85> line:115:12 sched_setscheduler 'int (__pid_t, int, const struct sched_param *)' extern
| |-ParmVarDecl 0x557fd9fab2d0 <col:32, col:40> col:40 __pid '__pid_t':'int'
| |-ParmVarDecl 0x557fd9fab3b0 <col:47, col:51> col:51 __policy 'int'
| |-ParmVarDecl 0x557fd9fab440 <line:116:11, col:37> col:37 __param 'const struct sched_param *'
| `-NoThrowAttr 0x557fd9fab640 <col:62>
|-FunctionDecl 0x557fd9fab7b8 <line:117:1, col:86> col:12 sched_getscheduler 'int (__pid_t)' extern
| |-ParmVarDecl 0x557fd9fab6a8 <col:32, col:40> col:40 __pid '__pid_t':'int'
| `-NoThrowAttr 0x557fd9fab860 <col:63>
|-FunctionDecl 0x557fd9fab988 <line:118:1, col:70> col:12 sched_yield 'int (void)' extern
| `-NoThrowAttr 0x557fd9faba28 <col:47>
|-FunctionDecl 0x557fd9fabb30 <line:119:1, col:92> col:12 sched_get_priority_max 'int (int)' extern
| |-ParmVarDecl 0x557fd9faba98 <col:36, col:40> col:40 __algorithm 'int'
| `-NoThrowAttr 0x557fd9fabbd8 <col:69>
|-FunctionDecl 0x557fd9fabce0 <line:120:1, col:92> col:12 sched_get_priority_min 'int (int)' extern
| |-ParmVarDecl 0x557fd9fabc48 <col:36, col:40> col:40 __algorithm 'int'
| `-NoThrowAttr 0x557fd9fabd88 <col:69>
|-FunctionDecl 0x557fd9fac048 <line:121:1, col:111> col:12 sched_rr_get_interval 'int (__pid_t, struct timespec *)' extern
| |-ParmVarDecl 0x557fd9fabdf0 <col:35, col:43> col:43 __pid '__pid_t':'int'
| |-ParmVarDecl 0x557fd9fabf28 <col:50, col:67> col:67 __t 'struct timespec *'
| `-NoThrowAttr 0x557fd9fac0f8 <col:88>
|-TypedefDecl 0x557fd9fac188 <line:125:1, col:19> col:19 referenced clock_t '__clock_t':'long'
| `-TypedefType 0x557fd9fac150 '__clock_t' sugar
|   |-Typedef 0x557fd9fa6548 '__clock_t'
|   `-BuiltinType 0x557fd9f3ef30 'long'
|-TypedefDecl 0x557fd9fac218 <line:128:1, col:21> col:21 referenced clockid_t '__clockid_t':'int'
| `-TypedefType 0x557fd9fac1e0 '__clockid_t' sugar
|   |-Typedef 0x557fd9fa6938 '__clockid_t'
|   `-BuiltinType 0x557fd9f3ef10 'int'
|-TypedefDecl 0x557fd9fac2a8 <line:129:1, col:19> col:19 referenced timer_t '__timer_t':'void *'
| `-TypedefType 0x557fd9fac270 '__timer_t' sugar
|   |-Typedef 0x557fd9fa69a8 '__timer_t'
|   `-PointerType 0x557fd9f3f630 'void *'
|     `-BuiltinType 0x557fd9f3ee70 'void'
|-RecordDecl 0x557fd9fac300 <line:131:1, line:144:1> line:131:8 struct tm definition
| |-FieldDecl 0x557fd9fac3d8 <line:133:3, col:7> col:7 tm_sec 'int'
| |-FieldDecl 0x557fd9fac440 <line:134:3, col:7> col:7 tm_min 'int'
| |-FieldDecl 0x557fd9fac4a8 <line:135:3, col:7> col:7 tm_hour 'int'
| |-FieldDecl 0x557fd9fac510 <line:136:3, col:7> col:7 tm_mday 'int'
| |-FieldDecl 0x557fd9fac578 <line:137:3, col:7> col:7 tm_mon 'int'
| |-FieldDecl 0x557fd9fac5e0 <line:138:3, col:7> col:7 tm_year 'int'
| |-FieldDecl 0x557fd9fac648 <line:139:3, col:7> col:7 tm_wday 'int'
| |-FieldDecl 0x557fd9fac6b0 <line:140:3, col:7> col:7 tm_yday 'int'
| |-FieldDecl 0x557fd9fac718 <line:141:3, col:7> col:7 tm_isdst 'int'
| |-FieldDecl 0x557fd9fac780 <line:142:3, col:12> col:12 tm_gmtoff 'long'
| `-FieldDecl 0x557fd9fac7e8 <line:143:3, col:15> col:15 tm_zone 'const char *'
|-RecordDecl 0x557fd9fac838 <line:147:1, line:151:3> line:147:8 struct itimerspec definition
| |-FieldDecl 0x557fd9fac908 <line:149:5, col:21> col:21 it_interval 'struct timespec':'struct timespec'
| `-FieldDecl 0x557fd9fac978 <line:150:5, col:21> col:21 it_value 'struct timespec':'struct timespec'
|-RecordDecl 0x557fd9faca20 <line:152:1, col:8> col:8 struct sigevent
|-FunctionDecl 0x557fd9facbf0 <line:154:1, col:68> col:16 clock 'clock_t (void)' extern
| `-NoThrowAttr 0x557fd9facc90 <col:45>
|-FunctionDecl 0x557fd9face70 <line:155:1, col:77> col:15 time 'time_t (time_t *)' extern
| |-ParmVarDecl 0x557fd9facd60 <col:21, col:29> col:29 __timer 'time_t *'
| `-NoThrowAttr 0x557fd9facf18 <col:54>
|-FunctionDecl 0x557fd9fad118 <line:156:1, line:157:73> line:156:15 difftime 'double (time_t, time_t)' extern
| |-ParmVarDecl 0x557fd9facf80 <col:25, col:32> col:32 __time1 'time_t':'long'
| |-ParmVarDecl 0x557fd9facff8 <col:41, col:48> col:48 __time0 'time_t':'long'
| |-NoThrowAttr 0x557fd9fad1c8 <line:157:22>
| `-ConstAttr 0x557fd9fad220 <col:63>
|-FunctionDecl 0x557fd9fae050 <line:158:1, col:79> col:15 mktime 'time_t (struct tm *)' extern
| |-ParmVarDecl 0x557fd9fad318 <col:23, col:34> col:34 __tp 'struct tm *'
| `-NoThrowAttr 0x557fd9fae0f8 <col:56>
|-FunctionDecl 0x557fd9fae4a0 <line:159:1, line:161:77> line:159:15 strftime 'size_t (char *restrict, size_t, const char *restrict, const struct tm *restrict)' extern
| |-ParmVarDecl 0x557fd9fae168 <col:25, col:42> col:42 __s 'char *restrict'
| |-ParmVarDecl 0x557fd9fae1e0 <col:47, col:54> col:54 __maxsize 'size_t':'unsigned long'
| |-ParmVarDecl 0x557fd9fae260 <line:160:4, col:27> col:27 __format 'const char *restrict'
| |-ParmVarDecl 0x557fd9fae358 <line:161:4, col:32> col:32 __tp 'const struct tm *restrict'
| `-NoThrowAttr 0x557fd9fae560 <col:54>
|-RecordDecl 0x557fd9fae5b8 <line:163:9, line:170:1> line:163:16 struct __locale_struct definition
| |-RecordDecl 0x557fd9fae668 parent 0x557fd9f3ee18 <line:165:3, col:10> col:10 struct __locale_data
| |-FieldDecl 0x557fd9fae8c8 <col:3, col:37> col:25 __locales 'struct __locale_data *[13]'
| |-FieldDecl 0x557fd9fae968 <line:166:3, col:29> col:29 __ctype_b 'const unsigned short *'
| |-FieldDecl 0x557fd9fae9d0 <line:167:3, col:14> col:14 __ctype_tolower 'const int *'
| |-FieldDecl 0x557fd9faea38 <line:168:3, col:14> col:14 __ctype_toupper 'const int *'
| `-FieldDecl 0x557fd9faeb28 <line:169:3, col:25> col:15 __names 'const char *[13]'
|-TypedefDecl 0x557fd9faec48 <line:163:1, line:170:4> col:4 referenced __locale_t 'struct __locale_struct *'
| `-PointerType 0x557fd9faebf0 'struct __locale_struct *'
|   `-ElaboratedType 0x557fd9faeb80 'struct __locale_struct' sugar
|     `-RecordType 0x557fd9fae640 'struct __locale_struct'
|       `-Record 0x557fd9fae5b8 '__locale_struct'
|-TypedefDecl 0x557fd9faecf8 <line:171:1, col:20> col:20 locale_t '__locale_t':'struct __locale_struct *'
| `-TypedefType 0x557fd9faecc0 '__locale_t' sugar
|   |-Typedef 0x557fd9faec48 '__locale_t'
|   `-PointerType 0x557fd9faebf0 'struct __locale_struct *'
|     `-ElaboratedType 0x557fd9faeb80 'struct __locale_struct' sugar
|       `-RecordType 0x557fd9fae640 'struct __locale_struct'
|         `-Record 0x557fd9fae5b8 '__locale_struct'
|-FunctionDecl 0x557fd9fb0110 <line:172:1, line:175:63> line:172:15 strftime_l 'size_t (char *restrict, size_t, const char *restrict, const struct tm *restrict, __locale_t)' extern
| |-ParmVarDecl 0x557fd9faed68 <col:27, col:44> col:44 __s 'char *restrict'
| |-ParmVarDecl 0x557fd9faede0 <col:49, col:56> col:56 __maxsize 'size_t':'unsigned long'
| |-ParmVarDecl 0x557fd9faee60 <line:173:6, col:29> col:29 __format 'const char *restrict'
| |-ParmVarDecl 0x557fd9faeef0 <line:174:6, col:34> col:34 __tp 'const struct tm *restrict'
| |-ParmVarDecl 0x557fd9faef68 <line:175:6, col:17> col:17 __loc '__locale_t':'struct __locale_struct *'
| `-NoThrowAttr 0x557fd9fb01d8 <col:40>
|-FunctionDecl 0x557fd9fb03c8 <line:177:1, col:89> col:19 gmtime 'struct tm *(const time_t *)' extern
| |-ParmVarDecl 0x557fd9fb02a0 <col:27, col:41> col:41 __timer 'const time_t *'
| `-NoThrowAttr 0x557fd9fb0470 <col:66>
|-FunctionDecl 0x557fd9fb0580 <line:178:1, col:92> col:19 localtime 'struct tm *(const time_t *)' extern
| |-ParmVarDecl 0x557fd9fb04d8 <col:30, col:44> col:44 __timer 'const time_t *'
| `-NoThrowAttr 0x557fd9fb0628 <col:69>
|-FunctionDecl 0x557fd9fb0858 <line:180:1, line:181:75> line:180:19 gmtime_r 'struct tm *(const time_t *restrict, struct tm *restrict)' extern
| |-ParmVarDecl 0x557fd9fb0690 <col:29, col:54> col:54 __timer 'const time_t *restrict'
| |-ParmVarDecl 0x557fd9fb0720 <line:181:8, col:30> col:30 __tp 'struct tm *restrict'
| `-NoThrowAttr 0x557fd9fb0908 <col:52>
|-FunctionDecl 0x557fd9fb0ab0 <line:182:1, line:183:78> line:182:19 localtime_r 'struct tm *(const time_t *restrict, struct tm *restrict)' extern
| |-ParmVarDecl 0x557fd9fb0970 <col:32, col:57> col:57 __timer 'const time_t *restrict'
| |-ParmVarDecl 0x557fd9fb0a00 <line:183:11, col:33> col:33 __tp 'struct tm *restrict'
| `-NoThrowAttr 0x557fd9fb0b60 <col:55>
|-FunctionDecl 0x557fd9fb0cf8 <line:185:1, col:85> col:14 asctime 'char *(const struct tm *)' extern
| |-ParmVarDecl 0x557fd9fb0be0 <col:23, col:40> col:40 __tp 'const struct tm *'
| `-NoThrowAttr 0x557fd9fb0da0 <col:62>
|-FunctionDecl 0x557fd9fb0f18 <line:186:1, col:83> col:14 ctime 'char *(const time_t *)' extern
| |-ParmVarDecl 0x557fd9fb0e08 <col:21, col:35> col:35 __timer 'const time_t *'
| `-NoThrowAttr 0x557fd9fb0fc0 <col:60>
|-FunctionDecl 0x557fd9fb12b8 <line:188:1, line:189:67> line:188:14 asctime_r 'char *(const struct tm *restrict, char *restrict)' extern
| |-ParmVarDecl 0x557fd9fb1118 <col:25, col:53> col:53 __tp 'const struct tm *restrict'
| |-ParmVarDecl 0x557fd9fb1198 <line:189:4, col:21> col:21 __buf 'char *restrict'
| `-NoThrowAttr 0x557fd9fb1368 <col:44>
|-FunctionDecl 0x557fd9fb1578 <line:190:1, line:191:72> line:190:14 ctime_r 'char *(const time_t *restrict, char *restrict)' extern
| |-ParmVarDecl 0x557fd9fb13d0 <col:23, col:48> col:48 __timer 'const time_t *restrict'
| |-ParmVarDecl 0x557fd9fb1450 <line:191:9, col:26> col:26 __buf 'char *restrict'
| `-NoThrowAttr 0x557fd9fb1628 <col:49>
|-VarDecl 0x557fd9fb1728 <line:192:1, col:24> col:14 __tzname 'char *[2]' extern
|-VarDecl 0x557fd9fb17a8 <line:193:1, col:12> col:12 __daylight 'int' extern
|-VarDecl 0x557fd9fb1828 <line:194:1, col:17> col:17 __timezone 'long' extern
|-VarDecl 0x557fd9fb18f0 <line:195:1, col:22> col:14 tzname 'char *[2]' extern
|-FunctionDecl 0x557fd9fb1a20 <line:196:1, col:65> col:13 tzset 'void (void)' extern
| `-NoThrowAttr 0x557fd9fb1ac0 <col:42>
|-VarDecl 0x557fd9fb1b30 <line:197:1, col:12> col:12 daylight 'int' extern
|-VarDecl 0x557fd9fb1bb0 <line:198:1, col:17> col:17 timezone 'long' extern
|-FunctionDecl 0x557fd9fb1d38 <line:199:1, col:80> col:12 stime 'int (const time_t *)' extern
| |-ParmVarDecl 0x557fd9fb1c28 <col:19, col:33> col:33 __when 'const time_t *'
| `-NoThrowAttr 0x557fd9fb1de0 <col:57>
|-FunctionDecl 0x557fd9fb1ef0 <line:200:1, col:79> col:15 timegm 'time_t (struct tm *)' extern
| |-ParmVarDecl 0x557fd9fb1e60 <col:23, col:34> col:34 __tp 'struct tm *'
| `-NoThrowAttr 0x557fd9fb1f98 <col:56>
|-FunctionDecl 0x557fd9fb20d0 <line:201:1, col:82> col:15 timelocal 'time_t (struct tm *)' extern
| |-ParmVarDecl 0x557fd9fb2018 <col:26, col:37> col:37 __tp 'struct tm *'
| `-NoThrowAttr 0x557fd9fb2178 <col:59>
|-FunctionDecl 0x557fd9fb2280 <line:202:1, col:99> col:12 dysize 'int (int)' extern
| |-ParmVarDecl 0x557fd9fb21e8 <col:20, col:24> col:24 __year 'int'
| |-NoThrowAttr 0x557fd9fb2328 <col:48>
| `-ConstAttr 0x557fd9fb2380 <col:89>
|-FunctionDecl 0x557fd9fb25e8 <line:203:1, line:204:37> line:203:12 nanosleep 'int (const struct timespec *, struct timespec *)' extern
| |-ParmVarDecl 0x557fd9fb2438 <col:23, col:46> col:46 __requested_time 'const struct timespec *'
| `-ParmVarDecl 0x557fd9fb24c8 <line:204:9, col:26> col:26 __remaining 'struct timespec *'
|-FunctionDecl 0x557fd9fb2848 <line:205:1, col:111> col:12 clock_getres 'int (clockid_t, struct timespec *)' extern
| |-ParmVarDecl 0x557fd9fb26d8 <col:26, col:36> col:36 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x557fd9fb2768 <col:48, col:65> col:65 __res 'struct timespec *'
| `-NoThrowAttr 0x557fd9fb28f8 <col:88>
|-FunctionDecl 0x557fd9fb2a90 <line:206:1, col:111> col:12 clock_gettime 'int (clockid_t, struct timespec *)' extern
| |-ParmVarDecl 0x557fd9fb2960 <col:27, col:37> col:37 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x557fd9fb29f0 <col:49, col:66> col:66 __tp 'struct timespec *'
| `-NoThrowAttr 0x557fd9fb2b40 <col:88>
|-FunctionDecl 0x557fd9fb2d58 <line:207:1, line:208:45> line:207:12 clock_settime 'int (clockid_t, const struct timespec *)' extern
| |-ParmVarDecl 0x557fd9fb2ba8 <col:27, col:37> col:37 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x557fd9fb2c38 <col:49, col:72> col:72 __tp 'const struct timespec *'
| `-NoThrowAttr 0x557fd9fb2e08 <line:208:22>
|-FunctionDecl 0x557fd9fb3178 <line:209:1, line:211:30> line:209:12 clock_nanosleep 'int (clockid_t, int, const struct timespec *, struct timespec *)' extern
| |-ParmVarDecl 0x557fd9fb2e70 <col:29, col:39> col:39 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x557fd9fb2ef0 <col:51, col:55> col:55 __flags 'int'
| |-ParmVarDecl 0x557fd9fb2f80 <line:210:8, col:31> col:31 __req 'const struct timespec *'
| `-ParmVarDecl 0x557fd9fb3010 <line:211:8, col:25> col:25 __rem 'struct timespec *'
|-FunctionDecl 0x557fd9fb3478 <line:212:1, col:108> col:12 clock_getcpuclockid 'int (pid_t, clockid_t *)' extern
| |-ParmVarDecl 0x557fd9fb3278 <col:33, col:39> col:39 __pid 'pid_t':'int'
| |-ParmVarDecl 0x557fd9fb3350 <col:46, col:57> col:57 __clock_id 'clockid_t *'
| `-NoThrowAttr 0x557fd9fb3528 <col:85>
|-FunctionDecl 0x557fd9fb3918 <line:213:1, line:215:75> line:213:12 timer_create 'int (clockid_t, struct sigevent *restrict, timer_t *restrict)' extern
| |-ParmVarDecl 0x557fd9fb3590 <col:26, col:36> col:36 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x557fd9fb36c8 <line:214:5, col:33> col:33 __evp 'struct sigevent *restrict'
| |-ParmVarDecl 0x557fd9fb37d0 <line:215:5, col:25> col:25 __timerid 'timer_t *restrict'
| `-NoThrowAttr 0x557fd9fb39d0 <col:52>
|-FunctionDecl 0x557fd9fb3b48 <line:216:1, col:84> col:12 timer_delete 'int (timer_t)' extern
| |-ParmVarDecl 0x557fd9fb3a38 <col:26, col:34> col:34 __timerid 'timer_t':'void *'
| `-NoThrowAttr 0x557fd9fb3bf0 <col:61>
|-FunctionDecl 0x557fd9fb40f0 <line:217:1, line:219:85> line:217:12 timer_settime 'int (timer_t, int, const struct itimerspec *restrict, struct itimerspec *restrict)' extern
| |-ParmVarDecl 0x557fd9fb3c58 <col:27, col:35> col:35 __timerid 'timer_t':'void *'
| |-ParmVarDecl 0x557fd9fb3cd8 <col:46, col:50> col:50 __flags 'int'
| |-ParmVarDecl 0x557fd9fb3e08 <line:218:6, col:42> col:42 __value 'const struct itimerspec *restrict'
| |-ParmVarDecl 0x557fd9fb3ef8 <line:219:6, col:36> col:36 __ovalue 'struct itimerspec *restrict'
| `-NoThrowAttr 0x557fd9fb41b0 <col:62>
|-FunctionDecl 0x557fd9fb43c8 <line:220:1, line:221:45> line:220:12 timer_gettime 'int (timer_t, struct itimerspec *)' extern
| |-ParmVarDecl 0x557fd9fb4218 <col:27, col:35> col:35 __timerid 'timer_t':'void *'
| |-ParmVarDecl 0x557fd9fb42a8 <col:46, col:65> col:65 __value 'struct itimerspec *'
| `-NoThrowAttr 0x557fd9fb4478 <line:221:22>
|-FunctionDecl 0x557fd9fb4578 <line:222:1, col:88> col:12 timer_getoverrun 'int (timer_t)' extern
| |-ParmVarDecl 0x557fd9fb44e0 <col:30, col:38> col:38 __timerid 'timer_t':'void *'
| `-NoThrowAttr 0x557fd9fb4620 <col:65>
|-TypedefDecl 0x557fd9fb4690 <line:224:1, col:27> col:27 referenced pthread_t 'unsigned long'
| `-BuiltinType 0x557fd9f3efd0 'unsigned long'
|-RecordDecl 0x557fd9fb46e8 <line:225:1, line:229:1> line:225:7 union pthread_attr_t definition
| |-FieldDecl 0x557fd9fb4830 <line:227:3, col:17> col:8 __size 'char [56]'
| `-FieldDecl 0x557fd9fb4898 <line:228:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x557fd9fb4948 <line:230:1, col:30> col:30 referenced pthread_attr_t 'union pthread_attr_t':'union pthread_attr_t'
| `-ElaboratedType 0x557fd9fb48f0 'union pthread_attr_t' sugar
|   `-RecordType 0x557fd9fb4770 'union pthread_attr_t'
|     `-Record 0x557fd9fb46e8 'pthread_attr_t'
|-RecordDecl 0x557fd9fb49a0 <line:231:9, line:235:1> line:231:16 struct __pthread_internal_list definition
| |-FieldDecl 0x557fd9fb4b18 <line:233:3, col:35> col:35 __prev 'struct __pthread_internal_list *'
| `-FieldDecl 0x557fd9fb4b90 <line:234:3, col:35> col:35 __next 'struct __pthread_internal_list *'
|-TypedefDecl 0x557fd9fb4c40 <line:231:1, line:235:3> col:3 referenced __pthread_list_t 'struct __pthread_internal_list':'struct __pthread_internal_list'
| `-ElaboratedType 0x557fd9fb4be0 'struct __pthread_internal_list' sugar
|   `-RecordType 0x557fd9fb4a20 'struct __pthread_internal_list'
|     `-Record 0x557fd9fb49a0 '__pthread_internal_list'
|-RecordDecl 0x557fd9fb4cb0 <line:236:9, line:250:1> line:236:9 union definition
| |-RecordDecl 0x557fd9fb4d58 parent 0x557fd9f3ee18 <line:238:3, line:247:3> line:238:10 struct __pthread_mutex_s definition
| | |-FieldDecl 0x557fd9fb4e30 <line:240:5, col:9> col:9 __lock 'int'
| | |-FieldDecl 0x557fd9fb4e98 <line:241:5, col:18> col:18 __count 'unsigned int'
| | |-FieldDecl 0x557fd9fb4f00 <line:242:5, col:9> col:9 __owner 'int'
| | |-FieldDecl 0x557fd9fb4f68 <line:243:5, col:18> col:18 __nusers 'unsigned int'
| | |-FieldDecl 0x557fd9fb4fd0 <line:244:5, col:9> col:9 __kind 'int'
| | |-FieldDecl 0x557fd9fb5038 <line:245:5, col:9> col:9 __spins 'int'
| | `-FieldDecl 0x557fd9fb9110 <line:246:5, col:22> col:22 __list '__pthread_list_t':'struct __pthread_internal_list'
| |-FieldDecl 0x557fd9fb91c0 <line:238:3, line:247:5> col:5 __data 'struct __pthread_mutex_s':'struct __pthread_mutex_s'
| |-FieldDecl 0x557fd9fb92b0 <line:248:3, col:17> col:8 __size 'char [40]'
| `-FieldDecl 0x557fd9fb9318 <line:249:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x557fd9fb94a0 <line:236:1, line:250:3> col:3 referenced pthread_mutex_t 'union pthread_mutex_t':'pthread_mutex_t'
| `-ElaboratedType 0x557fd9fb9440 'union pthread_mutex_t' sugar
|   `-RecordType 0x557fd9fb4d30 'pthread_mutex_t'
|     `-Record 0x557fd9fb4cb0 ''
|-RecordDecl 0x557fd9fb9510 <line:251:9, line:255:1> line:251:9 union definition
| |-FieldDecl 0x557fd9fb9650 <line:253:3, col:16> col:8 __size 'char [4]'
| `-FieldDecl 0x557fd9fb96b8 <line:254:3, col:7> col:7 __align 'int'
|-TypedefDecl 0x557fd9fb9770 <line:251:1, line:255:3> col:3 referenced pthread_mutexattr_t 'union pthread_mutexattr_t':'pthread_mutexattr_t'
| `-ElaboratedType 0x557fd9fb9710 'union pthread_mutexattr_t' sugar
|   `-RecordType 0x557fd9fb9590 'pthread_mutexattr_t'
|     `-Record 0x557fd9fb9510 ''
|-RecordDecl 0x557fd9fb97e0 <line:256:9, line:271:1> line:256:9 union definition
| |-RecordDecl 0x557fd9fb9888 <line:258:3, line:268:3> line:258:3 struct definition
| | |-FieldDecl 0x557fd9fb9950 <line:260:5, col:9> col:9 __lock 'int'
| | |-FieldDecl 0x557fd9fb99b8 <line:261:5, col:18> col:18 __futex 'unsigned int'
| | |-FieldDecl 0x557fd9fb9a20 <line:262:19, col:42> col:42 __total_seq 'unsigned long long'
| | |-FieldDecl 0x557fd9fb9a88 <line:263:19, col:42> col:42 __wakeup_seq 'unsigned long long'
| | |-FieldDecl 0x557fd9fb9af0 <line:264:19, col:42> col:42 __woken_seq 'unsigned long long'
| | |-FieldDecl 0x557fd9fb9b58 <line:265:5, col:11> col:11 __mutex 'void *'
| | |-FieldDecl 0x557fd9fb9bc0 <line:266:5, col:18> col:18 __nwaiters 'unsigned int'
| | `-FieldDecl 0x557fd9fb9c28 <line:267:5, col:18> col:18 __broadcast_seq 'unsigned int'
| |-FieldDecl 0x557fd9fb9ce0 <line:258:3, line:268:5> col:5 __data 'struct (anonymous struct at ./split_9/safe000_power.opt_false-unreach-call.i:258:3)':'struct pthread_cond_t::(anonymous at ./split_9/safe000_power.opt_false-unreach-call.i:258:3)'
| |-FieldDecl 0x557fd9fb9dd0 <line:269:3, col:17> col:8 __size 'char [48]'
| `-FieldDecl 0x557fd9fb9e38 <line:270:17, col:31> col:31 __align 'long long'
|-TypedefDecl 0x557fd9fb9f70 <line:256:1, line:271:3> col:3 referenced pthread_cond_t 'union pthread_cond_t':'pthread_cond_t'
| `-ElaboratedType 0x557fd9fb9f10 'union pthread_cond_t' sugar
|   `-RecordType 0x557fd9fb9860 'pthread_cond_t'
|     `-Record 0x557fd9fb97e0 ''
|-RecordDecl 0x557fd9fb9fe0 <line:272:9, line:276:1> line:272:9 union definition
| |-FieldDecl 0x557fd9fbb130 <line:274:3, col:16> col:8 __size 'char [4]'
| `-FieldDecl 0x557fd9fbb198 <line:275:3, col:7> col:7 __align 'int'
|-TypedefDecl 0x557fd9fbb250 <line:272:1, line:276:3> col:3 referenced pthread_condattr_t 'union pthread_condattr_t':'pthread_condattr_t'
| `-ElaboratedType 0x557fd9fbb1f0 'union pthread_condattr_t' sugar
|   `-RecordType 0x557fd9fba060 'pthread_condattr_t'
|     `-Record 0x557fd9fb9fe0 ''
|-TypedefDecl 0x557fd9fbb2d8 <line:277:1, col:22> col:22 referenced pthread_key_t 'unsigned int'
| `-BuiltinType 0x557fd9f3efb0 'unsigned int'
|-TypedefDecl 0x557fd9fbb348 <line:278:1, col:13> col:13 referenced pthread_once_t 'int'
| `-BuiltinType 0x557fd9f3ef10 'int'
|-RecordDecl 0x557fd9fbb3a0 <line:279:9, line:297:1> line:279:9 union definition
| |-RecordDecl 0x557fd9fbb448 <line:281:3, line:294:3> line:281:3 struct definition
| | |-FieldDecl 0x557fd9fbb510 <line:283:5, col:9> col:9 __lock 'int'
| | |-FieldDecl 0x557fd9fbb578 <line:284:5, col:18> col:18 __nr_readers 'unsigned int'
| | |-FieldDecl 0x557fd9fbb5e0 <line:285:5, col:18> col:18 __readers_wakeup 'unsigned int'
| | |-FieldDecl 0x557fd9fbb648 <line:286:5, col:18> col:18 __writer_wakeup 'unsigned int'
| | |-FieldDecl 0x557fd9fbb6b0 <line:287:5, col:18> col:18 __nr_readers_queued 'unsigned int'
| | |-FieldDecl 0x557fd9fbb718 <line:288:5, col:18> col:18 __nr_writers_queued 'unsigned int'
| | |-FieldDecl 0x557fd9fbb780 <line:289:5, col:9> col:9 __writer 'int'
| | |-FieldDecl 0x557fd9fbb7e8 <line:290:5, col:9> col:9 __shared 'int'
| | |-FieldDecl 0x557fd9fbb850 <line:291:5, col:23> col:23 __pad1 'unsigned long'
| | |-FieldDecl 0x557fd9fbb8b8 <line:292:5, col:23> col:23 __pad2 'unsigned long'
| | `-FieldDecl 0x557fd9fbb920 <line:293:5, col:18> col:18 __flags 'unsigned int'
| |-FieldDecl 0x557fd9fbb9d0 <line:281:3, line:294:5> col:5 __data 'struct (anonymous struct at ./split_9/safe000_power.opt_false-unreach-call.i:281:3)':'struct pthread_rwlock_t::(anonymous at ./split_9/safe000_power.opt_false-unreach-call.i:281:3)'
| |-FieldDecl 0x557fd9fbba78 <line:295:3, col:17> col:8 __size 'char [56]'
| `-FieldDecl 0x557fd9fbbae0 <line:296:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x557fd9fbbc30 <line:279:1, line:297:3> col:3 referenced pthread_rwlock_t 'union pthread_rwlock_t':'pthread_rwlock_t'
| `-ElaboratedType 0x557fd9fbbbd0 'union pthread_rwlock_t' sugar
|   `-RecordType 0x557fd9fbb420 'pthread_rwlock_t'
|     `-Record 0x557fd9fbb3a0 ''
|-RecordDecl 0x557fd9fbbca0 <line:298:9, line:302:1> line:298:9 union definition
| |-FieldDecl 0x557fd9fbbde0 <line:300:3, col:16> col:8 __size 'char [8]'
| `-FieldDecl 0x557fd9fbbe48 <line:301:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x557fd9fbbf00 <line:298:1, line:302:3> col:3 referenced pthread_rwlockattr_t 'union pthread_rwlockattr_t':'pthread_rwlockattr_t'
| `-ElaboratedType 0x557fd9fbbea0 'union pthread_rwlockattr_t' sugar
|   `-RecordType 0x557fd9fbbd20 'pthread_rwlockattr_t'
|     `-Record 0x557fd9fbbca0 ''
|-TypedefDecl 0x557fd9fbbf88 <line:303:1, col:22> col:22 referenced pthread_spinlock_t 'volatile int'
| `-QualType 0x557fd9f3ef14 'volatile int' volatile
|   `-BuiltinType 0x557fd9f3ef10 'int'
|-RecordDecl 0x557fd9fbbfe0 <line:304:9, line:308:1> line:304:9 union definition
| |-FieldDecl 0x557fd9fbd140 <line:306:3, col:17> col:8 __size 'char [32]'
| `-FieldDecl 0x557fd9fbd1a8 <line:307:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x557fd9fbd260 <line:304:1, line:308:3> col:3 referenced pthread_barrier_t 'union pthread_barrier_t':'pthread_barrier_t'
| `-ElaboratedType 0x557fd9fbd200 'union pthread_barrier_t' sugar
|   `-RecordType 0x557fd9fbc060 'pthread_barrier_t'
|     `-Record 0x557fd9fbbfe0 ''
|-RecordDecl 0x557fd9fbd2d0 <line:309:9, line:313:1> line:309:9 union definition
| |-FieldDecl 0x557fd9fbd3d0 <line:311:3, col:16> col:8 __size 'char [4]'
| `-FieldDecl 0x557fd9fbd438 <line:312:3, col:7> col:7 __align 'int'
|-TypedefDecl 0x557fd9fbd4f0 <line:309:1, line:313:3> col:3 referenced pthread_barrierattr_t 'union pthread_barrierattr_t':'pthread_barrierattr_t'
| `-ElaboratedType 0x557fd9fbd490 'union pthread_barrierattr_t' sugar
|   `-RecordType 0x557fd9fbd350 'pthread_barrierattr_t'
|     `-Record 0x557fd9fbd2d0 ''
|-TypedefDecl 0x557fd9fbd608 <line:314:1, col:29> col:18 referenced __jmp_buf 'long [8]'
| `-ConstantArrayType 0x557fd9fbd5a0 'long [8]' 8 
|   `-BuiltinType 0x557fd9f3ef30 'long'
|-EnumDecl 0x557fd9fbd660 <line:315:1, line:319:1> line:315:1
| |-EnumConstantDecl 0x557fd9fbd728 <line:317:3> col:3 PTHREAD_CREATE_JOINABLE 'int'
| `-EnumConstantDecl 0x557fd9fbd778 <line:318:3> col:3 PTHREAD_CREATE_DETACHED 'int'
|-EnumDecl 0x557fd9fbd7c8 <line:320:1, line:331:1> line:320:1
| |-EnumConstantDecl 0x557fd9fbd898 <line:322:3> col:3 referenced PTHREAD_MUTEX_TIMED_NP 'int'
| |-EnumConstantDecl 0x557fd9fbd8e8 <line:323:3> col:3 referenced PTHREAD_MUTEX_RECURSIVE_NP 'int'
| |-EnumConstantDecl 0x557fd9fbd938 <line:324:3> col:3 referenced PTHREAD_MUTEX_ERRORCHECK_NP 'int'
| |-EnumConstantDecl 0x557fd9fbd988 <line:325:3> col:3 PTHREAD_MUTEX_ADAPTIVE_NP 'int'
| |-EnumConstantDecl 0x557fd9fbda10 <line:327:3, col:26> col:3 referenced PTHREAD_MUTEX_NORMAL 'int'
| | `-ConstantExpr 0x557fd9fbd9f8 <col:26> 'int'
| |   `-DeclRefExpr 0x557fd9fbd9d8 <col:26> 'int' EnumConstant 0x557fd9fbd898 'PTHREAD_MUTEX_TIMED_NP' 'int'
| |-EnumConstantDecl 0x557fd9fbda98 <line:328:3, col:29> col:3 PTHREAD_MUTEX_RECURSIVE 'int'
| | `-ConstantExpr 0x557fd9fbda80 <col:29> 'int'
| |   `-DeclRefExpr 0x557fd9fbda60 <col:29> 'int' EnumConstant 0x557fd9fbd8e8 'PTHREAD_MUTEX_RECURSIVE_NP' 'int'
| |-EnumConstantDecl 0x557fd9fbdb20 <line:329:3, col:30> col:3 PTHREAD_MUTEX_ERRORCHECK 'int'
| | `-ConstantExpr 0x557fd9fbdb08 <col:30> 'int'
| |   `-DeclRefExpr 0x557fd9fbdae8 <col:30> 'int' EnumConstant 0x557fd9fbd938 'PTHREAD_MUTEX_ERRORCHECK_NP' 'int'
| `-EnumConstantDecl 0x557fd9fbdba8 <line:330:3, col:27> col:3 PTHREAD_MUTEX_DEFAULT 'int'
|   `-ConstantExpr 0x557fd9fbdb90 <col:27> 'int'
|     `-DeclRefExpr 0x557fd9fbdb70 <col:27> 'int' EnumConstant 0x557fd9fbda10 'PTHREAD_MUTEX_NORMAL' 'int'
|-EnumDecl 0x557fd9fbdbf8 <line:332:1, line:338:1> line:332:1
| |-EnumConstantDecl 0x557fd9fbdcc8 <line:334:3> col:3 referenced PTHREAD_MUTEX_STALLED 'int'
| |-EnumConstantDecl 0x557fd9fbdd50 <line:335:3, col:30> col:3 PTHREAD_MUTEX_STALLED_NP 'int'
| | `-ConstantExpr 0x557fd9fbdd38 <col:30> 'int'
| |   `-DeclRefExpr 0x557fd9fbdd18 <col:30> 'int' EnumConstant 0x557fd9fbdcc8 'PTHREAD_MUTEX_STALLED' 'int'
| |-EnumConstantDecl 0x557fd9fbdda0 <line:336:3> col:3 referenced PTHREAD_MUTEX_ROBUST 'int'
| `-EnumConstantDecl 0x557fd9fbde28 <line:337:3, col:29> col:3 PTHREAD_MUTEX_ROBUST_NP 'int'
|   `-ConstantExpr 0x557fd9fbde10 <col:29> 'int'
|     `-DeclRefExpr 0x557fd9fbddf0 <col:29> 'int' EnumConstant 0x557fd9fbdda0 'PTHREAD_MUTEX_ROBUST' 'int'
|-EnumDecl 0x557fd9fbde78 <line:339:1, line:344:1> line:339:1
| |-EnumConstantDecl 0x557fd9fbdf48 <line:341:3> col:3 PTHREAD_PRIO_NONE 'int'
| |-EnumConstantDecl 0x557fd9fbdf98 <line:342:3> col:3 PTHREAD_PRIO_INHERIT 'int'
| `-EnumConstantDecl 0x557fd9fbdfe8 <line:343:3> col:3 PTHREAD_PRIO_PROTECT 'int'
|-EnumDecl 0x557fd9fbe038 <line:345:1, line:351:1> line:345:1
| |-EnumConstantDecl 0x557fd9fbe150 <line:347:3> col:3 referenced PTHREAD_RWLOCK_PREFER_READER_NP 'int'
| |-EnumConstantDecl 0x557fd9fbe1a0 <line:348:3> col:3 PTHREAD_RWLOCK_PREFER_WRITER_NP 'int'
| |-EnumConstantDecl 0x557fd9fbe1f0 <line:349:3> col:3 PTHREAD_RWLOCK_PREFER_WRITER_NONRECURSIVE_NP 'int'
| `-EnumConstantDecl 0x557fd9fbe278 <line:350:3, col:31> col:3 PTHREAD_RWLOCK_DEFAULT_NP 'int'
|   `-ConstantExpr 0x557fd9fbe260 <col:31> 'int'
|     `-DeclRefExpr 0x557fd9fbe240 <col:31> 'int' EnumConstant 0x557fd9fbe150 'PTHREAD_RWLOCK_PREFER_READER_NP' 'int'
|-EnumDecl 0x557fd9fbe2c8 <line:352:1, line:356:1> line:352:1
| |-EnumConstantDecl 0x557fd9fbe398 <line:354:3> col:3 PTHREAD_INHERIT_SCHED 'int'
| `-EnumConstantDecl 0x557fd9fbe3e8 <line:355:3> col:3 PTHREAD_EXPLICIT_SCHED 'int'
|-EnumDecl 0x557fd9fbe438 <line:357:1, line:361:1> line:357:1
| |-EnumConstantDecl 0x557fd9fbe508 <line:359:3> col:3 PTHREAD_SCOPE_SYSTEM 'int'
| `-EnumConstantDecl 0x557fd9fbe558 <line:360:3> col:3 PTHREAD_SCOPE_PROCESS 'int'
|-EnumDecl 0x557fd9fbe5a8 <line:362:1, line:366:1> line:362:1
| |-EnumConstantDecl 0x557fd9fbe678 <line:364:3> col:3 PTHREAD_PROCESS_PRIVATE 'int'
| `-EnumConstantDecl 0x557fd9fbe6c8 <line:365:3> col:3 PTHREAD_PROCESS_SHARED 'int'
|-RecordDecl 0x557fd9fbe718 <line:367:1, line:373:1> line:367:8 struct _pthread_cleanup_buffer definition
| |-FieldDecl 0x557fd9fbe958 <line:369:3, col:28> col:10 __routine 'void (*)(void *)'
| |-FieldDecl 0x557fd9fbe9c0 <line:370:3, col:9> col:9 __arg 'void *'
| |-FieldDecl 0x557fd9fbea28 <line:371:3, col:7> col:7 __canceltype 'int'
| `-FieldDecl 0x557fd9fbeb48 <line:372:3, col:35> col:35 __prev 'struct _pthread_cleanup_buffer *'
|-EnumDecl 0x557fd9fbeb98 <line:374:1, line:378:1> line:374:1
| |-EnumConstantDecl 0x557fd9fbec68 <line:376:3> col:3 PTHREAD_CANCEL_ENABLE 'int'
| `-EnumConstantDecl 0x557fd9fbecb8 <line:377:3> col:3 PTHREAD_CANCEL_DISABLE 'int'
|-EnumDecl 0x557fd9fbed08 <line:379:1, line:383:1> line:379:1
| |-EnumConstantDecl 0x557fd9fbedd8 <line:381:3> col:3 PTHREAD_CANCEL_DEFERRED 'int'
| `-EnumConstantDecl 0x557fd9fbee28 <line:382:3> col:3 PTHREAD_CANCEL_ASYNCHRONOUS 'int'
|-FunctionDecl 0x557fd9fbf488 <line:385:1, line:388:96> line:385:12 used pthread_create 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' extern
| |-ParmVarDecl 0x557fd9fbef20 <col:28, col:50> col:50 __newthread 'pthread_t *restrict'
| |-ParmVarDecl 0x557fd9fbf030 <line:386:7, col:40> col:40 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x557fd9fbf270 <line:387:7, col:39> col:15 __start_routine 'void *(*)(void *)'
| |-ParmVarDecl 0x557fd9fbf2f0 <line:388:7, col:24> col:24 __arg 'void *restrict'
| |-NoThrowAttr 0x557fd9fbf548 <col:47>
| |-NonNullAttr 0x557fd9fbf5a0 <col:77, col:94> 1 3
| `-CallbackAttr 0x557fd9fbf5d8 <line:385:12> Implicit 2 3
|-FunctionDecl 0x557fd9fbf700 <line:389:1, col:72> col:13 pthread_exit 'void (void *) __attribute__((noreturn))' extern
| `-ParmVarDecl 0x557fd9fbf630 <col:27, col:33> col:33 __retval 'void *'
|-FunctionDecl 0x557fd9fbf958 <line:390:1, col:64> col:12 pthread_join 'int (pthread_t, void **)' extern
| |-ParmVarDecl 0x557fd9fbf7b8 <col:26, col:36> col:36 __th 'pthread_t':'unsigned long'
| `-ParmVarDecl 0x557fd9fbf838 <col:42, col:49> col:49 __thread_return 'void **'
|-FunctionDecl 0x557fd9fbfb28 <line:391:1, col:83> col:12 pthread_detach 'int (pthread_t)' extern
| |-ParmVarDecl 0x557fd9fbfa18 <col:28, col:38> col:38 __th 'pthread_t':'unsigned long'
| `-NoThrowAttr 0x557fd9fbfbd0 <col:60>
|-FunctionDecl 0x557fd9fbfd20 <line:392:1, col:105> col:18 pthread_self 'pthread_t (void)' extern
| |-NoThrowAttr 0x557fd9fbfdc0 <col:54>
| `-ConstAttr 0x557fd9fbfe18 <col:95>
|-FunctionDecl 0x557fd9fbffe8 <line:393:1, line:394:70> line:393:12 pthread_equal 'int (pthread_t, pthread_t)' extern
| |-ParmVarDecl 0x557fd9fbfe50 <col:27, col:37> col:37 __thread1 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x557fd9fbfec8 <col:48, col:58> col:58 __thread2 'pthread_t':'unsigned long'
| |-NoThrowAttr 0x557fd9fc0098 <line:394:19>
| `-ConstAttr 0x557fd9fc00f0 <col:60>
|-FunctionDecl 0x557fd9fc1b08 <line:395:1, col:128> col:12 pthread_attr_init 'int (pthread_attr_t *)' extern
| |-ParmVarDecl 0x557fd9fc19d0 <col:31, col:47> col:47 __attr 'pthread_attr_t *'
| |-NoThrowAttr 0x557fd9fc1bb0 <col:71>
| `-NonNullAttr 0x557fd9fc1c08 <col:112, col:126> 1
|-FunctionDecl 0x557fd9fc1d10 <line:396:1, line:397:79> line:396:12 pthread_attr_destroy 'int (pthread_attr_t *)' extern
| |-ParmVarDecl 0x557fd9fc1c58 <col:34, col:50> col:50 __attr 'pthread_attr_t *'
| |-NoThrowAttr 0x557fd9fc1db8 <line:397:22>
| `-NonNullAttr 0x557fd9fc1e10 <col:63, col:77> 1
|-FunctionDecl 0x557fd9fc2038 <line:398:1, line:400:82> line:398:12 pthread_attr_getdetachstate 'int (const pthread_attr_t *, int *)' extern
| |-ParmVarDecl 0x557fd9fc1e58 <col:41, col:63> col:63 __attr 'const pthread_attr_t *'
| |-ParmVarDecl 0x557fd9fc1ed8 <line:399:6, col:11> col:11 __detachstate 'int *'
| |-NoThrowAttr 0x557fd9fc20e8 <line:400:22>
| `-NonNullAttr 0x557fd9fc2140 <col:63, col:80> 1 2
|-FunctionDecl 0x557fd9fc2348 <line:401:1, line:403:79> line:401:12 pthread_attr_setdetachstate 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x557fd9fc2188 <col:41, col:57> col:57 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x557fd9fc2208 <line:402:6, col:10> col:10 __detachstate 'int'
| |-NoThrowAttr 0x557fd9fc23f8 <line:403:22>
| `-NonNullAttr 0x557fd9fc2450 <col:63, col:77> 1
|-FunctionDecl 0x557fd9fc26a8 <line:404:1, line:406:82> line:404:12 pthread_attr_getguardsize 'int (const pthread_attr_t *, size_t *)' extern
| |-ParmVarDecl 0x557fd9fc2498 <col:39, col:61> col:61 __attr 'const pthread_attr_t *'
| |-ParmVarDecl 0x557fd9fc2540 <line:405:11, col:19> col:19 __guardsize 'size_t *'
| |-NoThrowAttr 0x557fd9fc2758 <line:406:22>
| `-NonNullAttr 0x557fd9fc27b0 <col:63, col:80> 1 2
|-FunctionDecl 0x557fd9fc39e8 <line:407:1, line:409:79> line:407:12 pthread_attr_setguardsize 'int (pthread_attr_t *, size_t)' extern
| |-ParmVarDecl 0x557fd9fc27f8 <col:39, col:55> col:55 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x557fd9fc2870 <line:408:11, col:18> col:18 __guardsize 'size_t':'unsigned long'
| |-NoThrowAttr 0x557fd9fc3a98 <line:409:22>
| `-NonNullAttr 0x557fd9fc3af0 <col:63, col:77> 1
|-FunctionDecl 0x557fd9fc3d28 <line:410:1, line:412:82> line:410:12 pthread_attr_getschedparam 'int (const pthread_attr_t *restrict, struct sched_param *restrict)' extern
| |-ParmVarDecl 0x557fd9fc3b38 <col:40, col:73> col:73 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x557fd9fc3bc8 <line:411:12, col:43> col:43 __param 'struct sched_param *restrict'
| |-NoThrowAttr 0x557fd9fc3dd8 <line:412:22>
| `-NonNullAttr 0x557fd9fc3e30 <col:63, col:80> 1 2
|-FunctionDecl 0x557fd9fc4068 <line:413:1, line:415:97> line:413:12 pthread_attr_setschedparam 'int (pthread_attr_t *restrict, const struct sched_param *restrict)' extern
| |-ParmVarDecl 0x557fd9fc3e78 <col:40, col:67> col:67 __attr 'pthread_attr_t *restrict'
| |-ParmVarDecl 0x557fd9fc3f08 <line:414:12, line:415:12> col:12 __param 'const struct sched_param *restrict'
| |-NoThrowAttr 0x557fd9fc4118 <col:37>
| `-NonNullAttr 0x557fd9fc4170 <col:78, col:95> 1 2
|-FunctionDecl 0x557fd9fc4358 <line:416:1, line:418:82> line:416:12 pthread_attr_getschedpolicy 'int (const pthread_attr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x557fd9fc41b8 <col:41, line:417:6> col:6 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x557fd9fc4238 <col:14, col:30> col:30 __policy 'int *restrict'
| |-NoThrowAttr 0x557fd9fc4408 <line:418:22>
| `-NonNullAttr 0x557fd9fc4460 <col:63, col:80> 1 2
|-FunctionDecl 0x557fd9fc45e8 <line:419:1, line:420:79> line:419:12 pthread_attr_setschedpolicy 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x557fd9fc44a8 <col:41, col:57> col:57 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x557fd9fc4528 <col:65, col:69> col:69 __policy 'int'
| |-NoThrowAttr 0x557fd9fc4698 <line:420:22>
| `-NonNullAttr 0x557fd9fc46f0 <col:63, col:77> 1
|-FunctionDecl 0x557fd9fc4898 <line:421:1, line:423:82> line:421:12 pthread_attr_getinheritsched 'int (const pthread_attr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x557fd9fc4738 <col:42, line:422:7> col:7 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x557fd9fc47b8 <col:15, col:31> col:31 __inherit 'int *restrict'
| |-NoThrowAttr 0x557fd9fc4948 <line:423:22>
| `-NonNullAttr 0x557fd9fc49c0 <col:63, col:80> 1 2
|-FunctionDecl 0x557fd9fc4b48 <line:424:1, line:426:79> line:424:12 pthread_attr_setinheritsched 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x557fd9fc4a08 <col:42, col:58> col:58 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x557fd9fc4a88 <line:425:7, col:11> col:11 __inherit 'int'
| |-NoThrowAttr 0x557fd9fc4bf8 <line:426:22>
| `-NonNullAttr 0x557fd9fc4c50 <col:63, col:77> 1
|-FunctionDecl 0x557fd9fc4df8 <line:427:1, line:429:82> line:427:12 pthread_attr_getscope 'int (const pthread_attr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x557fd9fc4c98 <col:35, col:68> col:68 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x557fd9fc4d18 <line:428:7, col:23> col:23 __scope 'int *restrict'
| |-NoThrowAttr 0x557fd9fc4ea8 <line:429:22>
| `-NonNullAttr 0x557fd9fc4f00 <col:63, col:80> 1 2
|-FunctionDecl 0x557fd9fc5088 <line:430:1, line:431:79> line:430:12 pthread_attr_setscope 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x557fd9fc4f48 <col:35, col:51> col:51 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x557fd9fc4fc8 <col:59, col:63> col:63 __scope 'int'
| |-NoThrowAttr 0x557fd9fc5138 <line:431:22>
| `-NonNullAttr 0x557fd9fc5190 <col:63, col:77> 1
|-FunctionDecl 0x557fd9fc53b8 <line:432:1, line:434:115> line:432:12 pthread_attr_getstackaddr 'int (const pthread_attr_t *restrict, void **restrict)' extern
| |-ParmVarDecl 0x557fd9fc51d8 <col:39, line:433:11> col:11 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x557fd9fc5258 <col:19, col:37> col:37 __stackaddr 'void **restrict'
| |-NoThrowAttr 0x557fd9fc5468 <line:434:22>
| |-NonNullAttr 0x557fd9fc54c0 <col:63, col:80> 1 2
| `-DeprecatedAttr 0x557fd9fc54f8 <col:100> "" ""
|-FunctionDecl 0x557fd9fc5708 <line:435:1, line:437:112> line:435:12 pthread_attr_setstackaddr 'int (pthread_attr_t *, void *)' extern
| |-ParmVarDecl 0x557fd9fc5548 <col:39, col:55> col:55 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x557fd9fc55c8 <line:436:11, col:17> col:17 __stackaddr 'void *'
| |-NoThrowAttr 0x557fd9fc57b8 <line:437:22>
| |-NonNullAttr 0x557fd9fc5810 <col:63, col:77> 1
| `-DeprecatedAttr 0x557fd9fc5848 <col:97> "" ""
|-FunctionDecl 0x557fd9fc5a48 <line:438:1, line:440:82> line:438:12 pthread_attr_getstacksize 'int (const pthread_attr_t *restrict, size_t *restrict)' extern
| |-ParmVarDecl 0x557fd9fc5898 <col:39, line:439:11> col:11 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x557fd9fc5910 <col:19, col:38> col:38 __stacksize 'size_t *restrict'
| |-NoThrowAttr 0x557fd9fc5af8 <line:440:22>
| `-NonNullAttr 0x557fd9fc5b50 <col:63, col:80> 1 2
|-FunctionDecl 0x557fd9fc5cd0 <line:441:1, line:443:79> line:441:12 pthread_attr_setstacksize 'int (pthread_attr_t *, size_t)' extern
| |-ParmVarDecl 0x557fd9fc5b98 <col:39, col:55> col:55 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x557fd9fc5c10 <line:442:11, col:18> col:18 __stacksize 'size_t':'unsigned long'
| |-NoThrowAttr 0x557fd9fc5d80 <line:443:22>
| `-NonNullAttr 0x557fd9fc5dd8 <col:63, col:77> 1
|-FunctionDecl 0x557fd9fc60c8 <line:444:1, line:447:85> line:444:12 pthread_attr_getstack 'int (const pthread_attr_t *restrict, void **restrict, size_t *restrict)' extern
| |-ParmVarDecl 0x557fd9fc5e28 <col:35, col:68> col:68 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x557fd9fc5ea8 <line:445:7, col:25> col:25 __stackaddr 'void **restrict'
| |-ParmVarDecl 0x557fd9fc5f20 <line:446:7, col:26> col:26 __stacksize 'size_t *restrict'
| |-NoThrowAttr 0x557fd9fc6180 <line:447:22>
| `-NonNullAttr 0x557fd9fc61d8 <col:63, col:83> 1 2 3
|-FunctionDecl 0x557fd9fc6488 <line:448:1, line:449:100> line:448:12 pthread_attr_setstack 'int (pthread_attr_t *, void *, size_t)' extern
| |-ParmVarDecl 0x557fd9fc6230 <col:35, col:51> col:51 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x557fd9fc62b0 <col:59, col:65> col:65 __stackaddr 'void *'
| |-ParmVarDecl 0x557fd9fc6328 <line:449:7, col:14> col:14 __stacksize 'size_t':'unsigned long'
| |-NoThrowAttr 0x557fd9fc6540 <col:43>
| `-NonNullAttr 0x557fd9fc6598 <col:84, col:98> 1
|-FunctionDecl 0x557fd9fc6858 <line:450:1, line:452:79> line:450:12 pthread_setschedparam 'int (pthread_t, int, const struct sched_param *)' extern
| |-ParmVarDecl 0x557fd9fc65e8 <col:35, col:45> col:45 __target_thread 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x557fd9fc6668 <col:62, col:66> col:66 __policy 'int'
| |-ParmVarDecl 0x557fd9fc66f8 <line:451:7, col:33> col:33 __param 'const struct sched_param *'
| |-NoThrowAttr 0x557fd9fc6910 <line:452:22>
| `-NonNullAttr 0x557fd9fc6968 <col:63, col:77> 3
|-FunctionDecl 0x557fd9fc6c78 <line:453:1, line:456:82> line:453:12 pthread_getschedparam 'int (pthread_t, int *restrict, struct sched_param *restrict)' extern
| |-ParmVarDecl 0x557fd9fc69e0 <col:35, col:45> col:45 __target_thread 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x557fd9fc6a60 <line:454:7, col:23> col:23 __policy 'int *restrict'
| |-ParmVarDecl 0x557fd9fc6af0 <line:455:7, col:38> col:38 __param 'struct sched_param *restrict'
| |-NoThrowAttr 0x557fd9fc6d30 <line:456:22>
| `-NonNullAttr 0x557fd9fc6d88 <col:63, col:80> 2 3
|-FunctionDecl 0x557fd9fc6f78 <line:457:1, line:458:45> line:457:12 pthread_setschedprio 'int (pthread_t, int)' extern
| |-ParmVarDecl 0x557fd9fc6dd8 <col:34, col:44> col:44 __target_thread 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x557fd9fc6e58 <col:61, col:65> col:65 __prio 'int'
| `-NoThrowAttr 0x557fd9fc7028 <line:458:22>
|-FunctionDecl 0x557fd9fc73f8 <line:459:1, line:460:71> line:459:12 pthread_once 'int (pthread_once_t *, void (*)(void))' extern
| |-ParmVarDecl 0x557fd9fc70f0 <col:26, col:42> col:42 __once_control 'pthread_once_t *'
| |-ParmVarDecl 0x557fd9fc7290 <line:460:5, col:33> col:12 __init_routine 'void (*)(void)'
| `-NonNullAttr 0x557fd9fc74a8 <col:52, col:69> 1 2
|-FunctionDecl 0x557fd9fc7650 <line:461:1, col:64> col:12 pthread_setcancelstate 'int (int, int *)' extern
| |-ParmVarDecl 0x557fd9fc7530 <col:36, col:40> col:40 __state 'int'
| `-ParmVarDecl 0x557fd9fc75b0 <col:49, col:54> col:54 __oldstate 'int *'
|-FunctionDecl 0x557fd9fc7838 <line:462:1, col:61> col:12 pthread_setcanceltype 'int (int, int *)' extern
| |-ParmVarDecl 0x557fd9fc7718 <col:35, col:39> col:39 __type 'int'
| `-ParmVarDecl 0x557fd9fc7798 <col:47, col:52> col:52 __oldtype 'int *'
|-FunctionDecl 0x557fd9fc79f0 <line:463:1, col:42> col:12 pthread_cancel 'int (pthread_t)' extern
| `-ParmVarDecl 0x557fd9fc78f8 <col:28, col:38> col:38 __th 'pthread_t':'unsigned long'
|-FunctionDecl 0x557fd9fc7b30 <line:464:1, col:37> col:13 pthread_testcancel 'void (void)' extern
|-RecordDecl 0x557fd9fc7bd0 <line:465:9, line:473:1> line:465:9 struct definition
| |-RecordDecl 0x557fd9fc7c78 <line:467:3, line:471:3> line:467:3 struct definition
| | |-FieldDecl 0x557fd9fc7d68 <line:469:5, col:15> col:15 __cancel_jmp_buf '__jmp_buf':'long [8]'
| | `-FieldDecl 0x557fd9fc7dd0 <line:470:5, col:9> col:9 __mask_was_saved 'int'
| |-FieldDecl 0x557fd9fc7fa0 <line:467:3, line:471:23> col:5 __cancel_jmp_buf 'struct (anonymous struct at ./split_9/safe000_power.opt_false-unreach-call.i:467:3) [1]'
| `-FieldDecl 0x557fd9fc8098 <line:472:3, col:16> col:9 __pad 'void *[4]'
|-TypedefDecl 0x557fd9fc8150 <line:465:1, line:473:3> col:3 referenced __pthread_unwind_buf_t 'struct __pthread_unwind_buf_t':'__pthread_unwind_buf_t'
| |-ElaboratedType 0x557fd9fc80f0 'struct __pthread_unwind_buf_t' sugar
| | `-RecordType 0x557fd9fc7c50 '__pthread_unwind_buf_t'
| |   `-Record 0x557fd9fc7bd0 ''
| `-AlignedAttr 0x557fd9fc81a8 <col:42> aligned
|   `-<<<NULL>>>
|-RecordDecl 0x557fd9fc8220 <line:474:1, line:480:1> line:474:8 struct __pthread_cleanup_frame definition
| |-FieldDecl 0x557fd9fc8380 <line:476:3, col:35> col:10 __cancel_routine 'void (*)(void *)'
| |-FieldDecl 0x557fd9fc83e8 <line:477:3, col:9> col:9 __cancel_arg 'void *'
| |-FieldDecl 0x557fd9fc8450 <line:478:3, col:7> col:7 __do_it 'int'
| `-FieldDecl 0x557fd9fc84b8 <line:479:3, col:7> col:7 __cancel_type 'int'
|-FunctionDecl 0x557fd9fc86c0 <line:481:1, col:69> col:13 __pthread_register_cancel 'void (__pthread_unwind_buf_t *)' extern
| `-ParmVarDecl 0x557fd9fc85b0 <col:40, col:64> col:64 __buf '__pthread_unwind_buf_t *'
|-FunctionDecl 0x557fd9fc8808 <line:483:1, col:71> col:13 __pthread_unregister_cancel 'void (__pthread_unwind_buf_t *)' extern
| `-ParmVarDecl 0x557fd9fc8778 <col:42, col:66> col:66 __buf '__pthread_unwind_buf_t *'
|-FunctionDecl 0x557fd9fc8a00 <line:485:1, line:487:31> line:485:13 __pthread_unwind_next 'void (__pthread_unwind_buf_t *) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x557fd9fc88c0 <col:36, col:60> col:60 __buf '__pthread_unwind_buf_t *'
| `-WeakAttr 0x557fd9fc8aa8 <line:487:22>
|-RecordDecl 0x557fd9fc8b00 <line:489:1, col:8> col:8 struct __jmp_buf_tag
|-FunctionDecl 0x557fd9fc8e18 <line:490:1, col:98> col:12 __sigsetjmp 'int (struct __jmp_buf_tag *, int)' extern
| |-ParmVarDecl 0x557fd9fc8c78 <col:25, col:47> col:47 __env 'struct __jmp_buf_tag *'
| |-ParmVarDecl 0x557fd9fc8cf8 <col:54, col:58> col:58 __savemask 'int'
| |-NoThrowAttr 0x557fd9fc8ec8 <col:86>
| `-ReturnsTwiceAttr 0x557fd9fc8f20 <col:12> Implicit
|-FunctionDecl 0x557fd9fc9248 <line:491:1, line:493:79> line:491:12 pthread_mutex_init 'int (pthread_mutex_t *, const pthread_mutexattr_t *)' extern
| |-ParmVarDecl 0x557fd9fc8ff0 <col:32, col:49> col:49 __mutex 'pthread_mutex_t *'
| |-ParmVarDecl 0x557fd9fc9100 <line:492:11, col:38> col:38 __mutexattr 'const pthread_mutexattr_t *'
| |-NoThrowAttr 0x557fd9fc92f8 <line:493:22>
| `-NonNullAttr 0x557fd9fc9350 <col:63, col:77> 1
|-FunctionDecl 0x557fd9fc94c8 <line:494:1, line:495:79> line:494:12 pthread_mutex_destroy 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x557fd9fc9398 <col:35, col:52> col:52 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x557fd9fc9570 <line:495:22>
| `-NonNullAttr 0x557fd9fc95c8 <col:63, col:77> 1
|-FunctionDecl 0x557fd9fc96d0 <line:496:1, line:497:68> line:496:12 pthread_mutex_trylock 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x557fd9fc9618 <col:35, col:52> col:52 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x557fd9fc9778 <line:497:22>
| `-NonNullAttr 0x557fd9fc97d0 <col:52, col:66> 1
|-FunctionDecl 0x557fd9fc98d0 <line:498:1, line:499:68> line:498:12 pthread_mutex_lock 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x557fd9fc9818 <col:32, col:49> col:49 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x557fd9fc9978 <line:499:22>
| `-NonNullAttr 0x557fd9fc99d0 <col:52, col:66> 1
|-FunctionDecl 0x557fd9fcac28 <line:500:1, line:502:85> line:500:12 pthread_mutex_timedlock 'int (pthread_mutex_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x557fd9fcaa38 <col:37, col:65> col:65 __mutex 'pthread_mutex_t *restrict'
| |-ParmVarDecl 0x557fd9fcaac8 <line:501:9, line:502:9> col:9 __abstime 'const struct timespec *restrict'
| |-NoThrowAttr 0x557fd9fcacd8 <col:36>
| `-NonNullAttr 0x557fd9fcad30 <col:66, col:83> 1 2
|-FunctionDecl 0x557fd9fcae30 <line:503:1, line:504:68> line:503:12 pthread_mutex_unlock 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x557fd9fcad78 <col:34, col:51> col:51 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x557fd9fcaed8 <line:504:22>
| `-NonNullAttr 0x557fd9fcaf30 <col:52, col:66> 1
|-FunctionDecl 0x557fd9fcb1c8 <line:505:1, line:508:82> line:505:12 pthread_mutex_getprioceiling 'int (const pthread_mutex_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x557fd9fcafe0 <col:42, line:506:18> col:18 __mutex 'const pthread_mutex_t *restrict'
| |-ParmVarDecl 0x557fd9fcb060 <line:507:7, col:23> col:23 __prioceiling 'int *restrict'
| |-NoThrowAttr 0x557fd9fcb278 <line:508:22>
| `-NonNullAttr 0x557fd9fcb2d0 <col:63, col:80> 1 2
|-FunctionDecl 0x557fd9fcb598 <line:509:1, line:512:82> line:509:12 pthread_mutex_setprioceiling 'int (pthread_mutex_t *restrict, int, int *restrict)' extern
| |-ParmVarDecl 0x557fd9fcb318 <col:42, col:70> col:70 __mutex 'pthread_mutex_t *restrict'
| |-ParmVarDecl 0x557fd9fcb398 <line:510:7, col:11> col:11 __prioceiling 'int'
| |-ParmVarDecl 0x557fd9fcb418 <line:511:7, col:23> col:23 __old_ceiling 'int *restrict'
| |-NoThrowAttr 0x557fd9fcb650 <line:512:22>
| `-NonNullAttr 0x557fd9fcb6a8 <col:63, col:80> 1 3
|-FunctionDecl 0x557fd9fcb7b0 <line:513:1, line:514:79> line:513:12 pthread_mutex_consistent 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x557fd9fcb6f8 <col:38, col:55> col:55 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x557fd9fcb858 <line:514:22>
| `-NonNullAttr 0x557fd9fcb8b0 <col:63, col:77> 1
|-FunctionDecl 0x557fd9fcbad8 <line:515:1, line:516:79> line:515:12 pthread_mutexattr_init 'int (pthread_mutexattr_t *)' extern
| |-ParmVarDecl 0x557fd9fcb960 <col:36, col:57> col:57 __attr 'pthread_mutexattr_t *'
| |-NoThrowAttr 0x557fd9fcbb80 <line:516:22>
| `-NonNullAttr 0x557fd9fcbbd8 <col:63, col:77> 1
|-FunctionDecl 0x557fd9fcbce0 <line:517:1, line:518:79> line:517:12 pthread_mutexattr_destroy 'int (pthread_mutexattr_t *)' extern
| |-ParmVarDecl 0x557fd9fcbc28 <col:39, col:60> col:60 __attr 'pthread_mutexattr_t *'
| |-NoThrowAttr 0x557fd9fcbd88 <line:518:22>
| `-NonNullAttr 0x557fd9fcbde0 <col:63, col:77> 1
|-FunctionDecl 0x557fd9fcc008 <line:519:1, line:522:82> line:519:12 pthread_mutexattr_getpshared 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x557fd9fcbe28 <col:42, line:520:18> col:18 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x557fd9fcbea8 <line:521:7, col:23> col:23 __pshared 'int *restrict'
| |-NoThrowAttr 0x557fd9fcc0b8 <line:522:22>
| `-NonNullAttr 0x557fd9fcc110 <col:63, col:80> 1 2
|-FunctionDecl 0x557fd9fcc318 <line:523:1, line:525:79> line:523:12 pthread_mutexattr_setpshared 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x557fd9fcc158 <col:42, col:63> col:63 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x557fd9fcc1d8 <line:524:7, col:11> col:11 __pshared 'int'
| |-NoThrowAttr 0x557fd9fcc3c8 <line:525:22>
| `-NonNullAttr 0x557fd9fcc420 <col:63, col:77> 1
|-FunctionDecl 0x557fd9fcc5c8 <line:526:1, line:528:82> line:526:12 pthread_mutexattr_gettype 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x557fd9fcc468 <col:39, line:527:11> col:11 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x557fd9fcc4e8 <col:19, col:35> col:35 __kind 'int *restrict'
| |-NoThrowAttr 0x557fd9fcc678 <line:528:22>
| `-NonNullAttr 0x557fd9fcc6d0 <col:63, col:80> 1 2
|-FunctionDecl 0x557fd9fcc858 <line:529:1, line:530:79> line:529:12 pthread_mutexattr_settype 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x557fd9fcc718 <col:39, col:60> col:60 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x557fd9fcc798 <col:68, col:72> col:72 __kind 'int'
| |-NoThrowAttr 0x557fd9fcc908 <line:530:22>
| `-NonNullAttr 0x557fd9fcc960 <col:63, col:77> 1
|-FunctionDecl 0x557fd9fccb20 <line:531:1, line:534:82> line:531:12 pthread_mutexattr_getprotocol 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x557fd9fcc9a8 <col:43, line:532:19> col:19 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x557fd9fcca40 <line:533:8, col:24> col:24 __protocol 'int *restrict'
| |-NoThrowAttr 0x557fd9fccbd0 <line:534:22>
| `-NonNullAttr 0x557fd9fccc28 <col:63, col:80> 1 2
|-FunctionDecl 0x557fd9fccdb8 <line:535:1, line:537:79> line:535:12 pthread_mutexattr_setprotocol 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x557fd9fccc78 <col:43, col:64> col:64 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x557fd9fcccf8 <line:536:8, col:12> col:12 __protocol 'int'
| |-NoThrowAttr 0x557fd9fcce68 <line:537:22>
| `-NonNullAttr 0x557fd9fccec0 <col:63, col:77> 1
|-FunctionDecl 0x557fd9fcd068 <line:538:1, line:541:82> line:538:12 pthread_mutexattr_getprioceiling 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x557fd9fccf08 <col:46, line:539:22> col:22 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x557fd9fccf88 <line:540:11, col:27> col:27 __prioceiling 'int *restrict'
| |-NoThrowAttr 0x557fd9fcd118 <line:541:22>
| `-NonNullAttr 0x557fd9fcd170 <col:63, col:80> 1 2
|-FunctionDecl 0x557fd9fcd2f8 <line:542:1, line:544:79> line:542:12 pthread_mutexattr_setprioceiling 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x557fd9fcd1b8 <col:46, col:67> col:67 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x557fd9fcd238 <line:543:11, col:15> col:15 __prioceiling 'int'
| |-NoThrowAttr 0x557fd9fcd3a8 <line:544:22>
| `-NonNullAttr 0x557fd9fcd400 <col:63, col:77> 1
|-FunctionDecl 0x557fd9fcd5e8 <line:545:1, line:547:82> line:545:12 pthread_mutexattr_getrobust 'int (const pthread_mutexattr_t *, int *)' extern
| |-ParmVarDecl 0x557fd9fcd448 <col:41, col:68> col:68 __attr 'const pthread_mutexattr_t *'
| |-ParmVarDecl 0x557fd9fcd4c8 <line:546:6, col:11> col:11 __robustness 'int *'
| |-NoThrowAttr 0x557fd9fcd698 <line:547:22>
| `-NonNullAttr 0x557fd9fcd6f0 <col:63, col:80> 1 2
|-FunctionDecl 0x557fd9fcd878 <line:548:1, line:550:79> line:548:12 pthread_mutexattr_setrobust 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x557fd9fcd738 <col:41, col:62> col:62 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x557fd9fcd7b8 <line:549:6, col:10> col:10 __robustness 'int'
| |-NoThrowAttr 0x557fd9fcd928 <line:550:22>
| `-NonNullAttr 0x557fd9fcd980 <col:63, col:77> 1
|-FunctionDecl 0x557fd9fcecf8 <line:551:1, line:553:86> line:551:12 pthread_rwlock_init 'int (pthread_rwlock_t *restrict, const pthread_rwlockattr_t *restrict)' extern
| |-ParmVarDecl 0x557fd9fceaa0 <col:33, col:62> col:62 __rwlock 'pthread_rwlock_t *restrict'
| |-ParmVarDecl 0x557fd9fcebb0 <line:552:5, line:553:5> col:5 __attr 'const pthread_rwlockattr_t *restrict'
| |-NoThrowAttr 0x557fd9fceda8 <col:29>
| `-NonNullAttr 0x557fd9fcee00 <col:70, col:84> 1
|-FunctionDecl 0x557fd9fcef78 <line:554:1, line:555:79> line:554:12 pthread_rwlock_destroy 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x557fd9fcee48 <col:36, col:54> col:54 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x557fd9fcf020 <line:555:22>
| `-NonNullAttr 0x557fd9fcf078 <col:63, col:77> 1
|-FunctionDecl 0x557fd9fcf180 <line:556:1, line:557:68> line:556:12 pthread_rwlock_rdlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x557fd9fcf0c8 <col:35, col:53> col:53 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x557fd9fcf228 <line:557:22>
| `-NonNullAttr 0x557fd9fcf280 <col:52, col:66> 1
|-FunctionDecl 0x557fd9fcf380 <line:558:1, line:559:65> line:558:12 pthread_rwlock_tryrdlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x557fd9fcf2c8 <col:38, col:56> col:56 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x557fd9fcf428 <line:559:19>
| `-NonNullAttr 0x557fd9fcf480 <col:49, col:63> 1
|-FunctionDecl 0x557fd9fcf6b8 <line:560:1, line:562:88> line:560:12 pthread_rwlock_timedrdlock 'int (pthread_rwlock_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x557fd9fcf4c8 <col:40, col:69> col:69 __rwlock 'pthread_rwlock_t *restrict'
| |-ParmVarDecl 0x557fd9fcf558 <line:561:12, line:562:12> col:12 __abstime 'const struct timespec *restrict'
| |-NoThrowAttr 0x557fd9fcf768 <col:39>
| `-NonNullAttr 0x557fd9fcf7c0 <col:69, col:86> 1 2
|-FunctionDecl 0x557fd9fcf8c0 <line:563:1, line:564:68> line:563:12 pthread_rwlock_wrlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x557fd9fcf808 <col:35, col:53> col:53 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x557fd9fcf968 <line:564:22>
| `-NonNullAttr 0x557fd9fcf9c0 <col:52, col:66> 1
|-FunctionDecl 0x557fd9fcfb28 <line:565:1, line:566:68> line:565:12 pthread_rwlock_trywrlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x557fd9fcfa70 <col:38, col:56> col:56 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x557fd9fcfbd0 <line:566:22>
| `-NonNullAttr 0x557fd9fcfc28 <col:52, col:66> 1
|-FunctionDecl 0x557fd9fcfde8 <line:567:1, line:569:88> line:567:12 pthread_rwlock_timedwrlock 'int (pthread_rwlock_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x557fd9fcfc78 <col:40, col:69> col:69 __rwlock 'pthread_rwlock_t *restrict'
| |-ParmVarDecl 0x557fd9fcfd08 <line:568:12, line:569:12> col:12 __abstime 'const struct timespec *restrict'
| |-NoThrowAttr 0x557fd9fcfe98 <col:39>
| `-NonNullAttr 0x557fd9fcfef0 <col:69, col:86> 1 2
|-FunctionDecl 0x557fd9fcfff0 <line:570:1, line:571:68> line:570:12 pthread_rwlock_unlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x557fd9fcff38 <col:35, col:53> col:53 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x557fd9fd0098 <line:571:22>
| `-NonNullAttr 0x557fd9fd00f0 <col:52, col:66> 1
|-FunctionDecl 0x557fd9fd02d8 <line:572:1, line:573:79> line:572:12 pthread_rwlockattr_init 'int (pthread_rwlockattr_t *)' extern
| |-ParmVarDecl 0x557fd9fd01a0 <col:37, col:59> col:59 __attr 'pthread_rwlockattr_t *'
| |-NoThrowAttr 0x557fd9fd0380 <line:573:22>
| `-NonNullAttr 0x557fd9fd03d8 <col:63, col:77> 1
|-FunctionDecl 0x557fd9fd04e0 <line:574:1, line:575:79> line:574:12 pthread_rwlockattr_destroy 'int (pthread_rwlockattr_t *)' extern
| |-ParmVarDecl 0x557fd9fd0428 <col:40, col:62> col:62 __attr 'pthread_rwlockattr_t *'
| |-NoThrowAttr 0x557fd9fd0588 <line:575:22>
| `-NonNullAttr 0x557fd9fd05e0 <col:63, col:77> 1
|-FunctionDecl 0x557fd9fd0808 <line:576:1, line:579:82> line:576:12 pthread_rwlockattr_getpshared 'int (const pthread_rwlockattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x557fd9fd0628 <col:43, line:577:19> col:19 __attr 'const pthread_rwlockattr_t *restrict'
| |-ParmVarDecl 0x557fd9fd06a8 <line:578:8, col:24> col:24 __pshared 'int *restrict'
| |-NoThrowAttr 0x557fd9fd08b8 <line:579:22>
| `-NonNullAttr 0x557fd9fd0910 <col:63, col:80> 1 2
|-FunctionDecl 0x557fd9fd0b38 <line:580:1, line:582:79> line:580:12 pthread_rwlockattr_setpshared 'int (pthread_rwlockattr_t *, int)' extern
| |-ParmVarDecl 0x557fd9fd0958 <col:43, col:65> col:65 __attr 'pthread_rwlockattr_t *'
| |-ParmVarDecl 0x557fd9fd09d8 <line:581:8, col:12> col:12 __pshared 'int'
| |-NoThrowAttr 0x557fd9fd0be8 <line:582:22>
| `-NonNullAttr 0x557fd9fd0c40 <col:63, col:77> 1
|-FunctionDecl 0x557fd9fd0de8 <line:583:1, line:586:82> line:583:12 pthread_rwlockattr_getkind_np 'int (const pthread_rwlockattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x557fd9fd0c88 <col:43, line:584:19> col:19 __attr 'const pthread_rwlockattr_t *restrict'
| |-ParmVarDecl 0x557fd9fd0d08 <line:585:8, col:24> col:24 __pref 'int *restrict'
| |-NoThrowAttr 0x557fd9fd0e98 <line:586:22>
| `-NonNullAttr 0x557fd9fd0ef0 <col:63, col:80> 1 2
|-FunctionDecl 0x557fd9fd1078 <line:587:1, line:588:93> line:587:12 pthread_rwlockattr_setkind_np 'int (pthread_rwlockattr_t *, int)' extern
| |-ParmVarDecl 0x557fd9fd0f38 <col:43, col:65> col:65 __attr 'pthread_rwlockattr_t *'
| |-ParmVarDecl 0x557fd9fd0fb8 <line:588:8, col:12> col:12 __pref 'int'
| |-NoThrowAttr 0x557fd9fd1128 <col:36>
| `-NonNullAttr 0x557fd9fd1180 <col:77, col:91> 1
|-FunctionDecl 0x557fd9fd14b8 <line:589:1, line:591:79> line:589:12 pthread_cond_init 'int (pthread_cond_t *restrict, const pthread_condattr_t *restrict)' extern
| |-ParmVarDecl 0x557fd9fd1260 <col:31, col:58> col:58 __cond 'pthread_cond_t *restrict'
| |-ParmVarDecl 0x557fd9fd1370 <line:590:10, col:47> col:47 __cond_attr 'const pthread_condattr_t *restrict'
| |-NoThrowAttr 0x557fd9fd1568 <line:591:22>
| `-NonNullAttr 0x557fd9fd15c0 <col:63, col:77> 1
|-FunctionDecl 0x557fd9fd1738 <line:592:1, line:593:79> line:592:12 pthread_cond_destroy 'int (pthread_cond_t *)' extern
| |-ParmVarDecl 0x557fd9fd1608 <col:34, col:50> col:50 __cond 'pthread_cond_t *'
| |-NoThrowAttr 0x557fd9fd17e0 <line:593:22>
| `-NonNullAttr 0x557fd9fd1838 <col:63, col:77> 1
|-FunctionDecl 0x557fd9fd1940 <line:594:1, line:595:68> line:594:12 pthread_cond_signal 'int (pthread_cond_t *)' extern
| |-ParmVarDecl 0x557fd9fd1888 <col:33, col:49> col:49 __cond 'pthread_cond_t *'
| |-NoThrowAttr 0x557fd9fd19e8 <line:595:22>
| `-NonNullAttr 0x557fd9fd1a40 <col:52, col:66> 1
|-FunctionDecl 0x557fd9fd1b58 <line:596:1, line:597:68> line:596:12 pthread_cond_broadcast 'int (pthread_cond_t *)' extern
| |-ParmVarDecl 0x557fd9fd1aa0 <col:36, col:52> col:52 __cond 'pthread_cond_t *'
| |-NoThrowAttr 0x557fd9fd1c00 <line:597:22>
| `-NonNullAttr 0x557fd9fd1c58 <col:52, col:66> 1
|-FunctionDecl 0x557fd9fd1e88 <line:598:1, line:600:41> line:598:12 pthread_cond_wait 'int (pthread_cond_t *restrict, pthread_mutex_t *restrict)' extern
| |-ParmVarDecl 0x557fd9fd1ca8 <col:31, col:58> col:58 __cond 'pthread_cond_t *restrict'
| |-ParmVarDecl 0x557fd9fd1d20 <line:599:10, col:38> col:38 __mutex 'pthread_mutex_t *restrict'
| `-NonNullAttr 0x557fd9fd1f38 <line:600:22, col:39> 1 2
|-FunctionDecl 0x557fd9fd2268 <line:601:1, line:604:44> line:601:12 pthread_cond_timedwait 'int (pthread_cond_t *restrict, pthread_mutex_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x557fd9fd1fb8 <col:36, col:63> col:63 __cond 'pthread_cond_t *restrict'
| |-ParmVarDecl 0x557fd9fd2030 <line:602:8, col:36> col:36 __mutex 'pthread_mutex_t *restrict'
| |-ParmVarDecl 0x557fd9fd20c0 <line:603:8, col:42> col:42 __abstime 'const struct timespec *restrict'
| `-NonNullAttr 0x557fd9fd2320 <line:604:22, col:42> 1 2 3
|-FunctionDecl 0x557fd9fd2538 <line:605:1, line:606:79> line:605:12 pthread_condattr_init 'int (pthread_condattr_t *)' extern
| |-ParmVarDecl 0x557fd9fd2400 <col:35, col:55> col:55 __attr 'pthread_condattr_t *'
| |-NoThrowAttr 0x557fd9fd25e0 <line:606:22>
| `-NonNullAttr 0x557fd9fd2638 <col:63, col:77> 1
|-FunctionDecl 0x557fd9fd2740 <line:607:1, line:608:79> line:607:12 pthread_condattr_destroy 'int (pthread_condattr_t *)' extern
| |-ParmVarDecl 0x557fd9fd2688 <col:38, col:58> col:58 __attr 'pthread_condattr_t *'
| |-NoThrowAttr 0x557fd9fd27e8 <line:608:22>
| `-NonNullAttr 0x557fd9fd2840 <col:63, col:77> 1
|-FunctionDecl 0x557fd9fd2aa0 <line:609:1, line:612:82> line:609:12 pthread_condattr_getpshared 'int (const pthread_condattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x557fd9fd2888 <col:41, line:610:17> col:17 __attr 'const pthread_condattr_t *restrict'
| |-ParmVarDecl 0x557fd9fd2908 <line:611:6, col:22> col:22 __pshared 'int *restrict'
| |-NoThrowAttr 0x557fd9fd2b50 <line:612:22>
| `-NonNullAttr 0x557fd9fd2ba8 <col:63, col:80> 1 2
|-FunctionDecl 0x557fd9fd2db8 <line:613:1, line:614:94> line:613:12 pthread_condattr_setpshared 'int (pthread_condattr_t *, int)' extern
| |-ParmVarDecl 0x557fd9fd2bf8 <col:41, col:61> col:61 __attr 'pthread_condattr_t *'
| |-ParmVarDecl 0x557fd9fd2c78 <line:614:6, col:10> col:10 __pshared 'int'
| |-NoThrowAttr 0x557fd9fd2e68 <col:37>
| `-NonNullAttr 0x557fd9fd2ec0 <col:78, col:92> 1
|-FunctionDecl 0x557fd9fd30d8 <line:615:1, line:618:82> line:615:12 pthread_condattr_getclock 'int (const pthread_condattr_t *restrict, __clockid_t *restrict)' extern
| |-ParmVarDecl 0x557fd9fd2f08 <col:39, line:616:22> col:22 __attr 'const pthread_condattr_t *restrict'
| |-ParmVarDecl 0x557fd9fd2fb0 <line:617:11, col:35> col:35 __clock_id '__clockid_t *restrict'
| |-NoThrowAttr 0x557fd9fd3188 <line:618:22>
| `-NonNullAttr 0x557fd9fd31e0 <col:63, col:80> 1 2
|-FunctionDecl 0x557fd9fd33a8 <line:619:1, line:621:79> line:619:12 pthread_condattr_setclock 'int (pthread_condattr_t *, __clockid_t)' extern
| |-ParmVarDecl 0x557fd9fd3228 <col:39, col:59> col:59 __attr 'pthread_condattr_t *'
| |-ParmVarDecl 0x557fd9fd32a0 <line:620:11, col:23> col:23 __clock_id '__clockid_t':'int'
| |-NoThrowAttr 0x557fd9fd3458 <line:621:22>
| `-NonNullAttr 0x557fd9fd34b0 <col:63, col:77> 1
|-FunctionDecl 0x557fd9fd3758 <line:622:1, line:623:79> line:622:12 pthread_spin_init 'int (pthread_spinlock_t *, int)' extern
| |-ParmVarDecl 0x557fd9fd3590 <col:31, col:51> col:51 __lock 'pthread_spinlock_t *'
| |-ParmVarDecl 0x557fd9fd3610 <col:59, col:63> col:63 __pshared 'int'
| |-NoThrowAttr 0x557fd9fd3808 <line:623:22>
| `-NonNullAttr 0x557fd9fd3860 <col:63, col:77> 1
|-FunctionDecl 0x557fd9fd39d8 <line:624:1, line:625:79> line:624:12 pthread_spin_destroy 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x557fd9fd38a8 <col:34, col:54> col:54 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x557fd9fd3ab0 <line:625:22>
| `-NonNullAttr 0x557fd9fd3b08 <col:63, col:77> 1
|-FunctionDecl 0x557fd9fd3c10 <line:626:1, line:627:68> line:626:12 pthread_spin_lock 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x557fd9fd3b58 <col:31, col:51> col:51 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x557fd9fd3cb8 <line:627:22>
| `-NonNullAttr 0x557fd9fd3d10 <col:52, col:66> 1
|-FunctionDecl 0x557fd9fd3e10 <line:628:1, line:629:68> line:628:12 pthread_spin_trylock 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x557fd9fd3d58 <col:34, col:54> col:54 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x557fd9fd3eb8 <line:629:22>
| `-NonNullAttr 0x557fd9fd3f10 <col:52, col:66> 1
|-FunctionDecl 0x557fd9fd4010 <line:630:1, line:631:68> line:630:12 pthread_spin_unlock 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x557fd9fd3f58 <col:33, col:53> col:53 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x557fd9fd40b8 <line:631:22>
| `-NonNullAttr 0x557fd9fd4110 <col:52, col:66> 1
|-FunctionDecl 0x557fd9fd44e8 <line:632:1, line:635:79> line:632:12 pthread_barrier_init 'int (pthread_barrier_t *restrict, const pthread_barrierattr_t *restrict, unsigned int)' extern
| |-ParmVarDecl 0x557fd9fd41f0 <col:34, col:64> col:64 __barrier 'pthread_barrier_t *restrict'
| |-ParmVarDecl 0x557fd9fd4300 <line:633:6, line:634:6> col:6 __attr 'const pthread_barrierattr_t *restrict'
| |-ParmVarDecl 0x557fd9fd4380 <col:14, col:27> col:27 __count 'unsigned int'
| |-NoThrowAttr 0x557fd9fd45a0 <line:635:22>
| `-NonNullAttr 0x557fd9fd45f8 <col:63, col:77> 1
|-FunctionDecl 0x557fd9fd4778 <line:636:1, line:637:79> line:636:12 pthread_barrier_destroy 'int (pthread_barrier_t *)' extern
| |-ParmVarDecl 0x557fd9fd4648 <col:37, col:56> col:56 __barrier 'pthread_barrier_t *'
| |-NoThrowAttr 0x557fd9fd4820 <line:637:22>
| `-NonNullAttr 0x557fd9fd4878 <col:63, col:77> 1
|-FunctionDecl 0x557fd9fd4980 <line:638:1, line:639:68> line:638:12 pthread_barrier_wait 'int (pthread_barrier_t *)' extern
| |-ParmVarDecl 0x557fd9fd48c8 <col:34, col:53> col:53 __barrier 'pthread_barrier_t *'
| |-NoThrowAttr 0x557fd9fd4a28 <line:639:22>
| `-NonNullAttr 0x557fd9fd4a80 <col:52, col:66> 1
|-FunctionDecl 0x557fd9fd5c88 <line:640:1, line:641:79> line:640:12 pthread_barrierattr_init 'int (pthread_barrierattr_t *)' extern
| |-ParmVarDecl 0x557fd9fd5b50 <col:38, col:61> col:61 __attr 'pthread_barrierattr_t *'
| |-NoThrowAttr 0x557fd9fd5d30 <line:641:22>
| `-NonNullAttr 0x557fd9fd5d88 <col:63, col:77> 1
|-FunctionDecl 0x557fd9fd5e90 <line:642:1, line:643:79> line:642:12 pthread_barrierattr_destroy 'int (pthread_barrierattr_t *)' extern
| |-ParmVarDecl 0x557fd9fd5dd8 <col:41, col:64> col:64 __attr 'pthread_barrierattr_t *'
| |-NoThrowAttr 0x557fd9fd5f38 <line:643:22>
| `-NonNullAttr 0x557fd9fd5f90 <col:63, col:77> 1
|-FunctionDecl 0x557fd9fd61b8 <line:644:1, line:647:82> line:644:12 pthread_barrierattr_getpshared 'int (const pthread_barrierattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x557fd9fd5fd8 <col:44, line:645:20> col:20 __attr 'const pthread_barrierattr_t *restrict'
| |-ParmVarDecl 0x557fd9fd6058 <line:646:9, col:25> col:25 __pshared 'int *restrict'
| |-NoThrowAttr 0x557fd9fd6268 <line:647:22>
| `-NonNullAttr 0x557fd9fd62c0 <col:63, col:80> 1 2
|-FunctionDecl 0x557fd9fd64c8 <line:648:1, line:650:79> line:648:12 pthread_barrierattr_setpshared 'int (pthread_barrierattr_t *, int)' extern
| |-ParmVarDecl 0x557fd9fd6308 <col:44, col:67> col:67 __attr 'pthread_barrierattr_t *'
| |-ParmVarDecl 0x557fd9fd6388 <line:649:9, col:13> col:13 __pshared 'int'
| |-NoThrowAttr 0x557fd9fd6578 <line:650:22>
| `-NonNullAttr 0x557fd9fd65d0 <col:63, col:77> 1
|-FunctionDecl 0x557fd9fd6918 <line:651:1, line:653:79> line:651:12 pthread_key_create 'int (pthread_key_t *, void (*)(void *))' extern
| |-ParmVarDecl 0x557fd9fd66b0 <col:32, col:47> col:47 __key 'pthread_key_t *'
| |-ParmVarDecl 0x557fd9fd67d0 <line:652:11, col:43> col:18 __destr_function 'void (*)(void *)'
| |-NoThrowAttr 0x557fd9fd69c8 <line:653:22>
| `-NonNullAttr 0x557fd9fd6a20 <col:63, col:77> 1
|-FunctionDecl 0x557fd9fd6b88 <line:654:1, col:92> col:12 pthread_key_delete 'int (pthread_key_t)' extern
| |-ParmVarDecl 0x557fd9fd6a68 <col:32, col:46> col:46 __key 'pthread_key_t':'unsigned int'
| `-NoThrowAttr 0x557fd9fd6c30 <col:69>
|-FunctionDecl 0x557fd9fd6da8 <line:655:1, col:95> col:14 pthread_getspecific 'void *(pthread_key_t)' extern
| |-ParmVarDecl 0x557fd9fd6c98 <col:35, col:49> col:49 __key 'pthread_key_t':'unsigned int'
| `-NoThrowAttr 0x557fd9fd6e50 <col:72>
|-FunctionDecl 0x557fd9fd7088 <line:656:1, line:657:67> line:656:12 pthread_setspecific 'int (pthread_key_t, const void *)' extern
| |-ParmVarDecl 0x557fd9fd6eb8 <col:33, col:47> col:47 __key 'pthread_key_t':'unsigned int'
| |-ParmVarDecl 0x557fd9fd6f68 <line:657:5, col:17> col:17 __pointer 'const void *'
| `-NoThrowAttr 0x557fd9fd7138 <col:44>
|-FunctionDecl 0x557fd9fd7358 <line:658:1, line:660:79> line:658:12 pthread_getcpuclockid 'int (pthread_t, __clockid_t *)' extern
| |-ParmVarDecl 0x557fd9fd71a0 <col:35, col:45> col:45 __thread_id 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x557fd9fd7218 <line:659:7, col:20> col:20 __clock_id '__clockid_t *'
| |-NoThrowAttr 0x557fd9fd7408 <line:660:22>
| `-NonNullAttr 0x557fd9fd7460 <col:63, col:77> 2
|-FunctionDecl 0x557fd9fd78a8 <line:661:1, line:663:70> line:661:12 pthread_atfork 'int (void (*)(void), void (*)(void), void (*)(void))' extern
| |-ParmVarDecl 0x557fd9fd7540 <col:28, col:51> col:35 __prepare 'void (*)(void)'
| |-ParmVarDecl 0x557fd9fd7650 <line:662:7, col:29> col:14 __parent 'void (*)(void)'
| |-ParmVarDecl 0x557fd9fd7760 <line:663:7, col:28> col:14 __child 'void (*)(void)'
| `-NoThrowAttr 0x557fd9fd7960 <col:47>
|-FunctionDecl 0x557fd9fd7af0 <line:665:1, col:20> col:8 used P0 'void *(void *)'
| `-ParmVarDecl 0x557fd9fd79d0 <col:11, col:17> col:17 arg 'void *'
|-FunctionDecl 0x557fd9fd7c48 <line:666:1, col:20> col:8 used P1 'void *(void *)'
| `-ParmVarDecl 0x557fd9fd7bb0 <col:11, col:17> col:17 arg 'void *'
|-FunctionDecl 0x557fd9fd7da0 <line:667:1, col:20> col:8 used P2 'void *(void *)'
| `-ParmVarDecl 0x557fd9fd7d08 <col:11, col:17> col:17 arg 'void *'
|-FunctionDecl 0x557fd9fd7e68 <line:668:1, col:12> col:6 fence 'void ()'
|-FunctionDecl 0x557fd9fd7f28 <line:669:1, col:12> col:6 isync 'void ()'
|-FunctionDecl 0x557fd9fd7fe8 <line:670:1, col:14> col:6 lwfence 'void ()'
|-VarDecl 0x557fd9fd80a0 <line:671:1, col:5> col:5 used __unbuffered_cnt 'int'
|-VarDecl 0x557fd9fd8120 prev 0x557fd9fd80a0 <line:672:1, col:24> col:5 used __unbuffered_cnt 'int' cinit
| `-IntegerLiteral 0x557fd9fd8188 <col:24> 'int' 0
|-VarDecl 0x557fd9fd81c0 <line:673:1, col:5> col:5 used __unbuffered_p0_EAX 'int'
|-VarDecl 0x557fd9fd8240 prev 0x557fd9fd81c0 <line:674:1, col:27> col:5 used __unbuffered_p0_EAX 'int' cinit
| `-IntegerLiteral 0x557fd9fd82a8 <col:27> 'int' 0
|-VarDecl 0x557fd9fd82e0 <line:675:1, col:5> col:5 used __unbuffered_p1_EAX 'int'
|-VarDecl 0x557fd9fd8360 prev 0x557fd9fd82e0 <line:676:1, col:27> col:5 used __unbuffered_p1_EAX 'int' cinit
| `-IntegerLiteral 0x557fd9fd83c8 <col:27> 'int' 0
|-VarDecl 0x557fd9fd83f8 <line:677:1, col:7> col:7 __unbuffered_p1_EAX$flush_delayed '_Bool'
|-VarDecl 0x557fd9fd8478 <line:678:1, col:5> col:5 __unbuffered_p1_EAX$mem_tmp 'int'
|-VarDecl 0x557fd9fd84f0 <line:679:1, col:7> col:7 __unbuffered_p1_EAX$r_buff0_thd0 '_Bool'
|-VarDecl 0x557fd9fd8568 <line:680:1, col:7> col:7 __unbuffered_p1_EAX$r_buff0_thd1 '_Bool'
|-VarDecl 0x557fd9fd85e0 <line:681:1, col:7> col:7 __unbuffered_p1_EAX$r_buff0_thd2 '_Bool'
|-VarDecl 0x557fd9fd8658 <line:682:1, col:7> col:7 __unbuffered_p1_EAX$r_buff0_thd3 '_Bool'
|-VarDecl 0x557fd9fd86d0 <line:683:1, col:7> col:7 __unbuffered_p1_EAX$r_buff1_thd0 '_Bool'
|-VarDecl 0x557fd9fd8748 <line:684:1, col:7> col:7 __unbuffered_p1_EAX$r_buff1_thd1 '_Bool'
|-VarDecl 0x557fd9fd87c0 <line:685:1, col:7> col:7 __unbuffered_p1_EAX$r_buff1_thd2 '_Bool'
|-VarDecl 0x557fd9fd8838 <line:686:1, col:7> col:7 __unbuffered_p1_EAX$r_buff1_thd3 '_Bool'
|-VarDecl 0x557fd9fd88b0 <line:687:1, col:7> col:7 used __unbuffered_p1_EAX$read_delayed '_Bool'
|-VarDecl 0x557fd9fd8930 <line:688:1, col:6> col:6 used __unbuffered_p1_EAX$read_delayed_var 'int *'
|-VarDecl 0x557fd9fd89b0 <line:689:1, col:5> col:5 __unbuffered_p1_EAX$w_buff0 'int'
|-VarDecl 0x557fd9fd8a28 <line:690:1, col:7> col:7 __unbuffered_p1_EAX$w_buff0_used '_Bool'
|-VarDecl 0x557fd9fd8b00 <line:691:1, col:5> col:5 __unbuffered_p1_EAX$w_buff1 'int'
|-VarDecl 0x557fd9fd8b78 <line:692:1, col:7> col:7 __unbuffered_p1_EAX$w_buff1_used '_Bool'
|-VarDecl 0x557fd9fd8bf8 <line:693:1, col:5> col:5 used __unbuffered_p2_EAX 'int'
|-VarDecl 0x557fd9fd8c78 prev 0x557fd9fd8bf8 <line:694:1, col:27> col:5 used __unbuffered_p2_EAX 'int' cinit
| `-IntegerLiteral 0x557fd9fd8ce0 <col:27> 'int' 0
|-VarDecl 0x557fd9fd8d10 <line:695:1, col:7> col:7 used main$tmp_guard0 '_Bool'
|-VarDecl 0x557fd9fd8d88 <line:696:1, col:7> col:7 used main$tmp_guard1 '_Bool'
|-VarDecl 0x557fd9fd8e08 <line:697:1, col:5> col:5 used x 'int'
|-VarDecl 0x557fd9fd8e88 prev 0x557fd9fd8e08 <line:698:1, col:9> col:5 used x 'int' cinit
| `-IntegerLiteral 0x557fd9fd8ef0 <col:9> 'int' 0
|-VarDecl 0x557fd9fd8f20 <line:699:1, col:7> col:7 used x$flush_delayed '_Bool'
|-VarDecl 0x557fd9fd8fa0 <line:700:1, col:5> col:5 used x$mem_tmp 'int'
|-VarDecl 0x557fd9fd9018 <line:701:1, col:7> col:7 used x$r_buff0_thd0 '_Bool'
|-VarDecl 0x557fd9fd9090 <line:702:1, col:7> col:7 used x$r_buff0_thd1 '_Bool'
|-VarDecl 0x557fd9fd9108 <line:703:1, col:7> col:7 used x$r_buff0_thd2 '_Bool'
|-VarDecl 0x557fd9fd9180 <line:704:1, col:7> col:7 used x$r_buff0_thd3 '_Bool'
|-VarDecl 0x557fd9fd91f8 <line:705:1, col:7> col:7 used x$r_buff1_thd0 '_Bool'
|-VarDecl 0x557fd9fd9270 <line:706:1, col:7> col:7 used x$r_buff1_thd1 '_Bool'
|-VarDecl 0x557fd9fd92e8 <line:707:1, col:7> col:7 used x$r_buff1_thd2 '_Bool'
|-VarDecl 0x557fd9fd9360 <line:708:1, col:7> col:7 used x$r_buff1_thd3 '_Bool'
|-VarDecl 0x557fd9fd93d8 <line:709:1, col:7> col:7 x$read_delayed '_Bool'
|-VarDecl 0x557fd9fd9458 <line:710:1, col:6> col:6 x$read_delayed_var 'int *'
|-VarDecl 0x557fd9fd94d8 <line:711:1, col:5> col:5 used x$w_buff0 'int'
|-VarDecl 0x557fd9fd9550 <line:712:1, col:7> col:7 used x$w_buff0_used '_Bool'
|-VarDecl 0x557fd9fd95d0 <line:713:1, col:5> col:5 used x$w_buff1 'int'
|-VarDecl 0x557fd9fd9648 <line:714:1, col:7> col:7 used x$w_buff1_used '_Bool'
|-VarDecl 0x557fd9fd96c8 <line:715:1, col:5> col:5 used y 'int'
|-VarDecl 0x557fd9fd9748 prev 0x557fd9fd96c8 <line:716:1, col:9> col:5 used y 'int' cinit
| `-IntegerLiteral 0x557fd9fd97b0 <col:9> 'int' 0
|-VarDecl 0x557fd9fd97e0 <line:717:1, col:7> col:7 used weak$$choice0 '_Bool'
|-VarDecl 0x557fd9fd9858 <line:718:1, col:7> col:7 used weak$$choice1 '_Bool'
|-VarDecl 0x557fd9fd98d0 <line:719:1, col:7> col:7 used weak$$choice2 '_Bool'
|-FunctionDecl 0x557fd9fd99e8 prev 0x557fd9fd7af0 <line:720:1, line:748:1> line:720:8 used P0 'void *(void *)'
| |-ParmVarDecl 0x557fd9fd9950 <col:11, col:17> col:17 arg 'void *'
| `-CompoundStmt 0x557fd9fdc238 <line:721:1, line:748:1>
|   |-CallExpr 0x557fd9fdab20 <line:722:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x557fd9fd9ae0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x557fd9fd9a90 <col:3> 'void ()' Function 0x557fd9f7ee40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x557fd9fdab98 <line:723:3, col:25> 'int' '='
|   | |-DeclRefExpr 0x557fd9fdab40 <col:3> 'int' lvalue Var 0x557fd9fd8240 '__unbuffered_p0_EAX' 'int'
|   | `-ImplicitCastExpr 0x557fd9fdab80 <col:25> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x557fd9fdab60 <col:25> 'int' lvalue Var 0x557fd9fd9748 'y' 'int'
|   |-CallExpr 0x557fd9fdabf0 <line:724:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x557fd9fdabd8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x557fd9fdabb8 <col:3> 'void ()' Function 0x557fd9f7ef00 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x557fd9fdac48 <line:725:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x557fd9fdac30 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x557fd9fdac10 <col:3> 'void ()' Function 0x557fd9f7ee40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x557fd9fdacc0 <line:726:3, col:15> 'int' '='
|   | |-DeclRefExpr 0x557fd9fdac68 <col:3> 'int' lvalue Var 0x557fd9fd95d0 'x$w_buff1' 'int'
|   | `-ImplicitCastExpr 0x557fd9fdaca8 <col:15> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x557fd9fdac88 <col:15> 'int' lvalue Var 0x557fd9fd94d8 'x$w_buff0' 'int'
|   |-BinaryOperator 0x557fd9fdad20 <line:727:3, col:15> 'int' '='
|   | |-DeclRefExpr 0x557fd9fdace0 <col:3> 'int' lvalue Var 0x557fd9fd94d8 'x$w_buff0' 'int'
|   | `-IntegerLiteral 0x557fd9fdad00 <col:15> 'int' 1
|   |-BinaryOperator 0x557fd9fdad98 <line:728:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x557fd9fdad40 <col:3> '_Bool' lvalue Var 0x557fd9fd9648 'x$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x557fd9fdad80 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x557fd9fdad60 <col:20> '_Bool' lvalue Var 0x557fd9fd9550 'x$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x557fd9fdae30 <line:729:3, col:27> '_Bool' '='
|   | |-DeclRefExpr 0x557fd9fdadb8 <col:3> '_Bool' lvalue Var 0x557fd9fd9550 'x$w_buff0_used' '_Bool'
|   | `-CStyleCastExpr 0x557fd9fdae08 <col:20, col:27> '_Bool' <IntegralToBoolean>
|   |   `-IntegerLiteral 0x557fd9fdadd8 <col:27> 'int' 1
|   |-CallExpr 0x557fd9fdafb8 <line:730:3, col:56> 'void'
|   | |-ImplicitCastExpr 0x557fd9fdafa0 <col:3> 'void (*)(int)' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x557fd9fdae50 <col:3> 'void (int)' Function 0x557fd9f7ebc8 '__VERIFIER_assert' 'void (int)'
|   | `-UnaryOperator 0x557fd9fdaf50 <col:21, col:55> 'int' prefix '!' cannot overflow
|   |   `-ParenExpr 0x557fd9fdaf30 <col:22, col:55> 'int'
|   |     `-BinaryOperator 0x557fd9fdaf10 <col:23, col:41> 'int' '&&'
|   |       |-ImplicitCastExpr 0x557fd9fdaec8 <col:23> 'int' <IntegralCast>
|   |       | `-ImplicitCastExpr 0x557fd9fdaeb0 <col:23> '_Bool' <LValueToRValue>
|   |       |   `-DeclRefExpr 0x557fd9fdae70 <col:23> '_Bool' lvalue Var 0x557fd9fd9648 'x$w_buff1_used' '_Bool'
|   |       `-ImplicitCastExpr 0x557fd9fdaef8 <col:41> 'int' <IntegralCast>
|   |         `-ImplicitCastExpr 0x557fd9fdaee0 <col:41> '_Bool' <LValueToRValue>
|   |           `-DeclRefExpr 0x557fd9fdae90 <col:41> '_Bool' lvalue Var 0x557fd9fd9550 'x$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x557fd9fdb038 <line:731:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x557fd9fdafe0 <col:3> '_Bool' lvalue Var 0x557fd9fd91f8 'x$r_buff1_thd0' '_Bool'
|   | `-ImplicitCastExpr 0x557fd9fdb020 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x557fd9fdb000 <col:20> '_Bool' lvalue Var 0x557fd9fd9018 'x$r_buff0_thd0' '_Bool'
|   |-BinaryOperator 0x557fd9fdb0b0 <line:732:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x557fd9fdb058 <col:3> '_Bool' lvalue Var 0x557fd9fd9270 'x$r_buff1_thd1' '_Bool'
|   | `-ImplicitCastExpr 0x557fd9fdb098 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x557fd9fdb078 <col:20> '_Bool' lvalue Var 0x557fd9fd9090 'x$r_buff0_thd1' '_Bool'
|   |-BinaryOperator 0x557fd9fdb128 <line:733:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x557fd9fdb0d0 <col:3> '_Bool' lvalue Var 0x557fd9fd92e8 'x$r_buff1_thd2' '_Bool'
|   | `-ImplicitCastExpr 0x557fd9fdb110 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x557fd9fdb0f0 <col:20> '_Bool' lvalue Var 0x557fd9fd9108 'x$r_buff0_thd2' '_Bool'
|   |-BinaryOperator 0x557fd9fdb1a0 <line:734:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x557fd9fdb148 <col:3> '_Bool' lvalue Var 0x557fd9fd9360 'x$r_buff1_thd3' '_Bool'
|   | `-ImplicitCastExpr 0x557fd9fdb188 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x557fd9fdb168 <col:20> '_Bool' lvalue Var 0x557fd9fd9180 'x$r_buff0_thd3' '_Bool'
|   |-BinaryOperator 0x557fd9fdb238 <line:735:3, col:27> '_Bool' '='
|   | |-DeclRefExpr 0x557fd9fdb1c0 <col:3> '_Bool' lvalue Var 0x557fd9fd9090 'x$r_buff0_thd1' '_Bool'
|   | `-CStyleCastExpr 0x557fd9fdb210 <col:20, col:27> '_Bool' <IntegralToBoolean>
|   |   `-IntegerLiteral 0x557fd9fdb1e0 <col:27> 'int' 1
|   |-CallExpr 0x557fd9fdb290 <line:736:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x557fd9fdb278 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x557fd9fdb258 <col:3> 'void ()' Function 0x557fd9f7ef00 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x557fd9fdb2e8 <line:737:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x557fd9fdb2d0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x557fd9fdb2b0 <col:3> 'void ()' Function 0x557fd9f7ee40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x557fd9fdb5d0 <line:738:3, col:103> 'int' '='
|   | |-DeclRefExpr 0x557fd9fdb308 <col:3> 'int' lvalue Var 0x557fd9fd8e88 'x' 'int'
|   | `-ConditionalOperator 0x557fd9fdb5a0 <col:7, col:103> 'int'
|   |   |-BinaryOperator 0x557fd9fdb3c8 <col:7, col:25> 'int' '&&'
|   |   | |-ImplicitCastExpr 0x557fd9fdb380 <col:7> 'int' <IntegralCast>
|   |   | | `-ImplicitCastExpr 0x557fd9fdb368 <col:7> '_Bool' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x557fd9fdb328 <col:7> '_Bool' lvalue Var 0x557fd9fd9550 'x$w_buff0_used' '_Bool'
|   |   | `-ImplicitCastExpr 0x557fd9fdb3b0 <col:25> 'int' <IntegralCast>
|   |   |   `-ImplicitCastExpr 0x557fd9fdb398 <col:25> '_Bool' <LValueToRValue>
|   |   |     `-DeclRefExpr 0x557fd9fdb348 <col:25> '_Bool' lvalue Var 0x557fd9fd9090 'x$r_buff0_thd1' '_Bool'
|   |   |-ImplicitCastExpr 0x557fd9fdb588 <col:42> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x557fd9fdb3e8 <col:42> 'int' lvalue Var 0x557fd9fd94d8 'x$w_buff0' 'int'
|   |   `-ParenExpr 0x557fd9fdb568 <col:54, col:103> 'int'
|   |     `-ConditionalOperator 0x557fd9fdb538 <col:55, col:102> 'int'
|   |       |-BinaryOperator 0x557fd9fdb4a8 <col:55, col:73> 'int' '&&'
|   |       | |-ImplicitCastExpr 0x557fd9fdb460 <col:55> 'int' <IntegralCast>
|   |       | | `-ImplicitCastExpr 0x557fd9fdb448 <col:55> '_Bool' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x557fd9fdb408 <col:55> '_Bool' lvalue Var 0x557fd9fd9648 'x$w_buff1_used' '_Bool'
|   |       | `-ImplicitCastExpr 0x557fd9fdb490 <col:73> 'int' <IntegralCast>
|   |       |   `-ImplicitCastExpr 0x557fd9fdb478 <col:73> '_Bool' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x557fd9fdb428 <col:73> '_Bool' lvalue Var 0x557fd9fd9270 'x$r_buff1_thd1' '_Bool'
|   |       |-ImplicitCastExpr 0x557fd9fdb508 <col:90> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x557fd9fdb4c8 <col:90> 'int' lvalue Var 0x557fd9fd95d0 'x$w_buff1' 'int'
|   |       `-ImplicitCastExpr 0x557fd9fdb520 <col:102> 'int' <LValueToRValue>
|   |         `-DeclRefExpr 0x557fd9fdb4e8 <col:102> 'int' lvalue Var 0x557fd9fd8e88 'x' 'int'
|   |-BinaryOperator 0x557fd9fdb7d8 <line:739:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x557fd9fdb5f0 <col:3> '_Bool' lvalue Var 0x557fd9fd9550 'x$w_buff0_used' '_Bool'
|   | `-ImplicitCastExpr 0x557fd9fdb7c0 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x557fd9fdb790 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x557fd9fdb6b0 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x557fd9fdb668 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x557fd9fdb650 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x557fd9fdb610 <col:20> '_Bool' lvalue Var 0x557fd9fd9550 'x$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x557fd9fdb698 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x557fd9fdb680 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x557fd9fdb630 <col:38> '_Bool' lvalue Var 0x557fd9fd9090 'x$r_buff0_thd1' '_Bool'
|   |     |-ImplicitCastExpr 0x557fd9fdb748 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x557fd9fdb700 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x557fd9fdb6d0 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x557fd9fdb778 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x557fd9fdb760 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x557fd9fdb728 <col:66> '_Bool' lvalue Var 0x557fd9fd9550 'x$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x557fd9fdbac0 <line:740:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x557fd9fdb7f8 <col:3> '_Bool' lvalue Var 0x557fd9fd9648 'x$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x557fd9fdbaa8 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x557fd9fdba78 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x557fd9fdb998 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x557fd9fdb8b8 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x557fd9fdb870 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x557fd9fdb858 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x557fd9fdb818 <col:20> '_Bool' lvalue Var 0x557fd9fd9550 'x$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x557fd9fdb8a0 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x557fd9fdb888 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x557fd9fdb838 <col:38> '_Bool' lvalue Var 0x557fd9fd9090 'x$r_buff0_thd1' '_Bool'
|   |     | `-BinaryOperator 0x557fd9fdb978 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x557fd9fdb930 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x557fd9fdb918 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x557fd9fdb8d8 <col:56> '_Bool' lvalue Var 0x557fd9fd9648 'x$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x557fd9fdb960 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x557fd9fdb948 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x557fd9fdb8f8 <col:74> '_Bool' lvalue Var 0x557fd9fd9270 'x$r_buff1_thd1' '_Bool'
|   |     |-ImplicitCastExpr 0x557fd9fdba30 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x557fd9fdb9e8 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x557fd9fdb9b8 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x557fd9fdba60 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x557fd9fdba48 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x557fd9fdba10 <col:102> '_Bool' lvalue Var 0x557fd9fd9648 'x$w_buff1_used' '_Bool'
|   |-BinaryOperator 0x557fd9fdbcd8 <line:741:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x557fd9fdbae0 <col:3> '_Bool' lvalue Var 0x557fd9fd9090 'x$r_buff0_thd1' '_Bool'
|   | `-ImplicitCastExpr 0x557fd9fdbcc0 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x557fd9fdbc90 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x557fd9fdbbb0 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x557fd9fdbb68 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x557fd9fdbb50 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x557fd9fdbb00 <col:20> '_Bool' lvalue Var 0x557fd9fd9550 'x$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x557fd9fdbb98 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x557fd9fdbb80 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x557fd9fdbb30 <col:38> '_Bool' lvalue Var 0x557fd9fd9090 'x$r_buff0_thd1' '_Bool'
|   |     |-ImplicitCastExpr 0x557fd9fdbc48 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x557fd9fdbc00 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x557fd9fdbbd0 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x557fd9fdbc78 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x557fd9fdbc60 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x557fd9fdbc28 <col:66> '_Bool' lvalue Var 0x557fd9fd9090 'x$r_buff0_thd1' '_Bool'
|   |-BinaryOperator 0x557fd9fdbfc0 <line:742:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x557fd9fdbcf8 <col:3> '_Bool' lvalue Var 0x557fd9fd9270 'x$r_buff1_thd1' '_Bool'
|   | `-ImplicitCastExpr 0x557fd9fdbfa8 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x557fd9fdbf78 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x557fd9fdbe98 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x557fd9fdbdb8 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x557fd9fdbd70 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x557fd9fdbd58 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x557fd9fdbd18 <col:20> '_Bool' lvalue Var 0x557fd9fd9550 'x$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x557fd9fdbda0 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x557fd9fdbd88 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x557fd9fdbd38 <col:38> '_Bool' lvalue Var 0x557fd9fd9090 'x$r_buff0_thd1' '_Bool'
|   |     | `-BinaryOperator 0x557fd9fdbe78 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x557fd9fdbe30 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x557fd9fdbe18 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x557fd9fdbdd8 <col:56> '_Bool' lvalue Var 0x557fd9fd9648 'x$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x557fd9fdbe60 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x557fd9fdbe48 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x557fd9fdbdf8 <col:74> '_Bool' lvalue Var 0x557fd9fd9270 'x$r_buff1_thd1' '_Bool'
|   |     |-ImplicitCastExpr 0x557fd9fdbf30 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x557fd9fdbee8 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x557fd9fdbeb8 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x557fd9fdbf60 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x557fd9fdbf48 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x557fd9fdbf10 <col:102> '_Bool' lvalue Var 0x557fd9fd9270 'x$r_buff1_thd1' '_Bool'
|   |-CallExpr 0x557fd9fdc018 <line:743:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x557fd9fdc000 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x557fd9fdbfe0 <col:3> 'void ()' Function 0x557fd9f7ef00 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x557fd9fdc070 <line:744:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x557fd9fdc058 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x557fd9fdc038 <col:3> 'void ()' Function 0x557fd9f7ee40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x557fd9fdc128 <line:745:3, col:41> 'int' '='
|   | |-DeclRefExpr 0x557fd9fdc090 <col:3> 'int' lvalue Var 0x557fd9fd8120 '__unbuffered_cnt' 'int'
|   | `-BinaryOperator 0x557fd9fdc108 <col:22, col:41> 'int' '+'
|   |   |-ImplicitCastExpr 0x557fd9fdc0f0 <col:22> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x557fd9fdc0b0 <col:22> 'int' lvalue Var 0x557fd9fd8120 '__unbuffered_cnt' 'int'
|   |   `-IntegerLiteral 0x557fd9fdc0d0 <col:41> 'int' 1
|   |-CallExpr 0x557fd9fdc180 <line:746:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x557fd9fdc168 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x557fd9fdc148 <col:3> 'void ()' Function 0x557fd9f7ef00 '__VERIFIER_atomic_end' 'void ()'
|   `-ReturnStmt 0x557fd9fdc228 <line:747:3, col:36>
|     `-CallExpr 0x557fd9fdc208 <col:10, col:36> 'void *'
|       `-ImplicitCastExpr 0x557fd9fdc1f0 <col:10> 'void *(*)(void)' <FunctionToPointerDecay>
|         `-DeclRefExpr 0x557fd9fdc1a0 <col:10> 'void *(void)' Function 0x557fd9f7e958 '__VERIFIER_nondet_pointer' 'void *(void)'
|-FunctionDecl 0x557fd9fdc3c8 prev 0x557fd9fd7c48 <line:749:1, line:784:1> line:749:8 used P1 'void *(void *)'
| |-ParmVarDecl 0x557fd9fdc330 <col:11, col:17> col:17 arg 'void *'
| `-CompoundStmt 0x557fd9fe19b0 <line:750:1, line:784:1>
|   |-CallExpr 0x557fd9fdc4a8 <line:751:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x557fd9fdc490 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x557fd9fdc470 <col:3> 'void ()' Function 0x557fd9f7ee40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x557fd9fdc558 <line:752:3, col:45> '_Bool' '='
|   | |-DeclRefExpr 0x557fd9fdc4c8 <col:3> '_Bool' lvalue Var 0x557fd9fd97e0 'weak$$choice0' '_Bool'
|   | `-ImplicitCastExpr 0x557fd9fdc540 <col:19, col:45> '_Bool' <PointerToBoolean>
|   |   `-CallExpr 0x557fd9fdc520 <col:19, col:45> 'void *'
|   |     `-ImplicitCastExpr 0x557fd9fdc508 <col:19> 'void *(*)(void)' <FunctionToPointerDecay>
|   |       `-DeclRefExpr 0x557fd9fdc4e8 <col:19> 'void *(void)' Function 0x557fd9f7e958 '__VERIFIER_nondet_pointer' 'void *(void)'
|   |-BinaryOperator 0x557fd9fdc608 <line:753:3, col:45> '_Bool' '='
|   | |-DeclRefExpr 0x557fd9fdc578 <col:3> '_Bool' lvalue Var 0x557fd9fd98d0 'weak$$choice2' '_Bool'
|   | `-ImplicitCastExpr 0x557fd9fdc5f0 <col:19, col:45> '_Bool' <PointerToBoolean>
|   |   `-CallExpr 0x557fd9fdc5d0 <col:19, col:45> 'void *'
|   |     `-ImplicitCastExpr 0x557fd9fdc5b8 <col:19> 'void *(*)(void)' <FunctionToPointerDecay>
|   |       `-DeclRefExpr 0x557fd9fdc598 <col:19> 'void *(void)' Function 0x557fd9f7e958 '__VERIFIER_nondet_pointer' 'void *(void)'
|   |-BinaryOperator 0x557fd9fdc680 <line:754:3, col:21> '_Bool' '='
|   | |-DeclRefExpr 0x557fd9fdc628 <col:3> '_Bool' lvalue Var 0x557fd9fd8f20 'x$flush_delayed' '_Bool'
|   | `-ImplicitCastExpr 0x557fd9fdc668 <col:21> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x557fd9fdc648 <col:21> '_Bool' lvalue Var 0x557fd9fd98d0 'weak$$choice2' '_Bool'
|   |-BinaryOperator 0x557fd9fdc6f8 <line:755:3, col:15> 'int' '='
|   | |-DeclRefExpr 0x557fd9fdc6a0 <col:3> 'int' lvalue Var 0x557fd9fd8fa0 'x$mem_tmp' 'int'
|   | `-ImplicitCastExpr 0x557fd9fdc6e0 <col:15> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x557fd9fdc6c0 <col:15> 'int' lvalue Var 0x557fd9fd8e88 'x' 'int'
|   |-BinaryOperator 0x557fd9fdc7a8 <line:756:3, col:45> '_Bool' '='
|   | |-DeclRefExpr 0x557fd9fdc718 <col:3> '_Bool' lvalue Var 0x557fd9fd9858 'weak$$choice1' '_Bool'
|   | `-ImplicitCastExpr 0x557fd9fdc790 <col:19, col:45> '_Bool' <PointerToBoolean>
|   |   `-CallExpr 0x557fd9fdc770 <col:19, col:45> 'void *'
|   |     `-ImplicitCastExpr 0x557fd9fdc758 <col:19> 'void *(*)(void)' <FunctionToPointerDecay>
|   |       `-DeclRefExpr 0x557fd9fdc738 <col:19> 'void *(void)' Function 0x557fd9f7e958 '__VERIFIER_nondet_pointer' 'void *(void)'
|   |-BinaryOperator 0x557fd9fdd1f8 <line:757:3, col:363> 'int' '='
|   | |-DeclRefExpr 0x557fd9fdc7c8 <col:3> 'int' lvalue Var 0x557fd9fd8e88 'x' 'int'
|   | `-ConditionalOperator 0x557fd9fdd1c8 <col:7, col:363> 'int'
|   |   |-UnaryOperator 0x557fd9fdc820 <col:7, col:8> 'int' prefix '!' cannot overflow
|   |   | `-ImplicitCastExpr 0x557fd9fdc808 <col:8> '_Bool' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x557fd9fdc7e8 <col:8> '_Bool' lvalue Var 0x557fd9fd9550 'x$w_buff0_used' '_Bool'
|   |   |-ImplicitCastExpr 0x557fd9fdd1b0 <col:25> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x557fd9fdc838 <col:25> 'int' lvalue Var 0x557fd9fd8e88 'x' 'int'
|   |   `-ParenExpr 0x557fd9fdd190 <col:29, col:363> 'int'
|   |     `-ConditionalOperator 0x557fd9fdd160 <col:30, col:362> 'int'
|   |       |-BinaryOperator 0x557fd9fdc8f8 <col:30, col:48> 'int' '&&'
|   |       | |-ImplicitCastExpr 0x557fd9fdc8b0 <col:30> 'int' <IntegralCast>
|   |       | | `-ImplicitCastExpr 0x557fd9fdc898 <col:30> '_Bool' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x557fd9fdc858 <col:30> '_Bool' lvalue Var 0x557fd9fd9550 'x$w_buff0_used' '_Bool'
|   |       | `-ImplicitCastExpr 0x557fd9fdc8e0 <col:48> 'int' <IntegralCast>
|   |       |   `-ImplicitCastExpr 0x557fd9fdc8c8 <col:48> '_Bool' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x557fd9fdc878 <col:48> '_Bool' lvalue Var 0x557fd9fd9108 'x$r_buff0_thd2' '_Bool'
|   |       |-ImplicitCastExpr 0x557fd9fdd148 <col:65> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x557fd9fdc918 <col:65> 'int' lvalue Var 0x557fd9fd94d8 'x$w_buff0' 'int'
|   |       `-ParenExpr 0x557fd9fdd128 <col:77, col:362> 'int'
|   |         `-ConditionalOperator 0x557fd9fdd0f8 <col:78, col:361> 'int'
|   |           |-BinaryOperator 0x557fd9fdcab8 <col:78, col:134> 'int' '&&'
|   |           | |-BinaryOperator 0x557fd9fdca48 <col:78, col:115> 'int' '&&'
|   |           | | |-BinaryOperator 0x557fd9fdc9d8 <col:78, col:97> 'int' '&&'
|   |           | | | |-ImplicitCastExpr 0x557fd9fdc9c0 <col:78> 'int' <IntegralCast>
|   |           | | | | `-ImplicitCastExpr 0x557fd9fdc9a8 <col:78> '_Bool' <LValueToRValue>
|   |           | | | |   `-DeclRefExpr 0x557fd9fdc938 <col:78> '_Bool' lvalue Var 0x557fd9fd9550 'x$w_buff0_used' '_Bool'
|   |           | | | `-UnaryOperator 0x557fd9fdc990 <col:96, col:97> 'int' prefix '!' cannot overflow
|   |           | | |   `-ImplicitCastExpr 0x557fd9fdc978 <col:97> '_Bool' <LValueToRValue>
|   |           | | |     `-DeclRefExpr 0x557fd9fdc958 <col:97> '_Bool' lvalue Var 0x557fd9fd92e8 'x$r_buff1_thd2' '_Bool'
|   |           | | `-ImplicitCastExpr 0x557fd9fdca30 <col:115> 'int' <IntegralCast>
|   |           | |   `-ImplicitCastExpr 0x557fd9fdca18 <col:115> '_Bool' <LValueToRValue>
|   |           | |     `-DeclRefExpr 0x557fd9fdc9f8 <col:115> '_Bool' lvalue Var 0x557fd9fd9648 'x$w_buff1_used' '_Bool'
|   |           | `-UnaryOperator 0x557fd9fdcaa0 <col:133, col:134> 'int' prefix '!' cannot overflow
|   |           |   `-ImplicitCastExpr 0x557fd9fdca88 <col:134> '_Bool' <LValueToRValue>
|   |           |     `-DeclRefExpr 0x557fd9fdca68 <col:134> '_Bool' lvalue Var 0x557fd9fd9108 'x$r_buff0_thd2' '_Bool'
|   |           |-ParenExpr 0x557fd9fdccc8 <col:151, col:211> 'int'
|   |           | `-ConditionalOperator 0x557fd9fdcc98 <col:152, col:210> 'int'
|   |           |   |-ImplicitCastExpr 0x557fd9fdcc68 <col:152> 'int' <IntegralCast>
|   |           |   | `-ImplicitCastExpr 0x557fd9fdcc50 <col:152> '_Bool' <LValueToRValue>
|   |           |   |   `-DeclRefExpr 0x557fd9fdcad8 <col:152> '_Bool' lvalue Var 0x557fd9fd97e0 'weak$$choice0' '_Bool'
|   |           |   |-ImplicitCastExpr 0x557fd9fdcc80 <col:168> 'int' <LValueToRValue>
|   |           |   | `-DeclRefExpr 0x557fd9fdcaf8 <col:168> 'int' lvalue Var 0x557fd9fd8e88 'x' 'int'
|   |           |   `-ParenExpr 0x557fd9fdcc30 <col:172, col:210> 'int'
|   |           |     `-ConditionalOperator 0x557fd9fdcc00 <col:173, col:201> 'int'
|   |           |       |-ImplicitCastExpr 0x557fd9fdcbb8 <col:173> 'int' <IntegralCast>
|   |           |       | `-ImplicitCastExpr 0x557fd9fdcba0 <col:173> '_Bool' <LValueToRValue>
|   |           |       |   `-DeclRefExpr 0x557fd9fdcb40 <col:173> '_Bool' lvalue Var 0x557fd9fd9858 'weak$$choice1' '_Bool'
|   |           |       |-ImplicitCastExpr 0x557fd9fdcbd0 <col:189> 'int' <LValueToRValue>
|   |           |       | `-DeclRefExpr 0x557fd9fdcb60 <col:189> 'int' lvalue Var 0x557fd9fd94d8 'x$w_buff0' 'int'
|   |           |       `-ImplicitCastExpr 0x557fd9fdcbe8 <col:201> 'int' <LValueToRValue>
|   |           |         `-DeclRefExpr 0x557fd9fdcb80 <col:201> 'int' lvalue Var 0x557fd9fd95d0 'x$w_buff1' 'int'
|   |           `-ParenExpr 0x557fd9fdd0d8 <col:215, col:361> 'int'
|   |             `-ConditionalOperator 0x557fd9fdd0a8 <col:216, col:360> 'int'
|   |               |-BinaryOperator 0x557fd9fdce68 <col:216, col:271> 'int' '&&'
|   |               | |-BinaryOperator 0x557fd9fdcdf8 <col:216, col:252> 'int' '&&'
|   |               | | |-BinaryOperator 0x557fd9fdcd88 <col:216, col:234> 'int' '&&'
|   |               | | | |-ImplicitCastExpr 0x557fd9fdcd40 <col:216> 'int' <IntegralCast>
|   |               | | | | `-ImplicitCastExpr 0x557fd9fdcd28 <col:216> '_Bool' <LValueToRValue>
|   |               | | | |   `-DeclRefExpr 0x557fd9fdcce8 <col:216> '_Bool' lvalue Var 0x557fd9fd9550 'x$w_buff0_used' '_Bool'
|   |               | | | `-ImplicitCastExpr 0x557fd9fdcd70 <col:234> 'int' <IntegralCast>
|   |               | | |   `-ImplicitCastExpr 0x557fd9fdcd58 <col:234> '_Bool' <LValueToRValue>
|   |               | | |     `-DeclRefExpr 0x557fd9fdcd08 <col:234> '_Bool' lvalue Var 0x557fd9fd92e8 'x$r_buff1_thd2' '_Bool'
|   |               | | `-ImplicitCastExpr 0x557fd9fdcde0 <col:252> 'int' <IntegralCast>
|   |               | |   `-ImplicitCastExpr 0x557fd9fdcdc8 <col:252> '_Bool' <LValueToRValue>
|   |               | |     `-DeclRefExpr 0x557fd9fdcda8 <col:252> '_Bool' lvalue Var 0x557fd9fd9648 'x$w_buff1_used' '_Bool'
|   |               | `-UnaryOperator 0x557fd9fdce50 <col:270, col:271> 'int' prefix '!' cannot overflow
|   |               |   `-ImplicitCastExpr 0x557fd9fdce38 <col:271> '_Bool' <LValueToRValue>
|   |               |     `-DeclRefExpr 0x557fd9fdce18 <col:271> '_Bool' lvalue Var 0x557fd9fd9108 'x$r_buff0_thd2' '_Bool'
|   |               |-ParenExpr 0x557fd9fdcf78 <col:288, col:326> 'int'
|   |               | `-ConditionalOperator 0x557fd9fdcf48 <col:289, col:317> 'int'
|   |               |   |-ImplicitCastExpr 0x557fd9fdcf00 <col:289> 'int' <IntegralCast>
|   |               |   | `-ImplicitCastExpr 0x557fd9fdcee8 <col:289> '_Bool' <LValueToRValue>
|   |               |   |   `-DeclRefExpr 0x557fd9fdce88 <col:289> '_Bool' lvalue Var 0x557fd9fd97e0 'weak$$choice0' '_Bool'
|   |               |   |-ImplicitCastExpr 0x557fd9fdcf18 <col:305> 'int' <LValueToRValue>
|   |               |   | `-DeclRefExpr 0x557fd9fdcea8 <col:305> 'int' lvalue Var 0x557fd9fd95d0 'x$w_buff1' 'int'
|   |               |   `-ImplicitCastExpr 0x557fd9fdcf30 <col:317> 'int' <LValueToRValue>
|   |               |     `-DeclRefExpr 0x557fd9fdcec8 <col:317> 'int' lvalue Var 0x557fd9fd94d8 'x$w_buff0' 'int'
|   |               `-ParenExpr 0x557fd9fdd088 <col:330, col:360> 'int'
|   |                 `-ConditionalOperator 0x557fd9fdd058 <col:331, col:359> 'int'
|   |                   |-ImplicitCastExpr 0x557fd9fdd010 <col:331> 'int' <IntegralCast>
|   |                   | `-ImplicitCastExpr 0x557fd9fdcff8 <col:331> '_Bool' <LValueToRValue>
|   |                   |   `-DeclRefExpr 0x557fd9fdcf98 <col:331> '_Bool' lvalue Var 0x557fd9fd97e0 'weak$$choice0' '_Bool'
|   |                   |-ImplicitCastExpr 0x557fd9fdd028 <col:347> 'int' <LValueToRValue>
|   |                   | `-DeclRefExpr 0x557fd9fdcfb8 <col:347> 'int' lvalue Var 0x557fd9fd94d8 'x$w_buff0' 'int'
|   |                   `-ImplicitCastExpr 0x557fd9fdd040 <col:359> 'int' <LValueToRValue>
|   |                     `-DeclRefExpr 0x557fd9fdcfd8 <col:359> 'int' lvalue Var 0x557fd9fd8e88 'x' 'int'
|   |-BinaryOperator 0x557fd9fdd998 <line:758:3, col:305> 'int' '='
|   | |-DeclRefExpr 0x557fd9fdd218 <col:3> 'int' lvalue Var 0x557fd9fd94d8 'x$w_buff0' 'int'
|   | `-ConditionalOperator 0x557fd9fdd968 <col:15, col:305> 'int'
|   |   |-ImplicitCastExpr 0x557fd9fdd938 <col:15> 'int' <IntegralCast>
|   |   | `-ImplicitCastExpr 0x557fd9fdd920 <col:15> '_Bool' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x557fd9fdd238 <col:15> '_Bool' lvalue Var 0x557fd9fd98d0 'weak$$choice2' '_Bool'
|   |   |-ImplicitCastExpr 0x557fd9fdd950 <col:31> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x557fd9fdd258 <col:31> 'int' lvalue Var 0x557fd9fd94d8 'x$w_buff0' 'int'
|   |   `-ParenExpr 0x557fd9fdd900 <col:43, col:305> 'int'
|   |     `-ConditionalOperator 0x557fd9fdd8d0 <col:44, col:304> 'int'
|   |       |-UnaryOperator 0x557fd9fdd2b0 <col:44, col:45> 'int' prefix '!' cannot overflow
|   |       | `-ImplicitCastExpr 0x557fd9fdd298 <col:45> '_Bool' <LValueToRValue>
|   |       |   `-DeclRefExpr 0x557fd9fdd278 <col:45> '_Bool' lvalue Var 0x557fd9fd9550 'x$w_buff0_used' '_Bool'
|   |       |-ImplicitCastExpr 0x557fd9fdd8b8 <col:62> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x557fd9fdd2c8 <col:62> 'int' lvalue Var 0x557fd9fd94d8 'x$w_buff0' 'int'
|   |       `-ParenExpr 0x557fd9fdd898 <col:74, col:304> 'int'
|   |         `-ConditionalOperator 0x557fd9fdd868 <col:75, col:303> 'int'
|   |           |-BinaryOperator 0x557fd9fdd388 <col:75, col:93> 'int' '&&'
|   |           | |-ImplicitCastExpr 0x557fd9fdd340 <col:75> 'int' <IntegralCast>
|   |           | | `-ImplicitCastExpr 0x557fd9fdd328 <col:75> '_Bool' <LValueToRValue>
|   |           | |   `-DeclRefExpr 0x557fd9fdd2e8 <col:75> '_Bool' lvalue Var 0x557fd9fd9550 'x$w_buff0_used' '_Bool'
|   |           | `-ImplicitCastExpr 0x557fd9fdd370 <col:93> 'int' <IntegralCast>
|   |           |   `-ImplicitCastExpr 0x557fd9fdd358 <col:93> '_Bool' <LValueToRValue>
|   |           |     `-DeclRefExpr 0x557fd9fdd308 <col:93> '_Bool' lvalue Var 0x557fd9fd9108 'x$r_buff0_thd2' '_Bool'
|   |           |-ImplicitCastExpr 0x557fd9fdd850 <col:110> 'int' <LValueToRValue>
|   |           | `-DeclRefExpr 0x557fd9fdd3a8 <col:110> 'int' lvalue Var 0x557fd9fd94d8 'x$w_buff0' 'int'
|   |           `-ParenExpr 0x557fd9fdd830 <col:122, col:303> 'int'
|   |             `-ConditionalOperator 0x557fd9fdd800 <col:123, col:302> 'int'
|   |               |-BinaryOperator 0x557fd9fdd548 <col:123, col:179> 'int' '&&'
|   |               | |-BinaryOperator 0x557fd9fdd4d8 <col:123, col:160> 'int' '&&'
|   |               | | |-BinaryOperator 0x557fd9fdd468 <col:123, col:142> 'int' '&&'
|   |               | | | |-ImplicitCastExpr 0x557fd9fdd450 <col:123> 'int' <IntegralCast>
|   |               | | | | `-ImplicitCastExpr 0x557fd9fdd438 <col:123> '_Bool' <LValueToRValue>
|   |               | | | |   `-DeclRefExpr 0x557fd9fdd3c8 <col:123> '_Bool' lvalue Var 0x557fd9fd9550 'x$w_buff0_used' '_Bool'
|   |               | | | `-UnaryOperator 0x557fd9fdd420 <col:141, col:142> 'int' prefix '!' cannot overflow
|   |               | | |   `-ImplicitCastExpr 0x557fd9fdd408 <col:142> '_Bool' <LValueToRValue>
|   |               | | |     `-DeclRefExpr 0x557fd9fdd3e8 <col:142> '_Bool' lvalue Var 0x557fd9fd92e8 'x$r_buff1_thd2' '_Bool'
|   |               | | `-ImplicitCastExpr 0x557fd9fdd4c0 <col:160> 'int' <IntegralCast>
|   |               | |   `-ImplicitCastExpr 0x557fd9fdd4a8 <col:160> '_Bool' <LValueToRValue>
|   |               | |     `-DeclRefExpr 0x557fd9fdd488 <col:160> '_Bool' lvalue Var 0x557fd9fd9648 'x$w_buff1_used' '_Bool'
|   |               | `-UnaryOperator 0x557fd9fdd530 <col:178, col:179> 'int' prefix '!' cannot overflow
|   |               |   `-ImplicitCastExpr 0x557fd9fdd518 <col:179> '_Bool' <LValueToRValue>
|   |               |     `-DeclRefExpr 0x557fd9fdd4f8 <col:179> '_Bool' lvalue Var 0x557fd9fd9108 'x$r_buff0_thd2' '_Bool'
|   |               |-ImplicitCastExpr 0x557fd9fdd7e8 <col:196> 'int' <LValueToRValue>
|   |               | `-DeclRefExpr 0x557fd9fdd568 <col:196> 'int' lvalue Var 0x557fd9fd94d8 'x$w_buff0' 'int'
|   |               `-ParenExpr 0x557fd9fdd7c8 <col:208, col:302> 'int'
|   |                 `-ConditionalOperator 0x557fd9fdd798 <col:209, col:293> 'int'
|   |                   |-BinaryOperator 0x557fd9fdd708 <col:209, col:264> 'int' '&&'
|   |                   | |-BinaryOperator 0x557fd9fdd698 <col:209, col:245> 'int' '&&'
|   |                   | | |-BinaryOperator 0x557fd9fdd628 <col:209, col:227> 'int' '&&'
|   |                   | | | |-ImplicitCastExpr 0x557fd9fdd5e0 <col:209> 'int' <IntegralCast>
|   |                   | | | | `-ImplicitCastExpr 0x557fd9fdd5c8 <col:209> '_Bool' <LValueToRValue>
|   |                   | | | |   `-DeclRefExpr 0x557fd9fdd588 <col:209> '_Bool' lvalue Var 0x557fd9fd9550 'x$w_buff0_used' '_Bool'
|   |                   | | | `-ImplicitCastExpr 0x557fd9fdd610 <col:227> 'int' <IntegralCast>
|   |                   | | |   `-ImplicitCastExpr 0x557fd9fdd5f8 <col:227> '_Bool' <LValueToRValue>
|   |                   | | |     `-DeclRefExpr 0x557fd9fdd5a8 <col:227> '_Bool' lvalue Var 0x557fd9fd92e8 'x$r_buff1_thd2' '_Bool'
|   |                   | | `-ImplicitCastExpr 0x557fd9fdd680 <col:245> 'int' <IntegralCast>
|   |                   | |   `-ImplicitCastExpr 0x557fd9fdd668 <col:245> '_Bool' <LValueToRValue>
|   |                   | |     `-DeclRefExpr 0x557fd9fdd648 <col:245> '_Bool' lvalue Var 0x557fd9fd9648 'x$w_buff1_used' '_Bool'
|   |                   | `-UnaryOperator 0x557fd9fdd6f0 <col:263, col:264> 'int' prefix '!' cannot overflow
|   |                   |   `-ImplicitCastExpr 0x557fd9fdd6d8 <col:264> '_Bool' <LValueToRValue>
|   |                   |     `-DeclRefExpr 0x557fd9fdd6b8 <col:264> '_Bool' lvalue Var 0x557fd9fd9108 'x$r_buff0_thd2' '_Bool'
|   |                   |-ImplicitCastExpr 0x557fd9fdd768 <col:281> 'int' <LValueToRValue>
|   |                   | `-DeclRefExpr 0x557fd9fdd728 <col:281> 'int' lvalue Var 0x557fd9fd94d8 'x$w_buff0' 'int'
|   |                   `-ImplicitCastExpr 0x557fd9fdd780 <col:293> 'int' <LValueToRValue>
|   |                     `-DeclRefExpr 0x557fd9fdd748 <col:293> 'int' lvalue Var 0x557fd9fd94d8 'x$w_buff0' 'int'
|   |-BinaryOperator 0x557fd9fde160 <line:759:3, col:305> 'int' '='
|   | |-DeclRefExpr 0x557fd9fdd9b8 <col:3> 'int' lvalue Var 0x557fd9fd95d0 'x$w_buff1' 'int'
|   | `-ConditionalOperator 0x557fd9fde130 <col:15, col:305> 'int'
|   |   |-ImplicitCastExpr 0x557fd9fde100 <col:15> 'int' <IntegralCast>
|   |   | `-ImplicitCastExpr 0x557fd9fde0e8 <col:15> '_Bool' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x557fd9fdd9d8 <col:15> '_Bool' lvalue Var 0x557fd9fd98d0 'weak$$choice2' '_Bool'
|   |   |-ImplicitCastExpr 0x557fd9fde118 <col:31> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x557fd9fdd9f8 <col:31> 'int' lvalue Var 0x557fd9fd95d0 'x$w_buff1' 'int'
|   |   `-ParenExpr 0x557fd9fde0c8 <col:43, col:305> 'int'
|   |     `-ConditionalOperator 0x557fd9fde098 <col:44, col:304> 'int'
|   |       |-UnaryOperator 0x557fd9fdda50 <col:44, col:45> 'int' prefix '!' cannot overflow
|   |       | `-ImplicitCastExpr 0x557fd9fdda38 <col:45> '_Bool' <LValueToRValue>
|   |       |   `-DeclRefExpr 0x557fd9fdda18 <col:45> '_Bool' lvalue Var 0x557fd9fd9550 'x$w_buff0_used' '_Bool'
|   |       |-ImplicitCastExpr 0x557fd9fde080 <col:62> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x557fd9fdda68 <col:62> 'int' lvalue Var 0x557fd9fd95d0 'x$w_buff1' 'int'
|   |       `-ParenExpr 0x557fd9fde060 <col:74, col:304> 'int'
|   |         `-ConditionalOperator 0x557fd9fde030 <col:75, col:303> 'int'
|   |           |-BinaryOperator 0x557fd9fddb50 <col:75, col:93> 'int' '&&'
|   |           | |-ImplicitCastExpr 0x557fd9fddae0 <col:75> 'int' <IntegralCast>
|   |           | | `-ImplicitCastExpr 0x557fd9fddac8 <col:75> '_Bool' <LValueToRValue>
|   |           | |   `-DeclRefExpr 0x557fd9fdda88 <col:75> '_Bool' lvalue Var 0x557fd9fd9550 'x$w_buff0_used' '_Bool'
|   |           | `-ImplicitCastExpr 0x557fd9fddb10 <col:93> 'int' <IntegralCast>
|   |           |   `-ImplicitCastExpr 0x557fd9fddaf8 <col:93> '_Bool' <LValueToRValue>
|   |           |     `-DeclRefExpr 0x557fd9fddaa8 <col:93> '_Bool' lvalue Var 0x557fd9fd9108 'x$r_buff0_thd2' '_Bool'
|   |           |-ImplicitCastExpr 0x557fd9fde018 <col:110> 'int' <LValueToRValue>
|   |           | `-DeclRefExpr 0x557fd9fddb70 <col:110> 'int' lvalue Var 0x557fd9fd95d0 'x$w_buff1' 'int'
|   |           `-ParenExpr 0x557fd9fddff8 <col:122, col:303> 'int'
|   |             `-ConditionalOperator 0x557fd9fddfc8 <col:123, col:302> 'int'
|   |               |-BinaryOperator 0x557fd9fddd10 <col:123, col:179> 'int' '&&'
|   |               | |-BinaryOperator 0x557fd9fddca0 <col:123, col:160> 'int' '&&'
|   |               | | |-BinaryOperator 0x557fd9fddc30 <col:123, col:142> 'int' '&&'
|   |               | | | |-ImplicitCastExpr 0x557fd9fddc18 <col:123> 'int' <IntegralCast>
|   |               | | | | `-ImplicitCastExpr 0x557fd9fddc00 <col:123> '_Bool' <LValueToRValue>
|   |               | | | |   `-DeclRefExpr 0x557fd9fddb90 <col:123> '_Bool' lvalue Var 0x557fd9fd9550 'x$w_buff0_used' '_Bool'
|   |               | | | `-UnaryOperator 0x557fd9fddbe8 <col:141, col:142> 'int' prefix '!' cannot overflow
|   |               | | |   `-ImplicitCastExpr 0x557fd9fddbd0 <col:142> '_Bool' <LValueToRValue>
|   |               | | |     `-DeclRefExpr 0x557fd9fddbb0 <col:142> '_Bool' lvalue Var 0x557fd9fd92e8 'x$r_buff1_thd2' '_Bool'
|   |               | | `-ImplicitCastExpr 0x557fd9fddc88 <col:160> 'int' <IntegralCast>
|   |               | |   `-ImplicitCastExpr 0x557fd9fddc70 <col:160> '_Bool' <LValueToRValue>
|   |               | |     `-DeclRefExpr 0x557fd9fddc50 <col:160> '_Bool' lvalue Var 0x557fd9fd9648 'x$w_buff1_used' '_Bool'
|   |               | `-UnaryOperator 0x557fd9fddcf8 <col:178, col:179> 'int' prefix '!' cannot overflow
|   |               |   `-ImplicitCastExpr 0x557fd9fddce0 <col:179> '_Bool' <LValueToRValue>
|   |               |     `-DeclRefExpr 0x557fd9fddcc0 <col:179> '_Bool' lvalue Var 0x557fd9fd9108 'x$r_buff0_thd2' '_Bool'
|   |               |-ImplicitCastExpr 0x557fd9fddfb0 <col:196> 'int' <LValueToRValue>
|   |               | `-DeclRefExpr 0x557fd9fddd30 <col:196> 'int' lvalue Var 0x557fd9fd95d0 'x$w_buff1' 'int'
|   |               `-ParenExpr 0x557fd9fddf90 <col:208, col:302> 'int'
|   |                 `-ConditionalOperator 0x557fd9fddf60 <col:209, col:293> 'int'
|   |                   |-BinaryOperator 0x557fd9fdded0 <col:209, col:264> 'int' '&&'
|   |                   | |-BinaryOperator 0x557fd9fdde60 <col:209, col:245> 'int' '&&'
|   |                   | | |-BinaryOperator 0x557fd9fdddf0 <col:209, col:227> 'int' '&&'
|   |                   | | | |-ImplicitCastExpr 0x557fd9fddda8 <col:209> 'int' <IntegralCast>
|   |                   | | | | `-ImplicitCastExpr 0x557fd9fddd90 <col:209> '_Bool' <LValueToRValue>
|   |                   | | | |   `-DeclRefExpr 0x557fd9fddd50 <col:209> '_Bool' lvalue Var 0x557fd9fd9550 'x$w_buff0_used' '_Bool'
|   |                   | | | `-ImplicitCastExpr 0x557fd9fdddd8 <col:227> 'int' <IntegralCast>
|   |                   | | |   `-ImplicitCastExpr 0x557fd9fdddc0 <col:227> '_Bool' <LValueToRValue>
|   |                   | | |     `-DeclRefExpr 0x557fd9fddd70 <col:227> '_Bool' lvalue Var 0x557fd9fd92e8 'x$r_buff1_thd2' '_Bool'
|   |                   | | `-ImplicitCastExpr 0x557fd9fdde48 <col:245> 'int' <IntegralCast>
|   |                   | |   `-ImplicitCastExpr 0x557fd9fdde30 <col:245> '_Bool' <LValueToRValue>
|   |                   | |     `-DeclRefExpr 0x557fd9fdde10 <col:245> '_Bool' lvalue Var 0x557fd9fd9648 'x$w_buff1_used' '_Bool'
|   |                   | `-UnaryOperator 0x557fd9fddeb8 <col:263, col:264> 'int' prefix '!' cannot overflow
|   |                   |   `-ImplicitCastExpr 0x557fd9fddea0 <col:264> '_Bool' <LValueToRValue>
|   |                   |     `-DeclRefExpr 0x557fd9fdde80 <col:264> '_Bool' lvalue Var 0x557fd9fd9108 'x$r_buff0_thd2' '_Bool'
|   |                   |-ImplicitCastExpr 0x557fd9fddf30 <col:281> 'int' <LValueToRValue>
|   |                   | `-DeclRefExpr 0x557fd9fddef0 <col:281> 'int' lvalue Var 0x557fd9fd95d0 'x$w_buff1' 'int'
|   |                   `-ImplicitCastExpr 0x557fd9fddf48 <col:293> 'int' <LValueToRValue>
|   |                     `-DeclRefExpr 0x557fd9fddf10 <col:293> 'int' lvalue Var 0x557fd9fd95d0 'x$w_buff1' 'int'
|   |-BinaryOperator 0x557fd9fdea38 <line:760:3, col:349> '_Bool' '='
|   | |-DeclRefExpr 0x557fd9fde180 <col:3> '_Bool' lvalue Var 0x557fd9fd9550 'x$w_buff0_used' '_Bool'
|   | `-ImplicitCastExpr 0x557fd9fdea20 <col:20, col:349> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x557fd9fde9f0 <col:20, col:349> 'int'
|   |     |-ImplicitCastExpr 0x557fd9fde9a8 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x557fd9fde990 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x557fd9fde1a0 <col:20> '_Bool' lvalue Var 0x557fd9fd98d0 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x557fd9fde9d8 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x557fd9fde9c0 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x557fd9fde1c0 <col:36> '_Bool' lvalue Var 0x557fd9fd9550 'x$w_buff0_used' '_Bool'
|   |     `-ParenExpr 0x557fd9fde970 <col:53, col:349> 'int'
|   |       `-ConditionalOperator 0x557fd9fde940 <col:54, col:348> 'int'
|   |         |-UnaryOperator 0x557fd9fde218 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | `-ImplicitCastExpr 0x557fd9fde200 <col:55> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x557fd9fde1e0 <col:55> '_Bool' lvalue Var 0x557fd9fd9550 'x$w_buff0_used' '_Bool'
|   |         |-ImplicitCastExpr 0x557fd9fde928 <col:72> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x557fd9fde910 <col:72> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x557fd9fde230 <col:72> '_Bool' lvalue Var 0x557fd9fd9550 'x$w_buff0_used' '_Bool'
|   |         `-ParenExpr 0x557fd9fde8f0 <col:89, col:348> 'int'
|   |           `-ConditionalOperator 0x557fd9fde8c0 <col:90, col:347> 'int'
|   |             |-BinaryOperator 0x557fd9fde2f0 <col:90, col:108> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x557fd9fde2a8 <col:90> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x557fd9fde290 <col:90> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x557fd9fde250 <col:90> '_Bool' lvalue Var 0x557fd9fd9550 'x$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x557fd9fde2d8 <col:108> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x557fd9fde2c0 <col:108> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x557fd9fde270 <col:108> '_Bool' lvalue Var 0x557fd9fd9108 'x$r_buff0_thd2' '_Bool'
|   |             |-ImplicitCastExpr 0x557fd9fde8a8 <col:125, col:132> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x557fd9fde340 <col:125, col:132> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x557fd9fde310 <col:132> 'int' 0
|   |             `-ParenExpr 0x557fd9fde888 <col:136, col:347> 'int'
|   |               `-ConditionalOperator 0x557fd9fde858 <col:137, col:346> 'int'
|   |                 |-BinaryOperator 0x557fd9fde4e8 <col:137, col:193> 'int' '&&'
|   |                 | |-BinaryOperator 0x557fd9fde478 <col:137, col:174> 'int' '&&'
|   |                 | | |-BinaryOperator 0x557fd9fde408 <col:137, col:156> 'int' '&&'
|   |                 | | | |-ImplicitCastExpr 0x557fd9fde3f0 <col:137> 'int' <IntegralCast>
|   |                 | | | | `-ImplicitCastExpr 0x557fd9fde3d8 <col:137> '_Bool' <LValueToRValue>
|   |                 | | | |   `-DeclRefExpr 0x557fd9fde368 <col:137> '_Bool' lvalue Var 0x557fd9fd9550 'x$w_buff0_used' '_Bool'
|   |                 | | | `-UnaryOperator 0x557fd9fde3c0 <col:155, col:156> 'int' prefix '!' cannot overflow
|   |                 | | |   `-ImplicitCastExpr 0x557fd9fde3a8 <col:156> '_Bool' <LValueToRValue>
|   |                 | | |     `-DeclRefExpr 0x557fd9fde388 <col:156> '_Bool' lvalue Var 0x557fd9fd92e8 'x$r_buff1_thd2' '_Bool'
|   |                 | | `-ImplicitCastExpr 0x557fd9fde460 <col:174> 'int' <IntegralCast>
|   |                 | |   `-ImplicitCastExpr 0x557fd9fde448 <col:174> '_Bool' <LValueToRValue>
|   |                 | |     `-DeclRefExpr 0x557fd9fde428 <col:174> '_Bool' lvalue Var 0x557fd9fd9648 'x$w_buff1_used' '_Bool'
|   |                 | `-UnaryOperator 0x557fd9fde4d0 <col:192, col:193> 'int' prefix '!' cannot overflow
|   |                 |   `-ImplicitCastExpr 0x557fd9fde4b8 <col:193> '_Bool' <LValueToRValue>
|   |                 |     `-DeclRefExpr 0x557fd9fde498 <col:193> '_Bool' lvalue Var 0x557fd9fd9108 'x$r_buff0_thd2' '_Bool'
|   |                 |-BinaryOperator 0x557fd9fde5a8 <col:210, col:228> 'int' '||'
|   |                 | |-ImplicitCastExpr 0x557fd9fde590 <col:210> 'int' <IntegralCast>
|   |                 | | `-ImplicitCastExpr 0x557fd9fde578 <col:210> '_Bool' <LValueToRValue>
|   |                 | |   `-DeclRefExpr 0x557fd9fde508 <col:210> '_Bool' lvalue Var 0x557fd9fd97e0 'weak$$choice0' '_Bool'
|   |                 | `-UnaryOperator 0x557fd9fde560 <col:227, col:228> 'int' prefix '!' cannot overflow
|   |                 |   `-ImplicitCastExpr 0x557fd9fde548 <col:228> '_Bool' <LValueToRValue>
|   |                 |     `-DeclRefExpr 0x557fd9fde528 <col:228> '_Bool' lvalue Var 0x557fd9fd9858 'weak$$choice1' '_Bool'
|   |                 `-ParenExpr 0x557fd9fde838 <col:244, col:346> 'int'
|   |                   `-ConditionalOperator 0x557fd9fde808 <col:245, col:333> 'int'
|   |                     |-BinaryOperator 0x557fd9fde748 <col:245, col:300> 'int' '&&'
|   |                     | |-BinaryOperator 0x557fd9fde6d8 <col:245, col:281> 'int' '&&'
|   |                     | | |-BinaryOperator 0x557fd9fde668 <col:245, col:263> 'int' '&&'
|   |                     | | | |-ImplicitCastExpr 0x557fd9fde620 <col:245> 'int' <IntegralCast>
|   |                     | | | | `-ImplicitCastExpr 0x557fd9fde608 <col:245> '_Bool' <LValueToRValue>
|   |                     | | | |   `-DeclRefExpr 0x557fd9fde5c8 <col:245> '_Bool' lvalue Var 0x557fd9fd9550 'x$w_buff0_used' '_Bool'
|   |                     | | | `-ImplicitCastExpr 0x557fd9fde650 <col:263> 'int' <IntegralCast>
|   |                     | | |   `-ImplicitCastExpr 0x557fd9fde638 <col:263> '_Bool' <LValueToRValue>
|   |                     | | |     `-DeclRefExpr 0x557fd9fde5e8 <col:263> '_Bool' lvalue Var 0x557fd9fd92e8 'x$r_buff1_thd2' '_Bool'
|   |                     | | `-ImplicitCastExpr 0x557fd9fde6c0 <col:281> 'int' <IntegralCast>
|   |                     | |   `-ImplicitCastExpr 0x557fd9fde6a8 <col:281> '_Bool' <LValueToRValue>
|   |                     | |     `-DeclRefExpr 0x557fd9fde688 <col:281> '_Bool' lvalue Var 0x557fd9fd9648 'x$w_buff1_used' '_Bool'
|   |                     | `-UnaryOperator 0x557fd9fde730 <col:299, col:300> 'int' prefix '!' cannot overflow
|   |                     |   `-ImplicitCastExpr 0x557fd9fde718 <col:300> '_Bool' <LValueToRValue>
|   |                     |     `-DeclRefExpr 0x557fd9fde6f8 <col:300> '_Bool' lvalue Var 0x557fd9fd9108 'x$r_buff0_thd2' '_Bool'
|   |                     |-ImplicitCastExpr 0x557fd9fde7c0 <col:317> 'int' <IntegralCast>
|   |                     | `-ImplicitCastExpr 0x557fd9fde7a8 <col:317> '_Bool' <LValueToRValue>
|   |                     |   `-DeclRefExpr 0x557fd9fde768 <col:317> '_Bool' lvalue Var 0x557fd9fd97e0 'weak$$choice0' '_Bool'
|   |                     `-ImplicitCastExpr 0x557fd9fde7f0 <col:333> 'int' <IntegralCast>
|   |                       `-ImplicitCastExpr 0x557fd9fde7d8 <col:333> '_Bool' <LValueToRValue>
|   |                         `-DeclRefExpr 0x557fd9fde788 <col:333> '_Bool' lvalue Var 0x557fd9fd97e0 'weak$$choice0' '_Bool'
|   |-BinaryOperator 0x557fd9fdf2f8 <line:761:3, col:321> '_Bool' '='
|   | |-DeclRefExpr 0x557fd9fdea58 <col:3> '_Bool' lvalue Var 0x557fd9fd9648 'x$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x557fd9fdf2e0 <col:20, col:321> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x557fd9fdf2b0 <col:20, col:321> 'int'
|   |     |-ImplicitCastExpr 0x557fd9fdf268 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x557fd9fdf250 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x557fd9fdea78 <col:20> '_Bool' lvalue Var 0x557fd9fd98d0 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x557fd9fdf298 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x557fd9fdf280 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x557fd9fdea98 <col:36> '_Bool' lvalue Var 0x557fd9fd9648 'x$w_buff1_used' '_Bool'
|   |     `-ParenExpr 0x557fd9fdf230 <col:53, col:321> 'int'
|   |       `-ConditionalOperator 0x557fd9fdf200 <col:54, col:320> 'int'
|   |         |-UnaryOperator 0x557fd9fdeaf0 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | `-ImplicitCastExpr 0x557fd9fdead8 <col:55> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x557fd9fdeab8 <col:55> '_Bool' lvalue Var 0x557fd9fd9550 'x$w_buff0_used' '_Bool'
|   |         |-ImplicitCastExpr 0x557fd9fdf1e8 <col:72> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x557fd9fdf1d0 <col:72> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x557fd9fdeb08 <col:72> '_Bool' lvalue Var 0x557fd9fd9648 'x$w_buff1_used' '_Bool'
|   |         `-ParenExpr 0x557fd9fdf1b0 <col:89, col:320> 'int'
|   |           `-ConditionalOperator 0x557fd9fdf180 <col:90, col:319> 'int'
|   |             |-BinaryOperator 0x557fd9fdebe0 <col:90, col:108> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x557fd9fdeb98 <col:90> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x557fd9fdeb80 <col:90> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x557fd9fdeb28 <col:90> '_Bool' lvalue Var 0x557fd9fd9550 'x$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x557fd9fdebc8 <col:108> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x557fd9fdebb0 <col:108> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x557fd9fdeb60 <col:108> '_Bool' lvalue Var 0x557fd9fd9108 'x$r_buff0_thd2' '_Bool'
|   |             |-ImplicitCastExpr 0x557fd9fdf168 <col:125, col:132> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x557fd9fdec30 <col:125, col:132> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x557fd9fdec00 <col:132> 'int' 0
|   |             `-ParenExpr 0x557fd9fdf148 <col:136, col:319> 'int'
|   |               `-ConditionalOperator 0x557fd9fdf118 <col:137, col:318> 'int'
|   |                 |-BinaryOperator 0x557fd9fdedd8 <col:137, col:193> 'int' '&&'
|   |                 | |-BinaryOperator 0x557fd9fded68 <col:137, col:174> 'int' '&&'
|   |                 | | |-BinaryOperator 0x557fd9fdecf8 <col:137, col:156> 'int' '&&'
|   |                 | | | |-ImplicitCastExpr 0x557fd9fdece0 <col:137> 'int' <IntegralCast>
|   |                 | | | | `-ImplicitCastExpr 0x557fd9fdecc8 <col:137> '_Bool' <LValueToRValue>
|   |                 | | | |   `-DeclRefExpr 0x557fd9fdec58 <col:137> '_Bool' lvalue Var 0x557fd9fd9550 'x$w_buff0_used' '_Bool'
|   |                 | | | `-UnaryOperator 0x557fd9fdecb0 <col:155, col:156> 'int' prefix '!' cannot overflow
|   |                 | | |   `-ImplicitCastExpr 0x557fd9fdec98 <col:156> '_Bool' <LValueToRValue>
|   |                 | | |     `-DeclRefExpr 0x557fd9fdec78 <col:156> '_Bool' lvalue Var 0x557fd9fd92e8 'x$r_buff1_thd2' '_Bool'
|   |                 | | `-ImplicitCastExpr 0x557fd9fded50 <col:174> 'int' <IntegralCast>
|   |                 | |   `-ImplicitCastExpr 0x557fd9fded38 <col:174> '_Bool' <LValueToRValue>
|   |                 | |     `-DeclRefExpr 0x557fd9fded18 <col:174> '_Bool' lvalue Var 0x557fd9fd9648 'x$w_buff1_used' '_Bool'
|   |                 | `-UnaryOperator 0x557fd9fdedc0 <col:192, col:193> 'int' prefix '!' cannot overflow
|   |                 |   `-ImplicitCastExpr 0x557fd9fdeda8 <col:193> '_Bool' <LValueToRValue>
|   |                 |     `-DeclRefExpr 0x557fd9fded88 <col:193> '_Bool' lvalue Var 0x557fd9fd9108 'x$r_buff0_thd2' '_Bool'
|   |                 |-ImplicitCastExpr 0x557fd9fdf100 <col:210> 'int' <IntegralCast>
|   |                 | `-ImplicitCastExpr 0x557fd9fdf0e8 <col:210> '_Bool' <LValueToRValue>
|   |                 |   `-DeclRefExpr 0x557fd9fdedf8 <col:210> '_Bool' lvalue Var 0x557fd9fd97e0 'weak$$choice0' '_Bool'
|   |                 `-ParenExpr 0x557fd9fdf0c8 <col:226, col:318> 'int'
|   |                   `-ConditionalOperator 0x557fd9fdf098 <col:227, col:317> 'int'
|   |                     |-BinaryOperator 0x557fd9fdef98 <col:227, col:282> 'int' '&&'
|   |                     | |-BinaryOperator 0x557fd9fdef28 <col:227, col:263> 'int' '&&'
|   |                     | | |-BinaryOperator 0x557fd9fdeeb8 <col:227, col:245> 'int' '&&'
|   |                     | | | |-ImplicitCastExpr 0x557fd9fdee70 <col:227> 'int' <IntegralCast>
|   |                     | | | | `-ImplicitCastExpr 0x557fd9fdee58 <col:227> '_Bool' <LValueToRValue>
|   |                     | | | |   `-DeclRefExpr 0x557fd9fdee18 <col:227> '_Bool' lvalue Var 0x557fd9fd9550 'x$w_buff0_used' '_Bool'
|   |                     | | | `-ImplicitCastExpr 0x557fd9fdeea0 <col:245> 'int' <IntegralCast>
|   |                     | | |   `-ImplicitCastExpr 0x557fd9fdee88 <col:245> '_Bool' <LValueToRValue>
|   |                     | | |     `-DeclRefExpr 0x557fd9fdee38 <col:245> '_Bool' lvalue Var 0x557fd9fd92e8 'x$r_buff1_thd2' '_Bool'
|   |                     | | `-ImplicitCastExpr 0x557fd9fdef10 <col:263> 'int' <IntegralCast>
|   |                     | |   `-ImplicitCastExpr 0x557fd9fdeef8 <col:263> '_Bool' <LValueToRValue>
|   |                     | |     `-DeclRefExpr 0x557fd9fdeed8 <col:263> '_Bool' lvalue Var 0x557fd9fd9648 'x$w_buff1_used' '_Bool'
|   |                     | `-UnaryOperator 0x557fd9fdef80 <col:281, col:282> 'int' prefix '!' cannot overflow
|   |                     |   `-ImplicitCastExpr 0x557fd9fdef68 <col:282> '_Bool' <LValueToRValue>
|   |                     |     `-DeclRefExpr 0x557fd9fdef48 <col:282> '_Bool' lvalue Var 0x557fd9fd9108 'x$r_buff0_thd2' '_Bool'
|   |                     |-ImplicitCastExpr 0x557fd9fdf068 <col:299, col:306> 'int' <IntegralCast>
|   |                     | `-CStyleCastExpr 0x557fd9fdefe8 <col:299, col:306> '_Bool' <IntegralToBoolean>
|   |                     |   `-IntegerLiteral 0x557fd9fdefb8 <col:306> 'int' 0
|   |                     `-ImplicitCastExpr 0x557fd9fdf080 <col:310, col:317> 'int' <IntegralCast>
|   |                       `-CStyleCastExpr 0x557fd9fdf040 <col:310, col:317> '_Bool' <IntegralToBoolean>
|   |                         `-IntegerLiteral 0x557fd9fdf010 <col:317> 'int' 0
|   |-BinaryOperator 0x557fd9fdfbb8 <line:762:3, col:322> '_Bool' '='
|   | |-DeclRefExpr 0x557fd9fdf318 <col:3> '_Bool' lvalue Var 0x557fd9fd9108 'x$r_buff0_thd2' '_Bool'
|   | `-ImplicitCastExpr 0x557fd9fdfba0 <col:20, col:322> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x557fd9fdfb70 <col:20, col:322> 'int'
|   |     |-ImplicitCastExpr 0x557fd9fdfb10 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x557fd9fdfaf8 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x557fd9fdf338 <col:20> '_Bool' lvalue Var 0x557fd9fd98d0 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x557fd9fdfb40 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x557fd9fdfb28 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x557fd9fdf358 <col:36> '_Bool' lvalue Var 0x557fd9fd9108 'x$r_buff0_thd2' '_Bool'
|   |     `-ParenExpr 0x557fd9fdfad8 <col:53, col:322> 'int'
|   |       `-ConditionalOperator 0x557fd9fdfaa8 <col:54, col:321> 'int'
|   |         |-UnaryOperator 0x557fd9fdf3b0 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | `-ImplicitCastExpr 0x557fd9fdf398 <col:55> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x557fd9fdf378 <col:55> '_Bool' lvalue Var 0x557fd9fd9550 'x$w_buff0_used' '_Bool'
|   |         |-ImplicitCastExpr 0x557fd9fdfa90 <col:72> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x557fd9fdfa78 <col:72> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x557fd9fdf3c8 <col:72> '_Bool' lvalue Var 0x557fd9fd9108 'x$r_buff0_thd2' '_Bool'
|   |         `-ParenExpr 0x557fd9fdfa58 <col:89, col:321> 'int'
|   |           `-ConditionalOperator 0x557fd9fdfa28 <col:90, col:320> 'int'
|   |             |-BinaryOperator 0x557fd9fdf488 <col:90, col:108> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x557fd9fdf440 <col:90> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x557fd9fdf428 <col:90> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x557fd9fdf3e8 <col:90> '_Bool' lvalue Var 0x557fd9fd9550 'x$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x557fd9fdf470 <col:108> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x557fd9fdf458 <col:108> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x557fd9fdf408 <col:108> '_Bool' lvalue Var 0x557fd9fd9108 'x$r_buff0_thd2' '_Bool'
|   |             |-ImplicitCastExpr 0x557fd9fdfa10 <col:125, col:132> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x557fd9fdf4d8 <col:125, col:132> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x557fd9fdf4a8 <col:132> 'int' 0
|   |             `-ParenExpr 0x557fd9fdf9f0 <col:136, col:320> 'int'
|   |               `-ConditionalOperator 0x557fd9fdf9c0 <col:137, col:319> 'int'
|   |                 |-BinaryOperator 0x557fd9fdf680 <col:137, col:193> 'int' '&&'
|   |                 | |-BinaryOperator 0x557fd9fdf610 <col:137, col:174> 'int' '&&'
|   |                 | | |-BinaryOperator 0x557fd9fdf5a0 <col:137, col:156> 'int' '&&'
|   |                 | | | |-ImplicitCastExpr 0x557fd9fdf588 <col:137> 'int' <IntegralCast>
|   |                 | | | | `-ImplicitCastExpr 0x557fd9fdf570 <col:137> '_Bool' <LValueToRValue>
|   |                 | | | |   `-DeclRefExpr 0x557fd9fdf500 <col:137> '_Bool' lvalue Var 0x557fd9fd9550 'x$w_buff0_used' '_Bool'
|   |                 | | | `-UnaryOperator 0x557fd9fdf558 <col:155, col:156> 'int' prefix '!' cannot overflow
|   |                 | | |   `-ImplicitCastExpr 0x557fd9fdf540 <col:156> '_Bool' <LValueToRValue>
|   |                 | | |     `-DeclRefExpr 0x557fd9fdf520 <col:156> '_Bool' lvalue Var 0x557fd9fd92e8 'x$r_buff1_thd2' '_Bool'
|   |                 | | `-ImplicitCastExpr 0x557fd9fdf5f8 <col:174> 'int' <IntegralCast>
|   |                 | |   `-ImplicitCastExpr 0x557fd9fdf5e0 <col:174> '_Bool' <LValueToRValue>
|   |                 | |     `-DeclRefExpr 0x557fd9fdf5c0 <col:174> '_Bool' lvalue Var 0x557fd9fd9648 'x$w_buff1_used' '_Bool'
|   |                 | `-UnaryOperator 0x557fd9fdf668 <col:192, col:193> 'int' prefix '!' cannot overflow
|   |                 |   `-ImplicitCastExpr 0x557fd9fdf650 <col:193> '_Bool' <LValueToRValue>
|   |                 |     `-DeclRefExpr 0x557fd9fdf630 <col:193> '_Bool' lvalue Var 0x557fd9fd9108 'x$r_buff0_thd2' '_Bool'
|   |                 |-ImplicitCastExpr 0x557fd9fdf9a8 <col:210> 'int' <IntegralCast>
|   |                 | `-ImplicitCastExpr 0x557fd9fdf990 <col:210> '_Bool' <LValueToRValue>
|   |                 |   `-DeclRefExpr 0x557fd9fdf6a0 <col:210> '_Bool' lvalue Var 0x557fd9fd9108 'x$r_buff0_thd2' '_Bool'
|   |                 `-ParenExpr 0x557fd9fdf970 <col:227, col:319> 'int'
|   |                   `-ConditionalOperator 0x557fd9fdf940 <col:228, col:318> 'int'
|   |                     |-BinaryOperator 0x557fd9fdf840 <col:228, col:283> 'int' '&&'
|   |                     | |-BinaryOperator 0x557fd9fdf7d0 <col:228, col:264> 'int' '&&'
|   |                     | | |-BinaryOperator 0x557fd9fdf760 <col:228, col:246> 'int' '&&'
|   |                     | | | |-ImplicitCastExpr 0x557fd9fdf718 <col:228> 'int' <IntegralCast>
|   |                     | | | | `-ImplicitCastExpr 0x557fd9fdf700 <col:228> '_Bool' <LValueToRValue>
|   |                     | | | |   `-DeclRefExpr 0x557fd9fdf6c0 <col:228> '_Bool' lvalue Var 0x557fd9fd9550 'x$w_buff0_used' '_Bool'
|   |                     | | | `-ImplicitCastExpr 0x557fd9fdf748 <col:246> 'int' <IntegralCast>
|   |                     | | |   `-ImplicitCastExpr 0x557fd9fdf730 <col:246> '_Bool' <LValueToRValue>
|   |                     | | |     `-DeclRefExpr 0x557fd9fdf6e0 <col:246> '_Bool' lvalue Var 0x557fd9fd92e8 'x$r_buff1_thd2' '_Bool'
|   |                     | | `-ImplicitCastExpr 0x557fd9fdf7b8 <col:264> 'int' <IntegralCast>
|   |                     | |   `-ImplicitCastExpr 0x557fd9fdf7a0 <col:264> '_Bool' <LValueToRValue>
|   |                     | |     `-DeclRefExpr 0x557fd9fdf780 <col:264> '_Bool' lvalue Var 0x557fd9fd9648 'x$w_buff1_used' '_Bool'
|   |                     | `-UnaryOperator 0x557fd9fdf828 <col:282, col:283> 'int' prefix '!' cannot overflow
|   |                     |   `-ImplicitCastExpr 0x557fd9fdf810 <col:283> '_Bool' <LValueToRValue>
|   |                     |     `-DeclRefExpr 0x557fd9fdf7f0 <col:283> '_Bool' lvalue Var 0x557fd9fd9108 'x$r_buff0_thd2' '_Bool'
|   |                     |-ImplicitCastExpr 0x557fd9fdf910 <col:300, col:307> 'int' <IntegralCast>
|   |                     | `-CStyleCastExpr 0x557fd9fdf890 <col:300, col:307> '_Bool' <IntegralToBoolean>
|   |                     |   `-IntegerLiteral 0x557fd9fdf860 <col:307> 'int' 0
|   |                     `-ImplicitCastExpr 0x557fd9fdf928 <col:311, col:318> 'int' <IntegralCast>
|   |                       `-CStyleCastExpr 0x557fd9fdf8e8 <col:311, col:318> '_Bool' <IntegralToBoolean>
|   |                         `-IntegerLiteral 0x557fd9fdf8b8 <col:318> 'int' 0
|   |-BinaryOperator 0x557fd9fe0570 <line:763:3, col:351> '_Bool' '='
|   | |-DeclRefExpr 0x557fd9fdfbd8 <col:3> '_Bool' lvalue Var 0x557fd9fd92e8 'x$r_buff1_thd2' '_Bool'
|   | `-ImplicitCastExpr 0x557fd9fe0558 <col:20, col:351> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x557fd9fe0528 <col:20, col:351> 'int'
|   |     |-ImplicitCastExpr 0x557fd9fe04e0 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x557fd9fe04c8 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x557fd9fdfbf8 <col:20> '_Bool' lvalue Var 0x557fd9fd98d0 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x557fd9fe0510 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x557fd9fe04f8 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x557fd9fdfc18 <col:36> '_Bool' lvalue Var 0x557fd9fd92e8 'x$r_buff1_thd2' '_Bool'
|   |     `-ParenExpr 0x557fd9fe04a8 <col:53, col:351> 'int'
|   |       `-ConditionalOperator 0x557fd9fe0478 <col:54, col:350> 'int'
|   |         |-UnaryOperator 0x557fd9fdfc70 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | `-ImplicitCastExpr 0x557fd9fdfc58 <col:55> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x557fd9fdfc38 <col:55> '_Bool' lvalue Var 0x557fd9fd9550 'x$w_buff0_used' '_Bool'
|   |         |-ImplicitCastExpr 0x557fd9fe0460 <col:72> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x557fd9fe0448 <col:72> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x557fd9fdfc88 <col:72> '_Bool' lvalue Var 0x557fd9fd92e8 'x$r_buff1_thd2' '_Bool'
|   |         `-ParenExpr 0x557fd9fe0428 <col:89, col:350> 'int'
|   |           `-ConditionalOperator 0x557fd9fe03f8 <col:90, col:349> 'int'
|   |             |-BinaryOperator 0x557fd9fdfd48 <col:90, col:108> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x557fd9fdfd00 <col:90> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x557fd9fdfce8 <col:90> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x557fd9fdfca8 <col:90> '_Bool' lvalue Var 0x557fd9fd9550 'x$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x557fd9fdfd30 <col:108> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x557fd9fdfd18 <col:108> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x557fd9fdfcc8 <col:108> '_Bool' lvalue Var 0x557fd9fd9108 'x$r_buff0_thd2' '_Bool'
|   |             |-ImplicitCastExpr 0x557fd9fe03e0 <col:125, col:132> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x557fd9fdfd98 <col:125, col:132> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x557fd9fdfd68 <col:132> 'int' 0
|   |             `-ParenExpr 0x557fd9fe03c0 <col:136, col:349> 'int'
|   |               `-ConditionalOperator 0x557fd9fe0390 <col:137, col:348> 'int'
|   |                 |-BinaryOperator 0x557fd9fdff40 <col:137, col:193> 'int' '&&'
|   |                 | |-BinaryOperator 0x557fd9fdfed0 <col:137, col:174> 'int' '&&'
|   |                 | | |-BinaryOperator 0x557fd9fdfe60 <col:137, col:156> 'int' '&&'
|   |                 | | | |-ImplicitCastExpr 0x557fd9fdfe48 <col:137> 'int' <IntegralCast>
|   |                 | | | | `-ImplicitCastExpr 0x557fd9fdfe30 <col:137> '_Bool' <LValueToRValue>
|   |                 | | | |   `-DeclRefExpr 0x557fd9fdfdc0 <col:137> '_Bool' lvalue Var 0x557fd9fd9550 'x$w_buff0_used' '_Bool'
|   |                 | | | `-UnaryOperator 0x557fd9fdfe18 <col:155, col:156> 'int' prefix '!' cannot overflow
|   |                 | | |   `-ImplicitCastExpr 0x557fd9fdfe00 <col:156> '_Bool' <LValueToRValue>
|   |                 | | |     `-DeclRefExpr 0x557fd9fdfde0 <col:156> '_Bool' lvalue Var 0x557fd9fd92e8 'x$r_buff1_thd2' '_Bool'
|   |                 | | `-ImplicitCastExpr 0x557fd9fdfeb8 <col:174> 'int' <IntegralCast>
|   |                 | |   `-ImplicitCastExpr 0x557fd9fdfea0 <col:174> '_Bool' <LValueToRValue>
|   |                 | |     `-DeclRefExpr 0x557fd9fdfe80 <col:174> '_Bool' lvalue Var 0x557fd9fd9648 'x$w_buff1_used' '_Bool'
|   |                 | `-UnaryOperator 0x557fd9fdff28 <col:192, col:193> 'int' prefix '!' cannot overflow
|   |                 |   `-ImplicitCastExpr 0x557fd9fdff10 <col:193> '_Bool' <LValueToRValue>
|   |                 |     `-DeclRefExpr 0x557fd9fdfef0 <col:193> '_Bool' lvalue Var 0x557fd9fd9108 'x$r_buff0_thd2' '_Bool'
|   |                 |-ParenExpr 0x557fd9fe00a0 <col:210, col:252> 'int'
|   |                 | `-ConditionalOperator 0x557fd9fe0070 <col:211, col:251> 'int'
|   |                 |   |-ImplicitCastExpr 0x557fd9fe0010 <col:211> 'int' <IntegralCast>
|   |                 |   | `-ImplicitCastExpr 0x557fd9fdfff8 <col:211> '_Bool' <LValueToRValue>
|   |                 |   |   `-DeclRefExpr 0x557fd9fdff60 <col:211> '_Bool' lvalue Var 0x557fd9fd97e0 'weak$$choice0' '_Bool'
|   |                 |   |-ImplicitCastExpr 0x557fd9fe0040 <col:227> 'int' <IntegralCast>
|   |                 |   | `-ImplicitCastExpr 0x557fd9fe0028 <col:227> '_Bool' <LValueToRValue>
|   |                 |   |   `-DeclRefExpr 0x557fd9fdff80 <col:227> '_Bool' lvalue Var 0x557fd9fd92e8 'x$r_buff1_thd2' '_Bool'
|   |                 |   `-ImplicitCastExpr 0x557fd9fe0058 <col:244, col:251> 'int' <IntegralCast>
|   |                 |     `-CStyleCastExpr 0x557fd9fdffd0 <col:244, col:251> '_Bool' <IntegralToBoolean>
|   |                 |       `-IntegerLiteral 0x557fd9fdffa0 <col:251> 'int' 0
|   |                 `-ParenExpr 0x557fd9fe0370 <col:256, col:348> 'int'
|   |                   `-ConditionalOperator 0x557fd9fe0340 <col:257, col:347> 'int'
|   |                     |-BinaryOperator 0x557fd9fe0240 <col:257, col:312> 'int' '&&'
|   |                     | |-BinaryOperator 0x557fd9fe01d0 <col:257, col:293> 'int' '&&'
|   |                     | | |-BinaryOperator 0x557fd9fe0160 <col:257, col:275> 'int' '&&'
|   |                     | | | |-ImplicitCastExpr 0x557fd9fe0118 <col:257> 'int' <IntegralCast>
|   |                     | | | | `-ImplicitCastExpr 0x557fd9fe0100 <col:257> '_Bool' <LValueToRValue>
|   |                     | | | |   `-DeclRefExpr 0x557fd9fe00c0 <col:257> '_Bool' lvalue Var 0x557fd9fd9550 'x$w_buff0_used' '_Bool'
|   |                     | | | `-ImplicitCastExpr 0x557fd9fe0148 <col:275> 'int' <IntegralCast>
|   |                     | | |   `-ImplicitCastExpr 0x557fd9fe0130 <col:275> '_Bool' <LValueToRValue>
|   |                     | | |     `-DeclRefExpr 0x557fd9fe00e0 <col:275> '_Bool' lvalue Var 0x557fd9fd92e8 'x$r_buff1_thd2' '_Bool'
|   |                     | | `-ImplicitCastExpr 0x557fd9fe01b8 <col:293> 'int' <IntegralCast>
|   |                     | |   `-ImplicitCastExpr 0x557fd9fe01a0 <col:293> '_Bool' <LValueToRValue>
|   |                     | |     `-DeclRefExpr 0x557fd9fe0180 <col:293> '_Bool' lvalue Var 0x557fd9fd9648 'x$w_buff1_used' '_Bool'
|   |                     | `-UnaryOperator 0x557fd9fe0228 <col:311, col:312> 'int' prefix '!' cannot overflow
|   |                     |   `-ImplicitCastExpr 0x557fd9fe0210 <col:312> '_Bool' <LValueToRValue>
|   |                     |     `-DeclRefExpr 0x557fd9fe01f0 <col:312> '_Bool' lvalue Var 0x557fd9fd9108 'x$r_buff0_thd2' '_Bool'
|   |                     |-ImplicitCastExpr 0x557fd9fe0310 <col:329, col:336> 'int' <IntegralCast>
|   |                     | `-CStyleCastExpr 0x557fd9fe0290 <col:329, col:336> '_Bool' <IntegralToBoolean>
|   |                     |   `-IntegerLiteral 0x557fd9fe0260 <col:336> 'int' 0
|   |                     `-ImplicitCastExpr 0x557fd9fe0328 <col:340, col:347> 'int' <IntegralCast>
|   |                       `-CStyleCastExpr 0x557fd9fe02e8 <col:340, col:347> '_Bool' <IntegralToBoolean>
|   |                         `-IntegerLiteral 0x557fd9fe02b8 <col:347> 'int' 0
|   |-BinaryOperator 0x557fd9fe0608 <line:764:3, col:45> '_Bool' '='
|   | |-DeclRefExpr 0x557fd9fe0590 <col:3> '_Bool' lvalue Var 0x557fd9fd88b0 '__unbuffered_p1_EAX$read_delayed' '_Bool'
|   | `-CStyleCastExpr 0x557fd9fe05e0 <col:38, col:45> '_Bool' <IntegralToBoolean>
|   |   `-IntegerLiteral 0x557fd9fe05b0 <col:45> 'int' 1
|   |-BinaryOperator 0x557fd9fe0680 <line:765:3, col:43> 'int *' '='
|   | |-DeclRefExpr 0x557fd9fe0628 <col:3> 'int *' lvalue Var 0x557fd9fd8930 '__unbuffered_p1_EAX$read_delayed_var' 'int *'
|   | `-UnaryOperator 0x557fd9fe0668 <col:42, col:43> 'int *' prefix '&' cannot overflow
|   |   `-DeclRefExpr 0x557fd9fe0648 <col:43> 'int' lvalue Var 0x557fd9fd8e88 'x' 'int'
|   |-BinaryOperator 0x557fd9fe06f8 <line:766:3, col:25> 'int' '='
|   | |-DeclRefExpr 0x557fd9fe06a0 <col:3> 'int' lvalue Var 0x557fd9fd8360 '__unbuffered_p1_EAX' 'int'
|   | `-ImplicitCastExpr 0x557fd9fe06e0 <col:25> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x557fd9fe06c0 <col:25> 'int' lvalue Var 0x557fd9fd8e88 'x' 'int'
|   |-BinaryOperator 0x557fd9fe0828 <line:767:3, col:37> 'int' '='
|   | |-DeclRefExpr 0x557fd9fe0718 <col:3> 'int' lvalue Var 0x557fd9fd8e88 'x' 'int'
|   | `-ConditionalOperator 0x557fd9fe07f8 <col:7, col:37> 'int'
|   |   |-ImplicitCastExpr 0x557fd9fe07b0 <col:7> 'int' <IntegralCast>
|   |   | `-ImplicitCastExpr 0x557fd9fe0798 <col:7> '_Bool' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x557fd9fe0738 <col:7> '_Bool' lvalue Var 0x557fd9fd8f20 'x$flush_delayed' '_Bool'
|   |   |-ImplicitCastExpr 0x557fd9fe07c8 <col:25> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x557fd9fe0758 <col:25> 'int' lvalue Var 0x557fd9fd8fa0 'x$mem_tmp' 'int'
|   |   `-ImplicitCastExpr 0x557fd9fe07e0 <col:37> 'int' <LValueToRValue>
|   |     `-DeclRefExpr 0x557fd9fe0778 <col:37> 'int' lvalue Var 0x557fd9fd8e88 'x' 'int'
|   |-BinaryOperator 0x557fd9fe08c0 <line:768:3, col:28> '_Bool' '='
|   | |-DeclRefExpr 0x557fd9fe0848 <col:3> '_Bool' lvalue Var 0x557fd9fd8f20 'x$flush_delayed' '_Bool'
|   | `-CStyleCastExpr 0x557fd9fe0898 <col:21, col:28> '_Bool' <IntegralToBoolean>
|   |   `-IntegerLiteral 0x557fd9fe0868 <col:28> 'int' 0
|   |-CallExpr 0x557fd9fe0918 <line:769:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x557fd9fe0900 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x557fd9fe08e0 <col:3> 'void ()' Function 0x557fd9f7ef00 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x557fd9fe0970 <line:770:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x557fd9fe0958 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x557fd9fe0938 <col:3> 'void ()' Function 0x557fd9f7ee40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x557fd9fe09d0 <line:771:3, col:7> 'int' '='
|   | |-DeclRefExpr 0x557fd9fe0990 <col:3> 'int' lvalue Var 0x557fd9fd9748 'y' 'int'
|   | `-IntegerLiteral 0x557fd9fe09b0 <col:7> 'int' 1
|   |-CallExpr 0x557fd9fe0a28 <line:772:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x557fd9fe0a10 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x557fd9fe09f0 <col:3> 'void ()' Function 0x557fd9f7ef00 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x557fd9fe0a80 <line:773:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x557fd9fe0a68 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x557fd9fe0a48 <col:3> 'void ()' Function 0x557fd9f7ee40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x557fd9fe0d88 <line:774:3, col:103> 'int' '='
|   | |-DeclRefExpr 0x557fd9fe0aa0 <col:3> 'int' lvalue Var 0x557fd9fd8e88 'x' 'int'
|   | `-ConditionalOperator 0x557fd9fe0d58 <col:7, col:103> 'int'
|   |   |-BinaryOperator 0x557fd9fe0b80 <col:7, col:25> 'int' '&&'
|   |   | |-ImplicitCastExpr 0x557fd9fe0b18 <col:7> 'int' <IntegralCast>
|   |   | | `-ImplicitCastExpr 0x557fd9fe0b00 <col:7> '_Bool' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x557fd9fe0ac0 <col:7> '_Bool' lvalue Var 0x557fd9fd9550 'x$w_buff0_used' '_Bool'
|   |   | `-ImplicitCastExpr 0x557fd9fe0b48 <col:25> 'int' <IntegralCast>
|   |   |   `-ImplicitCastExpr 0x557fd9fe0b30 <col:25> '_Bool' <LValueToRValue>
|   |   |     `-DeclRefExpr 0x557fd9fe0ae0 <col:25> '_Bool' lvalue Var 0x557fd9fd9108 'x$r_buff0_thd2' '_Bool'
|   |   |-ImplicitCastExpr 0x557fd9fe0d40 <col:42> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x557fd9fe0ba0 <col:42> 'int' lvalue Var 0x557fd9fd94d8 'x$w_buff0' 'int'
|   |   `-ParenExpr 0x557fd9fe0d20 <col:54, col:103> 'int'
|   |     `-ConditionalOperator 0x557fd9fe0cf0 <col:55, col:102> 'int'
|   |       |-BinaryOperator 0x557fd9fe0c60 <col:55, col:73> 'int' '&&'
|   |       | |-ImplicitCastExpr 0x557fd9fe0c18 <col:55> 'int' <IntegralCast>
|   |       | | `-ImplicitCastExpr 0x557fd9fe0c00 <col:55> '_Bool' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x557fd9fe0bc0 <col:55> '_Bool' lvalue Var 0x557fd9fd9648 'x$w_buff1_used' '_Bool'
|   |       | `-ImplicitCastExpr 0x557fd9fe0c48 <col:73> 'int' <IntegralCast>
|   |       |   `-ImplicitCastExpr 0x557fd9fe0c30 <col:73> '_Bool' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x557fd9fe0be0 <col:73> '_Bool' lvalue Var 0x557fd9fd92e8 'x$r_buff1_thd2' '_Bool'
|   |       |-ImplicitCastExpr 0x557fd9fe0cc0 <col:90> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x557fd9fe0c80 <col:90> 'int' lvalue Var 0x557fd9fd95d0 'x$w_buff1' 'int'
|   |       `-ImplicitCastExpr 0x557fd9fe0cd8 <col:102> 'int' <LValueToRValue>
|   |         `-DeclRefExpr 0x557fd9fe0ca0 <col:102> 'int' lvalue Var 0x557fd9fd8e88 'x' 'int'
|   |-BinaryOperator 0x557fd9fe0f90 <line:775:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x557fd9fe0da8 <col:3> '_Bool' lvalue Var 0x557fd9fd9550 'x$w_buff0_used' '_Bool'
|   | `-ImplicitCastExpr 0x557fd9fe0f78 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x557fd9fe0f48 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x557fd9fe0e68 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x557fd9fe0e20 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x557fd9fe0e08 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x557fd9fe0dc8 <col:20> '_Bool' lvalue Var 0x557fd9fd9550 'x$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x557fd9fe0e50 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x557fd9fe0e38 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x557fd9fe0de8 <col:38> '_Bool' lvalue Var 0x557fd9fd9108 'x$r_buff0_thd2' '_Bool'
|   |     |-ImplicitCastExpr 0x557fd9fe0f00 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x557fd9fe0eb8 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x557fd9fe0e88 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x557fd9fe0f30 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x557fd9fe0f18 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x557fd9fe0ee0 <col:66> '_Bool' lvalue Var 0x557fd9fd9550 'x$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x557fd9fe1278 <line:776:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x557fd9fe0fb0 <col:3> '_Bool' lvalue Var 0x557fd9fd9648 'x$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x557fd9fe1260 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x557fd9fe1230 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x557fd9fe1150 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x557fd9fe1070 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x557fd9fe1028 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x557fd9fe1010 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x557fd9fe0fd0 <col:20> '_Bool' lvalue Var 0x557fd9fd9550 'x$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x557fd9fe1058 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x557fd9fe1040 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x557fd9fe0ff0 <col:38> '_Bool' lvalue Var 0x557fd9fd9108 'x$r_buff0_thd2' '_Bool'
|   |     | `-BinaryOperator 0x557fd9fe1130 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x557fd9fe10e8 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x557fd9fe10d0 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x557fd9fe1090 <col:56> '_Bool' lvalue Var 0x557fd9fd9648 'x$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x557fd9fe1118 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x557fd9fe1100 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x557fd9fe10b0 <col:74> '_Bool' lvalue Var 0x557fd9fd92e8 'x$r_buff1_thd2' '_Bool'
|   |     |-ImplicitCastExpr 0x557fd9fe11e8 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x557fd9fe11a0 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x557fd9fe1170 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x557fd9fe1218 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x557fd9fe1200 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x557fd9fe11c8 <col:102> '_Bool' lvalue Var 0x557fd9fd9648 'x$w_buff1_used' '_Bool'
|   |-BinaryOperator 0x557fd9fe1480 <line:777:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x557fd9fe1298 <col:3> '_Bool' lvalue Var 0x557fd9fd9108 'x$r_buff0_thd2' '_Bool'
|   | `-ImplicitCastExpr 0x557fd9fe1468 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x557fd9fe1438 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x557fd9fe1358 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x557fd9fe1310 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x557fd9fe12f8 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x557fd9fe12b8 <col:20> '_Bool' lvalue Var 0x557fd9fd9550 'x$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x557fd9fe1340 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x557fd9fe1328 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x557fd9fe12d8 <col:38> '_Bool' lvalue Var 0x557fd9fd9108 'x$r_buff0_thd2' '_Bool'
|   |     |-ImplicitCastExpr 0x557fd9fe13f0 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x557fd9fe13a8 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x557fd9fe1378 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x557fd9fe1420 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x557fd9fe1408 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x557fd9fe13d0 <col:66> '_Bool' lvalue Var 0x557fd9fd9108 'x$r_buff0_thd2' '_Bool'
|   |-BinaryOperator 0x557fd9fe1768 <line:778:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x557fd9fe14a0 <col:3> '_Bool' lvalue Var 0x557fd9fd92e8 'x$r_buff1_thd2' '_Bool'
|   | `-ImplicitCastExpr 0x557fd9fe1750 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x557fd9fe1720 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x557fd9fe1640 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x557fd9fe1560 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x557fd9fe1518 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x557fd9fe1500 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x557fd9fe14c0 <col:20> '_Bool' lvalue Var 0x557fd9fd9550 'x$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x557fd9fe1548 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x557fd9fe1530 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x557fd9fe14e0 <col:38> '_Bool' lvalue Var 0x557fd9fd9108 'x$r_buff0_thd2' '_Bool'
|   |     | `-BinaryOperator 0x557fd9fe1620 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x557fd9fe15d8 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x557fd9fe15c0 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x557fd9fe1580 <col:56> '_Bool' lvalue Var 0x557fd9fd9648 'x$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x557fd9fe1608 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x557fd9fe15f0 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x557fd9fe15a0 <col:74> '_Bool' lvalue Var 0x557fd9fd92e8 'x$r_buff1_thd2' '_Bool'
|   |     |-ImplicitCastExpr 0x557fd9fe16d8 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x557fd9fe1690 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x557fd9fe1660 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x557fd9fe1708 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x557fd9fe16f0 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x557fd9fe16b8 <col:102> '_Bool' lvalue Var 0x557fd9fd92e8 'x$r_buff1_thd2' '_Bool'
|   |-CallExpr 0x557fd9fe17c0 <line:779:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x557fd9fe17a8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x557fd9fe1788 <col:3> 'void ()' Function 0x557fd9f7ef00 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x557fd9fe1818 <line:780:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x557fd9fe1800 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x557fd9fe17e0 <col:3> 'void ()' Function 0x557fd9f7ee40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x557fd9fe18d0 <line:781:3, col:41> 'int' '='
|   | |-DeclRefExpr 0x557fd9fe1838 <col:3> 'int' lvalue Var 0x557fd9fd8120 '__unbuffered_cnt' 'int'
|   | `-BinaryOperator 0x557fd9fe18b0 <col:22, col:41> 'int' '+'
|   |   |-ImplicitCastExpr 0x557fd9fe1898 <col:22> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x557fd9fe1858 <col:22> 'int' lvalue Var 0x557fd9fd8120 '__unbuffered_cnt' 'int'
|   |   `-IntegerLiteral 0x557fd9fe1878 <col:41> 'int' 1
|   |-CallExpr 0x557fd9fe1928 <line:782:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x557fd9fe1910 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x557fd9fe18f0 <col:3> 'void ()' Function 0x557fd9f7ef00 '__VERIFIER_atomic_end' 'void ()'
|   `-ReturnStmt 0x557fd9fe19a0 <line:783:3, col:36>
|     `-CallExpr 0x557fd9fe1980 <col:10, col:36> 'void *'
|       `-ImplicitCastExpr 0x557fd9fe1968 <col:10> 'void *(*)(void)' <FunctionToPointerDecay>
|         `-DeclRefExpr 0x557fd9fe1948 <col:10> 'void *(void)' Function 0x557fd9f7e958 '__VERIFIER_nondet_pointer' 'void *(void)'
|-FunctionDecl 0x557fd9fe1b90 prev 0x557fd9fd7da0 <line:785:1, line:804:1> line:785:8 used P2 'void *(void *)'
| |-ParmVarDecl 0x557fd9fe1ae0 <col:11, col:17> col:17 arg 'void *'
| `-CompoundStmt 0x557fd9fe2dc8 <line:786:1, line:804:1>
|   |-CallExpr 0x557fd9fe1c70 <line:787:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x557fd9fe1c58 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x557fd9fe1c38 <col:3> 'void ()' Function 0x557fd9f7ee40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x557fd9fe1ce8 <line:788:3, col:25> 'int' '='
|   | |-DeclRefExpr 0x557fd9fe1c90 <col:3> 'int' lvalue Var 0x557fd9fd8c78 '__unbuffered_p2_EAX' 'int'
|   | `-ImplicitCastExpr 0x557fd9fe1cd0 <col:25> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x557fd9fe1cb0 <col:25> 'int' lvalue Var 0x557fd9fd9748 'y' 'int'
|   |-CallExpr 0x557fd9fe1d40 <line:789:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x557fd9fe1d28 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x557fd9fe1d08 <col:3> 'void ()' Function 0x557fd9f7ef00 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x557fd9fe1d98 <line:790:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x557fd9fe1d80 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x557fd9fe1d60 <col:3> 'void ()' Function 0x557fd9f7ee40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x557fd9fe1df8 <line:791:3, col:7> 'int' '='
|   | |-DeclRefExpr 0x557fd9fe1db8 <col:3> 'int' lvalue Var 0x557fd9fd9748 'y' 'int'
|   | `-IntegerLiteral 0x557fd9fe1dd8 <col:7> 'int' 2
|   |-CallExpr 0x557fd9fe1e50 <line:792:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x557fd9fe1e38 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x557fd9fe1e18 <col:3> 'void ()' Function 0x557fd9f7ef00 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x557fd9fe1ea8 <line:793:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x557fd9fe1e90 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x557fd9fe1e70 <col:3> 'void ()' Function 0x557fd9f7ee40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x557fd9fe2190 <line:794:3, col:103> 'int' '='
|   | |-DeclRefExpr 0x557fd9fe1ec8 <col:3> 'int' lvalue Var 0x557fd9fd8e88 'x' 'int'
|   | `-ConditionalOperator 0x557fd9fe2160 <col:7, col:103> 'int'
|   |   |-BinaryOperator 0x557fd9fe1f88 <col:7, col:25> 'int' '&&'
|   |   | |-ImplicitCastExpr 0x557fd9fe1f40 <col:7> 'int' <IntegralCast>
|   |   | | `-ImplicitCastExpr 0x557fd9fe1f28 <col:7> '_Bool' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x557fd9fe1ee8 <col:7> '_Bool' lvalue Var 0x557fd9fd9550 'x$w_buff0_used' '_Bool'
|   |   | `-ImplicitCastExpr 0x557fd9fe1f70 <col:25> 'int' <IntegralCast>
|   |   |   `-ImplicitCastExpr 0x557fd9fe1f58 <col:25> '_Bool' <LValueToRValue>
|   |   |     `-DeclRefExpr 0x557fd9fe1f08 <col:25> '_Bool' lvalue Var 0x557fd9fd9180 'x$r_buff0_thd3' '_Bool'
|   |   |-ImplicitCastExpr 0x557fd9fe2148 <col:42> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x557fd9fe1fa8 <col:42> 'int' lvalue Var 0x557fd9fd94d8 'x$w_buff0' 'int'
|   |   `-ParenExpr 0x557fd9fe2128 <col:54, col:103> 'int'
|   |     `-ConditionalOperator 0x557fd9fe20f8 <col:55, col:102> 'int'
|   |       |-BinaryOperator 0x557fd9fe2068 <col:55, col:73> 'int' '&&'
|   |       | |-ImplicitCastExpr 0x557fd9fe2020 <col:55> 'int' <IntegralCast>
|   |       | | `-ImplicitCastExpr 0x557fd9fe2008 <col:55> '_Bool' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x557fd9fe1fc8 <col:55> '_Bool' lvalue Var 0x557fd9fd9648 'x$w_buff1_used' '_Bool'
|   |       | `-ImplicitCastExpr 0x557fd9fe2050 <col:73> 'int' <IntegralCast>
|   |       |   `-ImplicitCastExpr 0x557fd9fe2038 <col:73> '_Bool' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x557fd9fe1fe8 <col:73> '_Bool' lvalue Var 0x557fd9fd9360 'x$r_buff1_thd3' '_Bool'
|   |       |-ImplicitCastExpr 0x557fd9fe20c8 <col:90> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x557fd9fe2088 <col:90> 'int' lvalue Var 0x557fd9fd95d0 'x$w_buff1' 'int'
|   |       `-ImplicitCastExpr 0x557fd9fe20e0 <col:102> 'int' <LValueToRValue>
|   |         `-DeclRefExpr 0x557fd9fe20a8 <col:102> 'int' lvalue Var 0x557fd9fd8e88 'x' 'int'
|   |-BinaryOperator 0x557fd9fe2398 <line:795:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x557fd9fe21b0 <col:3> '_Bool' lvalue Var 0x557fd9fd9550 'x$w_buff0_used' '_Bool'
|   | `-ImplicitCastExpr 0x557fd9fe2380 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x557fd9fe2350 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x557fd9fe2270 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x557fd9fe2228 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x557fd9fe2210 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x557fd9fe21d0 <col:20> '_Bool' lvalue Var 0x557fd9fd9550 'x$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x557fd9fe2258 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x557fd9fe2240 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x557fd9fe21f0 <col:38> '_Bool' lvalue Var 0x557fd9fd9180 'x$r_buff0_thd3' '_Bool'
|   |     |-ImplicitCastExpr 0x557fd9fe2308 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x557fd9fe22c0 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x557fd9fe2290 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x557fd9fe2338 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x557fd9fe2320 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x557fd9fe22e8 <col:66> '_Bool' lvalue Var 0x557fd9fd9550 'x$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x557fd9fe2680 <line:796:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x557fd9fe23b8 <col:3> '_Bool' lvalue Var 0x557fd9fd9648 'x$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x557fd9fe2668 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x557fd9fe2638 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x557fd9fe2558 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x557fd9fe2478 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x557fd9fe2430 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x557fd9fe2418 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x557fd9fe23d8 <col:20> '_Bool' lvalue Var 0x557fd9fd9550 'x$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x557fd9fe2460 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x557fd9fe2448 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x557fd9fe23f8 <col:38> '_Bool' lvalue Var 0x557fd9fd9180 'x$r_buff0_thd3' '_Bool'
|   |     | `-BinaryOperator 0x557fd9fe2538 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x557fd9fe24f0 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x557fd9fe24d8 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x557fd9fe2498 <col:56> '_Bool' lvalue Var 0x557fd9fd9648 'x$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x557fd9fe2520 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x557fd9fe2508 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x557fd9fe24b8 <col:74> '_Bool' lvalue Var 0x557fd9fd9360 'x$r_buff1_thd3' '_Bool'
|   |     |-ImplicitCastExpr 0x557fd9fe25f0 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x557fd9fe25a8 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x557fd9fe2578 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x557fd9fe2620 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x557fd9fe2608 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x557fd9fe25d0 <col:102> '_Bool' lvalue Var 0x557fd9fd9648 'x$w_buff1_used' '_Bool'
|   |-BinaryOperator 0x557fd9fe2888 <line:797:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x557fd9fe26a0 <col:3> '_Bool' lvalue Var 0x557fd9fd9180 'x$r_buff0_thd3' '_Bool'
|   | `-ImplicitCastExpr 0x557fd9fe2870 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x557fd9fe2840 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x557fd9fe2760 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x557fd9fe2718 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x557fd9fe2700 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x557fd9fe26c0 <col:20> '_Bool' lvalue Var 0x557fd9fd9550 'x$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x557fd9fe2748 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x557fd9fe2730 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x557fd9fe26e0 <col:38> '_Bool' lvalue Var 0x557fd9fd9180 'x$r_buff0_thd3' '_Bool'
|   |     |-ImplicitCastExpr 0x557fd9fe27f8 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x557fd9fe27b0 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x557fd9fe2780 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x557fd9fe2828 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x557fd9fe2810 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x557fd9fe27d8 <col:66> '_Bool' lvalue Var 0x557fd9fd9180 'x$r_buff0_thd3' '_Bool'
|   |-BinaryOperator 0x557fd9fe2b70 <line:798:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x557fd9fe28a8 <col:3> '_Bool' lvalue Var 0x557fd9fd9360 'x$r_buff1_thd3' '_Bool'
|   | `-ImplicitCastExpr 0x557fd9fe2b58 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x557fd9fe2b28 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x557fd9fe2a48 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x557fd9fe2968 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x557fd9fe2920 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x557fd9fe2908 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x557fd9fe28c8 <col:20> '_Bool' lvalue Var 0x557fd9fd9550 'x$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x557fd9fe2950 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x557fd9fe2938 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x557fd9fe28e8 <col:38> '_Bool' lvalue Var 0x557fd9fd9180 'x$r_buff0_thd3' '_Bool'
|   |     | `-BinaryOperator 0x557fd9fe2a28 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x557fd9fe29e0 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x557fd9fe29c8 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x557fd9fe2988 <col:56> '_Bool' lvalue Var 0x557fd9fd9648 'x$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x557fd9fe2a10 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x557fd9fe29f8 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x557fd9fe29a8 <col:74> '_Bool' lvalue Var 0x557fd9fd9360 'x$r_buff1_thd3' '_Bool'
|   |     |-ImplicitCastExpr 0x557fd9fe2ae0 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x557fd9fe2a98 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x557fd9fe2a68 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x557fd9fe2b10 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x557fd9fe2af8 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x557fd9fe2ac0 <col:102> '_Bool' lvalue Var 0x557fd9fd9360 'x$r_buff1_thd3' '_Bool'
|   |-CallExpr 0x557fd9fe2bd8 <line:799:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x557fd9fe2bc0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x557fd9fe2ba0 <col:3> 'void ()' Function 0x557fd9f7ef00 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x557fd9fe2c30 <line:800:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x557fd9fe2c18 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x557fd9fe2bf8 <col:3> 'void ()' Function 0x557fd9f7ee40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x557fd9fe2ce8 <line:801:3, col:41> 'int' '='
|   | |-DeclRefExpr 0x557fd9fe2c50 <col:3> 'int' lvalue Var 0x557fd9fd8120 '__unbuffered_cnt' 'int'
|   | `-BinaryOperator 0x557fd9fe2cc8 <col:22, col:41> 'int' '+'
|   |   |-ImplicitCastExpr 0x557fd9fe2cb0 <col:22> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x557fd9fe2c70 <col:22> 'int' lvalue Var 0x557fd9fd8120 '__unbuffered_cnt' 'int'
|   |   `-IntegerLiteral 0x557fd9fe2c90 <col:41> 'int' 1
|   |-CallExpr 0x557fd9fe2d40 <line:802:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x557fd9fe2d28 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x557fd9fe2d08 <col:3> 'void ()' Function 0x557fd9f7ef00 '__VERIFIER_atomic_end' 'void ()'
|   `-ReturnStmt 0x557fd9fe2db8 <line:803:3, col:36>
|     `-CallExpr 0x557fd9fe2d98 <col:10, col:36> 'void *'
|       `-ImplicitCastExpr 0x557fd9fe2d80 <col:10> 'void *(*)(void)' <FunctionToPointerDecay>
|         `-DeclRefExpr 0x557fd9fe2d60 <col:10> 'void *(void)' Function 0x557fd9f7e958 '__VERIFIER_nondet_pointer' 'void *(void)'
|-FunctionDecl 0x557fd9fe2e80 prev 0x557fd9fd7e68 <line:805:1, line:807:1> line:805:6 fence 'void ()'
| `-CompoundStmt 0x557fd9fe2f20 <line:806:1, line:807:1>
|-FunctionDecl 0x557fd9fe2f50 prev 0x557fd9fd7f28 <line:808:1, line:810:1> line:808:6 isync 'void ()'
| `-CompoundStmt 0x557fd9fe2ff0 <line:809:1, line:810:1>
|-FunctionDecl 0x557fd9fe3020 prev 0x557fd9fd7fe8 <line:811:1, line:813:1> line:811:6 lwfence 'void ()'
| `-CompoundStmt 0x557fd9fe30c0 <line:812:1, line:813:1>
`-FunctionDecl 0x557fd9fe3128 <line:814:1, line:840:1> line:814:5 main 'int ()'
  `-CompoundStmt 0x557fd9fe5100 <line:815:1, line:840:1>
    |-DeclStmt 0x557fd9fe3240 <line:816:3, col:18>
    | `-VarDecl 0x557fd9fe31d8 <col:3, col:13> col:13 used t1782 'pthread_t':'unsigned long'
    |-CallExpr 0x557fd9fe3448 <line:817:3, col:54> 'int'
    | |-ImplicitCastExpr 0x557fd9fe3430 <col:3> 'int (*)(pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x557fd9fe3258 <col:3> 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' Function 0x557fd9fbf488 'pthread_create' 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)'
    | |-UnaryOperator 0x557fd9fe3298 <col:18, col:19> 'pthread_t *' prefix '&' cannot overflow
    | | `-DeclRefExpr 0x557fd9fe3278 <col:19> 'pthread_t':'unsigned long' lvalue Var 0x557fd9fe31d8 't1782' 'pthread_t':'unsigned long'
    | |-ImplicitCastExpr 0x557fd9fe3488 <col:26, col:36> 'const pthread_attr_t *' <NullToPointer>
    | | `-ParenExpr 0x557fd9fe3310 <col:26, col:36> 'void *'
    | |   `-CStyleCastExpr 0x557fd9fe32e8 <col:27, col:35> 'void *' <NullToPointer>
    | |     `-IntegerLiteral 0x557fd9fe32b0 <col:35> 'int' 0
    | |-ImplicitCastExpr 0x557fd9fe34a0 <col:39> 'void *(*)(void *)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x557fd9fe3330 <col:39> 'void *(void *)' Function 0x557fd9fd99e8 'P0' 'void *(void *)'
    | `-ParenExpr 0x557fd9fe33b0 <col:43, col:53> 'void *'
    |   `-CStyleCastExpr 0x557fd9fe3388 <col:44, col:52> 'void *' <NullToPointer>
    |     `-IntegerLiteral 0x557fd9fe3350 <col:52> 'int' 0
    |-DeclStmt 0x557fd9fe3530 <line:818:3, col:18>
    | `-VarDecl 0x557fd9fe34c8 <col:3, col:13> col:13 used t1783 'pthread_t':'unsigned long'
    |-CallExpr 0x557fd9fe36d8 <line:819:3, col:54> 'int'
    | |-ImplicitCastExpr 0x557fd9fe36c0 <col:3> 'int (*)(pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x557fd9fe3548 <col:3> 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' Function 0x557fd9fbf488 'pthread_create' 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)'
    | |-UnaryOperator 0x557fd9fe3588 <col:18, col:19> 'pthread_t *' prefix '&' cannot overflow
    | | `-DeclRefExpr 0x557fd9fe3568 <col:19> 'pthread_t':'unsigned long' lvalue Var 0x557fd9fe34c8 't1783' 'pthread_t':'unsigned long'
    | |-ImplicitCastExpr 0x557fd9fe3718 <col:26, col:36> 'const pthread_attr_t *' <NullToPointer>
    | | `-ParenExpr 0x557fd9fe3600 <col:26, col:36> 'void *'
    | |   `-CStyleCastExpr 0x557fd9fe35d8 <col:27, col:35> 'void *' <NullToPointer>
    | |     `-IntegerLiteral 0x557fd9fe35a0 <col:35> 'int' 0
    | |-ImplicitCastExpr 0x557fd9fe3730 <col:39> 'void *(*)(void *)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x557fd9fe3620 <col:39> 'void *(void *)' Function 0x557fd9fdc3c8 'P1' 'void *(void *)'
    | `-ParenExpr 0x557fd9fe36a0 <col:43, col:53> 'void *'
    |   `-CStyleCastExpr 0x557fd9fe3678 <col:44, col:52> 'void *' <NullToPointer>
    |     `-IntegerLiteral 0x557fd9fe3640 <col:52> 'int' 0
    |-DeclStmt 0x557fd9fe37c0 <line:820:3, col:18>
    | `-VarDecl 0x557fd9fe3758 <col:3, col:13> col:13 used t1784 'pthread_t':'unsigned long'
    |-CallExpr 0x557fd9fe3968 <line:821:3, col:54> 'int'
    | |-ImplicitCastExpr 0x557fd9fe3950 <col:3> 'int (*)(pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x557fd9fe37d8 <col:3> 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' Function 0x557fd9fbf488 'pthread_create' 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)'
    | |-UnaryOperator 0x557fd9fe3818 <col:18, col:19> 'pthread_t *' prefix '&' cannot overflow
    | | `-DeclRefExpr 0x557fd9fe37f8 <col:19> 'pthread_t':'unsigned long' lvalue Var 0x557fd9fe3758 't1784' 'pthread_t':'unsigned long'
    | |-ImplicitCastExpr 0x557fd9fe39a8 <col:26, col:36> 'const pthread_attr_t *' <NullToPointer>
    | | `-ParenExpr 0x557fd9fe3890 <col:26, col:36> 'void *'
    | |   `-CStyleCastExpr 0x557fd9fe3868 <col:27, col:35> 'void *' <NullToPointer>
    | |     `-IntegerLiteral 0x557fd9fe3830 <col:35> 'int' 0
    | |-ImplicitCastExpr 0x557fd9fe39c0 <col:39> 'void *(*)(void *)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x557fd9fe38b0 <col:39> 'void *(void *)' Function 0x557fd9fe1b90 'P2' 'void *(void *)'
    | `-ParenExpr 0x557fd9fe3930 <col:43, col:53> 'void *'
    |   `-CStyleCastExpr 0x557fd9fe3908 <col:44, col:52> 'void *' <NullToPointer>
    |     `-IntegerLiteral 0x557fd9fe38d0 <col:52> 'int' 0
    |-CallExpr 0x557fd9fe3a10 <line:822:3, col:27> 'void'
    | `-ImplicitCastExpr 0x557fd9fe39f8 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x557fd9fe39d8 <col:3> 'void ()' Function 0x557fd9f7ee40 '__VERIFIER_atomic_begin' 'void ()'
    |-BinaryOperator 0x557fd9fe3ae0 <line:823:3, col:41> '_Bool' '='
    | |-DeclRefExpr 0x557fd9fe3a30 <col:3> '_Bool' lvalue Var 0x557fd9fd8d10 'main$tmp_guard0' '_Bool'
    | `-ImplicitCastExpr 0x557fd9fe3ac8 <col:21, col:41> '_Bool' <IntegralToBoolean>
    |   `-BinaryOperator 0x557fd9fe3aa8 <col:21, col:41> 'int' '=='
    |     |-ImplicitCastExpr 0x557fd9fe3a90 <col:21> 'int' <LValueToRValue>
    |     | `-DeclRefExpr 0x557fd9fe3a50 <col:21> 'int' lvalue Var 0x557fd9fd8120 '__unbuffered_cnt' 'int'
    |     `-IntegerLiteral 0x557fd9fe3a70 <col:41> 'int' 3
    |-CallExpr 0x557fd9fe3b38 <line:824:3, col:25> 'void'
    | `-ImplicitCastExpr 0x557fd9fe3b20 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x557fd9fe3b00 <col:3> 'void ()' Function 0x557fd9f7ef00 '__VERIFIER_atomic_end' 'void ()'
    |-CallExpr 0x557fd9fe3bc8 <line:825:3, col:36> 'void'
    | |-ImplicitCastExpr 0x557fd9fe3bb0 <col:3> 'void (*)(int)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x557fd9fe3b58 <col:3> 'void (int)' Function 0x557fd9f7e790 '__VERIFIER_assume' 'void (int)'
    | `-ImplicitCastExpr 0x557fd9fe3c08 <col:21> 'int' <IntegralCast>
    |   `-ImplicitCastExpr 0x557fd9fe3bf0 <col:21> '_Bool' <LValueToRValue>
    |     `-DeclRefExpr 0x557fd9fe3b78 <col:21> '_Bool' lvalue Var 0x557fd9fd8d10 'main$tmp_guard0' '_Bool'
    |-CallExpr 0x557fd9fe3c58 <line:826:3, col:27> 'void'
    | `-ImplicitCastExpr 0x557fd9fe3c40 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x557fd9fe3c20 <col:3> 'void ()' Function 0x557fd9f7ee40 '__VERIFIER_atomic_begin' 'void ()'
    |-BinaryOperator 0x557fd9fe3f40 <line:827:3, col:103> 'int' '='
    | |-DeclRefExpr 0x557fd9fe3c78 <col:3> 'int' lvalue Var 0x557fd9fd8e88 'x' 'int'
    | `-ConditionalOperator 0x557fd9fe3f10 <col:7, col:103> 'int'
    |   |-BinaryOperator 0x557fd9fe3d38 <col:7, col:25> 'int' '&&'
    |   | |-ImplicitCastExpr 0x557fd9fe3cf0 <col:7> 'int' <IntegralCast>
    |   | | `-ImplicitCastExpr 0x557fd9fe3cd8 <col:7> '_Bool' <LValueToRValue>
    |   | |   `-DeclRefExpr 0x557fd9fe3c98 <col:7> '_Bool' lvalue Var 0x557fd9fd9550 'x$w_buff0_used' '_Bool'
    |   | `-ImplicitCastExpr 0x557fd9fe3d20 <col:25> 'int' <IntegralCast>
    |   |   `-ImplicitCastExpr 0x557fd9fe3d08 <col:25> '_Bool' <LValueToRValue>
    |   |     `-DeclRefExpr 0x557fd9fe3cb8 <col:25> '_Bool' lvalue Var 0x557fd9fd9018 'x$r_buff0_thd0' '_Bool'
    |   |-ImplicitCastExpr 0x557fd9fe3ef8 <col:42> 'int' <LValueToRValue>
    |   | `-DeclRefExpr 0x557fd9fe3d58 <col:42> 'int' lvalue Var 0x557fd9fd94d8 'x$w_buff0' 'int'
    |   `-ParenExpr 0x557fd9fe3ed8 <col:54, col:103> 'int'
    |     `-ConditionalOperator 0x557fd9fe3ea8 <col:55, col:102> 'int'
    |       |-BinaryOperator 0x557fd9fe3e18 <col:55, col:73> 'int' '&&'
    |       | |-ImplicitCastExpr 0x557fd9fe3dd0 <col:55> 'int' <IntegralCast>
    |       | | `-ImplicitCastExpr 0x557fd9fe3db8 <col:55> '_Bool' <LValueToRValue>
    |       | |   `-DeclRefExpr 0x557fd9fe3d78 <col:55> '_Bool' lvalue Var 0x557fd9fd9648 'x$w_buff1_used' '_Bool'
    |       | `-ImplicitCastExpr 0x557fd9fe3e00 <col:73> 'int' <IntegralCast>
    |       |   `-ImplicitCastExpr 0x557fd9fe3de8 <col:73> '_Bool' <LValueToRValue>
    |       |     `-DeclRefExpr 0x557fd9fe3d98 <col:73> '_Bool' lvalue Var 0x557fd9fd91f8 'x$r_buff1_thd0' '_Bool'
    |       |-ImplicitCastExpr 0x557fd9fe3e78 <col:90> 'int' <LValueToRValue>
    |       | `-DeclRefExpr 0x557fd9fe3e38 <col:90> 'int' lvalue Var 0x557fd9fd95d0 'x$w_buff1' 'int'
    |       `-ImplicitCastExpr 0x557fd9fe3e90 <col:102> 'int' <LValueToRValue>
    |         `-DeclRefExpr 0x557fd9fe3e58 <col:102> 'int' lvalue Var 0x557fd9fd8e88 'x' 'int'
    |-BinaryOperator 0x557fd9fe4148 <line:828:3, col:66> '_Bool' '='
    | |-DeclRefExpr 0x557fd9fe3f60 <col:3> '_Bool' lvalue Var 0x557fd9fd9550 'x$w_buff0_used' '_Bool'
    | `-ImplicitCastExpr 0x557fd9fe4130 <col:20, col:66> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x557fd9fe4100 <col:20, col:66> 'int'
    |     |-BinaryOperator 0x557fd9fe4020 <col:20, col:38> 'int' '&&'
    |     | |-ImplicitCastExpr 0x557fd9fe3fd8 <col:20> 'int' <IntegralCast>
    |     | | `-ImplicitCastExpr 0x557fd9fe3fc0 <col:20> '_Bool' <LValueToRValue>
    |     | |   `-DeclRefExpr 0x557fd9fe3f80 <col:20> '_Bool' lvalue Var 0x557fd9fd9550 'x$w_buff0_used' '_Bool'
    |     | `-ImplicitCastExpr 0x557fd9fe4008 <col:38> 'int' <IntegralCast>
    |     |   `-ImplicitCastExpr 0x557fd9fe3ff0 <col:38> '_Bool' <LValueToRValue>
    |     |     `-DeclRefExpr 0x557fd9fe3fa0 <col:38> '_Bool' lvalue Var 0x557fd9fd9018 'x$r_buff0_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x557fd9fe40b8 <col:55, col:62> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x557fd9fe4070 <col:55, col:62> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x557fd9fe4040 <col:62> 'int' 0
    |     `-ImplicitCastExpr 0x557fd9fe40e8 <col:66> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x557fd9fe40d0 <col:66> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x557fd9fe4098 <col:66> '_Bool' lvalue Var 0x557fd9fd9550 'x$w_buff0_used' '_Bool'
    |-BinaryOperator 0x557fd9fe4430 <line:829:3, col:102> '_Bool' '='
    | |-DeclRefExpr 0x557fd9fe4168 <col:3> '_Bool' lvalue Var 0x557fd9fd9648 'x$w_buff1_used' '_Bool'
    | `-ImplicitCastExpr 0x557fd9fe4418 <col:20, col:102> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x557fd9fe43e8 <col:20, col:102> 'int'
    |     |-BinaryOperator 0x557fd9fe4308 <col:20, col:74> 'int' '||'
    |     | |-BinaryOperator 0x557fd9fe4228 <col:20, col:38> 'int' '&&'
    |     | | |-ImplicitCastExpr 0x557fd9fe41e0 <col:20> 'int' <IntegralCast>
    |     | | | `-ImplicitCastExpr 0x557fd9fe41c8 <col:20> '_Bool' <LValueToRValue>
    |     | | |   `-DeclRefExpr 0x557fd9fe4188 <col:20> '_Bool' lvalue Var 0x557fd9fd9550 'x$w_buff0_used' '_Bool'
    |     | | `-ImplicitCastExpr 0x557fd9fe4210 <col:38> 'int' <IntegralCast>
    |     | |   `-ImplicitCastExpr 0x557fd9fe41f8 <col:38> '_Bool' <LValueToRValue>
    |     | |     `-DeclRefExpr 0x557fd9fe41a8 <col:38> '_Bool' lvalue Var 0x557fd9fd9018 'x$r_buff0_thd0' '_Bool'
    |     | `-BinaryOperator 0x557fd9fe42e8 <col:56, col:74> 'int' '&&'
    |     |   |-ImplicitCastExpr 0x557fd9fe42a0 <col:56> 'int' <IntegralCast>
    |     |   | `-ImplicitCastExpr 0x557fd9fe4288 <col:56> '_Bool' <LValueToRValue>
    |     |   |   `-DeclRefExpr 0x557fd9fe4248 <col:56> '_Bool' lvalue Var 0x557fd9fd9648 'x$w_buff1_used' '_Bool'
    |     |   `-ImplicitCastExpr 0x557fd9fe42d0 <col:74> 'int' <IntegralCast>
    |     |     `-ImplicitCastExpr 0x557fd9fe42b8 <col:74> '_Bool' <LValueToRValue>
    |     |       `-DeclRefExpr 0x557fd9fe4268 <col:74> '_Bool' lvalue Var 0x557fd9fd91f8 'x$r_buff1_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x557fd9fe43a0 <col:91, col:98> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x557fd9fe4358 <col:91, col:98> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x557fd9fe4328 <col:98> 'int' 0
    |     `-ImplicitCastExpr 0x557fd9fe43d0 <col:102> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x557fd9fe43b8 <col:102> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x557fd9fe4380 <col:102> '_Bool' lvalue Var 0x557fd9fd9648 'x$w_buff1_used' '_Bool'
    |-BinaryOperator 0x557fd9fe4638 <line:830:3, col:66> '_Bool' '='
    | |-DeclRefExpr 0x557fd9fe4450 <col:3> '_Bool' lvalue Var 0x557fd9fd9018 'x$r_buff0_thd0' '_Bool'
    | `-ImplicitCastExpr 0x557fd9fe4620 <col:20, col:66> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x557fd9fe45f0 <col:20, col:66> 'int'
    |     |-BinaryOperator 0x557fd9fe4510 <col:20, col:38> 'int' '&&'
    |     | |-ImplicitCastExpr 0x557fd9fe44c8 <col:20> 'int' <IntegralCast>
    |     | | `-ImplicitCastExpr 0x557fd9fe44b0 <col:20> '_Bool' <LValueToRValue>
    |     | |   `-DeclRefExpr 0x557fd9fe4470 <col:20> '_Bool' lvalue Var 0x557fd9fd9550 'x$w_buff0_used' '_Bool'
    |     | `-ImplicitCastExpr 0x557fd9fe44f8 <col:38> 'int' <IntegralCast>
    |     |   `-ImplicitCastExpr 0x557fd9fe44e0 <col:38> '_Bool' <LValueToRValue>
    |     |     `-DeclRefExpr 0x557fd9fe4490 <col:38> '_Bool' lvalue Var 0x557fd9fd9018 'x$r_buff0_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x557fd9fe45a8 <col:55, col:62> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x557fd9fe4560 <col:55, col:62> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x557fd9fe4530 <col:62> 'int' 0
    |     `-ImplicitCastExpr 0x557fd9fe45d8 <col:66> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x557fd9fe45c0 <col:66> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x557fd9fe4588 <col:66> '_Bool' lvalue Var 0x557fd9fd9018 'x$r_buff0_thd0' '_Bool'
    |-BinaryOperator 0x557fd9fe4920 <line:831:3, col:102> '_Bool' '='
    | |-DeclRefExpr 0x557fd9fe4658 <col:3> '_Bool' lvalue Var 0x557fd9fd91f8 'x$r_buff1_thd0' '_Bool'
    | `-ImplicitCastExpr 0x557fd9fe4908 <col:20, col:102> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x557fd9fe48d8 <col:20, col:102> 'int'
    |     |-BinaryOperator 0x557fd9fe47f8 <col:20, col:74> 'int' '||'
    |     | |-BinaryOperator 0x557fd9fe4718 <col:20, col:38> 'int' '&&'
    |     | | |-ImplicitCastExpr 0x557fd9fe46d0 <col:20> 'int' <IntegralCast>
    |     | | | `-ImplicitCastExpr 0x557fd9fe46b8 <col:20> '_Bool' <LValueToRValue>
    |     | | |   `-DeclRefExpr 0x557fd9fe4678 <col:20> '_Bool' lvalue Var 0x557fd9fd9550 'x$w_buff0_used' '_Bool'
    |     | | `-ImplicitCastExpr 0x557fd9fe4700 <col:38> 'int' <IntegralCast>
    |     | |   `-ImplicitCastExpr 0x557fd9fe46e8 <col:38> '_Bool' <LValueToRValue>
    |     | |     `-DeclRefExpr 0x557fd9fe4698 <col:38> '_Bool' lvalue Var 0x557fd9fd9018 'x$r_buff0_thd0' '_Bool'
    |     | `-BinaryOperator 0x557fd9fe47d8 <col:56, col:74> 'int' '&&'
    |     |   |-ImplicitCastExpr 0x557fd9fe4790 <col:56> 'int' <IntegralCast>
    |     |   | `-ImplicitCastExpr 0x557fd9fe4778 <col:56> '_Bool' <LValueToRValue>
    |     |   |   `-DeclRefExpr 0x557fd9fe4738 <col:56> '_Bool' lvalue Var 0x557fd9fd9648 'x$w_buff1_used' '_Bool'
    |     |   `-ImplicitCastExpr 0x557fd9fe47c0 <col:74> 'int' <IntegralCast>
    |     |     `-ImplicitCastExpr 0x557fd9fe47a8 <col:74> '_Bool' <LValueToRValue>
    |     |       `-DeclRefExpr 0x557fd9fe4758 <col:74> '_Bool' lvalue Var 0x557fd9fd91f8 'x$r_buff1_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x557fd9fe4890 <col:91, col:98> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x557fd9fe4848 <col:91, col:98> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x557fd9fe4818 <col:98> 'int' 0
    |     `-ImplicitCastExpr 0x557fd9fe48c0 <col:102> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x557fd9fe48a8 <col:102> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x557fd9fe4870 <col:102> '_Bool' lvalue Var 0x557fd9fd91f8 'x$r_buff1_thd0' '_Bool'
    |-CallExpr 0x557fd9fe4978 <line:832:3, col:25> 'void'
    | `-ImplicitCastExpr 0x557fd9fe4960 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x557fd9fe4940 <col:3> 'void ()' Function 0x557fd9f7ef00 '__VERIFIER_atomic_end' 'void ()'
    |-CallExpr 0x557fd9fe49d0 <line:833:3, col:27> 'void'
    | `-ImplicitCastExpr 0x557fd9fe49b8 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x557fd9fe4998 <col:3> 'void ()' Function 0x557fd9f7ee40 '__VERIFIER_atomic_begin' 'void ()'
    |-BinaryOperator 0x557fd9fe4a80 <line:834:3, col:45> '_Bool' '='
    | |-DeclRefExpr 0x557fd9fe49f0 <col:3> '_Bool' lvalue Var 0x557fd9fd9858 'weak$$choice1' '_Bool'
    | `-ImplicitCastExpr 0x557fd9fe4a68 <col:19, col:45> '_Bool' <PointerToBoolean>
    |   `-CallExpr 0x557fd9fe4a48 <col:19, col:45> 'void *'
    |     `-ImplicitCastExpr 0x557fd9fe4a30 <col:19> 'void *(*)(void)' <FunctionToPointerDecay>
    |       `-DeclRefExpr 0x557fd9fe4a10 <col:19> 'void *(void)' Function 0x557fd9f7e958 '__VERIFIER_nondet_pointer' 'void *(void)'
    |-BinaryOperator 0x557fd9fe4cd8 <line:835:3, col:140> 'int' '='
    | |-DeclRefExpr 0x557fd9fe4aa0 <col:3> 'int' lvalue Var 0x557fd9fd8360 '__unbuffered_p1_EAX' 'int'
    | `-ConditionalOperator 0x557fd9fe4ca8 <col:25, col:140> 'int'
    |   |-ImplicitCastExpr 0x557fd9fe4c78 <col:25> 'int' <IntegralCast>
    |   | `-ImplicitCastExpr 0x557fd9fe4c60 <col:25> '_Bool' <LValueToRValue>
    |   |   `-DeclRefExpr 0x557fd9fe4ac0 <col:25> '_Bool' lvalue Var 0x557fd9fd88b0 '__unbuffered_p1_EAX$read_delayed' '_Bool'
    |   |-ParenExpr 0x557fd9fe4c20 <col:60, col:136> 'int'
    |   | `-ConditionalOperator 0x557fd9fe4bf0 <col:61, col:117> 'int'
    |   |   |-ImplicitCastExpr 0x557fd9fe4b88 <col:61> 'int' <IntegralCast>
    |   |   | `-ImplicitCastExpr 0x557fd9fe4b70 <col:61> '_Bool' <LValueToRValue>
    |   |   |   `-DeclRefExpr 0x557fd9fe4ae0 <col:61> '_Bool' lvalue Var 0x557fd9fd9858 'weak$$choice1' '_Bool'
    |   |   |-ImplicitCastExpr 0x557fd9fe4bc0 <col:77, col:78> 'int' <LValueToRValue>
    |   |   | `-UnaryOperator 0x557fd9fe4b38 <col:77, col:78> 'int' lvalue prefix '*' cannot overflow
    |   |   |   `-ImplicitCastExpr 0x557fd9fe4b20 <col:78> 'int *' <LValueToRValue>
    |   |   |     `-DeclRefExpr 0x557fd9fe4b00 <col:78> 'int *' lvalue Var 0x557fd9fd8930 '__unbuffered_p1_EAX$read_delayed_var' 'int *'
    |   |   `-ImplicitCastExpr 0x557fd9fe4bd8 <col:117> 'int' <LValueToRValue>
    |   |     `-DeclRefExpr 0x557fd9fe4b50 <col:117> 'int' lvalue Var 0x557fd9fd8360 '__unbuffered_p1_EAX' 'int'
    |   `-ImplicitCastExpr 0x557fd9fe4c90 <col:140> 'int' <LValueToRValue>
    |     `-DeclRefExpr 0x557fd9fe4c40 <col:140> 'int' lvalue Var 0x557fd9fd8360 '__unbuffered_p1_EAX' 'int'
    |-BinaryOperator 0x557fd9fe4fa8 <line:836:3, col:113> '_Bool' '='
    | |-DeclRefExpr 0x557fd9fe4cf8 <col:3> '_Bool' lvalue Var 0x557fd9fd8d88 'main$tmp_guard1' '_Bool'
    | `-ImplicitCastExpr 0x557fd9fe4f90 <col:21, col:113> '_Bool' <IntegralToBoolean>
    |   `-UnaryOperator 0x557fd9fe4f78 <col:21, col:113> 'int' prefix '!' cannot overflow
    |     `-ParenExpr 0x557fd9fe4f58 <col:22, col:113> 'int'
    |       `-BinaryOperator 0x557fd9fe4f38 <col:23, col:112> 'int' '&&'
    |         |-BinaryOperator 0x557fd9fe4ea0 <col:23, col:84> 'int' '&&'
    |         | |-BinaryOperator 0x557fd9fe4e08 <col:23, col:56> 'int' '&&'
    |         | | |-BinaryOperator 0x557fd9fe4d70 <col:23, col:28> 'int' '=='
    |         | | | |-ImplicitCastExpr 0x557fd9fe4d58 <col:23> 'int' <LValueToRValue>
    |         | | | | `-DeclRefExpr 0x557fd9fe4d18 <col:23> 'int' lvalue Var 0x557fd9fd9748 'y' 'int'
    |         | | | `-IntegerLiteral 0x557fd9fe4d38 <col:28> 'int' 2
    |         | | `-BinaryOperator 0x557fd9fe4de8 <col:33, col:56> 'int' '=='
    |         | |   |-ImplicitCastExpr 0x557fd9fe4dd0 <col:33> 'int' <LValueToRValue>
    |         | |   | `-DeclRefExpr 0x557fd9fe4d90 <col:33> 'int' lvalue Var 0x557fd9fd8240 '__unbuffered_p0_EAX' 'int'
    |         | |   `-IntegerLiteral 0x557fd9fe4db0 <col:56> 'int' 2
    |         | `-BinaryOperator 0x557fd9fe4e80 <col:61, col:84> 'int' '=='
    |         |   |-ImplicitCastExpr 0x557fd9fe4e68 <col:61> 'int' <LValueToRValue>
    |         |   | `-DeclRefExpr 0x557fd9fe4e28 <col:61> 'int' lvalue Var 0x557fd9fd8360 '__unbuffered_p1_EAX' 'int'
    |         |   `-IntegerLiteral 0x557fd9fe4e48 <col:84> 'int' 1
    |         `-BinaryOperator 0x557fd9fe4f18 <col:89, col:112> 'int' '=='
    |           |-ImplicitCastExpr 0x557fd9fe4f00 <col:89> 'int' <LValueToRValue>
    |           | `-DeclRefExpr 0x557fd9fe4ec0 <col:89> 'int' lvalue Var 0x557fd9fd8c78 '__unbuffered_p2_EAX' 'int'
    |           `-IntegerLiteral 0x557fd9fe4ee0 <col:112> 'int' 1
    |-CallExpr 0x557fd9fe5000 <line:837:3, col:25> 'void'
    | `-ImplicitCastExpr 0x557fd9fe4fe8 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x557fd9fe4fc8 <col:3> 'void ()' Function 0x557fd9f7ef00 '__VERIFIER_atomic_end' 'void ()'
    |-CallExpr 0x557fd9fe5078 <line:838:3, col:36> 'void'
    | |-ImplicitCastExpr 0x557fd9fe5060 <col:3> 'void (*)(int)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x557fd9fe5020 <col:3> 'void (int)' Function 0x557fd9f7ebc8 '__VERIFIER_assert' 'void (int)'
    | `-ImplicitCastExpr 0x557fd9fe50b8 <col:21> 'int' <IntegralCast>
    |   `-ImplicitCastExpr 0x557fd9fe50a0 <col:21> '_Bool' <LValueToRValue>
    |     `-DeclRefExpr 0x557fd9fe5040 <col:21> '_Bool' lvalue Var 0x557fd9fd8d88 'main$tmp_guard1' '_Bool'
    `-ReturnStmt 0x557fd9fe50f0 <line:839:3, col:10>
      `-IntegerLiteral 0x557fd9fe50d0 <col:10> 'int' 0
