TranslationUnitDecl 0x5640a1146e18 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x5640a11476d8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x5640a11473b0 '__int128'
|-TypedefDecl 0x5640a1147748 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x5640a11473d0 'unsigned __int128'
|-TypedefDecl 0x5640a1147a50 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x5640a1147820 'struct __NSConstantString_tag'
|   `-Record 0x5640a11477a0 '__NSConstantString_tag'
|-TypedefDecl 0x5640a1147af8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x5640a1147ab0 'char *'
|   `-BuiltinType 0x5640a1146eb0 'char'
|-TypedefDecl 0x5640a1186650 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'struct __va_list_tag [1]'
| `-ConstantArrayType 0x5640a1147d90 'struct __va_list_tag [1]' 1 
|   `-RecordType 0x5640a1147bd0 'struct __va_list_tag'
|     `-Record 0x5640a1147b50 '__va_list_tag'
|-FunctionDecl 0x5640a1186790 <./split_9/mix050_rmo.oepc_false-unreach-call.i:1:1, col:34> col:13 used __VERIFIER_assume 'void (int)' extern
| `-ParmVarDecl 0x5640a11866c0 <col:31> col:34 'int'
|-FunctionDecl 0x5640a1186958 <line:2:1, col:45> col:15 used __VERIFIER_nondet_pointer 'void *(void)' extern
|-FunctionDecl 0x5640a1186a80 <line:3:1, col:61> col:13 used __VERIFIER_error 'void () __attribute__((noreturn))' extern
|-FunctionDecl 0x5640a1186bc8 <line:4:1, col:99> col:6 used __VERIFIER_assert 'void (int)'
| |-ParmVarDecl 0x5640a1186b38 <col:24, col:28> col:28 used expression 'int'
| `-CompoundStmt 0x5640a1186df8 <col:40, col:99>
|   |-IfStmt 0x5640a1186dc8 <col:42, col:88>
|   | |-UnaryOperator 0x5640a1186ca8 <col:46, col:47> 'int' prefix '!' cannot overflow
|   | | `-ImplicitCastExpr 0x5640a1186c90 <col:47> 'int' <LValueToRValue>
|   | |   `-DeclRefExpr 0x5640a1186c70 <col:47> 'int' lvalue ParmVar 0x5640a1186b38 'expression' 'int'
|   | `-CompoundStmt 0x5640a1186db0 <col:59, col:88>
|   |   `-LabelStmt 0x5640a1186d98 <col:61, col:85> 'ERROR'
|   |     `-CallExpr 0x5640a1186d28 <col:68, col:85> 'void'
|   |       `-ImplicitCastExpr 0x5640a1186d10 <col:68> 'void (*)() __attribute__((noreturn))' <FunctionToPointerDecay>
|   |         `-DeclRefExpr 0x5640a1186cc0 <col:68> 'void () __attribute__((noreturn))' Function 0x5640a1186a80 '__VERIFIER_error' 'void () __attribute__((noreturn))'
|   |-NullStmt 0x5640a1186de0 <col:89>
|   `-ReturnStmt 0x5640a1186de8 <col:91>
|-FunctionDecl 0x5640a1186e40 <line:5:1, col:37> col:13 used __VERIFIER_atomic_begin 'void ()' extern
|-FunctionDecl 0x5640a1186f00 <line:6:1, col:35> col:13 used __VERIFIER_atomic_end 'void ()' extern
|-FunctionDecl 0x5640a1187280 <line:8:1, line:10:76> line:8:13 __assert_fail 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x5640a1186fb8 <col:28, col:40> col:40 __assertion 'const char *'
| |-ParmVarDecl 0x5640a1187038 <col:53, col:65> col:65 __file 'const char *'
| |-ParmVarDecl 0x5640a11870b8 <line:9:7, col:20> col:20 __line 'unsigned int'
| |-ParmVarDecl 0x5640a1187138 <col:28, col:40> col:40 __function 'const char *'
| `-NoThrowAttr 0x5640a1187340 <line:10:22>
|-FunctionDecl 0x5640a11ad390 <line:11:1, line:13:76> line:11:13 __assert_perror_fail 'void (int, const char *, unsigned int, const char *) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x5640a11873b0 <col:35, col:39> col:39 __errnum 'int'
| |-ParmVarDecl 0x5640a1187430 <col:49, col:61> col:61 __file 'const char *'
| |-ParmVarDecl 0x5640a11874b0 <line:12:7, col:20> col:20 __line 'unsigned int'
| |-ParmVarDecl 0x5640a1187530 <col:28, col:40> col:40 __function 'const char *'
| `-NoThrowAttr 0x5640a11ad450 <line:13:22>
|-FunctionDecl 0x5640a11ad700 <line:14:1, line:15:76> line:14:13 __assert 'void (const char *, const char *, int) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x5640a11ad4c0 <col:23, col:35> col:35 __assertion 'const char *'
| |-ParmVarDecl 0x5640a11ad540 <col:48, col:60> col:60 __file 'const char *'
| |-ParmVarDecl 0x5640a11ad5c0 <col:68, col:72> col:72 __line 'int'
| `-NoThrowAttr 0x5640a11ad7b8 <line:15:22>
|-TypedefDecl 0x5640a11ad828 <line:17:1, col:23> col:23 __u_char 'unsigned char'
| `-BuiltinType 0x5640a1146f70 'unsigned char'
|-TypedefDecl 0x5640a11ad898 <line:18:1, col:28> col:28 __u_short 'unsigned short'
| `-BuiltinType 0x5640a1146f90 'unsigned short'
|-TypedefDecl 0x5640a11ad908 <line:19:1, col:22> col:22 __u_int 'unsigned int'
| `-BuiltinType 0x5640a1146fb0 'unsigned int'
|-TypedefDecl 0x5640a11ad978 <line:20:1, col:27> col:27 __u_long 'unsigned long'
| `-BuiltinType 0x5640a1146fd0 'unsigned long'
|-TypedefDecl 0x5640a11ad9e8 <line:21:1, col:21> col:21 __int8_t 'signed char'
| `-BuiltinType 0x5640a1146ed0 'signed char'
|-TypedefDecl 0x5640a11ada58 <line:22:1, col:23> col:23 __uint8_t 'unsigned char'
| `-BuiltinType 0x5640a1146f70 'unsigned char'
|-TypedefDecl 0x5640a11adac8 <line:23:1, col:26> col:26 __int16_t 'short'
| `-BuiltinType 0x5640a1146ef0 'short'
|-TypedefDecl 0x5640a11adb38 <line:24:1, col:28> col:28 __uint16_t 'unsigned short'
| `-BuiltinType 0x5640a1146f90 'unsigned short'
|-TypedefDecl 0x5640a11adba8 <line:25:1, col:20> col:20 __int32_t 'int'
| `-BuiltinType 0x5640a1146f10 'int'
|-TypedefDecl 0x5640a11adc18 <line:26:1, col:22> col:22 __uint32_t 'unsigned int'
| `-BuiltinType 0x5640a1146fb0 'unsigned int'
|-TypedefDecl 0x5640a11adc88 <line:27:1, col:25> col:25 __int64_t 'long'
| `-BuiltinType 0x5640a1146f30 'long'
|-TypedefDecl 0x5640a11adcf8 <line:28:1, col:27> col:27 referenced __uint64_t 'unsigned long'
| `-BuiltinType 0x5640a1146fd0 'unsigned long'
|-TypedefDecl 0x5640a11add68 <line:29:1, col:18> col:18 referenced __quad_t 'long'
| `-BuiltinType 0x5640a1146f30 'long'
|-TypedefDecl 0x5640a11addd8 <line:30:1, col:27> col:27 __u_quad_t 'unsigned long'
| `-BuiltinType 0x5640a1146fd0 'unsigned long'
|-TypedefDecl 0x5640a11ade48 <line:31:1, col:27> col:27 __dev_t 'unsigned long'
| `-BuiltinType 0x5640a1146fd0 'unsigned long'
|-TypedefDecl 0x5640a11adeb8 <line:32:1, col:22> col:22 __uid_t 'unsigned int'
| `-BuiltinType 0x5640a1146fb0 'unsigned int'
|-TypedefDecl 0x5640a11adf28 <line:33:1, col:22> col:22 __gid_t 'unsigned int'
| `-BuiltinType 0x5640a1146fb0 'unsigned int'
|-TypedefDecl 0x5640a11adf98 <line:34:1, col:27> col:27 __ino_t 'unsigned long'
| `-BuiltinType 0x5640a1146fd0 'unsigned long'
|-TypedefDecl 0x5640a11ae008 <line:35:1, col:27> col:27 __ino64_t 'unsigned long'
| `-BuiltinType 0x5640a1146fd0 'unsigned long'
|-TypedefDecl 0x5640a11ae078 <line:36:1, col:22> col:22 __mode_t 'unsigned int'
| `-BuiltinType 0x5640a1146fb0 'unsigned int'
|-TypedefDecl 0x5640a11ae0e8 <line:37:1, col:27> col:27 __nlink_t 'unsigned long'
| `-BuiltinType 0x5640a1146fd0 'unsigned long'
|-TypedefDecl 0x5640a11ae158 <line:38:1, col:18> col:18 __off_t 'long'
| `-BuiltinType 0x5640a1146f30 'long'
|-TypedefDecl 0x5640a11ae1c8 <line:39:1, col:18> col:18 referenced __off64_t 'long'
| `-BuiltinType 0x5640a1146f30 'long'
|-TypedefDecl 0x5640a11ae238 <line:40:1, col:13> col:13 referenced __pid_t 'int'
| `-BuiltinType 0x5640a1146f10 'int'
|-RecordDecl 0x5640a11ae290 <line:41:9, col:32> col:9 struct definition
| `-FieldDecl 0x5640a11ae408 <col:18, col:29> col:22 __val 'int [2]'
|-TypedefDecl 0x5640a11ae4c0 <col:1, col:34> col:34 __fsid_t 'struct __fsid_t':'__fsid_t'
| `-ElaboratedType 0x5640a11ae460 'struct __fsid_t' sugar
|   `-RecordType 0x5640a11ae310 '__fsid_t'
|     `-Record 0x5640a11ae290 ''
|-TypedefDecl 0x5640a11ae548 <line:42:1, col:18> col:18 referenced __clock_t 'long'
| `-BuiltinType 0x5640a1146f30 'long'
|-TypedefDecl 0x5640a11ae5b8 <line:43:1, col:27> col:27 __rlim_t 'unsigned long'
| `-BuiltinType 0x5640a1146fd0 'unsigned long'
|-TypedefDecl 0x5640a11ae628 <line:44:1, col:27> col:27 __rlim64_t 'unsigned long'
| `-BuiltinType 0x5640a1146fd0 'unsigned long'
|-TypedefDecl 0x5640a11ae698 <line:45:1, col:22> col:22 __id_t 'unsigned int'
| `-BuiltinType 0x5640a1146fb0 'unsigned int'
|-TypedefDecl 0x5640a11ae708 <line:46:1, col:18> col:18 referenced __time_t 'long'
| `-BuiltinType 0x5640a1146f30 'long'
|-TypedefDecl 0x5640a11ae778 <line:47:1, col:22> col:22 __useconds_t 'unsigned int'
| `-BuiltinType 0x5640a1146fb0 'unsigned int'
|-TypedefDecl 0x5640a11ae7e8 <line:48:1, col:18> col:18 __suseconds_t 'long'
| `-BuiltinType 0x5640a1146f30 'long'
|-TypedefDecl 0x5640a11ae858 <line:49:1, col:13> col:13 __daddr_t 'int'
| `-BuiltinType 0x5640a1146f10 'int'
|-TypedefDecl 0x5640a11ae8c8 <line:50:1, col:13> col:13 __key_t 'int'
| `-BuiltinType 0x5640a1146f10 'int'
|-TypedefDecl 0x5640a11ae938 <line:51:1, col:13> col:13 referenced __clockid_t 'int'
| `-BuiltinType 0x5640a1146f10 'int'
|-TypedefDecl 0x5640a11ae9a8 <line:52:1, col:16> col:16 referenced __timer_t 'void *'
| `-PointerType 0x5640a1147630 'void *'
|   `-BuiltinType 0x5640a1146e70 'void'
|-TypedefDecl 0x5640a11aea18 <line:53:1, col:18> col:18 __blksize_t 'long'
| `-BuiltinType 0x5640a1146f30 'long'
|-TypedefDecl 0x5640a11aea88 <line:54:1, col:18> col:18 __blkcnt_t 'long'
| `-BuiltinType 0x5640a1146f30 'long'
|-TypedefDecl 0x5640a11aeaf8 <line:55:1, col:18> col:18 __blkcnt64_t 'long'
| `-BuiltinType 0x5640a1146f30 'long'
|-TypedefDecl 0x5640a11aeb68 <line:56:1, col:27> col:27 __fsblkcnt_t 'unsigned long'
| `-BuiltinType 0x5640a1146fd0 'unsigned long'
|-TypedefDecl 0x5640a11aebd8 <line:57:1, col:27> col:27 __fsblkcnt64_t 'unsigned long'
| `-BuiltinType 0x5640a1146fd0 'unsigned long'
|-TypedefDecl 0x5640a11aec48 <line:58:1, col:27> col:27 __fsfilcnt_t 'unsigned long'
| `-BuiltinType 0x5640a1146fd0 'unsigned long'
|-TypedefDecl 0x5640a11aecb8 <line:59:1, col:27> col:27 __fsfilcnt64_t 'unsigned long'
| `-BuiltinType 0x5640a1146fd0 'unsigned long'
|-TypedefDecl 0x5640a11aed28 <line:60:1, col:18> col:18 __fsword_t 'long'
| `-BuiltinType 0x5640a1146f30 'long'
|-TypedefDecl 0x5640a11aed98 <line:61:1, col:18> col:18 __ssize_t 'long'
| `-BuiltinType 0x5640a1146f30 'long'
|-TypedefDecl 0x5640a11aee08 <line:62:1, col:18> col:18 referenced __syscall_slong_t 'long'
| `-BuiltinType 0x5640a1146f30 'long'
|-TypedefDecl 0x5640a11aee78 <line:63:1, col:27> col:27 __syscall_ulong_t 'unsigned long'
| `-BuiltinType 0x5640a1146fd0 'unsigned long'
|-TypedefDecl 0x5640a11aef08 <line:64:1, col:19> col:19 __loff_t '__off64_t':'long'
| `-TypedefType 0x5640a11aeed0 '__off64_t' sugar
|   |-Typedef 0x5640a11ae1c8 '__off64_t'
|   `-BuiltinType 0x5640a1146f30 'long'
|-TypedefDecl 0x5640a11af000 <line:65:1, col:19> col:19 __qaddr_t '__quad_t *'
| `-PointerType 0x5640a11aefc0 '__quad_t *'
|   `-TypedefType 0x5640a11aef60 '__quad_t' sugar
|     |-Typedef 0x5640a11add68 '__quad_t'
|     `-BuiltinType 0x5640a1146f30 'long'
|-TypedefDecl 0x5640a11af070 <line:66:1, col:15> col:15 __caddr_t 'char *'
| `-PointerType 0x5640a1147ab0 'char *'
|   `-BuiltinType 0x5640a1146eb0 'char'
|-TypedefDecl 0x5640a11af0e0 <line:67:1, col:18> col:18 __intptr_t 'long'
| `-BuiltinType 0x5640a1146f30 'long'
|-TypedefDecl 0x5640a11af150 <line:68:1, col:22> col:22 __socklen_t 'unsigned int'
| `-BuiltinType 0x5640a1146fb0 'unsigned int'
|-FunctionDecl 0x5640a11af298 <line:69:1, line:73:1> line:70:1 __bswap_32 'unsigned int (unsigned int)' static inline
| |-ParmVarDecl 0x5640a11af1c0 <col:13, col:26> col:26 used __bsx 'unsigned int'
| `-CompoundStmt 0x5640a11b05e8 <line:71:1, line:73:1>
|   `-ReturnStmt 0x5640a11b05d8 <line:72:3, col:34>
|     `-CallExpr 0x5640a11b0598 <col:10, col:34> 'unsigned int'
|       |-ImplicitCastExpr 0x5640a11b0580 <col:10> 'unsigned int (*)(unsigned int)' <BuiltinFnToFnPtr>
|       | `-DeclRefExpr 0x5640a11b0510 <col:10> '<builtin fn type>' Function 0x5640a11b0380 '__builtin_bswap32' 'unsigned int (unsigned int)'
|       `-ImplicitCastExpr 0x5640a11b05c0 <col:29> 'unsigned int' <LValueToRValue>
|         `-DeclRefExpr 0x5640a11b0530 <col:29> 'unsigned int' lvalue ParmVar 0x5640a11af1c0 '__bsx' 'unsigned int'
|-FunctionDecl 0x5640a11b0380 <col:10> col:10 implicit used __builtin_bswap32 'unsigned int (unsigned int)' extern
| |-ParmVarDecl 0x5640a11b0420 <<invalid sloc>> <invalid sloc> 'unsigned int'
| |-NoThrowAttr 0x5640a11b0490 <col:10> Implicit
| `-ConstAttr 0x5640a11b04e8 <col:10> Implicit
|-FunctionDecl 0x5640a11b0740 <line:74:1, line:78:1> line:75:1 __bswap_64 '__uint64_t (__uint64_t)' static inline
| |-ParmVarDecl 0x5640a11b0638 <col:13, col:24> col:24 used __bsx '__uint64_t':'unsigned long'
| `-CompoundStmt 0x5640a11b0a58 <line:76:1, line:78:1>
|   `-ReturnStmt 0x5640a11b0a48 <line:77:3, col:34>
|     `-CallExpr 0x5640a11b0a08 <col:10, col:34> 'unsigned long'
|       |-ImplicitCastExpr 0x5640a11b09f0 <col:10> 'unsigned long (*)(unsigned long)' <BuiltinFnToFnPtr>
|       | `-DeclRefExpr 0x5640a11b0978 <col:10> '<builtin fn type>' Function 0x5640a11b07e8 '__builtin_bswap64' 'unsigned long (unsigned long)'
|       `-ImplicitCastExpr 0x5640a11b0a30 <col:29> '__uint64_t':'unsigned long' <LValueToRValue>
|         `-DeclRefExpr 0x5640a11b0998 <col:29> '__uint64_t':'unsigned long' lvalue ParmVar 0x5640a11b0638 '__bsx' '__uint64_t':'unsigned long'
|-FunctionDecl 0x5640a11b07e8 <col:10> col:10 implicit used __builtin_bswap64 'unsigned long (unsigned long)' extern
| |-ParmVarDecl 0x5640a11b0888 <<invalid sloc>> <invalid sloc> 'unsigned long'
| |-NoThrowAttr 0x5640a11b08f8 <col:10> Implicit
| `-ConstAttr 0x5640a11b0950 <col:10> Implicit
|-TypedefDecl 0x5640a11b0a88 <line:79:1, col:27> col:27 referenced size_t 'unsigned long'
| `-BuiltinType 0x5640a1146fd0 'unsigned long'
|-TypedefDecl 0x5640a11b0b18 <line:81:1, col:18> col:18 referenced time_t '__time_t':'long'
| `-TypedefType 0x5640a11b0ae0 '__time_t' sugar
|   |-Typedef 0x5640a11ae708 '__time_t'
|   `-BuiltinType 0x5640a1146f30 'long'
|-RecordDecl 0x5640a11b0b70 <line:84:1, line:88:3> line:84:8 struct timespec definition
| |-FieldDecl 0x5640a11b0c28 <line:86:5, col:14> col:14 tv_sec '__time_t':'long'
| `-FieldDecl 0x5640a11b0cb8 <line:87:5, col:23> col:23 tv_nsec '__syscall_slong_t':'long'
|-TypedefDecl 0x5640a11b0d48 <line:89:1, col:17> col:17 referenced pid_t '__pid_t':'int'
| `-TypedefType 0x5640a11b0d10 '__pid_t' sugar
|   |-Typedef 0x5640a11ae238 '__pid_t'
|   `-BuiltinType 0x5640a1146f10 'int'
|-RecordDecl 0x5640a11b0da0 <line:90:1, line:93:3> line:90:8 struct sched_param definition
| `-FieldDecl 0x5640a11b0e60 <line:92:5, col:9> col:9 __sched_priority 'int'
|-RecordDecl 0x5640a11b0eb0 <line:96:1, line:99:3> line:96:8 struct __sched_param definition
| `-FieldDecl 0x5640a11b0f70 <line:98:5, col:9> col:9 __sched_priority 'int'
|-TypedefDecl 0x5640a11b0fd8 <line:100:1, col:27> col:27 referenced __cpu_mask 'unsigned long'
| `-BuiltinType 0x5640a1146fd0 'unsigned long'
|-RecordDecl 0x5640a11b1030 <line:101:9, line:104:1> line:101:9 struct definition
| `-FieldDecl 0x5640a11b12c0 <line:103:3, col:53> col:14 __bits '__cpu_mask [64]'
|-TypedefDecl 0x5640a11b23a0 <line:101:1, line:104:3> col:3 referenced cpu_set_t 'struct cpu_set_t':'cpu_set_t'
| `-ElaboratedType 0x5640a11b1310 'struct cpu_set_t' sugar
|   `-RecordType 0x5640a11b10b0 'cpu_set_t'
|     `-Record 0x5640a11b1030 ''
|-FunctionDecl 0x5640a11b2678 <line:106:1, line:107:42> line:106:12 __sched_cpucount 'int (size_t, const cpu_set_t *)' extern
| |-ParmVarDecl 0x5640a11b2448 <col:30, col:37> col:37 __setsize 'size_t':'unsigned long'
| |-ParmVarDecl 0x5640a11b2550 <col:48, col:65> col:65 __setp 'const cpu_set_t *'
| `-NoThrowAttr 0x5640a11b2728 <line:107:19>
|-FunctionDecl 0x5640a11b2900 <line:108:1, col:92> col:19 __sched_cpualloc 'cpu_set_t *(size_t)' extern
| |-ParmVarDecl 0x5640a11b2790 <col:37, col:44> col:44 __count 'size_t':'unsigned long'
| `-NoThrowAttr 0x5640a11b29a8 <col:69>
|-FunctionDecl 0x5640a11b2b20 <line:109:1, col:87> col:13 __sched_cpufree 'void (cpu_set_t *)' extern
| |-ParmVarDecl 0x5640a11b2a10 <col:30, col:41> col:41 __set 'cpu_set_t *'
| `-NoThrowAttr 0x5640a11b2bc8 <col:64>
|-FunctionDecl 0x5640a11b2e88 <line:112:1, line:113:45> line:112:12 sched_setparam 'int (__pid_t, const struct sched_param *)' extern
| |-ParmVarDecl 0x5640a11b2c30 <col:28, col:36> col:36 __pid '__pid_t':'int'
| |-ParmVarDecl 0x5640a11b2d68 <col:43, col:69> col:69 __param 'const struct sched_param *'
| `-NoThrowAttr 0x5640a11b2f38 <line:113:22>
|-FunctionDecl 0x5640a11b31b8 <line:114:1, col:111> col:12 sched_getparam 'int (__pid_t, struct sched_param *)' extern
| |-ParmVarDecl 0x5640a11b2fa0 <col:28, col:36> col:36 __pid '__pid_t':'int'
| |-ParmVarDecl 0x5640a11b3098 <col:43, col:63> col:63 __param 'struct sched_param *'
| `-NoThrowAttr 0x5640a11b3268 <col:88>
|-FunctionDecl 0x5640a11b3588 <line:115:1, line:116:85> line:115:12 sched_setscheduler 'int (__pid_t, int, const struct sched_param *)' extern
| |-ParmVarDecl 0x5640a11b32d0 <col:32, col:40> col:40 __pid '__pid_t':'int'
| |-ParmVarDecl 0x5640a11b33b0 <col:47, col:51> col:51 __policy 'int'
| |-ParmVarDecl 0x5640a11b3440 <line:116:11, col:37> col:37 __param 'const struct sched_param *'
| `-NoThrowAttr 0x5640a11b3640 <col:62>
|-FunctionDecl 0x5640a11b37b8 <line:117:1, col:86> col:12 sched_getscheduler 'int (__pid_t)' extern
| |-ParmVarDecl 0x5640a11b36a8 <col:32, col:40> col:40 __pid '__pid_t':'int'
| `-NoThrowAttr 0x5640a11b3860 <col:63>
|-FunctionDecl 0x5640a11b3988 <line:118:1, col:70> col:12 sched_yield 'int (void)' extern
| `-NoThrowAttr 0x5640a11b3a28 <col:47>
|-FunctionDecl 0x5640a11b3b30 <line:119:1, col:92> col:12 sched_get_priority_max 'int (int)' extern
| |-ParmVarDecl 0x5640a11b3a98 <col:36, col:40> col:40 __algorithm 'int'
| `-NoThrowAttr 0x5640a11b3bd8 <col:69>
|-FunctionDecl 0x5640a11b3ce0 <line:120:1, col:92> col:12 sched_get_priority_min 'int (int)' extern
| |-ParmVarDecl 0x5640a11b3c48 <col:36, col:40> col:40 __algorithm 'int'
| `-NoThrowAttr 0x5640a11b3d88 <col:69>
|-FunctionDecl 0x5640a11b4048 <line:121:1, col:111> col:12 sched_rr_get_interval 'int (__pid_t, struct timespec *)' extern
| |-ParmVarDecl 0x5640a11b3df0 <col:35, col:43> col:43 __pid '__pid_t':'int'
| |-ParmVarDecl 0x5640a11b3f28 <col:50, col:67> col:67 __t 'struct timespec *'
| `-NoThrowAttr 0x5640a11b40f8 <col:88>
|-TypedefDecl 0x5640a11b4188 <line:125:1, col:19> col:19 referenced clock_t '__clock_t':'long'
| `-TypedefType 0x5640a11b4150 '__clock_t' sugar
|   |-Typedef 0x5640a11ae548 '__clock_t'
|   `-BuiltinType 0x5640a1146f30 'long'
|-TypedefDecl 0x5640a11b4218 <line:128:1, col:21> col:21 referenced clockid_t '__clockid_t':'int'
| `-TypedefType 0x5640a11b41e0 '__clockid_t' sugar
|   |-Typedef 0x5640a11ae938 '__clockid_t'
|   `-BuiltinType 0x5640a1146f10 'int'
|-TypedefDecl 0x5640a11b42a8 <line:129:1, col:19> col:19 referenced timer_t '__timer_t':'void *'
| `-TypedefType 0x5640a11b4270 '__timer_t' sugar
|   |-Typedef 0x5640a11ae9a8 '__timer_t'
|   `-PointerType 0x5640a1147630 'void *'
|     `-BuiltinType 0x5640a1146e70 'void'
|-RecordDecl 0x5640a11b4300 <line:131:1, line:144:1> line:131:8 struct tm definition
| |-FieldDecl 0x5640a11b43d8 <line:133:3, col:7> col:7 tm_sec 'int'
| |-FieldDecl 0x5640a11b4440 <line:134:3, col:7> col:7 tm_min 'int'
| |-FieldDecl 0x5640a11b44a8 <line:135:3, col:7> col:7 tm_hour 'int'
| |-FieldDecl 0x5640a11b4510 <line:136:3, col:7> col:7 tm_mday 'int'
| |-FieldDecl 0x5640a11b4578 <line:137:3, col:7> col:7 tm_mon 'int'
| |-FieldDecl 0x5640a11b45e0 <line:138:3, col:7> col:7 tm_year 'int'
| |-FieldDecl 0x5640a11b4648 <line:139:3, col:7> col:7 tm_wday 'int'
| |-FieldDecl 0x5640a11b46b0 <line:140:3, col:7> col:7 tm_yday 'int'
| |-FieldDecl 0x5640a11b4718 <line:141:3, col:7> col:7 tm_isdst 'int'
| |-FieldDecl 0x5640a11b4780 <line:142:3, col:12> col:12 tm_gmtoff 'long'
| `-FieldDecl 0x5640a11b47e8 <line:143:3, col:15> col:15 tm_zone 'const char *'
|-RecordDecl 0x5640a11b4838 <line:147:1, line:151:3> line:147:8 struct itimerspec definition
| |-FieldDecl 0x5640a11b4908 <line:149:5, col:21> col:21 it_interval 'struct timespec':'struct timespec'
| `-FieldDecl 0x5640a11b4978 <line:150:5, col:21> col:21 it_value 'struct timespec':'struct timespec'
|-RecordDecl 0x5640a11b4a20 <line:152:1, col:8> col:8 struct sigevent
|-FunctionDecl 0x5640a11b4bf0 <line:154:1, col:68> col:16 clock 'clock_t (void)' extern
| `-NoThrowAttr 0x5640a11b4c90 <col:45>
|-FunctionDecl 0x5640a11b4e70 <line:155:1, col:77> col:15 time 'time_t (time_t *)' extern
| |-ParmVarDecl 0x5640a11b4d60 <col:21, col:29> col:29 __timer 'time_t *'
| `-NoThrowAttr 0x5640a11b4f18 <col:54>
|-FunctionDecl 0x5640a11b5118 <line:156:1, line:157:73> line:156:15 difftime 'double (time_t, time_t)' extern
| |-ParmVarDecl 0x5640a11b4f80 <col:25, col:32> col:32 __time1 'time_t':'long'
| |-ParmVarDecl 0x5640a11b4ff8 <col:41, col:48> col:48 __time0 'time_t':'long'
| |-NoThrowAttr 0x5640a11b51c8 <line:157:22>
| `-ConstAttr 0x5640a11b5220 <col:63>
|-FunctionDecl 0x5640a11b6050 <line:158:1, col:79> col:15 mktime 'time_t (struct tm *)' extern
| |-ParmVarDecl 0x5640a11b5318 <col:23, col:34> col:34 __tp 'struct tm *'
| `-NoThrowAttr 0x5640a11b60f8 <col:56>
|-FunctionDecl 0x5640a11b64a0 <line:159:1, line:161:77> line:159:15 strftime 'size_t (char *restrict, size_t, const char *restrict, const struct tm *restrict)' extern
| |-ParmVarDecl 0x5640a11b6168 <col:25, col:42> col:42 __s 'char *restrict'
| |-ParmVarDecl 0x5640a11b61e0 <col:47, col:54> col:54 __maxsize 'size_t':'unsigned long'
| |-ParmVarDecl 0x5640a11b6260 <line:160:4, col:27> col:27 __format 'const char *restrict'
| |-ParmVarDecl 0x5640a11b6358 <line:161:4, col:32> col:32 __tp 'const struct tm *restrict'
| `-NoThrowAttr 0x5640a11b6560 <col:54>
|-RecordDecl 0x5640a11b65b8 <line:163:9, line:170:1> line:163:16 struct __locale_struct definition
| |-RecordDecl 0x5640a11b6668 parent 0x5640a1146e18 <line:165:3, col:10> col:10 struct __locale_data
| |-FieldDecl 0x5640a11b68c8 <col:3, col:37> col:25 __locales 'struct __locale_data *[13]'
| |-FieldDecl 0x5640a11b6968 <line:166:3, col:29> col:29 __ctype_b 'const unsigned short *'
| |-FieldDecl 0x5640a11b69d0 <line:167:3, col:14> col:14 __ctype_tolower 'const int *'
| |-FieldDecl 0x5640a11b6a38 <line:168:3, col:14> col:14 __ctype_toupper 'const int *'
| `-FieldDecl 0x5640a11b6b28 <line:169:3, col:25> col:15 __names 'const char *[13]'
|-TypedefDecl 0x5640a11b6c48 <line:163:1, line:170:4> col:4 referenced __locale_t 'struct __locale_struct *'
| `-PointerType 0x5640a11b6bf0 'struct __locale_struct *'
|   `-ElaboratedType 0x5640a11b6b80 'struct __locale_struct' sugar
|     `-RecordType 0x5640a11b6640 'struct __locale_struct'
|       `-Record 0x5640a11b65b8 '__locale_struct'
|-TypedefDecl 0x5640a11b6cf8 <line:171:1, col:20> col:20 locale_t '__locale_t':'struct __locale_struct *'
| `-TypedefType 0x5640a11b6cc0 '__locale_t' sugar
|   |-Typedef 0x5640a11b6c48 '__locale_t'
|   `-PointerType 0x5640a11b6bf0 'struct __locale_struct *'
|     `-ElaboratedType 0x5640a11b6b80 'struct __locale_struct' sugar
|       `-RecordType 0x5640a11b6640 'struct __locale_struct'
|         `-Record 0x5640a11b65b8 '__locale_struct'
|-FunctionDecl 0x5640a11b8110 <line:172:1, line:175:63> line:172:15 strftime_l 'size_t (char *restrict, size_t, const char *restrict, const struct tm *restrict, __locale_t)' extern
| |-ParmVarDecl 0x5640a11b6d68 <col:27, col:44> col:44 __s 'char *restrict'
| |-ParmVarDecl 0x5640a11b6de0 <col:49, col:56> col:56 __maxsize 'size_t':'unsigned long'
| |-ParmVarDecl 0x5640a11b6e60 <line:173:6, col:29> col:29 __format 'const char *restrict'
| |-ParmVarDecl 0x5640a11b6ef0 <line:174:6, col:34> col:34 __tp 'const struct tm *restrict'
| |-ParmVarDecl 0x5640a11b6f68 <line:175:6, col:17> col:17 __loc '__locale_t':'struct __locale_struct *'
| `-NoThrowAttr 0x5640a11b81d8 <col:40>
|-FunctionDecl 0x5640a11b83c8 <line:177:1, col:89> col:19 gmtime 'struct tm *(const time_t *)' extern
| |-ParmVarDecl 0x5640a11b82a0 <col:27, col:41> col:41 __timer 'const time_t *'
| `-NoThrowAttr 0x5640a11b8470 <col:66>
|-FunctionDecl 0x5640a11b8580 <line:178:1, col:92> col:19 localtime 'struct tm *(const time_t *)' extern
| |-ParmVarDecl 0x5640a11b84d8 <col:30, col:44> col:44 __timer 'const time_t *'
| `-NoThrowAttr 0x5640a11b8628 <col:69>
|-FunctionDecl 0x5640a11b8858 <line:180:1, line:181:75> line:180:19 gmtime_r 'struct tm *(const time_t *restrict, struct tm *restrict)' extern
| |-ParmVarDecl 0x5640a11b8690 <col:29, col:54> col:54 __timer 'const time_t *restrict'
| |-ParmVarDecl 0x5640a11b8720 <line:181:8, col:30> col:30 __tp 'struct tm *restrict'
| `-NoThrowAttr 0x5640a11b8908 <col:52>
|-FunctionDecl 0x5640a11b8ab0 <line:182:1, line:183:78> line:182:19 localtime_r 'struct tm *(const time_t *restrict, struct tm *restrict)' extern
| |-ParmVarDecl 0x5640a11b8970 <col:32, col:57> col:57 __timer 'const time_t *restrict'
| |-ParmVarDecl 0x5640a11b8a00 <line:183:11, col:33> col:33 __tp 'struct tm *restrict'
| `-NoThrowAttr 0x5640a11b8b60 <col:55>
|-FunctionDecl 0x5640a11b8cf8 <line:185:1, col:85> col:14 asctime 'char *(const struct tm *)' extern
| |-ParmVarDecl 0x5640a11b8be0 <col:23, col:40> col:40 __tp 'const struct tm *'
| `-NoThrowAttr 0x5640a11b8da0 <col:62>
|-FunctionDecl 0x5640a11b8f18 <line:186:1, col:83> col:14 ctime 'char *(const time_t *)' extern
| |-ParmVarDecl 0x5640a11b8e08 <col:21, col:35> col:35 __timer 'const time_t *'
| `-NoThrowAttr 0x5640a11b8fc0 <col:60>
|-FunctionDecl 0x5640a11b92b8 <line:188:1, line:189:67> line:188:14 asctime_r 'char *(const struct tm *restrict, char *restrict)' extern
| |-ParmVarDecl 0x5640a11b9118 <col:25, col:53> col:53 __tp 'const struct tm *restrict'
| |-ParmVarDecl 0x5640a11b9198 <line:189:4, col:21> col:21 __buf 'char *restrict'
| `-NoThrowAttr 0x5640a11b9368 <col:44>
|-FunctionDecl 0x5640a11b9578 <line:190:1, line:191:72> line:190:14 ctime_r 'char *(const time_t *restrict, char *restrict)' extern
| |-ParmVarDecl 0x5640a11b93d0 <col:23, col:48> col:48 __timer 'const time_t *restrict'
| |-ParmVarDecl 0x5640a11b9450 <line:191:9, col:26> col:26 __buf 'char *restrict'
| `-NoThrowAttr 0x5640a11b9628 <col:49>
|-VarDecl 0x5640a11b9728 <line:192:1, col:24> col:14 __tzname 'char *[2]' extern
|-VarDecl 0x5640a11b97a8 <line:193:1, col:12> col:12 __daylight 'int' extern
|-VarDecl 0x5640a11b9828 <line:194:1, col:17> col:17 __timezone 'long' extern
|-VarDecl 0x5640a11b98f0 <line:195:1, col:22> col:14 tzname 'char *[2]' extern
|-FunctionDecl 0x5640a11b9a20 <line:196:1, col:65> col:13 tzset 'void (void)' extern
| `-NoThrowAttr 0x5640a11b9ac0 <col:42>
|-VarDecl 0x5640a11b9b30 <line:197:1, col:12> col:12 daylight 'int' extern
|-VarDecl 0x5640a11b9bb0 <line:198:1, col:17> col:17 timezone 'long' extern
|-FunctionDecl 0x5640a11b9d38 <line:199:1, col:80> col:12 stime 'int (const time_t *)' extern
| |-ParmVarDecl 0x5640a11b9c28 <col:19, col:33> col:33 __when 'const time_t *'
| `-NoThrowAttr 0x5640a11b9de0 <col:57>
|-FunctionDecl 0x5640a11b9ef0 <line:200:1, col:79> col:15 timegm 'time_t (struct tm *)' extern
| |-ParmVarDecl 0x5640a11b9e60 <col:23, col:34> col:34 __tp 'struct tm *'
| `-NoThrowAttr 0x5640a11b9f98 <col:56>
|-FunctionDecl 0x5640a11ba0d0 <line:201:1, col:82> col:15 timelocal 'time_t (struct tm *)' extern
| |-ParmVarDecl 0x5640a11ba018 <col:26, col:37> col:37 __tp 'struct tm *'
| `-NoThrowAttr 0x5640a11ba178 <col:59>
|-FunctionDecl 0x5640a11ba280 <line:202:1, col:99> col:12 dysize 'int (int)' extern
| |-ParmVarDecl 0x5640a11ba1e8 <col:20, col:24> col:24 __year 'int'
| |-NoThrowAttr 0x5640a11ba328 <col:48>
| `-ConstAttr 0x5640a11ba380 <col:89>
|-FunctionDecl 0x5640a11ba5e8 <line:203:1, line:204:37> line:203:12 nanosleep 'int (const struct timespec *, struct timespec *)' extern
| |-ParmVarDecl 0x5640a11ba438 <col:23, col:46> col:46 __requested_time 'const struct timespec *'
| `-ParmVarDecl 0x5640a11ba4c8 <line:204:9, col:26> col:26 __remaining 'struct timespec *'
|-FunctionDecl 0x5640a11ba848 <line:205:1, col:111> col:12 clock_getres 'int (clockid_t, struct timespec *)' extern
| |-ParmVarDecl 0x5640a11ba6d8 <col:26, col:36> col:36 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x5640a11ba768 <col:48, col:65> col:65 __res 'struct timespec *'
| `-NoThrowAttr 0x5640a11ba8f8 <col:88>
|-FunctionDecl 0x5640a11baa90 <line:206:1, col:111> col:12 clock_gettime 'int (clockid_t, struct timespec *)' extern
| |-ParmVarDecl 0x5640a11ba960 <col:27, col:37> col:37 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x5640a11ba9f0 <col:49, col:66> col:66 __tp 'struct timespec *'
| `-NoThrowAttr 0x5640a11bab40 <col:88>
|-FunctionDecl 0x5640a11bad58 <line:207:1, line:208:45> line:207:12 clock_settime 'int (clockid_t, const struct timespec *)' extern
| |-ParmVarDecl 0x5640a11baba8 <col:27, col:37> col:37 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x5640a11bac38 <col:49, col:72> col:72 __tp 'const struct timespec *'
| `-NoThrowAttr 0x5640a11bae08 <line:208:22>
|-FunctionDecl 0x5640a11bb178 <line:209:1, line:211:30> line:209:12 clock_nanosleep 'int (clockid_t, int, const struct timespec *, struct timespec *)' extern
| |-ParmVarDecl 0x5640a11bae70 <col:29, col:39> col:39 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x5640a11baef0 <col:51, col:55> col:55 __flags 'int'
| |-ParmVarDecl 0x5640a11baf80 <line:210:8, col:31> col:31 __req 'const struct timespec *'
| `-ParmVarDecl 0x5640a11bb010 <line:211:8, col:25> col:25 __rem 'struct timespec *'
|-FunctionDecl 0x5640a11bb478 <line:212:1, col:108> col:12 clock_getcpuclockid 'int (pid_t, clockid_t *)' extern
| |-ParmVarDecl 0x5640a11bb278 <col:33, col:39> col:39 __pid 'pid_t':'int'
| |-ParmVarDecl 0x5640a11bb350 <col:46, col:57> col:57 __clock_id 'clockid_t *'
| `-NoThrowAttr 0x5640a11bb528 <col:85>
|-FunctionDecl 0x5640a11bb918 <line:213:1, line:215:75> line:213:12 timer_create 'int (clockid_t, struct sigevent *restrict, timer_t *restrict)' extern
| |-ParmVarDecl 0x5640a11bb590 <col:26, col:36> col:36 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x5640a11bb6c8 <line:214:5, col:33> col:33 __evp 'struct sigevent *restrict'
| |-ParmVarDecl 0x5640a11bb7d0 <line:215:5, col:25> col:25 __timerid 'timer_t *restrict'
| `-NoThrowAttr 0x5640a11bb9d0 <col:52>
|-FunctionDecl 0x5640a11bbb48 <line:216:1, col:84> col:12 timer_delete 'int (timer_t)' extern
| |-ParmVarDecl 0x5640a11bba38 <col:26, col:34> col:34 __timerid 'timer_t':'void *'
| `-NoThrowAttr 0x5640a11bbbf0 <col:61>
|-FunctionDecl 0x5640a11bc0f0 <line:217:1, line:219:85> line:217:12 timer_settime 'int (timer_t, int, const struct itimerspec *restrict, struct itimerspec *restrict)' extern
| |-ParmVarDecl 0x5640a11bbc58 <col:27, col:35> col:35 __timerid 'timer_t':'void *'
| |-ParmVarDecl 0x5640a11bbcd8 <col:46, col:50> col:50 __flags 'int'
| |-ParmVarDecl 0x5640a11bbe08 <line:218:6, col:42> col:42 __value 'const struct itimerspec *restrict'
| |-ParmVarDecl 0x5640a11bbef8 <line:219:6, col:36> col:36 __ovalue 'struct itimerspec *restrict'
| `-NoThrowAttr 0x5640a11bc1b0 <col:62>
|-FunctionDecl 0x5640a11bc3c8 <line:220:1, line:221:45> line:220:12 timer_gettime 'int (timer_t, struct itimerspec *)' extern
| |-ParmVarDecl 0x5640a11bc218 <col:27, col:35> col:35 __timerid 'timer_t':'void *'
| |-ParmVarDecl 0x5640a11bc2a8 <col:46, col:65> col:65 __value 'struct itimerspec *'
| `-NoThrowAttr 0x5640a11bc478 <line:221:22>
|-FunctionDecl 0x5640a11bc578 <line:222:1, col:88> col:12 timer_getoverrun 'int (timer_t)' extern
| |-ParmVarDecl 0x5640a11bc4e0 <col:30, col:38> col:38 __timerid 'timer_t':'void *'
| `-NoThrowAttr 0x5640a11bc620 <col:65>
|-TypedefDecl 0x5640a11bc690 <line:224:1, col:27> col:27 referenced pthread_t 'unsigned long'
| `-BuiltinType 0x5640a1146fd0 'unsigned long'
|-RecordDecl 0x5640a11bc6e8 <line:225:1, line:229:1> line:225:7 union pthread_attr_t definition
| |-FieldDecl 0x5640a11bc830 <line:227:3, col:17> col:8 __size 'char [56]'
| `-FieldDecl 0x5640a11bc898 <line:228:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x5640a11bc948 <line:230:1, col:30> col:30 referenced pthread_attr_t 'union pthread_attr_t':'union pthread_attr_t'
| `-ElaboratedType 0x5640a11bc8f0 'union pthread_attr_t' sugar
|   `-RecordType 0x5640a11bc770 'union pthread_attr_t'
|     `-Record 0x5640a11bc6e8 'pthread_attr_t'
|-RecordDecl 0x5640a11bc9a0 <line:231:9, line:235:1> line:231:16 struct __pthread_internal_list definition
| |-FieldDecl 0x5640a11bcb18 <line:233:3, col:35> col:35 __prev 'struct __pthread_internal_list *'
| `-FieldDecl 0x5640a11bcb90 <line:234:3, col:35> col:35 __next 'struct __pthread_internal_list *'
|-TypedefDecl 0x5640a11bcc40 <line:231:1, line:235:3> col:3 referenced __pthread_list_t 'struct __pthread_internal_list':'struct __pthread_internal_list'
| `-ElaboratedType 0x5640a11bcbe0 'struct __pthread_internal_list' sugar
|   `-RecordType 0x5640a11bca20 'struct __pthread_internal_list'
|     `-Record 0x5640a11bc9a0 '__pthread_internal_list'
|-RecordDecl 0x5640a11bccb0 <line:236:9, line:250:1> line:236:9 union definition
| |-RecordDecl 0x5640a11bcd58 parent 0x5640a1146e18 <line:238:3, line:247:3> line:238:10 struct __pthread_mutex_s definition
| | |-FieldDecl 0x5640a11bce30 <line:240:5, col:9> col:9 __lock 'int'
| | |-FieldDecl 0x5640a11bce98 <line:241:5, col:18> col:18 __count 'unsigned int'
| | |-FieldDecl 0x5640a11bcf00 <line:242:5, col:9> col:9 __owner 'int'
| | |-FieldDecl 0x5640a11bcf68 <line:243:5, col:18> col:18 __nusers 'unsigned int'
| | |-FieldDecl 0x5640a11bcfd0 <line:244:5, col:9> col:9 __kind 'int'
| | |-FieldDecl 0x5640a11bd038 <line:245:5, col:9> col:9 __spins 'int'
| | `-FieldDecl 0x5640a11c1110 <line:246:5, col:22> col:22 __list '__pthread_list_t':'struct __pthread_internal_list'
| |-FieldDecl 0x5640a11c11c0 <line:238:3, line:247:5> col:5 __data 'struct __pthread_mutex_s':'struct __pthread_mutex_s'
| |-FieldDecl 0x5640a11c12b0 <line:248:3, col:17> col:8 __size 'char [40]'
| `-FieldDecl 0x5640a11c1318 <line:249:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x5640a11c14a0 <line:236:1, line:250:3> col:3 referenced pthread_mutex_t 'union pthread_mutex_t':'pthread_mutex_t'
| `-ElaboratedType 0x5640a11c1440 'union pthread_mutex_t' sugar
|   `-RecordType 0x5640a11bcd30 'pthread_mutex_t'
|     `-Record 0x5640a11bccb0 ''
|-RecordDecl 0x5640a11c1510 <line:251:9, line:255:1> line:251:9 union definition
| |-FieldDecl 0x5640a11c1650 <line:253:3, col:16> col:8 __size 'char [4]'
| `-FieldDecl 0x5640a11c16b8 <line:254:3, col:7> col:7 __align 'int'
|-TypedefDecl 0x5640a11c1770 <line:251:1, line:255:3> col:3 referenced pthread_mutexattr_t 'union pthread_mutexattr_t':'pthread_mutexattr_t'
| `-ElaboratedType 0x5640a11c1710 'union pthread_mutexattr_t' sugar
|   `-RecordType 0x5640a11c1590 'pthread_mutexattr_t'
|     `-Record 0x5640a11c1510 ''
|-RecordDecl 0x5640a11c17e0 <line:256:9, line:271:1> line:256:9 union definition
| |-RecordDecl 0x5640a11c1888 <line:258:3, line:268:3> line:258:3 struct definition
| | |-FieldDecl 0x5640a11c1950 <line:260:5, col:9> col:9 __lock 'int'
| | |-FieldDecl 0x5640a11c19b8 <line:261:5, col:18> col:18 __futex 'unsigned int'
| | |-FieldDecl 0x5640a11c1a20 <line:262:19, col:42> col:42 __total_seq 'unsigned long long'
| | |-FieldDecl 0x5640a11c1a88 <line:263:19, col:42> col:42 __wakeup_seq 'unsigned long long'
| | |-FieldDecl 0x5640a11c1af0 <line:264:19, col:42> col:42 __woken_seq 'unsigned long long'
| | |-FieldDecl 0x5640a11c1b58 <line:265:5, col:11> col:11 __mutex 'void *'
| | |-FieldDecl 0x5640a11c1bc0 <line:266:5, col:18> col:18 __nwaiters 'unsigned int'
| | `-FieldDecl 0x5640a11c1c28 <line:267:5, col:18> col:18 __broadcast_seq 'unsigned int'
| |-FieldDecl 0x5640a11c1ce0 <line:258:3, line:268:5> col:5 __data 'struct (anonymous struct at ./split_9/mix050_rmo.oepc_false-unreach-call.i:258:3)':'struct pthread_cond_t::(anonymous at ./split_9/mix050_rmo.oepc_false-unreach-call.i:258:3)'
| |-FieldDecl 0x5640a11c1dd0 <line:269:3, col:17> col:8 __size 'char [48]'
| `-FieldDecl 0x5640a11c1e38 <line:270:17, col:31> col:31 __align 'long long'
|-TypedefDecl 0x5640a11c1f70 <line:256:1, line:271:3> col:3 referenced pthread_cond_t 'union pthread_cond_t':'pthread_cond_t'
| `-ElaboratedType 0x5640a11c1f10 'union pthread_cond_t' sugar
|   `-RecordType 0x5640a11c1860 'pthread_cond_t'
|     `-Record 0x5640a11c17e0 ''
|-RecordDecl 0x5640a11c1fe0 <line:272:9, line:276:1> line:272:9 union definition
| |-FieldDecl 0x5640a11c3130 <line:274:3, col:16> col:8 __size 'char [4]'
| `-FieldDecl 0x5640a11c3198 <line:275:3, col:7> col:7 __align 'int'
|-TypedefDecl 0x5640a11c3250 <line:272:1, line:276:3> col:3 referenced pthread_condattr_t 'union pthread_condattr_t':'pthread_condattr_t'
| `-ElaboratedType 0x5640a11c31f0 'union pthread_condattr_t' sugar
|   `-RecordType 0x5640a11c2060 'pthread_condattr_t'
|     `-Record 0x5640a11c1fe0 ''
|-TypedefDecl 0x5640a11c32d8 <line:277:1, col:22> col:22 referenced pthread_key_t 'unsigned int'
| `-BuiltinType 0x5640a1146fb0 'unsigned int'
|-TypedefDecl 0x5640a11c3348 <line:278:1, col:13> col:13 referenced pthread_once_t 'int'
| `-BuiltinType 0x5640a1146f10 'int'
|-RecordDecl 0x5640a11c33a0 <line:279:9, line:297:1> line:279:9 union definition
| |-RecordDecl 0x5640a11c3448 <line:281:3, line:294:3> line:281:3 struct definition
| | |-FieldDecl 0x5640a11c3510 <line:283:5, col:9> col:9 __lock 'int'
| | |-FieldDecl 0x5640a11c3578 <line:284:5, col:18> col:18 __nr_readers 'unsigned int'
| | |-FieldDecl 0x5640a11c35e0 <line:285:5, col:18> col:18 __readers_wakeup 'unsigned int'
| | |-FieldDecl 0x5640a11c3648 <line:286:5, col:18> col:18 __writer_wakeup 'unsigned int'
| | |-FieldDecl 0x5640a11c36b0 <line:287:5, col:18> col:18 __nr_readers_queued 'unsigned int'
| | |-FieldDecl 0x5640a11c3718 <line:288:5, col:18> col:18 __nr_writers_queued 'unsigned int'
| | |-FieldDecl 0x5640a11c3780 <line:289:5, col:9> col:9 __writer 'int'
| | |-FieldDecl 0x5640a11c37e8 <line:290:5, col:9> col:9 __shared 'int'
| | |-FieldDecl 0x5640a11c3850 <line:291:5, col:23> col:23 __pad1 'unsigned long'
| | |-FieldDecl 0x5640a11c38b8 <line:292:5, col:23> col:23 __pad2 'unsigned long'
| | `-FieldDecl 0x5640a11c3920 <line:293:5, col:18> col:18 __flags 'unsigned int'
| |-FieldDecl 0x5640a11c39d0 <line:281:3, line:294:5> col:5 __data 'struct (anonymous struct at ./split_9/mix050_rmo.oepc_false-unreach-call.i:281:3)':'struct pthread_rwlock_t::(anonymous at ./split_9/mix050_rmo.oepc_false-unreach-call.i:281:3)'
| |-FieldDecl 0x5640a11c3a78 <line:295:3, col:17> col:8 __size 'char [56]'
| `-FieldDecl 0x5640a11c3ae0 <line:296:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x5640a11c3c30 <line:279:1, line:297:3> col:3 referenced pthread_rwlock_t 'union pthread_rwlock_t':'pthread_rwlock_t'
| `-ElaboratedType 0x5640a11c3bd0 'union pthread_rwlock_t' sugar
|   `-RecordType 0x5640a11c3420 'pthread_rwlock_t'
|     `-Record 0x5640a11c33a0 ''
|-RecordDecl 0x5640a11c3ca0 <line:298:9, line:302:1> line:298:9 union definition
| |-FieldDecl 0x5640a11c3de0 <line:300:3, col:16> col:8 __size 'char [8]'
| `-FieldDecl 0x5640a11c3e48 <line:301:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x5640a11c3f00 <line:298:1, line:302:3> col:3 referenced pthread_rwlockattr_t 'union pthread_rwlockattr_t':'pthread_rwlockattr_t'
| `-ElaboratedType 0x5640a11c3ea0 'union pthread_rwlockattr_t' sugar
|   `-RecordType 0x5640a11c3d20 'pthread_rwlockattr_t'
|     `-Record 0x5640a11c3ca0 ''
|-TypedefDecl 0x5640a11c3f88 <line:303:1, col:22> col:22 referenced pthread_spinlock_t 'volatile int'
| `-QualType 0x5640a1146f14 'volatile int' volatile
|   `-BuiltinType 0x5640a1146f10 'int'
|-RecordDecl 0x5640a11c3fe0 <line:304:9, line:308:1> line:304:9 union definition
| |-FieldDecl 0x5640a11c5140 <line:306:3, col:17> col:8 __size 'char [32]'
| `-FieldDecl 0x5640a11c51a8 <line:307:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x5640a11c5260 <line:304:1, line:308:3> col:3 referenced pthread_barrier_t 'union pthread_barrier_t':'pthread_barrier_t'
| `-ElaboratedType 0x5640a11c5200 'union pthread_barrier_t' sugar
|   `-RecordType 0x5640a11c4060 'pthread_barrier_t'
|     `-Record 0x5640a11c3fe0 ''
|-RecordDecl 0x5640a11c52d0 <line:309:9, line:313:1> line:309:9 union definition
| |-FieldDecl 0x5640a11c53d0 <line:311:3, col:16> col:8 __size 'char [4]'
| `-FieldDecl 0x5640a11c5438 <line:312:3, col:7> col:7 __align 'int'
|-TypedefDecl 0x5640a11c54f0 <line:309:1, line:313:3> col:3 referenced pthread_barrierattr_t 'union pthread_barrierattr_t':'pthread_barrierattr_t'
| `-ElaboratedType 0x5640a11c5490 'union pthread_barrierattr_t' sugar
|   `-RecordType 0x5640a11c5350 'pthread_barrierattr_t'
|     `-Record 0x5640a11c52d0 ''
|-TypedefDecl 0x5640a11c5608 <line:314:1, col:29> col:18 referenced __jmp_buf 'long [8]'
| `-ConstantArrayType 0x5640a11c55a0 'long [8]' 8 
|   `-BuiltinType 0x5640a1146f30 'long'
|-EnumDecl 0x5640a11c5660 <line:315:1, line:319:1> line:315:1
| |-EnumConstantDecl 0x5640a11c5728 <line:317:3> col:3 PTHREAD_CREATE_JOINABLE 'int'
| `-EnumConstantDecl 0x5640a11c5778 <line:318:3> col:3 PTHREAD_CREATE_DETACHED 'int'
|-EnumDecl 0x5640a11c57c8 <line:320:1, line:331:1> line:320:1
| |-EnumConstantDecl 0x5640a11c5898 <line:322:3> col:3 referenced PTHREAD_MUTEX_TIMED_NP 'int'
| |-EnumConstantDecl 0x5640a11c58e8 <line:323:3> col:3 referenced PTHREAD_MUTEX_RECURSIVE_NP 'int'
| |-EnumConstantDecl 0x5640a11c5938 <line:324:3> col:3 referenced PTHREAD_MUTEX_ERRORCHECK_NP 'int'
| |-EnumConstantDecl 0x5640a11c5988 <line:325:3> col:3 PTHREAD_MUTEX_ADAPTIVE_NP 'int'
| |-EnumConstantDecl 0x5640a11c5a10 <line:327:3, col:26> col:3 referenced PTHREAD_MUTEX_NORMAL 'int'
| | `-ConstantExpr 0x5640a11c59f8 <col:26> 'int'
| |   `-DeclRefExpr 0x5640a11c59d8 <col:26> 'int' EnumConstant 0x5640a11c5898 'PTHREAD_MUTEX_TIMED_NP' 'int'
| |-EnumConstantDecl 0x5640a11c5a98 <line:328:3, col:29> col:3 PTHREAD_MUTEX_RECURSIVE 'int'
| | `-ConstantExpr 0x5640a11c5a80 <col:29> 'int'
| |   `-DeclRefExpr 0x5640a11c5a60 <col:29> 'int' EnumConstant 0x5640a11c58e8 'PTHREAD_MUTEX_RECURSIVE_NP' 'int'
| |-EnumConstantDecl 0x5640a11c5b20 <line:329:3, col:30> col:3 PTHREAD_MUTEX_ERRORCHECK 'int'
| | `-ConstantExpr 0x5640a11c5b08 <col:30> 'int'
| |   `-DeclRefExpr 0x5640a11c5ae8 <col:30> 'int' EnumConstant 0x5640a11c5938 'PTHREAD_MUTEX_ERRORCHECK_NP' 'int'
| `-EnumConstantDecl 0x5640a11c5ba8 <line:330:3, col:27> col:3 PTHREAD_MUTEX_DEFAULT 'int'
|   `-ConstantExpr 0x5640a11c5b90 <col:27> 'int'
|     `-DeclRefExpr 0x5640a11c5b70 <col:27> 'int' EnumConstant 0x5640a11c5a10 'PTHREAD_MUTEX_NORMAL' 'int'
|-EnumDecl 0x5640a11c5bf8 <line:332:1, line:338:1> line:332:1
| |-EnumConstantDecl 0x5640a11c5cc8 <line:334:3> col:3 referenced PTHREAD_MUTEX_STALLED 'int'
| |-EnumConstantDecl 0x5640a11c5d50 <line:335:3, col:30> col:3 PTHREAD_MUTEX_STALLED_NP 'int'
| | `-ConstantExpr 0x5640a11c5d38 <col:30> 'int'
| |   `-DeclRefExpr 0x5640a11c5d18 <col:30> 'int' EnumConstant 0x5640a11c5cc8 'PTHREAD_MUTEX_STALLED' 'int'
| |-EnumConstantDecl 0x5640a11c5da0 <line:336:3> col:3 referenced PTHREAD_MUTEX_ROBUST 'int'
| `-EnumConstantDecl 0x5640a11c5e28 <line:337:3, col:29> col:3 PTHREAD_MUTEX_ROBUST_NP 'int'
|   `-ConstantExpr 0x5640a11c5e10 <col:29> 'int'
|     `-DeclRefExpr 0x5640a11c5df0 <col:29> 'int' EnumConstant 0x5640a11c5da0 'PTHREAD_MUTEX_ROBUST' 'int'
|-EnumDecl 0x5640a11c5e78 <line:339:1, line:344:1> line:339:1
| |-EnumConstantDecl 0x5640a11c5f48 <line:341:3> col:3 PTHREAD_PRIO_NONE 'int'
| |-EnumConstantDecl 0x5640a11c5f98 <line:342:3> col:3 PTHREAD_PRIO_INHERIT 'int'
| `-EnumConstantDecl 0x5640a11c5fe8 <line:343:3> col:3 PTHREAD_PRIO_PROTECT 'int'
|-EnumDecl 0x5640a11c6038 <line:345:1, line:351:1> line:345:1
| |-EnumConstantDecl 0x5640a11c6150 <line:347:3> col:3 referenced PTHREAD_RWLOCK_PREFER_READER_NP 'int'
| |-EnumConstantDecl 0x5640a11c61a0 <line:348:3> col:3 PTHREAD_RWLOCK_PREFER_WRITER_NP 'int'
| |-EnumConstantDecl 0x5640a11c61f0 <line:349:3> col:3 PTHREAD_RWLOCK_PREFER_WRITER_NONRECURSIVE_NP 'int'
| `-EnumConstantDecl 0x5640a11c6278 <line:350:3, col:31> col:3 PTHREAD_RWLOCK_DEFAULT_NP 'int'
|   `-ConstantExpr 0x5640a11c6260 <col:31> 'int'
|     `-DeclRefExpr 0x5640a11c6240 <col:31> 'int' EnumConstant 0x5640a11c6150 'PTHREAD_RWLOCK_PREFER_READER_NP' 'int'
|-EnumDecl 0x5640a11c62c8 <line:352:1, line:356:1> line:352:1
| |-EnumConstantDecl 0x5640a11c6398 <line:354:3> col:3 PTHREAD_INHERIT_SCHED 'int'
| `-EnumConstantDecl 0x5640a11c63e8 <line:355:3> col:3 PTHREAD_EXPLICIT_SCHED 'int'
|-EnumDecl 0x5640a11c6438 <line:357:1, line:361:1> line:357:1
| |-EnumConstantDecl 0x5640a11c6508 <line:359:3> col:3 PTHREAD_SCOPE_SYSTEM 'int'
| `-EnumConstantDecl 0x5640a11c6558 <line:360:3> col:3 PTHREAD_SCOPE_PROCESS 'int'
|-EnumDecl 0x5640a11c65a8 <line:362:1, line:366:1> line:362:1
| |-EnumConstantDecl 0x5640a11c6678 <line:364:3> col:3 PTHREAD_PROCESS_PRIVATE 'int'
| `-EnumConstantDecl 0x5640a11c66c8 <line:365:3> col:3 PTHREAD_PROCESS_SHARED 'int'
|-RecordDecl 0x5640a11c6718 <line:367:1, line:373:1> line:367:8 struct _pthread_cleanup_buffer definition
| |-FieldDecl 0x5640a11c6958 <line:369:3, col:28> col:10 __routine 'void (*)(void *)'
| |-FieldDecl 0x5640a11c69c0 <line:370:3, col:9> col:9 __arg 'void *'
| |-FieldDecl 0x5640a11c6a28 <line:371:3, col:7> col:7 __canceltype 'int'
| `-FieldDecl 0x5640a11c6b48 <line:372:3, col:35> col:35 __prev 'struct _pthread_cleanup_buffer *'
|-EnumDecl 0x5640a11c6b98 <line:374:1, line:378:1> line:374:1
| |-EnumConstantDecl 0x5640a11c6c68 <line:376:3> col:3 PTHREAD_CANCEL_ENABLE 'int'
| `-EnumConstantDecl 0x5640a11c6cb8 <line:377:3> col:3 PTHREAD_CANCEL_DISABLE 'int'
|-EnumDecl 0x5640a11c6d08 <line:379:1, line:383:1> line:379:1
| |-EnumConstantDecl 0x5640a11c6dd8 <line:381:3> col:3 PTHREAD_CANCEL_DEFERRED 'int'
| `-EnumConstantDecl 0x5640a11c6e28 <line:382:3> col:3 PTHREAD_CANCEL_ASYNCHRONOUS 'int'
|-FunctionDecl 0x5640a11c7488 <line:385:1, line:388:96> line:385:12 used pthread_create 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' extern
| |-ParmVarDecl 0x5640a11c6f20 <col:28, col:50> col:50 __newthread 'pthread_t *restrict'
| |-ParmVarDecl 0x5640a11c7030 <line:386:7, col:40> col:40 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x5640a11c7270 <line:387:7, col:39> col:15 __start_routine 'void *(*)(void *)'
| |-ParmVarDecl 0x5640a11c72f0 <line:388:7, col:24> col:24 __arg 'void *restrict'
| |-NoThrowAttr 0x5640a11c7548 <col:47>
| |-NonNullAttr 0x5640a11c75a0 <col:77, col:94> 1 3
| `-CallbackAttr 0x5640a11c75d8 <line:385:12> Implicit 2 3
|-FunctionDecl 0x5640a11c7700 <line:389:1, col:72> col:13 pthread_exit 'void (void *) __attribute__((noreturn))' extern
| `-ParmVarDecl 0x5640a11c7630 <col:27, col:33> col:33 __retval 'void *'
|-FunctionDecl 0x5640a11c7958 <line:390:1, col:64> col:12 pthread_join 'int (pthread_t, void **)' extern
| |-ParmVarDecl 0x5640a11c77b8 <col:26, col:36> col:36 __th 'pthread_t':'unsigned long'
| `-ParmVarDecl 0x5640a11c7838 <col:42, col:49> col:49 __thread_return 'void **'
|-FunctionDecl 0x5640a11c7b28 <line:391:1, col:83> col:12 pthread_detach 'int (pthread_t)' extern
| |-ParmVarDecl 0x5640a11c7a18 <col:28, col:38> col:38 __th 'pthread_t':'unsigned long'
| `-NoThrowAttr 0x5640a11c7bd0 <col:60>
|-FunctionDecl 0x5640a11c7d20 <line:392:1, col:105> col:18 pthread_self 'pthread_t (void)' extern
| |-NoThrowAttr 0x5640a11c7dc0 <col:54>
| `-ConstAttr 0x5640a11c7e18 <col:95>
|-FunctionDecl 0x5640a11c7fe8 <line:393:1, line:394:70> line:393:12 pthread_equal 'int (pthread_t, pthread_t)' extern
| |-ParmVarDecl 0x5640a11c7e50 <col:27, col:37> col:37 __thread1 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x5640a11c7ec8 <col:48, col:58> col:58 __thread2 'pthread_t':'unsigned long'
| |-NoThrowAttr 0x5640a11c8098 <line:394:19>
| `-ConstAttr 0x5640a11c80f0 <col:60>
|-FunctionDecl 0x5640a11c9b08 <line:395:1, col:128> col:12 pthread_attr_init 'int (pthread_attr_t *)' extern
| |-ParmVarDecl 0x5640a11c99d0 <col:31, col:47> col:47 __attr 'pthread_attr_t *'
| |-NoThrowAttr 0x5640a11c9bb0 <col:71>
| `-NonNullAttr 0x5640a11c9c08 <col:112, col:126> 1
|-FunctionDecl 0x5640a11c9d10 <line:396:1, line:397:79> line:396:12 pthread_attr_destroy 'int (pthread_attr_t *)' extern
| |-ParmVarDecl 0x5640a11c9c58 <col:34, col:50> col:50 __attr 'pthread_attr_t *'
| |-NoThrowAttr 0x5640a11c9db8 <line:397:22>
| `-NonNullAttr 0x5640a11c9e10 <col:63, col:77> 1
|-FunctionDecl 0x5640a11ca038 <line:398:1, line:400:82> line:398:12 pthread_attr_getdetachstate 'int (const pthread_attr_t *, int *)' extern
| |-ParmVarDecl 0x5640a11c9e58 <col:41, col:63> col:63 __attr 'const pthread_attr_t *'
| |-ParmVarDecl 0x5640a11c9ed8 <line:399:6, col:11> col:11 __detachstate 'int *'
| |-NoThrowAttr 0x5640a11ca0e8 <line:400:22>
| `-NonNullAttr 0x5640a11ca140 <col:63, col:80> 1 2
|-FunctionDecl 0x5640a11ca348 <line:401:1, line:403:79> line:401:12 pthread_attr_setdetachstate 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x5640a11ca188 <col:41, col:57> col:57 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x5640a11ca208 <line:402:6, col:10> col:10 __detachstate 'int'
| |-NoThrowAttr 0x5640a11ca3f8 <line:403:22>
| `-NonNullAttr 0x5640a11ca450 <col:63, col:77> 1
|-FunctionDecl 0x5640a11ca6a8 <line:404:1, line:406:82> line:404:12 pthread_attr_getguardsize 'int (const pthread_attr_t *, size_t *)' extern
| |-ParmVarDecl 0x5640a11ca498 <col:39, col:61> col:61 __attr 'const pthread_attr_t *'
| |-ParmVarDecl 0x5640a11ca540 <line:405:11, col:19> col:19 __guardsize 'size_t *'
| |-NoThrowAttr 0x5640a11ca758 <line:406:22>
| `-NonNullAttr 0x5640a11ca7b0 <col:63, col:80> 1 2
|-FunctionDecl 0x5640a11cb9e8 <line:407:1, line:409:79> line:407:12 pthread_attr_setguardsize 'int (pthread_attr_t *, size_t)' extern
| |-ParmVarDecl 0x5640a11ca7f8 <col:39, col:55> col:55 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x5640a11ca870 <line:408:11, col:18> col:18 __guardsize 'size_t':'unsigned long'
| |-NoThrowAttr 0x5640a11cba98 <line:409:22>
| `-NonNullAttr 0x5640a11cbaf0 <col:63, col:77> 1
|-FunctionDecl 0x5640a11cbd28 <line:410:1, line:412:82> line:410:12 pthread_attr_getschedparam 'int (const pthread_attr_t *restrict, struct sched_param *restrict)' extern
| |-ParmVarDecl 0x5640a11cbb38 <col:40, col:73> col:73 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x5640a11cbbc8 <line:411:12, col:43> col:43 __param 'struct sched_param *restrict'
| |-NoThrowAttr 0x5640a11cbdd8 <line:412:22>
| `-NonNullAttr 0x5640a11cbe30 <col:63, col:80> 1 2
|-FunctionDecl 0x5640a11cc068 <line:413:1, line:415:97> line:413:12 pthread_attr_setschedparam 'int (pthread_attr_t *restrict, const struct sched_param *restrict)' extern
| |-ParmVarDecl 0x5640a11cbe78 <col:40, col:67> col:67 __attr 'pthread_attr_t *restrict'
| |-ParmVarDecl 0x5640a11cbf08 <line:414:12, line:415:12> col:12 __param 'const struct sched_param *restrict'
| |-NoThrowAttr 0x5640a11cc118 <col:37>
| `-NonNullAttr 0x5640a11cc170 <col:78, col:95> 1 2
|-FunctionDecl 0x5640a11cc358 <line:416:1, line:418:82> line:416:12 pthread_attr_getschedpolicy 'int (const pthread_attr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x5640a11cc1b8 <col:41, line:417:6> col:6 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x5640a11cc238 <col:14, col:30> col:30 __policy 'int *restrict'
| |-NoThrowAttr 0x5640a11cc408 <line:418:22>
| `-NonNullAttr 0x5640a11cc460 <col:63, col:80> 1 2
|-FunctionDecl 0x5640a11cc5e8 <line:419:1, line:420:79> line:419:12 pthread_attr_setschedpolicy 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x5640a11cc4a8 <col:41, col:57> col:57 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x5640a11cc528 <col:65, col:69> col:69 __policy 'int'
| |-NoThrowAttr 0x5640a11cc698 <line:420:22>
| `-NonNullAttr 0x5640a11cc6f0 <col:63, col:77> 1
|-FunctionDecl 0x5640a11cc898 <line:421:1, line:423:82> line:421:12 pthread_attr_getinheritsched 'int (const pthread_attr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x5640a11cc738 <col:42, line:422:7> col:7 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x5640a11cc7b8 <col:15, col:31> col:31 __inherit 'int *restrict'
| |-NoThrowAttr 0x5640a11cc948 <line:423:22>
| `-NonNullAttr 0x5640a11cc9c0 <col:63, col:80> 1 2
|-FunctionDecl 0x5640a11ccb48 <line:424:1, line:426:79> line:424:12 pthread_attr_setinheritsched 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x5640a11cca08 <col:42, col:58> col:58 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x5640a11cca88 <line:425:7, col:11> col:11 __inherit 'int'
| |-NoThrowAttr 0x5640a11ccbf8 <line:426:22>
| `-NonNullAttr 0x5640a11ccc50 <col:63, col:77> 1
|-FunctionDecl 0x5640a11ccdf8 <line:427:1, line:429:82> line:427:12 pthread_attr_getscope 'int (const pthread_attr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x5640a11ccc98 <col:35, col:68> col:68 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x5640a11ccd18 <line:428:7, col:23> col:23 __scope 'int *restrict'
| |-NoThrowAttr 0x5640a11ccea8 <line:429:22>
| `-NonNullAttr 0x5640a11ccf00 <col:63, col:80> 1 2
|-FunctionDecl 0x5640a11cd088 <line:430:1, line:431:79> line:430:12 pthread_attr_setscope 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x5640a11ccf48 <col:35, col:51> col:51 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x5640a11ccfc8 <col:59, col:63> col:63 __scope 'int'
| |-NoThrowAttr 0x5640a11cd138 <line:431:22>
| `-NonNullAttr 0x5640a11cd190 <col:63, col:77> 1
|-FunctionDecl 0x5640a11cd3b8 <line:432:1, line:434:115> line:432:12 pthread_attr_getstackaddr 'int (const pthread_attr_t *restrict, void **restrict)' extern
| |-ParmVarDecl 0x5640a11cd1d8 <col:39, line:433:11> col:11 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x5640a11cd258 <col:19, col:37> col:37 __stackaddr 'void **restrict'
| |-NoThrowAttr 0x5640a11cd468 <line:434:22>
| |-NonNullAttr 0x5640a11cd4c0 <col:63, col:80> 1 2
| `-DeprecatedAttr 0x5640a11cd4f8 <col:100> "" ""
|-FunctionDecl 0x5640a11cd708 <line:435:1, line:437:112> line:435:12 pthread_attr_setstackaddr 'int (pthread_attr_t *, void *)' extern
| |-ParmVarDecl 0x5640a11cd548 <col:39, col:55> col:55 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x5640a11cd5c8 <line:436:11, col:17> col:17 __stackaddr 'void *'
| |-NoThrowAttr 0x5640a11cd7b8 <line:437:22>
| |-NonNullAttr 0x5640a11cd810 <col:63, col:77> 1
| `-DeprecatedAttr 0x5640a11cd848 <col:97> "" ""
|-FunctionDecl 0x5640a11cda48 <line:438:1, line:440:82> line:438:12 pthread_attr_getstacksize 'int (const pthread_attr_t *restrict, size_t *restrict)' extern
| |-ParmVarDecl 0x5640a11cd898 <col:39, line:439:11> col:11 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x5640a11cd910 <col:19, col:38> col:38 __stacksize 'size_t *restrict'
| |-NoThrowAttr 0x5640a11cdaf8 <line:440:22>
| `-NonNullAttr 0x5640a11cdb50 <col:63, col:80> 1 2
|-FunctionDecl 0x5640a11cdcd0 <line:441:1, line:443:79> line:441:12 pthread_attr_setstacksize 'int (pthread_attr_t *, size_t)' extern
| |-ParmVarDecl 0x5640a11cdb98 <col:39, col:55> col:55 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x5640a11cdc10 <line:442:11, col:18> col:18 __stacksize 'size_t':'unsigned long'
| |-NoThrowAttr 0x5640a11cdd80 <line:443:22>
| `-NonNullAttr 0x5640a11cddd8 <col:63, col:77> 1
|-FunctionDecl 0x5640a11ce0c8 <line:444:1, line:447:85> line:444:12 pthread_attr_getstack 'int (const pthread_attr_t *restrict, void **restrict, size_t *restrict)' extern
| |-ParmVarDecl 0x5640a11cde28 <col:35, col:68> col:68 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x5640a11cdea8 <line:445:7, col:25> col:25 __stackaddr 'void **restrict'
| |-ParmVarDecl 0x5640a11cdf20 <line:446:7, col:26> col:26 __stacksize 'size_t *restrict'
| |-NoThrowAttr 0x5640a11ce180 <line:447:22>
| `-NonNullAttr 0x5640a11ce1d8 <col:63, col:83> 1 2 3
|-FunctionDecl 0x5640a11ce488 <line:448:1, line:449:100> line:448:12 pthread_attr_setstack 'int (pthread_attr_t *, void *, size_t)' extern
| |-ParmVarDecl 0x5640a11ce230 <col:35, col:51> col:51 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x5640a11ce2b0 <col:59, col:65> col:65 __stackaddr 'void *'
| |-ParmVarDecl 0x5640a11ce328 <line:449:7, col:14> col:14 __stacksize 'size_t':'unsigned long'
| |-NoThrowAttr 0x5640a11ce540 <col:43>
| `-NonNullAttr 0x5640a11ce598 <col:84, col:98> 1
|-FunctionDecl 0x5640a11ce858 <line:450:1, line:452:79> line:450:12 pthread_setschedparam 'int (pthread_t, int, const struct sched_param *)' extern
| |-ParmVarDecl 0x5640a11ce5e8 <col:35, col:45> col:45 __target_thread 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x5640a11ce668 <col:62, col:66> col:66 __policy 'int'
| |-ParmVarDecl 0x5640a11ce6f8 <line:451:7, col:33> col:33 __param 'const struct sched_param *'
| |-NoThrowAttr 0x5640a11ce910 <line:452:22>
| `-NonNullAttr 0x5640a11ce968 <col:63, col:77> 3
|-FunctionDecl 0x5640a11cec78 <line:453:1, line:456:82> line:453:12 pthread_getschedparam 'int (pthread_t, int *restrict, struct sched_param *restrict)' extern
| |-ParmVarDecl 0x5640a11ce9e0 <col:35, col:45> col:45 __target_thread 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x5640a11cea60 <line:454:7, col:23> col:23 __policy 'int *restrict'
| |-ParmVarDecl 0x5640a11ceaf0 <line:455:7, col:38> col:38 __param 'struct sched_param *restrict'
| |-NoThrowAttr 0x5640a11ced30 <line:456:22>
| `-NonNullAttr 0x5640a11ced88 <col:63, col:80> 2 3
|-FunctionDecl 0x5640a11cef78 <line:457:1, line:458:45> line:457:12 pthread_setschedprio 'int (pthread_t, int)' extern
| |-ParmVarDecl 0x5640a11cedd8 <col:34, col:44> col:44 __target_thread 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x5640a11cee58 <col:61, col:65> col:65 __prio 'int'
| `-NoThrowAttr 0x5640a11cf028 <line:458:22>
|-FunctionDecl 0x5640a11cf3f8 <line:459:1, line:460:71> line:459:12 pthread_once 'int (pthread_once_t *, void (*)(void))' extern
| |-ParmVarDecl 0x5640a11cf0f0 <col:26, col:42> col:42 __once_control 'pthread_once_t *'
| |-ParmVarDecl 0x5640a11cf290 <line:460:5, col:33> col:12 __init_routine 'void (*)(void)'
| `-NonNullAttr 0x5640a11cf4a8 <col:52, col:69> 1 2
|-FunctionDecl 0x5640a11cf650 <line:461:1, col:64> col:12 pthread_setcancelstate 'int (int, int *)' extern
| |-ParmVarDecl 0x5640a11cf530 <col:36, col:40> col:40 __state 'int'
| `-ParmVarDecl 0x5640a11cf5b0 <col:49, col:54> col:54 __oldstate 'int *'
|-FunctionDecl 0x5640a11cf838 <line:462:1, col:61> col:12 pthread_setcanceltype 'int (int, int *)' extern
| |-ParmVarDecl 0x5640a11cf718 <col:35, col:39> col:39 __type 'int'
| `-ParmVarDecl 0x5640a11cf798 <col:47, col:52> col:52 __oldtype 'int *'
|-FunctionDecl 0x5640a11cf9f0 <line:463:1, col:42> col:12 pthread_cancel 'int (pthread_t)' extern
| `-ParmVarDecl 0x5640a11cf8f8 <col:28, col:38> col:38 __th 'pthread_t':'unsigned long'
|-FunctionDecl 0x5640a11cfb30 <line:464:1, col:37> col:13 pthread_testcancel 'void (void)' extern
|-RecordDecl 0x5640a11cfbd0 <line:465:9, line:473:1> line:465:9 struct definition
| |-RecordDecl 0x5640a11cfc78 <line:467:3, line:471:3> line:467:3 struct definition
| | |-FieldDecl 0x5640a11cfd68 <line:469:5, col:15> col:15 __cancel_jmp_buf '__jmp_buf':'long [8]'
| | `-FieldDecl 0x5640a11cfdd0 <line:470:5, col:9> col:9 __mask_was_saved 'int'
| |-FieldDecl 0x5640a11cffa0 <line:467:3, line:471:23> col:5 __cancel_jmp_buf 'struct (anonymous struct at ./split_9/mix050_rmo.oepc_false-unreach-call.i:467:3) [1]'
| `-FieldDecl 0x5640a11d0098 <line:472:3, col:16> col:9 __pad 'void *[4]'
|-TypedefDecl 0x5640a11d0150 <line:465:1, line:473:3> col:3 referenced __pthread_unwind_buf_t 'struct __pthread_unwind_buf_t':'__pthread_unwind_buf_t'
| |-ElaboratedType 0x5640a11d00f0 'struct __pthread_unwind_buf_t' sugar
| | `-RecordType 0x5640a11cfc50 '__pthread_unwind_buf_t'
| |   `-Record 0x5640a11cfbd0 ''
| `-AlignedAttr 0x5640a11d01a8 <col:42> aligned
|   `-<<<NULL>>>
|-RecordDecl 0x5640a11d0220 <line:474:1, line:480:1> line:474:8 struct __pthread_cleanup_frame definition
| |-FieldDecl 0x5640a11d0380 <line:476:3, col:35> col:10 __cancel_routine 'void (*)(void *)'
| |-FieldDecl 0x5640a11d03e8 <line:477:3, col:9> col:9 __cancel_arg 'void *'
| |-FieldDecl 0x5640a11d0450 <line:478:3, col:7> col:7 __do_it 'int'
| `-FieldDecl 0x5640a11d04b8 <line:479:3, col:7> col:7 __cancel_type 'int'
|-FunctionDecl 0x5640a11d06c0 <line:481:1, col:69> col:13 __pthread_register_cancel 'void (__pthread_unwind_buf_t *)' extern
| `-ParmVarDecl 0x5640a11d05b0 <col:40, col:64> col:64 __buf '__pthread_unwind_buf_t *'
|-FunctionDecl 0x5640a11d0808 <line:483:1, col:71> col:13 __pthread_unregister_cancel 'void (__pthread_unwind_buf_t *)' extern
| `-ParmVarDecl 0x5640a11d0778 <col:42, col:66> col:66 __buf '__pthread_unwind_buf_t *'
|-FunctionDecl 0x5640a11d0a00 <line:485:1, line:487:31> line:485:13 __pthread_unwind_next 'void (__pthread_unwind_buf_t *) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x5640a11d08c0 <col:36, col:60> col:60 __buf '__pthread_unwind_buf_t *'
| `-WeakAttr 0x5640a11d0aa8 <line:487:22>
|-RecordDecl 0x5640a11d0b00 <line:489:1, col:8> col:8 struct __jmp_buf_tag
|-FunctionDecl 0x5640a11d0e18 <line:490:1, col:98> col:12 __sigsetjmp 'int (struct __jmp_buf_tag *, int)' extern
| |-ParmVarDecl 0x5640a11d0c78 <col:25, col:47> col:47 __env 'struct __jmp_buf_tag *'
| |-ParmVarDecl 0x5640a11d0cf8 <col:54, col:58> col:58 __savemask 'int'
| |-NoThrowAttr 0x5640a11d0ec8 <col:86>
| `-ReturnsTwiceAttr 0x5640a11d0f20 <col:12> Implicit
|-FunctionDecl 0x5640a11d1248 <line:491:1, line:493:79> line:491:12 pthread_mutex_init 'int (pthread_mutex_t *, const pthread_mutexattr_t *)' extern
| |-ParmVarDecl 0x5640a11d0ff0 <col:32, col:49> col:49 __mutex 'pthread_mutex_t *'
| |-ParmVarDecl 0x5640a11d1100 <line:492:11, col:38> col:38 __mutexattr 'const pthread_mutexattr_t *'
| |-NoThrowAttr 0x5640a11d12f8 <line:493:22>
| `-NonNullAttr 0x5640a11d1350 <col:63, col:77> 1
|-FunctionDecl 0x5640a11d14c8 <line:494:1, line:495:79> line:494:12 pthread_mutex_destroy 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x5640a11d1398 <col:35, col:52> col:52 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x5640a11d1570 <line:495:22>
| `-NonNullAttr 0x5640a11d15c8 <col:63, col:77> 1
|-FunctionDecl 0x5640a11d16d0 <line:496:1, line:497:68> line:496:12 pthread_mutex_trylock 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x5640a11d1618 <col:35, col:52> col:52 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x5640a11d1778 <line:497:22>
| `-NonNullAttr 0x5640a11d17d0 <col:52, col:66> 1
|-FunctionDecl 0x5640a11d18d0 <line:498:1, line:499:68> line:498:12 pthread_mutex_lock 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x5640a11d1818 <col:32, col:49> col:49 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x5640a11d1978 <line:499:22>
| `-NonNullAttr 0x5640a11d19d0 <col:52, col:66> 1
|-FunctionDecl 0x5640a11d2c28 <line:500:1, line:502:85> line:500:12 pthread_mutex_timedlock 'int (pthread_mutex_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x5640a11d2a38 <col:37, col:65> col:65 __mutex 'pthread_mutex_t *restrict'
| |-ParmVarDecl 0x5640a11d2ac8 <line:501:9, line:502:9> col:9 __abstime 'const struct timespec *restrict'
| |-NoThrowAttr 0x5640a11d2cd8 <col:36>
| `-NonNullAttr 0x5640a11d2d30 <col:66, col:83> 1 2
|-FunctionDecl 0x5640a11d2e30 <line:503:1, line:504:68> line:503:12 pthread_mutex_unlock 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x5640a11d2d78 <col:34, col:51> col:51 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x5640a11d2ed8 <line:504:22>
| `-NonNullAttr 0x5640a11d2f30 <col:52, col:66> 1
|-FunctionDecl 0x5640a11d31c8 <line:505:1, line:508:82> line:505:12 pthread_mutex_getprioceiling 'int (const pthread_mutex_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x5640a11d2fe0 <col:42, line:506:18> col:18 __mutex 'const pthread_mutex_t *restrict'
| |-ParmVarDecl 0x5640a11d3060 <line:507:7, col:23> col:23 __prioceiling 'int *restrict'
| |-NoThrowAttr 0x5640a11d3278 <line:508:22>
| `-NonNullAttr 0x5640a11d32d0 <col:63, col:80> 1 2
|-FunctionDecl 0x5640a11d3598 <line:509:1, line:512:82> line:509:12 pthread_mutex_setprioceiling 'int (pthread_mutex_t *restrict, int, int *restrict)' extern
| |-ParmVarDecl 0x5640a11d3318 <col:42, col:70> col:70 __mutex 'pthread_mutex_t *restrict'
| |-ParmVarDecl 0x5640a11d3398 <line:510:7, col:11> col:11 __prioceiling 'int'
| |-ParmVarDecl 0x5640a11d3418 <line:511:7, col:23> col:23 __old_ceiling 'int *restrict'
| |-NoThrowAttr 0x5640a11d3650 <line:512:22>
| `-NonNullAttr 0x5640a11d36a8 <col:63, col:80> 1 3
|-FunctionDecl 0x5640a11d37b0 <line:513:1, line:514:79> line:513:12 pthread_mutex_consistent 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x5640a11d36f8 <col:38, col:55> col:55 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x5640a11d3858 <line:514:22>
| `-NonNullAttr 0x5640a11d38b0 <col:63, col:77> 1
|-FunctionDecl 0x5640a11d3ad8 <line:515:1, line:516:79> line:515:12 pthread_mutexattr_init 'int (pthread_mutexattr_t *)' extern
| |-ParmVarDecl 0x5640a11d3960 <col:36, col:57> col:57 __attr 'pthread_mutexattr_t *'
| |-NoThrowAttr 0x5640a11d3b80 <line:516:22>
| `-NonNullAttr 0x5640a11d3bd8 <col:63, col:77> 1
|-FunctionDecl 0x5640a11d3ce0 <line:517:1, line:518:79> line:517:12 pthread_mutexattr_destroy 'int (pthread_mutexattr_t *)' extern
| |-ParmVarDecl 0x5640a11d3c28 <col:39, col:60> col:60 __attr 'pthread_mutexattr_t *'
| |-NoThrowAttr 0x5640a11d3d88 <line:518:22>
| `-NonNullAttr 0x5640a11d3de0 <col:63, col:77> 1
|-FunctionDecl 0x5640a11d4008 <line:519:1, line:522:82> line:519:12 pthread_mutexattr_getpshared 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x5640a11d3e28 <col:42, line:520:18> col:18 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x5640a11d3ea8 <line:521:7, col:23> col:23 __pshared 'int *restrict'
| |-NoThrowAttr 0x5640a11d40b8 <line:522:22>
| `-NonNullAttr 0x5640a11d4110 <col:63, col:80> 1 2
|-FunctionDecl 0x5640a11d4318 <line:523:1, line:525:79> line:523:12 pthread_mutexattr_setpshared 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x5640a11d4158 <col:42, col:63> col:63 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x5640a11d41d8 <line:524:7, col:11> col:11 __pshared 'int'
| |-NoThrowAttr 0x5640a11d43c8 <line:525:22>
| `-NonNullAttr 0x5640a11d4420 <col:63, col:77> 1
|-FunctionDecl 0x5640a11d45c8 <line:526:1, line:528:82> line:526:12 pthread_mutexattr_gettype 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x5640a11d4468 <col:39, line:527:11> col:11 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x5640a11d44e8 <col:19, col:35> col:35 __kind 'int *restrict'
| |-NoThrowAttr 0x5640a11d4678 <line:528:22>
| `-NonNullAttr 0x5640a11d46d0 <col:63, col:80> 1 2
|-FunctionDecl 0x5640a11d4858 <line:529:1, line:530:79> line:529:12 pthread_mutexattr_settype 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x5640a11d4718 <col:39, col:60> col:60 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x5640a11d4798 <col:68, col:72> col:72 __kind 'int'
| |-NoThrowAttr 0x5640a11d4908 <line:530:22>
| `-NonNullAttr 0x5640a11d4960 <col:63, col:77> 1
|-FunctionDecl 0x5640a11d4b20 <line:531:1, line:534:82> line:531:12 pthread_mutexattr_getprotocol 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x5640a11d49a8 <col:43, line:532:19> col:19 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x5640a11d4a40 <line:533:8, col:24> col:24 __protocol 'int *restrict'
| |-NoThrowAttr 0x5640a11d4bd0 <line:534:22>
| `-NonNullAttr 0x5640a11d4c28 <col:63, col:80> 1 2
|-FunctionDecl 0x5640a11d4db8 <line:535:1, line:537:79> line:535:12 pthread_mutexattr_setprotocol 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x5640a11d4c78 <col:43, col:64> col:64 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x5640a11d4cf8 <line:536:8, col:12> col:12 __protocol 'int'
| |-NoThrowAttr 0x5640a11d4e68 <line:537:22>
| `-NonNullAttr 0x5640a11d4ec0 <col:63, col:77> 1
|-FunctionDecl 0x5640a11d5068 <line:538:1, line:541:82> line:538:12 pthread_mutexattr_getprioceiling 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x5640a11d4f08 <col:46, line:539:22> col:22 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x5640a11d4f88 <line:540:11, col:27> col:27 __prioceiling 'int *restrict'
| |-NoThrowAttr 0x5640a11d5118 <line:541:22>
| `-NonNullAttr 0x5640a11d5170 <col:63, col:80> 1 2
|-FunctionDecl 0x5640a11d52f8 <line:542:1, line:544:79> line:542:12 pthread_mutexattr_setprioceiling 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x5640a11d51b8 <col:46, col:67> col:67 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x5640a11d5238 <line:543:11, col:15> col:15 __prioceiling 'int'
| |-NoThrowAttr 0x5640a11d53a8 <line:544:22>
| `-NonNullAttr 0x5640a11d5400 <col:63, col:77> 1
|-FunctionDecl 0x5640a11d55e8 <line:545:1, line:547:82> line:545:12 pthread_mutexattr_getrobust 'int (const pthread_mutexattr_t *, int *)' extern
| |-ParmVarDecl 0x5640a11d5448 <col:41, col:68> col:68 __attr 'const pthread_mutexattr_t *'
| |-ParmVarDecl 0x5640a11d54c8 <line:546:6, col:11> col:11 __robustness 'int *'
| |-NoThrowAttr 0x5640a11d5698 <line:547:22>
| `-NonNullAttr 0x5640a11d56f0 <col:63, col:80> 1 2
|-FunctionDecl 0x5640a11d5878 <line:548:1, line:550:79> line:548:12 pthread_mutexattr_setrobust 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x5640a11d5738 <col:41, col:62> col:62 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x5640a11d57b8 <line:549:6, col:10> col:10 __robustness 'int'
| |-NoThrowAttr 0x5640a11d5928 <line:550:22>
| `-NonNullAttr 0x5640a11d5980 <col:63, col:77> 1
|-FunctionDecl 0x5640a11d6cf8 <line:551:1, line:553:86> line:551:12 pthread_rwlock_init 'int (pthread_rwlock_t *restrict, const pthread_rwlockattr_t *restrict)' extern
| |-ParmVarDecl 0x5640a11d6aa0 <col:33, col:62> col:62 __rwlock 'pthread_rwlock_t *restrict'
| |-ParmVarDecl 0x5640a11d6bb0 <line:552:5, line:553:5> col:5 __attr 'const pthread_rwlockattr_t *restrict'
| |-NoThrowAttr 0x5640a11d6da8 <col:29>
| `-NonNullAttr 0x5640a11d6e00 <col:70, col:84> 1
|-FunctionDecl 0x5640a11d6f78 <line:554:1, line:555:79> line:554:12 pthread_rwlock_destroy 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x5640a11d6e48 <col:36, col:54> col:54 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x5640a11d7020 <line:555:22>
| `-NonNullAttr 0x5640a11d7078 <col:63, col:77> 1
|-FunctionDecl 0x5640a11d7180 <line:556:1, line:557:68> line:556:12 pthread_rwlock_rdlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x5640a11d70c8 <col:35, col:53> col:53 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x5640a11d7228 <line:557:22>
| `-NonNullAttr 0x5640a11d7280 <col:52, col:66> 1
|-FunctionDecl 0x5640a11d7380 <line:558:1, line:559:65> line:558:12 pthread_rwlock_tryrdlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x5640a11d72c8 <col:38, col:56> col:56 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x5640a11d7428 <line:559:19>
| `-NonNullAttr 0x5640a11d7480 <col:49, col:63> 1
|-FunctionDecl 0x5640a11d76b8 <line:560:1, line:562:88> line:560:12 pthread_rwlock_timedrdlock 'int (pthread_rwlock_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x5640a11d74c8 <col:40, col:69> col:69 __rwlock 'pthread_rwlock_t *restrict'
| |-ParmVarDecl 0x5640a11d7558 <line:561:12, line:562:12> col:12 __abstime 'const struct timespec *restrict'
| |-NoThrowAttr 0x5640a11d7768 <col:39>
| `-NonNullAttr 0x5640a11d77c0 <col:69, col:86> 1 2
|-FunctionDecl 0x5640a11d78c0 <line:563:1, line:564:68> line:563:12 pthread_rwlock_wrlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x5640a11d7808 <col:35, col:53> col:53 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x5640a11d7968 <line:564:22>
| `-NonNullAttr 0x5640a11d79c0 <col:52, col:66> 1
|-FunctionDecl 0x5640a11d7b28 <line:565:1, line:566:68> line:565:12 pthread_rwlock_trywrlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x5640a11d7a70 <col:38, col:56> col:56 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x5640a11d7bd0 <line:566:22>
| `-NonNullAttr 0x5640a11d7c28 <col:52, col:66> 1
|-FunctionDecl 0x5640a11d7de8 <line:567:1, line:569:88> line:567:12 pthread_rwlock_timedwrlock 'int (pthread_rwlock_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x5640a11d7c78 <col:40, col:69> col:69 __rwlock 'pthread_rwlock_t *restrict'
| |-ParmVarDecl 0x5640a11d7d08 <line:568:12, line:569:12> col:12 __abstime 'const struct timespec *restrict'
| |-NoThrowAttr 0x5640a11d7e98 <col:39>
| `-NonNullAttr 0x5640a11d7ef0 <col:69, col:86> 1 2
|-FunctionDecl 0x5640a11d7ff0 <line:570:1, line:571:68> line:570:12 pthread_rwlock_unlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x5640a11d7f38 <col:35, col:53> col:53 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x5640a11d8098 <line:571:22>
| `-NonNullAttr 0x5640a11d80f0 <col:52, col:66> 1
|-FunctionDecl 0x5640a11d82d8 <line:572:1, line:573:79> line:572:12 pthread_rwlockattr_init 'int (pthread_rwlockattr_t *)' extern
| |-ParmVarDecl 0x5640a11d81a0 <col:37, col:59> col:59 __attr 'pthread_rwlockattr_t *'
| |-NoThrowAttr 0x5640a11d8380 <line:573:22>
| `-NonNullAttr 0x5640a11d83d8 <col:63, col:77> 1
|-FunctionDecl 0x5640a11d84e0 <line:574:1, line:575:79> line:574:12 pthread_rwlockattr_destroy 'int (pthread_rwlockattr_t *)' extern
| |-ParmVarDecl 0x5640a11d8428 <col:40, col:62> col:62 __attr 'pthread_rwlockattr_t *'
| |-NoThrowAttr 0x5640a11d8588 <line:575:22>
| `-NonNullAttr 0x5640a11d85e0 <col:63, col:77> 1
|-FunctionDecl 0x5640a11d8808 <line:576:1, line:579:82> line:576:12 pthread_rwlockattr_getpshared 'int (const pthread_rwlockattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x5640a11d8628 <col:43, line:577:19> col:19 __attr 'const pthread_rwlockattr_t *restrict'
| |-ParmVarDecl 0x5640a11d86a8 <line:578:8, col:24> col:24 __pshared 'int *restrict'
| |-NoThrowAttr 0x5640a11d88b8 <line:579:22>
| `-NonNullAttr 0x5640a11d8910 <col:63, col:80> 1 2
|-FunctionDecl 0x5640a11d8b38 <line:580:1, line:582:79> line:580:12 pthread_rwlockattr_setpshared 'int (pthread_rwlockattr_t *, int)' extern
| |-ParmVarDecl 0x5640a11d8958 <col:43, col:65> col:65 __attr 'pthread_rwlockattr_t *'
| |-ParmVarDecl 0x5640a11d89d8 <line:581:8, col:12> col:12 __pshared 'int'
| |-NoThrowAttr 0x5640a11d8be8 <line:582:22>
| `-NonNullAttr 0x5640a11d8c40 <col:63, col:77> 1
|-FunctionDecl 0x5640a11d8de8 <line:583:1, line:586:82> line:583:12 pthread_rwlockattr_getkind_np 'int (const pthread_rwlockattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x5640a11d8c88 <col:43, line:584:19> col:19 __attr 'const pthread_rwlockattr_t *restrict'
| |-ParmVarDecl 0x5640a11d8d08 <line:585:8, col:24> col:24 __pref 'int *restrict'
| |-NoThrowAttr 0x5640a11d8e98 <line:586:22>
| `-NonNullAttr 0x5640a11d8ef0 <col:63, col:80> 1 2
|-FunctionDecl 0x5640a11d9078 <line:587:1, line:588:93> line:587:12 pthread_rwlockattr_setkind_np 'int (pthread_rwlockattr_t *, int)' extern
| |-ParmVarDecl 0x5640a11d8f38 <col:43, col:65> col:65 __attr 'pthread_rwlockattr_t *'
| |-ParmVarDecl 0x5640a11d8fb8 <line:588:8, col:12> col:12 __pref 'int'
| |-NoThrowAttr 0x5640a11d9128 <col:36>
| `-NonNullAttr 0x5640a11d9180 <col:77, col:91> 1
|-FunctionDecl 0x5640a11d94b8 <line:589:1, line:591:79> line:589:12 pthread_cond_init 'int (pthread_cond_t *restrict, const pthread_condattr_t *restrict)' extern
| |-ParmVarDecl 0x5640a11d9260 <col:31, col:58> col:58 __cond 'pthread_cond_t *restrict'
| |-ParmVarDecl 0x5640a11d9370 <line:590:10, col:47> col:47 __cond_attr 'const pthread_condattr_t *restrict'
| |-NoThrowAttr 0x5640a11d9568 <line:591:22>
| `-NonNullAttr 0x5640a11d95c0 <col:63, col:77> 1
|-FunctionDecl 0x5640a11d9738 <line:592:1, line:593:79> line:592:12 pthread_cond_destroy 'int (pthread_cond_t *)' extern
| |-ParmVarDecl 0x5640a11d9608 <col:34, col:50> col:50 __cond 'pthread_cond_t *'
| |-NoThrowAttr 0x5640a11d97e0 <line:593:22>
| `-NonNullAttr 0x5640a11d9838 <col:63, col:77> 1
|-FunctionDecl 0x5640a11d9940 <line:594:1, line:595:68> line:594:12 pthread_cond_signal 'int (pthread_cond_t *)' extern
| |-ParmVarDecl 0x5640a11d9888 <col:33, col:49> col:49 __cond 'pthread_cond_t *'
| |-NoThrowAttr 0x5640a11d99e8 <line:595:22>
| `-NonNullAttr 0x5640a11d9a40 <col:52, col:66> 1
|-FunctionDecl 0x5640a11d9b58 <line:596:1, line:597:68> line:596:12 pthread_cond_broadcast 'int (pthread_cond_t *)' extern
| |-ParmVarDecl 0x5640a11d9aa0 <col:36, col:52> col:52 __cond 'pthread_cond_t *'
| |-NoThrowAttr 0x5640a11d9c00 <line:597:22>
| `-NonNullAttr 0x5640a11d9c58 <col:52, col:66> 1
|-FunctionDecl 0x5640a11d9e88 <line:598:1, line:600:41> line:598:12 pthread_cond_wait 'int (pthread_cond_t *restrict, pthread_mutex_t *restrict)' extern
| |-ParmVarDecl 0x5640a11d9ca8 <col:31, col:58> col:58 __cond 'pthread_cond_t *restrict'
| |-ParmVarDecl 0x5640a11d9d20 <line:599:10, col:38> col:38 __mutex 'pthread_mutex_t *restrict'
| `-NonNullAttr 0x5640a11d9f38 <line:600:22, col:39> 1 2
|-FunctionDecl 0x5640a11da268 <line:601:1, line:604:44> line:601:12 pthread_cond_timedwait 'int (pthread_cond_t *restrict, pthread_mutex_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x5640a11d9fb8 <col:36, col:63> col:63 __cond 'pthread_cond_t *restrict'
| |-ParmVarDecl 0x5640a11da030 <line:602:8, col:36> col:36 __mutex 'pthread_mutex_t *restrict'
| |-ParmVarDecl 0x5640a11da0c0 <line:603:8, col:42> col:42 __abstime 'const struct timespec *restrict'
| `-NonNullAttr 0x5640a11da320 <line:604:22, col:42> 1 2 3
|-FunctionDecl 0x5640a11da538 <line:605:1, line:606:79> line:605:12 pthread_condattr_init 'int (pthread_condattr_t *)' extern
| |-ParmVarDecl 0x5640a11da400 <col:35, col:55> col:55 __attr 'pthread_condattr_t *'
| |-NoThrowAttr 0x5640a11da5e0 <line:606:22>
| `-NonNullAttr 0x5640a11da638 <col:63, col:77> 1
|-FunctionDecl 0x5640a11da740 <line:607:1, line:608:79> line:607:12 pthread_condattr_destroy 'int (pthread_condattr_t *)' extern
| |-ParmVarDecl 0x5640a11da688 <col:38, col:58> col:58 __attr 'pthread_condattr_t *'
| |-NoThrowAttr 0x5640a11da7e8 <line:608:22>
| `-NonNullAttr 0x5640a11da840 <col:63, col:77> 1
|-FunctionDecl 0x5640a11daaa0 <line:609:1, line:612:82> line:609:12 pthread_condattr_getpshared 'int (const pthread_condattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x5640a11da888 <col:41, line:610:17> col:17 __attr 'const pthread_condattr_t *restrict'
| |-ParmVarDecl 0x5640a11da908 <line:611:6, col:22> col:22 __pshared 'int *restrict'
| |-NoThrowAttr 0x5640a11dab50 <line:612:22>
| `-NonNullAttr 0x5640a11daba8 <col:63, col:80> 1 2
|-FunctionDecl 0x5640a11dadb8 <line:613:1, line:614:94> line:613:12 pthread_condattr_setpshared 'int (pthread_condattr_t *, int)' extern
| |-ParmVarDecl 0x5640a11dabf8 <col:41, col:61> col:61 __attr 'pthread_condattr_t *'
| |-ParmVarDecl 0x5640a11dac78 <line:614:6, col:10> col:10 __pshared 'int'
| |-NoThrowAttr 0x5640a11dae68 <col:37>
| `-NonNullAttr 0x5640a11daec0 <col:78, col:92> 1
|-FunctionDecl 0x5640a11db0d8 <line:615:1, line:618:82> line:615:12 pthread_condattr_getclock 'int (const pthread_condattr_t *restrict, __clockid_t *restrict)' extern
| |-ParmVarDecl 0x5640a11daf08 <col:39, line:616:22> col:22 __attr 'const pthread_condattr_t *restrict'
| |-ParmVarDecl 0x5640a11dafb0 <line:617:11, col:35> col:35 __clock_id '__clockid_t *restrict'
| |-NoThrowAttr 0x5640a11db188 <line:618:22>
| `-NonNullAttr 0x5640a11db1e0 <col:63, col:80> 1 2
|-FunctionDecl 0x5640a11db3a8 <line:619:1, line:621:79> line:619:12 pthread_condattr_setclock 'int (pthread_condattr_t *, __clockid_t)' extern
| |-ParmVarDecl 0x5640a11db228 <col:39, col:59> col:59 __attr 'pthread_condattr_t *'
| |-ParmVarDecl 0x5640a11db2a0 <line:620:11, col:23> col:23 __clock_id '__clockid_t':'int'
| |-NoThrowAttr 0x5640a11db458 <line:621:22>
| `-NonNullAttr 0x5640a11db4b0 <col:63, col:77> 1
|-FunctionDecl 0x5640a11db758 <line:622:1, line:623:79> line:622:12 pthread_spin_init 'int (pthread_spinlock_t *, int)' extern
| |-ParmVarDecl 0x5640a11db590 <col:31, col:51> col:51 __lock 'pthread_spinlock_t *'
| |-ParmVarDecl 0x5640a11db610 <col:59, col:63> col:63 __pshared 'int'
| |-NoThrowAttr 0x5640a11db808 <line:623:22>
| `-NonNullAttr 0x5640a11db860 <col:63, col:77> 1
|-FunctionDecl 0x5640a11db9d8 <line:624:1, line:625:79> line:624:12 pthread_spin_destroy 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x5640a11db8a8 <col:34, col:54> col:54 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x5640a11dbab0 <line:625:22>
| `-NonNullAttr 0x5640a11dbb08 <col:63, col:77> 1
|-FunctionDecl 0x5640a11dbc10 <line:626:1, line:627:68> line:626:12 pthread_spin_lock 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x5640a11dbb58 <col:31, col:51> col:51 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x5640a11dbcb8 <line:627:22>
| `-NonNullAttr 0x5640a11dbd10 <col:52, col:66> 1
|-FunctionDecl 0x5640a11dbe10 <line:628:1, line:629:68> line:628:12 pthread_spin_trylock 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x5640a11dbd58 <col:34, col:54> col:54 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x5640a11dbeb8 <line:629:22>
| `-NonNullAttr 0x5640a11dbf10 <col:52, col:66> 1
|-FunctionDecl 0x5640a11dc010 <line:630:1, line:631:68> line:630:12 pthread_spin_unlock 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x5640a11dbf58 <col:33, col:53> col:53 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x5640a11dc0b8 <line:631:22>
| `-NonNullAttr 0x5640a11dc110 <col:52, col:66> 1
|-FunctionDecl 0x5640a11dc4e8 <line:632:1, line:635:79> line:632:12 pthread_barrier_init 'int (pthread_barrier_t *restrict, const pthread_barrierattr_t *restrict, unsigned int)' extern
| |-ParmVarDecl 0x5640a11dc1f0 <col:34, col:64> col:64 __barrier 'pthread_barrier_t *restrict'
| |-ParmVarDecl 0x5640a11dc300 <line:633:6, line:634:6> col:6 __attr 'const pthread_barrierattr_t *restrict'
| |-ParmVarDecl 0x5640a11dc380 <col:14, col:27> col:27 __count 'unsigned int'
| |-NoThrowAttr 0x5640a11dc5a0 <line:635:22>
| `-NonNullAttr 0x5640a11dc5f8 <col:63, col:77> 1
|-FunctionDecl 0x5640a11dc778 <line:636:1, line:637:79> line:636:12 pthread_barrier_destroy 'int (pthread_barrier_t *)' extern
| |-ParmVarDecl 0x5640a11dc648 <col:37, col:56> col:56 __barrier 'pthread_barrier_t *'
| |-NoThrowAttr 0x5640a11dc820 <line:637:22>
| `-NonNullAttr 0x5640a11dc878 <col:63, col:77> 1
|-FunctionDecl 0x5640a11dc980 <line:638:1, line:639:68> line:638:12 pthread_barrier_wait 'int (pthread_barrier_t *)' extern
| |-ParmVarDecl 0x5640a11dc8c8 <col:34, col:53> col:53 __barrier 'pthread_barrier_t *'
| |-NoThrowAttr 0x5640a11dca28 <line:639:22>
| `-NonNullAttr 0x5640a11dca80 <col:52, col:66> 1
|-FunctionDecl 0x5640a11ddc88 <line:640:1, line:641:79> line:640:12 pthread_barrierattr_init 'int (pthread_barrierattr_t *)' extern
| |-ParmVarDecl 0x5640a11ddb50 <col:38, col:61> col:61 __attr 'pthread_barrierattr_t *'
| |-NoThrowAttr 0x5640a11ddd30 <line:641:22>
| `-NonNullAttr 0x5640a11ddd88 <col:63, col:77> 1
|-FunctionDecl 0x5640a11dde90 <line:642:1, line:643:79> line:642:12 pthread_barrierattr_destroy 'int (pthread_barrierattr_t *)' extern
| |-ParmVarDecl 0x5640a11dddd8 <col:41, col:64> col:64 __attr 'pthread_barrierattr_t *'
| |-NoThrowAttr 0x5640a11ddf38 <line:643:22>
| `-NonNullAttr 0x5640a11ddf90 <col:63, col:77> 1
|-FunctionDecl 0x5640a11de1b8 <line:644:1, line:647:82> line:644:12 pthread_barrierattr_getpshared 'int (const pthread_barrierattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x5640a11ddfd8 <col:44, line:645:20> col:20 __attr 'const pthread_barrierattr_t *restrict'
| |-ParmVarDecl 0x5640a11de058 <line:646:9, col:25> col:25 __pshared 'int *restrict'
| |-NoThrowAttr 0x5640a11de268 <line:647:22>
| `-NonNullAttr 0x5640a11de2c0 <col:63, col:80> 1 2
|-FunctionDecl 0x5640a11de4c8 <line:648:1, line:650:79> line:648:12 pthread_barrierattr_setpshared 'int (pthread_barrierattr_t *, int)' extern
| |-ParmVarDecl 0x5640a11de308 <col:44, col:67> col:67 __attr 'pthread_barrierattr_t *'
| |-ParmVarDecl 0x5640a11de388 <line:649:9, col:13> col:13 __pshared 'int'
| |-NoThrowAttr 0x5640a11de578 <line:650:22>
| `-NonNullAttr 0x5640a11de5d0 <col:63, col:77> 1
|-FunctionDecl 0x5640a11de918 <line:651:1, line:653:79> line:651:12 pthread_key_create 'int (pthread_key_t *, void (*)(void *))' extern
| |-ParmVarDecl 0x5640a11de6b0 <col:32, col:47> col:47 __key 'pthread_key_t *'
| |-ParmVarDecl 0x5640a11de7d0 <line:652:11, col:43> col:18 __destr_function 'void (*)(void *)'
| |-NoThrowAttr 0x5640a11de9c8 <line:653:22>
| `-NonNullAttr 0x5640a11dea20 <col:63, col:77> 1
|-FunctionDecl 0x5640a11deb88 <line:654:1, col:92> col:12 pthread_key_delete 'int (pthread_key_t)' extern
| |-ParmVarDecl 0x5640a11dea68 <col:32, col:46> col:46 __key 'pthread_key_t':'unsigned int'
| `-NoThrowAttr 0x5640a11dec30 <col:69>
|-FunctionDecl 0x5640a11deda8 <line:655:1, col:95> col:14 pthread_getspecific 'void *(pthread_key_t)' extern
| |-ParmVarDecl 0x5640a11dec98 <col:35, col:49> col:49 __key 'pthread_key_t':'unsigned int'
| `-NoThrowAttr 0x5640a11dee50 <col:72>
|-FunctionDecl 0x5640a11df088 <line:656:1, line:657:67> line:656:12 pthread_setspecific 'int (pthread_key_t, const void *)' extern
| |-ParmVarDecl 0x5640a11deeb8 <col:33, col:47> col:47 __key 'pthread_key_t':'unsigned int'
| |-ParmVarDecl 0x5640a11def68 <line:657:5, col:17> col:17 __pointer 'const void *'
| `-NoThrowAttr 0x5640a11df138 <col:44>
|-FunctionDecl 0x5640a11df358 <line:658:1, line:660:79> line:658:12 pthread_getcpuclockid 'int (pthread_t, __clockid_t *)' extern
| |-ParmVarDecl 0x5640a11df1a0 <col:35, col:45> col:45 __thread_id 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x5640a11df218 <line:659:7, col:20> col:20 __clock_id '__clockid_t *'
| |-NoThrowAttr 0x5640a11df408 <line:660:22>
| `-NonNullAttr 0x5640a11df460 <col:63, col:77> 2
|-FunctionDecl 0x5640a11df8a8 <line:661:1, line:663:70> line:661:12 pthread_atfork 'int (void (*)(void), void (*)(void), void (*)(void))' extern
| |-ParmVarDecl 0x5640a11df540 <col:28, col:51> col:35 __prepare 'void (*)(void)'
| |-ParmVarDecl 0x5640a11df650 <line:662:7, col:29> col:14 __parent 'void (*)(void)'
| |-ParmVarDecl 0x5640a11df760 <line:663:7, col:28> col:14 __child 'void (*)(void)'
| `-NoThrowAttr 0x5640a11df960 <col:47>
|-FunctionDecl 0x5640a11dfaf0 <line:665:1, col:20> col:8 used P0 'void *(void *)'
| `-ParmVarDecl 0x5640a11df9d0 <col:11, col:17> col:17 arg 'void *'
|-FunctionDecl 0x5640a11dfc48 <line:666:1, col:20> col:8 used P1 'void *(void *)'
| `-ParmVarDecl 0x5640a11dfbb0 <col:11, col:17> col:17 arg 'void *'
|-FunctionDecl 0x5640a11dfda0 <line:667:1, col:20> col:8 used P2 'void *(void *)'
| `-ParmVarDecl 0x5640a11dfd08 <col:11, col:17> col:17 arg 'void *'
|-FunctionDecl 0x5640a11dfef8 <line:668:1, col:20> col:8 used P3 'void *(void *)'
| `-ParmVarDecl 0x5640a11dfe60 <col:11, col:17> col:17 arg 'void *'
|-FunctionDecl 0x5640a11dffc0 <line:669:1, col:12> col:6 fence 'void ()'
|-FunctionDecl 0x5640a11e0080 <line:670:1, col:12> col:6 isync 'void ()'
|-FunctionDecl 0x5640a11e0140 <line:671:1, col:14> col:6 lwfence 'void ()'
|-VarDecl 0x5640a11e01f8 <line:672:1, col:5> col:5 used __unbuffered_cnt 'int'
|-VarDecl 0x5640a11e0278 prev 0x5640a11e01f8 <line:673:1, col:24> col:5 used __unbuffered_cnt 'int' cinit
| `-IntegerLiteral 0x5640a11e02e0 <col:24> 'int' 0
|-VarDecl 0x5640a11e0318 <line:674:1, col:5> col:5 used __unbuffered_p0_EAX 'int'
|-VarDecl 0x5640a11e0398 prev 0x5640a11e0318 <line:675:1, col:27> col:5 used __unbuffered_p0_EAX 'int' cinit
| `-IntegerLiteral 0x5640a11e0400 <col:27> 'int' 0
|-VarDecl 0x5640a11e0438 <line:676:1, col:5> col:5 used __unbuffered_p1_EAX 'int'
|-VarDecl 0x5640a11e04b8 prev 0x5640a11e0438 <line:677:1, col:27> col:5 used __unbuffered_p1_EAX 'int' cinit
| `-IntegerLiteral 0x5640a11e0520 <col:27> 'int' 0
|-VarDecl 0x5640a11e0558 <line:678:1, col:5> col:5 used __unbuffered_p2_EAX 'int'
|-VarDecl 0x5640a11e05d8 prev 0x5640a11e0558 <line:679:1, col:27> col:5 used __unbuffered_p2_EAX 'int' cinit
| `-IntegerLiteral 0x5640a11e0640 <col:27> 'int' 0
|-VarDecl 0x5640a11e0678 <line:680:1, col:5> col:5 used __unbuffered_p3_EAX 'int'
|-VarDecl 0x5640a11e06f8 prev 0x5640a11e0678 <line:681:1, col:27> col:5 used __unbuffered_p3_EAX 'int' cinit
| `-IntegerLiteral 0x5640a11e0760 <col:27> 'int' 0
|-VarDecl 0x5640a11e0798 <line:682:1, col:5> col:5 used a 'int'
|-VarDecl 0x5640a11e0818 prev 0x5640a11e0798 <line:683:1, col:9> col:5 used a 'int' cinit
| `-IntegerLiteral 0x5640a11e0880 <col:9> 'int' 0
|-VarDecl 0x5640a11e08b0 <line:684:1, col:7> col:7 used a$flush_delayed '_Bool'
|-VarDecl 0x5640a11e0930 <line:685:1, col:5> col:5 used a$mem_tmp 'int'
|-VarDecl 0x5640a11e09a8 <line:686:1, col:7> col:7 used a$r_buff0_thd0 '_Bool'
|-VarDecl 0x5640a11e0a20 <line:687:1, col:7> col:7 used a$r_buff0_thd1 '_Bool'
|-VarDecl 0x5640a11e0b00 <line:688:1, col:7> col:7 used a$r_buff0_thd2 '_Bool'
|-VarDecl 0x5640a11e0b78 <line:689:1, col:7> col:7 used a$r_buff0_thd3 '_Bool'
|-VarDecl 0x5640a11e0bf0 <line:690:1, col:7> col:7 used a$r_buff0_thd4 '_Bool'
|-VarDecl 0x5640a11e0c68 <line:691:1, col:7> col:7 used a$r_buff1_thd0 '_Bool'
|-VarDecl 0x5640a11e0ce0 <line:692:1, col:7> col:7 used a$r_buff1_thd1 '_Bool'
|-VarDecl 0x5640a11e0d58 <line:693:1, col:7> col:7 used a$r_buff1_thd2 '_Bool'
|-VarDecl 0x5640a11e0dd0 <line:694:1, col:7> col:7 used a$r_buff1_thd3 '_Bool'
|-VarDecl 0x5640a11e0e48 <line:695:1, col:7> col:7 used a$r_buff1_thd4 '_Bool'
|-VarDecl 0x5640a11e0ec0 <line:696:1, col:7> col:7 a$read_delayed '_Bool'
|-VarDecl 0x5640a11e0f40 <line:697:1, col:6> col:6 a$read_delayed_var 'int *'
|-VarDecl 0x5640a11e0fc0 <line:698:1, col:5> col:5 used a$w_buff0 'int'
|-VarDecl 0x5640a11e1038 <line:699:1, col:7> col:7 used a$w_buff0_used '_Bool'
|-VarDecl 0x5640a11e10b8 <line:700:1, col:5> col:5 used a$w_buff1 'int'
|-VarDecl 0x5640a11e1130 <line:701:1, col:7> col:7 used a$w_buff1_used '_Bool'
|-VarDecl 0x5640a11e11a8 <line:702:1, col:7> col:7 used main$tmp_guard0 '_Bool'
|-VarDecl 0x5640a11e1220 <line:703:1, col:7> col:7 used main$tmp_guard1 '_Bool'
|-VarDecl 0x5640a11e12a0 <line:704:1, col:5> col:5 used x 'int'
|-VarDecl 0x5640a11e1320 prev 0x5640a11e12a0 <line:705:1, col:9> col:5 used x 'int' cinit
| `-IntegerLiteral 0x5640a11e1388 <col:9> 'int' 0
|-VarDecl 0x5640a11e13c0 <line:706:1, col:5> col:5 used y 'int'
|-VarDecl 0x5640a11e1440 prev 0x5640a11e13c0 <line:707:1, col:9> col:5 used y 'int' cinit
| `-IntegerLiteral 0x5640a11e14a8 <col:9> 'int' 0
|-VarDecl 0x5640a11e14e0 <line:708:1, col:5> col:5 used z 'int'
|-VarDecl 0x5640a11e1560 prev 0x5640a11e14e0 <line:709:1, col:9> col:5 used z 'int' cinit
| `-IntegerLiteral 0x5640a11e15c8 <col:9> 'int' 0
|-VarDecl 0x5640a11e15f8 <line:710:1, col:7> col:7 used weak$$choice0 '_Bool'
|-VarDecl 0x5640a11e1670 <line:711:1, col:7> col:7 used weak$$choice2 '_Bool'
|-FunctionDecl 0x5640a11e1788 prev 0x5640a11dfaf0 <line:712:1, line:741:1> line:712:8 used P0 'void *(void *)'
| |-ParmVarDecl 0x5640a11e16f0 <col:11, col:17> col:17 arg 'void *'
| `-CompoundStmt 0x5640a11e3048 <line:713:1, line:741:1>
|   |-CallExpr 0x5640a11e1898 <line:714:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x5640a11e1880 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5640a11e1830 <col:3> 'void ()' Function 0x5640a1186e40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x5640a11e1910 <line:715:3, col:15> 'int' '='
|   | |-DeclRefExpr 0x5640a11e18b8 <col:3> 'int' lvalue Var 0x5640a11e10b8 'a$w_buff1' 'int'
|   | `-ImplicitCastExpr 0x5640a11e18f8 <col:15> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x5640a11e18d8 <col:15> 'int' lvalue Var 0x5640a11e0fc0 'a$w_buff0' 'int'
|   |-BinaryOperator 0x5640a11e1970 <line:716:3, col:15> 'int' '='
|   | |-DeclRefExpr 0x5640a11e1930 <col:3> 'int' lvalue Var 0x5640a11e0fc0 'a$w_buff0' 'int'
|   | `-IntegerLiteral 0x5640a11e1950 <col:15> 'int' 1
|   |-BinaryOperator 0x5640a11e19e8 <line:717:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x5640a11e1990 <col:3> '_Bool' lvalue Var 0x5640a11e1130 'a$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x5640a11e19d0 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x5640a11e19b0 <col:20> '_Bool' lvalue Var 0x5640a11e1038 'a$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x5640a11e1a80 <line:718:3, col:27> '_Bool' '='
|   | |-DeclRefExpr 0x5640a11e1a08 <col:3> '_Bool' lvalue Var 0x5640a11e1038 'a$w_buff0_used' '_Bool'
|   | `-CStyleCastExpr 0x5640a11e1a58 <col:20, col:27> '_Bool' <IntegralToBoolean>
|   |   `-IntegerLiteral 0x5640a11e1a28 <col:27> 'int' 1
|   |-CallExpr 0x5640a11e1c18 <line:719:3, col:56> 'void'
|   | |-ImplicitCastExpr 0x5640a11e1c00 <col:3> 'void (*)(int)' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x5640a11e1aa0 <col:3> 'void (int)' Function 0x5640a1186bc8 '__VERIFIER_assert' 'void (int)'
|   | `-UnaryOperator 0x5640a11e1bb0 <col:21, col:55> 'int' prefix '!' cannot overflow
|   |   `-ParenExpr 0x5640a11e1b90 <col:22, col:55> 'int'
|   |     `-BinaryOperator 0x5640a11e1b70 <col:23, col:41> 'int' '&&'
|   |       |-ImplicitCastExpr 0x5640a11e1b28 <col:23> 'int' <IntegralCast>
|   |       | `-ImplicitCastExpr 0x5640a11e1b10 <col:23> '_Bool' <LValueToRValue>
|   |       |   `-DeclRefExpr 0x5640a11e1ac0 <col:23> '_Bool' lvalue Var 0x5640a11e1130 'a$w_buff1_used' '_Bool'
|   |       `-ImplicitCastExpr 0x5640a11e1b58 <col:41> 'int' <IntegralCast>
|   |         `-ImplicitCastExpr 0x5640a11e1b40 <col:41> '_Bool' <LValueToRValue>
|   |           `-DeclRefExpr 0x5640a11e1ae0 <col:41> '_Bool' lvalue Var 0x5640a11e1038 'a$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x5640a11e1c98 <line:720:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x5640a11e1c40 <col:3> '_Bool' lvalue Var 0x5640a11e0c68 'a$r_buff1_thd0' '_Bool'
|   | `-ImplicitCastExpr 0x5640a11e1c80 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x5640a11e1c60 <col:20> '_Bool' lvalue Var 0x5640a11e09a8 'a$r_buff0_thd0' '_Bool'
|   |-BinaryOperator 0x5640a11e1d10 <line:721:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x5640a11e1cb8 <col:3> '_Bool' lvalue Var 0x5640a11e0ce0 'a$r_buff1_thd1' '_Bool'
|   | `-ImplicitCastExpr 0x5640a11e1cf8 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x5640a11e1cd8 <col:20> '_Bool' lvalue Var 0x5640a11e0a20 'a$r_buff0_thd1' '_Bool'
|   |-BinaryOperator 0x5640a11e1d88 <line:722:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x5640a11e1d30 <col:3> '_Bool' lvalue Var 0x5640a11e0d58 'a$r_buff1_thd2' '_Bool'
|   | `-ImplicitCastExpr 0x5640a11e1d70 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x5640a11e1d50 <col:20> '_Bool' lvalue Var 0x5640a11e0b00 'a$r_buff0_thd2' '_Bool'
|   |-BinaryOperator 0x5640a11e1e00 <line:723:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x5640a11e1da8 <col:3> '_Bool' lvalue Var 0x5640a11e0dd0 'a$r_buff1_thd3' '_Bool'
|   | `-ImplicitCastExpr 0x5640a11e1de8 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x5640a11e1dc8 <col:20> '_Bool' lvalue Var 0x5640a11e0b78 'a$r_buff0_thd3' '_Bool'
|   |-BinaryOperator 0x5640a11e1e78 <line:724:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x5640a11e1e20 <col:3> '_Bool' lvalue Var 0x5640a11e0e48 'a$r_buff1_thd4' '_Bool'
|   | `-ImplicitCastExpr 0x5640a11e1e60 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x5640a11e1e40 <col:20> '_Bool' lvalue Var 0x5640a11e0bf0 'a$r_buff0_thd4' '_Bool'
|   |-BinaryOperator 0x5640a11e1f10 <line:725:3, col:27> '_Bool' '='
|   | |-DeclRefExpr 0x5640a11e1e98 <col:3> '_Bool' lvalue Var 0x5640a11e0a20 'a$r_buff0_thd1' '_Bool'
|   | `-CStyleCastExpr 0x5640a11e1ee8 <col:20, col:27> '_Bool' <IntegralToBoolean>
|   |   `-IntegerLiteral 0x5640a11e1eb8 <col:27> 'int' 1
|   |-CallExpr 0x5640a11e1f68 <line:726:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x5640a11e1f50 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5640a11e1f30 <col:3> 'void ()' Function 0x5640a1186f00 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x5640a11e1fc0 <line:727:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x5640a11e1fa8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5640a11e1f88 <col:3> 'void ()' Function 0x5640a1186e40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x5640a11e2038 <line:728:3, col:25> 'int' '='
|   | |-DeclRefExpr 0x5640a11e1fe0 <col:3> 'int' lvalue Var 0x5640a11e0398 '__unbuffered_p0_EAX' 'int'
|   | `-ImplicitCastExpr 0x5640a11e2020 <col:25> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x5640a11e2000 <col:25> 'int' lvalue Var 0x5640a11e1320 'x' 'int'
|   |-CallExpr 0x5640a11e2090 <line:729:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x5640a11e2078 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5640a11e2058 <col:3> 'void ()' Function 0x5640a1186f00 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x5640a11e20e8 <line:730:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x5640a11e20d0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5640a11e20b0 <col:3> 'void ()' Function 0x5640a1186e40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x5640a11e23d0 <line:731:3, col:103> 'int' '='
|   | |-DeclRefExpr 0x5640a11e2108 <col:3> 'int' lvalue Var 0x5640a11e0818 'a' 'int'
|   | `-ConditionalOperator 0x5640a11e23a0 <col:7, col:103> 'int'
|   |   |-BinaryOperator 0x5640a11e21c8 <col:7, col:25> 'int' '&&'
|   |   | |-ImplicitCastExpr 0x5640a11e2180 <col:7> 'int' <IntegralCast>
|   |   | | `-ImplicitCastExpr 0x5640a11e2168 <col:7> '_Bool' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x5640a11e2128 <col:7> '_Bool' lvalue Var 0x5640a11e1038 'a$w_buff0_used' '_Bool'
|   |   | `-ImplicitCastExpr 0x5640a11e21b0 <col:25> 'int' <IntegralCast>
|   |   |   `-ImplicitCastExpr 0x5640a11e2198 <col:25> '_Bool' <LValueToRValue>
|   |   |     `-DeclRefExpr 0x5640a11e2148 <col:25> '_Bool' lvalue Var 0x5640a11e0a20 'a$r_buff0_thd1' '_Bool'
|   |   |-ImplicitCastExpr 0x5640a11e2388 <col:42> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x5640a11e21e8 <col:42> 'int' lvalue Var 0x5640a11e0fc0 'a$w_buff0' 'int'
|   |   `-ParenExpr 0x5640a11e2368 <col:54, col:103> 'int'
|   |     `-ConditionalOperator 0x5640a11e2338 <col:55, col:102> 'int'
|   |       |-BinaryOperator 0x5640a11e22a8 <col:55, col:73> 'int' '&&'
|   |       | |-ImplicitCastExpr 0x5640a11e2260 <col:55> 'int' <IntegralCast>
|   |       | | `-ImplicitCastExpr 0x5640a11e2248 <col:55> '_Bool' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x5640a11e2208 <col:55> '_Bool' lvalue Var 0x5640a11e1130 'a$w_buff1_used' '_Bool'
|   |       | `-ImplicitCastExpr 0x5640a11e2290 <col:73> 'int' <IntegralCast>
|   |       |   `-ImplicitCastExpr 0x5640a11e2278 <col:73> '_Bool' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x5640a11e2228 <col:73> '_Bool' lvalue Var 0x5640a11e0ce0 'a$r_buff1_thd1' '_Bool'
|   |       |-ImplicitCastExpr 0x5640a11e2308 <col:90> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x5640a11e22c8 <col:90> 'int' lvalue Var 0x5640a11e10b8 'a$w_buff1' 'int'
|   |       `-ImplicitCastExpr 0x5640a11e2320 <col:102> 'int' <LValueToRValue>
|   |         `-DeclRefExpr 0x5640a11e22e8 <col:102> 'int' lvalue Var 0x5640a11e0818 'a' 'int'
|   |-BinaryOperator 0x5640a11e25d8 <line:732:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x5640a11e23f0 <col:3> '_Bool' lvalue Var 0x5640a11e1038 'a$w_buff0_used' '_Bool'
|   | `-ImplicitCastExpr 0x5640a11e25c0 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x5640a11e2590 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x5640a11e24b0 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x5640a11e2468 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x5640a11e2450 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x5640a11e2410 <col:20> '_Bool' lvalue Var 0x5640a11e1038 'a$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x5640a11e2498 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x5640a11e2480 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x5640a11e2430 <col:38> '_Bool' lvalue Var 0x5640a11e0a20 'a$r_buff0_thd1' '_Bool'
|   |     |-ImplicitCastExpr 0x5640a11e2548 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x5640a11e2500 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x5640a11e24d0 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x5640a11e2578 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x5640a11e2560 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x5640a11e2528 <col:66> '_Bool' lvalue Var 0x5640a11e1038 'a$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x5640a11e28c0 <line:733:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x5640a11e25f8 <col:3> '_Bool' lvalue Var 0x5640a11e1130 'a$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x5640a11e28a8 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x5640a11e2878 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x5640a11e2798 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x5640a11e26b8 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x5640a11e2670 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x5640a11e2658 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x5640a11e2618 <col:20> '_Bool' lvalue Var 0x5640a11e1038 'a$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x5640a11e26a0 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x5640a11e2688 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x5640a11e2638 <col:38> '_Bool' lvalue Var 0x5640a11e0a20 'a$r_buff0_thd1' '_Bool'
|   |     | `-BinaryOperator 0x5640a11e2778 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x5640a11e2730 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x5640a11e2718 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x5640a11e26d8 <col:56> '_Bool' lvalue Var 0x5640a11e1130 'a$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x5640a11e2760 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x5640a11e2748 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x5640a11e26f8 <col:74> '_Bool' lvalue Var 0x5640a11e0ce0 'a$r_buff1_thd1' '_Bool'
|   |     |-ImplicitCastExpr 0x5640a11e2830 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x5640a11e27e8 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x5640a11e27b8 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x5640a11e2860 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x5640a11e2848 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x5640a11e2810 <col:102> '_Bool' lvalue Var 0x5640a11e1130 'a$w_buff1_used' '_Bool'
|   |-BinaryOperator 0x5640a11e2ac8 <line:734:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x5640a11e28e0 <col:3> '_Bool' lvalue Var 0x5640a11e0a20 'a$r_buff0_thd1' '_Bool'
|   | `-ImplicitCastExpr 0x5640a11e2ab0 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x5640a11e2a80 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x5640a11e29a0 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x5640a11e2958 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x5640a11e2940 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x5640a11e2900 <col:20> '_Bool' lvalue Var 0x5640a11e1038 'a$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x5640a11e2988 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x5640a11e2970 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x5640a11e2920 <col:38> '_Bool' lvalue Var 0x5640a11e0a20 'a$r_buff0_thd1' '_Bool'
|   |     |-ImplicitCastExpr 0x5640a11e2a38 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x5640a11e29f0 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x5640a11e29c0 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x5640a11e2a68 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x5640a11e2a50 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x5640a11e2a18 <col:66> '_Bool' lvalue Var 0x5640a11e0a20 'a$r_buff0_thd1' '_Bool'
|   |-BinaryOperator 0x5640a11e2dc8 <line:735:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x5640a11e2ae8 <col:3> '_Bool' lvalue Var 0x5640a11e0ce0 'a$r_buff1_thd1' '_Bool'
|   | `-ImplicitCastExpr 0x5640a11e2db0 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x5640a11e2d80 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x5640a11e2ca0 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x5640a11e2bc0 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x5640a11e2b78 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x5640a11e2b60 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x5640a11e2b20 <col:20> '_Bool' lvalue Var 0x5640a11e1038 'a$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x5640a11e2ba8 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x5640a11e2b90 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x5640a11e2b40 <col:38> '_Bool' lvalue Var 0x5640a11e0a20 'a$r_buff0_thd1' '_Bool'
|   |     | `-BinaryOperator 0x5640a11e2c80 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x5640a11e2c38 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x5640a11e2c20 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x5640a11e2be0 <col:56> '_Bool' lvalue Var 0x5640a11e1130 'a$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x5640a11e2c68 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x5640a11e2c50 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x5640a11e2c00 <col:74> '_Bool' lvalue Var 0x5640a11e0ce0 'a$r_buff1_thd1' '_Bool'
|   |     |-ImplicitCastExpr 0x5640a11e2d38 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x5640a11e2cf0 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x5640a11e2cc0 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x5640a11e2d68 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x5640a11e2d50 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x5640a11e2d18 <col:102> '_Bool' lvalue Var 0x5640a11e0ce0 'a$r_buff1_thd1' '_Bool'
|   |-CallExpr 0x5640a11e2e20 <line:736:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x5640a11e2e08 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5640a11e2de8 <col:3> 'void ()' Function 0x5640a1186f00 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x5640a11e2e78 <line:737:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x5640a11e2e60 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5640a11e2e40 <col:3> 'void ()' Function 0x5640a1186e40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x5640a11e2f30 <line:738:3, col:41> 'int' '='
|   | |-DeclRefExpr 0x5640a11e2e98 <col:3> 'int' lvalue Var 0x5640a11e0278 '__unbuffered_cnt' 'int'
|   | `-BinaryOperator 0x5640a11e2f10 <col:22, col:41> 'int' '+'
|   |   |-ImplicitCastExpr 0x5640a11e2ef8 <col:22> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x5640a11e2eb8 <col:22> 'int' lvalue Var 0x5640a11e0278 '__unbuffered_cnt' 'int'
|   |   `-IntegerLiteral 0x5640a11e2ed8 <col:41> 'int' 1
|   |-CallExpr 0x5640a11e2f88 <line:739:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x5640a11e2f70 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5640a11e2f50 <col:3> 'void ()' Function 0x5640a1186f00 '__VERIFIER_atomic_end' 'void ()'
|   `-ReturnStmt 0x5640a11e3038 <line:740:3, col:36>
|     `-CallExpr 0x5640a11e3018 <col:10, col:36> 'void *'
|       `-ImplicitCastExpr 0x5640a11e3000 <col:10> 'void *(*)(void)' <FunctionToPointerDecay>
|         `-DeclRefExpr 0x5640a11e2fa8 <col:10> 'void *(void)' Function 0x5640a1186958 '__VERIFIER_nondet_pointer' 'void *(void)'
|-FunctionDecl 0x5640a11e31e0 prev 0x5640a11dfc48 <line:742:1, line:761:1> line:742:8 used P1 'void *(void *)'
| |-ParmVarDecl 0x5640a11e3148 <col:11, col:17> col:17 arg 'void *'
| `-CompoundStmt 0x5640a11e4430 <line:743:1, line:761:1>
|   |-CallExpr 0x5640a11e32c0 <line:744:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x5640a11e32a8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5640a11e3288 <col:3> 'void ()' Function 0x5640a1186e40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x5640a11e3320 <line:745:3, col:7> 'int' '='
|   | |-DeclRefExpr 0x5640a11e32e0 <col:3> 'int' lvalue Var 0x5640a11e1320 'x' 'int'
|   | `-IntegerLiteral 0x5640a11e3300 <col:7> 'int' 1
|   |-CallExpr 0x5640a11e3378 <line:746:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x5640a11e3360 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5640a11e3340 <col:3> 'void ()' Function 0x5640a1186f00 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x5640a11e33d0 <line:747:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x5640a11e33b8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5640a11e3398 <col:3> 'void ()' Function 0x5640a1186e40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x5640a11e3448 <line:748:3, col:25> 'int' '='
|   | |-DeclRefExpr 0x5640a11e33f0 <col:3> 'int' lvalue Var 0x5640a11e04b8 '__unbuffered_p1_EAX' 'int'
|   | `-ImplicitCastExpr 0x5640a11e3430 <col:25> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x5640a11e3410 <col:25> 'int' lvalue Var 0x5640a11e1440 'y' 'int'
|   |-CallExpr 0x5640a11e34a0 <line:749:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x5640a11e3488 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5640a11e3468 <col:3> 'void ()' Function 0x5640a1186f00 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x5640a11e34f8 <line:750:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x5640a11e34e0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5640a11e34c0 <col:3> 'void ()' Function 0x5640a1186e40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x5640a11e37e0 <line:751:3, col:103> 'int' '='
|   | |-DeclRefExpr 0x5640a11e3518 <col:3> 'int' lvalue Var 0x5640a11e0818 'a' 'int'
|   | `-ConditionalOperator 0x5640a11e37b0 <col:7, col:103> 'int'
|   |   |-BinaryOperator 0x5640a11e35d8 <col:7, col:25> 'int' '&&'
|   |   | |-ImplicitCastExpr 0x5640a11e3590 <col:7> 'int' <IntegralCast>
|   |   | | `-ImplicitCastExpr 0x5640a11e3578 <col:7> '_Bool' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x5640a11e3538 <col:7> '_Bool' lvalue Var 0x5640a11e1038 'a$w_buff0_used' '_Bool'
|   |   | `-ImplicitCastExpr 0x5640a11e35c0 <col:25> 'int' <IntegralCast>
|   |   |   `-ImplicitCastExpr 0x5640a11e35a8 <col:25> '_Bool' <LValueToRValue>
|   |   |     `-DeclRefExpr 0x5640a11e3558 <col:25> '_Bool' lvalue Var 0x5640a11e0b00 'a$r_buff0_thd2' '_Bool'
|   |   |-ImplicitCastExpr 0x5640a11e3798 <col:42> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x5640a11e35f8 <col:42> 'int' lvalue Var 0x5640a11e0fc0 'a$w_buff0' 'int'
|   |   `-ParenExpr 0x5640a11e3778 <col:54, col:103> 'int'
|   |     `-ConditionalOperator 0x5640a11e3748 <col:55, col:102> 'int'
|   |       |-BinaryOperator 0x5640a11e36b8 <col:55, col:73> 'int' '&&'
|   |       | |-ImplicitCastExpr 0x5640a11e3670 <col:55> 'int' <IntegralCast>
|   |       | | `-ImplicitCastExpr 0x5640a11e3658 <col:55> '_Bool' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x5640a11e3618 <col:55> '_Bool' lvalue Var 0x5640a11e1130 'a$w_buff1_used' '_Bool'
|   |       | `-ImplicitCastExpr 0x5640a11e36a0 <col:73> 'int' <IntegralCast>
|   |       |   `-ImplicitCastExpr 0x5640a11e3688 <col:73> '_Bool' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x5640a11e3638 <col:73> '_Bool' lvalue Var 0x5640a11e0d58 'a$r_buff1_thd2' '_Bool'
|   |       |-ImplicitCastExpr 0x5640a11e3718 <col:90> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x5640a11e36d8 <col:90> 'int' lvalue Var 0x5640a11e10b8 'a$w_buff1' 'int'
|   |       `-ImplicitCastExpr 0x5640a11e3730 <col:102> 'int' <LValueToRValue>
|   |         `-DeclRefExpr 0x5640a11e36f8 <col:102> 'int' lvalue Var 0x5640a11e0818 'a' 'int'
|   |-BinaryOperator 0x5640a11e39e8 <line:752:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x5640a11e3800 <col:3> '_Bool' lvalue Var 0x5640a11e1038 'a$w_buff0_used' '_Bool'
|   | `-ImplicitCastExpr 0x5640a11e39d0 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x5640a11e39a0 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x5640a11e38c0 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x5640a11e3878 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x5640a11e3860 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x5640a11e3820 <col:20> '_Bool' lvalue Var 0x5640a11e1038 'a$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x5640a11e38a8 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x5640a11e3890 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x5640a11e3840 <col:38> '_Bool' lvalue Var 0x5640a11e0b00 'a$r_buff0_thd2' '_Bool'
|   |     |-ImplicitCastExpr 0x5640a11e3958 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x5640a11e3910 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x5640a11e38e0 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x5640a11e3988 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x5640a11e3970 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x5640a11e3938 <col:66> '_Bool' lvalue Var 0x5640a11e1038 'a$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x5640a11e3cf8 <line:753:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x5640a11e3a08 <col:3> '_Bool' lvalue Var 0x5640a11e1130 'a$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x5640a11e3ce0 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x5640a11e3cb0 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x5640a11e3bd0 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x5640a11e3ac8 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x5640a11e3a80 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x5640a11e3a68 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x5640a11e3a28 <col:20> '_Bool' lvalue Var 0x5640a11e1038 'a$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x5640a11e3ab0 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x5640a11e3a98 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x5640a11e3a48 <col:38> '_Bool' lvalue Var 0x5640a11e0b00 'a$r_buff0_thd2' '_Bool'
|   |     | `-BinaryOperator 0x5640a11e3bb0 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x5640a11e3b68 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x5640a11e3b50 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x5640a11e3ae8 <col:56> '_Bool' lvalue Var 0x5640a11e1130 'a$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x5640a11e3b98 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x5640a11e3b80 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x5640a11e3b30 <col:74> '_Bool' lvalue Var 0x5640a11e0d58 'a$r_buff1_thd2' '_Bool'
|   |     |-ImplicitCastExpr 0x5640a11e3c68 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x5640a11e3c20 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x5640a11e3bf0 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x5640a11e3c98 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x5640a11e3c80 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x5640a11e3c48 <col:102> '_Bool' lvalue Var 0x5640a11e1130 'a$w_buff1_used' '_Bool'
|   |-BinaryOperator 0x5640a11e3f00 <line:754:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x5640a11e3d18 <col:3> '_Bool' lvalue Var 0x5640a11e0b00 'a$r_buff0_thd2' '_Bool'
|   | `-ImplicitCastExpr 0x5640a11e3ee8 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x5640a11e3eb8 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x5640a11e3dd8 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x5640a11e3d90 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x5640a11e3d78 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x5640a11e3d38 <col:20> '_Bool' lvalue Var 0x5640a11e1038 'a$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x5640a11e3dc0 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x5640a11e3da8 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x5640a11e3d58 <col:38> '_Bool' lvalue Var 0x5640a11e0b00 'a$r_buff0_thd2' '_Bool'
|   |     |-ImplicitCastExpr 0x5640a11e3e70 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x5640a11e3e28 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x5640a11e3df8 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x5640a11e3ea0 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x5640a11e3e88 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x5640a11e3e50 <col:66> '_Bool' lvalue Var 0x5640a11e0b00 'a$r_buff0_thd2' '_Bool'
|   |-BinaryOperator 0x5640a11e41e8 <line:755:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x5640a11e3f20 <col:3> '_Bool' lvalue Var 0x5640a11e0d58 'a$r_buff1_thd2' '_Bool'
|   | `-ImplicitCastExpr 0x5640a11e41d0 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x5640a11e41a0 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x5640a11e40c0 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x5640a11e3fe0 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x5640a11e3f98 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x5640a11e3f80 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x5640a11e3f40 <col:20> '_Bool' lvalue Var 0x5640a11e1038 'a$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x5640a11e3fc8 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x5640a11e3fb0 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x5640a11e3f60 <col:38> '_Bool' lvalue Var 0x5640a11e0b00 'a$r_buff0_thd2' '_Bool'
|   |     | `-BinaryOperator 0x5640a11e40a0 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x5640a11e4058 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x5640a11e4040 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x5640a11e4000 <col:56> '_Bool' lvalue Var 0x5640a11e1130 'a$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x5640a11e4088 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x5640a11e4070 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x5640a11e4020 <col:74> '_Bool' lvalue Var 0x5640a11e0d58 'a$r_buff1_thd2' '_Bool'
|   |     |-ImplicitCastExpr 0x5640a11e4158 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x5640a11e4110 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x5640a11e40e0 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x5640a11e4188 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x5640a11e4170 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x5640a11e4138 <col:102> '_Bool' lvalue Var 0x5640a11e0d58 'a$r_buff1_thd2' '_Bool'
|   |-CallExpr 0x5640a11e4240 <line:756:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x5640a11e4228 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5640a11e4208 <col:3> 'void ()' Function 0x5640a1186f00 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x5640a11e4298 <line:757:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x5640a11e4280 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5640a11e4260 <col:3> 'void ()' Function 0x5640a1186e40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x5640a11e4350 <line:758:3, col:41> 'int' '='
|   | |-DeclRefExpr 0x5640a11e42b8 <col:3> 'int' lvalue Var 0x5640a11e0278 '__unbuffered_cnt' 'int'
|   | `-BinaryOperator 0x5640a11e4330 <col:22, col:41> 'int' '+'
|   |   |-ImplicitCastExpr 0x5640a11e4318 <col:22> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x5640a11e42d8 <col:22> 'int' lvalue Var 0x5640a11e0278 '__unbuffered_cnt' 'int'
|   |   `-IntegerLiteral 0x5640a11e42f8 <col:41> 'int' 1
|   |-CallExpr 0x5640a11e43a8 <line:759:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x5640a11e4390 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5640a11e4370 <col:3> 'void ()' Function 0x5640a1186f00 '__VERIFIER_atomic_end' 'void ()'
|   `-ReturnStmt 0x5640a11e4420 <line:760:3, col:36>
|     `-CallExpr 0x5640a11e4400 <col:10, col:36> 'void *'
|       `-ImplicitCastExpr 0x5640a11e43e8 <col:10> 'void *(*)(void)' <FunctionToPointerDecay>
|         `-DeclRefExpr 0x5640a11e43c8 <col:10> 'void *(void)' Function 0x5640a1186958 '__VERIFIER_nondet_pointer' 'void *(void)'
|-FunctionDecl 0x5640a11e4578 prev 0x5640a11dfda0 <line:762:1, line:781:1> line:762:8 used P2 'void *(void *)'
| |-ParmVarDecl 0x5640a11e44e0 <col:11, col:17> col:17 arg 'void *'
| `-CompoundStmt 0x5640a11e57b0 <line:763:1, line:781:1>
|   |-CallExpr 0x5640a11e4658 <line:764:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x5640a11e4640 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5640a11e4620 <col:3> 'void ()' Function 0x5640a1186e40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x5640a11e46b8 <line:765:3, col:7> 'int' '='
|   | |-DeclRefExpr 0x5640a11e4678 <col:3> 'int' lvalue Var 0x5640a11e1440 'y' 'int'
|   | `-IntegerLiteral 0x5640a11e4698 <col:7> 'int' 1
|   |-CallExpr 0x5640a11e4710 <line:766:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x5640a11e46f8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5640a11e46d8 <col:3> 'void ()' Function 0x5640a1186f00 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x5640a11e4768 <line:767:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x5640a11e4750 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5640a11e4730 <col:3> 'void ()' Function 0x5640a1186e40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x5640a11e47e0 <line:768:3, col:25> 'int' '='
|   | |-DeclRefExpr 0x5640a11e4788 <col:3> 'int' lvalue Var 0x5640a11e05d8 '__unbuffered_p2_EAX' 'int'
|   | `-ImplicitCastExpr 0x5640a11e47c8 <col:25> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x5640a11e47a8 <col:25> 'int' lvalue Var 0x5640a11e1560 'z' 'int'
|   |-CallExpr 0x5640a11e4838 <line:769:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x5640a11e4820 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5640a11e4800 <col:3> 'void ()' Function 0x5640a1186f00 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x5640a11e4890 <line:770:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x5640a11e4878 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5640a11e4858 <col:3> 'void ()' Function 0x5640a1186e40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x5640a11e4b88 <line:771:3, col:103> 'int' '='
|   | |-DeclRefExpr 0x5640a11e48b0 <col:3> 'int' lvalue Var 0x5640a11e0818 'a' 'int'
|   | `-ConditionalOperator 0x5640a11e4b58 <col:7, col:103> 'int'
|   |   |-BinaryOperator 0x5640a11e4970 <col:7, col:25> 'int' '&&'
|   |   | |-ImplicitCastExpr 0x5640a11e4928 <col:7> 'int' <IntegralCast>
|   |   | | `-ImplicitCastExpr 0x5640a11e4910 <col:7> '_Bool' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x5640a11e48d0 <col:7> '_Bool' lvalue Var 0x5640a11e1038 'a$w_buff0_used' '_Bool'
|   |   | `-ImplicitCastExpr 0x5640a11e4958 <col:25> 'int' <IntegralCast>
|   |   |   `-ImplicitCastExpr 0x5640a11e4940 <col:25> '_Bool' <LValueToRValue>
|   |   |     `-DeclRefExpr 0x5640a11e48f0 <col:25> '_Bool' lvalue Var 0x5640a11e0b78 'a$r_buff0_thd3' '_Bool'
|   |   |-ImplicitCastExpr 0x5640a11e4b40 <col:42> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x5640a11e4990 <col:42> 'int' lvalue Var 0x5640a11e0fc0 'a$w_buff0' 'int'
|   |   `-ParenExpr 0x5640a11e4b10 <col:54, col:103> 'int'
|   |     `-ConditionalOperator 0x5640a11e4ae0 <col:55, col:102> 'int'
|   |       |-BinaryOperator 0x5640a11e4a50 <col:55, col:73> 'int' '&&'
|   |       | |-ImplicitCastExpr 0x5640a11e4a08 <col:55> 'int' <IntegralCast>
|   |       | | `-ImplicitCastExpr 0x5640a11e49f0 <col:55> '_Bool' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x5640a11e49b0 <col:55> '_Bool' lvalue Var 0x5640a11e1130 'a$w_buff1_used' '_Bool'
|   |       | `-ImplicitCastExpr 0x5640a11e4a38 <col:73> 'int' <IntegralCast>
|   |       |   `-ImplicitCastExpr 0x5640a11e4a20 <col:73> '_Bool' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x5640a11e49d0 <col:73> '_Bool' lvalue Var 0x5640a11e0dd0 'a$r_buff1_thd3' '_Bool'
|   |       |-ImplicitCastExpr 0x5640a11e4ab0 <col:90> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x5640a11e4a70 <col:90> 'int' lvalue Var 0x5640a11e10b8 'a$w_buff1' 'int'
|   |       `-ImplicitCastExpr 0x5640a11e4ac8 <col:102> 'int' <LValueToRValue>
|   |         `-DeclRefExpr 0x5640a11e4a90 <col:102> 'int' lvalue Var 0x5640a11e0818 'a' 'int'
|   |-BinaryOperator 0x5640a11e4d90 <line:772:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x5640a11e4ba8 <col:3> '_Bool' lvalue Var 0x5640a11e1038 'a$w_buff0_used' '_Bool'
|   | `-ImplicitCastExpr 0x5640a11e4d78 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x5640a11e4d48 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x5640a11e4c68 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x5640a11e4c20 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x5640a11e4c08 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x5640a11e4bc8 <col:20> '_Bool' lvalue Var 0x5640a11e1038 'a$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x5640a11e4c50 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x5640a11e4c38 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x5640a11e4be8 <col:38> '_Bool' lvalue Var 0x5640a11e0b78 'a$r_buff0_thd3' '_Bool'
|   |     |-ImplicitCastExpr 0x5640a11e4d00 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x5640a11e4cb8 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x5640a11e4c88 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x5640a11e4d30 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x5640a11e4d18 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x5640a11e4ce0 <col:66> '_Bool' lvalue Var 0x5640a11e1038 'a$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x5640a11e5078 <line:773:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x5640a11e4db0 <col:3> '_Bool' lvalue Var 0x5640a11e1130 'a$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x5640a11e5060 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x5640a11e5030 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x5640a11e4f50 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x5640a11e4e70 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x5640a11e4e28 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x5640a11e4e10 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x5640a11e4dd0 <col:20> '_Bool' lvalue Var 0x5640a11e1038 'a$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x5640a11e4e58 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x5640a11e4e40 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x5640a11e4df0 <col:38> '_Bool' lvalue Var 0x5640a11e0b78 'a$r_buff0_thd3' '_Bool'
|   |     | `-BinaryOperator 0x5640a11e4f30 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x5640a11e4ee8 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x5640a11e4ed0 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x5640a11e4e90 <col:56> '_Bool' lvalue Var 0x5640a11e1130 'a$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x5640a11e4f18 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x5640a11e4f00 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x5640a11e4eb0 <col:74> '_Bool' lvalue Var 0x5640a11e0dd0 'a$r_buff1_thd3' '_Bool'
|   |     |-ImplicitCastExpr 0x5640a11e4fe8 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x5640a11e4fa0 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x5640a11e4f70 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x5640a11e5018 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x5640a11e5000 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x5640a11e4fc8 <col:102> '_Bool' lvalue Var 0x5640a11e1130 'a$w_buff1_used' '_Bool'
|   |-BinaryOperator 0x5640a11e5280 <line:774:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x5640a11e5098 <col:3> '_Bool' lvalue Var 0x5640a11e0b78 'a$r_buff0_thd3' '_Bool'
|   | `-ImplicitCastExpr 0x5640a11e5268 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x5640a11e5238 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x5640a11e5158 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x5640a11e5110 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x5640a11e50f8 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x5640a11e50b8 <col:20> '_Bool' lvalue Var 0x5640a11e1038 'a$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x5640a11e5140 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x5640a11e5128 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x5640a11e50d8 <col:38> '_Bool' lvalue Var 0x5640a11e0b78 'a$r_buff0_thd3' '_Bool'
|   |     |-ImplicitCastExpr 0x5640a11e51f0 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x5640a11e51a8 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x5640a11e5178 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x5640a11e5220 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x5640a11e5208 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x5640a11e51d0 <col:66> '_Bool' lvalue Var 0x5640a11e0b78 'a$r_buff0_thd3' '_Bool'
|   |-BinaryOperator 0x5640a11e5568 <line:775:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x5640a11e52a0 <col:3> '_Bool' lvalue Var 0x5640a11e0dd0 'a$r_buff1_thd3' '_Bool'
|   | `-ImplicitCastExpr 0x5640a11e5550 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x5640a11e5520 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x5640a11e5440 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x5640a11e5360 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x5640a11e5318 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x5640a11e5300 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x5640a11e52c0 <col:20> '_Bool' lvalue Var 0x5640a11e1038 'a$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x5640a11e5348 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x5640a11e5330 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x5640a11e52e0 <col:38> '_Bool' lvalue Var 0x5640a11e0b78 'a$r_buff0_thd3' '_Bool'
|   |     | `-BinaryOperator 0x5640a11e5420 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x5640a11e53d8 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x5640a11e53c0 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x5640a11e5380 <col:56> '_Bool' lvalue Var 0x5640a11e1130 'a$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x5640a11e5408 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x5640a11e53f0 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x5640a11e53a0 <col:74> '_Bool' lvalue Var 0x5640a11e0dd0 'a$r_buff1_thd3' '_Bool'
|   |     |-ImplicitCastExpr 0x5640a11e54d8 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x5640a11e5490 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x5640a11e5460 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x5640a11e5508 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x5640a11e54f0 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x5640a11e54b8 <col:102> '_Bool' lvalue Var 0x5640a11e0dd0 'a$r_buff1_thd3' '_Bool'
|   |-CallExpr 0x5640a11e55c0 <line:776:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x5640a11e55a8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5640a11e5588 <col:3> 'void ()' Function 0x5640a1186f00 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x5640a11e5618 <line:777:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x5640a11e5600 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5640a11e55e0 <col:3> 'void ()' Function 0x5640a1186e40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x5640a11e56d0 <line:778:3, col:41> 'int' '='
|   | |-DeclRefExpr 0x5640a11e5638 <col:3> 'int' lvalue Var 0x5640a11e0278 '__unbuffered_cnt' 'int'
|   | `-BinaryOperator 0x5640a11e56b0 <col:22, col:41> 'int' '+'
|   |   |-ImplicitCastExpr 0x5640a11e5698 <col:22> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x5640a11e5658 <col:22> 'int' lvalue Var 0x5640a11e0278 '__unbuffered_cnt' 'int'
|   |   `-IntegerLiteral 0x5640a11e5678 <col:41> 'int' 1
|   |-CallExpr 0x5640a11e5728 <line:779:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x5640a11e5710 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5640a11e56f0 <col:3> 'void ()' Function 0x5640a1186f00 '__VERIFIER_atomic_end' 'void ()'
|   `-ReturnStmt 0x5640a11e57a0 <line:780:3, col:36>
|     `-CallExpr 0x5640a11e5780 <col:10, col:36> 'void *'
|       `-ImplicitCastExpr 0x5640a11e5768 <col:10> 'void *(*)(void)' <FunctionToPointerDecay>
|         `-DeclRefExpr 0x5640a11e5748 <col:10> 'void *(void)' Function 0x5640a1186958 '__VERIFIER_nondet_pointer' 'void *(void)'
|-FunctionDecl 0x5640a11e58f8 prev 0x5640a11dfef8 <line:782:1, line:814:1> line:782:8 used P3 'void *(void *)'
| |-ParmVarDecl 0x5640a11e5860 <col:11, col:17> col:17 arg 'void *'
| `-CompoundStmt 0x5640a11e94d8 <line:783:1, line:814:1>
|   |-CallExpr 0x5640a11e59d8 <line:784:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x5640a11e59c0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5640a11e59a0 <col:3> 'void ()' Function 0x5640a1186e40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x5640a11e5a38 <line:785:3, col:7> 'int' '='
|   | |-DeclRefExpr 0x5640a11e59f8 <col:3> 'int' lvalue Var 0x5640a11e1560 'z' 'int'
|   | `-IntegerLiteral 0x5640a11e5a18 <col:7> 'int' 1
|   |-CallExpr 0x5640a11e5a90 <line:786:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x5640a11e5a78 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5640a11e5a58 <col:3> 'void ()' Function 0x5640a1186f00 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x5640a11e5ae8 <line:787:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x5640a11e5ad0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5640a11e5ab0 <col:3> 'void ()' Function 0x5640a1186e40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x5640a11e5bc0 <line:788:3, col:45> '_Bool' '='
|   | |-DeclRefExpr 0x5640a11e5b08 <col:3> '_Bool' lvalue Var 0x5640a11e15f8 'weak$$choice0' '_Bool'
|   | `-ImplicitCastExpr 0x5640a11e5ba8 <col:19, col:45> '_Bool' <PointerToBoolean>
|   |   `-CallExpr 0x5640a11e5b88 <col:19, col:45> 'void *'
|   |     `-ImplicitCastExpr 0x5640a11e5b70 <col:19> 'void *(*)(void)' <FunctionToPointerDecay>
|   |       `-DeclRefExpr 0x5640a11e5b50 <col:19> 'void *(void)' Function 0x5640a1186958 '__VERIFIER_nondet_pointer' 'void *(void)'
|   |-BinaryOperator 0x5640a11e5c70 <line:789:3, col:45> '_Bool' '='
|   | |-DeclRefExpr 0x5640a11e5be0 <col:3> '_Bool' lvalue Var 0x5640a11e1670 'weak$$choice2' '_Bool'
|   | `-ImplicitCastExpr 0x5640a11e5c58 <col:19, col:45> '_Bool' <PointerToBoolean>
|   |   `-CallExpr 0x5640a11e5c38 <col:19, col:45> 'void *'
|   |     `-ImplicitCastExpr 0x5640a11e5c20 <col:19> 'void *(*)(void)' <FunctionToPointerDecay>
|   |       `-DeclRefExpr 0x5640a11e5c00 <col:19> 'void *(void)' Function 0x5640a1186958 '__VERIFIER_nondet_pointer' 'void *(void)'
|   |-BinaryOperator 0x5640a11e5ce8 <line:790:3, col:21> '_Bool' '='
|   | |-DeclRefExpr 0x5640a11e5c90 <col:3> '_Bool' lvalue Var 0x5640a11e08b0 'a$flush_delayed' '_Bool'
|   | `-ImplicitCastExpr 0x5640a11e5cd0 <col:21> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x5640a11e5cb0 <col:21> '_Bool' lvalue Var 0x5640a11e1670 'weak$$choice2' '_Bool'
|   |-BinaryOperator 0x5640a11e5d60 <line:791:3, col:15> 'int' '='
|   | |-DeclRefExpr 0x5640a11e5d08 <col:3> 'int' lvalue Var 0x5640a11e0930 'a$mem_tmp' 'int'
|   | `-ImplicitCastExpr 0x5640a11e5d48 <col:15> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x5640a11e5d28 <col:15> 'int' lvalue Var 0x5640a11e0818 'a' 'int'
|   |-BinaryOperator 0x5640a11e6198 <line:792:3, col:162> 'int' '='
|   | |-DeclRefExpr 0x5640a11e5d80 <col:3> 'int' lvalue Var 0x5640a11e0818 'a' 'int'
|   | `-ConditionalOperator 0x5640a11e6168 <col:7, col:162> 'int'
|   |   |-BinaryOperator 0x5640a11e5f90 <col:7, col:84> 'int' '||'
|   |   | |-BinaryOperator 0x5640a11e5eb0 <col:7, col:46> 'int' '||'
|   |   | | |-UnaryOperator 0x5640a11e5dd8 <col:7, col:8> 'int' prefix '!' cannot overflow
|   |   | | | `-ImplicitCastExpr 0x5640a11e5dc0 <col:8> '_Bool' <LValueToRValue>
|   |   | | |   `-DeclRefExpr 0x5640a11e5da0 <col:8> '_Bool' lvalue Var 0x5640a11e1038 'a$w_buff0_used' '_Bool'
|   |   | | `-BinaryOperator 0x5640a11e5e90 <col:26, col:46> 'int' '&&'
|   |   | |   |-UnaryOperator 0x5640a11e5e28 <col:26, col:27> 'int' prefix '!' cannot overflow
|   |   | |   | `-ImplicitCastExpr 0x5640a11e5e10 <col:27> '_Bool' <LValueToRValue>
|   |   | |   |   `-DeclRefExpr 0x5640a11e5df0 <col:27> '_Bool' lvalue Var 0x5640a11e0bf0 'a$r_buff0_thd4' '_Bool'
|   |   | |   `-UnaryOperator 0x5640a11e5e78 <col:45, col:46> 'int' prefix '!' cannot overflow
|   |   | |     `-ImplicitCastExpr 0x5640a11e5e60 <col:46> '_Bool' <LValueToRValue>
|   |   | |       `-DeclRefExpr 0x5640a11e5e40 <col:46> '_Bool' lvalue Var 0x5640a11e1130 'a$w_buff1_used' '_Bool'
|   |   | `-BinaryOperator 0x5640a11e5f70 <col:64, col:84> 'int' '&&'
|   |   |   |-UnaryOperator 0x5640a11e5f08 <col:64, col:65> 'int' prefix '!' cannot overflow
|   |   |   | `-ImplicitCastExpr 0x5640a11e5ef0 <col:65> '_Bool' <LValueToRValue>
|   |   |   |   `-DeclRefExpr 0x5640a11e5ed0 <col:65> '_Bool' lvalue Var 0x5640a11e0bf0 'a$r_buff0_thd4' '_Bool'
|   |   |   `-UnaryOperator 0x5640a11e5f58 <col:83, col:84> 'int' prefix '!' cannot overflow
|   |   |     `-ImplicitCastExpr 0x5640a11e5f40 <col:84> '_Bool' <LValueToRValue>
|   |   |       `-DeclRefExpr 0x5640a11e5f20 <col:84> '_Bool' lvalue Var 0x5640a11e0e48 'a$r_buff1_thd4' '_Bool'
|   |   |-ImplicitCastExpr 0x5640a11e6150 <col:101> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x5640a11e5fb0 <col:101> 'int' lvalue Var 0x5640a11e0818 'a' 'int'
|   |   `-ParenExpr 0x5640a11e6130 <col:105, col:162> 'int'
|   |     `-ConditionalOperator 0x5640a11e6100 <col:106, col:153> 'int'
|   |       |-BinaryOperator 0x5640a11e6070 <col:106, col:124> 'int' '&&'
|   |       | |-ImplicitCastExpr 0x5640a11e6028 <col:106> 'int' <IntegralCast>
|   |       | | `-ImplicitCastExpr 0x5640a11e6010 <col:106> '_Bool' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x5640a11e5fd0 <col:106> '_Bool' lvalue Var 0x5640a11e1038 'a$w_buff0_used' '_Bool'
|   |       | `-ImplicitCastExpr 0x5640a11e6058 <col:124> 'int' <IntegralCast>
|   |       |   `-ImplicitCastExpr 0x5640a11e6040 <col:124> '_Bool' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x5640a11e5ff0 <col:124> '_Bool' lvalue Var 0x5640a11e0bf0 'a$r_buff0_thd4' '_Bool'
|   |       |-ImplicitCastExpr 0x5640a11e60d0 <col:141> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x5640a11e6090 <col:141> 'int' lvalue Var 0x5640a11e0fc0 'a$w_buff0' 'int'
|   |       `-ImplicitCastExpr 0x5640a11e60e8 <col:153> 'int' <LValueToRValue>
|   |         `-DeclRefExpr 0x5640a11e60b0 <col:153> 'int' lvalue Var 0x5640a11e10b8 'a$w_buff1' 'int'
|   |-BinaryOperator 0x5640a11e66a8 <line:793:3, col:208> 'int' '='
|   | |-DeclRefExpr 0x5640a11e61b8 <col:3> 'int' lvalue Var 0x5640a11e0fc0 'a$w_buff0' 'int'
|   | `-ConditionalOperator 0x5640a11e6678 <col:15, col:208> 'int'
|   |   |-ImplicitCastExpr 0x5640a11e6648 <col:15> 'int' <IntegralCast>
|   |   | `-ImplicitCastExpr 0x5640a11e6630 <col:15> '_Bool' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x5640a11e61d8 <col:15> '_Bool' lvalue Var 0x5640a11e1670 'weak$$choice2' '_Bool'
|   |   |-ImplicitCastExpr 0x5640a11e6660 <col:31> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x5640a11e61f8 <col:31> 'int' lvalue Var 0x5640a11e0fc0 'a$w_buff0' 'int'
|   |   `-ParenExpr 0x5640a11e6610 <col:43, col:208> 'int'
|   |     `-ConditionalOperator 0x5640a11e65e0 <col:44, col:207> 'int'
|   |       |-BinaryOperator 0x5640a11e6408 <col:44, col:121> 'int' '||'
|   |       | |-BinaryOperator 0x5640a11e6328 <col:44, col:83> 'int' '||'
|   |       | | |-UnaryOperator 0x5640a11e6250 <col:44, col:45> 'int' prefix '!' cannot overflow
|   |       | | | `-ImplicitCastExpr 0x5640a11e6238 <col:45> '_Bool' <LValueToRValue>
|   |       | | |   `-DeclRefExpr 0x5640a11e6218 <col:45> '_Bool' lvalue Var 0x5640a11e1038 'a$w_buff0_used' '_Bool'
|   |       | | `-BinaryOperator 0x5640a11e6308 <col:63, col:83> 'int' '&&'
|   |       | |   |-UnaryOperator 0x5640a11e62a0 <col:63, col:64> 'int' prefix '!' cannot overflow
|   |       | |   | `-ImplicitCastExpr 0x5640a11e6288 <col:64> '_Bool' <LValueToRValue>
|   |       | |   |   `-DeclRefExpr 0x5640a11e6268 <col:64> '_Bool' lvalue Var 0x5640a11e0bf0 'a$r_buff0_thd4' '_Bool'
|   |       | |   `-UnaryOperator 0x5640a11e62f0 <col:82, col:83> 'int' prefix '!' cannot overflow
|   |       | |     `-ImplicitCastExpr 0x5640a11e62d8 <col:83> '_Bool' <LValueToRValue>
|   |       | |       `-DeclRefExpr 0x5640a11e62b8 <col:83> '_Bool' lvalue Var 0x5640a11e1130 'a$w_buff1_used' '_Bool'
|   |       | `-BinaryOperator 0x5640a11e63e8 <col:101, col:121> 'int' '&&'
|   |       |   |-UnaryOperator 0x5640a11e6380 <col:101, col:102> 'int' prefix '!' cannot overflow
|   |       |   | `-ImplicitCastExpr 0x5640a11e6368 <col:102> '_Bool' <LValueToRValue>
|   |       |   |   `-DeclRefExpr 0x5640a11e6348 <col:102> '_Bool' lvalue Var 0x5640a11e0bf0 'a$r_buff0_thd4' '_Bool'
|   |       |   `-UnaryOperator 0x5640a11e63d0 <col:120, col:121> 'int' prefix '!' cannot overflow
|   |       |     `-ImplicitCastExpr 0x5640a11e63b8 <col:121> '_Bool' <LValueToRValue>
|   |       |       `-DeclRefExpr 0x5640a11e6398 <col:121> '_Bool' lvalue Var 0x5640a11e0e48 'a$r_buff1_thd4' '_Bool'
|   |       |-ImplicitCastExpr 0x5640a11e65c8 <col:138> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x5640a11e6428 <col:138> 'int' lvalue Var 0x5640a11e0fc0 'a$w_buff0' 'int'
|   |       `-ParenExpr 0x5640a11e65a8 <col:150, col:207> 'int'
|   |         `-ConditionalOperator 0x5640a11e6578 <col:151, col:198> 'int'
|   |           |-BinaryOperator 0x5640a11e64e8 <col:151, col:169> 'int' '&&'
|   |           | |-ImplicitCastExpr 0x5640a11e64a0 <col:151> 'int' <IntegralCast>
|   |           | | `-ImplicitCastExpr 0x5640a11e6488 <col:151> '_Bool' <LValueToRValue>
|   |           | |   `-DeclRefExpr 0x5640a11e6448 <col:151> '_Bool' lvalue Var 0x5640a11e1038 'a$w_buff0_used' '_Bool'
|   |           | `-ImplicitCastExpr 0x5640a11e64d0 <col:169> 'int' <IntegralCast>
|   |           |   `-ImplicitCastExpr 0x5640a11e64b8 <col:169> '_Bool' <LValueToRValue>
|   |           |     `-DeclRefExpr 0x5640a11e6468 <col:169> '_Bool' lvalue Var 0x5640a11e0bf0 'a$r_buff0_thd4' '_Bool'
|   |           |-ImplicitCastExpr 0x5640a11e6548 <col:186> 'int' <LValueToRValue>
|   |           | `-DeclRefExpr 0x5640a11e6508 <col:186> 'int' lvalue Var 0x5640a11e0fc0 'a$w_buff0' 'int'
|   |           `-ImplicitCastExpr 0x5640a11e6560 <col:198> 'int' <LValueToRValue>
|   |             `-DeclRefExpr 0x5640a11e6528 <col:198> 'int' lvalue Var 0x5640a11e0fc0 'a$w_buff0' 'int'
|   |-BinaryOperator 0x5640a11e6bd8 <line:794:3, col:208> 'int' '='
|   | |-DeclRefExpr 0x5640a11e66c8 <col:3> 'int' lvalue Var 0x5640a11e10b8 'a$w_buff1' 'int'
|   | `-ConditionalOperator 0x5640a11e6ba8 <col:15, col:208> 'int'
|   |   |-ImplicitCastExpr 0x5640a11e6b78 <col:15> 'int' <IntegralCast>
|   |   | `-ImplicitCastExpr 0x5640a11e6b60 <col:15> '_Bool' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x5640a11e66e8 <col:15> '_Bool' lvalue Var 0x5640a11e1670 'weak$$choice2' '_Bool'
|   |   |-ImplicitCastExpr 0x5640a11e6b90 <col:31> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x5640a11e6708 <col:31> 'int' lvalue Var 0x5640a11e10b8 'a$w_buff1' 'int'
|   |   `-ParenExpr 0x5640a11e6b20 <col:43, col:208> 'int'
|   |     `-ConditionalOperator 0x5640a11e6af0 <col:44, col:207> 'int'
|   |       |-BinaryOperator 0x5640a11e6918 <col:44, col:121> 'int' '||'
|   |       | |-BinaryOperator 0x5640a11e6838 <col:44, col:83> 'int' '||'
|   |       | | |-UnaryOperator 0x5640a11e6760 <col:44, col:45> 'int' prefix '!' cannot overflow
|   |       | | | `-ImplicitCastExpr 0x5640a11e6748 <col:45> '_Bool' <LValueToRValue>
|   |       | | |   `-DeclRefExpr 0x5640a11e6728 <col:45> '_Bool' lvalue Var 0x5640a11e1038 'a$w_buff0_used' '_Bool'
|   |       | | `-BinaryOperator 0x5640a11e6818 <col:63, col:83> 'int' '&&'
|   |       | |   |-UnaryOperator 0x5640a11e67b0 <col:63, col:64> 'int' prefix '!' cannot overflow
|   |       | |   | `-ImplicitCastExpr 0x5640a11e6798 <col:64> '_Bool' <LValueToRValue>
|   |       | |   |   `-DeclRefExpr 0x5640a11e6778 <col:64> '_Bool' lvalue Var 0x5640a11e0bf0 'a$r_buff0_thd4' '_Bool'
|   |       | |   `-UnaryOperator 0x5640a11e6800 <col:82, col:83> 'int' prefix '!' cannot overflow
|   |       | |     `-ImplicitCastExpr 0x5640a11e67e8 <col:83> '_Bool' <LValueToRValue>
|   |       | |       `-DeclRefExpr 0x5640a11e67c8 <col:83> '_Bool' lvalue Var 0x5640a11e1130 'a$w_buff1_used' '_Bool'
|   |       | `-BinaryOperator 0x5640a11e68f8 <col:101, col:121> 'int' '&&'
|   |       |   |-UnaryOperator 0x5640a11e6890 <col:101, col:102> 'int' prefix '!' cannot overflow
|   |       |   | `-ImplicitCastExpr 0x5640a11e6878 <col:102> '_Bool' <LValueToRValue>
|   |       |   |   `-DeclRefExpr 0x5640a11e6858 <col:102> '_Bool' lvalue Var 0x5640a11e0bf0 'a$r_buff0_thd4' '_Bool'
|   |       |   `-UnaryOperator 0x5640a11e68e0 <col:120, col:121> 'int' prefix '!' cannot overflow
|   |       |     `-ImplicitCastExpr 0x5640a11e68c8 <col:121> '_Bool' <LValueToRValue>
|   |       |       `-DeclRefExpr 0x5640a11e68a8 <col:121> '_Bool' lvalue Var 0x5640a11e0e48 'a$r_buff1_thd4' '_Bool'
|   |       |-ImplicitCastExpr 0x5640a11e6ad8 <col:138> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x5640a11e6938 <col:138> 'int' lvalue Var 0x5640a11e10b8 'a$w_buff1' 'int'
|   |       `-ParenExpr 0x5640a11e6ab8 <col:150, col:207> 'int'
|   |         `-ConditionalOperator 0x5640a11e6a88 <col:151, col:198> 'int'
|   |           |-BinaryOperator 0x5640a11e69f8 <col:151, col:169> 'int' '&&'
|   |           | |-ImplicitCastExpr 0x5640a11e69b0 <col:151> 'int' <IntegralCast>
|   |           | | `-ImplicitCastExpr 0x5640a11e6998 <col:151> '_Bool' <LValueToRValue>
|   |           | |   `-DeclRefExpr 0x5640a11e6958 <col:151> '_Bool' lvalue Var 0x5640a11e1038 'a$w_buff0_used' '_Bool'
|   |           | `-ImplicitCastExpr 0x5640a11e69e0 <col:169> 'int' <IntegralCast>
|   |           |   `-ImplicitCastExpr 0x5640a11e69c8 <col:169> '_Bool' <LValueToRValue>
|   |           |     `-DeclRefExpr 0x5640a11e6978 <col:169> '_Bool' lvalue Var 0x5640a11e0bf0 'a$r_buff0_thd4' '_Bool'
|   |           |-ImplicitCastExpr 0x5640a11e6a58 <col:186> 'int' <LValueToRValue>
|   |           | `-DeclRefExpr 0x5640a11e6a18 <col:186> 'int' lvalue Var 0x5640a11e10b8 'a$w_buff1' 'int'
|   |           `-ImplicitCastExpr 0x5640a11e6a70 <col:198> 'int' <LValueToRValue>
|   |             `-DeclRefExpr 0x5640a11e6a38 <col:198> 'int' lvalue Var 0x5640a11e10b8 'a$w_buff1' 'int'
|   |-BinaryOperator 0x5640a11e7180 <line:795:3, col:227> '_Bool' '='
|   | |-DeclRefExpr 0x5640a11e6bf8 <col:3> '_Bool' lvalue Var 0x5640a11e1038 'a$w_buff0_used' '_Bool'
|   | `-ImplicitCastExpr 0x5640a11e7168 <col:20, col:227> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x5640a11e7138 <col:20, col:227> 'int'
|   |     |-ImplicitCastExpr 0x5640a11e70f0 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x5640a11e70d8 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x5640a11e6c18 <col:20> '_Bool' lvalue Var 0x5640a11e1670 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x5640a11e7120 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x5640a11e7108 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x5640a11e6c38 <col:36> '_Bool' lvalue Var 0x5640a11e1038 'a$w_buff0_used' '_Bool'
|   |     `-ParenExpr 0x5640a11e70b8 <col:53, col:227> 'int'
|   |       `-ConditionalOperator 0x5640a11e7088 <col:54, col:226> 'int'
|   |         |-BinaryOperator 0x5640a11e6e48 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x5640a11e6d68 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x5640a11e6c90 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x5640a11e6c78 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x5640a11e6c58 <col:55> '_Bool' lvalue Var 0x5640a11e1038 'a$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x5640a11e6d48 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x5640a11e6ce0 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x5640a11e6cc8 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x5640a11e6ca8 <col:74> '_Bool' lvalue Var 0x5640a11e0bf0 'a$r_buff0_thd4' '_Bool'
|   |         | |   `-UnaryOperator 0x5640a11e6d30 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x5640a11e6d18 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x5640a11e6cf8 <col:93> '_Bool' lvalue Var 0x5640a11e1130 'a$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x5640a11e6e28 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x5640a11e6dc0 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x5640a11e6da8 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x5640a11e6d88 <col:112> '_Bool' lvalue Var 0x5640a11e0bf0 'a$r_buff0_thd4' '_Bool'
|   |         |   `-UnaryOperator 0x5640a11e6e10 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x5640a11e6df8 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x5640a11e6dd8 <col:131> '_Bool' lvalue Var 0x5640a11e0e48 'a$r_buff1_thd4' '_Bool'
|   |         |-ImplicitCastExpr 0x5640a11e7070 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x5640a11e7058 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x5640a11e6e68 <col:148> '_Bool' lvalue Var 0x5640a11e1038 'a$w_buff0_used' '_Bool'
|   |         `-ParenExpr 0x5640a11e7038 <col:165, col:226> 'int'
|   |           `-ConditionalOperator 0x5640a11e7008 <col:166, col:212> 'int'
|   |             |-BinaryOperator 0x5640a11e6f28 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x5640a11e6ee0 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x5640a11e6ec8 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x5640a11e6e88 <col:166> '_Bool' lvalue Var 0x5640a11e1038 'a$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x5640a11e6f10 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x5640a11e6ef8 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x5640a11e6ea8 <col:184> '_Bool' lvalue Var 0x5640a11e0bf0 'a$r_buff0_thd4' '_Bool'
|   |             |-ImplicitCastExpr 0x5640a11e6fc0 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x5640a11e6f78 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x5640a11e6f48 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x5640a11e6ff0 <col:212> 'int' <IntegralCast>
|   |               `-ImplicitCastExpr 0x5640a11e6fd8 <col:212> '_Bool' <LValueToRValue>
|   |                 `-DeclRefExpr 0x5640a11e6fa0 <col:212> '_Bool' lvalue Var 0x5640a11e1038 'a$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x5640a11e7748 <line:796:3, col:221> '_Bool' '='
|   | |-DeclRefExpr 0x5640a11e71a0 <col:3> '_Bool' lvalue Var 0x5640a11e1130 'a$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x5640a11e7730 <col:20, col:221> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x5640a11e7700 <col:20, col:221> 'int'
|   |     |-ImplicitCastExpr 0x5640a11e76b8 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x5640a11e76a0 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x5640a11e71c0 <col:20> '_Bool' lvalue Var 0x5640a11e1670 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x5640a11e76e8 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x5640a11e76d0 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x5640a11e71e0 <col:36> '_Bool' lvalue Var 0x5640a11e1130 'a$w_buff1_used' '_Bool'
|   |     `-ParenExpr 0x5640a11e7680 <col:53, col:221> 'int'
|   |       `-ConditionalOperator 0x5640a11e7650 <col:54, col:220> 'int'
|   |         |-BinaryOperator 0x5640a11e73f0 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x5640a11e7310 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x5640a11e7238 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x5640a11e7220 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x5640a11e7200 <col:55> '_Bool' lvalue Var 0x5640a11e1038 'a$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x5640a11e72f0 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x5640a11e7288 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x5640a11e7270 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x5640a11e7250 <col:74> '_Bool' lvalue Var 0x5640a11e0bf0 'a$r_buff0_thd4' '_Bool'
|   |         | |   `-UnaryOperator 0x5640a11e72d8 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x5640a11e72c0 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x5640a11e72a0 <col:93> '_Bool' lvalue Var 0x5640a11e1130 'a$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x5640a11e73d0 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x5640a11e7368 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x5640a11e7350 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x5640a11e7330 <col:112> '_Bool' lvalue Var 0x5640a11e0bf0 'a$r_buff0_thd4' '_Bool'
|   |         |   `-UnaryOperator 0x5640a11e73b8 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x5640a11e73a0 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x5640a11e7380 <col:131> '_Bool' lvalue Var 0x5640a11e0e48 'a$r_buff1_thd4' '_Bool'
|   |         |-ImplicitCastExpr 0x5640a11e7638 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x5640a11e7620 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x5640a11e7410 <col:148> '_Bool' lvalue Var 0x5640a11e1130 'a$w_buff1_used' '_Bool'
|   |         `-ParenExpr 0x5640a11e7600 <col:165, col:220> 'int'
|   |           `-ConditionalOperator 0x5640a11e75d0 <col:166, col:219> 'int'
|   |             |-BinaryOperator 0x5640a11e74d0 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x5640a11e7488 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x5640a11e7470 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x5640a11e7430 <col:166> '_Bool' lvalue Var 0x5640a11e1038 'a$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x5640a11e74b8 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x5640a11e74a0 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x5640a11e7450 <col:184> '_Bool' lvalue Var 0x5640a11e0bf0 'a$r_buff0_thd4' '_Bool'
|   |             |-ImplicitCastExpr 0x5640a11e75a0 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x5640a11e7520 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x5640a11e74f0 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x5640a11e75b8 <col:212, col:219> 'int' <IntegralCast>
|   |               `-CStyleCastExpr 0x5640a11e7578 <col:212, col:219> '_Bool' <IntegralToBoolean>
|   |                 `-IntegerLiteral 0x5640a11e7548 <col:219> 'int' 0
|   |-BinaryOperator 0x5640a11e7d00 <line:797:3, col:227> '_Bool' '='
|   | |-DeclRefExpr 0x5640a11e7768 <col:3> '_Bool' lvalue Var 0x5640a11e0bf0 'a$r_buff0_thd4' '_Bool'
|   | `-ImplicitCastExpr 0x5640a11e7ce8 <col:20, col:227> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x5640a11e7cb8 <col:20, col:227> 'int'
|   |     |-ImplicitCastExpr 0x5640a11e7c70 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x5640a11e7c58 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x5640a11e7788 <col:20> '_Bool' lvalue Var 0x5640a11e1670 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x5640a11e7ca0 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x5640a11e7c88 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x5640a11e77a8 <col:36> '_Bool' lvalue Var 0x5640a11e0bf0 'a$r_buff0_thd4' '_Bool'
|   |     `-ParenExpr 0x5640a11e7c38 <col:53, col:227> 'int'
|   |       `-ConditionalOperator 0x5640a11e7c08 <col:54, col:226> 'int'
|   |         |-BinaryOperator 0x5640a11e79b8 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x5640a11e78d8 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x5640a11e7800 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x5640a11e77e8 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x5640a11e77c8 <col:55> '_Bool' lvalue Var 0x5640a11e1038 'a$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x5640a11e78b8 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x5640a11e7850 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x5640a11e7838 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x5640a11e7818 <col:74> '_Bool' lvalue Var 0x5640a11e0bf0 'a$r_buff0_thd4' '_Bool'
|   |         | |   `-UnaryOperator 0x5640a11e78a0 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x5640a11e7888 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x5640a11e7868 <col:93> '_Bool' lvalue Var 0x5640a11e1130 'a$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x5640a11e7998 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x5640a11e7930 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x5640a11e7918 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x5640a11e78f8 <col:112> '_Bool' lvalue Var 0x5640a11e0bf0 'a$r_buff0_thd4' '_Bool'
|   |         |   `-UnaryOperator 0x5640a11e7980 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x5640a11e7968 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x5640a11e7948 <col:131> '_Bool' lvalue Var 0x5640a11e0e48 'a$r_buff1_thd4' '_Bool'
|   |         |-ImplicitCastExpr 0x5640a11e7bf0 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x5640a11e7bd8 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x5640a11e79d8 <col:148> '_Bool' lvalue Var 0x5640a11e0bf0 'a$r_buff0_thd4' '_Bool'
|   |         `-ParenExpr 0x5640a11e7bb8 <col:165, col:226> 'int'
|   |           `-ConditionalOperator 0x5640a11e7b88 <col:166, col:212> 'int'
|   |             |-BinaryOperator 0x5640a11e7a98 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x5640a11e7a50 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x5640a11e7a38 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x5640a11e79f8 <col:166> '_Bool' lvalue Var 0x5640a11e1038 'a$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x5640a11e7a80 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x5640a11e7a68 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x5640a11e7a18 <col:184> '_Bool' lvalue Var 0x5640a11e0bf0 'a$r_buff0_thd4' '_Bool'
|   |             |-ImplicitCastExpr 0x5640a11e7b30 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x5640a11e7ae8 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x5640a11e7ab8 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x5640a11e7b70 <col:212> 'int' <IntegralCast>
|   |               `-ImplicitCastExpr 0x5640a11e7b48 <col:212> '_Bool' <LValueToRValue>
|   |                 `-DeclRefExpr 0x5640a11e7b10 <col:212> '_Bool' lvalue Var 0x5640a11e0bf0 'a$r_buff0_thd4' '_Bool'
|   |-BinaryOperator 0x5640a11e82c8 <line:798:3, col:221> '_Bool' '='
|   | |-DeclRefExpr 0x5640a11e7d20 <col:3> '_Bool' lvalue Var 0x5640a11e0e48 'a$r_buff1_thd4' '_Bool'
|   | `-ImplicitCastExpr 0x5640a11e82b0 <col:20, col:221> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x5640a11e8280 <col:20, col:221> 'int'
|   |     |-ImplicitCastExpr 0x5640a11e8238 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x5640a11e8220 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x5640a11e7d40 <col:20> '_Bool' lvalue Var 0x5640a11e1670 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x5640a11e8268 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x5640a11e8250 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x5640a11e7d60 <col:36> '_Bool' lvalue Var 0x5640a11e0e48 'a$r_buff1_thd4' '_Bool'
|   |     `-ParenExpr 0x5640a11e8200 <col:53, col:221> 'int'
|   |       `-ConditionalOperator 0x5640a11e81d0 <col:54, col:220> 'int'
|   |         |-BinaryOperator 0x5640a11e7f70 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x5640a11e7e90 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x5640a11e7db8 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x5640a11e7da0 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x5640a11e7d80 <col:55> '_Bool' lvalue Var 0x5640a11e1038 'a$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x5640a11e7e70 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x5640a11e7e08 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x5640a11e7df0 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x5640a11e7dd0 <col:74> '_Bool' lvalue Var 0x5640a11e0bf0 'a$r_buff0_thd4' '_Bool'
|   |         | |   `-UnaryOperator 0x5640a11e7e58 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x5640a11e7e40 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x5640a11e7e20 <col:93> '_Bool' lvalue Var 0x5640a11e1130 'a$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x5640a11e7f50 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x5640a11e7ee8 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x5640a11e7ed0 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x5640a11e7eb0 <col:112> '_Bool' lvalue Var 0x5640a11e0bf0 'a$r_buff0_thd4' '_Bool'
|   |         |   `-UnaryOperator 0x5640a11e7f38 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x5640a11e7f20 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x5640a11e7f00 <col:131> '_Bool' lvalue Var 0x5640a11e0e48 'a$r_buff1_thd4' '_Bool'
|   |         |-ImplicitCastExpr 0x5640a11e81b8 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x5640a11e81a0 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x5640a11e7f90 <col:148> '_Bool' lvalue Var 0x5640a11e0e48 'a$r_buff1_thd4' '_Bool'
|   |         `-ParenExpr 0x5640a11e8180 <col:165, col:220> 'int'
|   |           `-ConditionalOperator 0x5640a11e8150 <col:166, col:219> 'int'
|   |             |-BinaryOperator 0x5640a11e8050 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x5640a11e8008 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x5640a11e7ff0 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x5640a11e7fb0 <col:166> '_Bool' lvalue Var 0x5640a11e1038 'a$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x5640a11e8038 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x5640a11e8020 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x5640a11e7fd0 <col:184> '_Bool' lvalue Var 0x5640a11e0bf0 'a$r_buff0_thd4' '_Bool'
|   |             |-ImplicitCastExpr 0x5640a11e8120 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x5640a11e80a0 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x5640a11e8070 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x5640a11e8138 <col:212, col:219> 'int' <IntegralCast>
|   |               `-CStyleCastExpr 0x5640a11e80f8 <col:212, col:219> '_Bool' <IntegralToBoolean>
|   |                 `-IntegerLiteral 0x5640a11e80c8 <col:219> 'int' 0
|   |-BinaryOperator 0x5640a11e8340 <line:799:3, col:25> 'int' '='
|   | |-DeclRefExpr 0x5640a11e82e8 <col:3> 'int' lvalue Var 0x5640a11e06f8 '__unbuffered_p3_EAX' 'int'
|   | `-ImplicitCastExpr 0x5640a11e8328 <col:25> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x5640a11e8308 <col:25> 'int' lvalue Var 0x5640a11e0818 'a' 'int'
|   |-BinaryOperator 0x5640a11e8470 <line:800:3, col:37> 'int' '='
|   | |-DeclRefExpr 0x5640a11e8360 <col:3> 'int' lvalue Var 0x5640a11e0818 'a' 'int'
|   | `-ConditionalOperator 0x5640a11e8440 <col:7, col:37> 'int'
|   |   |-ImplicitCastExpr 0x5640a11e83f8 <col:7> 'int' <IntegralCast>
|   |   | `-ImplicitCastExpr 0x5640a11e83e0 <col:7> '_Bool' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x5640a11e8380 <col:7> '_Bool' lvalue Var 0x5640a11e08b0 'a$flush_delayed' '_Bool'
|   |   |-ImplicitCastExpr 0x5640a11e8410 <col:25> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x5640a11e83a0 <col:25> 'int' lvalue Var 0x5640a11e0930 'a$mem_tmp' 'int'
|   |   `-ImplicitCastExpr 0x5640a11e8428 <col:37> 'int' <LValueToRValue>
|   |     `-DeclRefExpr 0x5640a11e83c0 <col:37> 'int' lvalue Var 0x5640a11e0818 'a' 'int'
|   |-BinaryOperator 0x5640a11e8508 <line:801:3, col:28> '_Bool' '='
|   | |-DeclRefExpr 0x5640a11e8490 <col:3> '_Bool' lvalue Var 0x5640a11e08b0 'a$flush_delayed' '_Bool'
|   | `-CStyleCastExpr 0x5640a11e84e0 <col:21, col:28> '_Bool' <IntegralToBoolean>
|   |   `-IntegerLiteral 0x5640a11e84b0 <col:28> 'int' 0
|   |-CallExpr 0x5640a11e8560 <line:802:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x5640a11e8548 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5640a11e8528 <col:3> 'void ()' Function 0x5640a1186f00 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x5640a11e85b8 <line:803:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x5640a11e85a0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5640a11e8580 <col:3> 'void ()' Function 0x5640a1186e40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x5640a11e88a0 <line:804:3, col:103> 'int' '='
|   | |-DeclRefExpr 0x5640a11e85d8 <col:3> 'int' lvalue Var 0x5640a11e0818 'a' 'int'
|   | `-ConditionalOperator 0x5640a11e8870 <col:7, col:103> 'int'
|   |   |-BinaryOperator 0x5640a11e8698 <col:7, col:25> 'int' '&&'
|   |   | |-ImplicitCastExpr 0x5640a11e8650 <col:7> 'int' <IntegralCast>
|   |   | | `-ImplicitCastExpr 0x5640a11e8638 <col:7> '_Bool' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x5640a11e85f8 <col:7> '_Bool' lvalue Var 0x5640a11e1038 'a$w_buff0_used' '_Bool'
|   |   | `-ImplicitCastExpr 0x5640a11e8680 <col:25> 'int' <IntegralCast>
|   |   |   `-ImplicitCastExpr 0x5640a11e8668 <col:25> '_Bool' <LValueToRValue>
|   |   |     `-DeclRefExpr 0x5640a11e8618 <col:25> '_Bool' lvalue Var 0x5640a11e0bf0 'a$r_buff0_thd4' '_Bool'
|   |   |-ImplicitCastExpr 0x5640a11e8858 <col:42> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x5640a11e86b8 <col:42> 'int' lvalue Var 0x5640a11e0fc0 'a$w_buff0' 'int'
|   |   `-ParenExpr 0x5640a11e8838 <col:54, col:103> 'int'
|   |     `-ConditionalOperator 0x5640a11e8808 <col:55, col:102> 'int'
|   |       |-BinaryOperator 0x5640a11e8778 <col:55, col:73> 'int' '&&'
|   |       | |-ImplicitCastExpr 0x5640a11e8730 <col:55> 'int' <IntegralCast>
|   |       | | `-ImplicitCastExpr 0x5640a11e8718 <col:55> '_Bool' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x5640a11e86d8 <col:55> '_Bool' lvalue Var 0x5640a11e1130 'a$w_buff1_used' '_Bool'
|   |       | `-ImplicitCastExpr 0x5640a11e8760 <col:73> 'int' <IntegralCast>
|   |       |   `-ImplicitCastExpr 0x5640a11e8748 <col:73> '_Bool' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x5640a11e86f8 <col:73> '_Bool' lvalue Var 0x5640a11e0e48 'a$r_buff1_thd4' '_Bool'
|   |       |-ImplicitCastExpr 0x5640a11e87d8 <col:90> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x5640a11e8798 <col:90> 'int' lvalue Var 0x5640a11e10b8 'a$w_buff1' 'int'
|   |       `-ImplicitCastExpr 0x5640a11e87f0 <col:102> 'int' <LValueToRValue>
|   |         `-DeclRefExpr 0x5640a11e87b8 <col:102> 'int' lvalue Var 0x5640a11e0818 'a' 'int'
|   |-BinaryOperator 0x5640a11e8aa8 <line:805:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x5640a11e88c0 <col:3> '_Bool' lvalue Var 0x5640a11e1038 'a$w_buff0_used' '_Bool'
|   | `-ImplicitCastExpr 0x5640a11e8a90 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x5640a11e8a60 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x5640a11e8980 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x5640a11e8938 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x5640a11e8920 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x5640a11e88e0 <col:20> '_Bool' lvalue Var 0x5640a11e1038 'a$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x5640a11e8968 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x5640a11e8950 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x5640a11e8900 <col:38> '_Bool' lvalue Var 0x5640a11e0bf0 'a$r_buff0_thd4' '_Bool'
|   |     |-ImplicitCastExpr 0x5640a11e8a18 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x5640a11e89d0 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x5640a11e89a0 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x5640a11e8a48 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x5640a11e8a30 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x5640a11e89f8 <col:66> '_Bool' lvalue Var 0x5640a11e1038 'a$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x5640a11e8da0 <line:806:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x5640a11e8ac8 <col:3> '_Bool' lvalue Var 0x5640a11e1130 'a$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x5640a11e8d88 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x5640a11e8d58 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x5640a11e8c78 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x5640a11e8b98 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x5640a11e8b40 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x5640a11e8b28 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x5640a11e8ae8 <col:20> '_Bool' lvalue Var 0x5640a11e1038 'a$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x5640a11e8b80 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x5640a11e8b58 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x5640a11e8b08 <col:38> '_Bool' lvalue Var 0x5640a11e0bf0 'a$r_buff0_thd4' '_Bool'
|   |     | `-BinaryOperator 0x5640a11e8c58 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x5640a11e8c10 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x5640a11e8bf8 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x5640a11e8bb8 <col:56> '_Bool' lvalue Var 0x5640a11e1130 'a$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x5640a11e8c40 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x5640a11e8c28 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x5640a11e8bd8 <col:74> '_Bool' lvalue Var 0x5640a11e0e48 'a$r_buff1_thd4' '_Bool'
|   |     |-ImplicitCastExpr 0x5640a11e8d10 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x5640a11e8cc8 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x5640a11e8c98 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x5640a11e8d40 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x5640a11e8d28 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x5640a11e8cf0 <col:102> '_Bool' lvalue Var 0x5640a11e1130 'a$w_buff1_used' '_Bool'
|   |-BinaryOperator 0x5640a11e8fa8 <line:807:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x5640a11e8dc0 <col:3> '_Bool' lvalue Var 0x5640a11e0bf0 'a$r_buff0_thd4' '_Bool'
|   | `-ImplicitCastExpr 0x5640a11e8f90 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x5640a11e8f60 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x5640a11e8e80 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x5640a11e8e38 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x5640a11e8e20 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x5640a11e8de0 <col:20> '_Bool' lvalue Var 0x5640a11e1038 'a$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x5640a11e8e68 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x5640a11e8e50 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x5640a11e8e00 <col:38> '_Bool' lvalue Var 0x5640a11e0bf0 'a$r_buff0_thd4' '_Bool'
|   |     |-ImplicitCastExpr 0x5640a11e8f18 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x5640a11e8ed0 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x5640a11e8ea0 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x5640a11e8f48 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x5640a11e8f30 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x5640a11e8ef8 <col:66> '_Bool' lvalue Var 0x5640a11e0bf0 'a$r_buff0_thd4' '_Bool'
|   |-BinaryOperator 0x5640a11e9290 <line:808:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x5640a11e8fc8 <col:3> '_Bool' lvalue Var 0x5640a11e0e48 'a$r_buff1_thd4' '_Bool'
|   | `-ImplicitCastExpr 0x5640a11e9278 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x5640a11e9248 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x5640a11e9168 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x5640a11e9088 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x5640a11e9040 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x5640a11e9028 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x5640a11e8fe8 <col:20> '_Bool' lvalue Var 0x5640a11e1038 'a$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x5640a11e9070 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x5640a11e9058 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x5640a11e9008 <col:38> '_Bool' lvalue Var 0x5640a11e0bf0 'a$r_buff0_thd4' '_Bool'
|   |     | `-BinaryOperator 0x5640a11e9148 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x5640a11e9100 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x5640a11e90e8 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x5640a11e90a8 <col:56> '_Bool' lvalue Var 0x5640a11e1130 'a$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x5640a11e9130 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x5640a11e9118 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x5640a11e90c8 <col:74> '_Bool' lvalue Var 0x5640a11e0e48 'a$r_buff1_thd4' '_Bool'
|   |     |-ImplicitCastExpr 0x5640a11e9200 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x5640a11e91b8 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x5640a11e9188 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x5640a11e9230 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x5640a11e9218 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x5640a11e91e0 <col:102> '_Bool' lvalue Var 0x5640a11e0e48 'a$r_buff1_thd4' '_Bool'
|   |-CallExpr 0x5640a11e92e8 <line:809:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x5640a11e92d0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5640a11e92b0 <col:3> 'void ()' Function 0x5640a1186f00 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x5640a11e9340 <line:810:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x5640a11e9328 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5640a11e9308 <col:3> 'void ()' Function 0x5640a1186e40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x5640a11e93f8 <line:811:3, col:41> 'int' '='
|   | |-DeclRefExpr 0x5640a11e9360 <col:3> 'int' lvalue Var 0x5640a11e0278 '__unbuffered_cnt' 'int'
|   | `-BinaryOperator 0x5640a11e93d8 <col:22, col:41> 'int' '+'
|   |   |-ImplicitCastExpr 0x5640a11e93c0 <col:22> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x5640a11e9380 <col:22> 'int' lvalue Var 0x5640a11e0278 '__unbuffered_cnt' 'int'
|   |   `-IntegerLiteral 0x5640a11e93a0 <col:41> 'int' 1
|   |-CallExpr 0x5640a11e9450 <line:812:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x5640a11e9438 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5640a11e9418 <col:3> 'void ()' Function 0x5640a1186f00 '__VERIFIER_atomic_end' 'void ()'
|   `-ReturnStmt 0x5640a11e94c8 <line:813:3, col:36>
|     `-CallExpr 0x5640a11e94a8 <col:10, col:36> 'void *'
|       `-ImplicitCastExpr 0x5640a11e9490 <col:10> 'void *(*)(void)' <FunctionToPointerDecay>
|         `-DeclRefExpr 0x5640a11e9470 <col:10> 'void *(void)' Function 0x5640a1186958 '__VERIFIER_nondet_pointer' 'void *(void)'
|-FunctionDecl 0x5640a11e95f8 prev 0x5640a11dffc0 <line:815:1, line:817:1> line:815:6 fence 'void ()'
| `-CompoundStmt 0x5640a11e9698 <line:816:1, line:817:1>
|-FunctionDecl 0x5640a11e96c8 prev 0x5640a11e0080 <line:818:1, line:820:1> line:818:6 isync 'void ()'
| `-CompoundStmt 0x5640a11e9768 <line:819:1, line:820:1>
|-FunctionDecl 0x5640a11e9798 prev 0x5640a11e0140 <line:821:1, line:823:1> line:821:6 lwfence 'void ()'
| `-CompoundStmt 0x5640a11e9838 <line:822:1, line:823:1>
`-FunctionDecl 0x5640a11e98a8 <line:824:1, line:850:1> line:824:5 main 'int ()'
  `-CompoundStmt 0x5640a11eb810 <line:825:1, line:850:1>
    |-DeclStmt 0x5640a11e99c0 <line:826:3, col:18>
    | `-VarDecl 0x5640a11e9958 <col:3, col:13> col:13 used t1339 'pthread_t':'unsigned long'
    |-CallExpr 0x5640a11e9bd8 <line:827:3, col:54> 'int'
    | |-ImplicitCastExpr 0x5640a11e9bc0 <col:3> 'int (*)(pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x5640a11e99d8 <col:3> 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' Function 0x5640a11c7488 'pthread_create' 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)'
    | |-UnaryOperator 0x5640a11e9a18 <col:18, col:19> 'pthread_t *' prefix '&' cannot overflow
    | | `-DeclRefExpr 0x5640a11e99f8 <col:19> 'pthread_t':'unsigned long' lvalue Var 0x5640a11e9958 't1339' 'pthread_t':'unsigned long'
    | |-ImplicitCastExpr 0x5640a11e9c18 <col:26, col:36> 'const pthread_attr_t *' <NullToPointer>
    | | `-ParenExpr 0x5640a11e9a90 <col:26, col:36> 'void *'
    | |   `-CStyleCastExpr 0x5640a11e9a68 <col:27, col:35> 'void *' <NullToPointer>
    | |     `-IntegerLiteral 0x5640a11e9a30 <col:35> 'int' 0
    | |-ImplicitCastExpr 0x5640a11e9c30 <col:39> 'void *(*)(void *)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x5640a11e9ab0 <col:39> 'void *(void *)' Function 0x5640a11e1788 'P0' 'void *(void *)'
    | `-ParenExpr 0x5640a11e9b30 <col:43, col:53> 'void *'
    |   `-CStyleCastExpr 0x5640a11e9b08 <col:44, col:52> 'void *' <NullToPointer>
    |     `-IntegerLiteral 0x5640a11e9ad0 <col:52> 'int' 0
    |-DeclStmt 0x5640a11e9cc0 <line:828:3, col:18>
    | `-VarDecl 0x5640a11e9c58 <col:3, col:13> col:13 used t1340 'pthread_t':'unsigned long'
    |-CallExpr 0x5640a11e9e68 <line:829:3, col:54> 'int'
    | |-ImplicitCastExpr 0x5640a11e9e50 <col:3> 'int (*)(pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x5640a11e9cd8 <col:3> 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' Function 0x5640a11c7488 'pthread_create' 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)'
    | |-UnaryOperator 0x5640a11e9d18 <col:18, col:19> 'pthread_t *' prefix '&' cannot overflow
    | | `-DeclRefExpr 0x5640a11e9cf8 <col:19> 'pthread_t':'unsigned long' lvalue Var 0x5640a11e9c58 't1340' 'pthread_t':'unsigned long'
    | |-ImplicitCastExpr 0x5640a11e9ea8 <col:26, col:36> 'const pthread_attr_t *' <NullToPointer>
    | | `-ParenExpr 0x5640a11e9d90 <col:26, col:36> 'void *'
    | |   `-CStyleCastExpr 0x5640a11e9d68 <col:27, col:35> 'void *' <NullToPointer>
    | |     `-IntegerLiteral 0x5640a11e9d30 <col:35> 'int' 0
    | |-ImplicitCastExpr 0x5640a11e9ec0 <col:39> 'void *(*)(void *)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x5640a11e9db0 <col:39> 'void *(void *)' Function 0x5640a11e31e0 'P1' 'void *(void *)'
    | `-ParenExpr 0x5640a11e9e30 <col:43, col:53> 'void *'
    |   `-CStyleCastExpr 0x5640a11e9e08 <col:44, col:52> 'void *' <NullToPointer>
    |     `-IntegerLiteral 0x5640a11e9dd0 <col:52> 'int' 0
    |-DeclStmt 0x5640a11e9f50 <line:830:3, col:18>
    | `-VarDecl 0x5640a11e9ee8 <col:3, col:13> col:13 used t1341 'pthread_t':'unsigned long'
    |-CallExpr 0x5640a11ea0f8 <line:831:3, col:54> 'int'
    | |-ImplicitCastExpr 0x5640a11ea0e0 <col:3> 'int (*)(pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x5640a11e9f68 <col:3> 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' Function 0x5640a11c7488 'pthread_create' 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)'
    | |-UnaryOperator 0x5640a11e9fa8 <col:18, col:19> 'pthread_t *' prefix '&' cannot overflow
    | | `-DeclRefExpr 0x5640a11e9f88 <col:19> 'pthread_t':'unsigned long' lvalue Var 0x5640a11e9ee8 't1341' 'pthread_t':'unsigned long'
    | |-ImplicitCastExpr 0x5640a11ea138 <col:26, col:36> 'const pthread_attr_t *' <NullToPointer>
    | | `-ParenExpr 0x5640a11ea020 <col:26, col:36> 'void *'
    | |   `-CStyleCastExpr 0x5640a11e9ff8 <col:27, col:35> 'void *' <NullToPointer>
    | |     `-IntegerLiteral 0x5640a11e9fc0 <col:35> 'int' 0
    | |-ImplicitCastExpr 0x5640a11ea150 <col:39> 'void *(*)(void *)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x5640a11ea040 <col:39> 'void *(void *)' Function 0x5640a11e4578 'P2' 'void *(void *)'
    | `-ParenExpr 0x5640a11ea0c0 <col:43, col:53> 'void *'
    |   `-CStyleCastExpr 0x5640a11ea098 <col:44, col:52> 'void *' <NullToPointer>
    |     `-IntegerLiteral 0x5640a11ea060 <col:52> 'int' 0
    |-DeclStmt 0x5640a11ea1e0 <line:832:3, col:18>
    | `-VarDecl 0x5640a11ea178 <col:3, col:13> col:13 used t1342 'pthread_t':'unsigned long'
    |-CallExpr 0x5640a11ea388 <line:833:3, col:54> 'int'
    | |-ImplicitCastExpr 0x5640a11ea370 <col:3> 'int (*)(pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x5640a11ea1f8 <col:3> 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' Function 0x5640a11c7488 'pthread_create' 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)'
    | |-UnaryOperator 0x5640a11ea238 <col:18, col:19> 'pthread_t *' prefix '&' cannot overflow
    | | `-DeclRefExpr 0x5640a11ea218 <col:19> 'pthread_t':'unsigned long' lvalue Var 0x5640a11ea178 't1342' 'pthread_t':'unsigned long'
    | |-ImplicitCastExpr 0x5640a11ea3c8 <col:26, col:36> 'const pthread_attr_t *' <NullToPointer>
    | | `-ParenExpr 0x5640a11ea2b0 <col:26, col:36> 'void *'
    | |   `-CStyleCastExpr 0x5640a11ea288 <col:27, col:35> 'void *' <NullToPointer>
    | |     `-IntegerLiteral 0x5640a11ea250 <col:35> 'int' 0
    | |-ImplicitCastExpr 0x5640a11ea3e0 <col:39> 'void *(*)(void *)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x5640a11ea2d0 <col:39> 'void *(void *)' Function 0x5640a11e58f8 'P3' 'void *(void *)'
    | `-ParenExpr 0x5640a11ea350 <col:43, col:53> 'void *'
    |   `-CStyleCastExpr 0x5640a11ea328 <col:44, col:52> 'void *' <NullToPointer>
    |     `-IntegerLiteral 0x5640a11ea2f0 <col:52> 'int' 0
    |-CallExpr 0x5640a11ea430 <line:834:3, col:27> 'void'
    | `-ImplicitCastExpr 0x5640a11ea418 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x5640a11ea3f8 <col:3> 'void ()' Function 0x5640a1186e40 '__VERIFIER_atomic_begin' 'void ()'
    |-BinaryOperator 0x5640a11ea500 <line:835:3, col:41> '_Bool' '='
    | |-DeclRefExpr 0x5640a11ea450 <col:3> '_Bool' lvalue Var 0x5640a11e11a8 'main$tmp_guard0' '_Bool'
    | `-ImplicitCastExpr 0x5640a11ea4e8 <col:21, col:41> '_Bool' <IntegralToBoolean>
    |   `-BinaryOperator 0x5640a11ea4c8 <col:21, col:41> 'int' '=='
    |     |-ImplicitCastExpr 0x5640a11ea4b0 <col:21> 'int' <LValueToRValue>
    |     | `-DeclRefExpr 0x5640a11ea470 <col:21> 'int' lvalue Var 0x5640a11e0278 '__unbuffered_cnt' 'int'
    |     `-IntegerLiteral 0x5640a11ea490 <col:41> 'int' 4
    |-CallExpr 0x5640a11ea558 <line:836:3, col:25> 'void'
    | `-ImplicitCastExpr 0x5640a11ea540 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x5640a11ea520 <col:3> 'void ()' Function 0x5640a1186f00 '__VERIFIER_atomic_end' 'void ()'
    |-CallExpr 0x5640a11ea5d0 <line:837:3, col:36> 'void'
    | |-ImplicitCastExpr 0x5640a11ea5b8 <col:3> 'void (*)(int)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x5640a11ea578 <col:3> 'void (int)' Function 0x5640a1186790 '__VERIFIER_assume' 'void (int)'
    | `-ImplicitCastExpr 0x5640a11ea610 <col:21> 'int' <IntegralCast>
    |   `-ImplicitCastExpr 0x5640a11ea5f8 <col:21> '_Bool' <LValueToRValue>
    |     `-DeclRefExpr 0x5640a11ea598 <col:21> '_Bool' lvalue Var 0x5640a11e11a8 'main$tmp_guard0' '_Bool'
    |-CallExpr 0x5640a11ea660 <line:838:3, col:27> 'void'
    | `-ImplicitCastExpr 0x5640a11ea648 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x5640a11ea628 <col:3> 'void ()' Function 0x5640a1186e40 '__VERIFIER_atomic_begin' 'void ()'
    |-BinaryOperator 0x5640a11ea948 <line:839:3, col:103> 'int' '='
    | |-DeclRefExpr 0x5640a11ea680 <col:3> 'int' lvalue Var 0x5640a11e0818 'a' 'int'
    | `-ConditionalOperator 0x5640a11ea918 <col:7, col:103> 'int'
    |   |-BinaryOperator 0x5640a11ea740 <col:7, col:25> 'int' '&&'
    |   | |-ImplicitCastExpr 0x5640a11ea6f8 <col:7> 'int' <IntegralCast>
    |   | | `-ImplicitCastExpr 0x5640a11ea6e0 <col:7> '_Bool' <LValueToRValue>
    |   | |   `-DeclRefExpr 0x5640a11ea6a0 <col:7> '_Bool' lvalue Var 0x5640a11e1038 'a$w_buff0_used' '_Bool'
    |   | `-ImplicitCastExpr 0x5640a11ea728 <col:25> 'int' <IntegralCast>
    |   |   `-ImplicitCastExpr 0x5640a11ea710 <col:25> '_Bool' <LValueToRValue>
    |   |     `-DeclRefExpr 0x5640a11ea6c0 <col:25> '_Bool' lvalue Var 0x5640a11e09a8 'a$r_buff0_thd0' '_Bool'
    |   |-ImplicitCastExpr 0x5640a11ea900 <col:42> 'int' <LValueToRValue>
    |   | `-DeclRefExpr 0x5640a11ea760 <col:42> 'int' lvalue Var 0x5640a11e0fc0 'a$w_buff0' 'int'
    |   `-ParenExpr 0x5640a11ea8e0 <col:54, col:103> 'int'
    |     `-ConditionalOperator 0x5640a11ea8b0 <col:55, col:102> 'int'
    |       |-BinaryOperator 0x5640a11ea820 <col:55, col:73> 'int' '&&'
    |       | |-ImplicitCastExpr 0x5640a11ea7d8 <col:55> 'int' <IntegralCast>
    |       | | `-ImplicitCastExpr 0x5640a11ea7c0 <col:55> '_Bool' <LValueToRValue>
    |       | |   `-DeclRefExpr 0x5640a11ea780 <col:55> '_Bool' lvalue Var 0x5640a11e1130 'a$w_buff1_used' '_Bool'
    |       | `-ImplicitCastExpr 0x5640a11ea808 <col:73> 'int' <IntegralCast>
    |       |   `-ImplicitCastExpr 0x5640a11ea7f0 <col:73> '_Bool' <LValueToRValue>
    |       |     `-DeclRefExpr 0x5640a11ea7a0 <col:73> '_Bool' lvalue Var 0x5640a11e0c68 'a$r_buff1_thd0' '_Bool'
    |       |-ImplicitCastExpr 0x5640a11ea880 <col:90> 'int' <LValueToRValue>
    |       | `-DeclRefExpr 0x5640a11ea840 <col:90> 'int' lvalue Var 0x5640a11e10b8 'a$w_buff1' 'int'
    |       `-ImplicitCastExpr 0x5640a11ea898 <col:102> 'int' <LValueToRValue>
    |         `-DeclRefExpr 0x5640a11ea860 <col:102> 'int' lvalue Var 0x5640a11e0818 'a' 'int'
    |-BinaryOperator 0x5640a11eab50 <line:840:3, col:66> '_Bool' '='
    | |-DeclRefExpr 0x5640a11ea968 <col:3> '_Bool' lvalue Var 0x5640a11e1038 'a$w_buff0_used' '_Bool'
    | `-ImplicitCastExpr 0x5640a11eab38 <col:20, col:66> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x5640a11eab08 <col:20, col:66> 'int'
    |     |-BinaryOperator 0x5640a11eaa28 <col:20, col:38> 'int' '&&'
    |     | |-ImplicitCastExpr 0x5640a11ea9e0 <col:20> 'int' <IntegralCast>
    |     | | `-ImplicitCastExpr 0x5640a11ea9c8 <col:20> '_Bool' <LValueToRValue>
    |     | |   `-DeclRefExpr 0x5640a11ea988 <col:20> '_Bool' lvalue Var 0x5640a11e1038 'a$w_buff0_used' '_Bool'
    |     | `-ImplicitCastExpr 0x5640a11eaa10 <col:38> 'int' <IntegralCast>
    |     |   `-ImplicitCastExpr 0x5640a11ea9f8 <col:38> '_Bool' <LValueToRValue>
    |     |     `-DeclRefExpr 0x5640a11ea9a8 <col:38> '_Bool' lvalue Var 0x5640a11e09a8 'a$r_buff0_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x5640a11eaac0 <col:55, col:62> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x5640a11eaa78 <col:55, col:62> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x5640a11eaa48 <col:62> 'int' 0
    |     `-ImplicitCastExpr 0x5640a11eaaf0 <col:66> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x5640a11eaad8 <col:66> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x5640a11eaaa0 <col:66> '_Bool' lvalue Var 0x5640a11e1038 'a$w_buff0_used' '_Bool'
    |-BinaryOperator 0x5640a11eae48 <line:841:3, col:102> '_Bool' '='
    | |-DeclRefExpr 0x5640a11eab70 <col:3> '_Bool' lvalue Var 0x5640a11e1130 'a$w_buff1_used' '_Bool'
    | `-ImplicitCastExpr 0x5640a11eae30 <col:20, col:102> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x5640a11eae00 <col:20, col:102> 'int'
    |     |-BinaryOperator 0x5640a11ead20 <col:20, col:74> 'int' '||'
    |     | |-BinaryOperator 0x5640a11eac40 <col:20, col:38> 'int' '&&'
    |     | | |-ImplicitCastExpr 0x5640a11eabf8 <col:20> 'int' <IntegralCast>
    |     | | | `-ImplicitCastExpr 0x5640a11eabe0 <col:20> '_Bool' <LValueToRValue>
    |     | | |   `-DeclRefExpr 0x5640a11eaba0 <col:20> '_Bool' lvalue Var 0x5640a11e1038 'a$w_buff0_used' '_Bool'
    |     | | `-ImplicitCastExpr 0x5640a11eac28 <col:38> 'int' <IntegralCast>
    |     | |   `-ImplicitCastExpr 0x5640a11eac10 <col:38> '_Bool' <LValueToRValue>
    |     | |     `-DeclRefExpr 0x5640a11eabc0 <col:38> '_Bool' lvalue Var 0x5640a11e09a8 'a$r_buff0_thd0' '_Bool'
    |     | `-BinaryOperator 0x5640a11ead00 <col:56, col:74> 'int' '&&'
    |     |   |-ImplicitCastExpr 0x5640a11eacb8 <col:56> 'int' <IntegralCast>
    |     |   | `-ImplicitCastExpr 0x5640a11eaca0 <col:56> '_Bool' <LValueToRValue>
    |     |   |   `-DeclRefExpr 0x5640a11eac60 <col:56> '_Bool' lvalue Var 0x5640a11e1130 'a$w_buff1_used' '_Bool'
    |     |   `-ImplicitCastExpr 0x5640a11eace8 <col:74> 'int' <IntegralCast>
    |     |     `-ImplicitCastExpr 0x5640a11eacd0 <col:74> '_Bool' <LValueToRValue>
    |     |       `-DeclRefExpr 0x5640a11eac80 <col:74> '_Bool' lvalue Var 0x5640a11e0c68 'a$r_buff1_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x5640a11eadb8 <col:91, col:98> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x5640a11ead70 <col:91, col:98> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x5640a11ead40 <col:98> 'int' 0
    |     `-ImplicitCastExpr 0x5640a11eade8 <col:102> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x5640a11eadd0 <col:102> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x5640a11ead98 <col:102> '_Bool' lvalue Var 0x5640a11e1130 'a$w_buff1_used' '_Bool'
    |-BinaryOperator 0x5640a11eb050 <line:842:3, col:66> '_Bool' '='
    | |-DeclRefExpr 0x5640a11eae68 <col:3> '_Bool' lvalue Var 0x5640a11e09a8 'a$r_buff0_thd0' '_Bool'
    | `-ImplicitCastExpr 0x5640a11eb038 <col:20, col:66> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x5640a11eb008 <col:20, col:66> 'int'
    |     |-BinaryOperator 0x5640a11eaf28 <col:20, col:38> 'int' '&&'
    |     | |-ImplicitCastExpr 0x5640a11eaee0 <col:20> 'int' <IntegralCast>
    |     | | `-ImplicitCastExpr 0x5640a11eaec8 <col:20> '_Bool' <LValueToRValue>
    |     | |   `-DeclRefExpr 0x5640a11eae88 <col:20> '_Bool' lvalue Var 0x5640a11e1038 'a$w_buff0_used' '_Bool'
    |     | `-ImplicitCastExpr 0x5640a11eaf10 <col:38> 'int' <IntegralCast>
    |     |   `-ImplicitCastExpr 0x5640a11eaef8 <col:38> '_Bool' <LValueToRValue>
    |     |     `-DeclRefExpr 0x5640a11eaea8 <col:38> '_Bool' lvalue Var 0x5640a11e09a8 'a$r_buff0_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x5640a11eafc0 <col:55, col:62> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x5640a11eaf78 <col:55, col:62> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x5640a11eaf48 <col:62> 'int' 0
    |     `-ImplicitCastExpr 0x5640a11eaff0 <col:66> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x5640a11eafd8 <col:66> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x5640a11eafa0 <col:66> '_Bool' lvalue Var 0x5640a11e09a8 'a$r_buff0_thd0' '_Bool'
    |-BinaryOperator 0x5640a11eb338 <line:843:3, col:102> '_Bool' '='
    | |-DeclRefExpr 0x5640a11eb070 <col:3> '_Bool' lvalue Var 0x5640a11e0c68 'a$r_buff1_thd0' '_Bool'
    | `-ImplicitCastExpr 0x5640a11eb320 <col:20, col:102> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x5640a11eb2f0 <col:20, col:102> 'int'
    |     |-BinaryOperator 0x5640a11eb210 <col:20, col:74> 'int' '||'
    |     | |-BinaryOperator 0x5640a11eb130 <col:20, col:38> 'int' '&&'
    |     | | |-ImplicitCastExpr 0x5640a11eb0e8 <col:20> 'int' <IntegralCast>
    |     | | | `-ImplicitCastExpr 0x5640a11eb0d0 <col:20> '_Bool' <LValueToRValue>
    |     | | |   `-DeclRefExpr 0x5640a11eb090 <col:20> '_Bool' lvalue Var 0x5640a11e1038 'a$w_buff0_used' '_Bool'
    |     | | `-ImplicitCastExpr 0x5640a11eb118 <col:38> 'int' <IntegralCast>
    |     | |   `-ImplicitCastExpr 0x5640a11eb100 <col:38> '_Bool' <LValueToRValue>
    |     | |     `-DeclRefExpr 0x5640a11eb0b0 <col:38> '_Bool' lvalue Var 0x5640a11e09a8 'a$r_buff0_thd0' '_Bool'
    |     | `-BinaryOperator 0x5640a11eb1f0 <col:56, col:74> 'int' '&&'
    |     |   |-ImplicitCastExpr 0x5640a11eb1a8 <col:56> 'int' <IntegralCast>
    |     |   | `-ImplicitCastExpr 0x5640a11eb190 <col:56> '_Bool' <LValueToRValue>
    |     |   |   `-DeclRefExpr 0x5640a11eb150 <col:56> '_Bool' lvalue Var 0x5640a11e1130 'a$w_buff1_used' '_Bool'
    |     |   `-ImplicitCastExpr 0x5640a11eb1d8 <col:74> 'int' <IntegralCast>
    |     |     `-ImplicitCastExpr 0x5640a11eb1c0 <col:74> '_Bool' <LValueToRValue>
    |     |       `-DeclRefExpr 0x5640a11eb170 <col:74> '_Bool' lvalue Var 0x5640a11e0c68 'a$r_buff1_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x5640a11eb2a8 <col:91, col:98> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x5640a11eb260 <col:91, col:98> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x5640a11eb230 <col:98> 'int' 0
    |     `-ImplicitCastExpr 0x5640a11eb2d8 <col:102> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x5640a11eb2c0 <col:102> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x5640a11eb288 <col:102> '_Bool' lvalue Var 0x5640a11e0c68 'a$r_buff1_thd0' '_Bool'
    |-CallExpr 0x5640a11eb390 <line:844:3, col:25> 'void'
    | `-ImplicitCastExpr 0x5640a11eb378 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x5640a11eb358 <col:3> 'void ()' Function 0x5640a1186f00 '__VERIFIER_atomic_end' 'void ()'
    |-CallExpr 0x5640a11eb3e8 <line:845:3, col:27> 'void'
    | `-ImplicitCastExpr 0x5640a11eb3d0 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x5640a11eb3b0 <col:3> 'void ()' Function 0x5640a1186e40 '__VERIFIER_atomic_begin' 'void ()'
    |-BinaryOperator 0x5640a11eb6b8 <line:846:3, col:131> '_Bool' '='
    | |-DeclRefExpr 0x5640a11eb408 <col:3> '_Bool' lvalue Var 0x5640a11e1220 'main$tmp_guard1' '_Bool'
    | `-ImplicitCastExpr 0x5640a11eb6a0 <col:21, col:131> '_Bool' <IntegralToBoolean>
    |   `-UnaryOperator 0x5640a11eb688 <col:21, col:131> 'int' prefix '!' cannot overflow
    |     `-ParenExpr 0x5640a11eb668 <col:22, col:131> 'int'
    |       `-BinaryOperator 0x5640a11eb648 <col:23, col:130> 'int' '&&'
    |         |-BinaryOperator 0x5640a11eb5b0 <col:23, col:102> 'int' '&&'
    |         | |-BinaryOperator 0x5640a11eb518 <col:23, col:74> 'int' '&&'
    |         | | |-BinaryOperator 0x5640a11eb480 <col:23, col:46> 'int' '=='
    |         | | | |-ImplicitCastExpr 0x5640a11eb468 <col:23> 'int' <LValueToRValue>
    |         | | | | `-DeclRefExpr 0x5640a11eb428 <col:23> 'int' lvalue Var 0x5640a11e0398 '__unbuffered_p0_EAX' 'int'
    |         | | | `-IntegerLiteral 0x5640a11eb448 <col:46> 'int' 0
    |         | | `-BinaryOperator 0x5640a11eb4f8 <col:51, col:74> 'int' '=='
    |         | |   |-ImplicitCastExpr 0x5640a11eb4e0 <col:51> 'int' <LValueToRValue>
    |         | |   | `-DeclRefExpr 0x5640a11eb4a0 <col:51> 'int' lvalue Var 0x5640a11e04b8 '__unbuffered_p1_EAX' 'int'
    |         | |   `-IntegerLiteral 0x5640a11eb4c0 <col:74> 'int' 0
    |         | `-BinaryOperator 0x5640a11eb590 <col:79, col:102> 'int' '=='
    |         |   |-ImplicitCastExpr 0x5640a11eb578 <col:79> 'int' <LValueToRValue>
    |         |   | `-DeclRefExpr 0x5640a11eb538 <col:79> 'int' lvalue Var 0x5640a11e05d8 '__unbuffered_p2_EAX' 'int'
    |         |   `-IntegerLiteral 0x5640a11eb558 <col:102> 'int' 0
    |         `-BinaryOperator 0x5640a11eb628 <col:107, col:130> 'int' '=='
    |           |-ImplicitCastExpr 0x5640a11eb610 <col:107> 'int' <LValueToRValue>
    |           | `-DeclRefExpr 0x5640a11eb5d0 <col:107> 'int' lvalue Var 0x5640a11e06f8 '__unbuffered_p3_EAX' 'int'
    |           `-IntegerLiteral 0x5640a11eb5f0 <col:130> 'int' 0
    |-CallExpr 0x5640a11eb710 <line:847:3, col:25> 'void'
    | `-ImplicitCastExpr 0x5640a11eb6f8 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x5640a11eb6d8 <col:3> 'void ()' Function 0x5640a1186f00 '__VERIFIER_atomic_end' 'void ()'
    |-CallExpr 0x5640a11eb788 <line:848:3, col:36> 'void'
    | |-ImplicitCastExpr 0x5640a11eb770 <col:3> 'void (*)(int)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x5640a11eb730 <col:3> 'void (int)' Function 0x5640a1186bc8 '__VERIFIER_assert' 'void (int)'
    | `-ImplicitCastExpr 0x5640a11eb7c8 <col:21> 'int' <IntegralCast>
    |   `-ImplicitCastExpr 0x5640a11eb7b0 <col:21> '_Bool' <LValueToRValue>
    |     `-DeclRefExpr 0x5640a11eb750 <col:21> '_Bool' lvalue Var 0x5640a11e1220 'main$tmp_guard1' '_Bool'
    `-ReturnStmt 0x5640a11eb800 <line:849:3, col:10>
      `-IntegerLiteral 0x5640a11eb7e0 <col:10> 'int' 0
