TranslationUnitDecl 0x5609c5df1e18 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x5609c5df26d8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x5609c5df23b0 '__int128'
|-TypedefDecl 0x5609c5df2748 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x5609c5df23d0 'unsigned __int128'
|-TypedefDecl 0x5609c5df2a50 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x5609c5df2820 'struct __NSConstantString_tag'
|   `-Record 0x5609c5df27a0 '__NSConstantString_tag'
|-TypedefDecl 0x5609c5df2af8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x5609c5df2ab0 'char *'
|   `-BuiltinType 0x5609c5df1eb0 'char'
|-TypedefDecl 0x5609c5e31650 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'struct __va_list_tag [1]'
| `-ConstantArrayType 0x5609c5df2d90 'struct __va_list_tag [1]' 1 
|   `-RecordType 0x5609c5df2bd0 'struct __va_list_tag'
|     `-Record 0x5609c5df2b50 '__va_list_tag'
|-FunctionDecl 0x5609c5e31770 <./split_9/safe019_power.opt_false-unreach-call.i:1:1, col:41> col:14 used __VERIFIER_nondet_bool '_Bool (void)' extern
|-FunctionDecl 0x5609c5e31940 <line:2:1, col:34> col:13 used __VERIFIER_assume 'void (int)' extern
| `-ParmVarDecl 0x5609c5e31870 <col:31> col:34 'int'
|-FunctionDecl 0x5609c5e31ab8 <line:3:1, col:45> col:15 used __VERIFIER_nondet_pointer 'void *(void)' extern
|-FunctionDecl 0x5609c5e31be0 <line:4:1, col:61> col:13 used __VERIFIER_error 'void () __attribute__((noreturn))' extern
|-FunctionDecl 0x5609c5e31d28 <line:5:1, col:99> col:6 used __VERIFIER_assert 'void (int)'
| |-ParmVarDecl 0x5609c5e31c98 <col:24, col:28> col:28 used expression 'int'
| `-CompoundStmt 0x5609c5e31f58 <col:40, col:99>
|   |-IfStmt 0x5609c5e31f28 <col:42, col:88>
|   | |-UnaryOperator 0x5609c5e31e08 <col:46, col:47> 'int' prefix '!' cannot overflow
|   | | `-ImplicitCastExpr 0x5609c5e31df0 <col:47> 'int' <LValueToRValue>
|   | |   `-DeclRefExpr 0x5609c5e31dd0 <col:47> 'int' lvalue ParmVar 0x5609c5e31c98 'expression' 'int'
|   | `-CompoundStmt 0x5609c5e31f10 <col:59, col:88>
|   |   `-LabelStmt 0x5609c5e31ef8 <col:61, col:85> 'ERROR'
|   |     `-CallExpr 0x5609c5e31e88 <col:68, col:85> 'void'
|   |       `-ImplicitCastExpr 0x5609c5e31e70 <col:68> 'void (*)() __attribute__((noreturn))' <FunctionToPointerDecay>
|   |         `-DeclRefExpr 0x5609c5e31e20 <col:68> 'void () __attribute__((noreturn))' Function 0x5609c5e31be0 '__VERIFIER_error' 'void () __attribute__((noreturn))'
|   |-NullStmt 0x5609c5e31f40 <col:89>
|   `-ReturnStmt 0x5609c5e31f48 <col:91>
|-FunctionDecl 0x5609c5e31fa0 <line:6:1, col:37> col:13 used __VERIFIER_atomic_begin 'void ()' extern
|-FunctionDecl 0x5609c5e32060 <line:7:1, col:35> col:13 used __VERIFIER_atomic_end 'void ()' extern
|-FunctionDecl 0x5609c5e323e0 <line:9:1, line:11:76> line:9:13 __assert_fail 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x5609c5e32118 <col:28, col:40> col:40 __assertion 'const char *'
| |-ParmVarDecl 0x5609c5e32198 <col:53, col:65> col:65 __file 'const char *'
| |-ParmVarDecl 0x5609c5e32218 <line:10:7, col:20> col:20 __line 'unsigned int'
| |-ParmVarDecl 0x5609c5e32298 <col:28, col:40> col:40 __function 'const char *'
| `-NoThrowAttr 0x5609c5e324a0 <line:11:22>
|-FunctionDecl 0x5609c5e58520 <line:12:1, line:14:76> line:12:13 __assert_perror_fail 'void (int, const char *, unsigned int, const char *) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x5609c5e32510 <col:35, col:39> col:39 __errnum 'int'
| |-ParmVarDecl 0x5609c5e32590 <col:49, col:61> col:61 __file 'const char *'
| |-ParmVarDecl 0x5609c5e58350 <line:13:7, col:20> col:20 __line 'unsigned int'
| |-ParmVarDecl 0x5609c5e583d0 <col:28, col:40> col:40 __function 'const char *'
| `-NoThrowAttr 0x5609c5e585e0 <line:14:22>
|-FunctionDecl 0x5609c5e58890 <line:15:1, line:16:76> line:15:13 __assert 'void (const char *, const char *, int) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x5609c5e58650 <col:23, col:35> col:35 __assertion 'const char *'
| |-ParmVarDecl 0x5609c5e586d0 <col:48, col:60> col:60 __file 'const char *'
| |-ParmVarDecl 0x5609c5e58750 <col:68, col:72> col:72 __line 'int'
| `-NoThrowAttr 0x5609c5e58948 <line:16:22>
|-TypedefDecl 0x5609c5e589b8 <line:18:1, col:23> col:23 __u_char 'unsigned char'
| `-BuiltinType 0x5609c5df1f70 'unsigned char'
|-TypedefDecl 0x5609c5e58a28 <line:19:1, col:28> col:28 __u_short 'unsigned short'
| `-BuiltinType 0x5609c5df1f90 'unsigned short'
|-TypedefDecl 0x5609c5e58a98 <line:20:1, col:22> col:22 __u_int 'unsigned int'
| `-BuiltinType 0x5609c5df1fb0 'unsigned int'
|-TypedefDecl 0x5609c5e58b08 <line:21:1, col:27> col:27 __u_long 'unsigned long'
| `-BuiltinType 0x5609c5df1fd0 'unsigned long'
|-TypedefDecl 0x5609c5e58b78 <line:22:1, col:21> col:21 __int8_t 'signed char'
| `-BuiltinType 0x5609c5df1ed0 'signed char'
|-TypedefDecl 0x5609c5e58be8 <line:23:1, col:23> col:23 __uint8_t 'unsigned char'
| `-BuiltinType 0x5609c5df1f70 'unsigned char'
|-TypedefDecl 0x5609c5e58c58 <line:24:1, col:26> col:26 __int16_t 'short'
| `-BuiltinType 0x5609c5df1ef0 'short'
|-TypedefDecl 0x5609c5e58cc8 <line:25:1, col:28> col:28 __uint16_t 'unsigned short'
| `-BuiltinType 0x5609c5df1f90 'unsigned short'
|-TypedefDecl 0x5609c5e58d38 <line:26:1, col:20> col:20 __int32_t 'int'
| `-BuiltinType 0x5609c5df1f10 'int'
|-TypedefDecl 0x5609c5e58da8 <line:27:1, col:22> col:22 __uint32_t 'unsigned int'
| `-BuiltinType 0x5609c5df1fb0 'unsigned int'
|-TypedefDecl 0x5609c5e58e18 <line:28:1, col:25> col:25 __int64_t 'long'
| `-BuiltinType 0x5609c5df1f30 'long'
|-TypedefDecl 0x5609c5e58e88 <line:29:1, col:27> col:27 referenced __uint64_t 'unsigned long'
| `-BuiltinType 0x5609c5df1fd0 'unsigned long'
|-TypedefDecl 0x5609c5e58ef8 <line:30:1, col:18> col:18 referenced __quad_t 'long'
| `-BuiltinType 0x5609c5df1f30 'long'
|-TypedefDecl 0x5609c5e58f68 <line:31:1, col:27> col:27 __u_quad_t 'unsigned long'
| `-BuiltinType 0x5609c5df1fd0 'unsigned long'
|-TypedefDecl 0x5609c5e58fd8 <line:32:1, col:27> col:27 __dev_t 'unsigned long'
| `-BuiltinType 0x5609c5df1fd0 'unsigned long'
|-TypedefDecl 0x5609c5e59048 <line:33:1, col:22> col:22 __uid_t 'unsigned int'
| `-BuiltinType 0x5609c5df1fb0 'unsigned int'
|-TypedefDecl 0x5609c5e590b8 <line:34:1, col:22> col:22 __gid_t 'unsigned int'
| `-BuiltinType 0x5609c5df1fb0 'unsigned int'
|-TypedefDecl 0x5609c5e59128 <line:35:1, col:27> col:27 __ino_t 'unsigned long'
| `-BuiltinType 0x5609c5df1fd0 'unsigned long'
|-TypedefDecl 0x5609c5e59198 <line:36:1, col:27> col:27 __ino64_t 'unsigned long'
| `-BuiltinType 0x5609c5df1fd0 'unsigned long'
|-TypedefDecl 0x5609c5e59208 <line:37:1, col:22> col:22 __mode_t 'unsigned int'
| `-BuiltinType 0x5609c5df1fb0 'unsigned int'
|-TypedefDecl 0x5609c5e59278 <line:38:1, col:27> col:27 __nlink_t 'unsigned long'
| `-BuiltinType 0x5609c5df1fd0 'unsigned long'
|-TypedefDecl 0x5609c5e592e8 <line:39:1, col:18> col:18 __off_t 'long'
| `-BuiltinType 0x5609c5df1f30 'long'
|-TypedefDecl 0x5609c5e59378 <line:40:1, col:18> col:18 referenced __off64_t 'long'
| `-BuiltinType 0x5609c5df1f30 'long'
|-TypedefDecl 0x5609c5e593e8 <line:41:1, col:13> col:13 referenced __pid_t 'int'
| `-BuiltinType 0x5609c5df1f10 'int'
|-RecordDecl 0x5609c5e59440 <line:42:9, col:32> col:9 struct definition
| `-FieldDecl 0x5609c5e59588 <col:18, col:29> col:22 __val 'int [2]'
|-TypedefDecl 0x5609c5e59640 <col:1, col:34> col:34 __fsid_t 'struct __fsid_t':'__fsid_t'
| `-ElaboratedType 0x5609c5e595e0 'struct __fsid_t' sugar
|   `-RecordType 0x5609c5e594c0 '__fsid_t'
|     `-Record 0x5609c5e59440 ''
|-TypedefDecl 0x5609c5e596c8 <line:43:1, col:18> col:18 referenced __clock_t 'long'
| `-BuiltinType 0x5609c5df1f30 'long'
|-TypedefDecl 0x5609c5e59738 <line:44:1, col:27> col:27 __rlim_t 'unsigned long'
| `-BuiltinType 0x5609c5df1fd0 'unsigned long'
|-TypedefDecl 0x5609c5e597a8 <line:45:1, col:27> col:27 __rlim64_t 'unsigned long'
| `-BuiltinType 0x5609c5df1fd0 'unsigned long'
|-TypedefDecl 0x5609c5e59818 <line:46:1, col:22> col:22 __id_t 'unsigned int'
| `-BuiltinType 0x5609c5df1fb0 'unsigned int'
|-TypedefDecl 0x5609c5e59888 <line:47:1, col:18> col:18 referenced __time_t 'long'
| `-BuiltinType 0x5609c5df1f30 'long'
|-TypedefDecl 0x5609c5e598f8 <line:48:1, col:22> col:22 __useconds_t 'unsigned int'
| `-BuiltinType 0x5609c5df1fb0 'unsigned int'
|-TypedefDecl 0x5609c5e59968 <line:49:1, col:18> col:18 __suseconds_t 'long'
| `-BuiltinType 0x5609c5df1f30 'long'
|-TypedefDecl 0x5609c5e599d8 <line:50:1, col:13> col:13 __daddr_t 'int'
| `-BuiltinType 0x5609c5df1f10 'int'
|-TypedefDecl 0x5609c5e59a48 <line:51:1, col:13> col:13 __key_t 'int'
| `-BuiltinType 0x5609c5df1f10 'int'
|-TypedefDecl 0x5609c5e59ab8 <line:52:1, col:13> col:13 referenced __clockid_t 'int'
| `-BuiltinType 0x5609c5df1f10 'int'
|-TypedefDecl 0x5609c5e59b28 <line:53:1, col:16> col:16 referenced __timer_t 'void *'
| `-PointerType 0x5609c5df2630 'void *'
|   `-BuiltinType 0x5609c5df1e70 'void'
|-TypedefDecl 0x5609c5e59b98 <line:54:1, col:18> col:18 __blksize_t 'long'
| `-BuiltinType 0x5609c5df1f30 'long'
|-TypedefDecl 0x5609c5e59c08 <line:55:1, col:18> col:18 __blkcnt_t 'long'
| `-BuiltinType 0x5609c5df1f30 'long'
|-TypedefDecl 0x5609c5e59c78 <line:56:1, col:18> col:18 __blkcnt64_t 'long'
| `-BuiltinType 0x5609c5df1f30 'long'
|-TypedefDecl 0x5609c5e59ce8 <line:57:1, col:27> col:27 __fsblkcnt_t 'unsigned long'
| `-BuiltinType 0x5609c5df1fd0 'unsigned long'
|-TypedefDecl 0x5609c5e59d58 <line:58:1, col:27> col:27 __fsblkcnt64_t 'unsigned long'
| `-BuiltinType 0x5609c5df1fd0 'unsigned long'
|-TypedefDecl 0x5609c5e59dc8 <line:59:1, col:27> col:27 __fsfilcnt_t 'unsigned long'
| `-BuiltinType 0x5609c5df1fd0 'unsigned long'
|-TypedefDecl 0x5609c5e59e38 <line:60:1, col:27> col:27 __fsfilcnt64_t 'unsigned long'
| `-BuiltinType 0x5609c5df1fd0 'unsigned long'
|-TypedefDecl 0x5609c5e59ea8 <line:61:1, col:18> col:18 __fsword_t 'long'
| `-BuiltinType 0x5609c5df1f30 'long'
|-TypedefDecl 0x5609c5e59f18 <line:62:1, col:18> col:18 __ssize_t 'long'
| `-BuiltinType 0x5609c5df1f30 'long'
|-TypedefDecl 0x5609c5e59f88 <line:63:1, col:18> col:18 referenced __syscall_slong_t 'long'
| `-BuiltinType 0x5609c5df1f30 'long'
|-TypedefDecl 0x5609c5e59ff8 <line:64:1, col:27> col:27 __syscall_ulong_t 'unsigned long'
| `-BuiltinType 0x5609c5df1fd0 'unsigned long'
|-TypedefDecl 0x5609c5e5a088 <line:65:1, col:19> col:19 __loff_t '__off64_t':'long'
| `-TypedefType 0x5609c5e5a050 '__off64_t' sugar
|   |-Typedef 0x5609c5e59378 '__off64_t'
|   `-BuiltinType 0x5609c5df1f30 'long'
|-TypedefDecl 0x5609c5e5a180 <line:66:1, col:19> col:19 __qaddr_t '__quad_t *'
| `-PointerType 0x5609c5e5a140 '__quad_t *'
|   `-TypedefType 0x5609c5e5a0e0 '__quad_t' sugar
|     |-Typedef 0x5609c5e58ef8 '__quad_t'
|     `-BuiltinType 0x5609c5df1f30 'long'
|-TypedefDecl 0x5609c5e5a1f0 <line:67:1, col:15> col:15 __caddr_t 'char *'
| `-PointerType 0x5609c5df2ab0 'char *'
|   `-BuiltinType 0x5609c5df1eb0 'char'
|-TypedefDecl 0x5609c5e5a260 <line:68:1, col:18> col:18 __intptr_t 'long'
| `-BuiltinType 0x5609c5df1f30 'long'
|-TypedefDecl 0x5609c5e5a2d0 <line:69:1, col:22> col:22 __socklen_t 'unsigned int'
| `-BuiltinType 0x5609c5df1fb0 'unsigned int'
|-FunctionDecl 0x5609c5e5b458 <line:70:1, line:74:1> line:71:1 __bswap_32 'unsigned int (unsigned int)' static inline
| |-ParmVarDecl 0x5609c5e5b380 <col:13, col:26> col:26 used __bsx 'unsigned int'
| `-CompoundStmt 0x5609c5e5b768 <line:72:1, line:74:1>
|   `-ReturnStmt 0x5609c5e5b758 <line:73:3, col:34>
|     `-CallExpr 0x5609c5e5b718 <col:10, col:34> 'unsigned int'
|       |-ImplicitCastExpr 0x5609c5e5b700 <col:10> 'unsigned int (*)(unsigned int)' <BuiltinFnToFnPtr>
|       | `-DeclRefExpr 0x5609c5e5b690 <col:10> '<builtin fn type>' Function 0x5609c5e5b500 '__builtin_bswap32' 'unsigned int (unsigned int)'
|       `-ImplicitCastExpr 0x5609c5e5b740 <col:29> 'unsigned int' <LValueToRValue>
|         `-DeclRefExpr 0x5609c5e5b6b0 <col:29> 'unsigned int' lvalue ParmVar 0x5609c5e5b380 '__bsx' 'unsigned int'
|-FunctionDecl 0x5609c5e5b500 <col:10> col:10 implicit used __builtin_bswap32 'unsigned int (unsigned int)' extern
| |-ParmVarDecl 0x5609c5e5b5a0 <<invalid sloc>> <invalid sloc> 'unsigned int'
| |-NoThrowAttr 0x5609c5e5b610 <col:10> Implicit
| `-ConstAttr 0x5609c5e5b668 <col:10> Implicit
|-FunctionDecl 0x5609c5e5b8c0 <line:75:1, line:79:1> line:76:1 __bswap_64 '__uint64_t (__uint64_t)' static inline
| |-ParmVarDecl 0x5609c5e5b7b8 <col:13, col:24> col:24 used __bsx '__uint64_t':'unsigned long'
| `-CompoundStmt 0x5609c5e5bbd8 <line:77:1, line:79:1>
|   `-ReturnStmt 0x5609c5e5bbc8 <line:78:3, col:34>
|     `-CallExpr 0x5609c5e5bb88 <col:10, col:34> 'unsigned long'
|       |-ImplicitCastExpr 0x5609c5e5bb70 <col:10> 'unsigned long (*)(unsigned long)' <BuiltinFnToFnPtr>
|       | `-DeclRefExpr 0x5609c5e5baf8 <col:10> '<builtin fn type>' Function 0x5609c5e5b968 '__builtin_bswap64' 'unsigned long (unsigned long)'
|       `-ImplicitCastExpr 0x5609c5e5bbb0 <col:29> '__uint64_t':'unsigned long' <LValueToRValue>
|         `-DeclRefExpr 0x5609c5e5bb18 <col:29> '__uint64_t':'unsigned long' lvalue ParmVar 0x5609c5e5b7b8 '__bsx' '__uint64_t':'unsigned long'
|-FunctionDecl 0x5609c5e5b968 <col:10> col:10 implicit used __builtin_bswap64 'unsigned long (unsigned long)' extern
| |-ParmVarDecl 0x5609c5e5ba08 <<invalid sloc>> <invalid sloc> 'unsigned long'
| |-NoThrowAttr 0x5609c5e5ba78 <col:10> Implicit
| `-ConstAttr 0x5609c5e5bad0 <col:10> Implicit
|-TypedefDecl 0x5609c5e5bc08 <line:80:1, col:27> col:27 referenced size_t 'unsigned long'
| `-BuiltinType 0x5609c5df1fd0 'unsigned long'
|-TypedefDecl 0x5609c5e5bc98 <line:82:1, col:18> col:18 referenced time_t '__time_t':'long'
| `-TypedefType 0x5609c5e5bc60 '__time_t' sugar
|   |-Typedef 0x5609c5e59888 '__time_t'
|   `-BuiltinType 0x5609c5df1f30 'long'
|-RecordDecl 0x5609c5e5bcf0 <line:85:1, line:89:3> line:85:8 struct timespec definition
| |-FieldDecl 0x5609c5e5bda8 <line:87:5, col:14> col:14 tv_sec '__time_t':'long'
| `-FieldDecl 0x5609c5e5be38 <line:88:5, col:23> col:23 tv_nsec '__syscall_slong_t':'long'
|-TypedefDecl 0x5609c5e5bec8 <line:90:1, col:17> col:17 referenced pid_t '__pid_t':'int'
| `-TypedefType 0x5609c5e5be90 '__pid_t' sugar
|   |-Typedef 0x5609c5e593e8 '__pid_t'
|   `-BuiltinType 0x5609c5df1f10 'int'
|-RecordDecl 0x5609c5e5bf20 <line:91:1, line:94:3> line:91:8 struct sched_param definition
| `-FieldDecl 0x5609c5e5bfe0 <line:93:5, col:9> col:9 __sched_priority 'int'
|-RecordDecl 0x5609c5e5c030 <line:97:1, line:100:3> line:97:8 struct __sched_param definition
| `-FieldDecl 0x5609c5e5c0f0 <line:99:5, col:9> col:9 __sched_priority 'int'
|-TypedefDecl 0x5609c5e5c158 <line:101:1, col:27> col:27 referenced __cpu_mask 'unsigned long'
| `-BuiltinType 0x5609c5df1fd0 'unsigned long'
|-RecordDecl 0x5609c5e5c1b0 <line:102:9, line:105:1> line:102:9 struct definition
| `-FieldDecl 0x5609c5e5d480 <line:104:3, col:53> col:14 __bits '__cpu_mask [64]'
|-TypedefDecl 0x5609c5e5d530 <line:102:1, line:105:3> col:3 referenced cpu_set_t 'struct cpu_set_t':'cpu_set_t'
| `-ElaboratedType 0x5609c5e5d4d0 'struct cpu_set_t' sugar
|   `-RecordType 0x5609c5e5c230 'cpu_set_t'
|     `-Record 0x5609c5e5c1b0 ''
|-FunctionDecl 0x5609c5e5d808 <line:107:1, line:108:42> line:107:12 __sched_cpucount 'int (size_t, const cpu_set_t *)' extern
| |-ParmVarDecl 0x5609c5e5d5d8 <col:30, col:37> col:37 __setsize 'size_t':'unsigned long'
| |-ParmVarDecl 0x5609c5e5d6e0 <col:48, col:65> col:65 __setp 'const cpu_set_t *'
| `-NoThrowAttr 0x5609c5e5d8b8 <line:108:19>
|-FunctionDecl 0x5609c5e5da90 <line:109:1, col:92> col:19 __sched_cpualloc 'cpu_set_t *(size_t)' extern
| |-ParmVarDecl 0x5609c5e5d920 <col:37, col:44> col:44 __count 'size_t':'unsigned long'
| `-NoThrowAttr 0x5609c5e5db38 <col:69>
|-FunctionDecl 0x5609c5e5dcb0 <line:110:1, col:87> col:13 __sched_cpufree 'void (cpu_set_t *)' extern
| |-ParmVarDecl 0x5609c5e5dba0 <col:30, col:41> col:41 __set 'cpu_set_t *'
| `-NoThrowAttr 0x5609c5e5dd58 <col:64>
|-FunctionDecl 0x5609c5e5e018 <line:113:1, line:114:45> line:113:12 sched_setparam 'int (__pid_t, const struct sched_param *)' extern
| |-ParmVarDecl 0x5609c5e5ddc0 <col:28, col:36> col:36 __pid '__pid_t':'int'
| |-ParmVarDecl 0x5609c5e5def8 <col:43, col:69> col:69 __param 'const struct sched_param *'
| `-NoThrowAttr 0x5609c5e5e0c8 <line:114:22>
|-FunctionDecl 0x5609c5e5e3b0 <line:115:1, col:111> col:12 sched_getparam 'int (__pid_t, struct sched_param *)' extern
| |-ParmVarDecl 0x5609c5e5e130 <col:28, col:36> col:36 __pid '__pid_t':'int'
| |-ParmVarDecl 0x5609c5e5e228 <col:43, col:63> col:63 __param 'struct sched_param *'
| `-NoThrowAttr 0x5609c5e5e460 <col:88>
|-FunctionDecl 0x5609c5e5e718 <line:116:1, line:117:85> line:116:12 sched_setscheduler 'int (__pid_t, int, const struct sched_param *)' extern
| |-ParmVarDecl 0x5609c5e5e4c8 <col:32, col:40> col:40 __pid '__pid_t':'int'
| |-ParmVarDecl 0x5609c5e5e548 <col:47, col:51> col:51 __policy 'int'
| |-ParmVarDecl 0x5609c5e5e5d8 <line:117:11, col:37> col:37 __param 'const struct sched_param *'
| `-NoThrowAttr 0x5609c5e5e7d0 <col:62>
|-FunctionDecl 0x5609c5e5e948 <line:118:1, col:86> col:12 sched_getscheduler 'int (__pid_t)' extern
| |-ParmVarDecl 0x5609c5e5e838 <col:32, col:40> col:40 __pid '__pid_t':'int'
| `-NoThrowAttr 0x5609c5e5e9f0 <col:63>
|-FunctionDecl 0x5609c5e5eb18 <line:119:1, col:70> col:12 sched_yield 'int (void)' extern
| `-NoThrowAttr 0x5609c5e5ebb8 <col:47>
|-FunctionDecl 0x5609c5e5ecc0 <line:120:1, col:92> col:12 sched_get_priority_max 'int (int)' extern
| |-ParmVarDecl 0x5609c5e5ec28 <col:36, col:40> col:40 __algorithm 'int'
| `-NoThrowAttr 0x5609c5e5ed68 <col:69>
|-FunctionDecl 0x5609c5e5ee70 <line:121:1, col:92> col:12 sched_get_priority_min 'int (int)' extern
| |-ParmVarDecl 0x5609c5e5edd8 <col:36, col:40> col:40 __algorithm 'int'
| `-NoThrowAttr 0x5609c5e5ef18 <col:69>
|-FunctionDecl 0x5609c5e5f1d8 <line:122:1, col:111> col:12 sched_rr_get_interval 'int (__pid_t, struct timespec *)' extern
| |-ParmVarDecl 0x5609c5e5ef80 <col:35, col:43> col:43 __pid '__pid_t':'int'
| |-ParmVarDecl 0x5609c5e5f0b8 <col:50, col:67> col:67 __t 'struct timespec *'
| `-NoThrowAttr 0x5609c5e5f288 <col:88>
|-TypedefDecl 0x5609c5e5f318 <line:126:1, col:19> col:19 referenced clock_t '__clock_t':'long'
| `-TypedefType 0x5609c5e5f2e0 '__clock_t' sugar
|   |-Typedef 0x5609c5e596c8 '__clock_t'
|   `-BuiltinType 0x5609c5df1f30 'long'
|-TypedefDecl 0x5609c5e5f3c0 <line:129:1, col:21> col:21 referenced clockid_t '__clockid_t':'int'
| `-TypedefType 0x5609c5e5f370 '__clockid_t' sugar
|   |-Typedef 0x5609c5e59ab8 '__clockid_t'
|   `-BuiltinType 0x5609c5df1f10 'int'
|-TypedefDecl 0x5609c5e5f458 <line:130:1, col:19> col:19 referenced timer_t '__timer_t':'void *'
| `-TypedefType 0x5609c5e5f420 '__timer_t' sugar
|   |-Typedef 0x5609c5e59b28 '__timer_t'
|   `-PointerType 0x5609c5df2630 'void *'
|     `-BuiltinType 0x5609c5df1e70 'void'
|-RecordDecl 0x5609c5e5f4b0 <line:132:1, line:145:1> line:132:8 struct tm definition
| |-FieldDecl 0x5609c5e5f570 <line:134:3, col:7> col:7 tm_sec 'int'
| |-FieldDecl 0x5609c5e5f5d8 <line:135:3, col:7> col:7 tm_min 'int'
| |-FieldDecl 0x5609c5e5f640 <line:136:3, col:7> col:7 tm_hour 'int'
| |-FieldDecl 0x5609c5e5f6a8 <line:137:3, col:7> col:7 tm_mday 'int'
| |-FieldDecl 0x5609c5e5f710 <line:138:3, col:7> col:7 tm_mon 'int'
| |-FieldDecl 0x5609c5e5f778 <line:139:3, col:7> col:7 tm_year 'int'
| |-FieldDecl 0x5609c5e5f7e0 <line:140:3, col:7> col:7 tm_wday 'int'
| |-FieldDecl 0x5609c5e5f848 <line:141:3, col:7> col:7 tm_yday 'int'
| |-FieldDecl 0x5609c5e5f8b0 <line:142:3, col:7> col:7 tm_isdst 'int'
| |-FieldDecl 0x5609c5e5f918 <line:143:3, col:12> col:12 tm_gmtoff 'long'
| `-FieldDecl 0x5609c5e5f980 <line:144:3, col:15> col:15 tm_zone 'const char *'
|-RecordDecl 0x5609c5e5f9d0 <line:148:1, line:152:3> line:148:8 struct itimerspec definition
| |-FieldDecl 0x5609c5e5fa98 <line:150:5, col:21> col:21 it_interval 'struct timespec':'struct timespec'
| `-FieldDecl 0x5609c5e5fb08 <line:151:5, col:21> col:21 it_value 'struct timespec':'struct timespec'
|-RecordDecl 0x5609c5e5fbb0 <line:153:1, col:8> col:8 struct sigevent
|-FunctionDecl 0x5609c5e5fd80 <line:155:1, col:68> col:16 clock 'clock_t (void)' extern
| `-NoThrowAttr 0x5609c5e5fe20 <col:45>
|-FunctionDecl 0x5609c5e60000 <line:156:1, col:77> col:15 time 'time_t (time_t *)' extern
| |-ParmVarDecl 0x5609c5e5fef0 <col:21, col:29> col:29 __timer 'time_t *'
| `-NoThrowAttr 0x5609c5e600a8 <col:54>
|-FunctionDecl 0x5609c5e602a8 <line:157:1, line:158:73> line:157:15 difftime 'double (time_t, time_t)' extern
| |-ParmVarDecl 0x5609c5e60110 <col:25, col:32> col:32 __time1 'time_t':'long'
| |-ParmVarDecl 0x5609c5e60188 <col:41, col:48> col:48 __time0 'time_t':'long'
| |-NoThrowAttr 0x5609c5e60358 <line:158:22>
| `-ConstAttr 0x5609c5e60ff0 <col:63>
|-FunctionDecl 0x5609c5e611f0 <line:159:1, col:79> col:15 mktime 'time_t (struct tm *)' extern
| |-ParmVarDecl 0x5609c5e610e8 <col:23, col:34> col:34 __tp 'struct tm *'
| `-NoThrowAttr 0x5609c5e61298 <col:56>
|-FunctionDecl 0x5609c5e61640 <line:160:1, line:162:77> line:160:15 strftime 'size_t (char *restrict, size_t, const char *restrict, const struct tm *restrict)' extern
| |-ParmVarDecl 0x5609c5e61308 <col:25, col:42> col:42 __s 'char *restrict'
| |-ParmVarDecl 0x5609c5e61380 <col:47, col:54> col:54 __maxsize 'size_t':'unsigned long'
| |-ParmVarDecl 0x5609c5e61400 <line:161:4, col:27> col:27 __format 'const char *restrict'
| |-ParmVarDecl 0x5609c5e614f8 <line:162:4, col:32> col:32 __tp 'const struct tm *restrict'
| `-NoThrowAttr 0x5609c5e61700 <col:54>
|-RecordDecl 0x5609c5e61758 <line:164:9, line:171:1> line:164:16 struct __locale_struct definition
| |-RecordDecl 0x5609c5e61808 parent 0x5609c5df1e18 <line:166:3, col:10> col:10 struct __locale_data
| |-FieldDecl 0x5609c5e61a68 <col:3, col:37> col:25 __locales 'struct __locale_data *[13]'
| |-FieldDecl 0x5609c5e61b08 <line:167:3, col:29> col:29 __ctype_b 'const unsigned short *'
| |-FieldDecl 0x5609c5e61b70 <line:168:3, col:14> col:14 __ctype_tolower 'const int *'
| |-FieldDecl 0x5609c5e61bd8 <line:169:3, col:14> col:14 __ctype_toupper 'const int *'
| `-FieldDecl 0x5609c5e61cc8 <line:170:3, col:25> col:15 __names 'const char *[13]'
|-TypedefDecl 0x5609c5e61de8 <line:164:1, line:171:4> col:4 referenced __locale_t 'struct __locale_struct *'
| `-PointerType 0x5609c5e61d90 'struct __locale_struct *'
|   `-ElaboratedType 0x5609c5e61d20 'struct __locale_struct' sugar
|     `-RecordType 0x5609c5e617e0 'struct __locale_struct'
|       `-Record 0x5609c5e61758 '__locale_struct'
|-TypedefDecl 0x5609c5e61e98 <line:172:1, col:20> col:20 locale_t '__locale_t':'struct __locale_struct *'
| `-TypedefType 0x5609c5e61e60 '__locale_t' sugar
|   |-Typedef 0x5609c5e61de8 '__locale_t'
|   `-PointerType 0x5609c5e61d90 'struct __locale_struct *'
|     `-ElaboratedType 0x5609c5e61d20 'struct __locale_struct' sugar
|       `-RecordType 0x5609c5e617e0 'struct __locale_struct'
|         `-Record 0x5609c5e61758 '__locale_struct'
|-FunctionDecl 0x5609c5e632a0 <line:173:1, line:176:63> line:173:15 strftime_l 'size_t (char *restrict, size_t, const char *restrict, const struct tm *restrict, __locale_t)' extern
| |-ParmVarDecl 0x5609c5e61f08 <col:27, col:44> col:44 __s 'char *restrict'
| |-ParmVarDecl 0x5609c5e61f80 <col:49, col:56> col:56 __maxsize 'size_t':'unsigned long'
| |-ParmVarDecl 0x5609c5e63028 <line:174:6, col:29> col:29 __format 'const char *restrict'
| |-ParmVarDecl 0x5609c5e630b8 <line:175:6, col:34> col:34 __tp 'const struct tm *restrict'
| |-ParmVarDecl 0x5609c5e63130 <line:176:6, col:17> col:17 __loc '__locale_t':'struct __locale_struct *'
| `-NoThrowAttr 0x5609c5e63368 <col:40>
|-FunctionDecl 0x5609c5e63558 <line:178:1, col:89> col:19 gmtime 'struct tm *(const time_t *)' extern
| |-ParmVarDecl 0x5609c5e63430 <col:27, col:41> col:41 __timer 'const time_t *'
| `-NoThrowAttr 0x5609c5e63600 <col:66>
|-FunctionDecl 0x5609c5e63710 <line:179:1, col:92> col:19 localtime 'struct tm *(const time_t *)' extern
| |-ParmVarDecl 0x5609c5e63668 <col:30, col:44> col:44 __timer 'const time_t *'
| `-NoThrowAttr 0x5609c5e637b8 <col:69>
|-FunctionDecl 0x5609c5e639e8 <line:181:1, line:182:75> line:181:19 gmtime_r 'struct tm *(const time_t *restrict, struct tm *restrict)' extern
| |-ParmVarDecl 0x5609c5e63820 <col:29, col:54> col:54 __timer 'const time_t *restrict'
| |-ParmVarDecl 0x5609c5e638b0 <line:182:8, col:30> col:30 __tp 'struct tm *restrict'
| `-NoThrowAttr 0x5609c5e63a98 <col:52>
|-FunctionDecl 0x5609c5e63c40 <line:183:1, line:184:78> line:183:19 localtime_r 'struct tm *(const time_t *restrict, struct tm *restrict)' extern
| |-ParmVarDecl 0x5609c5e63b00 <col:32, col:57> col:57 __timer 'const time_t *restrict'
| |-ParmVarDecl 0x5609c5e63b90 <line:184:11, col:33> col:33 __tp 'struct tm *restrict'
| `-NoThrowAttr 0x5609c5e63cf0 <col:55>
|-FunctionDecl 0x5609c5e63e88 <line:186:1, col:85> col:14 asctime 'char *(const struct tm *)' extern
| |-ParmVarDecl 0x5609c5e63d70 <col:23, col:40> col:40 __tp 'const struct tm *'
| `-NoThrowAttr 0x5609c5e63f30 <col:62>
|-FunctionDecl 0x5609c5e64168 <line:187:1, col:83> col:14 ctime 'char *(const time_t *)' extern
| |-ParmVarDecl 0x5609c5e63f98 <col:21, col:35> col:35 __timer 'const time_t *'
| `-NoThrowAttr 0x5609c5e64210 <col:60>
|-FunctionDecl 0x5609c5e64438 <line:189:1, line:190:67> line:189:14 asctime_r 'char *(const struct tm *restrict, char *restrict)' extern
| |-ParmVarDecl 0x5609c5e64290 <col:25, col:53> col:53 __tp 'const struct tm *restrict'
| |-ParmVarDecl 0x5609c5e64310 <line:190:4, col:21> col:21 __buf 'char *restrict'
| `-NoThrowAttr 0x5609c5e644e8 <col:44>
|-FunctionDecl 0x5609c5e646f8 <line:191:1, line:192:72> line:191:14 ctime_r 'char *(const time_t *restrict, char *restrict)' extern
| |-ParmVarDecl 0x5609c5e64550 <col:23, col:48> col:48 __timer 'const time_t *restrict'
| |-ParmVarDecl 0x5609c5e645d0 <line:192:9, col:26> col:26 __buf 'char *restrict'
| `-NoThrowAttr 0x5609c5e647a8 <col:49>
|-VarDecl 0x5609c5e648a8 <line:193:1, col:24> col:14 __tzname 'char *[2]' extern
|-VarDecl 0x5609c5e64928 <line:194:1, col:12> col:12 __daylight 'int' extern
|-VarDecl 0x5609c5e649a8 <line:195:1, col:17> col:17 __timezone 'long' extern
|-VarDecl 0x5609c5e64a70 <line:196:1, col:22> col:14 tzname 'char *[2]' extern
|-FunctionDecl 0x5609c5e64ba0 <line:197:1, col:65> col:13 tzset 'void (void)' extern
| `-NoThrowAttr 0x5609c5e64c40 <col:42>
|-VarDecl 0x5609c5e64cb0 <line:198:1, col:12> col:12 daylight 'int' extern
|-VarDecl 0x5609c5e64d30 <line:199:1, col:17> col:17 timezone 'long' extern
|-FunctionDecl 0x5609c5e64eb8 <line:200:1, col:80> col:12 stime 'int (const time_t *)' extern
| |-ParmVarDecl 0x5609c5e64da8 <col:19, col:33> col:33 __when 'const time_t *'
| `-NoThrowAttr 0x5609c5e64f60 <col:57>
|-FunctionDecl 0x5609c5e650d0 <line:201:1, col:79> col:15 timegm 'time_t (struct tm *)' extern
| |-ParmVarDecl 0x5609c5e64fe0 <col:23, col:34> col:34 __tp 'struct tm *'
| `-NoThrowAttr 0x5609c5e65178 <col:56>
|-FunctionDecl 0x5609c5e65288 <line:202:1, col:82> col:15 timelocal 'time_t (struct tm *)' extern
| |-ParmVarDecl 0x5609c5e651f8 <col:26, col:37> col:37 __tp 'struct tm *'
| `-NoThrowAttr 0x5609c5e65330 <col:59>
|-FunctionDecl 0x5609c5e65438 <line:203:1, col:99> col:12 dysize 'int (int)' extern
| |-ParmVarDecl 0x5609c5e653a0 <col:20, col:24> col:24 __year 'int'
| |-NoThrowAttr 0x5609c5e654e0 <col:48>
| `-ConstAttr 0x5609c5e65538 <col:89>
|-FunctionDecl 0x5609c5e65798 <line:204:1, line:205:37> line:204:12 nanosleep 'int (const struct timespec *, struct timespec *)' extern
| |-ParmVarDecl 0x5609c5e655e8 <col:23, col:46> col:46 __requested_time 'const struct timespec *'
| `-ParmVarDecl 0x5609c5e65678 <line:205:9, col:26> col:26 __remaining 'struct timespec *'
|-FunctionDecl 0x5609c5e659f8 <line:206:1, col:111> col:12 clock_getres 'int (clockid_t, struct timespec *)' extern
| |-ParmVarDecl 0x5609c5e65888 <col:26, col:36> col:36 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x5609c5e65918 <col:48, col:65> col:65 __res 'struct timespec *'
| `-NoThrowAttr 0x5609c5e65aa8 <col:88>
|-FunctionDecl 0x5609c5e65c40 <line:207:1, col:111> col:12 clock_gettime 'int (clockid_t, struct timespec *)' extern
| |-ParmVarDecl 0x5609c5e65b10 <col:27, col:37> col:37 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x5609c5e65ba0 <col:49, col:66> col:66 __tp 'struct timespec *'
| `-NoThrowAttr 0x5609c5e65cf0 <col:88>
|-FunctionDecl 0x5609c5e65f08 <line:208:1, line:209:45> line:208:12 clock_settime 'int (clockid_t, const struct timespec *)' extern
| |-ParmVarDecl 0x5609c5e65d58 <col:27, col:37> col:37 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x5609c5e65de8 <col:49, col:72> col:72 __tp 'const struct timespec *'
| `-NoThrowAttr 0x5609c5e65fb8 <line:209:22>
|-FunctionDecl 0x5609c5e66358 <line:210:1, line:212:30> line:210:12 clock_nanosleep 'int (clockid_t, int, const struct timespec *, struct timespec *)' extern
| |-ParmVarDecl 0x5609c5e66020 <col:29, col:39> col:39 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x5609c5e660e0 <col:51, col:55> col:55 __flags 'int'
| |-ParmVarDecl 0x5609c5e66170 <line:211:8, col:31> col:31 __req 'const struct timespec *'
| `-ParmVarDecl 0x5609c5e66200 <line:212:8, col:25> col:25 __rem 'struct timespec *'
|-FunctionDecl 0x5609c5e66658 <line:213:1, col:108> col:12 clock_getcpuclockid 'int (pid_t, clockid_t *)' extern
| |-ParmVarDecl 0x5609c5e66458 <col:33, col:39> col:39 __pid 'pid_t':'int'
| |-ParmVarDecl 0x5609c5e66530 <col:46, col:57> col:57 __clock_id 'clockid_t *'
| `-NoThrowAttr 0x5609c5e66708 <col:85>
|-FunctionDecl 0x5609c5e66af8 <line:214:1, line:216:75> line:214:12 timer_create 'int (clockid_t, struct sigevent *restrict, timer_t *restrict)' extern
| |-ParmVarDecl 0x5609c5e66770 <col:26, col:36> col:36 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x5609c5e668a8 <line:215:5, col:33> col:33 __evp 'struct sigevent *restrict'
| |-ParmVarDecl 0x5609c5e669b0 <line:216:5, col:25> col:25 __timerid 'timer_t *restrict'
| `-NoThrowAttr 0x5609c5e66bb0 <col:52>
|-FunctionDecl 0x5609c5e66d28 <line:217:1, col:84> col:12 timer_delete 'int (timer_t)' extern
| |-ParmVarDecl 0x5609c5e66c18 <col:26, col:34> col:34 __timerid 'timer_t':'void *'
| `-NoThrowAttr 0x5609c5e66dd0 <col:61>
|-FunctionDecl 0x5609c5e67248 <line:218:1, line:220:85> line:218:12 timer_settime 'int (timer_t, int, const struct itimerspec *restrict, struct itimerspec *restrict)' extern
| |-ParmVarDecl 0x5609c5e66e38 <col:27, col:35> col:35 __timerid 'timer_t':'void *'
| |-ParmVarDecl 0x5609c5e66eb8 <col:46, col:50> col:50 __flags 'int'
| |-ParmVarDecl 0x5609c5e66fe8 <line:219:6, col:42> col:42 __value 'const struct itimerspec *restrict'
| |-ParmVarDecl 0x5609c5e670f0 <line:220:6, col:36> col:36 __ovalue 'struct itimerspec *restrict'
| `-NoThrowAttr 0x5609c5e67308 <col:62>
|-FunctionDecl 0x5609c5e67528 <line:221:1, line:222:45> line:221:12 timer_gettime 'int (timer_t, struct itimerspec *)' extern
| |-ParmVarDecl 0x5609c5e67370 <col:27, col:35> col:35 __timerid 'timer_t':'void *'
| |-ParmVarDecl 0x5609c5e67400 <col:46, col:65> col:65 __value 'struct itimerspec *'
| `-NoThrowAttr 0x5609c5e675d8 <line:222:22>
|-FunctionDecl 0x5609c5e676d8 <line:223:1, col:88> col:12 timer_getoverrun 'int (timer_t)' extern
| |-ParmVarDecl 0x5609c5e67640 <col:30, col:38> col:38 __timerid 'timer_t':'void *'
| `-NoThrowAttr 0x5609c5e67780 <col:65>
|-TypedefDecl 0x5609c5e677f0 <line:225:1, col:27> col:27 referenced pthread_t 'unsigned long'
| `-BuiltinType 0x5609c5df1fd0 'unsigned long'
|-RecordDecl 0x5609c5e67848 <line:226:1, line:230:1> line:226:7 union pthread_attr_t definition
| |-FieldDecl 0x5609c5e67990 <line:228:3, col:17> col:8 __size 'char [56]'
| `-FieldDecl 0x5609c5e679f8 <line:229:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x5609c5e67aa8 <line:231:1, col:30> col:30 referenced pthread_attr_t 'union pthread_attr_t':'union pthread_attr_t'
| `-ElaboratedType 0x5609c5e67a50 'union pthread_attr_t' sugar
|   `-RecordType 0x5609c5e678d0 'union pthread_attr_t'
|     `-Record 0x5609c5e67848 'pthread_attr_t'
|-RecordDecl 0x5609c5e67b00 <line:232:9, line:236:1> line:232:16 struct __pthread_internal_list definition
| |-FieldDecl 0x5609c5e67c78 <line:234:3, col:35> col:35 __prev 'struct __pthread_internal_list *'
| `-FieldDecl 0x5609c5e67cf0 <line:235:3, col:35> col:35 __next 'struct __pthread_internal_list *'
|-TypedefDecl 0x5609c5e67da0 <line:232:1, line:236:3> col:3 referenced __pthread_list_t 'struct __pthread_internal_list':'struct __pthread_internal_list'
| `-ElaboratedType 0x5609c5e67d40 'struct __pthread_internal_list' sugar
|   `-RecordType 0x5609c5e67b80 'struct __pthread_internal_list'
|     `-Record 0x5609c5e67b00 '__pthread_internal_list'
|-RecordDecl 0x5609c5e67e10 <line:237:9, line:251:1> line:237:9 union definition
| |-RecordDecl 0x5609c5e67eb8 parent 0x5609c5df1e18 <line:239:3, line:248:3> line:239:10 struct __pthread_mutex_s definition
| | |-FieldDecl 0x5609c5e67f90 <line:241:5, col:9> col:9 __lock 'int'
| | |-FieldDecl 0x5609c5e67ff8 <line:242:5, col:18> col:18 __count 'unsigned int'
| | |-FieldDecl 0x5609c5e68060 <line:243:5, col:9> col:9 __owner 'int'
| | |-FieldDecl 0x5609c5e6c110 <line:244:5, col:18> col:18 __nusers 'unsigned int'
| | |-FieldDecl 0x5609c5e6c178 <line:245:5, col:9> col:9 __kind 'int'
| | |-FieldDecl 0x5609c5e6c1e0 <line:246:5, col:9> col:9 __spins 'int'
| | `-FieldDecl 0x5609c5e6c268 <line:247:5, col:22> col:22 __list '__pthread_list_t':'struct __pthread_internal_list'
| |-FieldDecl 0x5609c5e6c320 <line:239:3, line:248:5> col:5 __data 'struct __pthread_mutex_s':'struct __pthread_mutex_s'
| |-FieldDecl 0x5609c5e6c410 <line:249:3, col:17> col:8 __size 'char [40]'
| `-FieldDecl 0x5609c5e6c478 <line:250:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x5609c5e6c600 <line:237:1, line:251:3> col:3 referenced pthread_mutex_t 'union pthread_mutex_t':'pthread_mutex_t'
| `-ElaboratedType 0x5609c5e6c5a0 'union pthread_mutex_t' sugar
|   `-RecordType 0x5609c5e67e90 'pthread_mutex_t'
|     `-Record 0x5609c5e67e10 ''
|-RecordDecl 0x5609c5e6c670 <line:252:9, line:256:1> line:252:9 union definition
| |-FieldDecl 0x5609c5e6c7b0 <line:254:3, col:16> col:8 __size 'char [4]'
| `-FieldDecl 0x5609c5e6c818 <line:255:3, col:7> col:7 __align 'int'
|-TypedefDecl 0x5609c5e6c8d0 <line:252:1, line:256:3> col:3 referenced pthread_mutexattr_t 'union pthread_mutexattr_t':'pthread_mutexattr_t'
| `-ElaboratedType 0x5609c5e6c870 'union pthread_mutexattr_t' sugar
|   `-RecordType 0x5609c5e6c6f0 'pthread_mutexattr_t'
|     `-Record 0x5609c5e6c670 ''
|-RecordDecl 0x5609c5e6c940 <line:257:9, line:272:1> line:257:9 union definition
| |-RecordDecl 0x5609c5e6c9e8 <line:259:3, line:269:3> line:259:3 struct definition
| | |-FieldDecl 0x5609c5e6cab0 <line:261:5, col:9> col:9 __lock 'int'
| | |-FieldDecl 0x5609c5e6cb18 <line:262:5, col:18> col:18 __futex 'unsigned int'
| | |-FieldDecl 0x5609c5e6cb80 <line:263:19, col:42> col:42 __total_seq 'unsigned long long'
| | |-FieldDecl 0x5609c5e6cbe8 <line:264:19, col:42> col:42 __wakeup_seq 'unsigned long long'
| | |-FieldDecl 0x5609c5e6cc50 <line:265:19, col:42> col:42 __woken_seq 'unsigned long long'
| | |-FieldDecl 0x5609c5e6ccb8 <line:266:5, col:11> col:11 __mutex 'void *'
| | |-FieldDecl 0x5609c5e6cd20 <line:267:5, col:18> col:18 __nwaiters 'unsigned int'
| | `-FieldDecl 0x5609c5e6cd88 <line:268:5, col:18> col:18 __broadcast_seq 'unsigned int'
| |-FieldDecl 0x5609c5e6ce40 <line:259:3, line:269:5> col:5 __data 'struct (anonymous struct at ./split_9/safe019_power.opt_false-unreach-call.i:259:3)':'struct pthread_cond_t::(anonymous at ./split_9/safe019_power.opt_false-unreach-call.i:259:3)'
| |-FieldDecl 0x5609c5e6cf30 <line:270:3, col:17> col:8 __size 'char [48]'
| `-FieldDecl 0x5609c5e6cf98 <line:271:17, col:31> col:31 __align 'long long'
|-TypedefDecl 0x5609c5e6e130 <line:257:1, line:272:3> col:3 referenced pthread_cond_t 'union pthread_cond_t':'pthread_cond_t'
| `-ElaboratedType 0x5609c5e6d070 'union pthread_cond_t' sugar
|   `-RecordType 0x5609c5e6c9c0 'pthread_cond_t'
|     `-Record 0x5609c5e6c940 ''
|-RecordDecl 0x5609c5e6e1a0 <line:273:9, line:277:1> line:273:9 union definition
| |-FieldDecl 0x5609c5e6e2a0 <line:275:3, col:16> col:8 __size 'char [4]'
| `-FieldDecl 0x5609c5e6e308 <line:276:3, col:7> col:7 __align 'int'
|-TypedefDecl 0x5609c5e6e3c0 <line:273:1, line:277:3> col:3 referenced pthread_condattr_t 'union pthread_condattr_t':'pthread_condattr_t'
| `-ElaboratedType 0x5609c5e6e360 'union pthread_condattr_t' sugar
|   `-RecordType 0x5609c5e6e220 'pthread_condattr_t'
|     `-Record 0x5609c5e6e1a0 ''
|-TypedefDecl 0x5609c5e6e448 <line:278:1, col:22> col:22 referenced pthread_key_t 'unsigned int'
| `-BuiltinType 0x5609c5df1fb0 'unsigned int'
|-TypedefDecl 0x5609c5e6e4b8 <line:279:1, col:13> col:13 referenced pthread_once_t 'int'
| `-BuiltinType 0x5609c5df1f10 'int'
|-RecordDecl 0x5609c5e6e510 <line:280:9, line:298:1> line:280:9 union definition
| |-RecordDecl 0x5609c5e6e5b8 <line:282:3, line:295:3> line:282:3 struct definition
| | |-FieldDecl 0x5609c5e6e680 <line:284:5, col:9> col:9 __lock 'int'
| | |-FieldDecl 0x5609c5e6e6e8 <line:285:5, col:18> col:18 __nr_readers 'unsigned int'
| | |-FieldDecl 0x5609c5e6e750 <line:286:5, col:18> col:18 __readers_wakeup 'unsigned int'
| | |-FieldDecl 0x5609c5e6e7b8 <line:287:5, col:18> col:18 __writer_wakeup 'unsigned int'
| | |-FieldDecl 0x5609c5e6e820 <line:288:5, col:18> col:18 __nr_readers_queued 'unsigned int'
| | |-FieldDecl 0x5609c5e6e888 <line:289:5, col:18> col:18 __nr_writers_queued 'unsigned int'
| | |-FieldDecl 0x5609c5e6e8f0 <line:290:5, col:9> col:9 __writer 'int'
| | |-FieldDecl 0x5609c5e6e958 <line:291:5, col:9> col:9 __shared 'int'
| | |-FieldDecl 0x5609c5e6e9c0 <line:292:5, col:23> col:23 __pad1 'unsigned long'
| | |-FieldDecl 0x5609c5e6ea28 <line:293:5, col:23> col:23 __pad2 'unsigned long'
| | `-FieldDecl 0x5609c5e6ea90 <line:294:5, col:18> col:18 __flags 'unsigned int'
| |-FieldDecl 0x5609c5e6eb40 <line:282:3, line:295:5> col:5 __data 'struct (anonymous struct at ./split_9/safe019_power.opt_false-unreach-call.i:282:3)':'struct pthread_rwlock_t::(anonymous at ./split_9/safe019_power.opt_false-unreach-call.i:282:3)'
| |-FieldDecl 0x5609c5e6ebe8 <line:296:3, col:17> col:8 __size 'char [56]'
| `-FieldDecl 0x5609c5e6ec50 <line:297:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x5609c5e6eda0 <line:280:1, line:298:3> col:3 referenced pthread_rwlock_t 'union pthread_rwlock_t':'pthread_rwlock_t'
| `-ElaboratedType 0x5609c5e6ed40 'union pthread_rwlock_t' sugar
|   `-RecordType 0x5609c5e6e590 'pthread_rwlock_t'
|     `-Record 0x5609c5e6e510 ''
|-RecordDecl 0x5609c5e6ee10 <line:299:9, line:303:1> line:299:9 union definition
| |-FieldDecl 0x5609c5e6ef50 <line:301:3, col:16> col:8 __size 'char [8]'
| `-FieldDecl 0x5609c5e6efb8 <line:302:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x5609c5e6f070 <line:299:1, line:303:3> col:3 referenced pthread_rwlockattr_t 'union pthread_rwlockattr_t':'pthread_rwlockattr_t'
| `-ElaboratedType 0x5609c5e6f010 'union pthread_rwlockattr_t' sugar
|   `-RecordType 0x5609c5e6ee90 'pthread_rwlockattr_t'
|     `-Record 0x5609c5e6ee10 ''
|-TypedefDecl 0x5609c5e70140 <line:304:1, col:22> col:22 referenced pthread_spinlock_t 'volatile int'
| `-QualType 0x5609c5df1f14 'volatile int' volatile
|   `-BuiltinType 0x5609c5df1f10 'int'
|-RecordDecl 0x5609c5e70198 <line:305:9, line:309:1> line:305:9 union definition
| |-FieldDecl 0x5609c5e702e0 <line:307:3, col:17> col:8 __size 'char [32]'
| `-FieldDecl 0x5609c5e70348 <line:308:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x5609c5e70400 <line:305:1, line:309:3> col:3 referenced pthread_barrier_t 'union pthread_barrier_t':'pthread_barrier_t'
| `-ElaboratedType 0x5609c5e703a0 'union pthread_barrier_t' sugar
|   `-RecordType 0x5609c5e70220 'pthread_barrier_t'
|     `-Record 0x5609c5e70198 ''
|-RecordDecl 0x5609c5e70470 <line:310:9, line:314:1> line:310:9 union definition
| |-FieldDecl 0x5609c5e70570 <line:312:3, col:16> col:8 __size 'char [4]'
| `-FieldDecl 0x5609c5e705d8 <line:313:3, col:7> col:7 __align 'int'
|-TypedefDecl 0x5609c5e70690 <line:310:1, line:314:3> col:3 referenced pthread_barrierattr_t 'union pthread_barrierattr_t':'pthread_barrierattr_t'
| `-ElaboratedType 0x5609c5e70630 'union pthread_barrierattr_t' sugar
|   `-RecordType 0x5609c5e704f0 'pthread_barrierattr_t'
|     `-Record 0x5609c5e70470 ''
|-TypedefDecl 0x5609c5e707a8 <line:315:1, col:29> col:18 referenced __jmp_buf 'long [8]'
| `-ConstantArrayType 0x5609c5e70740 'long [8]' 8 
|   `-BuiltinType 0x5609c5df1f30 'long'
|-EnumDecl 0x5609c5e70800 <line:316:1, line:320:1> line:316:1
| |-EnumConstantDecl 0x5609c5e708c8 <line:318:3> col:3 PTHREAD_CREATE_JOINABLE 'int'
| `-EnumConstantDecl 0x5609c5e70918 <line:319:3> col:3 PTHREAD_CREATE_DETACHED 'int'
|-EnumDecl 0x5609c5e70968 <line:321:1, line:332:1> line:321:1
| |-EnumConstantDecl 0x5609c5e70a38 <line:323:3> col:3 referenced PTHREAD_MUTEX_TIMED_NP 'int'
| |-EnumConstantDecl 0x5609c5e70a88 <line:324:3> col:3 referenced PTHREAD_MUTEX_RECURSIVE_NP 'int'
| |-EnumConstantDecl 0x5609c5e70ad8 <line:325:3> col:3 referenced PTHREAD_MUTEX_ERRORCHECK_NP 'int'
| |-EnumConstantDecl 0x5609c5e70b28 <line:326:3> col:3 PTHREAD_MUTEX_ADAPTIVE_NP 'int'
| |-EnumConstantDecl 0x5609c5e70bb0 <line:328:3, col:26> col:3 referenced PTHREAD_MUTEX_NORMAL 'int'
| | `-ConstantExpr 0x5609c5e70b98 <col:26> 'int'
| |   `-DeclRefExpr 0x5609c5e70b78 <col:26> 'int' EnumConstant 0x5609c5e70a38 'PTHREAD_MUTEX_TIMED_NP' 'int'
| |-EnumConstantDecl 0x5609c5e70c38 <line:329:3, col:29> col:3 PTHREAD_MUTEX_RECURSIVE 'int'
| | `-ConstantExpr 0x5609c5e70c20 <col:29> 'int'
| |   `-DeclRefExpr 0x5609c5e70c00 <col:29> 'int' EnumConstant 0x5609c5e70a88 'PTHREAD_MUTEX_RECURSIVE_NP' 'int'
| |-EnumConstantDecl 0x5609c5e70cc0 <line:330:3, col:30> col:3 PTHREAD_MUTEX_ERRORCHECK 'int'
| | `-ConstantExpr 0x5609c5e70ca8 <col:30> 'int'
| |   `-DeclRefExpr 0x5609c5e70c88 <col:30> 'int' EnumConstant 0x5609c5e70ad8 'PTHREAD_MUTEX_ERRORCHECK_NP' 'int'
| `-EnumConstantDecl 0x5609c5e70d48 <line:331:3, col:27> col:3 PTHREAD_MUTEX_DEFAULT 'int'
|   `-ConstantExpr 0x5609c5e70d30 <col:27> 'int'
|     `-DeclRefExpr 0x5609c5e70d10 <col:27> 'int' EnumConstant 0x5609c5e70bb0 'PTHREAD_MUTEX_NORMAL' 'int'
|-EnumDecl 0x5609c5e70d98 <line:333:1, line:339:1> line:333:1
| |-EnumConstantDecl 0x5609c5e70e68 <line:335:3> col:3 referenced PTHREAD_MUTEX_STALLED 'int'
| |-EnumConstantDecl 0x5609c5e70ef0 <line:336:3, col:30> col:3 PTHREAD_MUTEX_STALLED_NP 'int'
| | `-ConstantExpr 0x5609c5e70ed8 <col:30> 'int'
| |   `-DeclRefExpr 0x5609c5e70eb8 <col:30> 'int' EnumConstant 0x5609c5e70e68 'PTHREAD_MUTEX_STALLED' 'int'
| |-EnumConstantDecl 0x5609c5e70f40 <line:337:3> col:3 referenced PTHREAD_MUTEX_ROBUST 'int'
| `-EnumConstantDecl 0x5609c5e70fc8 <line:338:3, col:29> col:3 PTHREAD_MUTEX_ROBUST_NP 'int'
|   `-ConstantExpr 0x5609c5e70fb0 <col:29> 'int'
|     `-DeclRefExpr 0x5609c5e70f90 <col:29> 'int' EnumConstant 0x5609c5e70f40 'PTHREAD_MUTEX_ROBUST' 'int'
|-EnumDecl 0x5609c5e71018 <line:340:1, line:345:1> line:340:1
| |-EnumConstantDecl 0x5609c5e710e8 <line:342:3> col:3 PTHREAD_PRIO_NONE 'int'
| |-EnumConstantDecl 0x5609c5e71150 <line:343:3> col:3 PTHREAD_PRIO_INHERIT 'int'
| `-EnumConstantDecl 0x5609c5e711a0 <line:344:3> col:3 PTHREAD_PRIO_PROTECT 'int'
|-EnumDecl 0x5609c5e711f0 <line:346:1, line:352:1> line:346:1
| |-EnumConstantDecl 0x5609c5e712b8 <line:348:3> col:3 referenced PTHREAD_RWLOCK_PREFER_READER_NP 'int'
| |-EnumConstantDecl 0x5609c5e71308 <line:349:3> col:3 PTHREAD_RWLOCK_PREFER_WRITER_NP 'int'
| |-EnumConstantDecl 0x5609c5e71358 <line:350:3> col:3 PTHREAD_RWLOCK_PREFER_WRITER_NONRECURSIVE_NP 'int'
| `-EnumConstantDecl 0x5609c5e713e0 <line:351:3, col:31> col:3 PTHREAD_RWLOCK_DEFAULT_NP 'int'
|   `-ConstantExpr 0x5609c5e713c8 <col:31> 'int'
|     `-DeclRefExpr 0x5609c5e713a8 <col:31> 'int' EnumConstant 0x5609c5e712b8 'PTHREAD_RWLOCK_PREFER_READER_NP' 'int'
|-EnumDecl 0x5609c5e71430 <line:353:1, line:357:1> line:353:1
| |-EnumConstantDecl 0x5609c5e714f8 <line:355:3> col:3 PTHREAD_INHERIT_SCHED 'int'
| `-EnumConstantDecl 0x5609c5e71548 <line:356:3> col:3 PTHREAD_EXPLICIT_SCHED 'int'
|-EnumDecl 0x5609c5e71598 <line:358:1, line:362:1> line:358:1
| |-EnumConstantDecl 0x5609c5e71668 <line:360:3> col:3 PTHREAD_SCOPE_SYSTEM 'int'
| `-EnumConstantDecl 0x5609c5e716b8 <line:361:3> col:3 PTHREAD_SCOPE_PROCESS 'int'
|-EnumDecl 0x5609c5e71708 <line:363:1, line:367:1> line:363:1
| |-EnumConstantDecl 0x5609c5e717d8 <line:365:3> col:3 PTHREAD_PROCESS_PRIVATE 'int'
| `-EnumConstantDecl 0x5609c5e71828 <line:366:3> col:3 PTHREAD_PROCESS_SHARED 'int'
|-RecordDecl 0x5609c5e71878 <line:368:1, line:374:1> line:368:8 struct _pthread_cleanup_buffer definition
| |-FieldDecl 0x5609c5e71ab8 <line:370:3, col:28> col:10 __routine 'void (*)(void *)'
| |-FieldDecl 0x5609c5e71b20 <line:371:3, col:9> col:9 __arg 'void *'
| |-FieldDecl 0x5609c5e71b88 <line:372:3, col:7> col:7 __canceltype 'int'
| `-FieldDecl 0x5609c5e71ca8 <line:373:3, col:35> col:35 __prev 'struct _pthread_cleanup_buffer *'
|-EnumDecl 0x5609c5e71cf8 <line:375:1, line:379:1> line:375:1
| |-EnumConstantDecl 0x5609c5e71dc8 <line:377:3> col:3 PTHREAD_CANCEL_ENABLE 'int'
| `-EnumConstantDecl 0x5609c5e71e18 <line:378:3> col:3 PTHREAD_CANCEL_DISABLE 'int'
|-EnumDecl 0x5609c5e71e68 <line:380:1, line:384:1> line:380:1
| |-EnumConstantDecl 0x5609c5e71f38 <line:382:3> col:3 PTHREAD_CANCEL_DEFERRED 'int'
| `-EnumConstantDecl 0x5609c5e71f88 <line:383:3> col:3 PTHREAD_CANCEL_ASYNCHRONOUS 'int'
|-FunctionDecl 0x5609c5e725b8 <line:386:1, line:389:96> line:386:12 used pthread_create 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' extern
| |-ParmVarDecl 0x5609c5e72080 <col:28, col:50> col:50 __newthread 'pthread_t *restrict'
| |-ParmVarDecl 0x5609c5e721a0 <line:387:7, col:40> col:40 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x5609c5e723a0 <line:388:7, col:39> col:15 __start_routine 'void *(*)(void *)'
| |-ParmVarDecl 0x5609c5e72420 <line:389:7, col:24> col:24 __arg 'void *restrict'
| |-NoThrowAttr 0x5609c5e72678 <col:47>
| |-NonNullAttr 0x5609c5e726d0 <col:77, col:94> 1 3
| `-CallbackAttr 0x5609c5e72708 <line:386:12> Implicit 2 3
|-FunctionDecl 0x5609c5e72830 <line:390:1, col:72> col:13 pthread_exit 'void (void *) __attribute__((noreturn))' extern
| `-ParmVarDecl 0x5609c5e72760 <col:27, col:33> col:33 __retval 'void *'
|-FunctionDecl 0x5609c5e72a88 <line:391:1, col:64> col:12 pthread_join 'int (pthread_t, void **)' extern
| |-ParmVarDecl 0x5609c5e728e8 <col:26, col:36> col:36 __th 'pthread_t':'unsigned long'
| `-ParmVarDecl 0x5609c5e72968 <col:42, col:49> col:49 __thread_return 'void **'
|-FunctionDecl 0x5609c5e72c58 <line:392:1, col:83> col:12 pthread_detach 'int (pthread_t)' extern
| |-ParmVarDecl 0x5609c5e72b48 <col:28, col:38> col:38 __th 'pthread_t':'unsigned long'
| `-NoThrowAttr 0x5609c5e72d00 <col:60>
|-FunctionDecl 0x5609c5e72e50 <line:393:1, col:105> col:18 pthread_self 'pthread_t (void)' extern
| |-NoThrowAttr 0x5609c5e72ef0 <col:54>
| `-ConstAttr 0x5609c5e72f48 <col:95>
|-FunctionDecl 0x5609c5e74990 <line:394:1, line:395:70> line:394:12 pthread_equal 'int (pthread_t, pthread_t)' extern
| |-ParmVarDecl 0x5609c5e72f80 <col:27, col:37> col:37 __thread1 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x5609c5e72ff8 <col:48, col:58> col:58 __thread2 'pthread_t':'unsigned long'
| |-NoThrowAttr 0x5609c5e74a40 <line:395:19>
| `-ConstAttr 0x5609c5e74a98 <col:60>
|-FunctionDecl 0x5609c5e74c68 <line:396:1, col:128> col:12 pthread_attr_init 'int (pthread_attr_t *)' extern
| |-ParmVarDecl 0x5609c5e74b30 <col:31, col:47> col:47 __attr 'pthread_attr_t *'
| |-NoThrowAttr 0x5609c5e74d10 <col:71>
| `-NonNullAttr 0x5609c5e74d68 <col:112, col:126> 1
|-FunctionDecl 0x5609c5e74e70 <line:397:1, line:398:79> line:397:12 pthread_attr_destroy 'int (pthread_attr_t *)' extern
| |-ParmVarDecl 0x5609c5e74db8 <col:34, col:50> col:50 __attr 'pthread_attr_t *'
| |-NoThrowAttr 0x5609c5e74f18 <line:398:22>
| `-NonNullAttr 0x5609c5e74f70 <col:63, col:77> 1
|-FunctionDecl 0x5609c5e75198 <line:399:1, line:401:82> line:399:12 pthread_attr_getdetachstate 'int (const pthread_attr_t *, int *)' extern
| |-ParmVarDecl 0x5609c5e74fb8 <col:41, col:63> col:63 __attr 'const pthread_attr_t *'
| |-ParmVarDecl 0x5609c5e75038 <line:400:6, col:11> col:11 __detachstate 'int *'
| |-NoThrowAttr 0x5609c5e75248 <line:401:22>
| `-NonNullAttr 0x5609c5e752a0 <col:63, col:80> 1 2
|-FunctionDecl 0x5609c5e754a8 <line:402:1, line:404:79> line:402:12 pthread_attr_setdetachstate 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x5609c5e752e8 <col:41, col:57> col:57 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x5609c5e75368 <line:403:6, col:10> col:10 __detachstate 'int'
| |-NoThrowAttr 0x5609c5e75558 <line:404:22>
| `-NonNullAttr 0x5609c5e755b0 <col:63, col:77> 1
|-FunctionDecl 0x5609c5e75808 <line:405:1, line:407:82> line:405:12 pthread_attr_getguardsize 'int (const pthread_attr_t *, size_t *)' extern
| |-ParmVarDecl 0x5609c5e755f8 <col:39, col:61> col:61 __attr 'const pthread_attr_t *'
| |-ParmVarDecl 0x5609c5e756a0 <line:406:11, col:19> col:19 __guardsize 'size_t *'
| |-NoThrowAttr 0x5609c5e758b8 <line:407:22>
| `-NonNullAttr 0x5609c5e75910 <col:63, col:80> 1 2
|-FunctionDecl 0x5609c5e76b68 <line:408:1, line:410:79> line:408:12 pthread_attr_setguardsize 'int (pthread_attr_t *, size_t)' extern
| |-ParmVarDecl 0x5609c5e769b0 <col:39, col:55> col:55 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x5609c5e76a28 <line:409:11, col:18> col:18 __guardsize 'size_t':'unsigned long'
| |-NoThrowAttr 0x5609c5e76c18 <line:410:22>
| `-NonNullAttr 0x5609c5e76c70 <col:63, col:77> 1
|-FunctionDecl 0x5609c5e76ea8 <line:411:1, line:413:82> line:411:12 pthread_attr_getschedparam 'int (const pthread_attr_t *restrict, struct sched_param *restrict)' extern
| |-ParmVarDecl 0x5609c5e76cb8 <col:40, col:73> col:73 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x5609c5e76d48 <line:412:12, col:43> col:43 __param 'struct sched_param *restrict'
| |-NoThrowAttr 0x5609c5e76f58 <line:413:22>
| `-NonNullAttr 0x5609c5e76fb0 <col:63, col:80> 1 2
|-FunctionDecl 0x5609c5e771e8 <line:414:1, line:416:97> line:414:12 pthread_attr_setschedparam 'int (pthread_attr_t *restrict, const struct sched_param *restrict)' extern
| |-ParmVarDecl 0x5609c5e76ff8 <col:40, col:67> col:67 __attr 'pthread_attr_t *restrict'
| |-ParmVarDecl 0x5609c5e77088 <line:415:12, line:416:12> col:12 __param 'const struct sched_param *restrict'
| |-NoThrowAttr 0x5609c5e77298 <col:37>
| `-NonNullAttr 0x5609c5e772f0 <col:78, col:95> 1 2
|-FunctionDecl 0x5609c5e774d8 <line:417:1, line:419:82> line:417:12 pthread_attr_getschedpolicy 'int (const pthread_attr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x5609c5e77338 <col:41, line:418:6> col:6 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x5609c5e773b8 <col:14, col:30> col:30 __policy 'int *restrict'
| |-NoThrowAttr 0x5609c5e77588 <line:419:22>
| `-NonNullAttr 0x5609c5e775e0 <col:63, col:80> 1 2
|-FunctionDecl 0x5609c5e77768 <line:420:1, line:421:79> line:420:12 pthread_attr_setschedpolicy 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x5609c5e77628 <col:41, col:57> col:57 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x5609c5e776a8 <col:65, col:69> col:69 __policy 'int'
| |-NoThrowAttr 0x5609c5e77818 <line:421:22>
| `-NonNullAttr 0x5609c5e77870 <col:63, col:77> 1
|-FunctionDecl 0x5609c5e77a38 <line:422:1, line:424:82> line:422:12 pthread_attr_getinheritsched 'int (const pthread_attr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x5609c5e778b8 <col:42, line:423:7> col:7 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x5609c5e77938 <col:15, col:31> col:31 __inherit 'int *restrict'
| |-NoThrowAttr 0x5609c5e77ae8 <line:424:22>
| `-NonNullAttr 0x5609c5e77b40 <col:63, col:80> 1 2
|-FunctionDecl 0x5609c5e77cc8 <line:425:1, line:427:79> line:425:12 pthread_attr_setinheritsched 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x5609c5e77b88 <col:42, col:58> col:58 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x5609c5e77c08 <line:426:7, col:11> col:11 __inherit 'int'
| |-NoThrowAttr 0x5609c5e77d78 <line:427:22>
| `-NonNullAttr 0x5609c5e77dd0 <col:63, col:77> 1
|-FunctionDecl 0x5609c5e77f78 <line:428:1, line:430:82> line:428:12 pthread_attr_getscope 'int (const pthread_attr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x5609c5e77e18 <col:35, col:68> col:68 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x5609c5e77e98 <line:429:7, col:23> col:23 __scope 'int *restrict'
| |-NoThrowAttr 0x5609c5e78028 <line:430:22>
| `-NonNullAttr 0x5609c5e78080 <col:63, col:80> 1 2
|-FunctionDecl 0x5609c5e78208 <line:431:1, line:432:79> line:431:12 pthread_attr_setscope 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x5609c5e780c8 <col:35, col:51> col:51 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x5609c5e78148 <col:59, col:63> col:63 __scope 'int'
| |-NoThrowAttr 0x5609c5e782b8 <line:432:22>
| `-NonNullAttr 0x5609c5e78310 <col:63, col:77> 1
|-FunctionDecl 0x5609c5e78538 <line:433:1, line:435:115> line:433:12 pthread_attr_getstackaddr 'int (const pthread_attr_t *restrict, void **restrict)' extern
| |-ParmVarDecl 0x5609c5e78358 <col:39, line:434:11> col:11 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x5609c5e783d8 <col:19, col:37> col:37 __stackaddr 'void **restrict'
| |-NoThrowAttr 0x5609c5e785e8 <line:435:22>
| |-NonNullAttr 0x5609c5e78640 <col:63, col:80> 1 2
| `-DeprecatedAttr 0x5609c5e78678 <col:100> "" ""
|-FunctionDecl 0x5609c5e78888 <line:436:1, line:438:112> line:436:12 pthread_attr_setstackaddr 'int (pthread_attr_t *, void *)' extern
| |-ParmVarDecl 0x5609c5e786c8 <col:39, col:55> col:55 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x5609c5e78748 <line:437:11, col:17> col:17 __stackaddr 'void *'
| |-NoThrowAttr 0x5609c5e78938 <line:438:22>
| |-NonNullAttr 0x5609c5e78990 <col:63, col:77> 1
| `-DeprecatedAttr 0x5609c5e789d8 <col:97> "" ""
|-FunctionDecl 0x5609c5e78bc8 <line:439:1, line:441:82> line:439:12 pthread_attr_getstacksize 'int (const pthread_attr_t *restrict, size_t *restrict)' extern
| |-ParmVarDecl 0x5609c5e78a28 <col:39, line:440:11> col:11 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x5609c5e78aa0 <col:19, col:38> col:38 __stacksize 'size_t *restrict'
| |-NoThrowAttr 0x5609c5e78c78 <line:441:22>
| `-NonNullAttr 0x5609c5e78cd0 <col:63, col:80> 1 2
|-FunctionDecl 0x5609c5e78e50 <line:442:1, line:444:79> line:442:12 pthread_attr_setstacksize 'int (pthread_attr_t *, size_t)' extern
| |-ParmVarDecl 0x5609c5e78d18 <col:39, col:55> col:55 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x5609c5e78d90 <line:443:11, col:18> col:18 __stacksize 'size_t':'unsigned long'
| |-NoThrowAttr 0x5609c5e78f00 <line:444:22>
| `-NonNullAttr 0x5609c5e78f58 <col:63, col:77> 1
|-FunctionDecl 0x5609c5e79248 <line:445:1, line:448:85> line:445:12 pthread_attr_getstack 'int (const pthread_attr_t *restrict, void **restrict, size_t *restrict)' extern
| |-ParmVarDecl 0x5609c5e78fa8 <col:35, col:68> col:68 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x5609c5e79028 <line:446:7, col:25> col:25 __stackaddr 'void **restrict'
| |-ParmVarDecl 0x5609c5e790a0 <line:447:7, col:26> col:26 __stacksize 'size_t *restrict'
| |-NoThrowAttr 0x5609c5e79300 <line:448:22>
| `-NonNullAttr 0x5609c5e79358 <col:63, col:83> 1 2 3
|-FunctionDecl 0x5609c5e79608 <line:449:1, line:450:100> line:449:12 pthread_attr_setstack 'int (pthread_attr_t *, void *, size_t)' extern
| |-ParmVarDecl 0x5609c5e793b0 <col:35, col:51> col:51 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x5609c5e79430 <col:59, col:65> col:65 __stackaddr 'void *'
| |-ParmVarDecl 0x5609c5e794a8 <line:450:7, col:14> col:14 __stacksize 'size_t':'unsigned long'
| |-NoThrowAttr 0x5609c5e796c0 <col:43>
| `-NonNullAttr 0x5609c5e79718 <col:84, col:98> 1
|-FunctionDecl 0x5609c5e79a20 <line:451:1, line:453:79> line:451:12 pthread_setschedparam 'int (pthread_t, int, const struct sched_param *)' extern
| |-ParmVarDecl 0x5609c5e79768 <col:35, col:45> col:45 __target_thread 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x5609c5e797e8 <col:62, col:66> col:66 __policy 'int'
| |-ParmVarDecl 0x5609c5e79878 <line:452:7, col:33> col:33 __param 'const struct sched_param *'
| |-NoThrowAttr 0x5609c5e79ad8 <line:453:22>
| `-NonNullAttr 0x5609c5e79b30 <col:63, col:77> 3
|-FunctionDecl 0x5609c5e79e08 <line:454:1, line:457:82> line:454:12 pthread_getschedparam 'int (pthread_t, int *restrict, struct sched_param *restrict)' extern
| |-ParmVarDecl 0x5609c5e79b78 <col:35, col:45> col:45 __target_thread 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x5609c5e79bf8 <line:455:7, col:23> col:23 __policy 'int *restrict'
| |-ParmVarDecl 0x5609c5e79c88 <line:456:7, col:38> col:38 __param 'struct sched_param *restrict'
| |-NoThrowAttr 0x5609c5e79ec0 <line:457:22>
| `-NonNullAttr 0x5609c5e79f18 <col:63, col:80> 2 3
|-FunctionDecl 0x5609c5e7a108 <line:458:1, line:459:45> line:458:12 pthread_setschedprio 'int (pthread_t, int)' extern
| |-ParmVarDecl 0x5609c5e79f68 <col:34, col:44> col:44 __target_thread 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x5609c5e79fe8 <col:61, col:65> col:65 __prio 'int'
| `-NoThrowAttr 0x5609c5e7a1b8 <line:459:22>
|-FunctionDecl 0x5609c5e7a588 <line:460:1, line:461:71> line:460:12 pthread_once 'int (pthread_once_t *, void (*)(void))' extern
| |-ParmVarDecl 0x5609c5e7a280 <col:26, col:42> col:42 __once_control 'pthread_once_t *'
| |-ParmVarDecl 0x5609c5e7a420 <line:461:5, col:33> col:12 __init_routine 'void (*)(void)'
| `-NonNullAttr 0x5609c5e7a638 <col:52, col:69> 1 2
|-FunctionDecl 0x5609c5e7a7e0 <line:462:1, col:64> col:12 pthread_setcancelstate 'int (int, int *)' extern
| |-ParmVarDecl 0x5609c5e7a6c0 <col:36, col:40> col:40 __state 'int'
| `-ParmVarDecl 0x5609c5e7a740 <col:49, col:54> col:54 __oldstate 'int *'
|-FunctionDecl 0x5609c5e7a9f0 <line:463:1, col:61> col:12 pthread_setcanceltype 'int (int, int *)' extern
| |-ParmVarDecl 0x5609c5e7a8a8 <col:35, col:39> col:39 __type 'int'
| `-ParmVarDecl 0x5609c5e7a928 <col:47, col:52> col:52 __oldtype 'int *'
|-FunctionDecl 0x5609c5e7ab48 <line:464:1, col:42> col:12 pthread_cancel 'int (pthread_t)' extern
| `-ParmVarDecl 0x5609c5e7aab0 <col:28, col:38> col:38 __th 'pthread_t':'unsigned long'
|-FunctionDecl 0x5609c5e7ac88 <line:465:1, col:37> col:13 pthread_testcancel 'void (void)' extern
|-RecordDecl 0x5609c5e7ad28 <line:466:9, line:474:1> line:466:9 struct definition
| |-RecordDecl 0x5609c5e7add8 <line:468:3, line:472:3> line:468:3 struct definition
| | |-FieldDecl 0x5609c5e7aec8 <line:470:5, col:15> col:15 __cancel_jmp_buf '__jmp_buf':'long [8]'
| | `-FieldDecl 0x5609c5e7af30 <line:471:5, col:9> col:9 __mask_was_saved 'int'
| |-FieldDecl 0x5609c5e7b100 <line:468:3, line:472:23> col:5 __cancel_jmp_buf 'struct (anonymous struct at ./split_9/safe019_power.opt_false-unreach-call.i:468:3) [1]'
| `-FieldDecl 0x5609c5e7b1f8 <line:473:3, col:16> col:9 __pad 'void *[4]'
|-TypedefDecl 0x5609c5e7b2b0 <line:466:1, line:474:3> col:3 referenced __pthread_unwind_buf_t 'struct __pthread_unwind_buf_t':'__pthread_unwind_buf_t'
| |-ElaboratedType 0x5609c5e7b250 'struct __pthread_unwind_buf_t' sugar
| | `-RecordType 0x5609c5e7adb0 '__pthread_unwind_buf_t'
| |   `-Record 0x5609c5e7ad28 ''
| `-AlignedAttr 0x5609c5e7b308 <col:42> aligned
|   `-<<<NULL>>>
|-RecordDecl 0x5609c5e7b380 <line:475:1, line:481:1> line:475:8 struct __pthread_cleanup_frame definition
| |-FieldDecl 0x5609c5e7b4e0 <line:477:3, col:35> col:10 __cancel_routine 'void (*)(void *)'
| |-FieldDecl 0x5609c5e7b548 <line:478:3, col:9> col:9 __cancel_arg 'void *'
| |-FieldDecl 0x5609c5e7b5b0 <line:479:3, col:7> col:7 __do_it 'int'
| `-FieldDecl 0x5609c5e7b618 <line:480:3, col:7> col:7 __cancel_type 'int'
|-FunctionDecl 0x5609c5e7b820 <line:482:1, col:69> col:13 __pthread_register_cancel 'void (__pthread_unwind_buf_t *)' extern
| `-ParmVarDecl 0x5609c5e7b710 <col:40, col:64> col:64 __buf '__pthread_unwind_buf_t *'
|-FunctionDecl 0x5609c5e7ba00 <line:484:1, col:71> col:13 __pthread_unregister_cancel 'void (__pthread_unwind_buf_t *)' extern
| `-ParmVarDecl 0x5609c5e7b8d8 <col:42, col:66> col:66 __buf '__pthread_unwind_buf_t *'
|-FunctionDecl 0x5609c5e7bbc0 <line:486:1, line:488:31> line:486:13 __pthread_unwind_next 'void (__pthread_unwind_buf_t *) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x5609c5e7bab8 <col:36, col:60> col:60 __buf '__pthread_unwind_buf_t *'
| `-WeakAttr 0x5609c5e7bc68 <line:488:22>
|-RecordDecl 0x5609c5e7bcc0 <line:490:1, col:8> col:8 struct __jmp_buf_tag
|-FunctionDecl 0x5609c5e7bfd8 <line:491:1, col:98> col:12 __sigsetjmp 'int (struct __jmp_buf_tag *, int)' extern
| |-ParmVarDecl 0x5609c5e7be38 <col:25, col:47> col:47 __env 'struct __jmp_buf_tag *'
| |-ParmVarDecl 0x5609c5e7beb8 <col:54, col:58> col:58 __savemask 'int'
| |-NoThrowAttr 0x5609c5e7c088 <col:86>
| `-ReturnsTwiceAttr 0x5609c5e7c0e0 <col:12> Implicit
|-FunctionDecl 0x5609c5e7c408 <line:492:1, line:494:79> line:492:12 pthread_mutex_init 'int (pthread_mutex_t *, const pthread_mutexattr_t *)' extern
| |-ParmVarDecl 0x5609c5e7c1b0 <col:32, col:49> col:49 __mutex 'pthread_mutex_t *'
| |-ParmVarDecl 0x5609c5e7c2c0 <line:493:11, col:38> col:38 __mutexattr 'const pthread_mutexattr_t *'
| |-NoThrowAttr 0x5609c5e7c4b8 <line:494:22>
| `-NonNullAttr 0x5609c5e7c510 <col:63, col:77> 1
|-FunctionDecl 0x5609c5e7c688 <line:495:1, line:496:79> line:495:12 pthread_mutex_destroy 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x5609c5e7c558 <col:35, col:52> col:52 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x5609c5e7c730 <line:496:22>
| `-NonNullAttr 0x5609c5e7c788 <col:63, col:77> 1
|-FunctionDecl 0x5609c5e7c890 <line:497:1, line:498:68> line:497:12 pthread_mutex_trylock 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x5609c5e7c7d8 <col:35, col:52> col:52 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x5609c5e7c938 <line:498:22>
| `-NonNullAttr 0x5609c5e7c990 <col:52, col:66> 1
|-FunctionDecl 0x5609c5e7dad8 <line:499:1, line:500:68> line:499:12 pthread_mutex_lock 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x5609c5e7da20 <col:32, col:49> col:49 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x5609c5e7db80 <line:500:22>
| `-NonNullAttr 0x5609c5e7dbd8 <col:52, col:66> 1
|-FunctionDecl 0x5609c5e7de18 <line:501:1, line:503:85> line:501:12 pthread_mutex_timedlock 'int (pthread_mutex_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x5609c5e7dc28 <col:37, col:65> col:65 __mutex 'pthread_mutex_t *restrict'
| |-ParmVarDecl 0x5609c5e7dcb8 <line:502:9, line:503:9> col:9 __abstime 'const struct timespec *restrict'
| |-NoThrowAttr 0x5609c5e7dec8 <col:36>
| `-NonNullAttr 0x5609c5e7df20 <col:66, col:83> 1 2
|-FunctionDecl 0x5609c5e7e020 <line:504:1, line:505:68> line:504:12 pthread_mutex_unlock 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x5609c5e7df68 <col:34, col:51> col:51 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x5609c5e7e0c8 <line:505:22>
| `-NonNullAttr 0x5609c5e7e120 <col:52, col:66> 1
|-FunctionDecl 0x5609c5e7e3b8 <line:506:1, line:509:82> line:506:12 pthread_mutex_getprioceiling 'int (const pthread_mutex_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x5609c5e7e1d0 <col:42, line:507:18> col:18 __mutex 'const pthread_mutex_t *restrict'
| |-ParmVarDecl 0x5609c5e7e250 <line:508:7, col:23> col:23 __prioceiling 'int *restrict'
| |-NoThrowAttr 0x5609c5e7e468 <line:509:22>
| `-NonNullAttr 0x5609c5e7e4c0 <col:63, col:80> 1 2
|-FunctionDecl 0x5609c5e7e788 <line:510:1, line:513:82> line:510:12 pthread_mutex_setprioceiling 'int (pthread_mutex_t *restrict, int, int *restrict)' extern
| |-ParmVarDecl 0x5609c5e7e508 <col:42, col:70> col:70 __mutex 'pthread_mutex_t *restrict'
| |-ParmVarDecl 0x5609c5e7e588 <line:511:7, col:11> col:11 __prioceiling 'int'
| |-ParmVarDecl 0x5609c5e7e608 <line:512:7, col:23> col:23 __old_ceiling 'int *restrict'
| |-NoThrowAttr 0x5609c5e7e840 <line:513:22>
| `-NonNullAttr 0x5609c5e7e898 <col:63, col:80> 1 3
|-FunctionDecl 0x5609c5e7ea30 <line:514:1, line:515:79> line:514:12 pthread_mutex_consistent 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x5609c5e7e8e8 <col:38, col:55> col:55 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x5609c5e7ead8 <line:515:22>
| `-NonNullAttr 0x5609c5e7eb30 <col:63, col:77> 1
|-FunctionDecl 0x5609c5e7ed18 <line:516:1, line:517:79> line:516:12 pthread_mutexattr_init 'int (pthread_mutexattr_t *)' extern
| |-ParmVarDecl 0x5609c5e7ebe0 <col:36, col:57> col:57 __attr 'pthread_mutexattr_t *'
| |-NoThrowAttr 0x5609c5e7edc0 <line:517:22>
| `-NonNullAttr 0x5609c5e7ee18 <col:63, col:77> 1
|-FunctionDecl 0x5609c5e7ef20 <line:518:1, line:519:79> line:518:12 pthread_mutexattr_destroy 'int (pthread_mutexattr_t *)' extern
| |-ParmVarDecl 0x5609c5e7ee68 <col:39, col:60> col:60 __attr 'pthread_mutexattr_t *'
| |-NoThrowAttr 0x5609c5e7efc8 <line:519:22>
| `-NonNullAttr 0x5609c5e7f020 <col:63, col:77> 1
|-FunctionDecl 0x5609c5e7f248 <line:520:1, line:523:82> line:520:12 pthread_mutexattr_getpshared 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x5609c5e7f068 <col:42, line:521:18> col:18 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x5609c5e7f0e8 <line:522:7, col:23> col:23 __pshared 'int *restrict'
| |-NoThrowAttr 0x5609c5e7f2f8 <line:523:22>
| `-NonNullAttr 0x5609c5e7f350 <col:63, col:80> 1 2
|-FunctionDecl 0x5609c5e7f558 <line:524:1, line:526:79> line:524:12 pthread_mutexattr_setpshared 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x5609c5e7f398 <col:42, col:63> col:63 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x5609c5e7f418 <line:525:7, col:11> col:11 __pshared 'int'
| |-NoThrowAttr 0x5609c5e7f608 <line:526:22>
| `-NonNullAttr 0x5609c5e7f660 <col:63, col:77> 1
|-FunctionDecl 0x5609c5e7f808 <line:527:1, line:529:82> line:527:12 pthread_mutexattr_gettype 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x5609c5e7f6a8 <col:39, line:528:11> col:11 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x5609c5e7f728 <col:19, col:35> col:35 __kind 'int *restrict'
| |-NoThrowAttr 0x5609c5e7f8b8 <line:529:22>
| `-NonNullAttr 0x5609c5e7f910 <col:63, col:80> 1 2
|-FunctionDecl 0x5609c5e7fb00 <line:530:1, line:531:79> line:530:12 pthread_mutexattr_settype 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x5609c5e7f958 <col:39, col:60> col:60 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x5609c5e7fa40 <col:68, col:72> col:72 __kind 'int'
| |-NoThrowAttr 0x5609c5e7fbb0 <line:531:22>
| `-NonNullAttr 0x5609c5e7fc08 <col:63, col:77> 1
|-FunctionDecl 0x5609c5e7fdb8 <line:532:1, line:535:82> line:532:12 pthread_mutexattr_getprotocol 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x5609c5e7fc58 <col:43, line:533:19> col:19 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x5609c5e7fcd8 <line:534:8, col:24> col:24 __protocol 'int *restrict'
| |-NoThrowAttr 0x5609c5e7fe68 <line:535:22>
| `-NonNullAttr 0x5609c5e7fec0 <col:63, col:80> 1 2
|-FunctionDecl 0x5609c5e80048 <line:536:1, line:538:79> line:536:12 pthread_mutexattr_setprotocol 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x5609c5e7ff08 <col:43, col:64> col:64 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x5609c5e7ff88 <line:537:8, col:12> col:12 __protocol 'int'
| |-NoThrowAttr 0x5609c5e800f8 <line:538:22>
| `-NonNullAttr 0x5609c5e80150 <col:63, col:77> 1
|-FunctionDecl 0x5609c5e802f8 <line:539:1, line:542:82> line:539:12 pthread_mutexattr_getprioceiling 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x5609c5e80198 <col:46, line:540:22> col:22 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x5609c5e80218 <line:541:11, col:27> col:27 __prioceiling 'int *restrict'
| |-NoThrowAttr 0x5609c5e803a8 <line:542:22>
| `-NonNullAttr 0x5609c5e80400 <col:63, col:80> 1 2
|-FunctionDecl 0x5609c5e80588 <line:543:1, line:545:79> line:543:12 pthread_mutexattr_setprioceiling 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x5609c5e80448 <col:46, col:67> col:67 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x5609c5e804c8 <line:544:11, col:15> col:15 __prioceiling 'int'
| |-NoThrowAttr 0x5609c5e80638 <line:545:22>
| `-NonNullAttr 0x5609c5e80690 <col:63, col:77> 1
|-FunctionDecl 0x5609c5e80878 <line:546:1, line:548:82> line:546:12 pthread_mutexattr_getrobust 'int (const pthread_mutexattr_t *, int *)' extern
| |-ParmVarDecl 0x5609c5e806d8 <col:41, col:68> col:68 __attr 'const pthread_mutexattr_t *'
| |-ParmVarDecl 0x5609c5e80758 <line:547:6, col:11> col:11 __robustness 'int *'
| |-NoThrowAttr 0x5609c5e80928 <line:548:22>
| `-NonNullAttr 0x5609c5e80980 <col:63, col:80> 1 2
|-FunctionDecl 0x5609c5e81b38 <line:549:1, line:551:79> line:549:12 pthread_mutexattr_setrobust 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x5609c5e809c8 <col:41, col:62> col:62 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x5609c5e81a78 <line:550:6, col:10> col:10 __robustness 'int'
| |-NoThrowAttr 0x5609c5e81be8 <line:551:22>
| `-NonNullAttr 0x5609c5e81c40 <col:63, col:77> 1
|-FunctionDecl 0x5609c5e81f78 <line:552:1, line:554:86> line:552:12 pthread_rwlock_init 'int (pthread_rwlock_t *restrict, const pthread_rwlockattr_t *restrict)' extern
| |-ParmVarDecl 0x5609c5e81d20 <col:33, col:62> col:62 __rwlock 'pthread_rwlock_t *restrict'
| |-ParmVarDecl 0x5609c5e81e30 <line:553:5, line:554:5> col:5 __attr 'const pthread_rwlockattr_t *restrict'
| |-NoThrowAttr 0x5609c5e82028 <col:29>
| `-NonNullAttr 0x5609c5e82080 <col:70, col:84> 1
|-FunctionDecl 0x5609c5e821f8 <line:555:1, line:556:79> line:555:12 pthread_rwlock_destroy 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x5609c5e820c8 <col:36, col:54> col:54 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x5609c5e822a0 <line:556:22>
| `-NonNullAttr 0x5609c5e822f8 <col:63, col:77> 1
|-FunctionDecl 0x5609c5e82400 <line:557:1, line:558:68> line:557:12 pthread_rwlock_rdlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x5609c5e82348 <col:35, col:53> col:53 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x5609c5e824a8 <line:558:22>
| `-NonNullAttr 0x5609c5e82500 <col:52, col:66> 1
|-FunctionDecl 0x5609c5e82600 <line:559:1, line:560:65> line:559:12 pthread_rwlock_tryrdlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x5609c5e82548 <col:38, col:56> col:56 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x5609c5e826a8 <line:560:19>
| `-NonNullAttr 0x5609c5e82700 <col:49, col:63> 1
|-FunctionDecl 0x5609c5e82938 <line:561:1, line:563:88> line:561:12 pthread_rwlock_timedrdlock 'int (pthread_rwlock_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x5609c5e82748 <col:40, col:69> col:69 __rwlock 'pthread_rwlock_t *restrict'
| |-ParmVarDecl 0x5609c5e827d8 <line:562:12, line:563:12> col:12 __abstime 'const struct timespec *restrict'
| |-NoThrowAttr 0x5609c5e829e8 <col:39>
| `-NonNullAttr 0x5609c5e82a70 <col:69, col:86> 1 2
|-FunctionDecl 0x5609c5e82b70 <line:564:1, line:565:68> line:564:12 pthread_rwlock_wrlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x5609c5e82ab8 <col:35, col:53> col:53 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x5609c5e82c18 <line:565:22>
| `-NonNullAttr 0x5609c5e82c70 <col:52, col:66> 1
|-FunctionDecl 0x5609c5e82d70 <line:566:1, line:567:68> line:566:12 pthread_rwlock_trywrlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x5609c5e82cb8 <col:38, col:56> col:56 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x5609c5e82e18 <line:567:22>
| `-NonNullAttr 0x5609c5e82e70 <col:52, col:66> 1
|-FunctionDecl 0x5609c5e83028 <line:568:1, line:570:88> line:568:12 pthread_rwlock_timedwrlock 'int (pthread_rwlock_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x5609c5e82eb8 <col:40, col:69> col:69 __rwlock 'pthread_rwlock_t *restrict'
| |-ParmVarDecl 0x5609c5e82f48 <line:569:12, line:570:12> col:12 __abstime 'const struct timespec *restrict'
| |-NoThrowAttr 0x5609c5e830d8 <col:39>
| `-NonNullAttr 0x5609c5e83130 <col:69, col:86> 1 2
|-FunctionDecl 0x5609c5e83230 <line:571:1, line:572:68> line:571:12 pthread_rwlock_unlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x5609c5e83178 <col:35, col:53> col:53 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x5609c5e832d8 <line:572:22>
| `-NonNullAttr 0x5609c5e83330 <col:52, col:66> 1
|-FunctionDecl 0x5609c5e83518 <line:573:1, line:574:79> line:573:12 pthread_rwlockattr_init 'int (pthread_rwlockattr_t *)' extern
| |-ParmVarDecl 0x5609c5e833e0 <col:37, col:59> col:59 __attr 'pthread_rwlockattr_t *'
| |-NoThrowAttr 0x5609c5e835c0 <line:574:22>
| `-NonNullAttr 0x5609c5e83618 <col:63, col:77> 1
|-FunctionDecl 0x5609c5e83720 <line:575:1, line:576:79> line:575:12 pthread_rwlockattr_destroy 'int (pthread_rwlockattr_t *)' extern
| |-ParmVarDecl 0x5609c5e83668 <col:40, col:62> col:62 __attr 'pthread_rwlockattr_t *'
| |-NoThrowAttr 0x5609c5e837c8 <line:576:22>
| `-NonNullAttr 0x5609c5e83820 <col:63, col:77> 1
|-FunctionDecl 0x5609c5e83a80 <line:577:1, line:580:82> line:577:12 pthread_rwlockattr_getpshared 'int (const pthread_rwlockattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x5609c5e83868 <col:43, line:578:19> col:19 __attr 'const pthread_rwlockattr_t *restrict'
| |-ParmVarDecl 0x5609c5e838e8 <line:579:8, col:24> col:24 __pshared 'int *restrict'
| |-NoThrowAttr 0x5609c5e83b30 <line:580:22>
| `-NonNullAttr 0x5609c5e83b88 <col:63, col:80> 1 2
|-FunctionDecl 0x5609c5e83d98 <line:581:1, line:583:79> line:581:12 pthread_rwlockattr_setpshared 'int (pthread_rwlockattr_t *, int)' extern
| |-ParmVarDecl 0x5609c5e83bd8 <col:43, col:65> col:65 __attr 'pthread_rwlockattr_t *'
| |-ParmVarDecl 0x5609c5e83c58 <line:582:8, col:12> col:12 __pshared 'int'
| |-NoThrowAttr 0x5609c5e83e48 <line:583:22>
| `-NonNullAttr 0x5609c5e83ea0 <col:63, col:77> 1
|-FunctionDecl 0x5609c5e84048 <line:584:1, line:587:82> line:584:12 pthread_rwlockattr_getkind_np 'int (const pthread_rwlockattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x5609c5e83ee8 <col:43, line:585:19> col:19 __attr 'const pthread_rwlockattr_t *restrict'
| |-ParmVarDecl 0x5609c5e83f68 <line:586:8, col:24> col:24 __pref 'int *restrict'
| |-NoThrowAttr 0x5609c5e840f8 <line:587:22>
| `-NonNullAttr 0x5609c5e84150 <col:63, col:80> 1 2
|-FunctionDecl 0x5609c5e842d8 <line:588:1, line:589:93> line:588:12 pthread_rwlockattr_setkind_np 'int (pthread_rwlockattr_t *, int)' extern
| |-ParmVarDecl 0x5609c5e84198 <col:43, col:65> col:65 __attr 'pthread_rwlockattr_t *'
| |-ParmVarDecl 0x5609c5e84218 <line:589:8, col:12> col:12 __pref 'int'
| |-NoThrowAttr 0x5609c5e84388 <col:36>
| `-NonNullAttr 0x5609c5e843e0 <col:77, col:91> 1
|-FunctionDecl 0x5609c5e84718 <line:590:1, line:592:79> line:590:12 pthread_cond_init 'int (pthread_cond_t *restrict, const pthread_condattr_t *restrict)' extern
| |-ParmVarDecl 0x5609c5e844c0 <col:31, col:58> col:58 __cond 'pthread_cond_t *restrict'
| |-ParmVarDecl 0x5609c5e845d0 <line:591:10, col:47> col:47 __cond_attr 'const pthread_condattr_t *restrict'
| |-NoThrowAttr 0x5609c5e847c8 <line:592:22>
| `-NonNullAttr 0x5609c5e84820 <col:63, col:77> 1
|-FunctionDecl 0x5609c5e84998 <line:593:1, line:594:79> line:593:12 pthread_cond_destroy 'int (pthread_cond_t *)' extern
| |-ParmVarDecl 0x5609c5e84868 <col:34, col:50> col:50 __cond 'pthread_cond_t *'
| |-NoThrowAttr 0x5609c5e84a40 <line:594:22>
| `-NonNullAttr 0x5609c5e84ac0 <col:63, col:77> 1
|-FunctionDecl 0x5609c5e84bc0 <line:595:1, line:596:68> line:595:12 pthread_cond_signal 'int (pthread_cond_t *)' extern
| |-ParmVarDecl 0x5609c5e84b08 <col:33, col:49> col:49 __cond 'pthread_cond_t *'
| |-NoThrowAttr 0x5609c5e84c68 <line:596:22>
| `-NonNullAttr 0x5609c5e84cc0 <col:52, col:66> 1
|-FunctionDecl 0x5609c5e84dc0 <line:597:1, line:598:68> line:597:12 pthread_cond_broadcast 'int (pthread_cond_t *)' extern
| |-ParmVarDecl 0x5609c5e84d08 <col:36, col:52> col:52 __cond 'pthread_cond_t *'
| |-NoThrowAttr 0x5609c5e84e68 <line:598:22>
| `-NonNullAttr 0x5609c5e84ec0 <col:52, col:66> 1
|-FunctionDecl 0x5609c5e850e8 <line:599:1, line:601:41> line:599:12 pthread_cond_wait 'int (pthread_cond_t *restrict, pthread_mutex_t *restrict)' extern
| |-ParmVarDecl 0x5609c5e84f08 <col:31, col:58> col:58 __cond 'pthread_cond_t *restrict'
| |-ParmVarDecl 0x5609c5e84f80 <line:600:10, col:38> col:38 __mutex 'pthread_mutex_t *restrict'
| `-NonNullAttr 0x5609c5e85198 <line:601:22, col:39> 1 2
|-FunctionDecl 0x5609c5e854c8 <line:602:1, line:605:44> line:602:12 pthread_cond_timedwait 'int (pthread_cond_t *restrict, pthread_mutex_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x5609c5e85218 <col:36, col:63> col:63 __cond 'pthread_cond_t *restrict'
| |-ParmVarDecl 0x5609c5e85290 <line:603:8, col:36> col:36 __mutex 'pthread_mutex_t *restrict'
| |-ParmVarDecl 0x5609c5e85320 <line:604:8, col:42> col:42 __abstime 'const struct timespec *restrict'
| `-NonNullAttr 0x5609c5e85580 <line:605:22, col:42> 1 2 3
|-FunctionDecl 0x5609c5e85798 <line:606:1, line:607:79> line:606:12 pthread_condattr_init 'int (pthread_condattr_t *)' extern
| |-ParmVarDecl 0x5609c5e85660 <col:35, col:55> col:55 __attr 'pthread_condattr_t *'
| |-NoThrowAttr 0x5609c5e85840 <line:607:22>
| `-NonNullAttr 0x5609c5e85898 <col:63, col:77> 1
|-FunctionDecl 0x5609c5e859a0 <line:608:1, line:609:79> line:608:12 pthread_condattr_destroy 'int (pthread_condattr_t *)' extern
| |-ParmVarDecl 0x5609c5e858e8 <col:38, col:58> col:58 __attr 'pthread_condattr_t *'
| |-NoThrowAttr 0x5609c5e85a48 <line:609:22>
| `-NonNullAttr 0x5609c5e85ad0 <col:63, col:77> 1
|-FunctionDecl 0x5609c5e85cf8 <line:610:1, line:613:82> line:610:12 pthread_condattr_getpshared 'int (const pthread_condattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x5609c5e85b18 <col:41, line:611:17> col:17 __attr 'const pthread_condattr_t *restrict'
| |-ParmVarDecl 0x5609c5e85b98 <line:612:6, col:22> col:22 __pshared 'int *restrict'
| |-NoThrowAttr 0x5609c5e85da8 <line:613:22>
| `-NonNullAttr 0x5609c5e85e00 <col:63, col:80> 1 2
|-FunctionDecl 0x5609c5e86008 <line:614:1, line:615:94> line:614:12 pthread_condattr_setpshared 'int (pthread_condattr_t *, int)' extern
| |-ParmVarDecl 0x5609c5e85e48 <col:41, col:61> col:61 __attr 'pthread_condattr_t *'
| |-ParmVarDecl 0x5609c5e85ec8 <line:615:6, col:10> col:10 __pshared 'int'
| |-NoThrowAttr 0x5609c5e860b8 <col:37>
| `-NonNullAttr 0x5609c5e86110 <col:78, col:92> 1
|-FunctionDecl 0x5609c5e86328 <line:616:1, line:619:82> line:616:12 pthread_condattr_getclock 'int (const pthread_condattr_t *restrict, __clockid_t *restrict)' extern
| |-ParmVarDecl 0x5609c5e86158 <col:39, line:617:22> col:22 __attr 'const pthread_condattr_t *restrict'
| |-ParmVarDecl 0x5609c5e86200 <line:618:11, col:35> col:35 __clock_id '__clockid_t *restrict'
| |-NoThrowAttr 0x5609c5e863d8 <line:619:22>
| `-NonNullAttr 0x5609c5e86430 <col:63, col:80> 1 2
|-FunctionDecl 0x5609c5e865f8 <line:620:1, line:622:79> line:620:12 pthread_condattr_setclock 'int (pthread_condattr_t *, __clockid_t)' extern
| |-ParmVarDecl 0x5609c5e86478 <col:39, col:59> col:59 __attr 'pthread_condattr_t *'
| |-ParmVarDecl 0x5609c5e864f0 <line:621:11, col:23> col:23 __clock_id '__clockid_t':'int'
| |-NoThrowAttr 0x5609c5e866a8 <line:622:22>
| `-NonNullAttr 0x5609c5e86700 <col:63, col:77> 1
|-FunctionDecl 0x5609c5e869a8 <line:623:1, line:624:79> line:623:12 pthread_spin_init 'int (pthread_spinlock_t *, int)' extern
| |-ParmVarDecl 0x5609c5e867e0 <col:31, col:51> col:51 __lock 'pthread_spinlock_t *'
| |-ParmVarDecl 0x5609c5e86860 <col:59, col:63> col:63 __pshared 'int'
| |-NoThrowAttr 0x5609c5e86a58 <line:624:22>
| `-NonNullAttr 0x5609c5e86ae0 <col:63, col:77> 1
|-FunctionDecl 0x5609c5e86c58 <line:625:1, line:626:79> line:625:12 pthread_spin_destroy 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x5609c5e86b28 <col:34, col:54> col:54 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x5609c5e86d00 <line:626:22>
| `-NonNullAttr 0x5609c5e86d58 <col:63, col:77> 1
|-FunctionDecl 0x5609c5e86e60 <line:627:1, line:628:68> line:627:12 pthread_spin_lock 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x5609c5e86da8 <col:31, col:51> col:51 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x5609c5e86f08 <line:628:22>
| `-NonNullAttr 0x5609c5e86f60 <col:52, col:66> 1
|-FunctionDecl 0x5609c5e87060 <line:629:1, line:630:68> line:629:12 pthread_spin_trylock 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x5609c5e86fa8 <col:34, col:54> col:54 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x5609c5e87108 <line:630:22>
| `-NonNullAttr 0x5609c5e87160 <col:52, col:66> 1
|-FunctionDecl 0x5609c5e87260 <line:631:1, line:632:68> line:631:12 pthread_spin_unlock 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x5609c5e871a8 <col:33, col:53> col:53 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x5609c5e87308 <line:632:22>
| `-NonNullAttr 0x5609c5e87360 <col:52, col:66> 1
|-FunctionDecl 0x5609c5e87738 <line:633:1, line:636:79> line:633:12 pthread_barrier_init 'int (pthread_barrier_t *restrict, const pthread_barrierattr_t *restrict, unsigned int)' extern
| |-ParmVarDecl 0x5609c5e87440 <col:34, col:64> col:64 __barrier 'pthread_barrier_t *restrict'
| |-ParmVarDecl 0x5609c5e87550 <line:634:6, line:635:6> col:6 __attr 'const pthread_barrierattr_t *restrict'
| |-ParmVarDecl 0x5609c5e875d0 <col:14, col:27> col:27 __count 'unsigned int'
| |-NoThrowAttr 0x5609c5e877f0 <line:636:22>
| `-NonNullAttr 0x5609c5e87848 <col:63, col:77> 1
|-FunctionDecl 0x5609c5e879c8 <line:637:1, line:638:79> line:637:12 pthread_barrier_destroy 'int (pthread_barrier_t *)' extern
| |-ParmVarDecl 0x5609c5e87898 <col:37, col:56> col:56 __barrier 'pthread_barrier_t *'
| |-NoThrowAttr 0x5609c5e87a70 <line:638:22>
| `-NonNullAttr 0x5609c5e88b00 <col:63, col:77> 1
|-FunctionDecl 0x5609c5e88c00 <line:639:1, line:640:68> line:639:12 pthread_barrier_wait 'int (pthread_barrier_t *)' extern
| |-ParmVarDecl 0x5609c5e88b48 <col:34, col:53> col:53 __barrier 'pthread_barrier_t *'
| |-NoThrowAttr 0x5609c5e88ca8 <line:640:22>
| `-NonNullAttr 0x5609c5e88d00 <col:52, col:66> 1
|-FunctionDecl 0x5609c5e88ee8 <line:641:1, line:642:79> line:641:12 pthread_barrierattr_init 'int (pthread_barrierattr_t *)' extern
| |-ParmVarDecl 0x5609c5e88db0 <col:38, col:61> col:61 __attr 'pthread_barrierattr_t *'
| |-NoThrowAttr 0x5609c5e88f90 <line:642:22>
| `-NonNullAttr 0x5609c5e88fe8 <col:63, col:77> 1
|-FunctionDecl 0x5609c5e890f0 <line:643:1, line:644:79> line:643:12 pthread_barrierattr_destroy 'int (pthread_barrierattr_t *)' extern
| |-ParmVarDecl 0x5609c5e89038 <col:41, col:64> col:64 __attr 'pthread_barrierattr_t *'
| |-NoThrowAttr 0x5609c5e89198 <line:644:22>
| `-NonNullAttr 0x5609c5e891f0 <col:63, col:77> 1
|-FunctionDecl 0x5609c5e89418 <line:645:1, line:648:82> line:645:12 pthread_barrierattr_getpshared 'int (const pthread_barrierattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x5609c5e89238 <col:44, line:646:20> col:20 __attr 'const pthread_barrierattr_t *restrict'
| |-ParmVarDecl 0x5609c5e892b8 <line:647:9, col:25> col:25 __pshared 'int *restrict'
| |-NoThrowAttr 0x5609c5e894c8 <line:648:22>
| `-NonNullAttr 0x5609c5e89520 <col:63, col:80> 1 2
|-FunctionDecl 0x5609c5e89728 <line:649:1, line:651:79> line:649:12 pthread_barrierattr_setpshared 'int (pthread_barrierattr_t *, int)' extern
| |-ParmVarDecl 0x5609c5e89568 <col:44, col:67> col:67 __attr 'pthread_barrierattr_t *'
| |-ParmVarDecl 0x5609c5e895e8 <line:650:9, col:13> col:13 __pshared 'int'
| |-NoThrowAttr 0x5609c5e897d8 <line:651:22>
| `-NonNullAttr 0x5609c5e89830 <col:63, col:77> 1
|-FunctionDecl 0x5609c5e89b98 <line:652:1, line:654:79> line:652:12 pthread_key_create 'int (pthread_key_t *, void (*)(void *))' extern
| |-ParmVarDecl 0x5609c5e89910 <col:32, col:47> col:47 __key 'pthread_key_t *'
| |-ParmVarDecl 0x5609c5e89a30 <line:653:11, col:43> col:18 __destr_function 'void (*)(void *)'
| |-NoThrowAttr 0x5609c5e89c48 <line:654:22>
| `-NonNullAttr 0x5609c5e89ca0 <col:63, col:77> 1
|-FunctionDecl 0x5609c5e89df8 <line:655:1, col:92> col:12 pthread_key_delete 'int (pthread_key_t)' extern
| |-ParmVarDecl 0x5609c5e89ce8 <col:32, col:46> col:46 __key 'pthread_key_t':'unsigned int'
| `-NoThrowAttr 0x5609c5e89ea0 <col:69>
|-FunctionDecl 0x5609c5e8a018 <line:656:1, col:95> col:14 pthread_getspecific 'void *(pthread_key_t)' extern
| |-ParmVarDecl 0x5609c5e89f08 <col:35, col:49> col:49 __key 'pthread_key_t':'unsigned int'
| `-NoThrowAttr 0x5609c5e8a0c0 <col:72>
|-FunctionDecl 0x5609c5e8a2f8 <line:657:1, line:658:67> line:657:12 pthread_setspecific 'int (pthread_key_t, const void *)' extern
| |-ParmVarDecl 0x5609c5e8a128 <col:33, col:47> col:47 __key 'pthread_key_t':'unsigned int'
| |-ParmVarDecl 0x5609c5e8a1d8 <line:658:5, col:17> col:17 __pointer 'const void *'
| `-NoThrowAttr 0x5609c5e8a3a8 <col:44>
|-FunctionDecl 0x5609c5e8a5c8 <line:659:1, line:661:79> line:659:12 pthread_getcpuclockid 'int (pthread_t, __clockid_t *)' extern
| |-ParmVarDecl 0x5609c5e8a410 <col:35, col:45> col:45 __thread_id 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x5609c5e8a488 <line:660:7, col:20> col:20 __clock_id '__clockid_t *'
| |-NoThrowAttr 0x5609c5e8a678 <line:661:22>
| `-NonNullAttr 0x5609c5e8a6d0 <col:63, col:77> 2
|-FunctionDecl 0x5609c5e8ab30 <line:662:1, line:664:70> line:662:12 pthread_atfork 'int (void (*)(void), void (*)(void), void (*)(void))' extern
| |-ParmVarDecl 0x5609c5e8a7b0 <col:28, col:51> col:35 __prepare 'void (*)(void)'
| |-ParmVarDecl 0x5609c5e8a8c0 <line:663:7, col:29> col:14 __parent 'void (*)(void)'
| |-ParmVarDecl 0x5609c5e8a9d0 <line:664:7, col:28> col:14 __child 'void (*)(void)'
| `-NoThrowAttr 0x5609c5e8abe8 <col:47>
|-FunctionDecl 0x5609c5e8acf0 <line:666:1, col:20> col:8 used P0 'void *(void *)'
| `-ParmVarDecl 0x5609c5e8ac58 <col:11, col:17> col:17 arg 'void *'
|-FunctionDecl 0x5609c5e8ae48 <line:667:1, col:20> col:8 used P1 'void *(void *)'
| `-ParmVarDecl 0x5609c5e8adb0 <col:11, col:17> col:17 arg 'void *'
|-FunctionDecl 0x5609c5e8afa0 <line:668:1, col:20> col:8 used P2 'void *(void *)'
| `-ParmVarDecl 0x5609c5e8af08 <col:11, col:17> col:17 arg 'void *'
|-FunctionDecl 0x5609c5e8b0f8 <line:669:1, col:20> col:8 used P3 'void *(void *)'
| `-ParmVarDecl 0x5609c5e8b060 <col:11, col:17> col:17 arg 'void *'
|-FunctionDecl 0x5609c5e8b1c0 <line:670:1, col:12> col:6 fence 'void ()'
|-FunctionDecl 0x5609c5e8b280 <line:671:1, col:12> col:6 isync 'void ()'
|-FunctionDecl 0x5609c5e8b340 <line:672:1, col:14> col:6 lwfence 'void ()'
|-VarDecl 0x5609c5e8b3f8 <line:673:1, col:5> col:5 used __unbuffered_cnt 'int'
|-VarDecl 0x5609c5e8b478 prev 0x5609c5e8b3f8 <line:674:1, col:24> col:5 used __unbuffered_cnt 'int' cinit
| `-IntegerLiteral 0x5609c5e8b4e0 <col:24> 'int' 0
|-VarDecl 0x5609c5e8b518 <line:675:1, col:5> col:5 used __unbuffered_p0_EAX 'int'
|-VarDecl 0x5609c5e8b598 prev 0x5609c5e8b518 <line:676:1, col:27> col:5 used __unbuffered_p0_EAX 'int' cinit
| `-IntegerLiteral 0x5609c5e8b600 <col:27> 'int' 0
|-VarDecl 0x5609c5e8b638 <line:677:1, col:5> col:5 used __unbuffered_p0_EBX 'int'
|-VarDecl 0x5609c5e8b6b8 prev 0x5609c5e8b638 <line:678:1, col:27> col:5 used __unbuffered_p0_EBX 'int' cinit
| `-IntegerLiteral 0x5609c5e8b720 <col:27> 'int' 0
|-VarDecl 0x5609c5e8b758 <line:679:1, col:5> col:5 used __unbuffered_p2_EAX 'int'
|-VarDecl 0x5609c5e8b7d8 prev 0x5609c5e8b758 <line:680:1, col:27> col:5 used __unbuffered_p2_EAX 'int' cinit
| `-IntegerLiteral 0x5609c5e8b840 <col:27> 'int' 0
|-VarDecl 0x5609c5e8b870 <line:681:1, col:7> col:7 __unbuffered_p2_EAX$flush_delayed '_Bool'
|-VarDecl 0x5609c5e8b8f0 <line:682:1, col:5> col:5 __unbuffered_p2_EAX$mem_tmp 'int'
|-VarDecl 0x5609c5e8b968 <line:683:1, col:7> col:7 __unbuffered_p2_EAX$r_buff0_thd0 '_Bool'
|-VarDecl 0x5609c5e8b9e0 <line:684:1, col:7> col:7 __unbuffered_p2_EAX$r_buff0_thd1 '_Bool'
|-VarDecl 0x5609c5e8ba58 <line:685:1, col:7> col:7 __unbuffered_p2_EAX$r_buff0_thd2 '_Bool'
|-VarDecl 0x5609c5e8bb00 <line:686:1, col:7> col:7 __unbuffered_p2_EAX$r_buff0_thd3 '_Bool'
|-VarDecl 0x5609c5e8bb78 <line:687:1, col:7> col:7 __unbuffered_p2_EAX$r_buff0_thd4 '_Bool'
|-VarDecl 0x5609c5e8bbf0 <line:688:1, col:7> col:7 __unbuffered_p2_EAX$r_buff1_thd0 '_Bool'
|-VarDecl 0x5609c5e8bc68 <line:689:1, col:7> col:7 __unbuffered_p2_EAX$r_buff1_thd1 '_Bool'
|-VarDecl 0x5609c5e8bce0 <line:690:1, col:7> col:7 __unbuffered_p2_EAX$r_buff1_thd2 '_Bool'
|-VarDecl 0x5609c5e8bd58 <line:691:1, col:7> col:7 __unbuffered_p2_EAX$r_buff1_thd3 '_Bool'
|-VarDecl 0x5609c5e8bdd0 <line:692:1, col:7> col:7 __unbuffered_p2_EAX$r_buff1_thd4 '_Bool'
|-VarDecl 0x5609c5e8be48 <line:693:1, col:7> col:7 used __unbuffered_p2_EAX$read_delayed '_Bool'
|-VarDecl 0x5609c5e8bec8 <line:694:1, col:6> col:6 used __unbuffered_p2_EAX$read_delayed_var 'int *'
|-VarDecl 0x5609c5e8bf48 <line:695:1, col:5> col:5 __unbuffered_p2_EAX$w_buff0 'int'
|-VarDecl 0x5609c5e8bfc0 <line:696:1, col:7> col:7 __unbuffered_p2_EAX$w_buff0_used '_Bool'
|-VarDecl 0x5609c5e8c040 <line:697:1, col:5> col:5 __unbuffered_p2_EAX$w_buff1 'int'
|-VarDecl 0x5609c5e8c0b8 <line:698:1, col:7> col:7 __unbuffered_p2_EAX$w_buff1_used '_Bool'
|-VarDecl 0x5609c5e8c130 <line:699:1, col:7> col:7 used main$tmp_guard0 '_Bool'
|-VarDecl 0x5609c5e8c1a8 <line:700:1, col:7> col:7 used main$tmp_guard1 '_Bool'
|-VarDecl 0x5609c5e8c228 <line:701:1, col:5> col:5 used x 'int'
|-VarDecl 0x5609c5e8c2a8 prev 0x5609c5e8c228 <line:702:1, col:9> col:5 used x 'int' cinit
| `-IntegerLiteral 0x5609c5e8c310 <col:9> 'int' 0
|-VarDecl 0x5609c5e8c340 <line:703:1, col:7> col:7 used x$flush_delayed '_Bool'
|-VarDecl 0x5609c5e8c3c0 <line:704:1, col:5> col:5 used x$mem_tmp 'int'
|-VarDecl 0x5609c5e8c438 <line:705:1, col:7> col:7 used x$r_buff0_thd0 '_Bool'
|-VarDecl 0x5609c5e8c4b0 <line:706:1, col:7> col:7 used x$r_buff0_thd1 '_Bool'
|-VarDecl 0x5609c5e8c528 <line:707:1, col:7> col:7 used x$r_buff0_thd2 '_Bool'
|-VarDecl 0x5609c5e8c5a0 <line:708:1, col:7> col:7 used x$r_buff0_thd3 '_Bool'
|-VarDecl 0x5609c5e8c618 <line:709:1, col:7> col:7 used x$r_buff0_thd4 '_Bool'
|-VarDecl 0x5609c5e8c690 <line:710:1, col:7> col:7 used x$r_buff1_thd0 '_Bool'
|-VarDecl 0x5609c5e8c708 <line:711:1, col:7> col:7 used x$r_buff1_thd1 '_Bool'
|-VarDecl 0x5609c5e8c780 <line:712:1, col:7> col:7 used x$r_buff1_thd2 '_Bool'
|-VarDecl 0x5609c5e8c7f8 <line:713:1, col:7> col:7 used x$r_buff1_thd3 '_Bool'
|-VarDecl 0x5609c5e8c870 <line:714:1, col:7> col:7 used x$r_buff1_thd4 '_Bool'
|-VarDecl 0x5609c5e8c8e8 <line:715:1, col:7> col:7 x$read_delayed '_Bool'
|-VarDecl 0x5609c5e8c968 <line:716:1, col:6> col:6 x$read_delayed_var 'int *'
|-VarDecl 0x5609c5e8c9e8 <line:717:1, col:5> col:5 used x$w_buff0 'int'
|-VarDecl 0x5609c5e8ca60 <line:718:1, col:7> col:7 used x$w_buff0_used '_Bool'
|-VarDecl 0x5609c5e8db20 <line:719:1, col:5> col:5 used x$w_buff1 'int'
|-VarDecl 0x5609c5e8db98 <line:720:1, col:7> col:7 used x$w_buff1_used '_Bool'
|-VarDecl 0x5609c5e8dc18 <line:721:1, col:5> col:5 used y 'int'
|-VarDecl 0x5609c5e8dc98 prev 0x5609c5e8dc18 <line:722:1, col:9> col:5 used y 'int' cinit
| `-IntegerLiteral 0x5609c5e8dd00 <col:9> 'int' 0
|-VarDecl 0x5609c5e8dd30 <line:723:1, col:7> col:7 used weak$$choice0 '_Bool'
|-VarDecl 0x5609c5e8dda8 <line:724:1, col:7> col:7 used weak$$choice1 '_Bool'
|-VarDecl 0x5609c5e8de20 <line:725:1, col:7> col:7 used weak$$choice2 '_Bool'
|-FunctionDecl 0x5609c5e8df38 prev 0x5609c5e8acf0 <line:726:1, line:753:1> line:726:8 used P0 'void *(void *)'
| |-ParmVarDecl 0x5609c5e8dea0 <col:11, col:17> col:17 arg 'void *'
| `-CompoundStmt 0x5609c5e90ea8 <line:727:1, line:753:1>
|   |-CallExpr 0x5609c5e8e048 <line:728:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x5609c5e8e030 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5609c5e8dfe0 <col:3> 'void ()' Function 0x5609c5e31fa0 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x5609c5e8e0c0 <line:729:3, col:25> 'int' '='
|   | |-DeclRefExpr 0x5609c5e8e068 <col:3> 'int' lvalue Var 0x5609c5e8b598 '__unbuffered_p0_EAX' 'int'
|   | `-ImplicitCastExpr 0x5609c5e8e0a8 <col:25> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x5609c5e8e088 <col:25> 'int' lvalue Var 0x5609c5e8dc98 'y' 'int'
|   |-CallExpr 0x5609c5e8e118 <line:730:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x5609c5e8e100 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5609c5e8e0e0 <col:3> 'void ()' Function 0x5609c5e32060 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x5609c5e8e170 <line:731:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x5609c5e8e158 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5609c5e8e138 <col:3> 'void ()' Function 0x5609c5e31fa0 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x5609c5e8e238 <line:732:3, col:42> '_Bool' '='
|   | |-DeclRefExpr 0x5609c5e8e190 <col:3> '_Bool' lvalue Var 0x5609c5e8dd30 'weak$$choice0' '_Bool'
|   | `-CallExpr 0x5609c5e8e218 <col:19, col:42> '_Bool'
|   |   `-ImplicitCastExpr 0x5609c5e8e200 <col:19> '_Bool (*)(void)' <FunctionToPointerDecay>
|   |     `-DeclRefExpr 0x5609c5e8e1b0 <col:19> '_Bool (void)' Function 0x5609c5e31770 '__VERIFIER_nondet_bool' '_Bool (void)'
|   |-BinaryOperator 0x5609c5e8e2d0 <line:733:3, col:42> '_Bool' '='
|   | |-DeclRefExpr 0x5609c5e8e258 <col:3> '_Bool' lvalue Var 0x5609c5e8de20 'weak$$choice2' '_Bool'
|   | `-CallExpr 0x5609c5e8e2b0 <col:19, col:42> '_Bool'
|   |   `-ImplicitCastExpr 0x5609c5e8e298 <col:19> '_Bool (*)(void)' <FunctionToPointerDecay>
|   |     `-DeclRefExpr 0x5609c5e8e278 <col:19> '_Bool (void)' Function 0x5609c5e31770 '__VERIFIER_nondet_bool' '_Bool (void)'
|   |-BinaryOperator 0x5609c5e8e348 <line:734:3, col:21> '_Bool' '='
|   | |-DeclRefExpr 0x5609c5e8e2f0 <col:3> '_Bool' lvalue Var 0x5609c5e8c340 'x$flush_delayed' '_Bool'
|   | `-ImplicitCastExpr 0x5609c5e8e330 <col:21> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x5609c5e8e310 <col:21> '_Bool' lvalue Var 0x5609c5e8de20 'weak$$choice2' '_Bool'
|   |-BinaryOperator 0x5609c5e8e3c0 <line:735:3, col:15> 'int' '='
|   | |-DeclRefExpr 0x5609c5e8e368 <col:3> 'int' lvalue Var 0x5609c5e8c3c0 'x$mem_tmp' 'int'
|   | `-ImplicitCastExpr 0x5609c5e8e3a8 <col:15> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x5609c5e8e388 <col:15> 'int' lvalue Var 0x5609c5e8c2a8 'x' 'int'
|   |-BinaryOperator 0x5609c5e8e7f8 <line:736:3, col:162> 'int' '='
|   | |-DeclRefExpr 0x5609c5e8e3e0 <col:3> 'int' lvalue Var 0x5609c5e8c2a8 'x' 'int'
|   | `-ConditionalOperator 0x5609c5e8e7c8 <col:7, col:162> 'int'
|   |   |-BinaryOperator 0x5609c5e8e5f0 <col:7, col:84> 'int' '||'
|   |   | |-BinaryOperator 0x5609c5e8e510 <col:7, col:46> 'int' '||'
|   |   | | |-UnaryOperator 0x5609c5e8e438 <col:7, col:8> 'int' prefix '!' cannot overflow
|   |   | | | `-ImplicitCastExpr 0x5609c5e8e420 <col:8> '_Bool' <LValueToRValue>
|   |   | | |   `-DeclRefExpr 0x5609c5e8e400 <col:8> '_Bool' lvalue Var 0x5609c5e8ca60 'x$w_buff0_used' '_Bool'
|   |   | | `-BinaryOperator 0x5609c5e8e4f0 <col:26, col:46> 'int' '&&'
|   |   | |   |-UnaryOperator 0x5609c5e8e488 <col:26, col:27> 'int' prefix '!' cannot overflow
|   |   | |   | `-ImplicitCastExpr 0x5609c5e8e470 <col:27> '_Bool' <LValueToRValue>
|   |   | |   |   `-DeclRefExpr 0x5609c5e8e450 <col:27> '_Bool' lvalue Var 0x5609c5e8c4b0 'x$r_buff0_thd1' '_Bool'
|   |   | |   `-UnaryOperator 0x5609c5e8e4d8 <col:45, col:46> 'int' prefix '!' cannot overflow
|   |   | |     `-ImplicitCastExpr 0x5609c5e8e4c0 <col:46> '_Bool' <LValueToRValue>
|   |   | |       `-DeclRefExpr 0x5609c5e8e4a0 <col:46> '_Bool' lvalue Var 0x5609c5e8db98 'x$w_buff1_used' '_Bool'
|   |   | `-BinaryOperator 0x5609c5e8e5d0 <col:64, col:84> 'int' '&&'
|   |   |   |-UnaryOperator 0x5609c5e8e568 <col:64, col:65> 'int' prefix '!' cannot overflow
|   |   |   | `-ImplicitCastExpr 0x5609c5e8e550 <col:65> '_Bool' <LValueToRValue>
|   |   |   |   `-DeclRefExpr 0x5609c5e8e530 <col:65> '_Bool' lvalue Var 0x5609c5e8c4b0 'x$r_buff0_thd1' '_Bool'
|   |   |   `-UnaryOperator 0x5609c5e8e5b8 <col:83, col:84> 'int' prefix '!' cannot overflow
|   |   |     `-ImplicitCastExpr 0x5609c5e8e5a0 <col:84> '_Bool' <LValueToRValue>
|   |   |       `-DeclRefExpr 0x5609c5e8e580 <col:84> '_Bool' lvalue Var 0x5609c5e8c708 'x$r_buff1_thd1' '_Bool'
|   |   |-ImplicitCastExpr 0x5609c5e8e7b0 <col:101> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x5609c5e8e610 <col:101> 'int' lvalue Var 0x5609c5e8c2a8 'x' 'int'
|   |   `-ParenExpr 0x5609c5e8e790 <col:105, col:162> 'int'
|   |     `-ConditionalOperator 0x5609c5e8e760 <col:106, col:153> 'int'
|   |       |-BinaryOperator 0x5609c5e8e6d0 <col:106, col:124> 'int' '&&'
|   |       | |-ImplicitCastExpr 0x5609c5e8e688 <col:106> 'int' <IntegralCast>
|   |       | | `-ImplicitCastExpr 0x5609c5e8e670 <col:106> '_Bool' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x5609c5e8e630 <col:106> '_Bool' lvalue Var 0x5609c5e8ca60 'x$w_buff0_used' '_Bool'
|   |       | `-ImplicitCastExpr 0x5609c5e8e6b8 <col:124> 'int' <IntegralCast>
|   |       |   `-ImplicitCastExpr 0x5609c5e8e6a0 <col:124> '_Bool' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x5609c5e8e650 <col:124> '_Bool' lvalue Var 0x5609c5e8c4b0 'x$r_buff0_thd1' '_Bool'
|   |       |-ImplicitCastExpr 0x5609c5e8e730 <col:141> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x5609c5e8e6f0 <col:141> 'int' lvalue Var 0x5609c5e8c9e8 'x$w_buff0' 'int'
|   |       `-ImplicitCastExpr 0x5609c5e8e748 <col:153> 'int' <LValueToRValue>
|   |         `-DeclRefExpr 0x5609c5e8e710 <col:153> 'int' lvalue Var 0x5609c5e8db20 'x$w_buff1' 'int'
|   |-BinaryOperator 0x5609c5e8ed20 <line:737:3, col:208> 'int' '='
|   | |-DeclRefExpr 0x5609c5e8e818 <col:3> 'int' lvalue Var 0x5609c5e8c9e8 'x$w_buff0' 'int'
|   | `-ConditionalOperator 0x5609c5e8ecf0 <col:15, col:208> 'int'
|   |   |-ImplicitCastExpr 0x5609c5e8ecc0 <col:15> 'int' <IntegralCast>
|   |   | `-ImplicitCastExpr 0x5609c5e8eca8 <col:15> '_Bool' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x5609c5e8e838 <col:15> '_Bool' lvalue Var 0x5609c5e8de20 'weak$$choice2' '_Bool'
|   |   |-ImplicitCastExpr 0x5609c5e8ecd8 <col:31> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x5609c5e8e858 <col:31> 'int' lvalue Var 0x5609c5e8c9e8 'x$w_buff0' 'int'
|   |   `-ParenExpr 0x5609c5e8ec88 <col:43, col:208> 'int'
|   |     `-ConditionalOperator 0x5609c5e8ec58 <col:44, col:207> 'int'
|   |       |-BinaryOperator 0x5609c5e8ea68 <col:44, col:121> 'int' '||'
|   |       | |-BinaryOperator 0x5609c5e8e988 <col:44, col:83> 'int' '||'
|   |       | | |-UnaryOperator 0x5609c5e8e8b0 <col:44, col:45> 'int' prefix '!' cannot overflow
|   |       | | | `-ImplicitCastExpr 0x5609c5e8e898 <col:45> '_Bool' <LValueToRValue>
|   |       | | |   `-DeclRefExpr 0x5609c5e8e878 <col:45> '_Bool' lvalue Var 0x5609c5e8ca60 'x$w_buff0_used' '_Bool'
|   |       | | `-BinaryOperator 0x5609c5e8e968 <col:63, col:83> 'int' '&&'
|   |       | |   |-UnaryOperator 0x5609c5e8e900 <col:63, col:64> 'int' prefix '!' cannot overflow
|   |       | |   | `-ImplicitCastExpr 0x5609c5e8e8e8 <col:64> '_Bool' <LValueToRValue>
|   |       | |   |   `-DeclRefExpr 0x5609c5e8e8c8 <col:64> '_Bool' lvalue Var 0x5609c5e8c4b0 'x$r_buff0_thd1' '_Bool'
|   |       | |   `-UnaryOperator 0x5609c5e8e950 <col:82, col:83> 'int' prefix '!' cannot overflow
|   |       | |     `-ImplicitCastExpr 0x5609c5e8e938 <col:83> '_Bool' <LValueToRValue>
|   |       | |       `-DeclRefExpr 0x5609c5e8e918 <col:83> '_Bool' lvalue Var 0x5609c5e8db98 'x$w_buff1_used' '_Bool'
|   |       | `-BinaryOperator 0x5609c5e8ea48 <col:101, col:121> 'int' '&&'
|   |       |   |-UnaryOperator 0x5609c5e8e9e0 <col:101, col:102> 'int' prefix '!' cannot overflow
|   |       |   | `-ImplicitCastExpr 0x5609c5e8e9c8 <col:102> '_Bool' <LValueToRValue>
|   |       |   |   `-DeclRefExpr 0x5609c5e8e9a8 <col:102> '_Bool' lvalue Var 0x5609c5e8c4b0 'x$r_buff0_thd1' '_Bool'
|   |       |   `-UnaryOperator 0x5609c5e8ea30 <col:120, col:121> 'int' prefix '!' cannot overflow
|   |       |     `-ImplicitCastExpr 0x5609c5e8ea18 <col:121> '_Bool' <LValueToRValue>
|   |       |       `-DeclRefExpr 0x5609c5e8e9f8 <col:121> '_Bool' lvalue Var 0x5609c5e8c708 'x$r_buff1_thd1' '_Bool'
|   |       |-ImplicitCastExpr 0x5609c5e8ec40 <col:138> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x5609c5e8ea88 <col:138> 'int' lvalue Var 0x5609c5e8c9e8 'x$w_buff0' 'int'
|   |       `-ParenExpr 0x5609c5e8ec20 <col:150, col:207> 'int'
|   |         `-ConditionalOperator 0x5609c5e8ebf0 <col:151, col:198> 'int'
|   |           |-BinaryOperator 0x5609c5e8eb60 <col:151, col:169> 'int' '&&'
|   |           | |-ImplicitCastExpr 0x5609c5e8eb00 <col:151> 'int' <IntegralCast>
|   |           | | `-ImplicitCastExpr 0x5609c5e8eae8 <col:151> '_Bool' <LValueToRValue>
|   |           | |   `-DeclRefExpr 0x5609c5e8eaa8 <col:151> '_Bool' lvalue Var 0x5609c5e8ca60 'x$w_buff0_used' '_Bool'
|   |           | `-ImplicitCastExpr 0x5609c5e8eb48 <col:169> 'int' <IntegralCast>
|   |           |   `-ImplicitCastExpr 0x5609c5e8eb30 <col:169> '_Bool' <LValueToRValue>
|   |           |     `-DeclRefExpr 0x5609c5e8eac8 <col:169> '_Bool' lvalue Var 0x5609c5e8c4b0 'x$r_buff0_thd1' '_Bool'
|   |           |-ImplicitCastExpr 0x5609c5e8ebc0 <col:186> 'int' <LValueToRValue>
|   |           | `-DeclRefExpr 0x5609c5e8eb80 <col:186> 'int' lvalue Var 0x5609c5e8c9e8 'x$w_buff0' 'int'
|   |           `-ImplicitCastExpr 0x5609c5e8ebd8 <col:198> 'int' <LValueToRValue>
|   |             `-DeclRefExpr 0x5609c5e8eba0 <col:198> 'int' lvalue Var 0x5609c5e8c9e8 'x$w_buff0' 'int'
|   |-BinaryOperator 0x5609c5e8f230 <line:738:3, col:208> 'int' '='
|   | |-DeclRefExpr 0x5609c5e8ed40 <col:3> 'int' lvalue Var 0x5609c5e8db20 'x$w_buff1' 'int'
|   | `-ConditionalOperator 0x5609c5e8f200 <col:15, col:208> 'int'
|   |   |-ImplicitCastExpr 0x5609c5e8f1d0 <col:15> 'int' <IntegralCast>
|   |   | `-ImplicitCastExpr 0x5609c5e8f1b8 <col:15> '_Bool' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x5609c5e8ed60 <col:15> '_Bool' lvalue Var 0x5609c5e8de20 'weak$$choice2' '_Bool'
|   |   |-ImplicitCastExpr 0x5609c5e8f1e8 <col:31> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x5609c5e8ed80 <col:31> 'int' lvalue Var 0x5609c5e8db20 'x$w_buff1' 'int'
|   |   `-ParenExpr 0x5609c5e8f198 <col:43, col:208> 'int'
|   |     `-ConditionalOperator 0x5609c5e8f168 <col:44, col:207> 'int'
|   |       |-BinaryOperator 0x5609c5e8ef90 <col:44, col:121> 'int' '||'
|   |       | |-BinaryOperator 0x5609c5e8eeb0 <col:44, col:83> 'int' '||'
|   |       | | |-UnaryOperator 0x5609c5e8edd8 <col:44, col:45> 'int' prefix '!' cannot overflow
|   |       | | | `-ImplicitCastExpr 0x5609c5e8edc0 <col:45> '_Bool' <LValueToRValue>
|   |       | | |   `-DeclRefExpr 0x5609c5e8eda0 <col:45> '_Bool' lvalue Var 0x5609c5e8ca60 'x$w_buff0_used' '_Bool'
|   |       | | `-BinaryOperator 0x5609c5e8ee90 <col:63, col:83> 'int' '&&'
|   |       | |   |-UnaryOperator 0x5609c5e8ee28 <col:63, col:64> 'int' prefix '!' cannot overflow
|   |       | |   | `-ImplicitCastExpr 0x5609c5e8ee10 <col:64> '_Bool' <LValueToRValue>
|   |       | |   |   `-DeclRefExpr 0x5609c5e8edf0 <col:64> '_Bool' lvalue Var 0x5609c5e8c4b0 'x$r_buff0_thd1' '_Bool'
|   |       | |   `-UnaryOperator 0x5609c5e8ee78 <col:82, col:83> 'int' prefix '!' cannot overflow
|   |       | |     `-ImplicitCastExpr 0x5609c5e8ee60 <col:83> '_Bool' <LValueToRValue>
|   |       | |       `-DeclRefExpr 0x5609c5e8ee40 <col:83> '_Bool' lvalue Var 0x5609c5e8db98 'x$w_buff1_used' '_Bool'
|   |       | `-BinaryOperator 0x5609c5e8ef70 <col:101, col:121> 'int' '&&'
|   |       |   |-UnaryOperator 0x5609c5e8ef08 <col:101, col:102> 'int' prefix '!' cannot overflow
|   |       |   | `-ImplicitCastExpr 0x5609c5e8eef0 <col:102> '_Bool' <LValueToRValue>
|   |       |   |   `-DeclRefExpr 0x5609c5e8eed0 <col:102> '_Bool' lvalue Var 0x5609c5e8c4b0 'x$r_buff0_thd1' '_Bool'
|   |       |   `-UnaryOperator 0x5609c5e8ef58 <col:120, col:121> 'int' prefix '!' cannot overflow
|   |       |     `-ImplicitCastExpr 0x5609c5e8ef40 <col:121> '_Bool' <LValueToRValue>
|   |       |       `-DeclRefExpr 0x5609c5e8ef20 <col:121> '_Bool' lvalue Var 0x5609c5e8c708 'x$r_buff1_thd1' '_Bool'
|   |       |-ImplicitCastExpr 0x5609c5e8f150 <col:138> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x5609c5e8efb0 <col:138> 'int' lvalue Var 0x5609c5e8db20 'x$w_buff1' 'int'
|   |       `-ParenExpr 0x5609c5e8f130 <col:150, col:207> 'int'
|   |         `-ConditionalOperator 0x5609c5e8f100 <col:151, col:198> 'int'
|   |           |-BinaryOperator 0x5609c5e8f070 <col:151, col:169> 'int' '&&'
|   |           | |-ImplicitCastExpr 0x5609c5e8f028 <col:151> 'int' <IntegralCast>
|   |           | | `-ImplicitCastExpr 0x5609c5e8f010 <col:151> '_Bool' <LValueToRValue>
|   |           | |   `-DeclRefExpr 0x5609c5e8efd0 <col:151> '_Bool' lvalue Var 0x5609c5e8ca60 'x$w_buff0_used' '_Bool'
|   |           | `-ImplicitCastExpr 0x5609c5e8f058 <col:169> 'int' <IntegralCast>
|   |           |   `-ImplicitCastExpr 0x5609c5e8f040 <col:169> '_Bool' <LValueToRValue>
|   |           |     `-DeclRefExpr 0x5609c5e8eff0 <col:169> '_Bool' lvalue Var 0x5609c5e8c4b0 'x$r_buff0_thd1' '_Bool'
|   |           |-ImplicitCastExpr 0x5609c5e8f0d0 <col:186> 'int' <LValueToRValue>
|   |           | `-DeclRefExpr 0x5609c5e8f090 <col:186> 'int' lvalue Var 0x5609c5e8db20 'x$w_buff1' 'int'
|   |           `-ImplicitCastExpr 0x5609c5e8f0e8 <col:198> 'int' <LValueToRValue>
|   |             `-DeclRefExpr 0x5609c5e8f0b0 <col:198> 'int' lvalue Var 0x5609c5e8db20 'x$w_buff1' 'int'
|   |-BinaryOperator 0x5609c5e8f7d8 <line:739:3, col:227> '_Bool' '='
|   | |-DeclRefExpr 0x5609c5e8f250 <col:3> '_Bool' lvalue Var 0x5609c5e8ca60 'x$w_buff0_used' '_Bool'
|   | `-ImplicitCastExpr 0x5609c5e8f7c0 <col:20, col:227> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x5609c5e8f790 <col:20, col:227> 'int'
|   |     |-ImplicitCastExpr 0x5609c5e8f748 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x5609c5e8f730 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x5609c5e8f270 <col:20> '_Bool' lvalue Var 0x5609c5e8de20 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x5609c5e8f778 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x5609c5e8f760 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x5609c5e8f290 <col:36> '_Bool' lvalue Var 0x5609c5e8ca60 'x$w_buff0_used' '_Bool'
|   |     `-ParenExpr 0x5609c5e8f710 <col:53, col:227> 'int'
|   |       `-ConditionalOperator 0x5609c5e8f6e0 <col:54, col:226> 'int'
|   |         |-BinaryOperator 0x5609c5e8f4a0 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x5609c5e8f3c0 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x5609c5e8f2e8 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x5609c5e8f2d0 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x5609c5e8f2b0 <col:55> '_Bool' lvalue Var 0x5609c5e8ca60 'x$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x5609c5e8f3a0 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x5609c5e8f338 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x5609c5e8f320 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x5609c5e8f300 <col:74> '_Bool' lvalue Var 0x5609c5e8c4b0 'x$r_buff0_thd1' '_Bool'
|   |         | |   `-UnaryOperator 0x5609c5e8f388 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x5609c5e8f370 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x5609c5e8f350 <col:93> '_Bool' lvalue Var 0x5609c5e8db98 'x$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x5609c5e8f480 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x5609c5e8f418 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x5609c5e8f400 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x5609c5e8f3e0 <col:112> '_Bool' lvalue Var 0x5609c5e8c4b0 'x$r_buff0_thd1' '_Bool'
|   |         |   `-UnaryOperator 0x5609c5e8f468 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x5609c5e8f450 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x5609c5e8f430 <col:131> '_Bool' lvalue Var 0x5609c5e8c708 'x$r_buff1_thd1' '_Bool'
|   |         |-ImplicitCastExpr 0x5609c5e8f6c8 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x5609c5e8f6b0 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x5609c5e8f4c0 <col:148> '_Bool' lvalue Var 0x5609c5e8ca60 'x$w_buff0_used' '_Bool'
|   |         `-ParenExpr 0x5609c5e8f690 <col:165, col:226> 'int'
|   |           `-ConditionalOperator 0x5609c5e8f660 <col:166, col:212> 'int'
|   |             |-BinaryOperator 0x5609c5e8f580 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x5609c5e8f538 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x5609c5e8f520 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x5609c5e8f4e0 <col:166> '_Bool' lvalue Var 0x5609c5e8ca60 'x$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x5609c5e8f568 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x5609c5e8f550 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x5609c5e8f500 <col:184> '_Bool' lvalue Var 0x5609c5e8c4b0 'x$r_buff0_thd1' '_Bool'
|   |             |-ImplicitCastExpr 0x5609c5e8f618 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x5609c5e8f5d0 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x5609c5e8f5a0 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x5609c5e8f648 <col:212> 'int' <IntegralCast>
|   |               `-ImplicitCastExpr 0x5609c5e8f630 <col:212> '_Bool' <LValueToRValue>
|   |                 `-DeclRefExpr 0x5609c5e8f5f8 <col:212> '_Bool' lvalue Var 0x5609c5e8ca60 'x$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x5609c5e8fdb8 <line:740:3, col:221> '_Bool' '='
|   | |-DeclRefExpr 0x5609c5e8f7f8 <col:3> '_Bool' lvalue Var 0x5609c5e8db98 'x$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x5609c5e8fda0 <col:20, col:221> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x5609c5e8fd70 <col:20, col:221> 'int'
|   |     |-ImplicitCastExpr 0x5609c5e8fd28 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x5609c5e8fd10 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x5609c5e8f818 <col:20> '_Bool' lvalue Var 0x5609c5e8de20 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x5609c5e8fd58 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x5609c5e8fd40 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x5609c5e8f838 <col:36> '_Bool' lvalue Var 0x5609c5e8db98 'x$w_buff1_used' '_Bool'
|   |     `-ParenExpr 0x5609c5e8fcf0 <col:53, col:221> 'int'
|   |       `-ConditionalOperator 0x5609c5e8fcc0 <col:54, col:220> 'int'
|   |         |-BinaryOperator 0x5609c5e8fa48 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x5609c5e8f968 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x5609c5e8f890 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x5609c5e8f878 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x5609c5e8f858 <col:55> '_Bool' lvalue Var 0x5609c5e8ca60 'x$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x5609c5e8f948 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x5609c5e8f8e0 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x5609c5e8f8c8 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x5609c5e8f8a8 <col:74> '_Bool' lvalue Var 0x5609c5e8c4b0 'x$r_buff0_thd1' '_Bool'
|   |         | |   `-UnaryOperator 0x5609c5e8f930 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x5609c5e8f918 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x5609c5e8f8f8 <col:93> '_Bool' lvalue Var 0x5609c5e8db98 'x$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x5609c5e8fa28 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x5609c5e8f9c0 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x5609c5e8f9a8 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x5609c5e8f988 <col:112> '_Bool' lvalue Var 0x5609c5e8c4b0 'x$r_buff0_thd1' '_Bool'
|   |         |   `-UnaryOperator 0x5609c5e8fa10 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x5609c5e8f9f8 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x5609c5e8f9d8 <col:131> '_Bool' lvalue Var 0x5609c5e8c708 'x$r_buff1_thd1' '_Bool'
|   |         |-ImplicitCastExpr 0x5609c5e8fca8 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x5609c5e8fc90 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x5609c5e8fa68 <col:148> '_Bool' lvalue Var 0x5609c5e8db98 'x$w_buff1_used' '_Bool'
|   |         `-ParenExpr 0x5609c5e8fc70 <col:165, col:220> 'int'
|   |           `-ConditionalOperator 0x5609c5e8fc40 <col:166, col:219> 'int'
|   |             |-BinaryOperator 0x5609c5e8fb40 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x5609c5e8fae0 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x5609c5e8fac8 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x5609c5e8fa88 <col:166> '_Bool' lvalue Var 0x5609c5e8ca60 'x$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x5609c5e8fb10 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x5609c5e8faf8 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x5609c5e8faa8 <col:184> '_Bool' lvalue Var 0x5609c5e8c4b0 'x$r_buff0_thd1' '_Bool'
|   |             |-ImplicitCastExpr 0x5609c5e8fc10 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x5609c5e8fb90 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x5609c5e8fb60 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x5609c5e8fc28 <col:212, col:219> 'int' <IntegralCast>
|   |               `-CStyleCastExpr 0x5609c5e8fbe8 <col:212, col:219> '_Bool' <IntegralToBoolean>
|   |                 `-IntegerLiteral 0x5609c5e8fbb8 <col:219> 'int' 0
|   |-BinaryOperator 0x5609c5e90360 <line:741:3, col:227> '_Bool' '='
|   | |-DeclRefExpr 0x5609c5e8fdd8 <col:3> '_Bool' lvalue Var 0x5609c5e8c4b0 'x$r_buff0_thd1' '_Bool'
|   | `-ImplicitCastExpr 0x5609c5e90348 <col:20, col:227> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x5609c5e90318 <col:20, col:227> 'int'
|   |     |-ImplicitCastExpr 0x5609c5e902d0 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x5609c5e902b8 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x5609c5e8fdf8 <col:20> '_Bool' lvalue Var 0x5609c5e8de20 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x5609c5e90300 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x5609c5e902e8 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x5609c5e8fe18 <col:36> '_Bool' lvalue Var 0x5609c5e8c4b0 'x$r_buff0_thd1' '_Bool'
|   |     `-ParenExpr 0x5609c5e90298 <col:53, col:227> 'int'
|   |       `-ConditionalOperator 0x5609c5e90268 <col:54, col:226> 'int'
|   |         |-BinaryOperator 0x5609c5e90028 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x5609c5e8ff48 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x5609c5e8fe70 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x5609c5e8fe58 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x5609c5e8fe38 <col:55> '_Bool' lvalue Var 0x5609c5e8ca60 'x$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x5609c5e8ff28 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x5609c5e8fec0 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x5609c5e8fea8 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x5609c5e8fe88 <col:74> '_Bool' lvalue Var 0x5609c5e8c4b0 'x$r_buff0_thd1' '_Bool'
|   |         | |   `-UnaryOperator 0x5609c5e8ff10 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x5609c5e8fef8 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x5609c5e8fed8 <col:93> '_Bool' lvalue Var 0x5609c5e8db98 'x$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x5609c5e90008 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x5609c5e8ffa0 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x5609c5e8ff88 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x5609c5e8ff68 <col:112> '_Bool' lvalue Var 0x5609c5e8c4b0 'x$r_buff0_thd1' '_Bool'
|   |         |   `-UnaryOperator 0x5609c5e8fff0 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x5609c5e8ffd8 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x5609c5e8ffb8 <col:131> '_Bool' lvalue Var 0x5609c5e8c708 'x$r_buff1_thd1' '_Bool'
|   |         |-ImplicitCastExpr 0x5609c5e90250 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x5609c5e90238 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x5609c5e90048 <col:148> '_Bool' lvalue Var 0x5609c5e8c4b0 'x$r_buff0_thd1' '_Bool'
|   |         `-ParenExpr 0x5609c5e90218 <col:165, col:226> 'int'
|   |           `-ConditionalOperator 0x5609c5e901e8 <col:166, col:212> 'int'
|   |             |-BinaryOperator 0x5609c5e90108 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x5609c5e900c0 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x5609c5e900a8 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x5609c5e90068 <col:166> '_Bool' lvalue Var 0x5609c5e8ca60 'x$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x5609c5e900f0 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x5609c5e900d8 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x5609c5e90088 <col:184> '_Bool' lvalue Var 0x5609c5e8c4b0 'x$r_buff0_thd1' '_Bool'
|   |             |-ImplicitCastExpr 0x5609c5e901a0 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x5609c5e90158 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x5609c5e90128 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x5609c5e901d0 <col:212> 'int' <IntegralCast>
|   |               `-ImplicitCastExpr 0x5609c5e901b8 <col:212> '_Bool' <LValueToRValue>
|   |                 `-DeclRefExpr 0x5609c5e90180 <col:212> '_Bool' lvalue Var 0x5609c5e8c4b0 'x$r_buff0_thd1' '_Bool'
|   |-BinaryOperator 0x5609c5e90928 <line:742:3, col:221> '_Bool' '='
|   | |-DeclRefExpr 0x5609c5e90380 <col:3> '_Bool' lvalue Var 0x5609c5e8c708 'x$r_buff1_thd1' '_Bool'
|   | `-ImplicitCastExpr 0x5609c5e90910 <col:20, col:221> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x5609c5e908e0 <col:20, col:221> 'int'
|   |     |-ImplicitCastExpr 0x5609c5e90898 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x5609c5e90880 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x5609c5e903a0 <col:20> '_Bool' lvalue Var 0x5609c5e8de20 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x5609c5e908c8 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x5609c5e908b0 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x5609c5e903c0 <col:36> '_Bool' lvalue Var 0x5609c5e8c708 'x$r_buff1_thd1' '_Bool'
|   |     `-ParenExpr 0x5609c5e90860 <col:53, col:221> 'int'
|   |       `-ConditionalOperator 0x5609c5e90830 <col:54, col:220> 'int'
|   |         |-BinaryOperator 0x5609c5e905d0 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x5609c5e904f0 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x5609c5e90418 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x5609c5e90400 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x5609c5e903e0 <col:55> '_Bool' lvalue Var 0x5609c5e8ca60 'x$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x5609c5e904d0 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x5609c5e90468 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x5609c5e90450 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x5609c5e90430 <col:74> '_Bool' lvalue Var 0x5609c5e8c4b0 'x$r_buff0_thd1' '_Bool'
|   |         | |   `-UnaryOperator 0x5609c5e904b8 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x5609c5e904a0 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x5609c5e90480 <col:93> '_Bool' lvalue Var 0x5609c5e8db98 'x$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x5609c5e905b0 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x5609c5e90548 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x5609c5e90530 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x5609c5e90510 <col:112> '_Bool' lvalue Var 0x5609c5e8c4b0 'x$r_buff0_thd1' '_Bool'
|   |         |   `-UnaryOperator 0x5609c5e90598 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x5609c5e90580 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x5609c5e90560 <col:131> '_Bool' lvalue Var 0x5609c5e8c708 'x$r_buff1_thd1' '_Bool'
|   |         |-ImplicitCastExpr 0x5609c5e90818 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x5609c5e90800 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x5609c5e905f0 <col:148> '_Bool' lvalue Var 0x5609c5e8c708 'x$r_buff1_thd1' '_Bool'
|   |         `-ParenExpr 0x5609c5e907e0 <col:165, col:220> 'int'
|   |           `-ConditionalOperator 0x5609c5e907b0 <col:166, col:219> 'int'
|   |             |-BinaryOperator 0x5609c5e906b0 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x5609c5e90668 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x5609c5e90650 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x5609c5e90610 <col:166> '_Bool' lvalue Var 0x5609c5e8ca60 'x$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x5609c5e90698 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x5609c5e90680 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x5609c5e90630 <col:184> '_Bool' lvalue Var 0x5609c5e8c4b0 'x$r_buff0_thd1' '_Bool'
|   |             |-ImplicitCastExpr 0x5609c5e90780 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x5609c5e90700 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x5609c5e906d0 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x5609c5e90798 <col:212, col:219> 'int' <IntegralCast>
|   |               `-CStyleCastExpr 0x5609c5e90758 <col:212, col:219> '_Bool' <IntegralToBoolean>
|   |                 `-IntegerLiteral 0x5609c5e90728 <col:219> 'int' 0
|   |-BinaryOperator 0x5609c5e909a0 <line:743:3, col:25> 'int' '='
|   | |-DeclRefExpr 0x5609c5e90948 <col:3> 'int' lvalue Var 0x5609c5e8b6b8 '__unbuffered_p0_EBX' 'int'
|   | `-ImplicitCastExpr 0x5609c5e90988 <col:25> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x5609c5e90968 <col:25> 'int' lvalue Var 0x5609c5e8c2a8 'x' 'int'
|   |-BinaryOperator 0x5609c5e90ad0 <line:744:3, col:37> 'int' '='
|   | |-DeclRefExpr 0x5609c5e909c0 <col:3> 'int' lvalue Var 0x5609c5e8c2a8 'x' 'int'
|   | `-ConditionalOperator 0x5609c5e90aa0 <col:7, col:37> 'int'
|   |   |-ImplicitCastExpr 0x5609c5e90a58 <col:7> 'int' <IntegralCast>
|   |   | `-ImplicitCastExpr 0x5609c5e90a40 <col:7> '_Bool' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x5609c5e909e0 <col:7> '_Bool' lvalue Var 0x5609c5e8c340 'x$flush_delayed' '_Bool'
|   |   |-ImplicitCastExpr 0x5609c5e90a70 <col:25> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x5609c5e90a00 <col:25> 'int' lvalue Var 0x5609c5e8c3c0 'x$mem_tmp' 'int'
|   |   `-ImplicitCastExpr 0x5609c5e90a88 <col:37> 'int' <LValueToRValue>
|   |     `-DeclRefExpr 0x5609c5e90a20 <col:37> 'int' lvalue Var 0x5609c5e8c2a8 'x' 'int'
|   |-BinaryOperator 0x5609c5e90b78 <line:745:3, col:28> '_Bool' '='
|   | |-DeclRefExpr 0x5609c5e90af0 <col:3> '_Bool' lvalue Var 0x5609c5e8c340 'x$flush_delayed' '_Bool'
|   | `-CStyleCastExpr 0x5609c5e90b50 <col:21, col:28> '_Bool' <IntegralToBoolean>
|   |   `-IntegerLiteral 0x5609c5e90b10 <col:28> 'int' 0
|   |-CallExpr 0x5609c5e90bd0 <line:746:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x5609c5e90bb8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5609c5e90b98 <col:3> 'void ()' Function 0x5609c5e32060 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x5609c5e90c28 <line:747:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x5609c5e90c10 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5609c5e90bf0 <col:3> 'void ()' Function 0x5609c5e31fa0 '__VERIFIER_atomic_begin' 'void ()'
|   |-CallExpr 0x5609c5e90c80 <line:748:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x5609c5e90c68 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5609c5e90c48 <col:3> 'void ()' Function 0x5609c5e32060 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x5609c5e90cd8 <line:749:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x5609c5e90cc0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5609c5e90ca0 <col:3> 'void ()' Function 0x5609c5e31fa0 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x5609c5e90d90 <line:750:3, col:41> 'int' '='
|   | |-DeclRefExpr 0x5609c5e90cf8 <col:3> 'int' lvalue Var 0x5609c5e8b478 '__unbuffered_cnt' 'int'
|   | `-BinaryOperator 0x5609c5e90d70 <col:22, col:41> 'int' '+'
|   |   |-ImplicitCastExpr 0x5609c5e90d58 <col:22> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x5609c5e90d18 <col:22> 'int' lvalue Var 0x5609c5e8b478 '__unbuffered_cnt' 'int'
|   |   `-IntegerLiteral 0x5609c5e90d38 <col:41> 'int' 1
|   |-CallExpr 0x5609c5e90de8 <line:751:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x5609c5e90dd0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5609c5e90db0 <col:3> 'void ()' Function 0x5609c5e32060 '__VERIFIER_atomic_end' 'void ()'
|   `-ReturnStmt 0x5609c5e90e98 <line:752:3, col:36>
|     `-CallExpr 0x5609c5e90e78 <col:10, col:36> 'void *'
|       `-ImplicitCastExpr 0x5609c5e90e60 <col:10> 'void *(*)(void)' <FunctionToPointerDecay>
|         `-DeclRefExpr 0x5609c5e90e08 <col:10> 'void *(void)' Function 0x5609c5e31ab8 '__VERIFIER_nondet_pointer' 'void *(void)'
|-FunctionDecl 0x5609c5e91030 prev 0x5609c5e8ae48 <line:754:1, line:780:1> line:754:8 used P1 'void *(void *)'
| |-ParmVarDecl 0x5609c5e90f98 <col:11, col:17> col:17 arg 'void *'
| `-CompoundStmt 0x5609c5e92748 <line:755:1, line:780:1>
|   |-CallExpr 0x5609c5e91110 <line:756:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x5609c5e910f8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5609c5e910d8 <col:3> 'void ()' Function 0x5609c5e31fa0 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x5609c5e91188 <line:757:3, col:15> 'int' '='
|   | |-DeclRefExpr 0x5609c5e91130 <col:3> 'int' lvalue Var 0x5609c5e8db20 'x$w_buff1' 'int'
|   | `-ImplicitCastExpr 0x5609c5e91170 <col:15> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x5609c5e91150 <col:15> 'int' lvalue Var 0x5609c5e8c9e8 'x$w_buff0' 'int'
|   |-BinaryOperator 0x5609c5e911e8 <line:758:3, col:15> 'int' '='
|   | |-DeclRefExpr 0x5609c5e911a8 <col:3> 'int' lvalue Var 0x5609c5e8c9e8 'x$w_buff0' 'int'
|   | `-IntegerLiteral 0x5609c5e911c8 <col:15> 'int' 1
|   |-BinaryOperator 0x5609c5e91260 <line:759:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x5609c5e91208 <col:3> '_Bool' lvalue Var 0x5609c5e8db98 'x$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x5609c5e91248 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x5609c5e91228 <col:20> '_Bool' lvalue Var 0x5609c5e8ca60 'x$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x5609c5e912f8 <line:760:3, col:27> '_Bool' '='
|   | |-DeclRefExpr 0x5609c5e91280 <col:3> '_Bool' lvalue Var 0x5609c5e8ca60 'x$w_buff0_used' '_Bool'
|   | `-CStyleCastExpr 0x5609c5e912d0 <col:20, col:27> '_Bool' <IntegralToBoolean>
|   |   `-IntegerLiteral 0x5609c5e912a0 <col:27> 'int' 1
|   |-CallExpr 0x5609c5e91478 <line:761:3, col:56> 'void'
|   | |-ImplicitCastExpr 0x5609c5e91460 <col:3> 'void (*)(int)' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x5609c5e91318 <col:3> 'void (int)' Function 0x5609c5e31d28 '__VERIFIER_assert' 'void (int)'
|   | `-UnaryOperator 0x5609c5e91418 <col:21, col:55> 'int' prefix '!' cannot overflow
|   |   `-ParenExpr 0x5609c5e913f8 <col:22, col:55> 'int'
|   |     `-BinaryOperator 0x5609c5e913d8 <col:23, col:41> 'int' '&&'
|   |       |-ImplicitCastExpr 0x5609c5e91390 <col:23> 'int' <IntegralCast>
|   |       | `-ImplicitCastExpr 0x5609c5e91378 <col:23> '_Bool' <LValueToRValue>
|   |       |   `-DeclRefExpr 0x5609c5e91338 <col:23> '_Bool' lvalue Var 0x5609c5e8db98 'x$w_buff1_used' '_Bool'
|   |       `-ImplicitCastExpr 0x5609c5e913c0 <col:41> 'int' <IntegralCast>
|   |         `-ImplicitCastExpr 0x5609c5e913a8 <col:41> '_Bool' <LValueToRValue>
|   |           `-DeclRefExpr 0x5609c5e91358 <col:41> '_Bool' lvalue Var 0x5609c5e8ca60 'x$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x5609c5e914f8 <line:762:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x5609c5e914a0 <col:3> '_Bool' lvalue Var 0x5609c5e8c690 'x$r_buff1_thd0' '_Bool'
|   | `-ImplicitCastExpr 0x5609c5e914e0 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x5609c5e914c0 <col:20> '_Bool' lvalue Var 0x5609c5e8c438 'x$r_buff0_thd0' '_Bool'
|   |-BinaryOperator 0x5609c5e91570 <line:763:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x5609c5e91518 <col:3> '_Bool' lvalue Var 0x5609c5e8c708 'x$r_buff1_thd1' '_Bool'
|   | `-ImplicitCastExpr 0x5609c5e91558 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x5609c5e91538 <col:20> '_Bool' lvalue Var 0x5609c5e8c4b0 'x$r_buff0_thd1' '_Bool'
|   |-BinaryOperator 0x5609c5e915e8 <line:764:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x5609c5e91590 <col:3> '_Bool' lvalue Var 0x5609c5e8c780 'x$r_buff1_thd2' '_Bool'
|   | `-ImplicitCastExpr 0x5609c5e915d0 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x5609c5e915b0 <col:20> '_Bool' lvalue Var 0x5609c5e8c528 'x$r_buff0_thd2' '_Bool'
|   |-BinaryOperator 0x5609c5e91660 <line:765:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x5609c5e91608 <col:3> '_Bool' lvalue Var 0x5609c5e8c7f8 'x$r_buff1_thd3' '_Bool'
|   | `-ImplicitCastExpr 0x5609c5e91648 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x5609c5e91628 <col:20> '_Bool' lvalue Var 0x5609c5e8c5a0 'x$r_buff0_thd3' '_Bool'
|   |-BinaryOperator 0x5609c5e916d8 <line:766:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x5609c5e91680 <col:3> '_Bool' lvalue Var 0x5609c5e8c870 'x$r_buff1_thd4' '_Bool'
|   | `-ImplicitCastExpr 0x5609c5e916c0 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x5609c5e916a0 <col:20> '_Bool' lvalue Var 0x5609c5e8c618 'x$r_buff0_thd4' '_Bool'
|   |-BinaryOperator 0x5609c5e91770 <line:767:3, col:27> '_Bool' '='
|   | |-DeclRefExpr 0x5609c5e916f8 <col:3> '_Bool' lvalue Var 0x5609c5e8c528 'x$r_buff0_thd2' '_Bool'
|   | `-CStyleCastExpr 0x5609c5e91748 <col:20, col:27> '_Bool' <IntegralToBoolean>
|   |   `-IntegerLiteral 0x5609c5e91718 <col:27> 'int' 1
|   |-CallExpr 0x5609c5e917c8 <line:768:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x5609c5e917b0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5609c5e91790 <col:3> 'void ()' Function 0x5609c5e32060 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x5609c5e91820 <line:769:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x5609c5e91808 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5609c5e917e8 <col:3> 'void ()' Function 0x5609c5e31fa0 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x5609c5e91b08 <line:770:3, col:103> 'int' '='
|   | |-DeclRefExpr 0x5609c5e91840 <col:3> 'int' lvalue Var 0x5609c5e8c2a8 'x' 'int'
|   | `-ConditionalOperator 0x5609c5e91ad8 <col:7, col:103> 'int'
|   |   |-BinaryOperator 0x5609c5e91900 <col:7, col:25> 'int' '&&'
|   |   | |-ImplicitCastExpr 0x5609c5e918b8 <col:7> 'int' <IntegralCast>
|   |   | | `-ImplicitCastExpr 0x5609c5e918a0 <col:7> '_Bool' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x5609c5e91860 <col:7> '_Bool' lvalue Var 0x5609c5e8ca60 'x$w_buff0_used' '_Bool'
|   |   | `-ImplicitCastExpr 0x5609c5e918e8 <col:25> 'int' <IntegralCast>
|   |   |   `-ImplicitCastExpr 0x5609c5e918d0 <col:25> '_Bool' <LValueToRValue>
|   |   |     `-DeclRefExpr 0x5609c5e91880 <col:25> '_Bool' lvalue Var 0x5609c5e8c528 'x$r_buff0_thd2' '_Bool'
|   |   |-ImplicitCastExpr 0x5609c5e91ac0 <col:42> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x5609c5e91920 <col:42> 'int' lvalue Var 0x5609c5e8c9e8 'x$w_buff0' 'int'
|   |   `-ParenExpr 0x5609c5e91aa0 <col:54, col:103> 'int'
|   |     `-ConditionalOperator 0x5609c5e91a70 <col:55, col:102> 'int'
|   |       |-BinaryOperator 0x5609c5e919e0 <col:55, col:73> 'int' '&&'
|   |       | |-ImplicitCastExpr 0x5609c5e91998 <col:55> 'int' <IntegralCast>
|   |       | | `-ImplicitCastExpr 0x5609c5e91980 <col:55> '_Bool' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x5609c5e91940 <col:55> '_Bool' lvalue Var 0x5609c5e8db98 'x$w_buff1_used' '_Bool'
|   |       | `-ImplicitCastExpr 0x5609c5e919c8 <col:73> 'int' <IntegralCast>
|   |       |   `-ImplicitCastExpr 0x5609c5e919b0 <col:73> '_Bool' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x5609c5e91960 <col:73> '_Bool' lvalue Var 0x5609c5e8c780 'x$r_buff1_thd2' '_Bool'
|   |       |-ImplicitCastExpr 0x5609c5e91a40 <col:90> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x5609c5e91a00 <col:90> 'int' lvalue Var 0x5609c5e8db20 'x$w_buff1' 'int'
|   |       `-ImplicitCastExpr 0x5609c5e91a58 <col:102> 'int' <LValueToRValue>
|   |         `-DeclRefExpr 0x5609c5e91a20 <col:102> 'int' lvalue Var 0x5609c5e8c2a8 'x' 'int'
|   |-BinaryOperator 0x5609c5e91d28 <line:771:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x5609c5e91b28 <col:3> '_Bool' lvalue Var 0x5609c5e8ca60 'x$w_buff0_used' '_Bool'
|   | `-ImplicitCastExpr 0x5609c5e91d10 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x5609c5e91ce0 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x5609c5e91c00 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x5609c5e91bb8 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x5609c5e91ba0 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x5609c5e91b60 <col:20> '_Bool' lvalue Var 0x5609c5e8ca60 'x$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x5609c5e91be8 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x5609c5e91bd0 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x5609c5e91b80 <col:38> '_Bool' lvalue Var 0x5609c5e8c528 'x$r_buff0_thd2' '_Bool'
|   |     |-ImplicitCastExpr 0x5609c5e91c98 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x5609c5e91c50 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x5609c5e91c20 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x5609c5e91cc8 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x5609c5e91cb0 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x5609c5e91c78 <col:66> '_Bool' lvalue Var 0x5609c5e8ca60 'x$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x5609c5e92010 <line:772:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x5609c5e91d48 <col:3> '_Bool' lvalue Var 0x5609c5e8db98 'x$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x5609c5e91ff8 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x5609c5e91fc8 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x5609c5e91ee8 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x5609c5e91e08 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x5609c5e91dc0 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x5609c5e91da8 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x5609c5e91d68 <col:20> '_Bool' lvalue Var 0x5609c5e8ca60 'x$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x5609c5e91df0 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x5609c5e91dd8 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x5609c5e91d88 <col:38> '_Bool' lvalue Var 0x5609c5e8c528 'x$r_buff0_thd2' '_Bool'
|   |     | `-BinaryOperator 0x5609c5e91ec8 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x5609c5e91e80 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x5609c5e91e68 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x5609c5e91e28 <col:56> '_Bool' lvalue Var 0x5609c5e8db98 'x$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x5609c5e91eb0 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x5609c5e91e98 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x5609c5e91e48 <col:74> '_Bool' lvalue Var 0x5609c5e8c780 'x$r_buff1_thd2' '_Bool'
|   |     |-ImplicitCastExpr 0x5609c5e91f80 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x5609c5e91f38 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x5609c5e91f08 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x5609c5e91fb0 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x5609c5e91f98 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x5609c5e91f60 <col:102> '_Bool' lvalue Var 0x5609c5e8db98 'x$w_buff1_used' '_Bool'
|   |-BinaryOperator 0x5609c5e92218 <line:773:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x5609c5e92030 <col:3> '_Bool' lvalue Var 0x5609c5e8c528 'x$r_buff0_thd2' '_Bool'
|   | `-ImplicitCastExpr 0x5609c5e92200 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x5609c5e921d0 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x5609c5e920f0 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x5609c5e920a8 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x5609c5e92090 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x5609c5e92050 <col:20> '_Bool' lvalue Var 0x5609c5e8ca60 'x$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x5609c5e920d8 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x5609c5e920c0 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x5609c5e92070 <col:38> '_Bool' lvalue Var 0x5609c5e8c528 'x$r_buff0_thd2' '_Bool'
|   |     |-ImplicitCastExpr 0x5609c5e92188 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x5609c5e92140 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x5609c5e92110 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x5609c5e921b8 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x5609c5e921a0 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x5609c5e92168 <col:66> '_Bool' lvalue Var 0x5609c5e8c528 'x$r_buff0_thd2' '_Bool'
|   |-BinaryOperator 0x5609c5e92500 <line:774:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x5609c5e92238 <col:3> '_Bool' lvalue Var 0x5609c5e8c780 'x$r_buff1_thd2' '_Bool'
|   | `-ImplicitCastExpr 0x5609c5e924e8 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x5609c5e924b8 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x5609c5e923d8 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x5609c5e922f8 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x5609c5e922b0 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x5609c5e92298 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x5609c5e92258 <col:20> '_Bool' lvalue Var 0x5609c5e8ca60 'x$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x5609c5e922e0 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x5609c5e922c8 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x5609c5e92278 <col:38> '_Bool' lvalue Var 0x5609c5e8c528 'x$r_buff0_thd2' '_Bool'
|   |     | `-BinaryOperator 0x5609c5e923b8 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x5609c5e92370 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x5609c5e92358 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x5609c5e92318 <col:56> '_Bool' lvalue Var 0x5609c5e8db98 'x$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x5609c5e923a0 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x5609c5e92388 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x5609c5e92338 <col:74> '_Bool' lvalue Var 0x5609c5e8c780 'x$r_buff1_thd2' '_Bool'
|   |     |-ImplicitCastExpr 0x5609c5e92470 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x5609c5e92428 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x5609c5e923f8 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x5609c5e924a0 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x5609c5e92488 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x5609c5e92450 <col:102> '_Bool' lvalue Var 0x5609c5e8c780 'x$r_buff1_thd2' '_Bool'
|   |-CallExpr 0x5609c5e92558 <line:775:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x5609c5e92540 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5609c5e92520 <col:3> 'void ()' Function 0x5609c5e32060 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x5609c5e925b0 <line:776:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x5609c5e92598 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5609c5e92578 <col:3> 'void ()' Function 0x5609c5e31fa0 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x5609c5e92668 <line:777:3, col:41> 'int' '='
|   | |-DeclRefExpr 0x5609c5e925d0 <col:3> 'int' lvalue Var 0x5609c5e8b478 '__unbuffered_cnt' 'int'
|   | `-BinaryOperator 0x5609c5e92648 <col:22, col:41> 'int' '+'
|   |   |-ImplicitCastExpr 0x5609c5e92630 <col:22> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x5609c5e925f0 <col:22> 'int' lvalue Var 0x5609c5e8b478 '__unbuffered_cnt' 'int'
|   |   `-IntegerLiteral 0x5609c5e92610 <col:41> 'int' 1
|   |-CallExpr 0x5609c5e926c0 <line:778:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x5609c5e926a8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5609c5e92688 <col:3> 'void ()' Function 0x5609c5e32060 '__VERIFIER_atomic_end' 'void ()'
|   `-ReturnStmt 0x5609c5e92738 <line:779:3, col:36>
|     `-CallExpr 0x5609c5e92718 <col:10, col:36> 'void *'
|       `-ImplicitCastExpr 0x5609c5e92700 <col:10> 'void *(*)(void)' <FunctionToPointerDecay>
|         `-DeclRefExpr 0x5609c5e926e0 <col:10> 'void *(void)' Function 0x5609c5e31ab8 '__VERIFIER_nondet_pointer' 'void *(void)'
|-FunctionDecl 0x5609c5e928c8 prev 0x5609c5e8afa0 <line:781:1, line:816:1> line:781:8 used P2 'void *(void *)'
| |-ParmVarDecl 0x5609c5e92830 <col:11, col:17> col:17 arg 'void *'
| `-CompoundStmt 0x5609c5e97e68 <line:782:1, line:816:1>
|   |-CallExpr 0x5609c5e929a8 <line:783:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x5609c5e92990 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5609c5e92970 <col:3> 'void ()' Function 0x5609c5e31fa0 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x5609c5e92a40 <line:784:3, col:42> '_Bool' '='
|   | |-DeclRefExpr 0x5609c5e929c8 <col:3> '_Bool' lvalue Var 0x5609c5e8dd30 'weak$$choice0' '_Bool'
|   | `-CallExpr 0x5609c5e92a20 <col:19, col:42> '_Bool'
|   |   `-ImplicitCastExpr 0x5609c5e92a08 <col:19> '_Bool (*)(void)' <FunctionToPointerDecay>
|   |     `-DeclRefExpr 0x5609c5e929e8 <col:19> '_Bool (void)' Function 0x5609c5e31770 '__VERIFIER_nondet_bool' '_Bool (void)'
|   |-BinaryOperator 0x5609c5e92ad8 <line:785:3, col:42> '_Bool' '='
|   | |-DeclRefExpr 0x5609c5e92a60 <col:3> '_Bool' lvalue Var 0x5609c5e8de20 'weak$$choice2' '_Bool'
|   | `-CallExpr 0x5609c5e92ab8 <col:19, col:42> '_Bool'
|   |   `-ImplicitCastExpr 0x5609c5e92aa0 <col:19> '_Bool (*)(void)' <FunctionToPointerDecay>
|   |     `-DeclRefExpr 0x5609c5e92a80 <col:19> '_Bool (void)' Function 0x5609c5e31770 '__VERIFIER_nondet_bool' '_Bool (void)'
|   |-BinaryOperator 0x5609c5e92b70 <line:786:3, col:21> '_Bool' '='
|   | |-DeclRefExpr 0x5609c5e92af8 <col:3> '_Bool' lvalue Var 0x5609c5e8c340 'x$flush_delayed' '_Bool'
|   | `-ImplicitCastExpr 0x5609c5e92b38 <col:21> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x5609c5e92b18 <col:21> '_Bool' lvalue Var 0x5609c5e8de20 'weak$$choice2' '_Bool'
|   |-BinaryOperator 0x5609c5e92be8 <line:787:3, col:15> 'int' '='
|   | |-DeclRefExpr 0x5609c5e92b90 <col:3> 'int' lvalue Var 0x5609c5e8c3c0 'x$mem_tmp' 'int'
|   | `-ImplicitCastExpr 0x5609c5e92bd0 <col:15> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x5609c5e92bb0 <col:15> 'int' lvalue Var 0x5609c5e8c2a8 'x' 'int'
|   |-BinaryOperator 0x5609c5e92c80 <line:788:3, col:42> '_Bool' '='
|   | |-DeclRefExpr 0x5609c5e92c08 <col:3> '_Bool' lvalue Var 0x5609c5e8dda8 'weak$$choice1' '_Bool'
|   | `-CallExpr 0x5609c5e92c60 <col:19, col:42> '_Bool'
|   |   `-ImplicitCastExpr 0x5609c5e92c48 <col:19> '_Bool (*)(void)' <FunctionToPointerDecay>
|   |     `-DeclRefExpr 0x5609c5e92c28 <col:19> '_Bool (void)' Function 0x5609c5e31770 '__VERIFIER_nondet_bool' '_Bool (void)'
|   |-BinaryOperator 0x5609c5e936a8 <line:789:3, col:363> 'int' '='
|   | |-DeclRefExpr 0x5609c5e92ca0 <col:3> 'int' lvalue Var 0x5609c5e8c2a8 'x' 'int'
|   | `-ConditionalOperator 0x5609c5e93678 <col:7, col:363> 'int'
|   |   |-UnaryOperator 0x5609c5e92cf8 <col:7, col:8> 'int' prefix '!' cannot overflow
|   |   | `-ImplicitCastExpr 0x5609c5e92ce0 <col:8> '_Bool' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x5609c5e92cc0 <col:8> '_Bool' lvalue Var 0x5609c5e8ca60 'x$w_buff0_used' '_Bool'
|   |   |-ImplicitCastExpr 0x5609c5e93660 <col:25> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x5609c5e92d10 <col:25> 'int' lvalue Var 0x5609c5e8c2a8 'x' 'int'
|   |   `-ParenExpr 0x5609c5e93640 <col:29, col:363> 'int'
|   |     `-ConditionalOperator 0x5609c5e93610 <col:30, col:362> 'int'
|   |       |-BinaryOperator 0x5609c5e92dd0 <col:30, col:48> 'int' '&&'
|   |       | |-ImplicitCastExpr 0x5609c5e92d88 <col:30> 'int' <IntegralCast>
|   |       | | `-ImplicitCastExpr 0x5609c5e92d70 <col:30> '_Bool' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x5609c5e92d30 <col:30> '_Bool' lvalue Var 0x5609c5e8ca60 'x$w_buff0_used' '_Bool'
|   |       | `-ImplicitCastExpr 0x5609c5e92db8 <col:48> 'int' <IntegralCast>
|   |       |   `-ImplicitCastExpr 0x5609c5e92da0 <col:48> '_Bool' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x5609c5e92d50 <col:48> '_Bool' lvalue Var 0x5609c5e8c5a0 'x$r_buff0_thd3' '_Bool'
|   |       |-ImplicitCastExpr 0x5609c5e935f8 <col:65> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x5609c5e92df0 <col:65> 'int' lvalue Var 0x5609c5e8c9e8 'x$w_buff0' 'int'
|   |       `-ParenExpr 0x5609c5e935d8 <col:77, col:362> 'int'
|   |         `-ConditionalOperator 0x5609c5e935a8 <col:78, col:361> 'int'
|   |           |-BinaryOperator 0x5609c5e92f90 <col:78, col:134> 'int' '&&'
|   |           | |-BinaryOperator 0x5609c5e92f20 <col:78, col:115> 'int' '&&'
|   |           | | |-BinaryOperator 0x5609c5e92eb0 <col:78, col:97> 'int' '&&'
|   |           | | | |-ImplicitCastExpr 0x5609c5e92e98 <col:78> 'int' <IntegralCast>
|   |           | | | | `-ImplicitCastExpr 0x5609c5e92e80 <col:78> '_Bool' <LValueToRValue>
|   |           | | | |   `-DeclRefExpr 0x5609c5e92e10 <col:78> '_Bool' lvalue Var 0x5609c5e8ca60 'x$w_buff0_used' '_Bool'
|   |           | | | `-UnaryOperator 0x5609c5e92e68 <col:96, col:97> 'int' prefix '!' cannot overflow
|   |           | | |   `-ImplicitCastExpr 0x5609c5e92e50 <col:97> '_Bool' <LValueToRValue>
|   |           | | |     `-DeclRefExpr 0x5609c5e92e30 <col:97> '_Bool' lvalue Var 0x5609c5e8c7f8 'x$r_buff1_thd3' '_Bool'
|   |           | | `-ImplicitCastExpr 0x5609c5e92f08 <col:115> 'int' <IntegralCast>
|   |           | |   `-ImplicitCastExpr 0x5609c5e92ef0 <col:115> '_Bool' <LValueToRValue>
|   |           | |     `-DeclRefExpr 0x5609c5e92ed0 <col:115> '_Bool' lvalue Var 0x5609c5e8db98 'x$w_buff1_used' '_Bool'
|   |           | `-UnaryOperator 0x5609c5e92f78 <col:133, col:134> 'int' prefix '!' cannot overflow
|   |           |   `-ImplicitCastExpr 0x5609c5e92f60 <col:134> '_Bool' <LValueToRValue>
|   |           |     `-DeclRefExpr 0x5609c5e92f40 <col:134> '_Bool' lvalue Var 0x5609c5e8c5a0 'x$r_buff0_thd3' '_Bool'
|   |           |-ParenExpr 0x5609c5e93178 <col:151, col:211> 'int'
|   |           | `-ConditionalOperator 0x5609c5e93148 <col:152, col:210> 'int'
|   |           |   |-ImplicitCastExpr 0x5609c5e93118 <col:152> 'int' <IntegralCast>
|   |           |   | `-ImplicitCastExpr 0x5609c5e93100 <col:152> '_Bool' <LValueToRValue>
|   |           |   |   `-DeclRefExpr 0x5609c5e92fb0 <col:152> '_Bool' lvalue Var 0x5609c5e8dd30 'weak$$choice0' '_Bool'
|   |           |   |-ImplicitCastExpr 0x5609c5e93130 <col:168> 'int' <LValueToRValue>
|   |           |   | `-DeclRefExpr 0x5609c5e92fd0 <col:168> 'int' lvalue Var 0x5609c5e8c2a8 'x' 'int'
|   |           |   `-ParenExpr 0x5609c5e930e0 <col:172, col:210> 'int'
|   |           |     `-ConditionalOperator 0x5609c5e930b0 <col:173, col:201> 'int'
|   |           |       |-ImplicitCastExpr 0x5609c5e93068 <col:173> 'int' <IntegralCast>
|   |           |       | `-ImplicitCastExpr 0x5609c5e93050 <col:173> '_Bool' <LValueToRValue>
|   |           |       |   `-DeclRefExpr 0x5609c5e92ff0 <col:173> '_Bool' lvalue Var 0x5609c5e8dda8 'weak$$choice1' '_Bool'
|   |           |       |-ImplicitCastExpr 0x5609c5e93080 <col:189> 'int' <LValueToRValue>
|   |           |       | `-DeclRefExpr 0x5609c5e93010 <col:189> 'int' lvalue Var 0x5609c5e8c9e8 'x$w_buff0' 'int'
|   |           |       `-ImplicitCastExpr 0x5609c5e93098 <col:201> 'int' <LValueToRValue>
|   |           |         `-DeclRefExpr 0x5609c5e93030 <col:201> 'int' lvalue Var 0x5609c5e8db20 'x$w_buff1' 'int'
|   |           `-ParenExpr 0x5609c5e93588 <col:215, col:361> 'int'
|   |             `-ConditionalOperator 0x5609c5e93558 <col:216, col:360> 'int'
|   |               |-BinaryOperator 0x5609c5e93318 <col:216, col:271> 'int' '&&'
|   |               | |-BinaryOperator 0x5609c5e932a8 <col:216, col:252> 'int' '&&'
|   |               | | |-BinaryOperator 0x5609c5e93238 <col:216, col:234> 'int' '&&'
|   |               | | | |-ImplicitCastExpr 0x5609c5e931f0 <col:216> 'int' <IntegralCast>
|   |               | | | | `-ImplicitCastExpr 0x5609c5e931d8 <col:216> '_Bool' <LValueToRValue>
|   |               | | | |   `-DeclRefExpr 0x5609c5e93198 <col:216> '_Bool' lvalue Var 0x5609c5e8ca60 'x$w_buff0_used' '_Bool'
|   |               | | | `-ImplicitCastExpr 0x5609c5e93220 <col:234> 'int' <IntegralCast>
|   |               | | |   `-ImplicitCastExpr 0x5609c5e93208 <col:234> '_Bool' <LValueToRValue>
|   |               | | |     `-DeclRefExpr 0x5609c5e931b8 <col:234> '_Bool' lvalue Var 0x5609c5e8c7f8 'x$r_buff1_thd3' '_Bool'
|   |               | | `-ImplicitCastExpr 0x5609c5e93290 <col:252> 'int' <IntegralCast>
|   |               | |   `-ImplicitCastExpr 0x5609c5e93278 <col:252> '_Bool' <LValueToRValue>
|   |               | |     `-DeclRefExpr 0x5609c5e93258 <col:252> '_Bool' lvalue Var 0x5609c5e8db98 'x$w_buff1_used' '_Bool'
|   |               | `-UnaryOperator 0x5609c5e93300 <col:270, col:271> 'int' prefix '!' cannot overflow
|   |               |   `-ImplicitCastExpr 0x5609c5e932e8 <col:271> '_Bool' <LValueToRValue>
|   |               |     `-DeclRefExpr 0x5609c5e932c8 <col:271> '_Bool' lvalue Var 0x5609c5e8c5a0 'x$r_buff0_thd3' '_Bool'
|   |               |-ParenExpr 0x5609c5e93428 <col:288, col:326> 'int'
|   |               | `-ConditionalOperator 0x5609c5e933f8 <col:289, col:317> 'int'
|   |               |   |-ImplicitCastExpr 0x5609c5e933b0 <col:289> 'int' <IntegralCast>
|   |               |   | `-ImplicitCastExpr 0x5609c5e93398 <col:289> '_Bool' <LValueToRValue>
|   |               |   |   `-DeclRefExpr 0x5609c5e93338 <col:289> '_Bool' lvalue Var 0x5609c5e8dd30 'weak$$choice0' '_Bool'
|   |               |   |-ImplicitCastExpr 0x5609c5e933c8 <col:305> 'int' <LValueToRValue>
|   |               |   | `-DeclRefExpr 0x5609c5e93358 <col:305> 'int' lvalue Var 0x5609c5e8db20 'x$w_buff1' 'int'
|   |               |   `-ImplicitCastExpr 0x5609c5e933e0 <col:317> 'int' <LValueToRValue>
|   |               |     `-DeclRefExpr 0x5609c5e93378 <col:317> 'int' lvalue Var 0x5609c5e8c9e8 'x$w_buff0' 'int'
|   |               `-ParenExpr 0x5609c5e93538 <col:330, col:360> 'int'
|   |                 `-ConditionalOperator 0x5609c5e93508 <col:331, col:359> 'int'
|   |                   |-ImplicitCastExpr 0x5609c5e934c0 <col:331> 'int' <IntegralCast>
|   |                   | `-ImplicitCastExpr 0x5609c5e934a8 <col:331> '_Bool' <LValueToRValue>
|   |                   |   `-DeclRefExpr 0x5609c5e93448 <col:331> '_Bool' lvalue Var 0x5609c5e8dd30 'weak$$choice0' '_Bool'
|   |                   |-ImplicitCastExpr 0x5609c5e934d8 <col:347> 'int' <LValueToRValue>
|   |                   | `-DeclRefExpr 0x5609c5e93468 <col:347> 'int' lvalue Var 0x5609c5e8c9e8 'x$w_buff0' 'int'
|   |                   `-ImplicitCastExpr 0x5609c5e934f0 <col:359> 'int' <LValueToRValue>
|   |                     `-DeclRefExpr 0x5609c5e93488 <col:359> 'int' lvalue Var 0x5609c5e8c2a8 'x' 'int'
|   |-BinaryOperator 0x5609c5e93e60 <line:790:3, col:305> 'int' '='
|   | |-DeclRefExpr 0x5609c5e936c8 <col:3> 'int' lvalue Var 0x5609c5e8c9e8 'x$w_buff0' 'int'
|   | `-ConditionalOperator 0x5609c5e93e30 <col:15, col:305> 'int'
|   |   |-ImplicitCastExpr 0x5609c5e93e00 <col:15> 'int' <IntegralCast>
|   |   | `-ImplicitCastExpr 0x5609c5e93de8 <col:15> '_Bool' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x5609c5e936e8 <col:15> '_Bool' lvalue Var 0x5609c5e8de20 'weak$$choice2' '_Bool'
|   |   |-ImplicitCastExpr 0x5609c5e93e18 <col:31> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x5609c5e93708 <col:31> 'int' lvalue Var 0x5609c5e8c9e8 'x$w_buff0' 'int'
|   |   `-ParenExpr 0x5609c5e93dc8 <col:43, col:305> 'int'
|   |     `-ConditionalOperator 0x5609c5e93d98 <col:44, col:304> 'int'
|   |       |-UnaryOperator 0x5609c5e93760 <col:44, col:45> 'int' prefix '!' cannot overflow
|   |       | `-ImplicitCastExpr 0x5609c5e93748 <col:45> '_Bool' <LValueToRValue>
|   |       |   `-DeclRefExpr 0x5609c5e93728 <col:45> '_Bool' lvalue Var 0x5609c5e8ca60 'x$w_buff0_used' '_Bool'
|   |       |-ImplicitCastExpr 0x5609c5e93d80 <col:62> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x5609c5e93778 <col:62> 'int' lvalue Var 0x5609c5e8c9e8 'x$w_buff0' 'int'
|   |       `-ParenExpr 0x5609c5e93d60 <col:74, col:304> 'int'
|   |         `-ConditionalOperator 0x5609c5e93d30 <col:75, col:303> 'int'
|   |           |-BinaryOperator 0x5609c5e93838 <col:75, col:93> 'int' '&&'
|   |           | |-ImplicitCastExpr 0x5609c5e937f0 <col:75> 'int' <IntegralCast>
|   |           | | `-ImplicitCastExpr 0x5609c5e937d8 <col:75> '_Bool' <LValueToRValue>
|   |           | |   `-DeclRefExpr 0x5609c5e93798 <col:75> '_Bool' lvalue Var 0x5609c5e8ca60 'x$w_buff0_used' '_Bool'
|   |           | `-ImplicitCastExpr 0x5609c5e93820 <col:93> 'int' <IntegralCast>
|   |           |   `-ImplicitCastExpr 0x5609c5e93808 <col:93> '_Bool' <LValueToRValue>
|   |           |     `-DeclRefExpr 0x5609c5e937b8 <col:93> '_Bool' lvalue Var 0x5609c5e8c5a0 'x$r_buff0_thd3' '_Bool'
|   |           |-ImplicitCastExpr 0x5609c5e93d18 <col:110> 'int' <LValueToRValue>
|   |           | `-DeclRefExpr 0x5609c5e93858 <col:110> 'int' lvalue Var 0x5609c5e8c9e8 'x$w_buff0' 'int'
|   |           `-ParenExpr 0x5609c5e93cf8 <col:122, col:303> 'int'
|   |             `-ConditionalOperator 0x5609c5e93cc8 <col:123, col:302> 'int'
|   |               |-BinaryOperator 0x5609c5e939f8 <col:123, col:179> 'int' '&&'
|   |               | |-BinaryOperator 0x5609c5e93988 <col:123, col:160> 'int' '&&'
|   |               | | |-BinaryOperator 0x5609c5e93918 <col:123, col:142> 'int' '&&'
|   |               | | | |-ImplicitCastExpr 0x5609c5e93900 <col:123> 'int' <IntegralCast>
|   |               | | | | `-ImplicitCastExpr 0x5609c5e938e8 <col:123> '_Bool' <LValueToRValue>
|   |               | | | |   `-DeclRefExpr 0x5609c5e93878 <col:123> '_Bool' lvalue Var 0x5609c5e8ca60 'x$w_buff0_used' '_Bool'
|   |               | | | `-UnaryOperator 0x5609c5e938d0 <col:141, col:142> 'int' prefix '!' cannot overflow
|   |               | | |   `-ImplicitCastExpr 0x5609c5e938b8 <col:142> '_Bool' <LValueToRValue>
|   |               | | |     `-DeclRefExpr 0x5609c5e93898 <col:142> '_Bool' lvalue Var 0x5609c5e8c7f8 'x$r_buff1_thd3' '_Bool'
|   |               | | `-ImplicitCastExpr 0x5609c5e93970 <col:160> 'int' <IntegralCast>
|   |               | |   `-ImplicitCastExpr 0x5609c5e93958 <col:160> '_Bool' <LValueToRValue>
|   |               | |     `-DeclRefExpr 0x5609c5e93938 <col:160> '_Bool' lvalue Var 0x5609c5e8db98 'x$w_buff1_used' '_Bool'
|   |               | `-UnaryOperator 0x5609c5e939e0 <col:178, col:179> 'int' prefix '!' cannot overflow
|   |               |   `-ImplicitCastExpr 0x5609c5e939c8 <col:179> '_Bool' <LValueToRValue>
|   |               |     `-DeclRefExpr 0x5609c5e939a8 <col:179> '_Bool' lvalue Var 0x5609c5e8c5a0 'x$r_buff0_thd3' '_Bool'
|   |               |-ImplicitCastExpr 0x5609c5e93cb0 <col:196> 'int' <LValueToRValue>
|   |               | `-DeclRefExpr 0x5609c5e93a18 <col:196> 'int' lvalue Var 0x5609c5e8c9e8 'x$w_buff0' 'int'
|   |               `-ParenExpr 0x5609c5e93c90 <col:208, col:302> 'int'
|   |                 `-ConditionalOperator 0x5609c5e93c60 <col:209, col:293> 'int'
|   |                   |-BinaryOperator 0x5609c5e93bd0 <col:209, col:264> 'int' '&&'
|   |                   | |-BinaryOperator 0x5609c5e93b48 <col:209, col:245> 'int' '&&'
|   |                   | | |-BinaryOperator 0x5609c5e93ad8 <col:209, col:227> 'int' '&&'
|   |                   | | | |-ImplicitCastExpr 0x5609c5e93a90 <col:209> 'int' <IntegralCast>
|   |                   | | | | `-ImplicitCastExpr 0x5609c5e93a78 <col:209> '_Bool' <LValueToRValue>
|   |                   | | | |   `-DeclRefExpr 0x5609c5e93a38 <col:209> '_Bool' lvalue Var 0x5609c5e8ca60 'x$w_buff0_used' '_Bool'
|   |                   | | | `-ImplicitCastExpr 0x5609c5e93ac0 <col:227> 'int' <IntegralCast>
|   |                   | | |   `-ImplicitCastExpr 0x5609c5e93aa8 <col:227> '_Bool' <LValueToRValue>
|   |                   | | |     `-DeclRefExpr 0x5609c5e93a58 <col:227> '_Bool' lvalue Var 0x5609c5e8c7f8 'x$r_buff1_thd3' '_Bool'
|   |                   | | `-ImplicitCastExpr 0x5609c5e93b30 <col:245> 'int' <IntegralCast>
|   |                   | |   `-ImplicitCastExpr 0x5609c5e93b18 <col:245> '_Bool' <LValueToRValue>
|   |                   | |     `-DeclRefExpr 0x5609c5e93af8 <col:245> '_Bool' lvalue Var 0x5609c5e8db98 'x$w_buff1_used' '_Bool'
|   |                   | `-UnaryOperator 0x5609c5e93bb8 <col:263, col:264> 'int' prefix '!' cannot overflow
|   |                   |   `-ImplicitCastExpr 0x5609c5e93ba0 <col:264> '_Bool' <LValueToRValue>
|   |                   |     `-DeclRefExpr 0x5609c5e93b80 <col:264> '_Bool' lvalue Var 0x5609c5e8c5a0 'x$r_buff0_thd3' '_Bool'
|   |                   |-ImplicitCastExpr 0x5609c5e93c30 <col:281> 'int' <LValueToRValue>
|   |                   | `-DeclRefExpr 0x5609c5e93bf0 <col:281> 'int' lvalue Var 0x5609c5e8c9e8 'x$w_buff0' 'int'
|   |                   `-ImplicitCastExpr 0x5609c5e93c48 <col:293> 'int' <LValueToRValue>
|   |                     `-DeclRefExpr 0x5609c5e93c10 <col:293> 'int' lvalue Var 0x5609c5e8c9e8 'x$w_buff0' 'int'
|   |-BinaryOperator 0x5609c5e94600 <line:791:3, col:305> 'int' '='
|   | |-DeclRefExpr 0x5609c5e93e80 <col:3> 'int' lvalue Var 0x5609c5e8db20 'x$w_buff1' 'int'
|   | `-ConditionalOperator 0x5609c5e945d0 <col:15, col:305> 'int'
|   |   |-ImplicitCastExpr 0x5609c5e945a0 <col:15> 'int' <IntegralCast>
|   |   | `-ImplicitCastExpr 0x5609c5e94588 <col:15> '_Bool' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x5609c5e93ea0 <col:15> '_Bool' lvalue Var 0x5609c5e8de20 'weak$$choice2' '_Bool'
|   |   |-ImplicitCastExpr 0x5609c5e945b8 <col:31> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x5609c5e93ec0 <col:31> 'int' lvalue Var 0x5609c5e8db20 'x$w_buff1' 'int'
|   |   `-ParenExpr 0x5609c5e94568 <col:43, col:305> 'int'
|   |     `-ConditionalOperator 0x5609c5e94538 <col:44, col:304> 'int'
|   |       |-UnaryOperator 0x5609c5e93f18 <col:44, col:45> 'int' prefix '!' cannot overflow
|   |       | `-ImplicitCastExpr 0x5609c5e93f00 <col:45> '_Bool' <LValueToRValue>
|   |       |   `-DeclRefExpr 0x5609c5e93ee0 <col:45> '_Bool' lvalue Var 0x5609c5e8ca60 'x$w_buff0_used' '_Bool'
|   |       |-ImplicitCastExpr 0x5609c5e94520 <col:62> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x5609c5e93f30 <col:62> 'int' lvalue Var 0x5609c5e8db20 'x$w_buff1' 'int'
|   |       `-ParenExpr 0x5609c5e94500 <col:74, col:304> 'int'
|   |         `-ConditionalOperator 0x5609c5e944d0 <col:75, col:303> 'int'
|   |           |-BinaryOperator 0x5609c5e93ff0 <col:75, col:93> 'int' '&&'
|   |           | |-ImplicitCastExpr 0x5609c5e93fa8 <col:75> 'int' <IntegralCast>
|   |           | | `-ImplicitCastExpr 0x5609c5e93f90 <col:75> '_Bool' <LValueToRValue>
|   |           | |   `-DeclRefExpr 0x5609c5e93f50 <col:75> '_Bool' lvalue Var 0x5609c5e8ca60 'x$w_buff0_used' '_Bool'
|   |           | `-ImplicitCastExpr 0x5609c5e93fd8 <col:93> 'int' <IntegralCast>
|   |           |   `-ImplicitCastExpr 0x5609c5e93fc0 <col:93> '_Bool' <LValueToRValue>
|   |           |     `-DeclRefExpr 0x5609c5e93f70 <col:93> '_Bool' lvalue Var 0x5609c5e8c5a0 'x$r_buff0_thd3' '_Bool'
|   |           |-ImplicitCastExpr 0x5609c5e944b8 <col:110> 'int' <LValueToRValue>
|   |           | `-DeclRefExpr 0x5609c5e94010 <col:110> 'int' lvalue Var 0x5609c5e8db20 'x$w_buff1' 'int'
|   |           `-ParenExpr 0x5609c5e94498 <col:122, col:303> 'int'
|   |             `-ConditionalOperator 0x5609c5e94468 <col:123, col:302> 'int'
|   |               |-BinaryOperator 0x5609c5e941b0 <col:123, col:179> 'int' '&&'
|   |               | |-BinaryOperator 0x5609c5e94140 <col:123, col:160> 'int' '&&'
|   |               | | |-BinaryOperator 0x5609c5e940d0 <col:123, col:142> 'int' '&&'
|   |               | | | |-ImplicitCastExpr 0x5609c5e940b8 <col:123> 'int' <IntegralCast>
|   |               | | | | `-ImplicitCastExpr 0x5609c5e940a0 <col:123> '_Bool' <LValueToRValue>
|   |               | | | |   `-DeclRefExpr 0x5609c5e94030 <col:123> '_Bool' lvalue Var 0x5609c5e8ca60 'x$w_buff0_used' '_Bool'
|   |               | | | `-UnaryOperator 0x5609c5e94088 <col:141, col:142> 'int' prefix '!' cannot overflow
|   |               | | |   `-ImplicitCastExpr 0x5609c5e94070 <col:142> '_Bool' <LValueToRValue>
|   |               | | |     `-DeclRefExpr 0x5609c5e94050 <col:142> '_Bool' lvalue Var 0x5609c5e8c7f8 'x$r_buff1_thd3' '_Bool'
|   |               | | `-ImplicitCastExpr 0x5609c5e94128 <col:160> 'int' <IntegralCast>
|   |               | |   `-ImplicitCastExpr 0x5609c5e94110 <col:160> '_Bool' <LValueToRValue>
|   |               | |     `-DeclRefExpr 0x5609c5e940f0 <col:160> '_Bool' lvalue Var 0x5609c5e8db98 'x$w_buff1_used' '_Bool'
|   |               | `-UnaryOperator 0x5609c5e94198 <col:178, col:179> 'int' prefix '!' cannot overflow
|   |               |   `-ImplicitCastExpr 0x5609c5e94180 <col:179> '_Bool' <LValueToRValue>
|   |               |     `-DeclRefExpr 0x5609c5e94160 <col:179> '_Bool' lvalue Var 0x5609c5e8c5a0 'x$r_buff0_thd3' '_Bool'
|   |               |-ImplicitCastExpr 0x5609c5e94450 <col:196> 'int' <LValueToRValue>
|   |               | `-DeclRefExpr 0x5609c5e941d0 <col:196> 'int' lvalue Var 0x5609c5e8db20 'x$w_buff1' 'int'
|   |               `-ParenExpr 0x5609c5e94430 <col:208, col:302> 'int'
|   |                 `-ConditionalOperator 0x5609c5e94400 <col:209, col:293> 'int'
|   |                   |-BinaryOperator 0x5609c5e94370 <col:209, col:264> 'int' '&&'
|   |                   | |-BinaryOperator 0x5609c5e94300 <col:209, col:245> 'int' '&&'
|   |                   | | |-BinaryOperator 0x5609c5e94290 <col:209, col:227> 'int' '&&'
|   |                   | | | |-ImplicitCastExpr 0x5609c5e94248 <col:209> 'int' <IntegralCast>
|   |                   | | | | `-ImplicitCastExpr 0x5609c5e94230 <col:209> '_Bool' <LValueToRValue>
|   |                   | | | |   `-DeclRefExpr 0x5609c5e941f0 <col:209> '_Bool' lvalue Var 0x5609c5e8ca60 'x$w_buff0_used' '_Bool'
|   |                   | | | `-ImplicitCastExpr 0x5609c5e94278 <col:227> 'int' <IntegralCast>
|   |                   | | |   `-ImplicitCastExpr 0x5609c5e94260 <col:227> '_Bool' <LValueToRValue>
|   |                   | | |     `-DeclRefExpr 0x5609c5e94210 <col:227> '_Bool' lvalue Var 0x5609c5e8c7f8 'x$r_buff1_thd3' '_Bool'
|   |                   | | `-ImplicitCastExpr 0x5609c5e942e8 <col:245> 'int' <IntegralCast>
|   |                   | |   `-ImplicitCastExpr 0x5609c5e942d0 <col:245> '_Bool' <LValueToRValue>
|   |                   | |     `-DeclRefExpr 0x5609c5e942b0 <col:245> '_Bool' lvalue Var 0x5609c5e8db98 'x$w_buff1_used' '_Bool'
|   |                   | `-UnaryOperator 0x5609c5e94358 <col:263, col:264> 'int' prefix '!' cannot overflow
|   |                   |   `-ImplicitCastExpr 0x5609c5e94340 <col:264> '_Bool' <LValueToRValue>
|   |                   |     `-DeclRefExpr 0x5609c5e94320 <col:264> '_Bool' lvalue Var 0x5609c5e8c5a0 'x$r_buff0_thd3' '_Bool'
|   |                   |-ImplicitCastExpr 0x5609c5e943d0 <col:281> 'int' <LValueToRValue>
|   |                   | `-DeclRefExpr 0x5609c5e94390 <col:281> 'int' lvalue Var 0x5609c5e8db20 'x$w_buff1' 'int'
|   |                   `-ImplicitCastExpr 0x5609c5e943e8 <col:293> 'int' <LValueToRValue>
|   |                     `-DeclRefExpr 0x5609c5e943b0 <col:293> 'int' lvalue Var 0x5609c5e8db20 'x$w_buff1' 'int'
|   |-BinaryOperator 0x5609c5e94ef0 <line:792:3, col:349> '_Bool' '='
|   | |-DeclRefExpr 0x5609c5e94620 <col:3> '_Bool' lvalue Var 0x5609c5e8ca60 'x$w_buff0_used' '_Bool'
|   | `-ImplicitCastExpr 0x5609c5e94ed8 <col:20, col:349> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x5609c5e94ea8 <col:20, col:349> 'int'
|   |     |-ImplicitCastExpr 0x5609c5e94e60 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x5609c5e94e48 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x5609c5e94640 <col:20> '_Bool' lvalue Var 0x5609c5e8de20 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x5609c5e94e90 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x5609c5e94e78 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x5609c5e94660 <col:36> '_Bool' lvalue Var 0x5609c5e8ca60 'x$w_buff0_used' '_Bool'
|   |     `-ParenExpr 0x5609c5e94e28 <col:53, col:349> 'int'
|   |       `-ConditionalOperator 0x5609c5e94df8 <col:54, col:348> 'int'
|   |         |-UnaryOperator 0x5609c5e946b8 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | `-ImplicitCastExpr 0x5609c5e946a0 <col:55> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x5609c5e94680 <col:55> '_Bool' lvalue Var 0x5609c5e8ca60 'x$w_buff0_used' '_Bool'
|   |         |-ImplicitCastExpr 0x5609c5e94de0 <col:72> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x5609c5e94dc8 <col:72> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x5609c5e946d0 <col:72> '_Bool' lvalue Var 0x5609c5e8ca60 'x$w_buff0_used' '_Bool'
|   |         `-ParenExpr 0x5609c5e94da8 <col:89, col:348> 'int'
|   |           `-ConditionalOperator 0x5609c5e94d78 <col:90, col:347> 'int'
|   |             |-BinaryOperator 0x5609c5e94790 <col:90, col:108> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x5609c5e94748 <col:90> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x5609c5e94730 <col:90> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x5609c5e946f0 <col:90> '_Bool' lvalue Var 0x5609c5e8ca60 'x$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x5609c5e94778 <col:108> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x5609c5e94760 <col:108> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x5609c5e94710 <col:108> '_Bool' lvalue Var 0x5609c5e8c5a0 'x$r_buff0_thd3' '_Bool'
|   |             |-ImplicitCastExpr 0x5609c5e94d60 <col:125, col:132> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x5609c5e947e0 <col:125, col:132> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x5609c5e947b0 <col:132> 'int' 0
|   |             `-ParenExpr 0x5609c5e94d40 <col:136, col:347> 'int'
|   |               `-ConditionalOperator 0x5609c5e94d10 <col:137, col:346> 'int'
|   |                 |-BinaryOperator 0x5609c5e94988 <col:137, col:193> 'int' '&&'
|   |                 | |-BinaryOperator 0x5609c5e94918 <col:137, col:174> 'int' '&&'
|   |                 | | |-BinaryOperator 0x5609c5e948a8 <col:137, col:156> 'int' '&&'
|   |                 | | | |-ImplicitCastExpr 0x5609c5e94890 <col:137> 'int' <IntegralCast>
|   |                 | | | | `-ImplicitCastExpr 0x5609c5e94878 <col:137> '_Bool' <LValueToRValue>
|   |                 | | | |   `-DeclRefExpr 0x5609c5e94808 <col:137> '_Bool' lvalue Var 0x5609c5e8ca60 'x$w_buff0_used' '_Bool'
|   |                 | | | `-UnaryOperator 0x5609c5e94860 <col:155, col:156> 'int' prefix '!' cannot overflow
|   |                 | | |   `-ImplicitCastExpr 0x5609c5e94848 <col:156> '_Bool' <LValueToRValue>
|   |                 | | |     `-DeclRefExpr 0x5609c5e94828 <col:156> '_Bool' lvalue Var 0x5609c5e8c7f8 'x$r_buff1_thd3' '_Bool'
|   |                 | | `-ImplicitCastExpr 0x5609c5e94900 <col:174> 'int' <IntegralCast>
|   |                 | |   `-ImplicitCastExpr 0x5609c5e948e8 <col:174> '_Bool' <LValueToRValue>
|   |                 | |     `-DeclRefExpr 0x5609c5e948c8 <col:174> '_Bool' lvalue Var 0x5609c5e8db98 'x$w_buff1_used' '_Bool'
|   |                 | `-UnaryOperator 0x5609c5e94970 <col:192, col:193> 'int' prefix '!' cannot overflow
|   |                 |   `-ImplicitCastExpr 0x5609c5e94958 <col:193> '_Bool' <LValueToRValue>
|   |                 |     `-DeclRefExpr 0x5609c5e94938 <col:193> '_Bool' lvalue Var 0x5609c5e8c5a0 'x$r_buff0_thd3' '_Bool'
|   |                 |-BinaryOperator 0x5609c5e94a48 <col:210, col:228> 'int' '||'
|   |                 | |-ImplicitCastExpr 0x5609c5e94a30 <col:210> 'int' <IntegralCast>
|   |                 | | `-ImplicitCastExpr 0x5609c5e94a18 <col:210> '_Bool' <LValueToRValue>
|   |                 | |   `-DeclRefExpr 0x5609c5e949a8 <col:210> '_Bool' lvalue Var 0x5609c5e8dd30 'weak$$choice0' '_Bool'
|   |                 | `-UnaryOperator 0x5609c5e94a00 <col:227, col:228> 'int' prefix '!' cannot overflow
|   |                 |   `-ImplicitCastExpr 0x5609c5e949e8 <col:228> '_Bool' <LValueToRValue>
|   |                 |     `-DeclRefExpr 0x5609c5e949c8 <col:228> '_Bool' lvalue Var 0x5609c5e8dda8 'weak$$choice1' '_Bool'
|   |                 `-ParenExpr 0x5609c5e94cf0 <col:244, col:346> 'int'
|   |                   `-ConditionalOperator 0x5609c5e94cc0 <col:245, col:333> 'int'
|   |                     |-BinaryOperator 0x5609c5e94c00 <col:245, col:300> 'int' '&&'
|   |                     | |-BinaryOperator 0x5609c5e94b90 <col:245, col:281> 'int' '&&'
|   |                     | | |-BinaryOperator 0x5609c5e94b08 <col:245, col:263> 'int' '&&'
|   |                     | | | |-ImplicitCastExpr 0x5609c5e94ac0 <col:245> 'int' <IntegralCast>
|   |                     | | | | `-ImplicitCastExpr 0x5609c5e94aa8 <col:245> '_Bool' <LValueToRValue>
|   |                     | | | |   `-DeclRefExpr 0x5609c5e94a68 <col:245> '_Bool' lvalue Var 0x5609c5e8ca60 'x$w_buff0_used' '_Bool'
|   |                     | | | `-ImplicitCastExpr 0x5609c5e94af0 <col:263> 'int' <IntegralCast>
|   |                     | | |   `-ImplicitCastExpr 0x5609c5e94ad8 <col:263> '_Bool' <LValueToRValue>
|   |                     | | |     `-DeclRefExpr 0x5609c5e94a88 <col:263> '_Bool' lvalue Var 0x5609c5e8c7f8 'x$r_buff1_thd3' '_Bool'
|   |                     | | `-ImplicitCastExpr 0x5609c5e94b60 <col:281> 'int' <IntegralCast>
|   |                     | |   `-ImplicitCastExpr 0x5609c5e94b48 <col:281> '_Bool' <LValueToRValue>
|   |                     | |     `-DeclRefExpr 0x5609c5e94b28 <col:281> '_Bool' lvalue Var 0x5609c5e8db98 'x$w_buff1_used' '_Bool'
|   |                     | `-UnaryOperator 0x5609c5e94be8 <col:299, col:300> 'int' prefix '!' cannot overflow
|   |                     |   `-ImplicitCastExpr 0x5609c5e94bd0 <col:300> '_Bool' <LValueToRValue>
|   |                     |     `-DeclRefExpr 0x5609c5e94bb0 <col:300> '_Bool' lvalue Var 0x5609c5e8c5a0 'x$r_buff0_thd3' '_Bool'
|   |                     |-ImplicitCastExpr 0x5609c5e94c78 <col:317> 'int' <IntegralCast>
|   |                     | `-ImplicitCastExpr 0x5609c5e94c60 <col:317> '_Bool' <LValueToRValue>
|   |                     |   `-DeclRefExpr 0x5609c5e94c20 <col:317> '_Bool' lvalue Var 0x5609c5e8dd30 'weak$$choice0' '_Bool'
|   |                     `-ImplicitCastExpr 0x5609c5e94ca8 <col:333> 'int' <IntegralCast>
|   |                       `-ImplicitCastExpr 0x5609c5e94c90 <col:333> '_Bool' <LValueToRValue>
|   |                         `-DeclRefExpr 0x5609c5e94c40 <col:333> '_Bool' lvalue Var 0x5609c5e8dd30 'weak$$choice0' '_Bool'
|   |-BinaryOperator 0x5609c5e95798 <line:793:3, col:321> '_Bool' '='
|   | |-DeclRefExpr 0x5609c5e94f10 <col:3> '_Bool' lvalue Var 0x5609c5e8db98 'x$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x5609c5e95780 <col:20, col:321> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x5609c5e95750 <col:20, col:321> 'int'
|   |     |-ImplicitCastExpr 0x5609c5e95708 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x5609c5e956f0 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x5609c5e94f30 <col:20> '_Bool' lvalue Var 0x5609c5e8de20 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x5609c5e95738 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x5609c5e95720 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x5609c5e94f50 <col:36> '_Bool' lvalue Var 0x5609c5e8db98 'x$w_buff1_used' '_Bool'
|   |     `-ParenExpr 0x5609c5e956d0 <col:53, col:321> 'int'
|   |       `-ConditionalOperator 0x5609c5e956a0 <col:54, col:320> 'int'
|   |         |-UnaryOperator 0x5609c5e94fa8 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | `-ImplicitCastExpr 0x5609c5e94f90 <col:55> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x5609c5e94f70 <col:55> '_Bool' lvalue Var 0x5609c5e8ca60 'x$w_buff0_used' '_Bool'
|   |         |-ImplicitCastExpr 0x5609c5e95688 <col:72> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x5609c5e95670 <col:72> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x5609c5e94fc0 <col:72> '_Bool' lvalue Var 0x5609c5e8db98 'x$w_buff1_used' '_Bool'
|   |         `-ParenExpr 0x5609c5e95650 <col:89, col:320> 'int'
|   |           `-ConditionalOperator 0x5609c5e95620 <col:90, col:319> 'int'
|   |             |-BinaryOperator 0x5609c5e95080 <col:90, col:108> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x5609c5e95038 <col:90> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x5609c5e95020 <col:90> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x5609c5e94fe0 <col:90> '_Bool' lvalue Var 0x5609c5e8ca60 'x$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x5609c5e95068 <col:108> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x5609c5e95050 <col:108> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x5609c5e95000 <col:108> '_Bool' lvalue Var 0x5609c5e8c5a0 'x$r_buff0_thd3' '_Bool'
|   |             |-ImplicitCastExpr 0x5609c5e95608 <col:125, col:132> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x5609c5e950d0 <col:125, col:132> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x5609c5e950a0 <col:132> 'int' 0
|   |             `-ParenExpr 0x5609c5e955e8 <col:136, col:319> 'int'
|   |               `-ConditionalOperator 0x5609c5e955b8 <col:137, col:318> 'int'
|   |                 |-BinaryOperator 0x5609c5e95278 <col:137, col:193> 'int' '&&'
|   |                 | |-BinaryOperator 0x5609c5e95208 <col:137, col:174> 'int' '&&'
|   |                 | | |-BinaryOperator 0x5609c5e95198 <col:137, col:156> 'int' '&&'
|   |                 | | | |-ImplicitCastExpr 0x5609c5e95180 <col:137> 'int' <IntegralCast>
|   |                 | | | | `-ImplicitCastExpr 0x5609c5e95168 <col:137> '_Bool' <LValueToRValue>
|   |                 | | | |   `-DeclRefExpr 0x5609c5e950f8 <col:137> '_Bool' lvalue Var 0x5609c5e8ca60 'x$w_buff0_used' '_Bool'
|   |                 | | | `-UnaryOperator 0x5609c5e95150 <col:155, col:156> 'int' prefix '!' cannot overflow
|   |                 | | |   `-ImplicitCastExpr 0x5609c5e95138 <col:156> '_Bool' <LValueToRValue>
|   |                 | | |     `-DeclRefExpr 0x5609c5e95118 <col:156> '_Bool' lvalue Var 0x5609c5e8c7f8 'x$r_buff1_thd3' '_Bool'
|   |                 | | `-ImplicitCastExpr 0x5609c5e951f0 <col:174> 'int' <IntegralCast>
|   |                 | |   `-ImplicitCastExpr 0x5609c5e951d8 <col:174> '_Bool' <LValueToRValue>
|   |                 | |     `-DeclRefExpr 0x5609c5e951b8 <col:174> '_Bool' lvalue Var 0x5609c5e8db98 'x$w_buff1_used' '_Bool'
|   |                 | `-UnaryOperator 0x5609c5e95260 <col:192, col:193> 'int' prefix '!' cannot overflow
|   |                 |   `-ImplicitCastExpr 0x5609c5e95248 <col:193> '_Bool' <LValueToRValue>
|   |                 |     `-DeclRefExpr 0x5609c5e95228 <col:193> '_Bool' lvalue Var 0x5609c5e8c5a0 'x$r_buff0_thd3' '_Bool'
|   |                 |-ImplicitCastExpr 0x5609c5e955a0 <col:210> 'int' <IntegralCast>
|   |                 | `-ImplicitCastExpr 0x5609c5e95588 <col:210> '_Bool' <LValueToRValue>
|   |                 |   `-DeclRefExpr 0x5609c5e95298 <col:210> '_Bool' lvalue Var 0x5609c5e8dd30 'weak$$choice0' '_Bool'
|   |                 `-ParenExpr 0x5609c5e95568 <col:226, col:318> 'int'
|   |                   `-ConditionalOperator 0x5609c5e95538 <col:227, col:317> 'int'
|   |                     |-BinaryOperator 0x5609c5e95438 <col:227, col:282> 'int' '&&'
|   |                     | |-BinaryOperator 0x5609c5e953c8 <col:227, col:263> 'int' '&&'
|   |                     | | |-BinaryOperator 0x5609c5e95358 <col:227, col:245> 'int' '&&'
|   |                     | | | |-ImplicitCastExpr 0x5609c5e95310 <col:227> 'int' <IntegralCast>
|   |                     | | | | `-ImplicitCastExpr 0x5609c5e952f8 <col:227> '_Bool' <LValueToRValue>
|   |                     | | | |   `-DeclRefExpr 0x5609c5e952b8 <col:227> '_Bool' lvalue Var 0x5609c5e8ca60 'x$w_buff0_used' '_Bool'
|   |                     | | | `-ImplicitCastExpr 0x5609c5e95340 <col:245> 'int' <IntegralCast>
|   |                     | | |   `-ImplicitCastExpr 0x5609c5e95328 <col:245> '_Bool' <LValueToRValue>
|   |                     | | |     `-DeclRefExpr 0x5609c5e952d8 <col:245> '_Bool' lvalue Var 0x5609c5e8c7f8 'x$r_buff1_thd3' '_Bool'
|   |                     | | `-ImplicitCastExpr 0x5609c5e953b0 <col:263> 'int' <IntegralCast>
|   |                     | |   `-ImplicitCastExpr 0x5609c5e95398 <col:263> '_Bool' <LValueToRValue>
|   |                     | |     `-DeclRefExpr 0x5609c5e95378 <col:263> '_Bool' lvalue Var 0x5609c5e8db98 'x$w_buff1_used' '_Bool'
|   |                     | `-UnaryOperator 0x5609c5e95420 <col:281, col:282> 'int' prefix '!' cannot overflow
|   |                     |   `-ImplicitCastExpr 0x5609c5e95408 <col:282> '_Bool' <LValueToRValue>
|   |                     |     `-DeclRefExpr 0x5609c5e953e8 <col:282> '_Bool' lvalue Var 0x5609c5e8c5a0 'x$r_buff0_thd3' '_Bool'
|   |                     |-ImplicitCastExpr 0x5609c5e95508 <col:299, col:306> 'int' <IntegralCast>
|   |                     | `-CStyleCastExpr 0x5609c5e95488 <col:299, col:306> '_Bool' <IntegralToBoolean>
|   |                     |   `-IntegerLiteral 0x5609c5e95458 <col:306> 'int' 0
|   |                     `-ImplicitCastExpr 0x5609c5e95520 <col:310, col:317> 'int' <IntegralCast>
|   |                       `-CStyleCastExpr 0x5609c5e954e0 <col:310, col:317> '_Bool' <IntegralToBoolean>
|   |                         `-IntegerLiteral 0x5609c5e954b0 <col:317> 'int' 0
|   |-BinaryOperator 0x5609c5e96060 <line:794:3, col:322> '_Bool' '='
|   | |-DeclRefExpr 0x5609c5e957b8 <col:3> '_Bool' lvalue Var 0x5609c5e8c5a0 'x$r_buff0_thd3' '_Bool'
|   | `-ImplicitCastExpr 0x5609c5e96048 <col:20, col:322> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x5609c5e96018 <col:20, col:322> 'int'
|   |     |-ImplicitCastExpr 0x5609c5e95fd0 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x5609c5e95fb8 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x5609c5e957d8 <col:20> '_Bool' lvalue Var 0x5609c5e8de20 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x5609c5e96000 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x5609c5e95fe8 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x5609c5e957f8 <col:36> '_Bool' lvalue Var 0x5609c5e8c5a0 'x$r_buff0_thd3' '_Bool'
|   |     `-ParenExpr 0x5609c5e95f98 <col:53, col:322> 'int'
|   |       `-ConditionalOperator 0x5609c5e95f68 <col:54, col:321> 'int'
|   |         |-UnaryOperator 0x5609c5e95850 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | `-ImplicitCastExpr 0x5609c5e95838 <col:55> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x5609c5e95818 <col:55> '_Bool' lvalue Var 0x5609c5e8ca60 'x$w_buff0_used' '_Bool'
|   |         |-ImplicitCastExpr 0x5609c5e95f50 <col:72> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x5609c5e95f38 <col:72> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x5609c5e95868 <col:72> '_Bool' lvalue Var 0x5609c5e8c5a0 'x$r_buff0_thd3' '_Bool'
|   |         `-ParenExpr 0x5609c5e95f18 <col:89, col:321> 'int'
|   |           `-ConditionalOperator 0x5609c5e95ee8 <col:90, col:320> 'int'
|   |             |-BinaryOperator 0x5609c5e95928 <col:90, col:108> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x5609c5e958e0 <col:90> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x5609c5e958c8 <col:90> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x5609c5e95888 <col:90> '_Bool' lvalue Var 0x5609c5e8ca60 'x$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x5609c5e95910 <col:108> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x5609c5e958f8 <col:108> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x5609c5e958a8 <col:108> '_Bool' lvalue Var 0x5609c5e8c5a0 'x$r_buff0_thd3' '_Bool'
|   |             |-ImplicitCastExpr 0x5609c5e95ed0 <col:125, col:132> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x5609c5e95978 <col:125, col:132> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x5609c5e95948 <col:132> 'int' 0
|   |             `-ParenExpr 0x5609c5e95eb0 <col:136, col:320> 'int'
|   |               `-ConditionalOperator 0x5609c5e95e80 <col:137, col:319> 'int'
|   |                 |-BinaryOperator 0x5609c5e95b20 <col:137, col:193> 'int' '&&'
|   |                 | |-BinaryOperator 0x5609c5e95ab0 <col:137, col:174> 'int' '&&'
|   |                 | | |-BinaryOperator 0x5609c5e95a40 <col:137, col:156> 'int' '&&'
|   |                 | | | |-ImplicitCastExpr 0x5609c5e95a28 <col:137> 'int' <IntegralCast>
|   |                 | | | | `-ImplicitCastExpr 0x5609c5e95a10 <col:137> '_Bool' <LValueToRValue>
|   |                 | | | |   `-DeclRefExpr 0x5609c5e959a0 <col:137> '_Bool' lvalue Var 0x5609c5e8ca60 'x$w_buff0_used' '_Bool'
|   |                 | | | `-UnaryOperator 0x5609c5e959f8 <col:155, col:156> 'int' prefix '!' cannot overflow
|   |                 | | |   `-ImplicitCastExpr 0x5609c5e959e0 <col:156> '_Bool' <LValueToRValue>
|   |                 | | |     `-DeclRefExpr 0x5609c5e959c0 <col:156> '_Bool' lvalue Var 0x5609c5e8c7f8 'x$r_buff1_thd3' '_Bool'
|   |                 | | `-ImplicitCastExpr 0x5609c5e95a98 <col:174> 'int' <IntegralCast>
|   |                 | |   `-ImplicitCastExpr 0x5609c5e95a80 <col:174> '_Bool' <LValueToRValue>
|   |                 | |     `-DeclRefExpr 0x5609c5e95a60 <col:174> '_Bool' lvalue Var 0x5609c5e8db98 'x$w_buff1_used' '_Bool'
|   |                 | `-UnaryOperator 0x5609c5e95b08 <col:192, col:193> 'int' prefix '!' cannot overflow
|   |                 |   `-ImplicitCastExpr 0x5609c5e95af0 <col:193> '_Bool' <LValueToRValue>
|   |                 |     `-DeclRefExpr 0x5609c5e95ad0 <col:193> '_Bool' lvalue Var 0x5609c5e8c5a0 'x$r_buff0_thd3' '_Bool'
|   |                 |-ImplicitCastExpr 0x5609c5e95e68 <col:210> 'int' <IntegralCast>
|   |                 | `-ImplicitCastExpr 0x5609c5e95e50 <col:210> '_Bool' <LValueToRValue>
|   |                 |   `-DeclRefExpr 0x5609c5e95b40 <col:210> '_Bool' lvalue Var 0x5609c5e8c5a0 'x$r_buff0_thd3' '_Bool'
|   |                 `-ParenExpr 0x5609c5e95e30 <col:227, col:319> 'int'
|   |                   `-ConditionalOperator 0x5609c5e95e00 <col:228, col:318> 'int'
|   |                     |-BinaryOperator 0x5609c5e95d00 <col:228, col:283> 'int' '&&'
|   |                     | |-BinaryOperator 0x5609c5e95c90 <col:228, col:264> 'int' '&&'
|   |                     | | |-BinaryOperator 0x5609c5e95c20 <col:228, col:246> 'int' '&&'
|   |                     | | | |-ImplicitCastExpr 0x5609c5e95bd8 <col:228> 'int' <IntegralCast>
|   |                     | | | | `-ImplicitCastExpr 0x5609c5e95bc0 <col:228> '_Bool' <LValueToRValue>
|   |                     | | | |   `-DeclRefExpr 0x5609c5e95b60 <col:228> '_Bool' lvalue Var 0x5609c5e8ca60 'x$w_buff0_used' '_Bool'
|   |                     | | | `-ImplicitCastExpr 0x5609c5e95c08 <col:246> 'int' <IntegralCast>
|   |                     | | |   `-ImplicitCastExpr 0x5609c5e95bf0 <col:246> '_Bool' <LValueToRValue>
|   |                     | | |     `-DeclRefExpr 0x5609c5e95ba0 <col:246> '_Bool' lvalue Var 0x5609c5e8c7f8 'x$r_buff1_thd3' '_Bool'
|   |                     | | `-ImplicitCastExpr 0x5609c5e95c78 <col:264> 'int' <IntegralCast>
|   |                     | |   `-ImplicitCastExpr 0x5609c5e95c60 <col:264> '_Bool' <LValueToRValue>
|   |                     | |     `-DeclRefExpr 0x5609c5e95c40 <col:264> '_Bool' lvalue Var 0x5609c5e8db98 'x$w_buff1_used' '_Bool'
|   |                     | `-UnaryOperator 0x5609c5e95ce8 <col:282, col:283> 'int' prefix '!' cannot overflow
|   |                     |   `-ImplicitCastExpr 0x5609c5e95cd0 <col:283> '_Bool' <LValueToRValue>
|   |                     |     `-DeclRefExpr 0x5609c5e95cb0 <col:283> '_Bool' lvalue Var 0x5609c5e8c5a0 'x$r_buff0_thd3' '_Bool'
|   |                     |-ImplicitCastExpr 0x5609c5e95dd0 <col:300, col:307> 'int' <IntegralCast>
|   |                     | `-CStyleCastExpr 0x5609c5e95d50 <col:300, col:307> '_Bool' <IntegralToBoolean>
|   |                     |   `-IntegerLiteral 0x5609c5e95d20 <col:307> 'int' 0
|   |                     `-ImplicitCastExpr 0x5609c5e95de8 <col:311, col:318> 'int' <IntegralCast>
|   |                       `-CStyleCastExpr 0x5609c5e95da8 <col:311, col:318> '_Bool' <IntegralToBoolean>
|   |                         `-IntegerLiteral 0x5609c5e95d78 <col:318> 'int' 0
|   |-BinaryOperator 0x5609c5e96a18 <line:795:3, col:351> '_Bool' '='
|   | |-DeclRefExpr 0x5609c5e96080 <col:3> '_Bool' lvalue Var 0x5609c5e8c7f8 'x$r_buff1_thd3' '_Bool'
|   | `-ImplicitCastExpr 0x5609c5e96a00 <col:20, col:351> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x5609c5e969d0 <col:20, col:351> 'int'
|   |     |-ImplicitCastExpr 0x5609c5e96988 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x5609c5e96970 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x5609c5e960a0 <col:20> '_Bool' lvalue Var 0x5609c5e8de20 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x5609c5e969b8 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x5609c5e969a0 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x5609c5e960c0 <col:36> '_Bool' lvalue Var 0x5609c5e8c7f8 'x$r_buff1_thd3' '_Bool'
|   |     `-ParenExpr 0x5609c5e96950 <col:53, col:351> 'int'
|   |       `-ConditionalOperator 0x5609c5e96920 <col:54, col:350> 'int'
|   |         |-UnaryOperator 0x5609c5e96118 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | `-ImplicitCastExpr 0x5609c5e96100 <col:55> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x5609c5e960e0 <col:55> '_Bool' lvalue Var 0x5609c5e8ca60 'x$w_buff0_used' '_Bool'
|   |         |-ImplicitCastExpr 0x5609c5e96908 <col:72> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x5609c5e968f0 <col:72> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x5609c5e96130 <col:72> '_Bool' lvalue Var 0x5609c5e8c7f8 'x$r_buff1_thd3' '_Bool'
|   |         `-ParenExpr 0x5609c5e968d0 <col:89, col:350> 'int'
|   |           `-ConditionalOperator 0x5609c5e968a0 <col:90, col:349> 'int'
|   |             |-BinaryOperator 0x5609c5e961f0 <col:90, col:108> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x5609c5e961a8 <col:90> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x5609c5e96190 <col:90> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x5609c5e96150 <col:90> '_Bool' lvalue Var 0x5609c5e8ca60 'x$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x5609c5e961d8 <col:108> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x5609c5e961c0 <col:108> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x5609c5e96170 <col:108> '_Bool' lvalue Var 0x5609c5e8c5a0 'x$r_buff0_thd3' '_Bool'
|   |             |-ImplicitCastExpr 0x5609c5e96888 <col:125, col:132> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x5609c5e96240 <col:125, col:132> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x5609c5e96210 <col:132> 'int' 0
|   |             `-ParenExpr 0x5609c5e96868 <col:136, col:349> 'int'
|   |               `-ConditionalOperator 0x5609c5e96838 <col:137, col:348> 'int'
|   |                 |-BinaryOperator 0x5609c5e963e8 <col:137, col:193> 'int' '&&'
|   |                 | |-BinaryOperator 0x5609c5e96378 <col:137, col:174> 'int' '&&'
|   |                 | | |-BinaryOperator 0x5609c5e96308 <col:137, col:156> 'int' '&&'
|   |                 | | | |-ImplicitCastExpr 0x5609c5e962f0 <col:137> 'int' <IntegralCast>
|   |                 | | | | `-ImplicitCastExpr 0x5609c5e962d8 <col:137> '_Bool' <LValueToRValue>
|   |                 | | | |   `-DeclRefExpr 0x5609c5e96268 <col:137> '_Bool' lvalue Var 0x5609c5e8ca60 'x$w_buff0_used' '_Bool'
|   |                 | | | `-UnaryOperator 0x5609c5e962c0 <col:155, col:156> 'int' prefix '!' cannot overflow
|   |                 | | |   `-ImplicitCastExpr 0x5609c5e962a8 <col:156> '_Bool' <LValueToRValue>
|   |                 | | |     `-DeclRefExpr 0x5609c5e96288 <col:156> '_Bool' lvalue Var 0x5609c5e8c7f8 'x$r_buff1_thd3' '_Bool'
|   |                 | | `-ImplicitCastExpr 0x5609c5e96360 <col:174> 'int' <IntegralCast>
|   |                 | |   `-ImplicitCastExpr 0x5609c5e96348 <col:174> '_Bool' <LValueToRValue>
|   |                 | |     `-DeclRefExpr 0x5609c5e96328 <col:174> '_Bool' lvalue Var 0x5609c5e8db98 'x$w_buff1_used' '_Bool'
|   |                 | `-UnaryOperator 0x5609c5e963d0 <col:192, col:193> 'int' prefix '!' cannot overflow
|   |                 |   `-ImplicitCastExpr 0x5609c5e963b8 <col:193> '_Bool' <LValueToRValue>
|   |                 |     `-DeclRefExpr 0x5609c5e96398 <col:193> '_Bool' lvalue Var 0x5609c5e8c5a0 'x$r_buff0_thd3' '_Bool'
|   |                 |-ParenExpr 0x5609c5e96548 <col:210, col:252> 'int'
|   |                 | `-ConditionalOperator 0x5609c5e96518 <col:211, col:251> 'int'
|   |                 |   |-ImplicitCastExpr 0x5609c5e964b8 <col:211> 'int' <IntegralCast>
|   |                 |   | `-ImplicitCastExpr 0x5609c5e964a0 <col:211> '_Bool' <LValueToRValue>
|   |                 |   |   `-DeclRefExpr 0x5609c5e96408 <col:211> '_Bool' lvalue Var 0x5609c5e8dd30 'weak$$choice0' '_Bool'
|   |                 |   |-ImplicitCastExpr 0x5609c5e964e8 <col:227> 'int' <IntegralCast>
|   |                 |   | `-ImplicitCastExpr 0x5609c5e964d0 <col:227> '_Bool' <LValueToRValue>
|   |                 |   |   `-DeclRefExpr 0x5609c5e96428 <col:227> '_Bool' lvalue Var 0x5609c5e8c7f8 'x$r_buff1_thd3' '_Bool'
|   |                 |   `-ImplicitCastExpr 0x5609c5e96500 <col:244, col:251> 'int' <IntegralCast>
|   |                 |     `-CStyleCastExpr 0x5609c5e96478 <col:244, col:251> '_Bool' <IntegralToBoolean>
|   |                 |       `-IntegerLiteral 0x5609c5e96448 <col:251> 'int' 0
|   |                 `-ParenExpr 0x5609c5e96818 <col:256, col:348> 'int'
|   |                   `-ConditionalOperator 0x5609c5e967e8 <col:257, col:347> 'int'
|   |                     |-BinaryOperator 0x5609c5e966e8 <col:257, col:312> 'int' '&&'
|   |                     | |-BinaryOperator 0x5609c5e96678 <col:257, col:293> 'int' '&&'
|   |                     | | |-BinaryOperator 0x5609c5e96608 <col:257, col:275> 'int' '&&'
|   |                     | | | |-ImplicitCastExpr 0x5609c5e965c0 <col:257> 'int' <IntegralCast>
|   |                     | | | | `-ImplicitCastExpr 0x5609c5e965a8 <col:257> '_Bool' <LValueToRValue>
|   |                     | | | |   `-DeclRefExpr 0x5609c5e96568 <col:257> '_Bool' lvalue Var 0x5609c5e8ca60 'x$w_buff0_used' '_Bool'
|   |                     | | | `-ImplicitCastExpr 0x5609c5e965f0 <col:275> 'int' <IntegralCast>
|   |                     | | |   `-ImplicitCastExpr 0x5609c5e965d8 <col:275> '_Bool' <LValueToRValue>
|   |                     | | |     `-DeclRefExpr 0x5609c5e96588 <col:275> '_Bool' lvalue Var 0x5609c5e8c7f8 'x$r_buff1_thd3' '_Bool'
|   |                     | | `-ImplicitCastExpr 0x5609c5e96660 <col:293> 'int' <IntegralCast>
|   |                     | |   `-ImplicitCastExpr 0x5609c5e96648 <col:293> '_Bool' <LValueToRValue>
|   |                     | |     `-DeclRefExpr 0x5609c5e96628 <col:293> '_Bool' lvalue Var 0x5609c5e8db98 'x$w_buff1_used' '_Bool'
|   |                     | `-UnaryOperator 0x5609c5e966d0 <col:311, col:312> 'int' prefix '!' cannot overflow
|   |                     |   `-ImplicitCastExpr 0x5609c5e966b8 <col:312> '_Bool' <LValueToRValue>
|   |                     |     `-DeclRefExpr 0x5609c5e96698 <col:312> '_Bool' lvalue Var 0x5609c5e8c5a0 'x$r_buff0_thd3' '_Bool'
|   |                     |-ImplicitCastExpr 0x5609c5e967b8 <col:329, col:336> 'int' <IntegralCast>
|   |                     | `-CStyleCastExpr 0x5609c5e96738 <col:329, col:336> '_Bool' <IntegralToBoolean>
|   |                     |   `-IntegerLiteral 0x5609c5e96708 <col:336> 'int' 0
|   |                     `-ImplicitCastExpr 0x5609c5e967d0 <col:340, col:347> 'int' <IntegralCast>
|   |                       `-CStyleCastExpr 0x5609c5e96790 <col:340, col:347> '_Bool' <IntegralToBoolean>
|   |                         `-IntegerLiteral 0x5609c5e96760 <col:347> 'int' 0
|   |-BinaryOperator 0x5609c5e96ab0 <line:796:3, col:45> '_Bool' '='
|   | |-DeclRefExpr 0x5609c5e96a38 <col:3> '_Bool' lvalue Var 0x5609c5e8be48 '__unbuffered_p2_EAX$read_delayed' '_Bool'
|   | `-CStyleCastExpr 0x5609c5e96a88 <col:38, col:45> '_Bool' <IntegralToBoolean>
|   |   `-IntegerLiteral 0x5609c5e96a58 <col:45> 'int' 1
|   |-BinaryOperator 0x5609c5e96b28 <line:797:3, col:43> 'int *' '='
|   | |-DeclRefExpr 0x5609c5e96ad0 <col:3> 'int *' lvalue Var 0x5609c5e8bec8 '__unbuffered_p2_EAX$read_delayed_var' 'int *'
|   | `-UnaryOperator 0x5609c5e96b10 <col:42, col:43> 'int *' prefix '&' cannot overflow
|   |   `-DeclRefExpr 0x5609c5e96af0 <col:43> 'int' lvalue Var 0x5609c5e8c2a8 'x' 'int'
|   |-BinaryOperator 0x5609c5e96bb0 <line:798:3, col:25> 'int' '='
|   | |-DeclRefExpr 0x5609c5e96b48 <col:3> 'int' lvalue Var 0x5609c5e8b7d8 '__unbuffered_p2_EAX' 'int'
|   | `-ImplicitCastExpr 0x5609c5e96b88 <col:25> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x5609c5e96b68 <col:25> 'int' lvalue Var 0x5609c5e8c2a8 'x' 'int'
|   |-BinaryOperator 0x5609c5e96ce0 <line:799:3, col:37> 'int' '='
|   | |-DeclRefExpr 0x5609c5e96bd0 <col:3> 'int' lvalue Var 0x5609c5e8c2a8 'x' 'int'
|   | `-ConditionalOperator 0x5609c5e96cb0 <col:7, col:37> 'int'
|   |   |-ImplicitCastExpr 0x5609c5e96c68 <col:7> 'int' <IntegralCast>
|   |   | `-ImplicitCastExpr 0x5609c5e96c50 <col:7> '_Bool' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x5609c5e96bf0 <col:7> '_Bool' lvalue Var 0x5609c5e8c340 'x$flush_delayed' '_Bool'
|   |   |-ImplicitCastExpr 0x5609c5e96c80 <col:25> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x5609c5e96c10 <col:25> 'int' lvalue Var 0x5609c5e8c3c0 'x$mem_tmp' 'int'
|   |   `-ImplicitCastExpr 0x5609c5e96c98 <col:37> 'int' <LValueToRValue>
|   |     `-DeclRefExpr 0x5609c5e96c30 <col:37> 'int' lvalue Var 0x5609c5e8c2a8 'x' 'int'
|   |-BinaryOperator 0x5609c5e96d78 <line:800:3, col:28> '_Bool' '='
|   | |-DeclRefExpr 0x5609c5e96d00 <col:3> '_Bool' lvalue Var 0x5609c5e8c340 'x$flush_delayed' '_Bool'
|   | `-CStyleCastExpr 0x5609c5e96d50 <col:21, col:28> '_Bool' <IntegralToBoolean>
|   |   `-IntegerLiteral 0x5609c5e96d20 <col:28> 'int' 0
|   |-CallExpr 0x5609c5e96dd0 <line:801:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x5609c5e96db8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5609c5e96d98 <col:3> 'void ()' Function 0x5609c5e32060 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x5609c5e96e28 <line:802:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x5609c5e96e10 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5609c5e96df0 <col:3> 'void ()' Function 0x5609c5e31fa0 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x5609c5e96e88 <line:803:3, col:7> 'int' '='
|   | |-DeclRefExpr 0x5609c5e96e48 <col:3> 'int' lvalue Var 0x5609c5e8dc98 'y' 'int'
|   | `-IntegerLiteral 0x5609c5e96e68 <col:7> 'int' 1
|   |-CallExpr 0x5609c5e96ee0 <line:804:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x5609c5e96ec8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5609c5e96ea8 <col:3> 'void ()' Function 0x5609c5e32060 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x5609c5e96f38 <line:805:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x5609c5e96f20 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5609c5e96f00 <col:3> 'void ()' Function 0x5609c5e31fa0 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x5609c5e97220 <line:806:3, col:103> 'int' '='
|   | |-DeclRefExpr 0x5609c5e96f58 <col:3> 'int' lvalue Var 0x5609c5e8c2a8 'x' 'int'
|   | `-ConditionalOperator 0x5609c5e971f0 <col:7, col:103> 'int'
|   |   |-BinaryOperator 0x5609c5e97018 <col:7, col:25> 'int' '&&'
|   |   | |-ImplicitCastExpr 0x5609c5e96fd0 <col:7> 'int' <IntegralCast>
|   |   | | `-ImplicitCastExpr 0x5609c5e96fb8 <col:7> '_Bool' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x5609c5e96f78 <col:7> '_Bool' lvalue Var 0x5609c5e8ca60 'x$w_buff0_used' '_Bool'
|   |   | `-ImplicitCastExpr 0x5609c5e97000 <col:25> 'int' <IntegralCast>
|   |   |   `-ImplicitCastExpr 0x5609c5e96fe8 <col:25> '_Bool' <LValueToRValue>
|   |   |     `-DeclRefExpr 0x5609c5e96f98 <col:25> '_Bool' lvalue Var 0x5609c5e8c5a0 'x$r_buff0_thd3' '_Bool'
|   |   |-ImplicitCastExpr 0x5609c5e971d8 <col:42> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x5609c5e97038 <col:42> 'int' lvalue Var 0x5609c5e8c9e8 'x$w_buff0' 'int'
|   |   `-ParenExpr 0x5609c5e971b8 <col:54, col:103> 'int'
|   |     `-ConditionalOperator 0x5609c5e97188 <col:55, col:102> 'int'
|   |       |-BinaryOperator 0x5609c5e970f8 <col:55, col:73> 'int' '&&'
|   |       | |-ImplicitCastExpr 0x5609c5e970b0 <col:55> 'int' <IntegralCast>
|   |       | | `-ImplicitCastExpr 0x5609c5e97098 <col:55> '_Bool' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x5609c5e97058 <col:55> '_Bool' lvalue Var 0x5609c5e8db98 'x$w_buff1_used' '_Bool'
|   |       | `-ImplicitCastExpr 0x5609c5e970e0 <col:73> 'int' <IntegralCast>
|   |       |   `-ImplicitCastExpr 0x5609c5e970c8 <col:73> '_Bool' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x5609c5e97078 <col:73> '_Bool' lvalue Var 0x5609c5e8c7f8 'x$r_buff1_thd3' '_Bool'
|   |       |-ImplicitCastExpr 0x5609c5e97158 <col:90> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x5609c5e97118 <col:90> 'int' lvalue Var 0x5609c5e8db20 'x$w_buff1' 'int'
|   |       `-ImplicitCastExpr 0x5609c5e97170 <col:102> 'int' <LValueToRValue>
|   |         `-DeclRefExpr 0x5609c5e97138 <col:102> 'int' lvalue Var 0x5609c5e8c2a8 'x' 'int'
|   |-BinaryOperator 0x5609c5e97428 <line:807:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x5609c5e97240 <col:3> '_Bool' lvalue Var 0x5609c5e8ca60 'x$w_buff0_used' '_Bool'
|   | `-ImplicitCastExpr 0x5609c5e97410 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x5609c5e973e0 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x5609c5e97300 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x5609c5e972b8 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x5609c5e972a0 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x5609c5e97260 <col:20> '_Bool' lvalue Var 0x5609c5e8ca60 'x$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x5609c5e972e8 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x5609c5e972d0 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x5609c5e97280 <col:38> '_Bool' lvalue Var 0x5609c5e8c5a0 'x$r_buff0_thd3' '_Bool'
|   |     |-ImplicitCastExpr 0x5609c5e97398 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x5609c5e97350 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x5609c5e97320 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x5609c5e973c8 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x5609c5e973b0 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x5609c5e97378 <col:66> '_Bool' lvalue Var 0x5609c5e8ca60 'x$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x5609c5e97710 <line:808:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x5609c5e97448 <col:3> '_Bool' lvalue Var 0x5609c5e8db98 'x$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x5609c5e976f8 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x5609c5e976c8 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x5609c5e975e8 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x5609c5e97508 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x5609c5e974c0 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x5609c5e974a8 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x5609c5e97468 <col:20> '_Bool' lvalue Var 0x5609c5e8ca60 'x$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x5609c5e974f0 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x5609c5e974d8 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x5609c5e97488 <col:38> '_Bool' lvalue Var 0x5609c5e8c5a0 'x$r_buff0_thd3' '_Bool'
|   |     | `-BinaryOperator 0x5609c5e975c8 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x5609c5e97580 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x5609c5e97568 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x5609c5e97528 <col:56> '_Bool' lvalue Var 0x5609c5e8db98 'x$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x5609c5e975b0 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x5609c5e97598 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x5609c5e97548 <col:74> '_Bool' lvalue Var 0x5609c5e8c7f8 'x$r_buff1_thd3' '_Bool'
|   |     |-ImplicitCastExpr 0x5609c5e97680 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x5609c5e97638 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x5609c5e97608 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x5609c5e976b0 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x5609c5e97698 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x5609c5e97660 <col:102> '_Bool' lvalue Var 0x5609c5e8db98 'x$w_buff1_used' '_Bool'
|   |-BinaryOperator 0x5609c5e97918 <line:809:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x5609c5e97730 <col:3> '_Bool' lvalue Var 0x5609c5e8c5a0 'x$r_buff0_thd3' '_Bool'
|   | `-ImplicitCastExpr 0x5609c5e97900 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x5609c5e978d0 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x5609c5e977f0 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x5609c5e977a8 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x5609c5e97790 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x5609c5e97750 <col:20> '_Bool' lvalue Var 0x5609c5e8ca60 'x$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x5609c5e977d8 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x5609c5e977c0 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x5609c5e97770 <col:38> '_Bool' lvalue Var 0x5609c5e8c5a0 'x$r_buff0_thd3' '_Bool'
|   |     |-ImplicitCastExpr 0x5609c5e97888 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x5609c5e97840 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x5609c5e97810 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x5609c5e978b8 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x5609c5e978a0 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x5609c5e97868 <col:66> '_Bool' lvalue Var 0x5609c5e8c5a0 'x$r_buff0_thd3' '_Bool'
|   |-BinaryOperator 0x5609c5e97c20 <line:810:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x5609c5e97938 <col:3> '_Bool' lvalue Var 0x5609c5e8c7f8 'x$r_buff1_thd3' '_Bool'
|   | `-ImplicitCastExpr 0x5609c5e97c08 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x5609c5e97bd8 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x5609c5e97ad8 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x5609c5e979f8 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x5609c5e979b0 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x5609c5e97998 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x5609c5e97958 <col:20> '_Bool' lvalue Var 0x5609c5e8ca60 'x$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x5609c5e979e0 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x5609c5e979c8 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x5609c5e97978 <col:38> '_Bool' lvalue Var 0x5609c5e8c5a0 'x$r_buff0_thd3' '_Bool'
|   |     | `-BinaryOperator 0x5609c5e97ab8 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x5609c5e97a70 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x5609c5e97a58 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x5609c5e97a18 <col:56> '_Bool' lvalue Var 0x5609c5e8db98 'x$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x5609c5e97aa0 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x5609c5e97a88 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x5609c5e97a38 <col:74> '_Bool' lvalue Var 0x5609c5e8c7f8 'x$r_buff1_thd3' '_Bool'
|   |     |-ImplicitCastExpr 0x5609c5e97b70 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x5609c5e97b28 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x5609c5e97af8 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x5609c5e97bc0 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x5609c5e97b88 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x5609c5e97b50 <col:102> '_Bool' lvalue Var 0x5609c5e8c7f8 'x$r_buff1_thd3' '_Bool'
|   |-CallExpr 0x5609c5e97c78 <line:811:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x5609c5e97c60 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5609c5e97c40 <col:3> 'void ()' Function 0x5609c5e32060 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x5609c5e97cd0 <line:812:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x5609c5e97cb8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5609c5e97c98 <col:3> 'void ()' Function 0x5609c5e31fa0 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x5609c5e97d88 <line:813:3, col:41> 'int' '='
|   | |-DeclRefExpr 0x5609c5e97cf0 <col:3> 'int' lvalue Var 0x5609c5e8b478 '__unbuffered_cnt' 'int'
|   | `-BinaryOperator 0x5609c5e97d68 <col:22, col:41> 'int' '+'
|   |   |-ImplicitCastExpr 0x5609c5e97d50 <col:22> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x5609c5e97d10 <col:22> 'int' lvalue Var 0x5609c5e8b478 '__unbuffered_cnt' 'int'
|   |   `-IntegerLiteral 0x5609c5e97d30 <col:41> 'int' 1
|   |-CallExpr 0x5609c5e97de0 <line:814:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x5609c5e97dc8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5609c5e97da8 <col:3> 'void ()' Function 0x5609c5e32060 '__VERIFIER_atomic_end' 'void ()'
|   `-ReturnStmt 0x5609c5e97e58 <line:815:3, col:36>
|     `-CallExpr 0x5609c5e97e38 <col:10, col:36> 'void *'
|       `-ImplicitCastExpr 0x5609c5e97e20 <col:10> 'void *(*)(void)' <FunctionToPointerDecay>
|         `-DeclRefExpr 0x5609c5e97e00 <col:10> 'void *(void)' Function 0x5609c5e31ab8 '__VERIFIER_nondet_pointer' 'void *(void)'
|-FunctionDecl 0x5609c5e98030 prev 0x5609c5e8b0f8 <line:817:1, line:833:1> line:817:8 used P3 'void *(void *)'
| |-ParmVarDecl 0x5609c5e97f98 <col:11, col:17> col:17 arg 'void *'
| `-CompoundStmt 0x5609c5e99148 <line:818:1, line:833:1>
|   |-CallExpr 0x5609c5e98110 <line:819:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x5609c5e980f8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5609c5e980d8 <col:3> 'void ()' Function 0x5609c5e31fa0 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x5609c5e98170 <line:820:3, col:7> 'int' '='
|   | |-DeclRefExpr 0x5609c5e98130 <col:3> 'int' lvalue Var 0x5609c5e8dc98 'y' 'int'
|   | `-IntegerLiteral 0x5609c5e98150 <col:7> 'int' 2
|   |-CallExpr 0x5609c5e981c8 <line:821:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x5609c5e981b0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5609c5e98190 <col:3> 'void ()' Function 0x5609c5e32060 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x5609c5e98220 <line:822:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x5609c5e98208 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5609c5e981e8 <col:3> 'void ()' Function 0x5609c5e31fa0 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x5609c5e98508 <line:823:3, col:103> 'int' '='
|   | |-DeclRefExpr 0x5609c5e98240 <col:3> 'int' lvalue Var 0x5609c5e8c2a8 'x' 'int'
|   | `-ConditionalOperator 0x5609c5e984d8 <col:7, col:103> 'int'
|   |   |-BinaryOperator 0x5609c5e98300 <col:7, col:25> 'int' '&&'
|   |   | |-ImplicitCastExpr 0x5609c5e982b8 <col:7> 'int' <IntegralCast>
|   |   | | `-ImplicitCastExpr 0x5609c5e982a0 <col:7> '_Bool' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x5609c5e98260 <col:7> '_Bool' lvalue Var 0x5609c5e8ca60 'x$w_buff0_used' '_Bool'
|   |   | `-ImplicitCastExpr 0x5609c5e982e8 <col:25> 'int' <IntegralCast>
|   |   |   `-ImplicitCastExpr 0x5609c5e982d0 <col:25> '_Bool' <LValueToRValue>
|   |   |     `-DeclRefExpr 0x5609c5e98280 <col:25> '_Bool' lvalue Var 0x5609c5e8c618 'x$r_buff0_thd4' '_Bool'
|   |   |-ImplicitCastExpr 0x5609c5e984c0 <col:42> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x5609c5e98320 <col:42> 'int' lvalue Var 0x5609c5e8c9e8 'x$w_buff0' 'int'
|   |   `-ParenExpr 0x5609c5e984a0 <col:54, col:103> 'int'
|   |     `-ConditionalOperator 0x5609c5e98470 <col:55, col:102> 'int'
|   |       |-BinaryOperator 0x5609c5e983e0 <col:55, col:73> 'int' '&&'
|   |       | |-ImplicitCastExpr 0x5609c5e98398 <col:55> 'int' <IntegralCast>
|   |       | | `-ImplicitCastExpr 0x5609c5e98380 <col:55> '_Bool' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x5609c5e98340 <col:55> '_Bool' lvalue Var 0x5609c5e8db98 'x$w_buff1_used' '_Bool'
|   |       | `-ImplicitCastExpr 0x5609c5e983c8 <col:73> 'int' <IntegralCast>
|   |       |   `-ImplicitCastExpr 0x5609c5e983b0 <col:73> '_Bool' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x5609c5e98360 <col:73> '_Bool' lvalue Var 0x5609c5e8c870 'x$r_buff1_thd4' '_Bool'
|   |       |-ImplicitCastExpr 0x5609c5e98440 <col:90> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x5609c5e98400 <col:90> 'int' lvalue Var 0x5609c5e8db20 'x$w_buff1' 'int'
|   |       `-ImplicitCastExpr 0x5609c5e98458 <col:102> 'int' <LValueToRValue>
|   |         `-DeclRefExpr 0x5609c5e98420 <col:102> 'int' lvalue Var 0x5609c5e8c2a8 'x' 'int'
|   |-BinaryOperator 0x5609c5e98710 <line:824:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x5609c5e98528 <col:3> '_Bool' lvalue Var 0x5609c5e8ca60 'x$w_buff0_used' '_Bool'
|   | `-ImplicitCastExpr 0x5609c5e986f8 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x5609c5e986c8 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x5609c5e985e8 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x5609c5e985a0 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x5609c5e98588 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x5609c5e98548 <col:20> '_Bool' lvalue Var 0x5609c5e8ca60 'x$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x5609c5e985d0 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x5609c5e985b8 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x5609c5e98568 <col:38> '_Bool' lvalue Var 0x5609c5e8c618 'x$r_buff0_thd4' '_Bool'
|   |     |-ImplicitCastExpr 0x5609c5e98680 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x5609c5e98638 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x5609c5e98608 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x5609c5e986b0 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x5609c5e98698 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x5609c5e98660 <col:66> '_Bool' lvalue Var 0x5609c5e8ca60 'x$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x5609c5e989f8 <line:825:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x5609c5e98730 <col:3> '_Bool' lvalue Var 0x5609c5e8db98 'x$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x5609c5e989e0 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x5609c5e989b0 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x5609c5e988d0 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x5609c5e987f0 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x5609c5e987a8 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x5609c5e98790 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x5609c5e98750 <col:20> '_Bool' lvalue Var 0x5609c5e8ca60 'x$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x5609c5e987d8 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x5609c5e987c0 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x5609c5e98770 <col:38> '_Bool' lvalue Var 0x5609c5e8c618 'x$r_buff0_thd4' '_Bool'
|   |     | `-BinaryOperator 0x5609c5e988b0 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x5609c5e98868 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x5609c5e98850 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x5609c5e98810 <col:56> '_Bool' lvalue Var 0x5609c5e8db98 'x$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x5609c5e98898 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x5609c5e98880 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x5609c5e98830 <col:74> '_Bool' lvalue Var 0x5609c5e8c870 'x$r_buff1_thd4' '_Bool'
|   |     |-ImplicitCastExpr 0x5609c5e98968 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x5609c5e98920 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x5609c5e988f0 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x5609c5e98998 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x5609c5e98980 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x5609c5e98948 <col:102> '_Bool' lvalue Var 0x5609c5e8db98 'x$w_buff1_used' '_Bool'
|   |-BinaryOperator 0x5609c5e98c18 <line:826:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x5609c5e98a18 <col:3> '_Bool' lvalue Var 0x5609c5e8c618 'x$r_buff0_thd4' '_Bool'
|   | `-ImplicitCastExpr 0x5609c5e98c00 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x5609c5e98bd0 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x5609c5e98ad8 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x5609c5e98a90 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x5609c5e98a78 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x5609c5e98a38 <col:20> '_Bool' lvalue Var 0x5609c5e8ca60 'x$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x5609c5e98ac0 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x5609c5e98aa8 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x5609c5e98a58 <col:38> '_Bool' lvalue Var 0x5609c5e8c618 'x$r_buff0_thd4' '_Bool'
|   |     |-ImplicitCastExpr 0x5609c5e98b70 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x5609c5e98b28 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x5609c5e98af8 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x5609c5e98ba0 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x5609c5e98b88 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x5609c5e98b50 <col:66> '_Bool' lvalue Var 0x5609c5e8c618 'x$r_buff0_thd4' '_Bool'
|   |-BinaryOperator 0x5609c5e98f00 <line:827:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x5609c5e98c38 <col:3> '_Bool' lvalue Var 0x5609c5e8c870 'x$r_buff1_thd4' '_Bool'
|   | `-ImplicitCastExpr 0x5609c5e98ee8 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x5609c5e98eb8 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x5609c5e98dd8 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x5609c5e98cf8 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x5609c5e98cb0 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x5609c5e98c98 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x5609c5e98c58 <col:20> '_Bool' lvalue Var 0x5609c5e8ca60 'x$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x5609c5e98ce0 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x5609c5e98cc8 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x5609c5e98c78 <col:38> '_Bool' lvalue Var 0x5609c5e8c618 'x$r_buff0_thd4' '_Bool'
|   |     | `-BinaryOperator 0x5609c5e98db8 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x5609c5e98d70 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x5609c5e98d58 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x5609c5e98d18 <col:56> '_Bool' lvalue Var 0x5609c5e8db98 'x$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x5609c5e98da0 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x5609c5e98d88 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x5609c5e98d38 <col:74> '_Bool' lvalue Var 0x5609c5e8c870 'x$r_buff1_thd4' '_Bool'
|   |     |-ImplicitCastExpr 0x5609c5e98e70 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x5609c5e98e28 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x5609c5e98df8 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x5609c5e98ea0 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x5609c5e98e88 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x5609c5e98e50 <col:102> '_Bool' lvalue Var 0x5609c5e8c870 'x$r_buff1_thd4' '_Bool'
|   |-CallExpr 0x5609c5e98f58 <line:828:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x5609c5e98f40 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5609c5e98f20 <col:3> 'void ()' Function 0x5609c5e32060 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x5609c5e98fb0 <line:829:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x5609c5e98f98 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5609c5e98f78 <col:3> 'void ()' Function 0x5609c5e31fa0 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x5609c5e99068 <line:830:3, col:41> 'int' '='
|   | |-DeclRefExpr 0x5609c5e98fd0 <col:3> 'int' lvalue Var 0x5609c5e8b478 '__unbuffered_cnt' 'int'
|   | `-BinaryOperator 0x5609c5e99048 <col:22, col:41> 'int' '+'
|   |   |-ImplicitCastExpr 0x5609c5e99030 <col:22> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x5609c5e98ff0 <col:22> 'int' lvalue Var 0x5609c5e8b478 '__unbuffered_cnt' 'int'
|   |   `-IntegerLiteral 0x5609c5e99010 <col:41> 'int' 1
|   |-CallExpr 0x5609c5e990c0 <line:831:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x5609c5e990a8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5609c5e99088 <col:3> 'void ()' Function 0x5609c5e32060 '__VERIFIER_atomic_end' 'void ()'
|   `-ReturnStmt 0x5609c5e99138 <line:832:3, col:36>
|     `-CallExpr 0x5609c5e99118 <col:10, col:36> 'void *'
|       `-ImplicitCastExpr 0x5609c5e99100 <col:10> 'void *(*)(void)' <FunctionToPointerDecay>
|         `-DeclRefExpr 0x5609c5e990e0 <col:10> 'void *(void)' Function 0x5609c5e31ab8 '__VERIFIER_nondet_pointer' 'void *(void)'
|-FunctionDecl 0x5609c5e991e8 prev 0x5609c5e8b1c0 <line:834:1, line:836:1> line:834:6 fence 'void ()'
| `-CompoundStmt 0x5609c5e99288 <line:835:1, line:836:1>
|-FunctionDecl 0x5609c5e992b8 prev 0x5609c5e8b280 <line:837:1, line:839:1> line:837:6 isync 'void ()'
| `-CompoundStmt 0x5609c5e99358 <line:838:1, line:839:1>
|-FunctionDecl 0x5609c5e99388 prev 0x5609c5e8b340 <line:840:1, line:842:1> line:840:6 lwfence 'void ()'
| `-CompoundStmt 0x5609c5e99428 <line:841:1, line:842:1>
`-FunctionDecl 0x5609c5e99498 <line:843:1, line:871:1> line:843:5 main 'int ()'
  `-CompoundStmt 0x5609c5e9b6e0 <line:844:1, line:871:1>
    |-DeclStmt 0x5609c5e995b0 <line:845:3, col:18>
    | `-VarDecl 0x5609c5e99548 <col:3, col:13> col:13 used t2231 'pthread_t':'unsigned long'
    |-CallExpr 0x5609c5e997b8 <line:846:3, col:54> 'int'
    | |-ImplicitCastExpr 0x5609c5e997a0 <col:3> 'int (*)(pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x5609c5e995c8 <col:3> 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' Function 0x5609c5e725b8 'pthread_create' 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)'
    | |-UnaryOperator 0x5609c5e99608 <col:18, col:19> 'pthread_t *' prefix '&' cannot overflow
    | | `-DeclRefExpr 0x5609c5e995e8 <col:19> 'pthread_t':'unsigned long' lvalue Var 0x5609c5e99548 't2231' 'pthread_t':'unsigned long'
    | |-ImplicitCastExpr 0x5609c5e997f8 <col:26, col:36> 'const pthread_attr_t *' <NullToPointer>
    | | `-ParenExpr 0x5609c5e99680 <col:26, col:36> 'void *'
    | |   `-CStyleCastExpr 0x5609c5e99658 <col:27, col:35> 'void *' <NullToPointer>
    | |     `-IntegerLiteral 0x5609c5e99620 <col:35> 'int' 0
    | |-ImplicitCastExpr 0x5609c5e99810 <col:39> 'void *(*)(void *)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x5609c5e996a0 <col:39> 'void *(void *)' Function 0x5609c5e8df38 'P0' 'void *(void *)'
    | `-ParenExpr 0x5609c5e99720 <col:43, col:53> 'void *'
    |   `-CStyleCastExpr 0x5609c5e996f8 <col:44, col:52> 'void *' <NullToPointer>
    |     `-IntegerLiteral 0x5609c5e996c0 <col:52> 'int' 0
    |-DeclStmt 0x5609c5e998a0 <line:847:3, col:18>
    | `-VarDecl 0x5609c5e99838 <col:3, col:13> col:13 used t2232 'pthread_t':'unsigned long'
    |-CallExpr 0x5609c5e99a48 <line:848:3, col:54> 'int'
    | |-ImplicitCastExpr 0x5609c5e99a30 <col:3> 'int (*)(pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x5609c5e998b8 <col:3> 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' Function 0x5609c5e725b8 'pthread_create' 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)'
    | |-UnaryOperator 0x5609c5e998f8 <col:18, col:19> 'pthread_t *' prefix '&' cannot overflow
    | | `-DeclRefExpr 0x5609c5e998d8 <col:19> 'pthread_t':'unsigned long' lvalue Var 0x5609c5e99838 't2232' 'pthread_t':'unsigned long'
    | |-ImplicitCastExpr 0x5609c5e99a88 <col:26, col:36> 'const pthread_attr_t *' <NullToPointer>
    | | `-ParenExpr 0x5609c5e99970 <col:26, col:36> 'void *'
    | |   `-CStyleCastExpr 0x5609c5e99948 <col:27, col:35> 'void *' <NullToPointer>
    | |     `-IntegerLiteral 0x5609c5e99910 <col:35> 'int' 0
    | |-ImplicitCastExpr 0x5609c5e99aa0 <col:39> 'void *(*)(void *)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x5609c5e99990 <col:39> 'void *(void *)' Function 0x5609c5e91030 'P1' 'void *(void *)'
    | `-ParenExpr 0x5609c5e99a10 <col:43, col:53> 'void *'
    |   `-CStyleCastExpr 0x5609c5e999e8 <col:44, col:52> 'void *' <NullToPointer>
    |     `-IntegerLiteral 0x5609c5e999b0 <col:52> 'int' 0
    |-DeclStmt 0x5609c5e99b30 <line:849:3, col:18>
    | `-VarDecl 0x5609c5e99ac8 <col:3, col:13> col:13 used t2233 'pthread_t':'unsigned long'
    |-CallExpr 0x5609c5e99cf8 <line:850:3, col:54> 'int'
    | |-ImplicitCastExpr 0x5609c5e99ce0 <col:3> 'int (*)(pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x5609c5e99b48 <col:3> 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' Function 0x5609c5e725b8 'pthread_create' 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)'
    | |-UnaryOperator 0x5609c5e99b88 <col:18, col:19> 'pthread_t *' prefix '&' cannot overflow
    | | `-DeclRefExpr 0x5609c5e99b68 <col:19> 'pthread_t':'unsigned long' lvalue Var 0x5609c5e99ac8 't2233' 'pthread_t':'unsigned long'
    | |-ImplicitCastExpr 0x5609c5e99d38 <col:26, col:36> 'const pthread_attr_t *' <NullToPointer>
    | | `-ParenExpr 0x5609c5e99c20 <col:26, col:36> 'void *'
    | |   `-CStyleCastExpr 0x5609c5e99bf8 <col:27, col:35> 'void *' <NullToPointer>
    | |     `-IntegerLiteral 0x5609c5e99ba0 <col:35> 'int' 0
    | |-ImplicitCastExpr 0x5609c5e99d50 <col:39> 'void *(*)(void *)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x5609c5e99c40 <col:39> 'void *(void *)' Function 0x5609c5e928c8 'P2' 'void *(void *)'
    | `-ParenExpr 0x5609c5e99cc0 <col:43, col:53> 'void *'
    |   `-CStyleCastExpr 0x5609c5e99c98 <col:44, col:52> 'void *' <NullToPointer>
    |     `-IntegerLiteral 0x5609c5e99c60 <col:52> 'int' 0
    |-DeclStmt 0x5609c5e99de0 <line:851:3, col:18>
    | `-VarDecl 0x5609c5e99d78 <col:3, col:13> col:13 used t2234 'pthread_t':'unsigned long'
    |-CallExpr 0x5609c5e99f88 <line:852:3, col:54> 'int'
    | |-ImplicitCastExpr 0x5609c5e99f70 <col:3> 'int (*)(pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x5609c5e99df8 <col:3> 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' Function 0x5609c5e725b8 'pthread_create' 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)'
    | |-UnaryOperator 0x5609c5e99e38 <col:18, col:19> 'pthread_t *' prefix '&' cannot overflow
    | | `-DeclRefExpr 0x5609c5e99e18 <col:19> 'pthread_t':'unsigned long' lvalue Var 0x5609c5e99d78 't2234' 'pthread_t':'unsigned long'
    | |-ImplicitCastExpr 0x5609c5e99fc8 <col:26, col:36> 'const pthread_attr_t *' <NullToPointer>
    | | `-ParenExpr 0x5609c5e99eb0 <col:26, col:36> 'void *'
    | |   `-CStyleCastExpr 0x5609c5e99e88 <col:27, col:35> 'void *' <NullToPointer>
    | |     `-IntegerLiteral 0x5609c5e99e50 <col:35> 'int' 0
    | |-ImplicitCastExpr 0x5609c5e99fe0 <col:39> 'void *(*)(void *)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x5609c5e99ed0 <col:39> 'void *(void *)' Function 0x5609c5e98030 'P3' 'void *(void *)'
    | `-ParenExpr 0x5609c5e99f50 <col:43, col:53> 'void *'
    |   `-CStyleCastExpr 0x5609c5e99f28 <col:44, col:52> 'void *' <NullToPointer>
    |     `-IntegerLiteral 0x5609c5e99ef0 <col:52> 'int' 0
    |-CallExpr 0x5609c5e9a030 <line:853:3, col:27> 'void'
    | `-ImplicitCastExpr 0x5609c5e9a018 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x5609c5e99ff8 <col:3> 'void ()' Function 0x5609c5e31fa0 '__VERIFIER_atomic_begin' 'void ()'
    |-BinaryOperator 0x5609c5e9a100 <line:854:3, col:41> '_Bool' '='
    | |-DeclRefExpr 0x5609c5e9a050 <col:3> '_Bool' lvalue Var 0x5609c5e8c130 'main$tmp_guard0' '_Bool'
    | `-ImplicitCastExpr 0x5609c5e9a0e8 <col:21, col:41> '_Bool' <IntegralToBoolean>
    |   `-BinaryOperator 0x5609c5e9a0c8 <col:21, col:41> 'int' '=='
    |     |-ImplicitCastExpr 0x5609c5e9a0b0 <col:21> 'int' <LValueToRValue>
    |     | `-DeclRefExpr 0x5609c5e9a070 <col:21> 'int' lvalue Var 0x5609c5e8b478 '__unbuffered_cnt' 'int'
    |     `-IntegerLiteral 0x5609c5e9a090 <col:41> 'int' 4
    |-CallExpr 0x5609c5e9a158 <line:855:3, col:25> 'void'
    | `-ImplicitCastExpr 0x5609c5e9a140 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x5609c5e9a120 <col:3> 'void ()' Function 0x5609c5e32060 '__VERIFIER_atomic_end' 'void ()'
    |-CallExpr 0x5609c5e9a1d0 <line:856:3, col:36> 'void'
    | |-ImplicitCastExpr 0x5609c5e9a1b8 <col:3> 'void (*)(int)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x5609c5e9a178 <col:3> 'void (int)' Function 0x5609c5e31940 '__VERIFIER_assume' 'void (int)'
    | `-ImplicitCastExpr 0x5609c5e9a210 <col:21> 'int' <IntegralCast>
    |   `-ImplicitCastExpr 0x5609c5e9a1f8 <col:21> '_Bool' <LValueToRValue>
    |     `-DeclRefExpr 0x5609c5e9a198 <col:21> '_Bool' lvalue Var 0x5609c5e8c130 'main$tmp_guard0' '_Bool'
    |-CallExpr 0x5609c5e9a260 <line:857:3, col:27> 'void'
    | `-ImplicitCastExpr 0x5609c5e9a248 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x5609c5e9a228 <col:3> 'void ()' Function 0x5609c5e31fa0 '__VERIFIER_atomic_begin' 'void ()'
    |-BinaryOperator 0x5609c5e9a548 <line:858:3, col:103> 'int' '='
    | |-DeclRefExpr 0x5609c5e9a280 <col:3> 'int' lvalue Var 0x5609c5e8c2a8 'x' 'int'
    | `-ConditionalOperator 0x5609c5e9a518 <col:7, col:103> 'int'
    |   |-BinaryOperator 0x5609c5e9a340 <col:7, col:25> 'int' '&&'
    |   | |-ImplicitCastExpr 0x5609c5e9a2f8 <col:7> 'int' <IntegralCast>
    |   | | `-ImplicitCastExpr 0x5609c5e9a2e0 <col:7> '_Bool' <LValueToRValue>
    |   | |   `-DeclRefExpr 0x5609c5e9a2a0 <col:7> '_Bool' lvalue Var 0x5609c5e8ca60 'x$w_buff0_used' '_Bool'
    |   | `-ImplicitCastExpr 0x5609c5e9a328 <col:25> 'int' <IntegralCast>
    |   |   `-ImplicitCastExpr 0x5609c5e9a310 <col:25> '_Bool' <LValueToRValue>
    |   |     `-DeclRefExpr 0x5609c5e9a2c0 <col:25> '_Bool' lvalue Var 0x5609c5e8c438 'x$r_buff0_thd0' '_Bool'
    |   |-ImplicitCastExpr 0x5609c5e9a500 <col:42> 'int' <LValueToRValue>
    |   | `-DeclRefExpr 0x5609c5e9a360 <col:42> 'int' lvalue Var 0x5609c5e8c9e8 'x$w_buff0' 'int'
    |   `-ParenExpr 0x5609c5e9a4e0 <col:54, col:103> 'int'
    |     `-ConditionalOperator 0x5609c5e9a4b0 <col:55, col:102> 'int'
    |       |-BinaryOperator 0x5609c5e9a420 <col:55, col:73> 'int' '&&'
    |       | |-ImplicitCastExpr 0x5609c5e9a3d8 <col:55> 'int' <IntegralCast>
    |       | | `-ImplicitCastExpr 0x5609c5e9a3c0 <col:55> '_Bool' <LValueToRValue>
    |       | |   `-DeclRefExpr 0x5609c5e9a380 <col:55> '_Bool' lvalue Var 0x5609c5e8db98 'x$w_buff1_used' '_Bool'
    |       | `-ImplicitCastExpr 0x5609c5e9a408 <col:73> 'int' <IntegralCast>
    |       |   `-ImplicitCastExpr 0x5609c5e9a3f0 <col:73> '_Bool' <LValueToRValue>
    |       |     `-DeclRefExpr 0x5609c5e9a3a0 <col:73> '_Bool' lvalue Var 0x5609c5e8c690 'x$r_buff1_thd0' '_Bool'
    |       |-ImplicitCastExpr 0x5609c5e9a480 <col:90> 'int' <LValueToRValue>
    |       | `-DeclRefExpr 0x5609c5e9a440 <col:90> 'int' lvalue Var 0x5609c5e8db20 'x$w_buff1' 'int'
    |       `-ImplicitCastExpr 0x5609c5e9a498 <col:102> 'int' <LValueToRValue>
    |         `-DeclRefExpr 0x5609c5e9a460 <col:102> 'int' lvalue Var 0x5609c5e8c2a8 'x' 'int'
    |-BinaryOperator 0x5609c5e9a750 <line:859:3, col:66> '_Bool' '='
    | |-DeclRefExpr 0x5609c5e9a568 <col:3> '_Bool' lvalue Var 0x5609c5e8ca60 'x$w_buff0_used' '_Bool'
    | `-ImplicitCastExpr 0x5609c5e9a738 <col:20, col:66> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x5609c5e9a708 <col:20, col:66> 'int'
    |     |-BinaryOperator 0x5609c5e9a628 <col:20, col:38> 'int' '&&'
    |     | |-ImplicitCastExpr 0x5609c5e9a5e0 <col:20> 'int' <IntegralCast>
    |     | | `-ImplicitCastExpr 0x5609c5e9a5c8 <col:20> '_Bool' <LValueToRValue>
    |     | |   `-DeclRefExpr 0x5609c5e9a588 <col:20> '_Bool' lvalue Var 0x5609c5e8ca60 'x$w_buff0_used' '_Bool'
    |     | `-ImplicitCastExpr 0x5609c5e9a610 <col:38> 'int' <IntegralCast>
    |     |   `-ImplicitCastExpr 0x5609c5e9a5f8 <col:38> '_Bool' <LValueToRValue>
    |     |     `-DeclRefExpr 0x5609c5e9a5a8 <col:38> '_Bool' lvalue Var 0x5609c5e8c438 'x$r_buff0_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x5609c5e9a6c0 <col:55, col:62> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x5609c5e9a678 <col:55, col:62> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x5609c5e9a648 <col:62> 'int' 0
    |     `-ImplicitCastExpr 0x5609c5e9a6f0 <col:66> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x5609c5e9a6d8 <col:66> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x5609c5e9a6a0 <col:66> '_Bool' lvalue Var 0x5609c5e8ca60 'x$w_buff0_used' '_Bool'
    |-BinaryOperator 0x5609c5e9aa38 <line:860:3, col:102> '_Bool' '='
    | |-DeclRefExpr 0x5609c5e9a770 <col:3> '_Bool' lvalue Var 0x5609c5e8db98 'x$w_buff1_used' '_Bool'
    | `-ImplicitCastExpr 0x5609c5e9aa20 <col:20, col:102> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x5609c5e9a9f0 <col:20, col:102> 'int'
    |     |-BinaryOperator 0x5609c5e9a910 <col:20, col:74> 'int' '||'
    |     | |-BinaryOperator 0x5609c5e9a830 <col:20, col:38> 'int' '&&'
    |     | | |-ImplicitCastExpr 0x5609c5e9a7e8 <col:20> 'int' <IntegralCast>
    |     | | | `-ImplicitCastExpr 0x5609c5e9a7d0 <col:20> '_Bool' <LValueToRValue>
    |     | | |   `-DeclRefExpr 0x5609c5e9a790 <col:20> '_Bool' lvalue Var 0x5609c5e8ca60 'x$w_buff0_used' '_Bool'
    |     | | `-ImplicitCastExpr 0x5609c5e9a818 <col:38> 'int' <IntegralCast>
    |     | |   `-ImplicitCastExpr 0x5609c5e9a800 <col:38> '_Bool' <LValueToRValue>
    |     | |     `-DeclRefExpr 0x5609c5e9a7b0 <col:38> '_Bool' lvalue Var 0x5609c5e8c438 'x$r_buff0_thd0' '_Bool'
    |     | `-BinaryOperator 0x5609c5e9a8f0 <col:56, col:74> 'int' '&&'
    |     |   |-ImplicitCastExpr 0x5609c5e9a8a8 <col:56> 'int' <IntegralCast>
    |     |   | `-ImplicitCastExpr 0x5609c5e9a890 <col:56> '_Bool' <LValueToRValue>
    |     |   |   `-DeclRefExpr 0x5609c5e9a850 <col:56> '_Bool' lvalue Var 0x5609c5e8db98 'x$w_buff1_used' '_Bool'
    |     |   `-ImplicitCastExpr 0x5609c5e9a8d8 <col:74> 'int' <IntegralCast>
    |     |     `-ImplicitCastExpr 0x5609c5e9a8c0 <col:74> '_Bool' <LValueToRValue>
    |     |       `-DeclRefExpr 0x5609c5e9a870 <col:74> '_Bool' lvalue Var 0x5609c5e8c690 'x$r_buff1_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x5609c5e9a9a8 <col:91, col:98> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x5609c5e9a960 <col:91, col:98> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x5609c5e9a930 <col:98> 'int' 0
    |     `-ImplicitCastExpr 0x5609c5e9a9d8 <col:102> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x5609c5e9a9c0 <col:102> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x5609c5e9a988 <col:102> '_Bool' lvalue Var 0x5609c5e8db98 'x$w_buff1_used' '_Bool'
    |-BinaryOperator 0x5609c5e9ac50 <line:861:3, col:66> '_Bool' '='
    | |-DeclRefExpr 0x5609c5e9aa58 <col:3> '_Bool' lvalue Var 0x5609c5e8c438 'x$r_buff0_thd0' '_Bool'
    | `-ImplicitCastExpr 0x5609c5e9ac38 <col:20, col:66> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x5609c5e9ac08 <col:20, col:66> 'int'
    |     |-BinaryOperator 0x5609c5e9ab18 <col:20, col:38> 'int' '&&'
    |     | |-ImplicitCastExpr 0x5609c5e9aad0 <col:20> 'int' <IntegralCast>
    |     | | `-ImplicitCastExpr 0x5609c5e9aab8 <col:20> '_Bool' <LValueToRValue>
    |     | |   `-DeclRefExpr 0x5609c5e9aa78 <col:20> '_Bool' lvalue Var 0x5609c5e8ca60 'x$w_buff0_used' '_Bool'
    |     | `-ImplicitCastExpr 0x5609c5e9ab00 <col:38> 'int' <IntegralCast>
    |     |   `-ImplicitCastExpr 0x5609c5e9aae8 <col:38> '_Bool' <LValueToRValue>
    |     |     `-DeclRefExpr 0x5609c5e9aa98 <col:38> '_Bool' lvalue Var 0x5609c5e8c438 'x$r_buff0_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x5609c5e9abb0 <col:55, col:62> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x5609c5e9ab68 <col:55, col:62> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x5609c5e9ab38 <col:62> 'int' 0
    |     `-ImplicitCastExpr 0x5609c5e9abf0 <col:66> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x5609c5e9abc8 <col:66> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x5609c5e9ab90 <col:66> '_Bool' lvalue Var 0x5609c5e8c438 'x$r_buff0_thd0' '_Bool'
    |-BinaryOperator 0x5609c5e9af38 <line:862:3, col:102> '_Bool' '='
    | |-DeclRefExpr 0x5609c5e9ac70 <col:3> '_Bool' lvalue Var 0x5609c5e8c690 'x$r_buff1_thd0' '_Bool'
    | `-ImplicitCastExpr 0x5609c5e9af20 <col:20, col:102> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x5609c5e9aef0 <col:20, col:102> 'int'
    |     |-BinaryOperator 0x5609c5e9ae10 <col:20, col:74> 'int' '||'
    |     | |-BinaryOperator 0x5609c5e9ad30 <col:20, col:38> 'int' '&&'
    |     | | |-ImplicitCastExpr 0x5609c5e9ace8 <col:20> 'int' <IntegralCast>
    |     | | | `-ImplicitCastExpr 0x5609c5e9acd0 <col:20> '_Bool' <LValueToRValue>
    |     | | |   `-DeclRefExpr 0x5609c5e9ac90 <col:20> '_Bool' lvalue Var 0x5609c5e8ca60 'x$w_buff0_used' '_Bool'
    |     | | `-ImplicitCastExpr 0x5609c5e9ad18 <col:38> 'int' <IntegralCast>
    |     | |   `-ImplicitCastExpr 0x5609c5e9ad00 <col:38> '_Bool' <LValueToRValue>
    |     | |     `-DeclRefExpr 0x5609c5e9acb0 <col:38> '_Bool' lvalue Var 0x5609c5e8c438 'x$r_buff0_thd0' '_Bool'
    |     | `-BinaryOperator 0x5609c5e9adf0 <col:56, col:74> 'int' '&&'
    |     |   |-ImplicitCastExpr 0x5609c5e9ada8 <col:56> 'int' <IntegralCast>
    |     |   | `-ImplicitCastExpr 0x5609c5e9ad90 <col:56> '_Bool' <LValueToRValue>
    |     |   |   `-DeclRefExpr 0x5609c5e9ad50 <col:56> '_Bool' lvalue Var 0x5609c5e8db98 'x$w_buff1_used' '_Bool'
    |     |   `-ImplicitCastExpr 0x5609c5e9add8 <col:74> 'int' <IntegralCast>
    |     |     `-ImplicitCastExpr 0x5609c5e9adc0 <col:74> '_Bool' <LValueToRValue>
    |     |       `-DeclRefExpr 0x5609c5e9ad70 <col:74> '_Bool' lvalue Var 0x5609c5e8c690 'x$r_buff1_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x5609c5e9aea8 <col:91, col:98> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x5609c5e9ae60 <col:91, col:98> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x5609c5e9ae30 <col:98> 'int' 0
    |     `-ImplicitCastExpr 0x5609c5e9aed8 <col:102> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x5609c5e9aec0 <col:102> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x5609c5e9ae88 <col:102> '_Bool' lvalue Var 0x5609c5e8c690 'x$r_buff1_thd0' '_Bool'
    |-CallExpr 0x5609c5e9af90 <line:863:3, col:25> 'void'
    | `-ImplicitCastExpr 0x5609c5e9af78 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x5609c5e9af58 <col:3> 'void ()' Function 0x5609c5e32060 '__VERIFIER_atomic_end' 'void ()'
    |-CallExpr 0x5609c5e9afe8 <line:864:3, col:27> 'void'
    | `-ImplicitCastExpr 0x5609c5e9afd0 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x5609c5e9afb0 <col:3> 'void ()' Function 0x5609c5e31fa0 '__VERIFIER_atomic_begin' 'void ()'
    |-BinaryOperator 0x5609c5e9b080 <line:865:3, col:42> '_Bool' '='
    | |-DeclRefExpr 0x5609c5e9b008 <col:3> '_Bool' lvalue Var 0x5609c5e8dda8 'weak$$choice1' '_Bool'
    | `-CallExpr 0x5609c5e9b060 <col:19, col:42> '_Bool'
    |   `-ImplicitCastExpr 0x5609c5e9b048 <col:19> '_Bool (*)(void)' <FunctionToPointerDecay>
    |     `-DeclRefExpr 0x5609c5e9b028 <col:19> '_Bool (void)' Function 0x5609c5e31770 '__VERIFIER_nondet_bool' '_Bool (void)'
    |-BinaryOperator 0x5609c5e9b2b8 <line:866:3, col:140> 'int' '='
    | |-DeclRefExpr 0x5609c5e9b0a0 <col:3> 'int' lvalue Var 0x5609c5e8b7d8 '__unbuffered_p2_EAX' 'int'
    | `-ConditionalOperator 0x5609c5e9b288 <col:25, col:140> 'int'
    |   |-ImplicitCastExpr 0x5609c5e9b258 <col:25> 'int' <IntegralCast>
    |   | `-ImplicitCastExpr 0x5609c5e9b240 <col:25> '_Bool' <LValueToRValue>
    |   |   `-DeclRefExpr 0x5609c5e9b0c0 <col:25> '_Bool' lvalue Var 0x5609c5e8be48 '__unbuffered_p2_EAX$read_delayed' '_Bool'
    |   |-ParenExpr 0x5609c5e9b200 <col:60, col:136> 'int'
    |   | `-ConditionalOperator 0x5609c5e9b1d0 <col:61, col:117> 'int'
    |   |   |-ImplicitCastExpr 0x5609c5e9b188 <col:61> 'int' <IntegralCast>
    |   |   | `-ImplicitCastExpr 0x5609c5e9b170 <col:61> '_Bool' <LValueToRValue>
    |   |   |   `-DeclRefExpr 0x5609c5e9b0e0 <col:61> '_Bool' lvalue Var 0x5609c5e8dda8 'weak$$choice1' '_Bool'
    |   |   |-ImplicitCastExpr 0x5609c5e9b1a0 <col:77, col:78> 'int' <LValueToRValue>
    |   |   | `-UnaryOperator 0x5609c5e9b138 <col:77, col:78> 'int' lvalue prefix '*' cannot overflow
    |   |   |   `-ImplicitCastExpr 0x5609c5e9b120 <col:78> 'int *' <LValueToRValue>
    |   |   |     `-DeclRefExpr 0x5609c5e9b100 <col:78> 'int *' lvalue Var 0x5609c5e8bec8 '__unbuffered_p2_EAX$read_delayed_var' 'int *'
    |   |   `-ImplicitCastExpr 0x5609c5e9b1b8 <col:117> 'int' <LValueToRValue>
    |   |     `-DeclRefExpr 0x5609c5e9b150 <col:117> 'int' lvalue Var 0x5609c5e8b7d8 '__unbuffered_p2_EAX' 'int'
    |   `-ImplicitCastExpr 0x5609c5e9b270 <col:140> 'int' <LValueToRValue>
    |     `-DeclRefExpr 0x5609c5e9b220 <col:140> 'int' lvalue Var 0x5609c5e8b7d8 '__unbuffered_p2_EAX' 'int'
    |-BinaryOperator 0x5609c5e9b588 <line:867:3, col:113> '_Bool' '='
    | |-DeclRefExpr 0x5609c5e9b2d8 <col:3> '_Bool' lvalue Var 0x5609c5e8c1a8 'main$tmp_guard1' '_Bool'
    | `-ImplicitCastExpr 0x5609c5e9b570 <col:21, col:113> '_Bool' <IntegralToBoolean>
    |   `-UnaryOperator 0x5609c5e9b558 <col:21, col:113> 'int' prefix '!' cannot overflow
    |     `-ParenExpr 0x5609c5e9b538 <col:22, col:113> 'int'
    |       `-BinaryOperator 0x5609c5e9b518 <col:23, col:112> 'int' '&&'
    |         |-BinaryOperator 0x5609c5e9b480 <col:23, col:84> 'int' '&&'
    |         | |-BinaryOperator 0x5609c5e9b3e8 <col:23, col:56> 'int' '&&'
    |         | | |-BinaryOperator 0x5609c5e9b350 <col:23, col:28> 'int' '=='
    |         | | | |-ImplicitCastExpr 0x5609c5e9b338 <col:23> 'int' <LValueToRValue>
    |         | | | | `-DeclRefExpr 0x5609c5e9b2f8 <col:23> 'int' lvalue Var 0x5609c5e8dc98 'y' 'int'
    |         | | | `-IntegerLiteral 0x5609c5e9b318 <col:28> 'int' 2
    |         | | `-BinaryOperator 0x5609c5e9b3c8 <col:33, col:56> 'int' '=='
    |         | |   |-ImplicitCastExpr 0x5609c5e9b3b0 <col:33> 'int' <LValueToRValue>
    |         | |   | `-DeclRefExpr 0x5609c5e9b370 <col:33> 'int' lvalue Var 0x5609c5e8b598 '__unbuffered_p0_EAX' 'int'
    |         | |   `-IntegerLiteral 0x5609c5e9b390 <col:56> 'int' 2
    |         | `-BinaryOperator 0x5609c5e9b460 <col:61, col:84> 'int' '=='
    |         |   |-ImplicitCastExpr 0x5609c5e9b448 <col:61> 'int' <LValueToRValue>
    |         |   | `-DeclRefExpr 0x5609c5e9b408 <col:61> 'int' lvalue Var 0x5609c5e8b6b8 '__unbuffered_p0_EBX' 'int'
    |         |   `-IntegerLiteral 0x5609c5e9b428 <col:84> 'int' 0
    |         `-BinaryOperator 0x5609c5e9b4f8 <col:89, col:112> 'int' '=='
    |           |-ImplicitCastExpr 0x5609c5e9b4e0 <col:89> 'int' <LValueToRValue>
    |           | `-DeclRefExpr 0x5609c5e9b4a0 <col:89> 'int' lvalue Var 0x5609c5e8b7d8 '__unbuffered_p2_EAX' 'int'
    |           `-IntegerLiteral 0x5609c5e9b4c0 <col:112> 'int' 1
    |-CallExpr 0x5609c5e9b5e0 <line:868:3, col:25> 'void'
    | `-ImplicitCastExpr 0x5609c5e9b5c8 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x5609c5e9b5a8 <col:3> 'void ()' Function 0x5609c5e32060 '__VERIFIER_atomic_end' 'void ()'
    |-CallExpr 0x5609c5e9b658 <line:869:3, col:36> 'void'
    | |-ImplicitCastExpr 0x5609c5e9b640 <col:3> 'void (*)(int)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x5609c5e9b600 <col:3> 'void (int)' Function 0x5609c5e31d28 '__VERIFIER_assert' 'void (int)'
    | `-ImplicitCastExpr 0x5609c5e9b698 <col:21> 'int' <IntegralCast>
    |   `-ImplicitCastExpr 0x5609c5e9b680 <col:21> '_Bool' <LValueToRValue>
    |     `-DeclRefExpr 0x5609c5e9b620 <col:21> '_Bool' lvalue Var 0x5609c5e8c1a8 'main$tmp_guard1' '_Bool'
    `-ReturnStmt 0x5609c5e9b6d0 <line:870:3, col:10>
      `-IntegerLiteral 0x5609c5e9b6b0 <col:10> 'int' 0
