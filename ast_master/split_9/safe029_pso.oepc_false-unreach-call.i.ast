TranslationUnitDecl 0x5651d14fae18 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x5651d14fb6d8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x5651d14fb3b0 '__int128'
|-TypedefDecl 0x5651d14fb748 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x5651d14fb3d0 'unsigned __int128'
|-TypedefDecl 0x5651d14fba50 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x5651d14fb820 'struct __NSConstantString_tag'
|   `-Record 0x5651d14fb7a0 '__NSConstantString_tag'
|-TypedefDecl 0x5651d14fbaf8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x5651d14fbab0 'char *'
|   `-BuiltinType 0x5651d14faeb0 'char'
|-TypedefDecl 0x5651d153a650 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'struct __va_list_tag [1]'
| `-ConstantArrayType 0x5651d14fbd90 'struct __va_list_tag [1]' 1 
|   `-RecordType 0x5651d14fbbd0 'struct __va_list_tag'
|     `-Record 0x5651d14fbb50 '__va_list_tag'
|-FunctionDecl 0x5651d153a790 <./split_9/safe029_pso.oepc_false-unreach-call.i:1:1, col:34> col:13 used __VERIFIER_assume 'void (int)' extern
| `-ParmVarDecl 0x5651d153a6c0 <col:31> col:34 'int'
|-FunctionDecl 0x5651d153a958 <line:2:1, col:45> col:15 used __VERIFIER_nondet_pointer 'void *(void)' extern
|-FunctionDecl 0x5651d153aa80 <line:3:1, col:61> col:13 used __VERIFIER_error 'void () __attribute__((noreturn))' extern
|-FunctionDecl 0x5651d153abc8 <line:4:1, col:99> col:6 used __VERIFIER_assert 'void (int)'
| |-ParmVarDecl 0x5651d153ab38 <col:24, col:28> col:28 used expression 'int'
| `-CompoundStmt 0x5651d153adf8 <col:40, col:99>
|   |-IfStmt 0x5651d153adc8 <col:42, col:88>
|   | |-UnaryOperator 0x5651d153aca8 <col:46, col:47> 'int' prefix '!' cannot overflow
|   | | `-ImplicitCastExpr 0x5651d153ac90 <col:47> 'int' <LValueToRValue>
|   | |   `-DeclRefExpr 0x5651d153ac70 <col:47> 'int' lvalue ParmVar 0x5651d153ab38 'expression' 'int'
|   | `-CompoundStmt 0x5651d153adb0 <col:59, col:88>
|   |   `-LabelStmt 0x5651d153ad98 <col:61, col:85> 'ERROR'
|   |     `-CallExpr 0x5651d153ad28 <col:68, col:85> 'void'
|   |       `-ImplicitCastExpr 0x5651d153ad10 <col:68> 'void (*)() __attribute__((noreturn))' <FunctionToPointerDecay>
|   |         `-DeclRefExpr 0x5651d153acc0 <col:68> 'void () __attribute__((noreturn))' Function 0x5651d153aa80 '__VERIFIER_error' 'void () __attribute__((noreturn))'
|   |-NullStmt 0x5651d153ade0 <col:89>
|   `-ReturnStmt 0x5651d153ade8 <col:91>
|-FunctionDecl 0x5651d153ae40 <line:5:1, col:37> col:13 used __VERIFIER_atomic_begin 'void ()' extern
|-FunctionDecl 0x5651d153af00 <line:6:1, col:35> col:13 used __VERIFIER_atomic_end 'void ()' extern
|-FunctionDecl 0x5651d153b280 <line:8:1, line:10:76> line:8:13 __assert_fail 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x5651d153afb8 <col:28, col:40> col:40 __assertion 'const char *'
| |-ParmVarDecl 0x5651d153b038 <col:53, col:65> col:65 __file 'const char *'
| |-ParmVarDecl 0x5651d153b0b8 <line:9:7, col:20> col:20 __line 'unsigned int'
| |-ParmVarDecl 0x5651d153b138 <col:28, col:40> col:40 __function 'const char *'
| `-NoThrowAttr 0x5651d153b340 <line:10:22>
|-FunctionDecl 0x5651d1561390 <line:11:1, line:13:76> line:11:13 __assert_perror_fail 'void (int, const char *, unsigned int, const char *) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x5651d153b3b0 <col:35, col:39> col:39 __errnum 'int'
| |-ParmVarDecl 0x5651d153b430 <col:49, col:61> col:61 __file 'const char *'
| |-ParmVarDecl 0x5651d153b4b0 <line:12:7, col:20> col:20 __line 'unsigned int'
| |-ParmVarDecl 0x5651d153b530 <col:28, col:40> col:40 __function 'const char *'
| `-NoThrowAttr 0x5651d1561450 <line:13:22>
|-FunctionDecl 0x5651d1561700 <line:14:1, line:15:76> line:14:13 __assert 'void (const char *, const char *, int) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x5651d15614c0 <col:23, col:35> col:35 __assertion 'const char *'
| |-ParmVarDecl 0x5651d1561540 <col:48, col:60> col:60 __file 'const char *'
| |-ParmVarDecl 0x5651d15615c0 <col:68, col:72> col:72 __line 'int'
| `-NoThrowAttr 0x5651d15617b8 <line:15:22>
|-TypedefDecl 0x5651d1561828 <line:17:1, col:23> col:23 __u_char 'unsigned char'
| `-BuiltinType 0x5651d14faf70 'unsigned char'
|-TypedefDecl 0x5651d1561898 <line:18:1, col:28> col:28 __u_short 'unsigned short'
| `-BuiltinType 0x5651d14faf90 'unsigned short'
|-TypedefDecl 0x5651d1561908 <line:19:1, col:22> col:22 __u_int 'unsigned int'
| `-BuiltinType 0x5651d14fafb0 'unsigned int'
|-TypedefDecl 0x5651d1561978 <line:20:1, col:27> col:27 __u_long 'unsigned long'
| `-BuiltinType 0x5651d14fafd0 'unsigned long'
|-TypedefDecl 0x5651d15619e8 <line:21:1, col:21> col:21 __int8_t 'signed char'
| `-BuiltinType 0x5651d14faed0 'signed char'
|-TypedefDecl 0x5651d1561a58 <line:22:1, col:23> col:23 __uint8_t 'unsigned char'
| `-BuiltinType 0x5651d14faf70 'unsigned char'
|-TypedefDecl 0x5651d1561ac8 <line:23:1, col:26> col:26 __int16_t 'short'
| `-BuiltinType 0x5651d14faef0 'short'
|-TypedefDecl 0x5651d1561b38 <line:24:1, col:28> col:28 __uint16_t 'unsigned short'
| `-BuiltinType 0x5651d14faf90 'unsigned short'
|-TypedefDecl 0x5651d1561ba8 <line:25:1, col:20> col:20 __int32_t 'int'
| `-BuiltinType 0x5651d14faf10 'int'
|-TypedefDecl 0x5651d1561c18 <line:26:1, col:22> col:22 __uint32_t 'unsigned int'
| `-BuiltinType 0x5651d14fafb0 'unsigned int'
|-TypedefDecl 0x5651d1561c88 <line:27:1, col:25> col:25 __int64_t 'long'
| `-BuiltinType 0x5651d14faf30 'long'
|-TypedefDecl 0x5651d1561cf8 <line:28:1, col:27> col:27 referenced __uint64_t 'unsigned long'
| `-BuiltinType 0x5651d14fafd0 'unsigned long'
|-TypedefDecl 0x5651d1561d68 <line:29:1, col:18> col:18 referenced __quad_t 'long'
| `-BuiltinType 0x5651d14faf30 'long'
|-TypedefDecl 0x5651d1561dd8 <line:30:1, col:27> col:27 __u_quad_t 'unsigned long'
| `-BuiltinType 0x5651d14fafd0 'unsigned long'
|-TypedefDecl 0x5651d1561e48 <line:31:1, col:27> col:27 __dev_t 'unsigned long'
| `-BuiltinType 0x5651d14fafd0 'unsigned long'
|-TypedefDecl 0x5651d1561eb8 <line:32:1, col:22> col:22 __uid_t 'unsigned int'
| `-BuiltinType 0x5651d14fafb0 'unsigned int'
|-TypedefDecl 0x5651d1561f28 <line:33:1, col:22> col:22 __gid_t 'unsigned int'
| `-BuiltinType 0x5651d14fafb0 'unsigned int'
|-TypedefDecl 0x5651d1561f98 <line:34:1, col:27> col:27 __ino_t 'unsigned long'
| `-BuiltinType 0x5651d14fafd0 'unsigned long'
|-TypedefDecl 0x5651d1562008 <line:35:1, col:27> col:27 __ino64_t 'unsigned long'
| `-BuiltinType 0x5651d14fafd0 'unsigned long'
|-TypedefDecl 0x5651d1562078 <line:36:1, col:22> col:22 __mode_t 'unsigned int'
| `-BuiltinType 0x5651d14fafb0 'unsigned int'
|-TypedefDecl 0x5651d15620e8 <line:37:1, col:27> col:27 __nlink_t 'unsigned long'
| `-BuiltinType 0x5651d14fafd0 'unsigned long'
|-TypedefDecl 0x5651d1562158 <line:38:1, col:18> col:18 __off_t 'long'
| `-BuiltinType 0x5651d14faf30 'long'
|-TypedefDecl 0x5651d15621c8 <line:39:1, col:18> col:18 referenced __off64_t 'long'
| `-BuiltinType 0x5651d14faf30 'long'
|-TypedefDecl 0x5651d1562238 <line:40:1, col:13> col:13 referenced __pid_t 'int'
| `-BuiltinType 0x5651d14faf10 'int'
|-RecordDecl 0x5651d1562290 <line:41:9, col:32> col:9 struct definition
| `-FieldDecl 0x5651d1562408 <col:18, col:29> col:22 __val 'int [2]'
|-TypedefDecl 0x5651d15624c0 <col:1, col:34> col:34 __fsid_t 'struct __fsid_t':'__fsid_t'
| `-ElaboratedType 0x5651d1562460 'struct __fsid_t' sugar
|   `-RecordType 0x5651d1562310 '__fsid_t'
|     `-Record 0x5651d1562290 ''
|-TypedefDecl 0x5651d1562548 <line:42:1, col:18> col:18 referenced __clock_t 'long'
| `-BuiltinType 0x5651d14faf30 'long'
|-TypedefDecl 0x5651d15625b8 <line:43:1, col:27> col:27 __rlim_t 'unsigned long'
| `-BuiltinType 0x5651d14fafd0 'unsigned long'
|-TypedefDecl 0x5651d1562628 <line:44:1, col:27> col:27 __rlim64_t 'unsigned long'
| `-BuiltinType 0x5651d14fafd0 'unsigned long'
|-TypedefDecl 0x5651d1562698 <line:45:1, col:22> col:22 __id_t 'unsigned int'
| `-BuiltinType 0x5651d14fafb0 'unsigned int'
|-TypedefDecl 0x5651d1562708 <line:46:1, col:18> col:18 referenced __time_t 'long'
| `-BuiltinType 0x5651d14faf30 'long'
|-TypedefDecl 0x5651d1562778 <line:47:1, col:22> col:22 __useconds_t 'unsigned int'
| `-BuiltinType 0x5651d14fafb0 'unsigned int'
|-TypedefDecl 0x5651d15627e8 <line:48:1, col:18> col:18 __suseconds_t 'long'
| `-BuiltinType 0x5651d14faf30 'long'
|-TypedefDecl 0x5651d1562858 <line:49:1, col:13> col:13 __daddr_t 'int'
| `-BuiltinType 0x5651d14faf10 'int'
|-TypedefDecl 0x5651d15628c8 <line:50:1, col:13> col:13 __key_t 'int'
| `-BuiltinType 0x5651d14faf10 'int'
|-TypedefDecl 0x5651d1562938 <line:51:1, col:13> col:13 referenced __clockid_t 'int'
| `-BuiltinType 0x5651d14faf10 'int'
|-TypedefDecl 0x5651d15629a8 <line:52:1, col:16> col:16 referenced __timer_t 'void *'
| `-PointerType 0x5651d14fb630 'void *'
|   `-BuiltinType 0x5651d14fae70 'void'
|-TypedefDecl 0x5651d1562a18 <line:53:1, col:18> col:18 __blksize_t 'long'
| `-BuiltinType 0x5651d14faf30 'long'
|-TypedefDecl 0x5651d1562a88 <line:54:1, col:18> col:18 __blkcnt_t 'long'
| `-BuiltinType 0x5651d14faf30 'long'
|-TypedefDecl 0x5651d1562af8 <line:55:1, col:18> col:18 __blkcnt64_t 'long'
| `-BuiltinType 0x5651d14faf30 'long'
|-TypedefDecl 0x5651d1562b68 <line:56:1, col:27> col:27 __fsblkcnt_t 'unsigned long'
| `-BuiltinType 0x5651d14fafd0 'unsigned long'
|-TypedefDecl 0x5651d1562bd8 <line:57:1, col:27> col:27 __fsblkcnt64_t 'unsigned long'
| `-BuiltinType 0x5651d14fafd0 'unsigned long'
|-TypedefDecl 0x5651d1562c48 <line:58:1, col:27> col:27 __fsfilcnt_t 'unsigned long'
| `-BuiltinType 0x5651d14fafd0 'unsigned long'
|-TypedefDecl 0x5651d1562cb8 <line:59:1, col:27> col:27 __fsfilcnt64_t 'unsigned long'
| `-BuiltinType 0x5651d14fafd0 'unsigned long'
|-TypedefDecl 0x5651d1562d28 <line:60:1, col:18> col:18 __fsword_t 'long'
| `-BuiltinType 0x5651d14faf30 'long'
|-TypedefDecl 0x5651d1562d98 <line:61:1, col:18> col:18 __ssize_t 'long'
| `-BuiltinType 0x5651d14faf30 'long'
|-TypedefDecl 0x5651d1562e08 <line:62:1, col:18> col:18 referenced __syscall_slong_t 'long'
| `-BuiltinType 0x5651d14faf30 'long'
|-TypedefDecl 0x5651d1562e78 <line:63:1, col:27> col:27 __syscall_ulong_t 'unsigned long'
| `-BuiltinType 0x5651d14fafd0 'unsigned long'
|-TypedefDecl 0x5651d1562f08 <line:64:1, col:19> col:19 __loff_t '__off64_t':'long'
| `-TypedefType 0x5651d1562ed0 '__off64_t' sugar
|   |-Typedef 0x5651d15621c8 '__off64_t'
|   `-BuiltinType 0x5651d14faf30 'long'
|-TypedefDecl 0x5651d1563000 <line:65:1, col:19> col:19 __qaddr_t '__quad_t *'
| `-PointerType 0x5651d1562fc0 '__quad_t *'
|   `-TypedefType 0x5651d1562f60 '__quad_t' sugar
|     |-Typedef 0x5651d1561d68 '__quad_t'
|     `-BuiltinType 0x5651d14faf30 'long'
|-TypedefDecl 0x5651d1563070 <line:66:1, col:15> col:15 __caddr_t 'char *'
| `-PointerType 0x5651d14fbab0 'char *'
|   `-BuiltinType 0x5651d14faeb0 'char'
|-TypedefDecl 0x5651d15630e0 <line:67:1, col:18> col:18 __intptr_t 'long'
| `-BuiltinType 0x5651d14faf30 'long'
|-TypedefDecl 0x5651d1563150 <line:68:1, col:22> col:22 __socklen_t 'unsigned int'
| `-BuiltinType 0x5651d14fafb0 'unsigned int'
|-FunctionDecl 0x5651d1563298 <line:69:1, line:73:1> line:70:1 __bswap_32 'unsigned int (unsigned int)' static inline
| |-ParmVarDecl 0x5651d15631c0 <col:13, col:26> col:26 used __bsx 'unsigned int'
| `-CompoundStmt 0x5651d15645e8 <line:71:1, line:73:1>
|   `-ReturnStmt 0x5651d15645d8 <line:72:3, col:34>
|     `-CallExpr 0x5651d1564598 <col:10, col:34> 'unsigned int'
|       |-ImplicitCastExpr 0x5651d1564580 <col:10> 'unsigned int (*)(unsigned int)' <BuiltinFnToFnPtr>
|       | `-DeclRefExpr 0x5651d1564510 <col:10> '<builtin fn type>' Function 0x5651d1564380 '__builtin_bswap32' 'unsigned int (unsigned int)'
|       `-ImplicitCastExpr 0x5651d15645c0 <col:29> 'unsigned int' <LValueToRValue>
|         `-DeclRefExpr 0x5651d1564530 <col:29> 'unsigned int' lvalue ParmVar 0x5651d15631c0 '__bsx' 'unsigned int'
|-FunctionDecl 0x5651d1564380 <col:10> col:10 implicit used __builtin_bswap32 'unsigned int (unsigned int)' extern
| |-ParmVarDecl 0x5651d1564420 <<invalid sloc>> <invalid sloc> 'unsigned int'
| |-NoThrowAttr 0x5651d1564490 <col:10> Implicit
| `-ConstAttr 0x5651d15644e8 <col:10> Implicit
|-FunctionDecl 0x5651d1564740 <line:74:1, line:78:1> line:75:1 __bswap_64 '__uint64_t (__uint64_t)' static inline
| |-ParmVarDecl 0x5651d1564638 <col:13, col:24> col:24 used __bsx '__uint64_t':'unsigned long'
| `-CompoundStmt 0x5651d1564a58 <line:76:1, line:78:1>
|   `-ReturnStmt 0x5651d1564a48 <line:77:3, col:34>
|     `-CallExpr 0x5651d1564a08 <col:10, col:34> 'unsigned long'
|       |-ImplicitCastExpr 0x5651d15649f0 <col:10> 'unsigned long (*)(unsigned long)' <BuiltinFnToFnPtr>
|       | `-DeclRefExpr 0x5651d1564978 <col:10> '<builtin fn type>' Function 0x5651d15647e8 '__builtin_bswap64' 'unsigned long (unsigned long)'
|       `-ImplicitCastExpr 0x5651d1564a30 <col:29> '__uint64_t':'unsigned long' <LValueToRValue>
|         `-DeclRefExpr 0x5651d1564998 <col:29> '__uint64_t':'unsigned long' lvalue ParmVar 0x5651d1564638 '__bsx' '__uint64_t':'unsigned long'
|-FunctionDecl 0x5651d15647e8 <col:10> col:10 implicit used __builtin_bswap64 'unsigned long (unsigned long)' extern
| |-ParmVarDecl 0x5651d1564888 <<invalid sloc>> <invalid sloc> 'unsigned long'
| |-NoThrowAttr 0x5651d15648f8 <col:10> Implicit
| `-ConstAttr 0x5651d1564950 <col:10> Implicit
|-TypedefDecl 0x5651d1564a88 <line:79:1, col:27> col:27 referenced size_t 'unsigned long'
| `-BuiltinType 0x5651d14fafd0 'unsigned long'
|-TypedefDecl 0x5651d1564b18 <line:81:1, col:18> col:18 referenced time_t '__time_t':'long'
| `-TypedefType 0x5651d1564ae0 '__time_t' sugar
|   |-Typedef 0x5651d1562708 '__time_t'
|   `-BuiltinType 0x5651d14faf30 'long'
|-RecordDecl 0x5651d1564b70 <line:84:1, line:88:3> line:84:8 struct timespec definition
| |-FieldDecl 0x5651d1564c28 <line:86:5, col:14> col:14 tv_sec '__time_t':'long'
| `-FieldDecl 0x5651d1564cb8 <line:87:5, col:23> col:23 tv_nsec '__syscall_slong_t':'long'
|-TypedefDecl 0x5651d1564d48 <line:89:1, col:17> col:17 referenced pid_t '__pid_t':'int'
| `-TypedefType 0x5651d1564d10 '__pid_t' sugar
|   |-Typedef 0x5651d1562238 '__pid_t'
|   `-BuiltinType 0x5651d14faf10 'int'
|-RecordDecl 0x5651d1564da0 <line:90:1, line:93:3> line:90:8 struct sched_param definition
| `-FieldDecl 0x5651d1564e60 <line:92:5, col:9> col:9 __sched_priority 'int'
|-RecordDecl 0x5651d1564eb0 <line:96:1, line:99:3> line:96:8 struct __sched_param definition
| `-FieldDecl 0x5651d1564f70 <line:98:5, col:9> col:9 __sched_priority 'int'
|-TypedefDecl 0x5651d1564fd8 <line:100:1, col:27> col:27 referenced __cpu_mask 'unsigned long'
| `-BuiltinType 0x5651d14fafd0 'unsigned long'
|-RecordDecl 0x5651d1565030 <line:101:9, line:104:1> line:101:9 struct definition
| `-FieldDecl 0x5651d15652c0 <line:103:3, col:53> col:14 __bits '__cpu_mask [64]'
|-TypedefDecl 0x5651d15663a0 <line:101:1, line:104:3> col:3 referenced cpu_set_t 'struct cpu_set_t':'cpu_set_t'
| `-ElaboratedType 0x5651d1565310 'struct cpu_set_t' sugar
|   `-RecordType 0x5651d15650b0 'cpu_set_t'
|     `-Record 0x5651d1565030 ''
|-FunctionDecl 0x5651d1566678 <line:106:1, line:107:42> line:106:12 __sched_cpucount 'int (size_t, const cpu_set_t *)' extern
| |-ParmVarDecl 0x5651d1566448 <col:30, col:37> col:37 __setsize 'size_t':'unsigned long'
| |-ParmVarDecl 0x5651d1566550 <col:48, col:65> col:65 __setp 'const cpu_set_t *'
| `-NoThrowAttr 0x5651d1566728 <line:107:19>
|-FunctionDecl 0x5651d1566900 <line:108:1, col:92> col:19 __sched_cpualloc 'cpu_set_t *(size_t)' extern
| |-ParmVarDecl 0x5651d1566790 <col:37, col:44> col:44 __count 'size_t':'unsigned long'
| `-NoThrowAttr 0x5651d15669a8 <col:69>
|-FunctionDecl 0x5651d1566b20 <line:109:1, col:87> col:13 __sched_cpufree 'void (cpu_set_t *)' extern
| |-ParmVarDecl 0x5651d1566a10 <col:30, col:41> col:41 __set 'cpu_set_t *'
| `-NoThrowAttr 0x5651d1566bc8 <col:64>
|-FunctionDecl 0x5651d1566e88 <line:112:1, line:113:45> line:112:12 sched_setparam 'int (__pid_t, const struct sched_param *)' extern
| |-ParmVarDecl 0x5651d1566c30 <col:28, col:36> col:36 __pid '__pid_t':'int'
| |-ParmVarDecl 0x5651d1566d68 <col:43, col:69> col:69 __param 'const struct sched_param *'
| `-NoThrowAttr 0x5651d1566f38 <line:113:22>
|-FunctionDecl 0x5651d15671b8 <line:114:1, col:111> col:12 sched_getparam 'int (__pid_t, struct sched_param *)' extern
| |-ParmVarDecl 0x5651d1566fa0 <col:28, col:36> col:36 __pid '__pid_t':'int'
| |-ParmVarDecl 0x5651d1567098 <col:43, col:63> col:63 __param 'struct sched_param *'
| `-NoThrowAttr 0x5651d1567268 <col:88>
|-FunctionDecl 0x5651d1567588 <line:115:1, line:116:85> line:115:12 sched_setscheduler 'int (__pid_t, int, const struct sched_param *)' extern
| |-ParmVarDecl 0x5651d15672d0 <col:32, col:40> col:40 __pid '__pid_t':'int'
| |-ParmVarDecl 0x5651d15673b0 <col:47, col:51> col:51 __policy 'int'
| |-ParmVarDecl 0x5651d1567440 <line:116:11, col:37> col:37 __param 'const struct sched_param *'
| `-NoThrowAttr 0x5651d1567640 <col:62>
|-FunctionDecl 0x5651d15677b8 <line:117:1, col:86> col:12 sched_getscheduler 'int (__pid_t)' extern
| |-ParmVarDecl 0x5651d15676a8 <col:32, col:40> col:40 __pid '__pid_t':'int'
| `-NoThrowAttr 0x5651d1567860 <col:63>
|-FunctionDecl 0x5651d1567988 <line:118:1, col:70> col:12 sched_yield 'int (void)' extern
| `-NoThrowAttr 0x5651d1567a28 <col:47>
|-FunctionDecl 0x5651d1567b30 <line:119:1, col:92> col:12 sched_get_priority_max 'int (int)' extern
| |-ParmVarDecl 0x5651d1567a98 <col:36, col:40> col:40 __algorithm 'int'
| `-NoThrowAttr 0x5651d1567bd8 <col:69>
|-FunctionDecl 0x5651d1567ce0 <line:120:1, col:92> col:12 sched_get_priority_min 'int (int)' extern
| |-ParmVarDecl 0x5651d1567c48 <col:36, col:40> col:40 __algorithm 'int'
| `-NoThrowAttr 0x5651d1567d88 <col:69>
|-FunctionDecl 0x5651d1568048 <line:121:1, col:111> col:12 sched_rr_get_interval 'int (__pid_t, struct timespec *)' extern
| |-ParmVarDecl 0x5651d1567df0 <col:35, col:43> col:43 __pid '__pid_t':'int'
| |-ParmVarDecl 0x5651d1567f28 <col:50, col:67> col:67 __t 'struct timespec *'
| `-NoThrowAttr 0x5651d15680f8 <col:88>
|-TypedefDecl 0x5651d1568188 <line:125:1, col:19> col:19 referenced clock_t '__clock_t':'long'
| `-TypedefType 0x5651d1568150 '__clock_t' sugar
|   |-Typedef 0x5651d1562548 '__clock_t'
|   `-BuiltinType 0x5651d14faf30 'long'
|-TypedefDecl 0x5651d1568218 <line:128:1, col:21> col:21 referenced clockid_t '__clockid_t':'int'
| `-TypedefType 0x5651d15681e0 '__clockid_t' sugar
|   |-Typedef 0x5651d1562938 '__clockid_t'
|   `-BuiltinType 0x5651d14faf10 'int'
|-TypedefDecl 0x5651d15682a8 <line:129:1, col:19> col:19 referenced timer_t '__timer_t':'void *'
| `-TypedefType 0x5651d1568270 '__timer_t' sugar
|   |-Typedef 0x5651d15629a8 '__timer_t'
|   `-PointerType 0x5651d14fb630 'void *'
|     `-BuiltinType 0x5651d14fae70 'void'
|-RecordDecl 0x5651d1568300 <line:131:1, line:144:1> line:131:8 struct tm definition
| |-FieldDecl 0x5651d15683d8 <line:133:3, col:7> col:7 tm_sec 'int'
| |-FieldDecl 0x5651d1568440 <line:134:3, col:7> col:7 tm_min 'int'
| |-FieldDecl 0x5651d15684a8 <line:135:3, col:7> col:7 tm_hour 'int'
| |-FieldDecl 0x5651d1568510 <line:136:3, col:7> col:7 tm_mday 'int'
| |-FieldDecl 0x5651d1568578 <line:137:3, col:7> col:7 tm_mon 'int'
| |-FieldDecl 0x5651d15685e0 <line:138:3, col:7> col:7 tm_year 'int'
| |-FieldDecl 0x5651d1568648 <line:139:3, col:7> col:7 tm_wday 'int'
| |-FieldDecl 0x5651d15686b0 <line:140:3, col:7> col:7 tm_yday 'int'
| |-FieldDecl 0x5651d1568718 <line:141:3, col:7> col:7 tm_isdst 'int'
| |-FieldDecl 0x5651d1568780 <line:142:3, col:12> col:12 tm_gmtoff 'long'
| `-FieldDecl 0x5651d15687e8 <line:143:3, col:15> col:15 tm_zone 'const char *'
|-RecordDecl 0x5651d1568838 <line:147:1, line:151:3> line:147:8 struct itimerspec definition
| |-FieldDecl 0x5651d1568908 <line:149:5, col:21> col:21 it_interval 'struct timespec':'struct timespec'
| `-FieldDecl 0x5651d1568978 <line:150:5, col:21> col:21 it_value 'struct timespec':'struct timespec'
|-RecordDecl 0x5651d1568a20 <line:152:1, col:8> col:8 struct sigevent
|-FunctionDecl 0x5651d1568bf0 <line:154:1, col:68> col:16 clock 'clock_t (void)' extern
| `-NoThrowAttr 0x5651d1568c90 <col:45>
|-FunctionDecl 0x5651d1568e70 <line:155:1, col:77> col:15 time 'time_t (time_t *)' extern
| |-ParmVarDecl 0x5651d1568d60 <col:21, col:29> col:29 __timer 'time_t *'
| `-NoThrowAttr 0x5651d1568f18 <col:54>
|-FunctionDecl 0x5651d1569118 <line:156:1, line:157:73> line:156:15 difftime 'double (time_t, time_t)' extern
| |-ParmVarDecl 0x5651d1568f80 <col:25, col:32> col:32 __time1 'time_t':'long'
| |-ParmVarDecl 0x5651d1568ff8 <col:41, col:48> col:48 __time0 'time_t':'long'
| |-NoThrowAttr 0x5651d15691c8 <line:157:22>
| `-ConstAttr 0x5651d1569220 <col:63>
|-FunctionDecl 0x5651d156a050 <line:158:1, col:79> col:15 mktime 'time_t (struct tm *)' extern
| |-ParmVarDecl 0x5651d1569318 <col:23, col:34> col:34 __tp 'struct tm *'
| `-NoThrowAttr 0x5651d156a0f8 <col:56>
|-FunctionDecl 0x5651d156a4a0 <line:159:1, line:161:77> line:159:15 strftime 'size_t (char *restrict, size_t, const char *restrict, const struct tm *restrict)' extern
| |-ParmVarDecl 0x5651d156a168 <col:25, col:42> col:42 __s 'char *restrict'
| |-ParmVarDecl 0x5651d156a1e0 <col:47, col:54> col:54 __maxsize 'size_t':'unsigned long'
| |-ParmVarDecl 0x5651d156a260 <line:160:4, col:27> col:27 __format 'const char *restrict'
| |-ParmVarDecl 0x5651d156a358 <line:161:4, col:32> col:32 __tp 'const struct tm *restrict'
| `-NoThrowAttr 0x5651d156a560 <col:54>
|-RecordDecl 0x5651d156a5b8 <line:163:9, line:170:1> line:163:16 struct __locale_struct definition
| |-RecordDecl 0x5651d156a668 parent 0x5651d14fae18 <line:165:3, col:10> col:10 struct __locale_data
| |-FieldDecl 0x5651d156a8c8 <col:3, col:37> col:25 __locales 'struct __locale_data *[13]'
| |-FieldDecl 0x5651d156a968 <line:166:3, col:29> col:29 __ctype_b 'const unsigned short *'
| |-FieldDecl 0x5651d156a9d0 <line:167:3, col:14> col:14 __ctype_tolower 'const int *'
| |-FieldDecl 0x5651d156aa38 <line:168:3, col:14> col:14 __ctype_toupper 'const int *'
| `-FieldDecl 0x5651d156ab28 <line:169:3, col:25> col:15 __names 'const char *[13]'
|-TypedefDecl 0x5651d156ac48 <line:163:1, line:170:4> col:4 referenced __locale_t 'struct __locale_struct *'
| `-PointerType 0x5651d156abf0 'struct __locale_struct *'
|   `-ElaboratedType 0x5651d156ab80 'struct __locale_struct' sugar
|     `-RecordType 0x5651d156a640 'struct __locale_struct'
|       `-Record 0x5651d156a5b8 '__locale_struct'
|-TypedefDecl 0x5651d156acf8 <line:171:1, col:20> col:20 locale_t '__locale_t':'struct __locale_struct *'
| `-TypedefType 0x5651d156acc0 '__locale_t' sugar
|   |-Typedef 0x5651d156ac48 '__locale_t'
|   `-PointerType 0x5651d156abf0 'struct __locale_struct *'
|     `-ElaboratedType 0x5651d156ab80 'struct __locale_struct' sugar
|       `-RecordType 0x5651d156a640 'struct __locale_struct'
|         `-Record 0x5651d156a5b8 '__locale_struct'
|-FunctionDecl 0x5651d156c110 <line:172:1, line:175:63> line:172:15 strftime_l 'size_t (char *restrict, size_t, const char *restrict, const struct tm *restrict, __locale_t)' extern
| |-ParmVarDecl 0x5651d156ad68 <col:27, col:44> col:44 __s 'char *restrict'
| |-ParmVarDecl 0x5651d156ade0 <col:49, col:56> col:56 __maxsize 'size_t':'unsigned long'
| |-ParmVarDecl 0x5651d156ae60 <line:173:6, col:29> col:29 __format 'const char *restrict'
| |-ParmVarDecl 0x5651d156aef0 <line:174:6, col:34> col:34 __tp 'const struct tm *restrict'
| |-ParmVarDecl 0x5651d156af68 <line:175:6, col:17> col:17 __loc '__locale_t':'struct __locale_struct *'
| `-NoThrowAttr 0x5651d156c1d8 <col:40>
|-FunctionDecl 0x5651d156c3c8 <line:177:1, col:89> col:19 gmtime 'struct tm *(const time_t *)' extern
| |-ParmVarDecl 0x5651d156c2a0 <col:27, col:41> col:41 __timer 'const time_t *'
| `-NoThrowAttr 0x5651d156c470 <col:66>
|-FunctionDecl 0x5651d156c580 <line:178:1, col:92> col:19 localtime 'struct tm *(const time_t *)' extern
| |-ParmVarDecl 0x5651d156c4d8 <col:30, col:44> col:44 __timer 'const time_t *'
| `-NoThrowAttr 0x5651d156c628 <col:69>
|-FunctionDecl 0x5651d156c858 <line:180:1, line:181:75> line:180:19 gmtime_r 'struct tm *(const time_t *restrict, struct tm *restrict)' extern
| |-ParmVarDecl 0x5651d156c690 <col:29, col:54> col:54 __timer 'const time_t *restrict'
| |-ParmVarDecl 0x5651d156c720 <line:181:8, col:30> col:30 __tp 'struct tm *restrict'
| `-NoThrowAttr 0x5651d156c908 <col:52>
|-FunctionDecl 0x5651d156cab0 <line:182:1, line:183:78> line:182:19 localtime_r 'struct tm *(const time_t *restrict, struct tm *restrict)' extern
| |-ParmVarDecl 0x5651d156c970 <col:32, col:57> col:57 __timer 'const time_t *restrict'
| |-ParmVarDecl 0x5651d156ca00 <line:183:11, col:33> col:33 __tp 'struct tm *restrict'
| `-NoThrowAttr 0x5651d156cb60 <col:55>
|-FunctionDecl 0x5651d156ccf8 <line:185:1, col:85> col:14 asctime 'char *(const struct tm *)' extern
| |-ParmVarDecl 0x5651d156cbe0 <col:23, col:40> col:40 __tp 'const struct tm *'
| `-NoThrowAttr 0x5651d156cda0 <col:62>
|-FunctionDecl 0x5651d156cf18 <line:186:1, col:83> col:14 ctime 'char *(const time_t *)' extern
| |-ParmVarDecl 0x5651d156ce08 <col:21, col:35> col:35 __timer 'const time_t *'
| `-NoThrowAttr 0x5651d156cfc0 <col:60>
|-FunctionDecl 0x5651d156d2b8 <line:188:1, line:189:67> line:188:14 asctime_r 'char *(const struct tm *restrict, char *restrict)' extern
| |-ParmVarDecl 0x5651d156d118 <col:25, col:53> col:53 __tp 'const struct tm *restrict'
| |-ParmVarDecl 0x5651d156d198 <line:189:4, col:21> col:21 __buf 'char *restrict'
| `-NoThrowAttr 0x5651d156d368 <col:44>
|-FunctionDecl 0x5651d156d578 <line:190:1, line:191:72> line:190:14 ctime_r 'char *(const time_t *restrict, char *restrict)' extern
| |-ParmVarDecl 0x5651d156d3d0 <col:23, col:48> col:48 __timer 'const time_t *restrict'
| |-ParmVarDecl 0x5651d156d450 <line:191:9, col:26> col:26 __buf 'char *restrict'
| `-NoThrowAttr 0x5651d156d628 <col:49>
|-VarDecl 0x5651d156d728 <line:192:1, col:24> col:14 __tzname 'char *[2]' extern
|-VarDecl 0x5651d156d7a8 <line:193:1, col:12> col:12 __daylight 'int' extern
|-VarDecl 0x5651d156d828 <line:194:1, col:17> col:17 __timezone 'long' extern
|-VarDecl 0x5651d156d8f0 <line:195:1, col:22> col:14 tzname 'char *[2]' extern
|-FunctionDecl 0x5651d156da20 <line:196:1, col:65> col:13 tzset 'void (void)' extern
| `-NoThrowAttr 0x5651d156dac0 <col:42>
|-VarDecl 0x5651d156db30 <line:197:1, col:12> col:12 daylight 'int' extern
|-VarDecl 0x5651d156dbb0 <line:198:1, col:17> col:17 timezone 'long' extern
|-FunctionDecl 0x5651d156dd38 <line:199:1, col:80> col:12 stime 'int (const time_t *)' extern
| |-ParmVarDecl 0x5651d156dc28 <col:19, col:33> col:33 __when 'const time_t *'
| `-NoThrowAttr 0x5651d156dde0 <col:57>
|-FunctionDecl 0x5651d156def0 <line:200:1, col:79> col:15 timegm 'time_t (struct tm *)' extern
| |-ParmVarDecl 0x5651d156de60 <col:23, col:34> col:34 __tp 'struct tm *'
| `-NoThrowAttr 0x5651d156df98 <col:56>
|-FunctionDecl 0x5651d156e0d0 <line:201:1, col:82> col:15 timelocal 'time_t (struct tm *)' extern
| |-ParmVarDecl 0x5651d156e018 <col:26, col:37> col:37 __tp 'struct tm *'
| `-NoThrowAttr 0x5651d156e178 <col:59>
|-FunctionDecl 0x5651d156e280 <line:202:1, col:99> col:12 dysize 'int (int)' extern
| |-ParmVarDecl 0x5651d156e1e8 <col:20, col:24> col:24 __year 'int'
| |-NoThrowAttr 0x5651d156e328 <col:48>
| `-ConstAttr 0x5651d156e380 <col:89>
|-FunctionDecl 0x5651d156e5e8 <line:203:1, line:204:37> line:203:12 nanosleep 'int (const struct timespec *, struct timespec *)' extern
| |-ParmVarDecl 0x5651d156e438 <col:23, col:46> col:46 __requested_time 'const struct timespec *'
| `-ParmVarDecl 0x5651d156e4c8 <line:204:9, col:26> col:26 __remaining 'struct timespec *'
|-FunctionDecl 0x5651d156e848 <line:205:1, col:111> col:12 clock_getres 'int (clockid_t, struct timespec *)' extern
| |-ParmVarDecl 0x5651d156e6d8 <col:26, col:36> col:36 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x5651d156e768 <col:48, col:65> col:65 __res 'struct timespec *'
| `-NoThrowAttr 0x5651d156e8f8 <col:88>
|-FunctionDecl 0x5651d156ea90 <line:206:1, col:111> col:12 clock_gettime 'int (clockid_t, struct timespec *)' extern
| |-ParmVarDecl 0x5651d156e960 <col:27, col:37> col:37 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x5651d156e9f0 <col:49, col:66> col:66 __tp 'struct timespec *'
| `-NoThrowAttr 0x5651d156eb40 <col:88>
|-FunctionDecl 0x5651d156ed58 <line:207:1, line:208:45> line:207:12 clock_settime 'int (clockid_t, const struct timespec *)' extern
| |-ParmVarDecl 0x5651d156eba8 <col:27, col:37> col:37 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x5651d156ec38 <col:49, col:72> col:72 __tp 'const struct timespec *'
| `-NoThrowAttr 0x5651d156ee08 <line:208:22>
|-FunctionDecl 0x5651d156f178 <line:209:1, line:211:30> line:209:12 clock_nanosleep 'int (clockid_t, int, const struct timespec *, struct timespec *)' extern
| |-ParmVarDecl 0x5651d156ee70 <col:29, col:39> col:39 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x5651d156eef0 <col:51, col:55> col:55 __flags 'int'
| |-ParmVarDecl 0x5651d156ef80 <line:210:8, col:31> col:31 __req 'const struct timespec *'
| `-ParmVarDecl 0x5651d156f010 <line:211:8, col:25> col:25 __rem 'struct timespec *'
|-FunctionDecl 0x5651d156f478 <line:212:1, col:108> col:12 clock_getcpuclockid 'int (pid_t, clockid_t *)' extern
| |-ParmVarDecl 0x5651d156f278 <col:33, col:39> col:39 __pid 'pid_t':'int'
| |-ParmVarDecl 0x5651d156f350 <col:46, col:57> col:57 __clock_id 'clockid_t *'
| `-NoThrowAttr 0x5651d156f528 <col:85>
|-FunctionDecl 0x5651d156f918 <line:213:1, line:215:75> line:213:12 timer_create 'int (clockid_t, struct sigevent *restrict, timer_t *restrict)' extern
| |-ParmVarDecl 0x5651d156f590 <col:26, col:36> col:36 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x5651d156f6c8 <line:214:5, col:33> col:33 __evp 'struct sigevent *restrict'
| |-ParmVarDecl 0x5651d156f7d0 <line:215:5, col:25> col:25 __timerid 'timer_t *restrict'
| `-NoThrowAttr 0x5651d156f9d0 <col:52>
|-FunctionDecl 0x5651d156fb48 <line:216:1, col:84> col:12 timer_delete 'int (timer_t)' extern
| |-ParmVarDecl 0x5651d156fa38 <col:26, col:34> col:34 __timerid 'timer_t':'void *'
| `-NoThrowAttr 0x5651d156fbf0 <col:61>
|-FunctionDecl 0x5651d15700f0 <line:217:1, line:219:85> line:217:12 timer_settime 'int (timer_t, int, const struct itimerspec *restrict, struct itimerspec *restrict)' extern
| |-ParmVarDecl 0x5651d156fc58 <col:27, col:35> col:35 __timerid 'timer_t':'void *'
| |-ParmVarDecl 0x5651d156fcd8 <col:46, col:50> col:50 __flags 'int'
| |-ParmVarDecl 0x5651d156fe08 <line:218:6, col:42> col:42 __value 'const struct itimerspec *restrict'
| |-ParmVarDecl 0x5651d156fef8 <line:219:6, col:36> col:36 __ovalue 'struct itimerspec *restrict'
| `-NoThrowAttr 0x5651d15701b0 <col:62>
|-FunctionDecl 0x5651d15703c8 <line:220:1, line:221:45> line:220:12 timer_gettime 'int (timer_t, struct itimerspec *)' extern
| |-ParmVarDecl 0x5651d1570218 <col:27, col:35> col:35 __timerid 'timer_t':'void *'
| |-ParmVarDecl 0x5651d15702a8 <col:46, col:65> col:65 __value 'struct itimerspec *'
| `-NoThrowAttr 0x5651d1570478 <line:221:22>
|-FunctionDecl 0x5651d1570578 <line:222:1, col:88> col:12 timer_getoverrun 'int (timer_t)' extern
| |-ParmVarDecl 0x5651d15704e0 <col:30, col:38> col:38 __timerid 'timer_t':'void *'
| `-NoThrowAttr 0x5651d1570620 <col:65>
|-TypedefDecl 0x5651d1570690 <line:224:1, col:27> col:27 referenced pthread_t 'unsigned long'
| `-BuiltinType 0x5651d14fafd0 'unsigned long'
|-RecordDecl 0x5651d15706e8 <line:225:1, line:229:1> line:225:7 union pthread_attr_t definition
| |-FieldDecl 0x5651d1570830 <line:227:3, col:17> col:8 __size 'char [56]'
| `-FieldDecl 0x5651d1570898 <line:228:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x5651d1570948 <line:230:1, col:30> col:30 referenced pthread_attr_t 'union pthread_attr_t':'union pthread_attr_t'
| `-ElaboratedType 0x5651d15708f0 'union pthread_attr_t' sugar
|   `-RecordType 0x5651d1570770 'union pthread_attr_t'
|     `-Record 0x5651d15706e8 'pthread_attr_t'
|-RecordDecl 0x5651d15709a0 <line:231:9, line:235:1> line:231:16 struct __pthread_internal_list definition
| |-FieldDecl 0x5651d1570b18 <line:233:3, col:35> col:35 __prev 'struct __pthread_internal_list *'
| `-FieldDecl 0x5651d1570b90 <line:234:3, col:35> col:35 __next 'struct __pthread_internal_list *'
|-TypedefDecl 0x5651d1570c40 <line:231:1, line:235:3> col:3 referenced __pthread_list_t 'struct __pthread_internal_list':'struct __pthread_internal_list'
| `-ElaboratedType 0x5651d1570be0 'struct __pthread_internal_list' sugar
|   `-RecordType 0x5651d1570a20 'struct __pthread_internal_list'
|     `-Record 0x5651d15709a0 '__pthread_internal_list'
|-RecordDecl 0x5651d1570cb0 <line:236:9, line:250:1> line:236:9 union definition
| |-RecordDecl 0x5651d1570d58 parent 0x5651d14fae18 <line:238:3, line:247:3> line:238:10 struct __pthread_mutex_s definition
| | |-FieldDecl 0x5651d1570e30 <line:240:5, col:9> col:9 __lock 'int'
| | |-FieldDecl 0x5651d1570e98 <line:241:5, col:18> col:18 __count 'unsigned int'
| | |-FieldDecl 0x5651d1570f00 <line:242:5, col:9> col:9 __owner 'int'
| | |-FieldDecl 0x5651d1570f68 <line:243:5, col:18> col:18 __nusers 'unsigned int'
| | |-FieldDecl 0x5651d1570fd0 <line:244:5, col:9> col:9 __kind 'int'
| | |-FieldDecl 0x5651d1571038 <line:245:5, col:9> col:9 __spins 'int'
| | `-FieldDecl 0x5651d1575110 <line:246:5, col:22> col:22 __list '__pthread_list_t':'struct __pthread_internal_list'
| |-FieldDecl 0x5651d15751c0 <line:238:3, line:247:5> col:5 __data 'struct __pthread_mutex_s':'struct __pthread_mutex_s'
| |-FieldDecl 0x5651d15752b0 <line:248:3, col:17> col:8 __size 'char [40]'
| `-FieldDecl 0x5651d1575318 <line:249:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x5651d15754a0 <line:236:1, line:250:3> col:3 referenced pthread_mutex_t 'union pthread_mutex_t':'pthread_mutex_t'
| `-ElaboratedType 0x5651d1575440 'union pthread_mutex_t' sugar
|   `-RecordType 0x5651d1570d30 'pthread_mutex_t'
|     `-Record 0x5651d1570cb0 ''
|-RecordDecl 0x5651d1575510 <line:251:9, line:255:1> line:251:9 union definition
| |-FieldDecl 0x5651d1575650 <line:253:3, col:16> col:8 __size 'char [4]'
| `-FieldDecl 0x5651d15756b8 <line:254:3, col:7> col:7 __align 'int'
|-TypedefDecl 0x5651d1575770 <line:251:1, line:255:3> col:3 referenced pthread_mutexattr_t 'union pthread_mutexattr_t':'pthread_mutexattr_t'
| `-ElaboratedType 0x5651d1575710 'union pthread_mutexattr_t' sugar
|   `-RecordType 0x5651d1575590 'pthread_mutexattr_t'
|     `-Record 0x5651d1575510 ''
|-RecordDecl 0x5651d15757e0 <line:256:9, line:271:1> line:256:9 union definition
| |-RecordDecl 0x5651d1575888 <line:258:3, line:268:3> line:258:3 struct definition
| | |-FieldDecl 0x5651d1575950 <line:260:5, col:9> col:9 __lock 'int'
| | |-FieldDecl 0x5651d15759b8 <line:261:5, col:18> col:18 __futex 'unsigned int'
| | |-FieldDecl 0x5651d1575a20 <line:262:19, col:42> col:42 __total_seq 'unsigned long long'
| | |-FieldDecl 0x5651d1575a88 <line:263:19, col:42> col:42 __wakeup_seq 'unsigned long long'
| | |-FieldDecl 0x5651d1575af0 <line:264:19, col:42> col:42 __woken_seq 'unsigned long long'
| | |-FieldDecl 0x5651d1575b58 <line:265:5, col:11> col:11 __mutex 'void *'
| | |-FieldDecl 0x5651d1575bc0 <line:266:5, col:18> col:18 __nwaiters 'unsigned int'
| | `-FieldDecl 0x5651d1575c28 <line:267:5, col:18> col:18 __broadcast_seq 'unsigned int'
| |-FieldDecl 0x5651d1575ce0 <line:258:3, line:268:5> col:5 __data 'struct (anonymous struct at ./split_9/safe029_pso.oepc_false-unreach-call.i:258:3)':'struct pthread_cond_t::(anonymous at ./split_9/safe029_pso.oepc_false-unreach-call.i:258:3)'
| |-FieldDecl 0x5651d1575dd0 <line:269:3, col:17> col:8 __size 'char [48]'
| `-FieldDecl 0x5651d1575e38 <line:270:17, col:31> col:31 __align 'long long'
|-TypedefDecl 0x5651d1575f70 <line:256:1, line:271:3> col:3 referenced pthread_cond_t 'union pthread_cond_t':'pthread_cond_t'
| `-ElaboratedType 0x5651d1575f10 'union pthread_cond_t' sugar
|   `-RecordType 0x5651d1575860 'pthread_cond_t'
|     `-Record 0x5651d15757e0 ''
|-RecordDecl 0x5651d1575fe0 <line:272:9, line:276:1> line:272:9 union definition
| |-FieldDecl 0x5651d1577130 <line:274:3, col:16> col:8 __size 'char [4]'
| `-FieldDecl 0x5651d1577198 <line:275:3, col:7> col:7 __align 'int'
|-TypedefDecl 0x5651d1577250 <line:272:1, line:276:3> col:3 referenced pthread_condattr_t 'union pthread_condattr_t':'pthread_condattr_t'
| `-ElaboratedType 0x5651d15771f0 'union pthread_condattr_t' sugar
|   `-RecordType 0x5651d1576060 'pthread_condattr_t'
|     `-Record 0x5651d1575fe0 ''
|-TypedefDecl 0x5651d15772d8 <line:277:1, col:22> col:22 referenced pthread_key_t 'unsigned int'
| `-BuiltinType 0x5651d14fafb0 'unsigned int'
|-TypedefDecl 0x5651d1577348 <line:278:1, col:13> col:13 referenced pthread_once_t 'int'
| `-BuiltinType 0x5651d14faf10 'int'
|-RecordDecl 0x5651d15773a0 <line:279:9, line:297:1> line:279:9 union definition
| |-RecordDecl 0x5651d1577448 <line:281:3, line:294:3> line:281:3 struct definition
| | |-FieldDecl 0x5651d1577510 <line:283:5, col:9> col:9 __lock 'int'
| | |-FieldDecl 0x5651d1577578 <line:284:5, col:18> col:18 __nr_readers 'unsigned int'
| | |-FieldDecl 0x5651d15775e0 <line:285:5, col:18> col:18 __readers_wakeup 'unsigned int'
| | |-FieldDecl 0x5651d1577648 <line:286:5, col:18> col:18 __writer_wakeup 'unsigned int'
| | |-FieldDecl 0x5651d15776b0 <line:287:5, col:18> col:18 __nr_readers_queued 'unsigned int'
| | |-FieldDecl 0x5651d1577718 <line:288:5, col:18> col:18 __nr_writers_queued 'unsigned int'
| | |-FieldDecl 0x5651d1577780 <line:289:5, col:9> col:9 __writer 'int'
| | |-FieldDecl 0x5651d15777e8 <line:290:5, col:9> col:9 __shared 'int'
| | |-FieldDecl 0x5651d1577850 <line:291:5, col:23> col:23 __pad1 'unsigned long'
| | |-FieldDecl 0x5651d15778b8 <line:292:5, col:23> col:23 __pad2 'unsigned long'
| | `-FieldDecl 0x5651d1577920 <line:293:5, col:18> col:18 __flags 'unsigned int'
| |-FieldDecl 0x5651d15779d0 <line:281:3, line:294:5> col:5 __data 'struct (anonymous struct at ./split_9/safe029_pso.oepc_false-unreach-call.i:281:3)':'struct pthread_rwlock_t::(anonymous at ./split_9/safe029_pso.oepc_false-unreach-call.i:281:3)'
| |-FieldDecl 0x5651d1577a78 <line:295:3, col:17> col:8 __size 'char [56]'
| `-FieldDecl 0x5651d1577ae0 <line:296:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x5651d1577c30 <line:279:1, line:297:3> col:3 referenced pthread_rwlock_t 'union pthread_rwlock_t':'pthread_rwlock_t'
| `-ElaboratedType 0x5651d1577bd0 'union pthread_rwlock_t' sugar
|   `-RecordType 0x5651d1577420 'pthread_rwlock_t'
|     `-Record 0x5651d15773a0 ''
|-RecordDecl 0x5651d1577ca0 <line:298:9, line:302:1> line:298:9 union definition
| |-FieldDecl 0x5651d1577de0 <line:300:3, col:16> col:8 __size 'char [8]'
| `-FieldDecl 0x5651d1577e48 <line:301:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x5651d1577f00 <line:298:1, line:302:3> col:3 referenced pthread_rwlockattr_t 'union pthread_rwlockattr_t':'pthread_rwlockattr_t'
| `-ElaboratedType 0x5651d1577ea0 'union pthread_rwlockattr_t' sugar
|   `-RecordType 0x5651d1577d20 'pthread_rwlockattr_t'
|     `-Record 0x5651d1577ca0 ''
|-TypedefDecl 0x5651d1577f88 <line:303:1, col:22> col:22 referenced pthread_spinlock_t 'volatile int'
| `-QualType 0x5651d14faf14 'volatile int' volatile
|   `-BuiltinType 0x5651d14faf10 'int'
|-RecordDecl 0x5651d1577fe0 <line:304:9, line:308:1> line:304:9 union definition
| |-FieldDecl 0x5651d1579140 <line:306:3, col:17> col:8 __size 'char [32]'
| `-FieldDecl 0x5651d15791a8 <line:307:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x5651d1579260 <line:304:1, line:308:3> col:3 referenced pthread_barrier_t 'union pthread_barrier_t':'pthread_barrier_t'
| `-ElaboratedType 0x5651d1579200 'union pthread_barrier_t' sugar
|   `-RecordType 0x5651d1578060 'pthread_barrier_t'
|     `-Record 0x5651d1577fe0 ''
|-RecordDecl 0x5651d15792d0 <line:309:9, line:313:1> line:309:9 union definition
| |-FieldDecl 0x5651d15793d0 <line:311:3, col:16> col:8 __size 'char [4]'
| `-FieldDecl 0x5651d1579438 <line:312:3, col:7> col:7 __align 'int'
|-TypedefDecl 0x5651d15794f0 <line:309:1, line:313:3> col:3 referenced pthread_barrierattr_t 'union pthread_barrierattr_t':'pthread_barrierattr_t'
| `-ElaboratedType 0x5651d1579490 'union pthread_barrierattr_t' sugar
|   `-RecordType 0x5651d1579350 'pthread_barrierattr_t'
|     `-Record 0x5651d15792d0 ''
|-TypedefDecl 0x5651d1579608 <line:314:1, col:29> col:18 referenced __jmp_buf 'long [8]'
| `-ConstantArrayType 0x5651d15795a0 'long [8]' 8 
|   `-BuiltinType 0x5651d14faf30 'long'
|-EnumDecl 0x5651d1579660 <line:315:1, line:319:1> line:315:1
| |-EnumConstantDecl 0x5651d1579728 <line:317:3> col:3 PTHREAD_CREATE_JOINABLE 'int'
| `-EnumConstantDecl 0x5651d1579778 <line:318:3> col:3 PTHREAD_CREATE_DETACHED 'int'
|-EnumDecl 0x5651d15797c8 <line:320:1, line:331:1> line:320:1
| |-EnumConstantDecl 0x5651d1579898 <line:322:3> col:3 referenced PTHREAD_MUTEX_TIMED_NP 'int'
| |-EnumConstantDecl 0x5651d15798e8 <line:323:3> col:3 referenced PTHREAD_MUTEX_RECURSIVE_NP 'int'
| |-EnumConstantDecl 0x5651d1579938 <line:324:3> col:3 referenced PTHREAD_MUTEX_ERRORCHECK_NP 'int'
| |-EnumConstantDecl 0x5651d1579988 <line:325:3> col:3 PTHREAD_MUTEX_ADAPTIVE_NP 'int'
| |-EnumConstantDecl 0x5651d1579a10 <line:327:3, col:26> col:3 referenced PTHREAD_MUTEX_NORMAL 'int'
| | `-ConstantExpr 0x5651d15799f8 <col:26> 'int'
| |   `-DeclRefExpr 0x5651d15799d8 <col:26> 'int' EnumConstant 0x5651d1579898 'PTHREAD_MUTEX_TIMED_NP' 'int'
| |-EnumConstantDecl 0x5651d1579a98 <line:328:3, col:29> col:3 PTHREAD_MUTEX_RECURSIVE 'int'
| | `-ConstantExpr 0x5651d1579a80 <col:29> 'int'
| |   `-DeclRefExpr 0x5651d1579a60 <col:29> 'int' EnumConstant 0x5651d15798e8 'PTHREAD_MUTEX_RECURSIVE_NP' 'int'
| |-EnumConstantDecl 0x5651d1579b20 <line:329:3, col:30> col:3 PTHREAD_MUTEX_ERRORCHECK 'int'
| | `-ConstantExpr 0x5651d1579b08 <col:30> 'int'
| |   `-DeclRefExpr 0x5651d1579ae8 <col:30> 'int' EnumConstant 0x5651d1579938 'PTHREAD_MUTEX_ERRORCHECK_NP' 'int'
| `-EnumConstantDecl 0x5651d1579ba8 <line:330:3, col:27> col:3 PTHREAD_MUTEX_DEFAULT 'int'
|   `-ConstantExpr 0x5651d1579b90 <col:27> 'int'
|     `-DeclRefExpr 0x5651d1579b70 <col:27> 'int' EnumConstant 0x5651d1579a10 'PTHREAD_MUTEX_NORMAL' 'int'
|-EnumDecl 0x5651d1579bf8 <line:332:1, line:338:1> line:332:1
| |-EnumConstantDecl 0x5651d1579cc8 <line:334:3> col:3 referenced PTHREAD_MUTEX_STALLED 'int'
| |-EnumConstantDecl 0x5651d1579d50 <line:335:3, col:30> col:3 PTHREAD_MUTEX_STALLED_NP 'int'
| | `-ConstantExpr 0x5651d1579d38 <col:30> 'int'
| |   `-DeclRefExpr 0x5651d1579d18 <col:30> 'int' EnumConstant 0x5651d1579cc8 'PTHREAD_MUTEX_STALLED' 'int'
| |-EnumConstantDecl 0x5651d1579da0 <line:336:3> col:3 referenced PTHREAD_MUTEX_ROBUST 'int'
| `-EnumConstantDecl 0x5651d1579e28 <line:337:3, col:29> col:3 PTHREAD_MUTEX_ROBUST_NP 'int'
|   `-ConstantExpr 0x5651d1579e10 <col:29> 'int'
|     `-DeclRefExpr 0x5651d1579df0 <col:29> 'int' EnumConstant 0x5651d1579da0 'PTHREAD_MUTEX_ROBUST' 'int'
|-EnumDecl 0x5651d1579e78 <line:339:1, line:344:1> line:339:1
| |-EnumConstantDecl 0x5651d1579f48 <line:341:3> col:3 PTHREAD_PRIO_NONE 'int'
| |-EnumConstantDecl 0x5651d1579f98 <line:342:3> col:3 PTHREAD_PRIO_INHERIT 'int'
| `-EnumConstantDecl 0x5651d1579fe8 <line:343:3> col:3 PTHREAD_PRIO_PROTECT 'int'
|-EnumDecl 0x5651d157a038 <line:345:1, line:351:1> line:345:1
| |-EnumConstantDecl 0x5651d157a150 <line:347:3> col:3 referenced PTHREAD_RWLOCK_PREFER_READER_NP 'int'
| |-EnumConstantDecl 0x5651d157a1a0 <line:348:3> col:3 PTHREAD_RWLOCK_PREFER_WRITER_NP 'int'
| |-EnumConstantDecl 0x5651d157a1f0 <line:349:3> col:3 PTHREAD_RWLOCK_PREFER_WRITER_NONRECURSIVE_NP 'int'
| `-EnumConstantDecl 0x5651d157a278 <line:350:3, col:31> col:3 PTHREAD_RWLOCK_DEFAULT_NP 'int'
|   `-ConstantExpr 0x5651d157a260 <col:31> 'int'
|     `-DeclRefExpr 0x5651d157a240 <col:31> 'int' EnumConstant 0x5651d157a150 'PTHREAD_RWLOCK_PREFER_READER_NP' 'int'
|-EnumDecl 0x5651d157a2c8 <line:352:1, line:356:1> line:352:1
| |-EnumConstantDecl 0x5651d157a398 <line:354:3> col:3 PTHREAD_INHERIT_SCHED 'int'
| `-EnumConstantDecl 0x5651d157a3e8 <line:355:3> col:3 PTHREAD_EXPLICIT_SCHED 'int'
|-EnumDecl 0x5651d157a438 <line:357:1, line:361:1> line:357:1
| |-EnumConstantDecl 0x5651d157a508 <line:359:3> col:3 PTHREAD_SCOPE_SYSTEM 'int'
| `-EnumConstantDecl 0x5651d157a558 <line:360:3> col:3 PTHREAD_SCOPE_PROCESS 'int'
|-EnumDecl 0x5651d157a5a8 <line:362:1, line:366:1> line:362:1
| |-EnumConstantDecl 0x5651d157a678 <line:364:3> col:3 PTHREAD_PROCESS_PRIVATE 'int'
| `-EnumConstantDecl 0x5651d157a6c8 <line:365:3> col:3 PTHREAD_PROCESS_SHARED 'int'
|-RecordDecl 0x5651d157a718 <line:367:1, line:373:1> line:367:8 struct _pthread_cleanup_buffer definition
| |-FieldDecl 0x5651d157a958 <line:369:3, col:28> col:10 __routine 'void (*)(void *)'
| |-FieldDecl 0x5651d157a9c0 <line:370:3, col:9> col:9 __arg 'void *'
| |-FieldDecl 0x5651d157aa28 <line:371:3, col:7> col:7 __canceltype 'int'
| `-FieldDecl 0x5651d157ab48 <line:372:3, col:35> col:35 __prev 'struct _pthread_cleanup_buffer *'
|-EnumDecl 0x5651d157ab98 <line:374:1, line:378:1> line:374:1
| |-EnumConstantDecl 0x5651d157ac68 <line:376:3> col:3 PTHREAD_CANCEL_ENABLE 'int'
| `-EnumConstantDecl 0x5651d157acb8 <line:377:3> col:3 PTHREAD_CANCEL_DISABLE 'int'
|-EnumDecl 0x5651d157ad08 <line:379:1, line:383:1> line:379:1
| |-EnumConstantDecl 0x5651d157add8 <line:381:3> col:3 PTHREAD_CANCEL_DEFERRED 'int'
| `-EnumConstantDecl 0x5651d157ae28 <line:382:3> col:3 PTHREAD_CANCEL_ASYNCHRONOUS 'int'
|-FunctionDecl 0x5651d157b488 <line:385:1, line:388:96> line:385:12 used pthread_create 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' extern
| |-ParmVarDecl 0x5651d157af20 <col:28, col:50> col:50 __newthread 'pthread_t *restrict'
| |-ParmVarDecl 0x5651d157b030 <line:386:7, col:40> col:40 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x5651d157b270 <line:387:7, col:39> col:15 __start_routine 'void *(*)(void *)'
| |-ParmVarDecl 0x5651d157b2f0 <line:388:7, col:24> col:24 __arg 'void *restrict'
| |-NoThrowAttr 0x5651d157b548 <col:47>
| |-NonNullAttr 0x5651d157b5a0 <col:77, col:94> 1 3
| `-CallbackAttr 0x5651d157b5d8 <line:385:12> Implicit 2 3
|-FunctionDecl 0x5651d157b700 <line:389:1, col:72> col:13 pthread_exit 'void (void *) __attribute__((noreturn))' extern
| `-ParmVarDecl 0x5651d157b630 <col:27, col:33> col:33 __retval 'void *'
|-FunctionDecl 0x5651d157b958 <line:390:1, col:64> col:12 pthread_join 'int (pthread_t, void **)' extern
| |-ParmVarDecl 0x5651d157b7b8 <col:26, col:36> col:36 __th 'pthread_t':'unsigned long'
| `-ParmVarDecl 0x5651d157b838 <col:42, col:49> col:49 __thread_return 'void **'
|-FunctionDecl 0x5651d157bb28 <line:391:1, col:83> col:12 pthread_detach 'int (pthread_t)' extern
| |-ParmVarDecl 0x5651d157ba18 <col:28, col:38> col:38 __th 'pthread_t':'unsigned long'
| `-NoThrowAttr 0x5651d157bbd0 <col:60>
|-FunctionDecl 0x5651d157bd20 <line:392:1, col:105> col:18 pthread_self 'pthread_t (void)' extern
| |-NoThrowAttr 0x5651d157bdc0 <col:54>
| `-ConstAttr 0x5651d157be18 <col:95>
|-FunctionDecl 0x5651d157bfe8 <line:393:1, line:394:70> line:393:12 pthread_equal 'int (pthread_t, pthread_t)' extern
| |-ParmVarDecl 0x5651d157be50 <col:27, col:37> col:37 __thread1 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x5651d157bec8 <col:48, col:58> col:58 __thread2 'pthread_t':'unsigned long'
| |-NoThrowAttr 0x5651d157c098 <line:394:19>
| `-ConstAttr 0x5651d157c0f0 <col:60>
|-FunctionDecl 0x5651d157db08 <line:395:1, col:128> col:12 pthread_attr_init 'int (pthread_attr_t *)' extern
| |-ParmVarDecl 0x5651d157d9d0 <col:31, col:47> col:47 __attr 'pthread_attr_t *'
| |-NoThrowAttr 0x5651d157dbb0 <col:71>
| `-NonNullAttr 0x5651d157dc08 <col:112, col:126> 1
|-FunctionDecl 0x5651d157dd10 <line:396:1, line:397:79> line:396:12 pthread_attr_destroy 'int (pthread_attr_t *)' extern
| |-ParmVarDecl 0x5651d157dc58 <col:34, col:50> col:50 __attr 'pthread_attr_t *'
| |-NoThrowAttr 0x5651d157ddb8 <line:397:22>
| `-NonNullAttr 0x5651d157de10 <col:63, col:77> 1
|-FunctionDecl 0x5651d157e038 <line:398:1, line:400:82> line:398:12 pthread_attr_getdetachstate 'int (const pthread_attr_t *, int *)' extern
| |-ParmVarDecl 0x5651d157de58 <col:41, col:63> col:63 __attr 'const pthread_attr_t *'
| |-ParmVarDecl 0x5651d157ded8 <line:399:6, col:11> col:11 __detachstate 'int *'
| |-NoThrowAttr 0x5651d157e0e8 <line:400:22>
| `-NonNullAttr 0x5651d157e140 <col:63, col:80> 1 2
|-FunctionDecl 0x5651d157e348 <line:401:1, line:403:79> line:401:12 pthread_attr_setdetachstate 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x5651d157e188 <col:41, col:57> col:57 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x5651d157e208 <line:402:6, col:10> col:10 __detachstate 'int'
| |-NoThrowAttr 0x5651d157e3f8 <line:403:22>
| `-NonNullAttr 0x5651d157e450 <col:63, col:77> 1
|-FunctionDecl 0x5651d157e6a8 <line:404:1, line:406:82> line:404:12 pthread_attr_getguardsize 'int (const pthread_attr_t *, size_t *)' extern
| |-ParmVarDecl 0x5651d157e498 <col:39, col:61> col:61 __attr 'const pthread_attr_t *'
| |-ParmVarDecl 0x5651d157e540 <line:405:11, col:19> col:19 __guardsize 'size_t *'
| |-NoThrowAttr 0x5651d157e758 <line:406:22>
| `-NonNullAttr 0x5651d157e7b0 <col:63, col:80> 1 2
|-FunctionDecl 0x5651d157f9e8 <line:407:1, line:409:79> line:407:12 pthread_attr_setguardsize 'int (pthread_attr_t *, size_t)' extern
| |-ParmVarDecl 0x5651d157e7f8 <col:39, col:55> col:55 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x5651d157e870 <line:408:11, col:18> col:18 __guardsize 'size_t':'unsigned long'
| |-NoThrowAttr 0x5651d157fa98 <line:409:22>
| `-NonNullAttr 0x5651d157faf0 <col:63, col:77> 1
|-FunctionDecl 0x5651d157fd28 <line:410:1, line:412:82> line:410:12 pthread_attr_getschedparam 'int (const pthread_attr_t *restrict, struct sched_param *restrict)' extern
| |-ParmVarDecl 0x5651d157fb38 <col:40, col:73> col:73 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x5651d157fbc8 <line:411:12, col:43> col:43 __param 'struct sched_param *restrict'
| |-NoThrowAttr 0x5651d157fdd8 <line:412:22>
| `-NonNullAttr 0x5651d157fe30 <col:63, col:80> 1 2
|-FunctionDecl 0x5651d1580068 <line:413:1, line:415:97> line:413:12 pthread_attr_setschedparam 'int (pthread_attr_t *restrict, const struct sched_param *restrict)' extern
| |-ParmVarDecl 0x5651d157fe78 <col:40, col:67> col:67 __attr 'pthread_attr_t *restrict'
| |-ParmVarDecl 0x5651d157ff08 <line:414:12, line:415:12> col:12 __param 'const struct sched_param *restrict'
| |-NoThrowAttr 0x5651d1580118 <col:37>
| `-NonNullAttr 0x5651d1580170 <col:78, col:95> 1 2
|-FunctionDecl 0x5651d1580358 <line:416:1, line:418:82> line:416:12 pthread_attr_getschedpolicy 'int (const pthread_attr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x5651d15801b8 <col:41, line:417:6> col:6 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x5651d1580238 <col:14, col:30> col:30 __policy 'int *restrict'
| |-NoThrowAttr 0x5651d1580408 <line:418:22>
| `-NonNullAttr 0x5651d1580460 <col:63, col:80> 1 2
|-FunctionDecl 0x5651d15805e8 <line:419:1, line:420:79> line:419:12 pthread_attr_setschedpolicy 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x5651d15804a8 <col:41, col:57> col:57 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x5651d1580528 <col:65, col:69> col:69 __policy 'int'
| |-NoThrowAttr 0x5651d1580698 <line:420:22>
| `-NonNullAttr 0x5651d15806f0 <col:63, col:77> 1
|-FunctionDecl 0x5651d1580898 <line:421:1, line:423:82> line:421:12 pthread_attr_getinheritsched 'int (const pthread_attr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x5651d1580738 <col:42, line:422:7> col:7 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x5651d15807b8 <col:15, col:31> col:31 __inherit 'int *restrict'
| |-NoThrowAttr 0x5651d1580948 <line:423:22>
| `-NonNullAttr 0x5651d15809c0 <col:63, col:80> 1 2
|-FunctionDecl 0x5651d1580b48 <line:424:1, line:426:79> line:424:12 pthread_attr_setinheritsched 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x5651d1580a08 <col:42, col:58> col:58 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x5651d1580a88 <line:425:7, col:11> col:11 __inherit 'int'
| |-NoThrowAttr 0x5651d1580bf8 <line:426:22>
| `-NonNullAttr 0x5651d1580c50 <col:63, col:77> 1
|-FunctionDecl 0x5651d1580df8 <line:427:1, line:429:82> line:427:12 pthread_attr_getscope 'int (const pthread_attr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x5651d1580c98 <col:35, col:68> col:68 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x5651d1580d18 <line:428:7, col:23> col:23 __scope 'int *restrict'
| |-NoThrowAttr 0x5651d1580ea8 <line:429:22>
| `-NonNullAttr 0x5651d1580f00 <col:63, col:80> 1 2
|-FunctionDecl 0x5651d1581088 <line:430:1, line:431:79> line:430:12 pthread_attr_setscope 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x5651d1580f48 <col:35, col:51> col:51 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x5651d1580fc8 <col:59, col:63> col:63 __scope 'int'
| |-NoThrowAttr 0x5651d1581138 <line:431:22>
| `-NonNullAttr 0x5651d1581190 <col:63, col:77> 1
|-FunctionDecl 0x5651d15813b8 <line:432:1, line:434:115> line:432:12 pthread_attr_getstackaddr 'int (const pthread_attr_t *restrict, void **restrict)' extern
| |-ParmVarDecl 0x5651d15811d8 <col:39, line:433:11> col:11 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x5651d1581258 <col:19, col:37> col:37 __stackaddr 'void **restrict'
| |-NoThrowAttr 0x5651d1581468 <line:434:22>
| |-NonNullAttr 0x5651d15814c0 <col:63, col:80> 1 2
| `-DeprecatedAttr 0x5651d15814f8 <col:100> "" ""
|-FunctionDecl 0x5651d1581708 <line:435:1, line:437:112> line:435:12 pthread_attr_setstackaddr 'int (pthread_attr_t *, void *)' extern
| |-ParmVarDecl 0x5651d1581548 <col:39, col:55> col:55 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x5651d15815c8 <line:436:11, col:17> col:17 __stackaddr 'void *'
| |-NoThrowAttr 0x5651d15817b8 <line:437:22>
| |-NonNullAttr 0x5651d1581810 <col:63, col:77> 1
| `-DeprecatedAttr 0x5651d1581848 <col:97> "" ""
|-FunctionDecl 0x5651d1581a48 <line:438:1, line:440:82> line:438:12 pthread_attr_getstacksize 'int (const pthread_attr_t *restrict, size_t *restrict)' extern
| |-ParmVarDecl 0x5651d1581898 <col:39, line:439:11> col:11 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x5651d1581910 <col:19, col:38> col:38 __stacksize 'size_t *restrict'
| |-NoThrowAttr 0x5651d1581af8 <line:440:22>
| `-NonNullAttr 0x5651d1581b50 <col:63, col:80> 1 2
|-FunctionDecl 0x5651d1581cd0 <line:441:1, line:443:79> line:441:12 pthread_attr_setstacksize 'int (pthread_attr_t *, size_t)' extern
| |-ParmVarDecl 0x5651d1581b98 <col:39, col:55> col:55 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x5651d1581c10 <line:442:11, col:18> col:18 __stacksize 'size_t':'unsigned long'
| |-NoThrowAttr 0x5651d1581d80 <line:443:22>
| `-NonNullAttr 0x5651d1581dd8 <col:63, col:77> 1
|-FunctionDecl 0x5651d15820c8 <line:444:1, line:447:85> line:444:12 pthread_attr_getstack 'int (const pthread_attr_t *restrict, void **restrict, size_t *restrict)' extern
| |-ParmVarDecl 0x5651d1581e28 <col:35, col:68> col:68 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x5651d1581ea8 <line:445:7, col:25> col:25 __stackaddr 'void **restrict'
| |-ParmVarDecl 0x5651d1581f20 <line:446:7, col:26> col:26 __stacksize 'size_t *restrict'
| |-NoThrowAttr 0x5651d1582180 <line:447:22>
| `-NonNullAttr 0x5651d15821d8 <col:63, col:83> 1 2 3
|-FunctionDecl 0x5651d1582488 <line:448:1, line:449:100> line:448:12 pthread_attr_setstack 'int (pthread_attr_t *, void *, size_t)' extern
| |-ParmVarDecl 0x5651d1582230 <col:35, col:51> col:51 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x5651d15822b0 <col:59, col:65> col:65 __stackaddr 'void *'
| |-ParmVarDecl 0x5651d1582328 <line:449:7, col:14> col:14 __stacksize 'size_t':'unsigned long'
| |-NoThrowAttr 0x5651d1582540 <col:43>
| `-NonNullAttr 0x5651d1582598 <col:84, col:98> 1
|-FunctionDecl 0x5651d1582858 <line:450:1, line:452:79> line:450:12 pthread_setschedparam 'int (pthread_t, int, const struct sched_param *)' extern
| |-ParmVarDecl 0x5651d15825e8 <col:35, col:45> col:45 __target_thread 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x5651d1582668 <col:62, col:66> col:66 __policy 'int'
| |-ParmVarDecl 0x5651d15826f8 <line:451:7, col:33> col:33 __param 'const struct sched_param *'
| |-NoThrowAttr 0x5651d1582910 <line:452:22>
| `-NonNullAttr 0x5651d1582968 <col:63, col:77> 3
|-FunctionDecl 0x5651d1582c78 <line:453:1, line:456:82> line:453:12 pthread_getschedparam 'int (pthread_t, int *restrict, struct sched_param *restrict)' extern
| |-ParmVarDecl 0x5651d15829e0 <col:35, col:45> col:45 __target_thread 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x5651d1582a60 <line:454:7, col:23> col:23 __policy 'int *restrict'
| |-ParmVarDecl 0x5651d1582af0 <line:455:7, col:38> col:38 __param 'struct sched_param *restrict'
| |-NoThrowAttr 0x5651d1582d30 <line:456:22>
| `-NonNullAttr 0x5651d1582d88 <col:63, col:80> 2 3
|-FunctionDecl 0x5651d1582f78 <line:457:1, line:458:45> line:457:12 pthread_setschedprio 'int (pthread_t, int)' extern
| |-ParmVarDecl 0x5651d1582dd8 <col:34, col:44> col:44 __target_thread 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x5651d1582e58 <col:61, col:65> col:65 __prio 'int'
| `-NoThrowAttr 0x5651d1583028 <line:458:22>
|-FunctionDecl 0x5651d15833f8 <line:459:1, line:460:71> line:459:12 pthread_once 'int (pthread_once_t *, void (*)(void))' extern
| |-ParmVarDecl 0x5651d15830f0 <col:26, col:42> col:42 __once_control 'pthread_once_t *'
| |-ParmVarDecl 0x5651d1583290 <line:460:5, col:33> col:12 __init_routine 'void (*)(void)'
| `-NonNullAttr 0x5651d15834a8 <col:52, col:69> 1 2
|-FunctionDecl 0x5651d1583650 <line:461:1, col:64> col:12 pthread_setcancelstate 'int (int, int *)' extern
| |-ParmVarDecl 0x5651d1583530 <col:36, col:40> col:40 __state 'int'
| `-ParmVarDecl 0x5651d15835b0 <col:49, col:54> col:54 __oldstate 'int *'
|-FunctionDecl 0x5651d1583838 <line:462:1, col:61> col:12 pthread_setcanceltype 'int (int, int *)' extern
| |-ParmVarDecl 0x5651d1583718 <col:35, col:39> col:39 __type 'int'
| `-ParmVarDecl 0x5651d1583798 <col:47, col:52> col:52 __oldtype 'int *'
|-FunctionDecl 0x5651d15839f0 <line:463:1, col:42> col:12 pthread_cancel 'int (pthread_t)' extern
| `-ParmVarDecl 0x5651d15838f8 <col:28, col:38> col:38 __th 'pthread_t':'unsigned long'
|-FunctionDecl 0x5651d1583b30 <line:464:1, col:37> col:13 pthread_testcancel 'void (void)' extern
|-RecordDecl 0x5651d1583bd0 <line:465:9, line:473:1> line:465:9 struct definition
| |-RecordDecl 0x5651d1583c78 <line:467:3, line:471:3> line:467:3 struct definition
| | |-FieldDecl 0x5651d1583d68 <line:469:5, col:15> col:15 __cancel_jmp_buf '__jmp_buf':'long [8]'
| | `-FieldDecl 0x5651d1583dd0 <line:470:5, col:9> col:9 __mask_was_saved 'int'
| |-FieldDecl 0x5651d1583fa0 <line:467:3, line:471:23> col:5 __cancel_jmp_buf 'struct (anonymous struct at ./split_9/safe029_pso.oepc_false-unreach-call.i:467:3) [1]'
| `-FieldDecl 0x5651d1584098 <line:472:3, col:16> col:9 __pad 'void *[4]'
|-TypedefDecl 0x5651d1584150 <line:465:1, line:473:3> col:3 referenced __pthread_unwind_buf_t 'struct __pthread_unwind_buf_t':'__pthread_unwind_buf_t'
| |-ElaboratedType 0x5651d15840f0 'struct __pthread_unwind_buf_t' sugar
| | `-RecordType 0x5651d1583c50 '__pthread_unwind_buf_t'
| |   `-Record 0x5651d1583bd0 ''
| `-AlignedAttr 0x5651d15841a8 <col:42> aligned
|   `-<<<NULL>>>
|-RecordDecl 0x5651d1584220 <line:474:1, line:480:1> line:474:8 struct __pthread_cleanup_frame definition
| |-FieldDecl 0x5651d1584380 <line:476:3, col:35> col:10 __cancel_routine 'void (*)(void *)'
| |-FieldDecl 0x5651d15843e8 <line:477:3, col:9> col:9 __cancel_arg 'void *'
| |-FieldDecl 0x5651d1584450 <line:478:3, col:7> col:7 __do_it 'int'
| `-FieldDecl 0x5651d15844b8 <line:479:3, col:7> col:7 __cancel_type 'int'
|-FunctionDecl 0x5651d15846c0 <line:481:1, col:69> col:13 __pthread_register_cancel 'void (__pthread_unwind_buf_t *)' extern
| `-ParmVarDecl 0x5651d15845b0 <col:40, col:64> col:64 __buf '__pthread_unwind_buf_t *'
|-FunctionDecl 0x5651d1584808 <line:483:1, col:71> col:13 __pthread_unregister_cancel 'void (__pthread_unwind_buf_t *)' extern
| `-ParmVarDecl 0x5651d1584778 <col:42, col:66> col:66 __buf '__pthread_unwind_buf_t *'
|-FunctionDecl 0x5651d1584a00 <line:485:1, line:487:31> line:485:13 __pthread_unwind_next 'void (__pthread_unwind_buf_t *) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x5651d15848c0 <col:36, col:60> col:60 __buf '__pthread_unwind_buf_t *'
| `-WeakAttr 0x5651d1584aa8 <line:487:22>
|-RecordDecl 0x5651d1584b00 <line:489:1, col:8> col:8 struct __jmp_buf_tag
|-FunctionDecl 0x5651d1584e18 <line:490:1, col:98> col:12 __sigsetjmp 'int (struct __jmp_buf_tag *, int)' extern
| |-ParmVarDecl 0x5651d1584c78 <col:25, col:47> col:47 __env 'struct __jmp_buf_tag *'
| |-ParmVarDecl 0x5651d1584cf8 <col:54, col:58> col:58 __savemask 'int'
| |-NoThrowAttr 0x5651d1584ec8 <col:86>
| `-ReturnsTwiceAttr 0x5651d1584f20 <col:12> Implicit
|-FunctionDecl 0x5651d1585248 <line:491:1, line:493:79> line:491:12 pthread_mutex_init 'int (pthread_mutex_t *, const pthread_mutexattr_t *)' extern
| |-ParmVarDecl 0x5651d1584ff0 <col:32, col:49> col:49 __mutex 'pthread_mutex_t *'
| |-ParmVarDecl 0x5651d1585100 <line:492:11, col:38> col:38 __mutexattr 'const pthread_mutexattr_t *'
| |-NoThrowAttr 0x5651d15852f8 <line:493:22>
| `-NonNullAttr 0x5651d1585350 <col:63, col:77> 1
|-FunctionDecl 0x5651d15854c8 <line:494:1, line:495:79> line:494:12 pthread_mutex_destroy 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x5651d1585398 <col:35, col:52> col:52 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x5651d1585570 <line:495:22>
| `-NonNullAttr 0x5651d15855c8 <col:63, col:77> 1
|-FunctionDecl 0x5651d15856d0 <line:496:1, line:497:68> line:496:12 pthread_mutex_trylock 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x5651d1585618 <col:35, col:52> col:52 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x5651d1585778 <line:497:22>
| `-NonNullAttr 0x5651d15857d0 <col:52, col:66> 1
|-FunctionDecl 0x5651d15858d0 <line:498:1, line:499:68> line:498:12 pthread_mutex_lock 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x5651d1585818 <col:32, col:49> col:49 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x5651d1585978 <line:499:22>
| `-NonNullAttr 0x5651d15859d0 <col:52, col:66> 1
|-FunctionDecl 0x5651d1586c28 <line:500:1, line:502:85> line:500:12 pthread_mutex_timedlock 'int (pthread_mutex_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x5651d1586a38 <col:37, col:65> col:65 __mutex 'pthread_mutex_t *restrict'
| |-ParmVarDecl 0x5651d1586ac8 <line:501:9, line:502:9> col:9 __abstime 'const struct timespec *restrict'
| |-NoThrowAttr 0x5651d1586cd8 <col:36>
| `-NonNullAttr 0x5651d1586d30 <col:66, col:83> 1 2
|-FunctionDecl 0x5651d1586e30 <line:503:1, line:504:68> line:503:12 pthread_mutex_unlock 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x5651d1586d78 <col:34, col:51> col:51 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x5651d1586ed8 <line:504:22>
| `-NonNullAttr 0x5651d1586f30 <col:52, col:66> 1
|-FunctionDecl 0x5651d15871c8 <line:505:1, line:508:82> line:505:12 pthread_mutex_getprioceiling 'int (const pthread_mutex_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x5651d1586fe0 <col:42, line:506:18> col:18 __mutex 'const pthread_mutex_t *restrict'
| |-ParmVarDecl 0x5651d1587060 <line:507:7, col:23> col:23 __prioceiling 'int *restrict'
| |-NoThrowAttr 0x5651d1587278 <line:508:22>
| `-NonNullAttr 0x5651d15872d0 <col:63, col:80> 1 2
|-FunctionDecl 0x5651d1587598 <line:509:1, line:512:82> line:509:12 pthread_mutex_setprioceiling 'int (pthread_mutex_t *restrict, int, int *restrict)' extern
| |-ParmVarDecl 0x5651d1587318 <col:42, col:70> col:70 __mutex 'pthread_mutex_t *restrict'
| |-ParmVarDecl 0x5651d1587398 <line:510:7, col:11> col:11 __prioceiling 'int'
| |-ParmVarDecl 0x5651d1587418 <line:511:7, col:23> col:23 __old_ceiling 'int *restrict'
| |-NoThrowAttr 0x5651d1587650 <line:512:22>
| `-NonNullAttr 0x5651d15876a8 <col:63, col:80> 1 3
|-FunctionDecl 0x5651d15877b0 <line:513:1, line:514:79> line:513:12 pthread_mutex_consistent 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x5651d15876f8 <col:38, col:55> col:55 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x5651d1587858 <line:514:22>
| `-NonNullAttr 0x5651d15878b0 <col:63, col:77> 1
|-FunctionDecl 0x5651d1587ad8 <line:515:1, line:516:79> line:515:12 pthread_mutexattr_init 'int (pthread_mutexattr_t *)' extern
| |-ParmVarDecl 0x5651d1587960 <col:36, col:57> col:57 __attr 'pthread_mutexattr_t *'
| |-NoThrowAttr 0x5651d1587b80 <line:516:22>
| `-NonNullAttr 0x5651d1587bd8 <col:63, col:77> 1
|-FunctionDecl 0x5651d1587ce0 <line:517:1, line:518:79> line:517:12 pthread_mutexattr_destroy 'int (pthread_mutexattr_t *)' extern
| |-ParmVarDecl 0x5651d1587c28 <col:39, col:60> col:60 __attr 'pthread_mutexattr_t *'
| |-NoThrowAttr 0x5651d1587d88 <line:518:22>
| `-NonNullAttr 0x5651d1587de0 <col:63, col:77> 1
|-FunctionDecl 0x5651d1588008 <line:519:1, line:522:82> line:519:12 pthread_mutexattr_getpshared 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x5651d1587e28 <col:42, line:520:18> col:18 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x5651d1587ea8 <line:521:7, col:23> col:23 __pshared 'int *restrict'
| |-NoThrowAttr 0x5651d15880b8 <line:522:22>
| `-NonNullAttr 0x5651d1588110 <col:63, col:80> 1 2
|-FunctionDecl 0x5651d1588318 <line:523:1, line:525:79> line:523:12 pthread_mutexattr_setpshared 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x5651d1588158 <col:42, col:63> col:63 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x5651d15881d8 <line:524:7, col:11> col:11 __pshared 'int'
| |-NoThrowAttr 0x5651d15883c8 <line:525:22>
| `-NonNullAttr 0x5651d1588420 <col:63, col:77> 1
|-FunctionDecl 0x5651d15885c8 <line:526:1, line:528:82> line:526:12 pthread_mutexattr_gettype 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x5651d1588468 <col:39, line:527:11> col:11 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x5651d15884e8 <col:19, col:35> col:35 __kind 'int *restrict'
| |-NoThrowAttr 0x5651d1588678 <line:528:22>
| `-NonNullAttr 0x5651d15886d0 <col:63, col:80> 1 2
|-FunctionDecl 0x5651d1588858 <line:529:1, line:530:79> line:529:12 pthread_mutexattr_settype 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x5651d1588718 <col:39, col:60> col:60 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x5651d1588798 <col:68, col:72> col:72 __kind 'int'
| |-NoThrowAttr 0x5651d1588908 <line:530:22>
| `-NonNullAttr 0x5651d1588960 <col:63, col:77> 1
|-FunctionDecl 0x5651d1588b20 <line:531:1, line:534:82> line:531:12 pthread_mutexattr_getprotocol 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x5651d15889a8 <col:43, line:532:19> col:19 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x5651d1588a40 <line:533:8, col:24> col:24 __protocol 'int *restrict'
| |-NoThrowAttr 0x5651d1588bd0 <line:534:22>
| `-NonNullAttr 0x5651d1588c28 <col:63, col:80> 1 2
|-FunctionDecl 0x5651d1588db8 <line:535:1, line:537:79> line:535:12 pthread_mutexattr_setprotocol 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x5651d1588c78 <col:43, col:64> col:64 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x5651d1588cf8 <line:536:8, col:12> col:12 __protocol 'int'
| |-NoThrowAttr 0x5651d1588e68 <line:537:22>
| `-NonNullAttr 0x5651d1588ec0 <col:63, col:77> 1
|-FunctionDecl 0x5651d1589068 <line:538:1, line:541:82> line:538:12 pthread_mutexattr_getprioceiling 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x5651d1588f08 <col:46, line:539:22> col:22 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x5651d1588f88 <line:540:11, col:27> col:27 __prioceiling 'int *restrict'
| |-NoThrowAttr 0x5651d1589118 <line:541:22>
| `-NonNullAttr 0x5651d1589170 <col:63, col:80> 1 2
|-FunctionDecl 0x5651d15892f8 <line:542:1, line:544:79> line:542:12 pthread_mutexattr_setprioceiling 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x5651d15891b8 <col:46, col:67> col:67 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x5651d1589238 <line:543:11, col:15> col:15 __prioceiling 'int'
| |-NoThrowAttr 0x5651d15893a8 <line:544:22>
| `-NonNullAttr 0x5651d1589400 <col:63, col:77> 1
|-FunctionDecl 0x5651d15895e8 <line:545:1, line:547:82> line:545:12 pthread_mutexattr_getrobust 'int (const pthread_mutexattr_t *, int *)' extern
| |-ParmVarDecl 0x5651d1589448 <col:41, col:68> col:68 __attr 'const pthread_mutexattr_t *'
| |-ParmVarDecl 0x5651d15894c8 <line:546:6, col:11> col:11 __robustness 'int *'
| |-NoThrowAttr 0x5651d1589698 <line:547:22>
| `-NonNullAttr 0x5651d15896f0 <col:63, col:80> 1 2
|-FunctionDecl 0x5651d1589878 <line:548:1, line:550:79> line:548:12 pthread_mutexattr_setrobust 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x5651d1589738 <col:41, col:62> col:62 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x5651d15897b8 <line:549:6, col:10> col:10 __robustness 'int'
| |-NoThrowAttr 0x5651d1589928 <line:550:22>
| `-NonNullAttr 0x5651d1589980 <col:63, col:77> 1
|-FunctionDecl 0x5651d158acf8 <line:551:1, line:553:86> line:551:12 pthread_rwlock_init 'int (pthread_rwlock_t *restrict, const pthread_rwlockattr_t *restrict)' extern
| |-ParmVarDecl 0x5651d158aaa0 <col:33, col:62> col:62 __rwlock 'pthread_rwlock_t *restrict'
| |-ParmVarDecl 0x5651d158abb0 <line:552:5, line:553:5> col:5 __attr 'const pthread_rwlockattr_t *restrict'
| |-NoThrowAttr 0x5651d158ada8 <col:29>
| `-NonNullAttr 0x5651d158ae00 <col:70, col:84> 1
|-FunctionDecl 0x5651d158af78 <line:554:1, line:555:79> line:554:12 pthread_rwlock_destroy 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x5651d158ae48 <col:36, col:54> col:54 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x5651d158b020 <line:555:22>
| `-NonNullAttr 0x5651d158b078 <col:63, col:77> 1
|-FunctionDecl 0x5651d158b180 <line:556:1, line:557:68> line:556:12 pthread_rwlock_rdlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x5651d158b0c8 <col:35, col:53> col:53 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x5651d158b228 <line:557:22>
| `-NonNullAttr 0x5651d158b280 <col:52, col:66> 1
|-FunctionDecl 0x5651d158b380 <line:558:1, line:559:65> line:558:12 pthread_rwlock_tryrdlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x5651d158b2c8 <col:38, col:56> col:56 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x5651d158b428 <line:559:19>
| `-NonNullAttr 0x5651d158b480 <col:49, col:63> 1
|-FunctionDecl 0x5651d158b6b8 <line:560:1, line:562:88> line:560:12 pthread_rwlock_timedrdlock 'int (pthread_rwlock_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x5651d158b4c8 <col:40, col:69> col:69 __rwlock 'pthread_rwlock_t *restrict'
| |-ParmVarDecl 0x5651d158b558 <line:561:12, line:562:12> col:12 __abstime 'const struct timespec *restrict'
| |-NoThrowAttr 0x5651d158b768 <col:39>
| `-NonNullAttr 0x5651d158b7c0 <col:69, col:86> 1 2
|-FunctionDecl 0x5651d158b8c0 <line:563:1, line:564:68> line:563:12 pthread_rwlock_wrlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x5651d158b808 <col:35, col:53> col:53 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x5651d158b968 <line:564:22>
| `-NonNullAttr 0x5651d158b9c0 <col:52, col:66> 1
|-FunctionDecl 0x5651d158bb28 <line:565:1, line:566:68> line:565:12 pthread_rwlock_trywrlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x5651d158ba70 <col:38, col:56> col:56 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x5651d158bbd0 <line:566:22>
| `-NonNullAttr 0x5651d158bc28 <col:52, col:66> 1
|-FunctionDecl 0x5651d158bde8 <line:567:1, line:569:88> line:567:12 pthread_rwlock_timedwrlock 'int (pthread_rwlock_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x5651d158bc78 <col:40, col:69> col:69 __rwlock 'pthread_rwlock_t *restrict'
| |-ParmVarDecl 0x5651d158bd08 <line:568:12, line:569:12> col:12 __abstime 'const struct timespec *restrict'
| |-NoThrowAttr 0x5651d158be98 <col:39>
| `-NonNullAttr 0x5651d158bef0 <col:69, col:86> 1 2
|-FunctionDecl 0x5651d158bff0 <line:570:1, line:571:68> line:570:12 pthread_rwlock_unlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x5651d158bf38 <col:35, col:53> col:53 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x5651d158c098 <line:571:22>
| `-NonNullAttr 0x5651d158c0f0 <col:52, col:66> 1
|-FunctionDecl 0x5651d158c2d8 <line:572:1, line:573:79> line:572:12 pthread_rwlockattr_init 'int (pthread_rwlockattr_t *)' extern
| |-ParmVarDecl 0x5651d158c1a0 <col:37, col:59> col:59 __attr 'pthread_rwlockattr_t *'
| |-NoThrowAttr 0x5651d158c380 <line:573:22>
| `-NonNullAttr 0x5651d158c3d8 <col:63, col:77> 1
|-FunctionDecl 0x5651d158c4e0 <line:574:1, line:575:79> line:574:12 pthread_rwlockattr_destroy 'int (pthread_rwlockattr_t *)' extern
| |-ParmVarDecl 0x5651d158c428 <col:40, col:62> col:62 __attr 'pthread_rwlockattr_t *'
| |-NoThrowAttr 0x5651d158c588 <line:575:22>
| `-NonNullAttr 0x5651d158c5e0 <col:63, col:77> 1
|-FunctionDecl 0x5651d158c808 <line:576:1, line:579:82> line:576:12 pthread_rwlockattr_getpshared 'int (const pthread_rwlockattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x5651d158c628 <col:43, line:577:19> col:19 __attr 'const pthread_rwlockattr_t *restrict'
| |-ParmVarDecl 0x5651d158c6a8 <line:578:8, col:24> col:24 __pshared 'int *restrict'
| |-NoThrowAttr 0x5651d158c8b8 <line:579:22>
| `-NonNullAttr 0x5651d158c910 <col:63, col:80> 1 2
|-FunctionDecl 0x5651d158cb38 <line:580:1, line:582:79> line:580:12 pthread_rwlockattr_setpshared 'int (pthread_rwlockattr_t *, int)' extern
| |-ParmVarDecl 0x5651d158c958 <col:43, col:65> col:65 __attr 'pthread_rwlockattr_t *'
| |-ParmVarDecl 0x5651d158c9d8 <line:581:8, col:12> col:12 __pshared 'int'
| |-NoThrowAttr 0x5651d158cbe8 <line:582:22>
| `-NonNullAttr 0x5651d158cc40 <col:63, col:77> 1
|-FunctionDecl 0x5651d158cde8 <line:583:1, line:586:82> line:583:12 pthread_rwlockattr_getkind_np 'int (const pthread_rwlockattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x5651d158cc88 <col:43, line:584:19> col:19 __attr 'const pthread_rwlockattr_t *restrict'
| |-ParmVarDecl 0x5651d158cd08 <line:585:8, col:24> col:24 __pref 'int *restrict'
| |-NoThrowAttr 0x5651d158ce98 <line:586:22>
| `-NonNullAttr 0x5651d158cef0 <col:63, col:80> 1 2
|-FunctionDecl 0x5651d158d078 <line:587:1, line:588:93> line:587:12 pthread_rwlockattr_setkind_np 'int (pthread_rwlockattr_t *, int)' extern
| |-ParmVarDecl 0x5651d158cf38 <col:43, col:65> col:65 __attr 'pthread_rwlockattr_t *'
| |-ParmVarDecl 0x5651d158cfb8 <line:588:8, col:12> col:12 __pref 'int'
| |-NoThrowAttr 0x5651d158d128 <col:36>
| `-NonNullAttr 0x5651d158d180 <col:77, col:91> 1
|-FunctionDecl 0x5651d158d4b8 <line:589:1, line:591:79> line:589:12 pthread_cond_init 'int (pthread_cond_t *restrict, const pthread_condattr_t *restrict)' extern
| |-ParmVarDecl 0x5651d158d260 <col:31, col:58> col:58 __cond 'pthread_cond_t *restrict'
| |-ParmVarDecl 0x5651d158d370 <line:590:10, col:47> col:47 __cond_attr 'const pthread_condattr_t *restrict'
| |-NoThrowAttr 0x5651d158d568 <line:591:22>
| `-NonNullAttr 0x5651d158d5c0 <col:63, col:77> 1
|-FunctionDecl 0x5651d158d738 <line:592:1, line:593:79> line:592:12 pthread_cond_destroy 'int (pthread_cond_t *)' extern
| |-ParmVarDecl 0x5651d158d608 <col:34, col:50> col:50 __cond 'pthread_cond_t *'
| |-NoThrowAttr 0x5651d158d7e0 <line:593:22>
| `-NonNullAttr 0x5651d158d838 <col:63, col:77> 1
|-FunctionDecl 0x5651d158d940 <line:594:1, line:595:68> line:594:12 pthread_cond_signal 'int (pthread_cond_t *)' extern
| |-ParmVarDecl 0x5651d158d888 <col:33, col:49> col:49 __cond 'pthread_cond_t *'
| |-NoThrowAttr 0x5651d158d9e8 <line:595:22>
| `-NonNullAttr 0x5651d158da40 <col:52, col:66> 1
|-FunctionDecl 0x5651d158db58 <line:596:1, line:597:68> line:596:12 pthread_cond_broadcast 'int (pthread_cond_t *)' extern
| |-ParmVarDecl 0x5651d158daa0 <col:36, col:52> col:52 __cond 'pthread_cond_t *'
| |-NoThrowAttr 0x5651d158dc00 <line:597:22>
| `-NonNullAttr 0x5651d158dc58 <col:52, col:66> 1
|-FunctionDecl 0x5651d158de88 <line:598:1, line:600:41> line:598:12 pthread_cond_wait 'int (pthread_cond_t *restrict, pthread_mutex_t *restrict)' extern
| |-ParmVarDecl 0x5651d158dca8 <col:31, col:58> col:58 __cond 'pthread_cond_t *restrict'
| |-ParmVarDecl 0x5651d158dd20 <line:599:10, col:38> col:38 __mutex 'pthread_mutex_t *restrict'
| `-NonNullAttr 0x5651d158df38 <line:600:22, col:39> 1 2
|-FunctionDecl 0x5651d158e268 <line:601:1, line:604:44> line:601:12 pthread_cond_timedwait 'int (pthread_cond_t *restrict, pthread_mutex_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x5651d158dfb8 <col:36, col:63> col:63 __cond 'pthread_cond_t *restrict'
| |-ParmVarDecl 0x5651d158e030 <line:602:8, col:36> col:36 __mutex 'pthread_mutex_t *restrict'
| |-ParmVarDecl 0x5651d158e0c0 <line:603:8, col:42> col:42 __abstime 'const struct timespec *restrict'
| `-NonNullAttr 0x5651d158e320 <line:604:22, col:42> 1 2 3
|-FunctionDecl 0x5651d158e538 <line:605:1, line:606:79> line:605:12 pthread_condattr_init 'int (pthread_condattr_t *)' extern
| |-ParmVarDecl 0x5651d158e400 <col:35, col:55> col:55 __attr 'pthread_condattr_t *'
| |-NoThrowAttr 0x5651d158e5e0 <line:606:22>
| `-NonNullAttr 0x5651d158e638 <col:63, col:77> 1
|-FunctionDecl 0x5651d158e740 <line:607:1, line:608:79> line:607:12 pthread_condattr_destroy 'int (pthread_condattr_t *)' extern
| |-ParmVarDecl 0x5651d158e688 <col:38, col:58> col:58 __attr 'pthread_condattr_t *'
| |-NoThrowAttr 0x5651d158e7e8 <line:608:22>
| `-NonNullAttr 0x5651d158e840 <col:63, col:77> 1
|-FunctionDecl 0x5651d158eaa0 <line:609:1, line:612:82> line:609:12 pthread_condattr_getpshared 'int (const pthread_condattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x5651d158e888 <col:41, line:610:17> col:17 __attr 'const pthread_condattr_t *restrict'
| |-ParmVarDecl 0x5651d158e908 <line:611:6, col:22> col:22 __pshared 'int *restrict'
| |-NoThrowAttr 0x5651d158eb50 <line:612:22>
| `-NonNullAttr 0x5651d158eba8 <col:63, col:80> 1 2
|-FunctionDecl 0x5651d158edb8 <line:613:1, line:614:94> line:613:12 pthread_condattr_setpshared 'int (pthread_condattr_t *, int)' extern
| |-ParmVarDecl 0x5651d158ebf8 <col:41, col:61> col:61 __attr 'pthread_condattr_t *'
| |-ParmVarDecl 0x5651d158ec78 <line:614:6, col:10> col:10 __pshared 'int'
| |-NoThrowAttr 0x5651d158ee68 <col:37>
| `-NonNullAttr 0x5651d158eec0 <col:78, col:92> 1
|-FunctionDecl 0x5651d158f0d8 <line:615:1, line:618:82> line:615:12 pthread_condattr_getclock 'int (const pthread_condattr_t *restrict, __clockid_t *restrict)' extern
| |-ParmVarDecl 0x5651d158ef08 <col:39, line:616:22> col:22 __attr 'const pthread_condattr_t *restrict'
| |-ParmVarDecl 0x5651d158efb0 <line:617:11, col:35> col:35 __clock_id '__clockid_t *restrict'
| |-NoThrowAttr 0x5651d158f188 <line:618:22>
| `-NonNullAttr 0x5651d158f1e0 <col:63, col:80> 1 2
|-FunctionDecl 0x5651d158f3a8 <line:619:1, line:621:79> line:619:12 pthread_condattr_setclock 'int (pthread_condattr_t *, __clockid_t)' extern
| |-ParmVarDecl 0x5651d158f228 <col:39, col:59> col:59 __attr 'pthread_condattr_t *'
| |-ParmVarDecl 0x5651d158f2a0 <line:620:11, col:23> col:23 __clock_id '__clockid_t':'int'
| |-NoThrowAttr 0x5651d158f458 <line:621:22>
| `-NonNullAttr 0x5651d158f4b0 <col:63, col:77> 1
|-FunctionDecl 0x5651d158f758 <line:622:1, line:623:79> line:622:12 pthread_spin_init 'int (pthread_spinlock_t *, int)' extern
| |-ParmVarDecl 0x5651d158f590 <col:31, col:51> col:51 __lock 'pthread_spinlock_t *'
| |-ParmVarDecl 0x5651d158f610 <col:59, col:63> col:63 __pshared 'int'
| |-NoThrowAttr 0x5651d158f808 <line:623:22>
| `-NonNullAttr 0x5651d158f860 <col:63, col:77> 1
|-FunctionDecl 0x5651d158f9d8 <line:624:1, line:625:79> line:624:12 pthread_spin_destroy 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x5651d158f8a8 <col:34, col:54> col:54 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x5651d158fab0 <line:625:22>
| `-NonNullAttr 0x5651d158fb08 <col:63, col:77> 1
|-FunctionDecl 0x5651d158fc10 <line:626:1, line:627:68> line:626:12 pthread_spin_lock 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x5651d158fb58 <col:31, col:51> col:51 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x5651d158fcb8 <line:627:22>
| `-NonNullAttr 0x5651d158fd10 <col:52, col:66> 1
|-FunctionDecl 0x5651d158fe10 <line:628:1, line:629:68> line:628:12 pthread_spin_trylock 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x5651d158fd58 <col:34, col:54> col:54 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x5651d158feb8 <line:629:22>
| `-NonNullAttr 0x5651d158ff10 <col:52, col:66> 1
|-FunctionDecl 0x5651d1590010 <line:630:1, line:631:68> line:630:12 pthread_spin_unlock 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x5651d158ff58 <col:33, col:53> col:53 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x5651d15900b8 <line:631:22>
| `-NonNullAttr 0x5651d1590110 <col:52, col:66> 1
|-FunctionDecl 0x5651d15904e8 <line:632:1, line:635:79> line:632:12 pthread_barrier_init 'int (pthread_barrier_t *restrict, const pthread_barrierattr_t *restrict, unsigned int)' extern
| |-ParmVarDecl 0x5651d15901f0 <col:34, col:64> col:64 __barrier 'pthread_barrier_t *restrict'
| |-ParmVarDecl 0x5651d1590300 <line:633:6, line:634:6> col:6 __attr 'const pthread_barrierattr_t *restrict'
| |-ParmVarDecl 0x5651d1590380 <col:14, col:27> col:27 __count 'unsigned int'
| |-NoThrowAttr 0x5651d15905a0 <line:635:22>
| `-NonNullAttr 0x5651d15905f8 <col:63, col:77> 1
|-FunctionDecl 0x5651d1590778 <line:636:1, line:637:79> line:636:12 pthread_barrier_destroy 'int (pthread_barrier_t *)' extern
| |-ParmVarDecl 0x5651d1590648 <col:37, col:56> col:56 __barrier 'pthread_barrier_t *'
| |-NoThrowAttr 0x5651d1590820 <line:637:22>
| `-NonNullAttr 0x5651d1590878 <col:63, col:77> 1
|-FunctionDecl 0x5651d1590980 <line:638:1, line:639:68> line:638:12 pthread_barrier_wait 'int (pthread_barrier_t *)' extern
| |-ParmVarDecl 0x5651d15908c8 <col:34, col:53> col:53 __barrier 'pthread_barrier_t *'
| |-NoThrowAttr 0x5651d1590a28 <line:639:22>
| `-NonNullAttr 0x5651d1590a80 <col:52, col:66> 1
|-FunctionDecl 0x5651d1591c88 <line:640:1, line:641:79> line:640:12 pthread_barrierattr_init 'int (pthread_barrierattr_t *)' extern
| |-ParmVarDecl 0x5651d1591b50 <col:38, col:61> col:61 __attr 'pthread_barrierattr_t *'
| |-NoThrowAttr 0x5651d1591d30 <line:641:22>
| `-NonNullAttr 0x5651d1591d88 <col:63, col:77> 1
|-FunctionDecl 0x5651d1591e90 <line:642:1, line:643:79> line:642:12 pthread_barrierattr_destroy 'int (pthread_barrierattr_t *)' extern
| |-ParmVarDecl 0x5651d1591dd8 <col:41, col:64> col:64 __attr 'pthread_barrierattr_t *'
| |-NoThrowAttr 0x5651d1591f38 <line:643:22>
| `-NonNullAttr 0x5651d1591f90 <col:63, col:77> 1
|-FunctionDecl 0x5651d15921b8 <line:644:1, line:647:82> line:644:12 pthread_barrierattr_getpshared 'int (const pthread_barrierattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x5651d1591fd8 <col:44, line:645:20> col:20 __attr 'const pthread_barrierattr_t *restrict'
| |-ParmVarDecl 0x5651d1592058 <line:646:9, col:25> col:25 __pshared 'int *restrict'
| |-NoThrowAttr 0x5651d1592268 <line:647:22>
| `-NonNullAttr 0x5651d15922c0 <col:63, col:80> 1 2
|-FunctionDecl 0x5651d15924c8 <line:648:1, line:650:79> line:648:12 pthread_barrierattr_setpshared 'int (pthread_barrierattr_t *, int)' extern
| |-ParmVarDecl 0x5651d1592308 <col:44, col:67> col:67 __attr 'pthread_barrierattr_t *'
| |-ParmVarDecl 0x5651d1592388 <line:649:9, col:13> col:13 __pshared 'int'
| |-NoThrowAttr 0x5651d1592578 <line:650:22>
| `-NonNullAttr 0x5651d15925d0 <col:63, col:77> 1
|-FunctionDecl 0x5651d1592918 <line:651:1, line:653:79> line:651:12 pthread_key_create 'int (pthread_key_t *, void (*)(void *))' extern
| |-ParmVarDecl 0x5651d15926b0 <col:32, col:47> col:47 __key 'pthread_key_t *'
| |-ParmVarDecl 0x5651d15927d0 <line:652:11, col:43> col:18 __destr_function 'void (*)(void *)'
| |-NoThrowAttr 0x5651d15929c8 <line:653:22>
| `-NonNullAttr 0x5651d1592a20 <col:63, col:77> 1
|-FunctionDecl 0x5651d1592b88 <line:654:1, col:92> col:12 pthread_key_delete 'int (pthread_key_t)' extern
| |-ParmVarDecl 0x5651d1592a68 <col:32, col:46> col:46 __key 'pthread_key_t':'unsigned int'
| `-NoThrowAttr 0x5651d1592c30 <col:69>
|-FunctionDecl 0x5651d1592da8 <line:655:1, col:95> col:14 pthread_getspecific 'void *(pthread_key_t)' extern
| |-ParmVarDecl 0x5651d1592c98 <col:35, col:49> col:49 __key 'pthread_key_t':'unsigned int'
| `-NoThrowAttr 0x5651d1592e50 <col:72>
|-FunctionDecl 0x5651d1593088 <line:656:1, line:657:67> line:656:12 pthread_setspecific 'int (pthread_key_t, const void *)' extern
| |-ParmVarDecl 0x5651d1592eb8 <col:33, col:47> col:47 __key 'pthread_key_t':'unsigned int'
| |-ParmVarDecl 0x5651d1592f68 <line:657:5, col:17> col:17 __pointer 'const void *'
| `-NoThrowAttr 0x5651d1593138 <col:44>
|-FunctionDecl 0x5651d1593358 <line:658:1, line:660:79> line:658:12 pthread_getcpuclockid 'int (pthread_t, __clockid_t *)' extern
| |-ParmVarDecl 0x5651d15931a0 <col:35, col:45> col:45 __thread_id 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x5651d1593218 <line:659:7, col:20> col:20 __clock_id '__clockid_t *'
| |-NoThrowAttr 0x5651d1593408 <line:660:22>
| `-NonNullAttr 0x5651d1593460 <col:63, col:77> 2
|-FunctionDecl 0x5651d15938a8 <line:661:1, line:663:70> line:661:12 pthread_atfork 'int (void (*)(void), void (*)(void), void (*)(void))' extern
| |-ParmVarDecl 0x5651d1593540 <col:28, col:51> col:35 __prepare 'void (*)(void)'
| |-ParmVarDecl 0x5651d1593650 <line:662:7, col:29> col:14 __parent 'void (*)(void)'
| |-ParmVarDecl 0x5651d1593760 <line:663:7, col:28> col:14 __child 'void (*)(void)'
| `-NoThrowAttr 0x5651d1593960 <col:47>
|-FunctionDecl 0x5651d1593af0 <line:665:1, col:20> col:8 used P0 'void *(void *)'
| `-ParmVarDecl 0x5651d15939d0 <col:11, col:17> col:17 arg 'void *'
|-FunctionDecl 0x5651d1593c48 <line:666:1, col:20> col:8 used P1 'void *(void *)'
| `-ParmVarDecl 0x5651d1593bb0 <col:11, col:17> col:17 arg 'void *'
|-FunctionDecl 0x5651d1593d10 <line:667:1, col:12> col:6 fence 'void ()'
|-FunctionDecl 0x5651d1593dd0 <line:668:1, col:12> col:6 isync 'void ()'
|-FunctionDecl 0x5651d1593e90 <line:669:1, col:14> col:6 lwfence 'void ()'
|-VarDecl 0x5651d1593f48 <line:670:1, col:5> col:5 used __unbuffered_cnt 'int'
|-VarDecl 0x5651d1593fc8 prev 0x5651d1593f48 <line:671:1, col:24> col:5 used __unbuffered_cnt 'int' cinit
| `-IntegerLiteral 0x5651d1594030 <col:24> 'int' 0
|-VarDecl 0x5651d1594060 <line:672:1, col:7> col:7 used main$tmp_guard0 '_Bool'
|-VarDecl 0x5651d15940d8 <line:673:1, col:7> col:7 used main$tmp_guard1 '_Bool'
|-VarDecl 0x5651d1594158 <line:674:1, col:5> col:5 used x 'int'
|-VarDecl 0x5651d15941d8 prev 0x5651d1594158 <line:675:1, col:9> col:5 used x 'int' cinit
| `-IntegerLiteral 0x5651d1594240 <col:9> 'int' 0
|-VarDecl 0x5651d1594278 <line:676:1, col:5> col:5 used y 'int'
|-VarDecl 0x5651d15942f8 prev 0x5651d1594278 <line:677:1, col:9> col:5 used y 'int' cinit
| `-IntegerLiteral 0x5651d1594360 <col:9> 'int' 0
|-VarDecl 0x5651d1594390 <line:678:1, col:7> col:7 used y$flush_delayed '_Bool'
|-VarDecl 0x5651d1594410 <line:679:1, col:5> col:5 used y$mem_tmp 'int'
|-VarDecl 0x5651d1594488 <line:680:1, col:7> col:7 used y$r_buff0_thd0 '_Bool'
|-VarDecl 0x5651d1594500 <line:681:1, col:7> col:7 used y$r_buff0_thd1 '_Bool'
|-VarDecl 0x5651d1594578 <line:682:1, col:7> col:7 used y$r_buff0_thd2 '_Bool'
|-VarDecl 0x5651d15945f0 <line:683:1, col:7> col:7 used y$r_buff1_thd0 '_Bool'
|-VarDecl 0x5651d1594668 <line:684:1, col:7> col:7 used y$r_buff1_thd1 '_Bool'
|-VarDecl 0x5651d15946e0 <line:685:1, col:7> col:7 used y$r_buff1_thd2 '_Bool'
|-VarDecl 0x5651d1594758 <line:686:1, col:7> col:7 y$read_delayed '_Bool'
|-VarDecl 0x5651d15947d8 <line:687:1, col:6> col:6 y$read_delayed_var 'int *'
|-VarDecl 0x5651d1594858 <line:688:1, col:5> col:5 used y$w_buff0 'int'
|-VarDecl 0x5651d15948d0 <line:689:1, col:7> col:7 used y$w_buff0_used '_Bool'
|-VarDecl 0x5651d1594950 <line:690:1, col:5> col:5 used y$w_buff1 'int'
|-VarDecl 0x5651d15949c8 <line:691:1, col:7> col:7 used y$w_buff1_used '_Bool'
|-VarDecl 0x5651d1594a40 <line:692:1, col:7> col:7 used weak$$choice0 '_Bool'
|-VarDecl 0x5651d1594b00 <line:693:1, col:7> col:7 used weak$$choice2 '_Bool'
|-FunctionDecl 0x5651d1594c18 prev 0x5651d1593af0 <line:694:1, line:721:1> line:694:8 used P0 'void *(void *)'
| |-ParmVarDecl 0x5651d1594b80 <col:11, col:17> col:17 arg 'void *'
| `-CompoundStmt 0x5651d15963c8 <line:695:1, line:721:1>
|   |-CallExpr 0x5651d1594d28 <line:696:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x5651d1594d10 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5651d1594cc0 <col:3> 'void ()' Function 0x5651d153ae40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x5651d1594da0 <line:697:3, col:15> 'int' '='
|   | |-DeclRefExpr 0x5651d1594d48 <col:3> 'int' lvalue Var 0x5651d1594950 'y$w_buff1' 'int'
|   | `-ImplicitCastExpr 0x5651d1594d88 <col:15> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x5651d1594d68 <col:15> 'int' lvalue Var 0x5651d1594858 'y$w_buff0' 'int'
|   |-BinaryOperator 0x5651d1594e00 <line:698:3, col:15> 'int' '='
|   | |-DeclRefExpr 0x5651d1594dc0 <col:3> 'int' lvalue Var 0x5651d1594858 'y$w_buff0' 'int'
|   | `-IntegerLiteral 0x5651d1594de0 <col:15> 'int' 2
|   |-BinaryOperator 0x5651d1594e78 <line:699:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x5651d1594e20 <col:3> '_Bool' lvalue Var 0x5651d15949c8 'y$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x5651d1594e60 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x5651d1594e40 <col:20> '_Bool' lvalue Var 0x5651d15948d0 'y$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x5651d1594f10 <line:700:3, col:27> '_Bool' '='
|   | |-DeclRefExpr 0x5651d1594e98 <col:3> '_Bool' lvalue Var 0x5651d15948d0 'y$w_buff0_used' '_Bool'
|   | `-CStyleCastExpr 0x5651d1594ee8 <col:20, col:27> '_Bool' <IntegralToBoolean>
|   |   `-IntegerLiteral 0x5651d1594eb8 <col:27> 'int' 1
|   |-CallExpr 0x5651d1595098 <line:701:3, col:56> 'void'
|   | |-ImplicitCastExpr 0x5651d1595080 <col:3> 'void (*)(int)' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x5651d1594f30 <col:3> 'void (int)' Function 0x5651d153abc8 '__VERIFIER_assert' 'void (int)'
|   | `-UnaryOperator 0x5651d1595030 <col:21, col:55> 'int' prefix '!' cannot overflow
|   |   `-ParenExpr 0x5651d1595010 <col:22, col:55> 'int'
|   |     `-BinaryOperator 0x5651d1594ff0 <col:23, col:41> 'int' '&&'
|   |       |-ImplicitCastExpr 0x5651d1594fa8 <col:23> 'int' <IntegralCast>
|   |       | `-ImplicitCastExpr 0x5651d1594f90 <col:23> '_Bool' <LValueToRValue>
|   |       |   `-DeclRefExpr 0x5651d1594f50 <col:23> '_Bool' lvalue Var 0x5651d15949c8 'y$w_buff1_used' '_Bool'
|   |       `-ImplicitCastExpr 0x5651d1594fd8 <col:41> 'int' <IntegralCast>
|   |         `-ImplicitCastExpr 0x5651d1594fc0 <col:41> '_Bool' <LValueToRValue>
|   |           `-DeclRefExpr 0x5651d1594f70 <col:41> '_Bool' lvalue Var 0x5651d15948d0 'y$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x5651d1595118 <line:702:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x5651d15950c0 <col:3> '_Bool' lvalue Var 0x5651d15945f0 'y$r_buff1_thd0' '_Bool'
|   | `-ImplicitCastExpr 0x5651d1595100 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x5651d15950e0 <col:20> '_Bool' lvalue Var 0x5651d1594488 'y$r_buff0_thd0' '_Bool'
|   |-BinaryOperator 0x5651d1595190 <line:703:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x5651d1595138 <col:3> '_Bool' lvalue Var 0x5651d1594668 'y$r_buff1_thd1' '_Bool'
|   | `-ImplicitCastExpr 0x5651d1595178 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x5651d1595158 <col:20> '_Bool' lvalue Var 0x5651d1594500 'y$r_buff0_thd1' '_Bool'
|   |-BinaryOperator 0x5651d1595208 <line:704:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x5651d15951b0 <col:3> '_Bool' lvalue Var 0x5651d15946e0 'y$r_buff1_thd2' '_Bool'
|   | `-ImplicitCastExpr 0x5651d15951f0 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x5651d15951d0 <col:20> '_Bool' lvalue Var 0x5651d1594578 'y$r_buff0_thd2' '_Bool'
|   |-BinaryOperator 0x5651d15952a0 <line:705:3, col:27> '_Bool' '='
|   | |-DeclRefExpr 0x5651d1595228 <col:3> '_Bool' lvalue Var 0x5651d1594500 'y$r_buff0_thd1' '_Bool'
|   | `-CStyleCastExpr 0x5651d1595278 <col:20, col:27> '_Bool' <IntegralToBoolean>
|   |   `-IntegerLiteral 0x5651d1595248 <col:27> 'int' 1
|   |-CallExpr 0x5651d15952f8 <line:706:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x5651d15952e0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5651d15952c0 <col:3> 'void ()' Function 0x5651d153af00 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x5651d1595350 <line:707:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x5651d1595338 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5651d1595318 <col:3> 'void ()' Function 0x5651d153ae40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x5651d15953b0 <line:708:3, col:7> 'int' '='
|   | |-DeclRefExpr 0x5651d1595370 <col:3> 'int' lvalue Var 0x5651d15941d8 'x' 'int'
|   | `-IntegerLiteral 0x5651d1595390 <col:7> 'int' 1
|   |-CallExpr 0x5651d1595408 <line:709:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x5651d15953f0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5651d15953d0 <col:3> 'void ()' Function 0x5651d153af00 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x5651d1595460 <line:710:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x5651d1595448 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5651d1595428 <col:3> 'void ()' Function 0x5651d153ae40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x5651d1595748 <line:711:3, col:103> 'int' '='
|   | |-DeclRefExpr 0x5651d1595480 <col:3> 'int' lvalue Var 0x5651d15942f8 'y' 'int'
|   | `-ConditionalOperator 0x5651d1595718 <col:7, col:103> 'int'
|   |   |-BinaryOperator 0x5651d1595540 <col:7, col:25> 'int' '&&'
|   |   | |-ImplicitCastExpr 0x5651d15954f8 <col:7> 'int' <IntegralCast>
|   |   | | `-ImplicitCastExpr 0x5651d15954e0 <col:7> '_Bool' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x5651d15954a0 <col:7> '_Bool' lvalue Var 0x5651d15948d0 'y$w_buff0_used' '_Bool'
|   |   | `-ImplicitCastExpr 0x5651d1595528 <col:25> 'int' <IntegralCast>
|   |   |   `-ImplicitCastExpr 0x5651d1595510 <col:25> '_Bool' <LValueToRValue>
|   |   |     `-DeclRefExpr 0x5651d15954c0 <col:25> '_Bool' lvalue Var 0x5651d1594500 'y$r_buff0_thd1' '_Bool'
|   |   |-ImplicitCastExpr 0x5651d1595700 <col:42> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x5651d1595560 <col:42> 'int' lvalue Var 0x5651d1594858 'y$w_buff0' 'int'
|   |   `-ParenExpr 0x5651d15956e0 <col:54, col:103> 'int'
|   |     `-ConditionalOperator 0x5651d15956b0 <col:55, col:102> 'int'
|   |       |-BinaryOperator 0x5651d1595620 <col:55, col:73> 'int' '&&'
|   |       | |-ImplicitCastExpr 0x5651d15955d8 <col:55> 'int' <IntegralCast>
|   |       | | `-ImplicitCastExpr 0x5651d15955c0 <col:55> '_Bool' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x5651d1595580 <col:55> '_Bool' lvalue Var 0x5651d15949c8 'y$w_buff1_used' '_Bool'
|   |       | `-ImplicitCastExpr 0x5651d1595608 <col:73> 'int' <IntegralCast>
|   |       |   `-ImplicitCastExpr 0x5651d15955f0 <col:73> '_Bool' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x5651d15955a0 <col:73> '_Bool' lvalue Var 0x5651d1594668 'y$r_buff1_thd1' '_Bool'
|   |       |-ImplicitCastExpr 0x5651d1595680 <col:90> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x5651d1595640 <col:90> 'int' lvalue Var 0x5651d1594950 'y$w_buff1' 'int'
|   |       `-ImplicitCastExpr 0x5651d1595698 <col:102> 'int' <LValueToRValue>
|   |         `-DeclRefExpr 0x5651d1595660 <col:102> 'int' lvalue Var 0x5651d15942f8 'y' 'int'
|   |-BinaryOperator 0x5651d1595950 <line:712:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x5651d1595768 <col:3> '_Bool' lvalue Var 0x5651d15948d0 'y$w_buff0_used' '_Bool'
|   | `-ImplicitCastExpr 0x5651d1595938 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x5651d1595908 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x5651d1595828 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x5651d15957e0 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x5651d15957c8 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x5651d1595788 <col:20> '_Bool' lvalue Var 0x5651d15948d0 'y$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x5651d1595810 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x5651d15957f8 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x5651d15957a8 <col:38> '_Bool' lvalue Var 0x5651d1594500 'y$r_buff0_thd1' '_Bool'
|   |     |-ImplicitCastExpr 0x5651d15958c0 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x5651d1595878 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x5651d1595848 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x5651d15958f0 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x5651d15958d8 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x5651d15958a0 <col:66> '_Bool' lvalue Var 0x5651d15948d0 'y$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x5651d1595c58 <line:713:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x5651d1595970 <col:3> '_Bool' lvalue Var 0x5651d15949c8 'y$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x5651d1595c40 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x5651d1595c10 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x5651d1595b30 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x5651d1595a30 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x5651d15959e8 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x5651d15959d0 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x5651d1595990 <col:20> '_Bool' lvalue Var 0x5651d15948d0 'y$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x5651d1595a18 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x5651d1595a00 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x5651d15959b0 <col:38> '_Bool' lvalue Var 0x5651d1594500 'y$r_buff0_thd1' '_Bool'
|   |     | `-BinaryOperator 0x5651d1595b10 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x5651d1595aa8 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x5651d1595a90 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x5651d1595a50 <col:56> '_Bool' lvalue Var 0x5651d15949c8 'y$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x5651d1595ad8 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x5651d1595ac0 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x5651d1595a70 <col:74> '_Bool' lvalue Var 0x5651d1594668 'y$r_buff1_thd1' '_Bool'
|   |     |-ImplicitCastExpr 0x5651d1595bc8 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x5651d1595b80 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x5651d1595b50 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x5651d1595bf8 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x5651d1595be0 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x5651d1595ba8 <col:102> '_Bool' lvalue Var 0x5651d15949c8 'y$w_buff1_used' '_Bool'
|   |-BinaryOperator 0x5651d1595e60 <line:714:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x5651d1595c78 <col:3> '_Bool' lvalue Var 0x5651d1594500 'y$r_buff0_thd1' '_Bool'
|   | `-ImplicitCastExpr 0x5651d1595e48 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x5651d1595e18 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x5651d1595d38 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x5651d1595cf0 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x5651d1595cd8 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x5651d1595c98 <col:20> '_Bool' lvalue Var 0x5651d15948d0 'y$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x5651d1595d20 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x5651d1595d08 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x5651d1595cb8 <col:38> '_Bool' lvalue Var 0x5651d1594500 'y$r_buff0_thd1' '_Bool'
|   |     |-ImplicitCastExpr 0x5651d1595dd0 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x5651d1595d88 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x5651d1595d58 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x5651d1595e00 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x5651d1595de8 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x5651d1595db0 <col:66> '_Bool' lvalue Var 0x5651d1594500 'y$r_buff0_thd1' '_Bool'
|   |-BinaryOperator 0x5651d1596148 <line:715:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x5651d1595e80 <col:3> '_Bool' lvalue Var 0x5651d1594668 'y$r_buff1_thd1' '_Bool'
|   | `-ImplicitCastExpr 0x5651d1596130 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x5651d1596100 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x5651d1596020 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x5651d1595f40 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x5651d1595ef8 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x5651d1595ee0 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x5651d1595ea0 <col:20> '_Bool' lvalue Var 0x5651d15948d0 'y$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x5651d1595f28 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x5651d1595f10 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x5651d1595ec0 <col:38> '_Bool' lvalue Var 0x5651d1594500 'y$r_buff0_thd1' '_Bool'
|   |     | `-BinaryOperator 0x5651d1596000 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x5651d1595fb8 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x5651d1595fa0 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x5651d1595f60 <col:56> '_Bool' lvalue Var 0x5651d15949c8 'y$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x5651d1595fe8 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x5651d1595fd0 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x5651d1595f80 <col:74> '_Bool' lvalue Var 0x5651d1594668 'y$r_buff1_thd1' '_Bool'
|   |     |-ImplicitCastExpr 0x5651d15960b8 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x5651d1596070 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x5651d1596040 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x5651d15960e8 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x5651d15960d0 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x5651d1596098 <col:102> '_Bool' lvalue Var 0x5651d1594668 'y$r_buff1_thd1' '_Bool'
|   |-CallExpr 0x5651d15961a0 <line:716:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x5651d1596188 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5651d1596168 <col:3> 'void ()' Function 0x5651d153af00 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x5651d15961f8 <line:717:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x5651d15961e0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5651d15961c0 <col:3> 'void ()' Function 0x5651d153ae40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x5651d15962b0 <line:718:3, col:41> 'int' '='
|   | |-DeclRefExpr 0x5651d1596218 <col:3> 'int' lvalue Var 0x5651d1593fc8 '__unbuffered_cnt' 'int'
|   | `-BinaryOperator 0x5651d1596290 <col:22, col:41> 'int' '+'
|   |   |-ImplicitCastExpr 0x5651d1596278 <col:22> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x5651d1596238 <col:22> 'int' lvalue Var 0x5651d1593fc8 '__unbuffered_cnt' 'int'
|   |   `-IntegerLiteral 0x5651d1596258 <col:41> 'int' 1
|   |-CallExpr 0x5651d1596308 <line:719:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x5651d15962f0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5651d15962d0 <col:3> 'void ()' Function 0x5651d153af00 '__VERIFIER_atomic_end' 'void ()'
|   `-ReturnStmt 0x5651d15963b8 <line:720:3, col:36>
|     `-CallExpr 0x5651d1596398 <col:10, col:36> 'void *'
|       `-ImplicitCastExpr 0x5651d1596380 <col:10> 'void *(*)(void)' <FunctionToPointerDecay>
|         `-DeclRefExpr 0x5651d1596328 <col:10> 'void *(void)' Function 0x5651d153a958 '__VERIFIER_nondet_pointer' 'void *(void)'
|-FunctionDecl 0x5651d1596550 prev 0x5651d1593c48 <line:722:1, line:741:1> line:722:8 used P1 'void *(void *)'
| |-ParmVarDecl 0x5651d15964b8 <col:11, col:17> col:17 arg 'void *'
| `-CompoundStmt 0x5651d1597778 <line:723:1, line:741:1>
|   |-CallExpr 0x5651d1596630 <line:724:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x5651d1596618 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5651d15965f8 <col:3> 'void ()' Function 0x5651d153ae40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x5651d1596690 <line:725:3, col:7> 'int' '='
|   | |-DeclRefExpr 0x5651d1596650 <col:3> 'int' lvalue Var 0x5651d15941d8 'x' 'int'
|   | `-IntegerLiteral 0x5651d1596670 <col:7> 'int' 2
|   |-CallExpr 0x5651d15966e8 <line:726:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x5651d15966d0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5651d15966b0 <col:3> 'void ()' Function 0x5651d153af00 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x5651d1596740 <line:727:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x5651d1596728 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5651d1596708 <col:3> 'void ()' Function 0x5651d153ae40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x5651d15967a0 <line:728:3, col:7> 'int' '='
|   | |-DeclRefExpr 0x5651d1596760 <col:3> 'int' lvalue Var 0x5651d15942f8 'y' 'int'
|   | `-IntegerLiteral 0x5651d1596780 <col:7> 'int' 1
|   |-CallExpr 0x5651d15967f8 <line:729:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x5651d15967e0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5651d15967c0 <col:3> 'void ()' Function 0x5651d153af00 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x5651d1596850 <line:730:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x5651d1596838 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5651d1596818 <col:3> 'void ()' Function 0x5651d153ae40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x5651d1596b50 <line:731:3, col:103> 'int' '='
|   | |-DeclRefExpr 0x5651d1596870 <col:3> 'int' lvalue Var 0x5651d15942f8 'y' 'int'
|   | `-ConditionalOperator 0x5651d1596b20 <col:7, col:103> 'int'
|   |   |-BinaryOperator 0x5651d1596930 <col:7, col:25> 'int' '&&'
|   |   | |-ImplicitCastExpr 0x5651d15968e8 <col:7> 'int' <IntegralCast>
|   |   | | `-ImplicitCastExpr 0x5651d15968d0 <col:7> '_Bool' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x5651d1596890 <col:7> '_Bool' lvalue Var 0x5651d15948d0 'y$w_buff0_used' '_Bool'
|   |   | `-ImplicitCastExpr 0x5651d1596918 <col:25> 'int' <IntegralCast>
|   |   |   `-ImplicitCastExpr 0x5651d1596900 <col:25> '_Bool' <LValueToRValue>
|   |   |     `-DeclRefExpr 0x5651d15968b0 <col:25> '_Bool' lvalue Var 0x5651d1594578 'y$r_buff0_thd2' '_Bool'
|   |   |-ImplicitCastExpr 0x5651d1596af0 <col:42> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x5651d1596950 <col:42> 'int' lvalue Var 0x5651d1594858 'y$w_buff0' 'int'
|   |   `-ParenExpr 0x5651d1596ad0 <col:54, col:103> 'int'
|   |     `-ConditionalOperator 0x5651d1596aa0 <col:55, col:102> 'int'
|   |       |-BinaryOperator 0x5651d1596a10 <col:55, col:73> 'int' '&&'
|   |       | |-ImplicitCastExpr 0x5651d15969c8 <col:55> 'int' <IntegralCast>
|   |       | | `-ImplicitCastExpr 0x5651d15969b0 <col:55> '_Bool' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x5651d1596970 <col:55> '_Bool' lvalue Var 0x5651d15949c8 'y$w_buff1_used' '_Bool'
|   |       | `-ImplicitCastExpr 0x5651d15969f8 <col:73> 'int' <IntegralCast>
|   |       |   `-ImplicitCastExpr 0x5651d15969e0 <col:73> '_Bool' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x5651d1596990 <col:73> '_Bool' lvalue Var 0x5651d15946e0 'y$r_buff1_thd2' '_Bool'
|   |       |-ImplicitCastExpr 0x5651d1596a70 <col:90> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x5651d1596a30 <col:90> 'int' lvalue Var 0x5651d1594950 'y$w_buff1' 'int'
|   |       `-ImplicitCastExpr 0x5651d1596a88 <col:102> 'int' <LValueToRValue>
|   |         `-DeclRefExpr 0x5651d1596a50 <col:102> 'int' lvalue Var 0x5651d15942f8 'y' 'int'
|   |-BinaryOperator 0x5651d1596d58 <line:732:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x5651d1596b70 <col:3> '_Bool' lvalue Var 0x5651d15948d0 'y$w_buff0_used' '_Bool'
|   | `-ImplicitCastExpr 0x5651d1596d40 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x5651d1596d10 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x5651d1596c30 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x5651d1596be8 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x5651d1596bd0 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x5651d1596b90 <col:20> '_Bool' lvalue Var 0x5651d15948d0 'y$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x5651d1596c18 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x5651d1596c00 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x5651d1596bb0 <col:38> '_Bool' lvalue Var 0x5651d1594578 'y$r_buff0_thd2' '_Bool'
|   |     |-ImplicitCastExpr 0x5651d1596cc8 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x5651d1596c80 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x5651d1596c50 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x5651d1596cf8 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x5651d1596ce0 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x5651d1596ca8 <col:66> '_Bool' lvalue Var 0x5651d15948d0 'y$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x5651d1597040 <line:733:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x5651d1596d78 <col:3> '_Bool' lvalue Var 0x5651d15949c8 'y$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x5651d1597028 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x5651d1596ff8 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x5651d1596f18 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x5651d1596e38 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x5651d1596df0 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x5651d1596dd8 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x5651d1596d98 <col:20> '_Bool' lvalue Var 0x5651d15948d0 'y$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x5651d1596e20 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x5651d1596e08 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x5651d1596db8 <col:38> '_Bool' lvalue Var 0x5651d1594578 'y$r_buff0_thd2' '_Bool'
|   |     | `-BinaryOperator 0x5651d1596ef8 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x5651d1596eb0 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x5651d1596e98 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x5651d1596e58 <col:56> '_Bool' lvalue Var 0x5651d15949c8 'y$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x5651d1596ee0 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x5651d1596ec8 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x5651d1596e78 <col:74> '_Bool' lvalue Var 0x5651d15946e0 'y$r_buff1_thd2' '_Bool'
|   |     |-ImplicitCastExpr 0x5651d1596fb0 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x5651d1596f68 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x5651d1596f38 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x5651d1596fe0 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x5651d1596fc8 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x5651d1596f90 <col:102> '_Bool' lvalue Var 0x5651d15949c8 'y$w_buff1_used' '_Bool'
|   |-BinaryOperator 0x5651d1597248 <line:734:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x5651d1597060 <col:3> '_Bool' lvalue Var 0x5651d1594578 'y$r_buff0_thd2' '_Bool'
|   | `-ImplicitCastExpr 0x5651d1597230 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x5651d1597200 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x5651d1597120 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x5651d15970d8 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x5651d15970c0 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x5651d1597080 <col:20> '_Bool' lvalue Var 0x5651d15948d0 'y$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x5651d1597108 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x5651d15970f0 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x5651d15970a0 <col:38> '_Bool' lvalue Var 0x5651d1594578 'y$r_buff0_thd2' '_Bool'
|   |     |-ImplicitCastExpr 0x5651d15971b8 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x5651d1597170 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x5651d1597140 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x5651d15971e8 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x5651d15971d0 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x5651d1597198 <col:66> '_Bool' lvalue Var 0x5651d1594578 'y$r_buff0_thd2' '_Bool'
|   |-BinaryOperator 0x5651d1597530 <line:735:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x5651d1597268 <col:3> '_Bool' lvalue Var 0x5651d15946e0 'y$r_buff1_thd2' '_Bool'
|   | `-ImplicitCastExpr 0x5651d1597518 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x5651d15974e8 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x5651d1597408 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x5651d1597328 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x5651d15972e0 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x5651d15972c8 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x5651d1597288 <col:20> '_Bool' lvalue Var 0x5651d15948d0 'y$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x5651d1597310 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x5651d15972f8 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x5651d15972a8 <col:38> '_Bool' lvalue Var 0x5651d1594578 'y$r_buff0_thd2' '_Bool'
|   |     | `-BinaryOperator 0x5651d15973e8 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x5651d15973a0 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x5651d1597388 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x5651d1597348 <col:56> '_Bool' lvalue Var 0x5651d15949c8 'y$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x5651d15973d0 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x5651d15973b8 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x5651d1597368 <col:74> '_Bool' lvalue Var 0x5651d15946e0 'y$r_buff1_thd2' '_Bool'
|   |     |-ImplicitCastExpr 0x5651d15974a0 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x5651d1597458 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x5651d1597428 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x5651d15974d0 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x5651d15974b8 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x5651d1597480 <col:102> '_Bool' lvalue Var 0x5651d15946e0 'y$r_buff1_thd2' '_Bool'
|   |-CallExpr 0x5651d1597588 <line:736:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x5651d1597570 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5651d1597550 <col:3> 'void ()' Function 0x5651d153af00 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x5651d15975e0 <line:737:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x5651d15975c8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5651d15975a8 <col:3> 'void ()' Function 0x5651d153ae40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x5651d1597698 <line:738:3, col:41> 'int' '='
|   | |-DeclRefExpr 0x5651d1597600 <col:3> 'int' lvalue Var 0x5651d1593fc8 '__unbuffered_cnt' 'int'
|   | `-BinaryOperator 0x5651d1597678 <col:22, col:41> 'int' '+'
|   |   |-ImplicitCastExpr 0x5651d1597660 <col:22> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x5651d1597620 <col:22> 'int' lvalue Var 0x5651d1593fc8 '__unbuffered_cnt' 'int'
|   |   `-IntegerLiteral 0x5651d1597640 <col:41> 'int' 1
|   |-CallExpr 0x5651d15976f0 <line:739:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x5651d15976d8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5651d15976b8 <col:3> 'void ()' Function 0x5651d153af00 '__VERIFIER_atomic_end' 'void ()'
|   `-ReturnStmt 0x5651d1597768 <line:740:3, col:36>
|     `-CallExpr 0x5651d1597748 <col:10, col:36> 'void *'
|       `-ImplicitCastExpr 0x5651d1597730 <col:10> 'void *(*)(void)' <FunctionToPointerDecay>
|         `-DeclRefExpr 0x5651d1597710 <col:10> 'void *(void)' Function 0x5651d153a958 '__VERIFIER_nondet_pointer' 'void *(void)'
|-FunctionDecl 0x5651d1597830 prev 0x5651d1593d10 <line:742:1, line:744:1> line:742:6 fence 'void ()'
| `-CompoundStmt 0x5651d15978d0 <line:743:1, line:744:1>
|-FunctionDecl 0x5651d1597900 prev 0x5651d1593dd0 <line:745:1, line:747:1> line:745:6 isync 'void ()'
| `-CompoundStmt 0x5651d15979a0 <line:746:1, line:747:1>
|-FunctionDecl 0x5651d15979d0 prev 0x5651d1593e90 <line:748:1, line:750:1> line:748:6 lwfence 'void ()'
| `-CompoundStmt 0x5651d1597a70 <line:749:1, line:750:1>
`-FunctionDecl 0x5651d1597b30 <line:751:1, line:786:1> line:751:5 main 'int ()'
  `-CompoundStmt 0x5651d159be10 <line:752:1, line:786:1>
    |-DeclStmt 0x5651d1597c48 <line:753:3, col:18>
    | `-VarDecl 0x5651d1597be0 <col:3, col:13> col:13 used t2479 'pthread_t':'unsigned long'
    |-CallExpr 0x5651d1597e58 <line:754:3, col:54> 'int'
    | |-ImplicitCastExpr 0x5651d1597e40 <col:3> 'int (*)(pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x5651d1597c60 <col:3> 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' Function 0x5651d157b488 'pthread_create' 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)'
    | |-UnaryOperator 0x5651d1597ca0 <col:18, col:19> 'pthread_t *' prefix '&' cannot overflow
    | | `-DeclRefExpr 0x5651d1597c80 <col:19> 'pthread_t':'unsigned long' lvalue Var 0x5651d1597be0 't2479' 'pthread_t':'unsigned long'
    | |-ImplicitCastExpr 0x5651d1597e98 <col:26, col:36> 'const pthread_attr_t *' <NullToPointer>
    | | `-ParenExpr 0x5651d1597d18 <col:26, col:36> 'void *'
    | |   `-CStyleCastExpr 0x5651d1597cf0 <col:27, col:35> 'void *' <NullToPointer>
    | |     `-IntegerLiteral 0x5651d1597cb8 <col:35> 'int' 0
    | |-ImplicitCastExpr 0x5651d1597eb0 <col:39> 'void *(*)(void *)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x5651d1597d38 <col:39> 'void *(void *)' Function 0x5651d1594c18 'P0' 'void *(void *)'
    | `-ParenExpr 0x5651d1597db8 <col:43, col:53> 'void *'
    |   `-CStyleCastExpr 0x5651d1597d90 <col:44, col:52> 'void *' <NullToPointer>
    |     `-IntegerLiteral 0x5651d1597d58 <col:52> 'int' 0
    |-DeclStmt 0x5651d1597f40 <line:755:3, col:18>
    | `-VarDecl 0x5651d1597ed8 <col:3, col:13> col:13 used t2480 'pthread_t':'unsigned long'
    |-CallExpr 0x5651d15980e8 <line:756:3, col:54> 'int'
    | |-ImplicitCastExpr 0x5651d15980d0 <col:3> 'int (*)(pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x5651d1597f58 <col:3> 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' Function 0x5651d157b488 'pthread_create' 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)'
    | |-UnaryOperator 0x5651d1597f98 <col:18, col:19> 'pthread_t *' prefix '&' cannot overflow
    | | `-DeclRefExpr 0x5651d1597f78 <col:19> 'pthread_t':'unsigned long' lvalue Var 0x5651d1597ed8 't2480' 'pthread_t':'unsigned long'
    | |-ImplicitCastExpr 0x5651d1598128 <col:26, col:36> 'const pthread_attr_t *' <NullToPointer>
    | | `-ParenExpr 0x5651d1598010 <col:26, col:36> 'void *'
    | |   `-CStyleCastExpr 0x5651d1597fe8 <col:27, col:35> 'void *' <NullToPointer>
    | |     `-IntegerLiteral 0x5651d1597fb0 <col:35> 'int' 0
    | |-ImplicitCastExpr 0x5651d1598140 <col:39> 'void *(*)(void *)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x5651d1598030 <col:39> 'void *(void *)' Function 0x5651d1596550 'P1' 'void *(void *)'
    | `-ParenExpr 0x5651d15980b0 <col:43, col:53> 'void *'
    |   `-CStyleCastExpr 0x5651d1598088 <col:44, col:52> 'void *' <NullToPointer>
    |     `-IntegerLiteral 0x5651d1598050 <col:52> 'int' 0
    |-CallExpr 0x5651d1598190 <line:757:3, col:27> 'void'
    | `-ImplicitCastExpr 0x5651d1598178 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x5651d1598158 <col:3> 'void ()' Function 0x5651d153ae40 '__VERIFIER_atomic_begin' 'void ()'
    |-BinaryOperator 0x5651d1598260 <line:758:3, col:41> '_Bool' '='
    | |-DeclRefExpr 0x5651d15981b0 <col:3> '_Bool' lvalue Var 0x5651d1594060 'main$tmp_guard0' '_Bool'
    | `-ImplicitCastExpr 0x5651d1598248 <col:21, col:41> '_Bool' <IntegralToBoolean>
    |   `-BinaryOperator 0x5651d1598228 <col:21, col:41> 'int' '=='
    |     |-ImplicitCastExpr 0x5651d1598210 <col:21> 'int' <LValueToRValue>
    |     | `-DeclRefExpr 0x5651d15981d0 <col:21> 'int' lvalue Var 0x5651d1593fc8 '__unbuffered_cnt' 'int'
    |     `-IntegerLiteral 0x5651d15981f0 <col:41> 'int' 2
    |-CallExpr 0x5651d15982b8 <line:759:3, col:25> 'void'
    | `-ImplicitCastExpr 0x5651d15982a0 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x5651d1598280 <col:3> 'void ()' Function 0x5651d153af00 '__VERIFIER_atomic_end' 'void ()'
    |-CallExpr 0x5651d1598330 <line:760:3, col:36> 'void'
    | |-ImplicitCastExpr 0x5651d1598318 <col:3> 'void (*)(int)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x5651d15982d8 <col:3> 'void (int)' Function 0x5651d153a790 '__VERIFIER_assume' 'void (int)'
    | `-ImplicitCastExpr 0x5651d1598370 <col:21> 'int' <IntegralCast>
    |   `-ImplicitCastExpr 0x5651d1598358 <col:21> '_Bool' <LValueToRValue>
    |     `-DeclRefExpr 0x5651d15982f8 <col:21> '_Bool' lvalue Var 0x5651d1594060 'main$tmp_guard0' '_Bool'
    |-CallExpr 0x5651d15983c0 <line:761:3, col:27> 'void'
    | `-ImplicitCastExpr 0x5651d15983a8 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x5651d1598388 <col:3> 'void ()' Function 0x5651d153ae40 '__VERIFIER_atomic_begin' 'void ()'
    |-BinaryOperator 0x5651d15986a8 <line:762:3, col:103> 'int' '='
    | |-DeclRefExpr 0x5651d15983e0 <col:3> 'int' lvalue Var 0x5651d15942f8 'y' 'int'
    | `-ConditionalOperator 0x5651d1598678 <col:7, col:103> 'int'
    |   |-BinaryOperator 0x5651d15984a0 <col:7, col:25> 'int' '&&'
    |   | |-ImplicitCastExpr 0x5651d1598458 <col:7> 'int' <IntegralCast>
    |   | | `-ImplicitCastExpr 0x5651d1598440 <col:7> '_Bool' <LValueToRValue>
    |   | |   `-DeclRefExpr 0x5651d1598400 <col:7> '_Bool' lvalue Var 0x5651d15948d0 'y$w_buff0_used' '_Bool'
    |   | `-ImplicitCastExpr 0x5651d1598488 <col:25> 'int' <IntegralCast>
    |   |   `-ImplicitCastExpr 0x5651d1598470 <col:25> '_Bool' <LValueToRValue>
    |   |     `-DeclRefExpr 0x5651d1598420 <col:25> '_Bool' lvalue Var 0x5651d1594488 'y$r_buff0_thd0' '_Bool'
    |   |-ImplicitCastExpr 0x5651d1598660 <col:42> 'int' <LValueToRValue>
    |   | `-DeclRefExpr 0x5651d15984c0 <col:42> 'int' lvalue Var 0x5651d1594858 'y$w_buff0' 'int'
    |   `-ParenExpr 0x5651d1598640 <col:54, col:103> 'int'
    |     `-ConditionalOperator 0x5651d1598610 <col:55, col:102> 'int'
    |       |-BinaryOperator 0x5651d1598580 <col:55, col:73> 'int' '&&'
    |       | |-ImplicitCastExpr 0x5651d1598538 <col:55> 'int' <IntegralCast>
    |       | | `-ImplicitCastExpr 0x5651d1598520 <col:55> '_Bool' <LValueToRValue>
    |       | |   `-DeclRefExpr 0x5651d15984e0 <col:55> '_Bool' lvalue Var 0x5651d15949c8 'y$w_buff1_used' '_Bool'
    |       | `-ImplicitCastExpr 0x5651d1598568 <col:73> 'int' <IntegralCast>
    |       |   `-ImplicitCastExpr 0x5651d1598550 <col:73> '_Bool' <LValueToRValue>
    |       |     `-DeclRefExpr 0x5651d1598500 <col:73> '_Bool' lvalue Var 0x5651d15945f0 'y$r_buff1_thd0' '_Bool'
    |       |-ImplicitCastExpr 0x5651d15985e0 <col:90> 'int' <LValueToRValue>
    |       | `-DeclRefExpr 0x5651d15985a0 <col:90> 'int' lvalue Var 0x5651d1594950 'y$w_buff1' 'int'
    |       `-ImplicitCastExpr 0x5651d15985f8 <col:102> 'int' <LValueToRValue>
    |         `-DeclRefExpr 0x5651d15985c0 <col:102> 'int' lvalue Var 0x5651d15942f8 'y' 'int'
    |-BinaryOperator 0x5651d15988b0 <line:763:3, col:66> '_Bool' '='
    | |-DeclRefExpr 0x5651d15986c8 <col:3> '_Bool' lvalue Var 0x5651d15948d0 'y$w_buff0_used' '_Bool'
    | `-ImplicitCastExpr 0x5651d1598898 <col:20, col:66> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x5651d1598868 <col:20, col:66> 'int'
    |     |-BinaryOperator 0x5651d1598788 <col:20, col:38> 'int' '&&'
    |     | |-ImplicitCastExpr 0x5651d1598740 <col:20> 'int' <IntegralCast>
    |     | | `-ImplicitCastExpr 0x5651d1598728 <col:20> '_Bool' <LValueToRValue>
    |     | |   `-DeclRefExpr 0x5651d15986e8 <col:20> '_Bool' lvalue Var 0x5651d15948d0 'y$w_buff0_used' '_Bool'
    |     | `-ImplicitCastExpr 0x5651d1598770 <col:38> 'int' <IntegralCast>
    |     |   `-ImplicitCastExpr 0x5651d1598758 <col:38> '_Bool' <LValueToRValue>
    |     |     `-DeclRefExpr 0x5651d1598708 <col:38> '_Bool' lvalue Var 0x5651d1594488 'y$r_buff0_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x5651d1598820 <col:55, col:62> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x5651d15987d8 <col:55, col:62> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x5651d15987a8 <col:62> 'int' 0
    |     `-ImplicitCastExpr 0x5651d1598850 <col:66> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x5651d1598838 <col:66> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x5651d1598800 <col:66> '_Bool' lvalue Var 0x5651d15948d0 'y$w_buff0_used' '_Bool'
    |-BinaryOperator 0x5651d1598bb8 <line:764:3, col:102> '_Bool' '='
    | |-DeclRefExpr 0x5651d15988d0 <col:3> '_Bool' lvalue Var 0x5651d15949c8 'y$w_buff1_used' '_Bool'
    | `-ImplicitCastExpr 0x5651d1598ba0 <col:20, col:102> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x5651d1598b70 <col:20, col:102> 'int'
    |     |-BinaryOperator 0x5651d1598a70 <col:20, col:74> 'int' '||'
    |     | |-BinaryOperator 0x5651d1598990 <col:20, col:38> 'int' '&&'
    |     | | |-ImplicitCastExpr 0x5651d1598948 <col:20> 'int' <IntegralCast>
    |     | | | `-ImplicitCastExpr 0x5651d1598930 <col:20> '_Bool' <LValueToRValue>
    |     | | |   `-DeclRefExpr 0x5651d15988f0 <col:20> '_Bool' lvalue Var 0x5651d15948d0 'y$w_buff0_used' '_Bool'
    |     | | `-ImplicitCastExpr 0x5651d1598978 <col:38> 'int' <IntegralCast>
    |     | |   `-ImplicitCastExpr 0x5651d1598960 <col:38> '_Bool' <LValueToRValue>
    |     | |     `-DeclRefExpr 0x5651d1598910 <col:38> '_Bool' lvalue Var 0x5651d1594488 'y$r_buff0_thd0' '_Bool'
    |     | `-BinaryOperator 0x5651d1598a50 <col:56, col:74> 'int' '&&'
    |     |   |-ImplicitCastExpr 0x5651d1598a08 <col:56> 'int' <IntegralCast>
    |     |   | `-ImplicitCastExpr 0x5651d15989f0 <col:56> '_Bool' <LValueToRValue>
    |     |   |   `-DeclRefExpr 0x5651d15989b0 <col:56> '_Bool' lvalue Var 0x5651d15949c8 'y$w_buff1_used' '_Bool'
    |     |   `-ImplicitCastExpr 0x5651d1598a38 <col:74> 'int' <IntegralCast>
    |     |     `-ImplicitCastExpr 0x5651d1598a20 <col:74> '_Bool' <LValueToRValue>
    |     |       `-DeclRefExpr 0x5651d15989d0 <col:74> '_Bool' lvalue Var 0x5651d15945f0 'y$r_buff1_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x5651d1598b08 <col:91, col:98> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x5651d1598ac0 <col:91, col:98> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x5651d1598a90 <col:98> 'int' 0
    |     `-ImplicitCastExpr 0x5651d1598b58 <col:102> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x5651d1598b40 <col:102> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x5651d1598ae8 <col:102> '_Bool' lvalue Var 0x5651d15949c8 'y$w_buff1_used' '_Bool'
    |-BinaryOperator 0x5651d1598dc0 <line:765:3, col:66> '_Bool' '='
    | |-DeclRefExpr 0x5651d1598bd8 <col:3> '_Bool' lvalue Var 0x5651d1594488 'y$r_buff0_thd0' '_Bool'
    | `-ImplicitCastExpr 0x5651d1598da8 <col:20, col:66> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x5651d1598d78 <col:20, col:66> 'int'
    |     |-BinaryOperator 0x5651d1598c98 <col:20, col:38> 'int' '&&'
    |     | |-ImplicitCastExpr 0x5651d1598c50 <col:20> 'int' <IntegralCast>
    |     | | `-ImplicitCastExpr 0x5651d1598c38 <col:20> '_Bool' <LValueToRValue>
    |     | |   `-DeclRefExpr 0x5651d1598bf8 <col:20> '_Bool' lvalue Var 0x5651d15948d0 'y$w_buff0_used' '_Bool'
    |     | `-ImplicitCastExpr 0x5651d1598c80 <col:38> 'int' <IntegralCast>
    |     |   `-ImplicitCastExpr 0x5651d1598c68 <col:38> '_Bool' <LValueToRValue>
    |     |     `-DeclRefExpr 0x5651d1598c18 <col:38> '_Bool' lvalue Var 0x5651d1594488 'y$r_buff0_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x5651d1598d30 <col:55, col:62> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x5651d1598ce8 <col:55, col:62> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x5651d1598cb8 <col:62> 'int' 0
    |     `-ImplicitCastExpr 0x5651d1598d60 <col:66> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x5651d1598d48 <col:66> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x5651d1598d10 <col:66> '_Bool' lvalue Var 0x5651d1594488 'y$r_buff0_thd0' '_Bool'
    |-BinaryOperator 0x5651d15990a8 <line:766:3, col:102> '_Bool' '='
    | |-DeclRefExpr 0x5651d1598de0 <col:3> '_Bool' lvalue Var 0x5651d15945f0 'y$r_buff1_thd0' '_Bool'
    | `-ImplicitCastExpr 0x5651d1599090 <col:20, col:102> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x5651d1599060 <col:20, col:102> 'int'
    |     |-BinaryOperator 0x5651d1598f80 <col:20, col:74> 'int' '||'
    |     | |-BinaryOperator 0x5651d1598ea0 <col:20, col:38> 'int' '&&'
    |     | | |-ImplicitCastExpr 0x5651d1598e58 <col:20> 'int' <IntegralCast>
    |     | | | `-ImplicitCastExpr 0x5651d1598e40 <col:20> '_Bool' <LValueToRValue>
    |     | | |   `-DeclRefExpr 0x5651d1598e00 <col:20> '_Bool' lvalue Var 0x5651d15948d0 'y$w_buff0_used' '_Bool'
    |     | | `-ImplicitCastExpr 0x5651d1598e88 <col:38> 'int' <IntegralCast>
    |     | |   `-ImplicitCastExpr 0x5651d1598e70 <col:38> '_Bool' <LValueToRValue>
    |     | |     `-DeclRefExpr 0x5651d1598e20 <col:38> '_Bool' lvalue Var 0x5651d1594488 'y$r_buff0_thd0' '_Bool'
    |     | `-BinaryOperator 0x5651d1598f60 <col:56, col:74> 'int' '&&'
    |     |   |-ImplicitCastExpr 0x5651d1598f18 <col:56> 'int' <IntegralCast>
    |     |   | `-ImplicitCastExpr 0x5651d1598f00 <col:56> '_Bool' <LValueToRValue>
    |     |   |   `-DeclRefExpr 0x5651d1598ec0 <col:56> '_Bool' lvalue Var 0x5651d15949c8 'y$w_buff1_used' '_Bool'
    |     |   `-ImplicitCastExpr 0x5651d1598f48 <col:74> 'int' <IntegralCast>
    |     |     `-ImplicitCastExpr 0x5651d1598f30 <col:74> '_Bool' <LValueToRValue>
    |     |       `-DeclRefExpr 0x5651d1598ee0 <col:74> '_Bool' lvalue Var 0x5651d15945f0 'y$r_buff1_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x5651d1599018 <col:91, col:98> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x5651d1598fd0 <col:91, col:98> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x5651d1598fa0 <col:98> 'int' 0
    |     `-ImplicitCastExpr 0x5651d1599048 <col:102> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x5651d1599030 <col:102> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x5651d1598ff8 <col:102> '_Bool' lvalue Var 0x5651d15945f0 'y$r_buff1_thd0' '_Bool'
    |-CallExpr 0x5651d1599100 <line:767:3, col:25> 'void'
    | `-ImplicitCastExpr 0x5651d15990e8 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x5651d15990c8 <col:3> 'void ()' Function 0x5651d153af00 '__VERIFIER_atomic_end' 'void ()'
    |-CallExpr 0x5651d1599158 <line:768:3, col:27> 'void'
    | `-ImplicitCastExpr 0x5651d1599140 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x5651d1599120 <col:3> 'void ()' Function 0x5651d153ae40 '__VERIFIER_atomic_begin' 'void ()'
    |-BinaryOperator 0x5651d1599208 <line:769:3, col:45> '_Bool' '='
    | |-DeclRefExpr 0x5651d1599178 <col:3> '_Bool' lvalue Var 0x5651d1594a40 'weak$$choice0' '_Bool'
    | `-ImplicitCastExpr 0x5651d15991f0 <col:19, col:45> '_Bool' <PointerToBoolean>
    |   `-CallExpr 0x5651d15991d0 <col:19, col:45> 'void *'
    |     `-ImplicitCastExpr 0x5651d15991b8 <col:19> 'void *(*)(void)' <FunctionToPointerDecay>
    |       `-DeclRefExpr 0x5651d1599198 <col:19> 'void *(void)' Function 0x5651d153a958 '__VERIFIER_nondet_pointer' 'void *(void)'
    |-BinaryOperator 0x5651d15992b8 <line:770:3, col:45> '_Bool' '='
    | |-DeclRefExpr 0x5651d1599228 <col:3> '_Bool' lvalue Var 0x5651d1594b00 'weak$$choice2' '_Bool'
    | `-ImplicitCastExpr 0x5651d15992a0 <col:19, col:45> '_Bool' <PointerToBoolean>
    |   `-CallExpr 0x5651d1599280 <col:19, col:45> 'void *'
    |     `-ImplicitCastExpr 0x5651d1599268 <col:19> 'void *(*)(void)' <FunctionToPointerDecay>
    |       `-DeclRefExpr 0x5651d1599248 <col:19> 'void *(void)' Function 0x5651d153a958 '__VERIFIER_nondet_pointer' 'void *(void)'
    |-BinaryOperator 0x5651d1599330 <line:771:3, col:21> '_Bool' '='
    | |-DeclRefExpr 0x5651d15992d8 <col:3> '_Bool' lvalue Var 0x5651d1594390 'y$flush_delayed' '_Bool'
    | `-ImplicitCastExpr 0x5651d1599318 <col:21> '_Bool' <LValueToRValue>
    |   `-DeclRefExpr 0x5651d15992f8 <col:21> '_Bool' lvalue Var 0x5651d1594b00 'weak$$choice2' '_Bool'
    |-BinaryOperator 0x5651d15993a8 <line:772:3, col:15> 'int' '='
    | |-DeclRefExpr 0x5651d1599350 <col:3> 'int' lvalue Var 0x5651d1594410 'y$mem_tmp' 'int'
    | `-ImplicitCastExpr 0x5651d1599390 <col:15> 'int' <LValueToRValue>
    |   `-DeclRefExpr 0x5651d1599370 <col:15> 'int' lvalue Var 0x5651d15942f8 'y' 'int'
    |-BinaryOperator 0x5651d15997e0 <line:773:3, col:162> 'int' '='
    | |-DeclRefExpr 0x5651d15993c8 <col:3> 'int' lvalue Var 0x5651d15942f8 'y' 'int'
    | `-ConditionalOperator 0x5651d15997b0 <col:7, col:162> 'int'
    |   |-BinaryOperator 0x5651d15995d8 <col:7, col:84> 'int' '||'
    |   | |-BinaryOperator 0x5651d15994f8 <col:7, col:46> 'int' '||'
    |   | | |-UnaryOperator 0x5651d1599420 <col:7, col:8> 'int' prefix '!' cannot overflow
    |   | | | `-ImplicitCastExpr 0x5651d1599408 <col:8> '_Bool' <LValueToRValue>
    |   | | |   `-DeclRefExpr 0x5651d15993e8 <col:8> '_Bool' lvalue Var 0x5651d15948d0 'y$w_buff0_used' '_Bool'
    |   | | `-BinaryOperator 0x5651d15994d8 <col:26, col:46> 'int' '&&'
    |   | |   |-UnaryOperator 0x5651d1599470 <col:26, col:27> 'int' prefix '!' cannot overflow
    |   | |   | `-ImplicitCastExpr 0x5651d1599458 <col:27> '_Bool' <LValueToRValue>
    |   | |   |   `-DeclRefExpr 0x5651d1599438 <col:27> '_Bool' lvalue Var 0x5651d1594488 'y$r_buff0_thd0' '_Bool'
    |   | |   `-UnaryOperator 0x5651d15994c0 <col:45, col:46> 'int' prefix '!' cannot overflow
    |   | |     `-ImplicitCastExpr 0x5651d15994a8 <col:46> '_Bool' <LValueToRValue>
    |   | |       `-DeclRefExpr 0x5651d1599488 <col:46> '_Bool' lvalue Var 0x5651d15949c8 'y$w_buff1_used' '_Bool'
    |   | `-BinaryOperator 0x5651d15995b8 <col:64, col:84> 'int' '&&'
    |   |   |-UnaryOperator 0x5651d1599550 <col:64, col:65> 'int' prefix '!' cannot overflow
    |   |   | `-ImplicitCastExpr 0x5651d1599538 <col:65> '_Bool' <LValueToRValue>
    |   |   |   `-DeclRefExpr 0x5651d1599518 <col:65> '_Bool' lvalue Var 0x5651d1594488 'y$r_buff0_thd0' '_Bool'
    |   |   `-UnaryOperator 0x5651d15995a0 <col:83, col:84> 'int' prefix '!' cannot overflow
    |   |     `-ImplicitCastExpr 0x5651d1599588 <col:84> '_Bool' <LValueToRValue>
    |   |       `-DeclRefExpr 0x5651d1599568 <col:84> '_Bool' lvalue Var 0x5651d15945f0 'y$r_buff1_thd0' '_Bool'
    |   |-ImplicitCastExpr 0x5651d1599798 <col:101> 'int' <LValueToRValue>
    |   | `-DeclRefExpr 0x5651d15995f8 <col:101> 'int' lvalue Var 0x5651d15942f8 'y' 'int'
    |   `-ParenExpr 0x5651d1599778 <col:105, col:162> 'int'
    |     `-ConditionalOperator 0x5651d1599748 <col:106, col:153> 'int'
    |       |-BinaryOperator 0x5651d15996b8 <col:106, col:124> 'int' '&&'
    |       | |-ImplicitCastExpr 0x5651d1599670 <col:106> 'int' <IntegralCast>
    |       | | `-ImplicitCastExpr 0x5651d1599658 <col:106> '_Bool' <LValueToRValue>
    |       | |   `-DeclRefExpr 0x5651d1599618 <col:106> '_Bool' lvalue Var 0x5651d15948d0 'y$w_buff0_used' '_Bool'
    |       | `-ImplicitCastExpr 0x5651d15996a0 <col:124> 'int' <IntegralCast>
    |       |   `-ImplicitCastExpr 0x5651d1599688 <col:124> '_Bool' <LValueToRValue>
    |       |     `-DeclRefExpr 0x5651d1599638 <col:124> '_Bool' lvalue Var 0x5651d1594488 'y$r_buff0_thd0' '_Bool'
    |       |-ImplicitCastExpr 0x5651d1599718 <col:141> 'int' <LValueToRValue>
    |       | `-DeclRefExpr 0x5651d15996d8 <col:141> 'int' lvalue Var 0x5651d1594858 'y$w_buff0' 'int'
    |       `-ImplicitCastExpr 0x5651d1599730 <col:153> 'int' <LValueToRValue>
    |         `-DeclRefExpr 0x5651d15996f8 <col:153> 'int' lvalue Var 0x5651d1594950 'y$w_buff1' 'int'
    |-BinaryOperator 0x5651d1599d10 <line:774:3, col:208> 'int' '='
    | |-DeclRefExpr 0x5651d1599800 <col:3> 'int' lvalue Var 0x5651d1594858 'y$w_buff0' 'int'
    | `-ConditionalOperator 0x5651d1599ce0 <col:15, col:208> 'int'
    |   |-ImplicitCastExpr 0x5651d1599cb0 <col:15> 'int' <IntegralCast>
    |   | `-ImplicitCastExpr 0x5651d1599c98 <col:15> '_Bool' <LValueToRValue>
    |   |   `-DeclRefExpr 0x5651d1599820 <col:15> '_Bool' lvalue Var 0x5651d1594b00 'weak$$choice2' '_Bool'
    |   |-ImplicitCastExpr 0x5651d1599cc8 <col:31> 'int' <LValueToRValue>
    |   | `-DeclRefExpr 0x5651d1599840 <col:31> 'int' lvalue Var 0x5651d1594858 'y$w_buff0' 'int'
    |   `-ParenExpr 0x5651d1599c78 <col:43, col:208> 'int'
    |     `-ConditionalOperator 0x5651d1599c48 <col:44, col:207> 'int'
    |       |-BinaryOperator 0x5651d1599a50 <col:44, col:121> 'int' '||'
    |       | |-BinaryOperator 0x5651d1599970 <col:44, col:83> 'int' '||'
    |       | | |-UnaryOperator 0x5651d1599898 <col:44, col:45> 'int' prefix '!' cannot overflow
    |       | | | `-ImplicitCastExpr 0x5651d1599880 <col:45> '_Bool' <LValueToRValue>
    |       | | |   `-DeclRefExpr 0x5651d1599860 <col:45> '_Bool' lvalue Var 0x5651d15948d0 'y$w_buff0_used' '_Bool'
    |       | | `-BinaryOperator 0x5651d1599950 <col:63, col:83> 'int' '&&'
    |       | |   |-UnaryOperator 0x5651d15998e8 <col:63, col:64> 'int' prefix '!' cannot overflow
    |       | |   | `-ImplicitCastExpr 0x5651d15998d0 <col:64> '_Bool' <LValueToRValue>
    |       | |   |   `-DeclRefExpr 0x5651d15998b0 <col:64> '_Bool' lvalue Var 0x5651d1594488 'y$r_buff0_thd0' '_Bool'
    |       | |   `-UnaryOperator 0x5651d1599938 <col:82, col:83> 'int' prefix '!' cannot overflow
    |       | |     `-ImplicitCastExpr 0x5651d1599920 <col:83> '_Bool' <LValueToRValue>
    |       | |       `-DeclRefExpr 0x5651d1599900 <col:83> '_Bool' lvalue Var 0x5651d15949c8 'y$w_buff1_used' '_Bool'
    |       | `-BinaryOperator 0x5651d1599a30 <col:101, col:121> 'int' '&&'
    |       |   |-UnaryOperator 0x5651d15999c8 <col:101, col:102> 'int' prefix '!' cannot overflow
    |       |   | `-ImplicitCastExpr 0x5651d15999b0 <col:102> '_Bool' <LValueToRValue>
    |       |   |   `-DeclRefExpr 0x5651d1599990 <col:102> '_Bool' lvalue Var 0x5651d1594488 'y$r_buff0_thd0' '_Bool'
    |       |   `-UnaryOperator 0x5651d1599a18 <col:120, col:121> 'int' prefix '!' cannot overflow
    |       |     `-ImplicitCastExpr 0x5651d1599a00 <col:121> '_Bool' <LValueToRValue>
    |       |       `-DeclRefExpr 0x5651d15999e0 <col:121> '_Bool' lvalue Var 0x5651d15945f0 'y$r_buff1_thd0' '_Bool'
    |       |-ImplicitCastExpr 0x5651d1599c30 <col:138> 'int' <LValueToRValue>
    |       | `-DeclRefExpr 0x5651d1599a70 <col:138> 'int' lvalue Var 0x5651d1594858 'y$w_buff0' 'int'
    |       `-ParenExpr 0x5651d1599c10 <col:150, col:207> 'int'
    |         `-ConditionalOperator 0x5651d1599be0 <col:151, col:198> 'int'
    |           |-BinaryOperator 0x5651d1599b50 <col:151, col:169> 'int' '&&'
    |           | |-ImplicitCastExpr 0x5651d1599ae8 <col:151> 'int' <IntegralCast>
    |           | | `-ImplicitCastExpr 0x5651d1599ad0 <col:151> '_Bool' <LValueToRValue>
    |           | |   `-DeclRefExpr 0x5651d1599a90 <col:151> '_Bool' lvalue Var 0x5651d15948d0 'y$w_buff0_used' '_Bool'
    |           | `-ImplicitCastExpr 0x5651d1599b18 <col:169> 'int' <IntegralCast>
    |           |   `-ImplicitCastExpr 0x5651d1599b00 <col:169> '_Bool' <LValueToRValue>
    |           |     `-DeclRefExpr 0x5651d1599ab0 <col:169> '_Bool' lvalue Var 0x5651d1594488 'y$r_buff0_thd0' '_Bool'
    |           |-ImplicitCastExpr 0x5651d1599bb0 <col:186> 'int' <LValueToRValue>
    |           | `-DeclRefExpr 0x5651d1599b70 <col:186> 'int' lvalue Var 0x5651d1594858 'y$w_buff0' 'int'
    |           `-ImplicitCastExpr 0x5651d1599bc8 <col:198> 'int' <LValueToRValue>
    |             `-DeclRefExpr 0x5651d1599b90 <col:198> 'int' lvalue Var 0x5651d1594858 'y$w_buff0' 'int'
    |-BinaryOperator 0x5651d159a220 <line:775:3, col:208> 'int' '='
    | |-DeclRefExpr 0x5651d1599d30 <col:3> 'int' lvalue Var 0x5651d1594950 'y$w_buff1' 'int'
    | `-ConditionalOperator 0x5651d159a1f0 <col:15, col:208> 'int'
    |   |-ImplicitCastExpr 0x5651d159a1c0 <col:15> 'int' <IntegralCast>
    |   | `-ImplicitCastExpr 0x5651d159a1a8 <col:15> '_Bool' <LValueToRValue>
    |   |   `-DeclRefExpr 0x5651d1599d50 <col:15> '_Bool' lvalue Var 0x5651d1594b00 'weak$$choice2' '_Bool'
    |   |-ImplicitCastExpr 0x5651d159a1d8 <col:31> 'int' <LValueToRValue>
    |   | `-DeclRefExpr 0x5651d1599d70 <col:31> 'int' lvalue Var 0x5651d1594950 'y$w_buff1' 'int'
    |   `-ParenExpr 0x5651d159a188 <col:43, col:208> 'int'
    |     `-ConditionalOperator 0x5651d159a158 <col:44, col:207> 'int'
    |       |-BinaryOperator 0x5651d1599f80 <col:44, col:121> 'int' '||'
    |       | |-BinaryOperator 0x5651d1599ea0 <col:44, col:83> 'int' '||'
    |       | | |-UnaryOperator 0x5651d1599dc8 <col:44, col:45> 'int' prefix '!' cannot overflow
    |       | | | `-ImplicitCastExpr 0x5651d1599db0 <col:45> '_Bool' <LValueToRValue>
    |       | | |   `-DeclRefExpr 0x5651d1599d90 <col:45> '_Bool' lvalue Var 0x5651d15948d0 'y$w_buff0_used' '_Bool'
    |       | | `-BinaryOperator 0x5651d1599e80 <col:63, col:83> 'int' '&&'
    |       | |   |-UnaryOperator 0x5651d1599e18 <col:63, col:64> 'int' prefix '!' cannot overflow
    |       | |   | `-ImplicitCastExpr 0x5651d1599e00 <col:64> '_Bool' <LValueToRValue>
    |       | |   |   `-DeclRefExpr 0x5651d1599de0 <col:64> '_Bool' lvalue Var 0x5651d1594488 'y$r_buff0_thd0' '_Bool'
    |       | |   `-UnaryOperator 0x5651d1599e68 <col:82, col:83> 'int' prefix '!' cannot overflow
    |       | |     `-ImplicitCastExpr 0x5651d1599e50 <col:83> '_Bool' <LValueToRValue>
    |       | |       `-DeclRefExpr 0x5651d1599e30 <col:83> '_Bool' lvalue Var 0x5651d15949c8 'y$w_buff1_used' '_Bool'
    |       | `-BinaryOperator 0x5651d1599f60 <col:101, col:121> 'int' '&&'
    |       |   |-UnaryOperator 0x5651d1599ef8 <col:101, col:102> 'int' prefix '!' cannot overflow
    |       |   | `-ImplicitCastExpr 0x5651d1599ee0 <col:102> '_Bool' <LValueToRValue>
    |       |   |   `-DeclRefExpr 0x5651d1599ec0 <col:102> '_Bool' lvalue Var 0x5651d1594488 'y$r_buff0_thd0' '_Bool'
    |       |   `-UnaryOperator 0x5651d1599f48 <col:120, col:121> 'int' prefix '!' cannot overflow
    |       |     `-ImplicitCastExpr 0x5651d1599f30 <col:121> '_Bool' <LValueToRValue>
    |       |       `-DeclRefExpr 0x5651d1599f10 <col:121> '_Bool' lvalue Var 0x5651d15945f0 'y$r_buff1_thd0' '_Bool'
    |       |-ImplicitCastExpr 0x5651d159a140 <col:138> 'int' <LValueToRValue>
    |       | `-DeclRefExpr 0x5651d1599fa0 <col:138> 'int' lvalue Var 0x5651d1594950 'y$w_buff1' 'int'
    |       `-ParenExpr 0x5651d159a120 <col:150, col:207> 'int'
    |         `-ConditionalOperator 0x5651d159a0f0 <col:151, col:198> 'int'
    |           |-BinaryOperator 0x5651d159a060 <col:151, col:169> 'int' '&&'
    |           | |-ImplicitCastExpr 0x5651d159a018 <col:151> 'int' <IntegralCast>
    |           | | `-ImplicitCastExpr 0x5651d159a000 <col:151> '_Bool' <LValueToRValue>
    |           | |   `-DeclRefExpr 0x5651d1599fc0 <col:151> '_Bool' lvalue Var 0x5651d15948d0 'y$w_buff0_used' '_Bool'
    |           | `-ImplicitCastExpr 0x5651d159a048 <col:169> 'int' <IntegralCast>
    |           |   `-ImplicitCastExpr 0x5651d159a030 <col:169> '_Bool' <LValueToRValue>
    |           |     `-DeclRefExpr 0x5651d1599fe0 <col:169> '_Bool' lvalue Var 0x5651d1594488 'y$r_buff0_thd0' '_Bool'
    |           |-ImplicitCastExpr 0x5651d159a0c0 <col:186> 'int' <LValueToRValue>
    |           | `-DeclRefExpr 0x5651d159a080 <col:186> 'int' lvalue Var 0x5651d1594950 'y$w_buff1' 'int'
    |           `-ImplicitCastExpr 0x5651d159a0d8 <col:198> 'int' <LValueToRValue>
    |             `-DeclRefExpr 0x5651d159a0a0 <col:198> 'int' lvalue Var 0x5651d1594950 'y$w_buff1' 'int'
    |-BinaryOperator 0x5651d159a7c8 <line:776:3, col:227> '_Bool' '='
    | |-DeclRefExpr 0x5651d159a240 <col:3> '_Bool' lvalue Var 0x5651d15948d0 'y$w_buff0_used' '_Bool'
    | `-ImplicitCastExpr 0x5651d159a7b0 <col:20, col:227> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x5651d159a780 <col:20, col:227> 'int'
    |     |-ImplicitCastExpr 0x5651d159a738 <col:20> 'int' <IntegralCast>
    |     | `-ImplicitCastExpr 0x5651d159a720 <col:20> '_Bool' <LValueToRValue>
    |     |   `-DeclRefExpr 0x5651d159a260 <col:20> '_Bool' lvalue Var 0x5651d1594b00 'weak$$choice2' '_Bool'
    |     |-ImplicitCastExpr 0x5651d159a768 <col:36> 'int' <IntegralCast>
    |     | `-ImplicitCastExpr 0x5651d159a750 <col:36> '_Bool' <LValueToRValue>
    |     |   `-DeclRefExpr 0x5651d159a280 <col:36> '_Bool' lvalue Var 0x5651d15948d0 'y$w_buff0_used' '_Bool'
    |     `-ParenExpr 0x5651d159a700 <col:53, col:227> 'int'
    |       `-ConditionalOperator 0x5651d159a6d0 <col:54, col:226> 'int'
    |         |-BinaryOperator 0x5651d159a490 <col:54, col:131> 'int' '||'
    |         | |-BinaryOperator 0x5651d159a3b0 <col:54, col:93> 'int' '||'
    |         | | |-UnaryOperator 0x5651d159a2d8 <col:54, col:55> 'int' prefix '!' cannot overflow
    |         | | | `-ImplicitCastExpr 0x5651d159a2c0 <col:55> '_Bool' <LValueToRValue>
    |         | | |   `-DeclRefExpr 0x5651d159a2a0 <col:55> '_Bool' lvalue Var 0x5651d15948d0 'y$w_buff0_used' '_Bool'
    |         | | `-BinaryOperator 0x5651d159a390 <col:73, col:93> 'int' '&&'
    |         | |   |-UnaryOperator 0x5651d159a328 <col:73, col:74> 'int' prefix '!' cannot overflow
    |         | |   | `-ImplicitCastExpr 0x5651d159a310 <col:74> '_Bool' <LValueToRValue>
    |         | |   |   `-DeclRefExpr 0x5651d159a2f0 <col:74> '_Bool' lvalue Var 0x5651d1594488 'y$r_buff0_thd0' '_Bool'
    |         | |   `-UnaryOperator 0x5651d159a378 <col:92, col:93> 'int' prefix '!' cannot overflow
    |         | |     `-ImplicitCastExpr 0x5651d159a360 <col:93> '_Bool' <LValueToRValue>
    |         | |       `-DeclRefExpr 0x5651d159a340 <col:93> '_Bool' lvalue Var 0x5651d15949c8 'y$w_buff1_used' '_Bool'
    |         | `-BinaryOperator 0x5651d159a470 <col:111, col:131> 'int' '&&'
    |         |   |-UnaryOperator 0x5651d159a408 <col:111, col:112> 'int' prefix '!' cannot overflow
    |         |   | `-ImplicitCastExpr 0x5651d159a3f0 <col:112> '_Bool' <LValueToRValue>
    |         |   |   `-DeclRefExpr 0x5651d159a3d0 <col:112> '_Bool' lvalue Var 0x5651d1594488 'y$r_buff0_thd0' '_Bool'
    |         |   `-UnaryOperator 0x5651d159a458 <col:130, col:131> 'int' prefix '!' cannot overflow
    |         |     `-ImplicitCastExpr 0x5651d159a440 <col:131> '_Bool' <LValueToRValue>
    |         |       `-DeclRefExpr 0x5651d159a420 <col:131> '_Bool' lvalue Var 0x5651d15945f0 'y$r_buff1_thd0' '_Bool'
    |         |-ImplicitCastExpr 0x5651d159a6b8 <col:148> 'int' <IntegralCast>
    |         | `-ImplicitCastExpr 0x5651d159a6a0 <col:148> '_Bool' <LValueToRValue>
    |         |   `-DeclRefExpr 0x5651d159a4b0 <col:148> '_Bool' lvalue Var 0x5651d15948d0 'y$w_buff0_used' '_Bool'
    |         `-ParenExpr 0x5651d159a680 <col:165, col:226> 'int'
    |           `-ConditionalOperator 0x5651d159a650 <col:166, col:212> 'int'
    |             |-BinaryOperator 0x5651d159a570 <col:166, col:184> 'int' '&&'
    |             | |-ImplicitCastExpr 0x5651d159a528 <col:166> 'int' <IntegralCast>
    |             | | `-ImplicitCastExpr 0x5651d159a510 <col:166> '_Bool' <LValueToRValue>
    |             | |   `-DeclRefExpr 0x5651d159a4d0 <col:166> '_Bool' lvalue Var 0x5651d15948d0 'y$w_buff0_used' '_Bool'
    |             | `-ImplicitCastExpr 0x5651d159a558 <col:184> 'int' <IntegralCast>
    |             |   `-ImplicitCastExpr 0x5651d159a540 <col:184> '_Bool' <LValueToRValue>
    |             |     `-DeclRefExpr 0x5651d159a4f0 <col:184> '_Bool' lvalue Var 0x5651d1594488 'y$r_buff0_thd0' '_Bool'
    |             |-ImplicitCastExpr 0x5651d159a608 <col:201, col:208> 'int' <IntegralCast>
    |             | `-CStyleCastExpr 0x5651d159a5c0 <col:201, col:208> '_Bool' <IntegralToBoolean>
    |             |   `-IntegerLiteral 0x5651d159a590 <col:208> 'int' 0
    |             `-ImplicitCastExpr 0x5651d159a638 <col:212> 'int' <IntegralCast>
    |               `-ImplicitCastExpr 0x5651d159a620 <col:212> '_Bool' <LValueToRValue>
    |                 `-DeclRefExpr 0x5651d159a5e8 <col:212> '_Bool' lvalue Var 0x5651d15948d0 'y$w_buff0_used' '_Bool'
    |-BinaryOperator 0x5651d159adb8 <line:777:3, col:221> '_Bool' '='
    | |-DeclRefExpr 0x5651d159a7e8 <col:3> '_Bool' lvalue Var 0x5651d15949c8 'y$w_buff1_used' '_Bool'
    | `-ImplicitCastExpr 0x5651d159ada0 <col:20, col:221> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x5651d159ad70 <col:20, col:221> 'int'
    |     |-ImplicitCastExpr 0x5651d159ad28 <col:20> 'int' <IntegralCast>
    |     | `-ImplicitCastExpr 0x5651d159ad10 <col:20> '_Bool' <LValueToRValue>
    |     |   `-DeclRefExpr 0x5651d159a808 <col:20> '_Bool' lvalue Var 0x5651d1594b00 'weak$$choice2' '_Bool'
    |     |-ImplicitCastExpr 0x5651d159ad58 <col:36> 'int' <IntegralCast>
    |     | `-ImplicitCastExpr 0x5651d159ad40 <col:36> '_Bool' <LValueToRValue>
    |     |   `-DeclRefExpr 0x5651d159a828 <col:36> '_Bool' lvalue Var 0x5651d15949c8 'y$w_buff1_used' '_Bool'
    |     `-ParenExpr 0x5651d159acf0 <col:53, col:221> 'int'
    |       `-ConditionalOperator 0x5651d159acc0 <col:54, col:220> 'int'
    |         |-BinaryOperator 0x5651d159aa38 <col:54, col:131> 'int' '||'
    |         | |-BinaryOperator 0x5651d159a958 <col:54, col:93> 'int' '||'
    |         | | |-UnaryOperator 0x5651d159a880 <col:54, col:55> 'int' prefix '!' cannot overflow
    |         | | | `-ImplicitCastExpr 0x5651d159a868 <col:55> '_Bool' <LValueToRValue>
    |         | | |   `-DeclRefExpr 0x5651d159a848 <col:55> '_Bool' lvalue Var 0x5651d15948d0 'y$w_buff0_used' '_Bool'
    |         | | `-BinaryOperator 0x5651d159a938 <col:73, col:93> 'int' '&&'
    |         | |   |-UnaryOperator 0x5651d159a8d0 <col:73, col:74> 'int' prefix '!' cannot overflow
    |         | |   | `-ImplicitCastExpr 0x5651d159a8b8 <col:74> '_Bool' <LValueToRValue>
    |         | |   |   `-DeclRefExpr 0x5651d159a898 <col:74> '_Bool' lvalue Var 0x5651d1594488 'y$r_buff0_thd0' '_Bool'
    |         | |   `-UnaryOperator 0x5651d159a920 <col:92, col:93> 'int' prefix '!' cannot overflow
    |         | |     `-ImplicitCastExpr 0x5651d159a908 <col:93> '_Bool' <LValueToRValue>
    |         | |       `-DeclRefExpr 0x5651d159a8e8 <col:93> '_Bool' lvalue Var 0x5651d15949c8 'y$w_buff1_used' '_Bool'
    |         | `-BinaryOperator 0x5651d159aa18 <col:111, col:131> 'int' '&&'
    |         |   |-UnaryOperator 0x5651d159a9b0 <col:111, col:112> 'int' prefix '!' cannot overflow
    |         |   | `-ImplicitCastExpr 0x5651d159a998 <col:112> '_Bool' <LValueToRValue>
    |         |   |   `-DeclRefExpr 0x5651d159a978 <col:112> '_Bool' lvalue Var 0x5651d1594488 'y$r_buff0_thd0' '_Bool'
    |         |   `-UnaryOperator 0x5651d159aa00 <col:130, col:131> 'int' prefix '!' cannot overflow
    |         |     `-ImplicitCastExpr 0x5651d159a9e8 <col:131> '_Bool' <LValueToRValue>
    |         |       `-DeclRefExpr 0x5651d159a9c8 <col:131> '_Bool' lvalue Var 0x5651d15945f0 'y$r_buff1_thd0' '_Bool'
    |         |-ImplicitCastExpr 0x5651d159aca8 <col:148> 'int' <IntegralCast>
    |         | `-ImplicitCastExpr 0x5651d159ac90 <col:148> '_Bool' <LValueToRValue>
    |         |   `-DeclRefExpr 0x5651d159aa58 <col:148> '_Bool' lvalue Var 0x5651d15949c8 'y$w_buff1_used' '_Bool'
    |         `-ParenExpr 0x5651d159ac70 <col:165, col:220> 'int'
    |           `-ConditionalOperator 0x5651d159ac40 <col:166, col:219> 'int'
    |             |-BinaryOperator 0x5651d159ab18 <col:166, col:184> 'int' '&&'
    |             | |-ImplicitCastExpr 0x5651d159aad0 <col:166> 'int' <IntegralCast>
    |             | | `-ImplicitCastExpr 0x5651d159aab8 <col:166> '_Bool' <LValueToRValue>
    |             | |   `-DeclRefExpr 0x5651d159aa78 <col:166> '_Bool' lvalue Var 0x5651d15948d0 'y$w_buff0_used' '_Bool'
    |             | `-ImplicitCastExpr 0x5651d159ab00 <col:184> 'int' <IntegralCast>
    |             |   `-ImplicitCastExpr 0x5651d159aae8 <col:184> '_Bool' <LValueToRValue>
    |             |     `-DeclRefExpr 0x5651d159aa98 <col:184> '_Bool' lvalue Var 0x5651d1594488 'y$r_buff0_thd0' '_Bool'
    |             |-ImplicitCastExpr 0x5651d159ac10 <col:201, col:208> 'int' <IntegralCast>
    |             | `-CStyleCastExpr 0x5651d159ab90 <col:201, col:208> '_Bool' <IntegralToBoolean>
    |             |   `-IntegerLiteral 0x5651d159ab60 <col:208> 'int' 0
    |             `-ImplicitCastExpr 0x5651d159ac28 <col:212, col:219> 'int' <IntegralCast>
    |               `-CStyleCastExpr 0x5651d159abe8 <col:212, col:219> '_Bool' <IntegralToBoolean>
    |                 `-IntegerLiteral 0x5651d159abb8 <col:219> 'int' 0
    |-BinaryOperator 0x5651d159b360 <line:778:3, col:227> '_Bool' '='
    | |-DeclRefExpr 0x5651d159add8 <col:3> '_Bool' lvalue Var 0x5651d1594488 'y$r_buff0_thd0' '_Bool'
    | `-ImplicitCastExpr 0x5651d159b348 <col:20, col:227> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x5651d159b318 <col:20, col:227> 'int'
    |     |-ImplicitCastExpr 0x5651d159b2d0 <col:20> 'int' <IntegralCast>
    |     | `-ImplicitCastExpr 0x5651d159b2b8 <col:20> '_Bool' <LValueToRValue>
    |     |   `-DeclRefExpr 0x5651d159adf8 <col:20> '_Bool' lvalue Var 0x5651d1594b00 'weak$$choice2' '_Bool'
    |     |-ImplicitCastExpr 0x5651d159b300 <col:36> 'int' <IntegralCast>
    |     | `-ImplicitCastExpr 0x5651d159b2e8 <col:36> '_Bool' <LValueToRValue>
    |     |   `-DeclRefExpr 0x5651d159ae18 <col:36> '_Bool' lvalue Var 0x5651d1594488 'y$r_buff0_thd0' '_Bool'
    |     `-ParenExpr 0x5651d159b298 <col:53, col:227> 'int'
    |       `-ConditionalOperator 0x5651d159b268 <col:54, col:226> 'int'
    |         |-BinaryOperator 0x5651d159b028 <col:54, col:131> 'int' '||'
    |         | |-BinaryOperator 0x5651d159af48 <col:54, col:93> 'int' '||'
    |         | | |-UnaryOperator 0x5651d159ae70 <col:54, col:55> 'int' prefix '!' cannot overflow
    |         | | | `-ImplicitCastExpr 0x5651d159ae58 <col:55> '_Bool' <LValueToRValue>
    |         | | |   `-DeclRefExpr 0x5651d159ae38 <col:55> '_Bool' lvalue Var 0x5651d15948d0 'y$w_buff0_used' '_Bool'
    |         | | `-BinaryOperator 0x5651d159af28 <col:73, col:93> 'int' '&&'
    |         | |   |-UnaryOperator 0x5651d159aec0 <col:73, col:74> 'int' prefix '!' cannot overflow
    |         | |   | `-ImplicitCastExpr 0x5651d159aea8 <col:74> '_Bool' <LValueToRValue>
    |         | |   |   `-DeclRefExpr 0x5651d159ae88 <col:74> '_Bool' lvalue Var 0x5651d1594488 'y$r_buff0_thd0' '_Bool'
    |         | |   `-UnaryOperator 0x5651d159af10 <col:92, col:93> 'int' prefix '!' cannot overflow
    |         | |     `-ImplicitCastExpr 0x5651d159aef8 <col:93> '_Bool' <LValueToRValue>
    |         | |       `-DeclRefExpr 0x5651d159aed8 <col:93> '_Bool' lvalue Var 0x5651d15949c8 'y$w_buff1_used' '_Bool'
    |         | `-BinaryOperator 0x5651d159b008 <col:111, col:131> 'int' '&&'
    |         |   |-UnaryOperator 0x5651d159afa0 <col:111, col:112> 'int' prefix '!' cannot overflow
    |         |   | `-ImplicitCastExpr 0x5651d159af88 <col:112> '_Bool' <LValueToRValue>
    |         |   |   `-DeclRefExpr 0x5651d159af68 <col:112> '_Bool' lvalue Var 0x5651d1594488 'y$r_buff0_thd0' '_Bool'
    |         |   `-UnaryOperator 0x5651d159aff0 <col:130, col:131> 'int' prefix '!' cannot overflow
    |         |     `-ImplicitCastExpr 0x5651d159afd8 <col:131> '_Bool' <LValueToRValue>
    |         |       `-DeclRefExpr 0x5651d159afb8 <col:131> '_Bool' lvalue Var 0x5651d15945f0 'y$r_buff1_thd0' '_Bool'
    |         |-ImplicitCastExpr 0x5651d159b250 <col:148> 'int' <IntegralCast>
    |         | `-ImplicitCastExpr 0x5651d159b238 <col:148> '_Bool' <LValueToRValue>
    |         |   `-DeclRefExpr 0x5651d159b048 <col:148> '_Bool' lvalue Var 0x5651d1594488 'y$r_buff0_thd0' '_Bool'
    |         `-ParenExpr 0x5651d159b218 <col:165, col:226> 'int'
    |           `-ConditionalOperator 0x5651d159b1e8 <col:166, col:212> 'int'
    |             |-BinaryOperator 0x5651d159b108 <col:166, col:184> 'int' '&&'
    |             | |-ImplicitCastExpr 0x5651d159b0c0 <col:166> 'int' <IntegralCast>
    |             | | `-ImplicitCastExpr 0x5651d159b0a8 <col:166> '_Bool' <LValueToRValue>
    |             | |   `-DeclRefExpr 0x5651d159b068 <col:166> '_Bool' lvalue Var 0x5651d15948d0 'y$w_buff0_used' '_Bool'
    |             | `-ImplicitCastExpr 0x5651d159b0f0 <col:184> 'int' <IntegralCast>
    |             |   `-ImplicitCastExpr 0x5651d159b0d8 <col:184> '_Bool' <LValueToRValue>
    |             |     `-DeclRefExpr 0x5651d159b088 <col:184> '_Bool' lvalue Var 0x5651d1594488 'y$r_buff0_thd0' '_Bool'
    |             |-ImplicitCastExpr 0x5651d159b1a0 <col:201, col:208> 'int' <IntegralCast>
    |             | `-CStyleCastExpr 0x5651d159b158 <col:201, col:208> '_Bool' <IntegralToBoolean>
    |             |   `-IntegerLiteral 0x5651d159b128 <col:208> 'int' 0
    |             `-ImplicitCastExpr 0x5651d159b1d0 <col:212> 'int' <IntegralCast>
    |               `-ImplicitCastExpr 0x5651d159b1b8 <col:212> '_Bool' <LValueToRValue>
    |                 `-DeclRefExpr 0x5651d159b180 <col:212> '_Bool' lvalue Var 0x5651d1594488 'y$r_buff0_thd0' '_Bool'
    |-BinaryOperator 0x5651d159b928 <line:779:3, col:221> '_Bool' '='
    | |-DeclRefExpr 0x5651d159b380 <col:3> '_Bool' lvalue Var 0x5651d15945f0 'y$r_buff1_thd0' '_Bool'
    | `-ImplicitCastExpr 0x5651d159b910 <col:20, col:221> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x5651d159b8e0 <col:20, col:221> 'int'
    |     |-ImplicitCastExpr 0x5651d159b898 <col:20> 'int' <IntegralCast>
    |     | `-ImplicitCastExpr 0x5651d159b880 <col:20> '_Bool' <LValueToRValue>
    |     |   `-DeclRefExpr 0x5651d159b3a0 <col:20> '_Bool' lvalue Var 0x5651d1594b00 'weak$$choice2' '_Bool'
    |     |-ImplicitCastExpr 0x5651d159b8c8 <col:36> 'int' <IntegralCast>
    |     | `-ImplicitCastExpr 0x5651d159b8b0 <col:36> '_Bool' <LValueToRValue>
    |     |   `-DeclRefExpr 0x5651d159b3c0 <col:36> '_Bool' lvalue Var 0x5651d15945f0 'y$r_buff1_thd0' '_Bool'
    |     `-ParenExpr 0x5651d159b860 <col:53, col:221> 'int'
    |       `-ConditionalOperator 0x5651d159b830 <col:54, col:220> 'int'
    |         |-BinaryOperator 0x5651d159b5d0 <col:54, col:131> 'int' '||'
    |         | |-BinaryOperator 0x5651d159b4f0 <col:54, col:93> 'int' '||'
    |         | | |-UnaryOperator 0x5651d159b418 <col:54, col:55> 'int' prefix '!' cannot overflow
    |         | | | `-ImplicitCastExpr 0x5651d159b400 <col:55> '_Bool' <LValueToRValue>
    |         | | |   `-DeclRefExpr 0x5651d159b3e0 <col:55> '_Bool' lvalue Var 0x5651d15948d0 'y$w_buff0_used' '_Bool'
    |         | | `-BinaryOperator 0x5651d159b4d0 <col:73, col:93> 'int' '&&'
    |         | |   |-UnaryOperator 0x5651d159b468 <col:73, col:74> 'int' prefix '!' cannot overflow
    |         | |   | `-ImplicitCastExpr 0x5651d159b450 <col:74> '_Bool' <LValueToRValue>
    |         | |   |   `-DeclRefExpr 0x5651d159b430 <col:74> '_Bool' lvalue Var 0x5651d1594488 'y$r_buff0_thd0' '_Bool'
    |         | |   `-UnaryOperator 0x5651d159b4b8 <col:92, col:93> 'int' prefix '!' cannot overflow
    |         | |     `-ImplicitCastExpr 0x5651d159b4a0 <col:93> '_Bool' <LValueToRValue>
    |         | |       `-DeclRefExpr 0x5651d159b480 <col:93> '_Bool' lvalue Var 0x5651d15949c8 'y$w_buff1_used' '_Bool'
    |         | `-BinaryOperator 0x5651d159b5b0 <col:111, col:131> 'int' '&&'
    |         |   |-UnaryOperator 0x5651d159b548 <col:111, col:112> 'int' prefix '!' cannot overflow
    |         |   | `-ImplicitCastExpr 0x5651d159b530 <col:112> '_Bool' <LValueToRValue>
    |         |   |   `-DeclRefExpr 0x5651d159b510 <col:112> '_Bool' lvalue Var 0x5651d1594488 'y$r_buff0_thd0' '_Bool'
    |         |   `-UnaryOperator 0x5651d159b598 <col:130, col:131> 'int' prefix '!' cannot overflow
    |         |     `-ImplicitCastExpr 0x5651d159b580 <col:131> '_Bool' <LValueToRValue>
    |         |       `-DeclRefExpr 0x5651d159b560 <col:131> '_Bool' lvalue Var 0x5651d15945f0 'y$r_buff1_thd0' '_Bool'
    |         |-ImplicitCastExpr 0x5651d159b818 <col:148> 'int' <IntegralCast>
    |         | `-ImplicitCastExpr 0x5651d159b800 <col:148> '_Bool' <LValueToRValue>
    |         |   `-DeclRefExpr 0x5651d159b5f0 <col:148> '_Bool' lvalue Var 0x5651d15945f0 'y$r_buff1_thd0' '_Bool'
    |         `-ParenExpr 0x5651d159b7e0 <col:165, col:220> 'int'
    |           `-ConditionalOperator 0x5651d159b7b0 <col:166, col:219> 'int'
    |             |-BinaryOperator 0x5651d159b6b0 <col:166, col:184> 'int' '&&'
    |             | |-ImplicitCastExpr 0x5651d159b668 <col:166> 'int' <IntegralCast>
    |             | | `-ImplicitCastExpr 0x5651d159b650 <col:166> '_Bool' <LValueToRValue>
    |             | |   `-DeclRefExpr 0x5651d159b610 <col:166> '_Bool' lvalue Var 0x5651d15948d0 'y$w_buff0_used' '_Bool'
    |             | `-ImplicitCastExpr 0x5651d159b698 <col:184> 'int' <IntegralCast>
    |             |   `-ImplicitCastExpr 0x5651d159b680 <col:184> '_Bool' <LValueToRValue>
    |             |     `-DeclRefExpr 0x5651d159b630 <col:184> '_Bool' lvalue Var 0x5651d1594488 'y$r_buff0_thd0' '_Bool'
    |             |-ImplicitCastExpr 0x5651d159b780 <col:201, col:208> 'int' <IntegralCast>
    |             | `-CStyleCastExpr 0x5651d159b700 <col:201, col:208> '_Bool' <IntegralToBoolean>
    |             |   `-IntegerLiteral 0x5651d159b6d0 <col:208> 'int' 0
    |             `-ImplicitCastExpr 0x5651d159b798 <col:212, col:219> 'int' <IntegralCast>
    |               `-CStyleCastExpr 0x5651d159b758 <col:212, col:219> '_Bool' <IntegralToBoolean>
    |                 `-IntegerLiteral 0x5651d159b728 <col:219> 'int' 0
    |-BinaryOperator 0x5651d159bac8 <line:780:3, col:39> '_Bool' '='
    | |-DeclRefExpr 0x5651d159b948 <col:3> '_Bool' lvalue Var 0x5651d15940d8 'main$tmp_guard1' '_Bool'
    | `-ImplicitCastExpr 0x5651d159bab0 <col:21, col:39> '_Bool' <IntegralToBoolean>
    |   `-UnaryOperator 0x5651d159ba98 <col:21, col:39> 'int' prefix '!' cannot overflow
    |     `-ParenExpr 0x5651d159ba78 <col:22, col:39> 'int'
    |       `-BinaryOperator 0x5651d159ba58 <col:23, col:38> 'int' '&&'
    |         |-BinaryOperator 0x5651d159b9c0 <col:23, col:28> 'int' '=='
    |         | |-ImplicitCastExpr 0x5651d159b9a8 <col:23> 'int' <LValueToRValue>
    |         | | `-DeclRefExpr 0x5651d159b968 <col:23> 'int' lvalue Var 0x5651d15941d8 'x' 'int'
    |         | `-IntegerLiteral 0x5651d159b988 <col:28> 'int' 2
    |         `-BinaryOperator 0x5651d159ba38 <col:33, col:38> 'int' '=='
    |           |-ImplicitCastExpr 0x5651d159ba20 <col:33> 'int' <LValueToRValue>
    |           | `-DeclRefExpr 0x5651d159b9e0 <col:33> 'int' lvalue Var 0x5651d15942f8 'y' 'int'
    |           `-IntegerLiteral 0x5651d159ba00 <col:38> 'int' 2
    |-BinaryOperator 0x5651d159bc20 <line:781:3, col:37> 'int' '='
    | |-DeclRefExpr 0x5651d159bae8 <col:3> 'int' lvalue Var 0x5651d15942f8 'y' 'int'
    | `-ConditionalOperator 0x5651d159bbf0 <col:7, col:37> 'int'
    |   |-ImplicitCastExpr 0x5651d159bba8 <col:7> 'int' <IntegralCast>
    |   | `-ImplicitCastExpr 0x5651d159bb90 <col:7> '_Bool' <LValueToRValue>
    |   |   `-DeclRefExpr 0x5651d159bb08 <col:7> '_Bool' lvalue Var 0x5651d1594390 'y$flush_delayed' '_Bool'
    |   |-ImplicitCastExpr 0x5651d159bbc0 <col:25> 'int' <LValueToRValue>
    |   | `-DeclRefExpr 0x5651d159bb28 <col:25> 'int' lvalue Var 0x5651d1594410 'y$mem_tmp' 'int'
    |   `-ImplicitCastExpr 0x5651d159bbd8 <col:37> 'int' <LValueToRValue>
    |     `-DeclRefExpr 0x5651d159bb70 <col:37> 'int' lvalue Var 0x5651d15942f8 'y' 'int'
    |-BinaryOperator 0x5651d159bcb8 <line:782:3, col:28> '_Bool' '='
    | |-DeclRefExpr 0x5651d159bc40 <col:3> '_Bool' lvalue Var 0x5651d1594390 'y$flush_delayed' '_Bool'
    | `-CStyleCastExpr 0x5651d159bc90 <col:21, col:28> '_Bool' <IntegralToBoolean>
    |   `-IntegerLiteral 0x5651d159bc60 <col:28> 'int' 0
    |-CallExpr 0x5651d159bd10 <line:783:3, col:25> 'void'
    | `-ImplicitCastExpr 0x5651d159bcf8 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x5651d159bcd8 <col:3> 'void ()' Function 0x5651d153af00 '__VERIFIER_atomic_end' 'void ()'
    |-CallExpr 0x5651d159bd88 <line:784:3, col:36> 'void'
    | |-ImplicitCastExpr 0x5651d159bd70 <col:3> 'void (*)(int)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x5651d159bd30 <col:3> 'void (int)' Function 0x5651d153abc8 '__VERIFIER_assert' 'void (int)'
    | `-ImplicitCastExpr 0x5651d159bdc8 <col:21> 'int' <IntegralCast>
    |   `-ImplicitCastExpr 0x5651d159bdb0 <col:21> '_Bool' <LValueToRValue>
    |     `-DeclRefExpr 0x5651d159bd50 <col:21> '_Bool' lvalue Var 0x5651d15940d8 'main$tmp_guard1' '_Bool'
    `-ReturnStmt 0x5651d159be00 <line:785:3, col:10>
      `-IntegerLiteral 0x5651d159bde0 <col:10> 'int' 0
