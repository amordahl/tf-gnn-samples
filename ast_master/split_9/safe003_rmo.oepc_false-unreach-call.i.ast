TranslationUnitDecl 0x560ee5c9ae18 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x560ee5c9b6d8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x560ee5c9b3b0 '__int128'
|-TypedefDecl 0x560ee5c9b748 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x560ee5c9b3d0 'unsigned __int128'
|-TypedefDecl 0x560ee5c9ba50 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x560ee5c9b820 'struct __NSConstantString_tag'
|   `-Record 0x560ee5c9b7a0 '__NSConstantString_tag'
|-TypedefDecl 0x560ee5c9baf8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x560ee5c9bab0 'char *'
|   `-BuiltinType 0x560ee5c9aeb0 'char'
|-TypedefDecl 0x560ee5cda650 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'struct __va_list_tag [1]'
| `-ConstantArrayType 0x560ee5c9bd90 'struct __va_list_tag [1]' 1 
|   `-RecordType 0x560ee5c9bbd0 'struct __va_list_tag'
|     `-Record 0x560ee5c9bb50 '__va_list_tag'
|-FunctionDecl 0x560ee5cda790 <./split_9/safe003_rmo.oepc_false-unreach-call.i:1:1, col:34> col:13 used __VERIFIER_assume 'void (int)' extern
| `-ParmVarDecl 0x560ee5cda6c0 <col:31> col:34 'int'
|-FunctionDecl 0x560ee5cda958 <line:2:1, col:45> col:15 used __VERIFIER_nondet_pointer 'void *(void)' extern
|-FunctionDecl 0x560ee5cdaa80 <line:3:1, col:61> col:13 used __VERIFIER_error 'void () __attribute__((noreturn))' extern
|-FunctionDecl 0x560ee5cdabc8 <line:4:1, col:99> col:6 used __VERIFIER_assert 'void (int)'
| |-ParmVarDecl 0x560ee5cdab38 <col:24, col:28> col:28 used expression 'int'
| `-CompoundStmt 0x560ee5cdadf8 <col:40, col:99>
|   |-IfStmt 0x560ee5cdadc8 <col:42, col:88>
|   | |-UnaryOperator 0x560ee5cdaca8 <col:46, col:47> 'int' prefix '!' cannot overflow
|   | | `-ImplicitCastExpr 0x560ee5cdac90 <col:47> 'int' <LValueToRValue>
|   | |   `-DeclRefExpr 0x560ee5cdac70 <col:47> 'int' lvalue ParmVar 0x560ee5cdab38 'expression' 'int'
|   | `-CompoundStmt 0x560ee5cdadb0 <col:59, col:88>
|   |   `-LabelStmt 0x560ee5cdad98 <col:61, col:85> 'ERROR'
|   |     `-CallExpr 0x560ee5cdad28 <col:68, col:85> 'void'
|   |       `-ImplicitCastExpr 0x560ee5cdad10 <col:68> 'void (*)() __attribute__((noreturn))' <FunctionToPointerDecay>
|   |         `-DeclRefExpr 0x560ee5cdacc0 <col:68> 'void () __attribute__((noreturn))' Function 0x560ee5cdaa80 '__VERIFIER_error' 'void () __attribute__((noreturn))'
|   |-NullStmt 0x560ee5cdade0 <col:89>
|   `-ReturnStmt 0x560ee5cdade8 <col:91>
|-FunctionDecl 0x560ee5cdae40 <line:5:1, col:37> col:13 used __VERIFIER_atomic_begin 'void ()' extern
|-FunctionDecl 0x560ee5cdaf00 <line:6:1, col:35> col:13 used __VERIFIER_atomic_end 'void ()' extern
|-FunctionDecl 0x560ee5cdb280 <line:8:1, line:10:76> line:8:13 __assert_fail 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x560ee5cdafb8 <col:28, col:40> col:40 __assertion 'const char *'
| |-ParmVarDecl 0x560ee5cdb038 <col:53, col:65> col:65 __file 'const char *'
| |-ParmVarDecl 0x560ee5cdb0b8 <line:9:7, col:20> col:20 __line 'unsigned int'
| |-ParmVarDecl 0x560ee5cdb138 <col:28, col:40> col:40 __function 'const char *'
| `-NoThrowAttr 0x560ee5cdb340 <line:10:22>
|-FunctionDecl 0x560ee5d01390 <line:11:1, line:13:76> line:11:13 __assert_perror_fail 'void (int, const char *, unsigned int, const char *) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x560ee5cdb3b0 <col:35, col:39> col:39 __errnum 'int'
| |-ParmVarDecl 0x560ee5cdb430 <col:49, col:61> col:61 __file 'const char *'
| |-ParmVarDecl 0x560ee5cdb4b0 <line:12:7, col:20> col:20 __line 'unsigned int'
| |-ParmVarDecl 0x560ee5cdb530 <col:28, col:40> col:40 __function 'const char *'
| `-NoThrowAttr 0x560ee5d01450 <line:13:22>
|-FunctionDecl 0x560ee5d01700 <line:14:1, line:15:76> line:14:13 __assert 'void (const char *, const char *, int) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x560ee5d014c0 <col:23, col:35> col:35 __assertion 'const char *'
| |-ParmVarDecl 0x560ee5d01540 <col:48, col:60> col:60 __file 'const char *'
| |-ParmVarDecl 0x560ee5d015c0 <col:68, col:72> col:72 __line 'int'
| `-NoThrowAttr 0x560ee5d017b8 <line:15:22>
|-TypedefDecl 0x560ee5d01828 <line:17:1, col:23> col:23 __u_char 'unsigned char'
| `-BuiltinType 0x560ee5c9af70 'unsigned char'
|-TypedefDecl 0x560ee5d01898 <line:18:1, col:28> col:28 __u_short 'unsigned short'
| `-BuiltinType 0x560ee5c9af90 'unsigned short'
|-TypedefDecl 0x560ee5d01908 <line:19:1, col:22> col:22 __u_int 'unsigned int'
| `-BuiltinType 0x560ee5c9afb0 'unsigned int'
|-TypedefDecl 0x560ee5d01978 <line:20:1, col:27> col:27 __u_long 'unsigned long'
| `-BuiltinType 0x560ee5c9afd0 'unsigned long'
|-TypedefDecl 0x560ee5d019e8 <line:21:1, col:21> col:21 __int8_t 'signed char'
| `-BuiltinType 0x560ee5c9aed0 'signed char'
|-TypedefDecl 0x560ee5d01a58 <line:22:1, col:23> col:23 __uint8_t 'unsigned char'
| `-BuiltinType 0x560ee5c9af70 'unsigned char'
|-TypedefDecl 0x560ee5d01ac8 <line:23:1, col:26> col:26 __int16_t 'short'
| `-BuiltinType 0x560ee5c9aef0 'short'
|-TypedefDecl 0x560ee5d01b38 <line:24:1, col:28> col:28 __uint16_t 'unsigned short'
| `-BuiltinType 0x560ee5c9af90 'unsigned short'
|-TypedefDecl 0x560ee5d01ba8 <line:25:1, col:20> col:20 __int32_t 'int'
| `-BuiltinType 0x560ee5c9af10 'int'
|-TypedefDecl 0x560ee5d01c18 <line:26:1, col:22> col:22 __uint32_t 'unsigned int'
| `-BuiltinType 0x560ee5c9afb0 'unsigned int'
|-TypedefDecl 0x560ee5d01c88 <line:27:1, col:25> col:25 __int64_t 'long'
| `-BuiltinType 0x560ee5c9af30 'long'
|-TypedefDecl 0x560ee5d01cf8 <line:28:1, col:27> col:27 referenced __uint64_t 'unsigned long'
| `-BuiltinType 0x560ee5c9afd0 'unsigned long'
|-TypedefDecl 0x560ee5d01d68 <line:29:1, col:18> col:18 referenced __quad_t 'long'
| `-BuiltinType 0x560ee5c9af30 'long'
|-TypedefDecl 0x560ee5d01dd8 <line:30:1, col:27> col:27 __u_quad_t 'unsigned long'
| `-BuiltinType 0x560ee5c9afd0 'unsigned long'
|-TypedefDecl 0x560ee5d01e48 <line:31:1, col:27> col:27 __dev_t 'unsigned long'
| `-BuiltinType 0x560ee5c9afd0 'unsigned long'
|-TypedefDecl 0x560ee5d01eb8 <line:32:1, col:22> col:22 __uid_t 'unsigned int'
| `-BuiltinType 0x560ee5c9afb0 'unsigned int'
|-TypedefDecl 0x560ee5d01f28 <line:33:1, col:22> col:22 __gid_t 'unsigned int'
| `-BuiltinType 0x560ee5c9afb0 'unsigned int'
|-TypedefDecl 0x560ee5d01f98 <line:34:1, col:27> col:27 __ino_t 'unsigned long'
| `-BuiltinType 0x560ee5c9afd0 'unsigned long'
|-TypedefDecl 0x560ee5d02008 <line:35:1, col:27> col:27 __ino64_t 'unsigned long'
| `-BuiltinType 0x560ee5c9afd0 'unsigned long'
|-TypedefDecl 0x560ee5d02078 <line:36:1, col:22> col:22 __mode_t 'unsigned int'
| `-BuiltinType 0x560ee5c9afb0 'unsigned int'
|-TypedefDecl 0x560ee5d020e8 <line:37:1, col:27> col:27 __nlink_t 'unsigned long'
| `-BuiltinType 0x560ee5c9afd0 'unsigned long'
|-TypedefDecl 0x560ee5d02158 <line:38:1, col:18> col:18 __off_t 'long'
| `-BuiltinType 0x560ee5c9af30 'long'
|-TypedefDecl 0x560ee5d021c8 <line:39:1, col:18> col:18 referenced __off64_t 'long'
| `-BuiltinType 0x560ee5c9af30 'long'
|-TypedefDecl 0x560ee5d02238 <line:40:1, col:13> col:13 referenced __pid_t 'int'
| `-BuiltinType 0x560ee5c9af10 'int'
|-RecordDecl 0x560ee5d02290 <line:41:9, col:32> col:9 struct definition
| `-FieldDecl 0x560ee5d02408 <col:18, col:29> col:22 __val 'int [2]'
|-TypedefDecl 0x560ee5d024c0 <col:1, col:34> col:34 __fsid_t 'struct __fsid_t':'__fsid_t'
| `-ElaboratedType 0x560ee5d02460 'struct __fsid_t' sugar
|   `-RecordType 0x560ee5d02310 '__fsid_t'
|     `-Record 0x560ee5d02290 ''
|-TypedefDecl 0x560ee5d02548 <line:42:1, col:18> col:18 referenced __clock_t 'long'
| `-BuiltinType 0x560ee5c9af30 'long'
|-TypedefDecl 0x560ee5d025b8 <line:43:1, col:27> col:27 __rlim_t 'unsigned long'
| `-BuiltinType 0x560ee5c9afd0 'unsigned long'
|-TypedefDecl 0x560ee5d02628 <line:44:1, col:27> col:27 __rlim64_t 'unsigned long'
| `-BuiltinType 0x560ee5c9afd0 'unsigned long'
|-TypedefDecl 0x560ee5d02698 <line:45:1, col:22> col:22 __id_t 'unsigned int'
| `-BuiltinType 0x560ee5c9afb0 'unsigned int'
|-TypedefDecl 0x560ee5d02708 <line:46:1, col:18> col:18 referenced __time_t 'long'
| `-BuiltinType 0x560ee5c9af30 'long'
|-TypedefDecl 0x560ee5d02778 <line:47:1, col:22> col:22 __useconds_t 'unsigned int'
| `-BuiltinType 0x560ee5c9afb0 'unsigned int'
|-TypedefDecl 0x560ee5d027e8 <line:48:1, col:18> col:18 __suseconds_t 'long'
| `-BuiltinType 0x560ee5c9af30 'long'
|-TypedefDecl 0x560ee5d02858 <line:49:1, col:13> col:13 __daddr_t 'int'
| `-BuiltinType 0x560ee5c9af10 'int'
|-TypedefDecl 0x560ee5d028c8 <line:50:1, col:13> col:13 __key_t 'int'
| `-BuiltinType 0x560ee5c9af10 'int'
|-TypedefDecl 0x560ee5d02938 <line:51:1, col:13> col:13 referenced __clockid_t 'int'
| `-BuiltinType 0x560ee5c9af10 'int'
|-TypedefDecl 0x560ee5d029a8 <line:52:1, col:16> col:16 referenced __timer_t 'void *'
| `-PointerType 0x560ee5c9b630 'void *'
|   `-BuiltinType 0x560ee5c9ae70 'void'
|-TypedefDecl 0x560ee5d02a18 <line:53:1, col:18> col:18 __blksize_t 'long'
| `-BuiltinType 0x560ee5c9af30 'long'
|-TypedefDecl 0x560ee5d02a88 <line:54:1, col:18> col:18 __blkcnt_t 'long'
| `-BuiltinType 0x560ee5c9af30 'long'
|-TypedefDecl 0x560ee5d02af8 <line:55:1, col:18> col:18 __blkcnt64_t 'long'
| `-BuiltinType 0x560ee5c9af30 'long'
|-TypedefDecl 0x560ee5d02b68 <line:56:1, col:27> col:27 __fsblkcnt_t 'unsigned long'
| `-BuiltinType 0x560ee5c9afd0 'unsigned long'
|-TypedefDecl 0x560ee5d02bd8 <line:57:1, col:27> col:27 __fsblkcnt64_t 'unsigned long'
| `-BuiltinType 0x560ee5c9afd0 'unsigned long'
|-TypedefDecl 0x560ee5d02c48 <line:58:1, col:27> col:27 __fsfilcnt_t 'unsigned long'
| `-BuiltinType 0x560ee5c9afd0 'unsigned long'
|-TypedefDecl 0x560ee5d02cb8 <line:59:1, col:27> col:27 __fsfilcnt64_t 'unsigned long'
| `-BuiltinType 0x560ee5c9afd0 'unsigned long'
|-TypedefDecl 0x560ee5d02d28 <line:60:1, col:18> col:18 __fsword_t 'long'
| `-BuiltinType 0x560ee5c9af30 'long'
|-TypedefDecl 0x560ee5d02d98 <line:61:1, col:18> col:18 __ssize_t 'long'
| `-BuiltinType 0x560ee5c9af30 'long'
|-TypedefDecl 0x560ee5d02e08 <line:62:1, col:18> col:18 referenced __syscall_slong_t 'long'
| `-BuiltinType 0x560ee5c9af30 'long'
|-TypedefDecl 0x560ee5d02e78 <line:63:1, col:27> col:27 __syscall_ulong_t 'unsigned long'
| `-BuiltinType 0x560ee5c9afd0 'unsigned long'
|-TypedefDecl 0x560ee5d02f08 <line:64:1, col:19> col:19 __loff_t '__off64_t':'long'
| `-TypedefType 0x560ee5d02ed0 '__off64_t' sugar
|   |-Typedef 0x560ee5d021c8 '__off64_t'
|   `-BuiltinType 0x560ee5c9af30 'long'
|-TypedefDecl 0x560ee5d03000 <line:65:1, col:19> col:19 __qaddr_t '__quad_t *'
| `-PointerType 0x560ee5d02fc0 '__quad_t *'
|   `-TypedefType 0x560ee5d02f60 '__quad_t' sugar
|     |-Typedef 0x560ee5d01d68 '__quad_t'
|     `-BuiltinType 0x560ee5c9af30 'long'
|-TypedefDecl 0x560ee5d03070 <line:66:1, col:15> col:15 __caddr_t 'char *'
| `-PointerType 0x560ee5c9bab0 'char *'
|   `-BuiltinType 0x560ee5c9aeb0 'char'
|-TypedefDecl 0x560ee5d030e0 <line:67:1, col:18> col:18 __intptr_t 'long'
| `-BuiltinType 0x560ee5c9af30 'long'
|-TypedefDecl 0x560ee5d03150 <line:68:1, col:22> col:22 __socklen_t 'unsigned int'
| `-BuiltinType 0x560ee5c9afb0 'unsigned int'
|-FunctionDecl 0x560ee5d03298 <line:69:1, line:73:1> line:70:1 __bswap_32 'unsigned int (unsigned int)' static inline
| |-ParmVarDecl 0x560ee5d031c0 <col:13, col:26> col:26 used __bsx 'unsigned int'
| `-CompoundStmt 0x560ee5d045e8 <line:71:1, line:73:1>
|   `-ReturnStmt 0x560ee5d045d8 <line:72:3, col:34>
|     `-CallExpr 0x560ee5d04598 <col:10, col:34> 'unsigned int'
|       |-ImplicitCastExpr 0x560ee5d04580 <col:10> 'unsigned int (*)(unsigned int)' <BuiltinFnToFnPtr>
|       | `-DeclRefExpr 0x560ee5d04510 <col:10> '<builtin fn type>' Function 0x560ee5d04380 '__builtin_bswap32' 'unsigned int (unsigned int)'
|       `-ImplicitCastExpr 0x560ee5d045c0 <col:29> 'unsigned int' <LValueToRValue>
|         `-DeclRefExpr 0x560ee5d04530 <col:29> 'unsigned int' lvalue ParmVar 0x560ee5d031c0 '__bsx' 'unsigned int'
|-FunctionDecl 0x560ee5d04380 <col:10> col:10 implicit used __builtin_bswap32 'unsigned int (unsigned int)' extern
| |-ParmVarDecl 0x560ee5d04420 <<invalid sloc>> <invalid sloc> 'unsigned int'
| |-NoThrowAttr 0x560ee5d04490 <col:10> Implicit
| `-ConstAttr 0x560ee5d044e8 <col:10> Implicit
|-FunctionDecl 0x560ee5d04740 <line:74:1, line:78:1> line:75:1 __bswap_64 '__uint64_t (__uint64_t)' static inline
| |-ParmVarDecl 0x560ee5d04638 <col:13, col:24> col:24 used __bsx '__uint64_t':'unsigned long'
| `-CompoundStmt 0x560ee5d04a58 <line:76:1, line:78:1>
|   `-ReturnStmt 0x560ee5d04a48 <line:77:3, col:34>
|     `-CallExpr 0x560ee5d04a08 <col:10, col:34> 'unsigned long'
|       |-ImplicitCastExpr 0x560ee5d049f0 <col:10> 'unsigned long (*)(unsigned long)' <BuiltinFnToFnPtr>
|       | `-DeclRefExpr 0x560ee5d04978 <col:10> '<builtin fn type>' Function 0x560ee5d047e8 '__builtin_bswap64' 'unsigned long (unsigned long)'
|       `-ImplicitCastExpr 0x560ee5d04a30 <col:29> '__uint64_t':'unsigned long' <LValueToRValue>
|         `-DeclRefExpr 0x560ee5d04998 <col:29> '__uint64_t':'unsigned long' lvalue ParmVar 0x560ee5d04638 '__bsx' '__uint64_t':'unsigned long'
|-FunctionDecl 0x560ee5d047e8 <col:10> col:10 implicit used __builtin_bswap64 'unsigned long (unsigned long)' extern
| |-ParmVarDecl 0x560ee5d04888 <<invalid sloc>> <invalid sloc> 'unsigned long'
| |-NoThrowAttr 0x560ee5d048f8 <col:10> Implicit
| `-ConstAttr 0x560ee5d04950 <col:10> Implicit
|-TypedefDecl 0x560ee5d04a88 <line:79:1, col:27> col:27 referenced size_t 'unsigned long'
| `-BuiltinType 0x560ee5c9afd0 'unsigned long'
|-TypedefDecl 0x560ee5d04b18 <line:81:1, col:18> col:18 referenced time_t '__time_t':'long'
| `-TypedefType 0x560ee5d04ae0 '__time_t' sugar
|   |-Typedef 0x560ee5d02708 '__time_t'
|   `-BuiltinType 0x560ee5c9af30 'long'
|-RecordDecl 0x560ee5d04b70 <line:84:1, line:88:3> line:84:8 struct timespec definition
| |-FieldDecl 0x560ee5d04c28 <line:86:5, col:14> col:14 tv_sec '__time_t':'long'
| `-FieldDecl 0x560ee5d04cb8 <line:87:5, col:23> col:23 tv_nsec '__syscall_slong_t':'long'
|-TypedefDecl 0x560ee5d04d48 <line:89:1, col:17> col:17 referenced pid_t '__pid_t':'int'
| `-TypedefType 0x560ee5d04d10 '__pid_t' sugar
|   |-Typedef 0x560ee5d02238 '__pid_t'
|   `-BuiltinType 0x560ee5c9af10 'int'
|-RecordDecl 0x560ee5d04da0 <line:90:1, line:93:3> line:90:8 struct sched_param definition
| `-FieldDecl 0x560ee5d04e60 <line:92:5, col:9> col:9 __sched_priority 'int'
|-RecordDecl 0x560ee5d04eb0 <line:96:1, line:99:3> line:96:8 struct __sched_param definition
| `-FieldDecl 0x560ee5d04f70 <line:98:5, col:9> col:9 __sched_priority 'int'
|-TypedefDecl 0x560ee5d04fd8 <line:100:1, col:27> col:27 referenced __cpu_mask 'unsigned long'
| `-BuiltinType 0x560ee5c9afd0 'unsigned long'
|-RecordDecl 0x560ee5d05030 <line:101:9, line:104:1> line:101:9 struct definition
| `-FieldDecl 0x560ee5d052c0 <line:103:3, col:53> col:14 __bits '__cpu_mask [64]'
|-TypedefDecl 0x560ee5d063a0 <line:101:1, line:104:3> col:3 referenced cpu_set_t 'struct cpu_set_t':'cpu_set_t'
| `-ElaboratedType 0x560ee5d05310 'struct cpu_set_t' sugar
|   `-RecordType 0x560ee5d050b0 'cpu_set_t'
|     `-Record 0x560ee5d05030 ''
|-FunctionDecl 0x560ee5d06678 <line:106:1, line:107:42> line:106:12 __sched_cpucount 'int (size_t, const cpu_set_t *)' extern
| |-ParmVarDecl 0x560ee5d06448 <col:30, col:37> col:37 __setsize 'size_t':'unsigned long'
| |-ParmVarDecl 0x560ee5d06550 <col:48, col:65> col:65 __setp 'const cpu_set_t *'
| `-NoThrowAttr 0x560ee5d06728 <line:107:19>
|-FunctionDecl 0x560ee5d06900 <line:108:1, col:92> col:19 __sched_cpualloc 'cpu_set_t *(size_t)' extern
| |-ParmVarDecl 0x560ee5d06790 <col:37, col:44> col:44 __count 'size_t':'unsigned long'
| `-NoThrowAttr 0x560ee5d069a8 <col:69>
|-FunctionDecl 0x560ee5d06b20 <line:109:1, col:87> col:13 __sched_cpufree 'void (cpu_set_t *)' extern
| |-ParmVarDecl 0x560ee5d06a10 <col:30, col:41> col:41 __set 'cpu_set_t *'
| `-NoThrowAttr 0x560ee5d06bc8 <col:64>
|-FunctionDecl 0x560ee5d06e88 <line:112:1, line:113:45> line:112:12 sched_setparam 'int (__pid_t, const struct sched_param *)' extern
| |-ParmVarDecl 0x560ee5d06c30 <col:28, col:36> col:36 __pid '__pid_t':'int'
| |-ParmVarDecl 0x560ee5d06d68 <col:43, col:69> col:69 __param 'const struct sched_param *'
| `-NoThrowAttr 0x560ee5d06f38 <line:113:22>
|-FunctionDecl 0x560ee5d071b8 <line:114:1, col:111> col:12 sched_getparam 'int (__pid_t, struct sched_param *)' extern
| |-ParmVarDecl 0x560ee5d06fa0 <col:28, col:36> col:36 __pid '__pid_t':'int'
| |-ParmVarDecl 0x560ee5d07098 <col:43, col:63> col:63 __param 'struct sched_param *'
| `-NoThrowAttr 0x560ee5d07268 <col:88>
|-FunctionDecl 0x560ee5d07588 <line:115:1, line:116:85> line:115:12 sched_setscheduler 'int (__pid_t, int, const struct sched_param *)' extern
| |-ParmVarDecl 0x560ee5d072d0 <col:32, col:40> col:40 __pid '__pid_t':'int'
| |-ParmVarDecl 0x560ee5d073b0 <col:47, col:51> col:51 __policy 'int'
| |-ParmVarDecl 0x560ee5d07440 <line:116:11, col:37> col:37 __param 'const struct sched_param *'
| `-NoThrowAttr 0x560ee5d07640 <col:62>
|-FunctionDecl 0x560ee5d077b8 <line:117:1, col:86> col:12 sched_getscheduler 'int (__pid_t)' extern
| |-ParmVarDecl 0x560ee5d076a8 <col:32, col:40> col:40 __pid '__pid_t':'int'
| `-NoThrowAttr 0x560ee5d07860 <col:63>
|-FunctionDecl 0x560ee5d07988 <line:118:1, col:70> col:12 sched_yield 'int (void)' extern
| `-NoThrowAttr 0x560ee5d07a28 <col:47>
|-FunctionDecl 0x560ee5d07b30 <line:119:1, col:92> col:12 sched_get_priority_max 'int (int)' extern
| |-ParmVarDecl 0x560ee5d07a98 <col:36, col:40> col:40 __algorithm 'int'
| `-NoThrowAttr 0x560ee5d07bd8 <col:69>
|-FunctionDecl 0x560ee5d07ce0 <line:120:1, col:92> col:12 sched_get_priority_min 'int (int)' extern
| |-ParmVarDecl 0x560ee5d07c48 <col:36, col:40> col:40 __algorithm 'int'
| `-NoThrowAttr 0x560ee5d07d88 <col:69>
|-FunctionDecl 0x560ee5d08048 <line:121:1, col:111> col:12 sched_rr_get_interval 'int (__pid_t, struct timespec *)' extern
| |-ParmVarDecl 0x560ee5d07df0 <col:35, col:43> col:43 __pid '__pid_t':'int'
| |-ParmVarDecl 0x560ee5d07f28 <col:50, col:67> col:67 __t 'struct timespec *'
| `-NoThrowAttr 0x560ee5d080f8 <col:88>
|-TypedefDecl 0x560ee5d08188 <line:125:1, col:19> col:19 referenced clock_t '__clock_t':'long'
| `-TypedefType 0x560ee5d08150 '__clock_t' sugar
|   |-Typedef 0x560ee5d02548 '__clock_t'
|   `-BuiltinType 0x560ee5c9af30 'long'
|-TypedefDecl 0x560ee5d08218 <line:128:1, col:21> col:21 referenced clockid_t '__clockid_t':'int'
| `-TypedefType 0x560ee5d081e0 '__clockid_t' sugar
|   |-Typedef 0x560ee5d02938 '__clockid_t'
|   `-BuiltinType 0x560ee5c9af10 'int'
|-TypedefDecl 0x560ee5d082a8 <line:129:1, col:19> col:19 referenced timer_t '__timer_t':'void *'
| `-TypedefType 0x560ee5d08270 '__timer_t' sugar
|   |-Typedef 0x560ee5d029a8 '__timer_t'
|   `-PointerType 0x560ee5c9b630 'void *'
|     `-BuiltinType 0x560ee5c9ae70 'void'
|-RecordDecl 0x560ee5d08300 <line:131:1, line:144:1> line:131:8 struct tm definition
| |-FieldDecl 0x560ee5d083d8 <line:133:3, col:7> col:7 tm_sec 'int'
| |-FieldDecl 0x560ee5d08440 <line:134:3, col:7> col:7 tm_min 'int'
| |-FieldDecl 0x560ee5d084a8 <line:135:3, col:7> col:7 tm_hour 'int'
| |-FieldDecl 0x560ee5d08510 <line:136:3, col:7> col:7 tm_mday 'int'
| |-FieldDecl 0x560ee5d08578 <line:137:3, col:7> col:7 tm_mon 'int'
| |-FieldDecl 0x560ee5d085e0 <line:138:3, col:7> col:7 tm_year 'int'
| |-FieldDecl 0x560ee5d08648 <line:139:3, col:7> col:7 tm_wday 'int'
| |-FieldDecl 0x560ee5d086b0 <line:140:3, col:7> col:7 tm_yday 'int'
| |-FieldDecl 0x560ee5d08718 <line:141:3, col:7> col:7 tm_isdst 'int'
| |-FieldDecl 0x560ee5d08780 <line:142:3, col:12> col:12 tm_gmtoff 'long'
| `-FieldDecl 0x560ee5d087e8 <line:143:3, col:15> col:15 tm_zone 'const char *'
|-RecordDecl 0x560ee5d08838 <line:147:1, line:151:3> line:147:8 struct itimerspec definition
| |-FieldDecl 0x560ee5d08908 <line:149:5, col:21> col:21 it_interval 'struct timespec':'struct timespec'
| `-FieldDecl 0x560ee5d08978 <line:150:5, col:21> col:21 it_value 'struct timespec':'struct timespec'
|-RecordDecl 0x560ee5d08a20 <line:152:1, col:8> col:8 struct sigevent
|-FunctionDecl 0x560ee5d08bf0 <line:154:1, col:68> col:16 clock 'clock_t (void)' extern
| `-NoThrowAttr 0x560ee5d08c90 <col:45>
|-FunctionDecl 0x560ee5d08e70 <line:155:1, col:77> col:15 time 'time_t (time_t *)' extern
| |-ParmVarDecl 0x560ee5d08d60 <col:21, col:29> col:29 __timer 'time_t *'
| `-NoThrowAttr 0x560ee5d08f18 <col:54>
|-FunctionDecl 0x560ee5d09118 <line:156:1, line:157:73> line:156:15 difftime 'double (time_t, time_t)' extern
| |-ParmVarDecl 0x560ee5d08f80 <col:25, col:32> col:32 __time1 'time_t':'long'
| |-ParmVarDecl 0x560ee5d08ff8 <col:41, col:48> col:48 __time0 'time_t':'long'
| |-NoThrowAttr 0x560ee5d091c8 <line:157:22>
| `-ConstAttr 0x560ee5d09220 <col:63>
|-FunctionDecl 0x560ee5d0a050 <line:158:1, col:79> col:15 mktime 'time_t (struct tm *)' extern
| |-ParmVarDecl 0x560ee5d09318 <col:23, col:34> col:34 __tp 'struct tm *'
| `-NoThrowAttr 0x560ee5d0a0f8 <col:56>
|-FunctionDecl 0x560ee5d0a4a0 <line:159:1, line:161:77> line:159:15 strftime 'size_t (char *restrict, size_t, const char *restrict, const struct tm *restrict)' extern
| |-ParmVarDecl 0x560ee5d0a168 <col:25, col:42> col:42 __s 'char *restrict'
| |-ParmVarDecl 0x560ee5d0a1e0 <col:47, col:54> col:54 __maxsize 'size_t':'unsigned long'
| |-ParmVarDecl 0x560ee5d0a260 <line:160:4, col:27> col:27 __format 'const char *restrict'
| |-ParmVarDecl 0x560ee5d0a358 <line:161:4, col:32> col:32 __tp 'const struct tm *restrict'
| `-NoThrowAttr 0x560ee5d0a560 <col:54>
|-RecordDecl 0x560ee5d0a5b8 <line:163:9, line:170:1> line:163:16 struct __locale_struct definition
| |-RecordDecl 0x560ee5d0a668 parent 0x560ee5c9ae18 <line:165:3, col:10> col:10 struct __locale_data
| |-FieldDecl 0x560ee5d0a8c8 <col:3, col:37> col:25 __locales 'struct __locale_data *[13]'
| |-FieldDecl 0x560ee5d0a968 <line:166:3, col:29> col:29 __ctype_b 'const unsigned short *'
| |-FieldDecl 0x560ee5d0a9d0 <line:167:3, col:14> col:14 __ctype_tolower 'const int *'
| |-FieldDecl 0x560ee5d0aa38 <line:168:3, col:14> col:14 __ctype_toupper 'const int *'
| `-FieldDecl 0x560ee5d0ab28 <line:169:3, col:25> col:15 __names 'const char *[13]'
|-TypedefDecl 0x560ee5d0ac48 <line:163:1, line:170:4> col:4 referenced __locale_t 'struct __locale_struct *'
| `-PointerType 0x560ee5d0abf0 'struct __locale_struct *'
|   `-ElaboratedType 0x560ee5d0ab80 'struct __locale_struct' sugar
|     `-RecordType 0x560ee5d0a640 'struct __locale_struct'
|       `-Record 0x560ee5d0a5b8 '__locale_struct'
|-TypedefDecl 0x560ee5d0acf8 <line:171:1, col:20> col:20 locale_t '__locale_t':'struct __locale_struct *'
| `-TypedefType 0x560ee5d0acc0 '__locale_t' sugar
|   |-Typedef 0x560ee5d0ac48 '__locale_t'
|   `-PointerType 0x560ee5d0abf0 'struct __locale_struct *'
|     `-ElaboratedType 0x560ee5d0ab80 'struct __locale_struct' sugar
|       `-RecordType 0x560ee5d0a640 'struct __locale_struct'
|         `-Record 0x560ee5d0a5b8 '__locale_struct'
|-FunctionDecl 0x560ee5d0c110 <line:172:1, line:175:63> line:172:15 strftime_l 'size_t (char *restrict, size_t, const char *restrict, const struct tm *restrict, __locale_t)' extern
| |-ParmVarDecl 0x560ee5d0ad68 <col:27, col:44> col:44 __s 'char *restrict'
| |-ParmVarDecl 0x560ee5d0ade0 <col:49, col:56> col:56 __maxsize 'size_t':'unsigned long'
| |-ParmVarDecl 0x560ee5d0ae60 <line:173:6, col:29> col:29 __format 'const char *restrict'
| |-ParmVarDecl 0x560ee5d0aef0 <line:174:6, col:34> col:34 __tp 'const struct tm *restrict'
| |-ParmVarDecl 0x560ee5d0af68 <line:175:6, col:17> col:17 __loc '__locale_t':'struct __locale_struct *'
| `-NoThrowAttr 0x560ee5d0c1d8 <col:40>
|-FunctionDecl 0x560ee5d0c3c8 <line:177:1, col:89> col:19 gmtime 'struct tm *(const time_t *)' extern
| |-ParmVarDecl 0x560ee5d0c2a0 <col:27, col:41> col:41 __timer 'const time_t *'
| `-NoThrowAttr 0x560ee5d0c470 <col:66>
|-FunctionDecl 0x560ee5d0c580 <line:178:1, col:92> col:19 localtime 'struct tm *(const time_t *)' extern
| |-ParmVarDecl 0x560ee5d0c4d8 <col:30, col:44> col:44 __timer 'const time_t *'
| `-NoThrowAttr 0x560ee5d0c628 <col:69>
|-FunctionDecl 0x560ee5d0c858 <line:180:1, line:181:75> line:180:19 gmtime_r 'struct tm *(const time_t *restrict, struct tm *restrict)' extern
| |-ParmVarDecl 0x560ee5d0c690 <col:29, col:54> col:54 __timer 'const time_t *restrict'
| |-ParmVarDecl 0x560ee5d0c720 <line:181:8, col:30> col:30 __tp 'struct tm *restrict'
| `-NoThrowAttr 0x560ee5d0c908 <col:52>
|-FunctionDecl 0x560ee5d0cab0 <line:182:1, line:183:78> line:182:19 localtime_r 'struct tm *(const time_t *restrict, struct tm *restrict)' extern
| |-ParmVarDecl 0x560ee5d0c970 <col:32, col:57> col:57 __timer 'const time_t *restrict'
| |-ParmVarDecl 0x560ee5d0ca00 <line:183:11, col:33> col:33 __tp 'struct tm *restrict'
| `-NoThrowAttr 0x560ee5d0cb60 <col:55>
|-FunctionDecl 0x560ee5d0ccf8 <line:185:1, col:85> col:14 asctime 'char *(const struct tm *)' extern
| |-ParmVarDecl 0x560ee5d0cbe0 <col:23, col:40> col:40 __tp 'const struct tm *'
| `-NoThrowAttr 0x560ee5d0cda0 <col:62>
|-FunctionDecl 0x560ee5d0cf18 <line:186:1, col:83> col:14 ctime 'char *(const time_t *)' extern
| |-ParmVarDecl 0x560ee5d0ce08 <col:21, col:35> col:35 __timer 'const time_t *'
| `-NoThrowAttr 0x560ee5d0cfc0 <col:60>
|-FunctionDecl 0x560ee5d0d2b8 <line:188:1, line:189:67> line:188:14 asctime_r 'char *(const struct tm *restrict, char *restrict)' extern
| |-ParmVarDecl 0x560ee5d0d118 <col:25, col:53> col:53 __tp 'const struct tm *restrict'
| |-ParmVarDecl 0x560ee5d0d198 <line:189:4, col:21> col:21 __buf 'char *restrict'
| `-NoThrowAttr 0x560ee5d0d368 <col:44>
|-FunctionDecl 0x560ee5d0d578 <line:190:1, line:191:72> line:190:14 ctime_r 'char *(const time_t *restrict, char *restrict)' extern
| |-ParmVarDecl 0x560ee5d0d3d0 <col:23, col:48> col:48 __timer 'const time_t *restrict'
| |-ParmVarDecl 0x560ee5d0d450 <line:191:9, col:26> col:26 __buf 'char *restrict'
| `-NoThrowAttr 0x560ee5d0d628 <col:49>
|-VarDecl 0x560ee5d0d728 <line:192:1, col:24> col:14 __tzname 'char *[2]' extern
|-VarDecl 0x560ee5d0d7a8 <line:193:1, col:12> col:12 __daylight 'int' extern
|-VarDecl 0x560ee5d0d828 <line:194:1, col:17> col:17 __timezone 'long' extern
|-VarDecl 0x560ee5d0d8f0 <line:195:1, col:22> col:14 tzname 'char *[2]' extern
|-FunctionDecl 0x560ee5d0da20 <line:196:1, col:65> col:13 tzset 'void (void)' extern
| `-NoThrowAttr 0x560ee5d0dac0 <col:42>
|-VarDecl 0x560ee5d0db30 <line:197:1, col:12> col:12 daylight 'int' extern
|-VarDecl 0x560ee5d0dbb0 <line:198:1, col:17> col:17 timezone 'long' extern
|-FunctionDecl 0x560ee5d0dd38 <line:199:1, col:80> col:12 stime 'int (const time_t *)' extern
| |-ParmVarDecl 0x560ee5d0dc28 <col:19, col:33> col:33 __when 'const time_t *'
| `-NoThrowAttr 0x560ee5d0dde0 <col:57>
|-FunctionDecl 0x560ee5d0def0 <line:200:1, col:79> col:15 timegm 'time_t (struct tm *)' extern
| |-ParmVarDecl 0x560ee5d0de60 <col:23, col:34> col:34 __tp 'struct tm *'
| `-NoThrowAttr 0x560ee5d0df98 <col:56>
|-FunctionDecl 0x560ee5d0e0d0 <line:201:1, col:82> col:15 timelocal 'time_t (struct tm *)' extern
| |-ParmVarDecl 0x560ee5d0e018 <col:26, col:37> col:37 __tp 'struct tm *'
| `-NoThrowAttr 0x560ee5d0e178 <col:59>
|-FunctionDecl 0x560ee5d0e280 <line:202:1, col:99> col:12 dysize 'int (int)' extern
| |-ParmVarDecl 0x560ee5d0e1e8 <col:20, col:24> col:24 __year 'int'
| |-NoThrowAttr 0x560ee5d0e328 <col:48>
| `-ConstAttr 0x560ee5d0e380 <col:89>
|-FunctionDecl 0x560ee5d0e5e8 <line:203:1, line:204:37> line:203:12 nanosleep 'int (const struct timespec *, struct timespec *)' extern
| |-ParmVarDecl 0x560ee5d0e438 <col:23, col:46> col:46 __requested_time 'const struct timespec *'
| `-ParmVarDecl 0x560ee5d0e4c8 <line:204:9, col:26> col:26 __remaining 'struct timespec *'
|-FunctionDecl 0x560ee5d0e848 <line:205:1, col:111> col:12 clock_getres 'int (clockid_t, struct timespec *)' extern
| |-ParmVarDecl 0x560ee5d0e6d8 <col:26, col:36> col:36 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x560ee5d0e768 <col:48, col:65> col:65 __res 'struct timespec *'
| `-NoThrowAttr 0x560ee5d0e8f8 <col:88>
|-FunctionDecl 0x560ee5d0ea90 <line:206:1, col:111> col:12 clock_gettime 'int (clockid_t, struct timespec *)' extern
| |-ParmVarDecl 0x560ee5d0e960 <col:27, col:37> col:37 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x560ee5d0e9f0 <col:49, col:66> col:66 __tp 'struct timespec *'
| `-NoThrowAttr 0x560ee5d0eb40 <col:88>
|-FunctionDecl 0x560ee5d0ed58 <line:207:1, line:208:45> line:207:12 clock_settime 'int (clockid_t, const struct timespec *)' extern
| |-ParmVarDecl 0x560ee5d0eba8 <col:27, col:37> col:37 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x560ee5d0ec38 <col:49, col:72> col:72 __tp 'const struct timespec *'
| `-NoThrowAttr 0x560ee5d0ee08 <line:208:22>
|-FunctionDecl 0x560ee5d0f178 <line:209:1, line:211:30> line:209:12 clock_nanosleep 'int (clockid_t, int, const struct timespec *, struct timespec *)' extern
| |-ParmVarDecl 0x560ee5d0ee70 <col:29, col:39> col:39 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x560ee5d0eef0 <col:51, col:55> col:55 __flags 'int'
| |-ParmVarDecl 0x560ee5d0ef80 <line:210:8, col:31> col:31 __req 'const struct timespec *'
| `-ParmVarDecl 0x560ee5d0f010 <line:211:8, col:25> col:25 __rem 'struct timespec *'
|-FunctionDecl 0x560ee5d0f478 <line:212:1, col:108> col:12 clock_getcpuclockid 'int (pid_t, clockid_t *)' extern
| |-ParmVarDecl 0x560ee5d0f278 <col:33, col:39> col:39 __pid 'pid_t':'int'
| |-ParmVarDecl 0x560ee5d0f350 <col:46, col:57> col:57 __clock_id 'clockid_t *'
| `-NoThrowAttr 0x560ee5d0f528 <col:85>
|-FunctionDecl 0x560ee5d0f918 <line:213:1, line:215:75> line:213:12 timer_create 'int (clockid_t, struct sigevent *restrict, timer_t *restrict)' extern
| |-ParmVarDecl 0x560ee5d0f590 <col:26, col:36> col:36 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x560ee5d0f6c8 <line:214:5, col:33> col:33 __evp 'struct sigevent *restrict'
| |-ParmVarDecl 0x560ee5d0f7d0 <line:215:5, col:25> col:25 __timerid 'timer_t *restrict'
| `-NoThrowAttr 0x560ee5d0f9d0 <col:52>
|-FunctionDecl 0x560ee5d0fb48 <line:216:1, col:84> col:12 timer_delete 'int (timer_t)' extern
| |-ParmVarDecl 0x560ee5d0fa38 <col:26, col:34> col:34 __timerid 'timer_t':'void *'
| `-NoThrowAttr 0x560ee5d0fbf0 <col:61>
|-FunctionDecl 0x560ee5d100f0 <line:217:1, line:219:85> line:217:12 timer_settime 'int (timer_t, int, const struct itimerspec *restrict, struct itimerspec *restrict)' extern
| |-ParmVarDecl 0x560ee5d0fc58 <col:27, col:35> col:35 __timerid 'timer_t':'void *'
| |-ParmVarDecl 0x560ee5d0fcd8 <col:46, col:50> col:50 __flags 'int'
| |-ParmVarDecl 0x560ee5d0fe08 <line:218:6, col:42> col:42 __value 'const struct itimerspec *restrict'
| |-ParmVarDecl 0x560ee5d0fef8 <line:219:6, col:36> col:36 __ovalue 'struct itimerspec *restrict'
| `-NoThrowAttr 0x560ee5d101b0 <col:62>
|-FunctionDecl 0x560ee5d103c8 <line:220:1, line:221:45> line:220:12 timer_gettime 'int (timer_t, struct itimerspec *)' extern
| |-ParmVarDecl 0x560ee5d10218 <col:27, col:35> col:35 __timerid 'timer_t':'void *'
| |-ParmVarDecl 0x560ee5d102a8 <col:46, col:65> col:65 __value 'struct itimerspec *'
| `-NoThrowAttr 0x560ee5d10478 <line:221:22>
|-FunctionDecl 0x560ee5d10578 <line:222:1, col:88> col:12 timer_getoverrun 'int (timer_t)' extern
| |-ParmVarDecl 0x560ee5d104e0 <col:30, col:38> col:38 __timerid 'timer_t':'void *'
| `-NoThrowAttr 0x560ee5d10620 <col:65>
|-TypedefDecl 0x560ee5d10690 <line:224:1, col:27> col:27 referenced pthread_t 'unsigned long'
| `-BuiltinType 0x560ee5c9afd0 'unsigned long'
|-RecordDecl 0x560ee5d106e8 <line:225:1, line:229:1> line:225:7 union pthread_attr_t definition
| |-FieldDecl 0x560ee5d10830 <line:227:3, col:17> col:8 __size 'char [56]'
| `-FieldDecl 0x560ee5d10898 <line:228:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x560ee5d10948 <line:230:1, col:30> col:30 referenced pthread_attr_t 'union pthread_attr_t':'union pthread_attr_t'
| `-ElaboratedType 0x560ee5d108f0 'union pthread_attr_t' sugar
|   `-RecordType 0x560ee5d10770 'union pthread_attr_t'
|     `-Record 0x560ee5d106e8 'pthread_attr_t'
|-RecordDecl 0x560ee5d109a0 <line:231:9, line:235:1> line:231:16 struct __pthread_internal_list definition
| |-FieldDecl 0x560ee5d10b18 <line:233:3, col:35> col:35 __prev 'struct __pthread_internal_list *'
| `-FieldDecl 0x560ee5d10b90 <line:234:3, col:35> col:35 __next 'struct __pthread_internal_list *'
|-TypedefDecl 0x560ee5d10c40 <line:231:1, line:235:3> col:3 referenced __pthread_list_t 'struct __pthread_internal_list':'struct __pthread_internal_list'
| `-ElaboratedType 0x560ee5d10be0 'struct __pthread_internal_list' sugar
|   `-RecordType 0x560ee5d10a20 'struct __pthread_internal_list'
|     `-Record 0x560ee5d109a0 '__pthread_internal_list'
|-RecordDecl 0x560ee5d10cb0 <line:236:9, line:250:1> line:236:9 union definition
| |-RecordDecl 0x560ee5d10d58 parent 0x560ee5c9ae18 <line:238:3, line:247:3> line:238:10 struct __pthread_mutex_s definition
| | |-FieldDecl 0x560ee5d10e30 <line:240:5, col:9> col:9 __lock 'int'
| | |-FieldDecl 0x560ee5d10e98 <line:241:5, col:18> col:18 __count 'unsigned int'
| | |-FieldDecl 0x560ee5d10f00 <line:242:5, col:9> col:9 __owner 'int'
| | |-FieldDecl 0x560ee5d10f68 <line:243:5, col:18> col:18 __nusers 'unsigned int'
| | |-FieldDecl 0x560ee5d10fd0 <line:244:5, col:9> col:9 __kind 'int'
| | |-FieldDecl 0x560ee5d11038 <line:245:5, col:9> col:9 __spins 'int'
| | `-FieldDecl 0x560ee5d15110 <line:246:5, col:22> col:22 __list '__pthread_list_t':'struct __pthread_internal_list'
| |-FieldDecl 0x560ee5d151c0 <line:238:3, line:247:5> col:5 __data 'struct __pthread_mutex_s':'struct __pthread_mutex_s'
| |-FieldDecl 0x560ee5d152b0 <line:248:3, col:17> col:8 __size 'char [40]'
| `-FieldDecl 0x560ee5d15318 <line:249:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x560ee5d154a0 <line:236:1, line:250:3> col:3 referenced pthread_mutex_t 'union pthread_mutex_t':'pthread_mutex_t'
| `-ElaboratedType 0x560ee5d15440 'union pthread_mutex_t' sugar
|   `-RecordType 0x560ee5d10d30 'pthread_mutex_t'
|     `-Record 0x560ee5d10cb0 ''
|-RecordDecl 0x560ee5d15510 <line:251:9, line:255:1> line:251:9 union definition
| |-FieldDecl 0x560ee5d15650 <line:253:3, col:16> col:8 __size 'char [4]'
| `-FieldDecl 0x560ee5d156b8 <line:254:3, col:7> col:7 __align 'int'
|-TypedefDecl 0x560ee5d15770 <line:251:1, line:255:3> col:3 referenced pthread_mutexattr_t 'union pthread_mutexattr_t':'pthread_mutexattr_t'
| `-ElaboratedType 0x560ee5d15710 'union pthread_mutexattr_t' sugar
|   `-RecordType 0x560ee5d15590 'pthread_mutexattr_t'
|     `-Record 0x560ee5d15510 ''
|-RecordDecl 0x560ee5d157e0 <line:256:9, line:271:1> line:256:9 union definition
| |-RecordDecl 0x560ee5d15888 <line:258:3, line:268:3> line:258:3 struct definition
| | |-FieldDecl 0x560ee5d15950 <line:260:5, col:9> col:9 __lock 'int'
| | |-FieldDecl 0x560ee5d159b8 <line:261:5, col:18> col:18 __futex 'unsigned int'
| | |-FieldDecl 0x560ee5d15a20 <line:262:19, col:42> col:42 __total_seq 'unsigned long long'
| | |-FieldDecl 0x560ee5d15a88 <line:263:19, col:42> col:42 __wakeup_seq 'unsigned long long'
| | |-FieldDecl 0x560ee5d15af0 <line:264:19, col:42> col:42 __woken_seq 'unsigned long long'
| | |-FieldDecl 0x560ee5d15b58 <line:265:5, col:11> col:11 __mutex 'void *'
| | |-FieldDecl 0x560ee5d15bc0 <line:266:5, col:18> col:18 __nwaiters 'unsigned int'
| | `-FieldDecl 0x560ee5d15c28 <line:267:5, col:18> col:18 __broadcast_seq 'unsigned int'
| |-FieldDecl 0x560ee5d15ce0 <line:258:3, line:268:5> col:5 __data 'struct (anonymous struct at ./split_9/safe003_rmo.oepc_false-unreach-call.i:258:3)':'struct pthread_cond_t::(anonymous at ./split_9/safe003_rmo.oepc_false-unreach-call.i:258:3)'
| |-FieldDecl 0x560ee5d15dd0 <line:269:3, col:17> col:8 __size 'char [48]'
| `-FieldDecl 0x560ee5d15e38 <line:270:17, col:31> col:31 __align 'long long'
|-TypedefDecl 0x560ee5d15f70 <line:256:1, line:271:3> col:3 referenced pthread_cond_t 'union pthread_cond_t':'pthread_cond_t'
| `-ElaboratedType 0x560ee5d15f10 'union pthread_cond_t' sugar
|   `-RecordType 0x560ee5d15860 'pthread_cond_t'
|     `-Record 0x560ee5d157e0 ''
|-RecordDecl 0x560ee5d15fe0 <line:272:9, line:276:1> line:272:9 union definition
| |-FieldDecl 0x560ee5d17130 <line:274:3, col:16> col:8 __size 'char [4]'
| `-FieldDecl 0x560ee5d17198 <line:275:3, col:7> col:7 __align 'int'
|-TypedefDecl 0x560ee5d17250 <line:272:1, line:276:3> col:3 referenced pthread_condattr_t 'union pthread_condattr_t':'pthread_condattr_t'
| `-ElaboratedType 0x560ee5d171f0 'union pthread_condattr_t' sugar
|   `-RecordType 0x560ee5d16060 'pthread_condattr_t'
|     `-Record 0x560ee5d15fe0 ''
|-TypedefDecl 0x560ee5d172d8 <line:277:1, col:22> col:22 referenced pthread_key_t 'unsigned int'
| `-BuiltinType 0x560ee5c9afb0 'unsigned int'
|-TypedefDecl 0x560ee5d17348 <line:278:1, col:13> col:13 referenced pthread_once_t 'int'
| `-BuiltinType 0x560ee5c9af10 'int'
|-RecordDecl 0x560ee5d173a0 <line:279:9, line:297:1> line:279:9 union definition
| |-RecordDecl 0x560ee5d17448 <line:281:3, line:294:3> line:281:3 struct definition
| | |-FieldDecl 0x560ee5d17510 <line:283:5, col:9> col:9 __lock 'int'
| | |-FieldDecl 0x560ee5d17578 <line:284:5, col:18> col:18 __nr_readers 'unsigned int'
| | |-FieldDecl 0x560ee5d175e0 <line:285:5, col:18> col:18 __readers_wakeup 'unsigned int'
| | |-FieldDecl 0x560ee5d17648 <line:286:5, col:18> col:18 __writer_wakeup 'unsigned int'
| | |-FieldDecl 0x560ee5d176b0 <line:287:5, col:18> col:18 __nr_readers_queued 'unsigned int'
| | |-FieldDecl 0x560ee5d17718 <line:288:5, col:18> col:18 __nr_writers_queued 'unsigned int'
| | |-FieldDecl 0x560ee5d17780 <line:289:5, col:9> col:9 __writer 'int'
| | |-FieldDecl 0x560ee5d177e8 <line:290:5, col:9> col:9 __shared 'int'
| | |-FieldDecl 0x560ee5d17850 <line:291:5, col:23> col:23 __pad1 'unsigned long'
| | |-FieldDecl 0x560ee5d178b8 <line:292:5, col:23> col:23 __pad2 'unsigned long'
| | `-FieldDecl 0x560ee5d17920 <line:293:5, col:18> col:18 __flags 'unsigned int'
| |-FieldDecl 0x560ee5d179d0 <line:281:3, line:294:5> col:5 __data 'struct (anonymous struct at ./split_9/safe003_rmo.oepc_false-unreach-call.i:281:3)':'struct pthread_rwlock_t::(anonymous at ./split_9/safe003_rmo.oepc_false-unreach-call.i:281:3)'
| |-FieldDecl 0x560ee5d17a78 <line:295:3, col:17> col:8 __size 'char [56]'
| `-FieldDecl 0x560ee5d17ae0 <line:296:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x560ee5d17c30 <line:279:1, line:297:3> col:3 referenced pthread_rwlock_t 'union pthread_rwlock_t':'pthread_rwlock_t'
| `-ElaboratedType 0x560ee5d17bd0 'union pthread_rwlock_t' sugar
|   `-RecordType 0x560ee5d17420 'pthread_rwlock_t'
|     `-Record 0x560ee5d173a0 ''
|-RecordDecl 0x560ee5d17ca0 <line:298:9, line:302:1> line:298:9 union definition
| |-FieldDecl 0x560ee5d17de0 <line:300:3, col:16> col:8 __size 'char [8]'
| `-FieldDecl 0x560ee5d17e48 <line:301:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x560ee5d17f00 <line:298:1, line:302:3> col:3 referenced pthread_rwlockattr_t 'union pthread_rwlockattr_t':'pthread_rwlockattr_t'
| `-ElaboratedType 0x560ee5d17ea0 'union pthread_rwlockattr_t' sugar
|   `-RecordType 0x560ee5d17d20 'pthread_rwlockattr_t'
|     `-Record 0x560ee5d17ca0 ''
|-TypedefDecl 0x560ee5d17f88 <line:303:1, col:22> col:22 referenced pthread_spinlock_t 'volatile int'
| `-QualType 0x560ee5c9af14 'volatile int' volatile
|   `-BuiltinType 0x560ee5c9af10 'int'
|-RecordDecl 0x560ee5d17fe0 <line:304:9, line:308:1> line:304:9 union definition
| |-FieldDecl 0x560ee5d19140 <line:306:3, col:17> col:8 __size 'char [32]'
| `-FieldDecl 0x560ee5d191a8 <line:307:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x560ee5d19260 <line:304:1, line:308:3> col:3 referenced pthread_barrier_t 'union pthread_barrier_t':'pthread_barrier_t'
| `-ElaboratedType 0x560ee5d19200 'union pthread_barrier_t' sugar
|   `-RecordType 0x560ee5d18060 'pthread_barrier_t'
|     `-Record 0x560ee5d17fe0 ''
|-RecordDecl 0x560ee5d192d0 <line:309:9, line:313:1> line:309:9 union definition
| |-FieldDecl 0x560ee5d193d0 <line:311:3, col:16> col:8 __size 'char [4]'
| `-FieldDecl 0x560ee5d19438 <line:312:3, col:7> col:7 __align 'int'
|-TypedefDecl 0x560ee5d194f0 <line:309:1, line:313:3> col:3 referenced pthread_barrierattr_t 'union pthread_barrierattr_t':'pthread_barrierattr_t'
| `-ElaboratedType 0x560ee5d19490 'union pthread_barrierattr_t' sugar
|   `-RecordType 0x560ee5d19350 'pthread_barrierattr_t'
|     `-Record 0x560ee5d192d0 ''
|-TypedefDecl 0x560ee5d19608 <line:314:1, col:29> col:18 referenced __jmp_buf 'long [8]'
| `-ConstantArrayType 0x560ee5d195a0 'long [8]' 8 
|   `-BuiltinType 0x560ee5c9af30 'long'
|-EnumDecl 0x560ee5d19660 <line:315:1, line:319:1> line:315:1
| |-EnumConstantDecl 0x560ee5d19728 <line:317:3> col:3 PTHREAD_CREATE_JOINABLE 'int'
| `-EnumConstantDecl 0x560ee5d19778 <line:318:3> col:3 PTHREAD_CREATE_DETACHED 'int'
|-EnumDecl 0x560ee5d197c8 <line:320:1, line:331:1> line:320:1
| |-EnumConstantDecl 0x560ee5d19898 <line:322:3> col:3 referenced PTHREAD_MUTEX_TIMED_NP 'int'
| |-EnumConstantDecl 0x560ee5d198e8 <line:323:3> col:3 referenced PTHREAD_MUTEX_RECURSIVE_NP 'int'
| |-EnumConstantDecl 0x560ee5d19938 <line:324:3> col:3 referenced PTHREAD_MUTEX_ERRORCHECK_NP 'int'
| |-EnumConstantDecl 0x560ee5d19988 <line:325:3> col:3 PTHREAD_MUTEX_ADAPTIVE_NP 'int'
| |-EnumConstantDecl 0x560ee5d19a10 <line:327:3, col:26> col:3 referenced PTHREAD_MUTEX_NORMAL 'int'
| | `-ConstantExpr 0x560ee5d199f8 <col:26> 'int'
| |   `-DeclRefExpr 0x560ee5d199d8 <col:26> 'int' EnumConstant 0x560ee5d19898 'PTHREAD_MUTEX_TIMED_NP' 'int'
| |-EnumConstantDecl 0x560ee5d19a98 <line:328:3, col:29> col:3 PTHREAD_MUTEX_RECURSIVE 'int'
| | `-ConstantExpr 0x560ee5d19a80 <col:29> 'int'
| |   `-DeclRefExpr 0x560ee5d19a60 <col:29> 'int' EnumConstant 0x560ee5d198e8 'PTHREAD_MUTEX_RECURSIVE_NP' 'int'
| |-EnumConstantDecl 0x560ee5d19b20 <line:329:3, col:30> col:3 PTHREAD_MUTEX_ERRORCHECK 'int'
| | `-ConstantExpr 0x560ee5d19b08 <col:30> 'int'
| |   `-DeclRefExpr 0x560ee5d19ae8 <col:30> 'int' EnumConstant 0x560ee5d19938 'PTHREAD_MUTEX_ERRORCHECK_NP' 'int'
| `-EnumConstantDecl 0x560ee5d19ba8 <line:330:3, col:27> col:3 PTHREAD_MUTEX_DEFAULT 'int'
|   `-ConstantExpr 0x560ee5d19b90 <col:27> 'int'
|     `-DeclRefExpr 0x560ee5d19b70 <col:27> 'int' EnumConstant 0x560ee5d19a10 'PTHREAD_MUTEX_NORMAL' 'int'
|-EnumDecl 0x560ee5d19bf8 <line:332:1, line:338:1> line:332:1
| |-EnumConstantDecl 0x560ee5d19cc8 <line:334:3> col:3 referenced PTHREAD_MUTEX_STALLED 'int'
| |-EnumConstantDecl 0x560ee5d19d50 <line:335:3, col:30> col:3 PTHREAD_MUTEX_STALLED_NP 'int'
| | `-ConstantExpr 0x560ee5d19d38 <col:30> 'int'
| |   `-DeclRefExpr 0x560ee5d19d18 <col:30> 'int' EnumConstant 0x560ee5d19cc8 'PTHREAD_MUTEX_STALLED' 'int'
| |-EnumConstantDecl 0x560ee5d19da0 <line:336:3> col:3 referenced PTHREAD_MUTEX_ROBUST 'int'
| `-EnumConstantDecl 0x560ee5d19e28 <line:337:3, col:29> col:3 PTHREAD_MUTEX_ROBUST_NP 'int'
|   `-ConstantExpr 0x560ee5d19e10 <col:29> 'int'
|     `-DeclRefExpr 0x560ee5d19df0 <col:29> 'int' EnumConstant 0x560ee5d19da0 'PTHREAD_MUTEX_ROBUST' 'int'
|-EnumDecl 0x560ee5d19e78 <line:339:1, line:344:1> line:339:1
| |-EnumConstantDecl 0x560ee5d19f48 <line:341:3> col:3 PTHREAD_PRIO_NONE 'int'
| |-EnumConstantDecl 0x560ee5d19f98 <line:342:3> col:3 PTHREAD_PRIO_INHERIT 'int'
| `-EnumConstantDecl 0x560ee5d19fe8 <line:343:3> col:3 PTHREAD_PRIO_PROTECT 'int'
|-EnumDecl 0x560ee5d1a038 <line:345:1, line:351:1> line:345:1
| |-EnumConstantDecl 0x560ee5d1a150 <line:347:3> col:3 referenced PTHREAD_RWLOCK_PREFER_READER_NP 'int'
| |-EnumConstantDecl 0x560ee5d1a1a0 <line:348:3> col:3 PTHREAD_RWLOCK_PREFER_WRITER_NP 'int'
| |-EnumConstantDecl 0x560ee5d1a1f0 <line:349:3> col:3 PTHREAD_RWLOCK_PREFER_WRITER_NONRECURSIVE_NP 'int'
| `-EnumConstantDecl 0x560ee5d1a278 <line:350:3, col:31> col:3 PTHREAD_RWLOCK_DEFAULT_NP 'int'
|   `-ConstantExpr 0x560ee5d1a260 <col:31> 'int'
|     `-DeclRefExpr 0x560ee5d1a240 <col:31> 'int' EnumConstant 0x560ee5d1a150 'PTHREAD_RWLOCK_PREFER_READER_NP' 'int'
|-EnumDecl 0x560ee5d1a2c8 <line:352:1, line:356:1> line:352:1
| |-EnumConstantDecl 0x560ee5d1a398 <line:354:3> col:3 PTHREAD_INHERIT_SCHED 'int'
| `-EnumConstantDecl 0x560ee5d1a3e8 <line:355:3> col:3 PTHREAD_EXPLICIT_SCHED 'int'
|-EnumDecl 0x560ee5d1a438 <line:357:1, line:361:1> line:357:1
| |-EnumConstantDecl 0x560ee5d1a508 <line:359:3> col:3 PTHREAD_SCOPE_SYSTEM 'int'
| `-EnumConstantDecl 0x560ee5d1a558 <line:360:3> col:3 PTHREAD_SCOPE_PROCESS 'int'
|-EnumDecl 0x560ee5d1a5a8 <line:362:1, line:366:1> line:362:1
| |-EnumConstantDecl 0x560ee5d1a678 <line:364:3> col:3 PTHREAD_PROCESS_PRIVATE 'int'
| `-EnumConstantDecl 0x560ee5d1a6c8 <line:365:3> col:3 PTHREAD_PROCESS_SHARED 'int'
|-RecordDecl 0x560ee5d1a718 <line:367:1, line:373:1> line:367:8 struct _pthread_cleanup_buffer definition
| |-FieldDecl 0x560ee5d1a958 <line:369:3, col:28> col:10 __routine 'void (*)(void *)'
| |-FieldDecl 0x560ee5d1a9c0 <line:370:3, col:9> col:9 __arg 'void *'
| |-FieldDecl 0x560ee5d1aa28 <line:371:3, col:7> col:7 __canceltype 'int'
| `-FieldDecl 0x560ee5d1ab48 <line:372:3, col:35> col:35 __prev 'struct _pthread_cleanup_buffer *'
|-EnumDecl 0x560ee5d1ab98 <line:374:1, line:378:1> line:374:1
| |-EnumConstantDecl 0x560ee5d1ac68 <line:376:3> col:3 PTHREAD_CANCEL_ENABLE 'int'
| `-EnumConstantDecl 0x560ee5d1acb8 <line:377:3> col:3 PTHREAD_CANCEL_DISABLE 'int'
|-EnumDecl 0x560ee5d1ad08 <line:379:1, line:383:1> line:379:1
| |-EnumConstantDecl 0x560ee5d1add8 <line:381:3> col:3 PTHREAD_CANCEL_DEFERRED 'int'
| `-EnumConstantDecl 0x560ee5d1ae28 <line:382:3> col:3 PTHREAD_CANCEL_ASYNCHRONOUS 'int'
|-FunctionDecl 0x560ee5d1b488 <line:385:1, line:388:96> line:385:12 used pthread_create 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' extern
| |-ParmVarDecl 0x560ee5d1af20 <col:28, col:50> col:50 __newthread 'pthread_t *restrict'
| |-ParmVarDecl 0x560ee5d1b030 <line:386:7, col:40> col:40 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x560ee5d1b270 <line:387:7, col:39> col:15 __start_routine 'void *(*)(void *)'
| |-ParmVarDecl 0x560ee5d1b2f0 <line:388:7, col:24> col:24 __arg 'void *restrict'
| |-NoThrowAttr 0x560ee5d1b548 <col:47>
| |-NonNullAttr 0x560ee5d1b5a0 <col:77, col:94> 1 3
| `-CallbackAttr 0x560ee5d1b5d8 <line:385:12> Implicit 2 3
|-FunctionDecl 0x560ee5d1b700 <line:389:1, col:72> col:13 pthread_exit 'void (void *) __attribute__((noreturn))' extern
| `-ParmVarDecl 0x560ee5d1b630 <col:27, col:33> col:33 __retval 'void *'
|-FunctionDecl 0x560ee5d1b958 <line:390:1, col:64> col:12 pthread_join 'int (pthread_t, void **)' extern
| |-ParmVarDecl 0x560ee5d1b7b8 <col:26, col:36> col:36 __th 'pthread_t':'unsigned long'
| `-ParmVarDecl 0x560ee5d1b838 <col:42, col:49> col:49 __thread_return 'void **'
|-FunctionDecl 0x560ee5d1bb28 <line:391:1, col:83> col:12 pthread_detach 'int (pthread_t)' extern
| |-ParmVarDecl 0x560ee5d1ba18 <col:28, col:38> col:38 __th 'pthread_t':'unsigned long'
| `-NoThrowAttr 0x560ee5d1bbd0 <col:60>
|-FunctionDecl 0x560ee5d1bd20 <line:392:1, col:105> col:18 pthread_self 'pthread_t (void)' extern
| |-NoThrowAttr 0x560ee5d1bdc0 <col:54>
| `-ConstAttr 0x560ee5d1be18 <col:95>
|-FunctionDecl 0x560ee5d1bfe8 <line:393:1, line:394:70> line:393:12 pthread_equal 'int (pthread_t, pthread_t)' extern
| |-ParmVarDecl 0x560ee5d1be50 <col:27, col:37> col:37 __thread1 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x560ee5d1bec8 <col:48, col:58> col:58 __thread2 'pthread_t':'unsigned long'
| |-NoThrowAttr 0x560ee5d1c098 <line:394:19>
| `-ConstAttr 0x560ee5d1c0f0 <col:60>
|-FunctionDecl 0x560ee5d1db08 <line:395:1, col:128> col:12 pthread_attr_init 'int (pthread_attr_t *)' extern
| |-ParmVarDecl 0x560ee5d1d9d0 <col:31, col:47> col:47 __attr 'pthread_attr_t *'
| |-NoThrowAttr 0x560ee5d1dbb0 <col:71>
| `-NonNullAttr 0x560ee5d1dc08 <col:112, col:126> 1
|-FunctionDecl 0x560ee5d1dd10 <line:396:1, line:397:79> line:396:12 pthread_attr_destroy 'int (pthread_attr_t *)' extern
| |-ParmVarDecl 0x560ee5d1dc58 <col:34, col:50> col:50 __attr 'pthread_attr_t *'
| |-NoThrowAttr 0x560ee5d1ddb8 <line:397:22>
| `-NonNullAttr 0x560ee5d1de10 <col:63, col:77> 1
|-FunctionDecl 0x560ee5d1e038 <line:398:1, line:400:82> line:398:12 pthread_attr_getdetachstate 'int (const pthread_attr_t *, int *)' extern
| |-ParmVarDecl 0x560ee5d1de58 <col:41, col:63> col:63 __attr 'const pthread_attr_t *'
| |-ParmVarDecl 0x560ee5d1ded8 <line:399:6, col:11> col:11 __detachstate 'int *'
| |-NoThrowAttr 0x560ee5d1e0e8 <line:400:22>
| `-NonNullAttr 0x560ee5d1e140 <col:63, col:80> 1 2
|-FunctionDecl 0x560ee5d1e348 <line:401:1, line:403:79> line:401:12 pthread_attr_setdetachstate 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x560ee5d1e188 <col:41, col:57> col:57 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x560ee5d1e208 <line:402:6, col:10> col:10 __detachstate 'int'
| |-NoThrowAttr 0x560ee5d1e3f8 <line:403:22>
| `-NonNullAttr 0x560ee5d1e450 <col:63, col:77> 1
|-FunctionDecl 0x560ee5d1e6a8 <line:404:1, line:406:82> line:404:12 pthread_attr_getguardsize 'int (const pthread_attr_t *, size_t *)' extern
| |-ParmVarDecl 0x560ee5d1e498 <col:39, col:61> col:61 __attr 'const pthread_attr_t *'
| |-ParmVarDecl 0x560ee5d1e540 <line:405:11, col:19> col:19 __guardsize 'size_t *'
| |-NoThrowAttr 0x560ee5d1e758 <line:406:22>
| `-NonNullAttr 0x560ee5d1e7b0 <col:63, col:80> 1 2
|-FunctionDecl 0x560ee5d1f9e8 <line:407:1, line:409:79> line:407:12 pthread_attr_setguardsize 'int (pthread_attr_t *, size_t)' extern
| |-ParmVarDecl 0x560ee5d1e7f8 <col:39, col:55> col:55 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x560ee5d1e870 <line:408:11, col:18> col:18 __guardsize 'size_t':'unsigned long'
| |-NoThrowAttr 0x560ee5d1fa98 <line:409:22>
| `-NonNullAttr 0x560ee5d1faf0 <col:63, col:77> 1
|-FunctionDecl 0x560ee5d1fd28 <line:410:1, line:412:82> line:410:12 pthread_attr_getschedparam 'int (const pthread_attr_t *restrict, struct sched_param *restrict)' extern
| |-ParmVarDecl 0x560ee5d1fb38 <col:40, col:73> col:73 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x560ee5d1fbc8 <line:411:12, col:43> col:43 __param 'struct sched_param *restrict'
| |-NoThrowAttr 0x560ee5d1fdd8 <line:412:22>
| `-NonNullAttr 0x560ee5d1fe30 <col:63, col:80> 1 2
|-FunctionDecl 0x560ee5d20068 <line:413:1, line:415:97> line:413:12 pthread_attr_setschedparam 'int (pthread_attr_t *restrict, const struct sched_param *restrict)' extern
| |-ParmVarDecl 0x560ee5d1fe78 <col:40, col:67> col:67 __attr 'pthread_attr_t *restrict'
| |-ParmVarDecl 0x560ee5d1ff08 <line:414:12, line:415:12> col:12 __param 'const struct sched_param *restrict'
| |-NoThrowAttr 0x560ee5d20118 <col:37>
| `-NonNullAttr 0x560ee5d20170 <col:78, col:95> 1 2
|-FunctionDecl 0x560ee5d20358 <line:416:1, line:418:82> line:416:12 pthread_attr_getschedpolicy 'int (const pthread_attr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x560ee5d201b8 <col:41, line:417:6> col:6 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x560ee5d20238 <col:14, col:30> col:30 __policy 'int *restrict'
| |-NoThrowAttr 0x560ee5d20408 <line:418:22>
| `-NonNullAttr 0x560ee5d20460 <col:63, col:80> 1 2
|-FunctionDecl 0x560ee5d205e8 <line:419:1, line:420:79> line:419:12 pthread_attr_setschedpolicy 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x560ee5d204a8 <col:41, col:57> col:57 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x560ee5d20528 <col:65, col:69> col:69 __policy 'int'
| |-NoThrowAttr 0x560ee5d20698 <line:420:22>
| `-NonNullAttr 0x560ee5d206f0 <col:63, col:77> 1
|-FunctionDecl 0x560ee5d20898 <line:421:1, line:423:82> line:421:12 pthread_attr_getinheritsched 'int (const pthread_attr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x560ee5d20738 <col:42, line:422:7> col:7 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x560ee5d207b8 <col:15, col:31> col:31 __inherit 'int *restrict'
| |-NoThrowAttr 0x560ee5d20948 <line:423:22>
| `-NonNullAttr 0x560ee5d209c0 <col:63, col:80> 1 2
|-FunctionDecl 0x560ee5d20b48 <line:424:1, line:426:79> line:424:12 pthread_attr_setinheritsched 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x560ee5d20a08 <col:42, col:58> col:58 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x560ee5d20a88 <line:425:7, col:11> col:11 __inherit 'int'
| |-NoThrowAttr 0x560ee5d20bf8 <line:426:22>
| `-NonNullAttr 0x560ee5d20c50 <col:63, col:77> 1
|-FunctionDecl 0x560ee5d20df8 <line:427:1, line:429:82> line:427:12 pthread_attr_getscope 'int (const pthread_attr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x560ee5d20c98 <col:35, col:68> col:68 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x560ee5d20d18 <line:428:7, col:23> col:23 __scope 'int *restrict'
| |-NoThrowAttr 0x560ee5d20ea8 <line:429:22>
| `-NonNullAttr 0x560ee5d20f00 <col:63, col:80> 1 2
|-FunctionDecl 0x560ee5d21088 <line:430:1, line:431:79> line:430:12 pthread_attr_setscope 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x560ee5d20f48 <col:35, col:51> col:51 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x560ee5d20fc8 <col:59, col:63> col:63 __scope 'int'
| |-NoThrowAttr 0x560ee5d21138 <line:431:22>
| `-NonNullAttr 0x560ee5d21190 <col:63, col:77> 1
|-FunctionDecl 0x560ee5d213b8 <line:432:1, line:434:115> line:432:12 pthread_attr_getstackaddr 'int (const pthread_attr_t *restrict, void **restrict)' extern
| |-ParmVarDecl 0x560ee5d211d8 <col:39, line:433:11> col:11 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x560ee5d21258 <col:19, col:37> col:37 __stackaddr 'void **restrict'
| |-NoThrowAttr 0x560ee5d21468 <line:434:22>
| |-NonNullAttr 0x560ee5d214c0 <col:63, col:80> 1 2
| `-DeprecatedAttr 0x560ee5d214f8 <col:100> "" ""
|-FunctionDecl 0x560ee5d21708 <line:435:1, line:437:112> line:435:12 pthread_attr_setstackaddr 'int (pthread_attr_t *, void *)' extern
| |-ParmVarDecl 0x560ee5d21548 <col:39, col:55> col:55 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x560ee5d215c8 <line:436:11, col:17> col:17 __stackaddr 'void *'
| |-NoThrowAttr 0x560ee5d217b8 <line:437:22>
| |-NonNullAttr 0x560ee5d21810 <col:63, col:77> 1
| `-DeprecatedAttr 0x560ee5d21848 <col:97> "" ""
|-FunctionDecl 0x560ee5d21a48 <line:438:1, line:440:82> line:438:12 pthread_attr_getstacksize 'int (const pthread_attr_t *restrict, size_t *restrict)' extern
| |-ParmVarDecl 0x560ee5d21898 <col:39, line:439:11> col:11 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x560ee5d21910 <col:19, col:38> col:38 __stacksize 'size_t *restrict'
| |-NoThrowAttr 0x560ee5d21af8 <line:440:22>
| `-NonNullAttr 0x560ee5d21b50 <col:63, col:80> 1 2
|-FunctionDecl 0x560ee5d21cd0 <line:441:1, line:443:79> line:441:12 pthread_attr_setstacksize 'int (pthread_attr_t *, size_t)' extern
| |-ParmVarDecl 0x560ee5d21b98 <col:39, col:55> col:55 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x560ee5d21c10 <line:442:11, col:18> col:18 __stacksize 'size_t':'unsigned long'
| |-NoThrowAttr 0x560ee5d21d80 <line:443:22>
| `-NonNullAttr 0x560ee5d21dd8 <col:63, col:77> 1
|-FunctionDecl 0x560ee5d220c8 <line:444:1, line:447:85> line:444:12 pthread_attr_getstack 'int (const pthread_attr_t *restrict, void **restrict, size_t *restrict)' extern
| |-ParmVarDecl 0x560ee5d21e28 <col:35, col:68> col:68 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x560ee5d21ea8 <line:445:7, col:25> col:25 __stackaddr 'void **restrict'
| |-ParmVarDecl 0x560ee5d21f20 <line:446:7, col:26> col:26 __stacksize 'size_t *restrict'
| |-NoThrowAttr 0x560ee5d22180 <line:447:22>
| `-NonNullAttr 0x560ee5d221d8 <col:63, col:83> 1 2 3
|-FunctionDecl 0x560ee5d22488 <line:448:1, line:449:100> line:448:12 pthread_attr_setstack 'int (pthread_attr_t *, void *, size_t)' extern
| |-ParmVarDecl 0x560ee5d22230 <col:35, col:51> col:51 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x560ee5d222b0 <col:59, col:65> col:65 __stackaddr 'void *'
| |-ParmVarDecl 0x560ee5d22328 <line:449:7, col:14> col:14 __stacksize 'size_t':'unsigned long'
| |-NoThrowAttr 0x560ee5d22540 <col:43>
| `-NonNullAttr 0x560ee5d22598 <col:84, col:98> 1
|-FunctionDecl 0x560ee5d22858 <line:450:1, line:452:79> line:450:12 pthread_setschedparam 'int (pthread_t, int, const struct sched_param *)' extern
| |-ParmVarDecl 0x560ee5d225e8 <col:35, col:45> col:45 __target_thread 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x560ee5d22668 <col:62, col:66> col:66 __policy 'int'
| |-ParmVarDecl 0x560ee5d226f8 <line:451:7, col:33> col:33 __param 'const struct sched_param *'
| |-NoThrowAttr 0x560ee5d22910 <line:452:22>
| `-NonNullAttr 0x560ee5d22968 <col:63, col:77> 3
|-FunctionDecl 0x560ee5d22c78 <line:453:1, line:456:82> line:453:12 pthread_getschedparam 'int (pthread_t, int *restrict, struct sched_param *restrict)' extern
| |-ParmVarDecl 0x560ee5d229e0 <col:35, col:45> col:45 __target_thread 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x560ee5d22a60 <line:454:7, col:23> col:23 __policy 'int *restrict'
| |-ParmVarDecl 0x560ee5d22af0 <line:455:7, col:38> col:38 __param 'struct sched_param *restrict'
| |-NoThrowAttr 0x560ee5d22d30 <line:456:22>
| `-NonNullAttr 0x560ee5d22d88 <col:63, col:80> 2 3
|-FunctionDecl 0x560ee5d22f78 <line:457:1, line:458:45> line:457:12 pthread_setschedprio 'int (pthread_t, int)' extern
| |-ParmVarDecl 0x560ee5d22dd8 <col:34, col:44> col:44 __target_thread 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x560ee5d22e58 <col:61, col:65> col:65 __prio 'int'
| `-NoThrowAttr 0x560ee5d23028 <line:458:22>
|-FunctionDecl 0x560ee5d233f8 <line:459:1, line:460:71> line:459:12 pthread_once 'int (pthread_once_t *, void (*)(void))' extern
| |-ParmVarDecl 0x560ee5d230f0 <col:26, col:42> col:42 __once_control 'pthread_once_t *'
| |-ParmVarDecl 0x560ee5d23290 <line:460:5, col:33> col:12 __init_routine 'void (*)(void)'
| `-NonNullAttr 0x560ee5d234a8 <col:52, col:69> 1 2
|-FunctionDecl 0x560ee5d23650 <line:461:1, col:64> col:12 pthread_setcancelstate 'int (int, int *)' extern
| |-ParmVarDecl 0x560ee5d23530 <col:36, col:40> col:40 __state 'int'
| `-ParmVarDecl 0x560ee5d235b0 <col:49, col:54> col:54 __oldstate 'int *'
|-FunctionDecl 0x560ee5d23838 <line:462:1, col:61> col:12 pthread_setcanceltype 'int (int, int *)' extern
| |-ParmVarDecl 0x560ee5d23718 <col:35, col:39> col:39 __type 'int'
| `-ParmVarDecl 0x560ee5d23798 <col:47, col:52> col:52 __oldtype 'int *'
|-FunctionDecl 0x560ee5d239f0 <line:463:1, col:42> col:12 pthread_cancel 'int (pthread_t)' extern
| `-ParmVarDecl 0x560ee5d238f8 <col:28, col:38> col:38 __th 'pthread_t':'unsigned long'
|-FunctionDecl 0x560ee5d23b30 <line:464:1, col:37> col:13 pthread_testcancel 'void (void)' extern
|-RecordDecl 0x560ee5d23bd0 <line:465:9, line:473:1> line:465:9 struct definition
| |-RecordDecl 0x560ee5d23c78 <line:467:3, line:471:3> line:467:3 struct definition
| | |-FieldDecl 0x560ee5d23d68 <line:469:5, col:15> col:15 __cancel_jmp_buf '__jmp_buf':'long [8]'
| | `-FieldDecl 0x560ee5d23dd0 <line:470:5, col:9> col:9 __mask_was_saved 'int'
| |-FieldDecl 0x560ee5d23fa0 <line:467:3, line:471:23> col:5 __cancel_jmp_buf 'struct (anonymous struct at ./split_9/safe003_rmo.oepc_false-unreach-call.i:467:3) [1]'
| `-FieldDecl 0x560ee5d24098 <line:472:3, col:16> col:9 __pad 'void *[4]'
|-TypedefDecl 0x560ee5d24150 <line:465:1, line:473:3> col:3 referenced __pthread_unwind_buf_t 'struct __pthread_unwind_buf_t':'__pthread_unwind_buf_t'
| |-ElaboratedType 0x560ee5d240f0 'struct __pthread_unwind_buf_t' sugar
| | `-RecordType 0x560ee5d23c50 '__pthread_unwind_buf_t'
| |   `-Record 0x560ee5d23bd0 ''
| `-AlignedAttr 0x560ee5d241a8 <col:42> aligned
|   `-<<<NULL>>>
|-RecordDecl 0x560ee5d24220 <line:474:1, line:480:1> line:474:8 struct __pthread_cleanup_frame definition
| |-FieldDecl 0x560ee5d24380 <line:476:3, col:35> col:10 __cancel_routine 'void (*)(void *)'
| |-FieldDecl 0x560ee5d243e8 <line:477:3, col:9> col:9 __cancel_arg 'void *'
| |-FieldDecl 0x560ee5d24450 <line:478:3, col:7> col:7 __do_it 'int'
| `-FieldDecl 0x560ee5d244b8 <line:479:3, col:7> col:7 __cancel_type 'int'
|-FunctionDecl 0x560ee5d246c0 <line:481:1, col:69> col:13 __pthread_register_cancel 'void (__pthread_unwind_buf_t *)' extern
| `-ParmVarDecl 0x560ee5d245b0 <col:40, col:64> col:64 __buf '__pthread_unwind_buf_t *'
|-FunctionDecl 0x560ee5d24808 <line:483:1, col:71> col:13 __pthread_unregister_cancel 'void (__pthread_unwind_buf_t *)' extern
| `-ParmVarDecl 0x560ee5d24778 <col:42, col:66> col:66 __buf '__pthread_unwind_buf_t *'
|-FunctionDecl 0x560ee5d24a00 <line:485:1, line:487:31> line:485:13 __pthread_unwind_next 'void (__pthread_unwind_buf_t *) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x560ee5d248c0 <col:36, col:60> col:60 __buf '__pthread_unwind_buf_t *'
| `-WeakAttr 0x560ee5d24aa8 <line:487:22>
|-RecordDecl 0x560ee5d24b00 <line:489:1, col:8> col:8 struct __jmp_buf_tag
|-FunctionDecl 0x560ee5d24e18 <line:490:1, col:98> col:12 __sigsetjmp 'int (struct __jmp_buf_tag *, int)' extern
| |-ParmVarDecl 0x560ee5d24c78 <col:25, col:47> col:47 __env 'struct __jmp_buf_tag *'
| |-ParmVarDecl 0x560ee5d24cf8 <col:54, col:58> col:58 __savemask 'int'
| |-NoThrowAttr 0x560ee5d24ec8 <col:86>
| `-ReturnsTwiceAttr 0x560ee5d24f20 <col:12> Implicit
|-FunctionDecl 0x560ee5d25248 <line:491:1, line:493:79> line:491:12 pthread_mutex_init 'int (pthread_mutex_t *, const pthread_mutexattr_t *)' extern
| |-ParmVarDecl 0x560ee5d24ff0 <col:32, col:49> col:49 __mutex 'pthread_mutex_t *'
| |-ParmVarDecl 0x560ee5d25100 <line:492:11, col:38> col:38 __mutexattr 'const pthread_mutexattr_t *'
| |-NoThrowAttr 0x560ee5d252f8 <line:493:22>
| `-NonNullAttr 0x560ee5d25350 <col:63, col:77> 1
|-FunctionDecl 0x560ee5d254c8 <line:494:1, line:495:79> line:494:12 pthread_mutex_destroy 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x560ee5d25398 <col:35, col:52> col:52 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x560ee5d25570 <line:495:22>
| `-NonNullAttr 0x560ee5d255c8 <col:63, col:77> 1
|-FunctionDecl 0x560ee5d256d0 <line:496:1, line:497:68> line:496:12 pthread_mutex_trylock 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x560ee5d25618 <col:35, col:52> col:52 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x560ee5d25778 <line:497:22>
| `-NonNullAttr 0x560ee5d257d0 <col:52, col:66> 1
|-FunctionDecl 0x560ee5d258d0 <line:498:1, line:499:68> line:498:12 pthread_mutex_lock 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x560ee5d25818 <col:32, col:49> col:49 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x560ee5d25978 <line:499:22>
| `-NonNullAttr 0x560ee5d259d0 <col:52, col:66> 1
|-FunctionDecl 0x560ee5d26c28 <line:500:1, line:502:85> line:500:12 pthread_mutex_timedlock 'int (pthread_mutex_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x560ee5d26a38 <col:37, col:65> col:65 __mutex 'pthread_mutex_t *restrict'
| |-ParmVarDecl 0x560ee5d26ac8 <line:501:9, line:502:9> col:9 __abstime 'const struct timespec *restrict'
| |-NoThrowAttr 0x560ee5d26cd8 <col:36>
| `-NonNullAttr 0x560ee5d26d30 <col:66, col:83> 1 2
|-FunctionDecl 0x560ee5d26e30 <line:503:1, line:504:68> line:503:12 pthread_mutex_unlock 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x560ee5d26d78 <col:34, col:51> col:51 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x560ee5d26ed8 <line:504:22>
| `-NonNullAttr 0x560ee5d26f30 <col:52, col:66> 1
|-FunctionDecl 0x560ee5d271c8 <line:505:1, line:508:82> line:505:12 pthread_mutex_getprioceiling 'int (const pthread_mutex_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x560ee5d26fe0 <col:42, line:506:18> col:18 __mutex 'const pthread_mutex_t *restrict'
| |-ParmVarDecl 0x560ee5d27060 <line:507:7, col:23> col:23 __prioceiling 'int *restrict'
| |-NoThrowAttr 0x560ee5d27278 <line:508:22>
| `-NonNullAttr 0x560ee5d272d0 <col:63, col:80> 1 2
|-FunctionDecl 0x560ee5d27598 <line:509:1, line:512:82> line:509:12 pthread_mutex_setprioceiling 'int (pthread_mutex_t *restrict, int, int *restrict)' extern
| |-ParmVarDecl 0x560ee5d27318 <col:42, col:70> col:70 __mutex 'pthread_mutex_t *restrict'
| |-ParmVarDecl 0x560ee5d27398 <line:510:7, col:11> col:11 __prioceiling 'int'
| |-ParmVarDecl 0x560ee5d27418 <line:511:7, col:23> col:23 __old_ceiling 'int *restrict'
| |-NoThrowAttr 0x560ee5d27650 <line:512:22>
| `-NonNullAttr 0x560ee5d276a8 <col:63, col:80> 1 3
|-FunctionDecl 0x560ee5d277b0 <line:513:1, line:514:79> line:513:12 pthread_mutex_consistent 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x560ee5d276f8 <col:38, col:55> col:55 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x560ee5d27858 <line:514:22>
| `-NonNullAttr 0x560ee5d278b0 <col:63, col:77> 1
|-FunctionDecl 0x560ee5d27ad8 <line:515:1, line:516:79> line:515:12 pthread_mutexattr_init 'int (pthread_mutexattr_t *)' extern
| |-ParmVarDecl 0x560ee5d27960 <col:36, col:57> col:57 __attr 'pthread_mutexattr_t *'
| |-NoThrowAttr 0x560ee5d27b80 <line:516:22>
| `-NonNullAttr 0x560ee5d27bd8 <col:63, col:77> 1
|-FunctionDecl 0x560ee5d27ce0 <line:517:1, line:518:79> line:517:12 pthread_mutexattr_destroy 'int (pthread_mutexattr_t *)' extern
| |-ParmVarDecl 0x560ee5d27c28 <col:39, col:60> col:60 __attr 'pthread_mutexattr_t *'
| |-NoThrowAttr 0x560ee5d27d88 <line:518:22>
| `-NonNullAttr 0x560ee5d27de0 <col:63, col:77> 1
|-FunctionDecl 0x560ee5d28008 <line:519:1, line:522:82> line:519:12 pthread_mutexattr_getpshared 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x560ee5d27e28 <col:42, line:520:18> col:18 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x560ee5d27ea8 <line:521:7, col:23> col:23 __pshared 'int *restrict'
| |-NoThrowAttr 0x560ee5d280b8 <line:522:22>
| `-NonNullAttr 0x560ee5d28110 <col:63, col:80> 1 2
|-FunctionDecl 0x560ee5d28318 <line:523:1, line:525:79> line:523:12 pthread_mutexattr_setpshared 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x560ee5d28158 <col:42, col:63> col:63 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x560ee5d281d8 <line:524:7, col:11> col:11 __pshared 'int'
| |-NoThrowAttr 0x560ee5d283c8 <line:525:22>
| `-NonNullAttr 0x560ee5d28420 <col:63, col:77> 1
|-FunctionDecl 0x560ee5d285c8 <line:526:1, line:528:82> line:526:12 pthread_mutexattr_gettype 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x560ee5d28468 <col:39, line:527:11> col:11 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x560ee5d284e8 <col:19, col:35> col:35 __kind 'int *restrict'
| |-NoThrowAttr 0x560ee5d28678 <line:528:22>
| `-NonNullAttr 0x560ee5d286d0 <col:63, col:80> 1 2
|-FunctionDecl 0x560ee5d28858 <line:529:1, line:530:79> line:529:12 pthread_mutexattr_settype 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x560ee5d28718 <col:39, col:60> col:60 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x560ee5d28798 <col:68, col:72> col:72 __kind 'int'
| |-NoThrowAttr 0x560ee5d28908 <line:530:22>
| `-NonNullAttr 0x560ee5d28960 <col:63, col:77> 1
|-FunctionDecl 0x560ee5d28b20 <line:531:1, line:534:82> line:531:12 pthread_mutexattr_getprotocol 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x560ee5d289a8 <col:43, line:532:19> col:19 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x560ee5d28a40 <line:533:8, col:24> col:24 __protocol 'int *restrict'
| |-NoThrowAttr 0x560ee5d28bd0 <line:534:22>
| `-NonNullAttr 0x560ee5d28c28 <col:63, col:80> 1 2
|-FunctionDecl 0x560ee5d28db8 <line:535:1, line:537:79> line:535:12 pthread_mutexattr_setprotocol 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x560ee5d28c78 <col:43, col:64> col:64 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x560ee5d28cf8 <line:536:8, col:12> col:12 __protocol 'int'
| |-NoThrowAttr 0x560ee5d28e68 <line:537:22>
| `-NonNullAttr 0x560ee5d28ec0 <col:63, col:77> 1
|-FunctionDecl 0x560ee5d29068 <line:538:1, line:541:82> line:538:12 pthread_mutexattr_getprioceiling 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x560ee5d28f08 <col:46, line:539:22> col:22 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x560ee5d28f88 <line:540:11, col:27> col:27 __prioceiling 'int *restrict'
| |-NoThrowAttr 0x560ee5d29118 <line:541:22>
| `-NonNullAttr 0x560ee5d29170 <col:63, col:80> 1 2
|-FunctionDecl 0x560ee5d292f8 <line:542:1, line:544:79> line:542:12 pthread_mutexattr_setprioceiling 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x560ee5d291b8 <col:46, col:67> col:67 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x560ee5d29238 <line:543:11, col:15> col:15 __prioceiling 'int'
| |-NoThrowAttr 0x560ee5d293a8 <line:544:22>
| `-NonNullAttr 0x560ee5d29400 <col:63, col:77> 1
|-FunctionDecl 0x560ee5d295e8 <line:545:1, line:547:82> line:545:12 pthread_mutexattr_getrobust 'int (const pthread_mutexattr_t *, int *)' extern
| |-ParmVarDecl 0x560ee5d29448 <col:41, col:68> col:68 __attr 'const pthread_mutexattr_t *'
| |-ParmVarDecl 0x560ee5d294c8 <line:546:6, col:11> col:11 __robustness 'int *'
| |-NoThrowAttr 0x560ee5d29698 <line:547:22>
| `-NonNullAttr 0x560ee5d296f0 <col:63, col:80> 1 2
|-FunctionDecl 0x560ee5d29878 <line:548:1, line:550:79> line:548:12 pthread_mutexattr_setrobust 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x560ee5d29738 <col:41, col:62> col:62 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x560ee5d297b8 <line:549:6, col:10> col:10 __robustness 'int'
| |-NoThrowAttr 0x560ee5d29928 <line:550:22>
| `-NonNullAttr 0x560ee5d29980 <col:63, col:77> 1
|-FunctionDecl 0x560ee5d2acf8 <line:551:1, line:553:86> line:551:12 pthread_rwlock_init 'int (pthread_rwlock_t *restrict, const pthread_rwlockattr_t *restrict)' extern
| |-ParmVarDecl 0x560ee5d2aaa0 <col:33, col:62> col:62 __rwlock 'pthread_rwlock_t *restrict'
| |-ParmVarDecl 0x560ee5d2abb0 <line:552:5, line:553:5> col:5 __attr 'const pthread_rwlockattr_t *restrict'
| |-NoThrowAttr 0x560ee5d2ada8 <col:29>
| `-NonNullAttr 0x560ee5d2ae00 <col:70, col:84> 1
|-FunctionDecl 0x560ee5d2af78 <line:554:1, line:555:79> line:554:12 pthread_rwlock_destroy 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x560ee5d2ae48 <col:36, col:54> col:54 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x560ee5d2b020 <line:555:22>
| `-NonNullAttr 0x560ee5d2b078 <col:63, col:77> 1
|-FunctionDecl 0x560ee5d2b180 <line:556:1, line:557:68> line:556:12 pthread_rwlock_rdlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x560ee5d2b0c8 <col:35, col:53> col:53 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x560ee5d2b228 <line:557:22>
| `-NonNullAttr 0x560ee5d2b280 <col:52, col:66> 1
|-FunctionDecl 0x560ee5d2b380 <line:558:1, line:559:65> line:558:12 pthread_rwlock_tryrdlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x560ee5d2b2c8 <col:38, col:56> col:56 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x560ee5d2b428 <line:559:19>
| `-NonNullAttr 0x560ee5d2b480 <col:49, col:63> 1
|-FunctionDecl 0x560ee5d2b6b8 <line:560:1, line:562:88> line:560:12 pthread_rwlock_timedrdlock 'int (pthread_rwlock_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x560ee5d2b4c8 <col:40, col:69> col:69 __rwlock 'pthread_rwlock_t *restrict'
| |-ParmVarDecl 0x560ee5d2b558 <line:561:12, line:562:12> col:12 __abstime 'const struct timespec *restrict'
| |-NoThrowAttr 0x560ee5d2b768 <col:39>
| `-NonNullAttr 0x560ee5d2b7c0 <col:69, col:86> 1 2
|-FunctionDecl 0x560ee5d2b8c0 <line:563:1, line:564:68> line:563:12 pthread_rwlock_wrlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x560ee5d2b808 <col:35, col:53> col:53 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x560ee5d2b968 <line:564:22>
| `-NonNullAttr 0x560ee5d2b9c0 <col:52, col:66> 1
|-FunctionDecl 0x560ee5d2bb28 <line:565:1, line:566:68> line:565:12 pthread_rwlock_trywrlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x560ee5d2ba70 <col:38, col:56> col:56 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x560ee5d2bbd0 <line:566:22>
| `-NonNullAttr 0x560ee5d2bc28 <col:52, col:66> 1
|-FunctionDecl 0x560ee5d2bde8 <line:567:1, line:569:88> line:567:12 pthread_rwlock_timedwrlock 'int (pthread_rwlock_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x560ee5d2bc78 <col:40, col:69> col:69 __rwlock 'pthread_rwlock_t *restrict'
| |-ParmVarDecl 0x560ee5d2bd08 <line:568:12, line:569:12> col:12 __abstime 'const struct timespec *restrict'
| |-NoThrowAttr 0x560ee5d2be98 <col:39>
| `-NonNullAttr 0x560ee5d2bef0 <col:69, col:86> 1 2
|-FunctionDecl 0x560ee5d2bff0 <line:570:1, line:571:68> line:570:12 pthread_rwlock_unlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x560ee5d2bf38 <col:35, col:53> col:53 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x560ee5d2c098 <line:571:22>
| `-NonNullAttr 0x560ee5d2c0f0 <col:52, col:66> 1
|-FunctionDecl 0x560ee5d2c2d8 <line:572:1, line:573:79> line:572:12 pthread_rwlockattr_init 'int (pthread_rwlockattr_t *)' extern
| |-ParmVarDecl 0x560ee5d2c1a0 <col:37, col:59> col:59 __attr 'pthread_rwlockattr_t *'
| |-NoThrowAttr 0x560ee5d2c380 <line:573:22>
| `-NonNullAttr 0x560ee5d2c3d8 <col:63, col:77> 1
|-FunctionDecl 0x560ee5d2c4e0 <line:574:1, line:575:79> line:574:12 pthread_rwlockattr_destroy 'int (pthread_rwlockattr_t *)' extern
| |-ParmVarDecl 0x560ee5d2c428 <col:40, col:62> col:62 __attr 'pthread_rwlockattr_t *'
| |-NoThrowAttr 0x560ee5d2c588 <line:575:22>
| `-NonNullAttr 0x560ee5d2c5e0 <col:63, col:77> 1
|-FunctionDecl 0x560ee5d2c808 <line:576:1, line:579:82> line:576:12 pthread_rwlockattr_getpshared 'int (const pthread_rwlockattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x560ee5d2c628 <col:43, line:577:19> col:19 __attr 'const pthread_rwlockattr_t *restrict'
| |-ParmVarDecl 0x560ee5d2c6a8 <line:578:8, col:24> col:24 __pshared 'int *restrict'
| |-NoThrowAttr 0x560ee5d2c8b8 <line:579:22>
| `-NonNullAttr 0x560ee5d2c910 <col:63, col:80> 1 2
|-FunctionDecl 0x560ee5d2cb38 <line:580:1, line:582:79> line:580:12 pthread_rwlockattr_setpshared 'int (pthread_rwlockattr_t *, int)' extern
| |-ParmVarDecl 0x560ee5d2c958 <col:43, col:65> col:65 __attr 'pthread_rwlockattr_t *'
| |-ParmVarDecl 0x560ee5d2c9d8 <line:581:8, col:12> col:12 __pshared 'int'
| |-NoThrowAttr 0x560ee5d2cbe8 <line:582:22>
| `-NonNullAttr 0x560ee5d2cc40 <col:63, col:77> 1
|-FunctionDecl 0x560ee5d2cde8 <line:583:1, line:586:82> line:583:12 pthread_rwlockattr_getkind_np 'int (const pthread_rwlockattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x560ee5d2cc88 <col:43, line:584:19> col:19 __attr 'const pthread_rwlockattr_t *restrict'
| |-ParmVarDecl 0x560ee5d2cd08 <line:585:8, col:24> col:24 __pref 'int *restrict'
| |-NoThrowAttr 0x560ee5d2ce98 <line:586:22>
| `-NonNullAttr 0x560ee5d2cef0 <col:63, col:80> 1 2
|-FunctionDecl 0x560ee5d2d078 <line:587:1, line:588:93> line:587:12 pthread_rwlockattr_setkind_np 'int (pthread_rwlockattr_t *, int)' extern
| |-ParmVarDecl 0x560ee5d2cf38 <col:43, col:65> col:65 __attr 'pthread_rwlockattr_t *'
| |-ParmVarDecl 0x560ee5d2cfb8 <line:588:8, col:12> col:12 __pref 'int'
| |-NoThrowAttr 0x560ee5d2d128 <col:36>
| `-NonNullAttr 0x560ee5d2d180 <col:77, col:91> 1
|-FunctionDecl 0x560ee5d2d4b8 <line:589:1, line:591:79> line:589:12 pthread_cond_init 'int (pthread_cond_t *restrict, const pthread_condattr_t *restrict)' extern
| |-ParmVarDecl 0x560ee5d2d260 <col:31, col:58> col:58 __cond 'pthread_cond_t *restrict'
| |-ParmVarDecl 0x560ee5d2d370 <line:590:10, col:47> col:47 __cond_attr 'const pthread_condattr_t *restrict'
| |-NoThrowAttr 0x560ee5d2d568 <line:591:22>
| `-NonNullAttr 0x560ee5d2d5c0 <col:63, col:77> 1
|-FunctionDecl 0x560ee5d2d738 <line:592:1, line:593:79> line:592:12 pthread_cond_destroy 'int (pthread_cond_t *)' extern
| |-ParmVarDecl 0x560ee5d2d608 <col:34, col:50> col:50 __cond 'pthread_cond_t *'
| |-NoThrowAttr 0x560ee5d2d7e0 <line:593:22>
| `-NonNullAttr 0x560ee5d2d838 <col:63, col:77> 1
|-FunctionDecl 0x560ee5d2d940 <line:594:1, line:595:68> line:594:12 pthread_cond_signal 'int (pthread_cond_t *)' extern
| |-ParmVarDecl 0x560ee5d2d888 <col:33, col:49> col:49 __cond 'pthread_cond_t *'
| |-NoThrowAttr 0x560ee5d2d9e8 <line:595:22>
| `-NonNullAttr 0x560ee5d2da40 <col:52, col:66> 1
|-FunctionDecl 0x560ee5d2db58 <line:596:1, line:597:68> line:596:12 pthread_cond_broadcast 'int (pthread_cond_t *)' extern
| |-ParmVarDecl 0x560ee5d2daa0 <col:36, col:52> col:52 __cond 'pthread_cond_t *'
| |-NoThrowAttr 0x560ee5d2dc00 <line:597:22>
| `-NonNullAttr 0x560ee5d2dc58 <col:52, col:66> 1
|-FunctionDecl 0x560ee5d2de88 <line:598:1, line:600:41> line:598:12 pthread_cond_wait 'int (pthread_cond_t *restrict, pthread_mutex_t *restrict)' extern
| |-ParmVarDecl 0x560ee5d2dca8 <col:31, col:58> col:58 __cond 'pthread_cond_t *restrict'
| |-ParmVarDecl 0x560ee5d2dd20 <line:599:10, col:38> col:38 __mutex 'pthread_mutex_t *restrict'
| `-NonNullAttr 0x560ee5d2df38 <line:600:22, col:39> 1 2
|-FunctionDecl 0x560ee5d2e268 <line:601:1, line:604:44> line:601:12 pthread_cond_timedwait 'int (pthread_cond_t *restrict, pthread_mutex_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x560ee5d2dfb8 <col:36, col:63> col:63 __cond 'pthread_cond_t *restrict'
| |-ParmVarDecl 0x560ee5d2e030 <line:602:8, col:36> col:36 __mutex 'pthread_mutex_t *restrict'
| |-ParmVarDecl 0x560ee5d2e0c0 <line:603:8, col:42> col:42 __abstime 'const struct timespec *restrict'
| `-NonNullAttr 0x560ee5d2e320 <line:604:22, col:42> 1 2 3
|-FunctionDecl 0x560ee5d2e538 <line:605:1, line:606:79> line:605:12 pthread_condattr_init 'int (pthread_condattr_t *)' extern
| |-ParmVarDecl 0x560ee5d2e400 <col:35, col:55> col:55 __attr 'pthread_condattr_t *'
| |-NoThrowAttr 0x560ee5d2e5e0 <line:606:22>
| `-NonNullAttr 0x560ee5d2e638 <col:63, col:77> 1
|-FunctionDecl 0x560ee5d2e740 <line:607:1, line:608:79> line:607:12 pthread_condattr_destroy 'int (pthread_condattr_t *)' extern
| |-ParmVarDecl 0x560ee5d2e688 <col:38, col:58> col:58 __attr 'pthread_condattr_t *'
| |-NoThrowAttr 0x560ee5d2e7e8 <line:608:22>
| `-NonNullAttr 0x560ee5d2e840 <col:63, col:77> 1
|-FunctionDecl 0x560ee5d2eaa0 <line:609:1, line:612:82> line:609:12 pthread_condattr_getpshared 'int (const pthread_condattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x560ee5d2e888 <col:41, line:610:17> col:17 __attr 'const pthread_condattr_t *restrict'
| |-ParmVarDecl 0x560ee5d2e908 <line:611:6, col:22> col:22 __pshared 'int *restrict'
| |-NoThrowAttr 0x560ee5d2eb50 <line:612:22>
| `-NonNullAttr 0x560ee5d2eba8 <col:63, col:80> 1 2
|-FunctionDecl 0x560ee5d2edb8 <line:613:1, line:614:94> line:613:12 pthread_condattr_setpshared 'int (pthread_condattr_t *, int)' extern
| |-ParmVarDecl 0x560ee5d2ebf8 <col:41, col:61> col:61 __attr 'pthread_condattr_t *'
| |-ParmVarDecl 0x560ee5d2ec78 <line:614:6, col:10> col:10 __pshared 'int'
| |-NoThrowAttr 0x560ee5d2ee68 <col:37>
| `-NonNullAttr 0x560ee5d2eec0 <col:78, col:92> 1
|-FunctionDecl 0x560ee5d2f0d8 <line:615:1, line:618:82> line:615:12 pthread_condattr_getclock 'int (const pthread_condattr_t *restrict, __clockid_t *restrict)' extern
| |-ParmVarDecl 0x560ee5d2ef08 <col:39, line:616:22> col:22 __attr 'const pthread_condattr_t *restrict'
| |-ParmVarDecl 0x560ee5d2efb0 <line:617:11, col:35> col:35 __clock_id '__clockid_t *restrict'
| |-NoThrowAttr 0x560ee5d2f188 <line:618:22>
| `-NonNullAttr 0x560ee5d2f1e0 <col:63, col:80> 1 2
|-FunctionDecl 0x560ee5d2f3a8 <line:619:1, line:621:79> line:619:12 pthread_condattr_setclock 'int (pthread_condattr_t *, __clockid_t)' extern
| |-ParmVarDecl 0x560ee5d2f228 <col:39, col:59> col:59 __attr 'pthread_condattr_t *'
| |-ParmVarDecl 0x560ee5d2f2a0 <line:620:11, col:23> col:23 __clock_id '__clockid_t':'int'
| |-NoThrowAttr 0x560ee5d2f458 <line:621:22>
| `-NonNullAttr 0x560ee5d2f4b0 <col:63, col:77> 1
|-FunctionDecl 0x560ee5d2f758 <line:622:1, line:623:79> line:622:12 pthread_spin_init 'int (pthread_spinlock_t *, int)' extern
| |-ParmVarDecl 0x560ee5d2f590 <col:31, col:51> col:51 __lock 'pthread_spinlock_t *'
| |-ParmVarDecl 0x560ee5d2f610 <col:59, col:63> col:63 __pshared 'int'
| |-NoThrowAttr 0x560ee5d2f808 <line:623:22>
| `-NonNullAttr 0x560ee5d2f860 <col:63, col:77> 1
|-FunctionDecl 0x560ee5d2f9d8 <line:624:1, line:625:79> line:624:12 pthread_spin_destroy 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x560ee5d2f8a8 <col:34, col:54> col:54 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x560ee5d2fab0 <line:625:22>
| `-NonNullAttr 0x560ee5d2fb08 <col:63, col:77> 1
|-FunctionDecl 0x560ee5d2fc10 <line:626:1, line:627:68> line:626:12 pthread_spin_lock 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x560ee5d2fb58 <col:31, col:51> col:51 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x560ee5d2fcb8 <line:627:22>
| `-NonNullAttr 0x560ee5d2fd10 <col:52, col:66> 1
|-FunctionDecl 0x560ee5d2fe10 <line:628:1, line:629:68> line:628:12 pthread_spin_trylock 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x560ee5d2fd58 <col:34, col:54> col:54 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x560ee5d2feb8 <line:629:22>
| `-NonNullAttr 0x560ee5d2ff10 <col:52, col:66> 1
|-FunctionDecl 0x560ee5d30010 <line:630:1, line:631:68> line:630:12 pthread_spin_unlock 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x560ee5d2ff58 <col:33, col:53> col:53 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x560ee5d300b8 <line:631:22>
| `-NonNullAttr 0x560ee5d30110 <col:52, col:66> 1
|-FunctionDecl 0x560ee5d304e8 <line:632:1, line:635:79> line:632:12 pthread_barrier_init 'int (pthread_barrier_t *restrict, const pthread_barrierattr_t *restrict, unsigned int)' extern
| |-ParmVarDecl 0x560ee5d301f0 <col:34, col:64> col:64 __barrier 'pthread_barrier_t *restrict'
| |-ParmVarDecl 0x560ee5d30300 <line:633:6, line:634:6> col:6 __attr 'const pthread_barrierattr_t *restrict'
| |-ParmVarDecl 0x560ee5d30380 <col:14, col:27> col:27 __count 'unsigned int'
| |-NoThrowAttr 0x560ee5d305a0 <line:635:22>
| `-NonNullAttr 0x560ee5d305f8 <col:63, col:77> 1
|-FunctionDecl 0x560ee5d30778 <line:636:1, line:637:79> line:636:12 pthread_barrier_destroy 'int (pthread_barrier_t *)' extern
| |-ParmVarDecl 0x560ee5d30648 <col:37, col:56> col:56 __barrier 'pthread_barrier_t *'
| |-NoThrowAttr 0x560ee5d30820 <line:637:22>
| `-NonNullAttr 0x560ee5d30878 <col:63, col:77> 1
|-FunctionDecl 0x560ee5d30980 <line:638:1, line:639:68> line:638:12 pthread_barrier_wait 'int (pthread_barrier_t *)' extern
| |-ParmVarDecl 0x560ee5d308c8 <col:34, col:53> col:53 __barrier 'pthread_barrier_t *'
| |-NoThrowAttr 0x560ee5d30a28 <line:639:22>
| `-NonNullAttr 0x560ee5d30a80 <col:52, col:66> 1
|-FunctionDecl 0x560ee5d31c88 <line:640:1, line:641:79> line:640:12 pthread_barrierattr_init 'int (pthread_barrierattr_t *)' extern
| |-ParmVarDecl 0x560ee5d31b50 <col:38, col:61> col:61 __attr 'pthread_barrierattr_t *'
| |-NoThrowAttr 0x560ee5d31d30 <line:641:22>
| `-NonNullAttr 0x560ee5d31d88 <col:63, col:77> 1
|-FunctionDecl 0x560ee5d31e90 <line:642:1, line:643:79> line:642:12 pthread_barrierattr_destroy 'int (pthread_barrierattr_t *)' extern
| |-ParmVarDecl 0x560ee5d31dd8 <col:41, col:64> col:64 __attr 'pthread_barrierattr_t *'
| |-NoThrowAttr 0x560ee5d31f38 <line:643:22>
| `-NonNullAttr 0x560ee5d31f90 <col:63, col:77> 1
|-FunctionDecl 0x560ee5d321b8 <line:644:1, line:647:82> line:644:12 pthread_barrierattr_getpshared 'int (const pthread_barrierattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x560ee5d31fd8 <col:44, line:645:20> col:20 __attr 'const pthread_barrierattr_t *restrict'
| |-ParmVarDecl 0x560ee5d32058 <line:646:9, col:25> col:25 __pshared 'int *restrict'
| |-NoThrowAttr 0x560ee5d32268 <line:647:22>
| `-NonNullAttr 0x560ee5d322c0 <col:63, col:80> 1 2
|-FunctionDecl 0x560ee5d324c8 <line:648:1, line:650:79> line:648:12 pthread_barrierattr_setpshared 'int (pthread_barrierattr_t *, int)' extern
| |-ParmVarDecl 0x560ee5d32308 <col:44, col:67> col:67 __attr 'pthread_barrierattr_t *'
| |-ParmVarDecl 0x560ee5d32388 <line:649:9, col:13> col:13 __pshared 'int'
| |-NoThrowAttr 0x560ee5d32578 <line:650:22>
| `-NonNullAttr 0x560ee5d325d0 <col:63, col:77> 1
|-FunctionDecl 0x560ee5d32918 <line:651:1, line:653:79> line:651:12 pthread_key_create 'int (pthread_key_t *, void (*)(void *))' extern
| |-ParmVarDecl 0x560ee5d326b0 <col:32, col:47> col:47 __key 'pthread_key_t *'
| |-ParmVarDecl 0x560ee5d327d0 <line:652:11, col:43> col:18 __destr_function 'void (*)(void *)'
| |-NoThrowAttr 0x560ee5d329c8 <line:653:22>
| `-NonNullAttr 0x560ee5d32a20 <col:63, col:77> 1
|-FunctionDecl 0x560ee5d32b88 <line:654:1, col:92> col:12 pthread_key_delete 'int (pthread_key_t)' extern
| |-ParmVarDecl 0x560ee5d32a68 <col:32, col:46> col:46 __key 'pthread_key_t':'unsigned int'
| `-NoThrowAttr 0x560ee5d32c30 <col:69>
|-FunctionDecl 0x560ee5d32da8 <line:655:1, col:95> col:14 pthread_getspecific 'void *(pthread_key_t)' extern
| |-ParmVarDecl 0x560ee5d32c98 <col:35, col:49> col:49 __key 'pthread_key_t':'unsigned int'
| `-NoThrowAttr 0x560ee5d32e50 <col:72>
|-FunctionDecl 0x560ee5d33088 <line:656:1, line:657:67> line:656:12 pthread_setspecific 'int (pthread_key_t, const void *)' extern
| |-ParmVarDecl 0x560ee5d32eb8 <col:33, col:47> col:47 __key 'pthread_key_t':'unsigned int'
| |-ParmVarDecl 0x560ee5d32f68 <line:657:5, col:17> col:17 __pointer 'const void *'
| `-NoThrowAttr 0x560ee5d33138 <col:44>
|-FunctionDecl 0x560ee5d33358 <line:658:1, line:660:79> line:658:12 pthread_getcpuclockid 'int (pthread_t, __clockid_t *)' extern
| |-ParmVarDecl 0x560ee5d331a0 <col:35, col:45> col:45 __thread_id 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x560ee5d33218 <line:659:7, col:20> col:20 __clock_id '__clockid_t *'
| |-NoThrowAttr 0x560ee5d33408 <line:660:22>
| `-NonNullAttr 0x560ee5d33460 <col:63, col:77> 2
|-FunctionDecl 0x560ee5d338a8 <line:661:1, line:663:70> line:661:12 pthread_atfork 'int (void (*)(void), void (*)(void), void (*)(void))' extern
| |-ParmVarDecl 0x560ee5d33540 <col:28, col:51> col:35 __prepare 'void (*)(void)'
| |-ParmVarDecl 0x560ee5d33650 <line:662:7, col:29> col:14 __parent 'void (*)(void)'
| |-ParmVarDecl 0x560ee5d33760 <line:663:7, col:28> col:14 __child 'void (*)(void)'
| `-NoThrowAttr 0x560ee5d33960 <col:47>
|-FunctionDecl 0x560ee5d33af0 <line:665:1, col:20> col:8 used P0 'void *(void *)'
| `-ParmVarDecl 0x560ee5d339d0 <col:11, col:17> col:17 arg 'void *'
|-FunctionDecl 0x560ee5d33c48 <line:666:1, col:20> col:8 used P1 'void *(void *)'
| `-ParmVarDecl 0x560ee5d33bb0 <col:11, col:17> col:17 arg 'void *'
|-FunctionDecl 0x560ee5d33da0 <line:667:1, col:20> col:8 used P2 'void *(void *)'
| `-ParmVarDecl 0x560ee5d33d08 <col:11, col:17> col:17 arg 'void *'
|-FunctionDecl 0x560ee5d33e68 <line:668:1, col:12> col:6 fence 'void ()'
|-FunctionDecl 0x560ee5d33f28 <line:669:1, col:12> col:6 isync 'void ()'
|-FunctionDecl 0x560ee5d33fe8 <line:670:1, col:14> col:6 lwfence 'void ()'
|-VarDecl 0x560ee5d340a0 <line:671:1, col:5> col:5 used __unbuffered_cnt 'int'
|-VarDecl 0x560ee5d34120 prev 0x560ee5d340a0 <line:672:1, col:24> col:5 used __unbuffered_cnt 'int' cinit
| `-IntegerLiteral 0x560ee5d34188 <col:24> 'int' 0
|-VarDecl 0x560ee5d341c0 <line:673:1, col:5> col:5 used __unbuffered_p1_EAX 'int'
|-VarDecl 0x560ee5d34240 prev 0x560ee5d341c0 <line:674:1, col:27> col:5 used __unbuffered_p1_EAX 'int' cinit
| `-IntegerLiteral 0x560ee5d342a8 <col:27> 'int' 0
|-VarDecl 0x560ee5d342e0 <line:675:1, col:5> col:5 used __unbuffered_p2_EAX 'int'
|-VarDecl 0x560ee5d34360 prev 0x560ee5d342e0 <line:676:1, col:27> col:5 used __unbuffered_p2_EAX 'int' cinit
| `-IntegerLiteral 0x560ee5d343c8 <col:27> 'int' 0
|-VarDecl 0x560ee5d34400 <line:677:1, col:5> col:5 used __unbuffered_p2_EBX 'int'
|-VarDecl 0x560ee5d34480 prev 0x560ee5d34400 <line:678:1, col:27> col:5 used __unbuffered_p2_EBX 'int' cinit
| `-IntegerLiteral 0x560ee5d344e8 <col:27> 'int' 0
|-VarDecl 0x560ee5d34518 <line:679:1, col:7> col:7 used main$tmp_guard0 '_Bool'
|-VarDecl 0x560ee5d34590 <line:680:1, col:7> col:7 used main$tmp_guard1 '_Bool'
|-VarDecl 0x560ee5d34610 <line:681:1, col:5> col:5 used x 'int'
|-VarDecl 0x560ee5d34690 prev 0x560ee5d34610 <line:682:1, col:9> col:5 used x 'int' cinit
| `-IntegerLiteral 0x560ee5d346f8 <col:9> 'int' 0
|-VarDecl 0x560ee5d34730 <line:683:1, col:5> col:5 used y 'int'
|-VarDecl 0x560ee5d347b0 prev 0x560ee5d34730 <line:684:1, col:9> col:5 used y 'int' cinit
| `-IntegerLiteral 0x560ee5d34818 <col:9> 'int' 0
|-VarDecl 0x560ee5d34848 <line:685:1, col:7> col:7 used y$flush_delayed '_Bool'
|-VarDecl 0x560ee5d348c8 <line:686:1, col:5> col:5 used y$mem_tmp 'int'
|-VarDecl 0x560ee5d34940 <line:687:1, col:7> col:7 used y$r_buff0_thd0 '_Bool'
|-VarDecl 0x560ee5d349b8 <line:688:1, col:7> col:7 used y$r_buff0_thd1 '_Bool'
|-VarDecl 0x560ee5d34a30 <line:689:1, col:7> col:7 used y$r_buff0_thd2 '_Bool'
|-VarDecl 0x560ee5d34b00 <line:690:1, col:7> col:7 used y$r_buff0_thd3 '_Bool'
|-VarDecl 0x560ee5d34b78 <line:691:1, col:7> col:7 used y$r_buff1_thd0 '_Bool'
|-VarDecl 0x560ee5d34bf0 <line:692:1, col:7> col:7 used y$r_buff1_thd1 '_Bool'
|-VarDecl 0x560ee5d34c68 <line:693:1, col:7> col:7 used y$r_buff1_thd2 '_Bool'
|-VarDecl 0x560ee5d34ce0 <line:694:1, col:7> col:7 used y$r_buff1_thd3 '_Bool'
|-VarDecl 0x560ee5d34d58 <line:695:1, col:7> col:7 y$read_delayed '_Bool'
|-VarDecl 0x560ee5d34dd8 <line:696:1, col:6> col:6 y$read_delayed_var 'int *'
|-VarDecl 0x560ee5d34e58 <line:697:1, col:5> col:5 used y$w_buff0 'int'
|-VarDecl 0x560ee5d34ed0 <line:698:1, col:7> col:7 used y$w_buff0_used '_Bool'
|-VarDecl 0x560ee5d34f50 <line:699:1, col:5> col:5 used y$w_buff1 'int'
|-VarDecl 0x560ee5d34fc8 <line:700:1, col:7> col:7 used y$w_buff1_used '_Bool'
|-VarDecl 0x560ee5d35040 <line:701:1, col:7> col:7 used weak$$choice0 '_Bool'
|-VarDecl 0x560ee5d350b8 <line:702:1, col:7> col:7 used weak$$choice2 '_Bool'
|-FunctionDecl 0x560ee5d351d0 prev 0x560ee5d33af0 <line:703:1, line:731:1> line:703:8 used P0 'void *(void *)'
| |-ParmVarDecl 0x560ee5d35138 <col:11, col:17> col:17 arg 'void *'
| `-CompoundStmt 0x560ee5d369f8 <line:704:1, line:731:1>
|   |-CallExpr 0x560ee5d352e8 <line:705:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x560ee5d352d0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x560ee5d35278 <col:3> 'void ()' Function 0x560ee5cdae40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x560ee5d35360 <line:706:3, col:15> 'int' '='
|   | |-DeclRefExpr 0x560ee5d35308 <col:3> 'int' lvalue Var 0x560ee5d34f50 'y$w_buff1' 'int'
|   | `-ImplicitCastExpr 0x560ee5d35348 <col:15> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x560ee5d35328 <col:15> 'int' lvalue Var 0x560ee5d34e58 'y$w_buff0' 'int'
|   |-BinaryOperator 0x560ee5d353c0 <line:707:3, col:15> 'int' '='
|   | |-DeclRefExpr 0x560ee5d35380 <col:3> 'int' lvalue Var 0x560ee5d34e58 'y$w_buff0' 'int'
|   | `-IntegerLiteral 0x560ee5d353a0 <col:15> 'int' 2
|   |-BinaryOperator 0x560ee5d35438 <line:708:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x560ee5d353e0 <col:3> '_Bool' lvalue Var 0x560ee5d34fc8 'y$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x560ee5d35420 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x560ee5d35400 <col:20> '_Bool' lvalue Var 0x560ee5d34ed0 'y$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x560ee5d354d0 <line:709:3, col:27> '_Bool' '='
|   | |-DeclRefExpr 0x560ee5d35458 <col:3> '_Bool' lvalue Var 0x560ee5d34ed0 'y$w_buff0_used' '_Bool'
|   | `-CStyleCastExpr 0x560ee5d354a8 <col:20, col:27> '_Bool' <IntegralToBoolean>
|   |   `-IntegerLiteral 0x560ee5d35478 <col:27> 'int' 1
|   |-CallExpr 0x560ee5d35658 <line:710:3, col:56> 'void'
|   | |-ImplicitCastExpr 0x560ee5d35640 <col:3> 'void (*)(int)' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x560ee5d354f0 <col:3> 'void (int)' Function 0x560ee5cdabc8 '__VERIFIER_assert' 'void (int)'
|   | `-UnaryOperator 0x560ee5d355f0 <col:21, col:55> 'int' prefix '!' cannot overflow
|   |   `-ParenExpr 0x560ee5d355d0 <col:22, col:55> 'int'
|   |     `-BinaryOperator 0x560ee5d355b0 <col:23, col:41> 'int' '&&'
|   |       |-ImplicitCastExpr 0x560ee5d35568 <col:23> 'int' <IntegralCast>
|   |       | `-ImplicitCastExpr 0x560ee5d35550 <col:23> '_Bool' <LValueToRValue>
|   |       |   `-DeclRefExpr 0x560ee5d35510 <col:23> '_Bool' lvalue Var 0x560ee5d34fc8 'y$w_buff1_used' '_Bool'
|   |       `-ImplicitCastExpr 0x560ee5d35598 <col:41> 'int' <IntegralCast>
|   |         `-ImplicitCastExpr 0x560ee5d35580 <col:41> '_Bool' <LValueToRValue>
|   |           `-DeclRefExpr 0x560ee5d35530 <col:41> '_Bool' lvalue Var 0x560ee5d34ed0 'y$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x560ee5d356d8 <line:711:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x560ee5d35680 <col:3> '_Bool' lvalue Var 0x560ee5d34b78 'y$r_buff1_thd0' '_Bool'
|   | `-ImplicitCastExpr 0x560ee5d356c0 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x560ee5d356a0 <col:20> '_Bool' lvalue Var 0x560ee5d34940 'y$r_buff0_thd0' '_Bool'
|   |-BinaryOperator 0x560ee5d35750 <line:712:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x560ee5d356f8 <col:3> '_Bool' lvalue Var 0x560ee5d34bf0 'y$r_buff1_thd1' '_Bool'
|   | `-ImplicitCastExpr 0x560ee5d35738 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x560ee5d35718 <col:20> '_Bool' lvalue Var 0x560ee5d349b8 'y$r_buff0_thd1' '_Bool'
|   |-BinaryOperator 0x560ee5d357c8 <line:713:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x560ee5d35770 <col:3> '_Bool' lvalue Var 0x560ee5d34c68 'y$r_buff1_thd2' '_Bool'
|   | `-ImplicitCastExpr 0x560ee5d357b0 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x560ee5d35790 <col:20> '_Bool' lvalue Var 0x560ee5d34a30 'y$r_buff0_thd2' '_Bool'
|   |-BinaryOperator 0x560ee5d35840 <line:714:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x560ee5d357e8 <col:3> '_Bool' lvalue Var 0x560ee5d34ce0 'y$r_buff1_thd3' '_Bool'
|   | `-ImplicitCastExpr 0x560ee5d35828 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x560ee5d35808 <col:20> '_Bool' lvalue Var 0x560ee5d34b00 'y$r_buff0_thd3' '_Bool'
|   |-BinaryOperator 0x560ee5d358d8 <line:715:3, col:27> '_Bool' '='
|   | |-DeclRefExpr 0x560ee5d35860 <col:3> '_Bool' lvalue Var 0x560ee5d349b8 'y$r_buff0_thd1' '_Bool'
|   | `-CStyleCastExpr 0x560ee5d358b0 <col:20, col:27> '_Bool' <IntegralToBoolean>
|   |   `-IntegerLiteral 0x560ee5d35880 <col:27> 'int' 1
|   |-CallExpr 0x560ee5d35930 <line:716:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x560ee5d35918 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x560ee5d358f8 <col:3> 'void ()' Function 0x560ee5cdaf00 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x560ee5d35988 <line:717:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x560ee5d35970 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x560ee5d35950 <col:3> 'void ()' Function 0x560ee5cdae40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x560ee5d359e8 <line:718:3, col:7> 'int' '='
|   | |-DeclRefExpr 0x560ee5d359a8 <col:3> 'int' lvalue Var 0x560ee5d34690 'x' 'int'
|   | `-IntegerLiteral 0x560ee5d359c8 <col:7> 'int' 1
|   |-CallExpr 0x560ee5d35a40 <line:719:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x560ee5d35a28 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x560ee5d35a08 <col:3> 'void ()' Function 0x560ee5cdaf00 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x560ee5d35a98 <line:720:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x560ee5d35a80 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x560ee5d35a60 <col:3> 'void ()' Function 0x560ee5cdae40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x560ee5d35d98 <line:721:3, col:103> 'int' '='
|   | |-DeclRefExpr 0x560ee5d35ab8 <col:3> 'int' lvalue Var 0x560ee5d347b0 'y' 'int'
|   | `-ConditionalOperator 0x560ee5d35d68 <col:7, col:103> 'int'
|   |   |-BinaryOperator 0x560ee5d35b90 <col:7, col:25> 'int' '&&'
|   |   | |-ImplicitCastExpr 0x560ee5d35b48 <col:7> 'int' <IntegralCast>
|   |   | | `-ImplicitCastExpr 0x560ee5d35b30 <col:7> '_Bool' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x560ee5d35ad8 <col:7> '_Bool' lvalue Var 0x560ee5d34ed0 'y$w_buff0_used' '_Bool'
|   |   | `-ImplicitCastExpr 0x560ee5d35b78 <col:25> 'int' <IntegralCast>
|   |   |   `-ImplicitCastExpr 0x560ee5d35b60 <col:25> '_Bool' <LValueToRValue>
|   |   |     `-DeclRefExpr 0x560ee5d35b10 <col:25> '_Bool' lvalue Var 0x560ee5d349b8 'y$r_buff0_thd1' '_Bool'
|   |   |-ImplicitCastExpr 0x560ee5d35d50 <col:42> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x560ee5d35bb0 <col:42> 'int' lvalue Var 0x560ee5d34e58 'y$w_buff0' 'int'
|   |   `-ParenExpr 0x560ee5d35d30 <col:54, col:103> 'int'
|   |     `-ConditionalOperator 0x560ee5d35d00 <col:55, col:102> 'int'
|   |       |-BinaryOperator 0x560ee5d35c70 <col:55, col:73> 'int' '&&'
|   |       | |-ImplicitCastExpr 0x560ee5d35c28 <col:55> 'int' <IntegralCast>
|   |       | | `-ImplicitCastExpr 0x560ee5d35c10 <col:55> '_Bool' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x560ee5d35bd0 <col:55> '_Bool' lvalue Var 0x560ee5d34fc8 'y$w_buff1_used' '_Bool'
|   |       | `-ImplicitCastExpr 0x560ee5d35c58 <col:73> 'int' <IntegralCast>
|   |       |   `-ImplicitCastExpr 0x560ee5d35c40 <col:73> '_Bool' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x560ee5d35bf0 <col:73> '_Bool' lvalue Var 0x560ee5d34bf0 'y$r_buff1_thd1' '_Bool'
|   |       |-ImplicitCastExpr 0x560ee5d35cd0 <col:90> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x560ee5d35c90 <col:90> 'int' lvalue Var 0x560ee5d34f50 'y$w_buff1' 'int'
|   |       `-ImplicitCastExpr 0x560ee5d35ce8 <col:102> 'int' <LValueToRValue>
|   |         `-DeclRefExpr 0x560ee5d35cb0 <col:102> 'int' lvalue Var 0x560ee5d347b0 'y' 'int'
|   |-BinaryOperator 0x560ee5d35fa0 <line:722:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x560ee5d35db8 <col:3> '_Bool' lvalue Var 0x560ee5d34ed0 'y$w_buff0_used' '_Bool'
|   | `-ImplicitCastExpr 0x560ee5d35f88 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x560ee5d35f58 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x560ee5d35e78 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x560ee5d35e30 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x560ee5d35e18 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x560ee5d35dd8 <col:20> '_Bool' lvalue Var 0x560ee5d34ed0 'y$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x560ee5d35e60 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x560ee5d35e48 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x560ee5d35df8 <col:38> '_Bool' lvalue Var 0x560ee5d349b8 'y$r_buff0_thd1' '_Bool'
|   |     |-ImplicitCastExpr 0x560ee5d35f10 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x560ee5d35ec8 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x560ee5d35e98 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x560ee5d35f40 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x560ee5d35f28 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x560ee5d35ef0 <col:66> '_Bool' lvalue Var 0x560ee5d34ed0 'y$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x560ee5d36288 <line:723:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x560ee5d35fc0 <col:3> '_Bool' lvalue Var 0x560ee5d34fc8 'y$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x560ee5d36270 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x560ee5d36240 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x560ee5d36160 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x560ee5d36080 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x560ee5d36038 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x560ee5d36020 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x560ee5d35fe0 <col:20> '_Bool' lvalue Var 0x560ee5d34ed0 'y$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x560ee5d36068 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x560ee5d36050 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x560ee5d36000 <col:38> '_Bool' lvalue Var 0x560ee5d349b8 'y$r_buff0_thd1' '_Bool'
|   |     | `-BinaryOperator 0x560ee5d36140 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x560ee5d360f8 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x560ee5d360e0 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x560ee5d360a0 <col:56> '_Bool' lvalue Var 0x560ee5d34fc8 'y$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x560ee5d36128 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x560ee5d36110 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x560ee5d360c0 <col:74> '_Bool' lvalue Var 0x560ee5d34bf0 'y$r_buff1_thd1' '_Bool'
|   |     |-ImplicitCastExpr 0x560ee5d361f8 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x560ee5d361b0 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x560ee5d36180 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x560ee5d36228 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x560ee5d36210 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x560ee5d361d8 <col:102> '_Bool' lvalue Var 0x560ee5d34fc8 'y$w_buff1_used' '_Bool'
|   |-BinaryOperator 0x560ee5d36490 <line:724:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x560ee5d362a8 <col:3> '_Bool' lvalue Var 0x560ee5d349b8 'y$r_buff0_thd1' '_Bool'
|   | `-ImplicitCastExpr 0x560ee5d36478 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x560ee5d36448 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x560ee5d36368 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x560ee5d36320 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x560ee5d36308 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x560ee5d362c8 <col:20> '_Bool' lvalue Var 0x560ee5d34ed0 'y$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x560ee5d36350 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x560ee5d36338 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x560ee5d362e8 <col:38> '_Bool' lvalue Var 0x560ee5d349b8 'y$r_buff0_thd1' '_Bool'
|   |     |-ImplicitCastExpr 0x560ee5d36400 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x560ee5d363b8 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x560ee5d36388 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x560ee5d36430 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x560ee5d36418 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x560ee5d363e0 <col:66> '_Bool' lvalue Var 0x560ee5d349b8 'y$r_buff0_thd1' '_Bool'
|   |-BinaryOperator 0x560ee5d36778 <line:725:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x560ee5d364b0 <col:3> '_Bool' lvalue Var 0x560ee5d34bf0 'y$r_buff1_thd1' '_Bool'
|   | `-ImplicitCastExpr 0x560ee5d36760 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x560ee5d36730 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x560ee5d36650 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x560ee5d36570 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x560ee5d36528 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x560ee5d36510 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x560ee5d364d0 <col:20> '_Bool' lvalue Var 0x560ee5d34ed0 'y$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x560ee5d36558 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x560ee5d36540 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x560ee5d364f0 <col:38> '_Bool' lvalue Var 0x560ee5d349b8 'y$r_buff0_thd1' '_Bool'
|   |     | `-BinaryOperator 0x560ee5d36630 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x560ee5d365e8 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x560ee5d365d0 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x560ee5d36590 <col:56> '_Bool' lvalue Var 0x560ee5d34fc8 'y$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x560ee5d36618 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x560ee5d36600 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x560ee5d365b0 <col:74> '_Bool' lvalue Var 0x560ee5d34bf0 'y$r_buff1_thd1' '_Bool'
|   |     |-ImplicitCastExpr 0x560ee5d366e8 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x560ee5d366a0 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x560ee5d36670 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x560ee5d36718 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x560ee5d36700 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x560ee5d366c8 <col:102> '_Bool' lvalue Var 0x560ee5d34bf0 'y$r_buff1_thd1' '_Bool'
|   |-CallExpr 0x560ee5d367d0 <line:726:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x560ee5d367b8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x560ee5d36798 <col:3> 'void ()' Function 0x560ee5cdaf00 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x560ee5d36828 <line:727:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x560ee5d36810 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x560ee5d367f0 <col:3> 'void ()' Function 0x560ee5cdae40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x560ee5d368e0 <line:728:3, col:41> 'int' '='
|   | |-DeclRefExpr 0x560ee5d36848 <col:3> 'int' lvalue Var 0x560ee5d34120 '__unbuffered_cnt' 'int'
|   | `-BinaryOperator 0x560ee5d368c0 <col:22, col:41> 'int' '+'
|   |   |-ImplicitCastExpr 0x560ee5d368a8 <col:22> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x560ee5d36868 <col:22> 'int' lvalue Var 0x560ee5d34120 '__unbuffered_cnt' 'int'
|   |   `-IntegerLiteral 0x560ee5d36888 <col:41> 'int' 1
|   |-CallExpr 0x560ee5d36938 <line:729:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x560ee5d36920 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x560ee5d36900 <col:3> 'void ()' Function 0x560ee5cdaf00 '__VERIFIER_atomic_end' 'void ()'
|   `-ReturnStmt 0x560ee5d369e8 <line:730:3, col:36>
|     `-CallExpr 0x560ee5d369c8 <col:10, col:36> 'void *'
|       `-ImplicitCastExpr 0x560ee5d369b0 <col:10> 'void *(*)(void)' <FunctionToPointerDecay>
|         `-DeclRefExpr 0x560ee5d36958 <col:10> 'void *(void)' Function 0x560ee5cda958 '__VERIFIER_nondet_pointer' 'void *(void)'
|-FunctionDecl 0x560ee5d36bb8 prev 0x560ee5d33c48 <line:732:1, line:751:1> line:732:8 used P1 'void *(void *)'
| |-ParmVarDecl 0x560ee5d36b20 <col:11, col:17> col:17 arg 'void *'
| `-CompoundStmt 0x560ee5d37df0 <line:733:1, line:751:1>
|   |-CallExpr 0x560ee5d36c98 <line:734:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x560ee5d36c80 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x560ee5d36c60 <col:3> 'void ()' Function 0x560ee5cdae40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x560ee5d36d10 <line:735:3, col:25> 'int' '='
|   | |-DeclRefExpr 0x560ee5d36cb8 <col:3> 'int' lvalue Var 0x560ee5d34240 '__unbuffered_p1_EAX' 'int'
|   | `-ImplicitCastExpr 0x560ee5d36cf8 <col:25> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x560ee5d36cd8 <col:25> 'int' lvalue Var 0x560ee5d34690 'x' 'int'
|   |-CallExpr 0x560ee5d36d68 <line:736:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x560ee5d36d50 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x560ee5d36d30 <col:3> 'void ()' Function 0x560ee5cdaf00 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x560ee5d36dc0 <line:737:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x560ee5d36da8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x560ee5d36d88 <col:3> 'void ()' Function 0x560ee5cdae40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x560ee5d36e20 <line:738:3, col:7> 'int' '='
|   | |-DeclRefExpr 0x560ee5d36de0 <col:3> 'int' lvalue Var 0x560ee5d347b0 'y' 'int'
|   | `-IntegerLiteral 0x560ee5d36e00 <col:7> 'int' 1
|   |-CallExpr 0x560ee5d36e78 <line:739:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x560ee5d36e60 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x560ee5d36e40 <col:3> 'void ()' Function 0x560ee5cdaf00 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x560ee5d36ed0 <line:740:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x560ee5d36eb8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x560ee5d36e98 <col:3> 'void ()' Function 0x560ee5cdae40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x560ee5d371b8 <line:741:3, col:103> 'int' '='
|   | |-DeclRefExpr 0x560ee5d36ef0 <col:3> 'int' lvalue Var 0x560ee5d347b0 'y' 'int'
|   | `-ConditionalOperator 0x560ee5d37188 <col:7, col:103> 'int'
|   |   |-BinaryOperator 0x560ee5d36fb0 <col:7, col:25> 'int' '&&'
|   |   | |-ImplicitCastExpr 0x560ee5d36f68 <col:7> 'int' <IntegralCast>
|   |   | | `-ImplicitCastExpr 0x560ee5d36f50 <col:7> '_Bool' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x560ee5d36f10 <col:7> '_Bool' lvalue Var 0x560ee5d34ed0 'y$w_buff0_used' '_Bool'
|   |   | `-ImplicitCastExpr 0x560ee5d36f98 <col:25> 'int' <IntegralCast>
|   |   |   `-ImplicitCastExpr 0x560ee5d36f80 <col:25> '_Bool' <LValueToRValue>
|   |   |     `-DeclRefExpr 0x560ee5d36f30 <col:25> '_Bool' lvalue Var 0x560ee5d34a30 'y$r_buff0_thd2' '_Bool'
|   |   |-ImplicitCastExpr 0x560ee5d37170 <col:42> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x560ee5d36fd0 <col:42> 'int' lvalue Var 0x560ee5d34e58 'y$w_buff0' 'int'
|   |   `-ParenExpr 0x560ee5d37150 <col:54, col:103> 'int'
|   |     `-ConditionalOperator 0x560ee5d37120 <col:55, col:102> 'int'
|   |       |-BinaryOperator 0x560ee5d37090 <col:55, col:73> 'int' '&&'
|   |       | |-ImplicitCastExpr 0x560ee5d37048 <col:55> 'int' <IntegralCast>
|   |       | | `-ImplicitCastExpr 0x560ee5d37030 <col:55> '_Bool' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x560ee5d36ff0 <col:55> '_Bool' lvalue Var 0x560ee5d34fc8 'y$w_buff1_used' '_Bool'
|   |       | `-ImplicitCastExpr 0x560ee5d37078 <col:73> 'int' <IntegralCast>
|   |       |   `-ImplicitCastExpr 0x560ee5d37060 <col:73> '_Bool' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x560ee5d37010 <col:73> '_Bool' lvalue Var 0x560ee5d34c68 'y$r_buff1_thd2' '_Bool'
|   |       |-ImplicitCastExpr 0x560ee5d370f0 <col:90> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x560ee5d370b0 <col:90> 'int' lvalue Var 0x560ee5d34f50 'y$w_buff1' 'int'
|   |       `-ImplicitCastExpr 0x560ee5d37108 <col:102> 'int' <LValueToRValue>
|   |         `-DeclRefExpr 0x560ee5d370d0 <col:102> 'int' lvalue Var 0x560ee5d347b0 'y' 'int'
|   |-BinaryOperator 0x560ee5d373c0 <line:742:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x560ee5d371d8 <col:3> '_Bool' lvalue Var 0x560ee5d34ed0 'y$w_buff0_used' '_Bool'
|   | `-ImplicitCastExpr 0x560ee5d373a8 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x560ee5d37378 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x560ee5d37298 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x560ee5d37250 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x560ee5d37238 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x560ee5d371f8 <col:20> '_Bool' lvalue Var 0x560ee5d34ed0 'y$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x560ee5d37280 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x560ee5d37268 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x560ee5d37218 <col:38> '_Bool' lvalue Var 0x560ee5d34a30 'y$r_buff0_thd2' '_Bool'
|   |     |-ImplicitCastExpr 0x560ee5d37330 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x560ee5d372e8 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x560ee5d372b8 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x560ee5d37360 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x560ee5d37348 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x560ee5d37310 <col:66> '_Bool' lvalue Var 0x560ee5d34ed0 'y$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x560ee5d376a8 <line:743:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x560ee5d373e0 <col:3> '_Bool' lvalue Var 0x560ee5d34fc8 'y$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x560ee5d37690 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x560ee5d37660 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x560ee5d37580 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x560ee5d374a0 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x560ee5d37458 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x560ee5d37440 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x560ee5d37400 <col:20> '_Bool' lvalue Var 0x560ee5d34ed0 'y$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x560ee5d37488 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x560ee5d37470 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x560ee5d37420 <col:38> '_Bool' lvalue Var 0x560ee5d34a30 'y$r_buff0_thd2' '_Bool'
|   |     | `-BinaryOperator 0x560ee5d37560 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x560ee5d37518 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x560ee5d37500 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x560ee5d374c0 <col:56> '_Bool' lvalue Var 0x560ee5d34fc8 'y$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x560ee5d37548 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x560ee5d37530 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x560ee5d374e0 <col:74> '_Bool' lvalue Var 0x560ee5d34c68 'y$r_buff1_thd2' '_Bool'
|   |     |-ImplicitCastExpr 0x560ee5d37618 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x560ee5d375d0 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x560ee5d375a0 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x560ee5d37648 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x560ee5d37630 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x560ee5d375f8 <col:102> '_Bool' lvalue Var 0x560ee5d34fc8 'y$w_buff1_used' '_Bool'
|   |-BinaryOperator 0x560ee5d378b0 <line:744:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x560ee5d376c8 <col:3> '_Bool' lvalue Var 0x560ee5d34a30 'y$r_buff0_thd2' '_Bool'
|   | `-ImplicitCastExpr 0x560ee5d37898 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x560ee5d37868 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x560ee5d37788 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x560ee5d37740 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x560ee5d37728 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x560ee5d376e8 <col:20> '_Bool' lvalue Var 0x560ee5d34ed0 'y$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x560ee5d37770 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x560ee5d37758 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x560ee5d37708 <col:38> '_Bool' lvalue Var 0x560ee5d34a30 'y$r_buff0_thd2' '_Bool'
|   |     |-ImplicitCastExpr 0x560ee5d37820 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x560ee5d377d8 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x560ee5d377a8 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x560ee5d37850 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x560ee5d37838 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x560ee5d37800 <col:66> '_Bool' lvalue Var 0x560ee5d34a30 'y$r_buff0_thd2' '_Bool'
|   |-BinaryOperator 0x560ee5d37ba8 <line:745:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x560ee5d378d0 <col:3> '_Bool' lvalue Var 0x560ee5d34c68 'y$r_buff1_thd2' '_Bool'
|   | `-ImplicitCastExpr 0x560ee5d37b90 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x560ee5d37b60 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x560ee5d37a70 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x560ee5d37990 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x560ee5d37948 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x560ee5d37930 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x560ee5d378f0 <col:20> '_Bool' lvalue Var 0x560ee5d34ed0 'y$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x560ee5d37978 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x560ee5d37960 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x560ee5d37910 <col:38> '_Bool' lvalue Var 0x560ee5d34a30 'y$r_buff0_thd2' '_Bool'
|   |     | `-BinaryOperator 0x560ee5d37a50 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x560ee5d37a08 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x560ee5d379f0 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x560ee5d379b0 <col:56> '_Bool' lvalue Var 0x560ee5d34fc8 'y$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x560ee5d37a38 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x560ee5d37a20 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x560ee5d379d0 <col:74> '_Bool' lvalue Var 0x560ee5d34c68 'y$r_buff1_thd2' '_Bool'
|   |     |-ImplicitCastExpr 0x560ee5d37b08 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x560ee5d37ac0 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x560ee5d37a90 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x560ee5d37b48 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x560ee5d37b30 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x560ee5d37ae8 <col:102> '_Bool' lvalue Var 0x560ee5d34c68 'y$r_buff1_thd2' '_Bool'
|   |-CallExpr 0x560ee5d37c00 <line:746:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x560ee5d37be8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x560ee5d37bc8 <col:3> 'void ()' Function 0x560ee5cdaf00 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x560ee5d37c58 <line:747:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x560ee5d37c40 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x560ee5d37c20 <col:3> 'void ()' Function 0x560ee5cdae40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x560ee5d37d10 <line:748:3, col:41> 'int' '='
|   | |-DeclRefExpr 0x560ee5d37c78 <col:3> 'int' lvalue Var 0x560ee5d34120 '__unbuffered_cnt' 'int'
|   | `-BinaryOperator 0x560ee5d37cf0 <col:22, col:41> 'int' '+'
|   |   |-ImplicitCastExpr 0x560ee5d37cd8 <col:22> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x560ee5d37c98 <col:22> 'int' lvalue Var 0x560ee5d34120 '__unbuffered_cnt' 'int'
|   |   `-IntegerLiteral 0x560ee5d37cb8 <col:41> 'int' 1
|   |-CallExpr 0x560ee5d37d68 <line:749:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x560ee5d37d50 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x560ee5d37d30 <col:3> 'void ()' Function 0x560ee5cdaf00 '__VERIFIER_atomic_end' 'void ()'
|   `-ReturnStmt 0x560ee5d37de0 <line:750:3, col:36>
|     `-CallExpr 0x560ee5d37dc0 <col:10, col:36> 'void *'
|       `-ImplicitCastExpr 0x560ee5d37da8 <col:10> 'void *(*)(void)' <FunctionToPointerDecay>
|         `-DeclRefExpr 0x560ee5d37d88 <col:10> 'void *(void)' Function 0x560ee5cda958 '__VERIFIER_nondet_pointer' 'void *(void)'
|-FunctionDecl 0x560ee5d37f38 prev 0x560ee5d33da0 <line:752:1, line:797:1> line:752:8 used P2 'void *(void *)'
| |-ParmVarDecl 0x560ee5d37ea0 <col:11, col:17> col:17 arg 'void *'
| `-CompoundStmt 0x560ee5d3e4b0 <line:753:1, line:797:1>
|   |-CallExpr 0x560ee5d38018 <line:754:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x560ee5d38000 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x560ee5d37fe0 <col:3> 'void ()' Function 0x560ee5cdae40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x560ee5d380c8 <line:755:3, col:45> '_Bool' '='
|   | |-DeclRefExpr 0x560ee5d38038 <col:3> '_Bool' lvalue Var 0x560ee5d35040 'weak$$choice0' '_Bool'
|   | `-ImplicitCastExpr 0x560ee5d380b0 <col:19, col:45> '_Bool' <PointerToBoolean>
|   |   `-CallExpr 0x560ee5d38090 <col:19, col:45> 'void *'
|   |     `-ImplicitCastExpr 0x560ee5d38078 <col:19> 'void *(*)(void)' <FunctionToPointerDecay>
|   |       `-DeclRefExpr 0x560ee5d38058 <col:19> 'void *(void)' Function 0x560ee5cda958 '__VERIFIER_nondet_pointer' 'void *(void)'
|   |-BinaryOperator 0x560ee5d38178 <line:756:3, col:45> '_Bool' '='
|   | |-DeclRefExpr 0x560ee5d380e8 <col:3> '_Bool' lvalue Var 0x560ee5d350b8 'weak$$choice2' '_Bool'
|   | `-ImplicitCastExpr 0x560ee5d38160 <col:19, col:45> '_Bool' <PointerToBoolean>
|   |   `-CallExpr 0x560ee5d38140 <col:19, col:45> 'void *'
|   |     `-ImplicitCastExpr 0x560ee5d38128 <col:19> 'void *(*)(void)' <FunctionToPointerDecay>
|   |       `-DeclRefExpr 0x560ee5d38108 <col:19> 'void *(void)' Function 0x560ee5cda958 '__VERIFIER_nondet_pointer' 'void *(void)'
|   |-BinaryOperator 0x560ee5d381f0 <line:757:3, col:21> '_Bool' '='
|   | |-DeclRefExpr 0x560ee5d38198 <col:3> '_Bool' lvalue Var 0x560ee5d34848 'y$flush_delayed' '_Bool'
|   | `-ImplicitCastExpr 0x560ee5d381d8 <col:21> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x560ee5d381b8 <col:21> '_Bool' lvalue Var 0x560ee5d350b8 'weak$$choice2' '_Bool'
|   |-BinaryOperator 0x560ee5d38268 <line:758:3, col:15> 'int' '='
|   | |-DeclRefExpr 0x560ee5d38210 <col:3> 'int' lvalue Var 0x560ee5d348c8 'y$mem_tmp' 'int'
|   | `-ImplicitCastExpr 0x560ee5d38250 <col:15> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x560ee5d38230 <col:15> 'int' lvalue Var 0x560ee5d347b0 'y' 'int'
|   |-BinaryOperator 0x560ee5d386a0 <line:759:3, col:162> 'int' '='
|   | |-DeclRefExpr 0x560ee5d38288 <col:3> 'int' lvalue Var 0x560ee5d347b0 'y' 'int'
|   | `-ConditionalOperator 0x560ee5d38670 <col:7, col:162> 'int'
|   |   |-BinaryOperator 0x560ee5d38498 <col:7, col:84> 'int' '||'
|   |   | |-BinaryOperator 0x560ee5d383b8 <col:7, col:46> 'int' '||'
|   |   | | |-UnaryOperator 0x560ee5d382e0 <col:7, col:8> 'int' prefix '!' cannot overflow
|   |   | | | `-ImplicitCastExpr 0x560ee5d382c8 <col:8> '_Bool' <LValueToRValue>
|   |   | | |   `-DeclRefExpr 0x560ee5d382a8 <col:8> '_Bool' lvalue Var 0x560ee5d34ed0 'y$w_buff0_used' '_Bool'
|   |   | | `-BinaryOperator 0x560ee5d38398 <col:26, col:46> 'int' '&&'
|   |   | |   |-UnaryOperator 0x560ee5d38330 <col:26, col:27> 'int' prefix '!' cannot overflow
|   |   | |   | `-ImplicitCastExpr 0x560ee5d38318 <col:27> '_Bool' <LValueToRValue>
|   |   | |   |   `-DeclRefExpr 0x560ee5d382f8 <col:27> '_Bool' lvalue Var 0x560ee5d34b00 'y$r_buff0_thd3' '_Bool'
|   |   | |   `-UnaryOperator 0x560ee5d38380 <col:45, col:46> 'int' prefix '!' cannot overflow
|   |   | |     `-ImplicitCastExpr 0x560ee5d38368 <col:46> '_Bool' <LValueToRValue>
|   |   | |       `-DeclRefExpr 0x560ee5d38348 <col:46> '_Bool' lvalue Var 0x560ee5d34fc8 'y$w_buff1_used' '_Bool'
|   |   | `-BinaryOperator 0x560ee5d38478 <col:64, col:84> 'int' '&&'
|   |   |   |-UnaryOperator 0x560ee5d38410 <col:64, col:65> 'int' prefix '!' cannot overflow
|   |   |   | `-ImplicitCastExpr 0x560ee5d383f8 <col:65> '_Bool' <LValueToRValue>
|   |   |   |   `-DeclRefExpr 0x560ee5d383d8 <col:65> '_Bool' lvalue Var 0x560ee5d34b00 'y$r_buff0_thd3' '_Bool'
|   |   |   `-UnaryOperator 0x560ee5d38460 <col:83, col:84> 'int' prefix '!' cannot overflow
|   |   |     `-ImplicitCastExpr 0x560ee5d38448 <col:84> '_Bool' <LValueToRValue>
|   |   |       `-DeclRefExpr 0x560ee5d38428 <col:84> '_Bool' lvalue Var 0x560ee5d34ce0 'y$r_buff1_thd3' '_Bool'
|   |   |-ImplicitCastExpr 0x560ee5d38658 <col:101> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x560ee5d384b8 <col:101> 'int' lvalue Var 0x560ee5d347b0 'y' 'int'
|   |   `-ParenExpr 0x560ee5d38638 <col:105, col:162> 'int'
|   |     `-ConditionalOperator 0x560ee5d38608 <col:106, col:153> 'int'
|   |       |-BinaryOperator 0x560ee5d38578 <col:106, col:124> 'int' '&&'
|   |       | |-ImplicitCastExpr 0x560ee5d38530 <col:106> 'int' <IntegralCast>
|   |       | | `-ImplicitCastExpr 0x560ee5d38518 <col:106> '_Bool' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x560ee5d384d8 <col:106> '_Bool' lvalue Var 0x560ee5d34ed0 'y$w_buff0_used' '_Bool'
|   |       | `-ImplicitCastExpr 0x560ee5d38560 <col:124> 'int' <IntegralCast>
|   |       |   `-ImplicitCastExpr 0x560ee5d38548 <col:124> '_Bool' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x560ee5d384f8 <col:124> '_Bool' lvalue Var 0x560ee5d34b00 'y$r_buff0_thd3' '_Bool'
|   |       |-ImplicitCastExpr 0x560ee5d385d8 <col:141> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x560ee5d38598 <col:141> 'int' lvalue Var 0x560ee5d34e58 'y$w_buff0' 'int'
|   |       `-ImplicitCastExpr 0x560ee5d385f0 <col:153> 'int' <LValueToRValue>
|   |         `-DeclRefExpr 0x560ee5d385b8 <col:153> 'int' lvalue Var 0x560ee5d34f50 'y$w_buff1' 'int'
|   |-BinaryOperator 0x560ee5d38bd8 <line:760:3, col:208> 'int' '='
|   | |-DeclRefExpr 0x560ee5d386c0 <col:3> 'int' lvalue Var 0x560ee5d34e58 'y$w_buff0' 'int'
|   | `-ConditionalOperator 0x560ee5d38ba8 <col:15, col:208> 'int'
|   |   |-ImplicitCastExpr 0x560ee5d38b78 <col:15> 'int' <IntegralCast>
|   |   | `-ImplicitCastExpr 0x560ee5d38b60 <col:15> '_Bool' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x560ee5d386e0 <col:15> '_Bool' lvalue Var 0x560ee5d350b8 'weak$$choice2' '_Bool'
|   |   |-ImplicitCastExpr 0x560ee5d38b90 <col:31> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x560ee5d38700 <col:31> 'int' lvalue Var 0x560ee5d34e58 'y$w_buff0' 'int'
|   |   `-ParenExpr 0x560ee5d38b40 <col:43, col:208> 'int'
|   |     `-ConditionalOperator 0x560ee5d38ae8 <col:44, col:207> 'int'
|   |       |-BinaryOperator 0x560ee5d38910 <col:44, col:121> 'int' '||'
|   |       | |-BinaryOperator 0x560ee5d38830 <col:44, col:83> 'int' '||'
|   |       | | |-UnaryOperator 0x560ee5d38758 <col:44, col:45> 'int' prefix '!' cannot overflow
|   |       | | | `-ImplicitCastExpr 0x560ee5d38740 <col:45> '_Bool' <LValueToRValue>
|   |       | | |   `-DeclRefExpr 0x560ee5d38720 <col:45> '_Bool' lvalue Var 0x560ee5d34ed0 'y$w_buff0_used' '_Bool'
|   |       | | `-BinaryOperator 0x560ee5d38810 <col:63, col:83> 'int' '&&'
|   |       | |   |-UnaryOperator 0x560ee5d387a8 <col:63, col:64> 'int' prefix '!' cannot overflow
|   |       | |   | `-ImplicitCastExpr 0x560ee5d38790 <col:64> '_Bool' <LValueToRValue>
|   |       | |   |   `-DeclRefExpr 0x560ee5d38770 <col:64> '_Bool' lvalue Var 0x560ee5d34b00 'y$r_buff0_thd3' '_Bool'
|   |       | |   `-UnaryOperator 0x560ee5d387f8 <col:82, col:83> 'int' prefix '!' cannot overflow
|   |       | |     `-ImplicitCastExpr 0x560ee5d387e0 <col:83> '_Bool' <LValueToRValue>
|   |       | |       `-DeclRefExpr 0x560ee5d387c0 <col:83> '_Bool' lvalue Var 0x560ee5d34fc8 'y$w_buff1_used' '_Bool'
|   |       | `-BinaryOperator 0x560ee5d388f0 <col:101, col:121> 'int' '&&'
|   |       |   |-UnaryOperator 0x560ee5d38888 <col:101, col:102> 'int' prefix '!' cannot overflow
|   |       |   | `-ImplicitCastExpr 0x560ee5d38870 <col:102> '_Bool' <LValueToRValue>
|   |       |   |   `-DeclRefExpr 0x560ee5d38850 <col:102> '_Bool' lvalue Var 0x560ee5d34b00 'y$r_buff0_thd3' '_Bool'
|   |       |   `-UnaryOperator 0x560ee5d388d8 <col:120, col:121> 'int' prefix '!' cannot overflow
|   |       |     `-ImplicitCastExpr 0x560ee5d388c0 <col:121> '_Bool' <LValueToRValue>
|   |       |       `-DeclRefExpr 0x560ee5d388a0 <col:121> '_Bool' lvalue Var 0x560ee5d34ce0 'y$r_buff1_thd3' '_Bool'
|   |       |-ImplicitCastExpr 0x560ee5d38ad0 <col:138> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x560ee5d38930 <col:138> 'int' lvalue Var 0x560ee5d34e58 'y$w_buff0' 'int'
|   |       `-ParenExpr 0x560ee5d38ab0 <col:150, col:207> 'int'
|   |         `-ConditionalOperator 0x560ee5d38a80 <col:151, col:198> 'int'
|   |           |-BinaryOperator 0x560ee5d389f0 <col:151, col:169> 'int' '&&'
|   |           | |-ImplicitCastExpr 0x560ee5d389a8 <col:151> 'int' <IntegralCast>
|   |           | | `-ImplicitCastExpr 0x560ee5d38990 <col:151> '_Bool' <LValueToRValue>
|   |           | |   `-DeclRefExpr 0x560ee5d38950 <col:151> '_Bool' lvalue Var 0x560ee5d34ed0 'y$w_buff0_used' '_Bool'
|   |           | `-ImplicitCastExpr 0x560ee5d389d8 <col:169> 'int' <IntegralCast>
|   |           |   `-ImplicitCastExpr 0x560ee5d389c0 <col:169> '_Bool' <LValueToRValue>
|   |           |     `-DeclRefExpr 0x560ee5d38970 <col:169> '_Bool' lvalue Var 0x560ee5d34b00 'y$r_buff0_thd3' '_Bool'
|   |           |-ImplicitCastExpr 0x560ee5d38a50 <col:186> 'int' <LValueToRValue>
|   |           | `-DeclRefExpr 0x560ee5d38a10 <col:186> 'int' lvalue Var 0x560ee5d34e58 'y$w_buff0' 'int'
|   |           `-ImplicitCastExpr 0x560ee5d38a68 <col:198> 'int' <LValueToRValue>
|   |             `-DeclRefExpr 0x560ee5d38a30 <col:198> 'int' lvalue Var 0x560ee5d34e58 'y$w_buff0' 'int'
|   |-BinaryOperator 0x560ee5d390e8 <line:761:3, col:208> 'int' '='
|   | |-DeclRefExpr 0x560ee5d38bf8 <col:3> 'int' lvalue Var 0x560ee5d34f50 'y$w_buff1' 'int'
|   | `-ConditionalOperator 0x560ee5d390b8 <col:15, col:208> 'int'
|   |   |-ImplicitCastExpr 0x560ee5d39088 <col:15> 'int' <IntegralCast>
|   |   | `-ImplicitCastExpr 0x560ee5d39070 <col:15> '_Bool' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x560ee5d38c18 <col:15> '_Bool' lvalue Var 0x560ee5d350b8 'weak$$choice2' '_Bool'
|   |   |-ImplicitCastExpr 0x560ee5d390a0 <col:31> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x560ee5d38c38 <col:31> 'int' lvalue Var 0x560ee5d34f50 'y$w_buff1' 'int'
|   |   `-ParenExpr 0x560ee5d39050 <col:43, col:208> 'int'
|   |     `-ConditionalOperator 0x560ee5d39020 <col:44, col:207> 'int'
|   |       |-BinaryOperator 0x560ee5d38e48 <col:44, col:121> 'int' '||'
|   |       | |-BinaryOperator 0x560ee5d38d68 <col:44, col:83> 'int' '||'
|   |       | | |-UnaryOperator 0x560ee5d38c90 <col:44, col:45> 'int' prefix '!' cannot overflow
|   |       | | | `-ImplicitCastExpr 0x560ee5d38c78 <col:45> '_Bool' <LValueToRValue>
|   |       | | |   `-DeclRefExpr 0x560ee5d38c58 <col:45> '_Bool' lvalue Var 0x560ee5d34ed0 'y$w_buff0_used' '_Bool'
|   |       | | `-BinaryOperator 0x560ee5d38d48 <col:63, col:83> 'int' '&&'
|   |       | |   |-UnaryOperator 0x560ee5d38ce0 <col:63, col:64> 'int' prefix '!' cannot overflow
|   |       | |   | `-ImplicitCastExpr 0x560ee5d38cc8 <col:64> '_Bool' <LValueToRValue>
|   |       | |   |   `-DeclRefExpr 0x560ee5d38ca8 <col:64> '_Bool' lvalue Var 0x560ee5d34b00 'y$r_buff0_thd3' '_Bool'
|   |       | |   `-UnaryOperator 0x560ee5d38d30 <col:82, col:83> 'int' prefix '!' cannot overflow
|   |       | |     `-ImplicitCastExpr 0x560ee5d38d18 <col:83> '_Bool' <LValueToRValue>
|   |       | |       `-DeclRefExpr 0x560ee5d38cf8 <col:83> '_Bool' lvalue Var 0x560ee5d34fc8 'y$w_buff1_used' '_Bool'
|   |       | `-BinaryOperator 0x560ee5d38e28 <col:101, col:121> 'int' '&&'
|   |       |   |-UnaryOperator 0x560ee5d38dc0 <col:101, col:102> 'int' prefix '!' cannot overflow
|   |       |   | `-ImplicitCastExpr 0x560ee5d38da8 <col:102> '_Bool' <LValueToRValue>
|   |       |   |   `-DeclRefExpr 0x560ee5d38d88 <col:102> '_Bool' lvalue Var 0x560ee5d34b00 'y$r_buff0_thd3' '_Bool'
|   |       |   `-UnaryOperator 0x560ee5d38e10 <col:120, col:121> 'int' prefix '!' cannot overflow
|   |       |     `-ImplicitCastExpr 0x560ee5d38df8 <col:121> '_Bool' <LValueToRValue>
|   |       |       `-DeclRefExpr 0x560ee5d38dd8 <col:121> '_Bool' lvalue Var 0x560ee5d34ce0 'y$r_buff1_thd3' '_Bool'
|   |       |-ImplicitCastExpr 0x560ee5d39008 <col:138> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x560ee5d38e68 <col:138> 'int' lvalue Var 0x560ee5d34f50 'y$w_buff1' 'int'
|   |       `-ParenExpr 0x560ee5d38fe8 <col:150, col:207> 'int'
|   |         `-ConditionalOperator 0x560ee5d38fb8 <col:151, col:198> 'int'
|   |           |-BinaryOperator 0x560ee5d38f28 <col:151, col:169> 'int' '&&'
|   |           | |-ImplicitCastExpr 0x560ee5d38ee0 <col:151> 'int' <IntegralCast>
|   |           | | `-ImplicitCastExpr 0x560ee5d38ec8 <col:151> '_Bool' <LValueToRValue>
|   |           | |   `-DeclRefExpr 0x560ee5d38e88 <col:151> '_Bool' lvalue Var 0x560ee5d34ed0 'y$w_buff0_used' '_Bool'
|   |           | `-ImplicitCastExpr 0x560ee5d38f10 <col:169> 'int' <IntegralCast>
|   |           |   `-ImplicitCastExpr 0x560ee5d38ef8 <col:169> '_Bool' <LValueToRValue>
|   |           |     `-DeclRefExpr 0x560ee5d38ea8 <col:169> '_Bool' lvalue Var 0x560ee5d34b00 'y$r_buff0_thd3' '_Bool'
|   |           |-ImplicitCastExpr 0x560ee5d38f88 <col:186> 'int' <LValueToRValue>
|   |           | `-DeclRefExpr 0x560ee5d38f48 <col:186> 'int' lvalue Var 0x560ee5d34f50 'y$w_buff1' 'int'
|   |           `-ImplicitCastExpr 0x560ee5d38fa0 <col:198> 'int' <LValueToRValue>
|   |             `-DeclRefExpr 0x560ee5d38f68 <col:198> 'int' lvalue Var 0x560ee5d34f50 'y$w_buff1' 'int'
|   |-BinaryOperator 0x560ee5d39690 <line:762:3, col:227> '_Bool' '='
|   | |-DeclRefExpr 0x560ee5d39108 <col:3> '_Bool' lvalue Var 0x560ee5d34ed0 'y$w_buff0_used' '_Bool'
|   | `-ImplicitCastExpr 0x560ee5d39678 <col:20, col:227> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x560ee5d39648 <col:20, col:227> 'int'
|   |     |-ImplicitCastExpr 0x560ee5d39600 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x560ee5d395e8 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x560ee5d39128 <col:20> '_Bool' lvalue Var 0x560ee5d350b8 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x560ee5d39630 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x560ee5d39618 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x560ee5d39148 <col:36> '_Bool' lvalue Var 0x560ee5d34ed0 'y$w_buff0_used' '_Bool'
|   |     `-ParenExpr 0x560ee5d395c8 <col:53, col:227> 'int'
|   |       `-ConditionalOperator 0x560ee5d39598 <col:54, col:226> 'int'
|   |         |-BinaryOperator 0x560ee5d39358 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x560ee5d39278 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x560ee5d391a0 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x560ee5d39188 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x560ee5d39168 <col:55> '_Bool' lvalue Var 0x560ee5d34ed0 'y$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x560ee5d39258 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x560ee5d391f0 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x560ee5d391d8 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x560ee5d391b8 <col:74> '_Bool' lvalue Var 0x560ee5d34b00 'y$r_buff0_thd3' '_Bool'
|   |         | |   `-UnaryOperator 0x560ee5d39240 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x560ee5d39228 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x560ee5d39208 <col:93> '_Bool' lvalue Var 0x560ee5d34fc8 'y$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x560ee5d39338 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x560ee5d392d0 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x560ee5d392b8 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x560ee5d39298 <col:112> '_Bool' lvalue Var 0x560ee5d34b00 'y$r_buff0_thd3' '_Bool'
|   |         |   `-UnaryOperator 0x560ee5d39320 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x560ee5d39308 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x560ee5d392e8 <col:131> '_Bool' lvalue Var 0x560ee5d34ce0 'y$r_buff1_thd3' '_Bool'
|   |         |-ImplicitCastExpr 0x560ee5d39580 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x560ee5d39568 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x560ee5d39378 <col:148> '_Bool' lvalue Var 0x560ee5d34ed0 'y$w_buff0_used' '_Bool'
|   |         `-ParenExpr 0x560ee5d39548 <col:165, col:226> 'int'
|   |           `-ConditionalOperator 0x560ee5d39518 <col:166, col:212> 'int'
|   |             |-BinaryOperator 0x560ee5d39438 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x560ee5d393f0 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x560ee5d393d8 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x560ee5d39398 <col:166> '_Bool' lvalue Var 0x560ee5d34ed0 'y$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x560ee5d39420 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x560ee5d39408 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x560ee5d393b8 <col:184> '_Bool' lvalue Var 0x560ee5d34b00 'y$r_buff0_thd3' '_Bool'
|   |             |-ImplicitCastExpr 0x560ee5d394d0 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x560ee5d39488 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x560ee5d39458 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x560ee5d39500 <col:212> 'int' <IntegralCast>
|   |               `-ImplicitCastExpr 0x560ee5d394e8 <col:212> '_Bool' <LValueToRValue>
|   |                 `-DeclRefExpr 0x560ee5d394b0 <col:212> '_Bool' lvalue Var 0x560ee5d34ed0 'y$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x560ee5d39c78 <line:763:3, col:221> '_Bool' '='
|   | |-DeclRefExpr 0x560ee5d396b0 <col:3> '_Bool' lvalue Var 0x560ee5d34fc8 'y$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x560ee5d39c60 <col:20, col:221> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x560ee5d39c30 <col:20, col:221> 'int'
|   |     |-ImplicitCastExpr 0x560ee5d39be8 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x560ee5d39bd0 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x560ee5d396d0 <col:20> '_Bool' lvalue Var 0x560ee5d350b8 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x560ee5d39c18 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x560ee5d39c00 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x560ee5d396f0 <col:36> '_Bool' lvalue Var 0x560ee5d34fc8 'y$w_buff1_used' '_Bool'
|   |     `-ParenExpr 0x560ee5d39bb0 <col:53, col:221> 'int'
|   |       `-ConditionalOperator 0x560ee5d39b80 <col:54, col:220> 'int'
|   |         |-BinaryOperator 0x560ee5d39900 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x560ee5d39820 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x560ee5d39748 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x560ee5d39730 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x560ee5d39710 <col:55> '_Bool' lvalue Var 0x560ee5d34ed0 'y$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x560ee5d39800 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x560ee5d39798 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x560ee5d39780 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x560ee5d39760 <col:74> '_Bool' lvalue Var 0x560ee5d34b00 'y$r_buff0_thd3' '_Bool'
|   |         | |   `-UnaryOperator 0x560ee5d397e8 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x560ee5d397d0 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x560ee5d397b0 <col:93> '_Bool' lvalue Var 0x560ee5d34fc8 'y$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x560ee5d398e0 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x560ee5d39878 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x560ee5d39860 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x560ee5d39840 <col:112> '_Bool' lvalue Var 0x560ee5d34b00 'y$r_buff0_thd3' '_Bool'
|   |         |   `-UnaryOperator 0x560ee5d398c8 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x560ee5d398b0 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x560ee5d39890 <col:131> '_Bool' lvalue Var 0x560ee5d34ce0 'y$r_buff1_thd3' '_Bool'
|   |         |-ImplicitCastExpr 0x560ee5d39b68 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x560ee5d39b50 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x560ee5d39920 <col:148> '_Bool' lvalue Var 0x560ee5d34fc8 'y$w_buff1_used' '_Bool'
|   |         `-ParenExpr 0x560ee5d39b10 <col:165, col:220> 'int'
|   |           `-ConditionalOperator 0x560ee5d39ae0 <col:166, col:219> 'int'
|   |             |-BinaryOperator 0x560ee5d399e0 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x560ee5d39998 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x560ee5d39980 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x560ee5d39940 <col:166> '_Bool' lvalue Var 0x560ee5d34ed0 'y$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x560ee5d399c8 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x560ee5d399b0 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x560ee5d39960 <col:184> '_Bool' lvalue Var 0x560ee5d34b00 'y$r_buff0_thd3' '_Bool'
|   |             |-ImplicitCastExpr 0x560ee5d39ab0 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x560ee5d39a30 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x560ee5d39a00 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x560ee5d39ac8 <col:212, col:219> 'int' <IntegralCast>
|   |               `-CStyleCastExpr 0x560ee5d39a88 <col:212, col:219> '_Bool' <IntegralToBoolean>
|   |                 `-IntegerLiteral 0x560ee5d39a58 <col:219> 'int' 0
|   |-BinaryOperator 0x560ee5d3a220 <line:764:3, col:227> '_Bool' '='
|   | |-DeclRefExpr 0x560ee5d39c98 <col:3> '_Bool' lvalue Var 0x560ee5d34b00 'y$r_buff0_thd3' '_Bool'
|   | `-ImplicitCastExpr 0x560ee5d3a208 <col:20, col:227> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x560ee5d3a1d8 <col:20, col:227> 'int'
|   |     |-ImplicitCastExpr 0x560ee5d3a190 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x560ee5d3a178 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x560ee5d39cb8 <col:20> '_Bool' lvalue Var 0x560ee5d350b8 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x560ee5d3a1c0 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x560ee5d3a1a8 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x560ee5d39cd8 <col:36> '_Bool' lvalue Var 0x560ee5d34b00 'y$r_buff0_thd3' '_Bool'
|   |     `-ParenExpr 0x560ee5d3a158 <col:53, col:227> 'int'
|   |       `-ConditionalOperator 0x560ee5d3a128 <col:54, col:226> 'int'
|   |         |-BinaryOperator 0x560ee5d39ee8 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x560ee5d39e08 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x560ee5d39d30 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x560ee5d39d18 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x560ee5d39cf8 <col:55> '_Bool' lvalue Var 0x560ee5d34ed0 'y$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x560ee5d39de8 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x560ee5d39d80 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x560ee5d39d68 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x560ee5d39d48 <col:74> '_Bool' lvalue Var 0x560ee5d34b00 'y$r_buff0_thd3' '_Bool'
|   |         | |   `-UnaryOperator 0x560ee5d39dd0 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x560ee5d39db8 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x560ee5d39d98 <col:93> '_Bool' lvalue Var 0x560ee5d34fc8 'y$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x560ee5d39ec8 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x560ee5d39e60 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x560ee5d39e48 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x560ee5d39e28 <col:112> '_Bool' lvalue Var 0x560ee5d34b00 'y$r_buff0_thd3' '_Bool'
|   |         |   `-UnaryOperator 0x560ee5d39eb0 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x560ee5d39e98 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x560ee5d39e78 <col:131> '_Bool' lvalue Var 0x560ee5d34ce0 'y$r_buff1_thd3' '_Bool'
|   |         |-ImplicitCastExpr 0x560ee5d3a110 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x560ee5d3a0f8 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x560ee5d39f08 <col:148> '_Bool' lvalue Var 0x560ee5d34b00 'y$r_buff0_thd3' '_Bool'
|   |         `-ParenExpr 0x560ee5d3a0d8 <col:165, col:226> 'int'
|   |           `-ConditionalOperator 0x560ee5d3a0a8 <col:166, col:212> 'int'
|   |             |-BinaryOperator 0x560ee5d39fc8 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x560ee5d39f80 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x560ee5d39f68 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x560ee5d39f28 <col:166> '_Bool' lvalue Var 0x560ee5d34ed0 'y$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x560ee5d39fb0 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x560ee5d39f98 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x560ee5d39f48 <col:184> '_Bool' lvalue Var 0x560ee5d34b00 'y$r_buff0_thd3' '_Bool'
|   |             |-ImplicitCastExpr 0x560ee5d3a060 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x560ee5d3a018 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x560ee5d39fe8 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x560ee5d3a090 <col:212> 'int' <IntegralCast>
|   |               `-ImplicitCastExpr 0x560ee5d3a078 <col:212> '_Bool' <LValueToRValue>
|   |                 `-DeclRefExpr 0x560ee5d3a040 <col:212> '_Bool' lvalue Var 0x560ee5d34b00 'y$r_buff0_thd3' '_Bool'
|   |-BinaryOperator 0x560ee5d3a7e8 <line:765:3, col:221> '_Bool' '='
|   | |-DeclRefExpr 0x560ee5d3a240 <col:3> '_Bool' lvalue Var 0x560ee5d34ce0 'y$r_buff1_thd3' '_Bool'
|   | `-ImplicitCastExpr 0x560ee5d3a7d0 <col:20, col:221> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x560ee5d3a7a0 <col:20, col:221> 'int'
|   |     |-ImplicitCastExpr 0x560ee5d3a758 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x560ee5d3a740 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x560ee5d3a260 <col:20> '_Bool' lvalue Var 0x560ee5d350b8 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x560ee5d3a788 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x560ee5d3a770 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x560ee5d3a280 <col:36> '_Bool' lvalue Var 0x560ee5d34ce0 'y$r_buff1_thd3' '_Bool'
|   |     `-ParenExpr 0x560ee5d3a720 <col:53, col:221> 'int'
|   |       `-ConditionalOperator 0x560ee5d3a6f0 <col:54, col:220> 'int'
|   |         |-BinaryOperator 0x560ee5d3a490 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x560ee5d3a3b0 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x560ee5d3a2d8 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x560ee5d3a2c0 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x560ee5d3a2a0 <col:55> '_Bool' lvalue Var 0x560ee5d34ed0 'y$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x560ee5d3a390 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x560ee5d3a328 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x560ee5d3a310 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x560ee5d3a2f0 <col:74> '_Bool' lvalue Var 0x560ee5d34b00 'y$r_buff0_thd3' '_Bool'
|   |         | |   `-UnaryOperator 0x560ee5d3a378 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x560ee5d3a360 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x560ee5d3a340 <col:93> '_Bool' lvalue Var 0x560ee5d34fc8 'y$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x560ee5d3a470 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x560ee5d3a408 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x560ee5d3a3f0 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x560ee5d3a3d0 <col:112> '_Bool' lvalue Var 0x560ee5d34b00 'y$r_buff0_thd3' '_Bool'
|   |         |   `-UnaryOperator 0x560ee5d3a458 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x560ee5d3a440 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x560ee5d3a420 <col:131> '_Bool' lvalue Var 0x560ee5d34ce0 'y$r_buff1_thd3' '_Bool'
|   |         |-ImplicitCastExpr 0x560ee5d3a6d8 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x560ee5d3a6c0 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x560ee5d3a4b0 <col:148> '_Bool' lvalue Var 0x560ee5d34ce0 'y$r_buff1_thd3' '_Bool'
|   |         `-ParenExpr 0x560ee5d3a6a0 <col:165, col:220> 'int'
|   |           `-ConditionalOperator 0x560ee5d3a670 <col:166, col:219> 'int'
|   |             |-BinaryOperator 0x560ee5d3a570 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x560ee5d3a528 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x560ee5d3a510 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x560ee5d3a4d0 <col:166> '_Bool' lvalue Var 0x560ee5d34ed0 'y$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x560ee5d3a558 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x560ee5d3a540 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x560ee5d3a4f0 <col:184> '_Bool' lvalue Var 0x560ee5d34b00 'y$r_buff0_thd3' '_Bool'
|   |             |-ImplicitCastExpr 0x560ee5d3a640 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x560ee5d3a5c0 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x560ee5d3a590 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x560ee5d3a658 <col:212, col:219> 'int' <IntegralCast>
|   |               `-CStyleCastExpr 0x560ee5d3a618 <col:212, col:219> '_Bool' <IntegralToBoolean>
|   |                 `-IntegerLiteral 0x560ee5d3a5e8 <col:219> 'int' 0
|   |-BinaryOperator 0x560ee5d3a860 <line:766:3, col:25> 'int' '='
|   | |-DeclRefExpr 0x560ee5d3a808 <col:3> 'int' lvalue Var 0x560ee5d34360 '__unbuffered_p2_EAX' 'int'
|   | `-ImplicitCastExpr 0x560ee5d3a848 <col:25> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x560ee5d3a828 <col:25> 'int' lvalue Var 0x560ee5d347b0 'y' 'int'
|   |-BinaryOperator 0x560ee5d3a990 <line:767:3, col:37> 'int' '='
|   | |-DeclRefExpr 0x560ee5d3a880 <col:3> 'int' lvalue Var 0x560ee5d347b0 'y' 'int'
|   | `-ConditionalOperator 0x560ee5d3a960 <col:7, col:37> 'int'
|   |   |-ImplicitCastExpr 0x560ee5d3a918 <col:7> 'int' <IntegralCast>
|   |   | `-ImplicitCastExpr 0x560ee5d3a900 <col:7> '_Bool' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x560ee5d3a8a0 <col:7> '_Bool' lvalue Var 0x560ee5d34848 'y$flush_delayed' '_Bool'
|   |   |-ImplicitCastExpr 0x560ee5d3a930 <col:25> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x560ee5d3a8c0 <col:25> 'int' lvalue Var 0x560ee5d348c8 'y$mem_tmp' 'int'
|   |   `-ImplicitCastExpr 0x560ee5d3a948 <col:37> 'int' <LValueToRValue>
|   |     `-DeclRefExpr 0x560ee5d3a8e0 <col:37> 'int' lvalue Var 0x560ee5d347b0 'y' 'int'
|   |-BinaryOperator 0x560ee5d3aa28 <line:768:3, col:28> '_Bool' '='
|   | |-DeclRefExpr 0x560ee5d3a9b0 <col:3> '_Bool' lvalue Var 0x560ee5d34848 'y$flush_delayed' '_Bool'
|   | `-CStyleCastExpr 0x560ee5d3aa00 <col:21, col:28> '_Bool' <IntegralToBoolean>
|   |   `-IntegerLiteral 0x560ee5d3a9d0 <col:28> 'int' 0
|   |-CallExpr 0x560ee5d3aa80 <line:769:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x560ee5d3aa68 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x560ee5d3aa48 <col:3> 'void ()' Function 0x560ee5cdaf00 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x560ee5d3aad8 <line:770:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x560ee5d3aac0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x560ee5d3aaa0 <col:3> 'void ()' Function 0x560ee5cdae40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x560ee5d3ab98 <line:771:3, col:45> '_Bool' '='
|   | |-DeclRefExpr 0x560ee5d3aaf8 <col:3> '_Bool' lvalue Var 0x560ee5d35040 'weak$$choice0' '_Bool'
|   | `-ImplicitCastExpr 0x560ee5d3ab80 <col:19, col:45> '_Bool' <PointerToBoolean>
|   |   `-CallExpr 0x560ee5d3ab60 <col:19, col:45> 'void *'
|   |     `-ImplicitCastExpr 0x560ee5d3ab38 <col:19> 'void *(*)(void)' <FunctionToPointerDecay>
|   |       `-DeclRefExpr 0x560ee5d3ab18 <col:19> 'void *(void)' Function 0x560ee5cda958 '__VERIFIER_nondet_pointer' 'void *(void)'
|   |-BinaryOperator 0x560ee5d3ac48 <line:772:3, col:45> '_Bool' '='
|   | |-DeclRefExpr 0x560ee5d3abb8 <col:3> '_Bool' lvalue Var 0x560ee5d350b8 'weak$$choice2' '_Bool'
|   | `-ImplicitCastExpr 0x560ee5d3ac30 <col:19, col:45> '_Bool' <PointerToBoolean>
|   |   `-CallExpr 0x560ee5d3ac10 <col:19, col:45> 'void *'
|   |     `-ImplicitCastExpr 0x560ee5d3abf8 <col:19> 'void *(*)(void)' <FunctionToPointerDecay>
|   |       `-DeclRefExpr 0x560ee5d3abd8 <col:19> 'void *(void)' Function 0x560ee5cda958 '__VERIFIER_nondet_pointer' 'void *(void)'
|   |-BinaryOperator 0x560ee5d3acc0 <line:773:3, col:21> '_Bool' '='
|   | |-DeclRefExpr 0x560ee5d3ac68 <col:3> '_Bool' lvalue Var 0x560ee5d34848 'y$flush_delayed' '_Bool'
|   | `-ImplicitCastExpr 0x560ee5d3aca8 <col:21> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x560ee5d3ac88 <col:21> '_Bool' lvalue Var 0x560ee5d350b8 'weak$$choice2' '_Bool'
|   |-BinaryOperator 0x560ee5d3ad38 <line:774:3, col:15> 'int' '='
|   | |-DeclRefExpr 0x560ee5d3ace0 <col:3> 'int' lvalue Var 0x560ee5d348c8 'y$mem_tmp' 'int'
|   | `-ImplicitCastExpr 0x560ee5d3ad20 <col:15> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x560ee5d3ad00 <col:15> 'int' lvalue Var 0x560ee5d347b0 'y' 'int'
|   |-BinaryOperator 0x560ee5d3b170 <line:775:3, col:162> 'int' '='
|   | |-DeclRefExpr 0x560ee5d3ad58 <col:3> 'int' lvalue Var 0x560ee5d347b0 'y' 'int'
|   | `-ConditionalOperator 0x560ee5d3b140 <col:7, col:162> 'int'
|   |   |-BinaryOperator 0x560ee5d3af68 <col:7, col:84> 'int' '||'
|   |   | |-BinaryOperator 0x560ee5d3ae88 <col:7, col:46> 'int' '||'
|   |   | | |-UnaryOperator 0x560ee5d3adb0 <col:7, col:8> 'int' prefix '!' cannot overflow
|   |   | | | `-ImplicitCastExpr 0x560ee5d3ad98 <col:8> '_Bool' <LValueToRValue>
|   |   | | |   `-DeclRefExpr 0x560ee5d3ad78 <col:8> '_Bool' lvalue Var 0x560ee5d34ed0 'y$w_buff0_used' '_Bool'
|   |   | | `-BinaryOperator 0x560ee5d3ae68 <col:26, col:46> 'int' '&&'
|   |   | |   |-UnaryOperator 0x560ee5d3ae00 <col:26, col:27> 'int' prefix '!' cannot overflow
|   |   | |   | `-ImplicitCastExpr 0x560ee5d3ade8 <col:27> '_Bool' <LValueToRValue>
|   |   | |   |   `-DeclRefExpr 0x560ee5d3adc8 <col:27> '_Bool' lvalue Var 0x560ee5d34b00 'y$r_buff0_thd3' '_Bool'
|   |   | |   `-UnaryOperator 0x560ee5d3ae50 <col:45, col:46> 'int' prefix '!' cannot overflow
|   |   | |     `-ImplicitCastExpr 0x560ee5d3ae38 <col:46> '_Bool' <LValueToRValue>
|   |   | |       `-DeclRefExpr 0x560ee5d3ae18 <col:46> '_Bool' lvalue Var 0x560ee5d34fc8 'y$w_buff1_used' '_Bool'
|   |   | `-BinaryOperator 0x560ee5d3af48 <col:64, col:84> 'int' '&&'
|   |   |   |-UnaryOperator 0x560ee5d3aee0 <col:64, col:65> 'int' prefix '!' cannot overflow
|   |   |   | `-ImplicitCastExpr 0x560ee5d3aec8 <col:65> '_Bool' <LValueToRValue>
|   |   |   |   `-DeclRefExpr 0x560ee5d3aea8 <col:65> '_Bool' lvalue Var 0x560ee5d34b00 'y$r_buff0_thd3' '_Bool'
|   |   |   `-UnaryOperator 0x560ee5d3af30 <col:83, col:84> 'int' prefix '!' cannot overflow
|   |   |     `-ImplicitCastExpr 0x560ee5d3af18 <col:84> '_Bool' <LValueToRValue>
|   |   |       `-DeclRefExpr 0x560ee5d3aef8 <col:84> '_Bool' lvalue Var 0x560ee5d34ce0 'y$r_buff1_thd3' '_Bool'
|   |   |-ImplicitCastExpr 0x560ee5d3b128 <col:101> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x560ee5d3af88 <col:101> 'int' lvalue Var 0x560ee5d347b0 'y' 'int'
|   |   `-ParenExpr 0x560ee5d3b108 <col:105, col:162> 'int'
|   |     `-ConditionalOperator 0x560ee5d3b0d8 <col:106, col:153> 'int'
|   |       |-BinaryOperator 0x560ee5d3b048 <col:106, col:124> 'int' '&&'
|   |       | |-ImplicitCastExpr 0x560ee5d3b000 <col:106> 'int' <IntegralCast>
|   |       | | `-ImplicitCastExpr 0x560ee5d3afe8 <col:106> '_Bool' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x560ee5d3afa8 <col:106> '_Bool' lvalue Var 0x560ee5d34ed0 'y$w_buff0_used' '_Bool'
|   |       | `-ImplicitCastExpr 0x560ee5d3b030 <col:124> 'int' <IntegralCast>
|   |       |   `-ImplicitCastExpr 0x560ee5d3b018 <col:124> '_Bool' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x560ee5d3afc8 <col:124> '_Bool' lvalue Var 0x560ee5d34b00 'y$r_buff0_thd3' '_Bool'
|   |       |-ImplicitCastExpr 0x560ee5d3b0a8 <col:141> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x560ee5d3b068 <col:141> 'int' lvalue Var 0x560ee5d34e58 'y$w_buff0' 'int'
|   |       `-ImplicitCastExpr 0x560ee5d3b0c0 <col:153> 'int' <LValueToRValue>
|   |         `-DeclRefExpr 0x560ee5d3b088 <col:153> 'int' lvalue Var 0x560ee5d34f50 'y$w_buff1' 'int'
|   |-BinaryOperator 0x560ee5d3b680 <line:776:3, col:208> 'int' '='
|   | |-DeclRefExpr 0x560ee5d3b190 <col:3> 'int' lvalue Var 0x560ee5d34e58 'y$w_buff0' 'int'
|   | `-ConditionalOperator 0x560ee5d3b650 <col:15, col:208> 'int'
|   |   |-ImplicitCastExpr 0x560ee5d3b620 <col:15> 'int' <IntegralCast>
|   |   | `-ImplicitCastExpr 0x560ee5d3b608 <col:15> '_Bool' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x560ee5d3b1b0 <col:15> '_Bool' lvalue Var 0x560ee5d350b8 'weak$$choice2' '_Bool'
|   |   |-ImplicitCastExpr 0x560ee5d3b638 <col:31> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x560ee5d3b1d0 <col:31> 'int' lvalue Var 0x560ee5d34e58 'y$w_buff0' 'int'
|   |   `-ParenExpr 0x560ee5d3b5e8 <col:43, col:208> 'int'
|   |     `-ConditionalOperator 0x560ee5d3b5b8 <col:44, col:207> 'int'
|   |       |-BinaryOperator 0x560ee5d3b3e0 <col:44, col:121> 'int' '||'
|   |       | |-BinaryOperator 0x560ee5d3b300 <col:44, col:83> 'int' '||'
|   |       | | |-UnaryOperator 0x560ee5d3b228 <col:44, col:45> 'int' prefix '!' cannot overflow
|   |       | | | `-ImplicitCastExpr 0x560ee5d3b210 <col:45> '_Bool' <LValueToRValue>
|   |       | | |   `-DeclRefExpr 0x560ee5d3b1f0 <col:45> '_Bool' lvalue Var 0x560ee5d34ed0 'y$w_buff0_used' '_Bool'
|   |       | | `-BinaryOperator 0x560ee5d3b2e0 <col:63, col:83> 'int' '&&'
|   |       | |   |-UnaryOperator 0x560ee5d3b278 <col:63, col:64> 'int' prefix '!' cannot overflow
|   |       | |   | `-ImplicitCastExpr 0x560ee5d3b260 <col:64> '_Bool' <LValueToRValue>
|   |       | |   |   `-DeclRefExpr 0x560ee5d3b240 <col:64> '_Bool' lvalue Var 0x560ee5d34b00 'y$r_buff0_thd3' '_Bool'
|   |       | |   `-UnaryOperator 0x560ee5d3b2c8 <col:82, col:83> 'int' prefix '!' cannot overflow
|   |       | |     `-ImplicitCastExpr 0x560ee5d3b2b0 <col:83> '_Bool' <LValueToRValue>
|   |       | |       `-DeclRefExpr 0x560ee5d3b290 <col:83> '_Bool' lvalue Var 0x560ee5d34fc8 'y$w_buff1_used' '_Bool'
|   |       | `-BinaryOperator 0x560ee5d3b3c0 <col:101, col:121> 'int' '&&'
|   |       |   |-UnaryOperator 0x560ee5d3b358 <col:101, col:102> 'int' prefix '!' cannot overflow
|   |       |   | `-ImplicitCastExpr 0x560ee5d3b340 <col:102> '_Bool' <LValueToRValue>
|   |       |   |   `-DeclRefExpr 0x560ee5d3b320 <col:102> '_Bool' lvalue Var 0x560ee5d34b00 'y$r_buff0_thd3' '_Bool'
|   |       |   `-UnaryOperator 0x560ee5d3b3a8 <col:120, col:121> 'int' prefix '!' cannot overflow
|   |       |     `-ImplicitCastExpr 0x560ee5d3b390 <col:121> '_Bool' <LValueToRValue>
|   |       |       `-DeclRefExpr 0x560ee5d3b370 <col:121> '_Bool' lvalue Var 0x560ee5d34ce0 'y$r_buff1_thd3' '_Bool'
|   |       |-ImplicitCastExpr 0x560ee5d3b5a0 <col:138> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x560ee5d3b400 <col:138> 'int' lvalue Var 0x560ee5d34e58 'y$w_buff0' 'int'
|   |       `-ParenExpr 0x560ee5d3b580 <col:150, col:207> 'int'
|   |         `-ConditionalOperator 0x560ee5d3b550 <col:151, col:198> 'int'
|   |           |-BinaryOperator 0x560ee5d3b4c0 <col:151, col:169> 'int' '&&'
|   |           | |-ImplicitCastExpr 0x560ee5d3b478 <col:151> 'int' <IntegralCast>
|   |           | | `-ImplicitCastExpr 0x560ee5d3b460 <col:151> '_Bool' <LValueToRValue>
|   |           | |   `-DeclRefExpr 0x560ee5d3b420 <col:151> '_Bool' lvalue Var 0x560ee5d34ed0 'y$w_buff0_used' '_Bool'
|   |           | `-ImplicitCastExpr 0x560ee5d3b4a8 <col:169> 'int' <IntegralCast>
|   |           |   `-ImplicitCastExpr 0x560ee5d3b490 <col:169> '_Bool' <LValueToRValue>
|   |           |     `-DeclRefExpr 0x560ee5d3b440 <col:169> '_Bool' lvalue Var 0x560ee5d34b00 'y$r_buff0_thd3' '_Bool'
|   |           |-ImplicitCastExpr 0x560ee5d3b520 <col:186> 'int' <LValueToRValue>
|   |           | `-DeclRefExpr 0x560ee5d3b4e0 <col:186> 'int' lvalue Var 0x560ee5d34e58 'y$w_buff0' 'int'
|   |           `-ImplicitCastExpr 0x560ee5d3b538 <col:198> 'int' <LValueToRValue>
|   |             `-DeclRefExpr 0x560ee5d3b500 <col:198> 'int' lvalue Var 0x560ee5d34e58 'y$w_buff0' 'int'
|   |-BinaryOperator 0x560ee5d3bba0 <line:777:3, col:208> 'int' '='
|   | |-DeclRefExpr 0x560ee5d3b6a0 <col:3> 'int' lvalue Var 0x560ee5d34f50 'y$w_buff1' 'int'
|   | `-ConditionalOperator 0x560ee5d3bb70 <col:15, col:208> 'int'
|   |   |-ImplicitCastExpr 0x560ee5d3bb30 <col:15> 'int' <IntegralCast>
|   |   | `-ImplicitCastExpr 0x560ee5d3bb18 <col:15> '_Bool' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x560ee5d3b6c0 <col:15> '_Bool' lvalue Var 0x560ee5d350b8 'weak$$choice2' '_Bool'
|   |   |-ImplicitCastExpr 0x560ee5d3bb48 <col:31> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x560ee5d3b6e0 <col:31> 'int' lvalue Var 0x560ee5d34f50 'y$w_buff1' 'int'
|   |   `-ParenExpr 0x560ee5d3baf8 <col:43, col:208> 'int'
|   |     `-ConditionalOperator 0x560ee5d3bac8 <col:44, col:207> 'int'
|   |       |-BinaryOperator 0x560ee5d3b8f0 <col:44, col:121> 'int' '||'
|   |       | |-BinaryOperator 0x560ee5d3b810 <col:44, col:83> 'int' '||'
|   |       | | |-UnaryOperator 0x560ee5d3b738 <col:44, col:45> 'int' prefix '!' cannot overflow
|   |       | | | `-ImplicitCastExpr 0x560ee5d3b720 <col:45> '_Bool' <LValueToRValue>
|   |       | | |   `-DeclRefExpr 0x560ee5d3b700 <col:45> '_Bool' lvalue Var 0x560ee5d34ed0 'y$w_buff0_used' '_Bool'
|   |       | | `-BinaryOperator 0x560ee5d3b7f0 <col:63, col:83> 'int' '&&'
|   |       | |   |-UnaryOperator 0x560ee5d3b788 <col:63, col:64> 'int' prefix '!' cannot overflow
|   |       | |   | `-ImplicitCastExpr 0x560ee5d3b770 <col:64> '_Bool' <LValueToRValue>
|   |       | |   |   `-DeclRefExpr 0x560ee5d3b750 <col:64> '_Bool' lvalue Var 0x560ee5d34b00 'y$r_buff0_thd3' '_Bool'
|   |       | |   `-UnaryOperator 0x560ee5d3b7d8 <col:82, col:83> 'int' prefix '!' cannot overflow
|   |       | |     `-ImplicitCastExpr 0x560ee5d3b7c0 <col:83> '_Bool' <LValueToRValue>
|   |       | |       `-DeclRefExpr 0x560ee5d3b7a0 <col:83> '_Bool' lvalue Var 0x560ee5d34fc8 'y$w_buff1_used' '_Bool'
|   |       | `-BinaryOperator 0x560ee5d3b8d0 <col:101, col:121> 'int' '&&'
|   |       |   |-UnaryOperator 0x560ee5d3b868 <col:101, col:102> 'int' prefix '!' cannot overflow
|   |       |   | `-ImplicitCastExpr 0x560ee5d3b850 <col:102> '_Bool' <LValueToRValue>
|   |       |   |   `-DeclRefExpr 0x560ee5d3b830 <col:102> '_Bool' lvalue Var 0x560ee5d34b00 'y$r_buff0_thd3' '_Bool'
|   |       |   `-UnaryOperator 0x560ee5d3b8b8 <col:120, col:121> 'int' prefix '!' cannot overflow
|   |       |     `-ImplicitCastExpr 0x560ee5d3b8a0 <col:121> '_Bool' <LValueToRValue>
|   |       |       `-DeclRefExpr 0x560ee5d3b880 <col:121> '_Bool' lvalue Var 0x560ee5d34ce0 'y$r_buff1_thd3' '_Bool'
|   |       |-ImplicitCastExpr 0x560ee5d3bab0 <col:138> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x560ee5d3b910 <col:138> 'int' lvalue Var 0x560ee5d34f50 'y$w_buff1' 'int'
|   |       `-ParenExpr 0x560ee5d3ba90 <col:150, col:207> 'int'
|   |         `-ConditionalOperator 0x560ee5d3ba60 <col:151, col:198> 'int'
|   |           |-BinaryOperator 0x560ee5d3b9d0 <col:151, col:169> 'int' '&&'
|   |           | |-ImplicitCastExpr 0x560ee5d3b988 <col:151> 'int' <IntegralCast>
|   |           | | `-ImplicitCastExpr 0x560ee5d3b970 <col:151> '_Bool' <LValueToRValue>
|   |           | |   `-DeclRefExpr 0x560ee5d3b930 <col:151> '_Bool' lvalue Var 0x560ee5d34ed0 'y$w_buff0_used' '_Bool'
|   |           | `-ImplicitCastExpr 0x560ee5d3b9b8 <col:169> 'int' <IntegralCast>
|   |           |   `-ImplicitCastExpr 0x560ee5d3b9a0 <col:169> '_Bool' <LValueToRValue>
|   |           |     `-DeclRefExpr 0x560ee5d3b950 <col:169> '_Bool' lvalue Var 0x560ee5d34b00 'y$r_buff0_thd3' '_Bool'
|   |           |-ImplicitCastExpr 0x560ee5d3ba30 <col:186> 'int' <LValueToRValue>
|   |           | `-DeclRefExpr 0x560ee5d3b9f0 <col:186> 'int' lvalue Var 0x560ee5d34f50 'y$w_buff1' 'int'
|   |           `-ImplicitCastExpr 0x560ee5d3ba48 <col:198> 'int' <LValueToRValue>
|   |             `-DeclRefExpr 0x560ee5d3ba10 <col:198> 'int' lvalue Var 0x560ee5d34f50 'y$w_buff1' 'int'
|   |-BinaryOperator 0x560ee5d3c148 <line:778:3, col:227> '_Bool' '='
|   | |-DeclRefExpr 0x560ee5d3bbc0 <col:3> '_Bool' lvalue Var 0x560ee5d34ed0 'y$w_buff0_used' '_Bool'
|   | `-ImplicitCastExpr 0x560ee5d3c130 <col:20, col:227> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x560ee5d3c100 <col:20, col:227> 'int'
|   |     |-ImplicitCastExpr 0x560ee5d3c0b8 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x560ee5d3c0a0 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x560ee5d3bbe0 <col:20> '_Bool' lvalue Var 0x560ee5d350b8 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x560ee5d3c0e8 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x560ee5d3c0d0 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x560ee5d3bc00 <col:36> '_Bool' lvalue Var 0x560ee5d34ed0 'y$w_buff0_used' '_Bool'
|   |     `-ParenExpr 0x560ee5d3c080 <col:53, col:227> 'int'
|   |       `-ConditionalOperator 0x560ee5d3c050 <col:54, col:226> 'int'
|   |         |-BinaryOperator 0x560ee5d3be10 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x560ee5d3bd30 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x560ee5d3bc58 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x560ee5d3bc40 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x560ee5d3bc20 <col:55> '_Bool' lvalue Var 0x560ee5d34ed0 'y$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x560ee5d3bd10 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x560ee5d3bca8 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x560ee5d3bc90 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x560ee5d3bc70 <col:74> '_Bool' lvalue Var 0x560ee5d34b00 'y$r_buff0_thd3' '_Bool'
|   |         | |   `-UnaryOperator 0x560ee5d3bcf8 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x560ee5d3bce0 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x560ee5d3bcc0 <col:93> '_Bool' lvalue Var 0x560ee5d34fc8 'y$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x560ee5d3bdf0 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x560ee5d3bd88 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x560ee5d3bd70 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x560ee5d3bd50 <col:112> '_Bool' lvalue Var 0x560ee5d34b00 'y$r_buff0_thd3' '_Bool'
|   |         |   `-UnaryOperator 0x560ee5d3bdd8 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x560ee5d3bdc0 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x560ee5d3bda0 <col:131> '_Bool' lvalue Var 0x560ee5d34ce0 'y$r_buff1_thd3' '_Bool'
|   |         |-ImplicitCastExpr 0x560ee5d3c038 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x560ee5d3c020 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x560ee5d3be30 <col:148> '_Bool' lvalue Var 0x560ee5d34ed0 'y$w_buff0_used' '_Bool'
|   |         `-ParenExpr 0x560ee5d3c000 <col:165, col:226> 'int'
|   |           `-ConditionalOperator 0x560ee5d3bfd0 <col:166, col:212> 'int'
|   |             |-BinaryOperator 0x560ee5d3bef0 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x560ee5d3bea8 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x560ee5d3be90 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x560ee5d3be50 <col:166> '_Bool' lvalue Var 0x560ee5d34ed0 'y$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x560ee5d3bed8 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x560ee5d3bec0 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x560ee5d3be70 <col:184> '_Bool' lvalue Var 0x560ee5d34b00 'y$r_buff0_thd3' '_Bool'
|   |             |-ImplicitCastExpr 0x560ee5d3bf88 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x560ee5d3bf40 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x560ee5d3bf10 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x560ee5d3bfb8 <col:212> 'int' <IntegralCast>
|   |               `-ImplicitCastExpr 0x560ee5d3bfa0 <col:212> '_Bool' <LValueToRValue>
|   |                 `-DeclRefExpr 0x560ee5d3bf68 <col:212> '_Bool' lvalue Var 0x560ee5d34ed0 'y$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x560ee5d3c710 <line:779:3, col:221> '_Bool' '='
|   | |-DeclRefExpr 0x560ee5d3c168 <col:3> '_Bool' lvalue Var 0x560ee5d34fc8 'y$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x560ee5d3c6f8 <col:20, col:221> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x560ee5d3c6c8 <col:20, col:221> 'int'
|   |     |-ImplicitCastExpr 0x560ee5d3c680 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x560ee5d3c668 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x560ee5d3c188 <col:20> '_Bool' lvalue Var 0x560ee5d350b8 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x560ee5d3c6b0 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x560ee5d3c698 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x560ee5d3c1a8 <col:36> '_Bool' lvalue Var 0x560ee5d34fc8 'y$w_buff1_used' '_Bool'
|   |     `-ParenExpr 0x560ee5d3c648 <col:53, col:221> 'int'
|   |       `-ConditionalOperator 0x560ee5d3c618 <col:54, col:220> 'int'
|   |         |-BinaryOperator 0x560ee5d3c3b8 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x560ee5d3c2d8 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x560ee5d3c200 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x560ee5d3c1e8 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x560ee5d3c1c8 <col:55> '_Bool' lvalue Var 0x560ee5d34ed0 'y$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x560ee5d3c2b8 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x560ee5d3c250 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x560ee5d3c238 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x560ee5d3c218 <col:74> '_Bool' lvalue Var 0x560ee5d34b00 'y$r_buff0_thd3' '_Bool'
|   |         | |   `-UnaryOperator 0x560ee5d3c2a0 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x560ee5d3c288 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x560ee5d3c268 <col:93> '_Bool' lvalue Var 0x560ee5d34fc8 'y$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x560ee5d3c398 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x560ee5d3c330 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x560ee5d3c318 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x560ee5d3c2f8 <col:112> '_Bool' lvalue Var 0x560ee5d34b00 'y$r_buff0_thd3' '_Bool'
|   |         |   `-UnaryOperator 0x560ee5d3c380 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x560ee5d3c368 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x560ee5d3c348 <col:131> '_Bool' lvalue Var 0x560ee5d34ce0 'y$r_buff1_thd3' '_Bool'
|   |         |-ImplicitCastExpr 0x560ee5d3c600 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x560ee5d3c5e8 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x560ee5d3c3d8 <col:148> '_Bool' lvalue Var 0x560ee5d34fc8 'y$w_buff1_used' '_Bool'
|   |         `-ParenExpr 0x560ee5d3c5c8 <col:165, col:220> 'int'
|   |           `-ConditionalOperator 0x560ee5d3c598 <col:166, col:219> 'int'
|   |             |-BinaryOperator 0x560ee5d3c498 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x560ee5d3c450 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x560ee5d3c438 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x560ee5d3c3f8 <col:166> '_Bool' lvalue Var 0x560ee5d34ed0 'y$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x560ee5d3c480 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x560ee5d3c468 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x560ee5d3c418 <col:184> '_Bool' lvalue Var 0x560ee5d34b00 'y$r_buff0_thd3' '_Bool'
|   |             |-ImplicitCastExpr 0x560ee5d3c568 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x560ee5d3c4e8 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x560ee5d3c4b8 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x560ee5d3c580 <col:212, col:219> 'int' <IntegralCast>
|   |               `-CStyleCastExpr 0x560ee5d3c540 <col:212, col:219> '_Bool' <IntegralToBoolean>
|   |                 `-IntegerLiteral 0x560ee5d3c510 <col:219> 'int' 0
|   |-BinaryOperator 0x560ee5d3ccc8 <line:780:3, col:227> '_Bool' '='
|   | |-DeclRefExpr 0x560ee5d3c730 <col:3> '_Bool' lvalue Var 0x560ee5d34b00 'y$r_buff0_thd3' '_Bool'
|   | `-ImplicitCastExpr 0x560ee5d3ccb0 <col:20, col:227> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x560ee5d3cc80 <col:20, col:227> 'int'
|   |     |-ImplicitCastExpr 0x560ee5d3cc38 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x560ee5d3cc20 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x560ee5d3c750 <col:20> '_Bool' lvalue Var 0x560ee5d350b8 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x560ee5d3cc68 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x560ee5d3cc50 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x560ee5d3c770 <col:36> '_Bool' lvalue Var 0x560ee5d34b00 'y$r_buff0_thd3' '_Bool'
|   |     `-ParenExpr 0x560ee5d3cc00 <col:53, col:227> 'int'
|   |       `-ConditionalOperator 0x560ee5d3cbd0 <col:54, col:226> 'int'
|   |         |-BinaryOperator 0x560ee5d3c980 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x560ee5d3c8a0 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x560ee5d3c7c8 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x560ee5d3c7b0 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x560ee5d3c790 <col:55> '_Bool' lvalue Var 0x560ee5d34ed0 'y$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x560ee5d3c880 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x560ee5d3c818 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x560ee5d3c800 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x560ee5d3c7e0 <col:74> '_Bool' lvalue Var 0x560ee5d34b00 'y$r_buff0_thd3' '_Bool'
|   |         | |   `-UnaryOperator 0x560ee5d3c868 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x560ee5d3c850 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x560ee5d3c830 <col:93> '_Bool' lvalue Var 0x560ee5d34fc8 'y$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x560ee5d3c960 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x560ee5d3c8f8 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x560ee5d3c8e0 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x560ee5d3c8c0 <col:112> '_Bool' lvalue Var 0x560ee5d34b00 'y$r_buff0_thd3' '_Bool'
|   |         |   `-UnaryOperator 0x560ee5d3c948 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x560ee5d3c930 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x560ee5d3c910 <col:131> '_Bool' lvalue Var 0x560ee5d34ce0 'y$r_buff1_thd3' '_Bool'
|   |         |-ImplicitCastExpr 0x560ee5d3cbb8 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x560ee5d3cba0 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x560ee5d3c9a0 <col:148> '_Bool' lvalue Var 0x560ee5d34b00 'y$r_buff0_thd3' '_Bool'
|   |         `-ParenExpr 0x560ee5d3cb80 <col:165, col:226> 'int'
|   |           `-ConditionalOperator 0x560ee5d3cb40 <col:166, col:212> 'int'
|   |             |-BinaryOperator 0x560ee5d3ca60 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x560ee5d3ca18 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x560ee5d3ca00 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x560ee5d3c9c0 <col:166> '_Bool' lvalue Var 0x560ee5d34ed0 'y$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x560ee5d3ca48 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x560ee5d3ca30 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x560ee5d3c9e0 <col:184> '_Bool' lvalue Var 0x560ee5d34b00 'y$r_buff0_thd3' '_Bool'
|   |             |-ImplicitCastExpr 0x560ee5d3caf8 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x560ee5d3cab0 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x560ee5d3ca80 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x560ee5d3cb28 <col:212> 'int' <IntegralCast>
|   |               `-ImplicitCastExpr 0x560ee5d3cb10 <col:212> '_Bool' <LValueToRValue>
|   |                 `-DeclRefExpr 0x560ee5d3cad8 <col:212> '_Bool' lvalue Var 0x560ee5d34b00 'y$r_buff0_thd3' '_Bool'
|   |-BinaryOperator 0x560ee5d3d290 <line:781:3, col:221> '_Bool' '='
|   | |-DeclRefExpr 0x560ee5d3cce8 <col:3> '_Bool' lvalue Var 0x560ee5d34ce0 'y$r_buff1_thd3' '_Bool'
|   | `-ImplicitCastExpr 0x560ee5d3d278 <col:20, col:221> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x560ee5d3d248 <col:20, col:221> 'int'
|   |     |-ImplicitCastExpr 0x560ee5d3d200 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x560ee5d3d1e8 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x560ee5d3cd08 <col:20> '_Bool' lvalue Var 0x560ee5d350b8 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x560ee5d3d230 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x560ee5d3d218 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x560ee5d3cd28 <col:36> '_Bool' lvalue Var 0x560ee5d34ce0 'y$r_buff1_thd3' '_Bool'
|   |     `-ParenExpr 0x560ee5d3d1c8 <col:53, col:221> 'int'
|   |       `-ConditionalOperator 0x560ee5d3d198 <col:54, col:220> 'int'
|   |         |-BinaryOperator 0x560ee5d3cf38 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x560ee5d3ce58 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x560ee5d3cd80 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x560ee5d3cd68 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x560ee5d3cd48 <col:55> '_Bool' lvalue Var 0x560ee5d34ed0 'y$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x560ee5d3ce38 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x560ee5d3cdd0 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x560ee5d3cdb8 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x560ee5d3cd98 <col:74> '_Bool' lvalue Var 0x560ee5d34b00 'y$r_buff0_thd3' '_Bool'
|   |         | |   `-UnaryOperator 0x560ee5d3ce20 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x560ee5d3ce08 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x560ee5d3cde8 <col:93> '_Bool' lvalue Var 0x560ee5d34fc8 'y$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x560ee5d3cf18 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x560ee5d3ceb0 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x560ee5d3ce98 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x560ee5d3ce78 <col:112> '_Bool' lvalue Var 0x560ee5d34b00 'y$r_buff0_thd3' '_Bool'
|   |         |   `-UnaryOperator 0x560ee5d3cf00 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x560ee5d3cee8 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x560ee5d3cec8 <col:131> '_Bool' lvalue Var 0x560ee5d34ce0 'y$r_buff1_thd3' '_Bool'
|   |         |-ImplicitCastExpr 0x560ee5d3d180 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x560ee5d3d168 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x560ee5d3cf58 <col:148> '_Bool' lvalue Var 0x560ee5d34ce0 'y$r_buff1_thd3' '_Bool'
|   |         `-ParenExpr 0x560ee5d3d148 <col:165, col:220> 'int'
|   |           `-ConditionalOperator 0x560ee5d3d118 <col:166, col:219> 'int'
|   |             |-BinaryOperator 0x560ee5d3d018 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x560ee5d3cfd0 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x560ee5d3cfb8 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x560ee5d3cf78 <col:166> '_Bool' lvalue Var 0x560ee5d34ed0 'y$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x560ee5d3d000 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x560ee5d3cfe8 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x560ee5d3cf98 <col:184> '_Bool' lvalue Var 0x560ee5d34b00 'y$r_buff0_thd3' '_Bool'
|   |             |-ImplicitCastExpr 0x560ee5d3d0e8 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x560ee5d3d068 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x560ee5d3d038 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x560ee5d3d100 <col:212, col:219> 'int' <IntegralCast>
|   |               `-CStyleCastExpr 0x560ee5d3d0c0 <col:212, col:219> '_Bool' <IntegralToBoolean>
|   |                 `-IntegerLiteral 0x560ee5d3d090 <col:219> 'int' 0
|   |-BinaryOperator 0x560ee5d3d308 <line:782:3, col:25> 'int' '='
|   | |-DeclRefExpr 0x560ee5d3d2b0 <col:3> 'int' lvalue Var 0x560ee5d34480 '__unbuffered_p2_EBX' 'int'
|   | `-ImplicitCastExpr 0x560ee5d3d2f0 <col:25> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x560ee5d3d2d0 <col:25> 'int' lvalue Var 0x560ee5d347b0 'y' 'int'
|   |-BinaryOperator 0x560ee5d3d438 <line:783:3, col:37> 'int' '='
|   | |-DeclRefExpr 0x560ee5d3d328 <col:3> 'int' lvalue Var 0x560ee5d347b0 'y' 'int'
|   | `-ConditionalOperator 0x560ee5d3d408 <col:7, col:37> 'int'
|   |   |-ImplicitCastExpr 0x560ee5d3d3c0 <col:7> 'int' <IntegralCast>
|   |   | `-ImplicitCastExpr 0x560ee5d3d3a8 <col:7> '_Bool' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x560ee5d3d348 <col:7> '_Bool' lvalue Var 0x560ee5d34848 'y$flush_delayed' '_Bool'
|   |   |-ImplicitCastExpr 0x560ee5d3d3d8 <col:25> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x560ee5d3d368 <col:25> 'int' lvalue Var 0x560ee5d348c8 'y$mem_tmp' 'int'
|   |   `-ImplicitCastExpr 0x560ee5d3d3f0 <col:37> 'int' <LValueToRValue>
|   |     `-DeclRefExpr 0x560ee5d3d388 <col:37> 'int' lvalue Var 0x560ee5d347b0 'y' 'int'
|   |-BinaryOperator 0x560ee5d3d4d0 <line:784:3, col:28> '_Bool' '='
|   | |-DeclRefExpr 0x560ee5d3d458 <col:3> '_Bool' lvalue Var 0x560ee5d34848 'y$flush_delayed' '_Bool'
|   | `-CStyleCastExpr 0x560ee5d3d4a8 <col:21, col:28> '_Bool' <IntegralToBoolean>
|   |   `-IntegerLiteral 0x560ee5d3d478 <col:28> 'int' 0
|   |-CallExpr 0x560ee5d3d528 <line:785:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x560ee5d3d510 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x560ee5d3d4f0 <col:3> 'void ()' Function 0x560ee5cdaf00 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x560ee5d3d580 <line:786:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x560ee5d3d568 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x560ee5d3d548 <col:3> 'void ()' Function 0x560ee5cdae40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x560ee5d3d868 <line:787:3, col:103> 'int' '='
|   | |-DeclRefExpr 0x560ee5d3d5a0 <col:3> 'int' lvalue Var 0x560ee5d347b0 'y' 'int'
|   | `-ConditionalOperator 0x560ee5d3d838 <col:7, col:103> 'int'
|   |   |-BinaryOperator 0x560ee5d3d660 <col:7, col:25> 'int' '&&'
|   |   | |-ImplicitCastExpr 0x560ee5d3d618 <col:7> 'int' <IntegralCast>
|   |   | | `-ImplicitCastExpr 0x560ee5d3d600 <col:7> '_Bool' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x560ee5d3d5c0 <col:7> '_Bool' lvalue Var 0x560ee5d34ed0 'y$w_buff0_used' '_Bool'
|   |   | `-ImplicitCastExpr 0x560ee5d3d648 <col:25> 'int' <IntegralCast>
|   |   |   `-ImplicitCastExpr 0x560ee5d3d630 <col:25> '_Bool' <LValueToRValue>
|   |   |     `-DeclRefExpr 0x560ee5d3d5e0 <col:25> '_Bool' lvalue Var 0x560ee5d34b00 'y$r_buff0_thd3' '_Bool'
|   |   |-ImplicitCastExpr 0x560ee5d3d820 <col:42> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x560ee5d3d680 <col:42> 'int' lvalue Var 0x560ee5d34e58 'y$w_buff0' 'int'
|   |   `-ParenExpr 0x560ee5d3d800 <col:54, col:103> 'int'
|   |     `-ConditionalOperator 0x560ee5d3d7d0 <col:55, col:102> 'int'
|   |       |-BinaryOperator 0x560ee5d3d740 <col:55, col:73> 'int' '&&'
|   |       | |-ImplicitCastExpr 0x560ee5d3d6f8 <col:55> 'int' <IntegralCast>
|   |       | | `-ImplicitCastExpr 0x560ee5d3d6e0 <col:55> '_Bool' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x560ee5d3d6a0 <col:55> '_Bool' lvalue Var 0x560ee5d34fc8 'y$w_buff1_used' '_Bool'
|   |       | `-ImplicitCastExpr 0x560ee5d3d728 <col:73> 'int' <IntegralCast>
|   |       |   `-ImplicitCastExpr 0x560ee5d3d710 <col:73> '_Bool' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x560ee5d3d6c0 <col:73> '_Bool' lvalue Var 0x560ee5d34ce0 'y$r_buff1_thd3' '_Bool'
|   |       |-ImplicitCastExpr 0x560ee5d3d7a0 <col:90> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x560ee5d3d760 <col:90> 'int' lvalue Var 0x560ee5d34f50 'y$w_buff1' 'int'
|   |       `-ImplicitCastExpr 0x560ee5d3d7b8 <col:102> 'int' <LValueToRValue>
|   |         `-DeclRefExpr 0x560ee5d3d780 <col:102> 'int' lvalue Var 0x560ee5d347b0 'y' 'int'
|   |-BinaryOperator 0x560ee5d3da70 <line:788:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x560ee5d3d888 <col:3> '_Bool' lvalue Var 0x560ee5d34ed0 'y$w_buff0_used' '_Bool'
|   | `-ImplicitCastExpr 0x560ee5d3da58 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x560ee5d3da28 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x560ee5d3d948 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x560ee5d3d900 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x560ee5d3d8e8 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x560ee5d3d8a8 <col:20> '_Bool' lvalue Var 0x560ee5d34ed0 'y$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x560ee5d3d930 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x560ee5d3d918 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x560ee5d3d8c8 <col:38> '_Bool' lvalue Var 0x560ee5d34b00 'y$r_buff0_thd3' '_Bool'
|   |     |-ImplicitCastExpr 0x560ee5d3d9e0 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x560ee5d3d998 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x560ee5d3d968 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x560ee5d3da10 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x560ee5d3d9f8 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x560ee5d3d9c0 <col:66> '_Bool' lvalue Var 0x560ee5d34ed0 'y$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x560ee5d3dd78 <line:789:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x560ee5d3da90 <col:3> '_Bool' lvalue Var 0x560ee5d34fc8 'y$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x560ee5d3dd60 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x560ee5d3dd30 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x560ee5d3dc50 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x560ee5d3db50 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x560ee5d3db08 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x560ee5d3daf0 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x560ee5d3dab0 <col:20> '_Bool' lvalue Var 0x560ee5d34ed0 'y$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x560ee5d3db38 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x560ee5d3db20 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x560ee5d3dad0 <col:38> '_Bool' lvalue Var 0x560ee5d34b00 'y$r_buff0_thd3' '_Bool'
|   |     | `-BinaryOperator 0x560ee5d3dc30 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x560ee5d3dbe8 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x560ee5d3dbd0 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x560ee5d3db90 <col:56> '_Bool' lvalue Var 0x560ee5d34fc8 'y$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x560ee5d3dc18 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x560ee5d3dc00 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x560ee5d3dbb0 <col:74> '_Bool' lvalue Var 0x560ee5d34ce0 'y$r_buff1_thd3' '_Bool'
|   |     |-ImplicitCastExpr 0x560ee5d3dce8 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x560ee5d3dca0 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x560ee5d3dc70 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x560ee5d3dd18 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x560ee5d3dd00 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x560ee5d3dcc8 <col:102> '_Bool' lvalue Var 0x560ee5d34fc8 'y$w_buff1_used' '_Bool'
|   |-BinaryOperator 0x560ee5d3df80 <line:790:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x560ee5d3dd98 <col:3> '_Bool' lvalue Var 0x560ee5d34b00 'y$r_buff0_thd3' '_Bool'
|   | `-ImplicitCastExpr 0x560ee5d3df68 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x560ee5d3df38 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x560ee5d3de58 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x560ee5d3de10 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x560ee5d3ddf8 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x560ee5d3ddb8 <col:20> '_Bool' lvalue Var 0x560ee5d34ed0 'y$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x560ee5d3de40 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x560ee5d3de28 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x560ee5d3ddd8 <col:38> '_Bool' lvalue Var 0x560ee5d34b00 'y$r_buff0_thd3' '_Bool'
|   |     |-ImplicitCastExpr 0x560ee5d3def0 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x560ee5d3dea8 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x560ee5d3de78 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x560ee5d3df20 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x560ee5d3df08 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x560ee5d3ded0 <col:66> '_Bool' lvalue Var 0x560ee5d34b00 'y$r_buff0_thd3' '_Bool'
|   |-BinaryOperator 0x560ee5d3e268 <line:791:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x560ee5d3dfa0 <col:3> '_Bool' lvalue Var 0x560ee5d34ce0 'y$r_buff1_thd3' '_Bool'
|   | `-ImplicitCastExpr 0x560ee5d3e250 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x560ee5d3e220 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x560ee5d3e140 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x560ee5d3e060 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x560ee5d3e018 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x560ee5d3e000 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x560ee5d3dfc0 <col:20> '_Bool' lvalue Var 0x560ee5d34ed0 'y$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x560ee5d3e048 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x560ee5d3e030 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x560ee5d3dfe0 <col:38> '_Bool' lvalue Var 0x560ee5d34b00 'y$r_buff0_thd3' '_Bool'
|   |     | `-BinaryOperator 0x560ee5d3e120 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x560ee5d3e0d8 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x560ee5d3e0c0 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x560ee5d3e080 <col:56> '_Bool' lvalue Var 0x560ee5d34fc8 'y$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x560ee5d3e108 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x560ee5d3e0f0 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x560ee5d3e0a0 <col:74> '_Bool' lvalue Var 0x560ee5d34ce0 'y$r_buff1_thd3' '_Bool'
|   |     |-ImplicitCastExpr 0x560ee5d3e1d8 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x560ee5d3e190 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x560ee5d3e160 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x560ee5d3e208 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x560ee5d3e1f0 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x560ee5d3e1b8 <col:102> '_Bool' lvalue Var 0x560ee5d34ce0 'y$r_buff1_thd3' '_Bool'
|   |-CallExpr 0x560ee5d3e2c0 <line:792:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x560ee5d3e2a8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x560ee5d3e288 <col:3> 'void ()' Function 0x560ee5cdaf00 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x560ee5d3e318 <line:793:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x560ee5d3e300 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x560ee5d3e2e0 <col:3> 'void ()' Function 0x560ee5cdae40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x560ee5d3e3d0 <line:794:3, col:41> 'int' '='
|   | |-DeclRefExpr 0x560ee5d3e338 <col:3> 'int' lvalue Var 0x560ee5d34120 '__unbuffered_cnt' 'int'
|   | `-BinaryOperator 0x560ee5d3e3b0 <col:22, col:41> 'int' '+'
|   |   |-ImplicitCastExpr 0x560ee5d3e398 <col:22> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x560ee5d3e358 <col:22> 'int' lvalue Var 0x560ee5d34120 '__unbuffered_cnt' 'int'
|   |   `-IntegerLiteral 0x560ee5d3e378 <col:41> 'int' 1
|   |-CallExpr 0x560ee5d3e428 <line:795:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x560ee5d3e410 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x560ee5d3e3f0 <col:3> 'void ()' Function 0x560ee5cdaf00 '__VERIFIER_atomic_end' 'void ()'
|   `-ReturnStmt 0x560ee5d3e4a0 <line:796:3, col:36>
|     `-CallExpr 0x560ee5d3e480 <col:10, col:36> 'void *'
|       `-ImplicitCastExpr 0x560ee5d3e468 <col:10> 'void *(*)(void)' <FunctionToPointerDecay>
|         `-DeclRefExpr 0x560ee5d3e448 <col:10> 'void *(void)' Function 0x560ee5cda958 '__VERIFIER_nondet_pointer' 'void *(void)'
|-FunctionDecl 0x560ee5d3e638 prev 0x560ee5d33e68 <line:798:1, line:800:1> line:798:6 fence 'void ()'
| `-CompoundStmt 0x560ee5d3e6d8 <line:799:1, line:800:1>
|-FunctionDecl 0x560ee5d3e708 prev 0x560ee5d33f28 <line:801:1, line:803:1> line:801:6 isync 'void ()'
| `-CompoundStmt 0x560ee5d3e7a8 <line:802:1, line:803:1>
|-FunctionDecl 0x560ee5d3e7d8 prev 0x560ee5d33fe8 <line:804:1, line:806:1> line:804:6 lwfence 'void ()'
| `-CompoundStmt 0x560ee5d3e878 <line:805:1, line:806:1>
`-FunctionDecl 0x560ee5d3e8e8 <line:807:1, line:844:1> line:807:5 main 'int ()'
  `-CompoundStmt 0x560ee5d42f50 <line:808:1, line:844:1>
    |-DeclStmt 0x560ee5d3ea00 <line:809:3, col:18>
    | `-VarDecl 0x560ee5d3e998 <col:3, col:13> col:13 used t1863 'pthread_t':'unsigned long'
    |-CallExpr 0x560ee5d3ec18 <line:810:3, col:54> 'int'
    | |-ImplicitCastExpr 0x560ee5d3ec00 <col:3> 'int (*)(pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x560ee5d3ea18 <col:3> 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' Function 0x560ee5d1b488 'pthread_create' 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)'
    | |-UnaryOperator 0x560ee5d3ea58 <col:18, col:19> 'pthread_t *' prefix '&' cannot overflow
    | | `-DeclRefExpr 0x560ee5d3ea38 <col:19> 'pthread_t':'unsigned long' lvalue Var 0x560ee5d3e998 't1863' 'pthread_t':'unsigned long'
    | |-ImplicitCastExpr 0x560ee5d3ec58 <col:26, col:36> 'const pthread_attr_t *' <NullToPointer>
    | | `-ParenExpr 0x560ee5d3ead0 <col:26, col:36> 'void *'
    | |   `-CStyleCastExpr 0x560ee5d3eaa8 <col:27, col:35> 'void *' <NullToPointer>
    | |     `-IntegerLiteral 0x560ee5d3ea70 <col:35> 'int' 0
    | |-ImplicitCastExpr 0x560ee5d3ec70 <col:39> 'void *(*)(void *)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x560ee5d3eaf0 <col:39> 'void *(void *)' Function 0x560ee5d351d0 'P0' 'void *(void *)'
    | `-ParenExpr 0x560ee5d3eb70 <col:43, col:53> 'void *'
    |   `-CStyleCastExpr 0x560ee5d3eb48 <col:44, col:52> 'void *' <NullToPointer>
    |     `-IntegerLiteral 0x560ee5d3eb10 <col:52> 'int' 0
    |-DeclStmt 0x560ee5d3ed00 <line:811:3, col:18>
    | `-VarDecl 0x560ee5d3ec98 <col:3, col:13> col:13 used t1864 'pthread_t':'unsigned long'
    |-CallExpr 0x560ee5d3eea8 <line:812:3, col:54> 'int'
    | |-ImplicitCastExpr 0x560ee5d3ee90 <col:3> 'int (*)(pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x560ee5d3ed18 <col:3> 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' Function 0x560ee5d1b488 'pthread_create' 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)'
    | |-UnaryOperator 0x560ee5d3ed58 <col:18, col:19> 'pthread_t *' prefix '&' cannot overflow
    | | `-DeclRefExpr 0x560ee5d3ed38 <col:19> 'pthread_t':'unsigned long' lvalue Var 0x560ee5d3ec98 't1864' 'pthread_t':'unsigned long'
    | |-ImplicitCastExpr 0x560ee5d3eee8 <col:26, col:36> 'const pthread_attr_t *' <NullToPointer>
    | | `-ParenExpr 0x560ee5d3edd0 <col:26, col:36> 'void *'
    | |   `-CStyleCastExpr 0x560ee5d3eda8 <col:27, col:35> 'void *' <NullToPointer>
    | |     `-IntegerLiteral 0x560ee5d3ed70 <col:35> 'int' 0
    | |-ImplicitCastExpr 0x560ee5d3ef00 <col:39> 'void *(*)(void *)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x560ee5d3edf0 <col:39> 'void *(void *)' Function 0x560ee5d36bb8 'P1' 'void *(void *)'
    | `-ParenExpr 0x560ee5d3ee70 <col:43, col:53> 'void *'
    |   `-CStyleCastExpr 0x560ee5d3ee48 <col:44, col:52> 'void *' <NullToPointer>
    |     `-IntegerLiteral 0x560ee5d3ee10 <col:52> 'int' 0
    |-DeclStmt 0x560ee5d3ef90 <line:813:3, col:18>
    | `-VarDecl 0x560ee5d3ef28 <col:3, col:13> col:13 used t1865 'pthread_t':'unsigned long'
    |-CallExpr 0x560ee5d3f138 <line:814:3, col:54> 'int'
    | |-ImplicitCastExpr 0x560ee5d3f120 <col:3> 'int (*)(pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x560ee5d3efa8 <col:3> 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' Function 0x560ee5d1b488 'pthread_create' 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)'
    | |-UnaryOperator 0x560ee5d3efe8 <col:18, col:19> 'pthread_t *' prefix '&' cannot overflow
    | | `-DeclRefExpr 0x560ee5d3efc8 <col:19> 'pthread_t':'unsigned long' lvalue Var 0x560ee5d3ef28 't1865' 'pthread_t':'unsigned long'
    | |-ImplicitCastExpr 0x560ee5d3f178 <col:26, col:36> 'const pthread_attr_t *' <NullToPointer>
    | | `-ParenExpr 0x560ee5d3f060 <col:26, col:36> 'void *'
    | |   `-CStyleCastExpr 0x560ee5d3f038 <col:27, col:35> 'void *' <NullToPointer>
    | |     `-IntegerLiteral 0x560ee5d3f000 <col:35> 'int' 0
    | |-ImplicitCastExpr 0x560ee5d3f190 <col:39> 'void *(*)(void *)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x560ee5d3f080 <col:39> 'void *(void *)' Function 0x560ee5d37f38 'P2' 'void *(void *)'
    | `-ParenExpr 0x560ee5d3f100 <col:43, col:53> 'void *'
    |   `-CStyleCastExpr 0x560ee5d3f0d8 <col:44, col:52> 'void *' <NullToPointer>
    |     `-IntegerLiteral 0x560ee5d3f0a0 <col:52> 'int' 0
    |-CallExpr 0x560ee5d3f1e0 <line:815:3, col:27> 'void'
    | `-ImplicitCastExpr 0x560ee5d3f1c8 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x560ee5d3f1a8 <col:3> 'void ()' Function 0x560ee5cdae40 '__VERIFIER_atomic_begin' 'void ()'
    |-BinaryOperator 0x560ee5d3f2b0 <line:816:3, col:41> '_Bool' '='
    | |-DeclRefExpr 0x560ee5d3f200 <col:3> '_Bool' lvalue Var 0x560ee5d34518 'main$tmp_guard0' '_Bool'
    | `-ImplicitCastExpr 0x560ee5d3f298 <col:21, col:41> '_Bool' <IntegralToBoolean>
    |   `-BinaryOperator 0x560ee5d3f278 <col:21, col:41> 'int' '=='
    |     |-ImplicitCastExpr 0x560ee5d3f260 <col:21> 'int' <LValueToRValue>
    |     | `-DeclRefExpr 0x560ee5d3f220 <col:21> 'int' lvalue Var 0x560ee5d34120 '__unbuffered_cnt' 'int'
    |     `-IntegerLiteral 0x560ee5d3f240 <col:41> 'int' 3
    |-CallExpr 0x560ee5d3f308 <line:817:3, col:25> 'void'
    | `-ImplicitCastExpr 0x560ee5d3f2f0 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x560ee5d3f2d0 <col:3> 'void ()' Function 0x560ee5cdaf00 '__VERIFIER_atomic_end' 'void ()'
    |-CallExpr 0x560ee5d3f380 <line:818:3, col:36> 'void'
    | |-ImplicitCastExpr 0x560ee5d3f368 <col:3> 'void (*)(int)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x560ee5d3f328 <col:3> 'void (int)' Function 0x560ee5cda790 '__VERIFIER_assume' 'void (int)'
    | `-ImplicitCastExpr 0x560ee5d3f3c0 <col:21> 'int' <IntegralCast>
    |   `-ImplicitCastExpr 0x560ee5d3f3a8 <col:21> '_Bool' <LValueToRValue>
    |     `-DeclRefExpr 0x560ee5d3f348 <col:21> '_Bool' lvalue Var 0x560ee5d34518 'main$tmp_guard0' '_Bool'
    |-CallExpr 0x560ee5d3f410 <line:819:3, col:27> 'void'
    | `-ImplicitCastExpr 0x560ee5d3f3f8 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x560ee5d3f3d8 <col:3> 'void ()' Function 0x560ee5cdae40 '__VERIFIER_atomic_begin' 'void ()'
    |-BinaryOperator 0x560ee5d3f6f8 <line:820:3, col:103> 'int' '='
    | |-DeclRefExpr 0x560ee5d3f430 <col:3> 'int' lvalue Var 0x560ee5d347b0 'y' 'int'
    | `-ConditionalOperator 0x560ee5d3f6c8 <col:7, col:103> 'int'
    |   |-BinaryOperator 0x560ee5d3f4f0 <col:7, col:25> 'int' '&&'
    |   | |-ImplicitCastExpr 0x560ee5d3f4a8 <col:7> 'int' <IntegralCast>
    |   | | `-ImplicitCastExpr 0x560ee5d3f490 <col:7> '_Bool' <LValueToRValue>
    |   | |   `-DeclRefExpr 0x560ee5d3f450 <col:7> '_Bool' lvalue Var 0x560ee5d34ed0 'y$w_buff0_used' '_Bool'
    |   | `-ImplicitCastExpr 0x560ee5d3f4d8 <col:25> 'int' <IntegralCast>
    |   |   `-ImplicitCastExpr 0x560ee5d3f4c0 <col:25> '_Bool' <LValueToRValue>
    |   |     `-DeclRefExpr 0x560ee5d3f470 <col:25> '_Bool' lvalue Var 0x560ee5d34940 'y$r_buff0_thd0' '_Bool'
    |   |-ImplicitCastExpr 0x560ee5d3f6b0 <col:42> 'int' <LValueToRValue>
    |   | `-DeclRefExpr 0x560ee5d3f510 <col:42> 'int' lvalue Var 0x560ee5d34e58 'y$w_buff0' 'int'
    |   `-ParenExpr 0x560ee5d3f690 <col:54, col:103> 'int'
    |     `-ConditionalOperator 0x560ee5d3f660 <col:55, col:102> 'int'
    |       |-BinaryOperator 0x560ee5d3f5d0 <col:55, col:73> 'int' '&&'
    |       | |-ImplicitCastExpr 0x560ee5d3f588 <col:55> 'int' <IntegralCast>
    |       | | `-ImplicitCastExpr 0x560ee5d3f570 <col:55> '_Bool' <LValueToRValue>
    |       | |   `-DeclRefExpr 0x560ee5d3f530 <col:55> '_Bool' lvalue Var 0x560ee5d34fc8 'y$w_buff1_used' '_Bool'
    |       | `-ImplicitCastExpr 0x560ee5d3f5b8 <col:73> 'int' <IntegralCast>
    |       |   `-ImplicitCastExpr 0x560ee5d3f5a0 <col:73> '_Bool' <LValueToRValue>
    |       |     `-DeclRefExpr 0x560ee5d3f550 <col:73> '_Bool' lvalue Var 0x560ee5d34b78 'y$r_buff1_thd0' '_Bool'
    |       |-ImplicitCastExpr 0x560ee5d3f630 <col:90> 'int' <LValueToRValue>
    |       | `-DeclRefExpr 0x560ee5d3f5f0 <col:90> 'int' lvalue Var 0x560ee5d34f50 'y$w_buff1' 'int'
    |       `-ImplicitCastExpr 0x560ee5d3f648 <col:102> 'int' <LValueToRValue>
    |         `-DeclRefExpr 0x560ee5d3f610 <col:102> 'int' lvalue Var 0x560ee5d347b0 'y' 'int'
    |-BinaryOperator 0x560ee5d3f900 <line:821:3, col:66> '_Bool' '='
    | |-DeclRefExpr 0x560ee5d3f718 <col:3> '_Bool' lvalue Var 0x560ee5d34ed0 'y$w_buff0_used' '_Bool'
    | `-ImplicitCastExpr 0x560ee5d3f8e8 <col:20, col:66> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x560ee5d3f8b8 <col:20, col:66> 'int'
    |     |-BinaryOperator 0x560ee5d3f7d8 <col:20, col:38> 'int' '&&'
    |     | |-ImplicitCastExpr 0x560ee5d3f790 <col:20> 'int' <IntegralCast>
    |     | | `-ImplicitCastExpr 0x560ee5d3f778 <col:20> '_Bool' <LValueToRValue>
    |     | |   `-DeclRefExpr 0x560ee5d3f738 <col:20> '_Bool' lvalue Var 0x560ee5d34ed0 'y$w_buff0_used' '_Bool'
    |     | `-ImplicitCastExpr 0x560ee5d3f7c0 <col:38> 'int' <IntegralCast>
    |     |   `-ImplicitCastExpr 0x560ee5d3f7a8 <col:38> '_Bool' <LValueToRValue>
    |     |     `-DeclRefExpr 0x560ee5d3f758 <col:38> '_Bool' lvalue Var 0x560ee5d34940 'y$r_buff0_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x560ee5d3f870 <col:55, col:62> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x560ee5d3f828 <col:55, col:62> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x560ee5d3f7f8 <col:62> 'int' 0
    |     `-ImplicitCastExpr 0x560ee5d3f8a0 <col:66> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x560ee5d3f888 <col:66> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x560ee5d3f850 <col:66> '_Bool' lvalue Var 0x560ee5d34ed0 'y$w_buff0_used' '_Bool'
    |-BinaryOperator 0x560ee5d3fbf8 <line:822:3, col:102> '_Bool' '='
    | |-DeclRefExpr 0x560ee5d3f920 <col:3> '_Bool' lvalue Var 0x560ee5d34fc8 'y$w_buff1_used' '_Bool'
    | `-ImplicitCastExpr 0x560ee5d3fbe0 <col:20, col:102> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x560ee5d3fbb0 <col:20, col:102> 'int'
    |     |-BinaryOperator 0x560ee5d3fac0 <col:20, col:74> 'int' '||'
    |     | |-BinaryOperator 0x560ee5d3f9e0 <col:20, col:38> 'int' '&&'
    |     | | |-ImplicitCastExpr 0x560ee5d3f998 <col:20> 'int' <IntegralCast>
    |     | | | `-ImplicitCastExpr 0x560ee5d3f980 <col:20> '_Bool' <LValueToRValue>
    |     | | |   `-DeclRefExpr 0x560ee5d3f940 <col:20> '_Bool' lvalue Var 0x560ee5d34ed0 'y$w_buff0_used' '_Bool'
    |     | | `-ImplicitCastExpr 0x560ee5d3f9c8 <col:38> 'int' <IntegralCast>
    |     | |   `-ImplicitCastExpr 0x560ee5d3f9b0 <col:38> '_Bool' <LValueToRValue>
    |     | |     `-DeclRefExpr 0x560ee5d3f960 <col:38> '_Bool' lvalue Var 0x560ee5d34940 'y$r_buff0_thd0' '_Bool'
    |     | `-BinaryOperator 0x560ee5d3faa0 <col:56, col:74> 'int' '&&'
    |     |   |-ImplicitCastExpr 0x560ee5d3fa58 <col:56> 'int' <IntegralCast>
    |     |   | `-ImplicitCastExpr 0x560ee5d3fa40 <col:56> '_Bool' <LValueToRValue>
    |     |   |   `-DeclRefExpr 0x560ee5d3fa00 <col:56> '_Bool' lvalue Var 0x560ee5d34fc8 'y$w_buff1_used' '_Bool'
    |     |   `-ImplicitCastExpr 0x560ee5d3fa88 <col:74> 'int' <IntegralCast>
    |     |     `-ImplicitCastExpr 0x560ee5d3fa70 <col:74> '_Bool' <LValueToRValue>
    |     |       `-DeclRefExpr 0x560ee5d3fa20 <col:74> '_Bool' lvalue Var 0x560ee5d34b78 'y$r_buff1_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x560ee5d3fb58 <col:91, col:98> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x560ee5d3fb10 <col:91, col:98> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x560ee5d3fae0 <col:98> 'int' 0
    |     `-ImplicitCastExpr 0x560ee5d3fb88 <col:102> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x560ee5d3fb70 <col:102> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x560ee5d3fb38 <col:102> '_Bool' lvalue Var 0x560ee5d34fc8 'y$w_buff1_used' '_Bool'
    |-BinaryOperator 0x560ee5d3fe00 <line:823:3, col:66> '_Bool' '='
    | |-DeclRefExpr 0x560ee5d3fc18 <col:3> '_Bool' lvalue Var 0x560ee5d34940 'y$r_buff0_thd0' '_Bool'
    | `-ImplicitCastExpr 0x560ee5d3fde8 <col:20, col:66> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x560ee5d3fdb8 <col:20, col:66> 'int'
    |     |-BinaryOperator 0x560ee5d3fcd8 <col:20, col:38> 'int' '&&'
    |     | |-ImplicitCastExpr 0x560ee5d3fc90 <col:20> 'int' <IntegralCast>
    |     | | `-ImplicitCastExpr 0x560ee5d3fc78 <col:20> '_Bool' <LValueToRValue>
    |     | |   `-DeclRefExpr 0x560ee5d3fc38 <col:20> '_Bool' lvalue Var 0x560ee5d34ed0 'y$w_buff0_used' '_Bool'
    |     | `-ImplicitCastExpr 0x560ee5d3fcc0 <col:38> 'int' <IntegralCast>
    |     |   `-ImplicitCastExpr 0x560ee5d3fca8 <col:38> '_Bool' <LValueToRValue>
    |     |     `-DeclRefExpr 0x560ee5d3fc58 <col:38> '_Bool' lvalue Var 0x560ee5d34940 'y$r_buff0_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x560ee5d3fd70 <col:55, col:62> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x560ee5d3fd28 <col:55, col:62> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x560ee5d3fcf8 <col:62> 'int' 0
    |     `-ImplicitCastExpr 0x560ee5d3fda0 <col:66> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x560ee5d3fd88 <col:66> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x560ee5d3fd50 <col:66> '_Bool' lvalue Var 0x560ee5d34940 'y$r_buff0_thd0' '_Bool'
    |-BinaryOperator 0x560ee5d400e8 <line:824:3, col:102> '_Bool' '='
    | |-DeclRefExpr 0x560ee5d3fe20 <col:3> '_Bool' lvalue Var 0x560ee5d34b78 'y$r_buff1_thd0' '_Bool'
    | `-ImplicitCastExpr 0x560ee5d400d0 <col:20, col:102> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x560ee5d400a0 <col:20, col:102> 'int'
    |     |-BinaryOperator 0x560ee5d3ffc0 <col:20, col:74> 'int' '||'
    |     | |-BinaryOperator 0x560ee5d3fee0 <col:20, col:38> 'int' '&&'
    |     | | |-ImplicitCastExpr 0x560ee5d3fe98 <col:20> 'int' <IntegralCast>
    |     | | | `-ImplicitCastExpr 0x560ee5d3fe80 <col:20> '_Bool' <LValueToRValue>
    |     | | |   `-DeclRefExpr 0x560ee5d3fe40 <col:20> '_Bool' lvalue Var 0x560ee5d34ed0 'y$w_buff0_used' '_Bool'
    |     | | `-ImplicitCastExpr 0x560ee5d3fec8 <col:38> 'int' <IntegralCast>
    |     | |   `-ImplicitCastExpr 0x560ee5d3feb0 <col:38> '_Bool' <LValueToRValue>
    |     | |     `-DeclRefExpr 0x560ee5d3fe60 <col:38> '_Bool' lvalue Var 0x560ee5d34940 'y$r_buff0_thd0' '_Bool'
    |     | `-BinaryOperator 0x560ee5d3ffa0 <col:56, col:74> 'int' '&&'
    |     |   |-ImplicitCastExpr 0x560ee5d3ff58 <col:56> 'int' <IntegralCast>
    |     |   | `-ImplicitCastExpr 0x560ee5d3ff40 <col:56> '_Bool' <LValueToRValue>
    |     |   |   `-DeclRefExpr 0x560ee5d3ff00 <col:56> '_Bool' lvalue Var 0x560ee5d34fc8 'y$w_buff1_used' '_Bool'
    |     |   `-ImplicitCastExpr 0x560ee5d3ff88 <col:74> 'int' <IntegralCast>
    |     |     `-ImplicitCastExpr 0x560ee5d3ff70 <col:74> '_Bool' <LValueToRValue>
    |     |       `-DeclRefExpr 0x560ee5d3ff20 <col:74> '_Bool' lvalue Var 0x560ee5d34b78 'y$r_buff1_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x560ee5d40058 <col:91, col:98> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x560ee5d40010 <col:91, col:98> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x560ee5d3ffe0 <col:98> 'int' 0
    |     `-ImplicitCastExpr 0x560ee5d40088 <col:102> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x560ee5d40070 <col:102> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x560ee5d40038 <col:102> '_Bool' lvalue Var 0x560ee5d34b78 'y$r_buff1_thd0' '_Bool'
    |-CallExpr 0x560ee5d40140 <line:825:3, col:25> 'void'
    | `-ImplicitCastExpr 0x560ee5d40128 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x560ee5d40108 <col:3> 'void ()' Function 0x560ee5cdaf00 '__VERIFIER_atomic_end' 'void ()'
    |-CallExpr 0x560ee5d40198 <line:826:3, col:27> 'void'
    | `-ImplicitCastExpr 0x560ee5d40180 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x560ee5d40160 <col:3> 'void ()' Function 0x560ee5cdae40 '__VERIFIER_atomic_begin' 'void ()'
    |-BinaryOperator 0x560ee5d40248 <line:827:3, col:45> '_Bool' '='
    | |-DeclRefExpr 0x560ee5d401b8 <col:3> '_Bool' lvalue Var 0x560ee5d35040 'weak$$choice0' '_Bool'
    | `-ImplicitCastExpr 0x560ee5d40230 <col:19, col:45> '_Bool' <PointerToBoolean>
    |   `-CallExpr 0x560ee5d40210 <col:19, col:45> 'void *'
    |     `-ImplicitCastExpr 0x560ee5d401f8 <col:19> 'void *(*)(void)' <FunctionToPointerDecay>
    |       `-DeclRefExpr 0x560ee5d401d8 <col:19> 'void *(void)' Function 0x560ee5cda958 '__VERIFIER_nondet_pointer' 'void *(void)'
    |-BinaryOperator 0x560ee5d402f8 <line:828:3, col:45> '_Bool' '='
    | |-DeclRefExpr 0x560ee5d40268 <col:3> '_Bool' lvalue Var 0x560ee5d350b8 'weak$$choice2' '_Bool'
    | `-ImplicitCastExpr 0x560ee5d402e0 <col:19, col:45> '_Bool' <PointerToBoolean>
    |   `-CallExpr 0x560ee5d402c0 <col:19, col:45> 'void *'
    |     `-ImplicitCastExpr 0x560ee5d402a8 <col:19> 'void *(*)(void)' <FunctionToPointerDecay>
    |       `-DeclRefExpr 0x560ee5d40288 <col:19> 'void *(void)' Function 0x560ee5cda958 '__VERIFIER_nondet_pointer' 'void *(void)'
    |-BinaryOperator 0x560ee5d40370 <line:829:3, col:21> '_Bool' '='
    | |-DeclRefExpr 0x560ee5d40318 <col:3> '_Bool' lvalue Var 0x560ee5d34848 'y$flush_delayed' '_Bool'
    | `-ImplicitCastExpr 0x560ee5d40358 <col:21> '_Bool' <LValueToRValue>
    |   `-DeclRefExpr 0x560ee5d40338 <col:21> '_Bool' lvalue Var 0x560ee5d350b8 'weak$$choice2' '_Bool'
    |-BinaryOperator 0x560ee5d403e8 <line:830:3, col:15> 'int' '='
    | |-DeclRefExpr 0x560ee5d40390 <col:3> 'int' lvalue Var 0x560ee5d348c8 'y$mem_tmp' 'int'
    | `-ImplicitCastExpr 0x560ee5d403d0 <col:15> 'int' <LValueToRValue>
    |   `-DeclRefExpr 0x560ee5d403b0 <col:15> 'int' lvalue Var 0x560ee5d347b0 'y' 'int'
    |-BinaryOperator 0x560ee5d40820 <line:831:3, col:162> 'int' '='
    | |-DeclRefExpr 0x560ee5d40408 <col:3> 'int' lvalue Var 0x560ee5d347b0 'y' 'int'
    | `-ConditionalOperator 0x560ee5d407f0 <col:7, col:162> 'int'
    |   |-BinaryOperator 0x560ee5d40618 <col:7, col:84> 'int' '||'
    |   | |-BinaryOperator 0x560ee5d40538 <col:7, col:46> 'int' '||'
    |   | | |-UnaryOperator 0x560ee5d40460 <col:7, col:8> 'int' prefix '!' cannot overflow
    |   | | | `-ImplicitCastExpr 0x560ee5d40448 <col:8> '_Bool' <LValueToRValue>
    |   | | |   `-DeclRefExpr 0x560ee5d40428 <col:8> '_Bool' lvalue Var 0x560ee5d34ed0 'y$w_buff0_used' '_Bool'
    |   | | `-BinaryOperator 0x560ee5d40518 <col:26, col:46> 'int' '&&'
    |   | |   |-UnaryOperator 0x560ee5d404b0 <col:26, col:27> 'int' prefix '!' cannot overflow
    |   | |   | `-ImplicitCastExpr 0x560ee5d40498 <col:27> '_Bool' <LValueToRValue>
    |   | |   |   `-DeclRefExpr 0x560ee5d40478 <col:27> '_Bool' lvalue Var 0x560ee5d34940 'y$r_buff0_thd0' '_Bool'
    |   | |   `-UnaryOperator 0x560ee5d40500 <col:45, col:46> 'int' prefix '!' cannot overflow
    |   | |     `-ImplicitCastExpr 0x560ee5d404e8 <col:46> '_Bool' <LValueToRValue>
    |   | |       `-DeclRefExpr 0x560ee5d404c8 <col:46> '_Bool' lvalue Var 0x560ee5d34fc8 'y$w_buff1_used' '_Bool'
    |   | `-BinaryOperator 0x560ee5d405f8 <col:64, col:84> 'int' '&&'
    |   |   |-UnaryOperator 0x560ee5d40590 <col:64, col:65> 'int' prefix '!' cannot overflow
    |   |   | `-ImplicitCastExpr 0x560ee5d40578 <col:65> '_Bool' <LValueToRValue>
    |   |   |   `-DeclRefExpr 0x560ee5d40558 <col:65> '_Bool' lvalue Var 0x560ee5d34940 'y$r_buff0_thd0' '_Bool'
    |   |   `-UnaryOperator 0x560ee5d405e0 <col:83, col:84> 'int' prefix '!' cannot overflow
    |   |     `-ImplicitCastExpr 0x560ee5d405c8 <col:84> '_Bool' <LValueToRValue>
    |   |       `-DeclRefExpr 0x560ee5d405a8 <col:84> '_Bool' lvalue Var 0x560ee5d34b78 'y$r_buff1_thd0' '_Bool'
    |   |-ImplicitCastExpr 0x560ee5d407d8 <col:101> 'int' <LValueToRValue>
    |   | `-DeclRefExpr 0x560ee5d40638 <col:101> 'int' lvalue Var 0x560ee5d347b0 'y' 'int'
    |   `-ParenExpr 0x560ee5d407b8 <col:105, col:162> 'int'
    |     `-ConditionalOperator 0x560ee5d40788 <col:106, col:153> 'int'
    |       |-BinaryOperator 0x560ee5d406f8 <col:106, col:124> 'int' '&&'
    |       | |-ImplicitCastExpr 0x560ee5d406b0 <col:106> 'int' <IntegralCast>
    |       | | `-ImplicitCastExpr 0x560ee5d40698 <col:106> '_Bool' <LValueToRValue>
    |       | |   `-DeclRefExpr 0x560ee5d40658 <col:106> '_Bool' lvalue Var 0x560ee5d34ed0 'y$w_buff0_used' '_Bool'
    |       | `-ImplicitCastExpr 0x560ee5d406e0 <col:124> 'int' <IntegralCast>
    |       |   `-ImplicitCastExpr 0x560ee5d406c8 <col:124> '_Bool' <LValueToRValue>
    |       |     `-DeclRefExpr 0x560ee5d40678 <col:124> '_Bool' lvalue Var 0x560ee5d34940 'y$r_buff0_thd0' '_Bool'
    |       |-ImplicitCastExpr 0x560ee5d40758 <col:141> 'int' <LValueToRValue>
    |       | `-DeclRefExpr 0x560ee5d40718 <col:141> 'int' lvalue Var 0x560ee5d34e58 'y$w_buff0' 'int'
    |       `-ImplicitCastExpr 0x560ee5d40770 <col:153> 'int' <LValueToRValue>
    |         `-DeclRefExpr 0x560ee5d40738 <col:153> 'int' lvalue Var 0x560ee5d34f50 'y$w_buff1' 'int'
    |-BinaryOperator 0x560ee5d40d40 <line:832:3, col:208> 'int' '='
    | |-DeclRefExpr 0x560ee5d40840 <col:3> 'int' lvalue Var 0x560ee5d34e58 'y$w_buff0' 'int'
    | `-ConditionalOperator 0x560ee5d40d10 <col:15, col:208> 'int'
    |   |-ImplicitCastExpr 0x560ee5d40ce0 <col:15> 'int' <IntegralCast>
    |   | `-ImplicitCastExpr 0x560ee5d40cc8 <col:15> '_Bool' <LValueToRValue>
    |   |   `-DeclRefExpr 0x560ee5d40860 <col:15> '_Bool' lvalue Var 0x560ee5d350b8 'weak$$choice2' '_Bool'
    |   |-ImplicitCastExpr 0x560ee5d40cf8 <col:31> 'int' <LValueToRValue>
    |   | `-DeclRefExpr 0x560ee5d40880 <col:31> 'int' lvalue Var 0x560ee5d34e58 'y$w_buff0' 'int'
    |   `-ParenExpr 0x560ee5d40ca8 <col:43, col:208> 'int'
    |     `-ConditionalOperator 0x560ee5d40c78 <col:44, col:207> 'int'
    |       |-BinaryOperator 0x560ee5d40a90 <col:44, col:121> 'int' '||'
    |       | |-BinaryOperator 0x560ee5d409b0 <col:44, col:83> 'int' '||'
    |       | | |-UnaryOperator 0x560ee5d408d8 <col:44, col:45> 'int' prefix '!' cannot overflow
    |       | | | `-ImplicitCastExpr 0x560ee5d408c0 <col:45> '_Bool' <LValueToRValue>
    |       | | |   `-DeclRefExpr 0x560ee5d408a0 <col:45> '_Bool' lvalue Var 0x560ee5d34ed0 'y$w_buff0_used' '_Bool'
    |       | | `-BinaryOperator 0x560ee5d40990 <col:63, col:83> 'int' '&&'
    |       | |   |-UnaryOperator 0x560ee5d40928 <col:63, col:64> 'int' prefix '!' cannot overflow
    |       | |   | `-ImplicitCastExpr 0x560ee5d40910 <col:64> '_Bool' <LValueToRValue>
    |       | |   |   `-DeclRefExpr 0x560ee5d408f0 <col:64> '_Bool' lvalue Var 0x560ee5d34940 'y$r_buff0_thd0' '_Bool'
    |       | |   `-UnaryOperator 0x560ee5d40978 <col:82, col:83> 'int' prefix '!' cannot overflow
    |       | |     `-ImplicitCastExpr 0x560ee5d40960 <col:83> '_Bool' <LValueToRValue>
    |       | |       `-DeclRefExpr 0x560ee5d40940 <col:83> '_Bool' lvalue Var 0x560ee5d34fc8 'y$w_buff1_used' '_Bool'
    |       | `-BinaryOperator 0x560ee5d40a70 <col:101, col:121> 'int' '&&'
    |       |   |-UnaryOperator 0x560ee5d40a08 <col:101, col:102> 'int' prefix '!' cannot overflow
    |       |   | `-ImplicitCastExpr 0x560ee5d409f0 <col:102> '_Bool' <LValueToRValue>
    |       |   |   `-DeclRefExpr 0x560ee5d409d0 <col:102> '_Bool' lvalue Var 0x560ee5d34940 'y$r_buff0_thd0' '_Bool'
    |       |   `-UnaryOperator 0x560ee5d40a58 <col:120, col:121> 'int' prefix '!' cannot overflow
    |       |     `-ImplicitCastExpr 0x560ee5d40a40 <col:121> '_Bool' <LValueToRValue>
    |       |       `-DeclRefExpr 0x560ee5d40a20 <col:121> '_Bool' lvalue Var 0x560ee5d34b78 'y$r_buff1_thd0' '_Bool'
    |       |-ImplicitCastExpr 0x560ee5d40c60 <col:138> 'int' <LValueToRValue>
    |       | `-DeclRefExpr 0x560ee5d40ab0 <col:138> 'int' lvalue Var 0x560ee5d34e58 'y$w_buff0' 'int'
    |       `-ParenExpr 0x560ee5d40c40 <col:150, col:207> 'int'
    |         `-ConditionalOperator 0x560ee5d40c10 <col:151, col:198> 'int'
    |           |-BinaryOperator 0x560ee5d40b70 <col:151, col:169> 'int' '&&'
    |           | |-ImplicitCastExpr 0x560ee5d40b28 <col:151> 'int' <IntegralCast>
    |           | | `-ImplicitCastExpr 0x560ee5d40b10 <col:151> '_Bool' <LValueToRValue>
    |           | |   `-DeclRefExpr 0x560ee5d40ad0 <col:151> '_Bool' lvalue Var 0x560ee5d34ed0 'y$w_buff0_used' '_Bool'
    |           | `-ImplicitCastExpr 0x560ee5d40b58 <col:169> 'int' <IntegralCast>
    |           |   `-ImplicitCastExpr 0x560ee5d40b40 <col:169> '_Bool' <LValueToRValue>
    |           |     `-DeclRefExpr 0x560ee5d40af0 <col:169> '_Bool' lvalue Var 0x560ee5d34940 'y$r_buff0_thd0' '_Bool'
    |           |-ImplicitCastExpr 0x560ee5d40be0 <col:186> 'int' <LValueToRValue>
    |           | `-DeclRefExpr 0x560ee5d40b90 <col:186> 'int' lvalue Var 0x560ee5d34e58 'y$w_buff0' 'int'
    |           `-ImplicitCastExpr 0x560ee5d40bf8 <col:198> 'int' <LValueToRValue>
    |             `-DeclRefExpr 0x560ee5d40bc0 <col:198> 'int' lvalue Var 0x560ee5d34e58 'y$w_buff0' 'int'
    |-BinaryOperator 0x560ee5d41250 <line:833:3, col:208> 'int' '='
    | |-DeclRefExpr 0x560ee5d40d60 <col:3> 'int' lvalue Var 0x560ee5d34f50 'y$w_buff1' 'int'
    | `-ConditionalOperator 0x560ee5d41220 <col:15, col:208> 'int'
    |   |-ImplicitCastExpr 0x560ee5d411f0 <col:15> 'int' <IntegralCast>
    |   | `-ImplicitCastExpr 0x560ee5d411d8 <col:15> '_Bool' <LValueToRValue>
    |   |   `-DeclRefExpr 0x560ee5d40d80 <col:15> '_Bool' lvalue Var 0x560ee5d350b8 'weak$$choice2' '_Bool'
    |   |-ImplicitCastExpr 0x560ee5d41208 <col:31> 'int' <LValueToRValue>
    |   | `-DeclRefExpr 0x560ee5d40da0 <col:31> 'int' lvalue Var 0x560ee5d34f50 'y$w_buff1' 'int'
    |   `-ParenExpr 0x560ee5d411b8 <col:43, col:208> 'int'
    |     `-ConditionalOperator 0x560ee5d41188 <col:44, col:207> 'int'
    |       |-BinaryOperator 0x560ee5d40fb0 <col:44, col:121> 'int' '||'
    |       | |-BinaryOperator 0x560ee5d40ed0 <col:44, col:83> 'int' '||'
    |       | | |-UnaryOperator 0x560ee5d40df8 <col:44, col:45> 'int' prefix '!' cannot overflow
    |       | | | `-ImplicitCastExpr 0x560ee5d40de0 <col:45> '_Bool' <LValueToRValue>
    |       | | |   `-DeclRefExpr 0x560ee5d40dc0 <col:45> '_Bool' lvalue Var 0x560ee5d34ed0 'y$w_buff0_used' '_Bool'
    |       | | `-BinaryOperator 0x560ee5d40eb0 <col:63, col:83> 'int' '&&'
    |       | |   |-UnaryOperator 0x560ee5d40e48 <col:63, col:64> 'int' prefix '!' cannot overflow
    |       | |   | `-ImplicitCastExpr 0x560ee5d40e30 <col:64> '_Bool' <LValueToRValue>
    |       | |   |   `-DeclRefExpr 0x560ee5d40e10 <col:64> '_Bool' lvalue Var 0x560ee5d34940 'y$r_buff0_thd0' '_Bool'
    |       | |   `-UnaryOperator 0x560ee5d40e98 <col:82, col:83> 'int' prefix '!' cannot overflow
    |       | |     `-ImplicitCastExpr 0x560ee5d40e80 <col:83> '_Bool' <LValueToRValue>
    |       | |       `-DeclRefExpr 0x560ee5d40e60 <col:83> '_Bool' lvalue Var 0x560ee5d34fc8 'y$w_buff1_used' '_Bool'
    |       | `-BinaryOperator 0x560ee5d40f90 <col:101, col:121> 'int' '&&'
    |       |   |-UnaryOperator 0x560ee5d40f28 <col:101, col:102> 'int' prefix '!' cannot overflow
    |       |   | `-ImplicitCastExpr 0x560ee5d40f10 <col:102> '_Bool' <LValueToRValue>
    |       |   |   `-DeclRefExpr 0x560ee5d40ef0 <col:102> '_Bool' lvalue Var 0x560ee5d34940 'y$r_buff0_thd0' '_Bool'
    |       |   `-UnaryOperator 0x560ee5d40f78 <col:120, col:121> 'int' prefix '!' cannot overflow
    |       |     `-ImplicitCastExpr 0x560ee5d40f60 <col:121> '_Bool' <LValueToRValue>
    |       |       `-DeclRefExpr 0x560ee5d40f40 <col:121> '_Bool' lvalue Var 0x560ee5d34b78 'y$r_buff1_thd0' '_Bool'
    |       |-ImplicitCastExpr 0x560ee5d41170 <col:138> 'int' <LValueToRValue>
    |       | `-DeclRefExpr 0x560ee5d40fd0 <col:138> 'int' lvalue Var 0x560ee5d34f50 'y$w_buff1' 'int'
    |       `-ParenExpr 0x560ee5d41150 <col:150, col:207> 'int'
    |         `-ConditionalOperator 0x560ee5d41120 <col:151, col:198> 'int'
    |           |-BinaryOperator 0x560ee5d41090 <col:151, col:169> 'int' '&&'
    |           | |-ImplicitCastExpr 0x560ee5d41048 <col:151> 'int' <IntegralCast>
    |           | | `-ImplicitCastExpr 0x560ee5d41030 <col:151> '_Bool' <LValueToRValue>
    |           | |   `-DeclRefExpr 0x560ee5d40ff0 <col:151> '_Bool' lvalue Var 0x560ee5d34ed0 'y$w_buff0_used' '_Bool'
    |           | `-ImplicitCastExpr 0x560ee5d41078 <col:169> 'int' <IntegralCast>
    |           |   `-ImplicitCastExpr 0x560ee5d41060 <col:169> '_Bool' <LValueToRValue>
    |           |     `-DeclRefExpr 0x560ee5d41010 <col:169> '_Bool' lvalue Var 0x560ee5d34940 'y$r_buff0_thd0' '_Bool'
    |           |-ImplicitCastExpr 0x560ee5d410f0 <col:186> 'int' <LValueToRValue>
    |           | `-DeclRefExpr 0x560ee5d410b0 <col:186> 'int' lvalue Var 0x560ee5d34f50 'y$w_buff1' 'int'
    |           `-ImplicitCastExpr 0x560ee5d41108 <col:198> 'int' <LValueToRValue>
    |             `-DeclRefExpr 0x560ee5d410d0 <col:198> 'int' lvalue Var 0x560ee5d34f50 'y$w_buff1' 'int'
    |-BinaryOperator 0x560ee5d417f8 <line:834:3, col:227> '_Bool' '='
    | |-DeclRefExpr 0x560ee5d41270 <col:3> '_Bool' lvalue Var 0x560ee5d34ed0 'y$w_buff0_used' '_Bool'
    | `-ImplicitCastExpr 0x560ee5d417e0 <col:20, col:227> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x560ee5d417b0 <col:20, col:227> 'int'
    |     |-ImplicitCastExpr 0x560ee5d41768 <col:20> 'int' <IntegralCast>
    |     | `-ImplicitCastExpr 0x560ee5d41750 <col:20> '_Bool' <LValueToRValue>
    |     |   `-DeclRefExpr 0x560ee5d41290 <col:20> '_Bool' lvalue Var 0x560ee5d350b8 'weak$$choice2' '_Bool'
    |     |-ImplicitCastExpr 0x560ee5d41798 <col:36> 'int' <IntegralCast>
    |     | `-ImplicitCastExpr 0x560ee5d41780 <col:36> '_Bool' <LValueToRValue>
    |     |   `-DeclRefExpr 0x560ee5d412b0 <col:36> '_Bool' lvalue Var 0x560ee5d34ed0 'y$w_buff0_used' '_Bool'
    |     `-ParenExpr 0x560ee5d41730 <col:53, col:227> 'int'
    |       `-ConditionalOperator 0x560ee5d41700 <col:54, col:226> 'int'
    |         |-BinaryOperator 0x560ee5d414c0 <col:54, col:131> 'int' '||'
    |         | |-BinaryOperator 0x560ee5d413e0 <col:54, col:93> 'int' '||'
    |         | | |-UnaryOperator 0x560ee5d41308 <col:54, col:55> 'int' prefix '!' cannot overflow
    |         | | | `-ImplicitCastExpr 0x560ee5d412f0 <col:55> '_Bool' <LValueToRValue>
    |         | | |   `-DeclRefExpr 0x560ee5d412d0 <col:55> '_Bool' lvalue Var 0x560ee5d34ed0 'y$w_buff0_used' '_Bool'
    |         | | `-BinaryOperator 0x560ee5d413c0 <col:73, col:93> 'int' '&&'
    |         | |   |-UnaryOperator 0x560ee5d41358 <col:73, col:74> 'int' prefix '!' cannot overflow
    |         | |   | `-ImplicitCastExpr 0x560ee5d41340 <col:74> '_Bool' <LValueToRValue>
    |         | |   |   `-DeclRefExpr 0x560ee5d41320 <col:74> '_Bool' lvalue Var 0x560ee5d34940 'y$r_buff0_thd0' '_Bool'
    |         | |   `-UnaryOperator 0x560ee5d413a8 <col:92, col:93> 'int' prefix '!' cannot overflow
    |         | |     `-ImplicitCastExpr 0x560ee5d41390 <col:93> '_Bool' <LValueToRValue>
    |         | |       `-DeclRefExpr 0x560ee5d41370 <col:93> '_Bool' lvalue Var 0x560ee5d34fc8 'y$w_buff1_used' '_Bool'
    |         | `-BinaryOperator 0x560ee5d414a0 <col:111, col:131> 'int' '&&'
    |         |   |-UnaryOperator 0x560ee5d41438 <col:111, col:112> 'int' prefix '!' cannot overflow
    |         |   | `-ImplicitCastExpr 0x560ee5d41420 <col:112> '_Bool' <LValueToRValue>
    |         |   |   `-DeclRefExpr 0x560ee5d41400 <col:112> '_Bool' lvalue Var 0x560ee5d34940 'y$r_buff0_thd0' '_Bool'
    |         |   `-UnaryOperator 0x560ee5d41488 <col:130, col:131> 'int' prefix '!' cannot overflow
    |         |     `-ImplicitCastExpr 0x560ee5d41470 <col:131> '_Bool' <LValueToRValue>
    |         |       `-DeclRefExpr 0x560ee5d41450 <col:131> '_Bool' lvalue Var 0x560ee5d34b78 'y$r_buff1_thd0' '_Bool'
    |         |-ImplicitCastExpr 0x560ee5d416e8 <col:148> 'int' <IntegralCast>
    |         | `-ImplicitCastExpr 0x560ee5d416d0 <col:148> '_Bool' <LValueToRValue>
    |         |   `-DeclRefExpr 0x560ee5d414e0 <col:148> '_Bool' lvalue Var 0x560ee5d34ed0 'y$w_buff0_used' '_Bool'
    |         `-ParenExpr 0x560ee5d416b0 <col:165, col:226> 'int'
    |           `-ConditionalOperator 0x560ee5d41680 <col:166, col:212> 'int'
    |             |-BinaryOperator 0x560ee5d415a0 <col:166, col:184> 'int' '&&'
    |             | |-ImplicitCastExpr 0x560ee5d41558 <col:166> 'int' <IntegralCast>
    |             | | `-ImplicitCastExpr 0x560ee5d41540 <col:166> '_Bool' <LValueToRValue>
    |             | |   `-DeclRefExpr 0x560ee5d41500 <col:166> '_Bool' lvalue Var 0x560ee5d34ed0 'y$w_buff0_used' '_Bool'
    |             | `-ImplicitCastExpr 0x560ee5d41588 <col:184> 'int' <IntegralCast>
    |             |   `-ImplicitCastExpr 0x560ee5d41570 <col:184> '_Bool' <LValueToRValue>
    |             |     `-DeclRefExpr 0x560ee5d41520 <col:184> '_Bool' lvalue Var 0x560ee5d34940 'y$r_buff0_thd0' '_Bool'
    |             |-ImplicitCastExpr 0x560ee5d41638 <col:201, col:208> 'int' <IntegralCast>
    |             | `-CStyleCastExpr 0x560ee5d415f0 <col:201, col:208> '_Bool' <IntegralToBoolean>
    |             |   `-IntegerLiteral 0x560ee5d415c0 <col:208> 'int' 0
    |             `-ImplicitCastExpr 0x560ee5d41668 <col:212> 'int' <IntegralCast>
    |               `-ImplicitCastExpr 0x560ee5d41650 <col:212> '_Bool' <LValueToRValue>
    |                 `-DeclRefExpr 0x560ee5d41618 <col:212> '_Bool' lvalue Var 0x560ee5d34ed0 'y$w_buff0_used' '_Bool'
    |-BinaryOperator 0x560ee5d41dd0 <line:835:3, col:221> '_Bool' '='
    | |-DeclRefExpr 0x560ee5d41818 <col:3> '_Bool' lvalue Var 0x560ee5d34fc8 'y$w_buff1_used' '_Bool'
    | `-ImplicitCastExpr 0x560ee5d41db8 <col:20, col:221> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x560ee5d41d88 <col:20, col:221> 'int'
    |     |-ImplicitCastExpr 0x560ee5d41d40 <col:20> 'int' <IntegralCast>
    |     | `-ImplicitCastExpr 0x560ee5d41d28 <col:20> '_Bool' <LValueToRValue>
    |     |   `-DeclRefExpr 0x560ee5d41838 <col:20> '_Bool' lvalue Var 0x560ee5d350b8 'weak$$choice2' '_Bool'
    |     |-ImplicitCastExpr 0x560ee5d41d70 <col:36> 'int' <IntegralCast>
    |     | `-ImplicitCastExpr 0x560ee5d41d58 <col:36> '_Bool' <LValueToRValue>
    |     |   `-DeclRefExpr 0x560ee5d41858 <col:36> '_Bool' lvalue Var 0x560ee5d34fc8 'y$w_buff1_used' '_Bool'
    |     `-ParenExpr 0x560ee5d41d08 <col:53, col:221> 'int'
    |       `-ConditionalOperator 0x560ee5d41cd8 <col:54, col:220> 'int'
    |         |-BinaryOperator 0x560ee5d41a68 <col:54, col:131> 'int' '||'
    |         | |-BinaryOperator 0x560ee5d41988 <col:54, col:93> 'int' '||'
    |         | | |-UnaryOperator 0x560ee5d418b0 <col:54, col:55> 'int' prefix '!' cannot overflow
    |         | | | `-ImplicitCastExpr 0x560ee5d41898 <col:55> '_Bool' <LValueToRValue>
    |         | | |   `-DeclRefExpr 0x560ee5d41878 <col:55> '_Bool' lvalue Var 0x560ee5d34ed0 'y$w_buff0_used' '_Bool'
    |         | | `-BinaryOperator 0x560ee5d41968 <col:73, col:93> 'int' '&&'
    |         | |   |-UnaryOperator 0x560ee5d41900 <col:73, col:74> 'int' prefix '!' cannot overflow
    |         | |   | `-ImplicitCastExpr 0x560ee5d418e8 <col:74> '_Bool' <LValueToRValue>
    |         | |   |   `-DeclRefExpr 0x560ee5d418c8 <col:74> '_Bool' lvalue Var 0x560ee5d34940 'y$r_buff0_thd0' '_Bool'
    |         | |   `-UnaryOperator 0x560ee5d41950 <col:92, col:93> 'int' prefix '!' cannot overflow
    |         | |     `-ImplicitCastExpr 0x560ee5d41938 <col:93> '_Bool' <LValueToRValue>
    |         | |       `-DeclRefExpr 0x560ee5d41918 <col:93> '_Bool' lvalue Var 0x560ee5d34fc8 'y$w_buff1_used' '_Bool'
    |         | `-BinaryOperator 0x560ee5d41a48 <col:111, col:131> 'int' '&&'
    |         |   |-UnaryOperator 0x560ee5d419e0 <col:111, col:112> 'int' prefix '!' cannot overflow
    |         |   | `-ImplicitCastExpr 0x560ee5d419c8 <col:112> '_Bool' <LValueToRValue>
    |         |   |   `-DeclRefExpr 0x560ee5d419a8 <col:112> '_Bool' lvalue Var 0x560ee5d34940 'y$r_buff0_thd0' '_Bool'
    |         |   `-UnaryOperator 0x560ee5d41a30 <col:130, col:131> 'int' prefix '!' cannot overflow
    |         |     `-ImplicitCastExpr 0x560ee5d41a18 <col:131> '_Bool' <LValueToRValue>
    |         |       `-DeclRefExpr 0x560ee5d419f8 <col:131> '_Bool' lvalue Var 0x560ee5d34b78 'y$r_buff1_thd0' '_Bool'
    |         |-ImplicitCastExpr 0x560ee5d41cc0 <col:148> 'int' <IntegralCast>
    |         | `-ImplicitCastExpr 0x560ee5d41ca8 <col:148> '_Bool' <LValueToRValue>
    |         |   `-DeclRefExpr 0x560ee5d41a88 <col:148> '_Bool' lvalue Var 0x560ee5d34fc8 'y$w_buff1_used' '_Bool'
    |         `-ParenExpr 0x560ee5d41c88 <col:165, col:220> 'int'
    |           `-ConditionalOperator 0x560ee5d41c58 <col:166, col:219> 'int'
    |             |-BinaryOperator 0x560ee5d41b48 <col:166, col:184> 'int' '&&'
    |             | |-ImplicitCastExpr 0x560ee5d41b00 <col:166> 'int' <IntegralCast>
    |             | | `-ImplicitCastExpr 0x560ee5d41ae8 <col:166> '_Bool' <LValueToRValue>
    |             | |   `-DeclRefExpr 0x560ee5d41aa8 <col:166> '_Bool' lvalue Var 0x560ee5d34ed0 'y$w_buff0_used' '_Bool'
    |             | `-ImplicitCastExpr 0x560ee5d41b30 <col:184> 'int' <IntegralCast>
    |             |   `-ImplicitCastExpr 0x560ee5d41b18 <col:184> '_Bool' <LValueToRValue>
    |             |     `-DeclRefExpr 0x560ee5d41ac8 <col:184> '_Bool' lvalue Var 0x560ee5d34940 'y$r_buff0_thd0' '_Bool'
    |             |-ImplicitCastExpr 0x560ee5d41c28 <col:201, col:208> 'int' <IntegralCast>
    |             | `-CStyleCastExpr 0x560ee5d41b98 <col:201, col:208> '_Bool' <IntegralToBoolean>
    |             |   `-IntegerLiteral 0x560ee5d41b68 <col:208> 'int' 0
    |             `-ImplicitCastExpr 0x560ee5d41c40 <col:212, col:219> 'int' <IntegralCast>
    |               `-CStyleCastExpr 0x560ee5d41c00 <col:212, col:219> '_Bool' <IntegralToBoolean>
    |                 `-IntegerLiteral 0x560ee5d41bd0 <col:219> 'int' 0
    |-BinaryOperator 0x560ee5d42378 <line:836:3, col:227> '_Bool' '='
    | |-DeclRefExpr 0x560ee5d41df0 <col:3> '_Bool' lvalue Var 0x560ee5d34940 'y$r_buff0_thd0' '_Bool'
    | `-ImplicitCastExpr 0x560ee5d42360 <col:20, col:227> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x560ee5d42330 <col:20, col:227> 'int'
    |     |-ImplicitCastExpr 0x560ee5d422e8 <col:20> 'int' <IntegralCast>
    |     | `-ImplicitCastExpr 0x560ee5d422d0 <col:20> '_Bool' <LValueToRValue>
    |     |   `-DeclRefExpr 0x560ee5d41e10 <col:20> '_Bool' lvalue Var 0x560ee5d350b8 'weak$$choice2' '_Bool'
    |     |-ImplicitCastExpr 0x560ee5d42318 <col:36> 'int' <IntegralCast>
    |     | `-ImplicitCastExpr 0x560ee5d42300 <col:36> '_Bool' <LValueToRValue>
    |     |   `-DeclRefExpr 0x560ee5d41e30 <col:36> '_Bool' lvalue Var 0x560ee5d34940 'y$r_buff0_thd0' '_Bool'
    |     `-ParenExpr 0x560ee5d422b0 <col:53, col:227> 'int'
    |       `-ConditionalOperator 0x560ee5d42280 <col:54, col:226> 'int'
    |         |-BinaryOperator 0x560ee5d42040 <col:54, col:131> 'int' '||'
    |         | |-BinaryOperator 0x560ee5d41f60 <col:54, col:93> 'int' '||'
    |         | | |-UnaryOperator 0x560ee5d41e88 <col:54, col:55> 'int' prefix '!' cannot overflow
    |         | | | `-ImplicitCastExpr 0x560ee5d41e70 <col:55> '_Bool' <LValueToRValue>
    |         | | |   `-DeclRefExpr 0x560ee5d41e50 <col:55> '_Bool' lvalue Var 0x560ee5d34ed0 'y$w_buff0_used' '_Bool'
    |         | | `-BinaryOperator 0x560ee5d41f40 <col:73, col:93> 'int' '&&'
    |         | |   |-UnaryOperator 0x560ee5d41ed8 <col:73, col:74> 'int' prefix '!' cannot overflow
    |         | |   | `-ImplicitCastExpr 0x560ee5d41ec0 <col:74> '_Bool' <LValueToRValue>
    |         | |   |   `-DeclRefExpr 0x560ee5d41ea0 <col:74> '_Bool' lvalue Var 0x560ee5d34940 'y$r_buff0_thd0' '_Bool'
    |         | |   `-UnaryOperator 0x560ee5d41f28 <col:92, col:93> 'int' prefix '!' cannot overflow
    |         | |     `-ImplicitCastExpr 0x560ee5d41f10 <col:93> '_Bool' <LValueToRValue>
    |         | |       `-DeclRefExpr 0x560ee5d41ef0 <col:93> '_Bool' lvalue Var 0x560ee5d34fc8 'y$w_buff1_used' '_Bool'
    |         | `-BinaryOperator 0x560ee5d42020 <col:111, col:131> 'int' '&&'
    |         |   |-UnaryOperator 0x560ee5d41fb8 <col:111, col:112> 'int' prefix '!' cannot overflow
    |         |   | `-ImplicitCastExpr 0x560ee5d41fa0 <col:112> '_Bool' <LValueToRValue>
    |         |   |   `-DeclRefExpr 0x560ee5d41f80 <col:112> '_Bool' lvalue Var 0x560ee5d34940 'y$r_buff0_thd0' '_Bool'
    |         |   `-UnaryOperator 0x560ee5d42008 <col:130, col:131> 'int' prefix '!' cannot overflow
    |         |     `-ImplicitCastExpr 0x560ee5d41ff0 <col:131> '_Bool' <LValueToRValue>
    |         |       `-DeclRefExpr 0x560ee5d41fd0 <col:131> '_Bool' lvalue Var 0x560ee5d34b78 'y$r_buff1_thd0' '_Bool'
    |         |-ImplicitCastExpr 0x560ee5d42268 <col:148> 'int' <IntegralCast>
    |         | `-ImplicitCastExpr 0x560ee5d42250 <col:148> '_Bool' <LValueToRValue>
    |         |   `-DeclRefExpr 0x560ee5d42060 <col:148> '_Bool' lvalue Var 0x560ee5d34940 'y$r_buff0_thd0' '_Bool'
    |         `-ParenExpr 0x560ee5d42230 <col:165, col:226> 'int'
    |           `-ConditionalOperator 0x560ee5d42200 <col:166, col:212> 'int'
    |             |-BinaryOperator 0x560ee5d42120 <col:166, col:184> 'int' '&&'
    |             | |-ImplicitCastExpr 0x560ee5d420d8 <col:166> 'int' <IntegralCast>
    |             | | `-ImplicitCastExpr 0x560ee5d420c0 <col:166> '_Bool' <LValueToRValue>
    |             | |   `-DeclRefExpr 0x560ee5d42080 <col:166> '_Bool' lvalue Var 0x560ee5d34ed0 'y$w_buff0_used' '_Bool'
    |             | `-ImplicitCastExpr 0x560ee5d42108 <col:184> 'int' <IntegralCast>
    |             |   `-ImplicitCastExpr 0x560ee5d420f0 <col:184> '_Bool' <LValueToRValue>
    |             |     `-DeclRefExpr 0x560ee5d420a0 <col:184> '_Bool' lvalue Var 0x560ee5d34940 'y$r_buff0_thd0' '_Bool'
    |             |-ImplicitCastExpr 0x560ee5d421b8 <col:201, col:208> 'int' <IntegralCast>
    |             | `-CStyleCastExpr 0x560ee5d42170 <col:201, col:208> '_Bool' <IntegralToBoolean>
    |             |   `-IntegerLiteral 0x560ee5d42140 <col:208> 'int' 0
    |             `-ImplicitCastExpr 0x560ee5d421e8 <col:212> 'int' <IntegralCast>
    |               `-ImplicitCastExpr 0x560ee5d421d0 <col:212> '_Bool' <LValueToRValue>
    |                 `-DeclRefExpr 0x560ee5d42198 <col:212> '_Bool' lvalue Var 0x560ee5d34940 'y$r_buff0_thd0' '_Bool'
    |-BinaryOperator 0x560ee5d42940 <line:837:3, col:221> '_Bool' '='
    | |-DeclRefExpr 0x560ee5d42398 <col:3> '_Bool' lvalue Var 0x560ee5d34b78 'y$r_buff1_thd0' '_Bool'
    | `-ImplicitCastExpr 0x560ee5d42928 <col:20, col:221> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x560ee5d428f8 <col:20, col:221> 'int'
    |     |-ImplicitCastExpr 0x560ee5d428b0 <col:20> 'int' <IntegralCast>
    |     | `-ImplicitCastExpr 0x560ee5d42898 <col:20> '_Bool' <LValueToRValue>
    |     |   `-DeclRefExpr 0x560ee5d423b8 <col:20> '_Bool' lvalue Var 0x560ee5d350b8 'weak$$choice2' '_Bool'
    |     |-ImplicitCastExpr 0x560ee5d428e0 <col:36> 'int' <IntegralCast>
    |     | `-ImplicitCastExpr 0x560ee5d428c8 <col:36> '_Bool' <LValueToRValue>
    |     |   `-DeclRefExpr 0x560ee5d423d8 <col:36> '_Bool' lvalue Var 0x560ee5d34b78 'y$r_buff1_thd0' '_Bool'
    |     `-ParenExpr 0x560ee5d42878 <col:53, col:221> 'int'
    |       `-ConditionalOperator 0x560ee5d42848 <col:54, col:220> 'int'
    |         |-BinaryOperator 0x560ee5d425e8 <col:54, col:131> 'int' '||'
    |         | |-BinaryOperator 0x560ee5d42508 <col:54, col:93> 'int' '||'
    |         | | |-UnaryOperator 0x560ee5d42430 <col:54, col:55> 'int' prefix '!' cannot overflow
    |         | | | `-ImplicitCastExpr 0x560ee5d42418 <col:55> '_Bool' <LValueToRValue>
    |         | | |   `-DeclRefExpr 0x560ee5d423f8 <col:55> '_Bool' lvalue Var 0x560ee5d34ed0 'y$w_buff0_used' '_Bool'
    |         | | `-BinaryOperator 0x560ee5d424e8 <col:73, col:93> 'int' '&&'
    |         | |   |-UnaryOperator 0x560ee5d42480 <col:73, col:74> 'int' prefix '!' cannot overflow
    |         | |   | `-ImplicitCastExpr 0x560ee5d42468 <col:74> '_Bool' <LValueToRValue>
    |         | |   |   `-DeclRefExpr 0x560ee5d42448 <col:74> '_Bool' lvalue Var 0x560ee5d34940 'y$r_buff0_thd0' '_Bool'
    |         | |   `-UnaryOperator 0x560ee5d424d0 <col:92, col:93> 'int' prefix '!' cannot overflow
    |         | |     `-ImplicitCastExpr 0x560ee5d424b8 <col:93> '_Bool' <LValueToRValue>
    |         | |       `-DeclRefExpr 0x560ee5d42498 <col:93> '_Bool' lvalue Var 0x560ee5d34fc8 'y$w_buff1_used' '_Bool'
    |         | `-BinaryOperator 0x560ee5d425c8 <col:111, col:131> 'int' '&&'
    |         |   |-UnaryOperator 0x560ee5d42560 <col:111, col:112> 'int' prefix '!' cannot overflow
    |         |   | `-ImplicitCastExpr 0x560ee5d42548 <col:112> '_Bool' <LValueToRValue>
    |         |   |   `-DeclRefExpr 0x560ee5d42528 <col:112> '_Bool' lvalue Var 0x560ee5d34940 'y$r_buff0_thd0' '_Bool'
    |         |   `-UnaryOperator 0x560ee5d425b0 <col:130, col:131> 'int' prefix '!' cannot overflow
    |         |     `-ImplicitCastExpr 0x560ee5d42598 <col:131> '_Bool' <LValueToRValue>
    |         |       `-DeclRefExpr 0x560ee5d42578 <col:131> '_Bool' lvalue Var 0x560ee5d34b78 'y$r_buff1_thd0' '_Bool'
    |         |-ImplicitCastExpr 0x560ee5d42830 <col:148> 'int' <IntegralCast>
    |         | `-ImplicitCastExpr 0x560ee5d42818 <col:148> '_Bool' <LValueToRValue>
    |         |   `-DeclRefExpr 0x560ee5d42608 <col:148> '_Bool' lvalue Var 0x560ee5d34b78 'y$r_buff1_thd0' '_Bool'
    |         `-ParenExpr 0x560ee5d427f8 <col:165, col:220> 'int'
    |           `-ConditionalOperator 0x560ee5d427c8 <col:166, col:219> 'int'
    |             |-BinaryOperator 0x560ee5d426c8 <col:166, col:184> 'int' '&&'
    |             | |-ImplicitCastExpr 0x560ee5d42680 <col:166> 'int' <IntegralCast>
    |             | | `-ImplicitCastExpr 0x560ee5d42668 <col:166> '_Bool' <LValueToRValue>
    |             | |   `-DeclRefExpr 0x560ee5d42628 <col:166> '_Bool' lvalue Var 0x560ee5d34ed0 'y$w_buff0_used' '_Bool'
    |             | `-ImplicitCastExpr 0x560ee5d426b0 <col:184> 'int' <IntegralCast>
    |             |   `-ImplicitCastExpr 0x560ee5d42698 <col:184> '_Bool' <LValueToRValue>
    |             |     `-DeclRefExpr 0x560ee5d42648 <col:184> '_Bool' lvalue Var 0x560ee5d34940 'y$r_buff0_thd0' '_Bool'
    |             |-ImplicitCastExpr 0x560ee5d42798 <col:201, col:208> 'int' <IntegralCast>
    |             | `-CStyleCastExpr 0x560ee5d42718 <col:201, col:208> '_Bool' <IntegralToBoolean>
    |             |   `-IntegerLiteral 0x560ee5d426e8 <col:208> 'int' 0
    |             `-ImplicitCastExpr 0x560ee5d427b0 <col:212, col:219> 'int' <IntegralCast>
    |               `-CStyleCastExpr 0x560ee5d42770 <col:212, col:219> '_Bool' <IntegralToBoolean>
    |                 `-IntegerLiteral 0x560ee5d42740 <col:219> 'int' 0
    |-BinaryOperator 0x560ee5d42c30 <line:838:3, col:113> '_Bool' '='
    | |-DeclRefExpr 0x560ee5d42960 <col:3> '_Bool' lvalue Var 0x560ee5d34590 'main$tmp_guard1' '_Bool'
    | `-ImplicitCastExpr 0x560ee5d42c18 <col:21, col:113> '_Bool' <IntegralToBoolean>
    |   `-UnaryOperator 0x560ee5d42c00 <col:21, col:113> 'int' prefix '!' cannot overflow
    |     `-ParenExpr 0x560ee5d42be0 <col:22, col:113> 'int'
    |       `-BinaryOperator 0x560ee5d42ba0 <col:23, col:112> 'int' '&&'
    |         |-BinaryOperator 0x560ee5d42b08 <col:23, col:84> 'int' '&&'
    |         | |-BinaryOperator 0x560ee5d42a70 <col:23, col:56> 'int' '&&'
    |         | | |-BinaryOperator 0x560ee5d429d8 <col:23, col:28> 'int' '=='
    |         | | | |-ImplicitCastExpr 0x560ee5d429c0 <col:23> 'int' <LValueToRValue>
    |         | | | | `-DeclRefExpr 0x560ee5d42980 <col:23> 'int' lvalue Var 0x560ee5d347b0 'y' 'int'
    |         | | | `-IntegerLiteral 0x560ee5d429a0 <col:28> 'int' 2
    |         | | `-BinaryOperator 0x560ee5d42a50 <col:33, col:56> 'int' '=='
    |         | |   |-ImplicitCastExpr 0x560ee5d42a38 <col:33> 'int' <LValueToRValue>
    |         | |   | `-DeclRefExpr 0x560ee5d429f8 <col:33> 'int' lvalue Var 0x560ee5d34240 '__unbuffered_p1_EAX' 'int'
    |         | |   `-IntegerLiteral 0x560ee5d42a18 <col:56> 'int' 1
    |         | `-BinaryOperator 0x560ee5d42ae8 <col:61, col:84> 'int' '=='
    |         |   |-ImplicitCastExpr 0x560ee5d42ad0 <col:61> 'int' <LValueToRValue>
    |         |   | `-DeclRefExpr 0x560ee5d42a90 <col:61> 'int' lvalue Var 0x560ee5d34360 '__unbuffered_p2_EAX' 'int'
    |         |   `-IntegerLiteral 0x560ee5d42ab0 <col:84> 'int' 1
    |         `-BinaryOperator 0x560ee5d42b80 <col:89, col:112> 'int' '=='
    |           |-ImplicitCastExpr 0x560ee5d42b68 <col:89> 'int' <LValueToRValue>
    |           | `-DeclRefExpr 0x560ee5d42b28 <col:89> 'int' lvalue Var 0x560ee5d34480 '__unbuffered_p2_EBX' 'int'
    |           `-IntegerLiteral 0x560ee5d42b48 <col:112> 'int' 1
    |-BinaryOperator 0x560ee5d42d60 <line:839:3, col:37> 'int' '='
    | |-DeclRefExpr 0x560ee5d42c50 <col:3> 'int' lvalue Var 0x560ee5d347b0 'y' 'int'
    | `-ConditionalOperator 0x560ee5d42d30 <col:7, col:37> 'int'
    |   |-ImplicitCastExpr 0x560ee5d42ce8 <col:7> 'int' <IntegralCast>
    |   | `-ImplicitCastExpr 0x560ee5d42cd0 <col:7> '_Bool' <LValueToRValue>
    |   |   `-DeclRefExpr 0x560ee5d42c70 <col:7> '_Bool' lvalue Var 0x560ee5d34848 'y$flush_delayed' '_Bool'
    |   |-ImplicitCastExpr 0x560ee5d42d00 <col:25> 'int' <LValueToRValue>
    |   | `-DeclRefExpr 0x560ee5d42c90 <col:25> 'int' lvalue Var 0x560ee5d348c8 'y$mem_tmp' 'int'
    |   `-ImplicitCastExpr 0x560ee5d42d18 <col:37> 'int' <LValueToRValue>
    |     `-DeclRefExpr 0x560ee5d42cb0 <col:37> 'int' lvalue Var 0x560ee5d347b0 'y' 'int'
    |-BinaryOperator 0x560ee5d42df8 <line:840:3, col:28> '_Bool' '='
    | |-DeclRefExpr 0x560ee5d42d80 <col:3> '_Bool' lvalue Var 0x560ee5d34848 'y$flush_delayed' '_Bool'
    | `-CStyleCastExpr 0x560ee5d42dd0 <col:21, col:28> '_Bool' <IntegralToBoolean>
    |   `-IntegerLiteral 0x560ee5d42da0 <col:28> 'int' 0
    |-CallExpr 0x560ee5d42e50 <line:841:3, col:25> 'void'
    | `-ImplicitCastExpr 0x560ee5d42e38 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x560ee5d42e18 <col:3> 'void ()' Function 0x560ee5cdaf00 '__VERIFIER_atomic_end' 'void ()'
    |-CallExpr 0x560ee5d42ec8 <line:842:3, col:36> 'void'
    | |-ImplicitCastExpr 0x560ee5d42eb0 <col:3> 'void (*)(int)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x560ee5d42e70 <col:3> 'void (int)' Function 0x560ee5cdabc8 '__VERIFIER_assert' 'void (int)'
    | `-ImplicitCastExpr 0x560ee5d42f08 <col:21> 'int' <IntegralCast>
    |   `-ImplicitCastExpr 0x560ee5d42ef0 <col:21> '_Bool' <LValueToRValue>
    |     `-DeclRefExpr 0x560ee5d42e90 <col:21> '_Bool' lvalue Var 0x560ee5d34590 'main$tmp_guard1' '_Bool'
    `-ReturnStmt 0x560ee5d42f40 <line:843:3, col:10>
      `-IntegerLiteral 0x560ee5d42f20 <col:10> 'int' 0
