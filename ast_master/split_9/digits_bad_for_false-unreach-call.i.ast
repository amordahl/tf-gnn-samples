TranslationUnitDecl 0x55766adbae18 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x55766adbb6d8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x55766adbb3b0 '__int128'
|-TypedefDecl 0x55766adbb748 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x55766adbb3d0 'unsigned __int128'
|-TypedefDecl 0x55766adbba50 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x55766adbb820 'struct __NSConstantString_tag'
|   `-Record 0x55766adbb7a0 '__NSConstantString_tag'
|-TypedefDecl 0x55766adbbaf8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x55766adbbab0 'char *'
|   `-BuiltinType 0x55766adbaeb0 'char'
|-TypedefDecl 0x55766adfa830 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'struct __va_list_tag [1]'
| `-ConstantArrayType 0x55766adbbd90 'struct __va_list_tag [1]' 1 
|   `-RecordType 0x55766adbbbd0 'struct __va_list_tag'
|     `-Record 0x55766adbbb50 '__va_list_tag'
|-FunctionDecl 0x55766adfa910 <./split_9/digits_bad_for_false-unreach-call.i:1:1, col:61> col:13 used __VERIFIER_error 'void () __attribute__((noreturn))' extern
|-FunctionDecl 0x55766adfaae0 <line:2:1, col:88> col:6 used __VERIFIER_assert 'void (int)'
| |-ParmVarDecl 0x55766adfaa10 <col:24, col:28> col:28 used cond 'int'
| `-CompoundStmt 0x55766adfad30 <col:34, col:88>
|   |-IfStmt 0x55766adfad08 <col:36, col:78>
|   | |-UnaryOperator 0x55766adfabe0 <col:40, col:46> 'int' prefix '!' cannot overflow
|   | | `-ImplicitCastExpr 0x55766adfabc8 <col:41, col:46> 'int' <LValueToRValue>
|   | |   `-ParenExpr 0x55766adfaba8 <col:41, col:46> 'int' lvalue
|   | |     `-DeclRefExpr 0x55766adfab88 <col:42> 'int' lvalue ParmVar 0x55766adfaa10 'cond' 'int'
|   | `-CompoundStmt 0x55766adfacf0 <col:49, col:78>
|   |   `-LabelStmt 0x55766adfacd8 <col:51, col:75> 'ERROR'
|   |     `-CallExpr 0x55766adfac68 <col:58, col:75> 'void'
|   |       `-ImplicitCastExpr 0x55766adfac50 <col:58> 'void (*)() __attribute__((noreturn))' <FunctionToPointerDecay>
|   |         `-DeclRefExpr 0x55766adfabf8 <col:58> 'void () __attribute__((noreturn))' Function 0x55766adfa910 '__VERIFIER_error' 'void () __attribute__((noreturn))'
|   `-ReturnStmt 0x55766adfad20 <col:80>
`-FunctionDecl 0x55766adfada8 <line:4:1, line:17:1> line:4:5 main 'int ()'
  `-CompoundStmt 0x55766adfb7c0 <line:5:1, line:17:1>
    |-DeclStmt 0x55766adfaf40 <line:6:3, col:26>
    | `-VarDecl 0x55766adfae60 <col:3, col:23> col:15 used x 'long double' cinit
    |   `-ImplicitCastExpr 0x55766adfaf28 <col:19, col:23> 'long double' <FloatingCast>
    |     `-BinaryOperator 0x55766adfaf08 <col:19, col:23> 'double' '/'
    |       |-FloatingLiteral 0x55766adfaec8 <col:19> 'double' 1.000000e+00
    |       `-FloatingLiteral 0x55766adfaee8 <col:23> 'double' 7.000000e+00
    |-DeclStmt 0x55766adfb010 <line:7:3, col:20>
    | `-VarDecl 0x55766adfaf70 <col:3, col:19> col:13 used res 'long long' cinit
    |   `-ImplicitCastExpr 0x55766adfaff8 <col:19> 'long long' <IntegralCast>
    |     `-IntegerLiteral 0x55766adfafd8 <col:19> 'int' 0
    |-ForStmt 0x55766adfb638 <line:9:3, line:13:3>
    | |-DeclStmt 0x55766adfb0c8 <line:9:7, col:16>
    | | `-VarDecl 0x55766adfb040 <col:7, col:15> col:11 used i 'int' cinit
    | |   `-IntegerLiteral 0x55766adfb0a8 <col:15> 'int' 1
    | |-<<<NULL>>>
    | |-BinaryOperator 0x55766adfb150 <col:18, col:23> 'int' '!='
    | | |-ImplicitCastExpr 0x55766adfb120 <col:18> 'long double' <LValueToRValue>
    | | | `-DeclRefExpr 0x55766adfb0e0 <col:18> 'long double' lvalue Var 0x55766adfae60 'x' 'long double'
    | | `-ImplicitCastExpr 0x55766adfb138 <col:23> 'long double' <IntegralToFloating>
    | |   `-IntegerLiteral 0x55766adfb100 <col:23> 'int' 0
    | |-UnaryOperator 0x55766adfb190 <col:26, col:27> 'int' postfix '++'
    | | `-DeclRefExpr 0x55766adfb170 <col:26> 'int' lvalue Var 0x55766adfb040 'i' 'int'
    | `-CompoundStmt 0x55766adfb618 <line:10:3, line:13:3>
    |   |-CompoundAssignOperator 0x55766adfb408 <line:11:5, col:42> 'long long' '+=' ComputeLHSTy='long long' ComputeResultTy='long long'
    |   | |-DeclRefExpr 0x55766adfb1a8 <col:5> 'long long' lvalue Var 0x55766adfaf70 'res' 'long long'
    |   | `-ImplicitCastExpr 0x55766adfb3f0 <col:12, col:42> 'long long' <IntegralCast>
    |   |   `-BinaryOperator 0x55766adfb3d0 <col:12, col:42> 'int' '*'
    |   |     |-ParenExpr 0x55766adfb318 <col:12, col:31> 'int'
    |   |     | `-BinaryOperator 0x55766adfb2f8 <col:13, col:29> 'int' '%'
    |   |     |   |-CStyleCastExpr 0x55766adfb2b0 <col:13, col:25> 'int' <FloatingToIntegral>
    |   |     |   | `-ParenExpr 0x55766adfb290 <col:18, col:25> 'long double'
    |   |     |   |   `-BinaryOperator 0x55766adfb238 <col:19, col:23> 'long double' '*'
    |   |     |   |     |-ImplicitCastExpr 0x55766adfb208 <col:19> 'long double' <LValueToRValue>
    |   |     |   |     | `-DeclRefExpr 0x55766adfb1c8 <col:19> 'long double' lvalue Var 0x55766adfae60 'x' 'long double'
    |   |     |   |     `-ImplicitCastExpr 0x55766adfb220 <col:23> 'long double' <IntegralToFloating>
    |   |     |   |       `-IntegerLiteral 0x55766adfb1e8 <col:23> 'int' 10
    |   |     |   `-IntegerLiteral 0x55766adfb2d8 <col:29> 'int' 10
    |   |     `-ParenExpr 0x55766adfb3b0 <col:35, col:42> 'int'
    |   |       `-BinaryOperator 0x55766adfb390 <col:36, col:40> 'int' '*'
    |   |         |-ImplicitCastExpr 0x55766adfb378 <col:36> 'int' <LValueToRValue>
    |   |         | `-DeclRefExpr 0x55766adfb338 <col:36> 'int' lvalue Var 0x55766adfb040 'i' 'int'
    |   |         `-IntegerLiteral 0x55766adfb358 <col:40> 'int' 10
    |   `-BinaryOperator 0x55766adfb5f8 <line:12:5, col:30> 'long double' '='
    |     |-DeclRefExpr 0x55766adfb438 <col:5> 'long double' lvalue Var 0x55766adfae60 'x' 'long double'
    |     `-BinaryOperator 0x55766adfb5d8 <col:9, col:30> 'long double' '-'
    |       |-ParenExpr 0x55766adfb4e8 <col:9, col:16> 'long double'
    |       | `-BinaryOperator 0x55766adfb4c8 <col:10, col:14> 'long double' '*'
    |       |   |-ImplicitCastExpr 0x55766adfb498 <col:10> 'long double' <LValueToRValue>
    |       |   | `-DeclRefExpr 0x55766adfb458 <col:10> 'long double' lvalue Var 0x55766adfae60 'x' 'long double'
    |       |   `-ImplicitCastExpr 0x55766adfb4b0 <col:14> 'long double' <IntegralToFloating>
    |       |     `-IntegerLiteral 0x55766adfb478 <col:14> 'int' 10
    |       `-ImplicitCastExpr 0x55766adfb5c0 <col:20, col:30> 'long double' <IntegralToFloating>
    |         `-BinaryOperator 0x55766adfb5a0 <col:20, col:30> 'int' '*'
    |           |-CStyleCastExpr 0x55766adfb558 <col:20, col:26> 'int' <FloatingToIntegral>
    |           | `-ImplicitCastExpr 0x55766adfb540 <col:26> 'long double' <LValueToRValue> part_of_explicit_cast
    |           |   `-DeclRefExpr 0x55766adfb508 <col:26> 'long double' lvalue Var 0x55766adfae60 'x' 'long double'
    |           `-IntegerLiteral 0x55766adfb580 <col:30> 'int' 10
    |-CallExpr 0x55766adfb768 <line:15:3, col:32> 'void'
    | |-ImplicitCastExpr 0x55766adfb750 <col:3> 'void (*)(int)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x55766adfb670 <col:3> 'void (int)' Function 0x55766adfaae0 '__VERIFIER_assert' 'void (int)'
    | `-BinaryOperator 0x55766adfb700 <col:21, col:27> 'int' '>'
    |   |-ImplicitCastExpr 0x55766adfb6d0 <col:21> 'long long' <LValueToRValue>
    |   | `-DeclRefExpr 0x55766adfb690 <col:21> 'long long' lvalue Var 0x55766adfaf70 'res' 'long long'
    |   `-ImplicitCastExpr 0x55766adfb6e8 <col:27> 'long long' <IntegralCast>
    |     `-IntegerLiteral 0x55766adfb6b0 <col:27> 'int' 67050
    `-ReturnStmt 0x55766adfb7b0 <line:16:3, col:10>
      `-IntegerLiteral 0x55766adfb790 <col:10> 'int' 0
