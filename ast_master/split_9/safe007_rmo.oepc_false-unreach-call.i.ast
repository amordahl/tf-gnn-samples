TranslationUnitDecl 0x561d5f142e18 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x561d5f1436d8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x561d5f1433b0 '__int128'
|-TypedefDecl 0x561d5f143748 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x561d5f1433d0 'unsigned __int128'
|-TypedefDecl 0x561d5f143a50 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x561d5f143820 'struct __NSConstantString_tag'
|   `-Record 0x561d5f1437a0 '__NSConstantString_tag'
|-TypedefDecl 0x561d5f143af8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x561d5f143ab0 'char *'
|   `-BuiltinType 0x561d5f142eb0 'char'
|-TypedefDecl 0x561d5f182650 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'struct __va_list_tag [1]'
| `-ConstantArrayType 0x561d5f143d90 'struct __va_list_tag [1]' 1 
|   `-RecordType 0x561d5f143bd0 'struct __va_list_tag'
|     `-Record 0x561d5f143b50 '__va_list_tag'
|-FunctionDecl 0x561d5f182770 <./split_9/safe007_rmo.oepc_false-unreach-call.i:1:1, col:41> col:14 used __VERIFIER_nondet_bool '_Bool (void)' extern
|-FunctionDecl 0x561d5f182940 <line:2:1, col:34> col:13 used __VERIFIER_assume 'void (int)' extern
| `-ParmVarDecl 0x561d5f182870 <col:31> col:34 'int'
|-FunctionDecl 0x561d5f182ab8 <line:3:1, col:45> col:15 used __VERIFIER_nondet_pointer 'void *(void)' extern
|-FunctionDecl 0x561d5f182be0 <line:4:1, col:61> col:13 used __VERIFIER_error 'void () __attribute__((noreturn))' extern
|-FunctionDecl 0x561d5f182d28 <line:5:1, col:99> col:6 used __VERIFIER_assert 'void (int)'
| |-ParmVarDecl 0x561d5f182c98 <col:24, col:28> col:28 used expression 'int'
| `-CompoundStmt 0x561d5f182f58 <col:40, col:99>
|   |-IfStmt 0x561d5f182f28 <col:42, col:88>
|   | |-UnaryOperator 0x561d5f182e08 <col:46, col:47> 'int' prefix '!' cannot overflow
|   | | `-ImplicitCastExpr 0x561d5f182df0 <col:47> 'int' <LValueToRValue>
|   | |   `-DeclRefExpr 0x561d5f182dd0 <col:47> 'int' lvalue ParmVar 0x561d5f182c98 'expression' 'int'
|   | `-CompoundStmt 0x561d5f182f10 <col:59, col:88>
|   |   `-LabelStmt 0x561d5f182ef8 <col:61, col:85> 'ERROR'
|   |     `-CallExpr 0x561d5f182e88 <col:68, col:85> 'void'
|   |       `-ImplicitCastExpr 0x561d5f182e70 <col:68> 'void (*)() __attribute__((noreturn))' <FunctionToPointerDecay>
|   |         `-DeclRefExpr 0x561d5f182e20 <col:68> 'void () __attribute__((noreturn))' Function 0x561d5f182be0 '__VERIFIER_error' 'void () __attribute__((noreturn))'
|   |-NullStmt 0x561d5f182f40 <col:89>
|   `-ReturnStmt 0x561d5f182f48 <col:91>
|-FunctionDecl 0x561d5f182fa0 <line:6:1, col:37> col:13 used __VERIFIER_atomic_begin 'void ()' extern
|-FunctionDecl 0x561d5f183060 <line:7:1, col:35> col:13 used __VERIFIER_atomic_end 'void ()' extern
|-FunctionDecl 0x561d5f1833e0 <line:9:1, line:11:76> line:9:13 __assert_fail 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x561d5f183118 <col:28, col:40> col:40 __assertion 'const char *'
| |-ParmVarDecl 0x561d5f183198 <col:53, col:65> col:65 __file 'const char *'
| |-ParmVarDecl 0x561d5f183218 <line:10:7, col:20> col:20 __line 'unsigned int'
| |-ParmVarDecl 0x561d5f183298 <col:28, col:40> col:40 __function 'const char *'
| `-NoThrowAttr 0x561d5f1834a0 <line:11:22>
|-FunctionDecl 0x561d5f1a9520 <line:12:1, line:14:76> line:12:13 __assert_perror_fail 'void (int, const char *, unsigned int, const char *) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x561d5f183510 <col:35, col:39> col:39 __errnum 'int'
| |-ParmVarDecl 0x561d5f183590 <col:49, col:61> col:61 __file 'const char *'
| |-ParmVarDecl 0x561d5f1a9350 <line:13:7, col:20> col:20 __line 'unsigned int'
| |-ParmVarDecl 0x561d5f1a93d0 <col:28, col:40> col:40 __function 'const char *'
| `-NoThrowAttr 0x561d5f1a95e0 <line:14:22>
|-FunctionDecl 0x561d5f1a9890 <line:15:1, line:16:76> line:15:13 __assert 'void (const char *, const char *, int) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x561d5f1a9650 <col:23, col:35> col:35 __assertion 'const char *'
| |-ParmVarDecl 0x561d5f1a96d0 <col:48, col:60> col:60 __file 'const char *'
| |-ParmVarDecl 0x561d5f1a9750 <col:68, col:72> col:72 __line 'int'
| `-NoThrowAttr 0x561d5f1a9948 <line:16:22>
|-TypedefDecl 0x561d5f1a99b8 <line:18:1, col:23> col:23 __u_char 'unsigned char'
| `-BuiltinType 0x561d5f142f70 'unsigned char'
|-TypedefDecl 0x561d5f1a9a28 <line:19:1, col:28> col:28 __u_short 'unsigned short'
| `-BuiltinType 0x561d5f142f90 'unsigned short'
|-TypedefDecl 0x561d5f1a9a98 <line:20:1, col:22> col:22 __u_int 'unsigned int'
| `-BuiltinType 0x561d5f142fb0 'unsigned int'
|-TypedefDecl 0x561d5f1a9b08 <line:21:1, col:27> col:27 __u_long 'unsigned long'
| `-BuiltinType 0x561d5f142fd0 'unsigned long'
|-TypedefDecl 0x561d5f1a9b78 <line:22:1, col:21> col:21 __int8_t 'signed char'
| `-BuiltinType 0x561d5f142ed0 'signed char'
|-TypedefDecl 0x561d5f1a9be8 <line:23:1, col:23> col:23 __uint8_t 'unsigned char'
| `-BuiltinType 0x561d5f142f70 'unsigned char'
|-TypedefDecl 0x561d5f1a9c58 <line:24:1, col:26> col:26 __int16_t 'short'
| `-BuiltinType 0x561d5f142ef0 'short'
|-TypedefDecl 0x561d5f1a9cc8 <line:25:1, col:28> col:28 __uint16_t 'unsigned short'
| `-BuiltinType 0x561d5f142f90 'unsigned short'
|-TypedefDecl 0x561d5f1a9d38 <line:26:1, col:20> col:20 __int32_t 'int'
| `-BuiltinType 0x561d5f142f10 'int'
|-TypedefDecl 0x561d5f1a9da8 <line:27:1, col:22> col:22 __uint32_t 'unsigned int'
| `-BuiltinType 0x561d5f142fb0 'unsigned int'
|-TypedefDecl 0x561d5f1a9e18 <line:28:1, col:25> col:25 __int64_t 'long'
| `-BuiltinType 0x561d5f142f30 'long'
|-TypedefDecl 0x561d5f1a9e88 <line:29:1, col:27> col:27 referenced __uint64_t 'unsigned long'
| `-BuiltinType 0x561d5f142fd0 'unsigned long'
|-TypedefDecl 0x561d5f1a9ef8 <line:30:1, col:18> col:18 referenced __quad_t 'long'
| `-BuiltinType 0x561d5f142f30 'long'
|-TypedefDecl 0x561d5f1a9f68 <line:31:1, col:27> col:27 __u_quad_t 'unsigned long'
| `-BuiltinType 0x561d5f142fd0 'unsigned long'
|-TypedefDecl 0x561d5f1a9fd8 <line:32:1, col:27> col:27 __dev_t 'unsigned long'
| `-BuiltinType 0x561d5f142fd0 'unsigned long'
|-TypedefDecl 0x561d5f1aa048 <line:33:1, col:22> col:22 __uid_t 'unsigned int'
| `-BuiltinType 0x561d5f142fb0 'unsigned int'
|-TypedefDecl 0x561d5f1aa0b8 <line:34:1, col:22> col:22 __gid_t 'unsigned int'
| `-BuiltinType 0x561d5f142fb0 'unsigned int'
|-TypedefDecl 0x561d5f1aa128 <line:35:1, col:27> col:27 __ino_t 'unsigned long'
| `-BuiltinType 0x561d5f142fd0 'unsigned long'
|-TypedefDecl 0x561d5f1aa198 <line:36:1, col:27> col:27 __ino64_t 'unsigned long'
| `-BuiltinType 0x561d5f142fd0 'unsigned long'
|-TypedefDecl 0x561d5f1aa208 <line:37:1, col:22> col:22 __mode_t 'unsigned int'
| `-BuiltinType 0x561d5f142fb0 'unsigned int'
|-TypedefDecl 0x561d5f1aa278 <line:38:1, col:27> col:27 __nlink_t 'unsigned long'
| `-BuiltinType 0x561d5f142fd0 'unsigned long'
|-TypedefDecl 0x561d5f1aa2e8 <line:39:1, col:18> col:18 __off_t 'long'
| `-BuiltinType 0x561d5f142f30 'long'
|-TypedefDecl 0x561d5f1aa378 <line:40:1, col:18> col:18 referenced __off64_t 'long'
| `-BuiltinType 0x561d5f142f30 'long'
|-TypedefDecl 0x561d5f1aa3e8 <line:41:1, col:13> col:13 referenced __pid_t 'int'
| `-BuiltinType 0x561d5f142f10 'int'
|-RecordDecl 0x561d5f1aa440 <line:42:9, col:32> col:9 struct definition
| `-FieldDecl 0x561d5f1aa588 <col:18, col:29> col:22 __val 'int [2]'
|-TypedefDecl 0x561d5f1aa640 <col:1, col:34> col:34 __fsid_t 'struct __fsid_t':'__fsid_t'
| `-ElaboratedType 0x561d5f1aa5e0 'struct __fsid_t' sugar
|   `-RecordType 0x561d5f1aa4c0 '__fsid_t'
|     `-Record 0x561d5f1aa440 ''
|-TypedefDecl 0x561d5f1aa6c8 <line:43:1, col:18> col:18 referenced __clock_t 'long'
| `-BuiltinType 0x561d5f142f30 'long'
|-TypedefDecl 0x561d5f1aa738 <line:44:1, col:27> col:27 __rlim_t 'unsigned long'
| `-BuiltinType 0x561d5f142fd0 'unsigned long'
|-TypedefDecl 0x561d5f1aa7a8 <line:45:1, col:27> col:27 __rlim64_t 'unsigned long'
| `-BuiltinType 0x561d5f142fd0 'unsigned long'
|-TypedefDecl 0x561d5f1aa818 <line:46:1, col:22> col:22 __id_t 'unsigned int'
| `-BuiltinType 0x561d5f142fb0 'unsigned int'
|-TypedefDecl 0x561d5f1aa888 <line:47:1, col:18> col:18 referenced __time_t 'long'
| `-BuiltinType 0x561d5f142f30 'long'
|-TypedefDecl 0x561d5f1aa8f8 <line:48:1, col:22> col:22 __useconds_t 'unsigned int'
| `-BuiltinType 0x561d5f142fb0 'unsigned int'
|-TypedefDecl 0x561d5f1aa968 <line:49:1, col:18> col:18 __suseconds_t 'long'
| `-BuiltinType 0x561d5f142f30 'long'
|-TypedefDecl 0x561d5f1aa9d8 <line:50:1, col:13> col:13 __daddr_t 'int'
| `-BuiltinType 0x561d5f142f10 'int'
|-TypedefDecl 0x561d5f1aaa48 <line:51:1, col:13> col:13 __key_t 'int'
| `-BuiltinType 0x561d5f142f10 'int'
|-TypedefDecl 0x561d5f1aaab8 <line:52:1, col:13> col:13 referenced __clockid_t 'int'
| `-BuiltinType 0x561d5f142f10 'int'
|-TypedefDecl 0x561d5f1aab28 <line:53:1, col:16> col:16 referenced __timer_t 'void *'
| `-PointerType 0x561d5f143630 'void *'
|   `-BuiltinType 0x561d5f142e70 'void'
|-TypedefDecl 0x561d5f1aab98 <line:54:1, col:18> col:18 __blksize_t 'long'
| `-BuiltinType 0x561d5f142f30 'long'
|-TypedefDecl 0x561d5f1aac08 <line:55:1, col:18> col:18 __blkcnt_t 'long'
| `-BuiltinType 0x561d5f142f30 'long'
|-TypedefDecl 0x561d5f1aac78 <line:56:1, col:18> col:18 __blkcnt64_t 'long'
| `-BuiltinType 0x561d5f142f30 'long'
|-TypedefDecl 0x561d5f1aace8 <line:57:1, col:27> col:27 __fsblkcnt_t 'unsigned long'
| `-BuiltinType 0x561d5f142fd0 'unsigned long'
|-TypedefDecl 0x561d5f1aad58 <line:58:1, col:27> col:27 __fsblkcnt64_t 'unsigned long'
| `-BuiltinType 0x561d5f142fd0 'unsigned long'
|-TypedefDecl 0x561d5f1aadc8 <line:59:1, col:27> col:27 __fsfilcnt_t 'unsigned long'
| `-BuiltinType 0x561d5f142fd0 'unsigned long'
|-TypedefDecl 0x561d5f1aae38 <line:60:1, col:27> col:27 __fsfilcnt64_t 'unsigned long'
| `-BuiltinType 0x561d5f142fd0 'unsigned long'
|-TypedefDecl 0x561d5f1aaea8 <line:61:1, col:18> col:18 __fsword_t 'long'
| `-BuiltinType 0x561d5f142f30 'long'
|-TypedefDecl 0x561d5f1aaf18 <line:62:1, col:18> col:18 __ssize_t 'long'
| `-BuiltinType 0x561d5f142f30 'long'
|-TypedefDecl 0x561d5f1aaf88 <line:63:1, col:18> col:18 referenced __syscall_slong_t 'long'
| `-BuiltinType 0x561d5f142f30 'long'
|-TypedefDecl 0x561d5f1aaff8 <line:64:1, col:27> col:27 __syscall_ulong_t 'unsigned long'
| `-BuiltinType 0x561d5f142fd0 'unsigned long'
|-TypedefDecl 0x561d5f1ab088 <line:65:1, col:19> col:19 __loff_t '__off64_t':'long'
| `-TypedefType 0x561d5f1ab050 '__off64_t' sugar
|   |-Typedef 0x561d5f1aa378 '__off64_t'
|   `-BuiltinType 0x561d5f142f30 'long'
|-TypedefDecl 0x561d5f1ab180 <line:66:1, col:19> col:19 __qaddr_t '__quad_t *'
| `-PointerType 0x561d5f1ab140 '__quad_t *'
|   `-TypedefType 0x561d5f1ab0e0 '__quad_t' sugar
|     |-Typedef 0x561d5f1a9ef8 '__quad_t'
|     `-BuiltinType 0x561d5f142f30 'long'
|-TypedefDecl 0x561d5f1ab1f0 <line:67:1, col:15> col:15 __caddr_t 'char *'
| `-PointerType 0x561d5f143ab0 'char *'
|   `-BuiltinType 0x561d5f142eb0 'char'
|-TypedefDecl 0x561d5f1ab260 <line:68:1, col:18> col:18 __intptr_t 'long'
| `-BuiltinType 0x561d5f142f30 'long'
|-TypedefDecl 0x561d5f1ab2d0 <line:69:1, col:22> col:22 __socklen_t 'unsigned int'
| `-BuiltinType 0x561d5f142fb0 'unsigned int'
|-FunctionDecl 0x561d5f1ac458 <line:70:1, line:74:1> line:71:1 __bswap_32 'unsigned int (unsigned int)' static inline
| |-ParmVarDecl 0x561d5f1ac380 <col:13, col:26> col:26 used __bsx 'unsigned int'
| `-CompoundStmt 0x561d5f1ac768 <line:72:1, line:74:1>
|   `-ReturnStmt 0x561d5f1ac758 <line:73:3, col:34>
|     `-CallExpr 0x561d5f1ac718 <col:10, col:34> 'unsigned int'
|       |-ImplicitCastExpr 0x561d5f1ac700 <col:10> 'unsigned int (*)(unsigned int)' <BuiltinFnToFnPtr>
|       | `-DeclRefExpr 0x561d5f1ac690 <col:10> '<builtin fn type>' Function 0x561d5f1ac500 '__builtin_bswap32' 'unsigned int (unsigned int)'
|       `-ImplicitCastExpr 0x561d5f1ac740 <col:29> 'unsigned int' <LValueToRValue>
|         `-DeclRefExpr 0x561d5f1ac6b0 <col:29> 'unsigned int' lvalue ParmVar 0x561d5f1ac380 '__bsx' 'unsigned int'
|-FunctionDecl 0x561d5f1ac500 <col:10> col:10 implicit used __builtin_bswap32 'unsigned int (unsigned int)' extern
| |-ParmVarDecl 0x561d5f1ac5a0 <<invalid sloc>> <invalid sloc> 'unsigned int'
| |-NoThrowAttr 0x561d5f1ac610 <col:10> Implicit
| `-ConstAttr 0x561d5f1ac668 <col:10> Implicit
|-FunctionDecl 0x561d5f1ac8c0 <line:75:1, line:79:1> line:76:1 __bswap_64 '__uint64_t (__uint64_t)' static inline
| |-ParmVarDecl 0x561d5f1ac7b8 <col:13, col:24> col:24 used __bsx '__uint64_t':'unsigned long'
| `-CompoundStmt 0x561d5f1acbd8 <line:77:1, line:79:1>
|   `-ReturnStmt 0x561d5f1acbc8 <line:78:3, col:34>
|     `-CallExpr 0x561d5f1acb88 <col:10, col:34> 'unsigned long'
|       |-ImplicitCastExpr 0x561d5f1acb70 <col:10> 'unsigned long (*)(unsigned long)' <BuiltinFnToFnPtr>
|       | `-DeclRefExpr 0x561d5f1acaf8 <col:10> '<builtin fn type>' Function 0x561d5f1ac968 '__builtin_bswap64' 'unsigned long (unsigned long)'
|       `-ImplicitCastExpr 0x561d5f1acbb0 <col:29> '__uint64_t':'unsigned long' <LValueToRValue>
|         `-DeclRefExpr 0x561d5f1acb18 <col:29> '__uint64_t':'unsigned long' lvalue ParmVar 0x561d5f1ac7b8 '__bsx' '__uint64_t':'unsigned long'
|-FunctionDecl 0x561d5f1ac968 <col:10> col:10 implicit used __builtin_bswap64 'unsigned long (unsigned long)' extern
| |-ParmVarDecl 0x561d5f1aca08 <<invalid sloc>> <invalid sloc> 'unsigned long'
| |-NoThrowAttr 0x561d5f1aca78 <col:10> Implicit
| `-ConstAttr 0x561d5f1acad0 <col:10> Implicit
|-TypedefDecl 0x561d5f1acc08 <line:80:1, col:27> col:27 referenced size_t 'unsigned long'
| `-BuiltinType 0x561d5f142fd0 'unsigned long'
|-TypedefDecl 0x561d5f1acc98 <line:82:1, col:18> col:18 referenced time_t '__time_t':'long'
| `-TypedefType 0x561d5f1acc60 '__time_t' sugar
|   |-Typedef 0x561d5f1aa888 '__time_t'
|   `-BuiltinType 0x561d5f142f30 'long'
|-RecordDecl 0x561d5f1accf0 <line:85:1, line:89:3> line:85:8 struct timespec definition
| |-FieldDecl 0x561d5f1acda8 <line:87:5, col:14> col:14 tv_sec '__time_t':'long'
| `-FieldDecl 0x561d5f1ace38 <line:88:5, col:23> col:23 tv_nsec '__syscall_slong_t':'long'
|-TypedefDecl 0x561d5f1acec8 <line:90:1, col:17> col:17 referenced pid_t '__pid_t':'int'
| `-TypedefType 0x561d5f1ace90 '__pid_t' sugar
|   |-Typedef 0x561d5f1aa3e8 '__pid_t'
|   `-BuiltinType 0x561d5f142f10 'int'
|-RecordDecl 0x561d5f1acf20 <line:91:1, line:94:3> line:91:8 struct sched_param definition
| `-FieldDecl 0x561d5f1acfe0 <line:93:5, col:9> col:9 __sched_priority 'int'
|-RecordDecl 0x561d5f1ad030 <line:97:1, line:100:3> line:97:8 struct __sched_param definition
| `-FieldDecl 0x561d5f1ad0f0 <line:99:5, col:9> col:9 __sched_priority 'int'
|-TypedefDecl 0x561d5f1ad158 <line:101:1, col:27> col:27 referenced __cpu_mask 'unsigned long'
| `-BuiltinType 0x561d5f142fd0 'unsigned long'
|-RecordDecl 0x561d5f1ad1b0 <line:102:9, line:105:1> line:102:9 struct definition
| `-FieldDecl 0x561d5f1ae480 <line:104:3, col:53> col:14 __bits '__cpu_mask [64]'
|-TypedefDecl 0x561d5f1ae530 <line:102:1, line:105:3> col:3 referenced cpu_set_t 'struct cpu_set_t':'cpu_set_t'
| `-ElaboratedType 0x561d5f1ae4d0 'struct cpu_set_t' sugar
|   `-RecordType 0x561d5f1ad230 'cpu_set_t'
|     `-Record 0x561d5f1ad1b0 ''
|-FunctionDecl 0x561d5f1ae808 <line:107:1, line:108:42> line:107:12 __sched_cpucount 'int (size_t, const cpu_set_t *)' extern
| |-ParmVarDecl 0x561d5f1ae5d8 <col:30, col:37> col:37 __setsize 'size_t':'unsigned long'
| |-ParmVarDecl 0x561d5f1ae6e0 <col:48, col:65> col:65 __setp 'const cpu_set_t *'
| `-NoThrowAttr 0x561d5f1ae8b8 <line:108:19>
|-FunctionDecl 0x561d5f1aea90 <line:109:1, col:92> col:19 __sched_cpualloc 'cpu_set_t *(size_t)' extern
| |-ParmVarDecl 0x561d5f1ae920 <col:37, col:44> col:44 __count 'size_t':'unsigned long'
| `-NoThrowAttr 0x561d5f1aeb38 <col:69>
|-FunctionDecl 0x561d5f1aecb0 <line:110:1, col:87> col:13 __sched_cpufree 'void (cpu_set_t *)' extern
| |-ParmVarDecl 0x561d5f1aeba0 <col:30, col:41> col:41 __set 'cpu_set_t *'
| `-NoThrowAttr 0x561d5f1aed58 <col:64>
|-FunctionDecl 0x561d5f1af018 <line:113:1, line:114:45> line:113:12 sched_setparam 'int (__pid_t, const struct sched_param *)' extern
| |-ParmVarDecl 0x561d5f1aedc0 <col:28, col:36> col:36 __pid '__pid_t':'int'
| |-ParmVarDecl 0x561d5f1aeef8 <col:43, col:69> col:69 __param 'const struct sched_param *'
| `-NoThrowAttr 0x561d5f1af0c8 <line:114:22>
|-FunctionDecl 0x561d5f1af3b0 <line:115:1, col:111> col:12 sched_getparam 'int (__pid_t, struct sched_param *)' extern
| |-ParmVarDecl 0x561d5f1af130 <col:28, col:36> col:36 __pid '__pid_t':'int'
| |-ParmVarDecl 0x561d5f1af228 <col:43, col:63> col:63 __param 'struct sched_param *'
| `-NoThrowAttr 0x561d5f1af460 <col:88>
|-FunctionDecl 0x561d5f1af718 <line:116:1, line:117:85> line:116:12 sched_setscheduler 'int (__pid_t, int, const struct sched_param *)' extern
| |-ParmVarDecl 0x561d5f1af4c8 <col:32, col:40> col:40 __pid '__pid_t':'int'
| |-ParmVarDecl 0x561d5f1af548 <col:47, col:51> col:51 __policy 'int'
| |-ParmVarDecl 0x561d5f1af5d8 <line:117:11, col:37> col:37 __param 'const struct sched_param *'
| `-NoThrowAttr 0x561d5f1af7d0 <col:62>
|-FunctionDecl 0x561d5f1af948 <line:118:1, col:86> col:12 sched_getscheduler 'int (__pid_t)' extern
| |-ParmVarDecl 0x561d5f1af838 <col:32, col:40> col:40 __pid '__pid_t':'int'
| `-NoThrowAttr 0x561d5f1af9f0 <col:63>
|-FunctionDecl 0x561d5f1afb18 <line:119:1, col:70> col:12 sched_yield 'int (void)' extern
| `-NoThrowAttr 0x561d5f1afbb8 <col:47>
|-FunctionDecl 0x561d5f1afcc0 <line:120:1, col:92> col:12 sched_get_priority_max 'int (int)' extern
| |-ParmVarDecl 0x561d5f1afc28 <col:36, col:40> col:40 __algorithm 'int'
| `-NoThrowAttr 0x561d5f1afd68 <col:69>
|-FunctionDecl 0x561d5f1afe70 <line:121:1, col:92> col:12 sched_get_priority_min 'int (int)' extern
| |-ParmVarDecl 0x561d5f1afdd8 <col:36, col:40> col:40 __algorithm 'int'
| `-NoThrowAttr 0x561d5f1aff18 <col:69>
|-FunctionDecl 0x561d5f1b01d8 <line:122:1, col:111> col:12 sched_rr_get_interval 'int (__pid_t, struct timespec *)' extern
| |-ParmVarDecl 0x561d5f1aff80 <col:35, col:43> col:43 __pid '__pid_t':'int'
| |-ParmVarDecl 0x561d5f1b00b8 <col:50, col:67> col:67 __t 'struct timespec *'
| `-NoThrowAttr 0x561d5f1b0288 <col:88>
|-TypedefDecl 0x561d5f1b0318 <line:126:1, col:19> col:19 referenced clock_t '__clock_t':'long'
| `-TypedefType 0x561d5f1b02e0 '__clock_t' sugar
|   |-Typedef 0x561d5f1aa6c8 '__clock_t'
|   `-BuiltinType 0x561d5f142f30 'long'
|-TypedefDecl 0x561d5f1b03c0 <line:129:1, col:21> col:21 referenced clockid_t '__clockid_t':'int'
| `-TypedefType 0x561d5f1b0370 '__clockid_t' sugar
|   |-Typedef 0x561d5f1aaab8 '__clockid_t'
|   `-BuiltinType 0x561d5f142f10 'int'
|-TypedefDecl 0x561d5f1b0458 <line:130:1, col:19> col:19 referenced timer_t '__timer_t':'void *'
| `-TypedefType 0x561d5f1b0420 '__timer_t' sugar
|   |-Typedef 0x561d5f1aab28 '__timer_t'
|   `-PointerType 0x561d5f143630 'void *'
|     `-BuiltinType 0x561d5f142e70 'void'
|-RecordDecl 0x561d5f1b04b0 <line:132:1, line:145:1> line:132:8 struct tm definition
| |-FieldDecl 0x561d5f1b0570 <line:134:3, col:7> col:7 tm_sec 'int'
| |-FieldDecl 0x561d5f1b05d8 <line:135:3, col:7> col:7 tm_min 'int'
| |-FieldDecl 0x561d5f1b0640 <line:136:3, col:7> col:7 tm_hour 'int'
| |-FieldDecl 0x561d5f1b06a8 <line:137:3, col:7> col:7 tm_mday 'int'
| |-FieldDecl 0x561d5f1b0710 <line:138:3, col:7> col:7 tm_mon 'int'
| |-FieldDecl 0x561d5f1b0778 <line:139:3, col:7> col:7 tm_year 'int'
| |-FieldDecl 0x561d5f1b07e0 <line:140:3, col:7> col:7 tm_wday 'int'
| |-FieldDecl 0x561d5f1b0848 <line:141:3, col:7> col:7 tm_yday 'int'
| |-FieldDecl 0x561d5f1b08b0 <line:142:3, col:7> col:7 tm_isdst 'int'
| |-FieldDecl 0x561d5f1b0918 <line:143:3, col:12> col:12 tm_gmtoff 'long'
| `-FieldDecl 0x561d5f1b0980 <line:144:3, col:15> col:15 tm_zone 'const char *'
|-RecordDecl 0x561d5f1b09d0 <line:148:1, line:152:3> line:148:8 struct itimerspec definition
| |-FieldDecl 0x561d5f1b0a98 <line:150:5, col:21> col:21 it_interval 'struct timespec':'struct timespec'
| `-FieldDecl 0x561d5f1b0b08 <line:151:5, col:21> col:21 it_value 'struct timespec':'struct timespec'
|-RecordDecl 0x561d5f1b0bb0 <line:153:1, col:8> col:8 struct sigevent
|-FunctionDecl 0x561d5f1b0d80 <line:155:1, col:68> col:16 clock 'clock_t (void)' extern
| `-NoThrowAttr 0x561d5f1b0e20 <col:45>
|-FunctionDecl 0x561d5f1b1000 <line:156:1, col:77> col:15 time 'time_t (time_t *)' extern
| |-ParmVarDecl 0x561d5f1b0ef0 <col:21, col:29> col:29 __timer 'time_t *'
| `-NoThrowAttr 0x561d5f1b10a8 <col:54>
|-FunctionDecl 0x561d5f1b12a8 <line:157:1, line:158:73> line:157:15 difftime 'double (time_t, time_t)' extern
| |-ParmVarDecl 0x561d5f1b1110 <col:25, col:32> col:32 __time1 'time_t':'long'
| |-ParmVarDecl 0x561d5f1b1188 <col:41, col:48> col:48 __time0 'time_t':'long'
| |-NoThrowAttr 0x561d5f1b1358 <line:158:22>
| `-ConstAttr 0x561d5f1b1ff0 <col:63>
|-FunctionDecl 0x561d5f1b21f0 <line:159:1, col:79> col:15 mktime 'time_t (struct tm *)' extern
| |-ParmVarDecl 0x561d5f1b20e8 <col:23, col:34> col:34 __tp 'struct tm *'
| `-NoThrowAttr 0x561d5f1b2298 <col:56>
|-FunctionDecl 0x561d5f1b2640 <line:160:1, line:162:77> line:160:15 strftime 'size_t (char *restrict, size_t, const char *restrict, const struct tm *restrict)' extern
| |-ParmVarDecl 0x561d5f1b2308 <col:25, col:42> col:42 __s 'char *restrict'
| |-ParmVarDecl 0x561d5f1b2380 <col:47, col:54> col:54 __maxsize 'size_t':'unsigned long'
| |-ParmVarDecl 0x561d5f1b2400 <line:161:4, col:27> col:27 __format 'const char *restrict'
| |-ParmVarDecl 0x561d5f1b24f8 <line:162:4, col:32> col:32 __tp 'const struct tm *restrict'
| `-NoThrowAttr 0x561d5f1b2700 <col:54>
|-RecordDecl 0x561d5f1b2758 <line:164:9, line:171:1> line:164:16 struct __locale_struct definition
| |-RecordDecl 0x561d5f1b2808 parent 0x561d5f142e18 <line:166:3, col:10> col:10 struct __locale_data
| |-FieldDecl 0x561d5f1b2a68 <col:3, col:37> col:25 __locales 'struct __locale_data *[13]'
| |-FieldDecl 0x561d5f1b2b08 <line:167:3, col:29> col:29 __ctype_b 'const unsigned short *'
| |-FieldDecl 0x561d5f1b2b70 <line:168:3, col:14> col:14 __ctype_tolower 'const int *'
| |-FieldDecl 0x561d5f1b2bd8 <line:169:3, col:14> col:14 __ctype_toupper 'const int *'
| `-FieldDecl 0x561d5f1b2cc8 <line:170:3, col:25> col:15 __names 'const char *[13]'
|-TypedefDecl 0x561d5f1b2de8 <line:164:1, line:171:4> col:4 referenced __locale_t 'struct __locale_struct *'
| `-PointerType 0x561d5f1b2d90 'struct __locale_struct *'
|   `-ElaboratedType 0x561d5f1b2d20 'struct __locale_struct' sugar
|     `-RecordType 0x561d5f1b27e0 'struct __locale_struct'
|       `-Record 0x561d5f1b2758 '__locale_struct'
|-TypedefDecl 0x561d5f1b2e98 <line:172:1, col:20> col:20 locale_t '__locale_t':'struct __locale_struct *'
| `-TypedefType 0x561d5f1b2e60 '__locale_t' sugar
|   |-Typedef 0x561d5f1b2de8 '__locale_t'
|   `-PointerType 0x561d5f1b2d90 'struct __locale_struct *'
|     `-ElaboratedType 0x561d5f1b2d20 'struct __locale_struct' sugar
|       `-RecordType 0x561d5f1b27e0 'struct __locale_struct'
|         `-Record 0x561d5f1b2758 '__locale_struct'
|-FunctionDecl 0x561d5f1b42a0 <line:173:1, line:176:63> line:173:15 strftime_l 'size_t (char *restrict, size_t, const char *restrict, const struct tm *restrict, __locale_t)' extern
| |-ParmVarDecl 0x561d5f1b2f08 <col:27, col:44> col:44 __s 'char *restrict'
| |-ParmVarDecl 0x561d5f1b2f80 <col:49, col:56> col:56 __maxsize 'size_t':'unsigned long'
| |-ParmVarDecl 0x561d5f1b4028 <line:174:6, col:29> col:29 __format 'const char *restrict'
| |-ParmVarDecl 0x561d5f1b40b8 <line:175:6, col:34> col:34 __tp 'const struct tm *restrict'
| |-ParmVarDecl 0x561d5f1b4130 <line:176:6, col:17> col:17 __loc '__locale_t':'struct __locale_struct *'
| `-NoThrowAttr 0x561d5f1b4368 <col:40>
|-FunctionDecl 0x561d5f1b4558 <line:178:1, col:89> col:19 gmtime 'struct tm *(const time_t *)' extern
| |-ParmVarDecl 0x561d5f1b4430 <col:27, col:41> col:41 __timer 'const time_t *'
| `-NoThrowAttr 0x561d5f1b4600 <col:66>
|-FunctionDecl 0x561d5f1b4710 <line:179:1, col:92> col:19 localtime 'struct tm *(const time_t *)' extern
| |-ParmVarDecl 0x561d5f1b4668 <col:30, col:44> col:44 __timer 'const time_t *'
| `-NoThrowAttr 0x561d5f1b47b8 <col:69>
|-FunctionDecl 0x561d5f1b49e8 <line:181:1, line:182:75> line:181:19 gmtime_r 'struct tm *(const time_t *restrict, struct tm *restrict)' extern
| |-ParmVarDecl 0x561d5f1b4820 <col:29, col:54> col:54 __timer 'const time_t *restrict'
| |-ParmVarDecl 0x561d5f1b48b0 <line:182:8, col:30> col:30 __tp 'struct tm *restrict'
| `-NoThrowAttr 0x561d5f1b4a98 <col:52>
|-FunctionDecl 0x561d5f1b4c40 <line:183:1, line:184:78> line:183:19 localtime_r 'struct tm *(const time_t *restrict, struct tm *restrict)' extern
| |-ParmVarDecl 0x561d5f1b4b00 <col:32, col:57> col:57 __timer 'const time_t *restrict'
| |-ParmVarDecl 0x561d5f1b4b90 <line:184:11, col:33> col:33 __tp 'struct tm *restrict'
| `-NoThrowAttr 0x561d5f1b4cf0 <col:55>
|-FunctionDecl 0x561d5f1b4e88 <line:186:1, col:85> col:14 asctime 'char *(const struct tm *)' extern
| |-ParmVarDecl 0x561d5f1b4d70 <col:23, col:40> col:40 __tp 'const struct tm *'
| `-NoThrowAttr 0x561d5f1b4f30 <col:62>
|-FunctionDecl 0x561d5f1b5168 <line:187:1, col:83> col:14 ctime 'char *(const time_t *)' extern
| |-ParmVarDecl 0x561d5f1b4f98 <col:21, col:35> col:35 __timer 'const time_t *'
| `-NoThrowAttr 0x561d5f1b5210 <col:60>
|-FunctionDecl 0x561d5f1b5438 <line:189:1, line:190:67> line:189:14 asctime_r 'char *(const struct tm *restrict, char *restrict)' extern
| |-ParmVarDecl 0x561d5f1b5290 <col:25, col:53> col:53 __tp 'const struct tm *restrict'
| |-ParmVarDecl 0x561d5f1b5310 <line:190:4, col:21> col:21 __buf 'char *restrict'
| `-NoThrowAttr 0x561d5f1b54e8 <col:44>
|-FunctionDecl 0x561d5f1b56f8 <line:191:1, line:192:72> line:191:14 ctime_r 'char *(const time_t *restrict, char *restrict)' extern
| |-ParmVarDecl 0x561d5f1b5550 <col:23, col:48> col:48 __timer 'const time_t *restrict'
| |-ParmVarDecl 0x561d5f1b55d0 <line:192:9, col:26> col:26 __buf 'char *restrict'
| `-NoThrowAttr 0x561d5f1b57a8 <col:49>
|-VarDecl 0x561d5f1b58a8 <line:193:1, col:24> col:14 __tzname 'char *[2]' extern
|-VarDecl 0x561d5f1b5928 <line:194:1, col:12> col:12 __daylight 'int' extern
|-VarDecl 0x561d5f1b59a8 <line:195:1, col:17> col:17 __timezone 'long' extern
|-VarDecl 0x561d5f1b5a70 <line:196:1, col:22> col:14 tzname 'char *[2]' extern
|-FunctionDecl 0x561d5f1b5ba0 <line:197:1, col:65> col:13 tzset 'void (void)' extern
| `-NoThrowAttr 0x561d5f1b5c40 <col:42>
|-VarDecl 0x561d5f1b5cb0 <line:198:1, col:12> col:12 daylight 'int' extern
|-VarDecl 0x561d5f1b5d30 <line:199:1, col:17> col:17 timezone 'long' extern
|-FunctionDecl 0x561d5f1b5eb8 <line:200:1, col:80> col:12 stime 'int (const time_t *)' extern
| |-ParmVarDecl 0x561d5f1b5da8 <col:19, col:33> col:33 __when 'const time_t *'
| `-NoThrowAttr 0x561d5f1b5f60 <col:57>
|-FunctionDecl 0x561d5f1b60d0 <line:201:1, col:79> col:15 timegm 'time_t (struct tm *)' extern
| |-ParmVarDecl 0x561d5f1b5fe0 <col:23, col:34> col:34 __tp 'struct tm *'
| `-NoThrowAttr 0x561d5f1b6178 <col:56>
|-FunctionDecl 0x561d5f1b6288 <line:202:1, col:82> col:15 timelocal 'time_t (struct tm *)' extern
| |-ParmVarDecl 0x561d5f1b61f8 <col:26, col:37> col:37 __tp 'struct tm *'
| `-NoThrowAttr 0x561d5f1b6330 <col:59>
|-FunctionDecl 0x561d5f1b6438 <line:203:1, col:99> col:12 dysize 'int (int)' extern
| |-ParmVarDecl 0x561d5f1b63a0 <col:20, col:24> col:24 __year 'int'
| |-NoThrowAttr 0x561d5f1b64e0 <col:48>
| `-ConstAttr 0x561d5f1b6538 <col:89>
|-FunctionDecl 0x561d5f1b6798 <line:204:1, line:205:37> line:204:12 nanosleep 'int (const struct timespec *, struct timespec *)' extern
| |-ParmVarDecl 0x561d5f1b65e8 <col:23, col:46> col:46 __requested_time 'const struct timespec *'
| `-ParmVarDecl 0x561d5f1b6678 <line:205:9, col:26> col:26 __remaining 'struct timespec *'
|-FunctionDecl 0x561d5f1b69f8 <line:206:1, col:111> col:12 clock_getres 'int (clockid_t, struct timespec *)' extern
| |-ParmVarDecl 0x561d5f1b6888 <col:26, col:36> col:36 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x561d5f1b6918 <col:48, col:65> col:65 __res 'struct timespec *'
| `-NoThrowAttr 0x561d5f1b6aa8 <col:88>
|-FunctionDecl 0x561d5f1b6c40 <line:207:1, col:111> col:12 clock_gettime 'int (clockid_t, struct timespec *)' extern
| |-ParmVarDecl 0x561d5f1b6b10 <col:27, col:37> col:37 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x561d5f1b6ba0 <col:49, col:66> col:66 __tp 'struct timespec *'
| `-NoThrowAttr 0x561d5f1b6cf0 <col:88>
|-FunctionDecl 0x561d5f1b6f08 <line:208:1, line:209:45> line:208:12 clock_settime 'int (clockid_t, const struct timespec *)' extern
| |-ParmVarDecl 0x561d5f1b6d58 <col:27, col:37> col:37 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x561d5f1b6de8 <col:49, col:72> col:72 __tp 'const struct timespec *'
| `-NoThrowAttr 0x561d5f1b6fb8 <line:209:22>
|-FunctionDecl 0x561d5f1b7358 <line:210:1, line:212:30> line:210:12 clock_nanosleep 'int (clockid_t, int, const struct timespec *, struct timespec *)' extern
| |-ParmVarDecl 0x561d5f1b7020 <col:29, col:39> col:39 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x561d5f1b70e0 <col:51, col:55> col:55 __flags 'int'
| |-ParmVarDecl 0x561d5f1b7170 <line:211:8, col:31> col:31 __req 'const struct timespec *'
| `-ParmVarDecl 0x561d5f1b7200 <line:212:8, col:25> col:25 __rem 'struct timespec *'
|-FunctionDecl 0x561d5f1b7658 <line:213:1, col:108> col:12 clock_getcpuclockid 'int (pid_t, clockid_t *)' extern
| |-ParmVarDecl 0x561d5f1b7458 <col:33, col:39> col:39 __pid 'pid_t':'int'
| |-ParmVarDecl 0x561d5f1b7530 <col:46, col:57> col:57 __clock_id 'clockid_t *'
| `-NoThrowAttr 0x561d5f1b7708 <col:85>
|-FunctionDecl 0x561d5f1b7af8 <line:214:1, line:216:75> line:214:12 timer_create 'int (clockid_t, struct sigevent *restrict, timer_t *restrict)' extern
| |-ParmVarDecl 0x561d5f1b7770 <col:26, col:36> col:36 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x561d5f1b78a8 <line:215:5, col:33> col:33 __evp 'struct sigevent *restrict'
| |-ParmVarDecl 0x561d5f1b79b0 <line:216:5, col:25> col:25 __timerid 'timer_t *restrict'
| `-NoThrowAttr 0x561d5f1b7bb0 <col:52>
|-FunctionDecl 0x561d5f1b7d28 <line:217:1, col:84> col:12 timer_delete 'int (timer_t)' extern
| |-ParmVarDecl 0x561d5f1b7c18 <col:26, col:34> col:34 __timerid 'timer_t':'void *'
| `-NoThrowAttr 0x561d5f1b7dd0 <col:61>
|-FunctionDecl 0x561d5f1b8248 <line:218:1, line:220:85> line:218:12 timer_settime 'int (timer_t, int, const struct itimerspec *restrict, struct itimerspec *restrict)' extern
| |-ParmVarDecl 0x561d5f1b7e38 <col:27, col:35> col:35 __timerid 'timer_t':'void *'
| |-ParmVarDecl 0x561d5f1b7eb8 <col:46, col:50> col:50 __flags 'int'
| |-ParmVarDecl 0x561d5f1b7fe8 <line:219:6, col:42> col:42 __value 'const struct itimerspec *restrict'
| |-ParmVarDecl 0x561d5f1b80f0 <line:220:6, col:36> col:36 __ovalue 'struct itimerspec *restrict'
| `-NoThrowAttr 0x561d5f1b8308 <col:62>
|-FunctionDecl 0x561d5f1b8528 <line:221:1, line:222:45> line:221:12 timer_gettime 'int (timer_t, struct itimerspec *)' extern
| |-ParmVarDecl 0x561d5f1b8370 <col:27, col:35> col:35 __timerid 'timer_t':'void *'
| |-ParmVarDecl 0x561d5f1b8400 <col:46, col:65> col:65 __value 'struct itimerspec *'
| `-NoThrowAttr 0x561d5f1b85d8 <line:222:22>
|-FunctionDecl 0x561d5f1b86d8 <line:223:1, col:88> col:12 timer_getoverrun 'int (timer_t)' extern
| |-ParmVarDecl 0x561d5f1b8640 <col:30, col:38> col:38 __timerid 'timer_t':'void *'
| `-NoThrowAttr 0x561d5f1b8780 <col:65>
|-TypedefDecl 0x561d5f1b87f0 <line:225:1, col:27> col:27 referenced pthread_t 'unsigned long'
| `-BuiltinType 0x561d5f142fd0 'unsigned long'
|-RecordDecl 0x561d5f1b8848 <line:226:1, line:230:1> line:226:7 union pthread_attr_t definition
| |-FieldDecl 0x561d5f1b8990 <line:228:3, col:17> col:8 __size 'char [56]'
| `-FieldDecl 0x561d5f1b89f8 <line:229:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x561d5f1b8aa8 <line:231:1, col:30> col:30 referenced pthread_attr_t 'union pthread_attr_t':'union pthread_attr_t'
| `-ElaboratedType 0x561d5f1b8a50 'union pthread_attr_t' sugar
|   `-RecordType 0x561d5f1b88d0 'union pthread_attr_t'
|     `-Record 0x561d5f1b8848 'pthread_attr_t'
|-RecordDecl 0x561d5f1b8b00 <line:232:9, line:236:1> line:232:16 struct __pthread_internal_list definition
| |-FieldDecl 0x561d5f1b8c78 <line:234:3, col:35> col:35 __prev 'struct __pthread_internal_list *'
| `-FieldDecl 0x561d5f1b8cf0 <line:235:3, col:35> col:35 __next 'struct __pthread_internal_list *'
|-TypedefDecl 0x561d5f1b8da0 <line:232:1, line:236:3> col:3 referenced __pthread_list_t 'struct __pthread_internal_list':'struct __pthread_internal_list'
| `-ElaboratedType 0x561d5f1b8d40 'struct __pthread_internal_list' sugar
|   `-RecordType 0x561d5f1b8b80 'struct __pthread_internal_list'
|     `-Record 0x561d5f1b8b00 '__pthread_internal_list'
|-RecordDecl 0x561d5f1b8e10 <line:237:9, line:251:1> line:237:9 union definition
| |-RecordDecl 0x561d5f1b8eb8 parent 0x561d5f142e18 <line:239:3, line:248:3> line:239:10 struct __pthread_mutex_s definition
| | |-FieldDecl 0x561d5f1b8f90 <line:241:5, col:9> col:9 __lock 'int'
| | |-FieldDecl 0x561d5f1b8ff8 <line:242:5, col:18> col:18 __count 'unsigned int'
| | |-FieldDecl 0x561d5f1b9060 <line:243:5, col:9> col:9 __owner 'int'
| | |-FieldDecl 0x561d5f1bd110 <line:244:5, col:18> col:18 __nusers 'unsigned int'
| | |-FieldDecl 0x561d5f1bd178 <line:245:5, col:9> col:9 __kind 'int'
| | |-FieldDecl 0x561d5f1bd1e0 <line:246:5, col:9> col:9 __spins 'int'
| | `-FieldDecl 0x561d5f1bd268 <line:247:5, col:22> col:22 __list '__pthread_list_t':'struct __pthread_internal_list'
| |-FieldDecl 0x561d5f1bd320 <line:239:3, line:248:5> col:5 __data 'struct __pthread_mutex_s':'struct __pthread_mutex_s'
| |-FieldDecl 0x561d5f1bd410 <line:249:3, col:17> col:8 __size 'char [40]'
| `-FieldDecl 0x561d5f1bd478 <line:250:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x561d5f1bd600 <line:237:1, line:251:3> col:3 referenced pthread_mutex_t 'union pthread_mutex_t':'pthread_mutex_t'
| `-ElaboratedType 0x561d5f1bd5a0 'union pthread_mutex_t' sugar
|   `-RecordType 0x561d5f1b8e90 'pthread_mutex_t'
|     `-Record 0x561d5f1b8e10 ''
|-RecordDecl 0x561d5f1bd670 <line:252:9, line:256:1> line:252:9 union definition
| |-FieldDecl 0x561d5f1bd7b0 <line:254:3, col:16> col:8 __size 'char [4]'
| `-FieldDecl 0x561d5f1bd818 <line:255:3, col:7> col:7 __align 'int'
|-TypedefDecl 0x561d5f1bd8d0 <line:252:1, line:256:3> col:3 referenced pthread_mutexattr_t 'union pthread_mutexattr_t':'pthread_mutexattr_t'
| `-ElaboratedType 0x561d5f1bd870 'union pthread_mutexattr_t' sugar
|   `-RecordType 0x561d5f1bd6f0 'pthread_mutexattr_t'
|     `-Record 0x561d5f1bd670 ''
|-RecordDecl 0x561d5f1bd940 <line:257:9, line:272:1> line:257:9 union definition
| |-RecordDecl 0x561d5f1bd9e8 <line:259:3, line:269:3> line:259:3 struct definition
| | |-FieldDecl 0x561d5f1bdab0 <line:261:5, col:9> col:9 __lock 'int'
| | |-FieldDecl 0x561d5f1bdb18 <line:262:5, col:18> col:18 __futex 'unsigned int'
| | |-FieldDecl 0x561d5f1bdb80 <line:263:19, col:42> col:42 __total_seq 'unsigned long long'
| | |-FieldDecl 0x561d5f1bdbe8 <line:264:19, col:42> col:42 __wakeup_seq 'unsigned long long'
| | |-FieldDecl 0x561d5f1bdc50 <line:265:19, col:42> col:42 __woken_seq 'unsigned long long'
| | |-FieldDecl 0x561d5f1bdcb8 <line:266:5, col:11> col:11 __mutex 'void *'
| | |-FieldDecl 0x561d5f1bdd20 <line:267:5, col:18> col:18 __nwaiters 'unsigned int'
| | `-FieldDecl 0x561d5f1bdd88 <line:268:5, col:18> col:18 __broadcast_seq 'unsigned int'
| |-FieldDecl 0x561d5f1bde40 <line:259:3, line:269:5> col:5 __data 'struct (anonymous struct at ./split_9/safe007_rmo.oepc_false-unreach-call.i:259:3)':'struct pthread_cond_t::(anonymous at ./split_9/safe007_rmo.oepc_false-unreach-call.i:259:3)'
| |-FieldDecl 0x561d5f1bdf30 <line:270:3, col:17> col:8 __size 'char [48]'
| `-FieldDecl 0x561d5f1bdf98 <line:271:17, col:31> col:31 __align 'long long'
|-TypedefDecl 0x561d5f1bf130 <line:257:1, line:272:3> col:3 referenced pthread_cond_t 'union pthread_cond_t':'pthread_cond_t'
| `-ElaboratedType 0x561d5f1be070 'union pthread_cond_t' sugar
|   `-RecordType 0x561d5f1bd9c0 'pthread_cond_t'
|     `-Record 0x561d5f1bd940 ''
|-RecordDecl 0x561d5f1bf1a0 <line:273:9, line:277:1> line:273:9 union definition
| |-FieldDecl 0x561d5f1bf2a0 <line:275:3, col:16> col:8 __size 'char [4]'
| `-FieldDecl 0x561d5f1bf308 <line:276:3, col:7> col:7 __align 'int'
|-TypedefDecl 0x561d5f1bf3c0 <line:273:1, line:277:3> col:3 referenced pthread_condattr_t 'union pthread_condattr_t':'pthread_condattr_t'
| `-ElaboratedType 0x561d5f1bf360 'union pthread_condattr_t' sugar
|   `-RecordType 0x561d5f1bf220 'pthread_condattr_t'
|     `-Record 0x561d5f1bf1a0 ''
|-TypedefDecl 0x561d5f1bf448 <line:278:1, col:22> col:22 referenced pthread_key_t 'unsigned int'
| `-BuiltinType 0x561d5f142fb0 'unsigned int'
|-TypedefDecl 0x561d5f1bf4b8 <line:279:1, col:13> col:13 referenced pthread_once_t 'int'
| `-BuiltinType 0x561d5f142f10 'int'
|-RecordDecl 0x561d5f1bf510 <line:280:9, line:298:1> line:280:9 union definition
| |-RecordDecl 0x561d5f1bf5b8 <line:282:3, line:295:3> line:282:3 struct definition
| | |-FieldDecl 0x561d5f1bf680 <line:284:5, col:9> col:9 __lock 'int'
| | |-FieldDecl 0x561d5f1bf6e8 <line:285:5, col:18> col:18 __nr_readers 'unsigned int'
| | |-FieldDecl 0x561d5f1bf750 <line:286:5, col:18> col:18 __readers_wakeup 'unsigned int'
| | |-FieldDecl 0x561d5f1bf7b8 <line:287:5, col:18> col:18 __writer_wakeup 'unsigned int'
| | |-FieldDecl 0x561d5f1bf820 <line:288:5, col:18> col:18 __nr_readers_queued 'unsigned int'
| | |-FieldDecl 0x561d5f1bf888 <line:289:5, col:18> col:18 __nr_writers_queued 'unsigned int'
| | |-FieldDecl 0x561d5f1bf8f0 <line:290:5, col:9> col:9 __writer 'int'
| | |-FieldDecl 0x561d5f1bf958 <line:291:5, col:9> col:9 __shared 'int'
| | |-FieldDecl 0x561d5f1bf9c0 <line:292:5, col:23> col:23 __pad1 'unsigned long'
| | |-FieldDecl 0x561d5f1bfa28 <line:293:5, col:23> col:23 __pad2 'unsigned long'
| | `-FieldDecl 0x561d5f1bfa90 <line:294:5, col:18> col:18 __flags 'unsigned int'
| |-FieldDecl 0x561d5f1bfb40 <line:282:3, line:295:5> col:5 __data 'struct (anonymous struct at ./split_9/safe007_rmo.oepc_false-unreach-call.i:282:3)':'struct pthread_rwlock_t::(anonymous at ./split_9/safe007_rmo.oepc_false-unreach-call.i:282:3)'
| |-FieldDecl 0x561d5f1bfbe8 <line:296:3, col:17> col:8 __size 'char [56]'
| `-FieldDecl 0x561d5f1bfc50 <line:297:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x561d5f1bfda0 <line:280:1, line:298:3> col:3 referenced pthread_rwlock_t 'union pthread_rwlock_t':'pthread_rwlock_t'
| `-ElaboratedType 0x561d5f1bfd40 'union pthread_rwlock_t' sugar
|   `-RecordType 0x561d5f1bf590 'pthread_rwlock_t'
|     `-Record 0x561d5f1bf510 ''
|-RecordDecl 0x561d5f1bfe10 <line:299:9, line:303:1> line:299:9 union definition
| |-FieldDecl 0x561d5f1bff50 <line:301:3, col:16> col:8 __size 'char [8]'
| `-FieldDecl 0x561d5f1bffb8 <line:302:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x561d5f1c0070 <line:299:1, line:303:3> col:3 referenced pthread_rwlockattr_t 'union pthread_rwlockattr_t':'pthread_rwlockattr_t'
| `-ElaboratedType 0x561d5f1c0010 'union pthread_rwlockattr_t' sugar
|   `-RecordType 0x561d5f1bfe90 'pthread_rwlockattr_t'
|     `-Record 0x561d5f1bfe10 ''
|-TypedefDecl 0x561d5f1c1140 <line:304:1, col:22> col:22 referenced pthread_spinlock_t 'volatile int'
| `-QualType 0x561d5f142f14 'volatile int' volatile
|   `-BuiltinType 0x561d5f142f10 'int'
|-RecordDecl 0x561d5f1c1198 <line:305:9, line:309:1> line:305:9 union definition
| |-FieldDecl 0x561d5f1c12e0 <line:307:3, col:17> col:8 __size 'char [32]'
| `-FieldDecl 0x561d5f1c1348 <line:308:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x561d5f1c1400 <line:305:1, line:309:3> col:3 referenced pthread_barrier_t 'union pthread_barrier_t':'pthread_barrier_t'
| `-ElaboratedType 0x561d5f1c13a0 'union pthread_barrier_t' sugar
|   `-RecordType 0x561d5f1c1220 'pthread_barrier_t'
|     `-Record 0x561d5f1c1198 ''
|-RecordDecl 0x561d5f1c1470 <line:310:9, line:314:1> line:310:9 union definition
| |-FieldDecl 0x561d5f1c1570 <line:312:3, col:16> col:8 __size 'char [4]'
| `-FieldDecl 0x561d5f1c15d8 <line:313:3, col:7> col:7 __align 'int'
|-TypedefDecl 0x561d5f1c1690 <line:310:1, line:314:3> col:3 referenced pthread_barrierattr_t 'union pthread_barrierattr_t':'pthread_barrierattr_t'
| `-ElaboratedType 0x561d5f1c1630 'union pthread_barrierattr_t' sugar
|   `-RecordType 0x561d5f1c14f0 'pthread_barrierattr_t'
|     `-Record 0x561d5f1c1470 ''
|-TypedefDecl 0x561d5f1c17a8 <line:315:1, col:29> col:18 referenced __jmp_buf 'long [8]'
| `-ConstantArrayType 0x561d5f1c1740 'long [8]' 8 
|   `-BuiltinType 0x561d5f142f30 'long'
|-EnumDecl 0x561d5f1c1800 <line:316:1, line:320:1> line:316:1
| |-EnumConstantDecl 0x561d5f1c18c8 <line:318:3> col:3 PTHREAD_CREATE_JOINABLE 'int'
| `-EnumConstantDecl 0x561d5f1c1918 <line:319:3> col:3 PTHREAD_CREATE_DETACHED 'int'
|-EnumDecl 0x561d5f1c1968 <line:321:1, line:332:1> line:321:1
| |-EnumConstantDecl 0x561d5f1c1a38 <line:323:3> col:3 referenced PTHREAD_MUTEX_TIMED_NP 'int'
| |-EnumConstantDecl 0x561d5f1c1a88 <line:324:3> col:3 referenced PTHREAD_MUTEX_RECURSIVE_NP 'int'
| |-EnumConstantDecl 0x561d5f1c1ad8 <line:325:3> col:3 referenced PTHREAD_MUTEX_ERRORCHECK_NP 'int'
| |-EnumConstantDecl 0x561d5f1c1b28 <line:326:3> col:3 PTHREAD_MUTEX_ADAPTIVE_NP 'int'
| |-EnumConstantDecl 0x561d5f1c1bb0 <line:328:3, col:26> col:3 referenced PTHREAD_MUTEX_NORMAL 'int'
| | `-ConstantExpr 0x561d5f1c1b98 <col:26> 'int'
| |   `-DeclRefExpr 0x561d5f1c1b78 <col:26> 'int' EnumConstant 0x561d5f1c1a38 'PTHREAD_MUTEX_TIMED_NP' 'int'
| |-EnumConstantDecl 0x561d5f1c1c38 <line:329:3, col:29> col:3 PTHREAD_MUTEX_RECURSIVE 'int'
| | `-ConstantExpr 0x561d5f1c1c20 <col:29> 'int'
| |   `-DeclRefExpr 0x561d5f1c1c00 <col:29> 'int' EnumConstant 0x561d5f1c1a88 'PTHREAD_MUTEX_RECURSIVE_NP' 'int'
| |-EnumConstantDecl 0x561d5f1c1cc0 <line:330:3, col:30> col:3 PTHREAD_MUTEX_ERRORCHECK 'int'
| | `-ConstantExpr 0x561d5f1c1ca8 <col:30> 'int'
| |   `-DeclRefExpr 0x561d5f1c1c88 <col:30> 'int' EnumConstant 0x561d5f1c1ad8 'PTHREAD_MUTEX_ERRORCHECK_NP' 'int'
| `-EnumConstantDecl 0x561d5f1c1d48 <line:331:3, col:27> col:3 PTHREAD_MUTEX_DEFAULT 'int'
|   `-ConstantExpr 0x561d5f1c1d30 <col:27> 'int'
|     `-DeclRefExpr 0x561d5f1c1d10 <col:27> 'int' EnumConstant 0x561d5f1c1bb0 'PTHREAD_MUTEX_NORMAL' 'int'
|-EnumDecl 0x561d5f1c1d98 <line:333:1, line:339:1> line:333:1
| |-EnumConstantDecl 0x561d5f1c1e68 <line:335:3> col:3 referenced PTHREAD_MUTEX_STALLED 'int'
| |-EnumConstantDecl 0x561d5f1c1ef0 <line:336:3, col:30> col:3 PTHREAD_MUTEX_STALLED_NP 'int'
| | `-ConstantExpr 0x561d5f1c1ed8 <col:30> 'int'
| |   `-DeclRefExpr 0x561d5f1c1eb8 <col:30> 'int' EnumConstant 0x561d5f1c1e68 'PTHREAD_MUTEX_STALLED' 'int'
| |-EnumConstantDecl 0x561d5f1c1f40 <line:337:3> col:3 referenced PTHREAD_MUTEX_ROBUST 'int'
| `-EnumConstantDecl 0x561d5f1c1fc8 <line:338:3, col:29> col:3 PTHREAD_MUTEX_ROBUST_NP 'int'
|   `-ConstantExpr 0x561d5f1c1fb0 <col:29> 'int'
|     `-DeclRefExpr 0x561d5f1c1f90 <col:29> 'int' EnumConstant 0x561d5f1c1f40 'PTHREAD_MUTEX_ROBUST' 'int'
|-EnumDecl 0x561d5f1c2018 <line:340:1, line:345:1> line:340:1
| |-EnumConstantDecl 0x561d5f1c20e8 <line:342:3> col:3 PTHREAD_PRIO_NONE 'int'
| |-EnumConstantDecl 0x561d5f1c2150 <line:343:3> col:3 PTHREAD_PRIO_INHERIT 'int'
| `-EnumConstantDecl 0x561d5f1c21a0 <line:344:3> col:3 PTHREAD_PRIO_PROTECT 'int'
|-EnumDecl 0x561d5f1c21f0 <line:346:1, line:352:1> line:346:1
| |-EnumConstantDecl 0x561d5f1c22b8 <line:348:3> col:3 referenced PTHREAD_RWLOCK_PREFER_READER_NP 'int'
| |-EnumConstantDecl 0x561d5f1c2308 <line:349:3> col:3 PTHREAD_RWLOCK_PREFER_WRITER_NP 'int'
| |-EnumConstantDecl 0x561d5f1c2358 <line:350:3> col:3 PTHREAD_RWLOCK_PREFER_WRITER_NONRECURSIVE_NP 'int'
| `-EnumConstantDecl 0x561d5f1c23e0 <line:351:3, col:31> col:3 PTHREAD_RWLOCK_DEFAULT_NP 'int'
|   `-ConstantExpr 0x561d5f1c23c8 <col:31> 'int'
|     `-DeclRefExpr 0x561d5f1c23a8 <col:31> 'int' EnumConstant 0x561d5f1c22b8 'PTHREAD_RWLOCK_PREFER_READER_NP' 'int'
|-EnumDecl 0x561d5f1c2430 <line:353:1, line:357:1> line:353:1
| |-EnumConstantDecl 0x561d5f1c24f8 <line:355:3> col:3 PTHREAD_INHERIT_SCHED 'int'
| `-EnumConstantDecl 0x561d5f1c2548 <line:356:3> col:3 PTHREAD_EXPLICIT_SCHED 'int'
|-EnumDecl 0x561d5f1c2598 <line:358:1, line:362:1> line:358:1
| |-EnumConstantDecl 0x561d5f1c2668 <line:360:3> col:3 PTHREAD_SCOPE_SYSTEM 'int'
| `-EnumConstantDecl 0x561d5f1c26b8 <line:361:3> col:3 PTHREAD_SCOPE_PROCESS 'int'
|-EnumDecl 0x561d5f1c2708 <line:363:1, line:367:1> line:363:1
| |-EnumConstantDecl 0x561d5f1c27d8 <line:365:3> col:3 PTHREAD_PROCESS_PRIVATE 'int'
| `-EnumConstantDecl 0x561d5f1c2828 <line:366:3> col:3 PTHREAD_PROCESS_SHARED 'int'
|-RecordDecl 0x561d5f1c2878 <line:368:1, line:374:1> line:368:8 struct _pthread_cleanup_buffer definition
| |-FieldDecl 0x561d5f1c2ab8 <line:370:3, col:28> col:10 __routine 'void (*)(void *)'
| |-FieldDecl 0x561d5f1c2b20 <line:371:3, col:9> col:9 __arg 'void *'
| |-FieldDecl 0x561d5f1c2b88 <line:372:3, col:7> col:7 __canceltype 'int'
| `-FieldDecl 0x561d5f1c2ca8 <line:373:3, col:35> col:35 __prev 'struct _pthread_cleanup_buffer *'
|-EnumDecl 0x561d5f1c2cf8 <line:375:1, line:379:1> line:375:1
| |-EnumConstantDecl 0x561d5f1c2dc8 <line:377:3> col:3 PTHREAD_CANCEL_ENABLE 'int'
| `-EnumConstantDecl 0x561d5f1c2e18 <line:378:3> col:3 PTHREAD_CANCEL_DISABLE 'int'
|-EnumDecl 0x561d5f1c2e68 <line:380:1, line:384:1> line:380:1
| |-EnumConstantDecl 0x561d5f1c2f38 <line:382:3> col:3 PTHREAD_CANCEL_DEFERRED 'int'
| `-EnumConstantDecl 0x561d5f1c2f88 <line:383:3> col:3 PTHREAD_CANCEL_ASYNCHRONOUS 'int'
|-FunctionDecl 0x561d5f1c35b8 <line:386:1, line:389:96> line:386:12 used pthread_create 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' extern
| |-ParmVarDecl 0x561d5f1c3080 <col:28, col:50> col:50 __newthread 'pthread_t *restrict'
| |-ParmVarDecl 0x561d5f1c31a0 <line:387:7, col:40> col:40 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x561d5f1c33a0 <line:388:7, col:39> col:15 __start_routine 'void *(*)(void *)'
| |-ParmVarDecl 0x561d5f1c3420 <line:389:7, col:24> col:24 __arg 'void *restrict'
| |-NoThrowAttr 0x561d5f1c3678 <col:47>
| |-NonNullAttr 0x561d5f1c36d0 <col:77, col:94> 1 3
| `-CallbackAttr 0x561d5f1c3708 <line:386:12> Implicit 2 3
|-FunctionDecl 0x561d5f1c3830 <line:390:1, col:72> col:13 pthread_exit 'void (void *) __attribute__((noreturn))' extern
| `-ParmVarDecl 0x561d5f1c3760 <col:27, col:33> col:33 __retval 'void *'
|-FunctionDecl 0x561d5f1c3a88 <line:391:1, col:64> col:12 pthread_join 'int (pthread_t, void **)' extern
| |-ParmVarDecl 0x561d5f1c38e8 <col:26, col:36> col:36 __th 'pthread_t':'unsigned long'
| `-ParmVarDecl 0x561d5f1c3968 <col:42, col:49> col:49 __thread_return 'void **'
|-FunctionDecl 0x561d5f1c3c58 <line:392:1, col:83> col:12 pthread_detach 'int (pthread_t)' extern
| |-ParmVarDecl 0x561d5f1c3b48 <col:28, col:38> col:38 __th 'pthread_t':'unsigned long'
| `-NoThrowAttr 0x561d5f1c3d00 <col:60>
|-FunctionDecl 0x561d5f1c3e50 <line:393:1, col:105> col:18 pthread_self 'pthread_t (void)' extern
| |-NoThrowAttr 0x561d5f1c3ef0 <col:54>
| `-ConstAttr 0x561d5f1c3f48 <col:95>
|-FunctionDecl 0x561d5f1c5990 <line:394:1, line:395:70> line:394:12 pthread_equal 'int (pthread_t, pthread_t)' extern
| |-ParmVarDecl 0x561d5f1c3f80 <col:27, col:37> col:37 __thread1 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x561d5f1c3ff8 <col:48, col:58> col:58 __thread2 'pthread_t':'unsigned long'
| |-NoThrowAttr 0x561d5f1c5a40 <line:395:19>
| `-ConstAttr 0x561d5f1c5a98 <col:60>
|-FunctionDecl 0x561d5f1c5c68 <line:396:1, col:128> col:12 pthread_attr_init 'int (pthread_attr_t *)' extern
| |-ParmVarDecl 0x561d5f1c5b30 <col:31, col:47> col:47 __attr 'pthread_attr_t *'
| |-NoThrowAttr 0x561d5f1c5d10 <col:71>
| `-NonNullAttr 0x561d5f1c5d68 <col:112, col:126> 1
|-FunctionDecl 0x561d5f1c5e70 <line:397:1, line:398:79> line:397:12 pthread_attr_destroy 'int (pthread_attr_t *)' extern
| |-ParmVarDecl 0x561d5f1c5db8 <col:34, col:50> col:50 __attr 'pthread_attr_t *'
| |-NoThrowAttr 0x561d5f1c5f18 <line:398:22>
| `-NonNullAttr 0x561d5f1c5f70 <col:63, col:77> 1
|-FunctionDecl 0x561d5f1c6198 <line:399:1, line:401:82> line:399:12 pthread_attr_getdetachstate 'int (const pthread_attr_t *, int *)' extern
| |-ParmVarDecl 0x561d5f1c5fb8 <col:41, col:63> col:63 __attr 'const pthread_attr_t *'
| |-ParmVarDecl 0x561d5f1c6038 <line:400:6, col:11> col:11 __detachstate 'int *'
| |-NoThrowAttr 0x561d5f1c6248 <line:401:22>
| `-NonNullAttr 0x561d5f1c62a0 <col:63, col:80> 1 2
|-FunctionDecl 0x561d5f1c64a8 <line:402:1, line:404:79> line:402:12 pthread_attr_setdetachstate 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x561d5f1c62e8 <col:41, col:57> col:57 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x561d5f1c6368 <line:403:6, col:10> col:10 __detachstate 'int'
| |-NoThrowAttr 0x561d5f1c6558 <line:404:22>
| `-NonNullAttr 0x561d5f1c65b0 <col:63, col:77> 1
|-FunctionDecl 0x561d5f1c6808 <line:405:1, line:407:82> line:405:12 pthread_attr_getguardsize 'int (const pthread_attr_t *, size_t *)' extern
| |-ParmVarDecl 0x561d5f1c65f8 <col:39, col:61> col:61 __attr 'const pthread_attr_t *'
| |-ParmVarDecl 0x561d5f1c66a0 <line:406:11, col:19> col:19 __guardsize 'size_t *'
| |-NoThrowAttr 0x561d5f1c68b8 <line:407:22>
| `-NonNullAttr 0x561d5f1c6910 <col:63, col:80> 1 2
|-FunctionDecl 0x561d5f1c7b68 <line:408:1, line:410:79> line:408:12 pthread_attr_setguardsize 'int (pthread_attr_t *, size_t)' extern
| |-ParmVarDecl 0x561d5f1c79b0 <col:39, col:55> col:55 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x561d5f1c7a28 <line:409:11, col:18> col:18 __guardsize 'size_t':'unsigned long'
| |-NoThrowAttr 0x561d5f1c7c18 <line:410:22>
| `-NonNullAttr 0x561d5f1c7c70 <col:63, col:77> 1
|-FunctionDecl 0x561d5f1c7ea8 <line:411:1, line:413:82> line:411:12 pthread_attr_getschedparam 'int (const pthread_attr_t *restrict, struct sched_param *restrict)' extern
| |-ParmVarDecl 0x561d5f1c7cb8 <col:40, col:73> col:73 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x561d5f1c7d48 <line:412:12, col:43> col:43 __param 'struct sched_param *restrict'
| |-NoThrowAttr 0x561d5f1c7f58 <line:413:22>
| `-NonNullAttr 0x561d5f1c7fb0 <col:63, col:80> 1 2
|-FunctionDecl 0x561d5f1c81e8 <line:414:1, line:416:97> line:414:12 pthread_attr_setschedparam 'int (pthread_attr_t *restrict, const struct sched_param *restrict)' extern
| |-ParmVarDecl 0x561d5f1c7ff8 <col:40, col:67> col:67 __attr 'pthread_attr_t *restrict'
| |-ParmVarDecl 0x561d5f1c8088 <line:415:12, line:416:12> col:12 __param 'const struct sched_param *restrict'
| |-NoThrowAttr 0x561d5f1c8298 <col:37>
| `-NonNullAttr 0x561d5f1c82f0 <col:78, col:95> 1 2
|-FunctionDecl 0x561d5f1c84d8 <line:417:1, line:419:82> line:417:12 pthread_attr_getschedpolicy 'int (const pthread_attr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x561d5f1c8338 <col:41, line:418:6> col:6 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x561d5f1c83b8 <col:14, col:30> col:30 __policy 'int *restrict'
| |-NoThrowAttr 0x561d5f1c8588 <line:419:22>
| `-NonNullAttr 0x561d5f1c85e0 <col:63, col:80> 1 2
|-FunctionDecl 0x561d5f1c8768 <line:420:1, line:421:79> line:420:12 pthread_attr_setschedpolicy 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x561d5f1c8628 <col:41, col:57> col:57 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x561d5f1c86a8 <col:65, col:69> col:69 __policy 'int'
| |-NoThrowAttr 0x561d5f1c8818 <line:421:22>
| `-NonNullAttr 0x561d5f1c8870 <col:63, col:77> 1
|-FunctionDecl 0x561d5f1c8a38 <line:422:1, line:424:82> line:422:12 pthread_attr_getinheritsched 'int (const pthread_attr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x561d5f1c88b8 <col:42, line:423:7> col:7 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x561d5f1c8938 <col:15, col:31> col:31 __inherit 'int *restrict'
| |-NoThrowAttr 0x561d5f1c8ae8 <line:424:22>
| `-NonNullAttr 0x561d5f1c8b40 <col:63, col:80> 1 2
|-FunctionDecl 0x561d5f1c8cc8 <line:425:1, line:427:79> line:425:12 pthread_attr_setinheritsched 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x561d5f1c8b88 <col:42, col:58> col:58 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x561d5f1c8c08 <line:426:7, col:11> col:11 __inherit 'int'
| |-NoThrowAttr 0x561d5f1c8d78 <line:427:22>
| `-NonNullAttr 0x561d5f1c8dd0 <col:63, col:77> 1
|-FunctionDecl 0x561d5f1c8f78 <line:428:1, line:430:82> line:428:12 pthread_attr_getscope 'int (const pthread_attr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x561d5f1c8e18 <col:35, col:68> col:68 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x561d5f1c8e98 <line:429:7, col:23> col:23 __scope 'int *restrict'
| |-NoThrowAttr 0x561d5f1c9028 <line:430:22>
| `-NonNullAttr 0x561d5f1c9080 <col:63, col:80> 1 2
|-FunctionDecl 0x561d5f1c9208 <line:431:1, line:432:79> line:431:12 pthread_attr_setscope 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x561d5f1c90c8 <col:35, col:51> col:51 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x561d5f1c9148 <col:59, col:63> col:63 __scope 'int'
| |-NoThrowAttr 0x561d5f1c92b8 <line:432:22>
| `-NonNullAttr 0x561d5f1c9310 <col:63, col:77> 1
|-FunctionDecl 0x561d5f1c9538 <line:433:1, line:435:115> line:433:12 pthread_attr_getstackaddr 'int (const pthread_attr_t *restrict, void **restrict)' extern
| |-ParmVarDecl 0x561d5f1c9358 <col:39, line:434:11> col:11 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x561d5f1c93d8 <col:19, col:37> col:37 __stackaddr 'void **restrict'
| |-NoThrowAttr 0x561d5f1c95e8 <line:435:22>
| |-NonNullAttr 0x561d5f1c9640 <col:63, col:80> 1 2
| `-DeprecatedAttr 0x561d5f1c9678 <col:100> "" ""
|-FunctionDecl 0x561d5f1c9888 <line:436:1, line:438:112> line:436:12 pthread_attr_setstackaddr 'int (pthread_attr_t *, void *)' extern
| |-ParmVarDecl 0x561d5f1c96c8 <col:39, col:55> col:55 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x561d5f1c9748 <line:437:11, col:17> col:17 __stackaddr 'void *'
| |-NoThrowAttr 0x561d5f1c9938 <line:438:22>
| |-NonNullAttr 0x561d5f1c9990 <col:63, col:77> 1
| `-DeprecatedAttr 0x561d5f1c99d8 <col:97> "" ""
|-FunctionDecl 0x561d5f1c9bc8 <line:439:1, line:441:82> line:439:12 pthread_attr_getstacksize 'int (const pthread_attr_t *restrict, size_t *restrict)' extern
| |-ParmVarDecl 0x561d5f1c9a28 <col:39, line:440:11> col:11 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x561d5f1c9aa0 <col:19, col:38> col:38 __stacksize 'size_t *restrict'
| |-NoThrowAttr 0x561d5f1c9c78 <line:441:22>
| `-NonNullAttr 0x561d5f1c9cd0 <col:63, col:80> 1 2
|-FunctionDecl 0x561d5f1c9e50 <line:442:1, line:444:79> line:442:12 pthread_attr_setstacksize 'int (pthread_attr_t *, size_t)' extern
| |-ParmVarDecl 0x561d5f1c9d18 <col:39, col:55> col:55 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x561d5f1c9d90 <line:443:11, col:18> col:18 __stacksize 'size_t':'unsigned long'
| |-NoThrowAttr 0x561d5f1c9f00 <line:444:22>
| `-NonNullAttr 0x561d5f1c9f58 <col:63, col:77> 1
|-FunctionDecl 0x561d5f1ca248 <line:445:1, line:448:85> line:445:12 pthread_attr_getstack 'int (const pthread_attr_t *restrict, void **restrict, size_t *restrict)' extern
| |-ParmVarDecl 0x561d5f1c9fa8 <col:35, col:68> col:68 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x561d5f1ca028 <line:446:7, col:25> col:25 __stackaddr 'void **restrict'
| |-ParmVarDecl 0x561d5f1ca0a0 <line:447:7, col:26> col:26 __stacksize 'size_t *restrict'
| |-NoThrowAttr 0x561d5f1ca300 <line:448:22>
| `-NonNullAttr 0x561d5f1ca358 <col:63, col:83> 1 2 3
|-FunctionDecl 0x561d5f1ca608 <line:449:1, line:450:100> line:449:12 pthread_attr_setstack 'int (pthread_attr_t *, void *, size_t)' extern
| |-ParmVarDecl 0x561d5f1ca3b0 <col:35, col:51> col:51 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x561d5f1ca430 <col:59, col:65> col:65 __stackaddr 'void *'
| |-ParmVarDecl 0x561d5f1ca4a8 <line:450:7, col:14> col:14 __stacksize 'size_t':'unsigned long'
| |-NoThrowAttr 0x561d5f1ca6c0 <col:43>
| `-NonNullAttr 0x561d5f1ca718 <col:84, col:98> 1
|-FunctionDecl 0x561d5f1caa20 <line:451:1, line:453:79> line:451:12 pthread_setschedparam 'int (pthread_t, int, const struct sched_param *)' extern
| |-ParmVarDecl 0x561d5f1ca768 <col:35, col:45> col:45 __target_thread 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x561d5f1ca7e8 <col:62, col:66> col:66 __policy 'int'
| |-ParmVarDecl 0x561d5f1ca878 <line:452:7, col:33> col:33 __param 'const struct sched_param *'
| |-NoThrowAttr 0x561d5f1caad8 <line:453:22>
| `-NonNullAttr 0x561d5f1cab30 <col:63, col:77> 3
|-FunctionDecl 0x561d5f1cae08 <line:454:1, line:457:82> line:454:12 pthread_getschedparam 'int (pthread_t, int *restrict, struct sched_param *restrict)' extern
| |-ParmVarDecl 0x561d5f1cab78 <col:35, col:45> col:45 __target_thread 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x561d5f1cabf8 <line:455:7, col:23> col:23 __policy 'int *restrict'
| |-ParmVarDecl 0x561d5f1cac88 <line:456:7, col:38> col:38 __param 'struct sched_param *restrict'
| |-NoThrowAttr 0x561d5f1caec0 <line:457:22>
| `-NonNullAttr 0x561d5f1caf18 <col:63, col:80> 2 3
|-FunctionDecl 0x561d5f1cb108 <line:458:1, line:459:45> line:458:12 pthread_setschedprio 'int (pthread_t, int)' extern
| |-ParmVarDecl 0x561d5f1caf68 <col:34, col:44> col:44 __target_thread 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x561d5f1cafe8 <col:61, col:65> col:65 __prio 'int'
| `-NoThrowAttr 0x561d5f1cb1b8 <line:459:22>
|-FunctionDecl 0x561d5f1cb588 <line:460:1, line:461:71> line:460:12 pthread_once 'int (pthread_once_t *, void (*)(void))' extern
| |-ParmVarDecl 0x561d5f1cb280 <col:26, col:42> col:42 __once_control 'pthread_once_t *'
| |-ParmVarDecl 0x561d5f1cb420 <line:461:5, col:33> col:12 __init_routine 'void (*)(void)'
| `-NonNullAttr 0x561d5f1cb638 <col:52, col:69> 1 2
|-FunctionDecl 0x561d5f1cb7e0 <line:462:1, col:64> col:12 pthread_setcancelstate 'int (int, int *)' extern
| |-ParmVarDecl 0x561d5f1cb6c0 <col:36, col:40> col:40 __state 'int'
| `-ParmVarDecl 0x561d5f1cb740 <col:49, col:54> col:54 __oldstate 'int *'
|-FunctionDecl 0x561d5f1cb9f0 <line:463:1, col:61> col:12 pthread_setcanceltype 'int (int, int *)' extern
| |-ParmVarDecl 0x561d5f1cb8a8 <col:35, col:39> col:39 __type 'int'
| `-ParmVarDecl 0x561d5f1cb928 <col:47, col:52> col:52 __oldtype 'int *'
|-FunctionDecl 0x561d5f1cbb48 <line:464:1, col:42> col:12 pthread_cancel 'int (pthread_t)' extern
| `-ParmVarDecl 0x561d5f1cbab0 <col:28, col:38> col:38 __th 'pthread_t':'unsigned long'
|-FunctionDecl 0x561d5f1cbc88 <line:465:1, col:37> col:13 pthread_testcancel 'void (void)' extern
|-RecordDecl 0x561d5f1cbd28 <line:466:9, line:474:1> line:466:9 struct definition
| |-RecordDecl 0x561d5f1cbdd8 <line:468:3, line:472:3> line:468:3 struct definition
| | |-FieldDecl 0x561d5f1cbec8 <line:470:5, col:15> col:15 __cancel_jmp_buf '__jmp_buf':'long [8]'
| | `-FieldDecl 0x561d5f1cbf30 <line:471:5, col:9> col:9 __mask_was_saved 'int'
| |-FieldDecl 0x561d5f1cc100 <line:468:3, line:472:23> col:5 __cancel_jmp_buf 'struct (anonymous struct at ./split_9/safe007_rmo.oepc_false-unreach-call.i:468:3) [1]'
| `-FieldDecl 0x561d5f1cc1f8 <line:473:3, col:16> col:9 __pad 'void *[4]'
|-TypedefDecl 0x561d5f1cc2b0 <line:466:1, line:474:3> col:3 referenced __pthread_unwind_buf_t 'struct __pthread_unwind_buf_t':'__pthread_unwind_buf_t'
| |-ElaboratedType 0x561d5f1cc250 'struct __pthread_unwind_buf_t' sugar
| | `-RecordType 0x561d5f1cbdb0 '__pthread_unwind_buf_t'
| |   `-Record 0x561d5f1cbd28 ''
| `-AlignedAttr 0x561d5f1cc308 <col:42> aligned
|   `-<<<NULL>>>
|-RecordDecl 0x561d5f1cc380 <line:475:1, line:481:1> line:475:8 struct __pthread_cleanup_frame definition
| |-FieldDecl 0x561d5f1cc4e0 <line:477:3, col:35> col:10 __cancel_routine 'void (*)(void *)'
| |-FieldDecl 0x561d5f1cc548 <line:478:3, col:9> col:9 __cancel_arg 'void *'
| |-FieldDecl 0x561d5f1cc5b0 <line:479:3, col:7> col:7 __do_it 'int'
| `-FieldDecl 0x561d5f1cc618 <line:480:3, col:7> col:7 __cancel_type 'int'
|-FunctionDecl 0x561d5f1cc820 <line:482:1, col:69> col:13 __pthread_register_cancel 'void (__pthread_unwind_buf_t *)' extern
| `-ParmVarDecl 0x561d5f1cc710 <col:40, col:64> col:64 __buf '__pthread_unwind_buf_t *'
|-FunctionDecl 0x561d5f1cca00 <line:484:1, col:71> col:13 __pthread_unregister_cancel 'void (__pthread_unwind_buf_t *)' extern
| `-ParmVarDecl 0x561d5f1cc8d8 <col:42, col:66> col:66 __buf '__pthread_unwind_buf_t *'
|-FunctionDecl 0x561d5f1ccbc0 <line:486:1, line:488:31> line:486:13 __pthread_unwind_next 'void (__pthread_unwind_buf_t *) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x561d5f1ccab8 <col:36, col:60> col:60 __buf '__pthread_unwind_buf_t *'
| `-WeakAttr 0x561d5f1ccc68 <line:488:22>
|-RecordDecl 0x561d5f1cccc0 <line:490:1, col:8> col:8 struct __jmp_buf_tag
|-FunctionDecl 0x561d5f1ccfd8 <line:491:1, col:98> col:12 __sigsetjmp 'int (struct __jmp_buf_tag *, int)' extern
| |-ParmVarDecl 0x561d5f1cce38 <col:25, col:47> col:47 __env 'struct __jmp_buf_tag *'
| |-ParmVarDecl 0x561d5f1cceb8 <col:54, col:58> col:58 __savemask 'int'
| |-NoThrowAttr 0x561d5f1cd088 <col:86>
| `-ReturnsTwiceAttr 0x561d5f1cd0e0 <col:12> Implicit
|-FunctionDecl 0x561d5f1cd408 <line:492:1, line:494:79> line:492:12 pthread_mutex_init 'int (pthread_mutex_t *, const pthread_mutexattr_t *)' extern
| |-ParmVarDecl 0x561d5f1cd1b0 <col:32, col:49> col:49 __mutex 'pthread_mutex_t *'
| |-ParmVarDecl 0x561d5f1cd2c0 <line:493:11, col:38> col:38 __mutexattr 'const pthread_mutexattr_t *'
| |-NoThrowAttr 0x561d5f1cd4b8 <line:494:22>
| `-NonNullAttr 0x561d5f1cd510 <col:63, col:77> 1
|-FunctionDecl 0x561d5f1cd688 <line:495:1, line:496:79> line:495:12 pthread_mutex_destroy 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x561d5f1cd558 <col:35, col:52> col:52 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x561d5f1cd730 <line:496:22>
| `-NonNullAttr 0x561d5f1cd788 <col:63, col:77> 1
|-FunctionDecl 0x561d5f1cd890 <line:497:1, line:498:68> line:497:12 pthread_mutex_trylock 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x561d5f1cd7d8 <col:35, col:52> col:52 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x561d5f1cd938 <line:498:22>
| `-NonNullAttr 0x561d5f1cd990 <col:52, col:66> 1
|-FunctionDecl 0x561d5f1cead8 <line:499:1, line:500:68> line:499:12 pthread_mutex_lock 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x561d5f1cea20 <col:32, col:49> col:49 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x561d5f1ceb80 <line:500:22>
| `-NonNullAttr 0x561d5f1cebd8 <col:52, col:66> 1
|-FunctionDecl 0x561d5f1cee18 <line:501:1, line:503:85> line:501:12 pthread_mutex_timedlock 'int (pthread_mutex_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x561d5f1cec28 <col:37, col:65> col:65 __mutex 'pthread_mutex_t *restrict'
| |-ParmVarDecl 0x561d5f1cecb8 <line:502:9, line:503:9> col:9 __abstime 'const struct timespec *restrict'
| |-NoThrowAttr 0x561d5f1ceec8 <col:36>
| `-NonNullAttr 0x561d5f1cef20 <col:66, col:83> 1 2
|-FunctionDecl 0x561d5f1cf020 <line:504:1, line:505:68> line:504:12 pthread_mutex_unlock 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x561d5f1cef68 <col:34, col:51> col:51 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x561d5f1cf0c8 <line:505:22>
| `-NonNullAttr 0x561d5f1cf120 <col:52, col:66> 1
|-FunctionDecl 0x561d5f1cf3b8 <line:506:1, line:509:82> line:506:12 pthread_mutex_getprioceiling 'int (const pthread_mutex_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x561d5f1cf1d0 <col:42, line:507:18> col:18 __mutex 'const pthread_mutex_t *restrict'
| |-ParmVarDecl 0x561d5f1cf250 <line:508:7, col:23> col:23 __prioceiling 'int *restrict'
| |-NoThrowAttr 0x561d5f1cf468 <line:509:22>
| `-NonNullAttr 0x561d5f1cf4c0 <col:63, col:80> 1 2
|-FunctionDecl 0x561d5f1cf788 <line:510:1, line:513:82> line:510:12 pthread_mutex_setprioceiling 'int (pthread_mutex_t *restrict, int, int *restrict)' extern
| |-ParmVarDecl 0x561d5f1cf508 <col:42, col:70> col:70 __mutex 'pthread_mutex_t *restrict'
| |-ParmVarDecl 0x561d5f1cf588 <line:511:7, col:11> col:11 __prioceiling 'int'
| |-ParmVarDecl 0x561d5f1cf608 <line:512:7, col:23> col:23 __old_ceiling 'int *restrict'
| |-NoThrowAttr 0x561d5f1cf840 <line:513:22>
| `-NonNullAttr 0x561d5f1cf898 <col:63, col:80> 1 3
|-FunctionDecl 0x561d5f1cfa30 <line:514:1, line:515:79> line:514:12 pthread_mutex_consistent 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x561d5f1cf8e8 <col:38, col:55> col:55 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x561d5f1cfad8 <line:515:22>
| `-NonNullAttr 0x561d5f1cfb30 <col:63, col:77> 1
|-FunctionDecl 0x561d5f1cfd18 <line:516:1, line:517:79> line:516:12 pthread_mutexattr_init 'int (pthread_mutexattr_t *)' extern
| |-ParmVarDecl 0x561d5f1cfbe0 <col:36, col:57> col:57 __attr 'pthread_mutexattr_t *'
| |-NoThrowAttr 0x561d5f1cfdc0 <line:517:22>
| `-NonNullAttr 0x561d5f1cfe18 <col:63, col:77> 1
|-FunctionDecl 0x561d5f1cff20 <line:518:1, line:519:79> line:518:12 pthread_mutexattr_destroy 'int (pthread_mutexattr_t *)' extern
| |-ParmVarDecl 0x561d5f1cfe68 <col:39, col:60> col:60 __attr 'pthread_mutexattr_t *'
| |-NoThrowAttr 0x561d5f1cffc8 <line:519:22>
| `-NonNullAttr 0x561d5f1d0020 <col:63, col:77> 1
|-FunctionDecl 0x561d5f1d0248 <line:520:1, line:523:82> line:520:12 pthread_mutexattr_getpshared 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x561d5f1d0068 <col:42, line:521:18> col:18 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x561d5f1d00e8 <line:522:7, col:23> col:23 __pshared 'int *restrict'
| |-NoThrowAttr 0x561d5f1d02f8 <line:523:22>
| `-NonNullAttr 0x561d5f1d0350 <col:63, col:80> 1 2
|-FunctionDecl 0x561d5f1d0558 <line:524:1, line:526:79> line:524:12 pthread_mutexattr_setpshared 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x561d5f1d0398 <col:42, col:63> col:63 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x561d5f1d0418 <line:525:7, col:11> col:11 __pshared 'int'
| |-NoThrowAttr 0x561d5f1d0608 <line:526:22>
| `-NonNullAttr 0x561d5f1d0660 <col:63, col:77> 1
|-FunctionDecl 0x561d5f1d0808 <line:527:1, line:529:82> line:527:12 pthread_mutexattr_gettype 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x561d5f1d06a8 <col:39, line:528:11> col:11 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x561d5f1d0728 <col:19, col:35> col:35 __kind 'int *restrict'
| |-NoThrowAttr 0x561d5f1d08b8 <line:529:22>
| `-NonNullAttr 0x561d5f1d0910 <col:63, col:80> 1 2
|-FunctionDecl 0x561d5f1d0b00 <line:530:1, line:531:79> line:530:12 pthread_mutexattr_settype 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x561d5f1d0958 <col:39, col:60> col:60 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x561d5f1d0a40 <col:68, col:72> col:72 __kind 'int'
| |-NoThrowAttr 0x561d5f1d0bb0 <line:531:22>
| `-NonNullAttr 0x561d5f1d0c08 <col:63, col:77> 1
|-FunctionDecl 0x561d5f1d0db8 <line:532:1, line:535:82> line:532:12 pthread_mutexattr_getprotocol 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x561d5f1d0c58 <col:43, line:533:19> col:19 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x561d5f1d0cd8 <line:534:8, col:24> col:24 __protocol 'int *restrict'
| |-NoThrowAttr 0x561d5f1d0e68 <line:535:22>
| `-NonNullAttr 0x561d5f1d0ec0 <col:63, col:80> 1 2
|-FunctionDecl 0x561d5f1d1048 <line:536:1, line:538:79> line:536:12 pthread_mutexattr_setprotocol 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x561d5f1d0f08 <col:43, col:64> col:64 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x561d5f1d0f88 <line:537:8, col:12> col:12 __protocol 'int'
| |-NoThrowAttr 0x561d5f1d10f8 <line:538:22>
| `-NonNullAttr 0x561d5f1d1150 <col:63, col:77> 1
|-FunctionDecl 0x561d5f1d12f8 <line:539:1, line:542:82> line:539:12 pthread_mutexattr_getprioceiling 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x561d5f1d1198 <col:46, line:540:22> col:22 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x561d5f1d1218 <line:541:11, col:27> col:27 __prioceiling 'int *restrict'
| |-NoThrowAttr 0x561d5f1d13a8 <line:542:22>
| `-NonNullAttr 0x561d5f1d1400 <col:63, col:80> 1 2
|-FunctionDecl 0x561d5f1d1588 <line:543:1, line:545:79> line:543:12 pthread_mutexattr_setprioceiling 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x561d5f1d1448 <col:46, col:67> col:67 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x561d5f1d14c8 <line:544:11, col:15> col:15 __prioceiling 'int'
| |-NoThrowAttr 0x561d5f1d1638 <line:545:22>
| `-NonNullAttr 0x561d5f1d1690 <col:63, col:77> 1
|-FunctionDecl 0x561d5f1d1878 <line:546:1, line:548:82> line:546:12 pthread_mutexattr_getrobust 'int (const pthread_mutexattr_t *, int *)' extern
| |-ParmVarDecl 0x561d5f1d16d8 <col:41, col:68> col:68 __attr 'const pthread_mutexattr_t *'
| |-ParmVarDecl 0x561d5f1d1758 <line:547:6, col:11> col:11 __robustness 'int *'
| |-NoThrowAttr 0x561d5f1d1928 <line:548:22>
| `-NonNullAttr 0x561d5f1d1980 <col:63, col:80> 1 2
|-FunctionDecl 0x561d5f1d2b38 <line:549:1, line:551:79> line:549:12 pthread_mutexattr_setrobust 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x561d5f1d19c8 <col:41, col:62> col:62 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x561d5f1d2a78 <line:550:6, col:10> col:10 __robustness 'int'
| |-NoThrowAttr 0x561d5f1d2be8 <line:551:22>
| `-NonNullAttr 0x561d5f1d2c40 <col:63, col:77> 1
|-FunctionDecl 0x561d5f1d2f78 <line:552:1, line:554:86> line:552:12 pthread_rwlock_init 'int (pthread_rwlock_t *restrict, const pthread_rwlockattr_t *restrict)' extern
| |-ParmVarDecl 0x561d5f1d2d20 <col:33, col:62> col:62 __rwlock 'pthread_rwlock_t *restrict'
| |-ParmVarDecl 0x561d5f1d2e30 <line:553:5, line:554:5> col:5 __attr 'const pthread_rwlockattr_t *restrict'
| |-NoThrowAttr 0x561d5f1d3028 <col:29>
| `-NonNullAttr 0x561d5f1d3080 <col:70, col:84> 1
|-FunctionDecl 0x561d5f1d31f8 <line:555:1, line:556:79> line:555:12 pthread_rwlock_destroy 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x561d5f1d30c8 <col:36, col:54> col:54 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x561d5f1d32a0 <line:556:22>
| `-NonNullAttr 0x561d5f1d32f8 <col:63, col:77> 1
|-FunctionDecl 0x561d5f1d3400 <line:557:1, line:558:68> line:557:12 pthread_rwlock_rdlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x561d5f1d3348 <col:35, col:53> col:53 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x561d5f1d34a8 <line:558:22>
| `-NonNullAttr 0x561d5f1d3500 <col:52, col:66> 1
|-FunctionDecl 0x561d5f1d3600 <line:559:1, line:560:65> line:559:12 pthread_rwlock_tryrdlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x561d5f1d3548 <col:38, col:56> col:56 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x561d5f1d36a8 <line:560:19>
| `-NonNullAttr 0x561d5f1d3700 <col:49, col:63> 1
|-FunctionDecl 0x561d5f1d3938 <line:561:1, line:563:88> line:561:12 pthread_rwlock_timedrdlock 'int (pthread_rwlock_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x561d5f1d3748 <col:40, col:69> col:69 __rwlock 'pthread_rwlock_t *restrict'
| |-ParmVarDecl 0x561d5f1d37d8 <line:562:12, line:563:12> col:12 __abstime 'const struct timespec *restrict'
| |-NoThrowAttr 0x561d5f1d39e8 <col:39>
| `-NonNullAttr 0x561d5f1d3a70 <col:69, col:86> 1 2
|-FunctionDecl 0x561d5f1d3b70 <line:564:1, line:565:68> line:564:12 pthread_rwlock_wrlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x561d5f1d3ab8 <col:35, col:53> col:53 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x561d5f1d3c18 <line:565:22>
| `-NonNullAttr 0x561d5f1d3c70 <col:52, col:66> 1
|-FunctionDecl 0x561d5f1d3d70 <line:566:1, line:567:68> line:566:12 pthread_rwlock_trywrlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x561d5f1d3cb8 <col:38, col:56> col:56 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x561d5f1d3e18 <line:567:22>
| `-NonNullAttr 0x561d5f1d3e70 <col:52, col:66> 1
|-FunctionDecl 0x561d5f1d4028 <line:568:1, line:570:88> line:568:12 pthread_rwlock_timedwrlock 'int (pthread_rwlock_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x561d5f1d3eb8 <col:40, col:69> col:69 __rwlock 'pthread_rwlock_t *restrict'
| |-ParmVarDecl 0x561d5f1d3f48 <line:569:12, line:570:12> col:12 __abstime 'const struct timespec *restrict'
| |-NoThrowAttr 0x561d5f1d40d8 <col:39>
| `-NonNullAttr 0x561d5f1d4130 <col:69, col:86> 1 2
|-FunctionDecl 0x561d5f1d4230 <line:571:1, line:572:68> line:571:12 pthread_rwlock_unlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x561d5f1d4178 <col:35, col:53> col:53 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x561d5f1d42d8 <line:572:22>
| `-NonNullAttr 0x561d5f1d4330 <col:52, col:66> 1
|-FunctionDecl 0x561d5f1d4518 <line:573:1, line:574:79> line:573:12 pthread_rwlockattr_init 'int (pthread_rwlockattr_t *)' extern
| |-ParmVarDecl 0x561d5f1d43e0 <col:37, col:59> col:59 __attr 'pthread_rwlockattr_t *'
| |-NoThrowAttr 0x561d5f1d45c0 <line:574:22>
| `-NonNullAttr 0x561d5f1d4618 <col:63, col:77> 1
|-FunctionDecl 0x561d5f1d4720 <line:575:1, line:576:79> line:575:12 pthread_rwlockattr_destroy 'int (pthread_rwlockattr_t *)' extern
| |-ParmVarDecl 0x561d5f1d4668 <col:40, col:62> col:62 __attr 'pthread_rwlockattr_t *'
| |-NoThrowAttr 0x561d5f1d47c8 <line:576:22>
| `-NonNullAttr 0x561d5f1d4820 <col:63, col:77> 1
|-FunctionDecl 0x561d5f1d4a80 <line:577:1, line:580:82> line:577:12 pthread_rwlockattr_getpshared 'int (const pthread_rwlockattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x561d5f1d4868 <col:43, line:578:19> col:19 __attr 'const pthread_rwlockattr_t *restrict'
| |-ParmVarDecl 0x561d5f1d48e8 <line:579:8, col:24> col:24 __pshared 'int *restrict'
| |-NoThrowAttr 0x561d5f1d4b30 <line:580:22>
| `-NonNullAttr 0x561d5f1d4b88 <col:63, col:80> 1 2
|-FunctionDecl 0x561d5f1d4d98 <line:581:1, line:583:79> line:581:12 pthread_rwlockattr_setpshared 'int (pthread_rwlockattr_t *, int)' extern
| |-ParmVarDecl 0x561d5f1d4bd8 <col:43, col:65> col:65 __attr 'pthread_rwlockattr_t *'
| |-ParmVarDecl 0x561d5f1d4c58 <line:582:8, col:12> col:12 __pshared 'int'
| |-NoThrowAttr 0x561d5f1d4e48 <line:583:22>
| `-NonNullAttr 0x561d5f1d4ea0 <col:63, col:77> 1
|-FunctionDecl 0x561d5f1d5048 <line:584:1, line:587:82> line:584:12 pthread_rwlockattr_getkind_np 'int (const pthread_rwlockattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x561d5f1d4ee8 <col:43, line:585:19> col:19 __attr 'const pthread_rwlockattr_t *restrict'
| |-ParmVarDecl 0x561d5f1d4f68 <line:586:8, col:24> col:24 __pref 'int *restrict'
| |-NoThrowAttr 0x561d5f1d50f8 <line:587:22>
| `-NonNullAttr 0x561d5f1d5150 <col:63, col:80> 1 2
|-FunctionDecl 0x561d5f1d52d8 <line:588:1, line:589:93> line:588:12 pthread_rwlockattr_setkind_np 'int (pthread_rwlockattr_t *, int)' extern
| |-ParmVarDecl 0x561d5f1d5198 <col:43, col:65> col:65 __attr 'pthread_rwlockattr_t *'
| |-ParmVarDecl 0x561d5f1d5218 <line:589:8, col:12> col:12 __pref 'int'
| |-NoThrowAttr 0x561d5f1d5388 <col:36>
| `-NonNullAttr 0x561d5f1d53e0 <col:77, col:91> 1
|-FunctionDecl 0x561d5f1d5718 <line:590:1, line:592:79> line:590:12 pthread_cond_init 'int (pthread_cond_t *restrict, const pthread_condattr_t *restrict)' extern
| |-ParmVarDecl 0x561d5f1d54c0 <col:31, col:58> col:58 __cond 'pthread_cond_t *restrict'
| |-ParmVarDecl 0x561d5f1d55d0 <line:591:10, col:47> col:47 __cond_attr 'const pthread_condattr_t *restrict'
| |-NoThrowAttr 0x561d5f1d57c8 <line:592:22>
| `-NonNullAttr 0x561d5f1d5820 <col:63, col:77> 1
|-FunctionDecl 0x561d5f1d5998 <line:593:1, line:594:79> line:593:12 pthread_cond_destroy 'int (pthread_cond_t *)' extern
| |-ParmVarDecl 0x561d5f1d5868 <col:34, col:50> col:50 __cond 'pthread_cond_t *'
| |-NoThrowAttr 0x561d5f1d5a40 <line:594:22>
| `-NonNullAttr 0x561d5f1d5ac0 <col:63, col:77> 1
|-FunctionDecl 0x561d5f1d5bc0 <line:595:1, line:596:68> line:595:12 pthread_cond_signal 'int (pthread_cond_t *)' extern
| |-ParmVarDecl 0x561d5f1d5b08 <col:33, col:49> col:49 __cond 'pthread_cond_t *'
| |-NoThrowAttr 0x561d5f1d5c68 <line:596:22>
| `-NonNullAttr 0x561d5f1d5cc0 <col:52, col:66> 1
|-FunctionDecl 0x561d5f1d5dc0 <line:597:1, line:598:68> line:597:12 pthread_cond_broadcast 'int (pthread_cond_t *)' extern
| |-ParmVarDecl 0x561d5f1d5d08 <col:36, col:52> col:52 __cond 'pthread_cond_t *'
| |-NoThrowAttr 0x561d5f1d5e68 <line:598:22>
| `-NonNullAttr 0x561d5f1d5ec0 <col:52, col:66> 1
|-FunctionDecl 0x561d5f1d60e8 <line:599:1, line:601:41> line:599:12 pthread_cond_wait 'int (pthread_cond_t *restrict, pthread_mutex_t *restrict)' extern
| |-ParmVarDecl 0x561d5f1d5f08 <col:31, col:58> col:58 __cond 'pthread_cond_t *restrict'
| |-ParmVarDecl 0x561d5f1d5f80 <line:600:10, col:38> col:38 __mutex 'pthread_mutex_t *restrict'
| `-NonNullAttr 0x561d5f1d6198 <line:601:22, col:39> 1 2
|-FunctionDecl 0x561d5f1d64c8 <line:602:1, line:605:44> line:602:12 pthread_cond_timedwait 'int (pthread_cond_t *restrict, pthread_mutex_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x561d5f1d6218 <col:36, col:63> col:63 __cond 'pthread_cond_t *restrict'
| |-ParmVarDecl 0x561d5f1d6290 <line:603:8, col:36> col:36 __mutex 'pthread_mutex_t *restrict'
| |-ParmVarDecl 0x561d5f1d6320 <line:604:8, col:42> col:42 __abstime 'const struct timespec *restrict'
| `-NonNullAttr 0x561d5f1d6580 <line:605:22, col:42> 1 2 3
|-FunctionDecl 0x561d5f1d6798 <line:606:1, line:607:79> line:606:12 pthread_condattr_init 'int (pthread_condattr_t *)' extern
| |-ParmVarDecl 0x561d5f1d6660 <col:35, col:55> col:55 __attr 'pthread_condattr_t *'
| |-NoThrowAttr 0x561d5f1d6840 <line:607:22>
| `-NonNullAttr 0x561d5f1d6898 <col:63, col:77> 1
|-FunctionDecl 0x561d5f1d69a0 <line:608:1, line:609:79> line:608:12 pthread_condattr_destroy 'int (pthread_condattr_t *)' extern
| |-ParmVarDecl 0x561d5f1d68e8 <col:38, col:58> col:58 __attr 'pthread_condattr_t *'
| |-NoThrowAttr 0x561d5f1d6a48 <line:609:22>
| `-NonNullAttr 0x561d5f1d6ad0 <col:63, col:77> 1
|-FunctionDecl 0x561d5f1d6cf8 <line:610:1, line:613:82> line:610:12 pthread_condattr_getpshared 'int (const pthread_condattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x561d5f1d6b18 <col:41, line:611:17> col:17 __attr 'const pthread_condattr_t *restrict'
| |-ParmVarDecl 0x561d5f1d6b98 <line:612:6, col:22> col:22 __pshared 'int *restrict'
| |-NoThrowAttr 0x561d5f1d6da8 <line:613:22>
| `-NonNullAttr 0x561d5f1d6e00 <col:63, col:80> 1 2
|-FunctionDecl 0x561d5f1d7008 <line:614:1, line:615:94> line:614:12 pthread_condattr_setpshared 'int (pthread_condattr_t *, int)' extern
| |-ParmVarDecl 0x561d5f1d6e48 <col:41, col:61> col:61 __attr 'pthread_condattr_t *'
| |-ParmVarDecl 0x561d5f1d6ec8 <line:615:6, col:10> col:10 __pshared 'int'
| |-NoThrowAttr 0x561d5f1d70b8 <col:37>
| `-NonNullAttr 0x561d5f1d7110 <col:78, col:92> 1
|-FunctionDecl 0x561d5f1d7328 <line:616:1, line:619:82> line:616:12 pthread_condattr_getclock 'int (const pthread_condattr_t *restrict, __clockid_t *restrict)' extern
| |-ParmVarDecl 0x561d5f1d7158 <col:39, line:617:22> col:22 __attr 'const pthread_condattr_t *restrict'
| |-ParmVarDecl 0x561d5f1d7200 <line:618:11, col:35> col:35 __clock_id '__clockid_t *restrict'
| |-NoThrowAttr 0x561d5f1d73d8 <line:619:22>
| `-NonNullAttr 0x561d5f1d7430 <col:63, col:80> 1 2
|-FunctionDecl 0x561d5f1d75f8 <line:620:1, line:622:79> line:620:12 pthread_condattr_setclock 'int (pthread_condattr_t *, __clockid_t)' extern
| |-ParmVarDecl 0x561d5f1d7478 <col:39, col:59> col:59 __attr 'pthread_condattr_t *'
| |-ParmVarDecl 0x561d5f1d74f0 <line:621:11, col:23> col:23 __clock_id '__clockid_t':'int'
| |-NoThrowAttr 0x561d5f1d76a8 <line:622:22>
| `-NonNullAttr 0x561d5f1d7700 <col:63, col:77> 1
|-FunctionDecl 0x561d5f1d79a8 <line:623:1, line:624:79> line:623:12 pthread_spin_init 'int (pthread_spinlock_t *, int)' extern
| |-ParmVarDecl 0x561d5f1d77e0 <col:31, col:51> col:51 __lock 'pthread_spinlock_t *'
| |-ParmVarDecl 0x561d5f1d7860 <col:59, col:63> col:63 __pshared 'int'
| |-NoThrowAttr 0x561d5f1d7a58 <line:624:22>
| `-NonNullAttr 0x561d5f1d7ae0 <col:63, col:77> 1
|-FunctionDecl 0x561d5f1d7c58 <line:625:1, line:626:79> line:625:12 pthread_spin_destroy 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x561d5f1d7b28 <col:34, col:54> col:54 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x561d5f1d7d00 <line:626:22>
| `-NonNullAttr 0x561d5f1d7d58 <col:63, col:77> 1
|-FunctionDecl 0x561d5f1d7e60 <line:627:1, line:628:68> line:627:12 pthread_spin_lock 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x561d5f1d7da8 <col:31, col:51> col:51 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x561d5f1d7f08 <line:628:22>
| `-NonNullAttr 0x561d5f1d7f60 <col:52, col:66> 1
|-FunctionDecl 0x561d5f1d8060 <line:629:1, line:630:68> line:629:12 pthread_spin_trylock 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x561d5f1d7fa8 <col:34, col:54> col:54 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x561d5f1d8108 <line:630:22>
| `-NonNullAttr 0x561d5f1d8160 <col:52, col:66> 1
|-FunctionDecl 0x561d5f1d8260 <line:631:1, line:632:68> line:631:12 pthread_spin_unlock 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x561d5f1d81a8 <col:33, col:53> col:53 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x561d5f1d8308 <line:632:22>
| `-NonNullAttr 0x561d5f1d8360 <col:52, col:66> 1
|-FunctionDecl 0x561d5f1d8738 <line:633:1, line:636:79> line:633:12 pthread_barrier_init 'int (pthread_barrier_t *restrict, const pthread_barrierattr_t *restrict, unsigned int)' extern
| |-ParmVarDecl 0x561d5f1d8440 <col:34, col:64> col:64 __barrier 'pthread_barrier_t *restrict'
| |-ParmVarDecl 0x561d5f1d8550 <line:634:6, line:635:6> col:6 __attr 'const pthread_barrierattr_t *restrict'
| |-ParmVarDecl 0x561d5f1d85d0 <col:14, col:27> col:27 __count 'unsigned int'
| |-NoThrowAttr 0x561d5f1d87f0 <line:636:22>
| `-NonNullAttr 0x561d5f1d8848 <col:63, col:77> 1
|-FunctionDecl 0x561d5f1d89c8 <line:637:1, line:638:79> line:637:12 pthread_barrier_destroy 'int (pthread_barrier_t *)' extern
| |-ParmVarDecl 0x561d5f1d8898 <col:37, col:56> col:56 __barrier 'pthread_barrier_t *'
| |-NoThrowAttr 0x561d5f1d8a70 <line:638:22>
| `-NonNullAttr 0x561d5f1d9b00 <col:63, col:77> 1
|-FunctionDecl 0x561d5f1d9c00 <line:639:1, line:640:68> line:639:12 pthread_barrier_wait 'int (pthread_barrier_t *)' extern
| |-ParmVarDecl 0x561d5f1d9b48 <col:34, col:53> col:53 __barrier 'pthread_barrier_t *'
| |-NoThrowAttr 0x561d5f1d9ca8 <line:640:22>
| `-NonNullAttr 0x561d5f1d9d00 <col:52, col:66> 1
|-FunctionDecl 0x561d5f1d9ee8 <line:641:1, line:642:79> line:641:12 pthread_barrierattr_init 'int (pthread_barrierattr_t *)' extern
| |-ParmVarDecl 0x561d5f1d9db0 <col:38, col:61> col:61 __attr 'pthread_barrierattr_t *'
| |-NoThrowAttr 0x561d5f1d9f90 <line:642:22>
| `-NonNullAttr 0x561d5f1d9fe8 <col:63, col:77> 1
|-FunctionDecl 0x561d5f1da0f0 <line:643:1, line:644:79> line:643:12 pthread_barrierattr_destroy 'int (pthread_barrierattr_t *)' extern
| |-ParmVarDecl 0x561d5f1da038 <col:41, col:64> col:64 __attr 'pthread_barrierattr_t *'
| |-NoThrowAttr 0x561d5f1da198 <line:644:22>
| `-NonNullAttr 0x561d5f1da1f0 <col:63, col:77> 1
|-FunctionDecl 0x561d5f1da418 <line:645:1, line:648:82> line:645:12 pthread_barrierattr_getpshared 'int (const pthread_barrierattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x561d5f1da238 <col:44, line:646:20> col:20 __attr 'const pthread_barrierattr_t *restrict'
| |-ParmVarDecl 0x561d5f1da2b8 <line:647:9, col:25> col:25 __pshared 'int *restrict'
| |-NoThrowAttr 0x561d5f1da4c8 <line:648:22>
| `-NonNullAttr 0x561d5f1da520 <col:63, col:80> 1 2
|-FunctionDecl 0x561d5f1da728 <line:649:1, line:651:79> line:649:12 pthread_barrierattr_setpshared 'int (pthread_barrierattr_t *, int)' extern
| |-ParmVarDecl 0x561d5f1da568 <col:44, col:67> col:67 __attr 'pthread_barrierattr_t *'
| |-ParmVarDecl 0x561d5f1da5e8 <line:650:9, col:13> col:13 __pshared 'int'
| |-NoThrowAttr 0x561d5f1da7d8 <line:651:22>
| `-NonNullAttr 0x561d5f1da830 <col:63, col:77> 1
|-FunctionDecl 0x561d5f1dab98 <line:652:1, line:654:79> line:652:12 pthread_key_create 'int (pthread_key_t *, void (*)(void *))' extern
| |-ParmVarDecl 0x561d5f1da910 <col:32, col:47> col:47 __key 'pthread_key_t *'
| |-ParmVarDecl 0x561d5f1daa30 <line:653:11, col:43> col:18 __destr_function 'void (*)(void *)'
| |-NoThrowAttr 0x561d5f1dac48 <line:654:22>
| `-NonNullAttr 0x561d5f1daca0 <col:63, col:77> 1
|-FunctionDecl 0x561d5f1dadf8 <line:655:1, col:92> col:12 pthread_key_delete 'int (pthread_key_t)' extern
| |-ParmVarDecl 0x561d5f1dace8 <col:32, col:46> col:46 __key 'pthread_key_t':'unsigned int'
| `-NoThrowAttr 0x561d5f1daea0 <col:69>
|-FunctionDecl 0x561d5f1db018 <line:656:1, col:95> col:14 pthread_getspecific 'void *(pthread_key_t)' extern
| |-ParmVarDecl 0x561d5f1daf08 <col:35, col:49> col:49 __key 'pthread_key_t':'unsigned int'
| `-NoThrowAttr 0x561d5f1db0c0 <col:72>
|-FunctionDecl 0x561d5f1db2f8 <line:657:1, line:658:67> line:657:12 pthread_setspecific 'int (pthread_key_t, const void *)' extern
| |-ParmVarDecl 0x561d5f1db128 <col:33, col:47> col:47 __key 'pthread_key_t':'unsigned int'
| |-ParmVarDecl 0x561d5f1db1d8 <line:658:5, col:17> col:17 __pointer 'const void *'
| `-NoThrowAttr 0x561d5f1db3a8 <col:44>
|-FunctionDecl 0x561d5f1db5c8 <line:659:1, line:661:79> line:659:12 pthread_getcpuclockid 'int (pthread_t, __clockid_t *)' extern
| |-ParmVarDecl 0x561d5f1db410 <col:35, col:45> col:45 __thread_id 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x561d5f1db488 <line:660:7, col:20> col:20 __clock_id '__clockid_t *'
| |-NoThrowAttr 0x561d5f1db678 <line:661:22>
| `-NonNullAttr 0x561d5f1db6d0 <col:63, col:77> 2
|-FunctionDecl 0x561d5f1dbb30 <line:662:1, line:664:70> line:662:12 pthread_atfork 'int (void (*)(void), void (*)(void), void (*)(void))' extern
| |-ParmVarDecl 0x561d5f1db7b0 <col:28, col:51> col:35 __prepare 'void (*)(void)'
| |-ParmVarDecl 0x561d5f1db8c0 <line:663:7, col:29> col:14 __parent 'void (*)(void)'
| |-ParmVarDecl 0x561d5f1db9d0 <line:664:7, col:28> col:14 __child 'void (*)(void)'
| `-NoThrowAttr 0x561d5f1dbbe8 <col:47>
|-FunctionDecl 0x561d5f1dbcf0 <line:666:1, col:20> col:8 used P0 'void *(void *)'
| `-ParmVarDecl 0x561d5f1dbc58 <col:11, col:17> col:17 arg 'void *'
|-FunctionDecl 0x561d5f1dbe48 <line:667:1, col:20> col:8 used P1 'void *(void *)'
| `-ParmVarDecl 0x561d5f1dbdb0 <col:11, col:17> col:17 arg 'void *'
|-FunctionDecl 0x561d5f1dbfa0 <line:668:1, col:20> col:8 used P2 'void *(void *)'
| `-ParmVarDecl 0x561d5f1dbf08 <col:11, col:17> col:17 arg 'void *'
|-FunctionDecl 0x561d5f1dc068 <line:669:1, col:12> col:6 fence 'void ()'
|-FunctionDecl 0x561d5f1dc128 <line:670:1, col:12> col:6 isync 'void ()'
|-FunctionDecl 0x561d5f1dc1e8 <line:671:1, col:14> col:6 lwfence 'void ()'
|-VarDecl 0x561d5f1dc2a0 <line:672:1, col:5> col:5 used __unbuffered_cnt 'int'
|-VarDecl 0x561d5f1dc320 prev 0x561d5f1dc2a0 <line:673:1, col:24> col:5 used __unbuffered_cnt 'int' cinit
| `-IntegerLiteral 0x561d5f1dc388 <col:24> 'int' 0
|-VarDecl 0x561d5f1dc3c0 <line:674:1, col:5> col:5 used __unbuffered_p0_EAX 'int'
|-VarDecl 0x561d5f1dc440 prev 0x561d5f1dc3c0 <line:675:1, col:27> col:5 used __unbuffered_p0_EAX 'int' cinit
| `-IntegerLiteral 0x561d5f1dc4a8 <col:27> 'int' 0
|-VarDecl 0x561d5f1dc4d8 <line:676:1, col:7> col:7 __unbuffered_p0_EAX$flush_delayed '_Bool'
|-VarDecl 0x561d5f1dc558 <line:677:1, col:5> col:5 __unbuffered_p0_EAX$mem_tmp 'int'
|-VarDecl 0x561d5f1dc5d0 <line:678:1, col:7> col:7 __unbuffered_p0_EAX$r_buff0_thd0 '_Bool'
|-VarDecl 0x561d5f1dc648 <line:679:1, col:7> col:7 __unbuffered_p0_EAX$r_buff0_thd1 '_Bool'
|-VarDecl 0x561d5f1dc6c0 <line:680:1, col:7> col:7 __unbuffered_p0_EAX$r_buff0_thd2 '_Bool'
|-VarDecl 0x561d5f1dc738 <line:681:1, col:7> col:7 __unbuffered_p0_EAX$r_buff0_thd3 '_Bool'
|-VarDecl 0x561d5f1dc7b0 <line:682:1, col:7> col:7 __unbuffered_p0_EAX$r_buff1_thd0 '_Bool'
|-VarDecl 0x561d5f1dc828 <line:683:1, col:7> col:7 __unbuffered_p0_EAX$r_buff1_thd1 '_Bool'
|-VarDecl 0x561d5f1dc8a0 <line:684:1, col:7> col:7 __unbuffered_p0_EAX$r_buff1_thd2 '_Bool'
|-VarDecl 0x561d5f1dc918 <line:685:1, col:7> col:7 __unbuffered_p0_EAX$r_buff1_thd3 '_Bool'
|-VarDecl 0x561d5f1dc990 <line:686:1, col:7> col:7 used __unbuffered_p0_EAX$read_delayed '_Bool'
|-VarDecl 0x561d5f1dca10 <line:687:1, col:6> col:6 used __unbuffered_p0_EAX$read_delayed_var 'int *'
|-VarDecl 0x561d5f1dcb00 <line:688:1, col:5> col:5 __unbuffered_p0_EAX$w_buff0 'int'
|-VarDecl 0x561d5f1dcb78 <line:689:1, col:7> col:7 __unbuffered_p0_EAX$w_buff0_used '_Bool'
|-VarDecl 0x561d5f1dcbf8 <line:690:1, col:5> col:5 __unbuffered_p0_EAX$w_buff1 'int'
|-VarDecl 0x561d5f1dcc70 <line:691:1, col:7> col:7 __unbuffered_p0_EAX$w_buff1_used '_Bool'
|-VarDecl 0x561d5f1dccf0 <line:692:1, col:5> col:5 used __unbuffered_p1_EAX 'int'
|-VarDecl 0x561d5f1dcd70 prev 0x561d5f1dccf0 <line:693:1, col:27> col:5 used __unbuffered_p1_EAX 'int' cinit
| `-IntegerLiteral 0x561d5f1dcdd8 <col:27> 'int' 0
|-VarDecl 0x561d5f1dce10 <line:694:1, col:5> col:5 used __unbuffered_p2_EAX 'int'
|-VarDecl 0x561d5f1dce90 prev 0x561d5f1dce10 <line:695:1, col:27> col:5 used __unbuffered_p2_EAX 'int' cinit
| `-IntegerLiteral 0x561d5f1dcef8 <col:27> 'int' 0
|-VarDecl 0x561d5f1dcf28 <line:696:1, col:7> col:7 used main$tmp_guard0 '_Bool'
|-VarDecl 0x561d5f1dcfa0 <line:697:1, col:7> col:7 used main$tmp_guard1 '_Bool'
|-VarDecl 0x561d5f1dd020 <line:698:1, col:5> col:5 used x 'int'
|-VarDecl 0x561d5f1dd0a0 prev 0x561d5f1dd020 <line:699:1, col:9> col:5 used x 'int' cinit
| `-IntegerLiteral 0x561d5f1dd108 <col:9> 'int' 0
|-VarDecl 0x561d5f1dd140 <line:700:1, col:5> col:5 used y 'int'
|-VarDecl 0x561d5f1dd1c0 prev 0x561d5f1dd140 <line:701:1, col:9> col:5 used y 'int' cinit
| `-IntegerLiteral 0x561d5f1dd228 <col:9> 'int' 0
|-VarDecl 0x561d5f1dd260 <line:702:1, col:5> col:5 used z 'int'
|-VarDecl 0x561d5f1dd2e0 prev 0x561d5f1dd260 <line:703:1, col:9> col:5 used z 'int' cinit
| `-IntegerLiteral 0x561d5f1dd348 <col:9> 'int' 0
|-VarDecl 0x561d5f1dd378 <line:704:1, col:7> col:7 used z$flush_delayed '_Bool'
|-VarDecl 0x561d5f1dd3f8 <line:705:1, col:5> col:5 used z$mem_tmp 'int'
|-VarDecl 0x561d5f1dd470 <line:706:1, col:7> col:7 used z$r_buff0_thd0 '_Bool'
|-VarDecl 0x561d5f1dd4e8 <line:707:1, col:7> col:7 used z$r_buff0_thd1 '_Bool'
|-VarDecl 0x561d5f1dd560 <line:708:1, col:7> col:7 z$r_buff0_thd2 '_Bool'
|-VarDecl 0x561d5f1dd5d8 <line:709:1, col:7> col:7 used z$r_buff0_thd3 '_Bool'
|-VarDecl 0x561d5f1dd650 <line:710:1, col:7> col:7 used z$r_buff1_thd0 '_Bool'
|-VarDecl 0x561d5f1dd6c8 <line:711:1, col:7> col:7 used z$r_buff1_thd1 '_Bool'
|-VarDecl 0x561d5f1dd740 <line:712:1, col:7> col:7 z$r_buff1_thd2 '_Bool'
|-VarDecl 0x561d5f1dd7b8 <line:713:1, col:7> col:7 used z$r_buff1_thd3 '_Bool'
|-VarDecl 0x561d5f1dd830 <line:714:1, col:7> col:7 z$read_delayed '_Bool'
|-VarDecl 0x561d5f1dd8b0 <line:715:1, col:6> col:6 z$read_delayed_var 'int *'
|-VarDecl 0x561d5f1dd930 <line:716:1, col:5> col:5 used z$w_buff0 'int'
|-VarDecl 0x561d5f1dd9a8 <line:717:1, col:7> col:7 used z$w_buff0_used '_Bool'
|-VarDecl 0x561d5f1dda28 <line:718:1, col:5> col:5 used z$w_buff1 'int'
|-VarDecl 0x561d5f1deb20 <line:719:1, col:7> col:7 used z$w_buff1_used '_Bool'
|-VarDecl 0x561d5f1deb98 <line:720:1, col:7> col:7 used weak$$choice0 '_Bool'
|-VarDecl 0x561d5f1dec10 <line:721:1, col:7> col:7 used weak$$choice1 '_Bool'
|-VarDecl 0x561d5f1dec88 <line:722:1, col:7> col:7 used weak$$choice2 '_Bool'
|-FunctionDecl 0x561d5f1deda0 prev 0x561d5f1dbcf0 <line:723:1, line:752:1> line:723:8 used P0 'void *(void *)'
| |-ParmVarDecl 0x561d5f1ded08 <col:11, col:17> col:17 arg 'void *'
| `-CompoundStmt 0x561d5f1e1e38 <line:724:1, line:752:1>
|   |-CallExpr 0x561d5f1deeb8 <line:725:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x561d5f1deea0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x561d5f1dee48 <col:3> 'void ()' Function 0x561d5f182fa0 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x561d5f1def88 <line:726:3, col:42> '_Bool' '='
|   | |-DeclRefExpr 0x561d5f1deed8 <col:3> '_Bool' lvalue Var 0x561d5f1deb98 'weak$$choice0' '_Bool'
|   | `-CallExpr 0x561d5f1def68 <col:19, col:42> '_Bool'
|   |   `-ImplicitCastExpr 0x561d5f1def50 <col:19> '_Bool (*)(void)' <FunctionToPointerDecay>
|   |     `-DeclRefExpr 0x561d5f1deef8 <col:19> '_Bool (void)' Function 0x561d5f182770 '__VERIFIER_nondet_bool' '_Bool (void)'
|   |-BinaryOperator 0x561d5f1df020 <line:727:3, col:42> '_Bool' '='
|   | |-DeclRefExpr 0x561d5f1defa8 <col:3> '_Bool' lvalue Var 0x561d5f1dec88 'weak$$choice2' '_Bool'
|   | `-CallExpr 0x561d5f1df000 <col:19, col:42> '_Bool'
|   |   `-ImplicitCastExpr 0x561d5f1defe8 <col:19> '_Bool (*)(void)' <FunctionToPointerDecay>
|   |     `-DeclRefExpr 0x561d5f1defc8 <col:19> '_Bool (void)' Function 0x561d5f182770 '__VERIFIER_nondet_bool' '_Bool (void)'
|   |-BinaryOperator 0x561d5f1df098 <line:728:3, col:21> '_Bool' '='
|   | |-DeclRefExpr 0x561d5f1df040 <col:3> '_Bool' lvalue Var 0x561d5f1dd378 'z$flush_delayed' '_Bool'
|   | `-ImplicitCastExpr 0x561d5f1df080 <col:21> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x561d5f1df060 <col:21> '_Bool' lvalue Var 0x561d5f1dec88 'weak$$choice2' '_Bool'
|   |-BinaryOperator 0x561d5f1df110 <line:729:3, col:15> 'int' '='
|   | |-DeclRefExpr 0x561d5f1df0b8 <col:3> 'int' lvalue Var 0x561d5f1dd3f8 'z$mem_tmp' 'int'
|   | `-ImplicitCastExpr 0x561d5f1df0f8 <col:15> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x561d5f1df0d8 <col:15> 'int' lvalue Var 0x561d5f1dd2e0 'z' 'int'
|   |-BinaryOperator 0x561d5f1df548 <line:730:3, col:162> 'int' '='
|   | |-DeclRefExpr 0x561d5f1df130 <col:3> 'int' lvalue Var 0x561d5f1dd2e0 'z' 'int'
|   | `-ConditionalOperator 0x561d5f1df518 <col:7, col:162> 'int'
|   |   |-BinaryOperator 0x561d5f1df340 <col:7, col:84> 'int' '||'
|   |   | |-BinaryOperator 0x561d5f1df260 <col:7, col:46> 'int' '||'
|   |   | | |-UnaryOperator 0x561d5f1df188 <col:7, col:8> 'int' prefix '!' cannot overflow
|   |   | | | `-ImplicitCastExpr 0x561d5f1df170 <col:8> '_Bool' <LValueToRValue>
|   |   | | |   `-DeclRefExpr 0x561d5f1df150 <col:8> '_Bool' lvalue Var 0x561d5f1dd9a8 'z$w_buff0_used' '_Bool'
|   |   | | `-BinaryOperator 0x561d5f1df240 <col:26, col:46> 'int' '&&'
|   |   | |   |-UnaryOperator 0x561d5f1df1d8 <col:26, col:27> 'int' prefix '!' cannot overflow
|   |   | |   | `-ImplicitCastExpr 0x561d5f1df1c0 <col:27> '_Bool' <LValueToRValue>
|   |   | |   |   `-DeclRefExpr 0x561d5f1df1a0 <col:27> '_Bool' lvalue Var 0x561d5f1dd4e8 'z$r_buff0_thd1' '_Bool'
|   |   | |   `-UnaryOperator 0x561d5f1df228 <col:45, col:46> 'int' prefix '!' cannot overflow
|   |   | |     `-ImplicitCastExpr 0x561d5f1df210 <col:46> '_Bool' <LValueToRValue>
|   |   | |       `-DeclRefExpr 0x561d5f1df1f0 <col:46> '_Bool' lvalue Var 0x561d5f1deb20 'z$w_buff1_used' '_Bool'
|   |   | `-BinaryOperator 0x561d5f1df320 <col:64, col:84> 'int' '&&'
|   |   |   |-UnaryOperator 0x561d5f1df2b8 <col:64, col:65> 'int' prefix '!' cannot overflow
|   |   |   | `-ImplicitCastExpr 0x561d5f1df2a0 <col:65> '_Bool' <LValueToRValue>
|   |   |   |   `-DeclRefExpr 0x561d5f1df280 <col:65> '_Bool' lvalue Var 0x561d5f1dd4e8 'z$r_buff0_thd1' '_Bool'
|   |   |   `-UnaryOperator 0x561d5f1df308 <col:83, col:84> 'int' prefix '!' cannot overflow
|   |   |     `-ImplicitCastExpr 0x561d5f1df2f0 <col:84> '_Bool' <LValueToRValue>
|   |   |       `-DeclRefExpr 0x561d5f1df2d0 <col:84> '_Bool' lvalue Var 0x561d5f1dd6c8 'z$r_buff1_thd1' '_Bool'
|   |   |-ImplicitCastExpr 0x561d5f1df500 <col:101> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x561d5f1df360 <col:101> 'int' lvalue Var 0x561d5f1dd2e0 'z' 'int'
|   |   `-ParenExpr 0x561d5f1df4e0 <col:105, col:162> 'int'
|   |     `-ConditionalOperator 0x561d5f1df4b0 <col:106, col:153> 'int'
|   |       |-BinaryOperator 0x561d5f1df420 <col:106, col:124> 'int' '&&'
|   |       | |-ImplicitCastExpr 0x561d5f1df3d8 <col:106> 'int' <IntegralCast>
|   |       | | `-ImplicitCastExpr 0x561d5f1df3c0 <col:106> '_Bool' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x561d5f1df380 <col:106> '_Bool' lvalue Var 0x561d5f1dd9a8 'z$w_buff0_used' '_Bool'
|   |       | `-ImplicitCastExpr 0x561d5f1df408 <col:124> 'int' <IntegralCast>
|   |       |   `-ImplicitCastExpr 0x561d5f1df3f0 <col:124> '_Bool' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x561d5f1df3a0 <col:124> '_Bool' lvalue Var 0x561d5f1dd4e8 'z$r_buff0_thd1' '_Bool'
|   |       |-ImplicitCastExpr 0x561d5f1df480 <col:141> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x561d5f1df440 <col:141> 'int' lvalue Var 0x561d5f1dd930 'z$w_buff0' 'int'
|   |       `-ImplicitCastExpr 0x561d5f1df498 <col:153> 'int' <LValueToRValue>
|   |         `-DeclRefExpr 0x561d5f1df460 <col:153> 'int' lvalue Var 0x561d5f1dda28 'z$w_buff1' 'int'
|   |-BinaryOperator 0x561d5f1dfa58 <line:731:3, col:208> 'int' '='
|   | |-DeclRefExpr 0x561d5f1df568 <col:3> 'int' lvalue Var 0x561d5f1dd930 'z$w_buff0' 'int'
|   | `-ConditionalOperator 0x561d5f1dfa28 <col:15, col:208> 'int'
|   |   |-ImplicitCastExpr 0x561d5f1df9f8 <col:15> 'int' <IntegralCast>
|   |   | `-ImplicitCastExpr 0x561d5f1df9e0 <col:15> '_Bool' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x561d5f1df588 <col:15> '_Bool' lvalue Var 0x561d5f1dec88 'weak$$choice2' '_Bool'
|   |   |-ImplicitCastExpr 0x561d5f1dfa10 <col:31> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x561d5f1df5a8 <col:31> 'int' lvalue Var 0x561d5f1dd930 'z$w_buff0' 'int'
|   |   `-ParenExpr 0x561d5f1df9c0 <col:43, col:208> 'int'
|   |     `-ConditionalOperator 0x561d5f1df990 <col:44, col:207> 'int'
|   |       |-BinaryOperator 0x561d5f1df7b8 <col:44, col:121> 'int' '||'
|   |       | |-BinaryOperator 0x561d5f1df6d8 <col:44, col:83> 'int' '||'
|   |       | | |-UnaryOperator 0x561d5f1df600 <col:44, col:45> 'int' prefix '!' cannot overflow
|   |       | | | `-ImplicitCastExpr 0x561d5f1df5e8 <col:45> '_Bool' <LValueToRValue>
|   |       | | |   `-DeclRefExpr 0x561d5f1df5c8 <col:45> '_Bool' lvalue Var 0x561d5f1dd9a8 'z$w_buff0_used' '_Bool'
|   |       | | `-BinaryOperator 0x561d5f1df6b8 <col:63, col:83> 'int' '&&'
|   |       | |   |-UnaryOperator 0x561d5f1df650 <col:63, col:64> 'int' prefix '!' cannot overflow
|   |       | |   | `-ImplicitCastExpr 0x561d5f1df638 <col:64> '_Bool' <LValueToRValue>
|   |       | |   |   `-DeclRefExpr 0x561d5f1df618 <col:64> '_Bool' lvalue Var 0x561d5f1dd4e8 'z$r_buff0_thd1' '_Bool'
|   |       | |   `-UnaryOperator 0x561d5f1df6a0 <col:82, col:83> 'int' prefix '!' cannot overflow
|   |       | |     `-ImplicitCastExpr 0x561d5f1df688 <col:83> '_Bool' <LValueToRValue>
|   |       | |       `-DeclRefExpr 0x561d5f1df668 <col:83> '_Bool' lvalue Var 0x561d5f1deb20 'z$w_buff1_used' '_Bool'
|   |       | `-BinaryOperator 0x561d5f1df798 <col:101, col:121> 'int' '&&'
|   |       |   |-UnaryOperator 0x561d5f1df730 <col:101, col:102> 'int' prefix '!' cannot overflow
|   |       |   | `-ImplicitCastExpr 0x561d5f1df718 <col:102> '_Bool' <LValueToRValue>
|   |       |   |   `-DeclRefExpr 0x561d5f1df6f8 <col:102> '_Bool' lvalue Var 0x561d5f1dd4e8 'z$r_buff0_thd1' '_Bool'
|   |       |   `-UnaryOperator 0x561d5f1df780 <col:120, col:121> 'int' prefix '!' cannot overflow
|   |       |     `-ImplicitCastExpr 0x561d5f1df768 <col:121> '_Bool' <LValueToRValue>
|   |       |       `-DeclRefExpr 0x561d5f1df748 <col:121> '_Bool' lvalue Var 0x561d5f1dd6c8 'z$r_buff1_thd1' '_Bool'
|   |       |-ImplicitCastExpr 0x561d5f1df978 <col:138> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x561d5f1df7d8 <col:138> 'int' lvalue Var 0x561d5f1dd930 'z$w_buff0' 'int'
|   |       `-ParenExpr 0x561d5f1df958 <col:150, col:207> 'int'
|   |         `-ConditionalOperator 0x561d5f1df928 <col:151, col:198> 'int'
|   |           |-BinaryOperator 0x561d5f1df898 <col:151, col:169> 'int' '&&'
|   |           | |-ImplicitCastExpr 0x561d5f1df850 <col:151> 'int' <IntegralCast>
|   |           | | `-ImplicitCastExpr 0x561d5f1df838 <col:151> '_Bool' <LValueToRValue>
|   |           | |   `-DeclRefExpr 0x561d5f1df7f8 <col:151> '_Bool' lvalue Var 0x561d5f1dd9a8 'z$w_buff0_used' '_Bool'
|   |           | `-ImplicitCastExpr 0x561d5f1df880 <col:169> 'int' <IntegralCast>
|   |           |   `-ImplicitCastExpr 0x561d5f1df868 <col:169> '_Bool' <LValueToRValue>
|   |           |     `-DeclRefExpr 0x561d5f1df818 <col:169> '_Bool' lvalue Var 0x561d5f1dd4e8 'z$r_buff0_thd1' '_Bool'
|   |           |-ImplicitCastExpr 0x561d5f1df8f8 <col:186> 'int' <LValueToRValue>
|   |           | `-DeclRefExpr 0x561d5f1df8b8 <col:186> 'int' lvalue Var 0x561d5f1dd930 'z$w_buff0' 'int'
|   |           `-ImplicitCastExpr 0x561d5f1df910 <col:198> 'int' <LValueToRValue>
|   |             `-DeclRefExpr 0x561d5f1df8d8 <col:198> 'int' lvalue Var 0x561d5f1dd930 'z$w_buff0' 'int'
|   |-BinaryOperator 0x561d5f1dff88 <line:732:3, col:208> 'int' '='
|   | |-DeclRefExpr 0x561d5f1dfa78 <col:3> 'int' lvalue Var 0x561d5f1dda28 'z$w_buff1' 'int'
|   | `-ConditionalOperator 0x561d5f1dff58 <col:15, col:208> 'int'
|   |   |-ImplicitCastExpr 0x561d5f1dff28 <col:15> 'int' <IntegralCast>
|   |   | `-ImplicitCastExpr 0x561d5f1dff10 <col:15> '_Bool' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x561d5f1dfa98 <col:15> '_Bool' lvalue Var 0x561d5f1dec88 'weak$$choice2' '_Bool'
|   |   |-ImplicitCastExpr 0x561d5f1dff40 <col:31> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x561d5f1dfab8 <col:31> 'int' lvalue Var 0x561d5f1dda28 'z$w_buff1' 'int'
|   |   `-ParenExpr 0x561d5f1dfef0 <col:43, col:208> 'int'
|   |     `-ConditionalOperator 0x561d5f1dfec0 <col:44, col:207> 'int'
|   |       |-BinaryOperator 0x561d5f1dfce8 <col:44, col:121> 'int' '||'
|   |       | |-BinaryOperator 0x561d5f1dfc08 <col:44, col:83> 'int' '||'
|   |       | | |-UnaryOperator 0x561d5f1dfb30 <col:44, col:45> 'int' prefix '!' cannot overflow
|   |       | | | `-ImplicitCastExpr 0x561d5f1dfaf8 <col:45> '_Bool' <LValueToRValue>
|   |       | | |   `-DeclRefExpr 0x561d5f1dfad8 <col:45> '_Bool' lvalue Var 0x561d5f1dd9a8 'z$w_buff0_used' '_Bool'
|   |       | | `-BinaryOperator 0x561d5f1dfbe8 <col:63, col:83> 'int' '&&'
|   |       | |   |-UnaryOperator 0x561d5f1dfb80 <col:63, col:64> 'int' prefix '!' cannot overflow
|   |       | |   | `-ImplicitCastExpr 0x561d5f1dfb68 <col:64> '_Bool' <LValueToRValue>
|   |       | |   |   `-DeclRefExpr 0x561d5f1dfb48 <col:64> '_Bool' lvalue Var 0x561d5f1dd4e8 'z$r_buff0_thd1' '_Bool'
|   |       | |   `-UnaryOperator 0x561d5f1dfbd0 <col:82, col:83> 'int' prefix '!' cannot overflow
|   |       | |     `-ImplicitCastExpr 0x561d5f1dfbb8 <col:83> '_Bool' <LValueToRValue>
|   |       | |       `-DeclRefExpr 0x561d5f1dfb98 <col:83> '_Bool' lvalue Var 0x561d5f1deb20 'z$w_buff1_used' '_Bool'
|   |       | `-BinaryOperator 0x561d5f1dfcc8 <col:101, col:121> 'int' '&&'
|   |       |   |-UnaryOperator 0x561d5f1dfc60 <col:101, col:102> 'int' prefix '!' cannot overflow
|   |       |   | `-ImplicitCastExpr 0x561d5f1dfc48 <col:102> '_Bool' <LValueToRValue>
|   |       |   |   `-DeclRefExpr 0x561d5f1dfc28 <col:102> '_Bool' lvalue Var 0x561d5f1dd4e8 'z$r_buff0_thd1' '_Bool'
|   |       |   `-UnaryOperator 0x561d5f1dfcb0 <col:120, col:121> 'int' prefix '!' cannot overflow
|   |       |     `-ImplicitCastExpr 0x561d5f1dfc98 <col:121> '_Bool' <LValueToRValue>
|   |       |       `-DeclRefExpr 0x561d5f1dfc78 <col:121> '_Bool' lvalue Var 0x561d5f1dd6c8 'z$r_buff1_thd1' '_Bool'
|   |       |-ImplicitCastExpr 0x561d5f1dfea8 <col:138> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x561d5f1dfd08 <col:138> 'int' lvalue Var 0x561d5f1dda28 'z$w_buff1' 'int'
|   |       `-ParenExpr 0x561d5f1dfe88 <col:150, col:207> 'int'
|   |         `-ConditionalOperator 0x561d5f1dfe58 <col:151, col:198> 'int'
|   |           |-BinaryOperator 0x561d5f1dfdc8 <col:151, col:169> 'int' '&&'
|   |           | |-ImplicitCastExpr 0x561d5f1dfd80 <col:151> 'int' <IntegralCast>
|   |           | | `-ImplicitCastExpr 0x561d5f1dfd68 <col:151> '_Bool' <LValueToRValue>
|   |           | |   `-DeclRefExpr 0x561d5f1dfd28 <col:151> '_Bool' lvalue Var 0x561d5f1dd9a8 'z$w_buff0_used' '_Bool'
|   |           | `-ImplicitCastExpr 0x561d5f1dfdb0 <col:169> 'int' <IntegralCast>
|   |           |   `-ImplicitCastExpr 0x561d5f1dfd98 <col:169> '_Bool' <LValueToRValue>
|   |           |     `-DeclRefExpr 0x561d5f1dfd48 <col:169> '_Bool' lvalue Var 0x561d5f1dd4e8 'z$r_buff0_thd1' '_Bool'
|   |           |-ImplicitCastExpr 0x561d5f1dfe28 <col:186> 'int' <LValueToRValue>
|   |           | `-DeclRefExpr 0x561d5f1dfde8 <col:186> 'int' lvalue Var 0x561d5f1dda28 'z$w_buff1' 'int'
|   |           `-ImplicitCastExpr 0x561d5f1dfe40 <col:198> 'int' <LValueToRValue>
|   |             `-DeclRefExpr 0x561d5f1dfe08 <col:198> 'int' lvalue Var 0x561d5f1dda28 'z$w_buff1' 'int'
|   |-BinaryOperator 0x561d5f1e0530 <line:733:3, col:227> '_Bool' '='
|   | |-DeclRefExpr 0x561d5f1dffa8 <col:3> '_Bool' lvalue Var 0x561d5f1dd9a8 'z$w_buff0_used' '_Bool'
|   | `-ImplicitCastExpr 0x561d5f1e0518 <col:20, col:227> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x561d5f1e04e8 <col:20, col:227> 'int'
|   |     |-ImplicitCastExpr 0x561d5f1e04a0 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x561d5f1e0488 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x561d5f1dffc8 <col:20> '_Bool' lvalue Var 0x561d5f1dec88 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x561d5f1e04d0 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x561d5f1e04b8 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x561d5f1dffe8 <col:36> '_Bool' lvalue Var 0x561d5f1dd9a8 'z$w_buff0_used' '_Bool'
|   |     `-ParenExpr 0x561d5f1e0468 <col:53, col:227> 'int'
|   |       `-ConditionalOperator 0x561d5f1e0438 <col:54, col:226> 'int'
|   |         |-BinaryOperator 0x561d5f1e01f8 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x561d5f1e0118 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x561d5f1e0040 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x561d5f1e0028 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x561d5f1e0008 <col:55> '_Bool' lvalue Var 0x561d5f1dd9a8 'z$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x561d5f1e00f8 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x561d5f1e0090 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x561d5f1e0078 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x561d5f1e0058 <col:74> '_Bool' lvalue Var 0x561d5f1dd4e8 'z$r_buff0_thd1' '_Bool'
|   |         | |   `-UnaryOperator 0x561d5f1e00e0 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x561d5f1e00c8 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x561d5f1e00a8 <col:93> '_Bool' lvalue Var 0x561d5f1deb20 'z$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x561d5f1e01d8 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x561d5f1e0170 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x561d5f1e0158 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x561d5f1e0138 <col:112> '_Bool' lvalue Var 0x561d5f1dd4e8 'z$r_buff0_thd1' '_Bool'
|   |         |   `-UnaryOperator 0x561d5f1e01c0 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x561d5f1e01a8 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x561d5f1e0188 <col:131> '_Bool' lvalue Var 0x561d5f1dd6c8 'z$r_buff1_thd1' '_Bool'
|   |         |-ImplicitCastExpr 0x561d5f1e0420 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x561d5f1e0408 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x561d5f1e0218 <col:148> '_Bool' lvalue Var 0x561d5f1dd9a8 'z$w_buff0_used' '_Bool'
|   |         `-ParenExpr 0x561d5f1e03e8 <col:165, col:226> 'int'
|   |           `-ConditionalOperator 0x561d5f1e03b8 <col:166, col:212> 'int'
|   |             |-BinaryOperator 0x561d5f1e02d8 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x561d5f1e0290 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x561d5f1e0278 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x561d5f1e0238 <col:166> '_Bool' lvalue Var 0x561d5f1dd9a8 'z$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x561d5f1e02c0 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x561d5f1e02a8 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x561d5f1e0258 <col:184> '_Bool' lvalue Var 0x561d5f1dd4e8 'z$r_buff0_thd1' '_Bool'
|   |             |-ImplicitCastExpr 0x561d5f1e0370 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x561d5f1e0328 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x561d5f1e02f8 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x561d5f1e03a0 <col:212> 'int' <IntegralCast>
|   |               `-ImplicitCastExpr 0x561d5f1e0388 <col:212> '_Bool' <LValueToRValue>
|   |                 `-DeclRefExpr 0x561d5f1e0350 <col:212> '_Bool' lvalue Var 0x561d5f1dd9a8 'z$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x561d5f1e0af8 <line:734:3, col:221> '_Bool' '='
|   | |-DeclRefExpr 0x561d5f1e0550 <col:3> '_Bool' lvalue Var 0x561d5f1deb20 'z$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x561d5f1e0ae0 <col:20, col:221> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x561d5f1e0ab0 <col:20, col:221> 'int'
|   |     |-ImplicitCastExpr 0x561d5f1e0a68 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x561d5f1e0a50 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x561d5f1e0570 <col:20> '_Bool' lvalue Var 0x561d5f1dec88 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x561d5f1e0a98 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x561d5f1e0a80 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x561d5f1e0590 <col:36> '_Bool' lvalue Var 0x561d5f1deb20 'z$w_buff1_used' '_Bool'
|   |     `-ParenExpr 0x561d5f1e0a30 <col:53, col:221> 'int'
|   |       `-ConditionalOperator 0x561d5f1e0a00 <col:54, col:220> 'int'
|   |         |-BinaryOperator 0x561d5f1e07a0 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x561d5f1e06c0 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x561d5f1e05e8 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x561d5f1e05d0 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x561d5f1e05b0 <col:55> '_Bool' lvalue Var 0x561d5f1dd9a8 'z$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x561d5f1e06a0 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x561d5f1e0638 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x561d5f1e0620 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x561d5f1e0600 <col:74> '_Bool' lvalue Var 0x561d5f1dd4e8 'z$r_buff0_thd1' '_Bool'
|   |         | |   `-UnaryOperator 0x561d5f1e0688 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x561d5f1e0670 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x561d5f1e0650 <col:93> '_Bool' lvalue Var 0x561d5f1deb20 'z$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x561d5f1e0780 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x561d5f1e0718 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x561d5f1e0700 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x561d5f1e06e0 <col:112> '_Bool' lvalue Var 0x561d5f1dd4e8 'z$r_buff0_thd1' '_Bool'
|   |         |   `-UnaryOperator 0x561d5f1e0768 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x561d5f1e0750 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x561d5f1e0730 <col:131> '_Bool' lvalue Var 0x561d5f1dd6c8 'z$r_buff1_thd1' '_Bool'
|   |         |-ImplicitCastExpr 0x561d5f1e09e8 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x561d5f1e09d0 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x561d5f1e07c0 <col:148> '_Bool' lvalue Var 0x561d5f1deb20 'z$w_buff1_used' '_Bool'
|   |         `-ParenExpr 0x561d5f1e09b0 <col:165, col:220> 'int'
|   |           `-ConditionalOperator 0x561d5f1e0980 <col:166, col:219> 'int'
|   |             |-BinaryOperator 0x561d5f1e0880 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x561d5f1e0838 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x561d5f1e0820 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x561d5f1e07e0 <col:166> '_Bool' lvalue Var 0x561d5f1dd9a8 'z$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x561d5f1e0868 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x561d5f1e0850 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x561d5f1e0800 <col:184> '_Bool' lvalue Var 0x561d5f1dd4e8 'z$r_buff0_thd1' '_Bool'
|   |             |-ImplicitCastExpr 0x561d5f1e0950 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x561d5f1e08d0 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x561d5f1e08a0 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x561d5f1e0968 <col:212, col:219> 'int' <IntegralCast>
|   |               `-CStyleCastExpr 0x561d5f1e0928 <col:212, col:219> '_Bool' <IntegralToBoolean>
|   |                 `-IntegerLiteral 0x561d5f1e08f8 <col:219> 'int' 0
|   |-BinaryOperator 0x561d5f1e10c8 <line:735:3, col:227> '_Bool' '='
|   | |-DeclRefExpr 0x561d5f1e0b40 <col:3> '_Bool' lvalue Var 0x561d5f1dd4e8 'z$r_buff0_thd1' '_Bool'
|   | `-ImplicitCastExpr 0x561d5f1e10b0 <col:20, col:227> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x561d5f1e1080 <col:20, col:227> 'int'
|   |     |-ImplicitCastExpr 0x561d5f1e1038 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x561d5f1e1020 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x561d5f1e0b60 <col:20> '_Bool' lvalue Var 0x561d5f1dec88 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x561d5f1e1068 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x561d5f1e1050 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x561d5f1e0b80 <col:36> '_Bool' lvalue Var 0x561d5f1dd4e8 'z$r_buff0_thd1' '_Bool'
|   |     `-ParenExpr 0x561d5f1e1000 <col:53, col:227> 'int'
|   |       `-ConditionalOperator 0x561d5f1e0fd0 <col:54, col:226> 'int'
|   |         |-BinaryOperator 0x561d5f1e0d90 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x561d5f1e0cb0 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x561d5f1e0bd8 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x561d5f1e0bc0 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x561d5f1e0ba0 <col:55> '_Bool' lvalue Var 0x561d5f1dd9a8 'z$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x561d5f1e0c90 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x561d5f1e0c28 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x561d5f1e0c10 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x561d5f1e0bf0 <col:74> '_Bool' lvalue Var 0x561d5f1dd4e8 'z$r_buff0_thd1' '_Bool'
|   |         | |   `-UnaryOperator 0x561d5f1e0c78 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x561d5f1e0c60 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x561d5f1e0c40 <col:93> '_Bool' lvalue Var 0x561d5f1deb20 'z$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x561d5f1e0d70 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x561d5f1e0d08 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x561d5f1e0cf0 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x561d5f1e0cd0 <col:112> '_Bool' lvalue Var 0x561d5f1dd4e8 'z$r_buff0_thd1' '_Bool'
|   |         |   `-UnaryOperator 0x561d5f1e0d58 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x561d5f1e0d40 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x561d5f1e0d20 <col:131> '_Bool' lvalue Var 0x561d5f1dd6c8 'z$r_buff1_thd1' '_Bool'
|   |         |-ImplicitCastExpr 0x561d5f1e0fb8 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x561d5f1e0fa0 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x561d5f1e0db0 <col:148> '_Bool' lvalue Var 0x561d5f1dd4e8 'z$r_buff0_thd1' '_Bool'
|   |         `-ParenExpr 0x561d5f1e0f80 <col:165, col:226> 'int'
|   |           `-ConditionalOperator 0x561d5f1e0f50 <col:166, col:212> 'int'
|   |             |-BinaryOperator 0x561d5f1e0e70 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x561d5f1e0e28 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x561d5f1e0e10 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x561d5f1e0dd0 <col:166> '_Bool' lvalue Var 0x561d5f1dd9a8 'z$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x561d5f1e0e58 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x561d5f1e0e40 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x561d5f1e0df0 <col:184> '_Bool' lvalue Var 0x561d5f1dd4e8 'z$r_buff0_thd1' '_Bool'
|   |             |-ImplicitCastExpr 0x561d5f1e0f08 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x561d5f1e0ec0 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x561d5f1e0e90 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x561d5f1e0f38 <col:212> 'int' <IntegralCast>
|   |               `-ImplicitCastExpr 0x561d5f1e0f20 <col:212> '_Bool' <LValueToRValue>
|   |                 `-DeclRefExpr 0x561d5f1e0ee8 <col:212> '_Bool' lvalue Var 0x561d5f1dd4e8 'z$r_buff0_thd1' '_Bool'
|   |-BinaryOperator 0x561d5f1e1690 <line:736:3, col:221> '_Bool' '='
|   | |-DeclRefExpr 0x561d5f1e10e8 <col:3> '_Bool' lvalue Var 0x561d5f1dd6c8 'z$r_buff1_thd1' '_Bool'
|   | `-ImplicitCastExpr 0x561d5f1e1678 <col:20, col:221> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x561d5f1e1648 <col:20, col:221> 'int'
|   |     |-ImplicitCastExpr 0x561d5f1e1600 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x561d5f1e15e8 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x561d5f1e1108 <col:20> '_Bool' lvalue Var 0x561d5f1dec88 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x561d5f1e1630 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x561d5f1e1618 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x561d5f1e1128 <col:36> '_Bool' lvalue Var 0x561d5f1dd6c8 'z$r_buff1_thd1' '_Bool'
|   |     `-ParenExpr 0x561d5f1e15c8 <col:53, col:221> 'int'
|   |       `-ConditionalOperator 0x561d5f1e1598 <col:54, col:220> 'int'
|   |         |-BinaryOperator 0x561d5f1e1338 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x561d5f1e1258 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x561d5f1e1180 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x561d5f1e1168 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x561d5f1e1148 <col:55> '_Bool' lvalue Var 0x561d5f1dd9a8 'z$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x561d5f1e1238 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x561d5f1e11d0 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x561d5f1e11b8 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x561d5f1e1198 <col:74> '_Bool' lvalue Var 0x561d5f1dd4e8 'z$r_buff0_thd1' '_Bool'
|   |         | |   `-UnaryOperator 0x561d5f1e1220 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x561d5f1e1208 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x561d5f1e11e8 <col:93> '_Bool' lvalue Var 0x561d5f1deb20 'z$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x561d5f1e1318 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x561d5f1e12b0 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x561d5f1e1298 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x561d5f1e1278 <col:112> '_Bool' lvalue Var 0x561d5f1dd4e8 'z$r_buff0_thd1' '_Bool'
|   |         |   `-UnaryOperator 0x561d5f1e1300 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x561d5f1e12e8 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x561d5f1e12c8 <col:131> '_Bool' lvalue Var 0x561d5f1dd6c8 'z$r_buff1_thd1' '_Bool'
|   |         |-ImplicitCastExpr 0x561d5f1e1580 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x561d5f1e1568 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x561d5f1e1358 <col:148> '_Bool' lvalue Var 0x561d5f1dd6c8 'z$r_buff1_thd1' '_Bool'
|   |         `-ParenExpr 0x561d5f1e1548 <col:165, col:220> 'int'
|   |           `-ConditionalOperator 0x561d5f1e1518 <col:166, col:219> 'int'
|   |             |-BinaryOperator 0x561d5f1e1418 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x561d5f1e13d0 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x561d5f1e13b8 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x561d5f1e1378 <col:166> '_Bool' lvalue Var 0x561d5f1dd9a8 'z$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x561d5f1e1400 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x561d5f1e13e8 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x561d5f1e1398 <col:184> '_Bool' lvalue Var 0x561d5f1dd4e8 'z$r_buff0_thd1' '_Bool'
|   |             |-ImplicitCastExpr 0x561d5f1e14e8 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x561d5f1e1468 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x561d5f1e1438 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x561d5f1e1500 <col:212, col:219> 'int' <IntegralCast>
|   |               `-CStyleCastExpr 0x561d5f1e14c0 <col:212, col:219> '_Bool' <IntegralToBoolean>
|   |                 `-IntegerLiteral 0x561d5f1e1490 <col:219> 'int' 0
|   |-BinaryOperator 0x561d5f1e1728 <line:737:3, col:45> '_Bool' '='
|   | |-DeclRefExpr 0x561d5f1e16b0 <col:3> '_Bool' lvalue Var 0x561d5f1dc990 '__unbuffered_p0_EAX$read_delayed' '_Bool'
|   | `-CStyleCastExpr 0x561d5f1e1700 <col:38, col:45> '_Bool' <IntegralToBoolean>
|   |   `-IntegerLiteral 0x561d5f1e16d0 <col:45> 'int' 1
|   |-BinaryOperator 0x561d5f1e17a0 <line:738:3, col:43> 'int *' '='
|   | |-DeclRefExpr 0x561d5f1e1748 <col:3> 'int *' lvalue Var 0x561d5f1dca10 '__unbuffered_p0_EAX$read_delayed_var' 'int *'
|   | `-UnaryOperator 0x561d5f1e1788 <col:42, col:43> 'int *' prefix '&' cannot overflow
|   |   `-DeclRefExpr 0x561d5f1e1768 <col:43> 'int' lvalue Var 0x561d5f1dd2e0 'z' 'int'
|   |-BinaryOperator 0x561d5f1e1818 <line:739:3, col:25> 'int' '='
|   | |-DeclRefExpr 0x561d5f1e17c0 <col:3> 'int' lvalue Var 0x561d5f1dc440 '__unbuffered_p0_EAX' 'int'
|   | `-ImplicitCastExpr 0x561d5f1e1800 <col:25> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x561d5f1e17e0 <col:25> 'int' lvalue Var 0x561d5f1dd2e0 'z' 'int'
|   |-BinaryOperator 0x561d5f1e1948 <line:740:3, col:37> 'int' '='
|   | |-DeclRefExpr 0x561d5f1e1838 <col:3> 'int' lvalue Var 0x561d5f1dd2e0 'z' 'int'
|   | `-ConditionalOperator 0x561d5f1e1918 <col:7, col:37> 'int'
|   |   |-ImplicitCastExpr 0x561d5f1e18d0 <col:7> 'int' <IntegralCast>
|   |   | `-ImplicitCastExpr 0x561d5f1e18b8 <col:7> '_Bool' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x561d5f1e1858 <col:7> '_Bool' lvalue Var 0x561d5f1dd378 'z$flush_delayed' '_Bool'
|   |   |-ImplicitCastExpr 0x561d5f1e18e8 <col:25> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x561d5f1e1878 <col:25> 'int' lvalue Var 0x561d5f1dd3f8 'z$mem_tmp' 'int'
|   |   `-ImplicitCastExpr 0x561d5f1e1900 <col:37> 'int' <LValueToRValue>
|   |     `-DeclRefExpr 0x561d5f1e1898 <col:37> 'int' lvalue Var 0x561d5f1dd2e0 'z' 'int'
|   |-BinaryOperator 0x561d5f1e19e0 <line:741:3, col:28> '_Bool' '='
|   | |-DeclRefExpr 0x561d5f1e1968 <col:3> '_Bool' lvalue Var 0x561d5f1dd378 'z$flush_delayed' '_Bool'
|   | `-CStyleCastExpr 0x561d5f1e19b8 <col:21, col:28> '_Bool' <IntegralToBoolean>
|   |   `-IntegerLiteral 0x561d5f1e1988 <col:28> 'int' 0
|   |-CallExpr 0x561d5f1e1a38 <line:742:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x561d5f1e1a20 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x561d5f1e1a00 <col:3> 'void ()' Function 0x561d5f183060 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x561d5f1e1a90 <line:743:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x561d5f1e1a78 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x561d5f1e1a58 <col:3> 'void ()' Function 0x561d5f182fa0 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x561d5f1e1af0 <line:744:3, col:7> 'int' '='
|   | |-DeclRefExpr 0x561d5f1e1ab0 <col:3> 'int' lvalue Var 0x561d5f1dd0a0 'x' 'int'
|   | `-IntegerLiteral 0x561d5f1e1ad0 <col:7> 'int' 1
|   |-CallExpr 0x561d5f1e1b68 <line:745:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x561d5f1e1b50 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x561d5f1e1b10 <col:3> 'void ()' Function 0x561d5f183060 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x561d5f1e1bc0 <line:746:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x561d5f1e1ba8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x561d5f1e1b88 <col:3> 'void ()' Function 0x561d5f182fa0 '__VERIFIER_atomic_begin' 'void ()'
|   |-CallExpr 0x561d5f1e1c18 <line:747:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x561d5f1e1c00 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x561d5f1e1be0 <col:3> 'void ()' Function 0x561d5f183060 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x561d5f1e1c70 <line:748:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x561d5f1e1c58 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x561d5f1e1c38 <col:3> 'void ()' Function 0x561d5f182fa0 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x561d5f1e1d28 <line:749:3, col:41> 'int' '='
|   | |-DeclRefExpr 0x561d5f1e1c90 <col:3> 'int' lvalue Var 0x561d5f1dc320 '__unbuffered_cnt' 'int'
|   | `-BinaryOperator 0x561d5f1e1d08 <col:22, col:41> 'int' '+'
|   |   |-ImplicitCastExpr 0x561d5f1e1cf0 <col:22> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x561d5f1e1cb0 <col:22> 'int' lvalue Var 0x561d5f1dc320 '__unbuffered_cnt' 'int'
|   |   `-IntegerLiteral 0x561d5f1e1cd0 <col:41> 'int' 1
|   |-CallExpr 0x561d5f1e1d80 <line:750:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x561d5f1e1d68 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x561d5f1e1d48 <col:3> 'void ()' Function 0x561d5f183060 '__VERIFIER_atomic_end' 'void ()'
|   `-ReturnStmt 0x561d5f1e1e28 <line:751:3, col:36>
|     `-CallExpr 0x561d5f1e1e08 <col:10, col:36> 'void *'
|       `-ImplicitCastExpr 0x561d5f1e1df0 <col:10> 'void *(*)(void)' <FunctionToPointerDecay>
|         `-DeclRefExpr 0x561d5f1e1da0 <col:10> 'void *(void)' Function 0x561d5f182ab8 '__VERIFIER_nondet_pointer' 'void *(void)'
|-FunctionDecl 0x561d5f1e1fd0 prev 0x561d5f1dbe48 <line:753:1, line:767:1> line:753:8 used P1 'void *(void *)'
| |-ParmVarDecl 0x561d5f1e1f38 <col:11, col:17> col:17 arg 'void *'
| `-CompoundStmt 0x561d5f1e2530 <line:754:1, line:767:1>
|   |-CallExpr 0x561d5f1e20b0 <line:755:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x561d5f1e2098 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x561d5f1e2078 <col:3> 'void ()' Function 0x561d5f182fa0 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x561d5f1e2128 <line:756:3, col:25> 'int' '='
|   | |-DeclRefExpr 0x561d5f1e20d0 <col:3> 'int' lvalue Var 0x561d5f1dcd70 '__unbuffered_p1_EAX' 'int'
|   | `-ImplicitCastExpr 0x561d5f1e2110 <col:25> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x561d5f1e20f0 <col:25> 'int' lvalue Var 0x561d5f1dd0a0 'x' 'int'
|   |-CallExpr 0x561d5f1e2180 <line:757:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x561d5f1e2168 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x561d5f1e2148 <col:3> 'void ()' Function 0x561d5f183060 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x561d5f1e21d8 <line:758:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x561d5f1e21c0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x561d5f1e21a0 <col:3> 'void ()' Function 0x561d5f182fa0 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x561d5f1e2238 <line:759:3, col:7> 'int' '='
|   | |-DeclRefExpr 0x561d5f1e21f8 <col:3> 'int' lvalue Var 0x561d5f1dd1c0 'y' 'int'
|   | `-IntegerLiteral 0x561d5f1e2218 <col:7> 'int' 1
|   |-CallExpr 0x561d5f1e2290 <line:760:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x561d5f1e2278 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x561d5f1e2258 <col:3> 'void ()' Function 0x561d5f183060 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x561d5f1e22e8 <line:761:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x561d5f1e22d0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x561d5f1e22b0 <col:3> 'void ()' Function 0x561d5f182fa0 '__VERIFIER_atomic_begin' 'void ()'
|   |-CallExpr 0x561d5f1e2340 <line:762:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x561d5f1e2328 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x561d5f1e2308 <col:3> 'void ()' Function 0x561d5f183060 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x561d5f1e2398 <line:763:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x561d5f1e2380 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x561d5f1e2360 <col:3> 'void ()' Function 0x561d5f182fa0 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x561d5f1e2450 <line:764:3, col:41> 'int' '='
|   | |-DeclRefExpr 0x561d5f1e23b8 <col:3> 'int' lvalue Var 0x561d5f1dc320 '__unbuffered_cnt' 'int'
|   | `-BinaryOperator 0x561d5f1e2430 <col:22, col:41> 'int' '+'
|   |   |-ImplicitCastExpr 0x561d5f1e2418 <col:22> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x561d5f1e23d8 <col:22> 'int' lvalue Var 0x561d5f1dc320 '__unbuffered_cnt' 'int'
|   |   `-IntegerLiteral 0x561d5f1e23f8 <col:41> 'int' 1
|   |-CallExpr 0x561d5f1e24a8 <line:765:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x561d5f1e2490 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x561d5f1e2470 <col:3> 'void ()' Function 0x561d5f183060 '__VERIFIER_atomic_end' 'void ()'
|   `-ReturnStmt 0x561d5f1e2520 <line:766:3, col:36>
|     `-CallExpr 0x561d5f1e2500 <col:10, col:36> 'void *'
|       `-ImplicitCastExpr 0x561d5f1e24e8 <col:10> 'void *(*)(void)' <FunctionToPointerDecay>
|         `-DeclRefExpr 0x561d5f1e24c8 <col:10> 'void *(void)' Function 0x561d5f182ab8 '__VERIFIER_nondet_pointer' 'void *(void)'
|-FunctionDecl 0x561d5f1e2650 prev 0x561d5f1dbfa0 <line:768:1, line:787:1> line:768:8 used P2 'void *(void *)'
| |-ParmVarDecl 0x561d5f1e25b8 <col:11, col:17> col:17 arg 'void *'
| `-CompoundStmt 0x561d5f1e3890 <line:769:1, line:787:1>
|   |-CallExpr 0x561d5f1e2730 <line:770:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x561d5f1e2718 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x561d5f1e26f8 <col:3> 'void ()' Function 0x561d5f182fa0 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x561d5f1e27a8 <line:771:3, col:25> 'int' '='
|   | |-DeclRefExpr 0x561d5f1e2750 <col:3> 'int' lvalue Var 0x561d5f1dce90 '__unbuffered_p2_EAX' 'int'
|   | `-ImplicitCastExpr 0x561d5f1e2790 <col:25> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x561d5f1e2770 <col:25> 'int' lvalue Var 0x561d5f1dd1c0 'y' 'int'
|   |-CallExpr 0x561d5f1e2800 <line:772:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x561d5f1e27e8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x561d5f1e27c8 <col:3> 'void ()' Function 0x561d5f183060 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x561d5f1e2858 <line:773:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x561d5f1e2840 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x561d5f1e2820 <col:3> 'void ()' Function 0x561d5f182fa0 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x561d5f1e28b8 <line:774:3, col:7> 'int' '='
|   | |-DeclRefExpr 0x561d5f1e2878 <col:3> 'int' lvalue Var 0x561d5f1dd2e0 'z' 'int'
|   | `-IntegerLiteral 0x561d5f1e2898 <col:7> 'int' 1
|   |-CallExpr 0x561d5f1e2910 <line:775:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x561d5f1e28f8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x561d5f1e28d8 <col:3> 'void ()' Function 0x561d5f183060 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x561d5f1e2968 <line:776:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x561d5f1e2950 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x561d5f1e2930 <col:3> 'void ()' Function 0x561d5f182fa0 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x561d5f1e2c68 <line:777:3, col:103> 'int' '='
|   | |-DeclRefExpr 0x561d5f1e2988 <col:3> 'int' lvalue Var 0x561d5f1dd2e0 'z' 'int'
|   | `-ConditionalOperator 0x561d5f1e2c38 <col:7, col:103> 'int'
|   |   |-BinaryOperator 0x561d5f1e2a48 <col:7, col:25> 'int' '&&'
|   |   | |-ImplicitCastExpr 0x561d5f1e2a00 <col:7> 'int' <IntegralCast>
|   |   | | `-ImplicitCastExpr 0x561d5f1e29e8 <col:7> '_Bool' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x561d5f1e29a8 <col:7> '_Bool' lvalue Var 0x561d5f1dd9a8 'z$w_buff0_used' '_Bool'
|   |   | `-ImplicitCastExpr 0x561d5f1e2a30 <col:25> 'int' <IntegralCast>
|   |   |   `-ImplicitCastExpr 0x561d5f1e2a18 <col:25> '_Bool' <LValueToRValue>
|   |   |     `-DeclRefExpr 0x561d5f1e29c8 <col:25> '_Bool' lvalue Var 0x561d5f1dd5d8 'z$r_buff0_thd3' '_Bool'
|   |   |-ImplicitCastExpr 0x561d5f1e2c20 <col:42> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x561d5f1e2a68 <col:42> 'int' lvalue Var 0x561d5f1dd930 'z$w_buff0' 'int'
|   |   `-ParenExpr 0x561d5f1e2c00 <col:54, col:103> 'int'
|   |     `-ConditionalOperator 0x561d5f1e2bd0 <col:55, col:102> 'int'
|   |       |-BinaryOperator 0x561d5f1e2b28 <col:55, col:73> 'int' '&&'
|   |       | |-ImplicitCastExpr 0x561d5f1e2ae0 <col:55> 'int' <IntegralCast>
|   |       | | `-ImplicitCastExpr 0x561d5f1e2ac8 <col:55> '_Bool' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x561d5f1e2a88 <col:55> '_Bool' lvalue Var 0x561d5f1deb20 'z$w_buff1_used' '_Bool'
|   |       | `-ImplicitCastExpr 0x561d5f1e2b10 <col:73> 'int' <IntegralCast>
|   |       |   `-ImplicitCastExpr 0x561d5f1e2af8 <col:73> '_Bool' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x561d5f1e2aa8 <col:73> '_Bool' lvalue Var 0x561d5f1dd7b8 'z$r_buff1_thd3' '_Bool'
|   |       |-ImplicitCastExpr 0x561d5f1e2ba0 <col:90> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x561d5f1e2b60 <col:90> 'int' lvalue Var 0x561d5f1dda28 'z$w_buff1' 'int'
|   |       `-ImplicitCastExpr 0x561d5f1e2bb8 <col:102> 'int' <LValueToRValue>
|   |         `-DeclRefExpr 0x561d5f1e2b80 <col:102> 'int' lvalue Var 0x561d5f1dd2e0 'z' 'int'
|   |-BinaryOperator 0x561d5f1e2e70 <line:778:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x561d5f1e2c88 <col:3> '_Bool' lvalue Var 0x561d5f1dd9a8 'z$w_buff0_used' '_Bool'
|   | `-ImplicitCastExpr 0x561d5f1e2e58 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x561d5f1e2e28 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x561d5f1e2d48 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x561d5f1e2d00 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x561d5f1e2ce8 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x561d5f1e2ca8 <col:20> '_Bool' lvalue Var 0x561d5f1dd9a8 'z$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x561d5f1e2d30 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x561d5f1e2d18 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x561d5f1e2cc8 <col:38> '_Bool' lvalue Var 0x561d5f1dd5d8 'z$r_buff0_thd3' '_Bool'
|   |     |-ImplicitCastExpr 0x561d5f1e2de0 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x561d5f1e2d98 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x561d5f1e2d68 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x561d5f1e2e10 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x561d5f1e2df8 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x561d5f1e2dc0 <col:66> '_Bool' lvalue Var 0x561d5f1dd9a8 'z$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x561d5f1e3158 <line:779:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x561d5f1e2e90 <col:3> '_Bool' lvalue Var 0x561d5f1deb20 'z$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x561d5f1e3140 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x561d5f1e3110 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x561d5f1e3030 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x561d5f1e2f50 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x561d5f1e2f08 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x561d5f1e2ef0 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x561d5f1e2eb0 <col:20> '_Bool' lvalue Var 0x561d5f1dd9a8 'z$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x561d5f1e2f38 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x561d5f1e2f20 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x561d5f1e2ed0 <col:38> '_Bool' lvalue Var 0x561d5f1dd5d8 'z$r_buff0_thd3' '_Bool'
|   |     | `-BinaryOperator 0x561d5f1e3010 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x561d5f1e2fc8 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x561d5f1e2fb0 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x561d5f1e2f70 <col:56> '_Bool' lvalue Var 0x561d5f1deb20 'z$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x561d5f1e2ff8 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x561d5f1e2fe0 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x561d5f1e2f90 <col:74> '_Bool' lvalue Var 0x561d5f1dd7b8 'z$r_buff1_thd3' '_Bool'
|   |     |-ImplicitCastExpr 0x561d5f1e30c8 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x561d5f1e3080 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x561d5f1e3050 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x561d5f1e30f8 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x561d5f1e30e0 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x561d5f1e30a8 <col:102> '_Bool' lvalue Var 0x561d5f1deb20 'z$w_buff1_used' '_Bool'
|   |-BinaryOperator 0x561d5f1e3360 <line:780:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x561d5f1e3178 <col:3> '_Bool' lvalue Var 0x561d5f1dd5d8 'z$r_buff0_thd3' '_Bool'
|   | `-ImplicitCastExpr 0x561d5f1e3348 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x561d5f1e3318 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x561d5f1e3238 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x561d5f1e31f0 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x561d5f1e31d8 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x561d5f1e3198 <col:20> '_Bool' lvalue Var 0x561d5f1dd9a8 'z$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x561d5f1e3220 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x561d5f1e3208 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x561d5f1e31b8 <col:38> '_Bool' lvalue Var 0x561d5f1dd5d8 'z$r_buff0_thd3' '_Bool'
|   |     |-ImplicitCastExpr 0x561d5f1e32d0 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x561d5f1e3288 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x561d5f1e3258 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x561d5f1e3300 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x561d5f1e32e8 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x561d5f1e32b0 <col:66> '_Bool' lvalue Var 0x561d5f1dd5d8 'z$r_buff0_thd3' '_Bool'
|   |-BinaryOperator 0x561d5f1e3648 <line:781:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x561d5f1e3380 <col:3> '_Bool' lvalue Var 0x561d5f1dd7b8 'z$r_buff1_thd3' '_Bool'
|   | `-ImplicitCastExpr 0x561d5f1e3630 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x561d5f1e3600 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x561d5f1e3520 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x561d5f1e3440 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x561d5f1e33f8 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x561d5f1e33e0 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x561d5f1e33a0 <col:20> '_Bool' lvalue Var 0x561d5f1dd9a8 'z$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x561d5f1e3428 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x561d5f1e3410 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x561d5f1e33c0 <col:38> '_Bool' lvalue Var 0x561d5f1dd5d8 'z$r_buff0_thd3' '_Bool'
|   |     | `-BinaryOperator 0x561d5f1e3500 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x561d5f1e34b8 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x561d5f1e34a0 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x561d5f1e3460 <col:56> '_Bool' lvalue Var 0x561d5f1deb20 'z$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x561d5f1e34e8 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x561d5f1e34d0 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x561d5f1e3480 <col:74> '_Bool' lvalue Var 0x561d5f1dd7b8 'z$r_buff1_thd3' '_Bool'
|   |     |-ImplicitCastExpr 0x561d5f1e35b8 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x561d5f1e3570 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x561d5f1e3540 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x561d5f1e35e8 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x561d5f1e35d0 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x561d5f1e3598 <col:102> '_Bool' lvalue Var 0x561d5f1dd7b8 'z$r_buff1_thd3' '_Bool'
|   |-CallExpr 0x561d5f1e36a0 <line:782:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x561d5f1e3688 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x561d5f1e3668 <col:3> 'void ()' Function 0x561d5f183060 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x561d5f1e36f8 <line:783:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x561d5f1e36e0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x561d5f1e36c0 <col:3> 'void ()' Function 0x561d5f182fa0 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x561d5f1e37b0 <line:784:3, col:41> 'int' '='
|   | |-DeclRefExpr 0x561d5f1e3718 <col:3> 'int' lvalue Var 0x561d5f1dc320 '__unbuffered_cnt' 'int'
|   | `-BinaryOperator 0x561d5f1e3790 <col:22, col:41> 'int' '+'
|   |   |-ImplicitCastExpr 0x561d5f1e3778 <col:22> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x561d5f1e3738 <col:22> 'int' lvalue Var 0x561d5f1dc320 '__unbuffered_cnt' 'int'
|   |   `-IntegerLiteral 0x561d5f1e3758 <col:41> 'int' 1
|   |-CallExpr 0x561d5f1e3808 <line:785:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x561d5f1e37f0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x561d5f1e37d0 <col:3> 'void ()' Function 0x561d5f183060 '__VERIFIER_atomic_end' 'void ()'
|   `-ReturnStmt 0x561d5f1e3880 <line:786:3, col:36>
|     `-CallExpr 0x561d5f1e3860 <col:10, col:36> 'void *'
|       `-ImplicitCastExpr 0x561d5f1e3848 <col:10> 'void *(*)(void)' <FunctionToPointerDecay>
|         `-DeclRefExpr 0x561d5f1e3828 <col:10> 'void *(void)' Function 0x561d5f182ab8 '__VERIFIER_nondet_pointer' 'void *(void)'
|-FunctionDecl 0x561d5f1e3948 prev 0x561d5f1dc068 <line:788:1, line:790:1> line:788:6 fence 'void ()'
| `-CompoundStmt 0x561d5f1e39e8 <line:789:1, line:790:1>
|-FunctionDecl 0x561d5f1e3a18 prev 0x561d5f1dc128 <line:791:1, line:793:1> line:791:6 isync 'void ()'
| `-CompoundStmt 0x561d5f1e3ab8 <line:792:1, line:793:1>
|-FunctionDecl 0x561d5f1e3b70 prev 0x561d5f1dc1e8 <line:794:1, line:796:1> line:794:6 lwfence 'void ()'
| `-CompoundStmt 0x561d5f1e3c10 <line:795:1, line:796:1>
`-FunctionDecl 0x561d5f1e3c78 <line:797:1, line:823:1> line:797:5 main 'int ()'
  `-CompoundStmt 0x561d5f1e5bd8 <line:798:1, line:823:1>
    |-DeclStmt 0x561d5f1e3d90 <line:799:3, col:18>
    | `-VarDecl 0x561d5f1e3d28 <col:3, col:13> col:13 used t1951 'pthread_t':'unsigned long'
    |-CallExpr 0x561d5f1e3f98 <line:800:3, col:54> 'int'
    | |-ImplicitCastExpr 0x561d5f1e3f80 <col:3> 'int (*)(pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x561d5f1e3da8 <col:3> 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' Function 0x561d5f1c35b8 'pthread_create' 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)'
    | |-UnaryOperator 0x561d5f1e3de8 <col:18, col:19> 'pthread_t *' prefix '&' cannot overflow
    | | `-DeclRefExpr 0x561d5f1e3dc8 <col:19> 'pthread_t':'unsigned long' lvalue Var 0x561d5f1e3d28 't1951' 'pthread_t':'unsigned long'
    | |-ImplicitCastExpr 0x561d5f1e3fd8 <col:26, col:36> 'const pthread_attr_t *' <NullToPointer>
    | | `-ParenExpr 0x561d5f1e3e60 <col:26, col:36> 'void *'
    | |   `-CStyleCastExpr 0x561d5f1e3e38 <col:27, col:35> 'void *' <NullToPointer>
    | |     `-IntegerLiteral 0x561d5f1e3e00 <col:35> 'int' 0
    | |-ImplicitCastExpr 0x561d5f1e3ff0 <col:39> 'void *(*)(void *)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x561d5f1e3e80 <col:39> 'void *(void *)' Function 0x561d5f1deda0 'P0' 'void *(void *)'
    | `-ParenExpr 0x561d5f1e3f00 <col:43, col:53> 'void *'
    |   `-CStyleCastExpr 0x561d5f1e3ed8 <col:44, col:52> 'void *' <NullToPointer>
    |     `-IntegerLiteral 0x561d5f1e3ea0 <col:52> 'int' 0
    |-DeclStmt 0x561d5f1e4080 <line:801:3, col:18>
    | `-VarDecl 0x561d5f1e4018 <col:3, col:13> col:13 used t1952 'pthread_t':'unsigned long'
    |-CallExpr 0x561d5f1e4228 <line:802:3, col:54> 'int'
    | |-ImplicitCastExpr 0x561d5f1e4210 <col:3> 'int (*)(pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x561d5f1e4098 <col:3> 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' Function 0x561d5f1c35b8 'pthread_create' 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)'
    | |-UnaryOperator 0x561d5f1e40d8 <col:18, col:19> 'pthread_t *' prefix '&' cannot overflow
    | | `-DeclRefExpr 0x561d5f1e40b8 <col:19> 'pthread_t':'unsigned long' lvalue Var 0x561d5f1e4018 't1952' 'pthread_t':'unsigned long'
    | |-ImplicitCastExpr 0x561d5f1e4268 <col:26, col:36> 'const pthread_attr_t *' <NullToPointer>
    | | `-ParenExpr 0x561d5f1e4150 <col:26, col:36> 'void *'
    | |   `-CStyleCastExpr 0x561d5f1e4128 <col:27, col:35> 'void *' <NullToPointer>
    | |     `-IntegerLiteral 0x561d5f1e40f0 <col:35> 'int' 0
    | |-ImplicitCastExpr 0x561d5f1e4280 <col:39> 'void *(*)(void *)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x561d5f1e4170 <col:39> 'void *(void *)' Function 0x561d5f1e1fd0 'P1' 'void *(void *)'
    | `-ParenExpr 0x561d5f1e41f0 <col:43, col:53> 'void *'
    |   `-CStyleCastExpr 0x561d5f1e41c8 <col:44, col:52> 'void *' <NullToPointer>
    |     `-IntegerLiteral 0x561d5f1e4190 <col:52> 'int' 0
    |-DeclStmt 0x561d5f1e4310 <line:803:3, col:18>
    | `-VarDecl 0x561d5f1e42a8 <col:3, col:13> col:13 used t1953 'pthread_t':'unsigned long'
    |-CallExpr 0x561d5f1e44b8 <line:804:3, col:54> 'int'
    | |-ImplicitCastExpr 0x561d5f1e44a0 <col:3> 'int (*)(pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x561d5f1e4328 <col:3> 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' Function 0x561d5f1c35b8 'pthread_create' 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)'
    | |-UnaryOperator 0x561d5f1e4368 <col:18, col:19> 'pthread_t *' prefix '&' cannot overflow
    | | `-DeclRefExpr 0x561d5f1e4348 <col:19> 'pthread_t':'unsigned long' lvalue Var 0x561d5f1e42a8 't1953' 'pthread_t':'unsigned long'
    | |-ImplicitCastExpr 0x561d5f1e44f8 <col:26, col:36> 'const pthread_attr_t *' <NullToPointer>
    | | `-ParenExpr 0x561d5f1e43e0 <col:26, col:36> 'void *'
    | |   `-CStyleCastExpr 0x561d5f1e43b8 <col:27, col:35> 'void *' <NullToPointer>
    | |     `-IntegerLiteral 0x561d5f1e4380 <col:35> 'int' 0
    | |-ImplicitCastExpr 0x561d5f1e4510 <col:39> 'void *(*)(void *)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x561d5f1e4400 <col:39> 'void *(void *)' Function 0x561d5f1e2650 'P2' 'void *(void *)'
    | `-ParenExpr 0x561d5f1e4480 <col:43, col:53> 'void *'
    |   `-CStyleCastExpr 0x561d5f1e4458 <col:44, col:52> 'void *' <NullToPointer>
    |     `-IntegerLiteral 0x561d5f1e4420 <col:52> 'int' 0
    |-CallExpr 0x561d5f1e4560 <line:805:3, col:27> 'void'
    | `-ImplicitCastExpr 0x561d5f1e4548 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x561d5f1e4528 <col:3> 'void ()' Function 0x561d5f182fa0 '__VERIFIER_atomic_begin' 'void ()'
    |-BinaryOperator 0x561d5f1e4630 <line:806:3, col:41> '_Bool' '='
    | |-DeclRefExpr 0x561d5f1e4580 <col:3> '_Bool' lvalue Var 0x561d5f1dcf28 'main$tmp_guard0' '_Bool'
    | `-ImplicitCastExpr 0x561d5f1e4618 <col:21, col:41> '_Bool' <IntegralToBoolean>
    |   `-BinaryOperator 0x561d5f1e45f8 <col:21, col:41> 'int' '=='
    |     |-ImplicitCastExpr 0x561d5f1e45e0 <col:21> 'int' <LValueToRValue>
    |     | `-DeclRefExpr 0x561d5f1e45a0 <col:21> 'int' lvalue Var 0x561d5f1dc320 '__unbuffered_cnt' 'int'
    |     `-IntegerLiteral 0x561d5f1e45c0 <col:41> 'int' 3
    |-CallExpr 0x561d5f1e4688 <line:807:3, col:25> 'void'
    | `-ImplicitCastExpr 0x561d5f1e4670 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x561d5f1e4650 <col:3> 'void ()' Function 0x561d5f183060 '__VERIFIER_atomic_end' 'void ()'
    |-CallExpr 0x561d5f1e4738 <line:808:3, col:36> 'void'
    | |-ImplicitCastExpr 0x561d5f1e4720 <col:3> 'void (*)(int)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x561d5f1e46a8 <col:3> 'void (int)' Function 0x561d5f182940 '__VERIFIER_assume' 'void (int)'
    | `-ImplicitCastExpr 0x561d5f1e4778 <col:21> 'int' <IntegralCast>
    |   `-ImplicitCastExpr 0x561d5f1e4760 <col:21> '_Bool' <LValueToRValue>
    |     `-DeclRefExpr 0x561d5f1e46c8 <col:21> '_Bool' lvalue Var 0x561d5f1dcf28 'main$tmp_guard0' '_Bool'
    |-CallExpr 0x561d5f1e47c8 <line:809:3, col:27> 'void'
    | `-ImplicitCastExpr 0x561d5f1e47b0 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x561d5f1e4790 <col:3> 'void ()' Function 0x561d5f182fa0 '__VERIFIER_atomic_begin' 'void ()'
    |-BinaryOperator 0x561d5f1e4ab0 <line:810:3, col:103> 'int' '='
    | |-DeclRefExpr 0x561d5f1e47e8 <col:3> 'int' lvalue Var 0x561d5f1dd2e0 'z' 'int'
    | `-ConditionalOperator 0x561d5f1e4a80 <col:7, col:103> 'int'
    |   |-BinaryOperator 0x561d5f1e48a8 <col:7, col:25> 'int' '&&'
    |   | |-ImplicitCastExpr 0x561d5f1e4860 <col:7> 'int' <IntegralCast>
    |   | | `-ImplicitCastExpr 0x561d5f1e4848 <col:7> '_Bool' <LValueToRValue>
    |   | |   `-DeclRefExpr 0x561d5f1e4808 <col:7> '_Bool' lvalue Var 0x561d5f1dd9a8 'z$w_buff0_used' '_Bool'
    |   | `-ImplicitCastExpr 0x561d5f1e4890 <col:25> 'int' <IntegralCast>
    |   |   `-ImplicitCastExpr 0x561d5f1e4878 <col:25> '_Bool' <LValueToRValue>
    |   |     `-DeclRefExpr 0x561d5f1e4828 <col:25> '_Bool' lvalue Var 0x561d5f1dd470 'z$r_buff0_thd0' '_Bool'
    |   |-ImplicitCastExpr 0x561d5f1e4a68 <col:42> 'int' <LValueToRValue>
    |   | `-DeclRefExpr 0x561d5f1e48c8 <col:42> 'int' lvalue Var 0x561d5f1dd930 'z$w_buff0' 'int'
    |   `-ParenExpr 0x561d5f1e4a48 <col:54, col:103> 'int'
    |     `-ConditionalOperator 0x561d5f1e4a18 <col:55, col:102> 'int'
    |       |-BinaryOperator 0x561d5f1e4988 <col:55, col:73> 'int' '&&'
    |       | |-ImplicitCastExpr 0x561d5f1e4940 <col:55> 'int' <IntegralCast>
    |       | | `-ImplicitCastExpr 0x561d5f1e4928 <col:55> '_Bool' <LValueToRValue>
    |       | |   `-DeclRefExpr 0x561d5f1e48e8 <col:55> '_Bool' lvalue Var 0x561d5f1deb20 'z$w_buff1_used' '_Bool'
    |       | `-ImplicitCastExpr 0x561d5f1e4970 <col:73> 'int' <IntegralCast>
    |       |   `-ImplicitCastExpr 0x561d5f1e4958 <col:73> '_Bool' <LValueToRValue>
    |       |     `-DeclRefExpr 0x561d5f1e4908 <col:73> '_Bool' lvalue Var 0x561d5f1dd650 'z$r_buff1_thd0' '_Bool'
    |       |-ImplicitCastExpr 0x561d5f1e49e8 <col:90> 'int' <LValueToRValue>
    |       | `-DeclRefExpr 0x561d5f1e49a8 <col:90> 'int' lvalue Var 0x561d5f1dda28 'z$w_buff1' 'int'
    |       `-ImplicitCastExpr 0x561d5f1e4a00 <col:102> 'int' <LValueToRValue>
    |         `-DeclRefExpr 0x561d5f1e49c8 <col:102> 'int' lvalue Var 0x561d5f1dd2e0 'z' 'int'
    |-BinaryOperator 0x561d5f1e4cd8 <line:811:3, col:66> '_Bool' '='
    | |-DeclRefExpr 0x561d5f1e4ad0 <col:3> '_Bool' lvalue Var 0x561d5f1dd9a8 'z$w_buff0_used' '_Bool'
    | `-ImplicitCastExpr 0x561d5f1e4cc0 <col:20, col:66> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x561d5f1e4c90 <col:20, col:66> 'int'
    |     |-BinaryOperator 0x561d5f1e4bb0 <col:20, col:38> 'int' '&&'
    |     | |-ImplicitCastExpr 0x561d5f1e4b48 <col:20> 'int' <IntegralCast>
    |     | | `-ImplicitCastExpr 0x561d5f1e4b30 <col:20> '_Bool' <LValueToRValue>
    |     | |   `-DeclRefExpr 0x561d5f1e4af0 <col:20> '_Bool' lvalue Var 0x561d5f1dd9a8 'z$w_buff0_used' '_Bool'
    |     | `-ImplicitCastExpr 0x561d5f1e4b98 <col:38> 'int' <IntegralCast>
    |     |   `-ImplicitCastExpr 0x561d5f1e4b80 <col:38> '_Bool' <LValueToRValue>
    |     |     `-DeclRefExpr 0x561d5f1e4b10 <col:38> '_Bool' lvalue Var 0x561d5f1dd470 'z$r_buff0_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x561d5f1e4c48 <col:55, col:62> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x561d5f1e4c00 <col:55, col:62> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x561d5f1e4bd0 <col:62> 'int' 0
    |     `-ImplicitCastExpr 0x561d5f1e4c78 <col:66> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x561d5f1e4c60 <col:66> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x561d5f1e4c28 <col:66> '_Bool' lvalue Var 0x561d5f1dd9a8 'z$w_buff0_used' '_Bool'
    |-BinaryOperator 0x561d5f1e4fc0 <line:812:3, col:102> '_Bool' '='
    | |-DeclRefExpr 0x561d5f1e4cf8 <col:3> '_Bool' lvalue Var 0x561d5f1deb20 'z$w_buff1_used' '_Bool'
    | `-ImplicitCastExpr 0x561d5f1e4fa8 <col:20, col:102> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x561d5f1e4f78 <col:20, col:102> 'int'
    |     |-BinaryOperator 0x561d5f1e4e98 <col:20, col:74> 'int' '||'
    |     | |-BinaryOperator 0x561d5f1e4db8 <col:20, col:38> 'int' '&&'
    |     | | |-ImplicitCastExpr 0x561d5f1e4d70 <col:20> 'int' <IntegralCast>
    |     | | | `-ImplicitCastExpr 0x561d5f1e4d58 <col:20> '_Bool' <LValueToRValue>
    |     | | |   `-DeclRefExpr 0x561d5f1e4d18 <col:20> '_Bool' lvalue Var 0x561d5f1dd9a8 'z$w_buff0_used' '_Bool'
    |     | | `-ImplicitCastExpr 0x561d5f1e4da0 <col:38> 'int' <IntegralCast>
    |     | |   `-ImplicitCastExpr 0x561d5f1e4d88 <col:38> '_Bool' <LValueToRValue>
    |     | |     `-DeclRefExpr 0x561d5f1e4d38 <col:38> '_Bool' lvalue Var 0x561d5f1dd470 'z$r_buff0_thd0' '_Bool'
    |     | `-BinaryOperator 0x561d5f1e4e78 <col:56, col:74> 'int' '&&'
    |     |   |-ImplicitCastExpr 0x561d5f1e4e30 <col:56> 'int' <IntegralCast>
    |     |   | `-ImplicitCastExpr 0x561d5f1e4e18 <col:56> '_Bool' <LValueToRValue>
    |     |   |   `-DeclRefExpr 0x561d5f1e4dd8 <col:56> '_Bool' lvalue Var 0x561d5f1deb20 'z$w_buff1_used' '_Bool'
    |     |   `-ImplicitCastExpr 0x561d5f1e4e60 <col:74> 'int' <IntegralCast>
    |     |     `-ImplicitCastExpr 0x561d5f1e4e48 <col:74> '_Bool' <LValueToRValue>
    |     |       `-DeclRefExpr 0x561d5f1e4df8 <col:74> '_Bool' lvalue Var 0x561d5f1dd650 'z$r_buff1_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x561d5f1e4f30 <col:91, col:98> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x561d5f1e4ee8 <col:91, col:98> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x561d5f1e4eb8 <col:98> 'int' 0
    |     `-ImplicitCastExpr 0x561d5f1e4f60 <col:102> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x561d5f1e4f48 <col:102> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x561d5f1e4f10 <col:102> '_Bool' lvalue Var 0x561d5f1deb20 'z$w_buff1_used' '_Bool'
    |-BinaryOperator 0x561d5f1e51c8 <line:813:3, col:66> '_Bool' '='
    | |-DeclRefExpr 0x561d5f1e4fe0 <col:3> '_Bool' lvalue Var 0x561d5f1dd470 'z$r_buff0_thd0' '_Bool'
    | `-ImplicitCastExpr 0x561d5f1e51b0 <col:20, col:66> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x561d5f1e5180 <col:20, col:66> 'int'
    |     |-BinaryOperator 0x561d5f1e50a0 <col:20, col:38> 'int' '&&'
    |     | |-ImplicitCastExpr 0x561d5f1e5058 <col:20> 'int' <IntegralCast>
    |     | | `-ImplicitCastExpr 0x561d5f1e5040 <col:20> '_Bool' <LValueToRValue>
    |     | |   `-DeclRefExpr 0x561d5f1e5000 <col:20> '_Bool' lvalue Var 0x561d5f1dd9a8 'z$w_buff0_used' '_Bool'
    |     | `-ImplicitCastExpr 0x561d5f1e5088 <col:38> 'int' <IntegralCast>
    |     |   `-ImplicitCastExpr 0x561d5f1e5070 <col:38> '_Bool' <LValueToRValue>
    |     |     `-DeclRefExpr 0x561d5f1e5020 <col:38> '_Bool' lvalue Var 0x561d5f1dd470 'z$r_buff0_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x561d5f1e5138 <col:55, col:62> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x561d5f1e50f0 <col:55, col:62> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x561d5f1e50c0 <col:62> 'int' 0
    |     `-ImplicitCastExpr 0x561d5f1e5168 <col:66> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x561d5f1e5150 <col:66> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x561d5f1e5118 <col:66> '_Bool' lvalue Var 0x561d5f1dd470 'z$r_buff0_thd0' '_Bool'
    |-BinaryOperator 0x561d5f1e54b0 <line:814:3, col:102> '_Bool' '='
    | |-DeclRefExpr 0x561d5f1e51e8 <col:3> '_Bool' lvalue Var 0x561d5f1dd650 'z$r_buff1_thd0' '_Bool'
    | `-ImplicitCastExpr 0x561d5f1e5498 <col:20, col:102> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x561d5f1e5468 <col:20, col:102> 'int'
    |     |-BinaryOperator 0x561d5f1e5388 <col:20, col:74> 'int' '||'
    |     | |-BinaryOperator 0x561d5f1e52a8 <col:20, col:38> 'int' '&&'
    |     | | |-ImplicitCastExpr 0x561d5f1e5260 <col:20> 'int' <IntegralCast>
    |     | | | `-ImplicitCastExpr 0x561d5f1e5248 <col:20> '_Bool' <LValueToRValue>
    |     | | |   `-DeclRefExpr 0x561d5f1e5208 <col:20> '_Bool' lvalue Var 0x561d5f1dd9a8 'z$w_buff0_used' '_Bool'
    |     | | `-ImplicitCastExpr 0x561d5f1e5290 <col:38> 'int' <IntegralCast>
    |     | |   `-ImplicitCastExpr 0x561d5f1e5278 <col:38> '_Bool' <LValueToRValue>
    |     | |     `-DeclRefExpr 0x561d5f1e5228 <col:38> '_Bool' lvalue Var 0x561d5f1dd470 'z$r_buff0_thd0' '_Bool'
    |     | `-BinaryOperator 0x561d5f1e5368 <col:56, col:74> 'int' '&&'
    |     |   |-ImplicitCastExpr 0x561d5f1e5320 <col:56> 'int' <IntegralCast>
    |     |   | `-ImplicitCastExpr 0x561d5f1e5308 <col:56> '_Bool' <LValueToRValue>
    |     |   |   `-DeclRefExpr 0x561d5f1e52c8 <col:56> '_Bool' lvalue Var 0x561d5f1deb20 'z$w_buff1_used' '_Bool'
    |     |   `-ImplicitCastExpr 0x561d5f1e5350 <col:74> 'int' <IntegralCast>
    |     |     `-ImplicitCastExpr 0x561d5f1e5338 <col:74> '_Bool' <LValueToRValue>
    |     |       `-DeclRefExpr 0x561d5f1e52e8 <col:74> '_Bool' lvalue Var 0x561d5f1dd650 'z$r_buff1_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x561d5f1e5420 <col:91, col:98> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x561d5f1e53d8 <col:91, col:98> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x561d5f1e53a8 <col:98> 'int' 0
    |     `-ImplicitCastExpr 0x561d5f1e5450 <col:102> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x561d5f1e5438 <col:102> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x561d5f1e5400 <col:102> '_Bool' lvalue Var 0x561d5f1dd650 'z$r_buff1_thd0' '_Bool'
    |-CallExpr 0x561d5f1e5508 <line:815:3, col:25> 'void'
    | `-ImplicitCastExpr 0x561d5f1e54f0 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x561d5f1e54d0 <col:3> 'void ()' Function 0x561d5f183060 '__VERIFIER_atomic_end' 'void ()'
    |-CallExpr 0x561d5f1e5560 <line:816:3, col:27> 'void'
    | `-ImplicitCastExpr 0x561d5f1e5548 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x561d5f1e5528 <col:3> 'void ()' Function 0x561d5f182fa0 '__VERIFIER_atomic_begin' 'void ()'
    |-BinaryOperator 0x561d5f1e55f8 <line:817:3, col:42> '_Bool' '='
    | |-DeclRefExpr 0x561d5f1e5580 <col:3> '_Bool' lvalue Var 0x561d5f1dec10 'weak$$choice1' '_Bool'
    | `-CallExpr 0x561d5f1e55d8 <col:19, col:42> '_Bool'
    |   `-ImplicitCastExpr 0x561d5f1e55c0 <col:19> '_Bool (*)(void)' <FunctionToPointerDecay>
    |     `-DeclRefExpr 0x561d5f1e55a0 <col:19> '_Bool (void)' Function 0x561d5f182770 '__VERIFIER_nondet_bool' '_Bool (void)'
    |-BinaryOperator 0x561d5f1e5830 <line:818:3, col:140> 'int' '='
    | |-DeclRefExpr 0x561d5f1e5618 <col:3> 'int' lvalue Var 0x561d5f1dc440 '__unbuffered_p0_EAX' 'int'
    | `-ConditionalOperator 0x561d5f1e5800 <col:25, col:140> 'int'
    |   |-ImplicitCastExpr 0x561d5f1e57d0 <col:25> 'int' <IntegralCast>
    |   | `-ImplicitCastExpr 0x561d5f1e57b8 <col:25> '_Bool' <LValueToRValue>
    |   |   `-DeclRefExpr 0x561d5f1e5638 <col:25> '_Bool' lvalue Var 0x561d5f1dc990 '__unbuffered_p0_EAX$read_delayed' '_Bool'
    |   |-ParenExpr 0x561d5f1e5778 <col:60, col:136> 'int'
    |   | `-ConditionalOperator 0x561d5f1e5748 <col:61, col:117> 'int'
    |   |   |-ImplicitCastExpr 0x561d5f1e5700 <col:61> 'int' <IntegralCast>
    |   |   | `-ImplicitCastExpr 0x561d5f1e56e8 <col:61> '_Bool' <LValueToRValue>
    |   |   |   `-DeclRefExpr 0x561d5f1e5658 <col:61> '_Bool' lvalue Var 0x561d5f1dec10 'weak$$choice1' '_Bool'
    |   |   |-ImplicitCastExpr 0x561d5f1e5718 <col:77, col:78> 'int' <LValueToRValue>
    |   |   | `-UnaryOperator 0x561d5f1e56b0 <col:77, col:78> 'int' lvalue prefix '*' cannot overflow
    |   |   |   `-ImplicitCastExpr 0x561d5f1e5698 <col:78> 'int *' <LValueToRValue>
    |   |   |     `-DeclRefExpr 0x561d5f1e5678 <col:78> 'int *' lvalue Var 0x561d5f1dca10 '__unbuffered_p0_EAX$read_delayed_var' 'int *'
    |   |   `-ImplicitCastExpr 0x561d5f1e5730 <col:117> 'int' <LValueToRValue>
    |   |     `-DeclRefExpr 0x561d5f1e56c8 <col:117> 'int' lvalue Var 0x561d5f1dc440 '__unbuffered_p0_EAX' 'int'
    |   `-ImplicitCastExpr 0x561d5f1e57e8 <col:140> 'int' <LValueToRValue>
    |     `-DeclRefExpr 0x561d5f1e5798 <col:140> 'int' lvalue Var 0x561d5f1dc440 '__unbuffered_p0_EAX' 'int'
    |-BinaryOperator 0x561d5f1e5a68 <line:819:3, col:103> '_Bool' '='
    | |-DeclRefExpr 0x561d5f1e5850 <col:3> '_Bool' lvalue Var 0x561d5f1dcfa0 'main$tmp_guard1' '_Bool'
    | `-ImplicitCastExpr 0x561d5f1e5a50 <col:21, col:103> '_Bool' <IntegralToBoolean>
    |   `-UnaryOperator 0x561d5f1e5a38 <col:21, col:103> 'int' prefix '!' cannot overflow
    |     `-ParenExpr 0x561d5f1e5a18 <col:22, col:103> 'int'
    |       `-BinaryOperator 0x561d5f1e59f8 <col:23, col:102> 'int' '&&'
    |         |-BinaryOperator 0x561d5f1e5960 <col:23, col:74> 'int' '&&'
    |         | |-BinaryOperator 0x561d5f1e58c8 <col:23, col:46> 'int' '=='
    |         | | |-ImplicitCastExpr 0x561d5f1e58b0 <col:23> 'int' <LValueToRValue>
    |         | | | `-DeclRefExpr 0x561d5f1e5870 <col:23> 'int' lvalue Var 0x561d5f1dc440 '__unbuffered_p0_EAX' 'int'
    |         | | `-IntegerLiteral 0x561d5f1e5890 <col:46> 'int' 1
    |         | `-BinaryOperator 0x561d5f1e5940 <col:51, col:74> 'int' '=='
    |         |   |-ImplicitCastExpr 0x561d5f1e5928 <col:51> 'int' <LValueToRValue>
    |         |   | `-DeclRefExpr 0x561d5f1e58e8 <col:51> 'int' lvalue Var 0x561d5f1dcd70 '__unbuffered_p1_EAX' 'int'
    |         |   `-IntegerLiteral 0x561d5f1e5908 <col:74> 'int' 1
    |         `-BinaryOperator 0x561d5f1e59d8 <col:79, col:102> 'int' '=='
    |           |-ImplicitCastExpr 0x561d5f1e59c0 <col:79> 'int' <LValueToRValue>
    |           | `-DeclRefExpr 0x561d5f1e5980 <col:79> 'int' lvalue Var 0x561d5f1dce90 '__unbuffered_p2_EAX' 'int'
    |           `-IntegerLiteral 0x561d5f1e59a0 <col:102> 'int' 1
    |-CallExpr 0x561d5f1e5ac0 <line:820:3, col:25> 'void'
    | `-ImplicitCastExpr 0x561d5f1e5aa8 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x561d5f1e5a88 <col:3> 'void ()' Function 0x561d5f183060 '__VERIFIER_atomic_end' 'void ()'
    |-CallExpr 0x561d5f1e5b38 <line:821:3, col:36> 'void'
    | |-ImplicitCastExpr 0x561d5f1e5b20 <col:3> 'void (*)(int)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x561d5f1e5ae0 <col:3> 'void (int)' Function 0x561d5f182d28 '__VERIFIER_assert' 'void (int)'
    | `-ImplicitCastExpr 0x561d5f1e5b90 <col:21> 'int' <IntegralCast>
    |   `-ImplicitCastExpr 0x561d5f1e5b60 <col:21> '_Bool' <LValueToRValue>
    |     `-DeclRefExpr 0x561d5f1e5b00 <col:21> '_Bool' lvalue Var 0x561d5f1dcfa0 'main$tmp_guard1' '_Bool'
    `-ReturnStmt 0x561d5f1e5bc8 <line:822:3, col:10>
      `-IntegerLiteral 0x561d5f1e5ba8 <col:10> 'int' 0
