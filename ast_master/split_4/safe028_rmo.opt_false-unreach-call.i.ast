TranslationUnitDecl 0x5612e0d6de18 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x5612e0d6e6d8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x5612e0d6e3b0 '__int128'
|-TypedefDecl 0x5612e0d6e748 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x5612e0d6e3d0 'unsigned __int128'
|-TypedefDecl 0x5612e0d6ea50 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x5612e0d6e820 'struct __NSConstantString_tag'
|   `-Record 0x5612e0d6e7a0 '__NSConstantString_tag'
|-TypedefDecl 0x5612e0d6eaf8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x5612e0d6eab0 'char *'
|   `-BuiltinType 0x5612e0d6deb0 'char'
|-TypedefDecl 0x5612e0dad650 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'struct __va_list_tag [1]'
| `-ConstantArrayType 0x5612e0d6ed90 'struct __va_list_tag [1]' 1 
|   `-RecordType 0x5612e0d6ebd0 'struct __va_list_tag'
|     `-Record 0x5612e0d6eb50 '__va_list_tag'
|-FunctionDecl 0x5612e0dad770 <./split_4/safe028_rmo.opt_false-unreach-call.i:1:1, col:41> col:14 used __VERIFIER_nondet_bool '_Bool (void)' extern
|-FunctionDecl 0x5612e0dad940 <line:2:1, col:34> col:13 used __VERIFIER_assume 'void (int)' extern
| `-ParmVarDecl 0x5612e0dad870 <col:31> col:34 'int'
|-FunctionDecl 0x5612e0dadab8 <line:3:1, col:45> col:15 used __VERIFIER_nondet_pointer 'void *(void)' extern
|-FunctionDecl 0x5612e0dadbe0 <line:4:1, col:61> col:13 used __VERIFIER_error 'void () __attribute__((noreturn))' extern
|-FunctionDecl 0x5612e0dadd28 <line:5:1, col:99> col:6 used __VERIFIER_assert 'void (int)'
| |-ParmVarDecl 0x5612e0dadc98 <col:24, col:28> col:28 used expression 'int'
| `-CompoundStmt 0x5612e0dadf58 <col:40, col:99>
|   |-IfStmt 0x5612e0dadf28 <col:42, col:88>
|   | |-UnaryOperator 0x5612e0dade08 <col:46, col:47> 'int' prefix '!' cannot overflow
|   | | `-ImplicitCastExpr 0x5612e0daddf0 <col:47> 'int' <LValueToRValue>
|   | |   `-DeclRefExpr 0x5612e0daddd0 <col:47> 'int' lvalue ParmVar 0x5612e0dadc98 'expression' 'int'
|   | `-CompoundStmt 0x5612e0dadf10 <col:59, col:88>
|   |   `-LabelStmt 0x5612e0dadef8 <col:61, col:85> 'ERROR'
|   |     `-CallExpr 0x5612e0dade88 <col:68, col:85> 'void'
|   |       `-ImplicitCastExpr 0x5612e0dade70 <col:68> 'void (*)() __attribute__((noreturn))' <FunctionToPointerDecay>
|   |         `-DeclRefExpr 0x5612e0dade20 <col:68> 'void () __attribute__((noreturn))' Function 0x5612e0dadbe0 '__VERIFIER_error' 'void () __attribute__((noreturn))'
|   |-NullStmt 0x5612e0dadf40 <col:89>
|   `-ReturnStmt 0x5612e0dadf48 <col:91>
|-FunctionDecl 0x5612e0dadfa0 <line:6:1, col:37> col:13 used __VERIFIER_atomic_begin 'void ()' extern
|-FunctionDecl 0x5612e0dae060 <line:7:1, col:35> col:13 used __VERIFIER_atomic_end 'void ()' extern
|-FunctionDecl 0x5612e0dae3e0 <line:9:1, line:11:76> line:9:13 __assert_fail 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x5612e0dae118 <col:28, col:40> col:40 __assertion 'const char *'
| |-ParmVarDecl 0x5612e0dae198 <col:53, col:65> col:65 __file 'const char *'
| |-ParmVarDecl 0x5612e0dae218 <line:10:7, col:20> col:20 __line 'unsigned int'
| |-ParmVarDecl 0x5612e0dae298 <col:28, col:40> col:40 __function 'const char *'
| `-NoThrowAttr 0x5612e0dae4a0 <line:11:22>
|-FunctionDecl 0x5612e0dd4520 <line:12:1, line:14:76> line:12:13 __assert_perror_fail 'void (int, const char *, unsigned int, const char *) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x5612e0dae510 <col:35, col:39> col:39 __errnum 'int'
| |-ParmVarDecl 0x5612e0dae590 <col:49, col:61> col:61 __file 'const char *'
| |-ParmVarDecl 0x5612e0dd4350 <line:13:7, col:20> col:20 __line 'unsigned int'
| |-ParmVarDecl 0x5612e0dd43d0 <col:28, col:40> col:40 __function 'const char *'
| `-NoThrowAttr 0x5612e0dd45e0 <line:14:22>
|-FunctionDecl 0x5612e0dd4890 <line:15:1, line:16:76> line:15:13 __assert 'void (const char *, const char *, int) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x5612e0dd4650 <col:23, col:35> col:35 __assertion 'const char *'
| |-ParmVarDecl 0x5612e0dd46d0 <col:48, col:60> col:60 __file 'const char *'
| |-ParmVarDecl 0x5612e0dd4750 <col:68, col:72> col:72 __line 'int'
| `-NoThrowAttr 0x5612e0dd4948 <line:16:22>
|-TypedefDecl 0x5612e0dd49b8 <line:18:1, col:23> col:23 __u_char 'unsigned char'
| `-BuiltinType 0x5612e0d6df70 'unsigned char'
|-TypedefDecl 0x5612e0dd4a28 <line:19:1, col:28> col:28 __u_short 'unsigned short'
| `-BuiltinType 0x5612e0d6df90 'unsigned short'
|-TypedefDecl 0x5612e0dd4a98 <line:20:1, col:22> col:22 __u_int 'unsigned int'
| `-BuiltinType 0x5612e0d6dfb0 'unsigned int'
|-TypedefDecl 0x5612e0dd4b08 <line:21:1, col:27> col:27 __u_long 'unsigned long'
| `-BuiltinType 0x5612e0d6dfd0 'unsigned long'
|-TypedefDecl 0x5612e0dd4b78 <line:22:1, col:21> col:21 __int8_t 'signed char'
| `-BuiltinType 0x5612e0d6ded0 'signed char'
|-TypedefDecl 0x5612e0dd4be8 <line:23:1, col:23> col:23 __uint8_t 'unsigned char'
| `-BuiltinType 0x5612e0d6df70 'unsigned char'
|-TypedefDecl 0x5612e0dd4c58 <line:24:1, col:26> col:26 __int16_t 'short'
| `-BuiltinType 0x5612e0d6def0 'short'
|-TypedefDecl 0x5612e0dd4cc8 <line:25:1, col:28> col:28 __uint16_t 'unsigned short'
| `-BuiltinType 0x5612e0d6df90 'unsigned short'
|-TypedefDecl 0x5612e0dd4d38 <line:26:1, col:20> col:20 __int32_t 'int'
| `-BuiltinType 0x5612e0d6df10 'int'
|-TypedefDecl 0x5612e0dd4da8 <line:27:1, col:22> col:22 __uint32_t 'unsigned int'
| `-BuiltinType 0x5612e0d6dfb0 'unsigned int'
|-TypedefDecl 0x5612e0dd4e18 <line:28:1, col:25> col:25 __int64_t 'long'
| `-BuiltinType 0x5612e0d6df30 'long'
|-TypedefDecl 0x5612e0dd4e88 <line:29:1, col:27> col:27 referenced __uint64_t 'unsigned long'
| `-BuiltinType 0x5612e0d6dfd0 'unsigned long'
|-TypedefDecl 0x5612e0dd4ef8 <line:30:1, col:18> col:18 referenced __quad_t 'long'
| `-BuiltinType 0x5612e0d6df30 'long'
|-TypedefDecl 0x5612e0dd4f68 <line:31:1, col:27> col:27 __u_quad_t 'unsigned long'
| `-BuiltinType 0x5612e0d6dfd0 'unsigned long'
|-TypedefDecl 0x5612e0dd4fd8 <line:32:1, col:27> col:27 __dev_t 'unsigned long'
| `-BuiltinType 0x5612e0d6dfd0 'unsigned long'
|-TypedefDecl 0x5612e0dd5048 <line:33:1, col:22> col:22 __uid_t 'unsigned int'
| `-BuiltinType 0x5612e0d6dfb0 'unsigned int'
|-TypedefDecl 0x5612e0dd50b8 <line:34:1, col:22> col:22 __gid_t 'unsigned int'
| `-BuiltinType 0x5612e0d6dfb0 'unsigned int'
|-TypedefDecl 0x5612e0dd5128 <line:35:1, col:27> col:27 __ino_t 'unsigned long'
| `-BuiltinType 0x5612e0d6dfd0 'unsigned long'
|-TypedefDecl 0x5612e0dd5198 <line:36:1, col:27> col:27 __ino64_t 'unsigned long'
| `-BuiltinType 0x5612e0d6dfd0 'unsigned long'
|-TypedefDecl 0x5612e0dd5208 <line:37:1, col:22> col:22 __mode_t 'unsigned int'
| `-BuiltinType 0x5612e0d6dfb0 'unsigned int'
|-TypedefDecl 0x5612e0dd5278 <line:38:1, col:27> col:27 __nlink_t 'unsigned long'
| `-BuiltinType 0x5612e0d6dfd0 'unsigned long'
|-TypedefDecl 0x5612e0dd52e8 <line:39:1, col:18> col:18 __off_t 'long'
| `-BuiltinType 0x5612e0d6df30 'long'
|-TypedefDecl 0x5612e0dd5378 <line:40:1, col:18> col:18 referenced __off64_t 'long'
| `-BuiltinType 0x5612e0d6df30 'long'
|-TypedefDecl 0x5612e0dd53e8 <line:41:1, col:13> col:13 referenced __pid_t 'int'
| `-BuiltinType 0x5612e0d6df10 'int'
|-RecordDecl 0x5612e0dd5440 <line:42:9, col:32> col:9 struct definition
| `-FieldDecl 0x5612e0dd5588 <col:18, col:29> col:22 __val 'int [2]'
|-TypedefDecl 0x5612e0dd5640 <col:1, col:34> col:34 __fsid_t 'struct __fsid_t':'__fsid_t'
| `-ElaboratedType 0x5612e0dd55e0 'struct __fsid_t' sugar
|   `-RecordType 0x5612e0dd54c0 '__fsid_t'
|     `-Record 0x5612e0dd5440 ''
|-TypedefDecl 0x5612e0dd56c8 <line:43:1, col:18> col:18 referenced __clock_t 'long'
| `-BuiltinType 0x5612e0d6df30 'long'
|-TypedefDecl 0x5612e0dd5738 <line:44:1, col:27> col:27 __rlim_t 'unsigned long'
| `-BuiltinType 0x5612e0d6dfd0 'unsigned long'
|-TypedefDecl 0x5612e0dd57a8 <line:45:1, col:27> col:27 __rlim64_t 'unsigned long'
| `-BuiltinType 0x5612e0d6dfd0 'unsigned long'
|-TypedefDecl 0x5612e0dd5818 <line:46:1, col:22> col:22 __id_t 'unsigned int'
| `-BuiltinType 0x5612e0d6dfb0 'unsigned int'
|-TypedefDecl 0x5612e0dd5888 <line:47:1, col:18> col:18 referenced __time_t 'long'
| `-BuiltinType 0x5612e0d6df30 'long'
|-TypedefDecl 0x5612e0dd58f8 <line:48:1, col:22> col:22 __useconds_t 'unsigned int'
| `-BuiltinType 0x5612e0d6dfb0 'unsigned int'
|-TypedefDecl 0x5612e0dd5968 <line:49:1, col:18> col:18 __suseconds_t 'long'
| `-BuiltinType 0x5612e0d6df30 'long'
|-TypedefDecl 0x5612e0dd59d8 <line:50:1, col:13> col:13 __daddr_t 'int'
| `-BuiltinType 0x5612e0d6df10 'int'
|-TypedefDecl 0x5612e0dd5a48 <line:51:1, col:13> col:13 __key_t 'int'
| `-BuiltinType 0x5612e0d6df10 'int'
|-TypedefDecl 0x5612e0dd5ab8 <line:52:1, col:13> col:13 referenced __clockid_t 'int'
| `-BuiltinType 0x5612e0d6df10 'int'
|-TypedefDecl 0x5612e0dd5b28 <line:53:1, col:16> col:16 referenced __timer_t 'void *'
| `-PointerType 0x5612e0d6e630 'void *'
|   `-BuiltinType 0x5612e0d6de70 'void'
|-TypedefDecl 0x5612e0dd5b98 <line:54:1, col:18> col:18 __blksize_t 'long'
| `-BuiltinType 0x5612e0d6df30 'long'
|-TypedefDecl 0x5612e0dd5c08 <line:55:1, col:18> col:18 __blkcnt_t 'long'
| `-BuiltinType 0x5612e0d6df30 'long'
|-TypedefDecl 0x5612e0dd5c78 <line:56:1, col:18> col:18 __blkcnt64_t 'long'
| `-BuiltinType 0x5612e0d6df30 'long'
|-TypedefDecl 0x5612e0dd5ce8 <line:57:1, col:27> col:27 __fsblkcnt_t 'unsigned long'
| `-BuiltinType 0x5612e0d6dfd0 'unsigned long'
|-TypedefDecl 0x5612e0dd5d58 <line:58:1, col:27> col:27 __fsblkcnt64_t 'unsigned long'
| `-BuiltinType 0x5612e0d6dfd0 'unsigned long'
|-TypedefDecl 0x5612e0dd5dc8 <line:59:1, col:27> col:27 __fsfilcnt_t 'unsigned long'
| `-BuiltinType 0x5612e0d6dfd0 'unsigned long'
|-TypedefDecl 0x5612e0dd5e38 <line:60:1, col:27> col:27 __fsfilcnt64_t 'unsigned long'
| `-BuiltinType 0x5612e0d6dfd0 'unsigned long'
|-TypedefDecl 0x5612e0dd5ea8 <line:61:1, col:18> col:18 __fsword_t 'long'
| `-BuiltinType 0x5612e0d6df30 'long'
|-TypedefDecl 0x5612e0dd5f18 <line:62:1, col:18> col:18 __ssize_t 'long'
| `-BuiltinType 0x5612e0d6df30 'long'
|-TypedefDecl 0x5612e0dd5f88 <line:63:1, col:18> col:18 referenced __syscall_slong_t 'long'
| `-BuiltinType 0x5612e0d6df30 'long'
|-TypedefDecl 0x5612e0dd5ff8 <line:64:1, col:27> col:27 __syscall_ulong_t 'unsigned long'
| `-BuiltinType 0x5612e0d6dfd0 'unsigned long'
|-TypedefDecl 0x5612e0dd6088 <line:65:1, col:19> col:19 __loff_t '__off64_t':'long'
| `-TypedefType 0x5612e0dd6050 '__off64_t' sugar
|   |-Typedef 0x5612e0dd5378 '__off64_t'
|   `-BuiltinType 0x5612e0d6df30 'long'
|-TypedefDecl 0x5612e0dd6180 <line:66:1, col:19> col:19 __qaddr_t '__quad_t *'
| `-PointerType 0x5612e0dd6140 '__quad_t *'
|   `-TypedefType 0x5612e0dd60e0 '__quad_t' sugar
|     |-Typedef 0x5612e0dd4ef8 '__quad_t'
|     `-BuiltinType 0x5612e0d6df30 'long'
|-TypedefDecl 0x5612e0dd61f0 <line:67:1, col:15> col:15 __caddr_t 'char *'
| `-PointerType 0x5612e0d6eab0 'char *'
|   `-BuiltinType 0x5612e0d6deb0 'char'
|-TypedefDecl 0x5612e0dd6260 <line:68:1, col:18> col:18 __intptr_t 'long'
| `-BuiltinType 0x5612e0d6df30 'long'
|-TypedefDecl 0x5612e0dd62d0 <line:69:1, col:22> col:22 __socklen_t 'unsigned int'
| `-BuiltinType 0x5612e0d6dfb0 'unsigned int'
|-FunctionDecl 0x5612e0dd7458 <line:70:1, line:74:1> line:71:1 __bswap_32 'unsigned int (unsigned int)' static inline
| |-ParmVarDecl 0x5612e0dd7380 <col:13, col:26> col:26 used __bsx 'unsigned int'
| `-CompoundStmt 0x5612e0dd7768 <line:72:1, line:74:1>
|   `-ReturnStmt 0x5612e0dd7758 <line:73:3, col:34>
|     `-CallExpr 0x5612e0dd7718 <col:10, col:34> 'unsigned int'
|       |-ImplicitCastExpr 0x5612e0dd7700 <col:10> 'unsigned int (*)(unsigned int)' <BuiltinFnToFnPtr>
|       | `-DeclRefExpr 0x5612e0dd7690 <col:10> '<builtin fn type>' Function 0x5612e0dd7500 '__builtin_bswap32' 'unsigned int (unsigned int)'
|       `-ImplicitCastExpr 0x5612e0dd7740 <col:29> 'unsigned int' <LValueToRValue>
|         `-DeclRefExpr 0x5612e0dd76b0 <col:29> 'unsigned int' lvalue ParmVar 0x5612e0dd7380 '__bsx' 'unsigned int'
|-FunctionDecl 0x5612e0dd7500 <col:10> col:10 implicit used __builtin_bswap32 'unsigned int (unsigned int)' extern
| |-ParmVarDecl 0x5612e0dd75a0 <<invalid sloc>> <invalid sloc> 'unsigned int'
| |-NoThrowAttr 0x5612e0dd7610 <col:10> Implicit
| `-ConstAttr 0x5612e0dd7668 <col:10> Implicit
|-FunctionDecl 0x5612e0dd78c0 <line:75:1, line:79:1> line:76:1 __bswap_64 '__uint64_t (__uint64_t)' static inline
| |-ParmVarDecl 0x5612e0dd77b8 <col:13, col:24> col:24 used __bsx '__uint64_t':'unsigned long'
| `-CompoundStmt 0x5612e0dd7bd8 <line:77:1, line:79:1>
|   `-ReturnStmt 0x5612e0dd7bc8 <line:78:3, col:34>
|     `-CallExpr 0x5612e0dd7b88 <col:10, col:34> 'unsigned long'
|       |-ImplicitCastExpr 0x5612e0dd7b70 <col:10> 'unsigned long (*)(unsigned long)' <BuiltinFnToFnPtr>
|       | `-DeclRefExpr 0x5612e0dd7af8 <col:10> '<builtin fn type>' Function 0x5612e0dd7968 '__builtin_bswap64' 'unsigned long (unsigned long)'
|       `-ImplicitCastExpr 0x5612e0dd7bb0 <col:29> '__uint64_t':'unsigned long' <LValueToRValue>
|         `-DeclRefExpr 0x5612e0dd7b18 <col:29> '__uint64_t':'unsigned long' lvalue ParmVar 0x5612e0dd77b8 '__bsx' '__uint64_t':'unsigned long'
|-FunctionDecl 0x5612e0dd7968 <col:10> col:10 implicit used __builtin_bswap64 'unsigned long (unsigned long)' extern
| |-ParmVarDecl 0x5612e0dd7a08 <<invalid sloc>> <invalid sloc> 'unsigned long'
| |-NoThrowAttr 0x5612e0dd7a78 <col:10> Implicit
| `-ConstAttr 0x5612e0dd7ad0 <col:10> Implicit
|-TypedefDecl 0x5612e0dd7c08 <line:80:1, col:27> col:27 referenced size_t 'unsigned long'
| `-BuiltinType 0x5612e0d6dfd0 'unsigned long'
|-TypedefDecl 0x5612e0dd7c98 <line:82:1, col:18> col:18 referenced time_t '__time_t':'long'
| `-TypedefType 0x5612e0dd7c60 '__time_t' sugar
|   |-Typedef 0x5612e0dd5888 '__time_t'
|   `-BuiltinType 0x5612e0d6df30 'long'
|-RecordDecl 0x5612e0dd7cf0 <line:85:1, line:89:3> line:85:8 struct timespec definition
| |-FieldDecl 0x5612e0dd7da8 <line:87:5, col:14> col:14 tv_sec '__time_t':'long'
| `-FieldDecl 0x5612e0dd7e38 <line:88:5, col:23> col:23 tv_nsec '__syscall_slong_t':'long'
|-TypedefDecl 0x5612e0dd7ec8 <line:90:1, col:17> col:17 referenced pid_t '__pid_t':'int'
| `-TypedefType 0x5612e0dd7e90 '__pid_t' sugar
|   |-Typedef 0x5612e0dd53e8 '__pid_t'
|   `-BuiltinType 0x5612e0d6df10 'int'
|-RecordDecl 0x5612e0dd7f20 <line:91:1, line:94:3> line:91:8 struct sched_param definition
| `-FieldDecl 0x5612e0dd7fe0 <line:93:5, col:9> col:9 __sched_priority 'int'
|-RecordDecl 0x5612e0dd8030 <line:97:1, line:100:3> line:97:8 struct __sched_param definition
| `-FieldDecl 0x5612e0dd80f0 <line:99:5, col:9> col:9 __sched_priority 'int'
|-TypedefDecl 0x5612e0dd8158 <line:101:1, col:27> col:27 referenced __cpu_mask 'unsigned long'
| `-BuiltinType 0x5612e0d6dfd0 'unsigned long'
|-RecordDecl 0x5612e0dd81b0 <line:102:9, line:105:1> line:102:9 struct definition
| `-FieldDecl 0x5612e0dd9480 <line:104:3, col:53> col:14 __bits '__cpu_mask [64]'
|-TypedefDecl 0x5612e0dd9530 <line:102:1, line:105:3> col:3 referenced cpu_set_t 'struct cpu_set_t':'cpu_set_t'
| `-ElaboratedType 0x5612e0dd94d0 'struct cpu_set_t' sugar
|   `-RecordType 0x5612e0dd8230 'cpu_set_t'
|     `-Record 0x5612e0dd81b0 ''
|-FunctionDecl 0x5612e0dd9808 <line:107:1, line:108:42> line:107:12 __sched_cpucount 'int (size_t, const cpu_set_t *)' extern
| |-ParmVarDecl 0x5612e0dd95d8 <col:30, col:37> col:37 __setsize 'size_t':'unsigned long'
| |-ParmVarDecl 0x5612e0dd96e0 <col:48, col:65> col:65 __setp 'const cpu_set_t *'
| `-NoThrowAttr 0x5612e0dd98b8 <line:108:19>
|-FunctionDecl 0x5612e0dd9a90 <line:109:1, col:92> col:19 __sched_cpualloc 'cpu_set_t *(size_t)' extern
| |-ParmVarDecl 0x5612e0dd9920 <col:37, col:44> col:44 __count 'size_t':'unsigned long'
| `-NoThrowAttr 0x5612e0dd9b38 <col:69>
|-FunctionDecl 0x5612e0dd9cb0 <line:110:1, col:87> col:13 __sched_cpufree 'void (cpu_set_t *)' extern
| |-ParmVarDecl 0x5612e0dd9ba0 <col:30, col:41> col:41 __set 'cpu_set_t *'
| `-NoThrowAttr 0x5612e0dd9d58 <col:64>
|-FunctionDecl 0x5612e0dda018 <line:113:1, line:114:45> line:113:12 sched_setparam 'int (__pid_t, const struct sched_param *)' extern
| |-ParmVarDecl 0x5612e0dd9dc0 <col:28, col:36> col:36 __pid '__pid_t':'int'
| |-ParmVarDecl 0x5612e0dd9ef8 <col:43, col:69> col:69 __param 'const struct sched_param *'
| `-NoThrowAttr 0x5612e0dda0c8 <line:114:22>
|-FunctionDecl 0x5612e0dda3b0 <line:115:1, col:111> col:12 sched_getparam 'int (__pid_t, struct sched_param *)' extern
| |-ParmVarDecl 0x5612e0dda130 <col:28, col:36> col:36 __pid '__pid_t':'int'
| |-ParmVarDecl 0x5612e0dda228 <col:43, col:63> col:63 __param 'struct sched_param *'
| `-NoThrowAttr 0x5612e0dda460 <col:88>
|-FunctionDecl 0x5612e0dda718 <line:116:1, line:117:85> line:116:12 sched_setscheduler 'int (__pid_t, int, const struct sched_param *)' extern
| |-ParmVarDecl 0x5612e0dda4c8 <col:32, col:40> col:40 __pid '__pid_t':'int'
| |-ParmVarDecl 0x5612e0dda548 <col:47, col:51> col:51 __policy 'int'
| |-ParmVarDecl 0x5612e0dda5d8 <line:117:11, col:37> col:37 __param 'const struct sched_param *'
| `-NoThrowAttr 0x5612e0dda7d0 <col:62>
|-FunctionDecl 0x5612e0dda948 <line:118:1, col:86> col:12 sched_getscheduler 'int (__pid_t)' extern
| |-ParmVarDecl 0x5612e0dda838 <col:32, col:40> col:40 __pid '__pid_t':'int'
| `-NoThrowAttr 0x5612e0dda9f0 <col:63>
|-FunctionDecl 0x5612e0ddab18 <line:119:1, col:70> col:12 sched_yield 'int (void)' extern
| `-NoThrowAttr 0x5612e0ddabb8 <col:47>
|-FunctionDecl 0x5612e0ddacc0 <line:120:1, col:92> col:12 sched_get_priority_max 'int (int)' extern
| |-ParmVarDecl 0x5612e0ddac28 <col:36, col:40> col:40 __algorithm 'int'
| `-NoThrowAttr 0x5612e0ddad68 <col:69>
|-FunctionDecl 0x5612e0ddae70 <line:121:1, col:92> col:12 sched_get_priority_min 'int (int)' extern
| |-ParmVarDecl 0x5612e0ddadd8 <col:36, col:40> col:40 __algorithm 'int'
| `-NoThrowAttr 0x5612e0ddaf18 <col:69>
|-FunctionDecl 0x5612e0ddb1d8 <line:122:1, col:111> col:12 sched_rr_get_interval 'int (__pid_t, struct timespec *)' extern
| |-ParmVarDecl 0x5612e0ddaf80 <col:35, col:43> col:43 __pid '__pid_t':'int'
| |-ParmVarDecl 0x5612e0ddb0b8 <col:50, col:67> col:67 __t 'struct timespec *'
| `-NoThrowAttr 0x5612e0ddb288 <col:88>
|-TypedefDecl 0x5612e0ddb318 <line:126:1, col:19> col:19 referenced clock_t '__clock_t':'long'
| `-TypedefType 0x5612e0ddb2e0 '__clock_t' sugar
|   |-Typedef 0x5612e0dd56c8 '__clock_t'
|   `-BuiltinType 0x5612e0d6df30 'long'
|-TypedefDecl 0x5612e0ddb3c0 <line:129:1, col:21> col:21 referenced clockid_t '__clockid_t':'int'
| `-TypedefType 0x5612e0ddb370 '__clockid_t' sugar
|   |-Typedef 0x5612e0dd5ab8 '__clockid_t'
|   `-BuiltinType 0x5612e0d6df10 'int'
|-TypedefDecl 0x5612e0ddb458 <line:130:1, col:19> col:19 referenced timer_t '__timer_t':'void *'
| `-TypedefType 0x5612e0ddb420 '__timer_t' sugar
|   |-Typedef 0x5612e0dd5b28 '__timer_t'
|   `-PointerType 0x5612e0d6e630 'void *'
|     `-BuiltinType 0x5612e0d6de70 'void'
|-RecordDecl 0x5612e0ddb4b0 <line:132:1, line:145:1> line:132:8 struct tm definition
| |-FieldDecl 0x5612e0ddb570 <line:134:3, col:7> col:7 tm_sec 'int'
| |-FieldDecl 0x5612e0ddb5d8 <line:135:3, col:7> col:7 tm_min 'int'
| |-FieldDecl 0x5612e0ddb640 <line:136:3, col:7> col:7 tm_hour 'int'
| |-FieldDecl 0x5612e0ddb6a8 <line:137:3, col:7> col:7 tm_mday 'int'
| |-FieldDecl 0x5612e0ddb710 <line:138:3, col:7> col:7 tm_mon 'int'
| |-FieldDecl 0x5612e0ddb778 <line:139:3, col:7> col:7 tm_year 'int'
| |-FieldDecl 0x5612e0ddb7e0 <line:140:3, col:7> col:7 tm_wday 'int'
| |-FieldDecl 0x5612e0ddb848 <line:141:3, col:7> col:7 tm_yday 'int'
| |-FieldDecl 0x5612e0ddb8b0 <line:142:3, col:7> col:7 tm_isdst 'int'
| |-FieldDecl 0x5612e0ddb918 <line:143:3, col:12> col:12 tm_gmtoff 'long'
| `-FieldDecl 0x5612e0ddb980 <line:144:3, col:15> col:15 tm_zone 'const char *'
|-RecordDecl 0x5612e0ddb9d0 <line:148:1, line:152:3> line:148:8 struct itimerspec definition
| |-FieldDecl 0x5612e0ddba98 <line:150:5, col:21> col:21 it_interval 'struct timespec':'struct timespec'
| `-FieldDecl 0x5612e0ddbb08 <line:151:5, col:21> col:21 it_value 'struct timespec':'struct timespec'
|-RecordDecl 0x5612e0ddbbb0 <line:153:1, col:8> col:8 struct sigevent
|-FunctionDecl 0x5612e0ddbd80 <line:155:1, col:68> col:16 clock 'clock_t (void)' extern
| `-NoThrowAttr 0x5612e0ddbe20 <col:45>
|-FunctionDecl 0x5612e0ddc000 <line:156:1, col:77> col:15 time 'time_t (time_t *)' extern
| |-ParmVarDecl 0x5612e0ddbef0 <col:21, col:29> col:29 __timer 'time_t *'
| `-NoThrowAttr 0x5612e0ddc0a8 <col:54>
|-FunctionDecl 0x5612e0ddc2a8 <line:157:1, line:158:73> line:157:15 difftime 'double (time_t, time_t)' extern
| |-ParmVarDecl 0x5612e0ddc110 <col:25, col:32> col:32 __time1 'time_t':'long'
| |-ParmVarDecl 0x5612e0ddc188 <col:41, col:48> col:48 __time0 'time_t':'long'
| |-NoThrowAttr 0x5612e0ddc358 <line:158:22>
| `-ConstAttr 0x5612e0ddcff0 <col:63>
|-FunctionDecl 0x5612e0ddd1f0 <line:159:1, col:79> col:15 mktime 'time_t (struct tm *)' extern
| |-ParmVarDecl 0x5612e0ddd0e8 <col:23, col:34> col:34 __tp 'struct tm *'
| `-NoThrowAttr 0x5612e0ddd298 <col:56>
|-FunctionDecl 0x5612e0ddd640 <line:160:1, line:162:77> line:160:15 strftime 'size_t (char *restrict, size_t, const char *restrict, const struct tm *restrict)' extern
| |-ParmVarDecl 0x5612e0ddd308 <col:25, col:42> col:42 __s 'char *restrict'
| |-ParmVarDecl 0x5612e0ddd380 <col:47, col:54> col:54 __maxsize 'size_t':'unsigned long'
| |-ParmVarDecl 0x5612e0ddd400 <line:161:4, col:27> col:27 __format 'const char *restrict'
| |-ParmVarDecl 0x5612e0ddd4f8 <line:162:4, col:32> col:32 __tp 'const struct tm *restrict'
| `-NoThrowAttr 0x5612e0ddd700 <col:54>
|-RecordDecl 0x5612e0ddd758 <line:164:9, line:171:1> line:164:16 struct __locale_struct definition
| |-RecordDecl 0x5612e0ddd808 parent 0x5612e0d6de18 <line:166:3, col:10> col:10 struct __locale_data
| |-FieldDecl 0x5612e0ddda68 <col:3, col:37> col:25 __locales 'struct __locale_data *[13]'
| |-FieldDecl 0x5612e0dddb08 <line:167:3, col:29> col:29 __ctype_b 'const unsigned short *'
| |-FieldDecl 0x5612e0dddb70 <line:168:3, col:14> col:14 __ctype_tolower 'const int *'
| |-FieldDecl 0x5612e0dddbd8 <line:169:3, col:14> col:14 __ctype_toupper 'const int *'
| `-FieldDecl 0x5612e0dddcc8 <line:170:3, col:25> col:15 __names 'const char *[13]'
|-TypedefDecl 0x5612e0dddde8 <line:164:1, line:171:4> col:4 referenced __locale_t 'struct __locale_struct *'
| `-PointerType 0x5612e0dddd90 'struct __locale_struct *'
|   `-ElaboratedType 0x5612e0dddd20 'struct __locale_struct' sugar
|     `-RecordType 0x5612e0ddd7e0 'struct __locale_struct'
|       `-Record 0x5612e0ddd758 '__locale_struct'
|-TypedefDecl 0x5612e0ddde98 <line:172:1, col:20> col:20 locale_t '__locale_t':'struct __locale_struct *'
| `-TypedefType 0x5612e0ddde60 '__locale_t' sugar
|   |-Typedef 0x5612e0dddde8 '__locale_t'
|   `-PointerType 0x5612e0dddd90 'struct __locale_struct *'
|     `-ElaboratedType 0x5612e0dddd20 'struct __locale_struct' sugar
|       `-RecordType 0x5612e0ddd7e0 'struct __locale_struct'
|         `-Record 0x5612e0ddd758 '__locale_struct'
|-FunctionDecl 0x5612e0ddf2a0 <line:173:1, line:176:63> line:173:15 strftime_l 'size_t (char *restrict, size_t, const char *restrict, const struct tm *restrict, __locale_t)' extern
| |-ParmVarDecl 0x5612e0dddf08 <col:27, col:44> col:44 __s 'char *restrict'
| |-ParmVarDecl 0x5612e0dddf80 <col:49, col:56> col:56 __maxsize 'size_t':'unsigned long'
| |-ParmVarDecl 0x5612e0ddf028 <line:174:6, col:29> col:29 __format 'const char *restrict'
| |-ParmVarDecl 0x5612e0ddf0b8 <line:175:6, col:34> col:34 __tp 'const struct tm *restrict'
| |-ParmVarDecl 0x5612e0ddf130 <line:176:6, col:17> col:17 __loc '__locale_t':'struct __locale_struct *'
| `-NoThrowAttr 0x5612e0ddf368 <col:40>
|-FunctionDecl 0x5612e0ddf558 <line:178:1, col:89> col:19 gmtime 'struct tm *(const time_t *)' extern
| |-ParmVarDecl 0x5612e0ddf430 <col:27, col:41> col:41 __timer 'const time_t *'
| `-NoThrowAttr 0x5612e0ddf600 <col:66>
|-FunctionDecl 0x5612e0ddf710 <line:179:1, col:92> col:19 localtime 'struct tm *(const time_t *)' extern
| |-ParmVarDecl 0x5612e0ddf668 <col:30, col:44> col:44 __timer 'const time_t *'
| `-NoThrowAttr 0x5612e0ddf7b8 <col:69>
|-FunctionDecl 0x5612e0ddf9e8 <line:181:1, line:182:75> line:181:19 gmtime_r 'struct tm *(const time_t *restrict, struct tm *restrict)' extern
| |-ParmVarDecl 0x5612e0ddf820 <col:29, col:54> col:54 __timer 'const time_t *restrict'
| |-ParmVarDecl 0x5612e0ddf8b0 <line:182:8, col:30> col:30 __tp 'struct tm *restrict'
| `-NoThrowAttr 0x5612e0ddfa98 <col:52>
|-FunctionDecl 0x5612e0ddfc40 <line:183:1, line:184:78> line:183:19 localtime_r 'struct tm *(const time_t *restrict, struct tm *restrict)' extern
| |-ParmVarDecl 0x5612e0ddfb00 <col:32, col:57> col:57 __timer 'const time_t *restrict'
| |-ParmVarDecl 0x5612e0ddfb90 <line:184:11, col:33> col:33 __tp 'struct tm *restrict'
| `-NoThrowAttr 0x5612e0ddfcf0 <col:55>
|-FunctionDecl 0x5612e0ddfe88 <line:186:1, col:85> col:14 asctime 'char *(const struct tm *)' extern
| |-ParmVarDecl 0x5612e0ddfd70 <col:23, col:40> col:40 __tp 'const struct tm *'
| `-NoThrowAttr 0x5612e0ddff30 <col:62>
|-FunctionDecl 0x5612e0de0168 <line:187:1, col:83> col:14 ctime 'char *(const time_t *)' extern
| |-ParmVarDecl 0x5612e0ddff98 <col:21, col:35> col:35 __timer 'const time_t *'
| `-NoThrowAttr 0x5612e0de0210 <col:60>
|-FunctionDecl 0x5612e0de0438 <line:189:1, line:190:67> line:189:14 asctime_r 'char *(const struct tm *restrict, char *restrict)' extern
| |-ParmVarDecl 0x5612e0de0290 <col:25, col:53> col:53 __tp 'const struct tm *restrict'
| |-ParmVarDecl 0x5612e0de0310 <line:190:4, col:21> col:21 __buf 'char *restrict'
| `-NoThrowAttr 0x5612e0de04e8 <col:44>
|-FunctionDecl 0x5612e0de06f8 <line:191:1, line:192:72> line:191:14 ctime_r 'char *(const time_t *restrict, char *restrict)' extern
| |-ParmVarDecl 0x5612e0de0550 <col:23, col:48> col:48 __timer 'const time_t *restrict'
| |-ParmVarDecl 0x5612e0de05d0 <line:192:9, col:26> col:26 __buf 'char *restrict'
| `-NoThrowAttr 0x5612e0de07a8 <col:49>
|-VarDecl 0x5612e0de08a8 <line:193:1, col:24> col:14 __tzname 'char *[2]' extern
|-VarDecl 0x5612e0de0928 <line:194:1, col:12> col:12 __daylight 'int' extern
|-VarDecl 0x5612e0de09a8 <line:195:1, col:17> col:17 __timezone 'long' extern
|-VarDecl 0x5612e0de0a70 <line:196:1, col:22> col:14 tzname 'char *[2]' extern
|-FunctionDecl 0x5612e0de0ba0 <line:197:1, col:65> col:13 tzset 'void (void)' extern
| `-NoThrowAttr 0x5612e0de0c40 <col:42>
|-VarDecl 0x5612e0de0cb0 <line:198:1, col:12> col:12 daylight 'int' extern
|-VarDecl 0x5612e0de0d30 <line:199:1, col:17> col:17 timezone 'long' extern
|-FunctionDecl 0x5612e0de0eb8 <line:200:1, col:80> col:12 stime 'int (const time_t *)' extern
| |-ParmVarDecl 0x5612e0de0da8 <col:19, col:33> col:33 __when 'const time_t *'
| `-NoThrowAttr 0x5612e0de0f60 <col:57>
|-FunctionDecl 0x5612e0de10d0 <line:201:1, col:79> col:15 timegm 'time_t (struct tm *)' extern
| |-ParmVarDecl 0x5612e0de0fe0 <col:23, col:34> col:34 __tp 'struct tm *'
| `-NoThrowAttr 0x5612e0de1178 <col:56>
|-FunctionDecl 0x5612e0de1288 <line:202:1, col:82> col:15 timelocal 'time_t (struct tm *)' extern
| |-ParmVarDecl 0x5612e0de11f8 <col:26, col:37> col:37 __tp 'struct tm *'
| `-NoThrowAttr 0x5612e0de1330 <col:59>
|-FunctionDecl 0x5612e0de1438 <line:203:1, col:99> col:12 dysize 'int (int)' extern
| |-ParmVarDecl 0x5612e0de13a0 <col:20, col:24> col:24 __year 'int'
| |-NoThrowAttr 0x5612e0de14e0 <col:48>
| `-ConstAttr 0x5612e0de1538 <col:89>
|-FunctionDecl 0x5612e0de1798 <line:204:1, line:205:37> line:204:12 nanosleep 'int (const struct timespec *, struct timespec *)' extern
| |-ParmVarDecl 0x5612e0de15e8 <col:23, col:46> col:46 __requested_time 'const struct timespec *'
| `-ParmVarDecl 0x5612e0de1678 <line:205:9, col:26> col:26 __remaining 'struct timespec *'
|-FunctionDecl 0x5612e0de19f8 <line:206:1, col:111> col:12 clock_getres 'int (clockid_t, struct timespec *)' extern
| |-ParmVarDecl 0x5612e0de1888 <col:26, col:36> col:36 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x5612e0de1918 <col:48, col:65> col:65 __res 'struct timespec *'
| `-NoThrowAttr 0x5612e0de1aa8 <col:88>
|-FunctionDecl 0x5612e0de1c40 <line:207:1, col:111> col:12 clock_gettime 'int (clockid_t, struct timespec *)' extern
| |-ParmVarDecl 0x5612e0de1b10 <col:27, col:37> col:37 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x5612e0de1ba0 <col:49, col:66> col:66 __tp 'struct timespec *'
| `-NoThrowAttr 0x5612e0de1cf0 <col:88>
|-FunctionDecl 0x5612e0de1f08 <line:208:1, line:209:45> line:208:12 clock_settime 'int (clockid_t, const struct timespec *)' extern
| |-ParmVarDecl 0x5612e0de1d58 <col:27, col:37> col:37 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x5612e0de1de8 <col:49, col:72> col:72 __tp 'const struct timespec *'
| `-NoThrowAttr 0x5612e0de1fb8 <line:209:22>
|-FunctionDecl 0x5612e0de2358 <line:210:1, line:212:30> line:210:12 clock_nanosleep 'int (clockid_t, int, const struct timespec *, struct timespec *)' extern
| |-ParmVarDecl 0x5612e0de2020 <col:29, col:39> col:39 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x5612e0de20e0 <col:51, col:55> col:55 __flags 'int'
| |-ParmVarDecl 0x5612e0de2170 <line:211:8, col:31> col:31 __req 'const struct timespec *'
| `-ParmVarDecl 0x5612e0de2200 <line:212:8, col:25> col:25 __rem 'struct timespec *'
|-FunctionDecl 0x5612e0de2658 <line:213:1, col:108> col:12 clock_getcpuclockid 'int (pid_t, clockid_t *)' extern
| |-ParmVarDecl 0x5612e0de2458 <col:33, col:39> col:39 __pid 'pid_t':'int'
| |-ParmVarDecl 0x5612e0de2530 <col:46, col:57> col:57 __clock_id 'clockid_t *'
| `-NoThrowAttr 0x5612e0de2708 <col:85>
|-FunctionDecl 0x5612e0de2af8 <line:214:1, line:216:75> line:214:12 timer_create 'int (clockid_t, struct sigevent *restrict, timer_t *restrict)' extern
| |-ParmVarDecl 0x5612e0de2770 <col:26, col:36> col:36 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x5612e0de28a8 <line:215:5, col:33> col:33 __evp 'struct sigevent *restrict'
| |-ParmVarDecl 0x5612e0de29b0 <line:216:5, col:25> col:25 __timerid 'timer_t *restrict'
| `-NoThrowAttr 0x5612e0de2bb0 <col:52>
|-FunctionDecl 0x5612e0de2d28 <line:217:1, col:84> col:12 timer_delete 'int (timer_t)' extern
| |-ParmVarDecl 0x5612e0de2c18 <col:26, col:34> col:34 __timerid 'timer_t':'void *'
| `-NoThrowAttr 0x5612e0de2dd0 <col:61>
|-FunctionDecl 0x5612e0de3248 <line:218:1, line:220:85> line:218:12 timer_settime 'int (timer_t, int, const struct itimerspec *restrict, struct itimerspec *restrict)' extern
| |-ParmVarDecl 0x5612e0de2e38 <col:27, col:35> col:35 __timerid 'timer_t':'void *'
| |-ParmVarDecl 0x5612e0de2eb8 <col:46, col:50> col:50 __flags 'int'
| |-ParmVarDecl 0x5612e0de2fe8 <line:219:6, col:42> col:42 __value 'const struct itimerspec *restrict'
| |-ParmVarDecl 0x5612e0de30f0 <line:220:6, col:36> col:36 __ovalue 'struct itimerspec *restrict'
| `-NoThrowAttr 0x5612e0de3308 <col:62>
|-FunctionDecl 0x5612e0de3528 <line:221:1, line:222:45> line:221:12 timer_gettime 'int (timer_t, struct itimerspec *)' extern
| |-ParmVarDecl 0x5612e0de3370 <col:27, col:35> col:35 __timerid 'timer_t':'void *'
| |-ParmVarDecl 0x5612e0de3400 <col:46, col:65> col:65 __value 'struct itimerspec *'
| `-NoThrowAttr 0x5612e0de35d8 <line:222:22>
|-FunctionDecl 0x5612e0de36d8 <line:223:1, col:88> col:12 timer_getoverrun 'int (timer_t)' extern
| |-ParmVarDecl 0x5612e0de3640 <col:30, col:38> col:38 __timerid 'timer_t':'void *'
| `-NoThrowAttr 0x5612e0de3780 <col:65>
|-TypedefDecl 0x5612e0de37f0 <line:225:1, col:27> col:27 referenced pthread_t 'unsigned long'
| `-BuiltinType 0x5612e0d6dfd0 'unsigned long'
|-RecordDecl 0x5612e0de3848 <line:226:1, line:230:1> line:226:7 union pthread_attr_t definition
| |-FieldDecl 0x5612e0de3990 <line:228:3, col:17> col:8 __size 'char [56]'
| `-FieldDecl 0x5612e0de39f8 <line:229:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x5612e0de3aa8 <line:231:1, col:30> col:30 referenced pthread_attr_t 'union pthread_attr_t':'union pthread_attr_t'
| `-ElaboratedType 0x5612e0de3a50 'union pthread_attr_t' sugar
|   `-RecordType 0x5612e0de38d0 'union pthread_attr_t'
|     `-Record 0x5612e0de3848 'pthread_attr_t'
|-RecordDecl 0x5612e0de3b00 <line:232:9, line:236:1> line:232:16 struct __pthread_internal_list definition
| |-FieldDecl 0x5612e0de3c78 <line:234:3, col:35> col:35 __prev 'struct __pthread_internal_list *'
| `-FieldDecl 0x5612e0de3cf0 <line:235:3, col:35> col:35 __next 'struct __pthread_internal_list *'
|-TypedefDecl 0x5612e0de3da0 <line:232:1, line:236:3> col:3 referenced __pthread_list_t 'struct __pthread_internal_list':'struct __pthread_internal_list'
| `-ElaboratedType 0x5612e0de3d40 'struct __pthread_internal_list' sugar
|   `-RecordType 0x5612e0de3b80 'struct __pthread_internal_list'
|     `-Record 0x5612e0de3b00 '__pthread_internal_list'
|-RecordDecl 0x5612e0de3e10 <line:237:9, line:251:1> line:237:9 union definition
| |-RecordDecl 0x5612e0de3eb8 parent 0x5612e0d6de18 <line:239:3, line:248:3> line:239:10 struct __pthread_mutex_s definition
| | |-FieldDecl 0x5612e0de3f90 <line:241:5, col:9> col:9 __lock 'int'
| | |-FieldDecl 0x5612e0de3ff8 <line:242:5, col:18> col:18 __count 'unsigned int'
| | |-FieldDecl 0x5612e0de4060 <line:243:5, col:9> col:9 __owner 'int'
| | |-FieldDecl 0x5612e0de8110 <line:244:5, col:18> col:18 __nusers 'unsigned int'
| | |-FieldDecl 0x5612e0de8178 <line:245:5, col:9> col:9 __kind 'int'
| | |-FieldDecl 0x5612e0de81e0 <line:246:5, col:9> col:9 __spins 'int'
| | `-FieldDecl 0x5612e0de8268 <line:247:5, col:22> col:22 __list '__pthread_list_t':'struct __pthread_internal_list'
| |-FieldDecl 0x5612e0de8320 <line:239:3, line:248:5> col:5 __data 'struct __pthread_mutex_s':'struct __pthread_mutex_s'
| |-FieldDecl 0x5612e0de8410 <line:249:3, col:17> col:8 __size 'char [40]'
| `-FieldDecl 0x5612e0de8478 <line:250:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x5612e0de8600 <line:237:1, line:251:3> col:3 referenced pthread_mutex_t 'union pthread_mutex_t':'pthread_mutex_t'
| `-ElaboratedType 0x5612e0de85a0 'union pthread_mutex_t' sugar
|   `-RecordType 0x5612e0de3e90 'pthread_mutex_t'
|     `-Record 0x5612e0de3e10 ''
|-RecordDecl 0x5612e0de8670 <line:252:9, line:256:1> line:252:9 union definition
| |-FieldDecl 0x5612e0de87b0 <line:254:3, col:16> col:8 __size 'char [4]'
| `-FieldDecl 0x5612e0de8818 <line:255:3, col:7> col:7 __align 'int'
|-TypedefDecl 0x5612e0de88d0 <line:252:1, line:256:3> col:3 referenced pthread_mutexattr_t 'union pthread_mutexattr_t':'pthread_mutexattr_t'
| `-ElaboratedType 0x5612e0de8870 'union pthread_mutexattr_t' sugar
|   `-RecordType 0x5612e0de86f0 'pthread_mutexattr_t'
|     `-Record 0x5612e0de8670 ''
|-RecordDecl 0x5612e0de8940 <line:257:9, line:272:1> line:257:9 union definition
| |-RecordDecl 0x5612e0de89e8 <line:259:3, line:269:3> line:259:3 struct definition
| | |-FieldDecl 0x5612e0de8ab0 <line:261:5, col:9> col:9 __lock 'int'
| | |-FieldDecl 0x5612e0de8b18 <line:262:5, col:18> col:18 __futex 'unsigned int'
| | |-FieldDecl 0x5612e0de8b80 <line:263:19, col:42> col:42 __total_seq 'unsigned long long'
| | |-FieldDecl 0x5612e0de8be8 <line:264:19, col:42> col:42 __wakeup_seq 'unsigned long long'
| | |-FieldDecl 0x5612e0de8c50 <line:265:19, col:42> col:42 __woken_seq 'unsigned long long'
| | |-FieldDecl 0x5612e0de8cb8 <line:266:5, col:11> col:11 __mutex 'void *'
| | |-FieldDecl 0x5612e0de8d20 <line:267:5, col:18> col:18 __nwaiters 'unsigned int'
| | `-FieldDecl 0x5612e0de8d88 <line:268:5, col:18> col:18 __broadcast_seq 'unsigned int'
| |-FieldDecl 0x5612e0de8e40 <line:259:3, line:269:5> col:5 __data 'struct (anonymous struct at ./split_4/safe028_rmo.opt_false-unreach-call.i:259:3)':'struct pthread_cond_t::(anonymous at ./split_4/safe028_rmo.opt_false-unreach-call.i:259:3)'
| |-FieldDecl 0x5612e0de8f30 <line:270:3, col:17> col:8 __size 'char [48]'
| `-FieldDecl 0x5612e0de8f98 <line:271:17, col:31> col:31 __align 'long long'
|-TypedefDecl 0x5612e0dea130 <line:257:1, line:272:3> col:3 referenced pthread_cond_t 'union pthread_cond_t':'pthread_cond_t'
| `-ElaboratedType 0x5612e0de9070 'union pthread_cond_t' sugar
|   `-RecordType 0x5612e0de89c0 'pthread_cond_t'
|     `-Record 0x5612e0de8940 ''
|-RecordDecl 0x5612e0dea1a0 <line:273:9, line:277:1> line:273:9 union definition
| |-FieldDecl 0x5612e0dea2a0 <line:275:3, col:16> col:8 __size 'char [4]'
| `-FieldDecl 0x5612e0dea308 <line:276:3, col:7> col:7 __align 'int'
|-TypedefDecl 0x5612e0dea3c0 <line:273:1, line:277:3> col:3 referenced pthread_condattr_t 'union pthread_condattr_t':'pthread_condattr_t'
| `-ElaboratedType 0x5612e0dea360 'union pthread_condattr_t' sugar
|   `-RecordType 0x5612e0dea220 'pthread_condattr_t'
|     `-Record 0x5612e0dea1a0 ''
|-TypedefDecl 0x5612e0dea448 <line:278:1, col:22> col:22 referenced pthread_key_t 'unsigned int'
| `-BuiltinType 0x5612e0d6dfb0 'unsigned int'
|-TypedefDecl 0x5612e0dea4b8 <line:279:1, col:13> col:13 referenced pthread_once_t 'int'
| `-BuiltinType 0x5612e0d6df10 'int'
|-RecordDecl 0x5612e0dea510 <line:280:9, line:298:1> line:280:9 union definition
| |-RecordDecl 0x5612e0dea5b8 <line:282:3, line:295:3> line:282:3 struct definition
| | |-FieldDecl 0x5612e0dea680 <line:284:5, col:9> col:9 __lock 'int'
| | |-FieldDecl 0x5612e0dea6e8 <line:285:5, col:18> col:18 __nr_readers 'unsigned int'
| | |-FieldDecl 0x5612e0dea750 <line:286:5, col:18> col:18 __readers_wakeup 'unsigned int'
| | |-FieldDecl 0x5612e0dea7b8 <line:287:5, col:18> col:18 __writer_wakeup 'unsigned int'
| | |-FieldDecl 0x5612e0dea820 <line:288:5, col:18> col:18 __nr_readers_queued 'unsigned int'
| | |-FieldDecl 0x5612e0dea888 <line:289:5, col:18> col:18 __nr_writers_queued 'unsigned int'
| | |-FieldDecl 0x5612e0dea8f0 <line:290:5, col:9> col:9 __writer 'int'
| | |-FieldDecl 0x5612e0dea958 <line:291:5, col:9> col:9 __shared 'int'
| | |-FieldDecl 0x5612e0dea9c0 <line:292:5, col:23> col:23 __pad1 'unsigned long'
| | |-FieldDecl 0x5612e0deaa28 <line:293:5, col:23> col:23 __pad2 'unsigned long'
| | `-FieldDecl 0x5612e0deaa90 <line:294:5, col:18> col:18 __flags 'unsigned int'
| |-FieldDecl 0x5612e0deab40 <line:282:3, line:295:5> col:5 __data 'struct (anonymous struct at ./split_4/safe028_rmo.opt_false-unreach-call.i:282:3)':'struct pthread_rwlock_t::(anonymous at ./split_4/safe028_rmo.opt_false-unreach-call.i:282:3)'
| |-FieldDecl 0x5612e0deabe8 <line:296:3, col:17> col:8 __size 'char [56]'
| `-FieldDecl 0x5612e0deac50 <line:297:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x5612e0deada0 <line:280:1, line:298:3> col:3 referenced pthread_rwlock_t 'union pthread_rwlock_t':'pthread_rwlock_t'
| `-ElaboratedType 0x5612e0dead40 'union pthread_rwlock_t' sugar
|   `-RecordType 0x5612e0dea590 'pthread_rwlock_t'
|     `-Record 0x5612e0dea510 ''
|-RecordDecl 0x5612e0deae10 <line:299:9, line:303:1> line:299:9 union definition
| |-FieldDecl 0x5612e0deaf50 <line:301:3, col:16> col:8 __size 'char [8]'
| `-FieldDecl 0x5612e0deafb8 <line:302:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x5612e0deb070 <line:299:1, line:303:3> col:3 referenced pthread_rwlockattr_t 'union pthread_rwlockattr_t':'pthread_rwlockattr_t'
| `-ElaboratedType 0x5612e0deb010 'union pthread_rwlockattr_t' sugar
|   `-RecordType 0x5612e0deae90 'pthread_rwlockattr_t'
|     `-Record 0x5612e0deae10 ''
|-TypedefDecl 0x5612e0dec140 <line:304:1, col:22> col:22 referenced pthread_spinlock_t 'volatile int'
| `-QualType 0x5612e0d6df14 'volatile int' volatile
|   `-BuiltinType 0x5612e0d6df10 'int'
|-RecordDecl 0x5612e0dec198 <line:305:9, line:309:1> line:305:9 union definition
| |-FieldDecl 0x5612e0dec2e0 <line:307:3, col:17> col:8 __size 'char [32]'
| `-FieldDecl 0x5612e0dec348 <line:308:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x5612e0dec400 <line:305:1, line:309:3> col:3 referenced pthread_barrier_t 'union pthread_barrier_t':'pthread_barrier_t'
| `-ElaboratedType 0x5612e0dec3a0 'union pthread_barrier_t' sugar
|   `-RecordType 0x5612e0dec220 'pthread_barrier_t'
|     `-Record 0x5612e0dec198 ''
|-RecordDecl 0x5612e0dec470 <line:310:9, line:314:1> line:310:9 union definition
| |-FieldDecl 0x5612e0dec570 <line:312:3, col:16> col:8 __size 'char [4]'
| `-FieldDecl 0x5612e0dec5d8 <line:313:3, col:7> col:7 __align 'int'
|-TypedefDecl 0x5612e0dec690 <line:310:1, line:314:3> col:3 referenced pthread_barrierattr_t 'union pthread_barrierattr_t':'pthread_barrierattr_t'
| `-ElaboratedType 0x5612e0dec630 'union pthread_barrierattr_t' sugar
|   `-RecordType 0x5612e0dec4f0 'pthread_barrierattr_t'
|     `-Record 0x5612e0dec470 ''
|-TypedefDecl 0x5612e0dec7a8 <line:315:1, col:29> col:18 referenced __jmp_buf 'long [8]'
| `-ConstantArrayType 0x5612e0dec740 'long [8]' 8 
|   `-BuiltinType 0x5612e0d6df30 'long'
|-EnumDecl 0x5612e0dec800 <line:316:1, line:320:1> line:316:1
| |-EnumConstantDecl 0x5612e0dec8c8 <line:318:3> col:3 PTHREAD_CREATE_JOINABLE 'int'
| `-EnumConstantDecl 0x5612e0dec918 <line:319:3> col:3 PTHREAD_CREATE_DETACHED 'int'
|-EnumDecl 0x5612e0dec968 <line:321:1, line:332:1> line:321:1
| |-EnumConstantDecl 0x5612e0deca38 <line:323:3> col:3 referenced PTHREAD_MUTEX_TIMED_NP 'int'
| |-EnumConstantDecl 0x5612e0deca88 <line:324:3> col:3 referenced PTHREAD_MUTEX_RECURSIVE_NP 'int'
| |-EnumConstantDecl 0x5612e0decad8 <line:325:3> col:3 referenced PTHREAD_MUTEX_ERRORCHECK_NP 'int'
| |-EnumConstantDecl 0x5612e0decb28 <line:326:3> col:3 PTHREAD_MUTEX_ADAPTIVE_NP 'int'
| |-EnumConstantDecl 0x5612e0decbb0 <line:328:3, col:26> col:3 referenced PTHREAD_MUTEX_NORMAL 'int'
| | `-ConstantExpr 0x5612e0decb98 <col:26> 'int'
| |   `-DeclRefExpr 0x5612e0decb78 <col:26> 'int' EnumConstant 0x5612e0deca38 'PTHREAD_MUTEX_TIMED_NP' 'int'
| |-EnumConstantDecl 0x5612e0decc38 <line:329:3, col:29> col:3 PTHREAD_MUTEX_RECURSIVE 'int'
| | `-ConstantExpr 0x5612e0decc20 <col:29> 'int'
| |   `-DeclRefExpr 0x5612e0decc00 <col:29> 'int' EnumConstant 0x5612e0deca88 'PTHREAD_MUTEX_RECURSIVE_NP' 'int'
| |-EnumConstantDecl 0x5612e0deccc0 <line:330:3, col:30> col:3 PTHREAD_MUTEX_ERRORCHECK 'int'
| | `-ConstantExpr 0x5612e0decca8 <col:30> 'int'
| |   `-DeclRefExpr 0x5612e0decc88 <col:30> 'int' EnumConstant 0x5612e0decad8 'PTHREAD_MUTEX_ERRORCHECK_NP' 'int'
| `-EnumConstantDecl 0x5612e0decd48 <line:331:3, col:27> col:3 PTHREAD_MUTEX_DEFAULT 'int'
|   `-ConstantExpr 0x5612e0decd30 <col:27> 'int'
|     `-DeclRefExpr 0x5612e0decd10 <col:27> 'int' EnumConstant 0x5612e0decbb0 'PTHREAD_MUTEX_NORMAL' 'int'
|-EnumDecl 0x5612e0decd98 <line:333:1, line:339:1> line:333:1
| |-EnumConstantDecl 0x5612e0dece68 <line:335:3> col:3 referenced PTHREAD_MUTEX_STALLED 'int'
| |-EnumConstantDecl 0x5612e0decef0 <line:336:3, col:30> col:3 PTHREAD_MUTEX_STALLED_NP 'int'
| | `-ConstantExpr 0x5612e0deced8 <col:30> 'int'
| |   `-DeclRefExpr 0x5612e0deceb8 <col:30> 'int' EnumConstant 0x5612e0dece68 'PTHREAD_MUTEX_STALLED' 'int'
| |-EnumConstantDecl 0x5612e0decf40 <line:337:3> col:3 referenced PTHREAD_MUTEX_ROBUST 'int'
| `-EnumConstantDecl 0x5612e0decfc8 <line:338:3, col:29> col:3 PTHREAD_MUTEX_ROBUST_NP 'int'
|   `-ConstantExpr 0x5612e0decfb0 <col:29> 'int'
|     `-DeclRefExpr 0x5612e0decf90 <col:29> 'int' EnumConstant 0x5612e0decf40 'PTHREAD_MUTEX_ROBUST' 'int'
|-EnumDecl 0x5612e0ded018 <line:340:1, line:345:1> line:340:1
| |-EnumConstantDecl 0x5612e0ded0e8 <line:342:3> col:3 PTHREAD_PRIO_NONE 'int'
| |-EnumConstantDecl 0x5612e0ded150 <line:343:3> col:3 PTHREAD_PRIO_INHERIT 'int'
| `-EnumConstantDecl 0x5612e0ded1a0 <line:344:3> col:3 PTHREAD_PRIO_PROTECT 'int'
|-EnumDecl 0x5612e0ded1f0 <line:346:1, line:352:1> line:346:1
| |-EnumConstantDecl 0x5612e0ded2b8 <line:348:3> col:3 referenced PTHREAD_RWLOCK_PREFER_READER_NP 'int'
| |-EnumConstantDecl 0x5612e0ded308 <line:349:3> col:3 PTHREAD_RWLOCK_PREFER_WRITER_NP 'int'
| |-EnumConstantDecl 0x5612e0ded358 <line:350:3> col:3 PTHREAD_RWLOCK_PREFER_WRITER_NONRECURSIVE_NP 'int'
| `-EnumConstantDecl 0x5612e0ded3e0 <line:351:3, col:31> col:3 PTHREAD_RWLOCK_DEFAULT_NP 'int'
|   `-ConstantExpr 0x5612e0ded3c8 <col:31> 'int'
|     `-DeclRefExpr 0x5612e0ded3a8 <col:31> 'int' EnumConstant 0x5612e0ded2b8 'PTHREAD_RWLOCK_PREFER_READER_NP' 'int'
|-EnumDecl 0x5612e0ded430 <line:353:1, line:357:1> line:353:1
| |-EnumConstantDecl 0x5612e0ded4f8 <line:355:3> col:3 PTHREAD_INHERIT_SCHED 'int'
| `-EnumConstantDecl 0x5612e0ded548 <line:356:3> col:3 PTHREAD_EXPLICIT_SCHED 'int'
|-EnumDecl 0x5612e0ded598 <line:358:1, line:362:1> line:358:1
| |-EnumConstantDecl 0x5612e0ded668 <line:360:3> col:3 PTHREAD_SCOPE_SYSTEM 'int'
| `-EnumConstantDecl 0x5612e0ded6b8 <line:361:3> col:3 PTHREAD_SCOPE_PROCESS 'int'
|-EnumDecl 0x5612e0ded708 <line:363:1, line:367:1> line:363:1
| |-EnumConstantDecl 0x5612e0ded7d8 <line:365:3> col:3 PTHREAD_PROCESS_PRIVATE 'int'
| `-EnumConstantDecl 0x5612e0ded828 <line:366:3> col:3 PTHREAD_PROCESS_SHARED 'int'
|-RecordDecl 0x5612e0ded878 <line:368:1, line:374:1> line:368:8 struct _pthread_cleanup_buffer definition
| |-FieldDecl 0x5612e0dedab8 <line:370:3, col:28> col:10 __routine 'void (*)(void *)'
| |-FieldDecl 0x5612e0dedb20 <line:371:3, col:9> col:9 __arg 'void *'
| |-FieldDecl 0x5612e0dedb88 <line:372:3, col:7> col:7 __canceltype 'int'
| `-FieldDecl 0x5612e0dedca8 <line:373:3, col:35> col:35 __prev 'struct _pthread_cleanup_buffer *'
|-EnumDecl 0x5612e0dedcf8 <line:375:1, line:379:1> line:375:1
| |-EnumConstantDecl 0x5612e0deddc8 <line:377:3> col:3 PTHREAD_CANCEL_ENABLE 'int'
| `-EnumConstantDecl 0x5612e0dede18 <line:378:3> col:3 PTHREAD_CANCEL_DISABLE 'int'
|-EnumDecl 0x5612e0dede68 <line:380:1, line:384:1> line:380:1
| |-EnumConstantDecl 0x5612e0dedf38 <line:382:3> col:3 PTHREAD_CANCEL_DEFERRED 'int'
| `-EnumConstantDecl 0x5612e0dedf88 <line:383:3> col:3 PTHREAD_CANCEL_ASYNCHRONOUS 'int'
|-FunctionDecl 0x5612e0dee5b8 <line:386:1, line:389:96> line:386:12 used pthread_create 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' extern
| |-ParmVarDecl 0x5612e0dee080 <col:28, col:50> col:50 __newthread 'pthread_t *restrict'
| |-ParmVarDecl 0x5612e0dee1a0 <line:387:7, col:40> col:40 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x5612e0dee3a0 <line:388:7, col:39> col:15 __start_routine 'void *(*)(void *)'
| |-ParmVarDecl 0x5612e0dee420 <line:389:7, col:24> col:24 __arg 'void *restrict'
| |-NoThrowAttr 0x5612e0dee678 <col:47>
| |-NonNullAttr 0x5612e0dee6d0 <col:77, col:94> 1 3
| `-CallbackAttr 0x5612e0dee708 <line:386:12> Implicit 2 3
|-FunctionDecl 0x5612e0dee830 <line:390:1, col:72> col:13 pthread_exit 'void (void *) __attribute__((noreturn))' extern
| `-ParmVarDecl 0x5612e0dee760 <col:27, col:33> col:33 __retval 'void *'
|-FunctionDecl 0x5612e0deea88 <line:391:1, col:64> col:12 pthread_join 'int (pthread_t, void **)' extern
| |-ParmVarDecl 0x5612e0dee8e8 <col:26, col:36> col:36 __th 'pthread_t':'unsigned long'
| `-ParmVarDecl 0x5612e0dee968 <col:42, col:49> col:49 __thread_return 'void **'
|-FunctionDecl 0x5612e0deec58 <line:392:1, col:83> col:12 pthread_detach 'int (pthread_t)' extern
| |-ParmVarDecl 0x5612e0deeb48 <col:28, col:38> col:38 __th 'pthread_t':'unsigned long'
| `-NoThrowAttr 0x5612e0deed00 <col:60>
|-FunctionDecl 0x5612e0deee50 <line:393:1, col:105> col:18 pthread_self 'pthread_t (void)' extern
| |-NoThrowAttr 0x5612e0deeef0 <col:54>
| `-ConstAttr 0x5612e0deef48 <col:95>
|-FunctionDecl 0x5612e0df0990 <line:394:1, line:395:70> line:394:12 pthread_equal 'int (pthread_t, pthread_t)' extern
| |-ParmVarDecl 0x5612e0deef80 <col:27, col:37> col:37 __thread1 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x5612e0deeff8 <col:48, col:58> col:58 __thread2 'pthread_t':'unsigned long'
| |-NoThrowAttr 0x5612e0df0a40 <line:395:19>
| `-ConstAttr 0x5612e0df0a98 <col:60>
|-FunctionDecl 0x5612e0df0c68 <line:396:1, col:128> col:12 pthread_attr_init 'int (pthread_attr_t *)' extern
| |-ParmVarDecl 0x5612e0df0b30 <col:31, col:47> col:47 __attr 'pthread_attr_t *'
| |-NoThrowAttr 0x5612e0df0d10 <col:71>
| `-NonNullAttr 0x5612e0df0d68 <col:112, col:126> 1
|-FunctionDecl 0x5612e0df0e70 <line:397:1, line:398:79> line:397:12 pthread_attr_destroy 'int (pthread_attr_t *)' extern
| |-ParmVarDecl 0x5612e0df0db8 <col:34, col:50> col:50 __attr 'pthread_attr_t *'
| |-NoThrowAttr 0x5612e0df0f18 <line:398:22>
| `-NonNullAttr 0x5612e0df0f70 <col:63, col:77> 1
|-FunctionDecl 0x5612e0df1198 <line:399:1, line:401:82> line:399:12 pthread_attr_getdetachstate 'int (const pthread_attr_t *, int *)' extern
| |-ParmVarDecl 0x5612e0df0fb8 <col:41, col:63> col:63 __attr 'const pthread_attr_t *'
| |-ParmVarDecl 0x5612e0df1038 <line:400:6, col:11> col:11 __detachstate 'int *'
| |-NoThrowAttr 0x5612e0df1248 <line:401:22>
| `-NonNullAttr 0x5612e0df12a0 <col:63, col:80> 1 2
|-FunctionDecl 0x5612e0df14a8 <line:402:1, line:404:79> line:402:12 pthread_attr_setdetachstate 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x5612e0df12e8 <col:41, col:57> col:57 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x5612e0df1368 <line:403:6, col:10> col:10 __detachstate 'int'
| |-NoThrowAttr 0x5612e0df1558 <line:404:22>
| `-NonNullAttr 0x5612e0df15b0 <col:63, col:77> 1
|-FunctionDecl 0x5612e0df1808 <line:405:1, line:407:82> line:405:12 pthread_attr_getguardsize 'int (const pthread_attr_t *, size_t *)' extern
| |-ParmVarDecl 0x5612e0df15f8 <col:39, col:61> col:61 __attr 'const pthread_attr_t *'
| |-ParmVarDecl 0x5612e0df16a0 <line:406:11, col:19> col:19 __guardsize 'size_t *'
| |-NoThrowAttr 0x5612e0df18b8 <line:407:22>
| `-NonNullAttr 0x5612e0df1910 <col:63, col:80> 1 2
|-FunctionDecl 0x5612e0df2b68 <line:408:1, line:410:79> line:408:12 pthread_attr_setguardsize 'int (pthread_attr_t *, size_t)' extern
| |-ParmVarDecl 0x5612e0df29b0 <col:39, col:55> col:55 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x5612e0df2a28 <line:409:11, col:18> col:18 __guardsize 'size_t':'unsigned long'
| |-NoThrowAttr 0x5612e0df2c18 <line:410:22>
| `-NonNullAttr 0x5612e0df2c70 <col:63, col:77> 1
|-FunctionDecl 0x5612e0df2ea8 <line:411:1, line:413:82> line:411:12 pthread_attr_getschedparam 'int (const pthread_attr_t *restrict, struct sched_param *restrict)' extern
| |-ParmVarDecl 0x5612e0df2cb8 <col:40, col:73> col:73 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x5612e0df2d48 <line:412:12, col:43> col:43 __param 'struct sched_param *restrict'
| |-NoThrowAttr 0x5612e0df2f58 <line:413:22>
| `-NonNullAttr 0x5612e0df2fb0 <col:63, col:80> 1 2
|-FunctionDecl 0x5612e0df31e8 <line:414:1, line:416:97> line:414:12 pthread_attr_setschedparam 'int (pthread_attr_t *restrict, const struct sched_param *restrict)' extern
| |-ParmVarDecl 0x5612e0df2ff8 <col:40, col:67> col:67 __attr 'pthread_attr_t *restrict'
| |-ParmVarDecl 0x5612e0df3088 <line:415:12, line:416:12> col:12 __param 'const struct sched_param *restrict'
| |-NoThrowAttr 0x5612e0df3298 <col:37>
| `-NonNullAttr 0x5612e0df32f0 <col:78, col:95> 1 2
|-FunctionDecl 0x5612e0df34d8 <line:417:1, line:419:82> line:417:12 pthread_attr_getschedpolicy 'int (const pthread_attr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x5612e0df3338 <col:41, line:418:6> col:6 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x5612e0df33b8 <col:14, col:30> col:30 __policy 'int *restrict'
| |-NoThrowAttr 0x5612e0df3588 <line:419:22>
| `-NonNullAttr 0x5612e0df35e0 <col:63, col:80> 1 2
|-FunctionDecl 0x5612e0df3768 <line:420:1, line:421:79> line:420:12 pthread_attr_setschedpolicy 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x5612e0df3628 <col:41, col:57> col:57 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x5612e0df36a8 <col:65, col:69> col:69 __policy 'int'
| |-NoThrowAttr 0x5612e0df3818 <line:421:22>
| `-NonNullAttr 0x5612e0df3870 <col:63, col:77> 1
|-FunctionDecl 0x5612e0df3a38 <line:422:1, line:424:82> line:422:12 pthread_attr_getinheritsched 'int (const pthread_attr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x5612e0df38b8 <col:42, line:423:7> col:7 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x5612e0df3938 <col:15, col:31> col:31 __inherit 'int *restrict'
| |-NoThrowAttr 0x5612e0df3ae8 <line:424:22>
| `-NonNullAttr 0x5612e0df3b40 <col:63, col:80> 1 2
|-FunctionDecl 0x5612e0df3cc8 <line:425:1, line:427:79> line:425:12 pthread_attr_setinheritsched 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x5612e0df3b88 <col:42, col:58> col:58 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x5612e0df3c08 <line:426:7, col:11> col:11 __inherit 'int'
| |-NoThrowAttr 0x5612e0df3d78 <line:427:22>
| `-NonNullAttr 0x5612e0df3dd0 <col:63, col:77> 1
|-FunctionDecl 0x5612e0df3f78 <line:428:1, line:430:82> line:428:12 pthread_attr_getscope 'int (const pthread_attr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x5612e0df3e18 <col:35, col:68> col:68 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x5612e0df3e98 <line:429:7, col:23> col:23 __scope 'int *restrict'
| |-NoThrowAttr 0x5612e0df4028 <line:430:22>
| `-NonNullAttr 0x5612e0df4080 <col:63, col:80> 1 2
|-FunctionDecl 0x5612e0df4208 <line:431:1, line:432:79> line:431:12 pthread_attr_setscope 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x5612e0df40c8 <col:35, col:51> col:51 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x5612e0df4148 <col:59, col:63> col:63 __scope 'int'
| |-NoThrowAttr 0x5612e0df42b8 <line:432:22>
| `-NonNullAttr 0x5612e0df4310 <col:63, col:77> 1
|-FunctionDecl 0x5612e0df4538 <line:433:1, line:435:115> line:433:12 pthread_attr_getstackaddr 'int (const pthread_attr_t *restrict, void **restrict)' extern
| |-ParmVarDecl 0x5612e0df4358 <col:39, line:434:11> col:11 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x5612e0df43d8 <col:19, col:37> col:37 __stackaddr 'void **restrict'
| |-NoThrowAttr 0x5612e0df45e8 <line:435:22>
| |-NonNullAttr 0x5612e0df4640 <col:63, col:80> 1 2
| `-DeprecatedAttr 0x5612e0df4678 <col:100> "" ""
|-FunctionDecl 0x5612e0df4888 <line:436:1, line:438:112> line:436:12 pthread_attr_setstackaddr 'int (pthread_attr_t *, void *)' extern
| |-ParmVarDecl 0x5612e0df46c8 <col:39, col:55> col:55 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x5612e0df4748 <line:437:11, col:17> col:17 __stackaddr 'void *'
| |-NoThrowAttr 0x5612e0df4938 <line:438:22>
| |-NonNullAttr 0x5612e0df4990 <col:63, col:77> 1
| `-DeprecatedAttr 0x5612e0df49d8 <col:97> "" ""
|-FunctionDecl 0x5612e0df4bc8 <line:439:1, line:441:82> line:439:12 pthread_attr_getstacksize 'int (const pthread_attr_t *restrict, size_t *restrict)' extern
| |-ParmVarDecl 0x5612e0df4a28 <col:39, line:440:11> col:11 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x5612e0df4aa0 <col:19, col:38> col:38 __stacksize 'size_t *restrict'
| |-NoThrowAttr 0x5612e0df4c78 <line:441:22>
| `-NonNullAttr 0x5612e0df4cd0 <col:63, col:80> 1 2
|-FunctionDecl 0x5612e0df4e50 <line:442:1, line:444:79> line:442:12 pthread_attr_setstacksize 'int (pthread_attr_t *, size_t)' extern
| |-ParmVarDecl 0x5612e0df4d18 <col:39, col:55> col:55 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x5612e0df4d90 <line:443:11, col:18> col:18 __stacksize 'size_t':'unsigned long'
| |-NoThrowAttr 0x5612e0df4f00 <line:444:22>
| `-NonNullAttr 0x5612e0df4f58 <col:63, col:77> 1
|-FunctionDecl 0x5612e0df5248 <line:445:1, line:448:85> line:445:12 pthread_attr_getstack 'int (const pthread_attr_t *restrict, void **restrict, size_t *restrict)' extern
| |-ParmVarDecl 0x5612e0df4fa8 <col:35, col:68> col:68 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x5612e0df5028 <line:446:7, col:25> col:25 __stackaddr 'void **restrict'
| |-ParmVarDecl 0x5612e0df50a0 <line:447:7, col:26> col:26 __stacksize 'size_t *restrict'
| |-NoThrowAttr 0x5612e0df5300 <line:448:22>
| `-NonNullAttr 0x5612e0df5358 <col:63, col:83> 1 2 3
|-FunctionDecl 0x5612e0df5608 <line:449:1, line:450:100> line:449:12 pthread_attr_setstack 'int (pthread_attr_t *, void *, size_t)' extern
| |-ParmVarDecl 0x5612e0df53b0 <col:35, col:51> col:51 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x5612e0df5430 <col:59, col:65> col:65 __stackaddr 'void *'
| |-ParmVarDecl 0x5612e0df54a8 <line:450:7, col:14> col:14 __stacksize 'size_t':'unsigned long'
| |-NoThrowAttr 0x5612e0df56c0 <col:43>
| `-NonNullAttr 0x5612e0df5718 <col:84, col:98> 1
|-FunctionDecl 0x5612e0df5a20 <line:451:1, line:453:79> line:451:12 pthread_setschedparam 'int (pthread_t, int, const struct sched_param *)' extern
| |-ParmVarDecl 0x5612e0df5768 <col:35, col:45> col:45 __target_thread 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x5612e0df57e8 <col:62, col:66> col:66 __policy 'int'
| |-ParmVarDecl 0x5612e0df5878 <line:452:7, col:33> col:33 __param 'const struct sched_param *'
| |-NoThrowAttr 0x5612e0df5ad8 <line:453:22>
| `-NonNullAttr 0x5612e0df5b30 <col:63, col:77> 3
|-FunctionDecl 0x5612e0df5e08 <line:454:1, line:457:82> line:454:12 pthread_getschedparam 'int (pthread_t, int *restrict, struct sched_param *restrict)' extern
| |-ParmVarDecl 0x5612e0df5b78 <col:35, col:45> col:45 __target_thread 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x5612e0df5bf8 <line:455:7, col:23> col:23 __policy 'int *restrict'
| |-ParmVarDecl 0x5612e0df5c88 <line:456:7, col:38> col:38 __param 'struct sched_param *restrict'
| |-NoThrowAttr 0x5612e0df5ec0 <line:457:22>
| `-NonNullAttr 0x5612e0df5f18 <col:63, col:80> 2 3
|-FunctionDecl 0x5612e0df6108 <line:458:1, line:459:45> line:458:12 pthread_setschedprio 'int (pthread_t, int)' extern
| |-ParmVarDecl 0x5612e0df5f68 <col:34, col:44> col:44 __target_thread 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x5612e0df5fe8 <col:61, col:65> col:65 __prio 'int'
| `-NoThrowAttr 0x5612e0df61b8 <line:459:22>
|-FunctionDecl 0x5612e0df6588 <line:460:1, line:461:71> line:460:12 pthread_once 'int (pthread_once_t *, void (*)(void))' extern
| |-ParmVarDecl 0x5612e0df6280 <col:26, col:42> col:42 __once_control 'pthread_once_t *'
| |-ParmVarDecl 0x5612e0df6420 <line:461:5, col:33> col:12 __init_routine 'void (*)(void)'
| `-NonNullAttr 0x5612e0df6638 <col:52, col:69> 1 2
|-FunctionDecl 0x5612e0df67e0 <line:462:1, col:64> col:12 pthread_setcancelstate 'int (int, int *)' extern
| |-ParmVarDecl 0x5612e0df66c0 <col:36, col:40> col:40 __state 'int'
| `-ParmVarDecl 0x5612e0df6740 <col:49, col:54> col:54 __oldstate 'int *'
|-FunctionDecl 0x5612e0df69f0 <line:463:1, col:61> col:12 pthread_setcanceltype 'int (int, int *)' extern
| |-ParmVarDecl 0x5612e0df68a8 <col:35, col:39> col:39 __type 'int'
| `-ParmVarDecl 0x5612e0df6928 <col:47, col:52> col:52 __oldtype 'int *'
|-FunctionDecl 0x5612e0df6b48 <line:464:1, col:42> col:12 pthread_cancel 'int (pthread_t)' extern
| `-ParmVarDecl 0x5612e0df6ab0 <col:28, col:38> col:38 __th 'pthread_t':'unsigned long'
|-FunctionDecl 0x5612e0df6c88 <line:465:1, col:37> col:13 pthread_testcancel 'void (void)' extern
|-RecordDecl 0x5612e0df6d28 <line:466:9, line:474:1> line:466:9 struct definition
| |-RecordDecl 0x5612e0df6dd8 <line:468:3, line:472:3> line:468:3 struct definition
| | |-FieldDecl 0x5612e0df6ec8 <line:470:5, col:15> col:15 __cancel_jmp_buf '__jmp_buf':'long [8]'
| | `-FieldDecl 0x5612e0df6f30 <line:471:5, col:9> col:9 __mask_was_saved 'int'
| |-FieldDecl 0x5612e0df7100 <line:468:3, line:472:23> col:5 __cancel_jmp_buf 'struct (anonymous struct at ./split_4/safe028_rmo.opt_false-unreach-call.i:468:3) [1]'
| `-FieldDecl 0x5612e0df71f8 <line:473:3, col:16> col:9 __pad 'void *[4]'
|-TypedefDecl 0x5612e0df72b0 <line:466:1, line:474:3> col:3 referenced __pthread_unwind_buf_t 'struct __pthread_unwind_buf_t':'__pthread_unwind_buf_t'
| |-ElaboratedType 0x5612e0df7250 'struct __pthread_unwind_buf_t' sugar
| | `-RecordType 0x5612e0df6db0 '__pthread_unwind_buf_t'
| |   `-Record 0x5612e0df6d28 ''
| `-AlignedAttr 0x5612e0df7308 <col:42> aligned
|   `-<<<NULL>>>
|-RecordDecl 0x5612e0df7380 <line:475:1, line:481:1> line:475:8 struct __pthread_cleanup_frame definition
| |-FieldDecl 0x5612e0df74e0 <line:477:3, col:35> col:10 __cancel_routine 'void (*)(void *)'
| |-FieldDecl 0x5612e0df7548 <line:478:3, col:9> col:9 __cancel_arg 'void *'
| |-FieldDecl 0x5612e0df75b0 <line:479:3, col:7> col:7 __do_it 'int'
| `-FieldDecl 0x5612e0df7618 <line:480:3, col:7> col:7 __cancel_type 'int'
|-FunctionDecl 0x5612e0df7820 <line:482:1, col:69> col:13 __pthread_register_cancel 'void (__pthread_unwind_buf_t *)' extern
| `-ParmVarDecl 0x5612e0df7710 <col:40, col:64> col:64 __buf '__pthread_unwind_buf_t *'
|-FunctionDecl 0x5612e0df7a00 <line:484:1, col:71> col:13 __pthread_unregister_cancel 'void (__pthread_unwind_buf_t *)' extern
| `-ParmVarDecl 0x5612e0df78d8 <col:42, col:66> col:66 __buf '__pthread_unwind_buf_t *'
|-FunctionDecl 0x5612e0df7bc0 <line:486:1, line:488:31> line:486:13 __pthread_unwind_next 'void (__pthread_unwind_buf_t *) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x5612e0df7ab8 <col:36, col:60> col:60 __buf '__pthread_unwind_buf_t *'
| `-WeakAttr 0x5612e0df7c68 <line:488:22>
|-RecordDecl 0x5612e0df7cc0 <line:490:1, col:8> col:8 struct __jmp_buf_tag
|-FunctionDecl 0x5612e0df7fd8 <line:491:1, col:98> col:12 __sigsetjmp 'int (struct __jmp_buf_tag *, int)' extern
| |-ParmVarDecl 0x5612e0df7e38 <col:25, col:47> col:47 __env 'struct __jmp_buf_tag *'
| |-ParmVarDecl 0x5612e0df7eb8 <col:54, col:58> col:58 __savemask 'int'
| |-NoThrowAttr 0x5612e0df8088 <col:86>
| `-ReturnsTwiceAttr 0x5612e0df80e0 <col:12> Implicit
|-FunctionDecl 0x5612e0df8408 <line:492:1, line:494:79> line:492:12 pthread_mutex_init 'int (pthread_mutex_t *, const pthread_mutexattr_t *)' extern
| |-ParmVarDecl 0x5612e0df81b0 <col:32, col:49> col:49 __mutex 'pthread_mutex_t *'
| |-ParmVarDecl 0x5612e0df82c0 <line:493:11, col:38> col:38 __mutexattr 'const pthread_mutexattr_t *'
| |-NoThrowAttr 0x5612e0df84b8 <line:494:22>
| `-NonNullAttr 0x5612e0df8510 <col:63, col:77> 1
|-FunctionDecl 0x5612e0df8688 <line:495:1, line:496:79> line:495:12 pthread_mutex_destroy 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x5612e0df8558 <col:35, col:52> col:52 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x5612e0df8730 <line:496:22>
| `-NonNullAttr 0x5612e0df8788 <col:63, col:77> 1
|-FunctionDecl 0x5612e0df8890 <line:497:1, line:498:68> line:497:12 pthread_mutex_trylock 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x5612e0df87d8 <col:35, col:52> col:52 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x5612e0df8938 <line:498:22>
| `-NonNullAttr 0x5612e0df8990 <col:52, col:66> 1
|-FunctionDecl 0x5612e0df9ad8 <line:499:1, line:500:68> line:499:12 pthread_mutex_lock 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x5612e0df9a20 <col:32, col:49> col:49 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x5612e0df9b80 <line:500:22>
| `-NonNullAttr 0x5612e0df9bd8 <col:52, col:66> 1
|-FunctionDecl 0x5612e0df9e18 <line:501:1, line:503:85> line:501:12 pthread_mutex_timedlock 'int (pthread_mutex_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x5612e0df9c28 <col:37, col:65> col:65 __mutex 'pthread_mutex_t *restrict'
| |-ParmVarDecl 0x5612e0df9cb8 <line:502:9, line:503:9> col:9 __abstime 'const struct timespec *restrict'
| |-NoThrowAttr 0x5612e0df9ec8 <col:36>
| `-NonNullAttr 0x5612e0df9f20 <col:66, col:83> 1 2
|-FunctionDecl 0x5612e0dfa020 <line:504:1, line:505:68> line:504:12 pthread_mutex_unlock 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x5612e0df9f68 <col:34, col:51> col:51 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x5612e0dfa0c8 <line:505:22>
| `-NonNullAttr 0x5612e0dfa120 <col:52, col:66> 1
|-FunctionDecl 0x5612e0dfa3b8 <line:506:1, line:509:82> line:506:12 pthread_mutex_getprioceiling 'int (const pthread_mutex_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x5612e0dfa1d0 <col:42, line:507:18> col:18 __mutex 'const pthread_mutex_t *restrict'
| |-ParmVarDecl 0x5612e0dfa250 <line:508:7, col:23> col:23 __prioceiling 'int *restrict'
| |-NoThrowAttr 0x5612e0dfa468 <line:509:22>
| `-NonNullAttr 0x5612e0dfa4c0 <col:63, col:80> 1 2
|-FunctionDecl 0x5612e0dfa788 <line:510:1, line:513:82> line:510:12 pthread_mutex_setprioceiling 'int (pthread_mutex_t *restrict, int, int *restrict)' extern
| |-ParmVarDecl 0x5612e0dfa508 <col:42, col:70> col:70 __mutex 'pthread_mutex_t *restrict'
| |-ParmVarDecl 0x5612e0dfa588 <line:511:7, col:11> col:11 __prioceiling 'int'
| |-ParmVarDecl 0x5612e0dfa608 <line:512:7, col:23> col:23 __old_ceiling 'int *restrict'
| |-NoThrowAttr 0x5612e0dfa840 <line:513:22>
| `-NonNullAttr 0x5612e0dfa898 <col:63, col:80> 1 3
|-FunctionDecl 0x5612e0dfaa30 <line:514:1, line:515:79> line:514:12 pthread_mutex_consistent 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x5612e0dfa8e8 <col:38, col:55> col:55 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x5612e0dfaad8 <line:515:22>
| `-NonNullAttr 0x5612e0dfab30 <col:63, col:77> 1
|-FunctionDecl 0x5612e0dfad18 <line:516:1, line:517:79> line:516:12 pthread_mutexattr_init 'int (pthread_mutexattr_t *)' extern
| |-ParmVarDecl 0x5612e0dfabe0 <col:36, col:57> col:57 __attr 'pthread_mutexattr_t *'
| |-NoThrowAttr 0x5612e0dfadc0 <line:517:22>
| `-NonNullAttr 0x5612e0dfae18 <col:63, col:77> 1
|-FunctionDecl 0x5612e0dfaf20 <line:518:1, line:519:79> line:518:12 pthread_mutexattr_destroy 'int (pthread_mutexattr_t *)' extern
| |-ParmVarDecl 0x5612e0dfae68 <col:39, col:60> col:60 __attr 'pthread_mutexattr_t *'
| |-NoThrowAttr 0x5612e0dfafc8 <line:519:22>
| `-NonNullAttr 0x5612e0dfb020 <col:63, col:77> 1
|-FunctionDecl 0x5612e0dfb248 <line:520:1, line:523:82> line:520:12 pthread_mutexattr_getpshared 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x5612e0dfb068 <col:42, line:521:18> col:18 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x5612e0dfb0e8 <line:522:7, col:23> col:23 __pshared 'int *restrict'
| |-NoThrowAttr 0x5612e0dfb2f8 <line:523:22>
| `-NonNullAttr 0x5612e0dfb350 <col:63, col:80> 1 2
|-FunctionDecl 0x5612e0dfb558 <line:524:1, line:526:79> line:524:12 pthread_mutexattr_setpshared 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x5612e0dfb398 <col:42, col:63> col:63 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x5612e0dfb418 <line:525:7, col:11> col:11 __pshared 'int'
| |-NoThrowAttr 0x5612e0dfb608 <line:526:22>
| `-NonNullAttr 0x5612e0dfb660 <col:63, col:77> 1
|-FunctionDecl 0x5612e0dfb808 <line:527:1, line:529:82> line:527:12 pthread_mutexattr_gettype 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x5612e0dfb6a8 <col:39, line:528:11> col:11 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x5612e0dfb728 <col:19, col:35> col:35 __kind 'int *restrict'
| |-NoThrowAttr 0x5612e0dfb8b8 <line:529:22>
| `-NonNullAttr 0x5612e0dfb910 <col:63, col:80> 1 2
|-FunctionDecl 0x5612e0dfbb00 <line:530:1, line:531:79> line:530:12 pthread_mutexattr_settype 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x5612e0dfb958 <col:39, col:60> col:60 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x5612e0dfba40 <col:68, col:72> col:72 __kind 'int'
| |-NoThrowAttr 0x5612e0dfbbb0 <line:531:22>
| `-NonNullAttr 0x5612e0dfbc08 <col:63, col:77> 1
|-FunctionDecl 0x5612e0dfbdb8 <line:532:1, line:535:82> line:532:12 pthread_mutexattr_getprotocol 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x5612e0dfbc58 <col:43, line:533:19> col:19 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x5612e0dfbcd8 <line:534:8, col:24> col:24 __protocol 'int *restrict'
| |-NoThrowAttr 0x5612e0dfbe68 <line:535:22>
| `-NonNullAttr 0x5612e0dfbec0 <col:63, col:80> 1 2
|-FunctionDecl 0x5612e0dfc048 <line:536:1, line:538:79> line:536:12 pthread_mutexattr_setprotocol 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x5612e0dfbf08 <col:43, col:64> col:64 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x5612e0dfbf88 <line:537:8, col:12> col:12 __protocol 'int'
| |-NoThrowAttr 0x5612e0dfc0f8 <line:538:22>
| `-NonNullAttr 0x5612e0dfc150 <col:63, col:77> 1
|-FunctionDecl 0x5612e0dfc2f8 <line:539:1, line:542:82> line:539:12 pthread_mutexattr_getprioceiling 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x5612e0dfc198 <col:46, line:540:22> col:22 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x5612e0dfc218 <line:541:11, col:27> col:27 __prioceiling 'int *restrict'
| |-NoThrowAttr 0x5612e0dfc3a8 <line:542:22>
| `-NonNullAttr 0x5612e0dfc400 <col:63, col:80> 1 2
|-FunctionDecl 0x5612e0dfc588 <line:543:1, line:545:79> line:543:12 pthread_mutexattr_setprioceiling 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x5612e0dfc448 <col:46, col:67> col:67 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x5612e0dfc4c8 <line:544:11, col:15> col:15 __prioceiling 'int'
| |-NoThrowAttr 0x5612e0dfc638 <line:545:22>
| `-NonNullAttr 0x5612e0dfc690 <col:63, col:77> 1
|-FunctionDecl 0x5612e0dfc878 <line:546:1, line:548:82> line:546:12 pthread_mutexattr_getrobust 'int (const pthread_mutexattr_t *, int *)' extern
| |-ParmVarDecl 0x5612e0dfc6d8 <col:41, col:68> col:68 __attr 'const pthread_mutexattr_t *'
| |-ParmVarDecl 0x5612e0dfc758 <line:547:6, col:11> col:11 __robustness 'int *'
| |-NoThrowAttr 0x5612e0dfc928 <line:548:22>
| `-NonNullAttr 0x5612e0dfc980 <col:63, col:80> 1 2
|-FunctionDecl 0x5612e0dfdb38 <line:549:1, line:551:79> line:549:12 pthread_mutexattr_setrobust 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x5612e0dfc9c8 <col:41, col:62> col:62 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x5612e0dfda78 <line:550:6, col:10> col:10 __robustness 'int'
| |-NoThrowAttr 0x5612e0dfdbe8 <line:551:22>
| `-NonNullAttr 0x5612e0dfdc40 <col:63, col:77> 1
|-FunctionDecl 0x5612e0dfdf78 <line:552:1, line:554:86> line:552:12 pthread_rwlock_init 'int (pthread_rwlock_t *restrict, const pthread_rwlockattr_t *restrict)' extern
| |-ParmVarDecl 0x5612e0dfdd20 <col:33, col:62> col:62 __rwlock 'pthread_rwlock_t *restrict'
| |-ParmVarDecl 0x5612e0dfde30 <line:553:5, line:554:5> col:5 __attr 'const pthread_rwlockattr_t *restrict'
| |-NoThrowAttr 0x5612e0dfe028 <col:29>
| `-NonNullAttr 0x5612e0dfe080 <col:70, col:84> 1
|-FunctionDecl 0x5612e0dfe1f8 <line:555:1, line:556:79> line:555:12 pthread_rwlock_destroy 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x5612e0dfe0c8 <col:36, col:54> col:54 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x5612e0dfe2a0 <line:556:22>
| `-NonNullAttr 0x5612e0dfe2f8 <col:63, col:77> 1
|-FunctionDecl 0x5612e0dfe400 <line:557:1, line:558:68> line:557:12 pthread_rwlock_rdlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x5612e0dfe348 <col:35, col:53> col:53 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x5612e0dfe4a8 <line:558:22>
| `-NonNullAttr 0x5612e0dfe500 <col:52, col:66> 1
|-FunctionDecl 0x5612e0dfe600 <line:559:1, line:560:65> line:559:12 pthread_rwlock_tryrdlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x5612e0dfe548 <col:38, col:56> col:56 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x5612e0dfe6a8 <line:560:19>
| `-NonNullAttr 0x5612e0dfe700 <col:49, col:63> 1
|-FunctionDecl 0x5612e0dfe938 <line:561:1, line:563:88> line:561:12 pthread_rwlock_timedrdlock 'int (pthread_rwlock_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x5612e0dfe748 <col:40, col:69> col:69 __rwlock 'pthread_rwlock_t *restrict'
| |-ParmVarDecl 0x5612e0dfe7d8 <line:562:12, line:563:12> col:12 __abstime 'const struct timespec *restrict'
| |-NoThrowAttr 0x5612e0dfe9e8 <col:39>
| `-NonNullAttr 0x5612e0dfea70 <col:69, col:86> 1 2
|-FunctionDecl 0x5612e0dfeb70 <line:564:1, line:565:68> line:564:12 pthread_rwlock_wrlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x5612e0dfeab8 <col:35, col:53> col:53 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x5612e0dfec18 <line:565:22>
| `-NonNullAttr 0x5612e0dfec70 <col:52, col:66> 1
|-FunctionDecl 0x5612e0dfed70 <line:566:1, line:567:68> line:566:12 pthread_rwlock_trywrlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x5612e0dfecb8 <col:38, col:56> col:56 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x5612e0dfee18 <line:567:22>
| `-NonNullAttr 0x5612e0dfee70 <col:52, col:66> 1
|-FunctionDecl 0x5612e0dff028 <line:568:1, line:570:88> line:568:12 pthread_rwlock_timedwrlock 'int (pthread_rwlock_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x5612e0dfeeb8 <col:40, col:69> col:69 __rwlock 'pthread_rwlock_t *restrict'
| |-ParmVarDecl 0x5612e0dfef48 <line:569:12, line:570:12> col:12 __abstime 'const struct timespec *restrict'
| |-NoThrowAttr 0x5612e0dff0d8 <col:39>
| `-NonNullAttr 0x5612e0dff130 <col:69, col:86> 1 2
|-FunctionDecl 0x5612e0dff230 <line:571:1, line:572:68> line:571:12 pthread_rwlock_unlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x5612e0dff178 <col:35, col:53> col:53 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x5612e0dff2d8 <line:572:22>
| `-NonNullAttr 0x5612e0dff330 <col:52, col:66> 1
|-FunctionDecl 0x5612e0dff518 <line:573:1, line:574:79> line:573:12 pthread_rwlockattr_init 'int (pthread_rwlockattr_t *)' extern
| |-ParmVarDecl 0x5612e0dff3e0 <col:37, col:59> col:59 __attr 'pthread_rwlockattr_t *'
| |-NoThrowAttr 0x5612e0dff5c0 <line:574:22>
| `-NonNullAttr 0x5612e0dff618 <col:63, col:77> 1
|-FunctionDecl 0x5612e0dff720 <line:575:1, line:576:79> line:575:12 pthread_rwlockattr_destroy 'int (pthread_rwlockattr_t *)' extern
| |-ParmVarDecl 0x5612e0dff668 <col:40, col:62> col:62 __attr 'pthread_rwlockattr_t *'
| |-NoThrowAttr 0x5612e0dff7c8 <line:576:22>
| `-NonNullAttr 0x5612e0dff820 <col:63, col:77> 1
|-FunctionDecl 0x5612e0dffa80 <line:577:1, line:580:82> line:577:12 pthread_rwlockattr_getpshared 'int (const pthread_rwlockattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x5612e0dff868 <col:43, line:578:19> col:19 __attr 'const pthread_rwlockattr_t *restrict'
| |-ParmVarDecl 0x5612e0dff8e8 <line:579:8, col:24> col:24 __pshared 'int *restrict'
| |-NoThrowAttr 0x5612e0dffb30 <line:580:22>
| `-NonNullAttr 0x5612e0dffb88 <col:63, col:80> 1 2
|-FunctionDecl 0x5612e0dffd98 <line:581:1, line:583:79> line:581:12 pthread_rwlockattr_setpshared 'int (pthread_rwlockattr_t *, int)' extern
| |-ParmVarDecl 0x5612e0dffbd8 <col:43, col:65> col:65 __attr 'pthread_rwlockattr_t *'
| |-ParmVarDecl 0x5612e0dffc58 <line:582:8, col:12> col:12 __pshared 'int'
| |-NoThrowAttr 0x5612e0dffe48 <line:583:22>
| `-NonNullAttr 0x5612e0dffea0 <col:63, col:77> 1
|-FunctionDecl 0x5612e0e00048 <line:584:1, line:587:82> line:584:12 pthread_rwlockattr_getkind_np 'int (const pthread_rwlockattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x5612e0dffee8 <col:43, line:585:19> col:19 __attr 'const pthread_rwlockattr_t *restrict'
| |-ParmVarDecl 0x5612e0dfff68 <line:586:8, col:24> col:24 __pref 'int *restrict'
| |-NoThrowAttr 0x5612e0e000f8 <line:587:22>
| `-NonNullAttr 0x5612e0e00150 <col:63, col:80> 1 2
|-FunctionDecl 0x5612e0e002d8 <line:588:1, line:589:93> line:588:12 pthread_rwlockattr_setkind_np 'int (pthread_rwlockattr_t *, int)' extern
| |-ParmVarDecl 0x5612e0e00198 <col:43, col:65> col:65 __attr 'pthread_rwlockattr_t *'
| |-ParmVarDecl 0x5612e0e00218 <line:589:8, col:12> col:12 __pref 'int'
| |-NoThrowAttr 0x5612e0e00388 <col:36>
| `-NonNullAttr 0x5612e0e003e0 <col:77, col:91> 1
|-FunctionDecl 0x5612e0e00718 <line:590:1, line:592:79> line:590:12 pthread_cond_init 'int (pthread_cond_t *restrict, const pthread_condattr_t *restrict)' extern
| |-ParmVarDecl 0x5612e0e004c0 <col:31, col:58> col:58 __cond 'pthread_cond_t *restrict'
| |-ParmVarDecl 0x5612e0e005d0 <line:591:10, col:47> col:47 __cond_attr 'const pthread_condattr_t *restrict'
| |-NoThrowAttr 0x5612e0e007c8 <line:592:22>
| `-NonNullAttr 0x5612e0e00820 <col:63, col:77> 1
|-FunctionDecl 0x5612e0e00998 <line:593:1, line:594:79> line:593:12 pthread_cond_destroy 'int (pthread_cond_t *)' extern
| |-ParmVarDecl 0x5612e0e00868 <col:34, col:50> col:50 __cond 'pthread_cond_t *'
| |-NoThrowAttr 0x5612e0e00a40 <line:594:22>
| `-NonNullAttr 0x5612e0e00ac0 <col:63, col:77> 1
|-FunctionDecl 0x5612e0e00bc0 <line:595:1, line:596:68> line:595:12 pthread_cond_signal 'int (pthread_cond_t *)' extern
| |-ParmVarDecl 0x5612e0e00b08 <col:33, col:49> col:49 __cond 'pthread_cond_t *'
| |-NoThrowAttr 0x5612e0e00c68 <line:596:22>
| `-NonNullAttr 0x5612e0e00cc0 <col:52, col:66> 1
|-FunctionDecl 0x5612e0e00dc0 <line:597:1, line:598:68> line:597:12 pthread_cond_broadcast 'int (pthread_cond_t *)' extern
| |-ParmVarDecl 0x5612e0e00d08 <col:36, col:52> col:52 __cond 'pthread_cond_t *'
| |-NoThrowAttr 0x5612e0e00e68 <line:598:22>
| `-NonNullAttr 0x5612e0e00ec0 <col:52, col:66> 1
|-FunctionDecl 0x5612e0e010e8 <line:599:1, line:601:41> line:599:12 pthread_cond_wait 'int (pthread_cond_t *restrict, pthread_mutex_t *restrict)' extern
| |-ParmVarDecl 0x5612e0e00f08 <col:31, col:58> col:58 __cond 'pthread_cond_t *restrict'
| |-ParmVarDecl 0x5612e0e00f80 <line:600:10, col:38> col:38 __mutex 'pthread_mutex_t *restrict'
| `-NonNullAttr 0x5612e0e01198 <line:601:22, col:39> 1 2
|-FunctionDecl 0x5612e0e014c8 <line:602:1, line:605:44> line:602:12 pthread_cond_timedwait 'int (pthread_cond_t *restrict, pthread_mutex_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x5612e0e01218 <col:36, col:63> col:63 __cond 'pthread_cond_t *restrict'
| |-ParmVarDecl 0x5612e0e01290 <line:603:8, col:36> col:36 __mutex 'pthread_mutex_t *restrict'
| |-ParmVarDecl 0x5612e0e01320 <line:604:8, col:42> col:42 __abstime 'const struct timespec *restrict'
| `-NonNullAttr 0x5612e0e01580 <line:605:22, col:42> 1 2 3
|-FunctionDecl 0x5612e0e01798 <line:606:1, line:607:79> line:606:12 pthread_condattr_init 'int (pthread_condattr_t *)' extern
| |-ParmVarDecl 0x5612e0e01660 <col:35, col:55> col:55 __attr 'pthread_condattr_t *'
| |-NoThrowAttr 0x5612e0e01840 <line:607:22>
| `-NonNullAttr 0x5612e0e01898 <col:63, col:77> 1
|-FunctionDecl 0x5612e0e019a0 <line:608:1, line:609:79> line:608:12 pthread_condattr_destroy 'int (pthread_condattr_t *)' extern
| |-ParmVarDecl 0x5612e0e018e8 <col:38, col:58> col:58 __attr 'pthread_condattr_t *'
| |-NoThrowAttr 0x5612e0e01a48 <line:609:22>
| `-NonNullAttr 0x5612e0e01ad0 <col:63, col:77> 1
|-FunctionDecl 0x5612e0e01cf8 <line:610:1, line:613:82> line:610:12 pthread_condattr_getpshared 'int (const pthread_condattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x5612e0e01b18 <col:41, line:611:17> col:17 __attr 'const pthread_condattr_t *restrict'
| |-ParmVarDecl 0x5612e0e01b98 <line:612:6, col:22> col:22 __pshared 'int *restrict'
| |-NoThrowAttr 0x5612e0e01da8 <line:613:22>
| `-NonNullAttr 0x5612e0e01e00 <col:63, col:80> 1 2
|-FunctionDecl 0x5612e0e02008 <line:614:1, line:615:94> line:614:12 pthread_condattr_setpshared 'int (pthread_condattr_t *, int)' extern
| |-ParmVarDecl 0x5612e0e01e48 <col:41, col:61> col:61 __attr 'pthread_condattr_t *'
| |-ParmVarDecl 0x5612e0e01ec8 <line:615:6, col:10> col:10 __pshared 'int'
| |-NoThrowAttr 0x5612e0e020b8 <col:37>
| `-NonNullAttr 0x5612e0e02110 <col:78, col:92> 1
|-FunctionDecl 0x5612e0e02328 <line:616:1, line:619:82> line:616:12 pthread_condattr_getclock 'int (const pthread_condattr_t *restrict, __clockid_t *restrict)' extern
| |-ParmVarDecl 0x5612e0e02158 <col:39, line:617:22> col:22 __attr 'const pthread_condattr_t *restrict'
| |-ParmVarDecl 0x5612e0e02200 <line:618:11, col:35> col:35 __clock_id '__clockid_t *restrict'
| |-NoThrowAttr 0x5612e0e023d8 <line:619:22>
| `-NonNullAttr 0x5612e0e02430 <col:63, col:80> 1 2
|-FunctionDecl 0x5612e0e025f8 <line:620:1, line:622:79> line:620:12 pthread_condattr_setclock 'int (pthread_condattr_t *, __clockid_t)' extern
| |-ParmVarDecl 0x5612e0e02478 <col:39, col:59> col:59 __attr 'pthread_condattr_t *'
| |-ParmVarDecl 0x5612e0e024f0 <line:621:11, col:23> col:23 __clock_id '__clockid_t':'int'
| |-NoThrowAttr 0x5612e0e026a8 <line:622:22>
| `-NonNullAttr 0x5612e0e02700 <col:63, col:77> 1
|-FunctionDecl 0x5612e0e029a8 <line:623:1, line:624:79> line:623:12 pthread_spin_init 'int (pthread_spinlock_t *, int)' extern
| |-ParmVarDecl 0x5612e0e027e0 <col:31, col:51> col:51 __lock 'pthread_spinlock_t *'
| |-ParmVarDecl 0x5612e0e02860 <col:59, col:63> col:63 __pshared 'int'
| |-NoThrowAttr 0x5612e0e02a58 <line:624:22>
| `-NonNullAttr 0x5612e0e02ae0 <col:63, col:77> 1
|-FunctionDecl 0x5612e0e02c58 <line:625:1, line:626:79> line:625:12 pthread_spin_destroy 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x5612e0e02b28 <col:34, col:54> col:54 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x5612e0e02d00 <line:626:22>
| `-NonNullAttr 0x5612e0e02d58 <col:63, col:77> 1
|-FunctionDecl 0x5612e0e02e60 <line:627:1, line:628:68> line:627:12 pthread_spin_lock 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x5612e0e02da8 <col:31, col:51> col:51 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x5612e0e02f08 <line:628:22>
| `-NonNullAttr 0x5612e0e02f60 <col:52, col:66> 1
|-FunctionDecl 0x5612e0e03060 <line:629:1, line:630:68> line:629:12 pthread_spin_trylock 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x5612e0e02fa8 <col:34, col:54> col:54 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x5612e0e03108 <line:630:22>
| `-NonNullAttr 0x5612e0e03160 <col:52, col:66> 1
|-FunctionDecl 0x5612e0e03260 <line:631:1, line:632:68> line:631:12 pthread_spin_unlock 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x5612e0e031a8 <col:33, col:53> col:53 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x5612e0e03308 <line:632:22>
| `-NonNullAttr 0x5612e0e03360 <col:52, col:66> 1
|-FunctionDecl 0x5612e0e03738 <line:633:1, line:636:79> line:633:12 pthread_barrier_init 'int (pthread_barrier_t *restrict, const pthread_barrierattr_t *restrict, unsigned int)' extern
| |-ParmVarDecl 0x5612e0e03440 <col:34, col:64> col:64 __barrier 'pthread_barrier_t *restrict'
| |-ParmVarDecl 0x5612e0e03550 <line:634:6, line:635:6> col:6 __attr 'const pthread_barrierattr_t *restrict'
| |-ParmVarDecl 0x5612e0e035d0 <col:14, col:27> col:27 __count 'unsigned int'
| |-NoThrowAttr 0x5612e0e037f0 <line:636:22>
| `-NonNullAttr 0x5612e0e03848 <col:63, col:77> 1
|-FunctionDecl 0x5612e0e039c8 <line:637:1, line:638:79> line:637:12 pthread_barrier_destroy 'int (pthread_barrier_t *)' extern
| |-ParmVarDecl 0x5612e0e03898 <col:37, col:56> col:56 __barrier 'pthread_barrier_t *'
| |-NoThrowAttr 0x5612e0e03a70 <line:638:22>
| `-NonNullAttr 0x5612e0e04b00 <col:63, col:77> 1
|-FunctionDecl 0x5612e0e04c00 <line:639:1, line:640:68> line:639:12 pthread_barrier_wait 'int (pthread_barrier_t *)' extern
| |-ParmVarDecl 0x5612e0e04b48 <col:34, col:53> col:53 __barrier 'pthread_barrier_t *'
| |-NoThrowAttr 0x5612e0e04ca8 <line:640:22>
| `-NonNullAttr 0x5612e0e04d00 <col:52, col:66> 1
|-FunctionDecl 0x5612e0e04ee8 <line:641:1, line:642:79> line:641:12 pthread_barrierattr_init 'int (pthread_barrierattr_t *)' extern
| |-ParmVarDecl 0x5612e0e04db0 <col:38, col:61> col:61 __attr 'pthread_barrierattr_t *'
| |-NoThrowAttr 0x5612e0e04f90 <line:642:22>
| `-NonNullAttr 0x5612e0e04fe8 <col:63, col:77> 1
|-FunctionDecl 0x5612e0e050f0 <line:643:1, line:644:79> line:643:12 pthread_barrierattr_destroy 'int (pthread_barrierattr_t *)' extern
| |-ParmVarDecl 0x5612e0e05038 <col:41, col:64> col:64 __attr 'pthread_barrierattr_t *'
| |-NoThrowAttr 0x5612e0e05198 <line:644:22>
| `-NonNullAttr 0x5612e0e051f0 <col:63, col:77> 1
|-FunctionDecl 0x5612e0e05418 <line:645:1, line:648:82> line:645:12 pthread_barrierattr_getpshared 'int (const pthread_barrierattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x5612e0e05238 <col:44, line:646:20> col:20 __attr 'const pthread_barrierattr_t *restrict'
| |-ParmVarDecl 0x5612e0e052b8 <line:647:9, col:25> col:25 __pshared 'int *restrict'
| |-NoThrowAttr 0x5612e0e054c8 <line:648:22>
| `-NonNullAttr 0x5612e0e05520 <col:63, col:80> 1 2
|-FunctionDecl 0x5612e0e05728 <line:649:1, line:651:79> line:649:12 pthread_barrierattr_setpshared 'int (pthread_barrierattr_t *, int)' extern
| |-ParmVarDecl 0x5612e0e05568 <col:44, col:67> col:67 __attr 'pthread_barrierattr_t *'
| |-ParmVarDecl 0x5612e0e055e8 <line:650:9, col:13> col:13 __pshared 'int'
| |-NoThrowAttr 0x5612e0e057d8 <line:651:22>
| `-NonNullAttr 0x5612e0e05830 <col:63, col:77> 1
|-FunctionDecl 0x5612e0e05b98 <line:652:1, line:654:79> line:652:12 pthread_key_create 'int (pthread_key_t *, void (*)(void *))' extern
| |-ParmVarDecl 0x5612e0e05910 <col:32, col:47> col:47 __key 'pthread_key_t *'
| |-ParmVarDecl 0x5612e0e05a30 <line:653:11, col:43> col:18 __destr_function 'void (*)(void *)'
| |-NoThrowAttr 0x5612e0e05c48 <line:654:22>
| `-NonNullAttr 0x5612e0e05ca0 <col:63, col:77> 1
|-FunctionDecl 0x5612e0e05df8 <line:655:1, col:92> col:12 pthread_key_delete 'int (pthread_key_t)' extern
| |-ParmVarDecl 0x5612e0e05ce8 <col:32, col:46> col:46 __key 'pthread_key_t':'unsigned int'
| `-NoThrowAttr 0x5612e0e05ea0 <col:69>
|-FunctionDecl 0x5612e0e06018 <line:656:1, col:95> col:14 pthread_getspecific 'void *(pthread_key_t)' extern
| |-ParmVarDecl 0x5612e0e05f08 <col:35, col:49> col:49 __key 'pthread_key_t':'unsigned int'
| `-NoThrowAttr 0x5612e0e060c0 <col:72>
|-FunctionDecl 0x5612e0e062f8 <line:657:1, line:658:67> line:657:12 pthread_setspecific 'int (pthread_key_t, const void *)' extern
| |-ParmVarDecl 0x5612e0e06128 <col:33, col:47> col:47 __key 'pthread_key_t':'unsigned int'
| |-ParmVarDecl 0x5612e0e061d8 <line:658:5, col:17> col:17 __pointer 'const void *'
| `-NoThrowAttr 0x5612e0e063a8 <col:44>
|-FunctionDecl 0x5612e0e065c8 <line:659:1, line:661:79> line:659:12 pthread_getcpuclockid 'int (pthread_t, __clockid_t *)' extern
| |-ParmVarDecl 0x5612e0e06410 <col:35, col:45> col:45 __thread_id 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x5612e0e06488 <line:660:7, col:20> col:20 __clock_id '__clockid_t *'
| |-NoThrowAttr 0x5612e0e06678 <line:661:22>
| `-NonNullAttr 0x5612e0e066d0 <col:63, col:77> 2
|-FunctionDecl 0x5612e0e06b30 <line:662:1, line:664:70> line:662:12 pthread_atfork 'int (void (*)(void), void (*)(void), void (*)(void))' extern
| |-ParmVarDecl 0x5612e0e067b0 <col:28, col:51> col:35 __prepare 'void (*)(void)'
| |-ParmVarDecl 0x5612e0e068c0 <line:663:7, col:29> col:14 __parent 'void (*)(void)'
| |-ParmVarDecl 0x5612e0e069d0 <line:664:7, col:28> col:14 __child 'void (*)(void)'
| `-NoThrowAttr 0x5612e0e06be8 <col:47>
|-FunctionDecl 0x5612e0e06cf0 <line:666:1, col:20> col:8 used P0 'void *(void *)'
| `-ParmVarDecl 0x5612e0e06c58 <col:11, col:17> col:17 arg 'void *'
|-FunctionDecl 0x5612e0e06e48 <line:667:1, col:20> col:8 used P1 'void *(void *)'
| `-ParmVarDecl 0x5612e0e06db0 <col:11, col:17> col:17 arg 'void *'
|-FunctionDecl 0x5612e0e06fa0 <line:668:1, col:20> col:8 used P2 'void *(void *)'
| `-ParmVarDecl 0x5612e0e06f08 <col:11, col:17> col:17 arg 'void *'
|-FunctionDecl 0x5612e0e07068 <line:669:1, col:12> col:6 fence 'void ()'
|-FunctionDecl 0x5612e0e07128 <line:670:1, col:12> col:6 isync 'void ()'
|-FunctionDecl 0x5612e0e071e8 <line:671:1, col:14> col:6 lwfence 'void ()'
|-VarDecl 0x5612e0e072a0 <line:672:1, col:5> col:5 used __unbuffered_cnt 'int'
|-VarDecl 0x5612e0e07320 prev 0x5612e0e072a0 <line:673:1, col:24> col:5 used __unbuffered_cnt 'int' cinit
| `-IntegerLiteral 0x5612e0e07388 <col:24> 'int' 0
|-VarDecl 0x5612e0e073c0 <line:674:1, col:5> col:5 used __unbuffered_p0_EAX 'int'
|-VarDecl 0x5612e0e07440 prev 0x5612e0e073c0 <line:675:1, col:27> col:5 used __unbuffered_p0_EAX 'int' cinit
| `-IntegerLiteral 0x5612e0e074a8 <col:27> 'int' 0
|-VarDecl 0x5612e0e074e0 <line:676:1, col:5> col:5 used __unbuffered_p2_EAX 'int'
|-VarDecl 0x5612e0e07560 prev 0x5612e0e074e0 <line:677:1, col:27> col:5 used __unbuffered_p2_EAX 'int' cinit
| `-IntegerLiteral 0x5612e0e075c8 <col:27> 'int' 0
|-VarDecl 0x5612e0e075f8 <line:678:1, col:7> col:7 __unbuffered_p2_EAX$flush_delayed '_Bool'
|-VarDecl 0x5612e0e07678 <line:679:1, col:5> col:5 __unbuffered_p2_EAX$mem_tmp 'int'
|-VarDecl 0x5612e0e076f0 <line:680:1, col:7> col:7 __unbuffered_p2_EAX$r_buff0_thd0 '_Bool'
|-VarDecl 0x5612e0e07768 <line:681:1, col:7> col:7 __unbuffered_p2_EAX$r_buff0_thd1 '_Bool'
|-VarDecl 0x5612e0e077e0 <line:682:1, col:7> col:7 __unbuffered_p2_EAX$r_buff0_thd2 '_Bool'
|-VarDecl 0x5612e0e07858 <line:683:1, col:7> col:7 __unbuffered_p2_EAX$r_buff0_thd3 '_Bool'
|-VarDecl 0x5612e0e078d0 <line:684:1, col:7> col:7 __unbuffered_p2_EAX$r_buff1_thd0 '_Bool'
|-VarDecl 0x5612e0e07948 <line:685:1, col:7> col:7 __unbuffered_p2_EAX$r_buff1_thd1 '_Bool'
|-VarDecl 0x5612e0e079c0 <line:686:1, col:7> col:7 __unbuffered_p2_EAX$r_buff1_thd2 '_Bool'
|-VarDecl 0x5612e0e07a38 <line:687:1, col:7> col:7 __unbuffered_p2_EAX$r_buff1_thd3 '_Bool'
|-VarDecl 0x5612e0e07b00 <line:688:1, col:7> col:7 used __unbuffered_p2_EAX$read_delayed '_Bool'
|-VarDecl 0x5612e0e07b80 <line:689:1, col:6> col:6 used __unbuffered_p2_EAX$read_delayed_var 'int *'
|-VarDecl 0x5612e0e07c00 <line:690:1, col:5> col:5 __unbuffered_p2_EAX$w_buff0 'int'
|-VarDecl 0x5612e0e07c78 <line:691:1, col:7> col:7 __unbuffered_p2_EAX$w_buff0_used '_Bool'
|-VarDecl 0x5612e0e07cf8 <line:692:1, col:5> col:5 __unbuffered_p2_EAX$w_buff1 'int'
|-VarDecl 0x5612e0e07d70 <line:693:1, col:7> col:7 __unbuffered_p2_EAX$w_buff1_used '_Bool'
|-VarDecl 0x5612e0e07df0 <line:694:1, col:5> col:5 used __unbuffered_p2_EBX 'int'
|-VarDecl 0x5612e0e07e70 prev 0x5612e0e07df0 <line:695:1, col:27> col:5 used __unbuffered_p2_EBX 'int' cinit
| `-IntegerLiteral 0x5612e0e07ed8 <col:27> 'int' 0
|-VarDecl 0x5612e0e07f08 <line:696:1, col:7> col:7 used main$tmp_guard0 '_Bool'
|-VarDecl 0x5612e0e07f80 <line:697:1, col:7> col:7 used main$tmp_guard1 '_Bool'
|-VarDecl 0x5612e0e08000 <line:698:1, col:5> col:5 used x 'int'
|-VarDecl 0x5612e0e08080 prev 0x5612e0e08000 <line:699:1, col:9> col:5 used x 'int' cinit
| `-IntegerLiteral 0x5612e0e080e8 <col:9> 'int' 0
|-VarDecl 0x5612e0e08118 <line:700:1, col:7> col:7 used x$flush_delayed '_Bool'
|-VarDecl 0x5612e0e08198 <line:701:1, col:5> col:5 used x$mem_tmp 'int'
|-VarDecl 0x5612e0e08210 <line:702:1, col:7> col:7 used x$r_buff0_thd0 '_Bool'
|-VarDecl 0x5612e0e08288 <line:703:1, col:7> col:7 used x$r_buff0_thd1 '_Bool'
|-VarDecl 0x5612e0e08300 <line:704:1, col:7> col:7 used x$r_buff0_thd2 '_Bool'
|-VarDecl 0x5612e0e08378 <line:705:1, col:7> col:7 used x$r_buff0_thd3 '_Bool'
|-VarDecl 0x5612e0e083f0 <line:706:1, col:7> col:7 used x$r_buff1_thd0 '_Bool'
|-VarDecl 0x5612e0e08468 <line:707:1, col:7> col:7 used x$r_buff1_thd1 '_Bool'
|-VarDecl 0x5612e0e084e0 <line:708:1, col:7> col:7 used x$r_buff1_thd2 '_Bool'
|-VarDecl 0x5612e0e08558 <line:709:1, col:7> col:7 used x$r_buff1_thd3 '_Bool'
|-VarDecl 0x5612e0e085d0 <line:710:1, col:7> col:7 x$read_delayed '_Bool'
|-VarDecl 0x5612e0e08650 <line:711:1, col:6> col:6 x$read_delayed_var 'int *'
|-VarDecl 0x5612e0e086d0 <line:712:1, col:5> col:5 used x$w_buff0 'int'
|-VarDecl 0x5612e0e08748 <line:713:1, col:7> col:7 used x$w_buff0_used '_Bool'
|-VarDecl 0x5612e0e087c8 <line:714:1, col:5> col:5 used x$w_buff1 'int'
|-VarDecl 0x5612e0e08840 <line:715:1, col:7> col:7 used x$w_buff1_used '_Bool'
|-VarDecl 0x5612e0e088c0 <line:716:1, col:5> col:5 used y 'int'
|-VarDecl 0x5612e0e08940 prev 0x5612e0e088c0 <line:717:1, col:9> col:5 used y 'int' cinit
| `-IntegerLiteral 0x5612e0e089a8 <col:9> 'int' 0
|-VarDecl 0x5612e0e089d8 <line:718:1, col:7> col:7 used weak$$choice0 '_Bool'
|-VarDecl 0x5612e0e08a50 <line:719:1, col:7> col:7 used weak$$choice1 '_Bool'
|-VarDecl 0x5612e0e09b20 <line:720:1, col:7> col:7 used weak$$choice2 '_Bool'
|-FunctionDecl 0x5612e0e09c38 prev 0x5612e0e06cf0 <line:721:1, line:750:1> line:721:8 used P0 'void *(void *)'
| |-ParmVarDecl 0x5612e0e09ba0 <col:11, col:17> col:17 arg 'void *'
| `-CompoundStmt 0x5612e0e0cc88 <line:722:1, line:750:1>
|   |-CallExpr 0x5612e0e09d48 <line:723:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x5612e0e09d30 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5612e0e09ce0 <col:3> 'void ()' Function 0x5612e0dadfa0 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x5612e0e09da8 <line:724:3, col:7> 'int' '='
|   | |-DeclRefExpr 0x5612e0e09d68 <col:3> 'int' lvalue Var 0x5612e0e08940 'y' 'int'
|   | `-IntegerLiteral 0x5612e0e09d88 <col:7> 'int' 1
|   |-CallExpr 0x5612e0e09e00 <line:725:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x5612e0e09de8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5612e0e09dc8 <col:3> 'void ()' Function 0x5612e0dae060 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x5612e0e09e58 <line:726:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x5612e0e09e40 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5612e0e09e20 <col:3> 'void ()' Function 0x5612e0dadfa0 '__VERIFIER_atomic_begin' 'void ()'
|   |-CallExpr 0x5612e0e09eb0 <line:727:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x5612e0e09e98 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5612e0e09e78 <col:3> 'void ()' Function 0x5612e0dae060 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x5612e0e09f08 <line:728:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x5612e0e09ef0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5612e0e09ed0 <col:3> 'void ()' Function 0x5612e0dadfa0 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x5612e0e09fd8 <line:729:3, col:42> '_Bool' '='
|   | |-DeclRefExpr 0x5612e0e09f28 <col:3> '_Bool' lvalue Var 0x5612e0e089d8 'weak$$choice0' '_Bool'
|   | `-CallExpr 0x5612e0e09fb8 <col:19, col:42> '_Bool'
|   |   `-ImplicitCastExpr 0x5612e0e09fa0 <col:19> '_Bool (*)(void)' <FunctionToPointerDecay>
|   |     `-DeclRefExpr 0x5612e0e09f48 <col:19> '_Bool (void)' Function 0x5612e0dad770 '__VERIFIER_nondet_bool' '_Bool (void)'
|   |-BinaryOperator 0x5612e0e0a070 <line:730:3, col:42> '_Bool' '='
|   | |-DeclRefExpr 0x5612e0e09ff8 <col:3> '_Bool' lvalue Var 0x5612e0e09b20 'weak$$choice2' '_Bool'
|   | `-CallExpr 0x5612e0e0a050 <col:19, col:42> '_Bool'
|   |   `-ImplicitCastExpr 0x5612e0e0a038 <col:19> '_Bool (*)(void)' <FunctionToPointerDecay>
|   |     `-DeclRefExpr 0x5612e0e0a018 <col:19> '_Bool (void)' Function 0x5612e0dad770 '__VERIFIER_nondet_bool' '_Bool (void)'
|   |-BinaryOperator 0x5612e0e0a0e8 <line:731:3, col:21> '_Bool' '='
|   | |-DeclRefExpr 0x5612e0e0a090 <col:3> '_Bool' lvalue Var 0x5612e0e08118 'x$flush_delayed' '_Bool'
|   | `-ImplicitCastExpr 0x5612e0e0a0d0 <col:21> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x5612e0e0a0b0 <col:21> '_Bool' lvalue Var 0x5612e0e09b20 'weak$$choice2' '_Bool'
|   |-BinaryOperator 0x5612e0e0a160 <line:732:3, col:15> 'int' '='
|   | |-DeclRefExpr 0x5612e0e0a108 <col:3> 'int' lvalue Var 0x5612e0e08198 'x$mem_tmp' 'int'
|   | `-ImplicitCastExpr 0x5612e0e0a148 <col:15> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x5612e0e0a128 <col:15> 'int' lvalue Var 0x5612e0e08080 'x' 'int'
|   |-BinaryOperator 0x5612e0e0a598 <line:733:3, col:162> 'int' '='
|   | |-DeclRefExpr 0x5612e0e0a180 <col:3> 'int' lvalue Var 0x5612e0e08080 'x' 'int'
|   | `-ConditionalOperator 0x5612e0e0a568 <col:7, col:162> 'int'
|   |   |-BinaryOperator 0x5612e0e0a390 <col:7, col:84> 'int' '||'
|   |   | |-BinaryOperator 0x5612e0e0a2b0 <col:7, col:46> 'int' '||'
|   |   | | |-UnaryOperator 0x5612e0e0a1d8 <col:7, col:8> 'int' prefix '!' cannot overflow
|   |   | | | `-ImplicitCastExpr 0x5612e0e0a1c0 <col:8> '_Bool' <LValueToRValue>
|   |   | | |   `-DeclRefExpr 0x5612e0e0a1a0 <col:8> '_Bool' lvalue Var 0x5612e0e08748 'x$w_buff0_used' '_Bool'
|   |   | | `-BinaryOperator 0x5612e0e0a290 <col:26, col:46> 'int' '&&'
|   |   | |   |-UnaryOperator 0x5612e0e0a228 <col:26, col:27> 'int' prefix '!' cannot overflow
|   |   | |   | `-ImplicitCastExpr 0x5612e0e0a210 <col:27> '_Bool' <LValueToRValue>
|   |   | |   |   `-DeclRefExpr 0x5612e0e0a1f0 <col:27> '_Bool' lvalue Var 0x5612e0e08288 'x$r_buff0_thd1' '_Bool'
|   |   | |   `-UnaryOperator 0x5612e0e0a278 <col:45, col:46> 'int' prefix '!' cannot overflow
|   |   | |     `-ImplicitCastExpr 0x5612e0e0a260 <col:46> '_Bool' <LValueToRValue>
|   |   | |       `-DeclRefExpr 0x5612e0e0a240 <col:46> '_Bool' lvalue Var 0x5612e0e08840 'x$w_buff1_used' '_Bool'
|   |   | `-BinaryOperator 0x5612e0e0a370 <col:64, col:84> 'int' '&&'
|   |   |   |-UnaryOperator 0x5612e0e0a308 <col:64, col:65> 'int' prefix '!' cannot overflow
|   |   |   | `-ImplicitCastExpr 0x5612e0e0a2f0 <col:65> '_Bool' <LValueToRValue>
|   |   |   |   `-DeclRefExpr 0x5612e0e0a2d0 <col:65> '_Bool' lvalue Var 0x5612e0e08288 'x$r_buff0_thd1' '_Bool'
|   |   |   `-UnaryOperator 0x5612e0e0a358 <col:83, col:84> 'int' prefix '!' cannot overflow
|   |   |     `-ImplicitCastExpr 0x5612e0e0a340 <col:84> '_Bool' <LValueToRValue>
|   |   |       `-DeclRefExpr 0x5612e0e0a320 <col:84> '_Bool' lvalue Var 0x5612e0e08468 'x$r_buff1_thd1' '_Bool'
|   |   |-ImplicitCastExpr 0x5612e0e0a550 <col:101> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x5612e0e0a3b0 <col:101> 'int' lvalue Var 0x5612e0e08080 'x' 'int'
|   |   `-ParenExpr 0x5612e0e0a530 <col:105, col:162> 'int'
|   |     `-ConditionalOperator 0x5612e0e0a500 <col:106, col:153> 'int'
|   |       |-BinaryOperator 0x5612e0e0a470 <col:106, col:124> 'int' '&&'
|   |       | |-ImplicitCastExpr 0x5612e0e0a428 <col:106> 'int' <IntegralCast>
|   |       | | `-ImplicitCastExpr 0x5612e0e0a410 <col:106> '_Bool' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x5612e0e0a3d0 <col:106> '_Bool' lvalue Var 0x5612e0e08748 'x$w_buff0_used' '_Bool'
|   |       | `-ImplicitCastExpr 0x5612e0e0a458 <col:124> 'int' <IntegralCast>
|   |       |   `-ImplicitCastExpr 0x5612e0e0a440 <col:124> '_Bool' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x5612e0e0a3f0 <col:124> '_Bool' lvalue Var 0x5612e0e08288 'x$r_buff0_thd1' '_Bool'
|   |       |-ImplicitCastExpr 0x5612e0e0a4d0 <col:141> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x5612e0e0a490 <col:141> 'int' lvalue Var 0x5612e0e086d0 'x$w_buff0' 'int'
|   |       `-ImplicitCastExpr 0x5612e0e0a4e8 <col:153> 'int' <LValueToRValue>
|   |         `-DeclRefExpr 0x5612e0e0a4b0 <col:153> 'int' lvalue Var 0x5612e0e087c8 'x$w_buff1' 'int'
|   |-BinaryOperator 0x5612e0e0aaa8 <line:734:3, col:208> 'int' '='
|   | |-DeclRefExpr 0x5612e0e0a5b8 <col:3> 'int' lvalue Var 0x5612e0e086d0 'x$w_buff0' 'int'
|   | `-ConditionalOperator 0x5612e0e0aa78 <col:15, col:208> 'int'
|   |   |-ImplicitCastExpr 0x5612e0e0aa48 <col:15> 'int' <IntegralCast>
|   |   | `-ImplicitCastExpr 0x5612e0e0aa30 <col:15> '_Bool' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x5612e0e0a5d8 <col:15> '_Bool' lvalue Var 0x5612e0e09b20 'weak$$choice2' '_Bool'
|   |   |-ImplicitCastExpr 0x5612e0e0aa60 <col:31> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x5612e0e0a5f8 <col:31> 'int' lvalue Var 0x5612e0e086d0 'x$w_buff0' 'int'
|   |   `-ParenExpr 0x5612e0e0aa10 <col:43, col:208> 'int'
|   |     `-ConditionalOperator 0x5612e0e0a9e0 <col:44, col:207> 'int'
|   |       |-BinaryOperator 0x5612e0e0a808 <col:44, col:121> 'int' '||'
|   |       | |-BinaryOperator 0x5612e0e0a728 <col:44, col:83> 'int' '||'
|   |       | | |-UnaryOperator 0x5612e0e0a650 <col:44, col:45> 'int' prefix '!' cannot overflow
|   |       | | | `-ImplicitCastExpr 0x5612e0e0a638 <col:45> '_Bool' <LValueToRValue>
|   |       | | |   `-DeclRefExpr 0x5612e0e0a618 <col:45> '_Bool' lvalue Var 0x5612e0e08748 'x$w_buff0_used' '_Bool'
|   |       | | `-BinaryOperator 0x5612e0e0a708 <col:63, col:83> 'int' '&&'
|   |       | |   |-UnaryOperator 0x5612e0e0a6a0 <col:63, col:64> 'int' prefix '!' cannot overflow
|   |       | |   | `-ImplicitCastExpr 0x5612e0e0a688 <col:64> '_Bool' <LValueToRValue>
|   |       | |   |   `-DeclRefExpr 0x5612e0e0a668 <col:64> '_Bool' lvalue Var 0x5612e0e08288 'x$r_buff0_thd1' '_Bool'
|   |       | |   `-UnaryOperator 0x5612e0e0a6f0 <col:82, col:83> 'int' prefix '!' cannot overflow
|   |       | |     `-ImplicitCastExpr 0x5612e0e0a6d8 <col:83> '_Bool' <LValueToRValue>
|   |       | |       `-DeclRefExpr 0x5612e0e0a6b8 <col:83> '_Bool' lvalue Var 0x5612e0e08840 'x$w_buff1_used' '_Bool'
|   |       | `-BinaryOperator 0x5612e0e0a7e8 <col:101, col:121> 'int' '&&'
|   |       |   |-UnaryOperator 0x5612e0e0a780 <col:101, col:102> 'int' prefix '!' cannot overflow
|   |       |   | `-ImplicitCastExpr 0x5612e0e0a768 <col:102> '_Bool' <LValueToRValue>
|   |       |   |   `-DeclRefExpr 0x5612e0e0a748 <col:102> '_Bool' lvalue Var 0x5612e0e08288 'x$r_buff0_thd1' '_Bool'
|   |       |   `-UnaryOperator 0x5612e0e0a7d0 <col:120, col:121> 'int' prefix '!' cannot overflow
|   |       |     `-ImplicitCastExpr 0x5612e0e0a7b8 <col:121> '_Bool' <LValueToRValue>
|   |       |       `-DeclRefExpr 0x5612e0e0a798 <col:121> '_Bool' lvalue Var 0x5612e0e08468 'x$r_buff1_thd1' '_Bool'
|   |       |-ImplicitCastExpr 0x5612e0e0a9c8 <col:138> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x5612e0e0a828 <col:138> 'int' lvalue Var 0x5612e0e086d0 'x$w_buff0' 'int'
|   |       `-ParenExpr 0x5612e0e0a9a8 <col:150, col:207> 'int'
|   |         `-ConditionalOperator 0x5612e0e0a978 <col:151, col:198> 'int'
|   |           |-BinaryOperator 0x5612e0e0a8e8 <col:151, col:169> 'int' '&&'
|   |           | |-ImplicitCastExpr 0x5612e0e0a8a0 <col:151> 'int' <IntegralCast>
|   |           | | `-ImplicitCastExpr 0x5612e0e0a888 <col:151> '_Bool' <LValueToRValue>
|   |           | |   `-DeclRefExpr 0x5612e0e0a848 <col:151> '_Bool' lvalue Var 0x5612e0e08748 'x$w_buff0_used' '_Bool'
|   |           | `-ImplicitCastExpr 0x5612e0e0a8d0 <col:169> 'int' <IntegralCast>
|   |           |   `-ImplicitCastExpr 0x5612e0e0a8b8 <col:169> '_Bool' <LValueToRValue>
|   |           |     `-DeclRefExpr 0x5612e0e0a868 <col:169> '_Bool' lvalue Var 0x5612e0e08288 'x$r_buff0_thd1' '_Bool'
|   |           |-ImplicitCastExpr 0x5612e0e0a948 <col:186> 'int' <LValueToRValue>
|   |           | `-DeclRefExpr 0x5612e0e0a908 <col:186> 'int' lvalue Var 0x5612e0e086d0 'x$w_buff0' 'int'
|   |           `-ImplicitCastExpr 0x5612e0e0a960 <col:198> 'int' <LValueToRValue>
|   |             `-DeclRefExpr 0x5612e0e0a928 <col:198> 'int' lvalue Var 0x5612e0e086d0 'x$w_buff0' 'int'
|   |-BinaryOperator 0x5612e0e0afe0 <line:735:3, col:208> 'int' '='
|   | |-DeclRefExpr 0x5612e0e0aac8 <col:3> 'int' lvalue Var 0x5612e0e087c8 'x$w_buff1' 'int'
|   | `-ConditionalOperator 0x5612e0e0afb0 <col:15, col:208> 'int'
|   |   |-ImplicitCastExpr 0x5612e0e0af80 <col:15> 'int' <IntegralCast>
|   |   | `-ImplicitCastExpr 0x5612e0e0af68 <col:15> '_Bool' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x5612e0e0aae8 <col:15> '_Bool' lvalue Var 0x5612e0e09b20 'weak$$choice2' '_Bool'
|   |   |-ImplicitCastExpr 0x5612e0e0af98 <col:31> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x5612e0e0ab30 <col:31> 'int' lvalue Var 0x5612e0e087c8 'x$w_buff1' 'int'
|   |   `-ParenExpr 0x5612e0e0af48 <col:43, col:208> 'int'
|   |     `-ConditionalOperator 0x5612e0e0af18 <col:44, col:207> 'int'
|   |       |-BinaryOperator 0x5612e0e0ad40 <col:44, col:121> 'int' '||'
|   |       | |-BinaryOperator 0x5612e0e0ac60 <col:44, col:83> 'int' '||'
|   |       | | |-UnaryOperator 0x5612e0e0ab88 <col:44, col:45> 'int' prefix '!' cannot overflow
|   |       | | | `-ImplicitCastExpr 0x5612e0e0ab70 <col:45> '_Bool' <LValueToRValue>
|   |       | | |   `-DeclRefExpr 0x5612e0e0ab50 <col:45> '_Bool' lvalue Var 0x5612e0e08748 'x$w_buff0_used' '_Bool'
|   |       | | `-BinaryOperator 0x5612e0e0ac40 <col:63, col:83> 'int' '&&'
|   |       | |   |-UnaryOperator 0x5612e0e0abd8 <col:63, col:64> 'int' prefix '!' cannot overflow
|   |       | |   | `-ImplicitCastExpr 0x5612e0e0abc0 <col:64> '_Bool' <LValueToRValue>
|   |       | |   |   `-DeclRefExpr 0x5612e0e0aba0 <col:64> '_Bool' lvalue Var 0x5612e0e08288 'x$r_buff0_thd1' '_Bool'
|   |       | |   `-UnaryOperator 0x5612e0e0ac28 <col:82, col:83> 'int' prefix '!' cannot overflow
|   |       | |     `-ImplicitCastExpr 0x5612e0e0ac10 <col:83> '_Bool' <LValueToRValue>
|   |       | |       `-DeclRefExpr 0x5612e0e0abf0 <col:83> '_Bool' lvalue Var 0x5612e0e08840 'x$w_buff1_used' '_Bool'
|   |       | `-BinaryOperator 0x5612e0e0ad20 <col:101, col:121> 'int' '&&'
|   |       |   |-UnaryOperator 0x5612e0e0acb8 <col:101, col:102> 'int' prefix '!' cannot overflow
|   |       |   | `-ImplicitCastExpr 0x5612e0e0aca0 <col:102> '_Bool' <LValueToRValue>
|   |       |   |   `-DeclRefExpr 0x5612e0e0ac80 <col:102> '_Bool' lvalue Var 0x5612e0e08288 'x$r_buff0_thd1' '_Bool'
|   |       |   `-UnaryOperator 0x5612e0e0ad08 <col:120, col:121> 'int' prefix '!' cannot overflow
|   |       |     `-ImplicitCastExpr 0x5612e0e0acf0 <col:121> '_Bool' <LValueToRValue>
|   |       |       `-DeclRefExpr 0x5612e0e0acd0 <col:121> '_Bool' lvalue Var 0x5612e0e08468 'x$r_buff1_thd1' '_Bool'
|   |       |-ImplicitCastExpr 0x5612e0e0af00 <col:138> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x5612e0e0ad60 <col:138> 'int' lvalue Var 0x5612e0e087c8 'x$w_buff1' 'int'
|   |       `-ParenExpr 0x5612e0e0aee0 <col:150, col:207> 'int'
|   |         `-ConditionalOperator 0x5612e0e0aeb0 <col:151, col:198> 'int'
|   |           |-BinaryOperator 0x5612e0e0ae20 <col:151, col:169> 'int' '&&'
|   |           | |-ImplicitCastExpr 0x5612e0e0add8 <col:151> 'int' <IntegralCast>
|   |           | | `-ImplicitCastExpr 0x5612e0e0adc0 <col:151> '_Bool' <LValueToRValue>
|   |           | |   `-DeclRefExpr 0x5612e0e0ad80 <col:151> '_Bool' lvalue Var 0x5612e0e08748 'x$w_buff0_used' '_Bool'
|   |           | `-ImplicitCastExpr 0x5612e0e0ae08 <col:169> 'int' <IntegralCast>
|   |           |   `-ImplicitCastExpr 0x5612e0e0adf0 <col:169> '_Bool' <LValueToRValue>
|   |           |     `-DeclRefExpr 0x5612e0e0ada0 <col:169> '_Bool' lvalue Var 0x5612e0e08288 'x$r_buff0_thd1' '_Bool'
|   |           |-ImplicitCastExpr 0x5612e0e0ae80 <col:186> 'int' <LValueToRValue>
|   |           | `-DeclRefExpr 0x5612e0e0ae40 <col:186> 'int' lvalue Var 0x5612e0e087c8 'x$w_buff1' 'int'
|   |           `-ImplicitCastExpr 0x5612e0e0ae98 <col:198> 'int' <LValueToRValue>
|   |             `-DeclRefExpr 0x5612e0e0ae60 <col:198> 'int' lvalue Var 0x5612e0e087c8 'x$w_buff1' 'int'
|   |-BinaryOperator 0x5612e0e0b588 <line:736:3, col:227> '_Bool' '='
|   | |-DeclRefExpr 0x5612e0e0b000 <col:3> '_Bool' lvalue Var 0x5612e0e08748 'x$w_buff0_used' '_Bool'
|   | `-ImplicitCastExpr 0x5612e0e0b570 <col:20, col:227> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x5612e0e0b540 <col:20, col:227> 'int'
|   |     |-ImplicitCastExpr 0x5612e0e0b4f8 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x5612e0e0b4e0 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x5612e0e0b020 <col:20> '_Bool' lvalue Var 0x5612e0e09b20 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x5612e0e0b528 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x5612e0e0b510 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x5612e0e0b040 <col:36> '_Bool' lvalue Var 0x5612e0e08748 'x$w_buff0_used' '_Bool'
|   |     `-ParenExpr 0x5612e0e0b4c0 <col:53, col:227> 'int'
|   |       `-ConditionalOperator 0x5612e0e0b490 <col:54, col:226> 'int'
|   |         |-BinaryOperator 0x5612e0e0b250 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x5612e0e0b170 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x5612e0e0b098 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x5612e0e0b080 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x5612e0e0b060 <col:55> '_Bool' lvalue Var 0x5612e0e08748 'x$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x5612e0e0b150 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x5612e0e0b0e8 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x5612e0e0b0d0 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x5612e0e0b0b0 <col:74> '_Bool' lvalue Var 0x5612e0e08288 'x$r_buff0_thd1' '_Bool'
|   |         | |   `-UnaryOperator 0x5612e0e0b138 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x5612e0e0b120 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x5612e0e0b100 <col:93> '_Bool' lvalue Var 0x5612e0e08840 'x$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x5612e0e0b230 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x5612e0e0b1c8 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x5612e0e0b1b0 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x5612e0e0b190 <col:112> '_Bool' lvalue Var 0x5612e0e08288 'x$r_buff0_thd1' '_Bool'
|   |         |   `-UnaryOperator 0x5612e0e0b218 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x5612e0e0b200 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x5612e0e0b1e0 <col:131> '_Bool' lvalue Var 0x5612e0e08468 'x$r_buff1_thd1' '_Bool'
|   |         |-ImplicitCastExpr 0x5612e0e0b478 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x5612e0e0b460 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x5612e0e0b270 <col:148> '_Bool' lvalue Var 0x5612e0e08748 'x$w_buff0_used' '_Bool'
|   |         `-ParenExpr 0x5612e0e0b440 <col:165, col:226> 'int'
|   |           `-ConditionalOperator 0x5612e0e0b410 <col:166, col:212> 'int'
|   |             |-BinaryOperator 0x5612e0e0b330 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x5612e0e0b2e8 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x5612e0e0b2d0 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x5612e0e0b290 <col:166> '_Bool' lvalue Var 0x5612e0e08748 'x$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x5612e0e0b318 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x5612e0e0b300 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x5612e0e0b2b0 <col:184> '_Bool' lvalue Var 0x5612e0e08288 'x$r_buff0_thd1' '_Bool'
|   |             |-ImplicitCastExpr 0x5612e0e0b3c8 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x5612e0e0b380 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x5612e0e0b350 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x5612e0e0b3f8 <col:212> 'int' <IntegralCast>
|   |               `-ImplicitCastExpr 0x5612e0e0b3e0 <col:212> '_Bool' <LValueToRValue>
|   |                 `-DeclRefExpr 0x5612e0e0b3a8 <col:212> '_Bool' lvalue Var 0x5612e0e08748 'x$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x5612e0e0bb88 <line:737:3, col:221> '_Bool' '='
|   | |-DeclRefExpr 0x5612e0e0b5a8 <col:3> '_Bool' lvalue Var 0x5612e0e08840 'x$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x5612e0e0bb70 <col:20, col:221> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x5612e0e0bb40 <col:20, col:221> 'int'
|   |     |-ImplicitCastExpr 0x5612e0e0bac0 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x5612e0e0baa8 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x5612e0e0b5c8 <col:20> '_Bool' lvalue Var 0x5612e0e09b20 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x5612e0e0baf0 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x5612e0e0bad8 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x5612e0e0b5e8 <col:36> '_Bool' lvalue Var 0x5612e0e08840 'x$w_buff1_used' '_Bool'
|   |     `-ParenExpr 0x5612e0e0ba88 <col:53, col:221> 'int'
|   |       `-ConditionalOperator 0x5612e0e0ba58 <col:54, col:220> 'int'
|   |         |-BinaryOperator 0x5612e0e0b7f8 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x5612e0e0b718 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x5612e0e0b640 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x5612e0e0b628 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x5612e0e0b608 <col:55> '_Bool' lvalue Var 0x5612e0e08748 'x$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x5612e0e0b6f8 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x5612e0e0b690 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x5612e0e0b678 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x5612e0e0b658 <col:74> '_Bool' lvalue Var 0x5612e0e08288 'x$r_buff0_thd1' '_Bool'
|   |         | |   `-UnaryOperator 0x5612e0e0b6e0 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x5612e0e0b6c8 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x5612e0e0b6a8 <col:93> '_Bool' lvalue Var 0x5612e0e08840 'x$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x5612e0e0b7d8 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x5612e0e0b770 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x5612e0e0b758 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x5612e0e0b738 <col:112> '_Bool' lvalue Var 0x5612e0e08288 'x$r_buff0_thd1' '_Bool'
|   |         |   `-UnaryOperator 0x5612e0e0b7c0 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x5612e0e0b7a8 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x5612e0e0b788 <col:131> '_Bool' lvalue Var 0x5612e0e08468 'x$r_buff1_thd1' '_Bool'
|   |         |-ImplicitCastExpr 0x5612e0e0ba40 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x5612e0e0ba28 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x5612e0e0b818 <col:148> '_Bool' lvalue Var 0x5612e0e08840 'x$w_buff1_used' '_Bool'
|   |         `-ParenExpr 0x5612e0e0ba08 <col:165, col:220> 'int'
|   |           `-ConditionalOperator 0x5612e0e0b9d8 <col:166, col:219> 'int'
|   |             |-BinaryOperator 0x5612e0e0b8d8 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x5612e0e0b890 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x5612e0e0b878 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x5612e0e0b838 <col:166> '_Bool' lvalue Var 0x5612e0e08748 'x$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x5612e0e0b8c0 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x5612e0e0b8a8 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x5612e0e0b858 <col:184> '_Bool' lvalue Var 0x5612e0e08288 'x$r_buff0_thd1' '_Bool'
|   |             |-ImplicitCastExpr 0x5612e0e0b9a8 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x5612e0e0b928 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x5612e0e0b8f8 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x5612e0e0b9c0 <col:212, col:219> 'int' <IntegralCast>
|   |               `-CStyleCastExpr 0x5612e0e0b980 <col:212, col:219> '_Bool' <IntegralToBoolean>
|   |                 `-IntegerLiteral 0x5612e0e0b950 <col:219> 'int' 0
|   |-BinaryOperator 0x5612e0e0c130 <line:738:3, col:227> '_Bool' '='
|   | |-DeclRefExpr 0x5612e0e0bba8 <col:3> '_Bool' lvalue Var 0x5612e0e08288 'x$r_buff0_thd1' '_Bool'
|   | `-ImplicitCastExpr 0x5612e0e0c118 <col:20, col:227> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x5612e0e0c0e8 <col:20, col:227> 'int'
|   |     |-ImplicitCastExpr 0x5612e0e0c0a0 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x5612e0e0c088 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x5612e0e0bbc8 <col:20> '_Bool' lvalue Var 0x5612e0e09b20 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x5612e0e0c0d0 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x5612e0e0c0b8 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x5612e0e0bbe8 <col:36> '_Bool' lvalue Var 0x5612e0e08288 'x$r_buff0_thd1' '_Bool'
|   |     `-ParenExpr 0x5612e0e0c068 <col:53, col:227> 'int'
|   |       `-ConditionalOperator 0x5612e0e0c038 <col:54, col:226> 'int'
|   |         |-BinaryOperator 0x5612e0e0bdf8 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x5612e0e0bd18 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x5612e0e0bc40 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x5612e0e0bc28 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x5612e0e0bc08 <col:55> '_Bool' lvalue Var 0x5612e0e08748 'x$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x5612e0e0bcf8 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x5612e0e0bc90 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x5612e0e0bc78 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x5612e0e0bc58 <col:74> '_Bool' lvalue Var 0x5612e0e08288 'x$r_buff0_thd1' '_Bool'
|   |         | |   `-UnaryOperator 0x5612e0e0bce0 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x5612e0e0bcc8 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x5612e0e0bca8 <col:93> '_Bool' lvalue Var 0x5612e0e08840 'x$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x5612e0e0bdd8 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x5612e0e0bd70 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x5612e0e0bd58 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x5612e0e0bd38 <col:112> '_Bool' lvalue Var 0x5612e0e08288 'x$r_buff0_thd1' '_Bool'
|   |         |   `-UnaryOperator 0x5612e0e0bdc0 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x5612e0e0bda8 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x5612e0e0bd88 <col:131> '_Bool' lvalue Var 0x5612e0e08468 'x$r_buff1_thd1' '_Bool'
|   |         |-ImplicitCastExpr 0x5612e0e0c020 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x5612e0e0c008 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x5612e0e0be18 <col:148> '_Bool' lvalue Var 0x5612e0e08288 'x$r_buff0_thd1' '_Bool'
|   |         `-ParenExpr 0x5612e0e0bfe8 <col:165, col:226> 'int'
|   |           `-ConditionalOperator 0x5612e0e0bfb8 <col:166, col:212> 'int'
|   |             |-BinaryOperator 0x5612e0e0bed8 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x5612e0e0be90 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x5612e0e0be78 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x5612e0e0be38 <col:166> '_Bool' lvalue Var 0x5612e0e08748 'x$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x5612e0e0bec0 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x5612e0e0bea8 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x5612e0e0be58 <col:184> '_Bool' lvalue Var 0x5612e0e08288 'x$r_buff0_thd1' '_Bool'
|   |             |-ImplicitCastExpr 0x5612e0e0bf70 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x5612e0e0bf28 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x5612e0e0bef8 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x5612e0e0bfa0 <col:212> 'int' <IntegralCast>
|   |               `-ImplicitCastExpr 0x5612e0e0bf88 <col:212> '_Bool' <LValueToRValue>
|   |                 `-DeclRefExpr 0x5612e0e0bf50 <col:212> '_Bool' lvalue Var 0x5612e0e08288 'x$r_buff0_thd1' '_Bool'
|   |-BinaryOperator 0x5612e0e0c6f8 <line:739:3, col:221> '_Bool' '='
|   | |-DeclRefExpr 0x5612e0e0c150 <col:3> '_Bool' lvalue Var 0x5612e0e08468 'x$r_buff1_thd1' '_Bool'
|   | `-ImplicitCastExpr 0x5612e0e0c6e0 <col:20, col:221> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x5612e0e0c6b0 <col:20, col:221> 'int'
|   |     |-ImplicitCastExpr 0x5612e0e0c668 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x5612e0e0c650 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x5612e0e0c170 <col:20> '_Bool' lvalue Var 0x5612e0e09b20 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x5612e0e0c698 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x5612e0e0c680 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x5612e0e0c190 <col:36> '_Bool' lvalue Var 0x5612e0e08468 'x$r_buff1_thd1' '_Bool'
|   |     `-ParenExpr 0x5612e0e0c630 <col:53, col:221> 'int'
|   |       `-ConditionalOperator 0x5612e0e0c600 <col:54, col:220> 'int'
|   |         |-BinaryOperator 0x5612e0e0c3a0 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x5612e0e0c2c0 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x5612e0e0c1e8 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x5612e0e0c1d0 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x5612e0e0c1b0 <col:55> '_Bool' lvalue Var 0x5612e0e08748 'x$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x5612e0e0c2a0 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x5612e0e0c238 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x5612e0e0c220 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x5612e0e0c200 <col:74> '_Bool' lvalue Var 0x5612e0e08288 'x$r_buff0_thd1' '_Bool'
|   |         | |   `-UnaryOperator 0x5612e0e0c288 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x5612e0e0c270 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x5612e0e0c250 <col:93> '_Bool' lvalue Var 0x5612e0e08840 'x$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x5612e0e0c380 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x5612e0e0c318 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x5612e0e0c300 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x5612e0e0c2e0 <col:112> '_Bool' lvalue Var 0x5612e0e08288 'x$r_buff0_thd1' '_Bool'
|   |         |   `-UnaryOperator 0x5612e0e0c368 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x5612e0e0c350 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x5612e0e0c330 <col:131> '_Bool' lvalue Var 0x5612e0e08468 'x$r_buff1_thd1' '_Bool'
|   |         |-ImplicitCastExpr 0x5612e0e0c5e8 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x5612e0e0c5d0 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x5612e0e0c3c0 <col:148> '_Bool' lvalue Var 0x5612e0e08468 'x$r_buff1_thd1' '_Bool'
|   |         `-ParenExpr 0x5612e0e0c5b0 <col:165, col:220> 'int'
|   |           `-ConditionalOperator 0x5612e0e0c580 <col:166, col:219> 'int'
|   |             |-BinaryOperator 0x5612e0e0c480 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x5612e0e0c438 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x5612e0e0c420 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x5612e0e0c3e0 <col:166> '_Bool' lvalue Var 0x5612e0e08748 'x$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x5612e0e0c468 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x5612e0e0c450 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x5612e0e0c400 <col:184> '_Bool' lvalue Var 0x5612e0e08288 'x$r_buff0_thd1' '_Bool'
|   |             |-ImplicitCastExpr 0x5612e0e0c550 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x5612e0e0c4d0 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x5612e0e0c4a0 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x5612e0e0c568 <col:212, col:219> 'int' <IntegralCast>
|   |               `-CStyleCastExpr 0x5612e0e0c528 <col:212, col:219> '_Bool' <IntegralToBoolean>
|   |                 `-IntegerLiteral 0x5612e0e0c4f8 <col:219> 'int' 0
|   |-BinaryOperator 0x5612e0e0c770 <line:740:3, col:25> 'int' '='
|   | |-DeclRefExpr 0x5612e0e0c718 <col:3> 'int' lvalue Var 0x5612e0e07440 '__unbuffered_p0_EAX' 'int'
|   | `-ImplicitCastExpr 0x5612e0e0c758 <col:25> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x5612e0e0c738 <col:25> 'int' lvalue Var 0x5612e0e08080 'x' 'int'
|   |-BinaryOperator 0x5612e0e0c8a0 <line:741:3, col:37> 'int' '='
|   | |-DeclRefExpr 0x5612e0e0c790 <col:3> 'int' lvalue Var 0x5612e0e08080 'x' 'int'
|   | `-ConditionalOperator 0x5612e0e0c870 <col:7, col:37> 'int'
|   |   |-ImplicitCastExpr 0x5612e0e0c828 <col:7> 'int' <IntegralCast>
|   |   | `-ImplicitCastExpr 0x5612e0e0c810 <col:7> '_Bool' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x5612e0e0c7b0 <col:7> '_Bool' lvalue Var 0x5612e0e08118 'x$flush_delayed' '_Bool'
|   |   |-ImplicitCastExpr 0x5612e0e0c840 <col:25> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x5612e0e0c7d0 <col:25> 'int' lvalue Var 0x5612e0e08198 'x$mem_tmp' 'int'
|   |   `-ImplicitCastExpr 0x5612e0e0c858 <col:37> 'int' <LValueToRValue>
|   |     `-DeclRefExpr 0x5612e0e0c7f0 <col:37> 'int' lvalue Var 0x5612e0e08080 'x' 'int'
|   |-BinaryOperator 0x5612e0e0c938 <line:742:3, col:28> '_Bool' '='
|   | |-DeclRefExpr 0x5612e0e0c8c0 <col:3> '_Bool' lvalue Var 0x5612e0e08118 'x$flush_delayed' '_Bool'
|   | `-CStyleCastExpr 0x5612e0e0c910 <col:21, col:28> '_Bool' <IntegralToBoolean>
|   |   `-IntegerLiteral 0x5612e0e0c8e0 <col:28> 'int' 0
|   |-CallExpr 0x5612e0e0c990 <line:743:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x5612e0e0c978 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5612e0e0c958 <col:3> 'void ()' Function 0x5612e0dae060 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x5612e0e0c9e8 <line:744:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x5612e0e0c9d0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5612e0e0c9b0 <col:3> 'void ()' Function 0x5612e0dadfa0 '__VERIFIER_atomic_begin' 'void ()'
|   |-CallExpr 0x5612e0e0ca40 <line:745:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x5612e0e0ca28 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5612e0e0ca08 <col:3> 'void ()' Function 0x5612e0dae060 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x5612e0e0ca98 <line:746:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x5612e0e0ca80 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5612e0e0ca60 <col:3> 'void ()' Function 0x5612e0dadfa0 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x5612e0e0cb70 <line:747:3, col:41> 'int' '='
|   | |-DeclRefExpr 0x5612e0e0cab8 <col:3> 'int' lvalue Var 0x5612e0e07320 '__unbuffered_cnt' 'int'
|   | `-BinaryOperator 0x5612e0e0cb50 <col:22, col:41> 'int' '+'
|   |   |-ImplicitCastExpr 0x5612e0e0cb18 <col:22> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x5612e0e0cad8 <col:22> 'int' lvalue Var 0x5612e0e07320 '__unbuffered_cnt' 'int'
|   |   `-IntegerLiteral 0x5612e0e0caf8 <col:41> 'int' 1
|   |-CallExpr 0x5612e0e0cbc8 <line:748:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x5612e0e0cbb0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5612e0e0cb90 <col:3> 'void ()' Function 0x5612e0dae060 '__VERIFIER_atomic_end' 'void ()'
|   `-ReturnStmt 0x5612e0e0cc78 <line:749:3, col:36>
|     `-CallExpr 0x5612e0e0cc58 <col:10, col:36> 'void *'
|       `-ImplicitCastExpr 0x5612e0e0cc40 <col:10> 'void *(*)(void)' <FunctionToPointerDecay>
|         `-DeclRefExpr 0x5612e0e0cbe8 <col:10> 'void *(void)' Function 0x5612e0dadab8 '__VERIFIER_nondet_pointer' 'void *(void)'
|-FunctionDecl 0x5612e0e0ce20 prev 0x5612e0e06e48 <line:751:1, line:767:1> line:751:8 used P1 'void *(void *)'
| |-ParmVarDecl 0x5612e0e0cd88 <col:11, col:17> col:17 arg 'void *'
| `-CompoundStmt 0x5612e0e0df38 <line:752:1, line:767:1>
|   |-CallExpr 0x5612e0e0cf00 <line:753:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x5612e0e0cee8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5612e0e0cec8 <col:3> 'void ()' Function 0x5612e0dadfa0 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x5612e0e0cf60 <line:754:3, col:7> 'int' '='
|   | |-DeclRefExpr 0x5612e0e0cf20 <col:3> 'int' lvalue Var 0x5612e0e08080 'x' 'int'
|   | `-IntegerLiteral 0x5612e0e0cf40 <col:7> 'int' 1
|   |-CallExpr 0x5612e0e0cfb8 <line:755:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x5612e0e0cfa0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5612e0e0cf80 <col:3> 'void ()' Function 0x5612e0dae060 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x5612e0e0d010 <line:756:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x5612e0e0cff8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5612e0e0cfd8 <col:3> 'void ()' Function 0x5612e0dadfa0 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x5612e0e0d2f8 <line:757:3, col:103> 'int' '='
|   | |-DeclRefExpr 0x5612e0e0d030 <col:3> 'int' lvalue Var 0x5612e0e08080 'x' 'int'
|   | `-ConditionalOperator 0x5612e0e0d2c8 <col:7, col:103> 'int'
|   |   |-BinaryOperator 0x5612e0e0d0f0 <col:7, col:25> 'int' '&&'
|   |   | |-ImplicitCastExpr 0x5612e0e0d0a8 <col:7> 'int' <IntegralCast>
|   |   | | `-ImplicitCastExpr 0x5612e0e0d090 <col:7> '_Bool' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x5612e0e0d050 <col:7> '_Bool' lvalue Var 0x5612e0e08748 'x$w_buff0_used' '_Bool'
|   |   | `-ImplicitCastExpr 0x5612e0e0d0d8 <col:25> 'int' <IntegralCast>
|   |   |   `-ImplicitCastExpr 0x5612e0e0d0c0 <col:25> '_Bool' <LValueToRValue>
|   |   |     `-DeclRefExpr 0x5612e0e0d070 <col:25> '_Bool' lvalue Var 0x5612e0e08300 'x$r_buff0_thd2' '_Bool'
|   |   |-ImplicitCastExpr 0x5612e0e0d2b0 <col:42> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x5612e0e0d110 <col:42> 'int' lvalue Var 0x5612e0e086d0 'x$w_buff0' 'int'
|   |   `-ParenExpr 0x5612e0e0d290 <col:54, col:103> 'int'
|   |     `-ConditionalOperator 0x5612e0e0d260 <col:55, col:102> 'int'
|   |       |-BinaryOperator 0x5612e0e0d1d0 <col:55, col:73> 'int' '&&'
|   |       | |-ImplicitCastExpr 0x5612e0e0d188 <col:55> 'int' <IntegralCast>
|   |       | | `-ImplicitCastExpr 0x5612e0e0d170 <col:55> '_Bool' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x5612e0e0d130 <col:55> '_Bool' lvalue Var 0x5612e0e08840 'x$w_buff1_used' '_Bool'
|   |       | `-ImplicitCastExpr 0x5612e0e0d1b8 <col:73> 'int' <IntegralCast>
|   |       |   `-ImplicitCastExpr 0x5612e0e0d1a0 <col:73> '_Bool' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x5612e0e0d150 <col:73> '_Bool' lvalue Var 0x5612e0e084e0 'x$r_buff1_thd2' '_Bool'
|   |       |-ImplicitCastExpr 0x5612e0e0d230 <col:90> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x5612e0e0d1f0 <col:90> 'int' lvalue Var 0x5612e0e087c8 'x$w_buff1' 'int'
|   |       `-ImplicitCastExpr 0x5612e0e0d248 <col:102> 'int' <LValueToRValue>
|   |         `-DeclRefExpr 0x5612e0e0d210 <col:102> 'int' lvalue Var 0x5612e0e08080 'x' 'int'
|   |-BinaryOperator 0x5612e0e0d500 <line:758:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x5612e0e0d318 <col:3> '_Bool' lvalue Var 0x5612e0e08748 'x$w_buff0_used' '_Bool'
|   | `-ImplicitCastExpr 0x5612e0e0d4e8 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x5612e0e0d4b8 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x5612e0e0d3d8 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x5612e0e0d390 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x5612e0e0d378 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x5612e0e0d338 <col:20> '_Bool' lvalue Var 0x5612e0e08748 'x$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x5612e0e0d3c0 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x5612e0e0d3a8 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x5612e0e0d358 <col:38> '_Bool' lvalue Var 0x5612e0e08300 'x$r_buff0_thd2' '_Bool'
|   |     |-ImplicitCastExpr 0x5612e0e0d470 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x5612e0e0d428 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x5612e0e0d3f8 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x5612e0e0d4a0 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x5612e0e0d488 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x5612e0e0d450 <col:66> '_Bool' lvalue Var 0x5612e0e08748 'x$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x5612e0e0d7e8 <line:759:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x5612e0e0d520 <col:3> '_Bool' lvalue Var 0x5612e0e08840 'x$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x5612e0e0d7d0 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x5612e0e0d7a0 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x5612e0e0d6c0 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x5612e0e0d5e0 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x5612e0e0d598 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x5612e0e0d580 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x5612e0e0d540 <col:20> '_Bool' lvalue Var 0x5612e0e08748 'x$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x5612e0e0d5c8 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x5612e0e0d5b0 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x5612e0e0d560 <col:38> '_Bool' lvalue Var 0x5612e0e08300 'x$r_buff0_thd2' '_Bool'
|   |     | `-BinaryOperator 0x5612e0e0d6a0 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x5612e0e0d658 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x5612e0e0d640 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x5612e0e0d600 <col:56> '_Bool' lvalue Var 0x5612e0e08840 'x$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x5612e0e0d688 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x5612e0e0d670 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x5612e0e0d620 <col:74> '_Bool' lvalue Var 0x5612e0e084e0 'x$r_buff1_thd2' '_Bool'
|   |     |-ImplicitCastExpr 0x5612e0e0d758 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x5612e0e0d710 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x5612e0e0d6e0 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x5612e0e0d788 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x5612e0e0d770 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x5612e0e0d738 <col:102> '_Bool' lvalue Var 0x5612e0e08840 'x$w_buff1_used' '_Bool'
|   |-BinaryOperator 0x5612e0e0d9f0 <line:760:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x5612e0e0d808 <col:3> '_Bool' lvalue Var 0x5612e0e08300 'x$r_buff0_thd2' '_Bool'
|   | `-ImplicitCastExpr 0x5612e0e0d9d8 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x5612e0e0d9a8 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x5612e0e0d8c8 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x5612e0e0d880 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x5612e0e0d868 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x5612e0e0d828 <col:20> '_Bool' lvalue Var 0x5612e0e08748 'x$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x5612e0e0d8b0 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x5612e0e0d898 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x5612e0e0d848 <col:38> '_Bool' lvalue Var 0x5612e0e08300 'x$r_buff0_thd2' '_Bool'
|   |     |-ImplicitCastExpr 0x5612e0e0d960 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x5612e0e0d918 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x5612e0e0d8e8 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x5612e0e0d990 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x5612e0e0d978 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x5612e0e0d940 <col:66> '_Bool' lvalue Var 0x5612e0e08300 'x$r_buff0_thd2' '_Bool'
|   |-BinaryOperator 0x5612e0e0dcf0 <line:761:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x5612e0e0da10 <col:3> '_Bool' lvalue Var 0x5612e0e084e0 'x$r_buff1_thd2' '_Bool'
|   | `-ImplicitCastExpr 0x5612e0e0dcd8 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x5612e0e0dca8 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x5612e0e0dbc8 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x5612e0e0dad0 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x5612e0e0da88 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x5612e0e0da70 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x5612e0e0da30 <col:20> '_Bool' lvalue Var 0x5612e0e08748 'x$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x5612e0e0dab8 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x5612e0e0daa0 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x5612e0e0da50 <col:38> '_Bool' lvalue Var 0x5612e0e08300 'x$r_buff0_thd2' '_Bool'
|   |     | `-BinaryOperator 0x5612e0e0dba8 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x5612e0e0db60 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x5612e0e0db30 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x5612e0e0daf0 <col:56> '_Bool' lvalue Var 0x5612e0e08840 'x$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x5612e0e0db90 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x5612e0e0db78 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x5612e0e0db10 <col:74> '_Bool' lvalue Var 0x5612e0e084e0 'x$r_buff1_thd2' '_Bool'
|   |     |-ImplicitCastExpr 0x5612e0e0dc60 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x5612e0e0dc18 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x5612e0e0dbe8 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x5612e0e0dc90 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x5612e0e0dc78 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x5612e0e0dc40 <col:102> '_Bool' lvalue Var 0x5612e0e084e0 'x$r_buff1_thd2' '_Bool'
|   |-CallExpr 0x5612e0e0dd48 <line:762:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x5612e0e0dd30 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5612e0e0dd10 <col:3> 'void ()' Function 0x5612e0dae060 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x5612e0e0dda0 <line:763:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x5612e0e0dd88 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5612e0e0dd68 <col:3> 'void ()' Function 0x5612e0dadfa0 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x5612e0e0de58 <line:764:3, col:41> 'int' '='
|   | |-DeclRefExpr 0x5612e0e0ddc0 <col:3> 'int' lvalue Var 0x5612e0e07320 '__unbuffered_cnt' 'int'
|   | `-BinaryOperator 0x5612e0e0de38 <col:22, col:41> 'int' '+'
|   |   |-ImplicitCastExpr 0x5612e0e0de20 <col:22> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x5612e0e0dde0 <col:22> 'int' lvalue Var 0x5612e0e07320 '__unbuffered_cnt' 'int'
|   |   `-IntegerLiteral 0x5612e0e0de00 <col:41> 'int' 1
|   |-CallExpr 0x5612e0e0deb0 <line:765:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x5612e0e0de98 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5612e0e0de78 <col:3> 'void ()' Function 0x5612e0dae060 '__VERIFIER_atomic_end' 'void ()'
|   `-ReturnStmt 0x5612e0e0df28 <line:766:3, col:36>
|     `-CallExpr 0x5612e0e0df08 <col:10, col:36> 'void *'
|       `-ImplicitCastExpr 0x5612e0e0def0 <col:10> 'void *(*)(void)' <FunctionToPointerDecay>
|         `-DeclRefExpr 0x5612e0e0ded0 <col:10> 'void *(void)' Function 0x5612e0dadab8 '__VERIFIER_nondet_pointer' 'void *(void)'
|-FunctionDecl 0x5612e0e0e068 prev 0x5612e0e06fa0 <line:768:1, line:802:1> line:768:8 used P2 'void *(void *)'
| |-ParmVarDecl 0x5612e0e0dfd0 <col:11, col:17> col:17 arg 'void *'
| `-CompoundStmt 0x5612e0e11d50 <line:769:1, line:802:1>
|   |-CallExpr 0x5612e0e0e148 <line:770:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x5612e0e0e130 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5612e0e0e110 <col:3> 'void ()' Function 0x5612e0dadfa0 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x5612e0e0e1e0 <line:771:3, col:42> '_Bool' '='
|   | |-DeclRefExpr 0x5612e0e0e168 <col:3> '_Bool' lvalue Var 0x5612e0e089d8 'weak$$choice0' '_Bool'
|   | `-CallExpr 0x5612e0e0e1c0 <col:19, col:42> '_Bool'
|   |   `-ImplicitCastExpr 0x5612e0e0e1a8 <col:19> '_Bool (*)(void)' <FunctionToPointerDecay>
|   |     `-DeclRefExpr 0x5612e0e0e188 <col:19> '_Bool (void)' Function 0x5612e0dad770 '__VERIFIER_nondet_bool' '_Bool (void)'
|   |-BinaryOperator 0x5612e0e0e278 <line:772:3, col:42> '_Bool' '='
|   | |-DeclRefExpr 0x5612e0e0e200 <col:3> '_Bool' lvalue Var 0x5612e0e09b20 'weak$$choice2' '_Bool'
|   | `-CallExpr 0x5612e0e0e258 <col:19, col:42> '_Bool'
|   |   `-ImplicitCastExpr 0x5612e0e0e240 <col:19> '_Bool (*)(void)' <FunctionToPointerDecay>
|   |     `-DeclRefExpr 0x5612e0e0e220 <col:19> '_Bool (void)' Function 0x5612e0dad770 '__VERIFIER_nondet_bool' '_Bool (void)'
|   |-BinaryOperator 0x5612e0e0e2f0 <line:773:3, col:21> '_Bool' '='
|   | |-DeclRefExpr 0x5612e0e0e298 <col:3> '_Bool' lvalue Var 0x5612e0e08118 'x$flush_delayed' '_Bool'
|   | `-ImplicitCastExpr 0x5612e0e0e2d8 <col:21> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x5612e0e0e2b8 <col:21> '_Bool' lvalue Var 0x5612e0e09b20 'weak$$choice2' '_Bool'
|   |-BinaryOperator 0x5612e0e0e368 <line:774:3, col:15> 'int' '='
|   | |-DeclRefExpr 0x5612e0e0e310 <col:3> 'int' lvalue Var 0x5612e0e08198 'x$mem_tmp' 'int'
|   | `-ImplicitCastExpr 0x5612e0e0e350 <col:15> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x5612e0e0e330 <col:15> 'int' lvalue Var 0x5612e0e08080 'x' 'int'
|   |-BinaryOperator 0x5612e0e0e7a0 <line:775:3, col:162> 'int' '='
|   | |-DeclRefExpr 0x5612e0e0e388 <col:3> 'int' lvalue Var 0x5612e0e08080 'x' 'int'
|   | `-ConditionalOperator 0x5612e0e0e770 <col:7, col:162> 'int'
|   |   |-BinaryOperator 0x5612e0e0e598 <col:7, col:84> 'int' '||'
|   |   | |-BinaryOperator 0x5612e0e0e4b8 <col:7, col:46> 'int' '||'
|   |   | | |-UnaryOperator 0x5612e0e0e3e0 <col:7, col:8> 'int' prefix '!' cannot overflow
|   |   | | | `-ImplicitCastExpr 0x5612e0e0e3c8 <col:8> '_Bool' <LValueToRValue>
|   |   | | |   `-DeclRefExpr 0x5612e0e0e3a8 <col:8> '_Bool' lvalue Var 0x5612e0e08748 'x$w_buff0_used' '_Bool'
|   |   | | `-BinaryOperator 0x5612e0e0e498 <col:26, col:46> 'int' '&&'
|   |   | |   |-UnaryOperator 0x5612e0e0e430 <col:26, col:27> 'int' prefix '!' cannot overflow
|   |   | |   | `-ImplicitCastExpr 0x5612e0e0e418 <col:27> '_Bool' <LValueToRValue>
|   |   | |   |   `-DeclRefExpr 0x5612e0e0e3f8 <col:27> '_Bool' lvalue Var 0x5612e0e08378 'x$r_buff0_thd3' '_Bool'
|   |   | |   `-UnaryOperator 0x5612e0e0e480 <col:45, col:46> 'int' prefix '!' cannot overflow
|   |   | |     `-ImplicitCastExpr 0x5612e0e0e468 <col:46> '_Bool' <LValueToRValue>
|   |   | |       `-DeclRefExpr 0x5612e0e0e448 <col:46> '_Bool' lvalue Var 0x5612e0e08840 'x$w_buff1_used' '_Bool'
|   |   | `-BinaryOperator 0x5612e0e0e578 <col:64, col:84> 'int' '&&'
|   |   |   |-UnaryOperator 0x5612e0e0e510 <col:64, col:65> 'int' prefix '!' cannot overflow
|   |   |   | `-ImplicitCastExpr 0x5612e0e0e4f8 <col:65> '_Bool' <LValueToRValue>
|   |   |   |   `-DeclRefExpr 0x5612e0e0e4d8 <col:65> '_Bool' lvalue Var 0x5612e0e08378 'x$r_buff0_thd3' '_Bool'
|   |   |   `-UnaryOperator 0x5612e0e0e560 <col:83, col:84> 'int' prefix '!' cannot overflow
|   |   |     `-ImplicitCastExpr 0x5612e0e0e548 <col:84> '_Bool' <LValueToRValue>
|   |   |       `-DeclRefExpr 0x5612e0e0e528 <col:84> '_Bool' lvalue Var 0x5612e0e08558 'x$r_buff1_thd3' '_Bool'
|   |   |-ImplicitCastExpr 0x5612e0e0e758 <col:101> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x5612e0e0e5b8 <col:101> 'int' lvalue Var 0x5612e0e08080 'x' 'int'
|   |   `-ParenExpr 0x5612e0e0e738 <col:105, col:162> 'int'
|   |     `-ConditionalOperator 0x5612e0e0e708 <col:106, col:153> 'int'
|   |       |-BinaryOperator 0x5612e0e0e678 <col:106, col:124> 'int' '&&'
|   |       | |-ImplicitCastExpr 0x5612e0e0e630 <col:106> 'int' <IntegralCast>
|   |       | | `-ImplicitCastExpr 0x5612e0e0e618 <col:106> '_Bool' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x5612e0e0e5d8 <col:106> '_Bool' lvalue Var 0x5612e0e08748 'x$w_buff0_used' '_Bool'
|   |       | `-ImplicitCastExpr 0x5612e0e0e660 <col:124> 'int' <IntegralCast>
|   |       |   `-ImplicitCastExpr 0x5612e0e0e648 <col:124> '_Bool' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x5612e0e0e5f8 <col:124> '_Bool' lvalue Var 0x5612e0e08378 'x$r_buff0_thd3' '_Bool'
|   |       |-ImplicitCastExpr 0x5612e0e0e6d8 <col:141> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x5612e0e0e698 <col:141> 'int' lvalue Var 0x5612e0e086d0 'x$w_buff0' 'int'
|   |       `-ImplicitCastExpr 0x5612e0e0e6f0 <col:153> 'int' <LValueToRValue>
|   |         `-DeclRefExpr 0x5612e0e0e6b8 <col:153> 'int' lvalue Var 0x5612e0e087c8 'x$w_buff1' 'int'
|   |-BinaryOperator 0x5612e0e0ecd0 <line:776:3, col:208> 'int' '='
|   | |-DeclRefExpr 0x5612e0e0e7c0 <col:3> 'int' lvalue Var 0x5612e0e086d0 'x$w_buff0' 'int'
|   | `-ConditionalOperator 0x5612e0e0eca0 <col:15, col:208> 'int'
|   |   |-ImplicitCastExpr 0x5612e0e0ec70 <col:15> 'int' <IntegralCast>
|   |   | `-ImplicitCastExpr 0x5612e0e0ec58 <col:15> '_Bool' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x5612e0e0e7e0 <col:15> '_Bool' lvalue Var 0x5612e0e09b20 'weak$$choice2' '_Bool'
|   |   |-ImplicitCastExpr 0x5612e0e0ec88 <col:31> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x5612e0e0e800 <col:31> 'int' lvalue Var 0x5612e0e086d0 'x$w_buff0' 'int'
|   |   `-ParenExpr 0x5612e0e0ec38 <col:43, col:208> 'int'
|   |     `-ConditionalOperator 0x5612e0e0ec08 <col:44, col:207> 'int'
|   |       |-BinaryOperator 0x5612e0e0ea10 <col:44, col:121> 'int' '||'
|   |       | |-BinaryOperator 0x5612e0e0e930 <col:44, col:83> 'int' '||'
|   |       | | |-UnaryOperator 0x5612e0e0e858 <col:44, col:45> 'int' prefix '!' cannot overflow
|   |       | | | `-ImplicitCastExpr 0x5612e0e0e840 <col:45> '_Bool' <LValueToRValue>
|   |       | | |   `-DeclRefExpr 0x5612e0e0e820 <col:45> '_Bool' lvalue Var 0x5612e0e08748 'x$w_buff0_used' '_Bool'
|   |       | | `-BinaryOperator 0x5612e0e0e910 <col:63, col:83> 'int' '&&'
|   |       | |   |-UnaryOperator 0x5612e0e0e8a8 <col:63, col:64> 'int' prefix '!' cannot overflow
|   |       | |   | `-ImplicitCastExpr 0x5612e0e0e890 <col:64> '_Bool' <LValueToRValue>
|   |       | |   |   `-DeclRefExpr 0x5612e0e0e870 <col:64> '_Bool' lvalue Var 0x5612e0e08378 'x$r_buff0_thd3' '_Bool'
|   |       | |   `-UnaryOperator 0x5612e0e0e8f8 <col:82, col:83> 'int' prefix '!' cannot overflow
|   |       | |     `-ImplicitCastExpr 0x5612e0e0e8e0 <col:83> '_Bool' <LValueToRValue>
|   |       | |       `-DeclRefExpr 0x5612e0e0e8c0 <col:83> '_Bool' lvalue Var 0x5612e0e08840 'x$w_buff1_used' '_Bool'
|   |       | `-BinaryOperator 0x5612e0e0e9f0 <col:101, col:121> 'int' '&&'
|   |       |   |-UnaryOperator 0x5612e0e0e988 <col:101, col:102> 'int' prefix '!' cannot overflow
|   |       |   | `-ImplicitCastExpr 0x5612e0e0e970 <col:102> '_Bool' <LValueToRValue>
|   |       |   |   `-DeclRefExpr 0x5612e0e0e950 <col:102> '_Bool' lvalue Var 0x5612e0e08378 'x$r_buff0_thd3' '_Bool'
|   |       |   `-UnaryOperator 0x5612e0e0e9d8 <col:120, col:121> 'int' prefix '!' cannot overflow
|   |       |     `-ImplicitCastExpr 0x5612e0e0e9c0 <col:121> '_Bool' <LValueToRValue>
|   |       |       `-DeclRefExpr 0x5612e0e0e9a0 <col:121> '_Bool' lvalue Var 0x5612e0e08558 'x$r_buff1_thd3' '_Bool'
|   |       |-ImplicitCastExpr 0x5612e0e0ebf0 <col:138> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x5612e0e0ea30 <col:138> 'int' lvalue Var 0x5612e0e086d0 'x$w_buff0' 'int'
|   |       `-ParenExpr 0x5612e0e0ebd0 <col:150, col:207> 'int'
|   |         `-ConditionalOperator 0x5612e0e0eba0 <col:151, col:198> 'int'
|   |           |-BinaryOperator 0x5612e0e0eaf0 <col:151, col:169> 'int' '&&'
|   |           | |-ImplicitCastExpr 0x5612e0e0eaa8 <col:151> 'int' <IntegralCast>
|   |           | | `-ImplicitCastExpr 0x5612e0e0ea90 <col:151> '_Bool' <LValueToRValue>
|   |           | |   `-DeclRefExpr 0x5612e0e0ea50 <col:151> '_Bool' lvalue Var 0x5612e0e08748 'x$w_buff0_used' '_Bool'
|   |           | `-ImplicitCastExpr 0x5612e0e0ead8 <col:169> 'int' <IntegralCast>
|   |           |   `-ImplicitCastExpr 0x5612e0e0eac0 <col:169> '_Bool' <LValueToRValue>
|   |           |     `-DeclRefExpr 0x5612e0e0ea70 <col:169> '_Bool' lvalue Var 0x5612e0e08378 'x$r_buff0_thd3' '_Bool'
|   |           |-ImplicitCastExpr 0x5612e0e0eb70 <col:186> 'int' <LValueToRValue>
|   |           | `-DeclRefExpr 0x5612e0e0eb10 <col:186> 'int' lvalue Var 0x5612e0e086d0 'x$w_buff0' 'int'
|   |           `-ImplicitCastExpr 0x5612e0e0eb88 <col:198> 'int' <LValueToRValue>
|   |             `-DeclRefExpr 0x5612e0e0eb30 <col:198> 'int' lvalue Var 0x5612e0e086d0 'x$w_buff0' 'int'
|   |-BinaryOperator 0x5612e0e0f1e0 <line:777:3, col:208> 'int' '='
|   | |-DeclRefExpr 0x5612e0e0ecf0 <col:3> 'int' lvalue Var 0x5612e0e087c8 'x$w_buff1' 'int'
|   | `-ConditionalOperator 0x5612e0e0f1b0 <col:15, col:208> 'int'
|   |   |-ImplicitCastExpr 0x5612e0e0f180 <col:15> 'int' <IntegralCast>
|   |   | `-ImplicitCastExpr 0x5612e0e0f168 <col:15> '_Bool' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x5612e0e0ed10 <col:15> '_Bool' lvalue Var 0x5612e0e09b20 'weak$$choice2' '_Bool'
|   |   |-ImplicitCastExpr 0x5612e0e0f198 <col:31> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x5612e0e0ed30 <col:31> 'int' lvalue Var 0x5612e0e087c8 'x$w_buff1' 'int'
|   |   `-ParenExpr 0x5612e0e0f148 <col:43, col:208> 'int'
|   |     `-ConditionalOperator 0x5612e0e0f118 <col:44, col:207> 'int'
|   |       |-BinaryOperator 0x5612e0e0ef40 <col:44, col:121> 'int' '||'
|   |       | |-BinaryOperator 0x5612e0e0ee60 <col:44, col:83> 'int' '||'
|   |       | | |-UnaryOperator 0x5612e0e0ed88 <col:44, col:45> 'int' prefix '!' cannot overflow
|   |       | | | `-ImplicitCastExpr 0x5612e0e0ed70 <col:45> '_Bool' <LValueToRValue>
|   |       | | |   `-DeclRefExpr 0x5612e0e0ed50 <col:45> '_Bool' lvalue Var 0x5612e0e08748 'x$w_buff0_used' '_Bool'
|   |       | | `-BinaryOperator 0x5612e0e0ee40 <col:63, col:83> 'int' '&&'
|   |       | |   |-UnaryOperator 0x5612e0e0edd8 <col:63, col:64> 'int' prefix '!' cannot overflow
|   |       | |   | `-ImplicitCastExpr 0x5612e0e0edc0 <col:64> '_Bool' <LValueToRValue>
|   |       | |   |   `-DeclRefExpr 0x5612e0e0eda0 <col:64> '_Bool' lvalue Var 0x5612e0e08378 'x$r_buff0_thd3' '_Bool'
|   |       | |   `-UnaryOperator 0x5612e0e0ee28 <col:82, col:83> 'int' prefix '!' cannot overflow
|   |       | |     `-ImplicitCastExpr 0x5612e0e0ee10 <col:83> '_Bool' <LValueToRValue>
|   |       | |       `-DeclRefExpr 0x5612e0e0edf0 <col:83> '_Bool' lvalue Var 0x5612e0e08840 'x$w_buff1_used' '_Bool'
|   |       | `-BinaryOperator 0x5612e0e0ef20 <col:101, col:121> 'int' '&&'
|   |       |   |-UnaryOperator 0x5612e0e0eeb8 <col:101, col:102> 'int' prefix '!' cannot overflow
|   |       |   | `-ImplicitCastExpr 0x5612e0e0eea0 <col:102> '_Bool' <LValueToRValue>
|   |       |   |   `-DeclRefExpr 0x5612e0e0ee80 <col:102> '_Bool' lvalue Var 0x5612e0e08378 'x$r_buff0_thd3' '_Bool'
|   |       |   `-UnaryOperator 0x5612e0e0ef08 <col:120, col:121> 'int' prefix '!' cannot overflow
|   |       |     `-ImplicitCastExpr 0x5612e0e0eef0 <col:121> '_Bool' <LValueToRValue>
|   |       |       `-DeclRefExpr 0x5612e0e0eed0 <col:121> '_Bool' lvalue Var 0x5612e0e08558 'x$r_buff1_thd3' '_Bool'
|   |       |-ImplicitCastExpr 0x5612e0e0f100 <col:138> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x5612e0e0ef60 <col:138> 'int' lvalue Var 0x5612e0e087c8 'x$w_buff1' 'int'
|   |       `-ParenExpr 0x5612e0e0f0e0 <col:150, col:207> 'int'
|   |         `-ConditionalOperator 0x5612e0e0f0b0 <col:151, col:198> 'int'
|   |           |-BinaryOperator 0x5612e0e0f020 <col:151, col:169> 'int' '&&'
|   |           | |-ImplicitCastExpr 0x5612e0e0efd8 <col:151> 'int' <IntegralCast>
|   |           | | `-ImplicitCastExpr 0x5612e0e0efc0 <col:151> '_Bool' <LValueToRValue>
|   |           | |   `-DeclRefExpr 0x5612e0e0ef80 <col:151> '_Bool' lvalue Var 0x5612e0e08748 'x$w_buff0_used' '_Bool'
|   |           | `-ImplicitCastExpr 0x5612e0e0f008 <col:169> 'int' <IntegralCast>
|   |           |   `-ImplicitCastExpr 0x5612e0e0eff0 <col:169> '_Bool' <LValueToRValue>
|   |           |     `-DeclRefExpr 0x5612e0e0efa0 <col:169> '_Bool' lvalue Var 0x5612e0e08378 'x$r_buff0_thd3' '_Bool'
|   |           |-ImplicitCastExpr 0x5612e0e0f080 <col:186> 'int' <LValueToRValue>
|   |           | `-DeclRefExpr 0x5612e0e0f040 <col:186> 'int' lvalue Var 0x5612e0e087c8 'x$w_buff1' 'int'
|   |           `-ImplicitCastExpr 0x5612e0e0f098 <col:198> 'int' <LValueToRValue>
|   |             `-DeclRefExpr 0x5612e0e0f060 <col:198> 'int' lvalue Var 0x5612e0e087c8 'x$w_buff1' 'int'
|   |-BinaryOperator 0x5612e0e0f788 <line:778:3, col:227> '_Bool' '='
|   | |-DeclRefExpr 0x5612e0e0f200 <col:3> '_Bool' lvalue Var 0x5612e0e08748 'x$w_buff0_used' '_Bool'
|   | `-ImplicitCastExpr 0x5612e0e0f770 <col:20, col:227> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x5612e0e0f740 <col:20, col:227> 'int'
|   |     |-ImplicitCastExpr 0x5612e0e0f6f8 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x5612e0e0f6e0 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x5612e0e0f220 <col:20> '_Bool' lvalue Var 0x5612e0e09b20 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x5612e0e0f728 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x5612e0e0f710 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x5612e0e0f240 <col:36> '_Bool' lvalue Var 0x5612e0e08748 'x$w_buff0_used' '_Bool'
|   |     `-ParenExpr 0x5612e0e0f6c0 <col:53, col:227> 'int'
|   |       `-ConditionalOperator 0x5612e0e0f690 <col:54, col:226> 'int'
|   |         |-BinaryOperator 0x5612e0e0f450 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x5612e0e0f370 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x5612e0e0f298 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x5612e0e0f280 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x5612e0e0f260 <col:55> '_Bool' lvalue Var 0x5612e0e08748 'x$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x5612e0e0f350 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x5612e0e0f2e8 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x5612e0e0f2d0 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x5612e0e0f2b0 <col:74> '_Bool' lvalue Var 0x5612e0e08378 'x$r_buff0_thd3' '_Bool'
|   |         | |   `-UnaryOperator 0x5612e0e0f338 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x5612e0e0f320 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x5612e0e0f300 <col:93> '_Bool' lvalue Var 0x5612e0e08840 'x$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x5612e0e0f430 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x5612e0e0f3c8 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x5612e0e0f3b0 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x5612e0e0f390 <col:112> '_Bool' lvalue Var 0x5612e0e08378 'x$r_buff0_thd3' '_Bool'
|   |         |   `-UnaryOperator 0x5612e0e0f418 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x5612e0e0f400 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x5612e0e0f3e0 <col:131> '_Bool' lvalue Var 0x5612e0e08558 'x$r_buff1_thd3' '_Bool'
|   |         |-ImplicitCastExpr 0x5612e0e0f678 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x5612e0e0f660 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x5612e0e0f470 <col:148> '_Bool' lvalue Var 0x5612e0e08748 'x$w_buff0_used' '_Bool'
|   |         `-ParenExpr 0x5612e0e0f640 <col:165, col:226> 'int'
|   |           `-ConditionalOperator 0x5612e0e0f610 <col:166, col:212> 'int'
|   |             |-BinaryOperator 0x5612e0e0f530 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x5612e0e0f4e8 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x5612e0e0f4d0 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x5612e0e0f490 <col:166> '_Bool' lvalue Var 0x5612e0e08748 'x$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x5612e0e0f518 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x5612e0e0f500 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x5612e0e0f4b0 <col:184> '_Bool' lvalue Var 0x5612e0e08378 'x$r_buff0_thd3' '_Bool'
|   |             |-ImplicitCastExpr 0x5612e0e0f5c8 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x5612e0e0f580 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x5612e0e0f550 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x5612e0e0f5f8 <col:212> 'int' <IntegralCast>
|   |               `-ImplicitCastExpr 0x5612e0e0f5e0 <col:212> '_Bool' <LValueToRValue>
|   |                 `-DeclRefExpr 0x5612e0e0f5a8 <col:212> '_Bool' lvalue Var 0x5612e0e08748 'x$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x5612e0e0fd60 <line:779:3, col:221> '_Bool' '='
|   | |-DeclRefExpr 0x5612e0e0f7a8 <col:3> '_Bool' lvalue Var 0x5612e0e08840 'x$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x5612e0e0fd48 <col:20, col:221> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x5612e0e0fd18 <col:20, col:221> 'int'
|   |     |-ImplicitCastExpr 0x5612e0e0fcd0 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x5612e0e0fcb8 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x5612e0e0f7c8 <col:20> '_Bool' lvalue Var 0x5612e0e09b20 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x5612e0e0fd00 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x5612e0e0fce8 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x5612e0e0f7e8 <col:36> '_Bool' lvalue Var 0x5612e0e08840 'x$w_buff1_used' '_Bool'
|   |     `-ParenExpr 0x5612e0e0fc98 <col:53, col:221> 'int'
|   |       `-ConditionalOperator 0x5612e0e0fc68 <col:54, col:220> 'int'
|   |         |-BinaryOperator 0x5612e0e0f9f8 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x5612e0e0f918 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x5612e0e0f840 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x5612e0e0f828 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x5612e0e0f808 <col:55> '_Bool' lvalue Var 0x5612e0e08748 'x$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x5612e0e0f8f8 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x5612e0e0f890 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x5612e0e0f878 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x5612e0e0f858 <col:74> '_Bool' lvalue Var 0x5612e0e08378 'x$r_buff0_thd3' '_Bool'
|   |         | |   `-UnaryOperator 0x5612e0e0f8e0 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x5612e0e0f8c8 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x5612e0e0f8a8 <col:93> '_Bool' lvalue Var 0x5612e0e08840 'x$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x5612e0e0f9d8 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x5612e0e0f970 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x5612e0e0f958 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x5612e0e0f938 <col:112> '_Bool' lvalue Var 0x5612e0e08378 'x$r_buff0_thd3' '_Bool'
|   |         |   `-UnaryOperator 0x5612e0e0f9c0 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x5612e0e0f9a8 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x5612e0e0f988 <col:131> '_Bool' lvalue Var 0x5612e0e08558 'x$r_buff1_thd3' '_Bool'
|   |         |-ImplicitCastExpr 0x5612e0e0fc50 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x5612e0e0fc38 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x5612e0e0fa18 <col:148> '_Bool' lvalue Var 0x5612e0e08840 'x$w_buff1_used' '_Bool'
|   |         `-ParenExpr 0x5612e0e0fc18 <col:165, col:220> 'int'
|   |           `-ConditionalOperator 0x5612e0e0fbe8 <col:166, col:219> 'int'
|   |             |-BinaryOperator 0x5612e0e0fad8 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x5612e0e0fa90 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x5612e0e0fa78 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x5612e0e0fa38 <col:166> '_Bool' lvalue Var 0x5612e0e08748 'x$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x5612e0e0fac0 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x5612e0e0faa8 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x5612e0e0fa58 <col:184> '_Bool' lvalue Var 0x5612e0e08378 'x$r_buff0_thd3' '_Bool'
|   |             |-ImplicitCastExpr 0x5612e0e0fbb8 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x5612e0e0fb28 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x5612e0e0faf8 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x5612e0e0fbd0 <col:212, col:219> 'int' <IntegralCast>
|   |               `-CStyleCastExpr 0x5612e0e0fb90 <col:212, col:219> '_Bool' <IntegralToBoolean>
|   |                 `-IntegerLiteral 0x5612e0e0fb50 <col:219> 'int' 0
|   |-BinaryOperator 0x5612e0e10308 <line:780:3, col:227> '_Bool' '='
|   | |-DeclRefExpr 0x5612e0e0fd80 <col:3> '_Bool' lvalue Var 0x5612e0e08378 'x$r_buff0_thd3' '_Bool'
|   | `-ImplicitCastExpr 0x5612e0e102f0 <col:20, col:227> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x5612e0e102c0 <col:20, col:227> 'int'
|   |     |-ImplicitCastExpr 0x5612e0e10278 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x5612e0e10260 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x5612e0e0fda0 <col:20> '_Bool' lvalue Var 0x5612e0e09b20 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x5612e0e102a8 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x5612e0e10290 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x5612e0e0fdc0 <col:36> '_Bool' lvalue Var 0x5612e0e08378 'x$r_buff0_thd3' '_Bool'
|   |     `-ParenExpr 0x5612e0e10240 <col:53, col:227> 'int'
|   |       `-ConditionalOperator 0x5612e0e10210 <col:54, col:226> 'int'
|   |         |-BinaryOperator 0x5612e0e0ffd0 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x5612e0e0fef0 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x5612e0e0fe18 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x5612e0e0fe00 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x5612e0e0fde0 <col:55> '_Bool' lvalue Var 0x5612e0e08748 'x$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x5612e0e0fed0 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x5612e0e0fe68 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x5612e0e0fe50 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x5612e0e0fe30 <col:74> '_Bool' lvalue Var 0x5612e0e08378 'x$r_buff0_thd3' '_Bool'
|   |         | |   `-UnaryOperator 0x5612e0e0feb8 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x5612e0e0fea0 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x5612e0e0fe80 <col:93> '_Bool' lvalue Var 0x5612e0e08840 'x$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x5612e0e0ffb0 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x5612e0e0ff48 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x5612e0e0ff30 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x5612e0e0ff10 <col:112> '_Bool' lvalue Var 0x5612e0e08378 'x$r_buff0_thd3' '_Bool'
|   |         |   `-UnaryOperator 0x5612e0e0ff98 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x5612e0e0ff80 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x5612e0e0ff60 <col:131> '_Bool' lvalue Var 0x5612e0e08558 'x$r_buff1_thd3' '_Bool'
|   |         |-ImplicitCastExpr 0x5612e0e101f8 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x5612e0e101e0 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x5612e0e0fff0 <col:148> '_Bool' lvalue Var 0x5612e0e08378 'x$r_buff0_thd3' '_Bool'
|   |         `-ParenExpr 0x5612e0e101c0 <col:165, col:226> 'int'
|   |           `-ConditionalOperator 0x5612e0e10190 <col:166, col:212> 'int'
|   |             |-BinaryOperator 0x5612e0e100b0 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x5612e0e10068 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x5612e0e10050 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x5612e0e10010 <col:166> '_Bool' lvalue Var 0x5612e0e08748 'x$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x5612e0e10098 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x5612e0e10080 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x5612e0e10030 <col:184> '_Bool' lvalue Var 0x5612e0e08378 'x$r_buff0_thd3' '_Bool'
|   |             |-ImplicitCastExpr 0x5612e0e10148 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x5612e0e10100 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x5612e0e100d0 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x5612e0e10178 <col:212> 'int' <IntegralCast>
|   |               `-ImplicitCastExpr 0x5612e0e10160 <col:212> '_Bool' <LValueToRValue>
|   |                 `-DeclRefExpr 0x5612e0e10128 <col:212> '_Bool' lvalue Var 0x5612e0e08378 'x$r_buff0_thd3' '_Bool'
|   |-BinaryOperator 0x5612e0e108d0 <line:781:3, col:221> '_Bool' '='
|   | |-DeclRefExpr 0x5612e0e10328 <col:3> '_Bool' lvalue Var 0x5612e0e08558 'x$r_buff1_thd3' '_Bool'
|   | `-ImplicitCastExpr 0x5612e0e108b8 <col:20, col:221> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x5612e0e10888 <col:20, col:221> 'int'
|   |     |-ImplicitCastExpr 0x5612e0e10840 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x5612e0e10828 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x5612e0e10348 <col:20> '_Bool' lvalue Var 0x5612e0e09b20 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x5612e0e10870 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x5612e0e10858 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x5612e0e10368 <col:36> '_Bool' lvalue Var 0x5612e0e08558 'x$r_buff1_thd3' '_Bool'
|   |     `-ParenExpr 0x5612e0e10808 <col:53, col:221> 'int'
|   |       `-ConditionalOperator 0x5612e0e107d8 <col:54, col:220> 'int'
|   |         |-BinaryOperator 0x5612e0e10578 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x5612e0e10498 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x5612e0e103c0 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x5612e0e103a8 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x5612e0e10388 <col:55> '_Bool' lvalue Var 0x5612e0e08748 'x$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x5612e0e10478 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x5612e0e10410 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x5612e0e103f8 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x5612e0e103d8 <col:74> '_Bool' lvalue Var 0x5612e0e08378 'x$r_buff0_thd3' '_Bool'
|   |         | |   `-UnaryOperator 0x5612e0e10460 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x5612e0e10448 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x5612e0e10428 <col:93> '_Bool' lvalue Var 0x5612e0e08840 'x$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x5612e0e10558 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x5612e0e104f0 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x5612e0e104d8 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x5612e0e104b8 <col:112> '_Bool' lvalue Var 0x5612e0e08378 'x$r_buff0_thd3' '_Bool'
|   |         |   `-UnaryOperator 0x5612e0e10540 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x5612e0e10528 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x5612e0e10508 <col:131> '_Bool' lvalue Var 0x5612e0e08558 'x$r_buff1_thd3' '_Bool'
|   |         |-ImplicitCastExpr 0x5612e0e107c0 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x5612e0e107a8 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x5612e0e10598 <col:148> '_Bool' lvalue Var 0x5612e0e08558 'x$r_buff1_thd3' '_Bool'
|   |         `-ParenExpr 0x5612e0e10788 <col:165, col:220> 'int'
|   |           `-ConditionalOperator 0x5612e0e10758 <col:166, col:219> 'int'
|   |             |-BinaryOperator 0x5612e0e10658 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x5612e0e10610 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x5612e0e105f8 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x5612e0e105b8 <col:166> '_Bool' lvalue Var 0x5612e0e08748 'x$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x5612e0e10640 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x5612e0e10628 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x5612e0e105d8 <col:184> '_Bool' lvalue Var 0x5612e0e08378 'x$r_buff0_thd3' '_Bool'
|   |             |-ImplicitCastExpr 0x5612e0e10728 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x5612e0e106a8 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x5612e0e10678 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x5612e0e10740 <col:212, col:219> 'int' <IntegralCast>
|   |               `-CStyleCastExpr 0x5612e0e10700 <col:212, col:219> '_Bool' <IntegralToBoolean>
|   |                 `-IntegerLiteral 0x5612e0e106d0 <col:219> 'int' 0
|   |-BinaryOperator 0x5612e0e10968 <line:782:3, col:45> '_Bool' '='
|   | |-DeclRefExpr 0x5612e0e108f0 <col:3> '_Bool' lvalue Var 0x5612e0e07b00 '__unbuffered_p2_EAX$read_delayed' '_Bool'
|   | `-CStyleCastExpr 0x5612e0e10940 <col:38, col:45> '_Bool' <IntegralToBoolean>
|   |   `-IntegerLiteral 0x5612e0e10910 <col:45> 'int' 1
|   |-BinaryOperator 0x5612e0e109e0 <line:783:3, col:43> 'int *' '='
|   | |-DeclRefExpr 0x5612e0e10988 <col:3> 'int *' lvalue Var 0x5612e0e07b80 '__unbuffered_p2_EAX$read_delayed_var' 'int *'
|   | `-UnaryOperator 0x5612e0e109c8 <col:42, col:43> 'int *' prefix '&' cannot overflow
|   |   `-DeclRefExpr 0x5612e0e109a8 <col:43> 'int' lvalue Var 0x5612e0e08080 'x' 'int'
|   |-BinaryOperator 0x5612e0e10a58 <line:784:3, col:25> 'int' '='
|   | |-DeclRefExpr 0x5612e0e10a00 <col:3> 'int' lvalue Var 0x5612e0e07560 '__unbuffered_p2_EAX' 'int'
|   | `-ImplicitCastExpr 0x5612e0e10a40 <col:25> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x5612e0e10a20 <col:25> 'int' lvalue Var 0x5612e0e08080 'x' 'int'
|   |-BinaryOperator 0x5612e0e10bc0 <line:785:3, col:37> 'int' '='
|   | |-DeclRefExpr 0x5612e0e10a78 <col:3> 'int' lvalue Var 0x5612e0e08080 'x' 'int'
|   | `-ConditionalOperator 0x5612e0e10b90 <col:7, col:37> 'int'
|   |   |-ImplicitCastExpr 0x5612e0e10b10 <col:7> 'int' <IntegralCast>
|   |   | `-ImplicitCastExpr 0x5612e0e10af8 <col:7> '_Bool' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x5612e0e10a98 <col:7> '_Bool' lvalue Var 0x5612e0e08118 'x$flush_delayed' '_Bool'
|   |   |-ImplicitCastExpr 0x5612e0e10b28 <col:25> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x5612e0e10ab8 <col:25> 'int' lvalue Var 0x5612e0e08198 'x$mem_tmp' 'int'
|   |   `-ImplicitCastExpr 0x5612e0e10b40 <col:37> 'int' <LValueToRValue>
|   |     `-DeclRefExpr 0x5612e0e10ad8 <col:37> 'int' lvalue Var 0x5612e0e08080 'x' 'int'
|   |-BinaryOperator 0x5612e0e10c58 <line:786:3, col:28> '_Bool' '='
|   | |-DeclRefExpr 0x5612e0e10be0 <col:3> '_Bool' lvalue Var 0x5612e0e08118 'x$flush_delayed' '_Bool'
|   | `-CStyleCastExpr 0x5612e0e10c30 <col:21, col:28> '_Bool' <IntegralToBoolean>
|   |   `-IntegerLiteral 0x5612e0e10c00 <col:28> 'int' 0
|   |-CallExpr 0x5612e0e10cb0 <line:787:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x5612e0e10c98 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5612e0e10c78 <col:3> 'void ()' Function 0x5612e0dae060 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x5612e0e10d08 <line:788:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x5612e0e10cf0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5612e0e10cd0 <col:3> 'void ()' Function 0x5612e0dadfa0 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x5612e0e10d80 <line:789:3, col:25> 'int' '='
|   | |-DeclRefExpr 0x5612e0e10d28 <col:3> 'int' lvalue Var 0x5612e0e07e70 '__unbuffered_p2_EBX' 'int'
|   | `-ImplicitCastExpr 0x5612e0e10d68 <col:25> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x5612e0e10d48 <col:25> 'int' lvalue Var 0x5612e0e08940 'y' 'int'
|   |-CallExpr 0x5612e0e10dd8 <line:790:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x5612e0e10dc0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5612e0e10da0 <col:3> 'void ()' Function 0x5612e0dae060 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x5612e0e10e30 <line:791:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x5612e0e10e18 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5612e0e10df8 <col:3> 'void ()' Function 0x5612e0dadfa0 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x5612e0e11118 <line:792:3, col:103> 'int' '='
|   | |-DeclRefExpr 0x5612e0e10e50 <col:3> 'int' lvalue Var 0x5612e0e08080 'x' 'int'
|   | `-ConditionalOperator 0x5612e0e110e8 <col:7, col:103> 'int'
|   |   |-BinaryOperator 0x5612e0e10f10 <col:7, col:25> 'int' '&&'
|   |   | |-ImplicitCastExpr 0x5612e0e10ec8 <col:7> 'int' <IntegralCast>
|   |   | | `-ImplicitCastExpr 0x5612e0e10eb0 <col:7> '_Bool' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x5612e0e10e70 <col:7> '_Bool' lvalue Var 0x5612e0e08748 'x$w_buff0_used' '_Bool'
|   |   | `-ImplicitCastExpr 0x5612e0e10ef8 <col:25> 'int' <IntegralCast>
|   |   |   `-ImplicitCastExpr 0x5612e0e10ee0 <col:25> '_Bool' <LValueToRValue>
|   |   |     `-DeclRefExpr 0x5612e0e10e90 <col:25> '_Bool' lvalue Var 0x5612e0e08378 'x$r_buff0_thd3' '_Bool'
|   |   |-ImplicitCastExpr 0x5612e0e110d0 <col:42> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x5612e0e10f30 <col:42> 'int' lvalue Var 0x5612e0e086d0 'x$w_buff0' 'int'
|   |   `-ParenExpr 0x5612e0e110b0 <col:54, col:103> 'int'
|   |     `-ConditionalOperator 0x5612e0e11080 <col:55, col:102> 'int'
|   |       |-BinaryOperator 0x5612e0e10ff0 <col:55, col:73> 'int' '&&'
|   |       | |-ImplicitCastExpr 0x5612e0e10fa8 <col:55> 'int' <IntegralCast>
|   |       | | `-ImplicitCastExpr 0x5612e0e10f90 <col:55> '_Bool' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x5612e0e10f50 <col:55> '_Bool' lvalue Var 0x5612e0e08840 'x$w_buff1_used' '_Bool'
|   |       | `-ImplicitCastExpr 0x5612e0e10fd8 <col:73> 'int' <IntegralCast>
|   |       |   `-ImplicitCastExpr 0x5612e0e10fc0 <col:73> '_Bool' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x5612e0e10f70 <col:73> '_Bool' lvalue Var 0x5612e0e08558 'x$r_buff1_thd3' '_Bool'
|   |       |-ImplicitCastExpr 0x5612e0e11050 <col:90> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x5612e0e11010 <col:90> 'int' lvalue Var 0x5612e0e087c8 'x$w_buff1' 'int'
|   |       `-ImplicitCastExpr 0x5612e0e11068 <col:102> 'int' <LValueToRValue>
|   |         `-DeclRefExpr 0x5612e0e11030 <col:102> 'int' lvalue Var 0x5612e0e08080 'x' 'int'
|   |-BinaryOperator 0x5612e0e11320 <line:793:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x5612e0e11138 <col:3> '_Bool' lvalue Var 0x5612e0e08748 'x$w_buff0_used' '_Bool'
|   | `-ImplicitCastExpr 0x5612e0e11308 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x5612e0e112d8 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x5612e0e111f8 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x5612e0e111b0 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x5612e0e11198 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x5612e0e11158 <col:20> '_Bool' lvalue Var 0x5612e0e08748 'x$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x5612e0e111e0 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x5612e0e111c8 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x5612e0e11178 <col:38> '_Bool' lvalue Var 0x5612e0e08378 'x$r_buff0_thd3' '_Bool'
|   |     |-ImplicitCastExpr 0x5612e0e11290 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x5612e0e11248 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x5612e0e11218 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x5612e0e112c0 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x5612e0e112a8 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x5612e0e11270 <col:66> '_Bool' lvalue Var 0x5612e0e08748 'x$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x5612e0e11608 <line:794:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x5612e0e11340 <col:3> '_Bool' lvalue Var 0x5612e0e08840 'x$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x5612e0e115f0 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x5612e0e115c0 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x5612e0e114e0 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x5612e0e11400 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x5612e0e113b8 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x5612e0e113a0 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x5612e0e11360 <col:20> '_Bool' lvalue Var 0x5612e0e08748 'x$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x5612e0e113e8 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x5612e0e113d0 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x5612e0e11380 <col:38> '_Bool' lvalue Var 0x5612e0e08378 'x$r_buff0_thd3' '_Bool'
|   |     | `-BinaryOperator 0x5612e0e114c0 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x5612e0e11478 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x5612e0e11460 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x5612e0e11420 <col:56> '_Bool' lvalue Var 0x5612e0e08840 'x$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x5612e0e114a8 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x5612e0e11490 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x5612e0e11440 <col:74> '_Bool' lvalue Var 0x5612e0e08558 'x$r_buff1_thd3' '_Bool'
|   |     |-ImplicitCastExpr 0x5612e0e11578 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x5612e0e11530 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x5612e0e11500 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x5612e0e115a8 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x5612e0e11590 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x5612e0e11558 <col:102> '_Bool' lvalue Var 0x5612e0e08840 'x$w_buff1_used' '_Bool'
|   |-BinaryOperator 0x5612e0e11810 <line:795:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x5612e0e11628 <col:3> '_Bool' lvalue Var 0x5612e0e08378 'x$r_buff0_thd3' '_Bool'
|   | `-ImplicitCastExpr 0x5612e0e117f8 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x5612e0e117c8 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x5612e0e116e8 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x5612e0e116a0 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x5612e0e11688 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x5612e0e11648 <col:20> '_Bool' lvalue Var 0x5612e0e08748 'x$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x5612e0e116d0 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x5612e0e116b8 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x5612e0e11668 <col:38> '_Bool' lvalue Var 0x5612e0e08378 'x$r_buff0_thd3' '_Bool'
|   |     |-ImplicitCastExpr 0x5612e0e11780 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x5612e0e11738 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x5612e0e11708 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x5612e0e117b0 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x5612e0e11798 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x5612e0e11760 <col:66> '_Bool' lvalue Var 0x5612e0e08378 'x$r_buff0_thd3' '_Bool'
|   |-BinaryOperator 0x5612e0e11af8 <line:796:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x5612e0e11830 <col:3> '_Bool' lvalue Var 0x5612e0e08558 'x$r_buff1_thd3' '_Bool'
|   | `-ImplicitCastExpr 0x5612e0e11ae0 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x5612e0e11ab0 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x5612e0e119d0 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x5612e0e118f0 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x5612e0e118a8 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x5612e0e11890 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x5612e0e11850 <col:20> '_Bool' lvalue Var 0x5612e0e08748 'x$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x5612e0e118d8 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x5612e0e118c0 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x5612e0e11870 <col:38> '_Bool' lvalue Var 0x5612e0e08378 'x$r_buff0_thd3' '_Bool'
|   |     | `-BinaryOperator 0x5612e0e119b0 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x5612e0e11968 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x5612e0e11950 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x5612e0e11910 <col:56> '_Bool' lvalue Var 0x5612e0e08840 'x$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x5612e0e11998 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x5612e0e11980 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x5612e0e11930 <col:74> '_Bool' lvalue Var 0x5612e0e08558 'x$r_buff1_thd3' '_Bool'
|   |     |-ImplicitCastExpr 0x5612e0e11a68 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x5612e0e11a20 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x5612e0e119f0 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x5612e0e11a98 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x5612e0e11a80 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x5612e0e11a48 <col:102> '_Bool' lvalue Var 0x5612e0e08558 'x$r_buff1_thd3' '_Bool'
|   |-CallExpr 0x5612e0e11b50 <line:797:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x5612e0e11b38 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5612e0e11b18 <col:3> 'void ()' Function 0x5612e0dae060 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x5612e0e11bb8 <line:798:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x5612e0e11ba0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5612e0e11b70 <col:3> 'void ()' Function 0x5612e0dadfa0 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x5612e0e11c70 <line:799:3, col:41> 'int' '='
|   | |-DeclRefExpr 0x5612e0e11bd8 <col:3> 'int' lvalue Var 0x5612e0e07320 '__unbuffered_cnt' 'int'
|   | `-BinaryOperator 0x5612e0e11c50 <col:22, col:41> 'int' '+'
|   |   |-ImplicitCastExpr 0x5612e0e11c38 <col:22> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x5612e0e11bf8 <col:22> 'int' lvalue Var 0x5612e0e07320 '__unbuffered_cnt' 'int'
|   |   `-IntegerLiteral 0x5612e0e11c18 <col:41> 'int' 1
|   |-CallExpr 0x5612e0e11cc8 <line:800:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x5612e0e11cb0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5612e0e11c90 <col:3> 'void ()' Function 0x5612e0dae060 '__VERIFIER_atomic_end' 'void ()'
|   `-ReturnStmt 0x5612e0e11d40 <line:801:3, col:36>
|     `-CallExpr 0x5612e0e11d20 <col:10, col:36> 'void *'
|       `-ImplicitCastExpr 0x5612e0e11d08 <col:10> 'void *(*)(void)' <FunctionToPointerDecay>
|         `-DeclRefExpr 0x5612e0e11ce8 <col:10> 'void *(void)' Function 0x5612e0dadab8 '__VERIFIER_nondet_pointer' 'void *(void)'
|-FunctionDecl 0x5612e0e11e80 prev 0x5612e0e07068 <line:803:1, line:805:1> line:803:6 fence 'void ()'
| `-CompoundStmt 0x5612e0e11f20 <line:804:1, line:805:1>
|-FunctionDecl 0x5612e0e11f50 prev 0x5612e0e07128 <line:806:1, line:808:1> line:806:6 isync 'void ()'
| `-CompoundStmt 0x5612e0e11ff0 <line:807:1, line:808:1>
|-FunctionDecl 0x5612e0e12020 prev 0x5612e0e071e8 <line:809:1, line:811:1> line:809:6 lwfence 'void ()'
| `-CompoundStmt 0x5612e0e120c0 <line:810:1, line:811:1>
`-FunctionDecl 0x5612e0e12128 <line:812:1, line:838:1> line:812:5 main 'int ()'
  `-CompoundStmt 0x5612e0e14080 <line:813:1, line:838:1>
    |-DeclStmt 0x5612e0e12240 <line:814:3, col:18>
    | `-VarDecl 0x5612e0e121d8 <col:3, col:13> col:13 used t2466 'pthread_t':'unsigned long'
    |-CallExpr 0x5612e0e12448 <line:815:3, col:54> 'int'
    | |-ImplicitCastExpr 0x5612e0e12430 <col:3> 'int (*)(pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x5612e0e12258 <col:3> 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' Function 0x5612e0dee5b8 'pthread_create' 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)'
    | |-UnaryOperator 0x5612e0e12298 <col:18, col:19> 'pthread_t *' prefix '&' cannot overflow
    | | `-DeclRefExpr 0x5612e0e12278 <col:19> 'pthread_t':'unsigned long' lvalue Var 0x5612e0e121d8 't2466' 'pthread_t':'unsigned long'
    | |-ImplicitCastExpr 0x5612e0e12488 <col:26, col:36> 'const pthread_attr_t *' <NullToPointer>
    | | `-ParenExpr 0x5612e0e12310 <col:26, col:36> 'void *'
    | |   `-CStyleCastExpr 0x5612e0e122e8 <col:27, col:35> 'void *' <NullToPointer>
    | |     `-IntegerLiteral 0x5612e0e122b0 <col:35> 'int' 0
    | |-ImplicitCastExpr 0x5612e0e124a0 <col:39> 'void *(*)(void *)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x5612e0e12330 <col:39> 'void *(void *)' Function 0x5612e0e09c38 'P0' 'void *(void *)'
    | `-ParenExpr 0x5612e0e123b0 <col:43, col:53> 'void *'
    |   `-CStyleCastExpr 0x5612e0e12388 <col:44, col:52> 'void *' <NullToPointer>
    |     `-IntegerLiteral 0x5612e0e12350 <col:52> 'int' 0
    |-DeclStmt 0x5612e0e12530 <line:816:3, col:18>
    | `-VarDecl 0x5612e0e124c8 <col:3, col:13> col:13 used t2467 'pthread_t':'unsigned long'
    |-CallExpr 0x5612e0e126d8 <line:817:3, col:54> 'int'
    | |-ImplicitCastExpr 0x5612e0e126c0 <col:3> 'int (*)(pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x5612e0e12548 <col:3> 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' Function 0x5612e0dee5b8 'pthread_create' 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)'
    | |-UnaryOperator 0x5612e0e12588 <col:18, col:19> 'pthread_t *' prefix '&' cannot overflow
    | | `-DeclRefExpr 0x5612e0e12568 <col:19> 'pthread_t':'unsigned long' lvalue Var 0x5612e0e124c8 't2467' 'pthread_t':'unsigned long'
    | |-ImplicitCastExpr 0x5612e0e12718 <col:26, col:36> 'const pthread_attr_t *' <NullToPointer>
    | | `-ParenExpr 0x5612e0e12600 <col:26, col:36> 'void *'
    | |   `-CStyleCastExpr 0x5612e0e125d8 <col:27, col:35> 'void *' <NullToPointer>
    | |     `-IntegerLiteral 0x5612e0e125a0 <col:35> 'int' 0
    | |-ImplicitCastExpr 0x5612e0e12730 <col:39> 'void *(*)(void *)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x5612e0e12620 <col:39> 'void *(void *)' Function 0x5612e0e0ce20 'P1' 'void *(void *)'
    | `-ParenExpr 0x5612e0e126a0 <col:43, col:53> 'void *'
    |   `-CStyleCastExpr 0x5612e0e12678 <col:44, col:52> 'void *' <NullToPointer>
    |     `-IntegerLiteral 0x5612e0e12640 <col:52> 'int' 0
    |-DeclStmt 0x5612e0e127c0 <line:818:3, col:18>
    | `-VarDecl 0x5612e0e12758 <col:3, col:13> col:13 used t2468 'pthread_t':'unsigned long'
    |-CallExpr 0x5612e0e12968 <line:819:3, col:54> 'int'
    | |-ImplicitCastExpr 0x5612e0e12950 <col:3> 'int (*)(pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x5612e0e127d8 <col:3> 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' Function 0x5612e0dee5b8 'pthread_create' 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)'
    | |-UnaryOperator 0x5612e0e12818 <col:18, col:19> 'pthread_t *' prefix '&' cannot overflow
    | | `-DeclRefExpr 0x5612e0e127f8 <col:19> 'pthread_t':'unsigned long' lvalue Var 0x5612e0e12758 't2468' 'pthread_t':'unsigned long'
    | |-ImplicitCastExpr 0x5612e0e129a8 <col:26, col:36> 'const pthread_attr_t *' <NullToPointer>
    | | `-ParenExpr 0x5612e0e12890 <col:26, col:36> 'void *'
    | |   `-CStyleCastExpr 0x5612e0e12868 <col:27, col:35> 'void *' <NullToPointer>
    | |     `-IntegerLiteral 0x5612e0e12830 <col:35> 'int' 0
    | |-ImplicitCastExpr 0x5612e0e129c0 <col:39> 'void *(*)(void *)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x5612e0e128b0 <col:39> 'void *(void *)' Function 0x5612e0e0e068 'P2' 'void *(void *)'
    | `-ParenExpr 0x5612e0e12930 <col:43, col:53> 'void *'
    |   `-CStyleCastExpr 0x5612e0e12908 <col:44, col:52> 'void *' <NullToPointer>
    |     `-IntegerLiteral 0x5612e0e128d0 <col:52> 'int' 0
    |-CallExpr 0x5612e0e12a10 <line:820:3, col:27> 'void'
    | `-ImplicitCastExpr 0x5612e0e129f8 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x5612e0e129d8 <col:3> 'void ()' Function 0x5612e0dadfa0 '__VERIFIER_atomic_begin' 'void ()'
    |-BinaryOperator 0x5612e0e12ae0 <line:821:3, col:41> '_Bool' '='
    | |-DeclRefExpr 0x5612e0e12a30 <col:3> '_Bool' lvalue Var 0x5612e0e07f08 'main$tmp_guard0' '_Bool'
    | `-ImplicitCastExpr 0x5612e0e12ac8 <col:21, col:41> '_Bool' <IntegralToBoolean>
    |   `-BinaryOperator 0x5612e0e12aa8 <col:21, col:41> 'int' '=='
    |     |-ImplicitCastExpr 0x5612e0e12a90 <col:21> 'int' <LValueToRValue>
    |     | `-DeclRefExpr 0x5612e0e12a50 <col:21> 'int' lvalue Var 0x5612e0e07320 '__unbuffered_cnt' 'int'
    |     `-IntegerLiteral 0x5612e0e12a70 <col:41> 'int' 3
    |-CallExpr 0x5612e0e12b38 <line:822:3, col:25> 'void'
    | `-ImplicitCastExpr 0x5612e0e12b20 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x5612e0e12b00 <col:3> 'void ()' Function 0x5612e0dae060 '__VERIFIER_atomic_end' 'void ()'
    |-CallExpr 0x5612e0e12bf8 <line:823:3, col:36> 'void'
    | |-ImplicitCastExpr 0x5612e0e12be0 <col:3> 'void (*)(int)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x5612e0e12b58 <col:3> 'void (int)' Function 0x5612e0dad940 '__VERIFIER_assume' 'void (int)'
    | `-ImplicitCastExpr 0x5612e0e12c38 <col:21> 'int' <IntegralCast>
    |   `-ImplicitCastExpr 0x5612e0e12c20 <col:21> '_Bool' <LValueToRValue>
    |     `-DeclRefExpr 0x5612e0e12b78 <col:21> '_Bool' lvalue Var 0x5612e0e07f08 'main$tmp_guard0' '_Bool'
    |-CallExpr 0x5612e0e12c88 <line:824:3, col:27> 'void'
    | `-ImplicitCastExpr 0x5612e0e12c70 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x5612e0e12c50 <col:3> 'void ()' Function 0x5612e0dadfa0 '__VERIFIER_atomic_begin' 'void ()'
    |-BinaryOperator 0x5612e0e12f70 <line:825:3, col:103> 'int' '='
    | |-DeclRefExpr 0x5612e0e12ca8 <col:3> 'int' lvalue Var 0x5612e0e08080 'x' 'int'
    | `-ConditionalOperator 0x5612e0e12f40 <col:7, col:103> 'int'
    |   |-BinaryOperator 0x5612e0e12d68 <col:7, col:25> 'int' '&&'
    |   | |-ImplicitCastExpr 0x5612e0e12d20 <col:7> 'int' <IntegralCast>
    |   | | `-ImplicitCastExpr 0x5612e0e12d08 <col:7> '_Bool' <LValueToRValue>
    |   | |   `-DeclRefExpr 0x5612e0e12cc8 <col:7> '_Bool' lvalue Var 0x5612e0e08748 'x$w_buff0_used' '_Bool'
    |   | `-ImplicitCastExpr 0x5612e0e12d50 <col:25> 'int' <IntegralCast>
    |   |   `-ImplicitCastExpr 0x5612e0e12d38 <col:25> '_Bool' <LValueToRValue>
    |   |     `-DeclRefExpr 0x5612e0e12ce8 <col:25> '_Bool' lvalue Var 0x5612e0e08210 'x$r_buff0_thd0' '_Bool'
    |   |-ImplicitCastExpr 0x5612e0e12f28 <col:42> 'int' <LValueToRValue>
    |   | `-DeclRefExpr 0x5612e0e12d88 <col:42> 'int' lvalue Var 0x5612e0e086d0 'x$w_buff0' 'int'
    |   `-ParenExpr 0x5612e0e12f08 <col:54, col:103> 'int'
    |     `-ConditionalOperator 0x5612e0e12ed8 <col:55, col:102> 'int'
    |       |-BinaryOperator 0x5612e0e12e48 <col:55, col:73> 'int' '&&'
    |       | |-ImplicitCastExpr 0x5612e0e12e00 <col:55> 'int' <IntegralCast>
    |       | | `-ImplicitCastExpr 0x5612e0e12de8 <col:55> '_Bool' <LValueToRValue>
    |       | |   `-DeclRefExpr 0x5612e0e12da8 <col:55> '_Bool' lvalue Var 0x5612e0e08840 'x$w_buff1_used' '_Bool'
    |       | `-ImplicitCastExpr 0x5612e0e12e30 <col:73> 'int' <IntegralCast>
    |       |   `-ImplicitCastExpr 0x5612e0e12e18 <col:73> '_Bool' <LValueToRValue>
    |       |     `-DeclRefExpr 0x5612e0e12dc8 <col:73> '_Bool' lvalue Var 0x5612e0e083f0 'x$r_buff1_thd0' '_Bool'
    |       |-ImplicitCastExpr 0x5612e0e12ea8 <col:90> 'int' <LValueToRValue>
    |       | `-DeclRefExpr 0x5612e0e12e68 <col:90> 'int' lvalue Var 0x5612e0e087c8 'x$w_buff1' 'int'
    |       `-ImplicitCastExpr 0x5612e0e12ec0 <col:102> 'int' <LValueToRValue>
    |         `-DeclRefExpr 0x5612e0e12e88 <col:102> 'int' lvalue Var 0x5612e0e08080 'x' 'int'
    |-BinaryOperator 0x5612e0e13178 <line:826:3, col:66> '_Bool' '='
    | |-DeclRefExpr 0x5612e0e12f90 <col:3> '_Bool' lvalue Var 0x5612e0e08748 'x$w_buff0_used' '_Bool'
    | `-ImplicitCastExpr 0x5612e0e13160 <col:20, col:66> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x5612e0e13130 <col:20, col:66> 'int'
    |     |-BinaryOperator 0x5612e0e13050 <col:20, col:38> 'int' '&&'
    |     | |-ImplicitCastExpr 0x5612e0e13008 <col:20> 'int' <IntegralCast>
    |     | | `-ImplicitCastExpr 0x5612e0e12ff0 <col:20> '_Bool' <LValueToRValue>
    |     | |   `-DeclRefExpr 0x5612e0e12fb0 <col:20> '_Bool' lvalue Var 0x5612e0e08748 'x$w_buff0_used' '_Bool'
    |     | `-ImplicitCastExpr 0x5612e0e13038 <col:38> 'int' <IntegralCast>
    |     |   `-ImplicitCastExpr 0x5612e0e13020 <col:38> '_Bool' <LValueToRValue>
    |     |     `-DeclRefExpr 0x5612e0e12fd0 <col:38> '_Bool' lvalue Var 0x5612e0e08210 'x$r_buff0_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x5612e0e130e8 <col:55, col:62> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x5612e0e130a0 <col:55, col:62> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x5612e0e13070 <col:62> 'int' 0
    |     `-ImplicitCastExpr 0x5612e0e13118 <col:66> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x5612e0e13100 <col:66> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x5612e0e130c8 <col:66> '_Bool' lvalue Var 0x5612e0e08748 'x$w_buff0_used' '_Bool'
    |-BinaryOperator 0x5612e0e13460 <line:827:3, col:102> '_Bool' '='
    | |-DeclRefExpr 0x5612e0e13198 <col:3> '_Bool' lvalue Var 0x5612e0e08840 'x$w_buff1_used' '_Bool'
    | `-ImplicitCastExpr 0x5612e0e13448 <col:20, col:102> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x5612e0e13418 <col:20, col:102> 'int'
    |     |-BinaryOperator 0x5612e0e13338 <col:20, col:74> 'int' '||'
    |     | |-BinaryOperator 0x5612e0e13258 <col:20, col:38> 'int' '&&'
    |     | | |-ImplicitCastExpr 0x5612e0e13210 <col:20> 'int' <IntegralCast>
    |     | | | `-ImplicitCastExpr 0x5612e0e131f8 <col:20> '_Bool' <LValueToRValue>
    |     | | |   `-DeclRefExpr 0x5612e0e131b8 <col:20> '_Bool' lvalue Var 0x5612e0e08748 'x$w_buff0_used' '_Bool'
    |     | | `-ImplicitCastExpr 0x5612e0e13240 <col:38> 'int' <IntegralCast>
    |     | |   `-ImplicitCastExpr 0x5612e0e13228 <col:38> '_Bool' <LValueToRValue>
    |     | |     `-DeclRefExpr 0x5612e0e131d8 <col:38> '_Bool' lvalue Var 0x5612e0e08210 'x$r_buff0_thd0' '_Bool'
    |     | `-BinaryOperator 0x5612e0e13318 <col:56, col:74> 'int' '&&'
    |     |   |-ImplicitCastExpr 0x5612e0e132d0 <col:56> 'int' <IntegralCast>
    |     |   | `-ImplicitCastExpr 0x5612e0e132b8 <col:56> '_Bool' <LValueToRValue>
    |     |   |   `-DeclRefExpr 0x5612e0e13278 <col:56> '_Bool' lvalue Var 0x5612e0e08840 'x$w_buff1_used' '_Bool'
    |     |   `-ImplicitCastExpr 0x5612e0e13300 <col:74> 'int' <IntegralCast>
    |     |     `-ImplicitCastExpr 0x5612e0e132e8 <col:74> '_Bool' <LValueToRValue>
    |     |       `-DeclRefExpr 0x5612e0e13298 <col:74> '_Bool' lvalue Var 0x5612e0e083f0 'x$r_buff1_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x5612e0e133d0 <col:91, col:98> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x5612e0e13388 <col:91, col:98> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x5612e0e13358 <col:98> 'int' 0
    |     `-ImplicitCastExpr 0x5612e0e13400 <col:102> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x5612e0e133e8 <col:102> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x5612e0e133b0 <col:102> '_Bool' lvalue Var 0x5612e0e08840 'x$w_buff1_used' '_Bool'
    |-BinaryOperator 0x5612e0e13668 <line:828:3, col:66> '_Bool' '='
    | |-DeclRefExpr 0x5612e0e13480 <col:3> '_Bool' lvalue Var 0x5612e0e08210 'x$r_buff0_thd0' '_Bool'
    | `-ImplicitCastExpr 0x5612e0e13650 <col:20, col:66> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x5612e0e13620 <col:20, col:66> 'int'
    |     |-BinaryOperator 0x5612e0e13540 <col:20, col:38> 'int' '&&'
    |     | |-ImplicitCastExpr 0x5612e0e134f8 <col:20> 'int' <IntegralCast>
    |     | | `-ImplicitCastExpr 0x5612e0e134e0 <col:20> '_Bool' <LValueToRValue>
    |     | |   `-DeclRefExpr 0x5612e0e134a0 <col:20> '_Bool' lvalue Var 0x5612e0e08748 'x$w_buff0_used' '_Bool'
    |     | `-ImplicitCastExpr 0x5612e0e13528 <col:38> 'int' <IntegralCast>
    |     |   `-ImplicitCastExpr 0x5612e0e13510 <col:38> '_Bool' <LValueToRValue>
    |     |     `-DeclRefExpr 0x5612e0e134c0 <col:38> '_Bool' lvalue Var 0x5612e0e08210 'x$r_buff0_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x5612e0e135d8 <col:55, col:62> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x5612e0e13590 <col:55, col:62> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x5612e0e13560 <col:62> 'int' 0
    |     `-ImplicitCastExpr 0x5612e0e13608 <col:66> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x5612e0e135f0 <col:66> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x5612e0e135b8 <col:66> '_Bool' lvalue Var 0x5612e0e08210 'x$r_buff0_thd0' '_Bool'
    |-BinaryOperator 0x5612e0e13950 <line:829:3, col:102> '_Bool' '='
    | |-DeclRefExpr 0x5612e0e13688 <col:3> '_Bool' lvalue Var 0x5612e0e083f0 'x$r_buff1_thd0' '_Bool'
    | `-ImplicitCastExpr 0x5612e0e13938 <col:20, col:102> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x5612e0e13908 <col:20, col:102> 'int'
    |     |-BinaryOperator 0x5612e0e13828 <col:20, col:74> 'int' '||'
    |     | |-BinaryOperator 0x5612e0e13748 <col:20, col:38> 'int' '&&'
    |     | | |-ImplicitCastExpr 0x5612e0e13700 <col:20> 'int' <IntegralCast>
    |     | | | `-ImplicitCastExpr 0x5612e0e136e8 <col:20> '_Bool' <LValueToRValue>
    |     | | |   `-DeclRefExpr 0x5612e0e136a8 <col:20> '_Bool' lvalue Var 0x5612e0e08748 'x$w_buff0_used' '_Bool'
    |     | | `-ImplicitCastExpr 0x5612e0e13730 <col:38> 'int' <IntegralCast>
    |     | |   `-ImplicitCastExpr 0x5612e0e13718 <col:38> '_Bool' <LValueToRValue>
    |     | |     `-DeclRefExpr 0x5612e0e136c8 <col:38> '_Bool' lvalue Var 0x5612e0e08210 'x$r_buff0_thd0' '_Bool'
    |     | `-BinaryOperator 0x5612e0e13808 <col:56, col:74> 'int' '&&'
    |     |   |-ImplicitCastExpr 0x5612e0e137c0 <col:56> 'int' <IntegralCast>
    |     |   | `-ImplicitCastExpr 0x5612e0e137a8 <col:56> '_Bool' <LValueToRValue>
    |     |   |   `-DeclRefExpr 0x5612e0e13768 <col:56> '_Bool' lvalue Var 0x5612e0e08840 'x$w_buff1_used' '_Bool'
    |     |   `-ImplicitCastExpr 0x5612e0e137f0 <col:74> 'int' <IntegralCast>
    |     |     `-ImplicitCastExpr 0x5612e0e137d8 <col:74> '_Bool' <LValueToRValue>
    |     |       `-DeclRefExpr 0x5612e0e13788 <col:74> '_Bool' lvalue Var 0x5612e0e083f0 'x$r_buff1_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x5612e0e138c0 <col:91, col:98> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x5612e0e13878 <col:91, col:98> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x5612e0e13848 <col:98> 'int' 0
    |     `-ImplicitCastExpr 0x5612e0e138f0 <col:102> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x5612e0e138d8 <col:102> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x5612e0e138a0 <col:102> '_Bool' lvalue Var 0x5612e0e083f0 'x$r_buff1_thd0' '_Bool'
    |-CallExpr 0x5612e0e139a8 <line:830:3, col:25> 'void'
    | `-ImplicitCastExpr 0x5612e0e13990 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x5612e0e13970 <col:3> 'void ()' Function 0x5612e0dae060 '__VERIFIER_atomic_end' 'void ()'
    |-CallExpr 0x5612e0e13a00 <line:831:3, col:27> 'void'
    | `-ImplicitCastExpr 0x5612e0e139e8 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x5612e0e139c8 <col:3> 'void ()' Function 0x5612e0dadfa0 '__VERIFIER_atomic_begin' 'void ()'
    |-BinaryOperator 0x5612e0e13a98 <line:832:3, col:42> '_Bool' '='
    | |-DeclRefExpr 0x5612e0e13a20 <col:3> '_Bool' lvalue Var 0x5612e0e08a50 'weak$$choice1' '_Bool'
    | `-CallExpr 0x5612e0e13a78 <col:19, col:42> '_Bool'
    |   `-ImplicitCastExpr 0x5612e0e13a60 <col:19> '_Bool (*)(void)' <FunctionToPointerDecay>
    |     `-DeclRefExpr 0x5612e0e13a40 <col:19> '_Bool (void)' Function 0x5612e0dad770 '__VERIFIER_nondet_bool' '_Bool (void)'
    |-BinaryOperator 0x5612e0e13cf0 <line:833:3, col:140> 'int' '='
    | |-DeclRefExpr 0x5612e0e13ab8 <col:3> 'int' lvalue Var 0x5612e0e07560 '__unbuffered_p2_EAX' 'int'
    | `-ConditionalOperator 0x5612e0e13cc0 <col:25, col:140> 'int'
    |   |-ImplicitCastExpr 0x5612e0e13c90 <col:25> 'int' <IntegralCast>
    |   | `-ImplicitCastExpr 0x5612e0e13c78 <col:25> '_Bool' <LValueToRValue>
    |   |   `-DeclRefExpr 0x5612e0e13ad8 <col:25> '_Bool' lvalue Var 0x5612e0e07b00 '__unbuffered_p2_EAX$read_delayed' '_Bool'
    |   |-ParenExpr 0x5612e0e13c38 <col:60, col:136> 'int'
    |   | `-ConditionalOperator 0x5612e0e13c08 <col:61, col:117> 'int'
    |   |   |-ImplicitCastExpr 0x5612e0e13bc0 <col:61> 'int' <IntegralCast>
    |   |   | `-ImplicitCastExpr 0x5612e0e13b88 <col:61> '_Bool' <LValueToRValue>
    |   |   |   `-DeclRefExpr 0x5612e0e13af8 <col:61> '_Bool' lvalue Var 0x5612e0e08a50 'weak$$choice1' '_Bool'
    |   |   |-ImplicitCastExpr 0x5612e0e13bd8 <col:77, col:78> 'int' <LValueToRValue>
    |   |   | `-UnaryOperator 0x5612e0e13b50 <col:77, col:78> 'int' lvalue prefix '*' cannot overflow
    |   |   |   `-ImplicitCastExpr 0x5612e0e13b38 <col:78> 'int *' <LValueToRValue>
    |   |   |     `-DeclRefExpr 0x5612e0e13b18 <col:78> 'int *' lvalue Var 0x5612e0e07b80 '__unbuffered_p2_EAX$read_delayed_var' 'int *'
    |   |   `-ImplicitCastExpr 0x5612e0e13bf0 <col:117> 'int' <LValueToRValue>
    |   |     `-DeclRefExpr 0x5612e0e13b68 <col:117> 'int' lvalue Var 0x5612e0e07560 '__unbuffered_p2_EAX' 'int'
    |   `-ImplicitCastExpr 0x5612e0e13ca8 <col:140> 'int' <LValueToRValue>
    |     `-DeclRefExpr 0x5612e0e13c58 <col:140> 'int' lvalue Var 0x5612e0e07560 '__unbuffered_p2_EAX' 'int'
    |-BinaryOperator 0x5612e0e13f28 <line:834:3, col:103> '_Bool' '='
    | |-DeclRefExpr 0x5612e0e13d10 <col:3> '_Bool' lvalue Var 0x5612e0e07f80 'main$tmp_guard1' '_Bool'
    | `-ImplicitCastExpr 0x5612e0e13f10 <col:21, col:103> '_Bool' <IntegralToBoolean>
    |   `-UnaryOperator 0x5612e0e13ef8 <col:21, col:103> 'int' prefix '!' cannot overflow
    |     `-ParenExpr 0x5612e0e13ed8 <col:22, col:103> 'int'
    |       `-BinaryOperator 0x5612e0e13eb8 <col:23, col:102> 'int' '&&'
    |         |-BinaryOperator 0x5612e0e13e20 <col:23, col:74> 'int' '&&'
    |         | |-BinaryOperator 0x5612e0e13d88 <col:23, col:46> 'int' '=='
    |         | | |-ImplicitCastExpr 0x5612e0e13d70 <col:23> 'int' <LValueToRValue>
    |         | | | `-DeclRefExpr 0x5612e0e13d30 <col:23> 'int' lvalue Var 0x5612e0e07440 '__unbuffered_p0_EAX' 'int'
    |         | | `-IntegerLiteral 0x5612e0e13d50 <col:46> 'int' 0
    |         | `-BinaryOperator 0x5612e0e13e00 <col:51, col:74> 'int' '=='
    |         |   |-ImplicitCastExpr 0x5612e0e13de8 <col:51> 'int' <LValueToRValue>
    |         |   | `-DeclRefExpr 0x5612e0e13da8 <col:51> 'int' lvalue Var 0x5612e0e07560 '__unbuffered_p2_EAX' 'int'
    |         |   `-IntegerLiteral 0x5612e0e13dc8 <col:74> 'int' 1
    |         `-BinaryOperator 0x5612e0e13e98 <col:79, col:102> 'int' '=='
    |           |-ImplicitCastExpr 0x5612e0e13e80 <col:79> 'int' <LValueToRValue>
    |           | `-DeclRefExpr 0x5612e0e13e40 <col:79> 'int' lvalue Var 0x5612e0e07e70 '__unbuffered_p2_EBX' 'int'
    |           `-IntegerLiteral 0x5612e0e13e60 <col:102> 'int' 0
    |-CallExpr 0x5612e0e13f80 <line:835:3, col:25> 'void'
    | `-ImplicitCastExpr 0x5612e0e13f68 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x5612e0e13f48 <col:3> 'void ()' Function 0x5612e0dae060 '__VERIFIER_atomic_end' 'void ()'
    |-CallExpr 0x5612e0e13ff8 <line:836:3, col:36> 'void'
    | |-ImplicitCastExpr 0x5612e0e13fe0 <col:3> 'void (*)(int)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x5612e0e13fa0 <col:3> 'void (int)' Function 0x5612e0dadd28 '__VERIFIER_assert' 'void (int)'
    | `-ImplicitCastExpr 0x5612e0e14038 <col:21> 'int' <IntegralCast>
    |   `-ImplicitCastExpr 0x5612e0e14020 <col:21> '_Bool' <LValueToRValue>
    |     `-DeclRefExpr 0x5612e0e13fc0 <col:21> '_Bool' lvalue Var 0x5612e0e07f80 'main$tmp_guard1' '_Bool'
    `-ReturnStmt 0x5612e0e14070 <line:837:3, col:10>
      `-IntegerLiteral 0x5612e0e14050 <col:10> 'int' 0
