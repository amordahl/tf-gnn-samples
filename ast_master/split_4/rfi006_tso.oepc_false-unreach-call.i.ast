TranslationUnitDecl 0x558416024e18 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x5584160256d8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x5584160253b0 '__int128'
|-TypedefDecl 0x558416025748 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x5584160253d0 'unsigned __int128'
|-TypedefDecl 0x558416025a50 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x558416025820 'struct __NSConstantString_tag'
|   `-Record 0x5584160257a0 '__NSConstantString_tag'
|-TypedefDecl 0x558416025af8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x558416025ab0 'char *'
|   `-BuiltinType 0x558416024eb0 'char'
|-TypedefDecl 0x558416064650 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'struct __va_list_tag [1]'
| `-ConstantArrayType 0x558416025d90 'struct __va_list_tag [1]' 1 
|   `-RecordType 0x558416025bd0 'struct __va_list_tag'
|     `-Record 0x558416025b50 '__va_list_tag'
|-FunctionDecl 0x558416064790 <./split_4/rfi006_tso.oepc_false-unreach-call.i:1:1, col:34> col:13 used __VERIFIER_assume 'void (int)' extern
| `-ParmVarDecl 0x5584160646c0 <col:31> col:34 'int'
|-FunctionDecl 0x558416064958 <line:2:1, col:45> col:15 used __VERIFIER_nondet_pointer 'void *(void)' extern
|-FunctionDecl 0x558416064a80 <line:3:1, col:61> col:13 used __VERIFIER_error 'void () __attribute__((noreturn))' extern
|-FunctionDecl 0x558416064bc8 <line:4:1, col:99> col:6 used __VERIFIER_assert 'void (int)'
| |-ParmVarDecl 0x558416064b38 <col:24, col:28> col:28 used expression 'int'
| `-CompoundStmt 0x558416064df8 <col:40, col:99>
|   |-IfStmt 0x558416064dc8 <col:42, col:88>
|   | |-UnaryOperator 0x558416064ca8 <col:46, col:47> 'int' prefix '!' cannot overflow
|   | | `-ImplicitCastExpr 0x558416064c90 <col:47> 'int' <LValueToRValue>
|   | |   `-DeclRefExpr 0x558416064c70 <col:47> 'int' lvalue ParmVar 0x558416064b38 'expression' 'int'
|   | `-CompoundStmt 0x558416064db0 <col:59, col:88>
|   |   `-LabelStmt 0x558416064d98 <col:61, col:85> 'ERROR'
|   |     `-CallExpr 0x558416064d28 <col:68, col:85> 'void'
|   |       `-ImplicitCastExpr 0x558416064d10 <col:68> 'void (*)() __attribute__((noreturn))' <FunctionToPointerDecay>
|   |         `-DeclRefExpr 0x558416064cc0 <col:68> 'void () __attribute__((noreturn))' Function 0x558416064a80 '__VERIFIER_error' 'void () __attribute__((noreturn))'
|   |-NullStmt 0x558416064de0 <col:89>
|   `-ReturnStmt 0x558416064de8 <col:91>
|-FunctionDecl 0x558416064e40 <line:5:1, col:37> col:13 used __VERIFIER_atomic_begin 'void ()' extern
|-FunctionDecl 0x558416064f00 <line:6:1, col:35> col:13 used __VERIFIER_atomic_end 'void ()' extern
|-FunctionDecl 0x558416065280 <line:8:1, line:10:76> line:8:13 __assert_fail 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x558416064fb8 <col:28, col:40> col:40 __assertion 'const char *'
| |-ParmVarDecl 0x558416065038 <col:53, col:65> col:65 __file 'const char *'
| |-ParmVarDecl 0x5584160650b8 <line:9:7, col:20> col:20 __line 'unsigned int'
| |-ParmVarDecl 0x558416065138 <col:28, col:40> col:40 __function 'const char *'
| `-NoThrowAttr 0x558416065340 <line:10:22>
|-FunctionDecl 0x55841608b390 <line:11:1, line:13:76> line:11:13 __assert_perror_fail 'void (int, const char *, unsigned int, const char *) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x5584160653b0 <col:35, col:39> col:39 __errnum 'int'
| |-ParmVarDecl 0x558416065430 <col:49, col:61> col:61 __file 'const char *'
| |-ParmVarDecl 0x5584160654b0 <line:12:7, col:20> col:20 __line 'unsigned int'
| |-ParmVarDecl 0x558416065530 <col:28, col:40> col:40 __function 'const char *'
| `-NoThrowAttr 0x55841608b450 <line:13:22>
|-FunctionDecl 0x55841608b700 <line:14:1, line:15:76> line:14:13 __assert 'void (const char *, const char *, int) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x55841608b4c0 <col:23, col:35> col:35 __assertion 'const char *'
| |-ParmVarDecl 0x55841608b540 <col:48, col:60> col:60 __file 'const char *'
| |-ParmVarDecl 0x55841608b5c0 <col:68, col:72> col:72 __line 'int'
| `-NoThrowAttr 0x55841608b7b8 <line:15:22>
|-TypedefDecl 0x55841608b828 <line:17:1, col:23> col:23 __u_char 'unsigned char'
| `-BuiltinType 0x558416024f70 'unsigned char'
|-TypedefDecl 0x55841608b898 <line:18:1, col:28> col:28 __u_short 'unsigned short'
| `-BuiltinType 0x558416024f90 'unsigned short'
|-TypedefDecl 0x55841608b908 <line:19:1, col:22> col:22 __u_int 'unsigned int'
| `-BuiltinType 0x558416024fb0 'unsigned int'
|-TypedefDecl 0x55841608b978 <line:20:1, col:27> col:27 __u_long 'unsigned long'
| `-BuiltinType 0x558416024fd0 'unsigned long'
|-TypedefDecl 0x55841608b9e8 <line:21:1, col:21> col:21 __int8_t 'signed char'
| `-BuiltinType 0x558416024ed0 'signed char'
|-TypedefDecl 0x55841608ba58 <line:22:1, col:23> col:23 __uint8_t 'unsigned char'
| `-BuiltinType 0x558416024f70 'unsigned char'
|-TypedefDecl 0x55841608bac8 <line:23:1, col:26> col:26 __int16_t 'short'
| `-BuiltinType 0x558416024ef0 'short'
|-TypedefDecl 0x55841608bb38 <line:24:1, col:28> col:28 __uint16_t 'unsigned short'
| `-BuiltinType 0x558416024f90 'unsigned short'
|-TypedefDecl 0x55841608bba8 <line:25:1, col:20> col:20 __int32_t 'int'
| `-BuiltinType 0x558416024f10 'int'
|-TypedefDecl 0x55841608bc18 <line:26:1, col:22> col:22 __uint32_t 'unsigned int'
| `-BuiltinType 0x558416024fb0 'unsigned int'
|-TypedefDecl 0x55841608bc88 <line:27:1, col:25> col:25 __int64_t 'long'
| `-BuiltinType 0x558416024f30 'long'
|-TypedefDecl 0x55841608bcf8 <line:28:1, col:27> col:27 referenced __uint64_t 'unsigned long'
| `-BuiltinType 0x558416024fd0 'unsigned long'
|-TypedefDecl 0x55841608bd68 <line:29:1, col:18> col:18 referenced __quad_t 'long'
| `-BuiltinType 0x558416024f30 'long'
|-TypedefDecl 0x55841608bdd8 <line:30:1, col:27> col:27 __u_quad_t 'unsigned long'
| `-BuiltinType 0x558416024fd0 'unsigned long'
|-TypedefDecl 0x55841608be48 <line:31:1, col:27> col:27 __dev_t 'unsigned long'
| `-BuiltinType 0x558416024fd0 'unsigned long'
|-TypedefDecl 0x55841608beb8 <line:32:1, col:22> col:22 __uid_t 'unsigned int'
| `-BuiltinType 0x558416024fb0 'unsigned int'
|-TypedefDecl 0x55841608bf28 <line:33:1, col:22> col:22 __gid_t 'unsigned int'
| `-BuiltinType 0x558416024fb0 'unsigned int'
|-TypedefDecl 0x55841608bf98 <line:34:1, col:27> col:27 __ino_t 'unsigned long'
| `-BuiltinType 0x558416024fd0 'unsigned long'
|-TypedefDecl 0x55841608c008 <line:35:1, col:27> col:27 __ino64_t 'unsigned long'
| `-BuiltinType 0x558416024fd0 'unsigned long'
|-TypedefDecl 0x55841608c078 <line:36:1, col:22> col:22 __mode_t 'unsigned int'
| `-BuiltinType 0x558416024fb0 'unsigned int'
|-TypedefDecl 0x55841608c0e8 <line:37:1, col:27> col:27 __nlink_t 'unsigned long'
| `-BuiltinType 0x558416024fd0 'unsigned long'
|-TypedefDecl 0x55841608c158 <line:38:1, col:18> col:18 __off_t 'long'
| `-BuiltinType 0x558416024f30 'long'
|-TypedefDecl 0x55841608c1c8 <line:39:1, col:18> col:18 referenced __off64_t 'long'
| `-BuiltinType 0x558416024f30 'long'
|-TypedefDecl 0x55841608c238 <line:40:1, col:13> col:13 referenced __pid_t 'int'
| `-BuiltinType 0x558416024f10 'int'
|-RecordDecl 0x55841608c290 <line:41:9, col:32> col:9 struct definition
| `-FieldDecl 0x55841608c408 <col:18, col:29> col:22 __val 'int [2]'
|-TypedefDecl 0x55841608c4c0 <col:1, col:34> col:34 __fsid_t 'struct __fsid_t':'__fsid_t'
| `-ElaboratedType 0x55841608c460 'struct __fsid_t' sugar
|   `-RecordType 0x55841608c310 '__fsid_t'
|     `-Record 0x55841608c290 ''
|-TypedefDecl 0x55841608c548 <line:42:1, col:18> col:18 referenced __clock_t 'long'
| `-BuiltinType 0x558416024f30 'long'
|-TypedefDecl 0x55841608c5b8 <line:43:1, col:27> col:27 __rlim_t 'unsigned long'
| `-BuiltinType 0x558416024fd0 'unsigned long'
|-TypedefDecl 0x55841608c628 <line:44:1, col:27> col:27 __rlim64_t 'unsigned long'
| `-BuiltinType 0x558416024fd0 'unsigned long'
|-TypedefDecl 0x55841608c698 <line:45:1, col:22> col:22 __id_t 'unsigned int'
| `-BuiltinType 0x558416024fb0 'unsigned int'
|-TypedefDecl 0x55841608c708 <line:46:1, col:18> col:18 referenced __time_t 'long'
| `-BuiltinType 0x558416024f30 'long'
|-TypedefDecl 0x55841608c778 <line:47:1, col:22> col:22 __useconds_t 'unsigned int'
| `-BuiltinType 0x558416024fb0 'unsigned int'
|-TypedefDecl 0x55841608c7e8 <line:48:1, col:18> col:18 __suseconds_t 'long'
| `-BuiltinType 0x558416024f30 'long'
|-TypedefDecl 0x55841608c858 <line:49:1, col:13> col:13 __daddr_t 'int'
| `-BuiltinType 0x558416024f10 'int'
|-TypedefDecl 0x55841608c8c8 <line:50:1, col:13> col:13 __key_t 'int'
| `-BuiltinType 0x558416024f10 'int'
|-TypedefDecl 0x55841608c938 <line:51:1, col:13> col:13 referenced __clockid_t 'int'
| `-BuiltinType 0x558416024f10 'int'
|-TypedefDecl 0x55841608c9a8 <line:52:1, col:16> col:16 referenced __timer_t 'void *'
| `-PointerType 0x558416025630 'void *'
|   `-BuiltinType 0x558416024e70 'void'
|-TypedefDecl 0x55841608ca18 <line:53:1, col:18> col:18 __blksize_t 'long'
| `-BuiltinType 0x558416024f30 'long'
|-TypedefDecl 0x55841608ca88 <line:54:1, col:18> col:18 __blkcnt_t 'long'
| `-BuiltinType 0x558416024f30 'long'
|-TypedefDecl 0x55841608caf8 <line:55:1, col:18> col:18 __blkcnt64_t 'long'
| `-BuiltinType 0x558416024f30 'long'
|-TypedefDecl 0x55841608cb68 <line:56:1, col:27> col:27 __fsblkcnt_t 'unsigned long'
| `-BuiltinType 0x558416024fd0 'unsigned long'
|-TypedefDecl 0x55841608cbd8 <line:57:1, col:27> col:27 __fsblkcnt64_t 'unsigned long'
| `-BuiltinType 0x558416024fd0 'unsigned long'
|-TypedefDecl 0x55841608cc48 <line:58:1, col:27> col:27 __fsfilcnt_t 'unsigned long'
| `-BuiltinType 0x558416024fd0 'unsigned long'
|-TypedefDecl 0x55841608ccb8 <line:59:1, col:27> col:27 __fsfilcnt64_t 'unsigned long'
| `-BuiltinType 0x558416024fd0 'unsigned long'
|-TypedefDecl 0x55841608cd28 <line:60:1, col:18> col:18 __fsword_t 'long'
| `-BuiltinType 0x558416024f30 'long'
|-TypedefDecl 0x55841608cd98 <line:61:1, col:18> col:18 __ssize_t 'long'
| `-BuiltinType 0x558416024f30 'long'
|-TypedefDecl 0x55841608ce08 <line:62:1, col:18> col:18 referenced __syscall_slong_t 'long'
| `-BuiltinType 0x558416024f30 'long'
|-TypedefDecl 0x55841608ce78 <line:63:1, col:27> col:27 __syscall_ulong_t 'unsigned long'
| `-BuiltinType 0x558416024fd0 'unsigned long'
|-TypedefDecl 0x55841608cf08 <line:64:1, col:19> col:19 __loff_t '__off64_t':'long'
| `-TypedefType 0x55841608ced0 '__off64_t' sugar
|   |-Typedef 0x55841608c1c8 '__off64_t'
|   `-BuiltinType 0x558416024f30 'long'
|-TypedefDecl 0x55841608d000 <line:65:1, col:19> col:19 __qaddr_t '__quad_t *'
| `-PointerType 0x55841608cfc0 '__quad_t *'
|   `-TypedefType 0x55841608cf60 '__quad_t' sugar
|     |-Typedef 0x55841608bd68 '__quad_t'
|     `-BuiltinType 0x558416024f30 'long'
|-TypedefDecl 0x55841608d070 <line:66:1, col:15> col:15 __caddr_t 'char *'
| `-PointerType 0x558416025ab0 'char *'
|   `-BuiltinType 0x558416024eb0 'char'
|-TypedefDecl 0x55841608d0e0 <line:67:1, col:18> col:18 __intptr_t 'long'
| `-BuiltinType 0x558416024f30 'long'
|-TypedefDecl 0x55841608d150 <line:68:1, col:22> col:22 __socklen_t 'unsigned int'
| `-BuiltinType 0x558416024fb0 'unsigned int'
|-FunctionDecl 0x55841608d298 <line:69:1, line:73:1> line:70:1 __bswap_32 'unsigned int (unsigned int)' static inline
| |-ParmVarDecl 0x55841608d1c0 <col:13, col:26> col:26 used __bsx 'unsigned int'
| `-CompoundStmt 0x55841608e5e8 <line:71:1, line:73:1>
|   `-ReturnStmt 0x55841608e5d8 <line:72:3, col:34>
|     `-CallExpr 0x55841608e598 <col:10, col:34> 'unsigned int'
|       |-ImplicitCastExpr 0x55841608e580 <col:10> 'unsigned int (*)(unsigned int)' <BuiltinFnToFnPtr>
|       | `-DeclRefExpr 0x55841608e510 <col:10> '<builtin fn type>' Function 0x55841608e380 '__builtin_bswap32' 'unsigned int (unsigned int)'
|       `-ImplicitCastExpr 0x55841608e5c0 <col:29> 'unsigned int' <LValueToRValue>
|         `-DeclRefExpr 0x55841608e530 <col:29> 'unsigned int' lvalue ParmVar 0x55841608d1c0 '__bsx' 'unsigned int'
|-FunctionDecl 0x55841608e380 <col:10> col:10 implicit used __builtin_bswap32 'unsigned int (unsigned int)' extern
| |-ParmVarDecl 0x55841608e420 <<invalid sloc>> <invalid sloc> 'unsigned int'
| |-NoThrowAttr 0x55841608e490 <col:10> Implicit
| `-ConstAttr 0x55841608e4e8 <col:10> Implicit
|-FunctionDecl 0x55841608e740 <line:74:1, line:78:1> line:75:1 __bswap_64 '__uint64_t (__uint64_t)' static inline
| |-ParmVarDecl 0x55841608e638 <col:13, col:24> col:24 used __bsx '__uint64_t':'unsigned long'
| `-CompoundStmt 0x55841608ea58 <line:76:1, line:78:1>
|   `-ReturnStmt 0x55841608ea48 <line:77:3, col:34>
|     `-CallExpr 0x55841608ea08 <col:10, col:34> 'unsigned long'
|       |-ImplicitCastExpr 0x55841608e9f0 <col:10> 'unsigned long (*)(unsigned long)' <BuiltinFnToFnPtr>
|       | `-DeclRefExpr 0x55841608e978 <col:10> '<builtin fn type>' Function 0x55841608e7e8 '__builtin_bswap64' 'unsigned long (unsigned long)'
|       `-ImplicitCastExpr 0x55841608ea30 <col:29> '__uint64_t':'unsigned long' <LValueToRValue>
|         `-DeclRefExpr 0x55841608e998 <col:29> '__uint64_t':'unsigned long' lvalue ParmVar 0x55841608e638 '__bsx' '__uint64_t':'unsigned long'
|-FunctionDecl 0x55841608e7e8 <col:10> col:10 implicit used __builtin_bswap64 'unsigned long (unsigned long)' extern
| |-ParmVarDecl 0x55841608e888 <<invalid sloc>> <invalid sloc> 'unsigned long'
| |-NoThrowAttr 0x55841608e8f8 <col:10> Implicit
| `-ConstAttr 0x55841608e950 <col:10> Implicit
|-TypedefDecl 0x55841608ea88 <line:79:1, col:27> col:27 referenced size_t 'unsigned long'
| `-BuiltinType 0x558416024fd0 'unsigned long'
|-TypedefDecl 0x55841608eb18 <line:81:1, col:18> col:18 referenced time_t '__time_t':'long'
| `-TypedefType 0x55841608eae0 '__time_t' sugar
|   |-Typedef 0x55841608c708 '__time_t'
|   `-BuiltinType 0x558416024f30 'long'
|-RecordDecl 0x55841608eb70 <line:84:1, line:88:3> line:84:8 struct timespec definition
| |-FieldDecl 0x55841608ec28 <line:86:5, col:14> col:14 tv_sec '__time_t':'long'
| `-FieldDecl 0x55841608ecb8 <line:87:5, col:23> col:23 tv_nsec '__syscall_slong_t':'long'
|-TypedefDecl 0x55841608ed48 <line:89:1, col:17> col:17 referenced pid_t '__pid_t':'int'
| `-TypedefType 0x55841608ed10 '__pid_t' sugar
|   |-Typedef 0x55841608c238 '__pid_t'
|   `-BuiltinType 0x558416024f10 'int'
|-RecordDecl 0x55841608eda0 <line:90:1, line:93:3> line:90:8 struct sched_param definition
| `-FieldDecl 0x55841608ee60 <line:92:5, col:9> col:9 __sched_priority 'int'
|-RecordDecl 0x55841608eeb0 <line:96:1, line:99:3> line:96:8 struct __sched_param definition
| `-FieldDecl 0x55841608ef70 <line:98:5, col:9> col:9 __sched_priority 'int'
|-TypedefDecl 0x55841608efd8 <line:100:1, col:27> col:27 referenced __cpu_mask 'unsigned long'
| `-BuiltinType 0x558416024fd0 'unsigned long'
|-RecordDecl 0x55841608f030 <line:101:9, line:104:1> line:101:9 struct definition
| `-FieldDecl 0x55841608f2c0 <line:103:3, col:53> col:14 __bits '__cpu_mask [64]'
|-TypedefDecl 0x5584160903a0 <line:101:1, line:104:3> col:3 referenced cpu_set_t 'struct cpu_set_t':'cpu_set_t'
| `-ElaboratedType 0x55841608f310 'struct cpu_set_t' sugar
|   `-RecordType 0x55841608f0b0 'cpu_set_t'
|     `-Record 0x55841608f030 ''
|-FunctionDecl 0x558416090678 <line:106:1, line:107:42> line:106:12 __sched_cpucount 'int (size_t, const cpu_set_t *)' extern
| |-ParmVarDecl 0x558416090448 <col:30, col:37> col:37 __setsize 'size_t':'unsigned long'
| |-ParmVarDecl 0x558416090550 <col:48, col:65> col:65 __setp 'const cpu_set_t *'
| `-NoThrowAttr 0x558416090728 <line:107:19>
|-FunctionDecl 0x558416090900 <line:108:1, col:92> col:19 __sched_cpualloc 'cpu_set_t *(size_t)' extern
| |-ParmVarDecl 0x558416090790 <col:37, col:44> col:44 __count 'size_t':'unsigned long'
| `-NoThrowAttr 0x5584160909a8 <col:69>
|-FunctionDecl 0x558416090b20 <line:109:1, col:87> col:13 __sched_cpufree 'void (cpu_set_t *)' extern
| |-ParmVarDecl 0x558416090a10 <col:30, col:41> col:41 __set 'cpu_set_t *'
| `-NoThrowAttr 0x558416090bc8 <col:64>
|-FunctionDecl 0x558416090e88 <line:112:1, line:113:45> line:112:12 sched_setparam 'int (__pid_t, const struct sched_param *)' extern
| |-ParmVarDecl 0x558416090c30 <col:28, col:36> col:36 __pid '__pid_t':'int'
| |-ParmVarDecl 0x558416090d68 <col:43, col:69> col:69 __param 'const struct sched_param *'
| `-NoThrowAttr 0x558416090f38 <line:113:22>
|-FunctionDecl 0x5584160911b8 <line:114:1, col:111> col:12 sched_getparam 'int (__pid_t, struct sched_param *)' extern
| |-ParmVarDecl 0x558416090fa0 <col:28, col:36> col:36 __pid '__pid_t':'int'
| |-ParmVarDecl 0x558416091098 <col:43, col:63> col:63 __param 'struct sched_param *'
| `-NoThrowAttr 0x558416091268 <col:88>
|-FunctionDecl 0x558416091588 <line:115:1, line:116:85> line:115:12 sched_setscheduler 'int (__pid_t, int, const struct sched_param *)' extern
| |-ParmVarDecl 0x5584160912d0 <col:32, col:40> col:40 __pid '__pid_t':'int'
| |-ParmVarDecl 0x5584160913b0 <col:47, col:51> col:51 __policy 'int'
| |-ParmVarDecl 0x558416091440 <line:116:11, col:37> col:37 __param 'const struct sched_param *'
| `-NoThrowAttr 0x558416091640 <col:62>
|-FunctionDecl 0x5584160917b8 <line:117:1, col:86> col:12 sched_getscheduler 'int (__pid_t)' extern
| |-ParmVarDecl 0x5584160916a8 <col:32, col:40> col:40 __pid '__pid_t':'int'
| `-NoThrowAttr 0x558416091860 <col:63>
|-FunctionDecl 0x558416091988 <line:118:1, col:70> col:12 sched_yield 'int (void)' extern
| `-NoThrowAttr 0x558416091a28 <col:47>
|-FunctionDecl 0x558416091b30 <line:119:1, col:92> col:12 sched_get_priority_max 'int (int)' extern
| |-ParmVarDecl 0x558416091a98 <col:36, col:40> col:40 __algorithm 'int'
| `-NoThrowAttr 0x558416091bd8 <col:69>
|-FunctionDecl 0x558416091ce0 <line:120:1, col:92> col:12 sched_get_priority_min 'int (int)' extern
| |-ParmVarDecl 0x558416091c48 <col:36, col:40> col:40 __algorithm 'int'
| `-NoThrowAttr 0x558416091d88 <col:69>
|-FunctionDecl 0x558416092048 <line:121:1, col:111> col:12 sched_rr_get_interval 'int (__pid_t, struct timespec *)' extern
| |-ParmVarDecl 0x558416091df0 <col:35, col:43> col:43 __pid '__pid_t':'int'
| |-ParmVarDecl 0x558416091f28 <col:50, col:67> col:67 __t 'struct timespec *'
| `-NoThrowAttr 0x5584160920f8 <col:88>
|-TypedefDecl 0x558416092188 <line:125:1, col:19> col:19 referenced clock_t '__clock_t':'long'
| `-TypedefType 0x558416092150 '__clock_t' sugar
|   |-Typedef 0x55841608c548 '__clock_t'
|   `-BuiltinType 0x558416024f30 'long'
|-TypedefDecl 0x558416092218 <line:128:1, col:21> col:21 referenced clockid_t '__clockid_t':'int'
| `-TypedefType 0x5584160921e0 '__clockid_t' sugar
|   |-Typedef 0x55841608c938 '__clockid_t'
|   `-BuiltinType 0x558416024f10 'int'
|-TypedefDecl 0x5584160922a8 <line:129:1, col:19> col:19 referenced timer_t '__timer_t':'void *'
| `-TypedefType 0x558416092270 '__timer_t' sugar
|   |-Typedef 0x55841608c9a8 '__timer_t'
|   `-PointerType 0x558416025630 'void *'
|     `-BuiltinType 0x558416024e70 'void'
|-RecordDecl 0x558416092300 <line:131:1, line:144:1> line:131:8 struct tm definition
| |-FieldDecl 0x5584160923d8 <line:133:3, col:7> col:7 tm_sec 'int'
| |-FieldDecl 0x558416092440 <line:134:3, col:7> col:7 tm_min 'int'
| |-FieldDecl 0x5584160924a8 <line:135:3, col:7> col:7 tm_hour 'int'
| |-FieldDecl 0x558416092510 <line:136:3, col:7> col:7 tm_mday 'int'
| |-FieldDecl 0x558416092578 <line:137:3, col:7> col:7 tm_mon 'int'
| |-FieldDecl 0x5584160925e0 <line:138:3, col:7> col:7 tm_year 'int'
| |-FieldDecl 0x558416092648 <line:139:3, col:7> col:7 tm_wday 'int'
| |-FieldDecl 0x5584160926b0 <line:140:3, col:7> col:7 tm_yday 'int'
| |-FieldDecl 0x558416092718 <line:141:3, col:7> col:7 tm_isdst 'int'
| |-FieldDecl 0x558416092780 <line:142:3, col:12> col:12 tm_gmtoff 'long'
| `-FieldDecl 0x5584160927e8 <line:143:3, col:15> col:15 tm_zone 'const char *'
|-RecordDecl 0x558416092838 <line:147:1, line:151:3> line:147:8 struct itimerspec definition
| |-FieldDecl 0x558416092908 <line:149:5, col:21> col:21 it_interval 'struct timespec':'struct timespec'
| `-FieldDecl 0x558416092978 <line:150:5, col:21> col:21 it_value 'struct timespec':'struct timespec'
|-RecordDecl 0x558416092a20 <line:152:1, col:8> col:8 struct sigevent
|-FunctionDecl 0x558416092bf0 <line:154:1, col:68> col:16 clock 'clock_t (void)' extern
| `-NoThrowAttr 0x558416092c90 <col:45>
|-FunctionDecl 0x558416092e70 <line:155:1, col:77> col:15 time 'time_t (time_t *)' extern
| |-ParmVarDecl 0x558416092d60 <col:21, col:29> col:29 __timer 'time_t *'
| `-NoThrowAttr 0x558416092f18 <col:54>
|-FunctionDecl 0x558416093118 <line:156:1, line:157:73> line:156:15 difftime 'double (time_t, time_t)' extern
| |-ParmVarDecl 0x558416092f80 <col:25, col:32> col:32 __time1 'time_t':'long'
| |-ParmVarDecl 0x558416092ff8 <col:41, col:48> col:48 __time0 'time_t':'long'
| |-NoThrowAttr 0x5584160931c8 <line:157:22>
| `-ConstAttr 0x558416093220 <col:63>
|-FunctionDecl 0x558416094050 <line:158:1, col:79> col:15 mktime 'time_t (struct tm *)' extern
| |-ParmVarDecl 0x558416093318 <col:23, col:34> col:34 __tp 'struct tm *'
| `-NoThrowAttr 0x5584160940f8 <col:56>
|-FunctionDecl 0x5584160944a0 <line:159:1, line:161:77> line:159:15 strftime 'size_t (char *restrict, size_t, const char *restrict, const struct tm *restrict)' extern
| |-ParmVarDecl 0x558416094168 <col:25, col:42> col:42 __s 'char *restrict'
| |-ParmVarDecl 0x5584160941e0 <col:47, col:54> col:54 __maxsize 'size_t':'unsigned long'
| |-ParmVarDecl 0x558416094260 <line:160:4, col:27> col:27 __format 'const char *restrict'
| |-ParmVarDecl 0x558416094358 <line:161:4, col:32> col:32 __tp 'const struct tm *restrict'
| `-NoThrowAttr 0x558416094560 <col:54>
|-RecordDecl 0x5584160945b8 <line:163:9, line:170:1> line:163:16 struct __locale_struct definition
| |-RecordDecl 0x558416094668 parent 0x558416024e18 <line:165:3, col:10> col:10 struct __locale_data
| |-FieldDecl 0x5584160948c8 <col:3, col:37> col:25 __locales 'struct __locale_data *[13]'
| |-FieldDecl 0x558416094968 <line:166:3, col:29> col:29 __ctype_b 'const unsigned short *'
| |-FieldDecl 0x5584160949d0 <line:167:3, col:14> col:14 __ctype_tolower 'const int *'
| |-FieldDecl 0x558416094a38 <line:168:3, col:14> col:14 __ctype_toupper 'const int *'
| `-FieldDecl 0x558416094b28 <line:169:3, col:25> col:15 __names 'const char *[13]'
|-TypedefDecl 0x558416094c48 <line:163:1, line:170:4> col:4 referenced __locale_t 'struct __locale_struct *'
| `-PointerType 0x558416094bf0 'struct __locale_struct *'
|   `-ElaboratedType 0x558416094b80 'struct __locale_struct' sugar
|     `-RecordType 0x558416094640 'struct __locale_struct'
|       `-Record 0x5584160945b8 '__locale_struct'
|-TypedefDecl 0x558416094cf8 <line:171:1, col:20> col:20 locale_t '__locale_t':'struct __locale_struct *'
| `-TypedefType 0x558416094cc0 '__locale_t' sugar
|   |-Typedef 0x558416094c48 '__locale_t'
|   `-PointerType 0x558416094bf0 'struct __locale_struct *'
|     `-ElaboratedType 0x558416094b80 'struct __locale_struct' sugar
|       `-RecordType 0x558416094640 'struct __locale_struct'
|         `-Record 0x5584160945b8 '__locale_struct'
|-FunctionDecl 0x558416096110 <line:172:1, line:175:63> line:172:15 strftime_l 'size_t (char *restrict, size_t, const char *restrict, const struct tm *restrict, __locale_t)' extern
| |-ParmVarDecl 0x558416094d68 <col:27, col:44> col:44 __s 'char *restrict'
| |-ParmVarDecl 0x558416094de0 <col:49, col:56> col:56 __maxsize 'size_t':'unsigned long'
| |-ParmVarDecl 0x558416094e60 <line:173:6, col:29> col:29 __format 'const char *restrict'
| |-ParmVarDecl 0x558416094ef0 <line:174:6, col:34> col:34 __tp 'const struct tm *restrict'
| |-ParmVarDecl 0x558416094f68 <line:175:6, col:17> col:17 __loc '__locale_t':'struct __locale_struct *'
| `-NoThrowAttr 0x5584160961d8 <col:40>
|-FunctionDecl 0x5584160963c8 <line:177:1, col:89> col:19 gmtime 'struct tm *(const time_t *)' extern
| |-ParmVarDecl 0x5584160962a0 <col:27, col:41> col:41 __timer 'const time_t *'
| `-NoThrowAttr 0x558416096470 <col:66>
|-FunctionDecl 0x558416096580 <line:178:1, col:92> col:19 localtime 'struct tm *(const time_t *)' extern
| |-ParmVarDecl 0x5584160964d8 <col:30, col:44> col:44 __timer 'const time_t *'
| `-NoThrowAttr 0x558416096628 <col:69>
|-FunctionDecl 0x558416096858 <line:180:1, line:181:75> line:180:19 gmtime_r 'struct tm *(const time_t *restrict, struct tm *restrict)' extern
| |-ParmVarDecl 0x558416096690 <col:29, col:54> col:54 __timer 'const time_t *restrict'
| |-ParmVarDecl 0x558416096720 <line:181:8, col:30> col:30 __tp 'struct tm *restrict'
| `-NoThrowAttr 0x558416096908 <col:52>
|-FunctionDecl 0x558416096ab0 <line:182:1, line:183:78> line:182:19 localtime_r 'struct tm *(const time_t *restrict, struct tm *restrict)' extern
| |-ParmVarDecl 0x558416096970 <col:32, col:57> col:57 __timer 'const time_t *restrict'
| |-ParmVarDecl 0x558416096a00 <line:183:11, col:33> col:33 __tp 'struct tm *restrict'
| `-NoThrowAttr 0x558416096b60 <col:55>
|-FunctionDecl 0x558416096cf8 <line:185:1, col:85> col:14 asctime 'char *(const struct tm *)' extern
| |-ParmVarDecl 0x558416096be0 <col:23, col:40> col:40 __tp 'const struct tm *'
| `-NoThrowAttr 0x558416096da0 <col:62>
|-FunctionDecl 0x558416096f18 <line:186:1, col:83> col:14 ctime 'char *(const time_t *)' extern
| |-ParmVarDecl 0x558416096e08 <col:21, col:35> col:35 __timer 'const time_t *'
| `-NoThrowAttr 0x558416096fc0 <col:60>
|-FunctionDecl 0x5584160972b8 <line:188:1, line:189:67> line:188:14 asctime_r 'char *(const struct tm *restrict, char *restrict)' extern
| |-ParmVarDecl 0x558416097118 <col:25, col:53> col:53 __tp 'const struct tm *restrict'
| |-ParmVarDecl 0x558416097198 <line:189:4, col:21> col:21 __buf 'char *restrict'
| `-NoThrowAttr 0x558416097368 <col:44>
|-FunctionDecl 0x558416097578 <line:190:1, line:191:72> line:190:14 ctime_r 'char *(const time_t *restrict, char *restrict)' extern
| |-ParmVarDecl 0x5584160973d0 <col:23, col:48> col:48 __timer 'const time_t *restrict'
| |-ParmVarDecl 0x558416097450 <line:191:9, col:26> col:26 __buf 'char *restrict'
| `-NoThrowAttr 0x558416097628 <col:49>
|-VarDecl 0x558416097728 <line:192:1, col:24> col:14 __tzname 'char *[2]' extern
|-VarDecl 0x5584160977a8 <line:193:1, col:12> col:12 __daylight 'int' extern
|-VarDecl 0x558416097828 <line:194:1, col:17> col:17 __timezone 'long' extern
|-VarDecl 0x5584160978f0 <line:195:1, col:22> col:14 tzname 'char *[2]' extern
|-FunctionDecl 0x558416097a20 <line:196:1, col:65> col:13 tzset 'void (void)' extern
| `-NoThrowAttr 0x558416097ac0 <col:42>
|-VarDecl 0x558416097b30 <line:197:1, col:12> col:12 daylight 'int' extern
|-VarDecl 0x558416097bb0 <line:198:1, col:17> col:17 timezone 'long' extern
|-FunctionDecl 0x558416097d38 <line:199:1, col:80> col:12 stime 'int (const time_t *)' extern
| |-ParmVarDecl 0x558416097c28 <col:19, col:33> col:33 __when 'const time_t *'
| `-NoThrowAttr 0x558416097de0 <col:57>
|-FunctionDecl 0x558416097ef0 <line:200:1, col:79> col:15 timegm 'time_t (struct tm *)' extern
| |-ParmVarDecl 0x558416097e60 <col:23, col:34> col:34 __tp 'struct tm *'
| `-NoThrowAttr 0x558416097f98 <col:56>
|-FunctionDecl 0x5584160980d0 <line:201:1, col:82> col:15 timelocal 'time_t (struct tm *)' extern
| |-ParmVarDecl 0x558416098018 <col:26, col:37> col:37 __tp 'struct tm *'
| `-NoThrowAttr 0x558416098178 <col:59>
|-FunctionDecl 0x558416098280 <line:202:1, col:99> col:12 dysize 'int (int)' extern
| |-ParmVarDecl 0x5584160981e8 <col:20, col:24> col:24 __year 'int'
| |-NoThrowAttr 0x558416098328 <col:48>
| `-ConstAttr 0x558416098380 <col:89>
|-FunctionDecl 0x5584160985e8 <line:203:1, line:204:37> line:203:12 nanosleep 'int (const struct timespec *, struct timespec *)' extern
| |-ParmVarDecl 0x558416098438 <col:23, col:46> col:46 __requested_time 'const struct timespec *'
| `-ParmVarDecl 0x5584160984c8 <line:204:9, col:26> col:26 __remaining 'struct timespec *'
|-FunctionDecl 0x558416098848 <line:205:1, col:111> col:12 clock_getres 'int (clockid_t, struct timespec *)' extern
| |-ParmVarDecl 0x5584160986d8 <col:26, col:36> col:36 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x558416098768 <col:48, col:65> col:65 __res 'struct timespec *'
| `-NoThrowAttr 0x5584160988f8 <col:88>
|-FunctionDecl 0x558416098a90 <line:206:1, col:111> col:12 clock_gettime 'int (clockid_t, struct timespec *)' extern
| |-ParmVarDecl 0x558416098960 <col:27, col:37> col:37 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x5584160989f0 <col:49, col:66> col:66 __tp 'struct timespec *'
| `-NoThrowAttr 0x558416098b40 <col:88>
|-FunctionDecl 0x558416098d58 <line:207:1, line:208:45> line:207:12 clock_settime 'int (clockid_t, const struct timespec *)' extern
| |-ParmVarDecl 0x558416098ba8 <col:27, col:37> col:37 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x558416098c38 <col:49, col:72> col:72 __tp 'const struct timespec *'
| `-NoThrowAttr 0x558416098e08 <line:208:22>
|-FunctionDecl 0x558416099178 <line:209:1, line:211:30> line:209:12 clock_nanosleep 'int (clockid_t, int, const struct timespec *, struct timespec *)' extern
| |-ParmVarDecl 0x558416098e70 <col:29, col:39> col:39 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x558416098ef0 <col:51, col:55> col:55 __flags 'int'
| |-ParmVarDecl 0x558416098f80 <line:210:8, col:31> col:31 __req 'const struct timespec *'
| `-ParmVarDecl 0x558416099010 <line:211:8, col:25> col:25 __rem 'struct timespec *'
|-FunctionDecl 0x558416099478 <line:212:1, col:108> col:12 clock_getcpuclockid 'int (pid_t, clockid_t *)' extern
| |-ParmVarDecl 0x558416099278 <col:33, col:39> col:39 __pid 'pid_t':'int'
| |-ParmVarDecl 0x558416099350 <col:46, col:57> col:57 __clock_id 'clockid_t *'
| `-NoThrowAttr 0x558416099528 <col:85>
|-FunctionDecl 0x558416099918 <line:213:1, line:215:75> line:213:12 timer_create 'int (clockid_t, struct sigevent *restrict, timer_t *restrict)' extern
| |-ParmVarDecl 0x558416099590 <col:26, col:36> col:36 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x5584160996c8 <line:214:5, col:33> col:33 __evp 'struct sigevent *restrict'
| |-ParmVarDecl 0x5584160997d0 <line:215:5, col:25> col:25 __timerid 'timer_t *restrict'
| `-NoThrowAttr 0x5584160999d0 <col:52>
|-FunctionDecl 0x558416099b48 <line:216:1, col:84> col:12 timer_delete 'int (timer_t)' extern
| |-ParmVarDecl 0x558416099a38 <col:26, col:34> col:34 __timerid 'timer_t':'void *'
| `-NoThrowAttr 0x558416099bf0 <col:61>
|-FunctionDecl 0x55841609a0f0 <line:217:1, line:219:85> line:217:12 timer_settime 'int (timer_t, int, const struct itimerspec *restrict, struct itimerspec *restrict)' extern
| |-ParmVarDecl 0x558416099c58 <col:27, col:35> col:35 __timerid 'timer_t':'void *'
| |-ParmVarDecl 0x558416099cd8 <col:46, col:50> col:50 __flags 'int'
| |-ParmVarDecl 0x558416099e08 <line:218:6, col:42> col:42 __value 'const struct itimerspec *restrict'
| |-ParmVarDecl 0x558416099ef8 <line:219:6, col:36> col:36 __ovalue 'struct itimerspec *restrict'
| `-NoThrowAttr 0x55841609a1b0 <col:62>
|-FunctionDecl 0x55841609a3c8 <line:220:1, line:221:45> line:220:12 timer_gettime 'int (timer_t, struct itimerspec *)' extern
| |-ParmVarDecl 0x55841609a218 <col:27, col:35> col:35 __timerid 'timer_t':'void *'
| |-ParmVarDecl 0x55841609a2a8 <col:46, col:65> col:65 __value 'struct itimerspec *'
| `-NoThrowAttr 0x55841609a478 <line:221:22>
|-FunctionDecl 0x55841609a578 <line:222:1, col:88> col:12 timer_getoverrun 'int (timer_t)' extern
| |-ParmVarDecl 0x55841609a4e0 <col:30, col:38> col:38 __timerid 'timer_t':'void *'
| `-NoThrowAttr 0x55841609a620 <col:65>
|-TypedefDecl 0x55841609a690 <line:224:1, col:27> col:27 referenced pthread_t 'unsigned long'
| `-BuiltinType 0x558416024fd0 'unsigned long'
|-RecordDecl 0x55841609a6e8 <line:225:1, line:229:1> line:225:7 union pthread_attr_t definition
| |-FieldDecl 0x55841609a830 <line:227:3, col:17> col:8 __size 'char [56]'
| `-FieldDecl 0x55841609a898 <line:228:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x55841609a948 <line:230:1, col:30> col:30 referenced pthread_attr_t 'union pthread_attr_t':'union pthread_attr_t'
| `-ElaboratedType 0x55841609a8f0 'union pthread_attr_t' sugar
|   `-RecordType 0x55841609a770 'union pthread_attr_t'
|     `-Record 0x55841609a6e8 'pthread_attr_t'
|-RecordDecl 0x55841609a9a0 <line:231:9, line:235:1> line:231:16 struct __pthread_internal_list definition
| |-FieldDecl 0x55841609ab18 <line:233:3, col:35> col:35 __prev 'struct __pthread_internal_list *'
| `-FieldDecl 0x55841609ab90 <line:234:3, col:35> col:35 __next 'struct __pthread_internal_list *'
|-TypedefDecl 0x55841609ac40 <line:231:1, line:235:3> col:3 referenced __pthread_list_t 'struct __pthread_internal_list':'struct __pthread_internal_list'
| `-ElaboratedType 0x55841609abe0 'struct __pthread_internal_list' sugar
|   `-RecordType 0x55841609aa20 'struct __pthread_internal_list'
|     `-Record 0x55841609a9a0 '__pthread_internal_list'
|-RecordDecl 0x55841609acb0 <line:236:9, line:250:1> line:236:9 union definition
| |-RecordDecl 0x55841609ad58 parent 0x558416024e18 <line:238:3, line:247:3> line:238:10 struct __pthread_mutex_s definition
| | |-FieldDecl 0x55841609ae30 <line:240:5, col:9> col:9 __lock 'int'
| | |-FieldDecl 0x55841609ae98 <line:241:5, col:18> col:18 __count 'unsigned int'
| | |-FieldDecl 0x55841609af00 <line:242:5, col:9> col:9 __owner 'int'
| | |-FieldDecl 0x55841609af68 <line:243:5, col:18> col:18 __nusers 'unsigned int'
| | |-FieldDecl 0x55841609afd0 <line:244:5, col:9> col:9 __kind 'int'
| | |-FieldDecl 0x55841609b038 <line:245:5, col:9> col:9 __spins 'int'
| | `-FieldDecl 0x55841609f110 <line:246:5, col:22> col:22 __list '__pthread_list_t':'struct __pthread_internal_list'
| |-FieldDecl 0x55841609f1c0 <line:238:3, line:247:5> col:5 __data 'struct __pthread_mutex_s':'struct __pthread_mutex_s'
| |-FieldDecl 0x55841609f2b0 <line:248:3, col:17> col:8 __size 'char [40]'
| `-FieldDecl 0x55841609f318 <line:249:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x55841609f4a0 <line:236:1, line:250:3> col:3 referenced pthread_mutex_t 'union pthread_mutex_t':'pthread_mutex_t'
| `-ElaboratedType 0x55841609f440 'union pthread_mutex_t' sugar
|   `-RecordType 0x55841609ad30 'pthread_mutex_t'
|     `-Record 0x55841609acb0 ''
|-RecordDecl 0x55841609f510 <line:251:9, line:255:1> line:251:9 union definition
| |-FieldDecl 0x55841609f650 <line:253:3, col:16> col:8 __size 'char [4]'
| `-FieldDecl 0x55841609f6b8 <line:254:3, col:7> col:7 __align 'int'
|-TypedefDecl 0x55841609f770 <line:251:1, line:255:3> col:3 referenced pthread_mutexattr_t 'union pthread_mutexattr_t':'pthread_mutexattr_t'
| `-ElaboratedType 0x55841609f710 'union pthread_mutexattr_t' sugar
|   `-RecordType 0x55841609f590 'pthread_mutexattr_t'
|     `-Record 0x55841609f510 ''
|-RecordDecl 0x55841609f7e0 <line:256:9, line:271:1> line:256:9 union definition
| |-RecordDecl 0x55841609f888 <line:258:3, line:268:3> line:258:3 struct definition
| | |-FieldDecl 0x55841609f950 <line:260:5, col:9> col:9 __lock 'int'
| | |-FieldDecl 0x55841609f9b8 <line:261:5, col:18> col:18 __futex 'unsigned int'
| | |-FieldDecl 0x55841609fa20 <line:262:19, col:42> col:42 __total_seq 'unsigned long long'
| | |-FieldDecl 0x55841609fa88 <line:263:19, col:42> col:42 __wakeup_seq 'unsigned long long'
| | |-FieldDecl 0x55841609faf0 <line:264:19, col:42> col:42 __woken_seq 'unsigned long long'
| | |-FieldDecl 0x55841609fb58 <line:265:5, col:11> col:11 __mutex 'void *'
| | |-FieldDecl 0x55841609fbc0 <line:266:5, col:18> col:18 __nwaiters 'unsigned int'
| | `-FieldDecl 0x55841609fc28 <line:267:5, col:18> col:18 __broadcast_seq 'unsigned int'
| |-FieldDecl 0x55841609fce0 <line:258:3, line:268:5> col:5 __data 'struct (anonymous struct at ./split_4/rfi006_tso.oepc_false-unreach-call.i:258:3)':'struct pthread_cond_t::(anonymous at ./split_4/rfi006_tso.oepc_false-unreach-call.i:258:3)'
| |-FieldDecl 0x55841609fdd0 <line:269:3, col:17> col:8 __size 'char [48]'
| `-FieldDecl 0x55841609fe38 <line:270:17, col:31> col:31 __align 'long long'
|-TypedefDecl 0x55841609ff70 <line:256:1, line:271:3> col:3 referenced pthread_cond_t 'union pthread_cond_t':'pthread_cond_t'
| `-ElaboratedType 0x55841609ff10 'union pthread_cond_t' sugar
|   `-RecordType 0x55841609f860 'pthread_cond_t'
|     `-Record 0x55841609f7e0 ''
|-RecordDecl 0x55841609ffe0 <line:272:9, line:276:1> line:272:9 union definition
| |-FieldDecl 0x5584160a1130 <line:274:3, col:16> col:8 __size 'char [4]'
| `-FieldDecl 0x5584160a1198 <line:275:3, col:7> col:7 __align 'int'
|-TypedefDecl 0x5584160a1250 <line:272:1, line:276:3> col:3 referenced pthread_condattr_t 'union pthread_condattr_t':'pthread_condattr_t'
| `-ElaboratedType 0x5584160a11f0 'union pthread_condattr_t' sugar
|   `-RecordType 0x5584160a0060 'pthread_condattr_t'
|     `-Record 0x55841609ffe0 ''
|-TypedefDecl 0x5584160a12d8 <line:277:1, col:22> col:22 referenced pthread_key_t 'unsigned int'
| `-BuiltinType 0x558416024fb0 'unsigned int'
|-TypedefDecl 0x5584160a1348 <line:278:1, col:13> col:13 referenced pthread_once_t 'int'
| `-BuiltinType 0x558416024f10 'int'
|-RecordDecl 0x5584160a13a0 <line:279:9, line:297:1> line:279:9 union definition
| |-RecordDecl 0x5584160a1448 <line:281:3, line:294:3> line:281:3 struct definition
| | |-FieldDecl 0x5584160a1510 <line:283:5, col:9> col:9 __lock 'int'
| | |-FieldDecl 0x5584160a1578 <line:284:5, col:18> col:18 __nr_readers 'unsigned int'
| | |-FieldDecl 0x5584160a15e0 <line:285:5, col:18> col:18 __readers_wakeup 'unsigned int'
| | |-FieldDecl 0x5584160a1648 <line:286:5, col:18> col:18 __writer_wakeup 'unsigned int'
| | |-FieldDecl 0x5584160a16b0 <line:287:5, col:18> col:18 __nr_readers_queued 'unsigned int'
| | |-FieldDecl 0x5584160a1718 <line:288:5, col:18> col:18 __nr_writers_queued 'unsigned int'
| | |-FieldDecl 0x5584160a1780 <line:289:5, col:9> col:9 __writer 'int'
| | |-FieldDecl 0x5584160a17e8 <line:290:5, col:9> col:9 __shared 'int'
| | |-FieldDecl 0x5584160a1850 <line:291:5, col:23> col:23 __pad1 'unsigned long'
| | |-FieldDecl 0x5584160a18b8 <line:292:5, col:23> col:23 __pad2 'unsigned long'
| | `-FieldDecl 0x5584160a1920 <line:293:5, col:18> col:18 __flags 'unsigned int'
| |-FieldDecl 0x5584160a19d0 <line:281:3, line:294:5> col:5 __data 'struct (anonymous struct at ./split_4/rfi006_tso.oepc_false-unreach-call.i:281:3)':'struct pthread_rwlock_t::(anonymous at ./split_4/rfi006_tso.oepc_false-unreach-call.i:281:3)'
| |-FieldDecl 0x5584160a1a78 <line:295:3, col:17> col:8 __size 'char [56]'
| `-FieldDecl 0x5584160a1ae0 <line:296:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x5584160a1c30 <line:279:1, line:297:3> col:3 referenced pthread_rwlock_t 'union pthread_rwlock_t':'pthread_rwlock_t'
| `-ElaboratedType 0x5584160a1bd0 'union pthread_rwlock_t' sugar
|   `-RecordType 0x5584160a1420 'pthread_rwlock_t'
|     `-Record 0x5584160a13a0 ''
|-RecordDecl 0x5584160a1ca0 <line:298:9, line:302:1> line:298:9 union definition
| |-FieldDecl 0x5584160a1de0 <line:300:3, col:16> col:8 __size 'char [8]'
| `-FieldDecl 0x5584160a1e48 <line:301:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x5584160a1f00 <line:298:1, line:302:3> col:3 referenced pthread_rwlockattr_t 'union pthread_rwlockattr_t':'pthread_rwlockattr_t'
| `-ElaboratedType 0x5584160a1ea0 'union pthread_rwlockattr_t' sugar
|   `-RecordType 0x5584160a1d20 'pthread_rwlockattr_t'
|     `-Record 0x5584160a1ca0 ''
|-TypedefDecl 0x5584160a1f88 <line:303:1, col:22> col:22 referenced pthread_spinlock_t 'volatile int'
| `-QualType 0x558416024f14 'volatile int' volatile
|   `-BuiltinType 0x558416024f10 'int'
|-RecordDecl 0x5584160a1fe0 <line:304:9, line:308:1> line:304:9 union definition
| |-FieldDecl 0x5584160a3140 <line:306:3, col:17> col:8 __size 'char [32]'
| `-FieldDecl 0x5584160a31a8 <line:307:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x5584160a3260 <line:304:1, line:308:3> col:3 referenced pthread_barrier_t 'union pthread_barrier_t':'pthread_barrier_t'
| `-ElaboratedType 0x5584160a3200 'union pthread_barrier_t' sugar
|   `-RecordType 0x5584160a2060 'pthread_barrier_t'
|     `-Record 0x5584160a1fe0 ''
|-RecordDecl 0x5584160a32d0 <line:309:9, line:313:1> line:309:9 union definition
| |-FieldDecl 0x5584160a33d0 <line:311:3, col:16> col:8 __size 'char [4]'
| `-FieldDecl 0x5584160a3438 <line:312:3, col:7> col:7 __align 'int'
|-TypedefDecl 0x5584160a34f0 <line:309:1, line:313:3> col:3 referenced pthread_barrierattr_t 'union pthread_barrierattr_t':'pthread_barrierattr_t'
| `-ElaboratedType 0x5584160a3490 'union pthread_barrierattr_t' sugar
|   `-RecordType 0x5584160a3350 'pthread_barrierattr_t'
|     `-Record 0x5584160a32d0 ''
|-TypedefDecl 0x5584160a3608 <line:314:1, col:29> col:18 referenced __jmp_buf 'long [8]'
| `-ConstantArrayType 0x5584160a35a0 'long [8]' 8 
|   `-BuiltinType 0x558416024f30 'long'
|-EnumDecl 0x5584160a3660 <line:315:1, line:319:1> line:315:1
| |-EnumConstantDecl 0x5584160a3728 <line:317:3> col:3 PTHREAD_CREATE_JOINABLE 'int'
| `-EnumConstantDecl 0x5584160a3778 <line:318:3> col:3 PTHREAD_CREATE_DETACHED 'int'
|-EnumDecl 0x5584160a37c8 <line:320:1, line:331:1> line:320:1
| |-EnumConstantDecl 0x5584160a3898 <line:322:3> col:3 referenced PTHREAD_MUTEX_TIMED_NP 'int'
| |-EnumConstantDecl 0x5584160a38e8 <line:323:3> col:3 referenced PTHREAD_MUTEX_RECURSIVE_NP 'int'
| |-EnumConstantDecl 0x5584160a3938 <line:324:3> col:3 referenced PTHREAD_MUTEX_ERRORCHECK_NP 'int'
| |-EnumConstantDecl 0x5584160a3988 <line:325:3> col:3 PTHREAD_MUTEX_ADAPTIVE_NP 'int'
| |-EnumConstantDecl 0x5584160a3a10 <line:327:3, col:26> col:3 referenced PTHREAD_MUTEX_NORMAL 'int'
| | `-ConstantExpr 0x5584160a39f8 <col:26> 'int'
| |   `-DeclRefExpr 0x5584160a39d8 <col:26> 'int' EnumConstant 0x5584160a3898 'PTHREAD_MUTEX_TIMED_NP' 'int'
| |-EnumConstantDecl 0x5584160a3a98 <line:328:3, col:29> col:3 PTHREAD_MUTEX_RECURSIVE 'int'
| | `-ConstantExpr 0x5584160a3a80 <col:29> 'int'
| |   `-DeclRefExpr 0x5584160a3a60 <col:29> 'int' EnumConstant 0x5584160a38e8 'PTHREAD_MUTEX_RECURSIVE_NP' 'int'
| |-EnumConstantDecl 0x5584160a3b20 <line:329:3, col:30> col:3 PTHREAD_MUTEX_ERRORCHECK 'int'
| | `-ConstantExpr 0x5584160a3b08 <col:30> 'int'
| |   `-DeclRefExpr 0x5584160a3ae8 <col:30> 'int' EnumConstant 0x5584160a3938 'PTHREAD_MUTEX_ERRORCHECK_NP' 'int'
| `-EnumConstantDecl 0x5584160a3ba8 <line:330:3, col:27> col:3 PTHREAD_MUTEX_DEFAULT 'int'
|   `-ConstantExpr 0x5584160a3b90 <col:27> 'int'
|     `-DeclRefExpr 0x5584160a3b70 <col:27> 'int' EnumConstant 0x5584160a3a10 'PTHREAD_MUTEX_NORMAL' 'int'
|-EnumDecl 0x5584160a3bf8 <line:332:1, line:338:1> line:332:1
| |-EnumConstantDecl 0x5584160a3cc8 <line:334:3> col:3 referenced PTHREAD_MUTEX_STALLED 'int'
| |-EnumConstantDecl 0x5584160a3d50 <line:335:3, col:30> col:3 PTHREAD_MUTEX_STALLED_NP 'int'
| | `-ConstantExpr 0x5584160a3d38 <col:30> 'int'
| |   `-DeclRefExpr 0x5584160a3d18 <col:30> 'int' EnumConstant 0x5584160a3cc8 'PTHREAD_MUTEX_STALLED' 'int'
| |-EnumConstantDecl 0x5584160a3da0 <line:336:3> col:3 referenced PTHREAD_MUTEX_ROBUST 'int'
| `-EnumConstantDecl 0x5584160a3e28 <line:337:3, col:29> col:3 PTHREAD_MUTEX_ROBUST_NP 'int'
|   `-ConstantExpr 0x5584160a3e10 <col:29> 'int'
|     `-DeclRefExpr 0x5584160a3df0 <col:29> 'int' EnumConstant 0x5584160a3da0 'PTHREAD_MUTEX_ROBUST' 'int'
|-EnumDecl 0x5584160a3e78 <line:339:1, line:344:1> line:339:1
| |-EnumConstantDecl 0x5584160a3f48 <line:341:3> col:3 PTHREAD_PRIO_NONE 'int'
| |-EnumConstantDecl 0x5584160a3f98 <line:342:3> col:3 PTHREAD_PRIO_INHERIT 'int'
| `-EnumConstantDecl 0x5584160a3fe8 <line:343:3> col:3 PTHREAD_PRIO_PROTECT 'int'
|-EnumDecl 0x5584160a4038 <line:345:1, line:351:1> line:345:1
| |-EnumConstantDecl 0x5584160a4150 <line:347:3> col:3 referenced PTHREAD_RWLOCK_PREFER_READER_NP 'int'
| |-EnumConstantDecl 0x5584160a41a0 <line:348:3> col:3 PTHREAD_RWLOCK_PREFER_WRITER_NP 'int'
| |-EnumConstantDecl 0x5584160a41f0 <line:349:3> col:3 PTHREAD_RWLOCK_PREFER_WRITER_NONRECURSIVE_NP 'int'
| `-EnumConstantDecl 0x5584160a4278 <line:350:3, col:31> col:3 PTHREAD_RWLOCK_DEFAULT_NP 'int'
|   `-ConstantExpr 0x5584160a4260 <col:31> 'int'
|     `-DeclRefExpr 0x5584160a4240 <col:31> 'int' EnumConstant 0x5584160a4150 'PTHREAD_RWLOCK_PREFER_READER_NP' 'int'
|-EnumDecl 0x5584160a42c8 <line:352:1, line:356:1> line:352:1
| |-EnumConstantDecl 0x5584160a4398 <line:354:3> col:3 PTHREAD_INHERIT_SCHED 'int'
| `-EnumConstantDecl 0x5584160a43e8 <line:355:3> col:3 PTHREAD_EXPLICIT_SCHED 'int'
|-EnumDecl 0x5584160a4438 <line:357:1, line:361:1> line:357:1
| |-EnumConstantDecl 0x5584160a4508 <line:359:3> col:3 PTHREAD_SCOPE_SYSTEM 'int'
| `-EnumConstantDecl 0x5584160a4558 <line:360:3> col:3 PTHREAD_SCOPE_PROCESS 'int'
|-EnumDecl 0x5584160a45a8 <line:362:1, line:366:1> line:362:1
| |-EnumConstantDecl 0x5584160a4678 <line:364:3> col:3 PTHREAD_PROCESS_PRIVATE 'int'
| `-EnumConstantDecl 0x5584160a46c8 <line:365:3> col:3 PTHREAD_PROCESS_SHARED 'int'
|-RecordDecl 0x5584160a4718 <line:367:1, line:373:1> line:367:8 struct _pthread_cleanup_buffer definition
| |-FieldDecl 0x5584160a4958 <line:369:3, col:28> col:10 __routine 'void (*)(void *)'
| |-FieldDecl 0x5584160a49c0 <line:370:3, col:9> col:9 __arg 'void *'
| |-FieldDecl 0x5584160a4a28 <line:371:3, col:7> col:7 __canceltype 'int'
| `-FieldDecl 0x5584160a4b48 <line:372:3, col:35> col:35 __prev 'struct _pthread_cleanup_buffer *'
|-EnumDecl 0x5584160a4b98 <line:374:1, line:378:1> line:374:1
| |-EnumConstantDecl 0x5584160a4c68 <line:376:3> col:3 PTHREAD_CANCEL_ENABLE 'int'
| `-EnumConstantDecl 0x5584160a4cb8 <line:377:3> col:3 PTHREAD_CANCEL_DISABLE 'int'
|-EnumDecl 0x5584160a4d08 <line:379:1, line:383:1> line:379:1
| |-EnumConstantDecl 0x5584160a4dd8 <line:381:3> col:3 PTHREAD_CANCEL_DEFERRED 'int'
| `-EnumConstantDecl 0x5584160a4e28 <line:382:3> col:3 PTHREAD_CANCEL_ASYNCHRONOUS 'int'
|-FunctionDecl 0x5584160a5488 <line:385:1, line:388:96> line:385:12 used pthread_create 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' extern
| |-ParmVarDecl 0x5584160a4f20 <col:28, col:50> col:50 __newthread 'pthread_t *restrict'
| |-ParmVarDecl 0x5584160a5030 <line:386:7, col:40> col:40 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x5584160a5270 <line:387:7, col:39> col:15 __start_routine 'void *(*)(void *)'
| |-ParmVarDecl 0x5584160a52f0 <line:388:7, col:24> col:24 __arg 'void *restrict'
| |-NoThrowAttr 0x5584160a5548 <col:47>
| |-NonNullAttr 0x5584160a55a0 <col:77, col:94> 1 3
| `-CallbackAttr 0x5584160a55d8 <line:385:12> Implicit 2 3
|-FunctionDecl 0x5584160a5700 <line:389:1, col:72> col:13 pthread_exit 'void (void *) __attribute__((noreturn))' extern
| `-ParmVarDecl 0x5584160a5630 <col:27, col:33> col:33 __retval 'void *'
|-FunctionDecl 0x5584160a5958 <line:390:1, col:64> col:12 pthread_join 'int (pthread_t, void **)' extern
| |-ParmVarDecl 0x5584160a57b8 <col:26, col:36> col:36 __th 'pthread_t':'unsigned long'
| `-ParmVarDecl 0x5584160a5838 <col:42, col:49> col:49 __thread_return 'void **'
|-FunctionDecl 0x5584160a5b28 <line:391:1, col:83> col:12 pthread_detach 'int (pthread_t)' extern
| |-ParmVarDecl 0x5584160a5a18 <col:28, col:38> col:38 __th 'pthread_t':'unsigned long'
| `-NoThrowAttr 0x5584160a5bd0 <col:60>
|-FunctionDecl 0x5584160a5d20 <line:392:1, col:105> col:18 pthread_self 'pthread_t (void)' extern
| |-NoThrowAttr 0x5584160a5dc0 <col:54>
| `-ConstAttr 0x5584160a5e18 <col:95>
|-FunctionDecl 0x5584160a5fe8 <line:393:1, line:394:70> line:393:12 pthread_equal 'int (pthread_t, pthread_t)' extern
| |-ParmVarDecl 0x5584160a5e50 <col:27, col:37> col:37 __thread1 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x5584160a5ec8 <col:48, col:58> col:58 __thread2 'pthread_t':'unsigned long'
| |-NoThrowAttr 0x5584160a6098 <line:394:19>
| `-ConstAttr 0x5584160a60f0 <col:60>
|-FunctionDecl 0x5584160a7b08 <line:395:1, col:128> col:12 pthread_attr_init 'int (pthread_attr_t *)' extern
| |-ParmVarDecl 0x5584160a79d0 <col:31, col:47> col:47 __attr 'pthread_attr_t *'
| |-NoThrowAttr 0x5584160a7bb0 <col:71>
| `-NonNullAttr 0x5584160a7c08 <col:112, col:126> 1
|-FunctionDecl 0x5584160a7d10 <line:396:1, line:397:79> line:396:12 pthread_attr_destroy 'int (pthread_attr_t *)' extern
| |-ParmVarDecl 0x5584160a7c58 <col:34, col:50> col:50 __attr 'pthread_attr_t *'
| |-NoThrowAttr 0x5584160a7db8 <line:397:22>
| `-NonNullAttr 0x5584160a7e10 <col:63, col:77> 1
|-FunctionDecl 0x5584160a8038 <line:398:1, line:400:82> line:398:12 pthread_attr_getdetachstate 'int (const pthread_attr_t *, int *)' extern
| |-ParmVarDecl 0x5584160a7e58 <col:41, col:63> col:63 __attr 'const pthread_attr_t *'
| |-ParmVarDecl 0x5584160a7ed8 <line:399:6, col:11> col:11 __detachstate 'int *'
| |-NoThrowAttr 0x5584160a80e8 <line:400:22>
| `-NonNullAttr 0x5584160a8140 <col:63, col:80> 1 2
|-FunctionDecl 0x5584160a8348 <line:401:1, line:403:79> line:401:12 pthread_attr_setdetachstate 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x5584160a8188 <col:41, col:57> col:57 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x5584160a8208 <line:402:6, col:10> col:10 __detachstate 'int'
| |-NoThrowAttr 0x5584160a83f8 <line:403:22>
| `-NonNullAttr 0x5584160a8450 <col:63, col:77> 1
|-FunctionDecl 0x5584160a86a8 <line:404:1, line:406:82> line:404:12 pthread_attr_getguardsize 'int (const pthread_attr_t *, size_t *)' extern
| |-ParmVarDecl 0x5584160a8498 <col:39, col:61> col:61 __attr 'const pthread_attr_t *'
| |-ParmVarDecl 0x5584160a8540 <line:405:11, col:19> col:19 __guardsize 'size_t *'
| |-NoThrowAttr 0x5584160a8758 <line:406:22>
| `-NonNullAttr 0x5584160a87b0 <col:63, col:80> 1 2
|-FunctionDecl 0x5584160a99e8 <line:407:1, line:409:79> line:407:12 pthread_attr_setguardsize 'int (pthread_attr_t *, size_t)' extern
| |-ParmVarDecl 0x5584160a87f8 <col:39, col:55> col:55 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x5584160a8870 <line:408:11, col:18> col:18 __guardsize 'size_t':'unsigned long'
| |-NoThrowAttr 0x5584160a9a98 <line:409:22>
| `-NonNullAttr 0x5584160a9af0 <col:63, col:77> 1
|-FunctionDecl 0x5584160a9d28 <line:410:1, line:412:82> line:410:12 pthread_attr_getschedparam 'int (const pthread_attr_t *restrict, struct sched_param *restrict)' extern
| |-ParmVarDecl 0x5584160a9b38 <col:40, col:73> col:73 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x5584160a9bc8 <line:411:12, col:43> col:43 __param 'struct sched_param *restrict'
| |-NoThrowAttr 0x5584160a9dd8 <line:412:22>
| `-NonNullAttr 0x5584160a9e30 <col:63, col:80> 1 2
|-FunctionDecl 0x5584160aa068 <line:413:1, line:415:97> line:413:12 pthread_attr_setschedparam 'int (pthread_attr_t *restrict, const struct sched_param *restrict)' extern
| |-ParmVarDecl 0x5584160a9e78 <col:40, col:67> col:67 __attr 'pthread_attr_t *restrict'
| |-ParmVarDecl 0x5584160a9f08 <line:414:12, line:415:12> col:12 __param 'const struct sched_param *restrict'
| |-NoThrowAttr 0x5584160aa118 <col:37>
| `-NonNullAttr 0x5584160aa170 <col:78, col:95> 1 2
|-FunctionDecl 0x5584160aa358 <line:416:1, line:418:82> line:416:12 pthread_attr_getschedpolicy 'int (const pthread_attr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x5584160aa1b8 <col:41, line:417:6> col:6 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x5584160aa238 <col:14, col:30> col:30 __policy 'int *restrict'
| |-NoThrowAttr 0x5584160aa408 <line:418:22>
| `-NonNullAttr 0x5584160aa460 <col:63, col:80> 1 2
|-FunctionDecl 0x5584160aa5e8 <line:419:1, line:420:79> line:419:12 pthread_attr_setschedpolicy 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x5584160aa4a8 <col:41, col:57> col:57 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x5584160aa528 <col:65, col:69> col:69 __policy 'int'
| |-NoThrowAttr 0x5584160aa698 <line:420:22>
| `-NonNullAttr 0x5584160aa6f0 <col:63, col:77> 1
|-FunctionDecl 0x5584160aa898 <line:421:1, line:423:82> line:421:12 pthread_attr_getinheritsched 'int (const pthread_attr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x5584160aa738 <col:42, line:422:7> col:7 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x5584160aa7b8 <col:15, col:31> col:31 __inherit 'int *restrict'
| |-NoThrowAttr 0x5584160aa948 <line:423:22>
| `-NonNullAttr 0x5584160aa9c0 <col:63, col:80> 1 2
|-FunctionDecl 0x5584160aab48 <line:424:1, line:426:79> line:424:12 pthread_attr_setinheritsched 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x5584160aaa08 <col:42, col:58> col:58 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x5584160aaa88 <line:425:7, col:11> col:11 __inherit 'int'
| |-NoThrowAttr 0x5584160aabf8 <line:426:22>
| `-NonNullAttr 0x5584160aac50 <col:63, col:77> 1
|-FunctionDecl 0x5584160aadf8 <line:427:1, line:429:82> line:427:12 pthread_attr_getscope 'int (const pthread_attr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x5584160aac98 <col:35, col:68> col:68 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x5584160aad18 <line:428:7, col:23> col:23 __scope 'int *restrict'
| |-NoThrowAttr 0x5584160aaea8 <line:429:22>
| `-NonNullAttr 0x5584160aaf00 <col:63, col:80> 1 2
|-FunctionDecl 0x5584160ab088 <line:430:1, line:431:79> line:430:12 pthread_attr_setscope 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x5584160aaf48 <col:35, col:51> col:51 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x5584160aafc8 <col:59, col:63> col:63 __scope 'int'
| |-NoThrowAttr 0x5584160ab138 <line:431:22>
| `-NonNullAttr 0x5584160ab190 <col:63, col:77> 1
|-FunctionDecl 0x5584160ab3b8 <line:432:1, line:434:115> line:432:12 pthread_attr_getstackaddr 'int (const pthread_attr_t *restrict, void **restrict)' extern
| |-ParmVarDecl 0x5584160ab1d8 <col:39, line:433:11> col:11 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x5584160ab258 <col:19, col:37> col:37 __stackaddr 'void **restrict'
| |-NoThrowAttr 0x5584160ab468 <line:434:22>
| |-NonNullAttr 0x5584160ab4c0 <col:63, col:80> 1 2
| `-DeprecatedAttr 0x5584160ab4f8 <col:100> "" ""
|-FunctionDecl 0x5584160ab708 <line:435:1, line:437:112> line:435:12 pthread_attr_setstackaddr 'int (pthread_attr_t *, void *)' extern
| |-ParmVarDecl 0x5584160ab548 <col:39, col:55> col:55 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x5584160ab5c8 <line:436:11, col:17> col:17 __stackaddr 'void *'
| |-NoThrowAttr 0x5584160ab7b8 <line:437:22>
| |-NonNullAttr 0x5584160ab810 <col:63, col:77> 1
| `-DeprecatedAttr 0x5584160ab848 <col:97> "" ""
|-FunctionDecl 0x5584160aba48 <line:438:1, line:440:82> line:438:12 pthread_attr_getstacksize 'int (const pthread_attr_t *restrict, size_t *restrict)' extern
| |-ParmVarDecl 0x5584160ab898 <col:39, line:439:11> col:11 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x5584160ab910 <col:19, col:38> col:38 __stacksize 'size_t *restrict'
| |-NoThrowAttr 0x5584160abaf8 <line:440:22>
| `-NonNullAttr 0x5584160abb50 <col:63, col:80> 1 2
|-FunctionDecl 0x5584160abcd0 <line:441:1, line:443:79> line:441:12 pthread_attr_setstacksize 'int (pthread_attr_t *, size_t)' extern
| |-ParmVarDecl 0x5584160abb98 <col:39, col:55> col:55 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x5584160abc10 <line:442:11, col:18> col:18 __stacksize 'size_t':'unsigned long'
| |-NoThrowAttr 0x5584160abd80 <line:443:22>
| `-NonNullAttr 0x5584160abdd8 <col:63, col:77> 1
|-FunctionDecl 0x5584160ac0c8 <line:444:1, line:447:85> line:444:12 pthread_attr_getstack 'int (const pthread_attr_t *restrict, void **restrict, size_t *restrict)' extern
| |-ParmVarDecl 0x5584160abe28 <col:35, col:68> col:68 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x5584160abea8 <line:445:7, col:25> col:25 __stackaddr 'void **restrict'
| |-ParmVarDecl 0x5584160abf20 <line:446:7, col:26> col:26 __stacksize 'size_t *restrict'
| |-NoThrowAttr 0x5584160ac180 <line:447:22>
| `-NonNullAttr 0x5584160ac1d8 <col:63, col:83> 1 2 3
|-FunctionDecl 0x5584160ac488 <line:448:1, line:449:100> line:448:12 pthread_attr_setstack 'int (pthread_attr_t *, void *, size_t)' extern
| |-ParmVarDecl 0x5584160ac230 <col:35, col:51> col:51 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x5584160ac2b0 <col:59, col:65> col:65 __stackaddr 'void *'
| |-ParmVarDecl 0x5584160ac328 <line:449:7, col:14> col:14 __stacksize 'size_t':'unsigned long'
| |-NoThrowAttr 0x5584160ac540 <col:43>
| `-NonNullAttr 0x5584160ac598 <col:84, col:98> 1
|-FunctionDecl 0x5584160ac858 <line:450:1, line:452:79> line:450:12 pthread_setschedparam 'int (pthread_t, int, const struct sched_param *)' extern
| |-ParmVarDecl 0x5584160ac5e8 <col:35, col:45> col:45 __target_thread 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x5584160ac668 <col:62, col:66> col:66 __policy 'int'
| |-ParmVarDecl 0x5584160ac6f8 <line:451:7, col:33> col:33 __param 'const struct sched_param *'
| |-NoThrowAttr 0x5584160ac910 <line:452:22>
| `-NonNullAttr 0x5584160ac968 <col:63, col:77> 3
|-FunctionDecl 0x5584160acc78 <line:453:1, line:456:82> line:453:12 pthread_getschedparam 'int (pthread_t, int *restrict, struct sched_param *restrict)' extern
| |-ParmVarDecl 0x5584160ac9e0 <col:35, col:45> col:45 __target_thread 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x5584160aca60 <line:454:7, col:23> col:23 __policy 'int *restrict'
| |-ParmVarDecl 0x5584160acaf0 <line:455:7, col:38> col:38 __param 'struct sched_param *restrict'
| |-NoThrowAttr 0x5584160acd30 <line:456:22>
| `-NonNullAttr 0x5584160acd88 <col:63, col:80> 2 3
|-FunctionDecl 0x5584160acf78 <line:457:1, line:458:45> line:457:12 pthread_setschedprio 'int (pthread_t, int)' extern
| |-ParmVarDecl 0x5584160acdd8 <col:34, col:44> col:44 __target_thread 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x5584160ace58 <col:61, col:65> col:65 __prio 'int'
| `-NoThrowAttr 0x5584160ad028 <line:458:22>
|-FunctionDecl 0x5584160ad3f8 <line:459:1, line:460:71> line:459:12 pthread_once 'int (pthread_once_t *, void (*)(void))' extern
| |-ParmVarDecl 0x5584160ad0f0 <col:26, col:42> col:42 __once_control 'pthread_once_t *'
| |-ParmVarDecl 0x5584160ad290 <line:460:5, col:33> col:12 __init_routine 'void (*)(void)'
| `-NonNullAttr 0x5584160ad4a8 <col:52, col:69> 1 2
|-FunctionDecl 0x5584160ad650 <line:461:1, col:64> col:12 pthread_setcancelstate 'int (int, int *)' extern
| |-ParmVarDecl 0x5584160ad530 <col:36, col:40> col:40 __state 'int'
| `-ParmVarDecl 0x5584160ad5b0 <col:49, col:54> col:54 __oldstate 'int *'
|-FunctionDecl 0x5584160ad838 <line:462:1, col:61> col:12 pthread_setcanceltype 'int (int, int *)' extern
| |-ParmVarDecl 0x5584160ad718 <col:35, col:39> col:39 __type 'int'
| `-ParmVarDecl 0x5584160ad798 <col:47, col:52> col:52 __oldtype 'int *'
|-FunctionDecl 0x5584160ad9f0 <line:463:1, col:42> col:12 pthread_cancel 'int (pthread_t)' extern
| `-ParmVarDecl 0x5584160ad8f8 <col:28, col:38> col:38 __th 'pthread_t':'unsigned long'
|-FunctionDecl 0x5584160adb30 <line:464:1, col:37> col:13 pthread_testcancel 'void (void)' extern
|-RecordDecl 0x5584160adbd0 <line:465:9, line:473:1> line:465:9 struct definition
| |-RecordDecl 0x5584160adc78 <line:467:3, line:471:3> line:467:3 struct definition
| | |-FieldDecl 0x5584160add68 <line:469:5, col:15> col:15 __cancel_jmp_buf '__jmp_buf':'long [8]'
| | `-FieldDecl 0x5584160addd0 <line:470:5, col:9> col:9 __mask_was_saved 'int'
| |-FieldDecl 0x5584160adfa0 <line:467:3, line:471:23> col:5 __cancel_jmp_buf 'struct (anonymous struct at ./split_4/rfi006_tso.oepc_false-unreach-call.i:467:3) [1]'
| `-FieldDecl 0x5584160ae098 <line:472:3, col:16> col:9 __pad 'void *[4]'
|-TypedefDecl 0x5584160ae150 <line:465:1, line:473:3> col:3 referenced __pthread_unwind_buf_t 'struct __pthread_unwind_buf_t':'__pthread_unwind_buf_t'
| |-ElaboratedType 0x5584160ae0f0 'struct __pthread_unwind_buf_t' sugar
| | `-RecordType 0x5584160adc50 '__pthread_unwind_buf_t'
| |   `-Record 0x5584160adbd0 ''
| `-AlignedAttr 0x5584160ae1a8 <col:42> aligned
|   `-<<<NULL>>>
|-RecordDecl 0x5584160ae220 <line:474:1, line:480:1> line:474:8 struct __pthread_cleanup_frame definition
| |-FieldDecl 0x5584160ae380 <line:476:3, col:35> col:10 __cancel_routine 'void (*)(void *)'
| |-FieldDecl 0x5584160ae3e8 <line:477:3, col:9> col:9 __cancel_arg 'void *'
| |-FieldDecl 0x5584160ae450 <line:478:3, col:7> col:7 __do_it 'int'
| `-FieldDecl 0x5584160ae4b8 <line:479:3, col:7> col:7 __cancel_type 'int'
|-FunctionDecl 0x5584160ae6c0 <line:481:1, col:69> col:13 __pthread_register_cancel 'void (__pthread_unwind_buf_t *)' extern
| `-ParmVarDecl 0x5584160ae5b0 <col:40, col:64> col:64 __buf '__pthread_unwind_buf_t *'
|-FunctionDecl 0x5584160ae808 <line:483:1, col:71> col:13 __pthread_unregister_cancel 'void (__pthread_unwind_buf_t *)' extern
| `-ParmVarDecl 0x5584160ae778 <col:42, col:66> col:66 __buf '__pthread_unwind_buf_t *'
|-FunctionDecl 0x5584160aea00 <line:485:1, line:487:31> line:485:13 __pthread_unwind_next 'void (__pthread_unwind_buf_t *) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x5584160ae8c0 <col:36, col:60> col:60 __buf '__pthread_unwind_buf_t *'
| `-WeakAttr 0x5584160aeaa8 <line:487:22>
|-RecordDecl 0x5584160aeb00 <line:489:1, col:8> col:8 struct __jmp_buf_tag
|-FunctionDecl 0x5584160aee18 <line:490:1, col:98> col:12 __sigsetjmp 'int (struct __jmp_buf_tag *, int)' extern
| |-ParmVarDecl 0x5584160aec78 <col:25, col:47> col:47 __env 'struct __jmp_buf_tag *'
| |-ParmVarDecl 0x5584160aecf8 <col:54, col:58> col:58 __savemask 'int'
| |-NoThrowAttr 0x5584160aeec8 <col:86>
| `-ReturnsTwiceAttr 0x5584160aef20 <col:12> Implicit
|-FunctionDecl 0x5584160af248 <line:491:1, line:493:79> line:491:12 pthread_mutex_init 'int (pthread_mutex_t *, const pthread_mutexattr_t *)' extern
| |-ParmVarDecl 0x5584160aeff0 <col:32, col:49> col:49 __mutex 'pthread_mutex_t *'
| |-ParmVarDecl 0x5584160af100 <line:492:11, col:38> col:38 __mutexattr 'const pthread_mutexattr_t *'
| |-NoThrowAttr 0x5584160af2f8 <line:493:22>
| `-NonNullAttr 0x5584160af350 <col:63, col:77> 1
|-FunctionDecl 0x5584160af4c8 <line:494:1, line:495:79> line:494:12 pthread_mutex_destroy 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x5584160af398 <col:35, col:52> col:52 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x5584160af570 <line:495:22>
| `-NonNullAttr 0x5584160af5c8 <col:63, col:77> 1
|-FunctionDecl 0x5584160af6d0 <line:496:1, line:497:68> line:496:12 pthread_mutex_trylock 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x5584160af618 <col:35, col:52> col:52 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x5584160af778 <line:497:22>
| `-NonNullAttr 0x5584160af7d0 <col:52, col:66> 1
|-FunctionDecl 0x5584160af8d0 <line:498:1, line:499:68> line:498:12 pthread_mutex_lock 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x5584160af818 <col:32, col:49> col:49 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x5584160af978 <line:499:22>
| `-NonNullAttr 0x5584160af9d0 <col:52, col:66> 1
|-FunctionDecl 0x5584160b0c28 <line:500:1, line:502:85> line:500:12 pthread_mutex_timedlock 'int (pthread_mutex_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x5584160b0a38 <col:37, col:65> col:65 __mutex 'pthread_mutex_t *restrict'
| |-ParmVarDecl 0x5584160b0ac8 <line:501:9, line:502:9> col:9 __abstime 'const struct timespec *restrict'
| |-NoThrowAttr 0x5584160b0cd8 <col:36>
| `-NonNullAttr 0x5584160b0d30 <col:66, col:83> 1 2
|-FunctionDecl 0x5584160b0e30 <line:503:1, line:504:68> line:503:12 pthread_mutex_unlock 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x5584160b0d78 <col:34, col:51> col:51 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x5584160b0ed8 <line:504:22>
| `-NonNullAttr 0x5584160b0f30 <col:52, col:66> 1
|-FunctionDecl 0x5584160b11c8 <line:505:1, line:508:82> line:505:12 pthread_mutex_getprioceiling 'int (const pthread_mutex_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x5584160b0fe0 <col:42, line:506:18> col:18 __mutex 'const pthread_mutex_t *restrict'
| |-ParmVarDecl 0x5584160b1060 <line:507:7, col:23> col:23 __prioceiling 'int *restrict'
| |-NoThrowAttr 0x5584160b1278 <line:508:22>
| `-NonNullAttr 0x5584160b12d0 <col:63, col:80> 1 2
|-FunctionDecl 0x5584160b1598 <line:509:1, line:512:82> line:509:12 pthread_mutex_setprioceiling 'int (pthread_mutex_t *restrict, int, int *restrict)' extern
| |-ParmVarDecl 0x5584160b1318 <col:42, col:70> col:70 __mutex 'pthread_mutex_t *restrict'
| |-ParmVarDecl 0x5584160b1398 <line:510:7, col:11> col:11 __prioceiling 'int'
| |-ParmVarDecl 0x5584160b1418 <line:511:7, col:23> col:23 __old_ceiling 'int *restrict'
| |-NoThrowAttr 0x5584160b1650 <line:512:22>
| `-NonNullAttr 0x5584160b16a8 <col:63, col:80> 1 3
|-FunctionDecl 0x5584160b17b0 <line:513:1, line:514:79> line:513:12 pthread_mutex_consistent 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x5584160b16f8 <col:38, col:55> col:55 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x5584160b1858 <line:514:22>
| `-NonNullAttr 0x5584160b18b0 <col:63, col:77> 1
|-FunctionDecl 0x5584160b1ad8 <line:515:1, line:516:79> line:515:12 pthread_mutexattr_init 'int (pthread_mutexattr_t *)' extern
| |-ParmVarDecl 0x5584160b1960 <col:36, col:57> col:57 __attr 'pthread_mutexattr_t *'
| |-NoThrowAttr 0x5584160b1b80 <line:516:22>
| `-NonNullAttr 0x5584160b1bd8 <col:63, col:77> 1
|-FunctionDecl 0x5584160b1ce0 <line:517:1, line:518:79> line:517:12 pthread_mutexattr_destroy 'int (pthread_mutexattr_t *)' extern
| |-ParmVarDecl 0x5584160b1c28 <col:39, col:60> col:60 __attr 'pthread_mutexattr_t *'
| |-NoThrowAttr 0x5584160b1d88 <line:518:22>
| `-NonNullAttr 0x5584160b1de0 <col:63, col:77> 1
|-FunctionDecl 0x5584160b2008 <line:519:1, line:522:82> line:519:12 pthread_mutexattr_getpshared 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x5584160b1e28 <col:42, line:520:18> col:18 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x5584160b1ea8 <line:521:7, col:23> col:23 __pshared 'int *restrict'
| |-NoThrowAttr 0x5584160b20b8 <line:522:22>
| `-NonNullAttr 0x5584160b2110 <col:63, col:80> 1 2
|-FunctionDecl 0x5584160b2318 <line:523:1, line:525:79> line:523:12 pthread_mutexattr_setpshared 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x5584160b2158 <col:42, col:63> col:63 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x5584160b21d8 <line:524:7, col:11> col:11 __pshared 'int'
| |-NoThrowAttr 0x5584160b23c8 <line:525:22>
| `-NonNullAttr 0x5584160b2420 <col:63, col:77> 1
|-FunctionDecl 0x5584160b25c8 <line:526:1, line:528:82> line:526:12 pthread_mutexattr_gettype 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x5584160b2468 <col:39, line:527:11> col:11 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x5584160b24e8 <col:19, col:35> col:35 __kind 'int *restrict'
| |-NoThrowAttr 0x5584160b2678 <line:528:22>
| `-NonNullAttr 0x5584160b26d0 <col:63, col:80> 1 2
|-FunctionDecl 0x5584160b2858 <line:529:1, line:530:79> line:529:12 pthread_mutexattr_settype 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x5584160b2718 <col:39, col:60> col:60 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x5584160b2798 <col:68, col:72> col:72 __kind 'int'
| |-NoThrowAttr 0x5584160b2908 <line:530:22>
| `-NonNullAttr 0x5584160b2960 <col:63, col:77> 1
|-FunctionDecl 0x5584160b2b20 <line:531:1, line:534:82> line:531:12 pthread_mutexattr_getprotocol 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x5584160b29a8 <col:43, line:532:19> col:19 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x5584160b2a40 <line:533:8, col:24> col:24 __protocol 'int *restrict'
| |-NoThrowAttr 0x5584160b2bd0 <line:534:22>
| `-NonNullAttr 0x5584160b2c28 <col:63, col:80> 1 2
|-FunctionDecl 0x5584160b2db8 <line:535:1, line:537:79> line:535:12 pthread_mutexattr_setprotocol 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x5584160b2c78 <col:43, col:64> col:64 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x5584160b2cf8 <line:536:8, col:12> col:12 __protocol 'int'
| |-NoThrowAttr 0x5584160b2e68 <line:537:22>
| `-NonNullAttr 0x5584160b2ec0 <col:63, col:77> 1
|-FunctionDecl 0x5584160b3068 <line:538:1, line:541:82> line:538:12 pthread_mutexattr_getprioceiling 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x5584160b2f08 <col:46, line:539:22> col:22 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x5584160b2f88 <line:540:11, col:27> col:27 __prioceiling 'int *restrict'
| |-NoThrowAttr 0x5584160b3118 <line:541:22>
| `-NonNullAttr 0x5584160b3170 <col:63, col:80> 1 2
|-FunctionDecl 0x5584160b32f8 <line:542:1, line:544:79> line:542:12 pthread_mutexattr_setprioceiling 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x5584160b31b8 <col:46, col:67> col:67 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x5584160b3238 <line:543:11, col:15> col:15 __prioceiling 'int'
| |-NoThrowAttr 0x5584160b33a8 <line:544:22>
| `-NonNullAttr 0x5584160b3400 <col:63, col:77> 1
|-FunctionDecl 0x5584160b35e8 <line:545:1, line:547:82> line:545:12 pthread_mutexattr_getrobust 'int (const pthread_mutexattr_t *, int *)' extern
| |-ParmVarDecl 0x5584160b3448 <col:41, col:68> col:68 __attr 'const pthread_mutexattr_t *'
| |-ParmVarDecl 0x5584160b34c8 <line:546:6, col:11> col:11 __robustness 'int *'
| |-NoThrowAttr 0x5584160b3698 <line:547:22>
| `-NonNullAttr 0x5584160b36f0 <col:63, col:80> 1 2
|-FunctionDecl 0x5584160b3878 <line:548:1, line:550:79> line:548:12 pthread_mutexattr_setrobust 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x5584160b3738 <col:41, col:62> col:62 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x5584160b37b8 <line:549:6, col:10> col:10 __robustness 'int'
| |-NoThrowAttr 0x5584160b3928 <line:550:22>
| `-NonNullAttr 0x5584160b3980 <col:63, col:77> 1
|-FunctionDecl 0x5584160b4cf8 <line:551:1, line:553:86> line:551:12 pthread_rwlock_init 'int (pthread_rwlock_t *restrict, const pthread_rwlockattr_t *restrict)' extern
| |-ParmVarDecl 0x5584160b4aa0 <col:33, col:62> col:62 __rwlock 'pthread_rwlock_t *restrict'
| |-ParmVarDecl 0x5584160b4bb0 <line:552:5, line:553:5> col:5 __attr 'const pthread_rwlockattr_t *restrict'
| |-NoThrowAttr 0x5584160b4da8 <col:29>
| `-NonNullAttr 0x5584160b4e00 <col:70, col:84> 1
|-FunctionDecl 0x5584160b4f78 <line:554:1, line:555:79> line:554:12 pthread_rwlock_destroy 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x5584160b4e48 <col:36, col:54> col:54 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x5584160b5020 <line:555:22>
| `-NonNullAttr 0x5584160b5078 <col:63, col:77> 1
|-FunctionDecl 0x5584160b5180 <line:556:1, line:557:68> line:556:12 pthread_rwlock_rdlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x5584160b50c8 <col:35, col:53> col:53 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x5584160b5228 <line:557:22>
| `-NonNullAttr 0x5584160b5280 <col:52, col:66> 1
|-FunctionDecl 0x5584160b5380 <line:558:1, line:559:65> line:558:12 pthread_rwlock_tryrdlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x5584160b52c8 <col:38, col:56> col:56 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x5584160b5428 <line:559:19>
| `-NonNullAttr 0x5584160b5480 <col:49, col:63> 1
|-FunctionDecl 0x5584160b56b8 <line:560:1, line:562:88> line:560:12 pthread_rwlock_timedrdlock 'int (pthread_rwlock_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x5584160b54c8 <col:40, col:69> col:69 __rwlock 'pthread_rwlock_t *restrict'
| |-ParmVarDecl 0x5584160b5558 <line:561:12, line:562:12> col:12 __abstime 'const struct timespec *restrict'
| |-NoThrowAttr 0x5584160b5768 <col:39>
| `-NonNullAttr 0x5584160b57c0 <col:69, col:86> 1 2
|-FunctionDecl 0x5584160b58c0 <line:563:1, line:564:68> line:563:12 pthread_rwlock_wrlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x5584160b5808 <col:35, col:53> col:53 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x5584160b5968 <line:564:22>
| `-NonNullAttr 0x5584160b59c0 <col:52, col:66> 1
|-FunctionDecl 0x5584160b5b28 <line:565:1, line:566:68> line:565:12 pthread_rwlock_trywrlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x5584160b5a70 <col:38, col:56> col:56 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x5584160b5bd0 <line:566:22>
| `-NonNullAttr 0x5584160b5c28 <col:52, col:66> 1
|-FunctionDecl 0x5584160b5de8 <line:567:1, line:569:88> line:567:12 pthread_rwlock_timedwrlock 'int (pthread_rwlock_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x5584160b5c78 <col:40, col:69> col:69 __rwlock 'pthread_rwlock_t *restrict'
| |-ParmVarDecl 0x5584160b5d08 <line:568:12, line:569:12> col:12 __abstime 'const struct timespec *restrict'
| |-NoThrowAttr 0x5584160b5e98 <col:39>
| `-NonNullAttr 0x5584160b5ef0 <col:69, col:86> 1 2
|-FunctionDecl 0x5584160b5ff0 <line:570:1, line:571:68> line:570:12 pthread_rwlock_unlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x5584160b5f38 <col:35, col:53> col:53 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x5584160b6098 <line:571:22>
| `-NonNullAttr 0x5584160b60f0 <col:52, col:66> 1
|-FunctionDecl 0x5584160b62d8 <line:572:1, line:573:79> line:572:12 pthread_rwlockattr_init 'int (pthread_rwlockattr_t *)' extern
| |-ParmVarDecl 0x5584160b61a0 <col:37, col:59> col:59 __attr 'pthread_rwlockattr_t *'
| |-NoThrowAttr 0x5584160b6380 <line:573:22>
| `-NonNullAttr 0x5584160b63d8 <col:63, col:77> 1
|-FunctionDecl 0x5584160b64e0 <line:574:1, line:575:79> line:574:12 pthread_rwlockattr_destroy 'int (pthread_rwlockattr_t *)' extern
| |-ParmVarDecl 0x5584160b6428 <col:40, col:62> col:62 __attr 'pthread_rwlockattr_t *'
| |-NoThrowAttr 0x5584160b6588 <line:575:22>
| `-NonNullAttr 0x5584160b65e0 <col:63, col:77> 1
|-FunctionDecl 0x5584160b6808 <line:576:1, line:579:82> line:576:12 pthread_rwlockattr_getpshared 'int (const pthread_rwlockattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x5584160b6628 <col:43, line:577:19> col:19 __attr 'const pthread_rwlockattr_t *restrict'
| |-ParmVarDecl 0x5584160b66a8 <line:578:8, col:24> col:24 __pshared 'int *restrict'
| |-NoThrowAttr 0x5584160b68b8 <line:579:22>
| `-NonNullAttr 0x5584160b6910 <col:63, col:80> 1 2
|-FunctionDecl 0x5584160b6b38 <line:580:1, line:582:79> line:580:12 pthread_rwlockattr_setpshared 'int (pthread_rwlockattr_t *, int)' extern
| |-ParmVarDecl 0x5584160b6958 <col:43, col:65> col:65 __attr 'pthread_rwlockattr_t *'
| |-ParmVarDecl 0x5584160b69d8 <line:581:8, col:12> col:12 __pshared 'int'
| |-NoThrowAttr 0x5584160b6be8 <line:582:22>
| `-NonNullAttr 0x5584160b6c40 <col:63, col:77> 1
|-FunctionDecl 0x5584160b6de8 <line:583:1, line:586:82> line:583:12 pthread_rwlockattr_getkind_np 'int (const pthread_rwlockattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x5584160b6c88 <col:43, line:584:19> col:19 __attr 'const pthread_rwlockattr_t *restrict'
| |-ParmVarDecl 0x5584160b6d08 <line:585:8, col:24> col:24 __pref 'int *restrict'
| |-NoThrowAttr 0x5584160b6e98 <line:586:22>
| `-NonNullAttr 0x5584160b6ef0 <col:63, col:80> 1 2
|-FunctionDecl 0x5584160b7078 <line:587:1, line:588:93> line:587:12 pthread_rwlockattr_setkind_np 'int (pthread_rwlockattr_t *, int)' extern
| |-ParmVarDecl 0x5584160b6f38 <col:43, col:65> col:65 __attr 'pthread_rwlockattr_t *'
| |-ParmVarDecl 0x5584160b6fb8 <line:588:8, col:12> col:12 __pref 'int'
| |-NoThrowAttr 0x5584160b7128 <col:36>
| `-NonNullAttr 0x5584160b7180 <col:77, col:91> 1
|-FunctionDecl 0x5584160b74b8 <line:589:1, line:591:79> line:589:12 pthread_cond_init 'int (pthread_cond_t *restrict, const pthread_condattr_t *restrict)' extern
| |-ParmVarDecl 0x5584160b7260 <col:31, col:58> col:58 __cond 'pthread_cond_t *restrict'
| |-ParmVarDecl 0x5584160b7370 <line:590:10, col:47> col:47 __cond_attr 'const pthread_condattr_t *restrict'
| |-NoThrowAttr 0x5584160b7568 <line:591:22>
| `-NonNullAttr 0x5584160b75c0 <col:63, col:77> 1
|-FunctionDecl 0x5584160b7738 <line:592:1, line:593:79> line:592:12 pthread_cond_destroy 'int (pthread_cond_t *)' extern
| |-ParmVarDecl 0x5584160b7608 <col:34, col:50> col:50 __cond 'pthread_cond_t *'
| |-NoThrowAttr 0x5584160b77e0 <line:593:22>
| `-NonNullAttr 0x5584160b7838 <col:63, col:77> 1
|-FunctionDecl 0x5584160b7940 <line:594:1, line:595:68> line:594:12 pthread_cond_signal 'int (pthread_cond_t *)' extern
| |-ParmVarDecl 0x5584160b7888 <col:33, col:49> col:49 __cond 'pthread_cond_t *'
| |-NoThrowAttr 0x5584160b79e8 <line:595:22>
| `-NonNullAttr 0x5584160b7a40 <col:52, col:66> 1
|-FunctionDecl 0x5584160b7b58 <line:596:1, line:597:68> line:596:12 pthread_cond_broadcast 'int (pthread_cond_t *)' extern
| |-ParmVarDecl 0x5584160b7aa0 <col:36, col:52> col:52 __cond 'pthread_cond_t *'
| |-NoThrowAttr 0x5584160b7c00 <line:597:22>
| `-NonNullAttr 0x5584160b7c58 <col:52, col:66> 1
|-FunctionDecl 0x5584160b7e88 <line:598:1, line:600:41> line:598:12 pthread_cond_wait 'int (pthread_cond_t *restrict, pthread_mutex_t *restrict)' extern
| |-ParmVarDecl 0x5584160b7ca8 <col:31, col:58> col:58 __cond 'pthread_cond_t *restrict'
| |-ParmVarDecl 0x5584160b7d20 <line:599:10, col:38> col:38 __mutex 'pthread_mutex_t *restrict'
| `-NonNullAttr 0x5584160b7f38 <line:600:22, col:39> 1 2
|-FunctionDecl 0x5584160b8268 <line:601:1, line:604:44> line:601:12 pthread_cond_timedwait 'int (pthread_cond_t *restrict, pthread_mutex_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x5584160b7fb8 <col:36, col:63> col:63 __cond 'pthread_cond_t *restrict'
| |-ParmVarDecl 0x5584160b8030 <line:602:8, col:36> col:36 __mutex 'pthread_mutex_t *restrict'
| |-ParmVarDecl 0x5584160b80c0 <line:603:8, col:42> col:42 __abstime 'const struct timespec *restrict'
| `-NonNullAttr 0x5584160b8320 <line:604:22, col:42> 1 2 3
|-FunctionDecl 0x5584160b8538 <line:605:1, line:606:79> line:605:12 pthread_condattr_init 'int (pthread_condattr_t *)' extern
| |-ParmVarDecl 0x5584160b8400 <col:35, col:55> col:55 __attr 'pthread_condattr_t *'
| |-NoThrowAttr 0x5584160b85e0 <line:606:22>
| `-NonNullAttr 0x5584160b8638 <col:63, col:77> 1
|-FunctionDecl 0x5584160b8740 <line:607:1, line:608:79> line:607:12 pthread_condattr_destroy 'int (pthread_condattr_t *)' extern
| |-ParmVarDecl 0x5584160b8688 <col:38, col:58> col:58 __attr 'pthread_condattr_t *'
| |-NoThrowAttr 0x5584160b87e8 <line:608:22>
| `-NonNullAttr 0x5584160b8840 <col:63, col:77> 1
|-FunctionDecl 0x5584160b8aa0 <line:609:1, line:612:82> line:609:12 pthread_condattr_getpshared 'int (const pthread_condattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x5584160b8888 <col:41, line:610:17> col:17 __attr 'const pthread_condattr_t *restrict'
| |-ParmVarDecl 0x5584160b8908 <line:611:6, col:22> col:22 __pshared 'int *restrict'
| |-NoThrowAttr 0x5584160b8b50 <line:612:22>
| `-NonNullAttr 0x5584160b8ba8 <col:63, col:80> 1 2
|-FunctionDecl 0x5584160b8db8 <line:613:1, line:614:94> line:613:12 pthread_condattr_setpshared 'int (pthread_condattr_t *, int)' extern
| |-ParmVarDecl 0x5584160b8bf8 <col:41, col:61> col:61 __attr 'pthread_condattr_t *'
| |-ParmVarDecl 0x5584160b8c78 <line:614:6, col:10> col:10 __pshared 'int'
| |-NoThrowAttr 0x5584160b8e68 <col:37>
| `-NonNullAttr 0x5584160b8ec0 <col:78, col:92> 1
|-FunctionDecl 0x5584160b90d8 <line:615:1, line:618:82> line:615:12 pthread_condattr_getclock 'int (const pthread_condattr_t *restrict, __clockid_t *restrict)' extern
| |-ParmVarDecl 0x5584160b8f08 <col:39, line:616:22> col:22 __attr 'const pthread_condattr_t *restrict'
| |-ParmVarDecl 0x5584160b8fb0 <line:617:11, col:35> col:35 __clock_id '__clockid_t *restrict'
| |-NoThrowAttr 0x5584160b9188 <line:618:22>
| `-NonNullAttr 0x5584160b91e0 <col:63, col:80> 1 2
|-FunctionDecl 0x5584160b93a8 <line:619:1, line:621:79> line:619:12 pthread_condattr_setclock 'int (pthread_condattr_t *, __clockid_t)' extern
| |-ParmVarDecl 0x5584160b9228 <col:39, col:59> col:59 __attr 'pthread_condattr_t *'
| |-ParmVarDecl 0x5584160b92a0 <line:620:11, col:23> col:23 __clock_id '__clockid_t':'int'
| |-NoThrowAttr 0x5584160b9458 <line:621:22>
| `-NonNullAttr 0x5584160b94b0 <col:63, col:77> 1
|-FunctionDecl 0x5584160b9758 <line:622:1, line:623:79> line:622:12 pthread_spin_init 'int (pthread_spinlock_t *, int)' extern
| |-ParmVarDecl 0x5584160b9590 <col:31, col:51> col:51 __lock 'pthread_spinlock_t *'
| |-ParmVarDecl 0x5584160b9610 <col:59, col:63> col:63 __pshared 'int'
| |-NoThrowAttr 0x5584160b9808 <line:623:22>
| `-NonNullAttr 0x5584160b9860 <col:63, col:77> 1
|-FunctionDecl 0x5584160b99d8 <line:624:1, line:625:79> line:624:12 pthread_spin_destroy 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x5584160b98a8 <col:34, col:54> col:54 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x5584160b9ab0 <line:625:22>
| `-NonNullAttr 0x5584160b9b08 <col:63, col:77> 1
|-FunctionDecl 0x5584160b9c10 <line:626:1, line:627:68> line:626:12 pthread_spin_lock 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x5584160b9b58 <col:31, col:51> col:51 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x5584160b9cb8 <line:627:22>
| `-NonNullAttr 0x5584160b9d10 <col:52, col:66> 1
|-FunctionDecl 0x5584160b9e10 <line:628:1, line:629:68> line:628:12 pthread_spin_trylock 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x5584160b9d58 <col:34, col:54> col:54 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x5584160b9eb8 <line:629:22>
| `-NonNullAttr 0x5584160b9f10 <col:52, col:66> 1
|-FunctionDecl 0x5584160ba010 <line:630:1, line:631:68> line:630:12 pthread_spin_unlock 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x5584160b9f58 <col:33, col:53> col:53 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x5584160ba0b8 <line:631:22>
| `-NonNullAttr 0x5584160ba110 <col:52, col:66> 1
|-FunctionDecl 0x5584160ba4e8 <line:632:1, line:635:79> line:632:12 pthread_barrier_init 'int (pthread_barrier_t *restrict, const pthread_barrierattr_t *restrict, unsigned int)' extern
| |-ParmVarDecl 0x5584160ba1f0 <col:34, col:64> col:64 __barrier 'pthread_barrier_t *restrict'
| |-ParmVarDecl 0x5584160ba300 <line:633:6, line:634:6> col:6 __attr 'const pthread_barrierattr_t *restrict'
| |-ParmVarDecl 0x5584160ba380 <col:14, col:27> col:27 __count 'unsigned int'
| |-NoThrowAttr 0x5584160ba5a0 <line:635:22>
| `-NonNullAttr 0x5584160ba5f8 <col:63, col:77> 1
|-FunctionDecl 0x5584160ba778 <line:636:1, line:637:79> line:636:12 pthread_barrier_destroy 'int (pthread_barrier_t *)' extern
| |-ParmVarDecl 0x5584160ba648 <col:37, col:56> col:56 __barrier 'pthread_barrier_t *'
| |-NoThrowAttr 0x5584160ba820 <line:637:22>
| `-NonNullAttr 0x5584160ba878 <col:63, col:77> 1
|-FunctionDecl 0x5584160ba980 <line:638:1, line:639:68> line:638:12 pthread_barrier_wait 'int (pthread_barrier_t *)' extern
| |-ParmVarDecl 0x5584160ba8c8 <col:34, col:53> col:53 __barrier 'pthread_barrier_t *'
| |-NoThrowAttr 0x5584160baa28 <line:639:22>
| `-NonNullAttr 0x5584160baa80 <col:52, col:66> 1
|-FunctionDecl 0x5584160bbc88 <line:640:1, line:641:79> line:640:12 pthread_barrierattr_init 'int (pthread_barrierattr_t *)' extern
| |-ParmVarDecl 0x5584160bbb50 <col:38, col:61> col:61 __attr 'pthread_barrierattr_t *'
| |-NoThrowAttr 0x5584160bbd30 <line:641:22>
| `-NonNullAttr 0x5584160bbd88 <col:63, col:77> 1
|-FunctionDecl 0x5584160bbe90 <line:642:1, line:643:79> line:642:12 pthread_barrierattr_destroy 'int (pthread_barrierattr_t *)' extern
| |-ParmVarDecl 0x5584160bbdd8 <col:41, col:64> col:64 __attr 'pthread_barrierattr_t *'
| |-NoThrowAttr 0x5584160bbf38 <line:643:22>
| `-NonNullAttr 0x5584160bbf90 <col:63, col:77> 1
|-FunctionDecl 0x5584160bc1b8 <line:644:1, line:647:82> line:644:12 pthread_barrierattr_getpshared 'int (const pthread_barrierattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x5584160bbfd8 <col:44, line:645:20> col:20 __attr 'const pthread_barrierattr_t *restrict'
| |-ParmVarDecl 0x5584160bc058 <line:646:9, col:25> col:25 __pshared 'int *restrict'
| |-NoThrowAttr 0x5584160bc268 <line:647:22>
| `-NonNullAttr 0x5584160bc2c0 <col:63, col:80> 1 2
|-FunctionDecl 0x5584160bc4c8 <line:648:1, line:650:79> line:648:12 pthread_barrierattr_setpshared 'int (pthread_barrierattr_t *, int)' extern
| |-ParmVarDecl 0x5584160bc308 <col:44, col:67> col:67 __attr 'pthread_barrierattr_t *'
| |-ParmVarDecl 0x5584160bc388 <line:649:9, col:13> col:13 __pshared 'int'
| |-NoThrowAttr 0x5584160bc578 <line:650:22>
| `-NonNullAttr 0x5584160bc5d0 <col:63, col:77> 1
|-FunctionDecl 0x5584160bc918 <line:651:1, line:653:79> line:651:12 pthread_key_create 'int (pthread_key_t *, void (*)(void *))' extern
| |-ParmVarDecl 0x5584160bc6b0 <col:32, col:47> col:47 __key 'pthread_key_t *'
| |-ParmVarDecl 0x5584160bc7d0 <line:652:11, col:43> col:18 __destr_function 'void (*)(void *)'
| |-NoThrowAttr 0x5584160bc9c8 <line:653:22>
| `-NonNullAttr 0x5584160bca20 <col:63, col:77> 1
|-FunctionDecl 0x5584160bcb88 <line:654:1, col:92> col:12 pthread_key_delete 'int (pthread_key_t)' extern
| |-ParmVarDecl 0x5584160bca68 <col:32, col:46> col:46 __key 'pthread_key_t':'unsigned int'
| `-NoThrowAttr 0x5584160bcc30 <col:69>
|-FunctionDecl 0x5584160bcda8 <line:655:1, col:95> col:14 pthread_getspecific 'void *(pthread_key_t)' extern
| |-ParmVarDecl 0x5584160bcc98 <col:35, col:49> col:49 __key 'pthread_key_t':'unsigned int'
| `-NoThrowAttr 0x5584160bce50 <col:72>
|-FunctionDecl 0x5584160bd088 <line:656:1, line:657:67> line:656:12 pthread_setspecific 'int (pthread_key_t, const void *)' extern
| |-ParmVarDecl 0x5584160bceb8 <col:33, col:47> col:47 __key 'pthread_key_t':'unsigned int'
| |-ParmVarDecl 0x5584160bcf68 <line:657:5, col:17> col:17 __pointer 'const void *'
| `-NoThrowAttr 0x5584160bd138 <col:44>
|-FunctionDecl 0x5584160bd358 <line:658:1, line:660:79> line:658:12 pthread_getcpuclockid 'int (pthread_t, __clockid_t *)' extern
| |-ParmVarDecl 0x5584160bd1a0 <col:35, col:45> col:45 __thread_id 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x5584160bd218 <line:659:7, col:20> col:20 __clock_id '__clockid_t *'
| |-NoThrowAttr 0x5584160bd408 <line:660:22>
| `-NonNullAttr 0x5584160bd460 <col:63, col:77> 2
|-FunctionDecl 0x5584160bd8a8 <line:661:1, line:663:70> line:661:12 pthread_atfork 'int (void (*)(void), void (*)(void), void (*)(void))' extern
| |-ParmVarDecl 0x5584160bd540 <col:28, col:51> col:35 __prepare 'void (*)(void)'
| |-ParmVarDecl 0x5584160bd650 <line:662:7, col:29> col:14 __parent 'void (*)(void)'
| |-ParmVarDecl 0x5584160bd760 <line:663:7, col:28> col:14 __child 'void (*)(void)'
| `-NoThrowAttr 0x5584160bd960 <col:47>
|-FunctionDecl 0x5584160bdaf0 <line:665:1, col:20> col:8 used P0 'void *(void *)'
| `-ParmVarDecl 0x5584160bd9d0 <col:11, col:17> col:17 arg 'void *'
|-FunctionDecl 0x5584160bdc48 <line:666:1, col:20> col:8 used P1 'void *(void *)'
| `-ParmVarDecl 0x5584160bdbb0 <col:11, col:17> col:17 arg 'void *'
|-FunctionDecl 0x5584160bdda0 <line:667:1, col:20> col:8 used P2 'void *(void *)'
| `-ParmVarDecl 0x5584160bdd08 <col:11, col:17> col:17 arg 'void *'
|-FunctionDecl 0x5584160bde68 <line:668:1, col:12> col:6 fence 'void ()'
|-FunctionDecl 0x5584160bdf28 <line:669:1, col:12> col:6 isync 'void ()'
|-FunctionDecl 0x5584160bdfe8 <line:670:1, col:14> col:6 lwfence 'void ()'
|-VarDecl 0x5584160be0a0 <line:671:1, col:5> col:5 used __unbuffered_cnt 'int'
|-VarDecl 0x5584160be120 prev 0x5584160be0a0 <line:672:1, col:24> col:5 used __unbuffered_cnt 'int' cinit
| `-IntegerLiteral 0x5584160be188 <col:24> 'int' 0
|-VarDecl 0x5584160be1c0 <line:673:1, col:5> col:5 used __unbuffered_p0_EAX 'int'
|-VarDecl 0x5584160be240 prev 0x5584160be1c0 <line:674:1, col:27> col:5 used __unbuffered_p0_EAX 'int' cinit
| `-IntegerLiteral 0x5584160be2a8 <col:27> 'int' 0
|-VarDecl 0x5584160be2e0 <line:675:1, col:5> col:5 used __unbuffered_p1_EAX 'int'
|-VarDecl 0x5584160be360 prev 0x5584160be2e0 <line:676:1, col:27> col:5 used __unbuffered_p1_EAX 'int' cinit
| `-IntegerLiteral 0x5584160be3c8 <col:27> 'int' 0
|-VarDecl 0x5584160be400 <line:677:1, col:5> col:5 used __unbuffered_p1_EBX 'int'
|-VarDecl 0x5584160be480 prev 0x5584160be400 <line:678:1, col:27> col:5 used __unbuffered_p1_EBX 'int' cinit
| `-IntegerLiteral 0x5584160be4e8 <col:27> 'int' 0
|-VarDecl 0x5584160be518 <line:679:1, col:7> col:7 used main$tmp_guard0 '_Bool'
|-VarDecl 0x5584160be590 <line:680:1, col:7> col:7 used main$tmp_guard1 '_Bool'
|-VarDecl 0x5584160be610 <line:681:1, col:5> col:5 used x 'int'
|-VarDecl 0x5584160be690 prev 0x5584160be610 <line:682:1, col:9> col:5 used x 'int' cinit
| `-IntegerLiteral 0x5584160be6f8 <col:9> 'int' 0
|-VarDecl 0x5584160be730 <line:683:1, col:5> col:5 used y 'int'
|-VarDecl 0x5584160be7b0 prev 0x5584160be730 <line:684:1, col:9> col:5 used y 'int' cinit
| `-IntegerLiteral 0x5584160be818 <col:9> 'int' 0
|-VarDecl 0x5584160be848 <line:685:1, col:7> col:7 used y$flush_delayed '_Bool'
|-VarDecl 0x5584160be8c8 <line:686:1, col:5> col:5 used y$mem_tmp 'int'
|-VarDecl 0x5584160be940 <line:687:1, col:7> col:7 used y$r_buff0_thd0 '_Bool'
|-VarDecl 0x5584160be9b8 <line:688:1, col:7> col:7 used y$r_buff0_thd1 '_Bool'
|-VarDecl 0x5584160bea30 <line:689:1, col:7> col:7 used y$r_buff0_thd2 '_Bool'
|-VarDecl 0x5584160beb00 <line:690:1, col:7> col:7 used y$r_buff0_thd3 '_Bool'
|-VarDecl 0x5584160beb78 <line:691:1, col:7> col:7 used y$r_buff1_thd0 '_Bool'
|-VarDecl 0x5584160bebf0 <line:692:1, col:7> col:7 used y$r_buff1_thd1 '_Bool'
|-VarDecl 0x5584160bec68 <line:693:1, col:7> col:7 used y$r_buff1_thd2 '_Bool'
|-VarDecl 0x5584160bece0 <line:694:1, col:7> col:7 used y$r_buff1_thd3 '_Bool'
|-VarDecl 0x5584160bed58 <line:695:1, col:7> col:7 y$read_delayed '_Bool'
|-VarDecl 0x5584160bedd8 <line:696:1, col:6> col:6 y$read_delayed_var 'int *'
|-VarDecl 0x5584160bee58 <line:697:1, col:5> col:5 used y$w_buff0 'int'
|-VarDecl 0x5584160beed0 <line:698:1, col:7> col:7 used y$w_buff0_used '_Bool'
|-VarDecl 0x5584160bef50 <line:699:1, col:5> col:5 used y$w_buff1 'int'
|-VarDecl 0x5584160befc8 <line:700:1, col:7> col:7 used y$w_buff1_used '_Bool'
|-VarDecl 0x5584160bf040 <line:701:1, col:7> col:7 used weak$$choice0 '_Bool'
|-VarDecl 0x5584160bf0b8 <line:702:1, col:7> col:7 used weak$$choice2 '_Bool'
|-FunctionDecl 0x5584160bf1d0 prev 0x5584160bdaf0 <line:703:1, line:722:1> line:703:8 used P0 'void *(void *)'
| |-ParmVarDecl 0x5584160bf138 <col:11, col:17> col:17 arg 'void *'
| `-CompoundStmt 0x5584160c0488 <line:704:1, line:722:1>
|   |-CallExpr 0x5584160bf2e8 <line:705:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x5584160bf2d0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5584160bf278 <col:3> 'void ()' Function 0x558416064e40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x5584160bf360 <line:706:3, col:25> 'int' '='
|   | |-DeclRefExpr 0x5584160bf308 <col:3> 'int' lvalue Var 0x5584160be240 '__unbuffered_p0_EAX' 'int'
|   | `-ImplicitCastExpr 0x5584160bf348 <col:25> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x5584160bf328 <col:25> 'int' lvalue Var 0x5584160be690 'x' 'int'
|   |-CallExpr 0x5584160bf3b8 <line:707:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x5584160bf3a0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5584160bf380 <col:3> 'void ()' Function 0x558416064f00 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x5584160bf410 <line:708:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x5584160bf3f8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5584160bf3d8 <col:3> 'void ()' Function 0x558416064e40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x5584160bf470 <line:709:3, col:7> 'int' '='
|   | |-DeclRefExpr 0x5584160bf430 <col:3> 'int' lvalue Var 0x5584160be7b0 'y' 'int'
|   | `-IntegerLiteral 0x5584160bf450 <col:7> 'int' 1
|   |-CallExpr 0x5584160bf4c8 <line:710:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x5584160bf4b0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5584160bf490 <col:3> 'void ()' Function 0x558416064f00 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x5584160bf520 <line:711:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x5584160bf508 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5584160bf4e8 <col:3> 'void ()' Function 0x558416064e40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x5584160bf808 <line:712:3, col:103> 'int' '='
|   | |-DeclRefExpr 0x5584160bf540 <col:3> 'int' lvalue Var 0x5584160be7b0 'y' 'int'
|   | `-ConditionalOperator 0x5584160bf7d8 <col:7, col:103> 'int'
|   |   |-BinaryOperator 0x5584160bf600 <col:7, col:25> 'int' '&&'
|   |   | |-ImplicitCastExpr 0x5584160bf5b8 <col:7> 'int' <IntegralCast>
|   |   | | `-ImplicitCastExpr 0x5584160bf5a0 <col:7> '_Bool' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x5584160bf560 <col:7> '_Bool' lvalue Var 0x5584160beed0 'y$w_buff0_used' '_Bool'
|   |   | `-ImplicitCastExpr 0x5584160bf5e8 <col:25> 'int' <IntegralCast>
|   |   |   `-ImplicitCastExpr 0x5584160bf5d0 <col:25> '_Bool' <LValueToRValue>
|   |   |     `-DeclRefExpr 0x5584160bf580 <col:25> '_Bool' lvalue Var 0x5584160be9b8 'y$r_buff0_thd1' '_Bool'
|   |   |-ImplicitCastExpr 0x5584160bf7c0 <col:42> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x5584160bf620 <col:42> 'int' lvalue Var 0x5584160bee58 'y$w_buff0' 'int'
|   |   `-ParenExpr 0x5584160bf7a0 <col:54, col:103> 'int'
|   |     `-ConditionalOperator 0x5584160bf770 <col:55, col:102> 'int'
|   |       |-BinaryOperator 0x5584160bf6e0 <col:55, col:73> 'int' '&&'
|   |       | |-ImplicitCastExpr 0x5584160bf698 <col:55> 'int' <IntegralCast>
|   |       | | `-ImplicitCastExpr 0x5584160bf680 <col:55> '_Bool' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x5584160bf640 <col:55> '_Bool' lvalue Var 0x5584160befc8 'y$w_buff1_used' '_Bool'
|   |       | `-ImplicitCastExpr 0x5584160bf6c8 <col:73> 'int' <IntegralCast>
|   |       |   `-ImplicitCastExpr 0x5584160bf6b0 <col:73> '_Bool' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x5584160bf660 <col:73> '_Bool' lvalue Var 0x5584160bebf0 'y$r_buff1_thd1' '_Bool'
|   |       |-ImplicitCastExpr 0x5584160bf740 <col:90> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x5584160bf700 <col:90> 'int' lvalue Var 0x5584160bef50 'y$w_buff1' 'int'
|   |       `-ImplicitCastExpr 0x5584160bf758 <col:102> 'int' <LValueToRValue>
|   |         `-DeclRefExpr 0x5584160bf720 <col:102> 'int' lvalue Var 0x5584160be7b0 'y' 'int'
|   |-BinaryOperator 0x5584160bfa10 <line:713:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x5584160bf828 <col:3> '_Bool' lvalue Var 0x5584160beed0 'y$w_buff0_used' '_Bool'
|   | `-ImplicitCastExpr 0x5584160bf9f8 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x5584160bf9c8 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x5584160bf8e8 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x5584160bf8a0 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x5584160bf888 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x5584160bf848 <col:20> '_Bool' lvalue Var 0x5584160beed0 'y$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x5584160bf8d0 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x5584160bf8b8 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x5584160bf868 <col:38> '_Bool' lvalue Var 0x5584160be9b8 'y$r_buff0_thd1' '_Bool'
|   |     |-ImplicitCastExpr 0x5584160bf980 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x5584160bf938 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x5584160bf908 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x5584160bf9b0 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x5584160bf998 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x5584160bf960 <col:66> '_Bool' lvalue Var 0x5584160beed0 'y$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x5584160bfd18 <line:714:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x5584160bfa30 <col:3> '_Bool' lvalue Var 0x5584160befc8 'y$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x5584160bfd00 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x5584160bfcd0 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x5584160bfbf0 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x5584160bfb10 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x5584160bfaa8 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x5584160bfa90 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x5584160bfa50 <col:20> '_Bool' lvalue Var 0x5584160beed0 'y$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x5584160bfad8 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x5584160bfac0 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x5584160bfa70 <col:38> '_Bool' lvalue Var 0x5584160be9b8 'y$r_buff0_thd1' '_Bool'
|   |     | `-BinaryOperator 0x5584160bfbd0 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x5584160bfb88 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x5584160bfb70 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x5584160bfb30 <col:56> '_Bool' lvalue Var 0x5584160befc8 'y$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x5584160bfbb8 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x5584160bfba0 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x5584160bfb50 <col:74> '_Bool' lvalue Var 0x5584160bebf0 'y$r_buff1_thd1' '_Bool'
|   |     |-ImplicitCastExpr 0x5584160bfc88 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x5584160bfc40 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x5584160bfc10 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x5584160bfcb8 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x5584160bfca0 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x5584160bfc68 <col:102> '_Bool' lvalue Var 0x5584160befc8 'y$w_buff1_used' '_Bool'
|   |-BinaryOperator 0x5584160bff20 <line:715:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x5584160bfd38 <col:3> '_Bool' lvalue Var 0x5584160be9b8 'y$r_buff0_thd1' '_Bool'
|   | `-ImplicitCastExpr 0x5584160bff08 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x5584160bfed8 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x5584160bfdf8 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x5584160bfdb0 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x5584160bfd98 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x5584160bfd58 <col:20> '_Bool' lvalue Var 0x5584160beed0 'y$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x5584160bfde0 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x5584160bfdc8 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x5584160bfd78 <col:38> '_Bool' lvalue Var 0x5584160be9b8 'y$r_buff0_thd1' '_Bool'
|   |     |-ImplicitCastExpr 0x5584160bfe90 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x5584160bfe48 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x5584160bfe18 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x5584160bfec0 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x5584160bfea8 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x5584160bfe70 <col:66> '_Bool' lvalue Var 0x5584160be9b8 'y$r_buff0_thd1' '_Bool'
|   |-BinaryOperator 0x5584160c0208 <line:716:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x5584160bff40 <col:3> '_Bool' lvalue Var 0x5584160bebf0 'y$r_buff1_thd1' '_Bool'
|   | `-ImplicitCastExpr 0x5584160c01f0 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x5584160c01c0 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x5584160c00e0 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x5584160c0000 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x5584160bffb8 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x5584160bffa0 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x5584160bff60 <col:20> '_Bool' lvalue Var 0x5584160beed0 'y$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x5584160bffe8 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x5584160bffd0 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x5584160bff80 <col:38> '_Bool' lvalue Var 0x5584160be9b8 'y$r_buff0_thd1' '_Bool'
|   |     | `-BinaryOperator 0x5584160c00c0 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x5584160c0078 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x5584160c0060 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x5584160c0020 <col:56> '_Bool' lvalue Var 0x5584160befc8 'y$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x5584160c00a8 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x5584160c0090 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x5584160c0040 <col:74> '_Bool' lvalue Var 0x5584160bebf0 'y$r_buff1_thd1' '_Bool'
|   |     |-ImplicitCastExpr 0x5584160c0178 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x5584160c0130 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x5584160c0100 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x5584160c01a8 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x5584160c0190 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x5584160c0158 <col:102> '_Bool' lvalue Var 0x5584160bebf0 'y$r_buff1_thd1' '_Bool'
|   |-CallExpr 0x5584160c0260 <line:717:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x5584160c0248 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5584160c0228 <col:3> 'void ()' Function 0x558416064f00 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x5584160c02b8 <line:718:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x5584160c02a0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5584160c0280 <col:3> 'void ()' Function 0x558416064e40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x5584160c0370 <line:719:3, col:41> 'int' '='
|   | |-DeclRefExpr 0x5584160c02d8 <col:3> 'int' lvalue Var 0x5584160be120 '__unbuffered_cnt' 'int'
|   | `-BinaryOperator 0x5584160c0350 <col:22, col:41> 'int' '+'
|   |   |-ImplicitCastExpr 0x5584160c0338 <col:22> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x5584160c02f8 <col:22> 'int' lvalue Var 0x5584160be120 '__unbuffered_cnt' 'int'
|   |   `-IntegerLiteral 0x5584160c0318 <col:41> 'int' 1
|   |-CallExpr 0x5584160c03c8 <line:720:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x5584160c03b0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5584160c0390 <col:3> 'void ()' Function 0x558416064f00 '__VERIFIER_atomic_end' 'void ()'
|   `-ReturnStmt 0x5584160c0478 <line:721:3, col:36>
|     `-CallExpr 0x5584160c0458 <col:10, col:36> 'void *'
|       `-ImplicitCastExpr 0x5584160c0440 <col:10> 'void *(*)(void)' <FunctionToPointerDecay>
|         `-DeclRefExpr 0x5584160c03e8 <col:10> 'void *(void)' Function 0x558416064958 '__VERIFIER_nondet_pointer' 'void *(void)'
|-FunctionDecl 0x5584160c05d0 prev 0x5584160bdc48 <line:723:1, line:767:1> line:723:8 used P1 'void *(void *)'
| |-ParmVarDecl 0x5584160c0538 <col:11, col:17> col:17 arg 'void *'
| `-CompoundStmt 0x5584160c4860 <line:724:1, line:767:1>
|   |-CallExpr 0x5584160c06b0 <line:725:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x5584160c0698 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5584160c0678 <col:3> 'void ()' Function 0x558416064e40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x5584160c0728 <line:726:3, col:15> 'int' '='
|   | |-DeclRefExpr 0x5584160c06d0 <col:3> 'int' lvalue Var 0x5584160bef50 'y$w_buff1' 'int'
|   | `-ImplicitCastExpr 0x5584160c0710 <col:15> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x5584160c06f0 <col:15> 'int' lvalue Var 0x5584160bee58 'y$w_buff0' 'int'
|   |-BinaryOperator 0x5584160c0788 <line:727:3, col:15> 'int' '='
|   | |-DeclRefExpr 0x5584160c0748 <col:3> 'int' lvalue Var 0x5584160bee58 'y$w_buff0' 'int'
|   | `-IntegerLiteral 0x5584160c0768 <col:15> 'int' 2
|   |-BinaryOperator 0x5584160c0800 <line:728:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x5584160c07a8 <col:3> '_Bool' lvalue Var 0x5584160befc8 'y$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x5584160c07e8 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x5584160c07c8 <col:20> '_Bool' lvalue Var 0x5584160beed0 'y$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x5584160c0898 <line:729:3, col:27> '_Bool' '='
|   | |-DeclRefExpr 0x5584160c0820 <col:3> '_Bool' lvalue Var 0x5584160beed0 'y$w_buff0_used' '_Bool'
|   | `-CStyleCastExpr 0x5584160c0870 <col:20, col:27> '_Bool' <IntegralToBoolean>
|   |   `-IntegerLiteral 0x5584160c0840 <col:27> 'int' 1
|   |-CallExpr 0x5584160c0a18 <line:730:3, col:56> 'void'
|   | |-ImplicitCastExpr 0x5584160c0a00 <col:3> 'void (*)(int)' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x5584160c08b8 <col:3> 'void (int)' Function 0x558416064bc8 '__VERIFIER_assert' 'void (int)'
|   | `-UnaryOperator 0x5584160c09b8 <col:21, col:55> 'int' prefix '!' cannot overflow
|   |   `-ParenExpr 0x5584160c0998 <col:22, col:55> 'int'
|   |     `-BinaryOperator 0x5584160c0978 <col:23, col:41> 'int' '&&'
|   |       |-ImplicitCastExpr 0x5584160c0930 <col:23> 'int' <IntegralCast>
|   |       | `-ImplicitCastExpr 0x5584160c0918 <col:23> '_Bool' <LValueToRValue>
|   |       |   `-DeclRefExpr 0x5584160c08d8 <col:23> '_Bool' lvalue Var 0x5584160befc8 'y$w_buff1_used' '_Bool'
|   |       `-ImplicitCastExpr 0x5584160c0960 <col:41> 'int' <IntegralCast>
|   |         `-ImplicitCastExpr 0x5584160c0948 <col:41> '_Bool' <LValueToRValue>
|   |           `-DeclRefExpr 0x5584160c08f8 <col:41> '_Bool' lvalue Var 0x5584160beed0 'y$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x5584160c0a98 <line:731:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x5584160c0a40 <col:3> '_Bool' lvalue Var 0x5584160beb78 'y$r_buff1_thd0' '_Bool'
|   | `-ImplicitCastExpr 0x5584160c0a80 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x5584160c0a60 <col:20> '_Bool' lvalue Var 0x5584160be940 'y$r_buff0_thd0' '_Bool'
|   |-BinaryOperator 0x5584160c0b20 <line:732:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x5584160c0ab8 <col:3> '_Bool' lvalue Var 0x5584160bebf0 'y$r_buff1_thd1' '_Bool'
|   | `-ImplicitCastExpr 0x5584160c0af8 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x5584160c0ad8 <col:20> '_Bool' lvalue Var 0x5584160be9b8 'y$r_buff0_thd1' '_Bool'
|   |-BinaryOperator 0x5584160c0b98 <line:733:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x5584160c0b40 <col:3> '_Bool' lvalue Var 0x5584160bec68 'y$r_buff1_thd2' '_Bool'
|   | `-ImplicitCastExpr 0x5584160c0b80 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x5584160c0b60 <col:20> '_Bool' lvalue Var 0x5584160bea30 'y$r_buff0_thd2' '_Bool'
|   |-BinaryOperator 0x5584160c0c10 <line:734:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x5584160c0bb8 <col:3> '_Bool' lvalue Var 0x5584160bece0 'y$r_buff1_thd3' '_Bool'
|   | `-ImplicitCastExpr 0x5584160c0bf8 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x5584160c0bd8 <col:20> '_Bool' lvalue Var 0x5584160beb00 'y$r_buff0_thd3' '_Bool'
|   |-BinaryOperator 0x5584160c0ca8 <line:735:3, col:27> '_Bool' '='
|   | |-DeclRefExpr 0x5584160c0c30 <col:3> '_Bool' lvalue Var 0x5584160bea30 'y$r_buff0_thd2' '_Bool'
|   | `-CStyleCastExpr 0x5584160c0c80 <col:20, col:27> '_Bool' <IntegralToBoolean>
|   |   `-IntegerLiteral 0x5584160c0c50 <col:27> 'int' 1
|   |-CallExpr 0x5584160c0d00 <line:736:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x5584160c0ce8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5584160c0cc8 <col:3> 'void ()' Function 0x558416064f00 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x5584160c0d58 <line:737:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x5584160c0d40 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5584160c0d20 <col:3> 'void ()' Function 0x558416064e40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x5584160c0e08 <line:738:3, col:45> '_Bool' '='
|   | |-DeclRefExpr 0x5584160c0d78 <col:3> '_Bool' lvalue Var 0x5584160bf040 'weak$$choice0' '_Bool'
|   | `-ImplicitCastExpr 0x5584160c0df0 <col:19, col:45> '_Bool' <PointerToBoolean>
|   |   `-CallExpr 0x5584160c0dd0 <col:19, col:45> 'void *'
|   |     `-ImplicitCastExpr 0x5584160c0db8 <col:19> 'void *(*)(void)' <FunctionToPointerDecay>
|   |       `-DeclRefExpr 0x5584160c0d98 <col:19> 'void *(void)' Function 0x558416064958 '__VERIFIER_nondet_pointer' 'void *(void)'
|   |-BinaryOperator 0x5584160c0eb8 <line:739:3, col:45> '_Bool' '='
|   | |-DeclRefExpr 0x5584160c0e28 <col:3> '_Bool' lvalue Var 0x5584160bf0b8 'weak$$choice2' '_Bool'
|   | `-ImplicitCastExpr 0x5584160c0ea0 <col:19, col:45> '_Bool' <PointerToBoolean>
|   |   `-CallExpr 0x5584160c0e80 <col:19, col:45> 'void *'
|   |     `-ImplicitCastExpr 0x5584160c0e68 <col:19> 'void *(*)(void)' <FunctionToPointerDecay>
|   |       `-DeclRefExpr 0x5584160c0e48 <col:19> 'void *(void)' Function 0x558416064958 '__VERIFIER_nondet_pointer' 'void *(void)'
|   |-BinaryOperator 0x5584160c0f30 <line:740:3, col:21> '_Bool' '='
|   | |-DeclRefExpr 0x5584160c0ed8 <col:3> '_Bool' lvalue Var 0x5584160be848 'y$flush_delayed' '_Bool'
|   | `-ImplicitCastExpr 0x5584160c0f18 <col:21> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x5584160c0ef8 <col:21> '_Bool' lvalue Var 0x5584160bf0b8 'weak$$choice2' '_Bool'
|   |-BinaryOperator 0x5584160c0fa8 <line:741:3, col:15> 'int' '='
|   | |-DeclRefExpr 0x5584160c0f50 <col:3> 'int' lvalue Var 0x5584160be8c8 'y$mem_tmp' 'int'
|   | `-ImplicitCastExpr 0x5584160c0f90 <col:15> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x5584160c0f70 <col:15> 'int' lvalue Var 0x5584160be7b0 'y' 'int'
|   |-BinaryOperator 0x5584160c13e0 <line:742:3, col:162> 'int' '='
|   | |-DeclRefExpr 0x5584160c0fc8 <col:3> 'int' lvalue Var 0x5584160be7b0 'y' 'int'
|   | `-ConditionalOperator 0x5584160c13b0 <col:7, col:162> 'int'
|   |   |-BinaryOperator 0x5584160c11d8 <col:7, col:84> 'int' '||'
|   |   | |-BinaryOperator 0x5584160c10f8 <col:7, col:46> 'int' '||'
|   |   | | |-UnaryOperator 0x5584160c1020 <col:7, col:8> 'int' prefix '!' cannot overflow
|   |   | | | `-ImplicitCastExpr 0x5584160c1008 <col:8> '_Bool' <LValueToRValue>
|   |   | | |   `-DeclRefExpr 0x5584160c0fe8 <col:8> '_Bool' lvalue Var 0x5584160beed0 'y$w_buff0_used' '_Bool'
|   |   | | `-BinaryOperator 0x5584160c10d8 <col:26, col:46> 'int' '&&'
|   |   | |   |-UnaryOperator 0x5584160c1070 <col:26, col:27> 'int' prefix '!' cannot overflow
|   |   | |   | `-ImplicitCastExpr 0x5584160c1058 <col:27> '_Bool' <LValueToRValue>
|   |   | |   |   `-DeclRefExpr 0x5584160c1038 <col:27> '_Bool' lvalue Var 0x5584160bea30 'y$r_buff0_thd2' '_Bool'
|   |   | |   `-UnaryOperator 0x5584160c10c0 <col:45, col:46> 'int' prefix '!' cannot overflow
|   |   | |     `-ImplicitCastExpr 0x5584160c10a8 <col:46> '_Bool' <LValueToRValue>
|   |   | |       `-DeclRefExpr 0x5584160c1088 <col:46> '_Bool' lvalue Var 0x5584160befc8 'y$w_buff1_used' '_Bool'
|   |   | `-BinaryOperator 0x5584160c11b8 <col:64, col:84> 'int' '&&'
|   |   |   |-UnaryOperator 0x5584160c1150 <col:64, col:65> 'int' prefix '!' cannot overflow
|   |   |   | `-ImplicitCastExpr 0x5584160c1138 <col:65> '_Bool' <LValueToRValue>
|   |   |   |   `-DeclRefExpr 0x5584160c1118 <col:65> '_Bool' lvalue Var 0x5584160bea30 'y$r_buff0_thd2' '_Bool'
|   |   |   `-UnaryOperator 0x5584160c11a0 <col:83, col:84> 'int' prefix '!' cannot overflow
|   |   |     `-ImplicitCastExpr 0x5584160c1188 <col:84> '_Bool' <LValueToRValue>
|   |   |       `-DeclRefExpr 0x5584160c1168 <col:84> '_Bool' lvalue Var 0x5584160bec68 'y$r_buff1_thd2' '_Bool'
|   |   |-ImplicitCastExpr 0x5584160c1398 <col:101> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x5584160c11f8 <col:101> 'int' lvalue Var 0x5584160be7b0 'y' 'int'
|   |   `-ParenExpr 0x5584160c1378 <col:105, col:162> 'int'
|   |     `-ConditionalOperator 0x5584160c1348 <col:106, col:153> 'int'
|   |       |-BinaryOperator 0x5584160c12b8 <col:106, col:124> 'int' '&&'
|   |       | |-ImplicitCastExpr 0x5584160c1270 <col:106> 'int' <IntegralCast>
|   |       | | `-ImplicitCastExpr 0x5584160c1258 <col:106> '_Bool' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x5584160c1218 <col:106> '_Bool' lvalue Var 0x5584160beed0 'y$w_buff0_used' '_Bool'
|   |       | `-ImplicitCastExpr 0x5584160c12a0 <col:124> 'int' <IntegralCast>
|   |       |   `-ImplicitCastExpr 0x5584160c1288 <col:124> '_Bool' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x5584160c1238 <col:124> '_Bool' lvalue Var 0x5584160bea30 'y$r_buff0_thd2' '_Bool'
|   |       |-ImplicitCastExpr 0x5584160c1318 <col:141> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x5584160c12d8 <col:141> 'int' lvalue Var 0x5584160bee58 'y$w_buff0' 'int'
|   |       `-ImplicitCastExpr 0x5584160c1330 <col:153> 'int' <LValueToRValue>
|   |         `-DeclRefExpr 0x5584160c12f8 <col:153> 'int' lvalue Var 0x5584160bef50 'y$w_buff1' 'int'
|   |-BinaryOperator 0x5584160c18f0 <line:743:3, col:208> 'int' '='
|   | |-DeclRefExpr 0x5584160c1400 <col:3> 'int' lvalue Var 0x5584160bee58 'y$w_buff0' 'int'
|   | `-ConditionalOperator 0x5584160c18c0 <col:15, col:208> 'int'
|   |   |-ImplicitCastExpr 0x5584160c1890 <col:15> 'int' <IntegralCast>
|   |   | `-ImplicitCastExpr 0x5584160c1878 <col:15> '_Bool' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x5584160c1420 <col:15> '_Bool' lvalue Var 0x5584160bf0b8 'weak$$choice2' '_Bool'
|   |   |-ImplicitCastExpr 0x5584160c18a8 <col:31> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x5584160c1440 <col:31> 'int' lvalue Var 0x5584160bee58 'y$w_buff0' 'int'
|   |   `-ParenExpr 0x5584160c1858 <col:43, col:208> 'int'
|   |     `-ConditionalOperator 0x5584160c1828 <col:44, col:207> 'int'
|   |       |-BinaryOperator 0x5584160c1650 <col:44, col:121> 'int' '||'
|   |       | |-BinaryOperator 0x5584160c1570 <col:44, col:83> 'int' '||'
|   |       | | |-UnaryOperator 0x5584160c1498 <col:44, col:45> 'int' prefix '!' cannot overflow
|   |       | | | `-ImplicitCastExpr 0x5584160c1480 <col:45> '_Bool' <LValueToRValue>
|   |       | | |   `-DeclRefExpr 0x5584160c1460 <col:45> '_Bool' lvalue Var 0x5584160beed0 'y$w_buff0_used' '_Bool'
|   |       | | `-BinaryOperator 0x5584160c1550 <col:63, col:83> 'int' '&&'
|   |       | |   |-UnaryOperator 0x5584160c14e8 <col:63, col:64> 'int' prefix '!' cannot overflow
|   |       | |   | `-ImplicitCastExpr 0x5584160c14d0 <col:64> '_Bool' <LValueToRValue>
|   |       | |   |   `-DeclRefExpr 0x5584160c14b0 <col:64> '_Bool' lvalue Var 0x5584160bea30 'y$r_buff0_thd2' '_Bool'
|   |       | |   `-UnaryOperator 0x5584160c1538 <col:82, col:83> 'int' prefix '!' cannot overflow
|   |       | |     `-ImplicitCastExpr 0x5584160c1520 <col:83> '_Bool' <LValueToRValue>
|   |       | |       `-DeclRefExpr 0x5584160c1500 <col:83> '_Bool' lvalue Var 0x5584160befc8 'y$w_buff1_used' '_Bool'
|   |       | `-BinaryOperator 0x5584160c1630 <col:101, col:121> 'int' '&&'
|   |       |   |-UnaryOperator 0x5584160c15c8 <col:101, col:102> 'int' prefix '!' cannot overflow
|   |       |   | `-ImplicitCastExpr 0x5584160c15b0 <col:102> '_Bool' <LValueToRValue>
|   |       |   |   `-DeclRefExpr 0x5584160c1590 <col:102> '_Bool' lvalue Var 0x5584160bea30 'y$r_buff0_thd2' '_Bool'
|   |       |   `-UnaryOperator 0x5584160c1618 <col:120, col:121> 'int' prefix '!' cannot overflow
|   |       |     `-ImplicitCastExpr 0x5584160c1600 <col:121> '_Bool' <LValueToRValue>
|   |       |       `-DeclRefExpr 0x5584160c15e0 <col:121> '_Bool' lvalue Var 0x5584160bec68 'y$r_buff1_thd2' '_Bool'
|   |       |-ImplicitCastExpr 0x5584160c1810 <col:138> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x5584160c1670 <col:138> 'int' lvalue Var 0x5584160bee58 'y$w_buff0' 'int'
|   |       `-ParenExpr 0x5584160c17f0 <col:150, col:207> 'int'
|   |         `-ConditionalOperator 0x5584160c17c0 <col:151, col:198> 'int'
|   |           |-BinaryOperator 0x5584160c1730 <col:151, col:169> 'int' '&&'
|   |           | |-ImplicitCastExpr 0x5584160c16e8 <col:151> 'int' <IntegralCast>
|   |           | | `-ImplicitCastExpr 0x5584160c16d0 <col:151> '_Bool' <LValueToRValue>
|   |           | |   `-DeclRefExpr 0x5584160c1690 <col:151> '_Bool' lvalue Var 0x5584160beed0 'y$w_buff0_used' '_Bool'
|   |           | `-ImplicitCastExpr 0x5584160c1718 <col:169> 'int' <IntegralCast>
|   |           |   `-ImplicitCastExpr 0x5584160c1700 <col:169> '_Bool' <LValueToRValue>
|   |           |     `-DeclRefExpr 0x5584160c16b0 <col:169> '_Bool' lvalue Var 0x5584160bea30 'y$r_buff0_thd2' '_Bool'
|   |           |-ImplicitCastExpr 0x5584160c1790 <col:186> 'int' <LValueToRValue>
|   |           | `-DeclRefExpr 0x5584160c1750 <col:186> 'int' lvalue Var 0x5584160bee58 'y$w_buff0' 'int'
|   |           `-ImplicitCastExpr 0x5584160c17a8 <col:198> 'int' <LValueToRValue>
|   |             `-DeclRefExpr 0x5584160c1770 <col:198> 'int' lvalue Var 0x5584160bee58 'y$w_buff0' 'int'
|   |-BinaryOperator 0x5584160c1e20 <line:744:3, col:208> 'int' '='
|   | |-DeclRefExpr 0x5584160c1910 <col:3> 'int' lvalue Var 0x5584160bef50 'y$w_buff1' 'int'
|   | `-ConditionalOperator 0x5584160c1df0 <col:15, col:208> 'int'
|   |   |-ImplicitCastExpr 0x5584160c1dc0 <col:15> 'int' <IntegralCast>
|   |   | `-ImplicitCastExpr 0x5584160c1da8 <col:15> '_Bool' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x5584160c1930 <col:15> '_Bool' lvalue Var 0x5584160bf0b8 'weak$$choice2' '_Bool'
|   |   |-ImplicitCastExpr 0x5584160c1dd8 <col:31> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x5584160c1950 <col:31> 'int' lvalue Var 0x5584160bef50 'y$w_buff1' 'int'
|   |   `-ParenExpr 0x5584160c1d88 <col:43, col:208> 'int'
|   |     `-ConditionalOperator 0x5584160c1d58 <col:44, col:207> 'int'
|   |       |-BinaryOperator 0x5584160c1b80 <col:44, col:121> 'int' '||'
|   |       | |-BinaryOperator 0x5584160c1a80 <col:44, col:83> 'int' '||'
|   |       | | |-UnaryOperator 0x5584160c19a8 <col:44, col:45> 'int' prefix '!' cannot overflow
|   |       | | | `-ImplicitCastExpr 0x5584160c1990 <col:45> '_Bool' <LValueToRValue>
|   |       | | |   `-DeclRefExpr 0x5584160c1970 <col:45> '_Bool' lvalue Var 0x5584160beed0 'y$w_buff0_used' '_Bool'
|   |       | | `-BinaryOperator 0x5584160c1a60 <col:63, col:83> 'int' '&&'
|   |       | |   |-UnaryOperator 0x5584160c19f8 <col:63, col:64> 'int' prefix '!' cannot overflow
|   |       | |   | `-ImplicitCastExpr 0x5584160c19e0 <col:64> '_Bool' <LValueToRValue>
|   |       | |   |   `-DeclRefExpr 0x5584160c19c0 <col:64> '_Bool' lvalue Var 0x5584160bea30 'y$r_buff0_thd2' '_Bool'
|   |       | |   `-UnaryOperator 0x5584160c1a48 <col:82, col:83> 'int' prefix '!' cannot overflow
|   |       | |     `-ImplicitCastExpr 0x5584160c1a30 <col:83> '_Bool' <LValueToRValue>
|   |       | |       `-DeclRefExpr 0x5584160c1a10 <col:83> '_Bool' lvalue Var 0x5584160befc8 'y$w_buff1_used' '_Bool'
|   |       | `-BinaryOperator 0x5584160c1b60 <col:101, col:121> 'int' '&&'
|   |       |   |-UnaryOperator 0x5584160c1ad8 <col:101, col:102> 'int' prefix '!' cannot overflow
|   |       |   | `-ImplicitCastExpr 0x5584160c1ac0 <col:102> '_Bool' <LValueToRValue>
|   |       |   |   `-DeclRefExpr 0x5584160c1aa0 <col:102> '_Bool' lvalue Var 0x5584160bea30 'y$r_buff0_thd2' '_Bool'
|   |       |   `-UnaryOperator 0x5584160c1b48 <col:120, col:121> 'int' prefix '!' cannot overflow
|   |       |     `-ImplicitCastExpr 0x5584160c1b30 <col:121> '_Bool' <LValueToRValue>
|   |       |       `-DeclRefExpr 0x5584160c1af0 <col:121> '_Bool' lvalue Var 0x5584160bec68 'y$r_buff1_thd2' '_Bool'
|   |       |-ImplicitCastExpr 0x5584160c1d40 <col:138> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x5584160c1ba0 <col:138> 'int' lvalue Var 0x5584160bef50 'y$w_buff1' 'int'
|   |       `-ParenExpr 0x5584160c1d20 <col:150, col:207> 'int'
|   |         `-ConditionalOperator 0x5584160c1cf0 <col:151, col:198> 'int'
|   |           |-BinaryOperator 0x5584160c1c60 <col:151, col:169> 'int' '&&'
|   |           | |-ImplicitCastExpr 0x5584160c1c18 <col:151> 'int' <IntegralCast>
|   |           | | `-ImplicitCastExpr 0x5584160c1c00 <col:151> '_Bool' <LValueToRValue>
|   |           | |   `-DeclRefExpr 0x5584160c1bc0 <col:151> '_Bool' lvalue Var 0x5584160beed0 'y$w_buff0_used' '_Bool'
|   |           | `-ImplicitCastExpr 0x5584160c1c48 <col:169> 'int' <IntegralCast>
|   |           |   `-ImplicitCastExpr 0x5584160c1c30 <col:169> '_Bool' <LValueToRValue>
|   |           |     `-DeclRefExpr 0x5584160c1be0 <col:169> '_Bool' lvalue Var 0x5584160bea30 'y$r_buff0_thd2' '_Bool'
|   |           |-ImplicitCastExpr 0x5584160c1cc0 <col:186> 'int' <LValueToRValue>
|   |           | `-DeclRefExpr 0x5584160c1c80 <col:186> 'int' lvalue Var 0x5584160bef50 'y$w_buff1' 'int'
|   |           `-ImplicitCastExpr 0x5584160c1cd8 <col:198> 'int' <LValueToRValue>
|   |             `-DeclRefExpr 0x5584160c1ca0 <col:198> 'int' lvalue Var 0x5584160bef50 'y$w_buff1' 'int'
|   |-BinaryOperator 0x5584160c23c8 <line:745:3, col:227> '_Bool' '='
|   | |-DeclRefExpr 0x5584160c1e40 <col:3> '_Bool' lvalue Var 0x5584160beed0 'y$w_buff0_used' '_Bool'
|   | `-ImplicitCastExpr 0x5584160c23b0 <col:20, col:227> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x5584160c2380 <col:20, col:227> 'int'
|   |     |-ImplicitCastExpr 0x5584160c2338 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x5584160c2320 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x5584160c1e60 <col:20> '_Bool' lvalue Var 0x5584160bf0b8 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x5584160c2368 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x5584160c2350 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x5584160c1e80 <col:36> '_Bool' lvalue Var 0x5584160beed0 'y$w_buff0_used' '_Bool'
|   |     `-ParenExpr 0x5584160c2300 <col:53, col:227> 'int'
|   |       `-ConditionalOperator 0x5584160c22d0 <col:54, col:226> 'int'
|   |         |-BinaryOperator 0x5584160c2090 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x5584160c1fb0 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x5584160c1ed8 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x5584160c1ec0 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x5584160c1ea0 <col:55> '_Bool' lvalue Var 0x5584160beed0 'y$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x5584160c1f90 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x5584160c1f28 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x5584160c1f10 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x5584160c1ef0 <col:74> '_Bool' lvalue Var 0x5584160bea30 'y$r_buff0_thd2' '_Bool'
|   |         | |   `-UnaryOperator 0x5584160c1f78 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x5584160c1f60 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x5584160c1f40 <col:93> '_Bool' lvalue Var 0x5584160befc8 'y$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x5584160c2070 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x5584160c2008 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x5584160c1ff0 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x5584160c1fd0 <col:112> '_Bool' lvalue Var 0x5584160bea30 'y$r_buff0_thd2' '_Bool'
|   |         |   `-UnaryOperator 0x5584160c2058 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x5584160c2040 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x5584160c2020 <col:131> '_Bool' lvalue Var 0x5584160bec68 'y$r_buff1_thd2' '_Bool'
|   |         |-ImplicitCastExpr 0x5584160c22b8 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x5584160c22a0 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x5584160c20b0 <col:148> '_Bool' lvalue Var 0x5584160beed0 'y$w_buff0_used' '_Bool'
|   |         `-ParenExpr 0x5584160c2280 <col:165, col:226> 'int'
|   |           `-ConditionalOperator 0x5584160c2250 <col:166, col:212> 'int'
|   |             |-BinaryOperator 0x5584160c2170 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x5584160c2128 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x5584160c2110 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x5584160c20d0 <col:166> '_Bool' lvalue Var 0x5584160beed0 'y$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x5584160c2158 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x5584160c2140 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x5584160c20f0 <col:184> '_Bool' lvalue Var 0x5584160bea30 'y$r_buff0_thd2' '_Bool'
|   |             |-ImplicitCastExpr 0x5584160c2208 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x5584160c21c0 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x5584160c2190 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x5584160c2238 <col:212> 'int' <IntegralCast>
|   |               `-ImplicitCastExpr 0x5584160c2220 <col:212> '_Bool' <LValueToRValue>
|   |                 `-DeclRefExpr 0x5584160c21e8 <col:212> '_Bool' lvalue Var 0x5584160beed0 'y$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x5584160c2990 <line:746:3, col:221> '_Bool' '='
|   | |-DeclRefExpr 0x5584160c23e8 <col:3> '_Bool' lvalue Var 0x5584160befc8 'y$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x5584160c2978 <col:20, col:221> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x5584160c2948 <col:20, col:221> 'int'
|   |     |-ImplicitCastExpr 0x5584160c2900 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x5584160c28e8 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x5584160c2408 <col:20> '_Bool' lvalue Var 0x5584160bf0b8 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x5584160c2930 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x5584160c2918 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x5584160c2428 <col:36> '_Bool' lvalue Var 0x5584160befc8 'y$w_buff1_used' '_Bool'
|   |     `-ParenExpr 0x5584160c28c8 <col:53, col:221> 'int'
|   |       `-ConditionalOperator 0x5584160c2898 <col:54, col:220> 'int'
|   |         |-BinaryOperator 0x5584160c2638 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x5584160c2558 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x5584160c2480 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x5584160c2468 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x5584160c2448 <col:55> '_Bool' lvalue Var 0x5584160beed0 'y$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x5584160c2538 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x5584160c24d0 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x5584160c24b8 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x5584160c2498 <col:74> '_Bool' lvalue Var 0x5584160bea30 'y$r_buff0_thd2' '_Bool'
|   |         | |   `-UnaryOperator 0x5584160c2520 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x5584160c2508 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x5584160c24e8 <col:93> '_Bool' lvalue Var 0x5584160befc8 'y$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x5584160c2618 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x5584160c25b0 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x5584160c2598 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x5584160c2578 <col:112> '_Bool' lvalue Var 0x5584160bea30 'y$r_buff0_thd2' '_Bool'
|   |         |   `-UnaryOperator 0x5584160c2600 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x5584160c25e8 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x5584160c25c8 <col:131> '_Bool' lvalue Var 0x5584160bec68 'y$r_buff1_thd2' '_Bool'
|   |         |-ImplicitCastExpr 0x5584160c2880 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x5584160c2868 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x5584160c2658 <col:148> '_Bool' lvalue Var 0x5584160befc8 'y$w_buff1_used' '_Bool'
|   |         `-ParenExpr 0x5584160c2848 <col:165, col:220> 'int'
|   |           `-ConditionalOperator 0x5584160c2818 <col:166, col:219> 'int'
|   |             |-BinaryOperator 0x5584160c2718 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x5584160c26d0 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x5584160c26b8 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x5584160c2678 <col:166> '_Bool' lvalue Var 0x5584160beed0 'y$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x5584160c2700 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x5584160c26e8 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x5584160c2698 <col:184> '_Bool' lvalue Var 0x5584160bea30 'y$r_buff0_thd2' '_Bool'
|   |             |-ImplicitCastExpr 0x5584160c27e8 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x5584160c2768 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x5584160c2738 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x5584160c2800 <col:212, col:219> 'int' <IntegralCast>
|   |               `-CStyleCastExpr 0x5584160c27c0 <col:212, col:219> '_Bool' <IntegralToBoolean>
|   |                 `-IntegerLiteral 0x5584160c2790 <col:219> 'int' 0
|   |-BinaryOperator 0x5584160c2f58 <line:747:3, col:227> '_Bool' '='
|   | |-DeclRefExpr 0x5584160c29b0 <col:3> '_Bool' lvalue Var 0x5584160bea30 'y$r_buff0_thd2' '_Bool'
|   | `-ImplicitCastExpr 0x5584160c2f40 <col:20, col:227> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x5584160c2f10 <col:20, col:227> 'int'
|   |     |-ImplicitCastExpr 0x5584160c2ec8 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x5584160c2eb0 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x5584160c29d0 <col:20> '_Bool' lvalue Var 0x5584160bf0b8 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x5584160c2ef8 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x5584160c2ee0 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x5584160c29f0 <col:36> '_Bool' lvalue Var 0x5584160bea30 'y$r_buff0_thd2' '_Bool'
|   |     `-ParenExpr 0x5584160c2e90 <col:53, col:227> 'int'
|   |       `-ConditionalOperator 0x5584160c2e60 <col:54, col:226> 'int'
|   |         |-BinaryOperator 0x5584160c2c20 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x5584160c2b40 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x5584160c2a48 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x5584160c2a30 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x5584160c2a10 <col:55> '_Bool' lvalue Var 0x5584160beed0 'y$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x5584160c2b00 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x5584160c2a98 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x5584160c2a80 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x5584160c2a60 <col:74> '_Bool' lvalue Var 0x5584160bea30 'y$r_buff0_thd2' '_Bool'
|   |         | |   `-UnaryOperator 0x5584160c2ae8 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x5584160c2ad0 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x5584160c2ab0 <col:93> '_Bool' lvalue Var 0x5584160befc8 'y$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x5584160c2c00 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x5584160c2b98 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x5584160c2b80 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x5584160c2b60 <col:112> '_Bool' lvalue Var 0x5584160bea30 'y$r_buff0_thd2' '_Bool'
|   |         |   `-UnaryOperator 0x5584160c2be8 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x5584160c2bd0 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x5584160c2bb0 <col:131> '_Bool' lvalue Var 0x5584160bec68 'y$r_buff1_thd2' '_Bool'
|   |         |-ImplicitCastExpr 0x5584160c2e48 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x5584160c2e30 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x5584160c2c40 <col:148> '_Bool' lvalue Var 0x5584160bea30 'y$r_buff0_thd2' '_Bool'
|   |         `-ParenExpr 0x5584160c2e10 <col:165, col:226> 'int'
|   |           `-ConditionalOperator 0x5584160c2de0 <col:166, col:212> 'int'
|   |             |-BinaryOperator 0x5584160c2d00 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x5584160c2cb8 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x5584160c2ca0 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x5584160c2c60 <col:166> '_Bool' lvalue Var 0x5584160beed0 'y$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x5584160c2ce8 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x5584160c2cd0 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x5584160c2c80 <col:184> '_Bool' lvalue Var 0x5584160bea30 'y$r_buff0_thd2' '_Bool'
|   |             |-ImplicitCastExpr 0x5584160c2d98 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x5584160c2d50 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x5584160c2d20 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x5584160c2dc8 <col:212> 'int' <IntegralCast>
|   |               `-ImplicitCastExpr 0x5584160c2db0 <col:212> '_Bool' <LValueToRValue>
|   |                 `-DeclRefExpr 0x5584160c2d78 <col:212> '_Bool' lvalue Var 0x5584160bea30 'y$r_buff0_thd2' '_Bool'
|   |-BinaryOperator 0x5584160c3520 <line:748:3, col:221> '_Bool' '='
|   | |-DeclRefExpr 0x5584160c2f78 <col:3> '_Bool' lvalue Var 0x5584160bec68 'y$r_buff1_thd2' '_Bool'
|   | `-ImplicitCastExpr 0x5584160c3508 <col:20, col:221> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x5584160c34d8 <col:20, col:221> 'int'
|   |     |-ImplicitCastExpr 0x5584160c3490 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x5584160c3478 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x5584160c2f98 <col:20> '_Bool' lvalue Var 0x5584160bf0b8 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x5584160c34c0 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x5584160c34a8 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x5584160c2fb8 <col:36> '_Bool' lvalue Var 0x5584160bec68 'y$r_buff1_thd2' '_Bool'
|   |     `-ParenExpr 0x5584160c3458 <col:53, col:221> 'int'
|   |       `-ConditionalOperator 0x5584160c3428 <col:54, col:220> 'int'
|   |         |-BinaryOperator 0x5584160c31c8 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x5584160c30e8 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x5584160c3010 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x5584160c2ff8 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x5584160c2fd8 <col:55> '_Bool' lvalue Var 0x5584160beed0 'y$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x5584160c30c8 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x5584160c3060 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x5584160c3048 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x5584160c3028 <col:74> '_Bool' lvalue Var 0x5584160bea30 'y$r_buff0_thd2' '_Bool'
|   |         | |   `-UnaryOperator 0x5584160c30b0 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x5584160c3098 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x5584160c3078 <col:93> '_Bool' lvalue Var 0x5584160befc8 'y$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x5584160c31a8 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x5584160c3140 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x5584160c3128 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x5584160c3108 <col:112> '_Bool' lvalue Var 0x5584160bea30 'y$r_buff0_thd2' '_Bool'
|   |         |   `-UnaryOperator 0x5584160c3190 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x5584160c3178 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x5584160c3158 <col:131> '_Bool' lvalue Var 0x5584160bec68 'y$r_buff1_thd2' '_Bool'
|   |         |-ImplicitCastExpr 0x5584160c3410 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x5584160c33f8 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x5584160c31e8 <col:148> '_Bool' lvalue Var 0x5584160bec68 'y$r_buff1_thd2' '_Bool'
|   |         `-ParenExpr 0x5584160c33d8 <col:165, col:220> 'int'
|   |           `-ConditionalOperator 0x5584160c33a8 <col:166, col:219> 'int'
|   |             |-BinaryOperator 0x5584160c32a8 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x5584160c3260 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x5584160c3248 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x5584160c3208 <col:166> '_Bool' lvalue Var 0x5584160beed0 'y$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x5584160c3290 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x5584160c3278 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x5584160c3228 <col:184> '_Bool' lvalue Var 0x5584160bea30 'y$r_buff0_thd2' '_Bool'
|   |             |-ImplicitCastExpr 0x5584160c3378 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x5584160c32f8 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x5584160c32c8 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x5584160c3390 <col:212, col:219> 'int' <IntegralCast>
|   |               `-CStyleCastExpr 0x5584160c3350 <col:212, col:219> '_Bool' <IntegralToBoolean>
|   |                 `-IntegerLiteral 0x5584160c3320 <col:219> 'int' 0
|   |-BinaryOperator 0x5584160c3598 <line:749:3, col:25> 'int' '='
|   | |-DeclRefExpr 0x5584160c3540 <col:3> 'int' lvalue Var 0x5584160be360 '__unbuffered_p1_EAX' 'int'
|   | `-ImplicitCastExpr 0x5584160c3580 <col:25> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x5584160c3560 <col:25> 'int' lvalue Var 0x5584160be7b0 'y' 'int'
|   |-BinaryOperator 0x5584160c36c8 <line:750:3, col:37> 'int' '='
|   | |-DeclRefExpr 0x5584160c35b8 <col:3> 'int' lvalue Var 0x5584160be7b0 'y' 'int'
|   | `-ConditionalOperator 0x5584160c3698 <col:7, col:37> 'int'
|   |   |-ImplicitCastExpr 0x5584160c3650 <col:7> 'int' <IntegralCast>
|   |   | `-ImplicitCastExpr 0x5584160c3638 <col:7> '_Bool' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x5584160c35d8 <col:7> '_Bool' lvalue Var 0x5584160be848 'y$flush_delayed' '_Bool'
|   |   |-ImplicitCastExpr 0x5584160c3668 <col:25> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x5584160c35f8 <col:25> 'int' lvalue Var 0x5584160be8c8 'y$mem_tmp' 'int'
|   |   `-ImplicitCastExpr 0x5584160c3680 <col:37> 'int' <LValueToRValue>
|   |     `-DeclRefExpr 0x5584160c3618 <col:37> 'int' lvalue Var 0x5584160be7b0 'y' 'int'
|   |-BinaryOperator 0x5584160c3760 <line:751:3, col:28> '_Bool' '='
|   | |-DeclRefExpr 0x5584160c36e8 <col:3> '_Bool' lvalue Var 0x5584160be848 'y$flush_delayed' '_Bool'
|   | `-CStyleCastExpr 0x5584160c3738 <col:21, col:28> '_Bool' <IntegralToBoolean>
|   |   `-IntegerLiteral 0x5584160c3708 <col:28> 'int' 0
|   |-CallExpr 0x5584160c37b8 <line:752:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x5584160c37a0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5584160c3780 <col:3> 'void ()' Function 0x558416064f00 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x5584160c3810 <line:753:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x5584160c37f8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5584160c37d8 <col:3> 'void ()' Function 0x558416064e40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x5584160c3888 <line:754:3, col:25> 'int' '='
|   | |-DeclRefExpr 0x5584160c3830 <col:3> 'int' lvalue Var 0x5584160be480 '__unbuffered_p1_EBX' 'int'
|   | `-ImplicitCastExpr 0x5584160c3870 <col:25> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x5584160c3850 <col:25> 'int' lvalue Var 0x5584160be690 'x' 'int'
|   |-CallExpr 0x5584160c38e0 <line:755:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x5584160c38c8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5584160c38a8 <col:3> 'void ()' Function 0x558416064f00 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x5584160c3938 <line:756:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x5584160c3920 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5584160c3900 <col:3> 'void ()' Function 0x558416064e40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x5584160c3c38 <line:757:3, col:103> 'int' '='
|   | |-DeclRefExpr 0x5584160c3958 <col:3> 'int' lvalue Var 0x5584160be7b0 'y' 'int'
|   | `-ConditionalOperator 0x5584160c3c08 <col:7, col:103> 'int'
|   |   |-BinaryOperator 0x5584160c3a18 <col:7, col:25> 'int' '&&'
|   |   | |-ImplicitCastExpr 0x5584160c39d0 <col:7> 'int' <IntegralCast>
|   |   | | `-ImplicitCastExpr 0x5584160c39b8 <col:7> '_Bool' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x5584160c3978 <col:7> '_Bool' lvalue Var 0x5584160beed0 'y$w_buff0_used' '_Bool'
|   |   | `-ImplicitCastExpr 0x5584160c3a00 <col:25> 'int' <IntegralCast>
|   |   |   `-ImplicitCastExpr 0x5584160c39e8 <col:25> '_Bool' <LValueToRValue>
|   |   |     `-DeclRefExpr 0x5584160c3998 <col:25> '_Bool' lvalue Var 0x5584160bea30 'y$r_buff0_thd2' '_Bool'
|   |   |-ImplicitCastExpr 0x5584160c3bf0 <col:42> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x5584160c3a38 <col:42> 'int' lvalue Var 0x5584160bee58 'y$w_buff0' 'int'
|   |   `-ParenExpr 0x5584160c3bd0 <col:54, col:103> 'int'
|   |     `-ConditionalOperator 0x5584160c3ba0 <col:55, col:102> 'int'
|   |       |-BinaryOperator 0x5584160c3af8 <col:55, col:73> 'int' '&&'
|   |       | |-ImplicitCastExpr 0x5584160c3ab0 <col:55> 'int' <IntegralCast>
|   |       | | `-ImplicitCastExpr 0x5584160c3a98 <col:55> '_Bool' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x5584160c3a58 <col:55> '_Bool' lvalue Var 0x5584160befc8 'y$w_buff1_used' '_Bool'
|   |       | `-ImplicitCastExpr 0x5584160c3ae0 <col:73> 'int' <IntegralCast>
|   |       |   `-ImplicitCastExpr 0x5584160c3ac8 <col:73> '_Bool' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x5584160c3a78 <col:73> '_Bool' lvalue Var 0x5584160bec68 'y$r_buff1_thd2' '_Bool'
|   |       |-ImplicitCastExpr 0x5584160c3b70 <col:90> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x5584160c3b18 <col:90> 'int' lvalue Var 0x5584160bef50 'y$w_buff1' 'int'
|   |       `-ImplicitCastExpr 0x5584160c3b88 <col:102> 'int' <LValueToRValue>
|   |         `-DeclRefExpr 0x5584160c3b50 <col:102> 'int' lvalue Var 0x5584160be7b0 'y' 'int'
|   |-BinaryOperator 0x5584160c3e40 <line:758:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x5584160c3c58 <col:3> '_Bool' lvalue Var 0x5584160beed0 'y$w_buff0_used' '_Bool'
|   | `-ImplicitCastExpr 0x5584160c3e28 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x5584160c3df8 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x5584160c3d18 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x5584160c3cd0 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x5584160c3cb8 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x5584160c3c78 <col:20> '_Bool' lvalue Var 0x5584160beed0 'y$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x5584160c3d00 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x5584160c3ce8 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x5584160c3c98 <col:38> '_Bool' lvalue Var 0x5584160bea30 'y$r_buff0_thd2' '_Bool'
|   |     |-ImplicitCastExpr 0x5584160c3db0 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x5584160c3d68 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x5584160c3d38 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x5584160c3de0 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x5584160c3dc8 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x5584160c3d90 <col:66> '_Bool' lvalue Var 0x5584160beed0 'y$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x5584160c4128 <line:759:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x5584160c3e60 <col:3> '_Bool' lvalue Var 0x5584160befc8 'y$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x5584160c4110 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x5584160c40e0 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x5584160c4000 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x5584160c3f20 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x5584160c3ed8 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x5584160c3ec0 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x5584160c3e80 <col:20> '_Bool' lvalue Var 0x5584160beed0 'y$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x5584160c3f08 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x5584160c3ef0 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x5584160c3ea0 <col:38> '_Bool' lvalue Var 0x5584160bea30 'y$r_buff0_thd2' '_Bool'
|   |     | `-BinaryOperator 0x5584160c3fe0 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x5584160c3f98 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x5584160c3f80 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x5584160c3f40 <col:56> '_Bool' lvalue Var 0x5584160befc8 'y$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x5584160c3fc8 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x5584160c3fb0 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x5584160c3f60 <col:74> '_Bool' lvalue Var 0x5584160bec68 'y$r_buff1_thd2' '_Bool'
|   |     |-ImplicitCastExpr 0x5584160c4098 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x5584160c4050 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x5584160c4020 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x5584160c40c8 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x5584160c40b0 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x5584160c4078 <col:102> '_Bool' lvalue Var 0x5584160befc8 'y$w_buff1_used' '_Bool'
|   |-BinaryOperator 0x5584160c4330 <line:760:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x5584160c4148 <col:3> '_Bool' lvalue Var 0x5584160bea30 'y$r_buff0_thd2' '_Bool'
|   | `-ImplicitCastExpr 0x5584160c4318 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x5584160c42e8 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x5584160c4208 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x5584160c41c0 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x5584160c41a8 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x5584160c4168 <col:20> '_Bool' lvalue Var 0x5584160beed0 'y$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x5584160c41f0 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x5584160c41d8 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x5584160c4188 <col:38> '_Bool' lvalue Var 0x5584160bea30 'y$r_buff0_thd2' '_Bool'
|   |     |-ImplicitCastExpr 0x5584160c42a0 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x5584160c4258 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x5584160c4228 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x5584160c42d0 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x5584160c42b8 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x5584160c4280 <col:66> '_Bool' lvalue Var 0x5584160bea30 'y$r_buff0_thd2' '_Bool'
|   |-BinaryOperator 0x5584160c4618 <line:761:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x5584160c4350 <col:3> '_Bool' lvalue Var 0x5584160bec68 'y$r_buff1_thd2' '_Bool'
|   | `-ImplicitCastExpr 0x5584160c4600 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x5584160c45d0 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x5584160c44f0 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x5584160c4410 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x5584160c43c8 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x5584160c43b0 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x5584160c4370 <col:20> '_Bool' lvalue Var 0x5584160beed0 'y$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x5584160c43f8 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x5584160c43e0 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x5584160c4390 <col:38> '_Bool' lvalue Var 0x5584160bea30 'y$r_buff0_thd2' '_Bool'
|   |     | `-BinaryOperator 0x5584160c44d0 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x5584160c4488 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x5584160c4470 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x5584160c4430 <col:56> '_Bool' lvalue Var 0x5584160befc8 'y$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x5584160c44b8 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x5584160c44a0 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x5584160c4450 <col:74> '_Bool' lvalue Var 0x5584160bec68 'y$r_buff1_thd2' '_Bool'
|   |     |-ImplicitCastExpr 0x5584160c4588 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x5584160c4540 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x5584160c4510 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x5584160c45b8 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x5584160c45a0 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x5584160c4568 <col:102> '_Bool' lvalue Var 0x5584160bec68 'y$r_buff1_thd2' '_Bool'
|   |-CallExpr 0x5584160c4670 <line:762:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x5584160c4658 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5584160c4638 <col:3> 'void ()' Function 0x558416064f00 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x5584160c46c8 <line:763:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x5584160c46b0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5584160c4690 <col:3> 'void ()' Function 0x558416064e40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x5584160c4780 <line:764:3, col:41> 'int' '='
|   | |-DeclRefExpr 0x5584160c46e8 <col:3> 'int' lvalue Var 0x5584160be120 '__unbuffered_cnt' 'int'
|   | `-BinaryOperator 0x5584160c4760 <col:22, col:41> 'int' '+'
|   |   |-ImplicitCastExpr 0x5584160c4748 <col:22> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x5584160c4708 <col:22> 'int' lvalue Var 0x5584160be120 '__unbuffered_cnt' 'int'
|   |   `-IntegerLiteral 0x5584160c4728 <col:41> 'int' 1
|   |-CallExpr 0x5584160c47d8 <line:765:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x5584160c47c0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5584160c47a0 <col:3> 'void ()' Function 0x558416064f00 '__VERIFIER_atomic_end' 'void ()'
|   `-ReturnStmt 0x5584160c4850 <line:766:3, col:36>
|     `-CallExpr 0x5584160c4830 <col:10, col:36> 'void *'
|       `-ImplicitCastExpr 0x5584160c4818 <col:10> 'void *(*)(void)' <FunctionToPointerDecay>
|         `-DeclRefExpr 0x5584160c47f8 <col:10> 'void *(void)' Function 0x558416064958 '__VERIFIER_nondet_pointer' 'void *(void)'
|-FunctionDecl 0x5584160c4a70 prev 0x5584160bdda0 <line:768:1, line:784:1> line:768:8 used P2 'void *(void *)'
| |-ParmVarDecl 0x5584160c49d8 <col:11, col:17> col:17 arg 'void *'
| `-CompoundStmt 0x5584160c5ba0 <line:769:1, line:784:1>
|   |-CallExpr 0x5584160c4b60 <line:770:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x5584160c4b38 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5584160c4b18 <col:3> 'void ()' Function 0x558416064e40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x5584160c4bc0 <line:771:3, col:7> 'int' '='
|   | |-DeclRefExpr 0x5584160c4b80 <col:3> 'int' lvalue Var 0x5584160be690 'x' 'int'
|   | `-IntegerLiteral 0x5584160c4ba0 <col:7> 'int' 1
|   |-CallExpr 0x5584160c4c18 <line:772:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x5584160c4c00 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5584160c4be0 <col:3> 'void ()' Function 0x558416064f00 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x5584160c4c70 <line:773:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x5584160c4c58 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5584160c4c38 <col:3> 'void ()' Function 0x558416064e40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x5584160c4f58 <line:774:3, col:103> 'int' '='
|   | |-DeclRefExpr 0x5584160c4c90 <col:3> 'int' lvalue Var 0x5584160be7b0 'y' 'int'
|   | `-ConditionalOperator 0x5584160c4f28 <col:7, col:103> 'int'
|   |   |-BinaryOperator 0x5584160c4d50 <col:7, col:25> 'int' '&&'
|   |   | |-ImplicitCastExpr 0x5584160c4d08 <col:7> 'int' <IntegralCast>
|   |   | | `-ImplicitCastExpr 0x5584160c4cf0 <col:7> '_Bool' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x5584160c4cb0 <col:7> '_Bool' lvalue Var 0x5584160beed0 'y$w_buff0_used' '_Bool'
|   |   | `-ImplicitCastExpr 0x5584160c4d38 <col:25> 'int' <IntegralCast>
|   |   |   `-ImplicitCastExpr 0x5584160c4d20 <col:25> '_Bool' <LValueToRValue>
|   |   |     `-DeclRefExpr 0x5584160c4cd0 <col:25> '_Bool' lvalue Var 0x5584160beb00 'y$r_buff0_thd3' '_Bool'
|   |   |-ImplicitCastExpr 0x5584160c4f10 <col:42> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x5584160c4d70 <col:42> 'int' lvalue Var 0x5584160bee58 'y$w_buff0' 'int'
|   |   `-ParenExpr 0x5584160c4ef0 <col:54, col:103> 'int'
|   |     `-ConditionalOperator 0x5584160c4ec0 <col:55, col:102> 'int'
|   |       |-BinaryOperator 0x5584160c4e30 <col:55, col:73> 'int' '&&'
|   |       | |-ImplicitCastExpr 0x5584160c4de8 <col:55> 'int' <IntegralCast>
|   |       | | `-ImplicitCastExpr 0x5584160c4dd0 <col:55> '_Bool' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x5584160c4d90 <col:55> '_Bool' lvalue Var 0x5584160befc8 'y$w_buff1_used' '_Bool'
|   |       | `-ImplicitCastExpr 0x5584160c4e18 <col:73> 'int' <IntegralCast>
|   |       |   `-ImplicitCastExpr 0x5584160c4e00 <col:73> '_Bool' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x5584160c4db0 <col:73> '_Bool' lvalue Var 0x5584160bece0 'y$r_buff1_thd3' '_Bool'
|   |       |-ImplicitCastExpr 0x5584160c4e90 <col:90> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x5584160c4e50 <col:90> 'int' lvalue Var 0x5584160bef50 'y$w_buff1' 'int'
|   |       `-ImplicitCastExpr 0x5584160c4ea8 <col:102> 'int' <LValueToRValue>
|   |         `-DeclRefExpr 0x5584160c4e70 <col:102> 'int' lvalue Var 0x5584160be7b0 'y' 'int'
|   |-BinaryOperator 0x5584160c5160 <line:775:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x5584160c4f78 <col:3> '_Bool' lvalue Var 0x5584160beed0 'y$w_buff0_used' '_Bool'
|   | `-ImplicitCastExpr 0x5584160c5148 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x5584160c5118 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x5584160c5038 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x5584160c4ff0 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x5584160c4fd8 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x5584160c4f98 <col:20> '_Bool' lvalue Var 0x5584160beed0 'y$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x5584160c5020 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x5584160c5008 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x5584160c4fb8 <col:38> '_Bool' lvalue Var 0x5584160beb00 'y$r_buff0_thd3' '_Bool'
|   |     |-ImplicitCastExpr 0x5584160c50d0 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x5584160c5088 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x5584160c5058 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x5584160c5100 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x5584160c50e8 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x5584160c50b0 <col:66> '_Bool' lvalue Var 0x5584160beed0 'y$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x5584160c5448 <line:776:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x5584160c5180 <col:3> '_Bool' lvalue Var 0x5584160befc8 'y$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x5584160c5430 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x5584160c5400 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x5584160c5320 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x5584160c5240 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x5584160c51f8 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x5584160c51e0 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x5584160c51a0 <col:20> '_Bool' lvalue Var 0x5584160beed0 'y$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x5584160c5228 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x5584160c5210 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x5584160c51c0 <col:38> '_Bool' lvalue Var 0x5584160beb00 'y$r_buff0_thd3' '_Bool'
|   |     | `-BinaryOperator 0x5584160c5300 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x5584160c52b8 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x5584160c52a0 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x5584160c5260 <col:56> '_Bool' lvalue Var 0x5584160befc8 'y$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x5584160c52e8 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x5584160c52d0 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x5584160c5280 <col:74> '_Bool' lvalue Var 0x5584160bece0 'y$r_buff1_thd3' '_Bool'
|   |     |-ImplicitCastExpr 0x5584160c53b8 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x5584160c5370 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x5584160c5340 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x5584160c53e8 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x5584160c53d0 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x5584160c5398 <col:102> '_Bool' lvalue Var 0x5584160befc8 'y$w_buff1_used' '_Bool'
|   |-BinaryOperator 0x5584160c5650 <line:777:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x5584160c5468 <col:3> '_Bool' lvalue Var 0x5584160beb00 'y$r_buff0_thd3' '_Bool'
|   | `-ImplicitCastExpr 0x5584160c5638 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x5584160c5608 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x5584160c5528 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x5584160c54e0 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x5584160c54c8 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x5584160c5488 <col:20> '_Bool' lvalue Var 0x5584160beed0 'y$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x5584160c5510 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x5584160c54f8 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x5584160c54a8 <col:38> '_Bool' lvalue Var 0x5584160beb00 'y$r_buff0_thd3' '_Bool'
|   |     |-ImplicitCastExpr 0x5584160c55c0 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x5584160c5578 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x5584160c5548 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x5584160c55f0 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x5584160c55d8 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x5584160c55a0 <col:66> '_Bool' lvalue Var 0x5584160beb00 'y$r_buff0_thd3' '_Bool'
|   |-BinaryOperator 0x5584160c5938 <line:778:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x5584160c5670 <col:3> '_Bool' lvalue Var 0x5584160bece0 'y$r_buff1_thd3' '_Bool'
|   | `-ImplicitCastExpr 0x5584160c5920 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x5584160c58f0 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x5584160c5810 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x5584160c5730 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x5584160c56e8 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x5584160c56d0 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x5584160c5690 <col:20> '_Bool' lvalue Var 0x5584160beed0 'y$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x5584160c5718 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x5584160c5700 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x5584160c56b0 <col:38> '_Bool' lvalue Var 0x5584160beb00 'y$r_buff0_thd3' '_Bool'
|   |     | `-BinaryOperator 0x5584160c57f0 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x5584160c57a8 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x5584160c5790 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x5584160c5750 <col:56> '_Bool' lvalue Var 0x5584160befc8 'y$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x5584160c57d8 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x5584160c57c0 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x5584160c5770 <col:74> '_Bool' lvalue Var 0x5584160bece0 'y$r_buff1_thd3' '_Bool'
|   |     |-ImplicitCastExpr 0x5584160c58a8 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x5584160c5860 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x5584160c5830 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x5584160c58d8 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x5584160c58c0 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x5584160c5888 <col:102> '_Bool' lvalue Var 0x5584160bece0 'y$r_buff1_thd3' '_Bool'
|   |-CallExpr 0x5584160c5990 <line:779:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x5584160c5978 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5584160c5958 <col:3> 'void ()' Function 0x558416064f00 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x5584160c59e8 <line:780:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x5584160c59d0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5584160c59b0 <col:3> 'void ()' Function 0x558416064e40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x5584160c5aa0 <line:781:3, col:41> 'int' '='
|   | |-DeclRefExpr 0x5584160c5a08 <col:3> 'int' lvalue Var 0x5584160be120 '__unbuffered_cnt' 'int'
|   | `-BinaryOperator 0x5584160c5a80 <col:22, col:41> 'int' '+'
|   |   |-ImplicitCastExpr 0x5584160c5a68 <col:22> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x5584160c5a28 <col:22> 'int' lvalue Var 0x5584160be120 '__unbuffered_cnt' 'int'
|   |   `-IntegerLiteral 0x5584160c5a48 <col:41> 'int' 1
|   |-CallExpr 0x5584160c5af8 <line:782:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x5584160c5ae0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5584160c5ac0 <col:3> 'void ()' Function 0x558416064f00 '__VERIFIER_atomic_end' 'void ()'
|   `-ReturnStmt 0x5584160c5b90 <line:783:3, col:36>
|     `-CallExpr 0x5584160c5b70 <col:10, col:36> 'void *'
|       `-ImplicitCastExpr 0x5584160c5b38 <col:10> 'void *(*)(void)' <FunctionToPointerDecay>
|         `-DeclRefExpr 0x5584160c5b18 <col:10> 'void *(void)' Function 0x558416064958 '__VERIFIER_nondet_pointer' 'void *(void)'
|-FunctionDecl 0x5584160c5c40 prev 0x5584160bde68 <line:785:1, line:787:1> line:785:6 fence 'void ()'
| `-CompoundStmt 0x5584160c5ce0 <line:786:1, line:787:1>
|-FunctionDecl 0x5584160c5d10 prev 0x5584160bdf28 <line:788:1, line:790:1> line:788:6 isync 'void ()'
| `-CompoundStmt 0x5584160c5db0 <line:789:1, line:790:1>
|-FunctionDecl 0x5584160c5de0 prev 0x5584160bdfe8 <line:791:1, line:793:1> line:791:6 lwfence 'void ()'
| `-CompoundStmt 0x5584160c5e80 <line:792:1, line:793:1>
`-FunctionDecl 0x5584160c5ee8 <line:794:1, line:831:1> line:794:5 main 'int ()'
  `-CompoundStmt 0x5584160ca548 <line:795:1, line:831:1>
    |-DeclStmt 0x5584160c6000 <line:796:3, col:18>
    | `-VarDecl 0x5584160c5f98 <col:3, col:13> col:13 used t1701 'pthread_t':'unsigned long'
    |-CallExpr 0x5584160c6208 <line:797:3, col:54> 'int'
    | |-ImplicitCastExpr 0x5584160c61f0 <col:3> 'int (*)(pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x5584160c6018 <col:3> 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' Function 0x5584160a5488 'pthread_create' 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)'
    | |-UnaryOperator 0x5584160c6058 <col:18, col:19> 'pthread_t *' prefix '&' cannot overflow
    | | `-DeclRefExpr 0x5584160c6038 <col:19> 'pthread_t':'unsigned long' lvalue Var 0x5584160c5f98 't1701' 'pthread_t':'unsigned long'
    | |-ImplicitCastExpr 0x5584160c6248 <col:26, col:36> 'const pthread_attr_t *' <NullToPointer>
    | | `-ParenExpr 0x5584160c60d0 <col:26, col:36> 'void *'
    | |   `-CStyleCastExpr 0x5584160c60a8 <col:27, col:35> 'void *' <NullToPointer>
    | |     `-IntegerLiteral 0x5584160c6070 <col:35> 'int' 0
    | |-ImplicitCastExpr 0x5584160c6260 <col:39> 'void *(*)(void *)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x5584160c60f0 <col:39> 'void *(void *)' Function 0x5584160bf1d0 'P0' 'void *(void *)'
    | `-ParenExpr 0x5584160c6170 <col:43, col:53> 'void *'
    |   `-CStyleCastExpr 0x5584160c6148 <col:44, col:52> 'void *' <NullToPointer>
    |     `-IntegerLiteral 0x5584160c6110 <col:52> 'int' 0
    |-DeclStmt 0x5584160c62f0 <line:798:3, col:18>
    | `-VarDecl 0x5584160c6288 <col:3, col:13> col:13 used t1702 'pthread_t':'unsigned long'
    |-CallExpr 0x5584160c6498 <line:799:3, col:54> 'int'
    | |-ImplicitCastExpr 0x5584160c6480 <col:3> 'int (*)(pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x5584160c6308 <col:3> 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' Function 0x5584160a5488 'pthread_create' 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)'
    | |-UnaryOperator 0x5584160c6348 <col:18, col:19> 'pthread_t *' prefix '&' cannot overflow
    | | `-DeclRefExpr 0x5584160c6328 <col:19> 'pthread_t':'unsigned long' lvalue Var 0x5584160c6288 't1702' 'pthread_t':'unsigned long'
    | |-ImplicitCastExpr 0x5584160c64d8 <col:26, col:36> 'const pthread_attr_t *' <NullToPointer>
    | | `-ParenExpr 0x5584160c63c0 <col:26, col:36> 'void *'
    | |   `-CStyleCastExpr 0x5584160c6398 <col:27, col:35> 'void *' <NullToPointer>
    | |     `-IntegerLiteral 0x5584160c6360 <col:35> 'int' 0
    | |-ImplicitCastExpr 0x5584160c64f0 <col:39> 'void *(*)(void *)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x5584160c63e0 <col:39> 'void *(void *)' Function 0x5584160c05d0 'P1' 'void *(void *)'
    | `-ParenExpr 0x5584160c6460 <col:43, col:53> 'void *'
    |   `-CStyleCastExpr 0x5584160c6438 <col:44, col:52> 'void *' <NullToPointer>
    |     `-IntegerLiteral 0x5584160c6400 <col:52> 'int' 0
    |-DeclStmt 0x5584160c6580 <line:800:3, col:18>
    | `-VarDecl 0x5584160c6518 <col:3, col:13> col:13 used t1703 'pthread_t':'unsigned long'
    |-CallExpr 0x5584160c6728 <line:801:3, col:54> 'int'
    | |-ImplicitCastExpr 0x5584160c6710 <col:3> 'int (*)(pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x5584160c6598 <col:3> 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' Function 0x5584160a5488 'pthread_create' 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)'
    | |-UnaryOperator 0x5584160c65d8 <col:18, col:19> 'pthread_t *' prefix '&' cannot overflow
    | | `-DeclRefExpr 0x5584160c65b8 <col:19> 'pthread_t':'unsigned long' lvalue Var 0x5584160c6518 't1703' 'pthread_t':'unsigned long'
    | |-ImplicitCastExpr 0x5584160c6768 <col:26, col:36> 'const pthread_attr_t *' <NullToPointer>
    | | `-ParenExpr 0x5584160c6650 <col:26, col:36> 'void *'
    | |   `-CStyleCastExpr 0x5584160c6628 <col:27, col:35> 'void *' <NullToPointer>
    | |     `-IntegerLiteral 0x5584160c65f0 <col:35> 'int' 0
    | |-ImplicitCastExpr 0x5584160c6780 <col:39> 'void *(*)(void *)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x5584160c6670 <col:39> 'void *(void *)' Function 0x5584160c4a70 'P2' 'void *(void *)'
    | `-ParenExpr 0x5584160c66f0 <col:43, col:53> 'void *'
    |   `-CStyleCastExpr 0x5584160c66c8 <col:44, col:52> 'void *' <NullToPointer>
    |     `-IntegerLiteral 0x5584160c6690 <col:52> 'int' 0
    |-CallExpr 0x5584160c67d0 <line:802:3, col:27> 'void'
    | `-ImplicitCastExpr 0x5584160c67b8 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x5584160c6798 <col:3> 'void ()' Function 0x558416064e40 '__VERIFIER_atomic_begin' 'void ()'
    |-BinaryOperator 0x5584160c68a0 <line:803:3, col:41> '_Bool' '='
    | |-DeclRefExpr 0x5584160c67f0 <col:3> '_Bool' lvalue Var 0x5584160be518 'main$tmp_guard0' '_Bool'
    | `-ImplicitCastExpr 0x5584160c6888 <col:21, col:41> '_Bool' <IntegralToBoolean>
    |   `-BinaryOperator 0x5584160c6868 <col:21, col:41> 'int' '=='
    |     |-ImplicitCastExpr 0x5584160c6850 <col:21> 'int' <LValueToRValue>
    |     | `-DeclRefExpr 0x5584160c6810 <col:21> 'int' lvalue Var 0x5584160be120 '__unbuffered_cnt' 'int'
    |     `-IntegerLiteral 0x5584160c6830 <col:41> 'int' 3
    |-CallExpr 0x5584160c68f8 <line:804:3, col:25> 'void'
    | `-ImplicitCastExpr 0x5584160c68e0 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x5584160c68c0 <col:3> 'void ()' Function 0x558416064f00 '__VERIFIER_atomic_end' 'void ()'
    |-CallExpr 0x5584160c6970 <line:805:3, col:36> 'void'
    | |-ImplicitCastExpr 0x5584160c6958 <col:3> 'void (*)(int)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x5584160c6918 <col:3> 'void (int)' Function 0x558416064790 '__VERIFIER_assume' 'void (int)'
    | `-ImplicitCastExpr 0x5584160c69b0 <col:21> 'int' <IntegralCast>
    |   `-ImplicitCastExpr 0x5584160c6998 <col:21> '_Bool' <LValueToRValue>
    |     `-DeclRefExpr 0x5584160c6938 <col:21> '_Bool' lvalue Var 0x5584160be518 'main$tmp_guard0' '_Bool'
    |-CallExpr 0x5584160c6a00 <line:806:3, col:27> 'void'
    | `-ImplicitCastExpr 0x5584160c69e8 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x5584160c69c8 <col:3> 'void ()' Function 0x558416064e40 '__VERIFIER_atomic_begin' 'void ()'
    |-BinaryOperator 0x5584160c6d08 <line:807:3, col:103> 'int' '='
    | |-DeclRefExpr 0x5584160c6a20 <col:3> 'int' lvalue Var 0x5584160be7b0 'y' 'int'
    | `-ConditionalOperator 0x5584160c6cd8 <col:7, col:103> 'int'
    |   |-BinaryOperator 0x5584160c6ae0 <col:7, col:25> 'int' '&&'
    |   | |-ImplicitCastExpr 0x5584160c6a98 <col:7> 'int' <IntegralCast>
    |   | | `-ImplicitCastExpr 0x5584160c6a80 <col:7> '_Bool' <LValueToRValue>
    |   | |   `-DeclRefExpr 0x5584160c6a40 <col:7> '_Bool' lvalue Var 0x5584160beed0 'y$w_buff0_used' '_Bool'
    |   | `-ImplicitCastExpr 0x5584160c6ac8 <col:25> 'int' <IntegralCast>
    |   |   `-ImplicitCastExpr 0x5584160c6ab0 <col:25> '_Bool' <LValueToRValue>
    |   |     `-DeclRefExpr 0x5584160c6a60 <col:25> '_Bool' lvalue Var 0x5584160be940 'y$r_buff0_thd0' '_Bool'
    |   |-ImplicitCastExpr 0x5584160c6cc0 <col:42> 'int' <LValueToRValue>
    |   | `-DeclRefExpr 0x5584160c6b00 <col:42> 'int' lvalue Var 0x5584160bee58 'y$w_buff0' 'int'
    |   `-ParenExpr 0x5584160c6ca0 <col:54, col:103> 'int'
    |     `-ConditionalOperator 0x5584160c6c70 <col:55, col:102> 'int'
    |       |-BinaryOperator 0x5584160c6be0 <col:55, col:73> 'int' '&&'
    |       | |-ImplicitCastExpr 0x5584160c6b98 <col:55> 'int' <IntegralCast>
    |       | | `-ImplicitCastExpr 0x5584160c6b80 <col:55> '_Bool' <LValueToRValue>
    |       | |   `-DeclRefExpr 0x5584160c6b20 <col:55> '_Bool' lvalue Var 0x5584160befc8 'y$w_buff1_used' '_Bool'
    |       | `-ImplicitCastExpr 0x5584160c6bc8 <col:73> 'int' <IntegralCast>
    |       |   `-ImplicitCastExpr 0x5584160c6bb0 <col:73> '_Bool' <LValueToRValue>
    |       |     `-DeclRefExpr 0x5584160c6b40 <col:73> '_Bool' lvalue Var 0x5584160beb78 'y$r_buff1_thd0' '_Bool'
    |       |-ImplicitCastExpr 0x5584160c6c40 <col:90> 'int' <LValueToRValue>
    |       | `-DeclRefExpr 0x5584160c6c00 <col:90> 'int' lvalue Var 0x5584160bef50 'y$w_buff1' 'int'
    |       `-ImplicitCastExpr 0x5584160c6c58 <col:102> 'int' <LValueToRValue>
    |         `-DeclRefExpr 0x5584160c6c20 <col:102> 'int' lvalue Var 0x5584160be7b0 'y' 'int'
    |-BinaryOperator 0x5584160c6f10 <line:808:3, col:66> '_Bool' '='
    | |-DeclRefExpr 0x5584160c6d28 <col:3> '_Bool' lvalue Var 0x5584160beed0 'y$w_buff0_used' '_Bool'
    | `-ImplicitCastExpr 0x5584160c6ef8 <col:20, col:66> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x5584160c6ec8 <col:20, col:66> 'int'
    |     |-BinaryOperator 0x5584160c6de8 <col:20, col:38> 'int' '&&'
    |     | |-ImplicitCastExpr 0x5584160c6da0 <col:20> 'int' <IntegralCast>
    |     | | `-ImplicitCastExpr 0x5584160c6d88 <col:20> '_Bool' <LValueToRValue>
    |     | |   `-DeclRefExpr 0x5584160c6d48 <col:20> '_Bool' lvalue Var 0x5584160beed0 'y$w_buff0_used' '_Bool'
    |     | `-ImplicitCastExpr 0x5584160c6dd0 <col:38> 'int' <IntegralCast>
    |     |   `-ImplicitCastExpr 0x5584160c6db8 <col:38> '_Bool' <LValueToRValue>
    |     |     `-DeclRefExpr 0x5584160c6d68 <col:38> '_Bool' lvalue Var 0x5584160be940 'y$r_buff0_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x5584160c6e80 <col:55, col:62> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x5584160c6e38 <col:55, col:62> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x5584160c6e08 <col:62> 'int' 0
    |     `-ImplicitCastExpr 0x5584160c6eb0 <col:66> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x5584160c6e98 <col:66> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x5584160c6e60 <col:66> '_Bool' lvalue Var 0x5584160beed0 'y$w_buff0_used' '_Bool'
    |-BinaryOperator 0x5584160c71f8 <line:809:3, col:102> '_Bool' '='
    | |-DeclRefExpr 0x5584160c6f30 <col:3> '_Bool' lvalue Var 0x5584160befc8 'y$w_buff1_used' '_Bool'
    | `-ImplicitCastExpr 0x5584160c71e0 <col:20, col:102> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x5584160c71b0 <col:20, col:102> 'int'
    |     |-BinaryOperator 0x5584160c70d0 <col:20, col:74> 'int' '||'
    |     | |-BinaryOperator 0x5584160c6ff0 <col:20, col:38> 'int' '&&'
    |     | | |-ImplicitCastExpr 0x5584160c6fa8 <col:20> 'int' <IntegralCast>
    |     | | | `-ImplicitCastExpr 0x5584160c6f90 <col:20> '_Bool' <LValueToRValue>
    |     | | |   `-DeclRefExpr 0x5584160c6f50 <col:20> '_Bool' lvalue Var 0x5584160beed0 'y$w_buff0_used' '_Bool'
    |     | | `-ImplicitCastExpr 0x5584160c6fd8 <col:38> 'int' <IntegralCast>
    |     | |   `-ImplicitCastExpr 0x5584160c6fc0 <col:38> '_Bool' <LValueToRValue>
    |     | |     `-DeclRefExpr 0x5584160c6f70 <col:38> '_Bool' lvalue Var 0x5584160be940 'y$r_buff0_thd0' '_Bool'
    |     | `-BinaryOperator 0x5584160c70b0 <col:56, col:74> 'int' '&&'
    |     |   |-ImplicitCastExpr 0x5584160c7068 <col:56> 'int' <IntegralCast>
    |     |   | `-ImplicitCastExpr 0x5584160c7050 <col:56> '_Bool' <LValueToRValue>
    |     |   |   `-DeclRefExpr 0x5584160c7010 <col:56> '_Bool' lvalue Var 0x5584160befc8 'y$w_buff1_used' '_Bool'
    |     |   `-ImplicitCastExpr 0x5584160c7098 <col:74> 'int' <IntegralCast>
    |     |     `-ImplicitCastExpr 0x5584160c7080 <col:74> '_Bool' <LValueToRValue>
    |     |       `-DeclRefExpr 0x5584160c7030 <col:74> '_Bool' lvalue Var 0x5584160beb78 'y$r_buff1_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x5584160c7168 <col:91, col:98> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x5584160c7120 <col:91, col:98> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x5584160c70f0 <col:98> 'int' 0
    |     `-ImplicitCastExpr 0x5584160c7198 <col:102> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x5584160c7180 <col:102> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x5584160c7148 <col:102> '_Bool' lvalue Var 0x5584160befc8 'y$w_buff1_used' '_Bool'
    |-BinaryOperator 0x5584160c7400 <line:810:3, col:66> '_Bool' '='
    | |-DeclRefExpr 0x5584160c7218 <col:3> '_Bool' lvalue Var 0x5584160be940 'y$r_buff0_thd0' '_Bool'
    | `-ImplicitCastExpr 0x5584160c73e8 <col:20, col:66> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x5584160c73b8 <col:20, col:66> 'int'
    |     |-BinaryOperator 0x5584160c72d8 <col:20, col:38> 'int' '&&'
    |     | |-ImplicitCastExpr 0x5584160c7290 <col:20> 'int' <IntegralCast>
    |     | | `-ImplicitCastExpr 0x5584160c7278 <col:20> '_Bool' <LValueToRValue>
    |     | |   `-DeclRefExpr 0x5584160c7238 <col:20> '_Bool' lvalue Var 0x5584160beed0 'y$w_buff0_used' '_Bool'
    |     | `-ImplicitCastExpr 0x5584160c72c0 <col:38> 'int' <IntegralCast>
    |     |   `-ImplicitCastExpr 0x5584160c72a8 <col:38> '_Bool' <LValueToRValue>
    |     |     `-DeclRefExpr 0x5584160c7258 <col:38> '_Bool' lvalue Var 0x5584160be940 'y$r_buff0_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x5584160c7370 <col:55, col:62> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x5584160c7328 <col:55, col:62> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x5584160c72f8 <col:62> 'int' 0
    |     `-ImplicitCastExpr 0x5584160c73a0 <col:66> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x5584160c7388 <col:66> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x5584160c7350 <col:66> '_Bool' lvalue Var 0x5584160be940 'y$r_buff0_thd0' '_Bool'
    |-BinaryOperator 0x5584160c76e8 <line:811:3, col:102> '_Bool' '='
    | |-DeclRefExpr 0x5584160c7420 <col:3> '_Bool' lvalue Var 0x5584160beb78 'y$r_buff1_thd0' '_Bool'
    | `-ImplicitCastExpr 0x5584160c76d0 <col:20, col:102> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x5584160c76a0 <col:20, col:102> 'int'
    |     |-BinaryOperator 0x5584160c75c0 <col:20, col:74> 'int' '||'
    |     | |-BinaryOperator 0x5584160c74e0 <col:20, col:38> 'int' '&&'
    |     | | |-ImplicitCastExpr 0x5584160c7498 <col:20> 'int' <IntegralCast>
    |     | | | `-ImplicitCastExpr 0x5584160c7480 <col:20> '_Bool' <LValueToRValue>
    |     | | |   `-DeclRefExpr 0x5584160c7440 <col:20> '_Bool' lvalue Var 0x5584160beed0 'y$w_buff0_used' '_Bool'
    |     | | `-ImplicitCastExpr 0x5584160c74c8 <col:38> 'int' <IntegralCast>
    |     | |   `-ImplicitCastExpr 0x5584160c74b0 <col:38> '_Bool' <LValueToRValue>
    |     | |     `-DeclRefExpr 0x5584160c7460 <col:38> '_Bool' lvalue Var 0x5584160be940 'y$r_buff0_thd0' '_Bool'
    |     | `-BinaryOperator 0x5584160c75a0 <col:56, col:74> 'int' '&&'
    |     |   |-ImplicitCastExpr 0x5584160c7558 <col:56> 'int' <IntegralCast>
    |     |   | `-ImplicitCastExpr 0x5584160c7540 <col:56> '_Bool' <LValueToRValue>
    |     |   |   `-DeclRefExpr 0x5584160c7500 <col:56> '_Bool' lvalue Var 0x5584160befc8 'y$w_buff1_used' '_Bool'
    |     |   `-ImplicitCastExpr 0x5584160c7588 <col:74> 'int' <IntegralCast>
    |     |     `-ImplicitCastExpr 0x5584160c7570 <col:74> '_Bool' <LValueToRValue>
    |     |       `-DeclRefExpr 0x5584160c7520 <col:74> '_Bool' lvalue Var 0x5584160beb78 'y$r_buff1_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x5584160c7658 <col:91, col:98> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x5584160c7610 <col:91, col:98> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x5584160c75e0 <col:98> 'int' 0
    |     `-ImplicitCastExpr 0x5584160c7688 <col:102> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x5584160c7670 <col:102> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x5584160c7638 <col:102> '_Bool' lvalue Var 0x5584160beb78 'y$r_buff1_thd0' '_Bool'
    |-CallExpr 0x5584160c7740 <line:812:3, col:25> 'void'
    | `-ImplicitCastExpr 0x5584160c7728 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x5584160c7708 <col:3> 'void ()' Function 0x558416064f00 '__VERIFIER_atomic_end' 'void ()'
    |-CallExpr 0x5584160c7798 <line:813:3, col:27> 'void'
    | `-ImplicitCastExpr 0x5584160c7780 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x5584160c7760 <col:3> 'void ()' Function 0x558416064e40 '__VERIFIER_atomic_begin' 'void ()'
    |-BinaryOperator 0x5584160c7848 <line:814:3, col:45> '_Bool' '='
    | |-DeclRefExpr 0x5584160c77b8 <col:3> '_Bool' lvalue Var 0x5584160bf040 'weak$$choice0' '_Bool'
    | `-ImplicitCastExpr 0x5584160c7830 <col:19, col:45> '_Bool' <PointerToBoolean>
    |   `-CallExpr 0x5584160c7810 <col:19, col:45> 'void *'
    |     `-ImplicitCastExpr 0x5584160c77f8 <col:19> 'void *(*)(void)' <FunctionToPointerDecay>
    |       `-DeclRefExpr 0x5584160c77d8 <col:19> 'void *(void)' Function 0x558416064958 '__VERIFIER_nondet_pointer' 'void *(void)'
    |-BinaryOperator 0x5584160c78f8 <line:815:3, col:45> '_Bool' '='
    | |-DeclRefExpr 0x5584160c7868 <col:3> '_Bool' lvalue Var 0x5584160bf0b8 'weak$$choice2' '_Bool'
    | `-ImplicitCastExpr 0x5584160c78e0 <col:19, col:45> '_Bool' <PointerToBoolean>
    |   `-CallExpr 0x5584160c78c0 <col:19, col:45> 'void *'
    |     `-ImplicitCastExpr 0x5584160c78a8 <col:19> 'void *(*)(void)' <FunctionToPointerDecay>
    |       `-DeclRefExpr 0x5584160c7888 <col:19> 'void *(void)' Function 0x558416064958 '__VERIFIER_nondet_pointer' 'void *(void)'
    |-BinaryOperator 0x5584160c7970 <line:816:3, col:21> '_Bool' '='
    | |-DeclRefExpr 0x5584160c7918 <col:3> '_Bool' lvalue Var 0x5584160be848 'y$flush_delayed' '_Bool'
    | `-ImplicitCastExpr 0x5584160c7958 <col:21> '_Bool' <LValueToRValue>
    |   `-DeclRefExpr 0x5584160c7938 <col:21> '_Bool' lvalue Var 0x5584160bf0b8 'weak$$choice2' '_Bool'
    |-BinaryOperator 0x5584160c79e8 <line:817:3, col:15> 'int' '='
    | |-DeclRefExpr 0x5584160c7990 <col:3> 'int' lvalue Var 0x5584160be8c8 'y$mem_tmp' 'int'
    | `-ImplicitCastExpr 0x5584160c79d0 <col:15> 'int' <LValueToRValue>
    |   `-DeclRefExpr 0x5584160c79b0 <col:15> 'int' lvalue Var 0x5584160be7b0 'y' 'int'
    |-BinaryOperator 0x5584160c7e38 <line:818:3, col:162> 'int' '='
    | |-DeclRefExpr 0x5584160c7a08 <col:3> 'int' lvalue Var 0x5584160be7b0 'y' 'int'
    | `-ConditionalOperator 0x5584160c7e08 <col:7, col:162> 'int'
    |   |-BinaryOperator 0x5584160c7c30 <col:7, col:84> 'int' '||'
    |   | |-BinaryOperator 0x5584160c7b38 <col:7, col:46> 'int' '||'
    |   | | |-UnaryOperator 0x5584160c7a60 <col:7, col:8> 'int' prefix '!' cannot overflow
    |   | | | `-ImplicitCastExpr 0x5584160c7a48 <col:8> '_Bool' <LValueToRValue>
    |   | | |   `-DeclRefExpr 0x5584160c7a28 <col:8> '_Bool' lvalue Var 0x5584160beed0 'y$w_buff0_used' '_Bool'
    |   | | `-BinaryOperator 0x5584160c7b18 <col:26, col:46> 'int' '&&'
    |   | |   |-UnaryOperator 0x5584160c7ab0 <col:26, col:27> 'int' prefix '!' cannot overflow
    |   | |   | `-ImplicitCastExpr 0x5584160c7a98 <col:27> '_Bool' <LValueToRValue>
    |   | |   |   `-DeclRefExpr 0x5584160c7a78 <col:27> '_Bool' lvalue Var 0x5584160be940 'y$r_buff0_thd0' '_Bool'
    |   | |   `-UnaryOperator 0x5584160c7b00 <col:45, col:46> 'int' prefix '!' cannot overflow
    |   | |     `-ImplicitCastExpr 0x5584160c7ae8 <col:46> '_Bool' <LValueToRValue>
    |   | |       `-DeclRefExpr 0x5584160c7ac8 <col:46> '_Bool' lvalue Var 0x5584160befc8 'y$w_buff1_used' '_Bool'
    |   | `-BinaryOperator 0x5584160c7c10 <col:64, col:84> 'int' '&&'
    |   |   |-UnaryOperator 0x5584160c7ba8 <col:64, col:65> 'int' prefix '!' cannot overflow
    |   |   | `-ImplicitCastExpr 0x5584160c7b90 <col:65> '_Bool' <LValueToRValue>
    |   |   |   `-DeclRefExpr 0x5584160c7b58 <col:65> '_Bool' lvalue Var 0x5584160be940 'y$r_buff0_thd0' '_Bool'
    |   |   `-UnaryOperator 0x5584160c7bf8 <col:83, col:84> 'int' prefix '!' cannot overflow
    |   |     `-ImplicitCastExpr 0x5584160c7be0 <col:84> '_Bool' <LValueToRValue>
    |   |       `-DeclRefExpr 0x5584160c7bc0 <col:84> '_Bool' lvalue Var 0x5584160beb78 'y$r_buff1_thd0' '_Bool'
    |   |-ImplicitCastExpr 0x5584160c7df0 <col:101> 'int' <LValueToRValue>
    |   | `-DeclRefExpr 0x5584160c7c50 <col:101> 'int' lvalue Var 0x5584160be7b0 'y' 'int'
    |   `-ParenExpr 0x5584160c7dd0 <col:105, col:162> 'int'
    |     `-ConditionalOperator 0x5584160c7da0 <col:106, col:153> 'int'
    |       |-BinaryOperator 0x5584160c7d10 <col:106, col:124> 'int' '&&'
    |       | |-ImplicitCastExpr 0x5584160c7cc8 <col:106> 'int' <IntegralCast>
    |       | | `-ImplicitCastExpr 0x5584160c7cb0 <col:106> '_Bool' <LValueToRValue>
    |       | |   `-DeclRefExpr 0x5584160c7c70 <col:106> '_Bool' lvalue Var 0x5584160beed0 'y$w_buff0_used' '_Bool'
    |       | `-ImplicitCastExpr 0x5584160c7cf8 <col:124> 'int' <IntegralCast>
    |       |   `-ImplicitCastExpr 0x5584160c7ce0 <col:124> '_Bool' <LValueToRValue>
    |       |     `-DeclRefExpr 0x5584160c7c90 <col:124> '_Bool' lvalue Var 0x5584160be940 'y$r_buff0_thd0' '_Bool'
    |       |-ImplicitCastExpr 0x5584160c7d70 <col:141> 'int' <LValueToRValue>
    |       | `-DeclRefExpr 0x5584160c7d30 <col:141> 'int' lvalue Var 0x5584160bee58 'y$w_buff0' 'int'
    |       `-ImplicitCastExpr 0x5584160c7d88 <col:153> 'int' <LValueToRValue>
    |         `-DeclRefExpr 0x5584160c7d50 <col:153> 'int' lvalue Var 0x5584160bef50 'y$w_buff1' 'int'
    |-BinaryOperator 0x5584160c8348 <line:819:3, col:208> 'int' '='
    | |-DeclRefExpr 0x5584160c7e58 <col:3> 'int' lvalue Var 0x5584160bee58 'y$w_buff0' 'int'
    | `-ConditionalOperator 0x5584160c8318 <col:15, col:208> 'int'
    |   |-ImplicitCastExpr 0x5584160c82e8 <col:15> 'int' <IntegralCast>
    |   | `-ImplicitCastExpr 0x5584160c82d0 <col:15> '_Bool' <LValueToRValue>
    |   |   `-DeclRefExpr 0x5584160c7e78 <col:15> '_Bool' lvalue Var 0x5584160bf0b8 'weak$$choice2' '_Bool'
    |   |-ImplicitCastExpr 0x5584160c8300 <col:31> 'int' <LValueToRValue>
    |   | `-DeclRefExpr 0x5584160c7e98 <col:31> 'int' lvalue Var 0x5584160bee58 'y$w_buff0' 'int'
    |   `-ParenExpr 0x5584160c82b0 <col:43, col:208> 'int'
    |     `-ConditionalOperator 0x5584160c8280 <col:44, col:207> 'int'
    |       |-BinaryOperator 0x5584160c80a8 <col:44, col:121> 'int' '||'
    |       | |-BinaryOperator 0x5584160c7fc8 <col:44, col:83> 'int' '||'
    |       | | |-UnaryOperator 0x5584160c7ef0 <col:44, col:45> 'int' prefix '!' cannot overflow
    |       | | | `-ImplicitCastExpr 0x5584160c7ed8 <col:45> '_Bool' <LValueToRValue>
    |       | | |   `-DeclRefExpr 0x5584160c7eb8 <col:45> '_Bool' lvalue Var 0x5584160beed0 'y$w_buff0_used' '_Bool'
    |       | | `-BinaryOperator 0x5584160c7fa8 <col:63, col:83> 'int' '&&'
    |       | |   |-UnaryOperator 0x5584160c7f40 <col:63, col:64> 'int' prefix '!' cannot overflow
    |       | |   | `-ImplicitCastExpr 0x5584160c7f28 <col:64> '_Bool' <LValueToRValue>
    |       | |   |   `-DeclRefExpr 0x5584160c7f08 <col:64> '_Bool' lvalue Var 0x5584160be940 'y$r_buff0_thd0' '_Bool'
    |       | |   `-UnaryOperator 0x5584160c7f90 <col:82, col:83> 'int' prefix '!' cannot overflow
    |       | |     `-ImplicitCastExpr 0x5584160c7f78 <col:83> '_Bool' <LValueToRValue>
    |       | |       `-DeclRefExpr 0x5584160c7f58 <col:83> '_Bool' lvalue Var 0x5584160befc8 'y$w_buff1_used' '_Bool'
    |       | `-BinaryOperator 0x5584160c8088 <col:101, col:121> 'int' '&&'
    |       |   |-UnaryOperator 0x5584160c8020 <col:101, col:102> 'int' prefix '!' cannot overflow
    |       |   | `-ImplicitCastExpr 0x5584160c8008 <col:102> '_Bool' <LValueToRValue>
    |       |   |   `-DeclRefExpr 0x5584160c7fe8 <col:102> '_Bool' lvalue Var 0x5584160be940 'y$r_buff0_thd0' '_Bool'
    |       |   `-UnaryOperator 0x5584160c8070 <col:120, col:121> 'int' prefix '!' cannot overflow
    |       |     `-ImplicitCastExpr 0x5584160c8058 <col:121> '_Bool' <LValueToRValue>
    |       |       `-DeclRefExpr 0x5584160c8038 <col:121> '_Bool' lvalue Var 0x5584160beb78 'y$r_buff1_thd0' '_Bool'
    |       |-ImplicitCastExpr 0x5584160c8268 <col:138> 'int' <LValueToRValue>
    |       | `-DeclRefExpr 0x5584160c80c8 <col:138> 'int' lvalue Var 0x5584160bee58 'y$w_buff0' 'int'
    |       `-ParenExpr 0x5584160c8248 <col:150, col:207> 'int'
    |         `-ConditionalOperator 0x5584160c8218 <col:151, col:198> 'int'
    |           |-BinaryOperator 0x5584160c8188 <col:151, col:169> 'int' '&&'
    |           | |-ImplicitCastExpr 0x5584160c8140 <col:151> 'int' <IntegralCast>
    |           | | `-ImplicitCastExpr 0x5584160c8128 <col:151> '_Bool' <LValueToRValue>
    |           | |   `-DeclRefExpr 0x5584160c80e8 <col:151> '_Bool' lvalue Var 0x5584160beed0 'y$w_buff0_used' '_Bool'
    |           | `-ImplicitCastExpr 0x5584160c8170 <col:169> 'int' <IntegralCast>
    |           |   `-ImplicitCastExpr 0x5584160c8158 <col:169> '_Bool' <LValueToRValue>
    |           |     `-DeclRefExpr 0x5584160c8108 <col:169> '_Bool' lvalue Var 0x5584160be940 'y$r_buff0_thd0' '_Bool'
    |           |-ImplicitCastExpr 0x5584160c81e8 <col:186> 'int' <LValueToRValue>
    |           | `-DeclRefExpr 0x5584160c81a8 <col:186> 'int' lvalue Var 0x5584160bee58 'y$w_buff0' 'int'
    |           `-ImplicitCastExpr 0x5584160c8200 <col:198> 'int' <LValueToRValue>
    |             `-DeclRefExpr 0x5584160c81c8 <col:198> 'int' lvalue Var 0x5584160bee58 'y$w_buff0' 'int'
    |-BinaryOperator 0x5584160c8858 <line:820:3, col:208> 'int' '='
    | |-DeclRefExpr 0x5584160c8368 <col:3> 'int' lvalue Var 0x5584160bef50 'y$w_buff1' 'int'
    | `-ConditionalOperator 0x5584160c8828 <col:15, col:208> 'int'
    |   |-ImplicitCastExpr 0x5584160c87f8 <col:15> 'int' <IntegralCast>
    |   | `-ImplicitCastExpr 0x5584160c87e0 <col:15> '_Bool' <LValueToRValue>
    |   |   `-DeclRefExpr 0x5584160c8388 <col:15> '_Bool' lvalue Var 0x5584160bf0b8 'weak$$choice2' '_Bool'
    |   |-ImplicitCastExpr 0x5584160c8810 <col:31> 'int' <LValueToRValue>
    |   | `-DeclRefExpr 0x5584160c83a8 <col:31> 'int' lvalue Var 0x5584160bef50 'y$w_buff1' 'int'
    |   `-ParenExpr 0x5584160c87c0 <col:43, col:208> 'int'
    |     `-ConditionalOperator 0x5584160c8790 <col:44, col:207> 'int'
    |       |-BinaryOperator 0x5584160c85b8 <col:44, col:121> 'int' '||'
    |       | |-BinaryOperator 0x5584160c84d8 <col:44, col:83> 'int' '||'
    |       | | |-UnaryOperator 0x5584160c8400 <col:44, col:45> 'int' prefix '!' cannot overflow
    |       | | | `-ImplicitCastExpr 0x5584160c83e8 <col:45> '_Bool' <LValueToRValue>
    |       | | |   `-DeclRefExpr 0x5584160c83c8 <col:45> '_Bool' lvalue Var 0x5584160beed0 'y$w_buff0_used' '_Bool'
    |       | | `-BinaryOperator 0x5584160c84b8 <col:63, col:83> 'int' '&&'
    |       | |   |-UnaryOperator 0x5584160c8450 <col:63, col:64> 'int' prefix '!' cannot overflow
    |       | |   | `-ImplicitCastExpr 0x5584160c8438 <col:64> '_Bool' <LValueToRValue>
    |       | |   |   `-DeclRefExpr 0x5584160c8418 <col:64> '_Bool' lvalue Var 0x5584160be940 'y$r_buff0_thd0' '_Bool'
    |       | |   `-UnaryOperator 0x5584160c84a0 <col:82, col:83> 'int' prefix '!' cannot overflow
    |       | |     `-ImplicitCastExpr 0x5584160c8488 <col:83> '_Bool' <LValueToRValue>
    |       | |       `-DeclRefExpr 0x5584160c8468 <col:83> '_Bool' lvalue Var 0x5584160befc8 'y$w_buff1_used' '_Bool'
    |       | `-BinaryOperator 0x5584160c8598 <col:101, col:121> 'int' '&&'
    |       |   |-UnaryOperator 0x5584160c8530 <col:101, col:102> 'int' prefix '!' cannot overflow
    |       |   | `-ImplicitCastExpr 0x5584160c8518 <col:102> '_Bool' <LValueToRValue>
    |       |   |   `-DeclRefExpr 0x5584160c84f8 <col:102> '_Bool' lvalue Var 0x5584160be940 'y$r_buff0_thd0' '_Bool'
    |       |   `-UnaryOperator 0x5584160c8580 <col:120, col:121> 'int' prefix '!' cannot overflow
    |       |     `-ImplicitCastExpr 0x5584160c8568 <col:121> '_Bool' <LValueToRValue>
    |       |       `-DeclRefExpr 0x5584160c8548 <col:121> '_Bool' lvalue Var 0x5584160beb78 'y$r_buff1_thd0' '_Bool'
    |       |-ImplicitCastExpr 0x5584160c8778 <col:138> 'int' <LValueToRValue>
    |       | `-DeclRefExpr 0x5584160c85d8 <col:138> 'int' lvalue Var 0x5584160bef50 'y$w_buff1' 'int'
    |       `-ParenExpr 0x5584160c8758 <col:150, col:207> 'int'
    |         `-ConditionalOperator 0x5584160c8728 <col:151, col:198> 'int'
    |           |-BinaryOperator 0x5584160c8698 <col:151, col:169> 'int' '&&'
    |           | |-ImplicitCastExpr 0x5584160c8650 <col:151> 'int' <IntegralCast>
    |           | | `-ImplicitCastExpr 0x5584160c8638 <col:151> '_Bool' <LValueToRValue>
    |           | |   `-DeclRefExpr 0x5584160c85f8 <col:151> '_Bool' lvalue Var 0x5584160beed0 'y$w_buff0_used' '_Bool'
    |           | `-ImplicitCastExpr 0x5584160c8680 <col:169> 'int' <IntegralCast>
    |           |   `-ImplicitCastExpr 0x5584160c8668 <col:169> '_Bool' <LValueToRValue>
    |           |     `-DeclRefExpr 0x5584160c8618 <col:169> '_Bool' lvalue Var 0x5584160be940 'y$r_buff0_thd0' '_Bool'
    |           |-ImplicitCastExpr 0x5584160c86f8 <col:186> 'int' <LValueToRValue>
    |           | `-DeclRefExpr 0x5584160c86b8 <col:186> 'int' lvalue Var 0x5584160bef50 'y$w_buff1' 'int'
    |           `-ImplicitCastExpr 0x5584160c8710 <col:198> 'int' <LValueToRValue>
    |             `-DeclRefExpr 0x5584160c86d8 <col:198> 'int' lvalue Var 0x5584160bef50 'y$w_buff1' 'int'
    |-BinaryOperator 0x5584160c8e10 <line:821:3, col:227> '_Bool' '='
    | |-DeclRefExpr 0x5584160c8878 <col:3> '_Bool' lvalue Var 0x5584160beed0 'y$w_buff0_used' '_Bool'
    | `-ImplicitCastExpr 0x5584160c8df8 <col:20, col:227> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x5584160c8dc8 <col:20, col:227> 'int'
    |     |-ImplicitCastExpr 0x5584160c8d80 <col:20> 'int' <IntegralCast>
    |     | `-ImplicitCastExpr 0x5584160c8d68 <col:20> '_Bool' <LValueToRValue>
    |     |   `-DeclRefExpr 0x5584160c8898 <col:20> '_Bool' lvalue Var 0x5584160bf0b8 'weak$$choice2' '_Bool'
    |     |-ImplicitCastExpr 0x5584160c8db0 <col:36> 'int' <IntegralCast>
    |     | `-ImplicitCastExpr 0x5584160c8d98 <col:36> '_Bool' <LValueToRValue>
    |     |   `-DeclRefExpr 0x5584160c88b8 <col:36> '_Bool' lvalue Var 0x5584160beed0 'y$w_buff0_used' '_Bool'
    |     `-ParenExpr 0x5584160c8d48 <col:53, col:227> 'int'
    |       `-ConditionalOperator 0x5584160c8d18 <col:54, col:226> 'int'
    |         |-BinaryOperator 0x5584160c8ac8 <col:54, col:131> 'int' '||'
    |         | |-BinaryOperator 0x5584160c89e8 <col:54, col:93> 'int' '||'
    |         | | |-UnaryOperator 0x5584160c8910 <col:54, col:55> 'int' prefix '!' cannot overflow
    |         | | | `-ImplicitCastExpr 0x5584160c88f8 <col:55> '_Bool' <LValueToRValue>
    |         | | |   `-DeclRefExpr 0x5584160c88d8 <col:55> '_Bool' lvalue Var 0x5584160beed0 'y$w_buff0_used' '_Bool'
    |         | | `-BinaryOperator 0x5584160c89c8 <col:73, col:93> 'int' '&&'
    |         | |   |-UnaryOperator 0x5584160c8960 <col:73, col:74> 'int' prefix '!' cannot overflow
    |         | |   | `-ImplicitCastExpr 0x5584160c8948 <col:74> '_Bool' <LValueToRValue>
    |         | |   |   `-DeclRefExpr 0x5584160c8928 <col:74> '_Bool' lvalue Var 0x5584160be940 'y$r_buff0_thd0' '_Bool'
    |         | |   `-UnaryOperator 0x5584160c89b0 <col:92, col:93> 'int' prefix '!' cannot overflow
    |         | |     `-ImplicitCastExpr 0x5584160c8998 <col:93> '_Bool' <LValueToRValue>
    |         | |       `-DeclRefExpr 0x5584160c8978 <col:93> '_Bool' lvalue Var 0x5584160befc8 'y$w_buff1_used' '_Bool'
    |         | `-BinaryOperator 0x5584160c8aa8 <col:111, col:131> 'int' '&&'
    |         |   |-UnaryOperator 0x5584160c8a40 <col:111, col:112> 'int' prefix '!' cannot overflow
    |         |   | `-ImplicitCastExpr 0x5584160c8a28 <col:112> '_Bool' <LValueToRValue>
    |         |   |   `-DeclRefExpr 0x5584160c8a08 <col:112> '_Bool' lvalue Var 0x5584160be940 'y$r_buff0_thd0' '_Bool'
    |         |   `-UnaryOperator 0x5584160c8a90 <col:130, col:131> 'int' prefix '!' cannot overflow
    |         |     `-ImplicitCastExpr 0x5584160c8a78 <col:131> '_Bool' <LValueToRValue>
    |         |       `-DeclRefExpr 0x5584160c8a58 <col:131> '_Bool' lvalue Var 0x5584160beb78 'y$r_buff1_thd0' '_Bool'
    |         |-ImplicitCastExpr 0x5584160c8d00 <col:148> 'int' <IntegralCast>
    |         | `-ImplicitCastExpr 0x5584160c8ce8 <col:148> '_Bool' <LValueToRValue>
    |         |   `-DeclRefExpr 0x5584160c8ae8 <col:148> '_Bool' lvalue Var 0x5584160beed0 'y$w_buff0_used' '_Bool'
    |         `-ParenExpr 0x5584160c8cc8 <col:165, col:226> 'int'
    |           `-ConditionalOperator 0x5584160c8c98 <col:166, col:212> 'int'
    |             |-BinaryOperator 0x5584160c8bb8 <col:166, col:184> 'int' '&&'
    |             | |-ImplicitCastExpr 0x5584160c8b60 <col:166> 'int' <IntegralCast>
    |             | | `-ImplicitCastExpr 0x5584160c8b48 <col:166> '_Bool' <LValueToRValue>
    |             | |   `-DeclRefExpr 0x5584160c8b08 <col:166> '_Bool' lvalue Var 0x5584160beed0 'y$w_buff0_used' '_Bool'
    |             | `-ImplicitCastExpr 0x5584160c8ba0 <col:184> 'int' <IntegralCast>
    |             |   `-ImplicitCastExpr 0x5584160c8b78 <col:184> '_Bool' <LValueToRValue>
    |             |     `-DeclRefExpr 0x5584160c8b28 <col:184> '_Bool' lvalue Var 0x5584160be940 'y$r_buff0_thd0' '_Bool'
    |             |-ImplicitCastExpr 0x5584160c8c50 <col:201, col:208> 'int' <IntegralCast>
    |             | `-CStyleCastExpr 0x5584160c8c08 <col:201, col:208> '_Bool' <IntegralToBoolean>
    |             |   `-IntegerLiteral 0x5584160c8bd8 <col:208> 'int' 0
    |             `-ImplicitCastExpr 0x5584160c8c80 <col:212> 'int' <IntegralCast>
    |               `-ImplicitCastExpr 0x5584160c8c68 <col:212> '_Bool' <LValueToRValue>
    |                 `-DeclRefExpr 0x5584160c8c30 <col:212> '_Bool' lvalue Var 0x5584160beed0 'y$w_buff0_used' '_Bool'
    |-BinaryOperator 0x5584160c93d8 <line:822:3, col:221> '_Bool' '='
    | |-DeclRefExpr 0x5584160c8e30 <col:3> '_Bool' lvalue Var 0x5584160befc8 'y$w_buff1_used' '_Bool'
    | `-ImplicitCastExpr 0x5584160c93c0 <col:20, col:221> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x5584160c9390 <col:20, col:221> 'int'
    |     |-ImplicitCastExpr 0x5584160c9348 <col:20> 'int' <IntegralCast>
    |     | `-ImplicitCastExpr 0x5584160c9330 <col:20> '_Bool' <LValueToRValue>
    |     |   `-DeclRefExpr 0x5584160c8e50 <col:20> '_Bool' lvalue Var 0x5584160bf0b8 'weak$$choice2' '_Bool'
    |     |-ImplicitCastExpr 0x5584160c9378 <col:36> 'int' <IntegralCast>
    |     | `-ImplicitCastExpr 0x5584160c9360 <col:36> '_Bool' <LValueToRValue>
    |     |   `-DeclRefExpr 0x5584160c8e70 <col:36> '_Bool' lvalue Var 0x5584160befc8 'y$w_buff1_used' '_Bool'
    |     `-ParenExpr 0x5584160c9310 <col:53, col:221> 'int'
    |       `-ConditionalOperator 0x5584160c92e0 <col:54, col:220> 'int'
    |         |-BinaryOperator 0x5584160c9080 <col:54, col:131> 'int' '||'
    |         | |-BinaryOperator 0x5584160c8fa0 <col:54, col:93> 'int' '||'
    |         | | |-UnaryOperator 0x5584160c8ec8 <col:54, col:55> 'int' prefix '!' cannot overflow
    |         | | | `-ImplicitCastExpr 0x5584160c8eb0 <col:55> '_Bool' <LValueToRValue>
    |         | | |   `-DeclRefExpr 0x5584160c8e90 <col:55> '_Bool' lvalue Var 0x5584160beed0 'y$w_buff0_used' '_Bool'
    |         | | `-BinaryOperator 0x5584160c8f80 <col:73, col:93> 'int' '&&'
    |         | |   |-UnaryOperator 0x5584160c8f18 <col:73, col:74> 'int' prefix '!' cannot overflow
    |         | |   | `-ImplicitCastExpr 0x5584160c8f00 <col:74> '_Bool' <LValueToRValue>
    |         | |   |   `-DeclRefExpr 0x5584160c8ee0 <col:74> '_Bool' lvalue Var 0x5584160be940 'y$r_buff0_thd0' '_Bool'
    |         | |   `-UnaryOperator 0x5584160c8f68 <col:92, col:93> 'int' prefix '!' cannot overflow
    |         | |     `-ImplicitCastExpr 0x5584160c8f50 <col:93> '_Bool' <LValueToRValue>
    |         | |       `-DeclRefExpr 0x5584160c8f30 <col:93> '_Bool' lvalue Var 0x5584160befc8 'y$w_buff1_used' '_Bool'
    |         | `-BinaryOperator 0x5584160c9060 <col:111, col:131> 'int' '&&'
    |         |   |-UnaryOperator 0x5584160c8ff8 <col:111, col:112> 'int' prefix '!' cannot overflow
    |         |   | `-ImplicitCastExpr 0x5584160c8fe0 <col:112> '_Bool' <LValueToRValue>
    |         |   |   `-DeclRefExpr 0x5584160c8fc0 <col:112> '_Bool' lvalue Var 0x5584160be940 'y$r_buff0_thd0' '_Bool'
    |         |   `-UnaryOperator 0x5584160c9048 <col:130, col:131> 'int' prefix '!' cannot overflow
    |         |     `-ImplicitCastExpr 0x5584160c9030 <col:131> '_Bool' <LValueToRValue>
    |         |       `-DeclRefExpr 0x5584160c9010 <col:131> '_Bool' lvalue Var 0x5584160beb78 'y$r_buff1_thd0' '_Bool'
    |         |-ImplicitCastExpr 0x5584160c92c8 <col:148> 'int' <IntegralCast>
    |         | `-ImplicitCastExpr 0x5584160c92b0 <col:148> '_Bool' <LValueToRValue>
    |         |   `-DeclRefExpr 0x5584160c90a0 <col:148> '_Bool' lvalue Var 0x5584160befc8 'y$w_buff1_used' '_Bool'
    |         `-ParenExpr 0x5584160c9290 <col:165, col:220> 'int'
    |           `-ConditionalOperator 0x5584160c9260 <col:166, col:219> 'int'
    |             |-BinaryOperator 0x5584160c9160 <col:166, col:184> 'int' '&&'
    |             | |-ImplicitCastExpr 0x5584160c9118 <col:166> 'int' <IntegralCast>
    |             | | `-ImplicitCastExpr 0x5584160c9100 <col:166> '_Bool' <LValueToRValue>
    |             | |   `-DeclRefExpr 0x5584160c90c0 <col:166> '_Bool' lvalue Var 0x5584160beed0 'y$w_buff0_used' '_Bool'
    |             | `-ImplicitCastExpr 0x5584160c9148 <col:184> 'int' <IntegralCast>
    |             |   `-ImplicitCastExpr 0x5584160c9130 <col:184> '_Bool' <LValueToRValue>
    |             |     `-DeclRefExpr 0x5584160c90e0 <col:184> '_Bool' lvalue Var 0x5584160be940 'y$r_buff0_thd0' '_Bool'
    |             |-ImplicitCastExpr 0x5584160c9230 <col:201, col:208> 'int' <IntegralCast>
    |             | `-CStyleCastExpr 0x5584160c91b0 <col:201, col:208> '_Bool' <IntegralToBoolean>
    |             |   `-IntegerLiteral 0x5584160c9180 <col:208> 'int' 0
    |             `-ImplicitCastExpr 0x5584160c9248 <col:212, col:219> 'int' <IntegralCast>
    |               `-CStyleCastExpr 0x5584160c9208 <col:212, col:219> '_Bool' <IntegralToBoolean>
    |                 `-IntegerLiteral 0x5584160c91d8 <col:219> 'int' 0
    |-BinaryOperator 0x5584160c9980 <line:823:3, col:227> '_Bool' '='
    | |-DeclRefExpr 0x5584160c93f8 <col:3> '_Bool' lvalue Var 0x5584160be940 'y$r_buff0_thd0' '_Bool'
    | `-ImplicitCastExpr 0x5584160c9968 <col:20, col:227> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x5584160c9938 <col:20, col:227> 'int'
    |     |-ImplicitCastExpr 0x5584160c98f0 <col:20> 'int' <IntegralCast>
    |     | `-ImplicitCastExpr 0x5584160c98d8 <col:20> '_Bool' <LValueToRValue>
    |     |   `-DeclRefExpr 0x5584160c9418 <col:20> '_Bool' lvalue Var 0x5584160bf0b8 'weak$$choice2' '_Bool'
    |     |-ImplicitCastExpr 0x5584160c9920 <col:36> 'int' <IntegralCast>
    |     | `-ImplicitCastExpr 0x5584160c9908 <col:36> '_Bool' <LValueToRValue>
    |     |   `-DeclRefExpr 0x5584160c9438 <col:36> '_Bool' lvalue Var 0x5584160be940 'y$r_buff0_thd0' '_Bool'
    |     `-ParenExpr 0x5584160c98b8 <col:53, col:227> 'int'
    |       `-ConditionalOperator 0x5584160c9888 <col:54, col:226> 'int'
    |         |-BinaryOperator 0x5584160c9648 <col:54, col:131> 'int' '||'
    |         | |-BinaryOperator 0x5584160c9568 <col:54, col:93> 'int' '||'
    |         | | |-UnaryOperator 0x5584160c9490 <col:54, col:55> 'int' prefix '!' cannot overflow
    |         | | | `-ImplicitCastExpr 0x5584160c9478 <col:55> '_Bool' <LValueToRValue>
    |         | | |   `-DeclRefExpr 0x5584160c9458 <col:55> '_Bool' lvalue Var 0x5584160beed0 'y$w_buff0_used' '_Bool'
    |         | | `-BinaryOperator 0x5584160c9548 <col:73, col:93> 'int' '&&'
    |         | |   |-UnaryOperator 0x5584160c94e0 <col:73, col:74> 'int' prefix '!' cannot overflow
    |         | |   | `-ImplicitCastExpr 0x5584160c94c8 <col:74> '_Bool' <LValueToRValue>
    |         | |   |   `-DeclRefExpr 0x5584160c94a8 <col:74> '_Bool' lvalue Var 0x5584160be940 'y$r_buff0_thd0' '_Bool'
    |         | |   `-UnaryOperator 0x5584160c9530 <col:92, col:93> 'int' prefix '!' cannot overflow
    |         | |     `-ImplicitCastExpr 0x5584160c9518 <col:93> '_Bool' <LValueToRValue>
    |         | |       `-DeclRefExpr 0x5584160c94f8 <col:93> '_Bool' lvalue Var 0x5584160befc8 'y$w_buff1_used' '_Bool'
    |         | `-BinaryOperator 0x5584160c9628 <col:111, col:131> 'int' '&&'
    |         |   |-UnaryOperator 0x5584160c95c0 <col:111, col:112> 'int' prefix '!' cannot overflow
    |         |   | `-ImplicitCastExpr 0x5584160c95a8 <col:112> '_Bool' <LValueToRValue>
    |         |   |   `-DeclRefExpr 0x5584160c9588 <col:112> '_Bool' lvalue Var 0x5584160be940 'y$r_buff0_thd0' '_Bool'
    |         |   `-UnaryOperator 0x5584160c9610 <col:130, col:131> 'int' prefix '!' cannot overflow
    |         |     `-ImplicitCastExpr 0x5584160c95f8 <col:131> '_Bool' <LValueToRValue>
    |         |       `-DeclRefExpr 0x5584160c95d8 <col:131> '_Bool' lvalue Var 0x5584160beb78 'y$r_buff1_thd0' '_Bool'
    |         |-ImplicitCastExpr 0x5584160c9870 <col:148> 'int' <IntegralCast>
    |         | `-ImplicitCastExpr 0x5584160c9858 <col:148> '_Bool' <LValueToRValue>
    |         |   `-DeclRefExpr 0x5584160c9668 <col:148> '_Bool' lvalue Var 0x5584160be940 'y$r_buff0_thd0' '_Bool'
    |         `-ParenExpr 0x5584160c9838 <col:165, col:226> 'int'
    |           `-ConditionalOperator 0x5584160c9808 <col:166, col:212> 'int'
    |             |-BinaryOperator 0x5584160c9728 <col:166, col:184> 'int' '&&'
    |             | |-ImplicitCastExpr 0x5584160c96e0 <col:166> 'int' <IntegralCast>
    |             | | `-ImplicitCastExpr 0x5584160c96c8 <col:166> '_Bool' <LValueToRValue>
    |             | |   `-DeclRefExpr 0x5584160c9688 <col:166> '_Bool' lvalue Var 0x5584160beed0 'y$w_buff0_used' '_Bool'
    |             | `-ImplicitCastExpr 0x5584160c9710 <col:184> 'int' <IntegralCast>
    |             |   `-ImplicitCastExpr 0x5584160c96f8 <col:184> '_Bool' <LValueToRValue>
    |             |     `-DeclRefExpr 0x5584160c96a8 <col:184> '_Bool' lvalue Var 0x5584160be940 'y$r_buff0_thd0' '_Bool'
    |             |-ImplicitCastExpr 0x5584160c97c0 <col:201, col:208> 'int' <IntegralCast>
    |             | `-CStyleCastExpr 0x5584160c9778 <col:201, col:208> '_Bool' <IntegralToBoolean>
    |             |   `-IntegerLiteral 0x5584160c9748 <col:208> 'int' 0
    |             `-ImplicitCastExpr 0x5584160c97f0 <col:212> 'int' <IntegralCast>
    |               `-ImplicitCastExpr 0x5584160c97d8 <col:212> '_Bool' <LValueToRValue>
    |                 `-DeclRefExpr 0x5584160c97a0 <col:212> '_Bool' lvalue Var 0x5584160be940 'y$r_buff0_thd0' '_Bool'
    |-BinaryOperator 0x5584160c9f58 <line:824:3, col:221> '_Bool' '='
    | |-DeclRefExpr 0x5584160c99a0 <col:3> '_Bool' lvalue Var 0x5584160beb78 'y$r_buff1_thd0' '_Bool'
    | `-ImplicitCastExpr 0x5584160c9f40 <col:20, col:221> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x5584160c9f10 <col:20, col:221> 'int'
    |     |-ImplicitCastExpr 0x5584160c9ec8 <col:20> 'int' <IntegralCast>
    |     | `-ImplicitCastExpr 0x5584160c9eb0 <col:20> '_Bool' <LValueToRValue>
    |     |   `-DeclRefExpr 0x5584160c99c0 <col:20> '_Bool' lvalue Var 0x5584160bf0b8 'weak$$choice2' '_Bool'
    |     |-ImplicitCastExpr 0x5584160c9ef8 <col:36> 'int' <IntegralCast>
    |     | `-ImplicitCastExpr 0x5584160c9ee0 <col:36> '_Bool' <LValueToRValue>
    |     |   `-DeclRefExpr 0x5584160c99e0 <col:36> '_Bool' lvalue Var 0x5584160beb78 'y$r_buff1_thd0' '_Bool'
    |     `-ParenExpr 0x5584160c9e90 <col:53, col:221> 'int'
    |       `-ConditionalOperator 0x5584160c9e60 <col:54, col:220> 'int'
    |         |-BinaryOperator 0x5584160c9c00 <col:54, col:131> 'int' '||'
    |         | |-BinaryOperator 0x5584160c9b10 <col:54, col:93> 'int' '||'
    |         | | |-UnaryOperator 0x5584160c9a38 <col:54, col:55> 'int' prefix '!' cannot overflow
    |         | | | `-ImplicitCastExpr 0x5584160c9a20 <col:55> '_Bool' <LValueToRValue>
    |         | | |   `-DeclRefExpr 0x5584160c9a00 <col:55> '_Bool' lvalue Var 0x5584160beed0 'y$w_buff0_used' '_Bool'
    |         | | `-BinaryOperator 0x5584160c9af0 <col:73, col:93> 'int' '&&'
    |         | |   |-UnaryOperator 0x5584160c9a88 <col:73, col:74> 'int' prefix '!' cannot overflow
    |         | |   | `-ImplicitCastExpr 0x5584160c9a70 <col:74> '_Bool' <LValueToRValue>
    |         | |   |   `-DeclRefExpr 0x5584160c9a50 <col:74> '_Bool' lvalue Var 0x5584160be940 'y$r_buff0_thd0' '_Bool'
    |         | |   `-UnaryOperator 0x5584160c9ad8 <col:92, col:93> 'int' prefix '!' cannot overflow
    |         | |     `-ImplicitCastExpr 0x5584160c9ac0 <col:93> '_Bool' <LValueToRValue>
    |         | |       `-DeclRefExpr 0x5584160c9aa0 <col:93> '_Bool' lvalue Var 0x5584160befc8 'y$w_buff1_used' '_Bool'
    |         | `-BinaryOperator 0x5584160c9be0 <col:111, col:131> 'int' '&&'
    |         |   |-UnaryOperator 0x5584160c9b68 <col:111, col:112> 'int' prefix '!' cannot overflow
    |         |   | `-ImplicitCastExpr 0x5584160c9b50 <col:112> '_Bool' <LValueToRValue>
    |         |   |   `-DeclRefExpr 0x5584160c9b30 <col:112> '_Bool' lvalue Var 0x5584160be940 'y$r_buff0_thd0' '_Bool'
    |         |   `-UnaryOperator 0x5584160c9bc8 <col:130, col:131> 'int' prefix '!' cannot overflow
    |         |     `-ImplicitCastExpr 0x5584160c9bb0 <col:131> '_Bool' <LValueToRValue>
    |         |       `-DeclRefExpr 0x5584160c9b80 <col:131> '_Bool' lvalue Var 0x5584160beb78 'y$r_buff1_thd0' '_Bool'
    |         |-ImplicitCastExpr 0x5584160c9e48 <col:148> 'int' <IntegralCast>
    |         | `-ImplicitCastExpr 0x5584160c9e30 <col:148> '_Bool' <LValueToRValue>
    |         |   `-DeclRefExpr 0x5584160c9c20 <col:148> '_Bool' lvalue Var 0x5584160beb78 'y$r_buff1_thd0' '_Bool'
    |         `-ParenExpr 0x5584160c9e10 <col:165, col:220> 'int'
    |           `-ConditionalOperator 0x5584160c9de0 <col:166, col:219> 'int'
    |             |-BinaryOperator 0x5584160c9ce0 <col:166, col:184> 'int' '&&'
    |             | |-ImplicitCastExpr 0x5584160c9c98 <col:166> 'int' <IntegralCast>
    |             | | `-ImplicitCastExpr 0x5584160c9c80 <col:166> '_Bool' <LValueToRValue>
    |             | |   `-DeclRefExpr 0x5584160c9c40 <col:166> '_Bool' lvalue Var 0x5584160beed0 'y$w_buff0_used' '_Bool'
    |             | `-ImplicitCastExpr 0x5584160c9cc8 <col:184> 'int' <IntegralCast>
    |             |   `-ImplicitCastExpr 0x5584160c9cb0 <col:184> '_Bool' <LValueToRValue>
    |             |     `-DeclRefExpr 0x5584160c9c60 <col:184> '_Bool' lvalue Var 0x5584160be940 'y$r_buff0_thd0' '_Bool'
    |             |-ImplicitCastExpr 0x5584160c9db0 <col:201, col:208> 'int' <IntegralCast>
    |             | `-CStyleCastExpr 0x5584160c9d30 <col:201, col:208> '_Bool' <IntegralToBoolean>
    |             |   `-IntegerLiteral 0x5584160c9d00 <col:208> 'int' 0
    |             `-ImplicitCastExpr 0x5584160c9dc8 <col:212, col:219> 'int' <IntegralCast>
    |               `-CStyleCastExpr 0x5584160c9d88 <col:212, col:219> '_Bool' <IntegralToBoolean>
    |                 `-IntegerLiteral 0x5584160c9d58 <col:219> 'int' 0
    |-BinaryOperator 0x5584160ca228 <line:825:3, col:113> '_Bool' '='
    | |-DeclRefExpr 0x5584160c9f78 <col:3> '_Bool' lvalue Var 0x5584160be590 'main$tmp_guard1' '_Bool'
    | `-ImplicitCastExpr 0x5584160ca210 <col:21, col:113> '_Bool' <IntegralToBoolean>
    |   `-UnaryOperator 0x5584160ca1f8 <col:21, col:113> 'int' prefix '!' cannot overflow
    |     `-ParenExpr 0x5584160ca1d8 <col:22, col:113> 'int'
    |       `-BinaryOperator 0x5584160ca1b8 <col:23, col:112> 'int' '&&'
    |         |-BinaryOperator 0x5584160ca120 <col:23, col:84> 'int' '&&'
    |         | |-BinaryOperator 0x5584160ca088 <col:23, col:56> 'int' '&&'
    |         | | |-BinaryOperator 0x5584160c9ff0 <col:23, col:28> 'int' '=='
    |         | | | |-ImplicitCastExpr 0x5584160c9fd8 <col:23> 'int' <LValueToRValue>
    |         | | | | `-DeclRefExpr 0x5584160c9f98 <col:23> 'int' lvalue Var 0x5584160be7b0 'y' 'int'
    |         | | | `-IntegerLiteral 0x5584160c9fb8 <col:28> 'int' 2
    |         | | `-BinaryOperator 0x5584160ca068 <col:33, col:56> 'int' '=='
    |         | |   |-ImplicitCastExpr 0x5584160ca050 <col:33> 'int' <LValueToRValue>
    |         | |   | `-DeclRefExpr 0x5584160ca010 <col:33> 'int' lvalue Var 0x5584160be240 '__unbuffered_p0_EAX' 'int'
    |         | |   `-IntegerLiteral 0x5584160ca030 <col:56> 'int' 1
    |         | `-BinaryOperator 0x5584160ca100 <col:61, col:84> 'int' '=='
    |         |   |-ImplicitCastExpr 0x5584160ca0e8 <col:61> 'int' <LValueToRValue>
    |         |   | `-DeclRefExpr 0x5584160ca0a8 <col:61> 'int' lvalue Var 0x5584160be360 '__unbuffered_p1_EAX' 'int'
    |         |   `-IntegerLiteral 0x5584160ca0c8 <col:84> 'int' 2
    |         `-BinaryOperator 0x5584160ca198 <col:89, col:112> 'int' '=='
    |           |-ImplicitCastExpr 0x5584160ca180 <col:89> 'int' <LValueToRValue>
    |           | `-DeclRefExpr 0x5584160ca140 <col:89> 'int' lvalue Var 0x5584160be480 '__unbuffered_p1_EBX' 'int'
    |           `-IntegerLiteral 0x5584160ca160 <col:112> 'int' 0
    |-BinaryOperator 0x5584160ca358 <line:826:3, col:37> 'int' '='
    | |-DeclRefExpr 0x5584160ca248 <col:3> 'int' lvalue Var 0x5584160be7b0 'y' 'int'
    | `-ConditionalOperator 0x5584160ca328 <col:7, col:37> 'int'
    |   |-ImplicitCastExpr 0x5584160ca2e0 <col:7> 'int' <IntegralCast>
    |   | `-ImplicitCastExpr 0x5584160ca2c8 <col:7> '_Bool' <LValueToRValue>
    |   |   `-DeclRefExpr 0x5584160ca268 <col:7> '_Bool' lvalue Var 0x5584160be848 'y$flush_delayed' '_Bool'
    |   |-ImplicitCastExpr 0x5584160ca2f8 <col:25> 'int' <LValueToRValue>
    |   | `-DeclRefExpr 0x5584160ca288 <col:25> 'int' lvalue Var 0x5584160be8c8 'y$mem_tmp' 'int'
    |   `-ImplicitCastExpr 0x5584160ca310 <col:37> 'int' <LValueToRValue>
    |     `-DeclRefExpr 0x5584160ca2a8 <col:37> 'int' lvalue Var 0x5584160be7b0 'y' 'int'
    |-BinaryOperator 0x5584160ca3f0 <line:827:3, col:28> '_Bool' '='
    | |-DeclRefExpr 0x5584160ca378 <col:3> '_Bool' lvalue Var 0x5584160be848 'y$flush_delayed' '_Bool'
    | `-CStyleCastExpr 0x5584160ca3c8 <col:21, col:28> '_Bool' <IntegralToBoolean>
    |   `-IntegerLiteral 0x5584160ca398 <col:28> 'int' 0
    |-CallExpr 0x5584160ca448 <line:828:3, col:25> 'void'
    | `-ImplicitCastExpr 0x5584160ca430 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x5584160ca410 <col:3> 'void ()' Function 0x558416064f00 '__VERIFIER_atomic_end' 'void ()'
    |-CallExpr 0x5584160ca4c0 <line:829:3, col:36> 'void'
    | |-ImplicitCastExpr 0x5584160ca4a8 <col:3> 'void (*)(int)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x5584160ca468 <col:3> 'void (int)' Function 0x558416064bc8 '__VERIFIER_assert' 'void (int)'
    | `-ImplicitCastExpr 0x5584160ca500 <col:21> 'int' <IntegralCast>
    |   `-ImplicitCastExpr 0x5584160ca4e8 <col:21> '_Bool' <LValueToRValue>
    |     `-DeclRefExpr 0x5584160ca488 <col:21> '_Bool' lvalue Var 0x5584160be590 'main$tmp_guard1' '_Bool'
    `-ReturnStmt 0x5584160ca538 <line:830:3, col:10>
      `-IntegerLiteral 0x5584160ca518 <col:10> 'int' 0
