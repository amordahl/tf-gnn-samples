TranslationUnitDecl 0x5588ea9dae18 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x5588ea9db6d8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x5588ea9db3b0 '__int128'
|-TypedefDecl 0x5588ea9db748 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x5588ea9db3d0 'unsigned __int128'
|-TypedefDecl 0x5588ea9dba50 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x5588ea9db820 'struct __NSConstantString_tag'
|   `-Record 0x5588ea9db7a0 '__NSConstantString_tag'
|-TypedefDecl 0x5588ea9dbaf8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x5588ea9dbab0 'char *'
|   `-BuiltinType 0x5588ea9daeb0 'char'
|-TypedefDecl 0x5588eaa1a650 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'struct __va_list_tag [1]'
| `-ConstantArrayType 0x5588ea9dbd90 'struct __va_list_tag [1]' 1 
|   `-RecordType 0x5588ea9dbbd0 'struct __va_list_tag'
|     `-Record 0x5588ea9dbb50 '__va_list_tag'
|-FunctionDecl 0x5588eaa1a790 <./split_4/mix011_rmo.opt_false-unreach-call.i:1:1, col:34> col:13 used __VERIFIER_assume 'void (int)' extern
| `-ParmVarDecl 0x5588eaa1a6c0 <col:31> col:34 'int'
|-FunctionDecl 0x5588eaa1a958 <line:2:1, col:45> col:15 used __VERIFIER_nondet_pointer 'void *(void)' extern
|-FunctionDecl 0x5588eaa1aa80 <line:3:1, col:61> col:13 used __VERIFIER_error 'void () __attribute__((noreturn))' extern
|-FunctionDecl 0x5588eaa1abc8 <line:4:1, col:99> col:6 used __VERIFIER_assert 'void (int)'
| |-ParmVarDecl 0x5588eaa1ab38 <col:24, col:28> col:28 used expression 'int'
| `-CompoundStmt 0x5588eaa1adf8 <col:40, col:99>
|   |-IfStmt 0x5588eaa1adc8 <col:42, col:88>
|   | |-UnaryOperator 0x5588eaa1aca8 <col:46, col:47> 'int' prefix '!' cannot overflow
|   | | `-ImplicitCastExpr 0x5588eaa1ac90 <col:47> 'int' <LValueToRValue>
|   | |   `-DeclRefExpr 0x5588eaa1ac70 <col:47> 'int' lvalue ParmVar 0x5588eaa1ab38 'expression' 'int'
|   | `-CompoundStmt 0x5588eaa1adb0 <col:59, col:88>
|   |   `-LabelStmt 0x5588eaa1ad98 <col:61, col:85> 'ERROR'
|   |     `-CallExpr 0x5588eaa1ad28 <col:68, col:85> 'void'
|   |       `-ImplicitCastExpr 0x5588eaa1ad10 <col:68> 'void (*)() __attribute__((noreturn))' <FunctionToPointerDecay>
|   |         `-DeclRefExpr 0x5588eaa1acc0 <col:68> 'void () __attribute__((noreturn))' Function 0x5588eaa1aa80 '__VERIFIER_error' 'void () __attribute__((noreturn))'
|   |-NullStmt 0x5588eaa1ade0 <col:89>
|   `-ReturnStmt 0x5588eaa1ade8 <col:91>
|-FunctionDecl 0x5588eaa1ae40 <line:5:1, col:37> col:13 used __VERIFIER_atomic_begin 'void ()' extern
|-FunctionDecl 0x5588eaa1af00 <line:6:1, col:35> col:13 used __VERIFIER_atomic_end 'void ()' extern
|-FunctionDecl 0x5588eaa1b280 <line:8:1, line:10:76> line:8:13 __assert_fail 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x5588eaa1afb8 <col:28, col:40> col:40 __assertion 'const char *'
| |-ParmVarDecl 0x5588eaa1b038 <col:53, col:65> col:65 __file 'const char *'
| |-ParmVarDecl 0x5588eaa1b0b8 <line:9:7, col:20> col:20 __line 'unsigned int'
| |-ParmVarDecl 0x5588eaa1b138 <col:28, col:40> col:40 __function 'const char *'
| `-NoThrowAttr 0x5588eaa1b340 <line:10:22>
|-FunctionDecl 0x5588eaa41390 <line:11:1, line:13:76> line:11:13 __assert_perror_fail 'void (int, const char *, unsigned int, const char *) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x5588eaa1b3b0 <col:35, col:39> col:39 __errnum 'int'
| |-ParmVarDecl 0x5588eaa1b430 <col:49, col:61> col:61 __file 'const char *'
| |-ParmVarDecl 0x5588eaa1b4b0 <line:12:7, col:20> col:20 __line 'unsigned int'
| |-ParmVarDecl 0x5588eaa1b530 <col:28, col:40> col:40 __function 'const char *'
| `-NoThrowAttr 0x5588eaa41450 <line:13:22>
|-FunctionDecl 0x5588eaa41700 <line:14:1, line:15:76> line:14:13 __assert 'void (const char *, const char *, int) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x5588eaa414c0 <col:23, col:35> col:35 __assertion 'const char *'
| |-ParmVarDecl 0x5588eaa41540 <col:48, col:60> col:60 __file 'const char *'
| |-ParmVarDecl 0x5588eaa415c0 <col:68, col:72> col:72 __line 'int'
| `-NoThrowAttr 0x5588eaa417b8 <line:15:22>
|-TypedefDecl 0x5588eaa41828 <line:17:1, col:23> col:23 __u_char 'unsigned char'
| `-BuiltinType 0x5588ea9daf70 'unsigned char'
|-TypedefDecl 0x5588eaa41898 <line:18:1, col:28> col:28 __u_short 'unsigned short'
| `-BuiltinType 0x5588ea9daf90 'unsigned short'
|-TypedefDecl 0x5588eaa41908 <line:19:1, col:22> col:22 __u_int 'unsigned int'
| `-BuiltinType 0x5588ea9dafb0 'unsigned int'
|-TypedefDecl 0x5588eaa41978 <line:20:1, col:27> col:27 __u_long 'unsigned long'
| `-BuiltinType 0x5588ea9dafd0 'unsigned long'
|-TypedefDecl 0x5588eaa419e8 <line:21:1, col:21> col:21 __int8_t 'signed char'
| `-BuiltinType 0x5588ea9daed0 'signed char'
|-TypedefDecl 0x5588eaa41a58 <line:22:1, col:23> col:23 __uint8_t 'unsigned char'
| `-BuiltinType 0x5588ea9daf70 'unsigned char'
|-TypedefDecl 0x5588eaa41ac8 <line:23:1, col:26> col:26 __int16_t 'short'
| `-BuiltinType 0x5588ea9daef0 'short'
|-TypedefDecl 0x5588eaa41b38 <line:24:1, col:28> col:28 __uint16_t 'unsigned short'
| `-BuiltinType 0x5588ea9daf90 'unsigned short'
|-TypedefDecl 0x5588eaa41ba8 <line:25:1, col:20> col:20 __int32_t 'int'
| `-BuiltinType 0x5588ea9daf10 'int'
|-TypedefDecl 0x5588eaa41c18 <line:26:1, col:22> col:22 __uint32_t 'unsigned int'
| `-BuiltinType 0x5588ea9dafb0 'unsigned int'
|-TypedefDecl 0x5588eaa41c88 <line:27:1, col:25> col:25 __int64_t 'long'
| `-BuiltinType 0x5588ea9daf30 'long'
|-TypedefDecl 0x5588eaa41cf8 <line:28:1, col:27> col:27 referenced __uint64_t 'unsigned long'
| `-BuiltinType 0x5588ea9dafd0 'unsigned long'
|-TypedefDecl 0x5588eaa41d68 <line:29:1, col:18> col:18 referenced __quad_t 'long'
| `-BuiltinType 0x5588ea9daf30 'long'
|-TypedefDecl 0x5588eaa41dd8 <line:30:1, col:27> col:27 __u_quad_t 'unsigned long'
| `-BuiltinType 0x5588ea9dafd0 'unsigned long'
|-TypedefDecl 0x5588eaa41e48 <line:31:1, col:27> col:27 __dev_t 'unsigned long'
| `-BuiltinType 0x5588ea9dafd0 'unsigned long'
|-TypedefDecl 0x5588eaa41eb8 <line:32:1, col:22> col:22 __uid_t 'unsigned int'
| `-BuiltinType 0x5588ea9dafb0 'unsigned int'
|-TypedefDecl 0x5588eaa41f28 <line:33:1, col:22> col:22 __gid_t 'unsigned int'
| `-BuiltinType 0x5588ea9dafb0 'unsigned int'
|-TypedefDecl 0x5588eaa41f98 <line:34:1, col:27> col:27 __ino_t 'unsigned long'
| `-BuiltinType 0x5588ea9dafd0 'unsigned long'
|-TypedefDecl 0x5588eaa42008 <line:35:1, col:27> col:27 __ino64_t 'unsigned long'
| `-BuiltinType 0x5588ea9dafd0 'unsigned long'
|-TypedefDecl 0x5588eaa42078 <line:36:1, col:22> col:22 __mode_t 'unsigned int'
| `-BuiltinType 0x5588ea9dafb0 'unsigned int'
|-TypedefDecl 0x5588eaa420e8 <line:37:1, col:27> col:27 __nlink_t 'unsigned long'
| `-BuiltinType 0x5588ea9dafd0 'unsigned long'
|-TypedefDecl 0x5588eaa42158 <line:38:1, col:18> col:18 __off_t 'long'
| `-BuiltinType 0x5588ea9daf30 'long'
|-TypedefDecl 0x5588eaa421c8 <line:39:1, col:18> col:18 referenced __off64_t 'long'
| `-BuiltinType 0x5588ea9daf30 'long'
|-TypedefDecl 0x5588eaa42238 <line:40:1, col:13> col:13 referenced __pid_t 'int'
| `-BuiltinType 0x5588ea9daf10 'int'
|-RecordDecl 0x5588eaa42290 <line:41:9, col:32> col:9 struct definition
| `-FieldDecl 0x5588eaa42408 <col:18, col:29> col:22 __val 'int [2]'
|-TypedefDecl 0x5588eaa424c0 <col:1, col:34> col:34 __fsid_t 'struct __fsid_t':'__fsid_t'
| `-ElaboratedType 0x5588eaa42460 'struct __fsid_t' sugar
|   `-RecordType 0x5588eaa42310 '__fsid_t'
|     `-Record 0x5588eaa42290 ''
|-TypedefDecl 0x5588eaa42548 <line:42:1, col:18> col:18 referenced __clock_t 'long'
| `-BuiltinType 0x5588ea9daf30 'long'
|-TypedefDecl 0x5588eaa425b8 <line:43:1, col:27> col:27 __rlim_t 'unsigned long'
| `-BuiltinType 0x5588ea9dafd0 'unsigned long'
|-TypedefDecl 0x5588eaa42628 <line:44:1, col:27> col:27 __rlim64_t 'unsigned long'
| `-BuiltinType 0x5588ea9dafd0 'unsigned long'
|-TypedefDecl 0x5588eaa42698 <line:45:1, col:22> col:22 __id_t 'unsigned int'
| `-BuiltinType 0x5588ea9dafb0 'unsigned int'
|-TypedefDecl 0x5588eaa42708 <line:46:1, col:18> col:18 referenced __time_t 'long'
| `-BuiltinType 0x5588ea9daf30 'long'
|-TypedefDecl 0x5588eaa42778 <line:47:1, col:22> col:22 __useconds_t 'unsigned int'
| `-BuiltinType 0x5588ea9dafb0 'unsigned int'
|-TypedefDecl 0x5588eaa427e8 <line:48:1, col:18> col:18 __suseconds_t 'long'
| `-BuiltinType 0x5588ea9daf30 'long'
|-TypedefDecl 0x5588eaa42858 <line:49:1, col:13> col:13 __daddr_t 'int'
| `-BuiltinType 0x5588ea9daf10 'int'
|-TypedefDecl 0x5588eaa428c8 <line:50:1, col:13> col:13 __key_t 'int'
| `-BuiltinType 0x5588ea9daf10 'int'
|-TypedefDecl 0x5588eaa42938 <line:51:1, col:13> col:13 referenced __clockid_t 'int'
| `-BuiltinType 0x5588ea9daf10 'int'
|-TypedefDecl 0x5588eaa429a8 <line:52:1, col:16> col:16 referenced __timer_t 'void *'
| `-PointerType 0x5588ea9db630 'void *'
|   `-BuiltinType 0x5588ea9dae70 'void'
|-TypedefDecl 0x5588eaa42a18 <line:53:1, col:18> col:18 __blksize_t 'long'
| `-BuiltinType 0x5588ea9daf30 'long'
|-TypedefDecl 0x5588eaa42a88 <line:54:1, col:18> col:18 __blkcnt_t 'long'
| `-BuiltinType 0x5588ea9daf30 'long'
|-TypedefDecl 0x5588eaa42af8 <line:55:1, col:18> col:18 __blkcnt64_t 'long'
| `-BuiltinType 0x5588ea9daf30 'long'
|-TypedefDecl 0x5588eaa42b68 <line:56:1, col:27> col:27 __fsblkcnt_t 'unsigned long'
| `-BuiltinType 0x5588ea9dafd0 'unsigned long'
|-TypedefDecl 0x5588eaa42bd8 <line:57:1, col:27> col:27 __fsblkcnt64_t 'unsigned long'
| `-BuiltinType 0x5588ea9dafd0 'unsigned long'
|-TypedefDecl 0x5588eaa42c48 <line:58:1, col:27> col:27 __fsfilcnt_t 'unsigned long'
| `-BuiltinType 0x5588ea9dafd0 'unsigned long'
|-TypedefDecl 0x5588eaa42cb8 <line:59:1, col:27> col:27 __fsfilcnt64_t 'unsigned long'
| `-BuiltinType 0x5588ea9dafd0 'unsigned long'
|-TypedefDecl 0x5588eaa42d28 <line:60:1, col:18> col:18 __fsword_t 'long'
| `-BuiltinType 0x5588ea9daf30 'long'
|-TypedefDecl 0x5588eaa42d98 <line:61:1, col:18> col:18 __ssize_t 'long'
| `-BuiltinType 0x5588ea9daf30 'long'
|-TypedefDecl 0x5588eaa42e08 <line:62:1, col:18> col:18 referenced __syscall_slong_t 'long'
| `-BuiltinType 0x5588ea9daf30 'long'
|-TypedefDecl 0x5588eaa42e78 <line:63:1, col:27> col:27 __syscall_ulong_t 'unsigned long'
| `-BuiltinType 0x5588ea9dafd0 'unsigned long'
|-TypedefDecl 0x5588eaa42f08 <line:64:1, col:19> col:19 __loff_t '__off64_t':'long'
| `-TypedefType 0x5588eaa42ed0 '__off64_t' sugar
|   |-Typedef 0x5588eaa421c8 '__off64_t'
|   `-BuiltinType 0x5588ea9daf30 'long'
|-TypedefDecl 0x5588eaa43000 <line:65:1, col:19> col:19 __qaddr_t '__quad_t *'
| `-PointerType 0x5588eaa42fc0 '__quad_t *'
|   `-TypedefType 0x5588eaa42f60 '__quad_t' sugar
|     |-Typedef 0x5588eaa41d68 '__quad_t'
|     `-BuiltinType 0x5588ea9daf30 'long'
|-TypedefDecl 0x5588eaa43070 <line:66:1, col:15> col:15 __caddr_t 'char *'
| `-PointerType 0x5588ea9dbab0 'char *'
|   `-BuiltinType 0x5588ea9daeb0 'char'
|-TypedefDecl 0x5588eaa430e0 <line:67:1, col:18> col:18 __intptr_t 'long'
| `-BuiltinType 0x5588ea9daf30 'long'
|-TypedefDecl 0x5588eaa43150 <line:68:1, col:22> col:22 __socklen_t 'unsigned int'
| `-BuiltinType 0x5588ea9dafb0 'unsigned int'
|-FunctionDecl 0x5588eaa43298 <line:69:1, line:73:1> line:70:1 __bswap_32 'unsigned int (unsigned int)' static inline
| |-ParmVarDecl 0x5588eaa431c0 <col:13, col:26> col:26 used __bsx 'unsigned int'
| `-CompoundStmt 0x5588eaa445e8 <line:71:1, line:73:1>
|   `-ReturnStmt 0x5588eaa445d8 <line:72:3, col:34>
|     `-CallExpr 0x5588eaa44598 <col:10, col:34> 'unsigned int'
|       |-ImplicitCastExpr 0x5588eaa44580 <col:10> 'unsigned int (*)(unsigned int)' <BuiltinFnToFnPtr>
|       | `-DeclRefExpr 0x5588eaa44510 <col:10> '<builtin fn type>' Function 0x5588eaa44380 '__builtin_bswap32' 'unsigned int (unsigned int)'
|       `-ImplicitCastExpr 0x5588eaa445c0 <col:29> 'unsigned int' <LValueToRValue>
|         `-DeclRefExpr 0x5588eaa44530 <col:29> 'unsigned int' lvalue ParmVar 0x5588eaa431c0 '__bsx' 'unsigned int'
|-FunctionDecl 0x5588eaa44380 <col:10> col:10 implicit used __builtin_bswap32 'unsigned int (unsigned int)' extern
| |-ParmVarDecl 0x5588eaa44420 <<invalid sloc>> <invalid sloc> 'unsigned int'
| |-NoThrowAttr 0x5588eaa44490 <col:10> Implicit
| `-ConstAttr 0x5588eaa444e8 <col:10> Implicit
|-FunctionDecl 0x5588eaa44740 <line:74:1, line:78:1> line:75:1 __bswap_64 '__uint64_t (__uint64_t)' static inline
| |-ParmVarDecl 0x5588eaa44638 <col:13, col:24> col:24 used __bsx '__uint64_t':'unsigned long'
| `-CompoundStmt 0x5588eaa44a58 <line:76:1, line:78:1>
|   `-ReturnStmt 0x5588eaa44a48 <line:77:3, col:34>
|     `-CallExpr 0x5588eaa44a08 <col:10, col:34> 'unsigned long'
|       |-ImplicitCastExpr 0x5588eaa449f0 <col:10> 'unsigned long (*)(unsigned long)' <BuiltinFnToFnPtr>
|       | `-DeclRefExpr 0x5588eaa44978 <col:10> '<builtin fn type>' Function 0x5588eaa447e8 '__builtin_bswap64' 'unsigned long (unsigned long)'
|       `-ImplicitCastExpr 0x5588eaa44a30 <col:29> '__uint64_t':'unsigned long' <LValueToRValue>
|         `-DeclRefExpr 0x5588eaa44998 <col:29> '__uint64_t':'unsigned long' lvalue ParmVar 0x5588eaa44638 '__bsx' '__uint64_t':'unsigned long'
|-FunctionDecl 0x5588eaa447e8 <col:10> col:10 implicit used __builtin_bswap64 'unsigned long (unsigned long)' extern
| |-ParmVarDecl 0x5588eaa44888 <<invalid sloc>> <invalid sloc> 'unsigned long'
| |-NoThrowAttr 0x5588eaa448f8 <col:10> Implicit
| `-ConstAttr 0x5588eaa44950 <col:10> Implicit
|-TypedefDecl 0x5588eaa44a88 <line:79:1, col:27> col:27 referenced size_t 'unsigned long'
| `-BuiltinType 0x5588ea9dafd0 'unsigned long'
|-TypedefDecl 0x5588eaa44b18 <line:81:1, col:18> col:18 referenced time_t '__time_t':'long'
| `-TypedefType 0x5588eaa44ae0 '__time_t' sugar
|   |-Typedef 0x5588eaa42708 '__time_t'
|   `-BuiltinType 0x5588ea9daf30 'long'
|-RecordDecl 0x5588eaa44b70 <line:84:1, line:88:3> line:84:8 struct timespec definition
| |-FieldDecl 0x5588eaa44c28 <line:86:5, col:14> col:14 tv_sec '__time_t':'long'
| `-FieldDecl 0x5588eaa44cb8 <line:87:5, col:23> col:23 tv_nsec '__syscall_slong_t':'long'
|-TypedefDecl 0x5588eaa44d48 <line:89:1, col:17> col:17 referenced pid_t '__pid_t':'int'
| `-TypedefType 0x5588eaa44d10 '__pid_t' sugar
|   |-Typedef 0x5588eaa42238 '__pid_t'
|   `-BuiltinType 0x5588ea9daf10 'int'
|-RecordDecl 0x5588eaa44da0 <line:90:1, line:93:3> line:90:8 struct sched_param definition
| `-FieldDecl 0x5588eaa44e60 <line:92:5, col:9> col:9 __sched_priority 'int'
|-RecordDecl 0x5588eaa44eb0 <line:96:1, line:99:3> line:96:8 struct __sched_param definition
| `-FieldDecl 0x5588eaa44f70 <line:98:5, col:9> col:9 __sched_priority 'int'
|-TypedefDecl 0x5588eaa44fd8 <line:100:1, col:27> col:27 referenced __cpu_mask 'unsigned long'
| `-BuiltinType 0x5588ea9dafd0 'unsigned long'
|-RecordDecl 0x5588eaa45030 <line:101:9, line:104:1> line:101:9 struct definition
| `-FieldDecl 0x5588eaa452c0 <line:103:3, col:53> col:14 __bits '__cpu_mask [64]'
|-TypedefDecl 0x5588eaa463a0 <line:101:1, line:104:3> col:3 referenced cpu_set_t 'struct cpu_set_t':'cpu_set_t'
| `-ElaboratedType 0x5588eaa45310 'struct cpu_set_t' sugar
|   `-RecordType 0x5588eaa450b0 'cpu_set_t'
|     `-Record 0x5588eaa45030 ''
|-FunctionDecl 0x5588eaa46678 <line:106:1, line:107:42> line:106:12 __sched_cpucount 'int (size_t, const cpu_set_t *)' extern
| |-ParmVarDecl 0x5588eaa46448 <col:30, col:37> col:37 __setsize 'size_t':'unsigned long'
| |-ParmVarDecl 0x5588eaa46550 <col:48, col:65> col:65 __setp 'const cpu_set_t *'
| `-NoThrowAttr 0x5588eaa46728 <line:107:19>
|-FunctionDecl 0x5588eaa46900 <line:108:1, col:92> col:19 __sched_cpualloc 'cpu_set_t *(size_t)' extern
| |-ParmVarDecl 0x5588eaa46790 <col:37, col:44> col:44 __count 'size_t':'unsigned long'
| `-NoThrowAttr 0x5588eaa469a8 <col:69>
|-FunctionDecl 0x5588eaa46b20 <line:109:1, col:87> col:13 __sched_cpufree 'void (cpu_set_t *)' extern
| |-ParmVarDecl 0x5588eaa46a10 <col:30, col:41> col:41 __set 'cpu_set_t *'
| `-NoThrowAttr 0x5588eaa46bc8 <col:64>
|-FunctionDecl 0x5588eaa46e88 <line:112:1, line:113:45> line:112:12 sched_setparam 'int (__pid_t, const struct sched_param *)' extern
| |-ParmVarDecl 0x5588eaa46c30 <col:28, col:36> col:36 __pid '__pid_t':'int'
| |-ParmVarDecl 0x5588eaa46d68 <col:43, col:69> col:69 __param 'const struct sched_param *'
| `-NoThrowAttr 0x5588eaa46f38 <line:113:22>
|-FunctionDecl 0x5588eaa471b8 <line:114:1, col:111> col:12 sched_getparam 'int (__pid_t, struct sched_param *)' extern
| |-ParmVarDecl 0x5588eaa46fa0 <col:28, col:36> col:36 __pid '__pid_t':'int'
| |-ParmVarDecl 0x5588eaa47098 <col:43, col:63> col:63 __param 'struct sched_param *'
| `-NoThrowAttr 0x5588eaa47268 <col:88>
|-FunctionDecl 0x5588eaa47588 <line:115:1, line:116:85> line:115:12 sched_setscheduler 'int (__pid_t, int, const struct sched_param *)' extern
| |-ParmVarDecl 0x5588eaa472d0 <col:32, col:40> col:40 __pid '__pid_t':'int'
| |-ParmVarDecl 0x5588eaa473b0 <col:47, col:51> col:51 __policy 'int'
| |-ParmVarDecl 0x5588eaa47440 <line:116:11, col:37> col:37 __param 'const struct sched_param *'
| `-NoThrowAttr 0x5588eaa47640 <col:62>
|-FunctionDecl 0x5588eaa477b8 <line:117:1, col:86> col:12 sched_getscheduler 'int (__pid_t)' extern
| |-ParmVarDecl 0x5588eaa476a8 <col:32, col:40> col:40 __pid '__pid_t':'int'
| `-NoThrowAttr 0x5588eaa47860 <col:63>
|-FunctionDecl 0x5588eaa47988 <line:118:1, col:70> col:12 sched_yield 'int (void)' extern
| `-NoThrowAttr 0x5588eaa47a28 <col:47>
|-FunctionDecl 0x5588eaa47b30 <line:119:1, col:92> col:12 sched_get_priority_max 'int (int)' extern
| |-ParmVarDecl 0x5588eaa47a98 <col:36, col:40> col:40 __algorithm 'int'
| `-NoThrowAttr 0x5588eaa47bd8 <col:69>
|-FunctionDecl 0x5588eaa47ce0 <line:120:1, col:92> col:12 sched_get_priority_min 'int (int)' extern
| |-ParmVarDecl 0x5588eaa47c48 <col:36, col:40> col:40 __algorithm 'int'
| `-NoThrowAttr 0x5588eaa47d88 <col:69>
|-FunctionDecl 0x5588eaa48048 <line:121:1, col:111> col:12 sched_rr_get_interval 'int (__pid_t, struct timespec *)' extern
| |-ParmVarDecl 0x5588eaa47df0 <col:35, col:43> col:43 __pid '__pid_t':'int'
| |-ParmVarDecl 0x5588eaa47f28 <col:50, col:67> col:67 __t 'struct timespec *'
| `-NoThrowAttr 0x5588eaa480f8 <col:88>
|-TypedefDecl 0x5588eaa48188 <line:125:1, col:19> col:19 referenced clock_t '__clock_t':'long'
| `-TypedefType 0x5588eaa48150 '__clock_t' sugar
|   |-Typedef 0x5588eaa42548 '__clock_t'
|   `-BuiltinType 0x5588ea9daf30 'long'
|-TypedefDecl 0x5588eaa48218 <line:128:1, col:21> col:21 referenced clockid_t '__clockid_t':'int'
| `-TypedefType 0x5588eaa481e0 '__clockid_t' sugar
|   |-Typedef 0x5588eaa42938 '__clockid_t'
|   `-BuiltinType 0x5588ea9daf10 'int'
|-TypedefDecl 0x5588eaa482a8 <line:129:1, col:19> col:19 referenced timer_t '__timer_t':'void *'
| `-TypedefType 0x5588eaa48270 '__timer_t' sugar
|   |-Typedef 0x5588eaa429a8 '__timer_t'
|   `-PointerType 0x5588ea9db630 'void *'
|     `-BuiltinType 0x5588ea9dae70 'void'
|-RecordDecl 0x5588eaa48300 <line:131:1, line:144:1> line:131:8 struct tm definition
| |-FieldDecl 0x5588eaa483d8 <line:133:3, col:7> col:7 tm_sec 'int'
| |-FieldDecl 0x5588eaa48440 <line:134:3, col:7> col:7 tm_min 'int'
| |-FieldDecl 0x5588eaa484a8 <line:135:3, col:7> col:7 tm_hour 'int'
| |-FieldDecl 0x5588eaa48510 <line:136:3, col:7> col:7 tm_mday 'int'
| |-FieldDecl 0x5588eaa48578 <line:137:3, col:7> col:7 tm_mon 'int'
| |-FieldDecl 0x5588eaa485e0 <line:138:3, col:7> col:7 tm_year 'int'
| |-FieldDecl 0x5588eaa48648 <line:139:3, col:7> col:7 tm_wday 'int'
| |-FieldDecl 0x5588eaa486b0 <line:140:3, col:7> col:7 tm_yday 'int'
| |-FieldDecl 0x5588eaa48718 <line:141:3, col:7> col:7 tm_isdst 'int'
| |-FieldDecl 0x5588eaa48780 <line:142:3, col:12> col:12 tm_gmtoff 'long'
| `-FieldDecl 0x5588eaa487e8 <line:143:3, col:15> col:15 tm_zone 'const char *'
|-RecordDecl 0x5588eaa48838 <line:147:1, line:151:3> line:147:8 struct itimerspec definition
| |-FieldDecl 0x5588eaa48908 <line:149:5, col:21> col:21 it_interval 'struct timespec':'struct timespec'
| `-FieldDecl 0x5588eaa48978 <line:150:5, col:21> col:21 it_value 'struct timespec':'struct timespec'
|-RecordDecl 0x5588eaa48a20 <line:152:1, col:8> col:8 struct sigevent
|-FunctionDecl 0x5588eaa48bf0 <line:154:1, col:68> col:16 clock 'clock_t (void)' extern
| `-NoThrowAttr 0x5588eaa48c90 <col:45>
|-FunctionDecl 0x5588eaa48e70 <line:155:1, col:77> col:15 time 'time_t (time_t *)' extern
| |-ParmVarDecl 0x5588eaa48d60 <col:21, col:29> col:29 __timer 'time_t *'
| `-NoThrowAttr 0x5588eaa48f18 <col:54>
|-FunctionDecl 0x5588eaa49118 <line:156:1, line:157:73> line:156:15 difftime 'double (time_t, time_t)' extern
| |-ParmVarDecl 0x5588eaa48f80 <col:25, col:32> col:32 __time1 'time_t':'long'
| |-ParmVarDecl 0x5588eaa48ff8 <col:41, col:48> col:48 __time0 'time_t':'long'
| |-NoThrowAttr 0x5588eaa491c8 <line:157:22>
| `-ConstAttr 0x5588eaa49220 <col:63>
|-FunctionDecl 0x5588eaa4a050 <line:158:1, col:79> col:15 mktime 'time_t (struct tm *)' extern
| |-ParmVarDecl 0x5588eaa49318 <col:23, col:34> col:34 __tp 'struct tm *'
| `-NoThrowAttr 0x5588eaa4a0f8 <col:56>
|-FunctionDecl 0x5588eaa4a4a0 <line:159:1, line:161:77> line:159:15 strftime 'size_t (char *restrict, size_t, const char *restrict, const struct tm *restrict)' extern
| |-ParmVarDecl 0x5588eaa4a168 <col:25, col:42> col:42 __s 'char *restrict'
| |-ParmVarDecl 0x5588eaa4a1e0 <col:47, col:54> col:54 __maxsize 'size_t':'unsigned long'
| |-ParmVarDecl 0x5588eaa4a260 <line:160:4, col:27> col:27 __format 'const char *restrict'
| |-ParmVarDecl 0x5588eaa4a358 <line:161:4, col:32> col:32 __tp 'const struct tm *restrict'
| `-NoThrowAttr 0x5588eaa4a560 <col:54>
|-RecordDecl 0x5588eaa4a5b8 <line:163:9, line:170:1> line:163:16 struct __locale_struct definition
| |-RecordDecl 0x5588eaa4a668 parent 0x5588ea9dae18 <line:165:3, col:10> col:10 struct __locale_data
| |-FieldDecl 0x5588eaa4a8c8 <col:3, col:37> col:25 __locales 'struct __locale_data *[13]'
| |-FieldDecl 0x5588eaa4a968 <line:166:3, col:29> col:29 __ctype_b 'const unsigned short *'
| |-FieldDecl 0x5588eaa4a9d0 <line:167:3, col:14> col:14 __ctype_tolower 'const int *'
| |-FieldDecl 0x5588eaa4aa38 <line:168:3, col:14> col:14 __ctype_toupper 'const int *'
| `-FieldDecl 0x5588eaa4ab28 <line:169:3, col:25> col:15 __names 'const char *[13]'
|-TypedefDecl 0x5588eaa4ac48 <line:163:1, line:170:4> col:4 referenced __locale_t 'struct __locale_struct *'
| `-PointerType 0x5588eaa4abf0 'struct __locale_struct *'
|   `-ElaboratedType 0x5588eaa4ab80 'struct __locale_struct' sugar
|     `-RecordType 0x5588eaa4a640 'struct __locale_struct'
|       `-Record 0x5588eaa4a5b8 '__locale_struct'
|-TypedefDecl 0x5588eaa4acf8 <line:171:1, col:20> col:20 locale_t '__locale_t':'struct __locale_struct *'
| `-TypedefType 0x5588eaa4acc0 '__locale_t' sugar
|   |-Typedef 0x5588eaa4ac48 '__locale_t'
|   `-PointerType 0x5588eaa4abf0 'struct __locale_struct *'
|     `-ElaboratedType 0x5588eaa4ab80 'struct __locale_struct' sugar
|       `-RecordType 0x5588eaa4a640 'struct __locale_struct'
|         `-Record 0x5588eaa4a5b8 '__locale_struct'
|-FunctionDecl 0x5588eaa4c110 <line:172:1, line:175:63> line:172:15 strftime_l 'size_t (char *restrict, size_t, const char *restrict, const struct tm *restrict, __locale_t)' extern
| |-ParmVarDecl 0x5588eaa4ad68 <col:27, col:44> col:44 __s 'char *restrict'
| |-ParmVarDecl 0x5588eaa4ade0 <col:49, col:56> col:56 __maxsize 'size_t':'unsigned long'
| |-ParmVarDecl 0x5588eaa4ae60 <line:173:6, col:29> col:29 __format 'const char *restrict'
| |-ParmVarDecl 0x5588eaa4aef0 <line:174:6, col:34> col:34 __tp 'const struct tm *restrict'
| |-ParmVarDecl 0x5588eaa4af68 <line:175:6, col:17> col:17 __loc '__locale_t':'struct __locale_struct *'
| `-NoThrowAttr 0x5588eaa4c1d8 <col:40>
|-FunctionDecl 0x5588eaa4c3c8 <line:177:1, col:89> col:19 gmtime 'struct tm *(const time_t *)' extern
| |-ParmVarDecl 0x5588eaa4c2a0 <col:27, col:41> col:41 __timer 'const time_t *'
| `-NoThrowAttr 0x5588eaa4c470 <col:66>
|-FunctionDecl 0x5588eaa4c580 <line:178:1, col:92> col:19 localtime 'struct tm *(const time_t *)' extern
| |-ParmVarDecl 0x5588eaa4c4d8 <col:30, col:44> col:44 __timer 'const time_t *'
| `-NoThrowAttr 0x5588eaa4c628 <col:69>
|-FunctionDecl 0x5588eaa4c858 <line:180:1, line:181:75> line:180:19 gmtime_r 'struct tm *(const time_t *restrict, struct tm *restrict)' extern
| |-ParmVarDecl 0x5588eaa4c690 <col:29, col:54> col:54 __timer 'const time_t *restrict'
| |-ParmVarDecl 0x5588eaa4c720 <line:181:8, col:30> col:30 __tp 'struct tm *restrict'
| `-NoThrowAttr 0x5588eaa4c908 <col:52>
|-FunctionDecl 0x5588eaa4cab0 <line:182:1, line:183:78> line:182:19 localtime_r 'struct tm *(const time_t *restrict, struct tm *restrict)' extern
| |-ParmVarDecl 0x5588eaa4c970 <col:32, col:57> col:57 __timer 'const time_t *restrict'
| |-ParmVarDecl 0x5588eaa4ca00 <line:183:11, col:33> col:33 __tp 'struct tm *restrict'
| `-NoThrowAttr 0x5588eaa4cb60 <col:55>
|-FunctionDecl 0x5588eaa4ccf8 <line:185:1, col:85> col:14 asctime 'char *(const struct tm *)' extern
| |-ParmVarDecl 0x5588eaa4cbe0 <col:23, col:40> col:40 __tp 'const struct tm *'
| `-NoThrowAttr 0x5588eaa4cda0 <col:62>
|-FunctionDecl 0x5588eaa4cf18 <line:186:1, col:83> col:14 ctime 'char *(const time_t *)' extern
| |-ParmVarDecl 0x5588eaa4ce08 <col:21, col:35> col:35 __timer 'const time_t *'
| `-NoThrowAttr 0x5588eaa4cfc0 <col:60>
|-FunctionDecl 0x5588eaa4d2b8 <line:188:1, line:189:67> line:188:14 asctime_r 'char *(const struct tm *restrict, char *restrict)' extern
| |-ParmVarDecl 0x5588eaa4d118 <col:25, col:53> col:53 __tp 'const struct tm *restrict'
| |-ParmVarDecl 0x5588eaa4d198 <line:189:4, col:21> col:21 __buf 'char *restrict'
| `-NoThrowAttr 0x5588eaa4d368 <col:44>
|-FunctionDecl 0x5588eaa4d578 <line:190:1, line:191:72> line:190:14 ctime_r 'char *(const time_t *restrict, char *restrict)' extern
| |-ParmVarDecl 0x5588eaa4d3d0 <col:23, col:48> col:48 __timer 'const time_t *restrict'
| |-ParmVarDecl 0x5588eaa4d450 <line:191:9, col:26> col:26 __buf 'char *restrict'
| `-NoThrowAttr 0x5588eaa4d628 <col:49>
|-VarDecl 0x5588eaa4d728 <line:192:1, col:24> col:14 __tzname 'char *[2]' extern
|-VarDecl 0x5588eaa4d7a8 <line:193:1, col:12> col:12 __daylight 'int' extern
|-VarDecl 0x5588eaa4d828 <line:194:1, col:17> col:17 __timezone 'long' extern
|-VarDecl 0x5588eaa4d8f0 <line:195:1, col:22> col:14 tzname 'char *[2]' extern
|-FunctionDecl 0x5588eaa4da20 <line:196:1, col:65> col:13 tzset 'void (void)' extern
| `-NoThrowAttr 0x5588eaa4dac0 <col:42>
|-VarDecl 0x5588eaa4db30 <line:197:1, col:12> col:12 daylight 'int' extern
|-VarDecl 0x5588eaa4dbb0 <line:198:1, col:17> col:17 timezone 'long' extern
|-FunctionDecl 0x5588eaa4dd38 <line:199:1, col:80> col:12 stime 'int (const time_t *)' extern
| |-ParmVarDecl 0x5588eaa4dc28 <col:19, col:33> col:33 __when 'const time_t *'
| `-NoThrowAttr 0x5588eaa4dde0 <col:57>
|-FunctionDecl 0x5588eaa4def0 <line:200:1, col:79> col:15 timegm 'time_t (struct tm *)' extern
| |-ParmVarDecl 0x5588eaa4de60 <col:23, col:34> col:34 __tp 'struct tm *'
| `-NoThrowAttr 0x5588eaa4df98 <col:56>
|-FunctionDecl 0x5588eaa4e0d0 <line:201:1, col:82> col:15 timelocal 'time_t (struct tm *)' extern
| |-ParmVarDecl 0x5588eaa4e018 <col:26, col:37> col:37 __tp 'struct tm *'
| `-NoThrowAttr 0x5588eaa4e178 <col:59>
|-FunctionDecl 0x5588eaa4e280 <line:202:1, col:99> col:12 dysize 'int (int)' extern
| |-ParmVarDecl 0x5588eaa4e1e8 <col:20, col:24> col:24 __year 'int'
| |-NoThrowAttr 0x5588eaa4e328 <col:48>
| `-ConstAttr 0x5588eaa4e380 <col:89>
|-FunctionDecl 0x5588eaa4e5e8 <line:203:1, line:204:37> line:203:12 nanosleep 'int (const struct timespec *, struct timespec *)' extern
| |-ParmVarDecl 0x5588eaa4e438 <col:23, col:46> col:46 __requested_time 'const struct timespec *'
| `-ParmVarDecl 0x5588eaa4e4c8 <line:204:9, col:26> col:26 __remaining 'struct timespec *'
|-FunctionDecl 0x5588eaa4e848 <line:205:1, col:111> col:12 clock_getres 'int (clockid_t, struct timespec *)' extern
| |-ParmVarDecl 0x5588eaa4e6d8 <col:26, col:36> col:36 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x5588eaa4e768 <col:48, col:65> col:65 __res 'struct timespec *'
| `-NoThrowAttr 0x5588eaa4e8f8 <col:88>
|-FunctionDecl 0x5588eaa4ea90 <line:206:1, col:111> col:12 clock_gettime 'int (clockid_t, struct timespec *)' extern
| |-ParmVarDecl 0x5588eaa4e960 <col:27, col:37> col:37 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x5588eaa4e9f0 <col:49, col:66> col:66 __tp 'struct timespec *'
| `-NoThrowAttr 0x5588eaa4eb40 <col:88>
|-FunctionDecl 0x5588eaa4ed58 <line:207:1, line:208:45> line:207:12 clock_settime 'int (clockid_t, const struct timespec *)' extern
| |-ParmVarDecl 0x5588eaa4eba8 <col:27, col:37> col:37 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x5588eaa4ec38 <col:49, col:72> col:72 __tp 'const struct timespec *'
| `-NoThrowAttr 0x5588eaa4ee08 <line:208:22>
|-FunctionDecl 0x5588eaa4f178 <line:209:1, line:211:30> line:209:12 clock_nanosleep 'int (clockid_t, int, const struct timespec *, struct timespec *)' extern
| |-ParmVarDecl 0x5588eaa4ee70 <col:29, col:39> col:39 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x5588eaa4eef0 <col:51, col:55> col:55 __flags 'int'
| |-ParmVarDecl 0x5588eaa4ef80 <line:210:8, col:31> col:31 __req 'const struct timespec *'
| `-ParmVarDecl 0x5588eaa4f010 <line:211:8, col:25> col:25 __rem 'struct timespec *'
|-FunctionDecl 0x5588eaa4f478 <line:212:1, col:108> col:12 clock_getcpuclockid 'int (pid_t, clockid_t *)' extern
| |-ParmVarDecl 0x5588eaa4f278 <col:33, col:39> col:39 __pid 'pid_t':'int'
| |-ParmVarDecl 0x5588eaa4f350 <col:46, col:57> col:57 __clock_id 'clockid_t *'
| `-NoThrowAttr 0x5588eaa4f528 <col:85>
|-FunctionDecl 0x5588eaa4f918 <line:213:1, line:215:75> line:213:12 timer_create 'int (clockid_t, struct sigevent *restrict, timer_t *restrict)' extern
| |-ParmVarDecl 0x5588eaa4f590 <col:26, col:36> col:36 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x5588eaa4f6c8 <line:214:5, col:33> col:33 __evp 'struct sigevent *restrict'
| |-ParmVarDecl 0x5588eaa4f7d0 <line:215:5, col:25> col:25 __timerid 'timer_t *restrict'
| `-NoThrowAttr 0x5588eaa4f9d0 <col:52>
|-FunctionDecl 0x5588eaa4fb48 <line:216:1, col:84> col:12 timer_delete 'int (timer_t)' extern
| |-ParmVarDecl 0x5588eaa4fa38 <col:26, col:34> col:34 __timerid 'timer_t':'void *'
| `-NoThrowAttr 0x5588eaa4fbf0 <col:61>
|-FunctionDecl 0x5588eaa500f0 <line:217:1, line:219:85> line:217:12 timer_settime 'int (timer_t, int, const struct itimerspec *restrict, struct itimerspec *restrict)' extern
| |-ParmVarDecl 0x5588eaa4fc58 <col:27, col:35> col:35 __timerid 'timer_t':'void *'
| |-ParmVarDecl 0x5588eaa4fcd8 <col:46, col:50> col:50 __flags 'int'
| |-ParmVarDecl 0x5588eaa4fe08 <line:218:6, col:42> col:42 __value 'const struct itimerspec *restrict'
| |-ParmVarDecl 0x5588eaa4fef8 <line:219:6, col:36> col:36 __ovalue 'struct itimerspec *restrict'
| `-NoThrowAttr 0x5588eaa501b0 <col:62>
|-FunctionDecl 0x5588eaa503c8 <line:220:1, line:221:45> line:220:12 timer_gettime 'int (timer_t, struct itimerspec *)' extern
| |-ParmVarDecl 0x5588eaa50218 <col:27, col:35> col:35 __timerid 'timer_t':'void *'
| |-ParmVarDecl 0x5588eaa502a8 <col:46, col:65> col:65 __value 'struct itimerspec *'
| `-NoThrowAttr 0x5588eaa50478 <line:221:22>
|-FunctionDecl 0x5588eaa50578 <line:222:1, col:88> col:12 timer_getoverrun 'int (timer_t)' extern
| |-ParmVarDecl 0x5588eaa504e0 <col:30, col:38> col:38 __timerid 'timer_t':'void *'
| `-NoThrowAttr 0x5588eaa50620 <col:65>
|-TypedefDecl 0x5588eaa50690 <line:224:1, col:27> col:27 referenced pthread_t 'unsigned long'
| `-BuiltinType 0x5588ea9dafd0 'unsigned long'
|-RecordDecl 0x5588eaa506e8 <line:225:1, line:229:1> line:225:7 union pthread_attr_t definition
| |-FieldDecl 0x5588eaa50830 <line:227:3, col:17> col:8 __size 'char [56]'
| `-FieldDecl 0x5588eaa50898 <line:228:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x5588eaa50948 <line:230:1, col:30> col:30 referenced pthread_attr_t 'union pthread_attr_t':'union pthread_attr_t'
| `-ElaboratedType 0x5588eaa508f0 'union pthread_attr_t' sugar
|   `-RecordType 0x5588eaa50770 'union pthread_attr_t'
|     `-Record 0x5588eaa506e8 'pthread_attr_t'
|-RecordDecl 0x5588eaa509a0 <line:231:9, line:235:1> line:231:16 struct __pthread_internal_list definition
| |-FieldDecl 0x5588eaa50b18 <line:233:3, col:35> col:35 __prev 'struct __pthread_internal_list *'
| `-FieldDecl 0x5588eaa50b90 <line:234:3, col:35> col:35 __next 'struct __pthread_internal_list *'
|-TypedefDecl 0x5588eaa50c40 <line:231:1, line:235:3> col:3 referenced __pthread_list_t 'struct __pthread_internal_list':'struct __pthread_internal_list'
| `-ElaboratedType 0x5588eaa50be0 'struct __pthread_internal_list' sugar
|   `-RecordType 0x5588eaa50a20 'struct __pthread_internal_list'
|     `-Record 0x5588eaa509a0 '__pthread_internal_list'
|-RecordDecl 0x5588eaa50cb0 <line:236:9, line:250:1> line:236:9 union definition
| |-RecordDecl 0x5588eaa50d58 parent 0x5588ea9dae18 <line:238:3, line:247:3> line:238:10 struct __pthread_mutex_s definition
| | |-FieldDecl 0x5588eaa50e30 <line:240:5, col:9> col:9 __lock 'int'
| | |-FieldDecl 0x5588eaa50e98 <line:241:5, col:18> col:18 __count 'unsigned int'
| | |-FieldDecl 0x5588eaa50f00 <line:242:5, col:9> col:9 __owner 'int'
| | |-FieldDecl 0x5588eaa50f68 <line:243:5, col:18> col:18 __nusers 'unsigned int'
| | |-FieldDecl 0x5588eaa50fd0 <line:244:5, col:9> col:9 __kind 'int'
| | |-FieldDecl 0x5588eaa51038 <line:245:5, col:9> col:9 __spins 'int'
| | `-FieldDecl 0x5588eaa55110 <line:246:5, col:22> col:22 __list '__pthread_list_t':'struct __pthread_internal_list'
| |-FieldDecl 0x5588eaa551c0 <line:238:3, line:247:5> col:5 __data 'struct __pthread_mutex_s':'struct __pthread_mutex_s'
| |-FieldDecl 0x5588eaa552b0 <line:248:3, col:17> col:8 __size 'char [40]'
| `-FieldDecl 0x5588eaa55318 <line:249:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x5588eaa554a0 <line:236:1, line:250:3> col:3 referenced pthread_mutex_t 'union pthread_mutex_t':'pthread_mutex_t'
| `-ElaboratedType 0x5588eaa55440 'union pthread_mutex_t' sugar
|   `-RecordType 0x5588eaa50d30 'pthread_mutex_t'
|     `-Record 0x5588eaa50cb0 ''
|-RecordDecl 0x5588eaa55510 <line:251:9, line:255:1> line:251:9 union definition
| |-FieldDecl 0x5588eaa55650 <line:253:3, col:16> col:8 __size 'char [4]'
| `-FieldDecl 0x5588eaa556b8 <line:254:3, col:7> col:7 __align 'int'
|-TypedefDecl 0x5588eaa55770 <line:251:1, line:255:3> col:3 referenced pthread_mutexattr_t 'union pthread_mutexattr_t':'pthread_mutexattr_t'
| `-ElaboratedType 0x5588eaa55710 'union pthread_mutexattr_t' sugar
|   `-RecordType 0x5588eaa55590 'pthread_mutexattr_t'
|     `-Record 0x5588eaa55510 ''
|-RecordDecl 0x5588eaa557e0 <line:256:9, line:271:1> line:256:9 union definition
| |-RecordDecl 0x5588eaa55888 <line:258:3, line:268:3> line:258:3 struct definition
| | |-FieldDecl 0x5588eaa55950 <line:260:5, col:9> col:9 __lock 'int'
| | |-FieldDecl 0x5588eaa559b8 <line:261:5, col:18> col:18 __futex 'unsigned int'
| | |-FieldDecl 0x5588eaa55a20 <line:262:19, col:42> col:42 __total_seq 'unsigned long long'
| | |-FieldDecl 0x5588eaa55a88 <line:263:19, col:42> col:42 __wakeup_seq 'unsigned long long'
| | |-FieldDecl 0x5588eaa55af0 <line:264:19, col:42> col:42 __woken_seq 'unsigned long long'
| | |-FieldDecl 0x5588eaa55b58 <line:265:5, col:11> col:11 __mutex 'void *'
| | |-FieldDecl 0x5588eaa55bc0 <line:266:5, col:18> col:18 __nwaiters 'unsigned int'
| | `-FieldDecl 0x5588eaa55c28 <line:267:5, col:18> col:18 __broadcast_seq 'unsigned int'
| |-FieldDecl 0x5588eaa55ce0 <line:258:3, line:268:5> col:5 __data 'struct (anonymous struct at ./split_4/mix011_rmo.opt_false-unreach-call.i:258:3)':'struct pthread_cond_t::(anonymous at ./split_4/mix011_rmo.opt_false-unreach-call.i:258:3)'
| |-FieldDecl 0x5588eaa55dd0 <line:269:3, col:17> col:8 __size 'char [48]'
| `-FieldDecl 0x5588eaa55e38 <line:270:17, col:31> col:31 __align 'long long'
|-TypedefDecl 0x5588eaa55f70 <line:256:1, line:271:3> col:3 referenced pthread_cond_t 'union pthread_cond_t':'pthread_cond_t'
| `-ElaboratedType 0x5588eaa55f10 'union pthread_cond_t' sugar
|   `-RecordType 0x5588eaa55860 'pthread_cond_t'
|     `-Record 0x5588eaa557e0 ''
|-RecordDecl 0x5588eaa55fe0 <line:272:9, line:276:1> line:272:9 union definition
| |-FieldDecl 0x5588eaa57130 <line:274:3, col:16> col:8 __size 'char [4]'
| `-FieldDecl 0x5588eaa57198 <line:275:3, col:7> col:7 __align 'int'
|-TypedefDecl 0x5588eaa57250 <line:272:1, line:276:3> col:3 referenced pthread_condattr_t 'union pthread_condattr_t':'pthread_condattr_t'
| `-ElaboratedType 0x5588eaa571f0 'union pthread_condattr_t' sugar
|   `-RecordType 0x5588eaa56060 'pthread_condattr_t'
|     `-Record 0x5588eaa55fe0 ''
|-TypedefDecl 0x5588eaa572d8 <line:277:1, col:22> col:22 referenced pthread_key_t 'unsigned int'
| `-BuiltinType 0x5588ea9dafb0 'unsigned int'
|-TypedefDecl 0x5588eaa57348 <line:278:1, col:13> col:13 referenced pthread_once_t 'int'
| `-BuiltinType 0x5588ea9daf10 'int'
|-RecordDecl 0x5588eaa573a0 <line:279:9, line:297:1> line:279:9 union definition
| |-RecordDecl 0x5588eaa57448 <line:281:3, line:294:3> line:281:3 struct definition
| | |-FieldDecl 0x5588eaa57510 <line:283:5, col:9> col:9 __lock 'int'
| | |-FieldDecl 0x5588eaa57578 <line:284:5, col:18> col:18 __nr_readers 'unsigned int'
| | |-FieldDecl 0x5588eaa575e0 <line:285:5, col:18> col:18 __readers_wakeup 'unsigned int'
| | |-FieldDecl 0x5588eaa57648 <line:286:5, col:18> col:18 __writer_wakeup 'unsigned int'
| | |-FieldDecl 0x5588eaa576b0 <line:287:5, col:18> col:18 __nr_readers_queued 'unsigned int'
| | |-FieldDecl 0x5588eaa57718 <line:288:5, col:18> col:18 __nr_writers_queued 'unsigned int'
| | |-FieldDecl 0x5588eaa57780 <line:289:5, col:9> col:9 __writer 'int'
| | |-FieldDecl 0x5588eaa577e8 <line:290:5, col:9> col:9 __shared 'int'
| | |-FieldDecl 0x5588eaa57850 <line:291:5, col:23> col:23 __pad1 'unsigned long'
| | |-FieldDecl 0x5588eaa578b8 <line:292:5, col:23> col:23 __pad2 'unsigned long'
| | `-FieldDecl 0x5588eaa57920 <line:293:5, col:18> col:18 __flags 'unsigned int'
| |-FieldDecl 0x5588eaa579d0 <line:281:3, line:294:5> col:5 __data 'struct (anonymous struct at ./split_4/mix011_rmo.opt_false-unreach-call.i:281:3)':'struct pthread_rwlock_t::(anonymous at ./split_4/mix011_rmo.opt_false-unreach-call.i:281:3)'
| |-FieldDecl 0x5588eaa57a78 <line:295:3, col:17> col:8 __size 'char [56]'
| `-FieldDecl 0x5588eaa57ae0 <line:296:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x5588eaa57c30 <line:279:1, line:297:3> col:3 referenced pthread_rwlock_t 'union pthread_rwlock_t':'pthread_rwlock_t'
| `-ElaboratedType 0x5588eaa57bd0 'union pthread_rwlock_t' sugar
|   `-RecordType 0x5588eaa57420 'pthread_rwlock_t'
|     `-Record 0x5588eaa573a0 ''
|-RecordDecl 0x5588eaa57ca0 <line:298:9, line:302:1> line:298:9 union definition
| |-FieldDecl 0x5588eaa57de0 <line:300:3, col:16> col:8 __size 'char [8]'
| `-FieldDecl 0x5588eaa57e48 <line:301:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x5588eaa57f00 <line:298:1, line:302:3> col:3 referenced pthread_rwlockattr_t 'union pthread_rwlockattr_t':'pthread_rwlockattr_t'
| `-ElaboratedType 0x5588eaa57ea0 'union pthread_rwlockattr_t' sugar
|   `-RecordType 0x5588eaa57d20 'pthread_rwlockattr_t'
|     `-Record 0x5588eaa57ca0 ''
|-TypedefDecl 0x5588eaa57f88 <line:303:1, col:22> col:22 referenced pthread_spinlock_t 'volatile int'
| `-QualType 0x5588ea9daf14 'volatile int' volatile
|   `-BuiltinType 0x5588ea9daf10 'int'
|-RecordDecl 0x5588eaa57fe0 <line:304:9, line:308:1> line:304:9 union definition
| |-FieldDecl 0x5588eaa59140 <line:306:3, col:17> col:8 __size 'char [32]'
| `-FieldDecl 0x5588eaa591a8 <line:307:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x5588eaa59260 <line:304:1, line:308:3> col:3 referenced pthread_barrier_t 'union pthread_barrier_t':'pthread_barrier_t'
| `-ElaboratedType 0x5588eaa59200 'union pthread_barrier_t' sugar
|   `-RecordType 0x5588eaa58060 'pthread_barrier_t'
|     `-Record 0x5588eaa57fe0 ''
|-RecordDecl 0x5588eaa592d0 <line:309:9, line:313:1> line:309:9 union definition
| |-FieldDecl 0x5588eaa593d0 <line:311:3, col:16> col:8 __size 'char [4]'
| `-FieldDecl 0x5588eaa59438 <line:312:3, col:7> col:7 __align 'int'
|-TypedefDecl 0x5588eaa594f0 <line:309:1, line:313:3> col:3 referenced pthread_barrierattr_t 'union pthread_barrierattr_t':'pthread_barrierattr_t'
| `-ElaboratedType 0x5588eaa59490 'union pthread_barrierattr_t' sugar
|   `-RecordType 0x5588eaa59350 'pthread_barrierattr_t'
|     `-Record 0x5588eaa592d0 ''
|-TypedefDecl 0x5588eaa59608 <line:314:1, col:29> col:18 referenced __jmp_buf 'long [8]'
| `-ConstantArrayType 0x5588eaa595a0 'long [8]' 8 
|   `-BuiltinType 0x5588ea9daf30 'long'
|-EnumDecl 0x5588eaa59660 <line:315:1, line:319:1> line:315:1
| |-EnumConstantDecl 0x5588eaa59728 <line:317:3> col:3 PTHREAD_CREATE_JOINABLE 'int'
| `-EnumConstantDecl 0x5588eaa59778 <line:318:3> col:3 PTHREAD_CREATE_DETACHED 'int'
|-EnumDecl 0x5588eaa597c8 <line:320:1, line:331:1> line:320:1
| |-EnumConstantDecl 0x5588eaa59898 <line:322:3> col:3 referenced PTHREAD_MUTEX_TIMED_NP 'int'
| |-EnumConstantDecl 0x5588eaa598e8 <line:323:3> col:3 referenced PTHREAD_MUTEX_RECURSIVE_NP 'int'
| |-EnumConstantDecl 0x5588eaa59938 <line:324:3> col:3 referenced PTHREAD_MUTEX_ERRORCHECK_NP 'int'
| |-EnumConstantDecl 0x5588eaa59988 <line:325:3> col:3 PTHREAD_MUTEX_ADAPTIVE_NP 'int'
| |-EnumConstantDecl 0x5588eaa59a10 <line:327:3, col:26> col:3 referenced PTHREAD_MUTEX_NORMAL 'int'
| | `-ConstantExpr 0x5588eaa599f8 <col:26> 'int'
| |   `-DeclRefExpr 0x5588eaa599d8 <col:26> 'int' EnumConstant 0x5588eaa59898 'PTHREAD_MUTEX_TIMED_NP' 'int'
| |-EnumConstantDecl 0x5588eaa59a98 <line:328:3, col:29> col:3 PTHREAD_MUTEX_RECURSIVE 'int'
| | `-ConstantExpr 0x5588eaa59a80 <col:29> 'int'
| |   `-DeclRefExpr 0x5588eaa59a60 <col:29> 'int' EnumConstant 0x5588eaa598e8 'PTHREAD_MUTEX_RECURSIVE_NP' 'int'
| |-EnumConstantDecl 0x5588eaa59b20 <line:329:3, col:30> col:3 PTHREAD_MUTEX_ERRORCHECK 'int'
| | `-ConstantExpr 0x5588eaa59b08 <col:30> 'int'
| |   `-DeclRefExpr 0x5588eaa59ae8 <col:30> 'int' EnumConstant 0x5588eaa59938 'PTHREAD_MUTEX_ERRORCHECK_NP' 'int'
| `-EnumConstantDecl 0x5588eaa59ba8 <line:330:3, col:27> col:3 PTHREAD_MUTEX_DEFAULT 'int'
|   `-ConstantExpr 0x5588eaa59b90 <col:27> 'int'
|     `-DeclRefExpr 0x5588eaa59b70 <col:27> 'int' EnumConstant 0x5588eaa59a10 'PTHREAD_MUTEX_NORMAL' 'int'
|-EnumDecl 0x5588eaa59bf8 <line:332:1, line:338:1> line:332:1
| |-EnumConstantDecl 0x5588eaa59cc8 <line:334:3> col:3 referenced PTHREAD_MUTEX_STALLED 'int'
| |-EnumConstantDecl 0x5588eaa59d50 <line:335:3, col:30> col:3 PTHREAD_MUTEX_STALLED_NP 'int'
| | `-ConstantExpr 0x5588eaa59d38 <col:30> 'int'
| |   `-DeclRefExpr 0x5588eaa59d18 <col:30> 'int' EnumConstant 0x5588eaa59cc8 'PTHREAD_MUTEX_STALLED' 'int'
| |-EnumConstantDecl 0x5588eaa59da0 <line:336:3> col:3 referenced PTHREAD_MUTEX_ROBUST 'int'
| `-EnumConstantDecl 0x5588eaa59e28 <line:337:3, col:29> col:3 PTHREAD_MUTEX_ROBUST_NP 'int'
|   `-ConstantExpr 0x5588eaa59e10 <col:29> 'int'
|     `-DeclRefExpr 0x5588eaa59df0 <col:29> 'int' EnumConstant 0x5588eaa59da0 'PTHREAD_MUTEX_ROBUST' 'int'
|-EnumDecl 0x5588eaa59e78 <line:339:1, line:344:1> line:339:1
| |-EnumConstantDecl 0x5588eaa59f48 <line:341:3> col:3 PTHREAD_PRIO_NONE 'int'
| |-EnumConstantDecl 0x5588eaa59f98 <line:342:3> col:3 PTHREAD_PRIO_INHERIT 'int'
| `-EnumConstantDecl 0x5588eaa59fe8 <line:343:3> col:3 PTHREAD_PRIO_PROTECT 'int'
|-EnumDecl 0x5588eaa5a038 <line:345:1, line:351:1> line:345:1
| |-EnumConstantDecl 0x5588eaa5a150 <line:347:3> col:3 referenced PTHREAD_RWLOCK_PREFER_READER_NP 'int'
| |-EnumConstantDecl 0x5588eaa5a1a0 <line:348:3> col:3 PTHREAD_RWLOCK_PREFER_WRITER_NP 'int'
| |-EnumConstantDecl 0x5588eaa5a1f0 <line:349:3> col:3 PTHREAD_RWLOCK_PREFER_WRITER_NONRECURSIVE_NP 'int'
| `-EnumConstantDecl 0x5588eaa5a278 <line:350:3, col:31> col:3 PTHREAD_RWLOCK_DEFAULT_NP 'int'
|   `-ConstantExpr 0x5588eaa5a260 <col:31> 'int'
|     `-DeclRefExpr 0x5588eaa5a240 <col:31> 'int' EnumConstant 0x5588eaa5a150 'PTHREAD_RWLOCK_PREFER_READER_NP' 'int'
|-EnumDecl 0x5588eaa5a2c8 <line:352:1, line:356:1> line:352:1
| |-EnumConstantDecl 0x5588eaa5a398 <line:354:3> col:3 PTHREAD_INHERIT_SCHED 'int'
| `-EnumConstantDecl 0x5588eaa5a3e8 <line:355:3> col:3 PTHREAD_EXPLICIT_SCHED 'int'
|-EnumDecl 0x5588eaa5a438 <line:357:1, line:361:1> line:357:1
| |-EnumConstantDecl 0x5588eaa5a508 <line:359:3> col:3 PTHREAD_SCOPE_SYSTEM 'int'
| `-EnumConstantDecl 0x5588eaa5a558 <line:360:3> col:3 PTHREAD_SCOPE_PROCESS 'int'
|-EnumDecl 0x5588eaa5a5a8 <line:362:1, line:366:1> line:362:1
| |-EnumConstantDecl 0x5588eaa5a678 <line:364:3> col:3 PTHREAD_PROCESS_PRIVATE 'int'
| `-EnumConstantDecl 0x5588eaa5a6c8 <line:365:3> col:3 PTHREAD_PROCESS_SHARED 'int'
|-RecordDecl 0x5588eaa5a718 <line:367:1, line:373:1> line:367:8 struct _pthread_cleanup_buffer definition
| |-FieldDecl 0x5588eaa5a958 <line:369:3, col:28> col:10 __routine 'void (*)(void *)'
| |-FieldDecl 0x5588eaa5a9c0 <line:370:3, col:9> col:9 __arg 'void *'
| |-FieldDecl 0x5588eaa5aa28 <line:371:3, col:7> col:7 __canceltype 'int'
| `-FieldDecl 0x5588eaa5ab48 <line:372:3, col:35> col:35 __prev 'struct _pthread_cleanup_buffer *'
|-EnumDecl 0x5588eaa5ab98 <line:374:1, line:378:1> line:374:1
| |-EnumConstantDecl 0x5588eaa5ac68 <line:376:3> col:3 PTHREAD_CANCEL_ENABLE 'int'
| `-EnumConstantDecl 0x5588eaa5acb8 <line:377:3> col:3 PTHREAD_CANCEL_DISABLE 'int'
|-EnumDecl 0x5588eaa5ad08 <line:379:1, line:383:1> line:379:1
| |-EnumConstantDecl 0x5588eaa5add8 <line:381:3> col:3 PTHREAD_CANCEL_DEFERRED 'int'
| `-EnumConstantDecl 0x5588eaa5ae28 <line:382:3> col:3 PTHREAD_CANCEL_ASYNCHRONOUS 'int'
|-FunctionDecl 0x5588eaa5b488 <line:385:1, line:388:96> line:385:12 used pthread_create 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' extern
| |-ParmVarDecl 0x5588eaa5af20 <col:28, col:50> col:50 __newthread 'pthread_t *restrict'
| |-ParmVarDecl 0x5588eaa5b030 <line:386:7, col:40> col:40 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x5588eaa5b270 <line:387:7, col:39> col:15 __start_routine 'void *(*)(void *)'
| |-ParmVarDecl 0x5588eaa5b2f0 <line:388:7, col:24> col:24 __arg 'void *restrict'
| |-NoThrowAttr 0x5588eaa5b548 <col:47>
| |-NonNullAttr 0x5588eaa5b5a0 <col:77, col:94> 1 3
| `-CallbackAttr 0x5588eaa5b5d8 <line:385:12> Implicit 2 3
|-FunctionDecl 0x5588eaa5b700 <line:389:1, col:72> col:13 pthread_exit 'void (void *) __attribute__((noreturn))' extern
| `-ParmVarDecl 0x5588eaa5b630 <col:27, col:33> col:33 __retval 'void *'
|-FunctionDecl 0x5588eaa5b958 <line:390:1, col:64> col:12 pthread_join 'int (pthread_t, void **)' extern
| |-ParmVarDecl 0x5588eaa5b7b8 <col:26, col:36> col:36 __th 'pthread_t':'unsigned long'
| `-ParmVarDecl 0x5588eaa5b838 <col:42, col:49> col:49 __thread_return 'void **'
|-FunctionDecl 0x5588eaa5bb28 <line:391:1, col:83> col:12 pthread_detach 'int (pthread_t)' extern
| |-ParmVarDecl 0x5588eaa5ba18 <col:28, col:38> col:38 __th 'pthread_t':'unsigned long'
| `-NoThrowAttr 0x5588eaa5bbd0 <col:60>
|-FunctionDecl 0x5588eaa5bd20 <line:392:1, col:105> col:18 pthread_self 'pthread_t (void)' extern
| |-NoThrowAttr 0x5588eaa5bdc0 <col:54>
| `-ConstAttr 0x5588eaa5be18 <col:95>
|-FunctionDecl 0x5588eaa5bfe8 <line:393:1, line:394:70> line:393:12 pthread_equal 'int (pthread_t, pthread_t)' extern
| |-ParmVarDecl 0x5588eaa5be50 <col:27, col:37> col:37 __thread1 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x5588eaa5bec8 <col:48, col:58> col:58 __thread2 'pthread_t':'unsigned long'
| |-NoThrowAttr 0x5588eaa5c098 <line:394:19>
| `-ConstAttr 0x5588eaa5c0f0 <col:60>
|-FunctionDecl 0x5588eaa5db08 <line:395:1, col:128> col:12 pthread_attr_init 'int (pthread_attr_t *)' extern
| |-ParmVarDecl 0x5588eaa5d9d0 <col:31, col:47> col:47 __attr 'pthread_attr_t *'
| |-NoThrowAttr 0x5588eaa5dbb0 <col:71>
| `-NonNullAttr 0x5588eaa5dc08 <col:112, col:126> 1
|-FunctionDecl 0x5588eaa5dd10 <line:396:1, line:397:79> line:396:12 pthread_attr_destroy 'int (pthread_attr_t *)' extern
| |-ParmVarDecl 0x5588eaa5dc58 <col:34, col:50> col:50 __attr 'pthread_attr_t *'
| |-NoThrowAttr 0x5588eaa5ddb8 <line:397:22>
| `-NonNullAttr 0x5588eaa5de10 <col:63, col:77> 1
|-FunctionDecl 0x5588eaa5e038 <line:398:1, line:400:82> line:398:12 pthread_attr_getdetachstate 'int (const pthread_attr_t *, int *)' extern
| |-ParmVarDecl 0x5588eaa5de58 <col:41, col:63> col:63 __attr 'const pthread_attr_t *'
| |-ParmVarDecl 0x5588eaa5ded8 <line:399:6, col:11> col:11 __detachstate 'int *'
| |-NoThrowAttr 0x5588eaa5e0e8 <line:400:22>
| `-NonNullAttr 0x5588eaa5e140 <col:63, col:80> 1 2
|-FunctionDecl 0x5588eaa5e348 <line:401:1, line:403:79> line:401:12 pthread_attr_setdetachstate 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x5588eaa5e188 <col:41, col:57> col:57 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x5588eaa5e208 <line:402:6, col:10> col:10 __detachstate 'int'
| |-NoThrowAttr 0x5588eaa5e3f8 <line:403:22>
| `-NonNullAttr 0x5588eaa5e450 <col:63, col:77> 1
|-FunctionDecl 0x5588eaa5e6a8 <line:404:1, line:406:82> line:404:12 pthread_attr_getguardsize 'int (const pthread_attr_t *, size_t *)' extern
| |-ParmVarDecl 0x5588eaa5e498 <col:39, col:61> col:61 __attr 'const pthread_attr_t *'
| |-ParmVarDecl 0x5588eaa5e540 <line:405:11, col:19> col:19 __guardsize 'size_t *'
| |-NoThrowAttr 0x5588eaa5e758 <line:406:22>
| `-NonNullAttr 0x5588eaa5e7b0 <col:63, col:80> 1 2
|-FunctionDecl 0x5588eaa5f9e8 <line:407:1, line:409:79> line:407:12 pthread_attr_setguardsize 'int (pthread_attr_t *, size_t)' extern
| |-ParmVarDecl 0x5588eaa5e7f8 <col:39, col:55> col:55 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x5588eaa5e870 <line:408:11, col:18> col:18 __guardsize 'size_t':'unsigned long'
| |-NoThrowAttr 0x5588eaa5fa98 <line:409:22>
| `-NonNullAttr 0x5588eaa5faf0 <col:63, col:77> 1
|-FunctionDecl 0x5588eaa5fd28 <line:410:1, line:412:82> line:410:12 pthread_attr_getschedparam 'int (const pthread_attr_t *restrict, struct sched_param *restrict)' extern
| |-ParmVarDecl 0x5588eaa5fb38 <col:40, col:73> col:73 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x5588eaa5fbc8 <line:411:12, col:43> col:43 __param 'struct sched_param *restrict'
| |-NoThrowAttr 0x5588eaa5fdd8 <line:412:22>
| `-NonNullAttr 0x5588eaa5fe30 <col:63, col:80> 1 2
|-FunctionDecl 0x5588eaa60068 <line:413:1, line:415:97> line:413:12 pthread_attr_setschedparam 'int (pthread_attr_t *restrict, const struct sched_param *restrict)' extern
| |-ParmVarDecl 0x5588eaa5fe78 <col:40, col:67> col:67 __attr 'pthread_attr_t *restrict'
| |-ParmVarDecl 0x5588eaa5ff08 <line:414:12, line:415:12> col:12 __param 'const struct sched_param *restrict'
| |-NoThrowAttr 0x5588eaa60118 <col:37>
| `-NonNullAttr 0x5588eaa60170 <col:78, col:95> 1 2
|-FunctionDecl 0x5588eaa60358 <line:416:1, line:418:82> line:416:12 pthread_attr_getschedpolicy 'int (const pthread_attr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x5588eaa601b8 <col:41, line:417:6> col:6 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x5588eaa60238 <col:14, col:30> col:30 __policy 'int *restrict'
| |-NoThrowAttr 0x5588eaa60408 <line:418:22>
| `-NonNullAttr 0x5588eaa60460 <col:63, col:80> 1 2
|-FunctionDecl 0x5588eaa605e8 <line:419:1, line:420:79> line:419:12 pthread_attr_setschedpolicy 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x5588eaa604a8 <col:41, col:57> col:57 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x5588eaa60528 <col:65, col:69> col:69 __policy 'int'
| |-NoThrowAttr 0x5588eaa60698 <line:420:22>
| `-NonNullAttr 0x5588eaa606f0 <col:63, col:77> 1
|-FunctionDecl 0x5588eaa60898 <line:421:1, line:423:82> line:421:12 pthread_attr_getinheritsched 'int (const pthread_attr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x5588eaa60738 <col:42, line:422:7> col:7 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x5588eaa607b8 <col:15, col:31> col:31 __inherit 'int *restrict'
| |-NoThrowAttr 0x5588eaa60948 <line:423:22>
| `-NonNullAttr 0x5588eaa609c0 <col:63, col:80> 1 2
|-FunctionDecl 0x5588eaa60b48 <line:424:1, line:426:79> line:424:12 pthread_attr_setinheritsched 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x5588eaa60a08 <col:42, col:58> col:58 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x5588eaa60a88 <line:425:7, col:11> col:11 __inherit 'int'
| |-NoThrowAttr 0x5588eaa60bf8 <line:426:22>
| `-NonNullAttr 0x5588eaa60c50 <col:63, col:77> 1
|-FunctionDecl 0x5588eaa60df8 <line:427:1, line:429:82> line:427:12 pthread_attr_getscope 'int (const pthread_attr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x5588eaa60c98 <col:35, col:68> col:68 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x5588eaa60d18 <line:428:7, col:23> col:23 __scope 'int *restrict'
| |-NoThrowAttr 0x5588eaa60ea8 <line:429:22>
| `-NonNullAttr 0x5588eaa60f00 <col:63, col:80> 1 2
|-FunctionDecl 0x5588eaa61088 <line:430:1, line:431:79> line:430:12 pthread_attr_setscope 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x5588eaa60f48 <col:35, col:51> col:51 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x5588eaa60fc8 <col:59, col:63> col:63 __scope 'int'
| |-NoThrowAttr 0x5588eaa61138 <line:431:22>
| `-NonNullAttr 0x5588eaa61190 <col:63, col:77> 1
|-FunctionDecl 0x5588eaa613b8 <line:432:1, line:434:115> line:432:12 pthread_attr_getstackaddr 'int (const pthread_attr_t *restrict, void **restrict)' extern
| |-ParmVarDecl 0x5588eaa611d8 <col:39, line:433:11> col:11 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x5588eaa61258 <col:19, col:37> col:37 __stackaddr 'void **restrict'
| |-NoThrowAttr 0x5588eaa61468 <line:434:22>
| |-NonNullAttr 0x5588eaa614c0 <col:63, col:80> 1 2
| `-DeprecatedAttr 0x5588eaa614f8 <col:100> "" ""
|-FunctionDecl 0x5588eaa61708 <line:435:1, line:437:112> line:435:12 pthread_attr_setstackaddr 'int (pthread_attr_t *, void *)' extern
| |-ParmVarDecl 0x5588eaa61548 <col:39, col:55> col:55 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x5588eaa615c8 <line:436:11, col:17> col:17 __stackaddr 'void *'
| |-NoThrowAttr 0x5588eaa617b8 <line:437:22>
| |-NonNullAttr 0x5588eaa61810 <col:63, col:77> 1
| `-DeprecatedAttr 0x5588eaa61848 <col:97> "" ""
|-FunctionDecl 0x5588eaa61a48 <line:438:1, line:440:82> line:438:12 pthread_attr_getstacksize 'int (const pthread_attr_t *restrict, size_t *restrict)' extern
| |-ParmVarDecl 0x5588eaa61898 <col:39, line:439:11> col:11 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x5588eaa61910 <col:19, col:38> col:38 __stacksize 'size_t *restrict'
| |-NoThrowAttr 0x5588eaa61af8 <line:440:22>
| `-NonNullAttr 0x5588eaa61b50 <col:63, col:80> 1 2
|-FunctionDecl 0x5588eaa61cd0 <line:441:1, line:443:79> line:441:12 pthread_attr_setstacksize 'int (pthread_attr_t *, size_t)' extern
| |-ParmVarDecl 0x5588eaa61b98 <col:39, col:55> col:55 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x5588eaa61c10 <line:442:11, col:18> col:18 __stacksize 'size_t':'unsigned long'
| |-NoThrowAttr 0x5588eaa61d80 <line:443:22>
| `-NonNullAttr 0x5588eaa61dd8 <col:63, col:77> 1
|-FunctionDecl 0x5588eaa620c8 <line:444:1, line:447:85> line:444:12 pthread_attr_getstack 'int (const pthread_attr_t *restrict, void **restrict, size_t *restrict)' extern
| |-ParmVarDecl 0x5588eaa61e28 <col:35, col:68> col:68 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x5588eaa61ea8 <line:445:7, col:25> col:25 __stackaddr 'void **restrict'
| |-ParmVarDecl 0x5588eaa61f20 <line:446:7, col:26> col:26 __stacksize 'size_t *restrict'
| |-NoThrowAttr 0x5588eaa62180 <line:447:22>
| `-NonNullAttr 0x5588eaa621d8 <col:63, col:83> 1 2 3
|-FunctionDecl 0x5588eaa62488 <line:448:1, line:449:100> line:448:12 pthread_attr_setstack 'int (pthread_attr_t *, void *, size_t)' extern
| |-ParmVarDecl 0x5588eaa62230 <col:35, col:51> col:51 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x5588eaa622b0 <col:59, col:65> col:65 __stackaddr 'void *'
| |-ParmVarDecl 0x5588eaa62328 <line:449:7, col:14> col:14 __stacksize 'size_t':'unsigned long'
| |-NoThrowAttr 0x5588eaa62540 <col:43>
| `-NonNullAttr 0x5588eaa62598 <col:84, col:98> 1
|-FunctionDecl 0x5588eaa62858 <line:450:1, line:452:79> line:450:12 pthread_setschedparam 'int (pthread_t, int, const struct sched_param *)' extern
| |-ParmVarDecl 0x5588eaa625e8 <col:35, col:45> col:45 __target_thread 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x5588eaa62668 <col:62, col:66> col:66 __policy 'int'
| |-ParmVarDecl 0x5588eaa626f8 <line:451:7, col:33> col:33 __param 'const struct sched_param *'
| |-NoThrowAttr 0x5588eaa62910 <line:452:22>
| `-NonNullAttr 0x5588eaa62968 <col:63, col:77> 3
|-FunctionDecl 0x5588eaa62c78 <line:453:1, line:456:82> line:453:12 pthread_getschedparam 'int (pthread_t, int *restrict, struct sched_param *restrict)' extern
| |-ParmVarDecl 0x5588eaa629e0 <col:35, col:45> col:45 __target_thread 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x5588eaa62a60 <line:454:7, col:23> col:23 __policy 'int *restrict'
| |-ParmVarDecl 0x5588eaa62af0 <line:455:7, col:38> col:38 __param 'struct sched_param *restrict'
| |-NoThrowAttr 0x5588eaa62d30 <line:456:22>
| `-NonNullAttr 0x5588eaa62d88 <col:63, col:80> 2 3
|-FunctionDecl 0x5588eaa62f78 <line:457:1, line:458:45> line:457:12 pthread_setschedprio 'int (pthread_t, int)' extern
| |-ParmVarDecl 0x5588eaa62dd8 <col:34, col:44> col:44 __target_thread 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x5588eaa62e58 <col:61, col:65> col:65 __prio 'int'
| `-NoThrowAttr 0x5588eaa63028 <line:458:22>
|-FunctionDecl 0x5588eaa633f8 <line:459:1, line:460:71> line:459:12 pthread_once 'int (pthread_once_t *, void (*)(void))' extern
| |-ParmVarDecl 0x5588eaa630f0 <col:26, col:42> col:42 __once_control 'pthread_once_t *'
| |-ParmVarDecl 0x5588eaa63290 <line:460:5, col:33> col:12 __init_routine 'void (*)(void)'
| `-NonNullAttr 0x5588eaa634a8 <col:52, col:69> 1 2
|-FunctionDecl 0x5588eaa63650 <line:461:1, col:64> col:12 pthread_setcancelstate 'int (int, int *)' extern
| |-ParmVarDecl 0x5588eaa63530 <col:36, col:40> col:40 __state 'int'
| `-ParmVarDecl 0x5588eaa635b0 <col:49, col:54> col:54 __oldstate 'int *'
|-FunctionDecl 0x5588eaa63838 <line:462:1, col:61> col:12 pthread_setcanceltype 'int (int, int *)' extern
| |-ParmVarDecl 0x5588eaa63718 <col:35, col:39> col:39 __type 'int'
| `-ParmVarDecl 0x5588eaa63798 <col:47, col:52> col:52 __oldtype 'int *'
|-FunctionDecl 0x5588eaa639f0 <line:463:1, col:42> col:12 pthread_cancel 'int (pthread_t)' extern
| `-ParmVarDecl 0x5588eaa638f8 <col:28, col:38> col:38 __th 'pthread_t':'unsigned long'
|-FunctionDecl 0x5588eaa63b30 <line:464:1, col:37> col:13 pthread_testcancel 'void (void)' extern
|-RecordDecl 0x5588eaa63bd0 <line:465:9, line:473:1> line:465:9 struct definition
| |-RecordDecl 0x5588eaa63c78 <line:467:3, line:471:3> line:467:3 struct definition
| | |-FieldDecl 0x5588eaa63d68 <line:469:5, col:15> col:15 __cancel_jmp_buf '__jmp_buf':'long [8]'
| | `-FieldDecl 0x5588eaa63dd0 <line:470:5, col:9> col:9 __mask_was_saved 'int'
| |-FieldDecl 0x5588eaa63fa0 <line:467:3, line:471:23> col:5 __cancel_jmp_buf 'struct (anonymous struct at ./split_4/mix011_rmo.opt_false-unreach-call.i:467:3) [1]'
| `-FieldDecl 0x5588eaa64098 <line:472:3, col:16> col:9 __pad 'void *[4]'
|-TypedefDecl 0x5588eaa64150 <line:465:1, line:473:3> col:3 referenced __pthread_unwind_buf_t 'struct __pthread_unwind_buf_t':'__pthread_unwind_buf_t'
| |-ElaboratedType 0x5588eaa640f0 'struct __pthread_unwind_buf_t' sugar
| | `-RecordType 0x5588eaa63c50 '__pthread_unwind_buf_t'
| |   `-Record 0x5588eaa63bd0 ''
| `-AlignedAttr 0x5588eaa641a8 <col:42> aligned
|   `-<<<NULL>>>
|-RecordDecl 0x5588eaa64220 <line:474:1, line:480:1> line:474:8 struct __pthread_cleanup_frame definition
| |-FieldDecl 0x5588eaa64380 <line:476:3, col:35> col:10 __cancel_routine 'void (*)(void *)'
| |-FieldDecl 0x5588eaa643e8 <line:477:3, col:9> col:9 __cancel_arg 'void *'
| |-FieldDecl 0x5588eaa64450 <line:478:3, col:7> col:7 __do_it 'int'
| `-FieldDecl 0x5588eaa644b8 <line:479:3, col:7> col:7 __cancel_type 'int'
|-FunctionDecl 0x5588eaa646c0 <line:481:1, col:69> col:13 __pthread_register_cancel 'void (__pthread_unwind_buf_t *)' extern
| `-ParmVarDecl 0x5588eaa645b0 <col:40, col:64> col:64 __buf '__pthread_unwind_buf_t *'
|-FunctionDecl 0x5588eaa64808 <line:483:1, col:71> col:13 __pthread_unregister_cancel 'void (__pthread_unwind_buf_t *)' extern
| `-ParmVarDecl 0x5588eaa64778 <col:42, col:66> col:66 __buf '__pthread_unwind_buf_t *'
|-FunctionDecl 0x5588eaa64a00 <line:485:1, line:487:31> line:485:13 __pthread_unwind_next 'void (__pthread_unwind_buf_t *) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x5588eaa648c0 <col:36, col:60> col:60 __buf '__pthread_unwind_buf_t *'
| `-WeakAttr 0x5588eaa64aa8 <line:487:22>
|-RecordDecl 0x5588eaa64b00 <line:489:1, col:8> col:8 struct __jmp_buf_tag
|-FunctionDecl 0x5588eaa64e18 <line:490:1, col:98> col:12 __sigsetjmp 'int (struct __jmp_buf_tag *, int)' extern
| |-ParmVarDecl 0x5588eaa64c78 <col:25, col:47> col:47 __env 'struct __jmp_buf_tag *'
| |-ParmVarDecl 0x5588eaa64cf8 <col:54, col:58> col:58 __savemask 'int'
| |-NoThrowAttr 0x5588eaa64ec8 <col:86>
| `-ReturnsTwiceAttr 0x5588eaa64f20 <col:12> Implicit
|-FunctionDecl 0x5588eaa65248 <line:491:1, line:493:79> line:491:12 pthread_mutex_init 'int (pthread_mutex_t *, const pthread_mutexattr_t *)' extern
| |-ParmVarDecl 0x5588eaa64ff0 <col:32, col:49> col:49 __mutex 'pthread_mutex_t *'
| |-ParmVarDecl 0x5588eaa65100 <line:492:11, col:38> col:38 __mutexattr 'const pthread_mutexattr_t *'
| |-NoThrowAttr 0x5588eaa652f8 <line:493:22>
| `-NonNullAttr 0x5588eaa65350 <col:63, col:77> 1
|-FunctionDecl 0x5588eaa654c8 <line:494:1, line:495:79> line:494:12 pthread_mutex_destroy 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x5588eaa65398 <col:35, col:52> col:52 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x5588eaa65570 <line:495:22>
| `-NonNullAttr 0x5588eaa655c8 <col:63, col:77> 1
|-FunctionDecl 0x5588eaa656d0 <line:496:1, line:497:68> line:496:12 pthread_mutex_trylock 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x5588eaa65618 <col:35, col:52> col:52 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x5588eaa65778 <line:497:22>
| `-NonNullAttr 0x5588eaa657d0 <col:52, col:66> 1
|-FunctionDecl 0x5588eaa658d0 <line:498:1, line:499:68> line:498:12 pthread_mutex_lock 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x5588eaa65818 <col:32, col:49> col:49 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x5588eaa65978 <line:499:22>
| `-NonNullAttr 0x5588eaa659d0 <col:52, col:66> 1
|-FunctionDecl 0x5588eaa66c28 <line:500:1, line:502:85> line:500:12 pthread_mutex_timedlock 'int (pthread_mutex_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x5588eaa66a38 <col:37, col:65> col:65 __mutex 'pthread_mutex_t *restrict'
| |-ParmVarDecl 0x5588eaa66ac8 <line:501:9, line:502:9> col:9 __abstime 'const struct timespec *restrict'
| |-NoThrowAttr 0x5588eaa66cd8 <col:36>
| `-NonNullAttr 0x5588eaa66d30 <col:66, col:83> 1 2
|-FunctionDecl 0x5588eaa66e30 <line:503:1, line:504:68> line:503:12 pthread_mutex_unlock 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x5588eaa66d78 <col:34, col:51> col:51 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x5588eaa66ed8 <line:504:22>
| `-NonNullAttr 0x5588eaa66f30 <col:52, col:66> 1
|-FunctionDecl 0x5588eaa671c8 <line:505:1, line:508:82> line:505:12 pthread_mutex_getprioceiling 'int (const pthread_mutex_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x5588eaa66fe0 <col:42, line:506:18> col:18 __mutex 'const pthread_mutex_t *restrict'
| |-ParmVarDecl 0x5588eaa67060 <line:507:7, col:23> col:23 __prioceiling 'int *restrict'
| |-NoThrowAttr 0x5588eaa67278 <line:508:22>
| `-NonNullAttr 0x5588eaa672d0 <col:63, col:80> 1 2
|-FunctionDecl 0x5588eaa67598 <line:509:1, line:512:82> line:509:12 pthread_mutex_setprioceiling 'int (pthread_mutex_t *restrict, int, int *restrict)' extern
| |-ParmVarDecl 0x5588eaa67318 <col:42, col:70> col:70 __mutex 'pthread_mutex_t *restrict'
| |-ParmVarDecl 0x5588eaa67398 <line:510:7, col:11> col:11 __prioceiling 'int'
| |-ParmVarDecl 0x5588eaa67418 <line:511:7, col:23> col:23 __old_ceiling 'int *restrict'
| |-NoThrowAttr 0x5588eaa67650 <line:512:22>
| `-NonNullAttr 0x5588eaa676a8 <col:63, col:80> 1 3
|-FunctionDecl 0x5588eaa677b0 <line:513:1, line:514:79> line:513:12 pthread_mutex_consistent 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x5588eaa676f8 <col:38, col:55> col:55 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x5588eaa67858 <line:514:22>
| `-NonNullAttr 0x5588eaa678b0 <col:63, col:77> 1
|-FunctionDecl 0x5588eaa67ad8 <line:515:1, line:516:79> line:515:12 pthread_mutexattr_init 'int (pthread_mutexattr_t *)' extern
| |-ParmVarDecl 0x5588eaa67960 <col:36, col:57> col:57 __attr 'pthread_mutexattr_t *'
| |-NoThrowAttr 0x5588eaa67b80 <line:516:22>
| `-NonNullAttr 0x5588eaa67bd8 <col:63, col:77> 1
|-FunctionDecl 0x5588eaa67ce0 <line:517:1, line:518:79> line:517:12 pthread_mutexattr_destroy 'int (pthread_mutexattr_t *)' extern
| |-ParmVarDecl 0x5588eaa67c28 <col:39, col:60> col:60 __attr 'pthread_mutexattr_t *'
| |-NoThrowAttr 0x5588eaa67d88 <line:518:22>
| `-NonNullAttr 0x5588eaa67de0 <col:63, col:77> 1
|-FunctionDecl 0x5588eaa68008 <line:519:1, line:522:82> line:519:12 pthread_mutexattr_getpshared 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x5588eaa67e28 <col:42, line:520:18> col:18 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x5588eaa67ea8 <line:521:7, col:23> col:23 __pshared 'int *restrict'
| |-NoThrowAttr 0x5588eaa680b8 <line:522:22>
| `-NonNullAttr 0x5588eaa68110 <col:63, col:80> 1 2
|-FunctionDecl 0x5588eaa68318 <line:523:1, line:525:79> line:523:12 pthread_mutexattr_setpshared 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x5588eaa68158 <col:42, col:63> col:63 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x5588eaa681d8 <line:524:7, col:11> col:11 __pshared 'int'
| |-NoThrowAttr 0x5588eaa683c8 <line:525:22>
| `-NonNullAttr 0x5588eaa68420 <col:63, col:77> 1
|-FunctionDecl 0x5588eaa685c8 <line:526:1, line:528:82> line:526:12 pthread_mutexattr_gettype 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x5588eaa68468 <col:39, line:527:11> col:11 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x5588eaa684e8 <col:19, col:35> col:35 __kind 'int *restrict'
| |-NoThrowAttr 0x5588eaa68678 <line:528:22>
| `-NonNullAttr 0x5588eaa686d0 <col:63, col:80> 1 2
|-FunctionDecl 0x5588eaa68858 <line:529:1, line:530:79> line:529:12 pthread_mutexattr_settype 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x5588eaa68718 <col:39, col:60> col:60 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x5588eaa68798 <col:68, col:72> col:72 __kind 'int'
| |-NoThrowAttr 0x5588eaa68908 <line:530:22>
| `-NonNullAttr 0x5588eaa68960 <col:63, col:77> 1
|-FunctionDecl 0x5588eaa68b20 <line:531:1, line:534:82> line:531:12 pthread_mutexattr_getprotocol 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x5588eaa689a8 <col:43, line:532:19> col:19 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x5588eaa68a40 <line:533:8, col:24> col:24 __protocol 'int *restrict'
| |-NoThrowAttr 0x5588eaa68bd0 <line:534:22>
| `-NonNullAttr 0x5588eaa68c28 <col:63, col:80> 1 2
|-FunctionDecl 0x5588eaa68db8 <line:535:1, line:537:79> line:535:12 pthread_mutexattr_setprotocol 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x5588eaa68c78 <col:43, col:64> col:64 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x5588eaa68cf8 <line:536:8, col:12> col:12 __protocol 'int'
| |-NoThrowAttr 0x5588eaa68e68 <line:537:22>
| `-NonNullAttr 0x5588eaa68ec0 <col:63, col:77> 1
|-FunctionDecl 0x5588eaa69068 <line:538:1, line:541:82> line:538:12 pthread_mutexattr_getprioceiling 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x5588eaa68f08 <col:46, line:539:22> col:22 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x5588eaa68f88 <line:540:11, col:27> col:27 __prioceiling 'int *restrict'
| |-NoThrowAttr 0x5588eaa69118 <line:541:22>
| `-NonNullAttr 0x5588eaa69170 <col:63, col:80> 1 2
|-FunctionDecl 0x5588eaa692f8 <line:542:1, line:544:79> line:542:12 pthread_mutexattr_setprioceiling 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x5588eaa691b8 <col:46, col:67> col:67 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x5588eaa69238 <line:543:11, col:15> col:15 __prioceiling 'int'
| |-NoThrowAttr 0x5588eaa693a8 <line:544:22>
| `-NonNullAttr 0x5588eaa69400 <col:63, col:77> 1
|-FunctionDecl 0x5588eaa695e8 <line:545:1, line:547:82> line:545:12 pthread_mutexattr_getrobust 'int (const pthread_mutexattr_t *, int *)' extern
| |-ParmVarDecl 0x5588eaa69448 <col:41, col:68> col:68 __attr 'const pthread_mutexattr_t *'
| |-ParmVarDecl 0x5588eaa694c8 <line:546:6, col:11> col:11 __robustness 'int *'
| |-NoThrowAttr 0x5588eaa69698 <line:547:22>
| `-NonNullAttr 0x5588eaa696f0 <col:63, col:80> 1 2
|-FunctionDecl 0x5588eaa69878 <line:548:1, line:550:79> line:548:12 pthread_mutexattr_setrobust 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x5588eaa69738 <col:41, col:62> col:62 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x5588eaa697b8 <line:549:6, col:10> col:10 __robustness 'int'
| |-NoThrowAttr 0x5588eaa69928 <line:550:22>
| `-NonNullAttr 0x5588eaa69980 <col:63, col:77> 1
|-FunctionDecl 0x5588eaa6acf8 <line:551:1, line:553:86> line:551:12 pthread_rwlock_init 'int (pthread_rwlock_t *restrict, const pthread_rwlockattr_t *restrict)' extern
| |-ParmVarDecl 0x5588eaa6aaa0 <col:33, col:62> col:62 __rwlock 'pthread_rwlock_t *restrict'
| |-ParmVarDecl 0x5588eaa6abb0 <line:552:5, line:553:5> col:5 __attr 'const pthread_rwlockattr_t *restrict'
| |-NoThrowAttr 0x5588eaa6ada8 <col:29>
| `-NonNullAttr 0x5588eaa6ae00 <col:70, col:84> 1
|-FunctionDecl 0x5588eaa6af78 <line:554:1, line:555:79> line:554:12 pthread_rwlock_destroy 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x5588eaa6ae48 <col:36, col:54> col:54 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x5588eaa6b020 <line:555:22>
| `-NonNullAttr 0x5588eaa6b078 <col:63, col:77> 1
|-FunctionDecl 0x5588eaa6b180 <line:556:1, line:557:68> line:556:12 pthread_rwlock_rdlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x5588eaa6b0c8 <col:35, col:53> col:53 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x5588eaa6b228 <line:557:22>
| `-NonNullAttr 0x5588eaa6b280 <col:52, col:66> 1
|-FunctionDecl 0x5588eaa6b380 <line:558:1, line:559:65> line:558:12 pthread_rwlock_tryrdlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x5588eaa6b2c8 <col:38, col:56> col:56 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x5588eaa6b428 <line:559:19>
| `-NonNullAttr 0x5588eaa6b480 <col:49, col:63> 1
|-FunctionDecl 0x5588eaa6b6b8 <line:560:1, line:562:88> line:560:12 pthread_rwlock_timedrdlock 'int (pthread_rwlock_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x5588eaa6b4c8 <col:40, col:69> col:69 __rwlock 'pthread_rwlock_t *restrict'
| |-ParmVarDecl 0x5588eaa6b558 <line:561:12, line:562:12> col:12 __abstime 'const struct timespec *restrict'
| |-NoThrowAttr 0x5588eaa6b768 <col:39>
| `-NonNullAttr 0x5588eaa6b7c0 <col:69, col:86> 1 2
|-FunctionDecl 0x5588eaa6b8c0 <line:563:1, line:564:68> line:563:12 pthread_rwlock_wrlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x5588eaa6b808 <col:35, col:53> col:53 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x5588eaa6b968 <line:564:22>
| `-NonNullAttr 0x5588eaa6b9c0 <col:52, col:66> 1
|-FunctionDecl 0x5588eaa6bb28 <line:565:1, line:566:68> line:565:12 pthread_rwlock_trywrlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x5588eaa6ba70 <col:38, col:56> col:56 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x5588eaa6bbd0 <line:566:22>
| `-NonNullAttr 0x5588eaa6bc28 <col:52, col:66> 1
|-FunctionDecl 0x5588eaa6bde8 <line:567:1, line:569:88> line:567:12 pthread_rwlock_timedwrlock 'int (pthread_rwlock_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x5588eaa6bc78 <col:40, col:69> col:69 __rwlock 'pthread_rwlock_t *restrict'
| |-ParmVarDecl 0x5588eaa6bd08 <line:568:12, line:569:12> col:12 __abstime 'const struct timespec *restrict'
| |-NoThrowAttr 0x5588eaa6be98 <col:39>
| `-NonNullAttr 0x5588eaa6bef0 <col:69, col:86> 1 2
|-FunctionDecl 0x5588eaa6bff0 <line:570:1, line:571:68> line:570:12 pthread_rwlock_unlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x5588eaa6bf38 <col:35, col:53> col:53 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x5588eaa6c098 <line:571:22>
| `-NonNullAttr 0x5588eaa6c0f0 <col:52, col:66> 1
|-FunctionDecl 0x5588eaa6c2d8 <line:572:1, line:573:79> line:572:12 pthread_rwlockattr_init 'int (pthread_rwlockattr_t *)' extern
| |-ParmVarDecl 0x5588eaa6c1a0 <col:37, col:59> col:59 __attr 'pthread_rwlockattr_t *'
| |-NoThrowAttr 0x5588eaa6c380 <line:573:22>
| `-NonNullAttr 0x5588eaa6c3d8 <col:63, col:77> 1
|-FunctionDecl 0x5588eaa6c4e0 <line:574:1, line:575:79> line:574:12 pthread_rwlockattr_destroy 'int (pthread_rwlockattr_t *)' extern
| |-ParmVarDecl 0x5588eaa6c428 <col:40, col:62> col:62 __attr 'pthread_rwlockattr_t *'
| |-NoThrowAttr 0x5588eaa6c588 <line:575:22>
| `-NonNullAttr 0x5588eaa6c5e0 <col:63, col:77> 1
|-FunctionDecl 0x5588eaa6c808 <line:576:1, line:579:82> line:576:12 pthread_rwlockattr_getpshared 'int (const pthread_rwlockattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x5588eaa6c628 <col:43, line:577:19> col:19 __attr 'const pthread_rwlockattr_t *restrict'
| |-ParmVarDecl 0x5588eaa6c6a8 <line:578:8, col:24> col:24 __pshared 'int *restrict'
| |-NoThrowAttr 0x5588eaa6c8b8 <line:579:22>
| `-NonNullAttr 0x5588eaa6c910 <col:63, col:80> 1 2
|-FunctionDecl 0x5588eaa6cb38 <line:580:1, line:582:79> line:580:12 pthread_rwlockattr_setpshared 'int (pthread_rwlockattr_t *, int)' extern
| |-ParmVarDecl 0x5588eaa6c958 <col:43, col:65> col:65 __attr 'pthread_rwlockattr_t *'
| |-ParmVarDecl 0x5588eaa6c9d8 <line:581:8, col:12> col:12 __pshared 'int'
| |-NoThrowAttr 0x5588eaa6cbe8 <line:582:22>
| `-NonNullAttr 0x5588eaa6cc40 <col:63, col:77> 1
|-FunctionDecl 0x5588eaa6cde8 <line:583:1, line:586:82> line:583:12 pthread_rwlockattr_getkind_np 'int (const pthread_rwlockattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x5588eaa6cc88 <col:43, line:584:19> col:19 __attr 'const pthread_rwlockattr_t *restrict'
| |-ParmVarDecl 0x5588eaa6cd08 <line:585:8, col:24> col:24 __pref 'int *restrict'
| |-NoThrowAttr 0x5588eaa6ce98 <line:586:22>
| `-NonNullAttr 0x5588eaa6cef0 <col:63, col:80> 1 2
|-FunctionDecl 0x5588eaa6d078 <line:587:1, line:588:93> line:587:12 pthread_rwlockattr_setkind_np 'int (pthread_rwlockattr_t *, int)' extern
| |-ParmVarDecl 0x5588eaa6cf38 <col:43, col:65> col:65 __attr 'pthread_rwlockattr_t *'
| |-ParmVarDecl 0x5588eaa6cfb8 <line:588:8, col:12> col:12 __pref 'int'
| |-NoThrowAttr 0x5588eaa6d128 <col:36>
| `-NonNullAttr 0x5588eaa6d180 <col:77, col:91> 1
|-FunctionDecl 0x5588eaa6d4b8 <line:589:1, line:591:79> line:589:12 pthread_cond_init 'int (pthread_cond_t *restrict, const pthread_condattr_t *restrict)' extern
| |-ParmVarDecl 0x5588eaa6d260 <col:31, col:58> col:58 __cond 'pthread_cond_t *restrict'
| |-ParmVarDecl 0x5588eaa6d370 <line:590:10, col:47> col:47 __cond_attr 'const pthread_condattr_t *restrict'
| |-NoThrowAttr 0x5588eaa6d568 <line:591:22>
| `-NonNullAttr 0x5588eaa6d5c0 <col:63, col:77> 1
|-FunctionDecl 0x5588eaa6d738 <line:592:1, line:593:79> line:592:12 pthread_cond_destroy 'int (pthread_cond_t *)' extern
| |-ParmVarDecl 0x5588eaa6d608 <col:34, col:50> col:50 __cond 'pthread_cond_t *'
| |-NoThrowAttr 0x5588eaa6d7e0 <line:593:22>
| `-NonNullAttr 0x5588eaa6d838 <col:63, col:77> 1
|-FunctionDecl 0x5588eaa6d940 <line:594:1, line:595:68> line:594:12 pthread_cond_signal 'int (pthread_cond_t *)' extern
| |-ParmVarDecl 0x5588eaa6d888 <col:33, col:49> col:49 __cond 'pthread_cond_t *'
| |-NoThrowAttr 0x5588eaa6d9e8 <line:595:22>
| `-NonNullAttr 0x5588eaa6da40 <col:52, col:66> 1
|-FunctionDecl 0x5588eaa6db58 <line:596:1, line:597:68> line:596:12 pthread_cond_broadcast 'int (pthread_cond_t *)' extern
| |-ParmVarDecl 0x5588eaa6daa0 <col:36, col:52> col:52 __cond 'pthread_cond_t *'
| |-NoThrowAttr 0x5588eaa6dc00 <line:597:22>
| `-NonNullAttr 0x5588eaa6dc58 <col:52, col:66> 1
|-FunctionDecl 0x5588eaa6de88 <line:598:1, line:600:41> line:598:12 pthread_cond_wait 'int (pthread_cond_t *restrict, pthread_mutex_t *restrict)' extern
| |-ParmVarDecl 0x5588eaa6dca8 <col:31, col:58> col:58 __cond 'pthread_cond_t *restrict'
| |-ParmVarDecl 0x5588eaa6dd20 <line:599:10, col:38> col:38 __mutex 'pthread_mutex_t *restrict'
| `-NonNullAttr 0x5588eaa6df38 <line:600:22, col:39> 1 2
|-FunctionDecl 0x5588eaa6e268 <line:601:1, line:604:44> line:601:12 pthread_cond_timedwait 'int (pthread_cond_t *restrict, pthread_mutex_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x5588eaa6dfb8 <col:36, col:63> col:63 __cond 'pthread_cond_t *restrict'
| |-ParmVarDecl 0x5588eaa6e030 <line:602:8, col:36> col:36 __mutex 'pthread_mutex_t *restrict'
| |-ParmVarDecl 0x5588eaa6e0c0 <line:603:8, col:42> col:42 __abstime 'const struct timespec *restrict'
| `-NonNullAttr 0x5588eaa6e320 <line:604:22, col:42> 1 2 3
|-FunctionDecl 0x5588eaa6e538 <line:605:1, line:606:79> line:605:12 pthread_condattr_init 'int (pthread_condattr_t *)' extern
| |-ParmVarDecl 0x5588eaa6e400 <col:35, col:55> col:55 __attr 'pthread_condattr_t *'
| |-NoThrowAttr 0x5588eaa6e5e0 <line:606:22>
| `-NonNullAttr 0x5588eaa6e638 <col:63, col:77> 1
|-FunctionDecl 0x5588eaa6e740 <line:607:1, line:608:79> line:607:12 pthread_condattr_destroy 'int (pthread_condattr_t *)' extern
| |-ParmVarDecl 0x5588eaa6e688 <col:38, col:58> col:58 __attr 'pthread_condattr_t *'
| |-NoThrowAttr 0x5588eaa6e7e8 <line:608:22>
| `-NonNullAttr 0x5588eaa6e840 <col:63, col:77> 1
|-FunctionDecl 0x5588eaa6eaa0 <line:609:1, line:612:82> line:609:12 pthread_condattr_getpshared 'int (const pthread_condattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x5588eaa6e888 <col:41, line:610:17> col:17 __attr 'const pthread_condattr_t *restrict'
| |-ParmVarDecl 0x5588eaa6e908 <line:611:6, col:22> col:22 __pshared 'int *restrict'
| |-NoThrowAttr 0x5588eaa6eb50 <line:612:22>
| `-NonNullAttr 0x5588eaa6eba8 <col:63, col:80> 1 2
|-FunctionDecl 0x5588eaa6edb8 <line:613:1, line:614:94> line:613:12 pthread_condattr_setpshared 'int (pthread_condattr_t *, int)' extern
| |-ParmVarDecl 0x5588eaa6ebf8 <col:41, col:61> col:61 __attr 'pthread_condattr_t *'
| |-ParmVarDecl 0x5588eaa6ec78 <line:614:6, col:10> col:10 __pshared 'int'
| |-NoThrowAttr 0x5588eaa6ee68 <col:37>
| `-NonNullAttr 0x5588eaa6eec0 <col:78, col:92> 1
|-FunctionDecl 0x5588eaa6f0d8 <line:615:1, line:618:82> line:615:12 pthread_condattr_getclock 'int (const pthread_condattr_t *restrict, __clockid_t *restrict)' extern
| |-ParmVarDecl 0x5588eaa6ef08 <col:39, line:616:22> col:22 __attr 'const pthread_condattr_t *restrict'
| |-ParmVarDecl 0x5588eaa6efb0 <line:617:11, col:35> col:35 __clock_id '__clockid_t *restrict'
| |-NoThrowAttr 0x5588eaa6f188 <line:618:22>
| `-NonNullAttr 0x5588eaa6f1e0 <col:63, col:80> 1 2
|-FunctionDecl 0x5588eaa6f3a8 <line:619:1, line:621:79> line:619:12 pthread_condattr_setclock 'int (pthread_condattr_t *, __clockid_t)' extern
| |-ParmVarDecl 0x5588eaa6f228 <col:39, col:59> col:59 __attr 'pthread_condattr_t *'
| |-ParmVarDecl 0x5588eaa6f2a0 <line:620:11, col:23> col:23 __clock_id '__clockid_t':'int'
| |-NoThrowAttr 0x5588eaa6f458 <line:621:22>
| `-NonNullAttr 0x5588eaa6f4b0 <col:63, col:77> 1
|-FunctionDecl 0x5588eaa6f758 <line:622:1, line:623:79> line:622:12 pthread_spin_init 'int (pthread_spinlock_t *, int)' extern
| |-ParmVarDecl 0x5588eaa6f590 <col:31, col:51> col:51 __lock 'pthread_spinlock_t *'
| |-ParmVarDecl 0x5588eaa6f610 <col:59, col:63> col:63 __pshared 'int'
| |-NoThrowAttr 0x5588eaa6f808 <line:623:22>
| `-NonNullAttr 0x5588eaa6f860 <col:63, col:77> 1
|-FunctionDecl 0x5588eaa6f9d8 <line:624:1, line:625:79> line:624:12 pthread_spin_destroy 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x5588eaa6f8a8 <col:34, col:54> col:54 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x5588eaa6fab0 <line:625:22>
| `-NonNullAttr 0x5588eaa6fb08 <col:63, col:77> 1
|-FunctionDecl 0x5588eaa6fc10 <line:626:1, line:627:68> line:626:12 pthread_spin_lock 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x5588eaa6fb58 <col:31, col:51> col:51 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x5588eaa6fcb8 <line:627:22>
| `-NonNullAttr 0x5588eaa6fd10 <col:52, col:66> 1
|-FunctionDecl 0x5588eaa6fe10 <line:628:1, line:629:68> line:628:12 pthread_spin_trylock 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x5588eaa6fd58 <col:34, col:54> col:54 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x5588eaa6feb8 <line:629:22>
| `-NonNullAttr 0x5588eaa6ff10 <col:52, col:66> 1
|-FunctionDecl 0x5588eaa70010 <line:630:1, line:631:68> line:630:12 pthread_spin_unlock 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x5588eaa6ff58 <col:33, col:53> col:53 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x5588eaa700b8 <line:631:22>
| `-NonNullAttr 0x5588eaa70110 <col:52, col:66> 1
|-FunctionDecl 0x5588eaa704e8 <line:632:1, line:635:79> line:632:12 pthread_barrier_init 'int (pthread_barrier_t *restrict, const pthread_barrierattr_t *restrict, unsigned int)' extern
| |-ParmVarDecl 0x5588eaa701f0 <col:34, col:64> col:64 __barrier 'pthread_barrier_t *restrict'
| |-ParmVarDecl 0x5588eaa70300 <line:633:6, line:634:6> col:6 __attr 'const pthread_barrierattr_t *restrict'
| |-ParmVarDecl 0x5588eaa70380 <col:14, col:27> col:27 __count 'unsigned int'
| |-NoThrowAttr 0x5588eaa705a0 <line:635:22>
| `-NonNullAttr 0x5588eaa705f8 <col:63, col:77> 1
|-FunctionDecl 0x5588eaa70778 <line:636:1, line:637:79> line:636:12 pthread_barrier_destroy 'int (pthread_barrier_t *)' extern
| |-ParmVarDecl 0x5588eaa70648 <col:37, col:56> col:56 __barrier 'pthread_barrier_t *'
| |-NoThrowAttr 0x5588eaa70820 <line:637:22>
| `-NonNullAttr 0x5588eaa70878 <col:63, col:77> 1
|-FunctionDecl 0x5588eaa70980 <line:638:1, line:639:68> line:638:12 pthread_barrier_wait 'int (pthread_barrier_t *)' extern
| |-ParmVarDecl 0x5588eaa708c8 <col:34, col:53> col:53 __barrier 'pthread_barrier_t *'
| |-NoThrowAttr 0x5588eaa70a28 <line:639:22>
| `-NonNullAttr 0x5588eaa70a80 <col:52, col:66> 1
|-FunctionDecl 0x5588eaa71c88 <line:640:1, line:641:79> line:640:12 pthread_barrierattr_init 'int (pthread_barrierattr_t *)' extern
| |-ParmVarDecl 0x5588eaa71b50 <col:38, col:61> col:61 __attr 'pthread_barrierattr_t *'
| |-NoThrowAttr 0x5588eaa71d30 <line:641:22>
| `-NonNullAttr 0x5588eaa71d88 <col:63, col:77> 1
|-FunctionDecl 0x5588eaa71e90 <line:642:1, line:643:79> line:642:12 pthread_barrierattr_destroy 'int (pthread_barrierattr_t *)' extern
| |-ParmVarDecl 0x5588eaa71dd8 <col:41, col:64> col:64 __attr 'pthread_barrierattr_t *'
| |-NoThrowAttr 0x5588eaa71f38 <line:643:22>
| `-NonNullAttr 0x5588eaa71f90 <col:63, col:77> 1
|-FunctionDecl 0x5588eaa721b8 <line:644:1, line:647:82> line:644:12 pthread_barrierattr_getpshared 'int (const pthread_barrierattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x5588eaa71fd8 <col:44, line:645:20> col:20 __attr 'const pthread_barrierattr_t *restrict'
| |-ParmVarDecl 0x5588eaa72058 <line:646:9, col:25> col:25 __pshared 'int *restrict'
| |-NoThrowAttr 0x5588eaa72268 <line:647:22>
| `-NonNullAttr 0x5588eaa722c0 <col:63, col:80> 1 2
|-FunctionDecl 0x5588eaa724c8 <line:648:1, line:650:79> line:648:12 pthread_barrierattr_setpshared 'int (pthread_barrierattr_t *, int)' extern
| |-ParmVarDecl 0x5588eaa72308 <col:44, col:67> col:67 __attr 'pthread_barrierattr_t *'
| |-ParmVarDecl 0x5588eaa72388 <line:649:9, col:13> col:13 __pshared 'int'
| |-NoThrowAttr 0x5588eaa72578 <line:650:22>
| `-NonNullAttr 0x5588eaa725d0 <col:63, col:77> 1
|-FunctionDecl 0x5588eaa72918 <line:651:1, line:653:79> line:651:12 pthread_key_create 'int (pthread_key_t *, void (*)(void *))' extern
| |-ParmVarDecl 0x5588eaa726b0 <col:32, col:47> col:47 __key 'pthread_key_t *'
| |-ParmVarDecl 0x5588eaa727d0 <line:652:11, col:43> col:18 __destr_function 'void (*)(void *)'
| |-NoThrowAttr 0x5588eaa729c8 <line:653:22>
| `-NonNullAttr 0x5588eaa72a20 <col:63, col:77> 1
|-FunctionDecl 0x5588eaa72b88 <line:654:1, col:92> col:12 pthread_key_delete 'int (pthread_key_t)' extern
| |-ParmVarDecl 0x5588eaa72a68 <col:32, col:46> col:46 __key 'pthread_key_t':'unsigned int'
| `-NoThrowAttr 0x5588eaa72c30 <col:69>
|-FunctionDecl 0x5588eaa72da8 <line:655:1, col:95> col:14 pthread_getspecific 'void *(pthread_key_t)' extern
| |-ParmVarDecl 0x5588eaa72c98 <col:35, col:49> col:49 __key 'pthread_key_t':'unsigned int'
| `-NoThrowAttr 0x5588eaa72e50 <col:72>
|-FunctionDecl 0x5588eaa73088 <line:656:1, line:657:67> line:656:12 pthread_setspecific 'int (pthread_key_t, const void *)' extern
| |-ParmVarDecl 0x5588eaa72eb8 <col:33, col:47> col:47 __key 'pthread_key_t':'unsigned int'
| |-ParmVarDecl 0x5588eaa72f68 <line:657:5, col:17> col:17 __pointer 'const void *'
| `-NoThrowAttr 0x5588eaa73138 <col:44>
|-FunctionDecl 0x5588eaa73358 <line:658:1, line:660:79> line:658:12 pthread_getcpuclockid 'int (pthread_t, __clockid_t *)' extern
| |-ParmVarDecl 0x5588eaa731a0 <col:35, col:45> col:45 __thread_id 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x5588eaa73218 <line:659:7, col:20> col:20 __clock_id '__clockid_t *'
| |-NoThrowAttr 0x5588eaa73408 <line:660:22>
| `-NonNullAttr 0x5588eaa73460 <col:63, col:77> 2
|-FunctionDecl 0x5588eaa738a8 <line:661:1, line:663:70> line:661:12 pthread_atfork 'int (void (*)(void), void (*)(void), void (*)(void))' extern
| |-ParmVarDecl 0x5588eaa73540 <col:28, col:51> col:35 __prepare 'void (*)(void)'
| |-ParmVarDecl 0x5588eaa73650 <line:662:7, col:29> col:14 __parent 'void (*)(void)'
| |-ParmVarDecl 0x5588eaa73760 <line:663:7, col:28> col:14 __child 'void (*)(void)'
| `-NoThrowAttr 0x5588eaa73960 <col:47>
|-FunctionDecl 0x5588eaa73af0 <line:665:1, col:20> col:8 used P0 'void *(void *)'
| `-ParmVarDecl 0x5588eaa739d0 <col:11, col:17> col:17 arg 'void *'
|-FunctionDecl 0x5588eaa73c48 <line:666:1, col:20> col:8 used P1 'void *(void *)'
| `-ParmVarDecl 0x5588eaa73bb0 <col:11, col:17> col:17 arg 'void *'
|-FunctionDecl 0x5588eaa73da0 <line:667:1, col:20> col:8 used P2 'void *(void *)'
| `-ParmVarDecl 0x5588eaa73d08 <col:11, col:17> col:17 arg 'void *'
|-FunctionDecl 0x5588eaa73e68 <line:668:1, col:12> col:6 fence 'void ()'
|-FunctionDecl 0x5588eaa73f28 <line:669:1, col:12> col:6 isync 'void ()'
|-FunctionDecl 0x5588eaa73fe8 <line:670:1, col:14> col:6 lwfence 'void ()'
|-VarDecl 0x5588eaa740a0 <line:671:1, col:5> col:5 used __unbuffered_cnt 'int'
|-VarDecl 0x5588eaa74120 prev 0x5588eaa740a0 <line:672:1, col:24> col:5 used __unbuffered_cnt 'int' cinit
| `-IntegerLiteral 0x5588eaa74188 <col:24> 'int' 0
|-VarDecl 0x5588eaa741c0 <line:673:1, col:5> col:5 used __unbuffered_p1_EAX 'int'
|-VarDecl 0x5588eaa74240 prev 0x5588eaa741c0 <line:674:1, col:27> col:5 used __unbuffered_p1_EAX 'int' cinit
| `-IntegerLiteral 0x5588eaa742a8 <col:27> 'int' 0
|-VarDecl 0x5588eaa742e0 <line:675:1, col:5> col:5 used __unbuffered_p1_EBX 'int'
|-VarDecl 0x5588eaa74360 prev 0x5588eaa742e0 <line:676:1, col:27> col:5 used __unbuffered_p1_EBX 'int' cinit
| `-IntegerLiteral 0x5588eaa743c8 <col:27> 'int' 0
|-VarDecl 0x5588eaa74400 <line:677:1, col:5> col:5 used __unbuffered_p2_EAX 'int'
|-VarDecl 0x5588eaa74480 prev 0x5588eaa74400 <line:678:1, col:27> col:5 used __unbuffered_p2_EAX 'int' cinit
| `-IntegerLiteral 0x5588eaa744e8 <col:27> 'int' 0
|-VarDecl 0x5588eaa74520 <line:679:1, col:5> col:5 used __unbuffered_p2_EBX 'int'
|-VarDecl 0x5588eaa745a0 prev 0x5588eaa74520 <line:680:1, col:27> col:5 used __unbuffered_p2_EBX 'int' cinit
| `-IntegerLiteral 0x5588eaa74608 <col:27> 'int' 0
|-VarDecl 0x5588eaa74640 <line:681:1, col:5> col:5 used a 'int'
|-VarDecl 0x5588eaa746c0 prev 0x5588eaa74640 <line:682:1, col:9> col:5 used a 'int' cinit
| `-IntegerLiteral 0x5588eaa74728 <col:9> 'int' 0
|-VarDecl 0x5588eaa74758 <line:683:1, col:7> col:7 used main$tmp_guard0 '_Bool'
|-VarDecl 0x5588eaa747d0 <line:684:1, col:7> col:7 used main$tmp_guard1 '_Bool'
|-VarDecl 0x5588eaa74850 <line:685:1, col:5> col:5 used x 'int'
|-VarDecl 0x5588eaa748d0 prev 0x5588eaa74850 <line:686:1, col:9> col:5 used x 'int' cinit
| `-IntegerLiteral 0x5588eaa74938 <col:9> 'int' 0
|-VarDecl 0x5588eaa74970 <line:687:1, col:5> col:5 used y 'int'
|-VarDecl 0x5588eaa749f0 prev 0x5588eaa74970 <line:688:1, col:9> col:5 used y 'int' cinit
| `-IntegerLiteral 0x5588eaa74a58 <col:9> 'int' 0
|-VarDecl 0x5588eaa74b00 <line:689:1, col:5> col:5 used z 'int'
|-VarDecl 0x5588eaa74b80 prev 0x5588eaa74b00 <line:690:1, col:9> col:5 used z 'int' cinit
| `-IntegerLiteral 0x5588eaa74be8 <col:9> 'int' 0
|-VarDecl 0x5588eaa74c18 <line:691:1, col:7> col:7 used z$flush_delayed '_Bool'
|-VarDecl 0x5588eaa74c98 <line:692:1, col:5> col:5 used z$mem_tmp 'int'
|-VarDecl 0x5588eaa74d10 <line:693:1, col:7> col:7 used z$r_buff0_thd0 '_Bool'
|-VarDecl 0x5588eaa74d88 <line:694:1, col:7> col:7 used z$r_buff0_thd1 '_Bool'
|-VarDecl 0x5588eaa74e00 <line:695:1, col:7> col:7 used z$r_buff0_thd2 '_Bool'
|-VarDecl 0x5588eaa74e78 <line:696:1, col:7> col:7 used z$r_buff0_thd3 '_Bool'
|-VarDecl 0x5588eaa74ef0 <line:697:1, col:7> col:7 used z$r_buff1_thd0 '_Bool'
|-VarDecl 0x5588eaa74f68 <line:698:1, col:7> col:7 used z$r_buff1_thd1 '_Bool'
|-VarDecl 0x5588eaa74fe0 <line:699:1, col:7> col:7 used z$r_buff1_thd2 '_Bool'
|-VarDecl 0x5588eaa75058 <line:700:1, col:7> col:7 used z$r_buff1_thd3 '_Bool'
|-VarDecl 0x5588eaa750d0 <line:701:1, col:7> col:7 z$read_delayed '_Bool'
|-VarDecl 0x5588eaa75150 <line:702:1, col:6> col:6 z$read_delayed_var 'int *'
|-VarDecl 0x5588eaa751d0 <line:703:1, col:5> col:5 used z$w_buff0 'int'
|-VarDecl 0x5588eaa75248 <line:704:1, col:7> col:7 used z$w_buff0_used '_Bool'
|-VarDecl 0x5588eaa752c8 <line:705:1, col:5> col:5 used z$w_buff1 'int'
|-VarDecl 0x5588eaa75340 <line:706:1, col:7> col:7 used z$w_buff1_used '_Bool'
|-VarDecl 0x5588eaa753b8 <line:707:1, col:7> col:7 used weak$$choice0 '_Bool'
|-VarDecl 0x5588eaa75430 <line:708:1, col:7> col:7 used weak$$choice2 '_Bool'
|-FunctionDecl 0x5588eaa75548 prev 0x5588eaa73af0 <line:709:1, line:723:1> line:709:8 used P0 'void *(void *)'
| |-ParmVarDecl 0x5588eaa754b0 <col:11, col:17> col:17 arg 'void *'
| `-CompoundStmt 0x5588eaa75b10 <line:710:1, line:723:1>
|   |-CallExpr 0x5588eaa75658 <line:711:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x5588eaa75640 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5588eaa755f0 <col:3> 'void ()' Function 0x5588eaa1ae40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x5588eaa756b8 <line:712:3, col:7> 'int' '='
|   | |-DeclRefExpr 0x5588eaa75678 <col:3> 'int' lvalue Var 0x5588eaa746c0 'a' 'int'
|   | `-IntegerLiteral 0x5588eaa75698 <col:7> 'int' 1
|   |-CallExpr 0x5588eaa75710 <line:713:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x5588eaa756f8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5588eaa756d8 <col:3> 'void ()' Function 0x5588eaa1af00 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x5588eaa75768 <line:714:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x5588eaa75750 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5588eaa75730 <col:3> 'void ()' Function 0x5588eaa1ae40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x5588eaa757c8 <line:715:3, col:7> 'int' '='
|   | |-DeclRefExpr 0x5588eaa75788 <col:3> 'int' lvalue Var 0x5588eaa748d0 'x' 'int'
|   | `-IntegerLiteral 0x5588eaa757a8 <col:7> 'int' 1
|   |-CallExpr 0x5588eaa75820 <line:716:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x5588eaa75808 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5588eaa757e8 <col:3> 'void ()' Function 0x5588eaa1af00 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x5588eaa75878 <line:717:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x5588eaa75860 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5588eaa75840 <col:3> 'void ()' Function 0x5588eaa1ae40 '__VERIFIER_atomic_begin' 'void ()'
|   |-CallExpr 0x5588eaa758d0 <line:718:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x5588eaa758b8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5588eaa75898 <col:3> 'void ()' Function 0x5588eaa1af00 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x5588eaa75928 <line:719:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x5588eaa75910 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5588eaa758f0 <col:3> 'void ()' Function 0x5588eaa1ae40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x5588eaa759e0 <line:720:3, col:41> 'int' '='
|   | |-DeclRefExpr 0x5588eaa75948 <col:3> 'int' lvalue Var 0x5588eaa74120 '__unbuffered_cnt' 'int'
|   | `-BinaryOperator 0x5588eaa759c0 <col:22, col:41> 'int' '+'
|   |   |-ImplicitCastExpr 0x5588eaa759a8 <col:22> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x5588eaa75968 <col:22> 'int' lvalue Var 0x5588eaa74120 '__unbuffered_cnt' 'int'
|   |   `-IntegerLiteral 0x5588eaa75988 <col:41> 'int' 1
|   |-CallExpr 0x5588eaa75a38 <line:721:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x5588eaa75a20 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5588eaa75a00 <col:3> 'void ()' Function 0x5588eaa1af00 '__VERIFIER_atomic_end' 'void ()'
|   `-ReturnStmt 0x5588eaa75ae8 <line:722:3, col:36>
|     `-CallExpr 0x5588eaa75ac8 <col:10, col:36> 'void *'
|       `-ImplicitCastExpr 0x5588eaa75ab0 <col:10> 'void *(*)(void)' <FunctionToPointerDecay>
|         `-DeclRefExpr 0x5588eaa75a58 <col:10> 'void *(void)' Function 0x5588eaa1a958 '__VERIFIER_nondet_pointer' 'void *(void)'
|-FunctionDecl 0x5588eaa75c30 prev 0x5588eaa73c48 <line:724:1, line:757:1> line:724:8 used P1 'void *(void *)'
| |-ParmVarDecl 0x5588eaa75b98 <col:11, col:17> col:17 arg 'void *'
| `-CompoundStmt 0x5588eaa78d68 <line:725:1, line:757:1>
|   |-CallExpr 0x5588eaa75d10 <line:726:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x5588eaa75cf8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5588eaa75cd8 <col:3> 'void ()' Function 0x5588eaa1ae40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x5588eaa75d70 <line:727:3, col:7> 'int' '='
|   | |-DeclRefExpr 0x5588eaa75d30 <col:3> 'int' lvalue Var 0x5588eaa748d0 'x' 'int'
|   | `-IntegerLiteral 0x5588eaa75d50 <col:7> 'int' 2
|   |-CallExpr 0x5588eaa75dc8 <line:728:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x5588eaa75db0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5588eaa75d90 <col:3> 'void ()' Function 0x5588eaa1af00 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x5588eaa75e20 <line:729:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x5588eaa75e08 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5588eaa75de8 <col:3> 'void ()' Function 0x5588eaa1ae40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x5588eaa75e80 <line:730:3, col:7> 'int' '='
|   | |-DeclRefExpr 0x5588eaa75e40 <col:3> 'int' lvalue Var 0x5588eaa749f0 'y' 'int'
|   | `-IntegerLiteral 0x5588eaa75e60 <col:7> 'int' 1
|   |-CallExpr 0x5588eaa75ed8 <line:731:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x5588eaa75ec0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5588eaa75ea0 <col:3> 'void ()' Function 0x5588eaa1af00 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x5588eaa75f30 <line:732:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x5588eaa75f18 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5588eaa75ef8 <col:3> 'void ()' Function 0x5588eaa1ae40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x5588eaa75fa8 <line:733:3, col:25> 'int' '='
|   | |-DeclRefExpr 0x5588eaa75f50 <col:3> 'int' lvalue Var 0x5588eaa74240 '__unbuffered_p1_EAX' 'int'
|   | `-ImplicitCastExpr 0x5588eaa75f90 <col:25> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x5588eaa75f70 <col:25> 'int' lvalue Var 0x5588eaa749f0 'y' 'int'
|   |-CallExpr 0x5588eaa76000 <line:734:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x5588eaa75fe8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5588eaa75fc8 <col:3> 'void ()' Function 0x5588eaa1af00 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x5588eaa76058 <line:735:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x5588eaa76040 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5588eaa76020 <col:3> 'void ()' Function 0x5588eaa1ae40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x5588eaa76108 <line:736:3, col:45> '_Bool' '='
|   | |-DeclRefExpr 0x5588eaa76078 <col:3> '_Bool' lvalue Var 0x5588eaa753b8 'weak$$choice0' '_Bool'
|   | `-ImplicitCastExpr 0x5588eaa760f0 <col:19, col:45> '_Bool' <PointerToBoolean>
|   |   `-CallExpr 0x5588eaa760d0 <col:19, col:45> 'void *'
|   |     `-ImplicitCastExpr 0x5588eaa760b8 <col:19> 'void *(*)(void)' <FunctionToPointerDecay>
|   |       `-DeclRefExpr 0x5588eaa76098 <col:19> 'void *(void)' Function 0x5588eaa1a958 '__VERIFIER_nondet_pointer' 'void *(void)'
|   |-BinaryOperator 0x5588eaa761b8 <line:737:3, col:45> '_Bool' '='
|   | |-DeclRefExpr 0x5588eaa76128 <col:3> '_Bool' lvalue Var 0x5588eaa75430 'weak$$choice2' '_Bool'
|   | `-ImplicitCastExpr 0x5588eaa761a0 <col:19, col:45> '_Bool' <PointerToBoolean>
|   |   `-CallExpr 0x5588eaa76180 <col:19, col:45> 'void *'
|   |     `-ImplicitCastExpr 0x5588eaa76168 <col:19> 'void *(*)(void)' <FunctionToPointerDecay>
|   |       `-DeclRefExpr 0x5588eaa76148 <col:19> 'void *(void)' Function 0x5588eaa1a958 '__VERIFIER_nondet_pointer' 'void *(void)'
|   |-BinaryOperator 0x5588eaa76230 <line:738:3, col:21> '_Bool' '='
|   | |-DeclRefExpr 0x5588eaa761d8 <col:3> '_Bool' lvalue Var 0x5588eaa74c18 'z$flush_delayed' '_Bool'
|   | `-ImplicitCastExpr 0x5588eaa76218 <col:21> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x5588eaa761f8 <col:21> '_Bool' lvalue Var 0x5588eaa75430 'weak$$choice2' '_Bool'
|   |-BinaryOperator 0x5588eaa762a8 <line:739:3, col:15> 'int' '='
|   | |-DeclRefExpr 0x5588eaa76250 <col:3> 'int' lvalue Var 0x5588eaa74c98 'z$mem_tmp' 'int'
|   | `-ImplicitCastExpr 0x5588eaa76290 <col:15> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x5588eaa76270 <col:15> 'int' lvalue Var 0x5588eaa74b80 'z' 'int'
|   |-BinaryOperator 0x5588eaa766e0 <line:740:3, col:162> 'int' '='
|   | |-DeclRefExpr 0x5588eaa762c8 <col:3> 'int' lvalue Var 0x5588eaa74b80 'z' 'int'
|   | `-ConditionalOperator 0x5588eaa766b0 <col:7, col:162> 'int'
|   |   |-BinaryOperator 0x5588eaa764d8 <col:7, col:84> 'int' '||'
|   |   | |-BinaryOperator 0x5588eaa763f8 <col:7, col:46> 'int' '||'
|   |   | | |-UnaryOperator 0x5588eaa76320 <col:7, col:8> 'int' prefix '!' cannot overflow
|   |   | | | `-ImplicitCastExpr 0x5588eaa76308 <col:8> '_Bool' <LValueToRValue>
|   |   | | |   `-DeclRefExpr 0x5588eaa762e8 <col:8> '_Bool' lvalue Var 0x5588eaa75248 'z$w_buff0_used' '_Bool'
|   |   | | `-BinaryOperator 0x5588eaa763d8 <col:26, col:46> 'int' '&&'
|   |   | |   |-UnaryOperator 0x5588eaa76370 <col:26, col:27> 'int' prefix '!' cannot overflow
|   |   | |   | `-ImplicitCastExpr 0x5588eaa76358 <col:27> '_Bool' <LValueToRValue>
|   |   | |   |   `-DeclRefExpr 0x5588eaa76338 <col:27> '_Bool' lvalue Var 0x5588eaa74e00 'z$r_buff0_thd2' '_Bool'
|   |   | |   `-UnaryOperator 0x5588eaa763c0 <col:45, col:46> 'int' prefix '!' cannot overflow
|   |   | |     `-ImplicitCastExpr 0x5588eaa763a8 <col:46> '_Bool' <LValueToRValue>
|   |   | |       `-DeclRefExpr 0x5588eaa76388 <col:46> '_Bool' lvalue Var 0x5588eaa75340 'z$w_buff1_used' '_Bool'
|   |   | `-BinaryOperator 0x5588eaa764b8 <col:64, col:84> 'int' '&&'
|   |   |   |-UnaryOperator 0x5588eaa76450 <col:64, col:65> 'int' prefix '!' cannot overflow
|   |   |   | `-ImplicitCastExpr 0x5588eaa76438 <col:65> '_Bool' <LValueToRValue>
|   |   |   |   `-DeclRefExpr 0x5588eaa76418 <col:65> '_Bool' lvalue Var 0x5588eaa74e00 'z$r_buff0_thd2' '_Bool'
|   |   |   `-UnaryOperator 0x5588eaa764a0 <col:83, col:84> 'int' prefix '!' cannot overflow
|   |   |     `-ImplicitCastExpr 0x5588eaa76488 <col:84> '_Bool' <LValueToRValue>
|   |   |       `-DeclRefExpr 0x5588eaa76468 <col:84> '_Bool' lvalue Var 0x5588eaa74fe0 'z$r_buff1_thd2' '_Bool'
|   |   |-ImplicitCastExpr 0x5588eaa76698 <col:101> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x5588eaa764f8 <col:101> 'int' lvalue Var 0x5588eaa74b80 'z' 'int'
|   |   `-ParenExpr 0x5588eaa76678 <col:105, col:162> 'int'
|   |     `-ConditionalOperator 0x5588eaa76648 <col:106, col:153> 'int'
|   |       |-BinaryOperator 0x5588eaa765b8 <col:106, col:124> 'int' '&&'
|   |       | |-ImplicitCastExpr 0x5588eaa76570 <col:106> 'int' <IntegralCast>
|   |       | | `-ImplicitCastExpr 0x5588eaa76558 <col:106> '_Bool' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x5588eaa76518 <col:106> '_Bool' lvalue Var 0x5588eaa75248 'z$w_buff0_used' '_Bool'
|   |       | `-ImplicitCastExpr 0x5588eaa765a0 <col:124> 'int' <IntegralCast>
|   |       |   `-ImplicitCastExpr 0x5588eaa76588 <col:124> '_Bool' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x5588eaa76538 <col:124> '_Bool' lvalue Var 0x5588eaa74e00 'z$r_buff0_thd2' '_Bool'
|   |       |-ImplicitCastExpr 0x5588eaa76618 <col:141> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x5588eaa765d8 <col:141> 'int' lvalue Var 0x5588eaa751d0 'z$w_buff0' 'int'
|   |       `-ImplicitCastExpr 0x5588eaa76630 <col:153> 'int' <LValueToRValue>
|   |         `-DeclRefExpr 0x5588eaa765f8 <col:153> 'int' lvalue Var 0x5588eaa752c8 'z$w_buff1' 'int'
|   |-BinaryOperator 0x5588eaa76c00 <line:741:3, col:208> 'int' '='
|   | |-DeclRefExpr 0x5588eaa76700 <col:3> 'int' lvalue Var 0x5588eaa751d0 'z$w_buff0' 'int'
|   | `-ConditionalOperator 0x5588eaa76bd0 <col:15, col:208> 'int'
|   |   |-ImplicitCastExpr 0x5588eaa76ba0 <col:15> 'int' <IntegralCast>
|   |   | `-ImplicitCastExpr 0x5588eaa76b88 <col:15> '_Bool' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x5588eaa76720 <col:15> '_Bool' lvalue Var 0x5588eaa75430 'weak$$choice2' '_Bool'
|   |   |-ImplicitCastExpr 0x5588eaa76bb8 <col:31> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x5588eaa76740 <col:31> 'int' lvalue Var 0x5588eaa751d0 'z$w_buff0' 'int'
|   |   `-ParenExpr 0x5588eaa76b68 <col:43, col:208> 'int'
|   |     `-ConditionalOperator 0x5588eaa76b38 <col:44, col:207> 'int'
|   |       |-BinaryOperator 0x5588eaa76950 <col:44, col:121> 'int' '||'
|   |       | |-BinaryOperator 0x5588eaa76870 <col:44, col:83> 'int' '||'
|   |       | | |-UnaryOperator 0x5588eaa76798 <col:44, col:45> 'int' prefix '!' cannot overflow
|   |       | | | `-ImplicitCastExpr 0x5588eaa76780 <col:45> '_Bool' <LValueToRValue>
|   |       | | |   `-DeclRefExpr 0x5588eaa76760 <col:45> '_Bool' lvalue Var 0x5588eaa75248 'z$w_buff0_used' '_Bool'
|   |       | | `-BinaryOperator 0x5588eaa76850 <col:63, col:83> 'int' '&&'
|   |       | |   |-UnaryOperator 0x5588eaa767e8 <col:63, col:64> 'int' prefix '!' cannot overflow
|   |       | |   | `-ImplicitCastExpr 0x5588eaa767d0 <col:64> '_Bool' <LValueToRValue>
|   |       | |   |   `-DeclRefExpr 0x5588eaa767b0 <col:64> '_Bool' lvalue Var 0x5588eaa74e00 'z$r_buff0_thd2' '_Bool'
|   |       | |   `-UnaryOperator 0x5588eaa76838 <col:82, col:83> 'int' prefix '!' cannot overflow
|   |       | |     `-ImplicitCastExpr 0x5588eaa76820 <col:83> '_Bool' <LValueToRValue>
|   |       | |       `-DeclRefExpr 0x5588eaa76800 <col:83> '_Bool' lvalue Var 0x5588eaa75340 'z$w_buff1_used' '_Bool'
|   |       | `-BinaryOperator 0x5588eaa76930 <col:101, col:121> 'int' '&&'
|   |       |   |-UnaryOperator 0x5588eaa768c8 <col:101, col:102> 'int' prefix '!' cannot overflow
|   |       |   | `-ImplicitCastExpr 0x5588eaa768b0 <col:102> '_Bool' <LValueToRValue>
|   |       |   |   `-DeclRefExpr 0x5588eaa76890 <col:102> '_Bool' lvalue Var 0x5588eaa74e00 'z$r_buff0_thd2' '_Bool'
|   |       |   `-UnaryOperator 0x5588eaa76918 <col:120, col:121> 'int' prefix '!' cannot overflow
|   |       |     `-ImplicitCastExpr 0x5588eaa76900 <col:121> '_Bool' <LValueToRValue>
|   |       |       `-DeclRefExpr 0x5588eaa768e0 <col:121> '_Bool' lvalue Var 0x5588eaa74fe0 'z$r_buff1_thd2' '_Bool'
|   |       |-ImplicitCastExpr 0x5588eaa76b20 <col:138> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x5588eaa76970 <col:138> 'int' lvalue Var 0x5588eaa751d0 'z$w_buff0' 'int'
|   |       `-ParenExpr 0x5588eaa76af0 <col:150, col:207> 'int'
|   |         `-ConditionalOperator 0x5588eaa76ac0 <col:151, col:198> 'int'
|   |           |-BinaryOperator 0x5588eaa76a30 <col:151, col:169> 'int' '&&'
|   |           | |-ImplicitCastExpr 0x5588eaa769e8 <col:151> 'int' <IntegralCast>
|   |           | | `-ImplicitCastExpr 0x5588eaa769d0 <col:151> '_Bool' <LValueToRValue>
|   |           | |   `-DeclRefExpr 0x5588eaa76990 <col:151> '_Bool' lvalue Var 0x5588eaa75248 'z$w_buff0_used' '_Bool'
|   |           | `-ImplicitCastExpr 0x5588eaa76a18 <col:169> 'int' <IntegralCast>
|   |           |   `-ImplicitCastExpr 0x5588eaa76a00 <col:169> '_Bool' <LValueToRValue>
|   |           |     `-DeclRefExpr 0x5588eaa769b0 <col:169> '_Bool' lvalue Var 0x5588eaa74e00 'z$r_buff0_thd2' '_Bool'
|   |           |-ImplicitCastExpr 0x5588eaa76a90 <col:186> 'int' <LValueToRValue>
|   |           | `-DeclRefExpr 0x5588eaa76a50 <col:186> 'int' lvalue Var 0x5588eaa751d0 'z$w_buff0' 'int'
|   |           `-ImplicitCastExpr 0x5588eaa76aa8 <col:198> 'int' <LValueToRValue>
|   |             `-DeclRefExpr 0x5588eaa76a70 <col:198> 'int' lvalue Var 0x5588eaa751d0 'z$w_buff0' 'int'
|   |-BinaryOperator 0x5588eaa77110 <line:742:3, col:208> 'int' '='
|   | |-DeclRefExpr 0x5588eaa76c20 <col:3> 'int' lvalue Var 0x5588eaa752c8 'z$w_buff1' 'int'
|   | `-ConditionalOperator 0x5588eaa770e0 <col:15, col:208> 'int'
|   |   |-ImplicitCastExpr 0x5588eaa770b0 <col:15> 'int' <IntegralCast>
|   |   | `-ImplicitCastExpr 0x5588eaa77098 <col:15> '_Bool' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x5588eaa76c40 <col:15> '_Bool' lvalue Var 0x5588eaa75430 'weak$$choice2' '_Bool'
|   |   |-ImplicitCastExpr 0x5588eaa770c8 <col:31> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x5588eaa76c60 <col:31> 'int' lvalue Var 0x5588eaa752c8 'z$w_buff1' 'int'
|   |   `-ParenExpr 0x5588eaa77078 <col:43, col:208> 'int'
|   |     `-ConditionalOperator 0x5588eaa77048 <col:44, col:207> 'int'
|   |       |-BinaryOperator 0x5588eaa76e70 <col:44, col:121> 'int' '||'
|   |       | |-BinaryOperator 0x5588eaa76d90 <col:44, col:83> 'int' '||'
|   |       | | |-UnaryOperator 0x5588eaa76cb8 <col:44, col:45> 'int' prefix '!' cannot overflow
|   |       | | | `-ImplicitCastExpr 0x5588eaa76ca0 <col:45> '_Bool' <LValueToRValue>
|   |       | | |   `-DeclRefExpr 0x5588eaa76c80 <col:45> '_Bool' lvalue Var 0x5588eaa75248 'z$w_buff0_used' '_Bool'
|   |       | | `-BinaryOperator 0x5588eaa76d70 <col:63, col:83> 'int' '&&'
|   |       | |   |-UnaryOperator 0x5588eaa76d08 <col:63, col:64> 'int' prefix '!' cannot overflow
|   |       | |   | `-ImplicitCastExpr 0x5588eaa76cf0 <col:64> '_Bool' <LValueToRValue>
|   |       | |   |   `-DeclRefExpr 0x5588eaa76cd0 <col:64> '_Bool' lvalue Var 0x5588eaa74e00 'z$r_buff0_thd2' '_Bool'
|   |       | |   `-UnaryOperator 0x5588eaa76d58 <col:82, col:83> 'int' prefix '!' cannot overflow
|   |       | |     `-ImplicitCastExpr 0x5588eaa76d40 <col:83> '_Bool' <LValueToRValue>
|   |       | |       `-DeclRefExpr 0x5588eaa76d20 <col:83> '_Bool' lvalue Var 0x5588eaa75340 'z$w_buff1_used' '_Bool'
|   |       | `-BinaryOperator 0x5588eaa76e50 <col:101, col:121> 'int' '&&'
|   |       |   |-UnaryOperator 0x5588eaa76de8 <col:101, col:102> 'int' prefix '!' cannot overflow
|   |       |   | `-ImplicitCastExpr 0x5588eaa76dd0 <col:102> '_Bool' <LValueToRValue>
|   |       |   |   `-DeclRefExpr 0x5588eaa76db0 <col:102> '_Bool' lvalue Var 0x5588eaa74e00 'z$r_buff0_thd2' '_Bool'
|   |       |   `-UnaryOperator 0x5588eaa76e38 <col:120, col:121> 'int' prefix '!' cannot overflow
|   |       |     `-ImplicitCastExpr 0x5588eaa76e20 <col:121> '_Bool' <LValueToRValue>
|   |       |       `-DeclRefExpr 0x5588eaa76e00 <col:121> '_Bool' lvalue Var 0x5588eaa74fe0 'z$r_buff1_thd2' '_Bool'
|   |       |-ImplicitCastExpr 0x5588eaa77030 <col:138> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x5588eaa76e90 <col:138> 'int' lvalue Var 0x5588eaa752c8 'z$w_buff1' 'int'
|   |       `-ParenExpr 0x5588eaa77010 <col:150, col:207> 'int'
|   |         `-ConditionalOperator 0x5588eaa76fe0 <col:151, col:198> 'int'
|   |           |-BinaryOperator 0x5588eaa76f50 <col:151, col:169> 'int' '&&'
|   |           | |-ImplicitCastExpr 0x5588eaa76f08 <col:151> 'int' <IntegralCast>
|   |           | | `-ImplicitCastExpr 0x5588eaa76ef0 <col:151> '_Bool' <LValueToRValue>
|   |           | |   `-DeclRefExpr 0x5588eaa76eb0 <col:151> '_Bool' lvalue Var 0x5588eaa75248 'z$w_buff0_used' '_Bool'
|   |           | `-ImplicitCastExpr 0x5588eaa76f38 <col:169> 'int' <IntegralCast>
|   |           |   `-ImplicitCastExpr 0x5588eaa76f20 <col:169> '_Bool' <LValueToRValue>
|   |           |     `-DeclRefExpr 0x5588eaa76ed0 <col:169> '_Bool' lvalue Var 0x5588eaa74e00 'z$r_buff0_thd2' '_Bool'
|   |           |-ImplicitCastExpr 0x5588eaa76fb0 <col:186> 'int' <LValueToRValue>
|   |           | `-DeclRefExpr 0x5588eaa76f70 <col:186> 'int' lvalue Var 0x5588eaa752c8 'z$w_buff1' 'int'
|   |           `-ImplicitCastExpr 0x5588eaa76fc8 <col:198> 'int' <LValueToRValue>
|   |             `-DeclRefExpr 0x5588eaa76f90 <col:198> 'int' lvalue Var 0x5588eaa752c8 'z$w_buff1' 'int'
|   |-BinaryOperator 0x5588eaa776b8 <line:743:3, col:227> '_Bool' '='
|   | |-DeclRefExpr 0x5588eaa77130 <col:3> '_Bool' lvalue Var 0x5588eaa75248 'z$w_buff0_used' '_Bool'
|   | `-ImplicitCastExpr 0x5588eaa776a0 <col:20, col:227> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x5588eaa77670 <col:20, col:227> 'int'
|   |     |-ImplicitCastExpr 0x5588eaa77628 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x5588eaa77610 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x5588eaa77150 <col:20> '_Bool' lvalue Var 0x5588eaa75430 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x5588eaa77658 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x5588eaa77640 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x5588eaa77170 <col:36> '_Bool' lvalue Var 0x5588eaa75248 'z$w_buff0_used' '_Bool'
|   |     `-ParenExpr 0x5588eaa775f0 <col:53, col:227> 'int'
|   |       `-ConditionalOperator 0x5588eaa775c0 <col:54, col:226> 'int'
|   |         |-BinaryOperator 0x5588eaa77380 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x5588eaa772a0 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x5588eaa771c8 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x5588eaa771b0 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x5588eaa77190 <col:55> '_Bool' lvalue Var 0x5588eaa75248 'z$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x5588eaa77280 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x5588eaa77218 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x5588eaa77200 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x5588eaa771e0 <col:74> '_Bool' lvalue Var 0x5588eaa74e00 'z$r_buff0_thd2' '_Bool'
|   |         | |   `-UnaryOperator 0x5588eaa77268 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x5588eaa77250 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x5588eaa77230 <col:93> '_Bool' lvalue Var 0x5588eaa75340 'z$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x5588eaa77360 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x5588eaa772f8 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x5588eaa772e0 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x5588eaa772c0 <col:112> '_Bool' lvalue Var 0x5588eaa74e00 'z$r_buff0_thd2' '_Bool'
|   |         |   `-UnaryOperator 0x5588eaa77348 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x5588eaa77330 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x5588eaa77310 <col:131> '_Bool' lvalue Var 0x5588eaa74fe0 'z$r_buff1_thd2' '_Bool'
|   |         |-ImplicitCastExpr 0x5588eaa775a8 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x5588eaa77590 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x5588eaa773a0 <col:148> '_Bool' lvalue Var 0x5588eaa75248 'z$w_buff0_used' '_Bool'
|   |         `-ParenExpr 0x5588eaa77570 <col:165, col:226> 'int'
|   |           `-ConditionalOperator 0x5588eaa77540 <col:166, col:212> 'int'
|   |             |-BinaryOperator 0x5588eaa77460 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x5588eaa77418 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x5588eaa77400 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x5588eaa773c0 <col:166> '_Bool' lvalue Var 0x5588eaa75248 'z$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x5588eaa77448 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x5588eaa77430 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x5588eaa773e0 <col:184> '_Bool' lvalue Var 0x5588eaa74e00 'z$r_buff0_thd2' '_Bool'
|   |             |-ImplicitCastExpr 0x5588eaa774f8 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x5588eaa774b0 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x5588eaa77480 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x5588eaa77528 <col:212> 'int' <IntegralCast>
|   |               `-ImplicitCastExpr 0x5588eaa77510 <col:212> '_Bool' <LValueToRValue>
|   |                 `-DeclRefExpr 0x5588eaa774d8 <col:212> '_Bool' lvalue Var 0x5588eaa75248 'z$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x5588eaa77ca8 <line:744:3, col:221> '_Bool' '='
|   | |-DeclRefExpr 0x5588eaa776d8 <col:3> '_Bool' lvalue Var 0x5588eaa75340 'z$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x5588eaa77c90 <col:20, col:221> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x5588eaa77c60 <col:20, col:221> 'int'
|   |     |-ImplicitCastExpr 0x5588eaa77c18 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x5588eaa77c00 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x5588eaa776f8 <col:20> '_Bool' lvalue Var 0x5588eaa75430 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x5588eaa77c48 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x5588eaa77c30 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x5588eaa77718 <col:36> '_Bool' lvalue Var 0x5588eaa75340 'z$w_buff1_used' '_Bool'
|   |     `-ParenExpr 0x5588eaa77be0 <col:53, col:221> 'int'
|   |       `-ConditionalOperator 0x5588eaa77bb0 <col:54, col:220> 'int'
|   |         |-BinaryOperator 0x5588eaa77928 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x5588eaa77848 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x5588eaa77770 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x5588eaa77758 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x5588eaa77738 <col:55> '_Bool' lvalue Var 0x5588eaa75248 'z$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x5588eaa77828 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x5588eaa777c0 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x5588eaa777a8 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x5588eaa77788 <col:74> '_Bool' lvalue Var 0x5588eaa74e00 'z$r_buff0_thd2' '_Bool'
|   |         | |   `-UnaryOperator 0x5588eaa77810 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x5588eaa777f8 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x5588eaa777d8 <col:93> '_Bool' lvalue Var 0x5588eaa75340 'z$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x5588eaa77908 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x5588eaa778a0 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x5588eaa77888 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x5588eaa77868 <col:112> '_Bool' lvalue Var 0x5588eaa74e00 'z$r_buff0_thd2' '_Bool'
|   |         |   `-UnaryOperator 0x5588eaa778f0 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x5588eaa778d8 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x5588eaa778b8 <col:131> '_Bool' lvalue Var 0x5588eaa74fe0 'z$r_buff1_thd2' '_Bool'
|   |         |-ImplicitCastExpr 0x5588eaa77b98 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x5588eaa77b80 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x5588eaa77948 <col:148> '_Bool' lvalue Var 0x5588eaa75340 'z$w_buff1_used' '_Bool'
|   |         `-ParenExpr 0x5588eaa77b60 <col:165, col:220> 'int'
|   |           `-ConditionalOperator 0x5588eaa77b30 <col:166, col:219> 'int'
|   |             |-BinaryOperator 0x5588eaa77a08 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x5588eaa779c0 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x5588eaa779a8 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x5588eaa77968 <col:166> '_Bool' lvalue Var 0x5588eaa75248 'z$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x5588eaa779f0 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x5588eaa779d8 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x5588eaa77988 <col:184> '_Bool' lvalue Var 0x5588eaa74e00 'z$r_buff0_thd2' '_Bool'
|   |             |-ImplicitCastExpr 0x5588eaa77ad8 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x5588eaa77a58 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x5588eaa77a28 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x5588eaa77af0 <col:212, col:219> 'int' <IntegralCast>
|   |               `-CStyleCastExpr 0x5588eaa77ab0 <col:212, col:219> '_Bool' <IntegralToBoolean>
|   |                 `-IntegerLiteral 0x5588eaa77a80 <col:219> 'int' 0
|   |-BinaryOperator 0x5588eaa78250 <line:745:3, col:227> '_Bool' '='
|   | |-DeclRefExpr 0x5588eaa77cc8 <col:3> '_Bool' lvalue Var 0x5588eaa74e00 'z$r_buff0_thd2' '_Bool'
|   | `-ImplicitCastExpr 0x5588eaa78238 <col:20, col:227> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x5588eaa78208 <col:20, col:227> 'int'
|   |     |-ImplicitCastExpr 0x5588eaa781c0 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x5588eaa781a8 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x5588eaa77ce8 <col:20> '_Bool' lvalue Var 0x5588eaa75430 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x5588eaa781f0 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x5588eaa781d8 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x5588eaa77d08 <col:36> '_Bool' lvalue Var 0x5588eaa74e00 'z$r_buff0_thd2' '_Bool'
|   |     `-ParenExpr 0x5588eaa78188 <col:53, col:227> 'int'
|   |       `-ConditionalOperator 0x5588eaa78158 <col:54, col:226> 'int'
|   |         |-BinaryOperator 0x5588eaa77f18 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x5588eaa77e38 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x5588eaa77d60 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x5588eaa77d48 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x5588eaa77d28 <col:55> '_Bool' lvalue Var 0x5588eaa75248 'z$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x5588eaa77e18 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x5588eaa77db0 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x5588eaa77d98 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x5588eaa77d78 <col:74> '_Bool' lvalue Var 0x5588eaa74e00 'z$r_buff0_thd2' '_Bool'
|   |         | |   `-UnaryOperator 0x5588eaa77e00 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x5588eaa77de8 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x5588eaa77dc8 <col:93> '_Bool' lvalue Var 0x5588eaa75340 'z$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x5588eaa77ef8 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x5588eaa77e90 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x5588eaa77e78 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x5588eaa77e58 <col:112> '_Bool' lvalue Var 0x5588eaa74e00 'z$r_buff0_thd2' '_Bool'
|   |         |   `-UnaryOperator 0x5588eaa77ee0 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x5588eaa77ec8 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x5588eaa77ea8 <col:131> '_Bool' lvalue Var 0x5588eaa74fe0 'z$r_buff1_thd2' '_Bool'
|   |         |-ImplicitCastExpr 0x5588eaa78140 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x5588eaa78128 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x5588eaa77f38 <col:148> '_Bool' lvalue Var 0x5588eaa74e00 'z$r_buff0_thd2' '_Bool'
|   |         `-ParenExpr 0x5588eaa78108 <col:165, col:226> 'int'
|   |           `-ConditionalOperator 0x5588eaa780d8 <col:166, col:212> 'int'
|   |             |-BinaryOperator 0x5588eaa77ff8 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x5588eaa77fb0 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x5588eaa77f98 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x5588eaa77f58 <col:166> '_Bool' lvalue Var 0x5588eaa75248 'z$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x5588eaa77fe0 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x5588eaa77fc8 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x5588eaa77f78 <col:184> '_Bool' lvalue Var 0x5588eaa74e00 'z$r_buff0_thd2' '_Bool'
|   |             |-ImplicitCastExpr 0x5588eaa78090 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x5588eaa78048 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x5588eaa78018 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x5588eaa780c0 <col:212> 'int' <IntegralCast>
|   |               `-ImplicitCastExpr 0x5588eaa780a8 <col:212> '_Bool' <LValueToRValue>
|   |                 `-DeclRefExpr 0x5588eaa78070 <col:212> '_Bool' lvalue Var 0x5588eaa74e00 'z$r_buff0_thd2' '_Bool'
|   |-BinaryOperator 0x5588eaa78818 <line:746:3, col:221> '_Bool' '='
|   | |-DeclRefExpr 0x5588eaa78270 <col:3> '_Bool' lvalue Var 0x5588eaa74fe0 'z$r_buff1_thd2' '_Bool'
|   | `-ImplicitCastExpr 0x5588eaa78800 <col:20, col:221> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x5588eaa787d0 <col:20, col:221> 'int'
|   |     |-ImplicitCastExpr 0x5588eaa78788 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x5588eaa78770 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x5588eaa78290 <col:20> '_Bool' lvalue Var 0x5588eaa75430 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x5588eaa787b8 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x5588eaa787a0 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x5588eaa782b0 <col:36> '_Bool' lvalue Var 0x5588eaa74fe0 'z$r_buff1_thd2' '_Bool'
|   |     `-ParenExpr 0x5588eaa78750 <col:53, col:221> 'int'
|   |       `-ConditionalOperator 0x5588eaa78720 <col:54, col:220> 'int'
|   |         |-BinaryOperator 0x5588eaa784c0 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x5588eaa783e0 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x5588eaa78308 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x5588eaa782f0 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x5588eaa782d0 <col:55> '_Bool' lvalue Var 0x5588eaa75248 'z$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x5588eaa783c0 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x5588eaa78358 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x5588eaa78340 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x5588eaa78320 <col:74> '_Bool' lvalue Var 0x5588eaa74e00 'z$r_buff0_thd2' '_Bool'
|   |         | |   `-UnaryOperator 0x5588eaa783a8 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x5588eaa78390 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x5588eaa78370 <col:93> '_Bool' lvalue Var 0x5588eaa75340 'z$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x5588eaa784a0 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x5588eaa78438 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x5588eaa78420 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x5588eaa78400 <col:112> '_Bool' lvalue Var 0x5588eaa74e00 'z$r_buff0_thd2' '_Bool'
|   |         |   `-UnaryOperator 0x5588eaa78488 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x5588eaa78470 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x5588eaa78450 <col:131> '_Bool' lvalue Var 0x5588eaa74fe0 'z$r_buff1_thd2' '_Bool'
|   |         |-ImplicitCastExpr 0x5588eaa78708 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x5588eaa786f0 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x5588eaa784e0 <col:148> '_Bool' lvalue Var 0x5588eaa74fe0 'z$r_buff1_thd2' '_Bool'
|   |         `-ParenExpr 0x5588eaa786d0 <col:165, col:220> 'int'
|   |           `-ConditionalOperator 0x5588eaa786a0 <col:166, col:219> 'int'
|   |             |-BinaryOperator 0x5588eaa785a0 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x5588eaa78558 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x5588eaa78540 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x5588eaa78500 <col:166> '_Bool' lvalue Var 0x5588eaa75248 'z$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x5588eaa78588 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x5588eaa78570 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x5588eaa78520 <col:184> '_Bool' lvalue Var 0x5588eaa74e00 'z$r_buff0_thd2' '_Bool'
|   |             |-ImplicitCastExpr 0x5588eaa78670 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x5588eaa785f0 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x5588eaa785c0 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x5588eaa78688 <col:212, col:219> 'int' <IntegralCast>
|   |               `-CStyleCastExpr 0x5588eaa78648 <col:212, col:219> '_Bool' <IntegralToBoolean>
|   |                 `-IntegerLiteral 0x5588eaa78618 <col:219> 'int' 0
|   |-BinaryOperator 0x5588eaa78890 <line:747:3, col:25> 'int' '='
|   | |-DeclRefExpr 0x5588eaa78838 <col:3> 'int' lvalue Var 0x5588eaa74360 '__unbuffered_p1_EBX' 'int'
|   | `-ImplicitCastExpr 0x5588eaa78878 <col:25> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x5588eaa78858 <col:25> 'int' lvalue Var 0x5588eaa74b80 'z' 'int'
|   |-BinaryOperator 0x5588eaa789c0 <line:748:3, col:37> 'int' '='
|   | |-DeclRefExpr 0x5588eaa788b0 <col:3> 'int' lvalue Var 0x5588eaa74b80 'z' 'int'
|   | `-ConditionalOperator 0x5588eaa78990 <col:7, col:37> 'int'
|   |   |-ImplicitCastExpr 0x5588eaa78948 <col:7> 'int' <IntegralCast>
|   |   | `-ImplicitCastExpr 0x5588eaa78930 <col:7> '_Bool' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x5588eaa788d0 <col:7> '_Bool' lvalue Var 0x5588eaa74c18 'z$flush_delayed' '_Bool'
|   |   |-ImplicitCastExpr 0x5588eaa78960 <col:25> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x5588eaa788f0 <col:25> 'int' lvalue Var 0x5588eaa74c98 'z$mem_tmp' 'int'
|   |   `-ImplicitCastExpr 0x5588eaa78978 <col:37> 'int' <LValueToRValue>
|   |     `-DeclRefExpr 0x5588eaa78910 <col:37> 'int' lvalue Var 0x5588eaa74b80 'z' 'int'
|   |-BinaryOperator 0x5588eaa78a58 <line:749:3, col:28> '_Bool' '='
|   | |-DeclRefExpr 0x5588eaa789e0 <col:3> '_Bool' lvalue Var 0x5588eaa74c18 'z$flush_delayed' '_Bool'
|   | `-CStyleCastExpr 0x5588eaa78a30 <col:21, col:28> '_Bool' <IntegralToBoolean>
|   |   `-IntegerLiteral 0x5588eaa78a00 <col:28> 'int' 0
|   |-CallExpr 0x5588eaa78ab0 <line:750:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x5588eaa78a98 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5588eaa78a78 <col:3> 'void ()' Function 0x5588eaa1af00 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x5588eaa78b08 <line:751:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x5588eaa78af0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5588eaa78ad0 <col:3> 'void ()' Function 0x5588eaa1ae40 '__VERIFIER_atomic_begin' 'void ()'
|   |-CallExpr 0x5588eaa78b78 <line:752:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x5588eaa78b60 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5588eaa78b40 <col:3> 'void ()' Function 0x5588eaa1af00 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x5588eaa78bd0 <line:753:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x5588eaa78bb8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5588eaa78b98 <col:3> 'void ()' Function 0x5588eaa1ae40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x5588eaa78c88 <line:754:3, col:41> 'int' '='
|   | |-DeclRefExpr 0x5588eaa78bf0 <col:3> 'int' lvalue Var 0x5588eaa74120 '__unbuffered_cnt' 'int'
|   | `-BinaryOperator 0x5588eaa78c68 <col:22, col:41> 'int' '+'
|   |   |-ImplicitCastExpr 0x5588eaa78c50 <col:22> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x5588eaa78c10 <col:22> 'int' lvalue Var 0x5588eaa74120 '__unbuffered_cnt' 'int'
|   |   `-IntegerLiteral 0x5588eaa78c30 <col:41> 'int' 1
|   |-CallExpr 0x5588eaa78ce0 <line:755:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x5588eaa78cc8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5588eaa78ca8 <col:3> 'void ()' Function 0x5588eaa1af00 '__VERIFIER_atomic_end' 'void ()'
|   `-ReturnStmt 0x5588eaa78d58 <line:756:3, col:36>
|     `-CallExpr 0x5588eaa78d38 <col:10, col:36> 'void *'
|       `-ImplicitCastExpr 0x5588eaa78d20 <col:10> 'void *(*)(void)' <FunctionToPointerDecay>
|         `-DeclRefExpr 0x5588eaa78d00 <col:10> 'void *(void)' Function 0x5588eaa1a958 '__VERIFIER_nondet_pointer' 'void *(void)'
|-FunctionDecl 0x5588eaa78f20 prev 0x5588eaa73da0 <line:758:1, line:802:1> line:758:8 used P2 'void *(void *)'
| |-ParmVarDecl 0x5588eaa78e88 <col:11, col:17> col:17 arg 'void *'
| `-CompoundStmt 0x5588eaa7d1b8 <line:759:1, line:802:1>
|   |-CallExpr 0x5588eaa79000 <line:760:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x5588eaa78fe8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5588eaa78fc8 <col:3> 'void ()' Function 0x5588eaa1ae40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x5588eaa79078 <line:761:3, col:15> 'int' '='
|   | |-DeclRefExpr 0x5588eaa79020 <col:3> 'int' lvalue Var 0x5588eaa752c8 'z$w_buff1' 'int'
|   | `-ImplicitCastExpr 0x5588eaa79060 <col:15> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x5588eaa79040 <col:15> 'int' lvalue Var 0x5588eaa751d0 'z$w_buff0' 'int'
|   |-BinaryOperator 0x5588eaa790d8 <line:762:3, col:15> 'int' '='
|   | |-DeclRefExpr 0x5588eaa79098 <col:3> 'int' lvalue Var 0x5588eaa751d0 'z$w_buff0' 'int'
|   | `-IntegerLiteral 0x5588eaa790b8 <col:15> 'int' 1
|   |-BinaryOperator 0x5588eaa79150 <line:763:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x5588eaa790f8 <col:3> '_Bool' lvalue Var 0x5588eaa75340 'z$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x5588eaa79138 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x5588eaa79118 <col:20> '_Bool' lvalue Var 0x5588eaa75248 'z$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x5588eaa791e8 <line:764:3, col:27> '_Bool' '='
|   | |-DeclRefExpr 0x5588eaa79170 <col:3> '_Bool' lvalue Var 0x5588eaa75248 'z$w_buff0_used' '_Bool'
|   | `-CStyleCastExpr 0x5588eaa791c0 <col:20, col:27> '_Bool' <IntegralToBoolean>
|   |   `-IntegerLiteral 0x5588eaa79190 <col:27> 'int' 1
|   |-CallExpr 0x5588eaa79368 <line:765:3, col:56> 'void'
|   | |-ImplicitCastExpr 0x5588eaa79350 <col:3> 'void (*)(int)' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x5588eaa79208 <col:3> 'void (int)' Function 0x5588eaa1abc8 '__VERIFIER_assert' 'void (int)'
|   | `-UnaryOperator 0x5588eaa79308 <col:21, col:55> 'int' prefix '!' cannot overflow
|   |   `-ParenExpr 0x5588eaa792e8 <col:22, col:55> 'int'
|   |     `-BinaryOperator 0x5588eaa792c8 <col:23, col:41> 'int' '&&'
|   |       |-ImplicitCastExpr 0x5588eaa79280 <col:23> 'int' <IntegralCast>
|   |       | `-ImplicitCastExpr 0x5588eaa79268 <col:23> '_Bool' <LValueToRValue>
|   |       |   `-DeclRefExpr 0x5588eaa79228 <col:23> '_Bool' lvalue Var 0x5588eaa75340 'z$w_buff1_used' '_Bool'
|   |       `-ImplicitCastExpr 0x5588eaa792b0 <col:41> 'int' <IntegralCast>
|   |         `-ImplicitCastExpr 0x5588eaa79298 <col:41> '_Bool' <LValueToRValue>
|   |           `-DeclRefExpr 0x5588eaa79248 <col:41> '_Bool' lvalue Var 0x5588eaa75248 'z$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x5588eaa793e8 <line:766:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x5588eaa79390 <col:3> '_Bool' lvalue Var 0x5588eaa74ef0 'z$r_buff1_thd0' '_Bool'
|   | `-ImplicitCastExpr 0x5588eaa793d0 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x5588eaa793b0 <col:20> '_Bool' lvalue Var 0x5588eaa74d10 'z$r_buff0_thd0' '_Bool'
|   |-BinaryOperator 0x5588eaa79460 <line:767:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x5588eaa79408 <col:3> '_Bool' lvalue Var 0x5588eaa74f68 'z$r_buff1_thd1' '_Bool'
|   | `-ImplicitCastExpr 0x5588eaa79448 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x5588eaa79428 <col:20> '_Bool' lvalue Var 0x5588eaa74d88 'z$r_buff0_thd1' '_Bool'
|   |-BinaryOperator 0x5588eaa794d8 <line:768:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x5588eaa79480 <col:3> '_Bool' lvalue Var 0x5588eaa74fe0 'z$r_buff1_thd2' '_Bool'
|   | `-ImplicitCastExpr 0x5588eaa794c0 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x5588eaa794a0 <col:20> '_Bool' lvalue Var 0x5588eaa74e00 'z$r_buff0_thd2' '_Bool'
|   |-BinaryOperator 0x5588eaa79550 <line:769:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x5588eaa794f8 <col:3> '_Bool' lvalue Var 0x5588eaa75058 'z$r_buff1_thd3' '_Bool'
|   | `-ImplicitCastExpr 0x5588eaa79538 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x5588eaa79518 <col:20> '_Bool' lvalue Var 0x5588eaa74e78 'z$r_buff0_thd3' '_Bool'
|   |-BinaryOperator 0x5588eaa795e8 <line:770:3, col:27> '_Bool' '='
|   | |-DeclRefExpr 0x5588eaa79570 <col:3> '_Bool' lvalue Var 0x5588eaa74e78 'z$r_buff0_thd3' '_Bool'
|   | `-CStyleCastExpr 0x5588eaa795c0 <col:20, col:27> '_Bool' <IntegralToBoolean>
|   |   `-IntegerLiteral 0x5588eaa79590 <col:27> 'int' 1
|   |-CallExpr 0x5588eaa79640 <line:771:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x5588eaa79628 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5588eaa79608 <col:3> 'void ()' Function 0x5588eaa1af00 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x5588eaa79698 <line:772:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x5588eaa79680 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5588eaa79660 <col:3> 'void ()' Function 0x5588eaa1ae40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x5588eaa79748 <line:773:3, col:45> '_Bool' '='
|   | |-DeclRefExpr 0x5588eaa796b8 <col:3> '_Bool' lvalue Var 0x5588eaa753b8 'weak$$choice0' '_Bool'
|   | `-ImplicitCastExpr 0x5588eaa79730 <col:19, col:45> '_Bool' <PointerToBoolean>
|   |   `-CallExpr 0x5588eaa79710 <col:19, col:45> 'void *'
|   |     `-ImplicitCastExpr 0x5588eaa796f8 <col:19> 'void *(*)(void)' <FunctionToPointerDecay>
|   |       `-DeclRefExpr 0x5588eaa796d8 <col:19> 'void *(void)' Function 0x5588eaa1a958 '__VERIFIER_nondet_pointer' 'void *(void)'
|   |-BinaryOperator 0x5588eaa797f8 <line:774:3, col:45> '_Bool' '='
|   | |-DeclRefExpr 0x5588eaa79768 <col:3> '_Bool' lvalue Var 0x5588eaa75430 'weak$$choice2' '_Bool'
|   | `-ImplicitCastExpr 0x5588eaa797e0 <col:19, col:45> '_Bool' <PointerToBoolean>
|   |   `-CallExpr 0x5588eaa797c0 <col:19, col:45> 'void *'
|   |     `-ImplicitCastExpr 0x5588eaa797a8 <col:19> 'void *(*)(void)' <FunctionToPointerDecay>
|   |       `-DeclRefExpr 0x5588eaa79788 <col:19> 'void *(void)' Function 0x5588eaa1a958 '__VERIFIER_nondet_pointer' 'void *(void)'
|   |-BinaryOperator 0x5588eaa79870 <line:775:3, col:21> '_Bool' '='
|   | |-DeclRefExpr 0x5588eaa79818 <col:3> '_Bool' lvalue Var 0x5588eaa74c18 'z$flush_delayed' '_Bool'
|   | `-ImplicitCastExpr 0x5588eaa79858 <col:21> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x5588eaa79838 <col:21> '_Bool' lvalue Var 0x5588eaa75430 'weak$$choice2' '_Bool'
|   |-BinaryOperator 0x5588eaa798e8 <line:776:3, col:15> 'int' '='
|   | |-DeclRefExpr 0x5588eaa79890 <col:3> 'int' lvalue Var 0x5588eaa74c98 'z$mem_tmp' 'int'
|   | `-ImplicitCastExpr 0x5588eaa798d0 <col:15> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x5588eaa798b0 <col:15> 'int' lvalue Var 0x5588eaa74b80 'z' 'int'
|   |-BinaryOperator 0x5588eaa79d38 <line:777:3, col:162> 'int' '='
|   | |-DeclRefExpr 0x5588eaa79908 <col:3> 'int' lvalue Var 0x5588eaa74b80 'z' 'int'
|   | `-ConditionalOperator 0x5588eaa79d08 <col:7, col:162> 'int'
|   |   |-BinaryOperator 0x5588eaa79b18 <col:7, col:84> 'int' '||'
|   |   | |-BinaryOperator 0x5588eaa79a38 <col:7, col:46> 'int' '||'
|   |   | | |-UnaryOperator 0x5588eaa79960 <col:7, col:8> 'int' prefix '!' cannot overflow
|   |   | | | `-ImplicitCastExpr 0x5588eaa79948 <col:8> '_Bool' <LValueToRValue>
|   |   | | |   `-DeclRefExpr 0x5588eaa79928 <col:8> '_Bool' lvalue Var 0x5588eaa75248 'z$w_buff0_used' '_Bool'
|   |   | | `-BinaryOperator 0x5588eaa79a18 <col:26, col:46> 'int' '&&'
|   |   | |   |-UnaryOperator 0x5588eaa799b0 <col:26, col:27> 'int' prefix '!' cannot overflow
|   |   | |   | `-ImplicitCastExpr 0x5588eaa79998 <col:27> '_Bool' <LValueToRValue>
|   |   | |   |   `-DeclRefExpr 0x5588eaa79978 <col:27> '_Bool' lvalue Var 0x5588eaa74e78 'z$r_buff0_thd3' '_Bool'
|   |   | |   `-UnaryOperator 0x5588eaa79a00 <col:45, col:46> 'int' prefix '!' cannot overflow
|   |   | |     `-ImplicitCastExpr 0x5588eaa799e8 <col:46> '_Bool' <LValueToRValue>
|   |   | |       `-DeclRefExpr 0x5588eaa799c8 <col:46> '_Bool' lvalue Var 0x5588eaa75340 'z$w_buff1_used' '_Bool'
|   |   | `-BinaryOperator 0x5588eaa79af8 <col:64, col:84> 'int' '&&'
|   |   |   |-UnaryOperator 0x5588eaa79a90 <col:64, col:65> 'int' prefix '!' cannot overflow
|   |   |   | `-ImplicitCastExpr 0x5588eaa79a78 <col:65> '_Bool' <LValueToRValue>
|   |   |   |   `-DeclRefExpr 0x5588eaa79a58 <col:65> '_Bool' lvalue Var 0x5588eaa74e78 'z$r_buff0_thd3' '_Bool'
|   |   |   `-UnaryOperator 0x5588eaa79ae0 <col:83, col:84> 'int' prefix '!' cannot overflow
|   |   |     `-ImplicitCastExpr 0x5588eaa79ac8 <col:84> '_Bool' <LValueToRValue>
|   |   |       `-DeclRefExpr 0x5588eaa79aa8 <col:84> '_Bool' lvalue Var 0x5588eaa75058 'z$r_buff1_thd3' '_Bool'
|   |   |-ImplicitCastExpr 0x5588eaa79cf0 <col:101> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x5588eaa79b50 <col:101> 'int' lvalue Var 0x5588eaa74b80 'z' 'int'
|   |   `-ParenExpr 0x5588eaa79cd0 <col:105, col:162> 'int'
|   |     `-ConditionalOperator 0x5588eaa79ca0 <col:106, col:153> 'int'
|   |       |-BinaryOperator 0x5588eaa79c10 <col:106, col:124> 'int' '&&'
|   |       | |-ImplicitCastExpr 0x5588eaa79bc8 <col:106> 'int' <IntegralCast>
|   |       | | `-ImplicitCastExpr 0x5588eaa79bb0 <col:106> '_Bool' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x5588eaa79b70 <col:106> '_Bool' lvalue Var 0x5588eaa75248 'z$w_buff0_used' '_Bool'
|   |       | `-ImplicitCastExpr 0x5588eaa79bf8 <col:124> 'int' <IntegralCast>
|   |       |   `-ImplicitCastExpr 0x5588eaa79be0 <col:124> '_Bool' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x5588eaa79b90 <col:124> '_Bool' lvalue Var 0x5588eaa74e78 'z$r_buff0_thd3' '_Bool'
|   |       |-ImplicitCastExpr 0x5588eaa79c70 <col:141> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x5588eaa79c30 <col:141> 'int' lvalue Var 0x5588eaa751d0 'z$w_buff0' 'int'
|   |       `-ImplicitCastExpr 0x5588eaa79c88 <col:153> 'int' <LValueToRValue>
|   |         `-DeclRefExpr 0x5588eaa79c50 <col:153> 'int' lvalue Var 0x5588eaa752c8 'z$w_buff1' 'int'
|   |-BinaryOperator 0x5588eaa7a248 <line:778:3, col:208> 'int' '='
|   | |-DeclRefExpr 0x5588eaa79d58 <col:3> 'int' lvalue Var 0x5588eaa751d0 'z$w_buff0' 'int'
|   | `-ConditionalOperator 0x5588eaa7a218 <col:15, col:208> 'int'
|   |   |-ImplicitCastExpr 0x5588eaa7a1e8 <col:15> 'int' <IntegralCast>
|   |   | `-ImplicitCastExpr 0x5588eaa7a1d0 <col:15> '_Bool' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x5588eaa79d78 <col:15> '_Bool' lvalue Var 0x5588eaa75430 'weak$$choice2' '_Bool'
|   |   |-ImplicitCastExpr 0x5588eaa7a200 <col:31> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x5588eaa79d98 <col:31> 'int' lvalue Var 0x5588eaa751d0 'z$w_buff0' 'int'
|   |   `-ParenExpr 0x5588eaa7a1b0 <col:43, col:208> 'int'
|   |     `-ConditionalOperator 0x5588eaa7a180 <col:44, col:207> 'int'
|   |       |-BinaryOperator 0x5588eaa79fa8 <col:44, col:121> 'int' '||'
|   |       | |-BinaryOperator 0x5588eaa79ec8 <col:44, col:83> 'int' '||'
|   |       | | |-UnaryOperator 0x5588eaa79df0 <col:44, col:45> 'int' prefix '!' cannot overflow
|   |       | | | `-ImplicitCastExpr 0x5588eaa79dd8 <col:45> '_Bool' <LValueToRValue>
|   |       | | |   `-DeclRefExpr 0x5588eaa79db8 <col:45> '_Bool' lvalue Var 0x5588eaa75248 'z$w_buff0_used' '_Bool'
|   |       | | `-BinaryOperator 0x5588eaa79ea8 <col:63, col:83> 'int' '&&'
|   |       | |   |-UnaryOperator 0x5588eaa79e40 <col:63, col:64> 'int' prefix '!' cannot overflow
|   |       | |   | `-ImplicitCastExpr 0x5588eaa79e28 <col:64> '_Bool' <LValueToRValue>
|   |       | |   |   `-DeclRefExpr 0x5588eaa79e08 <col:64> '_Bool' lvalue Var 0x5588eaa74e78 'z$r_buff0_thd3' '_Bool'
|   |       | |   `-UnaryOperator 0x5588eaa79e90 <col:82, col:83> 'int' prefix '!' cannot overflow
|   |       | |     `-ImplicitCastExpr 0x5588eaa79e78 <col:83> '_Bool' <LValueToRValue>
|   |       | |       `-DeclRefExpr 0x5588eaa79e58 <col:83> '_Bool' lvalue Var 0x5588eaa75340 'z$w_buff1_used' '_Bool'
|   |       | `-BinaryOperator 0x5588eaa79f88 <col:101, col:121> 'int' '&&'
|   |       |   |-UnaryOperator 0x5588eaa79f20 <col:101, col:102> 'int' prefix '!' cannot overflow
|   |       |   | `-ImplicitCastExpr 0x5588eaa79f08 <col:102> '_Bool' <LValueToRValue>
|   |       |   |   `-DeclRefExpr 0x5588eaa79ee8 <col:102> '_Bool' lvalue Var 0x5588eaa74e78 'z$r_buff0_thd3' '_Bool'
|   |       |   `-UnaryOperator 0x5588eaa79f70 <col:120, col:121> 'int' prefix '!' cannot overflow
|   |       |     `-ImplicitCastExpr 0x5588eaa79f58 <col:121> '_Bool' <LValueToRValue>
|   |       |       `-DeclRefExpr 0x5588eaa79f38 <col:121> '_Bool' lvalue Var 0x5588eaa75058 'z$r_buff1_thd3' '_Bool'
|   |       |-ImplicitCastExpr 0x5588eaa7a168 <col:138> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x5588eaa79fc8 <col:138> 'int' lvalue Var 0x5588eaa751d0 'z$w_buff0' 'int'
|   |       `-ParenExpr 0x5588eaa7a148 <col:150, col:207> 'int'
|   |         `-ConditionalOperator 0x5588eaa7a118 <col:151, col:198> 'int'
|   |           |-BinaryOperator 0x5588eaa7a088 <col:151, col:169> 'int' '&&'
|   |           | |-ImplicitCastExpr 0x5588eaa7a040 <col:151> 'int' <IntegralCast>
|   |           | | `-ImplicitCastExpr 0x5588eaa7a028 <col:151> '_Bool' <LValueToRValue>
|   |           | |   `-DeclRefExpr 0x5588eaa79fe8 <col:151> '_Bool' lvalue Var 0x5588eaa75248 'z$w_buff0_used' '_Bool'
|   |           | `-ImplicitCastExpr 0x5588eaa7a070 <col:169> 'int' <IntegralCast>
|   |           |   `-ImplicitCastExpr 0x5588eaa7a058 <col:169> '_Bool' <LValueToRValue>
|   |           |     `-DeclRefExpr 0x5588eaa7a008 <col:169> '_Bool' lvalue Var 0x5588eaa74e78 'z$r_buff0_thd3' '_Bool'
|   |           |-ImplicitCastExpr 0x5588eaa7a0e8 <col:186> 'int' <LValueToRValue>
|   |           | `-DeclRefExpr 0x5588eaa7a0a8 <col:186> 'int' lvalue Var 0x5588eaa751d0 'z$w_buff0' 'int'
|   |           `-ImplicitCastExpr 0x5588eaa7a100 <col:198> 'int' <LValueToRValue>
|   |             `-DeclRefExpr 0x5588eaa7a0c8 <col:198> 'int' lvalue Var 0x5588eaa751d0 'z$w_buff0' 'int'
|   |-BinaryOperator 0x5588eaa7a758 <line:779:3, col:208> 'int' '='
|   | |-DeclRefExpr 0x5588eaa7a268 <col:3> 'int' lvalue Var 0x5588eaa752c8 'z$w_buff1' 'int'
|   | `-ConditionalOperator 0x5588eaa7a728 <col:15, col:208> 'int'
|   |   |-ImplicitCastExpr 0x5588eaa7a6f8 <col:15> 'int' <IntegralCast>
|   |   | `-ImplicitCastExpr 0x5588eaa7a6e0 <col:15> '_Bool' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x5588eaa7a288 <col:15> '_Bool' lvalue Var 0x5588eaa75430 'weak$$choice2' '_Bool'
|   |   |-ImplicitCastExpr 0x5588eaa7a710 <col:31> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x5588eaa7a2a8 <col:31> 'int' lvalue Var 0x5588eaa752c8 'z$w_buff1' 'int'
|   |   `-ParenExpr 0x5588eaa7a6c0 <col:43, col:208> 'int'
|   |     `-ConditionalOperator 0x5588eaa7a690 <col:44, col:207> 'int'
|   |       |-BinaryOperator 0x5588eaa7a4b8 <col:44, col:121> 'int' '||'
|   |       | |-BinaryOperator 0x5588eaa7a3d8 <col:44, col:83> 'int' '||'
|   |       | | |-UnaryOperator 0x5588eaa7a300 <col:44, col:45> 'int' prefix '!' cannot overflow
|   |       | | | `-ImplicitCastExpr 0x5588eaa7a2e8 <col:45> '_Bool' <LValueToRValue>
|   |       | | |   `-DeclRefExpr 0x5588eaa7a2c8 <col:45> '_Bool' lvalue Var 0x5588eaa75248 'z$w_buff0_used' '_Bool'
|   |       | | `-BinaryOperator 0x5588eaa7a3b8 <col:63, col:83> 'int' '&&'
|   |       | |   |-UnaryOperator 0x5588eaa7a350 <col:63, col:64> 'int' prefix '!' cannot overflow
|   |       | |   | `-ImplicitCastExpr 0x5588eaa7a338 <col:64> '_Bool' <LValueToRValue>
|   |       | |   |   `-DeclRefExpr 0x5588eaa7a318 <col:64> '_Bool' lvalue Var 0x5588eaa74e78 'z$r_buff0_thd3' '_Bool'
|   |       | |   `-UnaryOperator 0x5588eaa7a3a0 <col:82, col:83> 'int' prefix '!' cannot overflow
|   |       | |     `-ImplicitCastExpr 0x5588eaa7a388 <col:83> '_Bool' <LValueToRValue>
|   |       | |       `-DeclRefExpr 0x5588eaa7a368 <col:83> '_Bool' lvalue Var 0x5588eaa75340 'z$w_buff1_used' '_Bool'
|   |       | `-BinaryOperator 0x5588eaa7a498 <col:101, col:121> 'int' '&&'
|   |       |   |-UnaryOperator 0x5588eaa7a430 <col:101, col:102> 'int' prefix '!' cannot overflow
|   |       |   | `-ImplicitCastExpr 0x5588eaa7a418 <col:102> '_Bool' <LValueToRValue>
|   |       |   |   `-DeclRefExpr 0x5588eaa7a3f8 <col:102> '_Bool' lvalue Var 0x5588eaa74e78 'z$r_buff0_thd3' '_Bool'
|   |       |   `-UnaryOperator 0x5588eaa7a480 <col:120, col:121> 'int' prefix '!' cannot overflow
|   |       |     `-ImplicitCastExpr 0x5588eaa7a468 <col:121> '_Bool' <LValueToRValue>
|   |       |       `-DeclRefExpr 0x5588eaa7a448 <col:121> '_Bool' lvalue Var 0x5588eaa75058 'z$r_buff1_thd3' '_Bool'
|   |       |-ImplicitCastExpr 0x5588eaa7a678 <col:138> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x5588eaa7a4d8 <col:138> 'int' lvalue Var 0x5588eaa752c8 'z$w_buff1' 'int'
|   |       `-ParenExpr 0x5588eaa7a658 <col:150, col:207> 'int'
|   |         `-ConditionalOperator 0x5588eaa7a628 <col:151, col:198> 'int'
|   |           |-BinaryOperator 0x5588eaa7a598 <col:151, col:169> 'int' '&&'
|   |           | |-ImplicitCastExpr 0x5588eaa7a550 <col:151> 'int' <IntegralCast>
|   |           | | `-ImplicitCastExpr 0x5588eaa7a538 <col:151> '_Bool' <LValueToRValue>
|   |           | |   `-DeclRefExpr 0x5588eaa7a4f8 <col:151> '_Bool' lvalue Var 0x5588eaa75248 'z$w_buff0_used' '_Bool'
|   |           | `-ImplicitCastExpr 0x5588eaa7a580 <col:169> 'int' <IntegralCast>
|   |           |   `-ImplicitCastExpr 0x5588eaa7a568 <col:169> '_Bool' <LValueToRValue>
|   |           |     `-DeclRefExpr 0x5588eaa7a518 <col:169> '_Bool' lvalue Var 0x5588eaa74e78 'z$r_buff0_thd3' '_Bool'
|   |           |-ImplicitCastExpr 0x5588eaa7a5f8 <col:186> 'int' <LValueToRValue>
|   |           | `-DeclRefExpr 0x5588eaa7a5b8 <col:186> 'int' lvalue Var 0x5588eaa752c8 'z$w_buff1' 'int'
|   |           `-ImplicitCastExpr 0x5588eaa7a610 <col:198> 'int' <LValueToRValue>
|   |             `-DeclRefExpr 0x5588eaa7a5d8 <col:198> 'int' lvalue Var 0x5588eaa752c8 'z$w_buff1' 'int'
|   |-BinaryOperator 0x5588eaa7ad20 <line:780:3, col:227> '_Bool' '='
|   | |-DeclRefExpr 0x5588eaa7a778 <col:3> '_Bool' lvalue Var 0x5588eaa75248 'z$w_buff0_used' '_Bool'
|   | `-ImplicitCastExpr 0x5588eaa7ad08 <col:20, col:227> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x5588eaa7acd8 <col:20, col:227> 'int'
|   |     |-ImplicitCastExpr 0x5588eaa7ac90 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x5588eaa7ac78 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x5588eaa7a798 <col:20> '_Bool' lvalue Var 0x5588eaa75430 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x5588eaa7acc0 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x5588eaa7aca8 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x5588eaa7a7b8 <col:36> '_Bool' lvalue Var 0x5588eaa75248 'z$w_buff0_used' '_Bool'
|   |     `-ParenExpr 0x5588eaa7ac58 <col:53, col:227> 'int'
|   |       `-ConditionalOperator 0x5588eaa7ac28 <col:54, col:226> 'int'
|   |         |-BinaryOperator 0x5588eaa7a9c8 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x5588eaa7a8e8 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x5588eaa7a810 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x5588eaa7a7f8 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x5588eaa7a7d8 <col:55> '_Bool' lvalue Var 0x5588eaa75248 'z$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x5588eaa7a8c8 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x5588eaa7a860 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x5588eaa7a848 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x5588eaa7a828 <col:74> '_Bool' lvalue Var 0x5588eaa74e78 'z$r_buff0_thd3' '_Bool'
|   |         | |   `-UnaryOperator 0x5588eaa7a8b0 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x5588eaa7a898 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x5588eaa7a878 <col:93> '_Bool' lvalue Var 0x5588eaa75340 'z$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x5588eaa7a9a8 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x5588eaa7a940 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x5588eaa7a928 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x5588eaa7a908 <col:112> '_Bool' lvalue Var 0x5588eaa74e78 'z$r_buff0_thd3' '_Bool'
|   |         |   `-UnaryOperator 0x5588eaa7a990 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x5588eaa7a978 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x5588eaa7a958 <col:131> '_Bool' lvalue Var 0x5588eaa75058 'z$r_buff1_thd3' '_Bool'
|   |         |-ImplicitCastExpr 0x5588eaa7ac10 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x5588eaa7abf8 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x5588eaa7a9e8 <col:148> '_Bool' lvalue Var 0x5588eaa75248 'z$w_buff0_used' '_Bool'
|   |         `-ParenExpr 0x5588eaa7abd8 <col:165, col:226> 'int'
|   |           `-ConditionalOperator 0x5588eaa7aba8 <col:166, col:212> 'int'
|   |             |-BinaryOperator 0x5588eaa7aaa8 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x5588eaa7aa60 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x5588eaa7aa48 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x5588eaa7aa08 <col:166> '_Bool' lvalue Var 0x5588eaa75248 'z$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x5588eaa7aa90 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x5588eaa7aa78 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x5588eaa7aa28 <col:184> '_Bool' lvalue Var 0x5588eaa74e78 'z$r_buff0_thd3' '_Bool'
|   |             |-ImplicitCastExpr 0x5588eaa7ab60 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x5588eaa7aaf8 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x5588eaa7aac8 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x5588eaa7ab90 <col:212> 'int' <IntegralCast>
|   |               `-ImplicitCastExpr 0x5588eaa7ab78 <col:212> '_Bool' <LValueToRValue>
|   |                 `-DeclRefExpr 0x5588eaa7ab20 <col:212> '_Bool' lvalue Var 0x5588eaa75248 'z$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x5588eaa7b2e8 <line:781:3, col:221> '_Bool' '='
|   | |-DeclRefExpr 0x5588eaa7ad40 <col:3> '_Bool' lvalue Var 0x5588eaa75340 'z$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x5588eaa7b2d0 <col:20, col:221> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x5588eaa7b2a0 <col:20, col:221> 'int'
|   |     |-ImplicitCastExpr 0x5588eaa7b258 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x5588eaa7b240 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x5588eaa7ad60 <col:20> '_Bool' lvalue Var 0x5588eaa75430 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x5588eaa7b288 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x5588eaa7b270 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x5588eaa7ad80 <col:36> '_Bool' lvalue Var 0x5588eaa75340 'z$w_buff1_used' '_Bool'
|   |     `-ParenExpr 0x5588eaa7b220 <col:53, col:221> 'int'
|   |       `-ConditionalOperator 0x5588eaa7b1f0 <col:54, col:220> 'int'
|   |         |-BinaryOperator 0x5588eaa7af90 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x5588eaa7aeb0 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x5588eaa7add8 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x5588eaa7adc0 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x5588eaa7ada0 <col:55> '_Bool' lvalue Var 0x5588eaa75248 'z$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x5588eaa7ae90 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x5588eaa7ae28 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x5588eaa7ae10 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x5588eaa7adf0 <col:74> '_Bool' lvalue Var 0x5588eaa74e78 'z$r_buff0_thd3' '_Bool'
|   |         | |   `-UnaryOperator 0x5588eaa7ae78 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x5588eaa7ae60 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x5588eaa7ae40 <col:93> '_Bool' lvalue Var 0x5588eaa75340 'z$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x5588eaa7af70 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x5588eaa7af08 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x5588eaa7aef0 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x5588eaa7aed0 <col:112> '_Bool' lvalue Var 0x5588eaa74e78 'z$r_buff0_thd3' '_Bool'
|   |         |   `-UnaryOperator 0x5588eaa7af58 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x5588eaa7af40 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x5588eaa7af20 <col:131> '_Bool' lvalue Var 0x5588eaa75058 'z$r_buff1_thd3' '_Bool'
|   |         |-ImplicitCastExpr 0x5588eaa7b1d8 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x5588eaa7b1c0 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x5588eaa7afb0 <col:148> '_Bool' lvalue Var 0x5588eaa75340 'z$w_buff1_used' '_Bool'
|   |         `-ParenExpr 0x5588eaa7b1a0 <col:165, col:220> 'int'
|   |           `-ConditionalOperator 0x5588eaa7b170 <col:166, col:219> 'int'
|   |             |-BinaryOperator 0x5588eaa7b070 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x5588eaa7b028 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x5588eaa7b010 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x5588eaa7afd0 <col:166> '_Bool' lvalue Var 0x5588eaa75248 'z$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x5588eaa7b058 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x5588eaa7b040 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x5588eaa7aff0 <col:184> '_Bool' lvalue Var 0x5588eaa74e78 'z$r_buff0_thd3' '_Bool'
|   |             |-ImplicitCastExpr 0x5588eaa7b140 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x5588eaa7b0c0 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x5588eaa7b090 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x5588eaa7b158 <col:212, col:219> 'int' <IntegralCast>
|   |               `-CStyleCastExpr 0x5588eaa7b118 <col:212, col:219> '_Bool' <IntegralToBoolean>
|   |                 `-IntegerLiteral 0x5588eaa7b0e8 <col:219> 'int' 0
|   |-BinaryOperator 0x5588eaa7b890 <line:782:3, col:227> '_Bool' '='
|   | |-DeclRefExpr 0x5588eaa7b308 <col:3> '_Bool' lvalue Var 0x5588eaa74e78 'z$r_buff0_thd3' '_Bool'
|   | `-ImplicitCastExpr 0x5588eaa7b878 <col:20, col:227> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x5588eaa7b848 <col:20, col:227> 'int'
|   |     |-ImplicitCastExpr 0x5588eaa7b800 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x5588eaa7b7e8 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x5588eaa7b328 <col:20> '_Bool' lvalue Var 0x5588eaa75430 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x5588eaa7b830 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x5588eaa7b818 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x5588eaa7b348 <col:36> '_Bool' lvalue Var 0x5588eaa74e78 'z$r_buff0_thd3' '_Bool'
|   |     `-ParenExpr 0x5588eaa7b7c8 <col:53, col:227> 'int'
|   |       `-ConditionalOperator 0x5588eaa7b798 <col:54, col:226> 'int'
|   |         |-BinaryOperator 0x5588eaa7b558 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x5588eaa7b478 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x5588eaa7b3a0 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x5588eaa7b388 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x5588eaa7b368 <col:55> '_Bool' lvalue Var 0x5588eaa75248 'z$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x5588eaa7b458 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x5588eaa7b3f0 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x5588eaa7b3d8 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x5588eaa7b3b8 <col:74> '_Bool' lvalue Var 0x5588eaa74e78 'z$r_buff0_thd3' '_Bool'
|   |         | |   `-UnaryOperator 0x5588eaa7b440 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x5588eaa7b428 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x5588eaa7b408 <col:93> '_Bool' lvalue Var 0x5588eaa75340 'z$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x5588eaa7b538 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x5588eaa7b4d0 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x5588eaa7b4b8 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x5588eaa7b498 <col:112> '_Bool' lvalue Var 0x5588eaa74e78 'z$r_buff0_thd3' '_Bool'
|   |         |   `-UnaryOperator 0x5588eaa7b520 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x5588eaa7b508 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x5588eaa7b4e8 <col:131> '_Bool' lvalue Var 0x5588eaa75058 'z$r_buff1_thd3' '_Bool'
|   |         |-ImplicitCastExpr 0x5588eaa7b780 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x5588eaa7b768 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x5588eaa7b578 <col:148> '_Bool' lvalue Var 0x5588eaa74e78 'z$r_buff0_thd3' '_Bool'
|   |         `-ParenExpr 0x5588eaa7b748 <col:165, col:226> 'int'
|   |           `-ConditionalOperator 0x5588eaa7b718 <col:166, col:212> 'int'
|   |             |-BinaryOperator 0x5588eaa7b638 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x5588eaa7b5f0 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x5588eaa7b5d8 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x5588eaa7b598 <col:166> '_Bool' lvalue Var 0x5588eaa75248 'z$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x5588eaa7b620 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x5588eaa7b608 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x5588eaa7b5b8 <col:184> '_Bool' lvalue Var 0x5588eaa74e78 'z$r_buff0_thd3' '_Bool'
|   |             |-ImplicitCastExpr 0x5588eaa7b6d0 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x5588eaa7b688 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x5588eaa7b658 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x5588eaa7b700 <col:212> 'int' <IntegralCast>
|   |               `-ImplicitCastExpr 0x5588eaa7b6e8 <col:212> '_Bool' <LValueToRValue>
|   |                 `-DeclRefExpr 0x5588eaa7b6b0 <col:212> '_Bool' lvalue Var 0x5588eaa74e78 'z$r_buff0_thd3' '_Bool'
|   |-BinaryOperator 0x5588eaa7be68 <line:783:3, col:221> '_Bool' '='
|   | |-DeclRefExpr 0x5588eaa7b8b0 <col:3> '_Bool' lvalue Var 0x5588eaa75058 'z$r_buff1_thd3' '_Bool'
|   | `-ImplicitCastExpr 0x5588eaa7be50 <col:20, col:221> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x5588eaa7be20 <col:20, col:221> 'int'
|   |     |-ImplicitCastExpr 0x5588eaa7bdd8 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x5588eaa7bdc0 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x5588eaa7b8d0 <col:20> '_Bool' lvalue Var 0x5588eaa75430 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x5588eaa7be08 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x5588eaa7bdf0 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x5588eaa7b8f0 <col:36> '_Bool' lvalue Var 0x5588eaa75058 'z$r_buff1_thd3' '_Bool'
|   |     `-ParenExpr 0x5588eaa7bda0 <col:53, col:221> 'int'
|   |       `-ConditionalOperator 0x5588eaa7bd70 <col:54, col:220> 'int'
|   |         |-BinaryOperator 0x5588eaa7bb00 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x5588eaa7ba20 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x5588eaa7b948 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x5588eaa7b930 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x5588eaa7b910 <col:55> '_Bool' lvalue Var 0x5588eaa75248 'z$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x5588eaa7ba00 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x5588eaa7b998 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x5588eaa7b980 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x5588eaa7b960 <col:74> '_Bool' lvalue Var 0x5588eaa74e78 'z$r_buff0_thd3' '_Bool'
|   |         | |   `-UnaryOperator 0x5588eaa7b9e8 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x5588eaa7b9d0 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x5588eaa7b9b0 <col:93> '_Bool' lvalue Var 0x5588eaa75340 'z$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x5588eaa7bae0 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x5588eaa7ba78 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x5588eaa7ba60 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x5588eaa7ba40 <col:112> '_Bool' lvalue Var 0x5588eaa74e78 'z$r_buff0_thd3' '_Bool'
|   |         |   `-UnaryOperator 0x5588eaa7bac8 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x5588eaa7bab0 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x5588eaa7ba90 <col:131> '_Bool' lvalue Var 0x5588eaa75058 'z$r_buff1_thd3' '_Bool'
|   |         |-ImplicitCastExpr 0x5588eaa7bd58 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x5588eaa7bd40 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x5588eaa7bb20 <col:148> '_Bool' lvalue Var 0x5588eaa75058 'z$r_buff1_thd3' '_Bool'
|   |         `-ParenExpr 0x5588eaa7bd20 <col:165, col:220> 'int'
|   |           `-ConditionalOperator 0x5588eaa7bcf0 <col:166, col:219> 'int'
|   |             |-BinaryOperator 0x5588eaa7bbf0 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x5588eaa7bba8 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x5588eaa7bb90 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x5588eaa7bb40 <col:166> '_Bool' lvalue Var 0x5588eaa75248 'z$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x5588eaa7bbd8 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x5588eaa7bbc0 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x5588eaa7bb70 <col:184> '_Bool' lvalue Var 0x5588eaa74e78 'z$r_buff0_thd3' '_Bool'
|   |             |-ImplicitCastExpr 0x5588eaa7bcc0 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x5588eaa7bc40 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x5588eaa7bc10 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x5588eaa7bcd8 <col:212, col:219> 'int' <IntegralCast>
|   |               `-CStyleCastExpr 0x5588eaa7bc98 <col:212, col:219> '_Bool' <IntegralToBoolean>
|   |                 `-IntegerLiteral 0x5588eaa7bc68 <col:219> 'int' 0
|   |-BinaryOperator 0x5588eaa7bee0 <line:784:3, col:25> 'int' '='
|   | |-DeclRefExpr 0x5588eaa7be88 <col:3> 'int' lvalue Var 0x5588eaa74480 '__unbuffered_p2_EAX' 'int'
|   | `-ImplicitCastExpr 0x5588eaa7bec8 <col:25> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x5588eaa7bea8 <col:25> 'int' lvalue Var 0x5588eaa74b80 'z' 'int'
|   |-BinaryOperator 0x5588eaa7c010 <line:785:3, col:37> 'int' '='
|   | |-DeclRefExpr 0x5588eaa7bf00 <col:3> 'int' lvalue Var 0x5588eaa74b80 'z' 'int'
|   | `-ConditionalOperator 0x5588eaa7bfe0 <col:7, col:37> 'int'
|   |   |-ImplicitCastExpr 0x5588eaa7bf98 <col:7> 'int' <IntegralCast>
|   |   | `-ImplicitCastExpr 0x5588eaa7bf80 <col:7> '_Bool' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x5588eaa7bf20 <col:7> '_Bool' lvalue Var 0x5588eaa74c18 'z$flush_delayed' '_Bool'
|   |   |-ImplicitCastExpr 0x5588eaa7bfb0 <col:25> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x5588eaa7bf40 <col:25> 'int' lvalue Var 0x5588eaa74c98 'z$mem_tmp' 'int'
|   |   `-ImplicitCastExpr 0x5588eaa7bfc8 <col:37> 'int' <LValueToRValue>
|   |     `-DeclRefExpr 0x5588eaa7bf60 <col:37> 'int' lvalue Var 0x5588eaa74b80 'z' 'int'
|   |-BinaryOperator 0x5588eaa7c0a8 <line:786:3, col:28> '_Bool' '='
|   | |-DeclRefExpr 0x5588eaa7c030 <col:3> '_Bool' lvalue Var 0x5588eaa74c18 'z$flush_delayed' '_Bool'
|   | `-CStyleCastExpr 0x5588eaa7c080 <col:21, col:28> '_Bool' <IntegralToBoolean>
|   |   `-IntegerLiteral 0x5588eaa7c050 <col:28> 'int' 0
|   |-CallExpr 0x5588eaa7c100 <line:787:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x5588eaa7c0e8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5588eaa7c0c8 <col:3> 'void ()' Function 0x5588eaa1af00 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x5588eaa7c158 <line:788:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x5588eaa7c140 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5588eaa7c120 <col:3> 'void ()' Function 0x5588eaa1ae40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x5588eaa7c1d0 <line:789:3, col:25> 'int' '='
|   | |-DeclRefExpr 0x5588eaa7c178 <col:3> 'int' lvalue Var 0x5588eaa745a0 '__unbuffered_p2_EBX' 'int'
|   | `-ImplicitCastExpr 0x5588eaa7c1b8 <col:25> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x5588eaa7c198 <col:25> 'int' lvalue Var 0x5588eaa746c0 'a' 'int'
|   |-CallExpr 0x5588eaa7c228 <line:790:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x5588eaa7c210 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5588eaa7c1f0 <col:3> 'void ()' Function 0x5588eaa1af00 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x5588eaa7c280 <line:791:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x5588eaa7c268 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5588eaa7c248 <col:3> 'void ()' Function 0x5588eaa1ae40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x5588eaa7c568 <line:792:3, col:103> 'int' '='
|   | |-DeclRefExpr 0x5588eaa7c2a0 <col:3> 'int' lvalue Var 0x5588eaa74b80 'z' 'int'
|   | `-ConditionalOperator 0x5588eaa7c538 <col:7, col:103> 'int'
|   |   |-BinaryOperator 0x5588eaa7c360 <col:7, col:25> 'int' '&&'
|   |   | |-ImplicitCastExpr 0x5588eaa7c318 <col:7> 'int' <IntegralCast>
|   |   | | `-ImplicitCastExpr 0x5588eaa7c300 <col:7> '_Bool' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x5588eaa7c2c0 <col:7> '_Bool' lvalue Var 0x5588eaa75248 'z$w_buff0_used' '_Bool'
|   |   | `-ImplicitCastExpr 0x5588eaa7c348 <col:25> 'int' <IntegralCast>
|   |   |   `-ImplicitCastExpr 0x5588eaa7c330 <col:25> '_Bool' <LValueToRValue>
|   |   |     `-DeclRefExpr 0x5588eaa7c2e0 <col:25> '_Bool' lvalue Var 0x5588eaa74e78 'z$r_buff0_thd3' '_Bool'
|   |   |-ImplicitCastExpr 0x5588eaa7c520 <col:42> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x5588eaa7c380 <col:42> 'int' lvalue Var 0x5588eaa751d0 'z$w_buff0' 'int'
|   |   `-ParenExpr 0x5588eaa7c500 <col:54, col:103> 'int'
|   |     `-ConditionalOperator 0x5588eaa7c4d0 <col:55, col:102> 'int'
|   |       |-BinaryOperator 0x5588eaa7c440 <col:55, col:73> 'int' '&&'
|   |       | |-ImplicitCastExpr 0x5588eaa7c3f8 <col:55> 'int' <IntegralCast>
|   |       | | `-ImplicitCastExpr 0x5588eaa7c3e0 <col:55> '_Bool' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x5588eaa7c3a0 <col:55> '_Bool' lvalue Var 0x5588eaa75340 'z$w_buff1_used' '_Bool'
|   |       | `-ImplicitCastExpr 0x5588eaa7c428 <col:73> 'int' <IntegralCast>
|   |       |   `-ImplicitCastExpr 0x5588eaa7c410 <col:73> '_Bool' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x5588eaa7c3c0 <col:73> '_Bool' lvalue Var 0x5588eaa75058 'z$r_buff1_thd3' '_Bool'
|   |       |-ImplicitCastExpr 0x5588eaa7c4a0 <col:90> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x5588eaa7c460 <col:90> 'int' lvalue Var 0x5588eaa752c8 'z$w_buff1' 'int'
|   |       `-ImplicitCastExpr 0x5588eaa7c4b8 <col:102> 'int' <LValueToRValue>
|   |         `-DeclRefExpr 0x5588eaa7c480 <col:102> 'int' lvalue Var 0x5588eaa74b80 'z' 'int'
|   |-BinaryOperator 0x5588eaa7c770 <line:793:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x5588eaa7c588 <col:3> '_Bool' lvalue Var 0x5588eaa75248 'z$w_buff0_used' '_Bool'
|   | `-ImplicitCastExpr 0x5588eaa7c758 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x5588eaa7c728 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x5588eaa7c648 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x5588eaa7c600 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x5588eaa7c5e8 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x5588eaa7c5a8 <col:20> '_Bool' lvalue Var 0x5588eaa75248 'z$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x5588eaa7c630 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x5588eaa7c618 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x5588eaa7c5c8 <col:38> '_Bool' lvalue Var 0x5588eaa74e78 'z$r_buff0_thd3' '_Bool'
|   |     |-ImplicitCastExpr 0x5588eaa7c6e0 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x5588eaa7c698 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x5588eaa7c668 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x5588eaa7c710 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x5588eaa7c6f8 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x5588eaa7c6c0 <col:66> '_Bool' lvalue Var 0x5588eaa75248 'z$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x5588eaa7ca58 <line:794:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x5588eaa7c790 <col:3> '_Bool' lvalue Var 0x5588eaa75340 'z$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x5588eaa7ca40 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x5588eaa7ca10 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x5588eaa7c930 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x5588eaa7c850 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x5588eaa7c808 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x5588eaa7c7f0 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x5588eaa7c7b0 <col:20> '_Bool' lvalue Var 0x5588eaa75248 'z$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x5588eaa7c838 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x5588eaa7c820 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x5588eaa7c7d0 <col:38> '_Bool' lvalue Var 0x5588eaa74e78 'z$r_buff0_thd3' '_Bool'
|   |     | `-BinaryOperator 0x5588eaa7c910 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x5588eaa7c8c8 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x5588eaa7c8b0 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x5588eaa7c870 <col:56> '_Bool' lvalue Var 0x5588eaa75340 'z$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x5588eaa7c8f8 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x5588eaa7c8e0 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x5588eaa7c890 <col:74> '_Bool' lvalue Var 0x5588eaa75058 'z$r_buff1_thd3' '_Bool'
|   |     |-ImplicitCastExpr 0x5588eaa7c9c8 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x5588eaa7c980 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x5588eaa7c950 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x5588eaa7c9f8 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x5588eaa7c9e0 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x5588eaa7c9a8 <col:102> '_Bool' lvalue Var 0x5588eaa75340 'z$w_buff1_used' '_Bool'
|   |-BinaryOperator 0x5588eaa7cc88 <line:795:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x5588eaa7ca78 <col:3> '_Bool' lvalue Var 0x5588eaa74e78 'z$r_buff0_thd3' '_Bool'
|   | `-ImplicitCastExpr 0x5588eaa7cc70 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x5588eaa7cc40 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x5588eaa7cb38 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x5588eaa7caf0 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x5588eaa7cad8 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x5588eaa7ca98 <col:20> '_Bool' lvalue Var 0x5588eaa75248 'z$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x5588eaa7cb20 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x5588eaa7cb08 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x5588eaa7cab8 <col:38> '_Bool' lvalue Var 0x5588eaa74e78 'z$r_buff0_thd3' '_Bool'
|   |     |-ImplicitCastExpr 0x5588eaa7cbf8 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x5588eaa7cbb0 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x5588eaa7cb80 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x5588eaa7cc28 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x5588eaa7cc10 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x5588eaa7cbd8 <col:66> '_Bool' lvalue Var 0x5588eaa74e78 'z$r_buff0_thd3' '_Bool'
|   |-BinaryOperator 0x5588eaa7cf70 <line:796:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x5588eaa7cca8 <col:3> '_Bool' lvalue Var 0x5588eaa75058 'z$r_buff1_thd3' '_Bool'
|   | `-ImplicitCastExpr 0x5588eaa7cf58 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x5588eaa7cf28 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x5588eaa7ce48 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x5588eaa7cd68 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x5588eaa7cd20 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x5588eaa7cd08 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x5588eaa7ccc8 <col:20> '_Bool' lvalue Var 0x5588eaa75248 'z$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x5588eaa7cd50 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x5588eaa7cd38 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x5588eaa7cce8 <col:38> '_Bool' lvalue Var 0x5588eaa74e78 'z$r_buff0_thd3' '_Bool'
|   |     | `-BinaryOperator 0x5588eaa7ce28 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x5588eaa7cde0 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x5588eaa7cdc8 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x5588eaa7cd88 <col:56> '_Bool' lvalue Var 0x5588eaa75340 'z$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x5588eaa7ce10 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x5588eaa7cdf8 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x5588eaa7cda8 <col:74> '_Bool' lvalue Var 0x5588eaa75058 'z$r_buff1_thd3' '_Bool'
|   |     |-ImplicitCastExpr 0x5588eaa7cee0 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x5588eaa7ce98 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x5588eaa7ce68 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x5588eaa7cf10 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x5588eaa7cef8 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x5588eaa7cec0 <col:102> '_Bool' lvalue Var 0x5588eaa75058 'z$r_buff1_thd3' '_Bool'
|   |-CallExpr 0x5588eaa7cfc8 <line:797:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x5588eaa7cfb0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5588eaa7cf90 <col:3> 'void ()' Function 0x5588eaa1af00 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x5588eaa7d020 <line:798:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x5588eaa7d008 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5588eaa7cfe8 <col:3> 'void ()' Function 0x5588eaa1ae40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x5588eaa7d0d8 <line:799:3, col:41> 'int' '='
|   | |-DeclRefExpr 0x5588eaa7d040 <col:3> 'int' lvalue Var 0x5588eaa74120 '__unbuffered_cnt' 'int'
|   | `-BinaryOperator 0x5588eaa7d0b8 <col:22, col:41> 'int' '+'
|   |   |-ImplicitCastExpr 0x5588eaa7d0a0 <col:22> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x5588eaa7d060 <col:22> 'int' lvalue Var 0x5588eaa74120 '__unbuffered_cnt' 'int'
|   |   `-IntegerLiteral 0x5588eaa7d080 <col:41> 'int' 1
|   |-CallExpr 0x5588eaa7d130 <line:800:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x5588eaa7d118 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5588eaa7d0f8 <col:3> 'void ()' Function 0x5588eaa1af00 '__VERIFIER_atomic_end' 'void ()'
|   `-ReturnStmt 0x5588eaa7d1a8 <line:801:3, col:36>
|     `-CallExpr 0x5588eaa7d188 <col:10, col:36> 'void *'
|       `-ImplicitCastExpr 0x5588eaa7d170 <col:10> 'void *(*)(void)' <FunctionToPointerDecay>
|         `-DeclRefExpr 0x5588eaa7d150 <col:10> 'void *(void)' Function 0x5588eaa1a958 '__VERIFIER_nondet_pointer' 'void *(void)'
|-FunctionDecl 0x5588eaa7d338 prev 0x5588eaa73e68 <line:803:1, line:805:1> line:803:6 fence 'void ()'
| `-CompoundStmt 0x5588eaa7d3d8 <line:804:1, line:805:1>
|-FunctionDecl 0x5588eaa7d408 prev 0x5588eaa73f28 <line:806:1, line:808:1> line:806:6 isync 'void ()'
| `-CompoundStmt 0x5588eaa7d4a8 <line:807:1, line:808:1>
|-FunctionDecl 0x5588eaa7d4d8 prev 0x5588eaa73fe8 <line:809:1, line:811:1> line:809:6 lwfence 'void ()'
| `-CompoundStmt 0x5588eaa7d578 <line:810:1, line:811:1>
`-FunctionDecl 0x5588eaa7d5e8 <line:812:1, line:836:1> line:812:5 main 'int ()'
  `-CompoundStmt 0x5588eaa7f360 <line:813:1, line:836:1>
    |-DeclStmt 0x5588eaa7d700 <line:814:3, col:17>
    | `-VarDecl 0x5588eaa7d698 <col:3, col:13> col:13 used t298 'pthread_t':'unsigned long'
    |-CallExpr 0x5588eaa7d908 <line:815:3, col:53> 'int'
    | |-ImplicitCastExpr 0x5588eaa7d8f0 <col:3> 'int (*)(pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x5588eaa7d718 <col:3> 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' Function 0x5588eaa5b488 'pthread_create' 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)'
    | |-UnaryOperator 0x5588eaa7d758 <col:18, col:19> 'pthread_t *' prefix '&' cannot overflow
    | | `-DeclRefExpr 0x5588eaa7d738 <col:19> 'pthread_t':'unsigned long' lvalue Var 0x5588eaa7d698 't298' 'pthread_t':'unsigned long'
    | |-ImplicitCastExpr 0x5588eaa7d948 <col:25, col:35> 'const pthread_attr_t *' <NullToPointer>
    | | `-ParenExpr 0x5588eaa7d7d0 <col:25, col:35> 'void *'
    | |   `-CStyleCastExpr 0x5588eaa7d7a8 <col:26, col:34> 'void *' <NullToPointer>
    | |     `-IntegerLiteral 0x5588eaa7d770 <col:34> 'int' 0
    | |-ImplicitCastExpr 0x5588eaa7d960 <col:38> 'void *(*)(void *)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x5588eaa7d7f0 <col:38> 'void *(void *)' Function 0x5588eaa75548 'P0' 'void *(void *)'
    | `-ParenExpr 0x5588eaa7d870 <col:42, col:52> 'void *'
    |   `-CStyleCastExpr 0x5588eaa7d848 <col:43, col:51> 'void *' <NullToPointer>
    |     `-IntegerLiteral 0x5588eaa7d810 <col:51> 'int' 0
    |-DeclStmt 0x5588eaa7d9f0 <line:816:3, col:17>
    | `-VarDecl 0x5588eaa7d988 <col:3, col:13> col:13 used t299 'pthread_t':'unsigned long'
    |-CallExpr 0x5588eaa7dba8 <line:817:3, col:53> 'int'
    | |-ImplicitCastExpr 0x5588eaa7db90 <col:3> 'int (*)(pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x5588eaa7da08 <col:3> 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' Function 0x5588eaa5b488 'pthread_create' 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)'
    | |-UnaryOperator 0x5588eaa7da48 <col:18, col:19> 'pthread_t *' prefix '&' cannot overflow
    | | `-DeclRefExpr 0x5588eaa7da28 <col:19> 'pthread_t':'unsigned long' lvalue Var 0x5588eaa7d988 't299' 'pthread_t':'unsigned long'
    | |-ImplicitCastExpr 0x5588eaa7dbe8 <col:25, col:35> 'const pthread_attr_t *' <NullToPointer>
    | | `-ParenExpr 0x5588eaa7dac0 <col:25, col:35> 'void *'
    | |   `-CStyleCastExpr 0x5588eaa7da98 <col:26, col:34> 'void *' <NullToPointer>
    | |     `-IntegerLiteral 0x5588eaa7da60 <col:34> 'int' 0
    | |-ImplicitCastExpr 0x5588eaa7dc00 <col:38> 'void *(*)(void *)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x5588eaa7dae0 <col:38> 'void *(void *)' Function 0x5588eaa75c30 'P1' 'void *(void *)'
    | `-ParenExpr 0x5588eaa7db60 <col:42, col:52> 'void *'
    |   `-CStyleCastExpr 0x5588eaa7db38 <col:43, col:51> 'void *' <NullToPointer>
    |     `-IntegerLiteral 0x5588eaa7db00 <col:51> 'int' 0
    |-DeclStmt 0x5588eaa7dc90 <line:818:3, col:17>
    | `-VarDecl 0x5588eaa7dc28 <col:3, col:13> col:13 used t300 'pthread_t':'unsigned long'
    |-CallExpr 0x5588eaa7de38 <line:819:3, col:53> 'int'
    | |-ImplicitCastExpr 0x5588eaa7de20 <col:3> 'int (*)(pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x5588eaa7dca8 <col:3> 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' Function 0x5588eaa5b488 'pthread_create' 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)'
    | |-UnaryOperator 0x5588eaa7dce8 <col:18, col:19> 'pthread_t *' prefix '&' cannot overflow
    | | `-DeclRefExpr 0x5588eaa7dcc8 <col:19> 'pthread_t':'unsigned long' lvalue Var 0x5588eaa7dc28 't300' 'pthread_t':'unsigned long'
    | |-ImplicitCastExpr 0x5588eaa7de78 <col:25, col:35> 'const pthread_attr_t *' <NullToPointer>
    | | `-ParenExpr 0x5588eaa7dd60 <col:25, col:35> 'void *'
    | |   `-CStyleCastExpr 0x5588eaa7dd38 <col:26, col:34> 'void *' <NullToPointer>
    | |     `-IntegerLiteral 0x5588eaa7dd00 <col:34> 'int' 0
    | |-ImplicitCastExpr 0x5588eaa7de90 <col:38> 'void *(*)(void *)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x5588eaa7dd80 <col:38> 'void *(void *)' Function 0x5588eaa78f20 'P2' 'void *(void *)'
    | `-ParenExpr 0x5588eaa7de00 <col:42, col:52> 'void *'
    |   `-CStyleCastExpr 0x5588eaa7ddd8 <col:43, col:51> 'void *' <NullToPointer>
    |     `-IntegerLiteral 0x5588eaa7dda0 <col:51> 'int' 0
    |-CallExpr 0x5588eaa7dee0 <line:820:3, col:27> 'void'
    | `-ImplicitCastExpr 0x5588eaa7dec8 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x5588eaa7dea8 <col:3> 'void ()' Function 0x5588eaa1ae40 '__VERIFIER_atomic_begin' 'void ()'
    |-BinaryOperator 0x5588eaa7dfb0 <line:821:3, col:41> '_Bool' '='
    | |-DeclRefExpr 0x5588eaa7df00 <col:3> '_Bool' lvalue Var 0x5588eaa74758 'main$tmp_guard0' '_Bool'
    | `-ImplicitCastExpr 0x5588eaa7df98 <col:21, col:41> '_Bool' <IntegralToBoolean>
    |   `-BinaryOperator 0x5588eaa7df78 <col:21, col:41> 'int' '=='
    |     |-ImplicitCastExpr 0x5588eaa7df60 <col:21> 'int' <LValueToRValue>
    |     | `-DeclRefExpr 0x5588eaa7df20 <col:21> 'int' lvalue Var 0x5588eaa74120 '__unbuffered_cnt' 'int'
    |     `-IntegerLiteral 0x5588eaa7df40 <col:41> 'int' 3
    |-CallExpr 0x5588eaa7e008 <line:822:3, col:25> 'void'
    | `-ImplicitCastExpr 0x5588eaa7dff0 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x5588eaa7dfd0 <col:3> 'void ()' Function 0x5588eaa1af00 '__VERIFIER_atomic_end' 'void ()'
    |-CallExpr 0x5588eaa7e080 <line:823:3, col:36> 'void'
    | |-ImplicitCastExpr 0x5588eaa7e068 <col:3> 'void (*)(int)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x5588eaa7e028 <col:3> 'void (int)' Function 0x5588eaa1a790 '__VERIFIER_assume' 'void (int)'
    | `-ImplicitCastExpr 0x5588eaa7e0c0 <col:21> 'int' <IntegralCast>
    |   `-ImplicitCastExpr 0x5588eaa7e0a8 <col:21> '_Bool' <LValueToRValue>
    |     `-DeclRefExpr 0x5588eaa7e048 <col:21> '_Bool' lvalue Var 0x5588eaa74758 'main$tmp_guard0' '_Bool'
    |-CallExpr 0x5588eaa7e110 <line:824:3, col:27> 'void'
    | `-ImplicitCastExpr 0x5588eaa7e0f8 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x5588eaa7e0d8 <col:3> 'void ()' Function 0x5588eaa1ae40 '__VERIFIER_atomic_begin' 'void ()'
    |-BinaryOperator 0x5588eaa7e3f8 <line:825:3, col:103> 'int' '='
    | |-DeclRefExpr 0x5588eaa7e130 <col:3> 'int' lvalue Var 0x5588eaa74b80 'z' 'int'
    | `-ConditionalOperator 0x5588eaa7e3c8 <col:7, col:103> 'int'
    |   |-BinaryOperator 0x5588eaa7e1f0 <col:7, col:25> 'int' '&&'
    |   | |-ImplicitCastExpr 0x5588eaa7e1a8 <col:7> 'int' <IntegralCast>
    |   | | `-ImplicitCastExpr 0x5588eaa7e190 <col:7> '_Bool' <LValueToRValue>
    |   | |   `-DeclRefExpr 0x5588eaa7e150 <col:7> '_Bool' lvalue Var 0x5588eaa75248 'z$w_buff0_used' '_Bool'
    |   | `-ImplicitCastExpr 0x5588eaa7e1d8 <col:25> 'int' <IntegralCast>
    |   |   `-ImplicitCastExpr 0x5588eaa7e1c0 <col:25> '_Bool' <LValueToRValue>
    |   |     `-DeclRefExpr 0x5588eaa7e170 <col:25> '_Bool' lvalue Var 0x5588eaa74d10 'z$r_buff0_thd0' '_Bool'
    |   |-ImplicitCastExpr 0x5588eaa7e3b0 <col:42> 'int' <LValueToRValue>
    |   | `-DeclRefExpr 0x5588eaa7e210 <col:42> 'int' lvalue Var 0x5588eaa751d0 'z$w_buff0' 'int'
    |   `-ParenExpr 0x5588eaa7e390 <col:54, col:103> 'int'
    |     `-ConditionalOperator 0x5588eaa7e360 <col:55, col:102> 'int'
    |       |-BinaryOperator 0x5588eaa7e2d0 <col:55, col:73> 'int' '&&'
    |       | |-ImplicitCastExpr 0x5588eaa7e288 <col:55> 'int' <IntegralCast>
    |       | | `-ImplicitCastExpr 0x5588eaa7e270 <col:55> '_Bool' <LValueToRValue>
    |       | |   `-DeclRefExpr 0x5588eaa7e230 <col:55> '_Bool' lvalue Var 0x5588eaa75340 'z$w_buff1_used' '_Bool'
    |       | `-ImplicitCastExpr 0x5588eaa7e2b8 <col:73> 'int' <IntegralCast>
    |       |   `-ImplicitCastExpr 0x5588eaa7e2a0 <col:73> '_Bool' <LValueToRValue>
    |       |     `-DeclRefExpr 0x5588eaa7e250 <col:73> '_Bool' lvalue Var 0x5588eaa74ef0 'z$r_buff1_thd0' '_Bool'
    |       |-ImplicitCastExpr 0x5588eaa7e330 <col:90> 'int' <LValueToRValue>
    |       | `-DeclRefExpr 0x5588eaa7e2f0 <col:90> 'int' lvalue Var 0x5588eaa752c8 'z$w_buff1' 'int'
    |       `-ImplicitCastExpr 0x5588eaa7e348 <col:102> 'int' <LValueToRValue>
    |         `-DeclRefExpr 0x5588eaa7e310 <col:102> 'int' lvalue Var 0x5588eaa74b80 'z' 'int'
    |-BinaryOperator 0x5588eaa7e600 <line:826:3, col:66> '_Bool' '='
    | |-DeclRefExpr 0x5588eaa7e418 <col:3> '_Bool' lvalue Var 0x5588eaa75248 'z$w_buff0_used' '_Bool'
    | `-ImplicitCastExpr 0x5588eaa7e5e8 <col:20, col:66> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x5588eaa7e5b8 <col:20, col:66> 'int'
    |     |-BinaryOperator 0x5588eaa7e4d8 <col:20, col:38> 'int' '&&'
    |     | |-ImplicitCastExpr 0x5588eaa7e490 <col:20> 'int' <IntegralCast>
    |     | | `-ImplicitCastExpr 0x5588eaa7e478 <col:20> '_Bool' <LValueToRValue>
    |     | |   `-DeclRefExpr 0x5588eaa7e438 <col:20> '_Bool' lvalue Var 0x5588eaa75248 'z$w_buff0_used' '_Bool'
    |     | `-ImplicitCastExpr 0x5588eaa7e4c0 <col:38> 'int' <IntegralCast>
    |     |   `-ImplicitCastExpr 0x5588eaa7e4a8 <col:38> '_Bool' <LValueToRValue>
    |     |     `-DeclRefExpr 0x5588eaa7e458 <col:38> '_Bool' lvalue Var 0x5588eaa74d10 'z$r_buff0_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x5588eaa7e570 <col:55, col:62> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x5588eaa7e528 <col:55, col:62> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x5588eaa7e4f8 <col:62> 'int' 0
    |     `-ImplicitCastExpr 0x5588eaa7e5a0 <col:66> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x5588eaa7e588 <col:66> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x5588eaa7e550 <col:66> '_Bool' lvalue Var 0x5588eaa75248 'z$w_buff0_used' '_Bool'
    |-BinaryOperator 0x5588eaa7e8e8 <line:827:3, col:102> '_Bool' '='
    | |-DeclRefExpr 0x5588eaa7e620 <col:3> '_Bool' lvalue Var 0x5588eaa75340 'z$w_buff1_used' '_Bool'
    | `-ImplicitCastExpr 0x5588eaa7e8d0 <col:20, col:102> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x5588eaa7e8a0 <col:20, col:102> 'int'
    |     |-BinaryOperator 0x5588eaa7e7c0 <col:20, col:74> 'int' '||'
    |     | |-BinaryOperator 0x5588eaa7e6e0 <col:20, col:38> 'int' '&&'
    |     | | |-ImplicitCastExpr 0x5588eaa7e698 <col:20> 'int' <IntegralCast>
    |     | | | `-ImplicitCastExpr 0x5588eaa7e680 <col:20> '_Bool' <LValueToRValue>
    |     | | |   `-DeclRefExpr 0x5588eaa7e640 <col:20> '_Bool' lvalue Var 0x5588eaa75248 'z$w_buff0_used' '_Bool'
    |     | | `-ImplicitCastExpr 0x5588eaa7e6c8 <col:38> 'int' <IntegralCast>
    |     | |   `-ImplicitCastExpr 0x5588eaa7e6b0 <col:38> '_Bool' <LValueToRValue>
    |     | |     `-DeclRefExpr 0x5588eaa7e660 <col:38> '_Bool' lvalue Var 0x5588eaa74d10 'z$r_buff0_thd0' '_Bool'
    |     | `-BinaryOperator 0x5588eaa7e7a0 <col:56, col:74> 'int' '&&'
    |     |   |-ImplicitCastExpr 0x5588eaa7e758 <col:56> 'int' <IntegralCast>
    |     |   | `-ImplicitCastExpr 0x5588eaa7e740 <col:56> '_Bool' <LValueToRValue>
    |     |   |   `-DeclRefExpr 0x5588eaa7e700 <col:56> '_Bool' lvalue Var 0x5588eaa75340 'z$w_buff1_used' '_Bool'
    |     |   `-ImplicitCastExpr 0x5588eaa7e788 <col:74> 'int' <IntegralCast>
    |     |     `-ImplicitCastExpr 0x5588eaa7e770 <col:74> '_Bool' <LValueToRValue>
    |     |       `-DeclRefExpr 0x5588eaa7e720 <col:74> '_Bool' lvalue Var 0x5588eaa74ef0 'z$r_buff1_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x5588eaa7e858 <col:91, col:98> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x5588eaa7e810 <col:91, col:98> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x5588eaa7e7e0 <col:98> 'int' 0
    |     `-ImplicitCastExpr 0x5588eaa7e888 <col:102> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x5588eaa7e870 <col:102> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x5588eaa7e838 <col:102> '_Bool' lvalue Var 0x5588eaa75340 'z$w_buff1_used' '_Bool'
    |-BinaryOperator 0x5588eaa7eaf0 <line:828:3, col:66> '_Bool' '='
    | |-DeclRefExpr 0x5588eaa7e908 <col:3> '_Bool' lvalue Var 0x5588eaa74d10 'z$r_buff0_thd0' '_Bool'
    | `-ImplicitCastExpr 0x5588eaa7ead8 <col:20, col:66> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x5588eaa7eaa8 <col:20, col:66> 'int'
    |     |-BinaryOperator 0x5588eaa7e9c8 <col:20, col:38> 'int' '&&'
    |     | |-ImplicitCastExpr 0x5588eaa7e980 <col:20> 'int' <IntegralCast>
    |     | | `-ImplicitCastExpr 0x5588eaa7e968 <col:20> '_Bool' <LValueToRValue>
    |     | |   `-DeclRefExpr 0x5588eaa7e928 <col:20> '_Bool' lvalue Var 0x5588eaa75248 'z$w_buff0_used' '_Bool'
    |     | `-ImplicitCastExpr 0x5588eaa7e9b0 <col:38> 'int' <IntegralCast>
    |     |   `-ImplicitCastExpr 0x5588eaa7e998 <col:38> '_Bool' <LValueToRValue>
    |     |     `-DeclRefExpr 0x5588eaa7e948 <col:38> '_Bool' lvalue Var 0x5588eaa74d10 'z$r_buff0_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x5588eaa7ea60 <col:55, col:62> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x5588eaa7ea18 <col:55, col:62> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x5588eaa7e9e8 <col:62> 'int' 0
    |     `-ImplicitCastExpr 0x5588eaa7ea90 <col:66> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x5588eaa7ea78 <col:66> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x5588eaa7ea40 <col:66> '_Bool' lvalue Var 0x5588eaa74d10 'z$r_buff0_thd0' '_Bool'
    |-BinaryOperator 0x5588eaa7edf0 <line:829:3, col:102> '_Bool' '='
    | |-DeclRefExpr 0x5588eaa7eb10 <col:3> '_Bool' lvalue Var 0x5588eaa74ef0 'z$r_buff1_thd0' '_Bool'
    | `-ImplicitCastExpr 0x5588eaa7edd8 <col:20, col:102> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x5588eaa7eda8 <col:20, col:102> 'int'
    |     |-BinaryOperator 0x5588eaa7ecc8 <col:20, col:74> 'int' '||'
    |     | |-BinaryOperator 0x5588eaa7ebe8 <col:20, col:38> 'int' '&&'
    |     | | |-ImplicitCastExpr 0x5588eaa7eba0 <col:20> 'int' <IntegralCast>
    |     | | | `-ImplicitCastExpr 0x5588eaa7eb70 <col:20> '_Bool' <LValueToRValue>
    |     | | |   `-DeclRefExpr 0x5588eaa7eb30 <col:20> '_Bool' lvalue Var 0x5588eaa75248 'z$w_buff0_used' '_Bool'
    |     | | `-ImplicitCastExpr 0x5588eaa7ebd0 <col:38> 'int' <IntegralCast>
    |     | |   `-ImplicitCastExpr 0x5588eaa7ebb8 <col:38> '_Bool' <LValueToRValue>
    |     | |     `-DeclRefExpr 0x5588eaa7eb50 <col:38> '_Bool' lvalue Var 0x5588eaa74d10 'z$r_buff0_thd0' '_Bool'
    |     | `-BinaryOperator 0x5588eaa7eca8 <col:56, col:74> 'int' '&&'
    |     |   |-ImplicitCastExpr 0x5588eaa7ec60 <col:56> 'int' <IntegralCast>
    |     |   | `-ImplicitCastExpr 0x5588eaa7ec48 <col:56> '_Bool' <LValueToRValue>
    |     |   |   `-DeclRefExpr 0x5588eaa7ec08 <col:56> '_Bool' lvalue Var 0x5588eaa75340 'z$w_buff1_used' '_Bool'
    |     |   `-ImplicitCastExpr 0x5588eaa7ec90 <col:74> 'int' <IntegralCast>
    |     |     `-ImplicitCastExpr 0x5588eaa7ec78 <col:74> '_Bool' <LValueToRValue>
    |     |       `-DeclRefExpr 0x5588eaa7ec28 <col:74> '_Bool' lvalue Var 0x5588eaa74ef0 'z$r_buff1_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x5588eaa7ed60 <col:91, col:98> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x5588eaa7ed18 <col:91, col:98> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x5588eaa7ece8 <col:98> 'int' 0
    |     `-ImplicitCastExpr 0x5588eaa7ed90 <col:102> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x5588eaa7ed78 <col:102> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x5588eaa7ed40 <col:102> '_Bool' lvalue Var 0x5588eaa74ef0 'z$r_buff1_thd0' '_Bool'
    |-CallExpr 0x5588eaa7ee48 <line:830:3, col:25> 'void'
    | `-ImplicitCastExpr 0x5588eaa7ee30 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x5588eaa7ee10 <col:3> 'void ()' Function 0x5588eaa1af00 '__VERIFIER_atomic_end' 'void ()'
    |-CallExpr 0x5588eaa7eea0 <line:831:3, col:27> 'void'
    | `-ImplicitCastExpr 0x5588eaa7ee88 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x5588eaa7ee68 <col:3> 'void ()' Function 0x5588eaa1ae40 '__VERIFIER_atomic_begin' 'void ()'
    |-BinaryOperator 0x5588eaa7f208 <line:832:3, col:141> '_Bool' '='
    | |-DeclRefExpr 0x5588eaa7eec0 <col:3> '_Bool' lvalue Var 0x5588eaa747d0 'main$tmp_guard1' '_Bool'
    | `-ImplicitCastExpr 0x5588eaa7f1f0 <col:21, col:141> '_Bool' <IntegralToBoolean>
    |   `-UnaryOperator 0x5588eaa7f1d8 <col:21, col:141> 'int' prefix '!' cannot overflow
    |     `-ParenExpr 0x5588eaa7f1b8 <col:22, col:141> 'int'
    |       `-BinaryOperator 0x5588eaa7f198 <col:23, col:140> 'int' '&&'
    |         |-BinaryOperator 0x5588eaa7f100 <col:23, col:112> 'int' '&&'
    |         | |-BinaryOperator 0x5588eaa7f068 <col:23, col:84> 'int' '&&'
    |         | | |-BinaryOperator 0x5588eaa7efd0 <col:23, col:56> 'int' '&&'
    |         | | | |-BinaryOperator 0x5588eaa7ef38 <col:23, col:28> 'int' '=='
    |         | | | | |-ImplicitCastExpr 0x5588eaa7ef20 <col:23> 'int' <LValueToRValue>
    |         | | | | | `-DeclRefExpr 0x5588eaa7eee0 <col:23> 'int' lvalue Var 0x5588eaa748d0 'x' 'int'
    |         | | | | `-IntegerLiteral 0x5588eaa7ef00 <col:28> 'int' 2
    |         | | | `-BinaryOperator 0x5588eaa7efb0 <col:33, col:56> 'int' '=='
    |         | | |   |-ImplicitCastExpr 0x5588eaa7ef98 <col:33> 'int' <LValueToRValue>
    |         | | |   | `-DeclRefExpr 0x5588eaa7ef58 <col:33> 'int' lvalue Var 0x5588eaa74240 '__unbuffered_p1_EAX' 'int'
    |         | | |   `-IntegerLiteral 0x5588eaa7ef78 <col:56> 'int' 1
    |         | | `-BinaryOperator 0x5588eaa7f048 <col:61, col:84> 'int' '=='
    |         | |   |-ImplicitCastExpr 0x5588eaa7f030 <col:61> 'int' <LValueToRValue>
    |         | |   | `-DeclRefExpr 0x5588eaa7eff0 <col:61> 'int' lvalue Var 0x5588eaa74360 '__unbuffered_p1_EBX' 'int'
    |         | |   `-IntegerLiteral 0x5588eaa7f010 <col:84> 'int' 0
    |         | `-BinaryOperator 0x5588eaa7f0e0 <col:89, col:112> 'int' '=='
    |         |   |-ImplicitCastExpr 0x5588eaa7f0c8 <col:89> 'int' <LValueToRValue>
    |         |   | `-DeclRefExpr 0x5588eaa7f088 <col:89> 'int' lvalue Var 0x5588eaa74480 '__unbuffered_p2_EAX' 'int'
    |         |   `-IntegerLiteral 0x5588eaa7f0a8 <col:112> 'int' 1
    |         `-BinaryOperator 0x5588eaa7f178 <col:117, col:140> 'int' '=='
    |           |-ImplicitCastExpr 0x5588eaa7f160 <col:117> 'int' <LValueToRValue>
    |           | `-DeclRefExpr 0x5588eaa7f120 <col:117> 'int' lvalue Var 0x5588eaa745a0 '__unbuffered_p2_EBX' 'int'
    |           `-IntegerLiteral 0x5588eaa7f140 <col:140> 'int' 0
    |-CallExpr 0x5588eaa7f260 <line:833:3, col:25> 'void'
    | `-ImplicitCastExpr 0x5588eaa7f248 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x5588eaa7f228 <col:3> 'void ()' Function 0x5588eaa1af00 '__VERIFIER_atomic_end' 'void ()'
    |-CallExpr 0x5588eaa7f2d8 <line:834:3, col:36> 'void'
    | |-ImplicitCastExpr 0x5588eaa7f2c0 <col:3> 'void (*)(int)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x5588eaa7f280 <col:3> 'void (int)' Function 0x5588eaa1abc8 '__VERIFIER_assert' 'void (int)'
    | `-ImplicitCastExpr 0x5588eaa7f318 <col:21> 'int' <IntegralCast>
    |   `-ImplicitCastExpr 0x5588eaa7f300 <col:21> '_Bool' <LValueToRValue>
    |     `-DeclRefExpr 0x5588eaa7f2a0 <col:21> '_Bool' lvalue Var 0x5588eaa747d0 'main$tmp_guard1' '_Bool'
    `-ReturnStmt 0x5588eaa7f350 <line:835:3, col:10>
      `-IntegerLiteral 0x5588eaa7f330 <col:10> 'int' 0
