TranslationUnitDecl 0x557cf3475e18 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x557cf34766d8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x557cf34763b0 '__int128'
|-TypedefDecl 0x557cf3476748 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x557cf34763d0 'unsigned __int128'
|-TypedefDecl 0x557cf3476a50 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x557cf3476820 'struct __NSConstantString_tag'
|   `-Record 0x557cf34767a0 '__NSConstantString_tag'
|-TypedefDecl 0x557cf3476af8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x557cf3476ab0 'char *'
|   `-BuiltinType 0x557cf3475eb0 'char'
|-TypedefDecl 0x557cf34b5650 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'struct __va_list_tag [1]'
| `-ConstantArrayType 0x557cf3476d90 'struct __va_list_tag [1]' 1 
|   `-RecordType 0x557cf3476bd0 'struct __va_list_tag'
|     `-Record 0x557cf3476b50 '__va_list_tag'
|-FunctionDecl 0x557cf34b5770 <./split_4/rfi008_pso.oepc_false-unreach-call.i:1:1, col:41> col:14 used __VERIFIER_nondet_bool '_Bool (void)' extern
|-FunctionDecl 0x557cf34b5940 <line:2:1, col:34> col:13 used __VERIFIER_assume 'void (int)' extern
| `-ParmVarDecl 0x557cf34b5870 <col:31> col:34 'int'
|-FunctionDecl 0x557cf34b5ab8 <line:3:1, col:45> col:15 used __VERIFIER_nondet_pointer 'void *(void)' extern
|-FunctionDecl 0x557cf34b5be0 <line:4:1, col:61> col:13 used __VERIFIER_error 'void () __attribute__((noreturn))' extern
|-FunctionDecl 0x557cf34b5d28 <line:5:1, col:99> col:6 used __VERIFIER_assert 'void (int)'
| |-ParmVarDecl 0x557cf34b5c98 <col:24, col:28> col:28 used expression 'int'
| `-CompoundStmt 0x557cf34b5f58 <col:40, col:99>
|   |-IfStmt 0x557cf34b5f28 <col:42, col:88>
|   | |-UnaryOperator 0x557cf34b5e08 <col:46, col:47> 'int' prefix '!' cannot overflow
|   | | `-ImplicitCastExpr 0x557cf34b5df0 <col:47> 'int' <LValueToRValue>
|   | |   `-DeclRefExpr 0x557cf34b5dd0 <col:47> 'int' lvalue ParmVar 0x557cf34b5c98 'expression' 'int'
|   | `-CompoundStmt 0x557cf34b5f10 <col:59, col:88>
|   |   `-LabelStmt 0x557cf34b5ef8 <col:61, col:85> 'ERROR'
|   |     `-CallExpr 0x557cf34b5e88 <col:68, col:85> 'void'
|   |       `-ImplicitCastExpr 0x557cf34b5e70 <col:68> 'void (*)() __attribute__((noreturn))' <FunctionToPointerDecay>
|   |         `-DeclRefExpr 0x557cf34b5e20 <col:68> 'void () __attribute__((noreturn))' Function 0x557cf34b5be0 '__VERIFIER_error' 'void () __attribute__((noreturn))'
|   |-NullStmt 0x557cf34b5f40 <col:89>
|   `-ReturnStmt 0x557cf34b5f48 <col:91>
|-FunctionDecl 0x557cf34b5fa0 <line:6:1, col:37> col:13 used __VERIFIER_atomic_begin 'void ()' extern
|-FunctionDecl 0x557cf34b6060 <line:7:1, col:35> col:13 used __VERIFIER_atomic_end 'void ()' extern
|-FunctionDecl 0x557cf34b63e0 <line:9:1, line:11:76> line:9:13 __assert_fail 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x557cf34b6118 <col:28, col:40> col:40 __assertion 'const char *'
| |-ParmVarDecl 0x557cf34b6198 <col:53, col:65> col:65 __file 'const char *'
| |-ParmVarDecl 0x557cf34b6218 <line:10:7, col:20> col:20 __line 'unsigned int'
| |-ParmVarDecl 0x557cf34b6298 <col:28, col:40> col:40 __function 'const char *'
| `-NoThrowAttr 0x557cf34b64a0 <line:11:22>
|-FunctionDecl 0x557cf34dc520 <line:12:1, line:14:76> line:12:13 __assert_perror_fail 'void (int, const char *, unsigned int, const char *) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x557cf34b6510 <col:35, col:39> col:39 __errnum 'int'
| |-ParmVarDecl 0x557cf34b6590 <col:49, col:61> col:61 __file 'const char *'
| |-ParmVarDecl 0x557cf34dc350 <line:13:7, col:20> col:20 __line 'unsigned int'
| |-ParmVarDecl 0x557cf34dc3d0 <col:28, col:40> col:40 __function 'const char *'
| `-NoThrowAttr 0x557cf34dc5e0 <line:14:22>
|-FunctionDecl 0x557cf34dc890 <line:15:1, line:16:76> line:15:13 __assert 'void (const char *, const char *, int) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x557cf34dc650 <col:23, col:35> col:35 __assertion 'const char *'
| |-ParmVarDecl 0x557cf34dc6d0 <col:48, col:60> col:60 __file 'const char *'
| |-ParmVarDecl 0x557cf34dc750 <col:68, col:72> col:72 __line 'int'
| `-NoThrowAttr 0x557cf34dc948 <line:16:22>
|-TypedefDecl 0x557cf34dc9b8 <line:18:1, col:23> col:23 __u_char 'unsigned char'
| `-BuiltinType 0x557cf3475f70 'unsigned char'
|-TypedefDecl 0x557cf34dca28 <line:19:1, col:28> col:28 __u_short 'unsigned short'
| `-BuiltinType 0x557cf3475f90 'unsigned short'
|-TypedefDecl 0x557cf34dca98 <line:20:1, col:22> col:22 __u_int 'unsigned int'
| `-BuiltinType 0x557cf3475fb0 'unsigned int'
|-TypedefDecl 0x557cf34dcb08 <line:21:1, col:27> col:27 __u_long 'unsigned long'
| `-BuiltinType 0x557cf3475fd0 'unsigned long'
|-TypedefDecl 0x557cf34dcb78 <line:22:1, col:21> col:21 __int8_t 'signed char'
| `-BuiltinType 0x557cf3475ed0 'signed char'
|-TypedefDecl 0x557cf34dcbe8 <line:23:1, col:23> col:23 __uint8_t 'unsigned char'
| `-BuiltinType 0x557cf3475f70 'unsigned char'
|-TypedefDecl 0x557cf34dcc58 <line:24:1, col:26> col:26 __int16_t 'short'
| `-BuiltinType 0x557cf3475ef0 'short'
|-TypedefDecl 0x557cf34dccc8 <line:25:1, col:28> col:28 __uint16_t 'unsigned short'
| `-BuiltinType 0x557cf3475f90 'unsigned short'
|-TypedefDecl 0x557cf34dcd38 <line:26:1, col:20> col:20 __int32_t 'int'
| `-BuiltinType 0x557cf3475f10 'int'
|-TypedefDecl 0x557cf34dcda8 <line:27:1, col:22> col:22 __uint32_t 'unsigned int'
| `-BuiltinType 0x557cf3475fb0 'unsigned int'
|-TypedefDecl 0x557cf34dce18 <line:28:1, col:25> col:25 __int64_t 'long'
| `-BuiltinType 0x557cf3475f30 'long'
|-TypedefDecl 0x557cf34dce88 <line:29:1, col:27> col:27 referenced __uint64_t 'unsigned long'
| `-BuiltinType 0x557cf3475fd0 'unsigned long'
|-TypedefDecl 0x557cf34dcef8 <line:30:1, col:18> col:18 referenced __quad_t 'long'
| `-BuiltinType 0x557cf3475f30 'long'
|-TypedefDecl 0x557cf34dcf68 <line:31:1, col:27> col:27 __u_quad_t 'unsigned long'
| `-BuiltinType 0x557cf3475fd0 'unsigned long'
|-TypedefDecl 0x557cf34dcfd8 <line:32:1, col:27> col:27 __dev_t 'unsigned long'
| `-BuiltinType 0x557cf3475fd0 'unsigned long'
|-TypedefDecl 0x557cf34dd048 <line:33:1, col:22> col:22 __uid_t 'unsigned int'
| `-BuiltinType 0x557cf3475fb0 'unsigned int'
|-TypedefDecl 0x557cf34dd0b8 <line:34:1, col:22> col:22 __gid_t 'unsigned int'
| `-BuiltinType 0x557cf3475fb0 'unsigned int'
|-TypedefDecl 0x557cf34dd128 <line:35:1, col:27> col:27 __ino_t 'unsigned long'
| `-BuiltinType 0x557cf3475fd0 'unsigned long'
|-TypedefDecl 0x557cf34dd198 <line:36:1, col:27> col:27 __ino64_t 'unsigned long'
| `-BuiltinType 0x557cf3475fd0 'unsigned long'
|-TypedefDecl 0x557cf34dd208 <line:37:1, col:22> col:22 __mode_t 'unsigned int'
| `-BuiltinType 0x557cf3475fb0 'unsigned int'
|-TypedefDecl 0x557cf34dd278 <line:38:1, col:27> col:27 __nlink_t 'unsigned long'
| `-BuiltinType 0x557cf3475fd0 'unsigned long'
|-TypedefDecl 0x557cf34dd2e8 <line:39:1, col:18> col:18 __off_t 'long'
| `-BuiltinType 0x557cf3475f30 'long'
|-TypedefDecl 0x557cf34dd378 <line:40:1, col:18> col:18 referenced __off64_t 'long'
| `-BuiltinType 0x557cf3475f30 'long'
|-TypedefDecl 0x557cf34dd3e8 <line:41:1, col:13> col:13 referenced __pid_t 'int'
| `-BuiltinType 0x557cf3475f10 'int'
|-RecordDecl 0x557cf34dd440 <line:42:9, col:32> col:9 struct definition
| `-FieldDecl 0x557cf34dd588 <col:18, col:29> col:22 __val 'int [2]'
|-TypedefDecl 0x557cf34dd640 <col:1, col:34> col:34 __fsid_t 'struct __fsid_t':'__fsid_t'
| `-ElaboratedType 0x557cf34dd5e0 'struct __fsid_t' sugar
|   `-RecordType 0x557cf34dd4c0 '__fsid_t'
|     `-Record 0x557cf34dd440 ''
|-TypedefDecl 0x557cf34dd6c8 <line:43:1, col:18> col:18 referenced __clock_t 'long'
| `-BuiltinType 0x557cf3475f30 'long'
|-TypedefDecl 0x557cf34dd738 <line:44:1, col:27> col:27 __rlim_t 'unsigned long'
| `-BuiltinType 0x557cf3475fd0 'unsigned long'
|-TypedefDecl 0x557cf34dd7a8 <line:45:1, col:27> col:27 __rlim64_t 'unsigned long'
| `-BuiltinType 0x557cf3475fd0 'unsigned long'
|-TypedefDecl 0x557cf34dd818 <line:46:1, col:22> col:22 __id_t 'unsigned int'
| `-BuiltinType 0x557cf3475fb0 'unsigned int'
|-TypedefDecl 0x557cf34dd888 <line:47:1, col:18> col:18 referenced __time_t 'long'
| `-BuiltinType 0x557cf3475f30 'long'
|-TypedefDecl 0x557cf34dd8f8 <line:48:1, col:22> col:22 __useconds_t 'unsigned int'
| `-BuiltinType 0x557cf3475fb0 'unsigned int'
|-TypedefDecl 0x557cf34dd968 <line:49:1, col:18> col:18 __suseconds_t 'long'
| `-BuiltinType 0x557cf3475f30 'long'
|-TypedefDecl 0x557cf34dd9d8 <line:50:1, col:13> col:13 __daddr_t 'int'
| `-BuiltinType 0x557cf3475f10 'int'
|-TypedefDecl 0x557cf34dda48 <line:51:1, col:13> col:13 __key_t 'int'
| `-BuiltinType 0x557cf3475f10 'int'
|-TypedefDecl 0x557cf34ddab8 <line:52:1, col:13> col:13 referenced __clockid_t 'int'
| `-BuiltinType 0x557cf3475f10 'int'
|-TypedefDecl 0x557cf34ddb28 <line:53:1, col:16> col:16 referenced __timer_t 'void *'
| `-PointerType 0x557cf3476630 'void *'
|   `-BuiltinType 0x557cf3475e70 'void'
|-TypedefDecl 0x557cf34ddb98 <line:54:1, col:18> col:18 __blksize_t 'long'
| `-BuiltinType 0x557cf3475f30 'long'
|-TypedefDecl 0x557cf34ddc08 <line:55:1, col:18> col:18 __blkcnt_t 'long'
| `-BuiltinType 0x557cf3475f30 'long'
|-TypedefDecl 0x557cf34ddc78 <line:56:1, col:18> col:18 __blkcnt64_t 'long'
| `-BuiltinType 0x557cf3475f30 'long'
|-TypedefDecl 0x557cf34ddce8 <line:57:1, col:27> col:27 __fsblkcnt_t 'unsigned long'
| `-BuiltinType 0x557cf3475fd0 'unsigned long'
|-TypedefDecl 0x557cf34ddd58 <line:58:1, col:27> col:27 __fsblkcnt64_t 'unsigned long'
| `-BuiltinType 0x557cf3475fd0 'unsigned long'
|-TypedefDecl 0x557cf34dddc8 <line:59:1, col:27> col:27 __fsfilcnt_t 'unsigned long'
| `-BuiltinType 0x557cf3475fd0 'unsigned long'
|-TypedefDecl 0x557cf34dde38 <line:60:1, col:27> col:27 __fsfilcnt64_t 'unsigned long'
| `-BuiltinType 0x557cf3475fd0 'unsigned long'
|-TypedefDecl 0x557cf34ddea8 <line:61:1, col:18> col:18 __fsword_t 'long'
| `-BuiltinType 0x557cf3475f30 'long'
|-TypedefDecl 0x557cf34ddf18 <line:62:1, col:18> col:18 __ssize_t 'long'
| `-BuiltinType 0x557cf3475f30 'long'
|-TypedefDecl 0x557cf34ddf88 <line:63:1, col:18> col:18 referenced __syscall_slong_t 'long'
| `-BuiltinType 0x557cf3475f30 'long'
|-TypedefDecl 0x557cf34ddff8 <line:64:1, col:27> col:27 __syscall_ulong_t 'unsigned long'
| `-BuiltinType 0x557cf3475fd0 'unsigned long'
|-TypedefDecl 0x557cf34de088 <line:65:1, col:19> col:19 __loff_t '__off64_t':'long'
| `-TypedefType 0x557cf34de050 '__off64_t' sugar
|   |-Typedef 0x557cf34dd378 '__off64_t'
|   `-BuiltinType 0x557cf3475f30 'long'
|-TypedefDecl 0x557cf34de180 <line:66:1, col:19> col:19 __qaddr_t '__quad_t *'
| `-PointerType 0x557cf34de140 '__quad_t *'
|   `-TypedefType 0x557cf34de0e0 '__quad_t' sugar
|     |-Typedef 0x557cf34dcef8 '__quad_t'
|     `-BuiltinType 0x557cf3475f30 'long'
|-TypedefDecl 0x557cf34de1f0 <line:67:1, col:15> col:15 __caddr_t 'char *'
| `-PointerType 0x557cf3476ab0 'char *'
|   `-BuiltinType 0x557cf3475eb0 'char'
|-TypedefDecl 0x557cf34de260 <line:68:1, col:18> col:18 __intptr_t 'long'
| `-BuiltinType 0x557cf3475f30 'long'
|-TypedefDecl 0x557cf34de2d0 <line:69:1, col:22> col:22 __socklen_t 'unsigned int'
| `-BuiltinType 0x557cf3475fb0 'unsigned int'
|-FunctionDecl 0x557cf34df458 <line:70:1, line:74:1> line:71:1 __bswap_32 'unsigned int (unsigned int)' static inline
| |-ParmVarDecl 0x557cf34df380 <col:13, col:26> col:26 used __bsx 'unsigned int'
| `-CompoundStmt 0x557cf34df768 <line:72:1, line:74:1>
|   `-ReturnStmt 0x557cf34df758 <line:73:3, col:34>
|     `-CallExpr 0x557cf34df718 <col:10, col:34> 'unsigned int'
|       |-ImplicitCastExpr 0x557cf34df700 <col:10> 'unsigned int (*)(unsigned int)' <BuiltinFnToFnPtr>
|       | `-DeclRefExpr 0x557cf34df690 <col:10> '<builtin fn type>' Function 0x557cf34df500 '__builtin_bswap32' 'unsigned int (unsigned int)'
|       `-ImplicitCastExpr 0x557cf34df740 <col:29> 'unsigned int' <LValueToRValue>
|         `-DeclRefExpr 0x557cf34df6b0 <col:29> 'unsigned int' lvalue ParmVar 0x557cf34df380 '__bsx' 'unsigned int'
|-FunctionDecl 0x557cf34df500 <col:10> col:10 implicit used __builtin_bswap32 'unsigned int (unsigned int)' extern
| |-ParmVarDecl 0x557cf34df5a0 <<invalid sloc>> <invalid sloc> 'unsigned int'
| |-NoThrowAttr 0x557cf34df610 <col:10> Implicit
| `-ConstAttr 0x557cf34df668 <col:10> Implicit
|-FunctionDecl 0x557cf34df8c0 <line:75:1, line:79:1> line:76:1 __bswap_64 '__uint64_t (__uint64_t)' static inline
| |-ParmVarDecl 0x557cf34df7b8 <col:13, col:24> col:24 used __bsx '__uint64_t':'unsigned long'
| `-CompoundStmt 0x557cf34dfbd8 <line:77:1, line:79:1>
|   `-ReturnStmt 0x557cf34dfbc8 <line:78:3, col:34>
|     `-CallExpr 0x557cf34dfb88 <col:10, col:34> 'unsigned long'
|       |-ImplicitCastExpr 0x557cf34dfb70 <col:10> 'unsigned long (*)(unsigned long)' <BuiltinFnToFnPtr>
|       | `-DeclRefExpr 0x557cf34dfaf8 <col:10> '<builtin fn type>' Function 0x557cf34df968 '__builtin_bswap64' 'unsigned long (unsigned long)'
|       `-ImplicitCastExpr 0x557cf34dfbb0 <col:29> '__uint64_t':'unsigned long' <LValueToRValue>
|         `-DeclRefExpr 0x557cf34dfb18 <col:29> '__uint64_t':'unsigned long' lvalue ParmVar 0x557cf34df7b8 '__bsx' '__uint64_t':'unsigned long'
|-FunctionDecl 0x557cf34df968 <col:10> col:10 implicit used __builtin_bswap64 'unsigned long (unsigned long)' extern
| |-ParmVarDecl 0x557cf34dfa08 <<invalid sloc>> <invalid sloc> 'unsigned long'
| |-NoThrowAttr 0x557cf34dfa78 <col:10> Implicit
| `-ConstAttr 0x557cf34dfad0 <col:10> Implicit
|-TypedefDecl 0x557cf34dfc08 <line:80:1, col:27> col:27 referenced size_t 'unsigned long'
| `-BuiltinType 0x557cf3475fd0 'unsigned long'
|-TypedefDecl 0x557cf34dfc98 <line:82:1, col:18> col:18 referenced time_t '__time_t':'long'
| `-TypedefType 0x557cf34dfc60 '__time_t' sugar
|   |-Typedef 0x557cf34dd888 '__time_t'
|   `-BuiltinType 0x557cf3475f30 'long'
|-RecordDecl 0x557cf34dfcf0 <line:85:1, line:89:3> line:85:8 struct timespec definition
| |-FieldDecl 0x557cf34dfda8 <line:87:5, col:14> col:14 tv_sec '__time_t':'long'
| `-FieldDecl 0x557cf34dfe38 <line:88:5, col:23> col:23 tv_nsec '__syscall_slong_t':'long'
|-TypedefDecl 0x557cf34dfec8 <line:90:1, col:17> col:17 referenced pid_t '__pid_t':'int'
| `-TypedefType 0x557cf34dfe90 '__pid_t' sugar
|   |-Typedef 0x557cf34dd3e8 '__pid_t'
|   `-BuiltinType 0x557cf3475f10 'int'
|-RecordDecl 0x557cf34dff20 <line:91:1, line:94:3> line:91:8 struct sched_param definition
| `-FieldDecl 0x557cf34dffe0 <line:93:5, col:9> col:9 __sched_priority 'int'
|-RecordDecl 0x557cf34e0030 <line:97:1, line:100:3> line:97:8 struct __sched_param definition
| `-FieldDecl 0x557cf34e00f0 <line:99:5, col:9> col:9 __sched_priority 'int'
|-TypedefDecl 0x557cf34e0158 <line:101:1, col:27> col:27 referenced __cpu_mask 'unsigned long'
| `-BuiltinType 0x557cf3475fd0 'unsigned long'
|-RecordDecl 0x557cf34e01b0 <line:102:9, line:105:1> line:102:9 struct definition
| `-FieldDecl 0x557cf34e1480 <line:104:3, col:53> col:14 __bits '__cpu_mask [64]'
|-TypedefDecl 0x557cf34e1530 <line:102:1, line:105:3> col:3 referenced cpu_set_t 'struct cpu_set_t':'cpu_set_t'
| `-ElaboratedType 0x557cf34e14d0 'struct cpu_set_t' sugar
|   `-RecordType 0x557cf34e0230 'cpu_set_t'
|     `-Record 0x557cf34e01b0 ''
|-FunctionDecl 0x557cf34e1808 <line:107:1, line:108:42> line:107:12 __sched_cpucount 'int (size_t, const cpu_set_t *)' extern
| |-ParmVarDecl 0x557cf34e15d8 <col:30, col:37> col:37 __setsize 'size_t':'unsigned long'
| |-ParmVarDecl 0x557cf34e16e0 <col:48, col:65> col:65 __setp 'const cpu_set_t *'
| `-NoThrowAttr 0x557cf34e18b8 <line:108:19>
|-FunctionDecl 0x557cf34e1a90 <line:109:1, col:92> col:19 __sched_cpualloc 'cpu_set_t *(size_t)' extern
| |-ParmVarDecl 0x557cf34e1920 <col:37, col:44> col:44 __count 'size_t':'unsigned long'
| `-NoThrowAttr 0x557cf34e1b38 <col:69>
|-FunctionDecl 0x557cf34e1cb0 <line:110:1, col:87> col:13 __sched_cpufree 'void (cpu_set_t *)' extern
| |-ParmVarDecl 0x557cf34e1ba0 <col:30, col:41> col:41 __set 'cpu_set_t *'
| `-NoThrowAttr 0x557cf34e1d58 <col:64>
|-FunctionDecl 0x557cf34e2018 <line:113:1, line:114:45> line:113:12 sched_setparam 'int (__pid_t, const struct sched_param *)' extern
| |-ParmVarDecl 0x557cf34e1dc0 <col:28, col:36> col:36 __pid '__pid_t':'int'
| |-ParmVarDecl 0x557cf34e1ef8 <col:43, col:69> col:69 __param 'const struct sched_param *'
| `-NoThrowAttr 0x557cf34e20c8 <line:114:22>
|-FunctionDecl 0x557cf34e23b0 <line:115:1, col:111> col:12 sched_getparam 'int (__pid_t, struct sched_param *)' extern
| |-ParmVarDecl 0x557cf34e2130 <col:28, col:36> col:36 __pid '__pid_t':'int'
| |-ParmVarDecl 0x557cf34e2228 <col:43, col:63> col:63 __param 'struct sched_param *'
| `-NoThrowAttr 0x557cf34e2460 <col:88>
|-FunctionDecl 0x557cf34e2718 <line:116:1, line:117:85> line:116:12 sched_setscheduler 'int (__pid_t, int, const struct sched_param *)' extern
| |-ParmVarDecl 0x557cf34e24c8 <col:32, col:40> col:40 __pid '__pid_t':'int'
| |-ParmVarDecl 0x557cf34e2548 <col:47, col:51> col:51 __policy 'int'
| |-ParmVarDecl 0x557cf34e25d8 <line:117:11, col:37> col:37 __param 'const struct sched_param *'
| `-NoThrowAttr 0x557cf34e27d0 <col:62>
|-FunctionDecl 0x557cf34e2948 <line:118:1, col:86> col:12 sched_getscheduler 'int (__pid_t)' extern
| |-ParmVarDecl 0x557cf34e2838 <col:32, col:40> col:40 __pid '__pid_t':'int'
| `-NoThrowAttr 0x557cf34e29f0 <col:63>
|-FunctionDecl 0x557cf34e2b18 <line:119:1, col:70> col:12 sched_yield 'int (void)' extern
| `-NoThrowAttr 0x557cf34e2bb8 <col:47>
|-FunctionDecl 0x557cf34e2cc0 <line:120:1, col:92> col:12 sched_get_priority_max 'int (int)' extern
| |-ParmVarDecl 0x557cf34e2c28 <col:36, col:40> col:40 __algorithm 'int'
| `-NoThrowAttr 0x557cf34e2d68 <col:69>
|-FunctionDecl 0x557cf34e2e70 <line:121:1, col:92> col:12 sched_get_priority_min 'int (int)' extern
| |-ParmVarDecl 0x557cf34e2dd8 <col:36, col:40> col:40 __algorithm 'int'
| `-NoThrowAttr 0x557cf34e2f18 <col:69>
|-FunctionDecl 0x557cf34e31d8 <line:122:1, col:111> col:12 sched_rr_get_interval 'int (__pid_t, struct timespec *)' extern
| |-ParmVarDecl 0x557cf34e2f80 <col:35, col:43> col:43 __pid '__pid_t':'int'
| |-ParmVarDecl 0x557cf34e30b8 <col:50, col:67> col:67 __t 'struct timespec *'
| `-NoThrowAttr 0x557cf34e3288 <col:88>
|-TypedefDecl 0x557cf34e3318 <line:126:1, col:19> col:19 referenced clock_t '__clock_t':'long'
| `-TypedefType 0x557cf34e32e0 '__clock_t' sugar
|   |-Typedef 0x557cf34dd6c8 '__clock_t'
|   `-BuiltinType 0x557cf3475f30 'long'
|-TypedefDecl 0x557cf34e33c0 <line:129:1, col:21> col:21 referenced clockid_t '__clockid_t':'int'
| `-TypedefType 0x557cf34e3370 '__clockid_t' sugar
|   |-Typedef 0x557cf34ddab8 '__clockid_t'
|   `-BuiltinType 0x557cf3475f10 'int'
|-TypedefDecl 0x557cf34e3458 <line:130:1, col:19> col:19 referenced timer_t '__timer_t':'void *'
| `-TypedefType 0x557cf34e3420 '__timer_t' sugar
|   |-Typedef 0x557cf34ddb28 '__timer_t'
|   `-PointerType 0x557cf3476630 'void *'
|     `-BuiltinType 0x557cf3475e70 'void'
|-RecordDecl 0x557cf34e34b0 <line:132:1, line:145:1> line:132:8 struct tm definition
| |-FieldDecl 0x557cf34e3570 <line:134:3, col:7> col:7 tm_sec 'int'
| |-FieldDecl 0x557cf34e35d8 <line:135:3, col:7> col:7 tm_min 'int'
| |-FieldDecl 0x557cf34e3640 <line:136:3, col:7> col:7 tm_hour 'int'
| |-FieldDecl 0x557cf34e36a8 <line:137:3, col:7> col:7 tm_mday 'int'
| |-FieldDecl 0x557cf34e3710 <line:138:3, col:7> col:7 tm_mon 'int'
| |-FieldDecl 0x557cf34e3778 <line:139:3, col:7> col:7 tm_year 'int'
| |-FieldDecl 0x557cf34e37e0 <line:140:3, col:7> col:7 tm_wday 'int'
| |-FieldDecl 0x557cf34e3848 <line:141:3, col:7> col:7 tm_yday 'int'
| |-FieldDecl 0x557cf34e38b0 <line:142:3, col:7> col:7 tm_isdst 'int'
| |-FieldDecl 0x557cf34e3918 <line:143:3, col:12> col:12 tm_gmtoff 'long'
| `-FieldDecl 0x557cf34e3980 <line:144:3, col:15> col:15 tm_zone 'const char *'
|-RecordDecl 0x557cf34e39d0 <line:148:1, line:152:3> line:148:8 struct itimerspec definition
| |-FieldDecl 0x557cf34e3a98 <line:150:5, col:21> col:21 it_interval 'struct timespec':'struct timespec'
| `-FieldDecl 0x557cf34e3b08 <line:151:5, col:21> col:21 it_value 'struct timespec':'struct timespec'
|-RecordDecl 0x557cf34e3bb0 <line:153:1, col:8> col:8 struct sigevent
|-FunctionDecl 0x557cf34e3d80 <line:155:1, col:68> col:16 clock 'clock_t (void)' extern
| `-NoThrowAttr 0x557cf34e3e20 <col:45>
|-FunctionDecl 0x557cf34e4000 <line:156:1, col:77> col:15 time 'time_t (time_t *)' extern
| |-ParmVarDecl 0x557cf34e3ef0 <col:21, col:29> col:29 __timer 'time_t *'
| `-NoThrowAttr 0x557cf34e40a8 <col:54>
|-FunctionDecl 0x557cf34e42a8 <line:157:1, line:158:73> line:157:15 difftime 'double (time_t, time_t)' extern
| |-ParmVarDecl 0x557cf34e4110 <col:25, col:32> col:32 __time1 'time_t':'long'
| |-ParmVarDecl 0x557cf34e4188 <col:41, col:48> col:48 __time0 'time_t':'long'
| |-NoThrowAttr 0x557cf34e4358 <line:158:22>
| `-ConstAttr 0x557cf34e4ff0 <col:63>
|-FunctionDecl 0x557cf34e51f0 <line:159:1, col:79> col:15 mktime 'time_t (struct tm *)' extern
| |-ParmVarDecl 0x557cf34e50e8 <col:23, col:34> col:34 __tp 'struct tm *'
| `-NoThrowAttr 0x557cf34e5298 <col:56>
|-FunctionDecl 0x557cf34e5640 <line:160:1, line:162:77> line:160:15 strftime 'size_t (char *restrict, size_t, const char *restrict, const struct tm *restrict)' extern
| |-ParmVarDecl 0x557cf34e5308 <col:25, col:42> col:42 __s 'char *restrict'
| |-ParmVarDecl 0x557cf34e5380 <col:47, col:54> col:54 __maxsize 'size_t':'unsigned long'
| |-ParmVarDecl 0x557cf34e5400 <line:161:4, col:27> col:27 __format 'const char *restrict'
| |-ParmVarDecl 0x557cf34e54f8 <line:162:4, col:32> col:32 __tp 'const struct tm *restrict'
| `-NoThrowAttr 0x557cf34e5700 <col:54>
|-RecordDecl 0x557cf34e5758 <line:164:9, line:171:1> line:164:16 struct __locale_struct definition
| |-RecordDecl 0x557cf34e5808 parent 0x557cf3475e18 <line:166:3, col:10> col:10 struct __locale_data
| |-FieldDecl 0x557cf34e5a68 <col:3, col:37> col:25 __locales 'struct __locale_data *[13]'
| |-FieldDecl 0x557cf34e5b08 <line:167:3, col:29> col:29 __ctype_b 'const unsigned short *'
| |-FieldDecl 0x557cf34e5b70 <line:168:3, col:14> col:14 __ctype_tolower 'const int *'
| |-FieldDecl 0x557cf34e5bd8 <line:169:3, col:14> col:14 __ctype_toupper 'const int *'
| `-FieldDecl 0x557cf34e5cc8 <line:170:3, col:25> col:15 __names 'const char *[13]'
|-TypedefDecl 0x557cf34e5de8 <line:164:1, line:171:4> col:4 referenced __locale_t 'struct __locale_struct *'
| `-PointerType 0x557cf34e5d90 'struct __locale_struct *'
|   `-ElaboratedType 0x557cf34e5d20 'struct __locale_struct' sugar
|     `-RecordType 0x557cf34e57e0 'struct __locale_struct'
|       `-Record 0x557cf34e5758 '__locale_struct'
|-TypedefDecl 0x557cf34e5e98 <line:172:1, col:20> col:20 locale_t '__locale_t':'struct __locale_struct *'
| `-TypedefType 0x557cf34e5e60 '__locale_t' sugar
|   |-Typedef 0x557cf34e5de8 '__locale_t'
|   `-PointerType 0x557cf34e5d90 'struct __locale_struct *'
|     `-ElaboratedType 0x557cf34e5d20 'struct __locale_struct' sugar
|       `-RecordType 0x557cf34e57e0 'struct __locale_struct'
|         `-Record 0x557cf34e5758 '__locale_struct'
|-FunctionDecl 0x557cf34e72a0 <line:173:1, line:176:63> line:173:15 strftime_l 'size_t (char *restrict, size_t, const char *restrict, const struct tm *restrict, __locale_t)' extern
| |-ParmVarDecl 0x557cf34e5f08 <col:27, col:44> col:44 __s 'char *restrict'
| |-ParmVarDecl 0x557cf34e5f80 <col:49, col:56> col:56 __maxsize 'size_t':'unsigned long'
| |-ParmVarDecl 0x557cf34e7028 <line:174:6, col:29> col:29 __format 'const char *restrict'
| |-ParmVarDecl 0x557cf34e70b8 <line:175:6, col:34> col:34 __tp 'const struct tm *restrict'
| |-ParmVarDecl 0x557cf34e7130 <line:176:6, col:17> col:17 __loc '__locale_t':'struct __locale_struct *'
| `-NoThrowAttr 0x557cf34e7368 <col:40>
|-FunctionDecl 0x557cf34e7558 <line:178:1, col:89> col:19 gmtime 'struct tm *(const time_t *)' extern
| |-ParmVarDecl 0x557cf34e7430 <col:27, col:41> col:41 __timer 'const time_t *'
| `-NoThrowAttr 0x557cf34e7600 <col:66>
|-FunctionDecl 0x557cf34e7710 <line:179:1, col:92> col:19 localtime 'struct tm *(const time_t *)' extern
| |-ParmVarDecl 0x557cf34e7668 <col:30, col:44> col:44 __timer 'const time_t *'
| `-NoThrowAttr 0x557cf34e77b8 <col:69>
|-FunctionDecl 0x557cf34e79e8 <line:181:1, line:182:75> line:181:19 gmtime_r 'struct tm *(const time_t *restrict, struct tm *restrict)' extern
| |-ParmVarDecl 0x557cf34e7820 <col:29, col:54> col:54 __timer 'const time_t *restrict'
| |-ParmVarDecl 0x557cf34e78b0 <line:182:8, col:30> col:30 __tp 'struct tm *restrict'
| `-NoThrowAttr 0x557cf34e7a98 <col:52>
|-FunctionDecl 0x557cf34e7c40 <line:183:1, line:184:78> line:183:19 localtime_r 'struct tm *(const time_t *restrict, struct tm *restrict)' extern
| |-ParmVarDecl 0x557cf34e7b00 <col:32, col:57> col:57 __timer 'const time_t *restrict'
| |-ParmVarDecl 0x557cf34e7b90 <line:184:11, col:33> col:33 __tp 'struct tm *restrict'
| `-NoThrowAttr 0x557cf34e7cf0 <col:55>
|-FunctionDecl 0x557cf34e7e88 <line:186:1, col:85> col:14 asctime 'char *(const struct tm *)' extern
| |-ParmVarDecl 0x557cf34e7d70 <col:23, col:40> col:40 __tp 'const struct tm *'
| `-NoThrowAttr 0x557cf34e7f30 <col:62>
|-FunctionDecl 0x557cf34e8168 <line:187:1, col:83> col:14 ctime 'char *(const time_t *)' extern
| |-ParmVarDecl 0x557cf34e7f98 <col:21, col:35> col:35 __timer 'const time_t *'
| `-NoThrowAttr 0x557cf34e8210 <col:60>
|-FunctionDecl 0x557cf34e8438 <line:189:1, line:190:67> line:189:14 asctime_r 'char *(const struct tm *restrict, char *restrict)' extern
| |-ParmVarDecl 0x557cf34e8290 <col:25, col:53> col:53 __tp 'const struct tm *restrict'
| |-ParmVarDecl 0x557cf34e8310 <line:190:4, col:21> col:21 __buf 'char *restrict'
| `-NoThrowAttr 0x557cf34e84e8 <col:44>
|-FunctionDecl 0x557cf34e86f8 <line:191:1, line:192:72> line:191:14 ctime_r 'char *(const time_t *restrict, char *restrict)' extern
| |-ParmVarDecl 0x557cf34e8550 <col:23, col:48> col:48 __timer 'const time_t *restrict'
| |-ParmVarDecl 0x557cf34e85d0 <line:192:9, col:26> col:26 __buf 'char *restrict'
| `-NoThrowAttr 0x557cf34e87a8 <col:49>
|-VarDecl 0x557cf34e88a8 <line:193:1, col:24> col:14 __tzname 'char *[2]' extern
|-VarDecl 0x557cf34e8928 <line:194:1, col:12> col:12 __daylight 'int' extern
|-VarDecl 0x557cf34e89a8 <line:195:1, col:17> col:17 __timezone 'long' extern
|-VarDecl 0x557cf34e8a70 <line:196:1, col:22> col:14 tzname 'char *[2]' extern
|-FunctionDecl 0x557cf34e8ba0 <line:197:1, col:65> col:13 tzset 'void (void)' extern
| `-NoThrowAttr 0x557cf34e8c40 <col:42>
|-VarDecl 0x557cf34e8cb0 <line:198:1, col:12> col:12 daylight 'int' extern
|-VarDecl 0x557cf34e8d30 <line:199:1, col:17> col:17 timezone 'long' extern
|-FunctionDecl 0x557cf34e8eb8 <line:200:1, col:80> col:12 stime 'int (const time_t *)' extern
| |-ParmVarDecl 0x557cf34e8da8 <col:19, col:33> col:33 __when 'const time_t *'
| `-NoThrowAttr 0x557cf34e8f60 <col:57>
|-FunctionDecl 0x557cf34e90d0 <line:201:1, col:79> col:15 timegm 'time_t (struct tm *)' extern
| |-ParmVarDecl 0x557cf34e8fe0 <col:23, col:34> col:34 __tp 'struct tm *'
| `-NoThrowAttr 0x557cf34e9178 <col:56>
|-FunctionDecl 0x557cf34e9288 <line:202:1, col:82> col:15 timelocal 'time_t (struct tm *)' extern
| |-ParmVarDecl 0x557cf34e91f8 <col:26, col:37> col:37 __tp 'struct tm *'
| `-NoThrowAttr 0x557cf34e9330 <col:59>
|-FunctionDecl 0x557cf34e9438 <line:203:1, col:99> col:12 dysize 'int (int)' extern
| |-ParmVarDecl 0x557cf34e93a0 <col:20, col:24> col:24 __year 'int'
| |-NoThrowAttr 0x557cf34e94e0 <col:48>
| `-ConstAttr 0x557cf34e9538 <col:89>
|-FunctionDecl 0x557cf34e9798 <line:204:1, line:205:37> line:204:12 nanosleep 'int (const struct timespec *, struct timespec *)' extern
| |-ParmVarDecl 0x557cf34e95e8 <col:23, col:46> col:46 __requested_time 'const struct timespec *'
| `-ParmVarDecl 0x557cf34e9678 <line:205:9, col:26> col:26 __remaining 'struct timespec *'
|-FunctionDecl 0x557cf34e99f8 <line:206:1, col:111> col:12 clock_getres 'int (clockid_t, struct timespec *)' extern
| |-ParmVarDecl 0x557cf34e9888 <col:26, col:36> col:36 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x557cf34e9918 <col:48, col:65> col:65 __res 'struct timespec *'
| `-NoThrowAttr 0x557cf34e9aa8 <col:88>
|-FunctionDecl 0x557cf34e9c40 <line:207:1, col:111> col:12 clock_gettime 'int (clockid_t, struct timespec *)' extern
| |-ParmVarDecl 0x557cf34e9b10 <col:27, col:37> col:37 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x557cf34e9ba0 <col:49, col:66> col:66 __tp 'struct timespec *'
| `-NoThrowAttr 0x557cf34e9cf0 <col:88>
|-FunctionDecl 0x557cf34e9f08 <line:208:1, line:209:45> line:208:12 clock_settime 'int (clockid_t, const struct timespec *)' extern
| |-ParmVarDecl 0x557cf34e9d58 <col:27, col:37> col:37 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x557cf34e9de8 <col:49, col:72> col:72 __tp 'const struct timespec *'
| `-NoThrowAttr 0x557cf34e9fb8 <line:209:22>
|-FunctionDecl 0x557cf34ea358 <line:210:1, line:212:30> line:210:12 clock_nanosleep 'int (clockid_t, int, const struct timespec *, struct timespec *)' extern
| |-ParmVarDecl 0x557cf34ea020 <col:29, col:39> col:39 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x557cf34ea0e0 <col:51, col:55> col:55 __flags 'int'
| |-ParmVarDecl 0x557cf34ea170 <line:211:8, col:31> col:31 __req 'const struct timespec *'
| `-ParmVarDecl 0x557cf34ea200 <line:212:8, col:25> col:25 __rem 'struct timespec *'
|-FunctionDecl 0x557cf34ea658 <line:213:1, col:108> col:12 clock_getcpuclockid 'int (pid_t, clockid_t *)' extern
| |-ParmVarDecl 0x557cf34ea458 <col:33, col:39> col:39 __pid 'pid_t':'int'
| |-ParmVarDecl 0x557cf34ea530 <col:46, col:57> col:57 __clock_id 'clockid_t *'
| `-NoThrowAttr 0x557cf34ea708 <col:85>
|-FunctionDecl 0x557cf34eaaf8 <line:214:1, line:216:75> line:214:12 timer_create 'int (clockid_t, struct sigevent *restrict, timer_t *restrict)' extern
| |-ParmVarDecl 0x557cf34ea770 <col:26, col:36> col:36 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x557cf34ea8a8 <line:215:5, col:33> col:33 __evp 'struct sigevent *restrict'
| |-ParmVarDecl 0x557cf34ea9b0 <line:216:5, col:25> col:25 __timerid 'timer_t *restrict'
| `-NoThrowAttr 0x557cf34eabb0 <col:52>
|-FunctionDecl 0x557cf34ead28 <line:217:1, col:84> col:12 timer_delete 'int (timer_t)' extern
| |-ParmVarDecl 0x557cf34eac18 <col:26, col:34> col:34 __timerid 'timer_t':'void *'
| `-NoThrowAttr 0x557cf34eadd0 <col:61>
|-FunctionDecl 0x557cf34eb248 <line:218:1, line:220:85> line:218:12 timer_settime 'int (timer_t, int, const struct itimerspec *restrict, struct itimerspec *restrict)' extern
| |-ParmVarDecl 0x557cf34eae38 <col:27, col:35> col:35 __timerid 'timer_t':'void *'
| |-ParmVarDecl 0x557cf34eaeb8 <col:46, col:50> col:50 __flags 'int'
| |-ParmVarDecl 0x557cf34eafe8 <line:219:6, col:42> col:42 __value 'const struct itimerspec *restrict'
| |-ParmVarDecl 0x557cf34eb0f0 <line:220:6, col:36> col:36 __ovalue 'struct itimerspec *restrict'
| `-NoThrowAttr 0x557cf34eb308 <col:62>
|-FunctionDecl 0x557cf34eb528 <line:221:1, line:222:45> line:221:12 timer_gettime 'int (timer_t, struct itimerspec *)' extern
| |-ParmVarDecl 0x557cf34eb370 <col:27, col:35> col:35 __timerid 'timer_t':'void *'
| |-ParmVarDecl 0x557cf34eb400 <col:46, col:65> col:65 __value 'struct itimerspec *'
| `-NoThrowAttr 0x557cf34eb5d8 <line:222:22>
|-FunctionDecl 0x557cf34eb6d8 <line:223:1, col:88> col:12 timer_getoverrun 'int (timer_t)' extern
| |-ParmVarDecl 0x557cf34eb640 <col:30, col:38> col:38 __timerid 'timer_t':'void *'
| `-NoThrowAttr 0x557cf34eb780 <col:65>
|-TypedefDecl 0x557cf34eb7f0 <line:225:1, col:27> col:27 referenced pthread_t 'unsigned long'
| `-BuiltinType 0x557cf3475fd0 'unsigned long'
|-RecordDecl 0x557cf34eb848 <line:226:1, line:230:1> line:226:7 union pthread_attr_t definition
| |-FieldDecl 0x557cf34eb990 <line:228:3, col:17> col:8 __size 'char [56]'
| `-FieldDecl 0x557cf34eb9f8 <line:229:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x557cf34ebaa8 <line:231:1, col:30> col:30 referenced pthread_attr_t 'union pthread_attr_t':'union pthread_attr_t'
| `-ElaboratedType 0x557cf34eba50 'union pthread_attr_t' sugar
|   `-RecordType 0x557cf34eb8d0 'union pthread_attr_t'
|     `-Record 0x557cf34eb848 'pthread_attr_t'
|-RecordDecl 0x557cf34ebb00 <line:232:9, line:236:1> line:232:16 struct __pthread_internal_list definition
| |-FieldDecl 0x557cf34ebc78 <line:234:3, col:35> col:35 __prev 'struct __pthread_internal_list *'
| `-FieldDecl 0x557cf34ebcf0 <line:235:3, col:35> col:35 __next 'struct __pthread_internal_list *'
|-TypedefDecl 0x557cf34ebda0 <line:232:1, line:236:3> col:3 referenced __pthread_list_t 'struct __pthread_internal_list':'struct __pthread_internal_list'
| `-ElaboratedType 0x557cf34ebd40 'struct __pthread_internal_list' sugar
|   `-RecordType 0x557cf34ebb80 'struct __pthread_internal_list'
|     `-Record 0x557cf34ebb00 '__pthread_internal_list'
|-RecordDecl 0x557cf34ebe10 <line:237:9, line:251:1> line:237:9 union definition
| |-RecordDecl 0x557cf34ebeb8 parent 0x557cf3475e18 <line:239:3, line:248:3> line:239:10 struct __pthread_mutex_s definition
| | |-FieldDecl 0x557cf34ebf90 <line:241:5, col:9> col:9 __lock 'int'
| | |-FieldDecl 0x557cf34ebff8 <line:242:5, col:18> col:18 __count 'unsigned int'
| | |-FieldDecl 0x557cf34ec060 <line:243:5, col:9> col:9 __owner 'int'
| | |-FieldDecl 0x557cf34f0110 <line:244:5, col:18> col:18 __nusers 'unsigned int'
| | |-FieldDecl 0x557cf34f0178 <line:245:5, col:9> col:9 __kind 'int'
| | |-FieldDecl 0x557cf34f01e0 <line:246:5, col:9> col:9 __spins 'int'
| | `-FieldDecl 0x557cf34f0268 <line:247:5, col:22> col:22 __list '__pthread_list_t':'struct __pthread_internal_list'
| |-FieldDecl 0x557cf34f0320 <line:239:3, line:248:5> col:5 __data 'struct __pthread_mutex_s':'struct __pthread_mutex_s'
| |-FieldDecl 0x557cf34f0410 <line:249:3, col:17> col:8 __size 'char [40]'
| `-FieldDecl 0x557cf34f0478 <line:250:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x557cf34f0600 <line:237:1, line:251:3> col:3 referenced pthread_mutex_t 'union pthread_mutex_t':'pthread_mutex_t'
| `-ElaboratedType 0x557cf34f05a0 'union pthread_mutex_t' sugar
|   `-RecordType 0x557cf34ebe90 'pthread_mutex_t'
|     `-Record 0x557cf34ebe10 ''
|-RecordDecl 0x557cf34f0670 <line:252:9, line:256:1> line:252:9 union definition
| |-FieldDecl 0x557cf34f07b0 <line:254:3, col:16> col:8 __size 'char [4]'
| `-FieldDecl 0x557cf34f0818 <line:255:3, col:7> col:7 __align 'int'
|-TypedefDecl 0x557cf34f08d0 <line:252:1, line:256:3> col:3 referenced pthread_mutexattr_t 'union pthread_mutexattr_t':'pthread_mutexattr_t'
| `-ElaboratedType 0x557cf34f0870 'union pthread_mutexattr_t' sugar
|   `-RecordType 0x557cf34f06f0 'pthread_mutexattr_t'
|     `-Record 0x557cf34f0670 ''
|-RecordDecl 0x557cf34f0940 <line:257:9, line:272:1> line:257:9 union definition
| |-RecordDecl 0x557cf34f09e8 <line:259:3, line:269:3> line:259:3 struct definition
| | |-FieldDecl 0x557cf34f0ab0 <line:261:5, col:9> col:9 __lock 'int'
| | |-FieldDecl 0x557cf34f0b18 <line:262:5, col:18> col:18 __futex 'unsigned int'
| | |-FieldDecl 0x557cf34f0b80 <line:263:19, col:42> col:42 __total_seq 'unsigned long long'
| | |-FieldDecl 0x557cf34f0be8 <line:264:19, col:42> col:42 __wakeup_seq 'unsigned long long'
| | |-FieldDecl 0x557cf34f0c50 <line:265:19, col:42> col:42 __woken_seq 'unsigned long long'
| | |-FieldDecl 0x557cf34f0cb8 <line:266:5, col:11> col:11 __mutex 'void *'
| | |-FieldDecl 0x557cf34f0d20 <line:267:5, col:18> col:18 __nwaiters 'unsigned int'
| | `-FieldDecl 0x557cf34f0d88 <line:268:5, col:18> col:18 __broadcast_seq 'unsigned int'
| |-FieldDecl 0x557cf34f0e40 <line:259:3, line:269:5> col:5 __data 'struct (anonymous struct at ./split_4/rfi008_pso.oepc_false-unreach-call.i:259:3)':'struct pthread_cond_t::(anonymous at ./split_4/rfi008_pso.oepc_false-unreach-call.i:259:3)'
| |-FieldDecl 0x557cf34f0f30 <line:270:3, col:17> col:8 __size 'char [48]'
| `-FieldDecl 0x557cf34f0f98 <line:271:17, col:31> col:31 __align 'long long'
|-TypedefDecl 0x557cf34f2130 <line:257:1, line:272:3> col:3 referenced pthread_cond_t 'union pthread_cond_t':'pthread_cond_t'
| `-ElaboratedType 0x557cf34f1070 'union pthread_cond_t' sugar
|   `-RecordType 0x557cf34f09c0 'pthread_cond_t'
|     `-Record 0x557cf34f0940 ''
|-RecordDecl 0x557cf34f21a0 <line:273:9, line:277:1> line:273:9 union definition
| |-FieldDecl 0x557cf34f22a0 <line:275:3, col:16> col:8 __size 'char [4]'
| `-FieldDecl 0x557cf34f2308 <line:276:3, col:7> col:7 __align 'int'
|-TypedefDecl 0x557cf34f23c0 <line:273:1, line:277:3> col:3 referenced pthread_condattr_t 'union pthread_condattr_t':'pthread_condattr_t'
| `-ElaboratedType 0x557cf34f2360 'union pthread_condattr_t' sugar
|   `-RecordType 0x557cf34f2220 'pthread_condattr_t'
|     `-Record 0x557cf34f21a0 ''
|-TypedefDecl 0x557cf34f2448 <line:278:1, col:22> col:22 referenced pthread_key_t 'unsigned int'
| `-BuiltinType 0x557cf3475fb0 'unsigned int'
|-TypedefDecl 0x557cf34f24b8 <line:279:1, col:13> col:13 referenced pthread_once_t 'int'
| `-BuiltinType 0x557cf3475f10 'int'
|-RecordDecl 0x557cf34f2510 <line:280:9, line:298:1> line:280:9 union definition
| |-RecordDecl 0x557cf34f25b8 <line:282:3, line:295:3> line:282:3 struct definition
| | |-FieldDecl 0x557cf34f2680 <line:284:5, col:9> col:9 __lock 'int'
| | |-FieldDecl 0x557cf34f26e8 <line:285:5, col:18> col:18 __nr_readers 'unsigned int'
| | |-FieldDecl 0x557cf34f2750 <line:286:5, col:18> col:18 __readers_wakeup 'unsigned int'
| | |-FieldDecl 0x557cf34f27b8 <line:287:5, col:18> col:18 __writer_wakeup 'unsigned int'
| | |-FieldDecl 0x557cf34f2820 <line:288:5, col:18> col:18 __nr_readers_queued 'unsigned int'
| | |-FieldDecl 0x557cf34f2888 <line:289:5, col:18> col:18 __nr_writers_queued 'unsigned int'
| | |-FieldDecl 0x557cf34f28f0 <line:290:5, col:9> col:9 __writer 'int'
| | |-FieldDecl 0x557cf34f2958 <line:291:5, col:9> col:9 __shared 'int'
| | |-FieldDecl 0x557cf34f29c0 <line:292:5, col:23> col:23 __pad1 'unsigned long'
| | |-FieldDecl 0x557cf34f2a28 <line:293:5, col:23> col:23 __pad2 'unsigned long'
| | `-FieldDecl 0x557cf34f2a90 <line:294:5, col:18> col:18 __flags 'unsigned int'
| |-FieldDecl 0x557cf34f2b40 <line:282:3, line:295:5> col:5 __data 'struct (anonymous struct at ./split_4/rfi008_pso.oepc_false-unreach-call.i:282:3)':'struct pthread_rwlock_t::(anonymous at ./split_4/rfi008_pso.oepc_false-unreach-call.i:282:3)'
| |-FieldDecl 0x557cf34f2be8 <line:296:3, col:17> col:8 __size 'char [56]'
| `-FieldDecl 0x557cf34f2c50 <line:297:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x557cf34f2da0 <line:280:1, line:298:3> col:3 referenced pthread_rwlock_t 'union pthread_rwlock_t':'pthread_rwlock_t'
| `-ElaboratedType 0x557cf34f2d40 'union pthread_rwlock_t' sugar
|   `-RecordType 0x557cf34f2590 'pthread_rwlock_t'
|     `-Record 0x557cf34f2510 ''
|-RecordDecl 0x557cf34f2e10 <line:299:9, line:303:1> line:299:9 union definition
| |-FieldDecl 0x557cf34f2f50 <line:301:3, col:16> col:8 __size 'char [8]'
| `-FieldDecl 0x557cf34f2fb8 <line:302:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x557cf34f3070 <line:299:1, line:303:3> col:3 referenced pthread_rwlockattr_t 'union pthread_rwlockattr_t':'pthread_rwlockattr_t'
| `-ElaboratedType 0x557cf34f3010 'union pthread_rwlockattr_t' sugar
|   `-RecordType 0x557cf34f2e90 'pthread_rwlockattr_t'
|     `-Record 0x557cf34f2e10 ''
|-TypedefDecl 0x557cf34f4140 <line:304:1, col:22> col:22 referenced pthread_spinlock_t 'volatile int'
| `-QualType 0x557cf3475f14 'volatile int' volatile
|   `-BuiltinType 0x557cf3475f10 'int'
|-RecordDecl 0x557cf34f4198 <line:305:9, line:309:1> line:305:9 union definition
| |-FieldDecl 0x557cf34f42e0 <line:307:3, col:17> col:8 __size 'char [32]'
| `-FieldDecl 0x557cf34f4348 <line:308:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x557cf34f4400 <line:305:1, line:309:3> col:3 referenced pthread_barrier_t 'union pthread_barrier_t':'pthread_barrier_t'
| `-ElaboratedType 0x557cf34f43a0 'union pthread_barrier_t' sugar
|   `-RecordType 0x557cf34f4220 'pthread_barrier_t'
|     `-Record 0x557cf34f4198 ''
|-RecordDecl 0x557cf34f4470 <line:310:9, line:314:1> line:310:9 union definition
| |-FieldDecl 0x557cf34f4570 <line:312:3, col:16> col:8 __size 'char [4]'
| `-FieldDecl 0x557cf34f45d8 <line:313:3, col:7> col:7 __align 'int'
|-TypedefDecl 0x557cf34f4690 <line:310:1, line:314:3> col:3 referenced pthread_barrierattr_t 'union pthread_barrierattr_t':'pthread_barrierattr_t'
| `-ElaboratedType 0x557cf34f4630 'union pthread_barrierattr_t' sugar
|   `-RecordType 0x557cf34f44f0 'pthread_barrierattr_t'
|     `-Record 0x557cf34f4470 ''
|-TypedefDecl 0x557cf34f47a8 <line:315:1, col:29> col:18 referenced __jmp_buf 'long [8]'
| `-ConstantArrayType 0x557cf34f4740 'long [8]' 8 
|   `-BuiltinType 0x557cf3475f30 'long'
|-EnumDecl 0x557cf34f4800 <line:316:1, line:320:1> line:316:1
| |-EnumConstantDecl 0x557cf34f48c8 <line:318:3> col:3 PTHREAD_CREATE_JOINABLE 'int'
| `-EnumConstantDecl 0x557cf34f4918 <line:319:3> col:3 PTHREAD_CREATE_DETACHED 'int'
|-EnumDecl 0x557cf34f4968 <line:321:1, line:332:1> line:321:1
| |-EnumConstantDecl 0x557cf34f4a38 <line:323:3> col:3 referenced PTHREAD_MUTEX_TIMED_NP 'int'
| |-EnumConstantDecl 0x557cf34f4a88 <line:324:3> col:3 referenced PTHREAD_MUTEX_RECURSIVE_NP 'int'
| |-EnumConstantDecl 0x557cf34f4ad8 <line:325:3> col:3 referenced PTHREAD_MUTEX_ERRORCHECK_NP 'int'
| |-EnumConstantDecl 0x557cf34f4b28 <line:326:3> col:3 PTHREAD_MUTEX_ADAPTIVE_NP 'int'
| |-EnumConstantDecl 0x557cf34f4bb0 <line:328:3, col:26> col:3 referenced PTHREAD_MUTEX_NORMAL 'int'
| | `-ConstantExpr 0x557cf34f4b98 <col:26> 'int'
| |   `-DeclRefExpr 0x557cf34f4b78 <col:26> 'int' EnumConstant 0x557cf34f4a38 'PTHREAD_MUTEX_TIMED_NP' 'int'
| |-EnumConstantDecl 0x557cf34f4c38 <line:329:3, col:29> col:3 PTHREAD_MUTEX_RECURSIVE 'int'
| | `-ConstantExpr 0x557cf34f4c20 <col:29> 'int'
| |   `-DeclRefExpr 0x557cf34f4c00 <col:29> 'int' EnumConstant 0x557cf34f4a88 'PTHREAD_MUTEX_RECURSIVE_NP' 'int'
| |-EnumConstantDecl 0x557cf34f4cc0 <line:330:3, col:30> col:3 PTHREAD_MUTEX_ERRORCHECK 'int'
| | `-ConstantExpr 0x557cf34f4ca8 <col:30> 'int'
| |   `-DeclRefExpr 0x557cf34f4c88 <col:30> 'int' EnumConstant 0x557cf34f4ad8 'PTHREAD_MUTEX_ERRORCHECK_NP' 'int'
| `-EnumConstantDecl 0x557cf34f4d48 <line:331:3, col:27> col:3 PTHREAD_MUTEX_DEFAULT 'int'
|   `-ConstantExpr 0x557cf34f4d30 <col:27> 'int'
|     `-DeclRefExpr 0x557cf34f4d10 <col:27> 'int' EnumConstant 0x557cf34f4bb0 'PTHREAD_MUTEX_NORMAL' 'int'
|-EnumDecl 0x557cf34f4d98 <line:333:1, line:339:1> line:333:1
| |-EnumConstantDecl 0x557cf34f4e68 <line:335:3> col:3 referenced PTHREAD_MUTEX_STALLED 'int'
| |-EnumConstantDecl 0x557cf34f4ef0 <line:336:3, col:30> col:3 PTHREAD_MUTEX_STALLED_NP 'int'
| | `-ConstantExpr 0x557cf34f4ed8 <col:30> 'int'
| |   `-DeclRefExpr 0x557cf34f4eb8 <col:30> 'int' EnumConstant 0x557cf34f4e68 'PTHREAD_MUTEX_STALLED' 'int'
| |-EnumConstantDecl 0x557cf34f4f40 <line:337:3> col:3 referenced PTHREAD_MUTEX_ROBUST 'int'
| `-EnumConstantDecl 0x557cf34f4fc8 <line:338:3, col:29> col:3 PTHREAD_MUTEX_ROBUST_NP 'int'
|   `-ConstantExpr 0x557cf34f4fb0 <col:29> 'int'
|     `-DeclRefExpr 0x557cf34f4f90 <col:29> 'int' EnumConstant 0x557cf34f4f40 'PTHREAD_MUTEX_ROBUST' 'int'
|-EnumDecl 0x557cf34f5018 <line:340:1, line:345:1> line:340:1
| |-EnumConstantDecl 0x557cf34f50e8 <line:342:3> col:3 PTHREAD_PRIO_NONE 'int'
| |-EnumConstantDecl 0x557cf34f5150 <line:343:3> col:3 PTHREAD_PRIO_INHERIT 'int'
| `-EnumConstantDecl 0x557cf34f51a0 <line:344:3> col:3 PTHREAD_PRIO_PROTECT 'int'
|-EnumDecl 0x557cf34f51f0 <line:346:1, line:352:1> line:346:1
| |-EnumConstantDecl 0x557cf34f52b8 <line:348:3> col:3 referenced PTHREAD_RWLOCK_PREFER_READER_NP 'int'
| |-EnumConstantDecl 0x557cf34f5308 <line:349:3> col:3 PTHREAD_RWLOCK_PREFER_WRITER_NP 'int'
| |-EnumConstantDecl 0x557cf34f5358 <line:350:3> col:3 PTHREAD_RWLOCK_PREFER_WRITER_NONRECURSIVE_NP 'int'
| `-EnumConstantDecl 0x557cf34f53e0 <line:351:3, col:31> col:3 PTHREAD_RWLOCK_DEFAULT_NP 'int'
|   `-ConstantExpr 0x557cf34f53c8 <col:31> 'int'
|     `-DeclRefExpr 0x557cf34f53a8 <col:31> 'int' EnumConstant 0x557cf34f52b8 'PTHREAD_RWLOCK_PREFER_READER_NP' 'int'
|-EnumDecl 0x557cf34f5430 <line:353:1, line:357:1> line:353:1
| |-EnumConstantDecl 0x557cf34f54f8 <line:355:3> col:3 PTHREAD_INHERIT_SCHED 'int'
| `-EnumConstantDecl 0x557cf34f5548 <line:356:3> col:3 PTHREAD_EXPLICIT_SCHED 'int'
|-EnumDecl 0x557cf34f5598 <line:358:1, line:362:1> line:358:1
| |-EnumConstantDecl 0x557cf34f5668 <line:360:3> col:3 PTHREAD_SCOPE_SYSTEM 'int'
| `-EnumConstantDecl 0x557cf34f56b8 <line:361:3> col:3 PTHREAD_SCOPE_PROCESS 'int'
|-EnumDecl 0x557cf34f5708 <line:363:1, line:367:1> line:363:1
| |-EnumConstantDecl 0x557cf34f57d8 <line:365:3> col:3 PTHREAD_PROCESS_PRIVATE 'int'
| `-EnumConstantDecl 0x557cf34f5828 <line:366:3> col:3 PTHREAD_PROCESS_SHARED 'int'
|-RecordDecl 0x557cf34f5878 <line:368:1, line:374:1> line:368:8 struct _pthread_cleanup_buffer definition
| |-FieldDecl 0x557cf34f5ab8 <line:370:3, col:28> col:10 __routine 'void (*)(void *)'
| |-FieldDecl 0x557cf34f5b20 <line:371:3, col:9> col:9 __arg 'void *'
| |-FieldDecl 0x557cf34f5b88 <line:372:3, col:7> col:7 __canceltype 'int'
| `-FieldDecl 0x557cf34f5ca8 <line:373:3, col:35> col:35 __prev 'struct _pthread_cleanup_buffer *'
|-EnumDecl 0x557cf34f5cf8 <line:375:1, line:379:1> line:375:1
| |-EnumConstantDecl 0x557cf34f5dc8 <line:377:3> col:3 PTHREAD_CANCEL_ENABLE 'int'
| `-EnumConstantDecl 0x557cf34f5e18 <line:378:3> col:3 PTHREAD_CANCEL_DISABLE 'int'
|-EnumDecl 0x557cf34f5e68 <line:380:1, line:384:1> line:380:1
| |-EnumConstantDecl 0x557cf34f5f38 <line:382:3> col:3 PTHREAD_CANCEL_DEFERRED 'int'
| `-EnumConstantDecl 0x557cf34f5f88 <line:383:3> col:3 PTHREAD_CANCEL_ASYNCHRONOUS 'int'
|-FunctionDecl 0x557cf34f65b8 <line:386:1, line:389:96> line:386:12 used pthread_create 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' extern
| |-ParmVarDecl 0x557cf34f6080 <col:28, col:50> col:50 __newthread 'pthread_t *restrict'
| |-ParmVarDecl 0x557cf34f61a0 <line:387:7, col:40> col:40 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x557cf34f63a0 <line:388:7, col:39> col:15 __start_routine 'void *(*)(void *)'
| |-ParmVarDecl 0x557cf34f6420 <line:389:7, col:24> col:24 __arg 'void *restrict'
| |-NoThrowAttr 0x557cf34f6678 <col:47>
| |-NonNullAttr 0x557cf34f66d0 <col:77, col:94> 1 3
| `-CallbackAttr 0x557cf34f6708 <line:386:12> Implicit 2 3
|-FunctionDecl 0x557cf34f6830 <line:390:1, col:72> col:13 pthread_exit 'void (void *) __attribute__((noreturn))' extern
| `-ParmVarDecl 0x557cf34f6760 <col:27, col:33> col:33 __retval 'void *'
|-FunctionDecl 0x557cf34f6a88 <line:391:1, col:64> col:12 pthread_join 'int (pthread_t, void **)' extern
| |-ParmVarDecl 0x557cf34f68e8 <col:26, col:36> col:36 __th 'pthread_t':'unsigned long'
| `-ParmVarDecl 0x557cf34f6968 <col:42, col:49> col:49 __thread_return 'void **'
|-FunctionDecl 0x557cf34f6c58 <line:392:1, col:83> col:12 pthread_detach 'int (pthread_t)' extern
| |-ParmVarDecl 0x557cf34f6b48 <col:28, col:38> col:38 __th 'pthread_t':'unsigned long'
| `-NoThrowAttr 0x557cf34f6d00 <col:60>
|-FunctionDecl 0x557cf34f6e50 <line:393:1, col:105> col:18 pthread_self 'pthread_t (void)' extern
| |-NoThrowAttr 0x557cf34f6ef0 <col:54>
| `-ConstAttr 0x557cf34f6f48 <col:95>
|-FunctionDecl 0x557cf34f8990 <line:394:1, line:395:70> line:394:12 pthread_equal 'int (pthread_t, pthread_t)' extern
| |-ParmVarDecl 0x557cf34f6f80 <col:27, col:37> col:37 __thread1 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x557cf34f6ff8 <col:48, col:58> col:58 __thread2 'pthread_t':'unsigned long'
| |-NoThrowAttr 0x557cf34f8a40 <line:395:19>
| `-ConstAttr 0x557cf34f8a98 <col:60>
|-FunctionDecl 0x557cf34f8c68 <line:396:1, col:128> col:12 pthread_attr_init 'int (pthread_attr_t *)' extern
| |-ParmVarDecl 0x557cf34f8b30 <col:31, col:47> col:47 __attr 'pthread_attr_t *'
| |-NoThrowAttr 0x557cf34f8d10 <col:71>
| `-NonNullAttr 0x557cf34f8d68 <col:112, col:126> 1
|-FunctionDecl 0x557cf34f8e70 <line:397:1, line:398:79> line:397:12 pthread_attr_destroy 'int (pthread_attr_t *)' extern
| |-ParmVarDecl 0x557cf34f8db8 <col:34, col:50> col:50 __attr 'pthread_attr_t *'
| |-NoThrowAttr 0x557cf34f8f18 <line:398:22>
| `-NonNullAttr 0x557cf34f8f70 <col:63, col:77> 1
|-FunctionDecl 0x557cf34f9198 <line:399:1, line:401:82> line:399:12 pthread_attr_getdetachstate 'int (const pthread_attr_t *, int *)' extern
| |-ParmVarDecl 0x557cf34f8fb8 <col:41, col:63> col:63 __attr 'const pthread_attr_t *'
| |-ParmVarDecl 0x557cf34f9038 <line:400:6, col:11> col:11 __detachstate 'int *'
| |-NoThrowAttr 0x557cf34f9248 <line:401:22>
| `-NonNullAttr 0x557cf34f92a0 <col:63, col:80> 1 2
|-FunctionDecl 0x557cf34f94a8 <line:402:1, line:404:79> line:402:12 pthread_attr_setdetachstate 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x557cf34f92e8 <col:41, col:57> col:57 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x557cf34f9368 <line:403:6, col:10> col:10 __detachstate 'int'
| |-NoThrowAttr 0x557cf34f9558 <line:404:22>
| `-NonNullAttr 0x557cf34f95b0 <col:63, col:77> 1
|-FunctionDecl 0x557cf34f9808 <line:405:1, line:407:82> line:405:12 pthread_attr_getguardsize 'int (const pthread_attr_t *, size_t *)' extern
| |-ParmVarDecl 0x557cf34f95f8 <col:39, col:61> col:61 __attr 'const pthread_attr_t *'
| |-ParmVarDecl 0x557cf34f96a0 <line:406:11, col:19> col:19 __guardsize 'size_t *'
| |-NoThrowAttr 0x557cf34f98b8 <line:407:22>
| `-NonNullAttr 0x557cf34f9910 <col:63, col:80> 1 2
|-FunctionDecl 0x557cf34fab68 <line:408:1, line:410:79> line:408:12 pthread_attr_setguardsize 'int (pthread_attr_t *, size_t)' extern
| |-ParmVarDecl 0x557cf34fa9b0 <col:39, col:55> col:55 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x557cf34faa28 <line:409:11, col:18> col:18 __guardsize 'size_t':'unsigned long'
| |-NoThrowAttr 0x557cf34fac18 <line:410:22>
| `-NonNullAttr 0x557cf34fac70 <col:63, col:77> 1
|-FunctionDecl 0x557cf34faea8 <line:411:1, line:413:82> line:411:12 pthread_attr_getschedparam 'int (const pthread_attr_t *restrict, struct sched_param *restrict)' extern
| |-ParmVarDecl 0x557cf34facb8 <col:40, col:73> col:73 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x557cf34fad48 <line:412:12, col:43> col:43 __param 'struct sched_param *restrict'
| |-NoThrowAttr 0x557cf34faf58 <line:413:22>
| `-NonNullAttr 0x557cf34fafb0 <col:63, col:80> 1 2
|-FunctionDecl 0x557cf34fb1e8 <line:414:1, line:416:97> line:414:12 pthread_attr_setschedparam 'int (pthread_attr_t *restrict, const struct sched_param *restrict)' extern
| |-ParmVarDecl 0x557cf34faff8 <col:40, col:67> col:67 __attr 'pthread_attr_t *restrict'
| |-ParmVarDecl 0x557cf34fb088 <line:415:12, line:416:12> col:12 __param 'const struct sched_param *restrict'
| |-NoThrowAttr 0x557cf34fb298 <col:37>
| `-NonNullAttr 0x557cf34fb2f0 <col:78, col:95> 1 2
|-FunctionDecl 0x557cf34fb4d8 <line:417:1, line:419:82> line:417:12 pthread_attr_getschedpolicy 'int (const pthread_attr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x557cf34fb338 <col:41, line:418:6> col:6 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x557cf34fb3b8 <col:14, col:30> col:30 __policy 'int *restrict'
| |-NoThrowAttr 0x557cf34fb588 <line:419:22>
| `-NonNullAttr 0x557cf34fb5e0 <col:63, col:80> 1 2
|-FunctionDecl 0x557cf34fb768 <line:420:1, line:421:79> line:420:12 pthread_attr_setschedpolicy 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x557cf34fb628 <col:41, col:57> col:57 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x557cf34fb6a8 <col:65, col:69> col:69 __policy 'int'
| |-NoThrowAttr 0x557cf34fb818 <line:421:22>
| `-NonNullAttr 0x557cf34fb870 <col:63, col:77> 1
|-FunctionDecl 0x557cf34fba38 <line:422:1, line:424:82> line:422:12 pthread_attr_getinheritsched 'int (const pthread_attr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x557cf34fb8b8 <col:42, line:423:7> col:7 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x557cf34fb938 <col:15, col:31> col:31 __inherit 'int *restrict'
| |-NoThrowAttr 0x557cf34fbae8 <line:424:22>
| `-NonNullAttr 0x557cf34fbb40 <col:63, col:80> 1 2
|-FunctionDecl 0x557cf34fbcc8 <line:425:1, line:427:79> line:425:12 pthread_attr_setinheritsched 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x557cf34fbb88 <col:42, col:58> col:58 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x557cf34fbc08 <line:426:7, col:11> col:11 __inherit 'int'
| |-NoThrowAttr 0x557cf34fbd78 <line:427:22>
| `-NonNullAttr 0x557cf34fbdd0 <col:63, col:77> 1
|-FunctionDecl 0x557cf34fbf78 <line:428:1, line:430:82> line:428:12 pthread_attr_getscope 'int (const pthread_attr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x557cf34fbe18 <col:35, col:68> col:68 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x557cf34fbe98 <line:429:7, col:23> col:23 __scope 'int *restrict'
| |-NoThrowAttr 0x557cf34fc028 <line:430:22>
| `-NonNullAttr 0x557cf34fc080 <col:63, col:80> 1 2
|-FunctionDecl 0x557cf34fc208 <line:431:1, line:432:79> line:431:12 pthread_attr_setscope 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x557cf34fc0c8 <col:35, col:51> col:51 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x557cf34fc148 <col:59, col:63> col:63 __scope 'int'
| |-NoThrowAttr 0x557cf34fc2b8 <line:432:22>
| `-NonNullAttr 0x557cf34fc310 <col:63, col:77> 1
|-FunctionDecl 0x557cf34fc538 <line:433:1, line:435:115> line:433:12 pthread_attr_getstackaddr 'int (const pthread_attr_t *restrict, void **restrict)' extern
| |-ParmVarDecl 0x557cf34fc358 <col:39, line:434:11> col:11 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x557cf34fc3d8 <col:19, col:37> col:37 __stackaddr 'void **restrict'
| |-NoThrowAttr 0x557cf34fc5e8 <line:435:22>
| |-NonNullAttr 0x557cf34fc640 <col:63, col:80> 1 2
| `-DeprecatedAttr 0x557cf34fc678 <col:100> "" ""
|-FunctionDecl 0x557cf34fc888 <line:436:1, line:438:112> line:436:12 pthread_attr_setstackaddr 'int (pthread_attr_t *, void *)' extern
| |-ParmVarDecl 0x557cf34fc6c8 <col:39, col:55> col:55 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x557cf34fc748 <line:437:11, col:17> col:17 __stackaddr 'void *'
| |-NoThrowAttr 0x557cf34fc938 <line:438:22>
| |-NonNullAttr 0x557cf34fc990 <col:63, col:77> 1
| `-DeprecatedAttr 0x557cf34fc9d8 <col:97> "" ""
|-FunctionDecl 0x557cf34fcbc8 <line:439:1, line:441:82> line:439:12 pthread_attr_getstacksize 'int (const pthread_attr_t *restrict, size_t *restrict)' extern
| |-ParmVarDecl 0x557cf34fca28 <col:39, line:440:11> col:11 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x557cf34fcaa0 <col:19, col:38> col:38 __stacksize 'size_t *restrict'
| |-NoThrowAttr 0x557cf34fcc78 <line:441:22>
| `-NonNullAttr 0x557cf34fccd0 <col:63, col:80> 1 2
|-FunctionDecl 0x557cf34fce50 <line:442:1, line:444:79> line:442:12 pthread_attr_setstacksize 'int (pthread_attr_t *, size_t)' extern
| |-ParmVarDecl 0x557cf34fcd18 <col:39, col:55> col:55 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x557cf34fcd90 <line:443:11, col:18> col:18 __stacksize 'size_t':'unsigned long'
| |-NoThrowAttr 0x557cf34fcf00 <line:444:22>
| `-NonNullAttr 0x557cf34fcf58 <col:63, col:77> 1
|-FunctionDecl 0x557cf34fd248 <line:445:1, line:448:85> line:445:12 pthread_attr_getstack 'int (const pthread_attr_t *restrict, void **restrict, size_t *restrict)' extern
| |-ParmVarDecl 0x557cf34fcfa8 <col:35, col:68> col:68 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x557cf34fd028 <line:446:7, col:25> col:25 __stackaddr 'void **restrict'
| |-ParmVarDecl 0x557cf34fd0a0 <line:447:7, col:26> col:26 __stacksize 'size_t *restrict'
| |-NoThrowAttr 0x557cf34fd300 <line:448:22>
| `-NonNullAttr 0x557cf34fd358 <col:63, col:83> 1 2 3
|-FunctionDecl 0x557cf34fd608 <line:449:1, line:450:100> line:449:12 pthread_attr_setstack 'int (pthread_attr_t *, void *, size_t)' extern
| |-ParmVarDecl 0x557cf34fd3b0 <col:35, col:51> col:51 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x557cf34fd430 <col:59, col:65> col:65 __stackaddr 'void *'
| |-ParmVarDecl 0x557cf34fd4a8 <line:450:7, col:14> col:14 __stacksize 'size_t':'unsigned long'
| |-NoThrowAttr 0x557cf34fd6c0 <col:43>
| `-NonNullAttr 0x557cf34fd718 <col:84, col:98> 1
|-FunctionDecl 0x557cf34fda20 <line:451:1, line:453:79> line:451:12 pthread_setschedparam 'int (pthread_t, int, const struct sched_param *)' extern
| |-ParmVarDecl 0x557cf34fd768 <col:35, col:45> col:45 __target_thread 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x557cf34fd7e8 <col:62, col:66> col:66 __policy 'int'
| |-ParmVarDecl 0x557cf34fd878 <line:452:7, col:33> col:33 __param 'const struct sched_param *'
| |-NoThrowAttr 0x557cf34fdad8 <line:453:22>
| `-NonNullAttr 0x557cf34fdb30 <col:63, col:77> 3
|-FunctionDecl 0x557cf34fde08 <line:454:1, line:457:82> line:454:12 pthread_getschedparam 'int (pthread_t, int *restrict, struct sched_param *restrict)' extern
| |-ParmVarDecl 0x557cf34fdb78 <col:35, col:45> col:45 __target_thread 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x557cf34fdbf8 <line:455:7, col:23> col:23 __policy 'int *restrict'
| |-ParmVarDecl 0x557cf34fdc88 <line:456:7, col:38> col:38 __param 'struct sched_param *restrict'
| |-NoThrowAttr 0x557cf34fdec0 <line:457:22>
| `-NonNullAttr 0x557cf34fdf18 <col:63, col:80> 2 3
|-FunctionDecl 0x557cf34fe108 <line:458:1, line:459:45> line:458:12 pthread_setschedprio 'int (pthread_t, int)' extern
| |-ParmVarDecl 0x557cf34fdf68 <col:34, col:44> col:44 __target_thread 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x557cf34fdfe8 <col:61, col:65> col:65 __prio 'int'
| `-NoThrowAttr 0x557cf34fe1b8 <line:459:22>
|-FunctionDecl 0x557cf34fe588 <line:460:1, line:461:71> line:460:12 pthread_once 'int (pthread_once_t *, void (*)(void))' extern
| |-ParmVarDecl 0x557cf34fe280 <col:26, col:42> col:42 __once_control 'pthread_once_t *'
| |-ParmVarDecl 0x557cf34fe420 <line:461:5, col:33> col:12 __init_routine 'void (*)(void)'
| `-NonNullAttr 0x557cf34fe638 <col:52, col:69> 1 2
|-FunctionDecl 0x557cf34fe7e0 <line:462:1, col:64> col:12 pthread_setcancelstate 'int (int, int *)' extern
| |-ParmVarDecl 0x557cf34fe6c0 <col:36, col:40> col:40 __state 'int'
| `-ParmVarDecl 0x557cf34fe740 <col:49, col:54> col:54 __oldstate 'int *'
|-FunctionDecl 0x557cf34fe9f0 <line:463:1, col:61> col:12 pthread_setcanceltype 'int (int, int *)' extern
| |-ParmVarDecl 0x557cf34fe8a8 <col:35, col:39> col:39 __type 'int'
| `-ParmVarDecl 0x557cf34fe928 <col:47, col:52> col:52 __oldtype 'int *'
|-FunctionDecl 0x557cf34feb48 <line:464:1, col:42> col:12 pthread_cancel 'int (pthread_t)' extern
| `-ParmVarDecl 0x557cf34feab0 <col:28, col:38> col:38 __th 'pthread_t':'unsigned long'
|-FunctionDecl 0x557cf34fec88 <line:465:1, col:37> col:13 pthread_testcancel 'void (void)' extern
|-RecordDecl 0x557cf34fed28 <line:466:9, line:474:1> line:466:9 struct definition
| |-RecordDecl 0x557cf34fedd8 <line:468:3, line:472:3> line:468:3 struct definition
| | |-FieldDecl 0x557cf34feec8 <line:470:5, col:15> col:15 __cancel_jmp_buf '__jmp_buf':'long [8]'
| | `-FieldDecl 0x557cf34fef30 <line:471:5, col:9> col:9 __mask_was_saved 'int'
| |-FieldDecl 0x557cf34ff100 <line:468:3, line:472:23> col:5 __cancel_jmp_buf 'struct (anonymous struct at ./split_4/rfi008_pso.oepc_false-unreach-call.i:468:3) [1]'
| `-FieldDecl 0x557cf34ff1f8 <line:473:3, col:16> col:9 __pad 'void *[4]'
|-TypedefDecl 0x557cf34ff2b0 <line:466:1, line:474:3> col:3 referenced __pthread_unwind_buf_t 'struct __pthread_unwind_buf_t':'__pthread_unwind_buf_t'
| |-ElaboratedType 0x557cf34ff250 'struct __pthread_unwind_buf_t' sugar
| | `-RecordType 0x557cf34fedb0 '__pthread_unwind_buf_t'
| |   `-Record 0x557cf34fed28 ''
| `-AlignedAttr 0x557cf34ff308 <col:42> aligned
|   `-<<<NULL>>>
|-RecordDecl 0x557cf34ff380 <line:475:1, line:481:1> line:475:8 struct __pthread_cleanup_frame definition
| |-FieldDecl 0x557cf34ff4e0 <line:477:3, col:35> col:10 __cancel_routine 'void (*)(void *)'
| |-FieldDecl 0x557cf34ff548 <line:478:3, col:9> col:9 __cancel_arg 'void *'
| |-FieldDecl 0x557cf34ff5b0 <line:479:3, col:7> col:7 __do_it 'int'
| `-FieldDecl 0x557cf34ff618 <line:480:3, col:7> col:7 __cancel_type 'int'
|-FunctionDecl 0x557cf34ff820 <line:482:1, col:69> col:13 __pthread_register_cancel 'void (__pthread_unwind_buf_t *)' extern
| `-ParmVarDecl 0x557cf34ff710 <col:40, col:64> col:64 __buf '__pthread_unwind_buf_t *'
|-FunctionDecl 0x557cf34ffa00 <line:484:1, col:71> col:13 __pthread_unregister_cancel 'void (__pthread_unwind_buf_t *)' extern
| `-ParmVarDecl 0x557cf34ff8d8 <col:42, col:66> col:66 __buf '__pthread_unwind_buf_t *'
|-FunctionDecl 0x557cf34ffbc0 <line:486:1, line:488:31> line:486:13 __pthread_unwind_next 'void (__pthread_unwind_buf_t *) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x557cf34ffab8 <col:36, col:60> col:60 __buf '__pthread_unwind_buf_t *'
| `-WeakAttr 0x557cf34ffc68 <line:488:22>
|-RecordDecl 0x557cf34ffcc0 <line:490:1, col:8> col:8 struct __jmp_buf_tag
|-FunctionDecl 0x557cf34fffd8 <line:491:1, col:98> col:12 __sigsetjmp 'int (struct __jmp_buf_tag *, int)' extern
| |-ParmVarDecl 0x557cf34ffe38 <col:25, col:47> col:47 __env 'struct __jmp_buf_tag *'
| |-ParmVarDecl 0x557cf34ffeb8 <col:54, col:58> col:58 __savemask 'int'
| |-NoThrowAttr 0x557cf3500088 <col:86>
| `-ReturnsTwiceAttr 0x557cf35000e0 <col:12> Implicit
|-FunctionDecl 0x557cf3500408 <line:492:1, line:494:79> line:492:12 pthread_mutex_init 'int (pthread_mutex_t *, const pthread_mutexattr_t *)' extern
| |-ParmVarDecl 0x557cf35001b0 <col:32, col:49> col:49 __mutex 'pthread_mutex_t *'
| |-ParmVarDecl 0x557cf35002c0 <line:493:11, col:38> col:38 __mutexattr 'const pthread_mutexattr_t *'
| |-NoThrowAttr 0x557cf35004b8 <line:494:22>
| `-NonNullAttr 0x557cf3500510 <col:63, col:77> 1
|-FunctionDecl 0x557cf3500688 <line:495:1, line:496:79> line:495:12 pthread_mutex_destroy 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x557cf3500558 <col:35, col:52> col:52 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x557cf3500730 <line:496:22>
| `-NonNullAttr 0x557cf3500788 <col:63, col:77> 1
|-FunctionDecl 0x557cf3500890 <line:497:1, line:498:68> line:497:12 pthread_mutex_trylock 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x557cf35007d8 <col:35, col:52> col:52 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x557cf3500938 <line:498:22>
| `-NonNullAttr 0x557cf3500990 <col:52, col:66> 1
|-FunctionDecl 0x557cf3501ad8 <line:499:1, line:500:68> line:499:12 pthread_mutex_lock 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x557cf3501a20 <col:32, col:49> col:49 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x557cf3501b80 <line:500:22>
| `-NonNullAttr 0x557cf3501bd8 <col:52, col:66> 1
|-FunctionDecl 0x557cf3501e18 <line:501:1, line:503:85> line:501:12 pthread_mutex_timedlock 'int (pthread_mutex_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x557cf3501c28 <col:37, col:65> col:65 __mutex 'pthread_mutex_t *restrict'
| |-ParmVarDecl 0x557cf3501cb8 <line:502:9, line:503:9> col:9 __abstime 'const struct timespec *restrict'
| |-NoThrowAttr 0x557cf3501ec8 <col:36>
| `-NonNullAttr 0x557cf3501f20 <col:66, col:83> 1 2
|-FunctionDecl 0x557cf3502020 <line:504:1, line:505:68> line:504:12 pthread_mutex_unlock 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x557cf3501f68 <col:34, col:51> col:51 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x557cf35020c8 <line:505:22>
| `-NonNullAttr 0x557cf3502120 <col:52, col:66> 1
|-FunctionDecl 0x557cf35023b8 <line:506:1, line:509:82> line:506:12 pthread_mutex_getprioceiling 'int (const pthread_mutex_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x557cf35021d0 <col:42, line:507:18> col:18 __mutex 'const pthread_mutex_t *restrict'
| |-ParmVarDecl 0x557cf3502250 <line:508:7, col:23> col:23 __prioceiling 'int *restrict'
| |-NoThrowAttr 0x557cf3502468 <line:509:22>
| `-NonNullAttr 0x557cf35024c0 <col:63, col:80> 1 2
|-FunctionDecl 0x557cf3502788 <line:510:1, line:513:82> line:510:12 pthread_mutex_setprioceiling 'int (pthread_mutex_t *restrict, int, int *restrict)' extern
| |-ParmVarDecl 0x557cf3502508 <col:42, col:70> col:70 __mutex 'pthread_mutex_t *restrict'
| |-ParmVarDecl 0x557cf3502588 <line:511:7, col:11> col:11 __prioceiling 'int'
| |-ParmVarDecl 0x557cf3502608 <line:512:7, col:23> col:23 __old_ceiling 'int *restrict'
| |-NoThrowAttr 0x557cf3502840 <line:513:22>
| `-NonNullAttr 0x557cf3502898 <col:63, col:80> 1 3
|-FunctionDecl 0x557cf3502a30 <line:514:1, line:515:79> line:514:12 pthread_mutex_consistent 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x557cf35028e8 <col:38, col:55> col:55 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x557cf3502ad8 <line:515:22>
| `-NonNullAttr 0x557cf3502b30 <col:63, col:77> 1
|-FunctionDecl 0x557cf3502d18 <line:516:1, line:517:79> line:516:12 pthread_mutexattr_init 'int (pthread_mutexattr_t *)' extern
| |-ParmVarDecl 0x557cf3502be0 <col:36, col:57> col:57 __attr 'pthread_mutexattr_t *'
| |-NoThrowAttr 0x557cf3502dc0 <line:517:22>
| `-NonNullAttr 0x557cf3502e18 <col:63, col:77> 1
|-FunctionDecl 0x557cf3502f20 <line:518:1, line:519:79> line:518:12 pthread_mutexattr_destroy 'int (pthread_mutexattr_t *)' extern
| |-ParmVarDecl 0x557cf3502e68 <col:39, col:60> col:60 __attr 'pthread_mutexattr_t *'
| |-NoThrowAttr 0x557cf3502fc8 <line:519:22>
| `-NonNullAttr 0x557cf3503020 <col:63, col:77> 1
|-FunctionDecl 0x557cf3503248 <line:520:1, line:523:82> line:520:12 pthread_mutexattr_getpshared 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x557cf3503068 <col:42, line:521:18> col:18 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x557cf35030e8 <line:522:7, col:23> col:23 __pshared 'int *restrict'
| |-NoThrowAttr 0x557cf35032f8 <line:523:22>
| `-NonNullAttr 0x557cf3503350 <col:63, col:80> 1 2
|-FunctionDecl 0x557cf3503558 <line:524:1, line:526:79> line:524:12 pthread_mutexattr_setpshared 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x557cf3503398 <col:42, col:63> col:63 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x557cf3503418 <line:525:7, col:11> col:11 __pshared 'int'
| |-NoThrowAttr 0x557cf3503608 <line:526:22>
| `-NonNullAttr 0x557cf3503660 <col:63, col:77> 1
|-FunctionDecl 0x557cf3503808 <line:527:1, line:529:82> line:527:12 pthread_mutexattr_gettype 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x557cf35036a8 <col:39, line:528:11> col:11 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x557cf3503728 <col:19, col:35> col:35 __kind 'int *restrict'
| |-NoThrowAttr 0x557cf35038b8 <line:529:22>
| `-NonNullAttr 0x557cf3503910 <col:63, col:80> 1 2
|-FunctionDecl 0x557cf3503b00 <line:530:1, line:531:79> line:530:12 pthread_mutexattr_settype 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x557cf3503958 <col:39, col:60> col:60 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x557cf3503a40 <col:68, col:72> col:72 __kind 'int'
| |-NoThrowAttr 0x557cf3503bb0 <line:531:22>
| `-NonNullAttr 0x557cf3503c08 <col:63, col:77> 1
|-FunctionDecl 0x557cf3503db8 <line:532:1, line:535:82> line:532:12 pthread_mutexattr_getprotocol 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x557cf3503c58 <col:43, line:533:19> col:19 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x557cf3503cd8 <line:534:8, col:24> col:24 __protocol 'int *restrict'
| |-NoThrowAttr 0x557cf3503e68 <line:535:22>
| `-NonNullAttr 0x557cf3503ec0 <col:63, col:80> 1 2
|-FunctionDecl 0x557cf3504048 <line:536:1, line:538:79> line:536:12 pthread_mutexattr_setprotocol 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x557cf3503f08 <col:43, col:64> col:64 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x557cf3503f88 <line:537:8, col:12> col:12 __protocol 'int'
| |-NoThrowAttr 0x557cf35040f8 <line:538:22>
| `-NonNullAttr 0x557cf3504150 <col:63, col:77> 1
|-FunctionDecl 0x557cf35042f8 <line:539:1, line:542:82> line:539:12 pthread_mutexattr_getprioceiling 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x557cf3504198 <col:46, line:540:22> col:22 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x557cf3504218 <line:541:11, col:27> col:27 __prioceiling 'int *restrict'
| |-NoThrowAttr 0x557cf35043a8 <line:542:22>
| `-NonNullAttr 0x557cf3504400 <col:63, col:80> 1 2
|-FunctionDecl 0x557cf3504588 <line:543:1, line:545:79> line:543:12 pthread_mutexattr_setprioceiling 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x557cf3504448 <col:46, col:67> col:67 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x557cf35044c8 <line:544:11, col:15> col:15 __prioceiling 'int'
| |-NoThrowAttr 0x557cf3504638 <line:545:22>
| `-NonNullAttr 0x557cf3504690 <col:63, col:77> 1
|-FunctionDecl 0x557cf3504878 <line:546:1, line:548:82> line:546:12 pthread_mutexattr_getrobust 'int (const pthread_mutexattr_t *, int *)' extern
| |-ParmVarDecl 0x557cf35046d8 <col:41, col:68> col:68 __attr 'const pthread_mutexattr_t *'
| |-ParmVarDecl 0x557cf3504758 <line:547:6, col:11> col:11 __robustness 'int *'
| |-NoThrowAttr 0x557cf3504928 <line:548:22>
| `-NonNullAttr 0x557cf3504980 <col:63, col:80> 1 2
|-FunctionDecl 0x557cf3505b38 <line:549:1, line:551:79> line:549:12 pthread_mutexattr_setrobust 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x557cf35049c8 <col:41, col:62> col:62 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x557cf3505a78 <line:550:6, col:10> col:10 __robustness 'int'
| |-NoThrowAttr 0x557cf3505be8 <line:551:22>
| `-NonNullAttr 0x557cf3505c40 <col:63, col:77> 1
|-FunctionDecl 0x557cf3505f78 <line:552:1, line:554:86> line:552:12 pthread_rwlock_init 'int (pthread_rwlock_t *restrict, const pthread_rwlockattr_t *restrict)' extern
| |-ParmVarDecl 0x557cf3505d20 <col:33, col:62> col:62 __rwlock 'pthread_rwlock_t *restrict'
| |-ParmVarDecl 0x557cf3505e30 <line:553:5, line:554:5> col:5 __attr 'const pthread_rwlockattr_t *restrict'
| |-NoThrowAttr 0x557cf3506028 <col:29>
| `-NonNullAttr 0x557cf3506080 <col:70, col:84> 1
|-FunctionDecl 0x557cf35061f8 <line:555:1, line:556:79> line:555:12 pthread_rwlock_destroy 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x557cf35060c8 <col:36, col:54> col:54 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x557cf35062a0 <line:556:22>
| `-NonNullAttr 0x557cf35062f8 <col:63, col:77> 1
|-FunctionDecl 0x557cf3506400 <line:557:1, line:558:68> line:557:12 pthread_rwlock_rdlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x557cf3506348 <col:35, col:53> col:53 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x557cf35064a8 <line:558:22>
| `-NonNullAttr 0x557cf3506500 <col:52, col:66> 1
|-FunctionDecl 0x557cf3506600 <line:559:1, line:560:65> line:559:12 pthread_rwlock_tryrdlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x557cf3506548 <col:38, col:56> col:56 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x557cf35066a8 <line:560:19>
| `-NonNullAttr 0x557cf3506700 <col:49, col:63> 1
|-FunctionDecl 0x557cf3506938 <line:561:1, line:563:88> line:561:12 pthread_rwlock_timedrdlock 'int (pthread_rwlock_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x557cf3506748 <col:40, col:69> col:69 __rwlock 'pthread_rwlock_t *restrict'
| |-ParmVarDecl 0x557cf35067d8 <line:562:12, line:563:12> col:12 __abstime 'const struct timespec *restrict'
| |-NoThrowAttr 0x557cf35069e8 <col:39>
| `-NonNullAttr 0x557cf3506a70 <col:69, col:86> 1 2
|-FunctionDecl 0x557cf3506b70 <line:564:1, line:565:68> line:564:12 pthread_rwlock_wrlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x557cf3506ab8 <col:35, col:53> col:53 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x557cf3506c18 <line:565:22>
| `-NonNullAttr 0x557cf3506c70 <col:52, col:66> 1
|-FunctionDecl 0x557cf3506d70 <line:566:1, line:567:68> line:566:12 pthread_rwlock_trywrlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x557cf3506cb8 <col:38, col:56> col:56 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x557cf3506e18 <line:567:22>
| `-NonNullAttr 0x557cf3506e70 <col:52, col:66> 1
|-FunctionDecl 0x557cf3507028 <line:568:1, line:570:88> line:568:12 pthread_rwlock_timedwrlock 'int (pthread_rwlock_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x557cf3506eb8 <col:40, col:69> col:69 __rwlock 'pthread_rwlock_t *restrict'
| |-ParmVarDecl 0x557cf3506f48 <line:569:12, line:570:12> col:12 __abstime 'const struct timespec *restrict'
| |-NoThrowAttr 0x557cf35070d8 <col:39>
| `-NonNullAttr 0x557cf3507130 <col:69, col:86> 1 2
|-FunctionDecl 0x557cf3507230 <line:571:1, line:572:68> line:571:12 pthread_rwlock_unlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x557cf3507178 <col:35, col:53> col:53 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x557cf35072d8 <line:572:22>
| `-NonNullAttr 0x557cf3507330 <col:52, col:66> 1
|-FunctionDecl 0x557cf3507518 <line:573:1, line:574:79> line:573:12 pthread_rwlockattr_init 'int (pthread_rwlockattr_t *)' extern
| |-ParmVarDecl 0x557cf35073e0 <col:37, col:59> col:59 __attr 'pthread_rwlockattr_t *'
| |-NoThrowAttr 0x557cf35075c0 <line:574:22>
| `-NonNullAttr 0x557cf3507618 <col:63, col:77> 1
|-FunctionDecl 0x557cf3507720 <line:575:1, line:576:79> line:575:12 pthread_rwlockattr_destroy 'int (pthread_rwlockattr_t *)' extern
| |-ParmVarDecl 0x557cf3507668 <col:40, col:62> col:62 __attr 'pthread_rwlockattr_t *'
| |-NoThrowAttr 0x557cf35077c8 <line:576:22>
| `-NonNullAttr 0x557cf3507820 <col:63, col:77> 1
|-FunctionDecl 0x557cf3507a80 <line:577:1, line:580:82> line:577:12 pthread_rwlockattr_getpshared 'int (const pthread_rwlockattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x557cf3507868 <col:43, line:578:19> col:19 __attr 'const pthread_rwlockattr_t *restrict'
| |-ParmVarDecl 0x557cf35078e8 <line:579:8, col:24> col:24 __pshared 'int *restrict'
| |-NoThrowAttr 0x557cf3507b30 <line:580:22>
| `-NonNullAttr 0x557cf3507b88 <col:63, col:80> 1 2
|-FunctionDecl 0x557cf3507d98 <line:581:1, line:583:79> line:581:12 pthread_rwlockattr_setpshared 'int (pthread_rwlockattr_t *, int)' extern
| |-ParmVarDecl 0x557cf3507bd8 <col:43, col:65> col:65 __attr 'pthread_rwlockattr_t *'
| |-ParmVarDecl 0x557cf3507c58 <line:582:8, col:12> col:12 __pshared 'int'
| |-NoThrowAttr 0x557cf3507e48 <line:583:22>
| `-NonNullAttr 0x557cf3507ea0 <col:63, col:77> 1
|-FunctionDecl 0x557cf3508048 <line:584:1, line:587:82> line:584:12 pthread_rwlockattr_getkind_np 'int (const pthread_rwlockattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x557cf3507ee8 <col:43, line:585:19> col:19 __attr 'const pthread_rwlockattr_t *restrict'
| |-ParmVarDecl 0x557cf3507f68 <line:586:8, col:24> col:24 __pref 'int *restrict'
| |-NoThrowAttr 0x557cf35080f8 <line:587:22>
| `-NonNullAttr 0x557cf3508150 <col:63, col:80> 1 2
|-FunctionDecl 0x557cf35082d8 <line:588:1, line:589:93> line:588:12 pthread_rwlockattr_setkind_np 'int (pthread_rwlockattr_t *, int)' extern
| |-ParmVarDecl 0x557cf3508198 <col:43, col:65> col:65 __attr 'pthread_rwlockattr_t *'
| |-ParmVarDecl 0x557cf3508218 <line:589:8, col:12> col:12 __pref 'int'
| |-NoThrowAttr 0x557cf3508388 <col:36>
| `-NonNullAttr 0x557cf35083e0 <col:77, col:91> 1
|-FunctionDecl 0x557cf3508718 <line:590:1, line:592:79> line:590:12 pthread_cond_init 'int (pthread_cond_t *restrict, const pthread_condattr_t *restrict)' extern
| |-ParmVarDecl 0x557cf35084c0 <col:31, col:58> col:58 __cond 'pthread_cond_t *restrict'
| |-ParmVarDecl 0x557cf35085d0 <line:591:10, col:47> col:47 __cond_attr 'const pthread_condattr_t *restrict'
| |-NoThrowAttr 0x557cf35087c8 <line:592:22>
| `-NonNullAttr 0x557cf3508820 <col:63, col:77> 1
|-FunctionDecl 0x557cf3508998 <line:593:1, line:594:79> line:593:12 pthread_cond_destroy 'int (pthread_cond_t *)' extern
| |-ParmVarDecl 0x557cf3508868 <col:34, col:50> col:50 __cond 'pthread_cond_t *'
| |-NoThrowAttr 0x557cf3508a40 <line:594:22>
| `-NonNullAttr 0x557cf3508ac0 <col:63, col:77> 1
|-FunctionDecl 0x557cf3508bc0 <line:595:1, line:596:68> line:595:12 pthread_cond_signal 'int (pthread_cond_t *)' extern
| |-ParmVarDecl 0x557cf3508b08 <col:33, col:49> col:49 __cond 'pthread_cond_t *'
| |-NoThrowAttr 0x557cf3508c68 <line:596:22>
| `-NonNullAttr 0x557cf3508cc0 <col:52, col:66> 1
|-FunctionDecl 0x557cf3508dc0 <line:597:1, line:598:68> line:597:12 pthread_cond_broadcast 'int (pthread_cond_t *)' extern
| |-ParmVarDecl 0x557cf3508d08 <col:36, col:52> col:52 __cond 'pthread_cond_t *'
| |-NoThrowAttr 0x557cf3508e68 <line:598:22>
| `-NonNullAttr 0x557cf3508ec0 <col:52, col:66> 1
|-FunctionDecl 0x557cf35090e8 <line:599:1, line:601:41> line:599:12 pthread_cond_wait 'int (pthread_cond_t *restrict, pthread_mutex_t *restrict)' extern
| |-ParmVarDecl 0x557cf3508f08 <col:31, col:58> col:58 __cond 'pthread_cond_t *restrict'
| |-ParmVarDecl 0x557cf3508f80 <line:600:10, col:38> col:38 __mutex 'pthread_mutex_t *restrict'
| `-NonNullAttr 0x557cf3509198 <line:601:22, col:39> 1 2
|-FunctionDecl 0x557cf35094c8 <line:602:1, line:605:44> line:602:12 pthread_cond_timedwait 'int (pthread_cond_t *restrict, pthread_mutex_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x557cf3509218 <col:36, col:63> col:63 __cond 'pthread_cond_t *restrict'
| |-ParmVarDecl 0x557cf3509290 <line:603:8, col:36> col:36 __mutex 'pthread_mutex_t *restrict'
| |-ParmVarDecl 0x557cf3509320 <line:604:8, col:42> col:42 __abstime 'const struct timespec *restrict'
| `-NonNullAttr 0x557cf3509580 <line:605:22, col:42> 1 2 3
|-FunctionDecl 0x557cf3509798 <line:606:1, line:607:79> line:606:12 pthread_condattr_init 'int (pthread_condattr_t *)' extern
| |-ParmVarDecl 0x557cf3509660 <col:35, col:55> col:55 __attr 'pthread_condattr_t *'
| |-NoThrowAttr 0x557cf3509840 <line:607:22>
| `-NonNullAttr 0x557cf3509898 <col:63, col:77> 1
|-FunctionDecl 0x557cf35099a0 <line:608:1, line:609:79> line:608:12 pthread_condattr_destroy 'int (pthread_condattr_t *)' extern
| |-ParmVarDecl 0x557cf35098e8 <col:38, col:58> col:58 __attr 'pthread_condattr_t *'
| |-NoThrowAttr 0x557cf3509a48 <line:609:22>
| `-NonNullAttr 0x557cf3509ad0 <col:63, col:77> 1
|-FunctionDecl 0x557cf3509cf8 <line:610:1, line:613:82> line:610:12 pthread_condattr_getpshared 'int (const pthread_condattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x557cf3509b18 <col:41, line:611:17> col:17 __attr 'const pthread_condattr_t *restrict'
| |-ParmVarDecl 0x557cf3509b98 <line:612:6, col:22> col:22 __pshared 'int *restrict'
| |-NoThrowAttr 0x557cf3509da8 <line:613:22>
| `-NonNullAttr 0x557cf3509e00 <col:63, col:80> 1 2
|-FunctionDecl 0x557cf350a008 <line:614:1, line:615:94> line:614:12 pthread_condattr_setpshared 'int (pthread_condattr_t *, int)' extern
| |-ParmVarDecl 0x557cf3509e48 <col:41, col:61> col:61 __attr 'pthread_condattr_t *'
| |-ParmVarDecl 0x557cf3509ec8 <line:615:6, col:10> col:10 __pshared 'int'
| |-NoThrowAttr 0x557cf350a0b8 <col:37>
| `-NonNullAttr 0x557cf350a110 <col:78, col:92> 1
|-FunctionDecl 0x557cf350a328 <line:616:1, line:619:82> line:616:12 pthread_condattr_getclock 'int (const pthread_condattr_t *restrict, __clockid_t *restrict)' extern
| |-ParmVarDecl 0x557cf350a158 <col:39, line:617:22> col:22 __attr 'const pthread_condattr_t *restrict'
| |-ParmVarDecl 0x557cf350a200 <line:618:11, col:35> col:35 __clock_id '__clockid_t *restrict'
| |-NoThrowAttr 0x557cf350a3d8 <line:619:22>
| `-NonNullAttr 0x557cf350a430 <col:63, col:80> 1 2
|-FunctionDecl 0x557cf350a5f8 <line:620:1, line:622:79> line:620:12 pthread_condattr_setclock 'int (pthread_condattr_t *, __clockid_t)' extern
| |-ParmVarDecl 0x557cf350a478 <col:39, col:59> col:59 __attr 'pthread_condattr_t *'
| |-ParmVarDecl 0x557cf350a4f0 <line:621:11, col:23> col:23 __clock_id '__clockid_t':'int'
| |-NoThrowAttr 0x557cf350a6a8 <line:622:22>
| `-NonNullAttr 0x557cf350a700 <col:63, col:77> 1
|-FunctionDecl 0x557cf350a9a8 <line:623:1, line:624:79> line:623:12 pthread_spin_init 'int (pthread_spinlock_t *, int)' extern
| |-ParmVarDecl 0x557cf350a7e0 <col:31, col:51> col:51 __lock 'pthread_spinlock_t *'
| |-ParmVarDecl 0x557cf350a860 <col:59, col:63> col:63 __pshared 'int'
| |-NoThrowAttr 0x557cf350aa58 <line:624:22>
| `-NonNullAttr 0x557cf350aae0 <col:63, col:77> 1
|-FunctionDecl 0x557cf350ac58 <line:625:1, line:626:79> line:625:12 pthread_spin_destroy 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x557cf350ab28 <col:34, col:54> col:54 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x557cf350ad00 <line:626:22>
| `-NonNullAttr 0x557cf350ad58 <col:63, col:77> 1
|-FunctionDecl 0x557cf350ae60 <line:627:1, line:628:68> line:627:12 pthread_spin_lock 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x557cf350ada8 <col:31, col:51> col:51 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x557cf350af08 <line:628:22>
| `-NonNullAttr 0x557cf350af60 <col:52, col:66> 1
|-FunctionDecl 0x557cf350b060 <line:629:1, line:630:68> line:629:12 pthread_spin_trylock 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x557cf350afa8 <col:34, col:54> col:54 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x557cf350b108 <line:630:22>
| `-NonNullAttr 0x557cf350b160 <col:52, col:66> 1
|-FunctionDecl 0x557cf350b260 <line:631:1, line:632:68> line:631:12 pthread_spin_unlock 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x557cf350b1a8 <col:33, col:53> col:53 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x557cf350b308 <line:632:22>
| `-NonNullAttr 0x557cf350b360 <col:52, col:66> 1
|-FunctionDecl 0x557cf350b738 <line:633:1, line:636:79> line:633:12 pthread_barrier_init 'int (pthread_barrier_t *restrict, const pthread_barrierattr_t *restrict, unsigned int)' extern
| |-ParmVarDecl 0x557cf350b440 <col:34, col:64> col:64 __barrier 'pthread_barrier_t *restrict'
| |-ParmVarDecl 0x557cf350b550 <line:634:6, line:635:6> col:6 __attr 'const pthread_barrierattr_t *restrict'
| |-ParmVarDecl 0x557cf350b5d0 <col:14, col:27> col:27 __count 'unsigned int'
| |-NoThrowAttr 0x557cf350b7f0 <line:636:22>
| `-NonNullAttr 0x557cf350b848 <col:63, col:77> 1
|-FunctionDecl 0x557cf350b9c8 <line:637:1, line:638:79> line:637:12 pthread_barrier_destroy 'int (pthread_barrier_t *)' extern
| |-ParmVarDecl 0x557cf350b898 <col:37, col:56> col:56 __barrier 'pthread_barrier_t *'
| |-NoThrowAttr 0x557cf350ba70 <line:638:22>
| `-NonNullAttr 0x557cf350cb00 <col:63, col:77> 1
|-FunctionDecl 0x557cf350cc00 <line:639:1, line:640:68> line:639:12 pthread_barrier_wait 'int (pthread_barrier_t *)' extern
| |-ParmVarDecl 0x557cf350cb48 <col:34, col:53> col:53 __barrier 'pthread_barrier_t *'
| |-NoThrowAttr 0x557cf350cca8 <line:640:22>
| `-NonNullAttr 0x557cf350cd00 <col:52, col:66> 1
|-FunctionDecl 0x557cf350cee8 <line:641:1, line:642:79> line:641:12 pthread_barrierattr_init 'int (pthread_barrierattr_t *)' extern
| |-ParmVarDecl 0x557cf350cdb0 <col:38, col:61> col:61 __attr 'pthread_barrierattr_t *'
| |-NoThrowAttr 0x557cf350cf90 <line:642:22>
| `-NonNullAttr 0x557cf350cfe8 <col:63, col:77> 1
|-FunctionDecl 0x557cf350d0f0 <line:643:1, line:644:79> line:643:12 pthread_barrierattr_destroy 'int (pthread_barrierattr_t *)' extern
| |-ParmVarDecl 0x557cf350d038 <col:41, col:64> col:64 __attr 'pthread_barrierattr_t *'
| |-NoThrowAttr 0x557cf350d198 <line:644:22>
| `-NonNullAttr 0x557cf350d1f0 <col:63, col:77> 1
|-FunctionDecl 0x557cf350d418 <line:645:1, line:648:82> line:645:12 pthread_barrierattr_getpshared 'int (const pthread_barrierattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x557cf350d238 <col:44, line:646:20> col:20 __attr 'const pthread_barrierattr_t *restrict'
| |-ParmVarDecl 0x557cf350d2b8 <line:647:9, col:25> col:25 __pshared 'int *restrict'
| |-NoThrowAttr 0x557cf350d4c8 <line:648:22>
| `-NonNullAttr 0x557cf350d520 <col:63, col:80> 1 2
|-FunctionDecl 0x557cf350d728 <line:649:1, line:651:79> line:649:12 pthread_barrierattr_setpshared 'int (pthread_barrierattr_t *, int)' extern
| |-ParmVarDecl 0x557cf350d568 <col:44, col:67> col:67 __attr 'pthread_barrierattr_t *'
| |-ParmVarDecl 0x557cf350d5e8 <line:650:9, col:13> col:13 __pshared 'int'
| |-NoThrowAttr 0x557cf350d7d8 <line:651:22>
| `-NonNullAttr 0x557cf350d830 <col:63, col:77> 1
|-FunctionDecl 0x557cf350db98 <line:652:1, line:654:79> line:652:12 pthread_key_create 'int (pthread_key_t *, void (*)(void *))' extern
| |-ParmVarDecl 0x557cf350d910 <col:32, col:47> col:47 __key 'pthread_key_t *'
| |-ParmVarDecl 0x557cf350da30 <line:653:11, col:43> col:18 __destr_function 'void (*)(void *)'
| |-NoThrowAttr 0x557cf350dc48 <line:654:22>
| `-NonNullAttr 0x557cf350dca0 <col:63, col:77> 1
|-FunctionDecl 0x557cf350ddf8 <line:655:1, col:92> col:12 pthread_key_delete 'int (pthread_key_t)' extern
| |-ParmVarDecl 0x557cf350dce8 <col:32, col:46> col:46 __key 'pthread_key_t':'unsigned int'
| `-NoThrowAttr 0x557cf350dea0 <col:69>
|-FunctionDecl 0x557cf350e018 <line:656:1, col:95> col:14 pthread_getspecific 'void *(pthread_key_t)' extern
| |-ParmVarDecl 0x557cf350df08 <col:35, col:49> col:49 __key 'pthread_key_t':'unsigned int'
| `-NoThrowAttr 0x557cf350e0c0 <col:72>
|-FunctionDecl 0x557cf350e2f8 <line:657:1, line:658:67> line:657:12 pthread_setspecific 'int (pthread_key_t, const void *)' extern
| |-ParmVarDecl 0x557cf350e128 <col:33, col:47> col:47 __key 'pthread_key_t':'unsigned int'
| |-ParmVarDecl 0x557cf350e1d8 <line:658:5, col:17> col:17 __pointer 'const void *'
| `-NoThrowAttr 0x557cf350e3a8 <col:44>
|-FunctionDecl 0x557cf350e5c8 <line:659:1, line:661:79> line:659:12 pthread_getcpuclockid 'int (pthread_t, __clockid_t *)' extern
| |-ParmVarDecl 0x557cf350e410 <col:35, col:45> col:45 __thread_id 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x557cf350e488 <line:660:7, col:20> col:20 __clock_id '__clockid_t *'
| |-NoThrowAttr 0x557cf350e678 <line:661:22>
| `-NonNullAttr 0x557cf350e6d0 <col:63, col:77> 2
|-FunctionDecl 0x557cf350eb30 <line:662:1, line:664:70> line:662:12 pthread_atfork 'int (void (*)(void), void (*)(void), void (*)(void))' extern
| |-ParmVarDecl 0x557cf350e7b0 <col:28, col:51> col:35 __prepare 'void (*)(void)'
| |-ParmVarDecl 0x557cf350e8c0 <line:663:7, col:29> col:14 __parent 'void (*)(void)'
| |-ParmVarDecl 0x557cf350e9d0 <line:664:7, col:28> col:14 __child 'void (*)(void)'
| `-NoThrowAttr 0x557cf350ebe8 <col:47>
|-FunctionDecl 0x557cf350ecf0 <line:666:1, col:20> col:8 used P0 'void *(void *)'
| `-ParmVarDecl 0x557cf350ec58 <col:11, col:17> col:17 arg 'void *'
|-FunctionDecl 0x557cf350ee48 <line:667:1, col:20> col:8 used P1 'void *(void *)'
| `-ParmVarDecl 0x557cf350edb0 <col:11, col:17> col:17 arg 'void *'
|-FunctionDecl 0x557cf350ef10 <line:668:1, col:12> col:6 fence 'void ()'
|-FunctionDecl 0x557cf350efd0 <line:669:1, col:12> col:6 isync 'void ()'
|-FunctionDecl 0x557cf350f090 <line:670:1, col:14> col:6 lwfence 'void ()'
|-VarDecl 0x557cf350f148 <line:671:1, col:5> col:5 used __unbuffered_cnt 'int'
|-VarDecl 0x557cf350f1c8 prev 0x557cf350f148 <line:672:1, col:24> col:5 used __unbuffered_cnt 'int' cinit
| `-IntegerLiteral 0x557cf350f230 <col:24> 'int' 0
|-VarDecl 0x557cf350f268 <line:673:1, col:5> col:5 used __unbuffered_p0_EAX 'int'
|-VarDecl 0x557cf350f2e8 prev 0x557cf350f268 <line:674:1, col:27> col:5 used __unbuffered_p0_EAX 'int' cinit
| `-IntegerLiteral 0x557cf350f350 <col:27> 'int' 0
|-VarDecl 0x557cf350f388 <line:675:1, col:5> col:5 used __unbuffered_p0_EBX 'int'
|-VarDecl 0x557cf350f408 prev 0x557cf350f388 <line:676:1, col:27> col:5 used __unbuffered_p0_EBX 'int' cinit
| `-IntegerLiteral 0x557cf350f470 <col:27> 'int' 0
|-VarDecl 0x557cf350f4a8 <line:677:1, col:5> col:5 used __unbuffered_p1_EAX 'int'
|-VarDecl 0x557cf350f528 prev 0x557cf350f4a8 <line:678:1, col:27> col:5 used __unbuffered_p1_EAX 'int' cinit
| `-IntegerLiteral 0x557cf350f590 <col:27> 'int' 0
|-VarDecl 0x557cf350f5c8 <line:679:1, col:5> col:5 used __unbuffered_p1_EBX 'int'
|-VarDecl 0x557cf350f648 prev 0x557cf350f5c8 <line:680:1, col:27> col:5 used __unbuffered_p1_EBX 'int' cinit
| `-IntegerLiteral 0x557cf350f6b0 <col:27> 'int' 0
|-VarDecl 0x557cf350f6e0 <line:681:1, col:7> col:7 used main$tmp_guard0 '_Bool'
|-VarDecl 0x557cf350f758 <line:682:1, col:7> col:7 used main$tmp_guard1 '_Bool'
|-VarDecl 0x557cf350f7d8 <line:683:1, col:5> col:5 used x 'int'
|-VarDecl 0x557cf350f858 prev 0x557cf350f7d8 <line:684:1, col:9> col:5 used x 'int' cinit
| `-IntegerLiteral 0x557cf350f8c0 <col:9> 'int' 0
|-VarDecl 0x557cf350f8f0 <line:685:1, col:7> col:7 used x$flush_delayed '_Bool'
|-VarDecl 0x557cf350f970 <line:686:1, col:5> col:5 used x$mem_tmp 'int'
|-VarDecl 0x557cf350f9e8 <line:687:1, col:7> col:7 used x$r_buff0_thd0 '_Bool'
|-VarDecl 0x557cf350fa60 <line:688:1, col:7> col:7 used x$r_buff0_thd1 '_Bool'
|-VarDecl 0x557cf350fb00 <line:689:1, col:7> col:7 used x$r_buff0_thd2 '_Bool'
|-VarDecl 0x557cf350fb78 <line:690:1, col:7> col:7 used x$r_buff1_thd0 '_Bool'
|-VarDecl 0x557cf350fbf0 <line:691:1, col:7> col:7 used x$r_buff1_thd1 '_Bool'
|-VarDecl 0x557cf350fc68 <line:692:1, col:7> col:7 used x$r_buff1_thd2 '_Bool'
|-VarDecl 0x557cf350fce0 <line:693:1, col:7> col:7 x$read_delayed '_Bool'
|-VarDecl 0x557cf350fd60 <line:694:1, col:6> col:6 x$read_delayed_var 'int *'
|-VarDecl 0x557cf350fde0 <line:695:1, col:5> col:5 used x$w_buff0 'int'
|-VarDecl 0x557cf350fe58 <line:696:1, col:7> col:7 used x$w_buff0_used '_Bool'
|-VarDecl 0x557cf350fed8 <line:697:1, col:5> col:5 used x$w_buff1 'int'
|-VarDecl 0x557cf350ff50 <line:698:1, col:7> col:7 used x$w_buff1_used '_Bool'
|-VarDecl 0x557cf350ffd0 <line:699:1, col:5> col:5 used y 'int'
|-VarDecl 0x557cf3510050 prev 0x557cf350ffd0 <line:700:1, col:9> col:5 used y 'int' cinit
| `-IntegerLiteral 0x557cf35100b8 <col:9> 'int' 0
|-VarDecl 0x557cf35100e8 <line:701:1, col:7> col:7 used weak$$choice0 '_Bool'
|-VarDecl 0x557cf3510160 <line:702:1, col:7> col:7 used weak$$choice2 '_Bool'
|-FunctionDecl 0x557cf3510278 prev 0x557cf350ecf0 <line:703:1, line:746:1> line:703:8 used P0 'void *(void *)'
| |-ParmVarDecl 0x557cf35101e0 <col:11, col:17> col:17 arg 'void *'
| `-CompoundStmt 0x557cf3514518 <line:704:1, line:746:1>
|   |-CallExpr 0x557cf3510388 <line:705:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x557cf3510370 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x557cf3510320 <col:3> 'void ()' Function 0x557cf34b5fa0 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x557cf3510400 <line:706:3, col:15> 'int' '='
|   | |-DeclRefExpr 0x557cf35103a8 <col:3> 'int' lvalue Var 0x557cf350fed8 'x$w_buff1' 'int'
|   | `-ImplicitCastExpr 0x557cf35103e8 <col:15> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x557cf35103c8 <col:15> 'int' lvalue Var 0x557cf350fde0 'x$w_buff0' 'int'
|   |-BinaryOperator 0x557cf3510460 <line:707:3, col:15> 'int' '='
|   | |-DeclRefExpr 0x557cf3510420 <col:3> 'int' lvalue Var 0x557cf350fde0 'x$w_buff0' 'int'
|   | `-IntegerLiteral 0x557cf3510440 <col:15> 'int' 1
|   |-BinaryOperator 0x557cf35104d8 <line:708:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x557cf3510480 <col:3> '_Bool' lvalue Var 0x557cf350ff50 'x$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x557cf35104c0 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x557cf35104a0 <col:20> '_Bool' lvalue Var 0x557cf350fe58 'x$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x557cf3510570 <line:709:3, col:27> '_Bool' '='
|   | |-DeclRefExpr 0x557cf35104f8 <col:3> '_Bool' lvalue Var 0x557cf350fe58 'x$w_buff0_used' '_Bool'
|   | `-CStyleCastExpr 0x557cf3510548 <col:20, col:27> '_Bool' <IntegralToBoolean>
|   |   `-IntegerLiteral 0x557cf3510518 <col:27> 'int' 1
|   |-CallExpr 0x557cf35106f8 <line:710:3, col:56> 'void'
|   | |-ImplicitCastExpr 0x557cf35106e0 <col:3> 'void (*)(int)' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x557cf3510590 <col:3> 'void (int)' Function 0x557cf34b5d28 '__VERIFIER_assert' 'void (int)'
|   | `-UnaryOperator 0x557cf3510690 <col:21, col:55> 'int' prefix '!' cannot overflow
|   |   `-ParenExpr 0x557cf3510670 <col:22, col:55> 'int'
|   |     `-BinaryOperator 0x557cf3510650 <col:23, col:41> 'int' '&&'
|   |       |-ImplicitCastExpr 0x557cf3510608 <col:23> 'int' <IntegralCast>
|   |       | `-ImplicitCastExpr 0x557cf35105f0 <col:23> '_Bool' <LValueToRValue>
|   |       |   `-DeclRefExpr 0x557cf35105b0 <col:23> '_Bool' lvalue Var 0x557cf350ff50 'x$w_buff1_used' '_Bool'
|   |       `-ImplicitCastExpr 0x557cf3510638 <col:41> 'int' <IntegralCast>
|   |         `-ImplicitCastExpr 0x557cf3510620 <col:41> '_Bool' <LValueToRValue>
|   |           `-DeclRefExpr 0x557cf35105d0 <col:41> '_Bool' lvalue Var 0x557cf350fe58 'x$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x557cf3510778 <line:711:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x557cf3510720 <col:3> '_Bool' lvalue Var 0x557cf350fb78 'x$r_buff1_thd0' '_Bool'
|   | `-ImplicitCastExpr 0x557cf3510760 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x557cf3510740 <col:20> '_Bool' lvalue Var 0x557cf350f9e8 'x$r_buff0_thd0' '_Bool'
|   |-BinaryOperator 0x557cf35107f0 <line:712:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x557cf3510798 <col:3> '_Bool' lvalue Var 0x557cf350fbf0 'x$r_buff1_thd1' '_Bool'
|   | `-ImplicitCastExpr 0x557cf35107d8 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x557cf35107b8 <col:20> '_Bool' lvalue Var 0x557cf350fa60 'x$r_buff0_thd1' '_Bool'
|   |-BinaryOperator 0x557cf3510868 <line:713:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x557cf3510810 <col:3> '_Bool' lvalue Var 0x557cf350fc68 'x$r_buff1_thd2' '_Bool'
|   | `-ImplicitCastExpr 0x557cf3510850 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x557cf3510830 <col:20> '_Bool' lvalue Var 0x557cf350fb00 'x$r_buff0_thd2' '_Bool'
|   |-BinaryOperator 0x557cf3510900 <line:714:3, col:27> '_Bool' '='
|   | |-DeclRefExpr 0x557cf3510888 <col:3> '_Bool' lvalue Var 0x557cf350fa60 'x$r_buff0_thd1' '_Bool'
|   | `-CStyleCastExpr 0x557cf35108d8 <col:20, col:27> '_Bool' <IntegralToBoolean>
|   |   `-IntegerLiteral 0x557cf35108a8 <col:27> 'int' 1
|   |-CallExpr 0x557cf3510958 <line:715:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x557cf3510940 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x557cf3510920 <col:3> 'void ()' Function 0x557cf34b6060 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x557cf35109b0 <line:716:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x557cf3510998 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x557cf3510978 <col:3> 'void ()' Function 0x557cf34b5fa0 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x557cf3510a78 <line:717:3, col:42> '_Bool' '='
|   | |-DeclRefExpr 0x557cf35109d0 <col:3> '_Bool' lvalue Var 0x557cf35100e8 'weak$$choice0' '_Bool'
|   | `-CallExpr 0x557cf3510a58 <col:19, col:42> '_Bool'
|   |   `-ImplicitCastExpr 0x557cf3510a40 <col:19> '_Bool (*)(void)' <FunctionToPointerDecay>
|   |     `-DeclRefExpr 0x557cf35109f0 <col:19> '_Bool (void)' Function 0x557cf34b5770 '__VERIFIER_nondet_bool' '_Bool (void)'
|   |-BinaryOperator 0x557cf3510b30 <line:718:3, col:42> '_Bool' '='
|   | |-DeclRefExpr 0x557cf3510a98 <col:3> '_Bool' lvalue Var 0x557cf3510160 'weak$$choice2' '_Bool'
|   | `-CallExpr 0x557cf3510b10 <col:19, col:42> '_Bool'
|   |   `-ImplicitCastExpr 0x557cf3510ad8 <col:19> '_Bool (*)(void)' <FunctionToPointerDecay>
|   |     `-DeclRefExpr 0x557cf3510ab8 <col:19> '_Bool (void)' Function 0x557cf34b5770 '__VERIFIER_nondet_bool' '_Bool (void)'
|   |-BinaryOperator 0x557cf3510ba8 <line:719:3, col:21> '_Bool' '='
|   | |-DeclRefExpr 0x557cf3510b50 <col:3> '_Bool' lvalue Var 0x557cf350f8f0 'x$flush_delayed' '_Bool'
|   | `-ImplicitCastExpr 0x557cf3510b90 <col:21> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x557cf3510b70 <col:21> '_Bool' lvalue Var 0x557cf3510160 'weak$$choice2' '_Bool'
|   |-BinaryOperator 0x557cf3510c20 <line:720:3, col:15> 'int' '='
|   | |-DeclRefExpr 0x557cf3510bc8 <col:3> 'int' lvalue Var 0x557cf350f970 'x$mem_tmp' 'int'
|   | `-ImplicitCastExpr 0x557cf3510c08 <col:15> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x557cf3510be8 <col:15> 'int' lvalue Var 0x557cf350f858 'x' 'int'
|   |-BinaryOperator 0x557cf3511058 <line:721:3, col:162> 'int' '='
|   | |-DeclRefExpr 0x557cf3510c40 <col:3> 'int' lvalue Var 0x557cf350f858 'x' 'int'
|   | `-ConditionalOperator 0x557cf3511028 <col:7, col:162> 'int'
|   |   |-BinaryOperator 0x557cf3510e50 <col:7, col:84> 'int' '||'
|   |   | |-BinaryOperator 0x557cf3510d70 <col:7, col:46> 'int' '||'
|   |   | | |-UnaryOperator 0x557cf3510c98 <col:7, col:8> 'int' prefix '!' cannot overflow
|   |   | | | `-ImplicitCastExpr 0x557cf3510c80 <col:8> '_Bool' <LValueToRValue>
|   |   | | |   `-DeclRefExpr 0x557cf3510c60 <col:8> '_Bool' lvalue Var 0x557cf350fe58 'x$w_buff0_used' '_Bool'
|   |   | | `-BinaryOperator 0x557cf3510d50 <col:26, col:46> 'int' '&&'
|   |   | |   |-UnaryOperator 0x557cf3510ce8 <col:26, col:27> 'int' prefix '!' cannot overflow
|   |   | |   | `-ImplicitCastExpr 0x557cf3510cd0 <col:27> '_Bool' <LValueToRValue>
|   |   | |   |   `-DeclRefExpr 0x557cf3510cb0 <col:27> '_Bool' lvalue Var 0x557cf350fa60 'x$r_buff0_thd1' '_Bool'
|   |   | |   `-UnaryOperator 0x557cf3510d38 <col:45, col:46> 'int' prefix '!' cannot overflow
|   |   | |     `-ImplicitCastExpr 0x557cf3510d20 <col:46> '_Bool' <LValueToRValue>
|   |   | |       `-DeclRefExpr 0x557cf3510d00 <col:46> '_Bool' lvalue Var 0x557cf350ff50 'x$w_buff1_used' '_Bool'
|   |   | `-BinaryOperator 0x557cf3510e30 <col:64, col:84> 'int' '&&'
|   |   |   |-UnaryOperator 0x557cf3510dc8 <col:64, col:65> 'int' prefix '!' cannot overflow
|   |   |   | `-ImplicitCastExpr 0x557cf3510db0 <col:65> '_Bool' <LValueToRValue>
|   |   |   |   `-DeclRefExpr 0x557cf3510d90 <col:65> '_Bool' lvalue Var 0x557cf350fa60 'x$r_buff0_thd1' '_Bool'
|   |   |   `-UnaryOperator 0x557cf3510e18 <col:83, col:84> 'int' prefix '!' cannot overflow
|   |   |     `-ImplicitCastExpr 0x557cf3510e00 <col:84> '_Bool' <LValueToRValue>
|   |   |       `-DeclRefExpr 0x557cf3510de0 <col:84> '_Bool' lvalue Var 0x557cf350fbf0 'x$r_buff1_thd1' '_Bool'
|   |   |-ImplicitCastExpr 0x557cf3511010 <col:101> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x557cf3510e70 <col:101> 'int' lvalue Var 0x557cf350f858 'x' 'int'
|   |   `-ParenExpr 0x557cf3510ff0 <col:105, col:162> 'int'
|   |     `-ConditionalOperator 0x557cf3510fc0 <col:106, col:153> 'int'
|   |       |-BinaryOperator 0x557cf3510f30 <col:106, col:124> 'int' '&&'
|   |       | |-ImplicitCastExpr 0x557cf3510ee8 <col:106> 'int' <IntegralCast>
|   |       | | `-ImplicitCastExpr 0x557cf3510ed0 <col:106> '_Bool' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x557cf3510e90 <col:106> '_Bool' lvalue Var 0x557cf350fe58 'x$w_buff0_used' '_Bool'
|   |       | `-ImplicitCastExpr 0x557cf3510f18 <col:124> 'int' <IntegralCast>
|   |       |   `-ImplicitCastExpr 0x557cf3510f00 <col:124> '_Bool' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x557cf3510eb0 <col:124> '_Bool' lvalue Var 0x557cf350fa60 'x$r_buff0_thd1' '_Bool'
|   |       |-ImplicitCastExpr 0x557cf3510f90 <col:141> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x557cf3510f50 <col:141> 'int' lvalue Var 0x557cf350fde0 'x$w_buff0' 'int'
|   |       `-ImplicitCastExpr 0x557cf3510fa8 <col:153> 'int' <LValueToRValue>
|   |         `-DeclRefExpr 0x557cf3510f70 <col:153> 'int' lvalue Var 0x557cf350fed8 'x$w_buff1' 'int'
|   |-BinaryOperator 0x557cf3511568 <line:722:3, col:208> 'int' '='
|   | |-DeclRefExpr 0x557cf3511078 <col:3> 'int' lvalue Var 0x557cf350fde0 'x$w_buff0' 'int'
|   | `-ConditionalOperator 0x557cf3511538 <col:15, col:208> 'int'
|   |   |-ImplicitCastExpr 0x557cf3511508 <col:15> 'int' <IntegralCast>
|   |   | `-ImplicitCastExpr 0x557cf35114f0 <col:15> '_Bool' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x557cf3511098 <col:15> '_Bool' lvalue Var 0x557cf3510160 'weak$$choice2' '_Bool'
|   |   |-ImplicitCastExpr 0x557cf3511520 <col:31> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x557cf35110b8 <col:31> 'int' lvalue Var 0x557cf350fde0 'x$w_buff0' 'int'
|   |   `-ParenExpr 0x557cf35114d0 <col:43, col:208> 'int'
|   |     `-ConditionalOperator 0x557cf35114a0 <col:44, col:207> 'int'
|   |       |-BinaryOperator 0x557cf35112c8 <col:44, col:121> 'int' '||'
|   |       | |-BinaryOperator 0x557cf35111e8 <col:44, col:83> 'int' '||'
|   |       | | |-UnaryOperator 0x557cf3511110 <col:44, col:45> 'int' prefix '!' cannot overflow
|   |       | | | `-ImplicitCastExpr 0x557cf35110f8 <col:45> '_Bool' <LValueToRValue>
|   |       | | |   `-DeclRefExpr 0x557cf35110d8 <col:45> '_Bool' lvalue Var 0x557cf350fe58 'x$w_buff0_used' '_Bool'
|   |       | | `-BinaryOperator 0x557cf35111c8 <col:63, col:83> 'int' '&&'
|   |       | |   |-UnaryOperator 0x557cf3511160 <col:63, col:64> 'int' prefix '!' cannot overflow
|   |       | |   | `-ImplicitCastExpr 0x557cf3511148 <col:64> '_Bool' <LValueToRValue>
|   |       | |   |   `-DeclRefExpr 0x557cf3511128 <col:64> '_Bool' lvalue Var 0x557cf350fa60 'x$r_buff0_thd1' '_Bool'
|   |       | |   `-UnaryOperator 0x557cf35111b0 <col:82, col:83> 'int' prefix '!' cannot overflow
|   |       | |     `-ImplicitCastExpr 0x557cf3511198 <col:83> '_Bool' <LValueToRValue>
|   |       | |       `-DeclRefExpr 0x557cf3511178 <col:83> '_Bool' lvalue Var 0x557cf350ff50 'x$w_buff1_used' '_Bool'
|   |       | `-BinaryOperator 0x557cf35112a8 <col:101, col:121> 'int' '&&'
|   |       |   |-UnaryOperator 0x557cf3511240 <col:101, col:102> 'int' prefix '!' cannot overflow
|   |       |   | `-ImplicitCastExpr 0x557cf3511228 <col:102> '_Bool' <LValueToRValue>
|   |       |   |   `-DeclRefExpr 0x557cf3511208 <col:102> '_Bool' lvalue Var 0x557cf350fa60 'x$r_buff0_thd1' '_Bool'
|   |       |   `-UnaryOperator 0x557cf3511290 <col:120, col:121> 'int' prefix '!' cannot overflow
|   |       |     `-ImplicitCastExpr 0x557cf3511278 <col:121> '_Bool' <LValueToRValue>
|   |       |       `-DeclRefExpr 0x557cf3511258 <col:121> '_Bool' lvalue Var 0x557cf350fbf0 'x$r_buff1_thd1' '_Bool'
|   |       |-ImplicitCastExpr 0x557cf3511488 <col:138> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x557cf35112e8 <col:138> 'int' lvalue Var 0x557cf350fde0 'x$w_buff0' 'int'
|   |       `-ParenExpr 0x557cf3511468 <col:150, col:207> 'int'
|   |         `-ConditionalOperator 0x557cf3511438 <col:151, col:198> 'int'
|   |           |-BinaryOperator 0x557cf35113a8 <col:151, col:169> 'int' '&&'
|   |           | |-ImplicitCastExpr 0x557cf3511360 <col:151> 'int' <IntegralCast>
|   |           | | `-ImplicitCastExpr 0x557cf3511348 <col:151> '_Bool' <LValueToRValue>
|   |           | |   `-DeclRefExpr 0x557cf3511308 <col:151> '_Bool' lvalue Var 0x557cf350fe58 'x$w_buff0_used' '_Bool'
|   |           | `-ImplicitCastExpr 0x557cf3511390 <col:169> 'int' <IntegralCast>
|   |           |   `-ImplicitCastExpr 0x557cf3511378 <col:169> '_Bool' <LValueToRValue>
|   |           |     `-DeclRefExpr 0x557cf3511328 <col:169> '_Bool' lvalue Var 0x557cf350fa60 'x$r_buff0_thd1' '_Bool'
|   |           |-ImplicitCastExpr 0x557cf3511408 <col:186> 'int' <LValueToRValue>
|   |           | `-DeclRefExpr 0x557cf35113c8 <col:186> 'int' lvalue Var 0x557cf350fde0 'x$w_buff0' 'int'
|   |           `-ImplicitCastExpr 0x557cf3511420 <col:198> 'int' <LValueToRValue>
|   |             `-DeclRefExpr 0x557cf35113e8 <col:198> 'int' lvalue Var 0x557cf350fde0 'x$w_buff0' 'int'
|   |-BinaryOperator 0x557cf3511a78 <line:723:3, col:208> 'int' '='
|   | |-DeclRefExpr 0x557cf3511588 <col:3> 'int' lvalue Var 0x557cf350fed8 'x$w_buff1' 'int'
|   | `-ConditionalOperator 0x557cf3511a48 <col:15, col:208> 'int'
|   |   |-ImplicitCastExpr 0x557cf3511a18 <col:15> 'int' <IntegralCast>
|   |   | `-ImplicitCastExpr 0x557cf3511a00 <col:15> '_Bool' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x557cf35115a8 <col:15> '_Bool' lvalue Var 0x557cf3510160 'weak$$choice2' '_Bool'
|   |   |-ImplicitCastExpr 0x557cf3511a30 <col:31> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x557cf35115c8 <col:31> 'int' lvalue Var 0x557cf350fed8 'x$w_buff1' 'int'
|   |   `-ParenExpr 0x557cf35119e0 <col:43, col:208> 'int'
|   |     `-ConditionalOperator 0x557cf35119b0 <col:44, col:207> 'int'
|   |       |-BinaryOperator 0x557cf35117d8 <col:44, col:121> 'int' '||'
|   |       | |-BinaryOperator 0x557cf35116f8 <col:44, col:83> 'int' '||'
|   |       | | |-UnaryOperator 0x557cf3511620 <col:44, col:45> 'int' prefix '!' cannot overflow
|   |       | | | `-ImplicitCastExpr 0x557cf3511608 <col:45> '_Bool' <LValueToRValue>
|   |       | | |   `-DeclRefExpr 0x557cf35115e8 <col:45> '_Bool' lvalue Var 0x557cf350fe58 'x$w_buff0_used' '_Bool'
|   |       | | `-BinaryOperator 0x557cf35116d8 <col:63, col:83> 'int' '&&'
|   |       | |   |-UnaryOperator 0x557cf3511670 <col:63, col:64> 'int' prefix '!' cannot overflow
|   |       | |   | `-ImplicitCastExpr 0x557cf3511658 <col:64> '_Bool' <LValueToRValue>
|   |       | |   |   `-DeclRefExpr 0x557cf3511638 <col:64> '_Bool' lvalue Var 0x557cf350fa60 'x$r_buff0_thd1' '_Bool'
|   |       | |   `-UnaryOperator 0x557cf35116c0 <col:82, col:83> 'int' prefix '!' cannot overflow
|   |       | |     `-ImplicitCastExpr 0x557cf35116a8 <col:83> '_Bool' <LValueToRValue>
|   |       | |       `-DeclRefExpr 0x557cf3511688 <col:83> '_Bool' lvalue Var 0x557cf350ff50 'x$w_buff1_used' '_Bool'
|   |       | `-BinaryOperator 0x557cf35117b8 <col:101, col:121> 'int' '&&'
|   |       |   |-UnaryOperator 0x557cf3511750 <col:101, col:102> 'int' prefix '!' cannot overflow
|   |       |   | `-ImplicitCastExpr 0x557cf3511738 <col:102> '_Bool' <LValueToRValue>
|   |       |   |   `-DeclRefExpr 0x557cf3511718 <col:102> '_Bool' lvalue Var 0x557cf350fa60 'x$r_buff0_thd1' '_Bool'
|   |       |   `-UnaryOperator 0x557cf35117a0 <col:120, col:121> 'int' prefix '!' cannot overflow
|   |       |     `-ImplicitCastExpr 0x557cf3511788 <col:121> '_Bool' <LValueToRValue>
|   |       |       `-DeclRefExpr 0x557cf3511768 <col:121> '_Bool' lvalue Var 0x557cf350fbf0 'x$r_buff1_thd1' '_Bool'
|   |       |-ImplicitCastExpr 0x557cf3511998 <col:138> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x557cf35117f8 <col:138> 'int' lvalue Var 0x557cf350fed8 'x$w_buff1' 'int'
|   |       `-ParenExpr 0x557cf3511978 <col:150, col:207> 'int'
|   |         `-ConditionalOperator 0x557cf3511948 <col:151, col:198> 'int'
|   |           |-BinaryOperator 0x557cf35118b8 <col:151, col:169> 'int' '&&'
|   |           | |-ImplicitCastExpr 0x557cf3511870 <col:151> 'int' <IntegralCast>
|   |           | | `-ImplicitCastExpr 0x557cf3511858 <col:151> '_Bool' <LValueToRValue>
|   |           | |   `-DeclRefExpr 0x557cf3511818 <col:151> '_Bool' lvalue Var 0x557cf350fe58 'x$w_buff0_used' '_Bool'
|   |           | `-ImplicitCastExpr 0x557cf35118a0 <col:169> 'int' <IntegralCast>
|   |           |   `-ImplicitCastExpr 0x557cf3511888 <col:169> '_Bool' <LValueToRValue>
|   |           |     `-DeclRefExpr 0x557cf3511838 <col:169> '_Bool' lvalue Var 0x557cf350fa60 'x$r_buff0_thd1' '_Bool'
|   |           |-ImplicitCastExpr 0x557cf3511918 <col:186> 'int' <LValueToRValue>
|   |           | `-DeclRefExpr 0x557cf35118d8 <col:186> 'int' lvalue Var 0x557cf350fed8 'x$w_buff1' 'int'
|   |           `-ImplicitCastExpr 0x557cf3511930 <col:198> 'int' <LValueToRValue>
|   |             `-DeclRefExpr 0x557cf35118f8 <col:198> 'int' lvalue Var 0x557cf350fed8 'x$w_buff1' 'int'
|   |-BinaryOperator 0x557cf3512048 <line:724:3, col:227> '_Bool' '='
|   | |-DeclRefExpr 0x557cf3511a98 <col:3> '_Bool' lvalue Var 0x557cf350fe58 'x$w_buff0_used' '_Bool'
|   | `-ImplicitCastExpr 0x557cf3512030 <col:20, col:227> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x557cf3512000 <col:20, col:227> 'int'
|   |     |-ImplicitCastExpr 0x557cf3511fb8 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x557cf3511fa0 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x557cf3511ab8 <col:20> '_Bool' lvalue Var 0x557cf3510160 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x557cf3511fe8 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x557cf3511fd0 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x557cf3511ad8 <col:36> '_Bool' lvalue Var 0x557cf350fe58 'x$w_buff0_used' '_Bool'
|   |     `-ParenExpr 0x557cf3511f80 <col:53, col:227> 'int'
|   |       `-ConditionalOperator 0x557cf3511f50 <col:54, col:226> 'int'
|   |         |-BinaryOperator 0x557cf3511d10 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x557cf3511c30 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x557cf3511b58 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x557cf3511b40 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x557cf3511b20 <col:55> '_Bool' lvalue Var 0x557cf350fe58 'x$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x557cf3511c10 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x557cf3511ba8 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x557cf3511b90 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x557cf3511b70 <col:74> '_Bool' lvalue Var 0x557cf350fa60 'x$r_buff0_thd1' '_Bool'
|   |         | |   `-UnaryOperator 0x557cf3511bf8 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x557cf3511be0 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x557cf3511bc0 <col:93> '_Bool' lvalue Var 0x557cf350ff50 'x$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x557cf3511cf0 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x557cf3511c88 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x557cf3511c70 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x557cf3511c50 <col:112> '_Bool' lvalue Var 0x557cf350fa60 'x$r_buff0_thd1' '_Bool'
|   |         |   `-UnaryOperator 0x557cf3511cd8 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x557cf3511cc0 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x557cf3511ca0 <col:131> '_Bool' lvalue Var 0x557cf350fbf0 'x$r_buff1_thd1' '_Bool'
|   |         |-ImplicitCastExpr 0x557cf3511f38 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x557cf3511f20 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x557cf3511d30 <col:148> '_Bool' lvalue Var 0x557cf350fe58 'x$w_buff0_used' '_Bool'
|   |         `-ParenExpr 0x557cf3511f00 <col:165, col:226> 'int'
|   |           `-ConditionalOperator 0x557cf3511ed0 <col:166, col:212> 'int'
|   |             |-BinaryOperator 0x557cf3511df0 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x557cf3511da8 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x557cf3511d90 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x557cf3511d50 <col:166> '_Bool' lvalue Var 0x557cf350fe58 'x$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x557cf3511dd8 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x557cf3511dc0 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x557cf3511d70 <col:184> '_Bool' lvalue Var 0x557cf350fa60 'x$r_buff0_thd1' '_Bool'
|   |             |-ImplicitCastExpr 0x557cf3511e88 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x557cf3511e40 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x557cf3511e10 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x557cf3511eb8 <col:212> 'int' <IntegralCast>
|   |               `-ImplicitCastExpr 0x557cf3511ea0 <col:212> '_Bool' <LValueToRValue>
|   |                 `-DeclRefExpr 0x557cf3511e68 <col:212> '_Bool' lvalue Var 0x557cf350fe58 'x$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x557cf3512610 <line:725:3, col:221> '_Bool' '='
|   | |-DeclRefExpr 0x557cf3512068 <col:3> '_Bool' lvalue Var 0x557cf350ff50 'x$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x557cf35125f8 <col:20, col:221> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x557cf35125c8 <col:20, col:221> 'int'
|   |     |-ImplicitCastExpr 0x557cf3512580 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x557cf3512568 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x557cf3512088 <col:20> '_Bool' lvalue Var 0x557cf3510160 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x557cf35125b0 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x557cf3512598 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x557cf35120a8 <col:36> '_Bool' lvalue Var 0x557cf350ff50 'x$w_buff1_used' '_Bool'
|   |     `-ParenExpr 0x557cf3512548 <col:53, col:221> 'int'
|   |       `-ConditionalOperator 0x557cf3512518 <col:54, col:220> 'int'
|   |         |-BinaryOperator 0x557cf35122b8 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x557cf35121d8 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x557cf3512100 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x557cf35120e8 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x557cf35120c8 <col:55> '_Bool' lvalue Var 0x557cf350fe58 'x$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x557cf35121b8 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x557cf3512150 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x557cf3512138 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x557cf3512118 <col:74> '_Bool' lvalue Var 0x557cf350fa60 'x$r_buff0_thd1' '_Bool'
|   |         | |   `-UnaryOperator 0x557cf35121a0 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x557cf3512188 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x557cf3512168 <col:93> '_Bool' lvalue Var 0x557cf350ff50 'x$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x557cf3512298 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x557cf3512230 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x557cf3512218 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x557cf35121f8 <col:112> '_Bool' lvalue Var 0x557cf350fa60 'x$r_buff0_thd1' '_Bool'
|   |         |   `-UnaryOperator 0x557cf3512280 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x557cf3512268 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x557cf3512248 <col:131> '_Bool' lvalue Var 0x557cf350fbf0 'x$r_buff1_thd1' '_Bool'
|   |         |-ImplicitCastExpr 0x557cf3512500 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x557cf35124e8 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x557cf35122d8 <col:148> '_Bool' lvalue Var 0x557cf350ff50 'x$w_buff1_used' '_Bool'
|   |         `-ParenExpr 0x557cf35124c8 <col:165, col:220> 'int'
|   |           `-ConditionalOperator 0x557cf3512498 <col:166, col:219> 'int'
|   |             |-BinaryOperator 0x557cf3512398 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x557cf3512350 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x557cf3512338 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x557cf35122f8 <col:166> '_Bool' lvalue Var 0x557cf350fe58 'x$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x557cf3512380 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x557cf3512368 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x557cf3512318 <col:184> '_Bool' lvalue Var 0x557cf350fa60 'x$r_buff0_thd1' '_Bool'
|   |             |-ImplicitCastExpr 0x557cf3512468 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x557cf35123e8 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x557cf35123b8 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x557cf3512480 <col:212, col:219> 'int' <IntegralCast>
|   |               `-CStyleCastExpr 0x557cf3512440 <col:212, col:219> '_Bool' <IntegralToBoolean>
|   |                 `-IntegerLiteral 0x557cf3512410 <col:219> 'int' 0
|   |-BinaryOperator 0x557cf3512bd8 <line:726:3, col:227> '_Bool' '='
|   | |-DeclRefExpr 0x557cf3512630 <col:3> '_Bool' lvalue Var 0x557cf350fa60 'x$r_buff0_thd1' '_Bool'
|   | `-ImplicitCastExpr 0x557cf3512bc0 <col:20, col:227> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x557cf3512b90 <col:20, col:227> 'int'
|   |     |-ImplicitCastExpr 0x557cf3512b48 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x557cf3512b30 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x557cf3512650 <col:20> '_Bool' lvalue Var 0x557cf3510160 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x557cf3512b78 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x557cf3512b60 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x557cf3512670 <col:36> '_Bool' lvalue Var 0x557cf350fa60 'x$r_buff0_thd1' '_Bool'
|   |     `-ParenExpr 0x557cf3512af0 <col:53, col:227> 'int'
|   |       `-ConditionalOperator 0x557cf3512ac0 <col:54, col:226> 'int'
|   |         |-BinaryOperator 0x557cf3512880 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x557cf35127a0 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x557cf35126c8 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x557cf35126b0 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x557cf3512690 <col:55> '_Bool' lvalue Var 0x557cf350fe58 'x$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x557cf3512780 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x557cf3512718 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x557cf3512700 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x557cf35126e0 <col:74> '_Bool' lvalue Var 0x557cf350fa60 'x$r_buff0_thd1' '_Bool'
|   |         | |   `-UnaryOperator 0x557cf3512768 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x557cf3512750 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x557cf3512730 <col:93> '_Bool' lvalue Var 0x557cf350ff50 'x$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x557cf3512860 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x557cf35127f8 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x557cf35127e0 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x557cf35127c0 <col:112> '_Bool' lvalue Var 0x557cf350fa60 'x$r_buff0_thd1' '_Bool'
|   |         |   `-UnaryOperator 0x557cf3512848 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x557cf3512830 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x557cf3512810 <col:131> '_Bool' lvalue Var 0x557cf350fbf0 'x$r_buff1_thd1' '_Bool'
|   |         |-ImplicitCastExpr 0x557cf3512aa8 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x557cf3512a90 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x557cf35128a0 <col:148> '_Bool' lvalue Var 0x557cf350fa60 'x$r_buff0_thd1' '_Bool'
|   |         `-ParenExpr 0x557cf3512a70 <col:165, col:226> 'int'
|   |           `-ConditionalOperator 0x557cf3512a40 <col:166, col:212> 'int'
|   |             |-BinaryOperator 0x557cf3512960 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x557cf3512918 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x557cf3512900 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x557cf35128c0 <col:166> '_Bool' lvalue Var 0x557cf350fe58 'x$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x557cf3512948 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x557cf3512930 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x557cf35128e0 <col:184> '_Bool' lvalue Var 0x557cf350fa60 'x$r_buff0_thd1' '_Bool'
|   |             |-ImplicitCastExpr 0x557cf35129f8 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x557cf35129b0 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x557cf3512980 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x557cf3512a28 <col:212> 'int' <IntegralCast>
|   |               `-ImplicitCastExpr 0x557cf3512a10 <col:212> '_Bool' <LValueToRValue>
|   |                 `-DeclRefExpr 0x557cf35129d8 <col:212> '_Bool' lvalue Var 0x557cf350fa60 'x$r_buff0_thd1' '_Bool'
|   |-BinaryOperator 0x557cf35131a0 <line:727:3, col:221> '_Bool' '='
|   | |-DeclRefExpr 0x557cf3512bf8 <col:3> '_Bool' lvalue Var 0x557cf350fbf0 'x$r_buff1_thd1' '_Bool'
|   | `-ImplicitCastExpr 0x557cf3513188 <col:20, col:221> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x557cf3513158 <col:20, col:221> 'int'
|   |     |-ImplicitCastExpr 0x557cf3513110 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x557cf35130f8 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x557cf3512c18 <col:20> '_Bool' lvalue Var 0x557cf3510160 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x557cf3513140 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x557cf3513128 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x557cf3512c38 <col:36> '_Bool' lvalue Var 0x557cf350fbf0 'x$r_buff1_thd1' '_Bool'
|   |     `-ParenExpr 0x557cf35130d8 <col:53, col:221> 'int'
|   |       `-ConditionalOperator 0x557cf35130a8 <col:54, col:220> 'int'
|   |         |-BinaryOperator 0x557cf3512e48 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x557cf3512d68 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x557cf3512c90 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x557cf3512c78 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x557cf3512c58 <col:55> '_Bool' lvalue Var 0x557cf350fe58 'x$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x557cf3512d48 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x557cf3512ce0 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x557cf3512cc8 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x557cf3512ca8 <col:74> '_Bool' lvalue Var 0x557cf350fa60 'x$r_buff0_thd1' '_Bool'
|   |         | |   `-UnaryOperator 0x557cf3512d30 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x557cf3512d18 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x557cf3512cf8 <col:93> '_Bool' lvalue Var 0x557cf350ff50 'x$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x557cf3512e28 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x557cf3512dc0 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x557cf3512da8 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x557cf3512d88 <col:112> '_Bool' lvalue Var 0x557cf350fa60 'x$r_buff0_thd1' '_Bool'
|   |         |   `-UnaryOperator 0x557cf3512e10 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x557cf3512df8 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x557cf3512dd8 <col:131> '_Bool' lvalue Var 0x557cf350fbf0 'x$r_buff1_thd1' '_Bool'
|   |         |-ImplicitCastExpr 0x557cf3513090 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x557cf3513078 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x557cf3512e68 <col:148> '_Bool' lvalue Var 0x557cf350fbf0 'x$r_buff1_thd1' '_Bool'
|   |         `-ParenExpr 0x557cf3513058 <col:165, col:220> 'int'
|   |           `-ConditionalOperator 0x557cf3513028 <col:166, col:219> 'int'
|   |             |-BinaryOperator 0x557cf3512f28 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x557cf3512ee0 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x557cf3512ec8 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x557cf3512e88 <col:166> '_Bool' lvalue Var 0x557cf350fe58 'x$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x557cf3512f10 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x557cf3512ef8 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x557cf3512ea8 <col:184> '_Bool' lvalue Var 0x557cf350fa60 'x$r_buff0_thd1' '_Bool'
|   |             |-ImplicitCastExpr 0x557cf3512ff8 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x557cf3512f78 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x557cf3512f48 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x557cf3513010 <col:212, col:219> 'int' <IntegralCast>
|   |               `-CStyleCastExpr 0x557cf3512fd0 <col:212, col:219> '_Bool' <IntegralToBoolean>
|   |                 `-IntegerLiteral 0x557cf3512fa0 <col:219> 'int' 0
|   |-BinaryOperator 0x557cf3513218 <line:728:3, col:25> 'int' '='
|   | |-DeclRefExpr 0x557cf35131c0 <col:3> 'int' lvalue Var 0x557cf350f2e8 '__unbuffered_p0_EAX' 'int'
|   | `-ImplicitCastExpr 0x557cf3513200 <col:25> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x557cf35131e0 <col:25> 'int' lvalue Var 0x557cf350f858 'x' 'int'
|   |-BinaryOperator 0x557cf3513348 <line:729:3, col:37> 'int' '='
|   | |-DeclRefExpr 0x557cf3513238 <col:3> 'int' lvalue Var 0x557cf350f858 'x' 'int'
|   | `-ConditionalOperator 0x557cf3513318 <col:7, col:37> 'int'
|   |   |-ImplicitCastExpr 0x557cf35132d0 <col:7> 'int' <IntegralCast>
|   |   | `-ImplicitCastExpr 0x557cf35132b8 <col:7> '_Bool' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x557cf3513258 <col:7> '_Bool' lvalue Var 0x557cf350f8f0 'x$flush_delayed' '_Bool'
|   |   |-ImplicitCastExpr 0x557cf35132e8 <col:25> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x557cf3513278 <col:25> 'int' lvalue Var 0x557cf350f970 'x$mem_tmp' 'int'
|   |   `-ImplicitCastExpr 0x557cf3513300 <col:37> 'int' <LValueToRValue>
|   |     `-DeclRefExpr 0x557cf3513298 <col:37> 'int' lvalue Var 0x557cf350f858 'x' 'int'
|   |-BinaryOperator 0x557cf35133e0 <line:730:3, col:28> '_Bool' '='
|   | |-DeclRefExpr 0x557cf3513368 <col:3> '_Bool' lvalue Var 0x557cf350f8f0 'x$flush_delayed' '_Bool'
|   | `-CStyleCastExpr 0x557cf35133b8 <col:21, col:28> '_Bool' <IntegralToBoolean>
|   |   `-IntegerLiteral 0x557cf3513388 <col:28> 'int' 0
|   |-CallExpr 0x557cf3513438 <line:731:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x557cf3513420 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x557cf3513400 <col:3> 'void ()' Function 0x557cf34b6060 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x557cf3513490 <line:732:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x557cf3513478 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x557cf3513458 <col:3> 'void ()' Function 0x557cf34b5fa0 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x557cf3513508 <line:733:3, col:25> 'int' '='
|   | |-DeclRefExpr 0x557cf35134b0 <col:3> 'int' lvalue Var 0x557cf350f408 '__unbuffered_p0_EBX' 'int'
|   | `-ImplicitCastExpr 0x557cf35134f0 <col:25> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x557cf35134d0 <col:25> 'int' lvalue Var 0x557cf3510050 'y' 'int'
|   |-CallExpr 0x557cf3513560 <line:734:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x557cf3513548 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x557cf3513528 <col:3> 'void ()' Function 0x557cf34b6060 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x557cf35135b8 <line:735:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x557cf35135a0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x557cf3513580 <col:3> 'void ()' Function 0x557cf34b5fa0 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x557cf35138a0 <line:736:3, col:103> 'int' '='
|   | |-DeclRefExpr 0x557cf35135d8 <col:3> 'int' lvalue Var 0x557cf350f858 'x' 'int'
|   | `-ConditionalOperator 0x557cf3513870 <col:7, col:103> 'int'
|   |   |-BinaryOperator 0x557cf3513698 <col:7, col:25> 'int' '&&'
|   |   | |-ImplicitCastExpr 0x557cf3513650 <col:7> 'int' <IntegralCast>
|   |   | | `-ImplicitCastExpr 0x557cf3513638 <col:7> '_Bool' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x557cf35135f8 <col:7> '_Bool' lvalue Var 0x557cf350fe58 'x$w_buff0_used' '_Bool'
|   |   | `-ImplicitCastExpr 0x557cf3513680 <col:25> 'int' <IntegralCast>
|   |   |   `-ImplicitCastExpr 0x557cf3513668 <col:25> '_Bool' <LValueToRValue>
|   |   |     `-DeclRefExpr 0x557cf3513618 <col:25> '_Bool' lvalue Var 0x557cf350fa60 'x$r_buff0_thd1' '_Bool'
|   |   |-ImplicitCastExpr 0x557cf3513858 <col:42> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x557cf35136b8 <col:42> 'int' lvalue Var 0x557cf350fde0 'x$w_buff0' 'int'
|   |   `-ParenExpr 0x557cf3513838 <col:54, col:103> 'int'
|   |     `-ConditionalOperator 0x557cf3513808 <col:55, col:102> 'int'
|   |       |-BinaryOperator 0x557cf3513778 <col:55, col:73> 'int' '&&'
|   |       | |-ImplicitCastExpr 0x557cf3513730 <col:55> 'int' <IntegralCast>
|   |       | | `-ImplicitCastExpr 0x557cf3513718 <col:55> '_Bool' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x557cf35136d8 <col:55> '_Bool' lvalue Var 0x557cf350ff50 'x$w_buff1_used' '_Bool'
|   |       | `-ImplicitCastExpr 0x557cf3513760 <col:73> 'int' <IntegralCast>
|   |       |   `-ImplicitCastExpr 0x557cf3513748 <col:73> '_Bool' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x557cf35136f8 <col:73> '_Bool' lvalue Var 0x557cf350fbf0 'x$r_buff1_thd1' '_Bool'
|   |       |-ImplicitCastExpr 0x557cf35137d8 <col:90> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x557cf3513798 <col:90> 'int' lvalue Var 0x557cf350fed8 'x$w_buff1' 'int'
|   |       `-ImplicitCastExpr 0x557cf35137f0 <col:102> 'int' <LValueToRValue>
|   |         `-DeclRefExpr 0x557cf35137b8 <col:102> 'int' lvalue Var 0x557cf350f858 'x' 'int'
|   |-BinaryOperator 0x557cf3513aa8 <line:737:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x557cf35138c0 <col:3> '_Bool' lvalue Var 0x557cf350fe58 'x$w_buff0_used' '_Bool'
|   | `-ImplicitCastExpr 0x557cf3513a90 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x557cf3513a60 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x557cf3513980 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x557cf3513938 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x557cf3513920 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x557cf35138e0 <col:20> '_Bool' lvalue Var 0x557cf350fe58 'x$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x557cf3513968 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x557cf3513950 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x557cf3513900 <col:38> '_Bool' lvalue Var 0x557cf350fa60 'x$r_buff0_thd1' '_Bool'
|   |     |-ImplicitCastExpr 0x557cf3513a18 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x557cf35139d0 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x557cf35139a0 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x557cf3513a48 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x557cf3513a30 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x557cf35139f8 <col:66> '_Bool' lvalue Var 0x557cf350fe58 'x$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x557cf3513da8 <line:738:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x557cf3513ac8 <col:3> '_Bool' lvalue Var 0x557cf350ff50 'x$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x557cf3513d90 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x557cf3513d60 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x557cf3513c80 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x557cf3513ba0 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x557cf3513b58 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x557cf3513b40 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x557cf3513ae8 <col:20> '_Bool' lvalue Var 0x557cf350fe58 'x$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x557cf3513b88 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x557cf3513b70 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x557cf3513b08 <col:38> '_Bool' lvalue Var 0x557cf350fa60 'x$r_buff0_thd1' '_Bool'
|   |     | `-BinaryOperator 0x557cf3513c60 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x557cf3513c18 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x557cf3513c00 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x557cf3513bc0 <col:56> '_Bool' lvalue Var 0x557cf350ff50 'x$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x557cf3513c48 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x557cf3513c30 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x557cf3513be0 <col:74> '_Bool' lvalue Var 0x557cf350fbf0 'x$r_buff1_thd1' '_Bool'
|   |     |-ImplicitCastExpr 0x557cf3513d18 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x557cf3513cd0 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x557cf3513ca0 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x557cf3513d48 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x557cf3513d30 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x557cf3513cf8 <col:102> '_Bool' lvalue Var 0x557cf350ff50 'x$w_buff1_used' '_Bool'
|   |-BinaryOperator 0x557cf3513fb0 <line:739:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x557cf3513dc8 <col:3> '_Bool' lvalue Var 0x557cf350fa60 'x$r_buff0_thd1' '_Bool'
|   | `-ImplicitCastExpr 0x557cf3513f98 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x557cf3513f68 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x557cf3513e88 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x557cf3513e40 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x557cf3513e28 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x557cf3513de8 <col:20> '_Bool' lvalue Var 0x557cf350fe58 'x$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x557cf3513e70 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x557cf3513e58 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x557cf3513e08 <col:38> '_Bool' lvalue Var 0x557cf350fa60 'x$r_buff0_thd1' '_Bool'
|   |     |-ImplicitCastExpr 0x557cf3513f20 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x557cf3513ed8 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x557cf3513ea8 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x557cf3513f50 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x557cf3513f38 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x557cf3513f00 <col:66> '_Bool' lvalue Var 0x557cf350fa60 'x$r_buff0_thd1' '_Bool'
|   |-BinaryOperator 0x557cf3514298 <line:740:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x557cf3513fd0 <col:3> '_Bool' lvalue Var 0x557cf350fbf0 'x$r_buff1_thd1' '_Bool'
|   | `-ImplicitCastExpr 0x557cf3514280 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x557cf3514250 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x557cf3514170 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x557cf3514090 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x557cf3514048 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x557cf3514030 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x557cf3513ff0 <col:20> '_Bool' lvalue Var 0x557cf350fe58 'x$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x557cf3514078 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x557cf3514060 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x557cf3514010 <col:38> '_Bool' lvalue Var 0x557cf350fa60 'x$r_buff0_thd1' '_Bool'
|   |     | `-BinaryOperator 0x557cf3514150 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x557cf3514108 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x557cf35140f0 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x557cf35140b0 <col:56> '_Bool' lvalue Var 0x557cf350ff50 'x$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x557cf3514138 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x557cf3514120 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x557cf35140d0 <col:74> '_Bool' lvalue Var 0x557cf350fbf0 'x$r_buff1_thd1' '_Bool'
|   |     |-ImplicitCastExpr 0x557cf3514208 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x557cf35141c0 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x557cf3514190 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x557cf3514238 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x557cf3514220 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x557cf35141e8 <col:102> '_Bool' lvalue Var 0x557cf350fbf0 'x$r_buff1_thd1' '_Bool'
|   |-CallExpr 0x557cf35142f0 <line:741:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x557cf35142d8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x557cf35142b8 <col:3> 'void ()' Function 0x557cf34b6060 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x557cf3514348 <line:742:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x557cf3514330 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x557cf3514310 <col:3> 'void ()' Function 0x557cf34b5fa0 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x557cf3514400 <line:743:3, col:41> 'int' '='
|   | |-DeclRefExpr 0x557cf3514368 <col:3> 'int' lvalue Var 0x557cf350f1c8 '__unbuffered_cnt' 'int'
|   | `-BinaryOperator 0x557cf35143e0 <col:22, col:41> 'int' '+'
|   |   |-ImplicitCastExpr 0x557cf35143c8 <col:22> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x557cf3514388 <col:22> 'int' lvalue Var 0x557cf350f1c8 '__unbuffered_cnt' 'int'
|   |   `-IntegerLiteral 0x557cf35143a8 <col:41> 'int' 1
|   |-CallExpr 0x557cf3514458 <line:744:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x557cf3514440 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x557cf3514420 <col:3> 'void ()' Function 0x557cf34b6060 '__VERIFIER_atomic_end' 'void ()'
|   `-ReturnStmt 0x557cf3514508 <line:745:3, col:36>
|     `-CallExpr 0x557cf35144e8 <col:10, col:36> 'void *'
|       `-ImplicitCastExpr 0x557cf35144d0 <col:10> 'void *(*)(void)' <FunctionToPointerDecay>
|         `-DeclRefExpr 0x557cf3514478 <col:10> 'void *(void)' Function 0x557cf34b5ab8 '__VERIFIER_nondet_pointer' 'void *(void)'
|-FunctionDecl 0x557cf3514720 prev 0x557cf350ee48 <line:747:1, line:782:1> line:747:8 used P1 'void *(void *)'
| |-ParmVarDecl 0x557cf3514688 <col:11, col:17> col:17 arg 'void *'
| `-CompoundStmt 0x557cf3518400 <line:748:1, line:782:1>
|   |-CallExpr 0x557cf3514800 <line:749:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x557cf35147e8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x557cf35147c8 <col:3> 'void ()' Function 0x557cf34b5fa0 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x557cf3514860 <line:750:3, col:7> 'int' '='
|   | |-DeclRefExpr 0x557cf3514820 <col:3> 'int' lvalue Var 0x557cf3510050 'y' 'int'
|   | `-IntegerLiteral 0x557cf3514840 <col:7> 'int' 1
|   |-CallExpr 0x557cf35148b8 <line:751:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x557cf35148a0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x557cf3514880 <col:3> 'void ()' Function 0x557cf34b6060 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x557cf3514910 <line:752:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x557cf35148f8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x557cf35148d8 <col:3> 'void ()' Function 0x557cf34b5fa0 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x557cf3514988 <line:753:3, col:25> 'int' '='
|   | |-DeclRefExpr 0x557cf3514930 <col:3> 'int' lvalue Var 0x557cf350f528 '__unbuffered_p1_EAX' 'int'
|   | `-ImplicitCastExpr 0x557cf3514970 <col:25> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x557cf3514950 <col:25> 'int' lvalue Var 0x557cf3510050 'y' 'int'
|   |-CallExpr 0x557cf35149e0 <line:754:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x557cf35149c8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x557cf35149a8 <col:3> 'void ()' Function 0x557cf34b6060 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x557cf3514a38 <line:755:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x557cf3514a20 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x557cf3514a00 <col:3> 'void ()' Function 0x557cf34b5fa0 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x557cf3514ad0 <line:756:3, col:42> '_Bool' '='
|   | |-DeclRefExpr 0x557cf3514a58 <col:3> '_Bool' lvalue Var 0x557cf35100e8 'weak$$choice0' '_Bool'
|   | `-CallExpr 0x557cf3514ab0 <col:19, col:42> '_Bool'
|   |   `-ImplicitCastExpr 0x557cf3514a98 <col:19> '_Bool (*)(void)' <FunctionToPointerDecay>
|   |     `-DeclRefExpr 0x557cf3514a78 <col:19> '_Bool (void)' Function 0x557cf34b5770 '__VERIFIER_nondet_bool' '_Bool (void)'
|   |-BinaryOperator 0x557cf3514b88 <line:757:3, col:42> '_Bool' '='
|   | |-DeclRefExpr 0x557cf3514af0 <col:3> '_Bool' lvalue Var 0x557cf3510160 'weak$$choice2' '_Bool'
|   | `-CallExpr 0x557cf3514b68 <col:19, col:42> '_Bool'
|   |   `-ImplicitCastExpr 0x557cf3514b50 <col:19> '_Bool (*)(void)' <FunctionToPointerDecay>
|   |     `-DeclRefExpr 0x557cf3514b10 <col:19> '_Bool (void)' Function 0x557cf34b5770 '__VERIFIER_nondet_bool' '_Bool (void)'
|   |-BinaryOperator 0x557cf3514c00 <line:758:3, col:21> '_Bool' '='
|   | |-DeclRefExpr 0x557cf3514ba8 <col:3> '_Bool' lvalue Var 0x557cf350f8f0 'x$flush_delayed' '_Bool'
|   | `-ImplicitCastExpr 0x557cf3514be8 <col:21> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x557cf3514bc8 <col:21> '_Bool' lvalue Var 0x557cf3510160 'weak$$choice2' '_Bool'
|   |-BinaryOperator 0x557cf3514c78 <line:759:3, col:15> 'int' '='
|   | |-DeclRefExpr 0x557cf3514c20 <col:3> 'int' lvalue Var 0x557cf350f970 'x$mem_tmp' 'int'
|   | `-ImplicitCastExpr 0x557cf3514c60 <col:15> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x557cf3514c40 <col:15> 'int' lvalue Var 0x557cf350f858 'x' 'int'
|   |-BinaryOperator 0x557cf35150b0 <line:760:3, col:162> 'int' '='
|   | |-DeclRefExpr 0x557cf3514c98 <col:3> 'int' lvalue Var 0x557cf350f858 'x' 'int'
|   | `-ConditionalOperator 0x557cf3515080 <col:7, col:162> 'int'
|   |   |-BinaryOperator 0x557cf3514ea8 <col:7, col:84> 'int' '||'
|   |   | |-BinaryOperator 0x557cf3514dc8 <col:7, col:46> 'int' '||'
|   |   | | |-UnaryOperator 0x557cf3514cf0 <col:7, col:8> 'int' prefix '!' cannot overflow
|   |   | | | `-ImplicitCastExpr 0x557cf3514cd8 <col:8> '_Bool' <LValueToRValue>
|   |   | | |   `-DeclRefExpr 0x557cf3514cb8 <col:8> '_Bool' lvalue Var 0x557cf350fe58 'x$w_buff0_used' '_Bool'
|   |   | | `-BinaryOperator 0x557cf3514da8 <col:26, col:46> 'int' '&&'
|   |   | |   |-UnaryOperator 0x557cf3514d40 <col:26, col:27> 'int' prefix '!' cannot overflow
|   |   | |   | `-ImplicitCastExpr 0x557cf3514d28 <col:27> '_Bool' <LValueToRValue>
|   |   | |   |   `-DeclRefExpr 0x557cf3514d08 <col:27> '_Bool' lvalue Var 0x557cf350fb00 'x$r_buff0_thd2' '_Bool'
|   |   | |   `-UnaryOperator 0x557cf3514d90 <col:45, col:46> 'int' prefix '!' cannot overflow
|   |   | |     `-ImplicitCastExpr 0x557cf3514d78 <col:46> '_Bool' <LValueToRValue>
|   |   | |       `-DeclRefExpr 0x557cf3514d58 <col:46> '_Bool' lvalue Var 0x557cf350ff50 'x$w_buff1_used' '_Bool'
|   |   | `-BinaryOperator 0x557cf3514e88 <col:64, col:84> 'int' '&&'
|   |   |   |-UnaryOperator 0x557cf3514e20 <col:64, col:65> 'int' prefix '!' cannot overflow
|   |   |   | `-ImplicitCastExpr 0x557cf3514e08 <col:65> '_Bool' <LValueToRValue>
|   |   |   |   `-DeclRefExpr 0x557cf3514de8 <col:65> '_Bool' lvalue Var 0x557cf350fb00 'x$r_buff0_thd2' '_Bool'
|   |   |   `-UnaryOperator 0x557cf3514e70 <col:83, col:84> 'int' prefix '!' cannot overflow
|   |   |     `-ImplicitCastExpr 0x557cf3514e58 <col:84> '_Bool' <LValueToRValue>
|   |   |       `-DeclRefExpr 0x557cf3514e38 <col:84> '_Bool' lvalue Var 0x557cf350fc68 'x$r_buff1_thd2' '_Bool'
|   |   |-ImplicitCastExpr 0x557cf3515068 <col:101> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x557cf3514ec8 <col:101> 'int' lvalue Var 0x557cf350f858 'x' 'int'
|   |   `-ParenExpr 0x557cf3515048 <col:105, col:162> 'int'
|   |     `-ConditionalOperator 0x557cf3515018 <col:106, col:153> 'int'
|   |       |-BinaryOperator 0x557cf3514f88 <col:106, col:124> 'int' '&&'
|   |       | |-ImplicitCastExpr 0x557cf3514f40 <col:106> 'int' <IntegralCast>
|   |       | | `-ImplicitCastExpr 0x557cf3514f28 <col:106> '_Bool' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x557cf3514ee8 <col:106> '_Bool' lvalue Var 0x557cf350fe58 'x$w_buff0_used' '_Bool'
|   |       | `-ImplicitCastExpr 0x557cf3514f70 <col:124> 'int' <IntegralCast>
|   |       |   `-ImplicitCastExpr 0x557cf3514f58 <col:124> '_Bool' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x557cf3514f08 <col:124> '_Bool' lvalue Var 0x557cf350fb00 'x$r_buff0_thd2' '_Bool'
|   |       |-ImplicitCastExpr 0x557cf3514fe8 <col:141> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x557cf3514fa8 <col:141> 'int' lvalue Var 0x557cf350fde0 'x$w_buff0' 'int'
|   |       `-ImplicitCastExpr 0x557cf3515000 <col:153> 'int' <LValueToRValue>
|   |         `-DeclRefExpr 0x557cf3514fc8 <col:153> 'int' lvalue Var 0x557cf350fed8 'x$w_buff1' 'int'
|   |-BinaryOperator 0x557cf35155c0 <line:761:3, col:208> 'int' '='
|   | |-DeclRefExpr 0x557cf35150d0 <col:3> 'int' lvalue Var 0x557cf350fde0 'x$w_buff0' 'int'
|   | `-ConditionalOperator 0x557cf3515590 <col:15, col:208> 'int'
|   |   |-ImplicitCastExpr 0x557cf3515560 <col:15> 'int' <IntegralCast>
|   |   | `-ImplicitCastExpr 0x557cf3515548 <col:15> '_Bool' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x557cf35150f0 <col:15> '_Bool' lvalue Var 0x557cf3510160 'weak$$choice2' '_Bool'
|   |   |-ImplicitCastExpr 0x557cf3515578 <col:31> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x557cf3515110 <col:31> 'int' lvalue Var 0x557cf350fde0 'x$w_buff0' 'int'
|   |   `-ParenExpr 0x557cf3515528 <col:43, col:208> 'int'
|   |     `-ConditionalOperator 0x557cf35154f8 <col:44, col:207> 'int'
|   |       |-BinaryOperator 0x557cf3515320 <col:44, col:121> 'int' '||'
|   |       | |-BinaryOperator 0x557cf3515240 <col:44, col:83> 'int' '||'
|   |       | | |-UnaryOperator 0x557cf3515168 <col:44, col:45> 'int' prefix '!' cannot overflow
|   |       | | | `-ImplicitCastExpr 0x557cf3515150 <col:45> '_Bool' <LValueToRValue>
|   |       | | |   `-DeclRefExpr 0x557cf3515130 <col:45> '_Bool' lvalue Var 0x557cf350fe58 'x$w_buff0_used' '_Bool'
|   |       | | `-BinaryOperator 0x557cf3515220 <col:63, col:83> 'int' '&&'
|   |       | |   |-UnaryOperator 0x557cf35151b8 <col:63, col:64> 'int' prefix '!' cannot overflow
|   |       | |   | `-ImplicitCastExpr 0x557cf35151a0 <col:64> '_Bool' <LValueToRValue>
|   |       | |   |   `-DeclRefExpr 0x557cf3515180 <col:64> '_Bool' lvalue Var 0x557cf350fb00 'x$r_buff0_thd2' '_Bool'
|   |       | |   `-UnaryOperator 0x557cf3515208 <col:82, col:83> 'int' prefix '!' cannot overflow
|   |       | |     `-ImplicitCastExpr 0x557cf35151f0 <col:83> '_Bool' <LValueToRValue>
|   |       | |       `-DeclRefExpr 0x557cf35151d0 <col:83> '_Bool' lvalue Var 0x557cf350ff50 'x$w_buff1_used' '_Bool'
|   |       | `-BinaryOperator 0x557cf3515300 <col:101, col:121> 'int' '&&'
|   |       |   |-UnaryOperator 0x557cf3515298 <col:101, col:102> 'int' prefix '!' cannot overflow
|   |       |   | `-ImplicitCastExpr 0x557cf3515280 <col:102> '_Bool' <LValueToRValue>
|   |       |   |   `-DeclRefExpr 0x557cf3515260 <col:102> '_Bool' lvalue Var 0x557cf350fb00 'x$r_buff0_thd2' '_Bool'
|   |       |   `-UnaryOperator 0x557cf35152e8 <col:120, col:121> 'int' prefix '!' cannot overflow
|   |       |     `-ImplicitCastExpr 0x557cf35152d0 <col:121> '_Bool' <LValueToRValue>
|   |       |       `-DeclRefExpr 0x557cf35152b0 <col:121> '_Bool' lvalue Var 0x557cf350fc68 'x$r_buff1_thd2' '_Bool'
|   |       |-ImplicitCastExpr 0x557cf35154e0 <col:138> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x557cf3515340 <col:138> 'int' lvalue Var 0x557cf350fde0 'x$w_buff0' 'int'
|   |       `-ParenExpr 0x557cf35154c0 <col:150, col:207> 'int'
|   |         `-ConditionalOperator 0x557cf3515490 <col:151, col:198> 'int'
|   |           |-BinaryOperator 0x557cf3515400 <col:151, col:169> 'int' '&&'
|   |           | |-ImplicitCastExpr 0x557cf35153b8 <col:151> 'int' <IntegralCast>
|   |           | | `-ImplicitCastExpr 0x557cf35153a0 <col:151> '_Bool' <LValueToRValue>
|   |           | |   `-DeclRefExpr 0x557cf3515360 <col:151> '_Bool' lvalue Var 0x557cf350fe58 'x$w_buff0_used' '_Bool'
|   |           | `-ImplicitCastExpr 0x557cf35153e8 <col:169> 'int' <IntegralCast>
|   |           |   `-ImplicitCastExpr 0x557cf35153d0 <col:169> '_Bool' <LValueToRValue>
|   |           |     `-DeclRefExpr 0x557cf3515380 <col:169> '_Bool' lvalue Var 0x557cf350fb00 'x$r_buff0_thd2' '_Bool'
|   |           |-ImplicitCastExpr 0x557cf3515460 <col:186> 'int' <LValueToRValue>
|   |           | `-DeclRefExpr 0x557cf3515420 <col:186> 'int' lvalue Var 0x557cf350fde0 'x$w_buff0' 'int'
|   |           `-ImplicitCastExpr 0x557cf3515478 <col:198> 'int' <LValueToRValue>
|   |             `-DeclRefExpr 0x557cf3515440 <col:198> 'int' lvalue Var 0x557cf350fde0 'x$w_buff0' 'int'
|   |-BinaryOperator 0x557cf3515ad0 <line:762:3, col:208> 'int' '='
|   | |-DeclRefExpr 0x557cf35155e0 <col:3> 'int' lvalue Var 0x557cf350fed8 'x$w_buff1' 'int'
|   | `-ConditionalOperator 0x557cf3515aa0 <col:15, col:208> 'int'
|   |   |-ImplicitCastExpr 0x557cf3515a70 <col:15> 'int' <IntegralCast>
|   |   | `-ImplicitCastExpr 0x557cf3515a58 <col:15> '_Bool' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x557cf3515600 <col:15> '_Bool' lvalue Var 0x557cf3510160 'weak$$choice2' '_Bool'
|   |   |-ImplicitCastExpr 0x557cf3515a88 <col:31> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x557cf3515620 <col:31> 'int' lvalue Var 0x557cf350fed8 'x$w_buff1' 'int'
|   |   `-ParenExpr 0x557cf3515a38 <col:43, col:208> 'int'
|   |     `-ConditionalOperator 0x557cf3515a08 <col:44, col:207> 'int'
|   |       |-BinaryOperator 0x557cf3515830 <col:44, col:121> 'int' '||'
|   |       | |-BinaryOperator 0x557cf3515750 <col:44, col:83> 'int' '||'
|   |       | | |-UnaryOperator 0x557cf3515678 <col:44, col:45> 'int' prefix '!' cannot overflow
|   |       | | | `-ImplicitCastExpr 0x557cf3515660 <col:45> '_Bool' <LValueToRValue>
|   |       | | |   `-DeclRefExpr 0x557cf3515640 <col:45> '_Bool' lvalue Var 0x557cf350fe58 'x$w_buff0_used' '_Bool'
|   |       | | `-BinaryOperator 0x557cf3515730 <col:63, col:83> 'int' '&&'
|   |       | |   |-UnaryOperator 0x557cf35156c8 <col:63, col:64> 'int' prefix '!' cannot overflow
|   |       | |   | `-ImplicitCastExpr 0x557cf35156b0 <col:64> '_Bool' <LValueToRValue>
|   |       | |   |   `-DeclRefExpr 0x557cf3515690 <col:64> '_Bool' lvalue Var 0x557cf350fb00 'x$r_buff0_thd2' '_Bool'
|   |       | |   `-UnaryOperator 0x557cf3515718 <col:82, col:83> 'int' prefix '!' cannot overflow
|   |       | |     `-ImplicitCastExpr 0x557cf3515700 <col:83> '_Bool' <LValueToRValue>
|   |       | |       `-DeclRefExpr 0x557cf35156e0 <col:83> '_Bool' lvalue Var 0x557cf350ff50 'x$w_buff1_used' '_Bool'
|   |       | `-BinaryOperator 0x557cf3515810 <col:101, col:121> 'int' '&&'
|   |       |   |-UnaryOperator 0x557cf35157a8 <col:101, col:102> 'int' prefix '!' cannot overflow
|   |       |   | `-ImplicitCastExpr 0x557cf3515790 <col:102> '_Bool' <LValueToRValue>
|   |       |   |   `-DeclRefExpr 0x557cf3515770 <col:102> '_Bool' lvalue Var 0x557cf350fb00 'x$r_buff0_thd2' '_Bool'
|   |       |   `-UnaryOperator 0x557cf35157f8 <col:120, col:121> 'int' prefix '!' cannot overflow
|   |       |     `-ImplicitCastExpr 0x557cf35157e0 <col:121> '_Bool' <LValueToRValue>
|   |       |       `-DeclRefExpr 0x557cf35157c0 <col:121> '_Bool' lvalue Var 0x557cf350fc68 'x$r_buff1_thd2' '_Bool'
|   |       |-ImplicitCastExpr 0x557cf35159f0 <col:138> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x557cf3515850 <col:138> 'int' lvalue Var 0x557cf350fed8 'x$w_buff1' 'int'
|   |       `-ParenExpr 0x557cf35159d0 <col:150, col:207> 'int'
|   |         `-ConditionalOperator 0x557cf35159a0 <col:151, col:198> 'int'
|   |           |-BinaryOperator 0x557cf3515910 <col:151, col:169> 'int' '&&'
|   |           | |-ImplicitCastExpr 0x557cf35158c8 <col:151> 'int' <IntegralCast>
|   |           | | `-ImplicitCastExpr 0x557cf35158b0 <col:151> '_Bool' <LValueToRValue>
|   |           | |   `-DeclRefExpr 0x557cf3515870 <col:151> '_Bool' lvalue Var 0x557cf350fe58 'x$w_buff0_used' '_Bool'
|   |           | `-ImplicitCastExpr 0x557cf35158f8 <col:169> 'int' <IntegralCast>
|   |           |   `-ImplicitCastExpr 0x557cf35158e0 <col:169> '_Bool' <LValueToRValue>
|   |           |     `-DeclRefExpr 0x557cf3515890 <col:169> '_Bool' lvalue Var 0x557cf350fb00 'x$r_buff0_thd2' '_Bool'
|   |           |-ImplicitCastExpr 0x557cf3515970 <col:186> 'int' <LValueToRValue>
|   |           | `-DeclRefExpr 0x557cf3515930 <col:186> 'int' lvalue Var 0x557cf350fed8 'x$w_buff1' 'int'
|   |           `-ImplicitCastExpr 0x557cf3515988 <col:198> 'int' <LValueToRValue>
|   |             `-DeclRefExpr 0x557cf3515950 <col:198> 'int' lvalue Var 0x557cf350fed8 'x$w_buff1' 'int'
|   |-BinaryOperator 0x557cf3516088 <line:763:3, col:227> '_Bool' '='
|   | |-DeclRefExpr 0x557cf3515af0 <col:3> '_Bool' lvalue Var 0x557cf350fe58 'x$w_buff0_used' '_Bool'
|   | `-ImplicitCastExpr 0x557cf3516070 <col:20, col:227> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x557cf3516040 <col:20, col:227> 'int'
|   |     |-ImplicitCastExpr 0x557cf3515ff8 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x557cf3515fe0 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x557cf3515b10 <col:20> '_Bool' lvalue Var 0x557cf3510160 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x557cf3516028 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x557cf3516010 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x557cf3515b30 <col:36> '_Bool' lvalue Var 0x557cf350fe58 'x$w_buff0_used' '_Bool'
|   |     `-ParenExpr 0x557cf3515fc0 <col:53, col:227> 'int'
|   |       `-ConditionalOperator 0x557cf3515f90 <col:54, col:226> 'int'
|   |         |-BinaryOperator 0x557cf3515d50 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x557cf3515c70 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x557cf3515b98 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x557cf3515b80 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x557cf3515b60 <col:55> '_Bool' lvalue Var 0x557cf350fe58 'x$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x557cf3515c50 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x557cf3515be8 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x557cf3515bd0 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x557cf3515bb0 <col:74> '_Bool' lvalue Var 0x557cf350fb00 'x$r_buff0_thd2' '_Bool'
|   |         | |   `-UnaryOperator 0x557cf3515c38 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x557cf3515c20 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x557cf3515c00 <col:93> '_Bool' lvalue Var 0x557cf350ff50 'x$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x557cf3515d30 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x557cf3515cc8 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x557cf3515cb0 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x557cf3515c90 <col:112> '_Bool' lvalue Var 0x557cf350fb00 'x$r_buff0_thd2' '_Bool'
|   |         |   `-UnaryOperator 0x557cf3515d18 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x557cf3515d00 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x557cf3515ce0 <col:131> '_Bool' lvalue Var 0x557cf350fc68 'x$r_buff1_thd2' '_Bool'
|   |         |-ImplicitCastExpr 0x557cf3515f78 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x557cf3515f60 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x557cf3515d70 <col:148> '_Bool' lvalue Var 0x557cf350fe58 'x$w_buff0_used' '_Bool'
|   |         `-ParenExpr 0x557cf3515f40 <col:165, col:226> 'int'
|   |           `-ConditionalOperator 0x557cf3515f10 <col:166, col:212> 'int'
|   |             |-BinaryOperator 0x557cf3515e30 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x557cf3515de8 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x557cf3515dd0 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x557cf3515d90 <col:166> '_Bool' lvalue Var 0x557cf350fe58 'x$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x557cf3515e18 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x557cf3515e00 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x557cf3515db0 <col:184> '_Bool' lvalue Var 0x557cf350fb00 'x$r_buff0_thd2' '_Bool'
|   |             |-ImplicitCastExpr 0x557cf3515ec8 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x557cf3515e80 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x557cf3515e50 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x557cf3515ef8 <col:212> 'int' <IntegralCast>
|   |               `-ImplicitCastExpr 0x557cf3515ee0 <col:212> '_Bool' <LValueToRValue>
|   |                 `-DeclRefExpr 0x557cf3515ea8 <col:212> '_Bool' lvalue Var 0x557cf350fe58 'x$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x557cf3516650 <line:764:3, col:221> '_Bool' '='
|   | |-DeclRefExpr 0x557cf35160a8 <col:3> '_Bool' lvalue Var 0x557cf350ff50 'x$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x557cf3516638 <col:20, col:221> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x557cf3516608 <col:20, col:221> 'int'
|   |     |-ImplicitCastExpr 0x557cf35165c0 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x557cf35165a8 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x557cf35160c8 <col:20> '_Bool' lvalue Var 0x557cf3510160 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x557cf35165f0 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x557cf35165d8 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x557cf35160e8 <col:36> '_Bool' lvalue Var 0x557cf350ff50 'x$w_buff1_used' '_Bool'
|   |     `-ParenExpr 0x557cf3516588 <col:53, col:221> 'int'
|   |       `-ConditionalOperator 0x557cf3516558 <col:54, col:220> 'int'
|   |         |-BinaryOperator 0x557cf35162f8 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x557cf3516218 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x557cf3516140 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x557cf3516128 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x557cf3516108 <col:55> '_Bool' lvalue Var 0x557cf350fe58 'x$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x557cf35161f8 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x557cf3516190 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x557cf3516178 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x557cf3516158 <col:74> '_Bool' lvalue Var 0x557cf350fb00 'x$r_buff0_thd2' '_Bool'
|   |         | |   `-UnaryOperator 0x557cf35161e0 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x557cf35161c8 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x557cf35161a8 <col:93> '_Bool' lvalue Var 0x557cf350ff50 'x$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x557cf35162d8 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x557cf3516270 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x557cf3516258 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x557cf3516238 <col:112> '_Bool' lvalue Var 0x557cf350fb00 'x$r_buff0_thd2' '_Bool'
|   |         |   `-UnaryOperator 0x557cf35162c0 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x557cf35162a8 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x557cf3516288 <col:131> '_Bool' lvalue Var 0x557cf350fc68 'x$r_buff1_thd2' '_Bool'
|   |         |-ImplicitCastExpr 0x557cf3516540 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x557cf3516528 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x557cf3516318 <col:148> '_Bool' lvalue Var 0x557cf350ff50 'x$w_buff1_used' '_Bool'
|   |         `-ParenExpr 0x557cf3516508 <col:165, col:220> 'int'
|   |           `-ConditionalOperator 0x557cf35164d8 <col:166, col:219> 'int'
|   |             |-BinaryOperator 0x557cf35163d8 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x557cf3516390 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x557cf3516378 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x557cf3516338 <col:166> '_Bool' lvalue Var 0x557cf350fe58 'x$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x557cf35163c0 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x557cf35163a8 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x557cf3516358 <col:184> '_Bool' lvalue Var 0x557cf350fb00 'x$r_buff0_thd2' '_Bool'
|   |             |-ImplicitCastExpr 0x557cf35164a8 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x557cf3516428 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x557cf35163f8 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x557cf35164c0 <col:212, col:219> 'int' <IntegralCast>
|   |               `-CStyleCastExpr 0x557cf3516480 <col:212, col:219> '_Bool' <IntegralToBoolean>
|   |                 `-IntegerLiteral 0x557cf3516450 <col:219> 'int' 0
|   |-BinaryOperator 0x557cf3516c18 <line:765:3, col:227> '_Bool' '='
|   | |-DeclRefExpr 0x557cf3516670 <col:3> '_Bool' lvalue Var 0x557cf350fb00 'x$r_buff0_thd2' '_Bool'
|   | `-ImplicitCastExpr 0x557cf3516c00 <col:20, col:227> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x557cf3516bd0 <col:20, col:227> 'int'
|   |     |-ImplicitCastExpr 0x557cf3516b88 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x557cf3516b70 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x557cf3516690 <col:20> '_Bool' lvalue Var 0x557cf3510160 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x557cf3516bb8 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x557cf3516ba0 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x557cf35166b0 <col:36> '_Bool' lvalue Var 0x557cf350fb00 'x$r_buff0_thd2' '_Bool'
|   |     `-ParenExpr 0x557cf3516b30 <col:53, col:227> 'int'
|   |       `-ConditionalOperator 0x557cf3516b00 <col:54, col:226> 'int'
|   |         |-BinaryOperator 0x557cf35168c0 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x557cf35167e0 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x557cf3516708 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x557cf35166f0 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x557cf35166d0 <col:55> '_Bool' lvalue Var 0x557cf350fe58 'x$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x557cf35167c0 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x557cf3516758 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x557cf3516740 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x557cf3516720 <col:74> '_Bool' lvalue Var 0x557cf350fb00 'x$r_buff0_thd2' '_Bool'
|   |         | |   `-UnaryOperator 0x557cf35167a8 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x557cf3516790 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x557cf3516770 <col:93> '_Bool' lvalue Var 0x557cf350ff50 'x$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x557cf35168a0 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x557cf3516838 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x557cf3516820 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x557cf3516800 <col:112> '_Bool' lvalue Var 0x557cf350fb00 'x$r_buff0_thd2' '_Bool'
|   |         |   `-UnaryOperator 0x557cf3516888 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x557cf3516870 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x557cf3516850 <col:131> '_Bool' lvalue Var 0x557cf350fc68 'x$r_buff1_thd2' '_Bool'
|   |         |-ImplicitCastExpr 0x557cf3516ae8 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x557cf3516ad0 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x557cf35168e0 <col:148> '_Bool' lvalue Var 0x557cf350fb00 'x$r_buff0_thd2' '_Bool'
|   |         `-ParenExpr 0x557cf3516ab0 <col:165, col:226> 'int'
|   |           `-ConditionalOperator 0x557cf3516a80 <col:166, col:212> 'int'
|   |             |-BinaryOperator 0x557cf35169a0 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x557cf3516958 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x557cf3516940 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x557cf3516900 <col:166> '_Bool' lvalue Var 0x557cf350fe58 'x$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x557cf3516988 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x557cf3516970 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x557cf3516920 <col:184> '_Bool' lvalue Var 0x557cf350fb00 'x$r_buff0_thd2' '_Bool'
|   |             |-ImplicitCastExpr 0x557cf3516a38 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x557cf35169f0 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x557cf35169c0 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x557cf3516a68 <col:212> 'int' <IntegralCast>
|   |               `-ImplicitCastExpr 0x557cf3516a50 <col:212> '_Bool' <LValueToRValue>
|   |                 `-DeclRefExpr 0x557cf3516a18 <col:212> '_Bool' lvalue Var 0x557cf350fb00 'x$r_buff0_thd2' '_Bool'
|   |-BinaryOperator 0x557cf35171e0 <line:766:3, col:221> '_Bool' '='
|   | |-DeclRefExpr 0x557cf3516c38 <col:3> '_Bool' lvalue Var 0x557cf350fc68 'x$r_buff1_thd2' '_Bool'
|   | `-ImplicitCastExpr 0x557cf35171c8 <col:20, col:221> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x557cf3517198 <col:20, col:221> 'int'
|   |     |-ImplicitCastExpr 0x557cf3517150 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x557cf3517138 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x557cf3516c58 <col:20> '_Bool' lvalue Var 0x557cf3510160 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x557cf3517180 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x557cf3517168 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x557cf3516c78 <col:36> '_Bool' lvalue Var 0x557cf350fc68 'x$r_buff1_thd2' '_Bool'
|   |     `-ParenExpr 0x557cf3517118 <col:53, col:221> 'int'
|   |       `-ConditionalOperator 0x557cf35170e8 <col:54, col:220> 'int'
|   |         |-BinaryOperator 0x557cf3516e88 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x557cf3516da8 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x557cf3516cd0 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x557cf3516cb8 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x557cf3516c98 <col:55> '_Bool' lvalue Var 0x557cf350fe58 'x$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x557cf3516d88 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x557cf3516d20 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x557cf3516d08 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x557cf3516ce8 <col:74> '_Bool' lvalue Var 0x557cf350fb00 'x$r_buff0_thd2' '_Bool'
|   |         | |   `-UnaryOperator 0x557cf3516d70 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x557cf3516d58 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x557cf3516d38 <col:93> '_Bool' lvalue Var 0x557cf350ff50 'x$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x557cf3516e68 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x557cf3516e00 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x557cf3516de8 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x557cf3516dc8 <col:112> '_Bool' lvalue Var 0x557cf350fb00 'x$r_buff0_thd2' '_Bool'
|   |         |   `-UnaryOperator 0x557cf3516e50 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x557cf3516e38 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x557cf3516e18 <col:131> '_Bool' lvalue Var 0x557cf350fc68 'x$r_buff1_thd2' '_Bool'
|   |         |-ImplicitCastExpr 0x557cf35170d0 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x557cf35170b8 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x557cf3516ea8 <col:148> '_Bool' lvalue Var 0x557cf350fc68 'x$r_buff1_thd2' '_Bool'
|   |         `-ParenExpr 0x557cf3517098 <col:165, col:220> 'int'
|   |           `-ConditionalOperator 0x557cf3517068 <col:166, col:219> 'int'
|   |             |-BinaryOperator 0x557cf3516f68 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x557cf3516f20 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x557cf3516f08 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x557cf3516ec8 <col:166> '_Bool' lvalue Var 0x557cf350fe58 'x$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x557cf3516f50 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x557cf3516f38 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x557cf3516ee8 <col:184> '_Bool' lvalue Var 0x557cf350fb00 'x$r_buff0_thd2' '_Bool'
|   |             |-ImplicitCastExpr 0x557cf3517038 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x557cf3516fb8 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x557cf3516f88 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x557cf3517050 <col:212, col:219> 'int' <IntegralCast>
|   |               `-CStyleCastExpr 0x557cf3517010 <col:212, col:219> '_Bool' <IntegralToBoolean>
|   |                 `-IntegerLiteral 0x557cf3516fe0 <col:219> 'int' 0
|   |-BinaryOperator 0x557cf3517258 <line:767:3, col:25> 'int' '='
|   | |-DeclRefExpr 0x557cf3517200 <col:3> 'int' lvalue Var 0x557cf350f648 '__unbuffered_p1_EBX' 'int'
|   | `-ImplicitCastExpr 0x557cf3517240 <col:25> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x557cf3517220 <col:25> 'int' lvalue Var 0x557cf350f858 'x' 'int'
|   |-BinaryOperator 0x557cf3517388 <line:768:3, col:37> 'int' '='
|   | |-DeclRefExpr 0x557cf3517278 <col:3> 'int' lvalue Var 0x557cf350f858 'x' 'int'
|   | `-ConditionalOperator 0x557cf3517358 <col:7, col:37> 'int'
|   |   |-ImplicitCastExpr 0x557cf3517310 <col:7> 'int' <IntegralCast>
|   |   | `-ImplicitCastExpr 0x557cf35172f8 <col:7> '_Bool' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x557cf3517298 <col:7> '_Bool' lvalue Var 0x557cf350f8f0 'x$flush_delayed' '_Bool'
|   |   |-ImplicitCastExpr 0x557cf3517328 <col:25> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x557cf35172b8 <col:25> 'int' lvalue Var 0x557cf350f970 'x$mem_tmp' 'int'
|   |   `-ImplicitCastExpr 0x557cf3517340 <col:37> 'int' <LValueToRValue>
|   |     `-DeclRefExpr 0x557cf35172d8 <col:37> 'int' lvalue Var 0x557cf350f858 'x' 'int'
|   |-BinaryOperator 0x557cf3517420 <line:769:3, col:28> '_Bool' '='
|   | |-DeclRefExpr 0x557cf35173a8 <col:3> '_Bool' lvalue Var 0x557cf350f8f0 'x$flush_delayed' '_Bool'
|   | `-CStyleCastExpr 0x557cf35173f8 <col:21, col:28> '_Bool' <IntegralToBoolean>
|   |   `-IntegerLiteral 0x557cf35173c8 <col:28> 'int' 0
|   |-CallExpr 0x557cf3517478 <line:770:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x557cf3517460 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x557cf3517440 <col:3> 'void ()' Function 0x557cf34b6060 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x557cf35174d0 <line:771:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x557cf35174b8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x557cf3517498 <col:3> 'void ()' Function 0x557cf34b5fa0 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x557cf35177b8 <line:772:3, col:103> 'int' '='
|   | |-DeclRefExpr 0x557cf35174f0 <col:3> 'int' lvalue Var 0x557cf350f858 'x' 'int'
|   | `-ConditionalOperator 0x557cf3517788 <col:7, col:103> 'int'
|   |   |-BinaryOperator 0x557cf35175b0 <col:7, col:25> 'int' '&&'
|   |   | |-ImplicitCastExpr 0x557cf3517568 <col:7> 'int' <IntegralCast>
|   |   | | `-ImplicitCastExpr 0x557cf3517550 <col:7> '_Bool' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x557cf3517510 <col:7> '_Bool' lvalue Var 0x557cf350fe58 'x$w_buff0_used' '_Bool'
|   |   | `-ImplicitCastExpr 0x557cf3517598 <col:25> 'int' <IntegralCast>
|   |   |   `-ImplicitCastExpr 0x557cf3517580 <col:25> '_Bool' <LValueToRValue>
|   |   |     `-DeclRefExpr 0x557cf3517530 <col:25> '_Bool' lvalue Var 0x557cf350fb00 'x$r_buff0_thd2' '_Bool'
|   |   |-ImplicitCastExpr 0x557cf3517770 <col:42> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x557cf35175d0 <col:42> 'int' lvalue Var 0x557cf350fde0 'x$w_buff0' 'int'
|   |   `-ParenExpr 0x557cf3517750 <col:54, col:103> 'int'
|   |     `-ConditionalOperator 0x557cf3517720 <col:55, col:102> 'int'
|   |       |-BinaryOperator 0x557cf3517690 <col:55, col:73> 'int' '&&'
|   |       | |-ImplicitCastExpr 0x557cf3517648 <col:55> 'int' <IntegralCast>
|   |       | | `-ImplicitCastExpr 0x557cf3517630 <col:55> '_Bool' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x557cf35175f0 <col:55> '_Bool' lvalue Var 0x557cf350ff50 'x$w_buff1_used' '_Bool'
|   |       | `-ImplicitCastExpr 0x557cf3517678 <col:73> 'int' <IntegralCast>
|   |       |   `-ImplicitCastExpr 0x557cf3517660 <col:73> '_Bool' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x557cf3517610 <col:73> '_Bool' lvalue Var 0x557cf350fc68 'x$r_buff1_thd2' '_Bool'
|   |       |-ImplicitCastExpr 0x557cf35176f0 <col:90> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x557cf35176b0 <col:90> 'int' lvalue Var 0x557cf350fed8 'x$w_buff1' 'int'
|   |       `-ImplicitCastExpr 0x557cf3517708 <col:102> 'int' <LValueToRValue>
|   |         `-DeclRefExpr 0x557cf35176d0 <col:102> 'int' lvalue Var 0x557cf350f858 'x' 'int'
|   |-BinaryOperator 0x557cf35179c0 <line:773:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x557cf35177d8 <col:3> '_Bool' lvalue Var 0x557cf350fe58 'x$w_buff0_used' '_Bool'
|   | `-ImplicitCastExpr 0x557cf35179a8 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x557cf3517978 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x557cf3517898 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x557cf3517850 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x557cf3517838 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x557cf35177f8 <col:20> '_Bool' lvalue Var 0x557cf350fe58 'x$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x557cf3517880 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x557cf3517868 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x557cf3517818 <col:38> '_Bool' lvalue Var 0x557cf350fb00 'x$r_buff0_thd2' '_Bool'
|   |     |-ImplicitCastExpr 0x557cf3517930 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x557cf35178e8 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x557cf35178b8 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x557cf3517960 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x557cf3517948 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x557cf3517910 <col:66> '_Bool' lvalue Var 0x557cf350fe58 'x$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x557cf3517cc8 <line:774:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x557cf35179e0 <col:3> '_Bool' lvalue Var 0x557cf350ff50 'x$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x557cf3517cb0 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x557cf3517c80 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x557cf3517ba0 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x557cf3517aa0 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x557cf3517a58 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x557cf3517a40 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x557cf3517a00 <col:20> '_Bool' lvalue Var 0x557cf350fe58 'x$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x557cf3517a88 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x557cf3517a70 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x557cf3517a20 <col:38> '_Bool' lvalue Var 0x557cf350fb00 'x$r_buff0_thd2' '_Bool'
|   |     | `-BinaryOperator 0x557cf3517b80 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x557cf3517b18 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x557cf3517b00 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x557cf3517ac0 <col:56> '_Bool' lvalue Var 0x557cf350ff50 'x$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x557cf3517b48 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x557cf3517b30 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x557cf3517ae0 <col:74> '_Bool' lvalue Var 0x557cf350fc68 'x$r_buff1_thd2' '_Bool'
|   |     |-ImplicitCastExpr 0x557cf3517c38 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x557cf3517bf0 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x557cf3517bc0 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x557cf3517c68 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x557cf3517c50 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x557cf3517c18 <col:102> '_Bool' lvalue Var 0x557cf350ff50 'x$w_buff1_used' '_Bool'
|   |-BinaryOperator 0x557cf3517ed0 <line:775:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x557cf3517ce8 <col:3> '_Bool' lvalue Var 0x557cf350fb00 'x$r_buff0_thd2' '_Bool'
|   | `-ImplicitCastExpr 0x557cf3517eb8 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x557cf3517e88 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x557cf3517da8 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x557cf3517d60 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x557cf3517d48 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x557cf3517d08 <col:20> '_Bool' lvalue Var 0x557cf350fe58 'x$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x557cf3517d90 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x557cf3517d78 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x557cf3517d28 <col:38> '_Bool' lvalue Var 0x557cf350fb00 'x$r_buff0_thd2' '_Bool'
|   |     |-ImplicitCastExpr 0x557cf3517e40 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x557cf3517df8 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x557cf3517dc8 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x557cf3517e70 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x557cf3517e58 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x557cf3517e20 <col:66> '_Bool' lvalue Var 0x557cf350fb00 'x$r_buff0_thd2' '_Bool'
|   |-BinaryOperator 0x557cf35181b8 <line:776:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x557cf3517ef0 <col:3> '_Bool' lvalue Var 0x557cf350fc68 'x$r_buff1_thd2' '_Bool'
|   | `-ImplicitCastExpr 0x557cf35181a0 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x557cf3518170 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x557cf3518090 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x557cf3517fb0 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x557cf3517f68 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x557cf3517f50 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x557cf3517f10 <col:20> '_Bool' lvalue Var 0x557cf350fe58 'x$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x557cf3517f98 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x557cf3517f80 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x557cf3517f30 <col:38> '_Bool' lvalue Var 0x557cf350fb00 'x$r_buff0_thd2' '_Bool'
|   |     | `-BinaryOperator 0x557cf3518070 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x557cf3518028 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x557cf3518010 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x557cf3517fd0 <col:56> '_Bool' lvalue Var 0x557cf350ff50 'x$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x557cf3518058 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x557cf3518040 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x557cf3517ff0 <col:74> '_Bool' lvalue Var 0x557cf350fc68 'x$r_buff1_thd2' '_Bool'
|   |     |-ImplicitCastExpr 0x557cf3518128 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x557cf35180e0 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x557cf35180b0 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x557cf3518158 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x557cf3518140 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x557cf3518108 <col:102> '_Bool' lvalue Var 0x557cf350fc68 'x$r_buff1_thd2' '_Bool'
|   |-CallExpr 0x557cf3518210 <line:777:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x557cf35181f8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x557cf35181d8 <col:3> 'void ()' Function 0x557cf34b6060 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x557cf3518268 <line:778:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x557cf3518250 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x557cf3518230 <col:3> 'void ()' Function 0x557cf34b5fa0 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x557cf3518320 <line:779:3, col:41> 'int' '='
|   | |-DeclRefExpr 0x557cf3518288 <col:3> 'int' lvalue Var 0x557cf350f1c8 '__unbuffered_cnt' 'int'
|   | `-BinaryOperator 0x557cf3518300 <col:22, col:41> 'int' '+'
|   |   |-ImplicitCastExpr 0x557cf35182e8 <col:22> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x557cf35182a8 <col:22> 'int' lvalue Var 0x557cf350f1c8 '__unbuffered_cnt' 'int'
|   |   `-IntegerLiteral 0x557cf35182c8 <col:41> 'int' 1
|   |-CallExpr 0x557cf3518378 <line:780:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x557cf3518360 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x557cf3518340 <col:3> 'void ()' Function 0x557cf34b6060 '__VERIFIER_atomic_end' 'void ()'
|   `-ReturnStmt 0x557cf35183f0 <line:781:3, col:36>
|     `-CallExpr 0x557cf35183d0 <col:10, col:36> 'void *'
|       `-ImplicitCastExpr 0x557cf35183b8 <col:10> 'void *(*)(void)' <FunctionToPointerDecay>
|         `-DeclRefExpr 0x557cf3518398 <col:10> 'void *(void)' Function 0x557cf34b5ab8 '__VERIFIER_nondet_pointer' 'void *(void)'
|-FunctionDecl 0x557cf3518538 prev 0x557cf350ef10 <line:783:1, line:785:1> line:783:6 fence 'void ()'
| `-CompoundStmt 0x557cf35185d8 <line:784:1, line:785:1>
|-FunctionDecl 0x557cf3518608 prev 0x557cf350efd0 <line:786:1, line:788:1> line:786:6 isync 'void ()'
| `-CompoundStmt 0x557cf35186a8 <line:787:1, line:788:1>
|-FunctionDecl 0x557cf35186d8 prev 0x557cf350f090 <line:789:1, line:791:1> line:789:6 lwfence 'void ()'
| `-CompoundStmt 0x557cf3518778 <line:790:1, line:791:1>
`-FunctionDecl 0x557cf35187e8 <line:792:1, line:814:1> line:792:5 main 'int ()'
  `-CompoundStmt 0x557cf351a240 <line:793:1, line:814:1>
    |-DeclStmt 0x557cf3518900 <line:794:3, col:18>
    | `-VarDecl 0x557cf3518898 <col:3, col:13> col:13 used t1727 'pthread_t':'unsigned long'
    |-CallExpr 0x557cf3518b08 <line:795:3, col:54> 'int'
    | |-ImplicitCastExpr 0x557cf3518af0 <col:3> 'int (*)(pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x557cf3518918 <col:3> 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' Function 0x557cf34f65b8 'pthread_create' 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)'
    | |-UnaryOperator 0x557cf3518958 <col:18, col:19> 'pthread_t *' prefix '&' cannot overflow
    | | `-DeclRefExpr 0x557cf3518938 <col:19> 'pthread_t':'unsigned long' lvalue Var 0x557cf3518898 't1727' 'pthread_t':'unsigned long'
    | |-ImplicitCastExpr 0x557cf3518b48 <col:26, col:36> 'const pthread_attr_t *' <NullToPointer>
    | | `-ParenExpr 0x557cf35189d0 <col:26, col:36> 'void *'
    | |   `-CStyleCastExpr 0x557cf35189a8 <col:27, col:35> 'void *' <NullToPointer>
    | |     `-IntegerLiteral 0x557cf3518970 <col:35> 'int' 0
    | |-ImplicitCastExpr 0x557cf3518b60 <col:39> 'void *(*)(void *)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x557cf35189f0 <col:39> 'void *(void *)' Function 0x557cf3510278 'P0' 'void *(void *)'
    | `-ParenExpr 0x557cf3518a70 <col:43, col:53> 'void *'
    |   `-CStyleCastExpr 0x557cf3518a48 <col:44, col:52> 'void *' <NullToPointer>
    |     `-IntegerLiteral 0x557cf3518a10 <col:52> 'int' 0
    |-DeclStmt 0x557cf3518c08 <line:796:3, col:18>
    | `-VarDecl 0x557cf3518ba0 <col:3, col:13> col:13 used t1728 'pthread_t':'unsigned long'
    |-CallExpr 0x557cf3518db0 <line:797:3, col:54> 'int'
    | |-ImplicitCastExpr 0x557cf3518d98 <col:3> 'int (*)(pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x557cf3518c20 <col:3> 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' Function 0x557cf34f65b8 'pthread_create' 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)'
    | |-UnaryOperator 0x557cf3518c60 <col:18, col:19> 'pthread_t *' prefix '&' cannot overflow
    | | `-DeclRefExpr 0x557cf3518c40 <col:19> 'pthread_t':'unsigned long' lvalue Var 0x557cf3518ba0 't1728' 'pthread_t':'unsigned long'
    | |-ImplicitCastExpr 0x557cf3518df0 <col:26, col:36> 'const pthread_attr_t *' <NullToPointer>
    | | `-ParenExpr 0x557cf3518cd8 <col:26, col:36> 'void *'
    | |   `-CStyleCastExpr 0x557cf3518cb0 <col:27, col:35> 'void *' <NullToPointer>
    | |     `-IntegerLiteral 0x557cf3518c78 <col:35> 'int' 0
    | |-ImplicitCastExpr 0x557cf3518e08 <col:39> 'void *(*)(void *)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x557cf3518cf8 <col:39> 'void *(void *)' Function 0x557cf3514720 'P1' 'void *(void *)'
    | `-ParenExpr 0x557cf3518d78 <col:43, col:53> 'void *'
    |   `-CStyleCastExpr 0x557cf3518d50 <col:44, col:52> 'void *' <NullToPointer>
    |     `-IntegerLiteral 0x557cf3518d18 <col:52> 'int' 0
    |-CallExpr 0x557cf3518e58 <line:798:3, col:27> 'void'
    | `-ImplicitCastExpr 0x557cf3518e40 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x557cf3518e20 <col:3> 'void ()' Function 0x557cf34b5fa0 '__VERIFIER_atomic_begin' 'void ()'
    |-BinaryOperator 0x557cf3518f28 <line:799:3, col:41> '_Bool' '='
    | |-DeclRefExpr 0x557cf3518e78 <col:3> '_Bool' lvalue Var 0x557cf350f6e0 'main$tmp_guard0' '_Bool'
    | `-ImplicitCastExpr 0x557cf3518f10 <col:21, col:41> '_Bool' <IntegralToBoolean>
    |   `-BinaryOperator 0x557cf3518ef0 <col:21, col:41> 'int' '=='
    |     |-ImplicitCastExpr 0x557cf3518ed8 <col:21> 'int' <LValueToRValue>
    |     | `-DeclRefExpr 0x557cf3518e98 <col:21> 'int' lvalue Var 0x557cf350f1c8 '__unbuffered_cnt' 'int'
    |     `-IntegerLiteral 0x557cf3518eb8 <col:41> 'int' 2
    |-CallExpr 0x557cf3518f80 <line:800:3, col:25> 'void'
    | `-ImplicitCastExpr 0x557cf3518f68 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x557cf3518f48 <col:3> 'void ()' Function 0x557cf34b6060 '__VERIFIER_atomic_end' 'void ()'
    |-CallExpr 0x557cf3518ff8 <line:801:3, col:36> 'void'
    | |-ImplicitCastExpr 0x557cf3518fe0 <col:3> 'void (*)(int)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x557cf3518fa0 <col:3> 'void (int)' Function 0x557cf34b5940 '__VERIFIER_assume' 'void (int)'
    | `-ImplicitCastExpr 0x557cf3519038 <col:21> 'int' <IntegralCast>
    |   `-ImplicitCastExpr 0x557cf3519020 <col:21> '_Bool' <LValueToRValue>
    |     `-DeclRefExpr 0x557cf3518fc0 <col:21> '_Bool' lvalue Var 0x557cf350f6e0 'main$tmp_guard0' '_Bool'
    |-CallExpr 0x557cf3519088 <line:802:3, col:27> 'void'
    | `-ImplicitCastExpr 0x557cf3519070 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x557cf3519050 <col:3> 'void ()' Function 0x557cf34b5fa0 '__VERIFIER_atomic_begin' 'void ()'
    |-BinaryOperator 0x557cf3519370 <line:803:3, col:103> 'int' '='
    | |-DeclRefExpr 0x557cf35190a8 <col:3> 'int' lvalue Var 0x557cf350f858 'x' 'int'
    | `-ConditionalOperator 0x557cf3519340 <col:7, col:103> 'int'
    |   |-BinaryOperator 0x557cf3519168 <col:7, col:25> 'int' '&&'
    |   | |-ImplicitCastExpr 0x557cf3519120 <col:7> 'int' <IntegralCast>
    |   | | `-ImplicitCastExpr 0x557cf3519108 <col:7> '_Bool' <LValueToRValue>
    |   | |   `-DeclRefExpr 0x557cf35190c8 <col:7> '_Bool' lvalue Var 0x557cf350fe58 'x$w_buff0_used' '_Bool'
    |   | `-ImplicitCastExpr 0x557cf3519150 <col:25> 'int' <IntegralCast>
    |   |   `-ImplicitCastExpr 0x557cf3519138 <col:25> '_Bool' <LValueToRValue>
    |   |     `-DeclRefExpr 0x557cf35190e8 <col:25> '_Bool' lvalue Var 0x557cf350f9e8 'x$r_buff0_thd0' '_Bool'
    |   |-ImplicitCastExpr 0x557cf3519328 <col:42> 'int' <LValueToRValue>
    |   | `-DeclRefExpr 0x557cf3519188 <col:42> 'int' lvalue Var 0x557cf350fde0 'x$w_buff0' 'int'
    |   `-ParenExpr 0x557cf3519308 <col:54, col:103> 'int'
    |     `-ConditionalOperator 0x557cf35192d8 <col:55, col:102> 'int'
    |       |-BinaryOperator 0x557cf3519248 <col:55, col:73> 'int' '&&'
    |       | |-ImplicitCastExpr 0x557cf3519200 <col:55> 'int' <IntegralCast>
    |       | | `-ImplicitCastExpr 0x557cf35191e8 <col:55> '_Bool' <LValueToRValue>
    |       | |   `-DeclRefExpr 0x557cf35191a8 <col:55> '_Bool' lvalue Var 0x557cf350ff50 'x$w_buff1_used' '_Bool'
    |       | `-ImplicitCastExpr 0x557cf3519230 <col:73> 'int' <IntegralCast>
    |       |   `-ImplicitCastExpr 0x557cf3519218 <col:73> '_Bool' <LValueToRValue>
    |       |     `-DeclRefExpr 0x557cf35191c8 <col:73> '_Bool' lvalue Var 0x557cf350fb78 'x$r_buff1_thd0' '_Bool'
    |       |-ImplicitCastExpr 0x557cf35192a8 <col:90> 'int' <LValueToRValue>
    |       | `-DeclRefExpr 0x557cf3519268 <col:90> 'int' lvalue Var 0x557cf350fed8 'x$w_buff1' 'int'
    |       `-ImplicitCastExpr 0x557cf35192c0 <col:102> 'int' <LValueToRValue>
    |         `-DeclRefExpr 0x557cf3519288 <col:102> 'int' lvalue Var 0x557cf350f858 'x' 'int'
    |-BinaryOperator 0x557cf3519578 <line:804:3, col:66> '_Bool' '='
    | |-DeclRefExpr 0x557cf3519390 <col:3> '_Bool' lvalue Var 0x557cf350fe58 'x$w_buff0_used' '_Bool'
    | `-ImplicitCastExpr 0x557cf3519560 <col:20, col:66> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x557cf3519530 <col:20, col:66> 'int'
    |     |-BinaryOperator 0x557cf3519450 <col:20, col:38> 'int' '&&'
    |     | |-ImplicitCastExpr 0x557cf3519408 <col:20> 'int' <IntegralCast>
    |     | | `-ImplicitCastExpr 0x557cf35193f0 <col:20> '_Bool' <LValueToRValue>
    |     | |   `-DeclRefExpr 0x557cf35193b0 <col:20> '_Bool' lvalue Var 0x557cf350fe58 'x$w_buff0_used' '_Bool'
    |     | `-ImplicitCastExpr 0x557cf3519438 <col:38> 'int' <IntegralCast>
    |     |   `-ImplicitCastExpr 0x557cf3519420 <col:38> '_Bool' <LValueToRValue>
    |     |     `-DeclRefExpr 0x557cf35193d0 <col:38> '_Bool' lvalue Var 0x557cf350f9e8 'x$r_buff0_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x557cf35194e8 <col:55, col:62> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x557cf35194a0 <col:55, col:62> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x557cf3519470 <col:62> 'int' 0
    |     `-ImplicitCastExpr 0x557cf3519518 <col:66> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x557cf3519500 <col:66> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x557cf35194c8 <col:66> '_Bool' lvalue Var 0x557cf350fe58 'x$w_buff0_used' '_Bool'
    |-BinaryOperator 0x557cf3519860 <line:805:3, col:102> '_Bool' '='
    | |-DeclRefExpr 0x557cf3519598 <col:3> '_Bool' lvalue Var 0x557cf350ff50 'x$w_buff1_used' '_Bool'
    | `-ImplicitCastExpr 0x557cf3519848 <col:20, col:102> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x557cf3519818 <col:20, col:102> 'int'
    |     |-BinaryOperator 0x557cf3519738 <col:20, col:74> 'int' '||'
    |     | |-BinaryOperator 0x557cf3519658 <col:20, col:38> 'int' '&&'
    |     | | |-ImplicitCastExpr 0x557cf3519610 <col:20> 'int' <IntegralCast>
    |     | | | `-ImplicitCastExpr 0x557cf35195f8 <col:20> '_Bool' <LValueToRValue>
    |     | | |   `-DeclRefExpr 0x557cf35195b8 <col:20> '_Bool' lvalue Var 0x557cf350fe58 'x$w_buff0_used' '_Bool'
    |     | | `-ImplicitCastExpr 0x557cf3519640 <col:38> 'int' <IntegralCast>
    |     | |   `-ImplicitCastExpr 0x557cf3519628 <col:38> '_Bool' <LValueToRValue>
    |     | |     `-DeclRefExpr 0x557cf35195d8 <col:38> '_Bool' lvalue Var 0x557cf350f9e8 'x$r_buff0_thd0' '_Bool'
    |     | `-BinaryOperator 0x557cf3519718 <col:56, col:74> 'int' '&&'
    |     |   |-ImplicitCastExpr 0x557cf35196d0 <col:56> 'int' <IntegralCast>
    |     |   | `-ImplicitCastExpr 0x557cf35196b8 <col:56> '_Bool' <LValueToRValue>
    |     |   |   `-DeclRefExpr 0x557cf3519678 <col:56> '_Bool' lvalue Var 0x557cf350ff50 'x$w_buff1_used' '_Bool'
    |     |   `-ImplicitCastExpr 0x557cf3519700 <col:74> 'int' <IntegralCast>
    |     |     `-ImplicitCastExpr 0x557cf35196e8 <col:74> '_Bool' <LValueToRValue>
    |     |       `-DeclRefExpr 0x557cf3519698 <col:74> '_Bool' lvalue Var 0x557cf350fb78 'x$r_buff1_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x557cf35197d0 <col:91, col:98> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x557cf3519788 <col:91, col:98> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x557cf3519758 <col:98> 'int' 0
    |     `-ImplicitCastExpr 0x557cf3519800 <col:102> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x557cf35197e8 <col:102> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x557cf35197b0 <col:102> '_Bool' lvalue Var 0x557cf350ff50 'x$w_buff1_used' '_Bool'
    |-BinaryOperator 0x557cf3519a68 <line:806:3, col:66> '_Bool' '='
    | |-DeclRefExpr 0x557cf3519880 <col:3> '_Bool' lvalue Var 0x557cf350f9e8 'x$r_buff0_thd0' '_Bool'
    | `-ImplicitCastExpr 0x557cf3519a50 <col:20, col:66> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x557cf3519a20 <col:20, col:66> 'int'
    |     |-BinaryOperator 0x557cf3519940 <col:20, col:38> 'int' '&&'
    |     | |-ImplicitCastExpr 0x557cf35198f8 <col:20> 'int' <IntegralCast>
    |     | | `-ImplicitCastExpr 0x557cf35198e0 <col:20> '_Bool' <LValueToRValue>
    |     | |   `-DeclRefExpr 0x557cf35198a0 <col:20> '_Bool' lvalue Var 0x557cf350fe58 'x$w_buff0_used' '_Bool'
    |     | `-ImplicitCastExpr 0x557cf3519928 <col:38> 'int' <IntegralCast>
    |     |   `-ImplicitCastExpr 0x557cf3519910 <col:38> '_Bool' <LValueToRValue>
    |     |     `-DeclRefExpr 0x557cf35198c0 <col:38> '_Bool' lvalue Var 0x557cf350f9e8 'x$r_buff0_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x557cf35199d8 <col:55, col:62> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x557cf3519990 <col:55, col:62> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x557cf3519960 <col:62> 'int' 0
    |     `-ImplicitCastExpr 0x557cf3519a08 <col:66> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x557cf35199f0 <col:66> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x557cf35199b8 <col:66> '_Bool' lvalue Var 0x557cf350f9e8 'x$r_buff0_thd0' '_Bool'
    |-BinaryOperator 0x557cf3519d68 <line:807:3, col:102> '_Bool' '='
    | |-DeclRefExpr 0x557cf3519a88 <col:3> '_Bool' lvalue Var 0x557cf350fb78 'x$r_buff1_thd0' '_Bool'
    | `-ImplicitCastExpr 0x557cf3519d50 <col:20, col:102> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x557cf3519d20 <col:20, col:102> 'int'
    |     |-BinaryOperator 0x557cf3519c40 <col:20, col:74> 'int' '||'
    |     | |-BinaryOperator 0x557cf3519b48 <col:20, col:38> 'int' '&&'
    |     | | |-ImplicitCastExpr 0x557cf3519b00 <col:20> 'int' <IntegralCast>
    |     | | | `-ImplicitCastExpr 0x557cf3519ae8 <col:20> '_Bool' <LValueToRValue>
    |     | | |   `-DeclRefExpr 0x557cf3519aa8 <col:20> '_Bool' lvalue Var 0x557cf350fe58 'x$w_buff0_used' '_Bool'
    |     | | `-ImplicitCastExpr 0x557cf3519b30 <col:38> 'int' <IntegralCast>
    |     | |   `-ImplicitCastExpr 0x557cf3519b18 <col:38> '_Bool' <LValueToRValue>
    |     | |     `-DeclRefExpr 0x557cf3519ac8 <col:38> '_Bool' lvalue Var 0x557cf350f9e8 'x$r_buff0_thd0' '_Bool'
    |     | `-BinaryOperator 0x557cf3519c20 <col:56, col:74> 'int' '&&'
    |     |   |-ImplicitCastExpr 0x557cf3519bd8 <col:56> 'int' <IntegralCast>
    |     |   | `-ImplicitCastExpr 0x557cf3519bc0 <col:56> '_Bool' <LValueToRValue>
    |     |   |   `-DeclRefExpr 0x557cf3519b68 <col:56> '_Bool' lvalue Var 0x557cf350ff50 'x$w_buff1_used' '_Bool'
    |     |   `-ImplicitCastExpr 0x557cf3519c08 <col:74> 'int' <IntegralCast>
    |     |     `-ImplicitCastExpr 0x557cf3519bf0 <col:74> '_Bool' <LValueToRValue>
    |     |       `-DeclRefExpr 0x557cf3519ba0 <col:74> '_Bool' lvalue Var 0x557cf350fb78 'x$r_buff1_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x557cf3519cd8 <col:91, col:98> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x557cf3519c90 <col:91, col:98> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x557cf3519c60 <col:98> 'int' 0
    |     `-ImplicitCastExpr 0x557cf3519d08 <col:102> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x557cf3519cf0 <col:102> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x557cf3519cb8 <col:102> '_Bool' lvalue Var 0x557cf350fb78 'x$r_buff1_thd0' '_Bool'
    |-CallExpr 0x557cf3519dc0 <line:808:3, col:25> 'void'
    | `-ImplicitCastExpr 0x557cf3519da8 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x557cf3519d88 <col:3> 'void ()' Function 0x557cf34b6060 '__VERIFIER_atomic_end' 'void ()'
    |-CallExpr 0x557cf3519e18 <line:809:3, col:27> 'void'
    | `-ImplicitCastExpr 0x557cf3519e00 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x557cf3519de0 <col:3> 'void ()' Function 0x557cf34b5fa0 '__VERIFIER_atomic_begin' 'void ()'
    |-BinaryOperator 0x557cf351a0e8 <line:810:3, col:131> '_Bool' '='
    | |-DeclRefExpr 0x557cf3519e38 <col:3> '_Bool' lvalue Var 0x557cf350f758 'main$tmp_guard1' '_Bool'
    | `-ImplicitCastExpr 0x557cf351a0d0 <col:21, col:131> '_Bool' <IntegralToBoolean>
    |   `-UnaryOperator 0x557cf351a0b8 <col:21, col:131> 'int' prefix '!' cannot overflow
    |     `-ParenExpr 0x557cf351a098 <col:22, col:131> 'int'
    |       `-BinaryOperator 0x557cf351a078 <col:23, col:130> 'int' '&&'
    |         |-BinaryOperator 0x557cf3519fe0 <col:23, col:102> 'int' '&&'
    |         | |-BinaryOperator 0x557cf3519f48 <col:23, col:74> 'int' '&&'
    |         | | |-BinaryOperator 0x557cf3519eb0 <col:23, col:46> 'int' '=='
    |         | | | |-ImplicitCastExpr 0x557cf3519e98 <col:23> 'int' <LValueToRValue>
    |         | | | | `-DeclRefExpr 0x557cf3519e58 <col:23> 'int' lvalue Var 0x557cf350f2e8 '__unbuffered_p0_EAX' 'int'
    |         | | | `-IntegerLiteral 0x557cf3519e78 <col:46> 'int' 1
    |         | | `-BinaryOperator 0x557cf3519f28 <col:51, col:74> 'int' '=='
    |         | |   |-ImplicitCastExpr 0x557cf3519f10 <col:51> 'int' <LValueToRValue>
    |         | |   | `-DeclRefExpr 0x557cf3519ed0 <col:51> 'int' lvalue Var 0x557cf350f408 '__unbuffered_p0_EBX' 'int'
    |         | |   `-IntegerLiteral 0x557cf3519ef0 <col:74> 'int' 0
    |         | `-BinaryOperator 0x557cf3519fc0 <col:79, col:102> 'int' '=='
    |         |   |-ImplicitCastExpr 0x557cf3519fa8 <col:79> 'int' <LValueToRValue>
    |         |   | `-DeclRefExpr 0x557cf3519f68 <col:79> 'int' lvalue Var 0x557cf350f528 '__unbuffered_p1_EAX' 'int'
    |         |   `-IntegerLiteral 0x557cf3519f88 <col:102> 'int' 1
    |         `-BinaryOperator 0x557cf351a058 <col:107, col:130> 'int' '=='
    |           |-ImplicitCastExpr 0x557cf351a040 <col:107> 'int' <LValueToRValue>
    |           | `-DeclRefExpr 0x557cf351a000 <col:107> 'int' lvalue Var 0x557cf350f648 '__unbuffered_p1_EBX' 'int'
    |           `-IntegerLiteral 0x557cf351a020 <col:130> 'int' 0
    |-CallExpr 0x557cf351a140 <line:811:3, col:25> 'void'
    | `-ImplicitCastExpr 0x557cf351a128 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x557cf351a108 <col:3> 'void ()' Function 0x557cf34b6060 '__VERIFIER_atomic_end' 'void ()'
    |-CallExpr 0x557cf351a1b8 <line:812:3, col:36> 'void'
    | |-ImplicitCastExpr 0x557cf351a1a0 <col:3> 'void (*)(int)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x557cf351a160 <col:3> 'void (int)' Function 0x557cf34b5d28 '__VERIFIER_assert' 'void (int)'
    | `-ImplicitCastExpr 0x557cf351a1f8 <col:21> 'int' <IntegralCast>
    |   `-ImplicitCastExpr 0x557cf351a1e0 <col:21> '_Bool' <LValueToRValue>
    |     `-DeclRefExpr 0x557cf351a180 <col:21> '_Bool' lvalue Var 0x557cf350f758 'main$tmp_guard1' '_Bool'
    `-ReturnStmt 0x557cf351a230 <line:813:3, col:10>
      `-IntegerLiteral 0x557cf351a210 <col:10> 'int' 0
