TranslationUnitDecl 0x5559a7125e18 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x5559a71266d8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x5559a71263b0 '__int128'
|-TypedefDecl 0x5559a7126748 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x5559a71263d0 'unsigned __int128'
|-TypedefDecl 0x5559a7126a50 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x5559a7126820 'struct __NSConstantString_tag'
|   `-Record 0x5559a71267a0 '__NSConstantString_tag'
|-TypedefDecl 0x5559a7126af8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x5559a7126ab0 'char *'
|   `-BuiltinType 0x5559a7125eb0 'char'
|-TypedefDecl 0x5559a7165650 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'struct __va_list_tag [1]'
| `-ConstantArrayType 0x5559a7126d90 'struct __va_list_tag [1]' 1 
|   `-RecordType 0x5559a7126bd0 'struct __va_list_tag'
|     `-Record 0x5559a7126b50 '__va_list_tag'
|-FunctionDecl 0x5559a7165790 <./split_4/mix029_power.opt_false-unreach-call.i:1:1, col:34> col:13 used __VERIFIER_assume 'void (int)' extern
| `-ParmVarDecl 0x5559a71656c0 <col:31> col:34 'int'
|-FunctionDecl 0x5559a7165958 <line:2:1, col:45> col:15 used __VERIFIER_nondet_pointer 'void *(void)' extern
|-FunctionDecl 0x5559a7165a80 <line:3:1, col:61> col:13 used __VERIFIER_error 'void () __attribute__((noreturn))' extern
|-FunctionDecl 0x5559a7165bc8 <line:4:1, col:99> col:6 used __VERIFIER_assert 'void (int)'
| |-ParmVarDecl 0x5559a7165b38 <col:24, col:28> col:28 used expression 'int'
| `-CompoundStmt 0x5559a7165df8 <col:40, col:99>
|   |-IfStmt 0x5559a7165dc8 <col:42, col:88>
|   | |-UnaryOperator 0x5559a7165ca8 <col:46, col:47> 'int' prefix '!' cannot overflow
|   | | `-ImplicitCastExpr 0x5559a7165c90 <col:47> 'int' <LValueToRValue>
|   | |   `-DeclRefExpr 0x5559a7165c70 <col:47> 'int' lvalue ParmVar 0x5559a7165b38 'expression' 'int'
|   | `-CompoundStmt 0x5559a7165db0 <col:59, col:88>
|   |   `-LabelStmt 0x5559a7165d98 <col:61, col:85> 'ERROR'
|   |     `-CallExpr 0x5559a7165d28 <col:68, col:85> 'void'
|   |       `-ImplicitCastExpr 0x5559a7165d10 <col:68> 'void (*)() __attribute__((noreturn))' <FunctionToPointerDecay>
|   |         `-DeclRefExpr 0x5559a7165cc0 <col:68> 'void () __attribute__((noreturn))' Function 0x5559a7165a80 '__VERIFIER_error' 'void () __attribute__((noreturn))'
|   |-NullStmt 0x5559a7165de0 <col:89>
|   `-ReturnStmt 0x5559a7165de8 <col:91>
|-FunctionDecl 0x5559a7165e40 <line:5:1, col:37> col:13 used __VERIFIER_atomic_begin 'void ()' extern
|-FunctionDecl 0x5559a7165f00 <line:6:1, col:35> col:13 used __VERIFIER_atomic_end 'void ()' extern
|-FunctionDecl 0x5559a7166280 <line:8:1, line:10:76> line:8:13 __assert_fail 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x5559a7165fb8 <col:28, col:40> col:40 __assertion 'const char *'
| |-ParmVarDecl 0x5559a7166038 <col:53, col:65> col:65 __file 'const char *'
| |-ParmVarDecl 0x5559a71660b8 <line:9:7, col:20> col:20 __line 'unsigned int'
| |-ParmVarDecl 0x5559a7166138 <col:28, col:40> col:40 __function 'const char *'
| `-NoThrowAttr 0x5559a7166340 <line:10:22>
|-FunctionDecl 0x5559a718c390 <line:11:1, line:13:76> line:11:13 __assert_perror_fail 'void (int, const char *, unsigned int, const char *) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x5559a71663b0 <col:35, col:39> col:39 __errnum 'int'
| |-ParmVarDecl 0x5559a7166430 <col:49, col:61> col:61 __file 'const char *'
| |-ParmVarDecl 0x5559a71664b0 <line:12:7, col:20> col:20 __line 'unsigned int'
| |-ParmVarDecl 0x5559a7166530 <col:28, col:40> col:40 __function 'const char *'
| `-NoThrowAttr 0x5559a718c450 <line:13:22>
|-FunctionDecl 0x5559a718c700 <line:14:1, line:15:76> line:14:13 __assert 'void (const char *, const char *, int) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x5559a718c4c0 <col:23, col:35> col:35 __assertion 'const char *'
| |-ParmVarDecl 0x5559a718c540 <col:48, col:60> col:60 __file 'const char *'
| |-ParmVarDecl 0x5559a718c5c0 <col:68, col:72> col:72 __line 'int'
| `-NoThrowAttr 0x5559a718c7b8 <line:15:22>
|-TypedefDecl 0x5559a718c828 <line:17:1, col:23> col:23 __u_char 'unsigned char'
| `-BuiltinType 0x5559a7125f70 'unsigned char'
|-TypedefDecl 0x5559a718c898 <line:18:1, col:28> col:28 __u_short 'unsigned short'
| `-BuiltinType 0x5559a7125f90 'unsigned short'
|-TypedefDecl 0x5559a718c908 <line:19:1, col:22> col:22 __u_int 'unsigned int'
| `-BuiltinType 0x5559a7125fb0 'unsigned int'
|-TypedefDecl 0x5559a718c978 <line:20:1, col:27> col:27 __u_long 'unsigned long'
| `-BuiltinType 0x5559a7125fd0 'unsigned long'
|-TypedefDecl 0x5559a718c9e8 <line:21:1, col:21> col:21 __int8_t 'signed char'
| `-BuiltinType 0x5559a7125ed0 'signed char'
|-TypedefDecl 0x5559a718ca58 <line:22:1, col:23> col:23 __uint8_t 'unsigned char'
| `-BuiltinType 0x5559a7125f70 'unsigned char'
|-TypedefDecl 0x5559a718cac8 <line:23:1, col:26> col:26 __int16_t 'short'
| `-BuiltinType 0x5559a7125ef0 'short'
|-TypedefDecl 0x5559a718cb38 <line:24:1, col:28> col:28 __uint16_t 'unsigned short'
| `-BuiltinType 0x5559a7125f90 'unsigned short'
|-TypedefDecl 0x5559a718cba8 <line:25:1, col:20> col:20 __int32_t 'int'
| `-BuiltinType 0x5559a7125f10 'int'
|-TypedefDecl 0x5559a718cc18 <line:26:1, col:22> col:22 __uint32_t 'unsigned int'
| `-BuiltinType 0x5559a7125fb0 'unsigned int'
|-TypedefDecl 0x5559a718cc88 <line:27:1, col:25> col:25 __int64_t 'long'
| `-BuiltinType 0x5559a7125f30 'long'
|-TypedefDecl 0x5559a718ccf8 <line:28:1, col:27> col:27 referenced __uint64_t 'unsigned long'
| `-BuiltinType 0x5559a7125fd0 'unsigned long'
|-TypedefDecl 0x5559a718cd68 <line:29:1, col:18> col:18 referenced __quad_t 'long'
| `-BuiltinType 0x5559a7125f30 'long'
|-TypedefDecl 0x5559a718cdd8 <line:30:1, col:27> col:27 __u_quad_t 'unsigned long'
| `-BuiltinType 0x5559a7125fd0 'unsigned long'
|-TypedefDecl 0x5559a718ce48 <line:31:1, col:27> col:27 __dev_t 'unsigned long'
| `-BuiltinType 0x5559a7125fd0 'unsigned long'
|-TypedefDecl 0x5559a718ceb8 <line:32:1, col:22> col:22 __uid_t 'unsigned int'
| `-BuiltinType 0x5559a7125fb0 'unsigned int'
|-TypedefDecl 0x5559a718cf28 <line:33:1, col:22> col:22 __gid_t 'unsigned int'
| `-BuiltinType 0x5559a7125fb0 'unsigned int'
|-TypedefDecl 0x5559a718cf98 <line:34:1, col:27> col:27 __ino_t 'unsigned long'
| `-BuiltinType 0x5559a7125fd0 'unsigned long'
|-TypedefDecl 0x5559a718d008 <line:35:1, col:27> col:27 __ino64_t 'unsigned long'
| `-BuiltinType 0x5559a7125fd0 'unsigned long'
|-TypedefDecl 0x5559a718d078 <line:36:1, col:22> col:22 __mode_t 'unsigned int'
| `-BuiltinType 0x5559a7125fb0 'unsigned int'
|-TypedefDecl 0x5559a718d0e8 <line:37:1, col:27> col:27 __nlink_t 'unsigned long'
| `-BuiltinType 0x5559a7125fd0 'unsigned long'
|-TypedefDecl 0x5559a718d158 <line:38:1, col:18> col:18 __off_t 'long'
| `-BuiltinType 0x5559a7125f30 'long'
|-TypedefDecl 0x5559a718d1c8 <line:39:1, col:18> col:18 referenced __off64_t 'long'
| `-BuiltinType 0x5559a7125f30 'long'
|-TypedefDecl 0x5559a718d238 <line:40:1, col:13> col:13 referenced __pid_t 'int'
| `-BuiltinType 0x5559a7125f10 'int'
|-RecordDecl 0x5559a718d290 <line:41:9, col:32> col:9 struct definition
| `-FieldDecl 0x5559a718d408 <col:18, col:29> col:22 __val 'int [2]'
|-TypedefDecl 0x5559a718d4c0 <col:1, col:34> col:34 __fsid_t 'struct __fsid_t':'__fsid_t'
| `-ElaboratedType 0x5559a718d460 'struct __fsid_t' sugar
|   `-RecordType 0x5559a718d310 '__fsid_t'
|     `-Record 0x5559a718d290 ''
|-TypedefDecl 0x5559a718d548 <line:42:1, col:18> col:18 referenced __clock_t 'long'
| `-BuiltinType 0x5559a7125f30 'long'
|-TypedefDecl 0x5559a718d5b8 <line:43:1, col:27> col:27 __rlim_t 'unsigned long'
| `-BuiltinType 0x5559a7125fd0 'unsigned long'
|-TypedefDecl 0x5559a718d628 <line:44:1, col:27> col:27 __rlim64_t 'unsigned long'
| `-BuiltinType 0x5559a7125fd0 'unsigned long'
|-TypedefDecl 0x5559a718d698 <line:45:1, col:22> col:22 __id_t 'unsigned int'
| `-BuiltinType 0x5559a7125fb0 'unsigned int'
|-TypedefDecl 0x5559a718d708 <line:46:1, col:18> col:18 referenced __time_t 'long'
| `-BuiltinType 0x5559a7125f30 'long'
|-TypedefDecl 0x5559a718d778 <line:47:1, col:22> col:22 __useconds_t 'unsigned int'
| `-BuiltinType 0x5559a7125fb0 'unsigned int'
|-TypedefDecl 0x5559a718d7e8 <line:48:1, col:18> col:18 __suseconds_t 'long'
| `-BuiltinType 0x5559a7125f30 'long'
|-TypedefDecl 0x5559a718d858 <line:49:1, col:13> col:13 __daddr_t 'int'
| `-BuiltinType 0x5559a7125f10 'int'
|-TypedefDecl 0x5559a718d8c8 <line:50:1, col:13> col:13 __key_t 'int'
| `-BuiltinType 0x5559a7125f10 'int'
|-TypedefDecl 0x5559a718d938 <line:51:1, col:13> col:13 referenced __clockid_t 'int'
| `-BuiltinType 0x5559a7125f10 'int'
|-TypedefDecl 0x5559a718d9a8 <line:52:1, col:16> col:16 referenced __timer_t 'void *'
| `-PointerType 0x5559a7126630 'void *'
|   `-BuiltinType 0x5559a7125e70 'void'
|-TypedefDecl 0x5559a718da18 <line:53:1, col:18> col:18 __blksize_t 'long'
| `-BuiltinType 0x5559a7125f30 'long'
|-TypedefDecl 0x5559a718da88 <line:54:1, col:18> col:18 __blkcnt_t 'long'
| `-BuiltinType 0x5559a7125f30 'long'
|-TypedefDecl 0x5559a718daf8 <line:55:1, col:18> col:18 __blkcnt64_t 'long'
| `-BuiltinType 0x5559a7125f30 'long'
|-TypedefDecl 0x5559a718db68 <line:56:1, col:27> col:27 __fsblkcnt_t 'unsigned long'
| `-BuiltinType 0x5559a7125fd0 'unsigned long'
|-TypedefDecl 0x5559a718dbd8 <line:57:1, col:27> col:27 __fsblkcnt64_t 'unsigned long'
| `-BuiltinType 0x5559a7125fd0 'unsigned long'
|-TypedefDecl 0x5559a718dc48 <line:58:1, col:27> col:27 __fsfilcnt_t 'unsigned long'
| `-BuiltinType 0x5559a7125fd0 'unsigned long'
|-TypedefDecl 0x5559a718dcb8 <line:59:1, col:27> col:27 __fsfilcnt64_t 'unsigned long'
| `-BuiltinType 0x5559a7125fd0 'unsigned long'
|-TypedefDecl 0x5559a718dd28 <line:60:1, col:18> col:18 __fsword_t 'long'
| `-BuiltinType 0x5559a7125f30 'long'
|-TypedefDecl 0x5559a718dd98 <line:61:1, col:18> col:18 __ssize_t 'long'
| `-BuiltinType 0x5559a7125f30 'long'
|-TypedefDecl 0x5559a718de08 <line:62:1, col:18> col:18 referenced __syscall_slong_t 'long'
| `-BuiltinType 0x5559a7125f30 'long'
|-TypedefDecl 0x5559a718de78 <line:63:1, col:27> col:27 __syscall_ulong_t 'unsigned long'
| `-BuiltinType 0x5559a7125fd0 'unsigned long'
|-TypedefDecl 0x5559a718df08 <line:64:1, col:19> col:19 __loff_t '__off64_t':'long'
| `-TypedefType 0x5559a718ded0 '__off64_t' sugar
|   |-Typedef 0x5559a718d1c8 '__off64_t'
|   `-BuiltinType 0x5559a7125f30 'long'
|-TypedefDecl 0x5559a718e000 <line:65:1, col:19> col:19 __qaddr_t '__quad_t *'
| `-PointerType 0x5559a718dfc0 '__quad_t *'
|   `-TypedefType 0x5559a718df60 '__quad_t' sugar
|     |-Typedef 0x5559a718cd68 '__quad_t'
|     `-BuiltinType 0x5559a7125f30 'long'
|-TypedefDecl 0x5559a718e070 <line:66:1, col:15> col:15 __caddr_t 'char *'
| `-PointerType 0x5559a7126ab0 'char *'
|   `-BuiltinType 0x5559a7125eb0 'char'
|-TypedefDecl 0x5559a718e0e0 <line:67:1, col:18> col:18 __intptr_t 'long'
| `-BuiltinType 0x5559a7125f30 'long'
|-TypedefDecl 0x5559a718e150 <line:68:1, col:22> col:22 __socklen_t 'unsigned int'
| `-BuiltinType 0x5559a7125fb0 'unsigned int'
|-FunctionDecl 0x5559a718e298 <line:69:1, line:73:1> line:70:1 __bswap_32 'unsigned int (unsigned int)' static inline
| |-ParmVarDecl 0x5559a718e1c0 <col:13, col:26> col:26 used __bsx 'unsigned int'
| `-CompoundStmt 0x5559a718f5e8 <line:71:1, line:73:1>
|   `-ReturnStmt 0x5559a718f5d8 <line:72:3, col:34>
|     `-CallExpr 0x5559a718f598 <col:10, col:34> 'unsigned int'
|       |-ImplicitCastExpr 0x5559a718f580 <col:10> 'unsigned int (*)(unsigned int)' <BuiltinFnToFnPtr>
|       | `-DeclRefExpr 0x5559a718f510 <col:10> '<builtin fn type>' Function 0x5559a718f380 '__builtin_bswap32' 'unsigned int (unsigned int)'
|       `-ImplicitCastExpr 0x5559a718f5c0 <col:29> 'unsigned int' <LValueToRValue>
|         `-DeclRefExpr 0x5559a718f530 <col:29> 'unsigned int' lvalue ParmVar 0x5559a718e1c0 '__bsx' 'unsigned int'
|-FunctionDecl 0x5559a718f380 <col:10> col:10 implicit used __builtin_bswap32 'unsigned int (unsigned int)' extern
| |-ParmVarDecl 0x5559a718f420 <<invalid sloc>> <invalid sloc> 'unsigned int'
| |-NoThrowAttr 0x5559a718f490 <col:10> Implicit
| `-ConstAttr 0x5559a718f4e8 <col:10> Implicit
|-FunctionDecl 0x5559a718f740 <line:74:1, line:78:1> line:75:1 __bswap_64 '__uint64_t (__uint64_t)' static inline
| |-ParmVarDecl 0x5559a718f638 <col:13, col:24> col:24 used __bsx '__uint64_t':'unsigned long'
| `-CompoundStmt 0x5559a718fa58 <line:76:1, line:78:1>
|   `-ReturnStmt 0x5559a718fa48 <line:77:3, col:34>
|     `-CallExpr 0x5559a718fa08 <col:10, col:34> 'unsigned long'
|       |-ImplicitCastExpr 0x5559a718f9f0 <col:10> 'unsigned long (*)(unsigned long)' <BuiltinFnToFnPtr>
|       | `-DeclRefExpr 0x5559a718f978 <col:10> '<builtin fn type>' Function 0x5559a718f7e8 '__builtin_bswap64' 'unsigned long (unsigned long)'
|       `-ImplicitCastExpr 0x5559a718fa30 <col:29> '__uint64_t':'unsigned long' <LValueToRValue>
|         `-DeclRefExpr 0x5559a718f998 <col:29> '__uint64_t':'unsigned long' lvalue ParmVar 0x5559a718f638 '__bsx' '__uint64_t':'unsigned long'
|-FunctionDecl 0x5559a718f7e8 <col:10> col:10 implicit used __builtin_bswap64 'unsigned long (unsigned long)' extern
| |-ParmVarDecl 0x5559a718f888 <<invalid sloc>> <invalid sloc> 'unsigned long'
| |-NoThrowAttr 0x5559a718f8f8 <col:10> Implicit
| `-ConstAttr 0x5559a718f950 <col:10> Implicit
|-TypedefDecl 0x5559a718fa88 <line:79:1, col:27> col:27 referenced size_t 'unsigned long'
| `-BuiltinType 0x5559a7125fd0 'unsigned long'
|-TypedefDecl 0x5559a718fb18 <line:81:1, col:18> col:18 referenced time_t '__time_t':'long'
| `-TypedefType 0x5559a718fae0 '__time_t' sugar
|   |-Typedef 0x5559a718d708 '__time_t'
|   `-BuiltinType 0x5559a7125f30 'long'
|-RecordDecl 0x5559a718fb70 <line:84:1, line:88:3> line:84:8 struct timespec definition
| |-FieldDecl 0x5559a718fc28 <line:86:5, col:14> col:14 tv_sec '__time_t':'long'
| `-FieldDecl 0x5559a718fcb8 <line:87:5, col:23> col:23 tv_nsec '__syscall_slong_t':'long'
|-TypedefDecl 0x5559a718fd48 <line:89:1, col:17> col:17 referenced pid_t '__pid_t':'int'
| `-TypedefType 0x5559a718fd10 '__pid_t' sugar
|   |-Typedef 0x5559a718d238 '__pid_t'
|   `-BuiltinType 0x5559a7125f10 'int'
|-RecordDecl 0x5559a718fda0 <line:90:1, line:93:3> line:90:8 struct sched_param definition
| `-FieldDecl 0x5559a718fe60 <line:92:5, col:9> col:9 __sched_priority 'int'
|-RecordDecl 0x5559a718feb0 <line:96:1, line:99:3> line:96:8 struct __sched_param definition
| `-FieldDecl 0x5559a718ff70 <line:98:5, col:9> col:9 __sched_priority 'int'
|-TypedefDecl 0x5559a718ffd8 <line:100:1, col:27> col:27 referenced __cpu_mask 'unsigned long'
| `-BuiltinType 0x5559a7125fd0 'unsigned long'
|-RecordDecl 0x5559a7190030 <line:101:9, line:104:1> line:101:9 struct definition
| `-FieldDecl 0x5559a71902c0 <line:103:3, col:53> col:14 __bits '__cpu_mask [64]'
|-TypedefDecl 0x5559a71913a0 <line:101:1, line:104:3> col:3 referenced cpu_set_t 'struct cpu_set_t':'cpu_set_t'
| `-ElaboratedType 0x5559a7190310 'struct cpu_set_t' sugar
|   `-RecordType 0x5559a71900b0 'cpu_set_t'
|     `-Record 0x5559a7190030 ''
|-FunctionDecl 0x5559a7191678 <line:106:1, line:107:42> line:106:12 __sched_cpucount 'int (size_t, const cpu_set_t *)' extern
| |-ParmVarDecl 0x5559a7191448 <col:30, col:37> col:37 __setsize 'size_t':'unsigned long'
| |-ParmVarDecl 0x5559a7191550 <col:48, col:65> col:65 __setp 'const cpu_set_t *'
| `-NoThrowAttr 0x5559a7191728 <line:107:19>
|-FunctionDecl 0x5559a7191900 <line:108:1, col:92> col:19 __sched_cpualloc 'cpu_set_t *(size_t)' extern
| |-ParmVarDecl 0x5559a7191790 <col:37, col:44> col:44 __count 'size_t':'unsigned long'
| `-NoThrowAttr 0x5559a71919a8 <col:69>
|-FunctionDecl 0x5559a7191b20 <line:109:1, col:87> col:13 __sched_cpufree 'void (cpu_set_t *)' extern
| |-ParmVarDecl 0x5559a7191a10 <col:30, col:41> col:41 __set 'cpu_set_t *'
| `-NoThrowAttr 0x5559a7191bc8 <col:64>
|-FunctionDecl 0x5559a7191e88 <line:112:1, line:113:45> line:112:12 sched_setparam 'int (__pid_t, const struct sched_param *)' extern
| |-ParmVarDecl 0x5559a7191c30 <col:28, col:36> col:36 __pid '__pid_t':'int'
| |-ParmVarDecl 0x5559a7191d68 <col:43, col:69> col:69 __param 'const struct sched_param *'
| `-NoThrowAttr 0x5559a7191f38 <line:113:22>
|-FunctionDecl 0x5559a71921b8 <line:114:1, col:111> col:12 sched_getparam 'int (__pid_t, struct sched_param *)' extern
| |-ParmVarDecl 0x5559a7191fa0 <col:28, col:36> col:36 __pid '__pid_t':'int'
| |-ParmVarDecl 0x5559a7192098 <col:43, col:63> col:63 __param 'struct sched_param *'
| `-NoThrowAttr 0x5559a7192268 <col:88>
|-FunctionDecl 0x5559a7192588 <line:115:1, line:116:85> line:115:12 sched_setscheduler 'int (__pid_t, int, const struct sched_param *)' extern
| |-ParmVarDecl 0x5559a71922d0 <col:32, col:40> col:40 __pid '__pid_t':'int'
| |-ParmVarDecl 0x5559a71923b0 <col:47, col:51> col:51 __policy 'int'
| |-ParmVarDecl 0x5559a7192440 <line:116:11, col:37> col:37 __param 'const struct sched_param *'
| `-NoThrowAttr 0x5559a7192640 <col:62>
|-FunctionDecl 0x5559a71927b8 <line:117:1, col:86> col:12 sched_getscheduler 'int (__pid_t)' extern
| |-ParmVarDecl 0x5559a71926a8 <col:32, col:40> col:40 __pid '__pid_t':'int'
| `-NoThrowAttr 0x5559a7192860 <col:63>
|-FunctionDecl 0x5559a7192988 <line:118:1, col:70> col:12 sched_yield 'int (void)' extern
| `-NoThrowAttr 0x5559a7192a28 <col:47>
|-FunctionDecl 0x5559a7192b30 <line:119:1, col:92> col:12 sched_get_priority_max 'int (int)' extern
| |-ParmVarDecl 0x5559a7192a98 <col:36, col:40> col:40 __algorithm 'int'
| `-NoThrowAttr 0x5559a7192bd8 <col:69>
|-FunctionDecl 0x5559a7192ce0 <line:120:1, col:92> col:12 sched_get_priority_min 'int (int)' extern
| |-ParmVarDecl 0x5559a7192c48 <col:36, col:40> col:40 __algorithm 'int'
| `-NoThrowAttr 0x5559a7192d88 <col:69>
|-FunctionDecl 0x5559a7193048 <line:121:1, col:111> col:12 sched_rr_get_interval 'int (__pid_t, struct timespec *)' extern
| |-ParmVarDecl 0x5559a7192df0 <col:35, col:43> col:43 __pid '__pid_t':'int'
| |-ParmVarDecl 0x5559a7192f28 <col:50, col:67> col:67 __t 'struct timespec *'
| `-NoThrowAttr 0x5559a71930f8 <col:88>
|-TypedefDecl 0x5559a7193188 <line:125:1, col:19> col:19 referenced clock_t '__clock_t':'long'
| `-TypedefType 0x5559a7193150 '__clock_t' sugar
|   |-Typedef 0x5559a718d548 '__clock_t'
|   `-BuiltinType 0x5559a7125f30 'long'
|-TypedefDecl 0x5559a7193218 <line:128:1, col:21> col:21 referenced clockid_t '__clockid_t':'int'
| `-TypedefType 0x5559a71931e0 '__clockid_t' sugar
|   |-Typedef 0x5559a718d938 '__clockid_t'
|   `-BuiltinType 0x5559a7125f10 'int'
|-TypedefDecl 0x5559a71932a8 <line:129:1, col:19> col:19 referenced timer_t '__timer_t':'void *'
| `-TypedefType 0x5559a7193270 '__timer_t' sugar
|   |-Typedef 0x5559a718d9a8 '__timer_t'
|   `-PointerType 0x5559a7126630 'void *'
|     `-BuiltinType 0x5559a7125e70 'void'
|-RecordDecl 0x5559a7193300 <line:131:1, line:144:1> line:131:8 struct tm definition
| |-FieldDecl 0x5559a71933d8 <line:133:3, col:7> col:7 tm_sec 'int'
| |-FieldDecl 0x5559a7193440 <line:134:3, col:7> col:7 tm_min 'int'
| |-FieldDecl 0x5559a71934a8 <line:135:3, col:7> col:7 tm_hour 'int'
| |-FieldDecl 0x5559a7193510 <line:136:3, col:7> col:7 tm_mday 'int'
| |-FieldDecl 0x5559a7193578 <line:137:3, col:7> col:7 tm_mon 'int'
| |-FieldDecl 0x5559a71935e0 <line:138:3, col:7> col:7 tm_year 'int'
| |-FieldDecl 0x5559a7193648 <line:139:3, col:7> col:7 tm_wday 'int'
| |-FieldDecl 0x5559a71936b0 <line:140:3, col:7> col:7 tm_yday 'int'
| |-FieldDecl 0x5559a7193718 <line:141:3, col:7> col:7 tm_isdst 'int'
| |-FieldDecl 0x5559a7193780 <line:142:3, col:12> col:12 tm_gmtoff 'long'
| `-FieldDecl 0x5559a71937e8 <line:143:3, col:15> col:15 tm_zone 'const char *'
|-RecordDecl 0x5559a7193838 <line:147:1, line:151:3> line:147:8 struct itimerspec definition
| |-FieldDecl 0x5559a7193908 <line:149:5, col:21> col:21 it_interval 'struct timespec':'struct timespec'
| `-FieldDecl 0x5559a7193978 <line:150:5, col:21> col:21 it_value 'struct timespec':'struct timespec'
|-RecordDecl 0x5559a7193a20 <line:152:1, col:8> col:8 struct sigevent
|-FunctionDecl 0x5559a7193bf0 <line:154:1, col:68> col:16 clock 'clock_t (void)' extern
| `-NoThrowAttr 0x5559a7193c90 <col:45>
|-FunctionDecl 0x5559a7193e70 <line:155:1, col:77> col:15 time 'time_t (time_t *)' extern
| |-ParmVarDecl 0x5559a7193d60 <col:21, col:29> col:29 __timer 'time_t *'
| `-NoThrowAttr 0x5559a7193f18 <col:54>
|-FunctionDecl 0x5559a7194118 <line:156:1, line:157:73> line:156:15 difftime 'double (time_t, time_t)' extern
| |-ParmVarDecl 0x5559a7193f80 <col:25, col:32> col:32 __time1 'time_t':'long'
| |-ParmVarDecl 0x5559a7193ff8 <col:41, col:48> col:48 __time0 'time_t':'long'
| |-NoThrowAttr 0x5559a71941c8 <line:157:22>
| `-ConstAttr 0x5559a7194220 <col:63>
|-FunctionDecl 0x5559a7195050 <line:158:1, col:79> col:15 mktime 'time_t (struct tm *)' extern
| |-ParmVarDecl 0x5559a7194318 <col:23, col:34> col:34 __tp 'struct tm *'
| `-NoThrowAttr 0x5559a71950f8 <col:56>
|-FunctionDecl 0x5559a71954a0 <line:159:1, line:161:77> line:159:15 strftime 'size_t (char *restrict, size_t, const char *restrict, const struct tm *restrict)' extern
| |-ParmVarDecl 0x5559a7195168 <col:25, col:42> col:42 __s 'char *restrict'
| |-ParmVarDecl 0x5559a71951e0 <col:47, col:54> col:54 __maxsize 'size_t':'unsigned long'
| |-ParmVarDecl 0x5559a7195260 <line:160:4, col:27> col:27 __format 'const char *restrict'
| |-ParmVarDecl 0x5559a7195358 <line:161:4, col:32> col:32 __tp 'const struct tm *restrict'
| `-NoThrowAttr 0x5559a7195560 <col:54>
|-RecordDecl 0x5559a71955b8 <line:163:9, line:170:1> line:163:16 struct __locale_struct definition
| |-RecordDecl 0x5559a7195668 parent 0x5559a7125e18 <line:165:3, col:10> col:10 struct __locale_data
| |-FieldDecl 0x5559a71958c8 <col:3, col:37> col:25 __locales 'struct __locale_data *[13]'
| |-FieldDecl 0x5559a7195968 <line:166:3, col:29> col:29 __ctype_b 'const unsigned short *'
| |-FieldDecl 0x5559a71959d0 <line:167:3, col:14> col:14 __ctype_tolower 'const int *'
| |-FieldDecl 0x5559a7195a38 <line:168:3, col:14> col:14 __ctype_toupper 'const int *'
| `-FieldDecl 0x5559a7195b28 <line:169:3, col:25> col:15 __names 'const char *[13]'
|-TypedefDecl 0x5559a7195c48 <line:163:1, line:170:4> col:4 referenced __locale_t 'struct __locale_struct *'
| `-PointerType 0x5559a7195bf0 'struct __locale_struct *'
|   `-ElaboratedType 0x5559a7195b80 'struct __locale_struct' sugar
|     `-RecordType 0x5559a7195640 'struct __locale_struct'
|       `-Record 0x5559a71955b8 '__locale_struct'
|-TypedefDecl 0x5559a7195cf8 <line:171:1, col:20> col:20 locale_t '__locale_t':'struct __locale_struct *'
| `-TypedefType 0x5559a7195cc0 '__locale_t' sugar
|   |-Typedef 0x5559a7195c48 '__locale_t'
|   `-PointerType 0x5559a7195bf0 'struct __locale_struct *'
|     `-ElaboratedType 0x5559a7195b80 'struct __locale_struct' sugar
|       `-RecordType 0x5559a7195640 'struct __locale_struct'
|         `-Record 0x5559a71955b8 '__locale_struct'
|-FunctionDecl 0x5559a7197110 <line:172:1, line:175:63> line:172:15 strftime_l 'size_t (char *restrict, size_t, const char *restrict, const struct tm *restrict, __locale_t)' extern
| |-ParmVarDecl 0x5559a7195d68 <col:27, col:44> col:44 __s 'char *restrict'
| |-ParmVarDecl 0x5559a7195de0 <col:49, col:56> col:56 __maxsize 'size_t':'unsigned long'
| |-ParmVarDecl 0x5559a7195e60 <line:173:6, col:29> col:29 __format 'const char *restrict'
| |-ParmVarDecl 0x5559a7195ef0 <line:174:6, col:34> col:34 __tp 'const struct tm *restrict'
| |-ParmVarDecl 0x5559a7195f68 <line:175:6, col:17> col:17 __loc '__locale_t':'struct __locale_struct *'
| `-NoThrowAttr 0x5559a71971d8 <col:40>
|-FunctionDecl 0x5559a71973c8 <line:177:1, col:89> col:19 gmtime 'struct tm *(const time_t *)' extern
| |-ParmVarDecl 0x5559a71972a0 <col:27, col:41> col:41 __timer 'const time_t *'
| `-NoThrowAttr 0x5559a7197470 <col:66>
|-FunctionDecl 0x5559a7197580 <line:178:1, col:92> col:19 localtime 'struct tm *(const time_t *)' extern
| |-ParmVarDecl 0x5559a71974d8 <col:30, col:44> col:44 __timer 'const time_t *'
| `-NoThrowAttr 0x5559a7197628 <col:69>
|-FunctionDecl 0x5559a7197858 <line:180:1, line:181:75> line:180:19 gmtime_r 'struct tm *(const time_t *restrict, struct tm *restrict)' extern
| |-ParmVarDecl 0x5559a7197690 <col:29, col:54> col:54 __timer 'const time_t *restrict'
| |-ParmVarDecl 0x5559a7197720 <line:181:8, col:30> col:30 __tp 'struct tm *restrict'
| `-NoThrowAttr 0x5559a7197908 <col:52>
|-FunctionDecl 0x5559a7197ab0 <line:182:1, line:183:78> line:182:19 localtime_r 'struct tm *(const time_t *restrict, struct tm *restrict)' extern
| |-ParmVarDecl 0x5559a7197970 <col:32, col:57> col:57 __timer 'const time_t *restrict'
| |-ParmVarDecl 0x5559a7197a00 <line:183:11, col:33> col:33 __tp 'struct tm *restrict'
| `-NoThrowAttr 0x5559a7197b60 <col:55>
|-FunctionDecl 0x5559a7197cf8 <line:185:1, col:85> col:14 asctime 'char *(const struct tm *)' extern
| |-ParmVarDecl 0x5559a7197be0 <col:23, col:40> col:40 __tp 'const struct tm *'
| `-NoThrowAttr 0x5559a7197da0 <col:62>
|-FunctionDecl 0x5559a7197f18 <line:186:1, col:83> col:14 ctime 'char *(const time_t *)' extern
| |-ParmVarDecl 0x5559a7197e08 <col:21, col:35> col:35 __timer 'const time_t *'
| `-NoThrowAttr 0x5559a7197fc0 <col:60>
|-FunctionDecl 0x5559a71982b8 <line:188:1, line:189:67> line:188:14 asctime_r 'char *(const struct tm *restrict, char *restrict)' extern
| |-ParmVarDecl 0x5559a7198118 <col:25, col:53> col:53 __tp 'const struct tm *restrict'
| |-ParmVarDecl 0x5559a7198198 <line:189:4, col:21> col:21 __buf 'char *restrict'
| `-NoThrowAttr 0x5559a7198368 <col:44>
|-FunctionDecl 0x5559a7198578 <line:190:1, line:191:72> line:190:14 ctime_r 'char *(const time_t *restrict, char *restrict)' extern
| |-ParmVarDecl 0x5559a71983d0 <col:23, col:48> col:48 __timer 'const time_t *restrict'
| |-ParmVarDecl 0x5559a7198450 <line:191:9, col:26> col:26 __buf 'char *restrict'
| `-NoThrowAttr 0x5559a7198628 <col:49>
|-VarDecl 0x5559a7198728 <line:192:1, col:24> col:14 __tzname 'char *[2]' extern
|-VarDecl 0x5559a71987a8 <line:193:1, col:12> col:12 __daylight 'int' extern
|-VarDecl 0x5559a7198828 <line:194:1, col:17> col:17 __timezone 'long' extern
|-VarDecl 0x5559a71988f0 <line:195:1, col:22> col:14 tzname 'char *[2]' extern
|-FunctionDecl 0x5559a7198a20 <line:196:1, col:65> col:13 tzset 'void (void)' extern
| `-NoThrowAttr 0x5559a7198ac0 <col:42>
|-VarDecl 0x5559a7198b30 <line:197:1, col:12> col:12 daylight 'int' extern
|-VarDecl 0x5559a7198bb0 <line:198:1, col:17> col:17 timezone 'long' extern
|-FunctionDecl 0x5559a7198d38 <line:199:1, col:80> col:12 stime 'int (const time_t *)' extern
| |-ParmVarDecl 0x5559a7198c28 <col:19, col:33> col:33 __when 'const time_t *'
| `-NoThrowAttr 0x5559a7198de0 <col:57>
|-FunctionDecl 0x5559a7198ef0 <line:200:1, col:79> col:15 timegm 'time_t (struct tm *)' extern
| |-ParmVarDecl 0x5559a7198e60 <col:23, col:34> col:34 __tp 'struct tm *'
| `-NoThrowAttr 0x5559a7198f98 <col:56>
|-FunctionDecl 0x5559a71990d0 <line:201:1, col:82> col:15 timelocal 'time_t (struct tm *)' extern
| |-ParmVarDecl 0x5559a7199018 <col:26, col:37> col:37 __tp 'struct tm *'
| `-NoThrowAttr 0x5559a7199178 <col:59>
|-FunctionDecl 0x5559a7199280 <line:202:1, col:99> col:12 dysize 'int (int)' extern
| |-ParmVarDecl 0x5559a71991e8 <col:20, col:24> col:24 __year 'int'
| |-NoThrowAttr 0x5559a7199328 <col:48>
| `-ConstAttr 0x5559a7199380 <col:89>
|-FunctionDecl 0x5559a71995e8 <line:203:1, line:204:37> line:203:12 nanosleep 'int (const struct timespec *, struct timespec *)' extern
| |-ParmVarDecl 0x5559a7199438 <col:23, col:46> col:46 __requested_time 'const struct timespec *'
| `-ParmVarDecl 0x5559a71994c8 <line:204:9, col:26> col:26 __remaining 'struct timespec *'
|-FunctionDecl 0x5559a7199848 <line:205:1, col:111> col:12 clock_getres 'int (clockid_t, struct timespec *)' extern
| |-ParmVarDecl 0x5559a71996d8 <col:26, col:36> col:36 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x5559a7199768 <col:48, col:65> col:65 __res 'struct timespec *'
| `-NoThrowAttr 0x5559a71998f8 <col:88>
|-FunctionDecl 0x5559a7199a90 <line:206:1, col:111> col:12 clock_gettime 'int (clockid_t, struct timespec *)' extern
| |-ParmVarDecl 0x5559a7199960 <col:27, col:37> col:37 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x5559a71999f0 <col:49, col:66> col:66 __tp 'struct timespec *'
| `-NoThrowAttr 0x5559a7199b40 <col:88>
|-FunctionDecl 0x5559a7199d58 <line:207:1, line:208:45> line:207:12 clock_settime 'int (clockid_t, const struct timespec *)' extern
| |-ParmVarDecl 0x5559a7199ba8 <col:27, col:37> col:37 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x5559a7199c38 <col:49, col:72> col:72 __tp 'const struct timespec *'
| `-NoThrowAttr 0x5559a7199e08 <line:208:22>
|-FunctionDecl 0x5559a719a178 <line:209:1, line:211:30> line:209:12 clock_nanosleep 'int (clockid_t, int, const struct timespec *, struct timespec *)' extern
| |-ParmVarDecl 0x5559a7199e70 <col:29, col:39> col:39 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x5559a7199ef0 <col:51, col:55> col:55 __flags 'int'
| |-ParmVarDecl 0x5559a7199f80 <line:210:8, col:31> col:31 __req 'const struct timespec *'
| `-ParmVarDecl 0x5559a719a010 <line:211:8, col:25> col:25 __rem 'struct timespec *'
|-FunctionDecl 0x5559a719a478 <line:212:1, col:108> col:12 clock_getcpuclockid 'int (pid_t, clockid_t *)' extern
| |-ParmVarDecl 0x5559a719a278 <col:33, col:39> col:39 __pid 'pid_t':'int'
| |-ParmVarDecl 0x5559a719a350 <col:46, col:57> col:57 __clock_id 'clockid_t *'
| `-NoThrowAttr 0x5559a719a528 <col:85>
|-FunctionDecl 0x5559a719a918 <line:213:1, line:215:75> line:213:12 timer_create 'int (clockid_t, struct sigevent *restrict, timer_t *restrict)' extern
| |-ParmVarDecl 0x5559a719a590 <col:26, col:36> col:36 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x5559a719a6c8 <line:214:5, col:33> col:33 __evp 'struct sigevent *restrict'
| |-ParmVarDecl 0x5559a719a7d0 <line:215:5, col:25> col:25 __timerid 'timer_t *restrict'
| `-NoThrowAttr 0x5559a719a9d0 <col:52>
|-FunctionDecl 0x5559a719ab48 <line:216:1, col:84> col:12 timer_delete 'int (timer_t)' extern
| |-ParmVarDecl 0x5559a719aa38 <col:26, col:34> col:34 __timerid 'timer_t':'void *'
| `-NoThrowAttr 0x5559a719abf0 <col:61>
|-FunctionDecl 0x5559a719b0f0 <line:217:1, line:219:85> line:217:12 timer_settime 'int (timer_t, int, const struct itimerspec *restrict, struct itimerspec *restrict)' extern
| |-ParmVarDecl 0x5559a719ac58 <col:27, col:35> col:35 __timerid 'timer_t':'void *'
| |-ParmVarDecl 0x5559a719acd8 <col:46, col:50> col:50 __flags 'int'
| |-ParmVarDecl 0x5559a719ae08 <line:218:6, col:42> col:42 __value 'const struct itimerspec *restrict'
| |-ParmVarDecl 0x5559a719aef8 <line:219:6, col:36> col:36 __ovalue 'struct itimerspec *restrict'
| `-NoThrowAttr 0x5559a719b1b0 <col:62>
|-FunctionDecl 0x5559a719b3c8 <line:220:1, line:221:45> line:220:12 timer_gettime 'int (timer_t, struct itimerspec *)' extern
| |-ParmVarDecl 0x5559a719b218 <col:27, col:35> col:35 __timerid 'timer_t':'void *'
| |-ParmVarDecl 0x5559a719b2a8 <col:46, col:65> col:65 __value 'struct itimerspec *'
| `-NoThrowAttr 0x5559a719b478 <line:221:22>
|-FunctionDecl 0x5559a719b578 <line:222:1, col:88> col:12 timer_getoverrun 'int (timer_t)' extern
| |-ParmVarDecl 0x5559a719b4e0 <col:30, col:38> col:38 __timerid 'timer_t':'void *'
| `-NoThrowAttr 0x5559a719b620 <col:65>
|-TypedefDecl 0x5559a719b690 <line:224:1, col:27> col:27 referenced pthread_t 'unsigned long'
| `-BuiltinType 0x5559a7125fd0 'unsigned long'
|-RecordDecl 0x5559a719b6e8 <line:225:1, line:229:1> line:225:7 union pthread_attr_t definition
| |-FieldDecl 0x5559a719b830 <line:227:3, col:17> col:8 __size 'char [56]'
| `-FieldDecl 0x5559a719b898 <line:228:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x5559a719b948 <line:230:1, col:30> col:30 referenced pthread_attr_t 'union pthread_attr_t':'union pthread_attr_t'
| `-ElaboratedType 0x5559a719b8f0 'union pthread_attr_t' sugar
|   `-RecordType 0x5559a719b770 'union pthread_attr_t'
|     `-Record 0x5559a719b6e8 'pthread_attr_t'
|-RecordDecl 0x5559a719b9a0 <line:231:9, line:235:1> line:231:16 struct __pthread_internal_list definition
| |-FieldDecl 0x5559a719bb18 <line:233:3, col:35> col:35 __prev 'struct __pthread_internal_list *'
| `-FieldDecl 0x5559a719bb90 <line:234:3, col:35> col:35 __next 'struct __pthread_internal_list *'
|-TypedefDecl 0x5559a719bc40 <line:231:1, line:235:3> col:3 referenced __pthread_list_t 'struct __pthread_internal_list':'struct __pthread_internal_list'
| `-ElaboratedType 0x5559a719bbe0 'struct __pthread_internal_list' sugar
|   `-RecordType 0x5559a719ba20 'struct __pthread_internal_list'
|     `-Record 0x5559a719b9a0 '__pthread_internal_list'
|-RecordDecl 0x5559a719bcb0 <line:236:9, line:250:1> line:236:9 union definition
| |-RecordDecl 0x5559a719bd58 parent 0x5559a7125e18 <line:238:3, line:247:3> line:238:10 struct __pthread_mutex_s definition
| | |-FieldDecl 0x5559a719be30 <line:240:5, col:9> col:9 __lock 'int'
| | |-FieldDecl 0x5559a719be98 <line:241:5, col:18> col:18 __count 'unsigned int'
| | |-FieldDecl 0x5559a719bf00 <line:242:5, col:9> col:9 __owner 'int'
| | |-FieldDecl 0x5559a719bf68 <line:243:5, col:18> col:18 __nusers 'unsigned int'
| | |-FieldDecl 0x5559a719bfd0 <line:244:5, col:9> col:9 __kind 'int'
| | |-FieldDecl 0x5559a719c038 <line:245:5, col:9> col:9 __spins 'int'
| | `-FieldDecl 0x5559a71a0110 <line:246:5, col:22> col:22 __list '__pthread_list_t':'struct __pthread_internal_list'
| |-FieldDecl 0x5559a71a01c0 <line:238:3, line:247:5> col:5 __data 'struct __pthread_mutex_s':'struct __pthread_mutex_s'
| |-FieldDecl 0x5559a71a02b0 <line:248:3, col:17> col:8 __size 'char [40]'
| `-FieldDecl 0x5559a71a0318 <line:249:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x5559a71a04a0 <line:236:1, line:250:3> col:3 referenced pthread_mutex_t 'union pthread_mutex_t':'pthread_mutex_t'
| `-ElaboratedType 0x5559a71a0440 'union pthread_mutex_t' sugar
|   `-RecordType 0x5559a719bd30 'pthread_mutex_t'
|     `-Record 0x5559a719bcb0 ''
|-RecordDecl 0x5559a71a0510 <line:251:9, line:255:1> line:251:9 union definition
| |-FieldDecl 0x5559a71a0650 <line:253:3, col:16> col:8 __size 'char [4]'
| `-FieldDecl 0x5559a71a06b8 <line:254:3, col:7> col:7 __align 'int'
|-TypedefDecl 0x5559a71a0770 <line:251:1, line:255:3> col:3 referenced pthread_mutexattr_t 'union pthread_mutexattr_t':'pthread_mutexattr_t'
| `-ElaboratedType 0x5559a71a0710 'union pthread_mutexattr_t' sugar
|   `-RecordType 0x5559a71a0590 'pthread_mutexattr_t'
|     `-Record 0x5559a71a0510 ''
|-RecordDecl 0x5559a71a07e0 <line:256:9, line:271:1> line:256:9 union definition
| |-RecordDecl 0x5559a71a0888 <line:258:3, line:268:3> line:258:3 struct definition
| | |-FieldDecl 0x5559a71a0950 <line:260:5, col:9> col:9 __lock 'int'
| | |-FieldDecl 0x5559a71a09b8 <line:261:5, col:18> col:18 __futex 'unsigned int'
| | |-FieldDecl 0x5559a71a0a20 <line:262:19, col:42> col:42 __total_seq 'unsigned long long'
| | |-FieldDecl 0x5559a71a0a88 <line:263:19, col:42> col:42 __wakeup_seq 'unsigned long long'
| | |-FieldDecl 0x5559a71a0af0 <line:264:19, col:42> col:42 __woken_seq 'unsigned long long'
| | |-FieldDecl 0x5559a71a0b58 <line:265:5, col:11> col:11 __mutex 'void *'
| | |-FieldDecl 0x5559a71a0bc0 <line:266:5, col:18> col:18 __nwaiters 'unsigned int'
| | `-FieldDecl 0x5559a71a0c28 <line:267:5, col:18> col:18 __broadcast_seq 'unsigned int'
| |-FieldDecl 0x5559a71a0ce0 <line:258:3, line:268:5> col:5 __data 'struct (anonymous struct at ./split_4/mix029_power.opt_false-unreach-call.i:258:3)':'struct pthread_cond_t::(anonymous at ./split_4/mix029_power.opt_false-unreach-call.i:258:3)'
| |-FieldDecl 0x5559a71a0dd0 <line:269:3, col:17> col:8 __size 'char [48]'
| `-FieldDecl 0x5559a71a0e38 <line:270:17, col:31> col:31 __align 'long long'
|-TypedefDecl 0x5559a71a0f70 <line:256:1, line:271:3> col:3 referenced pthread_cond_t 'union pthread_cond_t':'pthread_cond_t'
| `-ElaboratedType 0x5559a71a0f10 'union pthread_cond_t' sugar
|   `-RecordType 0x5559a71a0860 'pthread_cond_t'
|     `-Record 0x5559a71a07e0 ''
|-RecordDecl 0x5559a71a0fe0 <line:272:9, line:276:1> line:272:9 union definition
| |-FieldDecl 0x5559a71a2130 <line:274:3, col:16> col:8 __size 'char [4]'
| `-FieldDecl 0x5559a71a2198 <line:275:3, col:7> col:7 __align 'int'
|-TypedefDecl 0x5559a71a2250 <line:272:1, line:276:3> col:3 referenced pthread_condattr_t 'union pthread_condattr_t':'pthread_condattr_t'
| `-ElaboratedType 0x5559a71a21f0 'union pthread_condattr_t' sugar
|   `-RecordType 0x5559a71a1060 'pthread_condattr_t'
|     `-Record 0x5559a71a0fe0 ''
|-TypedefDecl 0x5559a71a22d8 <line:277:1, col:22> col:22 referenced pthread_key_t 'unsigned int'
| `-BuiltinType 0x5559a7125fb0 'unsigned int'
|-TypedefDecl 0x5559a71a2348 <line:278:1, col:13> col:13 referenced pthread_once_t 'int'
| `-BuiltinType 0x5559a7125f10 'int'
|-RecordDecl 0x5559a71a23a0 <line:279:9, line:297:1> line:279:9 union definition
| |-RecordDecl 0x5559a71a2448 <line:281:3, line:294:3> line:281:3 struct definition
| | |-FieldDecl 0x5559a71a2510 <line:283:5, col:9> col:9 __lock 'int'
| | |-FieldDecl 0x5559a71a2578 <line:284:5, col:18> col:18 __nr_readers 'unsigned int'
| | |-FieldDecl 0x5559a71a25e0 <line:285:5, col:18> col:18 __readers_wakeup 'unsigned int'
| | |-FieldDecl 0x5559a71a2648 <line:286:5, col:18> col:18 __writer_wakeup 'unsigned int'
| | |-FieldDecl 0x5559a71a26b0 <line:287:5, col:18> col:18 __nr_readers_queued 'unsigned int'
| | |-FieldDecl 0x5559a71a2718 <line:288:5, col:18> col:18 __nr_writers_queued 'unsigned int'
| | |-FieldDecl 0x5559a71a2780 <line:289:5, col:9> col:9 __writer 'int'
| | |-FieldDecl 0x5559a71a27e8 <line:290:5, col:9> col:9 __shared 'int'
| | |-FieldDecl 0x5559a71a2850 <line:291:5, col:23> col:23 __pad1 'unsigned long'
| | |-FieldDecl 0x5559a71a28b8 <line:292:5, col:23> col:23 __pad2 'unsigned long'
| | `-FieldDecl 0x5559a71a2920 <line:293:5, col:18> col:18 __flags 'unsigned int'
| |-FieldDecl 0x5559a71a29d0 <line:281:3, line:294:5> col:5 __data 'struct (anonymous struct at ./split_4/mix029_power.opt_false-unreach-call.i:281:3)':'struct pthread_rwlock_t::(anonymous at ./split_4/mix029_power.opt_false-unreach-call.i:281:3)'
| |-FieldDecl 0x5559a71a2a78 <line:295:3, col:17> col:8 __size 'char [56]'
| `-FieldDecl 0x5559a71a2ae0 <line:296:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x5559a71a2c30 <line:279:1, line:297:3> col:3 referenced pthread_rwlock_t 'union pthread_rwlock_t':'pthread_rwlock_t'
| `-ElaboratedType 0x5559a71a2bd0 'union pthread_rwlock_t' sugar
|   `-RecordType 0x5559a71a2420 'pthread_rwlock_t'
|     `-Record 0x5559a71a23a0 ''
|-RecordDecl 0x5559a71a2ca0 <line:298:9, line:302:1> line:298:9 union definition
| |-FieldDecl 0x5559a71a2de0 <line:300:3, col:16> col:8 __size 'char [8]'
| `-FieldDecl 0x5559a71a2e48 <line:301:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x5559a71a2f00 <line:298:1, line:302:3> col:3 referenced pthread_rwlockattr_t 'union pthread_rwlockattr_t':'pthread_rwlockattr_t'
| `-ElaboratedType 0x5559a71a2ea0 'union pthread_rwlockattr_t' sugar
|   `-RecordType 0x5559a71a2d20 'pthread_rwlockattr_t'
|     `-Record 0x5559a71a2ca0 ''
|-TypedefDecl 0x5559a71a2f88 <line:303:1, col:22> col:22 referenced pthread_spinlock_t 'volatile int'
| `-QualType 0x5559a7125f14 'volatile int' volatile
|   `-BuiltinType 0x5559a7125f10 'int'
|-RecordDecl 0x5559a71a2fe0 <line:304:9, line:308:1> line:304:9 union definition
| |-FieldDecl 0x5559a71a4140 <line:306:3, col:17> col:8 __size 'char [32]'
| `-FieldDecl 0x5559a71a41a8 <line:307:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x5559a71a4260 <line:304:1, line:308:3> col:3 referenced pthread_barrier_t 'union pthread_barrier_t':'pthread_barrier_t'
| `-ElaboratedType 0x5559a71a4200 'union pthread_barrier_t' sugar
|   `-RecordType 0x5559a71a3060 'pthread_barrier_t'
|     `-Record 0x5559a71a2fe0 ''
|-RecordDecl 0x5559a71a42d0 <line:309:9, line:313:1> line:309:9 union definition
| |-FieldDecl 0x5559a71a43d0 <line:311:3, col:16> col:8 __size 'char [4]'
| `-FieldDecl 0x5559a71a4438 <line:312:3, col:7> col:7 __align 'int'
|-TypedefDecl 0x5559a71a44f0 <line:309:1, line:313:3> col:3 referenced pthread_barrierattr_t 'union pthread_barrierattr_t':'pthread_barrierattr_t'
| `-ElaboratedType 0x5559a71a4490 'union pthread_barrierattr_t' sugar
|   `-RecordType 0x5559a71a4350 'pthread_barrierattr_t'
|     `-Record 0x5559a71a42d0 ''
|-TypedefDecl 0x5559a71a4608 <line:314:1, col:29> col:18 referenced __jmp_buf 'long [8]'
| `-ConstantArrayType 0x5559a71a45a0 'long [8]' 8 
|   `-BuiltinType 0x5559a7125f30 'long'
|-EnumDecl 0x5559a71a4660 <line:315:1, line:319:1> line:315:1
| |-EnumConstantDecl 0x5559a71a4728 <line:317:3> col:3 PTHREAD_CREATE_JOINABLE 'int'
| `-EnumConstantDecl 0x5559a71a4778 <line:318:3> col:3 PTHREAD_CREATE_DETACHED 'int'
|-EnumDecl 0x5559a71a47c8 <line:320:1, line:331:1> line:320:1
| |-EnumConstantDecl 0x5559a71a4898 <line:322:3> col:3 referenced PTHREAD_MUTEX_TIMED_NP 'int'
| |-EnumConstantDecl 0x5559a71a48e8 <line:323:3> col:3 referenced PTHREAD_MUTEX_RECURSIVE_NP 'int'
| |-EnumConstantDecl 0x5559a71a4938 <line:324:3> col:3 referenced PTHREAD_MUTEX_ERRORCHECK_NP 'int'
| |-EnumConstantDecl 0x5559a71a4988 <line:325:3> col:3 PTHREAD_MUTEX_ADAPTIVE_NP 'int'
| |-EnumConstantDecl 0x5559a71a4a10 <line:327:3, col:26> col:3 referenced PTHREAD_MUTEX_NORMAL 'int'
| | `-ConstantExpr 0x5559a71a49f8 <col:26> 'int'
| |   `-DeclRefExpr 0x5559a71a49d8 <col:26> 'int' EnumConstant 0x5559a71a4898 'PTHREAD_MUTEX_TIMED_NP' 'int'
| |-EnumConstantDecl 0x5559a71a4a98 <line:328:3, col:29> col:3 PTHREAD_MUTEX_RECURSIVE 'int'
| | `-ConstantExpr 0x5559a71a4a80 <col:29> 'int'
| |   `-DeclRefExpr 0x5559a71a4a60 <col:29> 'int' EnumConstant 0x5559a71a48e8 'PTHREAD_MUTEX_RECURSIVE_NP' 'int'
| |-EnumConstantDecl 0x5559a71a4b20 <line:329:3, col:30> col:3 PTHREAD_MUTEX_ERRORCHECK 'int'
| | `-ConstantExpr 0x5559a71a4b08 <col:30> 'int'
| |   `-DeclRefExpr 0x5559a71a4ae8 <col:30> 'int' EnumConstant 0x5559a71a4938 'PTHREAD_MUTEX_ERRORCHECK_NP' 'int'
| `-EnumConstantDecl 0x5559a71a4ba8 <line:330:3, col:27> col:3 PTHREAD_MUTEX_DEFAULT 'int'
|   `-ConstantExpr 0x5559a71a4b90 <col:27> 'int'
|     `-DeclRefExpr 0x5559a71a4b70 <col:27> 'int' EnumConstant 0x5559a71a4a10 'PTHREAD_MUTEX_NORMAL' 'int'
|-EnumDecl 0x5559a71a4bf8 <line:332:1, line:338:1> line:332:1
| |-EnumConstantDecl 0x5559a71a4cc8 <line:334:3> col:3 referenced PTHREAD_MUTEX_STALLED 'int'
| |-EnumConstantDecl 0x5559a71a4d50 <line:335:3, col:30> col:3 PTHREAD_MUTEX_STALLED_NP 'int'
| | `-ConstantExpr 0x5559a71a4d38 <col:30> 'int'
| |   `-DeclRefExpr 0x5559a71a4d18 <col:30> 'int' EnumConstant 0x5559a71a4cc8 'PTHREAD_MUTEX_STALLED' 'int'
| |-EnumConstantDecl 0x5559a71a4da0 <line:336:3> col:3 referenced PTHREAD_MUTEX_ROBUST 'int'
| `-EnumConstantDecl 0x5559a71a4e28 <line:337:3, col:29> col:3 PTHREAD_MUTEX_ROBUST_NP 'int'
|   `-ConstantExpr 0x5559a71a4e10 <col:29> 'int'
|     `-DeclRefExpr 0x5559a71a4df0 <col:29> 'int' EnumConstant 0x5559a71a4da0 'PTHREAD_MUTEX_ROBUST' 'int'
|-EnumDecl 0x5559a71a4e78 <line:339:1, line:344:1> line:339:1
| |-EnumConstantDecl 0x5559a71a4f48 <line:341:3> col:3 PTHREAD_PRIO_NONE 'int'
| |-EnumConstantDecl 0x5559a71a4f98 <line:342:3> col:3 PTHREAD_PRIO_INHERIT 'int'
| `-EnumConstantDecl 0x5559a71a4fe8 <line:343:3> col:3 PTHREAD_PRIO_PROTECT 'int'
|-EnumDecl 0x5559a71a5038 <line:345:1, line:351:1> line:345:1
| |-EnumConstantDecl 0x5559a71a5150 <line:347:3> col:3 referenced PTHREAD_RWLOCK_PREFER_READER_NP 'int'
| |-EnumConstantDecl 0x5559a71a51a0 <line:348:3> col:3 PTHREAD_RWLOCK_PREFER_WRITER_NP 'int'
| |-EnumConstantDecl 0x5559a71a51f0 <line:349:3> col:3 PTHREAD_RWLOCK_PREFER_WRITER_NONRECURSIVE_NP 'int'
| `-EnumConstantDecl 0x5559a71a5278 <line:350:3, col:31> col:3 PTHREAD_RWLOCK_DEFAULT_NP 'int'
|   `-ConstantExpr 0x5559a71a5260 <col:31> 'int'
|     `-DeclRefExpr 0x5559a71a5240 <col:31> 'int' EnumConstant 0x5559a71a5150 'PTHREAD_RWLOCK_PREFER_READER_NP' 'int'
|-EnumDecl 0x5559a71a52c8 <line:352:1, line:356:1> line:352:1
| |-EnumConstantDecl 0x5559a71a5398 <line:354:3> col:3 PTHREAD_INHERIT_SCHED 'int'
| `-EnumConstantDecl 0x5559a71a53e8 <line:355:3> col:3 PTHREAD_EXPLICIT_SCHED 'int'
|-EnumDecl 0x5559a71a5438 <line:357:1, line:361:1> line:357:1
| |-EnumConstantDecl 0x5559a71a5508 <line:359:3> col:3 PTHREAD_SCOPE_SYSTEM 'int'
| `-EnumConstantDecl 0x5559a71a5558 <line:360:3> col:3 PTHREAD_SCOPE_PROCESS 'int'
|-EnumDecl 0x5559a71a55a8 <line:362:1, line:366:1> line:362:1
| |-EnumConstantDecl 0x5559a71a5678 <line:364:3> col:3 PTHREAD_PROCESS_PRIVATE 'int'
| `-EnumConstantDecl 0x5559a71a56c8 <line:365:3> col:3 PTHREAD_PROCESS_SHARED 'int'
|-RecordDecl 0x5559a71a5718 <line:367:1, line:373:1> line:367:8 struct _pthread_cleanup_buffer definition
| |-FieldDecl 0x5559a71a5958 <line:369:3, col:28> col:10 __routine 'void (*)(void *)'
| |-FieldDecl 0x5559a71a59c0 <line:370:3, col:9> col:9 __arg 'void *'
| |-FieldDecl 0x5559a71a5a28 <line:371:3, col:7> col:7 __canceltype 'int'
| `-FieldDecl 0x5559a71a5b48 <line:372:3, col:35> col:35 __prev 'struct _pthread_cleanup_buffer *'
|-EnumDecl 0x5559a71a5b98 <line:374:1, line:378:1> line:374:1
| |-EnumConstantDecl 0x5559a71a5c68 <line:376:3> col:3 PTHREAD_CANCEL_ENABLE 'int'
| `-EnumConstantDecl 0x5559a71a5cb8 <line:377:3> col:3 PTHREAD_CANCEL_DISABLE 'int'
|-EnumDecl 0x5559a71a5d08 <line:379:1, line:383:1> line:379:1
| |-EnumConstantDecl 0x5559a71a5dd8 <line:381:3> col:3 PTHREAD_CANCEL_DEFERRED 'int'
| `-EnumConstantDecl 0x5559a71a5e28 <line:382:3> col:3 PTHREAD_CANCEL_ASYNCHRONOUS 'int'
|-FunctionDecl 0x5559a71a6488 <line:385:1, line:388:96> line:385:12 used pthread_create 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' extern
| |-ParmVarDecl 0x5559a71a5f20 <col:28, col:50> col:50 __newthread 'pthread_t *restrict'
| |-ParmVarDecl 0x5559a71a6030 <line:386:7, col:40> col:40 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x5559a71a6270 <line:387:7, col:39> col:15 __start_routine 'void *(*)(void *)'
| |-ParmVarDecl 0x5559a71a62f0 <line:388:7, col:24> col:24 __arg 'void *restrict'
| |-NoThrowAttr 0x5559a71a6548 <col:47>
| |-NonNullAttr 0x5559a71a65a0 <col:77, col:94> 1 3
| `-CallbackAttr 0x5559a71a65d8 <line:385:12> Implicit 2 3
|-FunctionDecl 0x5559a71a6700 <line:389:1, col:72> col:13 pthread_exit 'void (void *) __attribute__((noreturn))' extern
| `-ParmVarDecl 0x5559a71a6630 <col:27, col:33> col:33 __retval 'void *'
|-FunctionDecl 0x5559a71a6958 <line:390:1, col:64> col:12 pthread_join 'int (pthread_t, void **)' extern
| |-ParmVarDecl 0x5559a71a67b8 <col:26, col:36> col:36 __th 'pthread_t':'unsigned long'
| `-ParmVarDecl 0x5559a71a6838 <col:42, col:49> col:49 __thread_return 'void **'
|-FunctionDecl 0x5559a71a6b28 <line:391:1, col:83> col:12 pthread_detach 'int (pthread_t)' extern
| |-ParmVarDecl 0x5559a71a6a18 <col:28, col:38> col:38 __th 'pthread_t':'unsigned long'
| `-NoThrowAttr 0x5559a71a6bd0 <col:60>
|-FunctionDecl 0x5559a71a6d20 <line:392:1, col:105> col:18 pthread_self 'pthread_t (void)' extern
| |-NoThrowAttr 0x5559a71a6dc0 <col:54>
| `-ConstAttr 0x5559a71a6e18 <col:95>
|-FunctionDecl 0x5559a71a6fe8 <line:393:1, line:394:70> line:393:12 pthread_equal 'int (pthread_t, pthread_t)' extern
| |-ParmVarDecl 0x5559a71a6e50 <col:27, col:37> col:37 __thread1 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x5559a71a6ec8 <col:48, col:58> col:58 __thread2 'pthread_t':'unsigned long'
| |-NoThrowAttr 0x5559a71a7098 <line:394:19>
| `-ConstAttr 0x5559a71a70f0 <col:60>
|-FunctionDecl 0x5559a71a8b08 <line:395:1, col:128> col:12 pthread_attr_init 'int (pthread_attr_t *)' extern
| |-ParmVarDecl 0x5559a71a89d0 <col:31, col:47> col:47 __attr 'pthread_attr_t *'
| |-NoThrowAttr 0x5559a71a8bb0 <col:71>
| `-NonNullAttr 0x5559a71a8c08 <col:112, col:126> 1
|-FunctionDecl 0x5559a71a8d10 <line:396:1, line:397:79> line:396:12 pthread_attr_destroy 'int (pthread_attr_t *)' extern
| |-ParmVarDecl 0x5559a71a8c58 <col:34, col:50> col:50 __attr 'pthread_attr_t *'
| |-NoThrowAttr 0x5559a71a8db8 <line:397:22>
| `-NonNullAttr 0x5559a71a8e10 <col:63, col:77> 1
|-FunctionDecl 0x5559a71a9038 <line:398:1, line:400:82> line:398:12 pthread_attr_getdetachstate 'int (const pthread_attr_t *, int *)' extern
| |-ParmVarDecl 0x5559a71a8e58 <col:41, col:63> col:63 __attr 'const pthread_attr_t *'
| |-ParmVarDecl 0x5559a71a8ed8 <line:399:6, col:11> col:11 __detachstate 'int *'
| |-NoThrowAttr 0x5559a71a90e8 <line:400:22>
| `-NonNullAttr 0x5559a71a9140 <col:63, col:80> 1 2
|-FunctionDecl 0x5559a71a9348 <line:401:1, line:403:79> line:401:12 pthread_attr_setdetachstate 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x5559a71a9188 <col:41, col:57> col:57 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x5559a71a9208 <line:402:6, col:10> col:10 __detachstate 'int'
| |-NoThrowAttr 0x5559a71a93f8 <line:403:22>
| `-NonNullAttr 0x5559a71a9450 <col:63, col:77> 1
|-FunctionDecl 0x5559a71a96a8 <line:404:1, line:406:82> line:404:12 pthread_attr_getguardsize 'int (const pthread_attr_t *, size_t *)' extern
| |-ParmVarDecl 0x5559a71a9498 <col:39, col:61> col:61 __attr 'const pthread_attr_t *'
| |-ParmVarDecl 0x5559a71a9540 <line:405:11, col:19> col:19 __guardsize 'size_t *'
| |-NoThrowAttr 0x5559a71a9758 <line:406:22>
| `-NonNullAttr 0x5559a71a97b0 <col:63, col:80> 1 2
|-FunctionDecl 0x5559a71aa9e8 <line:407:1, line:409:79> line:407:12 pthread_attr_setguardsize 'int (pthread_attr_t *, size_t)' extern
| |-ParmVarDecl 0x5559a71a97f8 <col:39, col:55> col:55 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x5559a71a9870 <line:408:11, col:18> col:18 __guardsize 'size_t':'unsigned long'
| |-NoThrowAttr 0x5559a71aaa98 <line:409:22>
| `-NonNullAttr 0x5559a71aaaf0 <col:63, col:77> 1
|-FunctionDecl 0x5559a71aad28 <line:410:1, line:412:82> line:410:12 pthread_attr_getschedparam 'int (const pthread_attr_t *restrict, struct sched_param *restrict)' extern
| |-ParmVarDecl 0x5559a71aab38 <col:40, col:73> col:73 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x5559a71aabc8 <line:411:12, col:43> col:43 __param 'struct sched_param *restrict'
| |-NoThrowAttr 0x5559a71aadd8 <line:412:22>
| `-NonNullAttr 0x5559a71aae30 <col:63, col:80> 1 2
|-FunctionDecl 0x5559a71ab068 <line:413:1, line:415:97> line:413:12 pthread_attr_setschedparam 'int (pthread_attr_t *restrict, const struct sched_param *restrict)' extern
| |-ParmVarDecl 0x5559a71aae78 <col:40, col:67> col:67 __attr 'pthread_attr_t *restrict'
| |-ParmVarDecl 0x5559a71aaf08 <line:414:12, line:415:12> col:12 __param 'const struct sched_param *restrict'
| |-NoThrowAttr 0x5559a71ab118 <col:37>
| `-NonNullAttr 0x5559a71ab170 <col:78, col:95> 1 2
|-FunctionDecl 0x5559a71ab358 <line:416:1, line:418:82> line:416:12 pthread_attr_getschedpolicy 'int (const pthread_attr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x5559a71ab1b8 <col:41, line:417:6> col:6 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x5559a71ab238 <col:14, col:30> col:30 __policy 'int *restrict'
| |-NoThrowAttr 0x5559a71ab408 <line:418:22>
| `-NonNullAttr 0x5559a71ab460 <col:63, col:80> 1 2
|-FunctionDecl 0x5559a71ab5e8 <line:419:1, line:420:79> line:419:12 pthread_attr_setschedpolicy 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x5559a71ab4a8 <col:41, col:57> col:57 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x5559a71ab528 <col:65, col:69> col:69 __policy 'int'
| |-NoThrowAttr 0x5559a71ab698 <line:420:22>
| `-NonNullAttr 0x5559a71ab6f0 <col:63, col:77> 1
|-FunctionDecl 0x5559a71ab898 <line:421:1, line:423:82> line:421:12 pthread_attr_getinheritsched 'int (const pthread_attr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x5559a71ab738 <col:42, line:422:7> col:7 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x5559a71ab7b8 <col:15, col:31> col:31 __inherit 'int *restrict'
| |-NoThrowAttr 0x5559a71ab948 <line:423:22>
| `-NonNullAttr 0x5559a71ab9c0 <col:63, col:80> 1 2
|-FunctionDecl 0x5559a71abb48 <line:424:1, line:426:79> line:424:12 pthread_attr_setinheritsched 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x5559a71aba08 <col:42, col:58> col:58 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x5559a71aba88 <line:425:7, col:11> col:11 __inherit 'int'
| |-NoThrowAttr 0x5559a71abbf8 <line:426:22>
| `-NonNullAttr 0x5559a71abc50 <col:63, col:77> 1
|-FunctionDecl 0x5559a71abdf8 <line:427:1, line:429:82> line:427:12 pthread_attr_getscope 'int (const pthread_attr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x5559a71abc98 <col:35, col:68> col:68 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x5559a71abd18 <line:428:7, col:23> col:23 __scope 'int *restrict'
| |-NoThrowAttr 0x5559a71abea8 <line:429:22>
| `-NonNullAttr 0x5559a71abf00 <col:63, col:80> 1 2
|-FunctionDecl 0x5559a71ac088 <line:430:1, line:431:79> line:430:12 pthread_attr_setscope 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x5559a71abf48 <col:35, col:51> col:51 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x5559a71abfc8 <col:59, col:63> col:63 __scope 'int'
| |-NoThrowAttr 0x5559a71ac138 <line:431:22>
| `-NonNullAttr 0x5559a71ac190 <col:63, col:77> 1
|-FunctionDecl 0x5559a71ac3b8 <line:432:1, line:434:115> line:432:12 pthread_attr_getstackaddr 'int (const pthread_attr_t *restrict, void **restrict)' extern
| |-ParmVarDecl 0x5559a71ac1d8 <col:39, line:433:11> col:11 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x5559a71ac258 <col:19, col:37> col:37 __stackaddr 'void **restrict'
| |-NoThrowAttr 0x5559a71ac468 <line:434:22>
| |-NonNullAttr 0x5559a71ac4c0 <col:63, col:80> 1 2
| `-DeprecatedAttr 0x5559a71ac4f8 <col:100> "" ""
|-FunctionDecl 0x5559a71ac708 <line:435:1, line:437:112> line:435:12 pthread_attr_setstackaddr 'int (pthread_attr_t *, void *)' extern
| |-ParmVarDecl 0x5559a71ac548 <col:39, col:55> col:55 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x5559a71ac5c8 <line:436:11, col:17> col:17 __stackaddr 'void *'
| |-NoThrowAttr 0x5559a71ac7b8 <line:437:22>
| |-NonNullAttr 0x5559a71ac810 <col:63, col:77> 1
| `-DeprecatedAttr 0x5559a71ac848 <col:97> "" ""
|-FunctionDecl 0x5559a71aca48 <line:438:1, line:440:82> line:438:12 pthread_attr_getstacksize 'int (const pthread_attr_t *restrict, size_t *restrict)' extern
| |-ParmVarDecl 0x5559a71ac898 <col:39, line:439:11> col:11 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x5559a71ac910 <col:19, col:38> col:38 __stacksize 'size_t *restrict'
| |-NoThrowAttr 0x5559a71acaf8 <line:440:22>
| `-NonNullAttr 0x5559a71acb50 <col:63, col:80> 1 2
|-FunctionDecl 0x5559a71accd0 <line:441:1, line:443:79> line:441:12 pthread_attr_setstacksize 'int (pthread_attr_t *, size_t)' extern
| |-ParmVarDecl 0x5559a71acb98 <col:39, col:55> col:55 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x5559a71acc10 <line:442:11, col:18> col:18 __stacksize 'size_t':'unsigned long'
| |-NoThrowAttr 0x5559a71acd80 <line:443:22>
| `-NonNullAttr 0x5559a71acdd8 <col:63, col:77> 1
|-FunctionDecl 0x5559a71ad0c8 <line:444:1, line:447:85> line:444:12 pthread_attr_getstack 'int (const pthread_attr_t *restrict, void **restrict, size_t *restrict)' extern
| |-ParmVarDecl 0x5559a71ace28 <col:35, col:68> col:68 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x5559a71acea8 <line:445:7, col:25> col:25 __stackaddr 'void **restrict'
| |-ParmVarDecl 0x5559a71acf20 <line:446:7, col:26> col:26 __stacksize 'size_t *restrict'
| |-NoThrowAttr 0x5559a71ad180 <line:447:22>
| `-NonNullAttr 0x5559a71ad1d8 <col:63, col:83> 1 2 3
|-FunctionDecl 0x5559a71ad488 <line:448:1, line:449:100> line:448:12 pthread_attr_setstack 'int (pthread_attr_t *, void *, size_t)' extern
| |-ParmVarDecl 0x5559a71ad230 <col:35, col:51> col:51 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x5559a71ad2b0 <col:59, col:65> col:65 __stackaddr 'void *'
| |-ParmVarDecl 0x5559a71ad328 <line:449:7, col:14> col:14 __stacksize 'size_t':'unsigned long'
| |-NoThrowAttr 0x5559a71ad540 <col:43>
| `-NonNullAttr 0x5559a71ad598 <col:84, col:98> 1
|-FunctionDecl 0x5559a71ad858 <line:450:1, line:452:79> line:450:12 pthread_setschedparam 'int (pthread_t, int, const struct sched_param *)' extern
| |-ParmVarDecl 0x5559a71ad5e8 <col:35, col:45> col:45 __target_thread 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x5559a71ad668 <col:62, col:66> col:66 __policy 'int'
| |-ParmVarDecl 0x5559a71ad6f8 <line:451:7, col:33> col:33 __param 'const struct sched_param *'
| |-NoThrowAttr 0x5559a71ad910 <line:452:22>
| `-NonNullAttr 0x5559a71ad968 <col:63, col:77> 3
|-FunctionDecl 0x5559a71adc78 <line:453:1, line:456:82> line:453:12 pthread_getschedparam 'int (pthread_t, int *restrict, struct sched_param *restrict)' extern
| |-ParmVarDecl 0x5559a71ad9e0 <col:35, col:45> col:45 __target_thread 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x5559a71ada60 <line:454:7, col:23> col:23 __policy 'int *restrict'
| |-ParmVarDecl 0x5559a71adaf0 <line:455:7, col:38> col:38 __param 'struct sched_param *restrict'
| |-NoThrowAttr 0x5559a71add30 <line:456:22>
| `-NonNullAttr 0x5559a71add88 <col:63, col:80> 2 3
|-FunctionDecl 0x5559a71adf78 <line:457:1, line:458:45> line:457:12 pthread_setschedprio 'int (pthread_t, int)' extern
| |-ParmVarDecl 0x5559a71addd8 <col:34, col:44> col:44 __target_thread 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x5559a71ade58 <col:61, col:65> col:65 __prio 'int'
| `-NoThrowAttr 0x5559a71ae028 <line:458:22>
|-FunctionDecl 0x5559a71ae3f8 <line:459:1, line:460:71> line:459:12 pthread_once 'int (pthread_once_t *, void (*)(void))' extern
| |-ParmVarDecl 0x5559a71ae0f0 <col:26, col:42> col:42 __once_control 'pthread_once_t *'
| |-ParmVarDecl 0x5559a71ae290 <line:460:5, col:33> col:12 __init_routine 'void (*)(void)'
| `-NonNullAttr 0x5559a71ae4a8 <col:52, col:69> 1 2
|-FunctionDecl 0x5559a71ae650 <line:461:1, col:64> col:12 pthread_setcancelstate 'int (int, int *)' extern
| |-ParmVarDecl 0x5559a71ae530 <col:36, col:40> col:40 __state 'int'
| `-ParmVarDecl 0x5559a71ae5b0 <col:49, col:54> col:54 __oldstate 'int *'
|-FunctionDecl 0x5559a71ae838 <line:462:1, col:61> col:12 pthread_setcanceltype 'int (int, int *)' extern
| |-ParmVarDecl 0x5559a71ae718 <col:35, col:39> col:39 __type 'int'
| `-ParmVarDecl 0x5559a71ae798 <col:47, col:52> col:52 __oldtype 'int *'
|-FunctionDecl 0x5559a71ae9f0 <line:463:1, col:42> col:12 pthread_cancel 'int (pthread_t)' extern
| `-ParmVarDecl 0x5559a71ae8f8 <col:28, col:38> col:38 __th 'pthread_t':'unsigned long'
|-FunctionDecl 0x5559a71aeb30 <line:464:1, col:37> col:13 pthread_testcancel 'void (void)' extern
|-RecordDecl 0x5559a71aebd0 <line:465:9, line:473:1> line:465:9 struct definition
| |-RecordDecl 0x5559a71aec78 <line:467:3, line:471:3> line:467:3 struct definition
| | |-FieldDecl 0x5559a71aed68 <line:469:5, col:15> col:15 __cancel_jmp_buf '__jmp_buf':'long [8]'
| | `-FieldDecl 0x5559a71aedd0 <line:470:5, col:9> col:9 __mask_was_saved 'int'
| |-FieldDecl 0x5559a71aefa0 <line:467:3, line:471:23> col:5 __cancel_jmp_buf 'struct (anonymous struct at ./split_4/mix029_power.opt_false-unreach-call.i:467:3) [1]'
| `-FieldDecl 0x5559a71af098 <line:472:3, col:16> col:9 __pad 'void *[4]'
|-TypedefDecl 0x5559a71af150 <line:465:1, line:473:3> col:3 referenced __pthread_unwind_buf_t 'struct __pthread_unwind_buf_t':'__pthread_unwind_buf_t'
| |-ElaboratedType 0x5559a71af0f0 'struct __pthread_unwind_buf_t' sugar
| | `-RecordType 0x5559a71aec50 '__pthread_unwind_buf_t'
| |   `-Record 0x5559a71aebd0 ''
| `-AlignedAttr 0x5559a71af1a8 <col:42> aligned
|   `-<<<NULL>>>
|-RecordDecl 0x5559a71af220 <line:474:1, line:480:1> line:474:8 struct __pthread_cleanup_frame definition
| |-FieldDecl 0x5559a71af380 <line:476:3, col:35> col:10 __cancel_routine 'void (*)(void *)'
| |-FieldDecl 0x5559a71af3e8 <line:477:3, col:9> col:9 __cancel_arg 'void *'
| |-FieldDecl 0x5559a71af450 <line:478:3, col:7> col:7 __do_it 'int'
| `-FieldDecl 0x5559a71af4b8 <line:479:3, col:7> col:7 __cancel_type 'int'
|-FunctionDecl 0x5559a71af6c0 <line:481:1, col:69> col:13 __pthread_register_cancel 'void (__pthread_unwind_buf_t *)' extern
| `-ParmVarDecl 0x5559a71af5b0 <col:40, col:64> col:64 __buf '__pthread_unwind_buf_t *'
|-FunctionDecl 0x5559a71af808 <line:483:1, col:71> col:13 __pthread_unregister_cancel 'void (__pthread_unwind_buf_t *)' extern
| `-ParmVarDecl 0x5559a71af778 <col:42, col:66> col:66 __buf '__pthread_unwind_buf_t *'
|-FunctionDecl 0x5559a71afa00 <line:485:1, line:487:31> line:485:13 __pthread_unwind_next 'void (__pthread_unwind_buf_t *) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x5559a71af8c0 <col:36, col:60> col:60 __buf '__pthread_unwind_buf_t *'
| `-WeakAttr 0x5559a71afaa8 <line:487:22>
|-RecordDecl 0x5559a71afb00 <line:489:1, col:8> col:8 struct __jmp_buf_tag
|-FunctionDecl 0x5559a71afe18 <line:490:1, col:98> col:12 __sigsetjmp 'int (struct __jmp_buf_tag *, int)' extern
| |-ParmVarDecl 0x5559a71afc78 <col:25, col:47> col:47 __env 'struct __jmp_buf_tag *'
| |-ParmVarDecl 0x5559a71afcf8 <col:54, col:58> col:58 __savemask 'int'
| |-NoThrowAttr 0x5559a71afec8 <col:86>
| `-ReturnsTwiceAttr 0x5559a71aff20 <col:12> Implicit
|-FunctionDecl 0x5559a71b0248 <line:491:1, line:493:79> line:491:12 pthread_mutex_init 'int (pthread_mutex_t *, const pthread_mutexattr_t *)' extern
| |-ParmVarDecl 0x5559a71afff0 <col:32, col:49> col:49 __mutex 'pthread_mutex_t *'
| |-ParmVarDecl 0x5559a71b0100 <line:492:11, col:38> col:38 __mutexattr 'const pthread_mutexattr_t *'
| |-NoThrowAttr 0x5559a71b02f8 <line:493:22>
| `-NonNullAttr 0x5559a71b0350 <col:63, col:77> 1
|-FunctionDecl 0x5559a71b04c8 <line:494:1, line:495:79> line:494:12 pthread_mutex_destroy 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x5559a71b0398 <col:35, col:52> col:52 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x5559a71b0570 <line:495:22>
| `-NonNullAttr 0x5559a71b05c8 <col:63, col:77> 1
|-FunctionDecl 0x5559a71b06d0 <line:496:1, line:497:68> line:496:12 pthread_mutex_trylock 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x5559a71b0618 <col:35, col:52> col:52 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x5559a71b0778 <line:497:22>
| `-NonNullAttr 0x5559a71b07d0 <col:52, col:66> 1
|-FunctionDecl 0x5559a71b08d0 <line:498:1, line:499:68> line:498:12 pthread_mutex_lock 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x5559a71b0818 <col:32, col:49> col:49 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x5559a71b0978 <line:499:22>
| `-NonNullAttr 0x5559a71b09d0 <col:52, col:66> 1
|-FunctionDecl 0x5559a71b1c28 <line:500:1, line:502:85> line:500:12 pthread_mutex_timedlock 'int (pthread_mutex_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x5559a71b1a38 <col:37, col:65> col:65 __mutex 'pthread_mutex_t *restrict'
| |-ParmVarDecl 0x5559a71b1ac8 <line:501:9, line:502:9> col:9 __abstime 'const struct timespec *restrict'
| |-NoThrowAttr 0x5559a71b1cd8 <col:36>
| `-NonNullAttr 0x5559a71b1d30 <col:66, col:83> 1 2
|-FunctionDecl 0x5559a71b1e30 <line:503:1, line:504:68> line:503:12 pthread_mutex_unlock 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x5559a71b1d78 <col:34, col:51> col:51 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x5559a71b1ed8 <line:504:22>
| `-NonNullAttr 0x5559a71b1f30 <col:52, col:66> 1
|-FunctionDecl 0x5559a71b21c8 <line:505:1, line:508:82> line:505:12 pthread_mutex_getprioceiling 'int (const pthread_mutex_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x5559a71b1fe0 <col:42, line:506:18> col:18 __mutex 'const pthread_mutex_t *restrict'
| |-ParmVarDecl 0x5559a71b2060 <line:507:7, col:23> col:23 __prioceiling 'int *restrict'
| |-NoThrowAttr 0x5559a71b2278 <line:508:22>
| `-NonNullAttr 0x5559a71b22d0 <col:63, col:80> 1 2
|-FunctionDecl 0x5559a71b2598 <line:509:1, line:512:82> line:509:12 pthread_mutex_setprioceiling 'int (pthread_mutex_t *restrict, int, int *restrict)' extern
| |-ParmVarDecl 0x5559a71b2318 <col:42, col:70> col:70 __mutex 'pthread_mutex_t *restrict'
| |-ParmVarDecl 0x5559a71b2398 <line:510:7, col:11> col:11 __prioceiling 'int'
| |-ParmVarDecl 0x5559a71b2418 <line:511:7, col:23> col:23 __old_ceiling 'int *restrict'
| |-NoThrowAttr 0x5559a71b2650 <line:512:22>
| `-NonNullAttr 0x5559a71b26a8 <col:63, col:80> 1 3
|-FunctionDecl 0x5559a71b27b0 <line:513:1, line:514:79> line:513:12 pthread_mutex_consistent 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x5559a71b26f8 <col:38, col:55> col:55 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x5559a71b2858 <line:514:22>
| `-NonNullAttr 0x5559a71b28b0 <col:63, col:77> 1
|-FunctionDecl 0x5559a71b2ad8 <line:515:1, line:516:79> line:515:12 pthread_mutexattr_init 'int (pthread_mutexattr_t *)' extern
| |-ParmVarDecl 0x5559a71b2960 <col:36, col:57> col:57 __attr 'pthread_mutexattr_t *'
| |-NoThrowAttr 0x5559a71b2b80 <line:516:22>
| `-NonNullAttr 0x5559a71b2bd8 <col:63, col:77> 1
|-FunctionDecl 0x5559a71b2ce0 <line:517:1, line:518:79> line:517:12 pthread_mutexattr_destroy 'int (pthread_mutexattr_t *)' extern
| |-ParmVarDecl 0x5559a71b2c28 <col:39, col:60> col:60 __attr 'pthread_mutexattr_t *'
| |-NoThrowAttr 0x5559a71b2d88 <line:518:22>
| `-NonNullAttr 0x5559a71b2de0 <col:63, col:77> 1
|-FunctionDecl 0x5559a71b3008 <line:519:1, line:522:82> line:519:12 pthread_mutexattr_getpshared 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x5559a71b2e28 <col:42, line:520:18> col:18 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x5559a71b2ea8 <line:521:7, col:23> col:23 __pshared 'int *restrict'
| |-NoThrowAttr 0x5559a71b30b8 <line:522:22>
| `-NonNullAttr 0x5559a71b3110 <col:63, col:80> 1 2
|-FunctionDecl 0x5559a71b3318 <line:523:1, line:525:79> line:523:12 pthread_mutexattr_setpshared 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x5559a71b3158 <col:42, col:63> col:63 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x5559a71b31d8 <line:524:7, col:11> col:11 __pshared 'int'
| |-NoThrowAttr 0x5559a71b33c8 <line:525:22>
| `-NonNullAttr 0x5559a71b3420 <col:63, col:77> 1
|-FunctionDecl 0x5559a71b35c8 <line:526:1, line:528:82> line:526:12 pthread_mutexattr_gettype 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x5559a71b3468 <col:39, line:527:11> col:11 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x5559a71b34e8 <col:19, col:35> col:35 __kind 'int *restrict'
| |-NoThrowAttr 0x5559a71b3678 <line:528:22>
| `-NonNullAttr 0x5559a71b36d0 <col:63, col:80> 1 2
|-FunctionDecl 0x5559a71b3858 <line:529:1, line:530:79> line:529:12 pthread_mutexattr_settype 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x5559a71b3718 <col:39, col:60> col:60 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x5559a71b3798 <col:68, col:72> col:72 __kind 'int'
| |-NoThrowAttr 0x5559a71b3908 <line:530:22>
| `-NonNullAttr 0x5559a71b3960 <col:63, col:77> 1
|-FunctionDecl 0x5559a71b3b20 <line:531:1, line:534:82> line:531:12 pthread_mutexattr_getprotocol 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x5559a71b39a8 <col:43, line:532:19> col:19 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x5559a71b3a40 <line:533:8, col:24> col:24 __protocol 'int *restrict'
| |-NoThrowAttr 0x5559a71b3bd0 <line:534:22>
| `-NonNullAttr 0x5559a71b3c28 <col:63, col:80> 1 2
|-FunctionDecl 0x5559a71b3db8 <line:535:1, line:537:79> line:535:12 pthread_mutexattr_setprotocol 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x5559a71b3c78 <col:43, col:64> col:64 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x5559a71b3cf8 <line:536:8, col:12> col:12 __protocol 'int'
| |-NoThrowAttr 0x5559a71b3e68 <line:537:22>
| `-NonNullAttr 0x5559a71b3ec0 <col:63, col:77> 1
|-FunctionDecl 0x5559a71b4068 <line:538:1, line:541:82> line:538:12 pthread_mutexattr_getprioceiling 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x5559a71b3f08 <col:46, line:539:22> col:22 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x5559a71b3f88 <line:540:11, col:27> col:27 __prioceiling 'int *restrict'
| |-NoThrowAttr 0x5559a71b4118 <line:541:22>
| `-NonNullAttr 0x5559a71b4170 <col:63, col:80> 1 2
|-FunctionDecl 0x5559a71b42f8 <line:542:1, line:544:79> line:542:12 pthread_mutexattr_setprioceiling 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x5559a71b41b8 <col:46, col:67> col:67 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x5559a71b4238 <line:543:11, col:15> col:15 __prioceiling 'int'
| |-NoThrowAttr 0x5559a71b43a8 <line:544:22>
| `-NonNullAttr 0x5559a71b4400 <col:63, col:77> 1
|-FunctionDecl 0x5559a71b45e8 <line:545:1, line:547:82> line:545:12 pthread_mutexattr_getrobust 'int (const pthread_mutexattr_t *, int *)' extern
| |-ParmVarDecl 0x5559a71b4448 <col:41, col:68> col:68 __attr 'const pthread_mutexattr_t *'
| |-ParmVarDecl 0x5559a71b44c8 <line:546:6, col:11> col:11 __robustness 'int *'
| |-NoThrowAttr 0x5559a71b4698 <line:547:22>
| `-NonNullAttr 0x5559a71b46f0 <col:63, col:80> 1 2
|-FunctionDecl 0x5559a71b4878 <line:548:1, line:550:79> line:548:12 pthread_mutexattr_setrobust 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x5559a71b4738 <col:41, col:62> col:62 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x5559a71b47b8 <line:549:6, col:10> col:10 __robustness 'int'
| |-NoThrowAttr 0x5559a71b4928 <line:550:22>
| `-NonNullAttr 0x5559a71b4980 <col:63, col:77> 1
|-FunctionDecl 0x5559a71b5cf8 <line:551:1, line:553:86> line:551:12 pthread_rwlock_init 'int (pthread_rwlock_t *restrict, const pthread_rwlockattr_t *restrict)' extern
| |-ParmVarDecl 0x5559a71b5aa0 <col:33, col:62> col:62 __rwlock 'pthread_rwlock_t *restrict'
| |-ParmVarDecl 0x5559a71b5bb0 <line:552:5, line:553:5> col:5 __attr 'const pthread_rwlockattr_t *restrict'
| |-NoThrowAttr 0x5559a71b5da8 <col:29>
| `-NonNullAttr 0x5559a71b5e00 <col:70, col:84> 1
|-FunctionDecl 0x5559a71b5f78 <line:554:1, line:555:79> line:554:12 pthread_rwlock_destroy 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x5559a71b5e48 <col:36, col:54> col:54 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x5559a71b6020 <line:555:22>
| `-NonNullAttr 0x5559a71b6078 <col:63, col:77> 1
|-FunctionDecl 0x5559a71b6180 <line:556:1, line:557:68> line:556:12 pthread_rwlock_rdlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x5559a71b60c8 <col:35, col:53> col:53 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x5559a71b6228 <line:557:22>
| `-NonNullAttr 0x5559a71b6280 <col:52, col:66> 1
|-FunctionDecl 0x5559a71b6380 <line:558:1, line:559:65> line:558:12 pthread_rwlock_tryrdlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x5559a71b62c8 <col:38, col:56> col:56 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x5559a71b6428 <line:559:19>
| `-NonNullAttr 0x5559a71b6480 <col:49, col:63> 1
|-FunctionDecl 0x5559a71b66b8 <line:560:1, line:562:88> line:560:12 pthread_rwlock_timedrdlock 'int (pthread_rwlock_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x5559a71b64c8 <col:40, col:69> col:69 __rwlock 'pthread_rwlock_t *restrict'
| |-ParmVarDecl 0x5559a71b6558 <line:561:12, line:562:12> col:12 __abstime 'const struct timespec *restrict'
| |-NoThrowAttr 0x5559a71b6768 <col:39>
| `-NonNullAttr 0x5559a71b67c0 <col:69, col:86> 1 2
|-FunctionDecl 0x5559a71b68c0 <line:563:1, line:564:68> line:563:12 pthread_rwlock_wrlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x5559a71b6808 <col:35, col:53> col:53 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x5559a71b6968 <line:564:22>
| `-NonNullAttr 0x5559a71b69c0 <col:52, col:66> 1
|-FunctionDecl 0x5559a71b6b28 <line:565:1, line:566:68> line:565:12 pthread_rwlock_trywrlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x5559a71b6a70 <col:38, col:56> col:56 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x5559a71b6bd0 <line:566:22>
| `-NonNullAttr 0x5559a71b6c28 <col:52, col:66> 1
|-FunctionDecl 0x5559a71b6de8 <line:567:1, line:569:88> line:567:12 pthread_rwlock_timedwrlock 'int (pthread_rwlock_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x5559a71b6c78 <col:40, col:69> col:69 __rwlock 'pthread_rwlock_t *restrict'
| |-ParmVarDecl 0x5559a71b6d08 <line:568:12, line:569:12> col:12 __abstime 'const struct timespec *restrict'
| |-NoThrowAttr 0x5559a71b6e98 <col:39>
| `-NonNullAttr 0x5559a71b6ef0 <col:69, col:86> 1 2
|-FunctionDecl 0x5559a71b6ff0 <line:570:1, line:571:68> line:570:12 pthread_rwlock_unlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x5559a71b6f38 <col:35, col:53> col:53 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x5559a71b7098 <line:571:22>
| `-NonNullAttr 0x5559a71b70f0 <col:52, col:66> 1
|-FunctionDecl 0x5559a71b72d8 <line:572:1, line:573:79> line:572:12 pthread_rwlockattr_init 'int (pthread_rwlockattr_t *)' extern
| |-ParmVarDecl 0x5559a71b71a0 <col:37, col:59> col:59 __attr 'pthread_rwlockattr_t *'
| |-NoThrowAttr 0x5559a71b7380 <line:573:22>
| `-NonNullAttr 0x5559a71b73d8 <col:63, col:77> 1
|-FunctionDecl 0x5559a71b74e0 <line:574:1, line:575:79> line:574:12 pthread_rwlockattr_destroy 'int (pthread_rwlockattr_t *)' extern
| |-ParmVarDecl 0x5559a71b7428 <col:40, col:62> col:62 __attr 'pthread_rwlockattr_t *'
| |-NoThrowAttr 0x5559a71b7588 <line:575:22>
| `-NonNullAttr 0x5559a71b75e0 <col:63, col:77> 1
|-FunctionDecl 0x5559a71b7808 <line:576:1, line:579:82> line:576:12 pthread_rwlockattr_getpshared 'int (const pthread_rwlockattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x5559a71b7628 <col:43, line:577:19> col:19 __attr 'const pthread_rwlockattr_t *restrict'
| |-ParmVarDecl 0x5559a71b76a8 <line:578:8, col:24> col:24 __pshared 'int *restrict'
| |-NoThrowAttr 0x5559a71b78b8 <line:579:22>
| `-NonNullAttr 0x5559a71b7910 <col:63, col:80> 1 2
|-FunctionDecl 0x5559a71b7b38 <line:580:1, line:582:79> line:580:12 pthread_rwlockattr_setpshared 'int (pthread_rwlockattr_t *, int)' extern
| |-ParmVarDecl 0x5559a71b7958 <col:43, col:65> col:65 __attr 'pthread_rwlockattr_t *'
| |-ParmVarDecl 0x5559a71b79d8 <line:581:8, col:12> col:12 __pshared 'int'
| |-NoThrowAttr 0x5559a71b7be8 <line:582:22>
| `-NonNullAttr 0x5559a71b7c40 <col:63, col:77> 1
|-FunctionDecl 0x5559a71b7de8 <line:583:1, line:586:82> line:583:12 pthread_rwlockattr_getkind_np 'int (const pthread_rwlockattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x5559a71b7c88 <col:43, line:584:19> col:19 __attr 'const pthread_rwlockattr_t *restrict'
| |-ParmVarDecl 0x5559a71b7d08 <line:585:8, col:24> col:24 __pref 'int *restrict'
| |-NoThrowAttr 0x5559a71b7e98 <line:586:22>
| `-NonNullAttr 0x5559a71b7ef0 <col:63, col:80> 1 2
|-FunctionDecl 0x5559a71b8078 <line:587:1, line:588:93> line:587:12 pthread_rwlockattr_setkind_np 'int (pthread_rwlockattr_t *, int)' extern
| |-ParmVarDecl 0x5559a71b7f38 <col:43, col:65> col:65 __attr 'pthread_rwlockattr_t *'
| |-ParmVarDecl 0x5559a71b7fb8 <line:588:8, col:12> col:12 __pref 'int'
| |-NoThrowAttr 0x5559a71b8128 <col:36>
| `-NonNullAttr 0x5559a71b8180 <col:77, col:91> 1
|-FunctionDecl 0x5559a71b84b8 <line:589:1, line:591:79> line:589:12 pthread_cond_init 'int (pthread_cond_t *restrict, const pthread_condattr_t *restrict)' extern
| |-ParmVarDecl 0x5559a71b8260 <col:31, col:58> col:58 __cond 'pthread_cond_t *restrict'
| |-ParmVarDecl 0x5559a71b8370 <line:590:10, col:47> col:47 __cond_attr 'const pthread_condattr_t *restrict'
| |-NoThrowAttr 0x5559a71b8568 <line:591:22>
| `-NonNullAttr 0x5559a71b85c0 <col:63, col:77> 1
|-FunctionDecl 0x5559a71b8738 <line:592:1, line:593:79> line:592:12 pthread_cond_destroy 'int (pthread_cond_t *)' extern
| |-ParmVarDecl 0x5559a71b8608 <col:34, col:50> col:50 __cond 'pthread_cond_t *'
| |-NoThrowAttr 0x5559a71b87e0 <line:593:22>
| `-NonNullAttr 0x5559a71b8838 <col:63, col:77> 1
|-FunctionDecl 0x5559a71b8940 <line:594:1, line:595:68> line:594:12 pthread_cond_signal 'int (pthread_cond_t *)' extern
| |-ParmVarDecl 0x5559a71b8888 <col:33, col:49> col:49 __cond 'pthread_cond_t *'
| |-NoThrowAttr 0x5559a71b89e8 <line:595:22>
| `-NonNullAttr 0x5559a71b8a40 <col:52, col:66> 1
|-FunctionDecl 0x5559a71b8b58 <line:596:1, line:597:68> line:596:12 pthread_cond_broadcast 'int (pthread_cond_t *)' extern
| |-ParmVarDecl 0x5559a71b8aa0 <col:36, col:52> col:52 __cond 'pthread_cond_t *'
| |-NoThrowAttr 0x5559a71b8c00 <line:597:22>
| `-NonNullAttr 0x5559a71b8c58 <col:52, col:66> 1
|-FunctionDecl 0x5559a71b8e88 <line:598:1, line:600:41> line:598:12 pthread_cond_wait 'int (pthread_cond_t *restrict, pthread_mutex_t *restrict)' extern
| |-ParmVarDecl 0x5559a71b8ca8 <col:31, col:58> col:58 __cond 'pthread_cond_t *restrict'
| |-ParmVarDecl 0x5559a71b8d20 <line:599:10, col:38> col:38 __mutex 'pthread_mutex_t *restrict'
| `-NonNullAttr 0x5559a71b8f38 <line:600:22, col:39> 1 2
|-FunctionDecl 0x5559a71b9268 <line:601:1, line:604:44> line:601:12 pthread_cond_timedwait 'int (pthread_cond_t *restrict, pthread_mutex_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x5559a71b8fb8 <col:36, col:63> col:63 __cond 'pthread_cond_t *restrict'
| |-ParmVarDecl 0x5559a71b9030 <line:602:8, col:36> col:36 __mutex 'pthread_mutex_t *restrict'
| |-ParmVarDecl 0x5559a71b90c0 <line:603:8, col:42> col:42 __abstime 'const struct timespec *restrict'
| `-NonNullAttr 0x5559a71b9320 <line:604:22, col:42> 1 2 3
|-FunctionDecl 0x5559a71b9538 <line:605:1, line:606:79> line:605:12 pthread_condattr_init 'int (pthread_condattr_t *)' extern
| |-ParmVarDecl 0x5559a71b9400 <col:35, col:55> col:55 __attr 'pthread_condattr_t *'
| |-NoThrowAttr 0x5559a71b95e0 <line:606:22>
| `-NonNullAttr 0x5559a71b9638 <col:63, col:77> 1
|-FunctionDecl 0x5559a71b9740 <line:607:1, line:608:79> line:607:12 pthread_condattr_destroy 'int (pthread_condattr_t *)' extern
| |-ParmVarDecl 0x5559a71b9688 <col:38, col:58> col:58 __attr 'pthread_condattr_t *'
| |-NoThrowAttr 0x5559a71b97e8 <line:608:22>
| `-NonNullAttr 0x5559a71b9840 <col:63, col:77> 1
|-FunctionDecl 0x5559a71b9aa0 <line:609:1, line:612:82> line:609:12 pthread_condattr_getpshared 'int (const pthread_condattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x5559a71b9888 <col:41, line:610:17> col:17 __attr 'const pthread_condattr_t *restrict'
| |-ParmVarDecl 0x5559a71b9908 <line:611:6, col:22> col:22 __pshared 'int *restrict'
| |-NoThrowAttr 0x5559a71b9b50 <line:612:22>
| `-NonNullAttr 0x5559a71b9ba8 <col:63, col:80> 1 2
|-FunctionDecl 0x5559a71b9db8 <line:613:1, line:614:94> line:613:12 pthread_condattr_setpshared 'int (pthread_condattr_t *, int)' extern
| |-ParmVarDecl 0x5559a71b9bf8 <col:41, col:61> col:61 __attr 'pthread_condattr_t *'
| |-ParmVarDecl 0x5559a71b9c78 <line:614:6, col:10> col:10 __pshared 'int'
| |-NoThrowAttr 0x5559a71b9e68 <col:37>
| `-NonNullAttr 0x5559a71b9ec0 <col:78, col:92> 1
|-FunctionDecl 0x5559a71ba0d8 <line:615:1, line:618:82> line:615:12 pthread_condattr_getclock 'int (const pthread_condattr_t *restrict, __clockid_t *restrict)' extern
| |-ParmVarDecl 0x5559a71b9f08 <col:39, line:616:22> col:22 __attr 'const pthread_condattr_t *restrict'
| |-ParmVarDecl 0x5559a71b9fb0 <line:617:11, col:35> col:35 __clock_id '__clockid_t *restrict'
| |-NoThrowAttr 0x5559a71ba188 <line:618:22>
| `-NonNullAttr 0x5559a71ba1e0 <col:63, col:80> 1 2
|-FunctionDecl 0x5559a71ba3a8 <line:619:1, line:621:79> line:619:12 pthread_condattr_setclock 'int (pthread_condattr_t *, __clockid_t)' extern
| |-ParmVarDecl 0x5559a71ba228 <col:39, col:59> col:59 __attr 'pthread_condattr_t *'
| |-ParmVarDecl 0x5559a71ba2a0 <line:620:11, col:23> col:23 __clock_id '__clockid_t':'int'
| |-NoThrowAttr 0x5559a71ba458 <line:621:22>
| `-NonNullAttr 0x5559a71ba4b0 <col:63, col:77> 1
|-FunctionDecl 0x5559a71ba758 <line:622:1, line:623:79> line:622:12 pthread_spin_init 'int (pthread_spinlock_t *, int)' extern
| |-ParmVarDecl 0x5559a71ba590 <col:31, col:51> col:51 __lock 'pthread_spinlock_t *'
| |-ParmVarDecl 0x5559a71ba610 <col:59, col:63> col:63 __pshared 'int'
| |-NoThrowAttr 0x5559a71ba808 <line:623:22>
| `-NonNullAttr 0x5559a71ba860 <col:63, col:77> 1
|-FunctionDecl 0x5559a71ba9d8 <line:624:1, line:625:79> line:624:12 pthread_spin_destroy 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x5559a71ba8a8 <col:34, col:54> col:54 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x5559a71baab0 <line:625:22>
| `-NonNullAttr 0x5559a71bab08 <col:63, col:77> 1
|-FunctionDecl 0x5559a71bac10 <line:626:1, line:627:68> line:626:12 pthread_spin_lock 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x5559a71bab58 <col:31, col:51> col:51 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x5559a71bacb8 <line:627:22>
| `-NonNullAttr 0x5559a71bad10 <col:52, col:66> 1
|-FunctionDecl 0x5559a71bae10 <line:628:1, line:629:68> line:628:12 pthread_spin_trylock 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x5559a71bad58 <col:34, col:54> col:54 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x5559a71baeb8 <line:629:22>
| `-NonNullAttr 0x5559a71baf10 <col:52, col:66> 1
|-FunctionDecl 0x5559a71bb010 <line:630:1, line:631:68> line:630:12 pthread_spin_unlock 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x5559a71baf58 <col:33, col:53> col:53 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x5559a71bb0b8 <line:631:22>
| `-NonNullAttr 0x5559a71bb110 <col:52, col:66> 1
|-FunctionDecl 0x5559a71bb4e8 <line:632:1, line:635:79> line:632:12 pthread_barrier_init 'int (pthread_barrier_t *restrict, const pthread_barrierattr_t *restrict, unsigned int)' extern
| |-ParmVarDecl 0x5559a71bb1f0 <col:34, col:64> col:64 __barrier 'pthread_barrier_t *restrict'
| |-ParmVarDecl 0x5559a71bb300 <line:633:6, line:634:6> col:6 __attr 'const pthread_barrierattr_t *restrict'
| |-ParmVarDecl 0x5559a71bb380 <col:14, col:27> col:27 __count 'unsigned int'
| |-NoThrowAttr 0x5559a71bb5a0 <line:635:22>
| `-NonNullAttr 0x5559a71bb5f8 <col:63, col:77> 1
|-FunctionDecl 0x5559a71bb778 <line:636:1, line:637:79> line:636:12 pthread_barrier_destroy 'int (pthread_barrier_t *)' extern
| |-ParmVarDecl 0x5559a71bb648 <col:37, col:56> col:56 __barrier 'pthread_barrier_t *'
| |-NoThrowAttr 0x5559a71bb820 <line:637:22>
| `-NonNullAttr 0x5559a71bb878 <col:63, col:77> 1
|-FunctionDecl 0x5559a71bb980 <line:638:1, line:639:68> line:638:12 pthread_barrier_wait 'int (pthread_barrier_t *)' extern
| |-ParmVarDecl 0x5559a71bb8c8 <col:34, col:53> col:53 __barrier 'pthread_barrier_t *'
| |-NoThrowAttr 0x5559a71bba28 <line:639:22>
| `-NonNullAttr 0x5559a71bba80 <col:52, col:66> 1
|-FunctionDecl 0x5559a71bcc88 <line:640:1, line:641:79> line:640:12 pthread_barrierattr_init 'int (pthread_barrierattr_t *)' extern
| |-ParmVarDecl 0x5559a71bcb50 <col:38, col:61> col:61 __attr 'pthread_barrierattr_t *'
| |-NoThrowAttr 0x5559a71bcd30 <line:641:22>
| `-NonNullAttr 0x5559a71bcd88 <col:63, col:77> 1
|-FunctionDecl 0x5559a71bce90 <line:642:1, line:643:79> line:642:12 pthread_barrierattr_destroy 'int (pthread_barrierattr_t *)' extern
| |-ParmVarDecl 0x5559a71bcdd8 <col:41, col:64> col:64 __attr 'pthread_barrierattr_t *'
| |-NoThrowAttr 0x5559a71bcf38 <line:643:22>
| `-NonNullAttr 0x5559a71bcf90 <col:63, col:77> 1
|-FunctionDecl 0x5559a71bd1b8 <line:644:1, line:647:82> line:644:12 pthread_barrierattr_getpshared 'int (const pthread_barrierattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x5559a71bcfd8 <col:44, line:645:20> col:20 __attr 'const pthread_barrierattr_t *restrict'
| |-ParmVarDecl 0x5559a71bd058 <line:646:9, col:25> col:25 __pshared 'int *restrict'
| |-NoThrowAttr 0x5559a71bd268 <line:647:22>
| `-NonNullAttr 0x5559a71bd2c0 <col:63, col:80> 1 2
|-FunctionDecl 0x5559a71bd4c8 <line:648:1, line:650:79> line:648:12 pthread_barrierattr_setpshared 'int (pthread_barrierattr_t *, int)' extern
| |-ParmVarDecl 0x5559a71bd308 <col:44, col:67> col:67 __attr 'pthread_barrierattr_t *'
| |-ParmVarDecl 0x5559a71bd388 <line:649:9, col:13> col:13 __pshared 'int'
| |-NoThrowAttr 0x5559a71bd578 <line:650:22>
| `-NonNullAttr 0x5559a71bd5d0 <col:63, col:77> 1
|-FunctionDecl 0x5559a71bd918 <line:651:1, line:653:79> line:651:12 pthread_key_create 'int (pthread_key_t *, void (*)(void *))' extern
| |-ParmVarDecl 0x5559a71bd6b0 <col:32, col:47> col:47 __key 'pthread_key_t *'
| |-ParmVarDecl 0x5559a71bd7d0 <line:652:11, col:43> col:18 __destr_function 'void (*)(void *)'
| |-NoThrowAttr 0x5559a71bd9c8 <line:653:22>
| `-NonNullAttr 0x5559a71bda20 <col:63, col:77> 1
|-FunctionDecl 0x5559a71bdb88 <line:654:1, col:92> col:12 pthread_key_delete 'int (pthread_key_t)' extern
| |-ParmVarDecl 0x5559a71bda68 <col:32, col:46> col:46 __key 'pthread_key_t':'unsigned int'
| `-NoThrowAttr 0x5559a71bdc30 <col:69>
|-FunctionDecl 0x5559a71bdda8 <line:655:1, col:95> col:14 pthread_getspecific 'void *(pthread_key_t)' extern
| |-ParmVarDecl 0x5559a71bdc98 <col:35, col:49> col:49 __key 'pthread_key_t':'unsigned int'
| `-NoThrowAttr 0x5559a71bde50 <col:72>
|-FunctionDecl 0x5559a71be088 <line:656:1, line:657:67> line:656:12 pthread_setspecific 'int (pthread_key_t, const void *)' extern
| |-ParmVarDecl 0x5559a71bdeb8 <col:33, col:47> col:47 __key 'pthread_key_t':'unsigned int'
| |-ParmVarDecl 0x5559a71bdf68 <line:657:5, col:17> col:17 __pointer 'const void *'
| `-NoThrowAttr 0x5559a71be138 <col:44>
|-FunctionDecl 0x5559a71be358 <line:658:1, line:660:79> line:658:12 pthread_getcpuclockid 'int (pthread_t, __clockid_t *)' extern
| |-ParmVarDecl 0x5559a71be1a0 <col:35, col:45> col:45 __thread_id 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x5559a71be218 <line:659:7, col:20> col:20 __clock_id '__clockid_t *'
| |-NoThrowAttr 0x5559a71be408 <line:660:22>
| `-NonNullAttr 0x5559a71be460 <col:63, col:77> 2
|-FunctionDecl 0x5559a71be8a8 <line:661:1, line:663:70> line:661:12 pthread_atfork 'int (void (*)(void), void (*)(void), void (*)(void))' extern
| |-ParmVarDecl 0x5559a71be540 <col:28, col:51> col:35 __prepare 'void (*)(void)'
| |-ParmVarDecl 0x5559a71be650 <line:662:7, col:29> col:14 __parent 'void (*)(void)'
| |-ParmVarDecl 0x5559a71be760 <line:663:7, col:28> col:14 __child 'void (*)(void)'
| `-NoThrowAttr 0x5559a71be960 <col:47>
|-FunctionDecl 0x5559a71beaf0 <line:665:1, col:20> col:8 used P0 'void *(void *)'
| `-ParmVarDecl 0x5559a71be9d0 <col:11, col:17> col:17 arg 'void *'
|-FunctionDecl 0x5559a71bec48 <line:666:1, col:20> col:8 used P1 'void *(void *)'
| `-ParmVarDecl 0x5559a71bebb0 <col:11, col:17> col:17 arg 'void *'
|-FunctionDecl 0x5559a71beda0 <line:667:1, col:20> col:8 used P2 'void *(void *)'
| `-ParmVarDecl 0x5559a71bed08 <col:11, col:17> col:17 arg 'void *'
|-FunctionDecl 0x5559a71beef8 <line:668:1, col:20> col:8 used P3 'void *(void *)'
| `-ParmVarDecl 0x5559a71bee60 <col:11, col:17> col:17 arg 'void *'
|-FunctionDecl 0x5559a71befc0 <line:669:1, col:12> col:6 fence 'void ()'
|-FunctionDecl 0x5559a71bf080 <line:670:1, col:12> col:6 isync 'void ()'
|-FunctionDecl 0x5559a71bf140 <line:671:1, col:14> col:6 lwfence 'void ()'
|-VarDecl 0x5559a71bf1f8 <line:672:1, col:5> col:5 used __unbuffered_cnt 'int'
|-VarDecl 0x5559a71bf278 prev 0x5559a71bf1f8 <line:673:1, col:24> col:5 used __unbuffered_cnt 'int' cinit
| `-IntegerLiteral 0x5559a71bf2e0 <col:24> 'int' 0
|-VarDecl 0x5559a71bf318 <line:674:1, col:5> col:5 used __unbuffered_p0_EAX 'int'
|-VarDecl 0x5559a71bf398 prev 0x5559a71bf318 <line:675:1, col:27> col:5 used __unbuffered_p0_EAX 'int' cinit
| `-IntegerLiteral 0x5559a71bf400 <col:27> 'int' 0
|-VarDecl 0x5559a71bf438 <line:676:1, col:5> col:5 used __unbuffered_p3_EAX 'int'
|-VarDecl 0x5559a71bf4b8 prev 0x5559a71bf438 <line:677:1, col:27> col:5 used __unbuffered_p3_EAX 'int' cinit
| `-IntegerLiteral 0x5559a71bf520 <col:27> 'int' 0
|-VarDecl 0x5559a71bf558 <line:678:1, col:5> col:5 used __unbuffered_p3_EBX 'int'
|-VarDecl 0x5559a71bf5d8 prev 0x5559a71bf558 <line:679:1, col:27> col:5 used __unbuffered_p3_EBX 'int' cinit
| `-IntegerLiteral 0x5559a71bf640 <col:27> 'int' 0
|-VarDecl 0x5559a71bf678 <line:680:1, col:5> col:5 used a 'int'
|-VarDecl 0x5559a71bf6f8 prev 0x5559a71bf678 <line:681:1, col:9> col:5 used a 'int' cinit
| `-IntegerLiteral 0x5559a71bf760 <col:9> 'int' 0
|-VarDecl 0x5559a71bf790 <line:682:1, col:7> col:7 used main$tmp_guard0 '_Bool'
|-VarDecl 0x5559a71bf808 <line:683:1, col:7> col:7 used main$tmp_guard1 '_Bool'
|-VarDecl 0x5559a71bf888 <line:684:1, col:5> col:5 used x 'int'
|-VarDecl 0x5559a71bf908 prev 0x5559a71bf888 <line:685:1, col:9> col:5 used x 'int' cinit
| `-IntegerLiteral 0x5559a71bf970 <col:9> 'int' 0
|-VarDecl 0x5559a71bf9a8 <line:686:1, col:5> col:5 used y 'int'
|-VarDecl 0x5559a71bfa28 prev 0x5559a71bf9a8 <line:687:1, col:9> col:5 used y 'int' cinit
| `-IntegerLiteral 0x5559a71bfa90 <col:9> 'int' 0
|-VarDecl 0x5559a71bfb00 <line:688:1, col:7> col:7 used y$flush_delayed '_Bool'
|-VarDecl 0x5559a71bfb80 <line:689:1, col:5> col:5 used y$mem_tmp 'int'
|-VarDecl 0x5559a71bfbf8 <line:690:1, col:7> col:7 used y$r_buff0_thd0 '_Bool'
|-VarDecl 0x5559a71bfc70 <line:691:1, col:7> col:7 used y$r_buff0_thd1 '_Bool'
|-VarDecl 0x5559a71bfce8 <line:692:1, col:7> col:7 used y$r_buff0_thd2 '_Bool'
|-VarDecl 0x5559a71bfd60 <line:693:1, col:7> col:7 used y$r_buff0_thd3 '_Bool'
|-VarDecl 0x5559a71bfdd8 <line:694:1, col:7> col:7 used y$r_buff0_thd4 '_Bool'
|-VarDecl 0x5559a71bfe50 <line:695:1, col:7> col:7 used y$r_buff1_thd0 '_Bool'
|-VarDecl 0x5559a71bfec8 <line:696:1, col:7> col:7 used y$r_buff1_thd1 '_Bool'
|-VarDecl 0x5559a71bff40 <line:697:1, col:7> col:7 used y$r_buff1_thd2 '_Bool'
|-VarDecl 0x5559a71bffb8 <line:698:1, col:7> col:7 used y$r_buff1_thd3 '_Bool'
|-VarDecl 0x5559a71c0030 <line:699:1, col:7> col:7 used y$r_buff1_thd4 '_Bool'
|-VarDecl 0x5559a71c00a8 <line:700:1, col:7> col:7 y$read_delayed '_Bool'
|-VarDecl 0x5559a71c0128 <line:701:1, col:6> col:6 y$read_delayed_var 'int *'
|-VarDecl 0x5559a71c01a8 <line:702:1, col:5> col:5 used y$w_buff0 'int'
|-VarDecl 0x5559a71c0220 <line:703:1, col:7> col:7 used y$w_buff0_used '_Bool'
|-VarDecl 0x5559a71c02a0 <line:704:1, col:5> col:5 used y$w_buff1 'int'
|-VarDecl 0x5559a71c0318 <line:705:1, col:7> col:7 used y$w_buff1_used '_Bool'
|-VarDecl 0x5559a71c0398 <line:706:1, col:5> col:5 used z 'int'
|-VarDecl 0x5559a71c0418 prev 0x5559a71c0398 <line:707:1, col:9> col:5 used z 'int' cinit
| `-IntegerLiteral 0x5559a71c0480 <col:9> 'int' 0
|-VarDecl 0x5559a71c04b0 <line:708:1, col:7> col:7 used weak$$choice0 '_Bool'
|-VarDecl 0x5559a71c0528 <line:709:1, col:7> col:7 used weak$$choice2 '_Bool'
|-FunctionDecl 0x5559a71c0640 prev 0x5559a71beaf0 <line:710:1, line:724:1> line:710:8 used P0 'void *(void *)'
| |-ParmVarDecl 0x5559a71c05a8 <col:11, col:17> col:17 arg 'void *'
| `-CompoundStmt 0x5559a71c0c28 <line:711:1, line:724:1>
|   |-CallExpr 0x5559a71c0758 <line:712:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x5559a71c0740 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5559a71c06e8 <col:3> 'void ()' Function 0x5559a7165e40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x5559a71c07b8 <line:713:3, col:7> 'int' '='
|   | |-DeclRefExpr 0x5559a71c0778 <col:3> 'int' lvalue Var 0x5559a71bf6f8 'a' 'int'
|   | `-IntegerLiteral 0x5559a71c0798 <col:7> 'int' 1
|   |-CallExpr 0x5559a71c0810 <line:714:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x5559a71c07f8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5559a71c07d8 <col:3> 'void ()' Function 0x5559a7165f00 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x5559a71c0868 <line:715:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x5559a71c0850 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5559a71c0830 <col:3> 'void ()' Function 0x5559a7165e40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x5559a71c08e0 <line:716:3, col:25> 'int' '='
|   | |-DeclRefExpr 0x5559a71c0888 <col:3> 'int' lvalue Var 0x5559a71bf398 '__unbuffered_p0_EAX' 'int'
|   | `-ImplicitCastExpr 0x5559a71c08c8 <col:25> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x5559a71c08a8 <col:25> 'int' lvalue Var 0x5559a71bf908 'x' 'int'
|   |-CallExpr 0x5559a71c0938 <line:717:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x5559a71c0920 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5559a71c0900 <col:3> 'void ()' Function 0x5559a7165f00 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x5559a71c0990 <line:718:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x5559a71c0978 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5559a71c0958 <col:3> 'void ()' Function 0x5559a7165e40 '__VERIFIER_atomic_begin' 'void ()'
|   |-CallExpr 0x5559a71c09e8 <line:719:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x5559a71c09d0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5559a71c09b0 <col:3> 'void ()' Function 0x5559a7165f00 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x5559a71c0a40 <line:720:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x5559a71c0a28 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5559a71c0a08 <col:3> 'void ()' Function 0x5559a7165e40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x5559a71c0b10 <line:721:3, col:41> 'int' '='
|   | |-DeclRefExpr 0x5559a71c0a60 <col:3> 'int' lvalue Var 0x5559a71bf278 '__unbuffered_cnt' 'int'
|   | `-BinaryOperator 0x5559a71c0ad8 <col:22, col:41> 'int' '+'
|   |   |-ImplicitCastExpr 0x5559a71c0ac0 <col:22> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x5559a71c0a80 <col:22> 'int' lvalue Var 0x5559a71bf278 '__unbuffered_cnt' 'int'
|   |   `-IntegerLiteral 0x5559a71c0aa0 <col:41> 'int' 1
|   |-CallExpr 0x5559a71c0b68 <line:722:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x5559a71c0b50 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5559a71c0b30 <col:3> 'void ()' Function 0x5559a7165f00 '__VERIFIER_atomic_end' 'void ()'
|   `-ReturnStmt 0x5559a71c0c18 <line:723:3, col:36>
|     `-CallExpr 0x5559a71c0bf8 <col:10, col:36> 'void *'
|       `-ImplicitCastExpr 0x5559a71c0be0 <col:10> 'void *(*)(void)' <FunctionToPointerDecay>
|         `-DeclRefExpr 0x5559a71c0b88 <col:10> 'void *(void)' Function 0x5559a7165958 '__VERIFIER_nondet_pointer' 'void *(void)'
|-FunctionDecl 0x5559a71c0d48 prev 0x5559a71bec48 <line:725:1, line:744:1> line:725:8 used P1 'void *(void *)'
| |-ParmVarDecl 0x5559a71c0cb0 <col:11, col:17> col:17 arg 'void *'
| `-CompoundStmt 0x5559a71c1f70 <line:726:1, line:744:1>
|   |-CallExpr 0x5559a71c0e28 <line:727:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x5559a71c0e10 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5559a71c0df0 <col:3> 'void ()' Function 0x5559a7165e40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x5559a71c0e88 <line:728:3, col:7> 'int' '='
|   | |-DeclRefExpr 0x5559a71c0e48 <col:3> 'int' lvalue Var 0x5559a71bf908 'x' 'int'
|   | `-IntegerLiteral 0x5559a71c0e68 <col:7> 'int' 1
|   |-CallExpr 0x5559a71c0ee0 <line:729:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x5559a71c0ec8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5559a71c0ea8 <col:3> 'void ()' Function 0x5559a7165f00 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x5559a71c0f38 <line:730:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x5559a71c0f20 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5559a71c0f00 <col:3> 'void ()' Function 0x5559a7165e40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x5559a71c0f98 <line:731:3, col:7> 'int' '='
|   | |-DeclRefExpr 0x5559a71c0f58 <col:3> 'int' lvalue Var 0x5559a71bfa28 'y' 'int'
|   | `-IntegerLiteral 0x5559a71c0f78 <col:7> 'int' 1
|   |-CallExpr 0x5559a71c0ff0 <line:732:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x5559a71c0fd8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5559a71c0fb8 <col:3> 'void ()' Function 0x5559a7165f00 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x5559a71c1048 <line:733:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x5559a71c1030 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5559a71c1010 <col:3> 'void ()' Function 0x5559a7165e40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x5559a71c1330 <line:734:3, col:103> 'int' '='
|   | |-DeclRefExpr 0x5559a71c1068 <col:3> 'int' lvalue Var 0x5559a71bfa28 'y' 'int'
|   | `-ConditionalOperator 0x5559a71c1300 <col:7, col:103> 'int'
|   |   |-BinaryOperator 0x5559a71c1128 <col:7, col:25> 'int' '&&'
|   |   | |-ImplicitCastExpr 0x5559a71c10e0 <col:7> 'int' <IntegralCast>
|   |   | | `-ImplicitCastExpr 0x5559a71c10c8 <col:7> '_Bool' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x5559a71c1088 <col:7> '_Bool' lvalue Var 0x5559a71c0220 'y$w_buff0_used' '_Bool'
|   |   | `-ImplicitCastExpr 0x5559a71c1110 <col:25> 'int' <IntegralCast>
|   |   |   `-ImplicitCastExpr 0x5559a71c10f8 <col:25> '_Bool' <LValueToRValue>
|   |   |     `-DeclRefExpr 0x5559a71c10a8 <col:25> '_Bool' lvalue Var 0x5559a71bfce8 'y$r_buff0_thd2' '_Bool'
|   |   |-ImplicitCastExpr 0x5559a71c12e8 <col:42> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x5559a71c1148 <col:42> 'int' lvalue Var 0x5559a71c01a8 'y$w_buff0' 'int'
|   |   `-ParenExpr 0x5559a71c12c8 <col:54, col:103> 'int'
|   |     `-ConditionalOperator 0x5559a71c1298 <col:55, col:102> 'int'
|   |       |-BinaryOperator 0x5559a71c1208 <col:55, col:73> 'int' '&&'
|   |       | |-ImplicitCastExpr 0x5559a71c11c0 <col:55> 'int' <IntegralCast>
|   |       | | `-ImplicitCastExpr 0x5559a71c11a8 <col:55> '_Bool' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x5559a71c1168 <col:55> '_Bool' lvalue Var 0x5559a71c0318 'y$w_buff1_used' '_Bool'
|   |       | `-ImplicitCastExpr 0x5559a71c11f0 <col:73> 'int' <IntegralCast>
|   |       |   `-ImplicitCastExpr 0x5559a71c11d8 <col:73> '_Bool' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x5559a71c1188 <col:73> '_Bool' lvalue Var 0x5559a71bff40 'y$r_buff1_thd2' '_Bool'
|   |       |-ImplicitCastExpr 0x5559a71c1268 <col:90> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x5559a71c1228 <col:90> 'int' lvalue Var 0x5559a71c02a0 'y$w_buff1' 'int'
|   |       `-ImplicitCastExpr 0x5559a71c1280 <col:102> 'int' <LValueToRValue>
|   |         `-DeclRefExpr 0x5559a71c1248 <col:102> 'int' lvalue Var 0x5559a71bfa28 'y' 'int'
|   |-BinaryOperator 0x5559a71c1538 <line:735:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x5559a71c1350 <col:3> '_Bool' lvalue Var 0x5559a71c0220 'y$w_buff0_used' '_Bool'
|   | `-ImplicitCastExpr 0x5559a71c1520 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x5559a71c14f0 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x5559a71c1410 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x5559a71c13c8 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x5559a71c13b0 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x5559a71c1370 <col:20> '_Bool' lvalue Var 0x5559a71c0220 'y$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x5559a71c13f8 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x5559a71c13e0 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x5559a71c1390 <col:38> '_Bool' lvalue Var 0x5559a71bfce8 'y$r_buff0_thd2' '_Bool'
|   |     |-ImplicitCastExpr 0x5559a71c14a8 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x5559a71c1460 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x5559a71c1430 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x5559a71c14d8 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x5559a71c14c0 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x5559a71c1488 <col:66> '_Bool' lvalue Var 0x5559a71c0220 'y$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x5559a71c1820 <line:736:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x5559a71c1558 <col:3> '_Bool' lvalue Var 0x5559a71c0318 'y$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x5559a71c1808 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x5559a71c17d8 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x5559a71c16f8 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x5559a71c1618 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x5559a71c15d0 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x5559a71c15b8 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x5559a71c1578 <col:20> '_Bool' lvalue Var 0x5559a71c0220 'y$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x5559a71c1600 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x5559a71c15e8 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x5559a71c1598 <col:38> '_Bool' lvalue Var 0x5559a71bfce8 'y$r_buff0_thd2' '_Bool'
|   |     | `-BinaryOperator 0x5559a71c16d8 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x5559a71c1690 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x5559a71c1678 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x5559a71c1638 <col:56> '_Bool' lvalue Var 0x5559a71c0318 'y$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x5559a71c16c0 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x5559a71c16a8 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x5559a71c1658 <col:74> '_Bool' lvalue Var 0x5559a71bff40 'y$r_buff1_thd2' '_Bool'
|   |     |-ImplicitCastExpr 0x5559a71c1790 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x5559a71c1748 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x5559a71c1718 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x5559a71c17c0 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x5559a71c17a8 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x5559a71c1770 <col:102> '_Bool' lvalue Var 0x5559a71c0318 'y$w_buff1_used' '_Bool'
|   |-BinaryOperator 0x5559a71c1a28 <line:737:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x5559a71c1840 <col:3> '_Bool' lvalue Var 0x5559a71bfce8 'y$r_buff0_thd2' '_Bool'
|   | `-ImplicitCastExpr 0x5559a71c1a10 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x5559a71c19e0 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x5559a71c1900 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x5559a71c18b8 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x5559a71c18a0 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x5559a71c1860 <col:20> '_Bool' lvalue Var 0x5559a71c0220 'y$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x5559a71c18e8 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x5559a71c18d0 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x5559a71c1880 <col:38> '_Bool' lvalue Var 0x5559a71bfce8 'y$r_buff0_thd2' '_Bool'
|   |     |-ImplicitCastExpr 0x5559a71c1998 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x5559a71c1950 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x5559a71c1920 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x5559a71c19c8 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x5559a71c19b0 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x5559a71c1978 <col:66> '_Bool' lvalue Var 0x5559a71bfce8 'y$r_buff0_thd2' '_Bool'
|   |-BinaryOperator 0x5559a71c1d28 <line:738:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x5559a71c1a48 <col:3> '_Bool' lvalue Var 0x5559a71bff40 'y$r_buff1_thd2' '_Bool'
|   | `-ImplicitCastExpr 0x5559a71c1d10 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x5559a71c1ce0 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x5559a71c1c00 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x5559a71c1b20 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x5559a71c1ac0 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x5559a71c1aa8 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x5559a71c1a68 <col:20> '_Bool' lvalue Var 0x5559a71c0220 'y$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x5559a71c1af0 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x5559a71c1ad8 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x5559a71c1a88 <col:38> '_Bool' lvalue Var 0x5559a71bfce8 'y$r_buff0_thd2' '_Bool'
|   |     | `-BinaryOperator 0x5559a71c1be0 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x5559a71c1b98 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x5559a71c1b80 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x5559a71c1b40 <col:56> '_Bool' lvalue Var 0x5559a71c0318 'y$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x5559a71c1bc8 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x5559a71c1bb0 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x5559a71c1b60 <col:74> '_Bool' lvalue Var 0x5559a71bff40 'y$r_buff1_thd2' '_Bool'
|   |     |-ImplicitCastExpr 0x5559a71c1c98 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x5559a71c1c50 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x5559a71c1c20 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x5559a71c1cc8 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x5559a71c1cb0 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x5559a71c1c78 <col:102> '_Bool' lvalue Var 0x5559a71bff40 'y$r_buff1_thd2' '_Bool'
|   |-CallExpr 0x5559a71c1d80 <line:739:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x5559a71c1d68 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5559a71c1d48 <col:3> 'void ()' Function 0x5559a7165f00 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x5559a71c1dd8 <line:740:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x5559a71c1dc0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5559a71c1da0 <col:3> 'void ()' Function 0x5559a7165e40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x5559a71c1e90 <line:741:3, col:41> 'int' '='
|   | |-DeclRefExpr 0x5559a71c1df8 <col:3> 'int' lvalue Var 0x5559a71bf278 '__unbuffered_cnt' 'int'
|   | `-BinaryOperator 0x5559a71c1e70 <col:22, col:41> 'int' '+'
|   |   |-ImplicitCastExpr 0x5559a71c1e58 <col:22> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x5559a71c1e18 <col:22> 'int' lvalue Var 0x5559a71bf278 '__unbuffered_cnt' 'int'
|   |   `-IntegerLiteral 0x5559a71c1e38 <col:41> 'int' 1
|   |-CallExpr 0x5559a71c1ee8 <line:742:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x5559a71c1ed0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5559a71c1eb0 <col:3> 'void ()' Function 0x5559a7165f00 '__VERIFIER_atomic_end' 'void ()'
|   `-ReturnStmt 0x5559a71c1f60 <line:743:3, col:36>
|     `-CallExpr 0x5559a71c1f40 <col:10, col:36> 'void *'
|       `-ImplicitCastExpr 0x5559a71c1f28 <col:10> 'void *(*)(void)' <FunctionToPointerDecay>
|         `-DeclRefExpr 0x5559a71c1f08 <col:10> 'void *(void)' Function 0x5559a7165958 '__VERIFIER_nondet_pointer' 'void *(void)'
|-FunctionDecl 0x5559a71c20b8 prev 0x5559a71beda0 <line:745:1, line:774:1> line:745:8 used P2 'void *(void *)'
| |-ParmVarDecl 0x5559a71c2020 <col:11, col:17> col:17 arg 'void *'
| `-CompoundStmt 0x5559a71c38e0 <line:746:1, line:774:1>
|   |-CallExpr 0x5559a71c2198 <line:747:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x5559a71c2180 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5559a71c2160 <col:3> 'void ()' Function 0x5559a7165e40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x5559a71c2210 <line:748:3, col:15> 'int' '='
|   | |-DeclRefExpr 0x5559a71c21b8 <col:3> 'int' lvalue Var 0x5559a71c02a0 'y$w_buff1' 'int'
|   | `-ImplicitCastExpr 0x5559a71c21f8 <col:15> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x5559a71c21d8 <col:15> 'int' lvalue Var 0x5559a71c01a8 'y$w_buff0' 'int'
|   |-BinaryOperator 0x5559a71c2270 <line:749:3, col:15> 'int' '='
|   | |-DeclRefExpr 0x5559a71c2230 <col:3> 'int' lvalue Var 0x5559a71c01a8 'y$w_buff0' 'int'
|   | `-IntegerLiteral 0x5559a71c2250 <col:15> 'int' 2
|   |-BinaryOperator 0x5559a71c22e8 <line:750:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x5559a71c2290 <col:3> '_Bool' lvalue Var 0x5559a71c0318 'y$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x5559a71c22d0 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x5559a71c22b0 <col:20> '_Bool' lvalue Var 0x5559a71c0220 'y$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x5559a71c2380 <line:751:3, col:27> '_Bool' '='
|   | |-DeclRefExpr 0x5559a71c2308 <col:3> '_Bool' lvalue Var 0x5559a71c0220 'y$w_buff0_used' '_Bool'
|   | `-CStyleCastExpr 0x5559a71c2358 <col:20, col:27> '_Bool' <IntegralToBoolean>
|   |   `-IntegerLiteral 0x5559a71c2328 <col:27> 'int' 1
|   |-CallExpr 0x5559a71c2508 <line:752:3, col:56> 'void'
|   | |-ImplicitCastExpr 0x5559a71c24f0 <col:3> 'void (*)(int)' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x5559a71c23a0 <col:3> 'void (int)' Function 0x5559a7165bc8 '__VERIFIER_assert' 'void (int)'
|   | `-UnaryOperator 0x5559a71c24a0 <col:21, col:55> 'int' prefix '!' cannot overflow
|   |   `-ParenExpr 0x5559a71c2480 <col:22, col:55> 'int'
|   |     `-BinaryOperator 0x5559a71c2460 <col:23, col:41> 'int' '&&'
|   |       |-ImplicitCastExpr 0x5559a71c2418 <col:23> 'int' <IntegralCast>
|   |       | `-ImplicitCastExpr 0x5559a71c2400 <col:23> '_Bool' <LValueToRValue>
|   |       |   `-DeclRefExpr 0x5559a71c23c0 <col:23> '_Bool' lvalue Var 0x5559a71c0318 'y$w_buff1_used' '_Bool'
|   |       `-ImplicitCastExpr 0x5559a71c2448 <col:41> 'int' <IntegralCast>
|   |         `-ImplicitCastExpr 0x5559a71c2430 <col:41> '_Bool' <LValueToRValue>
|   |           `-DeclRefExpr 0x5559a71c23e0 <col:41> '_Bool' lvalue Var 0x5559a71c0220 'y$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x5559a71c2588 <line:753:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x5559a71c2530 <col:3> '_Bool' lvalue Var 0x5559a71bfe50 'y$r_buff1_thd0' '_Bool'
|   | `-ImplicitCastExpr 0x5559a71c2570 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x5559a71c2550 <col:20> '_Bool' lvalue Var 0x5559a71bfbf8 'y$r_buff0_thd0' '_Bool'
|   |-BinaryOperator 0x5559a71c2600 <line:754:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x5559a71c25a8 <col:3> '_Bool' lvalue Var 0x5559a71bfec8 'y$r_buff1_thd1' '_Bool'
|   | `-ImplicitCastExpr 0x5559a71c25e8 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x5559a71c25c8 <col:20> '_Bool' lvalue Var 0x5559a71bfc70 'y$r_buff0_thd1' '_Bool'
|   |-BinaryOperator 0x5559a71c2678 <line:755:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x5559a71c2620 <col:3> '_Bool' lvalue Var 0x5559a71bff40 'y$r_buff1_thd2' '_Bool'
|   | `-ImplicitCastExpr 0x5559a71c2660 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x5559a71c2640 <col:20> '_Bool' lvalue Var 0x5559a71bfce8 'y$r_buff0_thd2' '_Bool'
|   |-BinaryOperator 0x5559a71c26f0 <line:756:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x5559a71c2698 <col:3> '_Bool' lvalue Var 0x5559a71bffb8 'y$r_buff1_thd3' '_Bool'
|   | `-ImplicitCastExpr 0x5559a71c26d8 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x5559a71c26b8 <col:20> '_Bool' lvalue Var 0x5559a71bfd60 'y$r_buff0_thd3' '_Bool'
|   |-BinaryOperator 0x5559a71c2768 <line:757:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x5559a71c2710 <col:3> '_Bool' lvalue Var 0x5559a71c0030 'y$r_buff1_thd4' '_Bool'
|   | `-ImplicitCastExpr 0x5559a71c2750 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x5559a71c2730 <col:20> '_Bool' lvalue Var 0x5559a71bfdd8 'y$r_buff0_thd4' '_Bool'
|   |-BinaryOperator 0x5559a71c2800 <line:758:3, col:27> '_Bool' '='
|   | |-DeclRefExpr 0x5559a71c2788 <col:3> '_Bool' lvalue Var 0x5559a71bfd60 'y$r_buff0_thd3' '_Bool'
|   | `-CStyleCastExpr 0x5559a71c27d8 <col:20, col:27> '_Bool' <IntegralToBoolean>
|   |   `-IntegerLiteral 0x5559a71c27a8 <col:27> 'int' 1
|   |-CallExpr 0x5559a71c2858 <line:759:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x5559a71c2840 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5559a71c2820 <col:3> 'void ()' Function 0x5559a7165f00 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x5559a71c28b0 <line:760:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x5559a71c2898 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5559a71c2878 <col:3> 'void ()' Function 0x5559a7165e40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x5559a71c2910 <line:761:3, col:7> 'int' '='
|   | |-DeclRefExpr 0x5559a71c28d0 <col:3> 'int' lvalue Var 0x5559a71c0418 'z' 'int'
|   | `-IntegerLiteral 0x5559a71c28f0 <col:7> 'int' 1
|   |-CallExpr 0x5559a71c2968 <line:762:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x5559a71c2950 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5559a71c2930 <col:3> 'void ()' Function 0x5559a7165f00 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x5559a71c29c0 <line:763:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x5559a71c29a8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5559a71c2988 <col:3> 'void ()' Function 0x5559a7165e40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x5559a71c2cb8 <line:764:3, col:103> 'int' '='
|   | |-DeclRefExpr 0x5559a71c29e0 <col:3> 'int' lvalue Var 0x5559a71bfa28 'y' 'int'
|   | `-ConditionalOperator 0x5559a71c2c88 <col:7, col:103> 'int'
|   |   |-BinaryOperator 0x5559a71c2aa0 <col:7, col:25> 'int' '&&'
|   |   | |-ImplicitCastExpr 0x5559a71c2a58 <col:7> 'int' <IntegralCast>
|   |   | | `-ImplicitCastExpr 0x5559a71c2a40 <col:7> '_Bool' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x5559a71c2a00 <col:7> '_Bool' lvalue Var 0x5559a71c0220 'y$w_buff0_used' '_Bool'
|   |   | `-ImplicitCastExpr 0x5559a71c2a88 <col:25> 'int' <IntegralCast>
|   |   |   `-ImplicitCastExpr 0x5559a71c2a70 <col:25> '_Bool' <LValueToRValue>
|   |   |     `-DeclRefExpr 0x5559a71c2a20 <col:25> '_Bool' lvalue Var 0x5559a71bfd60 'y$r_buff0_thd3' '_Bool'
|   |   |-ImplicitCastExpr 0x5559a71c2c70 <col:42> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x5559a71c2ac0 <col:42> 'int' lvalue Var 0x5559a71c01a8 'y$w_buff0' 'int'
|   |   `-ParenExpr 0x5559a71c2c50 <col:54, col:103> 'int'
|   |     `-ConditionalOperator 0x5559a71c2c20 <col:55, col:102> 'int'
|   |       |-BinaryOperator 0x5559a71c2b90 <col:55, col:73> 'int' '&&'
|   |       | |-ImplicitCastExpr 0x5559a71c2b48 <col:55> 'int' <IntegralCast>
|   |       | | `-ImplicitCastExpr 0x5559a71c2b30 <col:55> '_Bool' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x5559a71c2ae0 <col:55> '_Bool' lvalue Var 0x5559a71c0318 'y$w_buff1_used' '_Bool'
|   |       | `-ImplicitCastExpr 0x5559a71c2b78 <col:73> 'int' <IntegralCast>
|   |       |   `-ImplicitCastExpr 0x5559a71c2b60 <col:73> '_Bool' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x5559a71c2b00 <col:73> '_Bool' lvalue Var 0x5559a71bffb8 'y$r_buff1_thd3' '_Bool'
|   |       |-ImplicitCastExpr 0x5559a71c2bf0 <col:90> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x5559a71c2bb0 <col:90> 'int' lvalue Var 0x5559a71c02a0 'y$w_buff1' 'int'
|   |       `-ImplicitCastExpr 0x5559a71c2c08 <col:102> 'int' <LValueToRValue>
|   |         `-DeclRefExpr 0x5559a71c2bd0 <col:102> 'int' lvalue Var 0x5559a71bfa28 'y' 'int'
|   |-BinaryOperator 0x5559a71c2ec0 <line:765:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x5559a71c2cd8 <col:3> '_Bool' lvalue Var 0x5559a71c0220 'y$w_buff0_used' '_Bool'
|   | `-ImplicitCastExpr 0x5559a71c2ea8 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x5559a71c2e78 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x5559a71c2d98 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x5559a71c2d50 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x5559a71c2d38 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x5559a71c2cf8 <col:20> '_Bool' lvalue Var 0x5559a71c0220 'y$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x5559a71c2d80 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x5559a71c2d68 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x5559a71c2d18 <col:38> '_Bool' lvalue Var 0x5559a71bfd60 'y$r_buff0_thd3' '_Bool'
|   |     |-ImplicitCastExpr 0x5559a71c2e30 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x5559a71c2de8 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x5559a71c2db8 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x5559a71c2e60 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x5559a71c2e48 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x5559a71c2e10 <col:66> '_Bool' lvalue Var 0x5559a71c0220 'y$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x5559a71c31a8 <line:766:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x5559a71c2ee0 <col:3> '_Bool' lvalue Var 0x5559a71c0318 'y$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x5559a71c3190 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x5559a71c3160 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x5559a71c3080 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x5559a71c2fa0 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x5559a71c2f58 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x5559a71c2f40 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x5559a71c2f00 <col:20> '_Bool' lvalue Var 0x5559a71c0220 'y$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x5559a71c2f88 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x5559a71c2f70 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x5559a71c2f20 <col:38> '_Bool' lvalue Var 0x5559a71bfd60 'y$r_buff0_thd3' '_Bool'
|   |     | `-BinaryOperator 0x5559a71c3060 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x5559a71c3018 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x5559a71c3000 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x5559a71c2fc0 <col:56> '_Bool' lvalue Var 0x5559a71c0318 'y$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x5559a71c3048 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x5559a71c3030 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x5559a71c2fe0 <col:74> '_Bool' lvalue Var 0x5559a71bffb8 'y$r_buff1_thd3' '_Bool'
|   |     |-ImplicitCastExpr 0x5559a71c3118 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x5559a71c30d0 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x5559a71c30a0 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x5559a71c3148 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x5559a71c3130 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x5559a71c30f8 <col:102> '_Bool' lvalue Var 0x5559a71c0318 'y$w_buff1_used' '_Bool'
|   |-BinaryOperator 0x5559a71c33b0 <line:767:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x5559a71c31c8 <col:3> '_Bool' lvalue Var 0x5559a71bfd60 'y$r_buff0_thd3' '_Bool'
|   | `-ImplicitCastExpr 0x5559a71c3398 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x5559a71c3368 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x5559a71c3288 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x5559a71c3240 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x5559a71c3228 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x5559a71c31e8 <col:20> '_Bool' lvalue Var 0x5559a71c0220 'y$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x5559a71c3270 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x5559a71c3258 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x5559a71c3208 <col:38> '_Bool' lvalue Var 0x5559a71bfd60 'y$r_buff0_thd3' '_Bool'
|   |     |-ImplicitCastExpr 0x5559a71c3320 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x5559a71c32d8 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x5559a71c32a8 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x5559a71c3350 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x5559a71c3338 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x5559a71c3300 <col:66> '_Bool' lvalue Var 0x5559a71bfd60 'y$r_buff0_thd3' '_Bool'
|   |-BinaryOperator 0x5559a71c3698 <line:768:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x5559a71c33d0 <col:3> '_Bool' lvalue Var 0x5559a71bffb8 'y$r_buff1_thd3' '_Bool'
|   | `-ImplicitCastExpr 0x5559a71c3680 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x5559a71c3650 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x5559a71c3570 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x5559a71c3490 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x5559a71c3448 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x5559a71c3430 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x5559a71c33f0 <col:20> '_Bool' lvalue Var 0x5559a71c0220 'y$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x5559a71c3478 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x5559a71c3460 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x5559a71c3410 <col:38> '_Bool' lvalue Var 0x5559a71bfd60 'y$r_buff0_thd3' '_Bool'
|   |     | `-BinaryOperator 0x5559a71c3550 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x5559a71c3508 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x5559a71c34f0 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x5559a71c34b0 <col:56> '_Bool' lvalue Var 0x5559a71c0318 'y$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x5559a71c3538 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x5559a71c3520 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x5559a71c34d0 <col:74> '_Bool' lvalue Var 0x5559a71bffb8 'y$r_buff1_thd3' '_Bool'
|   |     |-ImplicitCastExpr 0x5559a71c3608 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x5559a71c35c0 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x5559a71c3590 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x5559a71c3638 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x5559a71c3620 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x5559a71c35e8 <col:102> '_Bool' lvalue Var 0x5559a71bffb8 'y$r_buff1_thd3' '_Bool'
|   |-CallExpr 0x5559a71c36f0 <line:769:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x5559a71c36d8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5559a71c36b8 <col:3> 'void ()' Function 0x5559a7165f00 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x5559a71c3748 <line:770:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x5559a71c3730 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5559a71c3710 <col:3> 'void ()' Function 0x5559a7165e40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x5559a71c3800 <line:771:3, col:41> 'int' '='
|   | |-DeclRefExpr 0x5559a71c3768 <col:3> 'int' lvalue Var 0x5559a71bf278 '__unbuffered_cnt' 'int'
|   | `-BinaryOperator 0x5559a71c37e0 <col:22, col:41> 'int' '+'
|   |   |-ImplicitCastExpr 0x5559a71c37c8 <col:22> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x5559a71c3788 <col:22> 'int' lvalue Var 0x5559a71bf278 '__unbuffered_cnt' 'int'
|   |   `-IntegerLiteral 0x5559a71c37a8 <col:41> 'int' 1
|   |-CallExpr 0x5559a71c3858 <line:772:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x5559a71c3840 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5559a71c3820 <col:3> 'void ()' Function 0x5559a7165f00 '__VERIFIER_atomic_end' 'void ()'
|   `-ReturnStmt 0x5559a71c38d0 <line:773:3, col:36>
|     `-CallExpr 0x5559a71c38b0 <col:10, col:36> 'void *'
|       `-ImplicitCastExpr 0x5559a71c3898 <col:10> 'void *(*)(void)' <FunctionToPointerDecay>
|         `-DeclRefExpr 0x5559a71c3878 <col:10> 'void *(void)' Function 0x5559a7165958 '__VERIFIER_nondet_pointer' 'void *(void)'
|-FunctionDecl 0x5559a71c3a78 prev 0x5559a71beef8 <line:775:1, line:797:1> line:775:8 used P3 'void *(void *)'
| |-ParmVarDecl 0x5559a71c39e0 <col:11, col:17> col:17 arg 'void *'
| `-CompoundStmt 0x5559a71c4df8 <line:776:1, line:797:1>
|   |-CallExpr 0x5559a71c3b78 <line:777:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x5559a71c3b60 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5559a71c3b40 <col:3> 'void ()' Function 0x5559a7165e40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x5559a71c3bd8 <line:778:3, col:7> 'int' '='
|   | |-DeclRefExpr 0x5559a71c3b98 <col:3> 'int' lvalue Var 0x5559a71c0418 'z' 'int'
|   | `-IntegerLiteral 0x5559a71c3bb8 <col:7> 'int' 2
|   |-CallExpr 0x5559a71c3c30 <line:779:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x5559a71c3c18 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5559a71c3bf8 <col:3> 'void ()' Function 0x5559a7165f00 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x5559a71c3c88 <line:780:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x5559a71c3c70 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5559a71c3c50 <col:3> 'void ()' Function 0x5559a7165e40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x5559a71c3d00 <line:781:3, col:25> 'int' '='
|   | |-DeclRefExpr 0x5559a71c3ca8 <col:3> 'int' lvalue Var 0x5559a71bf4b8 '__unbuffered_p3_EAX' 'int'
|   | `-ImplicitCastExpr 0x5559a71c3ce8 <col:25> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x5559a71c3cc8 <col:25> 'int' lvalue Var 0x5559a71c0418 'z' 'int'
|   |-CallExpr 0x5559a71c3d58 <line:782:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x5559a71c3d40 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5559a71c3d20 <col:3> 'void ()' Function 0x5559a7165f00 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x5559a71c3db0 <line:783:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x5559a71c3d98 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5559a71c3d78 <col:3> 'void ()' Function 0x5559a7165e40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x5559a71c3e28 <line:784:3, col:25> 'int' '='
|   | |-DeclRefExpr 0x5559a71c3dd0 <col:3> 'int' lvalue Var 0x5559a71bf5d8 '__unbuffered_p3_EBX' 'int'
|   | `-ImplicitCastExpr 0x5559a71c3e10 <col:25> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x5559a71c3df0 <col:25> 'int' lvalue Var 0x5559a71bf6f8 'a' 'int'
|   |-CallExpr 0x5559a71c3e80 <line:785:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x5559a71c3e68 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5559a71c3e48 <col:3> 'void ()' Function 0x5559a7165f00 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x5559a71c3ed8 <line:786:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x5559a71c3ec0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5559a71c3ea0 <col:3> 'void ()' Function 0x5559a7165e40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x5559a71c41c0 <line:787:3, col:103> 'int' '='
|   | |-DeclRefExpr 0x5559a71c3ef8 <col:3> 'int' lvalue Var 0x5559a71bfa28 'y' 'int'
|   | `-ConditionalOperator 0x5559a71c4190 <col:7, col:103> 'int'
|   |   |-BinaryOperator 0x5559a71c3fb8 <col:7, col:25> 'int' '&&'
|   |   | |-ImplicitCastExpr 0x5559a71c3f70 <col:7> 'int' <IntegralCast>
|   |   | | `-ImplicitCastExpr 0x5559a71c3f58 <col:7> '_Bool' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x5559a71c3f18 <col:7> '_Bool' lvalue Var 0x5559a71c0220 'y$w_buff0_used' '_Bool'
|   |   | `-ImplicitCastExpr 0x5559a71c3fa0 <col:25> 'int' <IntegralCast>
|   |   |   `-ImplicitCastExpr 0x5559a71c3f88 <col:25> '_Bool' <LValueToRValue>
|   |   |     `-DeclRefExpr 0x5559a71c3f38 <col:25> '_Bool' lvalue Var 0x5559a71bfdd8 'y$r_buff0_thd4' '_Bool'
|   |   |-ImplicitCastExpr 0x5559a71c4178 <col:42> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x5559a71c3fd8 <col:42> 'int' lvalue Var 0x5559a71c01a8 'y$w_buff0' 'int'
|   |   `-ParenExpr 0x5559a71c4158 <col:54, col:103> 'int'
|   |     `-ConditionalOperator 0x5559a71c4128 <col:55, col:102> 'int'
|   |       |-BinaryOperator 0x5559a71c4098 <col:55, col:73> 'int' '&&'
|   |       | |-ImplicitCastExpr 0x5559a71c4050 <col:55> 'int' <IntegralCast>
|   |       | | `-ImplicitCastExpr 0x5559a71c4038 <col:55> '_Bool' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x5559a71c3ff8 <col:55> '_Bool' lvalue Var 0x5559a71c0318 'y$w_buff1_used' '_Bool'
|   |       | `-ImplicitCastExpr 0x5559a71c4080 <col:73> 'int' <IntegralCast>
|   |       |   `-ImplicitCastExpr 0x5559a71c4068 <col:73> '_Bool' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x5559a71c4018 <col:73> '_Bool' lvalue Var 0x5559a71c0030 'y$r_buff1_thd4' '_Bool'
|   |       |-ImplicitCastExpr 0x5559a71c40f8 <col:90> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x5559a71c40b8 <col:90> 'int' lvalue Var 0x5559a71c02a0 'y$w_buff1' 'int'
|   |       `-ImplicitCastExpr 0x5559a71c4110 <col:102> 'int' <LValueToRValue>
|   |         `-DeclRefExpr 0x5559a71c40d8 <col:102> 'int' lvalue Var 0x5559a71bfa28 'y' 'int'
|   |-BinaryOperator 0x5559a71c43c8 <line:788:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x5559a71c41e0 <col:3> '_Bool' lvalue Var 0x5559a71c0220 'y$w_buff0_used' '_Bool'
|   | `-ImplicitCastExpr 0x5559a71c43b0 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x5559a71c4380 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x5559a71c42a0 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x5559a71c4258 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x5559a71c4240 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x5559a71c4200 <col:20> '_Bool' lvalue Var 0x5559a71c0220 'y$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x5559a71c4288 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x5559a71c4270 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x5559a71c4220 <col:38> '_Bool' lvalue Var 0x5559a71bfdd8 'y$r_buff0_thd4' '_Bool'
|   |     |-ImplicitCastExpr 0x5559a71c4338 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x5559a71c42f0 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x5559a71c42c0 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x5559a71c4368 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x5559a71c4350 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x5559a71c4318 <col:66> '_Bool' lvalue Var 0x5559a71c0220 'y$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x5559a71c46b0 <line:789:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x5559a71c43e8 <col:3> '_Bool' lvalue Var 0x5559a71c0318 'y$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x5559a71c4698 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x5559a71c4668 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x5559a71c4588 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x5559a71c44a8 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x5559a71c4460 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x5559a71c4448 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x5559a71c4408 <col:20> '_Bool' lvalue Var 0x5559a71c0220 'y$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x5559a71c4490 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x5559a71c4478 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x5559a71c4428 <col:38> '_Bool' lvalue Var 0x5559a71bfdd8 'y$r_buff0_thd4' '_Bool'
|   |     | `-BinaryOperator 0x5559a71c4568 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x5559a71c4520 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x5559a71c4508 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x5559a71c44c8 <col:56> '_Bool' lvalue Var 0x5559a71c0318 'y$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x5559a71c4550 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x5559a71c4538 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x5559a71c44e8 <col:74> '_Bool' lvalue Var 0x5559a71c0030 'y$r_buff1_thd4' '_Bool'
|   |     |-ImplicitCastExpr 0x5559a71c4620 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x5559a71c45d8 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x5559a71c45a8 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x5559a71c4650 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x5559a71c4638 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x5559a71c4600 <col:102> '_Bool' lvalue Var 0x5559a71c0318 'y$w_buff1_used' '_Bool'
|   |-BinaryOperator 0x5559a71c48b8 <line:790:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x5559a71c46d0 <col:3> '_Bool' lvalue Var 0x5559a71bfdd8 'y$r_buff0_thd4' '_Bool'
|   | `-ImplicitCastExpr 0x5559a71c48a0 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x5559a71c4870 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x5559a71c4790 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x5559a71c4748 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x5559a71c4730 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x5559a71c46f0 <col:20> '_Bool' lvalue Var 0x5559a71c0220 'y$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x5559a71c4778 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x5559a71c4760 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x5559a71c4710 <col:38> '_Bool' lvalue Var 0x5559a71bfdd8 'y$r_buff0_thd4' '_Bool'
|   |     |-ImplicitCastExpr 0x5559a71c4828 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x5559a71c47e0 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x5559a71c47b0 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x5559a71c4858 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x5559a71c4840 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x5559a71c4808 <col:66> '_Bool' lvalue Var 0x5559a71bfdd8 'y$r_buff0_thd4' '_Bool'
|   |-BinaryOperator 0x5559a71c4bb0 <line:791:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x5559a71c48d8 <col:3> '_Bool' lvalue Var 0x5559a71c0030 'y$r_buff1_thd4' '_Bool'
|   | `-ImplicitCastExpr 0x5559a71c4b98 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x5559a71c4b68 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x5559a71c4a78 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x5559a71c4998 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x5559a71c4950 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x5559a71c4938 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x5559a71c48f8 <col:20> '_Bool' lvalue Var 0x5559a71c0220 'y$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x5559a71c4980 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x5559a71c4968 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x5559a71c4918 <col:38> '_Bool' lvalue Var 0x5559a71bfdd8 'y$r_buff0_thd4' '_Bool'
|   |     | `-BinaryOperator 0x5559a71c4a58 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x5559a71c4a10 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x5559a71c49f8 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x5559a71c49b8 <col:56> '_Bool' lvalue Var 0x5559a71c0318 'y$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x5559a71c4a40 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x5559a71c4a28 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x5559a71c49d8 <col:74> '_Bool' lvalue Var 0x5559a71c0030 'y$r_buff1_thd4' '_Bool'
|   |     |-ImplicitCastExpr 0x5559a71c4b10 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x5559a71c4ac8 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x5559a71c4a98 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x5559a71c4b50 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x5559a71c4b28 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x5559a71c4af0 <col:102> '_Bool' lvalue Var 0x5559a71c0030 'y$r_buff1_thd4' '_Bool'
|   |-CallExpr 0x5559a71c4c08 <line:792:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x5559a71c4bf0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5559a71c4bd0 <col:3> 'void ()' Function 0x5559a7165f00 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x5559a71c4c60 <line:793:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x5559a71c4c48 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5559a71c4c28 <col:3> 'void ()' Function 0x5559a7165e40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x5559a71c4d18 <line:794:3, col:41> 'int' '='
|   | |-DeclRefExpr 0x5559a71c4c80 <col:3> 'int' lvalue Var 0x5559a71bf278 '__unbuffered_cnt' 'int'
|   | `-BinaryOperator 0x5559a71c4cf8 <col:22, col:41> 'int' '+'
|   |   |-ImplicitCastExpr 0x5559a71c4ce0 <col:22> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x5559a71c4ca0 <col:22> 'int' lvalue Var 0x5559a71bf278 '__unbuffered_cnt' 'int'
|   |   `-IntegerLiteral 0x5559a71c4cc0 <col:41> 'int' 1
|   |-CallExpr 0x5559a71c4d70 <line:795:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x5559a71c4d58 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5559a71c4d38 <col:3> 'void ()' Function 0x5559a7165f00 '__VERIFIER_atomic_end' 'void ()'
|   `-ReturnStmt 0x5559a71c4de8 <line:796:3, col:36>
|     `-CallExpr 0x5559a71c4dc8 <col:10, col:36> 'void *'
|       `-ImplicitCastExpr 0x5559a71c4db0 <col:10> 'void *(*)(void)' <FunctionToPointerDecay>
|         `-DeclRefExpr 0x5559a71c4d90 <col:10> 'void *(void)' Function 0x5559a7165958 '__VERIFIER_nondet_pointer' 'void *(void)'
|-FunctionDecl 0x5559a71c4ec8 prev 0x5559a71befc0 <line:798:1, line:800:1> line:798:6 fence 'void ()'
| `-CompoundStmt 0x5559a71c4f68 <line:799:1, line:800:1>
|-FunctionDecl 0x5559a71c4f98 prev 0x5559a71bf080 <line:801:1, line:803:1> line:801:6 isync 'void ()'
| `-CompoundStmt 0x5559a71c5038 <line:802:1, line:803:1>
|-FunctionDecl 0x5559a71c5068 prev 0x5559a71bf140 <line:804:1, line:806:1> line:804:6 lwfence 'void ()'
| `-CompoundStmt 0x5559a71c5108 <line:805:1, line:806:1>
`-FunctionDecl 0x5559a71c5178 <line:807:1, line:846:1> line:807:5 main 'int ()'
  `-CompoundStmt 0x5559a71c9ba0 <line:808:1, line:846:1>
    |-DeclStmt 0x5559a71c5290 <line:809:3, col:17>
    | `-VarDecl 0x5559a71c5228 <col:3, col:13> col:13 used t775 'pthread_t':'unsigned long'
    |-CallExpr 0x5559a71c5498 <line:810:3, col:53> 'int'
    | |-ImplicitCastExpr 0x5559a71c5480 <col:3> 'int (*)(pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x5559a71c52a8 <col:3> 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' Function 0x5559a71a6488 'pthread_create' 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)'
    | |-UnaryOperator 0x5559a71c52e8 <col:18, col:19> 'pthread_t *' prefix '&' cannot overflow
    | | `-DeclRefExpr 0x5559a71c52c8 <col:19> 'pthread_t':'unsigned long' lvalue Var 0x5559a71c5228 't775' 'pthread_t':'unsigned long'
    | |-ImplicitCastExpr 0x5559a71c54d8 <col:25, col:35> 'const pthread_attr_t *' <NullToPointer>
    | | `-ParenExpr 0x5559a71c5360 <col:25, col:35> 'void *'
    | |   `-CStyleCastExpr 0x5559a71c5338 <col:26, col:34> 'void *' <NullToPointer>
    | |     `-IntegerLiteral 0x5559a71c5300 <col:34> 'int' 0
    | |-ImplicitCastExpr 0x5559a71c54f0 <col:38> 'void *(*)(void *)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x5559a71c5380 <col:38> 'void *(void *)' Function 0x5559a71c0640 'P0' 'void *(void *)'
    | `-ParenExpr 0x5559a71c5400 <col:42, col:52> 'void *'
    |   `-CStyleCastExpr 0x5559a71c53d8 <col:43, col:51> 'void *' <NullToPointer>
    |     `-IntegerLiteral 0x5559a71c53a0 <col:51> 'int' 0
    |-DeclStmt 0x5559a71c5580 <line:811:3, col:17>
    | `-VarDecl 0x5559a71c5518 <col:3, col:13> col:13 used t776 'pthread_t':'unsigned long'
    |-CallExpr 0x5559a71c5728 <line:812:3, col:53> 'int'
    | |-ImplicitCastExpr 0x5559a71c5710 <col:3> 'int (*)(pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x5559a71c5598 <col:3> 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' Function 0x5559a71a6488 'pthread_create' 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)'
    | |-UnaryOperator 0x5559a71c55d8 <col:18, col:19> 'pthread_t *' prefix '&' cannot overflow
    | | `-DeclRefExpr 0x5559a71c55b8 <col:19> 'pthread_t':'unsigned long' lvalue Var 0x5559a71c5518 't776' 'pthread_t':'unsigned long'
    | |-ImplicitCastExpr 0x5559a71c5768 <col:25, col:35> 'const pthread_attr_t *' <NullToPointer>
    | | `-ParenExpr 0x5559a71c5650 <col:25, col:35> 'void *'
    | |   `-CStyleCastExpr 0x5559a71c5628 <col:26, col:34> 'void *' <NullToPointer>
    | |     `-IntegerLiteral 0x5559a71c55f0 <col:34> 'int' 0
    | |-ImplicitCastExpr 0x5559a71c5780 <col:38> 'void *(*)(void *)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x5559a71c5670 <col:38> 'void *(void *)' Function 0x5559a71c0d48 'P1' 'void *(void *)'
    | `-ParenExpr 0x5559a71c56f0 <col:42, col:52> 'void *'
    |   `-CStyleCastExpr 0x5559a71c56c8 <col:43, col:51> 'void *' <NullToPointer>
    |     `-IntegerLiteral 0x5559a71c5690 <col:51> 'int' 0
    |-DeclStmt 0x5559a71c5810 <line:813:3, col:17>
    | `-VarDecl 0x5559a71c57a8 <col:3, col:13> col:13 used t777 'pthread_t':'unsigned long'
    |-CallExpr 0x5559a71c59b8 <line:814:3, col:53> 'int'
    | |-ImplicitCastExpr 0x5559a71c59a0 <col:3> 'int (*)(pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x5559a71c5828 <col:3> 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' Function 0x5559a71a6488 'pthread_create' 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)'
    | |-UnaryOperator 0x5559a71c5868 <col:18, col:19> 'pthread_t *' prefix '&' cannot overflow
    | | `-DeclRefExpr 0x5559a71c5848 <col:19> 'pthread_t':'unsigned long' lvalue Var 0x5559a71c57a8 't777' 'pthread_t':'unsigned long'
    | |-ImplicitCastExpr 0x5559a71c59f8 <col:25, col:35> 'const pthread_attr_t *' <NullToPointer>
    | | `-ParenExpr 0x5559a71c58e0 <col:25, col:35> 'void *'
    | |   `-CStyleCastExpr 0x5559a71c58b8 <col:26, col:34> 'void *' <NullToPointer>
    | |     `-IntegerLiteral 0x5559a71c5880 <col:34> 'int' 0
    | |-ImplicitCastExpr 0x5559a71c5a10 <col:38> 'void *(*)(void *)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x5559a71c5900 <col:38> 'void *(void *)' Function 0x5559a71c20b8 'P2' 'void *(void *)'
    | `-ParenExpr 0x5559a71c5980 <col:42, col:52> 'void *'
    |   `-CStyleCastExpr 0x5559a71c5958 <col:43, col:51> 'void *' <NullToPointer>
    |     `-IntegerLiteral 0x5559a71c5920 <col:51> 'int' 0
    |-DeclStmt 0x5559a71c5aa0 <line:815:3, col:17>
    | `-VarDecl 0x5559a71c5a38 <col:3, col:13> col:13 used t778 'pthread_t':'unsigned long'
    |-CallExpr 0x5559a71c5c60 <line:816:3, col:53> 'int'
    | |-ImplicitCastExpr 0x5559a71c5c48 <col:3> 'int (*)(pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x5559a71c5ab8 <col:3> 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' Function 0x5559a71a6488 'pthread_create' 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)'
    | |-UnaryOperator 0x5559a71c5af8 <col:18, col:19> 'pthread_t *' prefix '&' cannot overflow
    | | `-DeclRefExpr 0x5559a71c5ad8 <col:19> 'pthread_t':'unsigned long' lvalue Var 0x5559a71c5a38 't778' 'pthread_t':'unsigned long'
    | |-ImplicitCastExpr 0x5559a71c5ca0 <col:25, col:35> 'const pthread_attr_t *' <NullToPointer>
    | | `-ParenExpr 0x5559a71c5b88 <col:25, col:35> 'void *'
    | |   `-CStyleCastExpr 0x5559a71c5b60 <col:26, col:34> 'void *' <NullToPointer>
    | |     `-IntegerLiteral 0x5559a71c5b10 <col:34> 'int' 0
    | |-ImplicitCastExpr 0x5559a71c5cb8 <col:38> 'void *(*)(void *)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x5559a71c5ba8 <col:38> 'void *(void *)' Function 0x5559a71c3a78 'P3' 'void *(void *)'
    | `-ParenExpr 0x5559a71c5c28 <col:42, col:52> 'void *'
    |   `-CStyleCastExpr 0x5559a71c5c00 <col:43, col:51> 'void *' <NullToPointer>
    |     `-IntegerLiteral 0x5559a71c5bc8 <col:51> 'int' 0
    |-CallExpr 0x5559a71c5d08 <line:817:3, col:27> 'void'
    | `-ImplicitCastExpr 0x5559a71c5cf0 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x5559a71c5cd0 <col:3> 'void ()' Function 0x5559a7165e40 '__VERIFIER_atomic_begin' 'void ()'
    |-BinaryOperator 0x5559a71c5dd8 <line:818:3, col:41> '_Bool' '='
    | |-DeclRefExpr 0x5559a71c5d28 <col:3> '_Bool' lvalue Var 0x5559a71bf790 'main$tmp_guard0' '_Bool'
    | `-ImplicitCastExpr 0x5559a71c5dc0 <col:21, col:41> '_Bool' <IntegralToBoolean>
    |   `-BinaryOperator 0x5559a71c5da0 <col:21, col:41> 'int' '=='
    |     |-ImplicitCastExpr 0x5559a71c5d88 <col:21> 'int' <LValueToRValue>
    |     | `-DeclRefExpr 0x5559a71c5d48 <col:21> 'int' lvalue Var 0x5559a71bf278 '__unbuffered_cnt' 'int'
    |     `-IntegerLiteral 0x5559a71c5d68 <col:41> 'int' 4
    |-CallExpr 0x5559a71c5e30 <line:819:3, col:25> 'void'
    | `-ImplicitCastExpr 0x5559a71c5e18 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x5559a71c5df8 <col:3> 'void ()' Function 0x5559a7165f00 '__VERIFIER_atomic_end' 'void ()'
    |-CallExpr 0x5559a71c5ea8 <line:820:3, col:36> 'void'
    | |-ImplicitCastExpr 0x5559a71c5e90 <col:3> 'void (*)(int)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x5559a71c5e50 <col:3> 'void (int)' Function 0x5559a7165790 '__VERIFIER_assume' 'void (int)'
    | `-ImplicitCastExpr 0x5559a71c5ee8 <col:21> 'int' <IntegralCast>
    |   `-ImplicitCastExpr 0x5559a71c5ed0 <col:21> '_Bool' <LValueToRValue>
    |     `-DeclRefExpr 0x5559a71c5e70 <col:21> '_Bool' lvalue Var 0x5559a71bf790 'main$tmp_guard0' '_Bool'
    |-CallExpr 0x5559a71c5f38 <line:821:3, col:27> 'void'
    | `-ImplicitCastExpr 0x5559a71c5f20 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x5559a71c5f00 <col:3> 'void ()' Function 0x5559a7165e40 '__VERIFIER_atomic_begin' 'void ()'
    |-BinaryOperator 0x5559a71c6220 <line:822:3, col:103> 'int' '='
    | |-DeclRefExpr 0x5559a71c5f58 <col:3> 'int' lvalue Var 0x5559a71bfa28 'y' 'int'
    | `-ConditionalOperator 0x5559a71c61f0 <col:7, col:103> 'int'
    |   |-BinaryOperator 0x5559a71c6018 <col:7, col:25> 'int' '&&'
    |   | |-ImplicitCastExpr 0x5559a71c5fd0 <col:7> 'int' <IntegralCast>
    |   | | `-ImplicitCastExpr 0x5559a71c5fb8 <col:7> '_Bool' <LValueToRValue>
    |   | |   `-DeclRefExpr 0x5559a71c5f78 <col:7> '_Bool' lvalue Var 0x5559a71c0220 'y$w_buff0_used' '_Bool'
    |   | `-ImplicitCastExpr 0x5559a71c6000 <col:25> 'int' <IntegralCast>
    |   |   `-ImplicitCastExpr 0x5559a71c5fe8 <col:25> '_Bool' <LValueToRValue>
    |   |     `-DeclRefExpr 0x5559a71c5f98 <col:25> '_Bool' lvalue Var 0x5559a71bfbf8 'y$r_buff0_thd0' '_Bool'
    |   |-ImplicitCastExpr 0x5559a71c61d8 <col:42> 'int' <LValueToRValue>
    |   | `-DeclRefExpr 0x5559a71c6038 <col:42> 'int' lvalue Var 0x5559a71c01a8 'y$w_buff0' 'int'
    |   `-ParenExpr 0x5559a71c61b8 <col:54, col:103> 'int'
    |     `-ConditionalOperator 0x5559a71c6188 <col:55, col:102> 'int'
    |       |-BinaryOperator 0x5559a71c60f8 <col:55, col:73> 'int' '&&'
    |       | |-ImplicitCastExpr 0x5559a71c60b0 <col:55> 'int' <IntegralCast>
    |       | | `-ImplicitCastExpr 0x5559a71c6098 <col:55> '_Bool' <LValueToRValue>
    |       | |   `-DeclRefExpr 0x5559a71c6058 <col:55> '_Bool' lvalue Var 0x5559a71c0318 'y$w_buff1_used' '_Bool'
    |       | `-ImplicitCastExpr 0x5559a71c60e0 <col:73> 'int' <IntegralCast>
    |       |   `-ImplicitCastExpr 0x5559a71c60c8 <col:73> '_Bool' <LValueToRValue>
    |       |     `-DeclRefExpr 0x5559a71c6078 <col:73> '_Bool' lvalue Var 0x5559a71bfe50 'y$r_buff1_thd0' '_Bool'
    |       |-ImplicitCastExpr 0x5559a71c6158 <col:90> 'int' <LValueToRValue>
    |       | `-DeclRefExpr 0x5559a71c6118 <col:90> 'int' lvalue Var 0x5559a71c02a0 'y$w_buff1' 'int'
    |       `-ImplicitCastExpr 0x5559a71c6170 <col:102> 'int' <LValueToRValue>
    |         `-DeclRefExpr 0x5559a71c6138 <col:102> 'int' lvalue Var 0x5559a71bfa28 'y' 'int'
    |-BinaryOperator 0x5559a71c6428 <line:823:3, col:66> '_Bool' '='
    | |-DeclRefExpr 0x5559a71c6240 <col:3> '_Bool' lvalue Var 0x5559a71c0220 'y$w_buff0_used' '_Bool'
    | `-ImplicitCastExpr 0x5559a71c6410 <col:20, col:66> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x5559a71c63e0 <col:20, col:66> 'int'
    |     |-BinaryOperator 0x5559a71c6300 <col:20, col:38> 'int' '&&'
    |     | |-ImplicitCastExpr 0x5559a71c62b8 <col:20> 'int' <IntegralCast>
    |     | | `-ImplicitCastExpr 0x5559a71c62a0 <col:20> '_Bool' <LValueToRValue>
    |     | |   `-DeclRefExpr 0x5559a71c6260 <col:20> '_Bool' lvalue Var 0x5559a71c0220 'y$w_buff0_used' '_Bool'
    |     | `-ImplicitCastExpr 0x5559a71c62e8 <col:38> 'int' <IntegralCast>
    |     |   `-ImplicitCastExpr 0x5559a71c62d0 <col:38> '_Bool' <LValueToRValue>
    |     |     `-DeclRefExpr 0x5559a71c6280 <col:38> '_Bool' lvalue Var 0x5559a71bfbf8 'y$r_buff0_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x5559a71c6398 <col:55, col:62> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x5559a71c6350 <col:55, col:62> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x5559a71c6320 <col:62> 'int' 0
    |     `-ImplicitCastExpr 0x5559a71c63c8 <col:66> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x5559a71c63b0 <col:66> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x5559a71c6378 <col:66> '_Bool' lvalue Var 0x5559a71c0220 'y$w_buff0_used' '_Bool'
    |-BinaryOperator 0x5559a71c6710 <line:824:3, col:102> '_Bool' '='
    | |-DeclRefExpr 0x5559a71c6448 <col:3> '_Bool' lvalue Var 0x5559a71c0318 'y$w_buff1_used' '_Bool'
    | `-ImplicitCastExpr 0x5559a71c66f8 <col:20, col:102> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x5559a71c66c8 <col:20, col:102> 'int'
    |     |-BinaryOperator 0x5559a71c65e8 <col:20, col:74> 'int' '||'
    |     | |-BinaryOperator 0x5559a71c6508 <col:20, col:38> 'int' '&&'
    |     | | |-ImplicitCastExpr 0x5559a71c64c0 <col:20> 'int' <IntegralCast>
    |     | | | `-ImplicitCastExpr 0x5559a71c64a8 <col:20> '_Bool' <LValueToRValue>
    |     | | |   `-DeclRefExpr 0x5559a71c6468 <col:20> '_Bool' lvalue Var 0x5559a71c0220 'y$w_buff0_used' '_Bool'
    |     | | `-ImplicitCastExpr 0x5559a71c64f0 <col:38> 'int' <IntegralCast>
    |     | |   `-ImplicitCastExpr 0x5559a71c64d8 <col:38> '_Bool' <LValueToRValue>
    |     | |     `-DeclRefExpr 0x5559a71c6488 <col:38> '_Bool' lvalue Var 0x5559a71bfbf8 'y$r_buff0_thd0' '_Bool'
    |     | `-BinaryOperator 0x5559a71c65c8 <col:56, col:74> 'int' '&&'
    |     |   |-ImplicitCastExpr 0x5559a71c6580 <col:56> 'int' <IntegralCast>
    |     |   | `-ImplicitCastExpr 0x5559a71c6568 <col:56> '_Bool' <LValueToRValue>
    |     |   |   `-DeclRefExpr 0x5559a71c6528 <col:56> '_Bool' lvalue Var 0x5559a71c0318 'y$w_buff1_used' '_Bool'
    |     |   `-ImplicitCastExpr 0x5559a71c65b0 <col:74> 'int' <IntegralCast>
    |     |     `-ImplicitCastExpr 0x5559a71c6598 <col:74> '_Bool' <LValueToRValue>
    |     |       `-DeclRefExpr 0x5559a71c6548 <col:74> '_Bool' lvalue Var 0x5559a71bfe50 'y$r_buff1_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x5559a71c6680 <col:91, col:98> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x5559a71c6638 <col:91, col:98> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x5559a71c6608 <col:98> 'int' 0
    |     `-ImplicitCastExpr 0x5559a71c66b0 <col:102> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x5559a71c6698 <col:102> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x5559a71c6660 <col:102> '_Bool' lvalue Var 0x5559a71c0318 'y$w_buff1_used' '_Bool'
    |-BinaryOperator 0x5559a71c6918 <line:825:3, col:66> '_Bool' '='
    | |-DeclRefExpr 0x5559a71c6730 <col:3> '_Bool' lvalue Var 0x5559a71bfbf8 'y$r_buff0_thd0' '_Bool'
    | `-ImplicitCastExpr 0x5559a71c6900 <col:20, col:66> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x5559a71c68d0 <col:20, col:66> 'int'
    |     |-BinaryOperator 0x5559a71c67f0 <col:20, col:38> 'int' '&&'
    |     | |-ImplicitCastExpr 0x5559a71c67a8 <col:20> 'int' <IntegralCast>
    |     | | `-ImplicitCastExpr 0x5559a71c6790 <col:20> '_Bool' <LValueToRValue>
    |     | |   `-DeclRefExpr 0x5559a71c6750 <col:20> '_Bool' lvalue Var 0x5559a71c0220 'y$w_buff0_used' '_Bool'
    |     | `-ImplicitCastExpr 0x5559a71c67d8 <col:38> 'int' <IntegralCast>
    |     |   `-ImplicitCastExpr 0x5559a71c67c0 <col:38> '_Bool' <LValueToRValue>
    |     |     `-DeclRefExpr 0x5559a71c6770 <col:38> '_Bool' lvalue Var 0x5559a71bfbf8 'y$r_buff0_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x5559a71c6888 <col:55, col:62> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x5559a71c6840 <col:55, col:62> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x5559a71c6810 <col:62> 'int' 0
    |     `-ImplicitCastExpr 0x5559a71c68b8 <col:66> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x5559a71c68a0 <col:66> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x5559a71c6868 <col:66> '_Bool' lvalue Var 0x5559a71bfbf8 'y$r_buff0_thd0' '_Bool'
    |-BinaryOperator 0x5559a71c6c20 <line:826:3, col:102> '_Bool' '='
    | |-DeclRefExpr 0x5559a71c6938 <col:3> '_Bool' lvalue Var 0x5559a71bfe50 'y$r_buff1_thd0' '_Bool'
    | `-ImplicitCastExpr 0x5559a71c6c08 <col:20, col:102> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x5559a71c6bd8 <col:20, col:102> 'int'
    |     |-BinaryOperator 0x5559a71c6ad8 <col:20, col:74> 'int' '||'
    |     | |-BinaryOperator 0x5559a71c69f8 <col:20, col:38> 'int' '&&'
    |     | | |-ImplicitCastExpr 0x5559a71c69b0 <col:20> 'int' <IntegralCast>
    |     | | | `-ImplicitCastExpr 0x5559a71c6998 <col:20> '_Bool' <LValueToRValue>
    |     | | |   `-DeclRefExpr 0x5559a71c6958 <col:20> '_Bool' lvalue Var 0x5559a71c0220 'y$w_buff0_used' '_Bool'
    |     | | `-ImplicitCastExpr 0x5559a71c69e0 <col:38> 'int' <IntegralCast>
    |     | |   `-ImplicitCastExpr 0x5559a71c69c8 <col:38> '_Bool' <LValueToRValue>
    |     | |     `-DeclRefExpr 0x5559a71c6978 <col:38> '_Bool' lvalue Var 0x5559a71bfbf8 'y$r_buff0_thd0' '_Bool'
    |     | `-BinaryOperator 0x5559a71c6ab8 <col:56, col:74> 'int' '&&'
    |     |   |-ImplicitCastExpr 0x5559a71c6a70 <col:56> 'int' <IntegralCast>
    |     |   | `-ImplicitCastExpr 0x5559a71c6a58 <col:56> '_Bool' <LValueToRValue>
    |     |   |   `-DeclRefExpr 0x5559a71c6a18 <col:56> '_Bool' lvalue Var 0x5559a71c0318 'y$w_buff1_used' '_Bool'
    |     |   `-ImplicitCastExpr 0x5559a71c6aa0 <col:74> 'int' <IntegralCast>
    |     |     `-ImplicitCastExpr 0x5559a71c6a88 <col:74> '_Bool' <LValueToRValue>
    |     |       `-DeclRefExpr 0x5559a71c6a38 <col:74> '_Bool' lvalue Var 0x5559a71bfe50 'y$r_buff1_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x5559a71c6b90 <col:91, col:98> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x5559a71c6b28 <col:91, col:98> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x5559a71c6af8 <col:98> 'int' 0
    |     `-ImplicitCastExpr 0x5559a71c6bc0 <col:102> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x5559a71c6ba8 <col:102> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x5559a71c6b70 <col:102> '_Bool' lvalue Var 0x5559a71bfe50 'y$r_buff1_thd0' '_Bool'
    |-CallExpr 0x5559a71c6c78 <line:827:3, col:25> 'void'
    | `-ImplicitCastExpr 0x5559a71c6c60 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x5559a71c6c40 <col:3> 'void ()' Function 0x5559a7165f00 '__VERIFIER_atomic_end' 'void ()'
    |-CallExpr 0x5559a71c6cd0 <line:828:3, col:27> 'void'
    | `-ImplicitCastExpr 0x5559a71c6cb8 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x5559a71c6c98 <col:3> 'void ()' Function 0x5559a7165e40 '__VERIFIER_atomic_begin' 'void ()'
    |-BinaryOperator 0x5559a71c6d80 <line:829:3, col:45> '_Bool' '='
    | |-DeclRefExpr 0x5559a71c6cf0 <col:3> '_Bool' lvalue Var 0x5559a71c04b0 'weak$$choice0' '_Bool'
    | `-ImplicitCastExpr 0x5559a71c6d68 <col:19, col:45> '_Bool' <PointerToBoolean>
    |   `-CallExpr 0x5559a71c6d48 <col:19, col:45> 'void *'
    |     `-ImplicitCastExpr 0x5559a71c6d30 <col:19> 'void *(*)(void)' <FunctionToPointerDecay>
    |       `-DeclRefExpr 0x5559a71c6d10 <col:19> 'void *(void)' Function 0x5559a7165958 '__VERIFIER_nondet_pointer' 'void *(void)'
    |-BinaryOperator 0x5559a71c6e30 <line:830:3, col:45> '_Bool' '='
    | |-DeclRefExpr 0x5559a71c6da0 <col:3> '_Bool' lvalue Var 0x5559a71c0528 'weak$$choice2' '_Bool'
    | `-ImplicitCastExpr 0x5559a71c6e18 <col:19, col:45> '_Bool' <PointerToBoolean>
    |   `-CallExpr 0x5559a71c6df8 <col:19, col:45> 'void *'
    |     `-ImplicitCastExpr 0x5559a71c6de0 <col:19> 'void *(*)(void)' <FunctionToPointerDecay>
    |       `-DeclRefExpr 0x5559a71c6dc0 <col:19> 'void *(void)' Function 0x5559a7165958 '__VERIFIER_nondet_pointer' 'void *(void)'
    |-BinaryOperator 0x5559a71c6ea8 <line:831:3, col:21> '_Bool' '='
    | |-DeclRefExpr 0x5559a71c6e50 <col:3> '_Bool' lvalue Var 0x5559a71bfb00 'y$flush_delayed' '_Bool'
    | `-ImplicitCastExpr 0x5559a71c6e90 <col:21> '_Bool' <LValueToRValue>
    |   `-DeclRefExpr 0x5559a71c6e70 <col:21> '_Bool' lvalue Var 0x5559a71c0528 'weak$$choice2' '_Bool'
    |-BinaryOperator 0x5559a71c6f20 <line:832:3, col:15> 'int' '='
    | |-DeclRefExpr 0x5559a71c6ec8 <col:3> 'int' lvalue Var 0x5559a71bfb80 'y$mem_tmp' 'int'
    | `-ImplicitCastExpr 0x5559a71c6f08 <col:15> 'int' <LValueToRValue>
    |   `-DeclRefExpr 0x5559a71c6ee8 <col:15> 'int' lvalue Var 0x5559a71bfa28 'y' 'int'
    |-BinaryOperator 0x5559a71c7358 <line:833:3, col:162> 'int' '='
    | |-DeclRefExpr 0x5559a71c6f40 <col:3> 'int' lvalue Var 0x5559a71bfa28 'y' 'int'
    | `-ConditionalOperator 0x5559a71c7328 <col:7, col:162> 'int'
    |   |-BinaryOperator 0x5559a71c7150 <col:7, col:84> 'int' '||'
    |   | |-BinaryOperator 0x5559a71c7070 <col:7, col:46> 'int' '||'
    |   | | |-UnaryOperator 0x5559a71c6f98 <col:7, col:8> 'int' prefix '!' cannot overflow
    |   | | | `-ImplicitCastExpr 0x5559a71c6f80 <col:8> '_Bool' <LValueToRValue>
    |   | | |   `-DeclRefExpr 0x5559a71c6f60 <col:8> '_Bool' lvalue Var 0x5559a71c0220 'y$w_buff0_used' '_Bool'
    |   | | `-BinaryOperator 0x5559a71c7050 <col:26, col:46> 'int' '&&'
    |   | |   |-UnaryOperator 0x5559a71c6fe8 <col:26, col:27> 'int' prefix '!' cannot overflow
    |   | |   | `-ImplicitCastExpr 0x5559a71c6fd0 <col:27> '_Bool' <LValueToRValue>
    |   | |   |   `-DeclRefExpr 0x5559a71c6fb0 <col:27> '_Bool' lvalue Var 0x5559a71bfbf8 'y$r_buff0_thd0' '_Bool'
    |   | |   `-UnaryOperator 0x5559a71c7038 <col:45, col:46> 'int' prefix '!' cannot overflow
    |   | |     `-ImplicitCastExpr 0x5559a71c7020 <col:46> '_Bool' <LValueToRValue>
    |   | |       `-DeclRefExpr 0x5559a71c7000 <col:46> '_Bool' lvalue Var 0x5559a71c0318 'y$w_buff1_used' '_Bool'
    |   | `-BinaryOperator 0x5559a71c7130 <col:64, col:84> 'int' '&&'
    |   |   |-UnaryOperator 0x5559a71c70c8 <col:64, col:65> 'int' prefix '!' cannot overflow
    |   |   | `-ImplicitCastExpr 0x5559a71c70b0 <col:65> '_Bool' <LValueToRValue>
    |   |   |   `-DeclRefExpr 0x5559a71c7090 <col:65> '_Bool' lvalue Var 0x5559a71bfbf8 'y$r_buff0_thd0' '_Bool'
    |   |   `-UnaryOperator 0x5559a71c7118 <col:83, col:84> 'int' prefix '!' cannot overflow
    |   |     `-ImplicitCastExpr 0x5559a71c7100 <col:84> '_Bool' <LValueToRValue>
    |   |       `-DeclRefExpr 0x5559a71c70e0 <col:84> '_Bool' lvalue Var 0x5559a71bfe50 'y$r_buff1_thd0' '_Bool'
    |   |-ImplicitCastExpr 0x5559a71c7310 <col:101> 'int' <LValueToRValue>
    |   | `-DeclRefExpr 0x5559a71c7170 <col:101> 'int' lvalue Var 0x5559a71bfa28 'y' 'int'
    |   `-ParenExpr 0x5559a71c72f0 <col:105, col:162> 'int'
    |     `-ConditionalOperator 0x5559a71c72c0 <col:106, col:153> 'int'
    |       |-BinaryOperator 0x5559a71c7230 <col:106, col:124> 'int' '&&'
    |       | |-ImplicitCastExpr 0x5559a71c71e8 <col:106> 'int' <IntegralCast>
    |       | | `-ImplicitCastExpr 0x5559a71c71d0 <col:106> '_Bool' <LValueToRValue>
    |       | |   `-DeclRefExpr 0x5559a71c7190 <col:106> '_Bool' lvalue Var 0x5559a71c0220 'y$w_buff0_used' '_Bool'
    |       | `-ImplicitCastExpr 0x5559a71c7218 <col:124> 'int' <IntegralCast>
    |       |   `-ImplicitCastExpr 0x5559a71c7200 <col:124> '_Bool' <LValueToRValue>
    |       |     `-DeclRefExpr 0x5559a71c71b0 <col:124> '_Bool' lvalue Var 0x5559a71bfbf8 'y$r_buff0_thd0' '_Bool'
    |       |-ImplicitCastExpr 0x5559a71c7290 <col:141> 'int' <LValueToRValue>
    |       | `-DeclRefExpr 0x5559a71c7250 <col:141> 'int' lvalue Var 0x5559a71c01a8 'y$w_buff0' 'int'
    |       `-ImplicitCastExpr 0x5559a71c72a8 <col:153> 'int' <LValueToRValue>
    |         `-DeclRefExpr 0x5559a71c7270 <col:153> 'int' lvalue Var 0x5559a71c02a0 'y$w_buff1' 'int'
    |-BinaryOperator 0x5559a71c7868 <line:834:3, col:208> 'int' '='
    | |-DeclRefExpr 0x5559a71c7378 <col:3> 'int' lvalue Var 0x5559a71c01a8 'y$w_buff0' 'int'
    | `-ConditionalOperator 0x5559a71c7838 <col:15, col:208> 'int'
    |   |-ImplicitCastExpr 0x5559a71c7808 <col:15> 'int' <IntegralCast>
    |   | `-ImplicitCastExpr 0x5559a71c77f0 <col:15> '_Bool' <LValueToRValue>
    |   |   `-DeclRefExpr 0x5559a71c7398 <col:15> '_Bool' lvalue Var 0x5559a71c0528 'weak$$choice2' '_Bool'
    |   |-ImplicitCastExpr 0x5559a71c7820 <col:31> 'int' <LValueToRValue>
    |   | `-DeclRefExpr 0x5559a71c73b8 <col:31> 'int' lvalue Var 0x5559a71c01a8 'y$w_buff0' 'int'
    |   `-ParenExpr 0x5559a71c77d0 <col:43, col:208> 'int'
    |     `-ConditionalOperator 0x5559a71c77a0 <col:44, col:207> 'int'
    |       |-BinaryOperator 0x5559a71c75c8 <col:44, col:121> 'int' '||'
    |       | |-BinaryOperator 0x5559a71c74e8 <col:44, col:83> 'int' '||'
    |       | | |-UnaryOperator 0x5559a71c7410 <col:44, col:45> 'int' prefix '!' cannot overflow
    |       | | | `-ImplicitCastExpr 0x5559a71c73f8 <col:45> '_Bool' <LValueToRValue>
    |       | | |   `-DeclRefExpr 0x5559a71c73d8 <col:45> '_Bool' lvalue Var 0x5559a71c0220 'y$w_buff0_used' '_Bool'
    |       | | `-BinaryOperator 0x5559a71c74c8 <col:63, col:83> 'int' '&&'
    |       | |   |-UnaryOperator 0x5559a71c7460 <col:63, col:64> 'int' prefix '!' cannot overflow
    |       | |   | `-ImplicitCastExpr 0x5559a71c7448 <col:64> '_Bool' <LValueToRValue>
    |       | |   |   `-DeclRefExpr 0x5559a71c7428 <col:64> '_Bool' lvalue Var 0x5559a71bfbf8 'y$r_buff0_thd0' '_Bool'
    |       | |   `-UnaryOperator 0x5559a71c74b0 <col:82, col:83> 'int' prefix '!' cannot overflow
    |       | |     `-ImplicitCastExpr 0x5559a71c7498 <col:83> '_Bool' <LValueToRValue>
    |       | |       `-DeclRefExpr 0x5559a71c7478 <col:83> '_Bool' lvalue Var 0x5559a71c0318 'y$w_buff1_used' '_Bool'
    |       | `-BinaryOperator 0x5559a71c75a8 <col:101, col:121> 'int' '&&'
    |       |   |-UnaryOperator 0x5559a71c7540 <col:101, col:102> 'int' prefix '!' cannot overflow
    |       |   | `-ImplicitCastExpr 0x5559a71c7528 <col:102> '_Bool' <LValueToRValue>
    |       |   |   `-DeclRefExpr 0x5559a71c7508 <col:102> '_Bool' lvalue Var 0x5559a71bfbf8 'y$r_buff0_thd0' '_Bool'
    |       |   `-UnaryOperator 0x5559a71c7590 <col:120, col:121> 'int' prefix '!' cannot overflow
    |       |     `-ImplicitCastExpr 0x5559a71c7578 <col:121> '_Bool' <LValueToRValue>
    |       |       `-DeclRefExpr 0x5559a71c7558 <col:121> '_Bool' lvalue Var 0x5559a71bfe50 'y$r_buff1_thd0' '_Bool'
    |       |-ImplicitCastExpr 0x5559a71c7788 <col:138> 'int' <LValueToRValue>
    |       | `-DeclRefExpr 0x5559a71c75e8 <col:138> 'int' lvalue Var 0x5559a71c01a8 'y$w_buff0' 'int'
    |       `-ParenExpr 0x5559a71c7768 <col:150, col:207> 'int'
    |         `-ConditionalOperator 0x5559a71c7738 <col:151, col:198> 'int'
    |           |-BinaryOperator 0x5559a71c76a8 <col:151, col:169> 'int' '&&'
    |           | |-ImplicitCastExpr 0x5559a71c7660 <col:151> 'int' <IntegralCast>
    |           | | `-ImplicitCastExpr 0x5559a71c7648 <col:151> '_Bool' <LValueToRValue>
    |           | |   `-DeclRefExpr 0x5559a71c7608 <col:151> '_Bool' lvalue Var 0x5559a71c0220 'y$w_buff0_used' '_Bool'
    |           | `-ImplicitCastExpr 0x5559a71c7690 <col:169> 'int' <IntegralCast>
    |           |   `-ImplicitCastExpr 0x5559a71c7678 <col:169> '_Bool' <LValueToRValue>
    |           |     `-DeclRefExpr 0x5559a71c7628 <col:169> '_Bool' lvalue Var 0x5559a71bfbf8 'y$r_buff0_thd0' '_Bool'
    |           |-ImplicitCastExpr 0x5559a71c7708 <col:186> 'int' <LValueToRValue>
    |           | `-DeclRefExpr 0x5559a71c76c8 <col:186> 'int' lvalue Var 0x5559a71c01a8 'y$w_buff0' 'int'
    |           `-ImplicitCastExpr 0x5559a71c7720 <col:198> 'int' <LValueToRValue>
    |             `-DeclRefExpr 0x5559a71c76e8 <col:198> 'int' lvalue Var 0x5559a71c01a8 'y$w_buff0' 'int'
    |-BinaryOperator 0x5559a71c7d88 <line:835:3, col:208> 'int' '='
    | |-DeclRefExpr 0x5559a71c7888 <col:3> 'int' lvalue Var 0x5559a71c02a0 'y$w_buff1' 'int'
    | `-ConditionalOperator 0x5559a71c7d58 <col:15, col:208> 'int'
    |   |-ImplicitCastExpr 0x5559a71c7d28 <col:15> 'int' <IntegralCast>
    |   | `-ImplicitCastExpr 0x5559a71c7d10 <col:15> '_Bool' <LValueToRValue>
    |   |   `-DeclRefExpr 0x5559a71c78a8 <col:15> '_Bool' lvalue Var 0x5559a71c0528 'weak$$choice2' '_Bool'
    |   |-ImplicitCastExpr 0x5559a71c7d40 <col:31> 'int' <LValueToRValue>
    |   | `-DeclRefExpr 0x5559a71c78c8 <col:31> 'int' lvalue Var 0x5559a71c02a0 'y$w_buff1' 'int'
    |   `-ParenExpr 0x5559a71c7cf0 <col:43, col:208> 'int'
    |     `-ConditionalOperator 0x5559a71c7cc0 <col:44, col:207> 'int'
    |       |-BinaryOperator 0x5559a71c7ad8 <col:44, col:121> 'int' '||'
    |       | |-BinaryOperator 0x5559a71c79f8 <col:44, col:83> 'int' '||'
    |       | | |-UnaryOperator 0x5559a71c7920 <col:44, col:45> 'int' prefix '!' cannot overflow
    |       | | | `-ImplicitCastExpr 0x5559a71c7908 <col:45> '_Bool' <LValueToRValue>
    |       | | |   `-DeclRefExpr 0x5559a71c78e8 <col:45> '_Bool' lvalue Var 0x5559a71c0220 'y$w_buff0_used' '_Bool'
    |       | | `-BinaryOperator 0x5559a71c79d8 <col:63, col:83> 'int' '&&'
    |       | |   |-UnaryOperator 0x5559a71c7970 <col:63, col:64> 'int' prefix '!' cannot overflow
    |       | |   | `-ImplicitCastExpr 0x5559a71c7958 <col:64> '_Bool' <LValueToRValue>
    |       | |   |   `-DeclRefExpr 0x5559a71c7938 <col:64> '_Bool' lvalue Var 0x5559a71bfbf8 'y$r_buff0_thd0' '_Bool'
    |       | |   `-UnaryOperator 0x5559a71c79c0 <col:82, col:83> 'int' prefix '!' cannot overflow
    |       | |     `-ImplicitCastExpr 0x5559a71c79a8 <col:83> '_Bool' <LValueToRValue>
    |       | |       `-DeclRefExpr 0x5559a71c7988 <col:83> '_Bool' lvalue Var 0x5559a71c0318 'y$w_buff1_used' '_Bool'
    |       | `-BinaryOperator 0x5559a71c7ab8 <col:101, col:121> 'int' '&&'
    |       |   |-UnaryOperator 0x5559a71c7a50 <col:101, col:102> 'int' prefix '!' cannot overflow
    |       |   | `-ImplicitCastExpr 0x5559a71c7a38 <col:102> '_Bool' <LValueToRValue>
    |       |   |   `-DeclRefExpr 0x5559a71c7a18 <col:102> '_Bool' lvalue Var 0x5559a71bfbf8 'y$r_buff0_thd0' '_Bool'
    |       |   `-UnaryOperator 0x5559a71c7aa0 <col:120, col:121> 'int' prefix '!' cannot overflow
    |       |     `-ImplicitCastExpr 0x5559a71c7a88 <col:121> '_Bool' <LValueToRValue>
    |       |       `-DeclRefExpr 0x5559a71c7a68 <col:121> '_Bool' lvalue Var 0x5559a71bfe50 'y$r_buff1_thd0' '_Bool'
    |       |-ImplicitCastExpr 0x5559a71c7ca8 <col:138> 'int' <LValueToRValue>
    |       | `-DeclRefExpr 0x5559a71c7af8 <col:138> 'int' lvalue Var 0x5559a71c02a0 'y$w_buff1' 'int'
    |       `-ParenExpr 0x5559a71c7c88 <col:150, col:207> 'int'
    |         `-ConditionalOperator 0x5559a71c7c58 <col:151, col:198> 'int'
    |           |-BinaryOperator 0x5559a71c7bc8 <col:151, col:169> 'int' '&&'
    |           | |-ImplicitCastExpr 0x5559a71c7b80 <col:151> 'int' <IntegralCast>
    |           | | `-ImplicitCastExpr 0x5559a71c7b58 <col:151> '_Bool' <LValueToRValue>
    |           | |   `-DeclRefExpr 0x5559a71c7b18 <col:151> '_Bool' lvalue Var 0x5559a71c0220 'y$w_buff0_used' '_Bool'
    |           | `-ImplicitCastExpr 0x5559a71c7bb0 <col:169> 'int' <IntegralCast>
    |           |   `-ImplicitCastExpr 0x5559a71c7b98 <col:169> '_Bool' <LValueToRValue>
    |           |     `-DeclRefExpr 0x5559a71c7b38 <col:169> '_Bool' lvalue Var 0x5559a71bfbf8 'y$r_buff0_thd0' '_Bool'
    |           |-ImplicitCastExpr 0x5559a71c7c28 <col:186> 'int' <LValueToRValue>
    |           | `-DeclRefExpr 0x5559a71c7be8 <col:186> 'int' lvalue Var 0x5559a71c02a0 'y$w_buff1' 'int'
    |           `-ImplicitCastExpr 0x5559a71c7c40 <col:198> 'int' <LValueToRValue>
    |             `-DeclRefExpr 0x5559a71c7c08 <col:198> 'int' lvalue Var 0x5559a71c02a0 'y$w_buff1' 'int'
    |-BinaryOperator 0x5559a71c8330 <line:836:3, col:227> '_Bool' '='
    | |-DeclRefExpr 0x5559a71c7da8 <col:3> '_Bool' lvalue Var 0x5559a71c0220 'y$w_buff0_used' '_Bool'
    | `-ImplicitCastExpr 0x5559a71c8318 <col:20, col:227> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x5559a71c82e8 <col:20, col:227> 'int'
    |     |-ImplicitCastExpr 0x5559a71c82a0 <col:20> 'int' <IntegralCast>
    |     | `-ImplicitCastExpr 0x5559a71c8288 <col:20> '_Bool' <LValueToRValue>
    |     |   `-DeclRefExpr 0x5559a71c7dc8 <col:20> '_Bool' lvalue Var 0x5559a71c0528 'weak$$choice2' '_Bool'
    |     |-ImplicitCastExpr 0x5559a71c82d0 <col:36> 'int' <IntegralCast>
    |     | `-ImplicitCastExpr 0x5559a71c82b8 <col:36> '_Bool' <LValueToRValue>
    |     |   `-DeclRefExpr 0x5559a71c7de8 <col:36> '_Bool' lvalue Var 0x5559a71c0220 'y$w_buff0_used' '_Bool'
    |     `-ParenExpr 0x5559a71c8268 <col:53, col:227> 'int'
    |       `-ConditionalOperator 0x5559a71c8238 <col:54, col:226> 'int'
    |         |-BinaryOperator 0x5559a71c7ff8 <col:54, col:131> 'int' '||'
    |         | |-BinaryOperator 0x5559a71c7f18 <col:54, col:93> 'int' '||'
    |         | | |-UnaryOperator 0x5559a71c7e40 <col:54, col:55> 'int' prefix '!' cannot overflow
    |         | | | `-ImplicitCastExpr 0x5559a71c7e28 <col:55> '_Bool' <LValueToRValue>
    |         | | |   `-DeclRefExpr 0x5559a71c7e08 <col:55> '_Bool' lvalue Var 0x5559a71c0220 'y$w_buff0_used' '_Bool'
    |         | | `-BinaryOperator 0x5559a71c7ef8 <col:73, col:93> 'int' '&&'
    |         | |   |-UnaryOperator 0x5559a71c7e90 <col:73, col:74> 'int' prefix '!' cannot overflow
    |         | |   | `-ImplicitCastExpr 0x5559a71c7e78 <col:74> '_Bool' <LValueToRValue>
    |         | |   |   `-DeclRefExpr 0x5559a71c7e58 <col:74> '_Bool' lvalue Var 0x5559a71bfbf8 'y$r_buff0_thd0' '_Bool'
    |         | |   `-UnaryOperator 0x5559a71c7ee0 <col:92, col:93> 'int' prefix '!' cannot overflow
    |         | |     `-ImplicitCastExpr 0x5559a71c7ec8 <col:93> '_Bool' <LValueToRValue>
    |         | |       `-DeclRefExpr 0x5559a71c7ea8 <col:93> '_Bool' lvalue Var 0x5559a71c0318 'y$w_buff1_used' '_Bool'
    |         | `-BinaryOperator 0x5559a71c7fd8 <col:111, col:131> 'int' '&&'
    |         |   |-UnaryOperator 0x5559a71c7f70 <col:111, col:112> 'int' prefix '!' cannot overflow
    |         |   | `-ImplicitCastExpr 0x5559a71c7f58 <col:112> '_Bool' <LValueToRValue>
    |         |   |   `-DeclRefExpr 0x5559a71c7f38 <col:112> '_Bool' lvalue Var 0x5559a71bfbf8 'y$r_buff0_thd0' '_Bool'
    |         |   `-UnaryOperator 0x5559a71c7fc0 <col:130, col:131> 'int' prefix '!' cannot overflow
    |         |     `-ImplicitCastExpr 0x5559a71c7fa8 <col:131> '_Bool' <LValueToRValue>
    |         |       `-DeclRefExpr 0x5559a71c7f88 <col:131> '_Bool' lvalue Var 0x5559a71bfe50 'y$r_buff1_thd0' '_Bool'
    |         |-ImplicitCastExpr 0x5559a71c8220 <col:148> 'int' <IntegralCast>
    |         | `-ImplicitCastExpr 0x5559a71c8208 <col:148> '_Bool' <LValueToRValue>
    |         |   `-DeclRefExpr 0x5559a71c8018 <col:148> '_Bool' lvalue Var 0x5559a71c0220 'y$w_buff0_used' '_Bool'
    |         `-ParenExpr 0x5559a71c81e8 <col:165, col:226> 'int'
    |           `-ConditionalOperator 0x5559a71c81b8 <col:166, col:212> 'int'
    |             |-BinaryOperator 0x5559a71c80d8 <col:166, col:184> 'int' '&&'
    |             | |-ImplicitCastExpr 0x5559a71c8090 <col:166> 'int' <IntegralCast>
    |             | | `-ImplicitCastExpr 0x5559a71c8078 <col:166> '_Bool' <LValueToRValue>
    |             | |   `-DeclRefExpr 0x5559a71c8038 <col:166> '_Bool' lvalue Var 0x5559a71c0220 'y$w_buff0_used' '_Bool'
    |             | `-ImplicitCastExpr 0x5559a71c80c0 <col:184> 'int' <IntegralCast>
    |             |   `-ImplicitCastExpr 0x5559a71c80a8 <col:184> '_Bool' <LValueToRValue>
    |             |     `-DeclRefExpr 0x5559a71c8058 <col:184> '_Bool' lvalue Var 0x5559a71bfbf8 'y$r_buff0_thd0' '_Bool'
    |             |-ImplicitCastExpr 0x5559a71c8170 <col:201, col:208> 'int' <IntegralCast>
    |             | `-CStyleCastExpr 0x5559a71c8128 <col:201, col:208> '_Bool' <IntegralToBoolean>
    |             |   `-IntegerLiteral 0x5559a71c80f8 <col:208> 'int' 0
    |             `-ImplicitCastExpr 0x5559a71c81a0 <col:212> 'int' <IntegralCast>
    |               `-ImplicitCastExpr 0x5559a71c8188 <col:212> '_Bool' <LValueToRValue>
    |                 `-DeclRefExpr 0x5559a71c8150 <col:212> '_Bool' lvalue Var 0x5559a71c0220 'y$w_buff0_used' '_Bool'
    |-BinaryOperator 0x5559a71c88f8 <line:837:3, col:221> '_Bool' '='
    | |-DeclRefExpr 0x5559a71c8350 <col:3> '_Bool' lvalue Var 0x5559a71c0318 'y$w_buff1_used' '_Bool'
    | `-ImplicitCastExpr 0x5559a71c88e0 <col:20, col:221> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x5559a71c88b0 <col:20, col:221> 'int'
    |     |-ImplicitCastExpr 0x5559a71c8868 <col:20> 'int' <IntegralCast>
    |     | `-ImplicitCastExpr 0x5559a71c8850 <col:20> '_Bool' <LValueToRValue>
    |     |   `-DeclRefExpr 0x5559a71c8370 <col:20> '_Bool' lvalue Var 0x5559a71c0528 'weak$$choice2' '_Bool'
    |     |-ImplicitCastExpr 0x5559a71c8898 <col:36> 'int' <IntegralCast>
    |     | `-ImplicitCastExpr 0x5559a71c8880 <col:36> '_Bool' <LValueToRValue>
    |     |   `-DeclRefExpr 0x5559a71c8390 <col:36> '_Bool' lvalue Var 0x5559a71c0318 'y$w_buff1_used' '_Bool'
    |     `-ParenExpr 0x5559a71c8830 <col:53, col:221> 'int'
    |       `-ConditionalOperator 0x5559a71c8800 <col:54, col:220> 'int'
    |         |-BinaryOperator 0x5559a71c85a0 <col:54, col:131> 'int' '||'
    |         | |-BinaryOperator 0x5559a71c84c0 <col:54, col:93> 'int' '||'
    |         | | |-UnaryOperator 0x5559a71c83e8 <col:54, col:55> 'int' prefix '!' cannot overflow
    |         | | | `-ImplicitCastExpr 0x5559a71c83d0 <col:55> '_Bool' <LValueToRValue>
    |         | | |   `-DeclRefExpr 0x5559a71c83b0 <col:55> '_Bool' lvalue Var 0x5559a71c0220 'y$w_buff0_used' '_Bool'
    |         | | `-BinaryOperator 0x5559a71c84a0 <col:73, col:93> 'int' '&&'
    |         | |   |-UnaryOperator 0x5559a71c8438 <col:73, col:74> 'int' prefix '!' cannot overflow
    |         | |   | `-ImplicitCastExpr 0x5559a71c8420 <col:74> '_Bool' <LValueToRValue>
    |         | |   |   `-DeclRefExpr 0x5559a71c8400 <col:74> '_Bool' lvalue Var 0x5559a71bfbf8 'y$r_buff0_thd0' '_Bool'
    |         | |   `-UnaryOperator 0x5559a71c8488 <col:92, col:93> 'int' prefix '!' cannot overflow
    |         | |     `-ImplicitCastExpr 0x5559a71c8470 <col:93> '_Bool' <LValueToRValue>
    |         | |       `-DeclRefExpr 0x5559a71c8450 <col:93> '_Bool' lvalue Var 0x5559a71c0318 'y$w_buff1_used' '_Bool'
    |         | `-BinaryOperator 0x5559a71c8580 <col:111, col:131> 'int' '&&'
    |         |   |-UnaryOperator 0x5559a71c8518 <col:111, col:112> 'int' prefix '!' cannot overflow
    |         |   | `-ImplicitCastExpr 0x5559a71c8500 <col:112> '_Bool' <LValueToRValue>
    |         |   |   `-DeclRefExpr 0x5559a71c84e0 <col:112> '_Bool' lvalue Var 0x5559a71bfbf8 'y$r_buff0_thd0' '_Bool'
    |         |   `-UnaryOperator 0x5559a71c8568 <col:130, col:131> 'int' prefix '!' cannot overflow
    |         |     `-ImplicitCastExpr 0x5559a71c8550 <col:131> '_Bool' <LValueToRValue>
    |         |       `-DeclRefExpr 0x5559a71c8530 <col:131> '_Bool' lvalue Var 0x5559a71bfe50 'y$r_buff1_thd0' '_Bool'
    |         |-ImplicitCastExpr 0x5559a71c87e8 <col:148> 'int' <IntegralCast>
    |         | `-ImplicitCastExpr 0x5559a71c87d0 <col:148> '_Bool' <LValueToRValue>
    |         |   `-DeclRefExpr 0x5559a71c85c0 <col:148> '_Bool' lvalue Var 0x5559a71c0318 'y$w_buff1_used' '_Bool'
    |         `-ParenExpr 0x5559a71c87b0 <col:165, col:220> 'int'
    |           `-ConditionalOperator 0x5559a71c8780 <col:166, col:219> 'int'
    |             |-BinaryOperator 0x5559a71c8680 <col:166, col:184> 'int' '&&'
    |             | |-ImplicitCastExpr 0x5559a71c8638 <col:166> 'int' <IntegralCast>
    |             | | `-ImplicitCastExpr 0x5559a71c8620 <col:166> '_Bool' <LValueToRValue>
    |             | |   `-DeclRefExpr 0x5559a71c85e0 <col:166> '_Bool' lvalue Var 0x5559a71c0220 'y$w_buff0_used' '_Bool'
    |             | `-ImplicitCastExpr 0x5559a71c8668 <col:184> 'int' <IntegralCast>
    |             |   `-ImplicitCastExpr 0x5559a71c8650 <col:184> '_Bool' <LValueToRValue>
    |             |     `-DeclRefExpr 0x5559a71c8600 <col:184> '_Bool' lvalue Var 0x5559a71bfbf8 'y$r_buff0_thd0' '_Bool'
    |             |-ImplicitCastExpr 0x5559a71c8750 <col:201, col:208> 'int' <IntegralCast>
    |             | `-CStyleCastExpr 0x5559a71c86d0 <col:201, col:208> '_Bool' <IntegralToBoolean>
    |             |   `-IntegerLiteral 0x5559a71c86a0 <col:208> 'int' 0
    |             `-ImplicitCastExpr 0x5559a71c8768 <col:212, col:219> 'int' <IntegralCast>
    |               `-CStyleCastExpr 0x5559a71c8728 <col:212, col:219> '_Bool' <IntegralToBoolean>
    |                 `-IntegerLiteral 0x5559a71c86f8 <col:219> 'int' 0
    |-BinaryOperator 0x5559a71c8ec8 <line:838:3, col:227> '_Bool' '='
    | |-DeclRefExpr 0x5559a71c8918 <col:3> '_Bool' lvalue Var 0x5559a71bfbf8 'y$r_buff0_thd0' '_Bool'
    | `-ImplicitCastExpr 0x5559a71c8eb0 <col:20, col:227> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x5559a71c8e80 <col:20, col:227> 'int'
    |     |-ImplicitCastExpr 0x5559a71c8e38 <col:20> 'int' <IntegralCast>
    |     | `-ImplicitCastExpr 0x5559a71c8e20 <col:20> '_Bool' <LValueToRValue>
    |     |   `-DeclRefExpr 0x5559a71c8938 <col:20> '_Bool' lvalue Var 0x5559a71c0528 'weak$$choice2' '_Bool'
    |     |-ImplicitCastExpr 0x5559a71c8e68 <col:36> 'int' <IntegralCast>
    |     | `-ImplicitCastExpr 0x5559a71c8e50 <col:36> '_Bool' <LValueToRValue>
    |     |   `-DeclRefExpr 0x5559a71c8958 <col:36> '_Bool' lvalue Var 0x5559a71bfbf8 'y$r_buff0_thd0' '_Bool'
    |     `-ParenExpr 0x5559a71c8e00 <col:53, col:227> 'int'
    |       `-ConditionalOperator 0x5559a71c8dd0 <col:54, col:226> 'int'
    |         |-BinaryOperator 0x5559a71c8b90 <col:54, col:131> 'int' '||'
    |         | |-BinaryOperator 0x5559a71c8a88 <col:54, col:93> 'int' '||'
    |         | | |-UnaryOperator 0x5559a71c89b0 <col:54, col:55> 'int' prefix '!' cannot overflow
    |         | | | `-ImplicitCastExpr 0x5559a71c8998 <col:55> '_Bool' <LValueToRValue>
    |         | | |   `-DeclRefExpr 0x5559a71c8978 <col:55> '_Bool' lvalue Var 0x5559a71c0220 'y$w_buff0_used' '_Bool'
    |         | | `-BinaryOperator 0x5559a71c8a68 <col:73, col:93> 'int' '&&'
    |         | |   |-UnaryOperator 0x5559a71c8a00 <col:73, col:74> 'int' prefix '!' cannot overflow
    |         | |   | `-ImplicitCastExpr 0x5559a71c89e8 <col:74> '_Bool' <LValueToRValue>
    |         | |   |   `-DeclRefExpr 0x5559a71c89c8 <col:74> '_Bool' lvalue Var 0x5559a71bfbf8 'y$r_buff0_thd0' '_Bool'
    |         | |   `-UnaryOperator 0x5559a71c8a50 <col:92, col:93> 'int' prefix '!' cannot overflow
    |         | |     `-ImplicitCastExpr 0x5559a71c8a38 <col:93> '_Bool' <LValueToRValue>
    |         | |       `-DeclRefExpr 0x5559a71c8a18 <col:93> '_Bool' lvalue Var 0x5559a71c0318 'y$w_buff1_used' '_Bool'
    |         | `-BinaryOperator 0x5559a71c8b48 <col:111, col:131> 'int' '&&'
    |         |   |-UnaryOperator 0x5559a71c8ae0 <col:111, col:112> 'int' prefix '!' cannot overflow
    |         |   | `-ImplicitCastExpr 0x5559a71c8ac8 <col:112> '_Bool' <LValueToRValue>
    |         |   |   `-DeclRefExpr 0x5559a71c8aa8 <col:112> '_Bool' lvalue Var 0x5559a71bfbf8 'y$r_buff0_thd0' '_Bool'
    |         |   `-UnaryOperator 0x5559a71c8b30 <col:130, col:131> 'int' prefix '!' cannot overflow
    |         |     `-ImplicitCastExpr 0x5559a71c8b18 <col:131> '_Bool' <LValueToRValue>
    |         |       `-DeclRefExpr 0x5559a71c8af8 <col:131> '_Bool' lvalue Var 0x5559a71bfe50 'y$r_buff1_thd0' '_Bool'
    |         |-ImplicitCastExpr 0x5559a71c8db8 <col:148> 'int' <IntegralCast>
    |         | `-ImplicitCastExpr 0x5559a71c8da0 <col:148> '_Bool' <LValueToRValue>
    |         |   `-DeclRefExpr 0x5559a71c8bb0 <col:148> '_Bool' lvalue Var 0x5559a71bfbf8 'y$r_buff0_thd0' '_Bool'
    |         `-ParenExpr 0x5559a71c8d80 <col:165, col:226> 'int'
    |           `-ConditionalOperator 0x5559a71c8d50 <col:166, col:212> 'int'
    |             |-BinaryOperator 0x5559a71c8c70 <col:166, col:184> 'int' '&&'
    |             | |-ImplicitCastExpr 0x5559a71c8c28 <col:166> 'int' <IntegralCast>
    |             | | `-ImplicitCastExpr 0x5559a71c8c10 <col:166> '_Bool' <LValueToRValue>
    |             | |   `-DeclRefExpr 0x5559a71c8bd0 <col:166> '_Bool' lvalue Var 0x5559a71c0220 'y$w_buff0_used' '_Bool'
    |             | `-ImplicitCastExpr 0x5559a71c8c58 <col:184> 'int' <IntegralCast>
    |             |   `-ImplicitCastExpr 0x5559a71c8c40 <col:184> '_Bool' <LValueToRValue>
    |             |     `-DeclRefExpr 0x5559a71c8bf0 <col:184> '_Bool' lvalue Var 0x5559a71bfbf8 'y$r_buff0_thd0' '_Bool'
    |             |-ImplicitCastExpr 0x5559a71c8d08 <col:201, col:208> 'int' <IntegralCast>
    |             | `-CStyleCastExpr 0x5559a71c8cc0 <col:201, col:208> '_Bool' <IntegralToBoolean>
    |             |   `-IntegerLiteral 0x5559a71c8c90 <col:208> 'int' 0
    |             `-ImplicitCastExpr 0x5559a71c8d38 <col:212> 'int' <IntegralCast>
    |               `-ImplicitCastExpr 0x5559a71c8d20 <col:212> '_Bool' <LValueToRValue>
    |                 `-DeclRefExpr 0x5559a71c8ce8 <col:212> '_Bool' lvalue Var 0x5559a71bfbf8 'y$r_buff0_thd0' '_Bool'
    |-BinaryOperator 0x5559a71c9490 <line:839:3, col:221> '_Bool' '='
    | |-DeclRefExpr 0x5559a71c8ee8 <col:3> '_Bool' lvalue Var 0x5559a71bfe50 'y$r_buff1_thd0' '_Bool'
    | `-ImplicitCastExpr 0x5559a71c9478 <col:20, col:221> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x5559a71c9448 <col:20, col:221> 'int'
    |     |-ImplicitCastExpr 0x5559a71c9400 <col:20> 'int' <IntegralCast>
    |     | `-ImplicitCastExpr 0x5559a71c93e8 <col:20> '_Bool' <LValueToRValue>
    |     |   `-DeclRefExpr 0x5559a71c8f08 <col:20> '_Bool' lvalue Var 0x5559a71c0528 'weak$$choice2' '_Bool'
    |     |-ImplicitCastExpr 0x5559a71c9430 <col:36> 'int' <IntegralCast>
    |     | `-ImplicitCastExpr 0x5559a71c9418 <col:36> '_Bool' <LValueToRValue>
    |     |   `-DeclRefExpr 0x5559a71c8f28 <col:36> '_Bool' lvalue Var 0x5559a71bfe50 'y$r_buff1_thd0' '_Bool'
    |     `-ParenExpr 0x5559a71c93c8 <col:53, col:221> 'int'
    |       `-ConditionalOperator 0x5559a71c9398 <col:54, col:220> 'int'
    |         |-BinaryOperator 0x5559a71c9138 <col:54, col:131> 'int' '||'
    |         | |-BinaryOperator 0x5559a71c9058 <col:54, col:93> 'int' '||'
    |         | | |-UnaryOperator 0x5559a71c8f80 <col:54, col:55> 'int' prefix '!' cannot overflow
    |         | | | `-ImplicitCastExpr 0x5559a71c8f68 <col:55> '_Bool' <LValueToRValue>
    |         | | |   `-DeclRefExpr 0x5559a71c8f48 <col:55> '_Bool' lvalue Var 0x5559a71c0220 'y$w_buff0_used' '_Bool'
    |         | | `-BinaryOperator 0x5559a71c9038 <col:73, col:93> 'int' '&&'
    |         | |   |-UnaryOperator 0x5559a71c8fd0 <col:73, col:74> 'int' prefix '!' cannot overflow
    |         | |   | `-ImplicitCastExpr 0x5559a71c8fb8 <col:74> '_Bool' <LValueToRValue>
    |         | |   |   `-DeclRefExpr 0x5559a71c8f98 <col:74> '_Bool' lvalue Var 0x5559a71bfbf8 'y$r_buff0_thd0' '_Bool'
    |         | |   `-UnaryOperator 0x5559a71c9020 <col:92, col:93> 'int' prefix '!' cannot overflow
    |         | |     `-ImplicitCastExpr 0x5559a71c9008 <col:93> '_Bool' <LValueToRValue>
    |         | |       `-DeclRefExpr 0x5559a71c8fe8 <col:93> '_Bool' lvalue Var 0x5559a71c0318 'y$w_buff1_used' '_Bool'
    |         | `-BinaryOperator 0x5559a71c9118 <col:111, col:131> 'int' '&&'
    |         |   |-UnaryOperator 0x5559a71c90b0 <col:111, col:112> 'int' prefix '!' cannot overflow
    |         |   | `-ImplicitCastExpr 0x5559a71c9098 <col:112> '_Bool' <LValueToRValue>
    |         |   |   `-DeclRefExpr 0x5559a71c9078 <col:112> '_Bool' lvalue Var 0x5559a71bfbf8 'y$r_buff0_thd0' '_Bool'
    |         |   `-UnaryOperator 0x5559a71c9100 <col:130, col:131> 'int' prefix '!' cannot overflow
    |         |     `-ImplicitCastExpr 0x5559a71c90e8 <col:131> '_Bool' <LValueToRValue>
    |         |       `-DeclRefExpr 0x5559a71c90c8 <col:131> '_Bool' lvalue Var 0x5559a71bfe50 'y$r_buff1_thd0' '_Bool'
    |         |-ImplicitCastExpr 0x5559a71c9380 <col:148> 'int' <IntegralCast>
    |         | `-ImplicitCastExpr 0x5559a71c9368 <col:148> '_Bool' <LValueToRValue>
    |         |   `-DeclRefExpr 0x5559a71c9158 <col:148> '_Bool' lvalue Var 0x5559a71bfe50 'y$r_buff1_thd0' '_Bool'
    |         `-ParenExpr 0x5559a71c9348 <col:165, col:220> 'int'
    |           `-ConditionalOperator 0x5559a71c9318 <col:166, col:219> 'int'
    |             |-BinaryOperator 0x5559a71c9218 <col:166, col:184> 'int' '&&'
    |             | |-ImplicitCastExpr 0x5559a71c91d0 <col:166> 'int' <IntegralCast>
    |             | | `-ImplicitCastExpr 0x5559a71c91b8 <col:166> '_Bool' <LValueToRValue>
    |             | |   `-DeclRefExpr 0x5559a71c9178 <col:166> '_Bool' lvalue Var 0x5559a71c0220 'y$w_buff0_used' '_Bool'
    |             | `-ImplicitCastExpr 0x5559a71c9200 <col:184> 'int' <IntegralCast>
    |             |   `-ImplicitCastExpr 0x5559a71c91e8 <col:184> '_Bool' <LValueToRValue>
    |             |     `-DeclRefExpr 0x5559a71c9198 <col:184> '_Bool' lvalue Var 0x5559a71bfbf8 'y$r_buff0_thd0' '_Bool'
    |             |-ImplicitCastExpr 0x5559a71c92e8 <col:201, col:208> 'int' <IntegralCast>
    |             | `-CStyleCastExpr 0x5559a71c9268 <col:201, col:208> '_Bool' <IntegralToBoolean>
    |             |   `-IntegerLiteral 0x5559a71c9238 <col:208> 'int' 0
    |             `-ImplicitCastExpr 0x5559a71c9300 <col:212, col:219> 'int' <IntegralCast>
    |               `-CStyleCastExpr 0x5559a71c92c0 <col:212, col:219> '_Bool' <IntegralToBoolean>
    |                 `-IntegerLiteral 0x5559a71c9290 <col:219> 'int' 0
    |-BinaryOperator 0x5559a71c97f8 <line:840:3, col:123> '_Bool' '='
    | |-DeclRefExpr 0x5559a71c94b0 <col:3> '_Bool' lvalue Var 0x5559a71bf808 'main$tmp_guard1' '_Bool'
    | `-ImplicitCastExpr 0x5559a71c97e0 <col:21, col:123> '_Bool' <IntegralToBoolean>
    |   `-UnaryOperator 0x5559a71c97c8 <col:21, col:123> 'int' prefix '!' cannot overflow
    |     `-ParenExpr 0x5559a71c97a8 <col:22, col:123> 'int'
    |       `-BinaryOperator 0x5559a71c9788 <col:23, col:122> 'int' '&&'
    |         |-BinaryOperator 0x5559a71c96f0 <col:23, col:94> 'int' '&&'
    |         | |-BinaryOperator 0x5559a71c9658 <col:23, col:66> 'int' '&&'
    |         | | |-BinaryOperator 0x5559a71c95c0 <col:23, col:38> 'int' '&&'
    |         | | | |-BinaryOperator 0x5559a71c9528 <col:23, col:28> 'int' '=='
    |         | | | | |-ImplicitCastExpr 0x5559a71c9510 <col:23> 'int' <LValueToRValue>
    |         | | | | | `-DeclRefExpr 0x5559a71c94d0 <col:23> 'int' lvalue Var 0x5559a71bfa28 'y' 'int'
    |         | | | | `-IntegerLiteral 0x5559a71c94f0 <col:28> 'int' 2
    |         | | | `-BinaryOperator 0x5559a71c95a0 <col:33, col:38> 'int' '=='
    |         | | |   |-ImplicitCastExpr 0x5559a71c9588 <col:33> 'int' <LValueToRValue>
    |         | | |   | `-DeclRefExpr 0x5559a71c9548 <col:33> 'int' lvalue Var 0x5559a71c0418 'z' 'int'
    |         | | |   `-IntegerLiteral 0x5559a71c9568 <col:38> 'int' 2
    |         | | `-BinaryOperator 0x5559a71c9638 <col:43, col:66> 'int' '=='
    |         | |   |-ImplicitCastExpr 0x5559a71c9620 <col:43> 'int' <LValueToRValue>
    |         | |   | `-DeclRefExpr 0x5559a71c95e0 <col:43> 'int' lvalue Var 0x5559a71bf398 '__unbuffered_p0_EAX' 'int'
    |         | |   `-IntegerLiteral 0x5559a71c9600 <col:66> 'int' 0
    |         | `-BinaryOperator 0x5559a71c96d0 <col:71, col:94> 'int' '=='
    |         |   |-ImplicitCastExpr 0x5559a71c96b8 <col:71> 'int' <LValueToRValue>
    |         |   | `-DeclRefExpr 0x5559a71c9678 <col:71> 'int' lvalue Var 0x5559a71bf4b8 '__unbuffered_p3_EAX' 'int'
    |         |   `-IntegerLiteral 0x5559a71c9698 <col:94> 'int' 2
    |         `-BinaryOperator 0x5559a71c9768 <col:99, col:122> 'int' '=='
    |           |-ImplicitCastExpr 0x5559a71c9750 <col:99> 'int' <LValueToRValue>
    |           | `-DeclRefExpr 0x5559a71c9710 <col:99> 'int' lvalue Var 0x5559a71bf5d8 '__unbuffered_p3_EBX' 'int'
    |           `-IntegerLiteral 0x5559a71c9730 <col:122> 'int' 0
    |-BinaryOperator 0x5559a71c9928 <line:841:3, col:37> 'int' '='
    | |-DeclRefExpr 0x5559a71c9818 <col:3> 'int' lvalue Var 0x5559a71bfa28 'y' 'int'
    | `-ConditionalOperator 0x5559a71c98f8 <col:7, col:37> 'int'
    |   |-ImplicitCastExpr 0x5559a71c98b0 <col:7> 'int' <IntegralCast>
    |   | `-ImplicitCastExpr 0x5559a71c9898 <col:7> '_Bool' <LValueToRValue>
    |   |   `-DeclRefExpr 0x5559a71c9838 <col:7> '_Bool' lvalue Var 0x5559a71bfb00 'y$flush_delayed' '_Bool'
    |   |-ImplicitCastExpr 0x5559a71c98c8 <col:25> 'int' <LValueToRValue>
    |   | `-DeclRefExpr 0x5559a71c9858 <col:25> 'int' lvalue Var 0x5559a71bfb80 'y$mem_tmp' 'int'
    |   `-ImplicitCastExpr 0x5559a71c98e0 <col:37> 'int' <LValueToRValue>
    |     `-DeclRefExpr 0x5559a71c9878 <col:37> 'int' lvalue Var 0x5559a71bfa28 'y' 'int'
    |-BinaryOperator 0x5559a71c99c0 <line:842:3, col:28> '_Bool' '='
    | |-DeclRefExpr 0x5559a71c9948 <col:3> '_Bool' lvalue Var 0x5559a71bfb00 'y$flush_delayed' '_Bool'
    | `-CStyleCastExpr 0x5559a71c9998 <col:21, col:28> '_Bool' <IntegralToBoolean>
    |   `-IntegerLiteral 0x5559a71c9968 <col:28> 'int' 0
    |-CallExpr 0x5559a71c9a18 <line:843:3, col:25> 'void'
    | `-ImplicitCastExpr 0x5559a71c9a00 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x5559a71c99e0 <col:3> 'void ()' Function 0x5559a7165f00 '__VERIFIER_atomic_end' 'void ()'
    |-CallExpr 0x5559a71c9a90 <line:844:3, col:36> 'void'
    | |-ImplicitCastExpr 0x5559a71c9a78 <col:3> 'void (*)(int)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x5559a71c9a38 <col:3> 'void (int)' Function 0x5559a7165bc8 '__VERIFIER_assert' 'void (int)'
    | `-ImplicitCastExpr 0x5559a71c9ad0 <col:21> 'int' <IntegralCast>
    |   `-ImplicitCastExpr 0x5559a71c9ab8 <col:21> '_Bool' <LValueToRValue>
    |     `-DeclRefExpr 0x5559a71c9a58 <col:21> '_Bool' lvalue Var 0x5559a71bf808 'main$tmp_guard1' '_Bool'
    `-ReturnStmt 0x5559a71c9b08 <line:845:3, col:10>
      `-IntegerLiteral 0x5559a71c9ae8 <col:10> 'int' 0
