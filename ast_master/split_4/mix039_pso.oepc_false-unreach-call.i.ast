TranslationUnitDecl 0x55681d70fe18 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x55681d7106d8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x55681d7103b0 '__int128'
|-TypedefDecl 0x55681d710748 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x55681d7103d0 'unsigned __int128'
|-TypedefDecl 0x55681d710a50 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x55681d710820 'struct __NSConstantString_tag'
|   `-Record 0x55681d7107a0 '__NSConstantString_tag'
|-TypedefDecl 0x55681d710af8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x55681d710ab0 'char *'
|   `-BuiltinType 0x55681d70feb0 'char'
|-TypedefDecl 0x55681d74f650 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'struct __va_list_tag [1]'
| `-ConstantArrayType 0x55681d710d90 'struct __va_list_tag [1]' 1 
|   `-RecordType 0x55681d710bd0 'struct __va_list_tag'
|     `-Record 0x55681d710b50 '__va_list_tag'
|-FunctionDecl 0x55681d74f790 <./split_4/mix039_pso.oepc_false-unreach-call.i:1:1, col:34> col:13 used __VERIFIER_assume 'void (int)' extern
| `-ParmVarDecl 0x55681d74f6c0 <col:31> col:34 'int'
|-FunctionDecl 0x55681d74f958 <line:2:1, col:45> col:15 used __VERIFIER_nondet_pointer 'void *(void)' extern
|-FunctionDecl 0x55681d74fa80 <line:3:1, col:61> col:13 used __VERIFIER_error 'void () __attribute__((noreturn))' extern
|-FunctionDecl 0x55681d74fbc8 <line:4:1, col:99> col:6 used __VERIFIER_assert 'void (int)'
| |-ParmVarDecl 0x55681d74fb38 <col:24, col:28> col:28 used expression 'int'
| `-CompoundStmt 0x55681d74fdf8 <col:40, col:99>
|   |-IfStmt 0x55681d74fdc8 <col:42, col:88>
|   | |-UnaryOperator 0x55681d74fca8 <col:46, col:47> 'int' prefix '!' cannot overflow
|   | | `-ImplicitCastExpr 0x55681d74fc90 <col:47> 'int' <LValueToRValue>
|   | |   `-DeclRefExpr 0x55681d74fc70 <col:47> 'int' lvalue ParmVar 0x55681d74fb38 'expression' 'int'
|   | `-CompoundStmt 0x55681d74fdb0 <col:59, col:88>
|   |   `-LabelStmt 0x55681d74fd98 <col:61, col:85> 'ERROR'
|   |     `-CallExpr 0x55681d74fd28 <col:68, col:85> 'void'
|   |       `-ImplicitCastExpr 0x55681d74fd10 <col:68> 'void (*)() __attribute__((noreturn))' <FunctionToPointerDecay>
|   |         `-DeclRefExpr 0x55681d74fcc0 <col:68> 'void () __attribute__((noreturn))' Function 0x55681d74fa80 '__VERIFIER_error' 'void () __attribute__((noreturn))'
|   |-NullStmt 0x55681d74fde0 <col:89>
|   `-ReturnStmt 0x55681d74fde8 <col:91>
|-FunctionDecl 0x55681d74fe40 <line:5:1, col:37> col:13 used __VERIFIER_atomic_begin 'void ()' extern
|-FunctionDecl 0x55681d74ff00 <line:6:1, col:35> col:13 used __VERIFIER_atomic_end 'void ()' extern
|-FunctionDecl 0x55681d750280 <line:8:1, line:10:76> line:8:13 __assert_fail 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x55681d74ffb8 <col:28, col:40> col:40 __assertion 'const char *'
| |-ParmVarDecl 0x55681d750038 <col:53, col:65> col:65 __file 'const char *'
| |-ParmVarDecl 0x55681d7500b8 <line:9:7, col:20> col:20 __line 'unsigned int'
| |-ParmVarDecl 0x55681d750138 <col:28, col:40> col:40 __function 'const char *'
| `-NoThrowAttr 0x55681d750340 <line:10:22>
|-FunctionDecl 0x55681d776390 <line:11:1, line:13:76> line:11:13 __assert_perror_fail 'void (int, const char *, unsigned int, const char *) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x55681d7503b0 <col:35, col:39> col:39 __errnum 'int'
| |-ParmVarDecl 0x55681d750430 <col:49, col:61> col:61 __file 'const char *'
| |-ParmVarDecl 0x55681d7504b0 <line:12:7, col:20> col:20 __line 'unsigned int'
| |-ParmVarDecl 0x55681d750530 <col:28, col:40> col:40 __function 'const char *'
| `-NoThrowAttr 0x55681d776450 <line:13:22>
|-FunctionDecl 0x55681d776700 <line:14:1, line:15:76> line:14:13 __assert 'void (const char *, const char *, int) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x55681d7764c0 <col:23, col:35> col:35 __assertion 'const char *'
| |-ParmVarDecl 0x55681d776540 <col:48, col:60> col:60 __file 'const char *'
| |-ParmVarDecl 0x55681d7765c0 <col:68, col:72> col:72 __line 'int'
| `-NoThrowAttr 0x55681d7767b8 <line:15:22>
|-TypedefDecl 0x55681d776828 <line:17:1, col:23> col:23 __u_char 'unsigned char'
| `-BuiltinType 0x55681d70ff70 'unsigned char'
|-TypedefDecl 0x55681d776898 <line:18:1, col:28> col:28 __u_short 'unsigned short'
| `-BuiltinType 0x55681d70ff90 'unsigned short'
|-TypedefDecl 0x55681d776908 <line:19:1, col:22> col:22 __u_int 'unsigned int'
| `-BuiltinType 0x55681d70ffb0 'unsigned int'
|-TypedefDecl 0x55681d776978 <line:20:1, col:27> col:27 __u_long 'unsigned long'
| `-BuiltinType 0x55681d70ffd0 'unsigned long'
|-TypedefDecl 0x55681d7769e8 <line:21:1, col:21> col:21 __int8_t 'signed char'
| `-BuiltinType 0x55681d70fed0 'signed char'
|-TypedefDecl 0x55681d776a58 <line:22:1, col:23> col:23 __uint8_t 'unsigned char'
| `-BuiltinType 0x55681d70ff70 'unsigned char'
|-TypedefDecl 0x55681d776ac8 <line:23:1, col:26> col:26 __int16_t 'short'
| `-BuiltinType 0x55681d70fef0 'short'
|-TypedefDecl 0x55681d776b38 <line:24:1, col:28> col:28 __uint16_t 'unsigned short'
| `-BuiltinType 0x55681d70ff90 'unsigned short'
|-TypedefDecl 0x55681d776ba8 <line:25:1, col:20> col:20 __int32_t 'int'
| `-BuiltinType 0x55681d70ff10 'int'
|-TypedefDecl 0x55681d776c18 <line:26:1, col:22> col:22 __uint32_t 'unsigned int'
| `-BuiltinType 0x55681d70ffb0 'unsigned int'
|-TypedefDecl 0x55681d776c88 <line:27:1, col:25> col:25 __int64_t 'long'
| `-BuiltinType 0x55681d70ff30 'long'
|-TypedefDecl 0x55681d776cf8 <line:28:1, col:27> col:27 referenced __uint64_t 'unsigned long'
| `-BuiltinType 0x55681d70ffd0 'unsigned long'
|-TypedefDecl 0x55681d776d68 <line:29:1, col:18> col:18 referenced __quad_t 'long'
| `-BuiltinType 0x55681d70ff30 'long'
|-TypedefDecl 0x55681d776dd8 <line:30:1, col:27> col:27 __u_quad_t 'unsigned long'
| `-BuiltinType 0x55681d70ffd0 'unsigned long'
|-TypedefDecl 0x55681d776e48 <line:31:1, col:27> col:27 __dev_t 'unsigned long'
| `-BuiltinType 0x55681d70ffd0 'unsigned long'
|-TypedefDecl 0x55681d776eb8 <line:32:1, col:22> col:22 __uid_t 'unsigned int'
| `-BuiltinType 0x55681d70ffb0 'unsigned int'
|-TypedefDecl 0x55681d776f28 <line:33:1, col:22> col:22 __gid_t 'unsigned int'
| `-BuiltinType 0x55681d70ffb0 'unsigned int'
|-TypedefDecl 0x55681d776f98 <line:34:1, col:27> col:27 __ino_t 'unsigned long'
| `-BuiltinType 0x55681d70ffd0 'unsigned long'
|-TypedefDecl 0x55681d777008 <line:35:1, col:27> col:27 __ino64_t 'unsigned long'
| `-BuiltinType 0x55681d70ffd0 'unsigned long'
|-TypedefDecl 0x55681d777078 <line:36:1, col:22> col:22 __mode_t 'unsigned int'
| `-BuiltinType 0x55681d70ffb0 'unsigned int'
|-TypedefDecl 0x55681d7770e8 <line:37:1, col:27> col:27 __nlink_t 'unsigned long'
| `-BuiltinType 0x55681d70ffd0 'unsigned long'
|-TypedefDecl 0x55681d777158 <line:38:1, col:18> col:18 __off_t 'long'
| `-BuiltinType 0x55681d70ff30 'long'
|-TypedefDecl 0x55681d7771c8 <line:39:1, col:18> col:18 referenced __off64_t 'long'
| `-BuiltinType 0x55681d70ff30 'long'
|-TypedefDecl 0x55681d777238 <line:40:1, col:13> col:13 referenced __pid_t 'int'
| `-BuiltinType 0x55681d70ff10 'int'
|-RecordDecl 0x55681d777290 <line:41:9, col:32> col:9 struct definition
| `-FieldDecl 0x55681d777408 <col:18, col:29> col:22 __val 'int [2]'
|-TypedefDecl 0x55681d7774c0 <col:1, col:34> col:34 __fsid_t 'struct __fsid_t':'__fsid_t'
| `-ElaboratedType 0x55681d777460 'struct __fsid_t' sugar
|   `-RecordType 0x55681d777310 '__fsid_t'
|     `-Record 0x55681d777290 ''
|-TypedefDecl 0x55681d777548 <line:42:1, col:18> col:18 referenced __clock_t 'long'
| `-BuiltinType 0x55681d70ff30 'long'
|-TypedefDecl 0x55681d7775b8 <line:43:1, col:27> col:27 __rlim_t 'unsigned long'
| `-BuiltinType 0x55681d70ffd0 'unsigned long'
|-TypedefDecl 0x55681d777628 <line:44:1, col:27> col:27 __rlim64_t 'unsigned long'
| `-BuiltinType 0x55681d70ffd0 'unsigned long'
|-TypedefDecl 0x55681d777698 <line:45:1, col:22> col:22 __id_t 'unsigned int'
| `-BuiltinType 0x55681d70ffb0 'unsigned int'
|-TypedefDecl 0x55681d777708 <line:46:1, col:18> col:18 referenced __time_t 'long'
| `-BuiltinType 0x55681d70ff30 'long'
|-TypedefDecl 0x55681d777778 <line:47:1, col:22> col:22 __useconds_t 'unsigned int'
| `-BuiltinType 0x55681d70ffb0 'unsigned int'
|-TypedefDecl 0x55681d7777e8 <line:48:1, col:18> col:18 __suseconds_t 'long'
| `-BuiltinType 0x55681d70ff30 'long'
|-TypedefDecl 0x55681d777858 <line:49:1, col:13> col:13 __daddr_t 'int'
| `-BuiltinType 0x55681d70ff10 'int'
|-TypedefDecl 0x55681d7778c8 <line:50:1, col:13> col:13 __key_t 'int'
| `-BuiltinType 0x55681d70ff10 'int'
|-TypedefDecl 0x55681d777938 <line:51:1, col:13> col:13 referenced __clockid_t 'int'
| `-BuiltinType 0x55681d70ff10 'int'
|-TypedefDecl 0x55681d7779a8 <line:52:1, col:16> col:16 referenced __timer_t 'void *'
| `-PointerType 0x55681d710630 'void *'
|   `-BuiltinType 0x55681d70fe70 'void'
|-TypedefDecl 0x55681d777a18 <line:53:1, col:18> col:18 __blksize_t 'long'
| `-BuiltinType 0x55681d70ff30 'long'
|-TypedefDecl 0x55681d777a88 <line:54:1, col:18> col:18 __blkcnt_t 'long'
| `-BuiltinType 0x55681d70ff30 'long'
|-TypedefDecl 0x55681d777af8 <line:55:1, col:18> col:18 __blkcnt64_t 'long'
| `-BuiltinType 0x55681d70ff30 'long'
|-TypedefDecl 0x55681d777b68 <line:56:1, col:27> col:27 __fsblkcnt_t 'unsigned long'
| `-BuiltinType 0x55681d70ffd0 'unsigned long'
|-TypedefDecl 0x55681d777bd8 <line:57:1, col:27> col:27 __fsblkcnt64_t 'unsigned long'
| `-BuiltinType 0x55681d70ffd0 'unsigned long'
|-TypedefDecl 0x55681d777c48 <line:58:1, col:27> col:27 __fsfilcnt_t 'unsigned long'
| `-BuiltinType 0x55681d70ffd0 'unsigned long'
|-TypedefDecl 0x55681d777cb8 <line:59:1, col:27> col:27 __fsfilcnt64_t 'unsigned long'
| `-BuiltinType 0x55681d70ffd0 'unsigned long'
|-TypedefDecl 0x55681d777d28 <line:60:1, col:18> col:18 __fsword_t 'long'
| `-BuiltinType 0x55681d70ff30 'long'
|-TypedefDecl 0x55681d777d98 <line:61:1, col:18> col:18 __ssize_t 'long'
| `-BuiltinType 0x55681d70ff30 'long'
|-TypedefDecl 0x55681d777e08 <line:62:1, col:18> col:18 referenced __syscall_slong_t 'long'
| `-BuiltinType 0x55681d70ff30 'long'
|-TypedefDecl 0x55681d777e78 <line:63:1, col:27> col:27 __syscall_ulong_t 'unsigned long'
| `-BuiltinType 0x55681d70ffd0 'unsigned long'
|-TypedefDecl 0x55681d777f08 <line:64:1, col:19> col:19 __loff_t '__off64_t':'long'
| `-TypedefType 0x55681d777ed0 '__off64_t' sugar
|   |-Typedef 0x55681d7771c8 '__off64_t'
|   `-BuiltinType 0x55681d70ff30 'long'
|-TypedefDecl 0x55681d778000 <line:65:1, col:19> col:19 __qaddr_t '__quad_t *'
| `-PointerType 0x55681d777fc0 '__quad_t *'
|   `-TypedefType 0x55681d777f60 '__quad_t' sugar
|     |-Typedef 0x55681d776d68 '__quad_t'
|     `-BuiltinType 0x55681d70ff30 'long'
|-TypedefDecl 0x55681d778070 <line:66:1, col:15> col:15 __caddr_t 'char *'
| `-PointerType 0x55681d710ab0 'char *'
|   `-BuiltinType 0x55681d70feb0 'char'
|-TypedefDecl 0x55681d7780e0 <line:67:1, col:18> col:18 __intptr_t 'long'
| `-BuiltinType 0x55681d70ff30 'long'
|-TypedefDecl 0x55681d778150 <line:68:1, col:22> col:22 __socklen_t 'unsigned int'
| `-BuiltinType 0x55681d70ffb0 'unsigned int'
|-FunctionDecl 0x55681d778298 <line:69:1, line:73:1> line:70:1 __bswap_32 'unsigned int (unsigned int)' static inline
| |-ParmVarDecl 0x55681d7781c0 <col:13, col:26> col:26 used __bsx 'unsigned int'
| `-CompoundStmt 0x55681d7795e8 <line:71:1, line:73:1>
|   `-ReturnStmt 0x55681d7795d8 <line:72:3, col:34>
|     `-CallExpr 0x55681d779598 <col:10, col:34> 'unsigned int'
|       |-ImplicitCastExpr 0x55681d779580 <col:10> 'unsigned int (*)(unsigned int)' <BuiltinFnToFnPtr>
|       | `-DeclRefExpr 0x55681d779510 <col:10> '<builtin fn type>' Function 0x55681d779380 '__builtin_bswap32' 'unsigned int (unsigned int)'
|       `-ImplicitCastExpr 0x55681d7795c0 <col:29> 'unsigned int' <LValueToRValue>
|         `-DeclRefExpr 0x55681d779530 <col:29> 'unsigned int' lvalue ParmVar 0x55681d7781c0 '__bsx' 'unsigned int'
|-FunctionDecl 0x55681d779380 <col:10> col:10 implicit used __builtin_bswap32 'unsigned int (unsigned int)' extern
| |-ParmVarDecl 0x55681d779420 <<invalid sloc>> <invalid sloc> 'unsigned int'
| |-NoThrowAttr 0x55681d779490 <col:10> Implicit
| `-ConstAttr 0x55681d7794e8 <col:10> Implicit
|-FunctionDecl 0x55681d779740 <line:74:1, line:78:1> line:75:1 __bswap_64 '__uint64_t (__uint64_t)' static inline
| |-ParmVarDecl 0x55681d779638 <col:13, col:24> col:24 used __bsx '__uint64_t':'unsigned long'
| `-CompoundStmt 0x55681d779a58 <line:76:1, line:78:1>
|   `-ReturnStmt 0x55681d779a48 <line:77:3, col:34>
|     `-CallExpr 0x55681d779a08 <col:10, col:34> 'unsigned long'
|       |-ImplicitCastExpr 0x55681d7799f0 <col:10> 'unsigned long (*)(unsigned long)' <BuiltinFnToFnPtr>
|       | `-DeclRefExpr 0x55681d779978 <col:10> '<builtin fn type>' Function 0x55681d7797e8 '__builtin_bswap64' 'unsigned long (unsigned long)'
|       `-ImplicitCastExpr 0x55681d779a30 <col:29> '__uint64_t':'unsigned long' <LValueToRValue>
|         `-DeclRefExpr 0x55681d779998 <col:29> '__uint64_t':'unsigned long' lvalue ParmVar 0x55681d779638 '__bsx' '__uint64_t':'unsigned long'
|-FunctionDecl 0x55681d7797e8 <col:10> col:10 implicit used __builtin_bswap64 'unsigned long (unsigned long)' extern
| |-ParmVarDecl 0x55681d779888 <<invalid sloc>> <invalid sloc> 'unsigned long'
| |-NoThrowAttr 0x55681d7798f8 <col:10> Implicit
| `-ConstAttr 0x55681d779950 <col:10> Implicit
|-TypedefDecl 0x55681d779a88 <line:79:1, col:27> col:27 referenced size_t 'unsigned long'
| `-BuiltinType 0x55681d70ffd0 'unsigned long'
|-TypedefDecl 0x55681d779b18 <line:81:1, col:18> col:18 referenced time_t '__time_t':'long'
| `-TypedefType 0x55681d779ae0 '__time_t' sugar
|   |-Typedef 0x55681d777708 '__time_t'
|   `-BuiltinType 0x55681d70ff30 'long'
|-RecordDecl 0x55681d779b70 <line:84:1, line:88:3> line:84:8 struct timespec definition
| |-FieldDecl 0x55681d779c28 <line:86:5, col:14> col:14 tv_sec '__time_t':'long'
| `-FieldDecl 0x55681d779cb8 <line:87:5, col:23> col:23 tv_nsec '__syscall_slong_t':'long'
|-TypedefDecl 0x55681d779d48 <line:89:1, col:17> col:17 referenced pid_t '__pid_t':'int'
| `-TypedefType 0x55681d779d10 '__pid_t' sugar
|   |-Typedef 0x55681d777238 '__pid_t'
|   `-BuiltinType 0x55681d70ff10 'int'
|-RecordDecl 0x55681d779da0 <line:90:1, line:93:3> line:90:8 struct sched_param definition
| `-FieldDecl 0x55681d779e60 <line:92:5, col:9> col:9 __sched_priority 'int'
|-RecordDecl 0x55681d779eb0 <line:96:1, line:99:3> line:96:8 struct __sched_param definition
| `-FieldDecl 0x55681d779f70 <line:98:5, col:9> col:9 __sched_priority 'int'
|-TypedefDecl 0x55681d779fd8 <line:100:1, col:27> col:27 referenced __cpu_mask 'unsigned long'
| `-BuiltinType 0x55681d70ffd0 'unsigned long'
|-RecordDecl 0x55681d77a030 <line:101:9, line:104:1> line:101:9 struct definition
| `-FieldDecl 0x55681d77a2c0 <line:103:3, col:53> col:14 __bits '__cpu_mask [64]'
|-TypedefDecl 0x55681d77b3a0 <line:101:1, line:104:3> col:3 referenced cpu_set_t 'struct cpu_set_t':'cpu_set_t'
| `-ElaboratedType 0x55681d77a310 'struct cpu_set_t' sugar
|   `-RecordType 0x55681d77a0b0 'cpu_set_t'
|     `-Record 0x55681d77a030 ''
|-FunctionDecl 0x55681d77b678 <line:106:1, line:107:42> line:106:12 __sched_cpucount 'int (size_t, const cpu_set_t *)' extern
| |-ParmVarDecl 0x55681d77b448 <col:30, col:37> col:37 __setsize 'size_t':'unsigned long'
| |-ParmVarDecl 0x55681d77b550 <col:48, col:65> col:65 __setp 'const cpu_set_t *'
| `-NoThrowAttr 0x55681d77b728 <line:107:19>
|-FunctionDecl 0x55681d77b900 <line:108:1, col:92> col:19 __sched_cpualloc 'cpu_set_t *(size_t)' extern
| |-ParmVarDecl 0x55681d77b790 <col:37, col:44> col:44 __count 'size_t':'unsigned long'
| `-NoThrowAttr 0x55681d77b9a8 <col:69>
|-FunctionDecl 0x55681d77bb20 <line:109:1, col:87> col:13 __sched_cpufree 'void (cpu_set_t *)' extern
| |-ParmVarDecl 0x55681d77ba10 <col:30, col:41> col:41 __set 'cpu_set_t *'
| `-NoThrowAttr 0x55681d77bbc8 <col:64>
|-FunctionDecl 0x55681d77be88 <line:112:1, line:113:45> line:112:12 sched_setparam 'int (__pid_t, const struct sched_param *)' extern
| |-ParmVarDecl 0x55681d77bc30 <col:28, col:36> col:36 __pid '__pid_t':'int'
| |-ParmVarDecl 0x55681d77bd68 <col:43, col:69> col:69 __param 'const struct sched_param *'
| `-NoThrowAttr 0x55681d77bf38 <line:113:22>
|-FunctionDecl 0x55681d77c1b8 <line:114:1, col:111> col:12 sched_getparam 'int (__pid_t, struct sched_param *)' extern
| |-ParmVarDecl 0x55681d77bfa0 <col:28, col:36> col:36 __pid '__pid_t':'int'
| |-ParmVarDecl 0x55681d77c098 <col:43, col:63> col:63 __param 'struct sched_param *'
| `-NoThrowAttr 0x55681d77c268 <col:88>
|-FunctionDecl 0x55681d77c588 <line:115:1, line:116:85> line:115:12 sched_setscheduler 'int (__pid_t, int, const struct sched_param *)' extern
| |-ParmVarDecl 0x55681d77c2d0 <col:32, col:40> col:40 __pid '__pid_t':'int'
| |-ParmVarDecl 0x55681d77c3b0 <col:47, col:51> col:51 __policy 'int'
| |-ParmVarDecl 0x55681d77c440 <line:116:11, col:37> col:37 __param 'const struct sched_param *'
| `-NoThrowAttr 0x55681d77c640 <col:62>
|-FunctionDecl 0x55681d77c7b8 <line:117:1, col:86> col:12 sched_getscheduler 'int (__pid_t)' extern
| |-ParmVarDecl 0x55681d77c6a8 <col:32, col:40> col:40 __pid '__pid_t':'int'
| `-NoThrowAttr 0x55681d77c860 <col:63>
|-FunctionDecl 0x55681d77c988 <line:118:1, col:70> col:12 sched_yield 'int (void)' extern
| `-NoThrowAttr 0x55681d77ca28 <col:47>
|-FunctionDecl 0x55681d77cb30 <line:119:1, col:92> col:12 sched_get_priority_max 'int (int)' extern
| |-ParmVarDecl 0x55681d77ca98 <col:36, col:40> col:40 __algorithm 'int'
| `-NoThrowAttr 0x55681d77cbd8 <col:69>
|-FunctionDecl 0x55681d77cce0 <line:120:1, col:92> col:12 sched_get_priority_min 'int (int)' extern
| |-ParmVarDecl 0x55681d77cc48 <col:36, col:40> col:40 __algorithm 'int'
| `-NoThrowAttr 0x55681d77cd88 <col:69>
|-FunctionDecl 0x55681d77d048 <line:121:1, col:111> col:12 sched_rr_get_interval 'int (__pid_t, struct timespec *)' extern
| |-ParmVarDecl 0x55681d77cdf0 <col:35, col:43> col:43 __pid '__pid_t':'int'
| |-ParmVarDecl 0x55681d77cf28 <col:50, col:67> col:67 __t 'struct timespec *'
| `-NoThrowAttr 0x55681d77d0f8 <col:88>
|-TypedefDecl 0x55681d77d188 <line:125:1, col:19> col:19 referenced clock_t '__clock_t':'long'
| `-TypedefType 0x55681d77d150 '__clock_t' sugar
|   |-Typedef 0x55681d777548 '__clock_t'
|   `-BuiltinType 0x55681d70ff30 'long'
|-TypedefDecl 0x55681d77d218 <line:128:1, col:21> col:21 referenced clockid_t '__clockid_t':'int'
| `-TypedefType 0x55681d77d1e0 '__clockid_t' sugar
|   |-Typedef 0x55681d777938 '__clockid_t'
|   `-BuiltinType 0x55681d70ff10 'int'
|-TypedefDecl 0x55681d77d2a8 <line:129:1, col:19> col:19 referenced timer_t '__timer_t':'void *'
| `-TypedefType 0x55681d77d270 '__timer_t' sugar
|   |-Typedef 0x55681d7779a8 '__timer_t'
|   `-PointerType 0x55681d710630 'void *'
|     `-BuiltinType 0x55681d70fe70 'void'
|-RecordDecl 0x55681d77d300 <line:131:1, line:144:1> line:131:8 struct tm definition
| |-FieldDecl 0x55681d77d3d8 <line:133:3, col:7> col:7 tm_sec 'int'
| |-FieldDecl 0x55681d77d440 <line:134:3, col:7> col:7 tm_min 'int'
| |-FieldDecl 0x55681d77d4a8 <line:135:3, col:7> col:7 tm_hour 'int'
| |-FieldDecl 0x55681d77d510 <line:136:3, col:7> col:7 tm_mday 'int'
| |-FieldDecl 0x55681d77d578 <line:137:3, col:7> col:7 tm_mon 'int'
| |-FieldDecl 0x55681d77d5e0 <line:138:3, col:7> col:7 tm_year 'int'
| |-FieldDecl 0x55681d77d648 <line:139:3, col:7> col:7 tm_wday 'int'
| |-FieldDecl 0x55681d77d6b0 <line:140:3, col:7> col:7 tm_yday 'int'
| |-FieldDecl 0x55681d77d718 <line:141:3, col:7> col:7 tm_isdst 'int'
| |-FieldDecl 0x55681d77d780 <line:142:3, col:12> col:12 tm_gmtoff 'long'
| `-FieldDecl 0x55681d77d7e8 <line:143:3, col:15> col:15 tm_zone 'const char *'
|-RecordDecl 0x55681d77d838 <line:147:1, line:151:3> line:147:8 struct itimerspec definition
| |-FieldDecl 0x55681d77d908 <line:149:5, col:21> col:21 it_interval 'struct timespec':'struct timespec'
| `-FieldDecl 0x55681d77d978 <line:150:5, col:21> col:21 it_value 'struct timespec':'struct timespec'
|-RecordDecl 0x55681d77da20 <line:152:1, col:8> col:8 struct sigevent
|-FunctionDecl 0x55681d77dbf0 <line:154:1, col:68> col:16 clock 'clock_t (void)' extern
| `-NoThrowAttr 0x55681d77dc90 <col:45>
|-FunctionDecl 0x55681d77de70 <line:155:1, col:77> col:15 time 'time_t (time_t *)' extern
| |-ParmVarDecl 0x55681d77dd60 <col:21, col:29> col:29 __timer 'time_t *'
| `-NoThrowAttr 0x55681d77df18 <col:54>
|-FunctionDecl 0x55681d77e118 <line:156:1, line:157:73> line:156:15 difftime 'double (time_t, time_t)' extern
| |-ParmVarDecl 0x55681d77df80 <col:25, col:32> col:32 __time1 'time_t':'long'
| |-ParmVarDecl 0x55681d77dff8 <col:41, col:48> col:48 __time0 'time_t':'long'
| |-NoThrowAttr 0x55681d77e1c8 <line:157:22>
| `-ConstAttr 0x55681d77e220 <col:63>
|-FunctionDecl 0x55681d77f050 <line:158:1, col:79> col:15 mktime 'time_t (struct tm *)' extern
| |-ParmVarDecl 0x55681d77e318 <col:23, col:34> col:34 __tp 'struct tm *'
| `-NoThrowAttr 0x55681d77f0f8 <col:56>
|-FunctionDecl 0x55681d77f4a0 <line:159:1, line:161:77> line:159:15 strftime 'size_t (char *restrict, size_t, const char *restrict, const struct tm *restrict)' extern
| |-ParmVarDecl 0x55681d77f168 <col:25, col:42> col:42 __s 'char *restrict'
| |-ParmVarDecl 0x55681d77f1e0 <col:47, col:54> col:54 __maxsize 'size_t':'unsigned long'
| |-ParmVarDecl 0x55681d77f260 <line:160:4, col:27> col:27 __format 'const char *restrict'
| |-ParmVarDecl 0x55681d77f358 <line:161:4, col:32> col:32 __tp 'const struct tm *restrict'
| `-NoThrowAttr 0x55681d77f560 <col:54>
|-RecordDecl 0x55681d77f5b8 <line:163:9, line:170:1> line:163:16 struct __locale_struct definition
| |-RecordDecl 0x55681d77f668 parent 0x55681d70fe18 <line:165:3, col:10> col:10 struct __locale_data
| |-FieldDecl 0x55681d77f8c8 <col:3, col:37> col:25 __locales 'struct __locale_data *[13]'
| |-FieldDecl 0x55681d77f968 <line:166:3, col:29> col:29 __ctype_b 'const unsigned short *'
| |-FieldDecl 0x55681d77f9d0 <line:167:3, col:14> col:14 __ctype_tolower 'const int *'
| |-FieldDecl 0x55681d77fa38 <line:168:3, col:14> col:14 __ctype_toupper 'const int *'
| `-FieldDecl 0x55681d77fb28 <line:169:3, col:25> col:15 __names 'const char *[13]'
|-TypedefDecl 0x55681d77fc48 <line:163:1, line:170:4> col:4 referenced __locale_t 'struct __locale_struct *'
| `-PointerType 0x55681d77fbf0 'struct __locale_struct *'
|   `-ElaboratedType 0x55681d77fb80 'struct __locale_struct' sugar
|     `-RecordType 0x55681d77f640 'struct __locale_struct'
|       `-Record 0x55681d77f5b8 '__locale_struct'
|-TypedefDecl 0x55681d77fcf8 <line:171:1, col:20> col:20 locale_t '__locale_t':'struct __locale_struct *'
| `-TypedefType 0x55681d77fcc0 '__locale_t' sugar
|   |-Typedef 0x55681d77fc48 '__locale_t'
|   `-PointerType 0x55681d77fbf0 'struct __locale_struct *'
|     `-ElaboratedType 0x55681d77fb80 'struct __locale_struct' sugar
|       `-RecordType 0x55681d77f640 'struct __locale_struct'
|         `-Record 0x55681d77f5b8 '__locale_struct'
|-FunctionDecl 0x55681d781110 <line:172:1, line:175:63> line:172:15 strftime_l 'size_t (char *restrict, size_t, const char *restrict, const struct tm *restrict, __locale_t)' extern
| |-ParmVarDecl 0x55681d77fd68 <col:27, col:44> col:44 __s 'char *restrict'
| |-ParmVarDecl 0x55681d77fde0 <col:49, col:56> col:56 __maxsize 'size_t':'unsigned long'
| |-ParmVarDecl 0x55681d77fe60 <line:173:6, col:29> col:29 __format 'const char *restrict'
| |-ParmVarDecl 0x55681d77fef0 <line:174:6, col:34> col:34 __tp 'const struct tm *restrict'
| |-ParmVarDecl 0x55681d77ff68 <line:175:6, col:17> col:17 __loc '__locale_t':'struct __locale_struct *'
| `-NoThrowAttr 0x55681d7811d8 <col:40>
|-FunctionDecl 0x55681d7813c8 <line:177:1, col:89> col:19 gmtime 'struct tm *(const time_t *)' extern
| |-ParmVarDecl 0x55681d7812a0 <col:27, col:41> col:41 __timer 'const time_t *'
| `-NoThrowAttr 0x55681d781470 <col:66>
|-FunctionDecl 0x55681d781580 <line:178:1, col:92> col:19 localtime 'struct tm *(const time_t *)' extern
| |-ParmVarDecl 0x55681d7814d8 <col:30, col:44> col:44 __timer 'const time_t *'
| `-NoThrowAttr 0x55681d781628 <col:69>
|-FunctionDecl 0x55681d781858 <line:180:1, line:181:75> line:180:19 gmtime_r 'struct tm *(const time_t *restrict, struct tm *restrict)' extern
| |-ParmVarDecl 0x55681d781690 <col:29, col:54> col:54 __timer 'const time_t *restrict'
| |-ParmVarDecl 0x55681d781720 <line:181:8, col:30> col:30 __tp 'struct tm *restrict'
| `-NoThrowAttr 0x55681d781908 <col:52>
|-FunctionDecl 0x55681d781ab0 <line:182:1, line:183:78> line:182:19 localtime_r 'struct tm *(const time_t *restrict, struct tm *restrict)' extern
| |-ParmVarDecl 0x55681d781970 <col:32, col:57> col:57 __timer 'const time_t *restrict'
| |-ParmVarDecl 0x55681d781a00 <line:183:11, col:33> col:33 __tp 'struct tm *restrict'
| `-NoThrowAttr 0x55681d781b60 <col:55>
|-FunctionDecl 0x55681d781cf8 <line:185:1, col:85> col:14 asctime 'char *(const struct tm *)' extern
| |-ParmVarDecl 0x55681d781be0 <col:23, col:40> col:40 __tp 'const struct tm *'
| `-NoThrowAttr 0x55681d781da0 <col:62>
|-FunctionDecl 0x55681d781f18 <line:186:1, col:83> col:14 ctime 'char *(const time_t *)' extern
| |-ParmVarDecl 0x55681d781e08 <col:21, col:35> col:35 __timer 'const time_t *'
| `-NoThrowAttr 0x55681d781fc0 <col:60>
|-FunctionDecl 0x55681d7822b8 <line:188:1, line:189:67> line:188:14 asctime_r 'char *(const struct tm *restrict, char *restrict)' extern
| |-ParmVarDecl 0x55681d782118 <col:25, col:53> col:53 __tp 'const struct tm *restrict'
| |-ParmVarDecl 0x55681d782198 <line:189:4, col:21> col:21 __buf 'char *restrict'
| `-NoThrowAttr 0x55681d782368 <col:44>
|-FunctionDecl 0x55681d782578 <line:190:1, line:191:72> line:190:14 ctime_r 'char *(const time_t *restrict, char *restrict)' extern
| |-ParmVarDecl 0x55681d7823d0 <col:23, col:48> col:48 __timer 'const time_t *restrict'
| |-ParmVarDecl 0x55681d782450 <line:191:9, col:26> col:26 __buf 'char *restrict'
| `-NoThrowAttr 0x55681d782628 <col:49>
|-VarDecl 0x55681d782728 <line:192:1, col:24> col:14 __tzname 'char *[2]' extern
|-VarDecl 0x55681d7827a8 <line:193:1, col:12> col:12 __daylight 'int' extern
|-VarDecl 0x55681d782828 <line:194:1, col:17> col:17 __timezone 'long' extern
|-VarDecl 0x55681d7828f0 <line:195:1, col:22> col:14 tzname 'char *[2]' extern
|-FunctionDecl 0x55681d782a20 <line:196:1, col:65> col:13 tzset 'void (void)' extern
| `-NoThrowAttr 0x55681d782ac0 <col:42>
|-VarDecl 0x55681d782b30 <line:197:1, col:12> col:12 daylight 'int' extern
|-VarDecl 0x55681d782bb0 <line:198:1, col:17> col:17 timezone 'long' extern
|-FunctionDecl 0x55681d782d38 <line:199:1, col:80> col:12 stime 'int (const time_t *)' extern
| |-ParmVarDecl 0x55681d782c28 <col:19, col:33> col:33 __when 'const time_t *'
| `-NoThrowAttr 0x55681d782de0 <col:57>
|-FunctionDecl 0x55681d782ef0 <line:200:1, col:79> col:15 timegm 'time_t (struct tm *)' extern
| |-ParmVarDecl 0x55681d782e60 <col:23, col:34> col:34 __tp 'struct tm *'
| `-NoThrowAttr 0x55681d782f98 <col:56>
|-FunctionDecl 0x55681d7830d0 <line:201:1, col:82> col:15 timelocal 'time_t (struct tm *)' extern
| |-ParmVarDecl 0x55681d783018 <col:26, col:37> col:37 __tp 'struct tm *'
| `-NoThrowAttr 0x55681d783178 <col:59>
|-FunctionDecl 0x55681d783280 <line:202:1, col:99> col:12 dysize 'int (int)' extern
| |-ParmVarDecl 0x55681d7831e8 <col:20, col:24> col:24 __year 'int'
| |-NoThrowAttr 0x55681d783328 <col:48>
| `-ConstAttr 0x55681d783380 <col:89>
|-FunctionDecl 0x55681d7835e8 <line:203:1, line:204:37> line:203:12 nanosleep 'int (const struct timespec *, struct timespec *)' extern
| |-ParmVarDecl 0x55681d783438 <col:23, col:46> col:46 __requested_time 'const struct timespec *'
| `-ParmVarDecl 0x55681d7834c8 <line:204:9, col:26> col:26 __remaining 'struct timespec *'
|-FunctionDecl 0x55681d783848 <line:205:1, col:111> col:12 clock_getres 'int (clockid_t, struct timespec *)' extern
| |-ParmVarDecl 0x55681d7836d8 <col:26, col:36> col:36 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x55681d783768 <col:48, col:65> col:65 __res 'struct timespec *'
| `-NoThrowAttr 0x55681d7838f8 <col:88>
|-FunctionDecl 0x55681d783a90 <line:206:1, col:111> col:12 clock_gettime 'int (clockid_t, struct timespec *)' extern
| |-ParmVarDecl 0x55681d783960 <col:27, col:37> col:37 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x55681d7839f0 <col:49, col:66> col:66 __tp 'struct timespec *'
| `-NoThrowAttr 0x55681d783b40 <col:88>
|-FunctionDecl 0x55681d783d58 <line:207:1, line:208:45> line:207:12 clock_settime 'int (clockid_t, const struct timespec *)' extern
| |-ParmVarDecl 0x55681d783ba8 <col:27, col:37> col:37 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x55681d783c38 <col:49, col:72> col:72 __tp 'const struct timespec *'
| `-NoThrowAttr 0x55681d783e08 <line:208:22>
|-FunctionDecl 0x55681d784178 <line:209:1, line:211:30> line:209:12 clock_nanosleep 'int (clockid_t, int, const struct timespec *, struct timespec *)' extern
| |-ParmVarDecl 0x55681d783e70 <col:29, col:39> col:39 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x55681d783ef0 <col:51, col:55> col:55 __flags 'int'
| |-ParmVarDecl 0x55681d783f80 <line:210:8, col:31> col:31 __req 'const struct timespec *'
| `-ParmVarDecl 0x55681d784010 <line:211:8, col:25> col:25 __rem 'struct timespec *'
|-FunctionDecl 0x55681d784478 <line:212:1, col:108> col:12 clock_getcpuclockid 'int (pid_t, clockid_t *)' extern
| |-ParmVarDecl 0x55681d784278 <col:33, col:39> col:39 __pid 'pid_t':'int'
| |-ParmVarDecl 0x55681d784350 <col:46, col:57> col:57 __clock_id 'clockid_t *'
| `-NoThrowAttr 0x55681d784528 <col:85>
|-FunctionDecl 0x55681d784918 <line:213:1, line:215:75> line:213:12 timer_create 'int (clockid_t, struct sigevent *restrict, timer_t *restrict)' extern
| |-ParmVarDecl 0x55681d784590 <col:26, col:36> col:36 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x55681d7846c8 <line:214:5, col:33> col:33 __evp 'struct sigevent *restrict'
| |-ParmVarDecl 0x55681d7847d0 <line:215:5, col:25> col:25 __timerid 'timer_t *restrict'
| `-NoThrowAttr 0x55681d7849d0 <col:52>
|-FunctionDecl 0x55681d784b48 <line:216:1, col:84> col:12 timer_delete 'int (timer_t)' extern
| |-ParmVarDecl 0x55681d784a38 <col:26, col:34> col:34 __timerid 'timer_t':'void *'
| `-NoThrowAttr 0x55681d784bf0 <col:61>
|-FunctionDecl 0x55681d7850f0 <line:217:1, line:219:85> line:217:12 timer_settime 'int (timer_t, int, const struct itimerspec *restrict, struct itimerspec *restrict)' extern
| |-ParmVarDecl 0x55681d784c58 <col:27, col:35> col:35 __timerid 'timer_t':'void *'
| |-ParmVarDecl 0x55681d784cd8 <col:46, col:50> col:50 __flags 'int'
| |-ParmVarDecl 0x55681d784e08 <line:218:6, col:42> col:42 __value 'const struct itimerspec *restrict'
| |-ParmVarDecl 0x55681d784ef8 <line:219:6, col:36> col:36 __ovalue 'struct itimerspec *restrict'
| `-NoThrowAttr 0x55681d7851b0 <col:62>
|-FunctionDecl 0x55681d7853c8 <line:220:1, line:221:45> line:220:12 timer_gettime 'int (timer_t, struct itimerspec *)' extern
| |-ParmVarDecl 0x55681d785218 <col:27, col:35> col:35 __timerid 'timer_t':'void *'
| |-ParmVarDecl 0x55681d7852a8 <col:46, col:65> col:65 __value 'struct itimerspec *'
| `-NoThrowAttr 0x55681d785478 <line:221:22>
|-FunctionDecl 0x55681d785578 <line:222:1, col:88> col:12 timer_getoverrun 'int (timer_t)' extern
| |-ParmVarDecl 0x55681d7854e0 <col:30, col:38> col:38 __timerid 'timer_t':'void *'
| `-NoThrowAttr 0x55681d785620 <col:65>
|-TypedefDecl 0x55681d785690 <line:224:1, col:27> col:27 referenced pthread_t 'unsigned long'
| `-BuiltinType 0x55681d70ffd0 'unsigned long'
|-RecordDecl 0x55681d7856e8 <line:225:1, line:229:1> line:225:7 union pthread_attr_t definition
| |-FieldDecl 0x55681d785830 <line:227:3, col:17> col:8 __size 'char [56]'
| `-FieldDecl 0x55681d785898 <line:228:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x55681d785948 <line:230:1, col:30> col:30 referenced pthread_attr_t 'union pthread_attr_t':'union pthread_attr_t'
| `-ElaboratedType 0x55681d7858f0 'union pthread_attr_t' sugar
|   `-RecordType 0x55681d785770 'union pthread_attr_t'
|     `-Record 0x55681d7856e8 'pthread_attr_t'
|-RecordDecl 0x55681d7859a0 <line:231:9, line:235:1> line:231:16 struct __pthread_internal_list definition
| |-FieldDecl 0x55681d785b18 <line:233:3, col:35> col:35 __prev 'struct __pthread_internal_list *'
| `-FieldDecl 0x55681d785b90 <line:234:3, col:35> col:35 __next 'struct __pthread_internal_list *'
|-TypedefDecl 0x55681d785c40 <line:231:1, line:235:3> col:3 referenced __pthread_list_t 'struct __pthread_internal_list':'struct __pthread_internal_list'
| `-ElaboratedType 0x55681d785be0 'struct __pthread_internal_list' sugar
|   `-RecordType 0x55681d785a20 'struct __pthread_internal_list'
|     `-Record 0x55681d7859a0 '__pthread_internal_list'
|-RecordDecl 0x55681d785cb0 <line:236:9, line:250:1> line:236:9 union definition
| |-RecordDecl 0x55681d785d58 parent 0x55681d70fe18 <line:238:3, line:247:3> line:238:10 struct __pthread_mutex_s definition
| | |-FieldDecl 0x55681d785e30 <line:240:5, col:9> col:9 __lock 'int'
| | |-FieldDecl 0x55681d785e98 <line:241:5, col:18> col:18 __count 'unsigned int'
| | |-FieldDecl 0x55681d785f00 <line:242:5, col:9> col:9 __owner 'int'
| | |-FieldDecl 0x55681d785f68 <line:243:5, col:18> col:18 __nusers 'unsigned int'
| | |-FieldDecl 0x55681d785fd0 <line:244:5, col:9> col:9 __kind 'int'
| | |-FieldDecl 0x55681d786038 <line:245:5, col:9> col:9 __spins 'int'
| | `-FieldDecl 0x55681d78a110 <line:246:5, col:22> col:22 __list '__pthread_list_t':'struct __pthread_internal_list'
| |-FieldDecl 0x55681d78a1c0 <line:238:3, line:247:5> col:5 __data 'struct __pthread_mutex_s':'struct __pthread_mutex_s'
| |-FieldDecl 0x55681d78a2b0 <line:248:3, col:17> col:8 __size 'char [40]'
| `-FieldDecl 0x55681d78a318 <line:249:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x55681d78a4a0 <line:236:1, line:250:3> col:3 referenced pthread_mutex_t 'union pthread_mutex_t':'pthread_mutex_t'
| `-ElaboratedType 0x55681d78a440 'union pthread_mutex_t' sugar
|   `-RecordType 0x55681d785d30 'pthread_mutex_t'
|     `-Record 0x55681d785cb0 ''
|-RecordDecl 0x55681d78a510 <line:251:9, line:255:1> line:251:9 union definition
| |-FieldDecl 0x55681d78a650 <line:253:3, col:16> col:8 __size 'char [4]'
| `-FieldDecl 0x55681d78a6b8 <line:254:3, col:7> col:7 __align 'int'
|-TypedefDecl 0x55681d78a770 <line:251:1, line:255:3> col:3 referenced pthread_mutexattr_t 'union pthread_mutexattr_t':'pthread_mutexattr_t'
| `-ElaboratedType 0x55681d78a710 'union pthread_mutexattr_t' sugar
|   `-RecordType 0x55681d78a590 'pthread_mutexattr_t'
|     `-Record 0x55681d78a510 ''
|-RecordDecl 0x55681d78a7e0 <line:256:9, line:271:1> line:256:9 union definition
| |-RecordDecl 0x55681d78a888 <line:258:3, line:268:3> line:258:3 struct definition
| | |-FieldDecl 0x55681d78a950 <line:260:5, col:9> col:9 __lock 'int'
| | |-FieldDecl 0x55681d78a9b8 <line:261:5, col:18> col:18 __futex 'unsigned int'
| | |-FieldDecl 0x55681d78aa20 <line:262:19, col:42> col:42 __total_seq 'unsigned long long'
| | |-FieldDecl 0x55681d78aa88 <line:263:19, col:42> col:42 __wakeup_seq 'unsigned long long'
| | |-FieldDecl 0x55681d78aaf0 <line:264:19, col:42> col:42 __woken_seq 'unsigned long long'
| | |-FieldDecl 0x55681d78ab58 <line:265:5, col:11> col:11 __mutex 'void *'
| | |-FieldDecl 0x55681d78abc0 <line:266:5, col:18> col:18 __nwaiters 'unsigned int'
| | `-FieldDecl 0x55681d78ac28 <line:267:5, col:18> col:18 __broadcast_seq 'unsigned int'
| |-FieldDecl 0x55681d78ace0 <line:258:3, line:268:5> col:5 __data 'struct (anonymous struct at ./split_4/mix039_pso.oepc_false-unreach-call.i:258:3)':'struct pthread_cond_t::(anonymous at ./split_4/mix039_pso.oepc_false-unreach-call.i:258:3)'
| |-FieldDecl 0x55681d78add0 <line:269:3, col:17> col:8 __size 'char [48]'
| `-FieldDecl 0x55681d78ae38 <line:270:17, col:31> col:31 __align 'long long'
|-TypedefDecl 0x55681d78af70 <line:256:1, line:271:3> col:3 referenced pthread_cond_t 'union pthread_cond_t':'pthread_cond_t'
| `-ElaboratedType 0x55681d78af10 'union pthread_cond_t' sugar
|   `-RecordType 0x55681d78a860 'pthread_cond_t'
|     `-Record 0x55681d78a7e0 ''
|-RecordDecl 0x55681d78afe0 <line:272:9, line:276:1> line:272:9 union definition
| |-FieldDecl 0x55681d78c130 <line:274:3, col:16> col:8 __size 'char [4]'
| `-FieldDecl 0x55681d78c198 <line:275:3, col:7> col:7 __align 'int'
|-TypedefDecl 0x55681d78c250 <line:272:1, line:276:3> col:3 referenced pthread_condattr_t 'union pthread_condattr_t':'pthread_condattr_t'
| `-ElaboratedType 0x55681d78c1f0 'union pthread_condattr_t' sugar
|   `-RecordType 0x55681d78b060 'pthread_condattr_t'
|     `-Record 0x55681d78afe0 ''
|-TypedefDecl 0x55681d78c2d8 <line:277:1, col:22> col:22 referenced pthread_key_t 'unsigned int'
| `-BuiltinType 0x55681d70ffb0 'unsigned int'
|-TypedefDecl 0x55681d78c348 <line:278:1, col:13> col:13 referenced pthread_once_t 'int'
| `-BuiltinType 0x55681d70ff10 'int'
|-RecordDecl 0x55681d78c3a0 <line:279:9, line:297:1> line:279:9 union definition
| |-RecordDecl 0x55681d78c448 <line:281:3, line:294:3> line:281:3 struct definition
| | |-FieldDecl 0x55681d78c510 <line:283:5, col:9> col:9 __lock 'int'
| | |-FieldDecl 0x55681d78c578 <line:284:5, col:18> col:18 __nr_readers 'unsigned int'
| | |-FieldDecl 0x55681d78c5e0 <line:285:5, col:18> col:18 __readers_wakeup 'unsigned int'
| | |-FieldDecl 0x55681d78c648 <line:286:5, col:18> col:18 __writer_wakeup 'unsigned int'
| | |-FieldDecl 0x55681d78c6b0 <line:287:5, col:18> col:18 __nr_readers_queued 'unsigned int'
| | |-FieldDecl 0x55681d78c718 <line:288:5, col:18> col:18 __nr_writers_queued 'unsigned int'
| | |-FieldDecl 0x55681d78c780 <line:289:5, col:9> col:9 __writer 'int'
| | |-FieldDecl 0x55681d78c7e8 <line:290:5, col:9> col:9 __shared 'int'
| | |-FieldDecl 0x55681d78c850 <line:291:5, col:23> col:23 __pad1 'unsigned long'
| | |-FieldDecl 0x55681d78c8b8 <line:292:5, col:23> col:23 __pad2 'unsigned long'
| | `-FieldDecl 0x55681d78c920 <line:293:5, col:18> col:18 __flags 'unsigned int'
| |-FieldDecl 0x55681d78c9d0 <line:281:3, line:294:5> col:5 __data 'struct (anonymous struct at ./split_4/mix039_pso.oepc_false-unreach-call.i:281:3)':'struct pthread_rwlock_t::(anonymous at ./split_4/mix039_pso.oepc_false-unreach-call.i:281:3)'
| |-FieldDecl 0x55681d78ca78 <line:295:3, col:17> col:8 __size 'char [56]'
| `-FieldDecl 0x55681d78cae0 <line:296:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x55681d78cc30 <line:279:1, line:297:3> col:3 referenced pthread_rwlock_t 'union pthread_rwlock_t':'pthread_rwlock_t'
| `-ElaboratedType 0x55681d78cbd0 'union pthread_rwlock_t' sugar
|   `-RecordType 0x55681d78c420 'pthread_rwlock_t'
|     `-Record 0x55681d78c3a0 ''
|-RecordDecl 0x55681d78cca0 <line:298:9, line:302:1> line:298:9 union definition
| |-FieldDecl 0x55681d78cde0 <line:300:3, col:16> col:8 __size 'char [8]'
| `-FieldDecl 0x55681d78ce48 <line:301:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x55681d78cf00 <line:298:1, line:302:3> col:3 referenced pthread_rwlockattr_t 'union pthread_rwlockattr_t':'pthread_rwlockattr_t'
| `-ElaboratedType 0x55681d78cea0 'union pthread_rwlockattr_t' sugar
|   `-RecordType 0x55681d78cd20 'pthread_rwlockattr_t'
|     `-Record 0x55681d78cca0 ''
|-TypedefDecl 0x55681d78cf88 <line:303:1, col:22> col:22 referenced pthread_spinlock_t 'volatile int'
| `-QualType 0x55681d70ff14 'volatile int' volatile
|   `-BuiltinType 0x55681d70ff10 'int'
|-RecordDecl 0x55681d78cfe0 <line:304:9, line:308:1> line:304:9 union definition
| |-FieldDecl 0x55681d78e140 <line:306:3, col:17> col:8 __size 'char [32]'
| `-FieldDecl 0x55681d78e1a8 <line:307:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x55681d78e260 <line:304:1, line:308:3> col:3 referenced pthread_barrier_t 'union pthread_barrier_t':'pthread_barrier_t'
| `-ElaboratedType 0x55681d78e200 'union pthread_barrier_t' sugar
|   `-RecordType 0x55681d78d060 'pthread_barrier_t'
|     `-Record 0x55681d78cfe0 ''
|-RecordDecl 0x55681d78e2d0 <line:309:9, line:313:1> line:309:9 union definition
| |-FieldDecl 0x55681d78e3d0 <line:311:3, col:16> col:8 __size 'char [4]'
| `-FieldDecl 0x55681d78e438 <line:312:3, col:7> col:7 __align 'int'
|-TypedefDecl 0x55681d78e4f0 <line:309:1, line:313:3> col:3 referenced pthread_barrierattr_t 'union pthread_barrierattr_t':'pthread_barrierattr_t'
| `-ElaboratedType 0x55681d78e490 'union pthread_barrierattr_t' sugar
|   `-RecordType 0x55681d78e350 'pthread_barrierattr_t'
|     `-Record 0x55681d78e2d0 ''
|-TypedefDecl 0x55681d78e608 <line:314:1, col:29> col:18 referenced __jmp_buf 'long [8]'
| `-ConstantArrayType 0x55681d78e5a0 'long [8]' 8 
|   `-BuiltinType 0x55681d70ff30 'long'
|-EnumDecl 0x55681d78e660 <line:315:1, line:319:1> line:315:1
| |-EnumConstantDecl 0x55681d78e728 <line:317:3> col:3 PTHREAD_CREATE_JOINABLE 'int'
| `-EnumConstantDecl 0x55681d78e778 <line:318:3> col:3 PTHREAD_CREATE_DETACHED 'int'
|-EnumDecl 0x55681d78e7c8 <line:320:1, line:331:1> line:320:1
| |-EnumConstantDecl 0x55681d78e898 <line:322:3> col:3 referenced PTHREAD_MUTEX_TIMED_NP 'int'
| |-EnumConstantDecl 0x55681d78e8e8 <line:323:3> col:3 referenced PTHREAD_MUTEX_RECURSIVE_NP 'int'
| |-EnumConstantDecl 0x55681d78e938 <line:324:3> col:3 referenced PTHREAD_MUTEX_ERRORCHECK_NP 'int'
| |-EnumConstantDecl 0x55681d78e988 <line:325:3> col:3 PTHREAD_MUTEX_ADAPTIVE_NP 'int'
| |-EnumConstantDecl 0x55681d78ea10 <line:327:3, col:26> col:3 referenced PTHREAD_MUTEX_NORMAL 'int'
| | `-ConstantExpr 0x55681d78e9f8 <col:26> 'int'
| |   `-DeclRefExpr 0x55681d78e9d8 <col:26> 'int' EnumConstant 0x55681d78e898 'PTHREAD_MUTEX_TIMED_NP' 'int'
| |-EnumConstantDecl 0x55681d78ea98 <line:328:3, col:29> col:3 PTHREAD_MUTEX_RECURSIVE 'int'
| | `-ConstantExpr 0x55681d78ea80 <col:29> 'int'
| |   `-DeclRefExpr 0x55681d78ea60 <col:29> 'int' EnumConstant 0x55681d78e8e8 'PTHREAD_MUTEX_RECURSIVE_NP' 'int'
| |-EnumConstantDecl 0x55681d78eb20 <line:329:3, col:30> col:3 PTHREAD_MUTEX_ERRORCHECK 'int'
| | `-ConstantExpr 0x55681d78eb08 <col:30> 'int'
| |   `-DeclRefExpr 0x55681d78eae8 <col:30> 'int' EnumConstant 0x55681d78e938 'PTHREAD_MUTEX_ERRORCHECK_NP' 'int'
| `-EnumConstantDecl 0x55681d78eba8 <line:330:3, col:27> col:3 PTHREAD_MUTEX_DEFAULT 'int'
|   `-ConstantExpr 0x55681d78eb90 <col:27> 'int'
|     `-DeclRefExpr 0x55681d78eb70 <col:27> 'int' EnumConstant 0x55681d78ea10 'PTHREAD_MUTEX_NORMAL' 'int'
|-EnumDecl 0x55681d78ebf8 <line:332:1, line:338:1> line:332:1
| |-EnumConstantDecl 0x55681d78ecc8 <line:334:3> col:3 referenced PTHREAD_MUTEX_STALLED 'int'
| |-EnumConstantDecl 0x55681d78ed50 <line:335:3, col:30> col:3 PTHREAD_MUTEX_STALLED_NP 'int'
| | `-ConstantExpr 0x55681d78ed38 <col:30> 'int'
| |   `-DeclRefExpr 0x55681d78ed18 <col:30> 'int' EnumConstant 0x55681d78ecc8 'PTHREAD_MUTEX_STALLED' 'int'
| |-EnumConstantDecl 0x55681d78eda0 <line:336:3> col:3 referenced PTHREAD_MUTEX_ROBUST 'int'
| `-EnumConstantDecl 0x55681d78ee28 <line:337:3, col:29> col:3 PTHREAD_MUTEX_ROBUST_NP 'int'
|   `-ConstantExpr 0x55681d78ee10 <col:29> 'int'
|     `-DeclRefExpr 0x55681d78edf0 <col:29> 'int' EnumConstant 0x55681d78eda0 'PTHREAD_MUTEX_ROBUST' 'int'
|-EnumDecl 0x55681d78ee78 <line:339:1, line:344:1> line:339:1
| |-EnumConstantDecl 0x55681d78ef48 <line:341:3> col:3 PTHREAD_PRIO_NONE 'int'
| |-EnumConstantDecl 0x55681d78ef98 <line:342:3> col:3 PTHREAD_PRIO_INHERIT 'int'
| `-EnumConstantDecl 0x55681d78efe8 <line:343:3> col:3 PTHREAD_PRIO_PROTECT 'int'
|-EnumDecl 0x55681d78f038 <line:345:1, line:351:1> line:345:1
| |-EnumConstantDecl 0x55681d78f150 <line:347:3> col:3 referenced PTHREAD_RWLOCK_PREFER_READER_NP 'int'
| |-EnumConstantDecl 0x55681d78f1a0 <line:348:3> col:3 PTHREAD_RWLOCK_PREFER_WRITER_NP 'int'
| |-EnumConstantDecl 0x55681d78f1f0 <line:349:3> col:3 PTHREAD_RWLOCK_PREFER_WRITER_NONRECURSIVE_NP 'int'
| `-EnumConstantDecl 0x55681d78f278 <line:350:3, col:31> col:3 PTHREAD_RWLOCK_DEFAULT_NP 'int'
|   `-ConstantExpr 0x55681d78f260 <col:31> 'int'
|     `-DeclRefExpr 0x55681d78f240 <col:31> 'int' EnumConstant 0x55681d78f150 'PTHREAD_RWLOCK_PREFER_READER_NP' 'int'
|-EnumDecl 0x55681d78f2c8 <line:352:1, line:356:1> line:352:1
| |-EnumConstantDecl 0x55681d78f398 <line:354:3> col:3 PTHREAD_INHERIT_SCHED 'int'
| `-EnumConstantDecl 0x55681d78f3e8 <line:355:3> col:3 PTHREAD_EXPLICIT_SCHED 'int'
|-EnumDecl 0x55681d78f438 <line:357:1, line:361:1> line:357:1
| |-EnumConstantDecl 0x55681d78f508 <line:359:3> col:3 PTHREAD_SCOPE_SYSTEM 'int'
| `-EnumConstantDecl 0x55681d78f558 <line:360:3> col:3 PTHREAD_SCOPE_PROCESS 'int'
|-EnumDecl 0x55681d78f5a8 <line:362:1, line:366:1> line:362:1
| |-EnumConstantDecl 0x55681d78f678 <line:364:3> col:3 PTHREAD_PROCESS_PRIVATE 'int'
| `-EnumConstantDecl 0x55681d78f6c8 <line:365:3> col:3 PTHREAD_PROCESS_SHARED 'int'
|-RecordDecl 0x55681d78f718 <line:367:1, line:373:1> line:367:8 struct _pthread_cleanup_buffer definition
| |-FieldDecl 0x55681d78f958 <line:369:3, col:28> col:10 __routine 'void (*)(void *)'
| |-FieldDecl 0x55681d78f9c0 <line:370:3, col:9> col:9 __arg 'void *'
| |-FieldDecl 0x55681d78fa28 <line:371:3, col:7> col:7 __canceltype 'int'
| `-FieldDecl 0x55681d78fb48 <line:372:3, col:35> col:35 __prev 'struct _pthread_cleanup_buffer *'
|-EnumDecl 0x55681d78fb98 <line:374:1, line:378:1> line:374:1
| |-EnumConstantDecl 0x55681d78fc68 <line:376:3> col:3 PTHREAD_CANCEL_ENABLE 'int'
| `-EnumConstantDecl 0x55681d78fcb8 <line:377:3> col:3 PTHREAD_CANCEL_DISABLE 'int'
|-EnumDecl 0x55681d78fd08 <line:379:1, line:383:1> line:379:1
| |-EnumConstantDecl 0x55681d78fdd8 <line:381:3> col:3 PTHREAD_CANCEL_DEFERRED 'int'
| `-EnumConstantDecl 0x55681d78fe28 <line:382:3> col:3 PTHREAD_CANCEL_ASYNCHRONOUS 'int'
|-FunctionDecl 0x55681d790488 <line:385:1, line:388:96> line:385:12 used pthread_create 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' extern
| |-ParmVarDecl 0x55681d78ff20 <col:28, col:50> col:50 __newthread 'pthread_t *restrict'
| |-ParmVarDecl 0x55681d790030 <line:386:7, col:40> col:40 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x55681d790270 <line:387:7, col:39> col:15 __start_routine 'void *(*)(void *)'
| |-ParmVarDecl 0x55681d7902f0 <line:388:7, col:24> col:24 __arg 'void *restrict'
| |-NoThrowAttr 0x55681d790548 <col:47>
| |-NonNullAttr 0x55681d7905a0 <col:77, col:94> 1 3
| `-CallbackAttr 0x55681d7905d8 <line:385:12> Implicit 2 3
|-FunctionDecl 0x55681d790700 <line:389:1, col:72> col:13 pthread_exit 'void (void *) __attribute__((noreturn))' extern
| `-ParmVarDecl 0x55681d790630 <col:27, col:33> col:33 __retval 'void *'
|-FunctionDecl 0x55681d790958 <line:390:1, col:64> col:12 pthread_join 'int (pthread_t, void **)' extern
| |-ParmVarDecl 0x55681d7907b8 <col:26, col:36> col:36 __th 'pthread_t':'unsigned long'
| `-ParmVarDecl 0x55681d790838 <col:42, col:49> col:49 __thread_return 'void **'
|-FunctionDecl 0x55681d790b28 <line:391:1, col:83> col:12 pthread_detach 'int (pthread_t)' extern
| |-ParmVarDecl 0x55681d790a18 <col:28, col:38> col:38 __th 'pthread_t':'unsigned long'
| `-NoThrowAttr 0x55681d790bd0 <col:60>
|-FunctionDecl 0x55681d790d20 <line:392:1, col:105> col:18 pthread_self 'pthread_t (void)' extern
| |-NoThrowAttr 0x55681d790dc0 <col:54>
| `-ConstAttr 0x55681d790e18 <col:95>
|-FunctionDecl 0x55681d790fe8 <line:393:1, line:394:70> line:393:12 pthread_equal 'int (pthread_t, pthread_t)' extern
| |-ParmVarDecl 0x55681d790e50 <col:27, col:37> col:37 __thread1 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x55681d790ec8 <col:48, col:58> col:58 __thread2 'pthread_t':'unsigned long'
| |-NoThrowAttr 0x55681d791098 <line:394:19>
| `-ConstAttr 0x55681d7910f0 <col:60>
|-FunctionDecl 0x55681d792b08 <line:395:1, col:128> col:12 pthread_attr_init 'int (pthread_attr_t *)' extern
| |-ParmVarDecl 0x55681d7929d0 <col:31, col:47> col:47 __attr 'pthread_attr_t *'
| |-NoThrowAttr 0x55681d792bb0 <col:71>
| `-NonNullAttr 0x55681d792c08 <col:112, col:126> 1
|-FunctionDecl 0x55681d792d10 <line:396:1, line:397:79> line:396:12 pthread_attr_destroy 'int (pthread_attr_t *)' extern
| |-ParmVarDecl 0x55681d792c58 <col:34, col:50> col:50 __attr 'pthread_attr_t *'
| |-NoThrowAttr 0x55681d792db8 <line:397:22>
| `-NonNullAttr 0x55681d792e10 <col:63, col:77> 1
|-FunctionDecl 0x55681d793038 <line:398:1, line:400:82> line:398:12 pthread_attr_getdetachstate 'int (const pthread_attr_t *, int *)' extern
| |-ParmVarDecl 0x55681d792e58 <col:41, col:63> col:63 __attr 'const pthread_attr_t *'
| |-ParmVarDecl 0x55681d792ed8 <line:399:6, col:11> col:11 __detachstate 'int *'
| |-NoThrowAttr 0x55681d7930e8 <line:400:22>
| `-NonNullAttr 0x55681d793140 <col:63, col:80> 1 2
|-FunctionDecl 0x55681d793348 <line:401:1, line:403:79> line:401:12 pthread_attr_setdetachstate 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x55681d793188 <col:41, col:57> col:57 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x55681d793208 <line:402:6, col:10> col:10 __detachstate 'int'
| |-NoThrowAttr 0x55681d7933f8 <line:403:22>
| `-NonNullAttr 0x55681d793450 <col:63, col:77> 1
|-FunctionDecl 0x55681d7936a8 <line:404:1, line:406:82> line:404:12 pthread_attr_getguardsize 'int (const pthread_attr_t *, size_t *)' extern
| |-ParmVarDecl 0x55681d793498 <col:39, col:61> col:61 __attr 'const pthread_attr_t *'
| |-ParmVarDecl 0x55681d793540 <line:405:11, col:19> col:19 __guardsize 'size_t *'
| |-NoThrowAttr 0x55681d793758 <line:406:22>
| `-NonNullAttr 0x55681d7937b0 <col:63, col:80> 1 2
|-FunctionDecl 0x55681d7949e8 <line:407:1, line:409:79> line:407:12 pthread_attr_setguardsize 'int (pthread_attr_t *, size_t)' extern
| |-ParmVarDecl 0x55681d7937f8 <col:39, col:55> col:55 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x55681d793870 <line:408:11, col:18> col:18 __guardsize 'size_t':'unsigned long'
| |-NoThrowAttr 0x55681d794a98 <line:409:22>
| `-NonNullAttr 0x55681d794af0 <col:63, col:77> 1
|-FunctionDecl 0x55681d794d28 <line:410:1, line:412:82> line:410:12 pthread_attr_getschedparam 'int (const pthread_attr_t *restrict, struct sched_param *restrict)' extern
| |-ParmVarDecl 0x55681d794b38 <col:40, col:73> col:73 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x55681d794bc8 <line:411:12, col:43> col:43 __param 'struct sched_param *restrict'
| |-NoThrowAttr 0x55681d794dd8 <line:412:22>
| `-NonNullAttr 0x55681d794e30 <col:63, col:80> 1 2
|-FunctionDecl 0x55681d795068 <line:413:1, line:415:97> line:413:12 pthread_attr_setschedparam 'int (pthread_attr_t *restrict, const struct sched_param *restrict)' extern
| |-ParmVarDecl 0x55681d794e78 <col:40, col:67> col:67 __attr 'pthread_attr_t *restrict'
| |-ParmVarDecl 0x55681d794f08 <line:414:12, line:415:12> col:12 __param 'const struct sched_param *restrict'
| |-NoThrowAttr 0x55681d795118 <col:37>
| `-NonNullAttr 0x55681d795170 <col:78, col:95> 1 2
|-FunctionDecl 0x55681d795358 <line:416:1, line:418:82> line:416:12 pthread_attr_getschedpolicy 'int (const pthread_attr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x55681d7951b8 <col:41, line:417:6> col:6 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x55681d795238 <col:14, col:30> col:30 __policy 'int *restrict'
| |-NoThrowAttr 0x55681d795408 <line:418:22>
| `-NonNullAttr 0x55681d795460 <col:63, col:80> 1 2
|-FunctionDecl 0x55681d7955e8 <line:419:1, line:420:79> line:419:12 pthread_attr_setschedpolicy 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x55681d7954a8 <col:41, col:57> col:57 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x55681d795528 <col:65, col:69> col:69 __policy 'int'
| |-NoThrowAttr 0x55681d795698 <line:420:22>
| `-NonNullAttr 0x55681d7956f0 <col:63, col:77> 1
|-FunctionDecl 0x55681d795898 <line:421:1, line:423:82> line:421:12 pthread_attr_getinheritsched 'int (const pthread_attr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x55681d795738 <col:42, line:422:7> col:7 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x55681d7957b8 <col:15, col:31> col:31 __inherit 'int *restrict'
| |-NoThrowAttr 0x55681d795948 <line:423:22>
| `-NonNullAttr 0x55681d7959c0 <col:63, col:80> 1 2
|-FunctionDecl 0x55681d795b48 <line:424:1, line:426:79> line:424:12 pthread_attr_setinheritsched 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x55681d795a08 <col:42, col:58> col:58 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x55681d795a88 <line:425:7, col:11> col:11 __inherit 'int'
| |-NoThrowAttr 0x55681d795bf8 <line:426:22>
| `-NonNullAttr 0x55681d795c50 <col:63, col:77> 1
|-FunctionDecl 0x55681d795df8 <line:427:1, line:429:82> line:427:12 pthread_attr_getscope 'int (const pthread_attr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x55681d795c98 <col:35, col:68> col:68 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x55681d795d18 <line:428:7, col:23> col:23 __scope 'int *restrict'
| |-NoThrowAttr 0x55681d795ea8 <line:429:22>
| `-NonNullAttr 0x55681d795f00 <col:63, col:80> 1 2
|-FunctionDecl 0x55681d796088 <line:430:1, line:431:79> line:430:12 pthread_attr_setscope 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x55681d795f48 <col:35, col:51> col:51 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x55681d795fc8 <col:59, col:63> col:63 __scope 'int'
| |-NoThrowAttr 0x55681d796138 <line:431:22>
| `-NonNullAttr 0x55681d796190 <col:63, col:77> 1
|-FunctionDecl 0x55681d7963b8 <line:432:1, line:434:115> line:432:12 pthread_attr_getstackaddr 'int (const pthread_attr_t *restrict, void **restrict)' extern
| |-ParmVarDecl 0x55681d7961d8 <col:39, line:433:11> col:11 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x55681d796258 <col:19, col:37> col:37 __stackaddr 'void **restrict'
| |-NoThrowAttr 0x55681d796468 <line:434:22>
| |-NonNullAttr 0x55681d7964c0 <col:63, col:80> 1 2
| `-DeprecatedAttr 0x55681d7964f8 <col:100> "" ""
|-FunctionDecl 0x55681d796708 <line:435:1, line:437:112> line:435:12 pthread_attr_setstackaddr 'int (pthread_attr_t *, void *)' extern
| |-ParmVarDecl 0x55681d796548 <col:39, col:55> col:55 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x55681d7965c8 <line:436:11, col:17> col:17 __stackaddr 'void *'
| |-NoThrowAttr 0x55681d7967b8 <line:437:22>
| |-NonNullAttr 0x55681d796810 <col:63, col:77> 1
| `-DeprecatedAttr 0x55681d796848 <col:97> "" ""
|-FunctionDecl 0x55681d796a48 <line:438:1, line:440:82> line:438:12 pthread_attr_getstacksize 'int (const pthread_attr_t *restrict, size_t *restrict)' extern
| |-ParmVarDecl 0x55681d796898 <col:39, line:439:11> col:11 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x55681d796910 <col:19, col:38> col:38 __stacksize 'size_t *restrict'
| |-NoThrowAttr 0x55681d796af8 <line:440:22>
| `-NonNullAttr 0x55681d796b50 <col:63, col:80> 1 2
|-FunctionDecl 0x55681d796cd0 <line:441:1, line:443:79> line:441:12 pthread_attr_setstacksize 'int (pthread_attr_t *, size_t)' extern
| |-ParmVarDecl 0x55681d796b98 <col:39, col:55> col:55 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x55681d796c10 <line:442:11, col:18> col:18 __stacksize 'size_t':'unsigned long'
| |-NoThrowAttr 0x55681d796d80 <line:443:22>
| `-NonNullAttr 0x55681d796dd8 <col:63, col:77> 1
|-FunctionDecl 0x55681d7970c8 <line:444:1, line:447:85> line:444:12 pthread_attr_getstack 'int (const pthread_attr_t *restrict, void **restrict, size_t *restrict)' extern
| |-ParmVarDecl 0x55681d796e28 <col:35, col:68> col:68 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x55681d796ea8 <line:445:7, col:25> col:25 __stackaddr 'void **restrict'
| |-ParmVarDecl 0x55681d796f20 <line:446:7, col:26> col:26 __stacksize 'size_t *restrict'
| |-NoThrowAttr 0x55681d797180 <line:447:22>
| `-NonNullAttr 0x55681d7971d8 <col:63, col:83> 1 2 3
|-FunctionDecl 0x55681d797488 <line:448:1, line:449:100> line:448:12 pthread_attr_setstack 'int (pthread_attr_t *, void *, size_t)' extern
| |-ParmVarDecl 0x55681d797230 <col:35, col:51> col:51 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x55681d7972b0 <col:59, col:65> col:65 __stackaddr 'void *'
| |-ParmVarDecl 0x55681d797328 <line:449:7, col:14> col:14 __stacksize 'size_t':'unsigned long'
| |-NoThrowAttr 0x55681d797540 <col:43>
| `-NonNullAttr 0x55681d797598 <col:84, col:98> 1
|-FunctionDecl 0x55681d797858 <line:450:1, line:452:79> line:450:12 pthread_setschedparam 'int (pthread_t, int, const struct sched_param *)' extern
| |-ParmVarDecl 0x55681d7975e8 <col:35, col:45> col:45 __target_thread 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x55681d797668 <col:62, col:66> col:66 __policy 'int'
| |-ParmVarDecl 0x55681d7976f8 <line:451:7, col:33> col:33 __param 'const struct sched_param *'
| |-NoThrowAttr 0x55681d797910 <line:452:22>
| `-NonNullAttr 0x55681d797968 <col:63, col:77> 3
|-FunctionDecl 0x55681d797c78 <line:453:1, line:456:82> line:453:12 pthread_getschedparam 'int (pthread_t, int *restrict, struct sched_param *restrict)' extern
| |-ParmVarDecl 0x55681d7979e0 <col:35, col:45> col:45 __target_thread 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x55681d797a60 <line:454:7, col:23> col:23 __policy 'int *restrict'
| |-ParmVarDecl 0x55681d797af0 <line:455:7, col:38> col:38 __param 'struct sched_param *restrict'
| |-NoThrowAttr 0x55681d797d30 <line:456:22>
| `-NonNullAttr 0x55681d797d88 <col:63, col:80> 2 3
|-FunctionDecl 0x55681d797f78 <line:457:1, line:458:45> line:457:12 pthread_setschedprio 'int (pthread_t, int)' extern
| |-ParmVarDecl 0x55681d797dd8 <col:34, col:44> col:44 __target_thread 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x55681d797e58 <col:61, col:65> col:65 __prio 'int'
| `-NoThrowAttr 0x55681d798028 <line:458:22>
|-FunctionDecl 0x55681d7983f8 <line:459:1, line:460:71> line:459:12 pthread_once 'int (pthread_once_t *, void (*)(void))' extern
| |-ParmVarDecl 0x55681d7980f0 <col:26, col:42> col:42 __once_control 'pthread_once_t *'
| |-ParmVarDecl 0x55681d798290 <line:460:5, col:33> col:12 __init_routine 'void (*)(void)'
| `-NonNullAttr 0x55681d7984a8 <col:52, col:69> 1 2
|-FunctionDecl 0x55681d798650 <line:461:1, col:64> col:12 pthread_setcancelstate 'int (int, int *)' extern
| |-ParmVarDecl 0x55681d798530 <col:36, col:40> col:40 __state 'int'
| `-ParmVarDecl 0x55681d7985b0 <col:49, col:54> col:54 __oldstate 'int *'
|-FunctionDecl 0x55681d798838 <line:462:1, col:61> col:12 pthread_setcanceltype 'int (int, int *)' extern
| |-ParmVarDecl 0x55681d798718 <col:35, col:39> col:39 __type 'int'
| `-ParmVarDecl 0x55681d798798 <col:47, col:52> col:52 __oldtype 'int *'
|-FunctionDecl 0x55681d7989f0 <line:463:1, col:42> col:12 pthread_cancel 'int (pthread_t)' extern
| `-ParmVarDecl 0x55681d7988f8 <col:28, col:38> col:38 __th 'pthread_t':'unsigned long'
|-FunctionDecl 0x55681d798b30 <line:464:1, col:37> col:13 pthread_testcancel 'void (void)' extern
|-RecordDecl 0x55681d798bd0 <line:465:9, line:473:1> line:465:9 struct definition
| |-RecordDecl 0x55681d798c78 <line:467:3, line:471:3> line:467:3 struct definition
| | |-FieldDecl 0x55681d798d68 <line:469:5, col:15> col:15 __cancel_jmp_buf '__jmp_buf':'long [8]'
| | `-FieldDecl 0x55681d798dd0 <line:470:5, col:9> col:9 __mask_was_saved 'int'
| |-FieldDecl 0x55681d798fa0 <line:467:3, line:471:23> col:5 __cancel_jmp_buf 'struct (anonymous struct at ./split_4/mix039_pso.oepc_false-unreach-call.i:467:3) [1]'
| `-FieldDecl 0x55681d799098 <line:472:3, col:16> col:9 __pad 'void *[4]'
|-TypedefDecl 0x55681d799150 <line:465:1, line:473:3> col:3 referenced __pthread_unwind_buf_t 'struct __pthread_unwind_buf_t':'__pthread_unwind_buf_t'
| |-ElaboratedType 0x55681d7990f0 'struct __pthread_unwind_buf_t' sugar
| | `-RecordType 0x55681d798c50 '__pthread_unwind_buf_t'
| |   `-Record 0x55681d798bd0 ''
| `-AlignedAttr 0x55681d7991a8 <col:42> aligned
|   `-<<<NULL>>>
|-RecordDecl 0x55681d799220 <line:474:1, line:480:1> line:474:8 struct __pthread_cleanup_frame definition
| |-FieldDecl 0x55681d799380 <line:476:3, col:35> col:10 __cancel_routine 'void (*)(void *)'
| |-FieldDecl 0x55681d7993e8 <line:477:3, col:9> col:9 __cancel_arg 'void *'
| |-FieldDecl 0x55681d799450 <line:478:3, col:7> col:7 __do_it 'int'
| `-FieldDecl 0x55681d7994b8 <line:479:3, col:7> col:7 __cancel_type 'int'
|-FunctionDecl 0x55681d7996c0 <line:481:1, col:69> col:13 __pthread_register_cancel 'void (__pthread_unwind_buf_t *)' extern
| `-ParmVarDecl 0x55681d7995b0 <col:40, col:64> col:64 __buf '__pthread_unwind_buf_t *'
|-FunctionDecl 0x55681d799808 <line:483:1, col:71> col:13 __pthread_unregister_cancel 'void (__pthread_unwind_buf_t *)' extern
| `-ParmVarDecl 0x55681d799778 <col:42, col:66> col:66 __buf '__pthread_unwind_buf_t *'
|-FunctionDecl 0x55681d799a00 <line:485:1, line:487:31> line:485:13 __pthread_unwind_next 'void (__pthread_unwind_buf_t *) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x55681d7998c0 <col:36, col:60> col:60 __buf '__pthread_unwind_buf_t *'
| `-WeakAttr 0x55681d799aa8 <line:487:22>
|-RecordDecl 0x55681d799b00 <line:489:1, col:8> col:8 struct __jmp_buf_tag
|-FunctionDecl 0x55681d799e18 <line:490:1, col:98> col:12 __sigsetjmp 'int (struct __jmp_buf_tag *, int)' extern
| |-ParmVarDecl 0x55681d799c78 <col:25, col:47> col:47 __env 'struct __jmp_buf_tag *'
| |-ParmVarDecl 0x55681d799cf8 <col:54, col:58> col:58 __savemask 'int'
| |-NoThrowAttr 0x55681d799ec8 <col:86>
| `-ReturnsTwiceAttr 0x55681d799f20 <col:12> Implicit
|-FunctionDecl 0x55681d79a248 <line:491:1, line:493:79> line:491:12 pthread_mutex_init 'int (pthread_mutex_t *, const pthread_mutexattr_t *)' extern
| |-ParmVarDecl 0x55681d799ff0 <col:32, col:49> col:49 __mutex 'pthread_mutex_t *'
| |-ParmVarDecl 0x55681d79a100 <line:492:11, col:38> col:38 __mutexattr 'const pthread_mutexattr_t *'
| |-NoThrowAttr 0x55681d79a2f8 <line:493:22>
| `-NonNullAttr 0x55681d79a350 <col:63, col:77> 1
|-FunctionDecl 0x55681d79a4c8 <line:494:1, line:495:79> line:494:12 pthread_mutex_destroy 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x55681d79a398 <col:35, col:52> col:52 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x55681d79a570 <line:495:22>
| `-NonNullAttr 0x55681d79a5c8 <col:63, col:77> 1
|-FunctionDecl 0x55681d79a6d0 <line:496:1, line:497:68> line:496:12 pthread_mutex_trylock 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x55681d79a618 <col:35, col:52> col:52 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x55681d79a778 <line:497:22>
| `-NonNullAttr 0x55681d79a7d0 <col:52, col:66> 1
|-FunctionDecl 0x55681d79a8d0 <line:498:1, line:499:68> line:498:12 pthread_mutex_lock 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x55681d79a818 <col:32, col:49> col:49 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x55681d79a978 <line:499:22>
| `-NonNullAttr 0x55681d79a9d0 <col:52, col:66> 1
|-FunctionDecl 0x55681d79bc28 <line:500:1, line:502:85> line:500:12 pthread_mutex_timedlock 'int (pthread_mutex_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x55681d79ba38 <col:37, col:65> col:65 __mutex 'pthread_mutex_t *restrict'
| |-ParmVarDecl 0x55681d79bac8 <line:501:9, line:502:9> col:9 __abstime 'const struct timespec *restrict'
| |-NoThrowAttr 0x55681d79bcd8 <col:36>
| `-NonNullAttr 0x55681d79bd30 <col:66, col:83> 1 2
|-FunctionDecl 0x55681d79be30 <line:503:1, line:504:68> line:503:12 pthread_mutex_unlock 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x55681d79bd78 <col:34, col:51> col:51 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x55681d79bed8 <line:504:22>
| `-NonNullAttr 0x55681d79bf30 <col:52, col:66> 1
|-FunctionDecl 0x55681d79c1c8 <line:505:1, line:508:82> line:505:12 pthread_mutex_getprioceiling 'int (const pthread_mutex_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x55681d79bfe0 <col:42, line:506:18> col:18 __mutex 'const pthread_mutex_t *restrict'
| |-ParmVarDecl 0x55681d79c060 <line:507:7, col:23> col:23 __prioceiling 'int *restrict'
| |-NoThrowAttr 0x55681d79c278 <line:508:22>
| `-NonNullAttr 0x55681d79c2d0 <col:63, col:80> 1 2
|-FunctionDecl 0x55681d79c598 <line:509:1, line:512:82> line:509:12 pthread_mutex_setprioceiling 'int (pthread_mutex_t *restrict, int, int *restrict)' extern
| |-ParmVarDecl 0x55681d79c318 <col:42, col:70> col:70 __mutex 'pthread_mutex_t *restrict'
| |-ParmVarDecl 0x55681d79c398 <line:510:7, col:11> col:11 __prioceiling 'int'
| |-ParmVarDecl 0x55681d79c418 <line:511:7, col:23> col:23 __old_ceiling 'int *restrict'
| |-NoThrowAttr 0x55681d79c650 <line:512:22>
| `-NonNullAttr 0x55681d79c6a8 <col:63, col:80> 1 3
|-FunctionDecl 0x55681d79c7b0 <line:513:1, line:514:79> line:513:12 pthread_mutex_consistent 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x55681d79c6f8 <col:38, col:55> col:55 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x55681d79c858 <line:514:22>
| `-NonNullAttr 0x55681d79c8b0 <col:63, col:77> 1
|-FunctionDecl 0x55681d79cad8 <line:515:1, line:516:79> line:515:12 pthread_mutexattr_init 'int (pthread_mutexattr_t *)' extern
| |-ParmVarDecl 0x55681d79c960 <col:36, col:57> col:57 __attr 'pthread_mutexattr_t *'
| |-NoThrowAttr 0x55681d79cb80 <line:516:22>
| `-NonNullAttr 0x55681d79cbd8 <col:63, col:77> 1
|-FunctionDecl 0x55681d79cce0 <line:517:1, line:518:79> line:517:12 pthread_mutexattr_destroy 'int (pthread_mutexattr_t *)' extern
| |-ParmVarDecl 0x55681d79cc28 <col:39, col:60> col:60 __attr 'pthread_mutexattr_t *'
| |-NoThrowAttr 0x55681d79cd88 <line:518:22>
| `-NonNullAttr 0x55681d79cde0 <col:63, col:77> 1
|-FunctionDecl 0x55681d79d008 <line:519:1, line:522:82> line:519:12 pthread_mutexattr_getpshared 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x55681d79ce28 <col:42, line:520:18> col:18 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x55681d79cea8 <line:521:7, col:23> col:23 __pshared 'int *restrict'
| |-NoThrowAttr 0x55681d79d0b8 <line:522:22>
| `-NonNullAttr 0x55681d79d110 <col:63, col:80> 1 2
|-FunctionDecl 0x55681d79d318 <line:523:1, line:525:79> line:523:12 pthread_mutexattr_setpshared 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x55681d79d158 <col:42, col:63> col:63 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x55681d79d1d8 <line:524:7, col:11> col:11 __pshared 'int'
| |-NoThrowAttr 0x55681d79d3c8 <line:525:22>
| `-NonNullAttr 0x55681d79d420 <col:63, col:77> 1
|-FunctionDecl 0x55681d79d5c8 <line:526:1, line:528:82> line:526:12 pthread_mutexattr_gettype 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x55681d79d468 <col:39, line:527:11> col:11 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x55681d79d4e8 <col:19, col:35> col:35 __kind 'int *restrict'
| |-NoThrowAttr 0x55681d79d678 <line:528:22>
| `-NonNullAttr 0x55681d79d6d0 <col:63, col:80> 1 2
|-FunctionDecl 0x55681d79d858 <line:529:1, line:530:79> line:529:12 pthread_mutexattr_settype 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x55681d79d718 <col:39, col:60> col:60 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x55681d79d798 <col:68, col:72> col:72 __kind 'int'
| |-NoThrowAttr 0x55681d79d908 <line:530:22>
| `-NonNullAttr 0x55681d79d960 <col:63, col:77> 1
|-FunctionDecl 0x55681d79db20 <line:531:1, line:534:82> line:531:12 pthread_mutexattr_getprotocol 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x55681d79d9a8 <col:43, line:532:19> col:19 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x55681d79da40 <line:533:8, col:24> col:24 __protocol 'int *restrict'
| |-NoThrowAttr 0x55681d79dbd0 <line:534:22>
| `-NonNullAttr 0x55681d79dc28 <col:63, col:80> 1 2
|-FunctionDecl 0x55681d79ddb8 <line:535:1, line:537:79> line:535:12 pthread_mutexattr_setprotocol 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x55681d79dc78 <col:43, col:64> col:64 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x55681d79dcf8 <line:536:8, col:12> col:12 __protocol 'int'
| |-NoThrowAttr 0x55681d79de68 <line:537:22>
| `-NonNullAttr 0x55681d79dec0 <col:63, col:77> 1
|-FunctionDecl 0x55681d79e068 <line:538:1, line:541:82> line:538:12 pthread_mutexattr_getprioceiling 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x55681d79df08 <col:46, line:539:22> col:22 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x55681d79df88 <line:540:11, col:27> col:27 __prioceiling 'int *restrict'
| |-NoThrowAttr 0x55681d79e118 <line:541:22>
| `-NonNullAttr 0x55681d79e170 <col:63, col:80> 1 2
|-FunctionDecl 0x55681d79e2f8 <line:542:1, line:544:79> line:542:12 pthread_mutexattr_setprioceiling 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x55681d79e1b8 <col:46, col:67> col:67 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x55681d79e238 <line:543:11, col:15> col:15 __prioceiling 'int'
| |-NoThrowAttr 0x55681d79e3a8 <line:544:22>
| `-NonNullAttr 0x55681d79e400 <col:63, col:77> 1
|-FunctionDecl 0x55681d79e5e8 <line:545:1, line:547:82> line:545:12 pthread_mutexattr_getrobust 'int (const pthread_mutexattr_t *, int *)' extern
| |-ParmVarDecl 0x55681d79e448 <col:41, col:68> col:68 __attr 'const pthread_mutexattr_t *'
| |-ParmVarDecl 0x55681d79e4c8 <line:546:6, col:11> col:11 __robustness 'int *'
| |-NoThrowAttr 0x55681d79e698 <line:547:22>
| `-NonNullAttr 0x55681d79e6f0 <col:63, col:80> 1 2
|-FunctionDecl 0x55681d79e878 <line:548:1, line:550:79> line:548:12 pthread_mutexattr_setrobust 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x55681d79e738 <col:41, col:62> col:62 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x55681d79e7b8 <line:549:6, col:10> col:10 __robustness 'int'
| |-NoThrowAttr 0x55681d79e928 <line:550:22>
| `-NonNullAttr 0x55681d79e980 <col:63, col:77> 1
|-FunctionDecl 0x55681d79fcf8 <line:551:1, line:553:86> line:551:12 pthread_rwlock_init 'int (pthread_rwlock_t *restrict, const pthread_rwlockattr_t *restrict)' extern
| |-ParmVarDecl 0x55681d79faa0 <col:33, col:62> col:62 __rwlock 'pthread_rwlock_t *restrict'
| |-ParmVarDecl 0x55681d79fbb0 <line:552:5, line:553:5> col:5 __attr 'const pthread_rwlockattr_t *restrict'
| |-NoThrowAttr 0x55681d79fda8 <col:29>
| `-NonNullAttr 0x55681d79fe00 <col:70, col:84> 1
|-FunctionDecl 0x55681d79ff78 <line:554:1, line:555:79> line:554:12 pthread_rwlock_destroy 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x55681d79fe48 <col:36, col:54> col:54 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x55681d7a0020 <line:555:22>
| `-NonNullAttr 0x55681d7a0078 <col:63, col:77> 1
|-FunctionDecl 0x55681d7a0180 <line:556:1, line:557:68> line:556:12 pthread_rwlock_rdlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x55681d7a00c8 <col:35, col:53> col:53 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x55681d7a0228 <line:557:22>
| `-NonNullAttr 0x55681d7a0280 <col:52, col:66> 1
|-FunctionDecl 0x55681d7a0380 <line:558:1, line:559:65> line:558:12 pthread_rwlock_tryrdlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x55681d7a02c8 <col:38, col:56> col:56 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x55681d7a0428 <line:559:19>
| `-NonNullAttr 0x55681d7a0480 <col:49, col:63> 1
|-FunctionDecl 0x55681d7a06b8 <line:560:1, line:562:88> line:560:12 pthread_rwlock_timedrdlock 'int (pthread_rwlock_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x55681d7a04c8 <col:40, col:69> col:69 __rwlock 'pthread_rwlock_t *restrict'
| |-ParmVarDecl 0x55681d7a0558 <line:561:12, line:562:12> col:12 __abstime 'const struct timespec *restrict'
| |-NoThrowAttr 0x55681d7a0768 <col:39>
| `-NonNullAttr 0x55681d7a07c0 <col:69, col:86> 1 2
|-FunctionDecl 0x55681d7a08c0 <line:563:1, line:564:68> line:563:12 pthread_rwlock_wrlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x55681d7a0808 <col:35, col:53> col:53 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x55681d7a0968 <line:564:22>
| `-NonNullAttr 0x55681d7a09c0 <col:52, col:66> 1
|-FunctionDecl 0x55681d7a0b28 <line:565:1, line:566:68> line:565:12 pthread_rwlock_trywrlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x55681d7a0a70 <col:38, col:56> col:56 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x55681d7a0bd0 <line:566:22>
| `-NonNullAttr 0x55681d7a0c28 <col:52, col:66> 1
|-FunctionDecl 0x55681d7a0de8 <line:567:1, line:569:88> line:567:12 pthread_rwlock_timedwrlock 'int (pthread_rwlock_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x55681d7a0c78 <col:40, col:69> col:69 __rwlock 'pthread_rwlock_t *restrict'
| |-ParmVarDecl 0x55681d7a0d08 <line:568:12, line:569:12> col:12 __abstime 'const struct timespec *restrict'
| |-NoThrowAttr 0x55681d7a0e98 <col:39>
| `-NonNullAttr 0x55681d7a0ef0 <col:69, col:86> 1 2
|-FunctionDecl 0x55681d7a0ff0 <line:570:1, line:571:68> line:570:12 pthread_rwlock_unlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x55681d7a0f38 <col:35, col:53> col:53 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x55681d7a1098 <line:571:22>
| `-NonNullAttr 0x55681d7a10f0 <col:52, col:66> 1
|-FunctionDecl 0x55681d7a12d8 <line:572:1, line:573:79> line:572:12 pthread_rwlockattr_init 'int (pthread_rwlockattr_t *)' extern
| |-ParmVarDecl 0x55681d7a11a0 <col:37, col:59> col:59 __attr 'pthread_rwlockattr_t *'
| |-NoThrowAttr 0x55681d7a1380 <line:573:22>
| `-NonNullAttr 0x55681d7a13d8 <col:63, col:77> 1
|-FunctionDecl 0x55681d7a14e0 <line:574:1, line:575:79> line:574:12 pthread_rwlockattr_destroy 'int (pthread_rwlockattr_t *)' extern
| |-ParmVarDecl 0x55681d7a1428 <col:40, col:62> col:62 __attr 'pthread_rwlockattr_t *'
| |-NoThrowAttr 0x55681d7a1588 <line:575:22>
| `-NonNullAttr 0x55681d7a15e0 <col:63, col:77> 1
|-FunctionDecl 0x55681d7a1808 <line:576:1, line:579:82> line:576:12 pthread_rwlockattr_getpshared 'int (const pthread_rwlockattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x55681d7a1628 <col:43, line:577:19> col:19 __attr 'const pthread_rwlockattr_t *restrict'
| |-ParmVarDecl 0x55681d7a16a8 <line:578:8, col:24> col:24 __pshared 'int *restrict'
| |-NoThrowAttr 0x55681d7a18b8 <line:579:22>
| `-NonNullAttr 0x55681d7a1910 <col:63, col:80> 1 2
|-FunctionDecl 0x55681d7a1b38 <line:580:1, line:582:79> line:580:12 pthread_rwlockattr_setpshared 'int (pthread_rwlockattr_t *, int)' extern
| |-ParmVarDecl 0x55681d7a1958 <col:43, col:65> col:65 __attr 'pthread_rwlockattr_t *'
| |-ParmVarDecl 0x55681d7a19d8 <line:581:8, col:12> col:12 __pshared 'int'
| |-NoThrowAttr 0x55681d7a1be8 <line:582:22>
| `-NonNullAttr 0x55681d7a1c40 <col:63, col:77> 1
|-FunctionDecl 0x55681d7a1de8 <line:583:1, line:586:82> line:583:12 pthread_rwlockattr_getkind_np 'int (const pthread_rwlockattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x55681d7a1c88 <col:43, line:584:19> col:19 __attr 'const pthread_rwlockattr_t *restrict'
| |-ParmVarDecl 0x55681d7a1d08 <line:585:8, col:24> col:24 __pref 'int *restrict'
| |-NoThrowAttr 0x55681d7a1e98 <line:586:22>
| `-NonNullAttr 0x55681d7a1ef0 <col:63, col:80> 1 2
|-FunctionDecl 0x55681d7a2078 <line:587:1, line:588:93> line:587:12 pthread_rwlockattr_setkind_np 'int (pthread_rwlockattr_t *, int)' extern
| |-ParmVarDecl 0x55681d7a1f38 <col:43, col:65> col:65 __attr 'pthread_rwlockattr_t *'
| |-ParmVarDecl 0x55681d7a1fb8 <line:588:8, col:12> col:12 __pref 'int'
| |-NoThrowAttr 0x55681d7a2128 <col:36>
| `-NonNullAttr 0x55681d7a2180 <col:77, col:91> 1
|-FunctionDecl 0x55681d7a24b8 <line:589:1, line:591:79> line:589:12 pthread_cond_init 'int (pthread_cond_t *restrict, const pthread_condattr_t *restrict)' extern
| |-ParmVarDecl 0x55681d7a2260 <col:31, col:58> col:58 __cond 'pthread_cond_t *restrict'
| |-ParmVarDecl 0x55681d7a2370 <line:590:10, col:47> col:47 __cond_attr 'const pthread_condattr_t *restrict'
| |-NoThrowAttr 0x55681d7a2568 <line:591:22>
| `-NonNullAttr 0x55681d7a25c0 <col:63, col:77> 1
|-FunctionDecl 0x55681d7a2738 <line:592:1, line:593:79> line:592:12 pthread_cond_destroy 'int (pthread_cond_t *)' extern
| |-ParmVarDecl 0x55681d7a2608 <col:34, col:50> col:50 __cond 'pthread_cond_t *'
| |-NoThrowAttr 0x55681d7a27e0 <line:593:22>
| `-NonNullAttr 0x55681d7a2838 <col:63, col:77> 1
|-FunctionDecl 0x55681d7a2940 <line:594:1, line:595:68> line:594:12 pthread_cond_signal 'int (pthread_cond_t *)' extern
| |-ParmVarDecl 0x55681d7a2888 <col:33, col:49> col:49 __cond 'pthread_cond_t *'
| |-NoThrowAttr 0x55681d7a29e8 <line:595:22>
| `-NonNullAttr 0x55681d7a2a40 <col:52, col:66> 1
|-FunctionDecl 0x55681d7a2b58 <line:596:1, line:597:68> line:596:12 pthread_cond_broadcast 'int (pthread_cond_t *)' extern
| |-ParmVarDecl 0x55681d7a2aa0 <col:36, col:52> col:52 __cond 'pthread_cond_t *'
| |-NoThrowAttr 0x55681d7a2c00 <line:597:22>
| `-NonNullAttr 0x55681d7a2c58 <col:52, col:66> 1
|-FunctionDecl 0x55681d7a2e88 <line:598:1, line:600:41> line:598:12 pthread_cond_wait 'int (pthread_cond_t *restrict, pthread_mutex_t *restrict)' extern
| |-ParmVarDecl 0x55681d7a2ca8 <col:31, col:58> col:58 __cond 'pthread_cond_t *restrict'
| |-ParmVarDecl 0x55681d7a2d20 <line:599:10, col:38> col:38 __mutex 'pthread_mutex_t *restrict'
| `-NonNullAttr 0x55681d7a2f38 <line:600:22, col:39> 1 2
|-FunctionDecl 0x55681d7a3268 <line:601:1, line:604:44> line:601:12 pthread_cond_timedwait 'int (pthread_cond_t *restrict, pthread_mutex_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x55681d7a2fb8 <col:36, col:63> col:63 __cond 'pthread_cond_t *restrict'
| |-ParmVarDecl 0x55681d7a3030 <line:602:8, col:36> col:36 __mutex 'pthread_mutex_t *restrict'
| |-ParmVarDecl 0x55681d7a30c0 <line:603:8, col:42> col:42 __abstime 'const struct timespec *restrict'
| `-NonNullAttr 0x55681d7a3320 <line:604:22, col:42> 1 2 3
|-FunctionDecl 0x55681d7a3538 <line:605:1, line:606:79> line:605:12 pthread_condattr_init 'int (pthread_condattr_t *)' extern
| |-ParmVarDecl 0x55681d7a3400 <col:35, col:55> col:55 __attr 'pthread_condattr_t *'
| |-NoThrowAttr 0x55681d7a35e0 <line:606:22>
| `-NonNullAttr 0x55681d7a3638 <col:63, col:77> 1
|-FunctionDecl 0x55681d7a3740 <line:607:1, line:608:79> line:607:12 pthread_condattr_destroy 'int (pthread_condattr_t *)' extern
| |-ParmVarDecl 0x55681d7a3688 <col:38, col:58> col:58 __attr 'pthread_condattr_t *'
| |-NoThrowAttr 0x55681d7a37e8 <line:608:22>
| `-NonNullAttr 0x55681d7a3840 <col:63, col:77> 1
|-FunctionDecl 0x55681d7a3aa0 <line:609:1, line:612:82> line:609:12 pthread_condattr_getpshared 'int (const pthread_condattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x55681d7a3888 <col:41, line:610:17> col:17 __attr 'const pthread_condattr_t *restrict'
| |-ParmVarDecl 0x55681d7a3908 <line:611:6, col:22> col:22 __pshared 'int *restrict'
| |-NoThrowAttr 0x55681d7a3b50 <line:612:22>
| `-NonNullAttr 0x55681d7a3ba8 <col:63, col:80> 1 2
|-FunctionDecl 0x55681d7a3db8 <line:613:1, line:614:94> line:613:12 pthread_condattr_setpshared 'int (pthread_condattr_t *, int)' extern
| |-ParmVarDecl 0x55681d7a3bf8 <col:41, col:61> col:61 __attr 'pthread_condattr_t *'
| |-ParmVarDecl 0x55681d7a3c78 <line:614:6, col:10> col:10 __pshared 'int'
| |-NoThrowAttr 0x55681d7a3e68 <col:37>
| `-NonNullAttr 0x55681d7a3ec0 <col:78, col:92> 1
|-FunctionDecl 0x55681d7a40d8 <line:615:1, line:618:82> line:615:12 pthread_condattr_getclock 'int (const pthread_condattr_t *restrict, __clockid_t *restrict)' extern
| |-ParmVarDecl 0x55681d7a3f08 <col:39, line:616:22> col:22 __attr 'const pthread_condattr_t *restrict'
| |-ParmVarDecl 0x55681d7a3fb0 <line:617:11, col:35> col:35 __clock_id '__clockid_t *restrict'
| |-NoThrowAttr 0x55681d7a4188 <line:618:22>
| `-NonNullAttr 0x55681d7a41e0 <col:63, col:80> 1 2
|-FunctionDecl 0x55681d7a43a8 <line:619:1, line:621:79> line:619:12 pthread_condattr_setclock 'int (pthread_condattr_t *, __clockid_t)' extern
| |-ParmVarDecl 0x55681d7a4228 <col:39, col:59> col:59 __attr 'pthread_condattr_t *'
| |-ParmVarDecl 0x55681d7a42a0 <line:620:11, col:23> col:23 __clock_id '__clockid_t':'int'
| |-NoThrowAttr 0x55681d7a4458 <line:621:22>
| `-NonNullAttr 0x55681d7a44b0 <col:63, col:77> 1
|-FunctionDecl 0x55681d7a4758 <line:622:1, line:623:79> line:622:12 pthread_spin_init 'int (pthread_spinlock_t *, int)' extern
| |-ParmVarDecl 0x55681d7a4590 <col:31, col:51> col:51 __lock 'pthread_spinlock_t *'
| |-ParmVarDecl 0x55681d7a4610 <col:59, col:63> col:63 __pshared 'int'
| |-NoThrowAttr 0x55681d7a4808 <line:623:22>
| `-NonNullAttr 0x55681d7a4860 <col:63, col:77> 1
|-FunctionDecl 0x55681d7a49d8 <line:624:1, line:625:79> line:624:12 pthread_spin_destroy 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x55681d7a48a8 <col:34, col:54> col:54 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x55681d7a4ab0 <line:625:22>
| `-NonNullAttr 0x55681d7a4b08 <col:63, col:77> 1
|-FunctionDecl 0x55681d7a4c10 <line:626:1, line:627:68> line:626:12 pthread_spin_lock 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x55681d7a4b58 <col:31, col:51> col:51 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x55681d7a4cb8 <line:627:22>
| `-NonNullAttr 0x55681d7a4d10 <col:52, col:66> 1
|-FunctionDecl 0x55681d7a4e10 <line:628:1, line:629:68> line:628:12 pthread_spin_trylock 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x55681d7a4d58 <col:34, col:54> col:54 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x55681d7a4eb8 <line:629:22>
| `-NonNullAttr 0x55681d7a4f10 <col:52, col:66> 1
|-FunctionDecl 0x55681d7a5010 <line:630:1, line:631:68> line:630:12 pthread_spin_unlock 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x55681d7a4f58 <col:33, col:53> col:53 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x55681d7a50b8 <line:631:22>
| `-NonNullAttr 0x55681d7a5110 <col:52, col:66> 1
|-FunctionDecl 0x55681d7a54e8 <line:632:1, line:635:79> line:632:12 pthread_barrier_init 'int (pthread_barrier_t *restrict, const pthread_barrierattr_t *restrict, unsigned int)' extern
| |-ParmVarDecl 0x55681d7a51f0 <col:34, col:64> col:64 __barrier 'pthread_barrier_t *restrict'
| |-ParmVarDecl 0x55681d7a5300 <line:633:6, line:634:6> col:6 __attr 'const pthread_barrierattr_t *restrict'
| |-ParmVarDecl 0x55681d7a5380 <col:14, col:27> col:27 __count 'unsigned int'
| |-NoThrowAttr 0x55681d7a55a0 <line:635:22>
| `-NonNullAttr 0x55681d7a55f8 <col:63, col:77> 1
|-FunctionDecl 0x55681d7a5778 <line:636:1, line:637:79> line:636:12 pthread_barrier_destroy 'int (pthread_barrier_t *)' extern
| |-ParmVarDecl 0x55681d7a5648 <col:37, col:56> col:56 __barrier 'pthread_barrier_t *'
| |-NoThrowAttr 0x55681d7a5820 <line:637:22>
| `-NonNullAttr 0x55681d7a5878 <col:63, col:77> 1
|-FunctionDecl 0x55681d7a5980 <line:638:1, line:639:68> line:638:12 pthread_barrier_wait 'int (pthread_barrier_t *)' extern
| |-ParmVarDecl 0x55681d7a58c8 <col:34, col:53> col:53 __barrier 'pthread_barrier_t *'
| |-NoThrowAttr 0x55681d7a5a28 <line:639:22>
| `-NonNullAttr 0x55681d7a5a80 <col:52, col:66> 1
|-FunctionDecl 0x55681d7a6c88 <line:640:1, line:641:79> line:640:12 pthread_barrierattr_init 'int (pthread_barrierattr_t *)' extern
| |-ParmVarDecl 0x55681d7a6b50 <col:38, col:61> col:61 __attr 'pthread_barrierattr_t *'
| |-NoThrowAttr 0x55681d7a6d30 <line:641:22>
| `-NonNullAttr 0x55681d7a6d88 <col:63, col:77> 1
|-FunctionDecl 0x55681d7a6e90 <line:642:1, line:643:79> line:642:12 pthread_barrierattr_destroy 'int (pthread_barrierattr_t *)' extern
| |-ParmVarDecl 0x55681d7a6dd8 <col:41, col:64> col:64 __attr 'pthread_barrierattr_t *'
| |-NoThrowAttr 0x55681d7a6f38 <line:643:22>
| `-NonNullAttr 0x55681d7a6f90 <col:63, col:77> 1
|-FunctionDecl 0x55681d7a71b8 <line:644:1, line:647:82> line:644:12 pthread_barrierattr_getpshared 'int (const pthread_barrierattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x55681d7a6fd8 <col:44, line:645:20> col:20 __attr 'const pthread_barrierattr_t *restrict'
| |-ParmVarDecl 0x55681d7a7058 <line:646:9, col:25> col:25 __pshared 'int *restrict'
| |-NoThrowAttr 0x55681d7a7268 <line:647:22>
| `-NonNullAttr 0x55681d7a72c0 <col:63, col:80> 1 2
|-FunctionDecl 0x55681d7a74c8 <line:648:1, line:650:79> line:648:12 pthread_barrierattr_setpshared 'int (pthread_barrierattr_t *, int)' extern
| |-ParmVarDecl 0x55681d7a7308 <col:44, col:67> col:67 __attr 'pthread_barrierattr_t *'
| |-ParmVarDecl 0x55681d7a7388 <line:649:9, col:13> col:13 __pshared 'int'
| |-NoThrowAttr 0x55681d7a7578 <line:650:22>
| `-NonNullAttr 0x55681d7a75d0 <col:63, col:77> 1
|-FunctionDecl 0x55681d7a7918 <line:651:1, line:653:79> line:651:12 pthread_key_create 'int (pthread_key_t *, void (*)(void *))' extern
| |-ParmVarDecl 0x55681d7a76b0 <col:32, col:47> col:47 __key 'pthread_key_t *'
| |-ParmVarDecl 0x55681d7a77d0 <line:652:11, col:43> col:18 __destr_function 'void (*)(void *)'
| |-NoThrowAttr 0x55681d7a79c8 <line:653:22>
| `-NonNullAttr 0x55681d7a7a20 <col:63, col:77> 1
|-FunctionDecl 0x55681d7a7b88 <line:654:1, col:92> col:12 pthread_key_delete 'int (pthread_key_t)' extern
| |-ParmVarDecl 0x55681d7a7a68 <col:32, col:46> col:46 __key 'pthread_key_t':'unsigned int'
| `-NoThrowAttr 0x55681d7a7c30 <col:69>
|-FunctionDecl 0x55681d7a7da8 <line:655:1, col:95> col:14 pthread_getspecific 'void *(pthread_key_t)' extern
| |-ParmVarDecl 0x55681d7a7c98 <col:35, col:49> col:49 __key 'pthread_key_t':'unsigned int'
| `-NoThrowAttr 0x55681d7a7e50 <col:72>
|-FunctionDecl 0x55681d7a8088 <line:656:1, line:657:67> line:656:12 pthread_setspecific 'int (pthread_key_t, const void *)' extern
| |-ParmVarDecl 0x55681d7a7eb8 <col:33, col:47> col:47 __key 'pthread_key_t':'unsigned int'
| |-ParmVarDecl 0x55681d7a7f68 <line:657:5, col:17> col:17 __pointer 'const void *'
| `-NoThrowAttr 0x55681d7a8138 <col:44>
|-FunctionDecl 0x55681d7a8358 <line:658:1, line:660:79> line:658:12 pthread_getcpuclockid 'int (pthread_t, __clockid_t *)' extern
| |-ParmVarDecl 0x55681d7a81a0 <col:35, col:45> col:45 __thread_id 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x55681d7a8218 <line:659:7, col:20> col:20 __clock_id '__clockid_t *'
| |-NoThrowAttr 0x55681d7a8408 <line:660:22>
| `-NonNullAttr 0x55681d7a8460 <col:63, col:77> 2
|-FunctionDecl 0x55681d7a88a8 <line:661:1, line:663:70> line:661:12 pthread_atfork 'int (void (*)(void), void (*)(void), void (*)(void))' extern
| |-ParmVarDecl 0x55681d7a8540 <col:28, col:51> col:35 __prepare 'void (*)(void)'
| |-ParmVarDecl 0x55681d7a8650 <line:662:7, col:29> col:14 __parent 'void (*)(void)'
| |-ParmVarDecl 0x55681d7a8760 <line:663:7, col:28> col:14 __child 'void (*)(void)'
| `-NoThrowAttr 0x55681d7a8960 <col:47>
|-FunctionDecl 0x55681d7a8af0 <line:665:1, col:20> col:8 used P0 'void *(void *)'
| `-ParmVarDecl 0x55681d7a89d0 <col:11, col:17> col:17 arg 'void *'
|-FunctionDecl 0x55681d7a8c48 <line:666:1, col:20> col:8 used P1 'void *(void *)'
| `-ParmVarDecl 0x55681d7a8bb0 <col:11, col:17> col:17 arg 'void *'
|-FunctionDecl 0x55681d7a8da0 <line:667:1, col:20> col:8 used P2 'void *(void *)'
| `-ParmVarDecl 0x55681d7a8d08 <col:11, col:17> col:17 arg 'void *'
|-FunctionDecl 0x55681d7a8ef8 <line:668:1, col:20> col:8 used P3 'void *(void *)'
| `-ParmVarDecl 0x55681d7a8e60 <col:11, col:17> col:17 arg 'void *'
|-FunctionDecl 0x55681d7a8fc0 <line:669:1, col:12> col:6 fence 'void ()'
|-FunctionDecl 0x55681d7a9080 <line:670:1, col:12> col:6 isync 'void ()'
|-FunctionDecl 0x55681d7a9140 <line:671:1, col:14> col:6 lwfence 'void ()'
|-VarDecl 0x55681d7a91f8 <line:672:1, col:5> col:5 used __unbuffered_cnt 'int'
|-VarDecl 0x55681d7a9278 prev 0x55681d7a91f8 <line:673:1, col:24> col:5 used __unbuffered_cnt 'int' cinit
| `-IntegerLiteral 0x55681d7a92e0 <col:24> 'int' 0
|-VarDecl 0x55681d7a9318 <line:674:1, col:5> col:5 used __unbuffered_p0_EAX 'int'
|-VarDecl 0x55681d7a9398 prev 0x55681d7a9318 <line:675:1, col:27> col:5 used __unbuffered_p0_EAX 'int' cinit
| `-IntegerLiteral 0x55681d7a9400 <col:27> 'int' 0
|-VarDecl 0x55681d7a9438 <line:676:1, col:5> col:5 used __unbuffered_p2_EAX 'int'
|-VarDecl 0x55681d7a94b8 prev 0x55681d7a9438 <line:677:1, col:27> col:5 used __unbuffered_p2_EAX 'int' cinit
| `-IntegerLiteral 0x55681d7a9520 <col:27> 'int' 0
|-VarDecl 0x55681d7a9558 <line:678:1, col:5> col:5 used __unbuffered_p3_EAX 'int'
|-VarDecl 0x55681d7a95d8 prev 0x55681d7a9558 <line:679:1, col:27> col:5 used __unbuffered_p3_EAX 'int' cinit
| `-IntegerLiteral 0x55681d7a9640 <col:27> 'int' 0
|-VarDecl 0x55681d7a9678 <line:680:1, col:5> col:5 used __unbuffered_p3_EBX 'int'
|-VarDecl 0x55681d7a96f8 prev 0x55681d7a9678 <line:681:1, col:27> col:5 used __unbuffered_p3_EBX 'int' cinit
| `-IntegerLiteral 0x55681d7a9760 <col:27> 'int' 0
|-VarDecl 0x55681d7a9798 <line:682:1, col:5> col:5 used a 'int'
|-VarDecl 0x55681d7a9818 prev 0x55681d7a9798 <line:683:1, col:9> col:5 used a 'int' cinit
| `-IntegerLiteral 0x55681d7a9880 <col:9> 'int' 0
|-VarDecl 0x55681d7a98b8 <line:684:1, col:5> col:5 used b 'int'
|-VarDecl 0x55681d7a9938 prev 0x55681d7a98b8 <line:685:1, col:9> col:5 used b 'int' cinit
| `-IntegerLiteral 0x55681d7a99a0 <col:9> 'int' 0
|-VarDecl 0x55681d7a99d0 <line:686:1, col:7> col:7 used b$flush_delayed '_Bool'
|-VarDecl 0x55681d7a9a50 <line:687:1, col:5> col:5 used b$mem_tmp 'int'
|-VarDecl 0x55681d7a9b00 <line:688:1, col:7> col:7 used b$r_buff0_thd0 '_Bool'
|-VarDecl 0x55681d7a9b78 <line:689:1, col:7> col:7 used b$r_buff0_thd1 '_Bool'
|-VarDecl 0x55681d7a9bf0 <line:690:1, col:7> col:7 used b$r_buff0_thd2 '_Bool'
|-VarDecl 0x55681d7a9c68 <line:691:1, col:7> col:7 used b$r_buff0_thd3 '_Bool'
|-VarDecl 0x55681d7a9ce0 <line:692:1, col:7> col:7 used b$r_buff0_thd4 '_Bool'
|-VarDecl 0x55681d7a9d58 <line:693:1, col:7> col:7 used b$r_buff1_thd0 '_Bool'
|-VarDecl 0x55681d7a9dd0 <line:694:1, col:7> col:7 used b$r_buff1_thd1 '_Bool'
|-VarDecl 0x55681d7a9e48 <line:695:1, col:7> col:7 used b$r_buff1_thd2 '_Bool'
|-VarDecl 0x55681d7a9ec0 <line:696:1, col:7> col:7 used b$r_buff1_thd3 '_Bool'
|-VarDecl 0x55681d7a9f38 <line:697:1, col:7> col:7 used b$r_buff1_thd4 '_Bool'
|-VarDecl 0x55681d7a9fb0 <line:698:1, col:7> col:7 b$read_delayed '_Bool'
|-VarDecl 0x55681d7aa030 <line:699:1, col:6> col:6 b$read_delayed_var 'int *'
|-VarDecl 0x55681d7aa0b0 <line:700:1, col:5> col:5 used b$w_buff0 'int'
|-VarDecl 0x55681d7aa128 <line:701:1, col:7> col:7 used b$w_buff0_used '_Bool'
|-VarDecl 0x55681d7aa1a8 <line:702:1, col:5> col:5 used b$w_buff1 'int'
|-VarDecl 0x55681d7aa220 <line:703:1, col:7> col:7 used b$w_buff1_used '_Bool'
|-VarDecl 0x55681d7aa298 <line:704:1, col:7> col:7 used main$tmp_guard0 '_Bool'
|-VarDecl 0x55681d7aa310 <line:705:1, col:7> col:7 used main$tmp_guard1 '_Bool'
|-VarDecl 0x55681d7aa390 <line:706:1, col:5> col:5 used x 'int'
|-VarDecl 0x55681d7aa410 prev 0x55681d7aa390 <line:707:1, col:9> col:5 used x 'int' cinit
| `-IntegerLiteral 0x55681d7aa478 <col:9> 'int' 0
|-VarDecl 0x55681d7aa4b0 <line:708:1, col:5> col:5 used y 'int'
|-VarDecl 0x55681d7aa530 prev 0x55681d7aa4b0 <line:709:1, col:9> col:5 used y 'int' cinit
| `-IntegerLiteral 0x55681d7aa598 <col:9> 'int' 0
|-VarDecl 0x55681d7aa5d0 <line:710:1, col:5> col:5 used z 'int'
|-VarDecl 0x55681d7aa650 prev 0x55681d7aa5d0 <line:711:1, col:9> col:5 used z 'int' cinit
| `-IntegerLiteral 0x55681d7aa6b8 <col:9> 'int' 0
|-VarDecl 0x55681d7aa6e8 <line:712:1, col:7> col:7 used weak$$choice0 '_Bool'
|-VarDecl 0x55681d7aa760 <line:713:1, col:7> col:7 used weak$$choice2 '_Bool'
|-FunctionDecl 0x55681d7aa878 prev 0x55681d7a8af0 <line:714:1, line:743:1> line:714:8 used P0 'void *(void *)'
| |-ParmVarDecl 0x55681d7aa7e0 <col:11, col:17> col:17 arg 'void *'
| `-CompoundStmt 0x55681d7ac138 <line:715:1, line:743:1>
|   |-CallExpr 0x55681d7aa988 <line:716:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x55681d7aa970 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55681d7aa920 <col:3> 'void ()' Function 0x55681d74fe40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x55681d7aaa00 <line:717:3, col:15> 'int' '='
|   | |-DeclRefExpr 0x55681d7aa9a8 <col:3> 'int' lvalue Var 0x55681d7aa1a8 'b$w_buff1' 'int'
|   | `-ImplicitCastExpr 0x55681d7aa9e8 <col:15> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x55681d7aa9c8 <col:15> 'int' lvalue Var 0x55681d7aa0b0 'b$w_buff0' 'int'
|   |-BinaryOperator 0x55681d7aaa60 <line:718:3, col:15> 'int' '='
|   | |-DeclRefExpr 0x55681d7aaa20 <col:3> 'int' lvalue Var 0x55681d7aa0b0 'b$w_buff0' 'int'
|   | `-IntegerLiteral 0x55681d7aaa40 <col:15> 'int' 1
|   |-BinaryOperator 0x55681d7aaad8 <line:719:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x55681d7aaa80 <col:3> '_Bool' lvalue Var 0x55681d7aa220 'b$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x55681d7aaac0 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x55681d7aaaa0 <col:20> '_Bool' lvalue Var 0x55681d7aa128 'b$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x55681d7aab88 <line:720:3, col:27> '_Bool' '='
|   | |-DeclRefExpr 0x55681d7aab10 <col:3> '_Bool' lvalue Var 0x55681d7aa128 'b$w_buff0_used' '_Bool'
|   | `-CStyleCastExpr 0x55681d7aab60 <col:20, col:27> '_Bool' <IntegralToBoolean>
|   |   `-IntegerLiteral 0x55681d7aab30 <col:27> 'int' 1
|   |-CallExpr 0x55681d7aad08 <line:721:3, col:56> 'void'
|   | |-ImplicitCastExpr 0x55681d7aacf0 <col:3> 'void (*)(int)' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x55681d7aaba8 <col:3> 'void (int)' Function 0x55681d74fbc8 '__VERIFIER_assert' 'void (int)'
|   | `-UnaryOperator 0x55681d7aaca8 <col:21, col:55> 'int' prefix '!' cannot overflow
|   |   `-ParenExpr 0x55681d7aac88 <col:22, col:55> 'int'
|   |     `-BinaryOperator 0x55681d7aac68 <col:23, col:41> 'int' '&&'
|   |       |-ImplicitCastExpr 0x55681d7aac20 <col:23> 'int' <IntegralCast>
|   |       | `-ImplicitCastExpr 0x55681d7aac08 <col:23> '_Bool' <LValueToRValue>
|   |       |   `-DeclRefExpr 0x55681d7aabc8 <col:23> '_Bool' lvalue Var 0x55681d7aa220 'b$w_buff1_used' '_Bool'
|   |       `-ImplicitCastExpr 0x55681d7aac50 <col:41> 'int' <IntegralCast>
|   |         `-ImplicitCastExpr 0x55681d7aac38 <col:41> '_Bool' <LValueToRValue>
|   |           `-DeclRefExpr 0x55681d7aabe8 <col:41> '_Bool' lvalue Var 0x55681d7aa128 'b$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x55681d7aad88 <line:722:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x55681d7aad30 <col:3> '_Bool' lvalue Var 0x55681d7a9d58 'b$r_buff1_thd0' '_Bool'
|   | `-ImplicitCastExpr 0x55681d7aad70 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x55681d7aad50 <col:20> '_Bool' lvalue Var 0x55681d7a9b00 'b$r_buff0_thd0' '_Bool'
|   |-BinaryOperator 0x55681d7aae00 <line:723:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x55681d7aada8 <col:3> '_Bool' lvalue Var 0x55681d7a9dd0 'b$r_buff1_thd1' '_Bool'
|   | `-ImplicitCastExpr 0x55681d7aade8 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x55681d7aadc8 <col:20> '_Bool' lvalue Var 0x55681d7a9b78 'b$r_buff0_thd1' '_Bool'
|   |-BinaryOperator 0x55681d7aae78 <line:724:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x55681d7aae20 <col:3> '_Bool' lvalue Var 0x55681d7a9e48 'b$r_buff1_thd2' '_Bool'
|   | `-ImplicitCastExpr 0x55681d7aae60 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x55681d7aae40 <col:20> '_Bool' lvalue Var 0x55681d7a9bf0 'b$r_buff0_thd2' '_Bool'
|   |-BinaryOperator 0x55681d7aaef0 <line:725:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x55681d7aae98 <col:3> '_Bool' lvalue Var 0x55681d7a9ec0 'b$r_buff1_thd3' '_Bool'
|   | `-ImplicitCastExpr 0x55681d7aaed8 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x55681d7aaeb8 <col:20> '_Bool' lvalue Var 0x55681d7a9c68 'b$r_buff0_thd3' '_Bool'
|   |-BinaryOperator 0x55681d7aaf68 <line:726:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x55681d7aaf10 <col:3> '_Bool' lvalue Var 0x55681d7a9f38 'b$r_buff1_thd4' '_Bool'
|   | `-ImplicitCastExpr 0x55681d7aaf50 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x55681d7aaf30 <col:20> '_Bool' lvalue Var 0x55681d7a9ce0 'b$r_buff0_thd4' '_Bool'
|   |-BinaryOperator 0x55681d7ab000 <line:727:3, col:27> '_Bool' '='
|   | |-DeclRefExpr 0x55681d7aaf88 <col:3> '_Bool' lvalue Var 0x55681d7a9b78 'b$r_buff0_thd1' '_Bool'
|   | `-CStyleCastExpr 0x55681d7aafd8 <col:20, col:27> '_Bool' <IntegralToBoolean>
|   |   `-IntegerLiteral 0x55681d7aafa8 <col:27> 'int' 1
|   |-CallExpr 0x55681d7ab058 <line:728:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x55681d7ab040 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55681d7ab020 <col:3> 'void ()' Function 0x55681d74ff00 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x55681d7ab0b0 <line:729:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x55681d7ab098 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55681d7ab078 <col:3> 'void ()' Function 0x55681d74fe40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x55681d7ab128 <line:730:3, col:25> 'int' '='
|   | |-DeclRefExpr 0x55681d7ab0d0 <col:3> 'int' lvalue Var 0x55681d7a9398 '__unbuffered_p0_EAX' 'int'
|   | `-ImplicitCastExpr 0x55681d7ab110 <col:25> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x55681d7ab0f0 <col:25> 'int' lvalue Var 0x55681d7aa410 'x' 'int'
|   |-CallExpr 0x55681d7ab180 <line:731:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x55681d7ab168 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55681d7ab148 <col:3> 'void ()' Function 0x55681d74ff00 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x55681d7ab1d8 <line:732:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x55681d7ab1c0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55681d7ab1a0 <col:3> 'void ()' Function 0x55681d74fe40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x55681d7ab4c0 <line:733:3, col:103> 'int' '='
|   | |-DeclRefExpr 0x55681d7ab1f8 <col:3> 'int' lvalue Var 0x55681d7a9938 'b' 'int'
|   | `-ConditionalOperator 0x55681d7ab490 <col:7, col:103> 'int'
|   |   |-BinaryOperator 0x55681d7ab2b8 <col:7, col:25> 'int' '&&'
|   |   | |-ImplicitCastExpr 0x55681d7ab270 <col:7> 'int' <IntegralCast>
|   |   | | `-ImplicitCastExpr 0x55681d7ab258 <col:7> '_Bool' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x55681d7ab218 <col:7> '_Bool' lvalue Var 0x55681d7aa128 'b$w_buff0_used' '_Bool'
|   |   | `-ImplicitCastExpr 0x55681d7ab2a0 <col:25> 'int' <IntegralCast>
|   |   |   `-ImplicitCastExpr 0x55681d7ab288 <col:25> '_Bool' <LValueToRValue>
|   |   |     `-DeclRefExpr 0x55681d7ab238 <col:25> '_Bool' lvalue Var 0x55681d7a9b78 'b$r_buff0_thd1' '_Bool'
|   |   |-ImplicitCastExpr 0x55681d7ab478 <col:42> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x55681d7ab2d8 <col:42> 'int' lvalue Var 0x55681d7aa0b0 'b$w_buff0' 'int'
|   |   `-ParenExpr 0x55681d7ab458 <col:54, col:103> 'int'
|   |     `-ConditionalOperator 0x55681d7ab428 <col:55, col:102> 'int'
|   |       |-BinaryOperator 0x55681d7ab398 <col:55, col:73> 'int' '&&'
|   |       | |-ImplicitCastExpr 0x55681d7ab350 <col:55> 'int' <IntegralCast>
|   |       | | `-ImplicitCastExpr 0x55681d7ab338 <col:55> '_Bool' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x55681d7ab2f8 <col:55> '_Bool' lvalue Var 0x55681d7aa220 'b$w_buff1_used' '_Bool'
|   |       | `-ImplicitCastExpr 0x55681d7ab380 <col:73> 'int' <IntegralCast>
|   |       |   `-ImplicitCastExpr 0x55681d7ab368 <col:73> '_Bool' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x55681d7ab318 <col:73> '_Bool' lvalue Var 0x55681d7a9dd0 'b$r_buff1_thd1' '_Bool'
|   |       |-ImplicitCastExpr 0x55681d7ab3f8 <col:90> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x55681d7ab3b8 <col:90> 'int' lvalue Var 0x55681d7aa1a8 'b$w_buff1' 'int'
|   |       `-ImplicitCastExpr 0x55681d7ab410 <col:102> 'int' <LValueToRValue>
|   |         `-DeclRefExpr 0x55681d7ab3d8 <col:102> 'int' lvalue Var 0x55681d7a9938 'b' 'int'
|   |-BinaryOperator 0x55681d7ab6c8 <line:734:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x55681d7ab4e0 <col:3> '_Bool' lvalue Var 0x55681d7aa128 'b$w_buff0_used' '_Bool'
|   | `-ImplicitCastExpr 0x55681d7ab6b0 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55681d7ab680 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x55681d7ab5a0 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x55681d7ab558 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x55681d7ab540 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x55681d7ab500 <col:20> '_Bool' lvalue Var 0x55681d7aa128 'b$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x55681d7ab588 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x55681d7ab570 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x55681d7ab520 <col:38> '_Bool' lvalue Var 0x55681d7a9b78 'b$r_buff0_thd1' '_Bool'
|   |     |-ImplicitCastExpr 0x55681d7ab638 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x55681d7ab5f0 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x55681d7ab5c0 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x55681d7ab668 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x55681d7ab650 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x55681d7ab618 <col:66> '_Bool' lvalue Var 0x55681d7aa128 'b$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x55681d7ab9b0 <line:735:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x55681d7ab6e8 <col:3> '_Bool' lvalue Var 0x55681d7aa220 'b$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x55681d7ab998 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55681d7ab968 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x55681d7ab888 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x55681d7ab7a8 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x55681d7ab760 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x55681d7ab748 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x55681d7ab708 <col:20> '_Bool' lvalue Var 0x55681d7aa128 'b$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x55681d7ab790 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x55681d7ab778 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x55681d7ab728 <col:38> '_Bool' lvalue Var 0x55681d7a9b78 'b$r_buff0_thd1' '_Bool'
|   |     | `-BinaryOperator 0x55681d7ab868 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x55681d7ab820 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x55681d7ab808 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x55681d7ab7c8 <col:56> '_Bool' lvalue Var 0x55681d7aa220 'b$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x55681d7ab850 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x55681d7ab838 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x55681d7ab7e8 <col:74> '_Bool' lvalue Var 0x55681d7a9dd0 'b$r_buff1_thd1' '_Bool'
|   |     |-ImplicitCastExpr 0x55681d7ab920 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x55681d7ab8d8 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x55681d7ab8a8 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x55681d7ab950 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x55681d7ab938 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x55681d7ab900 <col:102> '_Bool' lvalue Var 0x55681d7aa220 'b$w_buff1_used' '_Bool'
|   |-BinaryOperator 0x55681d7abbd0 <line:736:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x55681d7ab9d0 <col:3> '_Bool' lvalue Var 0x55681d7a9b78 'b$r_buff0_thd1' '_Bool'
|   | `-ImplicitCastExpr 0x55681d7abbb8 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55681d7abb88 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x55681d7aba90 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x55681d7aba48 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x55681d7aba30 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x55681d7ab9f0 <col:20> '_Bool' lvalue Var 0x55681d7aa128 'b$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x55681d7aba78 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x55681d7aba60 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x55681d7aba10 <col:38> '_Bool' lvalue Var 0x55681d7a9b78 'b$r_buff0_thd1' '_Bool'
|   |     |-ImplicitCastExpr 0x55681d7abb40 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x55681d7abae0 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x55681d7abab0 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x55681d7abb70 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x55681d7abb58 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x55681d7abb20 <col:66> '_Bool' lvalue Var 0x55681d7a9b78 'b$r_buff0_thd1' '_Bool'
|   |-BinaryOperator 0x55681d7abeb8 <line:737:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x55681d7abbf0 <col:3> '_Bool' lvalue Var 0x55681d7a9dd0 'b$r_buff1_thd1' '_Bool'
|   | `-ImplicitCastExpr 0x55681d7abea0 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55681d7abe70 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x55681d7abd90 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x55681d7abcb0 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x55681d7abc68 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x55681d7abc50 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x55681d7abc10 <col:20> '_Bool' lvalue Var 0x55681d7aa128 'b$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x55681d7abc98 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x55681d7abc80 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x55681d7abc30 <col:38> '_Bool' lvalue Var 0x55681d7a9b78 'b$r_buff0_thd1' '_Bool'
|   |     | `-BinaryOperator 0x55681d7abd70 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x55681d7abd28 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x55681d7abd10 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x55681d7abcd0 <col:56> '_Bool' lvalue Var 0x55681d7aa220 'b$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x55681d7abd58 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x55681d7abd40 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x55681d7abcf0 <col:74> '_Bool' lvalue Var 0x55681d7a9dd0 'b$r_buff1_thd1' '_Bool'
|   |     |-ImplicitCastExpr 0x55681d7abe28 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x55681d7abde0 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x55681d7abdb0 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x55681d7abe58 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x55681d7abe40 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x55681d7abe08 <col:102> '_Bool' lvalue Var 0x55681d7a9dd0 'b$r_buff1_thd1' '_Bool'
|   |-CallExpr 0x55681d7abf10 <line:738:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x55681d7abef8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55681d7abed8 <col:3> 'void ()' Function 0x55681d74ff00 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x55681d7abf68 <line:739:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x55681d7abf50 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55681d7abf30 <col:3> 'void ()' Function 0x55681d74fe40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x55681d7ac020 <line:740:3, col:41> 'int' '='
|   | |-DeclRefExpr 0x55681d7abf88 <col:3> 'int' lvalue Var 0x55681d7a9278 '__unbuffered_cnt' 'int'
|   | `-BinaryOperator 0x55681d7ac000 <col:22, col:41> 'int' '+'
|   |   |-ImplicitCastExpr 0x55681d7abfe8 <col:22> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x55681d7abfa8 <col:22> 'int' lvalue Var 0x55681d7a9278 '__unbuffered_cnt' 'int'
|   |   `-IntegerLiteral 0x55681d7abfc8 <col:41> 'int' 1
|   |-CallExpr 0x55681d7ac078 <line:741:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x55681d7ac060 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55681d7ac040 <col:3> 'void ()' Function 0x55681d74ff00 '__VERIFIER_atomic_end' 'void ()'
|   `-ReturnStmt 0x55681d7ac128 <line:742:3, col:36>
|     `-CallExpr 0x55681d7ac108 <col:10, col:36> 'void *'
|       `-ImplicitCastExpr 0x55681d7ac0f0 <col:10> 'void *(*)(void)' <FunctionToPointerDecay>
|         `-DeclRefExpr 0x55681d7ac098 <col:10> 'void *(void)' Function 0x55681d74f958 '__VERIFIER_nondet_pointer' 'void *(void)'
|-FunctionDecl 0x55681d7ac2d0 prev 0x55681d7a8c48 <line:744:1, line:763:1> line:744:8 used P1 'void *(void *)'
| |-ParmVarDecl 0x55681d7ac238 <col:11, col:17> col:17 arg 'void *'
| `-CompoundStmt 0x55681d7ad4f0 <line:745:1, line:763:1>
|   |-CallExpr 0x55681d7ac3b0 <line:746:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x55681d7ac398 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55681d7ac378 <col:3> 'void ()' Function 0x55681d74fe40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x55681d7ac410 <line:747:3, col:7> 'int' '='
|   | |-DeclRefExpr 0x55681d7ac3d0 <col:3> 'int' lvalue Var 0x55681d7aa410 'x' 'int'
|   | `-IntegerLiteral 0x55681d7ac3f0 <col:7> 'int' 1
|   |-CallExpr 0x55681d7ac468 <line:748:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x55681d7ac450 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55681d7ac430 <col:3> 'void ()' Function 0x55681d74ff00 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x55681d7ac4c0 <line:749:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x55681d7ac4a8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55681d7ac488 <col:3> 'void ()' Function 0x55681d74fe40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x55681d7ac520 <line:750:3, col:7> 'int' '='
|   | |-DeclRefExpr 0x55681d7ac4e0 <col:3> 'int' lvalue Var 0x55681d7aa530 'y' 'int'
|   | `-IntegerLiteral 0x55681d7ac500 <col:7> 'int' 1
|   |-CallExpr 0x55681d7ac578 <line:751:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x55681d7ac560 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55681d7ac540 <col:3> 'void ()' Function 0x55681d74ff00 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x55681d7ac5d0 <line:752:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x55681d7ac5b8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55681d7ac598 <col:3> 'void ()' Function 0x55681d74fe40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x55681d7ac8b8 <line:753:3, col:103> 'int' '='
|   | |-DeclRefExpr 0x55681d7ac5f0 <col:3> 'int' lvalue Var 0x55681d7a9938 'b' 'int'
|   | `-ConditionalOperator 0x55681d7ac888 <col:7, col:103> 'int'
|   |   |-BinaryOperator 0x55681d7ac6b0 <col:7, col:25> 'int' '&&'
|   |   | |-ImplicitCastExpr 0x55681d7ac668 <col:7> 'int' <IntegralCast>
|   |   | | `-ImplicitCastExpr 0x55681d7ac650 <col:7> '_Bool' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x55681d7ac610 <col:7> '_Bool' lvalue Var 0x55681d7aa128 'b$w_buff0_used' '_Bool'
|   |   | `-ImplicitCastExpr 0x55681d7ac698 <col:25> 'int' <IntegralCast>
|   |   |   `-ImplicitCastExpr 0x55681d7ac680 <col:25> '_Bool' <LValueToRValue>
|   |   |     `-DeclRefExpr 0x55681d7ac630 <col:25> '_Bool' lvalue Var 0x55681d7a9bf0 'b$r_buff0_thd2' '_Bool'
|   |   |-ImplicitCastExpr 0x55681d7ac870 <col:42> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x55681d7ac6d0 <col:42> 'int' lvalue Var 0x55681d7aa0b0 'b$w_buff0' 'int'
|   |   `-ParenExpr 0x55681d7ac850 <col:54, col:103> 'int'
|   |     `-ConditionalOperator 0x55681d7ac820 <col:55, col:102> 'int'
|   |       |-BinaryOperator 0x55681d7ac790 <col:55, col:73> 'int' '&&'
|   |       | |-ImplicitCastExpr 0x55681d7ac748 <col:55> 'int' <IntegralCast>
|   |       | | `-ImplicitCastExpr 0x55681d7ac730 <col:55> '_Bool' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x55681d7ac6f0 <col:55> '_Bool' lvalue Var 0x55681d7aa220 'b$w_buff1_used' '_Bool'
|   |       | `-ImplicitCastExpr 0x55681d7ac778 <col:73> 'int' <IntegralCast>
|   |       |   `-ImplicitCastExpr 0x55681d7ac760 <col:73> '_Bool' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x55681d7ac710 <col:73> '_Bool' lvalue Var 0x55681d7a9e48 'b$r_buff1_thd2' '_Bool'
|   |       |-ImplicitCastExpr 0x55681d7ac7f0 <col:90> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x55681d7ac7b0 <col:90> 'int' lvalue Var 0x55681d7aa1a8 'b$w_buff1' 'int'
|   |       `-ImplicitCastExpr 0x55681d7ac808 <col:102> 'int' <LValueToRValue>
|   |         `-DeclRefExpr 0x55681d7ac7d0 <col:102> 'int' lvalue Var 0x55681d7a9938 'b' 'int'
|   |-BinaryOperator 0x55681d7acac0 <line:754:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x55681d7ac8d8 <col:3> '_Bool' lvalue Var 0x55681d7aa128 'b$w_buff0_used' '_Bool'
|   | `-ImplicitCastExpr 0x55681d7acaa8 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55681d7aca78 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x55681d7ac998 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x55681d7ac950 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x55681d7ac938 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x55681d7ac8f8 <col:20> '_Bool' lvalue Var 0x55681d7aa128 'b$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x55681d7ac980 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x55681d7ac968 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x55681d7ac918 <col:38> '_Bool' lvalue Var 0x55681d7a9bf0 'b$r_buff0_thd2' '_Bool'
|   |     |-ImplicitCastExpr 0x55681d7aca30 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x55681d7ac9e8 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x55681d7ac9b8 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x55681d7aca60 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x55681d7aca48 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x55681d7aca10 <col:66> '_Bool' lvalue Var 0x55681d7aa128 'b$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x55681d7acdb8 <line:755:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x55681d7acae0 <col:3> '_Bool' lvalue Var 0x55681d7aa220 'b$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x55681d7acda0 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55681d7acd70 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x55681d7acc90 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x55681d7acbb0 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x55681d7acb68 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x55681d7acb50 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x55681d7acb00 <col:20> '_Bool' lvalue Var 0x55681d7aa128 'b$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x55681d7acb98 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x55681d7acb80 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x55681d7acb30 <col:38> '_Bool' lvalue Var 0x55681d7a9bf0 'b$r_buff0_thd2' '_Bool'
|   |     | `-BinaryOperator 0x55681d7acc70 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x55681d7acc28 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x55681d7acc10 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x55681d7acbd0 <col:56> '_Bool' lvalue Var 0x55681d7aa220 'b$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x55681d7acc58 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x55681d7acc40 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x55681d7acbf0 <col:74> '_Bool' lvalue Var 0x55681d7a9e48 'b$r_buff1_thd2' '_Bool'
|   |     |-ImplicitCastExpr 0x55681d7acd28 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x55681d7acce0 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x55681d7accb0 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x55681d7acd58 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x55681d7acd40 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x55681d7acd08 <col:102> '_Bool' lvalue Var 0x55681d7aa220 'b$w_buff1_used' '_Bool'
|   |-BinaryOperator 0x55681d7acfc0 <line:756:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x55681d7acdd8 <col:3> '_Bool' lvalue Var 0x55681d7a9bf0 'b$r_buff0_thd2' '_Bool'
|   | `-ImplicitCastExpr 0x55681d7acfa8 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55681d7acf78 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x55681d7ace98 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x55681d7ace50 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x55681d7ace38 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x55681d7acdf8 <col:20> '_Bool' lvalue Var 0x55681d7aa128 'b$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x55681d7ace80 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x55681d7ace68 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x55681d7ace18 <col:38> '_Bool' lvalue Var 0x55681d7a9bf0 'b$r_buff0_thd2' '_Bool'
|   |     |-ImplicitCastExpr 0x55681d7acf30 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x55681d7acee8 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x55681d7aceb8 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x55681d7acf60 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x55681d7acf48 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x55681d7acf10 <col:66> '_Bool' lvalue Var 0x55681d7a9bf0 'b$r_buff0_thd2' '_Bool'
|   |-BinaryOperator 0x55681d7ad2a8 <line:757:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x55681d7acfe0 <col:3> '_Bool' lvalue Var 0x55681d7a9e48 'b$r_buff1_thd2' '_Bool'
|   | `-ImplicitCastExpr 0x55681d7ad290 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55681d7ad260 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x55681d7ad180 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x55681d7ad0a0 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x55681d7ad058 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x55681d7ad040 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x55681d7ad000 <col:20> '_Bool' lvalue Var 0x55681d7aa128 'b$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x55681d7ad088 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x55681d7ad070 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x55681d7ad020 <col:38> '_Bool' lvalue Var 0x55681d7a9bf0 'b$r_buff0_thd2' '_Bool'
|   |     | `-BinaryOperator 0x55681d7ad160 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x55681d7ad118 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x55681d7ad100 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x55681d7ad0c0 <col:56> '_Bool' lvalue Var 0x55681d7aa220 'b$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x55681d7ad148 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x55681d7ad130 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x55681d7ad0e0 <col:74> '_Bool' lvalue Var 0x55681d7a9e48 'b$r_buff1_thd2' '_Bool'
|   |     |-ImplicitCastExpr 0x55681d7ad218 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x55681d7ad1d0 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x55681d7ad1a0 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x55681d7ad248 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x55681d7ad230 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x55681d7ad1f8 <col:102> '_Bool' lvalue Var 0x55681d7a9e48 'b$r_buff1_thd2' '_Bool'
|   |-CallExpr 0x55681d7ad300 <line:758:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x55681d7ad2e8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55681d7ad2c8 <col:3> 'void ()' Function 0x55681d74ff00 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x55681d7ad358 <line:759:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x55681d7ad340 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55681d7ad320 <col:3> 'void ()' Function 0x55681d74fe40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x55681d7ad410 <line:760:3, col:41> 'int' '='
|   | |-DeclRefExpr 0x55681d7ad378 <col:3> 'int' lvalue Var 0x55681d7a9278 '__unbuffered_cnt' 'int'
|   | `-BinaryOperator 0x55681d7ad3f0 <col:22, col:41> 'int' '+'
|   |   |-ImplicitCastExpr 0x55681d7ad3d8 <col:22> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x55681d7ad398 <col:22> 'int' lvalue Var 0x55681d7a9278 '__unbuffered_cnt' 'int'
|   |   `-IntegerLiteral 0x55681d7ad3b8 <col:41> 'int' 1
|   |-CallExpr 0x55681d7ad468 <line:761:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x55681d7ad450 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55681d7ad430 <col:3> 'void ()' Function 0x55681d74ff00 '__VERIFIER_atomic_end' 'void ()'
|   `-ReturnStmt 0x55681d7ad4e0 <line:762:3, col:36>
|     `-CallExpr 0x55681d7ad4c0 <col:10, col:36> 'void *'
|       `-ImplicitCastExpr 0x55681d7ad4a8 <col:10> 'void *(*)(void)' <FunctionToPointerDecay>
|         `-DeclRefExpr 0x55681d7ad488 <col:10> 'void *(void)' Function 0x55681d74f958 '__VERIFIER_nondet_pointer' 'void *(void)'
|-FunctionDecl 0x55681d7ad638 prev 0x55681d7a8da0 <line:764:1, line:783:1> line:764:8 used P2 'void *(void *)'
| |-ParmVarDecl 0x55681d7ad5a0 <col:11, col:17> col:17 arg 'void *'
| `-CompoundStmt 0x55681d7ae870 <line:765:1, line:783:1>
|   |-CallExpr 0x55681d7ad718 <line:766:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x55681d7ad700 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55681d7ad6e0 <col:3> 'void ()' Function 0x55681d74fe40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x55681d7ad778 <line:767:3, col:7> 'int' '='
|   | |-DeclRefExpr 0x55681d7ad738 <col:3> 'int' lvalue Var 0x55681d7aa530 'y' 'int'
|   | `-IntegerLiteral 0x55681d7ad758 <col:7> 'int' 2
|   |-CallExpr 0x55681d7ad7d0 <line:768:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x55681d7ad7b8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55681d7ad798 <col:3> 'void ()' Function 0x55681d74ff00 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x55681d7ad828 <line:769:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x55681d7ad810 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55681d7ad7f0 <col:3> 'void ()' Function 0x55681d74fe40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x55681d7ad8a0 <line:770:3, col:25> 'int' '='
|   | |-DeclRefExpr 0x55681d7ad848 <col:3> 'int' lvalue Var 0x55681d7a94b8 '__unbuffered_p2_EAX' 'int'
|   | `-ImplicitCastExpr 0x55681d7ad888 <col:25> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x55681d7ad868 <col:25> 'int' lvalue Var 0x55681d7aa650 'z' 'int'
|   |-CallExpr 0x55681d7ad8f8 <line:771:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x55681d7ad8e0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55681d7ad8c0 <col:3> 'void ()' Function 0x55681d74ff00 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x55681d7ad950 <line:772:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x55681d7ad938 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55681d7ad918 <col:3> 'void ()' Function 0x55681d74fe40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x55681d7adc48 <line:773:3, col:103> 'int' '='
|   | |-DeclRefExpr 0x55681d7ad970 <col:3> 'int' lvalue Var 0x55681d7a9938 'b' 'int'
|   | `-ConditionalOperator 0x55681d7adc18 <col:7, col:103> 'int'
|   |   |-BinaryOperator 0x55681d7ada30 <col:7, col:25> 'int' '&&'
|   |   | |-ImplicitCastExpr 0x55681d7ad9e8 <col:7> 'int' <IntegralCast>
|   |   | | `-ImplicitCastExpr 0x55681d7ad9d0 <col:7> '_Bool' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x55681d7ad990 <col:7> '_Bool' lvalue Var 0x55681d7aa128 'b$w_buff0_used' '_Bool'
|   |   | `-ImplicitCastExpr 0x55681d7ada18 <col:25> 'int' <IntegralCast>
|   |   |   `-ImplicitCastExpr 0x55681d7ada00 <col:25> '_Bool' <LValueToRValue>
|   |   |     `-DeclRefExpr 0x55681d7ad9b0 <col:25> '_Bool' lvalue Var 0x55681d7a9c68 'b$r_buff0_thd3' '_Bool'
|   |   |-ImplicitCastExpr 0x55681d7adc00 <col:42> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x55681d7ada50 <col:42> 'int' lvalue Var 0x55681d7aa0b0 'b$w_buff0' 'int'
|   |   `-ParenExpr 0x55681d7adbe0 <col:54, col:103> 'int'
|   |     `-ConditionalOperator 0x55681d7adbb0 <col:55, col:102> 'int'
|   |       |-BinaryOperator 0x55681d7adb10 <col:55, col:73> 'int' '&&'
|   |       | |-ImplicitCastExpr 0x55681d7adac8 <col:55> 'int' <IntegralCast>
|   |       | | `-ImplicitCastExpr 0x55681d7adab0 <col:55> '_Bool' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x55681d7ada70 <col:55> '_Bool' lvalue Var 0x55681d7aa220 'b$w_buff1_used' '_Bool'
|   |       | `-ImplicitCastExpr 0x55681d7adaf8 <col:73> 'int' <IntegralCast>
|   |       |   `-ImplicitCastExpr 0x55681d7adae0 <col:73> '_Bool' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x55681d7ada90 <col:73> '_Bool' lvalue Var 0x55681d7a9ec0 'b$r_buff1_thd3' '_Bool'
|   |       |-ImplicitCastExpr 0x55681d7adb80 <col:90> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x55681d7adb40 <col:90> 'int' lvalue Var 0x55681d7aa1a8 'b$w_buff1' 'int'
|   |       `-ImplicitCastExpr 0x55681d7adb98 <col:102> 'int' <LValueToRValue>
|   |         `-DeclRefExpr 0x55681d7adb60 <col:102> 'int' lvalue Var 0x55681d7a9938 'b' 'int'
|   |-BinaryOperator 0x55681d7ade50 <line:774:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x55681d7adc68 <col:3> '_Bool' lvalue Var 0x55681d7aa128 'b$w_buff0_used' '_Bool'
|   | `-ImplicitCastExpr 0x55681d7ade38 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55681d7ade08 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x55681d7add28 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x55681d7adce0 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x55681d7adcc8 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x55681d7adc88 <col:20> '_Bool' lvalue Var 0x55681d7aa128 'b$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x55681d7add10 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x55681d7adcf8 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x55681d7adca8 <col:38> '_Bool' lvalue Var 0x55681d7a9c68 'b$r_buff0_thd3' '_Bool'
|   |     |-ImplicitCastExpr 0x55681d7addc0 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x55681d7add78 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x55681d7add48 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x55681d7addf0 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x55681d7addd8 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x55681d7adda0 <col:66> '_Bool' lvalue Var 0x55681d7aa128 'b$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x55681d7ae138 <line:775:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x55681d7ade70 <col:3> '_Bool' lvalue Var 0x55681d7aa220 'b$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x55681d7ae120 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55681d7ae0f0 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x55681d7ae010 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x55681d7adf30 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x55681d7adee8 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x55681d7aded0 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x55681d7ade90 <col:20> '_Bool' lvalue Var 0x55681d7aa128 'b$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x55681d7adf18 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x55681d7adf00 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x55681d7adeb0 <col:38> '_Bool' lvalue Var 0x55681d7a9c68 'b$r_buff0_thd3' '_Bool'
|   |     | `-BinaryOperator 0x55681d7adff0 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x55681d7adfa8 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x55681d7adf90 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x55681d7adf50 <col:56> '_Bool' lvalue Var 0x55681d7aa220 'b$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x55681d7adfd8 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x55681d7adfc0 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x55681d7adf70 <col:74> '_Bool' lvalue Var 0x55681d7a9ec0 'b$r_buff1_thd3' '_Bool'
|   |     |-ImplicitCastExpr 0x55681d7ae0a8 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x55681d7ae060 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x55681d7ae030 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x55681d7ae0d8 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x55681d7ae0c0 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x55681d7ae088 <col:102> '_Bool' lvalue Var 0x55681d7aa220 'b$w_buff1_used' '_Bool'
|   |-BinaryOperator 0x55681d7ae340 <line:776:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x55681d7ae158 <col:3> '_Bool' lvalue Var 0x55681d7a9c68 'b$r_buff0_thd3' '_Bool'
|   | `-ImplicitCastExpr 0x55681d7ae328 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55681d7ae2f8 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x55681d7ae218 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x55681d7ae1d0 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x55681d7ae1b8 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x55681d7ae178 <col:20> '_Bool' lvalue Var 0x55681d7aa128 'b$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x55681d7ae200 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x55681d7ae1e8 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x55681d7ae198 <col:38> '_Bool' lvalue Var 0x55681d7a9c68 'b$r_buff0_thd3' '_Bool'
|   |     |-ImplicitCastExpr 0x55681d7ae2b0 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x55681d7ae268 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x55681d7ae238 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x55681d7ae2e0 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x55681d7ae2c8 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x55681d7ae290 <col:66> '_Bool' lvalue Var 0x55681d7a9c68 'b$r_buff0_thd3' '_Bool'
|   |-BinaryOperator 0x55681d7ae628 <line:777:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x55681d7ae360 <col:3> '_Bool' lvalue Var 0x55681d7a9ec0 'b$r_buff1_thd3' '_Bool'
|   | `-ImplicitCastExpr 0x55681d7ae610 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55681d7ae5e0 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x55681d7ae500 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x55681d7ae420 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x55681d7ae3d8 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x55681d7ae3c0 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x55681d7ae380 <col:20> '_Bool' lvalue Var 0x55681d7aa128 'b$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x55681d7ae408 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x55681d7ae3f0 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x55681d7ae3a0 <col:38> '_Bool' lvalue Var 0x55681d7a9c68 'b$r_buff0_thd3' '_Bool'
|   |     | `-BinaryOperator 0x55681d7ae4e0 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x55681d7ae498 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x55681d7ae480 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x55681d7ae440 <col:56> '_Bool' lvalue Var 0x55681d7aa220 'b$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x55681d7ae4c8 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x55681d7ae4b0 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x55681d7ae460 <col:74> '_Bool' lvalue Var 0x55681d7a9ec0 'b$r_buff1_thd3' '_Bool'
|   |     |-ImplicitCastExpr 0x55681d7ae598 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x55681d7ae550 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x55681d7ae520 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x55681d7ae5c8 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x55681d7ae5b0 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x55681d7ae578 <col:102> '_Bool' lvalue Var 0x55681d7a9ec0 'b$r_buff1_thd3' '_Bool'
|   |-CallExpr 0x55681d7ae680 <line:778:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x55681d7ae668 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55681d7ae648 <col:3> 'void ()' Function 0x55681d74ff00 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x55681d7ae6d8 <line:779:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x55681d7ae6c0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55681d7ae6a0 <col:3> 'void ()' Function 0x55681d74fe40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x55681d7ae790 <line:780:3, col:41> 'int' '='
|   | |-DeclRefExpr 0x55681d7ae6f8 <col:3> 'int' lvalue Var 0x55681d7a9278 '__unbuffered_cnt' 'int'
|   | `-BinaryOperator 0x55681d7ae770 <col:22, col:41> 'int' '+'
|   |   |-ImplicitCastExpr 0x55681d7ae758 <col:22> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x55681d7ae718 <col:22> 'int' lvalue Var 0x55681d7a9278 '__unbuffered_cnt' 'int'
|   |   `-IntegerLiteral 0x55681d7ae738 <col:41> 'int' 1
|   |-CallExpr 0x55681d7ae7e8 <line:781:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x55681d7ae7d0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55681d7ae7b0 <col:3> 'void ()' Function 0x55681d74ff00 '__VERIFIER_atomic_end' 'void ()'
|   `-ReturnStmt 0x55681d7ae860 <line:782:3, col:36>
|     `-CallExpr 0x55681d7ae840 <col:10, col:36> 'void *'
|       `-ImplicitCastExpr 0x55681d7ae828 <col:10> 'void *(*)(void)' <FunctionToPointerDecay>
|         `-DeclRefExpr 0x55681d7ae808 <col:10> 'void *(void)' Function 0x55681d74f958 '__VERIFIER_nondet_pointer' 'void *(void)'
|-FunctionDecl 0x55681d7ae9b8 prev 0x55681d7a8ef8 <line:784:1, line:822:1> line:784:8 used P3 'void *(void *)'
| |-ParmVarDecl 0x55681d7ae920 <col:11, col:17> col:17 arg 'void *'
| `-CompoundStmt 0x55681d7b27d8 <line:785:1, line:822:1>
|   |-CallExpr 0x55681d7aea98 <line:786:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x55681d7aea80 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55681d7aea60 <col:3> 'void ()' Function 0x55681d74fe40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x55681d7aeaf8 <line:787:3, col:7> 'int' '='
|   | |-DeclRefExpr 0x55681d7aeab8 <col:3> 'int' lvalue Var 0x55681d7aa650 'z' 'int'
|   | `-IntegerLiteral 0x55681d7aead8 <col:7> 'int' 1
|   |-CallExpr 0x55681d7aeb68 <line:788:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x55681d7aeb50 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55681d7aeb18 <col:3> 'void ()' Function 0x55681d74ff00 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x55681d7aebc0 <line:789:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x55681d7aeba8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55681d7aeb88 <col:3> 'void ()' Function 0x55681d74fe40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x55681d7aec20 <line:790:3, col:7> 'int' '='
|   | |-DeclRefExpr 0x55681d7aebe0 <col:3> 'int' lvalue Var 0x55681d7a9818 'a' 'int'
|   | `-IntegerLiteral 0x55681d7aec00 <col:7> 'int' 1
|   |-CallExpr 0x55681d7aec78 <line:791:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x55681d7aec60 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55681d7aec40 <col:3> 'void ()' Function 0x55681d74ff00 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x55681d7aecd0 <line:792:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x55681d7aecb8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55681d7aec98 <col:3> 'void ()' Function 0x55681d74fe40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x55681d7aed48 <line:793:3, col:25> 'int' '='
|   | |-DeclRefExpr 0x55681d7aecf0 <col:3> 'int' lvalue Var 0x55681d7a95d8 '__unbuffered_p3_EAX' 'int'
|   | `-ImplicitCastExpr 0x55681d7aed30 <col:25> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x55681d7aed10 <col:25> 'int' lvalue Var 0x55681d7a9818 'a' 'int'
|   |-CallExpr 0x55681d7aeda0 <line:794:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x55681d7aed88 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55681d7aed68 <col:3> 'void ()' Function 0x55681d74ff00 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x55681d7aedf8 <line:795:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x55681d7aede0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55681d7aedc0 <col:3> 'void ()' Function 0x55681d74fe40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x55681d7aeea8 <line:796:3, col:45> '_Bool' '='
|   | |-DeclRefExpr 0x55681d7aee18 <col:3> '_Bool' lvalue Var 0x55681d7aa6e8 'weak$$choice0' '_Bool'
|   | `-ImplicitCastExpr 0x55681d7aee90 <col:19, col:45> '_Bool' <PointerToBoolean>
|   |   `-CallExpr 0x55681d7aee70 <col:19, col:45> 'void *'
|   |     `-ImplicitCastExpr 0x55681d7aee58 <col:19> 'void *(*)(void)' <FunctionToPointerDecay>
|   |       `-DeclRefExpr 0x55681d7aee38 <col:19> 'void *(void)' Function 0x55681d74f958 '__VERIFIER_nondet_pointer' 'void *(void)'
|   |-BinaryOperator 0x55681d7aef58 <line:797:3, col:45> '_Bool' '='
|   | |-DeclRefExpr 0x55681d7aeec8 <col:3> '_Bool' lvalue Var 0x55681d7aa760 'weak$$choice2' '_Bool'
|   | `-ImplicitCastExpr 0x55681d7aef40 <col:19, col:45> '_Bool' <PointerToBoolean>
|   |   `-CallExpr 0x55681d7aef20 <col:19, col:45> 'void *'
|   |     `-ImplicitCastExpr 0x55681d7aef08 <col:19> 'void *(*)(void)' <FunctionToPointerDecay>
|   |       `-DeclRefExpr 0x55681d7aeee8 <col:19> 'void *(void)' Function 0x55681d74f958 '__VERIFIER_nondet_pointer' 'void *(void)'
|   |-BinaryOperator 0x55681d7aefd0 <line:798:3, col:21> '_Bool' '='
|   | |-DeclRefExpr 0x55681d7aef78 <col:3> '_Bool' lvalue Var 0x55681d7a99d0 'b$flush_delayed' '_Bool'
|   | `-ImplicitCastExpr 0x55681d7aefb8 <col:21> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x55681d7aef98 <col:21> '_Bool' lvalue Var 0x55681d7aa760 'weak$$choice2' '_Bool'
|   |-BinaryOperator 0x55681d7af048 <line:799:3, col:15> 'int' '='
|   | |-DeclRefExpr 0x55681d7aeff0 <col:3> 'int' lvalue Var 0x55681d7a9a50 'b$mem_tmp' 'int'
|   | `-ImplicitCastExpr 0x55681d7af030 <col:15> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x55681d7af010 <col:15> 'int' lvalue Var 0x55681d7a9938 'b' 'int'
|   |-BinaryOperator 0x55681d7af480 <line:800:3, col:162> 'int' '='
|   | |-DeclRefExpr 0x55681d7af068 <col:3> 'int' lvalue Var 0x55681d7a9938 'b' 'int'
|   | `-ConditionalOperator 0x55681d7af450 <col:7, col:162> 'int'
|   |   |-BinaryOperator 0x55681d7af278 <col:7, col:84> 'int' '||'
|   |   | |-BinaryOperator 0x55681d7af198 <col:7, col:46> 'int' '||'
|   |   | | |-UnaryOperator 0x55681d7af0c0 <col:7, col:8> 'int' prefix '!' cannot overflow
|   |   | | | `-ImplicitCastExpr 0x55681d7af0a8 <col:8> '_Bool' <LValueToRValue>
|   |   | | |   `-DeclRefExpr 0x55681d7af088 <col:8> '_Bool' lvalue Var 0x55681d7aa128 'b$w_buff0_used' '_Bool'
|   |   | | `-BinaryOperator 0x55681d7af178 <col:26, col:46> 'int' '&&'
|   |   | |   |-UnaryOperator 0x55681d7af110 <col:26, col:27> 'int' prefix '!' cannot overflow
|   |   | |   | `-ImplicitCastExpr 0x55681d7af0f8 <col:27> '_Bool' <LValueToRValue>
|   |   | |   |   `-DeclRefExpr 0x55681d7af0d8 <col:27> '_Bool' lvalue Var 0x55681d7a9ce0 'b$r_buff0_thd4' '_Bool'
|   |   | |   `-UnaryOperator 0x55681d7af160 <col:45, col:46> 'int' prefix '!' cannot overflow
|   |   | |     `-ImplicitCastExpr 0x55681d7af148 <col:46> '_Bool' <LValueToRValue>
|   |   | |       `-DeclRefExpr 0x55681d7af128 <col:46> '_Bool' lvalue Var 0x55681d7aa220 'b$w_buff1_used' '_Bool'
|   |   | `-BinaryOperator 0x55681d7af258 <col:64, col:84> 'int' '&&'
|   |   |   |-UnaryOperator 0x55681d7af1f0 <col:64, col:65> 'int' prefix '!' cannot overflow
|   |   |   | `-ImplicitCastExpr 0x55681d7af1d8 <col:65> '_Bool' <LValueToRValue>
|   |   |   |   `-DeclRefExpr 0x55681d7af1b8 <col:65> '_Bool' lvalue Var 0x55681d7a9ce0 'b$r_buff0_thd4' '_Bool'
|   |   |   `-UnaryOperator 0x55681d7af240 <col:83, col:84> 'int' prefix '!' cannot overflow
|   |   |     `-ImplicitCastExpr 0x55681d7af228 <col:84> '_Bool' <LValueToRValue>
|   |   |       `-DeclRefExpr 0x55681d7af208 <col:84> '_Bool' lvalue Var 0x55681d7a9f38 'b$r_buff1_thd4' '_Bool'
|   |   |-ImplicitCastExpr 0x55681d7af438 <col:101> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x55681d7af298 <col:101> 'int' lvalue Var 0x55681d7a9938 'b' 'int'
|   |   `-ParenExpr 0x55681d7af418 <col:105, col:162> 'int'
|   |     `-ConditionalOperator 0x55681d7af3e8 <col:106, col:153> 'int'
|   |       |-BinaryOperator 0x55681d7af358 <col:106, col:124> 'int' '&&'
|   |       | |-ImplicitCastExpr 0x55681d7af310 <col:106> 'int' <IntegralCast>
|   |       | | `-ImplicitCastExpr 0x55681d7af2f8 <col:106> '_Bool' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x55681d7af2b8 <col:106> '_Bool' lvalue Var 0x55681d7aa128 'b$w_buff0_used' '_Bool'
|   |       | `-ImplicitCastExpr 0x55681d7af340 <col:124> 'int' <IntegralCast>
|   |       |   `-ImplicitCastExpr 0x55681d7af328 <col:124> '_Bool' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x55681d7af2d8 <col:124> '_Bool' lvalue Var 0x55681d7a9ce0 'b$r_buff0_thd4' '_Bool'
|   |       |-ImplicitCastExpr 0x55681d7af3b8 <col:141> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x55681d7af378 <col:141> 'int' lvalue Var 0x55681d7aa0b0 'b$w_buff0' 'int'
|   |       `-ImplicitCastExpr 0x55681d7af3d0 <col:153> 'int' <LValueToRValue>
|   |         `-DeclRefExpr 0x55681d7af398 <col:153> 'int' lvalue Var 0x55681d7aa1a8 'b$w_buff1' 'int'
|   |-BinaryOperator 0x55681d7af990 <line:801:3, col:208> 'int' '='
|   | |-DeclRefExpr 0x55681d7af4a0 <col:3> 'int' lvalue Var 0x55681d7aa0b0 'b$w_buff0' 'int'
|   | `-ConditionalOperator 0x55681d7af960 <col:15, col:208> 'int'
|   |   |-ImplicitCastExpr 0x55681d7af930 <col:15> 'int' <IntegralCast>
|   |   | `-ImplicitCastExpr 0x55681d7af918 <col:15> '_Bool' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x55681d7af4c0 <col:15> '_Bool' lvalue Var 0x55681d7aa760 'weak$$choice2' '_Bool'
|   |   |-ImplicitCastExpr 0x55681d7af948 <col:31> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x55681d7af4e0 <col:31> 'int' lvalue Var 0x55681d7aa0b0 'b$w_buff0' 'int'
|   |   `-ParenExpr 0x55681d7af8f8 <col:43, col:208> 'int'
|   |     `-ConditionalOperator 0x55681d7af8c8 <col:44, col:207> 'int'
|   |       |-BinaryOperator 0x55681d7af6f0 <col:44, col:121> 'int' '||'
|   |       | |-BinaryOperator 0x55681d7af610 <col:44, col:83> 'int' '||'
|   |       | | |-UnaryOperator 0x55681d7af538 <col:44, col:45> 'int' prefix '!' cannot overflow
|   |       | | | `-ImplicitCastExpr 0x55681d7af520 <col:45> '_Bool' <LValueToRValue>
|   |       | | |   `-DeclRefExpr 0x55681d7af500 <col:45> '_Bool' lvalue Var 0x55681d7aa128 'b$w_buff0_used' '_Bool'
|   |       | | `-BinaryOperator 0x55681d7af5f0 <col:63, col:83> 'int' '&&'
|   |       | |   |-UnaryOperator 0x55681d7af588 <col:63, col:64> 'int' prefix '!' cannot overflow
|   |       | |   | `-ImplicitCastExpr 0x55681d7af570 <col:64> '_Bool' <LValueToRValue>
|   |       | |   |   `-DeclRefExpr 0x55681d7af550 <col:64> '_Bool' lvalue Var 0x55681d7a9ce0 'b$r_buff0_thd4' '_Bool'
|   |       | |   `-UnaryOperator 0x55681d7af5d8 <col:82, col:83> 'int' prefix '!' cannot overflow
|   |       | |     `-ImplicitCastExpr 0x55681d7af5c0 <col:83> '_Bool' <LValueToRValue>
|   |       | |       `-DeclRefExpr 0x55681d7af5a0 <col:83> '_Bool' lvalue Var 0x55681d7aa220 'b$w_buff1_used' '_Bool'
|   |       | `-BinaryOperator 0x55681d7af6d0 <col:101, col:121> 'int' '&&'
|   |       |   |-UnaryOperator 0x55681d7af668 <col:101, col:102> 'int' prefix '!' cannot overflow
|   |       |   | `-ImplicitCastExpr 0x55681d7af650 <col:102> '_Bool' <LValueToRValue>
|   |       |   |   `-DeclRefExpr 0x55681d7af630 <col:102> '_Bool' lvalue Var 0x55681d7a9ce0 'b$r_buff0_thd4' '_Bool'
|   |       |   `-UnaryOperator 0x55681d7af6b8 <col:120, col:121> 'int' prefix '!' cannot overflow
|   |       |     `-ImplicitCastExpr 0x55681d7af6a0 <col:121> '_Bool' <LValueToRValue>
|   |       |       `-DeclRefExpr 0x55681d7af680 <col:121> '_Bool' lvalue Var 0x55681d7a9f38 'b$r_buff1_thd4' '_Bool'
|   |       |-ImplicitCastExpr 0x55681d7af8b0 <col:138> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x55681d7af710 <col:138> 'int' lvalue Var 0x55681d7aa0b0 'b$w_buff0' 'int'
|   |       `-ParenExpr 0x55681d7af890 <col:150, col:207> 'int'
|   |         `-ConditionalOperator 0x55681d7af860 <col:151, col:198> 'int'
|   |           |-BinaryOperator 0x55681d7af7d0 <col:151, col:169> 'int' '&&'
|   |           | |-ImplicitCastExpr 0x55681d7af788 <col:151> 'int' <IntegralCast>
|   |           | | `-ImplicitCastExpr 0x55681d7af770 <col:151> '_Bool' <LValueToRValue>
|   |           | |   `-DeclRefExpr 0x55681d7af730 <col:151> '_Bool' lvalue Var 0x55681d7aa128 'b$w_buff0_used' '_Bool'
|   |           | `-ImplicitCastExpr 0x55681d7af7b8 <col:169> 'int' <IntegralCast>
|   |           |   `-ImplicitCastExpr 0x55681d7af7a0 <col:169> '_Bool' <LValueToRValue>
|   |           |     `-DeclRefExpr 0x55681d7af750 <col:169> '_Bool' lvalue Var 0x55681d7a9ce0 'b$r_buff0_thd4' '_Bool'
|   |           |-ImplicitCastExpr 0x55681d7af830 <col:186> 'int' <LValueToRValue>
|   |           | `-DeclRefExpr 0x55681d7af7f0 <col:186> 'int' lvalue Var 0x55681d7aa0b0 'b$w_buff0' 'int'
|   |           `-ImplicitCastExpr 0x55681d7af848 <col:198> 'int' <LValueToRValue>
|   |             `-DeclRefExpr 0x55681d7af810 <col:198> 'int' lvalue Var 0x55681d7aa0b0 'b$w_buff0' 'int'
|   |-BinaryOperator 0x55681d7afec0 <line:802:3, col:208> 'int' '='
|   | |-DeclRefExpr 0x55681d7af9b0 <col:3> 'int' lvalue Var 0x55681d7aa1a8 'b$w_buff1' 'int'
|   | `-ConditionalOperator 0x55681d7afe90 <col:15, col:208> 'int'
|   |   |-ImplicitCastExpr 0x55681d7afe60 <col:15> 'int' <IntegralCast>
|   |   | `-ImplicitCastExpr 0x55681d7afe48 <col:15> '_Bool' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x55681d7af9d0 <col:15> '_Bool' lvalue Var 0x55681d7aa760 'weak$$choice2' '_Bool'
|   |   |-ImplicitCastExpr 0x55681d7afe78 <col:31> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x55681d7af9f0 <col:31> 'int' lvalue Var 0x55681d7aa1a8 'b$w_buff1' 'int'
|   |   `-ParenExpr 0x55681d7afe28 <col:43, col:208> 'int'
|   |     `-ConditionalOperator 0x55681d7afdf8 <col:44, col:207> 'int'
|   |       |-BinaryOperator 0x55681d7afc20 <col:44, col:121> 'int' '||'
|   |       | |-BinaryOperator 0x55681d7afb20 <col:44, col:83> 'int' '||'
|   |       | | |-UnaryOperator 0x55681d7afa48 <col:44, col:45> 'int' prefix '!' cannot overflow
|   |       | | | `-ImplicitCastExpr 0x55681d7afa30 <col:45> '_Bool' <LValueToRValue>
|   |       | | |   `-DeclRefExpr 0x55681d7afa10 <col:45> '_Bool' lvalue Var 0x55681d7aa128 'b$w_buff0_used' '_Bool'
|   |       | | `-BinaryOperator 0x55681d7afb00 <col:63, col:83> 'int' '&&'
|   |       | |   |-UnaryOperator 0x55681d7afa98 <col:63, col:64> 'int' prefix '!' cannot overflow
|   |       | |   | `-ImplicitCastExpr 0x55681d7afa80 <col:64> '_Bool' <LValueToRValue>
|   |       | |   |   `-DeclRefExpr 0x55681d7afa60 <col:64> '_Bool' lvalue Var 0x55681d7a9ce0 'b$r_buff0_thd4' '_Bool'
|   |       | |   `-UnaryOperator 0x55681d7afae8 <col:82, col:83> 'int' prefix '!' cannot overflow
|   |       | |     `-ImplicitCastExpr 0x55681d7afad0 <col:83> '_Bool' <LValueToRValue>
|   |       | |       `-DeclRefExpr 0x55681d7afab0 <col:83> '_Bool' lvalue Var 0x55681d7aa220 'b$w_buff1_used' '_Bool'
|   |       | `-BinaryOperator 0x55681d7afc00 <col:101, col:121> 'int' '&&'
|   |       |   |-UnaryOperator 0x55681d7afb98 <col:101, col:102> 'int' prefix '!' cannot overflow
|   |       |   | `-ImplicitCastExpr 0x55681d7afb80 <col:102> '_Bool' <LValueToRValue>
|   |       |   |   `-DeclRefExpr 0x55681d7afb60 <col:102> '_Bool' lvalue Var 0x55681d7a9ce0 'b$r_buff0_thd4' '_Bool'
|   |       |   `-UnaryOperator 0x55681d7afbe8 <col:120, col:121> 'int' prefix '!' cannot overflow
|   |       |     `-ImplicitCastExpr 0x55681d7afbd0 <col:121> '_Bool' <LValueToRValue>
|   |       |       `-DeclRefExpr 0x55681d7afbb0 <col:121> '_Bool' lvalue Var 0x55681d7a9f38 'b$r_buff1_thd4' '_Bool'
|   |       |-ImplicitCastExpr 0x55681d7afde0 <col:138> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x55681d7afc40 <col:138> 'int' lvalue Var 0x55681d7aa1a8 'b$w_buff1' 'int'
|   |       `-ParenExpr 0x55681d7afdc0 <col:150, col:207> 'int'
|   |         `-ConditionalOperator 0x55681d7afd90 <col:151, col:198> 'int'
|   |           |-BinaryOperator 0x55681d7afd00 <col:151, col:169> 'int' '&&'
|   |           | |-ImplicitCastExpr 0x55681d7afcb8 <col:151> 'int' <IntegralCast>
|   |           | | `-ImplicitCastExpr 0x55681d7afca0 <col:151> '_Bool' <LValueToRValue>
|   |           | |   `-DeclRefExpr 0x55681d7afc60 <col:151> '_Bool' lvalue Var 0x55681d7aa128 'b$w_buff0_used' '_Bool'
|   |           | `-ImplicitCastExpr 0x55681d7afce8 <col:169> 'int' <IntegralCast>
|   |           |   `-ImplicitCastExpr 0x55681d7afcd0 <col:169> '_Bool' <LValueToRValue>
|   |           |     `-DeclRefExpr 0x55681d7afc80 <col:169> '_Bool' lvalue Var 0x55681d7a9ce0 'b$r_buff0_thd4' '_Bool'
|   |           |-ImplicitCastExpr 0x55681d7afd60 <col:186> 'int' <LValueToRValue>
|   |           | `-DeclRefExpr 0x55681d7afd20 <col:186> 'int' lvalue Var 0x55681d7aa1a8 'b$w_buff1' 'int'
|   |           `-ImplicitCastExpr 0x55681d7afd78 <col:198> 'int' <LValueToRValue>
|   |             `-DeclRefExpr 0x55681d7afd40 <col:198> 'int' lvalue Var 0x55681d7aa1a8 'b$w_buff1' 'int'
|   |-BinaryOperator 0x55681d7b0468 <line:803:3, col:227> '_Bool' '='
|   | |-DeclRefExpr 0x55681d7afee0 <col:3> '_Bool' lvalue Var 0x55681d7aa128 'b$w_buff0_used' '_Bool'
|   | `-ImplicitCastExpr 0x55681d7b0450 <col:20, col:227> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55681d7b0420 <col:20, col:227> 'int'
|   |     |-ImplicitCastExpr 0x55681d7b03d8 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x55681d7b03c0 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x55681d7aff00 <col:20> '_Bool' lvalue Var 0x55681d7aa760 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x55681d7b0408 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x55681d7b03f0 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x55681d7aff20 <col:36> '_Bool' lvalue Var 0x55681d7aa128 'b$w_buff0_used' '_Bool'
|   |     `-ParenExpr 0x55681d7b03a0 <col:53, col:227> 'int'
|   |       `-ConditionalOperator 0x55681d7b0370 <col:54, col:226> 'int'
|   |         |-BinaryOperator 0x55681d7b0130 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x55681d7b0050 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x55681d7aff78 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x55681d7aff60 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x55681d7aff40 <col:55> '_Bool' lvalue Var 0x55681d7aa128 'b$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x55681d7b0030 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x55681d7affc8 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x55681d7affb0 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x55681d7aff90 <col:74> '_Bool' lvalue Var 0x55681d7a9ce0 'b$r_buff0_thd4' '_Bool'
|   |         | |   `-UnaryOperator 0x55681d7b0018 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x55681d7b0000 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x55681d7affe0 <col:93> '_Bool' lvalue Var 0x55681d7aa220 'b$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x55681d7b0110 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x55681d7b00a8 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x55681d7b0090 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x55681d7b0070 <col:112> '_Bool' lvalue Var 0x55681d7a9ce0 'b$r_buff0_thd4' '_Bool'
|   |         |   `-UnaryOperator 0x55681d7b00f8 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x55681d7b00e0 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x55681d7b00c0 <col:131> '_Bool' lvalue Var 0x55681d7a9f38 'b$r_buff1_thd4' '_Bool'
|   |         |-ImplicitCastExpr 0x55681d7b0358 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x55681d7b0340 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x55681d7b0150 <col:148> '_Bool' lvalue Var 0x55681d7aa128 'b$w_buff0_used' '_Bool'
|   |         `-ParenExpr 0x55681d7b0320 <col:165, col:226> 'int'
|   |           `-ConditionalOperator 0x55681d7b02f0 <col:166, col:212> 'int'
|   |             |-BinaryOperator 0x55681d7b0210 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x55681d7b01c8 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x55681d7b01b0 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x55681d7b0170 <col:166> '_Bool' lvalue Var 0x55681d7aa128 'b$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x55681d7b01f8 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x55681d7b01e0 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x55681d7b0190 <col:184> '_Bool' lvalue Var 0x55681d7a9ce0 'b$r_buff0_thd4' '_Bool'
|   |             |-ImplicitCastExpr 0x55681d7b02a8 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x55681d7b0260 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x55681d7b0230 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x55681d7b02d8 <col:212> 'int' <IntegralCast>
|   |               `-ImplicitCastExpr 0x55681d7b02c0 <col:212> '_Bool' <LValueToRValue>
|   |                 `-DeclRefExpr 0x55681d7b0288 <col:212> '_Bool' lvalue Var 0x55681d7aa128 'b$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x55681d7b0a30 <line:804:3, col:221> '_Bool' '='
|   | |-DeclRefExpr 0x55681d7b0488 <col:3> '_Bool' lvalue Var 0x55681d7aa220 'b$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x55681d7b0a18 <col:20, col:221> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55681d7b09e8 <col:20, col:221> 'int'
|   |     |-ImplicitCastExpr 0x55681d7b09a0 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x55681d7b0988 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x55681d7b04a8 <col:20> '_Bool' lvalue Var 0x55681d7aa760 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x55681d7b09d0 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x55681d7b09b8 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x55681d7b04c8 <col:36> '_Bool' lvalue Var 0x55681d7aa220 'b$w_buff1_used' '_Bool'
|   |     `-ParenExpr 0x55681d7b0968 <col:53, col:221> 'int'
|   |       `-ConditionalOperator 0x55681d7b0938 <col:54, col:220> 'int'
|   |         |-BinaryOperator 0x55681d7b06d8 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x55681d7b05f8 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x55681d7b0520 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x55681d7b0508 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x55681d7b04e8 <col:55> '_Bool' lvalue Var 0x55681d7aa128 'b$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x55681d7b05d8 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x55681d7b0570 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x55681d7b0558 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x55681d7b0538 <col:74> '_Bool' lvalue Var 0x55681d7a9ce0 'b$r_buff0_thd4' '_Bool'
|   |         | |   `-UnaryOperator 0x55681d7b05c0 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x55681d7b05a8 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x55681d7b0588 <col:93> '_Bool' lvalue Var 0x55681d7aa220 'b$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x55681d7b06b8 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x55681d7b0650 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x55681d7b0638 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x55681d7b0618 <col:112> '_Bool' lvalue Var 0x55681d7a9ce0 'b$r_buff0_thd4' '_Bool'
|   |         |   `-UnaryOperator 0x55681d7b06a0 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x55681d7b0688 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x55681d7b0668 <col:131> '_Bool' lvalue Var 0x55681d7a9f38 'b$r_buff1_thd4' '_Bool'
|   |         |-ImplicitCastExpr 0x55681d7b0920 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x55681d7b0908 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x55681d7b06f8 <col:148> '_Bool' lvalue Var 0x55681d7aa220 'b$w_buff1_used' '_Bool'
|   |         `-ParenExpr 0x55681d7b08e8 <col:165, col:220> 'int'
|   |           `-ConditionalOperator 0x55681d7b08b8 <col:166, col:219> 'int'
|   |             |-BinaryOperator 0x55681d7b07b8 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x55681d7b0770 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x55681d7b0758 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x55681d7b0718 <col:166> '_Bool' lvalue Var 0x55681d7aa128 'b$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x55681d7b07a0 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x55681d7b0788 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x55681d7b0738 <col:184> '_Bool' lvalue Var 0x55681d7a9ce0 'b$r_buff0_thd4' '_Bool'
|   |             |-ImplicitCastExpr 0x55681d7b0888 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x55681d7b0808 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x55681d7b07d8 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x55681d7b08a0 <col:212, col:219> 'int' <IntegralCast>
|   |               `-CStyleCastExpr 0x55681d7b0860 <col:212, col:219> '_Bool' <IntegralToBoolean>
|   |                 `-IntegerLiteral 0x55681d7b0830 <col:219> 'int' 0
|   |-BinaryOperator 0x55681d7b0ff8 <line:805:3, col:227> '_Bool' '='
|   | |-DeclRefExpr 0x55681d7b0a50 <col:3> '_Bool' lvalue Var 0x55681d7a9ce0 'b$r_buff0_thd4' '_Bool'
|   | `-ImplicitCastExpr 0x55681d7b0fe0 <col:20, col:227> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55681d7b0fb0 <col:20, col:227> 'int'
|   |     |-ImplicitCastExpr 0x55681d7b0f68 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x55681d7b0f50 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x55681d7b0a70 <col:20> '_Bool' lvalue Var 0x55681d7aa760 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x55681d7b0f98 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x55681d7b0f80 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x55681d7b0a90 <col:36> '_Bool' lvalue Var 0x55681d7a9ce0 'b$r_buff0_thd4' '_Bool'
|   |     `-ParenExpr 0x55681d7b0f30 <col:53, col:227> 'int'
|   |       `-ConditionalOperator 0x55681d7b0f00 <col:54, col:226> 'int'
|   |         |-BinaryOperator 0x55681d7b0cc0 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x55681d7b0be0 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x55681d7b0ae8 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x55681d7b0ad0 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x55681d7b0ab0 <col:55> '_Bool' lvalue Var 0x55681d7aa128 'b$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x55681d7b0bc0 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x55681d7b0b38 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x55681d7b0b20 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x55681d7b0b00 <col:74> '_Bool' lvalue Var 0x55681d7a9ce0 'b$r_buff0_thd4' '_Bool'
|   |         | |   `-UnaryOperator 0x55681d7b0ba8 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x55681d7b0b90 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x55681d7b0b70 <col:93> '_Bool' lvalue Var 0x55681d7aa220 'b$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x55681d7b0ca0 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x55681d7b0c38 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x55681d7b0c20 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x55681d7b0c00 <col:112> '_Bool' lvalue Var 0x55681d7a9ce0 'b$r_buff0_thd4' '_Bool'
|   |         |   `-UnaryOperator 0x55681d7b0c88 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x55681d7b0c70 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x55681d7b0c50 <col:131> '_Bool' lvalue Var 0x55681d7a9f38 'b$r_buff1_thd4' '_Bool'
|   |         |-ImplicitCastExpr 0x55681d7b0ee8 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x55681d7b0ed0 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x55681d7b0ce0 <col:148> '_Bool' lvalue Var 0x55681d7a9ce0 'b$r_buff0_thd4' '_Bool'
|   |         `-ParenExpr 0x55681d7b0eb0 <col:165, col:226> 'int'
|   |           `-ConditionalOperator 0x55681d7b0e80 <col:166, col:212> 'int'
|   |             |-BinaryOperator 0x55681d7b0da0 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x55681d7b0d58 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x55681d7b0d40 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x55681d7b0d00 <col:166> '_Bool' lvalue Var 0x55681d7aa128 'b$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x55681d7b0d88 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x55681d7b0d70 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x55681d7b0d20 <col:184> '_Bool' lvalue Var 0x55681d7a9ce0 'b$r_buff0_thd4' '_Bool'
|   |             |-ImplicitCastExpr 0x55681d7b0e38 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x55681d7b0df0 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x55681d7b0dc0 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x55681d7b0e68 <col:212> 'int' <IntegralCast>
|   |               `-ImplicitCastExpr 0x55681d7b0e50 <col:212> '_Bool' <LValueToRValue>
|   |                 `-DeclRefExpr 0x55681d7b0e18 <col:212> '_Bool' lvalue Var 0x55681d7a9ce0 'b$r_buff0_thd4' '_Bool'
|   |-BinaryOperator 0x55681d7b15c0 <line:806:3, col:221> '_Bool' '='
|   | |-DeclRefExpr 0x55681d7b1018 <col:3> '_Bool' lvalue Var 0x55681d7a9f38 'b$r_buff1_thd4' '_Bool'
|   | `-ImplicitCastExpr 0x55681d7b15a8 <col:20, col:221> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55681d7b1578 <col:20, col:221> 'int'
|   |     |-ImplicitCastExpr 0x55681d7b1530 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x55681d7b1518 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x55681d7b1038 <col:20> '_Bool' lvalue Var 0x55681d7aa760 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x55681d7b1560 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x55681d7b1548 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x55681d7b1058 <col:36> '_Bool' lvalue Var 0x55681d7a9f38 'b$r_buff1_thd4' '_Bool'
|   |     `-ParenExpr 0x55681d7b14f8 <col:53, col:221> 'int'
|   |       `-ConditionalOperator 0x55681d7b14c8 <col:54, col:220> 'int'
|   |         |-BinaryOperator 0x55681d7b1268 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x55681d7b1188 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x55681d7b10b0 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x55681d7b1098 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x55681d7b1078 <col:55> '_Bool' lvalue Var 0x55681d7aa128 'b$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x55681d7b1168 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x55681d7b1100 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x55681d7b10e8 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x55681d7b10c8 <col:74> '_Bool' lvalue Var 0x55681d7a9ce0 'b$r_buff0_thd4' '_Bool'
|   |         | |   `-UnaryOperator 0x55681d7b1150 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x55681d7b1138 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x55681d7b1118 <col:93> '_Bool' lvalue Var 0x55681d7aa220 'b$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x55681d7b1248 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x55681d7b11e0 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x55681d7b11c8 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x55681d7b11a8 <col:112> '_Bool' lvalue Var 0x55681d7a9ce0 'b$r_buff0_thd4' '_Bool'
|   |         |   `-UnaryOperator 0x55681d7b1230 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x55681d7b1218 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x55681d7b11f8 <col:131> '_Bool' lvalue Var 0x55681d7a9f38 'b$r_buff1_thd4' '_Bool'
|   |         |-ImplicitCastExpr 0x55681d7b14b0 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x55681d7b1498 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x55681d7b1288 <col:148> '_Bool' lvalue Var 0x55681d7a9f38 'b$r_buff1_thd4' '_Bool'
|   |         `-ParenExpr 0x55681d7b1478 <col:165, col:220> 'int'
|   |           `-ConditionalOperator 0x55681d7b1448 <col:166, col:219> 'int'
|   |             |-BinaryOperator 0x55681d7b1348 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x55681d7b1300 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x55681d7b12e8 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x55681d7b12a8 <col:166> '_Bool' lvalue Var 0x55681d7aa128 'b$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x55681d7b1330 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x55681d7b1318 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x55681d7b12c8 <col:184> '_Bool' lvalue Var 0x55681d7a9ce0 'b$r_buff0_thd4' '_Bool'
|   |             |-ImplicitCastExpr 0x55681d7b1418 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x55681d7b1398 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x55681d7b1368 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x55681d7b1430 <col:212, col:219> 'int' <IntegralCast>
|   |               `-CStyleCastExpr 0x55681d7b13f0 <col:212, col:219> '_Bool' <IntegralToBoolean>
|   |                 `-IntegerLiteral 0x55681d7b13c0 <col:219> 'int' 0
|   |-BinaryOperator 0x55681d7b1638 <line:807:3, col:25> 'int' '='
|   | |-DeclRefExpr 0x55681d7b15e0 <col:3> 'int' lvalue Var 0x55681d7a96f8 '__unbuffered_p3_EBX' 'int'
|   | `-ImplicitCastExpr 0x55681d7b1620 <col:25> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x55681d7b1600 <col:25> 'int' lvalue Var 0x55681d7a9938 'b' 'int'
|   |-BinaryOperator 0x55681d7b1768 <line:808:3, col:37> 'int' '='
|   | |-DeclRefExpr 0x55681d7b1658 <col:3> 'int' lvalue Var 0x55681d7a9938 'b' 'int'
|   | `-ConditionalOperator 0x55681d7b1738 <col:7, col:37> 'int'
|   |   |-ImplicitCastExpr 0x55681d7b16f0 <col:7> 'int' <IntegralCast>
|   |   | `-ImplicitCastExpr 0x55681d7b16d8 <col:7> '_Bool' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x55681d7b1678 <col:7> '_Bool' lvalue Var 0x55681d7a99d0 'b$flush_delayed' '_Bool'
|   |   |-ImplicitCastExpr 0x55681d7b1708 <col:25> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x55681d7b1698 <col:25> 'int' lvalue Var 0x55681d7a9a50 'b$mem_tmp' 'int'
|   |   `-ImplicitCastExpr 0x55681d7b1720 <col:37> 'int' <LValueToRValue>
|   |     `-DeclRefExpr 0x55681d7b16b8 <col:37> 'int' lvalue Var 0x55681d7a9938 'b' 'int'
|   |-BinaryOperator 0x55681d7b1800 <line:809:3, col:28> '_Bool' '='
|   | |-DeclRefExpr 0x55681d7b1788 <col:3> '_Bool' lvalue Var 0x55681d7a99d0 'b$flush_delayed' '_Bool'
|   | `-CStyleCastExpr 0x55681d7b17d8 <col:21, col:28> '_Bool' <IntegralToBoolean>
|   |   `-IntegerLiteral 0x55681d7b17a8 <col:28> 'int' 0
|   |-CallExpr 0x55681d7b1858 <line:810:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x55681d7b1840 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55681d7b1820 <col:3> 'void ()' Function 0x55681d74ff00 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x55681d7b18b0 <line:811:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x55681d7b1898 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55681d7b1878 <col:3> 'void ()' Function 0x55681d74fe40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x55681d7b1bb0 <line:812:3, col:103> 'int' '='
|   | |-DeclRefExpr 0x55681d7b18d0 <col:3> 'int' lvalue Var 0x55681d7a9938 'b' 'int'
|   | `-ConditionalOperator 0x55681d7b1b80 <col:7, col:103> 'int'
|   |   |-BinaryOperator 0x55681d7b1990 <col:7, col:25> 'int' '&&'
|   |   | |-ImplicitCastExpr 0x55681d7b1948 <col:7> 'int' <IntegralCast>
|   |   | | `-ImplicitCastExpr 0x55681d7b1930 <col:7> '_Bool' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x55681d7b18f0 <col:7> '_Bool' lvalue Var 0x55681d7aa128 'b$w_buff0_used' '_Bool'
|   |   | `-ImplicitCastExpr 0x55681d7b1978 <col:25> 'int' <IntegralCast>
|   |   |   `-ImplicitCastExpr 0x55681d7b1960 <col:25> '_Bool' <LValueToRValue>
|   |   |     `-DeclRefExpr 0x55681d7b1910 <col:25> '_Bool' lvalue Var 0x55681d7a9ce0 'b$r_buff0_thd4' '_Bool'
|   |   |-ImplicitCastExpr 0x55681d7b1b50 <col:42> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x55681d7b19b0 <col:42> 'int' lvalue Var 0x55681d7aa0b0 'b$w_buff0' 'int'
|   |   `-ParenExpr 0x55681d7b1b30 <col:54, col:103> 'int'
|   |     `-ConditionalOperator 0x55681d7b1b00 <col:55, col:102> 'int'
|   |       |-BinaryOperator 0x55681d7b1a70 <col:55, col:73> 'int' '&&'
|   |       | |-ImplicitCastExpr 0x55681d7b1a28 <col:55> 'int' <IntegralCast>
|   |       | | `-ImplicitCastExpr 0x55681d7b1a10 <col:55> '_Bool' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x55681d7b19d0 <col:55> '_Bool' lvalue Var 0x55681d7aa220 'b$w_buff1_used' '_Bool'
|   |       | `-ImplicitCastExpr 0x55681d7b1a58 <col:73> 'int' <IntegralCast>
|   |       |   `-ImplicitCastExpr 0x55681d7b1a40 <col:73> '_Bool' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x55681d7b19f0 <col:73> '_Bool' lvalue Var 0x55681d7a9f38 'b$r_buff1_thd4' '_Bool'
|   |       |-ImplicitCastExpr 0x55681d7b1ad0 <col:90> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x55681d7b1a90 <col:90> 'int' lvalue Var 0x55681d7aa1a8 'b$w_buff1' 'int'
|   |       `-ImplicitCastExpr 0x55681d7b1ae8 <col:102> 'int' <LValueToRValue>
|   |         `-DeclRefExpr 0x55681d7b1ab0 <col:102> 'int' lvalue Var 0x55681d7a9938 'b' 'int'
|   |-BinaryOperator 0x55681d7b1db8 <line:813:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x55681d7b1bd0 <col:3> '_Bool' lvalue Var 0x55681d7aa128 'b$w_buff0_used' '_Bool'
|   | `-ImplicitCastExpr 0x55681d7b1da0 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55681d7b1d70 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x55681d7b1c90 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x55681d7b1c48 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x55681d7b1c30 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x55681d7b1bf0 <col:20> '_Bool' lvalue Var 0x55681d7aa128 'b$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x55681d7b1c78 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x55681d7b1c60 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x55681d7b1c10 <col:38> '_Bool' lvalue Var 0x55681d7a9ce0 'b$r_buff0_thd4' '_Bool'
|   |     |-ImplicitCastExpr 0x55681d7b1d28 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x55681d7b1ce0 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x55681d7b1cb0 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x55681d7b1d58 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x55681d7b1d40 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x55681d7b1d08 <col:66> '_Bool' lvalue Var 0x55681d7aa128 'b$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x55681d7b20a0 <line:814:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x55681d7b1dd8 <col:3> '_Bool' lvalue Var 0x55681d7aa220 'b$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x55681d7b2088 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55681d7b2058 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x55681d7b1f78 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x55681d7b1e98 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x55681d7b1e50 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x55681d7b1e38 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x55681d7b1df8 <col:20> '_Bool' lvalue Var 0x55681d7aa128 'b$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x55681d7b1e80 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x55681d7b1e68 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x55681d7b1e18 <col:38> '_Bool' lvalue Var 0x55681d7a9ce0 'b$r_buff0_thd4' '_Bool'
|   |     | `-BinaryOperator 0x55681d7b1f58 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x55681d7b1f10 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x55681d7b1ef8 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x55681d7b1eb8 <col:56> '_Bool' lvalue Var 0x55681d7aa220 'b$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x55681d7b1f40 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x55681d7b1f28 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x55681d7b1ed8 <col:74> '_Bool' lvalue Var 0x55681d7a9f38 'b$r_buff1_thd4' '_Bool'
|   |     |-ImplicitCastExpr 0x55681d7b2010 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x55681d7b1fc8 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x55681d7b1f98 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x55681d7b2040 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x55681d7b2028 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x55681d7b1ff0 <col:102> '_Bool' lvalue Var 0x55681d7aa220 'b$w_buff1_used' '_Bool'
|   |-BinaryOperator 0x55681d7b22a8 <line:815:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x55681d7b20c0 <col:3> '_Bool' lvalue Var 0x55681d7a9ce0 'b$r_buff0_thd4' '_Bool'
|   | `-ImplicitCastExpr 0x55681d7b2290 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55681d7b2260 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x55681d7b2180 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x55681d7b2138 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x55681d7b2120 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x55681d7b20e0 <col:20> '_Bool' lvalue Var 0x55681d7aa128 'b$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x55681d7b2168 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x55681d7b2150 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x55681d7b2100 <col:38> '_Bool' lvalue Var 0x55681d7a9ce0 'b$r_buff0_thd4' '_Bool'
|   |     |-ImplicitCastExpr 0x55681d7b2218 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x55681d7b21d0 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x55681d7b21a0 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x55681d7b2248 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x55681d7b2230 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x55681d7b21f8 <col:66> '_Bool' lvalue Var 0x55681d7a9ce0 'b$r_buff0_thd4' '_Bool'
|   |-BinaryOperator 0x55681d7b2590 <line:816:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x55681d7b22c8 <col:3> '_Bool' lvalue Var 0x55681d7a9f38 'b$r_buff1_thd4' '_Bool'
|   | `-ImplicitCastExpr 0x55681d7b2578 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55681d7b2548 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x55681d7b2468 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x55681d7b2388 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x55681d7b2340 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x55681d7b2328 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x55681d7b22e8 <col:20> '_Bool' lvalue Var 0x55681d7aa128 'b$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x55681d7b2370 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x55681d7b2358 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x55681d7b2308 <col:38> '_Bool' lvalue Var 0x55681d7a9ce0 'b$r_buff0_thd4' '_Bool'
|   |     | `-BinaryOperator 0x55681d7b2448 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x55681d7b2400 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x55681d7b23e8 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x55681d7b23a8 <col:56> '_Bool' lvalue Var 0x55681d7aa220 'b$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x55681d7b2430 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x55681d7b2418 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x55681d7b23c8 <col:74> '_Bool' lvalue Var 0x55681d7a9f38 'b$r_buff1_thd4' '_Bool'
|   |     |-ImplicitCastExpr 0x55681d7b2500 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x55681d7b24b8 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x55681d7b2488 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x55681d7b2530 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x55681d7b2518 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x55681d7b24e0 <col:102> '_Bool' lvalue Var 0x55681d7a9f38 'b$r_buff1_thd4' '_Bool'
|   |-CallExpr 0x55681d7b25e8 <line:817:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x55681d7b25d0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55681d7b25b0 <col:3> 'void ()' Function 0x55681d74ff00 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x55681d7b2640 <line:818:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x55681d7b2628 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55681d7b2608 <col:3> 'void ()' Function 0x55681d74fe40 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x55681d7b26f8 <line:819:3, col:41> 'int' '='
|   | |-DeclRefExpr 0x55681d7b2660 <col:3> 'int' lvalue Var 0x55681d7a9278 '__unbuffered_cnt' 'int'
|   | `-BinaryOperator 0x55681d7b26d8 <col:22, col:41> 'int' '+'
|   |   |-ImplicitCastExpr 0x55681d7b26c0 <col:22> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x55681d7b2680 <col:22> 'int' lvalue Var 0x55681d7a9278 '__unbuffered_cnt' 'int'
|   |   `-IntegerLiteral 0x55681d7b26a0 <col:41> 'int' 1
|   |-CallExpr 0x55681d7b2750 <line:820:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x55681d7b2738 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55681d7b2718 <col:3> 'void ()' Function 0x55681d74ff00 '__VERIFIER_atomic_end' 'void ()'
|   `-ReturnStmt 0x55681d7b27c8 <line:821:3, col:36>
|     `-CallExpr 0x55681d7b27a8 <col:10, col:36> 'void *'
|       `-ImplicitCastExpr 0x55681d7b2790 <col:10> 'void *(*)(void)' <FunctionToPointerDecay>
|         `-DeclRefExpr 0x55681d7b2770 <col:10> 'void *(void)' Function 0x55681d74f958 '__VERIFIER_nondet_pointer' 'void *(void)'
|-FunctionDecl 0x55681d7b2928 prev 0x55681d7a8fc0 <line:823:1, line:825:1> line:823:6 fence 'void ()'
| `-CompoundStmt 0x55681d7b29c8 <line:824:1, line:825:1>
|-FunctionDecl 0x55681d7b29f8 prev 0x55681d7a9080 <line:826:1, line:828:1> line:826:6 isync 'void ()'
| `-CompoundStmt 0x55681d7b2a98 <line:827:1, line:828:1>
|-FunctionDecl 0x55681d7b2ac8 prev 0x55681d7a9140 <line:829:1, line:831:1> line:829:6 lwfence 'void ()'
| `-CompoundStmt 0x55681d7b2b68 <line:830:1, line:831:1>
`-FunctionDecl 0x55681d7b2be8 <line:832:1, line:858:1> line:832:5 main 'int ()'
  `-CompoundStmt 0x55681d7b4bf8 <line:833:1, line:858:1>
    |-DeclStmt 0x55681d7b2d00 <line:834:3, col:18>
    | `-VarDecl 0x55681d7b2c98 <col:3, col:13> col:13 used t1035 'pthread_t':'unsigned long'
    |-CallExpr 0x55681d7b2f08 <line:835:3, col:54> 'int'
    | |-ImplicitCastExpr 0x55681d7b2ef0 <col:3> 'int (*)(pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x55681d7b2d18 <col:3> 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' Function 0x55681d790488 'pthread_create' 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)'
    | |-UnaryOperator 0x55681d7b2d58 <col:18, col:19> 'pthread_t *' prefix '&' cannot overflow
    | | `-DeclRefExpr 0x55681d7b2d38 <col:19> 'pthread_t':'unsigned long' lvalue Var 0x55681d7b2c98 't1035' 'pthread_t':'unsigned long'
    | |-ImplicitCastExpr 0x55681d7b2f48 <col:26, col:36> 'const pthread_attr_t *' <NullToPointer>
    | | `-ParenExpr 0x55681d7b2dd0 <col:26, col:36> 'void *'
    | |   `-CStyleCastExpr 0x55681d7b2da8 <col:27, col:35> 'void *' <NullToPointer>
    | |     `-IntegerLiteral 0x55681d7b2d70 <col:35> 'int' 0
    | |-ImplicitCastExpr 0x55681d7b2f60 <col:39> 'void *(*)(void *)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x55681d7b2df0 <col:39> 'void *(void *)' Function 0x55681d7aa878 'P0' 'void *(void *)'
    | `-ParenExpr 0x55681d7b2e70 <col:43, col:53> 'void *'
    |   `-CStyleCastExpr 0x55681d7b2e48 <col:44, col:52> 'void *' <NullToPointer>
    |     `-IntegerLiteral 0x55681d7b2e10 <col:52> 'int' 0
    |-DeclStmt 0x55681d7b2ff0 <line:836:3, col:18>
    | `-VarDecl 0x55681d7b2f88 <col:3, col:13> col:13 used t1036 'pthread_t':'unsigned long'
    |-CallExpr 0x55681d7b3198 <line:837:3, col:54> 'int'
    | |-ImplicitCastExpr 0x55681d7b3180 <col:3> 'int (*)(pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x55681d7b3008 <col:3> 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' Function 0x55681d790488 'pthread_create' 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)'
    | |-UnaryOperator 0x55681d7b3048 <col:18, col:19> 'pthread_t *' prefix '&' cannot overflow
    | | `-DeclRefExpr 0x55681d7b3028 <col:19> 'pthread_t':'unsigned long' lvalue Var 0x55681d7b2f88 't1036' 'pthread_t':'unsigned long'
    | |-ImplicitCastExpr 0x55681d7b31d8 <col:26, col:36> 'const pthread_attr_t *' <NullToPointer>
    | | `-ParenExpr 0x55681d7b30c0 <col:26, col:36> 'void *'
    | |   `-CStyleCastExpr 0x55681d7b3098 <col:27, col:35> 'void *' <NullToPointer>
    | |     `-IntegerLiteral 0x55681d7b3060 <col:35> 'int' 0
    | |-ImplicitCastExpr 0x55681d7b31f0 <col:39> 'void *(*)(void *)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x55681d7b30e0 <col:39> 'void *(void *)' Function 0x55681d7ac2d0 'P1' 'void *(void *)'
    | `-ParenExpr 0x55681d7b3160 <col:43, col:53> 'void *'
    |   `-CStyleCastExpr 0x55681d7b3138 <col:44, col:52> 'void *' <NullToPointer>
    |     `-IntegerLiteral 0x55681d7b3100 <col:52> 'int' 0
    |-DeclStmt 0x55681d7b3280 <line:838:3, col:18>
    | `-VarDecl 0x55681d7b3218 <col:3, col:13> col:13 used t1037 'pthread_t':'unsigned long'
    |-CallExpr 0x55681d7b3428 <line:839:3, col:54> 'int'
    | |-ImplicitCastExpr 0x55681d7b3410 <col:3> 'int (*)(pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x55681d7b3298 <col:3> 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' Function 0x55681d790488 'pthread_create' 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)'
    | |-UnaryOperator 0x55681d7b32d8 <col:18, col:19> 'pthread_t *' prefix '&' cannot overflow
    | | `-DeclRefExpr 0x55681d7b32b8 <col:19> 'pthread_t':'unsigned long' lvalue Var 0x55681d7b3218 't1037' 'pthread_t':'unsigned long'
    | |-ImplicitCastExpr 0x55681d7b3468 <col:26, col:36> 'const pthread_attr_t *' <NullToPointer>
    | | `-ParenExpr 0x55681d7b3350 <col:26, col:36> 'void *'
    | |   `-CStyleCastExpr 0x55681d7b3328 <col:27, col:35> 'void *' <NullToPointer>
    | |     `-IntegerLiteral 0x55681d7b32f0 <col:35> 'int' 0
    | |-ImplicitCastExpr 0x55681d7b3480 <col:39> 'void *(*)(void *)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x55681d7b3370 <col:39> 'void *(void *)' Function 0x55681d7ad638 'P2' 'void *(void *)'
    | `-ParenExpr 0x55681d7b33f0 <col:43, col:53> 'void *'
    |   `-CStyleCastExpr 0x55681d7b33c8 <col:44, col:52> 'void *' <NullToPointer>
    |     `-IntegerLiteral 0x55681d7b3390 <col:52> 'int' 0
    |-DeclStmt 0x55681d7b3510 <line:840:3, col:18>
    | `-VarDecl 0x55681d7b34a8 <col:3, col:13> col:13 used t1038 'pthread_t':'unsigned long'
    |-CallExpr 0x55681d7b36b8 <line:841:3, col:54> 'int'
    | |-ImplicitCastExpr 0x55681d7b36a0 <col:3> 'int (*)(pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x55681d7b3528 <col:3> 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' Function 0x55681d790488 'pthread_create' 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)'
    | |-UnaryOperator 0x55681d7b3568 <col:18, col:19> 'pthread_t *' prefix '&' cannot overflow
    | | `-DeclRefExpr 0x55681d7b3548 <col:19> 'pthread_t':'unsigned long' lvalue Var 0x55681d7b34a8 't1038' 'pthread_t':'unsigned long'
    | |-ImplicitCastExpr 0x55681d7b36f8 <col:26, col:36> 'const pthread_attr_t *' <NullToPointer>
    | | `-ParenExpr 0x55681d7b35e0 <col:26, col:36> 'void *'
    | |   `-CStyleCastExpr 0x55681d7b35b8 <col:27, col:35> 'void *' <NullToPointer>
    | |     `-IntegerLiteral 0x55681d7b3580 <col:35> 'int' 0
    | |-ImplicitCastExpr 0x55681d7b3710 <col:39> 'void *(*)(void *)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x55681d7b3600 <col:39> 'void *(void *)' Function 0x55681d7ae9b8 'P3' 'void *(void *)'
    | `-ParenExpr 0x55681d7b3680 <col:43, col:53> 'void *'
    |   `-CStyleCastExpr 0x55681d7b3658 <col:44, col:52> 'void *' <NullToPointer>
    |     `-IntegerLiteral 0x55681d7b3620 <col:52> 'int' 0
    |-CallExpr 0x55681d7b3760 <line:842:3, col:27> 'void'
    | `-ImplicitCastExpr 0x55681d7b3748 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x55681d7b3728 <col:3> 'void ()' Function 0x55681d74fe40 '__VERIFIER_atomic_begin' 'void ()'
    |-BinaryOperator 0x55681d7b3830 <line:843:3, col:41> '_Bool' '='
    | |-DeclRefExpr 0x55681d7b3780 <col:3> '_Bool' lvalue Var 0x55681d7aa298 'main$tmp_guard0' '_Bool'
    | `-ImplicitCastExpr 0x55681d7b3818 <col:21, col:41> '_Bool' <IntegralToBoolean>
    |   `-BinaryOperator 0x55681d7b37f8 <col:21, col:41> 'int' '=='
    |     |-ImplicitCastExpr 0x55681d7b37e0 <col:21> 'int' <LValueToRValue>
    |     | `-DeclRefExpr 0x55681d7b37a0 <col:21> 'int' lvalue Var 0x55681d7a9278 '__unbuffered_cnt' 'int'
    |     `-IntegerLiteral 0x55681d7b37c0 <col:41> 'int' 4
    |-CallExpr 0x55681d7b3888 <line:844:3, col:25> 'void'
    | `-ImplicitCastExpr 0x55681d7b3870 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x55681d7b3850 <col:3> 'void ()' Function 0x55681d74ff00 '__VERIFIER_atomic_end' 'void ()'
    |-CallExpr 0x55681d7b3900 <line:845:3, col:36> 'void'
    | |-ImplicitCastExpr 0x55681d7b38e8 <col:3> 'void (*)(int)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x55681d7b38a8 <col:3> 'void (int)' Function 0x55681d74f790 '__VERIFIER_assume' 'void (int)'
    | `-ImplicitCastExpr 0x55681d7b3940 <col:21> 'int' <IntegralCast>
    |   `-ImplicitCastExpr 0x55681d7b3928 <col:21> '_Bool' <LValueToRValue>
    |     `-DeclRefExpr 0x55681d7b38c8 <col:21> '_Bool' lvalue Var 0x55681d7aa298 'main$tmp_guard0' '_Bool'
    |-CallExpr 0x55681d7b3990 <line:846:3, col:27> 'void'
    | `-ImplicitCastExpr 0x55681d7b3978 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x55681d7b3958 <col:3> 'void ()' Function 0x55681d74fe40 '__VERIFIER_atomic_begin' 'void ()'
    |-BinaryOperator 0x55681d7b3c88 <line:847:3, col:103> 'int' '='
    | |-DeclRefExpr 0x55681d7b39b0 <col:3> 'int' lvalue Var 0x55681d7a9938 'b' 'int'
    | `-ConditionalOperator 0x55681d7b3c58 <col:7, col:103> 'int'
    |   |-BinaryOperator 0x55681d7b3a70 <col:7, col:25> 'int' '&&'
    |   | |-ImplicitCastExpr 0x55681d7b3a28 <col:7> 'int' <IntegralCast>
    |   | | `-ImplicitCastExpr 0x55681d7b3a10 <col:7> '_Bool' <LValueToRValue>
    |   | |   `-DeclRefExpr 0x55681d7b39d0 <col:7> '_Bool' lvalue Var 0x55681d7aa128 'b$w_buff0_used' '_Bool'
    |   | `-ImplicitCastExpr 0x55681d7b3a58 <col:25> 'int' <IntegralCast>
    |   |   `-ImplicitCastExpr 0x55681d7b3a40 <col:25> '_Bool' <LValueToRValue>
    |   |     `-DeclRefExpr 0x55681d7b39f0 <col:25> '_Bool' lvalue Var 0x55681d7a9b00 'b$r_buff0_thd0' '_Bool'
    |   |-ImplicitCastExpr 0x55681d7b3c40 <col:42> 'int' <LValueToRValue>
    |   | `-DeclRefExpr 0x55681d7b3a90 <col:42> 'int' lvalue Var 0x55681d7aa0b0 'b$w_buff0' 'int'
    |   `-ParenExpr 0x55681d7b3c20 <col:54, col:103> 'int'
    |     `-ConditionalOperator 0x55681d7b3bf0 <col:55, col:102> 'int'
    |       |-BinaryOperator 0x55681d7b3b50 <col:55, col:73> 'int' '&&'
    |       | |-ImplicitCastExpr 0x55681d7b3b08 <col:55> 'int' <IntegralCast>
    |       | | `-ImplicitCastExpr 0x55681d7b3af0 <col:55> '_Bool' <LValueToRValue>
    |       | |   `-DeclRefExpr 0x55681d7b3ab0 <col:55> '_Bool' lvalue Var 0x55681d7aa220 'b$w_buff1_used' '_Bool'
    |       | `-ImplicitCastExpr 0x55681d7b3b38 <col:73> 'int' <IntegralCast>
    |       |   `-ImplicitCastExpr 0x55681d7b3b20 <col:73> '_Bool' <LValueToRValue>
    |       |     `-DeclRefExpr 0x55681d7b3ad0 <col:73> '_Bool' lvalue Var 0x55681d7a9d58 'b$r_buff1_thd0' '_Bool'
    |       |-ImplicitCastExpr 0x55681d7b3bc0 <col:90> 'int' <LValueToRValue>
    |       | `-DeclRefExpr 0x55681d7b3b70 <col:90> 'int' lvalue Var 0x55681d7aa1a8 'b$w_buff1' 'int'
    |       `-ImplicitCastExpr 0x55681d7b3bd8 <col:102> 'int' <LValueToRValue>
    |         `-DeclRefExpr 0x55681d7b3ba0 <col:102> 'int' lvalue Var 0x55681d7a9938 'b' 'int'
    |-BinaryOperator 0x55681d7b3e90 <line:848:3, col:66> '_Bool' '='
    | |-DeclRefExpr 0x55681d7b3ca8 <col:3> '_Bool' lvalue Var 0x55681d7aa128 'b$w_buff0_used' '_Bool'
    | `-ImplicitCastExpr 0x55681d7b3e78 <col:20, col:66> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x55681d7b3e48 <col:20, col:66> 'int'
    |     |-BinaryOperator 0x55681d7b3d68 <col:20, col:38> 'int' '&&'
    |     | |-ImplicitCastExpr 0x55681d7b3d20 <col:20> 'int' <IntegralCast>
    |     | | `-ImplicitCastExpr 0x55681d7b3d08 <col:20> '_Bool' <LValueToRValue>
    |     | |   `-DeclRefExpr 0x55681d7b3cc8 <col:20> '_Bool' lvalue Var 0x55681d7aa128 'b$w_buff0_used' '_Bool'
    |     | `-ImplicitCastExpr 0x55681d7b3d50 <col:38> 'int' <IntegralCast>
    |     |   `-ImplicitCastExpr 0x55681d7b3d38 <col:38> '_Bool' <LValueToRValue>
    |     |     `-DeclRefExpr 0x55681d7b3ce8 <col:38> '_Bool' lvalue Var 0x55681d7a9b00 'b$r_buff0_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x55681d7b3e00 <col:55, col:62> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x55681d7b3db8 <col:55, col:62> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x55681d7b3d88 <col:62> 'int' 0
    |     `-ImplicitCastExpr 0x55681d7b3e30 <col:66> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x55681d7b3e18 <col:66> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x55681d7b3de0 <col:66> '_Bool' lvalue Var 0x55681d7aa128 'b$w_buff0_used' '_Bool'
    |-BinaryOperator 0x55681d7b4178 <line:849:3, col:102> '_Bool' '='
    | |-DeclRefExpr 0x55681d7b3eb0 <col:3> '_Bool' lvalue Var 0x55681d7aa220 'b$w_buff1_used' '_Bool'
    | `-ImplicitCastExpr 0x55681d7b4160 <col:20, col:102> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x55681d7b4130 <col:20, col:102> 'int'
    |     |-BinaryOperator 0x55681d7b4050 <col:20, col:74> 'int' '||'
    |     | |-BinaryOperator 0x55681d7b3f70 <col:20, col:38> 'int' '&&'
    |     | | |-ImplicitCastExpr 0x55681d7b3f28 <col:20> 'int' <IntegralCast>
    |     | | | `-ImplicitCastExpr 0x55681d7b3f10 <col:20> '_Bool' <LValueToRValue>
    |     | | |   `-DeclRefExpr 0x55681d7b3ed0 <col:20> '_Bool' lvalue Var 0x55681d7aa128 'b$w_buff0_used' '_Bool'
    |     | | `-ImplicitCastExpr 0x55681d7b3f58 <col:38> 'int' <IntegralCast>
    |     | |   `-ImplicitCastExpr 0x55681d7b3f40 <col:38> '_Bool' <LValueToRValue>
    |     | |     `-DeclRefExpr 0x55681d7b3ef0 <col:38> '_Bool' lvalue Var 0x55681d7a9b00 'b$r_buff0_thd0' '_Bool'
    |     | `-BinaryOperator 0x55681d7b4030 <col:56, col:74> 'int' '&&'
    |     |   |-ImplicitCastExpr 0x55681d7b3fe8 <col:56> 'int' <IntegralCast>
    |     |   | `-ImplicitCastExpr 0x55681d7b3fd0 <col:56> '_Bool' <LValueToRValue>
    |     |   |   `-DeclRefExpr 0x55681d7b3f90 <col:56> '_Bool' lvalue Var 0x55681d7aa220 'b$w_buff1_used' '_Bool'
    |     |   `-ImplicitCastExpr 0x55681d7b4018 <col:74> 'int' <IntegralCast>
    |     |     `-ImplicitCastExpr 0x55681d7b4000 <col:74> '_Bool' <LValueToRValue>
    |     |       `-DeclRefExpr 0x55681d7b3fb0 <col:74> '_Bool' lvalue Var 0x55681d7a9d58 'b$r_buff1_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x55681d7b40e8 <col:91, col:98> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x55681d7b40a0 <col:91, col:98> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x55681d7b4070 <col:98> 'int' 0
    |     `-ImplicitCastExpr 0x55681d7b4118 <col:102> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x55681d7b4100 <col:102> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x55681d7b40c8 <col:102> '_Bool' lvalue Var 0x55681d7aa220 'b$w_buff1_used' '_Bool'
    |-BinaryOperator 0x55681d7b4380 <line:850:3, col:66> '_Bool' '='
    | |-DeclRefExpr 0x55681d7b4198 <col:3> '_Bool' lvalue Var 0x55681d7a9b00 'b$r_buff0_thd0' '_Bool'
    | `-ImplicitCastExpr 0x55681d7b4368 <col:20, col:66> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x55681d7b4338 <col:20, col:66> 'int'
    |     |-BinaryOperator 0x55681d7b4258 <col:20, col:38> 'int' '&&'
    |     | |-ImplicitCastExpr 0x55681d7b4210 <col:20> 'int' <IntegralCast>
    |     | | `-ImplicitCastExpr 0x55681d7b41f8 <col:20> '_Bool' <LValueToRValue>
    |     | |   `-DeclRefExpr 0x55681d7b41b8 <col:20> '_Bool' lvalue Var 0x55681d7aa128 'b$w_buff0_used' '_Bool'
    |     | `-ImplicitCastExpr 0x55681d7b4240 <col:38> 'int' <IntegralCast>
    |     |   `-ImplicitCastExpr 0x55681d7b4228 <col:38> '_Bool' <LValueToRValue>
    |     |     `-DeclRefExpr 0x55681d7b41d8 <col:38> '_Bool' lvalue Var 0x55681d7a9b00 'b$r_buff0_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x55681d7b42f0 <col:55, col:62> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x55681d7b42a8 <col:55, col:62> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x55681d7b4278 <col:62> 'int' 0
    |     `-ImplicitCastExpr 0x55681d7b4320 <col:66> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x55681d7b4308 <col:66> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x55681d7b42d0 <col:66> '_Bool' lvalue Var 0x55681d7a9b00 'b$r_buff0_thd0' '_Bool'
    |-BinaryOperator 0x55681d7b4668 <line:851:3, col:102> '_Bool' '='
    | |-DeclRefExpr 0x55681d7b43a0 <col:3> '_Bool' lvalue Var 0x55681d7a9d58 'b$r_buff1_thd0' '_Bool'
    | `-ImplicitCastExpr 0x55681d7b4650 <col:20, col:102> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x55681d7b4620 <col:20, col:102> 'int'
    |     |-BinaryOperator 0x55681d7b4540 <col:20, col:74> 'int' '||'
    |     | |-BinaryOperator 0x55681d7b4460 <col:20, col:38> 'int' '&&'
    |     | | |-ImplicitCastExpr 0x55681d7b4418 <col:20> 'int' <IntegralCast>
    |     | | | `-ImplicitCastExpr 0x55681d7b4400 <col:20> '_Bool' <LValueToRValue>
    |     | | |   `-DeclRefExpr 0x55681d7b43c0 <col:20> '_Bool' lvalue Var 0x55681d7aa128 'b$w_buff0_used' '_Bool'
    |     | | `-ImplicitCastExpr 0x55681d7b4448 <col:38> 'int' <IntegralCast>
    |     | |   `-ImplicitCastExpr 0x55681d7b4430 <col:38> '_Bool' <LValueToRValue>
    |     | |     `-DeclRefExpr 0x55681d7b43e0 <col:38> '_Bool' lvalue Var 0x55681d7a9b00 'b$r_buff0_thd0' '_Bool'
    |     | `-BinaryOperator 0x55681d7b4520 <col:56, col:74> 'int' '&&'
    |     |   |-ImplicitCastExpr 0x55681d7b44d8 <col:56> 'int' <IntegralCast>
    |     |   | `-ImplicitCastExpr 0x55681d7b44c0 <col:56> '_Bool' <LValueToRValue>
    |     |   |   `-DeclRefExpr 0x55681d7b4480 <col:56> '_Bool' lvalue Var 0x55681d7aa220 'b$w_buff1_used' '_Bool'
    |     |   `-ImplicitCastExpr 0x55681d7b4508 <col:74> 'int' <IntegralCast>
    |     |     `-ImplicitCastExpr 0x55681d7b44f0 <col:74> '_Bool' <LValueToRValue>
    |     |       `-DeclRefExpr 0x55681d7b44a0 <col:74> '_Bool' lvalue Var 0x55681d7a9d58 'b$r_buff1_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x55681d7b45d8 <col:91, col:98> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x55681d7b4590 <col:91, col:98> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x55681d7b4560 <col:98> 'int' 0
    |     `-ImplicitCastExpr 0x55681d7b4608 <col:102> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x55681d7b45f0 <col:102> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x55681d7b45b8 <col:102> '_Bool' lvalue Var 0x55681d7a9d58 'b$r_buff1_thd0' '_Bool'
    |-CallExpr 0x55681d7b46c0 <line:852:3, col:25> 'void'
    | `-ImplicitCastExpr 0x55681d7b46a8 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x55681d7b4688 <col:3> 'void ()' Function 0x55681d74ff00 '__VERIFIER_atomic_end' 'void ()'
    |-CallExpr 0x55681d7b4718 <line:853:3, col:27> 'void'
    | `-ImplicitCastExpr 0x55681d7b4700 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x55681d7b46e0 <col:3> 'void ()' Function 0x55681d74fe40 '__VERIFIER_atomic_begin' 'void ()'
    |-BinaryOperator 0x55681d7b4a80 <line:854:3, col:141> '_Bool' '='
    | |-DeclRefExpr 0x55681d7b4738 <col:3> '_Bool' lvalue Var 0x55681d7aa310 'main$tmp_guard1' '_Bool'
    | `-ImplicitCastExpr 0x55681d7b4a68 <col:21, col:141> '_Bool' <IntegralToBoolean>
    |   `-UnaryOperator 0x55681d7b4a50 <col:21, col:141> 'int' prefix '!' cannot overflow
    |     `-ParenExpr 0x55681d7b4a30 <col:22, col:141> 'int'
    |       `-BinaryOperator 0x55681d7b4a10 <col:23, col:140> 'int' '&&'
    |         |-BinaryOperator 0x55681d7b4978 <col:23, col:112> 'int' '&&'
    |         | |-BinaryOperator 0x55681d7b48e0 <col:23, col:84> 'int' '&&'
    |         | | |-BinaryOperator 0x55681d7b4848 <col:23, col:56> 'int' '&&'
    |         | | | |-BinaryOperator 0x55681d7b47b0 <col:23, col:28> 'int' '=='
    |         | | | | |-ImplicitCastExpr 0x55681d7b4798 <col:23> 'int' <LValueToRValue>
    |         | | | | | `-DeclRefExpr 0x55681d7b4758 <col:23> 'int' lvalue Var 0x55681d7aa530 'y' 'int'
    |         | | | | `-IntegerLiteral 0x55681d7b4778 <col:28> 'int' 2
    |         | | | `-BinaryOperator 0x55681d7b4828 <col:33, col:56> 'int' '=='
    |         | | |   |-ImplicitCastExpr 0x55681d7b4810 <col:33> 'int' <LValueToRValue>
    |         | | |   | `-DeclRefExpr 0x55681d7b47d0 <col:33> 'int' lvalue Var 0x55681d7a9398 '__unbuffered_p0_EAX' 'int'
    |         | | |   `-IntegerLiteral 0x55681d7b47f0 <col:56> 'int' 0
    |         | | `-BinaryOperator 0x55681d7b48c0 <col:61, col:84> 'int' '=='
    |         | |   |-ImplicitCastExpr 0x55681d7b48a8 <col:61> 'int' <LValueToRValue>
    |         | |   | `-DeclRefExpr 0x55681d7b4868 <col:61> 'int' lvalue Var 0x55681d7a94b8 '__unbuffered_p2_EAX' 'int'
    |         | |   `-IntegerLiteral 0x55681d7b4888 <col:84> 'int' 0
    |         | `-BinaryOperator 0x55681d7b4958 <col:89, col:112> 'int' '=='
    |         |   |-ImplicitCastExpr 0x55681d7b4940 <col:89> 'int' <LValueToRValue>
    |         |   | `-DeclRefExpr 0x55681d7b4900 <col:89> 'int' lvalue Var 0x55681d7a95d8 '__unbuffered_p3_EAX' 'int'
    |         |   `-IntegerLiteral 0x55681d7b4920 <col:112> 'int' 1
    |         `-BinaryOperator 0x55681d7b49f0 <col:117, col:140> 'int' '=='
    |           |-ImplicitCastExpr 0x55681d7b49d8 <col:117> 'int' <LValueToRValue>
    |           | `-DeclRefExpr 0x55681d7b4998 <col:117> 'int' lvalue Var 0x55681d7a96f8 '__unbuffered_p3_EBX' 'int'
    |           `-IntegerLiteral 0x55681d7b49b8 <col:140> 'int' 0
    |-CallExpr 0x55681d7b4ad8 <line:855:3, col:25> 'void'
    | `-ImplicitCastExpr 0x55681d7b4ac0 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x55681d7b4aa0 <col:3> 'void ()' Function 0x55681d74ff00 '__VERIFIER_atomic_end' 'void ()'
    |-CallExpr 0x55681d7b4b50 <line:856:3, col:36> 'void'
    | |-ImplicitCastExpr 0x55681d7b4b38 <col:3> 'void (*)(int)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x55681d7b4af8 <col:3> 'void (int)' Function 0x55681d74fbc8 '__VERIFIER_assert' 'void (int)'
    | `-ImplicitCastExpr 0x55681d7b4bb0 <col:21> 'int' <IntegralCast>
    |   `-ImplicitCastExpr 0x55681d7b4b78 <col:21> '_Bool' <LValueToRValue>
    |     `-DeclRefExpr 0x55681d7b4b18 <col:21> '_Bool' lvalue Var 0x55681d7aa310 'main$tmp_guard1' '_Bool'
    `-ReturnStmt 0x55681d7b4be8 <line:857:3, col:10>
      `-IntegerLiteral 0x55681d7b4bc8 <col:10> 'int' 0
