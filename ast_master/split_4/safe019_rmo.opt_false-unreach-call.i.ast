TranslationUnitDecl 0x55d9bd57ee18 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x55d9bd57f6d8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x55d9bd57f3b0 '__int128'
|-TypedefDecl 0x55d9bd57f748 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x55d9bd57f3d0 'unsigned __int128'
|-TypedefDecl 0x55d9bd57fa50 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x55d9bd57f820 'struct __NSConstantString_tag'
|   `-Record 0x55d9bd57f7a0 '__NSConstantString_tag'
|-TypedefDecl 0x55d9bd57faf8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x55d9bd57fab0 'char *'
|   `-BuiltinType 0x55d9bd57eeb0 'char'
|-TypedefDecl 0x55d9bd5be650 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'struct __va_list_tag [1]'
| `-ConstantArrayType 0x55d9bd57fd90 'struct __va_list_tag [1]' 1 
|   `-RecordType 0x55d9bd57fbd0 'struct __va_list_tag'
|     `-Record 0x55d9bd57fb50 '__va_list_tag'
|-FunctionDecl 0x55d9bd5be770 <./split_4/safe019_rmo.opt_false-unreach-call.i:1:1, col:41> col:14 used __VERIFIER_nondet_bool '_Bool (void)' extern
|-FunctionDecl 0x55d9bd5be940 <line:2:1, col:34> col:13 used __VERIFIER_assume 'void (int)' extern
| `-ParmVarDecl 0x55d9bd5be870 <col:31> col:34 'int'
|-FunctionDecl 0x55d9bd5beab8 <line:3:1, col:45> col:15 used __VERIFIER_nondet_pointer 'void *(void)' extern
|-FunctionDecl 0x55d9bd5bebe0 <line:4:1, col:61> col:13 used __VERIFIER_error 'void () __attribute__((noreturn))' extern
|-FunctionDecl 0x55d9bd5bed28 <line:5:1, col:99> col:6 used __VERIFIER_assert 'void (int)'
| |-ParmVarDecl 0x55d9bd5bec98 <col:24, col:28> col:28 used expression 'int'
| `-CompoundStmt 0x55d9bd5bef58 <col:40, col:99>
|   |-IfStmt 0x55d9bd5bef28 <col:42, col:88>
|   | |-UnaryOperator 0x55d9bd5bee08 <col:46, col:47> 'int' prefix '!' cannot overflow
|   | | `-ImplicitCastExpr 0x55d9bd5bedf0 <col:47> 'int' <LValueToRValue>
|   | |   `-DeclRefExpr 0x55d9bd5bedd0 <col:47> 'int' lvalue ParmVar 0x55d9bd5bec98 'expression' 'int'
|   | `-CompoundStmt 0x55d9bd5bef10 <col:59, col:88>
|   |   `-LabelStmt 0x55d9bd5beef8 <col:61, col:85> 'ERROR'
|   |     `-CallExpr 0x55d9bd5bee88 <col:68, col:85> 'void'
|   |       `-ImplicitCastExpr 0x55d9bd5bee70 <col:68> 'void (*)() __attribute__((noreturn))' <FunctionToPointerDecay>
|   |         `-DeclRefExpr 0x55d9bd5bee20 <col:68> 'void () __attribute__((noreturn))' Function 0x55d9bd5bebe0 '__VERIFIER_error' 'void () __attribute__((noreturn))'
|   |-NullStmt 0x55d9bd5bef40 <col:89>
|   `-ReturnStmt 0x55d9bd5bef48 <col:91>
|-FunctionDecl 0x55d9bd5befa0 <line:6:1, col:37> col:13 used __VERIFIER_atomic_begin 'void ()' extern
|-FunctionDecl 0x55d9bd5bf060 <line:7:1, col:35> col:13 used __VERIFIER_atomic_end 'void ()' extern
|-FunctionDecl 0x55d9bd5bf3e0 <line:9:1, line:11:76> line:9:13 __assert_fail 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x55d9bd5bf118 <col:28, col:40> col:40 __assertion 'const char *'
| |-ParmVarDecl 0x55d9bd5bf198 <col:53, col:65> col:65 __file 'const char *'
| |-ParmVarDecl 0x55d9bd5bf218 <line:10:7, col:20> col:20 __line 'unsigned int'
| |-ParmVarDecl 0x55d9bd5bf298 <col:28, col:40> col:40 __function 'const char *'
| `-NoThrowAttr 0x55d9bd5bf4a0 <line:11:22>
|-FunctionDecl 0x55d9bd5e5520 <line:12:1, line:14:76> line:12:13 __assert_perror_fail 'void (int, const char *, unsigned int, const char *) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x55d9bd5bf510 <col:35, col:39> col:39 __errnum 'int'
| |-ParmVarDecl 0x55d9bd5bf590 <col:49, col:61> col:61 __file 'const char *'
| |-ParmVarDecl 0x55d9bd5e5350 <line:13:7, col:20> col:20 __line 'unsigned int'
| |-ParmVarDecl 0x55d9bd5e53d0 <col:28, col:40> col:40 __function 'const char *'
| `-NoThrowAttr 0x55d9bd5e55e0 <line:14:22>
|-FunctionDecl 0x55d9bd5e5890 <line:15:1, line:16:76> line:15:13 __assert 'void (const char *, const char *, int) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x55d9bd5e5650 <col:23, col:35> col:35 __assertion 'const char *'
| |-ParmVarDecl 0x55d9bd5e56d0 <col:48, col:60> col:60 __file 'const char *'
| |-ParmVarDecl 0x55d9bd5e5750 <col:68, col:72> col:72 __line 'int'
| `-NoThrowAttr 0x55d9bd5e5948 <line:16:22>
|-TypedefDecl 0x55d9bd5e59b8 <line:18:1, col:23> col:23 __u_char 'unsigned char'
| `-BuiltinType 0x55d9bd57ef70 'unsigned char'
|-TypedefDecl 0x55d9bd5e5a28 <line:19:1, col:28> col:28 __u_short 'unsigned short'
| `-BuiltinType 0x55d9bd57ef90 'unsigned short'
|-TypedefDecl 0x55d9bd5e5a98 <line:20:1, col:22> col:22 __u_int 'unsigned int'
| `-BuiltinType 0x55d9bd57efb0 'unsigned int'
|-TypedefDecl 0x55d9bd5e5b08 <line:21:1, col:27> col:27 __u_long 'unsigned long'
| `-BuiltinType 0x55d9bd57efd0 'unsigned long'
|-TypedefDecl 0x55d9bd5e5b78 <line:22:1, col:21> col:21 __int8_t 'signed char'
| `-BuiltinType 0x55d9bd57eed0 'signed char'
|-TypedefDecl 0x55d9bd5e5be8 <line:23:1, col:23> col:23 __uint8_t 'unsigned char'
| `-BuiltinType 0x55d9bd57ef70 'unsigned char'
|-TypedefDecl 0x55d9bd5e5c58 <line:24:1, col:26> col:26 __int16_t 'short'
| `-BuiltinType 0x55d9bd57eef0 'short'
|-TypedefDecl 0x55d9bd5e5cc8 <line:25:1, col:28> col:28 __uint16_t 'unsigned short'
| `-BuiltinType 0x55d9bd57ef90 'unsigned short'
|-TypedefDecl 0x55d9bd5e5d38 <line:26:1, col:20> col:20 __int32_t 'int'
| `-BuiltinType 0x55d9bd57ef10 'int'
|-TypedefDecl 0x55d9bd5e5da8 <line:27:1, col:22> col:22 __uint32_t 'unsigned int'
| `-BuiltinType 0x55d9bd57efb0 'unsigned int'
|-TypedefDecl 0x55d9bd5e5e18 <line:28:1, col:25> col:25 __int64_t 'long'
| `-BuiltinType 0x55d9bd57ef30 'long'
|-TypedefDecl 0x55d9bd5e5e88 <line:29:1, col:27> col:27 referenced __uint64_t 'unsigned long'
| `-BuiltinType 0x55d9bd57efd0 'unsigned long'
|-TypedefDecl 0x55d9bd5e5ef8 <line:30:1, col:18> col:18 referenced __quad_t 'long'
| `-BuiltinType 0x55d9bd57ef30 'long'
|-TypedefDecl 0x55d9bd5e5f68 <line:31:1, col:27> col:27 __u_quad_t 'unsigned long'
| `-BuiltinType 0x55d9bd57efd0 'unsigned long'
|-TypedefDecl 0x55d9bd5e5fd8 <line:32:1, col:27> col:27 __dev_t 'unsigned long'
| `-BuiltinType 0x55d9bd57efd0 'unsigned long'
|-TypedefDecl 0x55d9bd5e6048 <line:33:1, col:22> col:22 __uid_t 'unsigned int'
| `-BuiltinType 0x55d9bd57efb0 'unsigned int'
|-TypedefDecl 0x55d9bd5e60b8 <line:34:1, col:22> col:22 __gid_t 'unsigned int'
| `-BuiltinType 0x55d9bd57efb0 'unsigned int'
|-TypedefDecl 0x55d9bd5e6128 <line:35:1, col:27> col:27 __ino_t 'unsigned long'
| `-BuiltinType 0x55d9bd57efd0 'unsigned long'
|-TypedefDecl 0x55d9bd5e6198 <line:36:1, col:27> col:27 __ino64_t 'unsigned long'
| `-BuiltinType 0x55d9bd57efd0 'unsigned long'
|-TypedefDecl 0x55d9bd5e6208 <line:37:1, col:22> col:22 __mode_t 'unsigned int'
| `-BuiltinType 0x55d9bd57efb0 'unsigned int'
|-TypedefDecl 0x55d9bd5e6278 <line:38:1, col:27> col:27 __nlink_t 'unsigned long'
| `-BuiltinType 0x55d9bd57efd0 'unsigned long'
|-TypedefDecl 0x55d9bd5e62e8 <line:39:1, col:18> col:18 __off_t 'long'
| `-BuiltinType 0x55d9bd57ef30 'long'
|-TypedefDecl 0x55d9bd5e6378 <line:40:1, col:18> col:18 referenced __off64_t 'long'
| `-BuiltinType 0x55d9bd57ef30 'long'
|-TypedefDecl 0x55d9bd5e63e8 <line:41:1, col:13> col:13 referenced __pid_t 'int'
| `-BuiltinType 0x55d9bd57ef10 'int'
|-RecordDecl 0x55d9bd5e6440 <line:42:9, col:32> col:9 struct definition
| `-FieldDecl 0x55d9bd5e6588 <col:18, col:29> col:22 __val 'int [2]'
|-TypedefDecl 0x55d9bd5e6640 <col:1, col:34> col:34 __fsid_t 'struct __fsid_t':'__fsid_t'
| `-ElaboratedType 0x55d9bd5e65e0 'struct __fsid_t' sugar
|   `-RecordType 0x55d9bd5e64c0 '__fsid_t'
|     `-Record 0x55d9bd5e6440 ''
|-TypedefDecl 0x55d9bd5e66c8 <line:43:1, col:18> col:18 referenced __clock_t 'long'
| `-BuiltinType 0x55d9bd57ef30 'long'
|-TypedefDecl 0x55d9bd5e6738 <line:44:1, col:27> col:27 __rlim_t 'unsigned long'
| `-BuiltinType 0x55d9bd57efd0 'unsigned long'
|-TypedefDecl 0x55d9bd5e67a8 <line:45:1, col:27> col:27 __rlim64_t 'unsigned long'
| `-BuiltinType 0x55d9bd57efd0 'unsigned long'
|-TypedefDecl 0x55d9bd5e6818 <line:46:1, col:22> col:22 __id_t 'unsigned int'
| `-BuiltinType 0x55d9bd57efb0 'unsigned int'
|-TypedefDecl 0x55d9bd5e6888 <line:47:1, col:18> col:18 referenced __time_t 'long'
| `-BuiltinType 0x55d9bd57ef30 'long'
|-TypedefDecl 0x55d9bd5e68f8 <line:48:1, col:22> col:22 __useconds_t 'unsigned int'
| `-BuiltinType 0x55d9bd57efb0 'unsigned int'
|-TypedefDecl 0x55d9bd5e6968 <line:49:1, col:18> col:18 __suseconds_t 'long'
| `-BuiltinType 0x55d9bd57ef30 'long'
|-TypedefDecl 0x55d9bd5e69d8 <line:50:1, col:13> col:13 __daddr_t 'int'
| `-BuiltinType 0x55d9bd57ef10 'int'
|-TypedefDecl 0x55d9bd5e6a48 <line:51:1, col:13> col:13 __key_t 'int'
| `-BuiltinType 0x55d9bd57ef10 'int'
|-TypedefDecl 0x55d9bd5e6ab8 <line:52:1, col:13> col:13 referenced __clockid_t 'int'
| `-BuiltinType 0x55d9bd57ef10 'int'
|-TypedefDecl 0x55d9bd5e6b28 <line:53:1, col:16> col:16 referenced __timer_t 'void *'
| `-PointerType 0x55d9bd57f630 'void *'
|   `-BuiltinType 0x55d9bd57ee70 'void'
|-TypedefDecl 0x55d9bd5e6b98 <line:54:1, col:18> col:18 __blksize_t 'long'
| `-BuiltinType 0x55d9bd57ef30 'long'
|-TypedefDecl 0x55d9bd5e6c08 <line:55:1, col:18> col:18 __blkcnt_t 'long'
| `-BuiltinType 0x55d9bd57ef30 'long'
|-TypedefDecl 0x55d9bd5e6c78 <line:56:1, col:18> col:18 __blkcnt64_t 'long'
| `-BuiltinType 0x55d9bd57ef30 'long'
|-TypedefDecl 0x55d9bd5e6ce8 <line:57:1, col:27> col:27 __fsblkcnt_t 'unsigned long'
| `-BuiltinType 0x55d9bd57efd0 'unsigned long'
|-TypedefDecl 0x55d9bd5e6d58 <line:58:1, col:27> col:27 __fsblkcnt64_t 'unsigned long'
| `-BuiltinType 0x55d9bd57efd0 'unsigned long'
|-TypedefDecl 0x55d9bd5e6dc8 <line:59:1, col:27> col:27 __fsfilcnt_t 'unsigned long'
| `-BuiltinType 0x55d9bd57efd0 'unsigned long'
|-TypedefDecl 0x55d9bd5e6e38 <line:60:1, col:27> col:27 __fsfilcnt64_t 'unsigned long'
| `-BuiltinType 0x55d9bd57efd0 'unsigned long'
|-TypedefDecl 0x55d9bd5e6ea8 <line:61:1, col:18> col:18 __fsword_t 'long'
| `-BuiltinType 0x55d9bd57ef30 'long'
|-TypedefDecl 0x55d9bd5e6f18 <line:62:1, col:18> col:18 __ssize_t 'long'
| `-BuiltinType 0x55d9bd57ef30 'long'
|-TypedefDecl 0x55d9bd5e6f88 <line:63:1, col:18> col:18 referenced __syscall_slong_t 'long'
| `-BuiltinType 0x55d9bd57ef30 'long'
|-TypedefDecl 0x55d9bd5e6ff8 <line:64:1, col:27> col:27 __syscall_ulong_t 'unsigned long'
| `-BuiltinType 0x55d9bd57efd0 'unsigned long'
|-TypedefDecl 0x55d9bd5e7088 <line:65:1, col:19> col:19 __loff_t '__off64_t':'long'
| `-TypedefType 0x55d9bd5e7050 '__off64_t' sugar
|   |-Typedef 0x55d9bd5e6378 '__off64_t'
|   `-BuiltinType 0x55d9bd57ef30 'long'
|-TypedefDecl 0x55d9bd5e7180 <line:66:1, col:19> col:19 __qaddr_t '__quad_t *'
| `-PointerType 0x55d9bd5e7140 '__quad_t *'
|   `-TypedefType 0x55d9bd5e70e0 '__quad_t' sugar
|     |-Typedef 0x55d9bd5e5ef8 '__quad_t'
|     `-BuiltinType 0x55d9bd57ef30 'long'
|-TypedefDecl 0x55d9bd5e71f0 <line:67:1, col:15> col:15 __caddr_t 'char *'
| `-PointerType 0x55d9bd57fab0 'char *'
|   `-BuiltinType 0x55d9bd57eeb0 'char'
|-TypedefDecl 0x55d9bd5e7260 <line:68:1, col:18> col:18 __intptr_t 'long'
| `-BuiltinType 0x55d9bd57ef30 'long'
|-TypedefDecl 0x55d9bd5e72d0 <line:69:1, col:22> col:22 __socklen_t 'unsigned int'
| `-BuiltinType 0x55d9bd57efb0 'unsigned int'
|-FunctionDecl 0x55d9bd5e8458 <line:70:1, line:74:1> line:71:1 __bswap_32 'unsigned int (unsigned int)' static inline
| |-ParmVarDecl 0x55d9bd5e8380 <col:13, col:26> col:26 used __bsx 'unsigned int'
| `-CompoundStmt 0x55d9bd5e8768 <line:72:1, line:74:1>
|   `-ReturnStmt 0x55d9bd5e8758 <line:73:3, col:34>
|     `-CallExpr 0x55d9bd5e8718 <col:10, col:34> 'unsigned int'
|       |-ImplicitCastExpr 0x55d9bd5e8700 <col:10> 'unsigned int (*)(unsigned int)' <BuiltinFnToFnPtr>
|       | `-DeclRefExpr 0x55d9bd5e8690 <col:10> '<builtin fn type>' Function 0x55d9bd5e8500 '__builtin_bswap32' 'unsigned int (unsigned int)'
|       `-ImplicitCastExpr 0x55d9bd5e8740 <col:29> 'unsigned int' <LValueToRValue>
|         `-DeclRefExpr 0x55d9bd5e86b0 <col:29> 'unsigned int' lvalue ParmVar 0x55d9bd5e8380 '__bsx' 'unsigned int'
|-FunctionDecl 0x55d9bd5e8500 <col:10> col:10 implicit used __builtin_bswap32 'unsigned int (unsigned int)' extern
| |-ParmVarDecl 0x55d9bd5e85a0 <<invalid sloc>> <invalid sloc> 'unsigned int'
| |-NoThrowAttr 0x55d9bd5e8610 <col:10> Implicit
| `-ConstAttr 0x55d9bd5e8668 <col:10> Implicit
|-FunctionDecl 0x55d9bd5e88c0 <line:75:1, line:79:1> line:76:1 __bswap_64 '__uint64_t (__uint64_t)' static inline
| |-ParmVarDecl 0x55d9bd5e87b8 <col:13, col:24> col:24 used __bsx '__uint64_t':'unsigned long'
| `-CompoundStmt 0x55d9bd5e8bd8 <line:77:1, line:79:1>
|   `-ReturnStmt 0x55d9bd5e8bc8 <line:78:3, col:34>
|     `-CallExpr 0x55d9bd5e8b88 <col:10, col:34> 'unsigned long'
|       |-ImplicitCastExpr 0x55d9bd5e8b70 <col:10> 'unsigned long (*)(unsigned long)' <BuiltinFnToFnPtr>
|       | `-DeclRefExpr 0x55d9bd5e8af8 <col:10> '<builtin fn type>' Function 0x55d9bd5e8968 '__builtin_bswap64' 'unsigned long (unsigned long)'
|       `-ImplicitCastExpr 0x55d9bd5e8bb0 <col:29> '__uint64_t':'unsigned long' <LValueToRValue>
|         `-DeclRefExpr 0x55d9bd5e8b18 <col:29> '__uint64_t':'unsigned long' lvalue ParmVar 0x55d9bd5e87b8 '__bsx' '__uint64_t':'unsigned long'
|-FunctionDecl 0x55d9bd5e8968 <col:10> col:10 implicit used __builtin_bswap64 'unsigned long (unsigned long)' extern
| |-ParmVarDecl 0x55d9bd5e8a08 <<invalid sloc>> <invalid sloc> 'unsigned long'
| |-NoThrowAttr 0x55d9bd5e8a78 <col:10> Implicit
| `-ConstAttr 0x55d9bd5e8ad0 <col:10> Implicit
|-TypedefDecl 0x55d9bd5e8c08 <line:80:1, col:27> col:27 referenced size_t 'unsigned long'
| `-BuiltinType 0x55d9bd57efd0 'unsigned long'
|-TypedefDecl 0x55d9bd5e8c98 <line:82:1, col:18> col:18 referenced time_t '__time_t':'long'
| `-TypedefType 0x55d9bd5e8c60 '__time_t' sugar
|   |-Typedef 0x55d9bd5e6888 '__time_t'
|   `-BuiltinType 0x55d9bd57ef30 'long'
|-RecordDecl 0x55d9bd5e8cf0 <line:85:1, line:89:3> line:85:8 struct timespec definition
| |-FieldDecl 0x55d9bd5e8da8 <line:87:5, col:14> col:14 tv_sec '__time_t':'long'
| `-FieldDecl 0x55d9bd5e8e38 <line:88:5, col:23> col:23 tv_nsec '__syscall_slong_t':'long'
|-TypedefDecl 0x55d9bd5e8ec8 <line:90:1, col:17> col:17 referenced pid_t '__pid_t':'int'
| `-TypedefType 0x55d9bd5e8e90 '__pid_t' sugar
|   |-Typedef 0x55d9bd5e63e8 '__pid_t'
|   `-BuiltinType 0x55d9bd57ef10 'int'
|-RecordDecl 0x55d9bd5e8f20 <line:91:1, line:94:3> line:91:8 struct sched_param definition
| `-FieldDecl 0x55d9bd5e8fe0 <line:93:5, col:9> col:9 __sched_priority 'int'
|-RecordDecl 0x55d9bd5e9030 <line:97:1, line:100:3> line:97:8 struct __sched_param definition
| `-FieldDecl 0x55d9bd5e90f0 <line:99:5, col:9> col:9 __sched_priority 'int'
|-TypedefDecl 0x55d9bd5e9158 <line:101:1, col:27> col:27 referenced __cpu_mask 'unsigned long'
| `-BuiltinType 0x55d9bd57efd0 'unsigned long'
|-RecordDecl 0x55d9bd5e91b0 <line:102:9, line:105:1> line:102:9 struct definition
| `-FieldDecl 0x55d9bd5ea480 <line:104:3, col:53> col:14 __bits '__cpu_mask [64]'
|-TypedefDecl 0x55d9bd5ea530 <line:102:1, line:105:3> col:3 referenced cpu_set_t 'struct cpu_set_t':'cpu_set_t'
| `-ElaboratedType 0x55d9bd5ea4d0 'struct cpu_set_t' sugar
|   `-RecordType 0x55d9bd5e9230 'cpu_set_t'
|     `-Record 0x55d9bd5e91b0 ''
|-FunctionDecl 0x55d9bd5ea808 <line:107:1, line:108:42> line:107:12 __sched_cpucount 'int (size_t, const cpu_set_t *)' extern
| |-ParmVarDecl 0x55d9bd5ea5d8 <col:30, col:37> col:37 __setsize 'size_t':'unsigned long'
| |-ParmVarDecl 0x55d9bd5ea6e0 <col:48, col:65> col:65 __setp 'const cpu_set_t *'
| `-NoThrowAttr 0x55d9bd5ea8b8 <line:108:19>
|-FunctionDecl 0x55d9bd5eaa90 <line:109:1, col:92> col:19 __sched_cpualloc 'cpu_set_t *(size_t)' extern
| |-ParmVarDecl 0x55d9bd5ea920 <col:37, col:44> col:44 __count 'size_t':'unsigned long'
| `-NoThrowAttr 0x55d9bd5eab38 <col:69>
|-FunctionDecl 0x55d9bd5eacb0 <line:110:1, col:87> col:13 __sched_cpufree 'void (cpu_set_t *)' extern
| |-ParmVarDecl 0x55d9bd5eaba0 <col:30, col:41> col:41 __set 'cpu_set_t *'
| `-NoThrowAttr 0x55d9bd5ead58 <col:64>
|-FunctionDecl 0x55d9bd5eb018 <line:113:1, line:114:45> line:113:12 sched_setparam 'int (__pid_t, const struct sched_param *)' extern
| |-ParmVarDecl 0x55d9bd5eadc0 <col:28, col:36> col:36 __pid '__pid_t':'int'
| |-ParmVarDecl 0x55d9bd5eaef8 <col:43, col:69> col:69 __param 'const struct sched_param *'
| `-NoThrowAttr 0x55d9bd5eb0c8 <line:114:22>
|-FunctionDecl 0x55d9bd5eb3b0 <line:115:1, col:111> col:12 sched_getparam 'int (__pid_t, struct sched_param *)' extern
| |-ParmVarDecl 0x55d9bd5eb130 <col:28, col:36> col:36 __pid '__pid_t':'int'
| |-ParmVarDecl 0x55d9bd5eb228 <col:43, col:63> col:63 __param 'struct sched_param *'
| `-NoThrowAttr 0x55d9bd5eb460 <col:88>
|-FunctionDecl 0x55d9bd5eb718 <line:116:1, line:117:85> line:116:12 sched_setscheduler 'int (__pid_t, int, const struct sched_param *)' extern
| |-ParmVarDecl 0x55d9bd5eb4c8 <col:32, col:40> col:40 __pid '__pid_t':'int'
| |-ParmVarDecl 0x55d9bd5eb548 <col:47, col:51> col:51 __policy 'int'
| |-ParmVarDecl 0x55d9bd5eb5d8 <line:117:11, col:37> col:37 __param 'const struct sched_param *'
| `-NoThrowAttr 0x55d9bd5eb7d0 <col:62>
|-FunctionDecl 0x55d9bd5eb948 <line:118:1, col:86> col:12 sched_getscheduler 'int (__pid_t)' extern
| |-ParmVarDecl 0x55d9bd5eb838 <col:32, col:40> col:40 __pid '__pid_t':'int'
| `-NoThrowAttr 0x55d9bd5eb9f0 <col:63>
|-FunctionDecl 0x55d9bd5ebb18 <line:119:1, col:70> col:12 sched_yield 'int (void)' extern
| `-NoThrowAttr 0x55d9bd5ebbb8 <col:47>
|-FunctionDecl 0x55d9bd5ebcc0 <line:120:1, col:92> col:12 sched_get_priority_max 'int (int)' extern
| |-ParmVarDecl 0x55d9bd5ebc28 <col:36, col:40> col:40 __algorithm 'int'
| `-NoThrowAttr 0x55d9bd5ebd68 <col:69>
|-FunctionDecl 0x55d9bd5ebe70 <line:121:1, col:92> col:12 sched_get_priority_min 'int (int)' extern
| |-ParmVarDecl 0x55d9bd5ebdd8 <col:36, col:40> col:40 __algorithm 'int'
| `-NoThrowAttr 0x55d9bd5ebf18 <col:69>
|-FunctionDecl 0x55d9bd5ec1d8 <line:122:1, col:111> col:12 sched_rr_get_interval 'int (__pid_t, struct timespec *)' extern
| |-ParmVarDecl 0x55d9bd5ebf80 <col:35, col:43> col:43 __pid '__pid_t':'int'
| |-ParmVarDecl 0x55d9bd5ec0b8 <col:50, col:67> col:67 __t 'struct timespec *'
| `-NoThrowAttr 0x55d9bd5ec288 <col:88>
|-TypedefDecl 0x55d9bd5ec318 <line:126:1, col:19> col:19 referenced clock_t '__clock_t':'long'
| `-TypedefType 0x55d9bd5ec2e0 '__clock_t' sugar
|   |-Typedef 0x55d9bd5e66c8 '__clock_t'
|   `-BuiltinType 0x55d9bd57ef30 'long'
|-TypedefDecl 0x55d9bd5ec3c0 <line:129:1, col:21> col:21 referenced clockid_t '__clockid_t':'int'
| `-TypedefType 0x55d9bd5ec370 '__clockid_t' sugar
|   |-Typedef 0x55d9bd5e6ab8 '__clockid_t'
|   `-BuiltinType 0x55d9bd57ef10 'int'
|-TypedefDecl 0x55d9bd5ec458 <line:130:1, col:19> col:19 referenced timer_t '__timer_t':'void *'
| `-TypedefType 0x55d9bd5ec420 '__timer_t' sugar
|   |-Typedef 0x55d9bd5e6b28 '__timer_t'
|   `-PointerType 0x55d9bd57f630 'void *'
|     `-BuiltinType 0x55d9bd57ee70 'void'
|-RecordDecl 0x55d9bd5ec4b0 <line:132:1, line:145:1> line:132:8 struct tm definition
| |-FieldDecl 0x55d9bd5ec570 <line:134:3, col:7> col:7 tm_sec 'int'
| |-FieldDecl 0x55d9bd5ec5d8 <line:135:3, col:7> col:7 tm_min 'int'
| |-FieldDecl 0x55d9bd5ec640 <line:136:3, col:7> col:7 tm_hour 'int'
| |-FieldDecl 0x55d9bd5ec6a8 <line:137:3, col:7> col:7 tm_mday 'int'
| |-FieldDecl 0x55d9bd5ec710 <line:138:3, col:7> col:7 tm_mon 'int'
| |-FieldDecl 0x55d9bd5ec778 <line:139:3, col:7> col:7 tm_year 'int'
| |-FieldDecl 0x55d9bd5ec7e0 <line:140:3, col:7> col:7 tm_wday 'int'
| |-FieldDecl 0x55d9bd5ec848 <line:141:3, col:7> col:7 tm_yday 'int'
| |-FieldDecl 0x55d9bd5ec8b0 <line:142:3, col:7> col:7 tm_isdst 'int'
| |-FieldDecl 0x55d9bd5ec918 <line:143:3, col:12> col:12 tm_gmtoff 'long'
| `-FieldDecl 0x55d9bd5ec980 <line:144:3, col:15> col:15 tm_zone 'const char *'
|-RecordDecl 0x55d9bd5ec9d0 <line:148:1, line:152:3> line:148:8 struct itimerspec definition
| |-FieldDecl 0x55d9bd5eca98 <line:150:5, col:21> col:21 it_interval 'struct timespec':'struct timespec'
| `-FieldDecl 0x55d9bd5ecb08 <line:151:5, col:21> col:21 it_value 'struct timespec':'struct timespec'
|-RecordDecl 0x55d9bd5ecbb0 <line:153:1, col:8> col:8 struct sigevent
|-FunctionDecl 0x55d9bd5ecd80 <line:155:1, col:68> col:16 clock 'clock_t (void)' extern
| `-NoThrowAttr 0x55d9bd5ece20 <col:45>
|-FunctionDecl 0x55d9bd5ed000 <line:156:1, col:77> col:15 time 'time_t (time_t *)' extern
| |-ParmVarDecl 0x55d9bd5ecef0 <col:21, col:29> col:29 __timer 'time_t *'
| `-NoThrowAttr 0x55d9bd5ed0a8 <col:54>
|-FunctionDecl 0x55d9bd5ed2a8 <line:157:1, line:158:73> line:157:15 difftime 'double (time_t, time_t)' extern
| |-ParmVarDecl 0x55d9bd5ed110 <col:25, col:32> col:32 __time1 'time_t':'long'
| |-ParmVarDecl 0x55d9bd5ed188 <col:41, col:48> col:48 __time0 'time_t':'long'
| |-NoThrowAttr 0x55d9bd5ed358 <line:158:22>
| `-ConstAttr 0x55d9bd5edff0 <col:63>
|-FunctionDecl 0x55d9bd5ee1f0 <line:159:1, col:79> col:15 mktime 'time_t (struct tm *)' extern
| |-ParmVarDecl 0x55d9bd5ee0e8 <col:23, col:34> col:34 __tp 'struct tm *'
| `-NoThrowAttr 0x55d9bd5ee298 <col:56>
|-FunctionDecl 0x55d9bd5ee640 <line:160:1, line:162:77> line:160:15 strftime 'size_t (char *restrict, size_t, const char *restrict, const struct tm *restrict)' extern
| |-ParmVarDecl 0x55d9bd5ee308 <col:25, col:42> col:42 __s 'char *restrict'
| |-ParmVarDecl 0x55d9bd5ee380 <col:47, col:54> col:54 __maxsize 'size_t':'unsigned long'
| |-ParmVarDecl 0x55d9bd5ee400 <line:161:4, col:27> col:27 __format 'const char *restrict'
| |-ParmVarDecl 0x55d9bd5ee4f8 <line:162:4, col:32> col:32 __tp 'const struct tm *restrict'
| `-NoThrowAttr 0x55d9bd5ee700 <col:54>
|-RecordDecl 0x55d9bd5ee758 <line:164:9, line:171:1> line:164:16 struct __locale_struct definition
| |-RecordDecl 0x55d9bd5ee808 parent 0x55d9bd57ee18 <line:166:3, col:10> col:10 struct __locale_data
| |-FieldDecl 0x55d9bd5eea68 <col:3, col:37> col:25 __locales 'struct __locale_data *[13]'
| |-FieldDecl 0x55d9bd5eeb08 <line:167:3, col:29> col:29 __ctype_b 'const unsigned short *'
| |-FieldDecl 0x55d9bd5eeb70 <line:168:3, col:14> col:14 __ctype_tolower 'const int *'
| |-FieldDecl 0x55d9bd5eebd8 <line:169:3, col:14> col:14 __ctype_toupper 'const int *'
| `-FieldDecl 0x55d9bd5eecc8 <line:170:3, col:25> col:15 __names 'const char *[13]'
|-TypedefDecl 0x55d9bd5eede8 <line:164:1, line:171:4> col:4 referenced __locale_t 'struct __locale_struct *'
| `-PointerType 0x55d9bd5eed90 'struct __locale_struct *'
|   `-ElaboratedType 0x55d9bd5eed20 'struct __locale_struct' sugar
|     `-RecordType 0x55d9bd5ee7e0 'struct __locale_struct'
|       `-Record 0x55d9bd5ee758 '__locale_struct'
|-TypedefDecl 0x55d9bd5eee98 <line:172:1, col:20> col:20 locale_t '__locale_t':'struct __locale_struct *'
| `-TypedefType 0x55d9bd5eee60 '__locale_t' sugar
|   |-Typedef 0x55d9bd5eede8 '__locale_t'
|   `-PointerType 0x55d9bd5eed90 'struct __locale_struct *'
|     `-ElaboratedType 0x55d9bd5eed20 'struct __locale_struct' sugar
|       `-RecordType 0x55d9bd5ee7e0 'struct __locale_struct'
|         `-Record 0x55d9bd5ee758 '__locale_struct'
|-FunctionDecl 0x55d9bd5f02a0 <line:173:1, line:176:63> line:173:15 strftime_l 'size_t (char *restrict, size_t, const char *restrict, const struct tm *restrict, __locale_t)' extern
| |-ParmVarDecl 0x55d9bd5eef08 <col:27, col:44> col:44 __s 'char *restrict'
| |-ParmVarDecl 0x55d9bd5eef80 <col:49, col:56> col:56 __maxsize 'size_t':'unsigned long'
| |-ParmVarDecl 0x55d9bd5f0028 <line:174:6, col:29> col:29 __format 'const char *restrict'
| |-ParmVarDecl 0x55d9bd5f00b8 <line:175:6, col:34> col:34 __tp 'const struct tm *restrict'
| |-ParmVarDecl 0x55d9bd5f0130 <line:176:6, col:17> col:17 __loc '__locale_t':'struct __locale_struct *'
| `-NoThrowAttr 0x55d9bd5f0368 <col:40>
|-FunctionDecl 0x55d9bd5f0558 <line:178:1, col:89> col:19 gmtime 'struct tm *(const time_t *)' extern
| |-ParmVarDecl 0x55d9bd5f0430 <col:27, col:41> col:41 __timer 'const time_t *'
| `-NoThrowAttr 0x55d9bd5f0600 <col:66>
|-FunctionDecl 0x55d9bd5f0710 <line:179:1, col:92> col:19 localtime 'struct tm *(const time_t *)' extern
| |-ParmVarDecl 0x55d9bd5f0668 <col:30, col:44> col:44 __timer 'const time_t *'
| `-NoThrowAttr 0x55d9bd5f07b8 <col:69>
|-FunctionDecl 0x55d9bd5f09e8 <line:181:1, line:182:75> line:181:19 gmtime_r 'struct tm *(const time_t *restrict, struct tm *restrict)' extern
| |-ParmVarDecl 0x55d9bd5f0820 <col:29, col:54> col:54 __timer 'const time_t *restrict'
| |-ParmVarDecl 0x55d9bd5f08b0 <line:182:8, col:30> col:30 __tp 'struct tm *restrict'
| `-NoThrowAttr 0x55d9bd5f0a98 <col:52>
|-FunctionDecl 0x55d9bd5f0c40 <line:183:1, line:184:78> line:183:19 localtime_r 'struct tm *(const time_t *restrict, struct tm *restrict)' extern
| |-ParmVarDecl 0x55d9bd5f0b00 <col:32, col:57> col:57 __timer 'const time_t *restrict'
| |-ParmVarDecl 0x55d9bd5f0b90 <line:184:11, col:33> col:33 __tp 'struct tm *restrict'
| `-NoThrowAttr 0x55d9bd5f0cf0 <col:55>
|-FunctionDecl 0x55d9bd5f0e88 <line:186:1, col:85> col:14 asctime 'char *(const struct tm *)' extern
| |-ParmVarDecl 0x55d9bd5f0d70 <col:23, col:40> col:40 __tp 'const struct tm *'
| `-NoThrowAttr 0x55d9bd5f0f30 <col:62>
|-FunctionDecl 0x55d9bd5f1168 <line:187:1, col:83> col:14 ctime 'char *(const time_t *)' extern
| |-ParmVarDecl 0x55d9bd5f0f98 <col:21, col:35> col:35 __timer 'const time_t *'
| `-NoThrowAttr 0x55d9bd5f1210 <col:60>
|-FunctionDecl 0x55d9bd5f1438 <line:189:1, line:190:67> line:189:14 asctime_r 'char *(const struct tm *restrict, char *restrict)' extern
| |-ParmVarDecl 0x55d9bd5f1290 <col:25, col:53> col:53 __tp 'const struct tm *restrict'
| |-ParmVarDecl 0x55d9bd5f1310 <line:190:4, col:21> col:21 __buf 'char *restrict'
| `-NoThrowAttr 0x55d9bd5f14e8 <col:44>
|-FunctionDecl 0x55d9bd5f16f8 <line:191:1, line:192:72> line:191:14 ctime_r 'char *(const time_t *restrict, char *restrict)' extern
| |-ParmVarDecl 0x55d9bd5f1550 <col:23, col:48> col:48 __timer 'const time_t *restrict'
| |-ParmVarDecl 0x55d9bd5f15d0 <line:192:9, col:26> col:26 __buf 'char *restrict'
| `-NoThrowAttr 0x55d9bd5f17a8 <col:49>
|-VarDecl 0x55d9bd5f18a8 <line:193:1, col:24> col:14 __tzname 'char *[2]' extern
|-VarDecl 0x55d9bd5f1928 <line:194:1, col:12> col:12 __daylight 'int' extern
|-VarDecl 0x55d9bd5f19a8 <line:195:1, col:17> col:17 __timezone 'long' extern
|-VarDecl 0x55d9bd5f1a70 <line:196:1, col:22> col:14 tzname 'char *[2]' extern
|-FunctionDecl 0x55d9bd5f1ba0 <line:197:1, col:65> col:13 tzset 'void (void)' extern
| `-NoThrowAttr 0x55d9bd5f1c40 <col:42>
|-VarDecl 0x55d9bd5f1cb0 <line:198:1, col:12> col:12 daylight 'int' extern
|-VarDecl 0x55d9bd5f1d30 <line:199:1, col:17> col:17 timezone 'long' extern
|-FunctionDecl 0x55d9bd5f1eb8 <line:200:1, col:80> col:12 stime 'int (const time_t *)' extern
| |-ParmVarDecl 0x55d9bd5f1da8 <col:19, col:33> col:33 __when 'const time_t *'
| `-NoThrowAttr 0x55d9bd5f1f60 <col:57>
|-FunctionDecl 0x55d9bd5f20d0 <line:201:1, col:79> col:15 timegm 'time_t (struct tm *)' extern
| |-ParmVarDecl 0x55d9bd5f1fe0 <col:23, col:34> col:34 __tp 'struct tm *'
| `-NoThrowAttr 0x55d9bd5f2178 <col:56>
|-FunctionDecl 0x55d9bd5f2288 <line:202:1, col:82> col:15 timelocal 'time_t (struct tm *)' extern
| |-ParmVarDecl 0x55d9bd5f21f8 <col:26, col:37> col:37 __tp 'struct tm *'
| `-NoThrowAttr 0x55d9bd5f2330 <col:59>
|-FunctionDecl 0x55d9bd5f2438 <line:203:1, col:99> col:12 dysize 'int (int)' extern
| |-ParmVarDecl 0x55d9bd5f23a0 <col:20, col:24> col:24 __year 'int'
| |-NoThrowAttr 0x55d9bd5f24e0 <col:48>
| `-ConstAttr 0x55d9bd5f2538 <col:89>
|-FunctionDecl 0x55d9bd5f2798 <line:204:1, line:205:37> line:204:12 nanosleep 'int (const struct timespec *, struct timespec *)' extern
| |-ParmVarDecl 0x55d9bd5f25e8 <col:23, col:46> col:46 __requested_time 'const struct timespec *'
| `-ParmVarDecl 0x55d9bd5f2678 <line:205:9, col:26> col:26 __remaining 'struct timespec *'
|-FunctionDecl 0x55d9bd5f29f8 <line:206:1, col:111> col:12 clock_getres 'int (clockid_t, struct timespec *)' extern
| |-ParmVarDecl 0x55d9bd5f2888 <col:26, col:36> col:36 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x55d9bd5f2918 <col:48, col:65> col:65 __res 'struct timespec *'
| `-NoThrowAttr 0x55d9bd5f2aa8 <col:88>
|-FunctionDecl 0x55d9bd5f2c40 <line:207:1, col:111> col:12 clock_gettime 'int (clockid_t, struct timespec *)' extern
| |-ParmVarDecl 0x55d9bd5f2b10 <col:27, col:37> col:37 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x55d9bd5f2ba0 <col:49, col:66> col:66 __tp 'struct timespec *'
| `-NoThrowAttr 0x55d9bd5f2cf0 <col:88>
|-FunctionDecl 0x55d9bd5f2f08 <line:208:1, line:209:45> line:208:12 clock_settime 'int (clockid_t, const struct timespec *)' extern
| |-ParmVarDecl 0x55d9bd5f2d58 <col:27, col:37> col:37 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x55d9bd5f2de8 <col:49, col:72> col:72 __tp 'const struct timespec *'
| `-NoThrowAttr 0x55d9bd5f2fb8 <line:209:22>
|-FunctionDecl 0x55d9bd5f3358 <line:210:1, line:212:30> line:210:12 clock_nanosleep 'int (clockid_t, int, const struct timespec *, struct timespec *)' extern
| |-ParmVarDecl 0x55d9bd5f3020 <col:29, col:39> col:39 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x55d9bd5f30e0 <col:51, col:55> col:55 __flags 'int'
| |-ParmVarDecl 0x55d9bd5f3170 <line:211:8, col:31> col:31 __req 'const struct timespec *'
| `-ParmVarDecl 0x55d9bd5f3200 <line:212:8, col:25> col:25 __rem 'struct timespec *'
|-FunctionDecl 0x55d9bd5f3658 <line:213:1, col:108> col:12 clock_getcpuclockid 'int (pid_t, clockid_t *)' extern
| |-ParmVarDecl 0x55d9bd5f3458 <col:33, col:39> col:39 __pid 'pid_t':'int'
| |-ParmVarDecl 0x55d9bd5f3530 <col:46, col:57> col:57 __clock_id 'clockid_t *'
| `-NoThrowAttr 0x55d9bd5f3708 <col:85>
|-FunctionDecl 0x55d9bd5f3af8 <line:214:1, line:216:75> line:214:12 timer_create 'int (clockid_t, struct sigevent *restrict, timer_t *restrict)' extern
| |-ParmVarDecl 0x55d9bd5f3770 <col:26, col:36> col:36 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x55d9bd5f38a8 <line:215:5, col:33> col:33 __evp 'struct sigevent *restrict'
| |-ParmVarDecl 0x55d9bd5f39b0 <line:216:5, col:25> col:25 __timerid 'timer_t *restrict'
| `-NoThrowAttr 0x55d9bd5f3bb0 <col:52>
|-FunctionDecl 0x55d9bd5f3d28 <line:217:1, col:84> col:12 timer_delete 'int (timer_t)' extern
| |-ParmVarDecl 0x55d9bd5f3c18 <col:26, col:34> col:34 __timerid 'timer_t':'void *'
| `-NoThrowAttr 0x55d9bd5f3dd0 <col:61>
|-FunctionDecl 0x55d9bd5f4248 <line:218:1, line:220:85> line:218:12 timer_settime 'int (timer_t, int, const struct itimerspec *restrict, struct itimerspec *restrict)' extern
| |-ParmVarDecl 0x55d9bd5f3e38 <col:27, col:35> col:35 __timerid 'timer_t':'void *'
| |-ParmVarDecl 0x55d9bd5f3eb8 <col:46, col:50> col:50 __flags 'int'
| |-ParmVarDecl 0x55d9bd5f3fe8 <line:219:6, col:42> col:42 __value 'const struct itimerspec *restrict'
| |-ParmVarDecl 0x55d9bd5f40f0 <line:220:6, col:36> col:36 __ovalue 'struct itimerspec *restrict'
| `-NoThrowAttr 0x55d9bd5f4308 <col:62>
|-FunctionDecl 0x55d9bd5f4528 <line:221:1, line:222:45> line:221:12 timer_gettime 'int (timer_t, struct itimerspec *)' extern
| |-ParmVarDecl 0x55d9bd5f4370 <col:27, col:35> col:35 __timerid 'timer_t':'void *'
| |-ParmVarDecl 0x55d9bd5f4400 <col:46, col:65> col:65 __value 'struct itimerspec *'
| `-NoThrowAttr 0x55d9bd5f45d8 <line:222:22>
|-FunctionDecl 0x55d9bd5f46d8 <line:223:1, col:88> col:12 timer_getoverrun 'int (timer_t)' extern
| |-ParmVarDecl 0x55d9bd5f4640 <col:30, col:38> col:38 __timerid 'timer_t':'void *'
| `-NoThrowAttr 0x55d9bd5f4780 <col:65>
|-TypedefDecl 0x55d9bd5f47f0 <line:225:1, col:27> col:27 referenced pthread_t 'unsigned long'
| `-BuiltinType 0x55d9bd57efd0 'unsigned long'
|-RecordDecl 0x55d9bd5f4848 <line:226:1, line:230:1> line:226:7 union pthread_attr_t definition
| |-FieldDecl 0x55d9bd5f4990 <line:228:3, col:17> col:8 __size 'char [56]'
| `-FieldDecl 0x55d9bd5f49f8 <line:229:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x55d9bd5f4aa8 <line:231:1, col:30> col:30 referenced pthread_attr_t 'union pthread_attr_t':'union pthread_attr_t'
| `-ElaboratedType 0x55d9bd5f4a50 'union pthread_attr_t' sugar
|   `-RecordType 0x55d9bd5f48d0 'union pthread_attr_t'
|     `-Record 0x55d9bd5f4848 'pthread_attr_t'
|-RecordDecl 0x55d9bd5f4b00 <line:232:9, line:236:1> line:232:16 struct __pthread_internal_list definition
| |-FieldDecl 0x55d9bd5f4c78 <line:234:3, col:35> col:35 __prev 'struct __pthread_internal_list *'
| `-FieldDecl 0x55d9bd5f4cf0 <line:235:3, col:35> col:35 __next 'struct __pthread_internal_list *'
|-TypedefDecl 0x55d9bd5f4da0 <line:232:1, line:236:3> col:3 referenced __pthread_list_t 'struct __pthread_internal_list':'struct __pthread_internal_list'
| `-ElaboratedType 0x55d9bd5f4d40 'struct __pthread_internal_list' sugar
|   `-RecordType 0x55d9bd5f4b80 'struct __pthread_internal_list'
|     `-Record 0x55d9bd5f4b00 '__pthread_internal_list'
|-RecordDecl 0x55d9bd5f4e10 <line:237:9, line:251:1> line:237:9 union definition
| |-RecordDecl 0x55d9bd5f4eb8 parent 0x55d9bd57ee18 <line:239:3, line:248:3> line:239:10 struct __pthread_mutex_s definition
| | |-FieldDecl 0x55d9bd5f4f90 <line:241:5, col:9> col:9 __lock 'int'
| | |-FieldDecl 0x55d9bd5f4ff8 <line:242:5, col:18> col:18 __count 'unsigned int'
| | |-FieldDecl 0x55d9bd5f5060 <line:243:5, col:9> col:9 __owner 'int'
| | |-FieldDecl 0x55d9bd5f9110 <line:244:5, col:18> col:18 __nusers 'unsigned int'
| | |-FieldDecl 0x55d9bd5f9178 <line:245:5, col:9> col:9 __kind 'int'
| | |-FieldDecl 0x55d9bd5f91e0 <line:246:5, col:9> col:9 __spins 'int'
| | `-FieldDecl 0x55d9bd5f9268 <line:247:5, col:22> col:22 __list '__pthread_list_t':'struct __pthread_internal_list'
| |-FieldDecl 0x55d9bd5f9320 <line:239:3, line:248:5> col:5 __data 'struct __pthread_mutex_s':'struct __pthread_mutex_s'
| |-FieldDecl 0x55d9bd5f9410 <line:249:3, col:17> col:8 __size 'char [40]'
| `-FieldDecl 0x55d9bd5f9478 <line:250:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x55d9bd5f9600 <line:237:1, line:251:3> col:3 referenced pthread_mutex_t 'union pthread_mutex_t':'pthread_mutex_t'
| `-ElaboratedType 0x55d9bd5f95a0 'union pthread_mutex_t' sugar
|   `-RecordType 0x55d9bd5f4e90 'pthread_mutex_t'
|     `-Record 0x55d9bd5f4e10 ''
|-RecordDecl 0x55d9bd5f9670 <line:252:9, line:256:1> line:252:9 union definition
| |-FieldDecl 0x55d9bd5f97b0 <line:254:3, col:16> col:8 __size 'char [4]'
| `-FieldDecl 0x55d9bd5f9818 <line:255:3, col:7> col:7 __align 'int'
|-TypedefDecl 0x55d9bd5f98d0 <line:252:1, line:256:3> col:3 referenced pthread_mutexattr_t 'union pthread_mutexattr_t':'pthread_mutexattr_t'
| `-ElaboratedType 0x55d9bd5f9870 'union pthread_mutexattr_t' sugar
|   `-RecordType 0x55d9bd5f96f0 'pthread_mutexattr_t'
|     `-Record 0x55d9bd5f9670 ''
|-RecordDecl 0x55d9bd5f9940 <line:257:9, line:272:1> line:257:9 union definition
| |-RecordDecl 0x55d9bd5f99e8 <line:259:3, line:269:3> line:259:3 struct definition
| | |-FieldDecl 0x55d9bd5f9ab0 <line:261:5, col:9> col:9 __lock 'int'
| | |-FieldDecl 0x55d9bd5f9b18 <line:262:5, col:18> col:18 __futex 'unsigned int'
| | |-FieldDecl 0x55d9bd5f9b80 <line:263:19, col:42> col:42 __total_seq 'unsigned long long'
| | |-FieldDecl 0x55d9bd5f9be8 <line:264:19, col:42> col:42 __wakeup_seq 'unsigned long long'
| | |-FieldDecl 0x55d9bd5f9c50 <line:265:19, col:42> col:42 __woken_seq 'unsigned long long'
| | |-FieldDecl 0x55d9bd5f9cb8 <line:266:5, col:11> col:11 __mutex 'void *'
| | |-FieldDecl 0x55d9bd5f9d20 <line:267:5, col:18> col:18 __nwaiters 'unsigned int'
| | `-FieldDecl 0x55d9bd5f9d88 <line:268:5, col:18> col:18 __broadcast_seq 'unsigned int'
| |-FieldDecl 0x55d9bd5f9e40 <line:259:3, line:269:5> col:5 __data 'struct (anonymous struct at ./split_4/safe019_rmo.opt_false-unreach-call.i:259:3)':'struct pthread_cond_t::(anonymous at ./split_4/safe019_rmo.opt_false-unreach-call.i:259:3)'
| |-FieldDecl 0x55d9bd5f9f30 <line:270:3, col:17> col:8 __size 'char [48]'
| `-FieldDecl 0x55d9bd5f9f98 <line:271:17, col:31> col:31 __align 'long long'
|-TypedefDecl 0x55d9bd5fb130 <line:257:1, line:272:3> col:3 referenced pthread_cond_t 'union pthread_cond_t':'pthread_cond_t'
| `-ElaboratedType 0x55d9bd5fa070 'union pthread_cond_t' sugar
|   `-RecordType 0x55d9bd5f99c0 'pthread_cond_t'
|     `-Record 0x55d9bd5f9940 ''
|-RecordDecl 0x55d9bd5fb1a0 <line:273:9, line:277:1> line:273:9 union definition
| |-FieldDecl 0x55d9bd5fb2a0 <line:275:3, col:16> col:8 __size 'char [4]'
| `-FieldDecl 0x55d9bd5fb308 <line:276:3, col:7> col:7 __align 'int'
|-TypedefDecl 0x55d9bd5fb3c0 <line:273:1, line:277:3> col:3 referenced pthread_condattr_t 'union pthread_condattr_t':'pthread_condattr_t'
| `-ElaboratedType 0x55d9bd5fb360 'union pthread_condattr_t' sugar
|   `-RecordType 0x55d9bd5fb220 'pthread_condattr_t'
|     `-Record 0x55d9bd5fb1a0 ''
|-TypedefDecl 0x55d9bd5fb448 <line:278:1, col:22> col:22 referenced pthread_key_t 'unsigned int'
| `-BuiltinType 0x55d9bd57efb0 'unsigned int'
|-TypedefDecl 0x55d9bd5fb4b8 <line:279:1, col:13> col:13 referenced pthread_once_t 'int'
| `-BuiltinType 0x55d9bd57ef10 'int'
|-RecordDecl 0x55d9bd5fb510 <line:280:9, line:298:1> line:280:9 union definition
| |-RecordDecl 0x55d9bd5fb5b8 <line:282:3, line:295:3> line:282:3 struct definition
| | |-FieldDecl 0x55d9bd5fb680 <line:284:5, col:9> col:9 __lock 'int'
| | |-FieldDecl 0x55d9bd5fb6e8 <line:285:5, col:18> col:18 __nr_readers 'unsigned int'
| | |-FieldDecl 0x55d9bd5fb750 <line:286:5, col:18> col:18 __readers_wakeup 'unsigned int'
| | |-FieldDecl 0x55d9bd5fb7b8 <line:287:5, col:18> col:18 __writer_wakeup 'unsigned int'
| | |-FieldDecl 0x55d9bd5fb820 <line:288:5, col:18> col:18 __nr_readers_queued 'unsigned int'
| | |-FieldDecl 0x55d9bd5fb888 <line:289:5, col:18> col:18 __nr_writers_queued 'unsigned int'
| | |-FieldDecl 0x55d9bd5fb8f0 <line:290:5, col:9> col:9 __writer 'int'
| | |-FieldDecl 0x55d9bd5fb958 <line:291:5, col:9> col:9 __shared 'int'
| | |-FieldDecl 0x55d9bd5fb9c0 <line:292:5, col:23> col:23 __pad1 'unsigned long'
| | |-FieldDecl 0x55d9bd5fba28 <line:293:5, col:23> col:23 __pad2 'unsigned long'
| | `-FieldDecl 0x55d9bd5fba90 <line:294:5, col:18> col:18 __flags 'unsigned int'
| |-FieldDecl 0x55d9bd5fbb40 <line:282:3, line:295:5> col:5 __data 'struct (anonymous struct at ./split_4/safe019_rmo.opt_false-unreach-call.i:282:3)':'struct pthread_rwlock_t::(anonymous at ./split_4/safe019_rmo.opt_false-unreach-call.i:282:3)'
| |-FieldDecl 0x55d9bd5fbbe8 <line:296:3, col:17> col:8 __size 'char [56]'
| `-FieldDecl 0x55d9bd5fbc50 <line:297:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x55d9bd5fbda0 <line:280:1, line:298:3> col:3 referenced pthread_rwlock_t 'union pthread_rwlock_t':'pthread_rwlock_t'
| `-ElaboratedType 0x55d9bd5fbd40 'union pthread_rwlock_t' sugar
|   `-RecordType 0x55d9bd5fb590 'pthread_rwlock_t'
|     `-Record 0x55d9bd5fb510 ''
|-RecordDecl 0x55d9bd5fbe10 <line:299:9, line:303:1> line:299:9 union definition
| |-FieldDecl 0x55d9bd5fbf50 <line:301:3, col:16> col:8 __size 'char [8]'
| `-FieldDecl 0x55d9bd5fbfb8 <line:302:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x55d9bd5fc070 <line:299:1, line:303:3> col:3 referenced pthread_rwlockattr_t 'union pthread_rwlockattr_t':'pthread_rwlockattr_t'
| `-ElaboratedType 0x55d9bd5fc010 'union pthread_rwlockattr_t' sugar
|   `-RecordType 0x55d9bd5fbe90 'pthread_rwlockattr_t'
|     `-Record 0x55d9bd5fbe10 ''
|-TypedefDecl 0x55d9bd5fd140 <line:304:1, col:22> col:22 referenced pthread_spinlock_t 'volatile int'
| `-QualType 0x55d9bd57ef14 'volatile int' volatile
|   `-BuiltinType 0x55d9bd57ef10 'int'
|-RecordDecl 0x55d9bd5fd198 <line:305:9, line:309:1> line:305:9 union definition
| |-FieldDecl 0x55d9bd5fd2e0 <line:307:3, col:17> col:8 __size 'char [32]'
| `-FieldDecl 0x55d9bd5fd348 <line:308:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x55d9bd5fd400 <line:305:1, line:309:3> col:3 referenced pthread_barrier_t 'union pthread_barrier_t':'pthread_barrier_t'
| `-ElaboratedType 0x55d9bd5fd3a0 'union pthread_barrier_t' sugar
|   `-RecordType 0x55d9bd5fd220 'pthread_barrier_t'
|     `-Record 0x55d9bd5fd198 ''
|-RecordDecl 0x55d9bd5fd470 <line:310:9, line:314:1> line:310:9 union definition
| |-FieldDecl 0x55d9bd5fd570 <line:312:3, col:16> col:8 __size 'char [4]'
| `-FieldDecl 0x55d9bd5fd5d8 <line:313:3, col:7> col:7 __align 'int'
|-TypedefDecl 0x55d9bd5fd690 <line:310:1, line:314:3> col:3 referenced pthread_barrierattr_t 'union pthread_barrierattr_t':'pthread_barrierattr_t'
| `-ElaboratedType 0x55d9bd5fd630 'union pthread_barrierattr_t' sugar
|   `-RecordType 0x55d9bd5fd4f0 'pthread_barrierattr_t'
|     `-Record 0x55d9bd5fd470 ''
|-TypedefDecl 0x55d9bd5fd7a8 <line:315:1, col:29> col:18 referenced __jmp_buf 'long [8]'
| `-ConstantArrayType 0x55d9bd5fd740 'long [8]' 8 
|   `-BuiltinType 0x55d9bd57ef30 'long'
|-EnumDecl 0x55d9bd5fd800 <line:316:1, line:320:1> line:316:1
| |-EnumConstantDecl 0x55d9bd5fd8c8 <line:318:3> col:3 PTHREAD_CREATE_JOINABLE 'int'
| `-EnumConstantDecl 0x55d9bd5fd918 <line:319:3> col:3 PTHREAD_CREATE_DETACHED 'int'
|-EnumDecl 0x55d9bd5fd968 <line:321:1, line:332:1> line:321:1
| |-EnumConstantDecl 0x55d9bd5fda38 <line:323:3> col:3 referenced PTHREAD_MUTEX_TIMED_NP 'int'
| |-EnumConstantDecl 0x55d9bd5fda88 <line:324:3> col:3 referenced PTHREAD_MUTEX_RECURSIVE_NP 'int'
| |-EnumConstantDecl 0x55d9bd5fdad8 <line:325:3> col:3 referenced PTHREAD_MUTEX_ERRORCHECK_NP 'int'
| |-EnumConstantDecl 0x55d9bd5fdb28 <line:326:3> col:3 PTHREAD_MUTEX_ADAPTIVE_NP 'int'
| |-EnumConstantDecl 0x55d9bd5fdbb0 <line:328:3, col:26> col:3 referenced PTHREAD_MUTEX_NORMAL 'int'
| | `-ConstantExpr 0x55d9bd5fdb98 <col:26> 'int'
| |   `-DeclRefExpr 0x55d9bd5fdb78 <col:26> 'int' EnumConstant 0x55d9bd5fda38 'PTHREAD_MUTEX_TIMED_NP' 'int'
| |-EnumConstantDecl 0x55d9bd5fdc38 <line:329:3, col:29> col:3 PTHREAD_MUTEX_RECURSIVE 'int'
| | `-ConstantExpr 0x55d9bd5fdc20 <col:29> 'int'
| |   `-DeclRefExpr 0x55d9bd5fdc00 <col:29> 'int' EnumConstant 0x55d9bd5fda88 'PTHREAD_MUTEX_RECURSIVE_NP' 'int'
| |-EnumConstantDecl 0x55d9bd5fdcc0 <line:330:3, col:30> col:3 PTHREAD_MUTEX_ERRORCHECK 'int'
| | `-ConstantExpr 0x55d9bd5fdca8 <col:30> 'int'
| |   `-DeclRefExpr 0x55d9bd5fdc88 <col:30> 'int' EnumConstant 0x55d9bd5fdad8 'PTHREAD_MUTEX_ERRORCHECK_NP' 'int'
| `-EnumConstantDecl 0x55d9bd5fdd48 <line:331:3, col:27> col:3 PTHREAD_MUTEX_DEFAULT 'int'
|   `-ConstantExpr 0x55d9bd5fdd30 <col:27> 'int'
|     `-DeclRefExpr 0x55d9bd5fdd10 <col:27> 'int' EnumConstant 0x55d9bd5fdbb0 'PTHREAD_MUTEX_NORMAL' 'int'
|-EnumDecl 0x55d9bd5fdd98 <line:333:1, line:339:1> line:333:1
| |-EnumConstantDecl 0x55d9bd5fde68 <line:335:3> col:3 referenced PTHREAD_MUTEX_STALLED 'int'
| |-EnumConstantDecl 0x55d9bd5fdef0 <line:336:3, col:30> col:3 PTHREAD_MUTEX_STALLED_NP 'int'
| | `-ConstantExpr 0x55d9bd5fded8 <col:30> 'int'
| |   `-DeclRefExpr 0x55d9bd5fdeb8 <col:30> 'int' EnumConstant 0x55d9bd5fde68 'PTHREAD_MUTEX_STALLED' 'int'
| |-EnumConstantDecl 0x55d9bd5fdf40 <line:337:3> col:3 referenced PTHREAD_MUTEX_ROBUST 'int'
| `-EnumConstantDecl 0x55d9bd5fdfc8 <line:338:3, col:29> col:3 PTHREAD_MUTEX_ROBUST_NP 'int'
|   `-ConstantExpr 0x55d9bd5fdfb0 <col:29> 'int'
|     `-DeclRefExpr 0x55d9bd5fdf90 <col:29> 'int' EnumConstant 0x55d9bd5fdf40 'PTHREAD_MUTEX_ROBUST' 'int'
|-EnumDecl 0x55d9bd5fe018 <line:340:1, line:345:1> line:340:1
| |-EnumConstantDecl 0x55d9bd5fe0e8 <line:342:3> col:3 PTHREAD_PRIO_NONE 'int'
| |-EnumConstantDecl 0x55d9bd5fe150 <line:343:3> col:3 PTHREAD_PRIO_INHERIT 'int'
| `-EnumConstantDecl 0x55d9bd5fe1a0 <line:344:3> col:3 PTHREAD_PRIO_PROTECT 'int'
|-EnumDecl 0x55d9bd5fe1f0 <line:346:1, line:352:1> line:346:1
| |-EnumConstantDecl 0x55d9bd5fe2b8 <line:348:3> col:3 referenced PTHREAD_RWLOCK_PREFER_READER_NP 'int'
| |-EnumConstantDecl 0x55d9bd5fe308 <line:349:3> col:3 PTHREAD_RWLOCK_PREFER_WRITER_NP 'int'
| |-EnumConstantDecl 0x55d9bd5fe358 <line:350:3> col:3 PTHREAD_RWLOCK_PREFER_WRITER_NONRECURSIVE_NP 'int'
| `-EnumConstantDecl 0x55d9bd5fe3e0 <line:351:3, col:31> col:3 PTHREAD_RWLOCK_DEFAULT_NP 'int'
|   `-ConstantExpr 0x55d9bd5fe3c8 <col:31> 'int'
|     `-DeclRefExpr 0x55d9bd5fe3a8 <col:31> 'int' EnumConstant 0x55d9bd5fe2b8 'PTHREAD_RWLOCK_PREFER_READER_NP' 'int'
|-EnumDecl 0x55d9bd5fe430 <line:353:1, line:357:1> line:353:1
| |-EnumConstantDecl 0x55d9bd5fe4f8 <line:355:3> col:3 PTHREAD_INHERIT_SCHED 'int'
| `-EnumConstantDecl 0x55d9bd5fe548 <line:356:3> col:3 PTHREAD_EXPLICIT_SCHED 'int'
|-EnumDecl 0x55d9bd5fe598 <line:358:1, line:362:1> line:358:1
| |-EnumConstantDecl 0x55d9bd5fe668 <line:360:3> col:3 PTHREAD_SCOPE_SYSTEM 'int'
| `-EnumConstantDecl 0x55d9bd5fe6b8 <line:361:3> col:3 PTHREAD_SCOPE_PROCESS 'int'
|-EnumDecl 0x55d9bd5fe708 <line:363:1, line:367:1> line:363:1
| |-EnumConstantDecl 0x55d9bd5fe7d8 <line:365:3> col:3 PTHREAD_PROCESS_PRIVATE 'int'
| `-EnumConstantDecl 0x55d9bd5fe828 <line:366:3> col:3 PTHREAD_PROCESS_SHARED 'int'
|-RecordDecl 0x55d9bd5fe878 <line:368:1, line:374:1> line:368:8 struct _pthread_cleanup_buffer definition
| |-FieldDecl 0x55d9bd5feab8 <line:370:3, col:28> col:10 __routine 'void (*)(void *)'
| |-FieldDecl 0x55d9bd5feb20 <line:371:3, col:9> col:9 __arg 'void *'
| |-FieldDecl 0x55d9bd5feb88 <line:372:3, col:7> col:7 __canceltype 'int'
| `-FieldDecl 0x55d9bd5feca8 <line:373:3, col:35> col:35 __prev 'struct _pthread_cleanup_buffer *'
|-EnumDecl 0x55d9bd5fecf8 <line:375:1, line:379:1> line:375:1
| |-EnumConstantDecl 0x55d9bd5fedc8 <line:377:3> col:3 PTHREAD_CANCEL_ENABLE 'int'
| `-EnumConstantDecl 0x55d9bd5fee18 <line:378:3> col:3 PTHREAD_CANCEL_DISABLE 'int'
|-EnumDecl 0x55d9bd5fee68 <line:380:1, line:384:1> line:380:1
| |-EnumConstantDecl 0x55d9bd5fef38 <line:382:3> col:3 PTHREAD_CANCEL_DEFERRED 'int'
| `-EnumConstantDecl 0x55d9bd5fef88 <line:383:3> col:3 PTHREAD_CANCEL_ASYNCHRONOUS 'int'
|-FunctionDecl 0x55d9bd5ff5b8 <line:386:1, line:389:96> line:386:12 used pthread_create 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' extern
| |-ParmVarDecl 0x55d9bd5ff080 <col:28, col:50> col:50 __newthread 'pthread_t *restrict'
| |-ParmVarDecl 0x55d9bd5ff1a0 <line:387:7, col:40> col:40 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x55d9bd5ff3a0 <line:388:7, col:39> col:15 __start_routine 'void *(*)(void *)'
| |-ParmVarDecl 0x55d9bd5ff420 <line:389:7, col:24> col:24 __arg 'void *restrict'
| |-NoThrowAttr 0x55d9bd5ff678 <col:47>
| |-NonNullAttr 0x55d9bd5ff6d0 <col:77, col:94> 1 3
| `-CallbackAttr 0x55d9bd5ff708 <line:386:12> Implicit 2 3
|-FunctionDecl 0x55d9bd5ff830 <line:390:1, col:72> col:13 pthread_exit 'void (void *) __attribute__((noreturn))' extern
| `-ParmVarDecl 0x55d9bd5ff760 <col:27, col:33> col:33 __retval 'void *'
|-FunctionDecl 0x55d9bd5ffa88 <line:391:1, col:64> col:12 pthread_join 'int (pthread_t, void **)' extern
| |-ParmVarDecl 0x55d9bd5ff8e8 <col:26, col:36> col:36 __th 'pthread_t':'unsigned long'
| `-ParmVarDecl 0x55d9bd5ff968 <col:42, col:49> col:49 __thread_return 'void **'
|-FunctionDecl 0x55d9bd5ffc58 <line:392:1, col:83> col:12 pthread_detach 'int (pthread_t)' extern
| |-ParmVarDecl 0x55d9bd5ffb48 <col:28, col:38> col:38 __th 'pthread_t':'unsigned long'
| `-NoThrowAttr 0x55d9bd5ffd00 <col:60>
|-FunctionDecl 0x55d9bd5ffe50 <line:393:1, col:105> col:18 pthread_self 'pthread_t (void)' extern
| |-NoThrowAttr 0x55d9bd5ffef0 <col:54>
| `-ConstAttr 0x55d9bd5fff48 <col:95>
|-FunctionDecl 0x55d9bd601990 <line:394:1, line:395:70> line:394:12 pthread_equal 'int (pthread_t, pthread_t)' extern
| |-ParmVarDecl 0x55d9bd5fff80 <col:27, col:37> col:37 __thread1 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x55d9bd5ffff8 <col:48, col:58> col:58 __thread2 'pthread_t':'unsigned long'
| |-NoThrowAttr 0x55d9bd601a40 <line:395:19>
| `-ConstAttr 0x55d9bd601a98 <col:60>
|-FunctionDecl 0x55d9bd601c68 <line:396:1, col:128> col:12 pthread_attr_init 'int (pthread_attr_t *)' extern
| |-ParmVarDecl 0x55d9bd601b30 <col:31, col:47> col:47 __attr 'pthread_attr_t *'
| |-NoThrowAttr 0x55d9bd601d10 <col:71>
| `-NonNullAttr 0x55d9bd601d68 <col:112, col:126> 1
|-FunctionDecl 0x55d9bd601e70 <line:397:1, line:398:79> line:397:12 pthread_attr_destroy 'int (pthread_attr_t *)' extern
| |-ParmVarDecl 0x55d9bd601db8 <col:34, col:50> col:50 __attr 'pthread_attr_t *'
| |-NoThrowAttr 0x55d9bd601f18 <line:398:22>
| `-NonNullAttr 0x55d9bd601f70 <col:63, col:77> 1
|-FunctionDecl 0x55d9bd602198 <line:399:1, line:401:82> line:399:12 pthread_attr_getdetachstate 'int (const pthread_attr_t *, int *)' extern
| |-ParmVarDecl 0x55d9bd601fb8 <col:41, col:63> col:63 __attr 'const pthread_attr_t *'
| |-ParmVarDecl 0x55d9bd602038 <line:400:6, col:11> col:11 __detachstate 'int *'
| |-NoThrowAttr 0x55d9bd602248 <line:401:22>
| `-NonNullAttr 0x55d9bd6022a0 <col:63, col:80> 1 2
|-FunctionDecl 0x55d9bd6024a8 <line:402:1, line:404:79> line:402:12 pthread_attr_setdetachstate 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x55d9bd6022e8 <col:41, col:57> col:57 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x55d9bd602368 <line:403:6, col:10> col:10 __detachstate 'int'
| |-NoThrowAttr 0x55d9bd602558 <line:404:22>
| `-NonNullAttr 0x55d9bd6025b0 <col:63, col:77> 1
|-FunctionDecl 0x55d9bd602808 <line:405:1, line:407:82> line:405:12 pthread_attr_getguardsize 'int (const pthread_attr_t *, size_t *)' extern
| |-ParmVarDecl 0x55d9bd6025f8 <col:39, col:61> col:61 __attr 'const pthread_attr_t *'
| |-ParmVarDecl 0x55d9bd6026a0 <line:406:11, col:19> col:19 __guardsize 'size_t *'
| |-NoThrowAttr 0x55d9bd6028b8 <line:407:22>
| `-NonNullAttr 0x55d9bd602910 <col:63, col:80> 1 2
|-FunctionDecl 0x55d9bd603b68 <line:408:1, line:410:79> line:408:12 pthread_attr_setguardsize 'int (pthread_attr_t *, size_t)' extern
| |-ParmVarDecl 0x55d9bd6039b0 <col:39, col:55> col:55 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x55d9bd603a28 <line:409:11, col:18> col:18 __guardsize 'size_t':'unsigned long'
| |-NoThrowAttr 0x55d9bd603c18 <line:410:22>
| `-NonNullAttr 0x55d9bd603c70 <col:63, col:77> 1
|-FunctionDecl 0x55d9bd603ea8 <line:411:1, line:413:82> line:411:12 pthread_attr_getschedparam 'int (const pthread_attr_t *restrict, struct sched_param *restrict)' extern
| |-ParmVarDecl 0x55d9bd603cb8 <col:40, col:73> col:73 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x55d9bd603d48 <line:412:12, col:43> col:43 __param 'struct sched_param *restrict'
| |-NoThrowAttr 0x55d9bd603f58 <line:413:22>
| `-NonNullAttr 0x55d9bd603fb0 <col:63, col:80> 1 2
|-FunctionDecl 0x55d9bd6041e8 <line:414:1, line:416:97> line:414:12 pthread_attr_setschedparam 'int (pthread_attr_t *restrict, const struct sched_param *restrict)' extern
| |-ParmVarDecl 0x55d9bd603ff8 <col:40, col:67> col:67 __attr 'pthread_attr_t *restrict'
| |-ParmVarDecl 0x55d9bd604088 <line:415:12, line:416:12> col:12 __param 'const struct sched_param *restrict'
| |-NoThrowAttr 0x55d9bd604298 <col:37>
| `-NonNullAttr 0x55d9bd6042f0 <col:78, col:95> 1 2
|-FunctionDecl 0x55d9bd6044d8 <line:417:1, line:419:82> line:417:12 pthread_attr_getschedpolicy 'int (const pthread_attr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x55d9bd604338 <col:41, line:418:6> col:6 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x55d9bd6043b8 <col:14, col:30> col:30 __policy 'int *restrict'
| |-NoThrowAttr 0x55d9bd604588 <line:419:22>
| `-NonNullAttr 0x55d9bd6045e0 <col:63, col:80> 1 2
|-FunctionDecl 0x55d9bd604768 <line:420:1, line:421:79> line:420:12 pthread_attr_setschedpolicy 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x55d9bd604628 <col:41, col:57> col:57 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x55d9bd6046a8 <col:65, col:69> col:69 __policy 'int'
| |-NoThrowAttr 0x55d9bd604818 <line:421:22>
| `-NonNullAttr 0x55d9bd604870 <col:63, col:77> 1
|-FunctionDecl 0x55d9bd604a38 <line:422:1, line:424:82> line:422:12 pthread_attr_getinheritsched 'int (const pthread_attr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x55d9bd6048b8 <col:42, line:423:7> col:7 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x55d9bd604938 <col:15, col:31> col:31 __inherit 'int *restrict'
| |-NoThrowAttr 0x55d9bd604ae8 <line:424:22>
| `-NonNullAttr 0x55d9bd604b40 <col:63, col:80> 1 2
|-FunctionDecl 0x55d9bd604cc8 <line:425:1, line:427:79> line:425:12 pthread_attr_setinheritsched 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x55d9bd604b88 <col:42, col:58> col:58 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x55d9bd604c08 <line:426:7, col:11> col:11 __inherit 'int'
| |-NoThrowAttr 0x55d9bd604d78 <line:427:22>
| `-NonNullAttr 0x55d9bd604dd0 <col:63, col:77> 1
|-FunctionDecl 0x55d9bd604f78 <line:428:1, line:430:82> line:428:12 pthread_attr_getscope 'int (const pthread_attr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x55d9bd604e18 <col:35, col:68> col:68 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x55d9bd604e98 <line:429:7, col:23> col:23 __scope 'int *restrict'
| |-NoThrowAttr 0x55d9bd605028 <line:430:22>
| `-NonNullAttr 0x55d9bd605080 <col:63, col:80> 1 2
|-FunctionDecl 0x55d9bd605208 <line:431:1, line:432:79> line:431:12 pthread_attr_setscope 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x55d9bd6050c8 <col:35, col:51> col:51 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x55d9bd605148 <col:59, col:63> col:63 __scope 'int'
| |-NoThrowAttr 0x55d9bd6052b8 <line:432:22>
| `-NonNullAttr 0x55d9bd605310 <col:63, col:77> 1
|-FunctionDecl 0x55d9bd605538 <line:433:1, line:435:115> line:433:12 pthread_attr_getstackaddr 'int (const pthread_attr_t *restrict, void **restrict)' extern
| |-ParmVarDecl 0x55d9bd605358 <col:39, line:434:11> col:11 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x55d9bd6053d8 <col:19, col:37> col:37 __stackaddr 'void **restrict'
| |-NoThrowAttr 0x55d9bd6055e8 <line:435:22>
| |-NonNullAttr 0x55d9bd605640 <col:63, col:80> 1 2
| `-DeprecatedAttr 0x55d9bd605678 <col:100> "" ""
|-FunctionDecl 0x55d9bd605888 <line:436:1, line:438:112> line:436:12 pthread_attr_setstackaddr 'int (pthread_attr_t *, void *)' extern
| |-ParmVarDecl 0x55d9bd6056c8 <col:39, col:55> col:55 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x55d9bd605748 <line:437:11, col:17> col:17 __stackaddr 'void *'
| |-NoThrowAttr 0x55d9bd605938 <line:438:22>
| |-NonNullAttr 0x55d9bd605990 <col:63, col:77> 1
| `-DeprecatedAttr 0x55d9bd6059d8 <col:97> "" ""
|-FunctionDecl 0x55d9bd605bc8 <line:439:1, line:441:82> line:439:12 pthread_attr_getstacksize 'int (const pthread_attr_t *restrict, size_t *restrict)' extern
| |-ParmVarDecl 0x55d9bd605a28 <col:39, line:440:11> col:11 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x55d9bd605aa0 <col:19, col:38> col:38 __stacksize 'size_t *restrict'
| |-NoThrowAttr 0x55d9bd605c78 <line:441:22>
| `-NonNullAttr 0x55d9bd605cd0 <col:63, col:80> 1 2
|-FunctionDecl 0x55d9bd605e50 <line:442:1, line:444:79> line:442:12 pthread_attr_setstacksize 'int (pthread_attr_t *, size_t)' extern
| |-ParmVarDecl 0x55d9bd605d18 <col:39, col:55> col:55 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x55d9bd605d90 <line:443:11, col:18> col:18 __stacksize 'size_t':'unsigned long'
| |-NoThrowAttr 0x55d9bd605f00 <line:444:22>
| `-NonNullAttr 0x55d9bd605f58 <col:63, col:77> 1
|-FunctionDecl 0x55d9bd606248 <line:445:1, line:448:85> line:445:12 pthread_attr_getstack 'int (const pthread_attr_t *restrict, void **restrict, size_t *restrict)' extern
| |-ParmVarDecl 0x55d9bd605fa8 <col:35, col:68> col:68 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x55d9bd606028 <line:446:7, col:25> col:25 __stackaddr 'void **restrict'
| |-ParmVarDecl 0x55d9bd6060a0 <line:447:7, col:26> col:26 __stacksize 'size_t *restrict'
| |-NoThrowAttr 0x55d9bd606300 <line:448:22>
| `-NonNullAttr 0x55d9bd606358 <col:63, col:83> 1 2 3
|-FunctionDecl 0x55d9bd606608 <line:449:1, line:450:100> line:449:12 pthread_attr_setstack 'int (pthread_attr_t *, void *, size_t)' extern
| |-ParmVarDecl 0x55d9bd6063b0 <col:35, col:51> col:51 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x55d9bd606430 <col:59, col:65> col:65 __stackaddr 'void *'
| |-ParmVarDecl 0x55d9bd6064a8 <line:450:7, col:14> col:14 __stacksize 'size_t':'unsigned long'
| |-NoThrowAttr 0x55d9bd6066c0 <col:43>
| `-NonNullAttr 0x55d9bd606718 <col:84, col:98> 1
|-FunctionDecl 0x55d9bd606a20 <line:451:1, line:453:79> line:451:12 pthread_setschedparam 'int (pthread_t, int, const struct sched_param *)' extern
| |-ParmVarDecl 0x55d9bd606768 <col:35, col:45> col:45 __target_thread 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x55d9bd6067e8 <col:62, col:66> col:66 __policy 'int'
| |-ParmVarDecl 0x55d9bd606878 <line:452:7, col:33> col:33 __param 'const struct sched_param *'
| |-NoThrowAttr 0x55d9bd606ad8 <line:453:22>
| `-NonNullAttr 0x55d9bd606b30 <col:63, col:77> 3
|-FunctionDecl 0x55d9bd606e08 <line:454:1, line:457:82> line:454:12 pthread_getschedparam 'int (pthread_t, int *restrict, struct sched_param *restrict)' extern
| |-ParmVarDecl 0x55d9bd606b78 <col:35, col:45> col:45 __target_thread 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x55d9bd606bf8 <line:455:7, col:23> col:23 __policy 'int *restrict'
| |-ParmVarDecl 0x55d9bd606c88 <line:456:7, col:38> col:38 __param 'struct sched_param *restrict'
| |-NoThrowAttr 0x55d9bd606ec0 <line:457:22>
| `-NonNullAttr 0x55d9bd606f18 <col:63, col:80> 2 3
|-FunctionDecl 0x55d9bd607108 <line:458:1, line:459:45> line:458:12 pthread_setschedprio 'int (pthread_t, int)' extern
| |-ParmVarDecl 0x55d9bd606f68 <col:34, col:44> col:44 __target_thread 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x55d9bd606fe8 <col:61, col:65> col:65 __prio 'int'
| `-NoThrowAttr 0x55d9bd6071b8 <line:459:22>
|-FunctionDecl 0x55d9bd607588 <line:460:1, line:461:71> line:460:12 pthread_once 'int (pthread_once_t *, void (*)(void))' extern
| |-ParmVarDecl 0x55d9bd607280 <col:26, col:42> col:42 __once_control 'pthread_once_t *'
| |-ParmVarDecl 0x55d9bd607420 <line:461:5, col:33> col:12 __init_routine 'void (*)(void)'
| `-NonNullAttr 0x55d9bd607638 <col:52, col:69> 1 2
|-FunctionDecl 0x55d9bd6077e0 <line:462:1, col:64> col:12 pthread_setcancelstate 'int (int, int *)' extern
| |-ParmVarDecl 0x55d9bd6076c0 <col:36, col:40> col:40 __state 'int'
| `-ParmVarDecl 0x55d9bd607740 <col:49, col:54> col:54 __oldstate 'int *'
|-FunctionDecl 0x55d9bd6079f0 <line:463:1, col:61> col:12 pthread_setcanceltype 'int (int, int *)' extern
| |-ParmVarDecl 0x55d9bd6078a8 <col:35, col:39> col:39 __type 'int'
| `-ParmVarDecl 0x55d9bd607928 <col:47, col:52> col:52 __oldtype 'int *'
|-FunctionDecl 0x55d9bd607b48 <line:464:1, col:42> col:12 pthread_cancel 'int (pthread_t)' extern
| `-ParmVarDecl 0x55d9bd607ab0 <col:28, col:38> col:38 __th 'pthread_t':'unsigned long'
|-FunctionDecl 0x55d9bd607c88 <line:465:1, col:37> col:13 pthread_testcancel 'void (void)' extern
|-RecordDecl 0x55d9bd607d28 <line:466:9, line:474:1> line:466:9 struct definition
| |-RecordDecl 0x55d9bd607dd8 <line:468:3, line:472:3> line:468:3 struct definition
| | |-FieldDecl 0x55d9bd607ec8 <line:470:5, col:15> col:15 __cancel_jmp_buf '__jmp_buf':'long [8]'
| | `-FieldDecl 0x55d9bd607f30 <line:471:5, col:9> col:9 __mask_was_saved 'int'
| |-FieldDecl 0x55d9bd608100 <line:468:3, line:472:23> col:5 __cancel_jmp_buf 'struct (anonymous struct at ./split_4/safe019_rmo.opt_false-unreach-call.i:468:3) [1]'
| `-FieldDecl 0x55d9bd6081f8 <line:473:3, col:16> col:9 __pad 'void *[4]'
|-TypedefDecl 0x55d9bd6082b0 <line:466:1, line:474:3> col:3 referenced __pthread_unwind_buf_t 'struct __pthread_unwind_buf_t':'__pthread_unwind_buf_t'
| |-ElaboratedType 0x55d9bd608250 'struct __pthread_unwind_buf_t' sugar
| | `-RecordType 0x55d9bd607db0 '__pthread_unwind_buf_t'
| |   `-Record 0x55d9bd607d28 ''
| `-AlignedAttr 0x55d9bd608308 <col:42> aligned
|   `-<<<NULL>>>
|-RecordDecl 0x55d9bd608380 <line:475:1, line:481:1> line:475:8 struct __pthread_cleanup_frame definition
| |-FieldDecl 0x55d9bd6084e0 <line:477:3, col:35> col:10 __cancel_routine 'void (*)(void *)'
| |-FieldDecl 0x55d9bd608548 <line:478:3, col:9> col:9 __cancel_arg 'void *'
| |-FieldDecl 0x55d9bd6085b0 <line:479:3, col:7> col:7 __do_it 'int'
| `-FieldDecl 0x55d9bd608618 <line:480:3, col:7> col:7 __cancel_type 'int'
|-FunctionDecl 0x55d9bd608820 <line:482:1, col:69> col:13 __pthread_register_cancel 'void (__pthread_unwind_buf_t *)' extern
| `-ParmVarDecl 0x55d9bd608710 <col:40, col:64> col:64 __buf '__pthread_unwind_buf_t *'
|-FunctionDecl 0x55d9bd608a00 <line:484:1, col:71> col:13 __pthread_unregister_cancel 'void (__pthread_unwind_buf_t *)' extern
| `-ParmVarDecl 0x55d9bd6088d8 <col:42, col:66> col:66 __buf '__pthread_unwind_buf_t *'
|-FunctionDecl 0x55d9bd608bc0 <line:486:1, line:488:31> line:486:13 __pthread_unwind_next 'void (__pthread_unwind_buf_t *) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x55d9bd608ab8 <col:36, col:60> col:60 __buf '__pthread_unwind_buf_t *'
| `-WeakAttr 0x55d9bd608c68 <line:488:22>
|-RecordDecl 0x55d9bd608cc0 <line:490:1, col:8> col:8 struct __jmp_buf_tag
|-FunctionDecl 0x55d9bd608fd8 <line:491:1, col:98> col:12 __sigsetjmp 'int (struct __jmp_buf_tag *, int)' extern
| |-ParmVarDecl 0x55d9bd608e38 <col:25, col:47> col:47 __env 'struct __jmp_buf_tag *'
| |-ParmVarDecl 0x55d9bd608eb8 <col:54, col:58> col:58 __savemask 'int'
| |-NoThrowAttr 0x55d9bd609088 <col:86>
| `-ReturnsTwiceAttr 0x55d9bd6090e0 <col:12> Implicit
|-FunctionDecl 0x55d9bd609408 <line:492:1, line:494:79> line:492:12 pthread_mutex_init 'int (pthread_mutex_t *, const pthread_mutexattr_t *)' extern
| |-ParmVarDecl 0x55d9bd6091b0 <col:32, col:49> col:49 __mutex 'pthread_mutex_t *'
| |-ParmVarDecl 0x55d9bd6092c0 <line:493:11, col:38> col:38 __mutexattr 'const pthread_mutexattr_t *'
| |-NoThrowAttr 0x55d9bd6094b8 <line:494:22>
| `-NonNullAttr 0x55d9bd609510 <col:63, col:77> 1
|-FunctionDecl 0x55d9bd609688 <line:495:1, line:496:79> line:495:12 pthread_mutex_destroy 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x55d9bd609558 <col:35, col:52> col:52 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x55d9bd609730 <line:496:22>
| `-NonNullAttr 0x55d9bd609788 <col:63, col:77> 1
|-FunctionDecl 0x55d9bd609890 <line:497:1, line:498:68> line:497:12 pthread_mutex_trylock 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x55d9bd6097d8 <col:35, col:52> col:52 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x55d9bd609938 <line:498:22>
| `-NonNullAttr 0x55d9bd609990 <col:52, col:66> 1
|-FunctionDecl 0x55d9bd60aad8 <line:499:1, line:500:68> line:499:12 pthread_mutex_lock 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x55d9bd60aa20 <col:32, col:49> col:49 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x55d9bd60ab80 <line:500:22>
| `-NonNullAttr 0x55d9bd60abd8 <col:52, col:66> 1
|-FunctionDecl 0x55d9bd60ae18 <line:501:1, line:503:85> line:501:12 pthread_mutex_timedlock 'int (pthread_mutex_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x55d9bd60ac28 <col:37, col:65> col:65 __mutex 'pthread_mutex_t *restrict'
| |-ParmVarDecl 0x55d9bd60acb8 <line:502:9, line:503:9> col:9 __abstime 'const struct timespec *restrict'
| |-NoThrowAttr 0x55d9bd60aec8 <col:36>
| `-NonNullAttr 0x55d9bd60af20 <col:66, col:83> 1 2
|-FunctionDecl 0x55d9bd60b020 <line:504:1, line:505:68> line:504:12 pthread_mutex_unlock 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x55d9bd60af68 <col:34, col:51> col:51 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x55d9bd60b0c8 <line:505:22>
| `-NonNullAttr 0x55d9bd60b120 <col:52, col:66> 1
|-FunctionDecl 0x55d9bd60b3b8 <line:506:1, line:509:82> line:506:12 pthread_mutex_getprioceiling 'int (const pthread_mutex_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x55d9bd60b1d0 <col:42, line:507:18> col:18 __mutex 'const pthread_mutex_t *restrict'
| |-ParmVarDecl 0x55d9bd60b250 <line:508:7, col:23> col:23 __prioceiling 'int *restrict'
| |-NoThrowAttr 0x55d9bd60b468 <line:509:22>
| `-NonNullAttr 0x55d9bd60b4c0 <col:63, col:80> 1 2
|-FunctionDecl 0x55d9bd60b788 <line:510:1, line:513:82> line:510:12 pthread_mutex_setprioceiling 'int (pthread_mutex_t *restrict, int, int *restrict)' extern
| |-ParmVarDecl 0x55d9bd60b508 <col:42, col:70> col:70 __mutex 'pthread_mutex_t *restrict'
| |-ParmVarDecl 0x55d9bd60b588 <line:511:7, col:11> col:11 __prioceiling 'int'
| |-ParmVarDecl 0x55d9bd60b608 <line:512:7, col:23> col:23 __old_ceiling 'int *restrict'
| |-NoThrowAttr 0x55d9bd60b840 <line:513:22>
| `-NonNullAttr 0x55d9bd60b898 <col:63, col:80> 1 3
|-FunctionDecl 0x55d9bd60ba30 <line:514:1, line:515:79> line:514:12 pthread_mutex_consistent 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x55d9bd60b8e8 <col:38, col:55> col:55 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x55d9bd60bad8 <line:515:22>
| `-NonNullAttr 0x55d9bd60bb30 <col:63, col:77> 1
|-FunctionDecl 0x55d9bd60bd18 <line:516:1, line:517:79> line:516:12 pthread_mutexattr_init 'int (pthread_mutexattr_t *)' extern
| |-ParmVarDecl 0x55d9bd60bbe0 <col:36, col:57> col:57 __attr 'pthread_mutexattr_t *'
| |-NoThrowAttr 0x55d9bd60bdc0 <line:517:22>
| `-NonNullAttr 0x55d9bd60be18 <col:63, col:77> 1
|-FunctionDecl 0x55d9bd60bf20 <line:518:1, line:519:79> line:518:12 pthread_mutexattr_destroy 'int (pthread_mutexattr_t *)' extern
| |-ParmVarDecl 0x55d9bd60be68 <col:39, col:60> col:60 __attr 'pthread_mutexattr_t *'
| |-NoThrowAttr 0x55d9bd60bfc8 <line:519:22>
| `-NonNullAttr 0x55d9bd60c020 <col:63, col:77> 1
|-FunctionDecl 0x55d9bd60c248 <line:520:1, line:523:82> line:520:12 pthread_mutexattr_getpshared 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x55d9bd60c068 <col:42, line:521:18> col:18 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x55d9bd60c0e8 <line:522:7, col:23> col:23 __pshared 'int *restrict'
| |-NoThrowAttr 0x55d9bd60c2f8 <line:523:22>
| `-NonNullAttr 0x55d9bd60c350 <col:63, col:80> 1 2
|-FunctionDecl 0x55d9bd60c558 <line:524:1, line:526:79> line:524:12 pthread_mutexattr_setpshared 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x55d9bd60c398 <col:42, col:63> col:63 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x55d9bd60c418 <line:525:7, col:11> col:11 __pshared 'int'
| |-NoThrowAttr 0x55d9bd60c608 <line:526:22>
| `-NonNullAttr 0x55d9bd60c660 <col:63, col:77> 1
|-FunctionDecl 0x55d9bd60c808 <line:527:1, line:529:82> line:527:12 pthread_mutexattr_gettype 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x55d9bd60c6a8 <col:39, line:528:11> col:11 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x55d9bd60c728 <col:19, col:35> col:35 __kind 'int *restrict'
| |-NoThrowAttr 0x55d9bd60c8b8 <line:529:22>
| `-NonNullAttr 0x55d9bd60c910 <col:63, col:80> 1 2
|-FunctionDecl 0x55d9bd60cb00 <line:530:1, line:531:79> line:530:12 pthread_mutexattr_settype 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x55d9bd60c958 <col:39, col:60> col:60 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x55d9bd60ca40 <col:68, col:72> col:72 __kind 'int'
| |-NoThrowAttr 0x55d9bd60cbb0 <line:531:22>
| `-NonNullAttr 0x55d9bd60cc08 <col:63, col:77> 1
|-FunctionDecl 0x55d9bd60cdb8 <line:532:1, line:535:82> line:532:12 pthread_mutexattr_getprotocol 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x55d9bd60cc58 <col:43, line:533:19> col:19 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x55d9bd60ccd8 <line:534:8, col:24> col:24 __protocol 'int *restrict'
| |-NoThrowAttr 0x55d9bd60ce68 <line:535:22>
| `-NonNullAttr 0x55d9bd60cec0 <col:63, col:80> 1 2
|-FunctionDecl 0x55d9bd60d048 <line:536:1, line:538:79> line:536:12 pthread_mutexattr_setprotocol 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x55d9bd60cf08 <col:43, col:64> col:64 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x55d9bd60cf88 <line:537:8, col:12> col:12 __protocol 'int'
| |-NoThrowAttr 0x55d9bd60d0f8 <line:538:22>
| `-NonNullAttr 0x55d9bd60d150 <col:63, col:77> 1
|-FunctionDecl 0x55d9bd60d2f8 <line:539:1, line:542:82> line:539:12 pthread_mutexattr_getprioceiling 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x55d9bd60d198 <col:46, line:540:22> col:22 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x55d9bd60d218 <line:541:11, col:27> col:27 __prioceiling 'int *restrict'
| |-NoThrowAttr 0x55d9bd60d3a8 <line:542:22>
| `-NonNullAttr 0x55d9bd60d400 <col:63, col:80> 1 2
|-FunctionDecl 0x55d9bd60d588 <line:543:1, line:545:79> line:543:12 pthread_mutexattr_setprioceiling 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x55d9bd60d448 <col:46, col:67> col:67 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x55d9bd60d4c8 <line:544:11, col:15> col:15 __prioceiling 'int'
| |-NoThrowAttr 0x55d9bd60d638 <line:545:22>
| `-NonNullAttr 0x55d9bd60d690 <col:63, col:77> 1
|-FunctionDecl 0x55d9bd60d878 <line:546:1, line:548:82> line:546:12 pthread_mutexattr_getrobust 'int (const pthread_mutexattr_t *, int *)' extern
| |-ParmVarDecl 0x55d9bd60d6d8 <col:41, col:68> col:68 __attr 'const pthread_mutexattr_t *'
| |-ParmVarDecl 0x55d9bd60d758 <line:547:6, col:11> col:11 __robustness 'int *'
| |-NoThrowAttr 0x55d9bd60d928 <line:548:22>
| `-NonNullAttr 0x55d9bd60d980 <col:63, col:80> 1 2
|-FunctionDecl 0x55d9bd60eb38 <line:549:1, line:551:79> line:549:12 pthread_mutexattr_setrobust 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x55d9bd60d9c8 <col:41, col:62> col:62 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x55d9bd60ea78 <line:550:6, col:10> col:10 __robustness 'int'
| |-NoThrowAttr 0x55d9bd60ebe8 <line:551:22>
| `-NonNullAttr 0x55d9bd60ec40 <col:63, col:77> 1
|-FunctionDecl 0x55d9bd60ef78 <line:552:1, line:554:86> line:552:12 pthread_rwlock_init 'int (pthread_rwlock_t *restrict, const pthread_rwlockattr_t *restrict)' extern
| |-ParmVarDecl 0x55d9bd60ed20 <col:33, col:62> col:62 __rwlock 'pthread_rwlock_t *restrict'
| |-ParmVarDecl 0x55d9bd60ee30 <line:553:5, line:554:5> col:5 __attr 'const pthread_rwlockattr_t *restrict'
| |-NoThrowAttr 0x55d9bd60f028 <col:29>
| `-NonNullAttr 0x55d9bd60f080 <col:70, col:84> 1
|-FunctionDecl 0x55d9bd60f1f8 <line:555:1, line:556:79> line:555:12 pthread_rwlock_destroy 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x55d9bd60f0c8 <col:36, col:54> col:54 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x55d9bd60f2a0 <line:556:22>
| `-NonNullAttr 0x55d9bd60f2f8 <col:63, col:77> 1
|-FunctionDecl 0x55d9bd60f400 <line:557:1, line:558:68> line:557:12 pthread_rwlock_rdlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x55d9bd60f348 <col:35, col:53> col:53 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x55d9bd60f4a8 <line:558:22>
| `-NonNullAttr 0x55d9bd60f500 <col:52, col:66> 1
|-FunctionDecl 0x55d9bd60f600 <line:559:1, line:560:65> line:559:12 pthread_rwlock_tryrdlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x55d9bd60f548 <col:38, col:56> col:56 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x55d9bd60f6a8 <line:560:19>
| `-NonNullAttr 0x55d9bd60f700 <col:49, col:63> 1
|-FunctionDecl 0x55d9bd60f938 <line:561:1, line:563:88> line:561:12 pthread_rwlock_timedrdlock 'int (pthread_rwlock_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x55d9bd60f748 <col:40, col:69> col:69 __rwlock 'pthread_rwlock_t *restrict'
| |-ParmVarDecl 0x55d9bd60f7d8 <line:562:12, line:563:12> col:12 __abstime 'const struct timespec *restrict'
| |-NoThrowAttr 0x55d9bd60f9e8 <col:39>
| `-NonNullAttr 0x55d9bd60fa70 <col:69, col:86> 1 2
|-FunctionDecl 0x55d9bd60fb70 <line:564:1, line:565:68> line:564:12 pthread_rwlock_wrlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x55d9bd60fab8 <col:35, col:53> col:53 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x55d9bd60fc18 <line:565:22>
| `-NonNullAttr 0x55d9bd60fc70 <col:52, col:66> 1
|-FunctionDecl 0x55d9bd60fd70 <line:566:1, line:567:68> line:566:12 pthread_rwlock_trywrlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x55d9bd60fcb8 <col:38, col:56> col:56 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x55d9bd60fe18 <line:567:22>
| `-NonNullAttr 0x55d9bd60fe70 <col:52, col:66> 1
|-FunctionDecl 0x55d9bd610028 <line:568:1, line:570:88> line:568:12 pthread_rwlock_timedwrlock 'int (pthread_rwlock_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x55d9bd60feb8 <col:40, col:69> col:69 __rwlock 'pthread_rwlock_t *restrict'
| |-ParmVarDecl 0x55d9bd60ff48 <line:569:12, line:570:12> col:12 __abstime 'const struct timespec *restrict'
| |-NoThrowAttr 0x55d9bd6100d8 <col:39>
| `-NonNullAttr 0x55d9bd610130 <col:69, col:86> 1 2
|-FunctionDecl 0x55d9bd610230 <line:571:1, line:572:68> line:571:12 pthread_rwlock_unlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x55d9bd610178 <col:35, col:53> col:53 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x55d9bd6102d8 <line:572:22>
| `-NonNullAttr 0x55d9bd610330 <col:52, col:66> 1
|-FunctionDecl 0x55d9bd610518 <line:573:1, line:574:79> line:573:12 pthread_rwlockattr_init 'int (pthread_rwlockattr_t *)' extern
| |-ParmVarDecl 0x55d9bd6103e0 <col:37, col:59> col:59 __attr 'pthread_rwlockattr_t *'
| |-NoThrowAttr 0x55d9bd6105c0 <line:574:22>
| `-NonNullAttr 0x55d9bd610618 <col:63, col:77> 1
|-FunctionDecl 0x55d9bd610720 <line:575:1, line:576:79> line:575:12 pthread_rwlockattr_destroy 'int (pthread_rwlockattr_t *)' extern
| |-ParmVarDecl 0x55d9bd610668 <col:40, col:62> col:62 __attr 'pthread_rwlockattr_t *'
| |-NoThrowAttr 0x55d9bd6107c8 <line:576:22>
| `-NonNullAttr 0x55d9bd610820 <col:63, col:77> 1
|-FunctionDecl 0x55d9bd610a80 <line:577:1, line:580:82> line:577:12 pthread_rwlockattr_getpshared 'int (const pthread_rwlockattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x55d9bd610868 <col:43, line:578:19> col:19 __attr 'const pthread_rwlockattr_t *restrict'
| |-ParmVarDecl 0x55d9bd6108e8 <line:579:8, col:24> col:24 __pshared 'int *restrict'
| |-NoThrowAttr 0x55d9bd610b30 <line:580:22>
| `-NonNullAttr 0x55d9bd610b88 <col:63, col:80> 1 2
|-FunctionDecl 0x55d9bd610d98 <line:581:1, line:583:79> line:581:12 pthread_rwlockattr_setpshared 'int (pthread_rwlockattr_t *, int)' extern
| |-ParmVarDecl 0x55d9bd610bd8 <col:43, col:65> col:65 __attr 'pthread_rwlockattr_t *'
| |-ParmVarDecl 0x55d9bd610c58 <line:582:8, col:12> col:12 __pshared 'int'
| |-NoThrowAttr 0x55d9bd610e48 <line:583:22>
| `-NonNullAttr 0x55d9bd610ea0 <col:63, col:77> 1
|-FunctionDecl 0x55d9bd611048 <line:584:1, line:587:82> line:584:12 pthread_rwlockattr_getkind_np 'int (const pthread_rwlockattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x55d9bd610ee8 <col:43, line:585:19> col:19 __attr 'const pthread_rwlockattr_t *restrict'
| |-ParmVarDecl 0x55d9bd610f68 <line:586:8, col:24> col:24 __pref 'int *restrict'
| |-NoThrowAttr 0x55d9bd6110f8 <line:587:22>
| `-NonNullAttr 0x55d9bd611150 <col:63, col:80> 1 2
|-FunctionDecl 0x55d9bd6112d8 <line:588:1, line:589:93> line:588:12 pthread_rwlockattr_setkind_np 'int (pthread_rwlockattr_t *, int)' extern
| |-ParmVarDecl 0x55d9bd611198 <col:43, col:65> col:65 __attr 'pthread_rwlockattr_t *'
| |-ParmVarDecl 0x55d9bd611218 <line:589:8, col:12> col:12 __pref 'int'
| |-NoThrowAttr 0x55d9bd611388 <col:36>
| `-NonNullAttr 0x55d9bd6113e0 <col:77, col:91> 1
|-FunctionDecl 0x55d9bd611718 <line:590:1, line:592:79> line:590:12 pthread_cond_init 'int (pthread_cond_t *restrict, const pthread_condattr_t *restrict)' extern
| |-ParmVarDecl 0x55d9bd6114c0 <col:31, col:58> col:58 __cond 'pthread_cond_t *restrict'
| |-ParmVarDecl 0x55d9bd6115d0 <line:591:10, col:47> col:47 __cond_attr 'const pthread_condattr_t *restrict'
| |-NoThrowAttr 0x55d9bd6117c8 <line:592:22>
| `-NonNullAttr 0x55d9bd611820 <col:63, col:77> 1
|-FunctionDecl 0x55d9bd611998 <line:593:1, line:594:79> line:593:12 pthread_cond_destroy 'int (pthread_cond_t *)' extern
| |-ParmVarDecl 0x55d9bd611868 <col:34, col:50> col:50 __cond 'pthread_cond_t *'
| |-NoThrowAttr 0x55d9bd611a40 <line:594:22>
| `-NonNullAttr 0x55d9bd611ac0 <col:63, col:77> 1
|-FunctionDecl 0x55d9bd611bc0 <line:595:1, line:596:68> line:595:12 pthread_cond_signal 'int (pthread_cond_t *)' extern
| |-ParmVarDecl 0x55d9bd611b08 <col:33, col:49> col:49 __cond 'pthread_cond_t *'
| |-NoThrowAttr 0x55d9bd611c68 <line:596:22>
| `-NonNullAttr 0x55d9bd611cc0 <col:52, col:66> 1
|-FunctionDecl 0x55d9bd611dc0 <line:597:1, line:598:68> line:597:12 pthread_cond_broadcast 'int (pthread_cond_t *)' extern
| |-ParmVarDecl 0x55d9bd611d08 <col:36, col:52> col:52 __cond 'pthread_cond_t *'
| |-NoThrowAttr 0x55d9bd611e68 <line:598:22>
| `-NonNullAttr 0x55d9bd611ec0 <col:52, col:66> 1
|-FunctionDecl 0x55d9bd6120e8 <line:599:1, line:601:41> line:599:12 pthread_cond_wait 'int (pthread_cond_t *restrict, pthread_mutex_t *restrict)' extern
| |-ParmVarDecl 0x55d9bd611f08 <col:31, col:58> col:58 __cond 'pthread_cond_t *restrict'
| |-ParmVarDecl 0x55d9bd611f80 <line:600:10, col:38> col:38 __mutex 'pthread_mutex_t *restrict'
| `-NonNullAttr 0x55d9bd612198 <line:601:22, col:39> 1 2
|-FunctionDecl 0x55d9bd6124c8 <line:602:1, line:605:44> line:602:12 pthread_cond_timedwait 'int (pthread_cond_t *restrict, pthread_mutex_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x55d9bd612218 <col:36, col:63> col:63 __cond 'pthread_cond_t *restrict'
| |-ParmVarDecl 0x55d9bd612290 <line:603:8, col:36> col:36 __mutex 'pthread_mutex_t *restrict'
| |-ParmVarDecl 0x55d9bd612320 <line:604:8, col:42> col:42 __abstime 'const struct timespec *restrict'
| `-NonNullAttr 0x55d9bd612580 <line:605:22, col:42> 1 2 3
|-FunctionDecl 0x55d9bd612798 <line:606:1, line:607:79> line:606:12 pthread_condattr_init 'int (pthread_condattr_t *)' extern
| |-ParmVarDecl 0x55d9bd612660 <col:35, col:55> col:55 __attr 'pthread_condattr_t *'
| |-NoThrowAttr 0x55d9bd612840 <line:607:22>
| `-NonNullAttr 0x55d9bd612898 <col:63, col:77> 1
|-FunctionDecl 0x55d9bd6129a0 <line:608:1, line:609:79> line:608:12 pthread_condattr_destroy 'int (pthread_condattr_t *)' extern
| |-ParmVarDecl 0x55d9bd6128e8 <col:38, col:58> col:58 __attr 'pthread_condattr_t *'
| |-NoThrowAttr 0x55d9bd612a48 <line:609:22>
| `-NonNullAttr 0x55d9bd612ad0 <col:63, col:77> 1
|-FunctionDecl 0x55d9bd612cf8 <line:610:1, line:613:82> line:610:12 pthread_condattr_getpshared 'int (const pthread_condattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x55d9bd612b18 <col:41, line:611:17> col:17 __attr 'const pthread_condattr_t *restrict'
| |-ParmVarDecl 0x55d9bd612b98 <line:612:6, col:22> col:22 __pshared 'int *restrict'
| |-NoThrowAttr 0x55d9bd612da8 <line:613:22>
| `-NonNullAttr 0x55d9bd612e00 <col:63, col:80> 1 2
|-FunctionDecl 0x55d9bd613008 <line:614:1, line:615:94> line:614:12 pthread_condattr_setpshared 'int (pthread_condattr_t *, int)' extern
| |-ParmVarDecl 0x55d9bd612e48 <col:41, col:61> col:61 __attr 'pthread_condattr_t *'
| |-ParmVarDecl 0x55d9bd612ec8 <line:615:6, col:10> col:10 __pshared 'int'
| |-NoThrowAttr 0x55d9bd6130b8 <col:37>
| `-NonNullAttr 0x55d9bd613110 <col:78, col:92> 1
|-FunctionDecl 0x55d9bd613328 <line:616:1, line:619:82> line:616:12 pthread_condattr_getclock 'int (const pthread_condattr_t *restrict, __clockid_t *restrict)' extern
| |-ParmVarDecl 0x55d9bd613158 <col:39, line:617:22> col:22 __attr 'const pthread_condattr_t *restrict'
| |-ParmVarDecl 0x55d9bd613200 <line:618:11, col:35> col:35 __clock_id '__clockid_t *restrict'
| |-NoThrowAttr 0x55d9bd6133d8 <line:619:22>
| `-NonNullAttr 0x55d9bd613430 <col:63, col:80> 1 2
|-FunctionDecl 0x55d9bd6135f8 <line:620:1, line:622:79> line:620:12 pthread_condattr_setclock 'int (pthread_condattr_t *, __clockid_t)' extern
| |-ParmVarDecl 0x55d9bd613478 <col:39, col:59> col:59 __attr 'pthread_condattr_t *'
| |-ParmVarDecl 0x55d9bd6134f0 <line:621:11, col:23> col:23 __clock_id '__clockid_t':'int'
| |-NoThrowAttr 0x55d9bd6136a8 <line:622:22>
| `-NonNullAttr 0x55d9bd613700 <col:63, col:77> 1
|-FunctionDecl 0x55d9bd6139a8 <line:623:1, line:624:79> line:623:12 pthread_spin_init 'int (pthread_spinlock_t *, int)' extern
| |-ParmVarDecl 0x55d9bd6137e0 <col:31, col:51> col:51 __lock 'pthread_spinlock_t *'
| |-ParmVarDecl 0x55d9bd613860 <col:59, col:63> col:63 __pshared 'int'
| |-NoThrowAttr 0x55d9bd613a58 <line:624:22>
| `-NonNullAttr 0x55d9bd613ae0 <col:63, col:77> 1
|-FunctionDecl 0x55d9bd613c58 <line:625:1, line:626:79> line:625:12 pthread_spin_destroy 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x55d9bd613b28 <col:34, col:54> col:54 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x55d9bd613d00 <line:626:22>
| `-NonNullAttr 0x55d9bd613d58 <col:63, col:77> 1
|-FunctionDecl 0x55d9bd613e60 <line:627:1, line:628:68> line:627:12 pthread_spin_lock 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x55d9bd613da8 <col:31, col:51> col:51 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x55d9bd613f08 <line:628:22>
| `-NonNullAttr 0x55d9bd613f60 <col:52, col:66> 1
|-FunctionDecl 0x55d9bd614060 <line:629:1, line:630:68> line:629:12 pthread_spin_trylock 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x55d9bd613fa8 <col:34, col:54> col:54 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x55d9bd614108 <line:630:22>
| `-NonNullAttr 0x55d9bd614160 <col:52, col:66> 1
|-FunctionDecl 0x55d9bd614260 <line:631:1, line:632:68> line:631:12 pthread_spin_unlock 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x55d9bd6141a8 <col:33, col:53> col:53 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x55d9bd614308 <line:632:22>
| `-NonNullAttr 0x55d9bd614360 <col:52, col:66> 1
|-FunctionDecl 0x55d9bd614738 <line:633:1, line:636:79> line:633:12 pthread_barrier_init 'int (pthread_barrier_t *restrict, const pthread_barrierattr_t *restrict, unsigned int)' extern
| |-ParmVarDecl 0x55d9bd614440 <col:34, col:64> col:64 __barrier 'pthread_barrier_t *restrict'
| |-ParmVarDecl 0x55d9bd614550 <line:634:6, line:635:6> col:6 __attr 'const pthread_barrierattr_t *restrict'
| |-ParmVarDecl 0x55d9bd6145d0 <col:14, col:27> col:27 __count 'unsigned int'
| |-NoThrowAttr 0x55d9bd6147f0 <line:636:22>
| `-NonNullAttr 0x55d9bd614848 <col:63, col:77> 1
|-FunctionDecl 0x55d9bd6149c8 <line:637:1, line:638:79> line:637:12 pthread_barrier_destroy 'int (pthread_barrier_t *)' extern
| |-ParmVarDecl 0x55d9bd614898 <col:37, col:56> col:56 __barrier 'pthread_barrier_t *'
| |-NoThrowAttr 0x55d9bd614a70 <line:638:22>
| `-NonNullAttr 0x55d9bd615b00 <col:63, col:77> 1
|-FunctionDecl 0x55d9bd615c00 <line:639:1, line:640:68> line:639:12 pthread_barrier_wait 'int (pthread_barrier_t *)' extern
| |-ParmVarDecl 0x55d9bd615b48 <col:34, col:53> col:53 __barrier 'pthread_barrier_t *'
| |-NoThrowAttr 0x55d9bd615ca8 <line:640:22>
| `-NonNullAttr 0x55d9bd615d00 <col:52, col:66> 1
|-FunctionDecl 0x55d9bd615ee8 <line:641:1, line:642:79> line:641:12 pthread_barrierattr_init 'int (pthread_barrierattr_t *)' extern
| |-ParmVarDecl 0x55d9bd615db0 <col:38, col:61> col:61 __attr 'pthread_barrierattr_t *'
| |-NoThrowAttr 0x55d9bd615f90 <line:642:22>
| `-NonNullAttr 0x55d9bd615fe8 <col:63, col:77> 1
|-FunctionDecl 0x55d9bd6160f0 <line:643:1, line:644:79> line:643:12 pthread_barrierattr_destroy 'int (pthread_barrierattr_t *)' extern
| |-ParmVarDecl 0x55d9bd616038 <col:41, col:64> col:64 __attr 'pthread_barrierattr_t *'
| |-NoThrowAttr 0x55d9bd616198 <line:644:22>
| `-NonNullAttr 0x55d9bd6161f0 <col:63, col:77> 1
|-FunctionDecl 0x55d9bd616418 <line:645:1, line:648:82> line:645:12 pthread_barrierattr_getpshared 'int (const pthread_barrierattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x55d9bd616238 <col:44, line:646:20> col:20 __attr 'const pthread_barrierattr_t *restrict'
| |-ParmVarDecl 0x55d9bd6162b8 <line:647:9, col:25> col:25 __pshared 'int *restrict'
| |-NoThrowAttr 0x55d9bd6164c8 <line:648:22>
| `-NonNullAttr 0x55d9bd616520 <col:63, col:80> 1 2
|-FunctionDecl 0x55d9bd616728 <line:649:1, line:651:79> line:649:12 pthread_barrierattr_setpshared 'int (pthread_barrierattr_t *, int)' extern
| |-ParmVarDecl 0x55d9bd616568 <col:44, col:67> col:67 __attr 'pthread_barrierattr_t *'
| |-ParmVarDecl 0x55d9bd6165e8 <line:650:9, col:13> col:13 __pshared 'int'
| |-NoThrowAttr 0x55d9bd6167d8 <line:651:22>
| `-NonNullAttr 0x55d9bd616830 <col:63, col:77> 1
|-FunctionDecl 0x55d9bd616b98 <line:652:1, line:654:79> line:652:12 pthread_key_create 'int (pthread_key_t *, void (*)(void *))' extern
| |-ParmVarDecl 0x55d9bd616910 <col:32, col:47> col:47 __key 'pthread_key_t *'
| |-ParmVarDecl 0x55d9bd616a30 <line:653:11, col:43> col:18 __destr_function 'void (*)(void *)'
| |-NoThrowAttr 0x55d9bd616c48 <line:654:22>
| `-NonNullAttr 0x55d9bd616ca0 <col:63, col:77> 1
|-FunctionDecl 0x55d9bd616df8 <line:655:1, col:92> col:12 pthread_key_delete 'int (pthread_key_t)' extern
| |-ParmVarDecl 0x55d9bd616ce8 <col:32, col:46> col:46 __key 'pthread_key_t':'unsigned int'
| `-NoThrowAttr 0x55d9bd616ea0 <col:69>
|-FunctionDecl 0x55d9bd617018 <line:656:1, col:95> col:14 pthread_getspecific 'void *(pthread_key_t)' extern
| |-ParmVarDecl 0x55d9bd616f08 <col:35, col:49> col:49 __key 'pthread_key_t':'unsigned int'
| `-NoThrowAttr 0x55d9bd6170c0 <col:72>
|-FunctionDecl 0x55d9bd6172f8 <line:657:1, line:658:67> line:657:12 pthread_setspecific 'int (pthread_key_t, const void *)' extern
| |-ParmVarDecl 0x55d9bd617128 <col:33, col:47> col:47 __key 'pthread_key_t':'unsigned int'
| |-ParmVarDecl 0x55d9bd6171d8 <line:658:5, col:17> col:17 __pointer 'const void *'
| `-NoThrowAttr 0x55d9bd6173a8 <col:44>
|-FunctionDecl 0x55d9bd6175c8 <line:659:1, line:661:79> line:659:12 pthread_getcpuclockid 'int (pthread_t, __clockid_t *)' extern
| |-ParmVarDecl 0x55d9bd617410 <col:35, col:45> col:45 __thread_id 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x55d9bd617488 <line:660:7, col:20> col:20 __clock_id '__clockid_t *'
| |-NoThrowAttr 0x55d9bd617678 <line:661:22>
| `-NonNullAttr 0x55d9bd6176d0 <col:63, col:77> 2
|-FunctionDecl 0x55d9bd617b30 <line:662:1, line:664:70> line:662:12 pthread_atfork 'int (void (*)(void), void (*)(void), void (*)(void))' extern
| |-ParmVarDecl 0x55d9bd6177b0 <col:28, col:51> col:35 __prepare 'void (*)(void)'
| |-ParmVarDecl 0x55d9bd6178c0 <line:663:7, col:29> col:14 __parent 'void (*)(void)'
| |-ParmVarDecl 0x55d9bd6179d0 <line:664:7, col:28> col:14 __child 'void (*)(void)'
| `-NoThrowAttr 0x55d9bd617be8 <col:47>
|-FunctionDecl 0x55d9bd617cf0 <line:666:1, col:20> col:8 used P0 'void *(void *)'
| `-ParmVarDecl 0x55d9bd617c58 <col:11, col:17> col:17 arg 'void *'
|-FunctionDecl 0x55d9bd617e48 <line:667:1, col:20> col:8 used P1 'void *(void *)'
| `-ParmVarDecl 0x55d9bd617db0 <col:11, col:17> col:17 arg 'void *'
|-FunctionDecl 0x55d9bd617fa0 <line:668:1, col:20> col:8 used P2 'void *(void *)'
| `-ParmVarDecl 0x55d9bd617f08 <col:11, col:17> col:17 arg 'void *'
|-FunctionDecl 0x55d9bd6180f8 <line:669:1, col:20> col:8 used P3 'void *(void *)'
| `-ParmVarDecl 0x55d9bd618060 <col:11, col:17> col:17 arg 'void *'
|-FunctionDecl 0x55d9bd6181c0 <line:670:1, col:12> col:6 fence 'void ()'
|-FunctionDecl 0x55d9bd618280 <line:671:1, col:12> col:6 isync 'void ()'
|-FunctionDecl 0x55d9bd618340 <line:672:1, col:14> col:6 lwfence 'void ()'
|-VarDecl 0x55d9bd6183f8 <line:673:1, col:5> col:5 used __unbuffered_cnt 'int'
|-VarDecl 0x55d9bd618478 prev 0x55d9bd6183f8 <line:674:1, col:24> col:5 used __unbuffered_cnt 'int' cinit
| `-IntegerLiteral 0x55d9bd6184e0 <col:24> 'int' 0
|-VarDecl 0x55d9bd618518 <line:675:1, col:5> col:5 used __unbuffered_p0_EAX 'int'
|-VarDecl 0x55d9bd618598 prev 0x55d9bd618518 <line:676:1, col:27> col:5 used __unbuffered_p0_EAX 'int' cinit
| `-IntegerLiteral 0x55d9bd618600 <col:27> 'int' 0
|-VarDecl 0x55d9bd618638 <line:677:1, col:5> col:5 used __unbuffered_p0_EBX 'int'
|-VarDecl 0x55d9bd6186b8 prev 0x55d9bd618638 <line:678:1, col:27> col:5 used __unbuffered_p0_EBX 'int' cinit
| `-IntegerLiteral 0x55d9bd618720 <col:27> 'int' 0
|-VarDecl 0x55d9bd618758 <line:679:1, col:5> col:5 used __unbuffered_p2_EAX 'int'
|-VarDecl 0x55d9bd6187d8 prev 0x55d9bd618758 <line:680:1, col:27> col:5 used __unbuffered_p2_EAX 'int' cinit
| `-IntegerLiteral 0x55d9bd618840 <col:27> 'int' 0
|-VarDecl 0x55d9bd618870 <line:681:1, col:7> col:7 __unbuffered_p2_EAX$flush_delayed '_Bool'
|-VarDecl 0x55d9bd6188f0 <line:682:1, col:5> col:5 __unbuffered_p2_EAX$mem_tmp 'int'
|-VarDecl 0x55d9bd618968 <line:683:1, col:7> col:7 __unbuffered_p2_EAX$r_buff0_thd0 '_Bool'
|-VarDecl 0x55d9bd6189e0 <line:684:1, col:7> col:7 __unbuffered_p2_EAX$r_buff0_thd1 '_Bool'
|-VarDecl 0x55d9bd618a58 <line:685:1, col:7> col:7 __unbuffered_p2_EAX$r_buff0_thd2 '_Bool'
|-VarDecl 0x55d9bd618b00 <line:686:1, col:7> col:7 __unbuffered_p2_EAX$r_buff0_thd3 '_Bool'
|-VarDecl 0x55d9bd618b78 <line:687:1, col:7> col:7 __unbuffered_p2_EAX$r_buff0_thd4 '_Bool'
|-VarDecl 0x55d9bd618bf0 <line:688:1, col:7> col:7 __unbuffered_p2_EAX$r_buff1_thd0 '_Bool'
|-VarDecl 0x55d9bd618c68 <line:689:1, col:7> col:7 __unbuffered_p2_EAX$r_buff1_thd1 '_Bool'
|-VarDecl 0x55d9bd618ce0 <line:690:1, col:7> col:7 __unbuffered_p2_EAX$r_buff1_thd2 '_Bool'
|-VarDecl 0x55d9bd618d58 <line:691:1, col:7> col:7 __unbuffered_p2_EAX$r_buff1_thd3 '_Bool'
|-VarDecl 0x55d9bd618dd0 <line:692:1, col:7> col:7 __unbuffered_p2_EAX$r_buff1_thd4 '_Bool'
|-VarDecl 0x55d9bd618e48 <line:693:1, col:7> col:7 used __unbuffered_p2_EAX$read_delayed '_Bool'
|-VarDecl 0x55d9bd618ec8 <line:694:1, col:6> col:6 used __unbuffered_p2_EAX$read_delayed_var 'int *'
|-VarDecl 0x55d9bd618f48 <line:695:1, col:5> col:5 __unbuffered_p2_EAX$w_buff0 'int'
|-VarDecl 0x55d9bd618fc0 <line:696:1, col:7> col:7 __unbuffered_p2_EAX$w_buff0_used '_Bool'
|-VarDecl 0x55d9bd619040 <line:697:1, col:5> col:5 __unbuffered_p2_EAX$w_buff1 'int'
|-VarDecl 0x55d9bd6190b8 <line:698:1, col:7> col:7 __unbuffered_p2_EAX$w_buff1_used '_Bool'
|-VarDecl 0x55d9bd619130 <line:699:1, col:7> col:7 used main$tmp_guard0 '_Bool'
|-VarDecl 0x55d9bd6191a8 <line:700:1, col:7> col:7 used main$tmp_guard1 '_Bool'
|-VarDecl 0x55d9bd619228 <line:701:1, col:5> col:5 used x 'int'
|-VarDecl 0x55d9bd6192a8 prev 0x55d9bd619228 <line:702:1, col:9> col:5 used x 'int' cinit
| `-IntegerLiteral 0x55d9bd619310 <col:9> 'int' 0
|-VarDecl 0x55d9bd619340 <line:703:1, col:7> col:7 used x$flush_delayed '_Bool'
|-VarDecl 0x55d9bd6193c0 <line:704:1, col:5> col:5 used x$mem_tmp 'int'
|-VarDecl 0x55d9bd619438 <line:705:1, col:7> col:7 used x$r_buff0_thd0 '_Bool'
|-VarDecl 0x55d9bd6194b0 <line:706:1, col:7> col:7 used x$r_buff0_thd1 '_Bool'
|-VarDecl 0x55d9bd619528 <line:707:1, col:7> col:7 used x$r_buff0_thd2 '_Bool'
|-VarDecl 0x55d9bd6195a0 <line:708:1, col:7> col:7 used x$r_buff0_thd3 '_Bool'
|-VarDecl 0x55d9bd619618 <line:709:1, col:7> col:7 used x$r_buff0_thd4 '_Bool'
|-VarDecl 0x55d9bd619690 <line:710:1, col:7> col:7 used x$r_buff1_thd0 '_Bool'
|-VarDecl 0x55d9bd619708 <line:711:1, col:7> col:7 used x$r_buff1_thd1 '_Bool'
|-VarDecl 0x55d9bd619780 <line:712:1, col:7> col:7 used x$r_buff1_thd2 '_Bool'
|-VarDecl 0x55d9bd6197f8 <line:713:1, col:7> col:7 used x$r_buff1_thd3 '_Bool'
|-VarDecl 0x55d9bd619870 <line:714:1, col:7> col:7 used x$r_buff1_thd4 '_Bool'
|-VarDecl 0x55d9bd6198e8 <line:715:1, col:7> col:7 x$read_delayed '_Bool'
|-VarDecl 0x55d9bd619968 <line:716:1, col:6> col:6 x$read_delayed_var 'int *'
|-VarDecl 0x55d9bd6199e8 <line:717:1, col:5> col:5 used x$w_buff0 'int'
|-VarDecl 0x55d9bd619a60 <line:718:1, col:7> col:7 used x$w_buff0_used '_Bool'
|-VarDecl 0x55d9bd61ab20 <line:719:1, col:5> col:5 used x$w_buff1 'int'
|-VarDecl 0x55d9bd61ab98 <line:720:1, col:7> col:7 used x$w_buff1_used '_Bool'
|-VarDecl 0x55d9bd61ac18 <line:721:1, col:5> col:5 used y 'int'
|-VarDecl 0x55d9bd61ac98 prev 0x55d9bd61ac18 <line:722:1, col:9> col:5 used y 'int' cinit
| `-IntegerLiteral 0x55d9bd61ad00 <col:9> 'int' 0
|-VarDecl 0x55d9bd61ad30 <line:723:1, col:7> col:7 used weak$$choice0 '_Bool'
|-VarDecl 0x55d9bd61ada8 <line:724:1, col:7> col:7 used weak$$choice1 '_Bool'
|-VarDecl 0x55d9bd61ae20 <line:725:1, col:7> col:7 used weak$$choice2 '_Bool'
|-FunctionDecl 0x55d9bd61af38 prev 0x55d9bd617cf0 <line:726:1, line:753:1> line:726:8 used P0 'void *(void *)'
| |-ParmVarDecl 0x55d9bd61aea0 <col:11, col:17> col:17 arg 'void *'
| `-CompoundStmt 0x55d9bd61dea8 <line:727:1, line:753:1>
|   |-CallExpr 0x55d9bd61b048 <line:728:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x55d9bd61b030 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55d9bd61afe0 <col:3> 'void ()' Function 0x55d9bd5befa0 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x55d9bd61b0c0 <line:729:3, col:25> 'int' '='
|   | |-DeclRefExpr 0x55d9bd61b068 <col:3> 'int' lvalue Var 0x55d9bd618598 '__unbuffered_p0_EAX' 'int'
|   | `-ImplicitCastExpr 0x55d9bd61b0a8 <col:25> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x55d9bd61b088 <col:25> 'int' lvalue Var 0x55d9bd61ac98 'y' 'int'
|   |-CallExpr 0x55d9bd61b118 <line:730:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x55d9bd61b100 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55d9bd61b0e0 <col:3> 'void ()' Function 0x55d9bd5bf060 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x55d9bd61b170 <line:731:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x55d9bd61b158 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55d9bd61b138 <col:3> 'void ()' Function 0x55d9bd5befa0 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x55d9bd61b238 <line:732:3, col:42> '_Bool' '='
|   | |-DeclRefExpr 0x55d9bd61b190 <col:3> '_Bool' lvalue Var 0x55d9bd61ad30 'weak$$choice0' '_Bool'
|   | `-CallExpr 0x55d9bd61b218 <col:19, col:42> '_Bool'
|   |   `-ImplicitCastExpr 0x55d9bd61b200 <col:19> '_Bool (*)(void)' <FunctionToPointerDecay>
|   |     `-DeclRefExpr 0x55d9bd61b1b0 <col:19> '_Bool (void)' Function 0x55d9bd5be770 '__VERIFIER_nondet_bool' '_Bool (void)'
|   |-BinaryOperator 0x55d9bd61b2d0 <line:733:3, col:42> '_Bool' '='
|   | |-DeclRefExpr 0x55d9bd61b258 <col:3> '_Bool' lvalue Var 0x55d9bd61ae20 'weak$$choice2' '_Bool'
|   | `-CallExpr 0x55d9bd61b2b0 <col:19, col:42> '_Bool'
|   |   `-ImplicitCastExpr 0x55d9bd61b298 <col:19> '_Bool (*)(void)' <FunctionToPointerDecay>
|   |     `-DeclRefExpr 0x55d9bd61b278 <col:19> '_Bool (void)' Function 0x55d9bd5be770 '__VERIFIER_nondet_bool' '_Bool (void)'
|   |-BinaryOperator 0x55d9bd61b348 <line:734:3, col:21> '_Bool' '='
|   | |-DeclRefExpr 0x55d9bd61b2f0 <col:3> '_Bool' lvalue Var 0x55d9bd619340 'x$flush_delayed' '_Bool'
|   | `-ImplicitCastExpr 0x55d9bd61b330 <col:21> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x55d9bd61b310 <col:21> '_Bool' lvalue Var 0x55d9bd61ae20 'weak$$choice2' '_Bool'
|   |-BinaryOperator 0x55d9bd61b3c0 <line:735:3, col:15> 'int' '='
|   | |-DeclRefExpr 0x55d9bd61b368 <col:3> 'int' lvalue Var 0x55d9bd6193c0 'x$mem_tmp' 'int'
|   | `-ImplicitCastExpr 0x55d9bd61b3a8 <col:15> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x55d9bd61b388 <col:15> 'int' lvalue Var 0x55d9bd6192a8 'x' 'int'
|   |-BinaryOperator 0x55d9bd61b7f8 <line:736:3, col:162> 'int' '='
|   | |-DeclRefExpr 0x55d9bd61b3e0 <col:3> 'int' lvalue Var 0x55d9bd6192a8 'x' 'int'
|   | `-ConditionalOperator 0x55d9bd61b7c8 <col:7, col:162> 'int'
|   |   |-BinaryOperator 0x55d9bd61b5f0 <col:7, col:84> 'int' '||'
|   |   | |-BinaryOperator 0x55d9bd61b510 <col:7, col:46> 'int' '||'
|   |   | | |-UnaryOperator 0x55d9bd61b438 <col:7, col:8> 'int' prefix '!' cannot overflow
|   |   | | | `-ImplicitCastExpr 0x55d9bd61b420 <col:8> '_Bool' <LValueToRValue>
|   |   | | |   `-DeclRefExpr 0x55d9bd61b400 <col:8> '_Bool' lvalue Var 0x55d9bd619a60 'x$w_buff0_used' '_Bool'
|   |   | | `-BinaryOperator 0x55d9bd61b4f0 <col:26, col:46> 'int' '&&'
|   |   | |   |-UnaryOperator 0x55d9bd61b488 <col:26, col:27> 'int' prefix '!' cannot overflow
|   |   | |   | `-ImplicitCastExpr 0x55d9bd61b470 <col:27> '_Bool' <LValueToRValue>
|   |   | |   |   `-DeclRefExpr 0x55d9bd61b450 <col:27> '_Bool' lvalue Var 0x55d9bd6194b0 'x$r_buff0_thd1' '_Bool'
|   |   | |   `-UnaryOperator 0x55d9bd61b4d8 <col:45, col:46> 'int' prefix '!' cannot overflow
|   |   | |     `-ImplicitCastExpr 0x55d9bd61b4c0 <col:46> '_Bool' <LValueToRValue>
|   |   | |       `-DeclRefExpr 0x55d9bd61b4a0 <col:46> '_Bool' lvalue Var 0x55d9bd61ab98 'x$w_buff1_used' '_Bool'
|   |   | `-BinaryOperator 0x55d9bd61b5d0 <col:64, col:84> 'int' '&&'
|   |   |   |-UnaryOperator 0x55d9bd61b568 <col:64, col:65> 'int' prefix '!' cannot overflow
|   |   |   | `-ImplicitCastExpr 0x55d9bd61b550 <col:65> '_Bool' <LValueToRValue>
|   |   |   |   `-DeclRefExpr 0x55d9bd61b530 <col:65> '_Bool' lvalue Var 0x55d9bd6194b0 'x$r_buff0_thd1' '_Bool'
|   |   |   `-UnaryOperator 0x55d9bd61b5b8 <col:83, col:84> 'int' prefix '!' cannot overflow
|   |   |     `-ImplicitCastExpr 0x55d9bd61b5a0 <col:84> '_Bool' <LValueToRValue>
|   |   |       `-DeclRefExpr 0x55d9bd61b580 <col:84> '_Bool' lvalue Var 0x55d9bd619708 'x$r_buff1_thd1' '_Bool'
|   |   |-ImplicitCastExpr 0x55d9bd61b7b0 <col:101> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x55d9bd61b610 <col:101> 'int' lvalue Var 0x55d9bd6192a8 'x' 'int'
|   |   `-ParenExpr 0x55d9bd61b790 <col:105, col:162> 'int'
|   |     `-ConditionalOperator 0x55d9bd61b760 <col:106, col:153> 'int'
|   |       |-BinaryOperator 0x55d9bd61b6d0 <col:106, col:124> 'int' '&&'
|   |       | |-ImplicitCastExpr 0x55d9bd61b688 <col:106> 'int' <IntegralCast>
|   |       | | `-ImplicitCastExpr 0x55d9bd61b670 <col:106> '_Bool' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x55d9bd61b630 <col:106> '_Bool' lvalue Var 0x55d9bd619a60 'x$w_buff0_used' '_Bool'
|   |       | `-ImplicitCastExpr 0x55d9bd61b6b8 <col:124> 'int' <IntegralCast>
|   |       |   `-ImplicitCastExpr 0x55d9bd61b6a0 <col:124> '_Bool' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x55d9bd61b650 <col:124> '_Bool' lvalue Var 0x55d9bd6194b0 'x$r_buff0_thd1' '_Bool'
|   |       |-ImplicitCastExpr 0x55d9bd61b730 <col:141> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x55d9bd61b6f0 <col:141> 'int' lvalue Var 0x55d9bd6199e8 'x$w_buff0' 'int'
|   |       `-ImplicitCastExpr 0x55d9bd61b748 <col:153> 'int' <LValueToRValue>
|   |         `-DeclRefExpr 0x55d9bd61b710 <col:153> 'int' lvalue Var 0x55d9bd61ab20 'x$w_buff1' 'int'
|   |-BinaryOperator 0x55d9bd61bd20 <line:737:3, col:208> 'int' '='
|   | |-DeclRefExpr 0x55d9bd61b818 <col:3> 'int' lvalue Var 0x55d9bd6199e8 'x$w_buff0' 'int'
|   | `-ConditionalOperator 0x55d9bd61bcf0 <col:15, col:208> 'int'
|   |   |-ImplicitCastExpr 0x55d9bd61bcc0 <col:15> 'int' <IntegralCast>
|   |   | `-ImplicitCastExpr 0x55d9bd61bca8 <col:15> '_Bool' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x55d9bd61b838 <col:15> '_Bool' lvalue Var 0x55d9bd61ae20 'weak$$choice2' '_Bool'
|   |   |-ImplicitCastExpr 0x55d9bd61bcd8 <col:31> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x55d9bd61b858 <col:31> 'int' lvalue Var 0x55d9bd6199e8 'x$w_buff0' 'int'
|   |   `-ParenExpr 0x55d9bd61bc88 <col:43, col:208> 'int'
|   |     `-ConditionalOperator 0x55d9bd61bc58 <col:44, col:207> 'int'
|   |       |-BinaryOperator 0x55d9bd61ba68 <col:44, col:121> 'int' '||'
|   |       | |-BinaryOperator 0x55d9bd61b988 <col:44, col:83> 'int' '||'
|   |       | | |-UnaryOperator 0x55d9bd61b8b0 <col:44, col:45> 'int' prefix '!' cannot overflow
|   |       | | | `-ImplicitCastExpr 0x55d9bd61b898 <col:45> '_Bool' <LValueToRValue>
|   |       | | |   `-DeclRefExpr 0x55d9bd61b878 <col:45> '_Bool' lvalue Var 0x55d9bd619a60 'x$w_buff0_used' '_Bool'
|   |       | | `-BinaryOperator 0x55d9bd61b968 <col:63, col:83> 'int' '&&'
|   |       | |   |-UnaryOperator 0x55d9bd61b900 <col:63, col:64> 'int' prefix '!' cannot overflow
|   |       | |   | `-ImplicitCastExpr 0x55d9bd61b8e8 <col:64> '_Bool' <LValueToRValue>
|   |       | |   |   `-DeclRefExpr 0x55d9bd61b8c8 <col:64> '_Bool' lvalue Var 0x55d9bd6194b0 'x$r_buff0_thd1' '_Bool'
|   |       | |   `-UnaryOperator 0x55d9bd61b950 <col:82, col:83> 'int' prefix '!' cannot overflow
|   |       | |     `-ImplicitCastExpr 0x55d9bd61b938 <col:83> '_Bool' <LValueToRValue>
|   |       | |       `-DeclRefExpr 0x55d9bd61b918 <col:83> '_Bool' lvalue Var 0x55d9bd61ab98 'x$w_buff1_used' '_Bool'
|   |       | `-BinaryOperator 0x55d9bd61ba48 <col:101, col:121> 'int' '&&'
|   |       |   |-UnaryOperator 0x55d9bd61b9e0 <col:101, col:102> 'int' prefix '!' cannot overflow
|   |       |   | `-ImplicitCastExpr 0x55d9bd61b9c8 <col:102> '_Bool' <LValueToRValue>
|   |       |   |   `-DeclRefExpr 0x55d9bd61b9a8 <col:102> '_Bool' lvalue Var 0x55d9bd6194b0 'x$r_buff0_thd1' '_Bool'
|   |       |   `-UnaryOperator 0x55d9bd61ba30 <col:120, col:121> 'int' prefix '!' cannot overflow
|   |       |     `-ImplicitCastExpr 0x55d9bd61ba18 <col:121> '_Bool' <LValueToRValue>
|   |       |       `-DeclRefExpr 0x55d9bd61b9f8 <col:121> '_Bool' lvalue Var 0x55d9bd619708 'x$r_buff1_thd1' '_Bool'
|   |       |-ImplicitCastExpr 0x55d9bd61bc40 <col:138> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x55d9bd61ba88 <col:138> 'int' lvalue Var 0x55d9bd6199e8 'x$w_buff0' 'int'
|   |       `-ParenExpr 0x55d9bd61bc20 <col:150, col:207> 'int'
|   |         `-ConditionalOperator 0x55d9bd61bbf0 <col:151, col:198> 'int'
|   |           |-BinaryOperator 0x55d9bd61bb60 <col:151, col:169> 'int' '&&'
|   |           | |-ImplicitCastExpr 0x55d9bd61bb00 <col:151> 'int' <IntegralCast>
|   |           | | `-ImplicitCastExpr 0x55d9bd61bae8 <col:151> '_Bool' <LValueToRValue>
|   |           | |   `-DeclRefExpr 0x55d9bd61baa8 <col:151> '_Bool' lvalue Var 0x55d9bd619a60 'x$w_buff0_used' '_Bool'
|   |           | `-ImplicitCastExpr 0x55d9bd61bb48 <col:169> 'int' <IntegralCast>
|   |           |   `-ImplicitCastExpr 0x55d9bd61bb30 <col:169> '_Bool' <LValueToRValue>
|   |           |     `-DeclRefExpr 0x55d9bd61bac8 <col:169> '_Bool' lvalue Var 0x55d9bd6194b0 'x$r_buff0_thd1' '_Bool'
|   |           |-ImplicitCastExpr 0x55d9bd61bbc0 <col:186> 'int' <LValueToRValue>
|   |           | `-DeclRefExpr 0x55d9bd61bb80 <col:186> 'int' lvalue Var 0x55d9bd6199e8 'x$w_buff0' 'int'
|   |           `-ImplicitCastExpr 0x55d9bd61bbd8 <col:198> 'int' <LValueToRValue>
|   |             `-DeclRefExpr 0x55d9bd61bba0 <col:198> 'int' lvalue Var 0x55d9bd6199e8 'x$w_buff0' 'int'
|   |-BinaryOperator 0x55d9bd61c230 <line:738:3, col:208> 'int' '='
|   | |-DeclRefExpr 0x55d9bd61bd40 <col:3> 'int' lvalue Var 0x55d9bd61ab20 'x$w_buff1' 'int'
|   | `-ConditionalOperator 0x55d9bd61c200 <col:15, col:208> 'int'
|   |   |-ImplicitCastExpr 0x55d9bd61c1d0 <col:15> 'int' <IntegralCast>
|   |   | `-ImplicitCastExpr 0x55d9bd61c1b8 <col:15> '_Bool' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x55d9bd61bd60 <col:15> '_Bool' lvalue Var 0x55d9bd61ae20 'weak$$choice2' '_Bool'
|   |   |-ImplicitCastExpr 0x55d9bd61c1e8 <col:31> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x55d9bd61bd80 <col:31> 'int' lvalue Var 0x55d9bd61ab20 'x$w_buff1' 'int'
|   |   `-ParenExpr 0x55d9bd61c198 <col:43, col:208> 'int'
|   |     `-ConditionalOperator 0x55d9bd61c168 <col:44, col:207> 'int'
|   |       |-BinaryOperator 0x55d9bd61bf90 <col:44, col:121> 'int' '||'
|   |       | |-BinaryOperator 0x55d9bd61beb0 <col:44, col:83> 'int' '||'
|   |       | | |-UnaryOperator 0x55d9bd61bdd8 <col:44, col:45> 'int' prefix '!' cannot overflow
|   |       | | | `-ImplicitCastExpr 0x55d9bd61bdc0 <col:45> '_Bool' <LValueToRValue>
|   |       | | |   `-DeclRefExpr 0x55d9bd61bda0 <col:45> '_Bool' lvalue Var 0x55d9bd619a60 'x$w_buff0_used' '_Bool'
|   |       | | `-BinaryOperator 0x55d9bd61be90 <col:63, col:83> 'int' '&&'
|   |       | |   |-UnaryOperator 0x55d9bd61be28 <col:63, col:64> 'int' prefix '!' cannot overflow
|   |       | |   | `-ImplicitCastExpr 0x55d9bd61be10 <col:64> '_Bool' <LValueToRValue>
|   |       | |   |   `-DeclRefExpr 0x55d9bd61bdf0 <col:64> '_Bool' lvalue Var 0x55d9bd6194b0 'x$r_buff0_thd1' '_Bool'
|   |       | |   `-UnaryOperator 0x55d9bd61be78 <col:82, col:83> 'int' prefix '!' cannot overflow
|   |       | |     `-ImplicitCastExpr 0x55d9bd61be60 <col:83> '_Bool' <LValueToRValue>
|   |       | |       `-DeclRefExpr 0x55d9bd61be40 <col:83> '_Bool' lvalue Var 0x55d9bd61ab98 'x$w_buff1_used' '_Bool'
|   |       | `-BinaryOperator 0x55d9bd61bf70 <col:101, col:121> 'int' '&&'
|   |       |   |-UnaryOperator 0x55d9bd61bf08 <col:101, col:102> 'int' prefix '!' cannot overflow
|   |       |   | `-ImplicitCastExpr 0x55d9bd61bef0 <col:102> '_Bool' <LValueToRValue>
|   |       |   |   `-DeclRefExpr 0x55d9bd61bed0 <col:102> '_Bool' lvalue Var 0x55d9bd6194b0 'x$r_buff0_thd1' '_Bool'
|   |       |   `-UnaryOperator 0x55d9bd61bf58 <col:120, col:121> 'int' prefix '!' cannot overflow
|   |       |     `-ImplicitCastExpr 0x55d9bd61bf40 <col:121> '_Bool' <LValueToRValue>
|   |       |       `-DeclRefExpr 0x55d9bd61bf20 <col:121> '_Bool' lvalue Var 0x55d9bd619708 'x$r_buff1_thd1' '_Bool'
|   |       |-ImplicitCastExpr 0x55d9bd61c150 <col:138> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x55d9bd61bfb0 <col:138> 'int' lvalue Var 0x55d9bd61ab20 'x$w_buff1' 'int'
|   |       `-ParenExpr 0x55d9bd61c130 <col:150, col:207> 'int'
|   |         `-ConditionalOperator 0x55d9bd61c100 <col:151, col:198> 'int'
|   |           |-BinaryOperator 0x55d9bd61c070 <col:151, col:169> 'int' '&&'
|   |           | |-ImplicitCastExpr 0x55d9bd61c028 <col:151> 'int' <IntegralCast>
|   |           | | `-ImplicitCastExpr 0x55d9bd61c010 <col:151> '_Bool' <LValueToRValue>
|   |           | |   `-DeclRefExpr 0x55d9bd61bfd0 <col:151> '_Bool' lvalue Var 0x55d9bd619a60 'x$w_buff0_used' '_Bool'
|   |           | `-ImplicitCastExpr 0x55d9bd61c058 <col:169> 'int' <IntegralCast>
|   |           |   `-ImplicitCastExpr 0x55d9bd61c040 <col:169> '_Bool' <LValueToRValue>
|   |           |     `-DeclRefExpr 0x55d9bd61bff0 <col:169> '_Bool' lvalue Var 0x55d9bd6194b0 'x$r_buff0_thd1' '_Bool'
|   |           |-ImplicitCastExpr 0x55d9bd61c0d0 <col:186> 'int' <LValueToRValue>
|   |           | `-DeclRefExpr 0x55d9bd61c090 <col:186> 'int' lvalue Var 0x55d9bd61ab20 'x$w_buff1' 'int'
|   |           `-ImplicitCastExpr 0x55d9bd61c0e8 <col:198> 'int' <LValueToRValue>
|   |             `-DeclRefExpr 0x55d9bd61c0b0 <col:198> 'int' lvalue Var 0x55d9bd61ab20 'x$w_buff1' 'int'
|   |-BinaryOperator 0x55d9bd61c7d8 <line:739:3, col:227> '_Bool' '='
|   | |-DeclRefExpr 0x55d9bd61c250 <col:3> '_Bool' lvalue Var 0x55d9bd619a60 'x$w_buff0_used' '_Bool'
|   | `-ImplicitCastExpr 0x55d9bd61c7c0 <col:20, col:227> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55d9bd61c790 <col:20, col:227> 'int'
|   |     |-ImplicitCastExpr 0x55d9bd61c748 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x55d9bd61c730 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x55d9bd61c270 <col:20> '_Bool' lvalue Var 0x55d9bd61ae20 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x55d9bd61c778 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x55d9bd61c760 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x55d9bd61c290 <col:36> '_Bool' lvalue Var 0x55d9bd619a60 'x$w_buff0_used' '_Bool'
|   |     `-ParenExpr 0x55d9bd61c710 <col:53, col:227> 'int'
|   |       `-ConditionalOperator 0x55d9bd61c6e0 <col:54, col:226> 'int'
|   |         |-BinaryOperator 0x55d9bd61c4a0 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x55d9bd61c3c0 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x55d9bd61c2e8 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x55d9bd61c2d0 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x55d9bd61c2b0 <col:55> '_Bool' lvalue Var 0x55d9bd619a60 'x$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x55d9bd61c3a0 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x55d9bd61c338 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x55d9bd61c320 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x55d9bd61c300 <col:74> '_Bool' lvalue Var 0x55d9bd6194b0 'x$r_buff0_thd1' '_Bool'
|   |         | |   `-UnaryOperator 0x55d9bd61c388 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x55d9bd61c370 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x55d9bd61c350 <col:93> '_Bool' lvalue Var 0x55d9bd61ab98 'x$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x55d9bd61c480 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x55d9bd61c418 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x55d9bd61c400 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x55d9bd61c3e0 <col:112> '_Bool' lvalue Var 0x55d9bd6194b0 'x$r_buff0_thd1' '_Bool'
|   |         |   `-UnaryOperator 0x55d9bd61c468 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x55d9bd61c450 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x55d9bd61c430 <col:131> '_Bool' lvalue Var 0x55d9bd619708 'x$r_buff1_thd1' '_Bool'
|   |         |-ImplicitCastExpr 0x55d9bd61c6c8 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x55d9bd61c6b0 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x55d9bd61c4c0 <col:148> '_Bool' lvalue Var 0x55d9bd619a60 'x$w_buff0_used' '_Bool'
|   |         `-ParenExpr 0x55d9bd61c690 <col:165, col:226> 'int'
|   |           `-ConditionalOperator 0x55d9bd61c660 <col:166, col:212> 'int'
|   |             |-BinaryOperator 0x55d9bd61c580 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x55d9bd61c538 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x55d9bd61c520 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x55d9bd61c4e0 <col:166> '_Bool' lvalue Var 0x55d9bd619a60 'x$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x55d9bd61c568 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x55d9bd61c550 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x55d9bd61c500 <col:184> '_Bool' lvalue Var 0x55d9bd6194b0 'x$r_buff0_thd1' '_Bool'
|   |             |-ImplicitCastExpr 0x55d9bd61c618 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x55d9bd61c5d0 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x55d9bd61c5a0 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x55d9bd61c648 <col:212> 'int' <IntegralCast>
|   |               `-ImplicitCastExpr 0x55d9bd61c630 <col:212> '_Bool' <LValueToRValue>
|   |                 `-DeclRefExpr 0x55d9bd61c5f8 <col:212> '_Bool' lvalue Var 0x55d9bd619a60 'x$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x55d9bd61cdb8 <line:740:3, col:221> '_Bool' '='
|   | |-DeclRefExpr 0x55d9bd61c7f8 <col:3> '_Bool' lvalue Var 0x55d9bd61ab98 'x$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x55d9bd61cda0 <col:20, col:221> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55d9bd61cd70 <col:20, col:221> 'int'
|   |     |-ImplicitCastExpr 0x55d9bd61cd28 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x55d9bd61cd10 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x55d9bd61c818 <col:20> '_Bool' lvalue Var 0x55d9bd61ae20 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x55d9bd61cd58 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x55d9bd61cd40 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x55d9bd61c838 <col:36> '_Bool' lvalue Var 0x55d9bd61ab98 'x$w_buff1_used' '_Bool'
|   |     `-ParenExpr 0x55d9bd61ccf0 <col:53, col:221> 'int'
|   |       `-ConditionalOperator 0x55d9bd61ccc0 <col:54, col:220> 'int'
|   |         |-BinaryOperator 0x55d9bd61ca48 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x55d9bd61c968 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x55d9bd61c890 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x55d9bd61c878 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x55d9bd61c858 <col:55> '_Bool' lvalue Var 0x55d9bd619a60 'x$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x55d9bd61c948 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x55d9bd61c8e0 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x55d9bd61c8c8 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x55d9bd61c8a8 <col:74> '_Bool' lvalue Var 0x55d9bd6194b0 'x$r_buff0_thd1' '_Bool'
|   |         | |   `-UnaryOperator 0x55d9bd61c930 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x55d9bd61c918 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x55d9bd61c8f8 <col:93> '_Bool' lvalue Var 0x55d9bd61ab98 'x$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x55d9bd61ca28 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x55d9bd61c9c0 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x55d9bd61c9a8 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x55d9bd61c988 <col:112> '_Bool' lvalue Var 0x55d9bd6194b0 'x$r_buff0_thd1' '_Bool'
|   |         |   `-UnaryOperator 0x55d9bd61ca10 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x55d9bd61c9f8 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x55d9bd61c9d8 <col:131> '_Bool' lvalue Var 0x55d9bd619708 'x$r_buff1_thd1' '_Bool'
|   |         |-ImplicitCastExpr 0x55d9bd61cca8 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x55d9bd61cc90 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x55d9bd61ca68 <col:148> '_Bool' lvalue Var 0x55d9bd61ab98 'x$w_buff1_used' '_Bool'
|   |         `-ParenExpr 0x55d9bd61cc70 <col:165, col:220> 'int'
|   |           `-ConditionalOperator 0x55d9bd61cc40 <col:166, col:219> 'int'
|   |             |-BinaryOperator 0x55d9bd61cb40 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x55d9bd61cae0 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x55d9bd61cac8 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x55d9bd61ca88 <col:166> '_Bool' lvalue Var 0x55d9bd619a60 'x$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x55d9bd61cb10 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x55d9bd61caf8 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x55d9bd61caa8 <col:184> '_Bool' lvalue Var 0x55d9bd6194b0 'x$r_buff0_thd1' '_Bool'
|   |             |-ImplicitCastExpr 0x55d9bd61cc10 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x55d9bd61cb90 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x55d9bd61cb60 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x55d9bd61cc28 <col:212, col:219> 'int' <IntegralCast>
|   |               `-CStyleCastExpr 0x55d9bd61cbe8 <col:212, col:219> '_Bool' <IntegralToBoolean>
|   |                 `-IntegerLiteral 0x55d9bd61cbb8 <col:219> 'int' 0
|   |-BinaryOperator 0x55d9bd61d360 <line:741:3, col:227> '_Bool' '='
|   | |-DeclRefExpr 0x55d9bd61cdd8 <col:3> '_Bool' lvalue Var 0x55d9bd6194b0 'x$r_buff0_thd1' '_Bool'
|   | `-ImplicitCastExpr 0x55d9bd61d348 <col:20, col:227> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55d9bd61d318 <col:20, col:227> 'int'
|   |     |-ImplicitCastExpr 0x55d9bd61d2d0 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x55d9bd61d2b8 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x55d9bd61cdf8 <col:20> '_Bool' lvalue Var 0x55d9bd61ae20 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x55d9bd61d300 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x55d9bd61d2e8 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x55d9bd61ce18 <col:36> '_Bool' lvalue Var 0x55d9bd6194b0 'x$r_buff0_thd1' '_Bool'
|   |     `-ParenExpr 0x55d9bd61d298 <col:53, col:227> 'int'
|   |       `-ConditionalOperator 0x55d9bd61d268 <col:54, col:226> 'int'
|   |         |-BinaryOperator 0x55d9bd61d028 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x55d9bd61cf48 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x55d9bd61ce70 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x55d9bd61ce58 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x55d9bd61ce38 <col:55> '_Bool' lvalue Var 0x55d9bd619a60 'x$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x55d9bd61cf28 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x55d9bd61cec0 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x55d9bd61cea8 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x55d9bd61ce88 <col:74> '_Bool' lvalue Var 0x55d9bd6194b0 'x$r_buff0_thd1' '_Bool'
|   |         | |   `-UnaryOperator 0x55d9bd61cf10 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x55d9bd61cef8 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x55d9bd61ced8 <col:93> '_Bool' lvalue Var 0x55d9bd61ab98 'x$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x55d9bd61d008 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x55d9bd61cfa0 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x55d9bd61cf88 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x55d9bd61cf68 <col:112> '_Bool' lvalue Var 0x55d9bd6194b0 'x$r_buff0_thd1' '_Bool'
|   |         |   `-UnaryOperator 0x55d9bd61cff0 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x55d9bd61cfd8 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x55d9bd61cfb8 <col:131> '_Bool' lvalue Var 0x55d9bd619708 'x$r_buff1_thd1' '_Bool'
|   |         |-ImplicitCastExpr 0x55d9bd61d250 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x55d9bd61d238 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x55d9bd61d048 <col:148> '_Bool' lvalue Var 0x55d9bd6194b0 'x$r_buff0_thd1' '_Bool'
|   |         `-ParenExpr 0x55d9bd61d218 <col:165, col:226> 'int'
|   |           `-ConditionalOperator 0x55d9bd61d1e8 <col:166, col:212> 'int'
|   |             |-BinaryOperator 0x55d9bd61d108 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x55d9bd61d0c0 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x55d9bd61d0a8 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x55d9bd61d068 <col:166> '_Bool' lvalue Var 0x55d9bd619a60 'x$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x55d9bd61d0f0 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x55d9bd61d0d8 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x55d9bd61d088 <col:184> '_Bool' lvalue Var 0x55d9bd6194b0 'x$r_buff0_thd1' '_Bool'
|   |             |-ImplicitCastExpr 0x55d9bd61d1a0 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x55d9bd61d158 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x55d9bd61d128 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x55d9bd61d1d0 <col:212> 'int' <IntegralCast>
|   |               `-ImplicitCastExpr 0x55d9bd61d1b8 <col:212> '_Bool' <LValueToRValue>
|   |                 `-DeclRefExpr 0x55d9bd61d180 <col:212> '_Bool' lvalue Var 0x55d9bd6194b0 'x$r_buff0_thd1' '_Bool'
|   |-BinaryOperator 0x55d9bd61d928 <line:742:3, col:221> '_Bool' '='
|   | |-DeclRefExpr 0x55d9bd61d380 <col:3> '_Bool' lvalue Var 0x55d9bd619708 'x$r_buff1_thd1' '_Bool'
|   | `-ImplicitCastExpr 0x55d9bd61d910 <col:20, col:221> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55d9bd61d8e0 <col:20, col:221> 'int'
|   |     |-ImplicitCastExpr 0x55d9bd61d898 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x55d9bd61d880 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x55d9bd61d3a0 <col:20> '_Bool' lvalue Var 0x55d9bd61ae20 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x55d9bd61d8c8 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x55d9bd61d8b0 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x55d9bd61d3c0 <col:36> '_Bool' lvalue Var 0x55d9bd619708 'x$r_buff1_thd1' '_Bool'
|   |     `-ParenExpr 0x55d9bd61d860 <col:53, col:221> 'int'
|   |       `-ConditionalOperator 0x55d9bd61d830 <col:54, col:220> 'int'
|   |         |-BinaryOperator 0x55d9bd61d5d0 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x55d9bd61d4f0 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x55d9bd61d418 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x55d9bd61d400 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x55d9bd61d3e0 <col:55> '_Bool' lvalue Var 0x55d9bd619a60 'x$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x55d9bd61d4d0 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x55d9bd61d468 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x55d9bd61d450 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x55d9bd61d430 <col:74> '_Bool' lvalue Var 0x55d9bd6194b0 'x$r_buff0_thd1' '_Bool'
|   |         | |   `-UnaryOperator 0x55d9bd61d4b8 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x55d9bd61d4a0 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x55d9bd61d480 <col:93> '_Bool' lvalue Var 0x55d9bd61ab98 'x$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x55d9bd61d5b0 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x55d9bd61d548 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x55d9bd61d530 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x55d9bd61d510 <col:112> '_Bool' lvalue Var 0x55d9bd6194b0 'x$r_buff0_thd1' '_Bool'
|   |         |   `-UnaryOperator 0x55d9bd61d598 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x55d9bd61d580 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x55d9bd61d560 <col:131> '_Bool' lvalue Var 0x55d9bd619708 'x$r_buff1_thd1' '_Bool'
|   |         |-ImplicitCastExpr 0x55d9bd61d818 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x55d9bd61d800 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x55d9bd61d5f0 <col:148> '_Bool' lvalue Var 0x55d9bd619708 'x$r_buff1_thd1' '_Bool'
|   |         `-ParenExpr 0x55d9bd61d7e0 <col:165, col:220> 'int'
|   |           `-ConditionalOperator 0x55d9bd61d7b0 <col:166, col:219> 'int'
|   |             |-BinaryOperator 0x55d9bd61d6b0 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x55d9bd61d668 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x55d9bd61d650 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x55d9bd61d610 <col:166> '_Bool' lvalue Var 0x55d9bd619a60 'x$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x55d9bd61d698 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x55d9bd61d680 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x55d9bd61d630 <col:184> '_Bool' lvalue Var 0x55d9bd6194b0 'x$r_buff0_thd1' '_Bool'
|   |             |-ImplicitCastExpr 0x55d9bd61d780 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x55d9bd61d700 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x55d9bd61d6d0 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x55d9bd61d798 <col:212, col:219> 'int' <IntegralCast>
|   |               `-CStyleCastExpr 0x55d9bd61d758 <col:212, col:219> '_Bool' <IntegralToBoolean>
|   |                 `-IntegerLiteral 0x55d9bd61d728 <col:219> 'int' 0
|   |-BinaryOperator 0x55d9bd61d9a0 <line:743:3, col:25> 'int' '='
|   | |-DeclRefExpr 0x55d9bd61d948 <col:3> 'int' lvalue Var 0x55d9bd6186b8 '__unbuffered_p0_EBX' 'int'
|   | `-ImplicitCastExpr 0x55d9bd61d988 <col:25> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x55d9bd61d968 <col:25> 'int' lvalue Var 0x55d9bd6192a8 'x' 'int'
|   |-BinaryOperator 0x55d9bd61dad0 <line:744:3, col:37> 'int' '='
|   | |-DeclRefExpr 0x55d9bd61d9c0 <col:3> 'int' lvalue Var 0x55d9bd6192a8 'x' 'int'
|   | `-ConditionalOperator 0x55d9bd61daa0 <col:7, col:37> 'int'
|   |   |-ImplicitCastExpr 0x55d9bd61da58 <col:7> 'int' <IntegralCast>
|   |   | `-ImplicitCastExpr 0x55d9bd61da40 <col:7> '_Bool' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x55d9bd61d9e0 <col:7> '_Bool' lvalue Var 0x55d9bd619340 'x$flush_delayed' '_Bool'
|   |   |-ImplicitCastExpr 0x55d9bd61da70 <col:25> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x55d9bd61da00 <col:25> 'int' lvalue Var 0x55d9bd6193c0 'x$mem_tmp' 'int'
|   |   `-ImplicitCastExpr 0x55d9bd61da88 <col:37> 'int' <LValueToRValue>
|   |     `-DeclRefExpr 0x55d9bd61da20 <col:37> 'int' lvalue Var 0x55d9bd6192a8 'x' 'int'
|   |-BinaryOperator 0x55d9bd61db78 <line:745:3, col:28> '_Bool' '='
|   | |-DeclRefExpr 0x55d9bd61daf0 <col:3> '_Bool' lvalue Var 0x55d9bd619340 'x$flush_delayed' '_Bool'
|   | `-CStyleCastExpr 0x55d9bd61db50 <col:21, col:28> '_Bool' <IntegralToBoolean>
|   |   `-IntegerLiteral 0x55d9bd61db10 <col:28> 'int' 0
|   |-CallExpr 0x55d9bd61dbd0 <line:746:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x55d9bd61dbb8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55d9bd61db98 <col:3> 'void ()' Function 0x55d9bd5bf060 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x55d9bd61dc28 <line:747:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x55d9bd61dc10 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55d9bd61dbf0 <col:3> 'void ()' Function 0x55d9bd5befa0 '__VERIFIER_atomic_begin' 'void ()'
|   |-CallExpr 0x55d9bd61dc80 <line:748:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x55d9bd61dc68 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55d9bd61dc48 <col:3> 'void ()' Function 0x55d9bd5bf060 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x55d9bd61dcd8 <line:749:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x55d9bd61dcc0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55d9bd61dca0 <col:3> 'void ()' Function 0x55d9bd5befa0 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x55d9bd61dd90 <line:750:3, col:41> 'int' '='
|   | |-DeclRefExpr 0x55d9bd61dcf8 <col:3> 'int' lvalue Var 0x55d9bd618478 '__unbuffered_cnt' 'int'
|   | `-BinaryOperator 0x55d9bd61dd70 <col:22, col:41> 'int' '+'
|   |   |-ImplicitCastExpr 0x55d9bd61dd58 <col:22> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x55d9bd61dd18 <col:22> 'int' lvalue Var 0x55d9bd618478 '__unbuffered_cnt' 'int'
|   |   `-IntegerLiteral 0x55d9bd61dd38 <col:41> 'int' 1
|   |-CallExpr 0x55d9bd61dde8 <line:751:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x55d9bd61ddd0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55d9bd61ddb0 <col:3> 'void ()' Function 0x55d9bd5bf060 '__VERIFIER_atomic_end' 'void ()'
|   `-ReturnStmt 0x55d9bd61de98 <line:752:3, col:36>
|     `-CallExpr 0x55d9bd61de78 <col:10, col:36> 'void *'
|       `-ImplicitCastExpr 0x55d9bd61de60 <col:10> 'void *(*)(void)' <FunctionToPointerDecay>
|         `-DeclRefExpr 0x55d9bd61de08 <col:10> 'void *(void)' Function 0x55d9bd5beab8 '__VERIFIER_nondet_pointer' 'void *(void)'
|-FunctionDecl 0x55d9bd61e030 prev 0x55d9bd617e48 <line:754:1, line:770:1> line:754:8 used P1 'void *(void *)'
| |-ParmVarDecl 0x55d9bd61df98 <col:11, col:17> col:17 arg 'void *'
| `-CompoundStmt 0x55d9bd61f140 <line:755:1, line:770:1>
|   |-CallExpr 0x55d9bd61e110 <line:756:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x55d9bd61e0f8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55d9bd61e0d8 <col:3> 'void ()' Function 0x55d9bd5befa0 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x55d9bd61e170 <line:757:3, col:7> 'int' '='
|   | |-DeclRefExpr 0x55d9bd61e130 <col:3> 'int' lvalue Var 0x55d9bd6192a8 'x' 'int'
|   | `-IntegerLiteral 0x55d9bd61e150 <col:7> 'int' 1
|   |-CallExpr 0x55d9bd61e1c8 <line:758:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x55d9bd61e1b0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55d9bd61e190 <col:3> 'void ()' Function 0x55d9bd5bf060 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x55d9bd61e220 <line:759:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x55d9bd61e208 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55d9bd61e1e8 <col:3> 'void ()' Function 0x55d9bd5befa0 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x55d9bd61e508 <line:760:3, col:103> 'int' '='
|   | |-DeclRefExpr 0x55d9bd61e240 <col:3> 'int' lvalue Var 0x55d9bd6192a8 'x' 'int'
|   | `-ConditionalOperator 0x55d9bd61e4d8 <col:7, col:103> 'int'
|   |   |-BinaryOperator 0x55d9bd61e300 <col:7, col:25> 'int' '&&'
|   |   | |-ImplicitCastExpr 0x55d9bd61e2b8 <col:7> 'int' <IntegralCast>
|   |   | | `-ImplicitCastExpr 0x55d9bd61e2a0 <col:7> '_Bool' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x55d9bd61e260 <col:7> '_Bool' lvalue Var 0x55d9bd619a60 'x$w_buff0_used' '_Bool'
|   |   | `-ImplicitCastExpr 0x55d9bd61e2e8 <col:25> 'int' <IntegralCast>
|   |   |   `-ImplicitCastExpr 0x55d9bd61e2d0 <col:25> '_Bool' <LValueToRValue>
|   |   |     `-DeclRefExpr 0x55d9bd61e280 <col:25> '_Bool' lvalue Var 0x55d9bd619528 'x$r_buff0_thd2' '_Bool'
|   |   |-ImplicitCastExpr 0x55d9bd61e4c0 <col:42> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x55d9bd61e320 <col:42> 'int' lvalue Var 0x55d9bd6199e8 'x$w_buff0' 'int'
|   |   `-ParenExpr 0x55d9bd61e4a0 <col:54, col:103> 'int'
|   |     `-ConditionalOperator 0x55d9bd61e470 <col:55, col:102> 'int'
|   |       |-BinaryOperator 0x55d9bd61e3e0 <col:55, col:73> 'int' '&&'
|   |       | |-ImplicitCastExpr 0x55d9bd61e398 <col:55> 'int' <IntegralCast>
|   |       | | `-ImplicitCastExpr 0x55d9bd61e380 <col:55> '_Bool' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x55d9bd61e340 <col:55> '_Bool' lvalue Var 0x55d9bd61ab98 'x$w_buff1_used' '_Bool'
|   |       | `-ImplicitCastExpr 0x55d9bd61e3c8 <col:73> 'int' <IntegralCast>
|   |       |   `-ImplicitCastExpr 0x55d9bd61e3b0 <col:73> '_Bool' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x55d9bd61e360 <col:73> '_Bool' lvalue Var 0x55d9bd619780 'x$r_buff1_thd2' '_Bool'
|   |       |-ImplicitCastExpr 0x55d9bd61e440 <col:90> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x55d9bd61e400 <col:90> 'int' lvalue Var 0x55d9bd61ab20 'x$w_buff1' 'int'
|   |       `-ImplicitCastExpr 0x55d9bd61e458 <col:102> 'int' <LValueToRValue>
|   |         `-DeclRefExpr 0x55d9bd61e420 <col:102> 'int' lvalue Var 0x55d9bd6192a8 'x' 'int'
|   |-BinaryOperator 0x55d9bd61e710 <line:761:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x55d9bd61e528 <col:3> '_Bool' lvalue Var 0x55d9bd619a60 'x$w_buff0_used' '_Bool'
|   | `-ImplicitCastExpr 0x55d9bd61e6f8 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55d9bd61e6c8 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x55d9bd61e5e8 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x55d9bd61e5a0 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x55d9bd61e588 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x55d9bd61e548 <col:20> '_Bool' lvalue Var 0x55d9bd619a60 'x$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x55d9bd61e5d0 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x55d9bd61e5b8 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x55d9bd61e568 <col:38> '_Bool' lvalue Var 0x55d9bd619528 'x$r_buff0_thd2' '_Bool'
|   |     |-ImplicitCastExpr 0x55d9bd61e680 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x55d9bd61e638 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x55d9bd61e608 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x55d9bd61e6b0 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x55d9bd61e698 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x55d9bd61e660 <col:66> '_Bool' lvalue Var 0x55d9bd619a60 'x$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x55d9bd61e9f8 <line:762:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x55d9bd61e730 <col:3> '_Bool' lvalue Var 0x55d9bd61ab98 'x$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x55d9bd61e9e0 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55d9bd61e9b0 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x55d9bd61e8d0 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x55d9bd61e7f0 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x55d9bd61e7a8 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x55d9bd61e790 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x55d9bd61e750 <col:20> '_Bool' lvalue Var 0x55d9bd619a60 'x$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x55d9bd61e7d8 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x55d9bd61e7c0 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x55d9bd61e770 <col:38> '_Bool' lvalue Var 0x55d9bd619528 'x$r_buff0_thd2' '_Bool'
|   |     | `-BinaryOperator 0x55d9bd61e8b0 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x55d9bd61e868 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x55d9bd61e850 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x55d9bd61e810 <col:56> '_Bool' lvalue Var 0x55d9bd61ab98 'x$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x55d9bd61e898 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x55d9bd61e880 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x55d9bd61e830 <col:74> '_Bool' lvalue Var 0x55d9bd619780 'x$r_buff1_thd2' '_Bool'
|   |     |-ImplicitCastExpr 0x55d9bd61e968 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x55d9bd61e920 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x55d9bd61e8f0 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x55d9bd61e998 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x55d9bd61e980 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x55d9bd61e948 <col:102> '_Bool' lvalue Var 0x55d9bd61ab98 'x$w_buff1_used' '_Bool'
|   |-BinaryOperator 0x55d9bd61ec10 <line:763:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x55d9bd61ea18 <col:3> '_Bool' lvalue Var 0x55d9bd619528 'x$r_buff0_thd2' '_Bool'
|   | `-ImplicitCastExpr 0x55d9bd61ebf8 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55d9bd61ebc8 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x55d9bd61ead8 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x55d9bd61ea90 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x55d9bd61ea78 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x55d9bd61ea38 <col:20> '_Bool' lvalue Var 0x55d9bd619a60 'x$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x55d9bd61eac0 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x55d9bd61eaa8 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x55d9bd61ea58 <col:38> '_Bool' lvalue Var 0x55d9bd619528 'x$r_buff0_thd2' '_Bool'
|   |     |-ImplicitCastExpr 0x55d9bd61eb80 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x55d9bd61eb28 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x55d9bd61eaf8 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x55d9bd61ebb0 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x55d9bd61eb98 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x55d9bd61eb60 <col:66> '_Bool' lvalue Var 0x55d9bd619528 'x$r_buff0_thd2' '_Bool'
|   |-BinaryOperator 0x55d9bd61eef8 <line:764:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x55d9bd61ec30 <col:3> '_Bool' lvalue Var 0x55d9bd619780 'x$r_buff1_thd2' '_Bool'
|   | `-ImplicitCastExpr 0x55d9bd61eee0 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55d9bd61eeb0 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x55d9bd61edd0 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x55d9bd61ecf0 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x55d9bd61eca8 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x55d9bd61ec90 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x55d9bd61ec50 <col:20> '_Bool' lvalue Var 0x55d9bd619a60 'x$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x55d9bd61ecd8 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x55d9bd61ecc0 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x55d9bd61ec70 <col:38> '_Bool' lvalue Var 0x55d9bd619528 'x$r_buff0_thd2' '_Bool'
|   |     | `-BinaryOperator 0x55d9bd61edb0 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x55d9bd61ed68 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x55d9bd61ed50 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x55d9bd61ed10 <col:56> '_Bool' lvalue Var 0x55d9bd61ab98 'x$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x55d9bd61ed98 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x55d9bd61ed80 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x55d9bd61ed30 <col:74> '_Bool' lvalue Var 0x55d9bd619780 'x$r_buff1_thd2' '_Bool'
|   |     |-ImplicitCastExpr 0x55d9bd61ee68 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x55d9bd61ee20 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x55d9bd61edf0 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x55d9bd61ee98 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x55d9bd61ee80 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x55d9bd61ee48 <col:102> '_Bool' lvalue Var 0x55d9bd619780 'x$r_buff1_thd2' '_Bool'
|   |-CallExpr 0x55d9bd61ef50 <line:765:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x55d9bd61ef38 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55d9bd61ef18 <col:3> 'void ()' Function 0x55d9bd5bf060 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x55d9bd61efa8 <line:766:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x55d9bd61ef90 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55d9bd61ef70 <col:3> 'void ()' Function 0x55d9bd5befa0 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x55d9bd61f060 <line:767:3, col:41> 'int' '='
|   | |-DeclRefExpr 0x55d9bd61efc8 <col:3> 'int' lvalue Var 0x55d9bd618478 '__unbuffered_cnt' 'int'
|   | `-BinaryOperator 0x55d9bd61f040 <col:22, col:41> 'int' '+'
|   |   |-ImplicitCastExpr 0x55d9bd61f028 <col:22> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x55d9bd61efe8 <col:22> 'int' lvalue Var 0x55d9bd618478 '__unbuffered_cnt' 'int'
|   |   `-IntegerLiteral 0x55d9bd61f008 <col:41> 'int' 1
|   |-CallExpr 0x55d9bd61f0b8 <line:768:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x55d9bd61f0a0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55d9bd61f080 <col:3> 'void ()' Function 0x55d9bd5bf060 '__VERIFIER_atomic_end' 'void ()'
|   `-ReturnStmt 0x55d9bd61f130 <line:769:3, col:36>
|     `-CallExpr 0x55d9bd61f110 <col:10, col:36> 'void *'
|       `-ImplicitCastExpr 0x55d9bd61f0f8 <col:10> 'void *(*)(void)' <FunctionToPointerDecay>
|         `-DeclRefExpr 0x55d9bd61f0d8 <col:10> 'void *(void)' Function 0x55d9bd5beab8 '__VERIFIER_nondet_pointer' 'void *(void)'
|-FunctionDecl 0x55d9bd61f270 prev 0x55d9bd617fa0 <line:771:1, line:805:1> line:771:8 used P2 'void *(void *)'
| |-ParmVarDecl 0x55d9bd61f1d8 <col:11, col:17> col:17 arg 'void *'
| `-CompoundStmt 0x55d9bd622f30 <line:772:1, line:805:1>
|   |-CallExpr 0x55d9bd61f350 <line:773:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x55d9bd61f338 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55d9bd61f318 <col:3> 'void ()' Function 0x55d9bd5befa0 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x55d9bd61f3e8 <line:774:3, col:42> '_Bool' '='
|   | |-DeclRefExpr 0x55d9bd61f370 <col:3> '_Bool' lvalue Var 0x55d9bd61ad30 'weak$$choice0' '_Bool'
|   | `-CallExpr 0x55d9bd61f3c8 <col:19, col:42> '_Bool'
|   |   `-ImplicitCastExpr 0x55d9bd61f3b0 <col:19> '_Bool (*)(void)' <FunctionToPointerDecay>
|   |     `-DeclRefExpr 0x55d9bd61f390 <col:19> '_Bool (void)' Function 0x55d9bd5be770 '__VERIFIER_nondet_bool' '_Bool (void)'
|   |-BinaryOperator 0x55d9bd61f480 <line:775:3, col:42> '_Bool' '='
|   | |-DeclRefExpr 0x55d9bd61f408 <col:3> '_Bool' lvalue Var 0x55d9bd61ae20 'weak$$choice2' '_Bool'
|   | `-CallExpr 0x55d9bd61f460 <col:19, col:42> '_Bool'
|   |   `-ImplicitCastExpr 0x55d9bd61f448 <col:19> '_Bool (*)(void)' <FunctionToPointerDecay>
|   |     `-DeclRefExpr 0x55d9bd61f428 <col:19> '_Bool (void)' Function 0x55d9bd5be770 '__VERIFIER_nondet_bool' '_Bool (void)'
|   |-BinaryOperator 0x55d9bd61f4f8 <line:776:3, col:21> '_Bool' '='
|   | |-DeclRefExpr 0x55d9bd61f4a0 <col:3> '_Bool' lvalue Var 0x55d9bd619340 'x$flush_delayed' '_Bool'
|   | `-ImplicitCastExpr 0x55d9bd61f4e0 <col:21> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x55d9bd61f4c0 <col:21> '_Bool' lvalue Var 0x55d9bd61ae20 'weak$$choice2' '_Bool'
|   |-BinaryOperator 0x55d9bd61f570 <line:777:3, col:15> 'int' '='
|   | |-DeclRefExpr 0x55d9bd61f518 <col:3> 'int' lvalue Var 0x55d9bd6193c0 'x$mem_tmp' 'int'
|   | `-ImplicitCastExpr 0x55d9bd61f558 <col:15> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x55d9bd61f538 <col:15> 'int' lvalue Var 0x55d9bd6192a8 'x' 'int'
|   |-BinaryOperator 0x55d9bd61f9a8 <line:778:3, col:162> 'int' '='
|   | |-DeclRefExpr 0x55d9bd61f590 <col:3> 'int' lvalue Var 0x55d9bd6192a8 'x' 'int'
|   | `-ConditionalOperator 0x55d9bd61f978 <col:7, col:162> 'int'
|   |   |-BinaryOperator 0x55d9bd61f7a0 <col:7, col:84> 'int' '||'
|   |   | |-BinaryOperator 0x55d9bd61f6c0 <col:7, col:46> 'int' '||'
|   |   | | |-UnaryOperator 0x55d9bd61f5e8 <col:7, col:8> 'int' prefix '!' cannot overflow
|   |   | | | `-ImplicitCastExpr 0x55d9bd61f5d0 <col:8> '_Bool' <LValueToRValue>
|   |   | | |   `-DeclRefExpr 0x55d9bd61f5b0 <col:8> '_Bool' lvalue Var 0x55d9bd619a60 'x$w_buff0_used' '_Bool'
|   |   | | `-BinaryOperator 0x55d9bd61f6a0 <col:26, col:46> 'int' '&&'
|   |   | |   |-UnaryOperator 0x55d9bd61f638 <col:26, col:27> 'int' prefix '!' cannot overflow
|   |   | |   | `-ImplicitCastExpr 0x55d9bd61f620 <col:27> '_Bool' <LValueToRValue>
|   |   | |   |   `-DeclRefExpr 0x55d9bd61f600 <col:27> '_Bool' lvalue Var 0x55d9bd6195a0 'x$r_buff0_thd3' '_Bool'
|   |   | |   `-UnaryOperator 0x55d9bd61f688 <col:45, col:46> 'int' prefix '!' cannot overflow
|   |   | |     `-ImplicitCastExpr 0x55d9bd61f670 <col:46> '_Bool' <LValueToRValue>
|   |   | |       `-DeclRefExpr 0x55d9bd61f650 <col:46> '_Bool' lvalue Var 0x55d9bd61ab98 'x$w_buff1_used' '_Bool'
|   |   | `-BinaryOperator 0x55d9bd61f780 <col:64, col:84> 'int' '&&'
|   |   |   |-UnaryOperator 0x55d9bd61f718 <col:64, col:65> 'int' prefix '!' cannot overflow
|   |   |   | `-ImplicitCastExpr 0x55d9bd61f700 <col:65> '_Bool' <LValueToRValue>
|   |   |   |   `-DeclRefExpr 0x55d9bd61f6e0 <col:65> '_Bool' lvalue Var 0x55d9bd6195a0 'x$r_buff0_thd3' '_Bool'
|   |   |   `-UnaryOperator 0x55d9bd61f768 <col:83, col:84> 'int' prefix '!' cannot overflow
|   |   |     `-ImplicitCastExpr 0x55d9bd61f750 <col:84> '_Bool' <LValueToRValue>
|   |   |       `-DeclRefExpr 0x55d9bd61f730 <col:84> '_Bool' lvalue Var 0x55d9bd6197f8 'x$r_buff1_thd3' '_Bool'
|   |   |-ImplicitCastExpr 0x55d9bd61f960 <col:101> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x55d9bd61f7c0 <col:101> 'int' lvalue Var 0x55d9bd6192a8 'x' 'int'
|   |   `-ParenExpr 0x55d9bd61f940 <col:105, col:162> 'int'
|   |     `-ConditionalOperator 0x55d9bd61f910 <col:106, col:153> 'int'
|   |       |-BinaryOperator 0x55d9bd61f880 <col:106, col:124> 'int' '&&'
|   |       | |-ImplicitCastExpr 0x55d9bd61f838 <col:106> 'int' <IntegralCast>
|   |       | | `-ImplicitCastExpr 0x55d9bd61f820 <col:106> '_Bool' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x55d9bd61f7e0 <col:106> '_Bool' lvalue Var 0x55d9bd619a60 'x$w_buff0_used' '_Bool'
|   |       | `-ImplicitCastExpr 0x55d9bd61f868 <col:124> 'int' <IntegralCast>
|   |       |   `-ImplicitCastExpr 0x55d9bd61f850 <col:124> '_Bool' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x55d9bd61f800 <col:124> '_Bool' lvalue Var 0x55d9bd6195a0 'x$r_buff0_thd3' '_Bool'
|   |       |-ImplicitCastExpr 0x55d9bd61f8e0 <col:141> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x55d9bd61f8a0 <col:141> 'int' lvalue Var 0x55d9bd6199e8 'x$w_buff0' 'int'
|   |       `-ImplicitCastExpr 0x55d9bd61f8f8 <col:153> 'int' <LValueToRValue>
|   |         `-DeclRefExpr 0x55d9bd61f8c0 <col:153> 'int' lvalue Var 0x55d9bd61ab20 'x$w_buff1' 'int'
|   |-BinaryOperator 0x55d9bd61fed0 <line:779:3, col:208> 'int' '='
|   | |-DeclRefExpr 0x55d9bd61f9c8 <col:3> 'int' lvalue Var 0x55d9bd6199e8 'x$w_buff0' 'int'
|   | `-ConditionalOperator 0x55d9bd61fea0 <col:15, col:208> 'int'
|   |   |-ImplicitCastExpr 0x55d9bd61fe70 <col:15> 'int' <IntegralCast>
|   |   | `-ImplicitCastExpr 0x55d9bd61fe58 <col:15> '_Bool' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x55d9bd61f9e8 <col:15> '_Bool' lvalue Var 0x55d9bd61ae20 'weak$$choice2' '_Bool'
|   |   |-ImplicitCastExpr 0x55d9bd61fe88 <col:31> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x55d9bd61fa08 <col:31> 'int' lvalue Var 0x55d9bd6199e8 'x$w_buff0' 'int'
|   |   `-ParenExpr 0x55d9bd61fe38 <col:43, col:208> 'int'
|   |     `-ConditionalOperator 0x55d9bd61fe08 <col:44, col:207> 'int'
|   |       |-BinaryOperator 0x55d9bd61fc30 <col:44, col:121> 'int' '||'
|   |       | |-BinaryOperator 0x55d9bd61fb38 <col:44, col:83> 'int' '||'
|   |       | | |-UnaryOperator 0x55d9bd61fa60 <col:44, col:45> 'int' prefix '!' cannot overflow
|   |       | | | `-ImplicitCastExpr 0x55d9bd61fa48 <col:45> '_Bool' <LValueToRValue>
|   |       | | |   `-DeclRefExpr 0x55d9bd61fa28 <col:45> '_Bool' lvalue Var 0x55d9bd619a60 'x$w_buff0_used' '_Bool'
|   |       | | `-BinaryOperator 0x55d9bd61fb18 <col:63, col:83> 'int' '&&'
|   |       | |   |-UnaryOperator 0x55d9bd61fab0 <col:63, col:64> 'int' prefix '!' cannot overflow
|   |       | |   | `-ImplicitCastExpr 0x55d9bd61fa98 <col:64> '_Bool' <LValueToRValue>
|   |       | |   |   `-DeclRefExpr 0x55d9bd61fa78 <col:64> '_Bool' lvalue Var 0x55d9bd6195a0 'x$r_buff0_thd3' '_Bool'
|   |       | |   `-UnaryOperator 0x55d9bd61fb00 <col:82, col:83> 'int' prefix '!' cannot overflow
|   |       | |     `-ImplicitCastExpr 0x55d9bd61fae8 <col:83> '_Bool' <LValueToRValue>
|   |       | |       `-DeclRefExpr 0x55d9bd61fac8 <col:83> '_Bool' lvalue Var 0x55d9bd61ab98 'x$w_buff1_used' '_Bool'
|   |       | `-BinaryOperator 0x55d9bd61fc10 <col:101, col:121> 'int' '&&'
|   |       |   |-UnaryOperator 0x55d9bd61fba8 <col:101, col:102> 'int' prefix '!' cannot overflow
|   |       |   | `-ImplicitCastExpr 0x55d9bd61fb90 <col:102> '_Bool' <LValueToRValue>
|   |       |   |   `-DeclRefExpr 0x55d9bd61fb70 <col:102> '_Bool' lvalue Var 0x55d9bd6195a0 'x$r_buff0_thd3' '_Bool'
|   |       |   `-UnaryOperator 0x55d9bd61fbf8 <col:120, col:121> 'int' prefix '!' cannot overflow
|   |       |     `-ImplicitCastExpr 0x55d9bd61fbe0 <col:121> '_Bool' <LValueToRValue>
|   |       |       `-DeclRefExpr 0x55d9bd61fbc0 <col:121> '_Bool' lvalue Var 0x55d9bd6197f8 'x$r_buff1_thd3' '_Bool'
|   |       |-ImplicitCastExpr 0x55d9bd61fdf0 <col:138> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x55d9bd61fc50 <col:138> 'int' lvalue Var 0x55d9bd6199e8 'x$w_buff0' 'int'
|   |       `-ParenExpr 0x55d9bd61fdd0 <col:150, col:207> 'int'
|   |         `-ConditionalOperator 0x55d9bd61fda0 <col:151, col:198> 'int'
|   |           |-BinaryOperator 0x55d9bd61fd10 <col:151, col:169> 'int' '&&'
|   |           | |-ImplicitCastExpr 0x55d9bd61fcc8 <col:151> 'int' <IntegralCast>
|   |           | | `-ImplicitCastExpr 0x55d9bd61fcb0 <col:151> '_Bool' <LValueToRValue>
|   |           | |   `-DeclRefExpr 0x55d9bd61fc70 <col:151> '_Bool' lvalue Var 0x55d9bd619a60 'x$w_buff0_used' '_Bool'
|   |           | `-ImplicitCastExpr 0x55d9bd61fcf8 <col:169> 'int' <IntegralCast>
|   |           |   `-ImplicitCastExpr 0x55d9bd61fce0 <col:169> '_Bool' <LValueToRValue>
|   |           |     `-DeclRefExpr 0x55d9bd61fc90 <col:169> '_Bool' lvalue Var 0x55d9bd6195a0 'x$r_buff0_thd3' '_Bool'
|   |           |-ImplicitCastExpr 0x55d9bd61fd70 <col:186> 'int' <LValueToRValue>
|   |           | `-DeclRefExpr 0x55d9bd61fd30 <col:186> 'int' lvalue Var 0x55d9bd6199e8 'x$w_buff0' 'int'
|   |           `-ImplicitCastExpr 0x55d9bd61fd88 <col:198> 'int' <LValueToRValue>
|   |             `-DeclRefExpr 0x55d9bd61fd50 <col:198> 'int' lvalue Var 0x55d9bd6199e8 'x$w_buff0' 'int'
|   |-BinaryOperator 0x55d9bd6203e0 <line:780:3, col:208> 'int' '='
|   | |-DeclRefExpr 0x55d9bd61fef0 <col:3> 'int' lvalue Var 0x55d9bd61ab20 'x$w_buff1' 'int'
|   | `-ConditionalOperator 0x55d9bd6203b0 <col:15, col:208> 'int'
|   |   |-ImplicitCastExpr 0x55d9bd620380 <col:15> 'int' <IntegralCast>
|   |   | `-ImplicitCastExpr 0x55d9bd620368 <col:15> '_Bool' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x55d9bd61ff10 <col:15> '_Bool' lvalue Var 0x55d9bd61ae20 'weak$$choice2' '_Bool'
|   |   |-ImplicitCastExpr 0x55d9bd620398 <col:31> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x55d9bd61ff30 <col:31> 'int' lvalue Var 0x55d9bd61ab20 'x$w_buff1' 'int'
|   |   `-ParenExpr 0x55d9bd620348 <col:43, col:208> 'int'
|   |     `-ConditionalOperator 0x55d9bd620318 <col:44, col:207> 'int'
|   |       |-BinaryOperator 0x55d9bd620140 <col:44, col:121> 'int' '||'
|   |       | |-BinaryOperator 0x55d9bd620060 <col:44, col:83> 'int' '||'
|   |       | | |-UnaryOperator 0x55d9bd61ff88 <col:44, col:45> 'int' prefix '!' cannot overflow
|   |       | | | `-ImplicitCastExpr 0x55d9bd61ff70 <col:45> '_Bool' <LValueToRValue>
|   |       | | |   `-DeclRefExpr 0x55d9bd61ff50 <col:45> '_Bool' lvalue Var 0x55d9bd619a60 'x$w_buff0_used' '_Bool'
|   |       | | `-BinaryOperator 0x55d9bd620040 <col:63, col:83> 'int' '&&'
|   |       | |   |-UnaryOperator 0x55d9bd61ffd8 <col:63, col:64> 'int' prefix '!' cannot overflow
|   |       | |   | `-ImplicitCastExpr 0x55d9bd61ffc0 <col:64> '_Bool' <LValueToRValue>
|   |       | |   |   `-DeclRefExpr 0x55d9bd61ffa0 <col:64> '_Bool' lvalue Var 0x55d9bd6195a0 'x$r_buff0_thd3' '_Bool'
|   |       | |   `-UnaryOperator 0x55d9bd620028 <col:82, col:83> 'int' prefix '!' cannot overflow
|   |       | |     `-ImplicitCastExpr 0x55d9bd620010 <col:83> '_Bool' <LValueToRValue>
|   |       | |       `-DeclRefExpr 0x55d9bd61fff0 <col:83> '_Bool' lvalue Var 0x55d9bd61ab98 'x$w_buff1_used' '_Bool'
|   |       | `-BinaryOperator 0x55d9bd620120 <col:101, col:121> 'int' '&&'
|   |       |   |-UnaryOperator 0x55d9bd6200b8 <col:101, col:102> 'int' prefix '!' cannot overflow
|   |       |   | `-ImplicitCastExpr 0x55d9bd6200a0 <col:102> '_Bool' <LValueToRValue>
|   |       |   |   `-DeclRefExpr 0x55d9bd620080 <col:102> '_Bool' lvalue Var 0x55d9bd6195a0 'x$r_buff0_thd3' '_Bool'
|   |       |   `-UnaryOperator 0x55d9bd620108 <col:120, col:121> 'int' prefix '!' cannot overflow
|   |       |     `-ImplicitCastExpr 0x55d9bd6200f0 <col:121> '_Bool' <LValueToRValue>
|   |       |       `-DeclRefExpr 0x55d9bd6200d0 <col:121> '_Bool' lvalue Var 0x55d9bd6197f8 'x$r_buff1_thd3' '_Bool'
|   |       |-ImplicitCastExpr 0x55d9bd620300 <col:138> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x55d9bd620160 <col:138> 'int' lvalue Var 0x55d9bd61ab20 'x$w_buff1' 'int'
|   |       `-ParenExpr 0x55d9bd6202e0 <col:150, col:207> 'int'
|   |         `-ConditionalOperator 0x55d9bd6202b0 <col:151, col:198> 'int'
|   |           |-BinaryOperator 0x55d9bd620220 <col:151, col:169> 'int' '&&'
|   |           | |-ImplicitCastExpr 0x55d9bd6201d8 <col:151> 'int' <IntegralCast>
|   |           | | `-ImplicitCastExpr 0x55d9bd6201c0 <col:151> '_Bool' <LValueToRValue>
|   |           | |   `-DeclRefExpr 0x55d9bd620180 <col:151> '_Bool' lvalue Var 0x55d9bd619a60 'x$w_buff0_used' '_Bool'
|   |           | `-ImplicitCastExpr 0x55d9bd620208 <col:169> 'int' <IntegralCast>
|   |           |   `-ImplicitCastExpr 0x55d9bd6201f0 <col:169> '_Bool' <LValueToRValue>
|   |           |     `-DeclRefExpr 0x55d9bd6201a0 <col:169> '_Bool' lvalue Var 0x55d9bd6195a0 'x$r_buff0_thd3' '_Bool'
|   |           |-ImplicitCastExpr 0x55d9bd620280 <col:186> 'int' <LValueToRValue>
|   |           | `-DeclRefExpr 0x55d9bd620240 <col:186> 'int' lvalue Var 0x55d9bd61ab20 'x$w_buff1' 'int'
|   |           `-ImplicitCastExpr 0x55d9bd620298 <col:198> 'int' <LValueToRValue>
|   |             `-DeclRefExpr 0x55d9bd620260 <col:198> 'int' lvalue Var 0x55d9bd61ab20 'x$w_buff1' 'int'
|   |-BinaryOperator 0x55d9bd620988 <line:781:3, col:227> '_Bool' '='
|   | |-DeclRefExpr 0x55d9bd620400 <col:3> '_Bool' lvalue Var 0x55d9bd619a60 'x$w_buff0_used' '_Bool'
|   | `-ImplicitCastExpr 0x55d9bd620970 <col:20, col:227> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55d9bd620940 <col:20, col:227> 'int'
|   |     |-ImplicitCastExpr 0x55d9bd6208f8 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x55d9bd6208e0 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x55d9bd620420 <col:20> '_Bool' lvalue Var 0x55d9bd61ae20 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x55d9bd620928 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x55d9bd620910 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x55d9bd620440 <col:36> '_Bool' lvalue Var 0x55d9bd619a60 'x$w_buff0_used' '_Bool'
|   |     `-ParenExpr 0x55d9bd6208c0 <col:53, col:227> 'int'
|   |       `-ConditionalOperator 0x55d9bd620890 <col:54, col:226> 'int'
|   |         |-BinaryOperator 0x55d9bd620650 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x55d9bd620570 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x55d9bd620498 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x55d9bd620480 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x55d9bd620460 <col:55> '_Bool' lvalue Var 0x55d9bd619a60 'x$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x55d9bd620550 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x55d9bd6204e8 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x55d9bd6204d0 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x55d9bd6204b0 <col:74> '_Bool' lvalue Var 0x55d9bd6195a0 'x$r_buff0_thd3' '_Bool'
|   |         | |   `-UnaryOperator 0x55d9bd620538 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x55d9bd620520 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x55d9bd620500 <col:93> '_Bool' lvalue Var 0x55d9bd61ab98 'x$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x55d9bd620630 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x55d9bd6205c8 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x55d9bd6205b0 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x55d9bd620590 <col:112> '_Bool' lvalue Var 0x55d9bd6195a0 'x$r_buff0_thd3' '_Bool'
|   |         |   `-UnaryOperator 0x55d9bd620618 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x55d9bd620600 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x55d9bd6205e0 <col:131> '_Bool' lvalue Var 0x55d9bd6197f8 'x$r_buff1_thd3' '_Bool'
|   |         |-ImplicitCastExpr 0x55d9bd620878 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x55d9bd620860 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x55d9bd620670 <col:148> '_Bool' lvalue Var 0x55d9bd619a60 'x$w_buff0_used' '_Bool'
|   |         `-ParenExpr 0x55d9bd620840 <col:165, col:226> 'int'
|   |           `-ConditionalOperator 0x55d9bd620810 <col:166, col:212> 'int'
|   |             |-BinaryOperator 0x55d9bd620730 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x55d9bd6206e8 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x55d9bd6206d0 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x55d9bd620690 <col:166> '_Bool' lvalue Var 0x55d9bd619a60 'x$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x55d9bd620718 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x55d9bd620700 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x55d9bd6206b0 <col:184> '_Bool' lvalue Var 0x55d9bd6195a0 'x$r_buff0_thd3' '_Bool'
|   |             |-ImplicitCastExpr 0x55d9bd6207c8 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x55d9bd620780 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x55d9bd620750 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x55d9bd6207f8 <col:212> 'int' <IntegralCast>
|   |               `-ImplicitCastExpr 0x55d9bd6207e0 <col:212> '_Bool' <LValueToRValue>
|   |                 `-DeclRefExpr 0x55d9bd6207a8 <col:212> '_Bool' lvalue Var 0x55d9bd619a60 'x$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x55d9bd620f60 <line:782:3, col:221> '_Bool' '='
|   | |-DeclRefExpr 0x55d9bd6209a8 <col:3> '_Bool' lvalue Var 0x55d9bd61ab98 'x$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x55d9bd620f48 <col:20, col:221> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55d9bd620f18 <col:20, col:221> 'int'
|   |     |-ImplicitCastExpr 0x55d9bd620ed0 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x55d9bd620eb8 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x55d9bd6209c8 <col:20> '_Bool' lvalue Var 0x55d9bd61ae20 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x55d9bd620f00 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x55d9bd620ee8 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x55d9bd6209e8 <col:36> '_Bool' lvalue Var 0x55d9bd61ab98 'x$w_buff1_used' '_Bool'
|   |     `-ParenExpr 0x55d9bd620e98 <col:53, col:221> 'int'
|   |       `-ConditionalOperator 0x55d9bd620e68 <col:54, col:220> 'int'
|   |         |-BinaryOperator 0x55d9bd620c08 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x55d9bd620b18 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x55d9bd620a40 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x55d9bd620a28 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x55d9bd620a08 <col:55> '_Bool' lvalue Var 0x55d9bd619a60 'x$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x55d9bd620af8 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x55d9bd620a90 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x55d9bd620a78 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x55d9bd620a58 <col:74> '_Bool' lvalue Var 0x55d9bd6195a0 'x$r_buff0_thd3' '_Bool'
|   |         | |   `-UnaryOperator 0x55d9bd620ae0 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x55d9bd620ac8 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x55d9bd620aa8 <col:93> '_Bool' lvalue Var 0x55d9bd61ab98 'x$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x55d9bd620be8 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x55d9bd620b80 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x55d9bd620b58 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x55d9bd620b38 <col:112> '_Bool' lvalue Var 0x55d9bd6195a0 'x$r_buff0_thd3' '_Bool'
|   |         |   `-UnaryOperator 0x55d9bd620bd0 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x55d9bd620bb8 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x55d9bd620b98 <col:131> '_Bool' lvalue Var 0x55d9bd6197f8 'x$r_buff1_thd3' '_Bool'
|   |         |-ImplicitCastExpr 0x55d9bd620e50 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x55d9bd620e38 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x55d9bd620c28 <col:148> '_Bool' lvalue Var 0x55d9bd61ab98 'x$w_buff1_used' '_Bool'
|   |         `-ParenExpr 0x55d9bd620e18 <col:165, col:220> 'int'
|   |           `-ConditionalOperator 0x55d9bd620de8 <col:166, col:219> 'int'
|   |             |-BinaryOperator 0x55d9bd620ce8 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x55d9bd620ca0 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x55d9bd620c88 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x55d9bd620c48 <col:166> '_Bool' lvalue Var 0x55d9bd619a60 'x$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x55d9bd620cd0 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x55d9bd620cb8 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x55d9bd620c68 <col:184> '_Bool' lvalue Var 0x55d9bd6195a0 'x$r_buff0_thd3' '_Bool'
|   |             |-ImplicitCastExpr 0x55d9bd620db8 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x55d9bd620d38 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x55d9bd620d08 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x55d9bd620dd0 <col:212, col:219> 'int' <IntegralCast>
|   |               `-CStyleCastExpr 0x55d9bd620d90 <col:212, col:219> '_Bool' <IntegralToBoolean>
|   |                 `-IntegerLiteral 0x55d9bd620d60 <col:219> 'int' 0
|   |-BinaryOperator 0x55d9bd621508 <line:783:3, col:227> '_Bool' '='
|   | |-DeclRefExpr 0x55d9bd620f80 <col:3> '_Bool' lvalue Var 0x55d9bd6195a0 'x$r_buff0_thd3' '_Bool'
|   | `-ImplicitCastExpr 0x55d9bd6214f0 <col:20, col:227> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55d9bd6214c0 <col:20, col:227> 'int'
|   |     |-ImplicitCastExpr 0x55d9bd621478 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x55d9bd621460 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x55d9bd620fa0 <col:20> '_Bool' lvalue Var 0x55d9bd61ae20 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x55d9bd6214a8 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x55d9bd621490 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x55d9bd620fc0 <col:36> '_Bool' lvalue Var 0x55d9bd6195a0 'x$r_buff0_thd3' '_Bool'
|   |     `-ParenExpr 0x55d9bd621440 <col:53, col:227> 'int'
|   |       `-ConditionalOperator 0x55d9bd621410 <col:54, col:226> 'int'
|   |         |-BinaryOperator 0x55d9bd6211d0 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x55d9bd6210f0 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x55d9bd621018 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x55d9bd621000 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x55d9bd620fe0 <col:55> '_Bool' lvalue Var 0x55d9bd619a60 'x$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x55d9bd6210d0 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x55d9bd621068 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x55d9bd621050 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x55d9bd621030 <col:74> '_Bool' lvalue Var 0x55d9bd6195a0 'x$r_buff0_thd3' '_Bool'
|   |         | |   `-UnaryOperator 0x55d9bd6210b8 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x55d9bd6210a0 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x55d9bd621080 <col:93> '_Bool' lvalue Var 0x55d9bd61ab98 'x$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x55d9bd6211b0 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x55d9bd621148 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x55d9bd621130 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x55d9bd621110 <col:112> '_Bool' lvalue Var 0x55d9bd6195a0 'x$r_buff0_thd3' '_Bool'
|   |         |   `-UnaryOperator 0x55d9bd621198 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x55d9bd621180 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x55d9bd621160 <col:131> '_Bool' lvalue Var 0x55d9bd6197f8 'x$r_buff1_thd3' '_Bool'
|   |         |-ImplicitCastExpr 0x55d9bd6213f8 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x55d9bd6213e0 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x55d9bd6211f0 <col:148> '_Bool' lvalue Var 0x55d9bd6195a0 'x$r_buff0_thd3' '_Bool'
|   |         `-ParenExpr 0x55d9bd6213c0 <col:165, col:226> 'int'
|   |           `-ConditionalOperator 0x55d9bd621390 <col:166, col:212> 'int'
|   |             |-BinaryOperator 0x55d9bd6212b0 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x55d9bd621268 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x55d9bd621250 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x55d9bd621210 <col:166> '_Bool' lvalue Var 0x55d9bd619a60 'x$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x55d9bd621298 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x55d9bd621280 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x55d9bd621230 <col:184> '_Bool' lvalue Var 0x55d9bd6195a0 'x$r_buff0_thd3' '_Bool'
|   |             |-ImplicitCastExpr 0x55d9bd621348 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x55d9bd621300 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x55d9bd6212d0 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x55d9bd621378 <col:212> 'int' <IntegralCast>
|   |               `-ImplicitCastExpr 0x55d9bd621360 <col:212> '_Bool' <LValueToRValue>
|   |                 `-DeclRefExpr 0x55d9bd621328 <col:212> '_Bool' lvalue Var 0x55d9bd6195a0 'x$r_buff0_thd3' '_Bool'
|   |-BinaryOperator 0x55d9bd621ad0 <line:784:3, col:221> '_Bool' '='
|   | |-DeclRefExpr 0x55d9bd621528 <col:3> '_Bool' lvalue Var 0x55d9bd6197f8 'x$r_buff1_thd3' '_Bool'
|   | `-ImplicitCastExpr 0x55d9bd621ab8 <col:20, col:221> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55d9bd621a88 <col:20, col:221> 'int'
|   |     |-ImplicitCastExpr 0x55d9bd621a40 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x55d9bd621a28 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x55d9bd621548 <col:20> '_Bool' lvalue Var 0x55d9bd61ae20 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x55d9bd621a70 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x55d9bd621a58 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x55d9bd621568 <col:36> '_Bool' lvalue Var 0x55d9bd6197f8 'x$r_buff1_thd3' '_Bool'
|   |     `-ParenExpr 0x55d9bd621a08 <col:53, col:221> 'int'
|   |       `-ConditionalOperator 0x55d9bd6219d8 <col:54, col:220> 'int'
|   |         |-BinaryOperator 0x55d9bd621778 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x55d9bd621698 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x55d9bd6215c0 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x55d9bd6215a8 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x55d9bd621588 <col:55> '_Bool' lvalue Var 0x55d9bd619a60 'x$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x55d9bd621678 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x55d9bd621610 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x55d9bd6215f8 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x55d9bd6215d8 <col:74> '_Bool' lvalue Var 0x55d9bd6195a0 'x$r_buff0_thd3' '_Bool'
|   |         | |   `-UnaryOperator 0x55d9bd621660 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x55d9bd621648 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x55d9bd621628 <col:93> '_Bool' lvalue Var 0x55d9bd61ab98 'x$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x55d9bd621758 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x55d9bd6216f0 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x55d9bd6216d8 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x55d9bd6216b8 <col:112> '_Bool' lvalue Var 0x55d9bd6195a0 'x$r_buff0_thd3' '_Bool'
|   |         |   `-UnaryOperator 0x55d9bd621740 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x55d9bd621728 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x55d9bd621708 <col:131> '_Bool' lvalue Var 0x55d9bd6197f8 'x$r_buff1_thd3' '_Bool'
|   |         |-ImplicitCastExpr 0x55d9bd6219c0 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x55d9bd6219a8 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x55d9bd621798 <col:148> '_Bool' lvalue Var 0x55d9bd6197f8 'x$r_buff1_thd3' '_Bool'
|   |         `-ParenExpr 0x55d9bd621988 <col:165, col:220> 'int'
|   |           `-ConditionalOperator 0x55d9bd621958 <col:166, col:219> 'int'
|   |             |-BinaryOperator 0x55d9bd621858 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x55d9bd621810 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x55d9bd6217f8 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x55d9bd6217b8 <col:166> '_Bool' lvalue Var 0x55d9bd619a60 'x$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x55d9bd621840 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x55d9bd621828 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x55d9bd6217d8 <col:184> '_Bool' lvalue Var 0x55d9bd6195a0 'x$r_buff0_thd3' '_Bool'
|   |             |-ImplicitCastExpr 0x55d9bd621928 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x55d9bd6218a8 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x55d9bd621878 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x55d9bd621940 <col:212, col:219> 'int' <IntegralCast>
|   |               `-CStyleCastExpr 0x55d9bd621900 <col:212, col:219> '_Bool' <IntegralToBoolean>
|   |                 `-IntegerLiteral 0x55d9bd6218d0 <col:219> 'int' 0
|   |-BinaryOperator 0x55d9bd621b90 <line:785:3, col:45> '_Bool' '='
|   | |-DeclRefExpr 0x55d9bd621af0 <col:3> '_Bool' lvalue Var 0x55d9bd618e48 '__unbuffered_p2_EAX$read_delayed' '_Bool'
|   | `-CStyleCastExpr 0x55d9bd621b40 <col:38, col:45> '_Bool' <IntegralToBoolean>
|   |   `-IntegerLiteral 0x55d9bd621b10 <col:45> 'int' 1
|   |-BinaryOperator 0x55d9bd621c08 <line:786:3, col:43> 'int *' '='
|   | |-DeclRefExpr 0x55d9bd621bb0 <col:3> 'int *' lvalue Var 0x55d9bd618ec8 '__unbuffered_p2_EAX$read_delayed_var' 'int *'
|   | `-UnaryOperator 0x55d9bd621bf0 <col:42, col:43> 'int *' prefix '&' cannot overflow
|   |   `-DeclRefExpr 0x55d9bd621bd0 <col:43> 'int' lvalue Var 0x55d9bd6192a8 'x' 'int'
|   |-BinaryOperator 0x55d9bd621c80 <line:787:3, col:25> 'int' '='
|   | |-DeclRefExpr 0x55d9bd621c28 <col:3> 'int' lvalue Var 0x55d9bd6187d8 '__unbuffered_p2_EAX' 'int'
|   | `-ImplicitCastExpr 0x55d9bd621c68 <col:25> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x55d9bd621c48 <col:25> 'int' lvalue Var 0x55d9bd6192a8 'x' 'int'
|   |-BinaryOperator 0x55d9bd621db0 <line:788:3, col:37> 'int' '='
|   | |-DeclRefExpr 0x55d9bd621ca0 <col:3> 'int' lvalue Var 0x55d9bd6192a8 'x' 'int'
|   | `-ConditionalOperator 0x55d9bd621d80 <col:7, col:37> 'int'
|   |   |-ImplicitCastExpr 0x55d9bd621d38 <col:7> 'int' <IntegralCast>
|   |   | `-ImplicitCastExpr 0x55d9bd621d20 <col:7> '_Bool' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x55d9bd621cc0 <col:7> '_Bool' lvalue Var 0x55d9bd619340 'x$flush_delayed' '_Bool'
|   |   |-ImplicitCastExpr 0x55d9bd621d50 <col:25> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x55d9bd621ce0 <col:25> 'int' lvalue Var 0x55d9bd6193c0 'x$mem_tmp' 'int'
|   |   `-ImplicitCastExpr 0x55d9bd621d68 <col:37> 'int' <LValueToRValue>
|   |     `-DeclRefExpr 0x55d9bd621d00 <col:37> 'int' lvalue Var 0x55d9bd6192a8 'x' 'int'
|   |-BinaryOperator 0x55d9bd621e48 <line:789:3, col:28> '_Bool' '='
|   | |-DeclRefExpr 0x55d9bd621dd0 <col:3> '_Bool' lvalue Var 0x55d9bd619340 'x$flush_delayed' '_Bool'
|   | `-CStyleCastExpr 0x55d9bd621e20 <col:21, col:28> '_Bool' <IntegralToBoolean>
|   |   `-IntegerLiteral 0x55d9bd621df0 <col:28> 'int' 0
|   |-CallExpr 0x55d9bd621ea0 <line:790:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x55d9bd621e88 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55d9bd621e68 <col:3> 'void ()' Function 0x55d9bd5bf060 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x55d9bd621ef8 <line:791:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x55d9bd621ee0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55d9bd621ec0 <col:3> 'void ()' Function 0x55d9bd5befa0 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x55d9bd621f58 <line:792:3, col:7> 'int' '='
|   | |-DeclRefExpr 0x55d9bd621f18 <col:3> 'int' lvalue Var 0x55d9bd61ac98 'y' 'int'
|   | `-IntegerLiteral 0x55d9bd621f38 <col:7> 'int' 1
|   |-CallExpr 0x55d9bd621fb0 <line:793:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x55d9bd621f98 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55d9bd621f78 <col:3> 'void ()' Function 0x55d9bd5bf060 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x55d9bd622008 <line:794:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x55d9bd621ff0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55d9bd621fd0 <col:3> 'void ()' Function 0x55d9bd5befa0 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x55d9bd6222f0 <line:795:3, col:103> 'int' '='
|   | |-DeclRefExpr 0x55d9bd622028 <col:3> 'int' lvalue Var 0x55d9bd6192a8 'x' 'int'
|   | `-ConditionalOperator 0x55d9bd6222c0 <col:7, col:103> 'int'
|   |   |-BinaryOperator 0x55d9bd6220e8 <col:7, col:25> 'int' '&&'
|   |   | |-ImplicitCastExpr 0x55d9bd6220a0 <col:7> 'int' <IntegralCast>
|   |   | | `-ImplicitCastExpr 0x55d9bd622088 <col:7> '_Bool' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x55d9bd622048 <col:7> '_Bool' lvalue Var 0x55d9bd619a60 'x$w_buff0_used' '_Bool'
|   |   | `-ImplicitCastExpr 0x55d9bd6220d0 <col:25> 'int' <IntegralCast>
|   |   |   `-ImplicitCastExpr 0x55d9bd6220b8 <col:25> '_Bool' <LValueToRValue>
|   |   |     `-DeclRefExpr 0x55d9bd622068 <col:25> '_Bool' lvalue Var 0x55d9bd6195a0 'x$r_buff0_thd3' '_Bool'
|   |   |-ImplicitCastExpr 0x55d9bd6222a8 <col:42> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x55d9bd622108 <col:42> 'int' lvalue Var 0x55d9bd6199e8 'x$w_buff0' 'int'
|   |   `-ParenExpr 0x55d9bd622288 <col:54, col:103> 'int'
|   |     `-ConditionalOperator 0x55d9bd622258 <col:55, col:102> 'int'
|   |       |-BinaryOperator 0x55d9bd6221c8 <col:55, col:73> 'int' '&&'
|   |       | |-ImplicitCastExpr 0x55d9bd622180 <col:55> 'int' <IntegralCast>
|   |       | | `-ImplicitCastExpr 0x55d9bd622168 <col:55> '_Bool' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x55d9bd622128 <col:55> '_Bool' lvalue Var 0x55d9bd61ab98 'x$w_buff1_used' '_Bool'
|   |       | `-ImplicitCastExpr 0x55d9bd6221b0 <col:73> 'int' <IntegralCast>
|   |       |   `-ImplicitCastExpr 0x55d9bd622198 <col:73> '_Bool' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x55d9bd622148 <col:73> '_Bool' lvalue Var 0x55d9bd6197f8 'x$r_buff1_thd3' '_Bool'
|   |       |-ImplicitCastExpr 0x55d9bd622228 <col:90> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x55d9bd6221e8 <col:90> 'int' lvalue Var 0x55d9bd61ab20 'x$w_buff1' 'int'
|   |       `-ImplicitCastExpr 0x55d9bd622240 <col:102> 'int' <LValueToRValue>
|   |         `-DeclRefExpr 0x55d9bd622208 <col:102> 'int' lvalue Var 0x55d9bd6192a8 'x' 'int'
|   |-BinaryOperator 0x55d9bd6224f8 <line:796:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x55d9bd622310 <col:3> '_Bool' lvalue Var 0x55d9bd619a60 'x$w_buff0_used' '_Bool'
|   | `-ImplicitCastExpr 0x55d9bd6224e0 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55d9bd6224b0 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x55d9bd6223d0 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x55d9bd622388 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x55d9bd622370 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x55d9bd622330 <col:20> '_Bool' lvalue Var 0x55d9bd619a60 'x$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x55d9bd6223b8 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x55d9bd6223a0 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x55d9bd622350 <col:38> '_Bool' lvalue Var 0x55d9bd6195a0 'x$r_buff0_thd3' '_Bool'
|   |     |-ImplicitCastExpr 0x55d9bd622468 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x55d9bd622420 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x55d9bd6223f0 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x55d9bd622498 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x55d9bd622480 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x55d9bd622448 <col:66> '_Bool' lvalue Var 0x55d9bd619a60 'x$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x55d9bd6227e0 <line:797:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x55d9bd622518 <col:3> '_Bool' lvalue Var 0x55d9bd61ab98 'x$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x55d9bd6227c8 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55d9bd622798 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x55d9bd6226b8 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x55d9bd6225d8 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x55d9bd622590 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x55d9bd622578 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x55d9bd622538 <col:20> '_Bool' lvalue Var 0x55d9bd619a60 'x$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x55d9bd6225c0 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x55d9bd6225a8 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x55d9bd622558 <col:38> '_Bool' lvalue Var 0x55d9bd6195a0 'x$r_buff0_thd3' '_Bool'
|   |     | `-BinaryOperator 0x55d9bd622698 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x55d9bd622650 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x55d9bd622638 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x55d9bd6225f8 <col:56> '_Bool' lvalue Var 0x55d9bd61ab98 'x$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x55d9bd622680 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x55d9bd622668 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x55d9bd622618 <col:74> '_Bool' lvalue Var 0x55d9bd6197f8 'x$r_buff1_thd3' '_Bool'
|   |     |-ImplicitCastExpr 0x55d9bd622750 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x55d9bd622708 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x55d9bd6226d8 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x55d9bd622780 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x55d9bd622768 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x55d9bd622730 <col:102> '_Bool' lvalue Var 0x55d9bd61ab98 'x$w_buff1_used' '_Bool'
|   |-BinaryOperator 0x55d9bd6229e8 <line:798:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x55d9bd622800 <col:3> '_Bool' lvalue Var 0x55d9bd6195a0 'x$r_buff0_thd3' '_Bool'
|   | `-ImplicitCastExpr 0x55d9bd6229d0 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55d9bd6229a0 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x55d9bd6228c0 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x55d9bd622878 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x55d9bd622860 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x55d9bd622820 <col:20> '_Bool' lvalue Var 0x55d9bd619a60 'x$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x55d9bd6228a8 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x55d9bd622890 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x55d9bd622840 <col:38> '_Bool' lvalue Var 0x55d9bd6195a0 'x$r_buff0_thd3' '_Bool'
|   |     |-ImplicitCastExpr 0x55d9bd622958 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x55d9bd622910 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x55d9bd6228e0 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x55d9bd622988 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x55d9bd622970 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x55d9bd622938 <col:66> '_Bool' lvalue Var 0x55d9bd6195a0 'x$r_buff0_thd3' '_Bool'
|   |-BinaryOperator 0x55d9bd622ce8 <line:799:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x55d9bd622a08 <col:3> '_Bool' lvalue Var 0x55d9bd6197f8 'x$r_buff1_thd3' '_Bool'
|   | `-ImplicitCastExpr 0x55d9bd622cd0 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55d9bd622ca0 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x55d9bd622bc0 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x55d9bd622ac8 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x55d9bd622a80 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x55d9bd622a68 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x55d9bd622a28 <col:20> '_Bool' lvalue Var 0x55d9bd619a60 'x$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x55d9bd622ab0 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x55d9bd622a98 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x55d9bd622a48 <col:38> '_Bool' lvalue Var 0x55d9bd6195a0 'x$r_buff0_thd3' '_Bool'
|   |     | `-BinaryOperator 0x55d9bd622ba0 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x55d9bd622b40 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x55d9bd622b28 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x55d9bd622ae8 <col:56> '_Bool' lvalue Var 0x55d9bd61ab98 'x$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x55d9bd622b70 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x55d9bd622b58 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x55d9bd622b08 <col:74> '_Bool' lvalue Var 0x55d9bd6197f8 'x$r_buff1_thd3' '_Bool'
|   |     |-ImplicitCastExpr 0x55d9bd622c58 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x55d9bd622c10 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x55d9bd622be0 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x55d9bd622c88 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x55d9bd622c70 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x55d9bd622c38 <col:102> '_Bool' lvalue Var 0x55d9bd6197f8 'x$r_buff1_thd3' '_Bool'
|   |-CallExpr 0x55d9bd622d40 <line:800:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x55d9bd622d28 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55d9bd622d08 <col:3> 'void ()' Function 0x55d9bd5bf060 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x55d9bd622d98 <line:801:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x55d9bd622d80 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55d9bd622d60 <col:3> 'void ()' Function 0x55d9bd5befa0 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x55d9bd622e50 <line:802:3, col:41> 'int' '='
|   | |-DeclRefExpr 0x55d9bd622db8 <col:3> 'int' lvalue Var 0x55d9bd618478 '__unbuffered_cnt' 'int'
|   | `-BinaryOperator 0x55d9bd622e30 <col:22, col:41> 'int' '+'
|   |   |-ImplicitCastExpr 0x55d9bd622e18 <col:22> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x55d9bd622dd8 <col:22> 'int' lvalue Var 0x55d9bd618478 '__unbuffered_cnt' 'int'
|   |   `-IntegerLiteral 0x55d9bd622df8 <col:41> 'int' 1
|   |-CallExpr 0x55d9bd622ea8 <line:803:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x55d9bd622e90 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55d9bd622e70 <col:3> 'void ()' Function 0x55d9bd5bf060 '__VERIFIER_atomic_end' 'void ()'
|   `-ReturnStmt 0x55d9bd622f20 <line:804:3, col:36>
|     `-CallExpr 0x55d9bd622f00 <col:10, col:36> 'void *'
|       `-ImplicitCastExpr 0x55d9bd622ee8 <col:10> 'void *(*)(void)' <FunctionToPointerDecay>
|         `-DeclRefExpr 0x55d9bd622ec8 <col:10> 'void *(void)' Function 0x55d9bd5beab8 '__VERIFIER_nondet_pointer' 'void *(void)'
|-FunctionDecl 0x55d9bd6230f0 prev 0x55d9bd6180f8 <line:806:1, line:822:1> line:806:8 used P3 'void *(void *)'
| |-ParmVarDecl 0x55d9bd623058 <col:11, col:17> col:17 arg 'void *'
| `-CompoundStmt 0x55d9bd624208 <line:807:1, line:822:1>
|   |-CallExpr 0x55d9bd6231d0 <line:808:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x55d9bd6231b8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55d9bd623198 <col:3> 'void ()' Function 0x55d9bd5befa0 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x55d9bd623230 <line:809:3, col:7> 'int' '='
|   | |-DeclRefExpr 0x55d9bd6231f0 <col:3> 'int' lvalue Var 0x55d9bd61ac98 'y' 'int'
|   | `-IntegerLiteral 0x55d9bd623210 <col:7> 'int' 2
|   |-CallExpr 0x55d9bd623288 <line:810:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x55d9bd623270 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55d9bd623250 <col:3> 'void ()' Function 0x55d9bd5bf060 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x55d9bd6232e0 <line:811:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x55d9bd6232c8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55d9bd6232a8 <col:3> 'void ()' Function 0x55d9bd5befa0 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x55d9bd6235c8 <line:812:3, col:103> 'int' '='
|   | |-DeclRefExpr 0x55d9bd623300 <col:3> 'int' lvalue Var 0x55d9bd6192a8 'x' 'int'
|   | `-ConditionalOperator 0x55d9bd623598 <col:7, col:103> 'int'
|   |   |-BinaryOperator 0x55d9bd6233c0 <col:7, col:25> 'int' '&&'
|   |   | |-ImplicitCastExpr 0x55d9bd623378 <col:7> 'int' <IntegralCast>
|   |   | | `-ImplicitCastExpr 0x55d9bd623360 <col:7> '_Bool' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x55d9bd623320 <col:7> '_Bool' lvalue Var 0x55d9bd619a60 'x$w_buff0_used' '_Bool'
|   |   | `-ImplicitCastExpr 0x55d9bd6233a8 <col:25> 'int' <IntegralCast>
|   |   |   `-ImplicitCastExpr 0x55d9bd623390 <col:25> '_Bool' <LValueToRValue>
|   |   |     `-DeclRefExpr 0x55d9bd623340 <col:25> '_Bool' lvalue Var 0x55d9bd619618 'x$r_buff0_thd4' '_Bool'
|   |   |-ImplicitCastExpr 0x55d9bd623580 <col:42> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x55d9bd6233e0 <col:42> 'int' lvalue Var 0x55d9bd6199e8 'x$w_buff0' 'int'
|   |   `-ParenExpr 0x55d9bd623560 <col:54, col:103> 'int'
|   |     `-ConditionalOperator 0x55d9bd623530 <col:55, col:102> 'int'
|   |       |-BinaryOperator 0x55d9bd6234a0 <col:55, col:73> 'int' '&&'
|   |       | |-ImplicitCastExpr 0x55d9bd623458 <col:55> 'int' <IntegralCast>
|   |       | | `-ImplicitCastExpr 0x55d9bd623440 <col:55> '_Bool' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x55d9bd623400 <col:55> '_Bool' lvalue Var 0x55d9bd61ab98 'x$w_buff1_used' '_Bool'
|   |       | `-ImplicitCastExpr 0x55d9bd623488 <col:73> 'int' <IntegralCast>
|   |       |   `-ImplicitCastExpr 0x55d9bd623470 <col:73> '_Bool' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x55d9bd623420 <col:73> '_Bool' lvalue Var 0x55d9bd619870 'x$r_buff1_thd4' '_Bool'
|   |       |-ImplicitCastExpr 0x55d9bd623500 <col:90> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x55d9bd6234c0 <col:90> 'int' lvalue Var 0x55d9bd61ab20 'x$w_buff1' 'int'
|   |       `-ImplicitCastExpr 0x55d9bd623518 <col:102> 'int' <LValueToRValue>
|   |         `-DeclRefExpr 0x55d9bd6234e0 <col:102> 'int' lvalue Var 0x55d9bd6192a8 'x' 'int'
|   |-BinaryOperator 0x55d9bd6237d0 <line:813:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x55d9bd6235e8 <col:3> '_Bool' lvalue Var 0x55d9bd619a60 'x$w_buff0_used' '_Bool'
|   | `-ImplicitCastExpr 0x55d9bd6237b8 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55d9bd623788 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x55d9bd6236a8 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x55d9bd623660 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x55d9bd623648 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x55d9bd623608 <col:20> '_Bool' lvalue Var 0x55d9bd619a60 'x$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x55d9bd623690 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x55d9bd623678 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x55d9bd623628 <col:38> '_Bool' lvalue Var 0x55d9bd619618 'x$r_buff0_thd4' '_Bool'
|   |     |-ImplicitCastExpr 0x55d9bd623740 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x55d9bd6236f8 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x55d9bd6236c8 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x55d9bd623770 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x55d9bd623758 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x55d9bd623720 <col:66> '_Bool' lvalue Var 0x55d9bd619a60 'x$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x55d9bd623ab8 <line:814:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x55d9bd6237f0 <col:3> '_Bool' lvalue Var 0x55d9bd61ab98 'x$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x55d9bd623aa0 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55d9bd623a70 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x55d9bd623990 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x55d9bd6238b0 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x55d9bd623868 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x55d9bd623850 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x55d9bd623810 <col:20> '_Bool' lvalue Var 0x55d9bd619a60 'x$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x55d9bd623898 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x55d9bd623880 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x55d9bd623830 <col:38> '_Bool' lvalue Var 0x55d9bd619618 'x$r_buff0_thd4' '_Bool'
|   |     | `-BinaryOperator 0x55d9bd623970 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x55d9bd623928 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x55d9bd623910 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x55d9bd6238d0 <col:56> '_Bool' lvalue Var 0x55d9bd61ab98 'x$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x55d9bd623958 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x55d9bd623940 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x55d9bd6238f0 <col:74> '_Bool' lvalue Var 0x55d9bd619870 'x$r_buff1_thd4' '_Bool'
|   |     |-ImplicitCastExpr 0x55d9bd623a28 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x55d9bd6239e0 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x55d9bd6239b0 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x55d9bd623a58 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x55d9bd623a40 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x55d9bd623a08 <col:102> '_Bool' lvalue Var 0x55d9bd61ab98 'x$w_buff1_used' '_Bool'
|   |-BinaryOperator 0x55d9bd623cd8 <line:815:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x55d9bd623ad8 <col:3> '_Bool' lvalue Var 0x55d9bd619618 'x$r_buff0_thd4' '_Bool'
|   | `-ImplicitCastExpr 0x55d9bd623cc0 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55d9bd623c90 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x55d9bd623bb0 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x55d9bd623b50 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x55d9bd623b38 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x55d9bd623af8 <col:20> '_Bool' lvalue Var 0x55d9bd619a60 'x$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x55d9bd623b80 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x55d9bd623b68 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x55d9bd623b18 <col:38> '_Bool' lvalue Var 0x55d9bd619618 'x$r_buff0_thd4' '_Bool'
|   |     |-ImplicitCastExpr 0x55d9bd623c48 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x55d9bd623c00 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x55d9bd623bd0 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x55d9bd623c78 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x55d9bd623c60 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x55d9bd623c28 <col:66> '_Bool' lvalue Var 0x55d9bd619618 'x$r_buff0_thd4' '_Bool'
|   |-BinaryOperator 0x55d9bd623fc0 <line:816:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x55d9bd623cf8 <col:3> '_Bool' lvalue Var 0x55d9bd619870 'x$r_buff1_thd4' '_Bool'
|   | `-ImplicitCastExpr 0x55d9bd623fa8 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55d9bd623f78 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x55d9bd623e98 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x55d9bd623db8 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x55d9bd623d70 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x55d9bd623d58 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x55d9bd623d18 <col:20> '_Bool' lvalue Var 0x55d9bd619a60 'x$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x55d9bd623da0 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x55d9bd623d88 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x55d9bd623d38 <col:38> '_Bool' lvalue Var 0x55d9bd619618 'x$r_buff0_thd4' '_Bool'
|   |     | `-BinaryOperator 0x55d9bd623e78 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x55d9bd623e30 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x55d9bd623e18 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x55d9bd623dd8 <col:56> '_Bool' lvalue Var 0x55d9bd61ab98 'x$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x55d9bd623e60 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x55d9bd623e48 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x55d9bd623df8 <col:74> '_Bool' lvalue Var 0x55d9bd619870 'x$r_buff1_thd4' '_Bool'
|   |     |-ImplicitCastExpr 0x55d9bd623f30 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x55d9bd623ee8 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x55d9bd623eb8 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x55d9bd623f60 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x55d9bd623f48 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x55d9bd623f10 <col:102> '_Bool' lvalue Var 0x55d9bd619870 'x$r_buff1_thd4' '_Bool'
|   |-CallExpr 0x55d9bd624018 <line:817:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x55d9bd624000 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55d9bd623fe0 <col:3> 'void ()' Function 0x55d9bd5bf060 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x55d9bd624070 <line:818:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x55d9bd624058 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55d9bd624038 <col:3> 'void ()' Function 0x55d9bd5befa0 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x55d9bd624128 <line:819:3, col:41> 'int' '='
|   | |-DeclRefExpr 0x55d9bd624090 <col:3> 'int' lvalue Var 0x55d9bd618478 '__unbuffered_cnt' 'int'
|   | `-BinaryOperator 0x55d9bd624108 <col:22, col:41> 'int' '+'
|   |   |-ImplicitCastExpr 0x55d9bd6240f0 <col:22> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x55d9bd6240b0 <col:22> 'int' lvalue Var 0x55d9bd618478 '__unbuffered_cnt' 'int'
|   |   `-IntegerLiteral 0x55d9bd6240d0 <col:41> 'int' 1
|   |-CallExpr 0x55d9bd624180 <line:820:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x55d9bd624168 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55d9bd624148 <col:3> 'void ()' Function 0x55d9bd5bf060 '__VERIFIER_atomic_end' 'void ()'
|   `-ReturnStmt 0x55d9bd6241f8 <line:821:3, col:36>
|     `-CallExpr 0x55d9bd6241d8 <col:10, col:36> 'void *'
|       `-ImplicitCastExpr 0x55d9bd6241c0 <col:10> 'void *(*)(void)' <FunctionToPointerDecay>
|         `-DeclRefExpr 0x55d9bd6241a0 <col:10> 'void *(void)' Function 0x55d9bd5beab8 '__VERIFIER_nondet_pointer' 'void *(void)'
|-FunctionDecl 0x55d9bd6242a8 prev 0x55d9bd6181c0 <line:823:1, line:825:1> line:823:6 fence 'void ()'
| `-CompoundStmt 0x55d9bd624348 <line:824:1, line:825:1>
|-FunctionDecl 0x55d9bd624378 prev 0x55d9bd618280 <line:826:1, line:828:1> line:826:6 isync 'void ()'
| `-CompoundStmt 0x55d9bd624418 <line:827:1, line:828:1>
|-FunctionDecl 0x55d9bd624448 prev 0x55d9bd618340 <line:829:1, line:831:1> line:829:6 lwfence 'void ()'
| `-CompoundStmt 0x55d9bd6244e8 <line:830:1, line:831:1>
`-FunctionDecl 0x55d9bd624558 <line:832:1, line:860:1> line:832:5 main 'int ()'
  `-CompoundStmt 0x55d9bd6267e8 <line:833:1, line:860:1>
    |-DeclStmt 0x55d9bd624670 <line:834:3, col:18>
    | `-VarDecl 0x55d9bd624608 <col:3, col:13> col:13 used t2247 'pthread_t':'unsigned long'
    |-CallExpr 0x55d9bd624878 <line:835:3, col:54> 'int'
    | |-ImplicitCastExpr 0x55d9bd624860 <col:3> 'int (*)(pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x55d9bd624688 <col:3> 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' Function 0x55d9bd5ff5b8 'pthread_create' 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)'
    | |-UnaryOperator 0x55d9bd6246c8 <col:18, col:19> 'pthread_t *' prefix '&' cannot overflow
    | | `-DeclRefExpr 0x55d9bd6246a8 <col:19> 'pthread_t':'unsigned long' lvalue Var 0x55d9bd624608 't2247' 'pthread_t':'unsigned long'
    | |-ImplicitCastExpr 0x55d9bd6248b8 <col:26, col:36> 'const pthread_attr_t *' <NullToPointer>
    | | `-ParenExpr 0x55d9bd624740 <col:26, col:36> 'void *'
    | |   `-CStyleCastExpr 0x55d9bd624718 <col:27, col:35> 'void *' <NullToPointer>
    | |     `-IntegerLiteral 0x55d9bd6246e0 <col:35> 'int' 0
    | |-ImplicitCastExpr 0x55d9bd6248d0 <col:39> 'void *(*)(void *)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x55d9bd624760 <col:39> 'void *(void *)' Function 0x55d9bd61af38 'P0' 'void *(void *)'
    | `-ParenExpr 0x55d9bd6247e0 <col:43, col:53> 'void *'
    |   `-CStyleCastExpr 0x55d9bd6247b8 <col:44, col:52> 'void *' <NullToPointer>
    |     `-IntegerLiteral 0x55d9bd624780 <col:52> 'int' 0
    |-DeclStmt 0x55d9bd624960 <line:836:3, col:18>
    | `-VarDecl 0x55d9bd6248f8 <col:3, col:13> col:13 used t2248 'pthread_t':'unsigned long'
    |-CallExpr 0x55d9bd624b08 <line:837:3, col:54> 'int'
    | |-ImplicitCastExpr 0x55d9bd624af0 <col:3> 'int (*)(pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x55d9bd624978 <col:3> 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' Function 0x55d9bd5ff5b8 'pthread_create' 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)'
    | |-UnaryOperator 0x55d9bd6249b8 <col:18, col:19> 'pthread_t *' prefix '&' cannot overflow
    | | `-DeclRefExpr 0x55d9bd624998 <col:19> 'pthread_t':'unsigned long' lvalue Var 0x55d9bd6248f8 't2248' 'pthread_t':'unsigned long'
    | |-ImplicitCastExpr 0x55d9bd624b48 <col:26, col:36> 'const pthread_attr_t *' <NullToPointer>
    | | `-ParenExpr 0x55d9bd624a30 <col:26, col:36> 'void *'
    | |   `-CStyleCastExpr 0x55d9bd624a08 <col:27, col:35> 'void *' <NullToPointer>
    | |     `-IntegerLiteral 0x55d9bd6249d0 <col:35> 'int' 0
    | |-ImplicitCastExpr 0x55d9bd624b60 <col:39> 'void *(*)(void *)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x55d9bd624a50 <col:39> 'void *(void *)' Function 0x55d9bd61e030 'P1' 'void *(void *)'
    | `-ParenExpr 0x55d9bd624ad0 <col:43, col:53> 'void *'
    |   `-CStyleCastExpr 0x55d9bd624aa8 <col:44, col:52> 'void *' <NullToPointer>
    |     `-IntegerLiteral 0x55d9bd624a70 <col:52> 'int' 0
    |-DeclStmt 0x55d9bd624c28 <line:838:3, col:18>
    | `-VarDecl 0x55d9bd624bc0 <col:3, col:13> col:13 used t2249 'pthread_t':'unsigned long'
    |-CallExpr 0x55d9bd624dd0 <line:839:3, col:54> 'int'
    | |-ImplicitCastExpr 0x55d9bd624db8 <col:3> 'int (*)(pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x55d9bd624c40 <col:3> 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' Function 0x55d9bd5ff5b8 'pthread_create' 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)'
    | |-UnaryOperator 0x55d9bd624c80 <col:18, col:19> 'pthread_t *' prefix '&' cannot overflow
    | | `-DeclRefExpr 0x55d9bd624c60 <col:19> 'pthread_t':'unsigned long' lvalue Var 0x55d9bd624bc0 't2249' 'pthread_t':'unsigned long'
    | |-ImplicitCastExpr 0x55d9bd624e10 <col:26, col:36> 'const pthread_attr_t *' <NullToPointer>
    | | `-ParenExpr 0x55d9bd624cf8 <col:26, col:36> 'void *'
    | |   `-CStyleCastExpr 0x55d9bd624cd0 <col:27, col:35> 'void *' <NullToPointer>
    | |     `-IntegerLiteral 0x55d9bd624c98 <col:35> 'int' 0
    | |-ImplicitCastExpr 0x55d9bd624e28 <col:39> 'void *(*)(void *)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x55d9bd624d18 <col:39> 'void *(void *)' Function 0x55d9bd61f270 'P2' 'void *(void *)'
    | `-ParenExpr 0x55d9bd624d98 <col:43, col:53> 'void *'
    |   `-CStyleCastExpr 0x55d9bd624d70 <col:44, col:52> 'void *' <NullToPointer>
    |     `-IntegerLiteral 0x55d9bd624d38 <col:52> 'int' 0
    |-DeclStmt 0x55d9bd624eb8 <line:840:3, col:18>
    | `-VarDecl 0x55d9bd624e50 <col:3, col:13> col:13 used t2250 'pthread_t':'unsigned long'
    |-CallExpr 0x55d9bd625060 <line:841:3, col:54> 'int'
    | |-ImplicitCastExpr 0x55d9bd625048 <col:3> 'int (*)(pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x55d9bd624ed0 <col:3> 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' Function 0x55d9bd5ff5b8 'pthread_create' 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)'
    | |-UnaryOperator 0x55d9bd624f10 <col:18, col:19> 'pthread_t *' prefix '&' cannot overflow
    | | `-DeclRefExpr 0x55d9bd624ef0 <col:19> 'pthread_t':'unsigned long' lvalue Var 0x55d9bd624e50 't2250' 'pthread_t':'unsigned long'
    | |-ImplicitCastExpr 0x55d9bd6250a0 <col:26, col:36> 'const pthread_attr_t *' <NullToPointer>
    | | `-ParenExpr 0x55d9bd624f88 <col:26, col:36> 'void *'
    | |   `-CStyleCastExpr 0x55d9bd624f60 <col:27, col:35> 'void *' <NullToPointer>
    | |     `-IntegerLiteral 0x55d9bd624f28 <col:35> 'int' 0
    | |-ImplicitCastExpr 0x55d9bd6250b8 <col:39> 'void *(*)(void *)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x55d9bd624fa8 <col:39> 'void *(void *)' Function 0x55d9bd6230f0 'P3' 'void *(void *)'
    | `-ParenExpr 0x55d9bd625028 <col:43, col:53> 'void *'
    |   `-CStyleCastExpr 0x55d9bd625000 <col:44, col:52> 'void *' <NullToPointer>
    |     `-IntegerLiteral 0x55d9bd624fc8 <col:52> 'int' 0
    |-CallExpr 0x55d9bd625108 <line:842:3, col:27> 'void'
    | `-ImplicitCastExpr 0x55d9bd6250f0 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x55d9bd6250d0 <col:3> 'void ()' Function 0x55d9bd5befa0 '__VERIFIER_atomic_begin' 'void ()'
    |-BinaryOperator 0x55d9bd6251d8 <line:843:3, col:41> '_Bool' '='
    | |-DeclRefExpr 0x55d9bd625128 <col:3> '_Bool' lvalue Var 0x55d9bd619130 'main$tmp_guard0' '_Bool'
    | `-ImplicitCastExpr 0x55d9bd6251c0 <col:21, col:41> '_Bool' <IntegralToBoolean>
    |   `-BinaryOperator 0x55d9bd6251a0 <col:21, col:41> 'int' '=='
    |     |-ImplicitCastExpr 0x55d9bd625188 <col:21> 'int' <LValueToRValue>
    |     | `-DeclRefExpr 0x55d9bd625148 <col:21> 'int' lvalue Var 0x55d9bd618478 '__unbuffered_cnt' 'int'
    |     `-IntegerLiteral 0x55d9bd625168 <col:41> 'int' 4
    |-CallExpr 0x55d9bd625230 <line:844:3, col:25> 'void'
    | `-ImplicitCastExpr 0x55d9bd625218 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x55d9bd6251f8 <col:3> 'void ()' Function 0x55d9bd5bf060 '__VERIFIER_atomic_end' 'void ()'
    |-CallExpr 0x55d9bd6252d8 <line:845:3, col:36> 'void'
    | |-ImplicitCastExpr 0x55d9bd6252c0 <col:3> 'void (*)(int)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x55d9bd625250 <col:3> 'void (int)' Function 0x55d9bd5be940 '__VERIFIER_assume' 'void (int)'
    | `-ImplicitCastExpr 0x55d9bd625318 <col:21> 'int' <IntegralCast>
    |   `-ImplicitCastExpr 0x55d9bd625300 <col:21> '_Bool' <LValueToRValue>
    |     `-DeclRefExpr 0x55d9bd625270 <col:21> '_Bool' lvalue Var 0x55d9bd619130 'main$tmp_guard0' '_Bool'
    |-CallExpr 0x55d9bd625368 <line:846:3, col:27> 'void'
    | `-ImplicitCastExpr 0x55d9bd625350 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x55d9bd625330 <col:3> 'void ()' Function 0x55d9bd5befa0 '__VERIFIER_atomic_begin' 'void ()'
    |-BinaryOperator 0x55d9bd625650 <line:847:3, col:103> 'int' '='
    | |-DeclRefExpr 0x55d9bd625388 <col:3> 'int' lvalue Var 0x55d9bd6192a8 'x' 'int'
    | `-ConditionalOperator 0x55d9bd625620 <col:7, col:103> 'int'
    |   |-BinaryOperator 0x55d9bd625448 <col:7, col:25> 'int' '&&'
    |   | |-ImplicitCastExpr 0x55d9bd625400 <col:7> 'int' <IntegralCast>
    |   | | `-ImplicitCastExpr 0x55d9bd6253e8 <col:7> '_Bool' <LValueToRValue>
    |   | |   `-DeclRefExpr 0x55d9bd6253a8 <col:7> '_Bool' lvalue Var 0x55d9bd619a60 'x$w_buff0_used' '_Bool'
    |   | `-ImplicitCastExpr 0x55d9bd625430 <col:25> 'int' <IntegralCast>
    |   |   `-ImplicitCastExpr 0x55d9bd625418 <col:25> '_Bool' <LValueToRValue>
    |   |     `-DeclRefExpr 0x55d9bd6253c8 <col:25> '_Bool' lvalue Var 0x55d9bd619438 'x$r_buff0_thd0' '_Bool'
    |   |-ImplicitCastExpr 0x55d9bd625608 <col:42> 'int' <LValueToRValue>
    |   | `-DeclRefExpr 0x55d9bd625468 <col:42> 'int' lvalue Var 0x55d9bd6199e8 'x$w_buff0' 'int'
    |   `-ParenExpr 0x55d9bd6255e8 <col:54, col:103> 'int'
    |     `-ConditionalOperator 0x55d9bd6255b8 <col:55, col:102> 'int'
    |       |-BinaryOperator 0x55d9bd625528 <col:55, col:73> 'int' '&&'
    |       | |-ImplicitCastExpr 0x55d9bd6254e0 <col:55> 'int' <IntegralCast>
    |       | | `-ImplicitCastExpr 0x55d9bd6254c8 <col:55> '_Bool' <LValueToRValue>
    |       | |   `-DeclRefExpr 0x55d9bd625488 <col:55> '_Bool' lvalue Var 0x55d9bd61ab98 'x$w_buff1_used' '_Bool'
    |       | `-ImplicitCastExpr 0x55d9bd625510 <col:73> 'int' <IntegralCast>
    |       |   `-ImplicitCastExpr 0x55d9bd6254f8 <col:73> '_Bool' <LValueToRValue>
    |       |     `-DeclRefExpr 0x55d9bd6254a8 <col:73> '_Bool' lvalue Var 0x55d9bd619690 'x$r_buff1_thd0' '_Bool'
    |       |-ImplicitCastExpr 0x55d9bd625588 <col:90> 'int' <LValueToRValue>
    |       | `-DeclRefExpr 0x55d9bd625548 <col:90> 'int' lvalue Var 0x55d9bd61ab20 'x$w_buff1' 'int'
    |       `-ImplicitCastExpr 0x55d9bd6255a0 <col:102> 'int' <LValueToRValue>
    |         `-DeclRefExpr 0x55d9bd625568 <col:102> 'int' lvalue Var 0x55d9bd6192a8 'x' 'int'
    |-BinaryOperator 0x55d9bd625858 <line:848:3, col:66> '_Bool' '='
    | |-DeclRefExpr 0x55d9bd625670 <col:3> '_Bool' lvalue Var 0x55d9bd619a60 'x$w_buff0_used' '_Bool'
    | `-ImplicitCastExpr 0x55d9bd625840 <col:20, col:66> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x55d9bd625810 <col:20, col:66> 'int'
    |     |-BinaryOperator 0x55d9bd625730 <col:20, col:38> 'int' '&&'
    |     | |-ImplicitCastExpr 0x55d9bd6256e8 <col:20> 'int' <IntegralCast>
    |     | | `-ImplicitCastExpr 0x55d9bd6256d0 <col:20> '_Bool' <LValueToRValue>
    |     | |   `-DeclRefExpr 0x55d9bd625690 <col:20> '_Bool' lvalue Var 0x55d9bd619a60 'x$w_buff0_used' '_Bool'
    |     | `-ImplicitCastExpr 0x55d9bd625718 <col:38> 'int' <IntegralCast>
    |     |   `-ImplicitCastExpr 0x55d9bd625700 <col:38> '_Bool' <LValueToRValue>
    |     |     `-DeclRefExpr 0x55d9bd6256b0 <col:38> '_Bool' lvalue Var 0x55d9bd619438 'x$r_buff0_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x55d9bd6257c8 <col:55, col:62> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x55d9bd625780 <col:55, col:62> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x55d9bd625750 <col:62> 'int' 0
    |     `-ImplicitCastExpr 0x55d9bd6257f8 <col:66> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x55d9bd6257e0 <col:66> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x55d9bd6257a8 <col:66> '_Bool' lvalue Var 0x55d9bd619a60 'x$w_buff0_used' '_Bool'
    |-BinaryOperator 0x55d9bd625b40 <line:849:3, col:102> '_Bool' '='
    | |-DeclRefExpr 0x55d9bd625878 <col:3> '_Bool' lvalue Var 0x55d9bd61ab98 'x$w_buff1_used' '_Bool'
    | `-ImplicitCastExpr 0x55d9bd625b28 <col:20, col:102> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x55d9bd625af8 <col:20, col:102> 'int'
    |     |-BinaryOperator 0x55d9bd625a18 <col:20, col:74> 'int' '||'
    |     | |-BinaryOperator 0x55d9bd625938 <col:20, col:38> 'int' '&&'
    |     | | |-ImplicitCastExpr 0x55d9bd6258f0 <col:20> 'int' <IntegralCast>
    |     | | | `-ImplicitCastExpr 0x55d9bd6258d8 <col:20> '_Bool' <LValueToRValue>
    |     | | |   `-DeclRefExpr 0x55d9bd625898 <col:20> '_Bool' lvalue Var 0x55d9bd619a60 'x$w_buff0_used' '_Bool'
    |     | | `-ImplicitCastExpr 0x55d9bd625920 <col:38> 'int' <IntegralCast>
    |     | |   `-ImplicitCastExpr 0x55d9bd625908 <col:38> '_Bool' <LValueToRValue>
    |     | |     `-DeclRefExpr 0x55d9bd6258b8 <col:38> '_Bool' lvalue Var 0x55d9bd619438 'x$r_buff0_thd0' '_Bool'
    |     | `-BinaryOperator 0x55d9bd6259f8 <col:56, col:74> 'int' '&&'
    |     |   |-ImplicitCastExpr 0x55d9bd6259b0 <col:56> 'int' <IntegralCast>
    |     |   | `-ImplicitCastExpr 0x55d9bd625998 <col:56> '_Bool' <LValueToRValue>
    |     |   |   `-DeclRefExpr 0x55d9bd625958 <col:56> '_Bool' lvalue Var 0x55d9bd61ab98 'x$w_buff1_used' '_Bool'
    |     |   `-ImplicitCastExpr 0x55d9bd6259e0 <col:74> 'int' <IntegralCast>
    |     |     `-ImplicitCastExpr 0x55d9bd6259c8 <col:74> '_Bool' <LValueToRValue>
    |     |       `-DeclRefExpr 0x55d9bd625978 <col:74> '_Bool' lvalue Var 0x55d9bd619690 'x$r_buff1_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x55d9bd625ab0 <col:91, col:98> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x55d9bd625a68 <col:91, col:98> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x55d9bd625a38 <col:98> 'int' 0
    |     `-ImplicitCastExpr 0x55d9bd625ae0 <col:102> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x55d9bd625ac8 <col:102> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x55d9bd625a90 <col:102> '_Bool' lvalue Var 0x55d9bd61ab98 'x$w_buff1_used' '_Bool'
    |-BinaryOperator 0x55d9bd625d58 <line:850:3, col:66> '_Bool' '='
    | |-DeclRefExpr 0x55d9bd625b60 <col:3> '_Bool' lvalue Var 0x55d9bd619438 'x$r_buff0_thd0' '_Bool'
    | `-ImplicitCastExpr 0x55d9bd625d40 <col:20, col:66> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x55d9bd625d10 <col:20, col:66> 'int'
    |     |-BinaryOperator 0x55d9bd625c30 <col:20, col:38> 'int' '&&'
    |     | |-ImplicitCastExpr 0x55d9bd625be8 <col:20> 'int' <IntegralCast>
    |     | | `-ImplicitCastExpr 0x55d9bd625bd0 <col:20> '_Bool' <LValueToRValue>
    |     | |   `-DeclRefExpr 0x55d9bd625b80 <col:20> '_Bool' lvalue Var 0x55d9bd619a60 'x$w_buff0_used' '_Bool'
    |     | `-ImplicitCastExpr 0x55d9bd625c18 <col:38> 'int' <IntegralCast>
    |     |   `-ImplicitCastExpr 0x55d9bd625c00 <col:38> '_Bool' <LValueToRValue>
    |     |     `-DeclRefExpr 0x55d9bd625ba0 <col:38> '_Bool' lvalue Var 0x55d9bd619438 'x$r_buff0_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x55d9bd625cc8 <col:55, col:62> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x55d9bd625c80 <col:55, col:62> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x55d9bd625c50 <col:62> 'int' 0
    |     `-ImplicitCastExpr 0x55d9bd625cf8 <col:66> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x55d9bd625ce0 <col:66> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x55d9bd625ca8 <col:66> '_Bool' lvalue Var 0x55d9bd619438 'x$r_buff0_thd0' '_Bool'
    |-BinaryOperator 0x55d9bd626040 <line:851:3, col:102> '_Bool' '='
    | |-DeclRefExpr 0x55d9bd625d78 <col:3> '_Bool' lvalue Var 0x55d9bd619690 'x$r_buff1_thd0' '_Bool'
    | `-ImplicitCastExpr 0x55d9bd626028 <col:20, col:102> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x55d9bd625ff8 <col:20, col:102> 'int'
    |     |-BinaryOperator 0x55d9bd625f18 <col:20, col:74> 'int' '||'
    |     | |-BinaryOperator 0x55d9bd625e38 <col:20, col:38> 'int' '&&'
    |     | | |-ImplicitCastExpr 0x55d9bd625df0 <col:20> 'int' <IntegralCast>
    |     | | | `-ImplicitCastExpr 0x55d9bd625dd8 <col:20> '_Bool' <LValueToRValue>
    |     | | |   `-DeclRefExpr 0x55d9bd625d98 <col:20> '_Bool' lvalue Var 0x55d9bd619a60 'x$w_buff0_used' '_Bool'
    |     | | `-ImplicitCastExpr 0x55d9bd625e20 <col:38> 'int' <IntegralCast>
    |     | |   `-ImplicitCastExpr 0x55d9bd625e08 <col:38> '_Bool' <LValueToRValue>
    |     | |     `-DeclRefExpr 0x55d9bd625db8 <col:38> '_Bool' lvalue Var 0x55d9bd619438 'x$r_buff0_thd0' '_Bool'
    |     | `-BinaryOperator 0x55d9bd625ef8 <col:56, col:74> 'int' '&&'
    |     |   |-ImplicitCastExpr 0x55d9bd625eb0 <col:56> 'int' <IntegralCast>
    |     |   | `-ImplicitCastExpr 0x55d9bd625e98 <col:56> '_Bool' <LValueToRValue>
    |     |   |   `-DeclRefExpr 0x55d9bd625e58 <col:56> '_Bool' lvalue Var 0x55d9bd61ab98 'x$w_buff1_used' '_Bool'
    |     |   `-ImplicitCastExpr 0x55d9bd625ee0 <col:74> 'int' <IntegralCast>
    |     |     `-ImplicitCastExpr 0x55d9bd625ec8 <col:74> '_Bool' <LValueToRValue>
    |     |       `-DeclRefExpr 0x55d9bd625e78 <col:74> '_Bool' lvalue Var 0x55d9bd619690 'x$r_buff1_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x55d9bd625fb0 <col:91, col:98> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x55d9bd625f68 <col:91, col:98> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x55d9bd625f38 <col:98> 'int' 0
    |     `-ImplicitCastExpr 0x55d9bd625fe0 <col:102> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x55d9bd625fc8 <col:102> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x55d9bd625f90 <col:102> '_Bool' lvalue Var 0x55d9bd619690 'x$r_buff1_thd0' '_Bool'
    |-CallExpr 0x55d9bd626098 <line:852:3, col:25> 'void'
    | `-ImplicitCastExpr 0x55d9bd626080 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x55d9bd626060 <col:3> 'void ()' Function 0x55d9bd5bf060 '__VERIFIER_atomic_end' 'void ()'
    |-CallExpr 0x55d9bd6260f0 <line:853:3, col:27> 'void'
    | `-ImplicitCastExpr 0x55d9bd6260d8 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x55d9bd6260b8 <col:3> 'void ()' Function 0x55d9bd5befa0 '__VERIFIER_atomic_begin' 'void ()'
    |-BinaryOperator 0x55d9bd626188 <line:854:3, col:42> '_Bool' '='
    | |-DeclRefExpr 0x55d9bd626110 <col:3> '_Bool' lvalue Var 0x55d9bd61ada8 'weak$$choice1' '_Bool'
    | `-CallExpr 0x55d9bd626168 <col:19, col:42> '_Bool'
    |   `-ImplicitCastExpr 0x55d9bd626150 <col:19> '_Bool (*)(void)' <FunctionToPointerDecay>
    |     `-DeclRefExpr 0x55d9bd626130 <col:19> '_Bool (void)' Function 0x55d9bd5be770 '__VERIFIER_nondet_bool' '_Bool (void)'
    |-BinaryOperator 0x55d9bd6263c0 <line:855:3, col:140> 'int' '='
    | |-DeclRefExpr 0x55d9bd6261a8 <col:3> 'int' lvalue Var 0x55d9bd6187d8 '__unbuffered_p2_EAX' 'int'
    | `-ConditionalOperator 0x55d9bd626390 <col:25, col:140> 'int'
    |   |-ImplicitCastExpr 0x55d9bd626360 <col:25> 'int' <IntegralCast>
    |   | `-ImplicitCastExpr 0x55d9bd626348 <col:25> '_Bool' <LValueToRValue>
    |   |   `-DeclRefExpr 0x55d9bd6261c8 <col:25> '_Bool' lvalue Var 0x55d9bd618e48 '__unbuffered_p2_EAX$read_delayed' '_Bool'
    |   |-ParenExpr 0x55d9bd626308 <col:60, col:136> 'int'
    |   | `-ConditionalOperator 0x55d9bd6262d8 <col:61, col:117> 'int'
    |   |   |-ImplicitCastExpr 0x55d9bd626290 <col:61> 'int' <IntegralCast>
    |   |   | `-ImplicitCastExpr 0x55d9bd626278 <col:61> '_Bool' <LValueToRValue>
    |   |   |   `-DeclRefExpr 0x55d9bd6261e8 <col:61> '_Bool' lvalue Var 0x55d9bd61ada8 'weak$$choice1' '_Bool'
    |   |   |-ImplicitCastExpr 0x55d9bd6262a8 <col:77, col:78> 'int' <LValueToRValue>
    |   |   | `-UnaryOperator 0x55d9bd626240 <col:77, col:78> 'int' lvalue prefix '*' cannot overflow
    |   |   |   `-ImplicitCastExpr 0x55d9bd626228 <col:78> 'int *' <LValueToRValue>
    |   |   |     `-DeclRefExpr 0x55d9bd626208 <col:78> 'int *' lvalue Var 0x55d9bd618ec8 '__unbuffered_p2_EAX$read_delayed_var' 'int *'
    |   |   `-ImplicitCastExpr 0x55d9bd6262c0 <col:117> 'int' <LValueToRValue>
    |   |     `-DeclRefExpr 0x55d9bd626258 <col:117> 'int' lvalue Var 0x55d9bd6187d8 '__unbuffered_p2_EAX' 'int'
    |   `-ImplicitCastExpr 0x55d9bd626378 <col:140> 'int' <LValueToRValue>
    |     `-DeclRefExpr 0x55d9bd626328 <col:140> 'int' lvalue Var 0x55d9bd6187d8 '__unbuffered_p2_EAX' 'int'
    |-BinaryOperator 0x55d9bd626690 <line:856:3, col:113> '_Bool' '='
    | |-DeclRefExpr 0x55d9bd6263e0 <col:3> '_Bool' lvalue Var 0x55d9bd6191a8 'main$tmp_guard1' '_Bool'
    | `-ImplicitCastExpr 0x55d9bd626678 <col:21, col:113> '_Bool' <IntegralToBoolean>
    |   `-UnaryOperator 0x55d9bd626660 <col:21, col:113> 'int' prefix '!' cannot overflow
    |     `-ParenExpr 0x55d9bd626640 <col:22, col:113> 'int'
    |       `-BinaryOperator 0x55d9bd626620 <col:23, col:112> 'int' '&&'
    |         |-BinaryOperator 0x55d9bd626588 <col:23, col:84> 'int' '&&'
    |         | |-BinaryOperator 0x55d9bd6264f0 <col:23, col:56> 'int' '&&'
    |         | | |-BinaryOperator 0x55d9bd626458 <col:23, col:28> 'int' '=='
    |         | | | |-ImplicitCastExpr 0x55d9bd626440 <col:23> 'int' <LValueToRValue>
    |         | | | | `-DeclRefExpr 0x55d9bd626400 <col:23> 'int' lvalue Var 0x55d9bd61ac98 'y' 'int'
    |         | | | `-IntegerLiteral 0x55d9bd626420 <col:28> 'int' 2
    |         | | `-BinaryOperator 0x55d9bd6264d0 <col:33, col:56> 'int' '=='
    |         | |   |-ImplicitCastExpr 0x55d9bd6264b8 <col:33> 'int' <LValueToRValue>
    |         | |   | `-DeclRefExpr 0x55d9bd626478 <col:33> 'int' lvalue Var 0x55d9bd618598 '__unbuffered_p0_EAX' 'int'
    |         | |   `-IntegerLiteral 0x55d9bd626498 <col:56> 'int' 2
    |         | `-BinaryOperator 0x55d9bd626568 <col:61, col:84> 'int' '=='
    |         |   |-ImplicitCastExpr 0x55d9bd626550 <col:61> 'int' <LValueToRValue>
    |         |   | `-DeclRefExpr 0x55d9bd626510 <col:61> 'int' lvalue Var 0x55d9bd6186b8 '__unbuffered_p0_EBX' 'int'
    |         |   `-IntegerLiteral 0x55d9bd626530 <col:84> 'int' 0
    |         `-BinaryOperator 0x55d9bd626600 <col:89, col:112> 'int' '=='
    |           |-ImplicitCastExpr 0x55d9bd6265e8 <col:89> 'int' <LValueToRValue>
    |           | `-DeclRefExpr 0x55d9bd6265a8 <col:89> 'int' lvalue Var 0x55d9bd6187d8 '__unbuffered_p2_EAX' 'int'
    |           `-IntegerLiteral 0x55d9bd6265c8 <col:112> 'int' 1
    |-CallExpr 0x55d9bd6266e8 <line:857:3, col:25> 'void'
    | `-ImplicitCastExpr 0x55d9bd6266d0 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x55d9bd6266b0 <col:3> 'void ()' Function 0x55d9bd5bf060 '__VERIFIER_atomic_end' 'void ()'
    |-CallExpr 0x55d9bd626760 <line:858:3, col:36> 'void'
    | |-ImplicitCastExpr 0x55d9bd626748 <col:3> 'void (*)(int)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x55d9bd626708 <col:3> 'void (int)' Function 0x55d9bd5bed28 '__VERIFIER_assert' 'void (int)'
    | `-ImplicitCastExpr 0x55d9bd6267a0 <col:21> 'int' <IntegralCast>
    |   `-ImplicitCastExpr 0x55d9bd626788 <col:21> '_Bool' <LValueToRValue>
    |     `-DeclRefExpr 0x55d9bd626728 <col:21> '_Bool' lvalue Var 0x55d9bd6191a8 'main$tmp_guard1' '_Bool'
    `-ReturnStmt 0x55d9bd6267d8 <line:859:3, col:10>
      `-IntegerLiteral 0x55d9bd6267b8 <col:10> 'int' 0
